-- Time: 2024/06/09 23:54:48
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4207558824
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, c1, prefix = 292); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '35732'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.auto_vacuum = NONE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (1194689258), ('◨?1苪D_P'), (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.659255046875173 WHERE NULL; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 2111668840); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0, c1) VALUES (NULL, NULL, NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 407404794); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES ('K', ')&'), (0.7274352028800116, 0.44520753556426473), (NULL, '618735080'); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (0x5e3e0ee); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES ('-192048242', 0.7643872563087907), ('0.7643872563087907', 0.32133062530783385), (x'', '0.659255046875173'); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '61144'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('1/Dx3Z੨', 0.7537538959949067); -- 1ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 8); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c1) VALUES (0.12932809516010857); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '45681'); -- 1ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES ('', x'', x'4f22'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
REINDEX  vt1; -- 0ms;
REINDEX  rt0; -- 1ms;
INSERT OR FAIL INTO rt0(c1) VALUES (-1.92048242E8), (NULL), (0.7274352028800116); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (0.3660783244889583, '-1957676077'), (0.8553352943495532, NULL), (NULL, ''); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0) VALUES (0.11018749628556479, x''); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO vt1(c1, c0) VALUES (0.32133062530783385, x''); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '28616'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 738731133); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
COMMIT; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0))) COLLATE BINARY) ORDER BY STRFTIME(vt1.c0, '◨?1苪D_P' COLLATE BINARY, vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY STRFTIME(vt1.c0, '◨?1苪D_P' COLLATE BINARY, vt1.c0)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0))) COLLATE BINARY) ORDER BY STRFTIME(vt1.c0, '◨?1苪D_P' COLLATE BINARY, vt1.c0)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))>((vt1.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY STRFTIME(vt1.c0, '◨?1苪D_P' COLLATE BINARY, vt1.c0)  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0))>((vt1.c0))) COLLATE BINARY) ORDER BY STRFTIME(vt1.c0, '◨?1苪D_P' COLLATE BINARY, vt1.c0)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (LOWER(((rt0.c0)>=(-50825927))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c0)>=(-50825927)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(((rt0.c0)>=(-50825927))));
SELECT SUM(count) FROM (SELECT ((LOWER(((rt0.c0)>=(-50825927)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LOWER(((rt0.c0)>=(-50825927))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2)=(6.1873508E8))  WHEN rt0.c1 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 ELSE rt0.c0 END) ORDER BY ((((vt1.c1)*(vt1.c0)))+(IFNULL(rt0.c0, rt0.c2))) ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((rt0.c1)AND(rt0.c1)))) AND ((((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)=(6.1873508E8))  WHEN rt0.c1 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 ELSE rt0.c0 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c1)*(vt1.c0)))+(IFNULL(rt0.c0, rt0.c2))) ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((rt0.c1)AND(rt0.c1)))) AND ((((rt0.c2) ISNULL)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2)=(6.1873508E8))  WHEN rt0.c1 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 ELSE rt0.c0 END) ORDER BY ((((vt1.c1)*(vt1.c0)))+(IFNULL(rt0.c0, rt0.c2))) ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((rt0.c1)AND(rt0.c1)))) AND ((((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2)=(6.1873508E8))  WHEN rt0.c1 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 ELSE rt0.c0 END) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((vt1.c1)*(vt1.c0)))+(IFNULL(rt0.c0, rt0.c2))) ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((rt0.c1)AND(rt0.c1)))) AND ((((rt0.c2) ISNULL)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CASE ((rt0.c2)=(6.1873508E8))  WHEN rt0.c1 COLLATE BINARY THEN CAST(vt1.c0 AS NUMERIC) WHEN rt0.c2 COLLATE BINARY THEN rt0.c2 COLLATE NOCASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN rt0.c2 ELSE rt0.c0 END) ORDER BY ((((vt1.c1)*(vt1.c0)))+(IFNULL(rt0.c0, rt0.c2))) ASC  NULLS FIRST, (((rt0.c0)) NOT BETWEEN ((((rt0.c1)AND(rt0.c1)))) AND ((((rt0.c2) ISNULL))));
SELECT * FROM vt1 WHERE (NULLIF(vt1.c1, vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c1, vt1.c1)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULLIF(vt1.c1, vt1.c1));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c1, vt1.c1)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (NULLIF(vt1.c1, vt1.c1));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CASE WHEN vt1.c1 THEN rt0.c0 END, ((rt0.c0)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE WHEN vt1.c1 THEN rt0.c0 END, ((rt0.c0)IS(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CASE WHEN vt1.c1 THEN rt0.c0 END, ((rt0.c0)IS(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((COALESCE(CASE WHEN vt1.c1 THEN rt0.c0 END, ((rt0.c0)IS(rt0.c2)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (COALESCE(CASE WHEN vt1.c1 THEN rt0.c0 END, ((rt0.c0)IS(rt0.c2))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (~ (((vt1.c0) IS FALSE))) WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN MIN(rt0.c1, rt0.c0, rt0.c0, rt0.c0) THEN (~ (vt1.c1)) END) ORDER BY (- ((('-50825927')==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN MIN(rt0.c1, rt0.c0, rt0.c0, rt0.c0) THEN (~ (vt1.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (~ (((vt1.c0) IS FALSE))) ORDER BY (- ((('-50825927')=(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (~ (((vt1.c0) IS FALSE))) WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN MIN(rt0.c1, rt0.c0, rt0.c0, rt0.c0) THEN (~ (vt1.c1)) END) ORDER BY (- ((('-50825927')==(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE NOCASE  WHEN MIN(rt0.c1, rt0.c0, rt0.c0, rt0.c0) THEN (~ (vt1.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (~ (((vt1.c0) IS FALSE))) ORDER BY (- ((('-50825927')=(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (~ (((vt1.c0) IS FALSE))) WHERE (CASE vt1.c0 COLLATE NOCASE  WHEN MIN(rt0.c1, rt0.c0, rt0.c0, rt0.c0) THEN (~ (vt1.c1)) END) ORDER BY (- ((('-50825927')==(rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c2 IN (vt1.c0)) COLLATE BINARY WHERE ((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(CAST(618735080 AS BLOB)))) ORDER BY 0.052207037156533964 ASC;
SELECT SUM(count) FROM (SELECT (((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(CAST(618735080 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c2 IN (vt1.c0)) COLLATE BINARY ORDER BY 0.052207037156533964 ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c2 IN (vt1.c0)) COLLATE BINARY WHERE ((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(CAST(618735080 AS BLOB)))) ORDER BY 0.052207037156533964 ASC;
SELECT SUM(count) FROM (SELECT (((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(CAST(618735080 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c2 IN (vt1.c0)) COLLATE BINARY ORDER BY 0.052207037156533964 ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON (rt0.c2 IN (vt1.c0)) COLLATE BINARY WHERE ((((((x'')) BETWEEN ((rt0.c1)) AND ((rt0.c1))))||(CAST(618735080 AS BLOB)))) ORDER BY 0.052207037156533964 ASC;
SELECT * FROM vt1 WHERE (((COALESCE(vt1.c0, vt1.c0, vt1.c1, vt1.c0))||(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt1.c0, vt1.c0, vt1.c1, vt1.c0))||(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((COALESCE(vt1.c0, vt1.c0, vt1.c1, vt1.c0))||(vt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(vt1.c0, vt1.c0, vt1.c1, vt1.c0))||(vt1.c1))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((COALESCE(vt1.c0, vt1.c0, vt1.c1, vt1.c0))||(vt1.c1)));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(vt1.c0)) COLLATE NOCASE COLLATE RTRIM WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(vt1.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(vt1.c0)) COLLATE NOCASE COLLATE RTRIM WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(vt1.c0)) COLLATE NOCASE COLLATE RTRIM);
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(vt1.c0)) COLLATE NOCASE COLLATE RTRIM WHERE (vt1.c1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(rt0.c0))) AND (((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(rt0.c0))) AND (((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(rt0.c0))) AND (((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(rt0.c0))) AND (((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c0) IS TRUE)) BETWEEN (((rt0.c1)<<(rt0.c0))) AND (((((((((rt0.c1)OR(vt1.c0)))AND(vt1.c0)))AND(x'')))OR(rt0.c0)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c0) IS TRUE) AS INTEGER)) ORDER BY ROUND(((rt0.c1)|(rt0.c1)), (rt0.c0 IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ROUND(((rt0.c1)|(rt0.c1)), (rt0.c0 IN (vt1.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c0) IS TRUE) AS INTEGER)) ORDER BY ROUND(((rt0.c1)|(rt0.c1)), (rt0.c0 IN (vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ROUND(((rt0.c1)|(rt0.c1)), (rt0.c0 IN (vt1.c0))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c0) IS TRUE) AS INTEGER)) ORDER BY ROUND(((rt0.c1)|(rt0.c1)), (rt0.c0 IN (vt1.c0)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (1.794640488E9))) BETWEEN (((rt0.c1)*(rt0.c0))) AND (INSTR(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt1.c0) AND (1.794640488E9))) BETWEEN (((rt0.c1)*(rt0.c0))) AND (INSTR(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (1.794640488E9))) BETWEEN (((rt0.c1)*(rt0.c0))) AND (INSTR(rt0.c0, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (vt1.c0) AND (1.794640488E9))) BETWEEN (((rt0.c1)*(rt0.c0))) AND (INSTR(rt0.c0, rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (1.794640488E9))) BETWEEN (((rt0.c1)*(rt0.c0))) AND (INSTR(rt0.c0, rt0.c0))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (('op') NOT BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, rt0.c2))>((((rt0.c1) IS TRUE), ((rt0.c0) IS FALSE), ((0.8092743648828024)<(rt0.c0)), ((rt0.c2) NOTNULL), (NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (('op') NOT BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, rt0.c2))>((((rt0.c1) IS TRUE), ((rt0.c0) IS FALSE), ((0.8092743648828024)<(rt0.c0)), ((rt0.c2) NOTNULL), (NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (('op') NOT BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, rt0.c2))>((((rt0.c1) IS TRUE), ((rt0.c0) IS FALSE), ((0.8092743648828024)<(rt0.c0)), ((rt0.c2) NOTNULL), (NOT (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (('op') NOT BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, rt0.c2))>((((rt0.c1) IS TRUE), ((rt0.c0) IS FALSE), ((0.8092743648828024)<(rt0.c0)), ((rt0.c2) NOTNULL), (NOT (rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1 IN ()), (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (('op') NOT BETWEEN (rt0.c0) AND (rt0.c1)), CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END, rt0.c2))>((((rt0.c1) IS TRUE), ((rt0.c0) IS FALSE), ((0.8092743648828024)<(rt0.c0)), ((rt0.c2) NOTNULL), (NOT (rt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((((((('618735080')AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt1.c1))) AND (CASE WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN ((((((((('618735080')AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt1.c1))) AND (CASE WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((((((('618735080')AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt1.c1))) AND (CASE WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) NOT BETWEEN ((((((((('618735080')AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt1.c1))) AND (CASE WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1 IN ())) NOT BETWEEN ((((((((('618735080')AND(vt1.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(vt1.c1))) AND (CASE WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c1 END)));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c1)GLOB(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)GLOB(vt1.c0))) NOTNULL));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c1)GLOB(vt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)GLOB(vt1.c0))) NOTNULL));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY ((((vt1.c1)GLOB(vt1.c0))) NOTNULL);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)>(vt1.c1)))|(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1 COLLATE RTRIM)OR(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 END)))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(vt1.c1)))|(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1 COLLATE RTRIM)OR(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 END)))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)>(vt1.c1)))|(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1 COLLATE RTRIM)OR(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 END)))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)>(vt1.c1)))|(CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1 COLLATE RTRIM)OR(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 END)))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE (((((rt0.c0)>(vt1.c1)))|(CAST(rt0.c1 AS NUMERIC)))) ORDER BY ((((rt0.c1 COLLATE RTRIM)OR(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 END)))AND(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))) ASC;
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c1))) COLLATE RTRIM) ORDER BY 'b2BR', vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<((vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY 'b2BR', vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c1))) COLLATE RTRIM) ORDER BY 'b2BR', vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0))<((vt1.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY 'b2BR', vt1.c0  NULLS LAST);
SELECT * FROM vt1 WHERE ((((vt1.c0))<((vt1.c1))) COLLATE RTRIM) ORDER BY 'b2BR', vt1.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.4001898421079304 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4001898421079304 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.4001898421079304 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.4001898421079304 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.4001898421079304 COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array_length(CASE 'T8	'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, ((rt0.c0) IS TRUE))) ORDER BY (((~ (rt0.c1)))-(x''))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC, (((x'' IN ())) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE 'T8	'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, ((rt0.c0) IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))-(x''))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC, (((x'' IN ())) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (json_array_length(CASE 'T8	'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, ((rt0.c0) IS TRUE))) ORDER BY (((~ (rt0.c1)))-(x''))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC, (((x'' IN ())) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CASE 'T8	'  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END, ((rt0.c0) IS TRUE))) IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c1)))-(x''))  NULLS FIRST, (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)) IN (((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))) ASC, (((x'' IN ())) NOTNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY CASE vt1.c1 COLLATE BINARY  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1 COLLATE BINARY  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY CASE vt1.c1 COLLATE BINARY  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY CASE vt1.c1 COLLATE BINARY  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY CASE vt1.c1 COLLATE BINARY  WHEN ((vt1.c0) ISNULL) THEN ((((vt1.c0)OR(vt1.c1)))AND(vt1.c1)) END;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((~ (NULL)))AND(((vt1.c1)<=(rt0.c2)))))OR(1194689258)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (NULL)))AND(((vt1.c1)<=(rt0.c2)))))OR(1194689258))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((~ (NULL)))AND(((vt1.c1)<=(rt0.c2)))))OR(1194689258)));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (NULL)))AND(((vt1.c1)<=(rt0.c2)))))OR(1194689258))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((~ (NULL)))AND(((vt1.c1)<=(rt0.c2)))))OR(1194689258)));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY (NOT (CASE 0.9542603708574922  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CASE 0.9542603708574922  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY (NOT (CASE 0.9542603708574922  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CASE 0.9542603708574922  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END AS TEXT)) ORDER BY (NOT (CASE 0.9542603708574922  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ('!S');
SELECT SUM(count) FROM (SELECT ALL (('!S') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('!S');
SELECT SUM(count) FROM (SELECT ALL (('!S') IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ('!S');
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE TRIM(DISTINCT NULL)  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(DISTINCT NULL)  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE TRIM(DISTINCT NULL)  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE TRIM(DISTINCT NULL)  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE TRIM(DISTINCT NULL)  WHEN ((rt0.c0) ISNULL) THEN CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END END  NULLS LAST;
SELECT * FROM vt1 WHERE (TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (TYPEOF(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ('');
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2)|(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2)|(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))OR(((rt0.c1)>=(rt0.c2)))))AND(((rt0.c2)|(rt0.c0)))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((rt0.c0 COLLATE RTRIM, vt1.c1, vt1.c1))<(((((rt0.c1, rt0.c1, vt1.c1))>((vt1.c0, rt0.c0, rt0.c0))), (- (vt1.c0)), ((((((((1794640488)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c1))))) WHERE (CAST(TYPEOF(DISTINCT vt1.c0) AS BLOB)) ORDER BY (- (CAST(vt1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT vt1.c0) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c0 COLLATE RTRIM, vt1.c1, vt1.c1))<(((((rt0.c1, rt0.c1, vt1.c1))>((vt1.c0, rt0.c0, rt0.c0))), (- (vt1.c0)), ((((((((1794640488)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c1))))) ORDER BY (- (CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((rt0.c0 COLLATE RTRIM, vt1.c1, vt1.c1))<(((((rt0.c1, rt0.c1, vt1.c1))>((vt1.c0, rt0.c0, rt0.c0))), (- (vt1.c0)), ((((((((1794640488)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c1))))) WHERE (CAST(TYPEOF(DISTINCT vt1.c0) AS BLOB)) ORDER BY (- (CAST(vt1.c1 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT vt1.c0) AS BLOB)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON (((rt0.c0 COLLATE RTRIM, vt1.c1, vt1.c1))<(((((rt0.c1, rt0.c1, vt1.c1))>((vt1.c0, rt0.c0, rt0.c0))), (- (vt1.c0)), ((((((((1794640488)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c1))))) ORDER BY (- (CAST(vt1.c1 AS TEXT))));
SELECT ALL * FROM rt0 INNER JOIN vt1 ON (((rt0.c0 COLLATE RTRIM, vt1.c1, vt1.c1))<(((((rt0.c1, rt0.c1, vt1.c1))>((vt1.c0, rt0.c0, rt0.c0))), (- (vt1.c0)), ((((((((1794640488)OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c0)))AND(vt1.c1))))) WHERE (CAST(TYPEOF(DISTINCT vt1.c0) AS BLOB)) ORDER BY (- (CAST(vt1.c1 AS TEXT)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((~ (vt1.c0)))) WHERE ((x'e0c4' IN ()));
SELECT SUM(count) FROM (SELECT (((x'e0c4' IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((~ (vt1.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((~ (vt1.c0)))) WHERE ((x'e0c4' IN ()));
SELECT SUM(count) FROM (SELECT (((x'e0c4' IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((~ (vt1.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (~ ((~ (vt1.c0)))) WHERE ((x'e0c4' IN ()));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))OR(rt0.c0 COLLATE RTRIM)))OR((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c1 AS NUMERIC))OR(rt0.c0 COLLATE RTRIM)))OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))OR(rt0.c0 COLLATE RTRIM)))OR((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt1.c1 AS NUMERIC))OR(rt0.c0 COLLATE RTRIM)))OR((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((CAST(vt1.c1 AS NUMERIC))OR(rt0.c0 COLLATE RTRIM)))OR((~ (rt0.c2)))));
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(rt0.c0)))AND(MIN(rt0.c1, rt0.c1))))AND(rt0.c1)))AND(LTRIM(rt0.c1)))) ORDER BY (CAST(rt0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY)), (- ((NOT (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))OR(rt0.c0)))AND(MIN(rt0.c1, rt0.c1))))AND(rt0.c1)))AND(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY)), (- ((NOT (rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(rt0.c0)))AND(MIN(rt0.c1, rt0.c1))))AND(rt0.c1)))AND(LTRIM(rt0.c1)))) ORDER BY (CAST(rt0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY)), (- ((NOT (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt0.c1 AS INTEGER))OR(rt0.c0)))AND(MIN(rt0.c1, rt0.c1))))AND(rt0.c1)))AND(LTRIM(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY)), (- ((NOT (rt0.c0))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((((((CAST(rt0.c1 AS INTEGER))OR(rt0.c0)))AND(MIN(rt0.c1, rt0.c1))))AND(rt0.c1)))AND(LTRIM(rt0.c1)))) ORDER BY (CAST(rt0.c0 AS TEXT) IN (rt0.c1 COLLATE BINARY)), (- ((NOT (rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CHAR(CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CHAR(CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CHAR(CAST(rt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((CHAR(CAST(rt0.c0 AS TEXT))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1);
SELECT * FROM rt0 NATURAL JOIN vt1 WHERE (CHAR(CAST(rt0.c0 AS TEXT)));
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT NULL) WHERE (LTRIM(((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((vt1.c0)AND(rt0.c2)))) ORDER BY ((json_array_length(vt1.c1, rt0.c1))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((vt1.c0)AND(rt0.c2)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT NULL) ORDER BY ((json_array_length(vt1.c1, rt0.c1))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT NULL) WHERE (LTRIM(((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((vt1.c0)AND(rt0.c2)))) ORDER BY ((json_array_length(vt1.c1, rt0.c1))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((((vt1.c0)AND(vt1.c1)))OR(rt0.c2)), ((vt1.c0)AND(rt0.c2)))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c0 AS INTEGER)) NOT NULL) ORDER BY ((json_array_length(vt1.c1, rt0.c1))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))  NULLS LAST);
SELECT * FROM vt1 WHERE ((NOT (((NULL)>=('◨')))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)>=('◨'))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (((NULL)>=('◨')))));
SELECT SUM(count) FROM (SELECT (((NOT (((NULL)>=('◨'))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (((NULL)>=('◨')))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, (((vt1.c1)) BETWEEN (((~ (0xffffffff8310771a)))) AND (((((0.4262345392077551, vt1.c1, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, (((vt1.c1)) BETWEEN (((~ (0xffffffff8310771a)))) AND (((((0.4262345392077551, vt1.c1, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, (((vt1.c1)) BETWEEN (((~ (0xffffffff8310771a)))) AND (((((0.4262345392077551, vt1.c1, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS TEXT) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, (((vt1.c1)) BETWEEN (((~ (0xffffffff8310771a)))) AND (((((0.4262345392077551, vt1.c1, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE RTRIM) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) NOT NULL)  NULLS FIRST, (((vt1.c1)) BETWEEN (((~ (0xffffffff8310771a)))) AND (((((0.4262345392077551, vt1.c1, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) ASC;
SELECT * FROM rt0 CROSS JOIN vt1 ON rt0.c1 WHERE (((rt0.c2)OR(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c1);
SELECT * FROM rt0 CROSS JOIN vt1 ON rt0.c1 WHERE (((rt0.c2)OR(rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c2)OR(rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON rt0.c1);
SELECT * FROM rt0 CROSS JOIN vt1 ON rt0.c1 WHERE (((rt0.c2)OR(rt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(vt1.c1 COLLATE BINARY AS INTEGER) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(vt1.c1 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(vt1.c1 COLLATE BINARY AS INTEGER) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(vt1.c1 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON CAST(vt1.c1 COLLATE BINARY AS INTEGER) WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((((vt1.c0)||(rt0.c2)))AND(((vt1.c0)/(vt1.c1)))))AND(HEX(DISTINCT rt0.c2))))OR(((((rt0.c0)AND(rt0.c1)))AND(x'')))))OR(((vt1.c0) IS FALSE))) WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((((vt1.c0)||(rt0.c2)))AND(((vt1.c0)/(vt1.c1)))))AND(HEX(DISTINCT rt0.c2))))OR(((((rt0.c0)AND(rt0.c1)))AND(x'')))))OR(((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((((vt1.c0)||(rt0.c2)))AND(((vt1.c0)/(vt1.c1)))))AND(HEX(DISTINCT rt0.c2))))OR(((((rt0.c0)AND(rt0.c1)))AND(x'')))))OR(((vt1.c0) IS FALSE))) WHERE (CAST(vt1.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 AS REAL)) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((((((((((vt1.c0)||(rt0.c2)))AND(((vt1.c0)/(vt1.c1)))))AND(HEX(DISTINCT rt0.c2))))OR(((((rt0.c0)AND(rt0.c1)))AND(x'')))))OR(((vt1.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt1 ON ((((((((((vt1.c0)||(rt0.c2)))AND(((vt1.c0)/(vt1.c1)))))AND(HEX(DISTINCT rt0.c2))))OR(((((rt0.c0)AND(rt0.c1)))AND(x'')))))OR(((vt1.c0) IS FALSE))) WHERE (CAST(vt1.c0 AS REAL));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) ORDER BY 0X24e125e8 DESC  NULLS FIRST, ((DATETIME(rt0.c2, rt0.c2, x'', rt0.c0, x'8cc5')) IS FALSE)  NULLS FIRST, json_extract(rt0.c1, ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY 0x24e125e8 DESC  NULLS FIRST, ((DATETIME(rt0.c2, rt0.c2, x'', rt0.c0, x'8cc5')) IS FALSE)  NULLS FIRST, json_extract(rt0.c1, ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((vt1.c0) ISNULL) COLLATE RTRIM) ORDER BY 0X24e125e8 DESC  NULLS FIRST, ((DATETIME(rt0.c2, rt0.c2, x'', rt0.c0, x'8cc5')) IS FALSE)  NULLS FIRST, json_extract(rt0.c1, ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY 0x24e125e8 DESC  NULLS FIRST, ((DATETIME(rt0.c2, rt0.c2, x'', rt0.c0, x'8cc5')) IS FALSE)  NULLS FIRST, json_extract(rt0.c1, ((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c1))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c0, rt0.c1, vt1.c1)) BETWEEN ((rt0.c0, vt1.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))))OR((- (0.052207037156533964)))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, rt0.c1, vt1.c1)) BETWEEN ((rt0.c0, vt1.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))))OR((- (0.052207037156533964)))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c0, rt0.c1, vt1.c1)) BETWEEN ((rt0.c0, vt1.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))))OR((- (0.052207037156533964)))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((((((((vt1.c0, rt0.c1, vt1.c1)) BETWEEN ((rt0.c0, vt1.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))))OR((- (0.052207037156533964)))))OR(CAST(vt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c0, rt0.c1, vt1.c1)) BETWEEN ((rt0.c0, vt1.c1, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c2))))OR((- (0.052207037156533964)))))OR(CAST(vt1.c0 AS NUMERIC))));
SELECT * FROM rt0, vt1 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR('Uu')) AS INTEGER)) ORDER BY x'' DESC  NULLS LAST, (((vt1.c0) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)OR(rt0.c0)))OR('Uu')) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'' DESC  NULLS LAST, (((vt1.c0) ISNULL) IN ()) DESC);
SELECT * FROM rt0, vt1 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR('Uu')) AS INTEGER)) ORDER BY x'' DESC  NULLS LAST, (((vt1.c0) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)OR(rt0.c0)))OR('Uu')) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY x'' DESC  NULLS LAST, (((vt1.c0) ISNULL) IN ()) DESC);
SELECT * FROM rt0, vt1 WHERE (CAST(((((rt0.c2)OR(rt0.c0)))OR('Uu')) AS INTEGER)) ORDER BY x'' DESC  NULLS LAST, (((vt1.c0) ISNULL) IN ()) DESC;
SELECT * FROM rt0 WHERE (((rt0.c1)>>(rt0.c1)) COLLATE RTRIM) ORDER BY (NOT ((+ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((+ (NULL))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1)>>(rt0.c1)) COLLATE RTRIM) ORDER BY (NOT ((+ (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)>>(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((+ (NULL))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((rt0.c1)>>(rt0.c1)) COLLATE RTRIM) ORDER BY (NOT ((+ (NULL))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((UPPER(DISTINCT rt0.c2))OR(((rt0.c1)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c2))OR(((rt0.c1)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((UPPER(DISTINCT rt0.c2))OR(((rt0.c1)GLOB(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT rt0.c2))OR(((rt0.c1)GLOB(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((UPPER(DISTINCT rt0.c2))OR(((rt0.c1)GLOB(vt1.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0)))<<(x''))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)!=(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0)))<<(x''))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)!=(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0)))<<(x''))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)!=(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(rt0.c0)))<<(x''))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)!=(rt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0 WHERE (((((rt0.c2)AND(rt0.c0)))<<(x''))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c2 END)!=(rt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((+ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((+ (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c2)) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((+ (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(vt1.c1))LIKE(NULL))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt1.c1))LIKE(NULL))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(vt1.c1))LIKE(NULL))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT ((((LOWER(vt1.c1))LIKE(NULL))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((LOWER(vt1.c1))LIKE(NULL))) ORDER BY vt1.c1;
SELECT COUNT(*) FROM rt0 WHERE ((((HEX(rt0.c1), ('2137425308' IN ()), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))!=((((rt0.c0)LIKE(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)), ((rt0.c2)>>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(rt0.c1), ('2137425308' IN ()), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<>((((rt0.c0)LIKE(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)), ((rt0.c2)>>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((HEX(rt0.c1), ('2137425308' IN ()), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))!=((((rt0.c0)LIKE(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)), ((rt0.c2)>>(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((HEX(rt0.c1), ('2137425308' IN ()), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<>((((rt0.c0)LIKE(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)), ((rt0.c2)>>(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((HEX(rt0.c1), ('2137425308' IN ()), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))!=((((rt0.c0)LIKE(rt0.c0)), ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)), ((rt0.c2)>>(rt0.c1))))));
SELECT * FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c2)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c2)))) ISNULL) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c2)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c2)))) ISNULL) DESC);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c2) ORDER BY (((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, rt0.c2, rt0.c2)))) ISNULL) DESC;
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c1 END) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY ((rt0.c1 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY ((rt0.c1 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1 COLLATE RTRIM) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c2 COLLATE BINARY) ORDER BY ((rt0.c1 COLLATE RTRIM) NOTNULL)  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) ISNULL)) ORDER BY (((((((((vt1.c0 IN ()))AND(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END)))AND((~ (vt1.c0)))))AND(highlight(rt0.c2, vt1.c1, vt1.c0, vt1.c1))))OR(rt0.c0)), (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((vt1.c0 IN ()))AND(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END)))AND((~ (vt1.c0)))))AND(highlight(rt0.c2, vt1.c1, vt1.c0, vt1.c1))))OR(rt0.c0)), (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) ISNULL)) ORDER BY (((((((((vt1.c0 IN ()))AND(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END)))AND((~ (vt1.c0)))))AND(highlight(rt0.c2, vt1.c1, vt1.c0, vt1.c1))))OR(rt0.c0)), (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((vt1.c0 IN ()))AND(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END)))AND((~ (vt1.c0)))))AND(highlight(rt0.c2, vt1.c1, vt1.c0, vt1.c1))))OR(rt0.c0)), (vt1.c1 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((CAST(vt1.c1 AS NUMERIC)) ISNULL)) ORDER BY (((((((((vt1.c0 IN ()))AND(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c2 END)))AND((~ (vt1.c0)))))AND(highlight(rt0.c2, vt1.c1, vt1.c0, vt1.c1))))OR(rt0.c0)), (vt1.c1 IN ()) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CASE ((rt0.c2)|(rt0.c0))  WHEN (vt1.c1 IN ()) THEN json_valid(rt0.c2) END WHERE (9.8820334E7) ORDER BY json(rt0.c1) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((9.8820334E7) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CASE ((rt0.c2)|(rt0.c0))  WHEN (vt1.c1 IN ()) THEN json_valid(rt0.c2) END ORDER BY json(rt0.c1) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CASE ((rt0.c2)|(rt0.c0))  WHEN (vt1.c1 IN ()) THEN json_valid(rt0.c2) END WHERE (9.8820334E7) ORDER BY json(rt0.c1) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((9.8820334E7) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CASE ((rt0.c2)|(rt0.c0))  WHEN (vt1.c1 IN ()) THEN json_valid(rt0.c2) END ORDER BY json(rt0.c1) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN vt1 ON CASE ((rt0.c2)|(rt0.c0))  WHEN (vt1.c1 IN ()) THEN json_valid(rt0.c2) END WHERE (9.8820334E7) ORDER BY json(rt0.c1) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) ORDER BY TYPEOF(((rt0.c0)IS(1.194689258E9)))  NULLS FIRST, (((((rt0.c2)*(rt0.c1))))<>((rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c0)IS(1.194689258E9)))  NULLS FIRST, (((((rt0.c2)*(rt0.c1))))<>((rt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) ORDER BY TYPEOF(((rt0.c0)IS(1.194689258E9)))  NULLS FIRST, (((((rt0.c2)*(rt0.c1))))<>((rt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c0)IS(1.194689258E9)))  NULLS FIRST, (((((rt0.c2)*(rt0.c1))))<>((rt0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c1)))) NOTNULL)) ORDER BY TYPEOF(((rt0.c0)IS(1.194689258E9)))  NULLS FIRST, (((((rt0.c2)*(rt0.c1))))<>((rt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END IN ()) WHERE (((IFNULL(vt1.c0, 'TRUE')) BETWEEN (((rt0.c2)>>(x''))) AND (((((rt0.c0)AND(0.47654852753123256)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, 'TRUE')) BETWEEN (((rt0.c2)>>(x''))) AND (((((rt0.c0)AND(0.47654852753123256)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END IN ()) WHERE (((IFNULL(vt1.c0, 'TRUE')) BETWEEN (((rt0.c2)>>(x''))) AND (((((rt0.c0)AND(0.47654852753123256)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((IFNULL(vt1.c0, 'TRUE')) BETWEEN (((rt0.c2)>>(x''))) AND (((((rt0.c0)AND(0.47654852753123256)))OR(vt1.c0))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c1 END IN ()) WHERE (((IFNULL(vt1.c0, 'TRUE')) BETWEEN (((rt0.c2)>>(x''))) AND (((((rt0.c0)AND(0.47654852753123256)))OR(vt1.c0)))));
SELECT * FROM rt0 WHERE ((- (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((- (((rt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(NULL)))AND(SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c2)))/(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC, ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('0.12932809516010857'))) ASC, (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(NULL)))AND(SQLITE_COMPILEOPTION_USED(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c2)))/(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC, ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('0.12932809516010857'))) ASC, (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(NULL)))AND(SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c2)))/(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC, ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('0.12932809516010857'))) ASC, (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0 IN ()))OR(NULL)))AND(SQLITE_COMPILEOPTION_USED(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c2)))/(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC, ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('0.12932809516010857'))) ASC, (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c0 IN ()))OR(NULL)))AND(SQLITE_COMPILEOPTION_USED(rt0.c0)))) ORDER BY (((rt0.c0 IN (rt0.c2, rt0.c2)))/(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 END)) DESC, ABS(DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('0.12932809516010857'))) ASC, (rt0.c2 IN ()) COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((0.4797020447503927 IN ())) ORDER BY CAST((+ (vt1.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.4797020447503927 IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((+ (vt1.c1)) AS BLOB)  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((0.4797020447503927 IN ())) ORDER BY CAST((+ (vt1.c1)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((0.4797020447503927 IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST((+ (vt1.c1)) AS BLOB)  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((0.4797020447503927 IN ())) ORDER BY CAST((+ (vt1.c1)) AS BLOB)  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (CAST(rt0.c2 AS TEXT)))) ORDER BY (((((vt1.c1)||(rt0.c1))))=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))), ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c1)GLOB(vt1.c0)))))OR(rt0.c2)))OR(((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND('330510572')) ASC, (((vt1.c1)LIKE(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c1)||(rt0.c1))))=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))), ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c1)GLOB(vt1.c0)))))OR(rt0.c2)))OR(((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND('330510572')) ASC, (((vt1.c1)LIKE(rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (CAST(rt0.c2 AS TEXT)))) ORDER BY (((((vt1.c1)||(rt0.c1))))=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))), ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c1)GLOB(vt1.c0)))))OR(rt0.c2)))OR(((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND('330510572')) ASC, (((vt1.c1)LIKE(rt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((vt1.c1)||(rt0.c1))))=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))), ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c1)GLOB(vt1.c0)))))OR(rt0.c2)))OR(((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND('330510572')) ASC, (((vt1.c1)LIKE(rt0.c1)) IN ()) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((- (CAST(rt0.c2 AS TEXT)))) ORDER BY (((((vt1.c1)||(rt0.c1))))=((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 END))), ((((((((rt0.c0 COLLATE NOCASE)AND(((rt0.c1)GLOB(vt1.c0)))))OR(rt0.c2)))OR(((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)))))AND('330510572')) ASC, (((vt1.c1)LIKE(rt0.c1)) IN ()) ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM rt0 WHERE ('-50825927') ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (('-50825927') IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0 WHERE ('-50825927') ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT (('-50825927') IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM rt0 WHERE ('-50825927') ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL)) ORDER BY x'6a9f', (((((vt1.c1))>=((vt1.c0)))) BETWEEN (((vt1.c1) IS FALSE)) AND ((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY x'6a9f', (((((vt1.c1))>=((vt1.c0)))) BETWEEN (((vt1.c1) IS FALSE)) AND ((vt1.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL)) ORDER BY x'6a9f', (((((vt1.c1))>=((vt1.c0)))) BETWEEN (((vt1.c1) IS FALSE)) AND ((vt1.c0 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 ORDER BY x'6a9f', (((((vt1.c1))>=((vt1.c0)))) BETWEEN (((vt1.c1) IS FALSE)) AND ((vt1.c0 IN ()))) DESC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOTNULL)) ORDER BY x'6a9f', (((((vt1.c1))>=((vt1.c0)))) BETWEEN (((vt1.c1) IS FALSE)) AND ((vt1.c0 IN ()))) DESC;
SELECT * FROM vt1 WHERE (CASE WHEN '98820334' COLLATE NOCASE THEN ((vt1.c1)>>(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '98820334' COLLATE NOCASE THEN ((vt1.c1)>>(NULL)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN '98820334' COLLATE NOCASE THEN ((vt1.c1)>>(NULL)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '98820334' COLLATE NOCASE THEN ((vt1.c1)>>(NULL)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN '98820334' COLLATE NOCASE THEN ((vt1.c1)>>(NULL)) END);
SELECT * FROM vt1, rt0 WHERE (((((0.4931290136247999)/(vt1.c0)))AND(vt1.c0))) ORDER BY CAST(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.4931290136247999)/(vt1.c0)))AND(vt1.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC) ASC);
SELECT * FROM vt1, rt0 WHERE (((((0.4931290136247999)/(vt1.c0)))AND(vt1.c0))) ORDER BY CAST(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((0.4931290136247999)/(vt1.c0)))AND(vt1.c0))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC) ASC);
SELECT * FROM vt1, rt0 WHERE (((((0.4931290136247999)/(vt1.c0)))AND(vt1.c0))) ORDER BY CAST(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c1)) AS NUMERIC) ASC;
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)!=(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)!=(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)!=(vt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c1)!=(vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c1)!=(vt1.c1)) AS REAL));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c1) AND (((vt1.c0)/(vt1.c1))))) ORDER BY ((~ (vt1.c0)) IN ((vt1.c0 IN ()), CAST(vt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c1) AND (((vt1.c0)/(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((~ (vt1.c0)) IN ((vt1.c0 IN ()), CAST(vt1.c1 AS BLOB))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c1) AND (((vt1.c0)/(vt1.c1))))) ORDER BY ((~ (vt1.c0)) IN ((vt1.c0 IN ()), CAST(vt1.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c1) AND (((vt1.c0)/(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((~ (vt1.c0)) IN ((vt1.c0 IN ()), CAST(vt1.c1 AS BLOB))));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) ISNULL)) NOT BETWEEN (vt1.c1) AND (((vt1.c0)/(vt1.c1))))) ORDER BY ((~ (vt1.c0)) IN ((vt1.c0 IN ()), CAST(vt1.c1 AS BLOB)));
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0))>((rt0.c1))))AND((rt0.c1 IN ()))))OR(rt0.c2))) ORDER BY ((((((((((rt0.c0)<<(rt0.c1)))OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) ISNULL))))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))>((rt0.c1))))AND((rt0.c1 IN ()))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<<(rt0.c1)))OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) ISNULL))))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0))>((rt0.c1))))AND((rt0.c1 IN ()))))OR(rt0.c2))) ORDER BY ((((((((((rt0.c0)<<(rt0.c1)))OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) ISNULL))))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c0))>((rt0.c1))))AND((rt0.c1 IN ()))))OR(rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<<(rt0.c1)))OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) ISNULL))))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((((((rt0.c0))>((rt0.c1))))AND((rt0.c1 IN ()))))OR(rt0.c2))) ORDER BY ((((((((((rt0.c0)<<(rt0.c1)))OR(CAST(rt0.c0 AS BLOB))))AND(((rt0.c1) ISNULL))))AND(rt0.c2)))OR(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END) ISNULL)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 END) ISNULL));
SELECT * FROM vt1 WHERE ((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), LIKE(vt1.c1, '!s'), ((vt1.c1) ISNULL)))!=(((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), vt1.c0 COLLATE RTRIM, (NOT (vt1.c1)))))) ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), LIKE(vt1.c1, '!s'), ((vt1.c1) ISNULL)))<>(((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), vt1.c0 COLLATE RTRIM, (NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), LIKE(vt1.c1, '!s'), ((vt1.c1) ISNULL)))!=(((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), vt1.c0 COLLATE RTRIM, (NOT (vt1.c1)))))) ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), LIKE(vt1.c1, '!s'), ((vt1.c1) ISNULL)))<>(((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), vt1.c0 COLLATE RTRIM, (NOT (vt1.c1)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE)  NULLS LAST);
SELECT * FROM vt1 WHERE ((((((NULL) BETWEEN (vt1.c1) AND (vt1.c1)), LIKE(vt1.c1, '!s'), ((vt1.c1) ISNULL)))!=(((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))), vt1.c0 COLLATE RTRIM, (NOT (vt1.c1)))))) ORDER BY ((((vt1.c0) NOTNULL)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE)) ORDER BY ((rt0.c1)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)) ASC, CAST((NOT (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)) ASC, CAST((NOT (rt0.c1)) AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE)) ORDER BY ((rt0.c1)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)) ASC, CAST((NOT (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)) ASC, CAST((NOT (rt0.c1)) AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE)) ORDER BY ((rt0.c1)<<(CASE WHEN rt0.c0 THEN rt0.c2 END)) ASC, CAST((NOT (rt0.c1)) AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(0.26785511409219687)))AND((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(0.26785511409219687)))AND((((rt0.c0, rt0.c2, rt0.c2))==((rt0.c2, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(0.26785511409219687)))AND((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)OR(0.26785511409219687)))AND((((rt0.c0, rt0.c2, rt0.c2))==((rt0.c2, rt0.c1, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0)OR(0.26785511409219687)))AND((((rt0.c0, rt0.c2, rt0.c2))=((rt0.c2, rt0.c1, rt0.c1))))));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c1))) ORDER BY ((((NULL)OR(((vt1.c0) BETWEEN (vt1.c1) AND (-5.0825927E7)))))AND(((vt1.c1)/(vt1.c1)))), CAST(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY ((((NULL)OR(((vt1.c0) BETWEEN (vt1.c1) AND (-5.0825927E7)))))AND(((vt1.c1)/(vt1.c1)))), CAST(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)) AS TEXT));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c1))) ORDER BY ((((NULL)OR(((vt1.c0) BETWEEN (vt1.c1) AND (-5.0825927E7)))))AND(((vt1.c1)/(vt1.c1)))), CAST(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)) AS TEXT);
SELECT SUM(count) FROM (SELECT ((((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c1))) IS TRUE)  as count FROM vt1 ORDER BY ((((NULL)OR(((vt1.c0) BETWEEN (vt1.c1) AND (-5.0825927E7)))))AND(((vt1.c1)/(vt1.c1)))), CAST(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)) AS TEXT));
SELECT * FROM vt1 WHERE (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c0)))OR(vt1.c1)))AND(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c1))) ORDER BY ((((NULL)OR(((vt1.c0) BETWEEN (vt1.c1) AND (-5.0825927E7)))))AND(((vt1.c1)/(vt1.c1)))), CAST(((((vt1.c1)OR(vt1.c1)))AND(vt1.c0)) AS TEXT);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END) BETWEEN (TRIM(vt1.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END) BETWEEN (TRIM(vt1.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END) BETWEEN (TRIM(vt1.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END) BETWEEN (TRIM(vt1.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN x'' ELSE rt0.c0 END) BETWEEN (TRIM(vt1.c1)) AND (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM vt1 WHERE (0.9542603708574922) ORDER BY ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))>>('-1e500')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9542603708574922) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))>>('-1e500')) ASC);
SELECT ALL * FROM vt1 WHERE (0.9542603708574922) ORDER BY ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))>>('-1e500')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9542603708574922) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))>>('-1e500')) ASC);
SELECT ALL * FROM vt1 WHERE (0.9542603708574922) ORDER BY ((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))>>('-1e500')) ASC;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((((rt0.c0)<(vt1.c1)))) AND ((((vt1.c0) IS FALSE)))) WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) IS TRUE)) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((((rt0.c0)<(vt1.c1)))) AND ((((vt1.c0) IS FALSE)))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((((rt0.c0)<(vt1.c1)))) AND ((((vt1.c0) IS FALSE)))) WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) IS TRUE)) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((((rt0.c0)<(vt1.c1)))) AND ((((vt1.c0) IS FALSE)))) ORDER BY vt1.c0 ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (((rt0.c2)) BETWEEN ((((rt0.c0)<(vt1.c1)))) AND ((((vt1.c0) IS FALSE)))) WHERE ((((((vt1.c1)) BETWEEN ((rt0.c1)) AND ((vt1.c0)))) IS TRUE)) ORDER BY vt1.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)&(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(rt0.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)&(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)&(rt0.c2))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((vt1.c0)&(rt0.c2)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c0))) IS FALSE));
SELECT ALL * FROM vt1 WHERE (((NULLIF(vt1.c0, vt1.c0))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) ORDER BY (((~ (vt1.c1)))AND('1591365919')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c0, vt1.c0))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c1)))AND('1591365919')) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((NULLIF(vt1.c0, vt1.c0))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) ORDER BY (((~ (vt1.c1)))AND('1591365919')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(vt1.c0, vt1.c0))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) IS TRUE)  as count FROM vt1 ORDER BY (((~ (vt1.c1)))AND('1591365919')) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((NULLIF(vt1.c0, vt1.c0))>=((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((NULL)))))) ORDER BY (((~ (vt1.c1)))AND('1591365919')) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)AND(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)AND(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)AND(vt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)AND(vt1.c1)) IN ())) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0)AND(vt1.c1)) IN ()));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((TOTAL_CHANGES())AND((((rt0.c0))!=((rt0.c2))))))OR((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '')) AND ((x'', rt0.c0, x'')))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((TOTAL_CHANGES())AND((((rt0.c0))!=((rt0.c2))))))OR((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '')) AND ((x'', rt0.c0, x''))))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((TOTAL_CHANGES())AND((((rt0.c0))!=((rt0.c2))))))OR((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '')) AND ((x'', rt0.c0, x'')))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY ((((TOTAL_CHANGES())AND((((rt0.c0))!=((rt0.c2))))))OR((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '')) AND ((x'', rt0.c0, x''))))));
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY ((((TOTAL_CHANGES())AND((((rt0.c0))!=((rt0.c2))))))OR((((rt0.c0, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, rt0.c1, '')) AND ((x'', rt0.c0, x'')))));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY LIKELY(rt0.c2) COLLATE NOCASE, '-1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(rt0.c2) COLLATE NOCASE, '-1'  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY LIKELY(rt0.c2) COLLATE NOCASE, '-1'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(rt0.c2) COLLATE NOCASE, '-1'  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1) NOT NULL)) ORDER BY LIKELY(rt0.c2) COLLATE NOCASE, '-1'  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR('iv')))AND(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN rt0.c0 COLLATE RTRIM THEN '796050823' WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE (((rt0.c2))>=((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)OR('iv')))AND(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN rt0.c0 COLLATE RTRIM THEN '796050823' WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE (((rt0.c2))>=((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR('iv')))AND(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN rt0.c0 COLLATE RTRIM THEN '796050823' WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE (((rt0.c2))>=((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt0.c0)OR('iv')))AND(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN rt0.c0 COLLATE RTRIM THEN '796050823' WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE (((rt0.c2))>=((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN ((((rt0.c0)OR('iv')))AND(rt0.c2)) THEN ((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)) WHEN rt0.c0 COLLATE RTRIM THEN '796050823' WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) ELSE (((rt0.c2))>=((rt0.c0))) END);
SELECT COUNT(*) FROM vt1 WHERE (0.8922330970569494);
SELECT SUM(count) FROM (SELECT ALL ((0.8922330970569494) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.8922330970569494);
SELECT SUM(count) FROM (SELECT ALL ((0.8922330970569494) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (0.8922330970569494);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c1)&(rt0.c0)))) WHERE ((- ((((x'')) BETWEEN ((NULL)) AND ((vt1.c0)))))) ORDER BY ((((~ (rt0.c2))))<((rt0.c0))) ASC, (+ (0x7f66859c)), ('330510572' IN (((vt1.c1)!=(rt0.c2)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1)))), (((NULL))<>((((rt0.c2)>=(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((x'')) BETWEEN ((NULL)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c1)&(rt0.c0)))) ORDER BY ((((~ (rt0.c2))))<((rt0.c0))) ASC, (+ (0X7f66859c)), ('330510572' IN (((vt1.c1)!=(rt0.c2)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1)))), (((NULL))!=((((rt0.c2)>=(rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c1)&(rt0.c0)))) WHERE ((- ((((x'')) BETWEEN ((NULL)) AND ((vt1.c0)))))) ORDER BY ((((~ (rt0.c2))))<((rt0.c0))) ASC, (+ (0x7f66859c)), ('330510572' IN (((vt1.c1)!=(rt0.c2)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1)))), (((NULL))<>((((rt0.c2)>=(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((x'')) BETWEEN ((NULL)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1 NOT INDEXED RIGHT OUTER JOIN rt0 ON (NOT (((vt1.c1)&(rt0.c0)))) ORDER BY ((((~ (rt0.c2))))<((rt0.c0))) ASC, (+ (0X7f66859c)), ('330510572' IN (((vt1.c1)!=(rt0.c2)), ((vt1.c0) BETWEEN (rt0.c1) AND (vt1.c1)))), (((NULL))!=((((rt0.c2)>=(rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN ('') AND (0.7757727502943872))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN ('') AND (0.7757727502943872))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN ('') AND (0.7757727502943872))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN ('') AND (0.7757727502943872))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) BETWEEN ('') AND (0.7757727502943872))) AND (CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY (+ (0.0545885989499405)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (0.0545885989499405)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY (+ (0.0545885989499405)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (+ (0.0545885989499405)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0 COLLATE RTRIM) ISNULL)) ORDER BY (+ (0.0545885989499405)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON '◨' WHERE ((((~ (vt1.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2))))) ORDER BY (~ ((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '◨' ORDER BY (~ ((- (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON '◨' WHERE ((((~ (vt1.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2))))) ORDER BY (~ ((- (rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON '◨' ORDER BY (~ ((- (rt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 CROSS JOIN rt0 ON '◨' WHERE ((((~ (vt1.c0))) BETWEEN (CAST(rt0.c2 AS REAL)) AND ((- (rt0.c2))))) ORDER BY (~ ((- (rt0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt1 CROSS JOIN rt0 ON (- (vt1.c1)) COLLATE BINARY COLLATE NOCASE WHERE (CAST(CAST(vt1.c1 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (- (vt1.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt1 CROSS JOIN rt0 ON (- (vt1.c1)) COLLATE BINARY COLLATE NOCASE WHERE (CAST(CAST(vt1.c1 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (- (vt1.c1)) COLLATE BINARY COLLATE NOCASE);
SELECT * FROM vt1 CROSS JOIN rt0 ON (- (vt1.c1)) COLLATE BINARY COLLATE NOCASE WHERE (CAST(CAST(vt1.c1 AS REAL) AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c1)||('>')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c1)||('>'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c1)||('>')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c1)||('>'))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (((rt0.c2) NOTNULL)) AND (((rt0.c1)||('>')))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (''))) IS TRUE)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()), (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((((rt0.c1)-(rt0.c2)))))  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (''))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()), (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((((rt0.c1)-(rt0.c2)))))  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (''))) IS TRUE)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()), (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((((rt0.c1)-(rt0.c2)))))  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE BINARY COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (''))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c0 AS REAL) IN ()), (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((((rt0.c1)-(rt0.c2)))))  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE BINARY COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (''))) IS TRUE)) ORDER BY (CAST(rt0.c0 AS REAL) IN ()), (((rt0.c0)) NOT BETWEEN ((((rt0.c1) NOT NULL))) AND ((((rt0.c1)-(rt0.c2)))))  NULLS FIRST, ((rt0.c0) IS FALSE) COLLATE BINARY COLLATE BINARY;
SELECT COUNT(*) FROM vt1 WHERE ('<v>Uta');
SELECT SUM(count) FROM (SELECT ALL (('<v>Uta') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('<v>Uta');
SELECT SUM(count) FROM (SELECT ALL (('<v>Uta') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ('<v>Uta');
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)<(vt1.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c1))))) ORDER BY (((vt1.c0)-(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<(vt1.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)-(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)<(vt1.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c1))))) ORDER BY (((vt1.c0)-(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<(vt1.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)-(vt1.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1)<(vt1.c1))) NOT BETWEEN (vt1.c0) AND (((vt1.c0)>=(vt1.c1))))) ORDER BY (((vt1.c0)-(vt1.c0)) IN ());
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)) IN (((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)), LIKELY(vt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)) IN (((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)), LIKELY(vt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)) IN (((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)), LIKELY(vt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)) IN (((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)), LIKELY(vt1.c1))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY (((((((((((((rt0.c2)OR(rt0.c2)))OR(vt1.c1)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c0)) IN (((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))AND(vt1.c0)))OR(rt0.c1)), LIKELY(vt1.c1))) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))>=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))>=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))>=(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt1.c1 AS REAL))>=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c1 AS REAL))>=(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) IS FALSE) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) IS FALSE) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) IS FALSE));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) IS FALSE) WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN ((+ (rt0.c1))) AND ((~ (vt1.c0)))));
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (((((COALESCE(rt0.c1, rt0.c1, vt1.c0, NULL))AND(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c0)IS NOT(x''))))) ORDER BY ((UPPER(vt1.c0))<(rt0.c1)), (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c0, vt1.c1, rt0.c1)) BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((rt0.c0, vt1.c0, '좤N*&op'))), ((rt0.c1)<(vt1.c0))))<=((((NULL)>=(vt1.c0)), LTRIM(rt0.c1, rt0.c0), CAST(rt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(rt0.c1, rt0.c1, vt1.c0, NULL))AND(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c0)IS NOT(x''))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((UPPER(vt1.c0))<(rt0.c1)), (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c0, vt1.c1, rt0.c1)) BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((rt0.c0, vt1.c0, '좤N*&op'))), ((rt0.c1)<(vt1.c0))))<=((((NULL)>=(vt1.c0)), LTRIM(rt0.c1, rt0.c0), CAST(rt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, rt0.c2);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (((((COALESCE(rt0.c1, rt0.c1, vt1.c0, NULL))AND(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c0)IS NOT(x''))))) ORDER BY ((UPPER(vt1.c0))<(rt0.c1)), (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c0, vt1.c1, rt0.c1)) BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((rt0.c0, vt1.c0, '좤N*&op'))), ((rt0.c1)<(vt1.c0))))<=((((NULL)>=(vt1.c0)), LTRIM(rt0.c1, rt0.c0), CAST(rt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, rt0.c2;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(rt0.c1, rt0.c1, vt1.c0, NULL))AND(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c0)IS NOT(x''))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((UPPER(vt1.c0))<(rt0.c1)), (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c0, vt1.c1, rt0.c1)) BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((rt0.c0, vt1.c0, '좤N*&op'))), ((rt0.c1)<(vt1.c0))))<=((((NULL)>=(vt1.c0)), LTRIM(rt0.c1, rt0.c0), CAST(rt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, rt0.c2);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (((((COALESCE(rt0.c1, rt0.c1, vt1.c0, NULL))AND(CAST(rt0.c2 AS INTEGER))))AND(((rt0.c0)IS NOT(x''))))) ORDER BY ((UPPER(vt1.c0))<(rt0.c1)), (((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0)), (((rt0.c0, vt1.c1, rt0.c1)) BETWEEN ((NULL, vt1.c1, vt1.c1)) AND ((rt0.c0, vt1.c0, '좤N*&op'))), ((rt0.c1)<(vt1.c0))))<=((((NULL)>=(vt1.c0)), LTRIM(rt0.c1, rt0.c0), CAST(rt0.c0 AS NUMERIC)))) DESC  NULLS FIRST, rt0.c2;
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)-(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)-(rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(((rt0.c0)-(rt0.c2)) AS BLOB));
SELECT ALL * FROM vt1, rt0 WHERE ((((- (NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((- (NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((- (NULL))) NOT NULL));
SELECT * FROM vt1, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS INTEGER)) ORDER BY (~ (rt0.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) ORDER BY 0.9111816570710445 DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY 0.9111816570710445 DESC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) ORDER BY 0.9111816570710445 DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) IS TRUE)  as count FROM rt0 ORDER BY 0.9111816570710445 DESC);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))>((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)))) ORDER BY 0.9111816570710445 DESC;
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((~ (rt0.c2))))) ORDER BY (((vt1.c1, NULL, vt1.c1)) BETWEEN (((((rt0.c1))>=((rt0.c1))), vt1.c1 COLLATE NOCASE, (((rt0.c1, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, vt1.c1, rt0.c1))))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c1 END, NULL, ((((((((vt1.c1)AND(rt0.c0)))AND(NULL)))AND(vt1.c1)))AND(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c1, NULL, vt1.c1)) BETWEEN (((((rt0.c1))>=((rt0.c1))), vt1.c1 COLLATE NOCASE, (((rt0.c1, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, vt1.c1, rt0.c1))))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c1 END, NULL, ((((((((vt1.c1)AND(rt0.c0)))AND(NULL)))AND(vt1.c1)))AND(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((~ (rt0.c2))))) ORDER BY (((vt1.c1, NULL, vt1.c1)) BETWEEN (((((rt0.c1))>=((rt0.c1))), vt1.c1 COLLATE NOCASE, (((rt0.c1, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, vt1.c1, rt0.c1))))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c1 END, NULL, ((((((((vt1.c1)AND(rt0.c0)))AND(NULL)))AND(vt1.c1)))AND(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((vt1.c1, NULL, vt1.c1)) BETWEEN (((((rt0.c1))>=((rt0.c1))), vt1.c1 COLLATE NOCASE, (((rt0.c1, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, vt1.c1, rt0.c1))))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c1 END, NULL, ((((((((vt1.c1)AND(rt0.c0)))AND(NULL)))AND(vt1.c1)))AND(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) IN ((~ (rt0.c2))))) ORDER BY (((vt1.c1, NULL, vt1.c1)) BETWEEN (((((rt0.c1))>=((rt0.c1))), vt1.c1 COLLATE NOCASE, (((rt0.c1, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, vt1.c1, rt0.c1))))) AND ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN vt1.c1 END, NULL, ((((((((vt1.c1)AND(rt0.c0)))AND(NULL)))AND(vt1.c1)))AND(rt0.c2)))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1)||(x'')))))) ORDER BY ((((((((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(x'' COLLATE BINARY)))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((vt1.c1))))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1)||(x'')))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(x'' COLLATE BINARY)))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((vt1.c1))))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1)||(x'')))))) ORDER BY ((((((((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(x'' COLLATE BINARY)))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((vt1.c1))))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1)||(x'')))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((((((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(x'' COLLATE BINARY)))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((vt1.c1))))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1)) BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c1)||(x'')))))) ORDER BY ((((((((((((((((vt1.c0)OR(vt1.c1)))AND(rt0.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c1)))AND(x'' COLLATE BINARY)))AND((((rt0.c1)) NOT BETWEEN ((x'')) AND ((vt1.c1))))))AND(CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((CAST(vt1.c0 AS INTEGER))OR(CASE WHEN vt1.c1 THEN 'nE얇5''G' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)))OR(((vt1.c0) ISNULL))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(((vt1.c0)!=(0.7537538959949067)))))OR((+ (vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(vt1.c0 AS INTEGER))OR(CASE WHEN vt1.c1 THEN 'nE얇5''G' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)))OR(((vt1.c0) ISNULL))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(((vt1.c0)<>(0.7537538959949067)))))OR((+ (vt1.c0)))))OR(((vt1.c1)&(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((CAST(vt1.c0 AS INTEGER))OR(CASE WHEN vt1.c1 THEN 'nE얇5''G' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)))OR(((vt1.c0) ISNULL))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(((vt1.c0)!=(0.7537538959949067)))))OR((+ (vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((CAST(vt1.c0 AS INTEGER))OR(CASE WHEN vt1.c1 THEN 'nE얇5''G' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)))OR(((vt1.c0) ISNULL))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(((vt1.c0)<>(0.7537538959949067)))))OR((+ (vt1.c0)))))OR(((vt1.c1)&(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((((((((((CAST(vt1.c0 AS INTEGER))OR(CASE WHEN vt1.c1 THEN 'nE얇5''G' WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END)))OR(((vt1.c0) ISNULL))))OR((((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c0))))))AND(((vt1.c0)!=(0.7537538959949067)))))OR((+ (vt1.c0)))))OR(((vt1.c1)&(vt1.c1)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.7757727502943872)==((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7757727502943872)==((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.7757727502943872)==((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7757727502943872)==((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((0.7757727502943872)==((rt0.c2 IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY DATE(rt0.c0, ((rt0.c0)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY DATE(rt0.c0, ((rt0.c0)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY DATE(rt0.c0, ((rt0.c0)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY DATE(rt0.c0, ((rt0.c0)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY DATE(rt0.c0, ((rt0.c0)LIKE(rt0.c1)), CASE rt0.c1  WHEN rt0.c1 THEN NULL ELSE rt0.c2 END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(0.9167244800991853))) NOT BETWEEN (((rt0.c1)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt0.c0)))AND(0.9167244800991853))) NOT BETWEEN (((rt0.c1)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(0.9167244800991853))) NOT BETWEEN (((rt0.c1)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN rt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt0.c0)))AND(0.9167244800991853))) NOT BETWEEN (((rt0.c1)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((vt1.c0)OR(rt0.c0)))AND(0.9167244800991853))) NOT BETWEEN (((rt0.c1)>=(vt1.c0))) AND (CASE WHEN vt1.c0 THEN rt0.c0 END)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) COLLATE RTRIM WHERE (CASE (rt0.c0 IN (rt0.c1, vt1.c1))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) WHEN UNLIKELY(vt1.c0) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ABS(rt0.c2) THEN ((vt1.c1) BETWEEN (x'') AND (vt1.c0)) END) ORDER BY ((((((((CAST(vt1.c1 AS REAL))AND((+ ('Y됇}')))))OR((vt1.c0 IN ()))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)||(rt0.c2)))), ((((vt1.c1)IS NOT(rt0.c1)))>>(((rt0.c0)IS NOT(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN (rt0.c1, vt1.c1))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) WHEN UNLIKELY(vt1.c0) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ABS(rt0.c2) THEN ((vt1.c1) BETWEEN (x'') AND (vt1.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) COLLATE RTRIM ORDER BY ((((((((CAST(vt1.c1 AS REAL))AND((+ ('Y됇}')))))OR((vt1.c0 IN ()))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)||(rt0.c2)))), ((((vt1.c1)IS NOT(rt0.c1)))>>(((rt0.c0)IS NOT(NULL))))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) COLLATE RTRIM WHERE (CASE (rt0.c0 IN (rt0.c1, vt1.c1))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) WHEN UNLIKELY(vt1.c0) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ABS(rt0.c2) THEN ((vt1.c1) BETWEEN (x'') AND (vt1.c0)) END) ORDER BY ((((((((CAST(vt1.c1 AS REAL))AND((+ ('Y됇}')))))OR((vt1.c0 IN ()))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)||(rt0.c2)))), ((((vt1.c1)IS NOT(rt0.c1)))>>(((rt0.c0)IS NOT(NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt0.c0 IN (rt0.c1, vt1.c1))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) WHEN UNLIKELY(vt1.c0) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ABS(rt0.c2) THEN ((vt1.c1) BETWEEN (x'') AND (vt1.c0)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) COLLATE RTRIM ORDER BY ((((((((CAST(vt1.c1 AS REAL))AND((+ ('Y됇}')))))OR((vt1.c0 IN ()))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)||(rt0.c2)))), ((((vt1.c1)IS NOT(rt0.c1)))>>(((rt0.c0)IS NOT(NULL))))  NULLS FIRST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON (rt0.c2 IN ()) COLLATE RTRIM WHERE (CASE (rt0.c0 IN (rt0.c1, vt1.c1))  WHEN CASE vt1.c1  WHEN rt0.c0 THEN rt0.c2 END THEN (~ (rt0.c1)) WHEN UNLIKELY(vt1.c0) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2)) WHEN ABS(rt0.c2) THEN ((vt1.c1) BETWEEN (x'') AND (vt1.c0)) END) ORDER BY ((((((((CAST(vt1.c1 AS REAL))AND((+ ('Y됇}')))))OR((vt1.c0 IN ()))))OR(((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))))AND(((rt0.c0)||(rt0.c2)))), ((((vt1.c1)IS NOT(rt0.c1)))>>(((rt0.c0)IS NOT(NULL))))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)) WHEN (((vt1.c1)) BETWEEN ((x'3d87')) AND ((vt1.c0))) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE NULL END THEN vt1.c1 COLLATE NOCASE ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)) WHEN (((vt1.c1)) BETWEEN ((x'3d87')) AND ((vt1.c0))) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE NULL END THEN vt1.c1 COLLATE NOCASE ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)) WHEN (((vt1.c1)) BETWEEN ((x'3d87')) AND ((vt1.c0))) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE NULL END THEN vt1.c1 COLLATE NOCASE ELSE (NOT (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)) WHEN (((vt1.c1)) BETWEEN ((x'3d87')) AND ((vt1.c0))) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE NULL END THEN vt1.c1 COLLATE NOCASE ELSE (NOT (vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN vt1.c0 THEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt1.c1)) WHEN (((vt1.c1)) BETWEEN ((x'3d87')) AND ((vt1.c0))) THEN (NOT (vt1.c1)) WHEN CASE WHEN vt1.c1 THEN vt1.c1 ELSE NULL END THEN vt1.c1 COLLATE NOCASE ELSE (NOT (vt1.c0)) END);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN 0X6f2859e6 WHEN CASE vt1.c0  WHEN 0.0727228648163748 THEN 'hf' ELSE vt1.c0 END THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c1)==(vt1.c0)) END) ORDER BY ((((vt1.c0 IN ())))>((((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN 0x6f2859e6 WHEN CASE vt1.c0  WHEN 0.0727228648163748 THEN 'hf' ELSE vt1.c0 END THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c1)==(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))>((((vt1.c0)OR(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN 0X6f2859e6 WHEN CASE vt1.c0  WHEN 0.0727228648163748 THEN 'hf' ELSE vt1.c0 END THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c1)==(vt1.c0)) END) ORDER BY ((((vt1.c0 IN ())))>((((vt1.c0)OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN 0x6f2859e6 WHEN CASE vt1.c0  WHEN 0.0727228648163748 THEN 'hf' ELSE vt1.c0 END THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c1)==(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0 IN ())))>((((vt1.c0)OR(vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN ((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))AND(vt1.c1)))OR(vt1.c0)) THEN 0X6f2859e6 WHEN CASE vt1.c0  WHEN 0.0727228648163748 THEN 'hf' ELSE vt1.c0 END THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END WHEN vt1.c0 THEN ((vt1.c1)==(vt1.c0)) END) ORDER BY ((((vt1.c0 IN ())))>((((vt1.c0)OR(vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) DESC, CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) DESC, CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) DESC, CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) DESC, CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS REAL) COLLATE NOCASE) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) DESC, CAST(((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (vt1.c0);
SELECT ALL * FROM vt1 WHERE (LTRIM(((1305592626) BETWEEN (vt1.c0) AND (0.3115614513517758)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))) ORDER BY '796050823' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((1305592626) BETWEEN (vt1.c0) AND (0.3115614513517758)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY '796050823' DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (LTRIM(((1305592626) BETWEEN (vt1.c0) AND (0.3115614513517758)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))) ORDER BY '796050823' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((1305592626) BETWEEN (vt1.c0) AND (0.3115614513517758)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))) IS TRUE)  as count FROM vt1 ORDER BY '796050823' DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (LTRIM(((1305592626) BETWEEN (vt1.c0) AND (0.3115614513517758)), ((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)))) ORDER BY '796050823' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((+ (0.4797020447503927)) IN ())) ORDER BY (((((((((((vt1.c0, vt1.c1, vt1.c1))<((x'', vt1.c0, vt1.c1))))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) IS FALSE))))AND((vt1.c0 IN ()))))AND(((vt1.c1) NOT NULL))) ASC  NULLS LAST, CAST(NULL AS REAL) ASC, (((((vt1.c0)/(vt1.c0)), ((vt1.c1)GLOB(vt1.c1)), (((vt1.c0)) BETWEEN (('SKn6qJ')) AND ((vt1.c1)))))<=(((0X471f889 IN (vt1.c0, vt1.c1)), NULL, x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (0.4797020447503927)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c0, vt1.c1, vt1.c1))<((x'', vt1.c0, vt1.c1))))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) IS FALSE))))AND((vt1.c0 IN ()))))AND(((vt1.c1) NOT NULL))) ASC  NULLS LAST, CAST(NULL AS REAL) ASC, (((((vt1.c0)/(vt1.c0)), ((vt1.c1)GLOB(vt1.c1)), (((vt1.c0)) BETWEEN (('SKn6qJ')) AND ((vt1.c1)))))<=(((0X471f889 IN (vt1.c0, vt1.c1)), NULL, x''))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((+ (0.4797020447503927)) IN ())) ORDER BY (((((((((((vt1.c0, vt1.c1, vt1.c1))<((x'', vt1.c0, vt1.c1))))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) IS FALSE))))AND((vt1.c0 IN ()))))AND(((vt1.c1) NOT NULL))) ASC  NULLS LAST, CAST(NULL AS REAL) ASC, (((((vt1.c0)/(vt1.c0)), ((vt1.c1)GLOB(vt1.c1)), (((vt1.c0)) BETWEEN (('SKn6qJ')) AND ((vt1.c1)))))<=(((0X471f889 IN (vt1.c0, vt1.c1)), NULL, x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((+ (0.4797020447503927)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (((((((((((vt1.c0, vt1.c1, vt1.c1))<((x'', vt1.c0, vt1.c1))))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) IS FALSE))))AND((vt1.c0 IN ()))))AND(((vt1.c1) NOT NULL))) ASC  NULLS LAST, CAST(NULL AS REAL) ASC, (((((vt1.c0)/(vt1.c0)), ((vt1.c1)GLOB(vt1.c1)), (((vt1.c0)) BETWEEN (('SKn6qJ')) AND ((vt1.c1)))))<=(((0X471f889 IN (vt1.c0, vt1.c1)), NULL, x''))) ASC);
SELECT ALL * FROM rt0 WHERE ((((((((((((((rt0.c1 IN ()))OR(CAST(rt0.c2 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))AND(rt0.c2 COLLATE NOCASE)))AND(MIN(rt0.c1, rt0.c1))))OR(((rt0.c2) ISNULL))))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY LIKELY(((rt0.c1) IS TRUE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c1 IN ()))OR(CAST(rt0.c2 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))AND(rt0.c2 COLLATE NOCASE)))AND(MIN(rt0.c1, rt0.c1))))OR(((rt0.c2) ISNULL))))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((rt0.c1) IS TRUE)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((((((((((rt0.c1 IN ()))OR(CAST(rt0.c2 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))AND(rt0.c2 COLLATE NOCASE)))AND(MIN(rt0.c1, rt0.c1))))OR(((rt0.c2) ISNULL))))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY LIKELY(((rt0.c1) IS TRUE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c1 IN ()))OR(CAST(rt0.c2 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))AND(rt0.c2 COLLATE NOCASE)))AND(MIN(rt0.c1, rt0.c1))))OR(((rt0.c2) ISNULL))))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(((rt0.c1) IS TRUE)) ASC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((((((((((((rt0.c1 IN ()))OR(CAST(rt0.c2 AS REAL))))OR(rt0.c2 COLLATE NOCASE)))AND(rt0.c2 COLLATE NOCASE)))AND(MIN(rt0.c1, rt0.c1))))OR(((rt0.c2) ISNULL))))AND(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))))) ORDER BY LIKELY(((rt0.c1) IS TRUE)) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CASE WHEN 0.8173566790609177 THEN vt1.c0 ELSE 'zKUE6F' END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CASE WHEN 0.8173566790609177 THEN vt1.c0 ELSE 'zKUE6F' END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CASE WHEN 0.8173566790609177 THEN vt1.c0 ELSE 'zKUE6F' END)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CASE WHEN 0.8173566790609177 THEN vt1.c0 ELSE 'zKUE6F' END))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((NULL) BETWEEN (CAST(vt1.c1 AS NUMERIC)) AND (CASE WHEN 0.8173566790609177 THEN vt1.c0 ELSE 'zKUE6F' END)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) ORDER BY vt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) ORDER BY vt1.c0 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c1 AS TEXT) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY vt1.c0 COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((CAST(rt0.c1 AS TEXT) IN ())) ORDER BY vt1.c0 COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ('Aepo#O'))) ORDER BY vt1.c0 DESC  NULLS LAST, '-192048242' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ('Aepo#O'))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, '-192048242' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ('Aepo#O'))) ORDER BY vt1.c0 DESC  NULLS LAST, '-192048242' DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ('Aepo#O'))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0 DESC  NULLS LAST, '-192048242' DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ ('Aepo#O'))) ORDER BY vt1.c0 DESC  NULLS LAST, '-192048242' DESC;
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((HEX(DISTINCT -793563106))IS(((rt0.c0) BETWEEN (7.4578057E7) AND (rt0.c2))))) ORDER BY '796050823' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT -793563106))IS(((rt0.c0) BETWEEN (7.4578057E7) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY '796050823' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((HEX(DISTINCT -793563106))IS(((rt0.c0) BETWEEN (7.4578057E7) AND (rt0.c2))))) ORDER BY '796050823' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT -793563106))IS(((rt0.c0) BETWEEN (7.4578057E7) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY '796050823' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE (((HEX(DISTINCT -793563106))IS(((rt0.c0) BETWEEN (7.4578057E7) AND (rt0.c2))))) ORDER BY '796050823' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (vt1.c0);
SELECT ALL * FROM rt0, vt1 WHERE ((- (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) ORDER BY vt1.c1 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c1 COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((- (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) ORDER BY vt1.c1 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c1 COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE ((- (CASE WHEN rt0.c1 THEN NULL ELSE rt0.c1 END))) ORDER BY vt1.c1 COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((rt0.c1 IN (rt0.c1))) IS TRUE));
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c0)IS(rt0.c0))) IS FALSE), ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS(rt0.c0))) IS FALSE), ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c0)IS(rt0.c0))) IS FALSE), ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)IS(rt0.c0))) IS FALSE), ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))*(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))) ORDER BY ((((rt0.c0)IS(rt0.c0))) IS FALSE), ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1))) NOT BETWEEN (CASE WHEN NULL THEN rt0.c0 ELSE rt0.c2 END) AND (rt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c0)) BETWEEN ((json_patch(rt0.c1, rt0.c2))) AND ((((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((json_patch(rt0.c1, rt0.c2))) AND ((((rt0.c0) NOTNULL)))));
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c0)) BETWEEN ((json_patch(rt0.c1, rt0.c2))) AND ((((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((json_patch(rt0.c1, rt0.c2))) AND ((((rt0.c0) NOTNULL)))));
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ())) ORDER BY (((rt0.c0)) BETWEEN ((json_patch(rt0.c1, rt0.c2))) AND ((((rt0.c0) NOTNULL))));
SELECT ALL * FROM vt1 WHERE (LOWER(DISTINCT (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(DISTINCT (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(DISTINCT (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (LOWER(DISTINCT (vt1.c0 IN ())));
SELECT ALL * FROM vt1, rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)AND((- (rt0.c2)))))AND(vt1.c1)))OR(((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY ((vt1.c1 COLLATE BINARY)>=(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)AND((- (rt0.c2)))))AND(vt1.c1)))OR(((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c1 COLLATE BINARY)>=(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)AND((- (rt0.c2)))))AND(vt1.c1)))OR(((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY ((vt1.c1 COLLATE BINARY)>=(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)AND((- (rt0.c2)))))AND(vt1.c1)))OR(((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((vt1.c1 COLLATE BINARY)>=(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)AND((- (rt0.c2)))))AND(vt1.c1)))OR(((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 END))) ORDER BY ((vt1.c1 COLLATE BINARY)>=(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((+ ((~ (rt0.c0))))) ORDER BY CAST(((rt0.c0) NOTNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOTNULL) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((~ (rt0.c0))))) ORDER BY CAST(((rt0.c0) NOTNULL) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c0) NOTNULL) AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((~ (rt0.c0))))) ORDER BY CAST(((rt0.c0) NOTNULL) AS BLOB) ASC;
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))<=((((rt0.c2) IS FALSE)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY CASE WHEN NULL THEN (NOT (rt0.c0)) END ASC  NULLS LAST, CASE rt0.c2  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN TRIM(rt0.c1) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c0 AS INTEGER) ELSE x'' END  NULLS LAST, ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (1.031857809E9) AND ('-1983782719')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN (NOT (rt0.c0)) END ASC  NULLS LAST, CASE rt0.c2  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN TRIM(rt0.c1) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c0 AS INTEGER) ELSE x'' END  NULLS LAST, ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (1.031857809E9) AND ('-1983782719')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY CASE WHEN NULL THEN (NOT (rt0.c0)) END ASC  NULLS LAST, CASE rt0.c2  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN TRIM(rt0.c1) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c0 AS INTEGER) ELSE x'' END  NULLS LAST, ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (1.031857809E9) AND ('-1983782719')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN NULL THEN (NOT (rt0.c0)) END ASC  NULLS LAST, CASE rt0.c2  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN TRIM(rt0.c1) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c0 AS INTEGER) ELSE x'' END  NULLS LAST, ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (1.031857809E9) AND ('-1983782719')) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS BLOB)) ORDER BY CASE WHEN NULL THEN (NOT (rt0.c0)) END ASC  NULLS LAST, CASE rt0.c2  WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c1 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 END WHEN ((rt0.c2)IS NOT(rt0.c0)) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN TRIM(rt0.c1) THEN ((rt0.c1)*(rt0.c2)) WHEN ((rt0.c2) IS FALSE) THEN CAST(rt0.c0 AS INTEGER) ELSE x'' END  NULLS LAST, ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0))) NOT BETWEEN (1.031857809E9) AND ('-1983782719')) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN (('_I2kP#f㍁F')) AND ((rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN (('_I2kP#f㍁F')) AND ((rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN (('_I2kP#f㍁F')) AND ((rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) AND ((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0)) BETWEEN (('_I2kP#f㍁F')) AND ((rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) AND ((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c0)) BETWEEN (('_I2kP#f㍁F')) AND ((rt0.c2)))) NOT BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))) AND ((+ (rt0.c0)))));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE RTRIM WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))>>(((vt1.c1) IS FALSE)))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((rt0.c0)AND(rt0.c2)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))>>(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE RTRIM ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((rt0.c0)AND(rt0.c2)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE RTRIM WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))>>(((vt1.c1) IS FALSE)))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((rt0.c0)AND(rt0.c2)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))>>(((vt1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE RTRIM ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((rt0.c0)AND(rt0.c2)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((rt0.c0) NOT BETWEEN (rt0.c0) AND (vt1.c1)) COLLATE RTRIM WHERE ((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((NULL))))>>(((vt1.c1) IS FALSE)))) ORDER BY CASE ((vt1.c0) IS TRUE)  WHEN ((rt0.c0)AND(rt0.c2)) THEN CAST(vt1.c0 AS REAL) END DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c1 END)) AND ((vt1.c1 COLLATE RTRIM))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END) IS FALSE)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END) IS FALSE));
SELECT * FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (rt0.c2);
SELECT * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)%(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((vt1.c0)%(vt1.c0)) IN ()));
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0)/(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, (NOT ((((vt1.c0))<=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0)/(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST, (NOT ((((vt1.c0))<=((vt1.c1))))));
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0)/(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, (NOT ((((vt1.c0))<=((vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1) NOT NULL)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0)/(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC  NULLS FIRST, (NOT ((((vt1.c0))<=((vt1.c1))))));
SELECT * FROM vt1 WHERE (((((vt1.c1) NOT NULL)) NOT BETWEEN (CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END) AND (((vt1.c0)/(vt1.c1))))) ORDER BY vt1.c1 ASC  NULLS FIRST, (NOT ((((vt1.c0))<=((vt1.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS INTEGER)) ORDER BY (((NOT (rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS INTEGER)) ORDER BY (((NOT (rt0.c2))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((- (rt0.c1)) AS INTEGER)) ORDER BY (((NOT (rt0.c2))) NOTNULL);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt1.c0, 0.32133062530783385, rt0.c0)) AND ((vt1.c1, rt0.c2, 0.539558872934509))))OR(((vt1.c0)*(rt0.c1)))))OR(CASE rt0.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN '1864915430' WHEN vt1.c0 THEN vt1.c1 ELSE '1965923562' END)))OR(CAST(vt1.c0 AS BLOB))))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt1.c0, 0.32133062530783385, rt0.c0)) AND ((vt1.c1, rt0.c2, 0.539558872934509))))OR(((vt1.c0)*(rt0.c1)))))OR(CASE rt0.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN '1864915430' WHEN vt1.c0 THEN vt1.c1 ELSE '1965923562' END)))OR(CAST(vt1.c0 AS BLOB))))OR(NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt1.c0, 0.32133062530783385, rt0.c0)) AND ((vt1.c1, rt0.c2, 0.539558872934509))))OR(((vt1.c0)*(rt0.c1)))))OR(CASE rt0.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN '1864915430' WHEN vt1.c0 THEN vt1.c1 ELSE '1965923562' END)))OR(CAST(vt1.c0 AS BLOB))))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt1.c0, 0.32133062530783385, rt0.c0)) AND ((vt1.c1, rt0.c2, 0.539558872934509))))OR(((vt1.c0)*(rt0.c1)))))OR(CASE rt0.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN '1864915430' WHEN vt1.c0 THEN vt1.c1 ELSE '1965923562' END)))OR(CAST(vt1.c0 AS BLOB))))OR(NULL))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((vt1.c0, 0.32133062530783385, rt0.c0)) AND ((vt1.c1, rt0.c2, 0.539558872934509))))OR(((vt1.c0)*(rt0.c1)))))OR(CASE rt0.c1  WHEN x'' THEN vt1.c0 WHEN vt1.c0 THEN '1864915430' WHEN vt1.c0 THEN vt1.c1 ELSE '1965923562' END)))OR(CAST(vt1.c0 AS BLOB))))OR(NULL)));
SELECT ALL * FROM rt0, vt1 WHERE ((x'' IN ())) ORDER BY ((IFNULL(rt0.c2, rt0.c2))OR(0.3216476542654838 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((IFNULL(rt0.c2, rt0.c2))OR(0.3216476542654838 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((x'' IN ())) ORDER BY ((IFNULL(rt0.c2, rt0.c2))OR(0.3216476542654838 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((IFNULL(rt0.c2, rt0.c2))OR(0.3216476542654838 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((x'' IN ())) ORDER BY ((IFNULL(rt0.c2, rt0.c2))OR(0.3216476542654838 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c2)/(rt0.c2)))|((rt0.c1 IN (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)/(rt0.c2)))|((rt0.c1 IN (rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c2)/(rt0.c2)))|((rt0.c1 IN (rt0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2)/(rt0.c2)))|((rt0.c1 IN (rt0.c2)))) ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1)&(rt0.c0))) AND (((rt0.c2) NOTNULL)))) ORDER BY ((((rt0.c2)/(rt0.c2)))|((rt0.c1 IN (rt0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (('1643705152') ISNULL) WHERE (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS(((rt0.c0)IS(rt0.c0))))) ORDER BY NULLIF(CAST(rt0.c0 AS NUMERIC), rt0.c2)  NULLS FIRST, CASE ((vt1.c0)>=(vt1.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN (((vt1.c0))<=((rt0.c1))) ELSE LIKELIHOOD(rt0.c0, 0.7257198550879206) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (('1643705152') ISNULL) ORDER BY NULLIF(CAST(rt0.c0 AS NUMERIC), rt0.c2)  NULLS FIRST, CASE ((vt1.c0)>=(vt1.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN (((vt1.c0))<=((rt0.c1))) ELSE LIKELIHOOD(rt0.c0, 0.7257198550879206) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (('1643705152') ISNULL) WHERE (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS(((rt0.c0)IS(rt0.c0))))) ORDER BY NULLIF(CAST(rt0.c0 AS NUMERIC), rt0.c2)  NULLS FIRST, CASE ((vt1.c0)>=(vt1.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN (((vt1.c0))<=((rt0.c1))) ELSE LIKELIHOOD(rt0.c0, 0.7257198550879206) END;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS(((rt0.c0)IS(rt0.c0))))) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (('1643705152') ISNULL) ORDER BY NULLIF(CAST(rt0.c0 AS NUMERIC), rt0.c2)  NULLS FIRST, CASE ((vt1.c0)>=(vt1.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN (((vt1.c0))<=((rt0.c1))) ELSE LIKELIHOOD(rt0.c0, 0.7257198550879206) END);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (('1643705152') ISNULL) WHERE (((CASE WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)IS(((rt0.c0)IS(rt0.c0))))) ORDER BY NULLIF(CAST(rt0.c0 AS NUMERIC), rt0.c2)  NULLS FIRST, CASE ((vt1.c0)>=(vt1.c1))  WHEN ((rt0.c0)|(rt0.c2)) THEN (((vt1.c0))<=((rt0.c1))) ELSE LIKELIHOOD(rt0.c0, 0.7257198550879206) END;
SELECT * FROM rt0, vt1 WHERE (IFNULL(vt1.c1, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('FaT'))));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt1.c1, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('FaT')))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (IFNULL(vt1.c1, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('FaT'))));
SELECT SUM(count) FROM (SELECT ((IFNULL(vt1.c1, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('FaT')))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (IFNULL(vt1.c1, ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('FaT'))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))) WHERE ((((NOT (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))) WHERE ((((NOT (rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt1 ON ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))&(((((rt0.c2)OR(vt1.c0)))AND(rt0.c1)))) WHERE ((((NOT (rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c2))) COLLATE NOCASE);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((((((((((~ (vt1.c0)))AND(CAST(rt0.c1 AS NUMERIC))))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (0.0727228648163748)))))AND(x'4fe6')))OR(LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (vt1.c0)))AND(CAST(rt0.c1 AS NUMERIC))))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (0.0727228648163748)))))AND(x'4fe6')))OR(LIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((((((((((~ (vt1.c0)))AND(CAST(rt0.c1 AS NUMERIC))))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (0.0727228648163748)))))AND(x'4fe6')))OR(LIKELY(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((((((~ (vt1.c0)))AND(CAST(rt0.c1 AS NUMERIC))))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (0.0727228648163748)))))AND(x'4fe6')))OR(LIKELY(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0 NOT INDEXED NATURAL JOIN vt1);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE ((((((((((~ (vt1.c0)))AND(CAST(rt0.c1 AS NUMERIC))))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (0.0727228648163748)))))AND(x'4fe6')))OR(LIKELY(DISTINCT rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE ((('-1957676077')-(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((('-1957676077')-(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('-1957676077')-(rt0.c0)));
SELECT SUM(count) FROM (SELECT (((('-1957676077')-(rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((('-1957676077')-(rt0.c0)));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) ORDER BY ((LIKELY(vt1.c1)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELY(vt1.c1)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) ORDER BY ((LIKELY(vt1.c1)) IS TRUE);
SELECT SUM(count) FROM (SELECT (((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((LIKELY(vt1.c1)) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0)) IN ())) ORDER BY ((LIKELY(vt1.c1)) IS TRUE);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON (NOT (rt0.c0)) COLLATE NOCASE COLLATE BINARY WHERE (vt1.c1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE (((NOT (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NOT (rt0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NOT (rt0.c2)) IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)==((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)=((- (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)==((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)=((- (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END)==((- (vt1.c1)))));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ((((vt1.c0))<>((vt1.c0))) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)+(vt1.c0)))) DESC  NULLS LAST, '2137425308';
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))!=((vt1.c0))) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)+(vt1.c0)))) DESC  NULLS LAST, '2137425308');
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ((((vt1.c0))<>((vt1.c0))) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)+(vt1.c0)))) DESC  NULLS LAST, '2137425308';
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0))!=((vt1.c0))) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)+(vt1.c0)))) DESC  NULLS LAST, '2137425308');
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END COLLATE RTRIM) ORDER BY ((((vt1.c0))<>((vt1.c0))) IN ((((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))), ((vt1.c1)+(vt1.c0)))) DESC  NULLS LAST, '2137425308';
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY (((((((('')AND((NOT (rt0.c2)))))OR((rt0.c1 IN (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c1, vt1.c0, vt1.c0))>((rt0.c1, rt0.c2, rt0.c2))))) DESC  NULLS FIRST, (((((0x79edc00b)IS(vt1.c1))))>((UPPER(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((('')AND((NOT (rt0.c2)))))OR((rt0.c1 IN (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c1, vt1.c0, vt1.c0))>((rt0.c1, rt0.c2, rt0.c2))))) DESC  NULLS FIRST, (((((0X79edc00b)IS(vt1.c1))))>((UPPER(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY (((((((('')AND((NOT (rt0.c2)))))OR((rt0.c1 IN (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c1, vt1.c0, vt1.c0))>((rt0.c1, rt0.c2, rt0.c2))))) DESC  NULLS FIRST, (((((0x79edc00b)IS(vt1.c1))))>((UPPER(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((((('')AND((NOT (rt0.c2)))))OR((rt0.c1 IN (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c1, vt1.c0, vt1.c0))>((rt0.c1, rt0.c2, rt0.c2))))) DESC  NULLS FIRST, (((((0X79edc00b)IS(vt1.c1))))>((UPPER(rt0.c2)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c0) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c0 END END) ORDER BY (((((((('')AND((NOT (rt0.c2)))))OR((rt0.c1 IN (rt0.c2)))))AND(CAST(rt0.c1 AS INTEGER))))AND((((rt0.c1, vt1.c0, vt1.c0))>((rt0.c1, rt0.c2, rt0.c2))))) DESC  NULLS FIRST, (((((0x79edc00b)IS(vt1.c1))))>((UPPER(rt0.c2)))) DESC;
SELECT * FROM rt0 WHERE (((((0.21686996888677523)/(0.12932809516010857)))/(DATETIME(x'', rt0.c1, rt0.c2)))) ORDER BY (((('-115563534')|(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.21686996888677523)/(0.12932809516010857)))/(DATETIME(x'', rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((('-115563534')|(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM rt0 WHERE (((((0.21686996888677523)/(0.12932809516010857)))/(DATETIME(x'', rt0.c1, rt0.c2)))) ORDER BY (((('-115563534')|(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((((0.21686996888677523)/(0.12932809516010857)))/(DATETIME(x'', rt0.c1, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY (((('-115563534')|(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC))));
SELECT * FROM rt0 WHERE (((((0.21686996888677523)/(0.12932809516010857)))/(DATETIME(x'', rt0.c1, rt0.c2)))) ORDER BY (((('-115563534')|(rt0.c0)))GLOB(CAST(rt0.c0 AS NUMERIC)));
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1)*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1)*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1)*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c1)*(((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((NOT (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END)));
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN ((-1323221534) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c0 END END) ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c1, 0.7186494855654685)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS INTEGER)  WHEN ((-1323221534) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c1, 0.7186494855654685)))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN ((-1323221534) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c0 END END) ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c1, 0.7186494855654685)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS INTEGER)  WHEN ((-1323221534) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c0 END END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c1, 0.7186494855654685)))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN ((-1323221534) NOT BETWEEN (vt1.c0) AND (rt0.c1)) THEN CASE WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c0 END END) ORDER BY (~ (LIKELIHOOD(DISTINCT vt1.c1, 0.7186494855654685)))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1)))IS(vt1.c0))) ORDER BY (NOT (((7.96050823E8) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1)))IS(vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((7.96050823E8) NOTNULL))));
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1)))IS(vt1.c0))) ORDER BY (NOT (((7.96050823E8) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1)))IS(vt1.c0))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((7.96050823E8) NOTNULL))));
SELECT * FROM rt0, vt1 WHERE (((((((rt0.c1)AND(vt1.c1)))OR(vt1.c1)))IS(vt1.c0))) ORDER BY (NOT (((7.96050823E8) NOTNULL)));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c2)) IN ()) WHERE ((((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<>((rt0.c0 COLLATE NOCASE)))) ORDER BY (vt1.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<>((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c2)) IN ()) ORDER BY (vt1.c1 IN ())  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c2)) IN ()) WHERE ((((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<>((rt0.c0 COLLATE NOCASE)))) ORDER BY (vt1.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<>((rt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c2)) IN ()) ORDER BY (vt1.c1 IN ())  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((vt1.c0 IN (rt0.c2)) IN ()) WHERE ((((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c2))))<>((rt0.c0 COLLATE NOCASE)))) ORDER BY (vt1.c1 IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c1)))AND('-1414298247')))%(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))AND('-1414298247')))%(rt0.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c1)))AND('-1414298247')))%(rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)AND(rt0.c1)))AND('-1414298247')))%(rt0.c0))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c1)))AND('-1414298247')))%(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c0);
SELECT * FROM vt1, rt0 NOT INDEXED WHERE ((~ (((vt1.c1)<(rt0.c2))))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((((((vt1.c0)AND(rt0.c2)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)) WHEN 9.8820334E7 THEN 'ne얇5''g' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1)<(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((((((vt1.c0)AND(rt0.c2)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)) WHEN 9.8820334E7 THEN 'ne얇5''g' END  NULLS FIRST);
SELECT * FROM vt1, rt0 NOT INDEXED WHERE ((~ (((vt1.c1)<(rt0.c2))))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((((((vt1.c0)AND(rt0.c2)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)) WHEN 9.8820334E7 THEN 'ne얇5''g' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1)<(rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((((((vt1.c0)AND(rt0.c2)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)) WHEN 9.8820334E7 THEN 'ne얇5''g' END  NULLS FIRST);
SELECT * FROM vt1, rt0 NOT INDEXED WHERE ((~ (((vt1.c1)<(rt0.c2))))) ORDER BY CASE WHEN (rt0.c2 IN ()) THEN ((rt0.c2) IS FALSE) WHEN ((((((((vt1.c0)AND(rt0.c2)))OR(vt1.c1)))OR(rt0.c2)))AND(vt1.c0)) THEN ((((vt1.c0)OR(vt1.c1)))AND(rt0.c2)) WHEN 9.8820334E7 THEN 'ne얇5''g' END  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (0.017959286014239018);
SELECT SUM(count) FROM (SELECT ((0.017959286014239018) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (0.017959286014239018);
SELECT SUM(count) FROM (SELECT ((0.017959286014239018) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (0.017959286014239018);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)=(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'5bb0' END ELSE ((rt0.c2)LIKE(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)=(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'5bb0' END ELSE ((rt0.c2)LIKE(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)=(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'5bb0' END ELSE ((rt0.c2)LIKE(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)=(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'5bb0' END ELSE ((rt0.c2)LIKE(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE rt0.c1 COLLATE RTRIM  WHEN ((rt0.c1)=(rt0.c0)) THEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN x'5bb0' END ELSE ((rt0.c2)LIKE(rt0.c0)) END);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE RTRIM) ORDER BY (- ((((vt1.c0))<((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ((((vt1.c0))<((vt1.c0))))) ASC);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE RTRIM) ORDER BY (- ((((vt1.c0))<((vt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ((((vt1.c0))<((vt1.c0))))) ASC);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c1 AS BLOB) COLLATE RTRIM) ORDER BY (- ((((vt1.c0))<((vt1.c0))))) ASC;
SELECT * FROM vt1 WHERE ((((- (vt1.c1)))-((+ (vt1.c0))))) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))-((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((- (vt1.c1)))-((+ (vt1.c0))))) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt1.c1)))-((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS NUMERIC) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((- (vt1.c1)))-((+ (vt1.c0))))) ORDER BY CAST(CAST(vt1.c1 AS TEXT) AS NUMERIC) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((0xffffffffcaa35d8a) IS FALSE) AS INTEGER)) ORDER BY CASE ((vt1.c1)IS(vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN rt0.c1 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0Xffffffffcaa35d8a) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((vt1.c1)IS(vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN rt0.c1 END ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((0xffffffffcaa35d8a) IS FALSE) AS INTEGER)) ORDER BY CASE ((vt1.c1)IS(vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN rt0.c1 END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0Xffffffffcaa35d8a) IS FALSE) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE ((vt1.c1)IS(vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN rt0.c1 END ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((0xffffffffcaa35d8a) IS FALSE) AS INTEGER)) ORDER BY CASE ((vt1.c1)IS(vt1.c1))  WHEN ((vt1.c1) IS TRUE) THEN rt0.c1 END ASC;
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1962757668' END  WHEN ((((((((vt1.c1)OR(vt1.c1)))AND(x'')))OR(rt0.c1)))AND(0X7d6a5b9b)) THEN (((('-992991096')OR(vt1.c0)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1962757668' END  WHEN ((((((((vt1.c1)OR(vt1.c1)))AND(x'')))OR(rt0.c1)))AND(0X7d6a5b9b)) THEN (((('-992991096')OR(vt1.c0)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1962757668' END  WHEN ((((((((vt1.c1)OR(vt1.c1)))AND(x'')))OR(rt0.c1)))AND(0X7d6a5b9b)) THEN (((('-992991096')OR(vt1.c0)))AND(vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1962757668' END  WHEN ((((((((vt1.c1)OR(vt1.c1)))AND(x'')))OR(rt0.c1)))AND(0X7d6a5b9b)) THEN (((('-992991096')OR(vt1.c0)))AND(vt1.c1)) END) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CASE CASE WHEN rt0.c0 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN '1962757668' END  WHEN ((((((((vt1.c1)OR(vt1.c1)))AND(x'')))OR(rt0.c1)))AND(0X7d6a5b9b)) THEN (((('-992991096')OR(vt1.c0)))AND(vt1.c1)) END);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c1 IN (vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1 IN (vt1.c1))) ISNULL));
SELECT * FROM rt0, vt1 WHERE (CAST(ABS(DISTINCT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT NULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(ABS(DISTINCT NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(ABS(DISTINCT NULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (CAST(ABS(DISTINCT NULL) AS BLOB));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (x'') ORDER BY (((rt0.c1)>=(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((rt0.c1)>=(rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (x'') ORDER BY (((rt0.c1)>=(rt0.c2)) IN ());
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY (((rt0.c1)>=(rt0.c2)) IN ()));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (x'') ORDER BY (((rt0.c1)>=(rt0.c2)) IN ());
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (UNLIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (UNLIKELY(DISTINCT rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((- (UNLIKELY(DISTINCT rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((- (UNLIKELY(DISTINCT rt0.c0))));
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ORDER BY (((('-1302984825'))>=((rt0.c1))) IN (rt0.c2, TYPEOF(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((('-1302984825'))>=((rt0.c1))) IN (rt0.c2, TYPEOF(DISTINCT rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ORDER BY (((('-1302984825'))>=((rt0.c1))) IN (rt0.c2, TYPEOF(DISTINCT rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (((('-1302984825'))>=((rt0.c1))) IN (rt0.c2, TYPEOF(DISTINCT rt0.c2))) DESC);
SELECT * FROM rt0 WHERE (CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END AS NUMERIC)) ORDER BY (((('-1302984825'))>=((rt0.c1))) IN (rt0.c2, TYPEOF(DISTINCT rt0.c2))) DESC;
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((vt1.c1 COLLATE NOCASE) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE ('xS&iDギ') ORDER BY (((~ (rt0.c2)))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (('xS&iDギ') IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2)))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('xS&iDギ') ORDER BY (((~ (rt0.c2)))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT (('xS&iDギ') IS TRUE)  as count FROM rt0 ORDER BY (((~ (rt0.c2)))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('xS&iDギ') ORDER BY (((~ (rt0.c2)))*(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))>=(((vt1.c1) ISNULL)))) ORDER BY ((rt0.c0)-(rt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))>=(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0)-(rt0.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))>=(((vt1.c1) ISNULL)))) ORDER BY ((rt0.c0)-(rt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))>=(((vt1.c1) ISNULL)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c0)-(rt0.c2)) COLLATE BINARY ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c0)OR(rt0.c1)))AND(vt1.c0)))OR(rt0.c2)))OR(vt1.c0)))>=(((vt1.c1) ISNULL)))) ORDER BY ((rt0.c0)-(rt0.c2)) COLLATE BINARY ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)*(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)*(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)*(vt1.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt1.c0)*(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)*(vt1.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_array_length(rt0.c0, rt0.c1))LIKE('-932096329')));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c0, rt0.c1))LIKE('-932096329'))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((json_array_length(rt0.c0, rt0.c1))LIKE('-932096329')));
SELECT SUM(count) FROM (SELECT ALL ((((json_array_length(rt0.c0, rt0.c1))LIKE('-932096329'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((NOT ('j8Q~\r4'))))) ORDER BY (((((((rt0.c0))>((rt0.c1))))OR((+ (rt0.c0)))))AND((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((NOT ('j8Q~\r4'))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c0))>((rt0.c1))))OR((+ (rt0.c0)))))AND((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((+ ((NOT ('j8Q~\r4'))))) ORDER BY (((((((rt0.c0))>((rt0.c1))))OR((+ (rt0.c0)))))AND((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((NOT ('j8Q~\r4'))))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c0))>((rt0.c1))))OR((+ (rt0.c0)))))AND((rt0.c0 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (('911153064') NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c0) ISNULL))) DESC, (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7868647642334365))), rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (('911153064') NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c0) ISNULL))) DESC, (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7868647642334365))), rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (('911153064') NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c0) ISNULL))) DESC, (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7868647642334365))), rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (('911153064') NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c0) ISNULL))) DESC, (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7868647642334365))), rt0.c2  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (('911153064') NOT BETWEEN ((((rt0.c2))>=((rt0.c1)))) AND (((rt0.c0) ISNULL))) DESC, (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((0.7868647642334365))), rt0.c2  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (NULL);
SELECT * FROM rt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (LAST_INSERT_ROWID());
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (vt1.c1);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (~ (((vt1.c1) NOT NULL))) WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))|(((((((((vt1.c0)AND(vt1.c1)))OR(x'')))OR(x'')))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (~ (((vt1.c1) NOT NULL))) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))|(((((((((vt1.c0)AND(vt1.c1)))OR(x'')))OR(x'')))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (~ (((vt1.c1) NOT NULL))) WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))|(((((((((vt1.c0)AND(vt1.c1)))OR(x'')))OR(x'')))AND(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON (~ (((vt1.c1) NOT NULL))) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))|(((((((((vt1.c0)AND(vt1.c1)))OR(x'')))OR(x'')))AND(rt0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN vt1 ON (~ (((vt1.c1) NOT NULL))) WHERE (((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c1)) COLLATE NOCASE) ORDER BY ((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))|(((((((((vt1.c0)AND(vt1.c1)))OR(x'')))OR(x'')))AND(rt0.c2))))  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ALL ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((vt1.c0) IS FALSE), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt1.c0) IS FALSE), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((vt1.c0) IS FALSE), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT ((vt1.c0) IS FALSE), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (IFNULL(DISTINCT ((vt1.c0) IS FALSE), ((((((((vt1.c1)AND(vt1.c1)))AND(vt1.c1)))AND(vt1.c1)))OR(vt1.c0))));
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c0) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((+ (((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS TEXT))) WHERE (CASE WHEN ((vt1.c1) NOT NULL) THEN ((rt0.c1)<=(rt0.c0)) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) NOT NULL) THEN ((rt0.c1)<=(rt0.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS TEXT))) WHERE (CASE WHEN ((vt1.c1) NOT NULL) THEN ((rt0.c1)<=(rt0.c0)) ELSE (vt1.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt1.c1) NOT NULL) THEN ((rt0.c1)<=(rt0.c0)) ELSE (vt1.c0 IN ()) END) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS TEXT))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON (NOT (CAST(rt0.c0 AS TEXT))) WHERE (CASE WHEN ((vt1.c1) NOT NULL) THEN ((rt0.c1)<=(rt0.c0)) ELSE (vt1.c0 IN ()) END);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt1.c1 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (vt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (vt1.c1 IN ()))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (vt1.c1 IN ())));
SELECT ALL * FROM vt1, rt0 WHERE (LENGTH((((rt0.c1, rt0.c0, vt1.c0))<((vt1.c0, vt1.c0, ''))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((((rt0.c1, rt0.c0, vt1.c0))<((vt1.c0, vt1.c0, ''))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (LENGTH((((rt0.c1, rt0.c0, vt1.c0))<((vt1.c0, vt1.c0, ''))))) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH((((rt0.c1, rt0.c0, vt1.c0))<((vt1.c0, vt1.c0, ''))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (LENGTH((((rt0.c1, rt0.c0, vt1.c0))<((vt1.c0, vt1.c0, ''))))) ORDER BY rt0.c1  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('911153064'))==((((vt1.c0)IS NOT(NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((('911153064'))=((((vt1.c0)IS NOT(NULL)))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('911153064'))==((((vt1.c0)IS NOT(NULL))))));
SELECT SUM(count) FROM (SELECT ALL ((((('911153064'))=((((vt1.c0)IS NOT(NULL)))))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((('911153064'))==((((vt1.c0)IS NOT(NULL))))));
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) ORDER BY rt0.c0;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0);
SELECT ALL * FROM vt1, rt0 WHERE ((NOT (rt0.c2))) ORDER BY rt0.c0;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) IS TRUE)) ORDER BY ((rt0.c1)%(((((((((((((rt0.c0)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))  NULLS FIRST, ((UPPER(DISTINCT -1.15563534E8))IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)==(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)%(((((((((((((rt0.c0)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))  NULLS FIRST, ((UPPER(DISTINCT -1.15563534E8))IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) IS TRUE)) ORDER BY ((rt0.c1)%(((((((((((((rt0.c0)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))  NULLS FIRST, ((UPPER(DISTINCT -1.15563534E8))IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)==(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1)%(((((((((((((rt0.c0)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))  NULLS FIRST, ((UPPER(DISTINCT -1.15563534E8))IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2)==(rt0.c2))) IS TRUE)) ORDER BY ((rt0.c1)%(((((((((((((rt0.c0)AND(rt0.c2)))AND(NULL)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0))))  NULLS FIRST, ((UPPER(DISTINCT -1.15563534E8))IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON TOTAL_CHANGES() WHERE (ABS(DISTINCT (rt0.c1 IN ()))) ORDER BY (((rt0.c1, rt0.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN -1395503942 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), (((rt0.c0))>((vt1.c1))))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)), ((rt0.c2)GLOB(rt0.c2)), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON TOTAL_CHANGES() ORDER BY (((rt0.c1, rt0.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN -1395503942 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), (((rt0.c0))>((vt1.c1))))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)), ((rt0.c2)GLOB(rt0.c2)), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END))) DESC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON TOTAL_CHANGES() WHERE (ABS(DISTINCT (rt0.c1 IN ()))) ORDER BY (((rt0.c1, rt0.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN -1395503942 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), (((rt0.c0))>((vt1.c1))))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)), ((rt0.c2)GLOB(rt0.c2)), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (rt0.c1 IN ()))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON TOTAL_CHANGES() ORDER BY (((rt0.c1, rt0.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN -1395503942 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), (((rt0.c0))>((vt1.c1))))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)), ((rt0.c2)GLOB(rt0.c2)), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END))) DESC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON TOTAL_CHANGES() WHERE (ABS(DISTINCT (rt0.c1 IN ()))) ORDER BY (((rt0.c1, rt0.c1, vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c1 THEN -1395503942 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 END, (- (rt0.c1)), (((rt0.c0))>((vt1.c1))))) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c1)), ((rt0.c2)GLOB(rt0.c2)), CASE vt1.c0  WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END))) DESC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(CASE WHEN vt1.c1 THEN x'3d99' END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0xffffffffb2560787 END))) ORDER BY ((((((((((('', vt1.c1, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('2104122267', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, NULL, vt1.c0, vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE 0.4931290136247999  WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c1)))) ASC, ((((HEX(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END)))OR(vt1.c0)) DESC, (~ (((vt1.c1)==(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(CASE WHEN vt1.c1 THEN x'3d99' END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0Xffffffffb2560787 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((('', vt1.c1, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('2104122267', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, NULL, vt1.c0, vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE 0.4931290136247999  WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c1)))) ASC, ((((HEX(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END)))OR(vt1.c0)) DESC, (~ (((vt1.c1)=(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(CASE WHEN vt1.c1 THEN x'3d99' END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0xffffffffb2560787 END))) ORDER BY ((((((((((('', vt1.c1, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('2104122267', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, NULL, vt1.c0, vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE 0.4931290136247999  WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c1)))) ASC, ((((HEX(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END)))OR(vt1.c0)) DESC, (~ (((vt1.c1)==(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(CASE WHEN vt1.c1 THEN x'3d99' END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0Xffffffffb2560787 END))) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((('', vt1.c1, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('2104122267', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, NULL, vt1.c0, vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE 0.4931290136247999  WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c1)))) ASC, ((((HEX(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END)))OR(vt1.c0)) DESC, (~ (((vt1.c1)=(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((vt1.c0)AND(vt1.c1)))OR(vt1.c0)))AND(CASE WHEN vt1.c1 THEN x'3d99' END)))AND(CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c0 THEN 0xffffffffb2560787 END))) ORDER BY ((((((((((('', vt1.c1, vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN (('2104122267', vt1.c0, vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, vt1.c1, NULL, vt1.c0, vt1.c0))))AND(CASE vt1.c0  WHEN vt1.c0 THEN x'' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END)))AND(CASE 0.4931290136247999  WHEN vt1.c0 THEN vt1.c0 END)))AND((+ (vt1.c1)))) ASC, ((((HEX(vt1.c0))AND(CASE WHEN vt1.c1 THEN vt1.c1 END)))OR(vt1.c0)) DESC, (~ (((vt1.c1)==(vt1.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE (LIKELY(((rt0.c2)<=(rt0.c1)))) ORDER BY ((IFNULL(rt0.c0, rt0.c0))=(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c2)<=(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c0))=(((rt0.c0) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (LIKELY(((rt0.c2)<=(rt0.c1)))) ORDER BY ((IFNULL(rt0.c0, rt0.c0))=(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c2)<=(rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(rt0.c0, rt0.c0))=(((rt0.c0) IS TRUE))));
SELECT ALL * FROM rt0 WHERE (LIKELY(((rt0.c2)<=(rt0.c1)))) ORDER BY ((IFNULL(rt0.c0, rt0.c0))=(((rt0.c0) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN '{s5,?\n6y' THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) ISNULL) THEN vt1.c1 COLLATE RTRIM WHEN ((vt1.c0)*(vt1.c0)) THEN ((vt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '{s5,?\n6y' THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) ISNULL) THEN vt1.c1 COLLATE RTRIM WHEN ((vt1.c0)*(vt1.c0)) THEN ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN '{s5,?\n6y' THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) ISNULL) THEN vt1.c1 COLLATE RTRIM WHEN ((vt1.c0)*(vt1.c0)) THEN ((vt1.c1) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '{s5,?\n6y' THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) ISNULL) THEN vt1.c1 COLLATE RTRIM WHEN ((vt1.c0)*(vt1.c0)) THEN ((vt1.c1) NOT NULL) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE WHEN '{s5,?\n6y' THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN ((vt1.c1) ISNULL) THEN vt1.c1 COLLATE RTRIM WHEN ((vt1.c0)*(vt1.c0)) THEN ((vt1.c1) NOT NULL) END);
SELECT * FROM rt0 WHERE (((((((((ABS(DISTINCT rt0.c0))OR(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((ABS(DISTINCT rt0.c0))OR(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((ABS(DISTINCT rt0.c0))OR(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((ABS(DISTINCT rt0.c0))OR(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((ABS(DISTINCT rt0.c0))OR(CASE WHEN NULL THEN rt0.c2 ELSE rt0.c0 END)))OR(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(((rt0.c0) IS FALSE))));
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (CAST(((((vt1.c0)AND(rt0.c1)))OR(vt1.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY LENGTH(((rt0.c2)|(rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY LENGTH(((rt0.c2)|(rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY LENGTH(((rt0.c2)|(rt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY LENGTH(((rt0.c2)|(rt0.c0))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((+ (rt0.c1)) COLLATE NOCASE) ORDER BY LENGTH(((rt0.c2)|(rt0.c0))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN '330510572' THEN DATETIME(rt0.c1, rt0.c2, vt1.c0, vt1.c0, vt1.c0) END WHERE (LIKELY(((rt0.c0) IS FALSE))) ORDER BY CAST((((vt1.c0, vt1.c1, rt0.c0)) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c0) IS FALSE))) IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN '330510572' THEN DATETIME(rt0.c1, rt0.c2, vt1.c0, vt1.c0, vt1.c0) END ORDER BY CAST((((vt1.c0, vt1.c1, rt0.c0)) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c0))) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN '330510572' THEN DATETIME(rt0.c1, rt0.c2, vt1.c0, vt1.c0, vt1.c0) END WHERE (LIKELY(((rt0.c0) IS FALSE))) ORDER BY CAST((((vt1.c0, vt1.c1, rt0.c0)) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((rt0.c0) IS FALSE))) IS TRUE)  as count FROM vt1 NOT INDEXED FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN '330510572' THEN DATETIME(rt0.c1, rt0.c2, vt1.c0, vt1.c0, vt1.c0) END ORDER BY CAST((((vt1.c0, vt1.c1, rt0.c0)) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c0))) AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON CASE rt0.c1  WHEN '330510572' THEN DATETIME(rt0.c1, rt0.c2, vt1.c0, vt1.c0, vt1.c0) END WHERE (LIKELY(((rt0.c0) IS FALSE))) ORDER BY CAST((((vt1.c0, vt1.c1, rt0.c0)) BETWEEN ((rt0.c0, NULL, rt0.c2)) AND ((rt0.c0, vt1.c0, rt0.c0))) AS BLOB) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)IS NOT(vt1.c1)), ((vt1.c0) IS TRUE), ((vt1.c0)>>(vt1.c0))))==((UNLIKELY(vt1.c0), ((vt1.c0) NOT NULL), CAST(vt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)IS NOT(vt1.c1)), ((vt1.c0) IS TRUE), ((vt1.c0)>>(vt1.c0))))==((UNLIKELY(vt1.c0), ((vt1.c0) NOT NULL), CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)IS NOT(vt1.c1)), ((vt1.c0) IS TRUE), ((vt1.c0)>>(vt1.c0))))==((UNLIKELY(vt1.c0), ((vt1.c0) NOT NULL), CAST(vt1.c0 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)IS NOT(vt1.c1)), ((vt1.c0) IS TRUE), ((vt1.c0)>>(vt1.c0))))==((UNLIKELY(vt1.c0), ((vt1.c0) NOT NULL), CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c1)IS NOT(vt1.c1)), ((vt1.c0) IS TRUE), ((vt1.c0)>>(vt1.c0))))==((UNLIKELY(vt1.c0), ((vt1.c0) NOT NULL), CAST(vt1.c0 AS REAL)))));
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c2)=(vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)=(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c2)=(vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)=(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(((rt0.c2)=(vt1.c1)) AS INTEGER));
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1) NOT NULL) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1) NOT NULL) IN ()));
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((rt0.c1)%(rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(IFNULL(DISTINCT rt0.c1, NULL))))OR(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))OR(rt0.c2))) ORDER BY (TRIM(DISTINCT rt0.c1) IN ())  NULLS LAST, CASE (+ ('-624370180'))  WHEN (NOT (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c0 COLLATE NOCASE THEN '' WHEN (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))) THEN (rt0.c1 IN ()) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)%(rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(IFNULL(DISTINCT rt0.c1, NULL))))OR(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (TRIM(DISTINCT rt0.c1) IN ())  NULLS LAST, CASE (+ ('-624370180'))  WHEN (NOT (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c0 COLLATE NOCASE THEN '' WHEN (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))) THEN (rt0.c1 IN ()) ELSE NULL END DESC);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((rt0.c1)%(rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(IFNULL(DISTINCT rt0.c1, NULL))))OR(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))OR(rt0.c2))) ORDER BY (TRIM(DISTINCT rt0.c1) IN ())  NULLS LAST, CASE (+ ('-624370180'))  WHEN (NOT (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c0 COLLATE NOCASE THEN '' WHEN (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))) THEN (rt0.c1 IN ()) ELSE NULL END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)%(rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(IFNULL(DISTINCT rt0.c1, NULL))))OR(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (TRIM(DISTINCT rt0.c1) IN ())  NULLS LAST, CASE (+ ('-624370180'))  WHEN (NOT (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c0 COLLATE NOCASE THEN '' WHEN (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))) THEN (rt0.c1 IN ()) ELSE NULL END DESC);
SELECT ALL * FROM rt0, vt1 WHERE (((((((((((rt0.c1)%(rt0.c0)))AND(CAST(rt0.c0 AS TEXT))))OR(IFNULL(DISTINCT rt0.c1, NULL))))OR(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c1)))))OR(rt0.c2))) ORDER BY (TRIM(DISTINCT rt0.c1) IN ())  NULLS LAST, CASE (+ ('-624370180'))  WHEN (NOT (rt0.c2)) THEN CASE WHEN rt0.c2 THEN rt0.c2 END WHEN rt0.c0 COLLATE NOCASE THEN '' WHEN (((rt0.c2, rt0.c0, vt1.c0)) BETWEEN ((rt0.c0, rt0.c0, vt1.c1)) AND ((rt0.c1, rt0.c0, rt0.c0))) THEN (rt0.c1 IN ()) ELSE NULL END DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND (((x'31c5' IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND (((x'31c5' IN ()))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND (((x'31c5' IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND (((x'31c5' IN ()))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c0) NOT NULL))) AND (((x'31c5' IN ())))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)GLOB(NULL)))!=(((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN (((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c0)+(rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(NULL)))!=(((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c0)+(rt0.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)GLOB(NULL)))!=(((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN (((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c0)+(rt0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)GLOB(NULL)))!=(((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE WHEN (((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c0)+(rt0.c2)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c2)GLOB(NULL)))!=(((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c2))))) ORDER BY CASE WHEN (((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN ((rt0.c0)+(rt0.c2)) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2)-(rt0.c0))))<=((((rt0.c2)>>(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)-(rt0.c0))))<=((((rt0.c2)>>(x'')))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2)-(rt0.c0))))<=((((rt0.c2)>>(x''))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2)-(rt0.c0))))<=((((rt0.c2)>>(x'')))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((rt0.c2)-(rt0.c0))))<=((((rt0.c2)>>(x''))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)+(rt0.c2)))|(((((rt0.c2)OR(rt0.c2)))AND(x''))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c1)+(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)+(rt0.c2)))|(((((rt0.c2)OR(rt0.c2)))AND(x''))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c1)+(rt0.c1)) END DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)+(rt0.c2)))|(((((rt0.c2)OR(rt0.c2)))AND(x''))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c1)+(rt0.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)+(rt0.c2)))|(((((rt0.c2)OR(rt0.c2)))AND(x''))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c1)+(rt0.c1)) END DESC);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)+(rt0.c2)))|(((((rt0.c2)OR(rt0.c2)))AND(x''))))) ORDER BY CASE WHEN ((rt0.c0) NOTNULL) THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) ELSE ((rt0.c1)+(rt0.c1)) END DESC;
SELECT * FROM vt1, rt0 WHERE (CAST(CAST(vt1.c1 AS TEXT) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0)>=(rt0.c2)) THEN CAST(vt1.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((vt1.c0)>=(rt0.c2)) THEN CAST(vt1.c0 AS TEXT) END  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (CAST(CAST(vt1.c1 AS TEXT) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0)>=(rt0.c2)) THEN CAST(vt1.c0 AS TEXT) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c1 AS TEXT) AS TEXT)) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN ((vt1.c0)>=(rt0.c2)) THEN CAST(vt1.c0 AS TEXT) END  NULLS FIRST);
SELECT * FROM vt1, rt0 WHERE (CAST(CAST(vt1.c1 AS TEXT) AS TEXT)) ORDER BY CASE WHEN ((vt1.c0)>=(rt0.c2)) THEN CAST(vt1.c0 AS TEXT) END  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) NOTNULL)) ORDER BY NULLIF((rt0.c2 IN ()), ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULLIF((rt0.c2 IN ()), ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) NOTNULL)) ORDER BY NULLIF((rt0.c2 IN ()), ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY NULLIF((rt0.c2 IN ()), ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) ASC);
SELECT ALL * FROM vt1, rt0 WHERE (((NULL) NOTNULL)) ORDER BY NULLIF((rt0.c2 IN ()), ((((rt0.c1)OR(rt0.c2)))OR(vt1.c0))) ASC;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.12932809516010857 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.12932809516010857 AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.12932809516010857 AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.12932809516010857 AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.12932809516010857 AS INTEGER));
SELECT ALL * FROM vt1 NOT INDEXED, rt0 WHERE (CAST((~ (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1 NOT INDEXED, rt0 WHERE (CAST((~ (rt0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1 NOT INDEXED, rt0 WHERE (CAST((~ (rt0.c1)) AS NUMERIC));
SELECT * FROM vt1, rt0 WHERE (((vt1.c1 COLLATE BINARY)&((((((((((((('F薜')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY)&((((((((((((('F薜')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')))OR(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c1 COLLATE BINARY)&((((((((((((('F薜')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((vt1.c1 COLLATE BINARY)&((((((((((((('F薜')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')))OR(rt0.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((vt1.c1 COLLATE BINARY)&((((((((((((('F薜')OR(vt1.c0)))OR(vt1.c1)))OR(rt0.c1)))AND(rt0.c1)))AND(x'')))OR(rt0.c1)))));
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END IN ()));
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE BINARY)) ORDER BY ((DATE(rt0.c0, NULL, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY ((DATE(rt0.c0, NULL, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE BINARY)) ORDER BY ((DATE(rt0.c0, NULL, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c1));
SELECT SUM(count) FROM (SELECT ((LIKELY(rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY ((DATE(rt0.c0, NULL, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELY(rt0.c0 COLLATE BINARY)) ORDER BY ((DATE(rt0.c0, NULL, rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN (((NULL) BETWEEN (rt0.c1) AND (rt0.c1))) AND (rt0.c1));
SELECT ALL * FROM rt0, vt1 WHERE (0.9400429578049426) ORDER BY (((rt0.c2)) NOT BETWEEN (((('0.0')IS NOT(vt1.c0)))) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL ((0.9400429578049426) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN (((('0.0')IS NOT(vt1.c0)))) AND ((x''))));
SELECT ALL * FROM rt0, vt1 WHERE (0.9400429578049426) ORDER BY (((rt0.c2)) NOT BETWEEN (((('0.0')IS NOT(vt1.c0)))) AND ((x'')));
SELECT SUM(count) FROM (SELECT ALL ((0.9400429578049426) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c2)) NOT BETWEEN (((('0.0')IS NOT(vt1.c0)))) AND ((x''))));
SELECT ALL * FROM rt0, vt1 WHERE (0.9400429578049426) ORDER BY (((rt0.c2)) NOT BETWEEN (((('0.0')IS NOT(vt1.c0)))) AND ((x'')));
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))<=(LIKELY(rt0.c2)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN -0.0 THEN ((rt0.c0)>>('1936703000')) WHEN (rt0.c0 IN (rt0.c1)) THEN rt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))<=(LIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN -0.0 THEN ((rt0.c0)>>('1936703000')) WHEN (rt0.c0 IN (rt0.c1)) THEN rt0.c0 END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))<=(LIKELY(rt0.c2)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN -0.0 THEN ((rt0.c0)>>('1936703000')) WHEN (rt0.c0 IN (rt0.c1)) THEN rt0.c0 END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))<=(LIKELY(rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN -0.0 THEN ((rt0.c0)>>('1936703000')) WHEN (rt0.c0 IN (rt0.c1)) THEN rt0.c0 END ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2)))<=(LIKELY(rt0.c2)))) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN -0.0 THEN ((rt0.c0)>>('1936703000')) WHEN (rt0.c0 IN (rt0.c1)) THEN rt0.c0 END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c0)))));
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)LIKE(vt1.c1))) BETWEEN ((('0.47654852753123256') NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.495559700034926 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(vt1.c1))) BETWEEN ((('0.47654852753123256') NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.495559700034926 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)LIKE(vt1.c1))) BETWEEN ((('0.47654852753123256') NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.495559700034926 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(vt1.c1))) BETWEEN ((('0.47654852753123256') NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.495559700034926 END))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((rt0.c0)LIKE(vt1.c1))) BETWEEN ((('0.47654852753123256') NOT BETWEEN (rt0.c2) AND (vt1.c1))) AND (CASE rt0.c1  WHEN rt0.c1 THEN 0.495559700034926 END)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 WHERE ('') ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 WHERE ('') ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 ORDER BY NULL ASC);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON vt1.c1 WHERE ('') ORDER BY NULL ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((1.643705152E9 COLLATE NOCASE)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((1.643705152E9 COLLATE NOCASE)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((1.643705152E9 COLLATE NOCASE)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((1.643705152E9 COLLATE NOCASE)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((1.643705152E9 COLLATE NOCASE)OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt1.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c2);
SELECT * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c0 AS TEXT))))) IS TRUE)  as count FROM vt1 NOT INDEXED);
SELECT * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((CAST(vt1.c0 AS TEXT)))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'6415479b') NOT BETWEEN (x'') AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST, ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+((((vt1.c0, vt1.c1, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'6415479b') NOT BETWEEN (x'') AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST, ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+((((vt1.c0, vt1.c1, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'6415479b') NOT BETWEEN (x'') AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST, ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+((((vt1.c0, vt1.c1, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'6415479b') NOT BETWEEN (x'') AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST, ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+((((vt1.c0, vt1.c1, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((x'6415479b') NOT BETWEEN (x'') AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) ORDER BY rt0.c0 COLLATE NOCASE  NULLS FIRST, ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))+((((vt1.c0, vt1.c1, rt0.c1))<=((vt1.c0, vt1.c0, vt1.c1))))) ASC;
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY CAST((vt1.c1 IN (rt0.c0, vt1.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((vt1.c1 IN (rt0.c0, vt1.c1)) AS REAL) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY CAST((vt1.c1 IN (rt0.c0, vt1.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST((vt1.c1 IN (rt0.c0, vt1.c1)) AS REAL) ASC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (rt0.c2) ORDER BY CAST((vt1.c1 IN (rt0.c0, vt1.c1)) AS REAL) ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT ((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)), ((x'')AND(vt1.c1)))) ORDER BY ((((rt0.c2)+(rt0.c0)))||(((rt0.c1)/(-1.395503942E9))))  NULLS LAST, json_array_length(rt0.c2, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)), ((x'')AND(vt1.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)+(rt0.c0)))||(((rt0.c1)/(-1.395503942E9))))  NULLS LAST, json_array_length(rt0.c2, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (TRIM(DISTINCT ((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)), ((x'')AND(vt1.c1)))) ORDER BY ((((rt0.c2)+(rt0.c0)))||(((rt0.c1)/(-1.395503942E9))))  NULLS LAST, json_array_length(rt0.c2, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)), ((x'')AND(vt1.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2)+(rt0.c0)))||(((rt0.c1)/(-1.395503942E9))))  NULLS LAST, json_array_length(rt0.c2, ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) ASC);
SELECT ALL * FROM rt0 WHERE ('882479706');
SELECT SUM(count) FROM (SELECT (('882479706') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('882479706');
SELECT SUM(count) FROM (SELECT (('882479706') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('882479706');
SELECT COUNT(*) FROM rt0 WHERE (STRFTIME('0.7643872563087907', ((rt0.c2)AND(rt0.c0)), ((rt0.c0) IS FALSE))) ORDER BY (((((rt0.c1)=(rt0.c0))))<((highlight(rt0.c0, rt0.c2, rt0.c0, rt0.c1)))) DESC, (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 END, rt0.c0)) AND ((rt0.c1, (((rt0.c2))<((rt0.c0))), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME('0.7643872563087907', ((rt0.c2)AND(rt0.c0)), ((rt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)=(rt0.c0))))<((highlight(rt0.c0, rt0.c2, rt0.c0, rt0.c1)))) DESC, (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 END, rt0.c0)) AND ((rt0.c1, (((rt0.c2))<((rt0.c0))), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (STRFTIME('0.7643872563087907', ((rt0.c2)AND(rt0.c0)), ((rt0.c0) IS FALSE))) ORDER BY (((((rt0.c1)=(rt0.c0))))<((highlight(rt0.c0, rt0.c2, rt0.c0, rt0.c1)))) DESC, (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 END, rt0.c0)) AND ((rt0.c1, (((rt0.c2))<((rt0.c0))), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((STRFTIME('0.7643872563087907', ((rt0.c2)AND(rt0.c0)), ((rt0.c0) IS FALSE))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c1)=(rt0.c0))))<((highlight(rt0.c0, rt0.c2, rt0.c0, rt0.c1)))) DESC, (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c2, CASE WHEN rt0.c2 THEN rt0.c1 END, rt0.c0)) AND ((rt0.c1, (((rt0.c2))<((rt0.c0))), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2))))) DESC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2 IN ()))>=((1305592626 IN ())))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c1 END) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>=((1305592626 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c1 END) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2 IN ()))>=((1305592626 IN ())))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c1 END) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ()))>=((1305592626 IN ())))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c1 END) NOT NULL) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2 IN ()))>=((1305592626 IN ())))) ORDER BY ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c1 END) NOT NULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE ((NULL COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((NULL COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((NULL COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST((~ (vt1.c0)) AS INTEGER)) ORDER BY vt1.c1 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)>=(vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>=(vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)>=(vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)>=(vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)>=(vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (((((((((((((vt1.c1)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)))AND(vt1.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE ((x'be88' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'be88' IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((x'be88' IN ()));
SELECT SUM(count) FROM (SELECT ALL (((x'be88' IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE ((x'be88' IN ()));
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)<<(rt0.c1)) IN (((rt0.c0)AND(rt0.c2)), rt0.c2))) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(rt0.c1)) IN (((rt0.c0)AND(rt0.c2)), rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)<<(rt0.c1)) IN (((rt0.c0)AND(rt0.c2)), rt0.c2))) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)<<(rt0.c1)) IN (((rt0.c0)AND(rt0.c2)), rt0.c2))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((rt0.c0)<<(rt0.c1)) IN (((rt0.c0)AND(rt0.c2)), rt0.c2))) ORDER BY ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((rt0.c1) IS TRUE)) AND (((rt0.c1)IS NOT(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c2)-(rt0.c1))) ORDER BY '◨' ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY '◨' ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)-(rt0.c1))) ORDER BY '◨' ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)-(rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY '◨' ASC);
SELECT ALL * FROM rt0 WHERE (((rt0.c2)-(rt0.c1))) ORDER BY '◨' ASC;
SELECT ALL * FROM rt0 WHERE (LTRIM(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LTRIM(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((LTRIM(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LTRIM(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END));
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c1)=(vt1.c0))) BETWEEN (CASE WHEN '0.7757727502943872' THEN rt0.c0 END) AND ((- (vt1.c0))))) ORDER BY ((NULL) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)==(vt1.c0))) BETWEEN (CASE WHEN '0.7757727502943872' THEN rt0.c0 END) AND ((- (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c1)=(vt1.c0))) BETWEEN (CASE WHEN '0.7757727502943872' THEN rt0.c0 END) AND ((- (vt1.c0))))) ORDER BY ((NULL) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1)==(vt1.c0))) BETWEEN (CASE WHEN '0.7757727502943872' THEN rt0.c0 END) AND ((- (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((NULL) NOTNULL) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((vt1.c1)=(vt1.c0))) BETWEEN (CASE WHEN '0.7757727502943872' THEN rt0.c0 END) AND ((- (vt1.c0))))) ORDER BY ((NULL) NOTNULL) DESC;
SELECT * FROM vt1, rt0 WHERE (((((((((((((CAST(rt0.c1 AS BLOB))AND(((vt1.c1)<>(rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND((vt1.c0 IN (rt0.c0)))))OR((vt1.c1 IN ()))))OR(vt1.c1)))OR(((vt1.c1)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt0.c1 AS BLOB))AND(((vt1.c1)!=(rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND((vt1.c0 IN (rt0.c0)))))OR((vt1.c1 IN ()))))OR(vt1.c1)))OR(((vt1.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((((((((CAST(rt0.c1 AS BLOB))AND(((vt1.c1)<>(rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND((vt1.c0 IN (rt0.c0)))))OR((vt1.c1 IN ()))))OR(vt1.c1)))OR(((vt1.c1)<=(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt0.c1 AS BLOB))AND(((vt1.c1)!=(rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND((vt1.c0 IN (rt0.c0)))))OR((vt1.c1 IN ()))))OR(vt1.c1)))OR(((vt1.c1)<=(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((((((((((CAST(rt0.c1 AS BLOB))AND(((vt1.c1)<>(rt0.c1)))))OR(CAST(vt1.c0 AS INTEGER))))AND((vt1.c0 IN (rt0.c0)))))OR((vt1.c1 IN ()))))OR(vt1.c1)))OR(((vt1.c1)<=(vt1.c0)))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, vt1.c0))) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) AND ((CAST(rt0.c2 AS NUMERIC))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN x'' END)) AND ((UNLIKELY(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) AND ((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, vt1.c0))) NOT NULL) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN x'' END)) AND ((UNLIKELY(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, vt1.c0))) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) AND ((CAST(rt0.c2 AS NUMERIC))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN x'' END)) AND ((UNLIKELY(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) AND ((CAST(rt0.c2 AS NUMERIC))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, vt1.c0))) NOT NULL) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN x'' END)) AND ((UNLIKELY(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON (((rt0.c1 IN (rt0.c1, vt1.c0))) NOT NULL) WHERE ((((rt0.c1)) BETWEEN ((((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))) AND ((CAST(rt0.c2 AS NUMERIC))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN x'' END)) AND ((UNLIKELY(vt1.c1)))) ASC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))%(((rt0.c1)||(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))%(((rt0.c1)||(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))%(((rt0.c1)||(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))%(((rt0.c1)||(vt1.c1))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(vt1.c1)))AND(vt1.c1)))%(((rt0.c1)||(vt1.c1)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c1) IS FALSE))OR(TYPEOF(rt0.c2))))AND(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR(TYPEOF(rt0.c2))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c1) IS FALSE))OR(TYPEOF(rt0.c2))))AND(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR(TYPEOF(rt0.c2))))AND(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c1) IS FALSE))OR(TYPEOF(rt0.c2))))AND(rt0.c2 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)-(((rt0.c0)GLOB('')))) WHERE (((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1))) BETWEEN (((((vt1.c1)OR(rt0.c0)))OR(rt0.c0))) AND ((('-50825927') NOT BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1))) BETWEEN (((((vt1.c1)OR(rt0.c0)))OR(rt0.c0))) AND ((('-50825927') NOT BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)-(((rt0.c0)GLOB('')))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)-(((rt0.c0)GLOB('')))) WHERE (((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1))) BETWEEN (((((vt1.c1)OR(rt0.c0)))OR(rt0.c0))) AND ((('-50825927') NOT BETWEEN (vt1.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1))) BETWEEN (((((vt1.c1)OR(rt0.c0)))OR(rt0.c0))) AND ((('-50825927') NOT BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)-(((rt0.c0)GLOB('')))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)-(((rt0.c0)GLOB('')))) WHERE (((((((vt1.c0)AND(vt1.c0)))AND(rt0.c1))) BETWEEN (((((vt1.c1)OR(rt0.c0)))OR(rt0.c0))) AND ((('-50825927') NOT BETWEEN (vt1.c0) AND (NULL)))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR((~ (rt0.c2)))))OR((~ (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE) DESC  NULLS LAST, NULL, CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((~ (rt0.c2)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE) DESC  NULLS LAST, NULL, CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR((~ (rt0.c2)))))OR((~ (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE) DESC  NULLS LAST, NULL, CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((~ (rt0.c2)))))OR((~ (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE) DESC  NULLS LAST, NULL, CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)OR((~ (rt0.c2)))))OR((~ (rt0.c0))))) ORDER BY ((CAST(rt0.c0 AS INTEGER)) IS TRUE) DESC  NULLS LAST, NULL, CASE ((rt0.c1) NOT NULL)  WHEN CAST(rt0.c0 AS TEXT) THEN CASE WHEN NULL THEN rt0.c1 ELSE rt0.c0 END END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (0xffffffff8310771a) AND (1410931190)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (0Xffffffff8310771a) AND (1410931190))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (0xffffffff8310771a) AND (1410931190)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (0Xffffffff8310771a) AND (1410931190))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((((((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (0xffffffff8310771a) AND (1410931190)));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ())) ORDER BY '-932096329' DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-932096329' DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ())) ORDER BY '-932096329' DESC;
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY '-932096329' DESC);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ())) ORDER BY '-932096329' DESC;
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c1)IS NOT(vt1.c0)))))) ORDER BY ((((vt1.c0)GLOB(vt1.c1))) ISNULL) DESC, vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c1)IS NOT(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c1))) ISNULL) DESC, vt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c1)IS NOT(vt1.c0)))))) ORDER BY ((((vt1.c0)GLOB(vt1.c1))) ISNULL) DESC, vt1.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c1)IS NOT(vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)GLOB(vt1.c1))) ISNULL) DESC, vt1.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN ((CASE vt1.c1  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)) AND ((((vt1.c1)IS NOT(vt1.c0)))))) ORDER BY ((((vt1.c0)GLOB(vt1.c1))) ISNULL) DESC, vt1.c1 DESC  NULLS LAST;
SELECT * FROM vt1 WHERE ('r\n(i') ORDER BY HEX(DISTINCT vt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('r\n(i') IS TRUE)  as count FROM vt1 ORDER BY HEX(DISTINCT vt1.c1 COLLATE NOCASE));
SELECT * FROM vt1 WHERE ('r\n(i') ORDER BY HEX(DISTINCT vt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('r\n(i') IS TRUE)  as count FROM vt1 ORDER BY HEX(DISTINCT vt1.c1 COLLATE NOCASE));
SELECT * FROM vt1 WHERE ('r\n(i') ORDER BY HEX(DISTINCT vt1.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN '361435515' THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY (((rt0.c2 IN (rt0.c0)))<(0.4257744019154521))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN '361435515' THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0)))<(0.4257744019154521))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN '361435515' THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY (((rt0.c2 IN (rt0.c0)))<(0.4257744019154521))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CASE WHEN '361435515' THEN rt0.c0 ELSE rt0.c1 END IN ())) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN (rt0.c0)))<(0.4257744019154521))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((CASE WHEN '361435515' THEN rt0.c0 ELSE rt0.c1 END IN ())) ORDER BY (((rt0.c2 IN (rt0.c0)))<(0.4257744019154521))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)>=(rt0.c2)) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((((NULL)IS NOT(rt0.c0))))<=((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c2)) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((((NULL)IS NOT(rt0.c0))))<=((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)>=(rt0.c2)) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((((NULL)IS NOT(rt0.c0))))<=((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)>=(rt0.c2)) IN (rt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM rt0 ORDER BY (((((NULL)IS NOT(rt0.c0))))<=((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)>=(rt0.c2)) IN (rt0.c1 COLLATE BINARY))) ORDER BY (((((NULL)IS NOT(rt0.c0))))<=((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((((('ꓬY999')AND(rt0.c1)))AND(vt1.c0)) IN (((rt0.c1)<=(x'')), ((rt0.c1)LIKE(vt1.c0))))) ORDER BY 0.2393508767787781 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('ꓬY999')AND(rt0.c1)))AND(vt1.c0)) IN (((rt0.c1)<=(x'')), ((rt0.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY 0.2393508767787781 ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((('ꓬY999')AND(rt0.c1)))AND(vt1.c0)) IN (((rt0.c1)<=(x'')), ((rt0.c1)LIKE(vt1.c0))))) ORDER BY 0.2393508767787781 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('ꓬY999')AND(rt0.c1)))AND(vt1.c0)) IN (((rt0.c1)<=(x'')), ((rt0.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY 0.2393508767787781 ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((('ꓬY999')AND(rt0.c1)))AND(vt1.c0)) IN (((rt0.c1)<=(x'')), ((rt0.c1)LIKE(vt1.c0))))) ORDER BY 0.2393508767787781 ASC  NULLS LAST;
SELECT * FROM vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(vt1.c1 AS TEXT) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN (vt1.c1 IN (vt1.c1)) END) ORDER BY NULL  NULLS FIRST, (+ ((NOT (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(vt1.c0) THEN (vt1.c1 IN (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS FIRST, (+ ((NOT (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) IS FALSE)) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN (vt1.c1 IN (vt1.c1)) END) ORDER BY NULL  NULLS FIRST, (+ ((NOT (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) IS FALSE)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(vt1.c0) THEN (vt1.c1 IN (vt1.c1)) END) IS TRUE)  as count FROM vt1 ORDER BY NULL  NULLS FIRST, (+ ((NOT (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) IS FALSE)) IS TRUE));
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN LOWER(vt1.c0) THEN (vt1.c1 IN (vt1.c1)) END) ORDER BY NULL  NULLS FIRST, (+ ((NOT (vt1.c0)))) ASC  NULLS LAST, ((((vt1.c0) IS FALSE)) IS TRUE);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (IFNULL(((vt1.c1) NOT BETWEEN (1.936703E9) AND (rt0.c0)), rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt1.c1) NOT BETWEEN (1.936703E9) AND (rt0.c0)), rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (IFNULL(((vt1.c1) NOT BETWEEN (1.936703E9) AND (rt0.c0)), rt0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((vt1.c1) NOT BETWEEN (1.936703E9) AND (rt0.c0)), rt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (IFNULL(((vt1.c1) NOT BETWEEN (1.936703E9) AND (rt0.c0)), rt0.c0 COLLATE BINARY));
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (0.9673363088677858) AND (vt1.c0)) IN ())) ORDER BY HEX((NOT (vt1.c1))), (vt1.c0 COLLATE RTRIM IN (((vt1.c1)%(vt1.c0)))) DESC, STRFTIME((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, ((((vt1.c0)AND(NULL)))AND(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (0.9673363088677858) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY HEX((NOT (vt1.c1))), (vt1.c0 COLLATE RTRIM IN (((vt1.c1)%(vt1.c0)))) DESC, STRFTIME((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, ((((vt1.c0)AND(NULL)))AND(vt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (0.9673363088677858) AND (vt1.c0)) IN ())) ORDER BY HEX((NOT (vt1.c1))), (vt1.c0 COLLATE RTRIM IN (((vt1.c1)%(vt1.c0)))) DESC, STRFTIME((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, ((((vt1.c0)AND(NULL)))AND(vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0) NOT BETWEEN (0.9673363088677858) AND (vt1.c0)) IN ())) IS TRUE)  as count FROM vt1 ORDER BY HEX((NOT (vt1.c1))), (vt1.c0 COLLATE RTRIM IN (((vt1.c1)%(vt1.c0)))) DESC, STRFTIME((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, ((((vt1.c0)AND(NULL)))AND(vt1.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0) NOT BETWEEN (0.9673363088677858) AND (vt1.c0)) IN ())) ORDER BY HEX((NOT (vt1.c1))), (vt1.c0 COLLATE RTRIM IN (((vt1.c1)%(vt1.c0)))) DESC, STRFTIME((vt1.c0 IN ()), vt1.c0 COLLATE NOCASE, ((((vt1.c0)AND(NULL)))AND(vt1.c0))) ASC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (((LIKELIHOOD(rt0.c0, 0.10070708262658479))>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c0, 0.10070708262658479))>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((LIKELIHOOD(rt0.c0, 0.10070708262658479))>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c0, 0.10070708262658479))>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((LIKELIHOOD(rt0.c0, 0.10070708262658479))>(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c1 THEN vt1.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c1 THEN vt1.c1 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c1 THEN vt1.c1 END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c1 THEN vt1.c1 END AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CASE WHEN vt1.c1 THEN vt1.c1 END AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 END WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 END WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 END);
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON CASE WHEN (rt0.c0 IN ()) THEN vt1.c0 END WHERE ((rt0.c1 IN ()));
SELECT * FROM vt1 WHERE (((((NULL)IS NOT(vt1.c1)))|(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS NOT(vt1.c1)))|(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((NULL)IS NOT(vt1.c1)))|(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL)IS NOT(vt1.c1)))|(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((NULL)IS NOT(vt1.c1)))|(((((vt1.c0)OR(vt1.c0)))OR(vt1.c1)))));
SELECT * FROM rt0 WHERE (((+ (rt0.c0)) IN (NULL COLLATE NOCASE, CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c0)) IN (NULL COLLATE NOCASE, CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((+ (rt0.c0)) IN (NULL COLLATE NOCASE, CAST(rt0.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c0)) IN (NULL COLLATE NOCASE, CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((+ (rt0.c0)) IN (NULL COLLATE NOCASE, CAST(rt0.c2 AS REAL))));
SELECT * FROM rt0, vt1 WHERE ((- (((-793563106)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((-793563106)+(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((- (((-793563106)+(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((- (((-793563106)+(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((- (((-793563106)+(rt0.c2)))));
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((HEX(rt0.c2)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((HEX(rt0.c2)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((HEX(rt0.c2)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((HEX(rt0.c2)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (((HEX(rt0.c2)) NOT BETWEEN (((rt0.c0) IS FALSE)) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((- (rt0.c1))))) ORDER BY (((((((((~ (rt0.c2)))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(x'dc2a')))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((- (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((~ (rt0.c2)))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(x'dc2a')))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((- (rt0.c1))))) ORDER BY (((((((((~ (rt0.c2)))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(x'dc2a')))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT NULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((- (rt0.c1))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((((((~ (rt0.c2)))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(x'dc2a')))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) NOT NULL)) NOT BETWEEN ((rt0.c0 IN ())) AND ((- (rt0.c1))))) ORDER BY (((((((((~ (rt0.c2)))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)))OR(x'dc2a')))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0))))  NULLS LAST;
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN LIKELY(vt1.c0) THEN ABS(vt1.c1) END WHERE ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((TRIM(DISTINCT vt1.c1))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((TRIM(DISTINCT vt1.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN LIKELY(vt1.c0) THEN ABS(vt1.c1) END ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN LIKELY(vt1.c0) THEN ABS(vt1.c1) END WHERE ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((TRIM(DISTINCT vt1.c1))))) ORDER BY x'' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((TRIM(DISTINCT vt1.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN LIKELY(vt1.c0) THEN ABS(vt1.c1) END ORDER BY x'' DESC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt1 ON CASE WHEN LIKELY(vt1.c0) THEN ABS(vt1.c1) END WHERE ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((TRIM(DISTINCT vt1.c1))))) ORDER BY x'' DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((+ ((((('1137285098')AND(vt1.c1)))AND(vt1.c1))))) ORDER BY ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) IS FALSE), ((((rt0.c2) IS TRUE)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ ((((('1137285098')AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) IS FALSE), ((((rt0.c2) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((+ ((((('1137285098')AND(vt1.c1)))AND(vt1.c1))))) ORDER BY ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) IS FALSE), ((((rt0.c2) IS TRUE)) NOT NULL);
SELECT SUM(count) FROM (SELECT (((+ ((((('1137285098')AND(vt1.c1)))AND(vt1.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) IS FALSE), ((((rt0.c2) IS TRUE)) NOT NULL));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((+ ((((('1137285098')AND(vt1.c1)))AND(vt1.c1))))) ORDER BY ((((((rt0.c2)OR(vt1.c0)))OR(rt0.c1))) IS FALSE), ((((rt0.c2) IS TRUE)) NOT NULL);
SELECT * FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (0.9542603708574922) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((0.9542603708574922) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (0.9542603708574922) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((0.9542603708574922) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (0.9542603708574922) ORDER BY ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE NOCASE;
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ('246477275');
SELECT SUM(count) FROM (SELECT (('246477275') IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ('246477275');
SELECT SUM(count) FROM (SELECT (('246477275') IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE ('246477275');
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (rt0.c2 COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE 0.19686363042736765 END))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE 0.19686363042736765 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE 0.19686363042736765 END))) ORDER BY vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE 0.19686363042736765 END))) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((+ (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 ELSE 0.19686363042736765 END))) ORDER BY vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((NULL)!=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)!=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((NULL)<>(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)!=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(TOTAL_CHANGES())))AND(CAST(rt0.c0 AS REAL))));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1) IS TRUE))LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS TRUE))LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1) IS TRUE))LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS TRUE))LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1) IS TRUE))LIKE(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((NULL) ISNULL));
SELECT * FROM rt0, vt1 WHERE (((((((0.8362156194586319, '?QH7~hR', 1194689258)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((vt1.c1, rt0.c2, rt0.c1)))))<>(('-1107757038'))));
SELECT SUM(count) FROM (SELECT ((((((((0.8362156194586319, '?QH7~hR', 1194689258)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((vt1.c1, rt0.c2, rt0.c1)))))!=(('-1107757038')))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((0.8362156194586319, '?QH7~hR', 1194689258)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((vt1.c1, rt0.c2, rt0.c1)))))<>(('-1107757038'))));
SELECT SUM(count) FROM (SELECT ((((((((0.8362156194586319, '?QH7~hR', 1194689258)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((vt1.c1, rt0.c2, rt0.c1)))))!=(('-1107757038')))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((((((0.8362156194586319, '?QH7~hR', 1194689258)) NOT BETWEEN ((rt0.c2, rt0.c1, vt1.c0)) AND ((vt1.c1, rt0.c2, rt0.c1)))))<>(('-1107757038'))));
SELECT * FROM vt1 WHERE ((json_extract(vt1.c1, vt1.c1, vt1.c0, vt1.c1) IN ())) ORDER BY vt1.c0  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt1.c1, vt1.c1, vt1.c0, vt1.c1) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, NULL);
SELECT * FROM vt1 WHERE ((json_extract(vt1.c1, vt1.c1, vt1.c0, vt1.c1) IN ())) ORDER BY vt1.c0  NULLS FIRST, NULL;
SELECT SUM(count) FROM (SELECT ALL (((json_extract(vt1.c1, vt1.c1, vt1.c0, vt1.c1) IN ())) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, NULL);
SELECT * FROM vt1 WHERE ((json_extract(vt1.c1, vt1.c1, vt1.c0, vt1.c1) IN ())) ORDER BY vt1.c0  NULLS FIRST, NULL;
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))<=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY 0.9214722436985948 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))<=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY 0.9214722436985948 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))<=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY 0.9214722436985948 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))<=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY 0.9214722436985948 DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))<=(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY 0.9214722436985948 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) IS TRUE) ELSE LIKELIHOOD(rt0.c0, 0.060818361557142264) END) ORDER BY UNLIKELY(DISTINCT (rt0.c2 IN ()))  NULLS FIRST, 0.38857360141634223 DESC  NULLS FIRST, -1957676077;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) IS TRUE) ELSE LIKELIHOOD(rt0.c0, 0.060818361557142264) END) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT (rt0.c2 IN ()))  NULLS FIRST, 0.38857360141634223 DESC  NULLS FIRST, -1957676077);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) IS TRUE) ELSE LIKELIHOOD(rt0.c0, 0.060818361557142264) END) ORDER BY UNLIKELY(DISTINCT (rt0.c2 IN ()))  NULLS FIRST, 0.38857360141634223 DESC  NULLS FIRST, -1957676077;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) IS TRUE) ELSE LIKELIHOOD(rt0.c0, 0.060818361557142264) END) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(DISTINCT (rt0.c2 IN ()))  NULLS FIRST, 0.38857360141634223 DESC  NULLS FIRST, -1957676077);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c2)))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT(rt0.c2)))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c2)))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT(rt0.c2)))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY (+ (rt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)IS NOT(rt0.c2)))OR(rt0.c2 COLLATE NOCASE))) ORDER BY (+ (rt0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1, -933698615, rt0.c2))>=((vt1.c1, vt1.c0, 'I豍?^'))))*(TIME(rt0.c0, rt0.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, -933698615, rt0.c2))>=((vt1.c1, vt1.c0, 'I豍?^'))))*(TIME(rt0.c0, rt0.c1, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1, -933698615, rt0.c2))>=((vt1.c1, vt1.c0, 'I豍?^'))))*(TIME(rt0.c0, rt0.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c1, -933698615, rt0.c2))>=((vt1.c1, vt1.c0, 'I豍?^'))))*(TIME(rt0.c0, rt0.c1, vt1.c0)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1, -933698615, rt0.c2))>=((vt1.c1, vt1.c0, 'I豍?^'))))*(TIME(rt0.c0, rt0.c1, vt1.c0))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN '0.2393508767787781' THEN (NOT (rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST('k2QMn' AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((vt1.c1)==(rt0.c1)) THEN ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((0.5941234441730407) NOTNULL) THEN (- (vt1.c0)) ELSE CAST(rt0.c0 AS REAL) END) ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '0.2393508767787781' THEN (NOT (rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST('k2QMn' AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((vt1.c1)=(rt0.c1)) THEN ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((0.5941234441730407) NOTNULL) THEN (- (vt1.c0)) ELSE CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN '0.2393508767787781' THEN (NOT (rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST('k2QMn' AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((vt1.c1)==(rt0.c1)) THEN ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((0.5941234441730407) NOTNULL) THEN (- (vt1.c0)) ELSE CAST(rt0.c0 AS REAL) END) ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '0.2393508767787781' THEN (NOT (rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST('k2QMn' AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((vt1.c1)=(rt0.c1)) THEN ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((0.5941234441730407) NOTNULL) THEN (- (vt1.c0)) ELSE CAST(rt0.c0 AS REAL) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE WHEN '0.2393508767787781' THEN (NOT (rt0.c2)) WHEN CAST(rt0.c2 AS BLOB) THEN CAST('k2QMn' AS REAL) WHEN (NOT (rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((vt1.c1)==(rt0.c1)) THEN ((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((0.5941234441730407) NOTNULL) THEN (- (vt1.c0)) ELSE CAST(rt0.c0 AS REAL) END) ORDER BY (rt0.c1 COLLATE BINARY IN ()) DESC;
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY WHERE (NULL COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON ((((rt0.c1)OR(rt0.c2)))AND(rt0.c2)) COLLATE BINARY WHERE (NULL COLLATE BINARY);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (1.137285098E9))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (1.137285098E9)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (1.137285098E9))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (1.137285098E9)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (1.137285098E9))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((CASE vt1.c1  WHEN rt0.c2 THEN rt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.4449262550353993) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4449262550353993) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.4449262550353993) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.4449262550353993) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (0.4449262550353993) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))||(((((rt0.c1)OR(rt0.c2)))OR(rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((CAST(vt1.c1 AS NUMERIC))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((CAST(vt1.c1 AS NUMERIC))) AND ((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((CAST(vt1.c1 AS NUMERIC))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) BETWEEN ((CAST(vt1.c1 AS NUMERIC))) AND ((vt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((vt1.c1)) BETWEEN ((CAST(vt1.c1 AS NUMERIC))) AND ((vt1.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)|(vt1.c1))) ISNULL)) ORDER BY (NOT (((vt1.c0) BETWEEN (0.34774766799351564) AND (vt1.c0)))), ((((((NULL)IS NOT(vt1.c1)))OR(((0.6529982599965071)OR(0.5121420763202448)))))AND(((vt1.c0)>>(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)|(vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) BETWEEN (0.34774766799351564) AND (vt1.c0)))), ((((((NULL)IS NOT(vt1.c1)))OR(((0.6529982599965071)OR(0.5121420763202448)))))AND(((vt1.c0)>>(x'')))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)|(vt1.c1))) ISNULL)) ORDER BY (NOT (((vt1.c0) BETWEEN (0.34774766799351564) AND (vt1.c0)))), ((((((NULL)IS NOT(vt1.c1)))OR(((0.6529982599965071)OR(0.5121420763202448)))))AND(((vt1.c0)>>(x''))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)|(vt1.c1))) ISNULL)) IS TRUE)  as count FROM vt1 ORDER BY (NOT (((vt1.c0) BETWEEN (0.34774766799351564) AND (vt1.c0)))), ((((((NULL)IS NOT(vt1.c1)))OR(((0.6529982599965071)OR(0.5121420763202448)))))AND(((vt1.c0)>>(x'')))));
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)|(vt1.c1))) ISNULL)) ORDER BY (NOT (((vt1.c0) BETWEEN (0.34774766799351564) AND (vt1.c0)))), ((((((NULL)IS NOT(vt1.c1)))OR(((0.6529982599965071)OR(0.5121420763202448)))))AND(((vt1.c0)>>(x''))));
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2)+(vt1.c0))) NOTNULL)) ORDER BY CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN 'aꓬgSR]' THEN rt0.c0 WHEN vt1.c1 THEN '-1847256375' WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c1))) THEN ABS(DISTINCT rt0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) ELSE (~ (vt1.c0)) END  NULLS LAST, UNLIKELY(((vt1.c0) NOT NULL)) ASC  NULLS LAST, CAST('1305592626' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN 'aꓬgSR]' THEN rt0.c0 WHEN vt1.c1 THEN '-1847256375' WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c1))) THEN ABS(DISTINCT rt0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) ELSE (~ (vt1.c0)) END  NULLS LAST, UNLIKELY(((vt1.c0) NOT NULL)) ASC  NULLS LAST, CAST('1305592626' AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2)+(vt1.c0))) NOTNULL)) ORDER BY CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN 'aꓬgSR]' THEN rt0.c0 WHEN vt1.c1 THEN '-1847256375' WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c1))) THEN ABS(DISTINCT rt0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) ELSE (~ (vt1.c0)) END  NULLS LAST, UNLIKELY(((vt1.c0) NOT NULL)) ASC  NULLS LAST, CAST('1305592626' AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 ORDER BY CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN 'aꓬgSR]' THEN rt0.c0 WHEN vt1.c1 THEN '-1847256375' WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c1))) THEN ABS(DISTINCT rt0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) ELSE (~ (vt1.c0)) END  NULLS LAST, UNLIKELY(((vt1.c0) NOT NULL)) ASC  NULLS LAST, CAST('1305592626' AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON rt0.c2 WHERE (((((rt0.c2)+(vt1.c0))) NOTNULL)) ORDER BY CASE WHEN CAST(vt1.c1 AS BLOB) THEN CASE WHEN 'aꓬgSR]' THEN rt0.c0 WHEN vt1.c1 THEN '-1847256375' WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c1 END WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c1))) THEN ABS(DISTINCT rt0.c1) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)) ELSE (~ (vt1.c0)) END  NULLS LAST, UNLIKELY(((vt1.c0) NOT NULL)) ASC  NULLS LAST, CAST('1305592626' AS INTEGER)  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((((((((rt0.c0)OR(vt1.c1)))AND(x'')))AND(rt0.c2)))AND(vt1.c1))))) ORDER BY rt0.c1 ASC, (((((rt0.c0)OR(rt0.c1)))OR(vt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c0)OR(vt1.c1)))AND(x'')))AND(rt0.c2)))AND(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 ASC, (((((rt0.c0)OR(rt0.c1)))OR(vt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((((((((rt0.c0)OR(vt1.c1)))AND(x'')))AND(rt0.c2)))AND(vt1.c1))))) ORDER BY rt0.c1 ASC, (((((rt0.c0)OR(rt0.c1)))OR(vt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c0)OR(vt1.c1)))AND(x'')))AND(rt0.c2)))AND(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 ASC, (((((rt0.c0)OR(rt0.c1)))OR(vt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE ((NOT (((((((((rt0.c0)OR(vt1.c1)))AND(x'')))AND(rt0.c2)))AND(vt1.c1))))) ORDER BY rt0.c1 ASC, (((((rt0.c0)OR(rt0.c1)))OR(vt1.c1)) IN ()) DESC;
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND((vt1.c0 IN ()))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)AND((vt1.c0 IN ()))))AND(vt1.c0))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c1)AND((vt1.c0 IN ()))))AND(vt1.c0)));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE))<((((vt1.c0))!=((vt1.c1)))))) ORDER BY (NOT (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))<((((vt1.c0))<>((vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE))<((((vt1.c0))!=((vt1.c1)))))) ORDER BY (NOT (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS FALSE))<((((vt1.c0))<>((vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (NOT (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2)))));
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c2) IS FALSE))<((((vt1.c0))!=((vt1.c1)))))) ORDER BY (NOT (((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT NULL), LOWER(rt0.c1), rt0.c1))>((rt0.c1, rt0.c0 COLLATE BINARY, ((rt0.c2)LIKE(rt0.c2)))))) ORDER BY 1031857809 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT NULL), LOWER(rt0.c1), rt0.c1))>((rt0.c1, rt0.c0 COLLATE BINARY, ((rt0.c2)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY 1031857809 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c2) NOT NULL), LOWER(rt0.c1), rt0.c1))>((rt0.c1, rt0.c0 COLLATE BINARY, ((rt0.c2)LIKE(rt0.c2)))))) ORDER BY 1031857809 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2) NOT NULL), LOWER(rt0.c1), rt0.c1))>((rt0.c1, rt0.c0 COLLATE BINARY, ((rt0.c2)LIKE(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY 1031857809 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE ((((x'')) BETWEEN ((TYPEOF(DISTINCT vt1.c0))) AND ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)))) ORDER BY (~ (1.194689258E9)) DESC, NULL DESC, vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((TYPEOF(DISTINCT vt1.c0))) AND ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (1.194689258E9)) DESC, NULL DESC, vt1.c1  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((x'')) BETWEEN ((TYPEOF(DISTINCT vt1.c0))) AND ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)))) ORDER BY (~ (1.194689258E9)) DESC, NULL DESC, vt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN ((TYPEOF(DISTINCT vt1.c0))) AND ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (1.194689258E9)) DESC, NULL DESC, vt1.c1  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE ((((x'')) BETWEEN ((TYPEOF(DISTINCT vt1.c0))) AND ((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c0 END)))) ORDER BY (~ (1.194689258E9)) DESC, NULL DESC, vt1.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (vt1.c1)) COLLATE RTRIM) ORDER BY CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND ('687576901')) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND ('687576901')) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (vt1.c1)) COLLATE RTRIM) ORDER BY CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND ('687576901')) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (vt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND ('687576901')) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (vt1.c1)) COLLATE RTRIM) ORDER BY CAST(((vt1.c1) NOT BETWEEN (rt0.c0) AND ('687576901')) AS NUMERIC) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (TYPEOF(((((vt1.c0)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (TYPEOF(((((vt1.c0)OR(rt0.c1)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (TYPEOF(((((vt1.c0)OR(rt0.c1)))OR(rt0.c0))));
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c1)))AND(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c1)))AND(vt1.c0))  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c1)))AND(vt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c1)))AND(vt1.c0))  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c1) ORDER BY ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 END)AND(vt1.c1)))AND(vt1.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c1 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (rt0.c1 COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (0.0727228648163748) ORDER BY TRIM(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(NULL)), TYPEOF(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.0727228648163748) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(NULL)), TYPEOF(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (0.0727228648163748) ORDER BY TRIM(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(NULL)), TYPEOF(vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.0727228648163748) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(NULL)), TYPEOF(vt1.c0))  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (0.0727228648163748) ORDER BY TRIM(DISTINCT ((((vt1.c0)OR(vt1.c0)))AND(NULL)), TYPEOF(vt1.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.5150498476805926 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.5150498476805926 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.5150498476805926 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(0.5150498476805926 AS BLOB)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(0.5150498476805926 AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (vt1.c0 COLLATE BINARY);
SELECT * FROM vt1, rt0 WHERE (((NOT (rt0.c1)) IN ())) ORDER BY ((((((rt0.c0))<>((rt0.c2))), ((vt1.c1)/(vt1.c1)), CAST(rt0.c1 AS BLOB)))=(((- (vt1.c1)), ((rt0.c0)<<('-992991096')), (vt1.c1 IN (vt1.c0)))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0))!=((rt0.c2))), ((vt1.c1)/(vt1.c1)), CAST(rt0.c1 AS BLOB)))==(((- (vt1.c1)), ((rt0.c0)<<('-992991096')), (vt1.c1 IN (vt1.c0)))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((NOT (rt0.c1)) IN ())) ORDER BY ((((((rt0.c0))<>((rt0.c2))), ((vt1.c1)/(vt1.c1)), CAST(rt0.c1 AS BLOB)))=(((- (vt1.c1)), ((rt0.c0)<<('-992991096')), (vt1.c1 IN (vt1.c0)))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c1)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c0))!=((rt0.c2))), ((vt1.c1)/(vt1.c1)), CAST(rt0.c1 AS BLOB)))==(((- (vt1.c1)), ((rt0.c0)<<('-992991096')), (vt1.c1 IN (vt1.c0)))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((NOT (rt0.c1)) IN ())) ORDER BY ((((((rt0.c0))<>((rt0.c2))), ((vt1.c1)/(vt1.c1)), CAST(rt0.c1 AS BLOB)))=(((- (vt1.c1)), ((rt0.c0)<<('-992991096')), (vt1.c1 IN (vt1.c0)))))  NULLS LAST, ((CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 END) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((NULL IN (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NULL IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NULL IN (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((NULL IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((NULL IN (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1163367529 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((1163367529 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1163367529 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((1163367529 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1);
SELECT COUNT(*) FROM rt0, vt1 WHERE (1163367529 COLLATE NOCASE);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE (- (rt0.c0))  WHEN (NOT (vt1.c1)) THEN (vt1.c0 IN (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN (NOT (vt1.c1)) THEN (vt1.c0 IN (vt1.c1)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE (- (rt0.c0))  WHEN (NOT (vt1.c1)) THEN (vt1.c0 IN (vt1.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (- (rt0.c0))  WHEN (NOT (vt1.c1)) THEN (vt1.c0 IN (vt1.c1)) END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (CASE (- (rt0.c0))  WHEN (NOT (vt1.c1)) THEN (vt1.c0 IN (vt1.c1)) END);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))+(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))+(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))+(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))+(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (((((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)))+(CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 END)));
SELECT * FROM vt1 INNER JOIN rt0 ON (((vt1.c1 COLLATE RTRIM))>=((((((vt1.c1)OR(rt0.c0)))AND(rt0.c2))))) WHERE ((+ (((vt1.c0) BETWEEN (rt0.c1) AND (0.0995489617137767))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM ASC, (((- (rt0.c0)))>(((NULL) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (rt0.c1) AND (0.0995489617137767))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((vt1.c1 COLLATE RTRIM))>=((((((vt1.c1)OR(rt0.c0)))AND(rt0.c2))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM ASC, (((- (rt0.c0)))>(((NULL) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM vt1 INNER JOIN rt0 ON (((vt1.c1 COLLATE RTRIM))>=((((((vt1.c1)OR(rt0.c0)))AND(rt0.c2))))) WHERE ((+ (((vt1.c0) BETWEEN (rt0.c1) AND (0.0995489617137767))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM ASC, (((- (rt0.c0)))>(((NULL) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) BETWEEN (rt0.c1) AND (0.0995489617137767))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (((vt1.c1 COLLATE RTRIM))>=((((((vt1.c1)OR(rt0.c0)))AND(rt0.c2))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM ASC, (((- (rt0.c0)))>(((NULL) IS TRUE))) DESC  NULLS LAST);
SELECT * FROM vt1 INNER JOIN rt0 ON (((vt1.c1 COLLATE RTRIM))>=((((((vt1.c1)OR(rt0.c0)))AND(rt0.c2))))) WHERE ((+ (((vt1.c0) BETWEEN (rt0.c1) AND (0.0995489617137767))))) ORDER BY ((vt1.c0) NOT NULL) COLLATE RTRIM ASC, (((- (rt0.c0)))>(((NULL) IS TRUE))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY ((((0.7065699687578305) BETWEEN (rt0.c0) AND (rt0.c2)))&(vt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((0.7065699687578305) BETWEEN (rt0.c0) AND (rt0.c2)))&(vt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY ((((0.7065699687578305) BETWEEN (rt0.c0) AND (rt0.c2)))&(vt1.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((0.7065699687578305) BETWEEN (rt0.c0) AND (rt0.c2)))&(vt1.c1 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST(rt0.c1 COLLATE NOCASE AS TEXT)) ORDER BY ((((0.7065699687578305) BETWEEN (rt0.c0) AND (rt0.c2)))&(vt1.c1 COLLATE BINARY));
SELECT * FROM rt0, vt1 WHERE ((((NULL) BETWEEN (vt1.c1) AND (rt0.c2)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt1.c1))) AND ((vt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (vt1.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt1.c1))) AND ((vt1.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((NULL) BETWEEN (vt1.c1) AND (rt0.c2)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt1.c1))) AND ((vt1.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NULL) BETWEEN (vt1.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt1.c1))) AND ((vt1.c0 IN ())))  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE ((((NULL) BETWEEN (vt1.c1) AND (rt0.c2)) IN ())) ORDER BY ((vt1.c0 COLLATE RTRIM) BETWEEN ((+ (vt1.c1))) AND ((vt1.c0 IN ())))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)||(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2)||(rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((rt0.c0)AND(-1302984825)))OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))>=(vt1.c0 COLLATE RTRIM))) ORDER BY CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((rt0.c0)AND(-1302984825)))OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))>=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((rt0.c0)AND(-1302984825)))OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))>=(vt1.c0 COLLATE RTRIM))) ORDER BY CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((rt0.c0)AND(-1302984825)))OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))>=(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt0 ORDER BY CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((((((((((((((((rt0.c0)AND(-1302984825)))OR(rt0.c2)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))AND(rt0.c1)))>=(vt1.c0 COLLATE RTRIM))) ORDER BY CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE COLLATE NOCASE  NULLS LAST;
SELECT * FROM rt0 INNER JOIN vt1 ON ((CAST(rt0.c1 AS REAL))OR(NULLIF(x'a495', vt1.c0))) WHERE (((('0.3660783244889583')) BETWEEN (((- (rt0.c2)))) AND (((rt0.c1 IN ()))))) ORDER BY (((NOT (vt1.c0)))LIKE(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('0.3660783244889583')) BETWEEN (((- (rt0.c2)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CAST(rt0.c1 AS REAL))OR(NULLIF(x'a495', vt1.c0))) ORDER BY (((NOT (vt1.c0)))LIKE(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON ((CAST(rt0.c1 AS REAL))OR(NULLIF(x'a495', vt1.c0))) WHERE (((('0.3660783244889583')) BETWEEN (((- (rt0.c2)))) AND (((rt0.c1 IN ()))))) ORDER BY (((NOT (vt1.c0)))LIKE(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((('0.3660783244889583')) BETWEEN (((- (rt0.c2)))) AND (((rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((CAST(rt0.c1 AS REAL))OR(NULLIF(x'a495', vt1.c0))) ORDER BY (((NOT (vt1.c0)))LIKE(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST);
SELECT * FROM rt0 INNER JOIN vt1 ON ((CAST(rt0.c1 AS REAL))OR(NULLIF(x'a495', vt1.c0))) WHERE (((('0.3660783244889583')) BETWEEN (((- (rt0.c2)))) AND (((rt0.c1 IN ()))))) ORDER BY (((NOT (vt1.c0)))LIKE(CAST(rt0.c2 AS NUMERIC)))  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c0)))) ORDER BY (vt1.c0 IN ((+ ('2096675184'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (vt1.c0 IN ((+ ('2096675184'))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c0)))) ORDER BY (vt1.c0 IN ((+ ('2096675184'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c0)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (vt1.c0 IN ((+ ('2096675184'))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c0)))) ORDER BY (vt1.c0 IN ((+ ('2096675184'))))  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON '' WHERE (((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (rt0.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN vt1.c1 WHEN (((rt0.c2))<=((vt1.c1))) THEN (((0.23973568589728078, vt1.c0, rt0.c0, vt1.c1, vt1.c0))>((vt1.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1))) WHEN NULL THEN CAST('' AS REAL) WHEN ((rt0.c0)>(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.5855601664045391) ELSE (~ (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON '' ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (rt0.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN vt1.c1 WHEN (((rt0.c2))<=((vt1.c1))) THEN (((0.23973568589728078, vt1.c0, rt0.c0, vt1.c1, vt1.c0))>((vt1.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1))) WHEN NULL THEN CAST('' AS REAL) WHEN ((rt0.c0)>(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.5855601664045391) ELSE (~ (rt0.c2)) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON '' WHERE (((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (rt0.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN vt1.c1 WHEN (((rt0.c2))<=((vt1.c1))) THEN (((0.23973568589728078, vt1.c0, rt0.c0, vt1.c1, vt1.c0))>((vt1.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1))) WHEN NULL THEN CAST('' AS REAL) WHEN ((rt0.c0)>(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.5855601664045391) ELSE (~ (rt0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON '' ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (rt0.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN vt1.c1 WHEN (((rt0.c2))<=((vt1.c1))) THEN (((0.23973568589728078, vt1.c0, rt0.c0, vt1.c1, vt1.c0))>((vt1.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1))) WHEN NULL THEN CAST('' AS REAL) WHEN ((rt0.c0)>(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.5855601664045391) ELSE (~ (rt0.c2)) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON '' WHERE (((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c0)) COLLATE BINARY) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (rt0.c2)) WHEN CAST(rt0.c1 AS TEXT) THEN vt1.c1 WHEN (((rt0.c2))<=((vt1.c1))) THEN (((0.23973568589728078, vt1.c0, rt0.c0, vt1.c1, vt1.c0))>((vt1.c1, rt0.c1, vt1.c1, rt0.c2, vt1.c1))) WHEN NULL THEN CAST('' AS REAL) WHEN ((rt0.c0)>(rt0.c0)) THEN LIKELIHOOD(rt0.c1, 0.5855601664045391) ELSE (~ (rt0.c2)) END DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(x''))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) AND ((0.7277721832910341))) DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) AND ((0.7277721832910341))) DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(x''))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) AND ((0.7277721832910341))) DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(x''))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) AND ((0.7277721832910341))) DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))&(x''))) ORDER BY (((rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END)) AND ((0.7277721832910341))) DESC, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL) ASC;
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(CAST(rt0.c2 AS REAL))))OR(0.636506235593868))) ORDER BY CASE WHEN x'' THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<((vt1.c0))) THEN NULL WHEN NULLIF(rt0.c0, rt0.c0) THEN ((vt1.c1) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(CAST(rt0.c2 AS REAL))))OR(0.636506235593868))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CASE WHEN x'' THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<((vt1.c0))) THEN NULL WHEN NULLIF(rt0.c0, rt0.c0) THEN ((vt1.c1) IS TRUE) END ASC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(CAST(rt0.c2 AS REAL))))OR(0.636506235593868))) ORDER BY CASE WHEN x'' THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<((vt1.c0))) THEN NULL WHEN NULLIF(rt0.c0, rt0.c0) THEN ((vt1.c1) IS TRUE) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(CAST(rt0.c2 AS REAL))))OR(0.636506235593868))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY CASE WHEN x'' THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<((vt1.c0))) THEN NULL WHEN NULLIF(rt0.c0, rt0.c0) THEN ((vt1.c1) IS TRUE) END ASC  NULLS LAST);
SELECT ALL * FROM rt0 NATURAL JOIN vt1 WHERE (((((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(vt1.c0)))AND(CAST(rt0.c2 AS REAL))))OR(0.636506235593868))) ORDER BY CASE WHEN x'' THEN ((rt0.c2) IS TRUE) WHEN (((rt0.c2))<((vt1.c0))) THEN NULL WHEN NULLIF(rt0.c0, rt0.c0) THEN ((vt1.c1) IS TRUE) END ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((CAST('1407074690' AS BLOB))&(((vt1.c1) IS TRUE)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c1 END)) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS LAST, ((((-1153818075) IS TRUE)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('1407074690' AS BLOB))&(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c1 END)) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS LAST, ((((-1153818075) IS TRUE)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((CAST('1407074690' AS BLOB))&(((vt1.c1) IS TRUE)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c1 END)) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS LAST, ((((-1153818075) IS TRUE)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST('1407074690' AS BLOB))&(((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c1 END)) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS LAST, ((((-1153818075) IS TRUE)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (((CAST('1407074690' AS BLOB))&(((vt1.c1) IS TRUE)))) ORDER BY (((vt1.c1)) NOT BETWEEN ((CASE WHEN vt1.c0 THEN vt1.c1 END)) AND ((CAST(vt1.c0 AS REAL)))) DESC  NULLS LAST, ((((-1153818075) IS TRUE)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN '' THEN NULL END AS BLOB)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c2 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '' THEN NULL END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c2 END AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN '' THEN NULL END AS BLOB)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c2 END AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN '' THEN NULL END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c2 END AS BLOB) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN '' THEN NULL END AS BLOB)) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c0 THEN NULL ELSE rt0.c2 END AS BLOB) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (((((((vt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((NULL) NOTNULL))))AND(NULL))) ORDER BY (+ ((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((NULL) NOTNULL))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ ((- (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((vt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((NULL) NOTNULL))))AND(NULL))) ORDER BY (+ ((- (rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((NULL) NOTNULL))))AND(NULL))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (+ ((- (rt0.c2))))  NULLS FIRST);
SELECT ALL * FROM rt0, vt1 WHERE (((((((vt1.c1) BETWEEN (rt0.c2) AND (rt0.c1)))AND(((NULL) NOTNULL))))AND(NULL))) ORDER BY (+ ((- (rt0.c2))))  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (x'' COLLATE RTRIM) ORDER BY (((((+ (vt1.c0)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c0)OR(rt0.c1)))) ASC, (((0.7372367597716037 IN ())) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((+ (vt1.c0)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c0)OR(rt0.c1)))) ASC, (((0.7372367597716037 IN ())) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND ((- (rt0.c1)))));
SELECT * FROM rt0, vt1 WHERE (x'' COLLATE RTRIM) ORDER BY (((((+ (vt1.c0)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c0)OR(rt0.c1)))) ASC, (((0.7372367597716037 IN ())) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND ((- (rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((+ (vt1.c0)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c0)OR(rt0.c1)))) ASC, (((0.7372367597716037 IN ())) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND ((- (rt0.c1)))));
SELECT * FROM rt0, vt1 WHERE (x'' COLLATE RTRIM) ORDER BY (((((+ (vt1.c0)))AND(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END)))AND(((rt0.c0)OR(rt0.c1)))) ASC, (((0.7372367597716037 IN ())) BETWEEN ((((vt1.c0))>((rt0.c0)))) AND ((- (rt0.c1))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((('-115563534') BETWEEN (((rt0.c0) ISNULL)) AND ('1206753402')));
SELECT SUM(count) FROM (SELECT ALL (((('-115563534') BETWEEN (((rt0.c0) ISNULL)) AND ('1206753402'))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((('-115563534') BETWEEN (((rt0.c0) ISNULL)) AND ('1206753402')));
SELECT SUM(count) FROM (SELECT ALL (((('-115563534') BETWEEN (((rt0.c0) ISNULL)) AND ('1206753402'))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((('-115563534') BETWEEN (((rt0.c0) ISNULL)) AND ('1206753402')));
SELECT * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c1 THEN ((vt1.c1)/(vt1.c1)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.10485136045709198)) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS NUMERIC) WHEN 0.475856503128941 THEN ((vt1.c0)<>(vt1.c1)) ELSE ((x'')/(vt1.c0)) END) ORDER BY (vt1.c1 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c1 THEN ((vt1.c1)/(vt1.c1)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.10485136045709198)) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS NUMERIC) WHEN 0.475856503128941 THEN ((vt1.c0)!=(vt1.c1)) ELSE ((x'')/(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()) COLLATE BINARY DESC);
SELECT * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c1 THEN ((vt1.c1)/(vt1.c1)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.10485136045709198)) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS NUMERIC) WHEN 0.475856503128941 THEN ((vt1.c0)<>(vt1.c1)) ELSE ((x'')/(vt1.c0)) END) ORDER BY (vt1.c1 IN ()) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c1 THEN ((vt1.c1)/(vt1.c1)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.10485136045709198)) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS NUMERIC) WHEN 0.475856503128941 THEN ((vt1.c0)!=(vt1.c1)) ELSE ((x'')/(vt1.c0)) END) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 IN ()) COLLATE BINARY DESC);
SELECT * FROM vt1 WHERE (CASE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))  WHEN vt1.c0 COLLATE RTRIM THEN ((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)) WHEN vt1.c1 THEN ((vt1.c1)/(vt1.c1)) WHEN NULL THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.10485136045709198)) WHEN CAST(vt1.c1 AS INTEGER) THEN CAST(vt1.c0 AS NUMERIC) WHEN 0.475856503128941 THEN ((vt1.c0)<>(vt1.c1)) ELSE ((x'')/(vt1.c0)) END) ORDER BY (vt1.c1 IN ()) COLLATE BINARY DESC;
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN x'' END AS BLOB)) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND(LIKELY(DISTINCT rt0.c0))))OR(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN x'' END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND(LIKELY(DISTINCT rt0.c0))))OR(rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN x'' END AS BLOB)) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND(LIKELY(DISTINCT rt0.c0))))OR(rt0.c2)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN x'' END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND(LIKELY(DISTINCT rt0.c0))))OR(rt0.c2)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN x'' END AS BLOB)) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))AND(LIKELY(DISTINCT rt0.c0))))OR(rt0.c2)) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (((rt0.c2))<((rt0.c1)))  WHEN ((((vt1.c0)OR(0.06002499766539571)))AND(vt1.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))<((rt0.c1)))  WHEN ((((vt1.c0)OR(0.06002499766539571)))AND(vt1.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (((rt0.c2))<((rt0.c1)))  WHEN ((((vt1.c0)OR(0.06002499766539571)))AND(vt1.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt0.c2))<((rt0.c1)))  WHEN ((((vt1.c0)OR(0.06002499766539571)))AND(vt1.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE (((rt0.c2))<((rt0.c1)))  WHEN ((((vt1.c0)OR(0.06002499766539571)))AND(vt1.c0)) THEN CAST(rt0.c2 AS BLOB) ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c0 COLLATE BINARY IN ()));
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1)>=(rt0.c0))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '' END) AND ((~ (rt0.c2))))) ORDER BY (((((rt0.c0))<((rt0.c2))))=((~ (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c0))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '' END) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0))<((rt0.c2))))=((~ (vt1.c1)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1)>=(rt0.c0))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '' END) AND ((~ (rt0.c2))))) ORDER BY (((((rt0.c0))<((rt0.c2))))=((~ (vt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)>=(rt0.c0))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '' END) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((((rt0.c0))<((rt0.c2))))=((~ (vt1.c1)))) DESC);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((rt0.c1)>=(rt0.c0))) BETWEEN (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE '' END) AND ((~ (rt0.c2))))) ORDER BY (((((rt0.c0))<((rt0.c2))))=((~ (vt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CAST(0.3954789113950329 AS TEXT) THEN LIKELIHOOD(rt0.c2, 0.8149843203267013) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(0.3954789113950329 AS TEXT) THEN LIKELIHOOD(rt0.c2, 0.8149843203267013) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CAST(0.3954789113950329 AS TEXT) THEN LIKELIHOOD(rt0.c2, 0.8149843203267013) ELSE vt1.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(0.3954789113950329 AS TEXT) THEN LIKELIHOOD(rt0.c2, 0.8149843203267013) ELSE vt1.c0 END) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN rt0 WHERE (CASE WHEN CAST(0.3954789113950329 AS TEXT) THEN LIKELIHOOD(rt0.c2, 0.8149843203267013) ELSE vt1.c0 END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT COUNT(*) FROM rt0, vt1 WHERE ('1965923562') ORDER BY (((~ (rt0.c1)))+(((rt0.c1)OR(rt0.c0)))) ASC  NULLS LAST, (((~ (vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1965923562') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((~ (rt0.c1)))+(((rt0.c1)OR(rt0.c0)))) ASC  NULLS LAST, (((~ (vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('1965923562') ORDER BY (((~ (rt0.c1)))+(((rt0.c1)OR(rt0.c0)))) ASC  NULLS LAST, (((~ (vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('1965923562') IS TRUE)  as count FROM rt0, vt1 ORDER BY (((~ (rt0.c1)))+(((rt0.c1)OR(rt0.c0)))) ASC  NULLS LAST, (((~ (vt1.c0))) NOTNULL) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE ('1965923562') ORDER BY (((~ (rt0.c1)))+(((rt0.c1)OR(rt0.c0)))) ASC  NULLS LAST, (((~ (vt1.c0))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0)) IS TRUE)) ORDER BY (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) IN ()) DESC, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 911153064 END)!=(((x'') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) IN ()) DESC, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 911153064 END)<>(((x'') IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0)) IS TRUE)) ORDER BY (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) IN ()) DESC, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 911153064 END)!=(((x'') IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((ABS(rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) IN ()) DESC, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 911153064 END)<>(((x'') IS FALSE))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((ABS(rt0.c0)) IS TRUE)) ORDER BY (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) IN ()) DESC, ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE 911153064 END)!=(((x'') IS FALSE))) ASC;
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN '-2141761646' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN '-2141761646' END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN '-2141761646' END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS INTEGER) THEN '-2141761646' END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (CASE WHEN CAST(rt0.c1 AS INTEGER) THEN '-2141761646' END);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) IS TRUE) WHERE (((((vt1.c1) IS FALSE))>(x'' COLLATE BINARY))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS FALSE))>(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) IS TRUE) ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) IS TRUE) WHERE (((((vt1.c1) IS FALSE))>(x'' COLLATE BINARY))) ORDER BY vt1.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) IS FALSE))>(x'' COLLATE BINARY))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) IS TRUE) ORDER BY vt1.c1 DESC);
SELECT COUNT(*) FROM vt1 FULL OUTER JOIN rt0 ON ((CAST(vt1.c0 AS INTEGER)) IS TRUE) WHERE (((((vt1.c1) IS FALSE))>(x'' COLLATE BINARY))) ORDER BY vt1.c1 DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN (- (NULL)) THEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c1)) ELSE ((rt0.c2)IS(rt0.c0)) END) ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (NULL)) THEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c1)) ELSE ((rt0.c2)IS(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS LAST, x''  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN (- (NULL)) THEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c1)) ELSE ((rt0.c2)IS(rt0.c0)) END) ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS LAST, x''  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (NULL)) THEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c1)) ELSE ((rt0.c2)IS(rt0.c0)) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS LAST, x''  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN (- (NULL)) THEN ((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c1)) ELSE ((rt0.c2)IS(rt0.c0)) END) ORDER BY (vt1.c1 COLLATE RTRIM IN ())  NULLS LAST, x''  NULLS LAST;
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(0.7277721832910341)))AND(vt1.c1)))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(0.7277721832910341)))AND(vt1.c1)))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(0.7277721832910341)))AND(vt1.c1)))AND(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1)AND(0.7277721832910341)))AND(vt1.c1)))AND(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((vt1.c1)AND(0.7277721832910341)))AND(vt1.c1)))AND(vt1.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<>('&O')) WHERE (((vt1.c0)>(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<>('&O')));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<>('&O')) WHERE (((vt1.c0)>(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<>('&O')));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN rt0 ON ((CAST(rt0.c2 AS TEXT))<>('&O')) WHERE (((vt1.c0)>(rt0.c0)) COLLATE NOCASE);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c1)))) BETWEEN (0.7688471762214463) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (+ (CAST(rt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c1)))) BETWEEN (0.7688471762214463) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c1)))) BETWEEN (0.7688471762214463) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (+ (CAST(rt0.c0 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c1)))) BETWEEN (0.7688471762214463) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c0 AS REAL)))  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((((rt0.c2, rt0.c1, rt0.c1))!=((rt0.c0, rt0.c2, rt0.c1)))) BETWEEN (0.7688471762214463) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END))) ORDER BY (+ (CAST(rt0.c0 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR(vt1.c1)))OR((NOT (rt0.c2)))) WHERE (((CAST(vt1.c1 AS TEXT))IS NOT(rt0.c0 COLLATE NOCASE))) ORDER BY (((('')&(rt0.c2)))IS(CAST(vt1.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT))IS NOT(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR(vt1.c1)))OR((NOT (rt0.c2)))) ORDER BY (((('')&(rt0.c2)))IS(CAST(vt1.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR(vt1.c1)))OR((NOT (rt0.c2)))) WHERE (((CAST(vt1.c1 AS TEXT))IS NOT(rt0.c0 COLLATE NOCASE))) ORDER BY (((('')&(rt0.c2)))IS(CAST(vt1.c1 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c1 AS TEXT))IS NOT(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR(vt1.c1)))OR((NOT (rt0.c2)))) ORDER BY (((('')&(rt0.c2)))IS(CAST(vt1.c1 AS BLOB))) ASC);
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON ((((CAST(rt0.c1 AS TEXT))OR(vt1.c1)))OR((NOT (rt0.c2)))) WHERE (((CAST(vt1.c1 AS TEXT))IS NOT(rt0.c0 COLLATE NOCASE))) ORDER BY (((('')&(rt0.c2)))IS(CAST(vt1.c1 AS BLOB))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (vt1.c1 IN ())  WHEN (vt1.c0 IN ()) THEN (NOT (vt1.c1)) ELSE vt1.c1 COLLATE RTRIM END) ORDER BY CAST(((vt1.c1) NOTNULL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c1 IN ())  WHEN (vt1.c0 IN ()) THEN (NOT (vt1.c1)) ELSE vt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) NOTNULL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (vt1.c1 IN ())  WHEN (vt1.c0 IN ()) THEN (NOT (vt1.c1)) ELSE vt1.c1 COLLATE RTRIM END) ORDER BY CAST(((vt1.c1) NOTNULL) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt1.c1 IN ())  WHEN (vt1.c0 IN ()) THEN (NOT (vt1.c1)) ELSE vt1.c1 COLLATE RTRIM END) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c1) NOTNULL) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE (vt1.c1 IN ())  WHEN (vt1.c0 IN ()) THEN (NOT (vt1.c1)) ELSE vt1.c1 COLLATE RTRIM END) ORDER BY CAST(((vt1.c1) NOTNULL) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (NULLIF(vt1.c1 COLLATE RTRIM, rt0.c1)) ORDER BY ((rt0.c0)OR(x'' COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c1 COLLATE RTRIM, rt0.c1)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0)OR(x'' COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (NULLIF(vt1.c1 COLLATE RTRIM, rt0.c1)) ORDER BY ((rt0.c0)OR(x'' COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt1.c1 COLLATE RTRIM, rt0.c1)) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c0)OR(x'' COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (NULLIF(vt1.c1 COLLATE RTRIM, rt0.c1)) ORDER BY ((rt0.c0)OR(x'' COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((MAX(vt1.c1, vt1.c1))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((MAX(vt1.c1, vt1.c1))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((MAX(vt1.c1, vt1.c1))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((MAX(vt1.c1, vt1.c1))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((MAX(vt1.c1, vt1.c1))IS NOT(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)||('0.47654852753123256'))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c1) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)||('0.47654852753123256'))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c1) IS FALSE) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)||('0.47654852753123256'))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c1) IS FALSE) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c0)||('0.47654852753123256'))))) IS TRUE)  as count FROM rt0 ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c1) IS FALSE) END  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((NOT (((rt0.c0)||('0.47654852753123256'))))) ORDER BY CASE CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (((rt0.c0))>=((rt0.c2))) ELSE ((rt0.c1) IS FALSE) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(0.5443711660138238 AS INTEGER))|(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CAST(0.5443711660138238 AS INTEGER))|(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(0.5443711660138238 AS INTEGER))|(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((CAST(0.5443711660138238 AS INTEGER))|(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CAST(0.5443711660138238 AS INTEGER))|(rt0.c2)));
SELECT * FROM rt0, vt1 WHERE (((x'') NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((x'') NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((x'') NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((x'') NOT BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c1) IS TRUE))));
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY (((((((rt0.c2))<=((rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c0)))))OR(TRIM(DISTINCT '\)', rt0.c1))), 0Xffffffffabb38579;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2))<=((rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c0)))))OR(TRIM(DISTINCT '\)', rt0.c1))), 0Xffffffffabb38579);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY (((((((rt0.c2))<=((rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c0)))))OR(TRIM(DISTINCT '\)', rt0.c1))), 0Xffffffffabb38579;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c1))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c2))<=((rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c0)))))OR(TRIM(DISTINCT '\)', rt0.c1))), 0Xffffffffabb38579);
SELECT COUNT(*) FROM rt0 WHERE ((((- (rt0.c1))) ISNULL)) ORDER BY (((((((rt0.c2))<=((rt0.c0))))AND((rt0.c2 IN (rt0.c1, rt0.c0)))))OR(TRIM(DISTINCT '\)', rt0.c1))), 0Xffffffffabb38579;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)<=(rt0.c2)))IS(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(rt0.c2)))IS(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)<=(rt0.c2)))IS(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((NULL)<=(rt0.c2)))IS(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((NULL)<=(rt0.c2)))IS(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((vt1.c1)>(rt0.c1)) AS BLOB)) ORDER BY CASE (+ (rt0.c2))  WHEN ((rt0.c2)IS(rt0.c1)) THEN (((('0.659255046875173')OR(vt1.c0)))OR(NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)>(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY CASE (+ (rt0.c2))  WHEN ((rt0.c2)IS(rt0.c1)) THEN (((('0.659255046875173')OR(vt1.c0)))OR(NULL)) END DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((vt1.c1)>(rt0.c1)) AS BLOB)) ORDER BY CASE (+ (rt0.c2))  WHEN ((rt0.c2)IS(rt0.c1)) THEN (((('0.659255046875173')OR(vt1.c0)))OR(NULL)) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c1)>(rt0.c1)) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 ORDER BY CASE (+ (rt0.c2))  WHEN ((rt0.c2)IS(rt0.c1)) THEN (((('0.659255046875173')OR(vt1.c0)))OR(NULL)) END DESC);
SELECT ALL * FROM rt0 FULL OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((vt1.c1)>(rt0.c1)) AS BLOB)) ORDER BY CASE (+ (rt0.c2))  WHEN ((rt0.c2)IS(rt0.c1)) THEN (((('0.659255046875173')OR(vt1.c0)))OR(NULL)) END DESC;
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (IFNULL(((rt0.c0)%(rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY (((((rt0.c0))<((rt0.c1)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c0)%(rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))<((rt0.c1)))) NOT NULL) ASC);
SELECT ALL * FROM rt0 WHERE (IFNULL(((rt0.c0)%(rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY (((((rt0.c0))<((rt0.c1)))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c0)%(rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c0))<((rt0.c1)))) NOT NULL) ASC);
SELECT ALL * FROM rt0 WHERE (IFNULL(((rt0.c0)%(rt0.c0)), (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))) ORDER BY (((((rt0.c0))<((rt0.c1)))) NOT NULL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((x'')) AND ((((rt0.c2)&(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((x'')) AND ((((rt0.c2)&(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((x'')) AND ((((rt0.c2)&(rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) BETWEEN ((x'')) AND ((((rt0.c2)&(rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) BETWEEN ((x'')) AND ((((rt0.c2)&(rt0.c2))))));
SELECT * FROM vt1, rt0 WHERE (((('^f}Nxm') IS FALSE) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((('^f}Nxm') IS FALSE) IN (rt0.c1))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((('^f}Nxm') IS FALSE) IN (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((('^f}Nxm') IS FALSE) IN (rt0.c1))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (((('^f}Nxm') IS FALSE) IN (rt0.c1)));
SELECT COUNT(*) FROM rt0 WHERE ((((x'', rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '')) AND (((NOT (rt0.c1)), CAST(rt0.c1 AS INTEGER), rt0.c1)))) ORDER BY ((((rt0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((x'', rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '')) AND (((NOT (rt0.c1)), CAST(rt0.c1 AS INTEGER), rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE ((((x'', rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '')) AND (((NOT (rt0.c1)), CAST(rt0.c1 AS INTEGER), rt0.c1)))) ORDER BY ((((rt0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT (((((x'', rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '')) AND (((NOT (rt0.c1)), CAST(rt0.c1 AS INTEGER), rt0.c1)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE ((((x'', rt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 ELSE NULL END, ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), '')) AND (((NOT (rt0.c1)), CAST(rt0.c1 AS INTEGER), rt0.c1)))) ORDER BY ((((rt0.c0)OR(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2) IS FALSE)));
SELECT ALL * FROM vt1, rt0 WHERE ('0.38857360141634223');
SELECT SUM(count) FROM (SELECT ALL (('0.38857360141634223') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('0.38857360141634223');
SELECT SUM(count) FROM (SELECT ALL (('0.38857360141634223') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE ('0.38857360141634223');
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((+ (vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((+ (vt1.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CAST((+ (vt1.c1)) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((vt1.c0)IS NOT(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((vt1.c0)IS NOT(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((vt1.c0)IS NOT(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((vt1.c0)IS NOT(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)OR(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))OR(((vt1.c0)IS NOT(vt1.c0)))))OR((vt1.c0 IN ()))))AND(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)))));
SELECT * FROM vt1 WHERE (((((((((((vt1.c0) IS TRUE))AND(((((((((((((vt1.c0)AND(vt1.c1)))AND(x'')))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(UPPER(vt1.c0))))OR(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) IS TRUE))AND(((((((((((((vt1.c0)AND(vt1.c1)))AND(x'')))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(UPPER(vt1.c0))))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0) IS TRUE))AND(((((((((((((vt1.c0)AND(vt1.c1)))AND(x'')))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(UPPER(vt1.c0))))OR(vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0) IS TRUE))AND(((((((((((((vt1.c0)AND(vt1.c1)))AND(x'')))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(UPPER(vt1.c0))))OR(vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((((((((vt1.c0) IS TRUE))AND(((((((((((((vt1.c0)AND(vt1.c1)))AND(x'')))OR(vt1.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))))AND(((vt1.c1)IS NOT(vt1.c1)))))OR(UPPER(vt1.c0))))OR(vt1.c0 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt1 WHERE ((- ((NOT (rt0.c0))))) ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c1)) AND (((vt1.c0)IS NOT(vt1.c1)))) DESC  NULLS FIRST, ABS(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c1)) AND (((vt1.c0)IS NOT(vt1.c1)))) DESC  NULLS FIRST, ABS(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((- ((NOT (rt0.c0))))) ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c1)) AND (((vt1.c0)IS NOT(vt1.c1)))) DESC  NULLS FIRST, ABS(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c1)) AND (((vt1.c0)IS NOT(vt1.c1)))) DESC  NULLS FIRST, ABS(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt1 WHERE ((- ((NOT (rt0.c0))))) ORDER BY ((rt0.c1)OR(rt0.c2)) COLLATE RTRIM ASC, ((CASE rt0.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c1 WHEN NULL THEN rt0.c2 END) NOT BETWEEN (UNLIKELY(DISTINCT vt1.c1)) AND (((vt1.c0)IS NOT(vt1.c1)))) DESC  NULLS FIRST, ABS(((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)+(vt1.c1)) AS INTEGER)) ORDER BY ((TYPEOF(DISTINCT NULL)) BETWEEN (((vt1.c1) NOT BETWEEN (0Xffffffff8b503bd3) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST, (((((((((((vt1.c1))>=((x''))))OR(((vt1.c1) ISNULL))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.7255818631114179))))AND(((vt1.c1)/(vt1.c1)))))AND(((vt1.c0)GLOB(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)+(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((TYPEOF(DISTINCT NULL)) BETWEEN (((vt1.c1) NOT BETWEEN (0Xffffffff8b503bd3) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST, (((((((((((vt1.c1))>=((x''))))OR(((vt1.c1) ISNULL))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.7255818631114179))))AND(((vt1.c1)/(vt1.c1)))))AND(((vt1.c0)GLOB(vt1.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)+(vt1.c1)) AS INTEGER)) ORDER BY ((TYPEOF(DISTINCT NULL)) BETWEEN (((vt1.c1) NOT BETWEEN (0Xffffffff8b503bd3) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST, (((((((((((vt1.c1))>=((x''))))OR(((vt1.c1) ISNULL))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.7255818631114179))))AND(((vt1.c1)/(vt1.c1)))))AND(((vt1.c0)GLOB(vt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)+(vt1.c1)) AS INTEGER)) IS TRUE)  as count FROM vt1 ORDER BY ((TYPEOF(DISTINCT NULL)) BETWEEN (((vt1.c1) NOT BETWEEN (0Xffffffff8b503bd3) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST, (((((((((((vt1.c1))>=((x''))))OR(((vt1.c1) ISNULL))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.7255818631114179))))AND(((vt1.c1)/(vt1.c1)))))AND(((vt1.c0)GLOB(vt1.c1))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0)+(vt1.c1)) AS INTEGER)) ORDER BY ((TYPEOF(DISTINCT NULL)) BETWEEN (((vt1.c1) NOT BETWEEN (0Xffffffff8b503bd3) AND (vt1.c0))) AND (vt1.c0 COLLATE RTRIM)) ASC  NULLS FIRST, (((((((((((vt1.c1))>=((x''))))OR(((vt1.c1) ISNULL))))OR(LIKELIHOOD(DISTINCT vt1.c0, 0.7255818631114179))))AND(((vt1.c1)/(vt1.c1)))))AND(((vt1.c0)GLOB(vt1.c1))))  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY ((json_quote(vt1.c1))/(vt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY ((json_quote(vt1.c1))/(vt1.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY ((json_quote(vt1.c1))/(vt1.c1)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) IS TRUE)  as count FROM vt1 ORDER BY ((json_quote(vt1.c1))/(vt1.c1)) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c1)) NOT BETWEEN (((- (vt1.c0)))) AND ((CAST(vt1.c0 AS BLOB))))) ORDER BY ((json_quote(vt1.c1))/(vt1.c1)) DESC  NULLS FIRST;
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (((vt1.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (((vt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((vt1.c0 IN ())) NOT BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c1 END) AND (((vt1.c1) NOTNULL))));
SELECT ALL * FROM vt1, rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT ALL * FROM vt1, rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt1, rt0 NOT INDEXED);
SELECT ALL * FROM vt1, rt0 WHERE ((- ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))OR(TOTAL_CHANGES())))AND((((('>')OR('1967623628')))OR(rt0.c1))))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))OR(TOTAL_CHANGES())))AND((((('>')OR('1967623628')))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))OR(TOTAL_CHANGES())))AND((((('>')OR('1967623628')))OR(rt0.c1))))) ORDER BY vt1.c1;
SELECT SUM(count) FROM (SELECT (((((((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))OR(TOTAL_CHANGES())))AND((((('>')OR('1967623628')))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY vt1.c1);
SELECT ALL * FROM rt0, vt1 WHERE ((((((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))OR(TOTAL_CHANGES())))AND((((('>')OR('1967623628')))OR(rt0.c1))))) ORDER BY vt1.c1;
SELECT * FROM rt0, vt1 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE) IS TRUE)) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c1 COLLATE NOCASE) IS TRUE));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT NULL, (vt1.c1 IN ())) WHERE ('b2BR');
SELECT SUM(count) FROM (SELECT (('b2BR') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT NULL, (vt1.c1 IN ())));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT NULL, (vt1.c1 IN ())) WHERE ('b2BR');
SELECT SUM(count) FROM (SELECT (('b2BR') IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT NULL, (vt1.c1 IN ())));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON IFNULL(DISTINCT NULL, (vt1.c1 IN ())) WHERE ('b2BR');
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) BETWEEN ((rt0.c2 IN (0.2249460261178423, rt0.c0))) AND (json_quote(rt0.c0))) WHERE (0.8173566790609177) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((rt0.c2)|(rt0.c2))) AND ('|鎎Dw/t3ZX'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8173566790609177) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) BETWEEN ((rt0.c2 IN (0.2249460261178423, rt0.c0))) AND (json_quote(rt0.c0))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((rt0.c2)|(rt0.c2))) AND ('|鎎Dw/t3ZX'))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) BETWEEN ((rt0.c2 IN (0.2249460261178423, rt0.c0))) AND (json_quote(rt0.c0))) WHERE (0.8173566790609177) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((rt0.c2)|(rt0.c2))) AND ('|鎎Dw/t3ZX'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.8173566790609177) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) BETWEEN ((rt0.c2 IN (0.2249460261178423, rt0.c0))) AND (json_quote(rt0.c0))) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((rt0.c2)|(rt0.c2))) AND ('|鎎Dw/t3ZX'))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt1 ON ((rt0.c0) BETWEEN ((rt0.c2 IN (0.2249460261178423, rt0.c0))) AND (json_quote(rt0.c0))) WHERE (0.8173566790609177) ORDER BY ((((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))) NOT BETWEEN (((rt0.c2)|(rt0.c2))) AND ('|鎎Dw/t3ZX'))  NULLS FIRST;
SELECT * FROM rt0 WHERE (((rt0.c0 IN ()) IN (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 IN ()) IN (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0 IN ()) IN (((x'') NOT BETWEEN (rt0.c0) AND (rt0.c2)), (((rt0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c1, rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (NULL);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(vt1.c0 COLLATE RTRIM)) ORDER BY ((rtreenode(vt1.c1, vt1.c1)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY ((rtreenode(vt1.c1, vt1.c1)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(vt1.c0 COLLATE RTRIM)) ORDER BY ((rtreenode(vt1.c1, vt1.c1)) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1 ORDER BY ((rtreenode(vt1.c1, vt1.c1)) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (LOWER(vt1.c0 COLLATE RTRIM)) ORDER BY ((rtreenode(vt1.c1, vt1.c1)) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((TRIM(rt0.c2))<<(((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (('pꓬ') BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST, (((CHAR(rt0.c0)))>((((('-1302984825')) BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2))<<(((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('pꓬ') BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST, (((CHAR(rt0.c0)))>((((('-1302984825')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))));
SELECT ALL * FROM vt1, rt0 WHERE (((TRIM(rt0.c2))<<(((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (('pꓬ') BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST, (((CHAR(rt0.c0)))>((((('-1302984825')) BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2))<<(((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY (('pꓬ') BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST, (((CHAR(rt0.c0)))>((((('-1302984825')) BETWEEN ((vt1.c1)) AND ((vt1.c1)))))));
SELECT ALL * FROM vt1, rt0 WHERE (((TRIM(rt0.c2))<<(((rt0.c2) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (('pꓬ') BETWEEN (CAST(rt0.c0 AS REAL)) AND (CAST(vt1.c1 AS BLOB))) ASC  NULLS FIRST, (((CHAR(rt0.c0)))>((((('-1302984825')) BETWEEN ((vt1.c1)) AND ((vt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c0))<=((vt1.c0))))AND(vt1.c1)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (vt1.c0))))) ORDER BY ((((rt0.c1)IS NOT(vt1.c1)))&(x'6f6f')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0))<=((vt1.c0))))AND(vt1.c1)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)IS NOT(vt1.c1)))&(x'6f6f')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c0))<=((vt1.c0))))AND(vt1.c1)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (vt1.c0))))) ORDER BY ((((rt0.c1)IS NOT(vt1.c1)))&(x'6f6f')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((rt0.c0))<=((vt1.c0))))AND(vt1.c1)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1)IS NOT(vt1.c1)))&(x'6f6f')) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((((((((rt0.c0))<=((vt1.c0))))AND(vt1.c1)))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))AND((+ (vt1.c0))))) ORDER BY ((((rt0.c1)IS NOT(vt1.c1)))&(x'6f6f')) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (x'');
SELECT * FROM rt0 WHERE (((((rt0.c2)OR((- (rt0.c1)))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((((((((rt0.c2)OR(NULL)))OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))/(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c0) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST, ((MAX(rt0.c1, rt0.c2))IS(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((- (rt0.c1)))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(NULL)))OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))/(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c0) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST, ((MAX(rt0.c1, rt0.c2))IS(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)OR((- (rt0.c1)))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((((((((rt0.c2)OR(NULL)))OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))/(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c0) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST, ((MAX(rt0.c1, rt0.c2))IS(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)OR((- (rt0.c1)))))OR(CAST(rt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c2)OR(NULL)))OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))/(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c0) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST, ((MAX(rt0.c1, rt0.c2))IS(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))));
SELECT * FROM rt0 WHERE (((((rt0.c2)OR((- (rt0.c1)))))OR(CAST(rt0.c0 AS NUMERIC)))) ORDER BY ((((((((((rt0.c2)OR(NULL)))OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))/(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((((((rt0.c0)AND(rt0.c0)))OR(((rt0.c0) ISNULL))))OR(rt0.c2)) ASC  NULLS FIRST, ((MAX(rt0.c1, rt0.c2))IS(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0))));
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)IS(vt1.c1))))) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)IS(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)IS(vt1.c1))))) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (((vt1.c0)IS(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)IS(vt1.c1))))) ORDER BY (~ (((((vt1.c0)AND(vt1.c0)))AND(vt1.c1)))) ASC;
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(NULL)) AS NUMERIC)) ORDER BY ((rt0.c1) ISNULL) COLLATE RTRIM DESC, ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(IFNULL(rt0.c2, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(NULL)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) ISNULL) COLLATE RTRIM DESC, ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(IFNULL(rt0.c2, rt0.c0)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(NULL)) AS NUMERIC)) ORDER BY ((rt0.c1) ISNULL) COLLATE RTRIM DESC, ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(IFNULL(rt0.c2, rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(NULL)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) ISNULL) COLLATE RTRIM DESC, ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(IFNULL(rt0.c2, rt0.c0)))  NULLS LAST);
SELECT * FROM rt0 WHERE (CAST(((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c0)))AND(NULL)) AS NUMERIC)) ORDER BY ((rt0.c1) ISNULL) COLLATE RTRIM DESC, ((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END)OR(IFNULL(rt0.c2, rt0.c0)))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2))<=((rt0.c2))) COLLATE RTRIM) ORDER BY ((((rt0.c2))>=((rt0.c1))) IN (((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)), ((rt0.c0)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2))>=((rt0.c1))) IN (((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)), ((rt0.c0)|(rt0.c1)))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2))<=((rt0.c2))) COLLATE RTRIM) ORDER BY ((((rt0.c2))>=((rt0.c1))) IN (((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)), ((rt0.c0)|(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((rt0.c2))<=((rt0.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c2))>=((rt0.c1))) IN (((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)), ((rt0.c0)|(rt0.c1)))));
SELECT * FROM rt0, vt1 WHERE ((((rt0.c2))<=((rt0.c2))) COLLATE RTRIM) ORDER BY ((((rt0.c2))>=((rt0.c1))) IN (((((((((vt1.c0)AND(rt0.c1)))OR(vt1.c1)))OR(vt1.c1)))OR(vt1.c0)), ((rt0.c0)|(rt0.c1))));
SELECT COUNT(*) FROM rt0 WHERE (0.6823989664502809);
SELECT SUM(count) FROM (SELECT ((0.6823989664502809) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6823989664502809);
SELECT SUM(count) FROM (SELECT ((0.6823989664502809) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6823989664502809);
SELECT COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((((((((rt0.c0)<(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(-2.141761646E9)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(-2.141761646E9)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((((((((rt0.c0)<(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(-2.141761646E9)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0)<(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(-2.141761646E9)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE) ORDER BY ((((((((((rt0.c0)<(rt0.c1)))AND(rt0.c0 COLLATE NOCASE)))OR(-2.141761646E9)))OR(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS TRUE)));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c1)))>>(((vt1.c0)||(vt1.c1))))) ORDER BY ((NULL)>>((vt1.c0 IN ()))), vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c1)))>>(((vt1.c0)||(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)>>((vt1.c0 IN ()))), vt1.c1 ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c1)))>>(((vt1.c0)||(vt1.c1))))) ORDER BY ((NULL)>>((vt1.c0 IN ()))), vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)<=(vt1.c1)))>>(((vt1.c0)||(vt1.c1))))) IS TRUE)  as count FROM vt1 ORDER BY ((NULL)>>((vt1.c0 IN ()))), vt1.c1 ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c1)<=(vt1.c1)))>>(((vt1.c0)||(vt1.c1))))) ORDER BY ((NULL)>>((vt1.c0 IN ()))), vt1.c1 ASC;
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE NOCASE) ORDER BY HEX(DISTINCT ((rt0.c1)AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c1)AND(rt0.c1))));
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE NOCASE) ORDER BY HEX(DISTINCT ((rt0.c1)AND(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY HEX(DISTINCT ((rt0.c1)AND(rt0.c1))));
SELECT * FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE NOCASE) ORDER BY HEX(DISTINCT ((rt0.c1)AND(rt0.c1)));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN 0.2860597825115281 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((rt0.c1, x'', vt1.c1))<((vt1.c1, vt1.c1, vt1.c1))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN 0.2860597825115281 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((rt0.c1, x'', vt1.c1))<((vt1.c1, vt1.c1, vt1.c1))) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN 0.2860597825115281 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((rt0.c1, x'', vt1.c1))<((vt1.c1, vt1.c1, vt1.c1))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN 0.2860597825115281 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 NATURAL JOIN vt1 ORDER BY (((rt0.c1, x'', vt1.c1))<((vt1.c1, vt1.c1, vt1.c1))) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt1 WHERE ((CASE WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN 0.2860597825115281 THEN rt0.c2 ELSE rt0.c1 END IN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY (((rt0.c1, x'', vt1.c1))<((vt1.c1, vt1.c1, vt1.c1))) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOTNULL)) ORDER BY ''  NULLS FIRST, 0.7675520715264896  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ''  NULLS FIRST, 0.7675520715264896  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOTNULL)) ORDER BY ''  NULLS FIRST, 0.7675520715264896  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ''  NULLS FIRST, 0.7675520715264896  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL) NOTNULL)) ORDER BY ''  NULLS FIRST, 0.7675520715264896  NULLS LAST;
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY ((((((((vt1.c1)OR(((vt1.c1)<>(vt1.c1)))))AND(((vt1.c0)<=(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)OR(((vt1.c1)<>(vt1.c1)))))AND(((vt1.c0)<=(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY ((((((((vt1.c1)OR(((vt1.c1)<>(vt1.c1)))))AND(((vt1.c0)<=(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((((((((vt1.c1)OR(((vt1.c1)<>(vt1.c1)))))AND(((vt1.c0)<=(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)) COLLATE RTRIM) ORDER BY ((((((((vt1.c1)OR(((vt1.c1)<>(vt1.c1)))))AND(((vt1.c0)<=(vt1.c1)))))OR(CAST(vt1.c0 AS BLOB))))AND(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2)%(rt0.c0)) THEN ((x'')==(rt0.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (vt1.c1 IN ()) WHEN ((rt0.c2) ISNULL) THEN rt0.c0 COLLATE NOCASE WHEN (((rt0.c1, rt0.c0, vt1.c1))<=((vt1.c1, vt1.c0, rt0.c1))) THEN '&kRi8O' WHEN ((NULL)<(rt0.c2)) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))), (NOT (((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)%(rt0.c0)) THEN ((x'')=(rt0.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (vt1.c1 IN ()) WHEN ((rt0.c2) ISNULL) THEN rt0.c0 COLLATE NOCASE WHEN (((rt0.c1, rt0.c0, vt1.c1))<=((vt1.c1, vt1.c0, rt0.c1))) THEN '&kRi8O' WHEN ((NULL)<(rt0.c2)) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))), (NOT (((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2)%(rt0.c0)) THEN ((x'')==(rt0.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (vt1.c1 IN ()) WHEN ((rt0.c2) ISNULL) THEN rt0.c0 COLLATE NOCASE WHEN (((rt0.c1, rt0.c0, vt1.c1))<=((vt1.c1, vt1.c0, rt0.c1))) THEN '&kRi8O' WHEN ((NULL)<(rt0.c2)) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))), (NOT (((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2)%(rt0.c0)) THEN ((x'')=(rt0.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (vt1.c1 IN ()) WHEN ((rt0.c2) ISNULL) THEN rt0.c0 COLLATE NOCASE WHEN (((rt0.c1, rt0.c0, vt1.c1))<=((vt1.c1, vt1.c0, rt0.c1))) THEN '&kRi8O' WHEN ((NULL)<(rt0.c2)) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))), (NOT (((vt1.c0) IS FALSE))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt1 WHERE (CASE WHEN ((rt0.c2)%(rt0.c0)) THEN ((x'')==(rt0.c0)) WHEN ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (vt1.c1 IN ()) WHEN ((rt0.c2) ISNULL) THEN rt0.c0 COLLATE NOCASE WHEN (((rt0.c1, rt0.c0, vt1.c1))<=((vt1.c1, vt1.c0, rt0.c1))) THEN '&kRi8O' WHEN ((NULL)<(rt0.c2)) THEN (((vt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))) END) ORDER BY ((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)))LIKE(((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)))), (NOT (((vt1.c0) IS FALSE))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))IS NOT((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))IS NOT((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))IS NOT((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE))IS NOT((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0) IS TRUE))IS NOT((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1))))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)+(rt0.c0)))<<(rt0.c0))) ORDER BY ((TIME(rt0.c1, rt0.c2, rt0.c1)) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(rt0.c0)))<<(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((TIME(rt0.c1, rt0.c2, rt0.c1)) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)+(rt0.c0)))<<(rt0.c0))) ORDER BY ((TIME(rt0.c1, rt0.c2, rt0.c1)) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)+(rt0.c0)))<<(rt0.c0))) IS TRUE)  as count FROM rt0 ORDER BY ((TIME(rt0.c1, rt0.c2, rt0.c1)) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)+(rt0.c0)))<<(rt0.c0))) ORDER BY ((TIME(rt0.c1, rt0.c2, rt0.c1)) IS TRUE) ASC  NULLS FIRST, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)<<(CASE 0.6543266469342339  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM)<<(CASE 0.6543266469342339  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)<<(CASE 0.6543266469342339  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c1 COLLATE RTRIM)<<(CASE 0.6543266469342339  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((vt1.c1 COLLATE RTRIM)<<(CASE 0.6543266469342339  WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN NULL WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((rt0.c1)>>(rt0.c1)) AS REAL)) ORDER BY IFNULL(CAST(rt0.c1 AS NUMERIC), CAST(vt1.c1 AS REAL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c2 ORDER BY IFNULL(CAST(rt0.c1 AS NUMERIC), CAST(vt1.c1 AS REAL)) ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((rt0.c1)>>(rt0.c1)) AS REAL)) ORDER BY IFNULL(CAST(rt0.c1 AS NUMERIC), CAST(vt1.c1 AS REAL)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)>>(rt0.c1)) AS REAL)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c2 ORDER BY IFNULL(CAST(rt0.c1 AS NUMERIC), CAST(vt1.c1 AS REAL)) ASC);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON rt0.c2 WHERE (CAST(((rt0.c1)>>(rt0.c1)) AS REAL)) ORDER BY IFNULL(CAST(rt0.c1 AS NUMERIC), CAST(vt1.c1 AS REAL)) ASC;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))) NOT BETWEEN ((((('-642807338')AND(0x61d0273e)))OR(vt1.c0))) AND (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))) NOT BETWEEN ((((('-642807338')AND(0X61d0273e)))OR(vt1.c0))) AND (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))) NOT BETWEEN ((((('-642807338')AND(0x61d0273e)))OR(vt1.c0))) AND (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))) NOT BETWEEN ((((('-642807338')AND(0X61d0273e)))OR(vt1.c0))) AND (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) IN ())) ORDER BY (((((rt0.c2, rt0.c2, rt0.c2, rt0.c2, rt0.c2))<((rt0.c2, rt0.c2, rt0.c1, vt1.c1, vt1.c1)))) NOT BETWEEN ((((('-642807338')AND(0x61d0273e)))OR(vt1.c0))) AND (CAST(rt0.c0 AS TEXT))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) NOT NULL) AS NUMERIC)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (CAST(((rt0.c0) NOT NULL) AS NUMERIC));
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))>((x'')))) ORDER BY ((((((((vt1.c0 COLLATE RTRIM)OR(((rt0.c1) ISNULL))))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))>((x'')))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((vt1.c0 COLLATE RTRIM)OR(((rt0.c1) ISNULL))))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) ASC);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))>((x'')))) ORDER BY ((((((((vt1.c0 COLLATE RTRIM)OR(((rt0.c1) ISNULL))))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 COLLATE NOCASE))>((x'')))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((vt1.c0 COLLATE RTRIM)OR(((rt0.c1) ISNULL))))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) ASC);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2 COLLATE NOCASE))>((x'')))) ORDER BY ((((((((vt1.c0 COLLATE RTRIM)OR(((rt0.c1) ISNULL))))OR(vt1.c1 COLLATE RTRIM)))AND(((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(rt0.c2 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt1 WHERE (((x'9b03') BETWEEN (((vt1.c0)*(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'9b03') BETWEEN (((vt1.c0)*(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'9b03') BETWEEN (((vt1.c0)*(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'9b03') BETWEEN (((vt1.c0)*(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((x'9b03') BETWEEN (((vt1.c0)*(vt1.c1))) AND (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))));
SELECT * FROM vt1 WHERE ((NOT (DATETIME(vt1.c0, vt1.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (DATETIME(vt1.c0, vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (DATETIME(vt1.c0, vt1.c1, vt1.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (DATETIME(vt1.c0, vt1.c1, vt1.c0)))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((NOT (DATETIME(vt1.c0, vt1.c1, vt1.c0))));
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)>((NOT (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)>((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (((rt0.c0)>((NOT (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)==(rt0.c1)) IN (TRIM(rt0.c0)))) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)==(rt0.c1)) IN (TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)==(rt0.c1)) IN (TRIM(rt0.c0)))) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)==(rt0.c1)) IN (TRIM(rt0.c0)))) IS TRUE)  as count FROM rt0 ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)==(rt0.c1)) IN (TRIM(rt0.c0)))) ORDER BY (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (NULL)))<(('1305592626' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))<(('1305592626' IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (NULL)))<(('1305592626' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))<(('1305592626' IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((NOT (NULL)))<(('1305592626' IN ()))));
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))/((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2))<((rt0.c2, rt0.c1, rt0.c0, 'vrKph', rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))/((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2))<((rt0.c2, rt0.c1, rt0.c0, 'vrKph', rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))/((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2))<((rt0.c2, rt0.c1, rt0.c0, 'vrKph', rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))/((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2))<((rt0.c2, rt0.c1, rt0.c0, 'vrKph', rt0.c0))))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) COLLATE BINARY) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))/((((rt0.c1, rt0.c1, rt0.c2, rt0.c1, rt0.c2))<((rt0.c2, rt0.c1, rt0.c0, 'vrKph', rt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (0xffffffffef8f3998) ORDER BY ((((0.49710244231300027)AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE '739193388' END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffef8f3998) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((0.49710244231300027)AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE '739193388' END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0xffffffffef8f3998) ORDER BY ((((0.49710244231300027)AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE '739193388' END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffef8f3998) IS TRUE)  as count FROM rt0, vt1 ORDER BY ((((0.49710244231300027)AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE '739193388' END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (0xffffffffef8f3998) ORDER BY ((((0.49710244231300027)AND(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c0 ELSE '739193388' END)))AND(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((('nE얇5''G' IN (rt0.c2)) IN ((((rt0.c2))>((rt0.c0)))))) ORDER BY (('-624370180')+(((rt0.c2) BETWEEN (rt0.c1) AND ('1031857809')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('nE얇5''G' IN (rt0.c2)) IN ((((rt0.c2))>((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (('-624370180')+(((rt0.c2) BETWEEN (rt0.c1) AND ('1031857809')))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((('nE얇5''G' IN (rt0.c2)) IN ((((rt0.c2))>((rt0.c0)))))) ORDER BY (('-624370180')+(((rt0.c2) BETWEEN (rt0.c1) AND ('1031857809')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((('nE얇5''G' IN (rt0.c2)) IN ((((rt0.c2))>((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY (('-624370180')+(((rt0.c2) BETWEEN (rt0.c1) AND ('1031857809')))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((('nE얇5''G' IN (rt0.c2)) IN ((((rt0.c2))>((rt0.c0)))))) ORDER BY (('-624370180')+(((rt0.c2) BETWEEN (rt0.c1) AND ('1031857809')))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LOWER(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) ORDER BY LOWER(rt0.c2) COLLATE NOCASE ASC, ((((((((rt0.c0)AND((- (rt0.c0)))))AND(INSTR(rt0.c1, rt0.c2))))OR((((-933698615)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR((((vt1.c1))<((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((LOWER(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM vt1, rt0 ORDER BY LOWER(rt0.c2) COLLATE NOCASE ASC, ((((((((rt0.c0)AND((- (rt0.c0)))))AND(INSTR(rt0.c1, rt0.c2))))OR((((-933698615)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR((((vt1.c1))<((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LOWER(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) ORDER BY LOWER(rt0.c2) COLLATE NOCASE ASC, ((((((((rt0.c0)AND((- (rt0.c0)))))AND(INSTR(rt0.c1, rt0.c2))))OR((((-933698615)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR((((vt1.c1))<((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((LOWER(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) IS TRUE)  as count FROM vt1, rt0 ORDER BY LOWER(rt0.c2) COLLATE NOCASE ASC, ((((((((rt0.c0)AND((- (rt0.c0)))))AND(INSTR(rt0.c1, rt0.c2))))OR((((-933698615)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR((((vt1.c1))<((rt0.c2))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (LOWER(CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 END)) ORDER BY LOWER(rt0.c2) COLLATE NOCASE ASC, ((((((((rt0.c0)AND((- (rt0.c0)))))AND(INSTR(rt0.c1, rt0.c2))))OR((((-933698615)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))))))OR((((vt1.c1))<((rt0.c2)))));
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY MIN((NOT (vt1.c0)), 7.39193388E8) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY MIN((NOT (vt1.c0)), 7.39193388E8) DESC);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY MIN((NOT (vt1.c0)), 7.39193388E8) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)IS NOT(vt1.c0))) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt1.c0 AS TEXT)))) IS TRUE)  as count FROM vt1 ORDER BY MIN((NOT (vt1.c0)), 7.39193388E8) DESC);
SELECT * FROM vt1 WHERE (((((vt1.c0)IS NOT(vt1.c0))) BETWEEN ((vt1.c1 IN ())) AND (CAST(vt1.c0 AS TEXT)))) ORDER BY MIN((NOT (vt1.c0)), 7.39193388E8) DESC;
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL)) ORDER BY ((vt1.c1 COLLATE RTRIM)+(((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE RTRIM)+(((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL)) ORDER BY ((vt1.c1 COLLATE RTRIM)+(((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c1 COLLATE RTRIM)+(((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)) AS REAL)) ORDER BY ((vt1.c1 COLLATE RTRIM)+(((((vt1.c0)AND(vt1.c1)))AND(vt1.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM));
SELECT ALL * FROM vt1, rt0 WHERE (CAST((((vt1.c0, '0.7868647642334365', rt0.c1, vt1.c0, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1, 2077013120, x'35d2')) AND ((vt1.c0, vt1.c1, x'', rt0.c2, rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, '0.7868647642334365', rt0.c1, vt1.c0, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1, 2077013120, x'35d2')) AND ((vt1.c0, vt1.c1, x'', rt0.c2, rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST((((vt1.c0, '0.7868647642334365', rt0.c1, vt1.c0, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1, 2077013120, x'35d2')) AND ((vt1.c0, vt1.c1, x'', rt0.c2, rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt1.c0, '0.7868647642334365', rt0.c1, vt1.c0, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1, 2077013120, x'35d2')) AND ((vt1.c0, vt1.c1, x'', rt0.c2, rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (CAST((((vt1.c0, '0.7868647642334365', rt0.c1, vt1.c0, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, vt1.c1, 2077013120, x'35d2')) AND ((vt1.c0, vt1.c1, x'', rt0.c2, rt0.c1))) AS INTEGER));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((CAST(vt1.c1 AS INTEGER)))>=((CAST(rt0.c2 AS INTEGER)))) WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN NULL ELSE ((vt1.c1)OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((CAST(vt1.c1 AS INTEGER)))>=((CAST(rt0.c2 AS INTEGER)))) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN NULL ELSE ((vt1.c1)OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((CAST(vt1.c1 AS INTEGER)))>=((CAST(rt0.c2 AS INTEGER)))) WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN NULL ELSE ((vt1.c1)OR(vt1.c0)) END;
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((CAST(vt1.c1 AS INTEGER)))>=((CAST(rt0.c2 AS INTEGER)))) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN NULL ELSE ((vt1.c1)OR(vt1.c0)) END);
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON (((CAST(vt1.c1 AS INTEGER)))>=((CAST(rt0.c2 AS INTEGER)))) WHERE (((((vt1.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN NULL ELSE ((vt1.c1)OR(vt1.c0)) END;
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c1)))OR(-292133967)))OR((rt0.c2 IN ()))))OR(((rt0.c1) NOT NULL))))AND((((rt0.c0))==((rt0.c0)))))) ORDER BY CASE WHEN (- (NULL)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1591365919 THEN rt0.c2 END ELSE ((NULL)-(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c1)))OR(-292133967)))OR((rt0.c2 IN ()))))OR(((rt0.c1) NOT NULL))))AND((((rt0.c0))==((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (NULL)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1591365919 THEN rt0.c2 END ELSE ((NULL)-(rt0.c1)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c1)))OR(-292133967)))OR((rt0.c2 IN ()))))OR(((rt0.c1) NOT NULL))))AND((((rt0.c0))==((rt0.c0)))))) ORDER BY CASE WHEN (- (NULL)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1591365919 THEN rt0.c2 END ELSE ((NULL)-(rt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((~ (rt0.c1)))OR(-292133967)))OR((rt0.c2 IN ()))))OR(((rt0.c1) NOT NULL))))AND((((rt0.c0))==((rt0.c0)))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN (- (NULL)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1591365919 THEN rt0.c2 END ELSE ((NULL)-(rt0.c1)) END DESC  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((((((~ (rt0.c1)))OR(-292133967)))OR((rt0.c2 IN ()))))OR(((rt0.c1) NOT NULL))))AND((((rt0.c0))==((rt0.c0)))))) ORDER BY CASE WHEN (- (NULL)) THEN CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN 1591365919 THEN rt0.c2 END ELSE ((NULL)-(rt0.c1)) END DESC  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((LIKELY(DISTINCT rt0.c1)))>=((rt0.c2 COLLATE NOCASE))) WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) IS TRUE)) ORDER BY '330510572' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((LIKELY(DISTINCT rt0.c1)))>=((rt0.c2 COLLATE NOCASE))) ORDER BY '330510572' ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((LIKELY(DISTINCT rt0.c1)))>=((rt0.c2 COLLATE NOCASE))) WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) IS TRUE)) ORDER BY '330510572' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON (((LIKELY(DISTINCT rt0.c1)))>=((rt0.c2 COLLATE NOCASE))) ORDER BY '330510572' ASC  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt0 ON (((LIKELY(DISTINCT rt0.c1)))>=((rt0.c2 COLLATE NOCASE))) WHERE ((((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))) IS TRUE)) ORDER BY '330510572' ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c1))>=((rt0.c1))) ELSE NULLIF(DISTINCT rt0.c0, rt0.c2) END) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST, ((((rt0.c1)IS(rt0.c0)))LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c1))>=((rt0.c1))) ELSE NULLIF(DISTINCT rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST, ((((rt0.c1)IS(rt0.c0)))LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c1))>=((rt0.c1))) ELSE NULLIF(DISTINCT rt0.c0, rt0.c2) END) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST, ((((rt0.c1)IS(rt0.c0)))LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c1))>=((rt0.c1))) ELSE NULLIF(DISTINCT rt0.c0, rt0.c2) END) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST, ((((rt0.c1)IS(rt0.c0)))LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (CASE WHEN ((rt0.c2) NOTNULL) THEN (((rt0.c1))>=((rt0.c1))) ELSE NULLIF(DISTINCT rt0.c0, rt0.c2) END) ORDER BY CAST(rt0.c1 COLLATE BINARY AS TEXT) DESC  NULLS FIRST, ((((rt0.c1)IS(rt0.c0)))LIKE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC  NULLS LAST;
SELECT * FROM vt1, rt0 WHERE (((vt1.c1)%(vt1.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOTNULL))AND((+ (rt0.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, (((((x'8091')&(vt1.c1))))>((')&'))), (- (((rt0.c1)LIKE(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)%(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c2) NOTNULL))AND((+ (rt0.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, (((((x'8091')&(vt1.c1))))>((')&'))), (- (((rt0.c1)LIKE(vt1.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((vt1.c1)%(vt1.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOTNULL))AND((+ (rt0.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, (((((x'8091')&(vt1.c1))))>((')&'))), (- (((rt0.c1)LIKE(vt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c1)%(vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((rt0.c2) NOTNULL))AND((+ (rt0.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, (((((x'8091')&(vt1.c1))))>((')&'))), (- (((rt0.c1)LIKE(vt1.c1))))  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (((vt1.c1)%(vt1.c0)) COLLATE RTRIM) ORDER BY ((((((rt0.c2) NOTNULL))AND((+ (rt0.c0)))))AND(CAST(vt1.c0 AS NUMERIC))) DESC  NULLS FIRST, (((((x'8091')&(vt1.c1))))>((')&'))), (- (((rt0.c1)LIKE(vt1.c1))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c1))))AND((+ (vt1.c0))))) ORDER BY CAST(vt1.c1 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c1))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS REAL) COLLATE NOCASE);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c1))))AND((+ (vt1.c0))))) ORDER BY CAST(vt1.c1 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))<=((vt1.c1))))AND((+ (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c1 AS REAL) COLLATE NOCASE);
SELECT * FROM vt1 WHERE ((((((vt1.c0))<=((vt1.c1))))AND((+ (vt1.c0))))) ORDER BY CAST(vt1.c1 AS REAL) COLLATE NOCASE;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1)GLOB(rt0.c1))) NOT NULL)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1)GLOB(rt0.c1))) NOT NULL)) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)GLOB(rt0.c1))) NOT NULL)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1 DESC);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c1)GLOB(rt0.c1))) NOT NULL)) ORDER BY rt0.c1 DESC;
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS BLOB)) IS TRUE)  as count FROM rt0, vt1 ORDER BY rt0.c1  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (CAST(vt1.c0 AS BLOB)) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (CAST(vt1.c1 AS INTEGER)) ORDER BY rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(vt1.c1 AS INTEGER)) ORDER BY rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c1 AS INTEGER)) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (CAST(vt1.c1 AS INTEGER)) ORDER BY rt0.c2 ASC  NULLS LAST, NULL  NULLS LAST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((NULL, vt1.c1, -2102494991)) NOT BETWEEN ((0.7065699687578305, vt1.c1, vt1.c0)) AND ((x'', vt1.c1, vt1.c0))))) AND ((((x'') BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((((NULL, vt1.c1, -2102494991)) NOT BETWEEN ((0.7065699687578305, vt1.c1, vt1.c0)) AND ((x'', vt1.c1, vt1.c0))))) AND ((((x'') BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((NULL, vt1.c1, -2102494991)) NOT BETWEEN ((0.7065699687578305, vt1.c1, vt1.c0)) AND ((x'', vt1.c1, vt1.c0))))) AND ((((x'') BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN (((((NULL, vt1.c1, -2102494991)) NOT BETWEEN ((0.7065699687578305, vt1.c1, vt1.c0)) AND ((x'', vt1.c1, vt1.c0))))) AND ((((x'') BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN (((((NULL, vt1.c1, -2102494991)) NOT BETWEEN ((0.7065699687578305, vt1.c1, vt1.c0)) AND ((x'', vt1.c1, vt1.c0))))) AND ((((x'') BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT * FROM rt0 WHERE (((((NULL)>(rt0.c0)))||(((rt0.c0) IS FALSE)))) ORDER BY json_array_length(rt0.c1 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)>(rt0.c0)))||(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(rt0.c1 COLLATE NOCASE) ASC);
SELECT * FROM rt0 WHERE (((((NULL)>(rt0.c0)))||(((rt0.c0) IS FALSE)))) ORDER BY json_array_length(rt0.c1 COLLATE NOCASE) ASC;
SELECT SUM(count) FROM (SELECT ((((((NULL)>(rt0.c0)))||(((rt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt0 ORDER BY json_array_length(rt0.c1 COLLATE NOCASE) ASC);
SELECT * FROM rt0 WHERE (((((NULL)>(rt0.c0)))||(((rt0.c0) IS FALSE)))) ORDER BY json_array_length(rt0.c1 COLLATE NOCASE) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))||(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT(((rt0.c2)<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c0))||(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT(((rt0.c2)<(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))||(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT(((rt0.c2)<(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(DISTINCT rt0.c0))||(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT(((rt0.c2)<(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(DISTINCT rt0.c0))||(((((rt0.c2)AND(rt0.c1)))OR(rt0.c2))))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))IS NOT(((rt0.c2)<(rt0.c2))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN 1.936703E9 END) AND (((vt1.c1)!=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN 1.936703E9 END) AND (((vt1.c1)<>(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN 1.936703E9 END) AND (((vt1.c1)!=(vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN 1.936703E9 END) AND (((vt1.c1)<>(vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((CASE vt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c1 END) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN 1.936703E9 END) AND (((vt1.c1)!=(vt1.c1)))));
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE IFNULL(DISTINCT rt0.c1, rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE IFNULL(DISTINCT rt0.c1, rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE IFNULL(DISTINCT rt0.c1, rt0.c1) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE IFNULL(DISTINCT rt0.c1, rt0.c1) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c2 AS BLOB)  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE ELSE IFNULL(DISTINCT rt0.c1, rt0.c1) END);
SELECT ALL * FROM rt0, vt1 WHERE ((((((NULL IN ()))AND((((rt0.c2, vt1.c1, rt0.c0))>=((rt0.c2, vt1.c1, '1206753402'))))))OR(((((((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1))))) ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND((((rt0.c2, vt1.c1, rt0.c0))>=((rt0.c2, vt1.c1, '1206753402'))))))OR(((((((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((((NULL IN ()))AND((((rt0.c2, vt1.c1, rt0.c0))>=((rt0.c2, vt1.c1, '1206753402'))))))OR(((((((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1))))) ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT (((((((NULL IN ()))AND((((rt0.c2, vt1.c1, rt0.c0))>=((rt0.c2, vt1.c1, '1206753402'))))))OR(((((((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))) ASC);
SELECT ALL * FROM rt0, vt1 WHERE ((((((NULL IN ()))AND((((rt0.c2, vt1.c1, rt0.c0))>=((rt0.c2, vt1.c1, '1206753402'))))))OR(((((((((vt1.c1)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(vt1.c1))))) ORDER BY (NOT (CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)/(CHAR(rt0.c1))) WHERE ((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c1 COLLATE BINARY)))AND((((rt0.c1))<((vt1.c1)))))  NULLS LAST, (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c1 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0)))), ((((((((((((vt1.c1)AND(rt0.c0)))AND(rt0.c1)))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(vt1.c1)))))AND(((vt1.c0) ISNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (vt1.c1 COLLATE RTRIM) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)/(CHAR(rt0.c1))) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c1 COLLATE BINARY)))AND((((rt0.c1))<((vt1.c1)))))  NULLS LAST, (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c1 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0)))), ((((((((((((vt1.c1)AND(rt0.c0)))AND(rt0.c1)))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(vt1.c1)))))AND(((vt1.c0) ISNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (vt1.c1 COLLATE RTRIM) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)/(CHAR(rt0.c1))) WHERE ((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c1 COLLATE BINARY)))AND((((rt0.c1))<((vt1.c1)))))  NULLS LAST, (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c1 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0)))), ((((((((((((vt1.c1)AND(rt0.c0)))AND(rt0.c1)))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(vt1.c1)))))AND(((vt1.c0) ISNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (vt1.c1 COLLATE RTRIM) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((vt1.c0 COLLATE NOCASE)/(CHAR(rt0.c1))) ORDER BY (((((rt0.c1 IN ()))AND(rt0.c1 COLLATE BINARY)))AND((((rt0.c1))<((vt1.c1)))))  NULLS LAST, (((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))AND((rt0.c1 IN ()))))OR(((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c0)))), ((((((((((((vt1.c1)AND(rt0.c0)))AND(rt0.c1)))AND(((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))))OR(((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(vt1.c1)))))AND(((vt1.c0) ISNULL))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0))))  NULLS FIRST, (((NOT (rt0.c2))) BETWEEN (vt1.c1 COLLATE RTRIM) AND ((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((vt1.c1))))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (x'') ORDER BY CASE vt1.c0  WHEN rt0.c1 COLLATE RTRIM THEN LTRIM(x'd7cf875b', x'') END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE vt1.c0  WHEN rt0.c1 COLLATE RTRIM THEN LTRIM(x'd7cf875b', x'') END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (x'') ORDER BY CASE vt1.c0  WHEN rt0.c1 COLLATE RTRIM THEN LTRIM(x'd7cf875b', x'') END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE vt1.c0  WHEN rt0.c1 COLLATE RTRIM THEN LTRIM(x'd7cf875b', x'') END ASC  NULLS FIRST);
SELECT ALL * FROM vt1, rt0 WHERE (x'') ORDER BY CASE vt1.c0  WHEN rt0.c1 COLLATE RTRIM THEN LTRIM(x'd7cf875b', x'') END ASC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER))LIKE((((vt1.c1))<((rt0.c0))))) WHERE (TRIM(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)) ORDER BY CAST((('k2') IS FALSE) AS INTEGER), NULL;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER))LIKE((((vt1.c1))<((rt0.c0))))) ORDER BY CAST((('k2') IS FALSE) AS INTEGER), NULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER))LIKE((((vt1.c1))<((rt0.c0))))) WHERE (TRIM(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)) ORDER BY CAST((('k2') IS FALSE) AS INTEGER), NULL;
SELECT SUM(count) FROM (SELECT ((TRIM(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER))LIKE((((vt1.c1))<((rt0.c0))))) ORDER BY CAST((('k2') IS FALSE) AS INTEGER), NULL);
SELECT * FROM rt0 LEFT OUTER JOIN vt1 ON ((CAST(vt1.c1 AS INTEGER))LIKE((((vt1.c1))<((rt0.c0))))) WHERE (TRIM(CASE WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)) ORDER BY CAST((('k2') IS FALSE) AS INTEGER), NULL;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) ORDER BY CASE json_extract('br', vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END END, ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)<<(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY CASE json_extract('br', vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END END, ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)<<(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS REAL) AS REAL)) ORDER BY CASE json_extract('br', vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END END, ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)<<(vt1.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt1 ORDER BY CASE json_extract('br', vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 ELSE NULL END END, ((CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END)<<(vt1.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE (0X1cde555b);
SELECT SUM(count) FROM (SELECT ALL ((0X1cde555b) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0X1cde555b);
SELECT SUM(count) FROM (SELECT ALL ((0X1cde555b) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (0X1cde555b);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY 0.5475381350334529, CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY 0.5475381350334529, CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY 0.5475381350334529, CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY 0.5475381350334529, CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END AS BLOB) DESC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c1) ORDER BY 0.5475381350334529, CAST(CASE vt1.c0  WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 END AS BLOB) DESC;
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0)-(rt0.c1))))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)-(rt0.c1))))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0)-(rt0.c1))))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)-(rt0.c1))))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1)))))) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c0)-(rt0.c1))))<((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c1) AND (1.591365919E9)) THEN ((vt1.c0) ISNULL) END) ORDER BY (CASE WHEN rt0.c2 THEN 0.016059182399929872 ELSE rt0.c1 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c1) AND (1.591365919E9)) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN rt0.c2 THEN 0.016059182399929872 ELSE rt0.c1 END IN ()) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c1) AND (1.591365919E9)) THEN ((vt1.c0) ISNULL) END) ORDER BY (CASE WHEN rt0.c2 THEN 0.016059182399929872 ELSE rt0.c1 END IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c1) AND (1.591365919E9)) THEN ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1, rt0 ORDER BY (CASE WHEN rt0.c2 THEN 0.016059182399929872 ELSE rt0.c1 END IN ()) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c2) NOT BETWEEN (vt1.c1) AND (1.591365919E9)) THEN ((vt1.c0) ISNULL) END) ORDER BY (CASE WHEN rt0.c2 THEN 0.016059182399929872 ELSE rt0.c1 END IN ()) ASC;
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) AS BLOB));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) AS BLOB));
SELECT * FROM rt0 WHERE (rt0.c1) ORDER BY CAST(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) AS BLOB);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY ((((vt1.c1)<(vt1.c1))) ISNULL) ASC, (((((((((-136928020 IN (vt1.c1)))OR(vt1.c1)))AND(((vt1.c1)<=(vt1.c1)))))AND((- (vt1.c1)))))OR(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)<(vt1.c1))) ISNULL) ASC, (((((((((-136928020 IN (vt1.c1)))OR(vt1.c1)))AND(((vt1.c1)<=(vt1.c1)))))AND((- (vt1.c1)))))OR(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY ((((vt1.c1)<(vt1.c1))) ISNULL) ASC, (((((((((-136928020 IN (vt1.c1)))OR(vt1.c1)))AND(((vt1.c1)<=(vt1.c1)))))AND((- (vt1.c1)))))OR(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c1)<(vt1.c1))) ISNULL) ASC, (((((((((-136928020 IN (vt1.c1)))OR(vt1.c1)))AND(((vt1.c1)<=(vt1.c1)))))AND((- (vt1.c1)))))OR(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ('') ORDER BY ((((vt1.c1)<(vt1.c1))) ISNULL) ASC, (((((((((-136928020 IN (vt1.c1)))OR(vt1.c1)))AND(((vt1.c1)<=(vt1.c1)))))AND((- (vt1.c1)))))OR(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ASC;
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (NULLIF(DISTINCT (- (rt0.c1)), RTRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (- (rt0.c1)), RTRIM(rt0.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (NULLIF(DISTINCT (- (rt0.c1)), RTRIM(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (- (rt0.c1)), RTRIM(rt0.c2))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0);
SELECT * FROM vt1 NATURAL JOIN rt0 WHERE (NULLIF(DISTINCT (- (rt0.c1)), RTRIM(rt0.c2)));
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((rt0.c1)|('943535176')))) AND ((((rt0.c0) ISNULL))))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((((rt0.c1)|('943535176')))) AND ((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((rt0.c1)|('943535176')))) AND ((((rt0.c0) ISNULL))))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((vt1.c1)) NOT BETWEEN ((((rt0.c1)|('943535176')))) AND ((((rt0.c0) ISNULL))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) DESC);
SELECT ALL * FROM vt1, rt0 WHERE ((((vt1.c1)) NOT BETWEEN ((((rt0.c1)|('943535176')))) AND ((((rt0.c0) ISNULL))))) ORDER BY TYPEOF(DISTINCT ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) ISNULL)) ORDER BY ((rt0.c1) BETWEEN (0x4ee9e6f5) AND (rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (0X4ee9e6f5) AND (rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) ISNULL)) ORDER BY ((rt0.c1) BETWEEN (0x4ee9e6f5) AND (rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) BETWEEN (0X4ee9e6f5) AND (rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((+ (rt0.c2))) ISNULL)) ORDER BY ((rt0.c1) BETWEEN (0x4ee9e6f5) AND (rt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)*(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt0.c1)*(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ (((rt0.c1)*(rt0.c2)))));
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE ((((rt0.c2)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL))==((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL))=((- (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL))==((- (vt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c1) ISNULL))=((- (vt1.c1))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c1) ISNULL))==((- (vt1.c1)))));
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY CASE (~ (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (~ (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY CASE (~ (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (~ (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END);
SELECT ALL * FROM rt0, vt1 WHERE ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE BINARY) ORDER BY CASE (~ (rt0.c2))  WHEN ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) END;
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c1) IS TRUE)  as count FROM vt1 ORDER BY vt1.c1 ASC);
SELECT ALL * FROM vt1 WHERE (vt1.c1) ORDER BY vt1.c1 ASC;
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (~ (((vt1.c1) NOTNULL))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ (((vt1.c1) NOTNULL))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (~ (((vt1.c1) NOTNULL))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, vt1 ORDER BY (~ (((vt1.c1) NOTNULL))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER) DESC);
SELECT ALL * FROM rt0, vt1 WHERE (vt1.c0) ORDER BY (~ (((vt1.c1) NOTNULL))) ASC  NULLS LAST, CAST(((((vt1.c0)AND(vt1.c0)))OR(vt1.c1)) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0)) NOT NULL) WHERE (((((((((rt0.c2)OR(x'c696f9b3')))OR(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(x'c696f9b3')))OR(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0)) NOT NULL) WHERE (((((((((rt0.c2)OR(x'c696f9b3')))OR(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)OR(x'c696f9b3')))OR(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0)) NOT NULL));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON ((TRIM(vt1.c0)) NOT NULL) WHERE (((((((((rt0.c2)OR(x'c696f9b3')))OR(rt0.c2)))AND(vt1.c1)))AND(vt1.c1)) COLLATE NOCASE);
SELECT * FROM rt0, vt1 WHERE ((- (((rt0.c0)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((- (((rt0.c0)<(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c0)<(rt0.c2))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((- (((rt0.c0)<(rt0.c2)))));
SELECT * FROM vt1, rt0 WHERE ((NOT ((- (rt0.c0))))) ORDER BY IFNULL(x'5ca6', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(x'5ca6', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((NOT ((- (rt0.c0))))) ORDER BY IFNULL(x'5ca6', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((- (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY IFNULL(x'5ca6', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE ((NOT ((- (rt0.c0))))) ORDER BY IFNULL(x'5ca6', ((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c1 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT (((vt1.c1 IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE ((vt1.c1 IN ()));
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE 0.7675520715264896  WHEN vt1.c0 THEN vt1.c1 END) AND ('E⢈VT'))) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) BETWEEN (CASE 0.7675520715264896  WHEN vt1.c0 THEN vt1.c1 END) AND ('E⢈VT'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE 0.7675520715264896  WHEN vt1.c0 THEN vt1.c1 END) AND ('E⢈VT'))) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) BETWEEN (CASE 0.7675520715264896  WHEN vt1.c0 THEN vt1.c1 END) AND ('E⢈VT'))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((rt0.c0 IN ())) BETWEEN (CASE 0.7675520715264896  WHEN vt1.c0 THEN vt1.c1 END) AND ('E⢈VT'))) ORDER BY (((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) COLLATE NOCASE DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1) IS TRUE))AND(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0))>=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) IS TRUE))AND(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0))>=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1) IS TRUE))AND(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0))>=((vt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c1) IS TRUE))AND(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0))>=((vt1.c1)))))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((((vt1.c1) IS TRUE))AND(CAST(vt1.c0 AS BLOB))))AND((((vt1.c0))>=((vt1.c1))))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (x'');
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)||(vt1.c1))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c1) NOT NULL) ELSE (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, 0x785d4168)) AND ((vt1.c1, vt1.c0, vt1.c0))) END) ORDER BY ((CASE 'EV'  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt1.c1)-(vt1.c1))) AND (((vt1.c0)/(vt1.c0)))) DESC, (((vt1.c0 IN ()))IS((vt1.c1 IN ()))), (((CASE WHEN 0.4417689028259444 THEN vt1.c1 ELSE vt1.c1 END))>=((vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)||(vt1.c1))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c1) NOT NULL) ELSE (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, 0x785d4168)) AND ((vt1.c1, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((CASE 'EV'  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt1.c1)-(vt1.c1))) AND (((vt1.c0)/(vt1.c0)))) DESC, (((vt1.c0 IN ()))IS((vt1.c1 IN ()))), (((CASE WHEN 0.4417689028259444 THEN vt1.c1 ELSE vt1.c1 END))>=((vt1.c0))));
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)||(vt1.c1))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c1) NOT NULL) ELSE (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, 0x785d4168)) AND ((vt1.c1, vt1.c0, vt1.c0))) END) ORDER BY ((CASE 'EV'  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt1.c1)-(vt1.c1))) AND (((vt1.c0)/(vt1.c0)))) DESC, (((vt1.c0 IN ()))IS((vt1.c1 IN ()))), (((CASE WHEN 0.4417689028259444 THEN vt1.c1 ELSE vt1.c1 END))>=((vt1.c0)));
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0)||(vt1.c1))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c1) NOT NULL) ELSE (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, 0x785d4168)) AND ((vt1.c1, vt1.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1 ORDER BY ((CASE 'EV'  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt1.c1)-(vt1.c1))) AND (((vt1.c0)/(vt1.c0)))) DESC, (((vt1.c0 IN ()))IS((vt1.c1 IN ()))), (((CASE WHEN 0.4417689028259444 THEN vt1.c1 ELSE vt1.c1 END))>=((vt1.c0))));
SELECT ALL * FROM vt1 WHERE (CASE ((vt1.c0)||(vt1.c1))  WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN ((vt1.c1) NOT NULL) ELSE (((vt1.c1, vt1.c0, vt1.c1)) BETWEEN ((vt1.c0, vt1.c0, 0x785d4168)) AND ((vt1.c1, vt1.c0, vt1.c0))) END) ORDER BY ((CASE 'EV'  WHEN vt1.c1 THEN vt1.c0 END) NOT BETWEEN (((vt1.c1)-(vt1.c1))) AND (((vt1.c0)/(vt1.c0)))) DESC, (((vt1.c0 IN ()))IS((vt1.c1 IN ()))), (((CASE WHEN 0.4417689028259444 THEN vt1.c1 ELSE vt1.c1 END))>=((vt1.c0)));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) AS REAL)) ORDER BY ((((~ (rt0.c0)), UPPER(DISTINCT vt1.c1), ((vt1.c1)-(vt1.c0))))=((((vt1.c1) BETWEEN (rt0.c0) AND (NULL)), x'', (((((((('98820334')OR(vt1.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((~ (rt0.c0)), UPPER(DISTINCT vt1.c1), ((vt1.c1)-(vt1.c0))))=((((vt1.c1) BETWEEN (rt0.c0) AND (NULL)), x'', (((((((('98820334')OR(vt1.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) AS REAL)) ORDER BY ((((~ (rt0.c0)), UPPER(DISTINCT vt1.c1), ((vt1.c1)-(vt1.c0))))=((((vt1.c1) BETWEEN (rt0.c0) AND (NULL)), x'', (((((((('98820334')OR(vt1.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) AS REAL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((~ (rt0.c0)), UPPER(DISTINCT vt1.c1), ((vt1.c1)-(vt1.c0))))=((((vt1.c1) BETWEEN (rt0.c0) AND (NULL)), x'', (((((((('98820334')OR(vt1.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (CAST(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)) AS REAL)) ORDER BY ((((~ (rt0.c0)), UPPER(DISTINCT vt1.c1), ((vt1.c1)-(vt1.c0))))=((((vt1.c1) BETWEEN (rt0.c0) AND (NULL)), x'', (((((((('98820334')OR(vt1.c1)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))));
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c0)))AND('1163367529'))  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c1, vt1.c1))) THEN CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END WHEN ((vt1.c1) NOT NULL) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN GLOB(vt1.c0, vt1.c0) THEN x'f261' ELSE (vt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(vt1.c0)))AND('1163367529'))  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c1, vt1.c1))) THEN CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END WHEN ((vt1.c1) NOT NULL) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN GLOB(vt1.c0, vt1.c0) THEN x'f261' ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c0)))AND('1163367529'))  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c1, vt1.c1))) THEN CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END WHEN ((vt1.c1) NOT NULL) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN GLOB(vt1.c0, vt1.c0) THEN x'f261' ELSE (vt1.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)AND(vt1.c0)))AND('1163367529'))  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c1, vt1.c1))) THEN CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END WHEN ((vt1.c1) NOT NULL) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN GLOB(vt1.c0, vt1.c0) THEN x'f261' ELSE (vt1.c1 IN ()) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((((vt1.c0)AND(vt1.c0)))AND('1163367529'))  WHEN (((vt1.c0, vt1.c0, vt1.c0))>((vt1.c1, vt1.c1, vt1.c1))) THEN CASE WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 ELSE vt1.c1 END WHEN ((vt1.c1) NOT NULL) THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) THEN vt1.c0 COLLATE NOCASE WHEN CASE vt1.c1  WHEN vt1.c1 THEN vt1.c1 END THEN ((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c1)) WHEN GLOB(vt1.c0, vt1.c0) THEN x'f261' ELSE (vt1.c1 IN ()) END);
SELECT * FROM vt1 WHERE ((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((- ((((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)) IN ()));
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (CASE 0.06930010761747463  WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c0 END))) ORDER BY (((NOT (vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE 0.06930010761747463  WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((NOT (vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (CASE 0.06930010761747463  WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c0 END))) ORDER BY (((NOT (vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE 0.06930010761747463  WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c0 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (((NOT (vt1.c0))) NOTNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((+ (CASE 0.06930010761747463  WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c0 END))) ORDER BY (((NOT (vt1.c0))) NOTNULL)  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((CAST(vt1.c0 AS TEXT))<(((vt1.c0)-(rt0.c0)))) DESC  NULLS LAST, (((((rt0.c2, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c1)))) BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 END) AND (((vt1.c1)&(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c0 AS TEXT))<(((vt1.c0)-(rt0.c0)))) DESC  NULLS LAST, (((((rt0.c2, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c1)))) BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 END) AND (((vt1.c1)&(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((CAST(vt1.c0 AS TEXT))<(((vt1.c0)-(rt0.c0)))) DESC  NULLS LAST, (((((rt0.c2, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c1)))) BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 END) AND (((vt1.c1)&(vt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((CAST(vt1.c0 AS TEXT))<(((vt1.c0)-(rt0.c0)))) DESC  NULLS LAST, (((((rt0.c2, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c1)))) BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 END) AND (((vt1.c1)&(vt1.c0))))  NULLS LAST);
SELECT ALL * FROM vt1, rt0 WHERE (rt0.c0) ORDER BY ((CAST(vt1.c0 AS TEXT))<(((vt1.c0)-(rt0.c0)))) DESC  NULLS LAST, (((((rt0.c2, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c1)))) BETWEEN (CASE WHEN vt1.c0 THEN rt0.c1 END) AND (((vt1.c1)&(vt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((STRFTIME(x'26ed', vt1.c1, vt1.c1))OR((vt1.c1 IN ())))  NULLS FIRST, CASE WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, '◨', 0.5196013889599337)) AND ((vt1.c0, vt1.c1, vt1.c0))) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) END  NULLS FIRST, UPPER(DISTINCT 0xffffffffeb8b3cb2) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((STRFTIME(x'26ed', vt1.c1, vt1.c1))OR((vt1.c1 IN ())))  NULLS FIRST, CASE WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, '◨', 0.5196013889599337)) AND ((vt1.c0, vt1.c1, vt1.c0))) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) END  NULLS FIRST, UPPER(DISTINCT 0Xffffffffeb8b3cb2) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((STRFTIME(x'26ed', vt1.c1, vt1.c1))OR((vt1.c1 IN ())))  NULLS FIRST, CASE WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, '◨', 0.5196013889599337)) AND ((vt1.c0, vt1.c1, vt1.c0))) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) END  NULLS FIRST, UPPER(DISTINCT 0xffffffffeb8b3cb2) DESC;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) IS TRUE)  as count FROM vt1 ORDER BY ((STRFTIME(x'26ed', vt1.c1, vt1.c1))OR((vt1.c1 IN ())))  NULLS FIRST, CASE WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, '◨', 0.5196013889599337)) AND ((vt1.c0, vt1.c1, vt1.c0))) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) END  NULLS FIRST, UPPER(DISTINCT 0Xffffffffeb8b3cb2) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END IN ())) ORDER BY ((STRFTIME(x'26ed', vt1.c1, vt1.c1))OR((vt1.c1 IN ())))  NULLS FIRST, CASE WHEN ((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c1)) THEN (((vt1.c0, vt1.c1, vt1.c1)) BETWEEN ((vt1.c0, '◨', 0.5196013889599337)) AND ((vt1.c0, vt1.c1, vt1.c0))) WHEN vt1.c1 THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE vt1.c1  WHEN vt1.c0 THEN vt1.c1 WHEN vt1.c1 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (NULL)) END  NULLS FIRST, UPPER(DISTINCT 0xffffffffeb8b3cb2) DESC;
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c1)|(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR((~ (rt0.c0)))))OR((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c1)|(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR((~ (rt0.c0)))))OR((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c1)|(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR((~ (rt0.c0)))))OR((((rt0.c2))<=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c1)|(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR((~ (rt0.c0)))))OR((((rt0.c2))<=((rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((rt0.c1)|(rt0.c0)))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))))AND(((rt0.c1)<<(rt0.c1)))))OR(rt0.c1 COLLATE BINARY)))OR((~ (rt0.c0)))))OR((((rt0.c2))<=((rt0.c1))))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) NOTNULL))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c1) NOTNULL))/((+ (0.8281494495623061)))) DESC, UNLIKELY(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))), (- (((((((((vt1.c0)AND(vt1.c1)))OR('')))AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) NOTNULL))/((+ (0.8281494495623061)))) DESC, UNLIKELY(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))), (- (((((((((vt1.c0)AND(vt1.c1)))OR('')))AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) NOTNULL))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c1) NOTNULL))/((+ (0.8281494495623061)))) DESC, UNLIKELY(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))), (- (((((((((vt1.c0)AND(vt1.c1)))OR('')))AND(rt0.c1)))AND(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((rt0.c1) NOTNULL))/((+ (0.8281494495623061)))) DESC, UNLIKELY(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))), (- (((((((((vt1.c0)AND(vt1.c1)))OR('')))AND(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1) NOTNULL))>=((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))))) ORDER BY ((((rt0.c1) NOTNULL))/((+ (0.8281494495623061)))) DESC, UNLIKELY(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1))), (- (((((((((vt1.c0)AND(vt1.c1)))OR('')))AND(rt0.c1)))AND(rt0.c0))));
SELECT ALL * FROM vt1 WHERE (CASE ((-869530483) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN x'' THEN vt1.c1 WHEN vt1.c0 COLLATE RTRIM THEN 'z&yH2' WHEN json_array_length(vt1.c0) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c0 END END) ORDER BY vt1.c0  NULLS FIRST, vt1.c1, CASE vt1.c1  WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LTRIM(vt1.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((-869530483) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN x'' THEN vt1.c1 WHEN vt1.c0 COLLATE RTRIM THEN 'z&yH2' WHEN json_array_length(vt1.c0) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, vt1.c1, CASE vt1.c1  WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LTRIM(vt1.c0) END ASC);
SELECT ALL * FROM vt1 WHERE (CASE ((-869530483) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN x'' THEN vt1.c1 WHEN vt1.c0 COLLATE RTRIM THEN 'z&yH2' WHEN json_array_length(vt1.c0) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c0 END END) ORDER BY vt1.c0  NULLS FIRST, vt1.c1, CASE vt1.c1  WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LTRIM(vt1.c0) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((-869530483) BETWEEN (vt1.c1) AND (vt1.c1))  WHEN x'' THEN vt1.c1 WHEN vt1.c0 COLLATE RTRIM THEN 'z&yH2' WHEN json_array_length(vt1.c0) THEN (((vt1.c1)) BETWEEN ((vt1.c1)) AND ((vt1.c1))) ELSE CASE WHEN vt1.c1 THEN vt1.c0 END END) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST, vt1.c1, CASE vt1.c1  WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN LTRIM(vt1.c0) END ASC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND('1643705152'))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND('1643705152')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND('1643705152'))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND('1643705152')))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LIKELY(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND('1643705152'))));
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1)OR(NULL)))OR(vt1.c0)) IN ())) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)OR(NULL)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1)OR(NULL)))OR(vt1.c0)) IN ())) ORDER BY rt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt1.c1)OR(NULL)))OR(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY rt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE ((((((vt1.c1)OR(NULL)))OR(vt1.c0)) IN ())) ORDER BY rt0.c1  NULLS LAST;
SELECT ALL * FROM rt0, vt1 WHERE (HEX((+ ('1206753402'))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((+ ('1206753402')))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (HEX((+ ('1206753402'))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((+ ('1206753402')))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 WHERE (HEX((+ ('1206753402'))));
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))<=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))<=(NULL)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)AND(rt0.c1)))<=(NULL))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)AND(rt0.c1)))<=(NULL)));
SELECT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2)))||(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt0.c2)))||(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2)))||(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(rt0.c2)))||(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c1)%(rt0.c2)))||(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)>>(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((vt1.c0)>>(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((~ (((vt1.c0)>>(vt1.c0)))));
SELECT * FROM rt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (vt1.c1);
SELECT SUM(count) FROM (SELECT ((vt1.c1) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (vt1.c1);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1)))LIKE(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE), ((rt0.c2)OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))) DESC  NULLS LAST, (((((((rt0.c0))<((rt0.c0))))OR(UPPER(NULL))))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'6740d73b', rt0.c0)) AND ((rt0.c0, '2104122267', NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c1)))LIKE(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE), ((rt0.c2)OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))) DESC  NULLS LAST, (((((((rt0.c0))<((rt0.c0))))OR(UPPER(NULL))))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'6740d73b', rt0.c0)) AND ((rt0.c0, '2104122267', NULL))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1)))LIKE(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE), ((rt0.c2)OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))) DESC  NULLS LAST, (((((((rt0.c0))<((rt0.c0))))OR(UPPER(NULL))))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'6740d73b', rt0.c0)) AND ((rt0.c0, '2104122267', NULL))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)*(rt0.c1)))LIKE(CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE), ((rt0.c2)OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))) DESC  NULLS LAST, (((((((rt0.c0))<((rt0.c0))))OR(UPPER(NULL))))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'6740d73b', rt0.c0)) AND ((rt0.c0, '2104122267', NULL))))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1)*(rt0.c1)))LIKE(CAST(rt0.c1 AS INTEGER)))) ORDER BY ((((rt0.c1) IS FALSE)) IS TRUE), ((rt0.c2)OR((((rt0.c0)) BETWEEN ((x'')) AND ((rt0.c1))))) DESC  NULLS LAST, (((((((rt0.c0))<((rt0.c0))))OR(UPPER(NULL))))AND((((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'6740d73b', rt0.c0)) AND ((rt0.c0, '2104122267', NULL))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0);
SELECT COUNT(*) FROM vt1, rt0 WHERE (rt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('1038919951') ORDER BY ((UNLIKELY(vt1.c0)) BETWEEN (((((((((1.591365919E9)OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.5515546337751777) AND (vt1.c0)))), ((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2))<((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1038919951') IS TRUE)  as count FROM vt1, rt0 ORDER BY ((UNLIKELY(vt1.c0)) BETWEEN (((((((((1.591365919E9)OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.5515546337751777) AND (vt1.c0)))), ((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2))<((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('1038919951') ORDER BY ((UNLIKELY(vt1.c0)) BETWEEN (((((((((1.591365919E9)OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.5515546337751777) AND (vt1.c0)))), ((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2))<((vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1038919951') IS TRUE)  as count FROM vt1, rt0 ORDER BY ((UNLIKELY(vt1.c0)) BETWEEN (((((((((1.591365919E9)OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.5515546337751777) AND (vt1.c0)))), ((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2))<((vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('1038919951') ORDER BY ((UNLIKELY(vt1.c0)) BETWEEN (((((((((1.591365919E9)OR(rt0.c2)))OR(rt0.c1)))OR(vt1.c1)))OR(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (0.5515546337751777) AND (vt1.c0)))), ((rt0.c1) BETWEEN (CAST(rt0.c1 AS BLOB)) AND ((((rt0.c2))<((vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c0 AS BLOB))) WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt1.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt1.c1) IS FALSE) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c0 AS BLOB))) WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt1.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt1.c1) IS FALSE) END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CAST(rt0.c0 AS BLOB))) WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN ((vt1.c1) IS FALSE) END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((+ (((0.2393508767787781) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((0.2393508767787781) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((+ (((0.2393508767787781) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((0.2393508767787781) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((+ (((0.2393508767787781) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL), CAST(74578057 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL), CAST(74578057 AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL), CAST(74578057 AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL), CAST(74578057 AS NUMERIC) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0))<=((rt0.c1))) COLLATE RTRIM) ORDER BY ((((NULL) BETWEEN (rt0.c2) AND (rt0.c2))) NOTNULL), CAST(74578057 AS NUMERIC) DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c1)LIKE(rt0.c1))  WHEN (0.022470047595435916 IN ()) THEN CAST(vt1.c0 AS BLOB) END WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY ((((rt0.c0)<>(vt1.c1)))*(((vt1.c0)>>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c1)LIKE(rt0.c1))  WHEN (0.022470047595435916 IN ()) THEN CAST(vt1.c0 AS BLOB) END ORDER BY ((((rt0.c0)!=(vt1.c1)))*(((vt1.c0)>>(vt1.c1)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c1)LIKE(rt0.c1))  WHEN (0.022470047595435916 IN ()) THEN CAST(vt1.c0 AS BLOB) END WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY ((((rt0.c0)<>(vt1.c1)))*(((vt1.c0)>>(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c1)LIKE(rt0.c1))  WHEN (0.022470047595435916 IN ()) THEN CAST(vt1.c0 AS BLOB) END ORDER BY ((((rt0.c0)!=(vt1.c1)))*(((vt1.c0)>>(vt1.c1)))));
SELECT * FROM rt0 RIGHT OUTER JOIN vt1 ON CASE ((rt0.c1)LIKE(rt0.c1))  WHEN (0.022470047595435916 IN ()) THEN CAST(vt1.c0 AS BLOB) END WHERE (CAST(rt0.c2 AS NUMERIC)) ORDER BY ((((rt0.c0)<>(vt1.c1)))*(((vt1.c0)>>(vt1.c1))));
SELECT * FROM vt1, rt0 WHERE (0.7718830760864631) ORDER BY (((~ (rt0.c0)))-(((x'') NOT BETWEEN (rt0.c2) AND (x'')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7718830760864631) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((~ (rt0.c0)))-(((x'') NOT BETWEEN (rt0.c2) AND (x'')))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (0.7718830760864631) ORDER BY (((~ (rt0.c0)))-(((x'') NOT BETWEEN (rt0.c2) AND (x'')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.7718830760864631) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((~ (rt0.c0)))-(((x'') NOT BETWEEN (rt0.c2) AND (x'')))) DESC  NULLS LAST);
SELECT * FROM vt1, rt0 WHERE (0.7718830760864631) ORDER BY (((~ (rt0.c0)))-(((x'') NOT BETWEEN (rt0.c2) AND (x'')))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN '0.9542603708574922' WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((vt1.c0) ISNULL)))) ORDER BY CASE (((0.3374546353351371, 0.4001898421079304, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c0, 1567836276, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)OR(rt0.c2)))OR(vt1.c1)) WHEN (vt1.c0 IN ()) THEN LIKE(vt1.c1, vt1.c1, ')') WHEN (vt1.c1 IN ()) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN '0.9542603708574922' WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (((0.3374546353351371, 0.4001898421079304, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c0, 1567836276, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)OR(rt0.c2)))OR(vt1.c1)) WHEN (vt1.c0 IN ()) THEN LIKE(vt1.c1, vt1.c1, ')') WHEN (vt1.c1 IN ()) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS BLOB) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN '0.9542603708574922' WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((vt1.c0) ISNULL)))) ORDER BY CASE (((0.3374546353351371, 0.4001898421079304, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c0, 1567836276, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)OR(rt0.c2)))OR(vt1.c1)) WHEN (vt1.c0 IN ()) THEN LIKE(vt1.c1, vt1.c1, ')') WHEN (vt1.c1 IN ()) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS BLOB) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN '0.9542603708574922' WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((vt1.c0) ISNULL)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY CASE (((0.3374546353351371, 0.4001898421079304, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c0, 1567836276, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)OR(rt0.c2)))OR(vt1.c1)) WHEN (vt1.c0 IN ()) THEN LIKE(vt1.c1, vt1.c1, ')') WHEN (vt1.c1 IN ()) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS BLOB) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN '0.9542603708574922' WHEN vt1.c1 THEN rt0.c0 ELSE rt0.c0 END)OR(((vt1.c0) ISNULL)))) ORDER BY CASE (((0.3374546353351371, 0.4001898421079304, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, rt0.c1, rt0.c1, vt1.c0, rt0.c0)) AND ((rt0.c2, rt0.c2, vt1.c0, 1567836276, rt0.c0)))  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c0)OR(rt0.c2)))OR(vt1.c1)) WHEN (vt1.c0 IN ()) THEN LIKE(vt1.c1, vt1.c1, ')') WHEN (vt1.c1 IN ()) THEN (rt0.c1 IN ()) ELSE CAST(rt0.c2 AS BLOB) END  NULLS LAST;
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST((('-559928238') BETWEEN (vt1.c1) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-559928238') BETWEEN (vt1.c1) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST((('-559928238') BETWEEN (vt1.c1) AND (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((('-559928238') BETWEEN (vt1.c1) AND (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c1);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN rt0 ON rt0.c1 WHERE (CAST((('-559928238') BETWEEN (vt1.c1) AND (rt0.c2)) AS BLOB));
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c1)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>(rt0.c1)) THEN NULL END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c1)) THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)>(rt0.c1)) THEN NULL END) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (CASE WHEN ((rt0.c1)>(rt0.c1)) THEN NULL END);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt0 ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE) ORDER BY (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) COLLATE RTRIM DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)<>(vt1.c1))  WHEN vt1.c0 THEN ((vt1.c1)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)!=(vt1.c1))  WHEN vt1.c0 THEN ((vt1.c1)GLOB(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)<>(vt1.c1))  WHEN vt1.c0 THEN ((vt1.c1)GLOB(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c1)!=(vt1.c1))  WHEN vt1.c0 THEN ((vt1.c1)GLOB(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CASE ((vt1.c1)<>(vt1.c1))  WHEN vt1.c0 THEN ((vt1.c1)GLOB(vt1.c0)) END);
SELECT * FROM vt1, rt0 WHERE ((((CAST(vt1.c1 AS TEXT)))!=(((- (vt1.c0)))))) ORDER BY ((((((((CAST(rt0.c0 AS TEXT))AND((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR('杗[}Y')))AND(CAST(vt1.c1 AS REAL))))OR((((vt1.c1))<((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c1 AS TEXT)))<>(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((CAST(rt0.c0 AS TEXT))AND((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR('杗[}Y')))AND(CAST(vt1.c1 AS REAL))))OR((((vt1.c1))<((rt0.c2))))) DESC);
SELECT * FROM vt1, rt0 WHERE ((((CAST(vt1.c1 AS TEXT)))!=(((- (vt1.c0)))))) ORDER BY ((((((((CAST(rt0.c0 AS TEXT))AND((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR('杗[}Y')))AND(CAST(vt1.c1 AS REAL))))OR((((vt1.c1))<((rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt1.c1 AS TEXT)))<>(((- (vt1.c0)))))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((((((((CAST(rt0.c0 AS TEXT))AND((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR('杗[}Y')))AND(CAST(vt1.c1 AS REAL))))OR((((vt1.c1))<((rt0.c2))))) DESC);
SELECT * FROM vt1, rt0 WHERE ((((CAST(vt1.c1 AS TEXT)))!=(((- (vt1.c0)))))) ORDER BY ((((((((CAST(rt0.c0 AS TEXT))AND((((vt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))))OR('杗[}Y')))AND(CAST(vt1.c1 AS REAL))))OR((((vt1.c1))<((rt0.c2))))) DESC;
SELECT ALL * FROM vt1 WHERE (ABS(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ORDER BY 0x5e880198 ASC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY 0X5e880198 ASC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL));
SELECT ALL * FROM vt1 WHERE (ABS(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) ORDER BY 0x5e880198 ASC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((ABS(((vt1.c1) BETWEEN (vt1.c1) AND (vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY 0X5e880198 ASC  NULLS LAST, ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c1))) NOTNULL));
SELECT * FROM vt1, rt0 WHERE (0xffffffffd7821251 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0xffffffffd7821251 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (0xffffffffd7821251 COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((0xffffffffd7821251 COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1, rt0 WHERE (0xffffffffd7821251 COLLATE RTRIM COLLATE BINARY);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 END) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 END) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER)) IS TRUE)  as count FROM vt1 NATURAL JOIN rt0 ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 END) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 NATURAL JOIN rt0 WHERE (CAST(rt0.c2 AS INTEGER)) ORDER BY ((CASE WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c1 THEN vt1.c1 END) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE vt1.c1 COLLATE RTRIM  WHEN COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1) THEN CASE WHEN rt0.c0 THEN vt1.c1 END WHEN vt1.c1 COLLATE NOCASE THEN CAST(vt1.c1 AS NUMERIC) WHEN (NOT (rt0.c2)) THEN ((vt1.c1)>=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE RTRIM  WHEN COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1) THEN CASE WHEN rt0.c0 THEN vt1.c1 END WHEN vt1.c1 COLLATE NOCASE THEN CAST(vt1.c1 AS NUMERIC) WHEN (NOT (rt0.c2)) THEN ((vt1.c1)>=(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE vt1.c1 COLLATE RTRIM  WHEN COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1) THEN CASE WHEN rt0.c0 THEN vt1.c1 END WHEN vt1.c1 COLLATE NOCASE THEN CAST(vt1.c1 AS NUMERIC) WHEN (NOT (rt0.c2)) THEN ((vt1.c1)>=(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c1 COLLATE RTRIM  WHEN COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1) THEN CASE WHEN rt0.c0 THEN vt1.c1 END WHEN vt1.c1 COLLATE NOCASE THEN CAST(vt1.c1 AS NUMERIC) WHEN (NOT (rt0.c2)) THEN ((vt1.c1)>=(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (CASE vt1.c1 COLLATE RTRIM  WHEN COALESCE(rt0.c0, rt0.c1, rt0.c0, rt0.c1) THEN CASE WHEN rt0.c0 THEN vt1.c1 END WHEN vt1.c1 COLLATE NOCASE THEN CAST(vt1.c1 AS NUMERIC) WHEN (NOT (rt0.c2)) THEN ((vt1.c1)>=(rt0.c2)) END);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((TYPEOF(DISTINCT rt0.c0))<>(CASE WHEN rt0.c1 THEN vt1.c1 END))) ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=((rt0.c2 IN (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))!=(CASE WHEN rt0.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=((rt0.c2 IN (vt1.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((TYPEOF(DISTINCT rt0.c0))<>(CASE WHEN rt0.c1 THEN vt1.c1 END))) ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=((rt0.c2 IN (vt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((TYPEOF(DISTINCT rt0.c0))!=(CASE WHEN rt0.c1 THEN vt1.c1 END))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=((rt0.c2 IN (vt1.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt1 WHERE (((TYPEOF(DISTINCT rt0.c0))<>(CASE WHEN rt0.c1 THEN vt1.c1 END))) ORDER BY (vt1.c0 COLLATE RTRIM IN ())  NULLS FIRST, (((((vt1.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))))>=((rt0.c2 IN (vt1.c1)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (PRINTF(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (PRINTF(rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (PRINTF(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0 ORDER BY (~ (PRINTF(rt0.c1))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY (~ (PRINTF(rt0.c1))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (0.6970316132667869);
SELECT SUM(count) FROM (SELECT ((0.6970316132667869) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6970316132667869);
SELECT SUM(count) FROM (SELECT ((0.6970316132667869) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (0.6970316132667869);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1))>=((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))>=((rt0.c1))) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1))>=((rt0.c1))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1))>=((rt0.c1))) IN ())) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c1))>=((rt0.c1))) IN ()));
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((vt1.c0)AND(vt1.c1)) THEN CASE WHEN vt1.c1 THEN x'392e' ELSE vt1.c1 END END) ORDER BY (COALESCE(DISTINCT vt1.c1, '1414388195') IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) ISNULL)  WHEN ((vt1.c0)AND(vt1.c1)) THEN CASE WHEN vt1.c1 THEN x'392e' ELSE vt1.c1 END END) IS TRUE)  as count FROM vt1 ORDER BY (COALESCE(DISTINCT vt1.c1, '1414388195') IN ())  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((vt1.c0)AND(vt1.c1)) THEN CASE WHEN vt1.c1 THEN x'392e' ELSE vt1.c1 END END) ORDER BY (COALESCE(DISTINCT vt1.c1, '1414388195') IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) ISNULL)  WHEN ((vt1.c0)AND(vt1.c1)) THEN CASE WHEN vt1.c1 THEN x'392e' ELSE vt1.c1 END END) IS TRUE)  as count FROM vt1 ORDER BY (COALESCE(DISTINCT vt1.c1, '1414388195') IN ())  NULLS FIRST);
SELECT * FROM vt1 WHERE (CASE ((vt1.c0) ISNULL)  WHEN ((vt1.c0)AND(vt1.c1)) THEN CASE WHEN vt1.c1 THEN x'392e' ELSE vt1.c1 END END) ORDER BY (COALESCE(DISTINCT vt1.c1, '1414388195') IN ())  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT ALL * FROM rt0 WHERE (CAST(CASE rt0.c2  WHEN NULL THEN rt0.c2 ELSE rt0.c2 END AS BLOB)) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS TEXT);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<>((rt0.c0))) COLLATE RTRIM) ORDER BY (~ (((rt0.c1)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<>((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c1)||(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<>((rt0.c0))) COLLATE RTRIM) ORDER BY (~ (((rt0.c1)||(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0))<>((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (~ (((rt0.c1)||(rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0))<>((rt0.c0))) COLLATE RTRIM) ORDER BY (~ (((rt0.c1)||(rt0.c1))))  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE (0.4449262550353993);
SELECT SUM(count) FROM (SELECT ALL ((0.4449262550353993) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (0.4449262550353993);
SELECT SUM(count) FROM (SELECT ALL ((0.4449262550353993) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE (0.4449262550353993);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1))) BETWEEN ((((NULL))<>((0.869214030431171)))) AND ((+ ('-690564736'))))) ORDER BY (vt1.c1 COLLATE RTRIM IN (((vt1.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1))) BETWEEN ((((NULL))!=((0.869214030431171)))) AND ((+ ('-690564736'))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 COLLATE RTRIM IN (((vt1.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1))) BETWEEN ((((NULL))<>((0.869214030431171)))) AND ((+ ('-690564736'))))) ORDER BY (vt1.c1 COLLATE RTRIM IN (((vt1.c0) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c1))) BETWEEN ((((NULL))!=((0.869214030431171)))) AND ((+ ('-690564736'))))) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c1 COLLATE RTRIM IN (((vt1.c0) ISNULL))) DESC);
SELECT COUNT(*) FROM vt1 WHERE ((((+ (vt1.c1))) BETWEEN ((((NULL))<>((0.869214030431171)))) AND ((+ ('-690564736'))))) ORDER BY (vt1.c1 COLLATE RTRIM IN (((vt1.c0) ISNULL))) DESC;
SELECT * FROM vt1 WHERE ((('0.34774766799351564') IS TRUE)) ORDER BY TRIM(DISTINCT ((((vt1.c1)AND(vt1.c0)))AND(0.8796778876856963)), (((x'e815')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('0.34774766799351564') IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((((vt1.c1)AND(vt1.c0)))AND(0.8796778876856963)), (((x'e815')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((('0.34774766799351564') IS TRUE)) ORDER BY TRIM(DISTINCT ((((vt1.c1)AND(vt1.c0)))AND(0.8796778876856963)), (((x'e815')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('0.34774766799351564') IS TRUE)) IS TRUE)  as count FROM vt1 ORDER BY TRIM(DISTINCT ((((vt1.c1)AND(vt1.c0)))AND(0.8796778876856963)), (((x'e815')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE ((('0.34774766799351564') IS TRUE)) ORDER BY TRIM(DISTINCT ((((vt1.c1)AND(vt1.c0)))AND(0.8796778876856963)), (((x'e815')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c2))) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c2))) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c2))) AND (CAST(rt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c2))) AND (CAST(rt0.c1 AS TEXT)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN ((~ (rt0.c2))) AND (CAST(rt0.c1 AS TEXT))));
SELECT COUNT(*) FROM vt1 WHERE (((((x'20e6226f'))!=((vt1.c1))) IN ())) ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'20e6226f'))!=((vt1.c1))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((x'20e6226f'))!=((vt1.c1))) IN ())) ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'20e6226f'))!=((vt1.c1))) IN ())) IS TRUE)  as count FROM vt1 ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE NOCASE  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((x'20e6226f'))!=((vt1.c1))) IN ())) ORDER BY (vt1.c0 IN (vt1.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((- (rt0.c0)))AND(CAST(rt0.c1 AS INTEGER))) WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((vt1.c1)GLOB(vt1.c0)) ELSE '863472717' END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((vt1.c1)GLOB(vt1.c0)) ELSE '863472717' END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((- (rt0.c0)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((- (rt0.c0)))AND(CAST(rt0.c1 AS INTEGER))) WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((vt1.c1)GLOB(vt1.c0)) ELSE '863472717' END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((vt1.c1)GLOB(vt1.c0)) ELSE '863472717' END) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON (((- (rt0.c0)))AND(CAST(rt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt1 ON (((- (rt0.c0)))AND(CAST(rt0.c1 AS INTEGER))) WHERE (CASE ((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c2))  WHEN rt0.c0 COLLATE RTRIM THEN ((vt1.c1)GLOB(vt1.c0)) ELSE '863472717' END);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0)>>(LOWER(DISTINCT rt0.c1)))) ORDER BY (- ((rt0.c2 IN ())))  NULLS LAST, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ((rt0.c2 IN ())))  NULLS LAST, rt0.c2  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0)>>(LOWER(DISTINCT rt0.c1)))) ORDER BY (- ((rt0.c2 IN ())))  NULLS LAST, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)>>(LOWER(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (- ((rt0.c2 IN ())))  NULLS LAST, rt0.c2  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((vt1.c0)>>(LOWER(DISTINCT rt0.c1)))) ORDER BY (- ((rt0.c2 IN ())))  NULLS LAST, rt0.c2  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.39955291107826874) NOT BETWEEN ('0.2393508767787781') AND (vt1.c1)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.14546537645703939))>>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, '0.06930010761747463' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((0.39955291107826874) NOT BETWEEN ('0.2393508767787781') AND (vt1.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.14546537645703939))>>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, '0.06930010761747463' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.39955291107826874) NOT BETWEEN ('0.2393508767787781') AND (vt1.c1)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.14546537645703939))>>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, '0.06930010761747463' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(((0.39955291107826874) NOT BETWEEN ('0.2393508767787781') AND (vt1.c1)))) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.14546537645703939))>>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, '0.06930010761747463' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(((0.39955291107826874) NOT BETWEEN ('0.2393508767787781') AND (vt1.c1)))) ORDER BY ((LIKELIHOOD(DISTINCT rt0.c1, 0.14546537645703939))>>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS LAST, '0.06930010761747463' ASC  NULLS LAST;
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt1, rt0);
SELECT * FROM vt1 NOT INDEXED, rt0 WHERE ('');
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0, vt1 ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE (rt0.c1) ORDER BY CAST(CAST(vt1.c0 AS NUMERIC) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (0.28067849229733244) ORDER BY CAST((+ ('')) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.28067849229733244) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ ('')) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (0.28067849229733244) ORDER BY CAST((+ ('')) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.28067849229733244) IS TRUE)  as count FROM rt0 ORDER BY CAST((+ ('')) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (0.28067849229733244) ORDER BY CAST((+ ('')) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))  WHEN ((vt1.c1)=(vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, '-901884407', vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) WHEN ((vt1.c1)<<(vt1.c1)) THEN ((0.12548513622346036) NOTNULL) END DESC  NULLS LAST, ((((((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt1.c1)%(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CASE 0Xffffffffb9ded06f  WHEN vt1.c1 THEN vt1.c1 ELSE -1692093917 END)))OR(vt1.c0)))AND(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))))OR(UNLIKELY(vt1.c0))) DESC  NULLS LAST, ((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (LOWER(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))  WHEN ((vt1.c1)=(vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, '-901884407', vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) WHEN ((vt1.c1)<<(vt1.c1)) THEN ((0.12548513622346036) NOTNULL) END DESC  NULLS LAST, ((((((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt1.c1)%(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CASE 0Xffffffffb9ded06f  WHEN vt1.c1 THEN vt1.c1 ELSE -1692093917 END)))OR(vt1.c0)))AND(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))))OR(UNLIKELY(vt1.c0))) DESC  NULLS LAST, ((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (LOWER(DISTINCT vt1.c0))));
SELECT * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))  WHEN ((vt1.c1)=(vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, '-901884407', vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) WHEN ((vt1.c1)<<(vt1.c1)) THEN ((0.12548513622346036) NOTNULL) END DESC  NULLS LAST, ((((((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt1.c1)%(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CASE 0Xffffffffb9ded06f  WHEN vt1.c1 THEN vt1.c1 ELSE -1692093917 END)))OR(vt1.c0)))AND(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))))OR(UNLIKELY(vt1.c0))) DESC  NULLS LAST, ((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (LOWER(DISTINCT vt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1 ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))  WHEN ((vt1.c1)=(vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, '-901884407', vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) WHEN ((vt1.c1)<<(vt1.c1)) THEN ((0.12548513622346036) NOTNULL) END DESC  NULLS LAST, ((((((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt1.c1)%(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CASE 0Xffffffffb9ded06f  WHEN vt1.c1 THEN vt1.c1 ELSE -1692093917 END)))OR(vt1.c0)))AND(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))))OR(UNLIKELY(vt1.c0))) DESC  NULLS LAST, ((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (LOWER(DISTINCT vt1.c0))));
SELECT * FROM vt1 WHERE ((~ (vt1.c0 COLLATE RTRIM))) ORDER BY CASE ((((((((vt1.c1)OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c1))  WHEN ((vt1.c1)=(vt1.c0)) THEN CAST(vt1.c1 AS REAL) WHEN (((vt1.c0, vt1.c0, vt1.c1)) BETWEEN ((vt1.c1, '-901884407', vt1.c0)) AND ((vt1.c0, vt1.c1, vt1.c1))) THEN (vt1.c1 IN ()) WHEN ((vt1.c1)<<(vt1.c1)) THEN ((0.12548513622346036) NOTNULL) END DESC  NULLS LAST, ((((((((((((((vt1.c0) BETWEEN (vt1.c1) AND (vt1.c0)))AND(((vt1.c1)%(vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))OR(CASE 0Xffffffffb9ded06f  WHEN vt1.c1 THEN vt1.c1 ELSE -1692093917 END)))OR(vt1.c0)))AND(((((((((vt1.c1)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c1)))AND(vt1.c1)))))OR(UNLIKELY(vt1.c0))) DESC  NULLS LAST, ((vt1.c1 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (LOWER(DISTINCT vt1.c0)));
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c1 THEN rt0.c0 END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c0 END IN ()));
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ())) ORDER BY CASE WHEN (- (vt1.c1)) THEN ((rt0.c1) IS FALSE) ELSE rt0.c1 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (- (vt1.c1)) THEN ((rt0.c1) IS FALSE) ELSE rt0.c1 COLLATE BINARY END DESC);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ())) ORDER BY CASE WHEN (- (vt1.c1)) THEN ((rt0.c1) IS FALSE) ELSE rt0.c1 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ())) IS TRUE)  as count FROM vt1, rt0 ORDER BY CASE WHEN (- (vt1.c1)) THEN ((rt0.c1) IS FALSE) ELSE rt0.c1 COLLATE BINARY END DESC);
SELECT * FROM vt1, rt0 WHERE (((((vt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))) IN ())) ORDER BY CASE WHEN (- (vt1.c1)) THEN ((rt0.c1) IS FALSE) ELSE rt0.c1 COLLATE BINARY END DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(CAST(rt0.c1 AS TEXT))) WHERE (((CAST(0.029070451799959374 AS TEXT))GLOB(((rt0.c1)OR(rt0.c1))))) ORDER BY (((((NOT (vt1.c1)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(((rt0.c1)<<('')))), TYPEOF(DISTINCT ((rt0.c1) BETWEEN (vt1.c0) AND (''))) DESC, (((((((((~ (vt1.c0)))AND(((rt0.c0) BETWEEN ('%⦚Ⅵ?U') AND (rt0.c0)))))AND(0.3999478846712464)))AND(CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((('/R') NOT BETWEEN (vt1.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.029070451799959374 AS TEXT))GLOB(((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(CAST(rt0.c1 AS TEXT))) ORDER BY (((((NOT (vt1.c1)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(((rt0.c1)<<('')))), TYPEOF(DISTINCT ((rt0.c1) BETWEEN (vt1.c0) AND (''))) DESC, (((((((((~ (vt1.c0)))AND(((rt0.c0) BETWEEN ('%⦚Ⅵ?U') AND (rt0.c0)))))AND(0.3999478846712464)))AND(CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((('/R') NOT BETWEEN (vt1.c1) AND (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(CAST(rt0.c1 AS TEXT))) WHERE (((CAST(0.029070451799959374 AS TEXT))GLOB(((rt0.c1)OR(rt0.c1))))) ORDER BY (((((NOT (vt1.c1)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(((rt0.c1)<<('')))), TYPEOF(DISTINCT ((rt0.c1) BETWEEN (vt1.c0) AND (''))) DESC, (((((((((~ (vt1.c0)))AND(((rt0.c0) BETWEEN ('%⦚Ⅵ?U') AND (rt0.c0)))))AND(0.3999478846712464)))AND(CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((('/R') NOT BETWEEN (vt1.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0.029070451799959374 AS TEXT))GLOB(((rt0.c1)OR(rt0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(CAST(rt0.c1 AS TEXT))) ORDER BY (((((NOT (vt1.c1)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(((rt0.c1)<<('')))), TYPEOF(DISTINCT ((rt0.c1) BETWEEN (vt1.c0) AND (''))) DESC, (((((((((~ (vt1.c0)))AND(((rt0.c0) BETWEEN ('%⦚Ⅵ?U') AND (rt0.c0)))))AND(0.3999478846712464)))AND(CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((('/R') NOT BETWEEN (vt1.c1) AND (rt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ((rt0.c2)>=(CAST(rt0.c1 AS TEXT))) WHERE (((CAST(0.029070451799959374 AS TEXT))GLOB(((rt0.c1)OR(rt0.c1))))) ORDER BY (((((NOT (vt1.c1)))AND(((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(((rt0.c1)<<('')))), TYPEOF(DISTINCT ((rt0.c1) BETWEEN (vt1.c0) AND (''))) DESC, (((((((((~ (vt1.c0)))AND(((rt0.c0) BETWEEN ('%⦚Ⅵ?U') AND (rt0.c0)))))AND(0.3999478846712464)))AND(CASE vt1.c1  WHEN vt1.c1 THEN rt0.c2 ELSE rt0.c0 END)))OR((('/R') NOT BETWEEN (vt1.c1) AND (rt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- ('0.9214722436985948')))AND((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) ORDER BY LOWER(((rt0.c2)LIKE(rt0.c1))) ASC, ((highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c1))GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- ('0.9214722436985948')))AND((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((rt0.c2)LIKE(rt0.c1))) ASC, ((highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c1))GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((- ('0.9214722436985948')))AND((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) ORDER BY LOWER(((rt0.c2)LIKE(rt0.c1))) ASC, ((highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c1))GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- ('0.9214722436985948')))AND((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c1)))))) IS TRUE)  as count FROM rt0 ORDER BY LOWER(((rt0.c2)LIKE(rt0.c1))) ASC, ((highlight(rt0.c1, rt0.c1, rt0.c1, rt0.c1))GLOB(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) ASC);
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))))) ORDER BY (((vt1.c1)) BETWEEN ((rtreenode(vt1.c1, vt1.c0))) AND (('瓈S'))) DESC, (vt1.c1 IN (UPPER(vt1.c1), ((vt1.c1)/(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((rtreenode(vt1.c1, vt1.c0))) AND (('瓈S'))) DESC, (vt1.c1 IN (UPPER(vt1.c1), ((vt1.c1)/(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))))) ORDER BY (((vt1.c1)) BETWEEN ((rtreenode(vt1.c1, vt1.c0))) AND (('瓈S'))) DESC, (vt1.c1 IN (UPPER(vt1.c1), ((vt1.c1)/(vt1.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c1)) BETWEEN ((rtreenode(vt1.c1, vt1.c0))) AND (('瓈S'))) DESC, (vt1.c1 IN (UPPER(vt1.c1), ((vt1.c1)/(vt1.c1)))));
SELECT ALL * FROM vt1 WHERE ((NOT ((((vt1.c0, vt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c1, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0)))))) ORDER BY (((vt1.c1)) BETWEEN ((rtreenode(vt1.c1, vt1.c0))) AND (('瓈S'))) DESC, (vt1.c1 IN (UPPER(vt1.c1), ((vt1.c1)/(vt1.c1))));
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (CAST(((1950007336) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((1950007336) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (CAST(((1950007336) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((1950007336) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL * FROM rt0, vt1 NOT INDEXED WHERE (CAST(((1950007336) BETWEEN (rt0.c2) AND (vt1.c0)) AS INTEGER));
