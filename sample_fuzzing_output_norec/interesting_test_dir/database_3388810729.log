-- Time: 2024/06/09 13:18:00
-- Database: database29
-- Database version: 3.40.0
-- seed value: 3388810729
PRAGMA cache_size = 50000; -- 10ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TABLE t0 (c0 REAL , c1 INTEGER , c2 BLOB UNIQUE ON CONFLICT FAIL ); -- 2ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
REINDEX; -- 1ms;
REINDEX RTRIM; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, prefix = 710, tokenize = "porter"); -- 1ms;
PRAGMA temp.foreign_keys; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES (''); -- 1ms;
CREATE UNIQUE INDEX i98 ON t0((~ (((c0)IS(c0)))) COLLATE RTRIM ASC,((((((c2)OR(c0)))OR(c1)))OR(CASE WHEN c1 THEN c1 ELSE x'aaab2b57' END)),NULLIF(((((c2)OR(c1)))AND(c0)), ((c1)LIKE(c0))) COLLATE NOCASE ASC); -- 1ms;
PRAGMA main.secure_delete = FAST; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '30040'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
VACUUM; -- 1ms;
COMMIT; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
VACUUM; -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.threads = -6271331958890939244; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-1249931185 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' sz=-1249931185'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', '-1249931185 264051332'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))OR(NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=8220135'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=264051332 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('*).Pwh') IS FALSE) THEN '264051332' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')|('L49^]]a')))GLOB(LTRIM(0.7807408308458843))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=264051332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND('')))AND(0.2922468603756554)))AND(((((0.7798109567213468)AND('FSWY1V,Y+')))OR(x'76c2')))))OR((NOT (-1249931185)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' sz=-1249931185 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('264051332')) NOT BETWEEN ((0.5621879111972589 COLLATE BINARY)) AND (((('264051332')/(0x2df145b6))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-1249931185 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '1859287025'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1859287025'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1472980472 4 sz=528713828'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1551876386) ISNULL)) BETWEEN (((8220135.0) BETWEEN (0.9473575459273922) AND (1633320877))) AND (((x'070a') NOT BETWEEN (0.3660376281517925) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(2.64051332E8)))OR('-302821193'))) BETWEEN (QUOTE('+S]-|5#oD')) AND (((0.014011843179908223) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'09b6'  WHEN '' THEN 0Xffffffffb57f904f ELSE '' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '2048720039 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-686631850 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-1472980472' COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('')AND(NULL)))OR(0.9582282949559836)))AND(NULL)))OR(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '-686631850 sz=-1951879306 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(DISTINCT NULL))GLOB(x'ef98')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.7807408308458843)) IN ((('986675309') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=1919831825 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-432194633 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS BLOB))AND((-686631850 IN ()))))OR(((('-1249931185'))<((''))))))OR((1859287025 IN ()))))AND(0.8391699648406483)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', '-1951879306 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(CASE x''  WHEN 0.8391699648406483 THEN NULL WHEN 0.9213897843794652 THEN x'039b' WHEN NULL THEN 9.86675309E8 END, LOWER(x''), CAST(-1.249931185E9 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (('2048720039' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT 0Xffffffff8ba8af76, ((((((((x'')OR(1.7976931348623157E308)))AND(NULL)))AND(x'f22a')))AND(NULL)), CAST(-9223372036854775808 AS INTEGER), ((2.048720039E9) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '1623845774 sz=1458267873 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-933726671 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '-686631850 sz=1114626029'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '8220135'  WHEN '722621094' THEN NULL END)*(((('%b_*i偯r', 0.7807408308458843, 0.5253997710052108)) NOT BETWEEN ((NULL, NULL, '0.3660376281517925')) AND ((x'', '', x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1821965777)>=(-1.951879306E9)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b486')IS(NULL)))<((('1726015136') NOT BETWEEN (1048640898) AND (-1334802271)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((722621094)AND(0.014011843179908223)))AND(NULL))) NOT BETWEEN (CAST(x'' AS TEXT)) AND (0.5516415158411658)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1509423797 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=1623845774 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')GLOB(0x3e80fd82)) THEN ((x'') IS FALSE) ELSE (('0.9473575459273922') IS FALSE) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=986675309 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('-214026373')>=(x'f6df')))<=('')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '-2106210734 2061395498 sz=244942866 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-9.33726671E8, '?4', '8YR', 0.5705460070078914, '>⒚')) NOT BETWEEN ((((-352945020)!=(NULL)), NULL, (NULL IN ()), ('~l' IN (1012521592, x'')), ((NULL) BETWEEN (NULL) AND (NULL)))) AND ((CASE WHEN '{l' THEN '' END, ((NULL) IS FALSE), (('-933726671') NOT BETWEEN (NULL) AND ('1881681582')), NULL, CASE 0.8088316957882815  WHEN '-614788663' THEN 0.5705460070078914 ELSE 0.5516415158411658 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-1691952659 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-401324178')>('1048640898')))OR((x'5024' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-401324178 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=147765048 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((7.70786742E8))>((0.06646300128348315)))) BETWEEN (CAST('927396975' AS INTEGER)) AND ((('1458267873')<=(0x79695e0c)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN x'38a0' THEN x'' ELSE -1.551876386E9 END COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ (x'7709')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '-401324178 sz=-302821193'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(CAST(NULL AS NUMERIC), CASE WHEN 2.036948492E9 THEN 0x56eb66e1 ELSE 'p.![iT' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(LIKELIHOOD(DISTINCT 0.28617637655022965, 0.4706193645647163)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5935049756741329)&('XD')))*(CAST(x'' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-153407371 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-487569656'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-302821193' THEN x'cfaf' WHEN '1楨v]+mH梱' THEN x'61b3' WHEN x'' THEN '븫+' WHEN NULL THEN '0.5705460070078914' WHEN 0.8391699648406483 THEN '' ELSE 0.5611470175246315 END) NOT BETWEEN (CAST(0.8910147664232747 AS NUMERIC)) AND (('807664866' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=1821965777'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=-1689952041 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')) BETWEEN ((0.2922468603756554)) AND ((1048640898)))))<=(((('XD')%(0.1862080380777249))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 'y!XL]oQ#Y'  WHEN NULL THEN '1696098709' WHEN 1.881681582E9 THEN 0.9091681858794873 WHEN x'16a0' THEN NULL ELSE '0.5611470175246315' END)AND(CASE 'jo''Up9['  WHEN x'' THEN NULL ELSE -401324178 END)))OR(0Xffffffff9ed20c4e)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-1278600149 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Rl')>('*৻')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x''))=(('-1278600149'))))AND(((('-1691952659'))==(('1213719107'))))))OR(((NULL) NOT BETWEEN (0.3061510212867764) AND ('jo''Up9[')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xfbd1a84)AND(NULL)))OR(0.2661554873640901)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-899930982 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9213897843794652) BETWEEN (NULL) AND (x'4482'))))<(((0Xffffffffdb5b11c9 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=653565029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-447572931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(NULL COLLATE NOCASE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (''))))>((NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '0 sz=-1075556114 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '0 470175987 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'0430') BETWEEN (1.821965777E9) AND (NULL))  WHEN x'' THEN (((('-1307283930')OR(NULL)))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1761273961 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('167654003')AND(0.3686357330192893)))AND(0.01862116352182963)) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '-2145131749'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(x'' COLLATE RTRIM, (NULL IN ('2036948492'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2016431706'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=1990200215 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-2073989053 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '0 sz=-102255203'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1691952659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '-933726671 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') BETWEEN ('1821965777') AND (NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-537199301'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1904904830 COLLATE RTRIM))>=(((((NULL)) BETWEEN ((x'')) AND (('-102255203')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('')))IS((('2048597980') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-1979622844 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(HEX(0.17815789393002945) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1742594037 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=1036058883 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('528713828')OR(NULL)))OR(NULL)))OR(2070278553)))OR('T')))||(0.5497930472520425 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=936994333'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1774896223'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=796328968 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=1633320877 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0X4cc63819) IS TRUE) THEN ((-1691952659) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=722621094'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1551876386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.24317068383216967; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=-1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (-1278600149 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '2 sz=936994333 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2145131749 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2138546969 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(244942866 AS INTEGER) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '4 sz=-1367404933'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=147765048 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1951879306')<>('QZ.^傷2,,7')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-790711894)>=(''))))<>(((('1353339662')|(0xffffffffaed19c01))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('V1Uq'))>=((x''))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1897903928068716)%('1881681582')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=181008353 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1669620719 0 sz=-1318015751 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '538047092 sz=-52445266 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('mn') BETWEEN (NULL) AND ('244942866')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '1919831825 sz=-153407371'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', '2048597980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('Dl0' IN (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1032030195; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-9223372036854775808 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-750082355 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '2 sz=807664866 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('1761273961'))*(TIME(0Xffffffffdffafd3b, x'', 0.4157689310760917))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('j&')*(x'')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=384232943 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'9c22') BETWEEN ('l y!zFGr') AND ('o|zn%<K.{')) THEN CAST(0x474c9305 AS BLOB) WHEN ((5.38047092E8)*(x'')) THEN (NULL IN (NULL)) WHEN (('-894304830') BETWEEN (0.24639375173025257) AND (NULL)) THEN (NOT (x'')) ELSE (~ (x'')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', '-1249931185 0 sz=-614788663 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1757463857 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-1221542156 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-537199301 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (('1') IS TRUE), ((((0.3467460551887315)AND(NULL)))OR(-1.630401458E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=292143547 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN (NULL))) NOT BETWEEN (((0.17815789393002945) NOT BETWEEN (0.22837422841480093) AND (NULL))) AND (HEX(0.4867008269580586))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=1242132431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '-432194633 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-1909933083 IN ('-9223372036854775808', NULL)))LIKE((NOT (3.84232943E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0xffffffffa3d2812b) BETWEEN (x'') AND (NULL)) THEN ((0xffffffff9da3d668)+(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '1610109776 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME((~ (x'1f29')), (x'4b56' IN ()), x'c595' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-246384159 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TOTAL_CHANGES())>=(((x'33df') BETWEEN (0.8605365012754844) AND ('0.4867008269580586')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 -322709883'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN x'' THEN '' END)OR(CASE x'5cf5'  WHEN 0.5095371366502905 THEN 0xffffffffd799bf49 END)))AND((((x'0d9d8ba4')) NOT BETWEEN ((0.6557944913777584)) AND (('2048720039'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1054813038'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '166867663 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((')2' COLLATE RTRIM) ISNULL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'b0a4', '796328968', 1474515380)) NOT BETWEEN ((CASE WHEN x'' THEN 0.7085758278553285 END, NULL COLLATE BINARY, (('x\ns.Zt') IS TRUE))) AND ((CASE NULL  WHEN '\j1Yf/X' THEN NULL ELSE 0.019809461045975585 END, ((('9 \rx時')) BETWEEN (('}x#')) AND (('1331979888'))), CASE WHEN 0.5297340088985979 THEN '1144873655' ELSE 0.17815789393002945 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=244942866 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2 -1367404933'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '2 0 sz=260950525 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.6531660072932187)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x65186995)IS NOT('1496266146')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1036058883 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.1897903928068716)AND(NULL)))AND('')))OR((0.5572909171742029 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=2048597980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|('A(')))<((((NULL)) BETWEEN ((x'')) AND ((x'31e4'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1334802271 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=2077115809 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '1175150176 sz=750600037'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-856258046 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-.')) BETWEEN (('1121761252')) AND ((NULL))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=142426090 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=264051332 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-1032030195 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=528713828 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-1826638587 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '2 1288058905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('2117910257' IN ('1314985318')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('L{}' AS NUMERIC))AND(((x'')*(x'')))))AND(((((9.27396975E8)AND(NULL)))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1262544149 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'')OR(0.8288344981629142)))OR(856246752)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '2 sz=1578081791 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('/\rᩣ3zy{/*'))<=(('-1944253151'))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (-1.361994751E9 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '-469958215 sz=-1856165471 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'2810') NOT BETWEEN (0.2749635389925186) AND (0.7037921300186625)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-1.318015751E9)OR(x'')))AND('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1032030195 sz=-1757463857 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=630890312 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '0 sz=936475221 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=500460113 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('-1922801456')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1761273961') NOT NULL))AND((((((((('-1318015751')AND(NULL)))AND(0.08330570786029567)))OR(-1546485461)))AND('')))))OR(x'' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE RTRIM, (+ (NULL)), ((NULL) NOT NULL)))!=((((0.5509274750014689) IS FALSE), x'', x'04f7' COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL)<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1756190465 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=1818006079'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2100734270 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '2043291029 sz=-1367404933 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '1774896223 sz=1 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((0xffffffffcab1fdc2) IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN ((((((((((x'')OR(NULL)))OR(x'4f2d')))AND(x'')))OR(x'')))) AND ((((0.019809461045975585)&(0x4170a4c))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' sz=1056812307'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' sz=1019211579'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=1486771588 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-1771015039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-771165876'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%b_*i偯r') BETWEEN ((((((((('-432194633')OR('-2073989053')))AND(0.8789336732307238)))OR(']-')))OR('TRUE'))) AND (((0.9916814612026992)OR(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((SQLITE_VERSION()))!=((((0.2710126040958438)!=('1288058905'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=577378499 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-1208452288 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 'AM'  WHEN TYPEOF(-1722819221) THEN (~ (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)-('-825184639'))) BETWEEN (x'177f' COLLATE RTRIM) AND (x'c9acb863' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('' AS TEXT))AND(UPPER(0.7037921300186625))))AND(((x'0a99')IS NOT(0.8124999216793963)))))OR((((NULL))=(('ooW'))))))OR((~ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'5e99'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (TYPEOF(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=746494040'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1610109776 -141596589 sz=1188006987 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '2044959403 sz=927396975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(((((x'')OR(0.4341003764545246)))OR(''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS INTEGER))OR(CASE 0.32697961194409  WHEN x'6885' THEN x'' WHEN '401023989' THEN 0.4541603933805818 WHEN NULL THEN NULL ELSE 0.1677127391220572 END)))AND('%)')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'06d39f39') BETWEEN (-1830210026) AND ('1859287025')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-1e500 IN ())) BETWEEN ((+ (7.22621094E8))) AND (((('0.8288344981629142')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ()), (('1978343579') BETWEEN (0.47051724672599227) AND (NULL)), CAST(x'' AS INTEGER)))==(((('90o{o>&4')+('-102255203')), ((NULL) IS FALSE), ((('Z#Y6k'))>=((-1.53407371E8)))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((((((((('')OR(-1091567173)))AND(x'')))AND('')))OR('u>')), ((x'') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')<('UY')))OR((+ (NULL)))))AND((0.20453845718241215 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '0 sz=-1531599537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '-1804379910 sz=244942866'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-686631850'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((((((x'')OR(0.46148259701487493)))OR('-573557172')))AND(NULL)))OR(NULL)))AND(0.8056552172438561)))OR(1.919831825E9)) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((x'92da'))==(('-1430299788'))))>>(((-1330746194)OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '-1334548120'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1943497851 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=2037344433 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' sz=-790711894 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1075556114 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'ae1e')AND(x'')))AND(x'')))-(((0.5516415158411658)LIKE(0X671c1306)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((('818318293')IS(NULL))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'c0c4373f') NOT NULL))<((('2088253270')||(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=244942866 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE -4.87569656E8; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-1367404933' AS BLOB))<<(((x'')>>('w48,S')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(CASE '-790711894'  WHEN 0Xffffffff8220a700 THEN -1075556114 END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1630401458') NOTNULL))==((('8J')AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=927396975 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('0.7807408308458843', x'85bd', 0X3e80fd82)) NOT BETWEEN ((-2.145131749E9, 2049584289, NULL)) AND (('XFX)NO', NULL, '-102667984'))))OR(((-1.318015751E9) NOT BETWEEN (-1.249931185E9) AND (0.06376681935150552)))))AND(0.9645920522150488 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('0.28617637655022965' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-912875002 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1984094243 sz=-432194633 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=742499975 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1610109776'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-894304830 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1114626029'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-649970024 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE highlight((+ (0X54178eeb)), LIKELY('1114626029'), ((x'9d078ed8') IS TRUE), (+ ('-548643906'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '2 sz=1139641751 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(x''))) NOT BETWEEN (CASE NULL  WHEN -4739312 THEN 0X7b65f199 WHEN NULL THEN 0x7dfa0a77 WHEN NULL THEN NULL WHEN x'' THEN x'' WHEN 0.4643488365070152 THEN 0.2612579359124776 ELSE NULL END) AND (((x'') BETWEEN (x'') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=1723837414 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-789940260'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-358222632 sz=1859287025'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'5c3f')IS NOT(NULL)))/(((x'')OR('ez')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-334137278 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-460954833 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-686631850'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-899930982'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=-1032030195 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=-1361994751 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '2 sz=-591560011 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.02108417190201428) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=-1140758939 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1653866216 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.2700654607545043 IN (((NULL)%('0.4643488365070152')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL)) BETWEEN (((-447572931) NOTNULL)) AND ((0x756f87a1 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '-1146328863 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-461393987 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '-1825905670 1883744917 sz=-1334802271 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL((('') IS FALSE), ((-1249931185)AND(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-1128528695'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=292143547 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)*(('' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1757463857'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1909933083 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1075556114 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff9a648f5d)) BETWEEN (((~ (NULL)))) AND (((((x'', NULL, 0.013854691024854704)) NOT BETWEEN ((x'', NULL, 7.70786742E8)) AND (('0.2612579359124776', '-102255203', NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('13p' COLLATE RTRIM)<<(((0.08056968502150363)-(x'451e')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((((0Xffffffffcad4f4a0)) NOT BETWEEN ((NULL)) AND ((0.4300655242703624))))) AND ((CASE WHEN 0.5705460070078914 THEN NULL END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', '1952507734 1917669640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-559479350'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0370296246964511; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('292143547', 0.4693507928436924, 0.19135406976982738)) NOT BETWEEN ((NULL, '0.8910147664232747', 0Xffffffffa5ad6ad1)) AND ((NULL, x'e3d0', NULL)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1665206973 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=1610109776 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-750082355')) BETWEEN ((((NULL) IS FALSE))) AND ((0.5980553122465272 COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')>(0Xffffffffcb7e8ced)) IN (((NULL) NOT BETWEEN (-1.650207128E9) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 sz=1610109776'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('l#') AND (0.34395833359345507)))<<(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=-927785004'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '1927551619 1811745275 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=292143547'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL)) COLLATE BINARY COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1639454474')<=(NULL)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-106760239' COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CHAR(NULL) THEN (((((((('2054219308')OR(x'')))AND(x'')))OR(0.4180275730391443)))AND(0.44991665040668694)) WHEN ('0.8124999216793963' IN ()) THEN NULL WHEN ((x'') IS TRUE) THEN LIKE(0x6ed277f1, x'483c', 'o') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (0.44991665040668694) AND (NULL))))>((((x'')+(x'38e186aa'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-30316588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '1665840892 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '-331071678 sz=-1 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(CAST(0X3b281f2f AS REAL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=653565029 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2028679292 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (NULL)) AS REAL); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(0.08352239704843645, '345096984')) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)OR(-432194633)))AND('1881681582')) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('~uBgU(')))GLOB((('0.2922468603756554') BETWEEN (0.829852954285519) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('2138546969')) BETWEEN (('')) AND ((NULL)))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.7744214617118621)) BETWEEN ((0.5951125143952688)) AND ((0.5269368944068781)))) BETWEEN (((NULL)<<('>⒚'))) AND ('' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('U\rt' COLLATE RTRIM AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((-401324178, 0.1667024606732721, 0.43337305511108204, x'f9bea038', NULL))>(('-1480699793', NULL, x'16367c8a', x'', '484118088')))  WHEN ((0.5755564397306752) BETWEEN (x'') AND (-487569656)) THEN CAST(-102791880 AS NUMERIC) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1671144466 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1814473736 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9747617846555102)OR('-885342229')))OR(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '2061395498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '0 -2076338664 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' sz=882202677'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', '1821965777 sz=967585394 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1742594037 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ''); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=1192223984'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '0 407403765 sz=-1650207128 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(0.8485131037243652 AS INTEGER))AND(CASE NULL  WHEN NULL THEN x'' WHEN '>⒚' THEN 0.2778620274586042 WHEN '' THEN 0.2381503601598296 ELSE NULL END)))AND(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '269206749 905878464 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '1036058883 155619767 0 sz=-304889203'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1811745275 -1372039457 sz=1123797913 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=578134535 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '0 sz=-1798549283'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6402314536686448)%(-2.073989053E9))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-102255203'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=1288058905 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=1641355716'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '0 sz=1563022580 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=936994333'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)LIKE(NULL))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UNLIKELY('W')) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' sz=1114626029 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.5007843983854068 THEN '90o{o>&4' END)OR((((0.4080111138467275))<>((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '\r'' ae[4' THEN x'' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.22837422841480093)IS(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x''))) BETWEEN ((0.12725329184565526 IN ())) AND ((- (NULL)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=1859287025 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-518777565'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1334802271 -401324178 sz=-845800739'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) NOT BETWEEN (((0.2960999411994272) BETWEEN (NULL) AND (x''))) AND (((((0X67d01b64)OR(2.64051332E8)))OR(1242132431)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '-894304830 sz=-2141202736 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' sz=-1464513276'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-937562691 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')%('E^0J')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'7008c8a4')AND(NULL)))OR('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '4 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))<<(CASE WHEN x'528d' THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-899930982 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '2037124275 sz=848888425 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' sz=-1448038221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=1923562082 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-432194633')AND(x'')))AND('-1384801775')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((GLOB('', ''))AND(CAST(NULL AS NUMERIC))))AND((('304904059') NOT NULL))))OR(CASE WHEN x'' THEN NULL END)))AND(x'04c2' COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1079713489 1458267873'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2016431706 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffc702746d COLLATE NOCASE) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1533933295 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE INSTR(x'0f64', NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (''))  WHEN (('') NOT BETWEEN (x'') AND ('1726545084')) THEN ((0.5913502338875235) BETWEEN (x'5a4e') AND (x'b74d')) ELSE TRIM(0.24565387502909553) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '936994333 1411848272 sz=141289278'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')!=(NULL)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-32492920'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=-2093875811'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') IS TRUE)) BETWEEN (((x'51a629b4')*(NULL))) AND (CAST(NULL AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '4 sz=-1691952659 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-377932430 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '2 sz=293665711'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.650207128E9) ISNULL))+(CAST(0.22837422841480093 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-765462728 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1909933083')<=(((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-2099533057'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '0 -401324178'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('2138546969' AS REAL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1821965777 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '0 sz=-1451521114 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', '1391053411 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (NULL) AND ('b')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((1282504526) NOT BETWEEN (0.007893010389178778) AND ('2061395498')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-1551876386'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1401331305 sz=679686634 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1288058905 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'') BETWEEN (0Xffffffffe552943d) AND (NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-1280806130 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=-1568194883 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2022942286 sz=1260640201'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(((x'')-(607818242)), (- (x''))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '377206788 2 sz=1217206774'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '-336913019 0 sz=-1249931185 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'efb3')IS NOT(0.9173032442106679)))<(CAST(x'14ff' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'51fc8aad' COLLATE NOCASE)IS(TRIM(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=-153407371'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=1538676616 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-594229252 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '-1979622844 -2106210734 sz=1226009217 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1739712570')>=('-1630401458')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1381996157'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=1562000287 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '623415490 sz=-894304830 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'') BETWEEN (NULL) AND ('0.9645920522150488')))AND(((((((((0.6185249212274839)OR('p.![it')))AND(x'')))AND(0.6235929236430583)))AND(-1.551876386E9)))))AND(CAST('S4' AS INTEGER))))AND(CAST(x'' AS REAL))))OR(CASE -429762546  WHEN '8220135' THEN '-1851943712' WHEN x'40e8' THEN NULL WHEN x'' THEN 0.04808499785054987 WHEN '-1650207128' THEN '9 \rx時' WHEN x'' THEN '' WHEN x'' THEN NULL WHEN 0Xffffffffd6cd2dcd THEN 0.07642666065647086 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=2017666498 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '0 1106478692 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1859287025 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '0 sz=181008353 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=1859287025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(NULL)) NOT BETWEEN (((0Xffffffffbf36ad6e) IS TRUE)) AND (((x'83cf') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.4274682494968711 THEN '1楨v]+mh梱' WHEN 1.213719107E9 THEN NULL WHEN '' THEN '-1259804738' ELSE x'' END)IS((((0xe998812)) BETWEEN ((1.696098709E9)) AND ((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6761572117595609)IS(NULL)))<=((((NULL))<(('-686631850'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-487569656 sz=-226941878 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_patch((('-1318015751')>=('')), ABS(0.8449120133112104)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', '0 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '0 sz=1075243339 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))==((NULL))) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '2138546969 sz=2036237568 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1552253428'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8929513673376341)||(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3032230534427134)IS(0xffffffff8942e3ae)))OR(CAST(x'' AS INTEGER))))AND(TRIM(x'6ffde3da'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')IS NOT('|t')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x6decc51)GLOB('~+jVy	o')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=-1665973364 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((-442169539 IN (NULL, NULL)))) AND ((CAST('410908103' AS REAL)))); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('' IN (0.5477914589550842))))>=((((NULL)>=('-750082355'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1114932796 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1633320877 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '1646763203 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE NULL  WHEN x'' THEN 0.04615528828662496 ELSE x'' END)OR((((0x4857e243)) NOT BETWEEN (('!<t3')) AND ((0.4291040723163584))))))OR(((NULL) NOT BETWEEN (0.8868316040441049) AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'c124')<(x'f586')) THEN ((((1.036058883E9)AND(0.268444184224632)))AND(4.70175987E8)) WHEN (('292143547') NOTNULL) THEN (((NULL, 'FALSE', -1221542156)) NOT BETWEEN (('rgy>', 0X3d1275e3, '542188022')) AND ((')H', x'', 0.7242662210835005))) WHEN NULL COLLATE NOCASE THEN CAST(NULL AS BLOB) ELSE ((('1687872415')) NOT BETWEEN ((NULL)) AND (('-437806023'))) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', '0 sz=-300204035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=1213719107 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '1048640898 sz=914693147'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '0 0 sz=802389000'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2144406721 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', '528713828 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('770786742') NOT BETWEEN (((0.2710126040958438) BETWEEN (x'7b37') AND ('>⒚'))) AND (((x'')OR(0Xffffffffaa34fa7f)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.10443184148998697)IS(x'')) THEN 'PxOrIn' COLLATE BINARY ELSE NULL END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', '0 -1214157952 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', ' sz=-1224473293 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-107416934 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', '0 sz=-1480699793 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', '0 sz=-1454047748 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) BETWEEN ((+ (0X6124df19))) AND ((('')>>('1819498893')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' sz=-1820680490'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((x'a22ca8d2' IN ('-715145918')), 0.48731260364283335 COLLATE NOCASE); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffff8023e31b, -6.14788663E8, x'', NULL, 0.04929085935567512, '181008353', x'')) NOT BETWEEN (('390254293', '0.1897903928068716', 0.25708980587496444, NULL, 0.17024635687634437, x'', x'')) AND (('1213719107', 0Xffffffffdb5b11c9, '-1472980472', x'', 'q9dre', x'8141', 'HU\P,&뒴j')))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '147791625 1957898474'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '264051332 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1226167813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=64074655 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=1087031016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' sz=1853815699'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1228055858')|(NULL)))+('47667860' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1219178202'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', '63549000 sz=-1318015751'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS NOT('770786742'))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('-1909933083'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((0Xffffffff9560ef3b)/(x'5759')))) AND ((CAST(x'59ca' AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('V') NOT BETWEEN (x'') AND (0.0370296246964511))))<>((CAST(0.42967679374802137 AS INTEGER)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_insert('-1630401458', NULL, 0X2c97170a))IS(((NULL)LIKE(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-738430498'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.2960999411994272)<<('796328968')) THEN (('')>=(NULL)) ELSE CASE NULL  WHEN NULL THEN x'19a2' ELSE 0.10148136925488338 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-869400280 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '653565029'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.4687856430169206 AS NUMERIC))IS NOT(-1.318015751E9 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('X/m**YJ{x' AS BLOB)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', '-718647977 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1048332212'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', '-30463085 sz=384232943'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))=((0.34640988794941285))) IN ('HU\P,&뒴j' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1925864801')IS(x'')))<<('900524754')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_t1_1', '409295403 sz=1811745275 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '] ]g'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)OR(1036058883)))AND('6O7?IP')))OR(NULL)))AND('P')))OR(LTRIM('/W''_.ct'))))AND(1114626029 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1242132431 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(0x457986f2))) NOT BETWEEN (CAST(x'6cae' AS REAL)) AND (CASE NULL  WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=1811745275'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1583603518')) BETWEEN ((((((x'f759')AND(NULL)))AND('SG')))) AND ((((0Xffffffffb57f904f) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 't1', ' sz=1990200215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '-2050057741 sz=-775840237 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT LIKELIHOOD(DISTINCT '-233789455', 0.7107032220477196), '' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', '1608768604 sz=-1669612067'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0x379038cb IN ()))OR(((('-.')) NOT BETWEEN ((0.0010539135319191928)) AND (('-1650207128'))))))AND((('962187968')AND(x'')))))AND(CASE 0xffffffffcea8a20f  WHEN 1402439087 THEN '-1591455511' WHEN x'' THEN '-1354419866' WHEN NULL THEN NULL WHEN -565811315 THEN 0xffffffffdffafd3b WHEN x'' THEN 306433898 END)))OR(((x'')AND('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) ISNULL) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_t1_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.20453845718241215'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (LIKELIHOOD(DISTINCT NULL, 0.011065745416412254))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'2ec9' AS INTEGER))AND(CASE x''  WHEN 0.6531660072932187 THEN NULL END)))OR(CASE WHEN 1e500 THEN NULL ELSE 0.8175896734552792 END)))AND(((x'') BETWEEN ('') AND (x'')))))OR(((((0.6154035438845803)OR('-299833564')))AND(0.6938570524767341)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' sz=8220135 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'9bda') NOT NULL)) NOT BETWEEN (((((x'')OR(0.2827225952408383)))AND(0x3de21c99))) AND ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' sz=363750795'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=1727295785'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.9121894190438339)AND(x'0c7a')))AND((NULL IN ()))))AND((('-0.0')<<(x'')))))AND((+ ('1623845774')))))OR((- (x'339b')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' sz=-622757818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 't1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('0.24565387502909553' AS NUMERIC))&((((0.253083030592406, 'QZJUM#', '0.7037921300186625'))>((x'efff', NULL, x'0df9'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1472980472', -166361537, 0.5007843983854068))>=(('', NULL, NULL))) IN ((- (x'1e47')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 't1', ' sz=1458267873 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt1_segdir_1', ' sz=-1979622844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2048597980 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i98', ' sz=-1969113801 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('')*('-1110641410')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'i98', '-1043432511 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_t1_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' sz=-199107170 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', '661013804 388461770 sz=-576571025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'i98', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DROP INDEX IF EXISTS "i98"; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.automatic_index = false; -- 0ms;
PRAGMA temp.checkpoint_fullfsync; -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 REAL ); -- 1ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 TEXT , c2 BLOB ); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c0, c2) VALUES ('1353339662', '1060004656', 'h3'), (x'', NULL, '-750082355'), ('167654003', 0.18665403005846948, x''); -- 0ms;
PRAGMA application_id = -1204207839310792010; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = 1233119092454398961; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
PRAGMA main.application_id; -- 0ms;
END; -- 0ms;
PRAGMA main.cache_size = 0; -- 0ms;
PRAGMA main.threads = 1322322376771051591; -- 0ms;
ALTER TABLE t1 RENAME TO t2; -- 0ms;
INSERT OR IGNORE INTO t2(c0, c2) VALUES ('468081070', 'eXL''u('), (8220135.0, 'LFtsg{)/'), (0.013854691024854704, x''); -- 4ms;
INSERT OR ROLLBACK INTO t0(c1, c2, c0) VALUES ('41738659', 'IO', NULL); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (2.04859798E9, 'Ln', x'', 989228885); -- 0ms;
INSERT OR ABORT INTO t2(c0, c2) VALUES (1.114626029E9, NULL); -- 1ms;
PRAGMA temp.cache_spill = 6056825148295877089; -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('44516227'); -- 0ms;
PRAGMA stats; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i21 ON t2((((c2)||(c1)) IN (LOWER(c1))),CAST((c2 IN (NULL)) AS INTEGER) ASC,((c1) NOT NULL)) WHERE (c2 IN (c1, c1)) COLLATE BINARY; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.4315598889442741); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-790711894'), ('-782399021'), (0.6985901190926352); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t2', 't2', ' unordered noskipscan'); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT * FROM vt1, t2 WHERE (((((vt1.c0)||(t2.c0)))LIKE((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||(t2.c0)))LIKE((+ (t2.c0))))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE (((((vt1.c0)||(t2.c0)))LIKE((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)||(t2.c0)))LIKE((+ (t2.c0))))) IS TRUE)  as count FROM vt1, t2);
SELECT * FROM vt1, t2 WHERE (((((vt1.c0)||(t2.c0)))LIKE((+ (t2.c0)))));
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (t0.c2) AND ('bLn''g')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (t0.c2) AND ('bLn''g')) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (t0.c2) AND ('bLn''g')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN (vt1.c0)) IN ())) IS TRUE)  as count FROM t0, vt1 ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (t0.c2) AND ('bLn''g')) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((vt1.c0 IN (vt1.c0)) IN ())) ORDER BY ((vt1.c0 COLLATE BINARY) NOT BETWEEN (t0.c2) AND ('bLn''g')) ASC  NULLS LAST;
SELECT * FROM t2, t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)<=(t2.c1))))<((((t2.c0)/(t2.c0))))) WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2, t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)<=(t2.c1))))<((((t2.c0)/(t2.c0))))));
SELECT * FROM t2, t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)<=(t2.c1))))<((((t2.c0)/(t2.c0))))) WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2, t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)<=(t2.c1))))<((((t2.c0)/(t2.c0))))));
SELECT * FROM t2, t0, rt0, vt0 RIGHT OUTER JOIN vt1 ON (((((rt0.c1)<=(t2.c1))))<((((t2.c0)/(t2.c0))))) WHERE (t2.c2);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))<<(((vt1.c0)<<(vt1.c0))))) ORDER BY (((vt1.c0) IS TRUE) IN (CAST(vt1.c0 AS NUMERIC), (+ ('-234262965')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))<<(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS TRUE) IN (CAST(vt1.c0 AS NUMERIC), (+ ('-234262965')))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))<<(((vt1.c0)<<(vt1.c0))))) ORDER BY (((vt1.c0) IS TRUE) IN (CAST(vt1.c0 AS NUMERIC), (+ ('-234262965')))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))<<(((vt1.c0)<<(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0) IS TRUE) IN (CAST(vt1.c0 AS NUMERIC), (+ ('-234262965')))) ASC);
SELECT COUNT(*) FROM vt1 WHERE ((((~ (vt1.c0)))<<(((vt1.c0)<<(vt1.c0))))) ORDER BY (((vt1.c0) IS TRUE) IN (CAST(vt1.c0 AS NUMERIC), (+ ('-234262965')))) ASC;
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) IS TRUE) AS INTEGER)) ORDER BY ((t0.c1 COLLATE NOCASE) BETWEEN ((t0.c2 IN (t0.c1, t0.c0))) AND ((t0.c0 IN ())))  NULLS FIRST, (+ (-2.073989053E9));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE NOCASE) BETWEEN ((t0.c2 IN (t0.c1, t0.c0))) AND ((t0.c0 IN ())))  NULLS FIRST, (+ (-2.073989053E9)));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) IS TRUE) AS INTEGER)) ORDER BY ((t0.c1 COLLATE NOCASE) BETWEEN ((t0.c2 IN (t0.c1, t0.c0))) AND ((t0.c0 IN ())))  NULLS FIRST, (+ (-2.073989053E9));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) IS TRUE) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ((t0.c1 COLLATE NOCASE) BETWEEN ((t0.c2 IN (t0.c1, t0.c0))) AND ((t0.c0 IN ())))  NULLS FIRST, (+ (-2.073989053E9)));
SELECT ALL * FROM t0 WHERE (CAST(((t0.c1) IS TRUE) AS INTEGER)) ORDER BY ((t0.c1 COLLATE NOCASE) BETWEEN ((t0.c2 IN (t0.c1, t0.c0))) AND ((t0.c0 IN ())))  NULLS FIRST, (+ (-2.073989053E9));
SELECT ALL COUNT(*) FROM vt0, t2, rt0, vt1 WHERE (CAST(((rt0.c0) BETWEEN (t2.c2) AND (0X69cac45f)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (t2.c2) AND (0x69cac45f)) AS REAL)) IS TRUE)  as count FROM vt0, t2, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t2, rt0, vt1 WHERE (CAST(((rt0.c0) BETWEEN (t2.c2) AND (0X69cac45f)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (t2.c2) AND (0x69cac45f)) AS REAL)) IS TRUE)  as count FROM vt0, t2, rt0, vt1);
SELECT ALL COUNT(*) FROM vt0, t2, rt0, vt1 WHERE (CAST(((rt0.c0) BETWEEN (t2.c2) AND (0X69cac45f)) AS REAL));
SELECT COUNT(*) FROM rt0, t2, t0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (NULL) AND (x''))) ISNULL) FULL OUTER JOIN vt0 ON CASE (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN CASE t0.c1  WHEN t0.c2 THEN rt0.c1 END THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CAST(rt0.c1 AS INTEGER) END WHERE (((rt0.c3)<=(CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)<=(CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, t2, t0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (NULL) AND (x''))) ISNULL) FULL OUTER JOIN vt0 ON CASE (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN CASE t0.c1  WHEN t0.c2 THEN rt0.c1 END THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM rt0, t2, t0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (NULL) AND (x''))) ISNULL) FULL OUTER JOIN vt0 ON CASE (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN CASE t0.c1  WHEN t0.c2 THEN rt0.c1 END THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CAST(rt0.c1 AS INTEGER) END WHERE (((rt0.c3)<=(CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)<=(CASE WHEN rt0.c0 THEN rt0.c3 END))) IS TRUE)  as count FROM rt0, t2, t0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (NULL) AND (x''))) ISNULL) FULL OUTER JOIN vt0 ON CASE (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN CASE t0.c1  WHEN t0.c2 THEN rt0.c1 END THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CAST(rt0.c1 AS INTEGER) END);
SELECT COUNT(*) FROM rt0, t2, t0 INNER JOIN vt1 ON ((((vt1.c0) BETWEEN (NULL) AND (x''))) ISNULL) FULL OUTER JOIN vt0 ON CASE (((vt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))  WHEN CASE t0.c1  WHEN t0.c2 THEN rt0.c1 END THEN (((t0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE CAST(rt0.c1 AS INTEGER) END WHERE (((rt0.c3)<=(CASE WHEN rt0.c0 THEN rt0.c3 END)));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c0))>=((t0.c1, t0.c0, t0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c1, t0.c0))>=((t0.c1, t0.c0, t0.c2)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c0))>=((t0.c1, t0.c0, t0.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c2, t0.c1, t0.c0))>=((t0.c1, t0.c0, t0.c2)))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c2, t0.c1, t0.c0))>=((t0.c1, t0.c0, t0.c2)))) IS TRUE));
SELECT COUNT(*) FROM vt0, t2, vt1, t0, rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t2, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, t2, vt1, t0, rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) IS TRUE)) IS TRUE)  as count FROM vt0, t2, vt1, t0, rt0);
SELECT COUNT(*) FROM vt0, t2, vt1, t0, rt0 WHERE ((((~ (rt0.c2))) IS TRUE));
SELECT ALL * FROM t2 CROSS JOIN vt0 ON '' CROSS JOIN t0 ON (LAST_INSERT_ROWID() IN (rt0.c2 COLLATE RTRIM, ((rt0.c0) BETWEEN (t0.c0) AND (t0.c2)))) CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (((((t2.c1, '69414398', t0.c1)) BETWEEN ((t2.c1, t0.c0, t2.c1)) AND ((t0.c0, '', rt0.c0))))IS NOT(CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END)) WHERE (((0.5294216728119728) NOT BETWEEN (NULLIF(-1032030195, t0.c1)) AND (LENGTH(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((0.5294216728119728) NOT BETWEEN (NULLIF(-1032030195, t0.c1)) AND (LENGTH(rt0.c2)))) IS TRUE)  as count FROM t2 CROSS JOIN vt0 ON '' CROSS JOIN t0 ON (LAST_INSERT_ROWID() IN (rt0.c2 COLLATE RTRIM, ((rt0.c0) BETWEEN (t0.c0) AND (t0.c2)))) CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (((((t2.c1, '69414398', t0.c1)) BETWEEN ((t2.c1, t0.c0, t2.c1)) AND ((t0.c0, '', rt0.c0))))IS NOT(CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END)));
SELECT ALL * FROM t2 CROSS JOIN vt0 ON '' CROSS JOIN t0 ON (LAST_INSERT_ROWID() IN (rt0.c2 COLLATE RTRIM, ((rt0.c0) BETWEEN (t0.c0) AND (t0.c2)))) CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (((((t2.c1, '69414398', t0.c1)) BETWEEN ((t2.c1, t0.c0, t2.c1)) AND ((t0.c0, '', rt0.c0))))IS NOT(CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END)) WHERE (((0.5294216728119728) NOT BETWEEN (NULLIF(-1032030195, t0.c1)) AND (LENGTH(rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((0.5294216728119728) NOT BETWEEN (NULLIF(-1032030195, t0.c1)) AND (LENGTH(rt0.c2)))) IS TRUE)  as count FROM t2 CROSS JOIN vt0 ON '' CROSS JOIN t0 ON (LAST_INSERT_ROWID() IN (rt0.c2 COLLATE RTRIM, ((rt0.c0) BETWEEN (t0.c0) AND (t0.c2)))) CROSS JOIN vt1 ON x'' RIGHT OUTER JOIN rt0 ON (((((t2.c1, '69414398', t0.c1)) BETWEEN ((t2.c1, t0.c0, t2.c1)) AND ((t0.c0, '', rt0.c0))))IS NOT(CASE WHEN vt1.c0 THEN rt0.c3 ELSE vt1.c0 END)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((vt1.c0) NOT BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c0))>=((rt0.c3))))) WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))AND(vt1.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))AND(vt1.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((vt1.c0) NOT BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c0))>=((rt0.c3))))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((vt1.c0) NOT BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c0))>=((rt0.c3))))) WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))AND(vt1.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))AND(vt1.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON ((vt1.c0) NOT BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c0))>=((rt0.c3))))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt1 ON ((vt1.c0) NOT BETWEEN ((NOT (rt0.c1))) AND ((((rt0.c0))>=((rt0.c3))))) WHERE (((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))AND(vt1.c0)))>(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))));
SELECT COUNT(*) FROM t2, rt0 FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c3 AS BLOB))OR(((t2.c1)/(t2.c2)))))OR(rt0.c2)))AND(t2.c0)))AND(t2.c0)) WHERE (QUOTE(vt0.c0) COLLATE NOCASE) ORDER BY ((((((t2.c2)AND(0X0)))OR(t2.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((QUOTE(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t2, rt0 FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c3 AS BLOB))OR(((t2.c1)/(t2.c2)))))OR(rt0.c2)))AND(t2.c0)))AND(t2.c0)) ORDER BY ((((((t2.c2)AND(0X0)))OR(t2.c2))) NOTNULL) ASC);
SELECT COUNT(*) FROM t2, rt0 FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c3 AS BLOB))OR(((t2.c1)/(t2.c2)))))OR(rt0.c2)))AND(t2.c0)))AND(t2.c0)) WHERE (QUOTE(vt0.c0) COLLATE NOCASE) ORDER BY ((((((t2.c2)AND(0X0)))OR(t2.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((QUOTE(vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t2, rt0 FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c3 AS BLOB))OR(((t2.c1)/(t2.c2)))))OR(rt0.c2)))AND(t2.c0)))AND(t2.c0)) ORDER BY ((((((t2.c2)AND(0X0)))OR(t2.c2))) NOTNULL) ASC);
SELECT COUNT(*) FROM t2, rt0 FULL OUTER JOIN vt0 ON ((((((((CAST(rt0.c3 AS BLOB))OR(((t2.c1)/(t2.c2)))))OR(rt0.c2)))AND(t2.c0)))AND(t2.c0)) WHERE (QUOTE(vt0.c0) COLLATE NOCASE) ORDER BY ((((((t2.c2)AND(0X0)))OR(t2.c2))) NOTNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)>=(vt0.c0)))OR(((vt0.c0)/(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) IS TRUE) IN (CASE WHEN t0.c0 THEN 0.2501189908054058 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) IS TRUE) IN (CASE WHEN t0.c0 THEN 0.2501189908054058 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) IS TRUE) IN (CASE WHEN t0.c0 THEN 0.2501189908054058 END)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2) IS TRUE) IN (CASE WHEN t0.c0 THEN 0.2501189908054058 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c2) IS TRUE) IN (CASE WHEN t0.c0 THEN 0.2501189908054058 END)));
SELECT * FROM t0, vt0, t2 CROSS JOIN rt0 ON ((((((vt0.c0) IS TRUE))OR((0.9473575459273922 IN ()))))AND(((rt0.c3)&(rt0.c1)))) LEFT OUTER JOIN vt1 ON ((0xe998812) ISNULL) WHERE (((((rt0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, t2 CROSS JOIN rt0 ON ((((((vt0.c0) IS TRUE))OR((0.9473575459273922 IN ()))))AND(((rt0.c3)&(rt0.c1)))) LEFT OUTER JOIN vt1 ON ((0xe998812) ISNULL));
SELECT * FROM t0, vt0, t2 CROSS JOIN rt0 ON ((((((vt0.c0) IS TRUE))OR((0.9473575459273922 IN ()))))AND(((rt0.c3)&(rt0.c1)))) LEFT OUTER JOIN vt1 ON ((0xe998812) ISNULL) WHERE (((((rt0.c2) NOT NULL)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM t0, vt0, t2 CROSS JOIN rt0 ON ((((((vt0.c0) IS TRUE))OR((0.9473575459273922 IN ()))))AND(((rt0.c3)&(rt0.c1)))) LEFT OUTER JOIN vt1 ON ((0xe998812) ISNULL));
SELECT * FROM t0, vt0, t2 CROSS JOIN rt0 ON ((((((vt0.c0) IS TRUE))OR((0.9473575459273922 IN ()))))AND(((rt0.c3)&(rt0.c1)))) LEFT OUTER JOIN vt1 ON ((0xe998812) ISNULL) WHERE (((((rt0.c2) NOT NULL)) IS TRUE));
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT NULL))>>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))>>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT NULL))>>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))>>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((~ (vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT NULL))>>((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(NULL)))OR(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(NULL)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(NULL)))OR(t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)OR(NULL)))OR(t0.c1)) IN ())) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((t0.c0)OR(NULL)))OR(t0.c1)) IN ()));
SELECT * FROM t2, vt0 WHERE (((t2.c0)|(t2.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)|(t2.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (((t2.c0)|(t2.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c0)|(t2.c1)) COLLATE NOCASE) IS TRUE)  as count FROM t2, vt0);
SELECT * FROM t2, vt0 WHERE (((t2.c0)|(t2.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1, rt0, t2 WHERE (((((CASE t2.c0  WHEN NULL THEN x'' ELSE vt1.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t2.c1)))))AND(((((((((t2.c0)OR(t2.c1)))AND(rt0.c3)))OR(NULL)))AND(x'4b36'))))) ORDER BY CASE WHEN rt0.c1 THEN (+ (rt0.c0)) WHEN CASE WHEN t2.c0 THEN -4.47572931E8 WHEN t2.c0 THEN t2.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN t2.c2 THEN rt0.c2 END THEN CAST(rt0.c3 AS BLOB) WHEN (+ (t2.c1)) THEN ((((((((t2.c0)AND(rt0.c3)))AND(rt0.c3)))AND(t2.c1)))OR(t2.c0)) ELSE ((((t2.c1)OR(rt0.c0)))AND(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t2.c0  WHEN NULL THEN x'' ELSE vt1.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t2.c1)))))AND(((((((((t2.c0)OR(t2.c1)))AND(rt0.c3)))OR(NULL)))AND(x'4b36'))))) IS TRUE)  as count FROM vt1, rt0, t2 ORDER BY CASE WHEN rt0.c1 THEN (+ (rt0.c0)) WHEN CASE WHEN t2.c0 THEN -4.47572931E8 WHEN t2.c0 THEN t2.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN t2.c2 THEN rt0.c2 END THEN CAST(rt0.c3 AS BLOB) WHEN (+ (t2.c1)) THEN ((((((((t2.c0)AND(rt0.c3)))AND(rt0.c3)))AND(t2.c1)))OR(t2.c0)) ELSE ((((t2.c1)OR(rt0.c0)))AND(rt0.c3)) END);
SELECT COUNT(*) FROM vt1, rt0, t2 WHERE (((((CASE t2.c0  WHEN NULL THEN x'' ELSE vt1.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t2.c1)))))AND(((((((((t2.c0)OR(t2.c1)))AND(rt0.c3)))OR(NULL)))AND(x'4b36'))))) ORDER BY CASE WHEN rt0.c1 THEN (+ (rt0.c0)) WHEN CASE WHEN t2.c0 THEN -4.47572931E8 WHEN t2.c0 THEN t2.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN t2.c2 THEN rt0.c2 END THEN CAST(rt0.c3 AS BLOB) WHEN (+ (t2.c1)) THEN ((((((((t2.c0)AND(rt0.c3)))AND(rt0.c3)))AND(t2.c1)))OR(t2.c0)) ELSE ((((t2.c1)OR(rt0.c0)))AND(rt0.c3)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t2.c0  WHEN NULL THEN x'' ELSE vt1.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t2.c1)))))AND(((((((((t2.c0)OR(t2.c1)))AND(rt0.c3)))OR(NULL)))AND(x'4b36'))))) IS TRUE)  as count FROM vt1, rt0, t2 ORDER BY CASE WHEN rt0.c1 THEN (+ (rt0.c0)) WHEN CASE WHEN t2.c0 THEN -4.47572931E8 WHEN t2.c0 THEN t2.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN t2.c2 THEN rt0.c2 END THEN CAST(rt0.c3 AS BLOB) WHEN (+ (t2.c1)) THEN ((((((((t2.c0)AND(rt0.c3)))AND(rt0.c3)))AND(t2.c1)))OR(t2.c0)) ELSE ((((t2.c1)OR(rt0.c0)))AND(rt0.c3)) END);
SELECT COUNT(*) FROM vt1, rt0, t2 WHERE (((((CASE t2.c0  WHEN NULL THEN x'' ELSE vt1.c0 END)OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t2.c1)))))AND(((((((((t2.c0)OR(t2.c1)))AND(rt0.c3)))OR(NULL)))AND(x'4b36'))))) ORDER BY CASE WHEN rt0.c1 THEN (+ (rt0.c0)) WHEN CASE WHEN t2.c0 THEN -4.47572931E8 WHEN t2.c0 THEN t2.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN rt0.c3 WHEN t2.c2 THEN rt0.c2 END THEN CAST(rt0.c3 AS BLOB) WHEN (+ (t2.c1)) THEN ((((((((t2.c0)AND(rt0.c3)))AND(rt0.c3)))AND(t2.c1)))OR(t2.c0)) ELSE ((((t2.c1)OR(rt0.c0)))AND(rt0.c3)) END;
SELECT * FROM vt1 WHERE (((((((((CASE WHEN NULL THEN -491916856 END)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.48079473139560136))))))OR(NULL)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)&(vt1.c0))))) ORDER BY ((((((vt1.c0)||(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN NULL THEN -491916856 END)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.48079473139560136))))))OR(NULL)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)||(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((CASE WHEN NULL THEN -491916856 END)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.48079473139560136))))))OR(NULL)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)&(vt1.c0))))) ORDER BY ((((((vt1.c0)||(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN NULL THEN -491916856 END)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.48079473139560136))))))OR(NULL)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)&(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)||(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((((((CASE WHEN NULL THEN -491916856 END)AND((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((0.48079473139560136))))))OR(NULL)))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))))OR(((vt1.c0)&(vt1.c0))))) ORDER BY ((((((vt1.c0)||(vt1.c0)))OR((vt1.c0 IN ()))))AND((vt1.c0 IN (vt1.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON '6Fxﴻo)Y' INNER JOIN vt0 ON (((x'' IN ())) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t0.c0))) AND (((((((((rt0.c3)OR(rt0.c2)))AND(t0.c1)))AND(rt0.c2)))AND(t2.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1) BETWEEN (t2.c1) AND (t2.c2)) COLLATE RTRIM RIGHT OUTER JOIN t2 ON ((rt0.c2) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY WHERE ((((rt0.c3, t2.c1, rt0.c2)) BETWEEN (((- (rt0.c0)), CAST(t2.c1 AS INTEGER), (0.5007843983854068 IN ()))) AND (((NOT (t0.c1)), ((t2.c2) NOT NULL), CAST(-4.87569656E8 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, t2.c1, rt0.c2)) BETWEEN (((- (rt0.c0)), CAST(t2.c1 AS INTEGER), (0.5007843983854068 IN ()))) AND (((NOT (t0.c1)), ((t2.c2) NOT NULL), CAST(-4.87569656E8 AS REAL))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON '6Fxﴻo)Y' INNER JOIN vt0 ON (((x'' IN ())) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t0.c0))) AND (((((((((rt0.c3)OR(rt0.c2)))AND(t0.c1)))AND(rt0.c2)))AND(t2.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1) BETWEEN (t2.c1) AND (t2.c2)) COLLATE RTRIM RIGHT OUTER JOIN t2 ON ((rt0.c2) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt1 ON '6Fxﴻo)Y' INNER JOIN vt0 ON (((x'' IN ())) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t0.c0))) AND (((((((((rt0.c3)OR(rt0.c2)))AND(t0.c1)))AND(rt0.c2)))AND(t2.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1) BETWEEN (t2.c1) AND (t2.c2)) COLLATE RTRIM RIGHT OUTER JOIN t2 ON ((rt0.c2) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY WHERE ((((rt0.c3, t2.c1, rt0.c2)) BETWEEN (((- (rt0.c0)), CAST(t2.c1 AS INTEGER), (0.5007843983854068 IN ()))) AND (((NOT (t0.c1)), ((t2.c2) NOT NULL), CAST(-4.87569656E8 AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, t2.c1, rt0.c2)) BETWEEN (((- (rt0.c0)), CAST(t2.c1 AS INTEGER), (0.5007843983854068 IN ()))) AND (((NOT (t0.c1)), ((t2.c2) NOT NULL), CAST(-4.87569656E8 AS REAL))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt1 ON '6Fxﴻo)Y' INNER JOIN vt0 ON (((x'' IN ())) BETWEEN (((((vt1.c0)OR(vt0.c0)))OR(t0.c0))) AND (((((((((rt0.c3)OR(rt0.c2)))AND(t0.c1)))AND(rt0.c2)))AND(t2.c0)))) LEFT OUTER JOIN t0 ON ((rt0.c1) BETWEEN (t2.c1) AND (t2.c2)) COLLATE RTRIM RIGHT OUTER JOIN t2 ON ((rt0.c2) NOT BETWEEN (t0.c0) AND (t2.c0)) COLLATE BINARY);
SELECT * FROM t2, rt0, vt0, t0, vt1 WHERE (((((rt0.c1) NOTNULL))|(CAST(t0.c2 AS BLOB)))) ORDER BY ((((x'') NOTNULL))IS(''))  NULLS LAST, CASE ((t2.c1) IS FALSE)  WHEN ((t2.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN (rt0.c0 IN ()) WHEN TYPEOF(rt0.c2) THEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) WHEN (+ (rt0.c0)) THEN IFNULL(DISTINCT NULL, rt0.c3) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))|(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t2, rt0, vt0, t0, vt1 ORDER BY ((((x'') NOTNULL))IS(''))  NULLS LAST, CASE ((t2.c1) IS FALSE)  WHEN ((t2.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN (rt0.c0 IN ()) WHEN TYPEOF(rt0.c2) THEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) WHEN (+ (rt0.c0)) THEN IFNULL(DISTINCT NULL, rt0.c3) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END DESC  NULLS FIRST);
SELECT * FROM t2, rt0, vt0, t0, vt1 WHERE (((((rt0.c1) NOTNULL))|(CAST(t0.c2 AS BLOB)))) ORDER BY ((((x'') NOTNULL))IS(''))  NULLS LAST, CASE ((t2.c1) IS FALSE)  WHEN ((t2.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN (rt0.c0 IN ()) WHEN TYPEOF(rt0.c2) THEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) WHEN (+ (rt0.c0)) THEN IFNULL(DISTINCT NULL, rt0.c3) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOTNULL))|(CAST(t0.c2 AS BLOB)))) IS TRUE)  as count FROM t2, rt0, vt0, t0, vt1 ORDER BY ((((x'') NOTNULL))IS(''))  NULLS LAST, CASE ((t2.c1) IS FALSE)  WHEN ((t2.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN (rt0.c0 IN ()) WHEN TYPEOF(rt0.c2) THEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) WHEN (+ (rt0.c0)) THEN IFNULL(DISTINCT NULL, rt0.c3) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END DESC  NULLS FIRST);
SELECT * FROM t2, rt0, vt0, t0, vt1 WHERE (((((rt0.c1) NOTNULL))|(CAST(t0.c2 AS BLOB)))) ORDER BY ((((x'') NOTNULL))IS(''))  NULLS LAST, CASE ((t2.c1) IS FALSE)  WHEN ((t2.c2) NOT BETWEEN (rt0.c2) AND (vt1.c0)) THEN (rt0.c0 IN ()) WHEN TYPEOF(rt0.c2) THEN ((t0.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)) WHEN (+ (rt0.c0)) THEN IFNULL(DISTINCT NULL, rt0.c3) ELSE ((vt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t2, vt0, t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c1)) THEN t0.c0 COLLATE RTRIM ELSE ((x'') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)>>(t0.c1)) THEN t0.c0 COLLATE RTRIM ELSE ((x'') NOT NULL) END) IS TRUE)  as count FROM vt1, t2, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, t2, vt0, t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c1)) THEN t0.c0 COLLATE RTRIM ELSE ((x'') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c2)>>(t0.c1)) THEN t0.c0 COLLATE RTRIM ELSE ((x'') NOT NULL) END) IS TRUE)  as count FROM vt1, t2, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, t2, vt0, t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c1)) THEN t0.c0 COLLATE RTRIM ELSE ((x'') NOT NULL) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(x'' AS TEXT));
SELECT COUNT(*) FROM vt0, t2, t0 CROSS JOIN rt0 ON (- (((('쿂2oofBOx')) BETWEEN ((t2.c2)) AND ((9.36994333E8))))) INNER JOIN vt1 ON NULLIF((((t2.c2)) NOT BETWEEN ((t2.c1)) AND ((t0.c2))), ((t2.c1)<<(vt0.c0))) WHERE (((((rt0.c3) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, t2, t0 CROSS JOIN rt0 ON (- (((('쿂2oofBOx')) BETWEEN ((t2.c2)) AND ((9.36994333E8))))) INNER JOIN vt1 ON NULLIF((((t2.c2)) NOT BETWEEN ((t2.c1)) AND ((t0.c2))), ((t2.c1)<<(vt0.c0))));
SELECT COUNT(*) FROM vt0, t2, t0 CROSS JOIN rt0 ON (- (((('쿂2oofBOx')) BETWEEN ((t2.c2)) AND ((9.36994333E8))))) INNER JOIN vt1 ON NULLIF((((t2.c2)) NOT BETWEEN ((t2.c1)) AND ((t0.c2))), ((t2.c1)<<(vt0.c0))) WHERE (((((rt0.c3) IS FALSE)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) IS FALSE)) IS FALSE)) IS TRUE)  as count FROM vt0, t2, t0 CROSS JOIN rt0 ON (- (((('쿂2oofBOx')) BETWEEN ((t2.c2)) AND ((9.36994333E8))))) INNER JOIN vt1 ON NULLIF((((t2.c2)) NOT BETWEEN ((t2.c1)) AND ((t0.c2))), ((t2.c1)<<(vt0.c0))));
SELECT COUNT(*) FROM vt0, t2, t0 CROSS JOIN rt0 ON (- (((('쿂2oofBOx')) BETWEEN ((t2.c2)) AND ((9.36994333E8))))) INNER JOIN vt1 ON NULLIF((((t2.c2)) NOT BETWEEN ((t2.c1)) AND ((t0.c2))), ((t2.c1)<<(vt0.c0))) WHERE (((((rt0.c3) IS FALSE)) IS FALSE));
SELECT * FROM vt1, t2, rt0, t0 WHERE (ABS((~ (8.07664866E8))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((~ (8.07664866E8)))) IS TRUE)  as count FROM vt1, t2, rt0, t0);
SELECT * FROM vt1, t2, rt0, t0 WHERE (ABS((~ (8.07664866E8))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((~ (8.07664866E8)))) IS TRUE)  as count FROM vt1, t2, rt0, t0);
SELECT * FROM vt1, t2, rt0, t0 WHERE (ABS((~ (8.07664866E8))));
SELECT * FROM t2, t0, vt1, rt0, vt0 WHERE ((t2.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t2.c1 IN ())) IS TRUE)  as count FROM t2, t0, vt1 NOT INDEXED, rt0, vt0);
SELECT * FROM t2, t0, vt1, rt0, vt0 WHERE ((t2.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t2.c1 IN ())) IS TRUE)  as count FROM t2, t0, vt1 NOT INDEXED, rt0, vt0);
SELECT * FROM t2, t0, vt1, rt0, vt0 WHERE ((t2.c1 IN ()));
SELECT COUNT(*) FROM t0, vt0, rt0, vt1, t2 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t2);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1, t2 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (rt0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t2);
SELECT COUNT(*) FROM t0, vt0, rt0, vt1, t2 WHERE (CAST((rt0.c2 IN (rt0.c1)) AS INTEGER));
SELECT ALL * FROM t0, vt1, t2, vt0, rt0 WHERE (CAST((NOT (t2.c0)) AS TEXT)) ORDER BY (- (((t0.c0)<=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t2.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, t2, vt0, rt0 ORDER BY (- (((t0.c0)<=(t0.c2)))));
SELECT ALL * FROM t0, vt1, t2, vt0, rt0 WHERE (CAST((NOT (t2.c0)) AS TEXT)) ORDER BY (- (((t0.c0)<=(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CAST((NOT (t2.c0)) AS TEXT)) IS TRUE)  as count FROM t0, vt1, t2, vt0, rt0 ORDER BY (- (((t0.c0)<=(t0.c2)))));
SELECT ALL * FROM t0, vt1, t2, vt0, rt0 WHERE (CAST((NOT (t2.c0)) AS TEXT)) ORDER BY (- (((t0.c0)<=(t0.c2))));
SELECT * FROM t0 WHERE (((((t0.c2) NOT NULL)) NOT BETWEEN (t0.c0) AND (((t0.c2)&(t0.c2))))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT NULL)) NOT BETWEEN (t0.c0) AND (((t0.c2)&(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2) NOT NULL)) NOT BETWEEN (t0.c0) AND (((t0.c2)&(t0.c2))))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) NOT NULL)) NOT BETWEEN (t0.c0) AND (((t0.c2)&(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c2) NOT NULL)) NOT BETWEEN (t0.c0) AND (((t0.c2)&(t0.c2))))) ORDER BY CAST(((((t0.c0)OR(t0.c0)))AND(t0.c1)) AS BLOB) DESC  NULLS FIRST;
SELECT * FROM vt0, t0, vt1, t2 WHERE (CASE ((((vt1.c0)OR(t2.c2)))OR(t2.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN CAST(t2.c1 AS TEXT) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)OR(t2.c2)))OR(t2.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN CAST(t2.c1 AS TEXT) ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, t0, vt1, t2);
SELECT * FROM vt0, t0, vt1, t2 WHERE (CASE ((((vt1.c0)OR(t2.c2)))OR(t2.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN CAST(t2.c1 AS TEXT) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt1.c0)OR(t2.c2)))OR(t2.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN CAST(t2.c1 AS TEXT) ELSE CAST(vt1.c0 AS TEXT) END) IS TRUE)  as count FROM vt0, t0, vt1, t2);
SELECT * FROM vt0, t0, vt1, t2 WHERE (CASE ((((vt1.c0)OR(t2.c2)))OR(t2.c0))  WHEN CAST(t0.c0 AS INTEGER) THEN CAST(t2.c1 AS TEXT) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((((vt0.c0, t2.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t2.c2) ISNULL), ((vt0.c0) NOTNULL))) AND (((+ ('359925558')), ((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t2.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t2.c2) ISNULL), ((vt0.c0) NOTNULL))) AND (((+ ('359925558')), ((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((((vt0.c0, t2.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t2.c2) ISNULL), ((vt0.c0) NOTNULL))) AND (((+ ('359925558')), ((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)), (vt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t2.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t2.c2) ISNULL), ((vt0.c0) NOTNULL))) AND (((+ ('359925558')), ((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)), (vt0.c0 IN ()))))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((((vt0.c0, t2.c1, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC), ((t2.c2) ISNULL), ((vt0.c0) NOTNULL))) AND (((+ ('359925558')), ((t2.c0) NOT BETWEEN (t2.c2) AND (t2.c1)), (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) AS TEXT));
SELECT ALL * FROM t2 WHERE (((((((((((t2.c0)AND(t2.c0)))OR(t2.c1)))AND(t2.c1)))OR(t2.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c0)AND(t2.c0)))OR(t2.c1)))AND(t2.c1)))OR(t2.c1))) NOTNULL)) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((((((((((t2.c0)AND(t2.c0)))OR(t2.c1)))AND(t2.c1)))OR(t2.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c0)AND(t2.c0)))OR(t2.c1)))AND(t2.c1)))OR(t2.c1))) NOTNULL)) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((((((((((t2.c0)AND(t2.c0)))OR(t2.c1)))AND(t2.c1)))OR(t2.c1))) NOTNULL));
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ('-1075556114' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('-1075556114' COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ('-1075556114' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('-1075556114' COLLATE BINARY) IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ('-1075556114' COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0, t2 WHERE (((((((t2.c1)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (((t2.c1)=(rt0.c1))))) ORDER BY ((((t2.c0 COLLATE NOCASE)AND((((t2.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, '0.2922468603756554', x'')) AND ((t2.c1, t2.c1, rt0.c0))))))OR(0.3887356080567388)) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((x'')*(rt0.c2)))) AND ((t2.c1)))  NULLS LAST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((t2.c1)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (((t2.c1)==(rt0.c1))))) IS TRUE)  as count FROM rt0, t2 ORDER BY ((((t2.c0 COLLATE NOCASE)AND((((t2.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, '0.2922468603756554', x'')) AND ((t2.c1, t2.c1, rt0.c0))))))OR(0.3887356080567388)) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((x'')*(rt0.c2)))) AND ((t2.c1)))  NULLS LAST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t2 WHERE (((((((t2.c1)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (((t2.c1)=(rt0.c1))))) ORDER BY ((((t2.c0 COLLATE NOCASE)AND((((t2.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, '0.2922468603756554', x'')) AND ((t2.c1, t2.c1, rt0.c0))))))OR(0.3887356080567388)) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((x'')*(rt0.c2)))) AND ((t2.c1)))  NULLS LAST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((t2.c1)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (((t2.c1)==(rt0.c1))))) IS TRUE)  as count FROM rt0, t2 ORDER BY ((((t2.c0 COLLATE NOCASE)AND((((t2.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, '0.2922468603756554', x'')) AND ((t2.c1, t2.c1, rt0.c0))))))OR(0.3887356080567388)) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((x'')*(rt0.c2)))) AND ((t2.c1)))  NULLS LAST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t2 WHERE (((((((t2.c1)OR(rt0.c2)))AND(rt0.c3))) BETWEEN (((rt0.c1)+(rt0.c1))) AND (((t2.c1)=(rt0.c1))))) ORDER BY ((((t2.c0 COLLATE NOCASE)AND((((t2.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, '0.2922468603756554', x'')) AND ((t2.c1, t2.c1, rt0.c0))))))OR(0.3887356080567388)) DESC  NULLS LAST, (((rt0.c1)) BETWEEN ((((x'')*(rt0.c2)))) AND ((t2.c1)))  NULLS LAST, CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE;
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (x'');
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, vt1.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c1, '-811941734')))) NOT NULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, vt1.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c1, '-811941734')))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, vt1.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c1, '-811941734')))) NOT NULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, vt1.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c1, '-811941734')))) NOT NULL)) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC);
SELECT COUNT(*) FROM vt1, rt0, vt0 WHERE ((((((vt0.c0, vt0.c0, vt1.c0, vt0.c0, rt0.c3)) NOT BETWEEN ((vt0.c0, rt0.c3, vt1.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0, rt0.c1, '-811941734')))) NOT NULL)) ORDER BY (((rt0.c3)) NOT BETWEEN ((x'')) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c1))))) ASC;
SELECT COUNT(*) FROM vt1, rt0, t0, t2 WHERE (((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0, t2);
SELECT COUNT(*) FROM vt1, rt0, t0, t2 WHERE (((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END) NOTNULL)) IS TRUE)  as count FROM vt1, rt0, t0, t2);
SELECT COUNT(*) FROM vt1, rt0, t0, t2 WHERE (((CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c1 END) NOTNULL));
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=(((vt1.c0)||(vt1.c0))))) ORDER BY CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>(((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=(((vt1.c0)||(vt1.c0))))) ORDER BY CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))<>(((vt1.c0)||(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM END);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))!=(((vt1.c0)||(vt1.c0))))) ORDER BY CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN vt1.c0 THEN vt1.c0 COLLATE RTRIM END;
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ((- ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ((- ((- (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((- (rt0.c2))))) IS TRUE)  as count FROM vt1, vt0, t0, rt0);
SELECT ALL * FROM vt1, vt0, t0, rt0 WHERE ((- ((- (rt0.c2)))));
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN ()))!=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((t0.c2)*(((t0.c0)<>(vt0.c0)))) WHERE (((NULL)GLOB(((vt0.c0) IS TRUE)))) ORDER BY ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)&(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC, ((((CASE WHEN vt1.c0 THEN t0.c2 END)AND(((t0.c1)<=(t0.c2)))))OR(((t0.c0)<<(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN ()))!=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((t0.c2)*(((t0.c0)!=(vt0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)&(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC, ((((CASE WHEN vt1.c0 THEN t0.c2 END)AND(((t0.c1)<=(t0.c2)))))OR(((t0.c0)<<(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN ()))!=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((t0.c2)*(((t0.c0)<>(vt0.c0)))) WHERE (((NULL)GLOB(((vt0.c0) IS TRUE)))) ORDER BY ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)&(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC, ((((CASE WHEN vt1.c0 THEN t0.c2 END)AND(((t0.c1)<=(t0.c2)))))OR(((t0.c0)<<(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)GLOB(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN ()))!=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((t0.c2)*(((t0.c0)!=(vt0.c0)))) ORDER BY ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)&(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC, ((((CASE WHEN vt1.c0 THEN t0.c2 END)AND(((t0.c1)<=(t0.c2)))))OR(((t0.c0)<<(vt1.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt1 CROSS JOIN t0 ON (((t0.c1 IN ()))!=((t0.c1 IN ()))) FULL OUTER JOIN vt0 ON ((t0.c2)*(((t0.c0)<>(vt0.c0)))) WHERE (((NULL)GLOB(((vt0.c0) IS TRUE)))) ORDER BY ((CASE t0.c0  WHEN t0.c2 THEN t0.c0 ELSE t0.c0 END)&(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) ASC, ((((CASE WHEN vt1.c0 THEN t0.c2 END)AND(((t0.c1)<=(t0.c2)))))OR(((t0.c0)<<(vt1.c0)))) ASC;
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) ISNULL))IS((('I%')AND(rt0.c1)))) WHERE ((((rt0.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) ISNULL))IS((('I%')AND(rt0.c1)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) ISNULL))IS((('I%')AND(rt0.c1)))) WHERE ((((rt0.c3 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 IN ())) NOTNULL)) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) ISNULL))IS((('I%')AND(rt0.c1)))));
SELECT * FROM vt1 FULL OUTER JOIN rt0 ON ((((rt0.c3) ISNULL))IS((('I%')AND(rt0.c1)))) WHERE ((((rt0.c3 IN ())) NOTNULL));
SELECT * FROM rt0, t2 WHERE ((((((((((((((rt0.c2 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c1)>=(rt0.c3)))))AND(((rt0.c2) BETWEEN (t2.c0) AND (rt0.c0)))))AND(IFNULL(DISTINCT t2.c0, rt0.c3))))OR(CAST(t2.c1 AS TEXT))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t2.c0)))))) ORDER BY t2.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c2 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c1)>=(rt0.c3)))))AND(((rt0.c2) BETWEEN (t2.c0) AND (rt0.c0)))))AND(IFNULL(DISTINCT t2.c0, rt0.c3))))OR(CAST(t2.c1 AS TEXT))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t2.c0)))))) IS TRUE)  as count FROM rt0, t2 ORDER BY t2.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, t2 WHERE ((((((((((((((rt0.c2 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c1)>=(rt0.c3)))))AND(((rt0.c2) BETWEEN (t2.c0) AND (rt0.c0)))))AND(IFNULL(DISTINCT t2.c0, rt0.c3))))OR(CAST(t2.c1 AS TEXT))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t2.c0)))))) ORDER BY t2.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((((((rt0.c2 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c1)>=(rt0.c3)))))AND(((rt0.c2) BETWEEN (t2.c0) AND (rt0.c0)))))AND(IFNULL(DISTINCT t2.c0, rt0.c3))))OR(CAST(t2.c1 AS TEXT))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t2.c0)))))) IS TRUE)  as count FROM rt0, t2 ORDER BY t2.c2 DESC  NULLS FIRST);
SELECT * FROM rt0, t2 WHERE ((((((((((((((rt0.c2 IN ()))AND(rt0.c1 COLLATE BINARY)))OR(((rt0.c1)>=(rt0.c3)))))AND(((rt0.c2) BETWEEN (t2.c0) AND (rt0.c0)))))AND(IFNULL(DISTINCT t2.c0, rt0.c3))))OR(CAST(t2.c1 AS TEXT))))OR((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t2.c0)))))) ORDER BY t2.c2 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c0)<=(t0.c1)) ELSE (('P!')IS NOT(t0.c1)) END) ORDER BY ((CAST(t0.c0 AS TEXT))OR(((t0.c0)&(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS NUMERIC)  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c0)<=(t0.c1)) ELSE (('P!')IS NOT(t0.c1)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(t0.c0 AS TEXT))OR(((t0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c0)<=(t0.c1)) ELSE (('P!')IS NOT(t0.c1)) END) ORDER BY ((CAST(t0.c0 AS TEXT))OR(((t0.c0)&(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt1.c0 AS NUMERIC)  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c0)<=(t0.c1)) ELSE (('P!')IS NOT(t0.c1)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY ((CAST(t0.c0 AS TEXT))OR(((t0.c0)&(t0.c0)))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE CAST(vt1.c0 AS NUMERIC)  WHEN t0.c2 COLLATE NOCASE THEN ((t0.c0)<=(t0.c1)) ELSE (('P!')IS NOT(t0.c1)) END) ORDER BY ((CAST(t0.c0 AS TEXT))OR(((t0.c0)&(t0.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt0.c0)))<=((vt1.c0 IN ()))) WHERE ((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)|(vt1.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt1.c0 AS INTEGER), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)OR(x'dd9b')))) DESC  NULLS FIRST, ((((('j4')) NOT BETWEEN ((NULL)) AND ((1.811745275E9))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)|(vt1.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt1.c0 AS INTEGER), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt0.c0)))<=((vt1.c0 IN ()))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)OR(x'dd9b')))) DESC  NULLS FIRST, ((((('j4')) NOT BETWEEN ((NULL)) AND ((1.811745275E9))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt0.c0)))<=((vt1.c0 IN ()))) WHERE ((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)|(vt1.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt1.c0 AS INTEGER), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)OR(x'dd9b')))) DESC  NULLS FIRST, ((((('j4')) NOT BETWEEN ((NULL)) AND ((1.811745275E9))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)|(vt1.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt1.c0 AS INTEGER), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt0.c0)))<=((vt1.c0 IN ()))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)OR(x'dd9b')))) DESC  NULLS FIRST, ((((('j4')) NOT BETWEEN ((NULL)) AND ((1.811745275E9))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN vt1 ON (((NOT (vt0.c0)))<=((vt1.c0 IN ()))) WHERE ((((vt0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt1.c0)>>(vt1.c0)), CAST(vt0.c0 AS NUMERIC), ((vt1.c0)|(vt1.c0)))) AND ((vt0.c0 COLLATE BINARY, CAST(vt1.c0 AS INTEGER), ((vt0.c0)GLOB(vt0.c0)))))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) BETWEEN (CAST(vt1.c0 AS INTEGER)) AND (((vt1.c0)OR(x'dd9b')))) DESC  NULLS FIRST, ((((('j4')) NOT BETWEEN ((NULL)) AND ((1.811745275E9))))AND(vt1.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, t2, rt0 WHERE ((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))))) ORDER BY ((rt0.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt1, t0, t2, rt0 ORDER BY ((rt0.c0) IS FALSE) DESC);
SELECT COUNT(*) FROM vt1, t0, t2, rt0 WHERE ((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))))) ORDER BY ((rt0.c0) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))))) IS TRUE)  as count FROM vt1, t0, t2, rt0 ORDER BY ((rt0.c0) IS FALSE) DESC);
SELECT COUNT(*) FROM vt1, t0, t2, rt0 WHERE ((vt1.c0 IN (((((vt1.c0)OR(vt1.c0)))OR(rt0.c2))))) ORDER BY ((rt0.c0) IS FALSE) DESC;
SELECT COUNT(*) FROM t2 WHERE (((((t2.c2)IS(t2.c1))) NOT BETWEEN (((t2.c1)&(t2.c2))) AND (((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)IS(t2.c1))) NOT BETWEEN (((t2.c1)&(t2.c2))) AND (((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c1))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c2)IS(t2.c1))) NOT BETWEEN (((t2.c1)&(t2.c2))) AND (((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)IS(t2.c1))) NOT BETWEEN (((t2.c1)&(t2.c2))) AND (((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c1))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c2)IS(t2.c1))) NOT BETWEEN (((t2.c1)&(t2.c2))) AND (((t2.c2) NOT BETWEEN (t2.c0) AND (t2.c1)))));
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((t0.c1 IN (rt0.c0)) IN ()) RIGHT OUTER JOIN t2 ON (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END IN ((NULL IN ()), ((rt0.c2)||(rt0.c0)), ((rt0.c2)<>(t2.c2)))) WHERE (t0.c1) ORDER BY (((UNLIKELY(rt0.c0), ((0.5080177898674153) BETWEEN (rt0.c0) AND (t2.c2)), (rt0.c3 IN ())))>=((0.008732679513037467, rt0.c2 COLLATE BINARY, (t2.c1 IN ()))))  NULLS LAST, (((t2.c2)) BETWEEN (((- (rt0.c0)))) AND ((x''))) ASC  NULLS FIRST, CASE WHEN t0.c2 THEN NULL ELSE ((t2.c2)==(t0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((t0.c1 IN (rt0.c0)) IN ()) RIGHT OUTER JOIN t2 ON (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END IN ((NULL IN ()), ((rt0.c2)||(rt0.c0)), ((rt0.c2)!=(t2.c2)))) ORDER BY (((UNLIKELY(rt0.c0), ((0.5080177898674153) BETWEEN (rt0.c0) AND (t2.c2)), (rt0.c3 IN ())))>=((0.008732679513037467, rt0.c2 COLLATE BINARY, (t2.c1 IN ()))))  NULLS LAST, (((t2.c2)) BETWEEN (((- (rt0.c0)))) AND ((x''))) ASC  NULLS FIRST, CASE WHEN t0.c2 THEN NULL ELSE ((t2.c2)==(t0.c2)) END DESC);
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((t0.c1 IN (rt0.c0)) IN ()) RIGHT OUTER JOIN t2 ON (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END IN ((NULL IN ()), ((rt0.c2)||(rt0.c0)), ((rt0.c2)<>(t2.c2)))) WHERE (t0.c1) ORDER BY (((UNLIKELY(rt0.c0), ((0.5080177898674153) BETWEEN (rt0.c0) AND (t2.c2)), (rt0.c3 IN ())))>=((0.008732679513037467, rt0.c2 COLLATE BINARY, (t2.c1 IN ()))))  NULLS LAST, (((t2.c2)) BETWEEN (((- (rt0.c0)))) AND ((x''))) ASC  NULLS FIRST, CASE WHEN t0.c2 THEN NULL ELSE ((t2.c2)==(t0.c2)) END DESC;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((t0.c1 IN (rt0.c0)) IN ()) RIGHT OUTER JOIN t2 ON (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END IN ((NULL IN ()), ((rt0.c2)||(rt0.c0)), ((rt0.c2)!=(t2.c2)))) ORDER BY (((UNLIKELY(rt0.c0), ((0.5080177898674153) BETWEEN (rt0.c0) AND (t2.c2)), (rt0.c3 IN ())))>=((0.008732679513037467, rt0.c2 COLLATE BINARY, (t2.c1 IN ()))))  NULLS LAST, (((t2.c2)) BETWEEN (((- (rt0.c0)))) AND ((x''))) ASC  NULLS FIRST, CASE WHEN t0.c2 THEN NULL ELSE ((t2.c2)==(t0.c2)) END DESC);
SELECT * FROM vt1, rt0 LEFT OUTER JOIN t0 ON ((t0.c1 IN (rt0.c0)) IN ()) RIGHT OUTER JOIN t2 ON (CASE t0.c0  WHEN rt0.c3 THEN rt0.c1 END IN ((NULL IN ()), ((rt0.c2)||(rt0.c0)), ((rt0.c2)<>(t2.c2)))) WHERE (t0.c1) ORDER BY (((UNLIKELY(rt0.c0), ((0.5080177898674153) BETWEEN (rt0.c0) AND (t2.c2)), (rt0.c3 IN ())))>=((0.008732679513037467, rt0.c2 COLLATE BINARY, (t2.c1 IN ()))))  NULLS LAST, (((t2.c2)) BETWEEN (((- (rt0.c0)))) AND ((x''))) ASC  NULLS FIRST, CASE WHEN t0.c2 THEN NULL ELSE ((t2.c2)==(t0.c2)) END DESC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))*(((vt1.c0)IS NOT(rt0.c2)))) FULL OUTER JOIN vt1 ON ((((t0.c1) NOTNULL))-(CAST(rt0.c1 AS TEXT))) INNER JOIN rt0 ON (((t0.c1)%(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(t2.c0)))OR(t2.c0)))OR(rt0.c2))) BETWEEN (((rt0.c2) NOT NULL)) AND (((((1.353339662E9)OR(vt1.c0)))AND(0.7165231153046899)))) WHERE (x'21c32237');
SELECT SUM(count) FROM (SELECT ((x'21c32237') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))*(((vt1.c0)IS NOT(rt0.c2)))) FULL OUTER JOIN vt1 ON ((((t0.c1) NOTNULL))-(CAST(rt0.c1 AS TEXT))) INNER JOIN rt0 ON (((t0.c1)%(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(t2.c0)))OR(t2.c0)))OR(rt0.c2))) BETWEEN (((rt0.c2) NOT NULL)) AND (((((1.353339662E9)OR(vt1.c0)))AND(0.7165231153046899)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))*(((vt1.c0)IS NOT(rt0.c2)))) FULL OUTER JOIN vt1 ON ((((t0.c1) NOTNULL))-(CAST(rt0.c1 AS TEXT))) INNER JOIN rt0 ON (((t0.c1)%(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(t2.c0)))OR(t2.c0)))OR(rt0.c2))) BETWEEN (((rt0.c2) NOT NULL)) AND (((((1.353339662E9)OR(vt1.c0)))AND(0.7165231153046899)))) WHERE (x'21c32237');
SELECT SUM(count) FROM (SELECT ((x'21c32237') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))*(((vt1.c0)IS NOT(rt0.c2)))) FULL OUTER JOIN vt1 ON ((((t0.c1) NOTNULL))-(CAST(rt0.c1 AS TEXT))) INNER JOIN rt0 ON (((t0.c1)%(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(t2.c0)))OR(t2.c0)))OR(rt0.c2))) BETWEEN (((rt0.c2) NOT NULL)) AND (((((1.353339662E9)OR(vt1.c0)))AND(0.7165231153046899)))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON ((CAST(NULL AS INTEGER))*(((vt1.c0)IS NOT(rt0.c2)))) FULL OUTER JOIN vt1 ON ((((t0.c1) NOTNULL))-(CAST(rt0.c1 AS TEXT))) INNER JOIN rt0 ON (((t0.c1)%(vt0.c0)) IN ()) CROSS JOIN t2 ON ((((((((((rt0.c0)AND(rt0.c1)))AND(t2.c0)))OR(t2.c0)))OR(rt0.c2))) BETWEEN (((rt0.c2) NOT NULL)) AND (((((1.353339662E9)OR(vt1.c0)))AND(0.7165231153046899)))) WHERE (x'21c32237');
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN rt0.c2 THEN ((rt0.c1)IS NOT(rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN 0x4cc63819 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN rt0.c2 THEN ((rt0.c1)IS NOT(rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN 0X4cc63819 END END) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN rt0.c2 THEN ((rt0.c1)IS NOT(rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN 0x4cc63819 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS TEXT)  WHEN rt0.c2 THEN ((rt0.c1)IS NOT(rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN 0X4cc63819 END END) IS TRUE)  as count FROM vt0, t0, vt1, rt0);
SELECT COUNT(*) FROM vt0, t0, vt1, rt0 WHERE (CASE CAST(vt0.c0 AS TEXT)  WHEN rt0.c2 THEN ((rt0.c1)IS NOT(rt0.c2)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN 0x4cc63819 END END);
SELECT * FROM vt0, rt0, t0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))/(((t0.c0)>=(t2.c0)))) LEFT OUTER JOIN t2 ON ((CASE WHEN rt0.c1 THEN t2.c1 ELSE rt0.c3 END) BETWEEN (((((vt1.c0)OR(t0.c2)))AND(vt0.c0))) AND (((t2.c1) IS TRUE))) WHERE ((((('')OR(TRIM(DISTINCT t2.c1, t2.c2))))AND(((t0.c2)-(vt0.c0))))) ORDER BY ((481604323) NOT BETWEEN (((t2.c2)||(t0.c0))) AND ((t0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(TRIM(DISTINCT t2.c1, t2.c2))))AND(((t0.c2)-(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))/(((t0.c0)>=(t2.c0)))) LEFT OUTER JOIN t2 ON ((CASE WHEN rt0.c1 THEN t2.c1 ELSE rt0.c3 END) BETWEEN (((((vt1.c0)OR(t0.c2)))AND(vt0.c0))) AND (((t2.c1) IS TRUE))) ORDER BY ((481604323) NOT BETWEEN (((t2.c2)||(t0.c0))) AND ((t0.c2 IN ()))) DESC);
SELECT * FROM vt0, rt0, t0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))/(((t0.c0)>=(t2.c0)))) LEFT OUTER JOIN t2 ON ((CASE WHEN rt0.c1 THEN t2.c1 ELSE rt0.c3 END) BETWEEN (((((vt1.c0)OR(t0.c2)))AND(vt0.c0))) AND (((t2.c1) IS TRUE))) WHERE ((((('')OR(TRIM(DISTINCT t2.c1, t2.c2))))AND(((t0.c2)-(vt0.c0))))) ORDER BY ((481604323) NOT BETWEEN (((t2.c2)||(t0.c0))) AND ((t0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((('')OR(TRIM(DISTINCT t2.c1, t2.c2))))AND(((t0.c2)-(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))/(((t0.c0)>=(t2.c0)))) LEFT OUTER JOIN t2 ON ((CASE WHEN rt0.c1 THEN t2.c1 ELSE rt0.c3 END) BETWEEN (((((vt1.c0)OR(t0.c2)))AND(vt0.c0))) AND (((t2.c1) IS TRUE))) ORDER BY ((481604323) NOT BETWEEN (((t2.c2)||(t0.c0))) AND ((t0.c2 IN ()))) DESC);
SELECT * FROM vt0, rt0, t0 CROSS JOIN vt1 ON ((CAST(rt0.c1 AS TEXT))/(((t0.c0)>=(t2.c0)))) LEFT OUTER JOIN t2 ON ((CASE WHEN rt0.c1 THEN t2.c1 ELSE rt0.c3 END) BETWEEN (((((vt1.c0)OR(t0.c2)))AND(vt0.c0))) AND (((t2.c1) IS TRUE))) WHERE ((((('')OR(TRIM(DISTINCT t2.c1, t2.c2))))AND(((t0.c2)-(vt0.c0))))) ORDER BY ((481604323) NOT BETWEEN (((t2.c2)||(t0.c0))) AND ((t0.c2 IN ()))) DESC;
SELECT * FROM t0 FULL OUTER JOIN vt0 ON CAST(0.4129544034617312 AS BLOB) WHERE ((IFNULL(vt0.c0, t0.c0) IN ())) ORDER BY CASE t0.c1  WHEN -1.318015751E9 THEN '1113101384' ELSE vt0.c0 END COLLATE BINARY DESC, CAST((vt0.c0 IN ()) AS BLOB), LIKELY(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((IFNULL(vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(0.4129544034617312 AS BLOB) ORDER BY CASE t0.c1  WHEN -1.318015751E9 THEN '1113101384' ELSE vt0.c0 END COLLATE BINARY DESC, CAST((vt0.c0 IN ()) AS BLOB), LIKELY(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON CAST(0.4129544034617312 AS BLOB) WHERE ((IFNULL(vt0.c0, t0.c0) IN ())) ORDER BY CASE t0.c1  WHEN -1.318015751E9 THEN '1113101384' ELSE vt0.c0 END COLLATE BINARY DESC, CAST((vt0.c0 IN ()) AS BLOB), LIKELY(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((IFNULL(vt0.c0, t0.c0) IN ())) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON CAST(0.4129544034617312 AS BLOB) ORDER BY CASE t0.c1  WHEN -1.318015751E9 THEN '1113101384' ELSE vt0.c0 END COLLATE BINARY DESC, CAST((vt0.c0 IN ()) AS BLOB), LIKELY(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT * FROM t0 FULL OUTER JOIN vt0 ON CAST(0.4129544034617312 AS BLOB) WHERE ((IFNULL(vt0.c0, t0.c0) IN ())) ORDER BY CASE t0.c1  WHEN -1.318015751E9 THEN '1113101384' ELSE vt0.c0 END COLLATE BINARY DESC, CAST((vt0.c0 IN ()) AS BLOB), LIKELY(DISTINCT t0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1, t2 WHERE ((('2)') ISNULL));
SELECT SUM(count) FROM (SELECT (((('2)') ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0, vt1, t2);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1, t2 WHERE ((('2)') ISNULL));
SELECT SUM(count) FROM (SELECT (((('2)') ISNULL)) IS TRUE)  as count FROM vt0, rt0, t0, vt1, t2);
SELECT ALL COUNT(*) FROM vt0, rt0, t0, vt1, t2 WHERE ((('2)') ISNULL));
SELECT COUNT(*) FROM rt0, t2, vt1 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (t2.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (t2.c1)) IN ())) IS TRUE)  as count FROM rt0, t2, vt1);
SELECT COUNT(*) FROM rt0, t2, vt1 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (t2.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (t2.c1)) IN ())) IS TRUE)  as count FROM rt0, t2, vt1);
SELECT COUNT(*) FROM rt0, t2, vt1 WHERE ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (t2.c1)) IN ()));
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) ORDER BY x'9ea0', (((vt0.c0 IN (0.7744214617118621, vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY x'9ea0', (((vt0.c0 IN (0.7744214617118621, vt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) ORDER BY x'9ea0', (((vt0.c0 IN (0.7744214617118621, vt0.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY x'9ea0', (((vt0.c0 IN (0.7744214617118621, vt0.c0))) NOTNULL) ASC);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS REAL)) ORDER BY x'9ea0', (((vt0.c0 IN (0.7744214617118621, vt0.c0))) NOTNULL) ASC;
SELECT ALL * FROM vt0, rt0 WHERE (CAST((- (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((- (rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST((- (rt0.c2)) AS TEXT));
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) NOTNULL)) ORDER BY t0.c2, ((t0.c1)<('(w')), (((t0.c0, t0.c1, t0.c2)) BETWEEN (((t0.c2 IN (t0.c0, t0.c1)), ((t0.c0)*(t0.c1)), (t0.c2 IN ()))) AND ((((((t0.c2)OR(t0.c1)))AND(t0.c0)), CAST(t0.c1 AS BLOB), ((t0.c0)OR(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c2, ((t0.c1)<('(w')), (((t0.c0, t0.c1, t0.c2)) BETWEEN (((t0.c2 IN (t0.c0, t0.c1)), ((t0.c0)*(t0.c1)), (t0.c2 IN ()))) AND ((((((t0.c2)OR(t0.c1)))AND(t0.c0)), CAST(t0.c1 AS BLOB), ((t0.c0)OR(t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) NOTNULL)) ORDER BY t0.c2, ((t0.c1)<('(w')), (((t0.c0, t0.c1, t0.c2)) BETWEEN (((t0.c2 IN (t0.c0, t0.c1)), ((t0.c0)*(t0.c1)), (t0.c2 IN ()))) AND ((((((t0.c2)OR(t0.c1)))AND(t0.c0)), CAST(t0.c1 AS BLOB), ((t0.c0)OR(t0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((t0.c2) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY t0.c2, ((t0.c1)<('(w')), (((t0.c0, t0.c1, t0.c2)) BETWEEN (((t0.c2 IN (t0.c0, t0.c1)), ((t0.c0)*(t0.c1)), (t0.c2 IN ()))) AND ((((((t0.c2)OR(t0.c1)))AND(t0.c0)), CAST(t0.c1 AS BLOB), ((t0.c0)OR(t0.c0))))) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (((t0.c2) NOTNULL)) ORDER BY t0.c2, ((t0.c1)<('(w')), (((t0.c0, t0.c1, t0.c2)) BETWEEN (((t0.c2 IN (t0.c0, t0.c1)), ((t0.c0)*(t0.c1)), (t0.c2 IN ()))) AND ((((((t0.c2)OR(t0.c1)))AND(t0.c0)), CAST(t0.c1 AS BLOB), ((t0.c0)OR(t0.c0))))) DESC;
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))IS(MIN(t0.c2, '95514888')))) ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))OR(((t0.c0)>(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0)))IS(MIN(t0.c2, '95514888')))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))OR(((t0.c0)>(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))IS(MIN(t0.c2, '95514888')))) ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))OR(((t0.c0)>(t0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (t0.c0)))IS(MIN(t0.c2, '95514888')))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))OR(((t0.c0)>(t0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((t0.c0 IN (t0.c0)))IS(MIN(t0.c2, '95514888')))) ORDER BY ((((t0.c2) BETWEEN (t0.c1) AND (t0.c1)))OR(((t0.c0)>(t0.c1)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt0.c0 IN ()))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TYPEOF((vt0.c0 IN ()))) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TYPEOF((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM t2, t0, rt0 WHERE ((((((NULL)AND(rt0.c0)))OR(t2.c2)) IN (rt0.c3))) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC, (('') BETWEEN (((((t2.c0)AND('[/&')))AND(t2.c1))) AND (rt0.c0)) DESC  NULLS LAST, CASE '-5023977910511006956 1727-1892:'  WHEN ((((t2.c2)AND(t2.c2)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t2.c0 END THEN (((rt0.c0))<>((t2.c1))) WHEN ((t2.c0) BETWEEN (rt0.c1) AND ('35N?xcX!')) THEN ((rt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)AND(rt0.c0)))OR(t2.c2)) IN (rt0.c3))) IS TRUE)  as count FROM t2, t0, rt0 ORDER BY CAST(rt0.c2 AS TEXT)  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC, (('') BETWEEN (((((t2.c0)AND('[/&')))AND(t2.c1))) AND (rt0.c0)) DESC  NULLS LAST, CASE '-5023977910511006956 1727-1892:'  WHEN ((((t2.c2)AND(t2.c2)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t2.c0 END THEN (((rt0.c0))<>((t2.c1))) WHEN ((t2.c0) BETWEEN (rt0.c1) AND ('35N?xcX!')) THEN ((rt0.c1) NOT NULL) END);
SELECT ALL COUNT(*) FROM t2, t0, rt0 WHERE ((((((NULL)AND(rt0.c0)))OR(t2.c2)) IN (rt0.c3))) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC, (('') BETWEEN (((((t2.c0)AND('[/&')))AND(t2.c1))) AND (rt0.c0)) DESC  NULLS LAST, CASE '-5023977910511006956 1727-1892:'  WHEN ((((t2.c2)AND(t2.c2)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t2.c0 END THEN (((rt0.c0))<>((t2.c1))) WHEN ((t2.c0) BETWEEN (rt0.c1) AND ('35N?xcX!')) THEN ((rt0.c1) NOT NULL) END;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL)AND(rt0.c0)))OR(t2.c2)) IN (rt0.c3))) IS TRUE)  as count FROM t2, t0, rt0 ORDER BY CAST(rt0.c2 AS TEXT)  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC, (('') BETWEEN (((((t2.c0)AND('[/&')))AND(t2.c1))) AND (rt0.c0)) DESC  NULLS LAST, CASE '-5023977910511006956 1727-1892:'  WHEN ((((t2.c2)AND(t2.c2)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t2.c0 END THEN (((rt0.c0))<>((t2.c1))) WHEN ((t2.c0) BETWEEN (rt0.c1) AND ('35N?xcX!')) THEN ((rt0.c1) NOT NULL) END);
SELECT ALL COUNT(*) FROM t2, t0, rt0 WHERE ((((((NULL)AND(rt0.c0)))OR(t2.c2)) IN (rt0.c3))) ORDER BY CAST(rt0.c2 AS TEXT)  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY ASC, (('') BETWEEN (((((t2.c0)AND('[/&')))AND(t2.c1))) AND (rt0.c0)) DESC  NULLS LAST, CASE '-5023977910511006956 1727-1892:'  WHEN ((((t2.c2)AND(t2.c2)))AND(rt0.c1)) THEN CAST(rt0.c2 AS NUMERIC) WHEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE t2.c0 END THEN (((rt0.c0))<>((t2.c1))) WHEN ((t2.c0) BETWEEN (rt0.c1) AND ('35N?xcX!')) THEN ((rt0.c1) NOT NULL) END;
SELECT COUNT(*) FROM t2, t0 INNER JOIN rt0 ON json_remove((((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c1)) AND ((t2.c1, rt0.c3, rt0.c2))), ((rt0.c0)<<('')), ((rt0.c2) NOT NULL), ((t0.c0)<=(t0.c2))) RIGHT OUTER JOIN vt1 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON CASE (~ (rt0.c1))  WHEN (t2.c1 IN ()) THEN rt0.c3 WHEN TRIM(DISTINCT rt0.c3) THEN t2.c0 COLLATE RTRIM WHEN LIKELIHOOD('-1904904830', 0.5549456218603943) THEN ((t0.c0)OR(vt1.c0)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t2, t0 INNER JOIN rt0 ON json_remove((((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c1)) AND ((t2.c1, rt0.c3, rt0.c2))), ((rt0.c0)<<('')), ((rt0.c2) NOT NULL), ((t0.c0)<=(t0.c2))) RIGHT OUTER JOIN vt1 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON CASE (~ (rt0.c1))  WHEN (t2.c1 IN ()) THEN rt0.c3 WHEN TRIM(DISTINCT rt0.c3) THEN t2.c0 COLLATE RTRIM WHEN LIKELIHOOD('-1904904830', 0.5549456218603943) THEN ((t0.c0)OR(vt1.c0)) END);
SELECT COUNT(*) FROM t2, t0 INNER JOIN rt0 ON json_remove((((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c1)) AND ((t2.c1, rt0.c3, rt0.c2))), ((rt0.c0)<<('')), ((rt0.c2) NOT NULL), ((t0.c0)<=(t0.c2))) RIGHT OUTER JOIN vt1 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON CASE (~ (rt0.c1))  WHEN (t2.c1 IN ()) THEN rt0.c3 WHEN TRIM(DISTINCT rt0.c3) THEN t2.c0 COLLATE RTRIM WHEN LIKELIHOOD('-1904904830', 0.5549456218603943) THEN ((t0.c0)OR(vt1.c0)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t2, t0 INNER JOIN rt0 ON json_remove((((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c1)) AND ((t2.c1, rt0.c3, rt0.c2))), ((rt0.c0)<<('')), ((rt0.c2) NOT NULL), ((t0.c0)<=(t0.c2))) RIGHT OUTER JOIN vt1 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON CASE (~ (rt0.c1))  WHEN (t2.c1 IN ()) THEN rt0.c3 WHEN TRIM(DISTINCT rt0.c3) THEN t2.c0 COLLATE RTRIM WHEN LIKELIHOOD('-1904904830', 0.5549456218603943) THEN ((t0.c0)OR(vt1.c0)) END);
SELECT COUNT(*) FROM t2, t0 INNER JOIN rt0 ON json_remove((((t0.c0, t2.c0, t0.c2)) NOT BETWEEN ((rt0.c0, t0.c2, t0.c1)) AND ((t2.c1, rt0.c3, rt0.c2))), ((rt0.c0)<<('')), ((rt0.c2) NOT NULL), ((t0.c0)<=(t0.c2))) RIGHT OUTER JOIN vt1 ON ((((t0.c1) IS TRUE)) ISNULL) CROSS JOIN vt0 ON CASE (~ (rt0.c1))  WHEN (t2.c1 IN ()) THEN rt0.c3 WHEN TRIM(DISTINCT rt0.c3) THEN t2.c0 COLLATE RTRIM WHEN LIKELIHOOD('-1904904830', 0.5549456218603943) THEN ((t0.c0)OR(vt1.c0)) END WHERE (NULL);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((t0.c1)*(t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE rt0.c0 END) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)*(t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE rt0.c0 END) AND (t0.c0))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((t0.c1)*(t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE rt0.c0 END) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)*(t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE rt0.c0 END) AND (t0.c0))) IS TRUE)  as count FROM rt0, vt0, t0);
SELECT ALL * FROM rt0, vt0, t0 WHERE (((((t0.c1)*(t0.c2))) BETWEEN (CASE t0.c0  WHEN t0.c1 THEN t0.c1 ELSE rt0.c0 END) AND (t0.c0)));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN t2 ON t2.c2 WHERE ((NOT (CAST(x'' AS INTEGER)))) ORDER BY UPPER(((vt1.c0)|('134963984'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t2 ON t2.c2 ORDER BY UPPER(((vt1.c0)|('134963984'))) ASC);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN t2 ON t2.c2 WHERE ((NOT (CAST(x'' AS INTEGER)))) ORDER BY UPPER(((vt1.c0)|('134963984'))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(x'' AS INTEGER)))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t2 ON t2.c2 ORDER BY UPPER(((vt1.c0)|('134963984'))) ASC);
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN t2 ON t2.c2 WHERE ((NOT (CAST(x'' AS INTEGER)))) ORDER BY UPPER(((vt1.c0)|('134963984'))) ASC;
SELECT ALL * FROM t2 RIGHT OUTER JOIN t0 ON ((t0.c1)%(t0.c1 COLLATE RTRIM)) FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3, rt0.c2, t2.c2))>=((x'81d0', t2.c0, rt0.c2))) THEN (((t2.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN CASE WHEN rt0.c3 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c2 END THEN ((x'')GLOB(rt0.c0)) END CROSS JOIN vt1 ON CASE t0.c2 COLLATE NOCASE  WHEN vt1.c0 THEN CAST(t2.c2 AS NUMERIC) ELSE rt0.c2 END INNER JOIN vt0 ON ((((('-52445266') ISNULL)))=((((rt0.c1)/(rt0.c0))))) WHERE (((UPPER(DISTINCT vt1.c0)) ISNULL)) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(UPPER(NULL) AS BLOB) DESC  NULLS FIRST, CAST(t2.c0 AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt1.c0)) ISNULL)) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON ((t0.c1)%(t0.c1 COLLATE RTRIM)) FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3, rt0.c2, t2.c2))>=((x'81d0', t2.c0, rt0.c2))) THEN (((t2.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN CASE WHEN rt0.c3 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c2 END THEN ((x'')GLOB(rt0.c0)) END CROSS JOIN vt1 ON CASE t0.c2 COLLATE NOCASE  WHEN vt1.c0 THEN CAST(t2.c2 AS NUMERIC) ELSE rt0.c2 END INNER JOIN vt0 ON ((((('-52445266') ISNULL)))=((((rt0.c1)/(rt0.c0))))) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(UPPER(NULL) AS BLOB) DESC  NULLS FIRST, CAST(t2.c0 AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM t2 RIGHT OUTER JOIN t0 ON ((t0.c1)%(t0.c1 COLLATE RTRIM)) FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3, rt0.c2, t2.c2))>=((x'81d0', t2.c0, rt0.c2))) THEN (((t2.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN CASE WHEN rt0.c3 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c2 END THEN ((x'')GLOB(rt0.c0)) END CROSS JOIN vt1 ON CASE t0.c2 COLLATE NOCASE  WHEN vt1.c0 THEN CAST(t2.c2 AS NUMERIC) ELSE rt0.c2 END INNER JOIN vt0 ON ((((('-52445266') ISNULL)))=((((rt0.c1)/(rt0.c0))))) WHERE (((UPPER(DISTINCT vt1.c0)) ISNULL)) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(UPPER(NULL) AS BLOB) DESC  NULLS FIRST, CAST(t2.c0 AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT vt1.c0)) ISNULL)) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN t0 ON ((t0.c1)%(t0.c1 COLLATE RTRIM)) FULL OUTER JOIN rt0 ON CASE WHEN (((rt0.c3, rt0.c2, t2.c2))>=((x'81d0', t2.c0, rt0.c2))) THEN (((t2.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1) NOT NULL) WHEN CASE WHEN rt0.c3 THEN vt1.c0 WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c2 END THEN ((x'')GLOB(rt0.c0)) END CROSS JOIN vt1 ON CASE t0.c2 COLLATE NOCASE  WHEN vt1.c0 THEN CAST(t2.c2 AS NUMERIC) ELSE rt0.c2 END INNER JOIN vt0 ON ((((('-52445266') ISNULL)))=((((rt0.c1)/(rt0.c0))))) ORDER BY rt0.c2 ASC  NULLS FIRST, CAST(UPPER(NULL) AS BLOB) DESC  NULLS FIRST, CAST(t2.c0 AS BLOB) DESC  NULLS FIRST);
SELECT * FROM rt0 INNER JOIN vt1 ON -916868422 INNER JOIN t2 ON ((((((((((rt0.c1)<(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(CAST(t2.c1 AS INTEGER))))AND(((vt0.c0)&(vt0.c0)))))OR((((((((((((('')OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(t2.c0)))AND(rt0.c1)))) FULL OUTER JOIN vt0 ON ((('rq ''2T8h'))==((((rt0.c2) NOT NULL)))) WHERE (((((((t2.c2)OR(vt0.c0)))AND(rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND ((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)OR(vt0.c0)))AND(rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND ((+ (t2.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON -916868422 INNER JOIN t2 ON ((((((((((rt0.c1)<(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(CAST(t2.c1 AS INTEGER))))AND(((vt0.c0)&(vt0.c0)))))OR((((((((((((('')OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(t2.c0)))AND(rt0.c1)))) FULL OUTER JOIN vt0 ON ((('rq ''2T8h'))=((((rt0.c2) NOT NULL)))));
SELECT * FROM rt0 INNER JOIN vt1 ON -916868422 INNER JOIN t2 ON ((((((((((rt0.c1)<(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(CAST(t2.c1 AS INTEGER))))AND(((vt0.c0)&(vt0.c0)))))OR((((((((((((('')OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(t2.c0)))AND(rt0.c1)))) FULL OUTER JOIN vt0 ON ((('rq ''2T8h'))==((((rt0.c2) NOT NULL)))) WHERE (((((((t2.c2)OR(vt0.c0)))AND(rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND ((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)OR(vt0.c0)))AND(rt0.c0))) BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND ((+ (t2.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN vt1 ON -916868422 INNER JOIN t2 ON ((((((((((rt0.c1)<(rt0.c1)))AND(CAST(rt0.c3 AS NUMERIC))))AND(CAST(t2.c1 AS INTEGER))))AND(((vt0.c0)&(vt0.c0)))))OR((((((((((((('')OR(vt0.c0)))OR(vt1.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(t2.c0)))AND(rt0.c1)))) FULL OUTER JOIN vt0 ON ((('rq ''2T8h'))=((((rt0.c2) NOT NULL)))));
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t2 ON ((0.028991077966862955) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c3 COLLATE BINARY)) WHERE (CAST(((t2.c0) ISNULL) AS BLOB)) ORDER BY COALESCE(((t2.c2)OR(t2.c0)), (+ (t2.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t2 ON ((0.028991077966862955) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c3 COLLATE BINARY)) ORDER BY COALESCE(((t2.c2)OR(t2.c0)), (+ (t2.c2))) ASC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t2 ON ((0.028991077966862955) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c3 COLLATE BINARY)) WHERE (CAST(((t2.c0) ISNULL) AS BLOB)) ORDER BY COALESCE(((t2.c2)OR(t2.c0)), (+ (t2.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c0) ISNULL) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 FULL OUTER JOIN t2 ON ((0.028991077966862955) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c3 COLLATE BINARY)) ORDER BY COALESCE(((t2.c2)OR(t2.c0)), (+ (t2.c2))) ASC);
SELECT ALL * FROM rt0, vt0 FULL OUTER JOIN t2 ON ((0.028991077966862955) NOT BETWEEN ((rt0.c0 IN ())) AND (rt0.c3 COLLATE BINARY)) WHERE (CAST(((t2.c0) ISNULL) AS BLOB)) ORDER BY COALESCE(((t2.c2)OR(t2.c0)), (+ (t2.c2))) ASC;
SELECT ALL COUNT(*) FROM vt1, rt0, t0, t2 INNER JOIN vt0 ON MIN((+ (t2.c1)), ((vt1.c0) IS TRUE), ((t2.c2)LIKE(rt0.c2)), (((t0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((t2.c1, t0.c0, rt0.c3, rt0.c3, t2.c1)) AND ((t2.c2, rt0.c0, t2.c0, vt1.c0, t0.c1)))) WHERE ((((rt0.c2) BETWEEN (t2.c0) AND (t0.c1)) IN (((t2.c2)OR(vt0.c0))))) ORDER BY ((((t0.c1)<<(t2.c0)))=(t2.c0 COLLATE NOCASE))  NULLS FIRST, t0.c0 DESC, ((((x'') NOTNULL))/((~ (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t2.c0) AND (t0.c1)) IN (((t2.c2)OR(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0, t2 INNER JOIN vt0 ON MIN((+ (t2.c1)), ((vt1.c0) IS TRUE), ((t2.c2)LIKE(rt0.c2)), (((t0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((t2.c1, t0.c0, rt0.c3, rt0.c3, t2.c1)) AND ((t2.c2, rt0.c0, t2.c0, vt1.c0, t0.c1)))) ORDER BY ((((t0.c1)<<(t2.c0)))=(t2.c0 COLLATE NOCASE))  NULLS FIRST, t0.c0 DESC, ((((x'') NOTNULL))/((~ (t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, t2 INNER JOIN vt0 ON MIN((+ (t2.c1)), ((vt1.c0) IS TRUE), ((t2.c2)LIKE(rt0.c2)), (((t0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((t2.c1, t0.c0, rt0.c3, rt0.c3, t2.c1)) AND ((t2.c2, rt0.c0, t2.c0, vt1.c0, t0.c1)))) WHERE ((((rt0.c2) BETWEEN (t2.c0) AND (t0.c1)) IN (((t2.c2)OR(vt0.c0))))) ORDER BY ((((t0.c1)<<(t2.c0)))=(t2.c0 COLLATE NOCASE))  NULLS FIRST, t0.c0 DESC, ((((x'') NOTNULL))/((~ (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (t2.c0) AND (t0.c1)) IN (((t2.c2)OR(vt0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0, t2 INNER JOIN vt0 ON MIN((+ (t2.c1)), ((vt1.c0) IS TRUE), ((t2.c2)LIKE(rt0.c2)), (((t0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((t2.c1, t0.c0, rt0.c3, rt0.c3, t2.c1)) AND ((t2.c2, rt0.c0, t2.c0, vt1.c0, t0.c1)))) ORDER BY ((((t0.c1)<<(t2.c0)))=(t2.c0 COLLATE NOCASE))  NULLS FIRST, t0.c0 DESC, ((((x'') NOTNULL))/((~ (t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, t0, t2 INNER JOIN vt0 ON MIN((+ (t2.c1)), ((vt1.c0) IS TRUE), ((t2.c2)LIKE(rt0.c2)), (((t0.c2, rt0.c1, rt0.c3, rt0.c3, rt0.c3)) BETWEEN ((t2.c1, t0.c0, rt0.c3, rt0.c3, t2.c1)) AND ((t2.c2, rt0.c0, t2.c0, vt1.c0, t0.c1)))) WHERE ((((rt0.c2) BETWEEN (t2.c0) AND (t0.c1)) IN (((t2.c2)OR(vt0.c0))))) ORDER BY ((((t0.c1)<<(t2.c0)))=(t2.c0 COLLATE NOCASE))  NULLS FIRST, t0.c0 DESC, ((((x'') NOTNULL))/((~ (t0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt1, t2, vt0 INNER JOIN t0 ON 0.07298046492663435 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE WHERE (((((((vt1.c0) BETWEEN (t2.c2) AND (rt0.c1)))OR((~ (NULL)))))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (t2.c2) AND (rt0.c1)))OR((~ (NULL)))))OR(t0.c1))) IS TRUE)  as count FROM rt0, vt1, t2, vt0 INNER JOIN t0 ON 0.07298046492663435 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1, t2, vt0 INNER JOIN t0 ON 0.07298046492663435 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE WHERE (((((((vt1.c0) BETWEEN (t2.c2) AND (rt0.c1)))OR((~ (NULL)))))OR(t0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt1.c0) BETWEEN (t2.c2) AND (rt0.c1)))OR((~ (NULL)))))OR(t0.c1))) IS TRUE)  as count FROM rt0, vt1, t2, vt0 INNER JOIN t0 ON 0.07298046492663435 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt1, t2, vt0 INNER JOIN t0 ON 0.07298046492663435 COLLATE RTRIM COLLATE RTRIM COLLATE NOCASE WHERE (((((((vt1.c0) BETWEEN (t2.c2) AND (rt0.c1)))OR((~ (NULL)))))OR(t0.c1)));
SELECT COUNT(*) FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c2) AND (t2.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c2) AND (t2.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((((t2.c0) BETWEEN (t2.c2) AND (t2.c2))) IS FALSE));
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (~ (vt1.c0)), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (vt1.c0)), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (~ (vt1.c0)), (vt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (~ (vt1.c0)), (vt1.c0 IN ()))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (TRIM(DISTINCT (~ (vt1.c0)), (vt1.c0 IN ())));
SELECT ALL * FROM rt0, t0, vt0 WHERE ((~ (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(0X5eca8dab)))AND(t0.c2))))) ORDER BY CAST((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND (('-899930982'))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(0x5eca8dab)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND (('-899930982'))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((~ (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(0X5eca8dab)))AND(t0.c2))))) ORDER BY CAST((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND (('-899930982'))) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(0x5eca8dab)))AND(t0.c2))))) IS TRUE)  as count FROM rt0, t0, vt0 ORDER BY CAST((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND (('-899930982'))) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM rt0, t0, vt0 WHERE ((~ (((((((((rt0.c0)OR(vt0.c0)))OR(rt0.c2)))AND(0X5eca8dab)))AND(t0.c2))))) ORDER BY CAST((((t0.c0)) NOT BETWEEN ((rt0.c3)) AND (('-899930982'))) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t2 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0, t2);
SELECT ALL COUNT(*) FROM rt0, t2 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0, t2);
SELECT ALL COUNT(*) FROM rt0, t2 WHERE (CAST(((rt0.c1) NOTNULL) AS TEXT));
SELECT ALL COUNT(*) FROM t2, rt0, t0, vt0, vt1 WHERE (((((json_remove(rt0.c2, 'x,xu', t2.c0, '-782722837'))AND(json_insert(rt0.c1, t2.c0, 2.036948492E9))))OR(((((t0.c1)AND(0Xffffffffaeb39f9e)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_remove(rt0.c2, 'x,xu', t2.c0, '-782722837'))AND(json_insert(rt0.c1, t2.c0, 2.036948492E9))))OR(((((t0.c1)AND(0xffffffffaeb39f9e)))AND(t0.c2))))) IS TRUE)  as count FROM t2, rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t2, rt0, t0, vt0, vt1 WHERE (((((json_remove(rt0.c2, 'x,xu', t2.c0, '-782722837'))AND(json_insert(rt0.c1, t2.c0, 2.036948492E9))))OR(((((t0.c1)AND(0Xffffffffaeb39f9e)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((json_remove(rt0.c2, 'x,xu', t2.c0, '-782722837'))AND(json_insert(rt0.c1, t2.c0, 2.036948492E9))))OR(((((t0.c1)AND(0xffffffffaeb39f9e)))AND(t0.c2))))) IS TRUE)  as count FROM t2, rt0, t0, vt0, vt1);
SELECT ALL COUNT(*) FROM t2 WHERE (5.28713828E8 COLLATE RTRIM) ORDER BY CAST((t2.c1 IN ()) AS TEXT)  NULLS LAST, NULLIF(DISTINCT '927396975', ('*um' IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((5.28713828E8 COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY CAST((t2.c1 IN ()) AS TEXT)  NULLS LAST, NULLIF(DISTINCT '927396975', ('*um' IN ())) ASC);
SELECT ALL COUNT(*) FROM t2 WHERE (5.28713828E8 COLLATE RTRIM) ORDER BY CAST((t2.c1 IN ()) AS TEXT)  NULLS LAST, NULLIF(DISTINCT '927396975', ('*um' IN ())) ASC;
SELECT SUM(count) FROM (SELECT ALL ((5.28713828E8 COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY CAST((t2.c1 IN ()) AS TEXT)  NULLS LAST, NULLIF(DISTINCT '927396975', ('*um' IN ())) ASC);
SELECT ALL COUNT(*) FROM t2 WHERE (5.28713828E8 COLLATE RTRIM) ORDER BY CAST((t2.c1 IN ()) AS TEXT)  NULLS LAST, NULLIF(DISTINCT '927396975', ('*um' IN ())) ASC;
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (- (((t2.c0) NOT BETWEEN (rt0.c0) AND (0.041554518067984936)))) CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (CAST(t2.c2 AS INTEGER)) AND (((rt0.c0) IS FALSE))) LEFT OUTER JOIN t2 ON ((t2.c2)>=(vt1.c0)) COLLATE RTRIM WHERE (LTRIM((~ (rt0.c3)), ((rt0.c3)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LTRIM((~ (rt0.c3)), ((rt0.c3)<(rt0.c1)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (- (((t2.c0) NOT BETWEEN (rt0.c0) AND (0.041554518067984936)))) CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (CAST(t2.c2 AS INTEGER)) AND (((rt0.c0) IS FALSE))) LEFT OUTER JOIN t2 ON ((t2.c2)>=(vt1.c0)) COLLATE RTRIM);
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (- (((t2.c0) NOT BETWEEN (rt0.c0) AND (0.041554518067984936)))) CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (CAST(t2.c2 AS INTEGER)) AND (((rt0.c0) IS FALSE))) LEFT OUTER JOIN t2 ON ((t2.c2)>=(vt1.c0)) COLLATE RTRIM WHERE (LTRIM((~ (rt0.c3)), ((rt0.c3)<(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((LTRIM((~ (rt0.c3)), ((rt0.c3)<(rt0.c1)))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (- (((t2.c0) NOT BETWEEN (rt0.c0) AND (0.041554518067984936)))) CROSS JOIN rt0 ON ((((rt0.c2) IS FALSE)) BETWEEN (CAST(t2.c2 AS INTEGER)) AND (((rt0.c0) IS FALSE))) LEFT OUTER JOIN t2 ON ((t2.c2)>=(vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))%((((rt0.c2))>=((t0.c1))))) RIGHT OUTER JOIN rt0 ON '1764724944' WHERE (t0.c2) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(t0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))%((((rt0.c2))>=((t0.c1))))) RIGHT OUTER JOIN rt0 ON '1764724944' ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(t0.c2))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, vt1 INNER JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))%((((rt0.c2))>=((t0.c1))))) RIGHT OUTER JOIN rt0 ON '1764724944' WHERE (t0.c2) ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(t0.c2))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, vt1 INNER JOIN t0 ON ((((t0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))%((((rt0.c2))>=((t0.c1))))) RIGHT OUTER JOIN rt0 ON '1764724944' ORDER BY ((((((rt0.c0)AND(vt0.c0)))OR(t0.c2))) IS FALSE) ASC);
SELECT ALL COUNT(*) FROM vt0, t2, vt1 WHERE ((UPPER(vt1.c0) IN ())) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UPPER(vt1.c0) IN ())) IS TRUE)  as count FROM vt0, t2, vt1 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, vt1 WHERE ((UPPER(vt1.c0) IN ())) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((UPPER(vt1.c0) IN ())) IS TRUE)  as count FROM vt0, t2, vt1 ORDER BY NULL ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, vt1 WHERE ((UPPER(vt1.c0) IN ())) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t2, rt0 WHERE ((((((vt0.c0) BETWEEN (t2.c1) AND (t2.c0))))<=((((t2.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((rt0.c3)AND(t2.c2)))OR(rt0.c3))))  NULLS FIRST, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (t2.c1) AND (t2.c0))))<=((((t2.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t2, rt0 ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((rt0.c3)AND(t2.c2)))OR(rt0.c3))))  NULLS FIRST, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t2, rt0 WHERE ((((((vt0.c0) BETWEEN (t2.c1) AND (t2.c0))))<=((((t2.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((rt0.c3)AND(t2.c2)))OR(rt0.c3))))  NULLS FIRST, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) BETWEEN (t2.c1) AND (t2.c0))))<=((((t2.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, t2, rt0 ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((rt0.c3)AND(t2.c2)))OR(rt0.c3))))  NULLS FIRST, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t2, rt0 WHERE ((((((vt0.c0) BETWEEN (t2.c1) AND (t2.c0))))<=((((t2.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))))) ORDER BY (((vt1.c0 IN (vt1.c0))) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((((rt0.c3)AND(t2.c2)))OR(rt0.c3))))  NULLS FIRST, (NOT (vt0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CASE WHEN (t0.c2 IN ()) THEN CAST(t2.c1 AS BLOB) WHEN 'QZJUM#' THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t2.c1))) WHEN 0.8775138748129881 THEN (((t2.c0, t2.c1, t2.c1)) BETWEEN ((t0.c0, t0.c2, t2.c0)) AND (('', t0.c2, t0.c2))) ELSE (vt0.c0 IN ()) END) ORDER BY (((((0.23397724410337872))>=((t0.c0)))) BETWEEN (((vt0.c0)AND(t2.c0))) AND (((t2.c0)IS(t0.c2))))  NULLS LAST, CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, t2.c0 ASC  NULLS FIRST, (((((((t2.c0, '-994832970', t2.c2)) NOT BETWEEN ((t0.c1, t0.c0, t2.c2)) AND ((t0.c0, t0.c0, t2.c0))))AND(t2.c0)))AND(CAST(t0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c2 IN ()) THEN CAST(t2.c1 AS BLOB) WHEN 'QZJUM#' THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t2.c1))) WHEN 0.8775138748129881 THEN (((t2.c0, t2.c1, t2.c1)) BETWEEN ((t0.c0, t0.c2, t2.c0)) AND (('', t0.c2, t0.c2))) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, t2 ORDER BY (((((0.23397724410337872))>=((t0.c0)))) BETWEEN (((vt0.c0)AND(t2.c0))) AND (((t2.c0)IS(t0.c2))))  NULLS LAST, CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, t2.c0 ASC  NULLS FIRST, (((((((t2.c0, '-994832970', t2.c2)) NOT BETWEEN ((t0.c1, t0.c0, t2.c2)) AND ((t0.c0, t0.c0, t2.c0))))AND(t2.c0)))AND(CAST(t0.c1 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CASE WHEN (t0.c2 IN ()) THEN CAST(t2.c1 AS BLOB) WHEN 'QZJUM#' THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t2.c1))) WHEN 0.8775138748129881 THEN (((t2.c0, t2.c1, t2.c1)) BETWEEN ((t0.c0, t0.c2, t2.c0)) AND (('', t0.c2, t0.c2))) ELSE (vt0.c0 IN ()) END) ORDER BY (((((0.23397724410337872))>=((t0.c0)))) BETWEEN (((vt0.c0)AND(t2.c0))) AND (((t2.c0)IS(t0.c2))))  NULLS LAST, CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, t2.c0 ASC  NULLS FIRST, (((((((t2.c0, '-994832970', t2.c2)) NOT BETWEEN ((t0.c1, t0.c0, t2.c2)) AND ((t0.c0, t0.c0, t2.c0))))AND(t2.c0)))AND(CAST(t0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (t0.c2 IN ()) THEN CAST(t2.c1 AS BLOB) WHEN 'QZJUM#' THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t2.c1))) WHEN 0.8775138748129881 THEN (((t2.c0, t2.c1, t2.c1)) BETWEEN ((t0.c0, t0.c2, t2.c0)) AND (('', t0.c2, t0.c2))) ELSE (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, t2 ORDER BY (((((0.23397724410337872))>=((t0.c0)))) BETWEEN (((vt0.c0)AND(t2.c0))) AND (((t2.c0)IS(t0.c2))))  NULLS LAST, CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, t2.c0 ASC  NULLS FIRST, (((((((t2.c0, '-994832970', t2.c2)) NOT BETWEEN ((t0.c1, t0.c0, t2.c2)) AND ((t0.c0, t0.c0, t2.c0))))AND(t2.c0)))AND(CAST(t0.c1 AS BLOB))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, t2 WHERE (CASE WHEN (t0.c2 IN ()) THEN CAST(t2.c1 AS BLOB) WHEN 'QZJUM#' THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t2.c1))) WHEN 0.8775138748129881 THEN (((t2.c0, t2.c1, t2.c1)) BETWEEN ((t0.c0, t0.c2, t2.c0)) AND (('', t0.c2, t0.c2))) ELSE (vt0.c0 IN ()) END) ORDER BY (((((0.23397724410337872))>=((t0.c0)))) BETWEEN (((vt0.c0)AND(t2.c0))) AND (((t2.c0)IS(t0.c2))))  NULLS LAST, CAST(t0.c0 AS TEXT) COLLATE BINARY COLLATE RTRIM DESC  NULLS LAST, t2.c0 ASC  NULLS FIRST, (((((((t2.c0, '-994832970', t2.c2)) NOT BETWEEN ((t0.c1, t0.c0, t2.c2)) AND ((t0.c0, t0.c0, t2.c0))))AND(t2.c0)))AND(CAST(t0.c1 AS BLOB))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, t2, t0 NOT INDEXED WHERE (((((((((((t2.c1)OR(0.566981213684363)))OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY json_extract(CAST(t2.c1 AS TEXT), (t0.c0 IN (t2.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t2.c1)OR(0.566981213684363)))OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY json_extract(CAST(t2.c1 AS TEXT), (t0.c0 IN (t2.c0))) ASC);
SELECT ALL COUNT(*) FROM vt1, t2, t0 NOT INDEXED WHERE (((((((((((t2.c1)OR(0.566981213684363)))OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) ORDER BY json_extract(CAST(t2.c1 AS TEXT), (t0.c0 IN (t2.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t2.c1)OR(0.566981213684363)))OR(t0.c2)))AND(vt1.c0)))AND(vt1.c0))) NOT NULL)) IS TRUE)  as count FROM vt1, t2, t0 ORDER BY json_extract(CAST(t2.c1 AS TEXT), (t0.c0 IN (t2.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c1) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c1) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((+ (((t0.c1) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CASE vt1.c0 COLLATE RTRIM  WHEN (vt1.c0 IN (vt1.c0)) THEN NULL ELSE ((vt1.c0) IS TRUE) END);
SELECT COUNT(*) FROM t2, vt0, vt1, t0, rt0 WHERE ((CASE WHEN t2.c1 THEN t0.c1 ELSE t0.c0 END IN (t2.c2))) ORDER BY (((((rt0.c3)OR(t0.c2)))OR('_H')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t2.c1 THEN t0.c1 ELSE t0.c0 END IN (t2.c2))) IS TRUE)  as count FROM t2, vt0, vt1, t0, rt0 ORDER BY (((((rt0.c3)OR(t0.c2)))OR('_H')) IN ()));
SELECT COUNT(*) FROM t2, vt0, vt1, t0, rt0 WHERE ((CASE WHEN t2.c1 THEN t0.c1 ELSE t0.c0 END IN (t2.c2))) ORDER BY (((((rt0.c3)OR(t0.c2)))OR('_H')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN t2.c1 THEN t0.c1 ELSE t0.c0 END IN (t2.c2))) IS TRUE)  as count FROM t2, vt0, vt1, t0, rt0 ORDER BY (((((rt0.c3)OR(t0.c2)))OR('_H')) IN ()));
SELECT COUNT(*) FROM t2, vt0, vt1, t0, rt0 WHERE ((CASE WHEN t2.c1 THEN t0.c1 ELSE t0.c0 END IN (t2.c2))) ORDER BY (((((rt0.c3)OR(t0.c2)))OR('_H')) IN ());
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t2, t0, rt0 WHERE (CAST(0.6559788461136042 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((t0.c1)>(t2.c1)))AND(((((t0.c1)OR(t0.c2)))OR(rt0.c2)))), t2.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6559788461136042 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0, rt0 ORDER BY ((((t0.c1)>(t2.c1)))AND(((((t0.c1)OR(t0.c2)))OR(rt0.c2)))), t2.c1 DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t2, t0, rt0 WHERE (CAST(0.6559788461136042 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((t0.c1)>(t2.c1)))AND(((((t0.c1)OR(t0.c2)))OR(rt0.c2)))), t2.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.6559788461136042 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0, rt0 ORDER BY ((((t0.c1)>(t2.c1)))AND(((((t0.c1)OR(t0.c2)))OR(rt0.c2)))), t2.c1 DESC);
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, t2, t0, rt0 WHERE (CAST(0.6559788461136042 COLLATE RTRIM AS NUMERIC)) ORDER BY ((((t0.c1)>(t2.c1)))AND(((((t0.c1)OR(t0.c2)))OR(rt0.c2)))), t2.c1 DESC;
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (TYPEOF((NOT (t0.c2)))) ORDER BY vt0.c0 DESC  NULLS FIRST, (NOT (('B秡' IN ())))  NULLS LAST, ((((LIKELY(rt0.c1))OR(HEX(DISTINCT rt0.c3))))AND((+ (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((NOT (t0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY vt0.c0 DESC  NULLS FIRST, (NOT (('B秡' IN ())))  NULLS LAST, ((((LIKELY(rt0.c1))OR(HEX(DISTINCT rt0.c3))))AND((+ (t0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (TYPEOF((NOT (t0.c2)))) ORDER BY vt0.c0 DESC  NULLS FIRST, (NOT (('B秡' IN ())))  NULLS LAST, ((((LIKELY(rt0.c1))OR(HEX(DISTINCT rt0.c3))))AND((+ (t0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((NOT (t0.c2)))) IS TRUE)  as count FROM t0, vt0, rt0 ORDER BY vt0.c0 DESC  NULLS FIRST, (NOT (('B秡' IN ())))  NULLS LAST, ((((LIKELY(rt0.c1))OR(HEX(DISTINCT rt0.c3))))AND((+ (t0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt0 WHERE (TYPEOF((NOT (t0.c2)))) ORDER BY vt0.c0 DESC  NULLS FIRST, (NOT (('B秡' IN ())))  NULLS LAST, ((((LIKELY(rt0.c1))OR(HEX(DISTINCT rt0.c3))))AND((+ (t0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0, t2, vt1, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN t2.c0 THEN ((((((((t2.c0)AND(vt1.c0)))OR(t2.c0)))OR(t2.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN t2.c0 THEN ((((((((t2.c0)AND(vt1.c0)))OR(t2.c0)))OR(t2.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM t0, rt0, t2, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, t2, vt1, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN t2.c0 THEN ((((((((t2.c0)AND(vt1.c0)))OR(t2.c0)))OR(t2.c0)))AND(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN t2.c0 THEN ((((((((t2.c0)AND(vt1.c0)))OR(t2.c0)))OR(t2.c0)))AND(vt1.c0)) END) IS TRUE)  as count FROM t0, rt0, t2, vt1, vt0);
SELECT COUNT(*) FROM t0, rt0, t2, vt1, vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN t2.c0 THEN ((((((((t2.c0)AND(vt1.c0)))OR(t2.c0)))OR(t2.c0)))AND(vt1.c0)) END);
SELECT * FROM vt0, t0, t2 WHERE ((CAST(t2.c1 AS NUMERIC) IN ())) ORDER BY (~ ((+ (t0.c1)))) DESC, TRIM(((t2.c2)>>(t0.c2)), ((t2.c1)>=(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (~ ((+ (t0.c1)))) DESC, TRIM(((t2.c2)>>(t0.c2)), ((t2.c1)>=(t0.c2))));
SELECT * FROM vt0, t0, t2 WHERE ((CAST(t2.c1 AS NUMERIC) IN ())) ORDER BY (~ ((+ (t0.c1)))) DESC, TRIM(((t2.c2)>>(t0.c2)), ((t2.c1)>=(t0.c2)));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t2.c1 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0, t0, t2 ORDER BY (~ ((+ (t0.c1)))) DESC, TRIM(((t2.c2)>>(t0.c2)), ((t2.c1)>=(t0.c2))));
SELECT * FROM vt0, t0, t2 WHERE ((CAST(t2.c1 AS NUMERIC) IN ())) ORDER BY (~ ((+ (t0.c1)))) DESC, TRIM(((t2.c2)>>(t0.c2)), ((t2.c1)>=(t0.c2)));
SELECT ALL * FROM vt1, rt0, t2 WHERE (((rt0.c2) BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c3) BETWEEN (rt0.c3) AND (t2.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c3) BETWEEN (rt0.c3) AND (t2.c1))))) IS TRUE)  as count FROM vt1, rt0, t2);
SELECT ALL * FROM vt1, rt0, t2 WHERE (((rt0.c2) BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c3) BETWEEN (rt0.c3) AND (t2.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c3) BETWEEN (rt0.c3) AND (t2.c1))))) IS TRUE)  as count FROM vt1, rt0, t2);
SELECT ALL * FROM vt1, rt0, t2 WHERE (((rt0.c2) BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c3) BETWEEN (rt0.c3) AND (t2.c1)))));
SELECT * FROM vt1 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(NULL AS TEXT));
SELECT ALL COUNT(*) FROM rt0, vt0, t2 WHERE (NULL) ORDER BY (NOT ((t2.c0 IN (t2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t2 ORDER BY (NOT ((t2.c0 IN (t2.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t2 WHERE (NULL) ORDER BY (NOT ((t2.c0 IN (t2.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, vt0, t2 ORDER BY (NOT ((t2.c0 IN (t2.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0, t2 WHERE (NULL) ORDER BY (NOT ((t2.c0 IN (t2.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, vt1 NATURAL JOIN t2 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0)IS(t2.c2))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0)IS(t2.c2))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1 NATURAL JOIN t2);
SELECT ALL * FROM rt0, vt0, vt1 NATURAL JOIN t2 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0)IS(t2.c2))) AND (rt0.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0)IS(t2.c2))) AND (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0, vt1 NATURAL JOIN t2);
SELECT ALL * FROM rt0, vt0, vt1 NATURAL JOIN t2 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((vt1.c0)IS(t2.c2))) AND (rt0.c3 COLLATE NOCASE)));
SELECT * FROM t2 WHERE (((((NOT (t2.c0)), (((t2.c0))<>((t2.c2))), (NOT (t2.c1))))<((((t2.c0) NOT BETWEEN (x'') AND (t2.c0)), CASE t2.c2  WHEN t2.c1 THEN t2.c2 ELSE t2.c2 END, '0.5980553122465272'))));
SELECT SUM(count) FROM (SELECT ((((((NOT (t2.c0)), (((t2.c0))<>((t2.c2))), (NOT (t2.c1))))<((((t2.c0) NOT BETWEEN (x'') AND (t2.c0)), CASE t2.c2  WHEN t2.c1 THEN t2.c2 ELSE t2.c2 END, '0.5980553122465272')))) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((((NOT (t2.c0)), (((t2.c0))<>((t2.c2))), (NOT (t2.c1))))<((((t2.c0) NOT BETWEEN (x'') AND (t2.c0)), CASE t2.c2  WHEN t2.c1 THEN t2.c2 ELSE t2.c2 END, '0.5980553122465272'))));
SELECT SUM(count) FROM (SELECT ((((((NOT (t2.c0)), (((t2.c0))<>((t2.c2))), (NOT (t2.c1))))<((((t2.c0) NOT BETWEEN (x'') AND (t2.c0)), CASE t2.c2  WHEN t2.c1 THEN t2.c2 ELSE t2.c2 END, '0.5980553122465272')))) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE (((((NOT (t2.c0)), (((t2.c0))<>((t2.c2))), (NOT (t2.c1))))<((((t2.c0) NOT BETWEEN (x'') AND (t2.c0)), CASE t2.c2  WHEN t2.c1 THEN t2.c2 ELSE t2.c2 END, '0.5980553122465272'))));
SELECT COUNT(*) FROM vt1 CROSS JOIN t2 ON (((t0.c0)) BETWEEN ((CASE rt0.c2  WHEN 0.013548411947191363 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 END)) AND (((((rt0.c0))>((t2.c1)))))) INNER JOIN t0 ON (((((rt0.c3))=((t2.c0)))) NOT BETWEEN (t2.c2) AND (((t2.c0)AND(t0.c0)))) LEFT OUTER JOIN rt0 ON t2.c2 WHERE (((((((t2.c2)OR(rt0.c2)))OR(t0.c2)))>>(CAST(0.3931318706666843 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)OR(rt0.c2)))OR(t0.c2)))>>(CAST(0.3931318706666843 AS INTEGER)))) IS TRUE)  as count FROM vt1 CROSS JOIN t2 ON (((t0.c0)) BETWEEN ((CASE rt0.c2  WHEN 0.013548411947191363 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 END)) AND (((((rt0.c0))>((t2.c1)))))) INNER JOIN t0 ON (((((rt0.c3))=((t2.c0)))) NOT BETWEEN (t2.c2) AND (((t2.c0)AND(t0.c0)))) LEFT OUTER JOIN rt0 ON t2.c2);
SELECT COUNT(*) FROM vt1 CROSS JOIN t2 ON (((t0.c0)) BETWEEN ((CASE rt0.c2  WHEN 0.013548411947191363 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 END)) AND (((((rt0.c0))>((t2.c1)))))) INNER JOIN t0 ON (((((rt0.c3))=((t2.c0)))) NOT BETWEEN (t2.c2) AND (((t2.c0)AND(t0.c0)))) LEFT OUTER JOIN rt0 ON t2.c2 WHERE (((((((t2.c2)OR(rt0.c2)))OR(t0.c2)))>>(CAST(0.3931318706666843 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c2)OR(rt0.c2)))OR(t0.c2)))>>(CAST(0.3931318706666843 AS INTEGER)))) IS TRUE)  as count FROM vt1 CROSS JOIN t2 ON (((t0.c0)) BETWEEN ((CASE rt0.c2  WHEN 0.013548411947191363 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 END)) AND (((((rt0.c0))>((t2.c1)))))) INNER JOIN t0 ON (((((rt0.c3))=((t2.c0)))) NOT BETWEEN (t2.c2) AND (((t2.c0)AND(t0.c0)))) LEFT OUTER JOIN rt0 ON t2.c2);
SELECT COUNT(*) FROM vt1 CROSS JOIN t2 ON (((t0.c0)) BETWEEN ((CASE rt0.c2  WHEN 0.013548411947191363 THEN rt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c0 END)) AND (((((rt0.c0))>((t2.c1)))))) INNER JOIN t0 ON (((((rt0.c3))=((t2.c0)))) NOT BETWEEN (t2.c2) AND (((t2.c0)AND(t0.c0)))) LEFT OUTER JOIN rt0 ON t2.c2 WHERE (((((((t2.c2)OR(rt0.c2)))OR(t0.c2)))>>(CAST(0.3931318706666843 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((CAST(t2.c2 AS REAL), ((-450588839) BETWEEN (t2.c1) AND (t2.c1)), ((((t0.c1)AND(t2.c0)))AND(t2.c0)), ((t2.c1)>>(t2.c2)), ((t2.c2)||(t2.c1))))<(((('Aw')!=(t0.c2)), ((((t2.c1)AND(t2.c2)))AND(t2.c1)), ((t2.c0)*(t0.c2)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t2.c2))), ((t2.c2)IS NOT(t0.c1)))))) ORDER BY ((((t2.c1) IS TRUE)) NOT NULL)  NULLS LAST, (((t2.c1 IN (t0.c0)))<>(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(t2.c2 AS REAL), ((-450588839) BETWEEN (t2.c1) AND (t2.c1)), ((((t0.c1)AND(t2.c0)))AND(t2.c0)), ((t2.c1)>>(t2.c2)), ((t2.c2)||(t2.c1))))<(((('Aw')<>(t0.c2)), ((((t2.c1)AND(t2.c2)))AND(t2.c1)), ((t2.c0)*(t0.c2)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t2.c2))), ((t2.c2)IS NOT(t0.c1)))))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((t2.c1) IS TRUE)) NOT NULL)  NULLS LAST, (((t2.c1 IN (t0.c0)))<>(t0.c2)) DESC);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((CAST(t2.c2 AS REAL), ((-450588839) BETWEEN (t2.c1) AND (t2.c1)), ((((t0.c1)AND(t2.c0)))AND(t2.c0)), ((t2.c1)>>(t2.c2)), ((t2.c2)||(t2.c1))))<(((('Aw')!=(t0.c2)), ((((t2.c1)AND(t2.c2)))AND(t2.c1)), ((t2.c0)*(t0.c2)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t2.c2))), ((t2.c2)IS NOT(t0.c1)))))) ORDER BY ((((t2.c1) IS TRUE)) NOT NULL)  NULLS LAST, (((t2.c1 IN (t0.c0)))<>(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT (((((CAST(t2.c2 AS REAL), ((-450588839) BETWEEN (t2.c1) AND (t2.c1)), ((((t0.c1)AND(t2.c0)))AND(t2.c0)), ((t2.c1)>>(t2.c2)), ((t2.c2)||(t2.c1))))<(((('Aw')<>(t0.c2)), ((((t2.c1)AND(t2.c2)))AND(t2.c1)), ((t2.c0)*(t0.c2)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t2.c2))), ((t2.c2)IS NOT(t0.c1)))))) IS TRUE)  as count FROM t0, t2 ORDER BY ((((t2.c1) IS TRUE)) NOT NULL)  NULLS LAST, (((t2.c1 IN (t0.c0)))<>(t0.c2)) DESC);
SELECT ALL COUNT(*) FROM t0, t2 WHERE ((((CAST(t2.c2 AS REAL), ((-450588839) BETWEEN (t2.c1) AND (t2.c1)), ((((t0.c1)AND(t2.c0)))AND(t2.c0)), ((t2.c1)>>(t2.c2)), ((t2.c2)||(t2.c1))))<(((('Aw')!=(t0.c2)), ((((t2.c1)AND(t2.c2)))AND(t2.c1)), ((t2.c0)*(t0.c2)), (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t2.c2))), ((t2.c2)IS NOT(t0.c1)))))) ORDER BY ((((t2.c1) IS TRUE)) NOT NULL)  NULLS LAST, (((t2.c1 IN (t0.c0)))<>(t0.c2)) DESC;
SELECT COUNT(*) FROM vt0, t2, rt0 WHERE (((((~ (t2.c2)), vt0.c0, vt0.c0))==((NULL COLLATE RTRIM, ((((t2.c2)AND(t2.c2)))AND(t2.c0)), ((vt0.c0)||(rt0.c3)))))) ORDER BY ((((CASE t2.c0  WHEN t2.c1 THEN t2.c0 END)OR(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))))OR(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (t2.c2)), vt0.c0, vt0.c0))=((NULL COLLATE RTRIM, ((((t2.c2)AND(t2.c2)))AND(t2.c0)), ((vt0.c0)||(rt0.c3)))))) IS TRUE)  as count FROM vt0, t2, rt0 ORDER BY ((((CASE t2.c0  WHEN t2.c1 THEN t2.c0 END)OR(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))))OR(NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t2, rt0 WHERE (((((~ (t2.c2)), vt0.c0, vt0.c0))==((NULL COLLATE RTRIM, ((((t2.c2)AND(t2.c2)))AND(t2.c0)), ((vt0.c0)||(rt0.c3)))))) ORDER BY ((((CASE t2.c0  WHEN t2.c1 THEN t2.c0 END)OR(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))))OR(NULL)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((~ (t2.c2)), vt0.c0, vt0.c0))=((NULL COLLATE RTRIM, ((((t2.c2)AND(t2.c2)))AND(t2.c0)), ((vt0.c0)||(rt0.c3)))))) IS TRUE)  as count FROM vt0, t2, rt0 ORDER BY ((((CASE t2.c0  WHEN t2.c1 THEN t2.c0 END)OR(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))))OR(NULL)) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t2, rt0 WHERE (((((~ (t2.c2)), vt0.c0, vt0.c0))==((NULL COLLATE RTRIM, ((((t2.c2)AND(t2.c2)))AND(t2.c0)), ((vt0.c0)||(rt0.c3)))))) ORDER BY ((((CASE t2.c0  WHEN t2.c1 THEN t2.c0 END)OR(((((rt0.c1)OR(vt0.c0)))AND(rt0.c0)))))OR(NULL)) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN ()) INNER JOIN rt0 ON vt0.c0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN ()) INNER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN ()) INNER JOIN rt0 ON vt0.c0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt0.c3 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN ()) INNER JOIN rt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN t0 ON (((t0.c2)>>(t0.c1)) IN ()) INNER JOIN rt0 ON vt0.c0 WHERE (CAST(CAST(rt0.c3 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM t2, rt0, t0, vt0, vt1 WHERE (((vt0.c0) NOTNULL)) ORDER BY t2.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM t2, rt0, t0, vt0, vt1 ORDER BY t2.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, rt0, t0, vt0, vt1 WHERE (((vt0.c0) NOTNULL)) ORDER BY t2.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOTNULL)) IS TRUE)  as count FROM t2, rt0, t0, vt0, vt1 ORDER BY t2.c1 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t2, rt0, t0, vt0, vt1 WHERE (((vt0.c0) NOTNULL)) ORDER BY t2.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0, t2 WHERE ((((((x'') BETWEEN (vt0.c0) AND (t2.c1))))<((((t0.c2)%(vt0.c0)))))) ORDER BY CASE vt0.c0  WHEN 0.7767465659626235 THEN t0.c2 WHEN rt0.c3 THEN t2.c0 WHEN t2.c1 THEN rt0.c1 ELSE '0.44991665040668694' END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'') BETWEEN (vt0.c0) AND (t2.c1))))<((((t0.c2)%(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t2 ORDER BY CASE vt0.c0  WHEN 0.7767465659626235 THEN t0.c2 WHEN rt0.c3 THEN t2.c0 WHEN t2.c1 THEN rt0.c1 ELSE '0.44991665040668694' END COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0, t2 WHERE ((((((x'') BETWEEN (vt0.c0) AND (t2.c1))))<((((t0.c2)%(vt0.c0)))))) ORDER BY CASE vt0.c0  WHEN 0.7767465659626235 THEN t0.c2 WHEN rt0.c3 THEN t2.c0 WHEN t2.c1 THEN rt0.c1 ELSE '0.44991665040668694' END COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((x'') BETWEEN (vt0.c0) AND (t2.c1))))<((((t0.c2)%(vt0.c0)))))) IS TRUE)  as count FROM vt0, vt1, rt0, t0, t2 ORDER BY CASE vt0.c0  WHEN 0.7767465659626235 THEN t0.c2 WHEN rt0.c3 THEN t2.c0 WHEN t2.c1 THEN rt0.c1 ELSE '0.44991665040668694' END COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t0, t2 WHERE ((((((x'') BETWEEN (vt0.c0) AND (t2.c1))))<((((t0.c2)%(vt0.c0)))))) ORDER BY CASE vt0.c0  WHEN 0.7767465659626235 THEN t0.c2 WHEN rt0.c3 THEN t2.c0 WHEN t2.c1 THEN rt0.c1 ELSE '0.44991665040668694' END COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN rt0 ON ((((((((x'')OR(((rt0.c2) NOT BETWEEN (t2.c1) AND (rt0.c2)))))OR(((rt0.c0)%(t2.c1)))))OR((+ (rt0.c3)))))AND((((rt0.c3))<((rt0.c3))))) WHERE (((((((rt0.c1)OR('')))AND(t2.c2)))<>(((((((((rt0.c1)AND(rt0.c3)))AND(t2.c0)))AND(rt0.c3)))OR(''))))) ORDER BY CAST(((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('')))AND(t2.c2)))!=(((((((((rt0.c1)AND(rt0.c3)))AND(t2.c0)))AND(rt0.c3)))OR(''))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN rt0 ON ((((((((x'')OR(((rt0.c2) NOT BETWEEN (t2.c1) AND (rt0.c2)))))OR(((rt0.c0)%(t2.c1)))))OR((+ (rt0.c3)))))AND((((rt0.c3))<((rt0.c3))))) ORDER BY CAST(((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN rt0 ON ((((((((x'')OR(((rt0.c2) NOT BETWEEN (t2.c1) AND (rt0.c2)))))OR(((rt0.c0)%(t2.c1)))))OR((+ (rt0.c3)))))AND((((rt0.c3))<((rt0.c3))))) WHERE (((((((rt0.c1)OR('')))AND(t2.c2)))<>(((((((((rt0.c1)AND(rt0.c3)))AND(t2.c0)))AND(rt0.c3)))OR(''))))) ORDER BY CAST(((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)) AS BLOB) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR('')))AND(t2.c2)))!=(((((((((rt0.c1)AND(rt0.c3)))AND(t2.c0)))AND(rt0.c3)))OR(''))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN rt0 ON ((((((((x'')OR(((rt0.c2) NOT BETWEEN (t2.c1) AND (rt0.c2)))))OR(((rt0.c0)%(t2.c1)))))OR((+ (rt0.c3)))))AND((((rt0.c3))<((rt0.c3))))) ORDER BY CAST(((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)) AS BLOB) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN rt0 ON ((((((((x'')OR(((rt0.c2) NOT BETWEEN (t2.c1) AND (rt0.c2)))))OR(((rt0.c0)%(t2.c1)))))OR((+ (rt0.c3)))))AND((((rt0.c3))<((rt0.c3))))) WHERE (((((((rt0.c1)OR('')))AND(t2.c2)))<>(((((((((rt0.c1)AND(rt0.c3)))AND(t2.c0)))AND(rt0.c3)))OR(''))))) ORDER BY CAST(((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)) AS BLOB) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t2 ON json(t0.c0 COLLATE NOCASE) RIGHT OUTER JOIN vt1 ON 0.7497446083165173 WHERE (((LIKELIHOOD(DISTINCT t2.c2, 0.8390215684936986)) BETWEEN (((((t2.c1)OR(t0.c1)))OR(t0.c2))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(t2.c0 AS BLOB)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT t2.c2, 0.8390215684936986)) BETWEEN (((((t2.c1)OR(t0.c1)))OR(t0.c2))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t2 ON json(t0.c0 COLLATE NOCASE) RIGHT OUTER JOIN vt1 ON 0.7497446083165173 ORDER BY ((CAST(t2.c0 AS BLOB)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t2 ON json(t0.c0 COLLATE NOCASE) RIGHT OUTER JOIN vt1 ON 0.7497446083165173 WHERE (((LIKELIHOOD(DISTINCT t2.c2, 0.8390215684936986)) BETWEEN (((((t2.c1)OR(t0.c1)))OR(t0.c2))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(t2.c0 AS BLOB)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT t2.c2, 0.8390215684936986)) BETWEEN (((((t2.c1)OR(t0.c1)))OR(t0.c2))) AND (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 LEFT OUTER JOIN t2 ON json(t0.c0 COLLATE NOCASE) RIGHT OUTER JOIN vt1 ON 0.7497446083165173 ORDER BY ((CAST(t2.c0 AS BLOB)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 LEFT OUTER JOIN t2 ON json(t0.c0 COLLATE NOCASE) RIGHT OUTER JOIN vt1 ON 0.7497446083165173 WHERE (((LIKELIHOOD(DISTINCT t2.c2, 0.8390215684936986)) BETWEEN (((((t2.c1)OR(t0.c1)))OR(t0.c2))) AND (vt0.c0 COLLATE NOCASE))) ORDER BY ((CAST(t2.c0 AS BLOB)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0, t2 WHERE ((((vt1.c0 IN (t2.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c0))) AND (((t2.c2)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (t2.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c0))) AND (((t2.c2)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, t2);
SELECT ALL * FROM vt1, t0, vt0, t2 WHERE ((((vt1.c0 IN (t2.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c0))) AND (((t2.c2)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0 IN (t2.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c0))) AND (((t2.c2)<=(vt0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0, t2);
SELECT ALL * FROM vt1, t0, vt0, t2 WHERE ((((vt1.c0 IN (t2.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c0))) AND (((t2.c2)<=(vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE BINARY COLLATE BINARY);
SELECT COUNT(*) FROM rt0, t2, vt0, t0 NOT INDEXED WHERE (CASE ((((t2.c0)AND(t2.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN ()) THEN NULL END) ORDER BY COALESCE((~ (t2.c2)), (+ (t2.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((t2.c0)AND(t2.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN ()) THEN NULL END) IS TRUE)  as count FROM rt0, t2, vt0, t0 ORDER BY COALESCE((~ (t2.c2)), (+ (t2.c1))) DESC);
SELECT COUNT(*) FROM rt0, t2, vt0, t0 NOT INDEXED WHERE (CASE ((((t2.c0)AND(t2.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN ()) THEN NULL END) ORDER BY COALESCE((~ (t2.c2)), (+ (t2.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((((t2.c0)AND(t2.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN ()) THEN NULL END) IS TRUE)  as count FROM rt0, t2, vt0, t0 ORDER BY COALESCE((~ (t2.c2)), (+ (t2.c1))) DESC);
SELECT COUNT(*) FROM rt0, t2, vt0, t0 NOT INDEXED WHERE (CASE ((((t2.c0)AND(t2.c0)))AND(rt0.c2))  WHEN (rt0.c1 IN ()) THEN NULL END) ORDER BY COALESCE((~ (t2.c2)), (+ (t2.c1))) DESC;
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t2 WHERE (((((t2.c1)LIKE(t2.c2)))&(((t2.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)LIKE(t2.c2)))&(((t2.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, rt0, t2);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t2 WHERE (((((t2.c1)LIKE(t2.c2)))&(((t2.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)LIKE(t2.c2)))&(((t2.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt1, rt0, t2);
SELECT ALL COUNT(*) FROM vt0, vt1, rt0, t2 WHERE (((((t2.c1)LIKE(t2.c2)))&(((t2.c0) ISNULL))));
SELECT ALL * FROM t0, vt0, rt0, t2 WHERE (CASE WHEN t2.c0 THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c0 THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0, vt0, rt0, t2);
SELECT ALL * FROM t0, vt0, rt0, t2 WHERE (CASE WHEN t2.c0 THEN vt0.c0 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t2.c0 THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0, vt0, rt0, t2);
SELECT ALL * FROM t0, vt0, rt0, t2 WHERE (CASE WHEN t2.c0 THEN vt0.c0 COLLATE BINARY END);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c2))!=((vt0.c0))))AND((rt0.c0 IN ()))))AND(((rt0.c3)IS(rt0.c1))))) ORDER BY ((((rt0.c3)=(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, rt0.c3)))) AND ((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))<>((vt0.c0))))AND((rt0.c0 IN ()))))AND(((rt0.c3)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)==(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, rt0.c3)))) AND ((~ (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c2))!=((vt0.c0))))AND((rt0.c0 IN ()))))AND(((rt0.c3)IS(rt0.c1))))) ORDER BY ((((rt0.c3)=(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, rt0.c3)))) AND ((~ (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt0.c2))<>((vt0.c0))))AND((rt0.c0 IN ()))))AND(((rt0.c3)IS(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c3)==(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, rt0.c3)))) AND ((~ (rt0.c2))))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((((rt0.c2))!=((vt0.c0))))AND((rt0.c0 IN ()))))AND(((rt0.c3)IS(rt0.c1))))) ORDER BY ((((rt0.c3)=(rt0.c0))) NOT BETWEEN ((((rt0.c0, rt0.c0, rt0.c0))<=((rt0.c0, vt0.c0, rt0.c3)))) AND ((~ (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (vt1.c0))))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((CAST(rt0.c1 AS TEXT)) NOT BETWEEN ((rt0.c2 IN ())) AND ((~ (vt1.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((ROUND(vt1.c0, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0x2df145b6 END)))AND(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((ROUND(vt1.c0, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0x2df145b6 END)))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((ROUND(vt1.c0, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0x2df145b6 END)))AND(((vt1.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((ROUND(vt1.c0, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0x2df145b6 END)))AND(((vt1.c0) IS FALSE)))) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((ROUND(vt1.c0, vt1.c0))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 0x2df145b6 END)))AND(((vt1.c0) IS FALSE))));
SELECT COUNT(*) FROM t2, vt0 WHERE ((((('T') NOTNULL))+(((t2.c1)<>(x''))))) ORDER BY CAST(NULL AS TEXT)  NULLS FIRST, CASE WHEN t2.c2 THEN HEX(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL (((((('T') NOTNULL))+(((t2.c1)<>(x''))))) IS TRUE)  as count FROM t2, vt0 ORDER BY CAST(NULL AS TEXT)  NULLS FIRST, CASE WHEN t2.c2 THEN HEX(vt0.c0) END);
SELECT COUNT(*) FROM t2, vt0 WHERE ((((('T') NOTNULL))+(((t2.c1)<>(x''))))) ORDER BY CAST(NULL AS TEXT)  NULLS FIRST, CASE WHEN t2.c2 THEN HEX(vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL (((((('T') NOTNULL))+(((t2.c1)<>(x''))))) IS TRUE)  as count FROM t2, vt0 ORDER BY CAST(NULL AS TEXT)  NULLS FIRST, CASE WHEN t2.c2 THEN HEX(vt0.c0) END);
SELECT COUNT(*) FROM t2, vt0 WHERE ((((('T') NOTNULL))+(((t2.c1)<>(x''))))) ORDER BY CAST(NULL AS TEXT)  NULLS FIRST, CASE WHEN t2.c2 THEN HEX(vt0.c0) END;
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CAST((NOT (rt0.c1)) AS BLOB) LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS REAL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t2.c1 END) AND (((rt0.c0) NOT BETWEEN (t2.c1) AND (rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (t2.c2) AND (0xffffffffca5c249a))) BETWEEN (((((((((t2.c2)OR(1415466540)))OR(t2.c0)))AND(t2.c2)))AND(vt1.c0))) AND (((rt0.c0) NOTNULL)))) ORDER BY ((rt0.c2) BETWEEN (t2.c1 COLLATE BINARY) AND (rt0.c0))  NULLS FIRST, (NOT ((~ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (t2.c2) AND (0Xffffffffca5c249a))) BETWEEN (((((((((t2.c2)OR(1415466540)))OR(t2.c0)))AND(t2.c2)))AND(vt1.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST((NOT (rt0.c1)) AS BLOB) LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS REAL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t2.c1 END) AND (((rt0.c0) NOT BETWEEN (t2.c1) AND (rt0.c0)))) ORDER BY ((rt0.c2) BETWEEN (t2.c1 COLLATE BINARY) AND (rt0.c0))  NULLS FIRST, (NOT ((~ (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CAST((NOT (rt0.c1)) AS BLOB) LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS REAL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t2.c1 END) AND (((rt0.c0) NOT BETWEEN (t2.c1) AND (rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (t2.c2) AND (0xffffffffca5c249a))) BETWEEN (((((((((t2.c2)OR(1415466540)))OR(t2.c0)))AND(t2.c2)))AND(vt1.c0))) AND (((rt0.c0) NOTNULL)))) ORDER BY ((rt0.c2) BETWEEN (t2.c1 COLLATE BINARY) AND (rt0.c0))  NULLS FIRST, (NOT ((~ (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (t2.c2) AND (0Xffffffffca5c249a))) BETWEEN (((((((((t2.c2)OR(1415466540)))OR(t2.c0)))AND(t2.c2)))AND(vt1.c0))) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN vt1 ON CAST((NOT (rt0.c1)) AS BLOB) LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS REAL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t2.c1 END) AND (((rt0.c0) NOT BETWEEN (t2.c1) AND (rt0.c0)))) ORDER BY ((rt0.c2) BETWEEN (t2.c1 COLLATE BINARY) AND (rt0.c0))  NULLS FIRST, (NOT ((~ (rt0.c1))))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt1 ON CAST((NOT (rt0.c1)) AS BLOB) LEFT OUTER JOIN t2 ON ((CAST(t2.c0 AS REAL)) NOT BETWEEN (CASE WHEN rt0.c0 THEN t2.c1 END) AND (((rt0.c0) NOT BETWEEN (t2.c1) AND (rt0.c0)))) WHERE (((((rt0.c1) NOT BETWEEN (t2.c2) AND (0xffffffffca5c249a))) BETWEEN (((((((((t2.c2)OR(1415466540)))OR(t2.c0)))AND(t2.c2)))AND(vt1.c0))) AND (((rt0.c0) NOTNULL)))) ORDER BY ((rt0.c2) BETWEEN (t2.c1 COLLATE BINARY) AND (rt0.c0))  NULLS FIRST, (NOT ((~ (rt0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.900935060306783))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.900935060306783))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.900935060306783))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.900935060306783))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((((((vt1.c0, vt1.c0, vt1.c0, vt1.c0, 0.900935060306783))>((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt1.c0)))) NOT NULL)) ORDER BY vt1.c0  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL)) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL * FROM vt1, rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3))) NOTNULL));
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY(DISTINCT (NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (NOT (t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY(DISTINCT (NOT (t0.c0))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT (NOT (t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL * FROM t0, rt0 WHERE (UNLIKELY(DISTINCT (NOT (t0.c0))));
SELECT COUNT(*) FROM t2, vt0 INNER JOIN t0 ON (((t0.c1 IN ())) NOT NULL) LEFT OUTER JOIN rt0 ON ((((((((CAST(t2.c1 AS REAL))OR(((vt0.c0)OR(t2.c0)))))AND(264051332)))AND(vt0.c0 COLLATE BINARY)))AND(rt0.c0)) CROSS JOIN vt1 ON TYPEOF(x'') WHERE (((((((((((rt0.c3)AND(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))|((((t2.c2))<=((t0.c0)))))) ORDER BY CAST(((vt0.c0)&(rt0.c0)) AS TEXT) ASC  NULLS LAST, t0.c2, CASE t2.c0  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1))) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN t0.c2 COLLATE NOCASE WHEN ((1092491468) IS FALSE) THEN (t2.c0 IN ()) WHEN json(vt1.c0) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN 0.5511678360665435 ELSE rt0.c2 END WHEN (+ (t0.c2)) THEN ((rt0.c3)<(t0.c1)) ELSE (+ (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))|((((t2.c2))<=((t0.c0)))))) IS TRUE)  as count FROM t2, vt0 INNER JOIN t0 ON (((t0.c1 IN ())) NOT NULL) LEFT OUTER JOIN rt0 ON ((((((((CAST(t2.c1 AS REAL))OR(((vt0.c0)OR(t2.c0)))))AND(264051332)))AND(vt0.c0 COLLATE BINARY)))AND(rt0.c0)) CROSS JOIN vt1 ON TYPEOF(x'') ORDER BY CAST(((vt0.c0)&(rt0.c0)) AS TEXT) ASC  NULLS LAST, t0.c2, CASE t2.c0  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1))) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN t0.c2 COLLATE NOCASE WHEN ((1092491468) IS FALSE) THEN (t2.c0 IN ()) WHEN json(vt1.c0) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN 0.5511678360665435 ELSE rt0.c2 END WHEN (+ (t0.c2)) THEN ((rt0.c3)<(t0.c1)) ELSE (+ (vt1.c0)) END ASC);
SELECT COUNT(*) FROM t2, vt0 INNER JOIN t0 ON (((t0.c1 IN ())) NOT NULL) LEFT OUTER JOIN rt0 ON ((((((((CAST(t2.c1 AS REAL))OR(((vt0.c0)OR(t2.c0)))))AND(264051332)))AND(vt0.c0 COLLATE BINARY)))AND(rt0.c0)) CROSS JOIN vt1 ON TYPEOF(x'') WHERE (((((((((((rt0.c3)AND(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))|((((t2.c2))<=((t0.c0)))))) ORDER BY CAST(((vt0.c0)&(rt0.c0)) AS TEXT) ASC  NULLS LAST, t0.c2, CASE t2.c0  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1))) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN t0.c2 COLLATE NOCASE WHEN ((1092491468) IS FALSE) THEN (t2.c0 IN ()) WHEN json(vt1.c0) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN 0.5511678360665435 ELSE rt0.c2 END WHEN (+ (t0.c2)) THEN ((rt0.c3)<(t0.c1)) ELSE (+ (vt1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c3)AND(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))|((((t2.c2))<=((t0.c0)))))) IS TRUE)  as count FROM t2, vt0 INNER JOIN t0 ON (((t0.c1 IN ())) NOT NULL) LEFT OUTER JOIN rt0 ON ((((((((CAST(t2.c1 AS REAL))OR(((vt0.c0)OR(t2.c0)))))AND(264051332)))AND(vt0.c0 COLLATE BINARY)))AND(rt0.c0)) CROSS JOIN vt1 ON TYPEOF(x'') ORDER BY CAST(((vt0.c0)&(rt0.c0)) AS TEXT) ASC  NULLS LAST, t0.c2, CASE t2.c0  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1))) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN t0.c2 COLLATE NOCASE WHEN ((1092491468) IS FALSE) THEN (t2.c0 IN ()) WHEN json(vt1.c0) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN 0.5511678360665435 ELSE rt0.c2 END WHEN (+ (t0.c2)) THEN ((rt0.c3)<(t0.c1)) ELSE (+ (vt1.c0)) END ASC);
SELECT COUNT(*) FROM t2, vt0 INNER JOIN t0 ON (((t0.c1 IN ())) NOT NULL) LEFT OUTER JOIN rt0 ON ((((((((CAST(t2.c1 AS REAL))OR(((vt0.c0)OR(t2.c0)))))AND(264051332)))AND(vt0.c0 COLLATE BINARY)))AND(rt0.c0)) CROSS JOIN vt1 ON TYPEOF(x'') WHERE (((((((((((rt0.c3)AND(t0.c0)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c3)))|((((t2.c2))<=((t0.c0)))))) ORDER BY CAST(((vt0.c0)&(rt0.c0)) AS TEXT) ASC  NULLS LAST, t0.c2, CASE t2.c0  WHEN (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((t0.c1))) THEN CAST(vt0.c0 AS INTEGER) WHEN NULL THEN t0.c2 COLLATE NOCASE WHEN ((1092491468) IS FALSE) THEN (t2.c0 IN ()) WHEN json(vt1.c0) THEN CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN 0.5511678360665435 ELSE rt0.c2 END WHEN (+ (t0.c2)) THEN ((rt0.c3)<(t0.c1)) ELSE (+ (vt1.c0)) END ASC;
SELECT ALL * FROM t0, vt1, rt0, vt0, t2 WHERE (x'') ORDER BY x'' ASC, ('WM' IN ()), CAST(rt0.c2 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, rt0, vt0, t2 ORDER BY x'' ASC, ('WM' IN ()), CAST(rt0.c2 AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0, t2 WHERE (x'') ORDER BY x'' ASC, ('WM' IN ()), CAST(rt0.c2 AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0, vt1, rt0, vt0, t2 ORDER BY x'' ASC, ('WM' IN ()), CAST(rt0.c2 AS REAL)  NULLS FIRST);
SELECT ALL * FROM t0, vt1, rt0, vt0, t2 WHERE (x'') ORDER BY x'' ASC, ('WM' IN ()), CAST(rt0.c2 AS REAL)  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3)<>(0X426fd7ed)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<>(0x426fd7ed)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3)<>(0X426fd7ed)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)<>(0x426fd7ed)) IN ())) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((((rt0.c3)<>(0X426fd7ed)) IN ()));
SELECT * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c1))) AND (CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '}x#' WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) ORDER BY ((1.353339662E9)AND(-1.909933083E9))  NULLS FIRST, ((((((((1.881681582E9)AND((t0.c2 IN ()))))AND(((t0.c0)|(t0.c1)))))OR(INSTR(t0.c0, 0.16972431526592435))))OR(((t0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c1))) AND (CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '}x#' WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((1.353339662E9)AND(-1.909933083E9))  NULLS FIRST, ((((((((1.881681582E9)AND((t0.c2 IN ()))))AND(((t0.c0)|(t0.c1)))))OR(INSTR(t0.c0, 0.16972431526592435))))OR(((t0.c1) ISNULL))));
SELECT * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c1))) AND (CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '}x#' WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) ORDER BY ((1.353339662E9)AND(-1.909933083E9))  NULLS FIRST, ((((((((1.881681582E9)AND((t0.c2 IN ()))))AND(((t0.c0)|(t0.c1)))))OR(INSTR(t0.c0, 0.16972431526592435))))OR(((t0.c1) ISNULL)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c1))) AND (CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '}x#' WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((1.353339662E9)AND(-1.909933083E9))  NULLS FIRST, ((((((((1.881681582E9)AND((t0.c2 IN ()))))AND(((t0.c0)|(t0.c1)))))OR(INSTR(t0.c0, 0.16972431526592435))))OR(((t0.c1) ISNULL))));
SELECT * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN (((t0.c0) BETWEEN (x'') AND (t0.c1))) AND (CASE WHEN vt0.c0 THEN t0.c1 WHEN vt0.c0 THEN '}x#' WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END))) ORDER BY ((1.353339662E9)AND(-1.909933083E9))  NULLS FIRST, ((((((((1.881681582E9)AND((t0.c2 IN ()))))AND(((t0.c0)|(t0.c1)))))OR(INSTR(t0.c0, 0.16972431526592435))))OR(((t0.c1) ISNULL)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))LIKE(((rt0.c2)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))LIKE(((rt0.c2)>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))LIKE(((rt0.c2)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE))LIKE(((rt0.c2)>(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) IS TRUE))LIKE(((rt0.c2)>(rt0.c2)))));
SELECT COUNT(*) FROM rt0 WHERE (json_array_length((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_array_length((NOT (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length((NOT (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (json_array_length((NOT (rt0.c0))));
SELECT COUNT(*) FROM vt1, vt0, t2, rt0, t0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0, t2, rt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t2, rt0, t0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt1, vt0, t2, rt0, t0);
SELECT COUNT(*) FROM vt1, vt0, t2, rt0, t0 WHERE ((CAST(vt1.c0 AS NUMERIC) IN ()));
SELECT ALL * FROM t2, rt0 WHERE ('-1222943885');
SELECT SUM(count) FROM (SELECT ALL (('-1222943885') IS TRUE)  as count FROM t2, rt0);
SELECT ALL * FROM t2, rt0 WHERE ('-1222943885');
SELECT SUM(count) FROM (SELECT ALL (('-1222943885') IS TRUE)  as count FROM t2, rt0);
SELECT ALL * FROM t2, rt0 WHERE ('-1222943885');
SELECT * FROM vt1, vt0, t0 NATURAL JOIN t2 WHERE ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN t2);
SELECT * FROM vt1, vt0, t0 NATURAL JOIN t2 WHERE ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t0.c1)))) IS TRUE)) IS TRUE)  as count FROM vt1, vt0, t0 NATURAL JOIN t2);
SELECT * FROM vt1, vt0, t0 NATURAL JOIN t2 WHERE ((((((t0.c0)) BETWEEN ((t2.c0)) AND ((t0.c1)))) IS TRUE));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((((t0.c1, t0.c2, 526535272)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, vt0.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(((((t0.c1)OR(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1, t0.c2, 526535272)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, vt0.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(((((t0.c1)OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((((t0.c1, t0.c2, 526535272)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, vt0.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(((((t0.c1)OR(vt0.c0)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((t0.c1, t0.c2, 526535272)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, vt0.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(((((t0.c1)OR(vt0.c0)))AND(t0.c0))))) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE ((((((((t0.c1, t0.c2, 526535272)) BETWEEN ((t0.c2, t0.c1, t0.c1)) AND ((t0.c0, vt0.c0, vt1.c0))))OR(vt1.c0 COLLATE NOCASE)))AND(((((t0.c1)OR(vt0.c0)))AND(t0.c0)))));
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM t2, vt1, t0);
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (((- (vt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((- (vt1.c0)) IN ())) IS TRUE)  as count FROM t2, vt1, t0);
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (((- (vt1.c0)) IN ()));
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((t0.c1)AND((NOT (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (+ ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c1))))) DESC, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) DESC, (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)), ((vt1.c0) BETWEEN (rt0.c2) AND (t0.c2)), ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))))>=((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOTNULL), ((rt0.c2)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND((NOT (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (+ ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c1))))) DESC, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) DESC, (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)), ((vt1.c0) BETWEEN (rt0.c2) AND (t0.c2)), ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))))>=((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOTNULL), ((rt0.c2)GLOB(rt0.c3))))));
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((t0.c1)AND((NOT (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (+ ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c1))))) DESC, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) DESC, (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)), ((vt1.c0) BETWEEN (rt0.c2) AND (t0.c2)), ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))))>=((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOTNULL), ((rt0.c2)GLOB(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)AND((NOT (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM vt1, t0, rt0 ORDER BY (+ ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c1))))) DESC, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) DESC, (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)), ((vt1.c0) BETWEEN (rt0.c2) AND (t0.c2)), ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))))>=((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOTNULL), ((rt0.c2)GLOB(rt0.c3))))));
SELECT ALL * FROM vt1, t0, rt0 WHERE (((((t0.c1)AND((NOT (rt0.c2)))))AND(CAST(rt0.c2 AS BLOB)))) ORDER BY (+ ((((rt0.c2)) NOT BETWEEN ((x'')) AND ((t0.c1))))) DESC, (- (((t0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) DESC, (((((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)), ((vt1.c0) BETWEEN (rt0.c2) AND (t0.c2)), ((t0.c2) BETWEEN (rt0.c1) AND (vt1.c0))))>=((rt0.c3 COLLATE RTRIM, ((rt0.c3) NOTNULL), ((rt0.c2)GLOB(rt0.c3)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (0.47928845153318866 COLLATE RTRIM) ORDER BY ((~ (vt1.c0)) IN ()) ASC  NULLS LAST, (((rt0.c3)) NOT BETWEEN ((t0.c1)) AND (((((('1990200215')AND(t0.c1)))AND(rt0.c0)))))  NULLS FIRST, LIKELIHOOD(vt1.c0, 0.18708945556745282)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.47928845153318866 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((~ (vt1.c0)) IN ()) ASC  NULLS LAST, (((rt0.c3)) NOT BETWEEN ((t0.c1)) AND (((((('1990200215')AND(t0.c1)))AND(rt0.c0)))))  NULLS FIRST, LIKELIHOOD(vt1.c0, 0.18708945556745282)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (0.47928845153318866 COLLATE RTRIM) ORDER BY ((~ (vt1.c0)) IN ()) ASC  NULLS LAST, (((rt0.c3)) NOT BETWEEN ((t0.c1)) AND (((((('1990200215')AND(t0.c1)))AND(rt0.c0)))))  NULLS FIRST, LIKELIHOOD(vt1.c0, 0.18708945556745282)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.47928845153318866 COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY ((~ (vt1.c0)) IN ()) ASC  NULLS LAST, (((rt0.c3)) NOT BETWEEN ((t0.c1)) AND (((((('1990200215')AND(t0.c1)))AND(rt0.c0)))))  NULLS FIRST, LIKELIHOOD(vt1.c0, 0.18708945556745282)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (0.47928845153318866 COLLATE RTRIM) ORDER BY ((~ (vt1.c0)) IN ()) ASC  NULLS LAST, (((rt0.c3)) NOT BETWEEN ((t0.c1)) AND (((((('1990200215')AND(t0.c1)))AND(rt0.c0)))))  NULLS FIRST, LIKELIHOOD(vt1.c0, 0.18708945556745282)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN (COALESCE(rt0.c1, t0.c1)) AND (((t0.c2)>>(t0.c0)))) LEFT OUTER JOIN t2 ON (((rt0.c3)LIKE(rt0.c1)) IN ()) CROSS JOIN rt0 ON ((((rt0.c0) NOTNULL))||((((t2.c2, rt0.c1, x'', t2.c2, t2.c2))<=((rt0.c2, t0.c1, vt0.c0, t2.c1, t0.c0))))) WHERE (((((((rt0.c0)OR(t0.c0)))OR(vt1.c0))) BETWEEN (((rt0.c3)<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (t2.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(t0.c0)))OR(vt1.c0))) BETWEEN (((rt0.c3)<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (t2.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN (COALESCE(rt0.c1, t0.c1)) AND (((t0.c2)>>(t0.c0)))) LEFT OUTER JOIN t2 ON (((rt0.c3)LIKE(rt0.c1)) IN ()) CROSS JOIN rt0 ON ((((rt0.c0) NOTNULL))||((((t2.c2, rt0.c1, x'', t2.c2, t2.c2))<=((rt0.c2, t0.c1, vt0.c0, t2.c1, t0.c0))))));
SELECT COUNT(*) FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN (COALESCE(rt0.c1, t0.c1)) AND (((t0.c2)>>(t0.c0)))) LEFT OUTER JOIN t2 ON (((rt0.c3)LIKE(rt0.c1)) IN ()) CROSS JOIN rt0 ON ((((rt0.c0) NOTNULL))||((((t2.c2, rt0.c1, x'', t2.c2, t2.c2))<=((rt0.c2, t0.c1, vt0.c0, t2.c1, t0.c0))))) WHERE (((((((rt0.c0)OR(t0.c0)))OR(vt1.c0))) BETWEEN (((rt0.c3)<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (t2.c1) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(t0.c0)))OR(vt1.c0))) BETWEEN (((rt0.c3)<=(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (t2.c1) AND (rt0.c1))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN vt0 ON (((NOT (rt0.c1))) BETWEEN (COALESCE(rt0.c1, t0.c1)) AND (((t0.c2)>>(t0.c0)))) LEFT OUTER JOIN t2 ON (((rt0.c3)LIKE(rt0.c1)) IN ()) CROSS JOIN rt0 ON ((((rt0.c0) NOTNULL))||((((t2.c2, rt0.c1, x'', t2.c2, t2.c2))<=((rt0.c2, t0.c1, vt0.c0, t2.c1, t0.c0))))));
SELECT * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY (UNLIKELY(rt0.c3) IN ())  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (UNLIKELY(rt0.c3) IN ())  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY (UNLIKELY(rt0.c3) IN ())  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY (UNLIKELY(rt0.c3) IN ())  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE ASC);
SELECT * FROM rt0 WHERE (((NULL) NOTNULL)) ORDER BY (UNLIKELY(rt0.c3) IN ())  NULLS LAST, (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (CASE WHEN -505598983 THEN vt0.c0 ELSE vt1.c0 END IN ((((vt0.c0))<=((vt0.c0))))) WHERE (CAST(highlight(0Xffffffffef149787, vt0.c0, vt1.c0, vt1.c0) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))  NULLS FIRST, TYPEOF(DISTINCT json_patch(vt1.c0, vt1.c0));
SELECT SUM(count) FROM (SELECT ((CAST(highlight(0Xffffffffef149787, vt0.c0, vt1.c0, vt1.c0) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN vt1 ON (CASE WHEN -505598983 THEN vt0.c0 ELSE vt1.c0 END IN ((((vt0.c0))<=((vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))  NULLS FIRST, TYPEOF(DISTINCT json_patch(vt1.c0, vt1.c0)));
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (CASE WHEN -505598983 THEN vt0.c0 ELSE vt1.c0 END IN ((((vt0.c0))<=((vt0.c0))))) WHERE (CAST(highlight(0Xffffffffef149787, vt0.c0, vt1.c0, vt1.c0) AS INTEGER)) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))  NULLS FIRST, TYPEOF(DISTINCT json_patch(vt1.c0, vt1.c0));
SELECT SUM(count) FROM (SELECT ((CAST(highlight(0Xffffffffef149787, vt0.c0, vt1.c0, vt1.c0) AS INTEGER)) IS TRUE)  as count FROM vt0 NOT INDEXED CROSS JOIN vt1 ON (CASE WHEN -505598983 THEN vt0.c0 ELSE vt1.c0 END IN ((((vt0.c0))<=((vt0.c0))))) ORDER BY ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0))))  NULLS FIRST, TYPEOF(DISTINCT json_patch(vt1.c0, vt1.c0)));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY rt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c0)<(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY rt0.c1  NULLS FIRST;
SELECT * FROM vt0, t0, rt0, vt1, t2 WHERE ((+ (json_array(0.43872634808149147, t0.c0)))) ORDER BY (((t2.c0)) NOT BETWEEN (((((rt0.c3))<((rt0.c0))))) AND ((((((t2.c1)AND(vt0.c0)))AND(t0.c2)))))  NULLS FIRST, (((CASE WHEN rt0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((t2.c2)>(t2.c0))))<(((rt0.c3 IN ()), t0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (json_array(0.43872634808149147, t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0, vt1, t2 ORDER BY (((t2.c0)) NOT BETWEEN (((((rt0.c3))<((rt0.c0))))) AND ((((((t2.c1)AND(vt0.c0)))AND(t0.c2)))))  NULLS FIRST, (((CASE WHEN rt0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((t2.c2)>(t2.c0))))<(((rt0.c3 IN ()), t0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM vt0, t0, rt0, vt1, t2 WHERE ((+ (json_array(0.43872634808149147, t0.c0)))) ORDER BY (((t2.c0)) NOT BETWEEN (((((rt0.c3))<((rt0.c0))))) AND ((((((t2.c1)AND(vt0.c0)))AND(t0.c2)))))  NULLS FIRST, (((CASE WHEN rt0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((t2.c2)>(t2.c0))))<(((rt0.c3 IN ()), t0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (json_array(0.43872634808149147, t0.c0)))) IS TRUE)  as count FROM vt0, t0, rt0, vt1, t2 ORDER BY (((t2.c0)) NOT BETWEEN (((((rt0.c3))<((rt0.c0))))) AND ((((((t2.c1)AND(vt0.c0)))AND(t0.c2)))))  NULLS FIRST, (((CASE WHEN rt0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((t2.c2)>(t2.c0))))<(((rt0.c3 IN ()), t0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL)))) DESC  NULLS LAST);
SELECT * FROM vt0, t0, rt0, vt1, t2 WHERE ((+ (json_array(0.43872634808149147, t0.c0)))) ORDER BY (((t2.c0)) NOT BETWEEN (((((rt0.c3))<((rt0.c0))))) AND ((((((t2.c1)AND(vt0.c0)))AND(t0.c2)))))  NULLS FIRST, (((CASE WHEN rt0.c1 THEN t0.c2 END, ((t0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c3)), ((t2.c2)>(t2.c0))))<(((rt0.c3 IN ()), t0.c1 COLLATE BINARY, ((rt0.c0) NOT NULL)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, rt0, t0, vt1 WHERE ((((t2.c0)) NOT BETWEEN ((TRIM(t2.c0, t2.c0))) AND (((rt0.c2 IN ()))))) ORDER BY (~ ((- (t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) NOT BETWEEN ((TRIM(t2.c0, t2.c0))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM t2, rt0 NOT INDEXED, t0, vt1 ORDER BY (~ ((- (t2.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, rt0, t0, vt1 WHERE ((((t2.c0)) NOT BETWEEN ((TRIM(t2.c0, t2.c0))) AND (((rt0.c2 IN ()))))) ORDER BY (~ ((- (t2.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t2.c0)) NOT BETWEEN ((TRIM(t2.c0, t2.c0))) AND (((rt0.c2 IN ()))))) IS TRUE)  as count FROM t2, rt0 NOT INDEXED, t0, vt1 ORDER BY (~ ((- (t2.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, rt0, t0, vt1 WHERE ((((t2.c0)) NOT BETWEEN ((TRIM(t2.c0, t2.c0))) AND (((rt0.c2 IN ()))))) ORDER BY (~ ((- (t2.c0))))  NULLS FIRST;
SELECT ALL * FROM t2, rt0 WHERE (((((((((((t2.c2)OR(t2.c2)))AND(rt0.c1)))OR(t2.c0)))AND(-1.689952041E9)))IS(((t2.c2) NOT NULL)))) ORDER BY ((((rt0.c1)OR(t2.c0)))AND('147765048')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c2)OR(t2.c2)))AND(rt0.c1)))OR(t2.c0)))AND(-1.689952041E9)))IS(((t2.c2) NOT NULL)))) IS TRUE)  as count FROM t2, rt0 ORDER BY ((((rt0.c1)OR(t2.c0)))AND('147765048')) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t2, rt0 WHERE (((((((((((t2.c2)OR(t2.c2)))AND(rt0.c1)))OR(t2.c0)))AND(-1.689952041E9)))IS(((t2.c2) NOT NULL)))) ORDER BY ((((rt0.c1)OR(t2.c0)))AND('147765048')) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((t2.c2)OR(t2.c2)))AND(rt0.c1)))OR(t2.c0)))AND(-1.689952041E9)))IS(((t2.c2) NOT NULL)))) IS TRUE)  as count FROM t2, rt0 ORDER BY ((((rt0.c1)OR(t2.c0)))AND('147765048')) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t2, rt0 WHERE (((((((((((t2.c2)OR(t2.c2)))AND(rt0.c1)))OR(t2.c0)))AND(-1.689952041E9)))IS(((t2.c2) NOT NULL)))) ORDER BY ((((rt0.c1)OR(t2.c0)))AND('147765048')) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t2, rt0, vt1, vt0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t2, rt0, vt1, vt0);
SELECT ALL * FROM t2, rt0, vt1, vt0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((HEX(rt0.c1 COLLATE BINARY)) IS TRUE)  as count FROM t2, rt0, vt1, vt0);
SELECT ALL * FROM t2, rt0, vt1, vt0 WHERE (HEX(rt0.c1 COLLATE BINARY));
SELECT ALL * FROM vt1, t2, vt0 RIGHT OUTER JOIN t0 ON json(((t2.c1) ISNULL)) WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM vt1, t2, vt0 RIGHT OUTER JOIN t0 ON json(((t2.c1) ISNULL)));
SELECT ALL * FROM vt1, t2, vt0 RIGHT OUTER JOIN t0 ON json(((t2.c1) ISNULL)) WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM vt1, t2, vt0 RIGHT OUTER JOIN t0 ON json(((t2.c1) ISNULL)));
SELECT ALL * FROM vt1, t2, vt0 RIGHT OUTER JOIN t0 ON json(((t2.c1) ISNULL)) WHERE (t2.c2);
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((0.6034717327683046) BETWEEN (t0.c0) AND (vt0.c0)))<=(((vt1.c0)IS(vt0.c0))))) ORDER BY (((((t0.c2))>=((t0.c1))))AND(((t0.c1)IS(0.7907411841035539))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6034717327683046) BETWEEN (t0.c0) AND (vt0.c0)))<=(((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (((((t0.c2))>=((t0.c1))))AND(((t0.c1)IS(0.7907411841035539)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((0.6034717327683046) BETWEEN (t0.c0) AND (vt0.c0)))<=(((vt1.c0)IS(vt0.c0))))) ORDER BY (((((t0.c2))>=((t0.c1))))AND(((t0.c1)IS(0.7907411841035539))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6034717327683046) BETWEEN (t0.c0) AND (vt0.c0)))<=(((vt1.c0)IS(vt0.c0))))) IS TRUE)  as count FROM vt0, t0, rt0, vt1 ORDER BY (((((t0.c2))>=((t0.c1))))AND(((t0.c1)IS(0.7907411841035539)))));
SELECT ALL COUNT(*) FROM vt0, t0, rt0, vt1 WHERE (((((0.6034717327683046) BETWEEN (t0.c0) AND (vt0.c0)))<=(((vt1.c0)IS(vt0.c0))))) ORDER BY (((((t0.c2))>=((t0.c1))))AND(((t0.c1)IS(0.7907411841035539))));
SELECT * FROM t0, vt0, t2 CROSS JOIN vt1 ON ((((((((CAST(vt0.c0 AS REAL))OR(rt0.c3)))OR((((rt0.c2)) NOT BETWEEN ((t2.c1)) AND ((rt0.c2))))))AND(json_array(t0.c1, vt0.c0, vt0.c0, t0.c0))))AND(CAST(t0.c1 AS BLOB))) INNER JOIN rt0 ON JULIANDAY((('1726015136') ISNULL), ((t2.c0)-(NULL)), ((vt1.c0)AND(vt1.c0))) WHERE (((((((rt0.c0) IS TRUE))OR((t0.c2 IN ()))))AND(((((t0.c0)AND(t2.c1)))OR(rt0.c3))))) ORDER BY CASE WHEN ((t0.c2)<<(1726015136)) THEN ((t0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) IS TRUE))OR((t0.c2 IN ()))))AND(((((t0.c0)AND(t2.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt0, t2 NOT INDEXED CROSS JOIN vt1 ON ((((((((CAST(vt0.c0 AS REAL))OR(rt0.c3)))OR((((rt0.c2)) NOT BETWEEN ((t2.c1)) AND ((rt0.c2))))))AND(json_array(t0.c1, vt0.c0, vt0.c0, t0.c0))))AND(CAST(t0.c1 AS BLOB))) INNER JOIN rt0 ON JULIANDAY((('1726015136') ISNULL), ((t2.c0)-(NULL)), ((vt1.c0)AND(vt1.c0))) ORDER BY CASE WHEN ((t0.c2)<<(1726015136)) THEN ((t0.c1) IS FALSE) END);
SELECT * FROM t0, vt0, t2 CROSS JOIN vt1 ON ((((((((CAST(vt0.c0 AS REAL))OR(rt0.c3)))OR((((rt0.c2)) NOT BETWEEN ((t2.c1)) AND ((rt0.c2))))))AND(json_array(t0.c1, vt0.c0, vt0.c0, t0.c0))))AND(CAST(t0.c1 AS BLOB))) INNER JOIN rt0 ON JULIANDAY((('1726015136') ISNULL), ((t2.c0)-(NULL)), ((vt1.c0)AND(vt1.c0))) WHERE (((((((rt0.c0) IS TRUE))OR((t0.c2 IN ()))))AND(((((t0.c0)AND(t2.c1)))OR(rt0.c3))))) ORDER BY CASE WHEN ((t0.c2)<<(1726015136)) THEN ((t0.c1) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0) IS TRUE))OR((t0.c2 IN ()))))AND(((((t0.c0)AND(t2.c1)))OR(rt0.c3))))) IS TRUE)  as count FROM t0, vt0, t2 NOT INDEXED CROSS JOIN vt1 ON ((((((((CAST(vt0.c0 AS REAL))OR(rt0.c3)))OR((((rt0.c2)) NOT BETWEEN ((t2.c1)) AND ((rt0.c2))))))AND(json_array(t0.c1, vt0.c0, vt0.c0, t0.c0))))AND(CAST(t0.c1 AS BLOB))) INNER JOIN rt0 ON JULIANDAY((('1726015136') ISNULL), ((t2.c0)-(NULL)), ((vt1.c0)AND(vt1.c0))) ORDER BY CASE WHEN ((t0.c2)<<(1726015136)) THEN ((t0.c1) IS FALSE) END);
SELECT * FROM t0, vt0, t2 CROSS JOIN vt1 ON ((((((((CAST(vt0.c0 AS REAL))OR(rt0.c3)))OR((((rt0.c2)) NOT BETWEEN ((t2.c1)) AND ((rt0.c2))))))AND(json_array(t0.c1, vt0.c0, vt0.c0, t0.c0))))AND(CAST(t0.c1 AS BLOB))) INNER JOIN rt0 ON JULIANDAY((('1726015136') ISNULL), ((t2.c0)-(NULL)), ((vt1.c0)AND(vt1.c0))) WHERE (((((((rt0.c0) IS TRUE))OR((t0.c2 IN ()))))AND(((((t0.c0)AND(t2.c1)))OR(rt0.c3))))) ORDER BY CASE WHEN ((t0.c2)<<(1726015136)) THEN ((t0.c1) IS FALSE) END;
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t2 ON t2.c0 CROSS JOIN t0 ON ((LOWER(t2.c2))AND(UNLIKELY(vt1.c0))) WHERE ((((t0.c1 IN ())) NOT NULL)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<(((t0.c1 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t2 ON t2.c0 CROSS JOIN t0 ON ((LOWER(t2.c2))AND(UNLIKELY(vt1.c0))) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<(((t0.c1 IN ())))) DESC);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t2 ON t2.c0 CROSS JOIN t0 ON ((LOWER(t2.c2))AND(UNLIKELY(vt1.c0))) WHERE ((((t0.c1 IN ())) NOT NULL)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<(((t0.c1 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t2 ON t2.c0 CROSS JOIN t0 ON ((LOWER(t2.c2))AND(UNLIKELY(vt1.c0))) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<(((t0.c1 IN ())))) DESC);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t2 ON t2.c0 CROSS JOIN t0 ON ((LOWER(t2.c2))AND(UNLIKELY(vt1.c0))) WHERE ((((t0.c1 IN ())) NOT NULL)) ORDER BY (((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))))<(((t0.c1 IN ())))) DESC;
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)OR('I0')))AND(t0.c1)))OR(t2.c1)))OR('')) COLLATE BINARY WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((t2.c1, rt0.c1, 'jpvNCPLjD')) AND ((t2.c1, rt0.c0, rt0.c2)))) AND (CASE WHEN t2.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((t2.c1, rt0.c1, 'jpvNCPLjD')) AND ((t2.c1, rt0.c0, rt0.c2)))) AND (CASE WHEN t2.c0 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0, t2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)OR('I0')))AND(t0.c1)))OR(t2.c1)))OR('')) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)OR('I0')))AND(t0.c1)))OR(t2.c1)))OR('')) COLLATE BINARY WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((t2.c1, rt0.c1, 'jpvNCPLjD')) AND ((t2.c1, rt0.c0, rt0.c2)))) AND (CASE WHEN t2.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((t2.c1, rt0.c1, 'jpvNCPLjD')) AND ((t2.c1, rt0.c0, rt0.c2)))) AND (CASE WHEN t2.c0 THEN rt0.c1 ELSE rt0.c1 END))) IS TRUE)  as count FROM vt0, rt0, t2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)OR('I0')))AND(t0.c1)))OR(t2.c1)))OR('')) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NOT INDEXED, rt0, t2 RIGHT OUTER JOIN t0 ON ((((((((t0.c2)OR('I0')))AND(t0.c1)))OR(t2.c1)))OR('')) COLLATE BINARY WHERE (((CAST(rt0.c3 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((t2.c1, rt0.c1, 'jpvNCPLjD')) AND ((t2.c1, rt0.c0, rt0.c2)))) AND (CASE WHEN t2.c0 THEN rt0.c1 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM t2, t0, vt0, rt0, vt1 WHERE (t0.c1) ORDER BY (((rt0.c1) BETWEEN (t2.c0) AND (t2.c0)) IN ()) ASC, NULL, ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t2.c2)))GLOB(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t2.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t2 NOT INDEXED, t0, vt0, rt0, vt1 ORDER BY (((rt0.c1) BETWEEN (t2.c0) AND (t2.c0)) IN ()) ASC, NULL, ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t2.c2)))GLOB(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t2.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0, vt0, rt0, vt1 WHERE (t0.c1) ORDER BY (((rt0.c1) BETWEEN (t2.c0) AND (t2.c0)) IN ()) ASC, NULL, ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t2.c2)))GLOB(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t2.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM t2 NOT INDEXED, t0, vt0, rt0, vt1 ORDER BY (((rt0.c1) BETWEEN (t2.c0) AND (t2.c0)) IN ()) ASC, NULL, ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t2.c2)))GLOB(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t2.c1)))AND(vt0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0, vt0, rt0, vt1 WHERE (t0.c1) ORDER BY (((rt0.c1) BETWEEN (t2.c0) AND (t2.c0)) IN ()) ASC, NULL, ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (t2.c2)))GLOB(((((((((vt1.c0)OR(rt0.c2)))OR(rt0.c1)))OR(t2.c1)))AND(vt0.c0))))  NULLS LAST;
SELECT * FROM vt1 WHERE ((+ (((NULL)AND(vt1.c0))))) ORDER BY x'', ((((vt1.c0)LIKE(0.021673024220083548)))=(CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((NULL)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'', ((((vt1.c0)LIKE(0.021673024220083548)))=(CAST(vt1.c0 AS TEXT))) DESC);
SELECT * FROM vt1 WHERE ((+ (((NULL)AND(vt1.c0))))) ORDER BY x'', ((((vt1.c0)LIKE(0.021673024220083548)))=(CAST(vt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT (((+ (((NULL)AND(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY x'', ((((vt1.c0)LIKE(0.021673024220083548)))=(CAST(vt1.c0 AS TEXT))) DESC);
SELECT * FROM vt1 WHERE ((+ (((NULL)AND(vt1.c0))))) ORDER BY x'', ((((vt1.c0)LIKE(0.021673024220083548)))=(CAST(vt1.c0 AS TEXT))) DESC;
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((t0.c1) NOT NULL)) ISNULL) WHERE ((('-894304830' COLLATE BINARY)==(((t0.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((('-894304830' COLLATE BINARY)==(((t0.c1)&(NULL))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c1) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((t0.c1) NOT NULL)) ISNULL) WHERE ((('-894304830' COLLATE BINARY)==(((t0.c1)&(NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((('-894304830' COLLATE BINARY)==(((t0.c1)&(NULL))))) IS TRUE)  as count FROM t0 CROSS JOIN vt1 ON ((((t0.c1) NOT NULL)) ISNULL));
SELECT COUNT(*) FROM t0 CROSS JOIN vt1 ON ((((t0.c1) NOT NULL)) ISNULL) WHERE ((('-894304830' COLLATE BINARY)==(((t0.c1)&(NULL)))));
SELECT ALL * FROM t0, vt1, vt0, t2, rt0 WHERE (((((vt0.c0)IS(t0.c0)))GLOB(LIKE(rt0.c0, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(t0.c0)))GLOB(LIKE(rt0.c0, t0.c2)))) IS TRUE)  as count FROM t0, vt1, vt0, t2, rt0);
SELECT ALL * FROM t0, vt1, vt0, t2, rt0 WHERE (((((vt0.c0)IS(t0.c0)))GLOB(LIKE(rt0.c0, t0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)IS(t0.c0)))GLOB(LIKE(rt0.c0, t0.c2)))) IS TRUE)  as count FROM t0, vt1, vt0, t2, rt0);
SELECT ALL * FROM t0, vt1, vt0, t2, rt0 WHERE (((((vt0.c0)IS(t0.c0)))GLOB(LIKE(rt0.c0, t0.c2))));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN rt0 ON (((t2.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(t2.c1)))) AND ((((t2.c0) BETWEEN (t2.c2) AND (rt0.c1))))) WHERE (CASE CASE t2.c2  WHEN t2.c1 THEN rt0.c2 END  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))AND(t2.c2)))OR(rt0.c3)) THEN (((rt0.c2))>((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE t2.c2  WHEN t2.c1 THEN rt0.c2 END  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))AND(t2.c2)))OR(rt0.c3)) THEN (((rt0.c2))>((rt0.c1))) END) IS TRUE)  as count FROM t2 FULL OUTER JOIN rt0 ON (((t2.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(t2.c1)))) AND ((((t2.c0) BETWEEN (t2.c2) AND (rt0.c1))))));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN rt0 ON (((t2.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(t2.c1)))) AND ((((t2.c0) BETWEEN (t2.c2) AND (rt0.c1))))) WHERE (CASE CASE t2.c2  WHEN t2.c1 THEN rt0.c2 END  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))AND(t2.c2)))OR(rt0.c3)) THEN (((rt0.c2))>((rt0.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE CASE t2.c2  WHEN t2.c1 THEN rt0.c2 END  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))AND(t2.c2)))OR(rt0.c3)) THEN (((rt0.c2))>((rt0.c1))) END) IS TRUE)  as count FROM t2 FULL OUTER JOIN rt0 ON (((t2.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(t2.c1)))) AND ((((t2.c0) BETWEEN (t2.c2) AND (rt0.c1))))));
SELECT COUNT(*) FROM t2 FULL OUTER JOIN rt0 ON (((t2.c2)) NOT BETWEEN ((((((rt0.c2)AND(rt0.c0)))AND(t2.c1)))) AND ((((t2.c0) BETWEEN (t2.c2) AND (rt0.c1))))) WHERE (CASE CASE t2.c2  WHEN t2.c1 THEN rt0.c2 END  WHEN ((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c3)))AND(t2.c2)))OR(rt0.c3)) THEN (((rt0.c2))>((rt0.c1))) END);
SELECT ALL COUNT(*) FROM t2, t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(t2.c0 AS NUMERIC) IN ()) WHERE (CASE WHEN CAST(t2.c0 AS INTEGER) THEN 0.4180275730391443 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t2.c0 AS INTEGER) THEN 0.4180275730391443 END) IS TRUE)  as count FROM t2, t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(t2.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM t2, t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(t2.c0 AS NUMERIC) IN ()) WHERE (CASE WHEN CAST(t2.c0 AS INTEGER) THEN 0.4180275730391443 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(t2.c0 AS INTEGER) THEN 0.4180275730391443 END) IS TRUE)  as count FROM t2, t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(t2.c0 AS NUMERIC) IN ()));
SELECT ALL COUNT(*) FROM t2, t0, rt0, vt1 RIGHT OUTER JOIN vt0 ON (CAST(t2.c0 AS NUMERIC) IN ()) WHERE (CASE WHEN CAST(t2.c0 AS INTEGER) THEN 0.4180275730391443 END);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t2 ON (((rt0.c0, x'5e1389da', rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((('35N?xcX!')==(t0.c0)), LIKELY(rt0.c2), (((rt0.c1, t2.c1, t0.c0))!=((rt0.c2, t0.c1, 0.7037921300186625))), CAST(rt0.c0 AS BLOB), (((t0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c1))))) AND ((CAST(t2.c1 AS INTEGER), ((rt0.c3) IS TRUE), t2.c2 COLLATE NOCASE, (t2.c2 IN ()), t0.c0))) CROSS JOIN t0 ON ((((((t0.c0)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((((rt0.c1))>=((t2.c0)))) AND (((((t0.c1)OR(t0.c2)))OR(t2.c2)))) WHERE (((((t2.c2)/(t0.c0)))AND(CASE WHEN t2.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c2 WHEN '216106708' THEN t2.c2 WHEN t2.c0 THEN t2.c0 END))) ORDER BY CAST(CAST(t0.c2 AS BLOB) AS NUMERIC) ASC  NULLS FIRST, (((t0.c0 IN (t2.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2)/(t0.c0)))AND(CASE WHEN t2.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c2 WHEN '216106708' THEN t2.c2 WHEN t2.c0 THEN t2.c0 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t2 ON (((rt0.c0, x'5e1389da', rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((('35N?xcX!')==(t0.c0)), LIKELY(rt0.c2), (((rt0.c1, t2.c1, t0.c0))<>((rt0.c2, t0.c1, 0.7037921300186625))), CAST(rt0.c0 AS BLOB), (((t0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c1))))) AND ((CAST(t2.c1 AS INTEGER), ((rt0.c3) IS TRUE), t2.c2 COLLATE NOCASE, (t2.c2 IN ()), t0.c0))) CROSS JOIN t0 ON ((((((t0.c0)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((((rt0.c1))>=((t2.c0)))) AND (((((t0.c1)OR(t0.c2)))OR(t2.c2)))) ORDER BY CAST(CAST(t0.c2 AS BLOB) AS NUMERIC) ASC  NULLS FIRST, (((t0.c0 IN (t2.c1))) NOTNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN t2 ON (((rt0.c0, x'5e1389da', rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((('35N?xcX!')==(t0.c0)), LIKELY(rt0.c2), (((rt0.c1, t2.c1, t0.c0))!=((rt0.c2, t0.c1, 0.7037921300186625))), CAST(rt0.c0 AS BLOB), (((t0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c1))))) AND ((CAST(t2.c1 AS INTEGER), ((rt0.c3) IS TRUE), t2.c2 COLLATE NOCASE, (t2.c2 IN ()), t0.c0))) CROSS JOIN t0 ON ((((((t0.c0)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((((rt0.c1))>=((t2.c0)))) AND (((((t0.c1)OR(t0.c2)))OR(t2.c2)))) WHERE (((((t2.c2)/(t0.c0)))AND(CASE WHEN t2.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c2 WHEN '216106708' THEN t2.c2 WHEN t2.c0 THEN t2.c0 END))) ORDER BY CAST(CAST(t0.c2 AS BLOB) AS NUMERIC) ASC  NULLS FIRST, (((t0.c0 IN (t2.c1))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c2)/(t0.c0)))AND(CASE WHEN t2.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c2 WHEN '216106708' THEN t2.c2 WHEN t2.c0 THEN t2.c0 END))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t2 ON (((rt0.c0, x'5e1389da', rt0.c3, rt0.c1, rt0.c3)) NOT BETWEEN (((('35N?xcX!')==(t0.c0)), LIKELY(rt0.c2), (((rt0.c1, t2.c1, t0.c0))<>((rt0.c2, t0.c1, 0.7037921300186625))), CAST(rt0.c0 AS BLOB), (((t0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c1))))) AND ((CAST(t2.c1 AS INTEGER), ((rt0.c3) IS TRUE), t2.c2 COLLATE NOCASE, (t2.c2 IN ()), t0.c0))) CROSS JOIN t0 ON ((((((t0.c0)OR(t0.c1)))OR(t0.c0))) NOT BETWEEN ((((rt0.c1))>=((t2.c0)))) AND (((((t0.c1)OR(t0.c2)))OR(t2.c2)))) ORDER BY CAST(CAST(t0.c2 AS BLOB) AS NUMERIC) ASC  NULLS FIRST, (((t0.c0 IN (t2.c1))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 CROSS JOIN t2 ON (CASE t2.c1  WHEN t2.c2 THEN vt0.c0 ELSE t2.c1 END IN ()) WHERE ('-894304830' COLLATE RTRIM) ORDER BY CAST((t2.c1 IN ()) AS REAL)  NULLS LAST, ((((((((((((CASE WHEN t2.c2 THEN vt0.c0 END)OR(NULL)))OR(x'' COLLATE BINARY)))OR(TRIM(t2.c1, t2.c0))))OR(((t2.c1) IS TRUE))))AND(((t2.c2)GLOB(t2.c0)))))OR(((((0Xfffffffff6b843c2)OR(vt0.c0)))AND(t2.c2))));
SELECT SUM(count) FROM (SELECT ALL (('-894304830' COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t2 ON (CASE t2.c1  WHEN t2.c2 THEN vt0.c0 ELSE t2.c1 END IN ()) ORDER BY CAST((t2.c1 IN ()) AS REAL)  NULLS LAST, ((((((((((((CASE WHEN t2.c2 THEN vt0.c0 END)OR(NULL)))OR(x'' COLLATE BINARY)))OR(TRIM(t2.c1, t2.c0))))OR(((t2.c1) IS TRUE))))AND(((t2.c2)GLOB(t2.c0)))))OR(((((0xfffffffff6b843c2)OR(vt0.c0)))AND(t2.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t2 ON (CASE t2.c1  WHEN t2.c2 THEN vt0.c0 ELSE t2.c1 END IN ()) WHERE ('-894304830' COLLATE RTRIM) ORDER BY CAST((t2.c1 IN ()) AS REAL)  NULLS LAST, ((((((((((((CASE WHEN t2.c2 THEN vt0.c0 END)OR(NULL)))OR(x'' COLLATE BINARY)))OR(TRIM(t2.c1, t2.c0))))OR(((t2.c1) IS TRUE))))AND(((t2.c2)GLOB(t2.c0)))))OR(((((0Xfffffffff6b843c2)OR(vt0.c0)))AND(t2.c2))));
SELECT SUM(count) FROM (SELECT ALL (('-894304830' COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t2 ON (CASE t2.c1  WHEN t2.c2 THEN vt0.c0 ELSE t2.c1 END IN ()) ORDER BY CAST((t2.c1 IN ()) AS REAL)  NULLS LAST, ((((((((((((CASE WHEN t2.c2 THEN vt0.c0 END)OR(NULL)))OR(x'' COLLATE BINARY)))OR(TRIM(t2.c1, t2.c0))))OR(((t2.c1) IS TRUE))))AND(((t2.c2)GLOB(t2.c0)))))OR(((((0xfffffffff6b843c2)OR(vt0.c0)))AND(t2.c2)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN t2 ON (CASE t2.c1  WHEN t2.c2 THEN vt0.c0 ELSE t2.c1 END IN ()) WHERE ('-894304830' COLLATE RTRIM) ORDER BY CAST((t2.c1 IN ()) AS REAL)  NULLS LAST, ((((((((((((CASE WHEN t2.c2 THEN vt0.c0 END)OR(NULL)))OR(x'' COLLATE BINARY)))OR(TRIM(t2.c1, t2.c0))))OR(((t2.c1) IS TRUE))))AND(((t2.c2)GLOB(t2.c0)))))OR(((((0Xfffffffff6b843c2)OR(vt0.c0)))AND(t2.c2))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((0Xffffffffb2146e26) IS TRUE) FULL OUTER JOIN vt1 ON LIKELY(TRIM(rt0.c3)) WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY (((vt1.c0)!=(vt0.c0)) IN (IFNULL(vt1.c0, rt0.c0), (('986675309') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((0xffffffffb2146e26) IS TRUE) FULL OUTER JOIN vt1 ON LIKELY(TRIM(rt0.c3)) ORDER BY (((vt1.c0)<>(vt0.c0)) IN (IFNULL(vt1.c0, rt0.c0), (('986675309') NOT NULL))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((0Xffffffffb2146e26) IS TRUE) FULL OUTER JOIN vt1 ON LIKELY(TRIM(rt0.c3)) WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY (((vt1.c0)!=(vt0.c0)) IN (IFNULL(vt1.c0, rt0.c0), (('986675309') NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c2 AS REAL) AS REAL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((0xffffffffb2146e26) IS TRUE) FULL OUTER JOIN vt1 ON LIKELY(TRIM(rt0.c3)) ORDER BY (((vt1.c0)<>(vt0.c0)) IN (IFNULL(vt1.c0, rt0.c0), (('986675309') NOT NULL))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON ((0Xffffffffb2146e26) IS TRUE) FULL OUTER JOIN vt1 ON LIKELY(TRIM(rt0.c3)) WHERE (CAST(CAST(rt0.c2 AS REAL) AS REAL)) ORDER BY (((vt1.c0)!=(vt0.c0)) IN (IFNULL(vt1.c0, rt0.c0), (('986675309') NOT NULL)));
SELECT ALL * FROM vt1, t2 WHERE ((((vt1.c0, x'', t2.c1)) BETWEEN (((~ (t2.c1)), ((t2.c1)%(t2.c0)), ((t2.c1) BETWEEN (vt1.c0) AND (t2.c2)))) AND (((((t2.c0, t2.c1, t2.c1)) NOT BETWEEN ((t2.c1, vt1.c0, vt1.c0)) AND ((t2.c1, vt1.c0, t2.c2))), (~ (x'')), (t2.c0 IN ()))))) ORDER BY ((t2.c2 COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN (t2.c2, t2.c1))) AND ('-1334802271')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', t2.c1)) BETWEEN (((~ (t2.c1)), ((t2.c1)%(t2.c0)), ((t2.c1) BETWEEN (vt1.c0) AND (t2.c2)))) AND (((((t2.c0, t2.c1, t2.c1)) NOT BETWEEN ((t2.c1, vt1.c0, vt1.c0)) AND ((t2.c1, vt1.c0, t2.c2))), (~ (x'')), (t2.c0 IN ()))))) IS TRUE)  as count FROM vt1, t2 ORDER BY ((t2.c2 COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN (t2.c2, t2.c1))) AND ('-1334802271')) ASC);
SELECT ALL * FROM vt1, t2 WHERE ((((vt1.c0, x'', t2.c1)) BETWEEN (((~ (t2.c1)), ((t2.c1)%(t2.c0)), ((t2.c1) BETWEEN (vt1.c0) AND (t2.c2)))) AND (((((t2.c0, t2.c1, t2.c1)) NOT BETWEEN ((t2.c1, vt1.c0, vt1.c0)) AND ((t2.c1, vt1.c0, t2.c2))), (~ (x'')), (t2.c0 IN ()))))) ORDER BY ((t2.c2 COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN (t2.c2, t2.c1))) AND ('-1334802271')) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, x'', t2.c1)) BETWEEN (((~ (t2.c1)), ((t2.c1)%(t2.c0)), ((t2.c1) BETWEEN (vt1.c0) AND (t2.c2)))) AND (((((t2.c0, t2.c1, t2.c1)) NOT BETWEEN ((t2.c1, vt1.c0, vt1.c0)) AND ((t2.c1, vt1.c0, t2.c2))), (~ (x'')), (t2.c0 IN ()))))) IS TRUE)  as count FROM vt1, t2 ORDER BY ((t2.c2 COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN (t2.c2, t2.c1))) AND ('-1334802271')) ASC);
SELECT ALL * FROM vt1, t2 WHERE ((((vt1.c0, x'', t2.c1)) BETWEEN (((~ (t2.c1)), ((t2.c1)%(t2.c0)), ((t2.c1) BETWEEN (vt1.c0) AND (t2.c2)))) AND (((((t2.c0, t2.c1, t2.c1)) NOT BETWEEN ((t2.c1, vt1.c0, vt1.c0)) AND ((t2.c1, vt1.c0, t2.c2))), (~ (x'')), (t2.c0 IN ()))))) ORDER BY ((t2.c2 COLLATE BINARY) NOT BETWEEN ((vt1.c0 IN (t2.c2, t2.c1))) AND ('-1334802271')) ASC;
SELECT COUNT(*) FROM t0, rt0, vt1, vt0, t2 WHERE (((((vt1.c0)!=(rt0.c1))) ISNULL)) ORDER BY (((t2.c2 COLLATE NOCASE, TOTAL_CHANGES(), CAST(t0.c2 AS REAL)))>=(('', ((rt0.c1) IS TRUE), ((0Xffffffffb457e785) IS FALSE)))) ASC  NULLS LAST, ((((rt0.c0)LIKE(t2.c0))) NOT NULL) ASC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<>(rt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1, vt0, t2 ORDER BY (((t2.c2 COLLATE NOCASE, TOTAL_CHANGES(), CAST(t0.c2 AS REAL)))>=(('', ((rt0.c1) IS TRUE), ((0xffffffffb457e785) IS FALSE)))) ASC  NULLS LAST, ((((rt0.c0)LIKE(t2.c0))) NOT NULL) ASC, rt0.c1 ASC);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0, t2 WHERE (((((vt1.c0)!=(rt0.c1))) ISNULL)) ORDER BY (((t2.c2 COLLATE NOCASE, TOTAL_CHANGES(), CAST(t0.c2 AS REAL)))>=(('', ((rt0.c1) IS TRUE), ((0Xffffffffb457e785) IS FALSE)))) ASC  NULLS LAST, ((((rt0.c0)LIKE(t2.c0))) NOT NULL) ASC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<>(rt0.c1))) ISNULL)) IS TRUE)  as count FROM t0, rt0, vt1, vt0, t2 ORDER BY (((t2.c2 COLLATE NOCASE, TOTAL_CHANGES(), CAST(t0.c2 AS REAL)))>=(('', ((rt0.c1) IS TRUE), ((0xffffffffb457e785) IS FALSE)))) ASC  NULLS LAST, ((((rt0.c0)LIKE(t2.c0))) NOT NULL) ASC, rt0.c1 ASC);
SELECT COUNT(*) FROM t0, rt0, vt1, vt0, t2 WHERE (((((vt1.c0)!=(rt0.c1))) ISNULL)) ORDER BY (((t2.c2 COLLATE NOCASE, TOTAL_CHANGES(), CAST(t0.c2 AS REAL)))>=(('', ((rt0.c1) IS TRUE), ((0Xffffffffb457e785) IS FALSE)))) ASC  NULLS LAST, ((((rt0.c0)LIKE(t2.c0))) NOT NULL) ASC, rt0.c1 ASC;
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM t0 NOT INDEXED, rt0, vt0, vt1);
SELECT * FROM t0, rt0, vt0, vt1 WHERE ((~ (rt0.c1)) COLLATE BINARY);
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON (NOT ((((t2.c0))<((t2.c1))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL)) ISNULL) FULL OUTER JOIN rt0 ON (((('')>>(vt1.c0)))OR(((rt0.c3)!=(rt0.c2)))) WHERE (CAST(UNLIKELY(rt0.c0) AS NUMERIC)) ORDER BY NULL  NULLS LAST, ((((rt0.c2) ISNULL)) IS TRUE) DESC, (((((((((rt0.c2 IN ()))AND(ABS(t2.c0))))OR(((rt0.c2) NOT NULL))))AND((('')AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN t2.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON (NOT ((((t2.c0))<((t2.c1))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL)) ISNULL) FULL OUTER JOIN rt0 ON (((('')>>(vt1.c0)))OR(((rt0.c3)<>(rt0.c2)))) ORDER BY NULL  NULLS LAST, ((((rt0.c2) ISNULL)) IS TRUE) DESC, (((((((((rt0.c2 IN ()))AND(ABS(t2.c0))))OR(((rt0.c2) NOT NULL))))AND((('')AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN t2.c0 END))  NULLS FIRST);
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON (NOT ((((t2.c0))<((t2.c1))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL)) ISNULL) FULL OUTER JOIN rt0 ON (((('')>>(vt1.c0)))OR(((rt0.c3)!=(rt0.c2)))) WHERE (CAST(UNLIKELY(rt0.c0) AS NUMERIC)) ORDER BY NULL  NULLS LAST, ((((rt0.c2) ISNULL)) IS TRUE) DESC, (((((((((rt0.c2 IN ()))AND(ABS(t2.c0))))OR(((rt0.c2) NOT NULL))))AND((('')AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN t2.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(UNLIKELY(rt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON (NOT ((((t2.c0))<((t2.c1))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) NOTNULL)) ISNULL) FULL OUTER JOIN rt0 ON (((('')>>(vt1.c0)))OR(((rt0.c3)<>(rt0.c2)))) ORDER BY NULL  NULLS LAST, ((((rt0.c2) ISNULL)) IS TRUE) DESC, (((((((((rt0.c2 IN ()))AND(ABS(t2.c0))))OR(((rt0.c2) NOT NULL))))AND((('')AND(vt0.c0)))))AND(CASE WHEN vt0.c0 THEN t2.c0 END))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (('0.01862116352182963' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('0.01862116352182963' IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (('0.01862116352182963' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('0.01862116352182963' IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t0 WHERE (('0.01862116352182963' IN ()));
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON 0xffffffffe552943d FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE LEFT OUTER JOIN t2 ON LIKELY(CAST(t0.c2 AS INTEGER)) WHERE (((((0.1677127391220572)<<(t0.c1)))<(((((vt0.c0)OR(t0.c2)))OR(t0.c0))))) ORDER BY (+ (((rt0.c1) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.1677127391220572)<<(t0.c1)))<(((((vt0.c0)OR(t0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON 0xffffffffe552943d FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE LEFT OUTER JOIN t2 ON LIKELY(CAST(t0.c2 AS INTEGER)) ORDER BY (+ (((rt0.c1) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON 0xffffffffe552943d FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE LEFT OUTER JOIN t2 ON LIKELY(CAST(t0.c2 AS INTEGER)) WHERE (((((0.1677127391220572)<<(t0.c1)))<(((((vt0.c0)OR(t0.c2)))OR(t0.c0))))) ORDER BY (+ (((rt0.c1) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((0.1677127391220572)<<(t0.c1)))<(((((vt0.c0)OR(t0.c2)))OR(t0.c0))))) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON 0xffffffffe552943d FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE LEFT OUTER JOIN t2 ON LIKELY(CAST(t0.c2 AS INTEGER)) ORDER BY (+ (((rt0.c1) IS FALSE))) ASC  NULLS LAST);
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON 0xffffffffe552943d FULL OUTER JOIN t0 ON CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c0 END COLLATE NOCASE LEFT OUTER JOIN t2 ON LIKELY(CAST(t0.c2 AS INTEGER)) WHERE (((((0.1677127391220572)<<(t0.c1)))<(((((vt0.c0)OR(t0.c2)))OR(t0.c0))))) ORDER BY (+ (((rt0.c1) IS FALSE))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN t2 ON (MAX(rt0.c1, rt0.c0) IN ()) FULL OUTER JOIN rt0 ON json_array_length((t2.c2 IN ()), CAST(rt0.c3 AS BLOB)) WHERE ((((((t2.c1, t2.c2, vt0.c0, rt0.c0, vt0.c0))<=((x'', t2.c1, rt0.c3, vt0.c0, vt0.c0))))||(((t2.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c0 COLLATE RTRIM)+(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t2.c1, t2.c2, vt0.c0, rt0.c0, vt0.c0))<=((x'', t2.c1, rt0.c3, vt0.c0, vt0.c0))))||(((t2.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN t2 ON (MAX(rt0.c1, rt0.c0) IN ()) FULL OUTER JOIN rt0 ON json_array_length((t2.c2 IN ()), CAST(rt0.c3 AS BLOB)) ORDER BY ((rt0.c0 COLLATE RTRIM)+(vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN t2 ON (MAX(rt0.c1, rt0.c0) IN ()) FULL OUTER JOIN rt0 ON json_array_length((t2.c2 IN ()), CAST(rt0.c3 AS BLOB)) WHERE ((((((t2.c1, t2.c2, vt0.c0, rt0.c0, vt0.c0))<=((x'', t2.c1, rt0.c3, vt0.c0, vt0.c0))))||(((t2.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) ORDER BY ((rt0.c0 COLLATE RTRIM)+(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t2.c1, t2.c2, vt0.c0, rt0.c0, vt0.c0))<=((x'', t2.c1, rt0.c3, vt0.c0, vt0.c0))))||(((t2.c1) BETWEEN (vt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt1 ON (NOT (CAST(vt0.c0 AS BLOB))) RIGHT OUTER JOIN t2 ON (MAX(rt0.c1, rt0.c0) IN ()) FULL OUTER JOIN rt0 ON json_array_length((t2.c2 IN ()), CAST(rt0.c3 AS BLOB)) ORDER BY ((rt0.c0 COLLATE RTRIM)+(vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t2 CROSS JOIN t0 ON CASE ((t2.c2)OR(t2.c0))  WHEN CHAR(rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(t2.c1)) WHEN (NOT (0.5509274750014689)) THEN CAST(rt0.c1 AS INTEGER) WHEN t2.c1 THEN (((t0.c2, t0.c1, t0.c0)) BETWEEN ((0.06376681935150552, rt0.c2, rt0.c1)) AND (('-1886396946', t0.c2, '936994333'))) END WHERE (((t0.c0 COLLATE RTRIM)<>(((t2.c0)+(t0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<>(((t2.c0)+(t0.c2))))) IS TRUE)  as count FROM vt0, rt0, t2 CROSS JOIN t0 ON CASE ((t2.c2)OR(t2.c0))  WHEN CHAR(rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(t2.c1)) WHEN (NOT (0.5509274750014689)) THEN CAST(rt0.c1 AS INTEGER) WHEN t2.c1 THEN (((t0.c2, t0.c1, t0.c0)) BETWEEN ((0.06376681935150552, rt0.c2, rt0.c1)) AND (('-1886396946', t0.c2, '936994333'))) END ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t2 CROSS JOIN t0 ON CASE ((t2.c2)OR(t2.c0))  WHEN CHAR(rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(t2.c1)) WHEN (NOT (0.5509274750014689)) THEN CAST(rt0.c1 AS INTEGER) WHEN t2.c1 THEN (((t0.c2, t0.c1, t0.c0)) BETWEEN ((0.06376681935150552, rt0.c2, rt0.c1)) AND (('-1886396946', t0.c2, '936994333'))) END WHERE (((t0.c0 COLLATE RTRIM)<>(((t2.c0)+(t0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE RTRIM)<>(((t2.c0)+(t0.c2))))) IS TRUE)  as count FROM vt0, rt0, t2 CROSS JOIN t0 ON CASE ((t2.c2)OR(t2.c0))  WHEN CHAR(rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(t2.c1)) WHEN (NOT (0.5509274750014689)) THEN CAST(rt0.c1 AS INTEGER) WHEN t2.c1 THEN (((t0.c2, t0.c1, t0.c0)) BETWEEN ((0.06376681935150552, rt0.c2, rt0.c1)) AND (('-1886396946', t0.c2, '936994333'))) END ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0, t2 CROSS JOIN t0 ON CASE ((t2.c2)OR(t2.c0))  WHEN CHAR(rt0.c2) THEN ((((rt0.c0)OR(vt0.c0)))OR(t2.c1)) WHEN (NOT (0.5509274750014689)) THEN CAST(rt0.c1 AS INTEGER) WHEN t2.c1 THEN (((t0.c2, t0.c1, t0.c0)) BETWEEN ((0.06376681935150552, rt0.c2, rt0.c1)) AND (('-1886396946', t0.c2, '936994333'))) END WHERE (((t0.c0 COLLATE RTRIM)<>(((t2.c0)+(t0.c2))))) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM t2 WHERE ((- ((((t2.c0, t2.c0, t2.c1)) BETWEEN ((t2.c0, '722621094', t2.c1)) AND ((t2.c1, t2.c1, t2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t2.c0, t2.c0, t2.c1)) BETWEEN ((t2.c0, '722621094', t2.c1)) AND ((t2.c1, t2.c1, t2.c1)))))) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE ((- ((((t2.c0, t2.c0, t2.c1)) BETWEEN ((t2.c0, '722621094', t2.c1)) AND ((t2.c1, t2.c1, t2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t2.c0, t2.c0, t2.c1)) BETWEEN ((t2.c0, '722621094', t2.c1)) AND ((t2.c1, t2.c1, t2.c1)))))) IS TRUE)  as count FROM t2);
SELECT * FROM t2 WHERE ((- ((((t2.c0, t2.c0, t2.c1)) BETWEEN ((t2.c0, '722621094', t2.c1)) AND ((t2.c1, t2.c1, t2.c1))))));
SELECT ALL COUNT(*) FROM t0, vt0, t2, rt0, vt1 WHERE (((((t0.c2)OR(0.8556600600987833)))|(((rt0.c1)||(vt0.c0))))) ORDER BY ((((((t2.c0)OR(rt0.c2)))OR(t2.c2)))&(((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(0.8556600600987833)))|(((rt0.c1)||(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, t2, rt0, vt1 ORDER BY ((((((t2.c0)OR(rt0.c2)))OR(t2.c2)))&(((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM t0, vt0, t2, rt0, vt1 WHERE (((((t0.c2)OR(0.8556600600987833)))|(((rt0.c1)||(vt0.c0))))) ORDER BY ((((((t2.c0)OR(rt0.c2)))OR(t2.c2)))&(((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST, rt0.c0;
SELECT SUM(count) FROM (SELECT ((((((t0.c2)OR(0.8556600600987833)))|(((rt0.c1)||(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, t2, rt0, vt1 ORDER BY ((((((t2.c0)OR(rt0.c2)))OR(t2.c2)))&(((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST, rt0.c0);
SELECT ALL COUNT(*) FROM t0, vt0, t2, rt0, vt1 WHERE (((((t0.c2)OR(0.8556600600987833)))|(((rt0.c1)||(vt0.c0))))) ORDER BY ((((((t2.c0)OR(rt0.c2)))OR(t2.c2)))&(((((vt1.c0)AND(rt0.c1)))OR(rt0.c2)))) DESC  NULLS FIRST, rt0.c0;
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON vt0.c0);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) IS TRUE)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON vt0.c0);
SELECT ALL * FROM vt0, rt0 RIGHT OUTER JOIN vt1 ON vt0.c0 WHERE (((((rt0.c2) IS TRUE)) NOT BETWEEN (((vt1.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (((rt0.c1) IS FALSE))));
SELECT * FROM t0, t2, vt0, vt1, rt0 WHERE (CASE rt0.c2  WHEN x'' THEN rt0.c0 END COLLATE NOCASE) ORDER BY (NOT (rt0.c1)) ASC, (CASE WHEN rt0.c3 THEN vt1.c0 END IN ()), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN x'' THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, t2, vt0, vt1, rt0 ORDER BY (NOT (rt0.c1)) ASC, (CASE WHEN rt0.c3 THEN vt1.c0 END IN ()), vt0.c0  NULLS FIRST);
SELECT * FROM t0, t2, vt0, vt1, rt0 WHERE (CASE rt0.c2  WHEN x'' THEN rt0.c0 END COLLATE NOCASE) ORDER BY (NOT (rt0.c1)) ASC, (CASE WHEN rt0.c3 THEN vt1.c0 END IN ()), vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c2  WHEN x'' THEN rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM t0, t2, vt0, vt1, rt0 ORDER BY (NOT (rt0.c1)) ASC, (CASE WHEN rt0.c3 THEN vt1.c0 END IN ()), vt0.c0  NULLS FIRST);
SELECT * FROM t0, t2, vt0, vt1, rt0 WHERE (CASE rt0.c2  WHEN x'' THEN rt0.c0 END COLLATE NOCASE) ORDER BY (NOT (rt0.c1)) ASC, (CASE WHEN rt0.c3 THEN vt1.c0 END IN ()), vt0.c0  NULLS FIRST;
SELECT ALL * FROM t2, rt0, vt1 WHERE (COALESCE(vt1.c0, HEX(vt1.c0), (((t2.c0))==((''))), (((t2.c2)) NOT BETWEEN ((0.6402314536686448)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0, HEX(vt1.c0), (((t2.c0))=((''))), (((t2.c2)) NOT BETWEEN ((0.6402314536686448)) AND ((rt0.c2))))) IS TRUE)  as count FROM t2, rt0, vt1);
SELECT ALL * FROM t2, rt0, vt1 WHERE (COALESCE(vt1.c0, HEX(vt1.c0), (((t2.c0))==((''))), (((t2.c2)) NOT BETWEEN ((0.6402314536686448)) AND ((rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(vt1.c0, HEX(vt1.c0), (((t2.c0))=((''))), (((t2.c2)) NOT BETWEEN ((0.6402314536686448)) AND ((rt0.c2))))) IS TRUE)  as count FROM t2, rt0, vt1);
SELECT ALL * FROM t2, rt0, vt1 WHERE (COALESCE(vt1.c0, HEX(vt1.c0), (((t2.c0))==((''))), (((t2.c2)) NOT BETWEEN ((0.6402314536686448)) AND ((rt0.c2)))));
SELECT ALL * FROM t2 WHERE (((t2.c1)&(t2.c2)) COLLATE BINARY) ORDER BY ((t2.c1 COLLATE RTRIM)/(t2.c1 COLLATE RTRIM)), ((CAST(t2.c0 AS BLOB))/(t2.c1));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1)&(t2.c2)) COLLATE BINARY) IS TRUE)  as count FROM t2 ORDER BY ((t2.c1 COLLATE RTRIM)/(t2.c1 COLLATE RTRIM)), ((CAST(t2.c0 AS BLOB))/(t2.c1)));
SELECT ALL * FROM t2 WHERE (((t2.c1)&(t2.c2)) COLLATE BINARY) ORDER BY ((t2.c1 COLLATE RTRIM)/(t2.c1 COLLATE RTRIM)), ((CAST(t2.c0 AS BLOB))/(t2.c1));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1)&(t2.c2)) COLLATE BINARY) IS TRUE)  as count FROM t2 ORDER BY ((t2.c1 COLLATE RTRIM)/(t2.c1 COLLATE RTRIM)), ((CAST(t2.c0 AS BLOB))/(t2.c1)));
SELECT ALL * FROM t2 WHERE (((t2.c1)&(t2.c2)) COLLATE BINARY) ORDER BY ((t2.c1 COLLATE RTRIM)/(t2.c1 COLLATE RTRIM)), ((CAST(t2.c0 AS BLOB))/(t2.c1));
SELECT ALL COUNT(*) FROM t2, vt0, rt0 NATURAL JOIN t0 WHERE (TRIM(CASE t2.c0  WHEN rt0.c2 THEN rt0.c1 END)) ORDER BY '1242132431'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE t2.c0  WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM t2, vt0, rt0 NATURAL JOIN t0 ORDER BY '1242132431'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0, rt0 NATURAL JOIN t0 WHERE (TRIM(CASE t2.c0  WHEN rt0.c2 THEN rt0.c1 END)) ORDER BY '1242132431'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE t2.c0  WHEN rt0.c2 THEN rt0.c1 END)) IS TRUE)  as count FROM t2, vt0, rt0 NATURAL JOIN t0 ORDER BY '1242132431'  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, vt0, rt0 NATURAL JOIN t0 WHERE (TRIM(CASE t2.c0  WHEN rt0.c2 THEN rt0.c1 END)) ORDER BY '1242132431'  NULLS FIRST;
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)||(rt0.c1))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((rt0.c2)<(rt0.c0))))) ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c1))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))AND(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)||(rt0.c1))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((rt0.c2)<(rt0.c0))))) ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))AND(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)||(rt0.c1))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((rt0.c2)<(rt0.c0))))) IS TRUE)  as count FROM rt0, vt1 ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))AND(rt0.c0))))  NULLS LAST);
SELECT * FROM rt0, vt1 WHERE (((((rt0.c2)||(rt0.c1))) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((rt0.c2)<(rt0.c0))))) ORDER BY (NOT (((((vt1.c0)AND(vt1.c0)))AND(rt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c3)) AS REAL)) ORDER BY ((SUBSTR(rt0.c3, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c1)))) ASC, CASE WHEN GLOB(rt0.c3, rt0.c2) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('xX&#xMuo') BETWEEN (rt0.c0) AND (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN (+ (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((SUBSTR(rt0.c3, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c1)))) ASC, CASE WHEN GLOB(rt0.c3, rt0.c2) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('xX&#xMuo') BETWEEN (rt0.c0) AND (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN (+ (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c3)) AS REAL)) ORDER BY ((SUBSTR(rt0.c3, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c1)))) ASC, CASE WHEN GLOB(rt0.c3, rt0.c2) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('xX&#xMuo') BETWEEN (rt0.c0) AND (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN (+ (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((~ (rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((SUBSTR(rt0.c3, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c1)))) ASC, CASE WHEN GLOB(rt0.c3, rt0.c2) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('xX&#xMuo') BETWEEN (rt0.c0) AND (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN (+ (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((~ (rt0.c3)) AS REAL)) ORDER BY ((SUBSTR(rt0.c3, rt0.c0)) NOT BETWEEN (rt0.c2) AND ((~ (rt0.c1)))) ASC, CASE WHEN GLOB(rt0.c3, rt0.c2) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) WHEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) THEN (('xX&#xMuo') BETWEEN (rt0.c0) AND (rt0.c3)) WHEN CASE WHEN rt0.c2 THEN rt0.c0 END THEN (+ (rt0.c0)) ELSE rt0.c0 COLLATE RTRIM END ASC;
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt1.c0 END)GLOB((+ (vt1.c0)))) WHERE (CASE (t2.c2 IN (t2.c0))  WHEN 315083473 THEN (((t2.c0, 1.774896223E9, t2.c1, t2.c2, t2.c2))<=((t2.c2, vt1.c0, t2.c0, t2.c0, vt1.c0))) ELSE ((t2.c0) BETWEEN (t2.c0) AND (t2.c2)) END) ORDER BY LTRIM((t2.c0 IN ())) DESC  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST, TIME(vt1.c0, ABS(DISTINCT vt1.c0), (t2.c0 IN ()), ((t2.c2)-(t2.c2)), CAST(t2.c1 AS NUMERIC), CAST(t2.c0 AS TEXT), ((t2.c0)AND(t2.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t2.c2 IN (t2.c0))  WHEN 315083473 THEN (((t2.c0, 1.774896223E9, t2.c1, t2.c2, t2.c2))<=((t2.c2, vt1.c0, t2.c0, t2.c0, vt1.c0))) ELSE ((t2.c0) BETWEEN (t2.c0) AND (t2.c2)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt1.c0 END)GLOB((+ (vt1.c0)))) ORDER BY LTRIM((t2.c0 IN ())) DESC  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST, TIME(vt1.c0, ABS(DISTINCT vt1.c0), (t2.c0 IN ()), ((t2.c2)-(t2.c2)), CAST(t2.c1 AS NUMERIC), CAST(t2.c0 AS TEXT), ((t2.c0)AND(t2.c2))) DESC);
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt1.c0 END)GLOB((+ (vt1.c0)))) WHERE (CASE (t2.c2 IN (t2.c0))  WHEN 315083473 THEN (((t2.c0, 1.774896223E9, t2.c1, t2.c2, t2.c2))<=((t2.c2, vt1.c0, t2.c0, t2.c0, vt1.c0))) ELSE ((t2.c0) BETWEEN (t2.c0) AND (t2.c2)) END) ORDER BY LTRIM((t2.c0 IN ())) DESC  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST, TIME(vt1.c0, ABS(DISTINCT vt1.c0), (t2.c0 IN ()), ((t2.c2)-(t2.c2)), CAST(t2.c1 AS NUMERIC), CAST(t2.c0 AS TEXT), ((t2.c0)AND(t2.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE (t2.c2 IN (t2.c0))  WHEN 315083473 THEN (((t2.c0, 1.774896223E9, t2.c1, t2.c2, t2.c2))<=((t2.c2, vt1.c0, t2.c0, t2.c0, vt1.c0))) ELSE ((t2.c0) BETWEEN (t2.c0) AND (t2.c2)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt1.c0 END)GLOB((+ (vt1.c0)))) ORDER BY LTRIM((t2.c0 IN ())) DESC  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST, TIME(vt1.c0, ABS(DISTINCT vt1.c0), (t2.c0 IN ()), ((t2.c2)-(t2.c2)), CAST(t2.c1 AS NUMERIC), CAST(t2.c0 AS TEXT), ((t2.c0)AND(t2.c2))) DESC);
SELECT * FROM vt1 LEFT OUTER JOIN t2 ON ((CASE WHEN t2.c0 THEN vt1.c0 END)GLOB((+ (vt1.c0)))) WHERE (CASE (t2.c2 IN (t2.c0))  WHEN 315083473 THEN (((t2.c0, 1.774896223E9, t2.c1, t2.c2, t2.c2))<=((t2.c2, vt1.c0, t2.c0, t2.c0, vt1.c0))) ELSE ((t2.c0) BETWEEN (t2.c0) AND (t2.c2)) END) ORDER BY LTRIM((t2.c0 IN ())) DESC  NULLS LAST, SQLITE_SOURCE_ID()  NULLS FIRST, TIME(vt1.c0, ABS(DISTINCT vt1.c0), (t2.c0 IN ()), ((t2.c2)-(t2.c2)), CAST(t2.c1 AS NUMERIC), CAST(t2.c0 AS TEXT), ((t2.c0)AND(t2.c2))) DESC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((rt0.c0, rt0.c2, NULL)) NOT BETWEEN ((t0.c2, t0.c0, vt1.c0)) AND ((rt0.c0, t0.c1, rt0.c2))))))OR(rt0.c1)) CROSS JOIN vt1 ON rt0.c3 FULL OUTER JOIN vt0 ON (((0.4765155286539061 IN ()))>>(t0.c0)) WHERE ((- (((rt0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((rt0.c0, rt0.c2, NULL)) NOT BETWEEN ((t0.c2, t0.c0, vt1.c0)) AND ((rt0.c0, t0.c1, rt0.c2))))))OR(rt0.c1)) CROSS JOIN vt1 ON rt0.c3 FULL OUTER JOIN vt0 ON (((0.4765155286539061 IN ()))>>(t0.c0)));
SELECT ALL COUNT(*) FROM t0 INNER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((rt0.c0, rt0.c2, NULL)) NOT BETWEEN ((t0.c2, t0.c0, vt1.c0)) AND ((rt0.c0, t0.c1, rt0.c2))))))OR(rt0.c1)) CROSS JOIN vt1 ON rt0.c3 FULL OUTER JOIN vt0 ON (((0.4765155286539061 IN ()))>>(t0.c0)) WHERE ((- (((rt0.c0)LIKE(t0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c0)LIKE(t0.c1))))) IS TRUE)  as count FROM t0 INNER JOIN rt0 ON ((((((rt0.c1) IS TRUE))OR((((rt0.c0, rt0.c2, NULL)) NOT BETWEEN ((t0.c2, t0.c0, vt1.c0)) AND ((rt0.c0, t0.c1, rt0.c2))))))OR(rt0.c1)) CROSS JOIN vt1 ON rt0.c3 FULL OUTER JOIN vt0 ON (((0.4765155286539061 IN ()))>>(t0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (((vt0.c0)OR(NULL))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), NULLIF(DISTINCT vt0.c0, vt0.c0))) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)OR(NULL))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), NULLIF(DISTINCT vt0.c0, vt0.c0))) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (((vt0.c0)OR(NULL))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), NULLIF(DISTINCT vt0.c0, vt0.c0))) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0)OR(NULL))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), NULLIF(DISTINCT vt0.c0, vt0.c0))) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (- (((vt0.c0)OR(NULL))))  NULLS LAST, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)), ((vt0.c0) NOTNULL), NULLIF(DISTINCT vt0.c0, vt0.c0))) AND ((CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE NOCASE, (vt0.c0 IN ()))));
SELECT COUNT(*) FROM t2, vt1 WHERE (CASE WHEN t2.c1 THEN vt1.c0 END COLLATE BINARY) ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS LAST, CASE CASE WHEN t2.c1 THEN t2.c2 END  WHEN CAST(t2.c2 AS BLOB) THEN '1761273961' ELSE ((((((((vt1.c0)OR(t2.c1)))AND(t2.c1)))AND(t2.c1)))AND(t2.c1)) END ASC  NULLS LAST, ((((t2.c0)>=(x'49847650'))) NOT BETWEEN (((t2.c1) BETWEEN (t2.c1) AND (t2.c2))) AND (((t2.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c1 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM t2, vt1 ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS LAST, CASE CASE WHEN t2.c1 THEN t2.c2 END  WHEN CAST(t2.c2 AS BLOB) THEN '1761273961' ELSE ((((((((vt1.c0)OR(t2.c1)))AND(t2.c1)))AND(t2.c1)))AND(t2.c1)) END ASC  NULLS LAST, ((((t2.c0)>=(x'49847650'))) NOT BETWEEN (((t2.c1) BETWEEN (t2.c1) AND (t2.c2))) AND (((t2.c1) IS FALSE))));
SELECT COUNT(*) FROM t2, vt1 WHERE (CASE WHEN t2.c1 THEN vt1.c0 END COLLATE BINARY) ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS LAST, CASE CASE WHEN t2.c1 THEN t2.c2 END  WHEN CAST(t2.c2 AS BLOB) THEN '1761273961' ELSE ((((((((vt1.c0)OR(t2.c1)))AND(t2.c1)))AND(t2.c1)))AND(t2.c1)) END ASC  NULLS LAST, ((((t2.c0)>=(x'49847650'))) NOT BETWEEN (((t2.c1) BETWEEN (t2.c1) AND (t2.c2))) AND (((t2.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c1 THEN vt1.c0 END COLLATE BINARY) IS TRUE)  as count FROM t2, vt1 ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS LAST, CASE CASE WHEN t2.c1 THEN t2.c2 END  WHEN CAST(t2.c2 AS BLOB) THEN '1761273961' ELSE ((((((((vt1.c0)OR(t2.c1)))AND(t2.c1)))AND(t2.c1)))AND(t2.c1)) END ASC  NULLS LAST, ((((t2.c0)>=(x'49847650'))) NOT BETWEEN (((t2.c1) BETWEEN (t2.c1) AND (t2.c2))) AND (((t2.c1) IS FALSE))));
SELECT COUNT(*) FROM t2, vt1 WHERE (CASE WHEN t2.c1 THEN vt1.c0 END COLLATE BINARY) ORDER BY (NOT (((vt1.c0) IS FALSE))) ASC  NULLS LAST, CASE CASE WHEN t2.c1 THEN t2.c2 END  WHEN CAST(t2.c2 AS BLOB) THEN '1761273961' ELSE ((((((((vt1.c0)OR(t2.c1)))AND(t2.c1)))AND(t2.c1)))AND(t2.c1)) END ASC  NULLS LAST, ((((t2.c0)>=(x'49847650'))) NOT BETWEEN (((t2.c1) BETWEEN (t2.c1) AND (t2.c2))) AND (((t2.c1) IS FALSE)));
SELECT ALL COUNT(*) FROM t2 WHERE ('''i0bD F闍') ORDER BY 0.8831986060599991 DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (('''i0bD F闍') IS TRUE)  as count FROM t2 ORDER BY 0.8831986060599991 DESC, x'' DESC);
SELECT ALL COUNT(*) FROM t2 WHERE ('''i0bD F闍') ORDER BY 0.8831986060599991 DESC, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (('''i0bD F闍') IS TRUE)  as count FROM t2 ORDER BY 0.8831986060599991 DESC, x'' DESC);
SELECT ALL COUNT(*) FROM t2 WHERE ('''i0bD F闍') ORDER BY 0.8831986060599991 DESC, x'' DESC;
SELECT ALL * FROM t0, rt0, vt1, vt0, t2 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, rt0, vt1, vt0, t2);
SELECT ALL * FROM t0, rt0, vt1, vt0, t2 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM t0, rt0, vt1, vt0, t2);
SELECT ALL * FROM t0, rt0, vt1, vt0, t2 WHERE (vt1.c0);
SELECT * FROM t2 WHERE (((((CASE t2.c2  WHEN t2.c1 THEN t2.c1 ELSE t2.c1 END)AND((t2.c2 IN ()))))AND(((((((((t2.c1)AND('')))AND(0.44554904224386815)))AND(t2.c0)))OR(t2.c0))))) ORDER BY CASE (- (t2.c1))  WHEN (((t2.c1, t2.c2, t2.c1))<>((t2.c2, t2.c0, t2.c0))) THEN json_extract(t2.c1, t2.c1, x'', t2.c2) WHEN (((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c0))) THEN t2.c0 COLLATE RTRIM WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) THEN ((t2.c0) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t2.c2  WHEN t2.c1 THEN t2.c1 ELSE t2.c1 END)AND((t2.c2 IN ()))))AND(((((((((t2.c1)AND('')))AND(0.44554904224386815)))AND(t2.c0)))OR(t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY CASE (- (t2.c1))  WHEN (((t2.c1, t2.c2, t2.c1))!=((t2.c2, t2.c0, t2.c0))) THEN json_extract(t2.c1, t2.c1, x'', t2.c2) WHEN (((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c0))) THEN t2.c0 COLLATE RTRIM WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) THEN ((t2.c0) ISNULL) END  NULLS FIRST);
SELECT * FROM t2 WHERE (((((CASE t2.c2  WHEN t2.c1 THEN t2.c1 ELSE t2.c1 END)AND((t2.c2 IN ()))))AND(((((((((t2.c1)AND('')))AND(0.44554904224386815)))AND(t2.c0)))OR(t2.c0))))) ORDER BY CASE (- (t2.c1))  WHEN (((t2.c1, t2.c2, t2.c1))<>((t2.c2, t2.c0, t2.c0))) THEN json_extract(t2.c1, t2.c1, x'', t2.c2) WHEN (((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c0))) THEN t2.c0 COLLATE RTRIM WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) THEN ((t2.c0) ISNULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t2.c2  WHEN t2.c1 THEN t2.c1 ELSE t2.c1 END)AND((t2.c2 IN ()))))AND(((((((((t2.c1)AND('')))AND(0.44554904224386815)))AND(t2.c0)))OR(t2.c0))))) IS TRUE)  as count FROM t2 ORDER BY CASE (- (t2.c1))  WHEN (((t2.c1, t2.c2, t2.c1))!=((t2.c2, t2.c0, t2.c0))) THEN json_extract(t2.c1, t2.c1, x'', t2.c2) WHEN (((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c0))) THEN t2.c0 COLLATE RTRIM WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) THEN ((t2.c0) ISNULL) END  NULLS FIRST);
SELECT * FROM t2 WHERE (((((CASE t2.c2  WHEN t2.c1 THEN t2.c1 ELSE t2.c1 END)AND((t2.c2 IN ()))))AND(((((((((t2.c1)AND('')))AND(0.44554904224386815)))AND(t2.c0)))OR(t2.c0))))) ORDER BY CASE (- (t2.c1))  WHEN (((t2.c1, t2.c2, t2.c1))<>((t2.c2, t2.c0, t2.c0))) THEN json_extract(t2.c1, t2.c1, x'', t2.c2) WHEN (((t2.c2)) BETWEEN ((t2.c2)) AND ((t2.c0))) THEN t2.c0 COLLATE RTRIM WHEN ((t2.c0) NOT BETWEEN (t2.c0) AND (t2.c2)) THEN ((t2.c0) ISNULL) END  NULLS FIRST;
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 WHEN NULL THEN t0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 WHEN NULL THEN t0.c2 END) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 WHEN NULL THEN t0.c2 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 WHEN NULL THEN t0.c2 END) IS FALSE)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c1 WHEN NULL THEN t0.c2 WHEN NULL THEN t0.c2 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((- (x'')));
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((- (x'')));
SELECT ALL * FROM vt0, rt0, t2, vt1, t0 WHERE ((((+ (0X9a38704)))<(((t0.c0) NOT NULL)))) ORDER BY (((vt1.c0)IS(t2.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (0X9a38704)))<(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t2, vt1, t0 ORDER BY (((vt1.c0)IS(t2.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t2, vt1, t0 WHERE ((((+ (0X9a38704)))<(((t0.c0) NOT NULL)))) ORDER BY (((vt1.c0)IS(t2.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (0X9a38704)))<(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, rt0, t2, vt1, t0 ORDER BY (((vt1.c0)IS(t2.c0)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, t2, vt1, t0 WHERE ((((+ (0X9a38704)))<(((t0.c0) NOT NULL)))) ORDER BY (((vt1.c0)IS(t2.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN t2 ON (((t2.c1)<>(t2.c2)) IN (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))) WHERE ((((NOT (t2.c1))) IS FALSE)) ORDER BY json_valid(((t2.c2)AND(t2.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t2.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN t2 ON (((t2.c1)!=(t2.c2)) IN (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))) ORDER BY json_valid(((t2.c2)AND(t2.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN t2 ON (((t2.c1)<>(t2.c2)) IN (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))) WHERE ((((NOT (t2.c1))) IS FALSE)) ORDER BY json_valid(((t2.c2)AND(t2.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((NOT (t2.c1))) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN t2 ON (((t2.c1)!=(t2.c2)) IN (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))) ORDER BY json_valid(((t2.c2)AND(t2.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 CROSS JOIN t2 ON (((t2.c1)<>(t2.c2)) IN (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))) WHERE ((((NOT (t2.c1))) IS FALSE)) ORDER BY json_valid(((t2.c2)AND(t2.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t2, vt1, t0);
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM t2, vt1, t0);
SELECT COUNT(*) FROM t2, vt1, t0 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL * FROM t2, rt0, t0, vt0 WHERE (((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(((t2.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(((t2.c0) NOTNULL)))) IS TRUE)  as count FROM t2, rt0 NOT INDEXED, t0, vt0);
SELECT ALL * FROM t2, rt0, t0, vt0 WHERE (((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(((t2.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(((t2.c0) NOTNULL)))) IS TRUE)  as count FROM t2, rt0 NOT INDEXED, t0, vt0);
SELECT ALL * FROM t2, rt0, t0, vt0 WHERE (((((((rt0.c0)OR(t0.c1)))AND(rt0.c0)))OR(((t2.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0, t2 WHERE ((((((x'')GLOB(vt1.c0)), rt0.c0, (t2.c2 IN ())))>=((((t2.c1)>=(t2.c0)), CAST(vt1.c0 AS INTEGER), ((t2.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((x'')GLOB(vt1.c0)), rt0.c0, (t2.c2 IN ())))>=((((t2.c1)>=(t2.c0)), CAST(vt1.c0 AS INTEGER), ((t2.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0, t2);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0, t2 WHERE ((((((x'')GLOB(vt1.c0)), rt0.c0, (t2.c2 IN ())))>=((((t2.c1)>=(t2.c0)), CAST(vt1.c0 AS INTEGER), ((t2.c2) IS FALSE)))));
SELECT SUM(count) FROM (SELECT (((((((x'')GLOB(vt1.c0)), rt0.c0, (t2.c2 IN ())))>=((((t2.c1)>=(t2.c0)), CAST(vt1.c0 AS INTEGER), ((t2.c2) IS FALSE))))) IS TRUE)  as count FROM vt1, rt0, vt0, t0, t2);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t0, t2 WHERE ((((((x'')GLOB(vt1.c0)), rt0.c0, (t2.c2 IN ())))>=((((t2.c1)>=(t2.c0)), CAST(vt1.c0 AS INTEGER), ((t2.c2) IS FALSE)))));
SELECT * FROM vt0, rt0, vt1 NOT INDEXED, t2, t0 WHERE (ABS(DISTINCT DATETIME(t2.c2, t0.c2, rt0.c3))) ORDER BY ((((rt0.c3)=(NULL))) NOT BETWEEN ((t0.c1 IN ())) AND (((0.1677127391220572) NOT BETWEEN (rt0.c1) AND (0X5ff85350)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT DATETIME(t2.c2, t0.c2, rt0.c3))) IS TRUE)  as count FROM vt0, rt0, vt1, t2, t0 ORDER BY ((((rt0.c3)=(NULL))) NOT BETWEEN ((t0.c1 IN ())) AND (((0.1677127391220572) NOT BETWEEN (rt0.c1) AND (0x5ff85350)))) DESC);
SELECT * FROM vt0, rt0, vt1 NOT INDEXED, t2, t0 WHERE (ABS(DISTINCT DATETIME(t2.c2, t0.c2, rt0.c3))) ORDER BY ((((rt0.c3)=(NULL))) NOT BETWEEN ((t0.c1 IN ())) AND (((0.1677127391220572) NOT BETWEEN (rt0.c1) AND (0X5ff85350)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT DATETIME(t2.c2, t0.c2, rt0.c3))) IS TRUE)  as count FROM vt0, rt0, vt1, t2, t0 ORDER BY ((((rt0.c3)=(NULL))) NOT BETWEEN ((t0.c1 IN ())) AND (((0.1677127391220572) NOT BETWEEN (rt0.c1) AND (0x5ff85350)))) DESC);
SELECT * FROM vt0, rt0, vt1 NOT INDEXED, t2, t0 WHERE (ABS(DISTINCT DATETIME(t2.c2, t0.c2, rt0.c3))) ORDER BY ((((rt0.c3)=(NULL))) NOT BETWEEN ((t0.c1 IN ())) AND (((0.1677127391220572) NOT BETWEEN (rt0.c1) AND (0X5ff85350)))) DESC;
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ROUND(((t0.c2)%(t2.c2)), LTRIM(rt0.c1)) CROSS JOIN t2 ON rt0.c1 CROSS JOIN t0 ON CAST((t0.c1 IN ()) AS REAL) WHERE ((((NOT (NULL)))=(((t0.c2)AND(t0.c1))))) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.9746337083680078)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))=(((t0.c2)AND(t0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ROUND(((t0.c2)%(t2.c2)), LTRIM(rt0.c1)) CROSS JOIN t2 ON rt0.c1 CROSS JOIN t0 ON CAST((t0.c1 IN ()) AS REAL) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.9746337083680078)  NULLS LAST);
SELECT ALL * FROM vt1 FULL OUTER JOIN rt0 ON ROUND(((t0.c2)%(t2.c2)), LTRIM(rt0.c1)) CROSS JOIN t2 ON rt0.c1 CROSS JOIN t0 ON CAST((t0.c1 IN ()) AS REAL) WHERE ((((NOT (NULL)))=(((t0.c2)AND(t0.c1))))) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.9746337083680078)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))=(((t0.c2)AND(t0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN rt0 ON ROUND(((t0.c2)%(t2.c2)), LTRIM(rt0.c1)) CROSS JOIN t2 ON rt0.c1 CROSS JOIN t0 ON CAST((t0.c1 IN ()) AS REAL) ORDER BY LIKELIHOOD((rt0.c1 IN ()), 0.9746337083680078)  NULLS LAST);
SELECT * FROM t0 WHERE ((((CAST(t0.c1 AS NUMERIC)))==((x'')))) ORDER BY (((t0.c1)%(t0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c1 AS NUMERIC)))==((x'')))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)%(t0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((CAST(t0.c1 AS NUMERIC)))==((x'')))) ORDER BY (((t0.c1)%(t0.c0)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(t0.c1 AS NUMERIC)))==((x'')))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c1)%(t0.c0)) IN ()) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((CAST(t0.c1 AS NUMERIC)))==((x'')))) ORDER BY (((t0.c1)%(t0.c0)) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (NULL);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0, rt0);
SELECT ALL COUNT(*) FROM vt0, t0, rt0 WHERE (t0.c1);
SELECT ALL * FROM vt0, t2, t0, vt1 WHERE ((((((+ ('-809671642')))OR(((((vt1.c0)AND(t0.c2)))OR(NULL)))))OR(((t2.c0) ISNULL)))) ORDER BY (((((x'35161be1' IN (t0.c2)))OR(t0.c2)))AND(((t0.c2)-(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ ('-809671642')))OR(((((vt1.c0)AND(t0.c2)))OR(NULL)))))OR(((t2.c0) ISNULL)))) IS TRUE)  as count FROM vt0, t2, t0, vt1 ORDER BY (((((x'35161be1' IN (t0.c2)))OR(t0.c2)))AND(((t0.c2)-(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t2, t0, vt1 WHERE ((((((+ ('-809671642')))OR(((((vt1.c0)AND(t0.c2)))OR(NULL)))))OR(((t2.c0) ISNULL)))) ORDER BY (((((x'35161be1' IN (t0.c2)))OR(t0.c2)))AND(((t0.c2)-(t0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((+ ('-809671642')))OR(((((vt1.c0)AND(t0.c2)))OR(NULL)))))OR(((t2.c0) ISNULL)))) IS TRUE)  as count FROM vt0, t2, t0, vt1 ORDER BY (((((x'35161be1' IN (t0.c2)))OR(t0.c2)))AND(((t0.c2)-(t0.c2)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, t2, t0, vt1 WHERE ((((((+ ('-809671642')))OR(((((vt1.c0)AND(t0.c2)))OR(NULL)))))OR(((t2.c0) ISNULL)))) ORDER BY (((((x'35161be1' IN (t0.c2)))OR(t0.c2)))AND(((t0.c2)-(t0.c2)))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))/((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((+ (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((+ (vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))/((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((+ (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL))/((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((+ (vt0.c0))))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL))/((vt0.c0 IN ())))) ORDER BY (((vt0.c0)) BETWEEN ((((vt0.c0)LIKE(vt0.c0)))) AND (((+ (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t2, t0, rt0, vt0 WHERE (CAST(CAST('-1334802271' AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('-1334802271' AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0, rt0, vt0);
SELECT ALL * FROM vt1, t2, t0, rt0, vt0 WHERE (CAST(CAST('-1334802271' AS INTEGER) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST('-1334802271' AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM vt1, t2, t0, rt0, vt0);
SELECT ALL * FROM vt1, t2, t0, rt0, vt0 WHERE (CAST(CAST('-1334802271' AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((t0.c0)<>(vt1.c0)) AS INTEGER)) ORDER BY CAST((~ (vt1.c0)) AS REAL), (((((vt1.c0, t0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 1.774896223E9, 'r6](''N')) AND ((t0.c1, ')H', t0.c1))))AND((('528713828')/(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)!=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST((~ (vt1.c0)) AS REAL), (((((vt1.c0, t0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 1.774896223E9, 'r6](''N')) AND ((t0.c1, ')H', t0.c1))))AND((('528713828')/(vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((t0.c0)<>(vt1.c0)) AS INTEGER)) ORDER BY CAST((~ (vt1.c0)) AS REAL), (((((vt1.c0, t0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 1.774896223E9, 'r6](''N')) AND ((t0.c1, ')H', t0.c1))))AND((('528713828')/(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0)!=(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1 ORDER BY CAST((~ (vt1.c0)) AS REAL), (((((vt1.c0, t0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 1.774896223E9, 'r6](''N')) AND ((t0.c1, ')H', t0.c1))))AND((('528713828')/(vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt1 WHERE (CAST(((t0.c0)<>(vt1.c0)) AS INTEGER)) ORDER BY CAST((~ (vt1.c0)) AS REAL), (((((vt1.c0, t0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, 1.774896223E9, 'r6](''N')) AND ((t0.c1, ')H', t0.c1))))AND((('528713828')/(vt1.c0)))) ASC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE UNLIKELY(rt0.c0)  WHEN x'' THEN (('1028026579') ISNULL) END CROSS JOIN t0 ON ((((((((t0.c1)OR(vt1.c0)))AND(rt0.c1)))AND(t0.c2)))AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((vt1.c0))) WHERE (CASE ((((t0.c1)OR(t0.c1)))OR(t0.c1))  WHEN ((rt0.c3) NOT NULL) THEN (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2))) WHEN rt0.c1 THEN ((t0.c2)<(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c1)OR(t0.c1)))OR(t0.c1))  WHEN ((rt0.c3) NOT NULL) THEN (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2))) WHEN rt0.c1 THEN ((t0.c2)<(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE UNLIKELY(rt0.c0)  WHEN x'' THEN (('1028026579') ISNULL) END CROSS JOIN t0 ON ((((((((t0.c1)OR(vt1.c0)))AND(rt0.c1)))AND(t0.c2)))AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((vt1.c0))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CASE UNLIKELY(rt0.c0)  WHEN x'' THEN (('1028026579') ISNULL) END CROSS JOIN t0 ON ((((((((t0.c1)OR(vt1.c0)))AND(rt0.c1)))AND(t0.c2)))AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((vt1.c0))) WHERE (CASE ((((t0.c1)OR(t0.c1)))OR(t0.c1))  WHEN ((rt0.c3) NOT NULL) THEN (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2))) WHEN rt0.c1 THEN ((t0.c2)<(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t0.c1)OR(t0.c1)))OR(t0.c1))  WHEN ((rt0.c3) NOT NULL) THEN (((t0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c2))) WHEN rt0.c1 THEN ((t0.c2)<(vt0.c0)) WHEN (vt0.c0 IN ()) THEN vt1.c0 COLLATE RTRIM END) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CASE UNLIKELY(rt0.c0)  WHEN x'' THEN (('1028026579') ISNULL) END CROSS JOIN t0 ON ((((((((t0.c1)OR(vt1.c0)))AND(rt0.c1)))AND(t0.c2)))AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt1 ON (((t0.c0)) NOT BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((vt1.c0))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c3 COLLATE BINARY))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c3 COLLATE BINARY))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c3 COLLATE BINARY))) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c3 COLLATE BINARY))));
SELECT ALL * FROM vt1, rt0 RIGHT OUTER JOIN vt0 ON (((vt1.c0)) NOT BETWEEN (((((rt0.c1))>((rt0.c0))))) AND ((rt0.c3 COLLATE BINARY))) WHERE (x'');
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((json_type(vt0.c0))>((rt0.c3 IN (rt0.c1)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) NOT BETWEEN ((((vt1.c0)<<(rt0.c0)))) AND ((TYPEOF(DISTINCT '-1089696957')))) FULL OUTER JOIN vt0 ON (((((rt0.c0)OR(t0.c1)), NULL, ((t0.c1)&(rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t2.c1)), (((vt1.c0, vt1.c0, rt0.c1))<>((rt0.c2, t2.c2, t0.c2)))))==(((((rt0.c3))>((t0.c0))), (~ (rt0.c2)), ((((rt0.c2)AND(t2.c1)))OR(vt0.c0)), (t2.c1 IN ()), TRIM(vt1.c0, t2.c2)))) WHERE (((((t2.c2) BETWEEN (vt0.c0) AND (t0.c2)))!=(((t2.c1) BETWEEN (t0.c2) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c2) BETWEEN (vt0.c0) AND (t0.c2)))!=(((t2.c1) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((json_type(vt0.c0))>((rt0.c3 IN (rt0.c1)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) NOT BETWEEN ((((vt1.c0)<<(rt0.c0)))) AND ((TYPEOF(DISTINCT '-1089696957')))) FULL OUTER JOIN vt0 ON (((((rt0.c0)OR(t0.c1)), NULL, ((t0.c1)&(rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t2.c1)), (((vt1.c0, vt1.c0, rt0.c1))!=((rt0.c2, t2.c2, t0.c2)))))=(((((rt0.c3))>((t0.c0))), (~ (rt0.c2)), ((((rt0.c2)AND(t2.c1)))OR(vt0.c0)), (t2.c1 IN ()), TRIM(vt1.c0, t2.c2)))));
SELECT ALL * FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((json_type(vt0.c0))>((rt0.c3 IN (rt0.c1)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) NOT BETWEEN ((((vt1.c0)<<(rt0.c0)))) AND ((TYPEOF(DISTINCT '-1089696957')))) FULL OUTER JOIN vt0 ON (((((rt0.c0)OR(t0.c1)), NULL, ((t0.c1)&(rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t2.c1)), (((vt1.c0, vt1.c0, rt0.c1))<>((rt0.c2, t2.c2, t0.c2)))))==(((((rt0.c3))>((t0.c0))), (~ (rt0.c2)), ((((rt0.c2)AND(t2.c1)))OR(vt0.c0)), (t2.c1 IN ()), TRIM(vt1.c0, t2.c2)))) WHERE (((((t2.c2) BETWEEN (vt0.c0) AND (t0.c2)))!=(((t2.c1) BETWEEN (t0.c2) AND (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c2) BETWEEN (vt0.c0) AND (t0.c2)))!=(((t2.c1) BETWEEN (t0.c2) AND (t0.c2))))) IS TRUE)  as count FROM t0, vt1 RIGHT OUTER JOIN t2 ON ((json_type(vt0.c0))>((rt0.c3 IN (rt0.c1)))) RIGHT OUTER JOIN rt0 ON (((t0.c1)) NOT BETWEEN ((((vt1.c0)<<(rt0.c0)))) AND ((TYPEOF(DISTINCT '-1089696957')))) FULL OUTER JOIN vt0 ON (((((rt0.c0)OR(t0.c1)), NULL, ((t0.c1)&(rt0.c3)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t2.c1)), (((vt1.c0, vt1.c0, rt0.c1))!=((rt0.c2, t2.c2, t0.c2)))))=(((((rt0.c3))>((t0.c0))), (~ (rt0.c2)), ((((rt0.c2)AND(t2.c1)))OR(vt0.c0)), (t2.c1 IN ()), TRIM(vt1.c0, t2.c2)))));
SELECT * FROM rt0, vt0, t2, vt1, t0 WHERE (((((t0.c1)||(vt1.c0)))/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)||(vt1.c0)))/(rt0.c1))) IS TRUE)  as count FROM rt0, vt0, t2, vt1, t0);
SELECT * FROM rt0, vt0, t2, vt1, t0 WHERE (((((t0.c1)||(vt1.c0)))/(rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)||(vt1.c0)))/(rt0.c1))) IS TRUE)  as count FROM rt0, vt0, t2, vt1, t0);
SELECT * FROM rt0, vt0, t2, vt1, t0 WHERE (((((t0.c1)||(vt1.c0)))/(rt0.c1)));
SELECT * FROM vt1, vt0, t2 WHERE ((((t2.c2)) BETWEEN ((UNICODE(x''))) AND ((COALESCE(DISTINCT t2.c2, vt1.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)) BETWEEN ((UNICODE(x''))) AND ((COALESCE(DISTINCT t2.c2, vt1.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t2);
SELECT * FROM vt1, vt0, t2 WHERE ((((t2.c2)) BETWEEN ((UNICODE(x''))) AND ((COALESCE(DISTINCT t2.c2, vt1.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)) BETWEEN ((UNICODE(x''))) AND ((COALESCE(DISTINCT t2.c2, vt1.c0, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt1, vt0, t2);
SELECT * FROM vt1, vt0, t2 WHERE ((((t2.c2)) BETWEEN ((UNICODE(x''))) AND ((COALESCE(DISTINCT t2.c2, vt1.c0, vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)OR(t0.c2)))AND(vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)) INNER JOIN vt0 ON (((''))=((CASE WHEN vt1.c0 THEN '1859287025' END))) WHERE ((((~ (t0.c0))) NOT BETWEEN (((t0.c0)*(vt1.c0))) AND (((rt0.c1) BETWEEN (t0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN (((t0.c0)*(vt1.c0))) AND (((rt0.c1) BETWEEN (t0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)OR(t0.c2)))AND(vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)) INNER JOIN vt0 ON (((''))=((CASE WHEN vt1.c0 THEN '1859287025' END))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)OR(t0.c2)))AND(vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)) INNER JOIN vt0 ON (((''))=((CASE WHEN vt1.c0 THEN '1859287025' END))) WHERE ((((~ (t0.c0))) NOT BETWEEN (((t0.c0)*(vt1.c0))) AND (((rt0.c1) BETWEEN (t0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0))) NOT BETWEEN (((t0.c0)*(vt1.c0))) AND (((rt0.c1) BETWEEN (t0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((((vt0.c0)OR(t0.c2)))AND(vt1.c0)) COLLATE NOCASE CROSS JOIN vt1 ON (+ (CASE rt0.c1  WHEN rt0.c1 THEN vt0.c0 END)) INNER JOIN vt0 ON (((''))=((CASE WHEN vt1.c0 THEN '1859287025' END))));
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (load_extension(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (load_extension(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT ALL COUNT(*) FROM t0, rt0 WHERE ((NOT (load_extension(t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (load_extension(t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, rt0);
SELECT COUNT(*) FROM vt0 WHERE (0.14980966461410983) ORDER BY (((vt0.c0 IN (x'db9162a4'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) ASC, ((LOWER(vt0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (0.49090783187062637)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.14980966461410983) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN (x'db9162a4'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) ASC, ((LOWER(vt0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (0.49090783187062637)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (0.14980966461410983) ORDER BY (((vt0.c0 IN (x'db9162a4'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) ASC, ((LOWER(vt0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (0.49090783187062637)))) ASC;
SELECT SUM(count) FROM (SELECT ((0.14980966461410983) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN (x'db9162a4'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) ASC, ((LOWER(vt0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (0.49090783187062637)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (0.14980966461410983) ORDER BY (((vt0.c0 IN (x'db9162a4'))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (((vt0.c0)|(vt0.c0)))) ASC, ((LOWER(vt0.c0)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((NOT (0.49090783187062637)))) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT * FROM vt0, t2, t0, rt0, vt1 WHERE (((((((((((((0.4493718828583817)OR(t0.c0)))OR(vt1.c0)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((((t0.c2)AND(t0.c2)))OR(t2.c2)))))OR('2016431706')))AND(CAST(t0.c1 AS NUMERIC)))) ORDER BY TRIM(DISTINCT QUOTE(t0.c2), SQLITE_SOURCE_ID()) ASC, (NOT (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.4493718828583817)OR(t0.c0)))OR(vt1.c0)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((((t0.c2)AND(t0.c2)))OR(t2.c2)))))OR('2016431706')))AND(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t2, t0, rt0, vt1 ORDER BY TRIM(DISTINCT QUOTE(t0.c2), SQLITE_SOURCE_ID()) ASC, (NOT (vt1.c0)) DESC);
SELECT * FROM vt0, t2, t0, rt0, vt1 WHERE (((((((((((((0.4493718828583817)OR(t0.c0)))OR(vt1.c0)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((((t0.c2)AND(t0.c2)))OR(t2.c2)))))OR('2016431706')))AND(CAST(t0.c1 AS NUMERIC)))) ORDER BY TRIM(DISTINCT QUOTE(t0.c2), SQLITE_SOURCE_ID()) ASC, (NOT (vt1.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((0.4493718828583817)OR(t0.c0)))OR(vt1.c0)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((((t0.c2)AND(t0.c2)))OR(t2.c2)))))OR('2016431706')))AND(CAST(t0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t2, t0, rt0, vt1 ORDER BY TRIM(DISTINCT QUOTE(t0.c2), SQLITE_SOURCE_ID()) ASC, (NOT (vt1.c0)) DESC);
SELECT * FROM vt0, t2, t0, rt0, vt1 WHERE (((((((((((((0.4493718828583817)OR(t0.c0)))OR(vt1.c0)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((t0.c0))))))AND(((((t0.c2)AND(t0.c2)))OR(t2.c2)))))OR('2016431706')))AND(CAST(t0.c1 AS NUMERIC)))) ORDER BY TRIM(DISTINCT QUOTE(t0.c2), SQLITE_SOURCE_ID()) ASC, (NOT (vt1.c0)) DESC;
SELECT ALL * FROM vt1, vt0, t0, t2 CROSS JOIN rt0 ON CAST(CAST(t0.c2 AS NUMERIC) AS NUMERIC) WHERE ((((- (t2.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) BETWEEN (0x66f75f70) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t2.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) BETWEEN (0x66f75f70) AND (rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, t0, t2 CROSS JOIN rt0 ON CAST(CAST(t0.c2 AS NUMERIC) AS NUMERIC));
SELECT ALL * FROM vt1, vt0, t0, t2 CROSS JOIN rt0 ON CAST(CAST(t0.c2 AS NUMERIC) AS NUMERIC) WHERE ((((- (t2.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) BETWEEN (0x66f75f70) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t2.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) BETWEEN (0x66f75f70) AND (rt0.c3))))) IS TRUE)  as count FROM vt1, vt0, t0, t2 CROSS JOIN rt0 ON CAST(CAST(t0.c2 AS NUMERIC) AS NUMERIC));
SELECT ALL * FROM vt1, vt0, t0, t2 CROSS JOIN rt0 ON CAST(CAST(t0.c2 AS NUMERIC) AS NUMERIC) WHERE ((((- (t2.c1))) NOT BETWEEN ((rt0.c0 IN ())) AND (((rt0.c3) BETWEEN (0x66f75f70) AND (rt0.c3)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON TYPEOF(DISTINCT ((t2.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) LEFT OUTER JOIN rt0 ON (('0.8605365012754844' COLLATE BINARY)+((t0.c2 IN ()))) CROSS JOIN t2 ON (NOT (((t0.c1)|(t2.c0)))) LEFT OUTER JOIN t0 ON CAST(((((((((t0.c2)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(t2.c2)) AS REAL) WHERE ((((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<=(((t2.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<=(((t2.c2) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON TYPEOF(DISTINCT ((t2.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) LEFT OUTER JOIN rt0 ON (('0.8605365012754844' COLLATE BINARY)+((t0.c2 IN ()))) CROSS JOIN t2 ON (NOT (((t0.c1)|(t2.c0)))) LEFT OUTER JOIN t0 ON CAST(((((((((t0.c2)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(t2.c2)) AS REAL));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt1 ON TYPEOF(DISTINCT ((t2.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) LEFT OUTER JOIN rt0 ON (('0.8605365012754844' COLLATE BINARY)+((t0.c2 IN ()))) CROSS JOIN t2 ON (NOT (((t0.c1)|(t2.c0)))) LEFT OUTER JOIN t0 ON CAST(((((((((t0.c2)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(t2.c2)) AS REAL) WHERE ((((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<=(((t2.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))<=(((t2.c2) IS FALSE)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON TYPEOF(DISTINCT ((t2.c2) NOT BETWEEN (vt1.c0) AND (vt0.c0))) LEFT OUTER JOIN rt0 ON (('0.8605365012754844' COLLATE BINARY)+((t0.c2 IN ()))) CROSS JOIN t2 ON (NOT (((t0.c1)|(t2.c0)))) LEFT OUTER JOIN t0 ON CAST(((((((((t0.c2)AND(rt0.c1)))AND(t0.c2)))OR(rt0.c3)))OR(t2.c2)) AS REAL));
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (0.6858104162029113);
SELECT SUM(count) FROM (SELECT ((0.6858104162029113) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (0.6858104162029113);
SELECT SUM(count) FROM (SELECT ((0.6858104162029113) IS TRUE)  as count FROM vt1, rt0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE (0.6858104162029113);
SELECT * FROM t0 WHERE (((((((t0.c1)&(t0.c1)))OR(TRIM(DISTINCT t0.c0))))OR(((x'') BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)&(t0.c1)))OR(TRIM(DISTINCT t0.c0))))OR(((x'') BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((((((t0.c1)&(t0.c1)))OR(TRIM(DISTINCT t0.c0))))OR(((x'') BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)&(t0.c1)))OR(TRIM(DISTINCT t0.c0))))OR(((x'') BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((((((t0.c1)&(t0.c1)))OR(TRIM(DISTINCT t0.c0))))OR(((x'') BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t2, vt0, t0, rt0, vt1 WHERE (((json_quote(t0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(t0.c0)) ISNULL)) IS TRUE)  as count FROM t2, vt0, t0, rt0, vt1);
SELECT ALL * FROM t2, vt0, t0, rt0, vt1 WHERE (((json_quote(t0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((json_quote(t0.c0)) ISNULL)) IS TRUE)  as count FROM t2, vt0, t0, rt0, vt1);
SELECT ALL * FROM t2, vt0, t0, rt0, vt1 WHERE (((json_quote(t0.c0)) ISNULL));
SELECT COUNT(*) FROM rt0, t2, vt1, t0 WHERE (((((t0.c0))=((rt0.c1))) IN ())) ORDER BY ((((t2.c0)>(rt0.c1)))GLOB(CAST(t0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0))=((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t2, vt1, t0 ORDER BY ((((t2.c0)>(rt0.c1)))GLOB(CAST(t0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0, t2, vt1, t0 WHERE (((((t0.c0))=((rt0.c1))) IN ())) ORDER BY ((((t2.c0)>(rt0.c1)))GLOB(CAST(t0.c2 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0))=((rt0.c1))) IN ())) IS TRUE)  as count FROM rt0, t2, vt1, t0 ORDER BY ((((t2.c0)>(rt0.c1)))GLOB(CAST(t0.c2 AS INTEGER))));
SELECT COUNT(*) FROM rt0, t2, vt1, t0 WHERE (((((t0.c0))=((rt0.c1))) IN ())) ORDER BY ((((t2.c0)>(rt0.c1)))GLOB(CAST(t0.c2 AS INTEGER)));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t2, vt1, vt0, rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t2, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t2, vt1, vt0, rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t2, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t2, vt1, vt0, rt0 WHERE ((+ (rt0.c1 COLLATE NOCASE)));
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((t2.c0) NOT NULL) THEN vt1.c0 ELSE ((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c1)) END) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((t2.c0) BETWEEN (t2.c1) AND (t2.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t2.c0) NOT NULL) THEN vt1.c0 ELSE ((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c1)) END) IS TRUE)  as count FROM t2, vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((t2.c0) BETWEEN (t2.c1) AND (t2.c0))) AND (vt1.c0))  NULLS FIRST);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((t2.c0) NOT NULL) THEN vt1.c0 ELSE ((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c1)) END) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((t2.c0) BETWEEN (t2.c1) AND (t2.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t2.c0) NOT NULL) THEN vt1.c0 ELSE ((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c1)) END) IS TRUE)  as count FROM t2, vt1 ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((t2.c0) BETWEEN (t2.c1) AND (t2.c0))) AND (vt1.c0))  NULLS FIRST);
SELECT * FROM t2, vt1 WHERE (CASE WHEN ((t2.c0) NOT NULL) THEN vt1.c0 ELSE ((t2.c1) NOT BETWEEN (t2.c1) AND (t2.c1)) END) ORDER BY (((vt1.c0 IN ())) NOT BETWEEN (((t2.c0) BETWEEN (t2.c1) AND (t2.c0))) AND (vt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM t2, vt1 INNER JOIN rt0 ON (t2.c1 IN (rt0.c1, t2.c1)) COLLATE BINARY WHERE ('-153407371') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (('-153407371') IS TRUE)  as count FROM t2, vt1 INNER JOIN rt0 ON (t2.c1 IN (rt0.c1, t2.c1)) COLLATE BINARY ORDER BY rt0.c2);
SELECT COUNT(*) FROM t2, vt1 INNER JOIN rt0 ON (t2.c1 IN (rt0.c1, t2.c1)) COLLATE BINARY WHERE ('-153407371') ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ALL (('-153407371') IS TRUE)  as count FROM t2, vt1 INNER JOIN rt0 ON (t2.c1 IN (rt0.c1, t2.c1)) COLLATE BINARY ORDER BY rt0.c2);
SELECT COUNT(*) FROM t2, vt1 INNER JOIN rt0 ON (t2.c1 IN (rt0.c1, t2.c1)) COLLATE BINARY WHERE ('-153407371') ORDER BY rt0.c2;
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t2 WHERE (((((0.24962445315451198)<=(t2.c2)))OR((vt0.c0 IN ())))) ORDER BY ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.24962445315451198)<=(t2.c2)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, t0, t2 ORDER BY ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t2 WHERE (((((0.24962445315451198)<=(t2.c2)))OR((vt0.c0 IN ())))) ORDER BY ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((0.24962445315451198)<=(t2.c2)))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, vt1, t0, t2 ORDER BY ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, t2 WHERE (((((0.24962445315451198)<=(t2.c2)))OR((vt0.c0 IN ())))) ORDER BY ((t0.c1) NOT BETWEEN (t0.c2) AND (t0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (CAST(((vt1.c0)+(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)+(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t2, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (CAST(((vt1.c0)+(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)+(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM t2, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (CAST(((vt1.c0)+(rt0.c2)) AS TEXT));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((t2.c0) NOTNULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON json_object('1761273961', 0Xffffffffd6d5e9c1) LEFT OUTER JOIN vt1 ON ((((t0.c1)+(t0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE RTRIM)) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((t2.c0) NOTNULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON json_object('1761273961', 0Xffffffffd6d5e9c1) LEFT OUTER JOIN vt1 ON ((((t0.c1)+(t0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((t2.c0) NOTNULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON json_object('1761273961', 0Xffffffffd6d5e9c1) LEFT OUTER JOIN vt1 ON ((((t0.c1)+(t0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE RTRIM)) WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((t2.c0) NOTNULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON json_object('1761273961', 0Xffffffffd6d5e9c1) LEFT OUTER JOIN vt1 ON ((((t0.c1)+(t0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((t2.c0) NOTNULL) COLLATE RTRIM RIGHT OUTER JOIN rt0 ON json_object('1761273961', 0Xffffffffd6d5e9c1) LEFT OUTER JOIN vt1 ON ((((t0.c1)+(t0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (~ (vt0.c0 COLLATE RTRIM)) WHERE (t0.c2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((((COALESCE(DISTINCT t2.c1, t2.c2, t2.c2, t2.c1))AND(((t2.c1) IS FALSE))))OR(((t2.c0)>>(t2.c2))))) ORDER BY ((((t2.c1) NOT NULL))|((~ (t2.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT t2.c1, t2.c2, t2.c2, t2.c1))AND(((t2.c1) IS FALSE))))OR(((t2.c0)>>(t2.c2))))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((t2.c1) NOT NULL))|((~ (t2.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((((COALESCE(DISTINCT t2.c1, t2.c2, t2.c2, t2.c1))AND(((t2.c1) IS FALSE))))OR(((t2.c0)>>(t2.c2))))) ORDER BY ((((t2.c1) NOT NULL))|((~ (t2.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT t2.c1, t2.c2, t2.c2, t2.c1))AND(((t2.c1) IS FALSE))))OR(((t2.c0)>>(t2.c2))))) IS TRUE)  as count FROM vt0, t2 ORDER BY ((((t2.c1) NOT NULL))|((~ (t2.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE (((((COALESCE(DISTINCT t2.c1, t2.c2, t2.c2, t2.c1))AND(((t2.c1) IS FALSE))))OR(((t2.c0)>>(t2.c2))))) ORDER BY ((((t2.c1) NOT NULL))|((~ (t2.c1)))) ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt0 CROSS JOIN t2 ON (((x'' IN ())) IS TRUE) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0, rt0, vt0 CROSS JOIN t2 ON (((x'' IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 CROSS JOIN t2 ON (((x'' IN ())) IS TRUE) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT (((NULL IN ())) IS TRUE)  as count FROM t0, rt0, vt0 CROSS JOIN t2 ON (((x'' IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM t0, rt0, vt0 CROSS JOIN t2 ON (((x'' IN ())) IS TRUE) WHERE ((NULL IN ()));
SELECT ALL * FROM t2 WHERE (((((((((((((t2.c1)AND(((((t2.c0)AND(t2.c1)))AND(t2.c0)))))OR(TOTAL_CHANGES())))AND((((t2.c2, t2.c1, t2.c2))>((t2.c2, t2.c1, t2.c1))))))OR(t2.c0 COLLATE RTRIM)))AND(((((t2.c0)OR(t2.c1)))AND(t2.c0)))))AND(((t2.c0)OR(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t2.c1)AND(((((t2.c0)AND(t2.c1)))AND(t2.c0)))))OR(TOTAL_CHANGES())))AND((((t2.c2, t2.c1, t2.c2))>((t2.c2, t2.c1, t2.c1))))))OR(t2.c0 COLLATE RTRIM)))AND(((((t2.c0)OR(t2.c1)))AND(t2.c0)))))AND(((t2.c0)OR(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((((((((((((t2.c1)AND(((((t2.c0)AND(t2.c1)))AND(t2.c0)))))OR(TOTAL_CHANGES())))AND((((t2.c2, t2.c1, t2.c2))>((t2.c2, t2.c1, t2.c1))))))OR(t2.c0 COLLATE RTRIM)))AND(((((t2.c0)OR(t2.c1)))AND(t2.c0)))))AND(((t2.c0)OR(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t2.c1)AND(((((t2.c0)AND(t2.c1)))AND(t2.c0)))))OR(TOTAL_CHANGES())))AND((((t2.c2, t2.c1, t2.c2))>((t2.c2, t2.c1, t2.c1))))))OR(t2.c0 COLLATE RTRIM)))AND(((((t2.c0)OR(t2.c1)))AND(t2.c0)))))AND(((t2.c0)OR(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((((((((((((t2.c1)AND(((((t2.c0)AND(t2.c1)))AND(t2.c0)))))OR(TOTAL_CHANGES())))AND((((t2.c2, t2.c1, t2.c2))>((t2.c2, t2.c1, t2.c1))))))OR(t2.c0 COLLATE RTRIM)))AND(((((t2.c0)OR(t2.c1)))AND(t2.c0)))))AND(((t2.c0)OR(t2.c0)))));
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)IS(rt0.c3)))) AND ((CAST(t0.c2 AS BLOB))))) ORDER BY '-1630401458'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c2)IS(rt0.c3)))) AND ((CAST(t0.c2 AS BLOB))))) IS TRUE)  as count FROM t0, rt0 ORDER BY '-1630401458'  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)IS(rt0.c3)))) AND ((CAST(t0.c2 AS BLOB))))) ORDER BY '-1630401458'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt0.c2)IS(rt0.c3)))) AND ((CAST(t0.c2 AS BLOB))))) IS TRUE)  as count FROM t0, rt0 ORDER BY '-1630401458'  NULLS FIRST);
SELECT ALL * FROM t0, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt0.c2)IS(rt0.c3)))) AND ((CAST(t0.c2 AS BLOB))))) ORDER BY '-1630401458'  NULLS FIRST;
SELECT ALL * FROM t2 FULL OUTER JOIN rt0 ON t2.c2 WHERE (CASE CAST(0.782054772634844 AS REAL)  WHEN (t2.c1 IN (t2.c1, rt0.c1)) THEN ((((rt0.c1)OR(t2.c0)))OR('1bmꔯ!')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.782054772634844 AS REAL)  WHEN (t2.c1 IN (t2.c1, rt0.c1)) THEN ((((rt0.c1)OR(t2.c0)))OR('1bmꔯ!')) END) IS TRUE)  as count FROM t2 FULL OUTER JOIN rt0 ON t2.c2);
SELECT ALL * FROM t2 FULL OUTER JOIN rt0 ON t2.c2 WHERE (CASE CAST(0.782054772634844 AS REAL)  WHEN (t2.c1 IN (t2.c1, rt0.c1)) THEN ((((rt0.c1)OR(t2.c0)))OR('1bmꔯ!')) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(0.782054772634844 AS REAL)  WHEN (t2.c1 IN (t2.c1, rt0.c1)) THEN ((((rt0.c1)OR(t2.c0)))OR('1bmꔯ!')) END) IS TRUE)  as count FROM t2 FULL OUTER JOIN rt0 ON t2.c2);
SELECT ALL * FROM t2 FULL OUTER JOIN rt0 ON t2.c2 WHERE (CASE CAST(0.782054772634844 AS REAL)  WHEN (t2.c1 IN (t2.c1, rt0.c1)) THEN ((((rt0.c1)OR(t2.c0)))OR('1bmꔯ!')) END);
SELECT ALL * FROM vt1, t0, t2, rt0 WHERE ((+ (((((t2.c2)OR(rt0.c1)))AND('-186852493')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t2.c2)OR(rt0.c1)))AND('-186852493'))))) IS TRUE)  as count FROM vt1, t0, t2, rt0);
SELECT ALL * FROM vt1, t0, t2, rt0 WHERE ((+ (((((t2.c2)OR(rt0.c1)))AND('-186852493')))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((t2.c2)OR(rt0.c1)))AND('-186852493'))))) IS TRUE)  as count FROM vt1, t0, t2, rt0);
SELECT ALL * FROM vt1, t0, t2, rt0 WHERE ((+ (((((t2.c2)OR(rt0.c1)))AND('-186852493')))));
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((0.10305062300284418)) AND ((vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) NOT BETWEEN ((0.10305062300284418)) AND ((vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((0.10305062300284418)) AND ((vt1.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c1)) NOT BETWEEN ((0.10305062300284418)) AND ((vt1.c0))) AS INTEGER)) IS TRUE)  as count FROM rt0, vt1, t0);
SELECT ALL COUNT(*) FROM rt0, vt1, t0 WHERE (CAST((((rt0.c1)) NOT BETWEEN ((0.10305062300284418)) AND ((vt1.c0))) AS INTEGER));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((NULL)OR(json_valid('-2129261269'))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT NULL))))AND(t0.c0 COLLATE BINARY)))AND('Z[5DJy')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)OR(json_valid('-2129261269'))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT NULL))))AND(t0.c0 COLLATE BINARY)))AND('Z[5DJy'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((NULL)OR(json_valid('-2129261269'))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT NULL))))AND(t0.c0 COLLATE BINARY)))AND('Z[5DJy')));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((NULL)OR(json_valid('-2129261269'))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT NULL))))AND(t0.c0 COLLATE BINARY)))AND('Z[5DJy'))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((((((NULL)OR(json_valid('-2129261269'))))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c1 END)))OR(((t0.c0)>(t0.c0)))))OR(((t0.c0) NOT NULL))))AND(t0.c0 COLLATE BINARY)))AND('Z[5DJy')));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((vt0.c0)LIKE(rt0.c3)) IN ()) CROSS JOIN rt0 ON json_quote(-1689197749) WHERE (((((rt0.c0)==(vt0.c0))) NOT BETWEEN (TIME(vt1.c0, vt1.c0, t0.c0)) AND ((((rt0.c2))==((t0.c0)))))) ORDER BY ((0.7933493241243504) BETWEEN (0X4f1142dd) AND ((((rt0.c3))>=((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(vt0.c0))) NOT BETWEEN (TIME(vt1.c0, vt1.c0, t0.c0)) AND ((((rt0.c2))==((t0.c0)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (((vt0.c0)LIKE(rt0.c3)) IN ()) CROSS JOIN rt0 ON json_quote(-1689197749) ORDER BY ((0.7933493241243504) BETWEEN (0x4f1142dd) AND ((((rt0.c3))>=((rt0.c3))))));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((vt0.c0)LIKE(rt0.c3)) IN ()) CROSS JOIN rt0 ON json_quote(-1689197749) WHERE (((((rt0.c0)==(vt0.c0))) NOT BETWEEN (TIME(vt1.c0, vt1.c0, t0.c0)) AND ((((rt0.c2))==((t0.c0)))))) ORDER BY ((0.7933493241243504) BETWEEN (0X4f1142dd) AND ((((rt0.c3))>=((rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)=(vt0.c0))) NOT BETWEEN (TIME(vt1.c0, vt1.c0, t0.c0)) AND ((((rt0.c2))==((t0.c0)))))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON (((vt0.c0)LIKE(rt0.c3)) IN ()) CROSS JOIN rt0 ON json_quote(-1689197749) ORDER BY ((0.7933493241243504) BETWEEN (0x4f1142dd) AND ((((rt0.c3))>=((rt0.c3))))));
SELECT * FROM vt0, t0 FULL OUTER JOIN vt1 ON (((vt0.c0)LIKE(rt0.c3)) IN ()) CROSS JOIN rt0 ON json_quote(-1689197749) WHERE (((((rt0.c0)==(vt0.c0))) NOT BETWEEN (TIME(vt1.c0, vt1.c0, t0.c0)) AND ((((rt0.c2))==((t0.c0)))))) ORDER BY ((0.7933493241243504) BETWEEN (0X4f1142dd) AND ((((rt0.c3))>=((rt0.c3)))));
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt0 ON x'' WHERE ((((((t0.c2)) BETWEEN ((t2.c2)) AND ((t2.c2))))<=(t2.c0 COLLATE RTRIM))) ORDER BY ((+ (t0.c2)) IN ((vt0.c0 IN ()), ((t2.c1)+(t0.c2)))) DESC, x'' ASC, COALESCE(((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c1)), 'S{|}w') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((t2.c2)) AND ((t2.c2))))<=(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON x'' ORDER BY ((+ (t0.c2)) IN ((vt0.c0 IN ()), ((t2.c1)+(t0.c2)))) DESC, x'' ASC, COALESCE(((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c1)), 'S{|}w') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt0 ON x'' WHERE ((((((t0.c2)) BETWEEN ((t2.c2)) AND ((t2.c2))))<=(t2.c0 COLLATE RTRIM))) ORDER BY ((+ (t0.c2)) IN ((vt0.c0 IN ()), ((t2.c1)+(t0.c2)))) DESC, x'' ASC, COALESCE(((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c1)), 'S{|}w') ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)) BETWEEN ((t2.c2)) AND ((t2.c2))))<=(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2, t0 INNER JOIN vt0 ON x'' ORDER BY ((+ (t0.c2)) IN ((vt0.c0 IN ()), ((t2.c1)+(t0.c2)))) DESC, x'' ASC, COALESCE(((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c1)), 'S{|}w') ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t2, t0 INNER JOIN vt0 ON x'' WHERE ((((((t0.c2)) BETWEEN ((t2.c2)) AND ((t2.c2))))<=(t2.c0 COLLATE RTRIM))) ORDER BY ((+ (t0.c2)) IN ((vt0.c0 IN ()), ((t2.c1)+(t0.c2)))) DESC, x'' ASC, COALESCE(((t2.c0) NOT BETWEEN (t2.c0) AND (t0.c1)), 'S{|}w') ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))OR(COALESCE(rt0.c0, rt0.c3, rt0.c0, rt0.c3))))AND((((rt0.c0))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS TRUE))OR(COALESCE(rt0.c0, rt0.c3, rt0.c0, rt0.c3))))AND((((rt0.c0))=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))OR(COALESCE(rt0.c0, rt0.c3, rt0.c0, rt0.c3))))AND((((rt0.c0))==((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS TRUE))OR(COALESCE(rt0.c0, rt0.c3, rt0.c0, rt0.c3))))AND((((rt0.c0))=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((rt0.c1) IS TRUE))OR(COALESCE(rt0.c0, rt0.c3, rt0.c0, rt0.c3))))AND((((rt0.c0))==((rt0.c2))))));
SELECT COUNT(*) FROM vt0, vt1, rt0, t2 WHERE ((+ ('-1221542156'))) ORDER BY (((t2.c0)) BETWEEN (((vt0.c0 IN (rt0.c3)))) AND ((TYPEOF(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-1221542156'))) IS TRUE)  as count FROM vt0, vt1, rt0, t2 ORDER BY (((t2.c0)) BETWEEN (((vt0.c0 IN (rt0.c3)))) AND ((TYPEOF(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t2 WHERE ((+ ('-1221542156'))) ORDER BY (((t2.c0)) BETWEEN (((vt0.c0 IN (rt0.c3)))) AND ((TYPEOF(rt0.c2)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('-1221542156'))) IS TRUE)  as count FROM vt0, vt1, rt0, t2 ORDER BY (((t2.c0)) BETWEEN (((vt0.c0 IN (rt0.c3)))) AND ((TYPEOF(rt0.c2)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt1, rt0, t2 WHERE ((+ ('-1221542156'))) ORDER BY (((t2.c0)) BETWEEN (((vt0.c0 IN (rt0.c3)))) AND ((TYPEOF(rt0.c2)))) ASC  NULLS LAST;
SELECT ALL * FROM t2, t0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(t2.c1))) BETWEEN (CAST(t2.c1 AS NUMERIC)) AND ((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(t2.c1))) BETWEEN (CAST(t2.c1 AS NUMERIC)) AND ((+ (t2.c0))))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL * FROM t2, t0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(t2.c1))) BETWEEN (CAST(t2.c1 AS NUMERIC)) AND ((+ (t2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(t2.c1))) BETWEEN (CAST(t2.c1 AS NUMERIC)) AND ((+ (t2.c0))))) IS TRUE)  as count FROM t2, t0, vt0);
SELECT ALL * FROM t2, t0, vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(t2.c1))) BETWEEN (CAST(t2.c1 AS NUMERIC)) AND ((+ (t2.c0)))));
SELECT ALL COUNT(*) FROM vt1, t2, rt0 WHERE ((((t2.c2)<(vt1.c0)) IN ())) ORDER BY (- (CAST(vt1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t2, rt0 ORDER BY (- (CAST(vt1.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1, t2, rt0 WHERE ((((t2.c2)<(vt1.c0)) IN ())) ORDER BY (- (CAST(vt1.c0 AS BLOB))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2)<(vt1.c0)) IN ())) IS TRUE)  as count FROM vt1, t2, rt0 ORDER BY (- (CAST(vt1.c0 AS BLOB))) ASC);
SELECT ALL COUNT(*) FROM vt1, t2, rt0 WHERE ((((t2.c2)<(vt1.c0)) IN ())) ORDER BY (- (CAST(vt1.c0 AS BLOB))) ASC;
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((t0.c0) IS FALSE) IN ())) ORDER BY CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((((vt1.c0)OR(1.81008353E8)))AND(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((((vt1.c0)OR(1.81008353E8)))AND(rt0.c3)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((t0.c0) IS FALSE) IN ())) ORDER BY CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((((vt1.c0)OR(1.81008353E8)))AND(rt0.c3)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0) IS FALSE) IN ())) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((((vt1.c0)OR(1.81008353E8)))AND(rt0.c3)) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t0 WHERE ((((t0.c0) IS FALSE) IN ())) ORDER BY CASE WHEN ((t0.c2)OR(t0.c2)) THEN ((((vt1.c0)OR(1.81008353E8)))AND(rt0.c3)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t2, rt0, t0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((LIKELIHOOD(rt0.c1, 0.6813219076908568), CASE WHEN t2.c1 THEN t2.c1 WHEN rt0.c1 THEN 0Xffffffffb6736f90 WHEN t2.c2 THEN vt0.c0 ELSE rt0.c3 END, (+ (rt0.c0)))) AND (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((t2.c0)GLOB(vt0.c0)), ((t2.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((LIKELIHOOD(rt0.c1, 0.6813219076908568), CASE WHEN t2.c1 THEN t2.c1 WHEN rt0.c1 THEN 0Xffffffffb6736f90 WHEN t2.c2 THEN vt0.c0 ELSE rt0.c3 END, (+ (rt0.c0)))) AND (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((t2.c0)GLOB(vt0.c0)), ((t2.c1) IS FALSE))))) IS TRUE)  as count FROM vt0, t2, rt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t2, rt0, t0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((LIKELIHOOD(rt0.c1, 0.6813219076908568), CASE WHEN t2.c1 THEN t2.c1 WHEN rt0.c1 THEN 0Xffffffffb6736f90 WHEN t2.c2 THEN vt0.c0 ELSE rt0.c3 END, (+ (rt0.c0)))) AND (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((t2.c0)GLOB(vt0.c0)), ((t2.c1) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((LIKELIHOOD(rt0.c1, 0.6813219076908568), CASE WHEN t2.c1 THEN t2.c1 WHEN rt0.c1 THEN 0Xffffffffb6736f90 WHEN t2.c2 THEN vt0.c0 ELSE rt0.c3 END, (+ (rt0.c0)))) AND (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((t2.c0)GLOB(vt0.c0)), ((t2.c1) IS FALSE))))) IS TRUE)  as count FROM vt0, t2, rt0, t0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0, t2, rt0, t0 WHERE ((((rt0.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((LIKELIHOOD(rt0.c1, 0.6813219076908568), CASE WHEN t2.c1 THEN t2.c1 WHEN rt0.c1 THEN 0Xffffffffb6736f90 WHEN t2.c2 THEN vt0.c0 ELSE rt0.c3 END, (+ (rt0.c0)))) AND (((((vt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))), ((t2.c0)GLOB(vt0.c0)), ((t2.c1) IS FALSE)))));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((~ (CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c1 WHEN vt0.c0 THEN t2.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c1 WHEN vt0.c0 THEN t2.c0 END))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((~ (CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c1 WHEN vt0.c0 THEN t2.c0 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c1 WHEN vt0.c0 THEN t2.c0 END))) IS TRUE)  as count FROM vt0, t2);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((~ (CASE t2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t2.c0 THEN t2.c1 WHEN vt0.c0 THEN t2.c0 END)));
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0, t2 WHERE (((LIKE(NULL, rt0.c2, '1'))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((LIKE(NULL, rt0.c2, '1'))OR(t0.c0))) IS TRUE)  as count FROM t0, vt1, rt0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0, t2 WHERE (((LIKE(NULL, rt0.c2, '1'))OR(t0.c0)));
SELECT SUM(count) FROM (SELECT ((((LIKE(NULL, rt0.c2, '1'))OR(t0.c0))) IS TRUE)  as count FROM t0, vt1, rt0, vt0, t2);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, vt0, t2 WHERE (((LIKE(NULL, rt0.c2, '1'))OR(t0.c0)));
SELECT * FROM t0, t2, vt0 WHERE (((vt0.c0 COLLATE NOCASE)==((- (0xffffffffa3803ede)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)==((- (0Xffffffffa3803ede))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT * FROM t0, t2, vt0 WHERE (((vt0.c0 COLLATE NOCASE)==((- (0xffffffffa3803ede)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)==((- (0Xffffffffa3803ede))))) IS TRUE)  as count FROM t0, t2, vt0);
SELECT * FROM t0, t2, vt0 WHERE (((vt0.c0 COLLATE NOCASE)==((- (0xffffffffa3803ede)))));
SELECT COUNT(*) FROM rt0, t2, t0, vt1 WHERE (((((((((((vt1.c0)OR(rt0.c0)))OR(t2.c0)))OR(t0.c2)))OR(rt0.c0))) BETWEEN ((- (t2.c2))) AND (((vt1.c0)|(rt0.c1))))) ORDER BY ((((t0.c1)GLOB(t0.c0)))OR(t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(rt0.c0)))OR(t2.c0)))OR(t0.c2)))OR(rt0.c0))) BETWEEN ((- (t2.c2))) AND (((vt1.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0, t2, t0, vt1 ORDER BY ((((t0.c1)GLOB(t0.c0)))OR(t0.c2 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt0, t2, t0, vt1 WHERE (((((((((((vt1.c0)OR(rt0.c0)))OR(t2.c0)))OR(t0.c2)))OR(rt0.c0))) BETWEEN ((- (t2.c2))) AND (((vt1.c0)|(rt0.c1))))) ORDER BY ((((t0.c1)GLOB(t0.c0)))OR(t0.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt1.c0)OR(rt0.c0)))OR(t2.c0)))OR(t0.c2)))OR(rt0.c0))) BETWEEN ((- (t2.c2))) AND (((vt1.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0, t2, t0, vt1 ORDER BY ((((t0.c1)GLOB(t0.c0)))OR(t0.c2 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM rt0, t2, t0, vt1 WHERE (((((((((((vt1.c0)OR(rt0.c0)))OR(t2.c0)))OR(t0.c2)))OR(rt0.c0))) BETWEEN ((- (t2.c2))) AND (((vt1.c0)|(rt0.c1))))) ORDER BY ((((t0.c1)GLOB(t0.c0)))OR(t0.c2 COLLATE NOCASE)) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0, t2 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t2);
SELECT ALL COUNT(*) FROM vt0, rt0, t2 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, t2);
SELECT ALL COUNT(*) FROM vt0, rt0, t2 WHERE (CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))) AS INTEGER));
SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN (t0.c1) AND ((((rt0.c3, '碧+xK', t0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((t0.c1, rt0.c2, rt0.c3)))))) ORDER BY ((((((((t0.c0 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(x'b0d8')))))OR(((rt0.c0)/(rt0.c3)))))AND(t0.c1)))AND('-214026373'));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) NOT BETWEEN (t0.c1) AND ((((rt0.c3, '碧+xK', t0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((t0.c1, rt0.c2, rt0.c3)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((t0.c0 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(x'b0d8')))))OR(((rt0.c0)/(rt0.c3)))))AND(t0.c1)))AND('-214026373')));
SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN (t0.c1) AND ((((rt0.c3, '碧+xK', t0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((t0.c1, rt0.c2, rt0.c3)))))) ORDER BY ((((((((t0.c0 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(x'b0d8')))))OR(((rt0.c0)/(rt0.c3)))))AND(t0.c1)))AND('-214026373'));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) NOT BETWEEN (t0.c1) AND ((((rt0.c3, '碧+xK', t0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((t0.c1, rt0.c2, rt0.c3)))))) IS TRUE)  as count FROM rt0, t0 ORDER BY ((((((((t0.c0 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(x'b0d8')))))OR(((rt0.c0)/(rt0.c3)))))AND(t0.c1)))AND('-214026373')));
SELECT ALL * FROM rt0, t0 WHERE (((CAST(t0.c1 AS TEXT)) NOT BETWEEN (t0.c1) AND ((((rt0.c3, '碧+xK', t0.c2)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((t0.c1, rt0.c2, rt0.c3)))))) ORDER BY ((((((((t0.c0 COLLATE NOCASE)OR(((((((((t0.c0)OR(t0.c2)))AND(rt0.c3)))OR(rt0.c3)))OR(x'b0d8')))))OR(((rt0.c0)/(rt0.c3)))))AND(t0.c1)))AND('-214026373'));
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON rt0.c3 FULL OUTER JOIN t0 ON (t0.c2 IN (t0.c1)) COLLATE RTRIM LEFT OUTER JOIN t2 ON (((t2.c1, x'', vt0.c0)) BETWEEN ((((t0.c2)AND(rt0.c1)), NULLIF(t2.c2, rt0.c3), ((rt0.c1)<>(rt0.c1)))) AND ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN rt0.c0 WHEN t2.c2 THEN t2.c1 ELSE '528713828' END, t2.c2 COLLATE BINARY, ((rt0.c3)%(vt0.c0))))) WHERE (rt0.c3) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c2) AND (rt0.c3)) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END, (((t2.c1, t2.c0, t2.c2)) NOT BETWEEN ((((((t2.c2)OR(t0.c0)))AND(rt0.c3)), (+ (t2.c1)), (((rt0.c1, rt0.c0, t2.c0, rt0.c1, t0.c0)) BETWEEN ((rt0.c2, rt0.c0, t2.c1, rt0.c2, t2.c0)) AND ((vt0.c0, t0.c0, t0.c1, t2.c2, t0.c0))))) AND (((((t0.c0))<((t2.c1))), ((((rt0.c1)OR(t0.c1)))OR(rt0.c1)), ((((t2.c2)AND(rt0.c3)))AND(t2.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c3 FULL OUTER JOIN t0 ON (t0.c2 IN (t0.c1)) COLLATE RTRIM LEFT OUTER JOIN t2 ON (((t2.c1, x'', vt0.c0)) BETWEEN ((((t0.c2)AND(rt0.c1)), NULLIF(t2.c2, rt0.c3), ((rt0.c1)!=(rt0.c1)))) AND ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN rt0.c0 WHEN t2.c2 THEN t2.c1 ELSE '528713828' END, t2.c2 COLLATE BINARY, ((rt0.c3)%(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c2) AND (rt0.c3)) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END, (((t2.c1, t2.c0, t2.c2)) NOT BETWEEN ((((((t2.c2)OR(t0.c0)))AND(rt0.c3)), (+ (t2.c1)), (((rt0.c1, rt0.c0, t2.c0, rt0.c1, t0.c0)) BETWEEN ((rt0.c2, rt0.c0, t2.c1, rt0.c2, t2.c0)) AND ((vt0.c0, t0.c0, t0.c1, t2.c2, t0.c0))))) AND (((((t0.c0))<((t2.c1))), ((((rt0.c1)OR(t0.c1)))OR(rt0.c1)), ((((t2.c2)AND(rt0.c3)))AND(t2.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON rt0.c3 FULL OUTER JOIN t0 ON (t0.c2 IN (t0.c1)) COLLATE RTRIM LEFT OUTER JOIN t2 ON (((t2.c1, x'', vt0.c0)) BETWEEN ((((t0.c2)AND(rt0.c1)), NULLIF(t2.c2, rt0.c3), ((rt0.c1)<>(rt0.c1)))) AND ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN rt0.c0 WHEN t2.c2 THEN t2.c1 ELSE '528713828' END, t2.c2 COLLATE BINARY, ((rt0.c3)%(vt0.c0))))) WHERE (rt0.c3) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c2) AND (rt0.c3)) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END, (((t2.c1, t2.c0, t2.c2)) NOT BETWEEN ((((((t2.c2)OR(t0.c0)))AND(rt0.c3)), (+ (t2.c1)), (((rt0.c1, rt0.c0, t2.c0, rt0.c1, t0.c0)) BETWEEN ((rt0.c2, rt0.c0, t2.c1, rt0.c2, t2.c0)) AND ((vt0.c0, t0.c0, t0.c1, t2.c2, t0.c0))))) AND (((((t0.c0))<((t2.c1))), ((((rt0.c1)OR(t0.c1)))OR(rt0.c1)), ((((t2.c2)AND(rt0.c3)))AND(t2.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c3 FULL OUTER JOIN t0 ON (t0.c2 IN (t0.c1)) COLLATE RTRIM LEFT OUTER JOIN t2 ON (((t2.c1, x'', vt0.c0)) BETWEEN ((((t0.c2)AND(rt0.c1)), NULLIF(t2.c2, rt0.c3), ((rt0.c1)!=(rt0.c1)))) AND ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN rt0.c0 WHEN t2.c2 THEN t2.c1 ELSE '528713828' END, t2.c2 COLLATE BINARY, ((rt0.c3)%(vt0.c0))))) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c2) AND (rt0.c3)) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END, (((t2.c1, t2.c0, t2.c2)) NOT BETWEEN ((((((t2.c2)OR(t0.c0)))AND(rt0.c3)), (+ (t2.c1)), (((rt0.c1, rt0.c0, t2.c0, rt0.c1, t0.c0)) BETWEEN ((rt0.c2, rt0.c0, t2.c1, rt0.c2, t2.c0)) AND ((vt0.c0, t0.c0, t0.c1, t2.c2, t0.c0))))) AND (((((t0.c0))<((t2.c1))), ((((rt0.c1)OR(t0.c1)))OR(rt0.c1)), ((((t2.c2)AND(rt0.c3)))AND(t2.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED INNER JOIN vt0 ON rt0.c3 FULL OUTER JOIN t0 ON (t0.c2 IN (t0.c1)) COLLATE RTRIM LEFT OUTER JOIN t2 ON (((t2.c1, x'', vt0.c0)) BETWEEN ((((t0.c2)AND(rt0.c1)), NULLIF(t2.c2, rt0.c3), ((rt0.c1)<>(rt0.c1)))) AND ((CASE rt0.c2  WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN rt0.c0 WHEN t2.c2 THEN t2.c1 ELSE '528713828' END, t2.c2 COLLATE BINARY, ((rt0.c3)%(vt0.c0))))) WHERE (rt0.c3) ORDER BY CASE WHEN ((vt0.c0) BETWEEN (t0.c2) AND (rt0.c3)) THEN (+ (vt0.c0)) ELSE vt0.c0 COLLATE RTRIM END, (((t2.c1, t2.c0, t2.c2)) NOT BETWEEN ((((((t2.c2)OR(t0.c0)))AND(rt0.c3)), (+ (t2.c1)), (((rt0.c1, rt0.c0, t2.c0, rt0.c1, t0.c0)) BETWEEN ((rt0.c2, rt0.c0, t2.c1, rt0.c2, t2.c0)) AND ((vt0.c0, t0.c0, t0.c1, t2.c2, t0.c0))))) AND (((((t0.c0))<((t2.c1))), ((((rt0.c1)OR(t0.c1)))OR(rt0.c1)), ((((t2.c2)AND(rt0.c3)))AND(t2.c2))))) DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((- (t0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE)  NULLS FIRST, t0.c0 DESC  NULLS FIRST, ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c2)))AND(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE)  NULLS FIRST, t0.c0 DESC  NULLS FIRST, ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c2)))AND(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((- (t0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE)  NULLS FIRST, t0.c0 DESC  NULLS FIRST, ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c2)))AND(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((- (t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, vt0, t0, rt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE)  NULLS FIRST, t0.c0 DESC  NULLS FIRST, ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c2)))AND(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0, t0, rt0 WHERE ((- (t0.c1 COLLATE NOCASE))) ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c1))) IS FALSE)  NULLS FIRST, t0.c0 DESC  NULLS FIRST, ((((((((rt0.c2)AND(rt0.c1)))AND(t0.c2)))AND(vt1.c0)))OR(rt0.c0)) COLLATE NOCASE;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2857228391605702)/(0.7249262623642769)) COLLATE NOCASE CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN CASE WHEN NULL THEN rt0.c3 END THEN (((rt0.c3))<((rt0.c0))) ELSE ((rt0.c2)<(rt0.c3)) END WHERE (rt0.c2) ORDER BY ((((vt1.c0)&(vt0.c0))) IS TRUE)  NULLS FIRST, ((((rt0.c1)AND(((((((((vt0.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2857228391605702)/(0.7249262623642769)) COLLATE NOCASE CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN CASE WHEN NULL THEN rt0.c3 END THEN (((rt0.c3))<((rt0.c0))) ELSE ((rt0.c2)<(rt0.c3)) END ORDER BY ((((vt1.c0)&(vt0.c0))) IS TRUE)  NULLS FIRST, ((((rt0.c1)AND(((((((((vt0.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2857228391605702)/(0.7249262623642769)) COLLATE NOCASE CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN CASE WHEN NULL THEN rt0.c3 END THEN (((rt0.c3))<((rt0.c0))) ELSE ((rt0.c2)<(rt0.c3)) END WHERE (rt0.c2) ORDER BY ((((vt1.c0)&(vt0.c0))) IS TRUE)  NULLS FIRST, ((((rt0.c1)AND(((((((((vt0.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2857228391605702)/(0.7249262623642769)) COLLATE NOCASE CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN CASE WHEN NULL THEN rt0.c3 END THEN (((rt0.c3))<((rt0.c0))) ELSE ((rt0.c2)<(rt0.c3)) END ORDER BY ((((vt1.c0)&(vt0.c0))) IS TRUE)  NULLS FIRST, ((((rt0.c1)AND(((((((((vt0.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((0.2857228391605702)/(0.7249262623642769)) COLLATE NOCASE CROSS JOIN vt1 ON CASE CAST(vt0.c0 AS REAL)  WHEN CASE WHEN NULL THEN rt0.c3 END THEN (((rt0.c3))<((rt0.c0))) ELSE ((rt0.c2)<(rt0.c3)) END WHERE (rt0.c2) ORDER BY ((((vt1.c0)&(vt0.c0))) IS TRUE)  NULLS FIRST, ((((rt0.c1)AND(((((((((vt0.c0)AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c3)))AND(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM t2, t0, vt1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c1)))<=(CASE WHEN vt0.c0 THEN t2.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c1)))<=(CASE WHEN vt0.c0 THEN t2.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM t2, t0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t2, t0, vt1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c1)))<=(CASE WHEN vt0.c0 THEN t2.c2 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c1)))<=(CASE WHEN vt0.c0 THEN t2.c2 ELSE rt0.c1 END))) IS TRUE)  as count FROM t2, t0, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t2, t0, vt1, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c3) AND (t0.c1)))<=(CASE WHEN vt0.c0 THEN t2.c2 ELSE rt0.c1 END)));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0))==((vt1.c0)))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0))=((vt1.c0)))) NOT BETWEEN (((vt1.c0)+(vt1.c0))) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ((- (rt0.c0)))) LEFT OUTER JOIN t2 ON ((0.7283917472359095) IS TRUE) CROSS JOIN vt1 ON (NOT (CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 END)) WHERE ((- (((((0.6178437129880693)AND(vt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((0.6178437129880693)AND(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ((- (rt0.c0)))) LEFT OUTER JOIN t2 ON ((0.7283917472359095) IS TRUE) CROSS JOIN vt1 ON (NOT (CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 END)));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ((- (rt0.c0)))) LEFT OUTER JOIN t2 ON ((0.7283917472359095) IS TRUE) CROSS JOIN vt1 ON (NOT (CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 END)) WHERE ((- (((((0.6178437129880693)AND(vt0.c0)))OR(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((0.6178437129880693)AND(vt0.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ((- (rt0.c0)))) LEFT OUTER JOIN t2 ON ((0.7283917472359095) IS TRUE) CROSS JOIN vt1 ON (NOT (CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 END)));
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON (CAST(rt0.c0 AS REAL) IN ((- (rt0.c0)))) LEFT OUTER JOIN t2 ON ((0.7283917472359095) IS TRUE) CROSS JOIN vt1 ON (NOT (CASE WHEN t0.c1 THEN vt0.c0 WHEN rt0.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 END)) WHERE ((- (((((0.6178437129880693)AND(vt0.c0)))OR(rt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))>=(((0.47596148590606235)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))>=(((0.47596148590606235)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))>=(((0.47596148590606235)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))>=(((0.47596148590606235)LIKE(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (x'') AND (rt0.c3)))>=(((0.47596148590606235)LIKE(rt0.c0)))));
SELECT ALL * FROM t0, vt0, t2, rt0, vt1 WHERE (NULL) ORDER BY ((((((((((0.5007843983854068)OR(t0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)))<<((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, t2, rt0, vt1 ORDER BY ((((((((((0.5007843983854068)OR(t0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)))<<((vt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, t2, rt0, vt1 WHERE (NULL) ORDER BY ((((((((((0.5007843983854068)OR(t0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)))<<((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0, t2, rt0, vt1 ORDER BY ((((((((((0.5007843983854068)OR(t0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)))<<((vt1.c0 IN ()))) ASC  NULLS LAST);
SELECT ALL * FROM t0, vt0, t2, rt0, vt1 WHERE (NULL) ORDER BY ((((((((((0.5007843983854068)OR(t0.c2)))OR(vt1.c0)))OR(rt0.c0)))OR(vt0.c0)))<<((vt1.c0 IN ()))) ASC  NULLS LAST;
SELECT * FROM rt0, t0, vt1, t2 WHERE (CASE WHEN ((t0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((((((((((((vt1.c0)AND('1114626029')))OR('{}')))AND(NULL)))AND(t2.c1)))OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((((((((((((vt1.c0)AND('1114626029')))OR('{}')))AND(NULL)))AND(t2.c1)))OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM rt0, t0, vt1, t2);
SELECT * FROM rt0, t0, vt1, t2 WHERE (CASE WHEN ((t0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((((((((((((vt1.c0)AND('1114626029')))OR('{}')))AND(NULL)))AND(t2.c1)))OR(t0.c0)))OR(t0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((((((((((((vt1.c0)AND('1114626029')))OR('{}')))AND(NULL)))AND(t2.c1)))OR(t0.c0)))OR(t0.c0)) END) IS TRUE)  as count FROM rt0, t0, vt1, t2);
SELECT * FROM rt0, t0, vt1, t2 WHERE (CASE WHEN ((t0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((((((((((((vt1.c0)AND('1114626029')))OR('{}')))AND(NULL)))AND(t2.c1)))OR(t0.c0)))OR(t0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2) BETWEEN (((rt0.c3)%(rt0.c1))) AND (CAST(0.9441261911488488 AS BLOB)))) ORDER BY ((((NULL COLLATE BINARY)AND((~ (rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((rt0.c3)%(rt0.c1))) AND (CAST(0.9441261911488488 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((NULL COLLATE BINARY)AND((~ (rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2) BETWEEN (((rt0.c3)%(rt0.c1))) AND (CAST(0.9441261911488488 AS BLOB)))) ORDER BY ((((NULL COLLATE BINARY)AND((~ (rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c3))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (((rt0.c3)%(rt0.c1))) AND (CAST(0.9441261911488488 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0, vt1 ORDER BY ((((NULL COLLATE BINARY)AND((~ (rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c3))) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0, vt1 WHERE (((rt0.c2) BETWEEN (((rt0.c3)%(rt0.c1))) AND (CAST(0.9441261911488488 AS BLOB)))) ORDER BY ((((NULL COLLATE BINARY)AND((~ (rt0.c0)))))AND(CAST(vt1.c0 AS INTEGER)))  NULLS LAST, ((((rt0.c2)IS NOT(rt0.c3))) ISNULL);
SELECT COUNT(*) FROM vt1, t2, t0, rt0 WHERE (x'4f6371a6') ORDER BY ((((t0.c1)AND(rt0.c0)))OR('-1334548120')) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'4f6371a6') IS TRUE)  as count FROM vt1, t2, t0, rt0 ORDER BY ((((t0.c1)AND(rt0.c0)))OR('-1334548120')) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, t2, t0, rt0 WHERE (x'4f6371a6') ORDER BY ((((t0.c1)AND(rt0.c0)))OR('-1334548120')) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'4f6371a6') IS TRUE)  as count FROM vt1, t2, t0, rt0 ORDER BY ((((t0.c1)AND(rt0.c0)))OR('-1334548120')) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt1, t2, t0, rt0 WHERE (x'4f6371a6') ORDER BY ((((t0.c1)AND(rt0.c0)))OR('-1334548120')) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t2, rt0, t0 WHERE (CAST(IFNULL(DISTINCT 'VSKG?3', t0.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT 'VSKG?3', t0.c2) AS REAL)) IS TRUE)  as count FROM t2, rt0, t0);
SELECT ALL COUNT(*) FROM t2, rt0, t0 WHERE (CAST(IFNULL(DISTINCT 'VSKG?3', t0.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(IFNULL(DISTINCT 'VSKG?3', t0.c2) AS REAL)) IS TRUE)  as count FROM t2, rt0, t0);
SELECT ALL COUNT(*) FROM t2, rt0, t0 WHERE (CAST(IFNULL(DISTINCT 'VSKG?3', t0.c2) AS REAL));
SELECT ALL * FROM vt0, rt0, vt1, t2 WHERE ((t2.c1 COLLATE NOCASE IN ())) ORDER BY '%f{[?R' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t2.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t2 ORDER BY '%f{[?R' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1, t2 WHERE ((t2.c1 COLLATE NOCASE IN ())) ORDER BY '%f{[?R' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t2.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0, rt0, vt1, t2 ORDER BY '%f{[?R' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0, vt1, t2 WHERE ((t2.c1 COLLATE NOCASE IN ())) ORDER BY '%f{[?R' ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt1 ON ((TOTAL_CHANGES())%(((vt1.c0) NOT NULL))) CROSS JOIN t2 ON ((((rt0.c2) ISNULL))!=(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))OR(rt0.c1)))) WHERE (((((UNLIKELY(DISTINCT t0.c1))OR((rt0.c3 IN ()))))AND(t2.c1 COLLATE NOCASE))) ORDER BY TRIM(((t2.c2) NOTNULL), ((t0.c2) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT t0.c1))OR((rt0.c3 IN ()))))AND(t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt1 ON ((TOTAL_CHANGES())%(((vt1.c0) NOT NULL))) CROSS JOIN t2 ON ((((rt0.c2) ISNULL))<>(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))OR(rt0.c1)))) ORDER BY TRIM(((t2.c2) NOTNULL), ((t0.c2) ISNULL)) ASC);
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt1 ON ((TOTAL_CHANGES())%(((vt1.c0) NOT NULL))) CROSS JOIN t2 ON ((((rt0.c2) ISNULL))!=(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))OR(rt0.c1)))) WHERE (((((UNLIKELY(DISTINCT t0.c1))OR((rt0.c3 IN ()))))AND(t2.c1 COLLATE NOCASE))) ORDER BY TRIM(((t2.c2) NOTNULL), ((t0.c2) ISNULL)) ASC;
SELECT SUM(count) FROM (SELECT ((((((UNLIKELY(DISTINCT t0.c1))OR((rt0.c3 IN ()))))AND(t2.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0, rt0 FULL OUTER JOIN vt1 ON ((TOTAL_CHANGES())%(((vt1.c0) NOT NULL))) CROSS JOIN t2 ON ((((rt0.c2) ISNULL))<>(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))OR(rt0.c1)))) ORDER BY TRIM(((t2.c2) NOTNULL), ((t0.c2) ISNULL)) ASC);
SELECT COUNT(*) FROM t0, rt0 FULL OUTER JOIN vt1 ON ((TOTAL_CHANGES())%(((vt1.c0) NOT NULL))) CROSS JOIN t2 ON ((((rt0.c2) ISNULL))!=(((((((((rt0.c2)AND(vt1.c0)))AND(vt1.c0)))OR(t2.c0)))OR(rt0.c1)))) WHERE (((((UNLIKELY(DISTINCT t0.c1))OR((rt0.c3 IN ()))))AND(t2.c1 COLLATE NOCASE))) ORDER BY TRIM(((t2.c2) NOTNULL), ((t0.c2) ISNULL)) ASC;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t2 ON TRIM(DISTINCT TOTAL_CHANGES(), ((t0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FULL OUTER JOIN vt0 ON ((((rt0.c1)+(t2.c2)))==(t0.c1)) INNER JOIN t0 ON CASE WHEN t2.c1 THEN ((vt1.c0)!=(1821965777)) WHEN COALESCE(DISTINCT t2.c2, rt0.c3) THEN ((((t0.c1)OR(vt1.c0)))AND(NULL)) WHEN ((t0.c0)-(t2.c0)) THEN (- (vt0.c0)) ELSE CAST(t2.c0 AS INTEGER) END FULL OUTER JOIN rt0 ON 0.45888996639076574 WHERE (((CAST(t2.c0 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON TRIM(DISTINCT TOTAL_CHANGES(), ((t0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FULL OUTER JOIN vt0 ON ((((rt0.c1)+(t2.c2)))=(t0.c1)) INNER JOIN t0 ON CASE WHEN t2.c1 THEN ((vt1.c0)<>(1821965777)) WHEN COALESCE(DISTINCT t2.c2, rt0.c3) THEN ((((t0.c1)OR(vt1.c0)))AND(NULL)) WHEN ((t0.c0)-(t2.c0)) THEN (- (vt0.c0)) ELSE CAST(t2.c0 AS INTEGER) END FULL OUTER JOIN rt0 ON 0.45888996639076574);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t2 ON TRIM(DISTINCT TOTAL_CHANGES(), ((t0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FULL OUTER JOIN vt0 ON ((((rt0.c1)+(t2.c2)))==(t0.c1)) INNER JOIN t0 ON CASE WHEN t2.c1 THEN ((vt1.c0)!=(1821965777)) WHEN COALESCE(DISTINCT t2.c2, rt0.c3) THEN ((((t0.c1)OR(vt1.c0)))AND(NULL)) WHEN ((t0.c0)-(t2.c0)) THEN (- (vt0.c0)) ELSE CAST(t2.c0 AS INTEGER) END FULL OUTER JOIN rt0 ON 0.45888996639076574 WHERE (((CAST(t2.c0 AS BLOB)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c0 AS BLOB)) IS FALSE)) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON TRIM(DISTINCT TOTAL_CHANGES(), ((t0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) FULL OUTER JOIN vt0 ON ((((rt0.c1)+(t2.c2)))=(t0.c1)) INNER JOIN t0 ON CASE WHEN t2.c1 THEN ((vt1.c0)<>(1821965777)) WHEN COALESCE(DISTINCT t2.c2, rt0.c3) THEN ((((t0.c1)OR(vt1.c0)))AND(NULL)) WHEN ((t0.c0)-(t2.c0)) THEN (- (vt0.c0)) ELSE CAST(t2.c0 AS INTEGER) END FULL OUTER JOIN rt0 ON 0.45888996639076574);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((((((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0 COLLATE BINARY)))OR(((((((((t0.c0)OR(t0.c2)))AND(0xffffffffce5bdf8c)))AND(t0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0 COLLATE BINARY)))OR(((((((((t0.c0)OR(t0.c2)))AND(0xffffffffce5bdf8c)))AND(t0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((((((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0 COLLATE BINARY)))OR(((((((((t0.c0)OR(t0.c2)))AND(0xffffffffce5bdf8c)))AND(t0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0 COLLATE BINARY)))OR(((((((((t0.c0)OR(t0.c2)))AND(0xffffffffce5bdf8c)))AND(t0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0, t0, vt1);
SELECT COUNT(*) FROM rt0, t0, vt1 WHERE ((((((((((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))OR(rt0.c2)))OR(t0.c0)))AND(rt0.c0 COLLATE BINARY)))OR(((((((((t0.c0)OR(t0.c2)))AND(0xffffffffce5bdf8c)))AND(t0.c2)))AND(rt0.c2)))));
SELECT * FROM rt0, vt0, t2 WHERE (CASE '{&id'  WHEN ((t2.c2) NOT NULL) THEN ((rt0.c1)!=(rt0.c1)) ELSE ((((rt0.c3)OR(t2.c0)))AND(t2.c0)) END) ORDER BY (((t2.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '{&id'  WHEN ((t2.c2) NOT NULL) THEN ((rt0.c1)!=(rt0.c1)) ELSE ((((rt0.c3)OR(t2.c0)))AND(t2.c0)) END) IS TRUE)  as count FROM rt0, vt0, t2 ORDER BY (((t2.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC);
SELECT * FROM rt0, vt0, t2 WHERE (CASE '{&id'  WHEN ((t2.c2) NOT NULL) THEN ((rt0.c1)!=(rt0.c1)) ELSE ((((rt0.c3)OR(t2.c0)))AND(t2.c0)) END) ORDER BY (((t2.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '{&id'  WHEN ((t2.c2) NOT NULL) THEN ((rt0.c1)!=(rt0.c1)) ELSE ((((rt0.c3)OR(t2.c0)))AND(t2.c0)) END) IS TRUE)  as count FROM rt0, vt0, t2 ORDER BY (((t2.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC);
SELECT * FROM rt0, vt0, t2 WHERE (CASE '{&id'  WHEN ((t2.c2) NOT NULL) THEN ((rt0.c1)!=(rt0.c1)) ELSE ((((rt0.c3)OR(t2.c0)))AND(t2.c0)) END) ORDER BY (((t2.c2) NOT BETWEEN (rt0.c1) AND (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM t2 WHERE (UNLIKELY(DISTINCT ((t2.c2)>=(t2.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t2.c2)>=(t2.c1)))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (UNLIKELY(DISTINCT ((t2.c2)>=(t2.c1))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((t2.c2)>=(t2.c1)))) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (UNLIKELY(DISTINCT ((t2.c2)>=(t2.c1))));
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 LEFT OUTER JOIN t2 ON t0.c0 WHERE (((UPPER(DISTINCT '1029603681'))LIKE(((rt0.c1)<<(0xffffffffc8587631))))) ORDER BY (~ (TYPEOF(DISTINCT t2.c0))) ASC, x'' ASC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT '1029603681'))LIKE(((rt0.c1)<<(0xffffffffc8587631))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 LEFT OUTER JOIN t2 ON t0.c0 ORDER BY (~ (TYPEOF(DISTINCT t2.c0))) ASC, x'' ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 LEFT OUTER JOIN t2 ON t0.c0 WHERE (((UPPER(DISTINCT '1029603681'))LIKE(((rt0.c1)<<(0xffffffffc8587631))))) ORDER BY (~ (TYPEOF(DISTINCT t2.c0))) ASC, x'' ASC;
SELECT SUM(count) FROM (SELECT ((((UPPER(DISTINCT '1029603681'))LIKE(((rt0.c1)<<(0xffffffffc8587631))))) IS TRUE)  as count FROM t0, rt0, vt1, vt0 LEFT OUTER JOIN t2 ON t0.c0 ORDER BY (~ (TYPEOF(DISTINCT t2.c0))) ASC, x'' ASC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, vt0 LEFT OUTER JOIN t2 ON t0.c0 WHERE (((UPPER(DISTINCT '1029603681'))LIKE(((rt0.c1)<<(0xffffffffc8587631))))) ORDER BY (~ (TYPEOF(DISTINCT t2.c0))) ASC, x'' ASC;
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((+ (((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((+ (((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE ((+ (((rt0.c3) NOT BETWEEN (t0.c1) AND (t0.c0)))));
SELECT * FROM t2 CROSS JOIN vt1 ON (+ (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON TYPEOF(CAST(vt1.c0 AS TEXT)) LEFT OUTER JOIN rt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) RIGHT OUTER JOIN vt0 ON CAST(((t2.c0) ISNULL) AS REAL) WHERE (((t2.c2 COLLATE RTRIM)+(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((t2.c2 COLLATE RTRIM)+(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON (+ (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON TYPEOF(CAST(vt1.c0 AS TEXT)) LEFT OUTER JOIN rt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) RIGHT OUTER JOIN vt0 ON CAST(((t2.c0) ISNULL) AS REAL));
SELECT * FROM t2 CROSS JOIN vt1 ON (+ (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON TYPEOF(CAST(vt1.c0 AS TEXT)) LEFT OUTER JOIN rt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) RIGHT OUTER JOIN vt0 ON CAST(((t2.c0) ISNULL) AS REAL) WHERE (((t2.c2 COLLATE RTRIM)+(CAST(rt0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((t2.c2 COLLATE RTRIM)+(CAST(rt0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t2 CROSS JOIN vt1 ON (+ (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON TYPEOF(CAST(vt1.c0 AS TEXT)) LEFT OUTER JOIN rt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) RIGHT OUTER JOIN vt0 ON CAST(((t2.c0) ISNULL) AS REAL));
SELECT * FROM t2 CROSS JOIN vt1 ON (+ (CASE WHEN vt1.c0 THEN NULL ELSE vt1.c0 END)) RIGHT OUTER JOIN t0 ON TYPEOF(CAST(vt1.c0 AS TEXT)) LEFT OUTER JOIN rt0 ON CAST(vt1.c0 COLLATE RTRIM AS NUMERIC) RIGHT OUTER JOIN vt0 ON CAST(((t2.c0) ISNULL) AS REAL) WHERE (((t2.c2 COLLATE RTRIM)+(CAST(rt0.c2 AS NUMERIC))));
SELECT * FROM vt1, t0, t2 WHERE ((((~ (t2.c2)))<(((t2.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((~ (t2.c2)))<(((t2.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT * FROM vt1, t0, t2 WHERE ((((~ (t2.c2)))<(((t2.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((((~ (t2.c2)))<(((t2.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, t0, t2);
SELECT * FROM vt1, t0, t2 WHERE ((((~ (t2.c2)))<(((t2.c0) NOTNULL))));
SELECT ALL * FROM rt0, t0, t2 WHERE (((rt0.c1)+((+ (t0.c2))))) ORDER BY CASE WHEN t2.c2 THEN 'Yy\rj' ELSE rt0.c2 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)+((+ (t0.c2))))) IS TRUE)  as count FROM rt0, t0, t2 ORDER BY CASE WHEN t2.c2 THEN 'Yy\rj' ELSE rt0.c2 END COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, t0, t2 WHERE (((rt0.c1)+((+ (t0.c2))))) ORDER BY CASE WHEN t2.c2 THEN 'Yy\rj' ELSE rt0.c2 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1)+((+ (t0.c2))))) IS TRUE)  as count FROM rt0, t0, t2 ORDER BY CASE WHEN t2.c2 THEN 'Yy\rj' ELSE rt0.c2 END COLLATE RTRIM DESC);
SELECT ALL * FROM rt0, t0, t2 WHERE (((rt0.c1)+((+ (t0.c2))))) ORDER BY CASE WHEN t2.c2 THEN 'Yy\rj' ELSE rt0.c2 END COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t0, t2, vt1, vt0, rt0 WHERE (((CASE WHEN t2.c0 THEN rt0.c3 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t2.c0 THEN rt0.c3 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, t2, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, t2, vt1, vt0, rt0 WHERE (((CASE WHEN t2.c0 THEN rt0.c3 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t2.c0 THEN rt0.c3 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t0, t2, vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM t0, t2, vt1, vt0, rt0 WHERE (((CASE WHEN t2.c0 THEN rt0.c3 END) NOT BETWEEN (((t0.c0) IS FALSE)) AND (CASE vt0.c0  WHEN vt1.c0 THEN rt0.c1 END)));
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT * FROM t0, t2 INNER JOIN rt0 ON (((rt0.c2 IN ()))-(((rt0.c0)%(t0.c0)))) RIGHT OUTER JOIN vt0 ON CAST((NOT (t2.c2)) AS TEXT) WHERE ((((t0.c1 IN (t0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN t2.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c1 WHEN 0.18595340378153158 THEN t2.c2 ELSE t0.c2 END) AND (CAST(t2.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN t2.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c1 WHEN 0.18595340378153158 THEN t2.c2 ELSE t0.c2 END) AND (CAST(t2.c2 AS BLOB)))) IS TRUE)  as count FROM t0, t2 INNER JOIN rt0 ON (((rt0.c2 IN ()))-(((rt0.c0)%(t0.c0)))) RIGHT OUTER JOIN vt0 ON CAST((NOT (t2.c2)) AS TEXT));
SELECT * FROM t0, t2 INNER JOIN rt0 ON (((rt0.c2 IN ()))-(((rt0.c0)%(t0.c0)))) RIGHT OUTER JOIN vt0 ON CAST((NOT (t2.c2)) AS TEXT) WHERE ((((t0.c1 IN (t0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN t2.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c1 WHEN 0.18595340378153158 THEN t2.c2 ELSE t0.c2 END) AND (CAST(t2.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN (t0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN t2.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c1 WHEN 0.18595340378153158 THEN t2.c2 ELSE t0.c2 END) AND (CAST(t2.c2 AS BLOB)))) IS TRUE)  as count FROM t0, t2 INNER JOIN rt0 ON (((rt0.c2 IN ()))-(((rt0.c0)%(t0.c0)))) RIGHT OUTER JOIN vt0 ON CAST((NOT (t2.c2)) AS TEXT));
SELECT * FROM t0, t2 INNER JOIN rt0 ON (((rt0.c2 IN ()))-(((rt0.c0)%(t0.c0)))) RIGHT OUTER JOIN vt0 ON CAST((NOT (t2.c2)) AS TEXT) WHERE ((((t0.c1 IN (t0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN t2.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c1 WHEN 0.18595340378153158 THEN t2.c2 ELSE t0.c2 END) AND (CAST(t2.c2 AS BLOB))));
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(-642825093 AS REAL) LEFT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c1 COLLATE NOCASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) WHEN rt0.c2 THEN (((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN NULL THEN ((NULL)AND(t0.c1)) END WHERE (((((('fZ%G	P')<>(t0.c0)), CAST('-1282618820' AS TEXT), CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN t0.c1 END, ((rt0.c2)>>(rt0.c1))))<((((vt0.c0)IS(t0.c1)), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)AND(rt0.c1)), (((rt0.c1))<>((t0.c0))), 1970495724))));
SELECT SUM(count) FROM (SELECT ALL ((((((('fZ%G	P')!=(t0.c0)), CAST('-1282618820' AS TEXT), CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN t0.c1 END, ((rt0.c2)>>(rt0.c1))))<((((vt0.c0)IS(t0.c1)), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)AND(rt0.c1)), (((rt0.c1))<>((t0.c0))), 1970495724)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(-642825093 AS REAL) LEFT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c1 COLLATE NOCASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) WHEN rt0.c2 THEN (((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN NULL THEN ((NULL)AND(t0.c1)) END);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(-642825093 AS REAL) LEFT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c1 COLLATE NOCASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) WHEN rt0.c2 THEN (((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN NULL THEN ((NULL)AND(t0.c1)) END WHERE (((((('fZ%G	P')<>(t0.c0)), CAST('-1282618820' AS TEXT), CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN t0.c1 END, ((rt0.c2)>>(rt0.c1))))<((((vt0.c0)IS(t0.c1)), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)AND(rt0.c1)), (((rt0.c1))<>((t0.c0))), 1970495724))));
SELECT SUM(count) FROM (SELECT ALL ((((((('fZ%G	P')!=(t0.c0)), CAST('-1282618820' AS TEXT), CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN t0.c1 END, ((rt0.c2)>>(rt0.c1))))<((((vt0.c0)IS(t0.c1)), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)AND(rt0.c1)), (((rt0.c1))<>((t0.c0))), 1970495724)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(-642825093 AS REAL) LEFT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c1 COLLATE NOCASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) WHEN rt0.c2 THEN (((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN NULL THEN ((NULL)AND(t0.c1)) END);
SELECT ALL * FROM vt0, vt1 LEFT OUTER JOIN rt0 ON CAST(-642825093 AS REAL) LEFT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c1 COLLATE NOCASE WHEN CAST(rt0.c0 AS INTEGER) THEN rt0.c0 WHEN t0.c0 COLLATE NOCASE THEN ((vt0.c0) NOT NULL) WHEN rt0.c2 THEN (((t0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) WHEN NULL THEN ((NULL)AND(t0.c1)) END WHERE (((((('fZ%G	P')<>(t0.c0)), CAST('-1282618820' AS TEXT), CAST(t0.c0 AS TEXT), CASE WHEN t0.c1 THEN t0.c1 END, ((rt0.c2)>>(rt0.c1))))<((((vt0.c0)IS(t0.c1)), ((vt1.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)), ((rt0.c1)AND(rt0.c1)), (((rt0.c1))<>((t0.c0))), 1970495724))));
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((rt0.c0)*(rt0.c3)))OR('851663861')))AND(LIKELY(DISTINCT rt0.c0))))AND(((vt0.c0)>(NULL)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)*(rt0.c3)))OR('851663861')))AND(LIKELY(DISTINCT rt0.c0))))AND(((vt0.c0)>(NULL)))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((rt0.c0)*(rt0.c3)))OR('851663861')))AND(LIKELY(DISTINCT rt0.c0))))AND(((vt0.c0)>(NULL)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)*(rt0.c3)))OR('851663861')))AND(LIKELY(DISTINCT rt0.c0))))AND(((vt0.c0)>(NULL)))))AND(CAST(rt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, vt1, rt0);
SELECT ALL * FROM vt0, vt1, rt0 WHERE (((((((((((rt0.c0)*(rt0.c3)))OR('851663861')))AND(LIKELY(DISTINCT rt0.c0))))AND(((vt0.c0)>(NULL)))))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((((((0.8173207532269041)AND(t2.c2)))OR(vt1.c0)))LIKE(TYPEOF(t2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.8173207532269041)AND(t2.c2)))OR(vt1.c0)))LIKE(TYPEOF(t2.c0)))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((((((0.8173207532269041)AND(t2.c2)))OR(vt1.c0)))LIKE(TYPEOF(t2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((0.8173207532269041)AND(t2.c2)))OR(vt1.c0)))LIKE(TYPEOF(t2.c0)))) IS TRUE)  as count FROM vt1, t2, t0);
SELECT ALL COUNT(*) FROM vt1, t2, t0 WHERE (((((((0.8173207532269041)AND(t2.c2)))OR(vt1.c0)))LIKE(TYPEOF(t2.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1, t2, rt0 WHERE (((('-1546485461')%(t2.c1)) IN (x'3f33')));
SELECT SUM(count) FROM (SELECT ((((('-1546485461')%(t2.c1)) IN (x'3f33'))) IS TRUE)  as count FROM vt0, vt1, t2, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t2, rt0 WHERE (((('-1546485461')%(t2.c1)) IN (x'3f33')));
SELECT SUM(count) FROM (SELECT ((((('-1546485461')%(t2.c1)) IN (x'3f33'))) IS TRUE)  as count FROM vt0, vt1, t2, rt0);
SELECT ALL COUNT(*) FROM vt0, vt1, t2, rt0 WHERE (((('-1546485461')%(t2.c1)) IN (x'3f33')));
SELECT * FROM rt0, t2 CROSS JOIN vt0 ON NULL WHERE (((((((vt0.c0)+(rt0.c0)))AND(((rt0.c0) BETWEEN (1.242132431E9) AND (rt0.c1)))))OR(((rt0.c1)>=(t2.c2))))) ORDER BY '' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)+(rt0.c0)))AND(((rt0.c0) BETWEEN (1.242132431E9) AND (rt0.c1)))))OR(((rt0.c1)>=(t2.c2))))) IS TRUE)  as count FROM rt0, t2 CROSS JOIN vt0 ON NULL ORDER BY '' COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, t2 CROSS JOIN vt0 ON NULL WHERE (((((((vt0.c0)+(rt0.c0)))AND(((rt0.c0) BETWEEN (1.242132431E9) AND (rt0.c1)))))OR(((rt0.c1)>=(t2.c2))))) ORDER BY '' COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)+(rt0.c0)))AND(((rt0.c0) BETWEEN (1.242132431E9) AND (rt0.c1)))))OR(((rt0.c1)>=(t2.c2))))) IS TRUE)  as count FROM rt0, t2 CROSS JOIN vt0 ON NULL ORDER BY '' COLLATE RTRIM  NULLS FIRST);
SELECT * FROM rt0, t2 CROSS JOIN vt0 ON NULL WHERE (((((((vt0.c0)+(rt0.c0)))AND(((rt0.c0) BETWEEN (1.242132431E9) AND (rt0.c1)))))OR(((rt0.c1)>=(t2.c2))))) ORDER BY '' COLLATE RTRIM  NULLS FIRST;
SELECT * FROM vt0, vt1, t2, rt0, t0 WHERE (ABS(DISTINCT CAST(0X40f8b2cc AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(0x40f8b2cc AS BLOB))) IS TRUE)  as count FROM vt0, vt1, t2, rt0, t0);
SELECT * FROM vt0, vt1, t2, rt0, t0 WHERE (ABS(DISTINCT CAST(0X40f8b2cc AS BLOB)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(0x40f8b2cc AS BLOB))) IS TRUE)  as count FROM vt0, vt1, t2, rt0, t0);
SELECT * FROM vt0, vt1, t2, rt0, t0 WHERE (ABS(DISTINCT CAST(0X40f8b2cc AS BLOB)));
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c2))))%(rt0.c1))) ORDER BY (- (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c2))))%(rt0.c1))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c2))))%(rt0.c1))) ORDER BY (- (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c2))))%(rt0.c1))) IS TRUE)  as count FROM vt1, vt0, rt0 ORDER BY (- (vt1.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE ((((((rt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c1, vt0.c0, rt0.c2)) AND ((vt0.c0, rt0.c1, rt0.c2))))%(rt0.c1))) ORDER BY (- (vt1.c0 COLLATE BINARY))  NULLS FIRST;
SELECT * FROM rt0, vt0, t2 FULL OUTER JOIN t0 ON '-.' WHERE ((((rt0.c3)) BETWEEN ((((t2.c1) NOT BETWEEN (0.37248325894394974) AND (t2.c2)))) AND ((CAST(x'' AS TEXT))))) ORDER BY (+ (0.5497930472520425)), CAST(rt0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((t2.c1) NOT BETWEEN (0.37248325894394974) AND (t2.c2)))) AND ((CAST(x'' AS TEXT))))) IS TRUE)  as count FROM rt0, vt0, t2 FULL OUTER JOIN t0 ON '-.' ORDER BY (+ (0.5497930472520425)), CAST(rt0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0, vt0, t2 FULL OUTER JOIN t0 ON '-.' WHERE ((((rt0.c3)) BETWEEN ((((t2.c1) NOT BETWEEN (0.37248325894394974) AND (t2.c2)))) AND ((CAST(x'' AS TEXT))))) ORDER BY (+ (0.5497930472520425)), CAST(rt0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN ((((t2.c1) NOT BETWEEN (0.37248325894394974) AND (t2.c2)))) AND ((CAST(x'' AS TEXT))))) IS TRUE)  as count FROM rt0, vt0, t2 FULL OUTER JOIN t0 ON '-.' ORDER BY (+ (0.5497930472520425)), CAST(rt0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST);
SELECT * FROM rt0, vt0, t2 FULL OUTER JOIN t0 ON '-.' WHERE ((((rt0.c3)) BETWEEN ((((t2.c1) NOT BETWEEN (0.37248325894394974) AND (t2.c2)))) AND ((CAST(x'' AS TEXT))))) ORDER BY (+ (0.5497930472520425)), CAST(rt0.c0 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0, t2, vt0 WHERE (((((((((rt0.c2)AND((((vt0.c0)) BETWEEN (('/GjA+')) AND ((0.7196441388895377))))))OR(DATE(vt1.c0, vt1.c0, vt0.c0))))OR(CASE t2.c1  WHEN '' THEN t2.c0 WHEN vt0.c0 THEN rt0.c1 WHEN -1757463857 THEN t2.c1 END)))AND(((((0.6601462910074837)OR(rt0.c2)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND((((vt0.c0)) BETWEEN (('/GjA+')) AND ((0.7196441388895377))))))OR(DATE(vt1.c0, vt1.c0, vt0.c0))))OR(CASE t2.c1  WHEN '' THEN t2.c0 WHEN vt0.c0 THEN rt0.c1 WHEN -1757463857 THEN t2.c1 END)))AND(((((0.6601462910074837)OR(rt0.c2)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1, rt0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, t2, vt0 WHERE (((((((((rt0.c2)AND((((vt0.c0)) BETWEEN (('/GjA+')) AND ((0.7196441388895377))))))OR(DATE(vt1.c0, vt1.c0, vt0.c0))))OR(CASE t2.c1  WHEN '' THEN t2.c0 WHEN vt0.c0 THEN rt0.c1 WHEN -1757463857 THEN t2.c1 END)))AND(((((0.6601462910074837)OR(rt0.c2)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c2)AND((((vt0.c0)) BETWEEN (('/GjA+')) AND ((0.7196441388895377))))))OR(DATE(vt1.c0, vt1.c0, vt0.c0))))OR(CASE t2.c1  WHEN '' THEN t2.c0 WHEN vt0.c0 THEN rt0.c1 WHEN -1757463857 THEN t2.c1 END)))AND(((((0.6601462910074837)OR(rt0.c2)))AND(t0.c1))))) IS TRUE)  as count FROM t0, vt1, rt0, t2, vt0);
SELECT ALL COUNT(*) FROM t0, vt1, rt0, t2, vt0 WHERE (((((((((rt0.c2)AND((((vt0.c0)) BETWEEN (('/GjA+')) AND ((0.7196441388895377))))))OR(DATE(vt1.c0, vt1.c0, vt0.c0))))OR(CASE t2.c1  WHEN '' THEN t2.c0 WHEN vt0.c0 THEN rt0.c1 WHEN -1757463857 THEN t2.c1 END)))AND(((((0.6601462910074837)OR(rt0.c2)))AND(t0.c1)))));
SELECT ALL * FROM vt1, t2 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t0 ON (+ (((t2.c2)|(rt0.c3)))) LEFT OUTER JOIN vt0 ON (0.88682175596409 IN ()) WHERE (CAST(((rt0.c3)<(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t0 ON (+ (((t2.c2)|(rt0.c3)))) LEFT OUTER JOIN vt0 ON (0.88682175596409 IN ()));
SELECT ALL * FROM vt1, t2 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t0 ON (+ (((t2.c2)|(rt0.c3)))) LEFT OUTER JOIN vt0 ON (0.88682175596409 IN ()) WHERE (CAST(((rt0.c3)<(rt0.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3)<(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM vt1, t2 RIGHT OUTER JOIN rt0 ON t0.c2 CROSS JOIN t0 ON (+ (((t2.c2)|(rt0.c3)))) LEFT OUTER JOIN vt0 ON (0.88682175596409 IN ()));
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (((((((((((((((t2.c0)OR(rt0.c0)))OR(vt0.c0)))OR(t2.c1)))OR(t2.c0)))AND(vt0.c0)))AND(t2.c1)))OR(t2.c0 COLLATE RTRIM))) ORDER BY CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t2.c0)OR(rt0.c0)))OR(vt0.c0)))OR(t2.c1)))OR(t2.c0)))AND(vt0.c0)))AND(t2.c1)))OR(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2, rt0, vt1, vt0 ORDER BY CHANGES() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (((((((((((((((t2.c0)OR(rt0.c0)))OR(vt0.c0)))OR(t2.c1)))OR(t2.c0)))AND(vt0.c0)))AND(t2.c1)))OR(t2.c0 COLLATE RTRIM))) ORDER BY CHANGES() ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((t2.c0)OR(rt0.c0)))OR(vt0.c0)))OR(t2.c1)))OR(t2.c0)))AND(vt0.c0)))AND(t2.c1)))OR(t2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t2, rt0, vt1, vt0 ORDER BY CHANGES() ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (((((((((((((((t2.c0)OR(rt0.c0)))OR(vt0.c0)))OR(t2.c1)))OR(t2.c0)))AND(vt0.c0)))AND(t2.c1)))OR(t2.c0 COLLATE RTRIM))) ORDER BY CHANGES() ASC  NULLS LAST;
SELECT * FROM rt0, vt1 WHERE ((('-1292275375') NOT BETWEEN (((rt0.c2)OR(rt0.c0))) AND ((rt0.c3 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('-1292275375') NOT BETWEEN (((rt0.c2)OR(rt0.c0))) AND ((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((('-1292275375') NOT BETWEEN (((rt0.c2)OR(rt0.c0))) AND ((rt0.c3 IN (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((('-1292275375') NOT BETWEEN (((rt0.c2)OR(rt0.c0))) AND ((rt0.c3 IN (rt0.c1))))) IS TRUE)  as count FROM rt0, vt1);
SELECT * FROM rt0, vt1 WHERE ((('-1292275375') NOT BETWEEN (((rt0.c2)OR(rt0.c0))) AND ((rt0.c3 IN (rt0.c1)))));
SELECT ALL COUNT(*) FROM t2, vt1, vt0 WHERE (UNLIKELY(CASE WHEN x'' THEN t2.c2 ELSE t2.c2 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN x'' THEN t2.c2 ELSE t2.c2 END)) IS TRUE)  as count FROM t2, vt1, vt0);
SELECT ALL COUNT(*) FROM t2, vt1, vt0 WHERE (UNLIKELY(CASE WHEN x'' THEN t2.c2 ELSE t2.c2 END));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CASE WHEN x'' THEN t2.c2 ELSE t2.c2 END)) IS TRUE)  as count FROM t2, vt1, vt0);
SELECT ALL COUNT(*) FROM t2, vt1, vt0 WHERE (UNLIKELY(CASE WHEN x'' THEN t2.c2 ELSE t2.c2 END));
SELECT ALL COUNT(*) FROM vt0, t2, rt0, t0, vt1 WHERE ((((((t2.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt0.c0, t0.c1)) AND ((NULL, rt0.c0, vt0.c0))))<>(x''))) ORDER BY ((((((((NULL)OR(((t0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t2.c0)+(t0.c1)))))OR(((t2.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t2.c1))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt0.c0, t0.c1)) AND ((NULL, rt0.c0, vt0.c0))))!=(x''))) IS TRUE)  as count FROM vt0, t2, rt0, t0, vt1 ORDER BY ((((((((NULL)OR(((t0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t2.c0)+(t0.c1)))))OR(((t2.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t2.c1))<=((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0, t2, rt0, t0, vt1 WHERE ((((((t2.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt0.c0, t0.c1)) AND ((NULL, rt0.c0, vt0.c0))))<>(x''))) ORDER BY ((((((((NULL)OR(((t0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t2.c0)+(t0.c1)))))OR(((t2.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t2.c1))<=((rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt0.c0, t0.c1)) AND ((NULL, rt0.c0, vt0.c0))))!=(x''))) IS TRUE)  as count FROM vt0, t2, rt0, t0, vt1 ORDER BY ((((((((NULL)OR(((t0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t2.c0)+(t0.c1)))))OR(((t2.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t2.c1))<=((rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM vt0, t2, rt0, t0, vt1 WHERE ((((((t2.c0, rt0.c2, rt0.c1)) BETWEEN ((vt1.c0, vt0.c0, t0.c1)) AND ((NULL, rt0.c0, vt0.c0))))<>(x''))) ORDER BY ((((((((NULL)OR(((t0.c1) BETWEEN (rt0.c3) AND (rt0.c2)))))OR(((t2.c0)+(t0.c1)))))OR(((t2.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND((((t2.c1))<=((rt0.c2))))) ASC;
SELECT COUNT(*) FROM vt1, t2 WHERE (((CAST(t2.c1 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t2.c1 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 WHERE (((CAST(t2.c1 AS INTEGER)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t2.c1 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt1, t2);
SELECT COUNT(*) FROM vt1, t2 WHERE (((CAST(t2.c1 AS INTEGER)) ISNULL));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON CASE WHEN COALESCE(t2.c1, t2.c1) THEN ((t2.c1) IS FALSE) WHEN t2.c1 THEN t2.c1 COLLATE BINARY WHEN ((((t0.c0)AND(t0.c1)))OR(t2.c1)) THEN ((t2.c0) IS FALSE) END WHERE (((CAST(2.016431706E9 AS REAL))IS(((t2.c2)|(NULL))))) ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t2.c1)-(t2.c1)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t2.c2))))) ASC  NULLS LAST, ROUND((t2.c2 IN (t2.c2, t2.c0)), t2.c1 COLLATE BINARY) DESC  NULLS LAST, ((((((((((-985452127)+(t0.c0)))AND(((((t2.c0)AND(t2.c1)))OR(t0.c1)))))OR((t2.c0 IN (t0.c0, t2.c1, t2.c2)))))AND((t2.c1 IN ()))))OR(('jpvncpljd' IN (t0.c2)))) ASC, (- (CASE t0.c1  WHEN t2.c2 THEN t2.c1 ELSE t2.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(2.016431706E9 AS REAL))IS(((t2.c2)|(NULL))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON CASE WHEN COALESCE(t2.c1, t2.c1) THEN ((t2.c1) IS FALSE) WHEN t2.c1 THEN t2.c1 COLLATE BINARY WHEN ((((t0.c0)AND(t0.c1)))OR(t2.c1)) THEN ((t2.c0) IS FALSE) END ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t2.c1)-(t2.c1)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t2.c2))))) ASC  NULLS LAST, ROUND((t2.c2 IN (t2.c2, t2.c0)), t2.c1 COLLATE BINARY) DESC  NULLS LAST, ((((((((((-985452127)+(t0.c0)))AND(((((t2.c0)AND(t2.c1)))OR(t0.c1)))))OR((t2.c0 IN (t0.c0, t2.c1, t2.c2)))))AND((t2.c1 IN ()))))OR(('jpvncpljd' IN (t0.c2)))) ASC, (- (CASE t0.c1  WHEN t2.c2 THEN t2.c1 ELSE t2.c1 END)));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON CASE WHEN COALESCE(t2.c1, t2.c1) THEN ((t2.c1) IS FALSE) WHEN t2.c1 THEN t2.c1 COLLATE BINARY WHEN ((((t0.c0)AND(t0.c1)))OR(t2.c1)) THEN ((t2.c0) IS FALSE) END WHERE (((CAST(2.016431706E9 AS REAL))IS(((t2.c2)|(NULL))))) ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t2.c1)-(t2.c1)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t2.c2))))) ASC  NULLS LAST, ROUND((t2.c2 IN (t2.c2, t2.c0)), t2.c1 COLLATE BINARY) DESC  NULLS LAST, ((((((((((-985452127)+(t0.c0)))AND(((((t2.c0)AND(t2.c1)))OR(t0.c1)))))OR((t2.c0 IN (t0.c0, t2.c1, t2.c2)))))AND((t2.c1 IN ()))))OR(('jpvncpljd' IN (t0.c2)))) ASC, (- (CASE t0.c1  WHEN t2.c2 THEN t2.c1 ELSE t2.c1 END));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(2.016431706E9 AS REAL))IS(((t2.c2)|(NULL))))) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON CASE WHEN COALESCE(t2.c1, t2.c1) THEN ((t2.c1) IS FALSE) WHEN t2.c1 THEN t2.c1 COLLATE BINARY WHEN ((((t0.c0)AND(t0.c1)))OR(t2.c1)) THEN ((t2.c0) IS FALSE) END ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t2.c1)-(t2.c1)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t2.c2))))) ASC  NULLS LAST, ROUND((t2.c2 IN (t2.c2, t2.c0)), t2.c1 COLLATE BINARY) DESC  NULLS LAST, ((((((((((-985452127)+(t0.c0)))AND(((((t2.c0)AND(t2.c1)))OR(t0.c1)))))OR((t2.c0 IN (t0.c0, t2.c1, t2.c2)))))AND((t2.c1 IN ()))))OR(('jpvncpljd' IN (t0.c2)))) ASC, (- (CASE t0.c1  WHEN t2.c2 THEN t2.c1 ELSE t2.c1 END)));
SELECT ALL COUNT(*) FROM t2 FULL OUTER JOIN t0 ON CASE WHEN COALESCE(t2.c1, t2.c1) THEN ((t2.c1) IS FALSE) WHEN t2.c1 THEN t2.c1 COLLATE BINARY WHEN ((((t0.c0)AND(t0.c1)))OR(t2.c1)) THEN ((t2.c0) IS FALSE) END WHERE (((CAST(2.016431706E9 AS REAL))IS(((t2.c2)|(NULL))))) ORDER BY ((((((t0.c0)>(t0.c2)))AND(((t2.c1)-(t2.c1)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND ((t2.c2))))) ASC  NULLS LAST, ROUND((t2.c2 IN (t2.c2, t2.c0)), t2.c1 COLLATE BINARY) DESC  NULLS LAST, ((((((((((-985452127)+(t0.c0)))AND(((((t2.c0)AND(t2.c1)))OR(t0.c1)))))OR((t2.c0 IN (t0.c0, t2.c1, t2.c2)))))AND((t2.c1 IN ()))))OR(('jpvncpljd' IN (t0.c2)))) ASC, (- (CASE t0.c1  WHEN t2.c2 THEN t2.c1 ELSE t2.c1 END));
SELECT * FROM t0, vt0, rt0, vt1, t2 WHERE (((CASE WHEN rt0.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c2 WHEN '' THEN t2.c1 ELSE t2.c0 END)*(((t0.c2) NOT BETWEEN (vt1.c0) AND (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c2 WHEN '' THEN t2.c1 ELSE t2.c0 END)*(((t0.c2) NOT BETWEEN (vt1.c0) AND (t2.c2))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t2);
SELECT * FROM t0, vt0, rt0, vt1, t2 WHERE (((CASE WHEN rt0.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c2 WHEN '' THEN t2.c1 ELSE t2.c0 END)*(((t0.c2) NOT BETWEEN (vt1.c0) AND (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c2 WHEN '' THEN t2.c1 ELSE t2.c0 END)*(((t0.c2) NOT BETWEEN (vt1.c0) AND (t2.c2))))) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t2);
SELECT * FROM t0, vt0, rt0, vt1, t2 WHERE (((CASE WHEN rt0.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c2 WHEN '' THEN t2.c1 ELSE t2.c0 END)*(((t0.c2) NOT BETWEEN (vt1.c0) AND (t2.c2)))));
SELECT ALL * FROM t0, vt1, vt0, t2, rt0 WHERE ((((~ (rt0.c0)))*((((t0.c1))>=((t0.c2)))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (vt1.c0, rt0.c1)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC))<=(vt0.c0));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))*((((t0.c1))>=((t0.c2)))))) IS TRUE)  as count FROM t0, vt1, vt0, t2, rt0 ORDER BY (CAST(vt1.c0 AS TEXT) IN (vt1.c0, rt0.c1)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC))<=(vt0.c0)));
SELECT ALL * FROM t0, vt1, vt0, t2, rt0 WHERE ((((~ (rt0.c0)))*((((t0.c1))>=((t0.c2)))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (vt1.c0, rt0.c1)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC))<=(vt0.c0));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0)))*((((t0.c1))>=((t0.c2)))))) IS TRUE)  as count FROM t0, vt1, vt0, t2, rt0 ORDER BY (CAST(vt1.c0 AS TEXT) IN (vt1.c0, rt0.c1)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC))<=(vt0.c0)));
SELECT ALL * FROM t0, vt1, vt0, t2, rt0 WHERE ((((~ (rt0.c0)))*((((t0.c1))>=((t0.c2)))))) ORDER BY (CAST(vt1.c0 AS TEXT) IN (vt1.c0, rt0.c1)) ASC  NULLS FIRST, ((CAST(rt0.c2 AS NUMERIC))<=(vt0.c0));
SELECT * FROM t2 RIGHT OUTER JOIN vt1 ON CAST(((t0.c2)<>(t0.c1)) AS BLOB) LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB))&(vt0.c0)) WHERE ((~ (CASE WHEN t0.c1 THEN t2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c1 THEN t2.c0 END))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON CAST(((t0.c2)<>(t0.c1)) AS BLOB) LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB))&(vt0.c0)));
SELECT * FROM t2 RIGHT OUTER JOIN vt1 ON CAST(((t0.c2)<>(t0.c1)) AS BLOB) LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB))&(vt0.c0)) WHERE ((~ (CASE WHEN t0.c1 THEN t2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE WHEN t0.c1 THEN t2.c0 END))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN vt1 ON CAST(((t0.c2)<>(t0.c1)) AS BLOB) LEFT OUTER JOIN vt0 ON t0.c0 LEFT OUTER JOIN t0 ON ((CAST(t0.c2 AS BLOB))&(vt0.c0)));
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((t2.c2 COLLATE NOCASE)GLOB((((rt0.c2))!=((rt0.c0))))) CROSS JOIN rt0 ON (NOT (UNLIKELY(vt0.c0))) INNER JOIN t2 ON (- (((t0.c2) IS TRUE))) WHERE ((((CASE rt0.c2  WHEN t2.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c0 WHEN vt1.c0 THEN t0.c0 END))>=(((((NULL, t0.c1, t2.c2)) NOT BETWEEN ((t2.c0, 0.14990942828296416, t2.c0)) AND ((rt0.c0, t0.c1, rt0.c3))))))) ORDER BY (((((((rt0.c2))!=((rt0.c1))))OR(CASE t0.c2  WHEN NULL THEN t0.c0 END)))AND((- (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN t2.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c0 WHEN vt1.c0 THEN t0.c0 END))>=(((((NULL, t0.c1, t2.c2)) NOT BETWEEN ((t2.c0, 0.14990942828296416, t2.c0)) AND ((rt0.c0, t0.c1, rt0.c3))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((t2.c2 COLLATE NOCASE)GLOB((((rt0.c2))!=((rt0.c0))))) CROSS JOIN rt0 ON (NOT (UNLIKELY(vt0.c0))) INNER JOIN t2 ON (- (((t0.c2) IS TRUE))) ORDER BY (((((((rt0.c2))!=((rt0.c1))))OR(CASE t0.c2  WHEN NULL THEN t0.c0 END)))AND((- (t0.c1))))  NULLS LAST);
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((t2.c2 COLLATE NOCASE)GLOB((((rt0.c2))!=((rt0.c0))))) CROSS JOIN rt0 ON (NOT (UNLIKELY(vt0.c0))) INNER JOIN t2 ON (- (((t0.c2) IS TRUE))) WHERE ((((CASE rt0.c2  WHEN t2.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c0 WHEN vt1.c0 THEN t0.c0 END))>=(((((NULL, t0.c1, t2.c2)) NOT BETWEEN ((t2.c0, 0.14990942828296416, t2.c0)) AND ((rt0.c0, t0.c1, rt0.c3))))))) ORDER BY (((((((rt0.c2))!=((rt0.c1))))OR(CASE t0.c2  WHEN NULL THEN t0.c0 END)))AND((- (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CASE rt0.c2  WHEN t2.c1 THEN vt1.c0 WHEN t2.c1 THEN t2.c0 WHEN vt1.c0 THEN t0.c0 END))>=(((((NULL, t0.c1, t2.c2)) NOT BETWEEN ((t2.c0, 0.14990942828296416, t2.c0)) AND ((rt0.c0, t0.c1, rt0.c3))))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((rt0.c2) ISNULL) COLLATE RTRIM CROSS JOIN vt1 ON ((t2.c2 COLLATE NOCASE)GLOB((((rt0.c2))!=((rt0.c0))))) CROSS JOIN rt0 ON (NOT (UNLIKELY(vt0.c0))) INNER JOIN t2 ON (- (((t0.c2) IS TRUE))) ORDER BY (((((((rt0.c2))!=((rt0.c1))))OR(CASE t0.c2  WHEN NULL THEN t0.c0 END)))AND((- (t0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c1) BETWEEN (t2.c2) AND (t2.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t2.c2) AND (t2.c2))) ISNULL)) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c1) BETWEEN (t2.c2) AND (t2.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) BETWEEN (t2.c2) AND (t2.c2))) ISNULL)) IS TRUE)  as count FROM t0, t2);
SELECT ALL COUNT(*) FROM t0, t2 WHERE (((((t0.c1) BETWEEN (t2.c2) AND (t2.c2))) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)|('*).pwh')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|('*).pwh'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)|('*).pwh')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)|('*).pwh'))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rt0.c1)|('*).pwh')));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST(((t0.c0) IS TRUE) AS TEXT) RIGHT OUTER JOIN vt1 ON (- (((0.5858096078582097) NOT BETWEEN ('-1630401458') AND (vt0.c0)))) FULL OUTER JOIN t0 ON (CAST(t0.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN t2 ON UNLIKELY(DISTINCT (t2.c0 IN ())) WHERE ((((('')AND((((('o>^\rho,/')OR(t2.c2)))AND(t0.c2)))))AND(((((vt1.c0)AND(t2.c0)))OR(rt0.c0))))) ORDER BY ((rt0.c3)<(rt0.c2)) COLLATE NOCASE, (- ('Mminutes(')), ((((-8.99930982E8)-(t2.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((('')AND((((('o>^\rho,/')OR(t2.c2)))AND(t0.c2)))))AND(((((vt1.c0)AND(t2.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(((t0.c0) IS TRUE) AS TEXT) RIGHT OUTER JOIN vt1 ON (- (((0.5858096078582097) NOT BETWEEN ('-1630401458') AND (vt0.c0)))) FULL OUTER JOIN t0 ON (CAST(t0.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN t2 ON UNLIKELY(DISTINCT (t2.c0 IN ())) ORDER BY ((rt0.c3)<(rt0.c2)) COLLATE NOCASE, (- ('Mminutes(')), ((((-8.99930982E8)-(t2.c2))) NOT NULL));
SELECT ALL * FROM vt0 INNER JOIN rt0 ON CAST(((t0.c0) IS TRUE) AS TEXT) RIGHT OUTER JOIN vt1 ON (- (((0.5858096078582097) NOT BETWEEN ('-1630401458') AND (vt0.c0)))) FULL OUTER JOIN t0 ON (CAST(t0.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN t2 ON UNLIKELY(DISTINCT (t2.c0 IN ())) WHERE ((((('')AND((((('o>^\rho,/')OR(t2.c2)))AND(t0.c2)))))AND(((((vt1.c0)AND(t2.c0)))OR(rt0.c0))))) ORDER BY ((rt0.c3)<(rt0.c2)) COLLATE NOCASE, (- ('Mminutes(')), ((((-8.99930982E8)-(t2.c2))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((((('')AND((((('o>^\rho,/')OR(t2.c2)))AND(t0.c2)))))AND(((((vt1.c0)AND(t2.c0)))OR(rt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(((t0.c0) IS TRUE) AS TEXT) RIGHT OUTER JOIN vt1 ON (- (((0.5858096078582097) NOT BETWEEN ('-1630401458') AND (vt0.c0)))) FULL OUTER JOIN t0 ON (CAST(t0.c1 AS INTEGER) IN ()) RIGHT OUTER JOIN t2 ON UNLIKELY(DISTINCT (t2.c0 IN ())) ORDER BY ((rt0.c3)<(rt0.c2)) COLLATE NOCASE, (- ('Mminutes(')), ((((-8.99930982E8)-(t2.c2))) NOT NULL));
SELECT ALL * FROM vt0, t2, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t2, vt1);
SELECT ALL * FROM vt0, t2, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, t2, vt1);
SELECT ALL * FROM vt0, t2, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM vt0, rt0, vt1, t2 WHERE ((~ ('' COLLATE NOCASE))) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('' COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, vt1, t2 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t2 WHERE ((~ ('' COLLATE NOCASE))) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ('' COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0, vt1, t2 ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, vt1, t2 WHERE ((~ ('' COLLATE NOCASE))) ORDER BY CAST(((vt0.c0) IS TRUE) AS BLOB) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t2, rt0, vt1 WHERE (CAST(t2.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t2.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, t2, rt0, vt1 WHERE (CAST(t2.c1 AS REAL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(t2.c1 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, rt0, vt1);
SELECT ALL COUNT(*) FROM t0, t2, rt0, vt1 WHERE (CAST(t2.c1 AS REAL) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON '' CROSS JOIN vt0 ON (((((rt0.c1, t0.c2, t2.c2)) NOT BETWEEN ((rt0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3)))) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t2.c1  WHEN rt0.c2 THEN rt0.c2 END)) RIGHT OUTER JOIN t2 ON t2.c0 LEFT OUTER JOIN rt0 ON (+ ((NOT (NULL)))) WHERE (CASE 0.7730843571001768  WHEN vt1.c0 THEN rt0.c2 ELSE t2.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.7730843571001768  WHEN vt1.c0 THEN rt0.c2 ELSE t2.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON '' CROSS JOIN vt0 ON (((((rt0.c1, t0.c2, t2.c2)) NOT BETWEEN ((rt0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3)))) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t2.c1  WHEN rt0.c2 THEN rt0.c2 END)) RIGHT OUTER JOIN t2 ON t2.c0 LEFT OUTER JOIN rt0 ON (+ ((NOT (NULL)))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt1 ON '' CROSS JOIN vt0 ON (((((rt0.c1, t0.c2, t2.c2)) NOT BETWEEN ((rt0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3)))) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t2.c1  WHEN rt0.c2 THEN rt0.c2 END)) RIGHT OUTER JOIN t2 ON t2.c0 LEFT OUTER JOIN rt0 ON (+ ((NOT (NULL)))) WHERE (CASE 0.7730843571001768  WHEN vt1.c0 THEN rt0.c2 ELSE t2.c2 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.7730843571001768  WHEN vt1.c0 THEN rt0.c2 ELSE t2.c2 END COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt1 ON '' CROSS JOIN vt0 ON (((((rt0.c1, t0.c2, t2.c2)) NOT BETWEEN ((rt0.c0, t0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, rt0.c3)))) NOT BETWEEN ((+ (rt0.c2))) AND (CASE t2.c1  WHEN rt0.c2 THEN rt0.c2 END)) RIGHT OUTER JOIN t2 ON t2.c0 LEFT OUTER JOIN rt0 ON (+ ((NOT (NULL)))));
SELECT ALL * FROM vt1, t2 WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ((t2.c2) IS TRUE)  as count FROM vt1, t2);
SELECT ALL * FROM vt1, t2 WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ((t2.c2) IS TRUE)  as count FROM vt1, t2);
SELECT ALL * FROM vt1, t2 WHERE (t2.c2);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('-1618040939')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('-1618040939')) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('-1618040939')) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('-1618040939')) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST(((rt0.c1) BETWEEN (rt0.c1) AND ('-1618040939')) AS TEXT));
SELECT COUNT(*) FROM t0, rt0, vt1, t2, vt0 WHERE (t2.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t2.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt1, t2, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, t2, vt0 WHERE (t2.c1 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((t2.c1 COLLATE BINARY) IS TRUE)  as count FROM t0, rt0, vt1, t2, vt0);
SELECT COUNT(*) FROM t0, rt0, vt1, t2, vt0 WHERE (t2.c1 COLLATE BINARY);
SELECT * FROM vt1 CROSS JOIN t2 ON (((UPPER(DISTINCT x'')))>=((t2.c2))) WHERE (((((((((NULL)OR(((t2.c2)||(t2.c1)))))OR((+ (vt1.c0)))))AND((((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))))))OR(0.025569238158923313)));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((t2.c2)||(t2.c1)))))OR((+ (vt1.c0)))))AND((((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))))))OR(0.025569238158923313))) IS TRUE)  as count FROM vt1 CROSS JOIN t2 ON (((UPPER(DISTINCT x'')))>=((t2.c2))));
SELECT * FROM vt1 CROSS JOIN t2 ON (((UPPER(DISTINCT x'')))>=((t2.c2))) WHERE (((((((((NULL)OR(((t2.c2)||(t2.c1)))))OR((+ (vt1.c0)))))AND((((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))))))OR(0.025569238158923313)));
SELECT SUM(count) FROM (SELECT ((((((((((NULL)OR(((t2.c2)||(t2.c1)))))OR((+ (vt1.c0)))))AND((((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))))))OR(0.025569238158923313))) IS TRUE)  as count FROM vt1 CROSS JOIN t2 ON (((UPPER(DISTINCT x'')))>=((t2.c2))));
SELECT * FROM vt1 CROSS JOIN t2 ON (((UPPER(DISTINCT x'')))>=((t2.c2))) WHERE (((((((((NULL)OR(((t2.c2)||(t2.c1)))))OR((+ (vt1.c0)))))AND((((t2.c0)) NOT BETWEEN ((t2.c2)) AND ((t2.c0))))))OR(0.025569238158923313)));
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)OR(x''))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)OR(x''))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)OR(x''))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((vt1.c0)OR(x''))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE ((- (((vt1.c0)OR(x''))))) ORDER BY CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM rt0, t2, vt1, vt0 WHERE (((CASE WHEN rt0.c3 THEN t2.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t2.c0 ELSE vt1.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))==((t2.c0)))))) ORDER BY -2041320535;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN t2.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t2.c0 ELSE vt1.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))=((t2.c0)))))) IS TRUE)  as count FROM rt0, t2, vt1, vt0 ORDER BY -2041320535);
SELECT ALL * FROM rt0, t2, vt1, vt0 WHERE (((CASE WHEN rt0.c3 THEN t2.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t2.c0 ELSE vt1.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))==((t2.c0)))))) ORDER BY -2041320535;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c3 THEN t2.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c3 THEN t2.c0 ELSE vt1.c0 END) NOT BETWEEN ((rt0.c1 IN ())) AND ((((rt0.c1))=((t2.c0)))))) IS TRUE)  as count FROM rt0, t2, vt1, vt0 ORDER BY -2041320535);
SELECT COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((~ (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST((~ (t0.c0)) AS INTEGER));
SELECT * FROM vt0, t2, t0 WHERE (CASE WHEN TRIM(t0.c1) THEN t0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(t0.c1) THEN t0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (CASE WHEN TRIM(t0.c1) THEN t0.c1 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TRIM(t0.c1) THEN t0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, t2, t0);
SELECT * FROM vt0, t2, t0 WHERE (CASE WHEN TRIM(t0.c1) THEN t0.c1 COLLATE NOCASE END);
SELECT * FROM t0, rt0, vt0, vt1, t2 WHERE (((rt0.c3) NOTNULL)) ORDER BY (((rt0.c3)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c3 THEN t2.c1 ELSE t0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1, t2 ORDER BY (((rt0.c3)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c3 THEN t2.c1 ELSE t0.c2 END)))  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt1, t2 WHERE (((rt0.c3) NOTNULL)) ORDER BY (((rt0.c3)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c3 THEN t2.c1 ELSE t0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOTNULL)) IS TRUE)  as count FROM t0, rt0, vt0, vt1, t2 ORDER BY (((rt0.c3)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c3 THEN t2.c1 ELSE t0.c2 END)))  NULLS FIRST);
SELECT * FROM t0, rt0, vt0, vt1, t2 WHERE (((rt0.c3) NOTNULL)) ORDER BY (((rt0.c3)) BETWEEN (((rt0.c2 IN ()))) AND ((CASE WHEN rt0.c3 THEN t2.c1 ELSE t0.c2 END)))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL IN ())))>((((((((((vt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(rt0.c3)))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))&(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((NULL IN ())))>((((((((((vt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))&(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL IN ())))>((((((((((vt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(rt0.c3)))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))&(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((NULL IN ())))>((((((((((vt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))&(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((NULL IN ())))>((((((((((vt0.c0)AND(rt0.c0)))OR(NULL)))AND(rt0.c1)))AND(rt0.c3)))))) ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))&(((((rt0.c0)AND(rt0.c2)))OR(rt0.c1))));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c2)|(t0.c0)))*('T~_QC')) WHERE ((((t0.c1 COLLATE NOCASE))>=((TYPEOF(DISTINCT t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 COLLATE NOCASE))>=((TYPEOF(DISTINCT t0.c2))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c2)|(t0.c0)))*('T~_QC')));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c2)|(t0.c0)))*('T~_QC')) WHERE ((((t0.c1 COLLATE NOCASE))>=((TYPEOF(DISTINCT t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 COLLATE NOCASE))>=((TYPEOF(DISTINCT t0.c2))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c2)|(t0.c0)))*('T~_QC')));
SELECT ALL * FROM vt0, t0 LEFT OUTER JOIN vt1 ON ((((t0.c2)|(t0.c0)))*('T~_QC')) WHERE ((((t0.c1 COLLATE NOCASE))>=((TYPEOF(DISTINCT t0.c2)))));
SELECT * FROM rt0 INNER JOIN t2 ON (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>=((((t2.c2)||(t2.c2))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE)) IS FALSE) WHERE ((((((~ (t2.c0)))OR(((t2.c2) BETWEEN (rt0.c1) AND ('-351452422')))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((~ (t2.c0)))OR(((t2.c2) BETWEEN (rt0.c1) AND ('-351452422')))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t2 ON (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>=((((t2.c2)||(t2.c2))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE)) IS FALSE));
SELECT * FROM rt0 INNER JOIN t2 ON (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>=((((t2.c2)||(t2.c2))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE)) IS FALSE) WHERE ((((((~ (t2.c0)))OR(((t2.c2) BETWEEN (rt0.c1) AND ('-351452422')))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((~ (t2.c0)))OR(((t2.c2) BETWEEN (rt0.c1) AND ('-351452422')))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 INNER JOIN t2 ON (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>=((((t2.c2)||(t2.c2))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE)) IS FALSE));
SELECT * FROM rt0 INNER JOIN t2 ON (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c1))))>=((((t2.c2)||(t2.c2))))) LEFT OUTER JOIN vt0 ON ((((rt0.c0) IS TRUE)) IS FALSE) WHERE ((((((~ (t2.c0)))OR(((t2.c2) BETWEEN (rt0.c1) AND ('-351452422')))))AND(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM t2 WHERE (((NULL COLLATE BINARY)||(x''))) ORDER BY t2.c2, (((((('0.9213897843794652')/(t2.c0)))OR(t2.c2 COLLATE RTRIM)))OR(CAST(x'' AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY)||(x''))) IS TRUE)  as count FROM t2 ORDER BY t2.c2, (((((('0.9213897843794652')/(t2.c0)))OR(t2.c2 COLLATE RTRIM)))OR(CAST(x'' AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE (((NULL COLLATE BINARY)||(x''))) ORDER BY t2.c2, (((((('0.9213897843794652')/(t2.c0)))OR(t2.c2 COLLATE RTRIM)))OR(CAST(x'' AS REAL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY)||(x''))) IS TRUE)  as count FROM t2 ORDER BY t2.c2, (((((('0.9213897843794652')/(t2.c0)))OR(t2.c2 COLLATE RTRIM)))OR(CAST(x'' AS REAL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t2 WHERE (((NULL COLLATE BINARY)||(x''))) ORDER BY t2.c2, (((((('0.9213897843794652')/(t2.c0)))OR(t2.c2 COLLATE RTRIM)))OR(CAST(x'' AS REAL)))  NULLS LAST;
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS REAL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c1 AS REAL) AS TEXT)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(CAST(t0.c1 AS REAL) AS TEXT));
SELECT * FROM t2, rt0, vt1, t0 WHERE (((NOT (rt0.c3)) IN ())) ORDER BY ((((CAST(t0.c0 AS NUMERIC))AND((((t2.c0, t2.c0, rt0.c3)) NOT BETWEEN ((t2.c0, rt0.c3, x'')) AND ((t0.c2, rt0.c3, t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((-1491672841)) AND ((rt0.c2))))) DESC  NULLS LAST, (t2.c1 COLLATE RTRIM IN (x'3021')), CASE WHEN CASE t0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0.5758481872564315 END THEN ((vt1.c0)>=(t0.c1)) ELSE (NOT (t2.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c3)) IN ())) IS TRUE)  as count FROM t2, rt0, vt1, t0 ORDER BY ((((CAST(t0.c0 AS NUMERIC))AND((((t2.c0, t2.c0, rt0.c3)) NOT BETWEEN ((t2.c0, rt0.c3, x'')) AND ((t0.c2, rt0.c3, t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((-1491672841)) AND ((rt0.c2))))) DESC  NULLS LAST, (t2.c1 COLLATE RTRIM IN (x'3021')), CASE WHEN CASE t0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0.5758481872564315 END THEN ((vt1.c0)>=(t0.c1)) ELSE (NOT (t2.c1)) END ASC);
SELECT * FROM t2, rt0, vt1, t0 WHERE (((NOT (rt0.c3)) IN ())) ORDER BY ((((CAST(t0.c0 AS NUMERIC))AND((((t2.c0, t2.c0, rt0.c3)) NOT BETWEEN ((t2.c0, rt0.c3, x'')) AND ((t0.c2, rt0.c3, t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((-1491672841)) AND ((rt0.c2))))) DESC  NULLS LAST, (t2.c1 COLLATE RTRIM IN (x'3021')), CASE WHEN CASE t0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0.5758481872564315 END THEN ((vt1.c0)>=(t0.c1)) ELSE (NOT (t2.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((NOT (rt0.c3)) IN ())) IS TRUE)  as count FROM t2, rt0, vt1, t0 ORDER BY ((((CAST(t0.c0 AS NUMERIC))AND((((t2.c0, t2.c0, rt0.c3)) NOT BETWEEN ((t2.c0, rt0.c3, x'')) AND ((t0.c2, rt0.c3, t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((-1491672841)) AND ((rt0.c2))))) DESC  NULLS LAST, (t2.c1 COLLATE RTRIM IN (x'3021')), CASE WHEN CASE t0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0.5758481872564315 END THEN ((vt1.c0)>=(t0.c1)) ELSE (NOT (t2.c1)) END ASC);
SELECT * FROM t2, rt0, vt1, t0 WHERE (((NOT (rt0.c3)) IN ())) ORDER BY ((((CAST(t0.c0 AS NUMERIC))AND((((t2.c0, t2.c0, rt0.c3)) NOT BETWEEN ((t2.c0, rt0.c3, x'')) AND ((t0.c2, rt0.c3, t0.c2))))))AND((((t0.c2)) NOT BETWEEN ((-1491672841)) AND ((rt0.c2))))) DESC  NULLS LAST, (t2.c1 COLLATE RTRIM IN (x'3021')), CASE WHEN CASE t0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0.5758481872564315 END THEN ((vt1.c0)>=(t0.c1)) ELSE (NOT (t2.c1)) END ASC;
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t2 WHERE (x'' COLLATE NOCASE) ORDER BY (((rt0.c1))=((CASE t0.c1  WHEN rt0.c1 THEN t0.c1 WHEN t0.c0 THEN t2.c2 WHEN t2.c0 THEN t0.c0 ELSE t0.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1, t2 ORDER BY (((rt0.c1))=((CASE t0.c1  WHEN rt0.c1 THEN t0.c1 WHEN t0.c0 THEN t2.c2 WHEN t2.c0 THEN t0.c0 ELSE t0.c1 END))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t2 WHERE (x'' COLLATE NOCASE) ORDER BY (((rt0.c1))=((CASE t0.c1  WHEN rt0.c1 THEN t0.c1 WHEN t0.c0 THEN t2.c2 WHEN t2.c0 THEN t0.c0 ELSE t0.c1 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0, rt0, vt1, t2 ORDER BY (((rt0.c1))=((CASE t0.c1  WHEN rt0.c1 THEN t0.c1 WHEN t0.c0 THEN t2.c2 WHEN t2.c0 THEN t0.c0 ELSE t0.c1 END))) DESC);
SELECT ALL COUNT(*) FROM t0, rt0, vt1, t2 WHERE (x'' COLLATE NOCASE) ORDER BY (((rt0.c1))=((CASE t0.c1  WHEN rt0.c1 THEN t0.c1 WHEN t0.c0 THEN t2.c2 WHEN t2.c0 THEN t0.c0 ELSE t0.c1 END))) DESC;
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN vt0 ON json_insert(((t2.c1) BETWEEN (vt0.c0) AND (t2.c2)), (- (vt0.c0)), t2.c2) WHERE (((((t2.c0)+(t2.c0))) BETWEEN (CASE WHEN t2.c1 THEN t2.c2 WHEN t2.c0 THEN t2.c1 WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (t2.c2) AND (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)+(t2.c0))) BETWEEN (CASE WHEN t2.c1 THEN t2.c2 WHEN t2.c0 THEN t2.c1 WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (t2.c2) AND (t2.c2))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt0 ON json_insert(((t2.c1) BETWEEN (vt0.c0) AND (t2.c2)), (- (vt0.c0)), t2.c2));
SELECT COUNT(*) FROM t2 LEFT OUTER JOIN vt0 ON json_insert(((t2.c1) BETWEEN (vt0.c0) AND (t2.c2)), (- (vt0.c0)), t2.c2) WHERE (((((t2.c0)+(t2.c0))) BETWEEN (CASE WHEN t2.c1 THEN t2.c2 WHEN t2.c0 THEN t2.c1 WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (t2.c2) AND (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0)+(t2.c0))) BETWEEN (CASE WHEN t2.c1 THEN t2.c2 WHEN t2.c0 THEN t2.c1 WHEN t2.c2 THEN t2.c1 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (t2.c2) AND (t2.c2))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN vt0 ON json_insert(((t2.c1) BETWEEN (vt0.c0) AND (t2.c2)), (- (vt0.c0)), t2.c2));
SELECT ALL COUNT(*) FROM t2, vt1 WHERE (((NULL) BETWEEN ((t2.c1 IN (t2.c1))) AND (((vt1.c0)GLOB(t2.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((t2.c1 IN (t2.c1))) AND (((vt1.c0)GLOB(t2.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE (((NULL) BETWEEN ((t2.c1 IN (t2.c1))) AND (((vt1.c0)GLOB(t2.c0))))) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ((((NULL) BETWEEN ((t2.c1 IN (t2.c1))) AND (((vt1.c0)GLOB(t2.c0))))) IS TRUE)  as count FROM t2, vt1 ORDER BY vt1.c0);
SELECT ALL COUNT(*) FROM t2, vt1 WHERE (((NULL) BETWEEN ((t2.c1 IN (t2.c1))) AND (((vt1.c0)GLOB(t2.c0))))) ORDER BY vt1.c0;
SELECT * FROM vt1, rt0, t0 WHERE ((((~ (vt1.c0)))==(((rt0.c0) NOT NULL)))) ORDER BY (+ (IFNULL(rt0.c0, vt1.c0))) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))%((rt0.c1 IN ()))), ((rt0.c0)<<(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))=(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (+ (IFNULL(rt0.c0, vt1.c0))) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))%((rt0.c1 IN ()))), ((rt0.c0)<<(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt1, rt0, t0 WHERE ((((~ (vt1.c0)))==(((rt0.c0) NOT NULL)))) ORDER BY (+ (IFNULL(rt0.c0, vt1.c0))) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))%((rt0.c1 IN ()))), ((rt0.c0)<<(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0)))=(((rt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt0, t0 ORDER BY (+ (IFNULL(rt0.c0, vt1.c0))) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))%((rt0.c1 IN ()))), ((rt0.c0)<<(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt1, rt0, t0 WHERE ((((~ (vt1.c0)))==(((rt0.c0) NOT NULL)))) ORDER BY (+ (IFNULL(rt0.c0, vt1.c0))) DESC  NULLS FIRST, ((CAST(rt0.c1 AS REAL))%((rt0.c1 IN ()))), ((rt0.c0)<<(rt0.c2)) COLLATE NOCASE ASC  NULLS LAST;
SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY LAST_INSERT_ROWID()  NULLS LAST);
SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS TEXT) IN ())) IS TRUE)  as count FROM rt0 ORDER BY LAST_INSERT_ROWID()  NULLS LAST);
SELECT * FROM rt0 WHERE ((CAST(rt0.c0 AS TEXT) IN ())) ORDER BY LAST_INSERT_ROWID()  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOTNULL)))) ORDER BY ((((TRIM(vt1.c0, vt1.c0))AND(LIKELY(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((TRIM(vt1.c0, vt1.c0))AND(LIKELY(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOTNULL)))) ORDER BY ((((TRIM(vt1.c0, vt1.c0))AND(LIKELY(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1 ORDER BY ((((TRIM(vt1.c0, vt1.c0))AND(LIKELY(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 WHERE ((+ (((vt1.c0) NOTNULL)))) ORDER BY ((((TRIM(vt1.c0, vt1.c0))AND(LIKELY(DISTINCT vt1.c0))))AND(vt1.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR('_⦋cn1YZ!')))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR('_⦋cn1YZ!')))AND(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR('_⦋cn1YZ!')))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR('_⦋cn1YZ!')))AND(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))OR('_⦋cn1YZ!')))AND(rt0.c3)))));
SELECT ALL * FROM t2, vt1 WHERE ((LOWER(DISTINCT vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LOWER(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM t2, vt1);
SELECT ALL * FROM t2, vt1 WHERE ((LOWER(DISTINCT vt1.c0) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((LOWER(DISTINCT vt1.c0) IN ())) IS TRUE)  as count FROM t2, vt1);
SELECT ALL * FROM t2, vt1 WHERE ((LOWER(DISTINCT vt1.c0) IN ()));
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)) AS NUMERIC) WHERE (0.3813768501531586) ORDER BY ((((rt0.c1)<=(rt0.c3)))LIKE(((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.3813768501531586) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)) AS NUMERIC) ORDER BY ((((rt0.c1)<=(rt0.c3)))LIKE(((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)) AS NUMERIC) WHERE (0.3813768501531586) ORDER BY ((((rt0.c1)<=(rt0.c3)))LIKE(((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.3813768501531586) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)) AS NUMERIC) ORDER BY ((((rt0.c1)<=(rt0.c3)))LIKE(((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)))) DESC);
SELECT ALL * FROM t0 FULL OUTER JOIN rt0 ON CAST(((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(t0.c0)) AS NUMERIC) WHERE (0.3813768501531586) ORDER BY ((((rt0.c1)<=(rt0.c3)))LIKE(((rt0.c3) BETWEEN (rt0.c2) AND (t0.c0)))) DESC;
SELECT COUNT(*) FROM t0, t2, rt0, vt1 WHERE (((t0.c0)*(rt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c3)>=(t0.c2))) BETWEEN (((rt0.c3)AND(t0.c1))) AND (CASE t2.c0  WHEN t0.c1 THEN t0.c2 ELSE 0.7269797257748284 END));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, rt0, vt1 ORDER BY ((((rt0.c3)>=(t0.c2))) BETWEEN (((rt0.c3)AND(t0.c1))) AND (CASE t2.c0  WHEN t0.c1 THEN t0.c2 ELSE 0.7269797257748284 END)));
SELECT COUNT(*) FROM t0, t2, rt0, vt1 WHERE (((t0.c0)*(rt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c3)>=(t0.c2))) BETWEEN (((rt0.c3)AND(t0.c1))) AND (CASE t2.c0  WHEN t0.c1 THEN t0.c2 ELSE 0.7269797257748284 END));
SELECT SUM(count) FROM (SELECT ((((t0.c0)*(rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, t2, rt0, vt1 ORDER BY ((((rt0.c3)>=(t0.c2))) BETWEEN (((rt0.c3)AND(t0.c1))) AND (CASE t2.c0  WHEN t0.c1 THEN t0.c2 ELSE 0.7269797257748284 END)));
SELECT COUNT(*) FROM t0, t2, rt0, vt1 WHERE (((t0.c0)*(rt0.c0)) COLLATE RTRIM) ORDER BY ((((rt0.c3)>=(t0.c2))) BETWEEN (((rt0.c3)AND(t0.c1))) AND (CASE t2.c0  WHEN t0.c1 THEN t0.c2 ELSE 0.7269797257748284 END));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CASE '&Q'  WHEN vt0.c0 THEN vt0.c0 ELSE -1.075556114E9 END THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-2035005976', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0, vt0.c0, x''))<>((vt0.c0, vt0.c0, NULL))) WHEN x'' THEN (+ (NULL)) WHEN ((vt0.c0) NOTNULL) THEN load_extension(vt0.c0, vt0.c0) WHEN x'' THEN ((vt0.c0)>=(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), (- (((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CASE '&Q'  WHEN vt0.c0 THEN vt0.c0 ELSE -1.075556114E9 END THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-2035005976', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c0, NULL))) WHEN x'' THEN (+ (NULL)) WHEN ((vt0.c0) NOTNULL) THEN load_extension(vt0.c0, vt0.c0) WHEN x'' THEN ((vt0.c0)>=(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), (- (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CASE '&Q'  WHEN vt0.c0 THEN vt0.c0 ELSE -1.075556114E9 END THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-2035005976', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0, vt0.c0, x''))<>((vt0.c0, vt0.c0, NULL))) WHEN x'' THEN (+ (NULL)) WHEN ((vt0.c0) NOTNULL) THEN load_extension(vt0.c0, vt0.c0) WHEN x'' THEN ((vt0.c0)>=(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), (- (((vt0.c0)>>(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CASE '&Q'  WHEN vt0.c0 THEN vt0.c0 ELSE -1.075556114E9 END THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-2035005976', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0, vt0.c0, x''))!=((vt0.c0, vt0.c0, NULL))) WHEN x'' THEN (+ (NULL)) WHEN ((vt0.c0) NOTNULL) THEN load_extension(vt0.c0, vt0.c0) WHEN x'' THEN ((vt0.c0)>=(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), (- (((vt0.c0)>>(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN vt0.c0 WHEN (+ (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN CASE '&Q'  WHEN vt0.c0 THEN vt0.c0 ELSE -1.075556114E9 END THEN vt0.c0 COLLATE NOCASE WHEN (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (('-2035005976', vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) THEN (((vt0.c0, vt0.c0, x''))<>((vt0.c0, vt0.c0, NULL))) WHEN x'' THEN (+ (NULL)) WHEN ((vt0.c0) NOTNULL) THEN load_extension(vt0.c0, vt0.c0) WHEN x'' THEN ((vt0.c0)>=(vt0.c0)) ELSE (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 END IN ()), (- (((vt0.c0)>>(vt0.c0))));
SELECT * FROM t2 WHERE (((((t2.c1)>=(t2.c2)))||(('2036948492' IN ())))) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)>=(t2.c2)))||(('2036948492' IN ())))) IS TRUE)  as count FROM t2 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM t2 WHERE (((((t2.c1)>=(t2.c2)))||(('2036948492' IN ())))) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1)>=(t2.c2)))||(('2036948492' IN ())))) IS TRUE)  as count FROM t2 ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT * FROM t2 WHERE (((((t2.c1)>=(t2.c2)))||(('2036948492' IN ())))) ORDER BY SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, t2, vt1, vt0 WHERE (CAST(IFNULL(DISTINCT t2.c1, t0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT t2.c1, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0, t2, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt1, vt0 WHERE (CAST(IFNULL(DISTINCT t2.c1, t0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(DISTINCT t2.c1, t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0, t2, vt1, vt0);
SELECT ALL COUNT(*) FROM t0, t2, vt1, vt0 WHERE (CAST(IFNULL(DISTINCT t2.c1, t0.c0) AS NUMERIC));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (0.47051724672599227)))&(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((((vt1.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END FULL OUTER JOIN vt1 ON ((NOT ('-1367404933')) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (0.47051724672599227)))&(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((((vt1.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END FULL OUTER JOIN vt1 ON ((NOT ('-1367404933')) IN ()));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (0.47051724672599227)))&(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((((vt1.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END FULL OUTER JOIN vt1 ON ((NOT ('-1367404933')) IN ()) WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (0.47051724672599227)))&(((((rt0.c0)OR(rt0.c3)))AND(rt0.c3)))) RIGHT OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)>=(rt0.c3)) THEN ((((vt1.c0)OR(vt0.c0)))OR(rt0.c1)) ELSE ((rt0.c0) NOT NULL) END FULL OUTER JOIN vt1 ON ((NOT ('-1367404933')) IN ()));
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN t2 ON ((t2.c0)IS NOT(1811745275)) COLLATE BINARY WHERE ((((NOT (t2.c2))) NOT BETWEEN (((x'')%(vt0.c0))) AND (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t2.c2))) NOT BETWEEN (((x'')%(vt0.c0))) AND (((t2.c0) NOT BETWEEN (x'') AND (t2.c2))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t2 ON ((t2.c0)IS NOT(1811745275)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN t2 ON ((t2.c0)IS NOT(1811745275)) COLLATE BINARY WHERE ((((NOT (t2.c2))) NOT BETWEEN (((x'')%(vt0.c0))) AND (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t2.c2))) NOT BETWEEN (((x'')%(vt0.c0))) AND (((t2.c0) NOT BETWEEN (x'') AND (t2.c2))))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN t2 ON ((t2.c0)IS NOT(1811745275)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, t0 LEFT OUTER JOIN t2 ON ((t2.c0)IS NOT(1811745275)) COLLATE BINARY WHERE ((((NOT (t2.c2))) NOT BETWEEN (((x'')%(vt0.c0))) AND (((t2.c0) NOT BETWEEN (x'') AND (t2.c2)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON json(rt0.c2) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))) IN ((((rt0.c2))>=((rt0.c1))))) CROSS JOIN vt1 ON (rt0.c3 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON CAST(t2.c2 AS NUMERIC) COLLATE BINARY COLLATE RTRIM WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON json(rt0.c2) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))) IN ((((rt0.c2))>=((rt0.c1))))) CROSS JOIN vt1 ON (rt0.c3 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON CAST(t2.c2 AS NUMERIC) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON json(rt0.c2) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))) IN ((((rt0.c2))>=((rt0.c1))))) CROSS JOIN vt1 ON (rt0.c3 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON CAST(t2.c2 AS NUMERIC) COLLATE BINARY COLLATE RTRIM WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON json(rt0.c2) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))) IN ((((rt0.c2))>=((rt0.c1))))) CROSS JOIN vt1 ON (rt0.c3 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON CAST(t2.c2 AS NUMERIC) COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON json(rt0.c2) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c3))) IN ((((rt0.c2))>=((rt0.c1))))) CROSS JOIN vt1 ON (rt0.c3 COLLATE BINARY IN ()) LEFT OUTER JOIN rt0 ON CAST(t2.c2 AS NUMERIC) COLLATE BINARY COLLATE RTRIM WHERE (t2.c0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ((~ (vt0.c0)), vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ((~ (vt0.c0)), vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ((~ (vt0.c0)), vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ((~ (vt0.c0)), vt0.c0))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN ())) NOT NULL)) ORDER BY ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) IN ((~ (vt0.c0)), vt0.c0))  NULLS FIRST;
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) IS FALSE) RIGHT OUTER JOIN vt0 ON (NOT ((+ (rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)>>(t0.c1)))OR(json(NULL))))AND(((rt0.c1) BETWEEN (x'b196') AND (x'')))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) IS FALSE) RIGHT OUTER JOIN vt0 ON (NOT ((+ (rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)>>(t0.c1)))OR(json(NULL))))AND(((rt0.c1) BETWEEN (x'b196') AND (x'')))));
SELECT * FROM vt1 RIGHT OUTER JOIN rt0 ON (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) IS FALSE) RIGHT OUTER JOIN vt0 ON (NOT ((+ (rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)>>(t0.c1)))OR(json(NULL))))AND(((rt0.c1) BETWEEN (x'b196') AND (x'')))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt0 ON (((((t0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))) IS FALSE) RIGHT OUTER JOIN vt0 ON (NOT ((+ (rt0.c3)))) FULL OUTER JOIN t0 ON ((((((rt0.c3)>>(t0.c1)))OR(json(NULL))))AND(((rt0.c1) BETWEEN (x'b196') AND (x'')))));
SELECT COUNT(*) FROM t2, t0 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ALL ((t2.c0) IS TRUE)  as count FROM t2, t0);
SELECT COUNT(*) FROM t2, t0 WHERE (t2.c0);
SELECT * FROM vt0, t2, vt1 WHERE ((((t2.c1))<>((((((vt0.c0)AND(t2.c2)))OR(x'')))))) ORDER BY (t2.c1 IN ()), t2.c1;
SELECT SUM(count) FROM (SELECT (((((t2.c1))!=((((((vt0.c0)AND(t2.c2)))OR(x'')))))) IS TRUE)  as count FROM vt0, t2, vt1 ORDER BY (t2.c1 IN ()), t2.c1);
SELECT * FROM vt0, t2, vt1 WHERE ((((t2.c1))<>((((((vt0.c0)AND(t2.c2)))OR(x'')))))) ORDER BY (t2.c1 IN ()), t2.c1;
SELECT SUM(count) FROM (SELECT (((((t2.c1))!=((((((vt0.c0)AND(t2.c2)))OR(x'')))))) IS TRUE)  as count FROM vt0, t2, vt1 ORDER BY (t2.c1 IN ()), t2.c1);
SELECT * FROM vt0, t2, vt1 WHERE ((((t2.c1))<>((((((vt0.c0)AND(t2.c2)))OR(x'')))))) ORDER BY (t2.c1 IN ()), t2.c1;
SELECT * FROM rt0, vt1, t2, t0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c0 THEN t2.c0 ELSE t0.c0 END AS TEXT) WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY (((((((((t2.c1 IN (rt0.c0, rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(((-1.53407371E8) NOT BETWEEN (t2.c1) AND (rt0.c0)))))OR(json_insert(vt0.c0, t0.c0, vt1.c0))))OR((('M7泯')*(t0.c1)))), ((NULL)/(CAST(t2.c0 AS NUMERIC)))  NULLS FIRST, ((((t0.c2) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt1, t2, t0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c0 THEN t2.c0 ELSE t0.c0 END AS TEXT) ORDER BY (((((((((t2.c1 IN (rt0.c0, rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(((-1.53407371E8) NOT BETWEEN (t2.c1) AND (rt0.c0)))))OR(json_insert(vt0.c0, t0.c0, vt1.c0))))OR((('M7泯')*(t0.c1)))), ((NULL)/(CAST(t2.c0 AS NUMERIC)))  NULLS FIRST, ((((t0.c2) NOTNULL)) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, t2, t0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c0 THEN t2.c0 ELSE t0.c0 END AS TEXT) WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY (((((((((t2.c1 IN (rt0.c0, rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(((-1.53407371E8) NOT BETWEEN (t2.c1) AND (rt0.c0)))))OR(json_insert(vt0.c0, t0.c0, vt1.c0))))OR((('M7泯')*(t0.c1)))), ((NULL)/(CAST(t2.c0 AS NUMERIC)))  NULLS FIRST, ((((t0.c2) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(vt1.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0, vt1, t2, t0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c0 THEN t2.c0 ELSE t0.c0 END AS TEXT) ORDER BY (((((((((t2.c1 IN (rt0.c0, rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(((-1.53407371E8) NOT BETWEEN (t2.c1) AND (rt0.c0)))))OR(json_insert(vt0.c0, t0.c0, vt1.c0))))OR((('M7泯')*(t0.c1)))), ((NULL)/(CAST(t2.c0 AS NUMERIC)))  NULLS FIRST, ((((t0.c2) NOTNULL)) NOT NULL) DESC  NULLS LAST);
SELECT * FROM rt0, vt1, t2, t0 CROSS JOIN vt0 ON CAST(CASE rt0.c0  WHEN rt0.c0 THEN t2.c0 ELSE t0.c0 END AS TEXT) WHERE ((CAST(vt1.c0 AS BLOB) IN ())) ORDER BY (((((((((t2.c1 IN (rt0.c0, rt0.c2)))OR(CASE WHEN rt0.c3 THEN rt0.c0 END)))OR(((-1.53407371E8) NOT BETWEEN (t2.c1) AND (rt0.c0)))))OR(json_insert(vt0.c0, t0.c0, vt1.c0))))OR((('M7泯')*(t0.c1)))), ((NULL)/(CAST(t2.c0 AS NUMERIC)))  NULLS FIRST, ((((t0.c2) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t2, t0 WHERE ((((rt0.c1 IN (t2.c1))) ISNULL)) ORDER BY (((NULL)AND(t2.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t2.c1))) ISNULL)) IS TRUE)  as count FROM rt0, t2, t0 ORDER BY (((NULL)AND(t2.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t2, t0 WHERE ((((rt0.c1 IN (t2.c1))) ISNULL)) ORDER BY (((NULL)AND(t2.c2)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (t2.c1))) ISNULL)) IS TRUE)  as count FROM rt0, t2, t0 ORDER BY (((NULL)AND(t2.c2)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t2, t0 WHERE ((((rt0.c1 IN (t2.c1))) ISNULL)) ORDER BY (((NULL)AND(t2.c2)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((((9.27396975E8)OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)|('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((9.27396975E8)OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)|(''))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((9.27396975E8)OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)|('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((9.27396975E8)OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)|(''))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((9.27396975E8)OR(vt0.c0)))OR(vt0.c0)))>=(((vt0.c0)|('')))));
SELECT * FROM t2 FULL OUTER JOIN t0 ON ((0.7972870238292535)==(((t2.c2) BETWEEN (t2.c0) AND (t0.c2)))) WHERE (((x'')%(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')%(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((0.7972870238292535)=(((t2.c2) BETWEEN (t2.c0) AND (t0.c2)))));
SELECT * FROM t2 FULL OUTER JOIN t0 ON ((0.7972870238292535)==(((t2.c2) BETWEEN (t2.c0) AND (t0.c2)))) WHERE (((x'')%(t0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((x'')%(t0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t2 FULL OUTER JOIN t0 ON ((0.7972870238292535)=(((t2.c2) BETWEEN (t2.c0) AND (t0.c2)))));
SELECT * FROM t2 FULL OUTER JOIN t0 ON ((0.7972870238292535)==(((t2.c2) BETWEEN (t2.c0) AND (t0.c2)))) WHERE (((x'')%(t0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (((((IFNULL(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0))) ORDER BY LIKELY(DISTINCT ((vt1.c0)>>(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT ((vt1.c0)>>(vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((IFNULL(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0))) ORDER BY LIKELY(DISTINCT ((vt1.c0)>>(vt1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY LIKELY(DISTINCT ((vt1.c0)>>(vt1.c0))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((IFNULL(vt1.c0, vt1.c0))OR((((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))))))OR(vt1.c0))) ORDER BY LIKELY(DISTINCT ((vt1.c0)>>(vt1.c0))) ASC;
SELECT ALL * FROM vt0, rt0 CROSS JOIN t2 ON ((CAST(vt0.c0 AS REAL))!=(x'')) WHERE (CASE WHEN ((t2.c1)&(rt0.c0)) THEN ((t2.c0) BETWEEN (t2.c0) AND (rt0.c2)) END) ORDER BY ((((((rt0.c0)<<(vt0.c0)))AND(CAST(t2.c2 AS REAL))))OR(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c1)&(rt0.c0)) THEN ((t2.c0) BETWEEN (t2.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t2 ON ((CAST(vt0.c0 AS REAL))!=(x'')) ORDER BY ((((((rt0.c0)<<(vt0.c0)))AND(CAST(t2.c2 AS REAL))))OR(((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t2 ON ((CAST(vt0.c0 AS REAL))!=(x'')) WHERE (CASE WHEN ((t2.c1)&(rt0.c0)) THEN ((t2.c0) BETWEEN (t2.c0) AND (rt0.c2)) END) ORDER BY ((((((rt0.c0)<<(vt0.c0)))AND(CAST(t2.c2 AS REAL))))OR(((rt0.c2) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c1)&(rt0.c0)) THEN ((t2.c0) BETWEEN (t2.c0) AND (rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN t2 ON ((CAST(vt0.c0 AS REAL))!=(x'')) ORDER BY ((((((rt0.c0)<<(vt0.c0)))AND(CAST(t2.c2 AS REAL))))OR(((rt0.c2) IS FALSE))));
SELECT ALL * FROM vt0, rt0 CROSS JOIN t2 ON ((CAST(vt0.c0 AS REAL))!=(x'')) WHERE (CASE WHEN ((t2.c1)&(rt0.c0)) THEN ((t2.c0) BETWEEN (t2.c0) AND (rt0.c2)) END) ORDER BY ((((((rt0.c0)<<(vt0.c0)))AND(CAST(t2.c2 AS REAL))))OR(((rt0.c2) IS FALSE)));
SELECT COUNT(*) FROM t0, t2, rt0 WHERE (((((((t2.c0))<=((NULL)))))>=((((((((((t0.c2)AND(t0.c0)))AND(rt0.c0)))OR(t2.c0)))OR(t2.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c0))<=((NULL)))))>=((((((((((t0.c2)AND(t0.c0)))AND(rt0.c0)))OR(t2.c0)))OR(t2.c0)))))) IS TRUE)  as count FROM t0, t2, rt0);
SELECT COUNT(*) FROM t0, t2, rt0 WHERE (((((((t2.c0))<=((NULL)))))>=((((((((((t0.c2)AND(t0.c0)))AND(rt0.c0)))OR(t2.c0)))OR(t2.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((t2.c0))<=((NULL)))))>=((((((((((t0.c2)AND(t0.c0)))AND(rt0.c0)))OR(t2.c0)))OR(t2.c0)))))) IS TRUE)  as count FROM t0, t2, rt0);
SELECT COUNT(*) FROM t0, t2, rt0 WHERE (((((((t2.c0))<=((NULL)))))>=((((((((((t0.c2)AND(t0.c0)))AND(rt0.c0)))OR(t2.c0)))OR(t2.c0))))));
SELECT * FROM t0, rt0, vt1, t2 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt1.c0)*(t0.c2)))) AND ((rt0.c2)))) ORDER BY ((((t0.c2)||(t2.c1)))GLOB('-1904489805')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((vt1.c0)*(t0.c2)))) AND ((rt0.c2)))) IS TRUE)  as count FROM t0, rt0, vt1, t2 LEFT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((((t0.c2)||(t2.c1)))GLOB('-1904489805')) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, vt1, t2 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt1.c0)*(t0.c2)))) AND ((rt0.c2)))) ORDER BY ((((t0.c2)||(t2.c1)))GLOB('-1904489805')) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) NOT BETWEEN ((((vt1.c0)*(t0.c2)))) AND ((rt0.c2)))) IS TRUE)  as count FROM t0, rt0, vt1, t2 LEFT OUTER JOIN vt0 ON rt0.c1 ORDER BY ((((t0.c2)||(t2.c1)))GLOB('-1904489805')) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, vt1, t2 LEFT OUTER JOIN vt0 ON rt0.c1 WHERE ((((rt0.c1)) NOT BETWEEN ((((vt1.c0)*(t0.c2)))) AND ((rt0.c2)))) ORDER BY ((((t0.c2)||(t2.c1)))GLOB('-1904489805')) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CAST(vt1.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((CAST(vt1.c0 AS TEXT)) NOTNULL));
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON '\s)fk' CROSS JOIN t2 ON json_array_length('510410382', 'PB7XZ!5C') INNER JOIN rt0 ON (((((rt0.c3)AND(rt0.c0)))AND(t0.c1)) IN ((NOT (rt0.c1)))) WHERE (((GLOB(t0.c1, rt0.c0)) NOT BETWEEN (rt0.c2) AND (((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((GLOB(t0.c1, rt0.c0)) NOT BETWEEN (rt0.c2) AND (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON '\s)fk' CROSS JOIN t2 ON json_array_length('510410382', 'PB7XZ!5C') INNER JOIN rt0 ON (((((rt0.c3)AND(rt0.c0)))AND(t0.c1)) IN ((NOT (rt0.c1)))));
SELECT * FROM vt0, t0 LEFT OUTER JOIN vt1 ON '\s)fk' CROSS JOIN t2 ON json_array_length('510410382', 'PB7XZ!5C') INNER JOIN rt0 ON (((((rt0.c3)AND(rt0.c0)))AND(t0.c1)) IN ((NOT (rt0.c1)))) WHERE (((GLOB(t0.c1, rt0.c0)) NOT BETWEEN (rt0.c2) AND (((t0.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((GLOB(t0.c1, rt0.c0)) NOT BETWEEN (rt0.c2) AND (((t0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0, t0 LEFT OUTER JOIN vt1 ON '\s)fk' CROSS JOIN t2 ON json_array_length('510410382', 'PB7XZ!5C') INNER JOIN rt0 ON (((((rt0.c3)AND(rt0.c0)))AND(t0.c1)) IN ((NOT (rt0.c1)))));
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) IS FALSE) INNER JOIN rt0 ON (~ ((((t2.c2, t2.c0, t2.c1)) BETWEEN ((t0.c0, t2.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, t0.c1))))) CROSS JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN t2.c2 THEN vt1.c0 WHEN vt0.c0 THEN t2.c0 ELSE rt0.c2 END)%(CASE WHEN t0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN vt1.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN t2 ON 804886863 COLLATE RTRIM WHERE (CASE WHEN t2.c2 THEN (+ (t0.c1)) END) ORDER BY (((~ (rt0.c0))) NOT BETWEEN (0.2749635389925186) AND (CASE t2.c2  WHEN vt0.c0 THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c2 THEN (+ (t0.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) IS FALSE) INNER JOIN rt0 ON (~ ((((t2.c2, t2.c0, t2.c1)) BETWEEN ((t0.c0, t2.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, t0.c1))))) CROSS JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN t2.c2 THEN vt1.c0 WHEN vt0.c0 THEN t2.c0 ELSE rt0.c2 END)%(CASE WHEN t0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN vt1.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN t2 ON 804886863 COLLATE RTRIM ORDER BY (((~ (rt0.c0))) NOT BETWEEN (0.2749635389925186) AND (CASE t2.c2  WHEN vt0.c0 THEN x'' END))  NULLS FIRST);
SELECT ALL * FROM vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) IS FALSE) INNER JOIN rt0 ON (~ ((((t2.c2, t2.c0, t2.c1)) BETWEEN ((t0.c0, t2.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, t0.c1))))) CROSS JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN t2.c2 THEN vt1.c0 WHEN vt0.c0 THEN t2.c0 ELSE rt0.c2 END)%(CASE WHEN t0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN vt1.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN t2 ON 804886863 COLLATE RTRIM WHERE (CASE WHEN t2.c2 THEN (+ (t0.c1)) END) ORDER BY (((~ (rt0.c0))) NOT BETWEEN (0.2749635389925186) AND (CASE t2.c2  WHEN vt0.c0 THEN x'' END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t2.c2 THEN (+ (t0.c1)) END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((t2.c0)))) IS FALSE) INNER JOIN rt0 ON (~ ((((t2.c2, t2.c0, t2.c1)) BETWEEN ((t0.c0, t2.c1, rt0.c1)) AND ((rt0.c2, vt1.c0, t0.c1))))) CROSS JOIN t0 ON ((CASE rt0.c2  WHEN vt0.c0 THEN rt0.c1 WHEN t2.c2 THEN vt1.c0 WHEN vt0.c0 THEN t2.c0 ELSE rt0.c2 END)%(CASE WHEN t0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c3 WHEN NULL THEN vt1.c0 ELSE vt0.c0 END)) RIGHT OUTER JOIN t2 ON 804886863 COLLATE RTRIM ORDER BY (((~ (rt0.c0))) NOT BETWEEN (0.2749635389925186) AND (CASE t2.c2  WHEN vt0.c0 THEN x'' END))  NULLS FIRST);
SELECT * FROM vt1, vt0, t2 RIGHT OUTER JOIN t0 ON (((+ (rt0.c3))) NOT NULL) INNER JOIN rt0 ON (((rt0.c0 IN (vt0.c0)))*((+ (t2.c1)))) WHERE (NULLIF(DISTINCT (- (t0.c2)), UPPER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (- (t0.c2)), UPPER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt1, vt0, t2 RIGHT OUTER JOIN t0 ON (((+ (rt0.c3))) NOT NULL) INNER JOIN rt0 ON (((rt0.c0 IN (vt0.c0)))*((+ (t2.c1)))));
SELECT * FROM vt1, vt0, t2 RIGHT OUTER JOIN t0 ON (((+ (rt0.c3))) NOT NULL) INNER JOIN rt0 ON (((rt0.c0 IN (vt0.c0)))*((+ (t2.c1)))) WHERE (NULLIF(DISTINCT (- (t0.c2)), UPPER(DISTINCT vt0.c0)));
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT (- (t0.c2)), UPPER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt1, vt0, t2 RIGHT OUTER JOIN t0 ON (((+ (rt0.c3))) NOT NULL) INNER JOIN rt0 ON (((rt0.c0 IN (vt0.c0)))*((+ (t2.c1)))));
SELECT ALL * FROM vt0, rt0, t0, vt1, t2 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, vt1, t2);
SELECT ALL * FROM vt0, rt0, t0, vt1, t2 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(t0.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(t0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0, t0, vt1, t2);
SELECT ALL * FROM vt0, rt0, t0, vt1, t2 WHERE (((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(t0.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-1632055969') ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN (rt0.c0 IN ()) END ASC, (((((NULL)>=(rt0.c3)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN 0.49774977378285923 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) IS FALSE), (vt0.c0 IN (rt0.c0, vt0.c0))))>((DATE(rt0.c0, rt0.c2, rt0.c2), ((rt0.c1)||(rt0.c0)), ((rt0.c3) IS FALSE), -8.9430483E8, CAST(vt0.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1632055969') IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN (rt0.c0 IN ()) END ASC, (((((NULL)>=(rt0.c3)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN 0.49774977378285923 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) IS FALSE), (vt0.c0 IN (rt0.c0, vt0.c0))))>((DATE(rt0.c0, rt0.c2, rt0.c2), ((rt0.c1)||(rt0.c0)), ((rt0.c3) IS FALSE), -8.9430483E8, CAST(vt0.c0 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-1632055969') ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN (rt0.c0 IN ()) END ASC, (((((NULL)>=(rt0.c3)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN 0.49774977378285923 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) IS FALSE), (vt0.c0 IN (rt0.c0, vt0.c0))))>((DATE(rt0.c0, rt0.c2, rt0.c2), ((rt0.c1)||(rt0.c0)), ((rt0.c3) IS FALSE), -8.9430483E8, CAST(vt0.c0 AS INTEGER)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('-1632055969') IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN (rt0.c0 IN ()) END ASC, (((((NULL)>=(rt0.c3)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN 0.49774977378285923 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) IS FALSE), (vt0.c0 IN (rt0.c0, vt0.c0))))>((DATE(rt0.c0, rt0.c2, rt0.c2), ((rt0.c1)||(rt0.c0)), ((rt0.c3) IS FALSE), -8.9430483E8, CAST(vt0.c0 AS INTEGER)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ('-1632055969') ORDER BY CASE WHEN CAST(vt0.c0 AS TEXT) THEN (rt0.c0 IN ()) END ASC, (((((NULL)>=(rt0.c3)), CASE WHEN vt0.c0 THEN vt0.c0 END, CASE vt0.c0  WHEN 0.49774977378285923 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, ((rt0.c3) IS FALSE), (vt0.c0 IN (rt0.c0, vt0.c0))))>((DATE(rt0.c0, rt0.c2, rt0.c2), ((rt0.c1)||(rt0.c0)), ((rt0.c3) IS FALSE), -8.9430483E8, CAST(vt0.c0 AS INTEGER)))) DESC;
SELECT * FROM vt1 WHERE (0xffffffff852c2770);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff852c2770) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0xffffffff852c2770);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffff852c2770) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (0xffffffff852c2770);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((t2.c0)GLOB(rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t2 ON CASE ((rt0.c2)%(0Xffffffffcf9240f1))  WHEN ((((t2.c0)AND(rt0.c3)))OR(t0.c0)) THEN CASE WHEN rt0.c3 THEN t2.c2 WHEN t2.c2 THEN t0.c1 WHEN t2.c1 THEN rt0.c2 END WHEN t0.c2 COLLATE BINARY THEN t2.c2 WHEN t0.c1 THEN t0.c2 COLLATE BINARY END WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((t2.c0)GLOB(rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t2 ON CASE ((rt0.c2)%(0Xffffffffcf9240f1))  WHEN ((((t2.c0)AND(rt0.c3)))OR(t0.c0)) THEN CASE WHEN rt0.c3 THEN t2.c2 WHEN t2.c2 THEN t0.c1 WHEN t2.c1 THEN rt0.c2 END WHEN t0.c2 COLLATE BINARY THEN t2.c2 WHEN t0.c1 THEN t0.c2 COLLATE BINARY END);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN rt0 ON ((t2.c0)GLOB(rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t2 ON CASE ((rt0.c2)%(0Xffffffffcf9240f1))  WHEN ((((t2.c0)AND(rt0.c3)))OR(t0.c0)) THEN CASE WHEN rt0.c3 THEN t2.c2 WHEN t2.c2 THEN t0.c1 WHEN t2.c1 THEN rt0.c2 END WHEN t0.c2 COLLATE BINARY THEN t2.c2 WHEN t0.c1 THEN t0.c2 COLLATE BINARY END WHERE (t2.c0);
SELECT SUM(count) FROM (SELECT ((t2.c0) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN rt0 ON ((t2.c0)GLOB(rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t2 ON CASE ((rt0.c2)%(0Xffffffffcf9240f1))  WHEN ((((t2.c0)AND(rt0.c3)))OR(t0.c0)) THEN CASE WHEN rt0.c3 THEN t2.c2 WHEN t2.c2 THEN t0.c1 WHEN t2.c1 THEN rt0.c2 END WHEN t0.c2 COLLATE BINARY THEN t2.c2 WHEN t0.c1 THEN t0.c2 COLLATE BINARY END);
SELECT ALL * FROM vt0, vt1 WHERE (((0.5301377788186361) NOT BETWEEN ((('D%') ISNULL)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY CASE (1184932307 IN (x''))  WHEN ((vt1.c0)%(vt1.c0)) THEN (~ (vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN LIKE('', vt1.c0) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.5301377788186361) NOT BETWEEN ((('D%') ISNULL)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (1184932307 IN (x''))  WHEN ((vt1.c0)%(vt1.c0)) THEN (~ (vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN LIKE('', vt1.c0) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((0.5301377788186361) NOT BETWEEN ((('D%') ISNULL)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY CASE (1184932307 IN (x''))  WHEN ((vt1.c0)%(vt1.c0)) THEN (~ (vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN LIKE('', vt1.c0) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0.5301377788186361) NOT BETWEEN ((('D%') ISNULL)) AND (vt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, vt1 ORDER BY CASE (1184932307 IN (x''))  WHEN ((vt1.c0)%(vt1.c0)) THEN (~ (vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN LIKE('', vt1.c0) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((0.5301377788186361) NOT BETWEEN ((('D%') ISNULL)) AND (vt1.c0 COLLATE NOCASE))) ORDER BY CASE (1184932307 IN (x''))  WHEN ((vt1.c0)%(vt1.c0)) THEN (~ (vt0.c0)) WHEN UNLIKELY(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY WHEN LIKE('', vt1.c0) THEN CAST(vt1.c0 AS INTEGER) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON '-1742594037' CROSS JOIN vt0 ON HEX(SQLITE_VERSION()) WHERE (t0.c0) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE ((0.14088484474433127) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON '-1742594037' CROSS JOIN vt0 ON HEX(SQLITE_VERSION()) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE ((0.14088484474433127) ISNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON '-1742594037' CROSS JOIN vt0 ON HEX(SQLITE_VERSION()) WHERE (t0.c0) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE ((0.14088484474433127) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON '-1742594037' CROSS JOIN vt0 ON HEX(SQLITE_VERSION()) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE ((0.14088484474433127) ISNULL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 INNER JOIN rt0 ON rt0.c1 INNER JOIN t0 ON '-1742594037' CROSS JOIN vt0 ON HEX(SQLITE_VERSION()) WHERE (t0.c0) ORDER BY CASE WHEN (rt0.c1 IN ()) THEN CAST(t0.c0 AS BLOB) ELSE ((0.14088484474433127) ISNULL) END  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t2, t0, vt1, rt0 WHERE (((((((((rt0.c2)AND(((t0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((t2.c2)+(x'')))))AND(((rt0.c3)>(t2.c2))))) ORDER BY ((CASE WHEN t0.c2 THEN vt1.c0 END)|(x'7e25'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(((t0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((t2.c2)+(x'')))))AND(((rt0.c3)>(t2.c2))))) IS TRUE)  as count FROM vt0, t2, t0, vt1, rt0 ORDER BY ((CASE WHEN t0.c2 THEN vt1.c0 END)|(x'7e25'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, t0, vt1, rt0 WHERE (((((((((rt0.c2)AND(((t0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((t2.c2)+(x'')))))AND(((rt0.c3)>(t2.c2))))) ORDER BY ((CASE WHEN t0.c2 THEN vt1.c0 END)|(x'7e25'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c2)AND(((t0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((t2.c2)+(x'')))))AND(((rt0.c3)>(t2.c2))))) IS TRUE)  as count FROM vt0, t2, t0, vt1, rt0 ORDER BY ((CASE WHEN t0.c2 THEN vt1.c0 END)|(x'7e25'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2, t0, vt1, rt0 WHERE (((((((((rt0.c2)AND(((t0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CASE WHEN t0.c0 THEN rt0.c2 END)))OR(((t2.c2)+(x'')))))AND(((rt0.c3)>(t2.c2))))) ORDER BY ((CASE WHEN t0.c2 THEN vt1.c0 END)|(x'7e25'))  NULLS FIRST;
SELECT COUNT(*) FROM t2, rt0 WHERE ((((t2.c0, x'f6fc', rt0.c3)) NOT BETWEEN ((((t2.c1) ISNULL), TRIM(rt0.c1), LIKELY(DISTINCT rt0.c3))) AND ((((t2.c0) NOT NULL), rt0.c3, (NOT (t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0, x'f6fc', rt0.c3)) NOT BETWEEN ((((t2.c1) ISNULL), TRIM(rt0.c1), LIKELY(DISTINCT rt0.c3))) AND ((((t2.c0) NOT NULL), rt0.c3, (NOT (t2.c0)))))) IS TRUE)  as count FROM t2, rt0);
SELECT COUNT(*) FROM t2, rt0 WHERE ((((t2.c0, x'f6fc', rt0.c3)) NOT BETWEEN ((((t2.c1) ISNULL), TRIM(rt0.c1), LIKELY(DISTINCT rt0.c3))) AND ((((t2.c0) NOT NULL), rt0.c3, (NOT (t2.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0, x'f6fc', rt0.c3)) NOT BETWEEN ((((t2.c1) ISNULL), TRIM(rt0.c1), LIKELY(DISTINCT rt0.c3))) AND ((((t2.c0) NOT NULL), rt0.c3, (NOT (t2.c0)))))) IS TRUE)  as count FROM t2, rt0);
SELECT COUNT(*) FROM t2, rt0 WHERE ((((t2.c0, x'f6fc', rt0.c3)) NOT BETWEEN ((((t2.c1) ISNULL), TRIM(rt0.c1), LIKELY(DISTINCT rt0.c3))) AND ((((t2.c0) NOT NULL), rt0.c3, (NOT (t2.c0))))));
SELECT * FROM vt0, t0 WHERE (LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (LIKELY(DISTINCT ((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c1))));
SELECT COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ((+ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ((+ (rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0, rt0, t0);
SELECT COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ((+ (rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t2 ON (((((t0.c2)>>(rt0.c2)), NULL, t2.c1))!=((CASE WHEN NULL THEN t0.c2 ELSE rt0.c3 END, CASE WHEN vt1.c0 THEN t0.c1 ELSE t0.c1 END, x''))) RIGHT OUTER JOIN rt0 ON ((CASE t0.c2  WHEN t0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN t2.c2 THEN rt0.c1 WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN rt0.c3 ELSE t2.c1 END)LIKE(((t2.c0) NOT NULL))) INNER JOIN t0 ON (((rt0.c3 IN ()))IS NOT(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) WHERE ((((rt0.c3 IN (t0.c0)))|(((rt0.c0) BETWEEN (t0.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (t0.c0)))|(((rt0.c0) BETWEEN (t0.c2) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON (((((t0.c2)>>(rt0.c2)), NULL, t2.c1))<>((CASE WHEN NULL THEN t0.c2 ELSE rt0.c3 END, CASE WHEN vt1.c0 THEN t0.c1 ELSE t0.c1 END, x''))) RIGHT OUTER JOIN rt0 ON ((CASE t0.c2  WHEN t0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN t2.c2 THEN rt0.c1 WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN rt0.c3 ELSE t2.c1 END)LIKE(((t2.c0) NOT NULL))) INNER JOIN t0 ON (((rt0.c3 IN ()))IS NOT(((((rt0.c1)OR(NULL)))OR(rt0.c0)))));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN t2 ON (((((t0.c2)>>(rt0.c2)), NULL, t2.c1))!=((CASE WHEN NULL THEN t0.c2 ELSE rt0.c3 END, CASE WHEN vt1.c0 THEN t0.c1 ELSE t0.c1 END, x''))) RIGHT OUTER JOIN rt0 ON ((CASE t0.c2  WHEN t0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN t2.c2 THEN rt0.c1 WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN rt0.c3 ELSE t2.c1 END)LIKE(((t2.c0) NOT NULL))) INNER JOIN t0 ON (((rt0.c3 IN ()))IS NOT(((((rt0.c1)OR(NULL)))OR(rt0.c0)))) WHERE ((((rt0.c3 IN (t0.c0)))|(((rt0.c0) BETWEEN (t0.c2) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (t0.c0)))|(((rt0.c0) BETWEEN (t0.c2) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t2 ON (((((t0.c2)>>(rt0.c2)), NULL, t2.c1))<>((CASE WHEN NULL THEN t0.c2 ELSE rt0.c3 END, CASE WHEN vt1.c0 THEN t0.c1 ELSE t0.c1 END, x''))) RIGHT OUTER JOIN rt0 ON ((CASE t0.c2  WHEN t0.c2 THEN rt0.c3 WHEN t0.c2 THEN rt0.c0 WHEN t2.c2 THEN rt0.c1 WHEN t2.c2 THEN t2.c1 WHEN t2.c0 THEN rt0.c3 ELSE t2.c1 END)LIKE(((t2.c0) NOT NULL))) INNER JOIN t0 ON (((rt0.c3 IN ()))IS NOT(((((rt0.c1)OR(NULL)))OR(rt0.c0)))));
SELECT * FROM t2, t0, vt0, vt1 WHERE (((((t2.c2)+(t2.c2)))!=(CAST(vt0.c0 AS BLOB)))) ORDER BY UPPER(DISTINCT t0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t2.c2)+(t2.c2)))!=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t2, t0, vt0, vt1 ORDER BY UPPER(DISTINCT t0.c1) COLLATE RTRIM);
SELECT * FROM t2, t0, vt0, vt1 WHERE (((((t2.c2)+(t2.c2)))!=(CAST(vt0.c0 AS BLOB)))) ORDER BY UPPER(DISTINCT t0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((t2.c2)+(t2.c2)))!=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM t2, t0, vt0, vt1 ORDER BY UPPER(DISTINCT t0.c1) COLLATE RTRIM);
SELECT * FROM t2, t0, vt0, vt1 WHERE (((((t2.c2)+(t2.c2)))!=(CAST(vt0.c0 AS BLOB)))) ORDER BY UPPER(DISTINCT t0.c1) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(vt1.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(vt1.c0 AS INTEGER)))) IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ((~ (CAST(vt1.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY ((rt0.c3)-(((rt0.c1)|(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c3)-(((rt0.c1)|(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY ((rt0.c3)-(((rt0.c1)|(vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) IS TRUE)  as count FROM vt1, rt0 ORDER BY ((rt0.c3)-(((rt0.c1)|(vt1.c0)))) ASC);
SELECT COUNT(*) FROM vt1, rt0 WHERE (((((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c0))) ISNULL)) ORDER BY ((rt0.c3)-(((rt0.c1)|(vt1.c0)))) ASC;
SELECT * FROM rt0 WHERE ((('*''6DꚑMo' COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT (((('*''6DꚑMo' COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('*''6DꚑMo' COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT (((('*''6DꚑMo' COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((('*''6DꚑMo' COLLATE BINARY) ISNULL));
SELECT * FROM t2, vt1 WHERE (((x'') BETWEEN (((t2.c1)*(t2.c1))) AND (((((((((((((t2.c1)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(t2.c1)))OR(vt1.c0)))AND(t2.c2))))) ORDER BY ((((((t2.c1)OR(t2.c0)))OR(t2.c0)))AND(t2.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((t2.c1)*(t2.c1))) AND (((((((((((((t2.c1)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(t2.c1)))OR(vt1.c0)))AND(t2.c2))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((((t2.c1)OR(t2.c0)))OR(t2.c0)))AND(t2.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM t2, vt1 WHERE (((x'') BETWEEN (((t2.c1)*(t2.c1))) AND (((((((((((((t2.c1)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(t2.c1)))OR(vt1.c0)))AND(t2.c2))))) ORDER BY ((((((t2.c1)OR(t2.c0)))OR(t2.c0)))AND(t2.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') BETWEEN (((t2.c1)*(t2.c1))) AND (((((((((((((t2.c1)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(t2.c1)))OR(vt1.c0)))AND(t2.c2))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((((t2.c1)OR(t2.c0)))OR(t2.c0)))AND(t2.c1 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM t2, vt1 WHERE (((x'') BETWEEN (((t2.c1)*(t2.c1))) AND (((((((((((((t2.c1)OR(x'')))OR(vt1.c0)))OR(vt1.c0)))AND(t2.c1)))OR(vt1.c0)))AND(t2.c2))))) ORDER BY ((((((t2.c1)OR(t2.c0)))OR(t2.c0)))AND(t2.c1 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT ALL * FROM t2 WHERE (((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c1)) COLLATE BINARY) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c1)) COLLATE BINARY) IS TRUE)  as count FROM t2);
SELECT ALL * FROM t2 WHERE (((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END IN ())) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END IN ())) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((CASE t0.c1  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c2 END IN ())) ORDER BY ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1))) IS TRUE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN vt1 ON TRIM(((t0.c0) BETWEEN (rt0.c0) AND (t2.c2))) CROSS JOIN rt0 ON ((+ (rt0.c0)) IN ()) LEFT OUTER JOIN t2 ON CAST(t0.c1 AS NUMERIC) COLLATE BINARY WHERE (IFNULL(CAST(NULL AS BLOB), ((((t0.c1)AND(t2.c1)))AND(rt0.c0)))) ORDER BY ((((((((CAST(t2.c2 AS INTEGER))OR(((t2.c1) ISNULL))))AND((NOT (t2.c1)))))OR((((t0.c0))<>((t2.c2))))))OR(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(NULL AS BLOB), ((((t0.c1)AND(t2.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON TRIM(((t0.c0) BETWEEN (rt0.c0) AND (t2.c2))) CROSS JOIN rt0 ON ((+ (rt0.c0)) IN ()) LEFT OUTER JOIN t2 ON CAST(t0.c1 AS NUMERIC) COLLATE BINARY ORDER BY ((((((((CAST(t2.c2 AS INTEGER))OR(((t2.c1) ISNULL))))AND((NOT (t2.c1)))))OR((((t0.c0))!=((t2.c2))))))OR(rt0.c3))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN vt1 ON TRIM(((t0.c0) BETWEEN (rt0.c0) AND (t2.c2))) CROSS JOIN rt0 ON ((+ (rt0.c0)) IN ()) LEFT OUTER JOIN t2 ON CAST(t0.c1 AS NUMERIC) COLLATE BINARY WHERE (IFNULL(CAST(NULL AS BLOB), ((((t0.c1)AND(t2.c1)))AND(rt0.c0)))) ORDER BY ((((((((CAST(t2.c2 AS INTEGER))OR(((t2.c1) ISNULL))))AND((NOT (t2.c1)))))OR((((t0.c0))<>((t2.c2))))))OR(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CAST(NULL AS BLOB), ((((t0.c1)AND(t2.c1)))AND(rt0.c0)))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN vt1 ON TRIM(((t0.c0) BETWEEN (rt0.c0) AND (t2.c2))) CROSS JOIN rt0 ON ((+ (rt0.c0)) IN ()) LEFT OUTER JOIN t2 ON CAST(t0.c1 AS NUMERIC) COLLATE BINARY ORDER BY ((((((((CAST(t2.c2 AS INTEGER))OR(((t2.c1) ISNULL))))AND((NOT (t2.c1)))))OR((((t0.c0))!=((t2.c2))))))OR(rt0.c3))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 RIGHT OUTER JOIN vt1 ON TRIM(((t0.c0) BETWEEN (rt0.c0) AND (t2.c2))) CROSS JOIN rt0 ON ((+ (rt0.c0)) IN ()) LEFT OUTER JOIN t2 ON CAST(t0.c1 AS NUMERIC) COLLATE BINARY WHERE (IFNULL(CAST(NULL AS BLOB), ((((t0.c1)AND(t2.c1)))AND(rt0.c0)))) ORDER BY ((((((((CAST(t2.c2 AS INTEGER))OR(((t2.c1) ISNULL))))AND((NOT (t2.c1)))))OR((((t0.c0))<>((t2.c2))))))OR(rt0.c3))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (LENGTH(NULL)) ORDER BY 0.3700569320831437;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(NULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.3700569320831437);
SELECT ALL * FROM vt0 WHERE (LENGTH(NULL)) ORDER BY 0.3700569320831437;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(NULL)) IS TRUE)  as count FROM vt0 ORDER BY 0.3700569320831437);
SELECT ALL * FROM vt0 WHERE (LENGTH(NULL)) ORDER BY 0.3700569320831437;
SELECT * FROM t2 CROSS JOIN rt0 ON (((((t2.c2))!=((rt0.c3)))) BETWEEN (((t2.c0) NOT BETWEEN (rt0.c3) AND (NULL))) AND ((((t2.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, t2.c0)) AND ((t2.c0, t2.c1, -1.367404933E9))))) WHERE (((0x4857e243) NOTNULL)) ORDER BY 0.6478229294565564 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x4857e243) NOTNULL)) IS TRUE)  as count FROM t2 CROSS JOIN rt0 ON (((((t2.c2))<>((rt0.c3)))) BETWEEN (((t2.c0) NOT BETWEEN (rt0.c3) AND (NULL))) AND ((((t2.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, t2.c0)) AND ((t2.c0, t2.c1, -1.367404933E9))))) ORDER BY 0.6478229294565564 DESC  NULLS LAST);
SELECT * FROM t2 CROSS JOIN rt0 ON (((((t2.c2))!=((rt0.c3)))) BETWEEN (((t2.c0) NOT BETWEEN (rt0.c3) AND (NULL))) AND ((((t2.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, t2.c0)) AND ((t2.c0, t2.c1, -1.367404933E9))))) WHERE (((0x4857e243) NOTNULL)) ORDER BY 0.6478229294565564 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0x4857e243) NOTNULL)) IS TRUE)  as count FROM t2 CROSS JOIN rt0 ON (((((t2.c2))<>((rt0.c3)))) BETWEEN (((t2.c0) NOT BETWEEN (rt0.c3) AND (NULL))) AND ((((t2.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, t2.c0)) AND ((t2.c0, t2.c1, -1.367404933E9))))) ORDER BY 0.6478229294565564 DESC  NULLS LAST);
SELECT * FROM t2 CROSS JOIN rt0 ON (((((t2.c2))!=((rt0.c3)))) BETWEEN (((t2.c0) NOT BETWEEN (rt0.c3) AND (NULL))) AND ((((t2.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, t2.c0)) AND ((t2.c0, t2.c1, -1.367404933E9))))) WHERE (((0x4857e243) NOTNULL)) ORDER BY 0.6478229294565564 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c2 AS BLOB))<(((rt0.c2)OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c0)-(rt0.c1)))>('936994333'))  NULLS LAST, (~ (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS BLOB))<(((rt0.c2)OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c0)-(rt0.c1)))>('936994333'))  NULLS LAST, (~ (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c2 AS BLOB))<(((rt0.c2)OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c0)-(rt0.c1)))>('936994333'))  NULLS LAST, (~ (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CAST(rt0.c2 AS BLOB))<(((rt0.c2)OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c0)-(rt0.c1)))>('936994333'))  NULLS LAST, (~ (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c1) ORDER BY ((CAST(rt0.c2 AS BLOB))<(((rt0.c2)OR(rt0.c1)))) ASC  NULLS FIRST, ((((rt0.c0)-(rt0.c1)))>('936994333'))  NULLS LAST, (~ (vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM t0 INNER JOIN vt1 ON ((rt0.c0) NOTNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (NOT (CASE WHEN t0.c2 THEN rt0.c2 ELSE '' END)) WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END)AND((t0.c2 IN (rt0.c2)))))AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END)AND((t0.c2 IN (rt0.c2)))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((rt0.c0) NOTNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (NOT (CASE WHEN t0.c2 THEN rt0.c2 ELSE '' END)));
SELECT * FROM t0 INNER JOIN vt1 ON ((rt0.c0) NOTNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (NOT (CASE WHEN t0.c2 THEN rt0.c2 ELSE '' END)) WHERE (((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END)AND((t0.c2 IN (rt0.c2)))))AND(((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END)AND((t0.c2 IN (rt0.c2)))))AND(((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((rt0.c0) NOTNULL) COLLATE NOCASE RIGHT OUTER JOIN rt0 ON (NOT (CASE WHEN t0.c2 THEN rt0.c2 ELSE '' END)));
SELECT ALL * FROM rt0, t0, vt0 FULL OUTER JOIN t2 ON ((LOWER(DISTINCT t0.c0)) ISNULL) WHERE ((CAST(t0.c0 AS REAL) IN ())) ORDER BY CASE WHEN ((((((((rt0.c2)AND(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c2)) THEN ((t2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN t2.c0 THEN CASE rt0.c0  WHEN t0.c2 THEN x'' END WHEN NULL THEN CASE t2.c2  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN '-1987324700' WHEN t2.c2 THEN t0.c0 ELSE t2.c2 END ELSE x'' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 FULL OUTER JOIN t2 ON ((LOWER(DISTINCT t0.c0)) ISNULL) ORDER BY CASE WHEN ((((((((rt0.c2)AND(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c2)) THEN ((t2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN t2.c0 THEN CASE rt0.c0  WHEN t0.c2 THEN x'' END WHEN NULL THEN CASE t2.c2  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN '-1987324700' WHEN t2.c2 THEN t0.c0 ELSE t2.c2 END ELSE x'' END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 FULL OUTER JOIN t2 ON ((LOWER(DISTINCT t0.c0)) ISNULL) WHERE ((CAST(t0.c0 AS REAL) IN ())) ORDER BY CASE WHEN ((((((((rt0.c2)AND(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c2)) THEN ((t2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN t2.c0 THEN CASE rt0.c0  WHEN t0.c2 THEN x'' END WHEN NULL THEN CASE t2.c2  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN '-1987324700' WHEN t2.c2 THEN t0.c0 ELSE t2.c2 END ELSE x'' END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c0 AS REAL) IN ())) IS TRUE)  as count FROM rt0, t0, vt0 FULL OUTER JOIN t2 ON ((LOWER(DISTINCT t0.c0)) ISNULL) ORDER BY CASE WHEN ((((((((rt0.c2)AND(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c2)) THEN ((t2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN t2.c0 THEN CASE rt0.c0  WHEN t0.c2 THEN x'' END WHEN NULL THEN CASE t2.c2  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN '-1987324700' WHEN t2.c2 THEN t0.c0 ELSE t2.c2 END ELSE x'' END ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t0, vt0 FULL OUTER JOIN t2 ON ((LOWER(DISTINCT t0.c0)) ISNULL) WHERE ((CAST(t0.c0 AS REAL) IN ())) ORDER BY CASE WHEN ((((((((rt0.c2)AND(vt0.c0)))AND(t0.c0)))OR(rt0.c3)))OR(rt0.c2)) THEN ((t2.c1) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN t2.c0 THEN CASE rt0.c0  WHEN t0.c2 THEN x'' END WHEN NULL THEN CASE t2.c2  WHEN rt0.c0 THEN x'' WHEN rt0.c2 THEN '-1987324700' WHEN t2.c2 THEN t0.c0 ELSE t2.c2 END ELSE x'' END ASC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE ((((((NULL IN ()))AND('' COLLATE RTRIM)))OR(((rt0.c2) IS TRUE)))) ORDER BY (((((('') BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND('' COLLATE RTRIM)))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((('') BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((NULL IN ()))AND('' COLLATE RTRIM)))OR(((rt0.c2) IS TRUE)))) ORDER BY (((((('') BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL IN ()))AND('' COLLATE RTRIM)))OR(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((('') BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0))  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((NULL IN ()))AND('' COLLATE RTRIM)))OR(((rt0.c2) IS TRUE)))) ORDER BY (((((('') BETWEEN (rt0.c2) AND (rt0.c2)))AND(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)))OR(vt0.c0))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((NULL COLLATE NOCASE)LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NULL COLLATE NOCASE)LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL COLLATE NOCASE)LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((NULL COLLATE NOCASE)LIKE(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((CASE t2.c0  WHEN 0.8605365012754844 THEN t2.c1 END IN ((vt0.c0 IN ())))) ORDER BY 0.7548024580137713 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE t2.c0  WHEN 0.8605365012754844 THEN t2.c1 END IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t2 ORDER BY 0.7548024580137713 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((CASE t2.c0  WHEN 0.8605365012754844 THEN t2.c1 END IN ((vt0.c0 IN ())))) ORDER BY 0.7548024580137713 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE t2.c0  WHEN 0.8605365012754844 THEN t2.c1 END IN ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, t2 ORDER BY 0.7548024580137713 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t2 WHERE ((CASE t2.c0  WHEN 0.8605365012754844 THEN t2.c1 END IN ((vt0.c0 IN ())))) ORDER BY 0.7548024580137713 DESC  NULLS FIRST;
SELECT * FROM t2, vt1 WHERE ((((('ꠛ}')AND(NULL)))OR(((t2.c0)|('M|m#Nh[休8'))))) ORDER BY ((((vt1.c0) NOT BETWEEN (t2.c1) AND (vt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((('ꠛ}')AND(NULL)))OR(((t2.c0)|('M|m#Nh[休8'))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (t2.c1) AND (vt1.c0))) ISNULL) ASC);
SELECT * FROM t2, vt1 WHERE ((((('ꠛ}')AND(NULL)))OR(((t2.c0)|('M|m#Nh[休8'))))) ORDER BY ((((vt1.c0) NOT BETWEEN (t2.c1) AND (vt1.c0))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT (((((('ꠛ}')AND(NULL)))OR(((t2.c0)|('M|m#Nh[休8'))))) IS TRUE)  as count FROM t2, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (t2.c1) AND (vt1.c0))) ISNULL) ASC);
SELECT * FROM t2, vt1 WHERE ((((('ꠛ}')AND(NULL)))OR(((t2.c0)|('M|m#Nh[休8'))))) ORDER BY ((((vt1.c0) NOT BETWEEN (t2.c1) AND (vt1.c0))) ISNULL) ASC;
SELECT COUNT(*) FROM vt1, rt0, vt0, t2, t0 WHERE ((((((t2.c0)) BETWEEN ((-537199301)) AND ((t0.c1))))<(x'b00e'))) ORDER BY (((NOT (NULL)))IS(rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)) BETWEEN ((-537199301)) AND ((t0.c1))))<(x'b00e'))) IS TRUE)  as count FROM vt1, rt0, vt0, t2, t0 ORDER BY (((NOT (NULL)))IS(rt0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, rt0, vt0, t2, t0 WHERE ((((((t2.c0)) BETWEEN ((-537199301)) AND ((t0.c1))))<(x'b00e'))) ORDER BY (((NOT (NULL)))IS(rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((((((t2.c0)) BETWEEN ((-537199301)) AND ((t0.c1))))<(x'b00e'))) IS TRUE)  as count FROM vt1, rt0, vt0, t2, t0 ORDER BY (((NOT (NULL)))IS(rt0.c3 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt1, rt0, vt0, t2, t0 WHERE ((((((t2.c0)) BETWEEN ((-537199301)) AND ((t0.c1))))<(x'b00e'))) ORDER BY (((NOT (NULL)))IS(rt0.c3 COLLATE RTRIM));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON json_remove(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END, ((vt1.c0) NOTNULL)) WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON json_remove(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END, ((vt1.c0) NOTNULL)));
SELECT ALL * FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON json_remove(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END, ((vt1.c0) NOTNULL)) WHERE (CAST(CAST(rt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0, rt0, t0 LEFT OUTER JOIN vt1 ON json_remove(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c2 END, ((vt1.c0) NOTNULL)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (highlight(((rt0.c3) ISNULL), ((rt0.c2)IS(NULL)), (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)) ORDER BY 'Infinity'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c3) ISNULL), ((rt0.c2)IS(NULL)), (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 'Infinity'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (highlight(((rt0.c3) ISNULL), ((rt0.c2)IS(NULL)), (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)) ORDER BY 'Infinity'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((highlight(((rt0.c3) ISNULL), ((rt0.c2)IS(NULL)), (rt0.c1 IN ()), rt0.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 'Infinity'  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<(x''))) NOT NULL) RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((((((rt0.c1)AND(t0.c1)))AND(rt0.c1)))) AND ((((rt0.c0)>(t2.c1))))) WHERE (((((rt0.c2)>>(t2.c0))) NOT BETWEEN (((t0.c1)>(t0.c2))) AND (((rt0.c3) BETWEEN (t0.c1) AND (vt0.c0))))) ORDER BY ((t0.c0) IS TRUE) DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(t2.c0))) NOT BETWEEN (((t0.c1)>(t0.c2))) AND (((rt0.c3) BETWEEN (t0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<(x''))) NOT NULL) RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((((((rt0.c1)AND(t0.c1)))AND(rt0.c1)))) AND ((((rt0.c0)>(t2.c1))))) ORDER BY ((t0.c0) IS TRUE) DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<(x''))) NOT NULL) RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((((((rt0.c1)AND(t0.c1)))AND(rt0.c1)))) AND ((((rt0.c0)>(t2.c1))))) WHERE (((((rt0.c2)>>(t2.c0))) NOT BETWEEN (((t0.c1)>(t0.c2))) AND (((rt0.c3) BETWEEN (t0.c1) AND (vt0.c0))))) ORDER BY ((t0.c0) IS TRUE) DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>>(t2.c0))) NOT BETWEEN (((t0.c1)>(t0.c2))) AND (((rt0.c3) BETWEEN (t0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM rt0, vt1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<(x''))) NOT NULL) RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((((((rt0.c1)AND(t0.c1)))AND(rt0.c1)))) AND ((((rt0.c0)>(t2.c1))))) ORDER BY ((t0.c0) IS TRUE) DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM rt0, vt1, t2 LEFT OUTER JOIN t0 ON ((((t0.c0)<(x''))) NOT NULL) RIGHT OUTER JOIN vt0 ON (((NULL)) BETWEEN ((((((rt0.c1)AND(t0.c1)))AND(rt0.c1)))) AND ((((rt0.c0)>(t2.c1))))) WHERE (((((rt0.c2)>>(t2.c0))) NOT BETWEEN (((t0.c1)>(t0.c2))) AND (((rt0.c3) BETWEEN (t0.c1) AND (vt0.c0))))) ORDER BY ((t0.c0) IS TRUE) DESC, (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) IS TRUE)) ORDER BY ((CAST('1242132431' AS BLOB))<(CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('1242132431' AS BLOB))<(CAST(vt0.c0 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) IS TRUE)) ORDER BY ((CAST('1242132431' AS BLOB))<(CAST(vt0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<>(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST('1242132431' AS BLOB))<(CAST(vt0.c0 AS REAL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)!=(vt0.c0))) IS TRUE)) ORDER BY ((CAST('1242132431' AS BLOB))<(CAST(vt0.c0 AS REAL))) DESC;
SELECT ALL * FROM t0, vt1, t2 WHERE (((((((vt1.c0) IS TRUE))AND(NULL)))AND(((vt1.c0)<=(t2.c2))))) ORDER BY ((t0.c1)||(t0.c1)) COLLATE BINARY  NULLS FIRST, ((((t0.c1) NOT BETWEEN (vt1.c0) AND (t2.c0))) BETWEEN ((((t0.c1))=((vt1.c0)))) AND ((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS TRUE))AND(NULL)))AND(((vt1.c0)<=(t2.c2))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY ((t0.c1)||(t0.c1)) COLLATE BINARY  NULLS FIRST, ((((t0.c1) NOT BETWEEN (vt1.c0) AND (t2.c0))) BETWEEN ((((t0.c1))=((vt1.c0)))) AND ((+ (t0.c0)))));
SELECT ALL * FROM t0, vt1, t2 WHERE (((((((vt1.c0) IS TRUE))AND(NULL)))AND(((vt1.c0)<=(t2.c2))))) ORDER BY ((t0.c1)||(t0.c1)) COLLATE BINARY  NULLS FIRST, ((((t0.c1) NOT BETWEEN (vt1.c0) AND (t2.c0))) BETWEEN ((((t0.c1))=((vt1.c0)))) AND ((+ (t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0) IS TRUE))AND(NULL)))AND(((vt1.c0)<=(t2.c2))))) IS TRUE)  as count FROM t0, vt1, t2 ORDER BY ((t0.c1)||(t0.c1)) COLLATE BINARY  NULLS FIRST, ((((t0.c1) NOT BETWEEN (vt1.c0) AND (t2.c0))) BETWEEN ((((t0.c1))=((vt1.c0)))) AND ((+ (t0.c0)))));
SELECT ALL * FROM t0, vt1, t2 WHERE (((((((vt1.c0) IS TRUE))AND(NULL)))AND(((vt1.c0)<=(t2.c2))))) ORDER BY ((t0.c1)||(t0.c1)) COLLATE BINARY  NULLS FIRST, ((((t0.c1) NOT BETWEEN (vt1.c0) AND (t2.c0))) BETWEEN ((((t0.c1))=((vt1.c0)))) AND ((+ (t0.c0))));
SELECT * FROM t0, rt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CAST(NULL AS INTEGER));
SELECT COUNT(*) FROM t2 WHERE ((CAST(x'' AS BLOB) IN ())) ORDER BY ((t2.c1)LIKE(((t2.c2)<<(t2.c1)))) ASC  NULLS LAST, t2.c1, LIKELIHOOD(DISTINCT '-C', 0.4256272035201335) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS BLOB) IN ())) IS TRUE)  as count FROM t2 ORDER BY ((t2.c1)LIKE(((t2.c2)<<(t2.c1)))) ASC  NULLS LAST, t2.c1, LIKELIHOOD(DISTINCT '-C', 0.4256272035201335) ASC);
SELECT COUNT(*) FROM t2 WHERE ((CAST(x'' AS BLOB) IN ())) ORDER BY ((t2.c1)LIKE(((t2.c2)<<(t2.c1)))) ASC  NULLS LAST, t2.c1, LIKELIHOOD(DISTINCT '-C', 0.4256272035201335) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(x'' AS BLOB) IN ())) IS TRUE)  as count FROM t2 ORDER BY ((t2.c1)LIKE(((t2.c2)<<(t2.c1)))) ASC  NULLS LAST, t2.c1, LIKELIHOOD(DISTINCT '-C', 0.4256272035201335) ASC);
SELECT COUNT(*) FROM t2 WHERE ((CAST(x'' AS BLOB) IN ())) ORDER BY ((t2.c1)LIKE(((t2.c2)<<(t2.c1)))) ASC  NULLS LAST, t2.c1, LIKELIHOOD(DISTINCT '-C', 0.4256272035201335) ASC;
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt1.c0)))) ORDER BY CASE NULL  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) ELSE LIKELIHOOD(vt0.c0, 0.9304788252741575) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE NULL  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) ELSE LIKELIHOOD(vt0.c0, 0.9304788252741575) END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt1.c0)))) ORDER BY CASE NULL  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) ELSE LIKELIHOOD(vt0.c0, 0.9304788252741575) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt1.c0)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE NULL  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) ELSE LIKELIHOOD(vt0.c0, 0.9304788252741575) END  NULLS FIRST);
SELECT * FROM vt1, vt0 WHERE ((((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND ((vt1.c0)))) ORDER BY CASE NULL  WHEN ((vt0.c0) NOT NULL) THEN CAST(vt0.c0 AS REAL) ELSE LIKELIHOOD(vt0.c0, 0.9304788252741575) END  NULLS FIRST;
SELECT * FROM t2, rt0, vt0, t0, vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM t2, rt0, vt0, t0, vt1);
SELECT * FROM t2, rt0, vt0, t0, vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((vt1.c0 IN ())))) IS TRUE)  as count FROM t2, rt0, vt0, t0, vt1);
SELECT * FROM t2, rt0, vt0, t0, vt1 WHERE ((~ ((vt1.c0 IN ()))));
SELECT * FROM rt0, vt1, t0 WHERE (((vt1.c0 IN (t0.c1, x'1084')) IN (((t0.c2) IS FALSE)))) ORDER BY ((((~ (t0.c1)), (NULL IN ()), CAST(vt1.c0 AS REAL)))=((((rt0.c2)||(NULL)), (rt0.c1 IN ()), TRIM(t0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (t0.c1, x'1084')) IN (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((~ (t0.c1)), (NULL IN ()), CAST(vt1.c0 AS REAL)))==((((rt0.c2)||(NULL)), (rt0.c1 IN ()), TRIM(t0.c0, vt1.c0)))));
SELECT * FROM rt0, vt1, t0 WHERE (((vt1.c0 IN (t0.c1, x'1084')) IN (((t0.c2) IS FALSE)))) ORDER BY ((((~ (t0.c1)), (NULL IN ()), CAST(vt1.c0 AS REAL)))=((((rt0.c2)||(NULL)), (rt0.c1 IN ()), TRIM(t0.c0, vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 IN (t0.c1, x'1084')) IN (((t0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0, vt1, t0 ORDER BY ((((~ (t0.c1)), (NULL IN ()), CAST(vt1.c0 AS REAL)))==((((rt0.c2)||(NULL)), (rt0.c1 IN ()), TRIM(t0.c0, vt1.c0)))));
SELECT * FROM rt0, vt1, t0 WHERE (((vt1.c0 IN (t0.c1, x'1084')) IN (((t0.c2) IS FALSE)))) ORDER BY ((((~ (t0.c1)), (NULL IN ()), CAST(vt1.c0 AS REAL)))=((((rt0.c2)||(NULL)), (rt0.c1 IN ()), TRIM(t0.c0, vt1.c0))));
SELECT * FROM t2, vt1, rt0 WHERE ((((vt1.c0)>>(t2.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>>(t2.c2)) IN ())) IS TRUE)  as count FROM t2, vt1, rt0);
SELECT * FROM t2, vt1, rt0 WHERE ((((vt1.c0)>>(t2.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)>>(t2.c2)) IN ())) IS TRUE)  as count FROM t2, vt1, rt0);
SELECT * FROM t2, vt1, rt0 WHERE ((((vt1.c0)>>(t2.c2)) IN ()));
SELECT COUNT(*) FROM t2, t0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN t0.c1 WHEN t2.c2 THEN 2.037344433E9 WHEN t0.c0 THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c1 THEN t0.c1 WHEN t2.c2 THEN 2.037344433E9 WHEN t0.c0 THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM t2, t0, rt0);
SELECT COUNT(*) FROM t2, t0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN t0.c1 WHEN t2.c2 THEN 2.037344433E9 WHEN t0.c0 THEN rt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN rt0.c1 THEN t0.c1 WHEN t2.c2 THEN 2.037344433E9 WHEN t0.c0 THEN rt0.c0 END) IS FALSE)) IS TRUE)  as count FROM t2, t0, rt0);
SELECT COUNT(*) FROM t2, t0, rt0 WHERE (((CASE rt0.c3  WHEN rt0.c1 THEN t0.c1 WHEN t2.c2 THEN 2.037344433E9 WHEN t0.c0 THEN rt0.c0 END) IS FALSE));
SELECT * FROM t0, rt0, vt1, t2 WHERE ((((x''))<=((CAST(NULL AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((x''))<=((CAST(NULL AS REAL))))) IS TRUE)  as count FROM t0, rt0, vt1, t2);
SELECT * FROM t0, rt0, vt1, t2 WHERE ((((x''))<=((CAST(NULL AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((x''))<=((CAST(NULL AS REAL))))) IS TRUE)  as count FROM t0, rt0, vt1, t2);
SELECT * FROM t0, rt0, vt1, t2 WHERE ((((x''))<=((CAST(NULL AS REAL)))));
SELECT COUNT(*) FROM vt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ((vt0.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ((vt0.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((SQLITE_COMPILEOPTION_USED(vt0.c0) IN ((vt0.c0 IN (vt0.c0)))));
SELECT * FROM t2, vt0 WHERE (((((t2.c2)OR(t2.c2))) IS FALSE)) ORDER BY json_array_length((((t2.c0))<((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t2.c2)OR(t2.c2))) IS FALSE)) IS TRUE)  as count FROM t2, vt0 ORDER BY json_array_length((((t2.c0))<((vt0.c0)))) ASC);
SELECT * FROM t2, vt0 WHERE (((((t2.c2)OR(t2.c2))) IS FALSE)) ORDER BY json_array_length((((t2.c0))<((vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((t2.c2)OR(t2.c2))) IS FALSE)) IS TRUE)  as count FROM t2, vt0 ORDER BY json_array_length((((t2.c0))<((vt0.c0)))) ASC);
SELECT * FROM t2, vt0 WHERE (((((t2.c2)OR(t2.c2))) IS FALSE)) ORDER BY json_array_length((((t2.c0))<((vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((x'', ((((t0.c1)AND(t0.c0)))AND(vt0.c0)), ((rt0.c2) BETWEEN (t0.c0) AND (-8.99930982E8)), CAST(rt0.c1 AS BLOB), ((rt0.c0) IS FALSE), rt0.c1, (t0.c1 IN ())))=((((t0.c0)+(rt0.c3)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), t0.c2, ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)), CAST(rt0.c3 AS TEXT), t0.c2 COLLATE BINARY, ((rt0.c3) NOT BETWEEN (t0.c2) AND (rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2)) BETWEEN ((+ (-2136295009))) AND (0.9293498471268148)) WHERE (((((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 END)AND(rt0.c2)))AND((+ (t0.c1))))) ORDER BY ((t0.c2 COLLATE BINARY)IS NOT(((rt0.c1) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 END)AND(rt0.c2)))AND((+ (t0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((x'', ((((t0.c1)AND(t0.c0)))AND(vt0.c0)), ((rt0.c2) BETWEEN (t0.c0) AND (-8.99930982E8)), CAST(rt0.c1 AS BLOB), ((rt0.c0) IS FALSE), rt0.c1, (t0.c1 IN ())))==((((t0.c0)+(rt0.c3)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), t0.c2, ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)), CAST(rt0.c3 AS TEXT), t0.c2 COLLATE BINARY, ((rt0.c3) NOT BETWEEN (t0.c2) AND (rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2)) BETWEEN ((+ (-2136295009))) AND (0.9293498471268148)) ORDER BY ((t0.c2 COLLATE BINARY)IS NOT(((rt0.c1) ISNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((x'', ((((t0.c1)AND(t0.c0)))AND(vt0.c0)), ((rt0.c2) BETWEEN (t0.c0) AND (-8.99930982E8)), CAST(rt0.c1 AS BLOB), ((rt0.c0) IS FALSE), rt0.c1, (t0.c1 IN ())))=((((t0.c0)+(rt0.c3)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), t0.c2, ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)), CAST(rt0.c3 AS TEXT), t0.c2 COLLATE BINARY, ((rt0.c3) NOT BETWEEN (t0.c2) AND (rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2)) BETWEEN ((+ (-2136295009))) AND (0.9293498471268148)) WHERE (((((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 END)AND(rt0.c2)))AND((+ (t0.c1))))) ORDER BY ((t0.c2 COLLATE BINARY)IS NOT(((rt0.c1) ISNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t0.c0  WHEN t0.c1 THEN vt0.c0 END)AND(rt0.c2)))AND((+ (t0.c1))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN vt0 ON ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE NOCASE LEFT OUTER JOIN t0 ON (((x'', ((((t0.c1)AND(t0.c0)))AND(vt0.c0)), ((rt0.c2) BETWEEN (t0.c0) AND (-8.99930982E8)), CAST(rt0.c1 AS BLOB), ((rt0.c0) IS FALSE), rt0.c1, (t0.c1 IN ())))==((((t0.c0)+(rt0.c3)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)), t0.c2, ((rt0.c1) BETWEEN (t0.c2) AND (rt0.c1)), CAST(rt0.c3 AS TEXT), t0.c2 COLLATE BINARY, ((rt0.c3) NOT BETWEEN (t0.c2) AND (rt0.c2))))) RIGHT OUTER JOIN rt0 ON ((UNLIKELY(DISTINCT rt0.c2)) BETWEEN ((+ (-2136295009))) AND (0.9293498471268148)) ORDER BY ((t0.c2 COLLATE BINARY)IS NOT(((rt0.c1) ISNULL))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt1.c0)) COLLATE NOCASE WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) BETWEEN (x'') AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) BETWEEN (x'') AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt1.c0)) COLLATE NOCASE WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) BETWEEN (x'') AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) BETWEEN (x'') AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt1.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt1.c0)||(vt1.c0)) COLLATE NOCASE WHERE (((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) BETWEEN (x'') AND ((vt1.c0 IN ()))));
SELECT ALL * FROM rt0, vt1, t2, vt0, t0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t2, vt0, t0);
SELECT ALL * FROM rt0, vt1, t2, vt0, t0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))) IS FALSE)) IS TRUE)  as count FROM rt0, vt1, t2, vt0, t0);
SELECT ALL * FROM rt0, vt1, t2, vt0, t0 WHERE ((((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0)))) IS FALSE));
SELECT ALL * FROM vt1, vt0, t2, t0 WHERE (NULL) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t2, t0 ORDER BY t0.c0);
SELECT ALL * FROM vt1, vt0, t2, t0 WHERE (NULL) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1, vt0, t2, t0 ORDER BY t0.c0);
SELECT ALL * FROM vt1, vt0, t2, t0 WHERE (NULL) ORDER BY t0.c0;
SELECT * FROM t0, vt0 WHERE ((~ (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (t0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((~ (t0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((~ (t0.c1)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt1, t0, vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (x'') AND (rt0.c3)))/((t0.c1 IN ())))) ORDER BY ((LIKELY(DISTINCT t2.c2))<>(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 WHEN vt1.c0 THEN t2.c0 ELSE t2.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (x'') AND (rt0.c3)))/((t0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, t0, vt0, t2 ORDER BY ((LIKELY(DISTINCT t2.c2))!=(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 WHEN vt1.c0 THEN t2.c0 ELSE t2.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0, vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (x'') AND (rt0.c3)))/((t0.c1 IN ())))) ORDER BY ((LIKELY(DISTINCT t2.c2))<>(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 WHEN vt1.c0 THEN t2.c0 ELSE t2.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c0) NOT BETWEEN (x'') AND (rt0.c3)))/((t0.c1 IN ())))) IS TRUE)  as count FROM rt0, vt1, t0, vt0, t2 ORDER BY ((LIKELY(DISTINCT t2.c2))!=(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 WHEN vt1.c0 THEN t2.c0 ELSE t2.c0 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, t0, vt0, t2 WHERE (((((t2.c0) NOT BETWEEN (x'') AND (rt0.c3)))/((t0.c1 IN ())))) ORDER BY ((LIKELY(DISTINCT t2.c2))<>(CASE WHEN rt0.c0 THEN t0.c2 WHEN t0.c1 THEN rt0.c3 WHEN vt1.c0 THEN t2.c0 ELSE t2.c0 END)) ASC  NULLS FIRST;
SELECT * FROM vt0, vt1, t2 WHERE (((CAST(t2.c1 AS REAL))IS(CASE t2.c0  WHEN t2.c0 THEN t2.c1 ELSE 0.4429626725496424 END))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c1 AS REAL))IS(CASE t2.c0  WHEN t2.c0 THEN t2.c1 ELSE 0.4429626725496424 END))) IS TRUE)  as count FROM vt0, vt1, t2 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, vt1, t2 WHERE (((CAST(t2.c1 AS REAL))IS(CASE t2.c0  WHEN t2.c0 THEN t2.c1 ELSE 0.4429626725496424 END))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(t2.c1 AS REAL))IS(CASE t2.c0  WHEN t2.c0 THEN t2.c1 ELSE 0.4429626725496424 END))) IS TRUE)  as count FROM vt0, vt1, t2 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt0, vt1, t2 WHERE (((CAST(t2.c1 AS REAL))IS(CASE t2.c0  WHEN t2.c0 THEN t2.c1 ELSE 0.4429626725496424 END))) ORDER BY NULL  NULLS LAST;
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB)) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (CAST(CAST(vt1.c0 AS NUMERIC) AS BLOB));
SELECT ALL * FROM t2, vt0 WHERE ((NOT (t2.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t2.c2 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE ((NOT (t2.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (t2.c2 COLLATE BINARY))) IS TRUE)  as count FROM t2, vt0);
SELECT ALL * FROM t2, vt0 WHERE ((NOT (t2.c2 COLLATE BINARY)));
SELECT * FROM t0, vt1, rt0, t2 WHERE ((((t2.c2, rt0.c1, t2.c0)) BETWEEN ((LIKELY(t2.c2), ((((vt1.c0)OR(rt0.c3)))AND(0.9422095690633183)), (t0.c1 IN ()))) AND ((((t2.c2)GLOB(rt0.c1)), ((t2.c1) NOT NULL), ((t2.c2)=(rt0.c2)))))) ORDER BY (+ (((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2, rt0.c1, t2.c0)) BETWEEN ((LIKELY(t2.c2), ((((vt1.c0)OR(rt0.c3)))AND(0.9422095690633183)), (t0.c1 IN ()))) AND ((((t2.c2)GLOB(rt0.c1)), ((t2.c1) NOT NULL), ((t2.c2)=(rt0.c2)))))) IS TRUE)  as count FROM t0, vt1, rt0, t2 ORDER BY (+ (((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST);
SELECT * FROM t0, vt1, rt0, t2 WHERE ((((t2.c2, rt0.c1, t2.c0)) BETWEEN ((LIKELY(t2.c2), ((((vt1.c0)OR(rt0.c3)))AND(0.9422095690633183)), (t0.c1 IN ()))) AND ((((t2.c2)GLOB(rt0.c1)), ((t2.c1) NOT NULL), ((t2.c2)=(rt0.c2)))))) ORDER BY (+ (((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c2, rt0.c1, t2.c0)) BETWEEN ((LIKELY(t2.c2), ((((vt1.c0)OR(rt0.c3)))AND(0.9422095690633183)), (t0.c1 IN ()))) AND ((((t2.c2)GLOB(rt0.c1)), ((t2.c1) NOT NULL), ((t2.c2)=(rt0.c2)))))) IS TRUE)  as count FROM t0, vt1, rt0, t2 ORDER BY (+ (((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST);
SELECT * FROM t0, vt1, rt0, t2 WHERE ((((t2.c2, rt0.c1, t2.c0)) BETWEEN ((LIKELY(t2.c2), ((((vt1.c0)OR(rt0.c3)))AND(0.9422095690633183)), (t0.c1 IN ()))) AND ((((t2.c2)GLOB(rt0.c1)), ((t2.c1) NOT NULL), ((t2.c2)=(rt0.c2)))))) ORDER BY (+ (((vt1.c0) NOT BETWEEN (t0.c2) AND (t0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON (((- (vt1.c0))) IS TRUE) WHERE (((STRFTIME(vt1.c0, rt0.c3, vt0.c0))GLOB((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt1.c0, rt0.c3, vt0.c0))GLOB((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((- (vt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON (((- (vt1.c0))) IS TRUE) WHERE (((STRFTIME(vt1.c0, rt0.c3, vt0.c0))GLOB((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(vt1.c0, rt0.c3, vt0.c0))GLOB((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))))) IS TRUE)  as count FROM vt1, rt0 CROSS JOIN vt0 ON (((- (vt1.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt0 CROSS JOIN vt0 ON (((- (vt1.c0))) IS TRUE) WHERE (((STRFTIME(vt1.c0, rt0.c3, vt0.c0))GLOB((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c1))))));
SELECT * FROM vt0 NATURAL JOIN t2 WHERE ((((t2.c1)) BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((((((((((t2.c1)AND(vt0.c0)))OR(t2.c1)))AND(t2.c1)))AND(t2.c0)))))) ORDER BY ((CAST(t2.c1 AS INTEGER)) BETWEEN (CASE WHEN t2.c1 THEN x'37ea' END) AND ((NOT (vt0.c0)))) DESC, (((t2.c2 IN (vt0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c1 THEN t2.c0 END) AND (t2.c2 COLLATE RTRIM)) DESC, ((((t2.c1 IN ()), ((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c2)), CAST(t2.c2 AS TEXT)))<>(((((t2.c0))==((t2.c1))), (((vt0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))), (((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c1)) BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((((((((((t2.c1)AND(vt0.c0)))OR(t2.c1)))AND(t2.c1)))AND(t2.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t2 ORDER BY ((CAST(t2.c1 AS INTEGER)) BETWEEN (CASE WHEN t2.c1 THEN x'37ea' END) AND ((NOT (vt0.c0)))) DESC, (((t2.c2 IN (vt0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c1 THEN t2.c0 END) AND (t2.c2 COLLATE RTRIM)) DESC, ((((t2.c1 IN ()), ((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c2)), CAST(t2.c2 AS TEXT)))<>(((((t2.c0))=((t2.c1))), (((vt0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))), (((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t2 WHERE ((((t2.c1)) BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((((((((((t2.c1)AND(vt0.c0)))OR(t2.c1)))AND(t2.c1)))AND(t2.c0)))))) ORDER BY ((CAST(t2.c1 AS INTEGER)) BETWEEN (CASE WHEN t2.c1 THEN x'37ea' END) AND ((NOT (vt0.c0)))) DESC, (((t2.c2 IN (vt0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c1 THEN t2.c0 END) AND (t2.c2 COLLATE RTRIM)) DESC, ((((t2.c1 IN ()), ((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c2)), CAST(t2.c2 AS TEXT)))<>(((((t2.c0))==((t2.c1))), (((vt0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))), (((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t2.c1)) BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((((((((((t2.c1)AND(vt0.c0)))OR(t2.c1)))AND(t2.c1)))AND(t2.c0)))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t2 ORDER BY ((CAST(t2.c1 AS INTEGER)) BETWEEN (CASE WHEN t2.c1 THEN x'37ea' END) AND ((NOT (vt0.c0)))) DESC, (((t2.c2 IN (vt0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c1 THEN t2.c0 END) AND (t2.c2 COLLATE RTRIM)) DESC, ((((t2.c1 IN ()), ((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c2)), CAST(t2.c2 AS TEXT)))<>(((((t2.c0))=((t2.c1))), (((vt0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))), (((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN t2 WHERE ((((t2.c1)) BETWEEN ((CAST(t2.c0 AS NUMERIC))) AND ((((((((((t2.c1)AND(vt0.c0)))OR(t2.c1)))AND(t2.c1)))AND(t2.c0)))))) ORDER BY ((CAST(t2.c1 AS INTEGER)) BETWEEN (CASE WHEN t2.c1 THEN x'37ea' END) AND ((NOT (vt0.c0)))) DESC, (((t2.c2 IN (vt0.c0))) BETWEEN (CASE t2.c1  WHEN t2.c1 THEN t2.c0 END) AND (t2.c2 COLLATE RTRIM)) DESC, ((((t2.c1 IN ()), ((t2.c1) NOT BETWEEN (t2.c2) AND (t2.c2)), CAST(t2.c2 AS TEXT)))<>(((((t2.c0))==((t2.c1))), (((vt0.c0)) BETWEEN ((t2.c0)) AND ((t2.c0))), (((vt0.c0)) NOT BETWEEN ((t2.c0)) AND ((t2.c2))))))  NULLS LAST;
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON ((json(rt0.c1))<<(t0.c0 COLLATE NOCASE)) WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (t0.c0) AND (vt1.c0))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c1))) AND (TRIM(rt0.c2, t0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (t0.c0) AND (vt1.c0))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((json(rt0.c1))<<(t0.c0 COLLATE NOCASE)) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c1))) AND (TRIM(rt0.c2, t0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON ((json(rt0.c1))<<(t0.c0 COLLATE NOCASE)) WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (t0.c0) AND (vt1.c0))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c1))) AND (TRIM(rt0.c2, t0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS NUMERIC)) BETWEEN (t0.c0) AND (vt1.c0))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt0 ON ((json(rt0.c1))<<(t0.c0 COLLATE NOCASE)) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c1))) AND (TRIM(rt0.c2, t0.c1))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt0 ON ((json(rt0.c1))<<(t0.c0 COLLATE NOCASE)) WHERE (((CAST(rt0.c1 AS NUMERIC)) BETWEEN (t0.c0) AND (vt1.c0))) ORDER BY ((CAST(t0.c0 AS REAL)) BETWEEN ((+ (rt0.c1))) AND (TRIM(rt0.c2, t0.c1))) DESC  NULLS FIRST;
SELECT * FROM t0, vt1 INNER JOIN vt0 ON CASE rt0.c3  WHEN ((((((((NULL)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c3)) THEN CAST(t0.c2 AS NUMERIC) END CROSS JOIN rt0 ON -2109060970 WHERE (((((((-1.757463857E9)AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((rt0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND ((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((-1.757463857E9)AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON CASE rt0.c3  WHEN ((((((((NULL)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c3)) THEN CAST(t0.c2 AS NUMERIC) END CROSS JOIN rt0 ON -2109060970 ORDER BY (((rt0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND ((NULL))) DESC);
SELECT * FROM t0, vt1 INNER JOIN vt0 ON CASE rt0.c3  WHEN ((((((((NULL)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c3)) THEN CAST(t0.c2 AS NUMERIC) END CROSS JOIN rt0 ON -2109060970 WHERE (((((((-1.757463857E9)AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((rt0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND ((NULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((-1.757463857E9)AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1 INNER JOIN vt0 ON CASE rt0.c3  WHEN ((((((((NULL)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c3)) THEN CAST(t0.c2 AS NUMERIC) END CROSS JOIN rt0 ON -2109060970 ORDER BY (((rt0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND ((NULL))) DESC);
SELECT * FROM t0, vt1 INNER JOIN vt0 ON CASE rt0.c3  WHEN ((((((((NULL)AND(rt0.c1)))OR(t0.c0)))AND(rt0.c0)))OR(rt0.c3)) THEN CAST(t0.c2 AS NUMERIC) END CROSS JOIN rt0 ON -2109060970 WHERE (((((((-1.757463857E9)AND(vt1.c0)))AND(vt1.c0))) NOTNULL)) ORDER BY (((rt0.c1)) NOT BETWEEN (((t0.c0 IN ()))) AND ((NULL))) DESC;
SELECT ALL * FROM t2 WHERE (t2.c0 COLLATE NOCASE) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0 COLLATE NOCASE) IS TRUE)  as count FROM t2 ORDER BY NULL DESC);
SELECT ALL * FROM t2 WHERE (t2.c0 COLLATE NOCASE) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((t2.c0 COLLATE NOCASE) IS TRUE)  as count FROM t2 ORDER BY NULL DESC);
SELECT ALL * FROM t2 WHERE (t2.c0 COLLATE NOCASE) ORDER BY NULL DESC;
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1, rt0, t0);
SELECT COUNT(*) FROM vt1, rt0, t0 WHERE ((CAST(rt0.c0 AS INTEGER) IN ()));
SELECT ALL COUNT(*) FROM t2, vt0, vt1, t0, rt0 WHERE ((((t0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM t2, vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM t2, vt0, vt1, t0, rt0 WHERE ((((t0.c1 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) IS FALSE)) IS TRUE)  as count FROM t2, vt0, vt1, t0, rt0);
SELECT ALL COUNT(*) FROM t2, vt0, vt1, t0, rt0 WHERE ((((t0.c1 IN ())) IS FALSE));
SELECT COUNT(*) FROM t2 WHERE (((t2.c2 COLLATE BINARY)LIKE(((((t2.c1)OR(t2.c2)))OR(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2 COLLATE BINARY)LIKE(((((t2.c1)OR(t2.c2)))OR(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((t2.c2 COLLATE BINARY)LIKE(((((t2.c1)OR(t2.c2)))OR(t2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2 COLLATE BINARY)LIKE(((((t2.c1)OR(t2.c2)))OR(t2.c0))))) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (((t2.c2 COLLATE BINARY)LIKE(((((t2.c1)OR(t2.c2)))OR(t2.c0)))));
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c1) NOT NULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((t2.c1) NOT NULL)) IS FALSE)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (((((t2.c1) NOT NULL)) IS FALSE));
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN x'a338' END))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (NULL) AND ((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN x'a338' END))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (NULL) AND ((rt0.c1 IN ()))) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN x'a338' END))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (NULL) AND ((rt0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c1 THEN x'a338' END))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (NULL) AND ((rt0.c1 IN ()))) ASC);
SELECT ALL * FROM rt0 WHERE ((+ (CASE WHEN rt0.c1 THEN x'a338' END))) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c3 END) NOT BETWEEN (NULL) AND ((rt0.c1 IN ()))) ASC;
SELECT * FROM vt1, t0 WHERE ('1213719107');
SELECT SUM(count) FROM (SELECT (('1213719107') IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ('1213719107');
SELECT SUM(count) FROM (SELECT (('1213719107') IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE ('1213719107');
SELECT * FROM t2, t0, vt0, rt0, vt1 WHERE (((((((NULL)AND(t2.c2)))AND(t0.c0))) BETWEEN (((vt0.c0)-(t2.c0))) AND (((0x7ade662a)IS(rt0.c2))))) ORDER BY ((x'')<=(((t0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(t2.c2)))AND(t0.c0))) BETWEEN (((vt0.c0)-(t2.c0))) AND (((0X7ade662a)IS(rt0.c2))))) IS TRUE)  as count FROM t2, t0, vt0, rt0, vt1 ORDER BY ((x'')<=(((t0.c1) IS TRUE))) ASC);
SELECT * FROM t2, t0, vt0, rt0, vt1 WHERE (((((((NULL)AND(t2.c2)))AND(t0.c0))) BETWEEN (((vt0.c0)-(t2.c0))) AND (((0x7ade662a)IS(rt0.c2))))) ORDER BY ((x'')<=(((t0.c1) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((NULL)AND(t2.c2)))AND(t0.c0))) BETWEEN (((vt0.c0)-(t2.c0))) AND (((0X7ade662a)IS(rt0.c2))))) IS TRUE)  as count FROM t2, t0, vt0, rt0, vt1 ORDER BY ((x'')<=(((t0.c1) IS TRUE))) ASC);
SELECT * FROM t2, t0, vt0, rt0, vt1 WHERE (((((((NULL)AND(t2.c2)))AND(t0.c0))) BETWEEN (((vt0.c0)-(t2.c0))) AND (((0x7ade662a)IS(rt0.c2))))) ORDER BY ((x'')<=(((t0.c1) IS TRUE))) ASC;
SELECT ALL * FROM t0 WHERE ((((((0.8672159362490298)AND(t0.c2)))AND(t0.c1)) IN ())) ORDER BY ((((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN '-1742594037' WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)AND(((((t0.c2)OR(t0.c2)))OR(t0.c2)))))OR(((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.8672159362490298)AND(t0.c2)))AND(t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN '-1742594037' WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)AND(((((t0.c2)OR(t0.c2)))OR(t0.c2)))))OR(((t0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((0.8672159362490298)AND(t0.c2)))AND(t0.c1)) IN ())) ORDER BY ((((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN '-1742594037' WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)AND(((((t0.c2)OR(t0.c2)))OR(t0.c2)))))OR(((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((0.8672159362490298)AND(t0.c2)))AND(t0.c1)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN '-1742594037' WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)AND(((((t0.c2)OR(t0.c2)))OR(t0.c2)))))OR(((t0.c0) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((((((0.8672159362490298)AND(t0.c2)))AND(t0.c1)) IN ())) ORDER BY ((((CASE t0.c2  WHEN t0.c0 THEN t0.c0 WHEN x'' THEN t0.c2 WHEN t0.c0 THEN '-1742594037' WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c0 END)AND(((((t0.c2)OR(t0.c2)))OR(t0.c2)))))OR(((t0.c0) IS FALSE)))  NULLS FIRST;
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY ((CAST(t0.c2 AS NUMERIC))<<(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY ((CAST(t0.c2 AS NUMERIC))<<(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY ((CAST(t0.c2 AS NUMERIC))<<(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt1.c0 AS INTEGER) IN ())) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) ORDER BY ((CAST(t0.c2 AS NUMERIC))<<(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))) ASC);
SELECT * FROM vt1 RIGHT OUTER JOIN t0 ON (((~ (t0.c1)))/(((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c0)))) WHERE ((CAST(vt1.c0 AS INTEGER) IN ())) ORDER BY ((CAST(t0.c2 AS NUMERIC))<<(((t0.c2) NOT BETWEEN (NULL) AND (t0.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ((((((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))))<=((rt0.c2)))) ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (((vt1.c0))!=((vt0.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c3)!=(t0.c1)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))))<=((rt0.c2)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (((vt1.c0))!=((vt0.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c3)<>(t0.c1)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ((((((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))))<=((rt0.c2)))) ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (((vt1.c0))!=((vt0.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c3)!=(t0.c1)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))))<=((rt0.c2)))) IS TRUE)  as count FROM vt1, vt0, rt0, t0 ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (((vt1.c0))!=((vt0.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c3)<>(t0.c1)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0, t0 WHERE ((((((rt0.c1) BETWEEN (t0.c1) AND (rt0.c2))))<=((rt0.c2)))) ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c1)))OR(rt0.c1)) THEN (((vt1.c0))!=((vt0.c0))) WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt0.c0 AS INTEGER) WHEN ((rt0.c3)!=(t0.c1)) THEN x'' COLLATE RTRIM ELSE CASE WHEN rt0.c3 THEN t0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c0 END END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(NULL)))OR(((t0.c0) NOT NULL)))) ORDER BY ((((((rt0.c1)<(rt0.c2)))OR(((t0.c1)>(vt1.c0)))))AND((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(NULL)))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1, vt0, rt0 ORDER BY ((((((rt0.c1)<(rt0.c2)))OR(((t0.c1)>(vt1.c0)))))AND((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(NULL)))OR(((t0.c0) NOT NULL)))) ORDER BY ((((((rt0.c1)<(rt0.c2)))OR(((t0.c1)>(vt1.c0)))))AND((NOT (rt0.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(NULL)))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 NOT INDEXED, vt1, vt0, rt0 ORDER BY ((((((rt0.c1)<(rt0.c2)))OR(((t0.c1)>(vt1.c0)))))AND((NOT (rt0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (((((((((rt0.c1)OR(t0.c0)))AND(rt0.c2)))AND(NULL)))OR(((t0.c0) NOT NULL)))) ORDER BY ((((((rt0.c1)<(rt0.c2)))OR(((t0.c1)>(vt1.c0)))))AND((NOT (rt0.c2))));
SELECT * FROM t2, vt1, t0, rt0, vt0 WHERE (rt0.c0) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t2, vt1, t0, rt0, vt0 ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t2, vt1, t0, rt0, vt0 WHERE (rt0.c0) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t2, vt1, t0, rt0, vt0 ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS FIRST);
SELECT * FROM t2, vt1, t0, rt0, vt0 WHERE (rt0.c0) ORDER BY (NOT ((t0.c0 IN ()))) DESC  NULLS FIRST;
SELECT * FROM t0, t2 WHERE (((((((t2.c0) BETWEEN (t0.c0) AND (t2.c1)))OR((((t2.c0, t2.c1, t0.c1))==((t2.c0, t0.c1, t0.c0))))))AND(CAST(t0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0) BETWEEN (t0.c0) AND (t2.c1)))OR((((t2.c0, t2.c1, t0.c1))=((t2.c0, t0.c1, t0.c0))))))AND(CAST(t0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0, t2);
SELECT * FROM t0, t2 WHERE (((((((t2.c0) BETWEEN (t0.c0) AND (t2.c1)))OR((((t2.c0, t2.c1, t0.c1))==((t2.c0, t0.c1, t0.c0))))))AND(CAST(t0.c2 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t2.c0) BETWEEN (t0.c0) AND (t2.c1)))OR((((t2.c0, t2.c1, t0.c1))=((t2.c0, t0.c1, t0.c0))))))AND(CAST(t0.c2 AS NUMERIC)))) IS TRUE)  as count FROM t0, t2);
SELECT * FROM t0, t2 WHERE (((((((t2.c0) BETWEEN (t0.c0) AND (t2.c1)))OR((((t2.c0, t2.c1, t0.c1))==((t2.c0, t0.c1, t0.c0))))))AND(CAST(t0.c2 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1, t2 WHERE (CAST(rt0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1, t2 WHERE (CAST(rt0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, rt0, vt1, t2);
SELECT ALL COUNT(*) FROM t0, vt0, rt0, vt1, t2 WHERE (CAST(rt0.c1 AS BLOB) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(UNICODE(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(UNICODE(vt0.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(vt0.c0) AS BLOB)) IS TRUE)  as count FROM vt1, vt0);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (CAST(UNICODE(vt0.c0) AS BLOB));
SELECT ALL * FROM rt0, vt1, vt0, t2 INNER JOIN t0 ON ((TRIM(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c1))) AND (((((t0.c2)OR(t0.c2)))OR(0.6304387227211571)))) WHERE (CASE WHEN ((t2.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN (rt0.c1 IN ()) ELSE ((t0.c2)>(vt0.c0)) END) ORDER BY CAST(((rt0.c3) IS FALSE) AS REAL) ASC, (((t2.c2) NOT BETWEEN (t0.c2) AND (t2.c1)) IN (t2.c0, ((vt0.c0)=(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN (rt0.c1 IN ()) ELSE ((t0.c2)>(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt1, vt0, t2 INNER JOIN t0 ON ((TRIM(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c1))) AND (((((t0.c2)OR(t0.c2)))OR(0.6304387227211571)))) ORDER BY CAST(((rt0.c3) IS FALSE) AS REAL) ASC, (((t2.c2) NOT BETWEEN (t0.c2) AND (t2.c1)) IN (t2.c0, ((vt0.c0)=(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0, t2 INNER JOIN t0 ON ((TRIM(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c1))) AND (((((t0.c2)OR(t0.c2)))OR(0.6304387227211571)))) WHERE (CASE WHEN ((t2.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN (rt0.c1 IN ()) ELSE ((t0.c2)>(vt0.c0)) END) ORDER BY CAST(((rt0.c3) IS FALSE) AS REAL) ASC, (((t2.c2) NOT BETWEEN (t0.c2) AND (t2.c1)) IN (t2.c0, ((vt0.c0)=(t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t2.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN (rt0.c1 IN ()) ELSE ((t0.c2)>(vt0.c0)) END) IS TRUE)  as count FROM rt0, vt1, vt0, t2 INNER JOIN t0 ON ((TRIM(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c1))) AND (((((t0.c2)OR(t0.c2)))OR(0.6304387227211571)))) ORDER BY CAST(((rt0.c3) IS FALSE) AS REAL) ASC, (((t2.c2) NOT BETWEEN (t0.c2) AND (t2.c1)) IN (t2.c0, ((vt0.c0)=(t0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt1, vt0, t2 INNER JOIN t0 ON ((TRIM(rt0.c2)) NOT BETWEEN (((rt0.c2) BETWEEN (t0.c1) AND (rt0.c1))) AND (((((t0.c2)OR(t0.c2)))OR(0.6304387227211571)))) WHERE (CASE WHEN ((t2.c1) BETWEEN (t0.c1) AND (t0.c0)) THEN (rt0.c1 IN ()) ELSE ((t0.c2)>(vt0.c0)) END) ORDER BY CAST(((rt0.c3) IS FALSE) AS REAL) ASC, (((t2.c2) NOT BETWEEN (t0.c2) AND (t2.c1)) IN (t2.c0, ((vt0.c0)=(t0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c1);
SELECT * FROM t2, vt0, t0 LEFT OUTER JOIN vt1 ON (NOT (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((+ (t2.c0)))==((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) WHERE (((t0.c2) BETWEEN (CASE WHEN t0.c2 THEN t2.c1 WHEN t2.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 ELSE vt1.c0 END) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (CASE WHEN t0.c2 THEN t2.c1 WHEN t2.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 ELSE vt1.c0 END) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t2, vt0, t0 LEFT OUTER JOIN vt1 ON (NOT (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((+ (t2.c0)))==((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT * FROM t2, vt0, t0 LEFT OUTER JOIN vt1 ON (NOT (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((+ (t2.c0)))==((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))) WHERE (((t0.c2) BETWEEN (CASE WHEN t0.c2 THEN t2.c1 WHEN t2.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 ELSE vt1.c0 END) AND (rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2) BETWEEN (CASE WHEN t0.c2 THEN t2.c1 WHEN t2.c1 THEN t0.c2 WHEN t2.c0 THEN t2.c0 ELSE vt1.c0 END) AND (rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM t2, vt0, t0 LEFT OUTER JOIN vt1 ON (NOT (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) LEFT OUTER JOIN rt0 ON (((+ (t2.c0)))==((((t0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))));
SELECT ALL * FROM t2, t0, vt0, rt0 WHERE ((('')>=(CAST(t2.c0 AS BLOB)))) ORDER BY (((((rt0.c3) NOTNULL), ((t0.c2)GLOB(rt0.c2)), (vt0.c0 IN ())))<=((((rt0.c2) BETWEEN (t2.c2) AND (rt0.c3)), ((vt0.c0)<>(vt0.c0)), ((((((((rt0.c3)AND(t2.c0)))AND(t0.c2)))OR(rt0.c0)))OR(NULL))))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((rt0.c0)<(rt0.c3)))) ASC, ((((rt0.c3)>=(t0.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN x'8d48' WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN x'' ELSE t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('')>=(CAST(t2.c0 AS BLOB)))) IS TRUE)  as count FROM t2, t0, vt0, rt0 ORDER BY (((((rt0.c3) NOTNULL), ((t0.c2)GLOB(rt0.c2)), (vt0.c0 IN ())))<=((((rt0.c2) BETWEEN (t2.c2) AND (rt0.c3)), ((vt0.c0)!=(vt0.c0)), ((((((((rt0.c3)AND(t2.c0)))AND(t0.c2)))OR(rt0.c0)))OR(NULL))))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((rt0.c0)<(rt0.c3)))) ASC, ((((rt0.c3)>=(t0.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN x'8d48' WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN x'' ELSE t0.c1 END)) DESC);
SELECT ALL * FROM t2, t0, vt0, rt0 WHERE ((('')>=(CAST(t2.c0 AS BLOB)))) ORDER BY (((((rt0.c3) NOTNULL), ((t0.c2)GLOB(rt0.c2)), (vt0.c0 IN ())))<=((((rt0.c2) BETWEEN (t2.c2) AND (rt0.c3)), ((vt0.c0)<>(vt0.c0)), ((((((((rt0.c3)AND(t2.c0)))AND(t0.c2)))OR(rt0.c0)))OR(NULL))))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((rt0.c0)<(rt0.c3)))) ASC, ((((rt0.c3)>=(t0.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN x'8d48' WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN x'' ELSE t0.c1 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((('')>=(CAST(t2.c0 AS BLOB)))) IS TRUE)  as count FROM t2, t0, vt0, rt0 ORDER BY (((((rt0.c3) NOTNULL), ((t0.c2)GLOB(rt0.c2)), (vt0.c0 IN ())))<=((((rt0.c2) BETWEEN (t2.c2) AND (rt0.c3)), ((vt0.c0)!=(vt0.c0)), ((((((((rt0.c3)AND(t2.c0)))AND(t0.c2)))OR(rt0.c0)))OR(NULL))))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((rt0.c0)<(rt0.c3)))) ASC, ((((rt0.c3)>=(t0.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN x'8d48' WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN x'' ELSE t0.c1 END)) DESC);
SELECT ALL * FROM t2, t0, vt0, rt0 WHERE ((('')>=(CAST(t2.c0 AS BLOB)))) ORDER BY (((((rt0.c3) NOTNULL), ((t0.c2)GLOB(rt0.c2)), (vt0.c0 IN ())))<=((((rt0.c2) BETWEEN (t2.c2) AND (rt0.c3)), ((vt0.c0)<>(vt0.c0)), ((((((((rt0.c3)AND(t2.c0)))AND(t0.c2)))OR(rt0.c0)))OR(NULL))))) ASC, (CAST(t0.c2 AS NUMERIC) IN (((rt0.c0)<(rt0.c3)))) ASC, ((((rt0.c3)>=(t0.c0))) NOT BETWEEN ((t2.c0 IN ())) AND (CASE WHEN rt0.c3 THEN rt0.c3 WHEN t0.c2 THEN rt0.c1 WHEN t2.c1 THEN x'8d48' WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN x'' ELSE t0.c1 END)) DESC;
SELECT * FROM vt1, vt0, t0, rt0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0, rt0, t2);
SELECT * FROM vt1, vt0, t0, rt0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, vt0, t0, rt0, t2);
SELECT * FROM vt1, vt0, t0, rt0, t2 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((- ((((((((('')OR(rt0.c3)))AND(t0.c0)))OR(t0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('')OR(rt0.c3)))AND(t0.c0)))OR(t0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((- ((((((((('')OR(rt0.c3)))AND(t0.c0)))OR(t0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((((((('')OR(rt0.c3)))AND(t0.c0)))OR(t0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0);
SELECT COUNT(*) FROM vt0, rt0, t0 WHERE ((- ((((((((('')OR(rt0.c3)))AND(t0.c0)))OR(t0.c1)))AND(vt0.c0)))));
SELECT * FROM t0 WHERE (CAST(((t0.c2) BETWEEN ('0.0') AND (t0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN ('0.0') AND (t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c2) BETWEEN ('0.0') AND (t0.c1)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) BETWEEN ('0.0') AND (t0.c1)) AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c2) BETWEEN ('0.0') AND (t0.c1)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (('D,拞\rQLC')+(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (('D,拞\rQLC')+(x'')) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (('D,拞\rQLC')+(x'')) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (('D,拞\rQLC')+(x'')) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY (('D,拞\rQLC')+(x'')) ASC;
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c2 COLLATE NOCASE)AND((((t0.c0, t0.c0, 0.14747000024697998)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c0, 0.7892188333192643, t0.c1))))))OR(0X72ea97e7))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2 COLLATE NOCASE)AND((((t0.c0, t0.c0, 0.14747000024697998)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c0, 0.7892188333192643, t0.c1))))))OR(0x72ea97e7))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c2 COLLATE NOCASE)AND((((t0.c0, t0.c0, 0.14747000024697998)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c0, 0.7892188333192643, t0.c1))))))OR(0X72ea97e7))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c2 COLLATE NOCASE)AND((((t0.c0, t0.c0, 0.14747000024697998)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c0, 0.7892188333192643, t0.c1))))))OR(0x72ea97e7))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY ((((t0.c2 COLLATE NOCASE)AND((((t0.c0, t0.c0, 0.14747000024697998)) BETWEEN ((t0.c0, t0.c1, t0.c0)) AND ((t0.c0, 0.7892188333192643, t0.c1))))))OR(0X72ea97e7))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t2 WHERE (((((rt0.c3)%(rt0.c1)))||(TOTAL_CHANGES()))) ORDER BY ((CASE WHEN vt0.c0 THEN t2.c1 END)/(((rt0.c3)OR(rt0.c3)))), ((NOT (vt0.c0)) IN ()) ASC, (((- (rt0.c0))) BETWEEN (TRIM(rt0.c0)) AND (((t2.c1)>=(t2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)%(rt0.c1)))||(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, vt0, t2 ORDER BY ((CASE WHEN vt0.c0 THEN t2.c1 END)/(((rt0.c3)OR(rt0.c3)))), ((NOT (vt0.c0)) IN ()) ASC, (((- (rt0.c0))) BETWEEN (TRIM(rt0.c0)) AND (((t2.c1)>=(t2.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t2 WHERE (((((rt0.c3)%(rt0.c1)))||(TOTAL_CHANGES()))) ORDER BY ((CASE WHEN vt0.c0 THEN t2.c1 END)/(((rt0.c3)OR(rt0.c3)))), ((NOT (vt0.c0)) IN ()) ASC, (((- (rt0.c0))) BETWEEN (TRIM(rt0.c0)) AND (((t2.c1)>=(t2.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)%(rt0.c1)))||(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, vt0, t2 ORDER BY ((CASE WHEN vt0.c0 THEN t2.c1 END)/(((rt0.c3)OR(rt0.c3)))), ((NOT (vt0.c0)) IN ()) ASC, (((- (rt0.c0))) BETWEEN (TRIM(rt0.c0)) AND (((t2.c1)>=(t2.c0))))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, t2 WHERE (((((rt0.c3)%(rt0.c1)))||(TOTAL_CHANGES()))) ORDER BY ((CASE WHEN vt0.c0 THEN t2.c1 END)/(((rt0.c3)OR(rt0.c3)))), ((NOT (vt0.c0)) IN ()) ASC, (((- (rt0.c0))) BETWEEN (TRIM(rt0.c0)) AND (((t2.c1)>=(t2.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t2 INNER JOIN vt1 ON TYPEOF(DISTINCT t2.c0 COLLATE BINARY) CROSS JOIN rt0 ON CASE ((t2.c2)*(0.025972498486826923))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) IS FALSE) END INNER JOIN t0 ON (t2.c0 IN (t2.c2)) COLLATE BINARY WHERE (ABS(t2.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((ABS(t2.c0 COLLATE BINARY)) IS TRUE)  as count FROM t2 INNER JOIN vt1 ON TYPEOF(DISTINCT t2.c0 COLLATE BINARY) CROSS JOIN rt0 ON CASE ((t2.c2)*(0.025972498486826923))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) IS FALSE) END INNER JOIN t0 ON (t2.c0 IN (t2.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t2 INNER JOIN vt1 ON TYPEOF(DISTINCT t2.c0 COLLATE BINARY) CROSS JOIN rt0 ON CASE ((t2.c2)*(0.025972498486826923))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) IS FALSE) END INNER JOIN t0 ON (t2.c0 IN (t2.c2)) COLLATE BINARY WHERE (ABS(t2.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((ABS(t2.c0 COLLATE BINARY)) IS TRUE)  as count FROM t2 INNER JOIN vt1 ON TYPEOF(DISTINCT t2.c0 COLLATE BINARY) CROSS JOIN rt0 ON CASE ((t2.c2)*(0.025972498486826923))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) IS FALSE) END INNER JOIN t0 ON (t2.c0 IN (t2.c2)) COLLATE BINARY);
SELECT COUNT(*) FROM t2 INNER JOIN vt1 ON TYPEOF(DISTINCT t2.c0 COLLATE BINARY) CROSS JOIN rt0 ON CASE ((t2.c2)*(0.025972498486826923))  WHEN CAST(t0.c0 AS NUMERIC) THEN ((t0.c1) IS FALSE) END INNER JOIN t0 ON (t2.c0 IN (t2.c2)) COLLATE BINARY WHERE (ABS(t2.c0 COLLATE BINARY));
SELECT ALL * FROM t0 WHERE (((((t0.c1) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) ISNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1) ISNULL)) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c1) ISNULL)) ISNULL));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c0 AS NUMERIC) COLLATE NOCASE);
SELECT ALL * FROM vt1, rt0, t0, t2, vt0 WHERE ((((((t0.c1 IN (t0.c1)))AND((- (x'')))))AND(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1 IN (t0.c1)))AND((- (x'')))))AND(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0, t2, vt0);
SELECT ALL * FROM vt1, rt0, t0, t2, vt0 WHERE ((((((t0.c1 IN (t0.c1)))AND((- (x'')))))AND(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1 IN (t0.c1)))AND((- (x'')))))AND(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt1, rt0, t0, t2, vt0);
SELECT ALL * FROM vt1, rt0, t0, t2, vt0 WHERE ((((((t0.c1 IN (t0.c1)))AND((- (x'')))))AND(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c0)))));
SELECT ALL * FROM t0, vt1, rt0 WHERE (CAST(((((0.06624580999023921)OR(rt0.c3)))AND(t0.c0)) AS INTEGER)) ORDER BY ((((((((((((((rt0.c2)<(rt0.c0)))OR(((t0.c1)LIKE(rt0.c1)))))AND(((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c1)))))AND((NOT (rt0.c3)))))OR(vt1.c0 COLLATE BINARY)))AND((+ (rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c2)IS(t0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((0.06624580999023921)OR(rt0.c3)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((((((((((((rt0.c2)<(rt0.c0)))OR(((t0.c1)LIKE(rt0.c1)))))AND(((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c1)))))AND((NOT (rt0.c3)))))OR(vt1.c0 COLLATE BINARY)))AND((+ (rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c2)IS(t0.c2)) AS REAL));
SELECT ALL * FROM t0, vt1, rt0 WHERE (CAST(((((0.06624580999023921)OR(rt0.c3)))AND(t0.c0)) AS INTEGER)) ORDER BY ((((((((((((((rt0.c2)<(rt0.c0)))OR(((t0.c1)LIKE(rt0.c1)))))AND(((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c1)))))AND((NOT (rt0.c3)))))OR(vt1.c0 COLLATE BINARY)))AND((+ (rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c2)IS(t0.c2)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((0.06624580999023921)OR(rt0.c3)))AND(t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((((((((((((rt0.c2)<(rt0.c0)))OR(((t0.c1)LIKE(rt0.c1)))))AND(((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c1)))))AND((NOT (rt0.c3)))))OR(vt1.c0 COLLATE BINARY)))AND((+ (rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c2)IS(t0.c2)) AS REAL));
SELECT ALL * FROM t0, vt1, rt0 WHERE (CAST(((((0.06624580999023921)OR(rt0.c3)))AND(t0.c0)) AS INTEGER)) ORDER BY ((((((((((((((rt0.c2)<(rt0.c0)))OR(((t0.c1)LIKE(rt0.c1)))))AND(((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c2)))))AND(((rt0.c0) BETWEEN (vt1.c0) AND (t0.c1)))))AND((NOT (rt0.c3)))))OR(vt1.c0 COLLATE BINARY)))AND((+ (rt0.c2)))) ASC  NULLS LAST, CAST(((t0.c2)IS(t0.c2)) AS REAL);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((+ (t0.c0)))/(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))/(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY NULL COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((+ (t0.c0)))/(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (t0.c0)))/(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0))))) IS TRUE)  as count FROM vt0, rt0, t0 ORDER BY NULL COLLATE RTRIM  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t0 WHERE ((((+ (t0.c0)))/(((rt0.c2) BETWEEN (rt0.c2) AND (t0.c0))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t2 WHERE (((((vt1.c0)GLOB(t2.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c3) IS TRUE)))) ORDER BY (CHANGES() IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(t2.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0, vt0, t2 ORDER BY (CHANGES() IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t2 WHERE (((((vt1.c0)GLOB(t2.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c3) IS TRUE)))) ORDER BY (CHANGES() IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)GLOB(t2.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c3) IS TRUE)))) IS TRUE)  as count FROM vt1, rt0, vt0, t2 ORDER BY (CHANGES() IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0, t2 WHERE (((((vt1.c0)GLOB(t2.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((rt0.c3) IS TRUE)))) ORDER BY (CHANGES() IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t2, t0, vt0, vt1 WHERE (((((rt0.c2) BETWEEN (t2.c1) AND ('q7'))) NOTNULL)) ORDER BY CAST(CASE WHEN NULL THEN t0.c2 ELSE t0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (t2.c1) AND ('q7'))) NOTNULL)) IS TRUE)  as count FROM rt0, t2, t0, vt0, vt1 ORDER BY CAST(CASE WHEN NULL THEN t0.c2 ELSE t0.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t2, t0, vt0, vt1 WHERE (((((rt0.c2) BETWEEN (t2.c1) AND ('q7'))) NOTNULL)) ORDER BY CAST(CASE WHEN NULL THEN t0.c2 ELSE t0.c0 END AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (t2.c1) AND ('q7'))) NOTNULL)) IS TRUE)  as count FROM rt0, t2, t0, vt0, vt1 ORDER BY CAST(CASE WHEN NULL THEN t0.c2 ELSE t0.c0 END AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t2, t0, vt0, vt1 WHERE (((((rt0.c2) BETWEEN (t2.c1) AND ('q7'))) NOTNULL)) ORDER BY CAST(CASE WHEN NULL THEN t0.c2 ELSE t0.c0 END AS BLOB)  NULLS FIRST;
SELECT * FROM t0, vt1, vt0, t2 WHERE (((CASE t2.c2  WHEN t2.c2 THEN vt0.c0 WHEN t0.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c0 ELSE t2.c0 END)AND(0.4341003764545246))) ORDER BY (+ (((t2.c1)&(t2.c0)))) ASC  NULLS FIRST, t2.c1;
SELECT SUM(count) FROM (SELECT ((((CASE t2.c2  WHEN t2.c2 THEN vt0.c0 WHEN t0.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c0 ELSE t2.c0 END)AND(0.4341003764545246))) IS TRUE)  as count FROM t0, vt1, vt0, t2 ORDER BY (+ (((t2.c1)&(t2.c0)))) ASC  NULLS FIRST, t2.c1);
SELECT * FROM t0, vt1, vt0, t2 WHERE (((CASE t2.c2  WHEN t2.c2 THEN vt0.c0 WHEN t0.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c0 ELSE t2.c0 END)AND(0.4341003764545246))) ORDER BY (+ (((t2.c1)&(t2.c0)))) ASC  NULLS FIRST, t2.c1;
SELECT SUM(count) FROM (SELECT ((((CASE t2.c2  WHEN t2.c2 THEN vt0.c0 WHEN t0.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c0 ELSE t2.c0 END)AND(0.4341003764545246))) IS TRUE)  as count FROM t0, vt1, vt0, t2 ORDER BY (+ (((t2.c1)&(t2.c0)))) ASC  NULLS FIRST, t2.c1);
SELECT * FROM t0, vt1, vt0, t2 WHERE (((CASE t2.c2  WHEN t2.c2 THEN vt0.c0 WHEN t0.c2 THEN t2.c2 WHEN t0.c2 THEN t2.c0 ELSE t2.c0 END)AND(0.4341003764545246))) ORDER BY (+ (((t2.c1)&(t2.c0)))) ASC  NULLS FIRST, t2.c1;
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (TYPEOF(t0.c2)) AND (((('-1691952659')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) NOT BETWEEN (TYPEOF(t0.c2)) AND (((('-1691952659')) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (TYPEOF(t0.c2)) AND (((('-1691952659')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) NOT BETWEEN (TYPEOF(t0.c2)) AND (((('-1691952659')) NOT BETWEEN ((t0.c1)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c1 IN ())) NOT BETWEEN (TYPEOF(t0.c2)) AND (((('-1691952659')) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))));
SELECT COUNT(*) FROM t0, vt1, vt0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, vt0, t2);
SELECT COUNT(*) FROM t0, vt1, vt0, t2 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, vt0, t2);
SELECT COUNT(*) FROM t0, vt1, vt0, t2 WHERE (x'');
SELECT ALL COUNT(*) FROM t2, vt1, rt0 WHERE (CAST(((t2.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t2, vt1, rt0);
SELECT ALL COUNT(*) FROM t2, vt1, rt0 WHERE (CAST(((t2.c0) NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t2.c0) NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM t2, vt1, rt0);
SELECT ALL COUNT(*) FROM t2, vt1, rt0 WHERE (CAST(((t2.c0) NOTNULL) AS NUMERIC));
SELECT ALL * FROM t2, vt0, t0, vt1 WHERE ((+ ((((vt1.c0, t0.c1, 0.04953187019371963, t0.c2, t2.c0)) NOT BETWEEN ((t0.c1, t2.c2, t0.c0, vt0.c0, t0.c2)) AND ((t2.c1, vt1.c0, t2.c2, vt1.c0, t2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0, t0.c1, 0.04953187019371963, t0.c2, t2.c0)) NOT BETWEEN ((t0.c1, t2.c2, t0.c0, vt0.c0, t0.c2)) AND ((t2.c1, vt1.c0, t2.c2, vt1.c0, t2.c1)))))) IS TRUE)  as count FROM t2, vt0, t0, vt1);
SELECT ALL * FROM t2, vt0, t0, vt1 WHERE ((+ ((((vt1.c0, t0.c1, 0.04953187019371963, t0.c2, t2.c0)) NOT BETWEEN ((t0.c1, t2.c2, t0.c0, vt0.c0, t0.c2)) AND ((t2.c1, vt1.c0, t2.c2, vt1.c0, t2.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((vt1.c0, t0.c1, 0.04953187019371963, t0.c2, t2.c0)) NOT BETWEEN ((t0.c1, t2.c2, t0.c0, vt0.c0, t0.c2)) AND ((t2.c1, vt1.c0, t2.c2, vt1.c0, t2.c1)))))) IS TRUE)  as count FROM t2, vt0, t0, vt1);
SELECT ALL * FROM t2, vt0, t0, vt1 WHERE ((+ ((((vt1.c0, t0.c1, 0.04953187019371963, t0.c2, t2.c0)) NOT BETWEEN ((t0.c1, t2.c2, t0.c0, vt0.c0, t0.c2)) AND ((t2.c1, vt1.c0, t2.c2, vt1.c0, t2.c1))))));
SELECT * FROM vt0, t2, rt0 WHERE (x'ef25');
SELECT SUM(count) FROM (SELECT ALL ((x'ef25') IS TRUE)  as count FROM vt0, t2, rt0);
SELECT * FROM vt0, t2, rt0 WHERE (x'ef25');
SELECT SUM(count) FROM (SELECT ALL ((x'ef25') IS TRUE)  as count FROM vt0, t2, rt0);
SELECT * FROM vt0, t2, rt0 WHERE (x'ef25');
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (('>矱' IN ()));
SELECT SUM(count) FROM (SELECT ((('>矱' IN ())) IS TRUE)  as count FROM t2, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (('>矱' IN ()));
SELECT SUM(count) FROM (SELECT ((('>矱' IN ())) IS TRUE)  as count FROM t2, rt0, vt1, vt0);
SELECT ALL COUNT(*) FROM t2, rt0, vt1, vt0 WHERE (('>矱' IN ()));
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((ABS(DISTINCT NULL)) BETWEEN (vt1.c0) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN t0.c2 WHEN '%W' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT NULL)) BETWEEN (vt1.c0) AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN t0.c2 WHEN '%W' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((ABS(DISTINCT NULL)) BETWEEN (vt1.c0) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN t0.c2 WHEN '%W' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((ABS(DISTINCT NULL)) BETWEEN (vt1.c0) AND (CAST(t0.c0 AS TEXT)))) IS TRUE)  as count FROM t0, vt1 ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN t0.c2 WHEN '%W' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) DESC);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((ABS(DISTINCT NULL)) BETWEEN (vt1.c0) AND (CAST(t0.c0 AS TEXT)))) ORDER BY (+ (CASE NULL  WHEN vt1.c0 THEN t0.c2 WHEN '%W' THEN t0.c1 WHEN t0.c0 THEN t0.c0 END)) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (NULL) AND (vt0.c0)))) AND ((vt0.c0))));
SELECT ALL * FROM vt0, rt0, t2, vt1, t0 WHERE (((((((vt0.c0)||(rt0.c0)))OR(t0.c2 COLLATE NOCASE)))AND(CAST(NULL AS TEXT)))) ORDER BY (((((t2.c1, t2.c0, rt0.c3))<=((t0.c2, t0.c1, rt0.c2))))<=(((NULL)LIKE(vt0.c0))))  NULLS LAST, ((((CAST(t2.c1 AS INTEGER))AND(((t0.c1) BETWEEN (vt1.c0) AND (0.5757077981833195)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)||(rt0.c0)))OR(t0.c2 COLLATE NOCASE)))AND(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t2, vt1, t0 ORDER BY (((((t2.c1, t2.c0, rt0.c3))<=((t0.c2, t0.c1, rt0.c2))))<=(((NULL)LIKE(vt0.c0))))  NULLS LAST, ((((CAST(t2.c1 AS INTEGER))AND(((t0.c1) BETWEEN (vt1.c0) AND (0.5757077981833195)))))OR(vt0.c0)) ASC);
SELECT ALL * FROM vt0, rt0, t2, vt1, t0 WHERE (((((((vt0.c0)||(rt0.c0)))OR(t0.c2 COLLATE NOCASE)))AND(CAST(NULL AS TEXT)))) ORDER BY (((((t2.c1, t2.c0, rt0.c3))<=((t0.c2, t0.c1, rt0.c2))))<=(((NULL)LIKE(vt0.c0))))  NULLS LAST, ((((CAST(t2.c1 AS INTEGER))AND(((t0.c1) BETWEEN (vt1.c0) AND (0.5757077981833195)))))OR(vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)||(rt0.c0)))OR(t0.c2 COLLATE NOCASE)))AND(CAST(NULL AS TEXT)))) IS TRUE)  as count FROM vt0, rt0, t2, vt1, t0 ORDER BY (((((t2.c1, t2.c0, rt0.c3))<=((t0.c2, t0.c1, rt0.c2))))<=(((NULL)LIKE(vt0.c0))))  NULLS LAST, ((((CAST(t2.c1 AS INTEGER))AND(((t0.c1) BETWEEN (vt1.c0) AND (0.5757077981833195)))))OR(vt0.c0)) ASC);
SELECT ALL * FROM vt0, rt0, t2, vt1, t0 WHERE (((((((vt0.c0)||(rt0.c0)))OR(t0.c2 COLLATE NOCASE)))AND(CAST(NULL AS TEXT)))) ORDER BY (((((t2.c1, t2.c0, rt0.c3))<=((t0.c2, t0.c1, rt0.c2))))<=(((NULL)LIKE(vt0.c0))))  NULLS LAST, ((((CAST(t2.c1 AS INTEGER))AND(((t0.c1) BETWEEN (vt1.c0) AND (0.5757077981833195)))))OR(vt0.c0)) ASC;
SELECT * FROM vt0, rt0, t2, vt1 INNER JOIN t0 ON ((((0xffffffffaf9aa579)AND(0.2791463300337753)))OR(t2.c1)) WHERE (rt0.c1) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c0))<=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t2, vt1 INNER JOIN t0 ON ((((0xffffffffaf9aa579)AND(0.2791463300337753)))OR(t2.c1)) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c0))<=((vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0, rt0, t2, vt1 INNER JOIN t0 ON ((((0xffffffffaf9aa579)AND(0.2791463300337753)))OR(t2.c1)) WHERE (rt0.c1) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c0))<=((vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, t2, vt1 INNER JOIN t0 ON ((((0xffffffffaf9aa579)AND(0.2791463300337753)))OR(t2.c1)) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c0))<=((vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0, rt0, t2, vt1 INNER JOIN t0 ON ((((0xffffffffaf9aa579)AND(0.2791463300337753)))OR(t2.c1)) WHERE (rt0.c1) ORDER BY ((vt0.c0) NOT BETWEEN (((vt0.c0)<=(t0.c0))) AND ((((t0.c0))<=((vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((+ (CASE WHEN vt1.c0 THEN rt0.c0 ELSE t0.c1 END))) ORDER BY ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN rt0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE t0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((+ (CASE WHEN vt1.c0 THEN rt0.c0 ELSE t0.c1 END))) ORDER BY ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE t0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt1.c0 THEN rt0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0, vt1, rt0 ORDER BY ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE t0.c0 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt1, rt0 WHERE ((+ (CASE WHEN vt1.c0 THEN rt0.c0 ELSE t0.c1 END))) ORDER BY ((((((((CAST(vt1.c0 AS TEXT))AND(((vt1.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))))OR(CAST(t0.c0 AS INTEGER))))AND((NOT (rt0.c0)))))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c2 ELSE t0.c0 END))  NULLS FIRST;
SELECT COUNT(*) FROM t2 WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ALL ((t2.c2) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (t2.c2);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t0, rt0, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt0, vt0, vt1 WHERE (rt0.c3);
SELECT COUNT(*) FROM vt0, t0, vt1, t2 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) BETWEEN (t2.c0) AND (t2.c0)) THEN ((t0.c1)*(vt1.c0)) WHEN ((t0.c2)-(t0.c0)) THEN 770786742 WHEN CAST(t2.c1 AS REAL) THEN ((t2.c0)+(t0.c1)) ELSE ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)) END) ORDER BY (((t2.c2 IN ())) NOT NULL)  NULLS LAST, (((NULL)&(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) BETWEEN (t2.c0) AND (t2.c0)) THEN ((t0.c1)*(vt1.c0)) WHEN ((t0.c2)-(t0.c0)) THEN 770786742 WHEN CAST(t2.c1 AS REAL) THEN ((t2.c0)+(t0.c1)) ELSE ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM vt0, t0, vt1, t2 ORDER BY (((t2.c2 IN ())) NOT NULL)  NULLS LAST, (((NULL)&(vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1, t2 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) BETWEEN (t2.c0) AND (t2.c0)) THEN ((t0.c1)*(vt1.c0)) WHEN ((t0.c2)-(t0.c0)) THEN 770786742 WHEN CAST(t2.c1 AS REAL) THEN ((t2.c0)+(t0.c1)) ELSE ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)) END) ORDER BY (((t2.c2 IN ())) NOT NULL)  NULLS LAST, (((NULL)&(vt1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) BETWEEN (t2.c0) AND (t2.c0)) THEN ((t0.c1)*(vt1.c0)) WHEN ((t0.c2)-(t0.c0)) THEN 770786742 WHEN CAST(t2.c1 AS REAL) THEN ((t2.c0)+(t0.c1)) ELSE ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM vt0, t0, vt1, t2 ORDER BY (((t2.c2 IN ())) NOT NULL)  NULLS LAST, (((NULL)&(vt1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, t0, vt1, t2 WHERE (CASE t0.c0 COLLATE BINARY  WHEN ((t0.c0) BETWEEN (t2.c0) AND (t2.c0)) THEN ((t0.c1)*(vt1.c0)) WHEN ((t0.c2)-(t0.c0)) THEN 770786742 WHEN CAST(t2.c1 AS REAL) THEN ((t2.c0)+(t0.c1)) ELSE ((t0.c1) BETWEEN (vt0.c0) AND (t0.c2)) END) ORDER BY (((t2.c2 IN ())) NOT NULL)  NULLS LAST, (((NULL)&(vt1.c0)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t2, vt0, t0, vt1, rt0 WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ((t2.c2) IS TRUE)  as count FROM t2, vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t2, vt0, t0, vt1, rt0 WHERE (t2.c2);
SELECT SUM(count) FROM (SELECT ((t2.c2) IS TRUE)  as count FROM t2, vt0, t0, vt1, rt0);
SELECT ALL COUNT(*) FROM t2, vt0, t0, vt1, rt0 WHERE (t2.c2);
SELECT * FROM t2, vt1, t0, vt0, rt0 WHERE (((json_array(x'', t2.c2))|(((t2.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY CAST(t2.c2 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN t0.c1 WHEN vt1.c0 THEN t2.c0 WHEN t2.c0 THEN rt0.c3 END)AND(x'' COLLATE BINARY)))AND((t2.c2 IN (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array(x'', t2.c2))|(((t2.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t2, vt1, t0, vt0, rt0 ORDER BY CAST(t2.c2 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN t0.c1 WHEN vt1.c0 THEN t2.c0 WHEN t2.c0 THEN rt0.c3 END)AND(x'' COLLATE BINARY)))AND((t2.c2 IN (t0.c1))))  NULLS LAST);
SELECT * FROM t2, vt1, t0, vt0, rt0 WHERE (((json_array(x'', t2.c2))|(((t2.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) ORDER BY CAST(t2.c2 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN t0.c1 WHEN vt1.c0 THEN t2.c0 WHEN t2.c0 THEN rt0.c3 END)AND(x'' COLLATE BINARY)))AND((t2.c2 IN (t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((json_array(x'', t2.c2))|(((t2.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))))) IS TRUE)  as count FROM t2, vt1, t0, vt0, rt0 ORDER BY CAST(t2.c2 COLLATE NOCASE AS NUMERIC)  NULLS FIRST, ((((CASE WHEN rt0.c2 THEN t0.c1 WHEN vt1.c0 THEN t2.c0 WHEN t2.c0 THEN rt0.c3 END)AND(x'' COLLATE BINARY)))AND((t2.c2 IN (t0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(1.669620719E9)))OR(vt1.c0)))OR(vt1.c0))))<=(((vt1.c0 IN ()), vt1.c0 COLLATE RTRIM, NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(1.669620719E9)))OR(vt1.c0)))OR(vt1.c0))))<=(((vt1.c0 IN ()), vt1.c0 COLLATE RTRIM, NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(1.669620719E9)))OR(vt1.c0)))OR(vt1.c0))))<=(((vt1.c0 IN ()), vt1.c0 COLLATE RTRIM, NULL))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(1.669620719E9)))OR(vt1.c0)))OR(vt1.c0))))<=(((vt1.c0 IN ()), vt1.c0 COLLATE RTRIM, NULL)))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((((vt1.c0 IN ()), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END, ((((((((vt1.c0)OR(vt1.c0)))AND(1.669620719E9)))OR(vt1.c0)))OR(vt1.c0))))<=(((vt1.c0 IN ()), vt1.c0 COLLATE RTRIM, NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3))>=((rt0.c2, -832105397, rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c3))>=((rt0.c2, -832105397, rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3))>=((rt0.c2, -832105397, rt0.c3))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c3, rt0.c0, rt0.c3))>=((rt0.c2, -832105397, rt0.c3))) COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3, rt0.c0, rt0.c3))>=((rt0.c2, -832105397, rt0.c3))) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, t0.c1)) NOT BETWEEN ((((t0.c2) NOTNULL), SQLITE_VERSION(), CAST(t0.c0 AS NUMERIC))) AND ((((vt1.c0)-(t0.c0)), CAST(t0.c1 AS NUMERIC), ((vt1.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY HEX(DISTINCT (t0.c0 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, t0.c1)) NOT BETWEEN ((((t0.c2) NOTNULL), SQLITE_VERSION(), CAST(t0.c0 AS NUMERIC))) AND ((((vt1.c0)-(t0.c0)), CAST(t0.c1 AS NUMERIC), ((vt1.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY HEX(DISTINCT (t0.c0 IN ())) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, t0.c1)) NOT BETWEEN ((((t0.c2) NOTNULL), SQLITE_VERSION(), CAST(t0.c0 AS NUMERIC))) AND ((((vt1.c0)-(t0.c0)), CAST(t0.c1 AS NUMERIC), ((vt1.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY HEX(DISTINCT (t0.c0 IN ())) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0, vt1.c0, t0.c1)) NOT BETWEEN ((((t0.c2) NOTNULL), SQLITE_VERSION(), CAST(t0.c0 AS NUMERIC))) AND ((((vt1.c0)-(t0.c0)), CAST(t0.c1 AS NUMERIC), ((vt1.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM vt1, t0 ORDER BY HEX(DISTINCT (t0.c0 IN ())) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((vt1.c0, vt1.c0, t0.c1)) NOT BETWEEN ((((t0.c2) NOTNULL), SQLITE_VERSION(), CAST(t0.c0 AS NUMERIC))) AND ((((vt1.c0)-(t0.c0)), CAST(t0.c1 AS NUMERIC), ((vt1.c0) BETWEEN (t0.c1) AND (t0.c0)))))) ORDER BY HEX(DISTINCT (t0.c0 IN ())) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('829398262');
SELECT SUM(count) FROM (SELECT (('829398262') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('829398262');
SELECT SUM(count) FROM (SELECT (('829398262') IS TRUE)  as count FROM vt1, rt0);
SELECT ALL COUNT(*) FROM vt1, rt0 WHERE ('829398262');
SELECT * FROM t0, rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))  WHEN TIME(rt0.c1, rt0.c2, t0.c1, t0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))  WHEN TIME(rt0.c1, rt0.c2, t0.c1, t0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))  WHEN TIME(rt0.c1, rt0.c2, t0.c1, t0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))  WHEN TIME(rt0.c1, rt0.c2, t0.c1, t0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END) IS TRUE)  as count FROM t0, rt0);
SELECT * FROM t0, rt0 WHERE (CASE ((rt0.c0) NOT BETWEEN (t0.c1) AND (rt0.c1))  WHEN TIME(rt0.c1, rt0.c2, t0.c1, t0.c0, rt0.c2) THEN (rt0.c2 IN (rt0.c0)) ELSE (rt0.c1 IN ()) END);
SELECT COUNT(*) FROM rt0 WHERE (-1468746267) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1468746267) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE (-1468746267) ORDER BY rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((-1468746267) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 ASC);
SELECT COUNT(*) FROM rt0 WHERE (-1468746267) ORDER BY rt0.c1 ASC;
SELECT ALL * FROM t2, rt0, t0 WHERE (((((((((t0.c1)OR(((rt0.c3)!=(t0.c1)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c3)||(t0.c2)))))OR(((t0.c1)%(rt0.c3))))) ORDER BY ((rt0.c0)+(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1)OR(((rt0.c3)!=(t0.c1)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c3)||(t0.c2)))))OR(((t0.c1)%(rt0.c3))))) IS TRUE)  as count FROM t2, rt0, t0 ORDER BY ((rt0.c0)+(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t2, rt0, t0 WHERE (((((((((t0.c1)OR(((rt0.c3)!=(t0.c1)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c3)||(t0.c2)))))OR(((t0.c1)%(rt0.c3))))) ORDER BY ((rt0.c0)+(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((t0.c1)OR(((rt0.c3)!=(t0.c1)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c3)||(t0.c2)))))OR(((t0.c1)%(rt0.c3))))) IS TRUE)  as count FROM t2, rt0, t0 ORDER BY ((rt0.c0)+(t0.c0)) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t2, rt0, t0 WHERE (((((((((t0.c1)OR(((rt0.c3)!=(t0.c1)))))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))))OR(((rt0.c3)||(t0.c2)))))OR(((t0.c1)%(rt0.c3))))) ORDER BY ((rt0.c0)+(t0.c0)) COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN vt1 ON (((rt0.c3)) NOT BETWEEN ((((((rt0.c2)OR(t2.c0)))OR(t2.c1)))) AND ((((((rt0.c0)AND(t2.c1)))OR(181008353))))) WHERE (((((((rt0.c1)IS NOT(rt0.c3)))AND(((vt1.c0)|(t2.c1)))))AND(((((vt1.c0)AND(NULL)))AND(rt0.c3))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)IS NOT(rt0.c3)))AND(((vt1.c0)|(t2.c1)))))AND(((((vt1.c0)AND(NULL)))AND(rt0.c3))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN vt1 ON (((rt0.c3)) NOT BETWEEN ((((((rt0.c2)OR(t2.c0)))OR(t2.c1)))) AND ((((((rt0.c0)AND(t2.c1)))OR(181008353))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) ASC);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN vt1 ON (((rt0.c3)) NOT BETWEEN ((((((rt0.c2)OR(t2.c0)))OR(t2.c1)))) AND ((((((rt0.c0)AND(t2.c1)))OR(181008353))))) WHERE (((((((rt0.c1)IS NOT(rt0.c3)))AND(((vt1.c0)|(t2.c1)))))AND(((((vt1.c0)AND(NULL)))AND(rt0.c3))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)IS NOT(rt0.c3)))AND(((vt1.c0)|(t2.c1)))))AND(((((vt1.c0)AND(NULL)))AND(rt0.c3))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN vt1 ON (((rt0.c3)) NOT BETWEEN ((((((rt0.c2)OR(t2.c0)))OR(t2.c1)))) AND ((((((rt0.c0)AND(t2.c1)))OR(181008353))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) ASC);
SELECT COUNT(*) FROM t2 RIGHT OUTER JOIN rt0 ON rt0.c2 LEFT OUTER JOIN vt1 ON (((rt0.c3)) NOT BETWEEN ((((((rt0.c2)OR(t2.c0)))OR(t2.c1)))) AND ((((((rt0.c0)AND(t2.c1)))OR(181008353))))) WHERE (((((((rt0.c1)IS NOT(rt0.c3)))AND(((vt1.c0)|(t2.c1)))))AND(((((vt1.c0)AND(NULL)))AND(rt0.c3))))) ORDER BY ((((rt0.c1) NOTNULL)) IS TRUE) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (GLOB(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (GLOB(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (GLOB(vt0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ (GLOB(vt0.c0, vt0.c0))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (+ (GLOB(vt0.c0, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULL)<<(((rt0.c3)>(rt0.c3))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c2)))) AND (((~ (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((rt0.c3)>(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c2)))) AND (((~ (rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULL)<<(((rt0.c3)>(rt0.c3))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c2)))) AND (((~ (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((rt0.c3)>(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c2)))) AND (((~ (rt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((NULL)<<(((rt0.c3)>(rt0.c3))))) ORDER BY (((rt0.c2)) NOT BETWEEN ((((rt0.c0)>=(rt0.c2)))) AND (((~ (rt0.c1)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0, t2 WHERE (UPPER(CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0, t0, vt1, vt0, t2);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0, t2 WHERE (UPPER(CAST(rt0.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(rt0.c1 AS REAL))) IS TRUE)  as count FROM rt0, t0, vt1, vt0, t2);
SELECT ALL COUNT(*) FROM rt0, t0, vt1, vt0, t2 WHERE (UPPER(CAST(rt0.c1 AS REAL)));
SELECT COUNT(*) FROM t0, t2, rt0 NATURAL JOIN vt0 WHERE ((+ (('' IN (t2.c2))))) ORDER BY ((((rt0.c3)LIKE(t0.c1))) NOT BETWEEN (t2.c2) AND (((vt0.c0)+(t2.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (('' IN (t2.c2))))) IS TRUE)  as count FROM t0, t2, rt0 NATURAL JOIN vt0 ORDER BY ((((rt0.c3)LIKE(t0.c1))) NOT BETWEEN (t2.c2) AND (((vt0.c0)+(t2.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2, rt0 NATURAL JOIN vt0 WHERE ((+ (('' IN (t2.c2))))) ORDER BY ((((rt0.c3)LIKE(t0.c1))) NOT BETWEEN (t2.c2) AND (((vt0.c0)+(t2.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (('' IN (t2.c2))))) IS TRUE)  as count FROM t0, t2, rt0 NATURAL JOIN vt0 ORDER BY ((((rt0.c3)LIKE(t0.c1))) NOT BETWEEN (t2.c2) AND (((vt0.c0)+(t2.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, t2, rt0 NATURAL JOIN vt0 WHERE ((+ (('' IN (t2.c2))))) ORDER BY ((((rt0.c3)LIKE(t0.c1))) NOT BETWEEN (t2.c2) AND (((vt0.c0)+(t2.c0)))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM INNER JOIN vt1 ON (NOT (((rt0.c0)AND(vt1.c0)))) WHERE (json_array_length(CAST(rt0.c2 AS TEXT), (((rt0.c2))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(rt0.c2 AS TEXT), (((rt0.c2))==((vt0.c0))))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM INNER JOIN vt1 ON (NOT (((rt0.c0)AND(vt1.c0)))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM INNER JOIN vt1 ON (NOT (((rt0.c0)AND(vt1.c0)))) WHERE (json_array_length(CAST(rt0.c2 AS TEXT), (((rt0.c2))==((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(rt0.c2 AS TEXT), (((rt0.c2))==((vt0.c0))))) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM INNER JOIN vt1 ON (NOT (((rt0.c0)AND(vt1.c0)))));
SELECT * FROM t0, vt0 RIGHT OUTER JOIN rt0 ON NULL COLLATE RTRIM INNER JOIN vt1 ON (NOT (((rt0.c0)AND(vt1.c0)))) WHERE (json_array_length(CAST(rt0.c2 AS TEXT), (((rt0.c2))==((vt0.c0)))));
SELECT ALL COUNT(*) FROM t2 WHERE ((CASE WHEN t2.c1 THEN NULL WHEN t2.c1 THEN NULL WHEN t2.c0 THEN t2.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t2.c1 THEN NULL WHEN t2.c1 THEN NULL WHEN t2.c0 THEN t2.c1 END IN ())) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((CASE WHEN t2.c1 THEN NULL WHEN t2.c1 THEN NULL WHEN t2.c0 THEN t2.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t2.c1 THEN NULL WHEN t2.c1 THEN NULL WHEN t2.c0 THEN t2.c1 END IN ())) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE ((CASE WHEN t2.c1 THEN NULL WHEN t2.c1 THEN NULL WHEN t2.c0 THEN t2.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((vt0.c0 IN ()));
SELECT * FROM t2, rt0, vt0, t0 WHERE (UPPER(DISTINCT (((t0.c0))=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((t0.c0))=((t0.c0))))) IS TRUE)  as count FROM t2, rt0, vt0, t0);
SELECT * FROM t2, rt0, vt0, t0 WHERE (UPPER(DISTINCT (((t0.c0))=((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((t0.c0))=((t0.c0))))) IS TRUE)  as count FROM t2, rt0, vt0, t0);
SELECT * FROM t2, rt0, vt0, t0 WHERE (UPPER(DISTINCT (((t0.c0))=((t0.c0)))));
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY (~ (INSTR(rt0.c0, t0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (~ (INSTR(rt0.c0, t0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY (~ (INSTR(rt0.c0, t0.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)) IS TRUE)  as count FROM t0, rt0, vt0 ORDER BY (~ (INSTR(rt0.c0, t0.c2))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt0, vt0 WHERE (CAST(((((vt0.c0)OR(rt0.c0)))OR(vt0.c0)) AS REAL)) ORDER BY (~ (INSTR(rt0.c0, t0.c2))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))-(((vt0.c0)GLOB(vt0.c0))))) ORDER BY 0.6928451389911965 ASC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))&((+ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))-(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6928451389911965 ASC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))&((+ (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))-(((vt0.c0)GLOB(vt0.c0))))) ORDER BY 0.6928451389911965 ASC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))&((+ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))-(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0.6928451389911965 ASC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))&((+ (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))-(((vt0.c0)GLOB(vt0.c0))))) ORDER BY 0.6928451389911965 ASC  NULLS FIRST, ((((vt0.c0)||(vt0.c0)))&((+ (vt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)AND(vt1.c0)))OR(x'')))OR(t0.c2)))AND(vt1.c0)))%(x'')) WHERE (t0.c2) ORDER BY SQLITE_COMPILEOPTION_USED(vt1.c0) ASC, ((vt1.c0)IS((- (t0.c0))))  NULLS LAST, ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)AND(vt1.c0)))OR(x'')))OR(t0.c2)))AND(vt1.c0)))%(x'')) ORDER BY SQLITE_COMPILEOPTION_USED(vt1.c0) ASC, ((vt1.c0)IS((- (t0.c0))))  NULLS LAST, ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)AND(vt1.c0)))OR(x'')))OR(t0.c2)))AND(vt1.c0)))%(x'')) WHERE (t0.c2) ORDER BY SQLITE_COMPILEOPTION_USED(vt1.c0) ASC, ((vt1.c0)IS((- (t0.c0))))  NULLS LAST, ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)AND(vt1.c0)))OR(x'')))OR(t0.c2)))AND(vt1.c0)))%(x'')) ORDER BY SQLITE_COMPILEOPTION_USED(vt1.c0) ASC, ((vt1.c0)IS((- (t0.c0))))  NULLS LAST, ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt1 RIGHT OUTER JOIN t0 ON ((((((((((t0.c0)AND(vt1.c0)))OR(x'')))OR(t0.c2)))AND(vt1.c0)))%(x'')) WHERE (t0.c2) ORDER BY SQLITE_COMPILEOPTION_USED(vt1.c0) ASC, ((vt1.c0)IS((- (t0.c0))))  NULLS LAST, ((t0.c2 COLLATE RTRIM) NOT NULL) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, t2, t0 WHERE ((((CAST(rt0.c0 AS BLOB)))>=(((t0.c0 IN (rt0.c2, t0.c2)))))) ORDER BY (((t0.c1 IN (t0.c2)))+(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))>=(((t0.c0 IN (rt0.c2, t0.c2)))))) IS TRUE)  as count FROM rt0, vt0, t2, t0 ORDER BY (((t0.c1 IN (t0.c2)))+(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t2, t0 WHERE ((((CAST(rt0.c0 AS BLOB)))>=(((t0.c0 IN (rt0.c2, t0.c2)))))) ORDER BY (((t0.c1 IN (t0.c2)))+(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS BLOB)))>=(((t0.c0 IN (rt0.c2, t0.c2)))))) IS TRUE)  as count FROM rt0, vt0, t2, t0 ORDER BY (((t0.c1 IN (t0.c2)))+(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0, t2, t0 WHERE ((((CAST(rt0.c0 AS BLOB)))>=(((t0.c0 IN (rt0.c2, t0.c2)))))) ORDER BY (((t0.c1 IN (t0.c2)))+(CAST(rt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt1, t2 INNER JOIN vt0 ON CASE WHEN (- (rt0.c1)) THEN ((((t2.c2)OR(rt0.c3)))OR(t2.c1)) END WHERE (TYPEOF(IFNULL(rt0.c3, t2.c0))) ORDER BY CASE WHEN json_object(rt0.c1, vt1.c0) THEN 0.43679229997218527 WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CASE rt0.c0  WHEN vt0.c0 THEN t2.c1 WHEN 'z[F?	o' THEN rt0.c0 WHEN t2.c0 THEN rt0.c3 END WHEN vt1.c0 COLLATE RTRIM THEN (NOT (t2.c2)) END DESC, (((t2.c2 IN (t2.c2))) NOT BETWEEN ((- (vt1.c0))) AND (TYPEOF(DISTINCT rt0.c2))) DESC, (((t2.c0) NOT BETWEEN (0x6c98fdd1) AND (vt0.c0)) IN ((+ (rt0.c1)), (rt0.c1 IN (t2.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(IFNULL(rt0.c3, t2.c0))) IS TRUE)  as count FROM rt0, vt1, t2 INNER JOIN vt0 ON CASE WHEN (- (rt0.c1)) THEN ((((t2.c2)OR(rt0.c3)))OR(t2.c1)) END ORDER BY CASE WHEN json_object(rt0.c1, vt1.c0) THEN 0.43679229997218527 WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CASE rt0.c0  WHEN vt0.c0 THEN t2.c1 WHEN 'z[F?	o' THEN rt0.c0 WHEN t2.c0 THEN rt0.c3 END WHEN vt1.c0 COLLATE RTRIM THEN (NOT (t2.c2)) END DESC, (((t2.c2 IN (t2.c2))) NOT BETWEEN ((- (vt1.c0))) AND (TYPEOF(DISTINCT rt0.c2))) DESC, (((t2.c0) NOT BETWEEN (0x6c98fdd1) AND (vt0.c0)) IN ((+ (rt0.c1)), (rt0.c1 IN (t2.c1, rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, t2 INNER JOIN vt0 ON CASE WHEN (- (rt0.c1)) THEN ((((t2.c2)OR(rt0.c3)))OR(t2.c1)) END WHERE (TYPEOF(IFNULL(rt0.c3, t2.c0))) ORDER BY CASE WHEN json_object(rt0.c1, vt1.c0) THEN 0.43679229997218527 WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CASE rt0.c0  WHEN vt0.c0 THEN t2.c1 WHEN 'z[F?	o' THEN rt0.c0 WHEN t2.c0 THEN rt0.c3 END WHEN vt1.c0 COLLATE RTRIM THEN (NOT (t2.c2)) END DESC, (((t2.c2 IN (t2.c2))) NOT BETWEEN ((- (vt1.c0))) AND (TYPEOF(DISTINCT rt0.c2))) DESC, (((t2.c0) NOT BETWEEN (0x6c98fdd1) AND (vt0.c0)) IN ((+ (rt0.c1)), (rt0.c1 IN (t2.c1, rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(IFNULL(rt0.c3, t2.c0))) IS TRUE)  as count FROM rt0, vt1, t2 INNER JOIN vt0 ON CASE WHEN (- (rt0.c1)) THEN ((((t2.c2)OR(rt0.c3)))OR(t2.c1)) END ORDER BY CASE WHEN json_object(rt0.c1, vt1.c0) THEN 0.43679229997218527 WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CASE rt0.c0  WHEN vt0.c0 THEN t2.c1 WHEN 'z[F?	o' THEN rt0.c0 WHEN t2.c0 THEN rt0.c3 END WHEN vt1.c0 COLLATE RTRIM THEN (NOT (t2.c2)) END DESC, (((t2.c2 IN (t2.c2))) NOT BETWEEN ((- (vt1.c0))) AND (TYPEOF(DISTINCT rt0.c2))) DESC, (((t2.c0) NOT BETWEEN (0x6c98fdd1) AND (vt0.c0)) IN ((+ (rt0.c1)), (rt0.c1 IN (t2.c1, rt0.c1)))));
SELECT COUNT(*) FROM rt0, vt1, t2 INNER JOIN vt0 ON CASE WHEN (- (rt0.c1)) THEN ((((t2.c2)OR(rt0.c3)))OR(t2.c1)) END WHERE (TYPEOF(IFNULL(rt0.c3, t2.c0))) ORDER BY CASE WHEN json_object(rt0.c1, vt1.c0) THEN 0.43679229997218527 WHEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)) THEN CASE rt0.c0  WHEN vt0.c0 THEN t2.c1 WHEN 'z[F?	o' THEN rt0.c0 WHEN t2.c0 THEN rt0.c3 END WHEN vt1.c0 COLLATE RTRIM THEN (NOT (t2.c2)) END DESC, (((t2.c2 IN (t2.c2))) NOT BETWEEN ((- (vt1.c0))) AND (TYPEOF(DISTINCT rt0.c2))) DESC, (((t2.c0) NOT BETWEEN (0x6c98fdd1) AND (vt0.c0)) IN ((+ (rt0.c1)), (rt0.c1 IN (t2.c1, rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE));
SELECT COUNT(*) FROM vt1, vt0, rt0, t2 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t2.c1)) COLLATE RTRIM) ORDER BY ((((NULL) IS FALSE))/(((((((((rt0.c0)OR(rt0.c2)))AND('')))AND(0.9173032442106679)))OR(t2.c1))))  NULLS FIRST, ((+ (rt0.c0)) IN ()), (((t2.c2)) BETWEEN ((((vt0.c0)+(rt0.c1)))) AND ((LOWER(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0, t2 ORDER BY ((((NULL) IS FALSE))/(((((((((rt0.c0)OR(rt0.c2)))AND('')))AND(0.9173032442106679)))OR(t2.c1))))  NULLS FIRST, ((+ (rt0.c0)) IN ()), (((t2.c2)) BETWEEN ((((vt0.c0)+(rt0.c1)))) AND ((LOWER(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0, t2 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t2.c1)) COLLATE RTRIM) ORDER BY ((((NULL) IS FALSE))/(((((((((rt0.c0)OR(rt0.c2)))AND('')))AND(0.9173032442106679)))OR(t2.c1))))  NULLS FIRST, ((+ (rt0.c0)) IN ()), (((t2.c2)) BETWEEN ((((vt0.c0)+(rt0.c1)))) AND ((LOWER(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t2.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, vt0, rt0, t2 ORDER BY ((((NULL) IS FALSE))/(((((((((rt0.c0)OR(rt0.c2)))AND('')))AND(0.9173032442106679)))OR(t2.c1))))  NULLS FIRST, ((+ (rt0.c0)) IN ()), (((t2.c2)) BETWEEN ((((vt0.c0)+(rt0.c1)))) AND ((LOWER(rt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt1, vt0, rt0, t2 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(t2.c1)) COLLATE RTRIM) ORDER BY ((((NULL) IS FALSE))/(((((((((rt0.c0)OR(rt0.c2)))AND('')))AND(0.9173032442106679)))OR(t2.c1))))  NULLS FIRST, ((+ (rt0.c0)) IN ()), (((t2.c2)) BETWEEN ((((vt0.c0)+(rt0.c1)))) AND ((LOWER(rt0.c0))))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (t0.c2);
SELECT COUNT(*) FROM rt0, vt0, vt1, t2 WHERE (NULLIF(((t2.c0)|(rt0.c3)), CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t2.c0)|(rt0.c3)), CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt0, vt1, t2);
SELECT COUNT(*) FROM rt0, vt0, vt1, t2 WHERE (NULLIF(((t2.c0)|(rt0.c3)), CAST(vt1.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((t2.c0)|(rt0.c3)), CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM rt0, vt0, vt1, t2);
SELECT COUNT(*) FROM rt0, vt0, vt1, t2 WHERE (NULLIF(((t2.c0)|(rt0.c3)), CAST(vt1.c0 AS TEXT)));
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (UNICODE((((rt0.c3))<>((rt0.c3))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNICODE((((rt0.c3))<>((rt0.c3))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (UNICODE((((rt0.c3))<>((rt0.c3))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNICODE((((rt0.c3))<>((rt0.c3))))) IS TRUE)  as count FROM t0, vt1, vt0, rt0 ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt0 WHERE (UNICODE((((rt0.c3))<>((rt0.c3))))) ORDER BY (NOT (CAST(rt0.c0 AS NUMERIC))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((t0.c2)%(rt0.c3)) IN (TYPEOF(t0.c2))) WHERE (CASE WHEN (((rt0.c1, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c0, t0.c0))) THEN ((rt0.c1)<<(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c0, t0.c0))) THEN ((rt0.c1)<<(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((t0.c2)%(rt0.c3)) IN (TYPEOF(t0.c2))));
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((t0.c2)%(rt0.c3)) IN (TYPEOF(t0.c2))) WHERE (CASE WHEN (((rt0.c1, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c0, t0.c0))) THEN ((rt0.c1)<<(rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c0, t0.c0))) THEN ((rt0.c1)<<(rt0.c2)) END) IS TRUE)  as count FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((t0.c2)%(rt0.c3)) IN (TYPEOF(t0.c2))));
SELECT ALL * FROM vt1, rt0 LEFT OUTER JOIN t0 ON (((t0.c2)%(rt0.c3)) IN (TYPEOF(t0.c2))) WHERE (CASE WHEN (((rt0.c1, rt0.c2, rt0.c2))>=((rt0.c3, rt0.c0, t0.c0))) THEN ((rt0.c1)<<(rt0.c2)) END);
SELECT ALL * FROM rt0, t2, vt1 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY) ORDER BY (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((((t2.c0)AND(t2.c1)), CASE WHEN rt0.c1 THEN t2.c1 END, vt1.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (((t2.c2))=((t2.c0))), ((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, t2, vt1 ORDER BY (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((((t2.c0)AND(t2.c1)), CASE WHEN rt0.c1 THEN t2.c1 END, vt1.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (((t2.c2))==((t2.c0))), ((rt0.c0) IS TRUE)))));
SELECT ALL * FROM rt0, t2, vt1 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY) ORDER BY (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((((t2.c0)AND(t2.c1)), CASE WHEN rt0.c1 THEN t2.c1 END, vt1.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (((t2.c2))=((t2.c0))), ((rt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt0, t2, vt1 ORDER BY (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((((t2.c0)AND(t2.c1)), CASE WHEN rt0.c1 THEN t2.c1 END, vt1.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (((t2.c2))==((t2.c0))), ((rt0.c0) IS TRUE)))));
SELECT ALL * FROM rt0, t2, vt1 WHERE (CAST(rt0.c1 AS INTEGER) COLLATE BINARY) ORDER BY (((vt1.c0, rt0.c0, rt0.c1)) BETWEEN ((((t2.c0)AND(t2.c1)), CASE WHEN rt0.c1 THEN t2.c1 END, vt1.c0)) AND (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3))), (((t2.c2))=((t2.c0))), ((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt0, t2, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t2, t0);
SELECT ALL COUNT(*) FROM rt0, t2, t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0, t2, t0);
SELECT ALL COUNT(*) FROM rt0, t2, t0 WHERE (NULL);
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c2)IS NOT(vt1.c0)))) RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((CASE WHEN t0.c2 THEN rt0.c3 ELSE rt0.c3 END)+(((t0.c1)LIKE(vt1.c0))))) ORDER BY (((rt0.c1 IN ()))|(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN rt0.c3 ELSE rt0.c3 END)+(((t0.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c2)IS NOT(vt1.c0)))) RIGHT OUTER JOIN t0 ON t0.c0 ORDER BY (((rt0.c1 IN ()))|(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c2)IS NOT(vt1.c0)))) RIGHT OUTER JOIN t0 ON t0.c0 WHERE (((CASE WHEN t0.c2 THEN rt0.c3 ELSE rt0.c3 END)+(((t0.c1)LIKE(vt1.c0))))) ORDER BY (((rt0.c1 IN ()))|(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c2 THEN rt0.c3 ELSE rt0.c3 END)+(((t0.c1)LIKE(vt1.c0))))) IS TRUE)  as count FROM vt1, vt0 INNER JOIN rt0 ON ((CAST(rt0.c1 AS TEXT)) BETWEEN (CAST(t0.c0 AS NUMERIC)) AND (((t0.c2)IS NOT(vt1.c0)))) RIGHT OUTER JOIN t0 ON t0.c0 ORDER BY (((rt0.c1 IN ()))|(((vt1.c0) BETWEEN (vt0.c0) AND (t0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt1, t2 WHERE (((((t2.c2)AND(vt1.c0)))AND(t2.c2)) COLLATE RTRIM) ORDER BY (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC, ((((vt1.c0)AND(vt1.c0)))GLOB(0.2476293172196119));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)AND(vt1.c0)))AND(t2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t2 ORDER BY (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC, ((((vt1.c0)AND(vt1.c0)))GLOB(0.2476293172196119)));
SELECT ALL * FROM vt1, t2 WHERE (((((t2.c2)AND(vt1.c0)))AND(t2.c2)) COLLATE RTRIM) ORDER BY (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC, ((((vt1.c0)AND(vt1.c0)))GLOB(0.2476293172196119));
SELECT SUM(count) FROM (SELECT ((((((t2.c2)AND(vt1.c0)))AND(t2.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t2 ORDER BY (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC, ((((vt1.c0)AND(vt1.c0)))GLOB(0.2476293172196119)));
SELECT ALL * FROM vt1, t2 WHERE (((((t2.c2)AND(vt1.c0)))AND(t2.c2)) COLLATE RTRIM) ORDER BY (((((NULL)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) ISNULL) DESC, ((((vt1.c0)AND(vt1.c0)))GLOB(0.2476293172196119));
SELECT ALL * FROM t0, vt1, vt0, t2 WHERE (((((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) ORDER BY (((t0.c1)|(t0.c2)) IN (((t2.c1)IS NOT(vt0.c0)))), 0xfffffffffb4148f7 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0, t2 ORDER BY (((t0.c1)|(t0.c2)) IN (((t2.c1)IS NOT(vt0.c0)))), 0xfffffffffb4148f7 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0, t2 WHERE (((((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) ORDER BY (((t0.c1)|(t0.c2)) IN (((t2.c1)IS NOT(vt0.c0)))), 0xfffffffffb4148f7 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) IS TRUE)  as count FROM t0, vt1, vt0, t2 ORDER BY (((t0.c1)|(t0.c2)) IN (((t2.c1)IS NOT(vt0.c0)))), 0xfffffffffb4148f7 ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt1, vt0, t2 WHERE (((((t0.c0) NOT BETWEEN (t2.c2) AND (t2.c2))) IS FALSE)) ORDER BY (((t0.c1)|(t0.c2)) IN (((t2.c1)IS NOT(vt0.c0)))), 0xfffffffffb4148f7 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c2)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY WHERE (CASE ((t0.c0)|(t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)|(t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c2)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ORDER BY CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c2)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY WHERE (CASE ((t0.c0)|(t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c0)|(t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c2)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY ORDER BY CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) AS REAL));
SELECT ALL COUNT(*) FROM vt1 FULL OUTER JOIN t0 ON ((((t0.c2)AND(vt1.c0)))OR(vt1.c0)) COLLATE BINARY WHERE (CASE ((t0.c0)|(t0.c2))  WHEN t0.c0 COLLATE NOCASE THEN ((t0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END) ORDER BY CAST(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)) AS REAL);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt0.c2 COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt1, t0, vt0);
SELECT COUNT(*) FROM rt0, vt1, t0, vt0 WHERE (rt0.c2 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UPPER(vt1.c0) COLLATE BINARY) ORDER BY CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE, (((- ('-1689952041'))) NOT BETWEEN (x'') AND ((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt0.c0)))OR(0.6036229835806771)))*((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE, (((- ('-1689952041'))) NOT BETWEEN (x'') AND ((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt0.c0)))OR(0.6036229835806771)))*((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UPPER(vt1.c0) COLLATE BINARY) ORDER BY CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE, (((- ('-1689952041'))) NOT BETWEEN (x'') AND ((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt0.c0)))OR(0.6036229835806771)))*((vt1.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt1.c0) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE, (((- ('-1689952041'))) NOT BETWEEN (x'') AND ((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt0.c0)))OR(0.6036229835806771)))*((vt1.c0 IN ())))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (UPPER(vt1.c0) COLLATE BINARY) ORDER BY CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE NOCASE, (((- ('-1689952041'))) NOT BETWEEN (x'') AND ((((vt0.c0))>=((vt0.c0))))) DESC  NULLS FIRST, ((((((vt1.c0)AND(vt0.c0)))OR(0.6036229835806771)))*((vt1.c0 IN ())))  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t2.c2 THEN ' [8-4h욓a' END THEN t0.c2 WHEN (((t2.c1))<=((t0.c2))) THEN LAST_INSERT_ROWID() WHEN 'h%Jc砍' THEN (rt0.c2 IN ()) END LEFT OUTER JOIN t0 ON ((NULL) BETWEEN ((+ (t0.c0))) AND ((rt0.c3 IN ()))) RIGHT OUTER JOIN t2 ON (~ ((rt0.c2 IN ()))) INNER JOIN vt1 ON ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t2.c1) AND (t0.c2))) AND (CAST(t0.c0 AS NUMERIC))) WHERE ((((t2.c0)) NOT BETWEEN ((((t2.c2) IS FALSE))) AND ((STRFTIME(rt0.c1, t0.c0, rt0.c3))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0)) NOT BETWEEN ((((t2.c2) IS FALSE))) AND ((STRFTIME(rt0.c1, t0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t2.c2 THEN ' [8-4h욓a' END THEN t0.c2 WHEN (((t2.c1))<=((t0.c2))) THEN LAST_INSERT_ROWID() WHEN 'h%Jc砍' THEN (rt0.c2 IN ()) END LEFT OUTER JOIN t0 ON ((NULL) BETWEEN ((+ (t0.c0))) AND ((rt0.c3 IN ()))) RIGHT OUTER JOIN t2 ON (~ ((rt0.c2 IN ()))) INNER JOIN vt1 ON ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t2.c1) AND (t0.c2))) AND (CAST(t0.c0 AS NUMERIC))) ORDER BY NULL  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t2.c2 THEN ' [8-4h욓a' END THEN t0.c2 WHEN (((t2.c1))<=((t0.c2))) THEN LAST_INSERT_ROWID() WHEN 'h%Jc砍' THEN (rt0.c2 IN ()) END LEFT OUTER JOIN t0 ON ((NULL) BETWEEN ((+ (t0.c0))) AND ((rt0.c3 IN ()))) RIGHT OUTER JOIN t2 ON (~ ((rt0.c2 IN ()))) INNER JOIN vt1 ON ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t2.c1) AND (t0.c2))) AND (CAST(t0.c0 AS NUMERIC))) WHERE ((((t2.c0)) NOT BETWEEN ((((t2.c2) IS FALSE))) AND ((STRFTIME(rt0.c1, t0.c0, rt0.c3))))) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0)) NOT BETWEEN ((((t2.c2) IS FALSE))) AND ((STRFTIME(rt0.c1, t0.c0, rt0.c3))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE WHEN CASE WHEN t2.c2 THEN ' [8-4h욓a' END THEN t0.c2 WHEN (((t2.c1))<=((t0.c2))) THEN LAST_INSERT_ROWID() WHEN 'h%Jc砍' THEN (rt0.c2 IN ()) END LEFT OUTER JOIN t0 ON ((NULL) BETWEEN ((+ (t0.c0))) AND ((rt0.c3 IN ()))) RIGHT OUTER JOIN t2 ON (~ ((rt0.c2 IN ()))) INNER JOIN vt1 ON ((((((vt1.c0)AND(rt0.c0)))OR(rt0.c3))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t2.c1) AND (t0.c2))) AND (CAST(t0.c0 AS NUMERIC))) ORDER BY NULL  NULLS FIRST);
SELECT * FROM vt0, t2 WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt0, t2);
SELECT * FROM vt0, t2 WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt0, t2);
SELECT * FROM vt0, t2 WHERE (t2.c1);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<=((t0.c2 IN ()))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c0)))) ISNULL) WHERE ((((((((((((((((t0.c0)OR(rt0.c0)))OR(0xfffffffff067b2bf)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(t0.c2))))<>((CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END)))) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (((((t0.c2)OR(rt0.c0)))OR(rt0.c3))) AND (((rt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c0)OR(rt0.c0)))OR(0Xfffffffff067b2bf)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(t0.c2))))!=((CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<=((t0.c2 IN ()))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c0)))) ISNULL) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (((((t0.c2)OR(rt0.c0)))OR(rt0.c3))) AND (((rt0.c1) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<=((t0.c2 IN ()))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c0)))) ISNULL) WHERE ((((((((((((((((t0.c0)OR(rt0.c0)))OR(0xfffffffff067b2bf)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(t0.c2))))<>((CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END)))) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (((((t0.c2)OR(rt0.c0)))OR(rt0.c3))) AND (((rt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((t0.c0)OR(rt0.c0)))OR(0Xfffffffff067b2bf)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(t0.c2))))!=((CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<=((t0.c2 IN ()))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c0)))) ISNULL) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (((((t0.c2)OR(rt0.c0)))OR(rt0.c3))) AND (((rt0.c1) IS TRUE))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2) IS TRUE))<=((t0.c2 IN ()))) CROSS JOIN t0 ON (((((rt0.c0)) BETWEEN ((x'')) AND ((t0.c0)))) ISNULL) WHERE ((((((((((((((((t0.c0)OR(rt0.c0)))OR(0xfffffffff067b2bf)))OR(vt0.c0)))AND(rt0.c0)))OR(vt0.c0)))AND(t0.c2))))<>((CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 END)))) ORDER BY (((+ (rt0.c2))) NOT BETWEEN (((((t0.c2)OR(rt0.c0)))OR(rt0.c3))) AND (((rt0.c1) IS TRUE))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c2)OR(t0.c0)))OR(t0.c1)))<>(((t0.c1) IS TRUE)))) ORDER BY (~ (TRIM(t0.c2))), CAST((~ (t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))!=(((t0.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (TRIM(t0.c2))), CAST((~ (t0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c2)OR(t0.c0)))OR(t0.c1)))<>(((t0.c1) IS TRUE)))) ORDER BY (~ (TRIM(t0.c2))), CAST((~ (t0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))!=(((t0.c1) IS TRUE)))) IS TRUE)  as count FROM vt1, t0 ORDER BY (~ (TRIM(t0.c2))), CAST((~ (t0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM vt1, t0 WHERE (((((((t0.c2)OR(t0.c0)))OR(t0.c1)))<>(((t0.c1) IS TRUE)))) ORDER BY (~ (TRIM(t0.c2))), CAST((~ (t0.c0)) AS REAL) ASC;
SELECT ALL * FROM vt1, t2, rt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN (- (t2.c0)) WHEN CAST(t2.c2 AS NUMERIC) THEN SQLITE_VERSION() WHEN CASE vt1.c0  WHEN -302821193 THEN rt0.c0 END THEN ((vt1.c0)/(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c0)) THEN (- (t2.c0)) WHEN CAST(t2.c2 AS NUMERIC) THEN SQLITE_VERSION() WHEN CASE vt1.c0  WHEN -302821193 THEN rt0.c0 END THEN ((vt1.c0)/(NULL)) END) IS TRUE)  as count FROM vt1, t2, rt0);
SELECT ALL * FROM vt1, t2, rt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN (- (t2.c0)) WHEN CAST(t2.c2 AS NUMERIC) THEN SQLITE_VERSION() WHEN CASE vt1.c0  WHEN -302821193 THEN rt0.c0 END THEN ((vt1.c0)/(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt1.c0)) THEN (- (t2.c0)) WHEN CAST(t2.c2 AS NUMERIC) THEN SQLITE_VERSION() WHEN CASE vt1.c0  WHEN -302821193 THEN rt0.c0 END THEN ((vt1.c0)/(NULL)) END) IS TRUE)  as count FROM vt1, t2, rt0);
SELECT ALL * FROM vt1, t2, rt0 WHERE (CASE WHEN (NOT (vt1.c0)) THEN (- (t2.c0)) WHEN CAST(t2.c2 AS NUMERIC) THEN SQLITE_VERSION() WHEN CASE vt1.c0  WHEN -302821193 THEN rt0.c0 END THEN ((vt1.c0)/(NULL)) END);
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST(((rt0.c2)IS NOT(t0.c2)) AS TEXT) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (t0.c1 COLLATE RTRIM) AND (ABS(DISTINCT rt0.c0))) CROSS JOIN t2 ON CASE ((t0.c0)>=(rt0.c3))  WHEN ((t0.c1)==(rt0.c1)) THEN CASE t0.c0  WHEN t2.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN ((t0.c1)|(t0.c1)) THEN t2.c1 WHEN CASE t2.c0  WHEN rt0.c1 THEN t0.c1 END THEN (t0.c1 IN (t2.c2, rt0.c1)) END RIGHT OUTER JOIN rt0 ON ((((t0.c2) ISNULL))<=((((t2.c2)) BETWEEN (('1K7hs䖶]')) AND ((vt0.c0))))) WHERE (((x'0f28')!=(((rt0.c1)>=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'0f28')!=(((rt0.c1)>=(rt0.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON CAST(((rt0.c2)IS NOT(t0.c2)) AS TEXT) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (t0.c1 COLLATE RTRIM) AND (ABS(DISTINCT rt0.c0))) CROSS JOIN t2 ON CASE ((t0.c0)>=(rt0.c3))  WHEN ((t0.c1)=(rt0.c1)) THEN CASE t0.c0  WHEN t2.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN ((t0.c1)|(t0.c1)) THEN t2.c1 WHEN CASE t2.c0  WHEN rt0.c1 THEN t0.c1 END THEN (t0.c1 IN (t2.c2, rt0.c1)) END RIGHT OUTER JOIN rt0 ON ((((t0.c2) ISNULL))<=((((t2.c2)) BETWEEN (('1K7hs䖶]')) AND ((vt0.c0))))));
SELECT ALL * FROM vt1 FULL OUTER JOIN t0 ON CAST(((rt0.c2)IS NOT(t0.c2)) AS TEXT) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (t0.c1 COLLATE RTRIM) AND (ABS(DISTINCT rt0.c0))) CROSS JOIN t2 ON CASE ((t0.c0)>=(rt0.c3))  WHEN ((t0.c1)==(rt0.c1)) THEN CASE t0.c0  WHEN t2.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN ((t0.c1)|(t0.c1)) THEN t2.c1 WHEN CASE t2.c0  WHEN rt0.c1 THEN t0.c1 END THEN (t0.c1 IN (t2.c2, rt0.c1)) END RIGHT OUTER JOIN rt0 ON ((((t0.c2) ISNULL))<=((((t2.c2)) BETWEEN (('1K7hs䖶]')) AND ((vt0.c0))))) WHERE (((x'0f28')!=(((rt0.c1)>=(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'0f28')!=(((rt0.c1)>=(rt0.c3))))) IS TRUE)  as count FROM vt1 FULL OUTER JOIN t0 ON CAST(((rt0.c2)IS NOT(t0.c2)) AS TEXT) RIGHT OUTER JOIN vt0 ON (((rt0.c1 IN ())) BETWEEN (t0.c1 COLLATE RTRIM) AND (ABS(DISTINCT rt0.c0))) CROSS JOIN t2 ON CASE ((t0.c0)>=(rt0.c3))  WHEN ((t0.c1)=(rt0.c1)) THEN CASE t0.c0  WHEN t2.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END WHEN ((t0.c1)|(t0.c1)) THEN t2.c1 WHEN CASE t2.c0  WHEN rt0.c1 THEN t0.c1 END THEN (t0.c1 IN (t2.c2, rt0.c1)) END RIGHT OUTER JOIN rt0 ON ((((t0.c2) ISNULL))<=((((t2.c2)) BETWEEN (('1K7hs䖶]')) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM t2, t0, rt0 WHERE (CASE ((t0.c1)||(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END) ORDER BY (((0.13097564542575146))<=((CASE WHEN t2.c1 THEN rt0.c1 ELSE rt0.c1 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1)||(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM t2, t0, rt0 ORDER BY (((0.13097564542575146))<=((CASE WHEN t2.c1 THEN rt0.c1 ELSE rt0.c1 END))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0, rt0 WHERE (CASE ((t0.c1)||(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END) ORDER BY (((0.13097564542575146))<=((CASE WHEN t2.c1 THEN rt0.c1 ELSE rt0.c1 END))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c1)||(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END) IS TRUE)  as count FROM t2, t0, rt0 ORDER BY (((0.13097564542575146))<=((CASE WHEN t2.c1 THEN rt0.c1 ELSE rt0.c1 END))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t2, t0, rt0 WHERE (CASE ((t0.c1)||(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) END) ORDER BY (((0.13097564542575146))<=((CASE WHEN t2.c1 THEN rt0.c1 ELSE rt0.c1 END))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN LENGTH(vt1.c0) THEN ((t0.c1)<(rt0.c0)) WHEN (+ (t0.c0)) THEN ((rt0.c1)+(t0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 END END CROSS JOIN vt1 ON rt0.c3 WHERE (CAST(0.8485131037243652 AS TEXT)) ORDER BY 0.9173032442106679 ASC, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8485131037243652 AS TEXT)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN LENGTH(vt1.c0) THEN ((t0.c1)<(rt0.c0)) WHEN (+ (t0.c0)) THEN ((rt0.c1)+(t0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 END END CROSS JOIN vt1 ON rt0.c3 ORDER BY 0.9173032442106679 ASC, rt0.c2  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN LENGTH(vt1.c0) THEN ((t0.c1)<(rt0.c0)) WHEN (+ (t0.c0)) THEN ((rt0.c1)+(t0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 END END CROSS JOIN vt1 ON rt0.c3 WHERE (CAST(0.8485131037243652 AS TEXT)) ORDER BY 0.9173032442106679 ASC, rt0.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.8485131037243652 AS TEXT)) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN rt0 ON CASE WHEN LENGTH(vt1.c0) THEN ((t0.c1)<(rt0.c0)) WHEN (+ (t0.c0)) THEN ((rt0.c1)+(t0.c1)) WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c0  WHEN t0.c2 THEN vt0.c0 END END CROSS JOIN vt1 ON rt0.c3 ORDER BY 0.9173032442106679 ASC, rt0.c2  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0))<=((vt1.c0))))IS NOT((vt1.c0 IN ())))  NULLS LAST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0))))IS NOT((vt1.c0 IN ())))  NULLS LAST, vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0))<=((vt1.c0))))IS NOT((vt1.c0 IN ())))  NULLS LAST, vt1.c0;
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE NOCASE)IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0))<=((vt1.c0))))IS NOT((vt1.c0 IN ())))  NULLS LAST, vt1.c0);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE)IS(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) ORDER BY (((((vt1.c0))<=((vt1.c0))))IS NOT((vt1.c0 IN ())))  NULLS LAST, vt1.c0;
SELECT ALL * FROM vt1, t2 WHERE (((t2.c2)<=(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((t2.c2)OR('-1742594037')))AND(vt1.c0)))-(((vt1.c0)<=(t2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2)<=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t2 ORDER BY ((((((t2.c2)OR('-1742594037')))AND(vt1.c0)))-(((vt1.c0)<=(t2.c0)))) ASC);
SELECT ALL * FROM vt1, t2 WHERE (((t2.c2)<=(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((t2.c2)OR('-1742594037')))AND(vt1.c0)))-(((vt1.c0)<=(t2.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t2.c2)<=(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t2 ORDER BY ((((((t2.c2)OR('-1742594037')))AND(vt1.c0)))-(((vt1.c0)<=(t2.c0)))) ASC);
SELECT ALL * FROM vt1, t2 WHERE (((t2.c2)<=(vt1.c0)) COLLATE NOCASE) ORDER BY ((((((t2.c2)OR('-1742594037')))AND(vt1.c0)))-(((vt1.c0)<=(t2.c0)))) ASC;
SELECT ALL * FROM rt0, t2 NATURAL JOIN vt1 WHERE (vt1.c0) ORDER BY (~ (((t2.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, t2 NATURAL JOIN vt1 ORDER BY (~ (((t2.c0) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t2 NATURAL JOIN vt1 WHERE (vt1.c0) ORDER BY (~ (((t2.c0) IS FALSE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt0, t2 NATURAL JOIN vt1 ORDER BY (~ (((t2.c0) IS FALSE))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t2 NATURAL JOIN vt1 WHERE (vt1.c0) ORDER BY (~ (((t2.c0) IS FALSE))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t2 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)IS(0x7f77a319)) AS BLOB) WHERE ('0.9916814612026992') ORDER BY COALESCE('768786879', t2.c0, rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.9916814612026992') IS TRUE)  as count FROM rt0, t2 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)IS(0x7f77a319)) AS BLOB) ORDER BY COALESCE('768786879', t2.c0, rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t2 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)IS(0x7f77a319)) AS BLOB) WHERE ('0.9916814612026992') ORDER BY COALESCE('768786879', t2.c0, rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('0.9916814612026992') IS TRUE)  as count FROM rt0, t2 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)IS(0x7f77a319)) AS BLOB) ORDER BY COALESCE('768786879', t2.c0, rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t2 FULL OUTER JOIN vt0 ON CAST(((rt0.c2)IS(0x7f77a319)) AS BLOB) WHERE ('0.9916814612026992') ORDER BY COALESCE('768786879', t2.c0, rt0.c1, rt0.c2) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((CAST(t2.c2 AS NUMERIC)) NOTNULL) WHERE (CASE WHEN ((t0.c1)>(t0.c2)) THEN ((t0.c2) ISNULL) END) ORDER BY NULLIF(DISTINCT (((t0.c1, t2.c1, t0.c1)) NOT BETWEEN ((t2.c1, t2.c2, t0.c0)) AND ((t0.c2, t0.c0, t2.c2))), ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)>(t0.c2)) THEN ((t0.c2) ISNULL) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((CAST(t2.c2 AS NUMERIC)) NOTNULL) ORDER BY NULLIF(DISTINCT (((t0.c1, t2.c1, t0.c1)) NOT BETWEEN ((t2.c1, t2.c2, t0.c0)) AND ((t0.c2, t0.c0, t2.c2))), ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((CAST(t2.c2 AS NUMERIC)) NOTNULL) WHERE (CASE WHEN ((t0.c1)>(t0.c2)) THEN ((t0.c2) ISNULL) END) ORDER BY NULLIF(DISTINCT (((t0.c1, t2.c1, t0.c1)) NOT BETWEEN ((t2.c1, t2.c2, t0.c0)) AND ((t0.c2, t0.c0, t2.c2))), ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c1)>(t0.c2)) THEN ((t0.c2) ISNULL) END) IS TRUE)  as count FROM t0 FULL OUTER JOIN t2 ON ((CAST(t2.c2 AS NUMERIC)) NOTNULL) ORDER BY NULLIF(DISTINCT (((t0.c1, t2.c1, t0.c1)) NOT BETWEEN ((t2.c1, t2.c2, t0.c0)) AND ((t0.c2, t0.c0, t2.c2))), ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN t2 ON ((CAST(t2.c2 AS NUMERIC)) NOTNULL) WHERE (CASE WHEN ((t0.c1)>(t0.c2)) THEN ((t0.c2) ISNULL) END) ORDER BY NULLIF(DISTINCT (((t0.c1, t2.c1, t0.c1)) NOT BETWEEN ((t2.c1, t2.c2, t0.c0)) AND ((t0.c2, t0.c0, t2.c2))), ((t2.c0) BETWEEN (t0.c0) AND (t2.c0)))  NULLS FIRST;
SELECT * FROM t2, rt0 WHERE (rt0.c3) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c1)IS(((rt0.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t2, rt0 ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c1)IS(((rt0.c2) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM t2, rt0 WHERE (rt0.c3) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c1)IS(((rt0.c2) NOTNULL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM t2, rt0 ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c1)IS(((rt0.c2) NOTNULL))) ASC  NULLS LAST);
SELECT * FROM t2, rt0 WHERE (rt0.c3) ORDER BY rt0.c1 DESC  NULLS LAST, ((rt0.c1)IS(((rt0.c2) NOTNULL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1, t2 WHERE ((((t2.c0 IN ())) BETWEEN (NULL) AND ((- (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ())) BETWEEN (NULL) AND ((- (t2.c2))))) IS TRUE)  as count FROM vt0, vt1, t2);
SELECT COUNT(*) FROM vt0, vt1, t2 WHERE ((((t2.c0 IN ())) BETWEEN (NULL) AND ((- (t2.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((t2.c0 IN ())) BETWEEN (NULL) AND ((- (t2.c2))))) IS TRUE)  as count FROM vt0, vt1, t2);
SELECT COUNT(*) FROM vt0, vt1, t2 WHERE ((((t2.c0 IN ())) BETWEEN (NULL) AND ((- (t2.c2)))));
SELECT COUNT(*) FROM t2 WHERE (UPPER(t2.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t2.c0 COLLATE BINARY)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (UPPER(t2.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(t2.c0 COLLATE BINARY)) IS TRUE)  as count FROM t2);
SELECT COUNT(*) FROM t2 WHERE (UPPER(t2.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((((((vt0.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt0.c0)))))OR(((vt0.c0)<=('1921174114')))))AND((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((vt0.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt0.c0)))))OR(((vt0.c0)<=('1921174114')))))AND((vt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE (vt1.c0) ORDER BY (((((((((vt0.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt0.c0)))))OR(((vt0.c0)<=('1921174114')))))AND((vt0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1 ORDER BY (((((((((vt0.c0 IN (vt1.c0)))OR(CASE WHEN vt1.c0 THEN vt1.c0 END)))AND((NOT (vt0.c0)))))OR(((vt0.c0)<=('1921174114')))))AND((vt0.c0 IN ()))) ASC);
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t2 ON UPPER(DISTINCT ((vt0.c0)>(vt0.c0))) WHERE ((((((t2.c1)) NOT BETWEEN ((vt1.c0)) AND ((t2.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c1)) NOT BETWEEN ((vt1.c0)) AND ((t2.c1)))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t2 ON UPPER(DISTINCT ((vt0.c0)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t2 ON UPPER(DISTINCT ((vt0.c0)>(vt0.c0))) WHERE ((((((t2.c1)) NOT BETWEEN ((vt1.c0)) AND ((t2.c1)))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((((t2.c1)) NOT BETWEEN ((vt1.c0)) AND ((t2.c1)))) NOTNULL)) IS TRUE)  as count FROM vt1, vt0 LEFT OUTER JOIN t2 ON UPPER(DISTINCT ((vt0.c0)>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 LEFT OUTER JOIN t2 ON UPPER(DISTINCT ((vt0.c0)>(vt0.c0))) WHERE ((((((t2.c1)) NOT BETWEEN ((vt1.c0)) AND ((t2.c1)))) NOTNULL));
SELECT ALL * FROM t0, t2, vt1 WHERE ((- (((t0.c1)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c1)/(t0.c0))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE ((- (((t0.c1)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c1)/(t0.c0))))) IS TRUE)  as count FROM t0, t2, vt1);
SELECT ALL * FROM t0, t2, vt1 WHERE ((- (((t0.c1)/(t0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 END AS TEXT));
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c2))) IS TRUE) WHERE (((t0.c2)|(TYPEOF(DISTINCT t0.c1)))) ORDER BY (((NULL) NOT BETWEEN (rt0.c0) AND (NULL)) IN ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)|(TYPEOF(DISTINCT t0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c2))) IS TRUE) ORDER BY (((NULL) NOT BETWEEN (rt0.c0) AND (NULL)) IN ((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c2))) IS TRUE) WHERE (((t0.c2)|(TYPEOF(DISTINCT t0.c1)))) ORDER BY (((NULL) NOT BETWEEN (rt0.c0) AND (NULL)) IN ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)|(TYPEOF(DISTINCT t0.c1)))) IS TRUE)  as count FROM rt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c2))) IS TRUE) ORDER BY (((NULL) NOT BETWEEN (rt0.c0) AND (NULL)) IN ((t0.c0 IN ())))  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN t0 ON ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c2))) IS TRUE) WHERE (((t0.c2)|(TYPEOF(DISTINCT t0.c1)))) ORDER BY (((NULL) NOT BETWEEN (rt0.c0) AND (NULL)) IN ((t0.c0 IN ())))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t2, rt0, t0 WHERE (0xffffffffe2f04708 COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe2f04708 COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t2, rt0, t0);
SELECT ALL COUNT(*) FROM t2, rt0, t0 WHERE (0xffffffffe2f04708 COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffe2f04708 COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t2, rt0, t0);
SELECT ALL COUNT(*) FROM t2, rt0, t0 WHERE (0xffffffffe2f04708 COLLATE BINARY COLLATE RTRIM);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1, t2 WHERE (TRIM(DISTINCT (- (t2.c2)), (rt0.c0 IN ()))) ORDER BY ((((t0.c0)<>(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c2 END) AND (((rt0.c1) BETWEEN (vt1.c0) AND ('7홞Z')))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (t2.c2)), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, t0, vt0, vt1, t2 ORDER BY ((((t0.c0)<>(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c2 END) AND (((rt0.c1) BETWEEN (vt1.c0) AND ('7홞Z')))) ASC);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1, t2 WHERE (TRIM(DISTINCT (- (t2.c2)), (rt0.c0 IN ()))) ORDER BY ((((t0.c0)<>(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c2 END) AND (((rt0.c1) BETWEEN (vt1.c0) AND ('7홞Z')))) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT (- (t2.c2)), (rt0.c0 IN ()))) IS TRUE)  as count FROM rt0, t0, vt0, vt1, t2 ORDER BY ((((t0.c0)<>(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c2 END) AND (((rt0.c1) BETWEEN (vt1.c0) AND ('7홞Z')))) ASC);
SELECT COUNT(*) FROM rt0, t0, vt0, vt1, t2 WHERE (TRIM(DISTINCT (- (t2.c2)), (rt0.c0 IN ()))) ORDER BY ((((t0.c0)<>(rt0.c2))) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c2 ELSE t0.c2 END) AND (((rt0.c1) BETWEEN (vt1.c0) AND ('7홞Z')))) ASC;
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON vt1.c0 INNER JOIN rt0 ON CAST(((t2.c1) IS TRUE) AS NUMERIC) WHERE (t2.c1) ORDER BY ((CAST(rt0.c0 AS REAL))*(t2.c0 COLLATE RTRIM))  NULLS FIRST, (((t0.c0, t2.c2, rt0.c3)) BETWEEN ((t0.c1, t0.c1, t2.c0)) AND ((t0.c0, t0.c1, t2.c0))) COLLATE RTRIM, ((((NULL) IS FALSE)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((((((NULL)AND(t0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON vt1.c0 INNER JOIN rt0 ON CAST(((t2.c1) IS TRUE) AS NUMERIC) ORDER BY ((CAST(rt0.c0 AS REAL))*(t2.c0 COLLATE RTRIM))  NULLS FIRST, (((t0.c0, t2.c2, rt0.c3)) BETWEEN ((t0.c1, t0.c1, t2.c0)) AND ((t0.c0, t0.c1, t2.c0))) COLLATE RTRIM, ((((NULL) IS FALSE)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((((((NULL)AND(t0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON vt1.c0 INNER JOIN rt0 ON CAST(((t2.c1) IS TRUE) AS NUMERIC) WHERE (t2.c1) ORDER BY ((CAST(rt0.c0 AS REAL))*(t2.c0 COLLATE RTRIM))  NULLS FIRST, (((t0.c0, t2.c2, rt0.c3)) BETWEEN ((t0.c1, t0.c1, t2.c0)) AND ((t0.c0, t0.c1, t2.c0))) COLLATE RTRIM, ((((NULL) IS FALSE)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((((((NULL)AND(t0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt1, t2 CROSS JOIN t0 ON vt1.c0 INNER JOIN rt0 ON CAST(((t2.c1) IS TRUE) AS NUMERIC) ORDER BY ((CAST(rt0.c0 AS REAL))*(t2.c0 COLLATE RTRIM))  NULLS FIRST, (((t0.c0, t2.c2, rt0.c3)) BETWEEN ((t0.c1, t0.c1, t2.c0)) AND ((t0.c0, t0.c1, t2.c0))) COLLATE RTRIM, ((((NULL) IS FALSE)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((((((NULL)AND(t0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))) DESC  NULLS LAST);
SELECT ALL * FROM vt1, t2 CROSS JOIN t0 ON vt1.c0 INNER JOIN rt0 ON CAST(((t2.c1) IS TRUE) AS NUMERIC) WHERE (t2.c1) ORDER BY ((CAST(rt0.c0 AS REAL))*(t2.c0 COLLATE RTRIM))  NULLS FIRST, (((t0.c0, t2.c2, rt0.c3)) BETWEEN ((t0.c1, t0.c1, t2.c0)) AND ((t0.c0, t0.c1, t2.c0))) COLLATE RTRIM, ((((NULL) IS FALSE)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((((((NULL)AND(t0.c1)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)/(rt0.c3)) WHEN rt0.c0 THEN 1040049599 WHEN IFNULL(rt0.c0, rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) ORDER BY LOWER(rt0.c3)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)/(rt0.c3)) WHEN rt0.c0 THEN 1040049599 WHEN IFNULL(rt0.c0, rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c3)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)/(rt0.c3)) WHEN rt0.c0 THEN 1040049599 WHEN IFNULL(rt0.c0, rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) ORDER BY LOWER(rt0.c3)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)/(rt0.c3)) WHEN rt0.c0 THEN 1040049599 WHEN IFNULL(rt0.c0, rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) IS TRUE)  as count FROM rt0 ORDER BY LOWER(rt0.c3)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CASE NULL  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))) THEN ((rt0.c1)/(rt0.c3)) WHEN rt0.c0 THEN 1040049599 WHEN IFNULL(rt0.c0, rt0.c1) THEN rt0.c1 ELSE rt0.c0 END) ORDER BY LOWER(rt0.c3)  NULLS FIRST;
SELECT ALL * FROM t2 RIGHT OUTER JOIN rt0 ON ('1288058905' IN ()) INNER JOIN vt0 ON 0.5007843983854068 CROSS JOIN t0 ON ((((((((((((((t2.c2)IS(t0.c2)))OR(((t2.c2) ISNULL))))AND(ABS(DISTINCT t0.c2))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))))OR(((t0.c1)LIKE(t0.c0)))))AND(((vt0.c0) BETWEEN (t2.c2) AND (rt0.c3)))))AND(((vt1.c0) IS FALSE))) RIGHT OUTER JOIN vt1 ON CAST((~ (rt0.c1)) AS INTEGER) WHERE (((((t2.c0) NOT BETWEEN (t2.c2) AND (vt1.c0)))<=(((x'd091') NOT BETWEEN (rt0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) NOT BETWEEN (t2.c2) AND (vt1.c0)))<=(((x'd091') NOT BETWEEN (rt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN rt0 ON ('1288058905' IN ()) INNER JOIN vt0 ON 0.5007843983854068 CROSS JOIN t0 ON ((((((((((((((t2.c2)IS(t0.c2)))OR(((t2.c2) ISNULL))))AND(ABS(DISTINCT t0.c2))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))))OR(((t0.c1)LIKE(t0.c0)))))AND(((vt0.c0) BETWEEN (t2.c2) AND (rt0.c3)))))AND(((vt1.c0) IS FALSE))) RIGHT OUTER JOIN vt1 ON CAST((~ (rt0.c1)) AS INTEGER));
SELECT ALL * FROM t2 RIGHT OUTER JOIN rt0 ON ('1288058905' IN ()) INNER JOIN vt0 ON 0.5007843983854068 CROSS JOIN t0 ON ((((((((((((((t2.c2)IS(t0.c2)))OR(((t2.c2) ISNULL))))AND(ABS(DISTINCT t0.c2))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))))OR(((t0.c1)LIKE(t0.c0)))))AND(((vt0.c0) BETWEEN (t2.c2) AND (rt0.c3)))))AND(((vt1.c0) IS FALSE))) RIGHT OUTER JOIN vt1 ON CAST((~ (rt0.c1)) AS INTEGER) WHERE (((((t2.c0) NOT BETWEEN (t2.c2) AND (vt1.c0)))<=(((x'd091') NOT BETWEEN (rt0.c0) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t2.c0) NOT BETWEEN (t2.c2) AND (vt1.c0)))<=(((x'd091') NOT BETWEEN (rt0.c0) AND (t0.c1))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN rt0 ON ('1288058905' IN ()) INNER JOIN vt0 ON 0.5007843983854068 CROSS JOIN t0 ON ((((((((((((((t2.c2)IS(t0.c2)))OR(((t2.c2) ISNULL))))AND(ABS(DISTINCT t0.c2))))AND((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((vt0.c0))))))OR(((t0.c1)LIKE(t0.c0)))))AND(((vt0.c0) BETWEEN (t2.c2) AND (rt0.c3)))))AND(((vt1.c0) IS FALSE))) RIGHT OUTER JOIN vt1 ON CAST((~ (rt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t2 ON t2.c1 LEFT OUTER JOIN rt0 ON CASE WHEN (+ ('1213719107')) THEN ((rt0.c0)IS(rt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END INNER JOIN vt1 ON ((rt0.c3)%((+ (vt0.c0)))) WHERE ((((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))<(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))<(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t2 ON t2.c1 LEFT OUTER JOIN rt0 ON CASE WHEN (+ ('1213719107')) THEN ((rt0.c0)IS(rt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END INNER JOIN vt1 ON ((rt0.c3)%((+ (vt0.c0)))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN t2 ON t2.c1 LEFT OUTER JOIN rt0 ON CASE WHEN (+ ('1213719107')) THEN ((rt0.c0)IS(rt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END INNER JOIN vt1 ON ((rt0.c3)%((+ (vt0.c0)))) WHERE ((((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))<(((rt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((vt1.c0, rt0.c0, vt0.c0)) AND ((rt0.c1, vt1.c0, rt0.c3))))<(((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t2 ON t2.c1 LEFT OUTER JOIN rt0 ON CASE WHEN (+ ('1213719107')) THEN ((rt0.c0)IS(rt0.c0)) ELSE CAST(vt1.c0 AS INTEGER) END INNER JOIN vt1 ON ((rt0.c3)%((+ (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0, t2 INNER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t2.c1 END)>>(('992828372' IN ()))) WHERE (((((((rt0.c1)AND(vt0.c0)))AND((('')<<(vt1.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t2.c1))))) ORDER BY ((((((((((t2.c1)AND(rt0.c3)))OR(0.8963601787275925)))OR(0.0290879592484653)))OR(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt0.c0)))AND((('')<<(vt1.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t2.c1))))) IS TRUE)  as count FROM rt0, vt0, t2 INNER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t2.c1 END)>>(('992828372' IN ()))) ORDER BY ((((((((((t2.c1)AND(rt0.c3)))OR(0.8963601787275925)))OR(0.0290879592484653)))OR(vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t2 INNER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t2.c1 END)>>(('992828372' IN ()))) WHERE (((((((rt0.c1)AND(vt0.c0)))AND((('')<<(vt1.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t2.c1))))) ORDER BY ((((((((((t2.c1)AND(rt0.c3)))OR(0.8963601787275925)))OR(0.0290879592484653)))OR(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)AND(vt0.c0)))AND((('')<<(vt1.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t2.c1))))) IS TRUE)  as count FROM rt0, vt0, t2 INNER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t2.c1 END)>>(('992828372' IN ()))) ORDER BY ((((((((((t2.c1)AND(rt0.c3)))OR(0.8963601787275925)))OR(0.0290879592484653)))OR(vt1.c0))) NOT NULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, t2 INNER JOIN vt1 ON ((CASE rt0.c1  WHEN rt0.c0 THEN t2.c1 END)>>(('992828372' IN ()))) WHERE (((((((rt0.c1)AND(vt0.c0)))AND((('')<<(vt1.c0)))))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (t2.c1))))) ORDER BY ((((((((((t2.c1)AND(rt0.c3)))OR(0.8963601787275925)))OR(0.0290879592484653)))OR(vt1.c0))) NOT NULL)  NULLS LAST;
SELECT COUNT(*) FROM vt1, t2, rt0 WHERE (((t2.c1)%(t2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t2.c1)%(t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t2, rt0);
SELECT COUNT(*) FROM vt1, t2, rt0 WHERE (((t2.c1)%(t2.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((t2.c1)%(t2.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t2, rt0);
SELECT COUNT(*) FROM vt1, t2, rt0 WHERE (((t2.c1)%(t2.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t0, vt1);
SELECT COUNT(*) FROM vt0, rt0, t0, vt1 WHERE (vt0.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN 0X2d73ea4a THEN (((('F8')OR('-166470124')))AND(t0.c1)) ELSE ((t0.c0)|(t0.c1)) END WHERE (CAST((+ (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN 0X2d73ea4a THEN (((('F8')OR('-166470124')))AND(t0.c1)) ELSE ((t0.c0)|(t0.c1)) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN 0X2d73ea4a THEN (((('F8')OR('-166470124')))AND(t0.c1)) ELSE ((t0.c0)|(t0.c1)) END WHERE (CAST((+ (t0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (t0.c0)) AS TEXT)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN 0X2d73ea4a THEN (((('F8')OR('-166470124')))AND(t0.c1)) ELSE ((t0.c0)|(t0.c1)) END);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt1 ON CASE WHEN 0X2d73ea4a THEN (((('F8')OR('-166470124')))AND(t0.c1)) ELSE ((t0.c0)|(t0.c1)) END WHERE (CAST((+ (t0.c0)) AS TEXT));
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c0)IS NOT(rt0.c2)))OR((+ ('')))))AND((+ (rt0.c1)))))OR(((vt0.c0)AND(rt0.c0)))))AND(((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))) WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 END) IS TRUE)) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)  NULLS LAST, (~ (((rt0.c0) NOT NULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c0)IS NOT(rt0.c2)))OR((+ ('')))))AND((+ (rt0.c1)))))OR(((vt0.c0)AND(rt0.c0)))))AND(((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)  NULLS LAST, (~ (((rt0.c0) NOT NULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))  NULLS LAST);
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c0)IS NOT(rt0.c2)))OR((+ ('')))))AND((+ (rt0.c1)))))OR(((vt0.c0)AND(rt0.c0)))))AND(((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))) WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 END) IS TRUE)) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)  NULLS LAST, (~ (((rt0.c0) NOT NULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 END) IS TRUE)) IS TRUE)  as count FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c0)IS NOT(rt0.c2)))OR((+ ('')))))AND((+ (rt0.c1)))))OR(((vt0.c0)AND(rt0.c0)))))AND(((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)  NULLS LAST, (~ (((rt0.c0) NOT NULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))  NULLS LAST);
SELECT * FROM rt0, vt1 RIGHT OUTER JOIN vt0 ON ((((((((((vt1.c0)IS NOT(rt0.c2)))OR((+ ('')))))AND((+ (rt0.c1)))))OR(((vt0.c0)AND(rt0.c0)))))AND(((((vt1.c0)AND(rt0.c0)))OR(rt0.c2)))) WHERE (((CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 END) IS TRUE)) ORDER BY CAST(((vt1.c0)IS NOT(vt1.c0)) AS TEXT)  NULLS LAST, (~ (((rt0.c0) NOT NULL))) ASC  NULLS FIRST, TRIM(DISTINCT ((rt0.c2) NOT BETWEEN (vt0.c0) AND (vt1.c0)))  NULLS LAST;
SELECT ALL * FROM t0, t2 WHERE ((((((t0.c2)-(t2.c2))))<(((((NULL))>((t0.c1))))))) ORDER BY (((t2.c0)%(t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)-(t2.c2))))<(((((NULL))>((t0.c1))))))) IS TRUE)  as count FROM t0, t2 ORDER BY (((t2.c0)%(t0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM t0, t2 WHERE ((((((t0.c2)-(t2.c2))))<(((((NULL))>((t0.c1))))))) ORDER BY (((t2.c0)%(t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((t0.c2)-(t2.c2))))<(((((NULL))>((t0.c1))))))) IS TRUE)  as count FROM t0, t2 ORDER BY (((t2.c0)%(t0.c0)) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM t0, t2 WHERE ((((((t0.c2)-(t2.c2))))<(((((NULL))>((t0.c1))))))) ORDER BY (((t2.c0)%(t0.c0)) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ('<');
SELECT SUM(count) FROM (SELECT (('<') IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ('<');
SELECT SUM(count) FROM (SELECT (('<') IS TRUE)  as count FROM rt0, t0, vt1, vt0);
SELECT COUNT(*) FROM rt0, t0, vt1, vt0 WHERE ('<');
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(vt1.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (CAST(vt1.c0 COLLATE BINARY AS TEXT));
SELECT * FROM vt0, rt0, vt1 WHERE ((~ (vt1.c0))) ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c1, rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt1.c0, rt0.c3, rt0.c1))))) AND ((LIKELY(DISTINCT '2071390907'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c1, rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt1.c0, rt0.c3, rt0.c1))))) AND ((LIKELY(DISTINCT '2071390907')))));
SELECT * FROM vt0, rt0, vt1 WHERE ((~ (vt1.c0))) ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c1, rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt1.c0, rt0.c3, rt0.c1))))) AND ((LIKELY(DISTINCT '2071390907'))));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt1.c0))) IS TRUE)  as count FROM vt0, rt0, vt1 ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c1, rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt1.c0, rt0.c3, rt0.c1))))) AND ((LIKELY(DISTINCT '2071390907')))));
SELECT * FROM vt0, rt0, vt1 WHERE ((~ (vt1.c0))) ORDER BY (((rt0.c3)) NOT BETWEEN (((((rt0.c1, rt0.c3, x'')) BETWEEN ((rt0.c2, rt0.c3, rt0.c0)) AND ((vt1.c0, rt0.c3, rt0.c1))))) AND ((LIKELY(DISTINCT '2071390907'))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((-2.14026373E8)>>(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY CAST((t0.c1 IN ()) AS INTEGER), ((((vt1.c0)GLOB(t0.c1)))|(CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((-2.14026373E8)>>(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST((t0.c1 IN ()) AS INTEGER), ((((vt1.c0)GLOB(t0.c1)))|(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((-2.14026373E8)>>(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY CAST((t0.c1 IN ()) AS INTEGER), ((((vt1.c0)GLOB(t0.c1)))|(CAST(t0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((((-2.14026373E8)>>(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CAST((t0.c1 IN ()) AS INTEGER), ((((vt1.c0)GLOB(t0.c1)))|(CAST(t0.c0 AS INTEGER))));
SELECT ALL * FROM vt0, vt1, t0 WHERE (((-2.14026373E8)>>(((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))))) ORDER BY CAST((t0.c1 IN ()) AS INTEGER), ((((vt1.c0)GLOB(t0.c1)))|(CAST(t0.c0 AS INTEGER)));
SELECT ALL * FROM vt1, t2, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t2, rt0 NOT INDEXED);
SELECT ALL * FROM vt1, t2, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt1, t2, rt0 NOT INDEXED);
SELECT ALL * FROM vt1, t2, rt0 WHERE (x'');
SELECT COUNT(*) FROM t2, vt0 FULL OUTER JOIN rt0 ON (((0.6068492689493867)) BETWEEN ((((t0.c2) ISNULL))) AND (((+ (rt0.c1))))) RIGHT OUTER JOIN t0 ON ABS(((t2.c0) IS FALSE)) WHERE (LIKELY(((t2.c2)>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t2.c2)>(rt0.c3)))) IS TRUE)  as count FROM t2, vt0 FULL OUTER JOIN rt0 ON (((0.6068492689493867)) BETWEEN ((((t0.c2) ISNULL))) AND (((+ (rt0.c1))))) RIGHT OUTER JOIN t0 ON ABS(((t2.c0) IS FALSE)));
SELECT COUNT(*) FROM t2, vt0 FULL OUTER JOIN rt0 ON (((0.6068492689493867)) BETWEEN ((((t0.c2) ISNULL))) AND (((+ (rt0.c1))))) RIGHT OUTER JOIN t0 ON ABS(((t2.c0) IS FALSE)) WHERE (LIKELY(((t2.c2)>(rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(((t2.c2)>(rt0.c3)))) IS TRUE)  as count FROM t2, vt0 FULL OUTER JOIN rt0 ON (((0.6068492689493867)) BETWEEN ((((t0.c2) ISNULL))) AND (((+ (rt0.c1))))) RIGHT OUTER JOIN t0 ON ABS(((t2.c0) IS FALSE)));
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON load_extension(((t2.c1)/(vt0.c0)), ((((t2.c2)AND(t0.c2)))OR(vt0.c0))) FULL OUTER JOIN vt0 ON 0.8101831433653902 CROSS JOIN vt1 ON ((t0.c1) NOTNULL) COLLATE NOCASE WHERE ((((CAST(2037344433 AS REAL)))<>((((t2.c1)*(vt1.c0)))))) ORDER BY (((t2.c1 IN ())) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(2037344433 AS REAL)))<>((((t2.c1)*(vt1.c0)))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON load_extension(((t2.c1)/(vt0.c0)), ((((t2.c2)AND(t0.c2)))OR(vt0.c0))) FULL OUTER JOIN vt0 ON 0.8101831433653902 CROSS JOIN vt1 ON ((t0.c1) NOTNULL) COLLATE NOCASE ORDER BY (((t2.c1 IN ())) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) DESC  NULLS LAST);
SELECT ALL * FROM t2 LEFT OUTER JOIN t0 ON load_extension(((t2.c1)/(vt0.c0)), ((((t2.c2)AND(t0.c2)))OR(vt0.c0))) FULL OUTER JOIN vt0 ON 0.8101831433653902 CROSS JOIN vt1 ON ((t0.c1) NOTNULL) COLLATE NOCASE WHERE ((((CAST(2037344433 AS REAL)))<>((((t2.c1)*(vt1.c0)))))) ORDER BY (((t2.c1 IN ())) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(2037344433 AS REAL)))<>((((t2.c1)*(vt1.c0)))))) IS TRUE)  as count FROM t2 LEFT OUTER JOIN t0 ON load_extension(((t2.c1)/(vt0.c0)), ((((t2.c2)AND(t0.c2)))OR(vt0.c0))) FULL OUTER JOIN vt0 ON 0.8101831433653902 CROSS JOIN vt1 ON ((t0.c1) NOTNULL) COLLATE NOCASE ORDER BY (((t2.c1 IN ())) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) AND (TYPEOF(DISTINCT vt0.c0))) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((((x'')AND((NOT (vt1.c0)))))AND(-804740703)));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((NOT (vt1.c0)))))AND(-804740703))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((x'')AND((NOT (vt1.c0)))))AND(-804740703)));
SELECT SUM(count) FROM (SELECT ((((((x'')AND((NOT (vt1.c0)))))AND(-804740703))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (((((x'')AND((NOT (vt1.c0)))))AND(-804740703)));
SELECT ALL COUNT(*) FROM vt1, rt0, t2, vt0 WHERE (CAST((((rt0.c0))<((rt0.c2))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, t2, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t2, vt0 WHERE (CAST((((rt0.c0))<((rt0.c2))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c0))<((rt0.c2))) AS INTEGER)) IS TRUE)  as count FROM vt1, rt0, t2, vt0);
SELECT ALL COUNT(*) FROM vt1, rt0, t2, vt0 WHERE (CAST((((rt0.c0))<((rt0.c2))) AS INTEGER));
SELECT * FROM t2, t0, vt0, vt1 WHERE (((('쿂2oofbox')) NOT BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) ORDER BY (((NOT (t2.c1)))<((vt0.c0 IN (t0.c2, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('쿂2oofbox')) NOT BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) IS TRUE)  as count FROM t2, t0, vt0, vt1 ORDER BY (((NOT (t2.c1)))<((vt0.c0 IN (t0.c2, vt1.c0)))) DESC);
SELECT * FROM t2, t0, vt0, vt1 WHERE (((('쿂2oofbox')) NOT BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) ORDER BY (((NOT (t2.c1)))<((vt0.c0 IN (t0.c2, vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((('쿂2oofbox')) NOT BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) IS TRUE)  as count FROM t2, t0, vt0, vt1 ORDER BY (((NOT (t2.c1)))<((vt0.c0 IN (t0.c2, vt1.c0)))) DESC);
SELECT * FROM t2, t0, vt0, vt1 WHERE (((('쿂2oofbox')) NOT BETWEEN ((t2.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1)))))) ORDER BY (((NOT (t2.c1)))<((vt0.c0 IN (t0.c2, vt1.c0)))) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c3 IN ()))) FULL OUTER JOIN t2 ON ((rt0.c1)%(t2.c1 COLLATE BINARY)) WHERE ((+ (((((((((vt1.c0)OR(t2.c2)))AND(0.06914602226613598)))OR(t2.c1)))OR('')))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt1.c0)OR(t2.c2)))AND(0.06914602226613598)))OR(t2.c1)))OR(''))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c3 IN ()))) FULL OUTER JOIN t2 ON ((rt0.c1)%(t2.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c3 IN ()))) FULL OUTER JOIN t2 ON ((rt0.c1)%(t2.c1 COLLATE BINARY)) WHERE ((+ (((((((((vt1.c0)OR(t2.c2)))AND(0.06914602226613598)))OR(t2.c1)))OR('')))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt1.c0)OR(t2.c2)))AND(0.06914602226613598)))OR(t2.c1)))OR(''))))) IS TRUE)  as count FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c3 IN ()))) FULL OUTER JOIN t2 ON ((rt0.c1)%(t2.c1 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 INNER JOIN rt0 ON (~ ((rt0.c3 IN ()))) FULL OUTER JOIN t2 ON ((rt0.c1)%(t2.c1 COLLATE BINARY)) WHERE ((+ (((((((((vt1.c0)OR(t2.c2)))AND(0.06914602226613598)))OR(t2.c1)))OR('')))));
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1) ISNULL)))>((0.706649022154343))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) ISNULL)))>((0.706649022154343)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1) ISNULL)))>((0.706649022154343))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1) ISNULL)))>((0.706649022154343)))) IS TRUE)  as count FROM rt0, vt1);
SELECT ALL COUNT(*) FROM rt0, vt1 WHERE ((((((rt0.c1) ISNULL)))>((0.706649022154343))));
SELECT ALL COUNT(*) FROM rt0, t2, vt1, vt0 WHERE (((((TRIM(vt1.c0, vt0.c0))AND((((t2.c1)) NOT BETWEEN ((t2.c2)) AND ((t2.c2))))))OR(rt0.c3))) ORDER BY t2.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt1.c0, vt0.c0))AND((((t2.c1)) NOT BETWEEN ((t2.c2)) AND ((t2.c2))))))OR(rt0.c3))) IS TRUE)  as count FROM rt0, t2, vt1, vt0 ORDER BY t2.c0);
SELECT ALL COUNT(*) FROM rt0, t2, vt1, vt0 WHERE (((((TRIM(vt1.c0, vt0.c0))AND((((t2.c1)) NOT BETWEEN ((t2.c2)) AND ((t2.c2))))))OR(rt0.c3))) ORDER BY t2.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt1.c0, vt0.c0))AND((((t2.c1)) NOT BETWEEN ((t2.c2)) AND ((t2.c2))))))OR(rt0.c3))) IS TRUE)  as count FROM rt0, t2, vt1, vt0 ORDER BY t2.c0);
SELECT ALL COUNT(*) FROM rt0, t2, vt1, vt0 WHERE (((((TRIM(vt1.c0, vt0.c0))AND((((t2.c1)) NOT BETWEEN ((t2.c2)) AND ((t2.c2))))))OR(rt0.c3))) ORDER BY t2.c0;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.34891214436114437 LEFT OUTER JOIN vt1 ON ((t2.c0)==(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((x'c68e')*(((rt0.c1) ISNULL))) WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c1 END AS NUMERIC)) ORDER BY LIKELY(NULLIF(t2.c2, rt0.c3)), (+ (rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.34891214436114437 LEFT OUTER JOIN vt1 ON ((t2.c0)=(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((x'c68e')*(((rt0.c1) ISNULL))) ORDER BY LIKELY(NULLIF(t2.c2, rt0.c3)), (+ (rt0.c0 COLLATE RTRIM)) ASC);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON 0.34891214436114437 LEFT OUTER JOIN vt1 ON ((t2.c0)==(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((x'c68e')*(((rt0.c1) ISNULL))) WHERE (CAST(CASE WHEN vt1.c0 THEN rt0.c1 END AS NUMERIC)) ORDER BY LIKELY(NULLIF(t2.c2, rt0.c3)), (+ (rt0.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt1.c0 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON 0.34891214436114437 LEFT OUTER JOIN vt1 ON ((t2.c0)=(vt0.c0)) COLLATE NOCASE LEFT OUTER JOIN t2 ON ((x'c68e')*(((rt0.c1) ISNULL))) ORDER BY LIKELY(NULLIF(t2.c2, rt0.c3)), (+ (rt0.c0 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t2 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t2.c0))) AS TEXT) INNER JOIN vt1 ON x'' FULL OUTER JOIN t0 ON UPPER(DISTINCT ((t2.c2)OR(vt1.c0))) WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t2 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t2.c0))) AS TEXT) INNER JOIN vt1 ON x'' FULL OUTER JOIN t0 ON UPPER(DISTINCT ((t2.c2)OR(vt1.c0))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t2 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t2.c0))) AS TEXT) INNER JOIN vt1 ON x'' FULL OUTER JOIN t0 ON UPPER(DISTINCT ((t2.c2)OR(vt1.c0))) WHERE (t2.c1);
SELECT SUM(count) FROM (SELECT ((t2.c1) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t2 ON CAST((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t2.c0))) AS TEXT) INNER JOIN vt1 ON x'' FULL OUTER JOIN t0 ON UPPER(DISTINCT ((t2.c2)OR(vt1.c0))));
SELECT ALL * FROM t2 RIGHT OUTER JOIN rt0 ON json_array_length(CASE -60515633  WHEN t2.c2 THEN vt1.c0 WHEN t2.c0 THEN vt0.c0 WHEN rt0.c1 THEN t2.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN t2.c2 END) RIGHT OUTER JOIN vt0 ON 1011900068 CROSS JOIN vt1 ON ((x'') NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND (CAST(t2.c1 AS TEXT))) WHERE ((+ (((vt1.c0)+(rt0.c1))))) ORDER BY t2.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)+(rt0.c1))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN rt0 ON json_array_length(CASE -60515633  WHEN t2.c2 THEN vt1.c0 WHEN t2.c0 THEN vt0.c0 WHEN rt0.c1 THEN t2.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN t2.c2 END) RIGHT OUTER JOIN vt0 ON 1011900068 CROSS JOIN vt1 ON ((x'') NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND (CAST(t2.c1 AS TEXT))) ORDER BY t2.c2 ASC  NULLS LAST);
SELECT ALL * FROM t2 RIGHT OUTER JOIN rt0 ON json_array_length(CASE -60515633  WHEN t2.c2 THEN vt1.c0 WHEN t2.c0 THEN vt0.c0 WHEN rt0.c1 THEN t2.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN t2.c2 END) RIGHT OUTER JOIN vt0 ON 1011900068 CROSS JOIN vt1 ON ((x'') NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND (CAST(t2.c1 AS TEXT))) WHERE ((+ (((vt1.c0)+(rt0.c1))))) ORDER BY t2.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ (((vt1.c0)+(rt0.c1))))) IS TRUE)  as count FROM t2 RIGHT OUTER JOIN rt0 ON json_array_length(CASE -60515633  WHEN t2.c2 THEN vt1.c0 WHEN t2.c0 THEN vt0.c0 WHEN rt0.c1 THEN t2.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN t2.c2 END) RIGHT OUTER JOIN vt0 ON 1011900068 CROSS JOIN vt1 ON ((x'') NOT BETWEEN (CAST(t2.c0 AS TEXT)) AND (CAST(t2.c1 AS TEXT))) ORDER BY t2.c2 ASC  NULLS LAST);
SELECT ALL * FROM t2 WHERE (HEX(t2.c1) COLLATE RTRIM) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t2.c1) COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY NULL);
SELECT ALL * FROM t2 WHERE (HEX(t2.c1) COLLATE RTRIM) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((HEX(t2.c1) COLLATE RTRIM) IS TRUE)  as count FROM t2 ORDER BY NULL);
SELECT ALL * FROM t2 WHERE (HEX(t2.c1) COLLATE RTRIM) ORDER BY NULL;
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND ('%W')))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) ORDER BY (((((vt0.c0))>=((vt1.c0)))) BETWEEN (((('j4', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'4a90' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND ('%W')))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0))>=((vt1.c0)))) BETWEEN (((('j4', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'4a90' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND ('%W')))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) ORDER BY (((((vt0.c0))>=((vt1.c0)))) BETWEEN (((('j4', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'4a90' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt1.c0) AND ('%W')))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0))>=((vt1.c0)))) BETWEEN (((('j4', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'4a90' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt1.c0) AND ('%W')))>=(((vt1.c0) NOT BETWEEN (vt1.c0) AND (NULL))))) ORDER BY (((((vt0.c0))>=((vt1.c0)))) BETWEEN (((('j4', vt0.c0, vt0.c0)) BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0)))) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN x'4a90' WHEN vt0.c0 THEN vt0.c0 ELSE NULL END)) ASC;
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (vt1.c0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((+ (t0.c0)))AND(((t0.c1)OR(0.5702758387640752)))))OR(CASE 1.774896223E9  WHEN '2138546969' THEN t0.c1 ELSE t0.c1 END))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))AND(((t0.c1)OR(0.5702758387640752)))))OR(CASE 1.774896223E9  WHEN '2138546969' THEN t0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((+ (t0.c0)))AND(((t0.c1)OR(0.5702758387640752)))))OR(CASE 1.774896223E9  WHEN '2138546969' THEN t0.c1 ELSE t0.c1 END))) ORDER BY t0.c2 ASC;
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c0)))AND(((t0.c1)OR(0.5702758387640752)))))OR(CASE 1.774896223E9  WHEN '2138546969' THEN t0.c1 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 ASC);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((+ (t0.c0)))AND(((t0.c1)OR(0.5702758387640752)))))OR(CASE 1.774896223E9  WHEN '2138546969' THEN t0.c1 ELSE t0.c1 END))) ORDER BY t0.c2 ASC;
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, vt1.c0 DESC);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOT NULL)) ORDER BY ((((((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))-(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))  NULLS LAST, vt1.c0 DESC;
SELECT * FROM t0, rt0, t2 WHERE ((((((t0.c2 IN (t0.c1, t0.c0, rt0.c1)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (t2.c0)))))AND(((((((((t0.c0)AND(rt0.c2)))AND(t2.c2)))AND(rt0.c3)))AND('1633320877'))))) ORDER BY CAST(TRIM(DISTINCT '898129129', t0.c1) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2 IN (t0.c1, t0.c0, rt0.c1)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (t2.c0)))))AND(((((((((t0.c0)AND(rt0.c2)))AND(t2.c2)))AND(rt0.c3)))AND('1633320877'))))) IS TRUE)  as count FROM t0, rt0, t2 ORDER BY CAST(TRIM(DISTINCT '898129129', t0.c1) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, t2 WHERE ((((((t0.c2 IN (t0.c1, t0.c0, rt0.c1)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (t2.c0)))))AND(((((((((t0.c0)AND(rt0.c2)))AND(t2.c2)))AND(rt0.c3)))AND('1633320877'))))) ORDER BY CAST(TRIM(DISTINCT '898129129', t0.c1) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c2 IN (t0.c1, t0.c0, rt0.c1)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (t2.c0)))))AND(((((((((t0.c0)AND(rt0.c2)))AND(t2.c2)))AND(rt0.c3)))AND('1633320877'))))) IS TRUE)  as count FROM t0, rt0, t2 ORDER BY CAST(TRIM(DISTINCT '898129129', t0.c1) AS TEXT) DESC  NULLS FIRST);
SELECT * FROM t0, rt0, t2 WHERE ((((((t0.c2 IN (t0.c1, t0.c0, rt0.c1)))AND(((rt0.c3) BETWEEN (rt0.c2) AND (t2.c0)))))AND(((((((((t0.c0)AND(rt0.c2)))AND(t2.c2)))AND(rt0.c3)))AND('1633320877'))))) ORDER BY CAST(TRIM(DISTINCT '898129129', t0.c1) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt1 WHERE (((NULL)IS(NULL))) ORDER BY (((- (vt1.c0))) BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (((vt1.c0)<=(vt1.c0)))), CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0))) BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (((vt1.c0)<=(vt1.c0)))), CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)IS(NULL))) ORDER BY (((- (vt1.c0))) BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (((vt1.c0)<=(vt1.c0)))), CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)IS(NULL))) IS TRUE)  as count FROM vt1 ORDER BY (((- (vt1.c0))) BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (((vt1.c0)<=(vt1.c0)))), CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (((NULL)IS(NULL))) ORDER BY (((- (vt1.c0))) BETWEEN (IFNULL(vt1.c0, vt1.c0)) AND (((vt1.c0)<=(vt1.c0)))), CASE WHEN vt1.c0 THEN vt1.c0 COLLATE BINARY ELSE CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END END  NULLS FIRST;
SELECT COUNT(*) FROM vt1, t0, t2, rt0 WHERE ((+ (((((rt0.c3)AND(t0.c2)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c3)AND(t0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, t0, t2, rt0);
SELECT COUNT(*) FROM vt1, t0, t2, rt0 WHERE ((+ (((((rt0.c3)AND(t0.c2)))AND(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((((rt0.c3)AND(t0.c2)))AND(rt0.c3))))) IS TRUE)  as count FROM vt1, t0, t2, rt0);
SELECT COUNT(*) FROM vt1, t0, t2, rt0 WHERE ((+ (((((rt0.c3)AND(t0.c2)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM t2 WHERE (CAST((((t2.c0)) NOT BETWEEN ((0.5356257656886239)) AND ((t2.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t2.c0)) NOT BETWEEN ((0.5356257656886239)) AND ((t2.c0))) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST((((t2.c0)) NOT BETWEEN ((0.5356257656886239)) AND ((t2.c0))) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((((t2.c0)) NOT BETWEEN ((0.5356257656886239)) AND ((t2.c0))) AS TEXT)) IS TRUE)  as count FROM t2);
SELECT ALL COUNT(*) FROM t2 WHERE (CAST((((t2.c0)) NOT BETWEEN ((0.5356257656886239)) AND ((t2.c0))) AS TEXT));
SELECT * FROM t2, vt0, vt1 WHERE ((((((((((+ (t2.c2)))AND(CAST(t2.c0 AS INTEGER))))OR(((vt0.c0)!=('')))))OR(((NULL)+(vt1.c0)))))AND((NOT (t2.c2))))) ORDER BY ((NULL IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t2.c2)))AND(CAST(t2.c0 AS INTEGER))))OR(((vt0.c0)!=('')))))OR(((NULL)+(vt1.c0)))))AND((NOT (t2.c2))))) IS TRUE)  as count FROM t2, vt0, vt1 ORDER BY ((NULL IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM t2, vt0, vt1 WHERE ((((((((((+ (t2.c2)))AND(CAST(t2.c0 AS INTEGER))))OR(((vt0.c0)!=('')))))OR(((NULL)+(vt1.c0)))))AND((NOT (t2.c2))))) ORDER BY ((NULL IN ()) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((+ (t2.c2)))AND(CAST(t2.c0 AS INTEGER))))OR(((vt0.c0)!=('')))))OR(((NULL)+(vt1.c0)))))AND((NOT (t2.c2))))) IS TRUE)  as count FROM t2, vt0, vt1 ORDER BY ((NULL IN ()) IN ()) ASC  NULLS LAST);
SELECT * FROM t2, vt0, vt1 WHERE ((((((((((+ (t2.c2)))AND(CAST(t2.c0 AS INTEGER))))OR(((vt0.c0)!=('')))))OR(((NULL)+(vt1.c0)))))AND((NOT (t2.c2))))) ORDER BY ((NULL IN ()) IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t2, vt1, t0 INNER JOIN vt0 ON rt0.c1 WHERE ((((- (rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t2, vt1, t0 INNER JOIN vt0 ON rt0.c1);
SELECT COUNT(*) FROM rt0, t2, vt1, t0 INNER JOIN vt0 ON rt0.c1 WHERE ((((- (rt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, t2, vt1, t0 INNER JOIN vt0 ON rt0.c1);
SELECT COUNT(*) FROM rt0, t2, vt1, t0 INNER JOIN vt0 ON rt0.c1 WHERE ((((- (rt0.c0))) NOTNULL));
SELECT * FROM rt0, vt1, t0, t2 WHERE (((vt1.c0) NOT BETWEEN (((((t2.c1)OR(rt0.c3)))AND(t2.c0))) AND (((x'') BETWEEN (rt0.c0) AND (t2.c1))))) ORDER BY CASE WHEN ((t0.c0)LIKE(t0.c2)) THEN t0.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (((((t2.c1)OR(rt0.c3)))AND(t2.c0))) AND (((x'') BETWEEN (rt0.c0) AND (t2.c1))))) IS TRUE)  as count FROM rt0, vt1, t0, t2 ORDER BY CASE WHEN ((t0.c0)LIKE(t0.c2)) THEN t0.c1 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT * FROM rt0, vt1, t0, t2 WHERE (((vt1.c0) NOT BETWEEN (((((t2.c1)OR(rt0.c3)))AND(t2.c0))) AND (((x'') BETWEEN (rt0.c0) AND (t2.c1))))) ORDER BY CASE WHEN ((t0.c0)LIKE(t0.c2)) THEN t0.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) NOT BETWEEN (((((t2.c1)OR(rt0.c3)))AND(t2.c0))) AND (((x'') BETWEEN (rt0.c0) AND (t2.c1))))) IS TRUE)  as count FROM rt0, vt1, t0, t2 ORDER BY CASE WHEN ((t0.c0)LIKE(t0.c2)) THEN t0.c1 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT * FROM rt0, vt1, t0, t2 WHERE (((vt1.c0) NOT BETWEEN (((((t2.c1)OR(rt0.c3)))AND(t2.c0))) AND (((x'') BETWEEN (rt0.c0) AND (t2.c1))))) ORDER BY CASE WHEN ((t0.c0)LIKE(t0.c2)) THEN t0.c1 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT * FROM t2, t0, rt0, vt0 WHERE (CAST(((t0.c2)||(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)||(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM t2, t0, rt0, vt0);
SELECT * FROM t2, t0, rt0, vt0 WHERE (CAST(((t0.c2)||(rt0.c3)) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2)||(rt0.c3)) AS BLOB)) IS TRUE)  as count FROM t2, t0, rt0, vt0);
SELECT * FROM t2, t0, rt0, vt0 WHERE (CAST(((t0.c2)||(rt0.c3)) AS BLOB));
SELECT * FROM vt1, t0 FULL OUTER JOIN t2 ON ((TRIM(t0.c0))==(t2.c2)) FULL OUTER JOIN rt0 ON ((rt0.c3)==(t2.c2)) COLLATE NOCASE WHERE (((CASE t0.c0  WHEN rt0.c3 THEN t2.c2 WHEN t0.c2 THEN x'' WHEN '-268324219' THEN rt0.c1 ELSE t2.c1 END)-(TRIM(DISTINCT t2.c0, rt0.c1)))) ORDER BY CAST((t0.c1 IN (t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c3 THEN t2.c2 WHEN t0.c2 THEN x'' WHEN '-268324219' THEN rt0.c1 ELSE t2.c1 END)-(TRIM(DISTINCT t2.c0, rt0.c1)))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN t2 ON ((TRIM(t0.c0))=(t2.c2)) FULL OUTER JOIN rt0 ON ((rt0.c3)==(t2.c2)) COLLATE NOCASE ORDER BY CAST((t0.c1 IN (t0.c0)) AS BLOB)  NULLS FIRST);
SELECT * FROM vt1, t0 FULL OUTER JOIN t2 ON ((TRIM(t0.c0))==(t2.c2)) FULL OUTER JOIN rt0 ON ((rt0.c3)==(t2.c2)) COLLATE NOCASE WHERE (((CASE t0.c0  WHEN rt0.c3 THEN t2.c2 WHEN t0.c2 THEN x'' WHEN '-268324219' THEN rt0.c1 ELSE t2.c1 END)-(TRIM(DISTINCT t2.c0, rt0.c1)))) ORDER BY CAST((t0.c1 IN (t0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN rt0.c3 THEN t2.c2 WHEN t0.c2 THEN x'' WHEN '-268324219' THEN rt0.c1 ELSE t2.c1 END)-(TRIM(DISTINCT t2.c0, rt0.c1)))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN t2 ON ((TRIM(t0.c0))=(t2.c2)) FULL OUTER JOIN rt0 ON ((rt0.c3)==(t2.c2)) COLLATE NOCASE ORDER BY CAST((t0.c1 IN (t0.c0)) AS BLOB)  NULLS FIRST);
SELECT * FROM vt1, t0 FULL OUTER JOIN t2 ON ((TRIM(t0.c0))==(t2.c2)) FULL OUTER JOIN rt0 ON ((rt0.c3)==(t2.c2)) COLLATE NOCASE WHERE (((CASE t0.c0  WHEN rt0.c3 THEN t2.c2 WHEN t0.c2 THEN x'' WHEN '-268324219' THEN rt0.c1 ELSE t2.c1 END)-(TRIM(DISTINCT t2.c0, rt0.c1)))) ORDER BY CAST((t0.c1 IN (t0.c0)) AS BLOB)  NULLS FIRST;
SELECT * FROM vt0, t2, vt1, rt0 WHERE (((((((rt0.c1)OR(t2.c1)))OR(t2.c1)))IS NOT(CASE WHEN t2.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t2.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t2.c1)))OR(t2.c1)))IS NOT(CASE WHEN t2.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t2.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, t2, vt1, rt0);
SELECT * FROM vt0, t2, vt1, rt0 WHERE (((((((rt0.c1)OR(t2.c1)))OR(t2.c1)))IS NOT(CASE WHEN t2.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t2.c1 THEN rt0.c2 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(t2.c1)))OR(t2.c1)))IS NOT(CASE WHEN t2.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t2.c1 THEN rt0.c2 END))) IS TRUE)  as count FROM vt0, t2, vt1, rt0);
SELECT * FROM vt0, t2, vt1, rt0 WHERE (((((((rt0.c1)OR(t2.c1)))OR(t2.c1)))IS NOT(CASE WHEN t2.c0 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t2.c1 THEN rt0.c2 END)));
SELECT * FROM vt0, t0, vt1 INNER JOIN rt0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN 0.5640527760554449 ELSE ((((((((((((t2.c2)AND(rt0.c3)))OR('')))AND(rt0.c0)))AND(t2.c1)))OR('-655835543')))AND(vt1.c0)) END RIGHT OUTER JOIN t2 ON t2.c2 WHERE ((((t0.c0)&(rt0.c3)) IN ())) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)&(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 INNER JOIN rt0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN 0.5640527760554449 ELSE ((((((((((((t2.c2)AND(rt0.c3)))OR('')))AND(rt0.c0)))AND(t2.c1)))OR('-655835543')))AND(vt1.c0)) END RIGHT OUTER JOIN t2 ON t2.c2 ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC);
SELECT * FROM vt0, t0, vt1 INNER JOIN rt0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN 0.5640527760554449 ELSE ((((((((((((t2.c2)AND(rt0.c3)))OR('')))AND(rt0.c0)))AND(t2.c1)))OR('-655835543')))AND(vt1.c0)) END RIGHT OUTER JOIN t2 ON t2.c2 WHERE ((((t0.c0)&(rt0.c3)) IN ())) ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)&(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, t0, vt1 INNER JOIN rt0 ON CASE WHEN vt1.c0 COLLATE NOCASE THEN 0.5640527760554449 ELSE ((((((((((((t2.c2)AND(rt0.c3)))OR('')))AND(rt0.c0)))AND(t2.c1)))OR('-655835543')))AND(vt1.c0)) END RIGHT OUTER JOIN t2 ON t2.c2 ORDER BY (+ (CAST(vt0.c0 AS TEXT))) ASC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3 IN (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)), ((((vt1.c0)OR(0.2960999411994272)))OR(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)), ((((vt1.c0)OR(0.2960999411994272)))OR(rt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3 IN (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)), ((((vt1.c0)OR(0.2960999411994272)))OR(rt0.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) IS TRUE)  as count FROM vt1, rt0, vt0 ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)), ((((vt1.c0)OR(0.2960999411994272)))OR(rt0.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM vt1, rt0, vt0 WHERE ((((rt0.c3 IN (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt1.c0) NOTNULL)))) ORDER BY HEX(DISTINCT CAST(vt0.c0 AS REAL)), ((((vt1.c0)OR(0.2960999411994272)))OR(rt0.c1)) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) ISNULL)) IS TRUE)  as count FROM vt1, vt0, rt0);
SELECT ALL COUNT(*) FROM vt1, vt0, rt0 WHERE (((rt0.c0) ISNULL));
SELECT COUNT(*) FROM vt1, t0 WHERE ((((NOT (t0.c2)))+(CASE WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))+(CASE WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((NOT (t0.c2)))+(CASE WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c2)))+(CASE WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((NOT (t0.c2)))+(CASE WHEN vt1.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c0 THEN t0.c1 WHEN t0.c1 THEN t0.c0 END)));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON CAST(((rt0.c3) NOT NULL) AS TEXT) WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CAST(((rt0.c3) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON CAST(((rt0.c3) NOT NULL) AS TEXT) WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, rt0 CROSS JOIN vt0 ON CAST(((rt0.c3) NOT NULL) AS TEXT));
SELECT ALL COUNT(*) FROM t0, rt0 CROSS JOIN vt0 ON CAST(((rt0.c3) NOT NULL) AS TEXT) WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (NULL) ORDER BY IFNULL(DISTINCT (- (vt0.c0)), json_array_length(t0.c1, rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY IFNULL(DISTINCT (- (vt0.c0)), json_array_length(t0.c1, rt0.c0)));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (NULL) ORDER BY IFNULL(DISTINCT (- (vt0.c0)), json_array_length(t0.c1, rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt0, vt0, vt1 ORDER BY IFNULL(DISTINCT (- (vt0.c0)), json_array_length(t0.c1, rt0.c0)));
SELECT * FROM t0, rt0, vt0, vt1 WHERE (NULL) ORDER BY IFNULL(DISTINCT (- (vt0.c0)), json_array_length(t0.c1, rt0.c0));
SELECT * FROM t0 WHERE (t0.c1) ORDER BY CASE (+ (t0.c0))  WHEN GLOB(t0.c2, t0.c1) THEN ((((((((-1.33454812E9)OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)) WHEN 0.21686286369432306 THEN CAST(t0.c0 AS REAL) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0)>=(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY CASE (+ (t0.c0))  WHEN GLOB(t0.c2, t0.c1) THEN ((((((((-1.33454812E9)OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)) WHEN 0.21686286369432306 THEN CAST(t0.c0 AS REAL) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0)>=(t0.c0)) END);
SELECT * FROM t0 WHERE (t0.c1) ORDER BY CASE (+ (t0.c0))  WHEN GLOB(t0.c2, t0.c1) THEN ((((((((-1.33454812E9)OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)) WHEN 0.21686286369432306 THEN CAST(t0.c0 AS REAL) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0)>=(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0 ORDER BY CASE (+ (t0.c0))  WHEN GLOB(t0.c2, t0.c1) THEN ((((((((-1.33454812E9)OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)) WHEN 0.21686286369432306 THEN CAST(t0.c0 AS REAL) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0)>=(t0.c0)) END);
SELECT * FROM t0 WHERE (t0.c1) ORDER BY CASE (+ (t0.c0))  WHEN GLOB(t0.c2, t0.c1) THEN ((((((((-1.33454812E9)OR(t0.c1)))AND(t0.c1)))AND(t0.c1)))AND(t0.c2)) WHEN 0.21686286369432306 THEN CAST(t0.c0 AS REAL) WHEN CAST(t0.c1 AS BLOB) THEN ((t0.c0)>=(t0.c0)) END;
SELECT COUNT(*) FROM rt0, t2, t0 NATURAL JOIN vt0 WHERE ((((('')AND(CAST(t2.c0 AS INTEGER))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t2.c2 THEN t2.c1 END) AND (((t0.c0) NOT BETWEEN (t2.c1) AND (t2.c2)))) ASC  NULLS LAST, t2.c2 DESC, CAST('UY' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')AND(CAST(t2.c0 AS INTEGER))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t2, t0 NATURAL JOIN vt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t2.c2 THEN t2.c1 END) AND (((t0.c0) NOT BETWEEN (t2.c1) AND (t2.c2)))) ASC  NULLS LAST, t2.c2 DESC, CAST('UY' AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t2, t0 NATURAL JOIN vt0 WHERE ((((('')AND(CAST(t2.c0 AS INTEGER))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t2.c2 THEN t2.c1 END) AND (((t0.c0) NOT BETWEEN (t2.c1) AND (t2.c2)))) ASC  NULLS LAST, t2.c2 DESC, CAST('UY' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((('')AND(CAST(t2.c0 AS INTEGER))))OR(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, t2, t0 NATURAL JOIN vt0 ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t2.c2 THEN t2.c1 END) AND (((t0.c0) NOT BETWEEN (t2.c1) AND (t2.c2)))) ASC  NULLS LAST, t2.c2 DESC, CAST('UY' AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM rt0, t2, t0 NATURAL JOIN vt0 WHERE ((((('')AND(CAST(t2.c0 AS INTEGER))))OR(rt0.c2 COLLATE NOCASE))) ORDER BY ((CAST(rt0.c0 AS TEXT)) NOT BETWEEN (CASE WHEN t2.c2 THEN t2.c1 END) AND (((t0.c0) NOT BETWEEN (t2.c1) AND (t2.c2)))) ASC  NULLS LAST, t2.c2 DESC, CAST('UY' AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0, t2, rt0, t0, vt1 WHERE (CAST(HEX(DISTINCT t0.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT t0.c2) AS REAL)) IS TRUE)  as count FROM vt0, t2, rt0, t0, vt1 NOT INDEXED);
SELECT ALL * FROM vt0, t2, rt0, t0, vt1 WHERE (CAST(HEX(DISTINCT t0.c2) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(HEX(DISTINCT t0.c2) AS REAL)) IS TRUE)  as count FROM vt0, t2, rt0, t0, vt1 NOT INDEXED);
SELECT ALL * FROM vt0, t2, rt0, t0, vt1 WHERE (CAST(HEX(DISTINCT t0.c2) AS REAL));
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT NULL) DESC);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0 ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT NULL) DESC);
SELECT ALL * FROM rt0 WHERE ((((~ (rt0.c0))) NOTNULL)) ORDER BY ((CAST(rt0.c0 AS BLOB)) NOT NULL) DESC;
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(t0.c2)))OR('h3')))OR(rt0.c0))) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON (NOT ((((rt0.c2)) BETWEEN ((t2.c1)) AND ((t2.c1))))) INNER JOIN t2 ON (t2.c2 IN ()) COLLATE NOCASE WHERE (CAST(CASE t2.c0  WHEN t2.c2 THEN t0.c0 ELSE -1078547497 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t2.c0  WHEN t2.c2 THEN t0.c0 ELSE -1078547497 END AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(t0.c2)))OR('h3')))OR(rt0.c0))) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON (NOT ((((rt0.c2)) BETWEEN ((t2.c1)) AND ((t2.c1))))) INNER JOIN t2 ON (t2.c2 IN ()) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(t0.c2)))OR('h3')))OR(rt0.c0))) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON (NOT ((((rt0.c2)) BETWEEN ((t2.c1)) AND ((t2.c1))))) INNER JOIN t2 ON (t2.c2 IN ()) COLLATE NOCASE WHERE (CAST(CASE t2.c0  WHEN t2.c2 THEN t0.c0 ELSE -1078547497 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t2.c0  WHEN t2.c2 THEN t0.c0 ELSE -1078547497 END AS NUMERIC)) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((((((((((rt0.c2)OR(rt0.c3)))AND(t0.c2)))OR('h3')))OR(rt0.c0))) NOT NULL) RIGHT OUTER JOIN rt0 ON CAST(NULL AS TEXT) LEFT OUTER JOIN vt0 ON (NOT ((((rt0.c2)) BETWEEN ((t2.c1)) AND ((t2.c1))))) INNER JOIN t2 ON (t2.c2 IN ()) COLLATE NOCASE);
SELECT ALL * FROM vt1, t2, t0, rt0 WHERE (NULL) ORDER BY (((t0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((('')) NOT BETWEEN ((rt0.c1)) AND ((t2.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t2, t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((('')) NOT BETWEEN ((rt0.c1)) AND ((t2.c2)))))));
SELECT ALL * FROM vt1, t2, t0, rt0 WHERE (NULL) ORDER BY (((t0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((('')) NOT BETWEEN ((rt0.c1)) AND ((t2.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1, t2, t0, rt0 ORDER BY (((t0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((('')) NOT BETWEEN ((rt0.c1)) AND ((t2.c2)))))));
SELECT ALL * FROM vt1, t2, t0, rt0 WHERE (NULL) ORDER BY (((t0.c1)) NOT BETWEEN ((rt0.c3 COLLATE RTRIM)) AND ((((('')) NOT BETWEEN ((rt0.c1)) AND ((t2.c2))))));
