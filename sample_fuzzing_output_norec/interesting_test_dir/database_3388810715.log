-- Time: 2024/06/09 13:18:00
-- Database: database15
-- Database version: 3.40.0
-- seed value: 3388810715
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 1ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL), (0Xfffffffff7fd418a), ((((NULL) ISNULL) IN ())); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(''); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.6467498200369647); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (LIKELIHOOD('-289222739' COLLATE NOCASE, 0.09096210540099003), NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE vt0 SET (c1)=(-2.89222739E8); -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'', c1=NULL; -- 0ms;
COMMIT; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
UPDATE rt0 SET c1=x'6ada' WHERE ((((rt0.c0)<(rt0.c1))) IS TRUE); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=2095390727,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1747818861);\n; -- 5ms;
REINDEX NOCASE; -- 0ms;
PRAGMA stats; -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (-2.89222739E8); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '-529887047'); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES ('-134397558'); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES ('1844495994'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2) VALUES ('~+', -5.29887047E8); -- 1ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', x''); -- 0ms;
UPDATE vt0 SET c1=0.9332309304185915; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1310238660);\n; -- 5ms;
UPDATE OR ABORT vt0 SET (c0)=('1747818861'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (x''); -- 0ms;
UPDATE OR REPLACE rt0 SET (c2)=(x''); -- 0ms;
PRAGMA secure_delete; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES ('867322313', NULL); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (0.6467498200369647); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (NULL, x'6baa'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-529887047'); -- 0ms;
ANALYZE; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (('zNW')*(rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c0, c1, c2) VALUES (NULL, NULL, 0.9905412068260196), ('2095390727', 0.02581717453015331, 0Xffffffffcae90b9f), (NULL, 0.11732933308365678, '1844495994'); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.9163876926823377); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
COMMIT; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (522428983, '-890696801'); -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, '-264877586', 0.44577695680685836); -- 0ms;
PRAGMA default_cache_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1506107061); -- 0ms;
PRAGMA incremental_vacuum(-1060297061); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('2011023112', 1.747818861E9); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA application_id = 6102326782989407447; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2, c1) VALUES ('', 622135477), (0X5825321d, '-969481236'), (x'', ''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
ANALYZE rt0; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (NULL, 0xffffffffa8594c71); -- 1ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('2011023112', NULL, NULL); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('-969481236'); -- 0ms;
ANALYZE rt0; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('', x'', '2011023112'), (0X33b249c9, NULL, -289222739), ('-1321210497', '-1718744487', NULL); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL); -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1750392052); -- 0ms;
VACUUM main; -- 1ms;
END TRANSACTION; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF DELETE ON v0 BEGIN SELECT RAISE(ABORT, 'asdf');END; -- 0ms;
PRAGMA main.incremental_vacuum; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0X424cf3ce, x'217d'), (510899853, NULL), (NULL, x''), (-264877586, x'83440b56'), (0.3684393185074146, NULL); -- 0ms;
REINDEX  vt0; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(1.844495994E9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34580'); -- 1ms;
REINDEX NOCASE; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE CAST(json_extract(rt0.c2, NULL) AS REAL); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=-5.29887047E8; -- 0ms;
DELETE FROM rt0; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES ('', 0.6419486952690416); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (0.13997219008517126), (0.09051944374650855); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '34400'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=15'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'v0', ' unordered'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (-8.90696801E8), (''), (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (0.5030289883922275); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
UPDATE vt0 SET c1=NULL WHERE vt0.c1; -- 0ms;
UPDATE OR ABORT rt0 SET c0=NULL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)%(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)%(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0)%(((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (vt0.c1 IN ()) THEN x'' ELSE TYPEOF(v0.c0) END) ORDER BY (((((rt0.c0))>=((-9.69481236E8))))/(((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN (vt0.c1 IN ()) THEN x'' ELSE TYPEOF(v0.c0) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((rt0.c0))>=((-9.69481236E8))))/(((vt0.c1) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (vt0.c1 IN ()) THEN x'' ELSE TYPEOF(v0.c0) END) ORDER BY (((((rt0.c0))>=((-9.69481236E8))))/(((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) NOTNULL)  WHEN (vt0.c1 IN ()) THEN x'' ELSE TYPEOF(v0.c0) END) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((((rt0.c0))>=((-9.69481236E8))))/(((vt0.c1) NOTNULL)))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CASE ((rt0.c0) NOTNULL)  WHEN (vt0.c1 IN ()) THEN x'' ELSE TYPEOF(v0.c0) END) ORDER BY (((((rt0.c0))>=((-9.69481236E8))))/(((vt0.c1) NOTNULL)))  NULLS LAST;
SELECT * FROM rt0 WHERE (ABS(((rt0.c0) ISNULL))) ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, CAST(LTRIM(rt0.c2, rt0.c1) AS BLOB) ASC  NULLS FIRST, (((((0.6419486952690416, rt0.c2, rt0.c2)) BETWEEN ((0.9332309304185915, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)<(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, CAST(LTRIM(rt0.c2, rt0.c1) AS BLOB) ASC  NULLS FIRST, (((((0.6419486952690416, rt0.c2, rt0.c2)) BETWEEN ((0.9332309304185915, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)<(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (ABS(((rt0.c0) ISNULL))) ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, CAST(LTRIM(rt0.c2, rt0.c1) AS BLOB) ASC  NULLS FIRST, (((((0.6419486952690416, rt0.c2, rt0.c2)) BETWEEN ((0.9332309304185915, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)<(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((ABS(((rt0.c0) ISNULL))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, CAST(LTRIM(rt0.c2, rt0.c1) AS BLOB) ASC  NULLS FIRST, (((((0.6419486952690416, rt0.c2, rt0.c2)) BETWEEN ((0.9332309304185915, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)<(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST);
SELECT * FROM rt0 WHERE (ABS(((rt0.c0) ISNULL))) ORDER BY (((rt0.c2) IS TRUE) IN ()) ASC  NULLS LAST, CAST(LTRIM(rt0.c2, rt0.c1) AS BLOB) ASC  NULLS FIRST, (((((0.6419486952690416, rt0.c2, rt0.c2)) BETWEEN ((0.9332309304185915, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c0)))) NOT BETWEEN (((rt0.c0)<(rt0.c0))) AND (CASE WHEN rt0.c0 THEN rt0.c2 END)) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((('-505613824')) NOT BETWEEN ((json(rt0.c1))) AND ((((rt0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((('-505613824')) NOT BETWEEN ((json(rt0.c1))) AND ((((rt0.c1) IS FALSE)))) ASC);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((('-505613824')) NOT BETWEEN ((json(rt0.c1))) AND ((((rt0.c1) IS FALSE)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY ((('-505613824')) NOT BETWEEN ((json(rt0.c1))) AND ((((rt0.c1) IS FALSE)))) ASC);
SELECT ALL * FROM rt0 WHERE (NULL) ORDER BY ((('-505613824')) NOT BETWEEN ((json(rt0.c1))) AND ((((rt0.c1) IS FALSE)))) ASC;
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c0))) IS FALSE) LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END AS BLOB) WHERE (((~ (rt0.c0)) IN ())) ORDER BY ((x'ddd3') NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c0))) IS FALSE) LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END AS BLOB) ORDER BY ((x'ddd3') NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c0))) IS FALSE) LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END AS BLOB) WHERE (((~ (rt0.c0)) IN ())) ORDER BY ((x'ddd3') NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((~ (rt0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c0))) IS FALSE) LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END AS BLOB) ORDER BY ((x'ddd3') NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 INNER JOIN vt0 ON ((((vt0.c1)|(rt0.c0))) IS FALSE) LEFT OUTER JOIN rt0 ON CAST(CASE WHEN rt0.c2 THEN '' WHEN rt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN rt0.c1 END AS BLOB) WHERE (((~ (rt0.c0)) IN ())) ORDER BY ((x'ddd3') NOT BETWEEN ((rt0.c2 IN ())) AND (((vt0.c0)!=(vt0.c1)))) ASC  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) NOT NULL)) WHERE (json_valid((((v0.c0, vt0.c1, x''))<=((rt0.c0, vt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((json_valid((((v0.c0, vt0.c1, x''))<=((rt0.c0, vt0.c1, rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) NOT NULL)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) NOT NULL)) WHERE (json_valid((((v0.c0, vt0.c1, x''))<=((rt0.c0, vt0.c1, rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((json_valid((((v0.c0, vt0.c1, x''))<=((rt0.c0, vt0.c1, rt0.c2))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) NOT NULL)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON v0.c0 LEFT OUTER JOIN rt0 ON QUOTE(((rt0.c0) NOT NULL)) WHERE (json_valid((((v0.c0, vt0.c1, x''))<=((rt0.c0, vt0.c1, rt0.c2)))));
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1) NOTNULL))))OR(((rt0.c0)IS NOT(vt0.c1))))) ORDER BY -9.69481236E8 ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1) NOTNULL))))OR(((rt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY -9.69481236E8 ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1) NOTNULL))))OR(((rt0.c0)IS NOT(vt0.c1))))) ORDER BY -9.69481236E8 ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1) NOTNULL))))OR(((rt0.c0)IS NOT(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY -9.69481236E8 ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c1 COLLATE RTRIM)OR(((rt0.c1) NOTNULL))))OR(((rt0.c0)IS NOT(vt0.c1))))) ORDER BY -9.69481236E8 ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((vt0.c0 IN (0Xffffffff92b95991, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((vt0.c0 IN (0xffffffff92b95991, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((vt0.c0 IN (0Xffffffff92b95991, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((vt0.c0 IN (0xffffffff92b95991, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c2)) BETWEEN ((rt0.c2 COLLATE RTRIM)) AND (((vt0.c0 IN (0Xffffffff92b95991, vt0.c0))))));
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON x'' WHERE (json_array_length(vt0.c1, vt0.c1) COLLATE BINARY COLLATE RTRIM) ORDER BY NULLIF(((NULL)/(v0.c0)), '1141917740') DESC, ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c1, vt0.c1) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON x'' ORDER BY NULLIF(((NULL)/(v0.c0)), '1141917740') DESC, ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT * FROM rt0 CROSS JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON x'' WHERE (json_array_length(vt0.c1, vt0.c1) COLLATE BINARY COLLATE RTRIM) ORDER BY NULLIF(((NULL)/(v0.c0)), '1141917740') DESC, ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(vt0.c1, vt0.c1) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON vt0.c0 LEFT OUTER JOIN v0 ON x'' ORDER BY NULLIF(((NULL)/(v0.c0)), '1141917740') DESC, ((v0.c0 COLLATE RTRIM) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(rt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(rt0.c1 AS INTEGER)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (((rt0.c2 COLLATE BINARY) NOT BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(rt0.c1 AS INTEGER))));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN ('1e500000') AND (0.7341633528506685))) NOT BETWEEN ((~ (vt0.c1))) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN ('1e500000') AND (0.7341633528506685))) NOT BETWEEN ((~ (vt0.c1))) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN ('1e500000') AND (0.7341633528506685))) NOT BETWEEN ((~ (vt0.c1))) AND ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) NOT BETWEEN ('1e500000') AND (0.7341633528506685))) NOT BETWEEN ((~ (vt0.c1))) AND ((NOT (rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0 NOT INDEXED);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN ('1e500000') AND (0.7341633528506685))) NOT BETWEEN ((~ (vt0.c1))) AND ((NOT (rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN load_extension(rt0.c0, rt0.c2) WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<=((rt0.c1))) ELSE ((rt0.c1)-(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN load_extension(rt0.c0, rt0.c2) WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<=((rt0.c1))) ELSE ((rt0.c1)-(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN load_extension(rt0.c0, rt0.c2) WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<=((rt0.c1))) ELSE ((rt0.c1)-(rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c0) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN load_extension(rt0.c0, rt0.c2) WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<=((rt0.c1))) ELSE ((rt0.c1)-(rt0.c1)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE ((rt0.c0) IS TRUE)  WHEN CAST(rt0.c1 AS TEXT) THEN load_extension(rt0.c0, rt0.c2) WHEN rt0.c1 THEN ((rt0.c1)IS NOT(rt0.c2)) WHEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END THEN (((rt0.c1))<=((rt0.c1))) ELSE ((rt0.c1)-(rt0.c1)) END);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT NULL))-(vt0.c1))) ORDER BY (((v0.c0) NOTNULL) IN (((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))-(vt0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) NOTNULL) IN (((vt0.c1) NOT NULL))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT NULL))-(vt0.c1))) ORDER BY (((v0.c0) NOTNULL) IN (((vt0.c1) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT NULL))-(vt0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) NOTNULL) IN (((vt0.c1) NOT NULL))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT NULL))-(vt0.c1))) ORDER BY (((v0.c0) NOTNULL) IN (((vt0.c1) NOT NULL))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (((- (v0.c0)) IN ())) ORDER BY CASE WHEN vt0.c1 THEN (~ (v0.c0)) WHEN vt0.c1 THEN '-1838132405' WHEN '-505613824' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (0x73573ae7)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN vt0.c1 THEN (~ (v0.c0)) WHEN vt0.c1 THEN '-1838132405' WHEN '-505613824' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (0x73573ae7)) END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((- (v0.c0)) IN ())) ORDER BY CASE WHEN vt0.c1 THEN (~ (v0.c0)) WHEN vt0.c1 THEN '-1838132405' WHEN '-505613824' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (0x73573ae7)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN vt0.c1 THEN (~ (v0.c0)) WHEN vt0.c1 THEN '-1838132405' WHEN '-505613824' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (0x73573ae7)) END  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((- (v0.c0)) IN ())) ORDER BY CASE WHEN vt0.c1 THEN (~ (v0.c0)) WHEN vt0.c1 THEN '-1838132405' WHEN '-505613824' THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (0x73573ae7)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c2)<(vt0.c1)))) WHERE (CASE ((vt0.c1)IS(rt0.c2))  WHEN (((vt0.c1))!=((vt0.c0))) THEN (NOT (-1887499230)) WHEN rt0.c1 COLLATE RTRIM THEN (- (-1887499230)) WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE rt0.c1 END) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)IS(rt0.c2))  WHEN (((vt0.c1))<>((vt0.c0))) THEN (NOT (-1887499230)) WHEN rt0.c1 COLLATE RTRIM THEN (- (-1887499230)) WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE rt0.c1 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c2)<(vt0.c1)))) ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c2)<(vt0.c1)))) WHERE (CASE ((vt0.c1)IS(rt0.c2))  WHEN (((vt0.c1))!=((vt0.c0))) THEN (NOT (-1887499230)) WHEN rt0.c1 COLLATE RTRIM THEN (- (-1887499230)) WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE rt0.c1 END) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1)IS(rt0.c2))  WHEN (((vt0.c1))<>((vt0.c0))) THEN (NOT (-1887499230)) WHEN rt0.c1 COLLATE RTRIM THEN (- (-1887499230)) WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE rt0.c1 END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c2)<(vt0.c1)))) ORDER BY rt0.c1 DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON (- (((rt0.c2)<(vt0.c1)))) WHERE (CASE ((vt0.c1)IS(rt0.c2))  WHEN (((vt0.c1))!=((vt0.c0))) THEN (NOT (-1887499230)) WHEN rt0.c1 COLLATE RTRIM THEN (- (-1887499230)) WHEN vt0.c0 THEN (+ (vt0.c0)) ELSE rt0.c1 END) ORDER BY rt0.c1 DESC;
SELECT * FROM v0 WHERE ('') ORDER BY (+ (v0.c0)) COLLATE RTRIM DESC, ((((((('ZNW'))!=((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) COLLATE RTRIM DESC, ((((((('ZNW'))!=((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM v0 WHERE ('') ORDER BY (+ (v0.c0)) COLLATE RTRIM DESC, ((((((('ZNW'))!=((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM v0 ORDER BY (+ (v0.c0)) COLLATE RTRIM DESC, ((((((('ZNW'))!=((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM v0 WHERE ('') ORDER BY (+ (v0.c0)) COLLATE RTRIM DESC, ((((((('ZNW'))!=((v0.c0))))OR(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0))>=(((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((-468132329, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))))))) ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))LIKE(((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0))>=(((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((-468132329, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))LIKE(((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0))>=(((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((-468132329, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))))))) ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))LIKE(((rt0.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT (((((v0.c0))>=(((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((-468132329, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))))))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))LIKE(((rt0.c1) IS TRUE))));
SELECT ALL * FROM rt0, v0 WHERE ((((v0.c0))>=(((((rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((-468132329, v0.c0, rt0.c2)) AND ((v0.c0, rt0.c1, rt0.c2))))))) ORDER BY ((((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))LIKE(((rt0.c1) IS TRUE)));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(NULL AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS NUMERIC));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (vt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((x'6dda')) AND ((CAST(rt0.c0 AS TEXT)))) ASC, 0.5592192736110176 ASC, CAST(vt0.c1 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c1)) BETWEEN ((x'6dda')) AND ((CAST(rt0.c0 AS TEXT)))) ASC, 0.5592192736110176 ASC, CAST(vt0.c1 AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (vt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((x'6dda')) AND ((CAST(rt0.c0 AS TEXT)))) ASC, 0.5592192736110176 ASC, CAST(vt0.c1 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((rt0.c1)) BETWEEN ((x'6dda')) AND ((CAST(rt0.c0 AS TEXT)))) ASC, 0.5592192736110176 ASC, CAST(vt0.c1 AS TEXT) ASC);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (vt0.c0) ORDER BY (((rt0.c1)) BETWEEN ((x'6dda')) AND ((CAST(rt0.c0 AS TEXT)))) ASC, 0.5592192736110176 ASC, CAST(vt0.c1 AS TEXT) ASC;
SELECT * FROM v0, vt0, rt0 WHERE (((NULLIF(DISTINCT vt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c1 IN ())))<>((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST, ((((STRFTIME(vt0.c1, rt0.c0, vt0.c0))OR(LOWER(DISTINCT 0.5919600223235447))))AND(((rt0.c2) NOT NULL))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1 IN ())))!=((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST, ((((STRFTIME(vt0.c1, rt0.c0, vt0.c0))OR(LOWER(DISTINCT 0.5919600223235447))))AND(((rt0.c2) NOT NULL))), rt0.c1);
SELECT * FROM v0, vt0, rt0 WHERE (((NULLIF(DISTINCT vt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c1 IN ())))<>((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST, ((((STRFTIME(vt0.c1, rt0.c0, vt0.c0))OR(LOWER(DISTINCT 0.5919600223235447))))AND(((rt0.c2) NOT NULL))), rt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT vt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((rt0.c1 IN ())))!=((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST, ((((STRFTIME(vt0.c1, rt0.c0, vt0.c0))OR(LOWER(DISTINCT 0.5919600223235447))))AND(((rt0.c2) NOT NULL))), rt0.c1);
SELECT * FROM v0, vt0, rt0 WHERE (((NULLIF(DISTINCT vt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (v0.c0 COLLATE RTRIM))) ORDER BY ((((rt0.c1 IN ())))<>((CAST(v0.c0 AS INTEGER)))) ASC  NULLS FIRST, ((((STRFTIME(vt0.c1, rt0.c0, vt0.c0))OR(LOWER(DISTINCT 0.5919600223235447))))AND(((rt0.c2) NOT NULL))), rt0.c1;
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) IS FALSE))*((+ (vt0.c0)))) WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((v0.c0) ISNULL)))) ORDER BY ((vt0.c1)IS NOT(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))GLOB(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) IS FALSE))*((+ (vt0.c0)))) ORDER BY ((vt0.c1)IS NOT(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) IS FALSE))*((+ (vt0.c0)))) WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((v0.c0) ISNULL)))) ORDER BY ((vt0.c1)IS NOT(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS BLOB))GLOB(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) IS FALSE))*((+ (vt0.c0)))) ORDER BY ((vt0.c1)IS NOT(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((((v0.c0) IS FALSE))*((+ (vt0.c0)))) WHERE (((CAST(vt0.c0 AS BLOB))GLOB(((v0.c0) ISNULL)))) ORDER BY ((vt0.c1)IS NOT(CAST(rt0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (NULL) ORDER BY load_extension(((rt0.c2) NOT BETWEEN (0.09051944374650855) AND (rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY load_extension(((rt0.c2) NOT BETWEEN (0.09051944374650855) AND (rt0.c0)))  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (NULL) ORDER BY load_extension(((rt0.c2) NOT BETWEEN (0.09051944374650855) AND (rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY load_extension(((rt0.c2) NOT BETWEEN (0.09051944374650855) AND (rt0.c0)))  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (1239928147)), CAST(vt0.c0 AS NUMERIC)))) ORDER BY 0Xffffffffe418de17  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (1239928147)), CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0Xffffffffe418de17  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (1239928147)), CAST(vt0.c0 AS NUMERIC)))) ORDER BY 0Xffffffffe418de17  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (1239928147)), CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY 0Xffffffffe418de17  NULLS LAST);
SELECT ALL * FROM rt0, vt0, v0 WHERE ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END IN (((vt0.c0) NOT BETWEEN (rt0.c0) AND (1239928147)), CAST(vt0.c0 AS NUMERIC)))) ORDER BY 0Xffffffffe418de17  NULLS LAST;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(0.7804852827245046 AS INTEGER) WHERE (CASE WHEN rt0.c1 THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END ELSE (rt0.c1 IN (rt0.c0)) END) ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END ELSE (rt0.c1 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(0.7804852827245046 AS INTEGER) ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(0.7804852827245046 AS INTEGER) WHERE (CASE WHEN rt0.c1 THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END ELSE (rt0.c1 IN (rt0.c0)) END) ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END ELSE (rt0.c1 IN (rt0.c0)) END) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CAST(0.7804852827245046 AS INTEGER) ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS INTEGER) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CAST(0.7804852827245046 AS INTEGER) WHERE (CASE WHEN rt0.c1 THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END ELSE (rt0.c1 IN (rt0.c0)) END) ORDER BY ((((rt0.c2)OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY DESC  NULLS LAST, CAST(vt0.c1 COLLATE NOCASE AS INTEGER) DESC  NULLS LAST;
SELECT * FROM v0 WHERE ((((((v0.c0)OR(0.029163237237332384)), v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0)!=('')), ((v0.c0)OR(v0.c0))))>=((CAST(v0.c0 AS REAL), (v0.c0 IN (v0.c0)), CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END, (v0.c0 IN ()), CAST(v0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(0.029163237237332384)), v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0)<>('')), ((v0.c0)OR(v0.c0))))>=((CAST(v0.c0 AS REAL), (v0.c0 IN (v0.c0)), CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END, (v0.c0 IN ()), CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(0.029163237237332384)), v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0)!=('')), ((v0.c0)OR(v0.c0))))>=((CAST(v0.c0 AS REAL), (v0.c0 IN (v0.c0)), CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END, (v0.c0 IN ()), CAST(v0.c0 AS INTEGER)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0)OR(0.029163237237332384)), v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0)<>('')), ((v0.c0)OR(v0.c0))))>=((CAST(v0.c0 AS REAL), (v0.c0 IN (v0.c0)), CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END, (v0.c0 IN ()), CAST(v0.c0 AS INTEGER))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((v0.c0)OR(0.029163237237332384)), v0.c0 COLLATE NOCASE, (((v0.c0, v0.c0, v0.c0))<=((v0.c0, v0.c0, v0.c0))), ((v0.c0)!=('')), ((v0.c0)OR(v0.c0))))>=((CAST(v0.c0 AS REAL), (v0.c0 IN (v0.c0)), CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END, (v0.c0 IN ()), CAST(v0.c0 AS INTEGER)))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1) NOTNULL))AND(CAST(rt0.c1 AS BLOB))))AND(CASE WHEN NULL THEN '1112339406' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY TYPEOF(DISTINCT ((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))), json_valid((~ (rt0.c1)))  NULLS FIRST, (((vt0.c1 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOTNULL))AND(CAST(rt0.c1 AS BLOB))))AND(CASE WHEN NULL THEN '1112339406' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(DISTINCT ((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))), json_valid((~ (rt0.c1)))  NULLS FIRST, (((vt0.c1 IN ())) IS FALSE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1) NOTNULL))AND(CAST(rt0.c1 AS BLOB))))AND(CASE WHEN NULL THEN '1112339406' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY TYPEOF(DISTINCT ((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))), json_valid((~ (rt0.c1)))  NULLS FIRST, (((vt0.c1 IN ())) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOTNULL))AND(CAST(rt0.c1 AS BLOB))))AND(CASE WHEN NULL THEN '1112339406' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TYPEOF(DISTINCT ((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))), json_valid((~ (rt0.c1)))  NULLS FIRST, (((vt0.c1 IN ())) IS FALSE) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((((((vt0.c1) NOTNULL))AND(CAST(rt0.c1 AS BLOB))))AND(CASE WHEN NULL THEN '1112339406' WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))) ORDER BY TYPEOF(DISTINCT ((((rt0.c0)OR(vt0.c0)))AND(rt0.c0))), json_valid((~ (rt0.c1)))  NULLS FIRST, (((vt0.c1 IN ())) IS FALSE) ASC;
SELECT ALL * FROM rt0, v0 WHERE (TYPEOF((((rt0.c2))>=(('ld')))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((rt0.c2))>=(('ld'))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (TYPEOF((((rt0.c2))>=(('ld')))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((((rt0.c2))>=(('ld'))))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (TYPEOF((((rt0.c2))>=(('ld')))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((rt0.c0)>>(vt0.c1)) ELSE (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ASC  NULLS LAST, (((~ (rt0.c2)))GLOB(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE vt0.c0 END)) ASC, CASE WHEN GLOB(x'', rt0.c2) THEN vt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((rt0.c0)>>(vt0.c1)) ELSE (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ASC  NULLS LAST, (((~ (rt0.c2)))GLOB(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE vt0.c0 END)) ASC, CASE WHEN GLOB(x'', rt0.c2) THEN vt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((rt0.c0)>>(vt0.c1)) ELSE (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ASC  NULLS LAST, (((~ (rt0.c2)))GLOB(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE vt0.c0 END)) ASC, CASE WHEN GLOB(x'', rt0.c2) THEN vt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((rt0.c0)>>(vt0.c1)) ELSE (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ASC  NULLS LAST, (((~ (rt0.c2)))GLOB(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE vt0.c0 END)) ASC, CASE WHEN GLOB(x'', rt0.c2) THEN vt0.c0 COLLATE RTRIM END  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2) ORDER BY CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN ((rt0.c0)>>(vt0.c1)) ELSE (((vt0.c1)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) END ASC  NULLS LAST, (((~ (rt0.c2)))GLOB(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN x'' ELSE vt0.c0 END)) ASC, CASE WHEN GLOB(x'', rt0.c2) THEN vt0.c0 COLLATE RTRIM END  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c1)))!=(((rt0.c2)OR(rt0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND ((rt0.c1))), ((rt0.c1) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c1)))!=(((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND ((rt0.c1))), ((rt0.c1) ISNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c1)))!=(((rt0.c2)OR(rt0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND ((rt0.c1))), ((rt0.c1) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)&(rt0.c1)))!=(((rt0.c2)OR(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND ((rt0.c1))), ((rt0.c1) ISNULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0)&(rt0.c1)))!=(((rt0.c2)OR(rt0.c0))))) ORDER BY (((rt0.c0)) NOT BETWEEN (((+ (rt0.c1)))) AND ((rt0.c1))), ((rt0.c1) ISNULL)  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((GLOB(vt0.c1, 'ImcUUހd-')) BETWEEN ('r') AND ((('b''') NOTNULL)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0))||(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(vt0.c1, 'ImcUUހd-')) BETWEEN ('r') AND ((('b''') NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c0))||(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)));
SELECT * FROM rt0, vt0 WHERE (((GLOB(vt0.c1, 'ImcUUހd-')) BETWEEN ('r') AND ((('b''') NOTNULL)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0))||(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((GLOB(vt0.c1, 'ImcUUހd-')) BETWEEN ('r') AND ((('b''') NOTNULL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c0))||(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END)));
SELECT * FROM rt0, vt0 WHERE (((GLOB(vt0.c1, 'ImcUUހd-')) BETWEEN ('r') AND ((('b''') NOTNULL)))) ORDER BY ((UNLIKELY(DISTINCT rt0.c0))||(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE rt0.c2 END));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((NULL)-(CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN '&v' THEN rt0.c1 END)) FULL OUTER JOIN rt0 ON CAST(LOWER(DISTINCT vt0.c0) AS REAL) WHERE (((((vt0.c1)||(vt0.c1)))-(UNLIKELY(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c1)))-(UNLIKELY(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((NULL)-(CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN '&v' THEN rt0.c1 END)) FULL OUTER JOIN rt0 ON CAST(LOWER(DISTINCT vt0.c0) AS REAL));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((NULL)-(CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN '&v' THEN rt0.c1 END)) FULL OUTER JOIN rt0 ON CAST(LOWER(DISTINCT vt0.c0) AS REAL) WHERE (((((vt0.c1)||(vt0.c1)))-(UNLIKELY(DISTINCT vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)||(vt0.c1)))-(UNLIKELY(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((NULL)-(CASE WHEN rt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN '&v' THEN rt0.c1 END)) FULL OUTER JOIN rt0 ON CAST(LOWER(DISTINCT vt0.c0) AS REAL));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN 'oI{{j*t\r' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) ORDER BY (~ (CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN 'oI{{j*t\r' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END ORDER BY (~ (CAST(vt0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN 'oI{{j*t\r' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) ORDER BY (~ (CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN 'oI{{j*t\r' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END ORDER BY (~ (CAST(vt0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN 'oI{{j*t\r' ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END WHERE (((CAST(vt0.c0 AS BLOB)) NOTNULL)) ORDER BY (~ (CAST(vt0.c1 AS TEXT)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)>(-1.31023866E9))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)>(-1.31023866E9))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)>(-1.31023866E9))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY)>(-1.31023866E9))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2))))) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE BINARY)>(-1.31023866E9))) ORDER BY ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|((((rt0.c1, rt0.c2, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2))))) ASC;
SELECT * FROM v0, vt0 WHERE (((+ (v0.c0)) IN ())) ORDER BY ((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT * FROM v0, vt0 WHERE (((+ (v0.c0)) IN ())) ORDER BY ((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((((+ (v0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT * FROM v0, vt0 WHERE (((+ (v0.c0)) IN ())) ORDER BY ((((((v0.c0)OR(vt0.c0)))OR(vt0.c1)))GLOB(CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)>=(rt0.c2)) END) ORDER BY (((rt0.c1 COLLATE NOCASE, ((vt0.c0)<=(rt0.c2)), ((rt0.c1) NOT BETWEEN ('1751337327') AND (rt0.c2))))<=((((vt0.c0) NOT NULL), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), '\r.')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)>=(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c1 COLLATE NOCASE, ((vt0.c0)<=(rt0.c2)), ((rt0.c1) NOT BETWEEN ('1751337327') AND (rt0.c2))))<=((((vt0.c0) NOT NULL), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), '\r.')))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)>=(rt0.c2)) END) ORDER BY (((rt0.c1 COLLATE NOCASE, ((vt0.c0)<=(rt0.c2)), ((rt0.c1) NOT BETWEEN ('1751337327') AND (rt0.c2))))<=((((vt0.c0) NOT NULL), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), '\r.')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)>=(rt0.c2)) END) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c1 COLLATE NOCASE, ((vt0.c0)<=(rt0.c2)), ((rt0.c1) NOT BETWEEN ('1751337327') AND (rt0.c2))))<=((((vt0.c0) NOT NULL), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), '\r.')))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN ((v0.c0)>=(rt0.c2)) END) ORDER BY (((rt0.c1 COLLATE NOCASE, ((vt0.c0)<=(rt0.c2)), ((rt0.c1) NOT BETWEEN ('1751337327') AND (rt0.c2))))<=((((vt0.c0) NOT NULL), ((((rt0.c0)AND(v0.c0)))OR(v0.c0)), '\r.')))  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c2 THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END WHERE (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c2 THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c2 THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END WHERE (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c2 THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON CASE WHEN rt0.c2 THEN CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END END WHERE (((((((((v0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))AND(v0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(v0.c0 AS REAL), ABS(v0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL), ABS(v0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(v0.c0 AS REAL), ABS(v0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL), ABS(v0.c0 COLLATE BINARY) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CAST(v0.c0 AS REAL), ABS(v0.c0 COLLATE BINARY) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1)GLOB(v0.c0)) COLLATE NOCASE WHERE (0Xffffffff9fb6bf6e);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff9fb6bf6e) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1)GLOB(v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1)GLOB(v0.c0)) COLLATE NOCASE WHERE (0Xffffffff9fb6bf6e);
SELECT SUM(count) FROM (SELECT ALL ((0xffffffff9fb6bf6e) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1)GLOB(v0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((vt0.c1)GLOB(v0.c0)) COLLATE NOCASE WHERE (0Xffffffff9fb6bf6e);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((((((vt0.c1) NOT NULL))OR(CAST(v0.c0 AS TEXT))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(((((vt0.c1)AND(rt0.c2)))OR(rt0.c1)))))AND(((x'6cf3')-(vt0.c1))))) ORDER BY CAST(((((vt0.c1)AND(rt0.c1)))AND(rt0.c2)) AS BLOB) DESC, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT NULL))OR(CAST(v0.c0 AS TEXT))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(((((vt0.c1)AND(rt0.c2)))OR(rt0.c1)))))AND(((x'6cf3')-(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(((((vt0.c1)AND(rt0.c1)))AND(rt0.c2)) AS BLOB) DESC, rt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((((((vt0.c1) NOT NULL))OR(CAST(v0.c0 AS TEXT))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(((((vt0.c1)AND(rt0.c2)))OR(rt0.c1)))))AND(((x'6cf3')-(vt0.c1))))) ORDER BY CAST(((((vt0.c1)AND(rt0.c1)))AND(rt0.c2)) AS BLOB) DESC, rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT NULL))OR(CAST(v0.c0 AS TEXT))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(((((vt0.c1)AND(rt0.c2)))OR(rt0.c1)))))AND(((x'6cf3')-(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(((((vt0.c1)AND(rt0.c1)))AND(rt0.c2)) AS BLOB) DESC, rt0.c1 DESC);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((((((((vt0.c1) NOT NULL))OR(CAST(v0.c0 AS TEXT))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))))AND(((((vt0.c1)AND(rt0.c2)))OR(rt0.c1)))))AND(((x'6cf3')-(vt0.c1))))) ORDER BY CAST(((((vt0.c1)AND(rt0.c1)))AND(rt0.c2)) AS BLOB) DESC, rt0.c1 DESC;
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON (((v0.c0 IN (rt0.c0)))GLOB(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE ((((((((((~ (v0.c0)))OR(x'')))OR(CAST(rt0.c0 AS BLOB))))OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND((+ (vt0.c1))))) ORDER BY '105813285' ASC, (((((vt0.c0)OR(v0.c0)))AND(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c0)))OR(x'')))OR(CAST(rt0.c0 AS BLOB))))OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON (((v0.c0 IN (rt0.c0)))GLOB(CASE WHEN rt0.c2 THEN rt0.c1 END)) ORDER BY '105813285' ASC, (((((vt0.c0)OR(v0.c0)))AND(rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON (((v0.c0 IN (rt0.c0)))GLOB(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE ((((((((((~ (v0.c0)))OR(x'')))OR(CAST(rt0.c0 AS BLOB))))OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND((+ (vt0.c1))))) ORDER BY '105813285' ASC, (((((vt0.c0)OR(v0.c0)))AND(rt0.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c0)))OR(x'')))OR(CAST(rt0.c0 AS BLOB))))OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND((+ (vt0.c1))))) IS TRUE)  as count FROM rt0, v0 INNER JOIN vt0 ON (((v0.c0 IN (rt0.c0)))GLOB(CASE WHEN rt0.c2 THEN rt0.c1 END)) ORDER BY '105813285' ASC, (((((vt0.c0)OR(v0.c0)))AND(rt0.c1)) IN ()) DESC);
SELECT COUNT(*) FROM rt0, v0 INNER JOIN vt0 ON (((v0.c0 IN (rt0.c0)))GLOB(CASE WHEN rt0.c2 THEN rt0.c1 END)) WHERE ((((((((((~ (v0.c0)))OR(x'')))OR(CAST(rt0.c0 AS BLOB))))OR((((v0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0))))))AND((+ (vt0.c1))))) ORDER BY '105813285' ASC, (((((vt0.c0)OR(v0.c0)))AND(rt0.c1)) IN ()) DESC;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (((vt0.c0)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (((vt0.c0)%(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (((vt0.c0)%(vt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED, v0, vt0 WHERE (((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c0) IS TRUE)) AND (((vt0.c0)%(vt0.c1)))));
SELECT * FROM rt0 WHERE (TIME(0.8177611199145867, ((rt0.c0)AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (NOT ('510899853')), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TIME(0.8177611199145867, ((rt0.c0)AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (NOT ('510899853')), (- (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TIME(0.8177611199145867, ((rt0.c0)AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (NOT ('510899853')), (- (rt0.c0))));
SELECT SUM(count) FROM (SELECT ((TIME(0.8177611199145867, ((rt0.c0)AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (NOT ('510899853')), (- (rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TIME(0.8177611199145867, ((rt0.c0)AND(rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (NOT ('510899853')), (- (rt0.c0))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)IS(rt0.c1)) IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)IS(rt0.c1)) IN (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)IS(rt0.c1)) IN (rt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)IS(rt0.c1)) IN (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1)IS(rt0.c1)) IN (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (TYPEOF(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (TYPEOF(DISTINCT rt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (TYPEOF(DISTINCT rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((- (TYPEOF(DISTINCT rt0.c1))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (~ (rt0.c2))) WHERE (((((((((v0.c0)AND(((rt0.c1)|(rt0.c2)))))AND(((rt0.c1)>=(rt0.c1)))))AND((0.35750152770358556 IN ()))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(((rt0.c1)|(rt0.c2)))))AND(((rt0.c1)>=(rt0.c1)))))AND((0.35750152770358556 IN ()))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (~ (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (~ (rt0.c2))) WHERE (((((((((v0.c0)AND(((rt0.c1)|(rt0.c2)))))AND(((rt0.c1)>=(rt0.c1)))))AND((0.35750152770358556 IN ()))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(((rt0.c1)|(rt0.c2)))))AND(((rt0.c1)>=(rt0.c1)))))AND((0.35750152770358556 IN ()))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (~ (rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN v0 ON TRIM(DISTINCT (~ (rt0.c2))) WHERE (((((((((v0.c0)AND(((rt0.c1)|(rt0.c2)))))AND(((rt0.c1)>=(rt0.c1)))))AND((0.35750152770358556 IN ()))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) ORDER BY (('znw')*(TIME(vt0.c0, v0.c0, vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY (('znw')*(TIME(vt0.c0, v0.c0, vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) ORDER BY (('znw')*(TIME(vt0.c0, v0.c0, vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) IS TRUE)  as count FROM vt0, v0 ORDER BY (('znw')*(TIME(vt0.c0, v0.c0, vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CAST((((vt0.c0, vt0.c1, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c1))) AS BLOB)) ORDER BY (('znw')*(TIME(vt0.c0, v0.c0, vt0.c1))) DESC;
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON rtreenode(((rt0.c1)<(rt0.c0)), (NULL IN (vt0.c1))) INNER JOIN vt0 ON UPPER(((vt0.c0)IS NOT(rt0.c2))) WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON rtreenode(((rt0.c1)<(rt0.c0)), (NULL IN (vt0.c1))) INNER JOIN vt0 ON UPPER(((vt0.c0)IS NOT(rt0.c2))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON rtreenode(((rt0.c1)<(rt0.c0)), (NULL IN (vt0.c1))) INNER JOIN vt0 ON UPPER(((vt0.c0)IS NOT(rt0.c2))) WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON rtreenode(((rt0.c1)<(rt0.c0)), (NULL IN (vt0.c1))) INNER JOIN vt0 ON UPPER(((vt0.c0)IS NOT(rt0.c2))));
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON rtreenode(((rt0.c1)<(rt0.c0)), (NULL IN (vt0.c1))) INNER JOIN vt0 ON UPPER(((vt0.c0)IS NOT(rt0.c2))) WHERE ((v0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN 0.20874335250074993 ELSE ((vt0.c1) BETWEEN ('1978213925') AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN 0.20874335250074993 ELSE ((vt0.c1) BETWEEN ('1978213925') AND (vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN 0.20874335250074993 ELSE ((vt0.c1) BETWEEN ('1978213925') AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN 0.20874335250074993 ELSE ((vt0.c1) BETWEEN ('1978213925') AND (vt0.c1)) END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN 0.20874335250074993 ELSE ((vt0.c1) BETWEEN ('1978213925') AND (vt0.c1)) END);
SELECT ALL * FROM vt0 WHERE (CAST(640680849 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(640680849 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(640680849 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(640680849 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(640680849 COLLATE BINARY AS BLOB));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((('0.6419486952690416') IS TRUE)) ORDER BY (NOT ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((('0.6419486952690416') IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (NOT ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS LAST, rt0.c2);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((('0.6419486952690416') IS TRUE)) ORDER BY (NOT ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS LAST, rt0.c2;
SELECT SUM(count) FROM (SELECT (((('0.6419486952690416') IS TRUE)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (NOT ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS LAST, rt0.c2);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((('0.6419486952690416') IS TRUE)) ORDER BY (NOT ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))) ASC  NULLS LAST, rt0.c2;
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE ((NOT (v0.c0)));
SELECT ALL * FROM rt0 WHERE (((((((((0.7674242294849677)OR(LIKE(rt0.c2, 0.029163237237332384, 'D'))))AND(((rt0.c1)AND(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.7674242294849677)OR(LIKE(rt0.c2, 0.029163237237332384, 'D'))))AND(((rt0.c1)AND(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((0.7674242294849677)OR(LIKE(rt0.c2, 0.029163237237332384, 'D'))))AND(((rt0.c1)AND(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((0.7674242294849677)OR(LIKE(rt0.c2, 0.029163237237332384, 'D'))))AND(((rt0.c1)AND(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((~ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((0.7674242294849677)OR(LIKE(rt0.c2, 0.029163237237332384, 'D'))))AND(((rt0.c1)AND(rt0.c0)))))OR(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)))AND((~ (rt0.c2)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON 1153244725 LEFT OUTER JOIN rt0 ON ((((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, rt0.c2)))))>((CAST(rt0.c0 AS INTEGER)))) WHERE (((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON 1153244725 LEFT OUTER JOIN rt0 ON ((((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, rt0.c2)))))>((CAST(rt0.c0 AS INTEGER)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON 1153244725 LEFT OUTER JOIN rt0 ON ((((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, rt0.c2)))))>((CAST(rt0.c0 AS INTEGER)))) WHERE (((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1))) ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON 1153244725 LEFT OUTER JOIN rt0 ON ((((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, rt0.c2)))))>((CAST(rt0.c0 AS INTEGER)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN vt0 ON 1153244725 LEFT OUTER JOIN rt0 ON ((((((NULL, rt0.c0, rt0.c2)) NOT BETWEEN ((NULL, vt0.c0, vt0.c0)) AND ((vt0.c1, v0.c0, rt0.c2)))))>((CAST(rt0.c0 AS INTEGER)))) WHERE (((((((vt0.c1)OR(rt0.c0)))AND(rt0.c1))) ISNULL));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c1 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS REAL) AS REAL)) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END) AND (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN (rt0.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN (rt0.c2 IN ()) END) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (CASE WHEN v0.c0 THEN (rt0.c2 IN ()) END);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON UNLIKELY((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0)))) WHERE ((0.5919600223235447 IN ())) ORDER BY (NOT (567007322 COLLATE RTRIM))  NULLS LAST, (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.5919600223235447 IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON UNLIKELY((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0)))) ORDER BY (NOT (567007322 COLLATE RTRIM))  NULLS LAST, (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON UNLIKELY((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0)))) WHERE ((0.5919600223235447 IN ())) ORDER BY (NOT (567007322 COLLATE RTRIM))  NULLS LAST, (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((0.5919600223235447 IN ())) IS TRUE)  as count FROM v0 CROSS JOIN rt0 ON UNLIKELY((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0)))) ORDER BY (NOT (567007322 COLLATE RTRIM))  NULLS LAST, (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM v0 CROSS JOIN rt0 ON UNLIKELY((((v0.c0)) BETWEEN ((rt0.c1)) AND ((v0.c0)))) WHERE ((0.5919600223235447 IN ())) ORDER BY (NOT (567007322 COLLATE RTRIM))  NULLS LAST, (CAST(rt0.c1 AS REAL) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)AND(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)AND(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (CASE (0x4a8e70a0 IN (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((v0.c0)/(v0.c0)) END) ORDER BY (((((((v0.c0)AND(0.44577695680685836)))OR(0.5030289883922275))))<(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))  NULLS FIRST, (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS TEXT), json_extract(v0.c0, v0.c0)))<>((CAST(v0.c0 AS REAL), (((v0.c0))!=((v0.c0))), ('' IN (v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (0x4a8e70a0 IN (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((v0.c0)/(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)AND(0.44577695680685836)))OR(0.5030289883922275))))<(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))  NULLS FIRST, (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS TEXT), json_extract(v0.c0, v0.c0)))!=((CAST(v0.c0 AS REAL), (((v0.c0))!=((v0.c0))), ('' IN (v0.c0, v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE (0x4a8e70a0 IN (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((v0.c0)/(v0.c0)) END) ORDER BY (((((((v0.c0)AND(0.44577695680685836)))OR(0.5030289883922275))))<(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))  NULLS FIRST, (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS TEXT), json_extract(v0.c0, v0.c0)))<>((CAST(v0.c0 AS REAL), (((v0.c0))!=((v0.c0))), ('' IN (v0.c0, v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (0x4a8e70a0 IN (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((v0.c0)/(v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY (((((((v0.c0)AND(0.44577695680685836)))OR(0.5030289883922275))))<(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))  NULLS FIRST, (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS TEXT), json_extract(v0.c0, v0.c0)))!=((CAST(v0.c0 AS REAL), (((v0.c0))!=((v0.c0))), ('' IN (v0.c0, v0.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE (0x4a8e70a0 IN (v0.c0))  WHEN v0.c0 THEN (v0.c0 IN ()) ELSE ((v0.c0)/(v0.c0)) END) ORDER BY (((((((v0.c0)AND(0.44577695680685836)))OR(0.5030289883922275))))<(((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))))  NULLS FIRST, (((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)), CAST(v0.c0 AS TEXT), json_extract(v0.c0, v0.c0)))<>((CAST(v0.c0 AS REAL), (((v0.c0))!=((v0.c0))), ('' IN (v0.c0, v0.c0)))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((rt0.c1)GLOB(rt0.c1)), ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c0 IN ()), CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((rt0.c1)GLOB(rt0.c1)), ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c0 IN ()), CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END, rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((rt0.c1)GLOB(rt0.c1)), ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c0 IN ()), CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END, rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((rt0.c1)GLOB(rt0.c1)), ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c0 IN ()), CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END, rt0.c0)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((JULIANDAY(v0.c0, v0.c0, v0.c0), ((rt0.c1)GLOB(rt0.c1)), ((x'') NOT BETWEEN (rt0.c2) AND (rt0.c2)))) AND (((rt0.c0 IN ()), CASE rt0.c1  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 WHEN rt0.c0 THEN v0.c0 END, rt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0)<=(vt0.c0))))) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN 'Dgg(BK<2p' WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN 'Dgg(BK<2p' WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0)<=(vt0.c0))))) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN 'Dgg(BK<2p' WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN 'Dgg(BK<2p' WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (((v0.c0)<=(vt0.c0))))) ORDER BY (CASE vt0.c1  WHEN vt0.c1 THEN 'Dgg(BK<2p' WHEN vt0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE vt0.c1 END IN ());
SELECT * FROM vt0 WHERE (((CAST('' AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('' AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST('' AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('' AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST('' AS TEXT)) BETWEEN ((vt0.c1 IN ())) AND (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0 DESC, CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN v0.c0 THEN ((v0.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN v0.c0 THEN ((v0.c0) NOTNULL) END DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0 DESC, CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN v0.c0 THEN ((v0.c0) NOTNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY v0.c0 DESC, CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN v0.c0 THEN ((v0.c0) NOTNULL) END DESC);
SELECT ALL * FROM v0 WHERE (v0.c0) ORDER BY v0.c0 DESC, CASE (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))  WHEN v0.c0 THEN ((v0.c0) NOTNULL) END DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c1) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((TRIM(DISTINCT v0.c0)) BETWEEN (ROUND(rt0.c1, rt0.c1)) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT v0.c0)) BETWEEN (ROUND(rt0.c1, rt0.c1)) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((TRIM(DISTINCT v0.c0)) BETWEEN (ROUND(rt0.c1, rt0.c1)) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT v0.c0)) BETWEEN (ROUND(rt0.c1, rt0.c1)) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((TRIM(DISTINCT v0.c0)) BETWEEN (ROUND(rt0.c1, rt0.c1)) AND (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((rt0.c2)IS(v0.c0)))*((- (vt0.c1)))) LEFT OUTER JOIN rt0 ON HEX((NOT (rt0.c1))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (((((rt0.c2))<=((rt0.c1))))))) ORDER BY ((+ (vt0.c1)) IN ((v0.c0 IN (vt0.c0)), x'7cced26b')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (((((rt0.c2))<=((rt0.c1))))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((rt0.c2)IS(v0.c0)))*((- (vt0.c1)))) LEFT OUTER JOIN rt0 ON HEX((NOT (rt0.c1))) ORDER BY ((+ (vt0.c1)) IN ((v0.c0 IN (vt0.c0)), x'7cced26b')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((rt0.c2)IS(v0.c0)))*((- (vt0.c1)))) LEFT OUTER JOIN rt0 ON HEX((NOT (rt0.c1))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (((((rt0.c2))<=((rt0.c1))))))) ORDER BY ((+ (vt0.c1)) IN ((v0.c0 IN (vt0.c0)), x'7cced26b')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (((((rt0.c2))<=((rt0.c1))))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((rt0.c2)IS(v0.c0)))*((- (vt0.c1)))) LEFT OUTER JOIN rt0 ON HEX((NOT (rt0.c1))) ORDER BY ((+ (vt0.c1)) IN ((v0.c0 IN (vt0.c0)), x'7cced26b')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((rt0.c2)IS(v0.c0)))*((- (vt0.c1)))) LEFT OUTER JOIN rt0 ON HEX((NOT (rt0.c1))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND (((((rt0.c2))<=((rt0.c1))))))) ORDER BY ((+ (vt0.c1)) IN ((v0.c0 IN (vt0.c0)), x'7cced26b')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)>>(v0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN x'' END))) ORDER BY (((~ (vt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(v0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN x'' END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((~ (vt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)>>(v0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN x'' END))) ORDER BY (((~ (vt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(v0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN x'' END))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((~ (vt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)>>(v0.c0)))IS(CASE WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN v0.c0 THEN x'' END))) ORDER BY (((~ (vt0.c0))) BETWEEN ((v0.c0 IN ())) AND ((v0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 COLLATE NOCASE))>=((('>' IN ())))) WHERE (((((rt0.c2) IS TRUE))||(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((rt0.c0)) BETWEEN (('')) AND ((rt0.c2 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))||(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 COLLATE NOCASE))>=((('>' IN ())))) ORDER BY (((rt0.c0)) BETWEEN (('')) AND ((rt0.c2 COLLATE NOCASE))) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 COLLATE NOCASE))>=((('>' IN ())))) WHERE (((((rt0.c2) IS TRUE))||(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((rt0.c0)) BETWEEN (('')) AND ((rt0.c2 COLLATE NOCASE))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS TRUE))||(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 COLLATE NOCASE))>=((('>' IN ())))) ORDER BY (((rt0.c0)) BETWEEN (('')) AND ((rt0.c2 COLLATE NOCASE))) ASC);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON (((rt0.c1 COLLATE NOCASE))>=((('>' IN ())))) WHERE (((((rt0.c2) IS TRUE))||(((v0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY (((rt0.c0)) BETWEEN (('')) AND ((rt0.c2 COLLATE NOCASE))) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)*(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)*(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c1))) AND (vt0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((TRIM(rt0.c2, rt0.c0)) NOTNULL)) ORDER BY ((rt0.c1) NOT BETWEEN ((((((((('1112339406')OR(rt0.c2)))OR(0.5269241640139121)))OR(v0.c0)))AND(v0.c0))) AND (((rt0.c0)>>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2, rt0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) NOT BETWEEN ((((((((('1112339406')OR(rt0.c2)))OR(0.5269241640139121)))OR(v0.c0)))AND(v0.c0))) AND (((rt0.c0)>>(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((TRIM(rt0.c2, rt0.c0)) NOTNULL)) ORDER BY ((rt0.c1) NOT BETWEEN ((((((((('1112339406')OR(rt0.c2)))OR(0.5269241640139121)))OR(v0.c0)))AND(v0.c0))) AND (((rt0.c0)>>(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ((((TRIM(rt0.c2, rt0.c0)) NOTNULL)) IS TRUE)  as count FROM v0, rt0 ORDER BY ((rt0.c1) NOT BETWEEN ((((((((('1112339406')OR(rt0.c2)))OR(0.5269241640139121)))OR(v0.c0)))AND(v0.c0))) AND (((rt0.c0)>>(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((TRIM(rt0.c2, rt0.c0)) NOTNULL)) ORDER BY ((rt0.c1) NOT BETWEEN ((((((((('1112339406')OR(rt0.c2)))OR(0.5269241640139121)))OR(v0.c0)))AND(v0.c0))) AND (((rt0.c0)>>(rt0.c2)))) DESC;
SELECT ALL * FROM v0 WHERE (ABS(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((ABS(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((ABS(v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (ABS(v0.c0));
SELECT * FROM vt0, v0, rt0 WHERE ((((x'88bb')) BETWEEN ((vt0.c0)) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((x'88bb')) BETWEEN ((vt0.c0)) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((x'88bb')) BETWEEN ((vt0.c0)) AND ((rt0.c2 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((x'88bb')) BETWEEN ((vt0.c0)) AND ((rt0.c2 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE ((((x'88bb')) BETWEEN ((vt0.c0)) AND ((rt0.c2 COLLATE NOCASE))));
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))OR(0.02825196097763405)))OR((((rt0.c2))<=((rt0.c0))))) WHERE (CASE WHEN rt0.c2 THEN ((v0.c0) NOTNULL) WHEN vt0.c1 THEN TIME(rt0.c1, rt0.c0, vt0.c1) WHEN ((((0x5825321d)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1)/(v0.c0)) WHEN x'4daf' THEN (- (0.9831117911347288)) WHEN x'' THEN ((rt0.c2)+(rt0.c1)) ELSE UNLIKELY(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((v0.c0) NOTNULL) WHEN vt0.c1 THEN TIME(rt0.c1, rt0.c0, vt0.c1) WHEN ((((0X5825321d)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1)/(v0.c0)) WHEN x'4daf' THEN (- (0.9831117911347288)) WHEN x'' THEN ((rt0.c2)+(rt0.c1)) ELSE UNLIKELY(rt0.c1) END) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))OR(0.02825196097763405)))OR((((rt0.c2))<=((rt0.c0))))));
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))OR(0.02825196097763405)))OR((((rt0.c2))<=((rt0.c0))))) WHERE (CASE WHEN rt0.c2 THEN ((v0.c0) NOTNULL) WHEN vt0.c1 THEN TIME(rt0.c1, rt0.c0, vt0.c1) WHEN ((((0x5825321d)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1)/(v0.c0)) WHEN x'4daf' THEN (- (0.9831117911347288)) WHEN x'' THEN ((rt0.c2)+(rt0.c1)) ELSE UNLIKELY(rt0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c2 THEN ((v0.c0) NOTNULL) WHEN vt0.c1 THEN TIME(rt0.c1, rt0.c0, vt0.c1) WHEN ((((0X5825321d)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1)/(v0.c0)) WHEN x'4daf' THEN (- (0.9831117911347288)) WHEN x'' THEN ((rt0.c2)+(rt0.c1)) ELSE UNLIKELY(rt0.c1) END) IS TRUE)  as count FROM vt0, rt0 CROSS JOIN v0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))OR(0.02825196097763405)))OR((((rt0.c2))<=((rt0.c0))))));
SELECT * FROM vt0, rt0 CROSS JOIN v0 ON (((((((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt0.c1))))OR(0.02825196097763405)))OR((((rt0.c2))<=((rt0.c0))))) WHERE (CASE WHEN rt0.c2 THEN ((v0.c0) NOTNULL) WHEN vt0.c1 THEN TIME(rt0.c1, rt0.c0, vt0.c1) WHEN ((((0x5825321d)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1)/(v0.c0)) WHEN x'4daf' THEN (- (0.9831117911347288)) WHEN x'' THEN ((rt0.c2)+(rt0.c1)) ELSE UNLIKELY(rt0.c1) END);
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(NULLIF(rt0.c1, rt0.c1) AS NUMERIC) WHERE (CASE ((((v0.c0)OR(vt0.c1)))OR(rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN (- (0.05954116497109718)) END) ORDER BY ((v0.c0) ISNULL)  NULLS LAST, ((((vt0.c1) IS TRUE)) BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (rt0.c2)), (+ ('&'));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(vt0.c1)))OR(rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN (- (0.05954116497109718)) END) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(NULLIF(rt0.c1, rt0.c1) AS NUMERIC) ORDER BY ((v0.c0) ISNULL)  NULLS LAST, ((((vt0.c1) IS TRUE)) BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (rt0.c2)), (+ ('&')));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(NULLIF(rt0.c1, rt0.c1) AS NUMERIC) WHERE (CASE ((((v0.c0)OR(vt0.c1)))OR(rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN (- (0.05954116497109718)) END) ORDER BY ((v0.c0) ISNULL)  NULLS LAST, ((((vt0.c1) IS TRUE)) BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (rt0.c2)), (+ ('&'));
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((v0.c0)OR(vt0.c1)))OR(rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN (- (0.05954116497109718)) END) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(NULLIF(rt0.c1, rt0.c1) AS NUMERIC) ORDER BY ((v0.c0) ISNULL)  NULLS LAST, ((((vt0.c1) IS TRUE)) BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (rt0.c2)), (+ ('&')));
SELECT ALL * FROM vt0, v0 FULL OUTER JOIN rt0 ON CAST(NULLIF(rt0.c1, rt0.c1) AS NUMERIC) WHERE (CASE ((((v0.c0)OR(vt0.c1)))OR(rt0.c0))  WHEN (rt0.c1 IN (rt0.c1)) THEN (- (0.05954116497109718)) END) ORDER BY ((v0.c0) ISNULL)  NULLS LAST, ((((vt0.c1) IS TRUE)) BETWEEN (((vt0.c0)GLOB(rt0.c2))) AND (rt0.c2)), (+ ('&'));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c1)>>(vt0.c1))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) NOT NULL) WHERE (((((((v0.c0)OR(rt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY (((CASE WHEN vt0.c0 THEN 0.04984979035118842 END, CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN v0.c0 THEN '-1753768473' END))>=((vt0.c0, ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1))) ASC  NULLS LAST, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN x'3bd7' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((((rt0.c0)AND(0.02581717453015331)))AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((NULL)<(vt0.c1)) THEN vt0.c0 ELSE (rt0.c2 IN ()) END DESC, ((vt0.c1 COLLATE BINARY) BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c1)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) NOT NULL) ORDER BY (((CASE WHEN vt0.c0 THEN 0.04984979035118842 END, CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN v0.c0 THEN '-1753768473' END))>=((vt0.c0, ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1))) ASC  NULLS LAST, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN x'3bd7' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((((rt0.c0)AND(0.02581717453015331)))AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((NULL)<(vt0.c1)) THEN vt0.c0 ELSE (rt0.c2 IN ()) END DESC, ((vt0.c1 COLLATE BINARY) BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) NOT NULL) WHERE (((((((v0.c0)OR(rt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY (((CASE WHEN vt0.c0 THEN 0.04984979035118842 END, CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN v0.c0 THEN '-1753768473' END))>=((vt0.c0, ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1))) ASC  NULLS LAST, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN x'3bd7' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((((rt0.c0)AND(0.02581717453015331)))AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((NULL)<(vt0.c1)) THEN vt0.c0 ELSE (rt0.c2 IN ()) END DESC, ((vt0.c1 COLLATE BINARY) BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(rt0.c1)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) NOT NULL) ORDER BY (((CASE WHEN vt0.c0 THEN 0.04984979035118842 END, CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN v0.c0 THEN '-1753768473' END))>=((vt0.c0, ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1))) ASC  NULLS LAST, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN x'3bd7' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((((rt0.c0)AND(0.02581717453015331)))AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((NULL)<(vt0.c1)) THEN vt0.c0 ELSE (rt0.c2 IN ()) END DESC, ((vt0.c1 COLLATE BINARY) BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, v0 INNER JOIN rt0 ON ((vt0.c1 COLLATE BINARY) NOT NULL) WHERE (((((((v0.c0)OR(rt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY (((CASE WHEN vt0.c0 THEN 0.04984979035118842 END, CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN v0.c0 THEN '-1753768473' END))>=((vt0.c0, ((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)), rt0.c1))) ASC  NULLS LAST, CASE WHEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN x'3bd7' WHEN vt0.c1 THEN v0.c0 ELSE v0.c0 END THEN ((((rt0.c0)AND(0.02581717453015331)))AND(vt0.c0)) WHEN (vt0.c1 IN ()) THEN ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c0)) WHEN ((NULL)<(vt0.c1)) THEN vt0.c0 ELSE (rt0.c2 IN ()) END DESC, ((vt0.c1 COLLATE BINARY) BETWEEN (rt0.c0) AND (((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL) NOT BETWEEN (v0.c0) AND (0.15919369684122742)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOT NULL))-(((rt0.c0)<>(rt0.c0)))) DESC  NULLS FIRST, (~ (UNLIKELY(rt0.c0)))  NULLS LAST, ((vt0.c1)IS NOT(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (v0.c0) AND (0.15919369684122742)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c2) NOT NULL))-(((rt0.c0)<>(rt0.c0)))) DESC  NULLS FIRST, (~ (UNLIKELY(rt0.c0)))  NULLS LAST, ((vt0.c1)IS NOT(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL) NOT BETWEEN (v0.c0) AND (0.15919369684122742)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOT NULL))-(((rt0.c0)<>(rt0.c0)))) DESC  NULLS FIRST, (~ (UNLIKELY(rt0.c0)))  NULLS LAST, ((vt0.c1)IS NOT(rt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (v0.c0) AND (0.15919369684122742)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c2) NOT NULL))-(((rt0.c0)<>(rt0.c0)))) DESC  NULLS FIRST, (~ (UNLIKELY(rt0.c0)))  NULLS LAST, ((vt0.c1)IS NOT(rt0.c1)));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL) NOT BETWEEN (v0.c0) AND (0.15919369684122742)) COLLATE BINARY) ORDER BY ((((rt0.c2) NOT NULL))-(((rt0.c0)<>(rt0.c0)))) DESC  NULLS FIRST, (~ (UNLIKELY(rt0.c0)))  NULLS LAST, ((vt0.c1)IS NOT(rt0.c1));
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))&(((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt0.c0, vt0.c0))&(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))&(((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((ROUND(vt0.c0, vt0.c0))&(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((ROUND(vt0.c0, vt0.c0))&(((vt0.c1)AND(vt0.c1)))));
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON TYPEOF(((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1.88749923E9))) WHERE (v0.c0) ORDER BY CASE WHEN (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((rt0.c1)>>(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON TYPEOF(((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1.88749923E9))) ORDER BY CASE WHEN (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((rt0.c1)>>(rt0.c0)) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON TYPEOF(((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1.88749923E9))) WHERE (v0.c0) ORDER BY CASE WHEN (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((rt0.c1)>>(rt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON TYPEOF(((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1.88749923E9))) ORDER BY CASE WHEN (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((rt0.c1)>>(rt0.c0)) END DESC);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON TYPEOF(((rt0.c1) NOT BETWEEN (rt0.c2) AND (-1.88749923E9))) WHERE (v0.c0) ORDER BY CASE WHEN (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c0))) THEN ((rt0.c1)>>(rt0.c0)) END DESC;
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT vt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END WHERE (((((rt0.c2)AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((((((((((vt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((((((((((vt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT vt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT vt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END WHERE (((((rt0.c2)AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((((((((((vt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((((((((((vt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT vt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END);
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON CASE WHEN TYPEOF(DISTINCT vt0.c1) THEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c1)) END WHERE (((((rt0.c2)AND(vt0.c1))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((((((((((vt0.c1)AND(rt0.c1)))AND(rt0.c1)))OR(vt0.c1)))OR(rt0.c0)))AND(rt0.c2)))AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN ())) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c0 IN ())) NOTNULL));
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c2)LIKE(rt0.c1)) COLLATE RTRIM WHERE (((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c2)LIKE(rt0.c1)) COLLATE RTRIM);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c2)LIKE(rt0.c1)) COLLATE RTRIM WHERE (((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c2)LIKE(rt0.c1)) COLLATE RTRIM);
SELECT * FROM v0, rt0 CROSS JOIN vt0 ON ((rt0.c2)LIKE(rt0.c1)) COLLATE RTRIM WHERE (((((((vt0.c0)OR(rt0.c1)))AND(vt0.c0))) BETWEEN (((rt0.c0)GLOB(vt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))));
SELECT ALL * FROM rt0 WHERE (((json_array(rt0.c0, rt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_array(rt0.c0, rt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((json_array(rt0.c0, rt0.c1)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((json_array(rt0.c0, rt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((json_array(rt0.c0, rt0.c1)) IS TRUE));
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((rt0.c1 IN (1.05813285E8)))AND(((((rt0.c0)AND(vt0.c1)))AND(rt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON x'' WHERE ((((vt0.c0 IN ()))LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((rt0.c1 IN (1.05813285E8)))AND(((((rt0.c0)AND(vt0.c1)))AND(rt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON x'');
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((rt0.c1 IN (1.05813285E8)))AND(((((rt0.c0)AND(vt0.c1)))AND(rt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON x'' WHERE ((((vt0.c0 IN ()))LIKE(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))LIKE(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (((((rt0.c1 IN (1.05813285E8)))AND(((((rt0.c0)AND(vt0.c1)))AND(rt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON x'');
SELECT ALL * FROM rt0 INNER JOIN v0 ON (((((rt0.c1 IN (1.05813285E8)))AND(((((rt0.c0)AND(vt0.c1)))AND(rt0.c0)))))OR(vt0.c1 COLLATE RTRIM)) LEFT OUTER JOIN vt0 ON x'' WHERE ((((vt0.c0 IN ()))LIKE(vt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (0.5996907060260577);
SELECT SUM(count) FROM (SELECT ((0.5996907060260577) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (0.5996907060260577);
SELECT SUM(count) FROM (SELECT ((0.5996907060260577) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (0.5996907060260577);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN ())) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c1 IN ()) IN ())) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM vt0 WHERE (x'3e73');
SELECT SUM(count) FROM (SELECT ALL ((x'3e73') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'3e73');
SELECT SUM(count) FROM (SELECT ALL ((x'3e73') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'3e73');
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c1)>=(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c1)>=(rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0);
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (((vt0.c1)>=(rt0.c2)) COLLATE NOCASE);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOTNULL) COLLATE BINARY WHERE ((~ (0.4896662911434797))) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.4896662911434797))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOTNULL) COLLATE BINARY ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOTNULL) COLLATE BINARY WHERE ((~ (0.4896662911434797))) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (0.4896662911434797))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOTNULL) COLLATE BINARY ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC);
SELECT * FROM rt0 RIGHT OUTER JOIN v0 ON ((rt0.c2) NOTNULL) COLLATE BINARY WHERE ((~ (0.4896662911434797))) ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END END) ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END END) ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c1) IS FALSE) THEN (vt0.c0 IN (vt0.c0)) ELSE CASE vt0.c0  WHEN rt0.c1 THEN vt0.c0 END END) ORDER BY (- (CAST(vt0.c0 AS TEXT))) ASC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((((vt0.c1 IN (-1.833346671E9)))OR(((rt0.c0)<=(vt0.c1)))))OR((~ (v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN (-1.833346671E9)))OR(((rt0.c0)<=(vt0.c1)))))OR((~ (v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(v0.c0))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((((vt0.c1 IN (-1.833346671E9)))OR(((rt0.c0)<=(vt0.c1)))))OR((~ (v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(v0.c0)));
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN (-1.833346671E9)))OR(((rt0.c0)<=(vt0.c1)))))OR((~ (v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(v0.c0))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((((((((vt0.c1 IN (-1.833346671E9)))OR(((rt0.c0)<=(vt0.c1)))))OR((~ (v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(v0.c0)));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<=(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<=(vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<=(vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN '1153244725' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((0.9538487660282188)>>(rt0.c0))) AND (MAX(rt0.c0, rt0.c2)))) ORDER BY ((((rt0.c2 IN ())))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN '1153244725' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((0.9538487660282188)>>(rt0.c0))) AND (MAX(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN '1153244725' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((0.9538487660282188)>>(rt0.c0))) AND (MAX(rt0.c0, rt0.c2)))) ORDER BY ((((rt0.c2 IN ())))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN '1153244725' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((0.9538487660282188)>>(rt0.c0))) AND (MAX(rt0.c0, rt0.c2)))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c2 IN ())))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE WHEN rt0.c1 THEN '1153244725' WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END) NOT BETWEEN (((0.9538487660282188)>>(rt0.c0))) AND (MAX(rt0.c0, rt0.c2)))) ORDER BY ((((rt0.c2 IN ())))>((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST;
SELECT ALL * FROM v0, rt0 WHERE ((('-959585131')<>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c1))>=(('3fJ(U8'))) IN (((rt0.c1)|(rt0.c2)))) DESC  NULLS FIRST, (- (((((((((rt0.c2)AND(rt0.c2)))AND('1522539097')))AND(rt0.c2)))OR(v0.c0)))) ASC, SQLITE_COMPILEOPTION_GET(((rt0.c0)IS(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-959585131')!=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1))>=(('3fJ(U8'))) IN (((rt0.c1)|(rt0.c2)))) DESC  NULLS FIRST, (- (((((((((rt0.c2)AND(rt0.c2)))AND('1522539097')))AND(rt0.c2)))OR(v0.c0)))) ASC, SQLITE_COMPILEOPTION_GET(((rt0.c0)IS(rt0.c1)))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((('-959585131')<>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c1))>=(('3fJ(U8'))) IN (((rt0.c1)|(rt0.c2)))) DESC  NULLS FIRST, (- (((((((((rt0.c2)AND(rt0.c2)))AND('1522539097')))AND(rt0.c2)))OR(v0.c0)))) ASC, SQLITE_COMPILEOPTION_GET(((rt0.c0)IS(rt0.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('-959585131')!=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((rt0.c1))>=(('3fJ(U8'))) IN (((rt0.c1)|(rt0.c2)))) DESC  NULLS FIRST, (- (((((((((rt0.c2)AND(rt0.c2)))AND('1522539097')))AND(rt0.c2)))OR(v0.c0)))) ASC, SQLITE_COMPILEOPTION_GET(((rt0.c0)IS(rt0.c1)))  NULLS LAST);
SELECT ALL * FROM v0, rt0 WHERE ((('-959585131')<>(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))))) ORDER BY ((((rt0.c1))>=(('3fJ(U8'))) IN (((rt0.c1)|(rt0.c2)))) DESC  NULLS FIRST, (- (((((((((rt0.c2)AND(rt0.c2)))AND('1522539097')))AND(rt0.c2)))OR(v0.c0)))) ASC, SQLITE_COMPILEOPTION_GET(((rt0.c0)IS(rt0.c1)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0))) ORDER BY ((v0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0))) ORDER BY ((v0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0) IS FALSE)) NOT BETWEEN ((v0.c0 IN ())) AND (v0.c0))) ORDER BY ((v0.c0) ISNULL) COLLATE BINARY COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY (((1665001508)GLOB(v0.c0)) IN ()) ASC, (((v0.c0 IN (vt0.c1))) BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((1665001508)GLOB(v0.c0)) IN ()) ASC, (((v0.c0 IN (vt0.c1))) BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY (((1665001508)GLOB(v0.c0)) IN ()) ASC, (((v0.c0 IN (vt0.c1))) BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((v0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((1665001508)GLOB(v0.c0)) IN ()) ASC, (((v0.c0 IN (vt0.c1))) BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST((v0.c0 IN ()) AS REAL)) ORDER BY (((1665001508)GLOB(v0.c0)) IN ()) ASC, (((v0.c0 IN (vt0.c1))) BETWEEN ((((vt0.c0))>=((v0.c0)))) AND (((vt0.c0) BETWEEN (vt0.c1) AND (NULL))))  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE ((((((((rt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c1)) AND ((v0.c0, v0.c0, vt0.c0))))OR(CASE v0.c0  WHEN vt0.c0 THEN 0.8388953412078006 ELSE v0.c0 END)))OR(((rt0.c1)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c1)) AND ((v0.c0, v0.c0, vt0.c0))))OR(CASE v0.c0  WHEN vt0.c0 THEN 0.8388953412078006 ELSE v0.c0 END)))OR(((rt0.c1)=(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((((rt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c1)) AND ((v0.c0, v0.c0, vt0.c0))))OR(CASE v0.c0  WHEN vt0.c0 THEN 0.8388953412078006 ELSE v0.c0 END)))OR(((rt0.c1)=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c1)) AND ((v0.c0, v0.c0, vt0.c0))))OR(CASE v0.c0  WHEN vt0.c0 THEN 0.8388953412078006 ELSE v0.c0 END)))OR(((rt0.c1)=(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((((((rt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c1, vt0.c1)) AND ((v0.c0, v0.c0, vt0.c0))))OR(CASE v0.c0  WHEN vt0.c0 THEN 0.8388953412078006 ELSE v0.c0 END)))OR(((rt0.c1)=(vt0.c1)))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((- (rt0.c2)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2)%('1250848928')))) WHERE (((((rt0.c2 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY LOWER(((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((- (rt0.c2)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2)%('1250848928')))) ORDER BY LOWER(((vt0.c0) NOT NULL)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((- (rt0.c2)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2)%('1250848928')))) WHERE (((((rt0.c2 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY LOWER(((vt0.c0) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((((- (rt0.c2)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2)%('1250848928')))) ORDER BY LOWER(((vt0.c0) NOT NULL)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((((- (rt0.c2)))AND(CAST(vt0.c1 AS INTEGER))))AND(((rt0.c2)%('1250848928')))) WHERE (((((rt0.c2 COLLATE NOCASE)OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))))) ORDER BY LOWER(((vt0.c0) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN '0.8388953412078006' COLLATE RTRIM END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN '0.8388953412078006' COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN '0.8388953412078006' COLLATE RTRIM END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN '0.8388953412078006' COLLATE RTRIM END) IS TRUE)  as count FROM vt0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 WHEN ((vt0.c1)<=(vt0.c0)) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN '0.8388953412078006' COLLATE RTRIM END) ORDER BY NULL DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))) IN (((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))) IN (((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))) IN (((rt0.c0)>=(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))) IN (((rt0.c0)>=(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c0, rt0.c0, rt0.c2))<((rt0.c1, rt0.c2, rt0.c1))) IN (((rt0.c0)>=(rt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.22361058891459284)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0.22361058891459284))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.22361058891459284)));
SELECT SUM(count) FROM (SELECT ALL (((+ (0.22361058891459284))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (0.22361058891459284)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffff998e0a59)))OR(rt0.c0)))OR(0Xe00733a COLLATE BINARY)))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffff998e0a59)))OR(rt0.c0)))OR(0Xe00733a COLLATE BINARY)))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffff998e0a59)))OR(rt0.c0)))OR(0Xe00733a COLLATE BINARY)))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffff998e0a59)))OR(rt0.c0)))OR(0Xe00733a COLLATE BINARY)))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((rt0.c1) NOT BETWEEN (vt0.c1) AND (0xffffffff998e0a59)))OR(rt0.c0)))OR(0Xe00733a COLLATE BINARY)))OR(vt0.c1 COLLATE RTRIM)))AND(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((vt0.c0) BETWEEN (0X4410482c) AND (rt0.c0)) AS BLOB)) ORDER BY CAST(((vt0.c1)IS(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((((vt0.c1)OR(NULL)))AND(rt0.c1)))|(((rt0.c0)<=(vt0.c1)))) ASC, CAST(((NULL)>=(vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (0X4410482c) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((vt0.c1)IS(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((((vt0.c1)OR(NULL)))AND(rt0.c1)))|(((rt0.c0)<=(vt0.c1)))) ASC, CAST(((NULL)>=(vt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((vt0.c0) BETWEEN (0X4410482c) AND (rt0.c0)) AS BLOB)) ORDER BY CAST(((vt0.c1)IS(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((((vt0.c1)OR(NULL)))AND(rt0.c1)))|(((rt0.c0)<=(vt0.c1)))) ASC, CAST(((NULL)>=(vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (0X4410482c) AND (rt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CAST(((vt0.c1)IS(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((((vt0.c1)OR(NULL)))AND(rt0.c1)))|(((rt0.c0)<=(vt0.c1)))) ASC, CAST(((NULL)>=(vt0.c0)) AS TEXT) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST(((vt0.c0) BETWEEN (0X4410482c) AND (rt0.c0)) AS BLOB)) ORDER BY CAST(((vt0.c1)IS(rt0.c0)) AS BLOB) DESC  NULLS FIRST, ((((((vt0.c1)OR(NULL)))AND(rt0.c1)))|(((rt0.c0)<=(vt0.c1)))) ASC, CAST(((NULL)>=(vt0.c0)) AS TEXT) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c0)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c0)) ISNULL)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((LOWER(rt0.c0)) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((((rt0.c1)LIKE(x'a71d')))OR(((vt0.c0)>=(rt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN vt0.c1 THEN ((((rt0.c1)OR(rt0.c0)))OR(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN rt0.c0 ELSE SUBSTR(rt0.c2, rt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)LIKE(x'a71d')))OR(((vt0.c0)>=(rt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN vt0.c1 THEN ((((rt0.c1)OR(rt0.c0)))OR(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN rt0.c0 ELSE SUBSTR(rt0.c2, rt0.c1) END DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((((rt0.c1)LIKE(x'a71d')))OR(((vt0.c0)>=(rt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN vt0.c1 THEN ((((rt0.c1)OR(rt0.c0)))OR(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN rt0.c0 ELSE SUBSTR(rt0.c2, rt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)LIKE(x'a71d')))OR(((vt0.c0)>=(rt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN vt0.c1 THEN ((((rt0.c1)OR(rt0.c0)))OR(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN rt0.c0 ELSE SUBSTR(rt0.c2, rt0.c1) END DESC);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((((((rt0.c1)LIKE(x'a71d')))OR(((vt0.c0)>=(rt0.c0)))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt0.c0 IN ()) WHEN vt0.c1 THEN ((((rt0.c1)OR(rt0.c0)))OR(vt0.c1)) WHEN CAST(vt0.c1 AS TEXT) THEN rt0.c0 ELSE SUBSTR(rt0.c2, rt0.c1) END DESC;
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c1) NOT NULL) IN ())) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL));
SELECT COUNT(*) FROM v0, rt0 LEFT OUTER JOIN vt0 ON CAST(vt0.c1 AS REAL) WHERE ((((rt0.c1) NOT NULL) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (~ (((((rt0.c1)AND('1250848928')))OR(rt0.c1)))) CROSS JOIN rt0 ON ((v0.c0) NOT BETWEEN (CASE rt0.c0  WHEN '-1310238660' THEN rt0.c2 ELSE 0.49653845183833367 END) AND ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE (((rt0.c1)IS NOT(((v0.c0)>(NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(((v0.c0)>(NULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (~ (((((rt0.c1)AND('1250848928')))OR(rt0.c1)))) CROSS JOIN rt0 ON ((v0.c0) NOT BETWEEN (CASE rt0.c0  WHEN '-1310238660' THEN rt0.c2 ELSE 0.49653845183833367 END) AND ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (~ (((((rt0.c1)AND('1250848928')))OR(rt0.c1)))) CROSS JOIN rt0 ON ((v0.c0) NOT BETWEEN (CASE rt0.c0  WHEN '-1310238660' THEN rt0.c2 ELSE 0.49653845183833367 END) AND ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) WHERE (((rt0.c1)IS NOT(((v0.c0)>(NULL)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1)IS NOT(((v0.c0)>(NULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (~ (((((rt0.c1)AND('1250848928')))OR(rt0.c1)))) CROSS JOIN rt0 ON ((v0.c0) NOT BETWEEN (CASE rt0.c0  WHEN '-1310238660' THEN rt0.c2 ELSE 0.49653845183833367 END) AND ((((rt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c2))!=((rt0.c1))) THEN TRIM(DISTINCT rt0.c2, rt0.c2) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c0) ISNULL) WHEN ((rt0.c0)>=(NULL)) THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))<>((rt0.c1))) THEN TRIM(DISTINCT rt0.c2, rt0.c2) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c0) ISNULL) WHEN ((rt0.c0)>=(NULL)) THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c2))!=((rt0.c1))) THEN TRIM(DISTINCT rt0.c2, rt0.c2) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c0) ISNULL) WHEN ((rt0.c0)>=(NULL)) THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt0.c2))<>((rt0.c1))) THEN TRIM(DISTINCT rt0.c2, rt0.c2) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c0) ISNULL) WHEN ((rt0.c0)>=(NULL)) THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS TEXT) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (((rt0.c2))!=((rt0.c1))) THEN TRIM(DISTINCT rt0.c2, rt0.c2) WHEN CAST(rt0.c0 AS NUMERIC) THEN ((rt0.c0) ISNULL) WHEN ((rt0.c0)>=(NULL)) THEN (rt0.c0 IN ()) ELSE CAST(rt0.c0 AS TEXT) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS REAL)) ORDER BY NULL;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(x'46fd')))<(CASE 0.41364034023249663  WHEN '-948446971' THEN 0.7341633528506685 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((0.8845125783157599)AND(vt0.c0)))OR(vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(x'46fd')))<(CASE 0.41364034023249663  WHEN '-948446971' THEN 0.7341633528506685 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((0.8845125783157599)AND(vt0.c0)))OR(vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(x'46fd')))<(CASE 0.41364034023249663  WHEN '-948446971' THEN 0.7341633528506685 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((0.8845125783157599)AND(vt0.c0)))OR(vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(x'46fd')))<(CASE 0.41364034023249663  WHEN '-948446971' THEN 0.7341633528506685 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((0.8845125783157599)AND(vt0.c0)))OR(vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(x'46fd')))<(CASE 0.41364034023249663  WHEN '-948446971' THEN 0.7341633528506685 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY vt0.c0 ASC  NULLS FIRST, CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN ((((0.8845125783157599)AND(vt0.c0)))OR(vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)) END ASC  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (CAST((rt0.c2 IN ('{1e500000}')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ('{1e500000}')) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST((rt0.c2 IN ('{1e500000}')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ('{1e500000}')) AS BLOB)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CAST((rt0.c2 IN ('{1e500000}')) AS BLOB));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((NULLIF(DISTINCT rt0.c1, v0.c0)) NOT NULL)) ORDER BY (NOT ((+ (v0.c0)))) ASC  NULLS FIRST, (- ((((rt0.c1))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, v0.c0)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (NOT ((+ (v0.c0)))) ASC  NULLS FIRST, (- ((((rt0.c1))<=((v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((NULLIF(DISTINCT rt0.c1, v0.c0)) NOT NULL)) ORDER BY (NOT ((+ (v0.c0)))) ASC  NULLS FIRST, (- ((((rt0.c1))<=((v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULLIF(DISTINCT rt0.c1, v0.c0)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (NOT ((+ (v0.c0)))) ASC  NULLS FIRST, (- ((((rt0.c1))<=((v0.c0))))));
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE (((NULLIF(DISTINCT rt0.c1, v0.c0)) NOT NULL)) ORDER BY (NOT ((+ (v0.c0)))) ASC  NULLS FIRST, (- ((((rt0.c1))<=((v0.c0)))));
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1 IN ()))GLOB(((vt0.c0)<(rt0.c0))))) ORDER BY (((~ (rt0.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))GLOB(((vt0.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((~ (rt0.c2))) NOTNULL) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1 IN ()))GLOB(((vt0.c0)<(rt0.c0))))) ORDER BY (((~ (rt0.c2))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ()))GLOB(((vt0.c0)<(rt0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (((~ (rt0.c2))) NOTNULL) DESC);
SELECT ALL * FROM rt0, v0, vt0 WHERE ((((rt0.c1 IN ()))GLOB(((vt0.c0)<(rt0.c0))))) ORDER BY (((~ (rt0.c2))) NOTNULL) DESC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((JULIANDAY(v0.c0, vt0.c1, v0.c0))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((JULIANDAY(v0.c0, vt0.c1, v0.c0))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((JULIANDAY(v0.c0, vt0.c1, v0.c0))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((JULIANDAY(v0.c0, vt0.c1, v0.c0))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((rt0.c0)) BETWEEN ((JULIANDAY(v0.c0, vt0.c1, v0.c0))) AND (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0)))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) ISNULL) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) ISNULL) AS TEXT));
SELECT ALL * FROM rt0, v0 WHERE (((LIKELY(DISTINCT rt0.c1)) IS FALSE)) ORDER BY ((((rt0.c0)&(v0.c0)))&(rt0.c0))  NULLS FIRST, (CAST(rt0.c2 AS REAL) IN ()), (~ (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)&(v0.c0)))&(rt0.c0))  NULLS FIRST, (CAST(rt0.c2 AS REAL) IN ()), (~ (CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((LIKELY(DISTINCT rt0.c1)) IS FALSE)) ORDER BY ((((rt0.c0)&(v0.c0)))&(rt0.c0))  NULLS FIRST, (CAST(rt0.c2 AS REAL) IN ()), (~ (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(DISTINCT rt0.c1)) IS FALSE)) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((rt0.c0)&(v0.c0)))&(rt0.c0))  NULLS FIRST, (CAST(rt0.c2 AS REAL) IN ()), (~ (CAST(rt0.c2 AS REAL)))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((LIKELY(DISTINCT rt0.c1)) IS FALSE)) ORDER BY ((((rt0.c0)&(v0.c0)))&(rt0.c0))  NULLS FIRST, (CAST(rt0.c2 AS REAL) IN ()), (~ (CAST(rt0.c2 AS REAL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((vt0.c1) IS TRUE))-(((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE))-(((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((vt0.c1) IS TRUE))-(((v0.c0)IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) IS TRUE))-(((v0.c0)IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0, v0 NATURAL JOIN rt0);
SELECT COUNT(*) FROM vt0, v0 NATURAL JOIN rt0 WHERE (((((vt0.c1) IS TRUE))-(((v0.c0)IS NOT(v0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR('-1718744487')))AND(rt0.c1))) AND (((rt0.c2) ISNULL))) DESC, rt0.c1 ASC  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR(CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR('-1718744487')))AND(rt0.c1))) AND (((rt0.c2) ISNULL))) DESC, rt0.c1 ASC  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR(CAST(NULL AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR('-1718744487')))AND(rt0.c1))) AND (((rt0.c2) ISNULL))) DESC, rt0.c1 ASC  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR(CAST(NULL AS TEXT)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR('-1718744487')))AND(rt0.c1))) AND (((rt0.c2) ISNULL))) DESC, rt0.c1 ASC  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR(CAST(NULL AS TEXT))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c2))) BETWEEN (((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR('-1718744487')))AND(rt0.c1))) AND (((rt0.c2) ISNULL))) DESC, rt0.c1 ASC  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))))OR(CAST(NULL AS TEXT)));
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((((((((('dgg(bk<2p')AND(v0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((((((('dgg(bk<2p')AND(v0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((((((((('dgg(bk<2p')AND(v0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((((((('dgg(bk<2p')AND(v0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE ((+ ((((((((('dgg(bk<2p')AND(v0.c0)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE BINARY);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1))<((CAST('yEcY.\rh' AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))<((CAST('yEcY.\rh' AS REAL))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1))<((CAST('yEcY.\rh' AS REAL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))<((CAST('yEcY.\rh' AS REAL))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1))<((CAST('yEcY.\rh' AS REAL)))));
SELECT ALL * FROM vt0, rt0 WHERE (COALESCE(DISTINCT CASE WHEN rt0.c2 THEN 0.3344195006290096 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE WHEN rt0.c2 THEN 0.3344195006290096 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (COALESCE(DISTINCT CASE WHEN rt0.c2 THEN 0.3344195006290096 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT CASE WHEN rt0.c2 THEN 0.3344195006290096 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (COALESCE(DISTINCT CASE WHEN rt0.c2 THEN 0.3344195006290096 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN vt0.c0 END, vt0.c0 COLLATE BINARY)) ORDER BY (((((vt0.c1)AND(rt0.c2)))AND(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT * FROM v0 INNER JOIN rt0 ON DATETIME(rt0.c1, (rt0.c0 IN ()), ((rt0.c0) NOT NULL)) INNER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) WHERE ((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c1, '1179196970')))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c1, '1179196970')))) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON DATETIME(rt0.c1, (rt0.c0 IN ()), ((rt0.c0) NOT NULL)) INNER JOIN vt0 ON ((rt0.c2 IN ()) IN ()));
SELECT * FROM v0 INNER JOIN rt0 ON DATETIME(rt0.c1, (rt0.c0 IN ()), ((rt0.c0) NOT NULL)) INNER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) WHERE ((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c1, '1179196970')))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c1, '1179196970')))) NOT NULL)) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON DATETIME(rt0.c1, (rt0.c0 IN ()), ((rt0.c0) NOT NULL)) INNER JOIN vt0 ON ((rt0.c2 IN ()) IN ()));
SELECT * FROM v0 INNER JOIN rt0 ON DATETIME(rt0.c1, (rt0.c0 IN ()), ((rt0.c0) NOT NULL)) INNER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) WHERE ((((((rt0.c2, vt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c1, vt0.c1, '1179196970')))) NOT NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((rt0.c2) ISNULL))) ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN 0x2afbad02 ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN 0X2afbad02 ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((rt0.c2) ISNULL))) ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN 0x2afbad02 ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((rt0.c2) ISNULL))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN 0X2afbad02 ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (LTRIM(((rt0.c2) ISNULL))) ORDER BY CASE WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))) THEN 0x2afbad02 ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (vt0.c1)) END ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (load_extension(vt0.c1 COLLATE NOCASE, TRIM(DISTINCT v0.c0))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST, 0.4896662911434797  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c1 COLLATE NOCASE, TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST, 0.4896662911434797  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (load_extension(vt0.c1 COLLATE NOCASE, TRIM(DISTINCT v0.c0))) ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST, 0.4896662911434797  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c1 COLLATE NOCASE, TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ()) DESC  NULLS LAST, 0.4896662911434797  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ())) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL COUNT(*) FROM rt0, vt0, v0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (NULL)) IN ()));
SELECT ALL * FROM rt0 WHERE ((+ (x''))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((+ (x''))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (x''))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((+ (x''))) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM)>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM)>(((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((+ (CAST(vt0.c1 AS NUMERIC)))) ORDER BY 0.9348316717173131 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9348316717173131 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((+ (CAST(vt0.c1 AS NUMERIC)))) ORDER BY 0.9348316717173131 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY 0.9348316717173131 DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE ((+ (CAST(vt0.c1 AS NUMERIC)))) ORDER BY 0.9348316717173131 DESC  NULLS FIRST;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (0.7148246810334199))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (0.7148246810334199))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (0.7148246810334199))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (0.7148246810334199))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c1 COLLATE BINARY) BETWEEN ((NOT (0.7148246810334199))) AND (CAST(v0.c0 AS BLOB))));
SELECT * FROM v0 WHERE ((- (((NULL) NOT NULL)))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOTNULL))) DESC, CASE WHEN v0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS NUMERIC) ELSE TRIM(DISTINCT v0.c0, v0.c0) END;
SELECT SUM(count) FROM (SELECT (((- (((NULL) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOTNULL))) DESC, CASE WHEN v0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS NUMERIC) ELSE TRIM(DISTINCT v0.c0, v0.c0) END);
SELECT * FROM v0 WHERE ((- (((NULL) NOT NULL)))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOTNULL))) DESC, CASE WHEN v0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS NUMERIC) ELSE TRIM(DISTINCT v0.c0, v0.c0) END;
SELECT SUM(count) FROM (SELECT (((- (((NULL) NOT NULL)))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOTNULL))) DESC, CASE WHEN v0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS NUMERIC) ELSE TRIM(DISTINCT v0.c0, v0.c0) END);
SELECT * FROM v0 WHERE ((- (((NULL) NOT NULL)))) ORDER BY ((((v0.c0)>(v0.c0))) NOT BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0) NOTNULL))) DESC, CASE WHEN v0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS NUMERIC) ELSE TRIM(DISTINCT v0.c0, v0.c0) END;
SELECT ALL * FROM v0 WHERE ((('0.8388953412078006' COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('0.8388953412078006' COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('0.8388953412078006' COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((('0.8388953412078006' COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((('0.8388953412078006' COLLATE BINARY) ISNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((NOT (vt0.c0))))>(((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))>(((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((NOT (vt0.c0))))>(((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((NOT (vt0.c0))))>(((NOT (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((NOT (vt0.c0))))>(((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))) AND ((rt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((((rt0.c1)AND(rt0.c0)))OR(vt0.c0)))) AND ((rt0.c1))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0 IN ())) BETWEEN (CASE WHEN v0.c0 THEN NULL END) AND ((NOT (vt0.c0)))));
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(vt0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((CAST(vt0.c0 AS TEXT))OR(vt0.c0 COLLATE NOCASE)))AND(((v0.c0) IS TRUE))));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0))<((v0.c0))))AND((vt0.c0 IN ()))))AND(0.12333085621697304)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<((v0.c0))))AND((vt0.c0 IN ()))))AND(0.12333085621697304))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0))<((v0.c0))))AND((vt0.c0 IN ()))))AND(0.12333085621697304)));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))<((v0.c0))))AND((vt0.c0 IN ()))))AND(0.12333085621697304))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0))<((v0.c0))))AND((vt0.c0 IN ()))))AND(0.12333085621697304)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (2141416232) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN NULL END) AND (vt0.c1))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (((v0.c0) ISNULL)) AND ((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (2141416232) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN NULL END) AND (vt0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (((v0.c0) ISNULL)) AND ((v0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (2141416232) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN NULL END) AND (vt0.c1))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (((v0.c0) ISNULL)) AND ((v0.c0 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (2141416232) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN NULL END) AND (vt0.c1))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (((v0.c0) ISNULL)) AND ((v0.c0 IN ()))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (2141416232) AND (vt0.c1))) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN NULL END) AND (vt0.c1))) ORDER BY ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (((v0.c0) ISNULL)) AND ((v0.c0 IN ()))) ASC;
SELECT * FROM v0 WHERE ((((('-488445766') BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('-488445766') BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((('-488445766') BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0)<(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((('-488445766') BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0)<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((('-488445766') BETWEEN (v0.c0) AND (v0.c0)))IS(((v0.c0)<(v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((v0.c0 IN ()))LIKE(((v0.c0)<<(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))LIKE(((v0.c0)<<(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((v0.c0 IN ()))LIKE(((v0.c0)<<(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))LIKE(((v0.c0)<<(v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (x'') ORDER BY (((v0.c0 IN ()))LIKE(((v0.c0)<<(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2 IN ()))OR((((rt0.c0, rt0.c2, rt0.c2))<>((vt0.c0, vt0.c0, rt0.c1))))))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2)||(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR((((rt0.c0, rt0.c2, rt0.c2))<>((vt0.c0, vt0.c0, rt0.c1))))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2)||(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2 IN ()))OR((((rt0.c0, rt0.c2, rt0.c2))<>((vt0.c0, vt0.c0, rt0.c1))))))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2)||(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c2 IN ()))OR((((rt0.c0, rt0.c2, rt0.c2))<>((vt0.c0, vt0.c0, rt0.c1))))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c2)||(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2 IN ()))OR((((rt0.c0, rt0.c2, rt0.c2))<>((vt0.c0, vt0.c0, rt0.c1))))))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY ((rt0.c2)||(vt0.c0)) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))<<(IFNULL(DISTINCT vt0.c0, vt0.c0))) WHERE ('1112339406');
SELECT SUM(count) FROM (SELECT ALL (('1112339406') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))<<(IFNULL(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))<<(IFNULL(DISTINCT vt0.c0, vt0.c0))) WHERE ('1112339406');
SELECT SUM(count) FROM (SELECT ALL (('1112339406') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))<<(IFNULL(DISTINCT vt0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON (((vt0.c1 IN ()))<<(IFNULL(DISTINCT vt0.c0, vt0.c0))) WHERE ('1112339406');
SELECT COUNT(*) FROM v0, vt0 WHERE ((((IFNULL(v0.c0, vt0.c1)))<((((vt0.c0)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(v0.c0, vt0.c1)))<((((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((IFNULL(v0.c0, vt0.c1)))<((((vt0.c0)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((IFNULL(v0.c0, vt0.c1)))<((((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((IFNULL(v0.c0, vt0.c1)))<((((vt0.c0)|(vt0.c0))))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (NULL IN ()) WHERE (CASE WHEN 0.7663472511716762 THEN v0.c0 ELSE (rt0.c1 IN (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.7663472511716762 THEN v0.c0 ELSE (rt0.c1 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (NULL IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (NULL IN ()) WHERE (CASE WHEN 0.7663472511716762 THEN v0.c0 ELSE (rt0.c1 IN (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.7663472511716762 THEN v0.c0 ELSE (rt0.c1 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (NULL IN ()));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON NULL FULL OUTER JOIN rt0 ON (NULL IN ()) WHERE (CASE WHEN 0.7663472511716762 THEN v0.c0 ELSE (rt0.c1 IN (vt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((((((x'5144')OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)) IN ())) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, v0.c0, v0.c0))))))OR(((v0.c0)>(rt0.c1)))) ASC, 0.7709707210409379 DESC  NULLS LAST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((x'5144')OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, v0.c0, v0.c0))))))OR(((v0.c0)>(rt0.c1)))) ASC, 0.7709707210409379 DESC  NULLS LAST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((((((x'5144')OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)) IN ())) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, v0.c0, v0.c0))))))OR(((v0.c0)>(rt0.c1)))) ASC, 0.7709707210409379 DESC  NULLS LAST, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT (((((((((((x'5144')OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, v0.c0, v0.c0))))))OR(((v0.c0)>(rt0.c1)))) ASC, 0.7709707210409379 DESC  NULLS LAST, rt0.c1 ASC);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE ((((((((((x'5144')OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))OR(rt0.c1)) IN ())) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))OR((((rt0.c2, rt0.c1, rt0.c2))<=((rt0.c1, v0.c0, v0.c0))))))OR(((v0.c0)>(rt0.c1)))) ASC, 0.7709707210409379 DESC  NULLS LAST, rt0.c1 ASC;
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'5d5f' WHERE (TRIM(DISTINCT rt0.c1 COLLATE RTRIM, (NOT (rt0.c2)))) ORDER BY CAST(((v0.c0) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1 COLLATE RTRIM, (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON x'5d5f' ORDER BY CAST(((v0.c0) IS FALSE) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'5d5f' WHERE (TRIM(DISTINCT rt0.c1 COLLATE RTRIM, (NOT (rt0.c2)))) ORDER BY CAST(((v0.c0) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt0.c1 COLLATE RTRIM, (NOT (rt0.c2)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON x'5d5f' ORDER BY CAST(((v0.c0) IS FALSE) AS TEXT) DESC  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN v0 ON x'5d5f' WHERE (TRIM(DISTINCT rt0.c1 COLLATE RTRIM, (NOT (rt0.c2)))) ORDER BY CAST(((v0.c0) IS FALSE) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((v0.c0)+(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)+(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((v0.c0)+(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((v0.c0)+(vt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((v0.c0)+(vt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) AS BLOB) RIGHT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)AND((- (v0.c0)))))AND(CAST(rt0.c2 AS BLOB))) WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) AS BLOB) RIGHT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)AND((- (v0.c0)))))AND(CAST(rt0.c2 AS BLOB))));
SELECT ALL COUNT(*) FROM rt0 INNER JOIN v0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) AS BLOB) RIGHT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)AND((- (v0.c0)))))AND(CAST(rt0.c2 AS BLOB))) WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON CAST(((rt0.c0) BETWEEN (vt0.c1) AND (rt0.c0)) AS BLOB) RIGHT OUTER JOIN vt0 ON ((((vt0.c1 COLLATE BINARY)AND((- (v0.c0)))))AND(CAST(rt0.c2 AS BLOB))));
SELECT * FROM v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY ((v0.c0 COLLATE NOCASE)>>((((v0.c0))<>((v0.c0))))), CAST((v0.c0 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)>>((((v0.c0))<>((v0.c0))))), CAST((v0.c0 IN ()) AS TEXT) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY ((v0.c0 COLLATE NOCASE)>>((((v0.c0))<>((v0.c0))))), CAST((v0.c0 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE)>>((((v0.c0))<>((v0.c0))))), CAST((v0.c0 IN ()) AS TEXT) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY ((v0.c0 COLLATE NOCASE)>>((((v0.c0))<>((v0.c0))))), CAST((v0.c0 IN ()) AS TEXT) DESC  NULLS LAST;
SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL * FROM v0, rt0 WHERE ((NOT (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((x'' IN ()))IS NOT((+ (vt0.c0)))) WHERE (((((((((((((((vt0.c1)AND(rt0.c1)))AND(NULL)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((((vt0.c1)AND(rt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c1)AND(rt0.c1)))AND(NULL)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((((vt0.c1)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((x'' IN ()))IS NOT((+ (vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((x'' IN ()))IS NOT((+ (vt0.c0)))) WHERE (((((((((((((((vt0.c1)AND(rt0.c1)))AND(NULL)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((((vt0.c1)AND(rt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt0.c1)AND(rt0.c1)))AND(NULL)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((((vt0.c1)AND(rt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, rt0 FULL OUTER JOIN vt0 ON (((x'' IN ()))IS NOT((+ (vt0.c0)))));
SELECT COUNT(*) FROM v0, rt0 FULL OUTER JOIN vt0 ON (((x'' IN ()))IS NOT((+ (vt0.c0)))) WHERE (((((((((((((((vt0.c1)AND(rt0.c1)))AND(NULL)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c0)))AND(rt0.c1))) BETWEEN ((rt0.c1 IN ())) AND (((((vt0.c1)AND(rt0.c1)))OR(v0.c0)))));
SELECT * FROM v0, vt0, rt0 NOT INDEXED WHERE ((~ (CASE WHEN rt0.c0 THEN vt0.c0 END))) ORDER BY (((+ (rt0.c2)))>>(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((+ (rt0.c2)))>>(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 NOT INDEXED WHERE ((~ (CASE WHEN rt0.c0 THEN vt0.c0 END))) ORDER BY (((+ (rt0.c2)))>>(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE WHEN rt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((+ (rt0.c2)))>>(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 END))  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 NOT INDEXED WHERE ((~ (CASE WHEN rt0.c0 THEN vt0.c0 END))) ORDER BY (((+ (rt0.c2)))>>(CASE rt0.c2  WHEN vt0.c1 THEN rt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (- (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON ((((vt0.c1) NOT NULL))>(CAST('' AS NUMERIC))) WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(vt0.c0)))OR(x'')) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON ((((vt0.c1) NOT NULL))>(CAST('' AS NUMERIC))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN rt0 ON (- (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON ((((vt0.c1) NOT NULL))>(CAST('' AS NUMERIC))) WHERE (CAST(((((vt0.c1)AND(vt0.c0)))OR(x'')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)AND(vt0.c0)))OR(x'')) AS INTEGER)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- (((vt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON ((((vt0.c1) NOT NULL))>(CAST('' AS NUMERIC))));
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) WHERE ((~ (CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE WHEN NULL THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END WHEN (0.2266065052844236 IN (vt0.c0)) THEN CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END WHEN (+ (v0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) ORDER BY CASE WHEN NULL THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END WHEN (0.2266065052844236 IN (vt0.c0)) THEN CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END WHEN (+ (v0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) WHERE ((~ (CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE WHEN NULL THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END WHEN (0.2266065052844236 IN (vt0.c0)) THEN CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END WHEN (+ (v0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(rt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) ORDER BY CASE WHEN NULL THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END WHEN (0.2266065052844236 IN (vt0.c0)) THEN CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END WHEN (+ (v0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) END ASC  NULLS FIRST);
SELECT ALL * FROM v0, rt0 LEFT OUTER JOIN vt0 ON ((rt0.c2 IN ()) IN ()) WHERE ((~ (CAST(rt0.c1 AS NUMERIC)))) ORDER BY CASE WHEN NULL THEN CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 END WHEN (0.2266065052844236 IN (vt0.c0)) THEN CASE vt0.c1  WHEN rt0.c1 THEN vt0.c0 WHEN x'' THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 END WHEN (+ (v0.c0)) THEN (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, rt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c0))) END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((- (vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY ((- (vt0.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((- (vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS BLOB) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY ((- (vt0.c1)) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(v0.c0 AS BLOB) COLLATE NOCASE) ORDER BY ((- (vt0.c1)) IN ()) ASC;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2)/(x'f9aa'))) ORDER BY ((((IFNULL(v0.c0, rt0.c1))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(x'f9aa'))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((IFNULL(v0.c0, rt0.c1))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2)/(x'f9aa'))) ORDER BY ((((IFNULL(v0.c0, rt0.c1))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(x'f9aa'))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((((IFNULL(v0.c0, rt0.c1))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((rt0.c2)/(x'f9aa'))) ORDER BY ((((IFNULL(v0.c0, rt0.c1))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN (((rt0.c1)==(vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE (load_extension((~ (vt0.c0)), rt0.c0 COLLATE NOCASE)) ORDER BY ((('', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, NULL, ((1502856132)IS NOT(rt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c1)), (vt0.c1 IN ()), CAST(vt0.c0 AS BLOB)))) DESC  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((~ (vt0.c0)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN (((rt0.c1)=(vt0.c0))) AND (CAST(v0.c0 AS TEXT))) ORDER BY ((('', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, NULL, ((1502856132)IS NOT(rt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c1)), (vt0.c1 IN ()), CAST(vt0.c0 AS BLOB)))) DESC  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)) AS REAL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN (((rt0.c1)==(vt0.c0))) AND (CAST(v0.c0 AS TEXT))) WHERE (load_extension((~ (vt0.c0)), rt0.c0 COLLATE NOCASE)) ORDER BY ((('', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, NULL, ((1502856132)IS NOT(rt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c1)), (vt0.c1 IN ()), CAST(vt0.c0 AS BLOB)))) DESC  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((load_extension((~ (vt0.c0)), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, v0 FULL OUTER JOIN rt0 ON ((((((vt0.c0)OR(rt0.c0)))OR(vt0.c1))) NOT BETWEEN (((rt0.c1)=(vt0.c0))) AND (CAST(v0.c0 AS TEXT))) ORDER BY ((('', rt0.c2, v0.c0)) BETWEEN ((rt0.c0, NULL, ((1502856132)IS NOT(rt0.c0)))) AND ((((vt0.c0)LIKE(vt0.c1)), (vt0.c1 IN ()), CAST(vt0.c0 AS BLOB)))) DESC  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (vt0.c1) AND (v0.c0)) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0, rt0 WHERE (0.7536086073230143);
SELECT SUM(count) FROM (SELECT ALL ((0.7536086073230143) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (0.7536086073230143);
SELECT SUM(count) FROM (SELECT ALL ((0.7536086073230143) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (0.7536086073230143);
SELECT * FROM rt0, v0, vt0 WHERE ((((((vt0.c0, NULL, vt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))))IS(((v0.c0)AND(x'feb3')))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, NULL, vt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))))IS(((v0.c0)AND(x'feb3'))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((((vt0.c0, NULL, vt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))))IS(((v0.c0)AND(x'feb3')))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, NULL, vt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))))IS(((v0.c0)AND(x'feb3'))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((((vt0.c0, NULL, vt0.c1)) BETWEEN ((vt0.c0, rt0.c1, rt0.c1)) AND ((v0.c0, v0.c0, rt0.c1))))IS(((v0.c0)AND(x'feb3')))));
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (0X40b60e83) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((TRIM(vt0.c1)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (0X40b60e83) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c1)) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (0X40b60e83) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((TRIM(vt0.c1)) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) NOT BETWEEN (0X40b60e83) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((TRIM(vt0.c1)) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) NOT BETWEEN (0X40b60e83) AND (vt0.c0)) COLLATE BINARY COLLATE RTRIM) ORDER BY ((TRIM(vt0.c1)) IS TRUE) DESC;
SELECT ALL * FROM v0, rt0 WHERE (769763370) ORDER BY ((((((((LIKELY(rt0.c2))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND((v0.c0 IN ()))))OR(x'')))AND((+ ('M2?DN?'))));
SELECT SUM(count) FROM (SELECT ALL ((769763370) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((LIKELY(rt0.c2))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND((v0.c0 IN ()))))OR(x'')))AND((+ ('M2?DN?')))));
SELECT ALL * FROM v0, rt0 WHERE (769763370) ORDER BY ((((((((LIKELY(rt0.c2))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND((v0.c0 IN ()))))OR(x'')))AND((+ ('M2?DN?'))));
SELECT SUM(count) FROM (SELECT ALL ((769763370) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((((LIKELY(rt0.c2))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND((v0.c0 IN ()))))OR(x'')))AND((+ ('M2?DN?')))));
SELECT ALL * FROM v0, rt0 WHERE (769763370) ORDER BY ((((((((LIKELY(rt0.c2))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))))AND((v0.c0 IN ()))))OR(x'')))AND((+ ('M2?DN?'))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) WHERE (0.9624334194764586) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9624334194764586) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) WHERE (0.9624334194764586) ORDER BY rt0.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.9624334194764586) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) ORDER BY rt0.c2  NULLS FIRST);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) NOTNULL) WHERE (0.9624334194764586) ORDER BY rt0.c2  NULLS FIRST;
SELECT ALL * FROM v0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE ((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0))))<>(((((rt0.c2))>((1.8228669994568847E-6))))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0))))<>(((((rt0.c2))>((1.8228669994568847E-6))))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0) ISNULL) AS REAL) ORDER BY vt0.c0);
SELECT ALL * FROM v0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE ((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0))))<>(((((rt0.c2))>((1.8228669994568847E-6))))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0))))<>(((((rt0.c2))>((1.8228669994568847E-6))))))) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0) ISNULL) AS REAL) ORDER BY vt0.c0);
SELECT ALL * FROM v0 NOT INDEXED, rt0 RIGHT OUTER JOIN vt0 ON CAST(((rt0.c0) ISNULL) AS REAL) WHERE ((((((((vt0.c1)OR(vt0.c1)))AND(v0.c0))))<>(((((rt0.c2))>((1.8228669994568847E-6))))))) ORDER BY vt0.c0;
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON x'7c95' WHERE (CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON x'7c95' ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL) DESC  NULLS LAST);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON x'7c95' WHERE (CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0 LEFT OUTER JOIN vt0 ON x'7c95' ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL) DESC  NULLS LAST);
SELECT * FROM v0, rt0 LEFT OUTER JOIN vt0 ON x'7c95' WHERE (CAST(((rt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC)) ORDER BY ((CAST(rt0.c2 AS BLOB)) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((((rt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1))>((rt0.c2, v0.c0, v0.c0, rt0.c0, vt0.c0))))OR(((((((((rt0.c2)AND(vt0.c1)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))))OR('1239928147')));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1))>((rt0.c2, v0.c0, v0.c0, rt0.c0, vt0.c0))))OR(((((((((rt0.c2)AND(vt0.c1)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))))OR('1239928147'))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((((rt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1))>((rt0.c2, v0.c0, v0.c0, rt0.c0, vt0.c0))))OR(((((((((rt0.c2)AND(vt0.c1)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))))OR('1239928147')));
SELECT SUM(count) FROM (SELECT (((((((((rt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1))>((rt0.c2, v0.c0, v0.c0, rt0.c0, vt0.c0))))OR(((((((((rt0.c2)AND(vt0.c1)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))))OR('1239928147'))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((((((((rt0.c1, vt0.c0, rt0.c0, rt0.c2, rt0.c1))>((rt0.c2, v0.c0, v0.c0, rt0.c0, vt0.c0))))OR(((((((((rt0.c2)AND(vt0.c1)))AND(v0.c0)))OR(rt0.c0)))OR(v0.c0)))))OR('1239928147')));
SELECT * FROM v0, vt0 WHERE ((((((((((v0.c0 IN ()))AND(UPPER(v0.c0))))OR((((v0.c0))<((v0.c0))))))AND(((vt0.c0)>(vt0.c1)))))OR(((x'')|('-1288708924')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0 IN ()))AND(UPPER(v0.c0))))OR((((v0.c0))<((v0.c0))))))AND(((vt0.c0)>(vt0.c1)))))OR(((x'')|('-1288708924'))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((((((v0.c0 IN ()))AND(UPPER(v0.c0))))OR((((v0.c0))<((v0.c0))))))AND(((vt0.c0)>(vt0.c1)))))OR(((x'')|('-1288708924')))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((v0.c0 IN ()))AND(UPPER(v0.c0))))OR((((v0.c0))<((v0.c0))))))AND(((vt0.c0)>(vt0.c1)))))OR(((x'')|('-1288708924'))))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE ((((((((((v0.c0 IN ()))AND(UPPER(v0.c0))))OR((((v0.c0))<((v0.c0))))))AND(((vt0.c0)>(vt0.c1)))))OR(((x'')|('-1288708924')))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.04984979035118842 END THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END INNER JOIN rt0 ON TIME(((((((((vt0.c0)OR('쾭{')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)), ((vt0.c1)==(v0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE (TRIM(DISTINCT (rt0.c1 IN ()), HEX(DISTINCT rt0.c0))) ORDER BY (HEX(DISTINCT vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt0.c1 IN ()), HEX(DISTINCT rt0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.04984979035118842 END THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END INNER JOIN rt0 ON TIME(((((((((vt0.c0)OR('쾭{')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)), ((vt0.c1)==(v0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ORDER BY (HEX(DISTINCT vt0.c0) IN ()));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.04984979035118842 END THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END INNER JOIN rt0 ON TIME(((((((((vt0.c0)OR('쾭{')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)), ((vt0.c1)==(v0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) WHERE (TRIM(DISTINCT (rt0.c1 IN ()), HEX(DISTINCT rt0.c0))) ORDER BY (HEX(DISTINCT vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT (rt0.c1 IN ()), HEX(DISTINCT rt0.c0))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.04984979035118842 END THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END INNER JOIN rt0 ON TIME(((((((((vt0.c0)OR('쾭{')))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)), ((vt0.c1)==(v0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2))) ORDER BY (HEX(DISTINCT vt0.c0) IN ()));
SELECT * FROM rt0 INNER JOIN v0 ON MIN(NULL, rt0.c0 COLLATE NOCASE) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)|(rt0.c1))))) ORDER BY CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON MIN(NULL, rt0.c0 COLLATE NOCASE) ORDER BY CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON MIN(NULL, rt0.c0 COLLATE NOCASE) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)|(rt0.c1))))) ORDER BY CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)|(rt0.c1))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON MIN(NULL, rt0.c0 COLLATE NOCASE) ORDER BY CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST);
SELECT * FROM rt0 INNER JOIN v0 ON MIN(NULL, rt0.c0 COLLATE NOCASE) WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c2)>(rt0.c0))) AND (((rt0.c0)|(rt0.c1))))) ORDER BY CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (IFNULL(((((v0.c0)AND(vt0.c1)))OR(v0.c0)), MIN(v0.c0, vt0.c1, vt0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((v0.c0)AND(vt0.c1)))OR(v0.c0)), MIN(v0.c0, vt0.c1, vt0.c1, vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (IFNULL(((((v0.c0)AND(vt0.c1)))OR(v0.c0)), MIN(v0.c0, vt0.c1, vt0.c1, vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((((v0.c0)AND(vt0.c1)))OR(v0.c0)), MIN(v0.c0, vt0.c1, vt0.c1, vt0.c0))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (IFNULL(((((v0.c0)AND(vt0.c1)))OR(v0.c0)), MIN(v0.c0, vt0.c1, vt0.c1, vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c1) IS TRUE))+(TRIM(DISTINCT rt0.c0, x'fdd8'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE))+(TRIM(DISTINCT rt0.c0, x'fdd8')))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c1) IS TRUE))+(TRIM(DISTINCT rt0.c0, x'fdd8'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE))+(TRIM(DISTINCT rt0.c0, x'fdd8')))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (((((vt0.c1) IS TRUE))+(TRIM(DISTINCT rt0.c0, x'fdd8'))));
SELECT ALL * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))=((v0.c0 IN ()))), (((((v0.c0))<((v0.c0))))LIKE((v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))==((v0.c0 IN ()))), (((((v0.c0))<((v0.c0))))LIKE((v0.c0 IN (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))=((v0.c0 IN ()))), (((((v0.c0))<((v0.c0))))LIKE((v0.c0 IN (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))==((v0.c0 IN ()))), (((((v0.c0))<((v0.c0))))LIKE((v0.c0 IN (v0.c0)))));
SELECT ALL * FROM v0 WHERE (((v0.c0 IN ()) IN ())) ORDER BY ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))=((v0.c0 IN ()))), (((((v0.c0))<((v0.c0))))LIKE((v0.c0 IN (v0.c0))));
SELECT * FROM vt0, v0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((NOT (NULL)))<>(TYPEOF(DISTINCT 'jO}oM3q7'))) ASC, CASE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY END ASC, (('140853626') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (NULL)))!=(TYPEOF(DISTINCT 'jO}oM3q7'))) ASC, CASE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY END ASC, (('140853626') NOTNULL) DESC);
SELECT * FROM vt0, v0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((NOT (NULL)))<>(TYPEOF(DISTINCT 'jO}oM3q7'))) ASC, CASE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY END ASC, (('140853626') NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (NULL)))!=(TYPEOF(DISTINCT 'jO}oM3q7'))) ASC, CASE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY END ASC, (('140853626') NOTNULL) DESC);
SELECT * FROM vt0, v0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((NOT (NULL)))<>(TYPEOF(DISTINCT 'jO}oM3q7'))) ASC, CASE ((vt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN vt0.c1 COLLATE BINARY THEN vt0.c1 COLLATE BINARY END ASC, (('140853626') NOTNULL) DESC;
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)/(v0.c0)) IN (CASE vt0.c1  WHEN v0.c0 THEN 0.1469546447455029 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(v0.c0)) IN (CASE vt0.c1  WHEN v0.c0 THEN 0.1469546447455029 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)/(v0.c0)) IN (CASE vt0.c1  WHEN v0.c0 THEN 0.1469546447455029 ELSE vt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)/(v0.c0)) IN (CASE vt0.c1  WHEN v0.c0 THEN 0.1469546447455029 ELSE vt0.c1 END))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)/(v0.c0)) IN (CASE vt0.c1  WHEN v0.c0 THEN 0.1469546447455029 ELSE vt0.c1 END)));
SELECT * FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT * FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))))));
SELECT * FROM v0, vt0, rt0 WHERE (rt0.c0) ORDER BY (((vt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))));
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END AS REAL));
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))*(v0.c0))) ORDER BY '1478832669'  NULLS FIRST, (NOT (x''));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))*(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY '1478832669'  NULLS FIRST, (NOT (x'')));
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))*(v0.c0))) ORDER BY '1478832669'  NULLS FIRST, (NOT (x''));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0)))*(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY '1478832669'  NULLS FIRST, (NOT (x'')));
SELECT * FROM v0 WHERE ((((v0.c0 IN (v0.c0)))*(v0.c0))) ORDER BY '1478832669'  NULLS FIRST, (NOT (x''));
SELECT ALL * FROM v0 WHERE (CASE CASE x''  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN v0.c0 THEN (~ (v0.c0)) ELSE ((v0.c0) NOTNULL) END) ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (((v0.c0)>=(x'ca33')))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE x''  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN v0.c0 THEN (~ (v0.c0)) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (((v0.c0)>=(x'ca33')))) ASC);
SELECT ALL * FROM v0 WHERE (CASE CASE x''  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN v0.c0 THEN (~ (v0.c0)) ELSE ((v0.c0) NOTNULL) END) ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (((v0.c0)>=(x'ca33')))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE CASE x''  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN v0.c0 THEN (~ (v0.c0)) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (((v0.c0)>=(x'ca33')))) ASC);
SELECT ALL * FROM v0 WHERE (CASE CASE x''  WHEN v0.c0 THEN v0.c0 ELSE NULL END  WHEN v0.c0 THEN (~ (v0.c0)) ELSE ((v0.c0) NOTNULL) END) ORDER BY (((v0.c0 IN ())) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))) AND (((v0.c0)>=(x'ca33')))) ASC;
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE NULL  WHEN vt0.c1 THEN rt0.c1 ELSE '4/\nl/r' END)OR((- (rt0.c0)))) FULL OUTER JOIN v0 ON ((((vt0.c1)&(vt0.c1))) NOTNULL) WHERE ('%䤌') ORDER BY ((((CAST(rt0.c1 AS REAL))AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(x'' COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('%䤌') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE NULL  WHEN vt0.c1 THEN rt0.c1 ELSE '4/\nl/r' END)OR((- (rt0.c0)))) FULL OUTER JOIN v0 ON ((((vt0.c1)&(vt0.c1))) NOTNULL) ORDER BY ((((CAST(rt0.c1 AS REAL))AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(x'' COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE NULL  WHEN vt0.c1 THEN rt0.c1 ELSE '4/\nl/r' END)OR((- (rt0.c0)))) FULL OUTER JOIN v0 ON ((((vt0.c1)&(vt0.c1))) NOTNULL) WHERE ('%䤌') ORDER BY ((((CAST(rt0.c1 AS REAL))AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(x'' COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('%䤌') IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE NULL  WHEN vt0.c1 THEN rt0.c1 ELSE '4/\nl/r' END)OR((- (rt0.c0)))) FULL OUTER JOIN v0 ON ((((vt0.c1)&(vt0.c1))) NOTNULL) ORDER BY ((((CAST(rt0.c1 AS REAL))AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(x'' COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON ((CASE NULL  WHEN vt0.c1 THEN rt0.c1 ELSE '4/\nl/r' END)OR((- (rt0.c0)))) FULL OUTER JOIN v0 ON ((((vt0.c1)&(vt0.c1))) NOTNULL) WHERE ('%䤌') ORDER BY ((((CAST(rt0.c1 AS REAL))AND((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(x'' COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))<(((- (v0.c0)))))) ORDER BY v0.c0  NULLS FIRST, x'2567', ((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (vt0.c0))  NULLS LAST, (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.33969319210528126 COLLATE BINARY, HEX(DISTINCT v0.c0), ((v0.c0)>>(vt0.c1)))) AND (((~ (vt0.c0)), ((vt0.c0)=(vt0.c0)), vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE NOCASE))<(((- (v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS FIRST, x'2567', ((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (vt0.c0))  NULLS LAST, (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.33969319210528126 COLLATE BINARY, HEX(DISTINCT v0.c0), ((v0.c0)>>(vt0.c1)))) AND (((~ (vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))<(((- (v0.c0)))))) ORDER BY v0.c0  NULLS FIRST, x'2567', ((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (vt0.c0))  NULLS LAST, (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.33969319210528126 COLLATE BINARY, HEX(DISTINCT v0.c0), ((v0.c0)>>(vt0.c1)))) AND (((~ (vt0.c0)), ((vt0.c0)=(vt0.c0)), vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE NOCASE))<(((- (v0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY v0.c0  NULLS FIRST, x'2567', ((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (vt0.c0))  NULLS LAST, (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.33969319210528126 COLLATE BINARY, HEX(DISTINCT v0.c0), ((v0.c0)>>(vt0.c1)))) AND (((~ (vt0.c0)), ((vt0.c0)==(vt0.c0)), vt0.c1 COLLATE RTRIM)))  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((v0.c0 COLLATE NOCASE))<(((- (v0.c0)))))) ORDER BY v0.c0  NULLS FIRST, x'2567', ((NULLIF(vt0.c1, vt0.c0)) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (vt0.c0))  NULLS LAST, (((v0.c0, vt0.c0, vt0.c0)) BETWEEN ((0.33969319210528126 COLLATE BINARY, HEX(DISTINCT v0.c0), ((v0.c0)>>(vt0.c1)))) AND (((~ (vt0.c0)), ((vt0.c0)=(vt0.c0)), vt0.c1 COLLATE RTRIM)))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)||(CAST(v0.c0 AS NUMERIC)))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt0.c1)%(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)||(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_COMPILEOPTION_GET(((vt0.c1)%(vt0.c1))) DESC);
SELECT * FROM vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)||(CAST(v0.c0 AS NUMERIC)))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt0.c1)%(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)||(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0, v0 ORDER BY SQLITE_COMPILEOPTION_GET(((vt0.c1)%(vt0.c1))) DESC);
SELECT * FROM vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)||(CAST(v0.c0 AS NUMERIC)))) ORDER BY SQLITE_COMPILEOPTION_GET(((vt0.c1)%(vt0.c1))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<=((vt0.c1))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<=((vt0.c1))))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<=((vt0.c1))))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1))<=((vt0.c1))))AND(vt0.c1 COLLATE RTRIM)));
SELECT * FROM rt0, v0 WHERE ((- (rt0.c0)) COLLATE NOCASE) ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS FIRST, (((rt0.c0 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((rt0.c2) IS FALSE)) ISNULL) DESC, CAST(((('140853626')) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS FIRST, (((rt0.c0 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((rt0.c2) IS FALSE)) ISNULL) DESC, CAST(((('140853626')) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) AS TEXT)  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((- (rt0.c0)) COLLATE NOCASE) ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS FIRST, (((rt0.c0 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((rt0.c2) IS FALSE)) ISNULL) DESC, CAST(((('140853626')) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS FIRST, (((rt0.c0 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((rt0.c2) IS FALSE)) ISNULL) DESC, CAST(((('140853626')) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) AS TEXT)  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((- (rt0.c0)) COLLATE NOCASE) ORDER BY (NOT (((rt0.c0) NOTNULL))) DESC  NULLS FIRST, (((rt0.c0 IN ())) NOT BETWEEN (TRIM(DISTINCT rt0.c1)) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC, ((((rt0.c2) IS FALSE)) ISNULL) DESC, CAST(((('140853626')) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))) AS TEXT)  NULLS LAST;
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(0X55cecf57)))) AND ((((rt0.c1) IS FALSE), (- (vt0.c0)), LIKELIHOOD(rt0.c2, 0.546197702084453)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(0X55cecf57)))) AND ((((rt0.c1) IS FALSE), (- (vt0.c0)), LIKELIHOOD(rt0.c2, 0.546197702084453))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(0X55cecf57)))) AND ((((rt0.c1) IS FALSE), (- (vt0.c0)), LIKELIHOOD(rt0.c2, 0.546197702084453)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(0X55cecf57)))) AND ((((rt0.c1) IS FALSE), (- (vt0.c0)), LIKELIHOOD(rt0.c2, 0.546197702084453))))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((rt0.c1, vt0.c1, rt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)), ((((((((((((vt0.c1)OR(rt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c1)))OR(0X55cecf57)))) AND ((((rt0.c1) IS FALSE), (- (vt0.c0)), LIKELIHOOD(rt0.c2, 0.546197702084453)))));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c1))))>=(((+ (rt0.c1))))) CROSS JOIN rt0 ON (((- (rt0.c0)))GLOB(rt0.c1)) WHERE (((((vt0.c1)>>(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>>(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c1))))>=(((+ (rt0.c1))))) CROSS JOIN rt0 ON (((- (rt0.c0)))GLOB(rt0.c1)));
SELECT * FROM v0 RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c1))))>=(((+ (rt0.c1))))) CROSS JOIN rt0 ON (((- (rt0.c0)))GLOB(rt0.c1)) WHERE (((((vt0.c1)>>(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>>(v0.c0))) IS TRUE)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((NOT (rt0.c1))))>=(((+ (rt0.c1))))) CROSS JOIN rt0 ON (((- (rt0.c0)))GLOB(rt0.c1)));
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT));
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY 0X76d887c8, '1239928147', ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((2047362186, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY 0x76d887c8, '1239928147', ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((2047362186, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((rt0.c2 IN ()) COLLATE RTRIM) ORDER BY 0X76d887c8, '1239928147', ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((2047362186, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY 0x76d887c8, '1239928147', ((((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((2047362186, rt0.c0, rt0.c1)) AND ((rt0.c1, rt0.c2, rt0.c2))) IN ())  NULLS FIRST);
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON LENGTH((((NULL))<(('3,e!')))) WHERE (((((((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))LIKE((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON LENGTH((((NULL))<(('3,e!')))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON LENGTH((((NULL))<(('3,e!')))) WHERE (((((((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))LIKE((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON LENGTH((((NULL))<(('3,e!')))));
SELECT * FROM vt0 RIGHT OUTER JOIN rt0 ON LENGTH((((NULL))<(('3,e!')))) WHERE (((((((((((((((rt0.c2)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))LIKE((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)-(((vt0.c1) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2448c313))), (- (((vt0.c1)<(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)-(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2448c313))), (- (((vt0.c1)<(vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)-(((vt0.c1) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2448c313))), (- (((vt0.c1)<(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)-(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2448c313))), (- (((vt0.c1)<(vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)-(((vt0.c1) NOT NULL)))) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((0X2448c313))), (- (((vt0.c1)<(vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((NULL)<<((v0.c0 IN ()))) FULL OUTER JOIN rt0 ON (((rt0.c1)+(vt0.c1)) IN (((vt0.c1)<=(rt0.c2)), (NOT (vt0.c1)))) WHERE ((((((((((((((vt0.c1)OR(0.8177611199145867)))OR(vt0.c0)))OR(rt0.c0)))AND(1.112339406E9)))AND(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1)OR(0.8177611199145867)))OR(vt0.c0)))OR(rt0.c0)))AND(1.112339406E9)))AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((NULL)<<((v0.c0 IN ()))) FULL OUTER JOIN rt0 ON (((rt0.c1)+(vt0.c1)) IN (((vt0.c1)<=(rt0.c2)), (NOT (vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((NULL)<<((v0.c0 IN ()))) FULL OUTER JOIN rt0 ON (((rt0.c1)+(vt0.c1)) IN (((vt0.c1)<=(rt0.c2)), (NOT (vt0.c1)))) WHERE ((((((((((((((vt0.c1)OR(0.8177611199145867)))OR(vt0.c0)))OR(rt0.c0)))AND(1.112339406E9)))AND(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((vt0.c1)OR(0.8177611199145867)))OR(vt0.c0)))OR(rt0.c0)))AND(1.112339406E9)))AND(vt0.c1)))AND(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((NULL)<<((v0.c0 IN ()))) FULL OUTER JOIN rt0 ON (((rt0.c1)+(vt0.c1)) IN (((vt0.c1)<=(rt0.c2)), (NOT (vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON ((NULL)<<((v0.c0 IN ()))) FULL OUTER JOIN rt0 ON (((rt0.c1)+(vt0.c1)) IN (((vt0.c1)<=(rt0.c2)), (NOT (vt0.c1)))) WHERE ((((((((((((((vt0.c1)OR(0.8177611199145867)))OR(vt0.c0)))OR(rt0.c0)))AND(1.112339406E9)))AND(vt0.c1)))AND(vt0.c1)) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((x'0a4d')AND('')))OR((((vt0.c1)) NOT BETWEEN ((0.6514952434710097)) AND ((0.2151581149123657))))))OR(((vt0.c1)&(vt0.c1)))))AND((vt0.c1 IN ())))) ORDER BY (HEX(vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((x'0a4d')AND('')))OR((((vt0.c1)) NOT BETWEEN ((0.6514952434710097)) AND ((0.2151581149123657))))))OR(((vt0.c1)&(vt0.c1)))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (HEX(vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((x'0a4d')AND('')))OR((((vt0.c1)) NOT BETWEEN ((0.6514952434710097)) AND ((0.2151581149123657))))))OR(((vt0.c1)&(vt0.c1)))))AND((vt0.c1 IN ())))) ORDER BY (HEX(vt0.c0) IN ());
SELECT SUM(count) FROM (SELECT ((((((((((x'0a4d')AND('')))OR((((vt0.c1)) NOT BETWEEN ((0.6514952434710097)) AND ((0.2151581149123657))))))OR(((vt0.c1)&(vt0.c1)))))AND((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (HEX(vt0.c0) IN ()));
SELECT ALL * FROM vt0 WHERE (((((((((x'0a4d')AND('')))OR((((vt0.c1)) NOT BETWEEN ((0.6514952434710097)) AND ((0.2151581149123657))))))OR(((vt0.c1)&(vt0.c1)))))AND((vt0.c1 IN ())))) ORDER BY (HEX(vt0.c0) IN ());
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (+ (rt0.c1)) CROSS JOIN rt0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR((((rt0.c1))<=((rt0.c1))))))OR((((rt0.c1))>((vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR((((rt0.c1))<=((rt0.c1))))))OR((((rt0.c1))>((vt0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (+ (rt0.c1)) CROSS JOIN rt0 ON ((rt0.c2 IN ()) IN ()) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (+ (rt0.c1)) CROSS JOIN rt0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR((((rt0.c1))<=((rt0.c1))))))OR((((rt0.c1))>((vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR((((rt0.c1))<=((rt0.c1))))))OR((((rt0.c1))>((vt0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (+ (rt0.c1)) CROSS JOIN rt0 ON ((rt0.c2 IN ()) IN ()) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) DESC);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON (+ (rt0.c1)) CROSS JOIN rt0 ON ((rt0.c2 IN ()) IN ()) WHERE (((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))OR((((rt0.c1))<=((rt0.c1))))))OR((((rt0.c1))>((vt0.c0)))))) ORDER BY ((((vt0.c0) IS FALSE)) NOTNULL) DESC;
SELECT * FROM v0 INNER JOIN vt0 ON 0.8845125783157599 COLLATE NOCASE WHERE (CASE WHEN vt0.c1 THEN (- (vt0.c0)) ELSE ((v0.c0)&(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN (- (vt0.c0)) ELSE ((v0.c0)&(v0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.8845125783157599 COLLATE NOCASE);
SELECT * FROM v0 INNER JOIN vt0 ON 0.8845125783157599 COLLATE NOCASE WHERE (CASE WHEN vt0.c1 THEN (- (vt0.c0)) ELSE ((v0.c0)&(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN (- (vt0.c0)) ELSE ((v0.c0)&(v0.c0)) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.8845125783157599 COLLATE NOCASE);
SELECT * FROM v0 INNER JOIN vt0 ON 0.8845125783157599 COLLATE NOCASE WHERE (CASE WHEN vt0.c1 THEN (- (vt0.c0)) ELSE ((v0.c0)&(v0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (- ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (- ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(x'' AS BLOB)) ORDER BY (- ((vt0.c0 IN (vt0.c0, vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM v0, rt0, vt0 WHERE (((QUOTE(v0.c0)) ISNULL)) ORDER BY ((rt0.c0 IN ()) IN ()) ASC, ((((rt0.c0)<=(rt0.c0))) IS TRUE), ((ABS(DISTINCT '1e500'))||(CAST(v0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(v0.c0)) ISNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((rt0.c0 IN ()) IN ()) ASC, ((((rt0.c0)<=(rt0.c0))) IS TRUE), ((ABS(DISTINCT '1e500'))||(CAST(v0.c0 AS TEXT))) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (((QUOTE(v0.c0)) ISNULL)) ORDER BY ((rt0.c0 IN ()) IN ()) ASC, ((((rt0.c0)<=(rt0.c0))) IS TRUE), ((ABS(DISTINCT '1e500'))||(CAST(v0.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((QUOTE(v0.c0)) ISNULL)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((rt0.c0 IN ()) IN ()) ASC, ((((rt0.c0)<=(rt0.c0))) IS TRUE), ((ABS(DISTINCT '1e500'))||(CAST(v0.c0 AS TEXT))) DESC);
SELECT * FROM v0, rt0, vt0 WHERE (((QUOTE(v0.c0)) ISNULL)) ORDER BY ((rt0.c0 IN ()) IN ()) ASC, ((((rt0.c0)<=(rt0.c0))) IS TRUE), ((ABS(DISTINCT '1e500'))||(CAST(v0.c0 AS TEXT))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(LOWER(rt0.c1), COALESCE(DISTINCT rt0.c2, rt0.c0, x'5178', rt0.c1))) ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), 0.15092269688280757), ((x'18d4193b') BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (((rt0.c1)%(rt0.c0)))), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(LOWER(rt0.c1), COALESCE(DISTINCT rt0.c2, rt0.c0, x'5178', rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), 0.15092269688280757), ((x'18d4193b') BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (((rt0.c1)%(rt0.c0)))), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(LOWER(rt0.c1), COALESCE(DISTINCT rt0.c2, rt0.c0, x'5178', rt0.c1))) ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), 0.15092269688280757), ((x'18d4193b') BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (((rt0.c1)%(rt0.c0)))), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(LOWER(rt0.c1), COALESCE(DISTINCT rt0.c2, rt0.c0, x'5178', rt0.c1))) IS TRUE)  as count FROM rt0 ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), 0.15092269688280757), ((x'18d4193b') BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (((rt0.c1)%(rt0.c0)))), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (NULLIF(LOWER(rt0.c1), COALESCE(DISTINCT rt0.c2, rt0.c0, x'5178', rt0.c1))) ORDER BY IFNULL(DISTINCT ((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)), 0.15092269688280757), ((x'18d4193b') BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c2)) AND (((rt0.c1)%(rt0.c0)))), ((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) IS TRUE)  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE (((((rt0.c1)%(0xffffffff9270534b))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 5.67007322E8 WHEN 'tl0)fMk\n|' THEN vt0.c1 END))) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN ((~ (v0.c0))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.5649011097043887)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(0xffffffff9270534b))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 5.67007322E8 WHEN 'tl0)fMk\n|' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN ((~ (v0.c0))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.5649011097043887))))));
SELECT * FROM vt0, v0, rt0 WHERE (((((rt0.c1)%(0xffffffff9270534b))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 5.67007322E8 WHEN 'tl0)fMk\n|' THEN vt0.c1 END))) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN ((~ (v0.c0))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.5649011097043887)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)%(0xffffffff9270534b))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 5.67007322E8 WHEN 'tl0)fMk\n|' THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN ((~ (v0.c0))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.5649011097043887))))));
SELECT * FROM vt0, v0, rt0 WHERE (((((rt0.c1)%(0xffffffff9270534b))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 5.67007322E8 WHEN 'tl0)fMk\n|' THEN vt0.c1 END))) ORDER BY ((((rt0.c2) IS FALSE)) NOT BETWEEN ((~ (v0.c0))) AND ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((0.5649011097043887)))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((CAST(v0.c0 AS INTEGER)))>=((vt0.c0 COLLATE RTRIM))) WHERE ((((((vt0.c0, vt0.c0, '*h')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, -593688734)))) BETWEEN (((((vt0.c1)OR(v0.c0)))OR(v0.c0))) AND ((((v0.c0))>=((v0.c0)))))) ORDER BY (NOT (UPPER(DISTINCT v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, '*h')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, -593688734)))) BETWEEN (((((vt0.c1)OR(v0.c0)))OR(v0.c0))) AND ((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((CAST(v0.c0 AS INTEGER)))>=((vt0.c0 COLLATE RTRIM))) ORDER BY (NOT (UPPER(DISTINCT v0.c0))) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((CAST(v0.c0 AS INTEGER)))>=((vt0.c0 COLLATE RTRIM))) WHERE ((((((vt0.c0, vt0.c0, '*h')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, -593688734)))) BETWEEN (((((vt0.c1)OR(v0.c0)))OR(v0.c0))) AND ((((v0.c0))>=((v0.c0)))))) ORDER BY (NOT (UPPER(DISTINCT v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, vt0.c0, '*h')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, -593688734)))) BETWEEN (((((vt0.c1)OR(v0.c0)))OR(v0.c0))) AND ((((v0.c0))>=((v0.c0)))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((CAST(v0.c0 AS INTEGER)))>=((vt0.c0 COLLATE RTRIM))) ORDER BY (NOT (UPPER(DISTINCT v0.c0))) DESC);
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON (((CAST(v0.c0 AS INTEGER)))>=((vt0.c0 COLLATE RTRIM))) WHERE ((((((vt0.c0, vt0.c0, '*h')) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, v0.c0, -593688734)))) BETWEEN (((((vt0.c1)OR(v0.c0)))OR(v0.c0))) AND ((((v0.c0))>=((v0.c0)))))) ORDER BY (NOT (UPPER(DISTINCT v0.c0))) DESC;
SELECT ALL * FROM rt0 WHERE (((((((((((((((((NULLIF(DISTINCT rt0.c1, x''))AND(((rt0.c2)=(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c2)OR(rt0.c2)))))AND(HEX(DISTINCT rt0.c2))))OR(x'677a')))AND(((rt0.c2)&(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((NULLIF(DISTINCT rt0.c1, x''))AND(((rt0.c2)=(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c2)OR(rt0.c2)))))AND(HEX(DISTINCT rt0.c2))))OR(x'677a')))AND(((rt0.c2)&(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((((NULLIF(DISTINCT rt0.c1, x''))AND(((rt0.c2)=(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c2)OR(rt0.c2)))))AND(HEX(DISTINCT rt0.c2))))OR(x'677a')))AND(((rt0.c2)&(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c1) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((NULLIF(DISTINCT rt0.c1, x''))AND(((rt0.c2)=(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c2)OR(rt0.c2)))))AND(HEX(DISTINCT rt0.c2))))OR(x'677a')))AND(((rt0.c2)&(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c1) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((((((NULLIF(DISTINCT rt0.c1, x''))AND(((rt0.c2)=(rt0.c0)))))OR(rt0.c0)))OR(((rt0.c2)OR(rt0.c2)))))AND(HEX(DISTINCT rt0.c2))))OR(x'677a')))AND(((rt0.c2)&(rt0.c0)))))AND(rt0.c0 COLLATE NOCASE)))OR(((rt0.c1) ISNULL))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((v0.c0) IS TRUE), ((rt0.c0)LIKE(rt0.c2)), ((v0.c0) NOT NULL))) AND ((x'', NULLIF(DISTINCT rt0.c2, rt0.c0), rt0.c1 COLLATE BINARY))) WHERE (json_array_length((~ (v0.c0)), ((0.4032051857076041)%(v0.c0)))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c2)))) AND ((((rt0.c1)&(NULL)), (- (rt0.c1)), ((rt0.c1)<<(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (v0.c0)), ((0.4032051857076041)%(v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((v0.c0) IS TRUE), ((rt0.c0)LIKE(rt0.c2)), ((v0.c0) NOT NULL))) AND ((x'', NULLIF(DISTINCT rt0.c2, rt0.c0), rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c2)))) AND ((((rt0.c1)&(NULL)), (- (rt0.c1)), ((rt0.c1)<<(rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((v0.c0) IS TRUE), ((rt0.c0)LIKE(rt0.c2)), ((v0.c0) NOT NULL))) AND ((x'', NULLIF(DISTINCT rt0.c2, rt0.c0), rt0.c1 COLLATE BINARY))) WHERE (json_array_length((~ (v0.c0)), ((0.4032051857076041)%(v0.c0)))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c2)))) AND ((((rt0.c1)&(NULL)), (- (rt0.c1)), ((rt0.c1)<<(rt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_array_length((~ (v0.c0)), ((0.4032051857076041)%(v0.c0)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((v0.c0) IS TRUE), ((rt0.c0)LIKE(rt0.c2)), ((v0.c0) NOT NULL))) AND ((x'', NULLIF(DISTINCT rt0.c2, rt0.c0), rt0.c1 COLLATE BINARY))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c2)))) AND ((((rt0.c1)&(NULL)), (- (rt0.c1)), ((rt0.c1)<<(rt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON (((rt0.c0, rt0.c0, rt0.c2)) BETWEEN ((((v0.c0) IS TRUE), ((rt0.c0)LIKE(rt0.c2)), ((v0.c0) NOT NULL))) AND ((x'', NULLIF(DISTINCT rt0.c2, rt0.c0), rt0.c1 COLLATE BINARY))) WHERE (json_array_length((~ (v0.c0)), ((0.4032051857076041)%(v0.c0)))) ORDER BY (((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c0, ((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)), (NOT (rt0.c2)))) AND ((((rt0.c1)&(NULL)), (- (rt0.c1)), ((rt0.c1)<<(rt0.c0)))))  NULLS LAST;
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST(0.3516260937869832 AS TEXT)) ORDER BY (((rt0.c1)) NOT BETWEEN ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (NULL))))) DESC, (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt0.c1)-(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.3516260937869832 AS TEXT)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (NULL))))) DESC, (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt0.c1)-(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST(0.3516260937869832 AS TEXT)) ORDER BY (((rt0.c1)) NOT BETWEEN ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (NULL))))) DESC, (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt0.c1)-(rt0.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.3516260937869832 AS TEXT)) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY (((rt0.c1)) NOT BETWEEN ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (NULL))))) DESC, (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt0.c1)-(rt0.c2)))))  NULLS LAST);
SELECT ALL * FROM rt0, v0 NATURAL JOIN vt0 WHERE (CAST(0.3516260937869832 AS TEXT)) ORDER BY (((rt0.c1)) NOT BETWEEN ((((v0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) AND ((((vt0.c0) BETWEEN (rt0.c1) AND (NULL))))) DESC, (((((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt0.c1)-(rt0.c2)))))  NULLS LAST;
SELECT * FROM v0, vt0, rt0 WHERE (((((((((0.2897157340358869)OR(((vt0.c1)+(rt0.c0)))))AND(((vt0.c1)>(rt0.c2)))))OR((NOT (vt0.c0)))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((0.2897157340358869)OR(((vt0.c1)+(rt0.c0)))))AND(((vt0.c1)>(rt0.c2)))))OR((NOT (vt0.c0)))))OR(vt0.c1))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((((0.2897157340358869)OR(((vt0.c1)+(rt0.c0)))))AND(((vt0.c1)>(rt0.c2)))))OR((NOT (vt0.c0)))))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((0.2897157340358869)OR(((vt0.c1)+(rt0.c0)))))AND(((vt0.c1)>(rt0.c2)))))OR((NOT (vt0.c0)))))OR(vt0.c1))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (((((((((0.2897157340358869)OR(((vt0.c1)+(rt0.c0)))))AND(((vt0.c1)>(rt0.c2)))))OR((NOT (vt0.c0)))))OR(vt0.c1)));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ()))IS(((v0.c0)IS NOT(v0.c0)))) WHERE (NULLIF(DISTINCT (((vt0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((vt0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ()))IS(((v0.c0)IS NOT(v0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ()))IS(((v0.c0)IS NOT(v0.c0)))) WHERE (NULLIF(DISTINCT (((vt0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT (((vt0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ()))IS(((v0.c0)IS NOT(v0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c1 IN ()))IS(((v0.c0)IS NOT(v0.c0)))) WHERE (NULLIF(DISTINCT (((vt0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))), ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(v0.c0))));
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((('+&_A o(')IS NOT(vt0.c1)), ((v0.c0) IS FALSE), ((((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0))))<=((v0.c0 COLLATE RTRIM, (((v0.c0))>((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((('+&_A o(')IS NOT(vt0.c1)), ((v0.c0) IS FALSE), ((((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0))))<=((v0.c0 COLLATE RTRIM, (((v0.c0))>((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((('+&_A o(')IS NOT(vt0.c1)), ((v0.c0) IS FALSE), ((((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0))))<=((v0.c0 COLLATE RTRIM, (((v0.c0))>((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ((((((('+&_A o(')IS NOT(vt0.c1)), ((v0.c0) IS FALSE), ((((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0))))<=((v0.c0 COLLATE RTRIM, (((v0.c0))>((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE (((((('+&_A o(')IS NOT(vt0.c1)), ((v0.c0) IS FALSE), ((((((((vt0.c1)OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(v0.c0))))<=((v0.c0 COLLATE RTRIM, (((v0.c0))>((vt0.c0))), CASE WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, vt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c1)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, vt0.c1)) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((IFNULL(DISTINCT vt0.c0, vt0.c1)) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'1f41')%(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'1f41')%(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'1f41')%(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((x'1f41')%(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((x'1f41')%(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0, v0.c0, v0.c0)) BETWEEN (('-1567625147', v0.c0, v0.c0)) AND (('-1080223353', '-1604371521', v0.c0))))))AND(v0.c0)))AND(((v0.c0)>(v0.c0)))))AND(x'd4d919e6')));
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0, v0.c0, v0.c0)) BETWEEN (('-1567625147', v0.c0, v0.c0)) AND (('-1080223353', '-1604371521', v0.c0))))))AND(v0.c0)))AND(((v0.c0)>(v0.c0)))))AND(x'd4d919e6'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0, v0.c0, v0.c0)) BETWEEN (('-1567625147', v0.c0, v0.c0)) AND (('-1080223353', '-1604371521', v0.c0))))))AND(v0.c0)))AND(((v0.c0)>(v0.c0)))))AND(x'd4d919e6')));
SELECT SUM(count) FROM (SELECT ((((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0, v0.c0, v0.c0)) BETWEEN (('-1567625147', v0.c0, v0.c0)) AND (('-1080223353', '-1604371521', v0.c0))))))AND(v0.c0)))AND(((v0.c0)>(v0.c0)))))AND(x'd4d919e6'))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR((((v0.c0, v0.c0, v0.c0)) BETWEEN (('-1567625147', v0.c0, v0.c0)) AND (('-1080223353', '-1604371521', v0.c0))))))AND(v0.c0)))AND(((v0.c0)>(v0.c0)))))AND(x'd4d919e6')));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)>((~ ('1239928147')))) RIGHT OUTER JOIN v0 ON (((((vt0.c1 IN ()))OR((((vt0.c0))<=((rt0.c0))))))AND((((rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c1, rt0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, '', rt0.c2, rt0.c1, rt0.c0, vt0.c1, NULL, v0.c0, vt0.c1))))) WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)||(rt0.c0)), 0.2531449233454802));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c1)||(rt0.c0)), 0.2531449233454802)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)>((~ ('1239928147')))) RIGHT OUTER JOIN v0 ON (((((vt0.c1 IN ()))OR((((vt0.c0))<=((rt0.c0))))))AND((((rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c1, rt0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, '', rt0.c2, rt0.c1, rt0.c0, vt0.c1, NULL, v0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)>((~ ('1239928147')))) RIGHT OUTER JOIN v0 ON (((((vt0.c1 IN ()))OR((((vt0.c0))<=((rt0.c0))))))AND((((rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c1, rt0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, '', rt0.c2, rt0.c1, rt0.c0, vt0.c1, NULL, v0.c0, vt0.c1))))) WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)||(rt0.c0)), 0.2531449233454802));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c1)||(rt0.c0)), 0.2531449233454802)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)>((~ ('1239928147')))) RIGHT OUTER JOIN v0 ON (((((vt0.c1 IN ()))OR((((vt0.c0))<=((rt0.c0))))))AND((((rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c1, rt0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, '', rt0.c2, rt0.c1, rt0.c0, vt0.c1, NULL, v0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((rt0.c0)>((~ ('1239928147')))) RIGHT OUTER JOIN v0 ON (((((vt0.c1 IN ()))OR((((vt0.c0))<=((rt0.c0))))))AND((((rt0.c2, vt0.c1, vt0.c0, rt0.c1, rt0.c2, vt0.c1, vt0.c1, rt0.c2, v0.c0)) NOT BETWEEN ((vt0.c1, rt0.c1, rt0.c2, v0.c0, vt0.c0, vt0.c1, rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c1, '', rt0.c2, rt0.c1, rt0.c0, vt0.c1, NULL, v0.c0, vt0.c1))))) WHERE (LIKELIHOOD(DISTINCT ((rt0.c1)||(rt0.c0)), 0.2531449233454802));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((v0.c0, '', vt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS NUMERIC), rt0.c0)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))), ((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(v0.c0)))OR(vt0.c1)), ((rt0.c1)LIKE(v0.c0)))))) ORDER BY ((0.5592192736110176)>=(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, '', vt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS NUMERIC), rt0.c0)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))), ((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(v0.c0)))OR(vt0.c1)), ((rt0.c1)LIKE(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((0.5592192736110176)>=(rt0.c1)) ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((v0.c0, '', vt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS NUMERIC), rt0.c0)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))), ((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(v0.c0)))OR(vt0.c1)), ((rt0.c1)LIKE(v0.c0)))))) ORDER BY ((0.5592192736110176)>=(rt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, '', vt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS NUMERIC), rt0.c0)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))), ((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(v0.c0)))OR(vt0.c1)), ((rt0.c1)LIKE(v0.c0)))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((0.5592192736110176)>=(rt0.c1)) ASC);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((((v0.c0, '', vt0.c0)) BETWEEN (((- (v0.c0)), CAST(rt0.c2 AS NUMERIC), rt0.c0)) AND (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c0))), ((((((((rt0.c2)AND(rt0.c0)))AND(vt0.c1)))OR(v0.c0)))OR(vt0.c1)), ((rt0.c1)LIKE(v0.c0)))))) ORDER BY ((0.5592192736110176)>=(rt0.c1)) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON 0.22333922302064502 WHERE (CAST(((v0.c0)>>(v0.c0)) AS REAL)) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>>(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON 0.22333922302064502 ORDER BY CHANGES() DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON 0.22333922302064502 WHERE (CAST(((v0.c0)>>(v0.c0)) AS REAL)) ORDER BY CHANGES() DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)>>(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON 0.22333922302064502 ORDER BY CHANGES() DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON 0.22333922302064502 WHERE (CAST(((v0.c0)>>(v0.c0)) AS REAL)) ORDER BY CHANGES() DESC;
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)/(rt0.c2)))AND(((rt0.c0) ISNULL))))AND(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))OR('\r.')))OR(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)/(rt0.c2)))AND(((rt0.c0) ISNULL))))AND(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))OR('\r.')))OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)/(rt0.c2)))AND(((rt0.c0) ISNULL))))AND(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))OR('\r.')))OR(((rt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c1)/(rt0.c2)))AND(((rt0.c0) ISNULL))))AND(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))OR('\r.')))OR(((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((((((((rt0.c1)/(rt0.c2)))AND(((rt0.c0) ISNULL))))AND(((((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))OR('\r.')))OR(((rt0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT NULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT NULL))))AND(NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT NULL))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT NULL))))AND(NULL))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))OR(((vt0.c0) NOT NULL))))AND(NULL)));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ABS(DISTINCT (v0.c0 IN (x'f753')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ABS(DISTINCT (v0.c0 IN (x'f753')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ABS(DISTINCT (v0.c0 IN (x'f753')))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ABS(DISTINCT (v0.c0 IN (x'f753')))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (TYPEOF(((rt0.c2) BETWEEN (rt0.c0) AND (v0.c0)))) ORDER BY ABS(DISTINCT (v0.c0 IN (x'f753')))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE WHEN vt0.c1 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'Zs~X1sgᬆo' THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((- (rt0.c0))) AND (((-1060297061) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'Zs~X1sgᬆo' THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((- (rt0.c0))) AND (((-1060297061) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE WHEN vt0.c1 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'Zs~X1sgᬆo' THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((- (rt0.c0))) AND (((-1060297061) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'Zs~X1sgᬆo' THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((- (rt0.c0))) AND (((-1060297061) NOTNULL)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CASE WHEN vt0.c1 THEN v0.c0 WHEN rt0.c0 THEN vt0.c1 WHEN 'Zs~X1sgᬆo' THEN rt0.c0 WHEN rt0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT BETWEEN ((- (rt0.c0))) AND (((-1060297061) NOTNULL))));
SELECT * FROM rt0, v0, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS REAL)) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CAST((vt0.c1 IN ()) AS REAL));
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY (rt0.c2 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE ASC);
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY (rt0.c2 IN ()) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, v0 ORDER BY (rt0.c2 IN ()) COLLATE NOCASE ASC);
SELECT * FROM rt0, v0 WHERE (x'') ORDER BY (rt0.c2 IN ()) COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON '' WHERE ((((((0x26300391 IN ()))OR(((((rt0.c0)OR(v0.c0)))AND('')))))AND((((rt0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, v0.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((0X26300391 IN ()))OR(((((rt0.c0)OR(v0.c0)))AND('')))))AND((((rt0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, v0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON '' ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON '' WHERE ((((((0x26300391 IN ()))OR(((((rt0.c0)OR(v0.c0)))AND('')))))AND((((rt0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, v0.c0)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((((((0X26300391 IN ()))OR(((((rt0.c0)OR(v0.c0)))AND('')))))AND((((rt0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, v0.c0)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON '' ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON '' WHERE ((((((0x26300391 IN ()))OR(((((rt0.c0)OR(v0.c0)))AND('')))))AND((((rt0.c0, v0.c0, rt0.c0))>((rt0.c2, rt0.c2, v0.c0)))))) ORDER BY NULL;
SELECT * FROM vt0, v0 WHERE ((NOT (IFNULL(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (IFNULL(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (IFNULL(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((NOT (IFNULL(vt0.c0, vt0.c0))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))IS(((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE NOCASE))=((((v0.c0)>>(rt0.c1))))) WHERE ((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))LIKE('*c'));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))IS(((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE NOCASE))=((((v0.c0)>>(rt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))LIKE('*c')));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))IS(((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE NOCASE))=((((v0.c0)>>(rt0.c1))))) WHERE ((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) IN ())) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))LIKE('*c'));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (NULL) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((CAST(rt0.c2 AS REAL))IS(((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c2)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))) RIGHT OUTER JOIN vt0 ON (((rt0.c2 COLLATE NOCASE))=((((v0.c0)>>(rt0.c1))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)))LIKE('*c')));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY NULL DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0 COLLATE BINARY)<=(CASE v0.c0  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY NULL DESC;
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((NULL)>=(v0.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((UPPER(rt0.c1))AND(((rt0.c2)OR(vt0.c1)))) WHERE ((+ ((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, v0.c0)))))) ORDER BY ((((0xffffffff9e167dae COLLATE RTRIM)OR(LIKELY(DISTINCT vt0.c1))))AND(ABS(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((NULL)>=(v0.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((UPPER(rt0.c1))AND(((rt0.c2)OR(vt0.c1)))) ORDER BY ((((0Xffffffff9e167dae COLLATE RTRIM)OR(LIKELY(DISTINCT vt0.c1))))AND(ABS(rt0.c0))) DESC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((NULL)>=(v0.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((UPPER(rt0.c1))AND(((rt0.c2)OR(vt0.c1)))) WHERE ((+ ((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, v0.c0)))))) ORDER BY ((((0xffffffff9e167dae COLLATE RTRIM)OR(LIKELY(DISTINCT vt0.c1))))AND(ABS(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((((rt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((rt0.c0, vt0.c0, v0.c0)) AND ((rt0.c1, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON CAST(((NULL)>=(v0.c0)) AS REAL) LEFT OUTER JOIN v0 ON ((UPPER(rt0.c1))AND(((rt0.c2)OR(vt0.c1)))) ORDER BY ((((0Xffffffff9e167dae COLLATE RTRIM)OR(LIKELY(DISTINCT vt0.c1))))AND(ABS(rt0.c0))) DESC);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(((rt0.c0)<>(rt0.c0)) AS INTEGER) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((rt0.c1 IN (vt0.c0))) NOT BETWEEN (((0.9332309304185915) ISNULL)) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c0))) NOT BETWEEN (((0.9332309304185915) ISNULL)) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(((rt0.c0)<>(rt0.c0)) AS INTEGER) FULL OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(((rt0.c0)<>(rt0.c0)) AS INTEGER) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((rt0.c1 IN (vt0.c0))) NOT BETWEEN (((0.9332309304185915) ISNULL)) AND (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c0))) NOT BETWEEN (((0.9332309304185915) ISNULL)) AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CAST(((rt0.c0)<>(rt0.c0)) AS INTEGER) FULL OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CAST(((rt0.c0)<>(rt0.c0)) AS INTEGER) FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((((rt0.c1 IN (vt0.c0))) NOT BETWEEN (((0.9332309304185915) ISNULL)) AND (CAST(v0.c0 AS TEXT))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON json_patch((vt0.c1 IN ()), ((rt0.c1)<<(rt0.c0))) FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((rt0.c2)%(v0.c0))))) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((-4.88445766E8))) COLLATE RTRIM) ORDER BY CASE WHEN MIN(rt0.c2, vt0.c1) THEN CAST(vt0.c1 AS TEXT) ELSE rt0.c1 END ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((-4.88445766E8))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON json_patch((vt0.c1 IN ()), ((rt0.c1)<<(rt0.c0))) FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((rt0.c2)%(v0.c0))))) ORDER BY CASE WHEN MIN(rt0.c2, vt0.c1) THEN CAST(vt0.c1 AS TEXT) ELSE rt0.c1 END ASC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON json_patch((vt0.c1 IN ()), ((rt0.c1)<<(rt0.c0))) FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((rt0.c2)%(v0.c0))))) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((-4.88445766E8))) COLLATE RTRIM) ORDER BY CASE WHEN MIN(rt0.c2, vt0.c1) THEN CAST(vt0.c1 AS TEXT) ELSE rt0.c1 END ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((-4.88445766E8))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON json_patch((vt0.c1 IN ()), ((rt0.c1)<<(rt0.c0))) FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((rt0.c2)%(v0.c0))))) ORDER BY CASE WHEN MIN(rt0.c2, vt0.c1) THEN CAST(vt0.c1 AS TEXT) ELSE rt0.c1 END ASC);
SELECT ALL * FROM rt0 INNER JOIN v0 ON json_patch((vt0.c1 IN ()), ((rt0.c1)<<(rt0.c0))) FULL OUTER JOIN vt0 ON (((vt0.c0)) BETWEEN ((((v0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((((rt0.c2)%(v0.c0))))) WHERE ((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((-4.88445766E8))) COLLATE RTRIM) ORDER BY CASE WHEN MIN(rt0.c2, vt0.c1) THEN CAST(vt0.c1 AS TEXT) ELSE rt0.c1 END ASC;
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((v0.c0) NOTNULL) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (vt0.c0)))))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (vt0.c0)))))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (vt0.c0)))))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (vt0.c0)))))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c0 IN ()))OR((vt0.c0 IN (vt0.c0)))))AND(vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))OR(vt0.c0 COLLATE BINARY))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c0 END) NOTNULL) DESC;
SELECT * FROM v0 WHERE (CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(v0.c0 AS REAL));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c1)) AND (TYPEOF(x'')))) ORDER BY CAST(0.4874531817185652 AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c1)) AND (TYPEOF(x'')))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.4874531817185652 AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c1)) AND (TYPEOF(x'')))) ORDER BY CAST(0.4874531817185652 AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c1)) AND (TYPEOF(x'')))) IS TRUE)  as count FROM rt0 ORDER BY CAST(0.4874531817185652 AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (COALESCE(rt0.c1, rt0.c0, rt0.c1, rt0.c1)) AND (TYPEOF(x'')))) ORDER BY CAST(0.4874531817185652 AS BLOB) DESC  NULLS FIRST;
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 0.9160853710927996)) ORDER BY (+ (LIKELIHOOD(v0.c0, 0.21201808966835156)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 0.9160853710927996)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (+ (LIKELIHOOD(v0.c0, 0.21201808966835156))));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 0.9160853710927996)) ORDER BY (+ (LIKELIHOOD(v0.c0, 0.21201808966835156)));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 0.9160853710927996)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0 ORDER BY (+ (LIKELIHOOD(v0.c0, 0.21201808966835156))));
SELECT * FROM v0 NATURAL JOIN rt0 WHERE (LIKELIHOOD(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)), 0.9160853710927996)) ORDER BY (+ (LIKELIHOOD(v0.c0, 0.21201808966835156)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)==(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)==(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)=(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)==(rt0.c1)) IN ()));
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((vt0.c1)>>(rt0.c2)) COLLATE RTRIM) ORDER BY ((TYPEOF(vt0.c1)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>>(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY ((TYPEOF(vt0.c1)) ISNULL));
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((vt0.c1)>>(rt0.c2)) COLLATE RTRIM) ORDER BY ((TYPEOF(vt0.c1)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)>>(rt0.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0 ORDER BY ((TYPEOF(vt0.c1)) ISNULL));
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE (((vt0.c1)>>(rt0.c2)) COLLATE RTRIM) ORDER BY ((TYPEOF(vt0.c1)) ISNULL);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, rt0, vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(NULL AS TEXT))OR('z,ꛝj|')))AND(v0.c0 COLLATE RTRIM))) ORDER BY json_remove(CAST(0Xffffffffcae90b9f AS REAL), ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('1978213925')))AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS TEXT))OR('z,ꛝj|')))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY json_remove(CAST(0xffffffffcae90b9f AS REAL), ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('1978213925')))AND(v0.c0))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(NULL AS TEXT))OR('z,ꛝj|')))AND(v0.c0 COLLATE RTRIM))) ORDER BY json_remove(CAST(0Xffffffffcae90b9f AS REAL), ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('1978213925')))AND(v0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(NULL AS TEXT))OR('z,ꛝj|')))AND(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0 ORDER BY json_remove(CAST(0xffffffffcae90b9f AS REAL), ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND('1978213925')))AND(v0.c0))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN 'jO}oM3q7' THEN v0.c0 ELSE v0.c0 END) AND ((((x'fe64d0f09dc2', vt0.c0, vt0.c0)) NOT BETWEEN (('U8', vt0.c0, v0.c0)) AND ((vt0.c1, v0.c0, 'yL'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN 'jO}oM3q7' THEN v0.c0 ELSE v0.c0 END) AND ((((x'fe64d0f09dc2', vt0.c0, vt0.c0)) NOT BETWEEN (('U8', vt0.c0, v0.c0)) AND ((vt0.c1, v0.c0, 'yL')))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN 'jO}oM3q7' THEN v0.c0 ELSE v0.c0 END) AND ((((x'fe64d0f09dc2', vt0.c0, vt0.c0)) NOT BETWEEN (('U8', vt0.c0, v0.c0)) AND ((vt0.c1, v0.c0, 'yL'))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN 'jO}oM3q7' THEN v0.c0 ELSE v0.c0 END) AND ((((x'fe64d0f09dc2', vt0.c0, vt0.c0)) NOT BETWEEN (('U8', vt0.c0, v0.c0)) AND ((vt0.c1, v0.c0, 'yL')))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN 'jO}oM3q7' THEN v0.c0 ELSE v0.c0 END) AND ((((x'fe64d0f09dc2', vt0.c0, vt0.c0)) NOT BETWEEN (('U8', vt0.c0, v0.c0)) AND ((vt0.c1, v0.c0, 'yL'))))));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'ンMoa' WHEN v0.c0 THEN v0.c0 END WHEN json(v0.c0) THEN (NULL IN ()) WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)/(v0.c0)) THEN x'' END) ORDER BY CAST(-1470542735 AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'ンMoa' WHEN v0.c0 THEN v0.c0 END WHEN json(v0.c0) THEN (NULL IN ()) WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)/(v0.c0)) THEN x'' END) IS TRUE)  as count FROM v0 ORDER BY CAST(-1470542735 AS REAL));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'ンMoa' WHEN v0.c0 THEN v0.c0 END WHEN json(v0.c0) THEN (NULL IN ()) WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)/(v0.c0)) THEN x'' END) ORDER BY CAST(-1470542735 AS REAL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'ンMoa' WHEN v0.c0 THEN v0.c0 END WHEN json(v0.c0) THEN (NULL IN ()) WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)/(v0.c0)) THEN x'' END) IS TRUE)  as count FROM v0 ORDER BY CAST(-1470542735 AS REAL));
SELECT * FROM v0 WHERE (CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 'ンMoa' WHEN v0.c0 THEN v0.c0 END WHEN json(v0.c0) THEN (NULL IN ()) WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (x'')) THEN ((v0.c0)%(v0.c0)) WHEN ((v0.c0)/(v0.c0)) THEN x'' END) ORDER BY CAST(-1470542735 AS REAL);
SELECT * FROM vt0 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, 0.6841363653674108, rt0.c0)))) WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, 0.6841363653674108, rt0.c0)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, 0.6841363653674108, rt0.c0)))) WHERE ((+ (rt0.c2)));
SELECT SUM(count) FROM (SELECT (((+ (rt0.c2))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, 0.6841363653674108, rt0.c0)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON SQLITE_COMPILEOPTION_USED((((vt0.c1, rt0.c2, vt0.c0)) BETWEEN ((vt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c1, 0.6841363653674108, rt0.c0)))) WHERE ((+ (rt0.c2)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((TRIM(vt0.c0, vt0.c0))>=(((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0, vt0.c0))>=(((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((TRIM(vt0.c0, vt0.c0))>=(((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0, vt0.c0))>=(((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((TRIM(vt0.c0, vt0.c0))>=(((((((((x'')AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))OR(v0.c0)))));
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))|((((v0.c0, 0.6962082586808703, v0.c0)) NOT BETWEEN (('0', v0.c0, NULL)) AND ((0x68c01916, v0.c0, v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))|((((v0.c0, 0.6962082586808703, v0.c0)) NOT BETWEEN (('0', v0.c0, NULL)) AND ((0X68c01916, v0.c0, v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))|((((v0.c0, 0.6962082586808703, v0.c0)) NOT BETWEEN (('0', v0.c0, NULL)) AND ((0x68c01916, v0.c0, v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))|((((v0.c0, 0.6962082586808703, v0.c0)) NOT BETWEEN (('0', v0.c0, NULL)) AND ((0X68c01916, v0.c0, v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOT NULL)) ORDER BY ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))|((((v0.c0, 0.6962082586808703, v0.c0)) NOT BETWEEN (('0', v0.c0, NULL)) AND ((0x68c01916, v0.c0, v0.c0))))) ASC  NULLS LAST;
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1, v0.c0, -303299311))<((v0.c0, vt0.c0, vt0.c1)))  WHEN ((vt0.c1) NOTNULL) THEN (((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))) END WHERE ((((v0.c0 IN (vt0.c0))) BETWEEN (NULL) AND (UNLIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (vt0.c0))) BETWEEN (NULL) AND (UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1, v0.c0, -303299311))<((v0.c0, vt0.c0, vt0.c1)))  WHEN ((vt0.c1) NOTNULL) THEN (((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1, v0.c0, -303299311))<((v0.c0, vt0.c0, vt0.c1)))  WHEN ((vt0.c1) NOTNULL) THEN (((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))) END WHERE ((((v0.c0 IN (vt0.c0))) BETWEEN (NULL) AND (UNLIKELY(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (vt0.c0))) BETWEEN (NULL) AND (UNLIKELY(v0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1, v0.c0, -303299311))<((v0.c0, vt0.c0, vt0.c1)))  WHEN ((vt0.c1) NOTNULL) THEN (((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT * FROM v0 LEFT OUTER JOIN vt0 ON CASE (((vt0.c1, v0.c0, -303299311))<((v0.c0, vt0.c0, vt0.c1)))  WHEN ((vt0.c1) NOTNULL) THEN (((x'')) BETWEEN ((v0.c0)) AND ((v0.c0))) END WHERE ((((v0.c0 IN (vt0.c0))) BETWEEN (NULL) AND (UNLIKELY(v0.c0))));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN vt0.c1 END THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN (((rt0.c2))==((rt0.c0))) WHEN (NOT (x'')) THEN rt0.c2 ELSE (~ (rt0.c2)) END LEFT OUTER JOIN vt0 ON ((((vt0.c1))>((rt0.c2))) IN ()) WHERE ((((rt0.c0, rt0.c0, NULL, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (rt0.c1)), x'' COLLATE NOCASE, ((0.417973708465708) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)/(rt0.c1)), ((v0.c0)LIKE(NULL)))) AND ((rt0.c1, ((1177888355)<=(vt0.c0)), (x'' IN (rt0.c2)), ((rt0.c1) NOT NULL), UNLIKELY(DISTINCT v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, NULL, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (rt0.c1)), x'' COLLATE NOCASE, ((0.417973708465708) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)/(rt0.c1)), ((v0.c0)LIKE(NULL)))) AND ((rt0.c1, ((1177888355)<=(vt0.c0)), (x'' IN (rt0.c2)), ((rt0.c1) NOT NULL), UNLIKELY(DISTINCT v0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN vt0.c1 END THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN (((rt0.c2))==((rt0.c0))) WHEN (NOT (x'')) THEN rt0.c2 ELSE (~ (rt0.c2)) END LEFT OUTER JOIN vt0 ON ((((vt0.c1))>((rt0.c2))) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN vt0.c1 END THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN (((rt0.c2))==((rt0.c0))) WHEN (NOT (x'')) THEN rt0.c2 ELSE (~ (rt0.c2)) END LEFT OUTER JOIN vt0 ON ((((vt0.c1))>((rt0.c2))) IN ()) WHERE ((((rt0.c0, rt0.c0, NULL, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (rt0.c1)), x'' COLLATE NOCASE, ((0.417973708465708) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)/(rt0.c1)), ((v0.c0)LIKE(NULL)))) AND ((rt0.c1, ((1177888355)<=(vt0.c0)), (x'' IN (rt0.c2)), ((rt0.c1) NOT NULL), UNLIKELY(DISTINCT v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, NULL, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (rt0.c1)), x'' COLLATE NOCASE, ((0.417973708465708) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)/(rt0.c1)), ((v0.c0)LIKE(NULL)))) AND ((rt0.c1, ((1177888355)<=(vt0.c0)), (x'' IN (rt0.c2)), ((rt0.c1) NOT NULL), UNLIKELY(DISTINCT v0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN vt0.c1 END THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN (((rt0.c2))==((rt0.c0))) WHEN (NOT (x'')) THEN rt0.c2 ELSE (~ (rt0.c2)) END LEFT OUTER JOIN vt0 ON ((((vt0.c1))>((rt0.c2))) IN ()));
SELECT ALL * FROM rt0 CROSS JOIN v0 ON CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c1 THEN vt0.c1 END THEN (- (vt0.c0)) WHEN CAST(vt0.c1 AS TEXT) THEN (((rt0.c2))==((rt0.c0))) WHEN (NOT (x'')) THEN rt0.c2 ELSE (~ (rt0.c2)) END LEFT OUTER JOIN vt0 ON ((((vt0.c1))>((rt0.c2))) IN ()) WHERE ((((rt0.c0, rt0.c0, NULL, rt0.c2, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (rt0.c1)), x'' COLLATE NOCASE, ((0.417973708465708) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)/(rt0.c1)), ((v0.c0)LIKE(NULL)))) AND ((rt0.c1, ((1177888355)<=(vt0.c0)), (x'' IN (rt0.c2)), ((rt0.c1) NOT NULL), UNLIKELY(DISTINCT v0.c0)))));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (QUOTE(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (QUOTE(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (QUOTE(((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL * FROM v0, rt0, vt0 WHERE (UPPER(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) ORDER BY (((v0.c0)&(vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED ORDER BY (((v0.c0)&(vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (UPPER(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) ORDER BY (((v0.c0)&(vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED ORDER BY (((v0.c0)&(vt0.c1)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (UPPER(((((vt0.c0)OR(vt0.c0)))OR(rt0.c0)))) ORDER BY (((v0.c0)&(vt0.c1)) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1)+(rt0.c1)) COLLATE RTRIM) ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1)+(rt0.c1)) COLLATE RTRIM) ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)+(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((rt0.c1)+(rt0.c1)) COLLATE RTRIM) ORDER BY (- (rt0.c2)) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((x'') ISNULL) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN ((((vt0.c1)AND(vt0.c1)))AND(x'')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE SQLITE_SOURCE_ID() END) ORDER BY (vt0.c1 IN ()), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((x'') ISNULL) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN ((((vt0.c1)AND(vt0.c1)))AND(x'')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ()), NULL  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((x'') ISNULL) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN ((((vt0.c1)AND(vt0.c1)))AND(x'')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE SQLITE_SOURCE_ID() END) ORDER BY (vt0.c1 IN ()), NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((x'') ISNULL) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN ((((vt0.c1)AND(vt0.c1)))AND(x'')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ()), NULL  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((x'') ISNULL) WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c1) NOTNULL) WHEN ((((vt0.c1)AND(vt0.c1)))AND(x'')) THEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END ELSE SQLITE_SOURCE_ID() END) ORDER BY (vt0.c1 IN ()), NULL  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c0)AND(vt0.c1)) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.7756153472711642) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c0)AND(vt0.c1)) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.7756153472711642) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c0)AND(vt0.c1)) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.7756153472711642) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c0)AND(vt0.c1)) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.7756153472711642) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END THEN ((vt0.c0)AND(vt0.c1)) ELSE LIKELIHOOD(DISTINCT vt0.c0, 0.7756153472711642) END);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c1)))OR(json_extract(vt0.c0, vt0.c1))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c1)))OR(json_extract(vt0.c0, vt0.c1))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((+ (vt0.c1)))OR(json_extract(vt0.c0, vt0.c1))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (vt0.c1)))OR(json_extract(vt0.c0, vt0.c1))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((0.1823002225572492) BETWEEN (vt0.c1) AND (x'f54ed7ea')) IN ())) ORDER BY (- ((~ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.1823002225572492) BETWEEN (vt0.c1) AND (x'f54ed7ea')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- ((~ (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((0.1823002225572492) BETWEEN (vt0.c1) AND (x'f54ed7ea')) IN ())) ORDER BY (- ((~ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.1823002225572492) BETWEEN (vt0.c1) AND (x'f54ed7ea')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (- ((~ (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((0.1823002225572492) BETWEEN (vt0.c1) AND (x'f54ed7ea')) IN ())) ORDER BY (- ((~ (vt0.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY json_insert((rt0.c2 IN (x'd565', rt0.c1)), CAST(rt0.c0 AS NUMERIC), rt0.c0, (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER), x'', ((((rt0.c0)AND('')))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY json_insert((rt0.c2 IN (x'd565', rt0.c1)), CAST(rt0.c0 AS NUMERIC), rt0.c0, (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER), x'', ((((rt0.c0)AND('')))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(rt0.c2 AS TEXT) COLLATE NOCASE) ORDER BY json_insert((rt0.c2 IN (x'd565', rt0.c1)), CAST(rt0.c0 AS NUMERIC), rt0.c0, (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER), x'', ((((rt0.c0)AND('')))AND(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY json_insert((rt0.c2 IN (x'd565', rt0.c1)), CAST(rt0.c0 AS NUMERIC), rt0.c0, (rt0.c1 IN ()), CAST(rt0.c0 AS INTEGER), x'', ((((rt0.c0)AND('')))AND(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE DESC;
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (rt0.c2);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (((((0xffffffffc5bca0d8)>=(vt0.c1))) IS TRUE)) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT), ((((rt0.c1) IS TRUE))GLOB(LIKELY(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xffffffffc5bca0d8)>=(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT), ((((rt0.c1) IS TRUE))GLOB(LIKELY(rt0.c1)))  NULLS FIRST);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (((((0xffffffffc5bca0d8)>=(vt0.c1))) IS TRUE)) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT), ((((rt0.c1) IS TRUE))GLOB(LIKELY(rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((0xffffffffc5bca0d8)>=(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT), ((((rt0.c1) IS TRUE))GLOB(LIKELY(rt0.c1)))  NULLS FIRST);
SELECT * FROM rt0, v0 RIGHT OUTER JOIN vt0 ON CAST(vt0.c1 AS INTEGER) WHERE (((((0xffffffffc5bca0d8)>=(vt0.c1))) IS TRUE)) ORDER BY vt0.c0 DESC  NULLS FIRST, CAST((+ (v0.c0)) AS TEXT), ((((rt0.c1) IS TRUE))GLOB(LIKELY(rt0.c1)))  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (LOWER(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LOWER(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((LOWER(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (LOWER(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (- (v0.c0)) END) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) ISNULL)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (- (v0.c0)) END) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) ISNULL)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (- (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) ISNULL)  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN (- (v0.c0)) END) ORDER BY CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM;
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c1)<(rt0.c1)))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((rt0.c1)<(rt0.c1)))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c1)<(rt0.c1)))) AND (((v0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((rt0.c1)<(rt0.c1)))) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((((v0.c0)) BETWEEN ((((rt0.c1)<(rt0.c1)))) AND (((v0.c0 IN ())))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE NULL COLLATE NOCASE  WHEN ((rt0.c1)<(rt0.c1)) THEN ABS(v0.c0) WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c0 THEN (((v0.c0))<>((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE NOCASE  WHEN ((rt0.c1)<(rt0.c1)) THEN ABS(v0.c0) WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c0 THEN (((v0.c0))!=((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE NULL COLLATE NOCASE  WHEN ((rt0.c1)<(rt0.c1)) THEN ABS(v0.c0) WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c0 THEN (((v0.c0))<>((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL COLLATE NOCASE  WHEN ((rt0.c1)<(rt0.c1)) THEN ABS(v0.c0) WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c0 THEN (((v0.c0))!=((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE NULL COLLATE NOCASE  WHEN ((rt0.c1)<(rt0.c1)) THEN ABS(v0.c0) WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c2 AS TEXT) WHEN rt0.c0 THEN (((v0.c0))<>((rt0.c2))) ELSE ((rt0.c1) IS TRUE) END);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((NULL)IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((CAST(v0.c0 AS TEXT) IN (STRFTIME(rt0.c1, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS TEXT) IN (STRFTIME(rt0.c1, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((CAST(v0.c0 AS TEXT) IN (STRFTIME(rt0.c1, v0.c0, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(v0.c0 AS TEXT) IN (STRFTIME(rt0.c1, v0.c0, v0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE ((CAST(v0.c0 AS TEXT) IN (STRFTIME(rt0.c1, v0.c0, v0.c0))));
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)||(rt0.c0))) NOTNULL)) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)||(rt0.c0))) NOTNULL)) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)||(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM rt0, v0 ORDER BY v0.c0 DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c0)||(rt0.c0))) NOTNULL)) ORDER BY v0.c0 DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (rt0.c2))) ORDER BY (((NOT (rt0.c1)))||(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (rt0.c2))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((NOT (rt0.c1)))||(rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (rt0.c2))) ORDER BY (((NOT (rt0.c1)))||(rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (rt0.c2))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((NOT (rt0.c1)))||(rt0.c1))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (rt0.c2))) ORDER BY (((NOT (rt0.c1)))||(rt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (json_extract(v0.c0, ((v0.c0)<<(v0.c0)), (~ (v0.c0)), ((v0.c0)%(v0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), TRIM(DISTINCT v0.c0))) ORDER BY CAST(x'' AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(v0.c0, ((v0.c0)<<(v0.c0)), (~ (v0.c0)), ((v0.c0)%(v0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(x'' AS BLOB) ASC);
SELECT COUNT(*) FROM v0 WHERE (json_extract(v0.c0, ((v0.c0)<<(v0.c0)), (~ (v0.c0)), ((v0.c0)%(v0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), TRIM(DISTINCT v0.c0))) ORDER BY CAST(x'' AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(v0.c0, ((v0.c0)<<(v0.c0)), (~ (v0.c0)), ((v0.c0)%(v0.c0)), (((v0.c0)) NOT BETWEEN ((x'')) AND ((v0.c0))), TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM v0 ORDER BY CAST(x'' AS BLOB) ASC);
SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) NOT NULL)) ORDER BY ((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))IS NOT(((rt0.c1)AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))IS NOT(((rt0.c1)AND(rt0.c1)))));
SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) NOT NULL)) ORDER BY ((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))IS NOT(((rt0.c1)AND(rt0.c1))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0 ORDER BY ((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))IS NOT(((rt0.c1)AND(rt0.c1)))));
SELECT * FROM rt0 WHERE ((((~ (rt0.c0))) NOT NULL)) ORDER BY ((TIME(rt0.c1, rt0.c1, rt0.c1, rt0.c1, rt0.c0, rt0.c2, rt0.c0))IS NOT(((rt0.c1)AND(rt0.c1))));
SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ('' COLLATE NOCASE) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ('' COLLATE NOCASE) ORDER BY rt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (('' COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0 ORDER BY rt0.c1 DESC);
SELECT ALL * FROM rt0, v0 NOT INDEXED WHERE ('' COLLATE NOCASE) ORDER BY rt0.c1 DESC;
SELECT COUNT(*) FROM vt0 WHERE (((('-1437912147')) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((LIKELIHOOD(vt0.c1, 0.28902388041809823)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1437912147')) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((LIKELIHOOD(vt0.c1, 0.28902388041809823))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('-1437912147')) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((LIKELIHOOD(vt0.c1, 0.28902388041809823)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1437912147')) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((LIKELIHOOD(vt0.c1, 0.28902388041809823))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((('-1437912147')) BETWEEN ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))) AND ((LIKELIHOOD(vt0.c1, 0.28902388041809823)))));
SELECT ALL * FROM vt0, v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(((((((((-1838385090)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))))AND(('m遏ட' IN ()))))OR(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c1)-(vt0.c1)))AND(((v0.c0)=(vt0.c0)))) ASC  NULLS LAST, CASE ((vt0.c0)IS(v0.c0))  WHEN ((((v0.c0)AND('-1567625147')))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, '314697740';
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)OR(((((((((-1838385090)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))))AND(('m遏ட' IN ()))))OR(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)-(vt0.c1)))AND(((v0.c0)=(vt0.c0)))) ASC  NULLS LAST, CASE ((vt0.c0)IS(v0.c0))  WHEN ((((v0.c0)AND('-1567625147')))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, '314697740');
SELECT ALL * FROM vt0, v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(((((((((-1838385090)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))))AND(('m遏ட' IN ()))))OR(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c1)-(vt0.c1)))AND(((v0.c0)=(vt0.c0)))) ASC  NULLS LAST, CASE ((vt0.c0)IS(v0.c0))  WHEN ((((v0.c0)AND('-1567625147')))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, '314697740';
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE BINARY)OR(((((((((-1838385090)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))))AND(('m遏ட' IN ()))))OR(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c1)-(vt0.c1)))AND(((v0.c0)=(vt0.c0)))) ASC  NULLS LAST, CASE ((vt0.c0)IS(v0.c0))  WHEN ((((v0.c0)AND('-1567625147')))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, '314697740');
SELECT ALL * FROM vt0, v0 WHERE (((((((((v0.c0 COLLATE BINARY)OR(((((((((-1838385090)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(v0.c0)))))AND(('m遏ட' IN ()))))OR(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))))OR((vt0.c0 IN ())))) ORDER BY ((((vt0.c1)-(vt0.c1)))AND(((v0.c0)=(vt0.c0)))) ASC  NULLS LAST, CASE ((vt0.c0)IS(v0.c0))  WHEN ((((v0.c0)AND('-1567625147')))AND(vt0.c0)) THEN CAST(vt0.c0 AS REAL) ELSE CAST(vt0.c1 AS INTEGER) END  NULLS FIRST, '314697740';
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE NOCASE) ORDER BY (((rt0.c0 COLLATE BINARY))>=(((((vt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0 COLLATE BINARY))>=(((((vt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0)))))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE NOCASE) ORDER BY (((rt0.c0 COLLATE BINARY))>=(((((vt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0 COLLATE BINARY))>=(((((vt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0)))))) ASC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((vt0.c0) BETWEEN (rt0.c0) AND ('')) COLLATE NOCASE) ORDER BY (((rt0.c0 COLLATE BINARY))>=(((((vt0.c0, rt0.c1, rt0.c2, v0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c0, vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c2, rt0.c1, v0.c0)))))) ASC;
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((x'351e5458') NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'351e5458') NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((x'351e5458') NOTNULL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'351e5458') NOTNULL) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (CAST(((x'351e5458') NOTNULL) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((x'', rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c0)), rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((x'', rt0.c0, rt0.c1))==((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c0)), rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((x'', rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c0)), rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((x'', rt0.c0, rt0.c1))==((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c0)), rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) IN ((((x'', rt0.c0, rt0.c1))=((rt0.c2, rt0.c1, rt0.c0))), (+ (rt0.c0)), rt0.c0)));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((+ (((rt0.c2) NOTNULL))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ ((~ (v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY)>(((vt0.c0) BETWEEN (rt0.c0) AND (0X2448c313)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((v0.c0 COLLATE BINARY)>(((vt0.c0) BETWEEN (rt0.c0) AND (0X2448c313)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ ((~ (v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY)>(((vt0.c0) BETWEEN (rt0.c0) AND (0X2448c313)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (v0.c0))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((v0.c0 COLLATE BINARY)>(((vt0.c0) BETWEEN (rt0.c0) AND (0X2448c313)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((+ ((~ (v0.c0))))) ORDER BY ((v0.c0 COLLATE BINARY)>(((vt0.c0) BETWEEN (rt0.c0) AND (0X2448c313)))) DESC  NULLS LAST;
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((NOT (''))) AND (((rt0.c1) NOTNULL)))) ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))<((((rt0.c0)>(rt0.c1))))) ASC, ((CAST(rt0.c0 AS REAL))+(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((NOT (''))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))<((((rt0.c0)>(rt0.c1))))) ASC, ((CAST(rt0.c0 AS REAL))+(rt0.c1))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((NOT (''))) AND (((rt0.c1) NOTNULL)))) ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))<((((rt0.c0)>(rt0.c1))))) ASC, ((CAST(rt0.c0 AS REAL))+(rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((NOT (''))) AND (((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM rt0 ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))<((((rt0.c0)>(rt0.c1))))) ASC, ((CAST(rt0.c0 AS REAL))+(rt0.c1))  NULLS FIRST);
SELECT * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END) NOT BETWEEN ((NOT (''))) AND (((rt0.c1) NOTNULL)))) ORDER BY (((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1))))<((((rt0.c0)>(rt0.c1))))) ASC, ((CAST(rt0.c0 AS REAL))+(rt0.c1))  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((vt0.c0)%(v0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((vt0.c0)%(v0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((vt0.c0)%(v0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((vt0.c0)%(v0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(rt0.c2)))));
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT (((((v0.c0)OR(rt0.c1)))AND(rt0.c2))))) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END) BETWEEN (((vt0.c0)%(v0.c0))) AND (((((vt0.c0)OR(vt0.c0)))AND(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)<(vt0.c1)))AND(rt0.c2 COLLATE BINARY)))OR((- (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt0.c1)))AND(rt0.c2 COLLATE BINARY)))OR((- (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)<(vt0.c1)))AND(rt0.c2 COLLATE BINARY)))OR((- (vt0.c1))))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)<(vt0.c1)))AND(rt0.c2 COLLATE BINARY)))OR((- (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c0)<(vt0.c1)))AND(rt0.c2 COLLATE BINARY)))OR((- (vt0.c1))))) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY) ORDER BY ((HEX(v0.c0))<<((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((HEX(v0.c0))<<((NOT (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY) ORDER BY ((HEX(v0.c0))<<((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY ((HEX(v0.c0))<<((NOT (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY) ORDER BY ((HEX(v0.c0))<<((NOT (v0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 END);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN vt0.c0 END);
SELECT ALL * FROM vt0, rt0, v0 WHERE (v0.c0 COLLATE BINARY COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT));
SELECT ALL * FROM vt0, rt0, v0 WHERE (v0.c0 COLLATE BINARY COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE BINARY COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT));
SELECT ALL * FROM vt0, rt0, v0 WHERE (v0.c0 COLLATE BINARY COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS TEXT);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))<<(((vt0.c0)!=(vt0.c1))))) ORDER BY (vt0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))<<(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))<<(((vt0.c0)!=(vt0.c1))))) ORDER BY (vt0.c0 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))<<(((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0)))<<(((vt0.c0)!=(vt0.c1))))) ORDER BY (vt0.c0 IN ()) DESC;
SELECT ALL * FROM v0, vt0, rt0 WHERE ((- ((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, v0.c0)))))) ORDER BY UNLIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY UNLIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((- ((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, v0.c0)))))) ORDER BY UNLIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) DESC;
SELECT SUM(count) FROM (SELECT (((- ((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY UNLIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((- ((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c1)) AND ((rt0.c2, rt0.c0, v0.c0)))))) ORDER BY UNLIKELY(DISTINCT CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) DESC;
SELECT COUNT(*) FROM rt0, v0 WHERE (UPPER(NULL));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (UPPER(NULL));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(NULL)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (UPPER(NULL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (json(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (json(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (json(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (json(rt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (json(rt0.c0))));
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON (- (CHAR(vt0.c0))) WHERE (rt0.c2) ORDER BY IFNULL(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), UPPER(DISTINCT v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (- (CHAR(vt0.c0))) ORDER BY IFNULL(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), UPPER(DISTINCT v0.c0))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON (- (CHAR(vt0.c0))) WHERE (rt0.c2) ORDER BY IFNULL(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), UPPER(DISTINCT v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (- (CHAR(vt0.c0))) ORDER BY IFNULL(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), UPPER(DISTINCT v0.c0))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 FULL OUTER JOIN v0 ON (- (CHAR(vt0.c0))) WHERE (rt0.c2) ORDER BY IFNULL(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c1)), UPPER(DISTINCT v0.c0))  NULLS LAST;
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((v0.c0)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))IS NOT(((v0.c0)IS NOT(NULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((v0.c0)IS NOT(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS NUMERIC))IS NOT(((v0.c0)IS NOT(NULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON (- (vt0.c1 COLLATE RTRIM)) WHERE (((CAST(vt0.c0 AS NUMERIC))IS NOT(((v0.c0)IS NOT(NULL)))));
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR(vt0.c1)))-(CASE WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))-(CASE WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR(vt0.c1)))-(CASE WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY rt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))-(CASE WHEN rt0.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c0 DESC);
SELECT ALL * FROM vt0, rt0 WHERE (((((vt0.c0)OR(vt0.c1)))-(CASE WHEN rt0.c2 THEN vt0.c0 END))) ORDER BY rt0.c0 DESC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c2) ORDER BY '0.4896662911434797' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY '0.4896662911434797' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c2) ORDER BY '0.4896662911434797' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY '0.4896662911434797' DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (rt0.c2) ORDER BY '0.4896662911434797' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (((((((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (((((((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY (((((((((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt0.c0 IN ()))))OR((~ (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((640680849)))) ORDER BY ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)) COLLATE BINARY DESC, ((((0.27021801983896265)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((640680849)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)) COLLATE BINARY DESC, ((((0.27021801983896265)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((640680849)))) ORDER BY ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)) COLLATE BINARY DESC, ((((0.27021801983896265)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((640680849)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)) COLLATE BINARY DESC, ((((0.27021801983896265)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((640680849)))) ORDER BY ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(v0.c0)))OR(vt0.c1)) COLLATE BINARY DESC, ((((0.27021801983896265)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()) DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((v0.c0)+(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)+(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)+(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)+(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0)+(CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON CAST(((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)) AS TEXT) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON CAST(((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)) AS TEXT));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON CAST(((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)) AS TEXT) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON CAST(((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)) AS TEXT));
SELECT ALL * FROM rt0, vt0 INNER JOIN v0 ON CAST(((((rt0.c0)AND(vt0.c0)))AND(rt0.c1)) AS TEXT) WHERE (vt0.c0);
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON NULL WHERE ((((vt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((- (rt0.c1)), (('') ISNULL), (- (vt0.c1)))) AND (((((vt0.c1))>=((vt0.c0))), ((rt0.c0)<=(x'3311')), (NULL IN (rt0.c0, 0.8388953412078006))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((- (rt0.c1)), (('') ISNULL), (- (vt0.c1)))) AND (((((vt0.c1))>=((vt0.c0))), ((rt0.c0)<=(x'3311')), (NULL IN (rt0.c0, 0.8388953412078006)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON NULL);
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON NULL WHERE ((((vt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((- (rt0.c1)), (('') ISNULL), (- (vt0.c1)))) AND (((((vt0.c1))>=((vt0.c0))), ((rt0.c0)<=(x'3311')), (NULL IN (rt0.c0, 0.8388953412078006))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((- (rt0.c1)), (('') ISNULL), (- (vt0.c1)))) AND (((((vt0.c1))>=((vt0.c0))), ((rt0.c0)<=(x'3311')), (NULL IN (rt0.c0, 0.8388953412078006)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON NULL);
SELECT * FROM rt0 NOT INDEXED CROSS JOIN vt0 ON NULL WHERE ((((vt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN (((- (rt0.c1)), (('') ISNULL), (- (vt0.c1)))) AND (((((vt0.c1))>=((vt0.c0))), ((rt0.c0)<=(x'3311')), (NULL IN (rt0.c0, 0.8388953412078006))))));
SELECT * FROM vt0, v0 WHERE (CAST((((vt0.c1, vt0.c1, v0.c0))<((v0.c0, v0.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1, vt0.c1, v0.c0))<((v0.c0, v0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((((vt0.c1, vt0.c1, v0.c0))<((v0.c0, v0.c0, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((vt0.c1, vt0.c1, v0.c0))<((v0.c0, v0.c0, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (CAST((((vt0.c1, vt0.c1, v0.c0))<((v0.c0, v0.c0, vt0.c0))) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((CASE WHEN vt0.c1 THEN x'' END) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN x'' END) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((CASE WHEN vt0.c1 THEN x'' END) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN x'' END) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)AND(vt0.c0))) NOT BETWEEN (((vt0.c0)||(vt0.c0))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY ((CASE WHEN vt0.c1 THEN x'' END) NOT BETWEEN (((vt0.c0)/(vt0.c0))) AND (vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) IS TRUE)) NOT NULL));
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND('654013699')))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c0)))AND('654013699')))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND('654013699')))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((((((v0.c0)AND(v0.c0)))AND('654013699')))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((v0.c0)AND(v0.c0)))AND('654013699')))OR(v0.c0)))AND(v0.c0)) COLLATE BINARY);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (v0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((vt0.c0 IN (v0.c0))) BETWEEN ((NOT (vt0.c1))) AND (((v0.c0) NOT NULL))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN '-1066811637' THEN (((('-1838132405')OR(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) ORDER BY ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0))) NOTNULL) DESC, ((((vt0.c1)>=(vt0.c1))) NOT NULL)  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND ('753481880'))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN '-1066811637' THEN (((('-1838132405')OR(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0))) NOTNULL) DESC, ((((vt0.c1)>=(vt0.c1))) NOT NULL)  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND ('753481880'))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN '-1066811637' THEN (((('-1838132405')OR(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) ORDER BY ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0))) NOTNULL) DESC, ((((vt0.c1)>=(vt0.c1))) NOT NULL)  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND ('753481880'))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN '-1066811637' THEN (((('-1838132405')OR(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0))) NOTNULL) DESC, ((((vt0.c1)>=(vt0.c1))) NOT NULL)  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND ('753481880'))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN '-1066811637' THEN (((('-1838132405')OR(vt0.c0)))AND(vt0.c1)) ELSE CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END END) ORDER BY ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))AND(v0.c0))) NOTNULL) DESC, ((((vt0.c1)>=(vt0.c1))) NOT NULL)  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c1) AND ('753481880'))) NOTNULL)  NULLS LAST;
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))*(((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c0))*(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))*(((vt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT vt0.c0))*(((vt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))*(((vt0.c1)%(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(0.6940806207305861 AS INTEGER) AS INTEGER)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1)AND(vt0.c0)) WHEN ((vt0.c0)<(vt0.c1)) THEN (NOT (vt0.c1)) WHEN ((('-362470030'))>((vt0.c1))) THEN ((v0.c0)<(vt0.c1)) WHEN (v0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((v0.c0)IS NOT(vt0.c0)) END ASC, (((v0.c0 COLLATE RTRIM))!=((((v0.c0)<=(vt0.c1))))) DESC  NULLS FIRST, 0.6576918657598982  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.6940806207305861 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1)AND(vt0.c0)) WHEN ((vt0.c0)<(vt0.c1)) THEN (NOT (vt0.c1)) WHEN ((('-362470030'))>((vt0.c1))) THEN ((v0.c0)<(vt0.c1)) WHEN (v0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((v0.c0)IS NOT(vt0.c0)) END ASC, (((v0.c0 COLLATE RTRIM))!=((((v0.c0)<=(vt0.c1))))) DESC  NULLS FIRST, 0.6576918657598982  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(0.6940806207305861 AS INTEGER) AS INTEGER)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1)AND(vt0.c0)) WHEN ((vt0.c0)<(vt0.c1)) THEN (NOT (vt0.c1)) WHEN ((('-362470030'))>((vt0.c1))) THEN ((v0.c0)<(vt0.c1)) WHEN (v0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((v0.c0)IS NOT(vt0.c0)) END ASC, (((v0.c0 COLLATE RTRIM))!=((((v0.c0)<=(vt0.c1))))) DESC  NULLS FIRST, 0.6576918657598982  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(0.6940806207305861 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1)AND(vt0.c0)) WHEN ((vt0.c0)<(vt0.c1)) THEN (NOT (vt0.c1)) WHEN ((('-362470030'))>((vt0.c1))) THEN ((v0.c0)<(vt0.c1)) WHEN (v0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((v0.c0)IS NOT(vt0.c0)) END ASC, (((v0.c0 COLLATE RTRIM))!=((((v0.c0)<=(vt0.c1))))) DESC  NULLS FIRST, 0.6576918657598982  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(CAST(0.6940806207305861 AS INTEGER) AS INTEGER)) ORDER BY CASE WHEN (+ (vt0.c0)) THEN ((vt0.c1)AND(vt0.c0)) WHEN ((vt0.c0)<(vt0.c1)) THEN (NOT (vt0.c1)) WHEN ((('-362470030'))>((vt0.c1))) THEN ((v0.c0)<(vt0.c1)) WHEN (v0.c0 IN ()) THEN ((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)) WHEN ((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((v0.c0)IS NOT(vt0.c0)) END ASC, (((v0.c0 COLLATE RTRIM))!=((((v0.c0)<=(vt0.c1))))) DESC  NULLS FIRST, 0.6576918657598982  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN x'02a882ba' THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN x'02a882ba' THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN x'02a882ba' THEN vt0.c0 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN x'02a882ba' THEN vt0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN x'02a882ba' THEN vt0.c0 ELSE vt0.c1 END END);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c0 AS REAL));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN '0.5592192736110176' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN v0.c0 ELSE 0.7673382295662238 END)*(((vt0.c1)|(vt0.c1)))) WHERE (((((((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))AND('+&_a o(')))OR(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))AND('+&_a o(')))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN '0.5592192736110176' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN v0.c0 ELSE 0.7673382295662238 END)*(((vt0.c1)|(vt0.c1)))));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN '0.5592192736110176' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN v0.c0 ELSE 0.7673382295662238 END)*(((vt0.c1)|(vt0.c1)))) WHERE (((((((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))AND('+&_a o(')))OR(v0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))AND('+&_a o(')))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN '0.5592192736110176' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN v0.c0 ELSE 0.7673382295662238 END)*(((vt0.c1)|(vt0.c1)))));
SELECT COUNT(*) FROM rt0, v0 LEFT OUTER JOIN vt0 ON ((CASE vt0.c1  WHEN '0.5592192736110176' THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN NULL THEN v0.c0 ELSE 0.7673382295662238 END)*(((vt0.c1)|(vt0.c1)))) WHERE (((((((((((v0.c0)OR(v0.c0)))OR(rt0.c2)))AND('+&_a o(')))OR(v0.c0))) IS TRUE));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((json_array_length(v0.c0, rt0.c2)) BETWEEN (vt0.c1 COLLATE BINARY) AND (((rt0.c2)<=(vt0.c1))))) ORDER BY (((rt0.c0)&(vt0.c0)) IN ()) DESC  NULLS FIRST, UNLIKELY((rt0.c0 IN ())) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(v0.c0, rt0.c2)) BETWEEN (vt0.c1 COLLATE BINARY) AND (((rt0.c2)<=(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0)&(vt0.c0)) IN ()) DESC  NULLS FIRST, UNLIKELY((rt0.c0 IN ())) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND (((rt0.c1 IN ())))));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (((json_array_length(v0.c0, rt0.c2)) BETWEEN (vt0.c1 COLLATE BINARY) AND (((rt0.c2)<=(vt0.c1))))) ORDER BY (((rt0.c0)&(vt0.c0)) IN ()) DESC  NULLS FIRST, UNLIKELY((rt0.c0 IN ())) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND (((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((json_array_length(v0.c0, rt0.c2)) BETWEEN (vt0.c1 COLLATE BINARY) AND (((rt0.c2)<=(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY (((rt0.c0)&(vt0.c0)) IN ()) DESC  NULLS FIRST, UNLIKELY((rt0.c0 IN ())) ASC  NULLS LAST, (((vt0.c1)) NOT BETWEEN ((SQLITE_VERSION())) AND (((rt0.c1 IN ())))));
SELECT * FROM v0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(NULL AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(NULL AS TEXT));
SELECT * FROM rt0, v0, vt0 WHERE (((LOWER(rt0.c1))IS((((vt0.c1))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c1))IS((((vt0.c1))<((vt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((LOWER(rt0.c1))IS((((vt0.c1))<((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ((((LOWER(rt0.c1))IS((((vt0.c1))<((vt0.c1)))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((LOWER(rt0.c1))IS((((vt0.c1))<((vt0.c1))))));
SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON x'12de' WHERE ((((((((((~ (v0.c0)))OR(TRIM(DISTINCT rt0.c2, rt0.c2))))OR('1250848928')))OR(v0.c0)))AND(rt0.c1))) ORDER BY CHAR(((((((((rt0.c1)AND(0.6117613695874343)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (((1.153244725E9))<=((vt0.c1))), CHAR(vt0.c0, vt0.c1, vt0.c0));
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c0)))OR(TRIM(DISTINCT rt0.c2, rt0.c2))))OR('1250848928')))OR(v0.c0)))AND(rt0.c1))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON x'12de' ORDER BY CHAR(((((((((rt0.c1)AND(0.6117613695874343)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (((1.153244725E9))<=((vt0.c1))), CHAR(vt0.c0, vt0.c1, vt0.c0)));
SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON x'12de' WHERE ((((((((((~ (v0.c0)))OR(TRIM(DISTINCT rt0.c2, rt0.c2))))OR('1250848928')))OR(v0.c0)))AND(rt0.c1))) ORDER BY CHAR(((((((((rt0.c1)AND(0.6117613695874343)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (((1.153244725E9))<=((vt0.c1))), CHAR(vt0.c0, vt0.c1, vt0.c0));
SELECT SUM(count) FROM (SELECT (((((((((((~ (v0.c0)))OR(TRIM(DISTINCT rt0.c2, rt0.c2))))OR('1250848928')))OR(v0.c0)))AND(rt0.c1))) IS TRUE)  as count FROM vt0, v0 CROSS JOIN rt0 ON x'12de' ORDER BY CHAR(((((((((rt0.c1)AND(0.6117613695874343)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (((1.153244725E9))<=((vt0.c1))), CHAR(vt0.c0, vt0.c1, vt0.c0)));
SELECT ALL * FROM vt0, v0 CROSS JOIN rt0 ON x'12de' WHERE ((((((((((~ (v0.c0)))OR(TRIM(DISTINCT rt0.c2, rt0.c2))))OR('1250848928')))OR(v0.c0)))AND(rt0.c1))) ORDER BY CHAR(((((((((rt0.c1)AND(0.6117613695874343)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c0)), (((1.153244725E9))<=((vt0.c1))), CHAR(vt0.c0, vt0.c1, vt0.c0));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)*(((v0.c0)%(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)*(((v0.c0)%(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)*(((v0.c0)%(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)*(((v0.c0)%(NULL))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)*(((v0.c0)%(NULL)))));
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((NOT (vt0.c0))) IS TRUE));
SELECT COUNT(*) FROM v0, vt0 WHERE ((('gUXPo꣜\B') NOT NULL)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((('gUXPo꣜\B') NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((('gUXPo꣜\B') NOT NULL)) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT (((('gUXPo꣜\B') NOT NULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((('gUXPo꣜\B') NOT NULL)) ORDER BY x'' DESC;
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c0)AND(vt0.c1)))AND(rt0.c2)))-(((rt0.c2)||(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c1)))AND(rt0.c2)))-(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c0)AND(vt0.c1)))AND(rt0.c2)))-(((rt0.c2)||(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c1)))AND(rt0.c2)))-(((rt0.c2)||(rt0.c1))))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (((((((v0.c0)AND(vt0.c1)))AND(rt0.c2)))-(((rt0.c2)||(rt0.c1)))));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((vt0.c1)<>(vt0.c0))) BETWEEN (ABS(rt0.c1)) AND ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1)-(rt0.c2)) IN ((vt0.c1 IN ()))) WHERE (CAST(((rt0.c0)<<('-1793580025')) AS BLOB)) ORDER BY ((rt0.c1)<(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<('-1793580025')) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((vt0.c1)<>(vt0.c0))) BETWEEN (ABS(rt0.c1)) AND ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1)-(rt0.c2)) IN ((vt0.c1 IN ()))) ORDER BY ((rt0.c1)<(rt0.c0)));
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON ((((vt0.c1)<>(vt0.c0))) BETWEEN (ABS(rt0.c1)) AND ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1)-(rt0.c2)) IN ((vt0.c1 IN ()))) WHERE (CAST(((rt0.c0)<<('-1793580025')) AS BLOB)) ORDER BY ((rt0.c1)<(rt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)<<('-1793580025')) AS BLOB)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((vt0.c1)<>(vt0.c0))) BETWEEN (ABS(rt0.c1)) AND ((~ (v0.c0)))) RIGHT OUTER JOIN vt0 ON (((rt0.c1)-(rt0.c2)) IN ((vt0.c1 IN ()))) ORDER BY ((rt0.c1)<(rt0.c0)));
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c2))<=((rt0.c1))))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c0)))))OR((((0.3103553107707614))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2))<=((rt0.c1))))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c0)))))OR((((0.3103553107707614))<((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c2))<=((rt0.c1))))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c0)))))OR((((0.3103553107707614))<((rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c2))<=((rt0.c1))))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c0)))))OR((((0.3103553107707614))<((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((((((((rt0.c2))<=((rt0.c1))))OR(rt0.c0)))OR(((rt0.c0)AND(rt0.c2)))))OR(((rt0.c2)LIKE(rt0.c0)))))OR((((0.3103553107707614))<((rt0.c2))))));
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN ('-1905638573') AND (vt0.c1))))) ORDER BY CAST(((vt0.c0)|(vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN ('-1905638573') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)|(vt0.c1)) AS BLOB)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN ('-1905638573') AND (vt0.c1))))) ORDER BY CAST(((vt0.c0)|(vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN ('-1905638573') AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)|(vt0.c1)) AS BLOB)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN ('-1905638573') AND (vt0.c1))))) ORDER BY CAST(((vt0.c0)|(vt0.c1)) AS BLOB)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)*(vt0.c0))))) ORDER BY 0Xfffffffff08d92d1 ASC  NULLS FIRST, (((((vt0.c1, vt0.c1, NULL))>(('-1437912147', vt0.c1, vt0.c1)))) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (((vt0.c1)AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff08d92d1 ASC  NULLS FIRST, (((((vt0.c1, vt0.c1, NULL))>(('-1437912147', vt0.c1, vt0.c1)))) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (((vt0.c1)AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)*(vt0.c0))))) ORDER BY 0Xfffffffff08d92d1 ASC  NULLS FIRST, (((((vt0.c1, vt0.c1, NULL))>(('-1437912147', vt0.c1, vt0.c1)))) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (((vt0.c1)AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffff08d92d1 ASC  NULLS FIRST, (((((vt0.c1, vt0.c1, NULL))>(('-1437912147', vt0.c1, vt0.c1)))) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (((vt0.c1)AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1 COLLATE RTRIM)AND(CAST(vt0.c0 AS TEXT))))OR(((vt0.c0)*(vt0.c0))))) ORDER BY 0Xfffffffff08d92d1 ASC  NULLS FIRST, (((((vt0.c1, vt0.c1, NULL))>(('-1437912147', vt0.c1, vt0.c1)))) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, vt0.c1)))) AND (((vt0.c1)AND(vt0.c1))));
SELECT ALL * FROM rt0 WHERE ((((0.7926077093415711 IN (x'')))+(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((0.7926077093415711 IN (x'')))+(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0.7926077093415711 IN (x'')))+(rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((0.7926077093415711 IN (x'')))+(rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((0.7926077093415711 IN (x'')))+(rt0.c1 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0 WHERE (((NULL COLLATE BINARY)<>(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY)<>(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((NULL COLLATE BINARY)<>(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL COLLATE BINARY)<>(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((NULL COLLATE BINARY)<>(CAST(v0.c0 AS TEXT))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((-726176540 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-726176540 IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((-726176540 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((-726176540 IN ())) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((-726176540 IN ()));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((NOT ((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT '>', (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT '>', (- (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT '>', (- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT '>', (- (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (COALESCE(DISTINCT '>', (- (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((- (NULL)))>>((~ (vt0.c0))))) ORDER BY (vt0.c1 COLLATE BINARY IN ()) DESC, CASE '흡]'  WHEN CAST(v0.c0 AS INTEGER) THEN NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL)))>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()) DESC, CASE '흡]'  WHEN CAST(v0.c0 AS INTEGER) THEN NULL END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((- (NULL)))>>((~ (vt0.c0))))) ORDER BY (vt0.c1 COLLATE BINARY IN ()) DESC, CASE '흡]'  WHEN CAST(v0.c0 AS INTEGER) THEN NULL END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL)))>>((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY (vt0.c1 COLLATE BINARY IN ()) DESC, CASE '흡]'  WHEN CAST(v0.c0 AS INTEGER) THEN NULL END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE ((((- (NULL)))>>((~ (vt0.c0))))) ORDER BY (vt0.c1 COLLATE BINARY IN ()) DESC, CASE '흡]'  WHEN CAST(v0.c0 AS INTEGER) THEN NULL END ASC  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c0))=((rt0.c0))) END) ORDER BY rt0.c2 ASC  NULLS LAST, ((((rt0.c1)=(v0.c0))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(x'')))OR(x'')))AND(v0.c0))) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT (rt0.c2 IN (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c0))=((rt0.c0))) END) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST, ((((rt0.c1)==(v0.c0))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(x'')))OR(x'')))AND(v0.c0))) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT (rt0.c2 IN (rt0.c0))) DESC);
SELECT * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c0))=((rt0.c0))) END) ORDER BY rt0.c2 ASC  NULLS LAST, ((((rt0.c1)=(v0.c0))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(x'')))OR(x'')))AND(v0.c0))) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT (rt0.c2 IN (rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c0))=((rt0.c0))) END) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c2 ASC  NULLS LAST, ((((rt0.c1)==(v0.c0))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(x'')))OR(x'')))AND(v0.c0))) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT (rt0.c2 IN (rt0.c0))) DESC);
SELECT * FROM v0, rt0 WHERE (CASE WHEN ((rt0.c1) IS FALSE) THEN (((rt0.c0))=((rt0.c0))) END) ORDER BY rt0.c2 ASC  NULLS LAST, ((((rt0.c1)=(v0.c0))) NOT BETWEEN (((((((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR(x'')))OR(x'')))AND(v0.c0))) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT (rt0.c2 IN (rt0.c0))) DESC;
SELECT ALL * FROM v0 WHERE ((~ ('1268619987')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('1268619987'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ ('1268619987')));
SELECT SUM(count) FROM (SELECT ALL (((~ ('1268619987'))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((~ ('1268619987')));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((x'')>(v0.c0)) AS BLOB) WHERE (CASE ((x'') BETWEEN (v0.c0) AND (vt0.c0))  WHEN v0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('࿓g*{'))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'') BETWEEN (v0.c0) AND (vt0.c0))  WHEN v0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('࿓g*{'))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(((x'')>(v0.c0)) AS BLOB));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((x'')>(v0.c0)) AS BLOB) WHERE (CASE ((x'') BETWEEN (v0.c0) AND (vt0.c0))  WHEN v0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('࿓g*{'))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((x'') BETWEEN (v0.c0) AND (vt0.c0))  WHEN v0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('࿓g*{'))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(((x'')>(v0.c0)) AS BLOB));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON CAST(((x'')>(v0.c0)) AS BLOB) WHERE (CASE ((x'') BETWEEN (v0.c0) AND (vt0.c0))  WHEN v0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND (('࿓g*{'))) END);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c1)&(vt0.c0)), 0.26863506818663696));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c1)&(vt0.c0)), 0.26863506818663696)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c1)&(vt0.c0)), 0.26863506818663696));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((vt0.c1)&(vt0.c0)), 0.26863506818663696)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c1)&(vt0.c0)), 0.26863506818663696));
SELECT * FROM rt0, v0, vt0 NOT INDEXED WHERE ((((rt0.c1, v0.c0, NULL)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END, rt0.c2, (rt0.c1 IN (v0.c0, rt0.c1)))) AND (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1))), ((rt0.c0) IS FALSE), ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, v0.c0, NULL)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END, rt0.c2, (rt0.c1 IN (v0.c0, rt0.c1)))) AND (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1))), ((rt0.c0) IS FALSE), ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 NOT INDEXED WHERE ((((rt0.c1, v0.c0, NULL)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END, rt0.c2, (rt0.c1 IN (v0.c0, rt0.c1)))) AND (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1))), ((rt0.c0) IS FALSE), ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, v0.c0, NULL)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END, rt0.c2, (rt0.c1 IN (v0.c0, rt0.c1)))) AND (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1))), ((rt0.c0) IS FALSE), ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 NOT INDEXED WHERE ((((rt0.c1, v0.c0, NULL)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c2 THEN vt0.c1 ELSE vt0.c0 END, rt0.c2, (rt0.c1 IN (v0.c0, rt0.c1)))) AND (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((vt0.c1, rt0.c2, rt0.c0)) AND ((rt0.c2, rt0.c0, vt0.c1))), ((rt0.c0) IS FALSE), ((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))))) ORDER BY ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c0)))OR(vt0.c1)))OR(rt0.c0)) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((rt0.c0 IN ())) ORDER BY (NOT (((x'') IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (((x'') IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((rt0.c0 IN ())) ORDER BY (NOT (((x'') IS FALSE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ())) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY (NOT (((x'') IS FALSE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE ((rt0.c0 IN ())) ORDER BY (NOT (((x'') IS FALSE))) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((LOWER(rt0.c2))|(((vt0.c0)=(vt0.c0))))) ORDER BY ((v0.c0)<(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2))|(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c0)<(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((LOWER(rt0.c2))|(((vt0.c0)=(vt0.c0))))) ORDER BY ((v0.c0)<(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(rt0.c2))|(((vt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((v0.c0)<(vt0.c0)) COLLATE NOCASE DESC);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((LOWER(rt0.c2))|(((vt0.c0)=(vt0.c0))))) ORDER BY ((v0.c0)<(vt0.c0)) COLLATE NOCASE DESC;
SELECT * FROM v0 WHERE ((((((('#Ql')AND(v0.c0)))AND(v0.c0)))=(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((('#Ql')AND(v0.c0)))AND(v0.c0)))==(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((('#Ql')AND(v0.c0)))AND(v0.c0)))=(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((('#Ql')AND(v0.c0)))AND(v0.c0)))==(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((('#Ql')AND(v0.c0)))AND(v0.c0)))=(v0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (x'9a49') ORDER BY ((((vt0.c1)-(vt0.c0)))<((((0.8388953412078006, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, x'8a3f', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'9a49') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c0)))<((((0.8388953412078006, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, x'8a3f', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'9a49') ORDER BY ((((vt0.c1)-(vt0.c0)))<((((0.8388953412078006, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, x'8a3f', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'9a49') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)-(vt0.c0)))<((((0.8388953412078006, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, x'8a3f', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (x'9a49') ORDER BY ((((vt0.c1)-(vt0.c0)))<((((0.8388953412078006, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, x'8a3f', vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- (NULL))) ORDER BY '''OUR08\n'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY '''OUR08\n'  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- (NULL))) ORDER BY '''OUR08\n'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY '''OUR08\n'  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE ((- (NULL))) ORDER BY '''OUR08\n'  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST((('608748307')|(rt0.c2)) AS BLOB) RIGHT OUTER JOIN vt0 ON (('K')-(UPPER(rt0.c2))) WHERE (((((((((TIME(rt0.c2, vt0.c0, rt0.c1, vt0.c0, rt0.c1))OR((NOT (v0.c0)))))AND((v0.c0 IN (vt0.c0)))))AND((rt0.c2 IN (vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((x'1326') IS TRUE))) AND ((UPPER(v0.c0)))) DESC  NULLS LAST, ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((rt0.c1))=((rt0.c0))))), CAST(((('-593688734')) NOT BETWEEN ((rt0.c1)) AND ((0.6719555947122501))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((TIME(rt0.c2, vt0.c0, rt0.c1, vt0.c0, rt0.c1))OR((NOT (v0.c0)))))AND((v0.c0 IN (vt0.c0)))))AND((rt0.c2 IN (vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST((('608748307')|(rt0.c2)) AS BLOB) RIGHT OUTER JOIN vt0 ON (('K')-(UPPER(rt0.c2))) ORDER BY (((v0.c0)) NOT BETWEEN ((((x'1326') IS TRUE))) AND ((UPPER(v0.c0)))) DESC  NULLS LAST, ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((rt0.c1))=((rt0.c0))))), CAST(((('-593688734')) NOT BETWEEN ((rt0.c1)) AND ((0.6719555947122501))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST((('608748307')|(rt0.c2)) AS BLOB) RIGHT OUTER JOIN vt0 ON (('K')-(UPPER(rt0.c2))) WHERE (((((((((TIME(rt0.c2, vt0.c0, rt0.c1, vt0.c0, rt0.c1))OR((NOT (v0.c0)))))AND((v0.c0 IN (vt0.c0)))))AND((rt0.c2 IN (vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((x'1326') IS TRUE))) AND ((UPPER(v0.c0)))) DESC  NULLS LAST, ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((rt0.c1))=((rt0.c0))))), CAST(((('-593688734')) NOT BETWEEN ((rt0.c1)) AND ((0.6719555947122501))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((TIME(rt0.c2, vt0.c0, rt0.c1, vt0.c0, rt0.c1))OR((NOT (v0.c0)))))AND((v0.c0 IN (vt0.c0)))))AND((rt0.c2 IN (vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON CAST((('608748307')|(rt0.c2)) AS BLOB) RIGHT OUTER JOIN vt0 ON (('K')-(UPPER(rt0.c2))) ORDER BY (((v0.c0)) NOT BETWEEN ((((x'1326') IS TRUE))) AND ((UPPER(v0.c0)))) DESC  NULLS LAST, ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((rt0.c1))=((rt0.c0))))), CAST(((('-593688734')) NOT BETWEEN ((rt0.c1)) AND ((0.6719555947122501))) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN v0 ON CAST((('608748307')|(rt0.c2)) AS BLOB) RIGHT OUTER JOIN vt0 ON (('K')-(UPPER(rt0.c2))) WHERE (((((((((TIME(rt0.c2, vt0.c0, rt0.c1, vt0.c0, rt0.c1))OR((NOT (v0.c0)))))AND((v0.c0 IN (vt0.c0)))))AND((rt0.c2 IN (vt0.c1)))))OR(((rt0.c1)GLOB(rt0.c0))))) ORDER BY (((v0.c0)) NOT BETWEEN ((((x'1326') IS TRUE))) AND ((UPPER(v0.c0)))) DESC  NULLS LAST, ((((v0.c0)<<(v0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((((rt0.c1))=((rt0.c0))))), CAST(((('-593688734')) NOT BETWEEN ((rt0.c1)) AND ((0.6719555947122501))) AS NUMERIC)  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ORDER BY '-1642693202' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY '-1642693202' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ORDER BY '-1642693202' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY '-1642693202' DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) NOT NULL)) ORDER BY '-1642693202' DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY ((((((((x'')OR(CAST('' AS REAL))))OR(CAST(vt0.c0 AS REAL))))OR((((NULL, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c1, vt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1830092111'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((x'')OR(CAST('' AS REAL))))OR(CAST(vt0.c0 AS REAL))))OR((((NULL, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c1, vt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1830092111'))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY ((((((((x'')OR(CAST('' AS REAL))))OR(CAST(vt0.c0 AS REAL))))OR((((NULL, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c1, vt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1830092111'))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((x'')OR(CAST('' AS REAL))))OR(CAST(vt0.c0 AS REAL))))OR((((NULL, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c1, vt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1830092111'))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY ((((((((x'')OR(CAST('' AS REAL))))OR(CAST(vt0.c0 AS REAL))))OR((((NULL, vt0.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c1, vt0.c1, vt0.c1))))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1830092111'))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1 IN ()), CAST(vt0.c0 AS TEXT), (- (vt0.c1))))>(((~ (rt0.c2)), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0) IS FALSE)))>=((CAST(rt0.c2 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ()), CAST(vt0.c0 AS TEXT), (- (vt0.c1))))>(((~ (rt0.c2)), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0) IS FALSE)))>=((CAST(rt0.c2 AS REAL)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1 IN ()), CAST(vt0.c0 AS TEXT), (- (vt0.c1))))>(((~ (rt0.c2)), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0) IS FALSE)))>=((CAST(rt0.c2 AS REAL)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN ()), CAST(vt0.c0 AS TEXT), (- (vt0.c1))))>(((~ (rt0.c2)), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((((vt0.c0) IS FALSE)))>=((CAST(rt0.c2 AS REAL)))) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c1 IN ()), CAST(vt0.c0 AS TEXT), (- (vt0.c1))))>(((~ (rt0.c2)), CASE rt0.c0  WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c1 END, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY (((((vt0.c0) IS FALSE)))>=((CAST(rt0.c2 AS REAL)))) DESC;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS INTEGER))|(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), CAST(v0.c0 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY ORDER BY ((CAST(vt0.c0 AS INTEGER))|(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), CAST(v0.c0 AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS INTEGER))|(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), CAST(v0.c0 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY ORDER BY ((CAST(vt0.c0 AS INTEGER))|(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), CAST(v0.c0 AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((vt0.c1)OR(vt0.c0)) COLLATE BINARY WHERE (((vt0.c1 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS INTEGER))|(CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), CAST(v0.c0 AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((0.04360792119023282 IN (rt0.c2))) NOTNULL) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c1)OR(v0.c0)) ELSE ((rt0.c2)-(rt0.c1)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((0.04360792119023282 IN (rt0.c2))) NOTNULL) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c1)OR(v0.c0)) ELSE ((rt0.c2)-(rt0.c1)) END);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((0.04360792119023282 IN (rt0.c2))) NOTNULL) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c1)OR(v0.c0)) ELSE ((rt0.c2)-(rt0.c1)) END WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON (((0.04360792119023282 IN (rt0.c2))) NOTNULL) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c1)OR(v0.c0)) ELSE ((rt0.c2)-(rt0.c1)) END);
SELECT COUNT(*) FROM v0 INNER JOIN rt0 ON (((0.04360792119023282 IN (rt0.c2))) NOTNULL) FULL OUTER JOIN vt0 ON CASE WHEN ((rt0.c0)>(rt0.c1)) THEN ((rt0.c1)OR(v0.c0)) ELSE ((rt0.c2)-(rt0.c1)) END WHERE (NULL);
SELECT ALL * FROM rt0, vt0, v0 WHERE (TYPEOF(CAST(rt0.c2 AS TEXT))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (TYPEOF(CAST(rt0.c2 AS TEXT))) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(CAST(rt0.c2 AS TEXT))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY vt0.c1 DESC);
SELECT ALL * FROM rt0, vt0, v0 WHERE (TYPEOF(CAST(rt0.c2 AS TEXT))) ORDER BY vt0.c1 DESC;
SELECT * FROM rt0, v0, vt0 WHERE (((LTRIM(v0.c0, vt0.c1))<((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(v0.c0, vt0.c1))<((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((LTRIM(v0.c0, vt0.c1))<((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(v0.c0, vt0.c1))<((~ (rt0.c2))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((LTRIM(v0.c0, vt0.c1))<((~ (rt0.c2)))));
SELECT * FROM v0, rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) ORDER BY ((((rt0.c1)/('1757419798')))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c1)/('1757419798')))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)))));
SELECT * FROM v0, rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) ORDER BY ((((rt0.c1)/('1757419798')))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((rt0.c1)/('1757419798')))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1)))));
SELECT * FROM v0, rt0, vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) IS FALSE)) ORDER BY ((((rt0.c1)/('1757419798')))OR(((((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(vt0.c1))));
SELECT ALL * FROM rt0 WHERE (x'3efb') ORDER BY ((rt0.c0)+(((rt0.c2)-(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'3efb') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)+(((rt0.c2)-(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'3efb') ORDER BY ((rt0.c0)+(((rt0.c2)-(rt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'3efb') IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0)+(((rt0.c2)-(rt0.c0))))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (x'3efb') ORDER BY ((rt0.c0)+(((rt0.c2)-(rt0.c0))))  NULLS LAST;
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)OR(rt0.c0)))OR(rt0.c1))) IS TRUE) WHERE (((((((rt0.c1) ISNULL))AND(NULL)))OR('sKCv%ꡛ|')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))AND(NULL)))OR('sKCv%ꡛ|'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)OR(rt0.c0)))OR(rt0.c1))) IS TRUE));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)OR(rt0.c0)))OR(rt0.c1))) IS TRUE) WHERE (((((((rt0.c1) ISNULL))AND(NULL)))OR('sKCv%ꡛ|')));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) ISNULL))AND(NULL)))OR('sKCv%ꡛ|'))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)OR(rt0.c0)))OR(rt0.c1))) IS TRUE));
SELECT ALL * FROM rt0 FULL OUTER JOIN v0 ON ((((((v0.c0)OR(rt0.c0)))OR(rt0.c1))) IS TRUE) WHERE (((((((rt0.c1) ISNULL))AND(NULL)))OR('sKCv%ꡛ|')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (ABS(vt0.c0) COLLATE BINARY);
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((vt0.c1)*(v0.c0)) AS BLOB) WHERE (CASE WHEN ((v0.c0)IS NOT(NULL)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) ELSE LIKE(vt0.c0, vt0.c0) END) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END ASC  NULLS FIRST, (+ (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)IS NOT(NULL)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) ELSE LIKE(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((vt0.c1)*(v0.c0)) AS BLOB) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END ASC  NULLS FIRST, (+ (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((vt0.c1)*(v0.c0)) AS BLOB) WHERE (CASE WHEN ((v0.c0)IS NOT(NULL)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) ELSE LIKE(vt0.c0, vt0.c0) END) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END ASC  NULLS FIRST, (+ (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((v0.c0)IS NOT(NULL)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) ELSE LIKE(vt0.c0, vt0.c0) END) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON CAST(((vt0.c1)*(v0.c0)) AS BLOB) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END ASC  NULLS FIRST, (+ (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST);
SELECT * FROM v0 INNER JOIN vt0 ON CAST(((vt0.c1)*(v0.c0)) AS BLOB) WHERE (CASE WHEN ((v0.c0)IS NOT(NULL)) THEN ((((vt0.c0)OR(v0.c0)))AND(v0.c0)) ELSE LIKE(vt0.c0, vt0.c0) END) ORDER BY CASE WHEN ((vt0.c0)<(vt0.c0)) THEN CAST(v0.c0 AS TEXT) END ASC  NULLS FIRST, (+ (CAST(v0.c0 AS BLOB))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ASC, ((NULL)||((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS NUMERIC)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ASC, ((NULL)||((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ASC, ((NULL)||((~ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(v0.c0 AS NUMERIC)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END) IS TRUE)  as count FROM vt0, v0 NOT INDEXED ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ASC, ((NULL)||((~ (vt0.c0)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE CAST(v0.c0 AS NUMERIC)  WHEN ((v0.c0) ISNULL) THEN CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END END) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ASC, ((NULL)||((~ (vt0.c0))));
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ((((v0.c0))<((rt0.c0)))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR(((v0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ((((v0.c0))<((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR(((v0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ((((v0.c0))<((rt0.c0)))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR(((v0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ((((v0.c0))<((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0, v0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR(((v0.c0)/(vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0, v0 WHERE (((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) IN ((((v0.c0))<((rt0.c0)))))) ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)))OR(((v0.c0)/(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((- ('4V*'))) ORDER BY ((ABS(v0.c0)) ISNULL) ASC, (('0.5592192736110176')/(ABS(0.1359974754310398))) ASC;
SELECT SUM(count) FROM (SELECT (((- ('4V*'))) IS TRUE)  as count FROM v0 ORDER BY ((ABS(v0.c0)) ISNULL) ASC, (('0.5592192736110176')/(ABS(0.1359974754310398))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ('4V*'))) ORDER BY ((ABS(v0.c0)) ISNULL) ASC, (('0.5592192736110176')/(ABS(0.1359974754310398))) ASC;
SELECT SUM(count) FROM (SELECT (((- ('4V*'))) IS TRUE)  as count FROM v0 ORDER BY ((ABS(v0.c0)) ISNULL) ASC, (('0.5592192736110176')/(ABS(0.1359974754310398))) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((- ('4V*'))) ORDER BY ((ABS(v0.c0)) ISNULL) ASC, (('0.5592192736110176')/(ABS(0.1359974754310398))) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(CAST(x'2900' AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(x'2900' AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(x'2900' AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(x'2900' AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(x'2900' AS BLOB) AS NUMERIC));
SELECT * FROM rt0, vt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE (CAST('%[K)<?' AS TEXT)) ORDER BY (+ ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('%[K)<?' AS TEXT)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) ORDER BY (+ ((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM rt0, vt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE (CAST('%[K)<?' AS TEXT)) ORDER BY (+ ((rt0.c1 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('%[K)<?' AS TEXT)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) ORDER BY (+ ((rt0.c1 IN ())))  NULLS FIRST);
SELECT * FROM rt0, vt0 INNER JOIN v0 ON ((((rt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) ISNULL) WHERE (CAST('%[K)<?' AS TEXT)) ORDER BY (+ ((rt0.c1 IN ())))  NULLS FIRST;
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0)=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)=(rt0.c2))))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE ((NOT (((v0.c0)=(rt0.c2)))));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR((+ (x'9449')))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR((+ (x'9449'))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR((+ (x'9449')))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR((+ (x'9449'))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((CASE vt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)OR((+ (x'9449')))));
SELECT ALL * FROM v0, vt0, rt0 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((- (rt0.c1)));
SELECT SUM(count) FROM (SELECT (((- (rt0.c1))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE ((- (rt0.c1)));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))*(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY CAST(((vt0.c0)/(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1)))*(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)/(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))*(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY CAST(((vt0.c0)/(vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1)))*(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)/(vt0.c0)) AS REAL));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))*(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0))))) ORDER BY CAST(((vt0.c0)/(vt0.c0)) AS REAL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS INTEGER)))>(((('0.3344195006290096')IS NOT(vt0.c0)))))) ORDER BY DATE(NULLIF(rt0.c1, vt0.c1), ((rt0.c2)>(rt0.c2)), ((vt0.c1) IS TRUE), (NOT (vt0.c1)), x'' COLLATE BINARY, ((rt0.c2)!=(vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS INTEGER)))>(((('0.3344195006290096')IS NOT(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY DATE(NULLIF(rt0.c1, vt0.c1), ((rt0.c2)>(rt0.c2)), ((vt0.c1) IS TRUE), (NOT (vt0.c1)), x'' COLLATE BINARY, ((rt0.c2)!=(vt0.c0)), ((vt0.c1) NOTNULL)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS INTEGER)))>(((('0.3344195006290096')IS NOT(vt0.c0)))))) ORDER BY DATE(NULLIF(rt0.c1, vt0.c1), ((rt0.c2)>(rt0.c2)), ((vt0.c1) IS TRUE), (NOT (vt0.c1)), x'' COLLATE BINARY, ((rt0.c2)!=(vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c0 AS INTEGER)))>(((('0.3344195006290096')IS NOT(vt0.c0)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY DATE(NULLIF(rt0.c1, vt0.c1), ((rt0.c2)>(rt0.c2)), ((vt0.c1) IS TRUE), (NOT (vt0.c1)), x'' COLLATE BINARY, ((rt0.c2)!=(vt0.c0)), ((vt0.c1) NOTNULL)) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((CAST(rt0.c0 AS INTEGER)))>(((('0.3344195006290096')IS NOT(vt0.c0)))))) ORDER BY DATE(NULLIF(rt0.c1, vt0.c1), ((rt0.c2)>(rt0.c2)), ((vt0.c1) IS TRUE), (NOT (vt0.c1)), x'' COLLATE BINARY, ((rt0.c2)!=(vt0.c0)), ((vt0.c1) NOTNULL)) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (TYPEOF(DISTINCT '-1978029989'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (TYPEOF(DISTINCT '-1978029989')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (TYPEOF(DISTINCT '-1978029989'))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (TYPEOF(DISTINCT '-1978029989')))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)<(vt0.c0))) BETWEEN ((vt0.c1 IN (vt0.c0))) AND (TYPEOF(DISTINCT '-1978029989'))));
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) ISNULL)) BETWEEN (((v0.c0)IS NOT(vt0.c1))) AND ((3.50621651E8 IN ())))) ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))AND('769763370')))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(v0.c0)))|(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) BETWEEN (((v0.c0)IS NOT(vt0.c1))) AND ((3.50621651E8 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))AND('769763370')))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(v0.c0)))|(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) ISNULL)) BETWEEN (((v0.c0)IS NOT(vt0.c1))) AND ((3.50621651E8 IN ())))) ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))AND('769763370')))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(v0.c0)))|(vt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) BETWEEN (((v0.c0)IS NOT(vt0.c1))) AND ((3.50621651E8 IN ())))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))AND('769763370')))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(v0.c0)))|(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c1) ISNULL)) BETWEEN (((v0.c0)IS NOT(vt0.c1))) AND ((3.50621651E8 IN ())))) ORDER BY ((((((((((((((v0.c0)OR(vt0.c0)))AND('769763370')))OR(v0.c0)))OR(vt0.c1)))AND(vt0.c0)))AND(v0.c0)))|(vt0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>=(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)>=(vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c1))<((0.752341046708209))) THEN PRINTF(vt0.c1, rt0.c2, vt0.c0) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1))<((0.752341046708209))) THEN PRINTF(vt0.c1, rt0.c2, vt0.c0) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c1))<((0.752341046708209))) THEN PRINTF(vt0.c1, rt0.c2, vt0.c0) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((rt0.c1))<((0.752341046708209))) THEN PRINTF(vt0.c1, rt0.c2, vt0.c0) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE (CASE WHEN (((rt0.c1))<((0.752341046708209))) THEN PRINTF(vt0.c1, rt0.c2, vt0.c0) ELSE v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM rt0, v0, vt0 WHERE (json_array_length(((vt0.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0)<>(v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (json_array_length(((vt0.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt0.c0)<>(v0.c0)))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT ALL * FROM rt0, v0, vt0 WHERE (json_array_length(((vt0.c0)<>(v0.c0))));
SELECT ALL * FROM rt0, v0, vt0 WHERE (-2.89222739E8) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-2.89222739E8) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (-2.89222739E8) ORDER BY rt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-2.89222739E8) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY rt0.c0  NULLS FIRST);
SELECT ALL * FROM rt0, v0, vt0 WHERE (-2.89222739E8) ORDER BY rt0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) COLLATE NOCASE WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, vt0.c0))>=(('GSN8', vt0.c0, vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((rt0.c0)*(rt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, vt0.c0))>=(('GSN8', vt0.c0, vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) COLLATE NOCASE ORDER BY ((rt0.c0)*(rt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) COLLATE NOCASE WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, vt0.c0))>=(('GSN8', vt0.c0, vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((rt0.c0)*(rt0.c0)) COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, vt0.c0))>=(('GSN8', vt0.c0, vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) COLLATE NOCASE ORDER BY ((rt0.c0)*(rt0.c0)) COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (+ (rt0.c1)) COLLATE NOCASE WHERE (((CAST(vt0.c1 AS BLOB)) BETWEEN ((((rt0.c1, rt0.c1, vt0.c0))>=(('GSN8', vt0.c0, vt0.c1)))) AND (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY ((rt0.c0)*(rt0.c0)) COLLATE BINARY ASC;
SELECT * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END COLLATE NOCASE);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((((v0.c0)AND(vt0.c1)))AND(rt0.c1))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) BETWEEN (((((v0.c0)AND(vt0.c1)))AND(rt0.c1))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((((v0.c0)AND(vt0.c1)))AND(rt0.c1))) AND ((rt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) IS TRUE)) BETWEEN (((((v0.c0)AND(vt0.c1)))AND(rt0.c1))) AND ((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (((((rt0.c0) IS TRUE)) BETWEEN (((((v0.c0)AND(vt0.c1)))AND(rt0.c1))) AND ((rt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE (((rt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0) NOT NULL) IN ()));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))OR(((v0.c0)&(rt0.c2)))) WHERE (LIKELIHOOD((NOT (v0.c0)), 0.17691892035128853)) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((NOT (v0.c0)), 0.17691892035128853)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))OR(((v0.c0)&(rt0.c2)))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))OR(((v0.c0)&(rt0.c2)))) WHERE (LIKELIHOOD((NOT (v0.c0)), 0.17691892035128853)) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((NOT (v0.c0)), 0.17691892035128853)) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))OR(((v0.c0)&(rt0.c2)))) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c1 COLLATE RTRIM)AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END)))OR(((v0.c0)&(rt0.c2)))) WHERE (LIKELIHOOD((NOT (v0.c0)), 0.17691892035128853)) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((v0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE (CAST(NULL AS REAL));
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, vt0.c0)) ORDER BY (rt0.c2 COLLATE BINARY IN (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (((NULL, CAST(vt0.c0 AS BLOB), (rt0.c0 IN ()), ((vt0.c1) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>(((~ (rt0.c2)), ((rt0.c0)IS(0.4093713238974195)), CAST(rt0.c0 AS TEXT), (rt0.c1 IN ()), (~ (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, vt0.c0)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (rt0.c2 COLLATE BINARY IN (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (((NULL, CAST(vt0.c0 AS BLOB), (rt0.c0 IN ()), ((vt0.c1) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>(((~ (rt0.c2)), ((rt0.c0)IS(0.4093713238974195)), CAST(rt0.c0 AS TEXT), (rt0.c1 IN ()), (~ (rt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, vt0.c0)) ORDER BY (rt0.c2 COLLATE BINARY IN (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (((NULL, CAST(vt0.c0 AS BLOB), (rt0.c0 IN ()), ((vt0.c1) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>(((~ (rt0.c2)), ((rt0.c0)IS(0.4093713238974195)), CAST(rt0.c0 AS TEXT), (rt0.c1 IN ()), (~ (rt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, vt0.c0)) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (rt0.c2 COLLATE BINARY IN (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (((NULL, CAST(vt0.c0 AS BLOB), (rt0.c0 IN ()), ((vt0.c1) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>(((~ (rt0.c2)), ((rt0.c0)IS(0.4093713238974195)), CAST(rt0.c0 AS TEXT), (rt0.c1 IN ()), (~ (rt0.c1))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (IFNULL(CASE vt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END, vt0.c0)) ORDER BY (rt0.c2 COLLATE BINARY IN (rt0.c2 COLLATE BINARY)) DESC  NULLS LAST, (((NULL, CAST(vt0.c0 AS BLOB), (rt0.c0 IN ()), ((vt0.c1) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN rt0.c0 ELSE rt0.c2 END))>(((~ (rt0.c2)), ((rt0.c0)IS(0.4093713238974195)), CAST(rt0.c0 AS TEXT), (rt0.c1 IN ()), (~ (rt0.c1))))) ASC  NULLS LAST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (~ (0X3cce2c61)) THEN v0.c0 ELSE ((vt0.c0)%(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (~ (0x3cce2c61)) THEN v0.c0 ELSE ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (~ (0X3cce2c61)) THEN v0.c0 ELSE ((vt0.c0)%(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (~ (0x3cce2c61)) THEN v0.c0 ELSE ((vt0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END  WHEN (~ (0X3cce2c61)) THEN v0.c0 ELSE ((vt0.c0)%(vt0.c0)) END);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (~ (CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (~ (CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS FALSE) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)) DESC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE (((vt0.c0) IS FALSE) COLLATE NOCASE) ORDER BY (~ (CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 END)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c1)))GLOB(json_insert(v0.c0, vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c1)))GLOB(json_insert(v0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0 IN (rt0.c1)))GLOB(json_insert(v0.c0, vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c1)))GLOB(json_insert(v0.c0, vt0.c0, vt0.c1)))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)=(vt0.c1)))-(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.19373436261942711 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN SQLITE_SOURCE_ID() END DESC, ((vt0.c1 IN ()) IN ())  NULLS FIRST, ((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(vt0.c1)))-(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.19373436261942711 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN SQLITE_SOURCE_ID() END DESC, ((vt0.c1 IN ()) IN ())  NULLS FIRST, ((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1)<(vt0.c1)))));
SELECT * FROM vt0 WHERE (((((vt0.c1)=(vt0.c1)))-(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.19373436261942711 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN SQLITE_SOURCE_ID() END DESC, ((vt0.c1 IN ()) IN ())  NULLS FIRST, ((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1)<(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)=(vt0.c1)))-(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.19373436261942711 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN SQLITE_SOURCE_ID() END DESC, ((vt0.c1 IN ()) IN ())  NULLS FIRST, ((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1)<(vt0.c1)))));
SELECT * FROM vt0 WHERE (((((vt0.c1)=(vt0.c1)))-(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN 0.19373436261942711 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CASE WHEN ((vt0.c0) IS TRUE) THEN SQLITE_SOURCE_ID() END DESC, ((vt0.c1 IN ()) IN ())  NULLS FIRST, ((((((vt0.c1) IS FALSE))AND(CAST(vt0.c1 AS NUMERIC))))AND(((vt0.c1)<(vt0.c1))));
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC)) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC));
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))LIKE(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))LIKE(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))LIKE(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))LIKE(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)))LIKE(((((((((vt0.c0)OR(rt0.c2)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (UNICODE((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((+ (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (UNICODE((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE((+ (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (UNICODE((+ (v0.c0))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)OR(((vt0.c1)<=(vt0.c0))))) ORDER BY LOWER(((rt0.c1)/(vt0.c0))) ASC, ((CASE 'HF'  WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)OR(((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LOWER(((rt0.c1)/(vt0.c0))) ASC, ((CASE 'HF'  WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)OR(((vt0.c1)<=(vt0.c0))))) ORDER BY LOWER(((rt0.c1)/(vt0.c0))) ASC, ((CASE 'HF'  WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)OR(((vt0.c1)<=(vt0.c0))))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY LOWER(((rt0.c1)/(vt0.c0))) ASC, ((CASE 'HF'  WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c1 COLLATE RTRIM)OR(((vt0.c1)<=(vt0.c0))))) ORDER BY LOWER(((rt0.c1)/(vt0.c0))) ASC, ((CASE 'HF'  WHEN vt0.c1 THEN rt0.c0 ELSE vt0.c1 END) IS TRUE);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)+(((vt0.c0)>(x''))))) ORDER BY (~ (vt0.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+(((vt0.c0)>(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)+(((vt0.c0)>(x''))))) ORDER BY (~ (vt0.c1 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)+(((vt0.c0)>(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (~ (vt0.c1 COLLATE BINARY)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((NULL)+(((vt0.c0)>(x''))))) ORDER BY (~ (vt0.c1 COLLATE BINARY)) DESC;
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c0) NOT NULL))AND((v0.c0 IN ()))), CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(NULL AS BLOB) ELSE (('龔mp6RL1 ') IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))AND((v0.c0 IN ()))), CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(NULL AS BLOB) ELSE (('龔mp6RL1 ') IS FALSE) END  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((NOT (v0.c0 COLLATE BINARY))) ORDER BY ((((v0.c0) NOT NULL))AND((v0.c0 IN ()))), CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(NULL AS BLOB) ELSE (('龔mp6RL1 ') IS FALSE) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0) NOT NULL))AND((v0.c0 IN ()))), CASE WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN CAST(NULL AS BLOB) ELSE (('龔mp6RL1 ') IS FALSE) END  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON 'j' RIGHT OUTER JOIN rt0 ON (~ ((v0.c0 IN (vt0.c1, v0.c0)))) WHERE ((((rt0.c0 IN (v0.c0, rt0.c1)))LIKE(((vt0.c0) NOT NULL)))) ORDER BY CASE (- (v0.c0))  WHEN json_array_length(vt0.c1, vt0.c0) THEN CAST(vt0.c0 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c0, rt0.c1)))LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 'j' RIGHT OUTER JOIN rt0 ON (~ ((v0.c0 IN (vt0.c1, v0.c0)))) ORDER BY CASE (- (v0.c0))  WHEN json_array_length(vt0.c1, vt0.c0) THEN CAST(vt0.c0 AS REAL) END ASC);
SELECT * FROM vt0 CROSS JOIN v0 ON 'j' RIGHT OUTER JOIN rt0 ON (~ ((v0.c0 IN (vt0.c1, v0.c0)))) WHERE ((((rt0.c0 IN (v0.c0, rt0.c1)))LIKE(((vt0.c0) NOT NULL)))) ORDER BY CASE (- (v0.c0))  WHEN json_array_length(vt0.c1, vt0.c0) THEN CAST(vt0.c0 AS REAL) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (v0.c0, rt0.c1)))LIKE(((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON 'j' RIGHT OUTER JOIN rt0 ON (~ ((v0.c0 IN (vt0.c1, v0.c0)))) ORDER BY CASE (- (v0.c0))  WHEN json_array_length(vt0.c1, vt0.c0) THEN CAST(vt0.c0 AS REAL) END ASC);
SELECT * FROM vt0 CROSS JOIN v0 ON 'j' RIGHT OUTER JOIN rt0 ON (~ ((v0.c0 IN (vt0.c1, v0.c0)))) WHERE ((((rt0.c0 IN (v0.c0, rt0.c1)))LIKE(((vt0.c0) NOT NULL)))) ORDER BY CASE (- (v0.c0))  WHEN json_array_length(vt0.c1, vt0.c0) THEN CAST(vt0.c0 AS REAL) END ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN '2039289350' WHEN CAST(vt0.c1 AS REAL) THEN UNLIKELY(DISTINCT v0.c0) WHEN ((vt0.c0)>(vt0.c0)) THEN -539738717 WHEN (NOT (v0.c0)) THEN v0.c0 ELSE (v0.c0 IN ()) END) ORDER BY CAST(((v0.c0)=(vt0.c1)) AS REAL)  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (1.7976931348623157E308)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN '2039289350' WHEN CAST(vt0.c1 AS REAL) THEN UNLIKELY(DISTINCT v0.c0) WHEN ((vt0.c0)>(vt0.c0)) THEN -539738717 WHEN (NOT (v0.c0)) THEN v0.c0 ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0)=(vt0.c1)) AS REAL)  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (1.7976931348623157E308)) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN '2039289350' WHEN CAST(vt0.c1 AS REAL) THEN UNLIKELY(DISTINCT v0.c0) WHEN ((vt0.c0)>(vt0.c0)) THEN -539738717 WHEN (NOT (v0.c0)) THEN v0.c0 ELSE (v0.c0 IN ()) END) ORDER BY CAST(((v0.c0)=(vt0.c1)) AS REAL)  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (1.7976931348623157E308)) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (vt0.c0)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN '2039289350' WHEN CAST(vt0.c1 AS REAL) THEN UNLIKELY(DISTINCT v0.c0) WHEN ((vt0.c0)>(vt0.c0)) THEN -539738717 WHEN (NOT (v0.c0)) THEN v0.c0 ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((v0.c0)=(vt0.c1)) AS REAL)  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (1.7976931348623157E308)) DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN (NOT (vt0.c0)) THEN vt0.c1 WHEN vt0.c1 COLLATE BINARY THEN '2039289350' WHEN CAST(vt0.c1 AS REAL) THEN UNLIKELY(DISTINCT v0.c0) WHEN ((vt0.c0)>(vt0.c0)) THEN -539738717 WHEN (NOT (v0.c0)) THEN v0.c0 ELSE (v0.c0 IN ()) END) ORDER BY CAST(((v0.c0)=(vt0.c1)) AS REAL)  NULLS LAST, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN ((((NULL)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (1.7976931348623157E308)) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0) IS FALSE) IN (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) IS FALSE) IN (rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0) IS FALSE) IN (rt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0) IS FALSE) IN (rt0.c1))  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c0) IS FALSE) IN (rt0.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c2)<=(vt0.c0)))>=((((x'')) BETWEEN ((rt0.c1)) AND ((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)<=(vt0.c0)))>=((((x'')) BETWEEN ((rt0.c1)) AND ((vt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c2)<=(vt0.c0)))>=((((x'')) BETWEEN ((rt0.c1)) AND ((vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c2)<=(vt0.c0)))>=((((x'')) BETWEEN ((rt0.c1)) AND ((vt0.c1))))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (rt0.c2)) COLLATE NOCASE) ORDER BY ((((rt0.c2)<=(vt0.c0)))>=((((x'')) BETWEEN ((rt0.c1)) AND ((vt0.c1))))) ASC;
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c1) IS FALSE))<>(NULLIF(DISTINCT rt0.c1, v0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))<>(NULLIF(DISTINCT rt0.c1, v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT NULL)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c1) IS FALSE))<>(NULLIF(DISTINCT rt0.c1, v0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1) IS FALSE))<>(NULLIF(DISTINCT rt0.c1, v0.c0)))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT NULL)) ASC  NULLS LAST);
SELECT * FROM vt0, rt0, v0 WHERE (((((rt0.c1) IS FALSE))<>(NULLIF(DISTINCT rt0.c1, v0.c0)))) ORDER BY UNLIKELY(DISTINCT ((vt0.c0) NOT NULL)) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((rt0.c0 IN (0.20442119705072692, v0.c0, NULL)) COLLATE RTRIM) ORDER BY (- ((~ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (0.20442119705072692, v0.c0, NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (- ((~ (rt0.c0)))) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((rt0.c0 IN (0.20442119705072692, v0.c0, NULL)) COLLATE RTRIM) ORDER BY (- ((~ (rt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((rt0.c0 IN (0.20442119705072692, v0.c0, NULL)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (- ((~ (rt0.c0)))) ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((rt0.c0 IN (0.20442119705072692, v0.c0, NULL)) COLLATE RTRIM) ORDER BY (- ((~ (rt0.c0)))) ASC;
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON CAST(v0.c0 AS BLOB) COLLATE NOCASE WHERE ((- (((vt0.c1)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)||(v0.c0))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON CAST(v0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON CAST(v0.c0 AS BLOB) COLLATE NOCASE WHERE ((- (((vt0.c1)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c1)||(v0.c0))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN rt0 ON CAST(v0.c0 AS BLOB) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 INNER JOIN rt0 ON CAST(v0.c0 AS BLOB) COLLATE NOCASE WHERE ((- (((vt0.c1)||(v0.c0)))));
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c2))>((vt0.c0)))))<((((rt0.c0)>>(rt0.c0)))))) ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN 0.54078012717476 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))>((vt0.c0)))))<((((rt0.c0)>>(rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN 0.54078012717476 END) DESC);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c2))>((vt0.c0)))))<((((rt0.c0)>>(rt0.c0)))))) ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN 0.54078012717476 END) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2))>((vt0.c0)))))<((((rt0.c0)>>(rt0.c0)))))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN 0.54078012717476 END) DESC);
SELECT * FROM v0, vt0, rt0 WHERE (((((((rt0.c2))>((vt0.c0)))))<((((rt0.c0)>>(rt0.c0)))))) ORDER BY UPPER(DISTINCT CASE rt0.c0  WHEN rt0.c1 THEN 0.54078012717476 END) DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (((rt0.c0)LIKE(vt0.c1)) IN ((v0.c0 IN ()), ((vt0.c0)+(vt0.c1)))) WHERE (((((1624816555) ISNULL))<>(((vt0.c1)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((1624816555) ISNULL))<>(((vt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (((rt0.c0)LIKE(vt0.c1)) IN ((v0.c0 IN ()), ((vt0.c0)+(vt0.c1)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (((rt0.c0)LIKE(vt0.c1)) IN ((v0.c0 IN ()), ((vt0.c0)+(vt0.c1)))) WHERE (((((1624816555) ISNULL))<>(((vt0.c1)GLOB(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((1624816555) ISNULL))<>(((vt0.c1)GLOB(rt0.c2))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (((rt0.c0)LIKE(vt0.c1)) IN ((v0.c0 IN ()), ((vt0.c0)+(vt0.c1)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON ((((rt0.c1)OR(rt0.c1))) NOTNULL) FULL OUTER JOIN vt0 ON (((rt0.c0)LIKE(vt0.c1)) IN ((v0.c0 IN ()), ((vt0.c0)+(vt0.c1)))) WHERE (((((1624816555) ISNULL))<>(((vt0.c1)GLOB(rt0.c2)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(rt0.c0)))OR(0.9198370880827245))) AND ((- (x''))))) ORDER BY (~ ((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(rt0.c0)))OR(0.9198370880827245))) AND ((- (x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ ((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(rt0.c0)))OR(0.9198370880827245))) AND ((- (x''))))) ORDER BY (~ ((rt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(rt0.c0)))OR(0.9198370880827245))) AND ((- (x''))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (~ ((rt0.c1 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(rt0.c0)))OR(0.9198370880827245))) AND ((- (x''))))) ORDER BY (~ ((rt0.c1 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)<=(rt0.c1)))&((rt0.c0 IN ())))) ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(rt0.c1)))&((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)<=(rt0.c1)))&((rt0.c0 IN ())))) ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)<=(rt0.c1)))&((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0, v0 ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) DESC);
SELECT COUNT(*) FROM rt0, v0 WHERE (((((rt0.c2)<=(rt0.c1)))&((rt0.c0 IN ())))) ORDER BY CAST(((rt0.c2) IS TRUE) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()));
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((rt0.c1)<>(rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST, (NOT (((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((rt0.c1)!=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST, (NOT (((rt0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((rt0.c1)<>(rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST, (NOT (((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((rt0.c1)!=(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1  NULLS FIRST, (NOT (((rt0.c2) IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)GLOB(((rt0.c1)<>(rt0.c1))))) ORDER BY rt0.c1  NULLS FIRST, (NOT (((rt0.c2) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c0)||(vt0.c0)) THEN (- (rt0.c1)) WHEN LIKE(vt0.c0, vt0.c1) THEN (NOT ('sKCv%ꡛ|')) ELSE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(0.6841363653674108)))AND(rt0.c2)) END) ORDER BY (CAST(rt0.c1 AS BLOB) IN (((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c2)), (+ (vt0.c1)))), CASE LIKELY(0.07701111672229932)  WHEN INSTR(rt0.c2, '1465442832') THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c0)||(vt0.c0)) THEN (- (rt0.c1)) WHEN LIKE(vt0.c0, vt0.c1) THEN (NOT ('sKCv%ꡛ|')) ELSE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(0.6841363653674108)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c1 AS BLOB) IN (((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c2)), (+ (vt0.c1)))), CASE LIKELY(0.07701111672229932)  WHEN INSTR(rt0.c2, '1465442832') THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) END ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c0)||(vt0.c0)) THEN (- (rt0.c1)) WHEN LIKE(vt0.c0, vt0.c1) THEN (NOT ('sKCv%ꡛ|')) ELSE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(0.6841363653674108)))AND(rt0.c2)) END) ORDER BY (CAST(rt0.c1 AS BLOB) IN (((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c2)), (+ (vt0.c1)))), CASE LIKELY(0.07701111672229932)  WHEN INSTR(rt0.c2, '1465442832') THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c0)||(vt0.c0)) THEN (- (rt0.c1)) WHEN LIKE(vt0.c0, vt0.c1) THEN (NOT ('sKCv%ꡛ|')) ELSE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(0.6841363653674108)))AND(rt0.c2)) END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c1 AS BLOB) IN (((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c2)), (+ (vt0.c1)))), CASE LIKELY(0.07701111672229932)  WHEN INSTR(rt0.c2, '1465442832') THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) END ASC);
SELECT ALL * FROM vt0, rt0 WHERE (CASE WHEN ((vt0.c0) NOTNULL) THEN ((rt0.c0) IS FALSE) WHEN ((rt0.c0)||(vt0.c0)) THEN (- (rt0.c1)) WHEN LIKE(vt0.c0, vt0.c1) THEN (NOT ('sKCv%ꡛ|')) ELSE ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))OR(0.6841363653674108)))AND(rt0.c2)) END) ORDER BY (CAST(rt0.c1 AS BLOB) IN (((((((((vt0.c1)OR(rt0.c2)))OR(vt0.c0)))OR(vt0.c1)))AND(rt0.c2)), (+ (vt0.c1)))), CASE LIKELY(0.07701111672229932)  WHEN INSTR(rt0.c2, '1465442832') THEN ((((rt0.c2)AND(rt0.c2)))AND(rt0.c0)) END ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(NULL, 0.8650365336789954))<<(rt0.c0 COLLATE NOCASE))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))>(((rt0.c1)!=(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(NULL, 0.8650365336789954))<<(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))>(((rt0.c1)!=(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(NULL, 0.8650365336789954))<<(rt0.c0 COLLATE NOCASE))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))>(((rt0.c1)!=(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(NULL, 0.8650365336789954))<<(rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))>(((rt0.c1)!=(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((LIKELIHOOD(NULL, 0.8650365336789954))<<(rt0.c0 COLLATE NOCASE))) ORDER BY ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))>(((rt0.c1)!=(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((NULL) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((NULLIF(DISTINCT rt0.c0, rt0.c0)))=(((rt0.c2 IN (vt0.c1))))) WHERE (TRIM(CAST(rt0.c1 AS NUMERIC), CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c1 AS NUMERIC), CASE WHEN vt0.c1 THEN v0.c0 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((NULL) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((NULLIF(DISTINCT rt0.c0, rt0.c0)))==(((rt0.c2 IN (vt0.c1))))));
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((NULL) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((NULLIF(DISTINCT rt0.c0, rt0.c0)))=(((rt0.c2 IN (vt0.c1))))) WHERE (TRIM(CAST(rt0.c1 AS NUMERIC), CASE WHEN vt0.c1 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CAST(rt0.c1 AS NUMERIC), CASE WHEN vt0.c1 THEN v0.c0 END)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((NULL) BETWEEN (((((rt0.c0)AND(rt0.c1)))AND(rt0.c2))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) RIGHT OUTER JOIN vt0 ON (((NULLIF(DISTINCT rt0.c0, rt0.c0)))==(((rt0.c2 IN (vt0.c1))))));
SELECT * FROM rt0, v0, vt0 WHERE ((x'' IN (CAST(vt0.c0 AS BLOB), ((vt0.c1) IS FALSE)))) ORDER BY '1250848928';
SELECT SUM(count) FROM (SELECT (((x'' IN (CAST(vt0.c0 AS BLOB), ((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY '1250848928');
SELECT * FROM rt0, v0, vt0 WHERE ((x'' IN (CAST(vt0.c0 AS BLOB), ((vt0.c1) IS FALSE)))) ORDER BY '1250848928';
SELECT SUM(count) FROM (SELECT (((x'' IN (CAST(vt0.c0 AS BLOB), ((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY '1250848928');
SELECT * FROM rt0, v0, vt0 WHERE ((x'' IN (CAST(vt0.c0 AS BLOB), ((vt0.c1) IS FALSE)))) ORDER BY '1250848928';
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0, rt0.c1, 0xffffffff96ca1cbb)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, 0.532902589654669))) IN ())) ORDER BY 0.9639896454666593;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, rt0.c1, 0xffffffff96ca1cbb)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, 0.532902589654669))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.9639896454666593);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0, rt0.c1, 0xffffffff96ca1cbb)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, 0.532902589654669))) IN ())) ORDER BY 0.9639896454666593;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, rt0.c1, 0xffffffff96ca1cbb)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, 0.532902589654669))) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.9639896454666593);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (((((v0.c0, rt0.c1, 0xffffffff96ca1cbb)) BETWEEN ((rt0.c1, v0.c0, v0.c0)) AND ((rt0.c2, rt0.c2, 0.532902589654669))) IN ())) ORDER BY 0.9639896454666593;
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN ((- (v0.c0))) AND ((v0.c0 IN ())))) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((((NULL)OR(vt0.c1)))OR(vt0.c0))) AND ((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (((((NULL)OR(vt0.c1)))OR(vt0.c0))) AND ((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((((NULL)OR(vt0.c1)))OR(vt0.c0))) AND ((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0 COLLATE BINARY) BETWEEN (((((NULL)OR(vt0.c1)))OR(vt0.c0))) AND ((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1))))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) BETWEEN (((((NULL)OR(vt0.c1)))OR(vt0.c0))) AND ((((((((((((('')OR(rt0.c0)))AND(rt0.c1)))AND(vt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE ('-369455383') ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))/((((v0.c0))<>((v0.c0)))))  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (('-369455383') IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))/((((v0.c0))<>((v0.c0)))))  NULLS FIRST, x'' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ('-369455383') ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))/((((v0.c0))<>((v0.c0)))))  NULLS FIRST, x'' DESC;
SELECT SUM(count) FROM (SELECT ALL (('-369455383') IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))/((((v0.c0))<>((v0.c0)))))  NULLS FIRST, x'' DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ('-369455383') ORDER BY (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))/((((v0.c0))<>((v0.c0)))))  NULLS FIRST, x'' DESC;
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0 ORDER BY NULL);
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) AS NUMERIC)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN rt0 ORDER BY NULL);
SELECT ALL * FROM v0, vt0 NATURAL JOIN rt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c0)) AS NUMERIC)) ORDER BY NULL;
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOTNULL));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND((((rt0.c2))>=((vt0.c1))))))AND((rt0.c0 IN ()))))AND((- (v0.c0)))))AND(0.9730428267290083))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 140853626 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)IS(((((NULL)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((vt0.c1)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c1)))AND((((rt0.c2))>=((vt0.c1))))))AND((rt0.c0 IN ()))))AND((- (v0.c0)))))AND(0.9730428267290083))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 140853626 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)IS(((((NULL)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((vt0.c1)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND((((rt0.c2))>=((vt0.c1))))))AND((rt0.c0 IN ()))))AND((- (v0.c0)))))AND(0.9730428267290083))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 140853626 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)IS(((((NULL)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((vt0.c1)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)AND(rt0.c1)))AND((((rt0.c2))>=((vt0.c1))))))AND((rt0.c0 IN ()))))AND((- (v0.c0)))))AND(0.9730428267290083))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 140853626 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)IS(((((NULL)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((vt0.c1)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (((((((((((vt0.c0)AND(rt0.c1)))AND((((rt0.c2))>=((vt0.c1))))))AND((rt0.c0 IN ()))))AND((- (v0.c0)))))AND(0.9730428267290083))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN 140853626 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE v0.c0 END)IS(((((NULL)AND(vt0.c1)))AND(vt0.c1)))) DESC, ((vt0.c1)>>(vt0.c0)) COLLATE NOCASE COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0X4f2fd4fc) ORDER BY STRFTIME(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END, ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)), ((NULL) NOT BETWEEN (vt0.c1) AND (v0.c0)), (((x''))=((vt0.c1))), (~ (v0.c0)), (- (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)<>(vt0.c1)), 0.5578822531528548) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x4f2fd4fc) IS TRUE)  as count FROM v0, vt0 ORDER BY STRFTIME(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END, ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)), ((NULL) NOT BETWEEN (vt0.c1) AND (v0.c0)), (((x''))==((vt0.c1))), (~ (v0.c0)), (- (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)!=(vt0.c1)), 0.5578822531528548) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0X4f2fd4fc) ORDER BY STRFTIME(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END, ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)), ((NULL) NOT BETWEEN (vt0.c1) AND (v0.c0)), (((x''))=((vt0.c1))), (~ (v0.c0)), (- (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)<>(vt0.c1)), 0.5578822531528548) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x4f2fd4fc) IS TRUE)  as count FROM v0, vt0 ORDER BY STRFTIME(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END, ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)), ((NULL) NOT BETWEEN (vt0.c1) AND (v0.c0)), (((x''))==((vt0.c1))), (~ (v0.c0)), (- (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)!=(vt0.c1)), 0.5578822531528548) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0X4f2fd4fc) ORDER BY STRFTIME(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END, ((NULL) BETWEEN (vt0.c0) AND (vt0.c1)), ((NULL) NOT BETWEEN (vt0.c1) AND (v0.c0)), (((x''))=((vt0.c1))), (~ (v0.c0)), (- (vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c1)<>(vt0.c1)), 0.5578822531528548) DESC;
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (0x7a08448a) ORDER BY CASE NULL  WHEN (0.8210534427154463 IN (-726176540, rt0.c1, rt0.c1)) THEN '' ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ((0X7a08448a) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE NULL  WHEN (0.8210534427154463 IN (-726176540, rt0.c1, rt0.c1)) THEN '' ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (0x7a08448a) ORDER BY CASE NULL  WHEN (0.8210534427154463 IN (-726176540, rt0.c1, rt0.c1)) THEN '' ELSE rt0.c0 END;
SELECT SUM(count) FROM (SELECT ((0X7a08448a) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY CASE NULL  WHEN (0.8210534427154463 IN (-726176540, rt0.c1, rt0.c1)) THEN '' ELSE rt0.c0 END);
SELECT ALL COUNT(*) FROM vt0, v0, rt0 WHERE (0x7a08448a) ORDER BY CASE NULL  WHEN (0.8210534427154463 IN (-726176540, rt0.c1, rt0.c1)) THEN '' ELSE rt0.c0 END;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)/(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY)/(((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY ((+ (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((+ (v0.c0)) IN ()));
SELECT ALL * FROM v0, rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY ((+ (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((+ (v0.c0)) IN ()));
SELECT ALL * FROM v0, rt0 WHERE ((~ (((((rt0.c1)OR(rt0.c0)))OR(rt0.c1))))) ORDER BY ((+ (v0.c0)) IN ());
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END IN ())) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE ((CASE vt0.c0  WHEN v0.c0 THEN x'' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 ELSE rt0.c0 END IN ()));
SELECT ALL * FROM rt0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT ALL * FROM rt0, vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) IS TRUE));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((82790803)OR(v0.c0)))AND(v0.c0))))) ORDER BY (- ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((82790803)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((82790803)OR(v0.c0)))AND(v0.c0))))) ORDER BY (- ((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((82790803)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- ((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 COLLATE RTRIM) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((((82790803)OR(v0.c0)))AND(v0.c0))))) ORDER BY (- ((v0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)|(vt0.c1)))AND((NOT (vt0.c0)))))AND(((vt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)|(vt0.c1)))AND((NOT (vt0.c0)))))AND(((vt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)|(vt0.c1)))AND((NOT (vt0.c0)))))AND(((vt0.c1)>=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)|(vt0.c1)))AND((NOT (vt0.c0)))))AND(((vt0.c1)>=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)|(vt0.c1)))AND((NOT (vt0.c0)))))AND(((vt0.c1)>=(vt0.c0)))));
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)AND('0.44577695680685836')))OR(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((v0.c0) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) ELSE CASE v0.c0  WHEN rt0.c2 THEN '' WHEN '' THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE -1.753768473E9 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)AND('0.44577695680685836')))OR(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((v0.c0) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) ELSE CASE v0.c0  WHEN rt0.c2 THEN '' WHEN '' THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE -1.753768473E9 END END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)AND('0.44577695680685836')))OR(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((v0.c0) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) ELSE CASE v0.c0  WHEN rt0.c2 THEN '' WHEN '' THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE -1.753768473E9 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)AND('0.44577695680685836')))OR(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((v0.c0) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) ELSE CASE v0.c0  WHEN rt0.c2 THEN '' WHEN '' THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE -1.753768473E9 END END) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (CASE WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)AND('0.44577695680685836')))OR(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c0 END THEN ((v0.c0) IS TRUE) WHEN ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) THEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)) ELSE CASE v0.c0  WHEN rt0.c2 THEN '' WHEN '' THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 ELSE -1.753768473E9 END END);
SELECT * FROM rt0 WHERE (((LIKELY(rt0.c0))<=(rt0.c0 COLLATE RTRIM))) ORDER BY ((((CAST(rt0.c2 AS INTEGER))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c1)AND(((rt0.c2) BETWEEN (NULL) AND (NULL)))))AND(((rt0.c2) BETWEEN (0.6962082586808703) AND (rt0.c0)))) ASC, ((load_extension(rt0.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))<=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c2 AS INTEGER))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c1)AND(((rt0.c2) BETWEEN (NULL) AND (NULL)))))AND(((rt0.c2) BETWEEN (0.6962082586808703) AND (rt0.c0)))) ASC, ((load_extension(rt0.c0)) NOT NULL)  NULLS LAST);
SELECT * FROM rt0 WHERE (((LIKELY(rt0.c0))<=(rt0.c0 COLLATE RTRIM))) ORDER BY ((((CAST(rt0.c2 AS INTEGER))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c1)AND(((rt0.c2) BETWEEN (NULL) AND (NULL)))))AND(((rt0.c2) BETWEEN (0.6962082586808703) AND (rt0.c0)))) ASC, ((load_extension(rt0.c0)) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKELY(rt0.c0))<=(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM rt0 ORDER BY ((((CAST(rt0.c2 AS INTEGER))AND(rt0.c2)))OR(rt0.c1 COLLATE BINARY)), ((((rt0.c1)AND(((rt0.c2) BETWEEN (NULL) AND (NULL)))))AND(((rt0.c2) BETWEEN (0.6962082586808703) AND (rt0.c0)))) ASC, ((load_extension(rt0.c0)) NOT NULL)  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, 0Xffffffffe6ae59d1, vt0.c0, vt0.c0))==((vt0.c1, vt0.c1, NULL, NULL, vt0.c1))))) ORDER BY (((0.7663472511716762) IS FALSE) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, NULL, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, vt0.c0, 0Xffffffffe6ae59d1, vt0.c0, vt0.c0))=((vt0.c1, vt0.c1, NULL, NULL, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.7663472511716762) IS FALSE) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, NULL, vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, 0Xffffffffe6ae59d1, vt0.c0, vt0.c0))==((vt0.c1, vt0.c1, NULL, NULL, vt0.c1))))) ORDER BY (((0.7663472511716762) IS FALSE) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, NULL, vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM((((vt0.c0, vt0.c0, 0Xffffffffe6ae59d1, vt0.c0, vt0.c0))=((vt0.c1, vt0.c1, NULL, NULL, vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((0.7663472511716762) IS FALSE) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, NULL, vt0.c0)))))  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM((((vt0.c0, vt0.c0, 0Xffffffffe6ae59d1, vt0.c0, vt0.c0))==((vt0.c1, vt0.c1, NULL, NULL, vt0.c1))))) ORDER BY (((0.7663472511716762) IS FALSE) IN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))), (((vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, NULL, vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c0) NOTNULL)) IS TRUE)) ORDER BY CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER)  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) ISNULL) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0) ISNULL) IN ()));
SELECT COUNT(*) FROM rt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((v0.c0 IN ()))))OR((v0.c0 IN (rt0.c0, v0.c0)))))OR((((rt0.c2))>((rt0.c0))))))AND(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, (((((((('-120942159')AND(v0.c0)))OR(v0.c0)))AND(0.33075568685584633)))AND(LOWER(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((v0.c0 IN ()))))OR((v0.c0 IN (rt0.c0, v0.c0)))))OR((((rt0.c2))>((rt0.c0))))))AND(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, (((((((('-120942159')AND(v0.c0)))OR(v0.c0)))AND(0.33075568685584633)))AND(LOWER(rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((v0.c0 IN ()))))OR((v0.c0 IN (rt0.c0, v0.c0)))))OR((((rt0.c2))>((rt0.c0))))))AND(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, (((((((('-120942159')AND(v0.c0)))OR(v0.c0)))AND(0.33075568685584633)))AND(LOWER(rt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((v0.c0 IN ()))))OR((v0.c0 IN (rt0.c0, v0.c0)))))OR((((rt0.c2))>((rt0.c0))))))AND(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, (((((((('-120942159')AND(v0.c0)))OR(v0.c0)))AND(0.33075568685584633)))AND(LOWER(rt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((((((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))OR((v0.c0 IN ()))))OR((v0.c0 IN (rt0.c0, v0.c0)))))OR((((rt0.c2))>((rt0.c0))))))AND(CAST(rt0.c0 AS BLOB))) ASC  NULLS FIRST, (((((((('-120942159')AND(v0.c0)))OR(v0.c0)))AND(0.33075568685584633)))AND(LOWER(rt0.c0)))  NULLS LAST;
SELECT * FROM vt0, v0, rt0 WHERE (((((((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT * FROM vt0, v0, rt0 WHERE (((((((((((((((((rt0.c0)AND(vt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(((rt0.c0) IS FALSE))))OR(CAST(rt0.c2 AS NUMERIC))))AND(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (''))) ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN rt0.c0 ELSE ((rt0.c1)IS(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN rt0.c0 ELSE ((rt0.c1)IS(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (''))) ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN rt0.c0 ELSE ((rt0.c1)IS(rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN rt0.c0 ELSE ((rt0.c1)IS(rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, v0, vt0 WHERE ((+ (''))) ORDER BY CASE WHEN ((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)) THEN rt0.c0 ELSE ((rt0.c1)IS(rt0.c0)) END;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c0 IN ())) BETWEEN (-1437912147) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (-1437912147) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c0 IN ())) BETWEEN (-1437912147) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0 IN ())) BETWEEN (-1437912147) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((NOT (((rt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((vt0.c0 IN ())) BETWEEN (-1437912147) AND (vt0.c1 COLLATE BINARY))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOTNULL)) ORDER BY LIKELY((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY LIKELY((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOTNULL)) ORDER BY LIKELY((vt0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY LIKELY((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1) NOTNULL)) ORDER BY LIKELY((vt0.c0 IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(x'' AS NUMERIC))IS(((rt0.c1)IS(vt0.c1))))) ORDER BY CAST(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))IS(((rt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS REAL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(x'' AS NUMERIC))IS(((rt0.c1)IS(vt0.c1))))) ORDER BY CAST(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS NUMERIC))IS(((rt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS REAL) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((CAST(x'' AS NUMERIC))IS(((rt0.c1)IS(vt0.c1))))) ORDER BY CAST(CASE rt0.c1  WHEN vt0.c1 THEN vt0.c1 END AS REAL) ASC;
SELECT * FROM vt0 WHERE ((((((0.567502648065767)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))GLOB(LIKELIHOOD(DISTINCT vt0.c1, 0.863588492995698))));
SELECT SUM(count) FROM (SELECT (((((((0.567502648065767)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))GLOB(LIKELIHOOD(DISTINCT vt0.c1, 0.863588492995698)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((0.567502648065767)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))GLOB(LIKELIHOOD(DISTINCT vt0.c1, 0.863588492995698))));
SELECT SUM(count) FROM (SELECT (((((((0.567502648065767)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))GLOB(LIKELIHOOD(DISTINCT vt0.c1, 0.863588492995698)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((0.567502648065767)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))GLOB(LIKELIHOOD(DISTINCT vt0.c1, 0.863588492995698))));
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (rt0.c1) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (rt0.c1) AND (vt0.c0))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (rt0.c1) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (rt0.c1) AND (vt0.c0))) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT COUNT(*) FROM v0, rt0, vt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (rt0.c1) AND (vt0.c0)));
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0) ISNULL) END) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN (+ (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN (+ (vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0) ISNULL) END) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN (+ (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0) ISNULL) END) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN (+ (vt0.c1)) END  NULLS FIRST);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c0) ISNULL) END) ORDER BY CASE WHEN ((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)) THEN (+ (vt0.c1)) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST((((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) AND ((NULL, rt0.c1, rt0.c0, rt0.c1, rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) AND ((NULL, rt0.c1, rt0.c0, rt0.c1, rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST((((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) AND ((NULL, rt0.c1, rt0.c0, rt0.c1, rt0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) AND ((NULL, rt0.c1, rt0.c0, rt0.c1, rt0.c0))) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 NOT INDEXED WHERE (CAST((((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2, rt0.c0, rt0.c0)) AND ((NULL, rt0.c1, rt0.c0, rt0.c1, rt0.c0))) AS NUMERIC));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON 0X5993c3c4 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY)*('\r_hU\rY')) WHERE (2039289350);
SELECT SUM(count) FROM (SELECT ((2039289350) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 0X5993c3c4 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY)*('\r_hU\rY')));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON 0X5993c3c4 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY)*('\r_hU\rY')) WHERE (2039289350);
SELECT SUM(count) FROM (SELECT ((2039289350) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON 0X5993c3c4 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY)*('\r_hU\rY')));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON 0X5993c3c4 FULL OUTER JOIN v0 ON ((rt0.c0 COLLATE BINARY)*('\r_hU\rY')) WHERE (2039289350);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(rt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(rt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((CAST(rt0.c2 AS BLOB)) NOT BETWEEN (((v0.c0) IS TRUE)) AND (CAST(rt0.c0 AS TEXT))));
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((v0.c0) ISNULL) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((v0.c0) ISNULL) END) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((v0.c0) ISNULL) END) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM rt0, v0, vt0 WHERE (CASE rt0.c0 COLLATE NOCASE  WHEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c2 END THEN ((v0.c0) ISNULL) END) ORDER BY NULL  NULLS FIRST;
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (vt0.c0 IN (vt0.c0)) COLLATE RTRIM WHERE ((((((510899853, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, vt0.c1, rt0.c2)))) IS TRUE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((510899853, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, vt0.c1, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0)>=(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (vt0.c0 IN (vt0.c0)) COLLATE RTRIM WHERE ((((((510899853, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, vt0.c1, rt0.c2)))) IS TRUE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((510899853, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, vt0.c1, rt0.c2)))) IS TRUE)) IS TRUE)  as count FROM v0, rt0 CROSS JOIN vt0 ON (vt0.c0 IN (vt0.c0)) COLLATE RTRIM ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0)>=(v0.c0)))));
SELECT COUNT(*) FROM v0, rt0 CROSS JOIN vt0 ON (vt0.c0 IN (vt0.c0)) COLLATE RTRIM WHERE ((((((510899853, rt0.c2, v0.c0)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c2, vt0.c1, rt0.c2)))) IS TRUE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0))) AND (((vt0.c0)>=(v0.c0))));
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) CROSS JOIN vt0 ON rt0.c0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (vt0.c1 IN ()) THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS INTEGER)  WHEN (vt0.c1 IN ()) THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) CROSS JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) CROSS JOIN vt0 ON rt0.c0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (vt0.c1 IN ()) THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(rt0.c2 AS INTEGER)  WHEN (vt0.c1 IN ()) THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON (~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) CROSS JOIN vt0 ON rt0.c0);
SELECT COUNT(*) FROM rt0 INNER JOIN v0 ON (~ (CASE vt0.c1  WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END)) CROSS JOIN vt0 ON rt0.c0 WHERE (CASE CAST(rt0.c2 AS INTEGER)  WHEN (vt0.c1 IN ()) THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)) END);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('>ᥲoFPvZ6', '-526652154', v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, '7', v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('>ᥲoFPvZ6', '-526652154', v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, '7', v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('>ᥲoFPvZ6', '-526652154', v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, '7', v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('>ᥲoFPvZ6', '-526652154', v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, '7', v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('>ᥲoFPvZ6', '-526652154', v0.c0, NULL, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0, '7', v0.c0))) IN ()));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0)>(rt0.c2)))AND((- (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(0.9707443016276903, 0.7955897849517342))))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, vt0.c0))))) RIGHT OUTER JOIN rt0 ON (+ (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)))) WHERE (CAST(LIKELIHOOD(rt0.c2, 0.4051363211672441) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(rt0.c2, 0.4051363211672441) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0)>(rt0.c2)))AND((- (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(0.9707443016276903, 0.7955897849517342))))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, vt0.c0))))) RIGHT OUTER JOIN rt0 ON (+ (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0)>(rt0.c2)))AND((- (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(0.9707443016276903, 0.7955897849517342))))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, vt0.c0))))) RIGHT OUTER JOIN rt0 ON (+ (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)))) WHERE (CAST(LIKELIHOOD(rt0.c2, 0.4051363211672441) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(rt0.c2, 0.4051363211672441) AS BLOB)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((((((v0.c0)>(rt0.c2)))AND((- (vt0.c0)))))OR((((v0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c1))))))AND(LIKELIHOOD(0.9707443016276903, 0.7955897849517342))))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c0, rt0.c1, vt0.c0))))) RIGHT OUTER JOIN rt0 ON (+ (((vt0.c0) BETWEEN (vt0.c1) AND (rt0.c2)))));
SELECT * FROM rt0, v0, vt0 WHERE ((((((((((v0.c0 IN ()))AND('\r.' COLLATE BINARY)))AND(rt0.c1)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-264877586')))OR(vt0.c0)))))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND('\r.' COLLATE BINARY)))AND(rt0.c1)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-264877586')))OR(vt0.c0)))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((((((((v0.c0 IN ()))AND('\r.' COLLATE BINARY)))AND(rt0.c1)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-264877586')))OR(vt0.c0)))))OR((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((v0.c0 IN ()))AND('\r.' COLLATE BINARY)))AND(rt0.c1)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-264877586')))OR(vt0.c0)))))OR((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE ((((((((((v0.c0 IN ()))AND('\r.' COLLATE BINARY)))AND(rt0.c1)))OR(((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND('-264877586')))OR(vt0.c0)))))OR((NOT (vt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((((((((v0.c0, v0.c0, 9223372036854775807))>((v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)>(v0.c0)))))AND((v0.c0 IN ()))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0, v0.c0, 9223372036854775807))>((v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)>(v0.c0)))))AND((v0.c0 IN ()))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((((((((v0.c0, v0.c0, 9223372036854775807))>((v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)>(v0.c0)))))AND((v0.c0 IN ()))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((((((((((v0.c0, v0.c0, 9223372036854775807))>((v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)>(v0.c0)))))AND((v0.c0 IN ()))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((((((((((v0.c0, v0.c0, 9223372036854775807))>((v0.c0, v0.c0, v0.c0))))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)>(v0.c0)))))AND((v0.c0 IN ()))))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST;
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((NULL COLLATE BINARY) IS FALSE) WHERE ((- (((rt0.c2)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)LIKE(rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((NULL COLLATE BINARY) IS FALSE));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((NULL COLLATE BINARY) IS FALSE) WHERE ((- (((rt0.c2)LIKE(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2)LIKE(rt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN rt0 ON ((NULL COLLATE BINARY) IS FALSE));
SELECT ALL * FROM v0 INNER JOIN rt0 ON ((NULL COLLATE BINARY) IS FALSE) WHERE ((- (((rt0.c2)LIKE(rt0.c0)))));
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY SUBSTR(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)), vt0.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY SUBSTR(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)), vt0.c1) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY SUBSTR(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)), vt0.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(rt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0, v0, rt0 ORDER BY SUBSTR(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)), vt0.c1) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0, rt0 WHERE ((CAST(rt0.c0 AS REAL) IN ())) ORDER BY SUBSTR(((((rt0.c2)AND(vt0.c0)))AND(rt0.c1)), vt0.c1) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c2)) AND ((rt0.c1, vt0.c0, v0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ()))!=('')) WHERE (NULL) ORDER BY (((vt0.c0)) NOT BETWEEN (((((('1745850417')OR(rt0.c1)))AND(rt0.c0)))) AND ((vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c2)) AND ((rt0.c1, vt0.c0, v0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ()))<>('')) ORDER BY (((vt0.c0)) NOT BETWEEN (((((('1745850417')OR(rt0.c1)))AND(rt0.c0)))) AND ((vt0.c1))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c2)) AND ((rt0.c1, vt0.c0, v0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ()))!=('')) WHERE (NULL) ORDER BY (((vt0.c0)) NOT BETWEEN (((((('1745850417')OR(rt0.c1)))AND(rt0.c0)))) AND ((vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c2)) AND ((rt0.c1, vt0.c0, v0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ()))<>('')) ORDER BY (((vt0.c0)) NOT BETWEEN (((((('1745850417')OR(rt0.c1)))AND(rt0.c0)))) AND ((vt0.c1))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c0, v0.c0, rt0.c0)) BETWEEN ((rt0.c1, v0.c0, rt0.c2)) AND ((rt0.c1, vt0.c0, v0.c0))) IN ()) LEFT OUTER JOIN rt0 ON (((vt0.c1 IN ()))!=('')) WHERE (NULL) ORDER BY (((vt0.c0)) NOT BETWEEN (((((('1745850417')OR(rt0.c1)))AND(rt0.c0)))) AND ((vt0.c1)));
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN (vt0.c1))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c0 IN (vt0.c1))) NOT NULL));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON x'33d6' WHERE ((- (CAST(v0.c0 AS REAL)))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))>=(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON x'33d6' ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))>=(((rt0.c0) NOTNULL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON x'33d6' WHERE ((- (CAST(v0.c0 AS REAL)))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))>=(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT (((- (CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN v0 ON x'33d6' ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))>=(((rt0.c0) NOTNULL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN v0 ON x'33d6' WHERE ((- (CAST(v0.c0 AS REAL)))) ORDER BY ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))>=(((rt0.c0) NOTNULL)));
SELECT ALL * FROM v0, vt0 WHERE (3.50621651E8 COLLATE RTRIM) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((3.50621651E8 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (3.50621651E8 COLLATE RTRIM) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((3.50621651E8 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0 ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (3.50621651E8 COLLATE RTRIM) ORDER BY (- (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC;
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN ('b3\rcz') AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c1 END AS TEXT)  NULLS LAST, ((((((((((vt0.c1)>(vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2))>((v0.c0))))))AND((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST, ((((rt0.c1)||(vt0.c1)))OR(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST, ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND(((rt0.c1)<(rt0.c1)))))OR((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN ('b3\rcz') AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c1 END AS TEXT)  NULLS LAST, ((((((((((vt0.c1)>(vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2))>((v0.c0))))))AND((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST, ((((rt0.c1)||(vt0.c1)))OR(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST, ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND(((rt0.c1)<(rt0.c1)))))OR((- (vt0.c0)))));
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN ('b3\rcz') AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c1 END AS TEXT)  NULLS LAST, ((((((((((vt0.c1)>(vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2))>((v0.c0))))))AND((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST, ((((rt0.c1)||(vt0.c1)))OR(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST, ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND(((rt0.c1)<(rt0.c1)))))OR((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN ('b3\rcz') AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c1 END AS TEXT)  NULLS LAST, ((((((((((vt0.c1)>(vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2))>((v0.c0))))))AND((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST, ((((rt0.c1)||(vt0.c1)))OR(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST, ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND(((rt0.c1)<(rt0.c1)))))OR((- (vt0.c0)))));
SELECT * FROM vt0, rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0)))) NOT BETWEEN ('b3\rcz') AND ((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((vt0.c0)))))) ORDER BY CAST(CASE WHEN v0.c0 THEN vt0.c1 END AS TEXT)  NULLS LAST, ((((((((((vt0.c1)>(vt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((((rt0.c2))>((v0.c0))))))AND((vt0.c0 IN ()))))OR(NULL)) ASC  NULLS LAST, ((((rt0.c1)||(vt0.c1)))OR(CAST(rt0.c1 AS TEXT))) DESC  NULLS LAST, ((((CASE WHEN v0.c0 THEN rt0.c0 END)AND(((rt0.c1)<(rt0.c1)))))OR((- (vt0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN json_remove(rt0.c2, rt0.c1, v0.c0, rt0.c1, rt0.c1, v0.c0) WHEN HEX(DISTINCT rt0.c1) THEN ((((v0.c0)OR(rt0.c2)))OR(v0.c0)) WHEN ((0.6168459666024094)-(rt0.c2)) THEN v0.c0 END) ORDER BY (((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND(CASE rt0.c2  WHEN '|䱱' THEN rt0.c0 END)) ASC  NULLS FIRST, json_extract(v0.c0 COLLATE NOCASE, ((rt0.c1)&(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN json_remove(rt0.c2, rt0.c1, v0.c0, rt0.c1, rt0.c1, v0.c0) WHEN HEX(DISTINCT rt0.c1) THEN ((((v0.c0)OR(rt0.c2)))OR(v0.c0)) WHEN ((0.6168459666024094)-(rt0.c2)) THEN v0.c0 END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND(CASE rt0.c2  WHEN '|䱱' THEN rt0.c0 END)) ASC  NULLS FIRST, json_extract(v0.c0 COLLATE NOCASE, ((rt0.c1)&(v0.c0))));
SELECT COUNT(*) FROM v0, rt0 WHERE (CASE WHEN v0.c0 THEN json_remove(rt0.c2, rt0.c1, v0.c0, rt0.c1, rt0.c1, v0.c0) WHEN HEX(DISTINCT rt0.c1) THEN ((((v0.c0)OR(rt0.c2)))OR(v0.c0)) WHEN ((0.6168459666024094)-(rt0.c2)) THEN v0.c0 END) ORDER BY (((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND(CASE rt0.c2  WHEN '|䱱' THEN rt0.c0 END)) ASC  NULLS FIRST, json_extract(v0.c0 COLLATE NOCASE, ((rt0.c1)&(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN json_remove(rt0.c2, rt0.c1, v0.c0, rt0.c1, rt0.c1, v0.c0) WHEN HEX(DISTINCT rt0.c1) THEN ((((v0.c0)OR(rt0.c2)))OR(v0.c0)) WHEN ((0.6168459666024094)-(rt0.c2)) THEN v0.c0 END) IS TRUE)  as count FROM v0, rt0 ORDER BY (((((rt0.c1, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, v0.c0)) AND ((rt0.c0, rt0.c2, rt0.c0))))AND(CASE rt0.c2  WHEN '|䱱' THEN rt0.c0 END)) ASC  NULLS FIRST, json_extract(v0.c0 COLLATE NOCASE, ((rt0.c1)&(v0.c0))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c0 AS REAL) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(CAST(rt0.c0 AS REAL) AS REAL));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c0)!=(vt0.c0))) AND (((vt0.c1)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<>(vt0.c0))) AND (((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c0)!=(vt0.c0))) AND (((vt0.c1)>>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c0)<>(vt0.c0))) AND (((vt0.c1)>>(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c0)!=(vt0.c0))) AND (((vt0.c1)>>(vt0.c1)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((~ (rt0.c0))) WHERE (ABS(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ORDER BY UNLIKELY(DISTINCT 0.9723472130959283), ((rt0.c1)<=(rt0.c0)) COLLATE BINARY, (~ (CASE 0xffffffffc19bf2fc  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((~ (rt0.c0))) ORDER BY UNLIKELY(DISTINCT 0.9723472130959283), ((rt0.c1)<=(rt0.c0)) COLLATE BINARY, (~ (CASE 0Xffffffffc19bf2fc  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((~ (rt0.c0))) WHERE (ABS(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ORDER BY UNLIKELY(DISTINCT 0.9723472130959283), ((rt0.c1)<=(rt0.c0)) COLLATE BINARY, (~ (CASE 0xffffffffc19bf2fc  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((~ (rt0.c0))) ORDER BY UNLIKELY(DISTINCT 0.9723472130959283), ((rt0.c1)<=(rt0.c0)) COLLATE BINARY, (~ (CASE 0Xffffffffc19bf2fc  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON TRIM((~ (rt0.c0))) WHERE (ABS(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c1)))) ORDER BY UNLIKELY(DISTINCT 0.9723472130959283), ((rt0.c1)<=(rt0.c0)) COLLATE BINARY, (~ (CASE 0xffffffffc19bf2fc  WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((vt0.c0)/(rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)/('1040903799')) WHEN ABS(DISTINCT rt0.c1) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)/('1040903799')) WHEN ABS(DISTINCT rt0.c1) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((vt0.c0)/(rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)/('1040903799')) WHEN ABS(DISTINCT rt0.c1) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)/(rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)/('1040903799')) WHEN ABS(DISTINCT rt0.c1) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((vt0.c0)/(rt0.c1)) COLLATE NOCASE) ORDER BY CASE WHEN ((((((((rt0.c2)AND(rt0.c2)))AND(vt0.c1)))OR(vt0.c1)))AND(rt0.c1)) THEN ((vt0.c0)/('1040903799')) WHEN ABS(DISTINCT rt0.c1) THEN CASE rt0.c0  WHEN rt0.c2 THEN vt0.c1 END WHEN NULLIF(DISTINCT vt0.c0, vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC;
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))-((rt0.c0 IN ())))) ORDER BY (((rt0.c0 IN (rt0.c0)))<>(((rt0.c0)*(rt0.c2))))  NULLS FIRST, MAX(CAST(rt0.c1 AS REAL), ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)), NULL, TRIM(DISTINCT rt0.c1, 867322313));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))-((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0 IN (rt0.c0)))<>(((rt0.c0)*(rt0.c2))))  NULLS FIRST, MAX(CAST(rt0.c1 AS REAL), ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)), NULL, TRIM(DISTINCT rt0.c1, 867322313)));
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))-((rt0.c0 IN ())))) ORDER BY (((rt0.c0 IN (rt0.c0)))<>(((rt0.c0)*(rt0.c2))))  NULLS FIRST, MAX(CAST(rt0.c1 AS REAL), ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)), NULL, TRIM(DISTINCT rt0.c1, 867322313));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))-((rt0.c0 IN ())))) IS TRUE)  as count FROM v0, rt0 ORDER BY (((rt0.c0 IN (rt0.c0)))<>(((rt0.c0)*(rt0.c2))))  NULLS FIRST, MAX(CAST(rt0.c1 AS REAL), ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)), NULL, TRIM(DISTINCT rt0.c1, 867322313)));
SELECT * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))-((rt0.c0 IN ())))) ORDER BY (((rt0.c0 IN (rt0.c0)))<>(((rt0.c0)*(rt0.c2))))  NULLS FIRST, MAX(CAST(rt0.c1 AS REAL), ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)), NULL, TRIM(DISTINCT rt0.c1, 867322313));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) ORDER BY (((NOT (rt0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NOT (rt0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) ORDER BY (((NOT (rt0.c0))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY (((NOT (rt0.c0))) IS FALSE) DESC);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) COLLATE NOCASE) ORDER BY (((NOT (rt0.c0))) IS FALSE) DESC;
SELECT ALL * FROM vt0 WHERE ((NOT ('?'))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('?'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT ('?'))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ('?'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT ('?'))) ORDER BY CAST(vt0.c1 COLLATE NOCASE AS BLOB) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((v0.c0 IN ()) IN (((v0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN (((v0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((v0.c0 IN ()) IN (((v0.c0)*(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 IN ()) IN (((v0.c0)*(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0);
SELECT * FROM rt0, vt0 RIGHT OUTER JOIN v0 ON vt0.c0 WHERE (((v0.c0 IN ()) IN (((v0.c0)*(rt0.c0)))));
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END))) ORDER BY '\r84i}9';
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY '\r84i}9');
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END))) ORDER BY '\r84i}9';
SELECT SUM(count) FROM (SELECT (((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END))) IS TRUE)  as count FROM v0, rt0 ORDER BY '\r84i}9');
SELECT ALL * FROM v0, rt0 WHERE ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)) IN (CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END))) ORDER BY '\r84i}9';
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON (- (rt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c1) IS TRUE))OR((NULL IN (vt0.c1, rt0.c0, rt0.c2))))) ORDER BY (~ (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE))OR((NULL IN (vt0.c1, rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON (- (rt0.c1 COLLATE NOCASE)) ORDER BY (~ (rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON (- (rt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c1) IS TRUE))OR((NULL IN (vt0.c1, rt0.c0, rt0.c2))))) ORDER BY (~ (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE))OR((NULL IN (vt0.c1, rt0.c0, rt0.c2))))) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN v0 ON (- (rt0.c1 COLLATE NOCASE)) ORDER BY (~ (rt0.c2 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 CROSS JOIN v0 ON (- (rt0.c1 COLLATE NOCASE)) WHERE (((((vt0.c1) IS TRUE))OR((NULL IN (vt0.c1, rt0.c0, rt0.c2))))) ORDER BY (~ (rt0.c2 COLLATE RTRIM))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)&(rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt0.c2)&(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (((rt0.c2)&(rt0.c1)))));
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c1 AS REAL)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c1 AS REAL)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC);
SELECT * FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND (CAST(vt0.c1 AS REAL)))) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOTNULL) DESC;
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(vt0.c1) COLLATE RTRIM);
SELECT ALL * FROM v0, rt0 WHERE (json((NOT (rt0.c2)))) ORDER BY ((((((v0.c0))<=((rt0.c1))), (((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0, rt0.c1, 0.870747276197147)) AND ((rt0.c0, 'oI{{j*t\r', rt0.c0, rt0.c1, 0.5347122702209586))), rt0.c2))=((CASE 0.09756773074095404  WHEN v0.c0 THEN NULL ELSE rt0.c1 END, (v0.c0 IN (rt0.c1, rt0.c2)), ('350621651' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((json((NOT (rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0))<=((rt0.c1))), (((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0, rt0.c1, 0.870747276197147)) AND ((rt0.c0, 'oI{{j*t\r', rt0.c0, rt0.c1, 0.5347122702209586))), rt0.c2))=((CASE 0.09756773074095404  WHEN v0.c0 THEN NULL ELSE rt0.c1 END, (v0.c0 IN (rt0.c1, rt0.c2)), ('350621651' IN ())))));
SELECT ALL * FROM v0, rt0 WHERE (json((NOT (rt0.c2)))) ORDER BY ((((((v0.c0))<=((rt0.c1))), (((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0, rt0.c1, 0.870747276197147)) AND ((rt0.c0, 'oI{{j*t\r', rt0.c0, rt0.c1, 0.5347122702209586))), rt0.c2))=((CASE 0.09756773074095404  WHEN v0.c0 THEN NULL ELSE rt0.c1 END, (v0.c0 IN (rt0.c1, rt0.c2)), ('350621651' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((json((NOT (rt0.c2)))) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((v0.c0))<=((rt0.c1))), (((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0, rt0.c1, 0.870747276197147)) AND ((rt0.c0, 'oI{{j*t\r', rt0.c0, rt0.c1, 0.5347122702209586))), rt0.c2))=((CASE 0.09756773074095404  WHEN v0.c0 THEN NULL ELSE rt0.c1 END, (v0.c0 IN (rt0.c1, rt0.c2)), ('350621651' IN ())))));
SELECT ALL * FROM v0, rt0 WHERE (json((NOT (rt0.c2)))) ORDER BY ((((((v0.c0))<=((rt0.c1))), (((rt0.c1, rt0.c0, rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, v0.c0, rt0.c1, 0.870747276197147)) AND ((rt0.c0, 'oI{{j*t\r', rt0.c0, rt0.c1, 0.5347122702209586))), rt0.c2))=((CASE 0.09756773074095404  WHEN v0.c0 THEN NULL ELSE rt0.c1 END, (v0.c0 IN (rt0.c1, rt0.c2)), ('350621651' IN ()))));
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL COUNT(*) FROM v0, rt0, vt0 WHERE (rt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN '-1606375204' THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), ((vt0.c1)<<(1475224132))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN '-1606375204' THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), ((vt0.c1)<<(1475224132)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN '-1606375204' THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), ((vt0.c1)<<(1475224132))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN '-1606375204' THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), ((vt0.c1)<<(1475224132)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN '-1606375204' THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, x'')) AND ((vt0.c0 COLLATE BINARY, (vt0.c1 IN ()), ((vt0.c1)<<(1475224132))))));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)) COLLATE BINARY);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (rt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (rt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (vt0.c0))))) IS TRUE)  as count FROM rt0, vt0 NATURAL JOIN v0);
SELECT ALL * FROM rt0, vt0 NATURAL JOIN v0 WHERE ((((rt0.c0 IN (rt0.c0))) BETWEEN (((vt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0))) AND ((+ (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ())) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (v0.c0)))) INNER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))=(((v0.c0) IS TRUE))) WHERE (((vt0.c0)-((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c2)>(rt0.c1)) THEN CAST(rt0.c2 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END DESC  NULLS FIRST, ((((CAST(rt0.c0 AS BLOB))AND(((vt0.c0)AND(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)-((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (v0.c0)))) INNER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))==(((v0.c0) IS TRUE))) ORDER BY CASE WHEN ((rt0.c2)>(rt0.c1)) THEN CAST(rt0.c2 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END DESC  NULLS FIRST, ((((CAST(rt0.c0 AS BLOB))AND(((vt0.c0)AND(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)) DESC);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (v0.c0)))) INNER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))=(((v0.c0) IS TRUE))) WHERE (((vt0.c0)-((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c2)>(rt0.c1)) THEN CAST(rt0.c2 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END DESC  NULLS FIRST, ((((CAST(rt0.c0 AS BLOB))AND(((vt0.c0)AND(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)-((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (v0.c0)))) INNER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))==(((v0.c0) IS TRUE))) ORDER BY CASE WHEN ((rt0.c2)>(rt0.c1)) THEN CAST(rt0.c2 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END DESC  NULLS FIRST, ((((CAST(rt0.c0 AS BLOB))AND(((vt0.c0)AND(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)) DESC);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON (- ((NOT (v0.c0)))) INNER JOIN vt0 ON ((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))=(((v0.c0) IS TRUE))) WHERE (((vt0.c0)-((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))))) ORDER BY CASE WHEN ((rt0.c2)>(rt0.c1)) THEN CAST(rt0.c2 AS REAL) ELSE CASE WHEN rt0.c1 THEN rt0.c1 END END DESC  NULLS FIRST, ((((CAST(rt0.c0 AS BLOB))AND(((vt0.c0)AND(rt0.c0)))))AND(rt0.c2 COLLATE NOCASE)) DESC;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (json_extract(CAST(rt0.c2 AS NUMERIC), (vt0.c1 IN ()))) ORDER BY ((vt0.c0)*((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(rt0.c2 AS NUMERIC), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((vt0.c0)*((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (json_extract(CAST(rt0.c2 AS NUMERIC), (vt0.c1 IN ()))) ORDER BY ((vt0.c0)*((~ (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_extract(CAST(rt0.c2 AS NUMERIC), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((vt0.c0)*((~ (vt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((COALESCE(rt0.c0, vt0.c0), ((vt0.c1)LIKE(v0.c0)), CAST(rt0.c2 AS REAL))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(vt0.c0)), (- (rt0.c2))))) WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((COALESCE(rt0.c0, vt0.c0), ((vt0.c1)LIKE(v0.c0)), CAST(rt0.c2 AS REAL))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(vt0.c0)), (- (rt0.c2))))));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((COALESCE(rt0.c0, vt0.c0), ((vt0.c1)LIKE(v0.c0)), CAST(rt0.c2 AS REAL))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(vt0.c0)), (- (rt0.c2))))) WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE BINARY) ISNULL)) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((COALESCE(rt0.c0, vt0.c0), ((vt0.c1)LIKE(v0.c0)), CAST(rt0.c2 AS REAL))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(vt0.c0)), (- (rt0.c2))))));
SELECT ALL * FROM v0, vt0 RIGHT OUTER JOIN rt0 ON (((v0.c0, rt0.c0, vt0.c0)) NOT BETWEEN ((COALESCE(rt0.c0, vt0.c0), ((vt0.c1)LIKE(v0.c0)), CAST(rt0.c2 AS REAL))) AND (((rt0.c1 IN ()), ((rt0.c2)LIKE(vt0.c0)), (- (rt0.c2))))) WHERE (((vt0.c0 COLLATE BINARY) ISNULL));
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), (vt0.c1 IN ()), ((vt0.c1) ISNULL)))<=((vt0.c0, '-259157295', NULL)))) ORDER BY (x'f554' COLLATE RTRIM IN (CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), (vt0.c1 IN ()), ((vt0.c1) ISNULL)))<=((vt0.c0, '-259157295', NULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (x'f554' COLLATE RTRIM IN (CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), (vt0.c1 IN ()), ((vt0.c1) ISNULL)))<=((vt0.c0, '-259157295', NULL)))) ORDER BY (x'f554' COLLATE RTRIM IN (CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), (vt0.c1 IN ()), ((vt0.c1) ISNULL)))<=((vt0.c0, '-259157295', NULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (x'f554' COLLATE RTRIM IN (CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)), (vt0.c1 IN ()), ((vt0.c1) ISNULL)))<=((vt0.c0, '-259157295', NULL)))) ORDER BY (x'f554' COLLATE RTRIM IN (CAST(vt0.c0 AS INTEGER))) DESC  NULLS FIRST;
SELECT * FROM rt0, v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (v0.c0) AND (CAST('9a' AS NUMERIC)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (v0.c0) AND (CAST('9a' AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (v0.c0) AND (CAST('9a' AS NUMERIC)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (v0.c0) AND (CAST('9a' AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0, vt0 ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, v0, vt0 WHERE (((((v0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1))) BETWEEN (v0.c0) AND (CAST('9a' AS NUMERIC)))) ORDER BY ((CASE rt0.c1  WHEN rt0.c2 THEN v0.c0 END) ISNULL)  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((((NOT (v0.c0)))>(v0.c0 COLLATE BINARY))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END  WHEN ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END  WHEN ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN v0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((NOT (v0.c0)))>(v0.c0 COLLATE BINARY))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END  WHEN ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END  WHEN ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN v0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((NOT (v0.c0)))>(v0.c0 COLLATE BINARY))) ORDER BY CASE CASE vt0.c1  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END  WHEN ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) THEN v0.c0 END DESC  NULLS FIRST;
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)-(1.757419798E9)))))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)-(1.757419798E9)))))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)-(1.757419798E9)))))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)-(1.757419798E9)))))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT * FROM v0 WHERE (((((((((v0.c0 COLLATE RTRIM)OR(((v0.c0)-(1.757419798E9)))))AND(CAST(v0.c0 AS INTEGER))))OR(v0.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY v0.c0;
SELECT * FROM vt0 WHERE (((vt0.c0)%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((vt0.c0)%(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY ((vt0.c0) NOTNULL) ASC  NULLS FIRST;
SELECT * FROM v0 WHERE (CASE (- (v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)LIKE(v0.c0)) WHEN UNLIKELY(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) WHEN v0.c0 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN NULL THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)LIKE(v0.c0)) WHEN UNLIKELY(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) WHEN v0.c0 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN NULL THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (- (v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)LIKE(v0.c0)) WHEN UNLIKELY(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) WHEN v0.c0 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN NULL THEN (~ (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (- (v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)LIKE(v0.c0)) WHEN UNLIKELY(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) WHEN v0.c0 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN NULL THEN (~ (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE (- (v0.c0))  WHEN ((v0.c0)LIKE(v0.c0)) THEN ((v0.c0) IS FALSE) WHEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END THEN ((v0.c0)LIKE(v0.c0)) WHEN UNLIKELY(v0.c0) THEN ((((v0.c0)AND(v0.c0)))OR(NULL)) WHEN v0.c0 COLLATE BINARY THEN v0.c0 COLLATE BINARY WHEN NULL THEN (~ (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((('') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((('') NOT NULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c2 WHERE ((('') NOT NULL));
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN ('') AND (vt0.c1))) BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('') AND (vt0.c1))) BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN ('') AND (vt0.c1))) BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN ('') AND (vt0.c1))) BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((vt0.c0) NOT BETWEEN ('') AND (vt0.c1))) BETWEEN (CASE rt0.c2  WHEN vt0.c1 THEN vt0.c0 END) AND ((((vt0.c1, NULL, vt0.c1)) BETWEEN ((rt0.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, rt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((('K|')) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c1))==((x''))))))) ORDER BY ((((x'c72f2d53') NOT NULL)) NOT BETWEEN (((vt0.c1)|(vt0.c1))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('K|')) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND (((((vt0.c1))=((x''))))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'c72f2d53') NOT NULL)) NOT BETWEEN (((vt0.c1)|(vt0.c1))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('K|')) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c1))==((x''))))))) ORDER BY ((((x'c72f2d53') NOT NULL)) NOT BETWEEN (((vt0.c1)|(vt0.c1))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('K|')) NOT BETWEEN ((((vt0.c0)<>(vt0.c0)))) AND (((((vt0.c1))=((x''))))))) IS TRUE)  as count FROM vt0 ORDER BY ((((x'c72f2d53') NOT NULL)) NOT BETWEEN (((vt0.c1)|(vt0.c1))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('K|')) NOT BETWEEN ((((vt0.c0)!=(vt0.c0)))) AND (((((vt0.c1))==((x''))))))) ORDER BY ((((x'c72f2d53') NOT NULL)) NOT BETWEEN (((vt0.c1)|(vt0.c1))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))IS NOT((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))IS NOT((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))IS NOT((+ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)*(v0.c0)))IS NOT((+ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)*(v0.c0)))IS NOT((+ (v0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))) ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(COALESCE(DISTINCT v0.c0, x''))))OR(((x'') IS TRUE))))OR((((x'', vt0.c1, vt0.c0))==((vt0.c1, v0.c0, vt0.c0))))))OR(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(COALESCE(DISTINCT v0.c0, x''))))OR(((x'') IS TRUE))))OR((((x'', vt0.c1, vt0.c0))==((vt0.c1, v0.c0, vt0.c0))))))OR(vt0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))) ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(COALESCE(DISTINCT v0.c0, x''))))OR(((x'') IS TRUE))))OR((((x'', vt0.c1, vt0.c0))==((vt0.c1, v0.c0, vt0.c0))))))OR(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(COALESCE(DISTINCT v0.c0, x''))))OR(((x'') IS TRUE))))OR((((x'', vt0.c1, vt0.c0))==((vt0.c1, v0.c0, vt0.c0))))))OR(vt0.c1)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((vt0.c0 IN ()) IN (CAST(vt0.c0 AS REAL)))) ORDER BY ((((((((CAST(vt0.c1 AS INTEGER))AND(COALESCE(DISTINCT v0.c0, x''))))OR(((x'') IS TRUE))))OR((((x'', vt0.c1, vt0.c0))==((vt0.c1, v0.c0, vt0.c0))))))OR(vt0.c1));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) AS NUMERIC)) ORDER BY (((vt0.c1 IN ()))>=((((vt0.c1, NULL, v0.c0, 0.3115424142079828, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))))), CASE WHEN ('' IN ()) THEN ((rt0.c2)>>(rt0.c1)) ELSE CAST(v0.c0 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c1 IN ()))>=((((vt0.c1, NULL, v0.c0, 0.3115424142079828, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))))), CASE WHEN ('' IN ()) THEN ((rt0.c2)>>(rt0.c1)) ELSE CAST(v0.c0 AS INTEGER) END ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) AS NUMERIC)) ORDER BY (((vt0.c1 IN ()))>=((((vt0.c1, NULL, v0.c0, 0.3115424142079828, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))))), CASE WHEN ('' IN ()) THEN ((rt0.c2)>>(rt0.c1)) ELSE CAST(v0.c0 AS INTEGER) END ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (((vt0.c1 IN ()))>=((((vt0.c1, NULL, v0.c0, 0.3115424142079828, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))))), CASE WHEN ('' IN ()) THEN ((rt0.c2)>>(rt0.c1)) ELSE CAST(v0.c0 AS INTEGER) END ASC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (CAST((((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) AS NUMERIC)) ORDER BY (((vt0.c1 IN ()))>=((((vt0.c1, NULL, v0.c0, 0.3115424142079828, rt0.c0)) BETWEEN ((rt0.c1, rt0.c0, vt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c0, rt0.c1, rt0.c0, rt0.c2))))), CASE WHEN ('' IN ()) THEN ((rt0.c2)>>(rt0.c1)) ELSE CAST(v0.c0 AS INTEGER) END ASC;
SELECT * FROM v0, vt0 WHERE (((((v0.c0) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) NOT NULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) NOT NULL)) NOT NULL));
SELECT ALL * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c1) AS NUMERIC)) ORDER BY (((((vt0.c1)*(vt0.c0)), (NOT (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<=((vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)*(vt0.c0)), (NOT (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<=((vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS BLOB))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c1) AS NUMERIC)) ORDER BY (((((vt0.c1)*(vt0.c0)), (NOT (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<=((vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS BLOB))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(DISTINCT vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1)*(vt0.c0)), (NOT (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<=((vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS BLOB))))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(TYPEOF(DISTINCT vt0.c1) AS NUMERIC)) ORDER BY (((((vt0.c1)*(vt0.c0)), (NOT (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))<=((vt0.c0, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS BLOB))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (((((rt0.c0)OR(vt0.c1)))OR(rt0.c1))))) ORDER BY ((((rt0.c2))>=((rt0.c1))) IN ())  NULLS FIRST, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM  NULLS LAST, UPPER(NULL);
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)OR(vt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c2))>=((rt0.c1))) IN ())  NULLS FIRST, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM  NULLS LAST, UPPER(NULL));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (((((rt0.c0)OR(vt0.c1)))OR(rt0.c1))))) ORDER BY ((((rt0.c2))>=((rt0.c1))) IN ())  NULLS FIRST, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM  NULLS LAST, UPPER(NULL);
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)OR(vt0.c1)))OR(rt0.c1))))) IS TRUE)  as count FROM vt0, rt0, v0 ORDER BY ((((rt0.c2))>=((rt0.c1))) IN ())  NULLS FIRST, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM  NULLS LAST, UPPER(NULL));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 WHERE ((- (((((rt0.c0)OR(vt0.c1)))OR(rt0.c1))))) ORDER BY ((((rt0.c2))>=((rt0.c1))) IN ())  NULLS FIRST, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) COLLATE RTRIM  NULLS LAST, UPPER(NULL);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (rt0.c2);
SELECT * FROM v0, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN ()) AS NUMERIC));
SELECT * FROM v0, rt0, vt0 WHERE ('') ORDER BY ((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))>(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, '', (((x'')) NOT BETWEEN ((NULL)) AND ((((vt0.c0)<<(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))>(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, '', (((x'')) NOT BETWEEN ((NULL)) AND ((((vt0.c0)<<(vt0.c1))))) ASC);
SELECT * FROM v0, rt0, vt0 WHERE ('') ORDER BY ((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))>(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, '', (((x'')) NOT BETWEEN ((NULL)) AND ((((vt0.c0)<<(vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY ((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))>(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, '', (((x'')) NOT BETWEEN ((NULL)) AND ((((vt0.c0)<<(vt0.c1))))) ASC);
SELECT * FROM v0, rt0, vt0 WHERE ('') ORDER BY ((((((v0.c0)OR(rt0.c2)))OR(rt0.c1)))>(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c1)))) DESC, '', (((x'')) NOT BETWEEN ((NULL)) AND ((((vt0.c0)<<(vt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND((rt0.c2 IN ()))))OR((- (rt0.c1))))) ORDER BY (((NULL))<=((((rt0.c0)AND(rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND((rt0.c2 IN ()))))OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((NULL))<=((((rt0.c0)AND(rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND((rt0.c2 IN ()))))OR((- (rt0.c1))))) ORDER BY (((NULL))<=((((rt0.c0)AND(rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND((rt0.c2 IN ()))))OR((- (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((NULL))<=((((rt0.c0)AND(rt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END)AND((rt0.c2 IN ()))))OR((- (rt0.c1))))) ORDER BY (((NULL))<=((((rt0.c0)AND(rt0.c1))))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) WHERE (v0.c0) ORDER BY CAST(LIKELY(v0.c0) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ORDER BY CAST(LIKELY(v0.c0) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) WHERE (v0.c0) ORDER BY CAST(LIKELY(v0.c0) AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) ORDER BY CAST(LIKELY(v0.c0) AS NUMERIC) DESC  NULLS LAST);
SELECT ALL * FROM v0 CROSS JOIN vt0 ON CAST((((v0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS TEXT) WHERE (v0.c0) ORDER BY CAST(LIKELY(v0.c0) AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((CAST(v0.c0 AS REAL))/(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL))/(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((CAST(v0.c0 AS REAL))/(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL))/(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((v0.c0 COLLATE NOCASE IN ())) ORDER BY ((CAST(v0.c0 AS REAL))/(v0.c0 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c0) ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c0) ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c0) ORDER BY (NOT (rt0.c2 COLLATE NOCASE))  NULLS LAST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON DATE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0)), ('546506624' IN (vt0.c0, rt0.c0))) WHERE (CASE WHEN ((rt0.c0)-(vt0.c0)) THEN 0.2874635011678497 WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)OR(x'208f')))AND(NULL)) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)-(vt0.c0)) THEN 0.2874635011678497 WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)OR(x'208f')))AND(NULL)) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON DATE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0)), ('546506624' IN (vt0.c0, rt0.c0))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON DATE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0)), ('546506624' IN (vt0.c0, rt0.c0))) WHERE (CASE WHEN ((rt0.c0)-(vt0.c0)) THEN 0.2874635011678497 WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)OR(x'208f')))AND(NULL)) THEN (+ (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c0)-(vt0.c0)) THEN 0.2874635011678497 WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)OR(x'208f')))AND(NULL)) THEN (+ (rt0.c1)) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON DATE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0)), ('546506624' IN (vt0.c0, rt0.c0))));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON DATE(((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)), ((vt0.c0)>=(vt0.c0)), ('546506624' IN (vt0.c0, rt0.c0))) WHERE (CASE WHEN ((rt0.c0)-(vt0.c0)) THEN 0.2874635011678497 WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c1 END WHEN ((((rt0.c2)OR(x'208f')))AND(NULL)) THEN (+ (rt0.c1)) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(CAST(rt0.c0 AS INTEGER))) ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (rt0.c1 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (rt0.c1 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(CAST(rt0.c0 AS INTEGER))) ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (rt0.c1 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(CAST(rt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (rt0.c1 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) END ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (LOWER(CAST(rt0.c0 AS INTEGER))) ORDER BY CASE vt0.c0  WHEN rt0.c0 COLLATE NOCASE THEN CASE WHEN vt0.c0 THEN rt0.c2 ELSE rt0.c0 END WHEN (rt0.c1 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)=(rt0.c0)) END ASC;
SELECT ALL * FROM vt0 INNER JOIN v0 ON CAST((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC) WHERE ((((- (v0.c0)))!=(((vt0.c1)<>(v0.c0))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))!=(((vt0.c1)<>(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC) ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON CAST((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC) WHERE ((((- (v0.c0)))!=(((vt0.c1)<>(v0.c0))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((- (v0.c0)))!=(((vt0.c1)<>(v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON CAST((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC) ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 INNER JOIN v0 ON CAST((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS NUMERIC) WHERE ((((- (v0.c0)))!=(((vt0.c1)<>(v0.c0))))) ORDER BY vt0.c1 ASC;
SELECT * FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((((((((((((vt0.c1)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(vt0.c1)))AND((((rt0.c2))<=((48829525))))))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE 'G >6' END)) WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY CASE WHEN '1464243374' THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((((vt0.c1)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(vt0.c1)))AND((((rt0.c2))<=((48829525))))))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE 'G >6' END)) ORDER BY CASE WHEN '1464243374' THEN (vt0.c1 IN ()) END  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((((((((((((vt0.c1)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(vt0.c1)))AND((((rt0.c2))<=((48829525))))))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE 'G >6' END)) WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY CASE WHEN '1464243374' THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((((((((((((vt0.c1)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(vt0.c1)))AND((((rt0.c2))<=((48829525))))))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE 'G >6' END)) ORDER BY CASE WHEN '1464243374' THEN (vt0.c1 IN ()) END  NULLS FIRST);
SELECT * FROM v0 NOT INDEXED, vt0 CROSS JOIN rt0 ON ((((((((((((vt0.c1)OR(rt0.c2)))AND(v0.c0)))AND(rt0.c1)))AND(vt0.c1)))AND((((rt0.c2))<=((48829525))))))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c0 ELSE 'G >6' END)) WHERE (((((rt0.c0) IS TRUE)) NOT NULL)) ORDER BY CASE WHEN '1464243374' THEN (vt0.c1 IN ()) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, v0);
SELECT COUNT(*) FROM rt0, v0 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c0))) AND ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (((rt0.c1)!=(rt0.c0))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c0))) AND ((+ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1))) BETWEEN (((rt0.c1)!=(rt0.c0))) AND ((+ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NOT (rt0.c1))) BETWEEN (((rt0.c1)<>(rt0.c0))) AND ((+ (rt0.c1)))));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY (((LIKELIHOOD(v0.c0, 0.8671085643591453)))==(((((v0.c0))>((v0.c0)))))) DESC  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)&(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((LIKELIHOOD(v0.c0, 0.8671085643591453)))=(((((v0.c0))>((v0.c0)))))) DESC  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)&(v0.c0)) END DESC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY (((LIKELIHOOD(v0.c0, 0.8671085643591453)))==(((((v0.c0))>((v0.c0)))))) DESC  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)&(v0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((LIKELIHOOD(v0.c0, 0.8671085643591453)))=(((((v0.c0))>((v0.c0)))))) DESC  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)&(v0.c0)) END DESC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY (((LIKELIHOOD(v0.c0, 0.8671085643591453)))==(((((v0.c0))>((v0.c0)))))) DESC  NULLS FIRST, CASE v0.c0 COLLATE RTRIM  WHEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 END THEN ((v0.c0)&(v0.c0)) END DESC;
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((vt0.c1 IN (vt0.c0)))=(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC, ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c0)))==(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC, ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((vt0.c1 IN (vt0.c0)))=(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC, ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN (vt0.c0)))==(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC, ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST((NOT (vt0.c0)) AS INTEGER)) ORDER BY (((vt0.c1 IN (vt0.c0)))=(((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)))) DESC, ((vt0.c0 IN ()) IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN ((rt0.c1 IN (rt0.c1, 853148025))) AND ((((rt0.c2))>((rt0.c0))))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN ((rt0.c1 IN (rt0.c1, 853148025))) AND ((((rt0.c2))>((rt0.c0))))));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN ((rt0.c1 IN (rt0.c1, 853148025))) AND ((((rt0.c2))>((rt0.c0))))) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, vt0 CROSS JOIN rt0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN ((rt0.c1 IN (rt0.c1, 853148025))) AND ((((rt0.c2))>((rt0.c0))))));
SELECT COUNT(*) FROM v0, vt0 CROSS JOIN rt0 ON ((((rt0.c1)>=(v0.c0))) BETWEEN ((rt0.c1 IN (rt0.c1, 853148025))) AND ((((rt0.c2))>((rt0.c0))))) WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt0.c2 THEN rt0.c2 END AS BLOB)) IS TRUE)  as count FROM v0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM v0 NATURAL JOIN rt0 WHERE (CAST(CASE WHEN rt0.c2 THEN rt0.c2 END AS BLOB));
SELECT ALL * FROM v0 INNER JOIN vt0 ON '1825793402' WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0, vt0.c0)) AND ((vt0.c1, ((vt0.c0) IS FALSE), ((vt0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON '1825793402' ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0, vt0.c0)) AND ((vt0.c1, ((vt0.c0) IS FALSE), ((vt0.c0)*(v0.c0))))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON '1825793402' WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0, vt0.c0)) AND ((vt0.c1, ((vt0.c0) IS FALSE), ((vt0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) ISNULL)) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON '1825793402' ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0, vt0.c0)) AND ((vt0.c1, ((vt0.c0) IS FALSE), ((vt0.c0)*(v0.c0))))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON '1825793402' WHERE (((((vt0.c1) ISNULL)) IS TRUE)) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT NULL), vt0.c0, vt0.c0)) AND ((vt0.c1, ((vt0.c0) IS FALSE), ((vt0.c0)*(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS NUMERIC))<=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS NUMERIC))<=((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c1 COLLATE RTRIM))) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN (~ (vt0.c0)) END  NULLS FIRST, (NOT (UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN (~ (vt0.c0)) END  NULLS FIRST, (NOT (UNLIKELY(vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c1 COLLATE RTRIM))) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN (~ (vt0.c0)) END  NULLS FIRST, (NOT (UNLIKELY(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN (~ (vt0.c0)) END  NULLS FIRST, (NOT (UNLIKELY(vt0.c0))));
SELECT * FROM vt0 WHERE (((((vt0.c0) ISNULL)) BETWEEN (((vt0.c1) NOT NULL)) AND (vt0.c1 COLLATE RTRIM))) ORDER BY CASE CAST(vt0.c1 AS REAL)  WHEN ((vt0.c0) IS TRUE) THEN (~ (vt0.c0)) END  NULLS FIRST, (NOT (UNLIKELY(vt0.c0)));
SELECT * FROM vt0, rt0 WHERE (CAST(LIKE(x'', vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(x'', vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(LIKE(x'', vt0.c0) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(x'', vt0.c0) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(LIKE(x'', vt0.c0) AS REAL));
SELECT * FROM rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((+ (rt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('1112339406');
SELECT SUM(count) FROM (SELECT (('1112339406') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('1112339406');
SELECT SUM(count) FROM (SELECT (('1112339406') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('1112339406');
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (LIKELY(DISTINCT (~ (vt0.c0)))) ORDER BY ((vt0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c1 IN ()) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (LIKELY(DISTINCT (~ (vt0.c0)))) ORDER BY ((vt0.c1 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (~ (vt0.c0)))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY ((vt0.c1 IN ()) IN ()) DESC);
SELECT ALL COUNT(*) FROM v0, vt0, rt0 WHERE (LIKELY(DISTINCT (~ (vt0.c0)))) ORDER BY ((vt0.c1 IN ()) IN ()) DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN ((+ (NULL)), (vt0.c0 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN ((+ (NULL)), (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN ((+ (NULL)), (vt0.c0 IN ())))) ORDER BY vt0.c1;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN ((+ (NULL)), (vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) IN ((+ (NULL)), (vt0.c0 IN ())))) ORDER BY vt0.c1;
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c1)))<<(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))<<(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c1)))<<(CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))<<(CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM rt0, v0 NATURAL JOIN vt0);
SELECT * FROM rt0, v0 NATURAL JOIN vt0 WHERE ((((~ (vt0.c1)))<<(CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)AND(rt0.c1))  WHEN (- (vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE '' END WHERE ((- (((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)AND(rt0.c1))  WHEN (- (vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE '' END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)AND(rt0.c1))  WHEN (- (vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE '' END WHERE ((- (((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)AND(rt0.c1))  WHEN (- (vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE '' END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON CASE ((vt0.c1)AND(rt0.c1))  WHEN (- (vt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE '' END WHERE ((- (((rt0.c1) NOT NULL))));
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1))%(((vt0.c1)=(0xffffffffd4b76ce4)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c1))%(((vt0.c1)==(0Xffffffffd4b76ce4))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1))%(((vt0.c1)=(0xffffffffd4b76ce4)))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c1))%(((vt0.c1)==(0Xffffffffd4b76ce4))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1))%(((vt0.c1)=(0xffffffffd4b76ce4)))));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS REAL) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((CAST(vt0.c1 AS REAL) IN ()));
SELECT ALL * FROM v0 WHERE (((CAST('-1793580025' AS INTEGER)) BETWEEN (json_valid(v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST('-1793580025' AS INTEGER)) BETWEEN (json_valid(v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST('-1793580025' AS INTEGER)) BETWEEN (json_valid(v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ((((CAST('-1793580025' AS INTEGER)) BETWEEN (json_valid(v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST('-1793580025' AS INTEGER)) BETWEEN (json_valid(v0.c0)) AND ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((0.6066918160515308)-((~ (v0.c0)))) WHERE ((((('Fw8**')AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) ORDER BY (((rt0.c1)==(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((('Fw8**')AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((0.6066918160515308)-((~ (v0.c0)))) ORDER BY (((rt0.c1)==(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((0.6066918160515308)-((~ (v0.c0)))) WHERE ((((('Fw8**')AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) ORDER BY (((rt0.c1)==(rt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((((('Fw8**')AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM rt0 INNER JOIN v0 ON ((0.6066918160515308)-((~ (v0.c0)))) ORDER BY (((rt0.c1)==(rt0.c0)) IN ()));
SELECT ALL * FROM rt0 INNER JOIN v0 ON ((0.6066918160515308)-((~ (v0.c0)))) WHERE ((((('Fw8**')AND(CASE WHEN v0.c0 THEN v0.c0 END)))OR(((((rt0.c2)OR(rt0.c0)))AND(v0.c0))))) ORDER BY (((rt0.c1)==(rt0.c0)) IN ());
SELECT * FROM rt0 NOT INDEXED, vt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0 NOT INDEXED, vt0, v0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0 NOT INDEXED, vt0, v0 WHERE (rt0.c2);
