-- Time: 2024/06/09 21:42:59
-- Database: database25
-- Database version: 3.40.0
-- seed value: 1209507225
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 2ms;
END; -- 2ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
VACUUM; -- 1ms;
REINDEX BINARY; -- 3ms;
REINDEX; -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0x5f1fce3c); -- 1ms;
INSERT INTO vt0(vt0) VALUES('merge=-976535848,3');\n; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA journal_size_limit = -1695989640982096252; -- 0ms;
UPDATE rt1 SET (c0, c1, c1, c2)=(-9.76535848E8, '1595919932', NULL, 0xffffffffd467aae3); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA main.optimize; -- 10ms;
INSERT OR ROLLBACK INTO rt1(c1) VALUES (848916288); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X2c90b5a8); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 1ms;
REINDEX; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1797846282 unordered noskipscan'); -- 8ms;
PRAGMA temp.locking_mode; -- 0ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 4); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '58476'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '33154'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1816965699); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 769173219);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 595383215); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=1'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1595919932' IN ()))OR(' ')))AND((((x''))>((0.016750926631736385))))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET (c0)=('2038021862'); -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1697708259); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11765'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49944'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c0, c2) VALUES ('-731403549', '-1797846282', 'R5㹘0UK'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c0) VALUES (NULL, '-1902009779', 'ꫣ\rt?츼N'), (NULL, NULL, NULL), (-1.449050536E9, 0.313502751168785, 0Xfffffffff026c5c0); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('164865873'); -- 0ms;
PRAGMA automatic_index; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0.6837580361748272); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '5468'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c2)=('J#'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=x'ef5a'; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0.313502751168785'); -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c0) VALUES (x'fe65', 164865873), ('', x''), (NULL, 0x5dd25bdb); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (0.028419838243848194); -- 0ms;
REINDEX; -- 4ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 738475927); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6232'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1366280011);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 790122851); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0='' WHERE (+ ((- (vt0.c0)))); -- 0ms;
ANALYZE main; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (x''); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(0.28696528794779785); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA threads = -212293859226591663; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (-1960273241); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c2=1.7976931348623157E308, c0='-265894464'; -- 12ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '53119'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=407120040,15');\n; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL) WHERE (rt1.c0 IN ()) COLLATE NOCASE; -- 1ms;
PRAGMA main.short_column_names = false; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (NULL); -- 0ms;
PRAGMA locking_mode; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.6098645112388935, c0=0.6837580361748272; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
INSERT OR ABORT INTO rt1(c1, c2, c0) VALUES (NULL, NULL, 0.5058896872013618), (0xffffffff8b289aa7, 0.9455386763862536, 0xffffffffae9038b5), (x'', NULL, '7+'); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (x'3d0e'); -- 4ms;
UPDATE OR IGNORE vt0 SET c0=x'4991', c0=x''; -- 30ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '24526'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
VACUUM; -- 1ms;
PRAGMA locking_mode; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
REINDEX RTRIM; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0) VALUES (0.8177578373537527, NULL, '-1960273241'), (NULL, NULL, 'sMXyl㺞qz0'), (-1.366280011E9, 0.6858295518135593, NULL); -- 1ms;
UPDATE vt0 SET c0=x'e124'; -- 0ms;
ANALYZE; -- 3ms;
INSERT OR IGNORE INTO vt0 VALUES ('787962062'), (NULL), (x''); -- 21ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('+~,]^?D'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('nowO n'), (NULL), (x''); -- 0ms;
ANALYZE main; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((- (LOWER(rt1.c0)))) ORDER BY (- (0.3509934072324882))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (LOWER(rt1.c0)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (- (0.3509934072324882))  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((- (LOWER(rt1.c0)))) ORDER BY (- (0.3509934072324882))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (LOWER(rt1.c0)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (- (0.3509934072324882))  NULLS FIRST);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((- (LOWER(rt1.c0)))) ORDER BY (- (0.3509934072324882))  NULLS FIRST;
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CAST((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c1))) AS TEXT) WHERE (CASE WHEN NULL THEN ((vt1.c0) IS TRUE) END) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt1.c1 IN ()) IN (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CAST((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c1))) AS TEXT) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt1.c1 IN ()) IN (NULL))  NULLS LAST);
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CAST((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c1))) AS TEXT) WHERE (CASE WHEN NULL THEN ((vt1.c0) IS TRUE) END) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt1.c1 IN ()) IN (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN ((vt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CAST((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c1))) AS TEXT) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt1.c1 IN ()) IN (NULL))  NULLS LAST);
SELECT * FROM vt1, rt1 RIGHT OUTER JOIN vt0 ON CAST((((rt1.c2)) BETWEEN ((vt1.c0)) AND ((rt1.c1))) AS TEXT) WHERE (CASE WHEN NULL THEN ((vt1.c0) IS TRUE) END) ORDER BY (+ (vt1.c0 COLLATE NOCASE))  NULLS LAST, ((rt1.c1 IN ()) IN (NULL))  NULLS LAST;
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON 0.3392839718309937 FULL OUTER JOIN vt0 ON 0.5298843213050067 LEFT OUTER JOIN t0 ON load_extension((t0.c0 IN ()), (NOT (vt0.c0))) WHERE (CAST(UNICODE(vt0.c0) AS TEXT)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(vt0.c0) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON 0.3392839718309937 FULL OUTER JOIN vt0 ON 0.5298843213050067 LEFT OUTER JOIN t0 ON load_extension((t0.c0 IN ()), (NOT (vt0.c0))) ORDER BY vt1.c0  NULLS FIRST);
SELECT ALL * FROM rt1 CROSS JOIN vt1 ON 0.3392839718309937 FULL OUTER JOIN vt0 ON 0.5298843213050067 LEFT OUTER JOIN t0 ON load_extension((t0.c0 IN ()), (NOT (vt0.c0))) WHERE (CAST(UNICODE(vt0.c0) AS TEXT)) ORDER BY vt1.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNICODE(vt0.c0) AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN vt1 ON 0.3392839718309937 FULL OUTER JOIN vt0 ON 0.5298843213050067 LEFT OUTER JOIN t0 ON load_extension((t0.c0 IN ()), (NOT (vt0.c0))) ORDER BY vt1.c0  NULLS FIRST);
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)AND(0x37747467)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c2)))IS(((rt1.c0)IS NOT(rt1.c2)))) WHERE ((((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) ISNULL)) ORDER BY (+ (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS REAL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)AND(0X37747467)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c2)))IS(((rt1.c0)IS NOT(rt1.c2)))) ORDER BY (+ (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS REAL) AS BLOB));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)AND(0x37747467)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c2)))IS(((rt1.c0)IS NOT(rt1.c2)))) WHERE ((((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) ISNULL)) ORDER BY (+ (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS REAL) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) ISNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)AND(0X37747467)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c2)))IS(((rt1.c0)IS NOT(rt1.c2)))) ORDER BY (+ (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS REAL) AS BLOB));
SELECT * FROM vt0 CROSS JOIN rt1 ON ((((((((((rt1.c0)AND(0x37747467)))AND(vt0.c0)))AND(rt1.c1)))OR(rt1.c2)))IS(((rt1.c0)IS NOT(rt1.c2)))) WHERE ((((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c0)))) ISNULL)) ORDER BY (+ (rt1.c2)) COLLATE BINARY DESC, CAST(CAST(rt1.c0 AS REAL) AS BLOB);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE WHERE ((~ (TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT (((~ (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE WHERE ((~ (TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT (((~ (TOTAL_CHANGES()))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((((((((x'')OR(t0.c0)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE WHERE ((~ (TOTAL_CHANGES())));
SELECT * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))<<((((rt1.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, ''))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<<((((rt1.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, '')))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))<<((((rt1.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, ''))))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS BLOB))<<((((rt1.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, '')))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS BLOB))<<((((rt1.c0, rt1.c0, rt1.c0))<((rt1.c1, rt1.c0, ''))))));
SELECT * FROM vt1, rt1 WHERE ((TYPEOF(rt1.c1) IN ())) ORDER BY rtreenode(((vt1.c0)<<(rt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN NULL END) ASC;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(rt1.c1) IN ())) IS TRUE)  as count FROM vt1, rt1 ORDER BY rtreenode(((vt1.c0)<<(rt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN NULL END) ASC);
SELECT * FROM vt1, rt1 WHERE ((TYPEOF(rt1.c1) IN ())) ORDER BY rtreenode(((vt1.c0)<<(rt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN NULL END) ASC;
SELECT SUM(count) FROM (SELECT ALL (((TYPEOF(rt1.c1) IN ())) IS TRUE)  as count FROM vt1, rt1 ORDER BY rtreenode(((vt1.c0)<<(rt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN NULL END) ASC);
SELECT * FROM vt1, rt1 WHERE ((TYPEOF(rt1.c1) IN ())) ORDER BY rtreenode(((vt1.c0)<<(rt1.c1)), CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN NULL END) ASC;
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt1 WHERE (x'') ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt1 ORDER BY rt1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt1 WHERE (x'') ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0 NATURAL JOIN rt1 ORDER BY rt1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 NATURAL JOIN rt1 WHERE (x'') ORDER BY rt1.c2 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE ((vt1.c0)||(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'4203') AND (t0.c0)) THEN ((vt1.c0)!=(t0.c0)) ELSE ((vt1.c0)OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)||(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'4203') AND (t0.c0)) THEN ((vt1.c0)<>(t0.c0)) ELSE ((vt1.c0)OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE ((vt1.c0)||(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'4203') AND (t0.c0)) THEN ((vt1.c0)!=(t0.c0)) ELSE ((vt1.c0)OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0)||(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'4203') AND (t0.c0)) THEN ((vt1.c0)<>(t0.c0)) ELSE ((vt1.c0)OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, t0);
SELECT ALL COUNT(*) FROM vt1, t0 WHERE (CASE ((vt1.c0)||(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (x'4203') AND (t0.c0)) THEN ((vt1.c0)!=(t0.c0)) ELSE ((vt1.c0)OR(vt1.c0)) END);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (UNLIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (UNLIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (UNLIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (UNLIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) AND (UNLIKELY(DISTINCT vt0.c0))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c0 AS REAL)) IS FALSE) LEFT OUTER JOIN vt0 ON ((x'')*(((t0.c0) NOTNULL))) WHERE ((NOT ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (t0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c0 AS REAL)) IS FALSE) LEFT OUTER JOIN vt0 ON ((x'')*(((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c0 AS REAL)) IS FALSE) LEFT OUTER JOIN vt0 ON ((x'')*(((t0.c0) NOTNULL))) WHERE ((NOT ((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (t0.c0))))) IS TRUE)  as count FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c0 AS REAL)) IS FALSE) LEFT OUTER JOIN vt0 ON ((x'')*(((t0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt1 INNER JOIN t0 ON ((CAST(vt1.c0 AS REAL)) IS FALSE) LEFT OUTER JOIN vt0 ON ((x'')*(((t0.c0) NOTNULL))) WHERE ((NOT ((~ (t0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (CHAR((NOT (rt1.c0)), ((rt1.c1) IS FALSE), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN x'2d8a' THEN rt1.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.4001431234477526 END));
SELECT SUM(count) FROM (SELECT ((CHAR((NOT (rt1.c0)), ((rt1.c1) IS FALSE), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN x'2d8a' THEN rt1.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.4001431234477526 END)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CHAR((NOT (rt1.c0)), ((rt1.c1) IS FALSE), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN x'2d8a' THEN rt1.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.4001431234477526 END));
SELECT SUM(count) FROM (SELECT ((CHAR((NOT (rt1.c0)), ((rt1.c1) IS FALSE), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN x'2d8a' THEN rt1.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.4001431234477526 END)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CHAR((NOT (rt1.c0)), ((rt1.c1) IS FALSE), CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN x'2d8a' THEN rt1.c2 WHEN rt1.c2 THEN x'' WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN 0.4001431234477526 END));
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (LIKELY(DISTINCT (((vt1.c0))>=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((vt1.c0))>=((rt1.c2))))) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (LIKELY(DISTINCT (((vt1.c0))>=((rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT (((vt1.c0))>=((rt1.c2))))) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (LIKELY(DISTINCT (((vt1.c0))>=((rt1.c2)))));
SELECT * FROM t0, vt1 WHERE (x'6d39');
SELECT SUM(count) FROM (SELECT ALL ((x'6d39') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (x'6d39');
SELECT SUM(count) FROM (SELECT ALL ((x'6d39') IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (x'6d39');
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT COUNT(*) FROM t0, vt1 WHERE (((vt1.c0 COLLATE NOCASE) NOTNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c0) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7778867803593266 IN ()) WHERE ((((CASE WHEN rt1.c2 THEN vt0.c0 END))<((((((881557112)OR(rt1.c1)))OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c2 THEN vt0.c0 END))<((((((881557112)OR(rt1.c1)))OR(rt1.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c0) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7778867803593266 IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c0) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7778867803593266 IN ()) WHERE ((((CASE WHEN rt1.c2 THEN vt0.c0 END))<((((((881557112)OR(rt1.c1)))OR(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((CASE WHEN rt1.c2 THEN vt0.c0 END))<((((((881557112)OR(rt1.c1)))OR(rt1.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((rt1.c0) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7778867803593266 IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((rt1.c0) IS TRUE) COLLATE RTRIM LEFT OUTER JOIN vt1 ON (0.7778867803593266 IN ()) WHERE ((((CASE WHEN rt1.c2 THEN vt0.c0 END))<((((((881557112)OR(rt1.c1)))OR(rt1.c1))))));
SELECT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON CAST(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) AS INTEGER) WHERE (highlight(CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN 0.7814124930197827 END, vt0.c0 COLLATE BINARY, rt1.c0, rt1.c2 COLLATE NOCASE)) ORDER BY (((vt0.c0 IN (0.8177578373537527))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN 0.7814124930197827 END, vt0.c0 COLLATE BINARY, rt1.c0, rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN vt1 ON CAST(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) AS INTEGER) ORDER BY (((vt0.c0 IN (0.8177578373537527))) ISNULL)  NULLS LAST);
SELECT * FROM rt1, vt0 FULL OUTER JOIN vt1 ON CAST(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) AS INTEGER) WHERE (highlight(CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN 0.7814124930197827 END, vt0.c0 COLLATE BINARY, rt1.c0, rt1.c2 COLLATE NOCASE)) ORDER BY (((vt0.c0 IN (0.8177578373537527))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((highlight(CASE WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c0 WHEN rt1.c0 THEN 0.7814124930197827 END, vt0.c0 COLLATE BINARY, rt1.c0, rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, vt0 FULL OUTER JOIN vt1 ON CAST(((((rt1.c1)OR(rt1.c0)))AND(rt1.c1)) AS INTEGER) ORDER BY (((vt0.c0 IN (0.8177578373537527))) ISNULL)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE ((t0.c0 IN ())) ORDER BY ((((vt1.c0)<(0x184428a8))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0 ORDER BY ((((vt1.c0)<(0X184428a8))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE ((t0.c0 IN ())) ORDER BY ((((vt1.c0)<(0x184428a8))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((t0.c0 IN ())) IS TRUE)  as count FROM vt1, vt0 NATURAL JOIN t0 ORDER BY ((((vt1.c0)<(0X184428a8))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 NATURAL JOIN t0 WHERE ((t0.c0 IN ())) ORDER BY ((((vt1.c0)<(0x184428a8))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (CAST(((vt0.c0)LIKE(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(vt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (CAST(((vt0.c0)LIKE(vt1.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)LIKE(vt1.c0)) AS REAL)) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (CAST(((vt0.c0)LIKE(vt1.c0)) AS REAL));
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (COALESCE((((t0.c0))>=((t0.c0))), (NOT (vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((t0.c0))>=((t0.c0))), (NOT (vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)*(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (COALESCE((((t0.c0))>=((t0.c0))), (NOT (vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE((((t0.c0))>=((t0.c0))), (NOT (vt1.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)*(vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, vt1 WHERE (COALESCE((((t0.c0))>=((t0.c0))), (NOT (vt1.c0)))) ORDER BY ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0)*(vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((x'd61026aa')&(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ('-64861518', t0.c0)) THEN t0.c0 WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN COALESCE(t0.c0, t0.c0, 0.04273463633970631, t0.c0) ELSE t0.c0 COLLATE BINARY END) ORDER BY (((((('2038021862')<<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((x'd61026aa')&(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ('-64861518', t0.c0)) THEN t0.c0 WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN COALESCE(t0.c0, t0.c0, 0.04273463633970631, t0.c0) ELSE t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((((('2038021862')<<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((NOT (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((x'd61026aa')&(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ('-64861518', t0.c0)) THEN t0.c0 WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN COALESCE(t0.c0, t0.c0, 0.04273463633970631, t0.c0) ELSE t0.c0 COLLATE BINARY END) ORDER BY (((((('2038021862')<<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((x'd61026aa')&(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ('-64861518', t0.c0)) THEN t0.c0 WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN COALESCE(t0.c0, t0.c0, 0.04273463633970631, t0.c0) ELSE t0.c0 COLLATE BINARY END) IS TRUE)  as count FROM t0 ORDER BY (((((('2038021862')<<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((NOT (t0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((x'd61026aa')&(t0.c0))  WHEN (~ (t0.c0)) THEN ((t0.c0) IS FALSE) WHEN (t0.c0 IN ('-64861518', t0.c0)) THEN t0.c0 WHEN (((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))) THEN COALESCE(t0.c0, t0.c0, 0.04273463633970631, t0.c0) ELSE t0.c0 COLLATE BINARY END) ORDER BY (((((('2038021862')<<(t0.c0)))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((NOT (t0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((t0.c0 IN (rt1.c2)) IN ((rt1.c2 IN (t0.c0)), rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (rt1.c2)) IN ((rt1.c2 IN (t0.c0)), rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((t0.c0 IN (rt1.c2)) IN ((rt1.c2 IN (t0.c0)), rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN (rt1.c2)) IN ((rt1.c2 IN (t0.c0)), rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0, t0);
SELECT COUNT(*) FROM rt1, vt0, t0 WHERE (((t0.c0 IN (rt1.c2)) IN ((rt1.c2 IN (t0.c0)), rt1.c0 COLLATE BINARY)));
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0)))<(((t0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))<(((t0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0)))<(((t0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))<(((t0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((vt0.c0 IN (vt0.c0)))<(((t0.c0)GLOB(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)*(vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)*(vt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON (((((rt1.c0))<((rt1.c1))))/(CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE RTRIM CROSS JOIN vt0 ON ((CAST(0.20670567481266255 AS BLOB)) ISNULL) WHERE (CAST(0.55930782606385 AS TEXT)) ORDER BY (NOT (((rt1.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.55930782606385 AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((rt1.c0))<((rt1.c1))))/(CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE RTRIM CROSS JOIN vt0 ON ((CAST(0.20670567481266255 AS BLOB)) ISNULL) ORDER BY (NOT (((rt1.c2) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON (((((rt1.c0))<((rt1.c1))))/(CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE RTRIM CROSS JOIN vt0 ON ((CAST(0.20670567481266255 AS BLOB)) ISNULL) WHERE (CAST(0.55930782606385 AS TEXT)) ORDER BY (NOT (((rt1.c2) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.55930782606385 AS TEXT)) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((rt1.c0))<((rt1.c1))))/(CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE RTRIM CROSS JOIN vt0 ON ((CAST(0.20670567481266255 AS BLOB)) ISNULL) ORDER BY (NOT (((rt1.c2) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON (((((rt1.c0))<((rt1.c1))))/(CAST(rt1.c1 AS BLOB))) FULL OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN rt1.c2 ELSE x'' END COLLATE RTRIM CROSS JOIN vt0 ON ((CAST(0.20670567481266255 AS BLOB)) ISNULL) WHERE (CAST(0.55930782606385 AS TEXT)) ORDER BY (NOT (((rt1.c2) IS FALSE)))  NULLS LAST;
SELECT * FROM rt1, vt0, vt1 WHERE ((- (LOWER(vt1.c0)))) ORDER BY 0X578fbc2e;
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(vt1.c0)))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY 0X578fbc2e);
SELECT * FROM rt1, vt0, vt1 WHERE ((- (LOWER(vt1.c0)))) ORDER BY 0X578fbc2e;
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(vt1.c0)))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY 0X578fbc2e);
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE (CAST((((vt0.c0, rt1.c0, 0Xfffffffffc224ab2)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, rt1.c2, -258471968))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, rt1.c0, 0Xfffffffffc224ab2)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, rt1.c2, -258471968))) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t0, rt1);
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE (CAST((((vt0.c0, rt1.c0, 0Xfffffffffc224ab2)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, rt1.c2, -258471968))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, rt1.c0, 0Xfffffffffc224ab2)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, rt1.c2, -258471968))) AS INTEGER)) IS TRUE)  as count FROM vt0, vt1, t0, rt1);
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE (CAST((((vt0.c0, rt1.c0, 0Xfffffffffc224ab2)) NOT BETWEEN ((vt0.c0, vt0.c0, x'')) AND ((vt0.c0, rt1.c2, -258471968))) AS INTEGER));
SELECT COUNT(*) FROM rt1, t0 WHERE (t0.c0) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE (t0.c0) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM rt1, t0 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0 WHERE (t0.c0) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (((((rt1.c1)<>(rt1.c0)))/(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<>(rt1.c0)))/(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (((((rt1.c1)<>(rt1.c0)))/(((rt1.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)<>(rt1.c0)))/(((rt1.c0) IS TRUE)))) IS TRUE)  as count FROM vt1 NATURAL JOIN rt1);
SELECT * FROM vt1 NATURAL JOIN rt1 WHERE (((((rt1.c1)<>(rt1.c0)))/(((rt1.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(x'')))OR(vt0.c0)))/(0xffffffff94d70af6)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(x'')))OR(vt0.c0)))/(0Xffffffff94d70af6))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(x'')))OR(vt0.c0)))/(0xffffffff94d70af6)));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL)AND(x'')))OR(vt0.c0)))/(0Xffffffff94d70af6))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL)AND(x'')))OR(vt0.c0)))/(0xffffffff94d70af6)));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<((((vt0.c0) IS FALSE))))) ORDER BY (((+ (vt0.c0)))IS(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((+ (vt0.c0)))IS(CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<((((vt0.c0) IS FALSE))))) ORDER BY (((+ (vt0.c0)))IS(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (((+ (vt0.c0)))IS(CAST(vt0.c0 AS BLOB)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END))<((((vt0.c0) IS FALSE))))) ORDER BY (((+ (vt0.c0)))IS(CAST(vt0.c0 AS BLOB)))  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, t0 WHERE ((((('')<(rt1.c0)))==((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((('')<(rt1.c0)))=((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM vt1, rt1, t0);
SELECT ALL * FROM vt1, rt1, t0 WHERE ((((('')<(rt1.c0)))==((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT (((((('')<(rt1.c0)))=((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0)))))) IS TRUE)  as count FROM vt1, rt1, t0);
SELECT ALL * FROM vt1, rt1, t0 WHERE ((((('')<(rt1.c0)))==((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))));
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)  NULLS FIRST);
SELECT * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE RTRIM) ORDER BY CAST(((vt1.c0)GLOB(vt1.c0)) AS INTEGER)  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c1)<<(CASE rt1.c1  WHEN x'' THEN rt1.c2 END))) ORDER BY ((((rt1.c0)||(rt1.c2)))>(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)<<(CASE rt1.c1  WHEN x'' THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)||(rt1.c2)))>(((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c1)<<(CASE rt1.c1  WHEN x'' THEN rt1.c2 END))) ORDER BY ((((rt1.c0)||(rt1.c2)))>(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1)<<(CASE rt1.c1  WHEN x'' THEN rt1.c2 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c0)||(rt1.c2)))>(((rt1.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c1)<<(CASE rt1.c1  WHEN x'' THEN rt1.c2 END))) ORDER BY ((((rt1.c0)||(rt1.c2)))>(((rt1.c1) IS FALSE)))  NULLS FIRST;
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((((t0.c0, rt1.c0, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), ((((x'01f8')OR(rt1.c2)))AND(t0.c0)), x'')) AND ((vt1.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY)))) ORDER BY ((((rt1.c1)<>('uC'))) BETWEEN ((((0X578fbc2e)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (CASE NULL  WHEN vt0.c0 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c0, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), ((((x'01f8')OR(rt1.c2)))AND(t0.c0)), x'')) AND ((vt1.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY ((((rt1.c1)<>('uC'))) BETWEEN ((((0X578fbc2e)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (CASE NULL  WHEN vt0.c0 THEN rt1.c2 END)));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((((t0.c0, rt1.c0, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), ((((x'01f8')OR(rt1.c2)))AND(t0.c0)), x'')) AND ((vt1.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY)))) ORDER BY ((((rt1.c1)<>('uC'))) BETWEEN ((((0X578fbc2e)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (CASE NULL  WHEN vt0.c0 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, rt1.c0, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), ((((x'01f8')OR(rt1.c2)))AND(t0.c0)), x'')) AND ((vt1.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY ((((rt1.c1)<>('uC'))) BETWEEN ((((0X578fbc2e)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (CASE NULL  WHEN vt0.c0 THEN rt1.c2 END)));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE ((((t0.c0, rt1.c0, t0.c0)) BETWEEN ((((t0.c0)>=(t0.c0)), ((((x'01f8')OR(rt1.c2)))AND(t0.c0)), x'')) AND ((vt1.c0 COLLATE RTRIM, CAST(vt0.c0 AS NUMERIC), rt1.c2 COLLATE BINARY)))) ORDER BY ((((rt1.c1)<>('uC'))) BETWEEN ((((0X578fbc2e)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))) AND (CASE NULL  WHEN vt0.c0 THEN rt1.c2 END));
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (x'');
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) ORDER BY (((t0.c0)) BETWEEN (((x'68b0' IN ()))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN (((x'68b0' IN ()))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) ORDER BY (((t0.c0)) BETWEEN (((x'68b0' IN ()))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) BETWEEN (((x'68b0' IN ()))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((CASE WHEN t0.c0 THEN t0.c0 END) NOT NULL)) ORDER BY (((t0.c0)) BETWEEN (((x'68b0' IN ()))) AND ((t0.c0 COLLATE NOCASE))) DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT)  NULLS LAST);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt1 ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT)  NULLS LAST);
SELECT * FROM vt1 WHERE (LAST_INSERT_ROWID()) ORDER BY CAST(((vt1.c0) IS FALSE) AS TEXT)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<>('*v')))))) ORDER BY '<B&s' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<>('*v')))))) IS TRUE)  as count FROM t0, rt1 ORDER BY '<B&s' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<>('*v')))))) ORDER BY '<B&s' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) NOT BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<>('*v')))))) IS TRUE)  as count FROM t0, rt1 ORDER BY '<B&s' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE ((((rt1.c0)) NOT BETWEEN (((NOT (rt1.c0)))) AND ((((rt1.c0)<>('*v')))))) ORDER BY '<B&s' DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(DISTINCT t0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c0)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(DISTINCT t0.c0));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT t0.c0)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (LOWER(DISTINCT t0.c0));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON rt1.c2 CROSS JOIN rt1 ON ((((((t0.c0)<=(rt1.c1)))OR(0.8686603250818472)))OR((((rt1.c2))>=((rt1.c0))))) WHERE (((((rt1.c0)<=(NULL)))%(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<=(NULL)))%(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON rt1.c2 CROSS JOIN rt1 ON ((((((t0.c0)<=(rt1.c1)))OR(0.8686603250818472)))OR((((rt1.c2))>=((rt1.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON rt1.c2 CROSS JOIN rt1 ON ((((((t0.c0)<=(rt1.c1)))OR(0.8686603250818472)))OR((((rt1.c2))>=((rt1.c0))))) WHERE (((((rt1.c0)<=(NULL)))%(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<=(NULL)))%(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON rt1.c2 CROSS JOIN rt1 ON ((((((t0.c0)<=(rt1.c1)))OR(0.8686603250818472)))OR((((rt1.c2))>=((rt1.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON rt1.c2 CROSS JOIN rt1 ON ((((((t0.c0)<=(rt1.c1)))OR(0.8686603250818472)))OR((((rt1.c2))>=((rt1.c0))))) WHERE (((((rt1.c0)<=(NULL)))%(CAST(rt1.c1 AS REAL))));
SELECT * FROM vt1, t0, vt0, rt1 WHERE (MAX(((((((((rt1.c0)AND(t0.c0)))AND(0.017424962516397913)))OR(x'778f')))OR(t0.c0)), (+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((((((((rt1.c0)AND(t0.c0)))AND(0.017424962516397913)))OR(x'778f')))OR(t0.c0)), (+ (vt1.c0)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT * FROM vt1, t0, vt0, rt1 WHERE (MAX(((((((((rt1.c0)AND(t0.c0)))AND(0.017424962516397913)))OR(x'778f')))OR(t0.c0)), (+ (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((((((((rt1.c0)AND(t0.c0)))AND(0.017424962516397913)))OR(x'778f')))OR(t0.c0)), (+ (vt1.c0)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT * FROM vt1, t0, vt0, rt1 WHERE (MAX(((((((((rt1.c0)AND(t0.c0)))AND(0.017424962516397913)))OR(x'778f')))OR(t0.c0)), (+ (vt1.c0))));
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN NULL THEN t0.c0 END)>=(((t0.c0) BETWEEN ('407120040') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN NULL THEN t0.c0 END)>=(((t0.c0) BETWEEN ('407120040') AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN NULL THEN t0.c0 END)>=(((t0.c0) BETWEEN ('407120040') AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN NULL THEN t0.c0 END)>=(((t0.c0) BETWEEN ('407120040') AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CASE t0.c0  WHEN NULL THEN t0.c0 END)>=(((t0.c0) BETWEEN ('407120040') AND (t0.c0)))));
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt1.c0))) NOTNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((((vt1.c0)LIKE(vt1.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END) ISNULL)) ORDER BY (NOT ((((vt1.c0))>((NULL)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END) ISNULL)) IS TRUE)  as count FROM rt1, vt1, t0, vt0 ORDER BY (NOT ((((vt1.c0))>((NULL))))));
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END) ISNULL)) ORDER BY (NOT ((((vt1.c0))>((NULL)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END) ISNULL)) IS TRUE)  as count FROM rt1, vt1, t0, vt0 ORDER BY (NOT ((((vt1.c0))>((NULL))))));
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN x'' ELSE rt1.c2 END) ISNULL)) ORDER BY (NOT ((((vt1.c0))>((NULL)))));
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY (((vt1.c0)%(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt1.c0)%(vt0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY (((vt1.c0)%(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (((vt1.c0)%(vt0.c0)) IN ()) ASC);
SELECT ALL * FROM vt0, t0, vt1 WHERE (CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY (((vt1.c0)%(vt0.c0)) IN ()) ASC;
SELECT * FROM vt0, rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT * FROM vt0, rt1, t0 WHERE (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE RTRIM);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))GLOB(((rt1.c0)%(0.4825739512972642)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))GLOB(((rt1.c0)%(0.4825739512972642))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))GLOB(((rt1.c0)%(0.4825739512972642)))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))GLOB(((rt1.c0)%(0.4825739512972642))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))))GLOB(((rt1.c0)%(0.4825739512972642)))));
SELECT * FROM rt1 INNER JOIN t0 ON (((rt1.c0 IN (vt1.c0)))>>(NULL)) RIGHT OUTER JOIN vt1 ON ((((((rt1.c2) NOTNULL))OR((+ (vt1.c0)))))OR(((rt1.c1)<<(t0.c0)))) WHERE (((((rt1.c2)&(t0.c0)))=((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)&(t0.c0)))==((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c0 IN (vt1.c0)))>>(NULL)) RIGHT OUTER JOIN vt1 ON ((((((rt1.c2) NOTNULL))OR((+ (vt1.c0)))))OR(((rt1.c1)<<(t0.c0)))));
SELECT * FROM rt1 INNER JOIN t0 ON (((rt1.c0 IN (vt1.c0)))>>(NULL)) RIGHT OUTER JOIN vt1 ON ((((((rt1.c2) NOTNULL))OR((+ (vt1.c0)))))OR(((rt1.c1)<<(t0.c0)))) WHERE (((((rt1.c2)&(t0.c0)))=((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)&(t0.c0)))==((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON (((rt1.c0 IN (vt1.c0)))>>(NULL)) RIGHT OUTER JOIN vt1 ON ((((((rt1.c2) NOTNULL))OR((+ (vt1.c0)))))OR(((rt1.c1)<<(t0.c0)))));
SELECT COUNT(*) FROM vt1, rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((rt1.c0)==(rt1.c2)) THEN ((vt1.c0) IS FALSE) END) ORDER BY NULL COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((rt1.c0)==(rt1.c2)) THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY NULL COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((rt1.c0)==(rt1.c2)) THEN ((vt1.c0) IS FALSE) END) ORDER BY NULL COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((rt1.c0)==(rt1.c2)) THEN ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM vt1, rt1 ORDER BY NULL COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt1, rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c0))  WHEN ((rt1.c0)==(rt1.c2)) THEN ((vt1.c0) IS FALSE) END) ORDER BY NULL COLLATE RTRIM ASC;
SELECT * FROM vt1, t0 WHERE (json_insert(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)), vt1.c0, (((t0.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_insert(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)), vt1.c0, (((t0.c0))<=((vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (json_insert(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)), vt1.c0, (((t0.c0))<=((vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_insert(((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0)), vt1.c0, (((t0.c0))<=((vt1.c0))))) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((rt1.c0) NOTNULL) IN ((NOT (rt1.c0)), '' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((+ (rt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (rt1.c0)), ((vt1.c0)IS NOT(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0X348b7e78 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END, NULL))<>((TRIM(DISTINCT rt1.c0), ((vt1.c0)*(vt1.c0)), (((rt1.c0, t0.c0, vt1.c0))==((vt0.c0, rt1.c0, rt1.c1))), '||~SC0{?\' COLLATE BINARY, vt1.c0))) WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((rt1.c0) NOTNULL) IN ((NOT (rt1.c0)), '' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((+ (rt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (rt1.c0)), ((vt1.c0)IS NOT(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0x348b7e78 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END, NULL))!=((TRIM(DISTINCT rt1.c0), ((vt1.c0)*(vt1.c0)), (((rt1.c0, t0.c0, vt1.c0))==((vt0.c0, rt1.c0, rt1.c1))), '||~SC0{?\' COLLATE BINARY, vt1.c0))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON (((rt1.c0) NOTNULL) IN ((NOT (rt1.c0)), '' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((+ (rt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (rt1.c0)), ((vt1.c0)IS NOT(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0X348b7e78 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END, NULL))<>((TRIM(DISTINCT rt1.c0), ((vt1.c0)*(vt1.c0)), (((rt1.c0, t0.c0, vt1.c0))==((vt0.c0, rt1.c0, rt1.c1))), '||~SC0{?\' COLLATE BINARY, vt1.c0))) WHERE (CAST(vt1.c0 COLLATE BINARY AS REAL)) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON (((rt1.c0) NOTNULL) IN ((NOT (rt1.c0)), '' COLLATE BINARY)) FULL OUTER JOIN rt1 ON ((((+ (rt1.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (rt1.c0)), ((vt1.c0)IS NOT(rt1.c0)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0x348b7e78 THEN vt1.c0 WHEN t0.c0 THEN t0.c0 ELSE vt1.c0 END, NULL))!=((TRIM(DISTINCT rt1.c0), ((vt1.c0)*(vt1.c0)), (((rt1.c0, t0.c0, vt1.c0))==((vt0.c0, rt1.c0, rt1.c1))), '||~SC0{?\' COLLATE BINARY, vt1.c0))) ORDER BY CAST(CAST(vt1.c0 AS REAL) AS REAL));
SELECT * FROM vt1, vt0, rt1 LEFT OUTER JOIN t0 ON ((((('-378056136') NOTNULL)))<>((((((rt1.c2)OR(vt1.c0)))AND(rt1.c1))))) WHERE ((NOT (((rt1.c2)/(x''))))) ORDER BY (~ ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c2)/(x''))))) IS TRUE)  as count FROM vt1, vt0, rt1 LEFT OUTER JOIN t0 ON ((((('-378056136') NOTNULL)))<>((((((rt1.c2)OR(vt1.c0)))AND(rt1.c1))))) ORDER BY (~ ((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt1, vt0, rt1 LEFT OUTER JOIN t0 ON ((((('-378056136') NOTNULL)))<>((((((rt1.c2)OR(vt1.c0)))AND(rt1.c1))))) WHERE ((NOT (((rt1.c2)/(x''))))) ORDER BY (~ ((t0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c2)/(x''))))) IS TRUE)  as count FROM vt1, vt0, rt1 LEFT OUTER JOIN t0 ON ((((('-378056136') NOTNULL)))<>((((((rt1.c2)OR(vt1.c0)))AND(rt1.c1))))) ORDER BY (~ ((t0.c0 IN ())))  NULLS FIRST);
SELECT * FROM vt1, vt0, rt1 LEFT OUTER JOIN t0 ON ((((('-378056136') NOTNULL)))<>((((((rt1.c2)OR(vt1.c0)))AND(rt1.c1))))) WHERE ((NOT (((rt1.c2)/(x''))))) ORDER BY (~ ((t0.c0 IN ())))  NULLS FIRST;
SELECT * FROM t0, rt1, vt1, vt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN (((vt0.c0))>=((vt1.c0))) THEN (((rt1.c1, vt1.c0, rt1.c1)) NOT BETWEEN ((x'', NULL, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN vt0.c0 COLLATE RTRIM THEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (rt1.c2 IN ()) END) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN (((vt0.c0))>=((vt1.c0))) THEN (((rt1.c1, vt1.c0, rt1.c1)) NOT BETWEEN ((x'', NULL, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN vt0.c0 COLLATE RTRIM THEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM t0, rt1, vt1, vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN (((vt0.c0))>=((vt1.c0))) THEN (((rt1.c1, vt1.c0, rt1.c1)) NOT BETWEEN ((x'', NULL, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN vt0.c0 COLLATE RTRIM THEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (rt1.c2 IN ()) END) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt1.c1 AS NUMERIC)  WHEN (((vt0.c0))>=((vt1.c0))) THEN (((rt1.c1, vt1.c0, rt1.c1)) NOT BETWEEN ((x'', NULL, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN vt0.c0 COLLATE RTRIM THEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM t0, rt1, vt1, vt0 ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM t0, rt1, vt1, vt0 WHERE (CASE CAST(rt1.c1 AS NUMERIC)  WHEN (((vt0.c0))>=((vt1.c0))) THEN (((rt1.c1, vt1.c0, rt1.c1)) NOT BETWEEN ((x'', NULL, rt1.c0)) AND ((rt1.c2, rt1.c2, rt1.c1))) WHEN vt0.c0 COLLATE RTRIM THEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) WHEN (vt0.c0 IN ()) THEN (rt1.c2 IN ()) END) ORDER BY ((vt0.c0) NOTNULL) COLLATE BINARY DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('x') ORDER BY (((vt0.c0 IN ())) IS TRUE), ((CAST(t0.c0 AS NUMERIC)) IS FALSE)  NULLS LAST, 'pY' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('x') IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ())) IS TRUE), ((CAST(t0.c0 AS NUMERIC)) IS FALSE)  NULLS LAST, 'pY' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('x') ORDER BY (((vt0.c0 IN ())) IS TRUE), ((CAST(t0.c0 AS NUMERIC)) IS FALSE)  NULLS LAST, 'pY' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('x') IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ())) IS TRUE), ((CAST(t0.c0 AS NUMERIC)) IS FALSE)  NULLS LAST, 'pY' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ('x') ORDER BY (((vt0.c0 IN ())) IS TRUE), ((CAST(t0.c0 AS NUMERIC)) IS FALSE)  NULLS LAST, 'pY' ASC  NULLS LAST;
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL)) NOTNULL)) ORDER BY (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))>=(((t0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))>=(((t0.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL)) NOTNULL)) ORDER BY (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))>=(((t0.c0 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))>=(((t0.c0 IN ())))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE (((((t0.c0) ISNULL)) NOTNULL)) ORDER BY (((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0))))>=(((t0.c0 IN ())))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE ('m뻦I!垳(*)') ORDER BY ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('m뻦I!垳(*)') IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE ('m뻦I!垳(*)') ORDER BY ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (('m뻦I!垳(*)') IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE ('m뻦I!垳(*)') ORDER BY ((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE NOCASE;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c0 IN ()) IN ((NOT (rt1.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(IFNULL(rt1.c1, rt1.c1))) DESC, ((((rt1.c0) IS FALSE)) IS TRUE) DESC, (((rt1.c1)) BETWEEN ((CASE x'd4e4'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((((rt1.c1)%(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(IFNULL(rt1.c1, rt1.c1))) DESC, ((((rt1.c0) IS FALSE)) IS TRUE) DESC, (((rt1.c1)) BETWEEN ((CASE x'd4e4'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((((rt1.c1)%(t0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c0 IN ()) IN ((NOT (rt1.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(IFNULL(rt1.c1, rt1.c1))) DESC, ((((rt1.c0) IS FALSE)) IS TRUE) DESC, (((rt1.c1)) BETWEEN ((CASE x'd4e4'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((((rt1.c1)%(t0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 IN ()) IN ((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, t0 ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(IFNULL(rt1.c1, rt1.c1))) DESC, ((((rt1.c0) IS FALSE)) IS TRUE) DESC, (((rt1.c1)) BETWEEN ((CASE x'd4e4'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((((rt1.c1)%(t0.c0)))))  NULLS FIRST);
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c0 IN ()) IN ((NOT (rt1.c0))))) ORDER BY ((rt1.c1 COLLATE RTRIM)GLOB(IFNULL(rt1.c1, rt1.c1))) DESC, ((((rt1.c0) IS FALSE)) IS TRUE) DESC, (((rt1.c1)) BETWEEN ((CASE x'd4e4'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)) AND ((((rt1.c1)%(t0.c0)))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0, rt1 WHERE (-671813448);
SELECT SUM(count) FROM (SELECT ((-671813448) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE (-671813448);
SELECT SUM(count) FROM (SELECT ((-671813448) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE (-671813448);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt1 ON CASE (NOT (NULL))  WHEN (((t0.c0, '-976535848', vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, t0.c0)) AND ((t0.c0, rt1.c2, t0.c0))) THEN ((vt0.c0)||(rt1.c0)) ELSE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS TEXT) WHERE (CASE WHEN CASE vt1.c0  WHEN NULL THEN '787962062' END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE ((t0.c0)%(vt0.c0)) END) ORDER BY ((TRIM(DISTINCT rt1.c1, t0.c0))OR(((vt1.c0)GLOB(0x20989561))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN NULL THEN '787962062' END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE ((t0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt1 ON CASE (NOT (NULL))  WHEN (((t0.c0, '-976535848', vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, t0.c0)) AND ((t0.c0, rt1.c2, t0.c0))) THEN ((vt0.c0)||(rt1.c0)) ELSE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS TEXT) ORDER BY ((TRIM(DISTINCT rt1.c1, t0.c0))OR(((vt1.c0)GLOB(0X20989561))))  NULLS LAST);
SELECT * FROM vt0, t0 RIGHT OUTER JOIN rt1 ON CASE (NOT (NULL))  WHEN (((t0.c0, '-976535848', vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, t0.c0)) AND ((t0.c0, rt1.c2, t0.c0))) THEN ((vt0.c0)||(rt1.c0)) ELSE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS TEXT) WHERE (CASE WHEN CASE vt1.c0  WHEN NULL THEN '787962062' END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE ((t0.c0)%(vt0.c0)) END) ORDER BY ((TRIM(DISTINCT rt1.c1, t0.c0))OR(((vt1.c0)GLOB(0x20989561))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt1.c0  WHEN NULL THEN '787962062' END THEN ((vt0.c0) BETWEEN (vt0.c0) AND (rt1.c2)) ELSE ((t0.c0)%(vt0.c0)) END) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt1 ON CASE (NOT (NULL))  WHEN (((t0.c0, '-976535848', vt0.c0)) BETWEEN ((rt1.c1, vt1.c0, t0.c0)) AND ((t0.c0, rt1.c2, t0.c0))) THEN ((vt0.c0)||(rt1.c0)) ELSE ((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END LEFT OUTER JOIN vt1 ON CAST(vt1.c0 COLLATE NOCASE AS TEXT) ORDER BY ((TRIM(DISTINCT rt1.c1, t0.c0))OR(((vt1.c0)GLOB(0X20989561))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN ((t0.c0)=(t0.c0)) THEN CAST(vt0.c0 AS TEXT) END  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE, (((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (vt1.c0 IN ()))) AND (((((rt1.c1, '-1839613121', t0.c0)) BETWEEN ((rt1.c1, t0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c2))), ((rt1.c0)>(t0.c0)), (((rt1.c1))<=((vt1.c0)))))) RIGHT OUTER JOIN t0 ON ((rt1.c0)%(rt1.c2)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt1.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END WHERE ((((t0.c0 IN ())) BETWEEN (((vt1.c0)|(vt1.c0))) AND (TRIM(rt1.c2, rt1.c1)))) ORDER BY ((vt1.c0)GLOB(rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN (((vt1.c0)|(vt1.c0))) AND (TRIM(rt1.c2, rt1.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE, (((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (vt1.c0 IN ()))) AND (((((rt1.c1, '-1839613121', t0.c0)) BETWEEN ((rt1.c1, t0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c2))), ((rt1.c0)>(t0.c0)), (((rt1.c1))<=((vt1.c0)))))) RIGHT OUTER JOIN t0 ON ((rt1.c0)%(rt1.c2)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt1.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END ORDER BY ((vt1.c0)GLOB(rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE, (((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (vt1.c0 IN ()))) AND (((((rt1.c1, '-1839613121', t0.c0)) BETWEEN ((rt1.c1, t0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c2))), ((rt1.c0)>(t0.c0)), (((rt1.c1))<=((vt1.c0)))))) RIGHT OUTER JOIN t0 ON ((rt1.c0)%(rt1.c2)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt1.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END WHERE ((((t0.c0 IN ())) BETWEEN (((vt1.c0)|(vt1.c0))) AND (TRIM(rt1.c2, rt1.c1)))) ORDER BY ((vt1.c0)GLOB(rt1.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN ())) BETWEEN (((vt1.c0)|(vt1.c0))) AND (TRIM(rt1.c2, rt1.c1)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c1 COLLATE NOCASE, (((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))), (vt1.c0 IN ()))) AND (((((rt1.c1, '-1839613121', t0.c0)) BETWEEN ((rt1.c1, t0.c0, rt1.c2)) AND ((rt1.c0, rt1.c2, rt1.c2))), ((rt1.c0)>(t0.c0)), (((rt1.c1))<=((vt1.c0)))))) RIGHT OUTER JOIN t0 ON ((rt1.c0)%(rt1.c2)) COLLATE RTRIM LEFT OUTER JOIN rt1 ON CASE WHEN CAST(rt1.c2 AS REAL) THEN rt1.c1 COLLATE NOCASE ELSE (+ (vt1.c0)) END ORDER BY ((vt1.c0)GLOB(rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c0)+(vt0.c0)) IN ()) LEFT OUTER JOIN t0 ON '-64861518' INNER JOIN vt0 ON (((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND (('1962187299'))))AND(vt1.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((((rt1.c2)OR(x'')))OR(vt0.c0)))))OR((- (vt1.c0)))) WHERE ((((vt1.c0 IN (rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c0)+(vt0.c0)) IN ()) LEFT OUTER JOIN t0 ON '-64861518' INNER JOIN vt0 ON (((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND (('1962187299'))))AND(vt1.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((((rt1.c2)OR(x'')))OR(vt0.c0)))))OR((- (vt1.c0)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c0)+(vt0.c0)) IN ()) LEFT OUTER JOIN t0 ON '-64861518' INNER JOIN vt0 ON (((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND (('1962187299'))))AND(vt1.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((((rt1.c2)OR(x'')))OR(vt0.c0)))))OR((- (vt1.c0)))) WHERE ((((vt1.c0 IN (rt1.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((vt1.c0 IN (rt1.c2))) NOTNULL)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c0)+(vt0.c0)) IN ()) LEFT OUTER JOIN t0 ON '-64861518' INNER JOIN vt0 ON (((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND (('1962187299'))))AND(vt1.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((((rt1.c2)OR(x'')))OR(vt0.c0)))))OR((- (vt1.c0)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt1 ON (((rt1.c0)+(vt0.c0)) IN ()) LEFT OUTER JOIN t0 ON '-64861518' INNER JOIN vt0 ON (((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND (('1962187299'))))AND(vt1.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((((rt1.c2)OR(x'')))OR(vt0.c0)))))OR((- (vt1.c0)))) WHERE ((((vt1.c0 IN (rt1.c2))) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c0 END END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c0 END END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)) THEN CASE WHEN rt1.c2 THEN rt1.c0 END END);
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0))>=((vt0.c0))), vt0.c0, '-976535848'))<=((((vt0.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((vt0.c0)==(vt0.c0))))) WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0))>=((vt0.c0))), vt0.c0, '-976535848'))<=((((vt0.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((vt0.c0)==(vt0.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0))>=((vt0.c0))), vt0.c0, '-976535848'))<=((((vt0.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((vt0.c0)==(vt0.c0))))) WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0))>=((vt0.c0))), vt0.c0, '-976535848'))<=((((vt0.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((vt0.c0)==(vt0.c0))))));
SELECT COUNT(*) FROM vt0 INNER JOIN vt1 ON ((((((vt0.c0))>=((vt0.c0))), vt0.c0, '-976535848'))<=((((vt0.c0) NOT NULL), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END, ((vt0.c0)==(vt0.c0))))) WHERE (((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM vt1, rt1, t0, vt0 WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt1, t0, vt0 WHERE ((t0.c0 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ())) IS TRUE)  as count FROM vt1, rt1, t0, vt0);
SELECT ALL COUNT(*) FROM vt1, rt1, t0, vt0 WHERE ((t0.c0 IN ()));
SELECT * FROM rt1 WHERE (CASE 0.05580311509016367  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)%(1.962187299E9)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN rt1.c2 COLLATE RTRIM THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.05580311509016367  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)%(1.962187299E9)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN rt1.c2 COLLATE RTRIM THEN NULL END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE 0.05580311509016367  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)%(1.962187299E9)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN rt1.c2 COLLATE RTRIM THEN NULL END);
SELECT SUM(count) FROM (SELECT ALL ((CASE 0.05580311509016367  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)%(1.962187299E9)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN rt1.c2 COLLATE RTRIM THEN NULL END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE 0.05580311509016367  WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)%(1.962187299E9)) WHEN rt1.c0 THEN (((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))) WHEN rt1.c2 COLLATE RTRIM THEN NULL END);
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t0 ON ((+ (rt1.c0)) IN ()) WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c0) AND (vt1.c0)))) AND ((((rt1.c2)OR(vt0.c0)))))) ORDER BY (+ (vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c0) AND (vt1.c0)))) AND ((((rt1.c2)OR(vt0.c0)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t0 ON ((+ (rt1.c0)) IN ()) ORDER BY (+ (vt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t0 ON ((+ (rt1.c0)) IN ()) WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c0) AND (vt1.c0)))) AND ((((rt1.c2)OR(vt0.c0)))))) ORDER BY (+ (vt1.c0 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c0) AND (vt1.c0)))) AND ((((rt1.c2)OR(vt0.c0)))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t0 ON ((+ (rt1.c0)) IN ()) ORDER BY (+ (vt1.c0 COLLATE RTRIM)) ASC);
SELECT ALL * FROM rt1, vt1 LEFT OUTER JOIN vt0 ON vt1.c0 CROSS JOIN t0 ON ((+ (rt1.c0)) IN ()) WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) BETWEEN (rt1.c0) AND (vt1.c0)))) AND ((((rt1.c2)OR(vt0.c0)))))) ORDER BY (+ (vt1.c0 COLLATE RTRIM)) ASC;
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)*(0.7076942268330921 COLLATE NOCASE))) ORDER BY 0.8628110482033065 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE)*(0.7076942268330921 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY 0.8628110482033065 COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)*(0.7076942268330921 COLLATE NOCASE))) ORDER BY 0.8628110482033065 COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE NOCASE)*(0.7076942268330921 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 ORDER BY 0.8628110482033065 COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (((rt1.c2 COLLATE NOCASE)*(0.7076942268330921 COLLATE NOCASE))) ORDER BY 0.8628110482033065 COLLATE RTRIM;
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)||(t0.c0))))<((((t0.c0)<>(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)||(t0.c0))))<((((t0.c0)!=(t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)||(t0.c0))))<((((t0.c0)<>(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((((vt1.c0)||(t0.c0))))<((((t0.c0)!=(t0.c0)))))) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE ((((((vt1.c0)||(t0.c0))))<((((t0.c0)<>(t0.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 CROSS JOIN t0 ON t0.c0 WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ABS(rt1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, vt0, vt1 CROSS JOIN t0 ON t0.c0 ORDER BY ABS(rt1.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 CROSS JOIN t0 ON t0.c0 WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ABS(rt1.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM rt1, vt0, vt1 CROSS JOIN t0 ON t0.c0 ORDER BY ABS(rt1.c1)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 CROSS JOIN t0 ON t0.c0 WHERE ((t0.c0 COLLATE NOCASE IN ())) ORDER BY ABS(rt1.c1)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN x'' COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((vt0.c0)OR('-1902009779')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN x'' COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR('-1902009779')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN x'' COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((vt0.c0)OR('-1902009779')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN x'' COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR('-1902009779')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))!=((vt0.c0))) THEN LOWER(vt0.c0) WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN x'' COLLATE RTRIM ELSE CAST(vt0.c0 AS INTEGER) END) ORDER BY ((((vt0.c0)OR('-1902009779')))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (NOT ((~ (rt1.c0)))) INNER JOIN t0 ON t0.c0 WHERE ((((((((((('R5㹘0UK')!=(rt1.c0)))AND(CASE WHEN vt0.c0 THEN rt1.c0 END)))OR((t0.c0 IN ()))))AND(rt1.c0)))OR(NULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((((x'24a23e0a')>>(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('R5㹘0UK')<>(rt1.c0)))AND(CASE WHEN vt0.c0 THEN rt1.c0 END)))OR((t0.c0 IN ()))))AND(rt1.c0)))OR(NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (NOT ((~ (rt1.c0)))) INNER JOIN t0 ON t0.c0 ORDER BY (((t0.c0)) NOT BETWEEN ((((x'24a23e0a')>>(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (NOT ((~ (rt1.c0)))) INNER JOIN t0 ON t0.c0 WHERE ((((((((((('R5㹘0UK')!=(rt1.c0)))AND(CASE WHEN vt0.c0 THEN rt1.c0 END)))OR((t0.c0 IN ()))))AND(rt1.c0)))OR(NULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((((x'24a23e0a')>>(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((('R5㹘0UK')<>(rt1.c0)))AND(CASE WHEN vt0.c0 THEN rt1.c0 END)))OR((t0.c0 IN ()))))AND(rt1.c0)))OR(NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (NOT ((~ (rt1.c0)))) INNER JOIN t0 ON t0.c0 ORDER BY (((t0.c0)) NOT BETWEEN ((((x'24a23e0a')>>(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (NOT ((~ (rt1.c0)))) INNER JOIN t0 ON t0.c0 WHERE ((((((((((('R5㹘0UK')!=(rt1.c0)))AND(CASE WHEN vt0.c0 THEN rt1.c0 END)))OR((t0.c0 IN ()))))AND(rt1.c0)))OR(NULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((((x'24a23e0a')>>(vt0.c0)))) AND ((CAST(vt0.c0 AS BLOB)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN HEX(DISTINCT -1674698735) WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) ORDER BY ((((CASE 'K<'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(TYPEOF(DISTINCT vt1.c0))))OR(x'')), vt1.c0 DESC, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN HEX(DISTINCT -1674698735) WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE 'K<'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(TYPEOF(DISTINCT vt1.c0))))OR(x'')), vt1.c0 DESC, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN HEX(DISTINCT -1674698735) WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) ORDER BY ((((CASE 'K<'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(TYPEOF(DISTINCT vt1.c0))))OR(x'')), vt1.c0 DESC, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN HEX(DISTINCT -1674698735) WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) IS TRUE)  as count FROM vt1 ORDER BY ((((CASE 'K<'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(TYPEOF(DISTINCT vt1.c0))))OR(x'')), vt1.c0 DESC, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0 COLLATE BINARY))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (CASE vt1.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt1.c0)<(vt1.c0)) WHEN ((vt1.c0)<=(vt1.c0)) THEN HEX(DISTINCT -1674698735) WHEN ((vt1.c0)+(vt1.c0)) THEN ((vt1.c0)/(vt1.c0)) ELSE CAST(vt1.c0 AS INTEGER) END) ORDER BY ((((CASE 'K<'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)OR(TYPEOF(DISTINCT vt1.c0))))OR(x'')), vt1.c0 DESC, (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0 COLLATE BINARY))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON SUBSTR(((((vt1.c0)OR(rt1.c0)))OR(vt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END) WHERE ((((rt1.c0)<(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(rt1.c2)) IN ())) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON SUBSTR(((((vt1.c0)OR(rt1.c0)))OR(vt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON SUBSTR(((((vt1.c0)OR(rt1.c0)))OR(vt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END) WHERE ((((rt1.c0)<(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(rt1.c2)) IN ())) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON SUBSTR(((((vt1.c0)OR(rt1.c0)))OR(vt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON SUBSTR(((((vt1.c0)OR(rt1.c0)))OR(vt0.c0)), CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 END) WHERE ((((rt1.c0)<(rt1.c2)) IN ()));
SELECT * FROM t0 WHERE (((NULL) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) NOT BETWEEN (0x11cea02c) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) NOT BETWEEN (0X11cea02c) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) NOT BETWEEN (0x11cea02c) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) NOT BETWEEN (0X11cea02c) AND (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((NULL) NOT BETWEEN (((t0.c0)/(t0.c0))) AND (((t0.c0) NOT BETWEEN (0x11cea02c) AND (t0.c0)))));
SELECT * FROM vt0, vt1, rt1, t0 WHERE ((GLOB(t0.c0, vt1.c0) IN ())) ORDER BY CAST((rt1.c0 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((GLOB(t0.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt0, vt1, rt1, t0 ORDER BY CAST((rt1.c0 IN ()) AS INTEGER) ASC);
SELECT * FROM vt0, vt1, rt1, t0 WHERE ((GLOB(t0.c0, vt1.c0) IN ())) ORDER BY CAST((rt1.c0 IN ()) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL (((GLOB(t0.c0, vt1.c0) IN ())) IS TRUE)  as count FROM vt0, vt1, rt1, t0 ORDER BY CAST((rt1.c0 IN ()) AS INTEGER) ASC);
SELECT * FROM vt0, vt1, rt1, t0 WHERE ((GLOB(t0.c0, vt1.c0) IN ())) ORDER BY CAST((rt1.c0 IN ()) AS INTEGER) ASC;
SELECT * FROM rt1, vt1 WHERE (json_array('', CASE WHEN 'fⲴG' THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ((json_array('', CASE WHEN 'fⲴG' THEN rt1.c1 END)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (json_array('', CASE WHEN 'fⲴG' THEN rt1.c1 END));
SELECT SUM(count) FROM (SELECT ((json_array('', CASE WHEN 'fⲴG' THEN rt1.c1 END)) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE (json_array('', CASE WHEN 'fⲴG' THEN rt1.c1 END));
SELECT * FROM rt1 CROSS JOIN t0 ON (((((t0.c0, t0.c0, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c0))))/(x'')) WHERE (json_array_length(((rt1.c1)>>(t0.c0)), ((x'')GLOB(t0.c0)))) ORDER BY (NOT (((rt1.c2)>>('')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt1.c1)>>(t0.c0)), ((x'')GLOB(t0.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((t0.c0, t0.c0, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c0))))/(x'')) ORDER BY (NOT (((rt1.c2)>>('')))) ASC);
SELECT * FROM rt1 CROSS JOIN t0 ON (((((t0.c0, t0.c0, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c0))))/(x'')) WHERE (json_array_length(((rt1.c1)>>(t0.c0)), ((x'')GLOB(t0.c0)))) ORDER BY (NOT (((rt1.c2)>>('')))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((rt1.c1)>>(t0.c0)), ((x'')GLOB(t0.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON (((((t0.c0, t0.c0, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c0))))/(x'')) ORDER BY (NOT (((rt1.c2)>>('')))) ASC);
SELECT * FROM rt1, t0 INNER JOIN vt0 ON '-269915668' WHERE (((((rt1.c0)*(vt0.c0))) IS TRUE)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)*(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt0 ON '-269915668' ORDER BY NULL);
SELECT * FROM rt1, t0 INNER JOIN vt0 ON '-269915668' WHERE (((((rt1.c0)*(vt0.c0))) IS TRUE)) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)*(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt1, t0 INNER JOIN vt0 ON '-269915668' ORDER BY NULL);
SELECT * FROM rt1, t0 INNER JOIN vt0 ON '-269915668' WHERE (((((rt1.c0)*(vt0.c0))) IS TRUE)) ORDER BY NULL;
SELECT ALL * FROM rt1, vt1, t0 WHERE (RTRIM(rt1.c1));
SELECT SUM(count) FROM (SELECT ((RTRIM(rt1.c1)) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL * FROM rt1, vt1, t0 WHERE (RTRIM(rt1.c1));
SELECT SUM(count) FROM (SELECT ((RTRIM(rt1.c1)) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL * FROM rt1, vt1, t0 WHERE (RTRIM(rt1.c1));
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (IFNULL(CAST(rt1.c1 AS TEXT), rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(rt1.c1 AS TEXT), rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (IFNULL(CAST(rt1.c1 AS TEXT), rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((IFNULL(CAST(rt1.c1 AS TEXT), rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT COUNT(*) FROM vt0, vt1, rt1 WHERE (IFNULL(CAST(rt1.c1 AS TEXT), rt1.c2 COLLATE NOCASE));
SELECT ALL * FROM t0 WHERE (((0.6910464847710079) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.6910464847710079) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.6910464847710079) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((0.6910464847710079) ISNULL)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((0.6910464847710079) ISNULL));
SELECT * FROM t0, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((-3.78056136E8)))) ORDER BY HEX(DISTINCT ((0.3847705503661858) IS TRUE)) ASC, CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((-3.78056136E8)))) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY HEX(DISTINCT ((0.3847705503661858) IS TRUE)) ASC, CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) ASC);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((-3.78056136E8)))) ORDER BY HEX(DISTINCT ((0.3847705503661858) IS TRUE)) ASC, CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((-3.78056136E8)))) IS TRUE)  as count FROM t0, vt0, vt1 NOT INDEXED ORDER BY HEX(DISTINCT ((0.3847705503661858) IS TRUE)) ASC, CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) ASC);
SELECT * FROM t0, vt0, vt1 WHERE ((((vt1.c0)) BETWEEN (((vt1.c0 IN ()))) AND ((-3.78056136E8)))) ORDER BY HEX(DISTINCT ((0.3847705503661858) IS TRUE)) ASC, CAST(((vt1.c0)AND(vt1.c0)) AS TEXT) ASC;
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (x'ee81d923' IN ()) WHEN vt1.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN ((vt1.c0)>=(t0.c0)) ELSE (NOT (t0.c0)) END) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((((t0.c0)/(5.46870625E8)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (x'ee81d923' IN ()) WHEN vt1.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN ((vt1.c0)>=(t0.c0)) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((((t0.c0)/(5.46870625E8))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (x'ee81d923' IN ()) WHEN vt1.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN ((vt1.c0)>=(t0.c0)) ELSE (NOT (t0.c0)) END) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((((t0.c0)/(5.46870625E8)))));
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (x'ee81d923' IN ()) WHEN vt1.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN ((vt1.c0)>=(t0.c0)) ELSE (NOT (t0.c0)) END) IS TRUE)  as count FROM vt1, t0 ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((((t0.c0)/(5.46870625E8))))));
SELECT COUNT(*) FROM vt1, t0 WHERE (CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN (x'ee81d923' IN ()) WHEN vt1.c0 COLLATE BINARY THEN t0.c0 COLLATE NOCASE WHEN t0.c0 THEN ((vt1.c0)>=(t0.c0)) ELSE (NOT (t0.c0)) END) ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c0 END)) AND ((((t0.c0)/(5.46870625E8)))));
SELECT * FROM vt0, rt1, t0, vt1 WHERE (((t0.c0) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT * FROM vt0, rt1, t0, vt1 WHERE (((t0.c0) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT * FROM vt0, rt1, t0, vt1 WHERE (((t0.c0) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (t0.c0 COLLATE BINARY)));
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) ORDER BY ((((+ (rt1.c0)), (rt1.c1 IN ()), rt1.c1))!=((rt1.c0, ((rt1.c0) IS FALSE), 0.55930782606385 COLLATE RTRIM))), ((+ (rt1.c0)) IN (rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((+ (rt1.c0)), (rt1.c1 IN ()), rt1.c1))!=((rt1.c0, ((rt1.c0) IS FALSE), 0.55930782606385 COLLATE RTRIM))), ((+ (rt1.c0)) IN (rt1.c2 COLLATE BINARY)));
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) ORDER BY ((((+ (rt1.c0)), (rt1.c1 IN ()), rt1.c1))!=((rt1.c0, ((rt1.c0) IS FALSE), 0.55930782606385 COLLATE RTRIM))), ((+ (rt1.c0)) IN (rt1.c2 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((+ (rt1.c0)), (rt1.c1 IN ()), rt1.c1))!=((rt1.c0, ((rt1.c0) IS FALSE), 0.55930782606385 COLLATE RTRIM))), ((+ (rt1.c0)) IN (rt1.c2 COLLATE BINARY)));
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)) IN ())) ORDER BY ((((+ (rt1.c0)), (rt1.c1 IN ()), rt1.c1))!=((rt1.c0, ((rt1.c0) IS FALSE), 0.55930782606385 COLLATE RTRIM))), ((+ (rt1.c0)) IN (rt1.c2 COLLATE BINARY));
SELECT * FROM t0, rt1 WHERE (x'0a35') ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (CAST(0.9911566255638085 AS INTEGER))) DESC  NULLS FIRST, (((~ (rt1.c0)))+(((rt1.c2)%(0x6419d076)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'0a35') IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (CAST(0.9911566255638085 AS INTEGER))) DESC  NULLS FIRST, (((~ (rt1.c0)))+(((rt1.c2)%(0x6419d076)))) ASC  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (x'0a35') ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (CAST(0.9911566255638085 AS INTEGER))) DESC  NULLS FIRST, (((~ (rt1.c0)))+(((rt1.c2)%(0x6419d076)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'0a35') IS TRUE)  as count FROM t0, rt1 ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (CAST(0.9911566255638085 AS INTEGER))) DESC  NULLS FIRST, (((~ (rt1.c0)))+(((rt1.c2)%(0x6419d076)))) ASC  NULLS LAST);
SELECT * FROM t0, rt1 WHERE (x'0a35') ORDER BY ((((rt1.c2) IS TRUE)) BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (CAST(0.9911566255638085 AS INTEGER))) DESC  NULLS FIRST, (((~ (rt1.c0)))+(((rt1.c2)%(0x6419d076)))) ASC  NULLS LAST;
SELECT ALL * FROM vt1, t0, vt0, rt1 WHERE ((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN (((rt1.c2)OR(rt1.c0))) AND ((('-731403549') NOT BETWEEN (vt0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN (((rt1.c2)OR(rt1.c0))) AND ((('-731403549') NOT BETWEEN (vt0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT ALL * FROM vt1, t0, vt0, rt1 WHERE ((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN (((rt1.c2)OR(rt1.c0))) AND ((('-731403549') NOT BETWEEN (vt0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN (((rt1.c2)OR(rt1.c0))) AND ((('-731403549') NOT BETWEEN (vt0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT ALL * FROM vt1, t0, vt0, rt1 WHERE ((((((t0.c0)) NOT BETWEEN ((rt1.c2)) AND ((vt0.c0)))) BETWEEN (((rt1.c2)OR(rt1.c0))) AND ((('-731403549') NOT BETWEEN (vt0.c0) AND (rt1.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((((('x') BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0))))) ORDER BY json((t0.c0 IN ()))  NULLS LAST, 58525094 ASC;
SELECT SUM(count) FROM (SELECT (((((((('x') BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY json((t0.c0 IN ()))  NULLS LAST, 58525094 ASC);
SELECT COUNT(*) FROM t0 WHERE ((((((('x') BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0))))) ORDER BY json((t0.c0 IN ()))  NULLS LAST, 58525094 ASC;
SELECT SUM(count) FROM (SELECT (((((((('x') BETWEEN (t0.c0) AND (t0.c0)))OR(CAST(t0.c0 AS REAL))))AND(((t0.c0)LIKE(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY json((t0.c0 IN ()))  NULLS LAST, 58525094 ASC);
SELECT ALL * FROM vt0, t0, rt1 WHERE (vt0.c0) ORDER BY ((((((((((t0.c0)AND(rt1.c0)))OR(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND((- (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY ((((((((((t0.c0)AND(rt1.c0)))OR(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND((- (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt1 WHERE (vt0.c0) ORDER BY ((((((((((t0.c0)AND(rt1.c0)))OR(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND((- (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY ((((((((((t0.c0)AND(rt1.c0)))OR(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND((- (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0, rt1 WHERE (vt0.c0) ORDER BY ((((((((((t0.c0)AND(rt1.c0)))OR(rt1.c1)))AND(t0.c0)))AND(t0.c0)))AND((- (rt1.c2))))  NULLS FIRST;
SELECT * FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((((((((vt1.c0)OR(-64861518)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), CAST(x'126f' AS TEXT), ((vt1.c0)<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((((((((vt1.c0)OR(-64861518)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), CAST(x'126f' AS TEXT), ((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((((((((vt1.c0)OR(-64861518)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), CAST(x'126f' AS TEXT), ((vt1.c0)<(vt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((((((((vt1.c0)OR(-64861518)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), CAST(x'126f' AS TEXT), ((vt1.c0)<(vt1.c0)))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)), (vt1.c0 IN (vt1.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))))=((((((((((vt1.c0)OR(-64861518)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), CAST(x'126f' AS TEXT), ((vt1.c0)<(vt1.c0))))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ())) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR('')))OR(rt1.c2)))))AND((- (rt1.c2)))), (NOT (((((((((0.7681467852207242)OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR('')))OR(rt1.c2)))))AND((- (rt1.c2)))), (NOT (((((((((0.7681467852207242)OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ())) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR('')))OR(rt1.c2)))))AND((- (rt1.c2)))), (NOT (((((((((0.7681467852207242)OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1 ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR('')))OR(rt1.c2)))))AND((- (rt1.c2)))), (NOT (((((((((0.7681467852207242)OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c1 COLLATE BINARY IN ())) ORDER BY ((((CAST(rt1.c1 AS NUMERIC))AND(((((((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR('')))OR(rt1.c2)))))AND((- (rt1.c2)))), (NOT (((((((((0.7681467852207242)OR(rt1.c2)))OR(rt1.c1)))OR(rt1.c1)))AND(rt1.c1))));
SELECT * FROM vt1 WHERE (PRINTF(vt1.c0) COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE BINARY)OR('J#')) ASC, ((((((((((vt1.c0)>>(vt1.c0)))OR(((vt1.c0)<(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)OR('J#')) ASC, ((((((((((vt1.c0)>>(vt1.c0)))OR(((vt1.c0)<(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (PRINTF(vt1.c0) COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE BINARY)OR('J#')) ASC, ((((((((((vt1.c0)>>(vt1.c0)))OR(((vt1.c0)<(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((PRINTF(vt1.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE BINARY)OR('J#')) ASC, ((((((((((vt1.c0)>>(vt1.c0)))OR(((vt1.c0)<(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))  NULLS FIRST);
SELECT * FROM vt1 WHERE (PRINTF(vt1.c0) COLLATE RTRIM) ORDER BY ((vt1.c0 COLLATE BINARY)OR('J#')) ASC, ((((((((((vt1.c0)>>(vt1.c0)))OR(((vt1.c0)<(vt1.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))))OR(((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.20083114202869023 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.20083114202869023 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.20083114202869023 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.20083114202869023 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE 0.20083114202869023 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END);
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON t0.c0 CROSS JOIN t0 ON (((rt1.c2, t0.c0, vt1.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, rt1.c1, t0.c0, t0.c0)) AND ((vt1.c0, rt1.c0, vt1.c0, rt1.c2, rt1.c1))) COLLATE NOCASE WHERE (0.17656421988708937) ORDER BY (((rt1.c0, rt1.c2, t0.c0)) BETWEEN (((+ (vt0.c0)), COALESCE(DISTINCT vt1.c0, rt1.c0), (((vt0.c0, rt1.c0, t0.c0))>=((vt0.c0, vt0.c0, rt1.c2))))) AND ((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT), (NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((0.17656421988708937) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt1 ON t0.c0 CROSS JOIN t0 ON (((rt1.c2, t0.c0, vt1.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, rt1.c1, t0.c0, t0.c0)) AND ((vt1.c0, rt1.c0, vt1.c0, rt1.c2, rt1.c1))) COLLATE NOCASE ORDER BY (((rt1.c0, rt1.c2, t0.c0)) BETWEEN (((+ (vt0.c0)), COALESCE(DISTINCT vt1.c0, rt1.c0), (((vt0.c0, rt1.c0, t0.c0))>=((vt0.c0, vt0.c0, rt1.c2))))) AND ((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT), (NOT (rt1.c2))))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON t0.c0 CROSS JOIN t0 ON (((rt1.c2, t0.c0, vt1.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, rt1.c1, t0.c0, t0.c0)) AND ((vt1.c0, rt1.c0, vt1.c0, rt1.c2, rt1.c1))) COLLATE NOCASE WHERE (0.17656421988708937) ORDER BY (((rt1.c0, rt1.c2, t0.c0)) BETWEEN (((+ (vt0.c0)), COALESCE(DISTINCT vt1.c0, rt1.c0), (((vt0.c0, rt1.c0, t0.c0))>=((vt0.c0, vt0.c0, rt1.c2))))) AND ((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT), (NOT (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((0.17656421988708937) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN rt1 ON t0.c0 CROSS JOIN t0 ON (((rt1.c2, t0.c0, vt1.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, rt1.c1, t0.c0, t0.c0)) AND ((vt1.c0, rt1.c0, vt1.c0, rt1.c2, rt1.c1))) COLLATE NOCASE ORDER BY (((rt1.c0, rt1.c2, t0.c0)) BETWEEN (((+ (vt0.c0)), COALESCE(DISTINCT vt1.c0, rt1.c0), (((vt0.c0, rt1.c0, t0.c0))>=((vt0.c0, vt0.c0, rt1.c2))))) AND ((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT), (NOT (rt1.c2))))));
SELECT COUNT(*) FROM vt1, vt0 CROSS JOIN rt1 ON t0.c0 CROSS JOIN t0 ON (((rt1.c2, t0.c0, vt1.c0, t0.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, rt1.c1, t0.c0, t0.c0)) AND ((vt1.c0, rt1.c0, vt1.c0, rt1.c2, rt1.c1))) COLLATE NOCASE WHERE (0.17656421988708937) ORDER BY (((rt1.c0, rt1.c2, t0.c0)) BETWEEN (((+ (vt0.c0)), COALESCE(DISTINCT vt1.c0, rt1.c0), (((vt0.c0, rt1.c0, t0.c0))>=((vt0.c0, vt0.c0, rt1.c2))))) AND ((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END, CAST(vt0.c0 AS TEXT), (NOT (rt1.c2)))));
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt1.c0))<=((vt1.c0))) IN ()) DESC  NULLS LAST, (~ (((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt1.c0))<=((vt1.c0))) IN ()) DESC  NULLS LAST, (~ (((vt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt1.c0))<=((vt1.c0))) IN ()) DESC  NULLS LAST, (~ (((vt1.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt1 ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt1.c0))<=((vt1.c0))) IN ()) DESC  NULLS LAST, (~ (((vt1.c0) IS TRUE))) ASC);
SELECT ALL COUNT(*) FROM vt1 WHERE (NULL) ORDER BY ((((CAST(vt1.c0 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND(vt1.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt1.c0))<=((vt1.c0))) IN ()) DESC  NULLS LAST, (~ (((vt1.c0) IS TRUE))) ASC;
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON (((NULL)) BETWEEN ((((rt1.c0) ISNULL))) AND ((((rt1.c1)LIKE(vt1.c0))))) WHERE (((rt1.c1)>(rt1.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN vt1.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS REAL) THEN rt1.c0 WHEN STRFTIME(vt1.c0, rt1.c1, vt1.c0) THEN 0.8686603250818472 ELSE (+ (rt1.c0)) END, ((((vt1.c0) NOT BETWEEN (x'7bfb') AND (NULL)))%(((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)>(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (((NULL)) BETWEEN ((((rt1.c0) ISNULL))) AND ((((rt1.c1)LIKE(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN vt1.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS REAL) THEN rt1.c0 WHEN STRFTIME(vt1.c0, rt1.c1, vt1.c0) THEN 0.8686603250818472 ELSE (+ (rt1.c0)) END, ((((vt1.c0) NOT BETWEEN (x'7bfb') AND (NULL)))%(((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON (((NULL)) BETWEEN ((((rt1.c0) ISNULL))) AND ((((rt1.c1)LIKE(vt1.c0))))) WHERE (((rt1.c1)>(rt1.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN vt1.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS REAL) THEN rt1.c0 WHEN STRFTIME(vt1.c0, rt1.c1, vt1.c0) THEN 0.8686603250818472 ELSE (+ (rt1.c0)) END, ((((vt1.c0) NOT BETWEEN (x'7bfb') AND (NULL)))%(((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1)>(rt1.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (((NULL)) BETWEEN ((((rt1.c0) ISNULL))) AND ((((rt1.c1)LIKE(vt1.c0))))) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN vt1.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS REAL) THEN rt1.c0 WHEN STRFTIME(vt1.c0, rt1.c1, vt1.c0) THEN 0.8686603250818472 ELSE (+ (rt1.c0)) END, ((((vt1.c0) NOT BETWEEN (x'7bfb') AND (NULL)))%(((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 FULL OUTER JOIN vt1 ON (((NULL)) BETWEEN ((((rt1.c0) ISNULL))) AND ((((rt1.c1)LIKE(vt1.c0))))) WHERE (((rt1.c1)>(rt1.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((vt1.c0) ISNULL) THEN vt1.c0 COLLATE BINARY WHEN CAST(vt1.c0 AS REAL) THEN rt1.c0 WHEN STRFTIME(vt1.c0, rt1.c1, vt1.c0) THEN 0.8686603250818472 ELSE (+ (rt1.c0)) END, ((((vt1.c0) NOT BETWEEN (x'7bfb') AND (NULL)))%(((rt1.c0) BETWEEN (rt1.c2) AND (vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE ((t0.c0 IN (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt1, vt0);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE ((t0.c0 IN (vt1.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt1, rt1, vt0);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE ((t0.c0 IN (vt1.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN '-1960273241' THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND (('-976535848', vt0.c0, vt1.c0))) END) ORDER BY ((vt1.c0 IN ()) IN (((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1960273241' THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND (('-976535848', vt0.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 IN ()) IN (((vt0.c0)||(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN '-1960273241' THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND (('-976535848', vt0.c0, vt1.c0))) END) ORDER BY ((vt1.c0 IN ()) IN (((vt0.c0)||(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '-1960273241' THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND (('-976535848', vt0.c0, vt1.c0))) END) IS TRUE)  as count FROM vt1, vt0 ORDER BY ((vt1.c0 IN ()) IN (((vt0.c0)||(vt0.c0)))));
SELECT COUNT(*) FROM vt1, vt0 WHERE (CASE WHEN '-1960273241' THEN (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) ELSE (((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND (('-976535848', vt0.c0, vt1.c0))) END) ORDER BY ((vt1.c0 IN ()) IN (((vt0.c0)||(vt0.c0))));
SELECT ALL * FROM rt1 WHERE (highlight(((rt1.c0)=(rt1.c1)), ((rt1.c2)<=(rt1.c2)), rt1.c2 COLLATE BINARY, (((NULL, rt1.c2, -9.91668301E8)) BETWEEN (('-1551555629', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1))))) ORDER BY ((((NULL)<<(rt1.c1))) NOTNULL) ASC  NULLS LAST, (NOT (((rt1.c2)%(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt1.c0)=(rt1.c1)), ((rt1.c2)<=(rt1.c2)), rt1.c2 COLLATE BINARY, (((NULL, rt1.c2, -9.91668301E8)) BETWEEN (('-1551555629', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((NULL)<<(rt1.c1))) NOTNULL) ASC  NULLS LAST, (NOT (((rt1.c2)%(rt1.c1)))) ASC);
SELECT ALL * FROM rt1 WHERE (highlight(((rt1.c0)=(rt1.c1)), ((rt1.c2)<=(rt1.c2)), rt1.c2 COLLATE BINARY, (((NULL, rt1.c2, -9.91668301E8)) BETWEEN (('-1551555629', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1))))) ORDER BY ((((NULL)<<(rt1.c1))) NOTNULL) ASC  NULLS LAST, (NOT (((rt1.c2)%(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(((rt1.c0)=(rt1.c1)), ((rt1.c2)<=(rt1.c2)), rt1.c2 COLLATE BINARY, (((NULL, rt1.c2, -9.91668301E8)) BETWEEN (('-1551555629', rt1.c2, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((NULL)<<(rt1.c1))) NOTNULL) ASC  NULLS LAST, (NOT (((rt1.c2)%(rt1.c1)))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<=(CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -258471968 END))) ORDER BY CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (~ (t0.c0)) THEN x'5b4d' ELSE t0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<=(t0.c0)))<=(CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -258471968 END))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (~ (t0.c0)) THEN x'5b4d' ELSE t0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<=(CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -258471968 END))) ORDER BY CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (~ (t0.c0)) THEN x'5b4d' ELSE t0.c0 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)<=(t0.c0)))<=(CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -258471968 END))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (~ (t0.c0)) THEN x'5b4d' ELSE t0.c0 COLLATE RTRIM END);
SELECT ALL * FROM t0 WHERE (((((t0.c0)<=(t0.c0)))<=(CASE WHEN t0.c0 THEN x'' WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN -258471968 END))) ORDER BY CASE WHEN ((((((((t0.c0)OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))OR(x'')) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN t0.c0 COLLATE RTRIM WHEN (~ (t0.c0)) THEN x'5b4d' ELSE t0.c0 COLLATE RTRIM END;
SELECT * FROM rt1, vt0 CROSS JOIN t0 ON (- (vt0.c0 COLLATE BINARY)) WHERE (((((0.6858295518135593)<<(t0.c0))) BETWEEN ('') AND (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((0.6858295518135593)<<(t0.c0))) BETWEEN ('') AND (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN t0 ON (- (vt0.c0 COLLATE BINARY)));
SELECT * FROM rt1, vt0 CROSS JOIN t0 ON (- (vt0.c0 COLLATE BINARY)) WHERE (((((0.6858295518135593)<<(t0.c0))) BETWEEN ('') AND (rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((0.6858295518135593)<<(t0.c0))) BETWEEN ('') AND (rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN t0 ON (- (vt0.c0 COLLATE BINARY)));
SELECT * FROM rt1, vt0 CROSS JOIN t0 ON (- (vt0.c0 COLLATE BINARY)) WHERE (((((0.6858295518135593)<<(t0.c0))) BETWEEN ('') AND (rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE (((rt1.c0 COLLATE BINARY)<(0xffffffffd71f0df8)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<(0xffffffffd71f0df8))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE (((rt1.c0 COLLATE BINARY)<(0xffffffffd71f0df8)));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<(0xffffffffd71f0df8))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT ALL COUNT(*) FROM vt0, rt1, vt1, t0 WHERE (((rt1.c0 COLLATE BINARY)<(0xffffffffd71f0df8)));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)<<(x'')))&(x'' COLLATE RTRIM))) ORDER BY (+ (((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))) DESC, CASE WHEN rt1.c1 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN UNLIKELY(DISTINCT rt1.c1) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST, COALESCE(rt1.c2 COLLATE RTRIM, rt1.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<<(x'')))&(x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ (((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))) DESC, CASE WHEN rt1.c1 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN UNLIKELY(DISTINCT rt1.c1) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST, COALESCE(rt1.c2 COLLATE RTRIM, rt1.c1 COLLATE RTRIM));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)<<(x'')))&(x'' COLLATE RTRIM))) ORDER BY (+ (((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))) DESC, CASE WHEN rt1.c1 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN UNLIKELY(DISTINCT rt1.c1) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST, COALESCE(rt1.c2 COLLATE RTRIM, rt1.c1 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<<(x'')))&(x'' COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ (((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))) DESC, CASE WHEN rt1.c1 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN UNLIKELY(DISTINCT rt1.c1) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST, COALESCE(rt1.c2 COLLATE RTRIM, rt1.c1 COLLATE RTRIM));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c0)<<(x'')))&(x'' COLLATE RTRIM))) ORDER BY (+ (((((rt1.c0)AND(rt1.c1)))AND(vt0.c0)))) DESC, CASE WHEN rt1.c1 COLLATE BINARY THEN ((vt0.c0) NOT NULL) WHEN UNLIKELY(DISTINCT rt1.c1) THEN ((((rt1.c2)OR(rt1.c0)))OR(rt1.c1)) WHEN ((rt1.c0)GLOB(vt0.c0)) THEN ((vt0.c0) NOTNULL) END  NULLS FIRST, COALESCE(rt1.c2 COLLATE RTRIM, rt1.c1 COLLATE RTRIM);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS FALSE) WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ORDER BY (- (((x'966a') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS FALSE) ORDER BY (- (((x'966a') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS FALSE) WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ORDER BY (- (((x'966a') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS FALSE) ORDER BY (- (((x'966a') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 INNER JOIN vt1 ON ((CASE WHEN vt0.c0 THEN vt1.c0 END) IS FALSE) WHERE (CAST(((vt0.c0)<=(vt1.c0)) AS REAL)) ORDER BY (- (((x'966a') NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, t0, vt0 WHERE (CASE WHEN (rt1.c1 IN (t0.c0)) THEN (((vt0.c0))!=((t0.c0))) END) ORDER BY (NOT (json_extract(t0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c1 IN (t0.c0)) THEN (((vt0.c0))<>((t0.c0))) END) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (NOT (json_extract(t0.c0, vt0.c0))));
SELECT ALL * FROM rt1, t0, vt0 WHERE (CASE WHEN (rt1.c1 IN (t0.c0)) THEN (((vt0.c0))!=((t0.c0))) END) ORDER BY (NOT (json_extract(t0.c0, vt0.c0)));
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c1 IN (t0.c0)) THEN (((vt0.c0))<>((t0.c0))) END) IS TRUE)  as count FROM rt1, t0, vt0 ORDER BY (NOT (json_extract(t0.c0, vt0.c0))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, 2.038021862E9)) AND (((t0.c0 IN (t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, 2.038021862E9)) AND (((t0.c0 IN (t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, 2.038021862E9)) AND (((t0.c0 IN (t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT (((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, 2.038021862E9)) AND (((t0.c0 IN (t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS TEXT))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 END, CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END, 2.038021862E9)) AND (((t0.c0 IN (t0.c0)), t0.c0 COLLATE RTRIM, CAST(t0.c0 AS TEXT)))));
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(vt1.c0, (vt0.c0 IN ()))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) END DESC, NULL DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt1.c0, (vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) END DESC, NULL DESC);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(vt1.c0, (vt0.c0 IN ()))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) END DESC, NULL DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt1.c0, (vt0.c0 IN ()))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) END DESC, NULL DESC);
SELECT ALL * FROM vt1, vt0 WHERE (NULLIF(vt1.c0, (vt0.c0 IN ()))) ORDER BY CASE WHEN (NOT (vt1.c0)) THEN (- (vt1.c0)) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)) END DESC, NULL DESC;
SELECT COUNT(*) FROM rt1, t0 WHERE (HEX(rt1.c1)) ORDER BY (((rt1.c0 COLLATE NOCASE))==((((rt1.c1)+(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt1.c1)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c0 COLLATE NOCASE))==((((rt1.c1)+(t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE (HEX(rt1.c1)) ORDER BY (((rt1.c0 COLLATE NOCASE))==((((rt1.c1)+(t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(rt1.c1)) IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c0 COLLATE NOCASE))==((((rt1.c1)+(t0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 WHERE (HEX(rt1.c1)) ORDER BY (((rt1.c0 COLLATE NOCASE))==((((rt1.c1)+(t0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0.9037505188972321) ORDER BY (+ (rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9037505188972321) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0.9037505188972321) ORDER BY (+ (rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9037505188972321) IS TRUE)  as count FROM t0, rt1 ORDER BY (+ (rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (0.9037505188972321) ORDER BY (+ (rt1.c1 COLLATE BINARY)) ASC  NULLS FIRST, NULL  NULLS LAST;
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON STRFTIME(((rt1.c2) ISNULL), CAST(x'' AS REAL), (((rt1.c1))>=((rt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN 1574067163 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, rt1.c1) WHERE (0.3372043699431958) ORDER BY CAST(rt1.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.3372043699431958) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON STRFTIME(((rt1.c2) ISNULL), CAST(x'' AS REAL), (((rt1.c1))>=((rt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN 1574067163 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, rt1.c1) ORDER BY CAST(rt1.c0 COLLATE BINARY AS NUMERIC) ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON STRFTIME(((rt1.c2) ISNULL), CAST(x'' AS REAL), (((rt1.c1))>=((rt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN 1574067163 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, rt1.c1) WHERE (0.3372043699431958) ORDER BY CAST(rt1.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.3372043699431958) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN rt1 ON STRFTIME(((rt1.c2) ISNULL), CAST(x'' AS REAL), (((rt1.c1))>=((rt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN 1574067163 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, rt1.c1) ORDER BY CAST(rt1.c0 COLLATE BINARY AS NUMERIC) ASC);
SELECT ALL * FROM vt1 LEFT OUTER JOIN rt1 ON STRFTIME(((rt1.c2) ISNULL), CAST(x'' AS REAL), (((rt1.c1))>=((rt1.c0))), CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN 1574067163 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END, rt1.c1) WHERE (0.3372043699431958) ORDER BY CAST(rt1.c0 COLLATE BINARY AS NUMERIC) ASC;
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2)>=(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2)>=(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>=(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c2)>=(rt1.c2)) COLLATE RTRIM);
SELECT * FROM vt1, t0 WHERE ('-1740087371') ORDER BY (json_insert(t0.c0, vt1.c0, t0.c0, vt1.c0, 'Z_t&\', vt1.c0, t0.c0) IN ());
SELECT SUM(count) FROM (SELECT (('-1740087371') IS TRUE)  as count FROM vt1, t0 ORDER BY (json_insert(t0.c0, vt1.c0, t0.c0, vt1.c0, 'Z_t&\', vt1.c0, t0.c0) IN ()));
SELECT * FROM vt1, t0 WHERE ('-1740087371') ORDER BY (json_insert(t0.c0, vt1.c0, t0.c0, vt1.c0, 'Z_t&\', vt1.c0, t0.c0) IN ());
SELECT SUM(count) FROM (SELECT (('-1740087371') IS TRUE)  as count FROM vt1, t0 ORDER BY (json_insert(t0.c0, vt1.c0, t0.c0, vt1.c0, 'Z_t&\', vt1.c0, t0.c0) IN ()));
SELECT * FROM vt1, t0 WHERE ('-1740087371') ORDER BY (json_insert(t0.c0, vt1.c0, t0.c0, vt1.c0, 'Z_t&\', vt1.c0, t0.c0) IN ());
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((((t0.c0))>=((t0.c0))))>((rt1.c0 IN ()))) FULL OUTER JOIN t0 ON CASE WHEN ((742777424) NOT BETWEEN (rt1.c1) AND (x'')) THEN (t0.c0 IN ()) WHEN ((t0.c0)>>(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) WHEN rt1.c1 COLLATE BINARY THEN rt1.c2 END WHERE (((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))>(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))>(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((((t0.c0))>=((t0.c0))))>((rt1.c0 IN ()))) FULL OUTER JOIN t0 ON CASE WHEN ((742777424) NOT BETWEEN (rt1.c1) AND (x'')) THEN (t0.c0 IN ()) WHEN ((t0.c0)>>(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) WHEN rt1.c1 COLLATE BINARY THEN rt1.c2 END);
SELECT ALL * FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((((t0.c0))>=((t0.c0))))>((rt1.c0 IN ()))) FULL OUTER JOIN t0 ON CASE WHEN ((742777424) NOT BETWEEN (rt1.c1) AND (x'')) THEN (t0.c0 IN ()) WHEN ((t0.c0)>>(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) WHEN rt1.c1 COLLATE BINARY THEN rt1.c2 END WHERE (((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))>(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(rt1.c2)))OR(vt0.c0)))>(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt1 FULL OUTER JOIN vt1 ON (((((t0.c0))>=((t0.c0))))>((rt1.c0 IN ()))) FULL OUTER JOIN t0 ON CASE WHEN ((742777424) NOT BETWEEN (rt1.c1) AND (x'')) THEN (t0.c0 IN ()) WHEN ((t0.c0)>>(vt1.c0)) THEN ((((vt0.c0)AND(vt0.c0)))AND(t0.c0)) WHEN rt1.c1 COLLATE BINARY THEN rt1.c2 END);
SELECT * FROM vt1, t0, vt0 WHERE ((((((t0.c0) NOTNULL)))<((json_remove(vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOTNULL)))<((json_remove(vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT * FROM vt1, t0, vt0 WHERE ((((((t0.c0) NOTNULL)))<((json_remove(vt1.c0, vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0) NOTNULL)))<((json_remove(vt1.c0, vt1.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<=((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<=((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0))<=((vt0.c0))) END);
SELECT ALL * FROM t0, vt1 WHERE (((((((((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((((vt1.c0)AND(t0.c0)))AND(0xffffffffb24621e0))))) ORDER BY ((((x'9c03')*(vt1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((((vt1.c0)AND(t0.c0)))AND(0xffffffffb24621e0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((x'9c03')*(vt1.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((((((((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((((vt1.c0)AND(t0.c0)))AND(0xffffffffb24621e0))))) ORDER BY ((((x'9c03')*(vt1.c0))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((((vt1.c0)AND(t0.c0)))AND(0xffffffffb24621e0))))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((((x'9c03')*(vt1.c0))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (((((((((((((((vt1.c0)OR(t0.c0)))AND(t0.c0)))AND(x'')))AND(t0.c0)))AND(t0.c0)))AND(t0.c0)))IS NOT(((((vt1.c0)AND(t0.c0)))AND(0xffffffffb24621e0))))) ORDER BY ((((x'9c03')*(vt1.c0))) IS FALSE)  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c0)>>(t0.c0)) IN ()) WHERE (((0.988287986404092) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.988287986404092) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c0)>>(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c0)>>(t0.c0)) IN ()) WHERE (((0.988287986404092) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((0.988287986404092) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c0)>>(t0.c0)) IN ()));
SELECT COUNT(*) FROM vt0, vt1 LEFT OUTER JOIN t0 ON (((t0.c0)>>(t0.c0)) IN ()) WHERE (((0.988287986404092) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0) NOTNULL))));
SELECT ALL COUNT(*) FROM t0, rt1, vt1 WHERE ((((((((((((1.466252958E9, rt1.c0, vt1.c0, rt1.c0, rt1.c2))<((t0.c0, rt1.c0, rt1.c1, t0.c0, 0.7820777636572508))))AND(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN x'' THEN t0.c0 END)))OR(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((- (rt1.c1)))))OR(((rt1.c2)*(rt1.c1))))) ORDER BY ''  NULLS LAST, ((((~ (rt1.c1)), ((rt1.c0)<>(NULL)), IFNULL(t0.c0, rt1.c1)))<((0.24586604601530127, (rt1.c1 IN ()), ((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((1.466252958E9, rt1.c0, vt1.c0, rt1.c0, rt1.c2))<((t0.c0, rt1.c0, rt1.c1, t0.c0, 0.7820777636572508))))AND(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN x'' THEN t0.c0 END)))OR(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((- (rt1.c1)))))OR(((rt1.c2)*(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ''  NULLS LAST, ((((~ (rt1.c1)), ((rt1.c0)!=(NULL)), IFNULL(t0.c0, rt1.c1)))<((0.24586604601530127, (rt1.c1 IN ()), ((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt1 WHERE ((((((((((((1.466252958E9, rt1.c0, vt1.c0, rt1.c0, rt1.c2))<((t0.c0, rt1.c0, rt1.c1, t0.c0, 0.7820777636572508))))AND(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN x'' THEN t0.c0 END)))OR(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((- (rt1.c1)))))OR(((rt1.c2)*(rt1.c1))))) ORDER BY ''  NULLS LAST, ((((~ (rt1.c1)), ((rt1.c0)<>(NULL)), IFNULL(t0.c0, rt1.c1)))<((0.24586604601530127, (rt1.c1 IN ()), ((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((1.466252958E9, rt1.c0, vt1.c0, rt1.c0, rt1.c2))<((t0.c0, rt1.c0, rt1.c1, t0.c0, 0.7820777636572508))))AND(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN x'' THEN t0.c0 END)))OR(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((- (rt1.c1)))))OR(((rt1.c2)*(rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ''  NULLS LAST, ((((~ (rt1.c1)), ((rt1.c0)!=(NULL)), IFNULL(t0.c0, rt1.c1)))<((0.24586604601530127, (rt1.c1 IN ()), ((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1, vt1 WHERE ((((((((((((1.466252958E9, rt1.c0, vt1.c0, rt1.c0, rt1.c2))<((t0.c0, rt1.c0, rt1.c1, t0.c0, 0.7820777636572508))))AND(CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN x'' THEN t0.c0 END)))OR(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((- (rt1.c1)))))OR(((rt1.c2)*(rt1.c1))))) ORDER BY ''  NULLS LAST, ((((~ (rt1.c1)), ((rt1.c0)<>(NULL)), IFNULL(t0.c0, rt1.c1)))<((0.24586604601530127, (rt1.c1 IN ()), ((t0.c0)<=(t0.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY '');
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY '';
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY '');
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((NOT (vt0.c0)) IN ())) ORDER BY '';
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY) ORDER BY ''  NULLS FIRST, ((((vt0.c0)IS(rt1.c1)))IS(json_patch(rt1.c2, rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY ''  NULLS FIRST, ((((vt0.c0)IS(rt1.c1)))IS(json_patch(rt1.c2, rt1.c1))));
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY) ORDER BY ''  NULLS FIRST, ((((vt0.c0)IS(rt1.c1)))IS(json_patch(rt1.c2, rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY ''  NULLS FIRST, ((((vt0.c0)IS(rt1.c1)))IS(json_patch(rt1.c2, rt1.c1))));
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY (((((vt0.c0)&(vt0.c0)), (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, vt0.c0, vt0.c0))), ((vt0.c0) NOT NULL), ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (t0.c0))))<((t0.c0, ((((NULL)AND(t0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, x'2cba97f37cf8', (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0)&(vt0.c0)), (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, vt0.c0, vt0.c0))), ((vt0.c0) NOT NULL), ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (t0.c0))))<((t0.c0, ((((NULL)AND(t0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, x'2cba97f37cf8', (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY (((((vt0.c0)&(vt0.c0)), (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, vt0.c0, vt0.c0))), ((vt0.c0) NOT NULL), ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (t0.c0))))<((t0.c0, ((((NULL)AND(t0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, x'2cba97f37cf8', (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((vt0.c0)&(vt0.c0)), (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, vt0.c0, vt0.c0))), ((vt0.c0) NOT NULL), ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (t0.c0))))<((t0.c0, ((((NULL)AND(t0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, x'2cba97f37cf8', (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY (((((vt0.c0)&(vt0.c0)), (((t0.c0, vt0.c0, t0.c0)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((NULL, vt0.c0, vt0.c0))), ((vt0.c0) NOT NULL), ((((t0.c0)AND(vt0.c0)))AND(vt0.c0)), (NOT (t0.c0))))<((t0.c0, ((((NULL)AND(t0.c0)))AND(vt0.c0)), vt0.c0 COLLATE RTRIM, x'2cba97f37cf8', (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0, rt1, vt1 WHERE (CAST('-1119646158' AS INTEGER) COLLATE NOCASE) ORDER BY ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END)AND(LTRIM(vt0.c0))))OR((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1119646158' AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt1, vt1 ORDER BY ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END)AND(LTRIM(vt0.c0))))OR((+ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0, rt1, vt1 WHERE (CAST('-1119646158' AS INTEGER) COLLATE NOCASE) ORDER BY ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END)AND(LTRIM(vt0.c0))))OR((+ (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('-1119646158' AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0, rt1, vt1 ORDER BY ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END)AND(LTRIM(vt0.c0))))OR((+ (vt1.c0)))) ASC);
SELECT COUNT(*) FROM t0, vt0, rt1, vt1 WHERE (CAST('-1119646158' AS INTEGER) COLLATE NOCASE) ORDER BY ((((CASE WHEN rt1.c2 THEN vt0.c0 ELSE vt0.c0 END)AND(LTRIM(vt0.c0))))OR((+ (vt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((vt0.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((((vt0.c0)%(t0.c0)), CAST(rt1.c1 AS REAL), ((rt1.c2)|(rt1.c0)))) AND (('-1902009779', CAST(rt1.c2 AS BLOB), HEX(DISTINCT rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((((vt0.c0)%(t0.c0)), CAST(rt1.c1 AS REAL), ((rt1.c2)|(rt1.c0)))) AND (('-1902009779', CAST(rt1.c2 AS BLOB), HEX(DISTINCT rt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((vt0.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((((vt0.c0)%(t0.c0)), CAST(rt1.c1 AS REAL), ((rt1.c2)|(rt1.c0)))) AND (('-1902009779', CAST(rt1.c2 AS BLOB), HEX(DISTINCT rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((((vt0.c0)%(t0.c0)), CAST(rt1.c1 AS REAL), ((rt1.c2)|(rt1.c0)))) AND (('-1902009779', CAST(rt1.c2 AS BLOB), HEX(DISTINCT rt1.c1))))) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE ((((vt0.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((((vt0.c0)%(t0.c0)), CAST(rt1.c1 AS REAL), ((rt1.c2)|(rt1.c0)))) AND (('-1902009779', CAST(rt1.c2 AS BLOB), HEX(DISTINCT rt1.c1)))));
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (vt1.c0)))))OR(((rt1.c1)||(x'11dd04b7')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (vt1.c0)))))OR(((rt1.c1)||(x'11dd04b7')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (vt1.c0)))))OR(((rt1.c1)||(x'11dd04b7')))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM vt1, rt1 ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (vt1.c0)))))OR(((rt1.c1)||(x'11dd04b7')))) DESC  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (rt1.c1) ORDER BY ((((((((vt1.c0)OR(vt1.c0)))AND(rt1.c2)))OR((rt1.c2 IN (vt1.c0)))))OR(((rt1.c1)||(x'11dd04b7')))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((0.7306792199221486) NOT BETWEEN (vt0.c0) AND ((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7306792199221486) NOT BETWEEN (vt0.c0) AND ((~ (rt1.c1))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((0.7306792199221486) NOT BETWEEN (vt0.c0) AND ((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.7306792199221486) NOT BETWEEN (vt0.c0) AND ((~ (rt1.c1))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE (((0.7306792199221486) NOT BETWEEN (vt0.c0) AND ((~ (rt1.c1)))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON '' WHERE (CAST(((vt0.c0)==(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)=(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON '');
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON '' WHERE (CAST(((vt0.c0)==(NULL)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)=(NULL)) AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON '');
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON '' WHERE (CAST(((vt0.c0)==(NULL)) AS INTEGER));
SELECT * FROM rt1, vt1, vt0 WHERE ((((rt1.c0)<(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT * FROM rt1, vt1, vt0 WHERE ((((rt1.c0)<(rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT * FROM rt1, vt1, vt0 WHERE ((((rt1.c0)<(rt1.c2)) IN ()));
SELECT * FROM vt0, rt1, vt1 WHERE (((((((((((((CAST(rt1.c0 AS NUMERIC))OR((((rt1.c1, 0x74f49a23, vt1.c0))!=((rt1.c0, rt1.c1, vt0.c0))))))AND(((('-683606562'))>((vt1.c0))))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(NULL)))OR(SUBSTR(rt1.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt1.c0 AS NUMERIC))OR((((rt1.c1, 0x74f49a23, vt1.c0))!=((rt1.c0, rt1.c1, vt0.c0))))))AND(((('-683606562'))>((vt1.c0))))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(NULL)))OR(SUBSTR(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT * FROM vt0, rt1, vt1 WHERE (((((((((((((CAST(rt1.c0 AS NUMERIC))OR((((rt1.c1, 0x74f49a23, vt1.c0))!=((rt1.c0, rt1.c1, vt0.c0))))))AND(((('-683606562'))>((vt1.c0))))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(NULL)))OR(SUBSTR(rt1.c1, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt1.c0 AS NUMERIC))OR((((rt1.c1, 0x74f49a23, vt1.c0))!=((rt1.c0, rt1.c1, vt0.c0))))))AND(((('-683606562'))>((vt1.c0))))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(NULL)))OR(SUBSTR(rt1.c1, rt1.c0)))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT * FROM vt0, rt1, vt1 WHERE (((((((((((((CAST(rt1.c0 AS NUMERIC))OR((((rt1.c1, 0x74f49a23, vt1.c0))!=((rt1.c0, rt1.c1, vt0.c0))))))AND(((('-683606562'))>((vt1.c0))))))AND(((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)))))OR(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))))OR(NULL)))OR(SUBSTR(rt1.c1, rt1.c0))));
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((- (0Xfffffffffc224ab2)))-(((t0.c0)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (0Xfffffffffc224ab2)))-(((t0.c0)>=(t0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((- (0Xfffffffffc224ab2)))-(((t0.c0)>=(t0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (0Xfffffffffc224ab2)))-(((t0.c0)>=(t0.c0))))) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT ALL * FROM vt1, t0, vt0 WHERE ((((- (0Xfffffffffc224ab2)))-(((t0.c0)>=(t0.c0)))));
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (((+ (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (((+ (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((+ (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (((+ (rt1.c0)) IN ()));
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0)||(t0.c0)))) AND ((((rt1.c1) IS TRUE))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((- (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c0)||(t0.c0)))) AND ((((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt1 ORDER BY (((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((- (rt1.c1)))) DESC);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0)||(t0.c0)))) AND ((((rt1.c1) IS TRUE))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((- (rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt1.c0)||(t0.c0)))) AND ((((rt1.c1) IS TRUE))))) IS TRUE)  as count FROM t0 NOT INDEXED, rt1 ORDER BY (((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((- (rt1.c1)))) DESC);
SELECT COUNT(*) FROM t0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c0)||(t0.c0)))) AND ((((rt1.c1) IS TRUE))))) ORDER BY (((((t0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) BETWEEN (rt1.c0 COLLATE RTRIM) AND ((- (rt1.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c2)*(vt0.c0)))>>((((rt1.c1))=((rt1.c0))))) WHERE (((((((((0xffffffffc5f46d5b)OR(rt1.c0)))OR(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((0Xffffffffc5f46d5b)OR(rt1.c0)))OR(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c2)*(vt0.c0)))>>((((rt1.c1))==((rt1.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c2)*(vt0.c0)))>>((((rt1.c1))=((rt1.c0))))) WHERE (((((((((0xffffffffc5f46d5b)OR(rt1.c0)))OR(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((0Xffffffffc5f46d5b)OR(rt1.c0)))OR(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c2)*(vt0.c0)))>>((((rt1.c1))==((rt1.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0 CROSS JOIN vt1 ON ((((rt1.c2)*(vt0.c0)))>>((((rt1.c1))=((rt1.c0))))) WHERE (((((((((0xffffffffc5f46d5b)OR(rt1.c0)))OR(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END)))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(((rt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((vt1.c0)GLOB((((t0.c0, rt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c1, t0.c0, t0.c0)) AND ((x'', vt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB((((t0.c0, rt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c1, t0.c0, t0.c0)) AND ((x'', vt1.c0, rt1.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((vt1.c0)GLOB((((t0.c0, rt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c1, t0.c0, t0.c0)) AND ((x'', vt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0)GLOB((((t0.c0, rt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c1, t0.c0, t0.c0)) AND ((x'', vt1.c0, rt1.c1)))))) IS TRUE)  as count FROM vt0, t0, vt1, rt1);
SELECT ALL COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((vt1.c0)GLOB((((t0.c0, rt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c1, t0.c0, t0.c0)) AND ((x'', vt1.c0, rt1.c1))))));
SELECT ALL * FROM t0, vt1 WHERE (0x4d873a4b) ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM)  NULLS FIRST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0x4d873a4b) IS TRUE)  as count FROM t0, vt1 ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM)  NULLS FIRST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (0x4d873a4b) ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM)  NULLS FIRST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0x4d873a4b) IS TRUE)  as count FROM t0, vt1 ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM)  NULLS FIRST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM t0, vt1 WHERE (0x4d873a4b) ORDER BY HEX(DISTINCT vt1.c0 COLLATE RTRIM)  NULLS FIRST, CAST(t0.c0 COLLATE RTRIM AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1, t0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt1.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT COUNT(*) FROM vt0, rt1, t0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt1.c0 END AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN vt1.c0 END AS BLOB)) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT COUNT(*) FROM vt0, rt1, t0, vt1 WHERE (CAST(CASE WHEN vt0.c0 THEN vt1.c0 END AS BLOB));
SELECT * FROM t0 INNER JOIN vt0 ON NULL LEFT OUTER JOIN vt1 ON DATETIME(((rt1.c1) NOT NULL), vt0.c0, (((vt1.c0, t0.c0, 0X37747467)) NOT BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((rt1.c0, vt1.c0, rt1.c2)))) FULL OUTER JOIN rt1 ON NULL WHERE ((((((rt1.c0)+(vt1.c0))))=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)+(vt1.c0))))==((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON NULL LEFT OUTER JOIN vt1 ON DATETIME(((rt1.c1) NOT NULL), vt0.c0, (((vt1.c0, t0.c0, 0X37747467)) NOT BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((rt1.c0, vt1.c0, rt1.c2)))) FULL OUTER JOIN rt1 ON NULL);
SELECT * FROM t0 INNER JOIN vt0 ON NULL LEFT OUTER JOIN vt1 ON DATETIME(((rt1.c1) NOT NULL), vt0.c0, (((vt1.c0, t0.c0, 0X37747467)) NOT BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((rt1.c0, vt1.c0, rt1.c2)))) FULL OUTER JOIN rt1 ON NULL WHERE ((((((rt1.c0)+(vt1.c0))))=((vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c0)+(vt1.c0))))==((vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON NULL LEFT OUTER JOIN vt1 ON DATETIME(((rt1.c1) NOT NULL), vt0.c0, (((vt1.c0, t0.c0, 0X37747467)) NOT BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((rt1.c0, vt1.c0, rt1.c2)))) FULL OUTER JOIN rt1 ON NULL);
SELECT * FROM t0, rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS BLOB)) ORDER BY (((('1469037614') BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ('caOR7') AND (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, rt1 ORDER BY (((('1469037614') BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ('caOR7') AND (t0.c0))  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS BLOB)) ORDER BY (((('1469037614') BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ('caOR7') AND (t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS BLOB) AS BLOB)) IS TRUE)  as count FROM t0, rt1 ORDER BY (((('1469037614') BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ('caOR7') AND (t0.c0))  NULLS FIRST);
SELECT * FROM t0, rt1 WHERE (CAST(CAST(rt1.c1 AS BLOB) AS BLOB)) ORDER BY (((('1469037614') BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN ('caOR7') AND (t0.c0))  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, vt0 WHERE ((((((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN ((NULL, rt1.c0, vt0.c0)) AND ((rt1.c0, rt1.c1, vt0.c0)))) BETWEEN ((rt1.c1 IN ())) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c2)-(rt1.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN ((NULL, rt1.c0, vt0.c0)) AND ((rt1.c0, rt1.c1, vt0.c0)))) BETWEEN ((rt1.c1 IN ())) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((rt1.c2)-(rt1.c2))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt1, vt1, vt0 WHERE ((((((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN ((NULL, rt1.c0, vt0.c0)) AND ((rt1.c0, rt1.c1, vt0.c0)))) BETWEEN ((rt1.c1 IN ())) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c2)-(rt1.c2))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN ((NULL, rt1.c0, vt0.c0)) AND ((rt1.c0, rt1.c1, vt0.c0)))) BETWEEN ((rt1.c1 IN ())) AND (vt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((((rt1.c2)-(rt1.c2))) NOTNULL)  NULLS LAST);
SELECT ALL * FROM rt1, vt1, vt0 WHERE ((((((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN ((NULL, rt1.c0, vt0.c0)) AND ((rt1.c0, rt1.c1, vt0.c0)))) BETWEEN ((rt1.c1 IN ())) AND (vt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c2)-(rt1.c2))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((vt1.c0 COLLATE RTRIM)/(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)/(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((vt1.c0 COLLATE RTRIM)/(rt1.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM)/(rt1.c2 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, vt1, rt1);
SELECT ALL * FROM vt0, vt1, rt1 WHERE (((vt1.c0 COLLATE RTRIM)/(rt1.c2 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE (((((((((CASE t0.c0  WHEN NULL THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t0.c0  WHEN NULL THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((CASE t0.c0  WHEN NULL THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE t0.c0  WHEN NULL THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((((CASE t0.c0  WHEN NULL THEN t0.c0 END)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))))OR(t0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((CAST(rt1.c2 AS INTEGER))AND(rt1.c1 COLLATE RTRIM)))OR(('-1502771800' IN (rt1.c2)))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))AND(RTRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c2 AS INTEGER))AND(rt1.c1 COLLATE RTRIM)))OR(('-1502771800' IN (rt1.c2)))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))AND(RTRIM(t0.c0)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((CAST(rt1.c2 AS INTEGER))AND(rt1.c1 COLLATE RTRIM)))OR(('-1502771800' IN (rt1.c2)))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))AND(RTRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((((CAST(rt1.c2 AS INTEGER))AND(rt1.c1 COLLATE RTRIM)))OR(('-1502771800' IN (rt1.c2)))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))AND(RTRIM(t0.c0)))) IS TRUE)  as count FROM rt1, t0);
SELECT COUNT(*) FROM rt1, t0 WHERE (((((((((CAST(rt1.c2 AS INTEGER))AND(rt1.c1 COLLATE RTRIM)))OR(('-1502771800' IN (rt1.c2)))))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (t0.c0)))))AND(RTRIM(t0.c0))));
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CAST(((t0.c0) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((rt1.c0)%(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((rt1.c0)%(rt1.c2)))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((rt1.c0)%(rt1.c2))))));
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((rt1.c0)%(rt1.c2)))))) IS TRUE)  as count FROM vt1, vt0, rt1);
SELECT COUNT(*) FROM vt1, vt0, rt1 WHERE ((((vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS TEXT))) AND ((((rt1.c0)%(rt1.c2))))));
SELECT * FROM vt0, t0, rt1 WHERE (LOWER(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))) ORDER BY ((rt1.c2) NOT BETWEEN (((0.39887014440473934)IS(rt1.c2))) AND (SQLITE_COMPILEOPTION_GET(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY ((rt1.c2) NOT BETWEEN (((0.39887014440473934)IS(rt1.c2))) AND (SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT * FROM vt0, t0, rt1 WHERE (LOWER(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))) ORDER BY ((rt1.c2) NOT BETWEEN (((0.39887014440473934)IS(rt1.c2))) AND (SQLITE_COMPILEOPTION_GET(t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))) IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY ((rt1.c2) NOT BETWEEN (((0.39887014440473934)IS(rt1.c2))) AND (SQLITE_COMPILEOPTION_GET(t0.c0))));
SELECT * FROM vt0, t0, rt1 WHERE (LOWER(((vt0.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))) ORDER BY ((rt1.c2) NOT BETWEEN (((0.39887014440473934)IS(rt1.c2))) AND (SQLITE_COMPILEOPTION_GET(t0.c0)));
SELECT * FROM vt1, vt0, rt1 WHERE ((vt0.c0 IN (0.5354911161761037, 0.6058253351349535)) COLLATE NOCASE) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (0.5354911161761037, 0.6058253351349535)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END) IS TRUE)  NULLS LAST);
SELECT * FROM vt1, vt0, rt1 WHERE ((vt0.c0 IN (0.5354911161761037, 0.6058253351349535)) COLLATE NOCASE) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (0.5354911161761037, 0.6058253351349535)) COLLATE NOCASE) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END) IS TRUE)  NULLS LAST);
SELECT * FROM vt1, vt0, rt1 WHERE ((vt0.c0 IN (0.5354911161761037, 0.6058253351349535)) COLLATE NOCASE) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END) IS TRUE)  NULLS LAST;
SELECT ALL * FROM rt1, t0, vt0 NATURAL JOIN vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt1, t0, vt0 NATURAL JOIN vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1, t0, vt0 NATURAL JOIN vt1);
SELECT ALL * FROM rt1, t0, vt0 NATURAL JOIN vt1 WHERE (x'');
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((rt1.c0))=((t0.c0)))))>=(((((rt1.c0, rt1.c1, t0.c0))<((vt1.c0, 0x6bb43fa9, vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, t0, vt1 ORDER BY ((((((rt1.c0))=((t0.c0)))))>=(((((rt1.c0, rt1.c1, t0.c0))<((vt1.c0, 0X6bb43fa9, vt0.c0)))))) ASC);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((rt1.c0))=((t0.c0)))))>=(((((rt1.c0, rt1.c1, t0.c0))<((vt1.c0, 0x6bb43fa9, vt0.c0)))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, t0, vt1 ORDER BY ((((((rt1.c0))=((t0.c0)))))>=(((((rt1.c0, rt1.c1, t0.c0))<((vt1.c0, 0X6bb43fa9, vt0.c0)))))) ASC);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE (CAST(CAST(rt1.c2 AS NUMERIC) AS NUMERIC)) ORDER BY ((((((rt1.c0))=((t0.c0)))))>=(((((rt1.c0, rt1.c1, t0.c0))<((vt1.c0, 0x6bb43fa9, vt0.c0)))))) ASC;
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 INNER JOIN vt0 ON ((((vt0.c0) IS FALSE)) BETWEEN (((vt0.c0)-(vt0.c0))) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) WHERE (vt0.c0);
SELECT ALL * FROM t0 WHERE ((~ (x'a8f739da'))) ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN (- (t0.c0)) THEN (~ (t0.c0)) END  NULLS LAST, ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) DESC  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL (((~ (x'a8f739da'))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN (- (t0.c0)) THEN (~ (t0.c0)) END  NULLS LAST, ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) DESC  NULLS FIRST, '');
SELECT ALL * FROM t0 WHERE ((~ (x'a8f739da'))) ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN (- (t0.c0)) THEN (~ (t0.c0)) END  NULLS LAST, ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) DESC  NULLS FIRST, '';
SELECT SUM(count) FROM (SELECT ALL (((~ (x'a8f739da'))) IS TRUE)  as count FROM t0 ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN (- (t0.c0)) THEN (~ (t0.c0)) END  NULLS LAST, ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) DESC  NULLS FIRST, '');
SELECT ALL * FROM t0 WHERE ((~ (x'a8f739da'))) ORDER BY CASE ((t0.c0)>>(t0.c0))  WHEN (- (t0.c0)) THEN (~ (t0.c0)) END  NULLS LAST, ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) IN ()) DESC  NULLS FIRST, '';
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(0.23425959686914677 AS INTEGER) CROSS JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (-887418541) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) WHERE (((vt1.c0)GLOB(NULL))) ORDER BY CASE CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END  WHEN UPPER(vt0.c0) THEN (((t0.c0))>=((vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)GLOB(NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(0.23425959686914677 AS INTEGER) CROSS JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (-887418541) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY CASE CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END  WHEN UPPER(vt0.c0) THEN (((t0.c0))>=((vt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(0.23425959686914677 AS INTEGER) CROSS JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (-887418541) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) WHERE (((vt1.c0)GLOB(NULL))) ORDER BY CASE CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END  WHEN UPPER(vt0.c0) THEN (((t0.c0))>=((vt0.c0))) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)GLOB(NULL))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON CAST(0.23425959686914677 AS INTEGER) CROSS JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (-887418541) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) ORDER BY CASE CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END  WHEN UPPER(vt0.c0) THEN (((t0.c0))>=((vt0.c0))) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON CAST(0.23425959686914677 AS INTEGER) CROSS JOIN vt1 ON ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (-887418541) AND (CASE WHEN vt0.c0 THEN vt1.c0 END)) WHERE (((vt1.c0)GLOB(NULL))) ORDER BY CASE CASE WHEN vt1.c0 THEN t0.c0 ELSE t0.c0 END  WHEN UPPER(vt0.c0) THEN (((t0.c0))>=((vt0.c0))) END  NULLS LAST;
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1)IS(STRFTIME(rt1.c2, NULL, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)IS(STRFTIME(rt1.c2, NULL, rt1.c2)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1)IS(STRFTIME(rt1.c2, NULL, rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1)IS(STRFTIME(rt1.c2, NULL, rt1.c2)))) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE (((rt1.c1)IS(STRFTIME(rt1.c2, NULL, rt1.c2))));
SELECT ALL * FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)&('Y'))) ORDER BY CASE t0.c0  WHEN vt1.c0 THEN 'utc' END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)&('Y'))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE t0.c0  WHEN vt1.c0 THEN 'utc' END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)&('Y'))) ORDER BY CASE t0.c0  WHEN vt1.c0 THEN 'utc' END COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt1.c0 THEN vt1.c0 END)&('Y'))) IS TRUE)  as count FROM t0, vt1 ORDER BY CASE t0.c0  WHEN vt1.c0 THEN 'utc' END COLLATE RTRIM  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (((CASE WHEN vt1.c0 THEN vt1.c0 END)&('Y'))) ORDER BY CASE t0.c0  WHEN vt1.c0 THEN 'utc' END COLLATE RTRIM  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((('407120040') BETWEEN ((~ (rt1.c0))) AND (((rt1.c2)LIKE(vt0.c0))))) ORDER BY CAST('-1366280011' AS INTEGER) ASC, ((((((rt1.c0)%(rt1.c2)))OR(SQLITE_VERSION())))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, ((((rt1.c2)*(t0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('407120040') BETWEEN ((~ (rt1.c0))) AND (((rt1.c2)LIKE(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CAST('-1366280011' AS INTEGER) ASC, ((((((rt1.c0)%(rt1.c2)))OR(SQLITE_VERSION())))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, ((((rt1.c2)*(t0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((('407120040') BETWEEN ((~ (rt1.c0))) AND (((rt1.c2)LIKE(vt0.c0))))) ORDER BY CAST('-1366280011' AS INTEGER) ASC, ((((((rt1.c0)%(rt1.c2)))OR(SQLITE_VERSION())))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, ((((rt1.c2)*(t0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('407120040') BETWEEN ((~ (rt1.c0))) AND (((rt1.c2)LIKE(vt0.c0))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CAST('-1366280011' AS INTEGER) ASC, ((((((rt1.c0)%(rt1.c2)))OR(SQLITE_VERSION())))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, ((((rt1.c2)*(t0.c0))) IS TRUE) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((('407120040') BETWEEN ((~ (rt1.c0))) AND (((rt1.c2)LIKE(vt0.c0))))) ORDER BY CAST('-1366280011' AS INTEGER) ASC, ((((((rt1.c0)%(rt1.c2)))OR(SQLITE_VERSION())))OR(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))) DESC  NULLS FIRST, ((((rt1.c2)*(t0.c0))) IS TRUE) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c0)AND(rt1.c1)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c0)&(rt1.c2)))))OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))))AND(((rt1.c0)=(rt1.c1)))))AND(0.6875118052374433 COLLATE RTRIM)))AND(rt1.c0))) ORDER BY ((((rt1.c0))=((rt1.c2))) IN ())  NULLS FIRST, (((rt1.c2 IN (rt1.c1)))!=(CAST(NULL AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c0)AND(rt1.c1)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c0)&(rt1.c2)))))OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))))AND(((rt1.c0)==(rt1.c1)))))AND(0.6875118052374433 COLLATE RTRIM)))AND(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0))=((rt1.c2))) IN ())  NULLS FIRST, (((rt1.c2 IN (rt1.c1)))<>(CAST(NULL AS NUMERIC))) DESC);
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c0)AND(rt1.c1)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c0)&(rt1.c2)))))OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))))AND(((rt1.c0)=(rt1.c1)))))AND(0.6875118052374433 COLLATE RTRIM)))AND(rt1.c0))) ORDER BY ((((rt1.c0))=((rt1.c2))) IN ())  NULLS FIRST, (((rt1.c2 IN (rt1.c1)))!=(CAST(NULL AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt1.c0)AND(rt1.c1)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c0)&(rt1.c2)))))OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))))AND(((rt1.c0)==(rt1.c1)))))AND(0.6875118052374433 COLLATE RTRIM)))AND(rt1.c0))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0))=((rt1.c2))) IN ())  NULLS FIRST, (((rt1.c2 IN (rt1.c1)))<>(CAST(NULL AS NUMERIC))) DESC);
SELECT * FROM rt1 WHERE (((((((((((((((rt1.c0)AND(rt1.c1)))OR(CAST(rt1.c1 AS NUMERIC))))AND(((rt1.c0)&(rt1.c2)))))OR(((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))))AND(((rt1.c0)=(rt1.c1)))))AND(0.6875118052374433 COLLATE RTRIM)))AND(rt1.c0))) ORDER BY ((((rt1.c0))=((rt1.c2))) IN ())  NULLS FIRST, (((rt1.c2 IN (rt1.c1)))!=(CAST(NULL AS NUMERIC))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (x'380d') ORDER BY ((((rt1.c2)<(rt1.c2)))>(((NULL)AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'380d') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<(rt1.c2)))>(((NULL)AND(rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'380d') ORDER BY ((((rt1.c2)<(rt1.c2)))>(((NULL)AND(rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'380d') IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2)<(rt1.c2)))>(((NULL)AND(rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'380d') ORDER BY ((((rt1.c2)<(rt1.c2)))>(((NULL)AND(rt1.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt1 WHERE (CASE ((rt1.c2)AND(vt0.c0))  WHEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) THEN (rt1.c0 IN ()) ELSE '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)AND(vt0.c0))  WHEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) THEN (rt1.c0 IN ()) ELSE '' END) IS TRUE)  as count FROM vt0, vt1, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt1 WHERE (CASE ((rt1.c2)AND(vt0.c0))  WHEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) THEN (rt1.c0 IN ()) ELSE '' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c2)AND(vt0.c0))  WHEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) THEN (rt1.c0 IN ()) ELSE '' END) IS TRUE)  as count FROM vt0, vt1, t0, rt1);
SELECT ALL COUNT(*) FROM vt0, vt1, t0, rt1 WHERE (CASE ((rt1.c2)AND(vt0.c0))  WHEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) THEN (rt1.c0 IN ()) ELSE '' END);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE ((((vt0.c0)||(t0.c0)) IN ())) ORDER BY ((x'0d6f') BETWEEN ((NOT (vt0.c0))) AND (IFNULL(rt1.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)||(t0.c0)) IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1, vt0, t0 ORDER BY ((x'0d6f') BETWEEN ((NOT (vt0.c0))) AND (IFNULL(rt1.c1, rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE ((((vt0.c0)||(t0.c0)) IN ())) ORDER BY ((x'0d6f') BETWEEN ((NOT (vt0.c0))) AND (IFNULL(rt1.c1, rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)||(t0.c0)) IN ())) IS TRUE)  as count FROM rt1 NOT INDEXED, vt1, vt0, t0 ORDER BY ((x'0d6f') BETWEEN ((NOT (vt0.c0))) AND (IFNULL(rt1.c1, rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE ((((vt0.c0)||(t0.c0)) IN ())) ORDER BY ((x'0d6f') BETWEEN ((NOT (vt0.c0))) AND (IFNULL(rt1.c1, rt1.c1)));
SELECT * FROM t0, rt1, vt1 WHERE (CASE WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (-366379867) AND (rt1.c0)) WHEN ((t0.c0) IS TRUE) THEN x'' WHEN CASE rt1.c2  WHEN x'' THEN rt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt1.c1)<(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (-366379867) AND (rt1.c0)) WHEN ((t0.c0) IS TRUE) THEN x'' WHEN CASE rt1.c2  WHEN x'' THEN rt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt1.c1)<(NULL)) END) IS TRUE)  as count FROM t0, rt1, vt1);
SELECT * FROM t0, rt1, vt1 WHERE (CASE WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (-366379867) AND (rt1.c0)) WHEN ((t0.c0) IS TRUE) THEN x'' WHEN CASE rt1.c2  WHEN x'' THEN rt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt1.c1)<(NULL)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (-366379867) AND (rt1.c0)) WHEN ((t0.c0) IS TRUE) THEN x'' WHEN CASE rt1.c2  WHEN x'' THEN rt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt1.c1)<(NULL)) END) IS TRUE)  as count FROM t0, rt1, vt1);
SELECT * FROM t0, rt1, vt1 WHERE (CASE WHEN (NOT (t0.c0)) THEN ((rt1.c0) NOT BETWEEN (-366379867) AND (rt1.c0)) WHEN ((t0.c0) IS TRUE) THEN x'' WHEN CASE rt1.c2  WHEN x'' THEN rt1.c0 END THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) ELSE ((rt1.c1)<(NULL)) END);
SELECT * FROM vt1, rt1, t0, vt0 WHERE (NULLIF(((vt1.c0)-(rt1.c2)), vt1.c0)) ORDER BY json((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0)-(rt1.c2)), vt1.c0)) IS TRUE)  as count FROM vt1, rt1, t0, vt0 ORDER BY json((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt1, t0, vt0 WHERE (NULLIF(((vt1.c0)-(rt1.c2)), vt1.c0)) ORDER BY json((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(((vt1.c0)-(rt1.c2)), vt1.c0)) IS TRUE)  as count FROM vt1, rt1, t0, vt0 ORDER BY json((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1, rt1, t0, vt0 WHERE (NULLIF(((vt1.c0)-(rt1.c2)), vt1.c0)) ORDER BY json((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON ((((LOWER(DISTINCT rt1.c2))OR(rt1.c1)))AND((((0.05580311509016367))!=((rt1.c0))))) WHERE (CASE WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE CASE WHEN rt1.c2 THEN '1923962554' WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END END) ORDER BY ((((rt1.c1)GLOB(rt1.c0)))>(UPPER(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE CASE WHEN rt1.c2 THEN '1923962554' WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((LOWER(DISTINCT rt1.c2))OR(rt1.c1)))AND((((0.05580311509016367))!=((rt1.c0))))) ORDER BY ((((rt1.c1)GLOB(rt1.c0)))>(UPPER(rt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON ((((LOWER(DISTINCT rt1.c2))OR(rt1.c1)))AND((((0.05580311509016367))!=((rt1.c0))))) WHERE (CASE WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE CASE WHEN rt1.c2 THEN '1923962554' WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END END) ORDER BY ((((rt1.c1)GLOB(rt1.c0)))>(UPPER(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE CASE WHEN rt1.c2 THEN '1923962554' WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM rt1 INNER JOIN t0 ON ((((LOWER(DISTINCT rt1.c2))OR(rt1.c1)))AND((((0.05580311509016367))!=((rt1.c0))))) ORDER BY ((((rt1.c1)GLOB(rt1.c0)))>(UPPER(rt1.c1)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t0 ON ((((LOWER(DISTINCT rt1.c2))OR(rt1.c1)))AND((((0.05580311509016367))!=((rt1.c0))))) WHERE (CASE WHEN PRINTF(rt1.c0) THEN ((rt1.c1) NOT NULL) ELSE CASE WHEN rt1.c2 THEN '1923962554' WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 WHEN t0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN rt1.c2 THEN rt1.c1 WHEN t0.c0 THEN t0.c0 END END) ORDER BY ((((rt1.c1)GLOB(rt1.c0)))>(UPPER(rt1.c1)))  NULLS LAST;
SELECT * FROM vt1, t0 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CAST(t0.c0 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CAST(t0.c0 AS TEXT) END) IS TRUE)  as count FROM vt1, t0);
SELECT * FROM vt1, t0 WHERE (CASE WHEN (vt1.c0 IN (vt1.c0, vt1.c0)) THEN CAST(t0.c0 AS TEXT) END);
SELECT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (TYPEOF(vt1.c0)))) ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>(vt1.c0)) IN (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (TYPEOF(vt1.c0)))) ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)>(vt1.c0)) IN (TYPEOF(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC);
SELECT * FROM vt1 WHERE ((((vt1.c0)>(vt1.c0)) IN (TYPEOF(vt1.c0)))) ORDER BY (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) DESC;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TRIM(rt1.c2)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END) AND ((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (((rt1.c1))>((rt1.c2))) COLLATE RTRIM WHERE (rt1.c1) ORDER BY ((vt0.c0)<=((+ (t0.c0)))), rt1.c2 DESC  NULLS FIRST, CAST(((vt0.c0) NOT NULL) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TRIM(rt1.c2)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END) AND ((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (((rt1.c1))>((rt1.c2))) COLLATE RTRIM ORDER BY ((vt0.c0)<=((+ (t0.c0)))), rt1.c2 DESC  NULLS FIRST, CAST(((vt0.c0) NOT NULL) AS REAL) ASC);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TRIM(rt1.c2)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END) AND ((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (((rt1.c1))>((rt1.c2))) COLLATE RTRIM WHERE (rt1.c1) ORDER BY ((vt0.c0)<=((+ (t0.c0)))), rt1.c2 DESC  NULLS FIRST, CAST(((vt0.c0) NOT NULL) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TRIM(rt1.c2)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END) AND ((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (((rt1.c1))>((rt1.c2))) COLLATE RTRIM ORDER BY ((vt0.c0)<=((+ (t0.c0)))), rt1.c2 DESC  NULLS FIRST, CAST(((vt0.c0) NOT NULL) AS REAL) ASC);
SELECT COUNT(*) FROM rt1 CROSS JOIN t0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TRIM(rt1.c2)) NOT BETWEEN (CASE rt1.c2  WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END) AND ((t0.c0 IN ()))) RIGHT OUTER JOIN vt0 ON (((rt1.c1))>((rt1.c2))) COLLATE RTRIM WHERE (rt1.c1) ORDER BY ((vt0.c0)<=((+ (t0.c0)))), rt1.c2 DESC  NULLS FIRST, CAST(((vt0.c0) NOT NULL) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (CAST(((vt1.c0)|(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)|(rt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (CAST(((vt1.c0)|(rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt1.c0)|(rt1.c1)) AS REAL)) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (CAST(((vt1.c0)|(rt1.c1)) AS REAL));
SELECT * FROM rt1, t0, vt0, vt1 WHERE (json_array_length(rt1.c1 COLLATE NOCASE, ((0.5298843213050067) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(rt1.c1 COLLATE NOCASE, ((0.5298843213050067) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM rt1, t0 NOT INDEXED, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (json_array_length(rt1.c1 COLLATE NOCASE, ((0.5298843213050067) BETWEEN (vt0.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((json_array_length(rt1.c1 COLLATE NOCASE, ((0.5298843213050067) BETWEEN (vt0.c0) AND (vt1.c0)))) IS TRUE)  as count FROM rt1, t0 NOT INDEXED, vt0, vt1);
SELECT ALL * FROM t0, vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c0)))AND(t0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt1.c0)))AND(t0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT ALL * FROM t0, vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c0)))AND(t0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (rt1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((vt1.c0)OR(rt1.c0)))AND(t0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt1, rt1);
SELECT ALL * FROM t0, vt1, rt1 WHERE (((((((vt1.c0)OR(rt1.c0)))AND(t0.c0))) BETWEEN (((vt1.c0) IS TRUE)) AND (rt1.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS BLOB) FULL OUTER JOIN vt0 ON ((vt1.c0)&(((t0.c0)||(vt0.c0)))) FULL OUTER JOIN t0 ON CASE ((vt0.c0)IS(rt1.c1))  WHEN TRIM(vt1.c0, t0.c0) THEN DATE(vt0.c0, vt0.c0, vt1.c0) END WHERE (((HEX(rt1.c2))!=(((((rt1.c1)AND(rt1.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c2))<>(((((rt1.c1)AND(rt1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS BLOB) FULL OUTER JOIN vt0 ON ((vt1.c0)&(((t0.c0)||(vt0.c0)))) FULL OUTER JOIN t0 ON CASE ((vt0.c0)IS(rt1.c1))  WHEN TRIM(vt1.c0, t0.c0) THEN DATE(vt0.c0, vt0.c0, vt1.c0) END);
SELECT COUNT(*) FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS BLOB) FULL OUTER JOIN vt0 ON ((vt1.c0)&(((t0.c0)||(vt0.c0)))) FULL OUTER JOIN t0 ON CASE ((vt0.c0)IS(rt1.c1))  WHEN TRIM(vt1.c0, t0.c0) THEN DATE(vt0.c0, vt0.c0, vt1.c0) END WHERE (((HEX(rt1.c2))!=(((((rt1.c1)AND(rt1.c2)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((HEX(rt1.c2))<>(((((rt1.c1)AND(rt1.c2)))AND(vt0.c0))))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN rt1 ON CAST(NULL AS BLOB) FULL OUTER JOIN vt0 ON ((vt1.c0)&(((t0.c0)||(vt0.c0)))) FULL OUTER JOIN t0 ON CASE ((vt0.c0)IS(rt1.c1))  WHEN TRIM(vt1.c0, t0.c0) THEN DATE(vt0.c0, vt0.c0, vt1.c0) END);
SELECT COUNT(*) FROM t0, rt1, vt1 WHERE (((LTRIM(rt1.c2, 0Xffffffffcb1b1153))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((rt1.c1)+(rt1.c2)))*(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt1.c2, 0xffffffffcb1b1153))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ((((rt1.c1)+(rt1.c2)))*(t0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, vt1 WHERE (((LTRIM(rt1.c2, 0Xffffffffcb1b1153))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((rt1.c1)+(rt1.c2)))*(t0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(rt1.c2, 0xffffffffcb1b1153))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))))) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ((((rt1.c1)+(rt1.c2)))*(t0.c0))  NULLS FIRST);
SELECT COUNT(*) FROM t0, rt1, vt1 WHERE (((LTRIM(rt1.c2, 0Xffffffffcb1b1153))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1))))) ORDER BY ((((rt1.c1)+(rt1.c2)))*(t0.c0))  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (x'') ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((x'')))  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((NULL)) AND (((((t0.c0))<=((vt1.c0)))))) DESC, CAST((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((x'')))  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((NULL)) AND (((((t0.c0))<=((vt1.c0)))))) DESC, CAST((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (x'') ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((x'')))  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((NULL)) AND (((((t0.c0))<=((vt1.c0)))))) DESC, CAST((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1 ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((x'')))  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((NULL)) AND (((((t0.c0))<=((vt1.c0)))))) DESC, CAST((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0))) AS NUMERIC)  NULLS FIRST);
SELECT ALL * FROM t0, vt1 WHERE (x'') ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((x'')))  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((NULL)) AND (((((t0.c0))<=((vt1.c0)))))) DESC, CAST((((t0.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, t0.c0, t0.c0)) AND ((t0.c0, vt1.c0, t0.c0))) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0, rt1, vt1 WHERE (((((vt1.c0)<(rt1.c1)))IS(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(rt1.c1)))IS(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT * FROM vt0, rt1, vt1 WHERE (((((vt1.c0)<(rt1.c1)))IS(rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)<(rt1.c1)))IS(rt1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt1, vt1);
SELECT * FROM vt0, rt1, vt1 WHERE (((((vt1.c0)<(rt1.c1)))IS(rt1.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((- (NULL))) BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2))))) ORDER BY (((rt1.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((CASE WHEN '1595919932' THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL))) BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((CASE WHEN '1595919932' THEN t0.c0 END))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((- (NULL))) BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2))))) ORDER BY (((rt1.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((CASE WHEN '1595919932' THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((((- (NULL))) BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, t0 ORDER BY (((rt1.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((CASE WHEN '1595919932' THEN t0.c0 END))));
SELECT ALL COUNT(*) FROM rt1, t0 WHERE ((((- (NULL))) BETWEEN (rt1.c1 COLLATE BINARY) AND (((((((((rt1.c2)OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c1)))OR(rt1.c2))))) ORDER BY (((rt1.c0)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) AND ((CASE WHEN '1595919932' THEN t0.c0 END)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((('0.8628110482033065'))>((json(rt1.c1)))) WHERE ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN 'vu+yymt1-' THEN vt0.c0 ELSE rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN 'vu+yymt1-' THEN vt0.c0 ELSE rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((('0.8628110482033065'))>((json(rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((('0.8628110482033065'))>((json(rt1.c1)))) WHERE ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN 'vu+yymt1-' THEN vt0.c0 ELSE rt1.c1 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN 'vu+yymt1-' THEN vt0.c0 ELSE rt1.c1 END IN ())) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((('0.8628110482033065'))>((json(rt1.c1)))));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((('0.8628110482033065'))>((json(rt1.c1)))) WHERE ((CASE rt1.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN 'vu+yymt1-' THEN vt0.c0 ELSE rt1.c1 END IN ()));
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(CAST(vt0.c0 AS REAL))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (LIKELY(CAST(vt0.c0 AS REAL))) ORDER BY ((vt0.c0)AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt1, vt0, t0, rt1 WHERE (IFNULL(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), (rt1.c2 IN ()))) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT ALL * FROM vt1, vt0, t0, rt1 WHERE (IFNULL(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), (rt1.c2 IN ())));
SELECT SUM(count) FROM (SELECT ((IFNULL(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), (rt1.c2 IN ()))) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT ALL * FROM vt1, vt0, t0, rt1 WHERE (IFNULL(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c2)), (rt1.c2 IN ())));
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (vt1.c0 IN ()) WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)<(vt1.c0)) WHEN ((t0.c0)>(vt1.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END ELSE ((vt0.c0)<>(t0.c0)) END WHERE ((~ (((t0.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)=(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (vt1.c0 IN ()) WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)<(vt1.c0)) WHEN ((t0.c0)>(vt1.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END ELSE ((vt0.c0)!=(t0.c0)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (vt1.c0 IN ()) WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)<(vt1.c0)) WHEN ((t0.c0)>(vt1.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END ELSE ((vt0.c0)<>(t0.c0)) END WHERE ((~ (((t0.c0)==(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)=(t0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (vt1.c0 IN ()) WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)<(vt1.c0)) WHEN ((t0.c0)>(vt1.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END ELSE ((vt0.c0)!=(t0.c0)) END);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS INTEGER) LEFT OUTER JOIN vt1 ON CASE WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) THEN (vt1.c0 IN ()) WHEN (((t0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((t0.c0)<(vt1.c0)) WHEN ((t0.c0)>(vt1.c0)) THEN CASE WHEN t0.c0 THEN vt1.c0 END ELSE ((vt0.c0)<>(t0.c0)) END WHERE ((~ (((t0.c0)==(t0.c0)))));
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((+ ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (t0.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, vt1, t0);
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((+ ((+ (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((+ (t0.c0))))) IS TRUE)  as count FROM rt1 NOT INDEXED, vt0, vt1, t0);
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE ((+ ((+ (t0.c0)))));
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE ('c/ikM찐PBb');
SELECT SUM(count) FROM (SELECT ALL (('c/ikM찐PBb') IS TRUE)  as count FROM vt0, t0, vt1, rt1);
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE ('c/ikM찐PBb');
SELECT SUM(count) FROM (SELECT ALL (('c/ikM찐PBb') IS TRUE)  as count FROM vt0, t0, vt1, rt1);
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE ('c/ikM찐PBb');
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt1 ON rt1.c2 FULL OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE BINARY WHERE ((- (CAST('' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST('' AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt1 ON rt1.c2 FULL OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt1 ON rt1.c2 FULL OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE BINARY WHERE ((- (CAST('' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST('' AS INTEGER)))) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt1 ON rt1.c2 FULL OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt1 ON rt1.c2 FULL OUTER JOIN t0 ON ((rt1.c2) IS TRUE) COLLATE BINARY WHERE ((- (CAST('' AS INTEGER))));
SELECT ALL * FROM t0 WHERE (x'9cd9');
SELECT SUM(count) FROM (SELECT ALL ((x'9cd9') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'9cd9');
SELECT SUM(count) FROM (SELECT ALL ((x'9cd9') IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (x'9cd9');
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c0 IN (0.6424885017473, vt1.c0)) THEN NULL END CROSS JOIN vt1 ON ((((((rt1.c2, vt1.c0, vt0.c0))<((vt1.c0, rt1.c2, vt0.c0)))))>((rt1.c0 COLLATE NOCASE))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c0 IN (0.6424885017473, vt1.c0)) THEN NULL END CROSS JOIN vt1 ON ((((((rt1.c2, vt1.c0, vt0.c0))<((vt1.c0, rt1.c2, vt0.c0)))))>((rt1.c0 COLLATE NOCASE))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c0 IN (0.6424885017473, vt1.c0)) THEN NULL END CROSS JOIN vt1 ON ((((((rt1.c2, vt1.c0, vt0.c0))<((vt1.c0, rt1.c2, vt0.c0)))))>((rt1.c0 COLLATE NOCASE))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE WHEN (rt1.c0 IN (0.6424885017473, vt1.c0)) THEN NULL END CROSS JOIN vt1 ON ((((((rt1.c2, vt1.c0, vt0.c0))<((vt1.c0, rt1.c2, vt0.c0)))))>((rt1.c0 COLLATE NOCASE))));
SELECT * FROM rt1 WHERE (NULL) ORDER BY json_quote((((rt1.c0))>((rt1.c2))))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY json_quote((((rt1.c0))>((rt1.c2))))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE (NULL) ORDER BY json_quote((((rt1.c0))>((rt1.c2))))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY json_quote((((rt1.c0))>((rt1.c2))))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE (NULL) ORDER BY json_quote((((rt1.c0))>((rt1.c2))))  NULLS FIRST, (((rt1.c2)) NOT BETWEEN (((- (rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1))))) ASC;
SELECT * FROM rt1, t0, vt1 WHERE (0.38751277036848597) ORDER BY ((CASE WHEN t0.c0 THEN x'' END) BETWEEN ((- (t0.c0))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((0.38751277036848597) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY ((CASE WHEN t0.c0 THEN x'' END) BETWEEN ((- (t0.c0))) AND (rt1.c0)));
SELECT * FROM rt1, t0, vt1 WHERE (0.38751277036848597) ORDER BY ((CASE WHEN t0.c0 THEN x'' END) BETWEEN ((- (t0.c0))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((0.38751277036848597) IS TRUE)  as count FROM rt1, t0, vt1 ORDER BY ((CASE WHEN t0.c0 THEN x'' END) BETWEEN ((- (t0.c0))) AND (rt1.c0)));
SELECT * FROM rt1, t0, vt1 WHERE (0.38751277036848597) ORDER BY ((CASE WHEN t0.c0 THEN x'' END) BETWEEN ((- (t0.c0))) AND (rt1.c0));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) WHERE (((((((((((((0xffffffffbdffc925)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt1.c0  WHEN x'' THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE vt0.c0  WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((0xffffffffbdffc925)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt1.c0  WHEN x'' THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE vt0.c0  WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) WHERE (((((((((((((0xffffffffbdffc925)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt1.c0  WHEN x'' THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE vt0.c0  WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((((((0xffffffffbdffc925)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt1.c0  WHEN x'' THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE vt0.c0  WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL));
SELECT ALL COUNT(*) FROM vt1 INNER JOIN vt0 ON (((vt0.c0 IN ())) NOTNULL) WHERE (((((((((((((0xffffffffbdffc925)AND(vt1.c0)))OR(vt0.c0)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE vt1.c0  WHEN x'' THEN vt0.c0 END)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))))OR(CASE vt0.c0  WHEN '' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 END)));
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))));
SELECT COUNT(*) FROM vt1, rt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((+ (vt1.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT NULL)) ORDER BY ((((t0.c0) BETWEEN (x'') AND (t0.c0)))||((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (x'') AND (t0.c0)))||((t0.c0 IN (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT NULL)) ORDER BY ((((t0.c0) BETWEEN (x'') AND (t0.c0)))||((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>>(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c0) BETWEEN (x'') AND (t0.c0)))||((t0.c0 IN (t0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c0)>>(t0.c0))) NOT NULL)) ORDER BY ((((t0.c0) BETWEEN (x'') AND (t0.c0)))||((t0.c0 IN (t0.c0))))  NULLS FIRST;
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0))>=((t0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))>=((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0))>=((t0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0))>=((t0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0);
SELECT ALL * FROM rt1, t0 WHERE ((((rt1.c0))>=((t0.c0))) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT COUNT(*) FROM t0, rt1, vt0 NOT INDEXED, vt1 WHERE (LIKELIHOOD((~ (rt1.c2)), 0.034977502596788));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((~ (rt1.c2)), 0.034977502596788)) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT COUNT(*) FROM t0, rt1, vt0 NOT INDEXED, vt1 WHERE (LIKELIHOOD((~ (rt1.c2)), 0.034977502596788));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((~ (rt1.c2)), 0.034977502596788)) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT COUNT(*) FROM t0, rt1, vt0 NOT INDEXED, vt1 WHERE (LIKELIHOOD((~ (rt1.c2)), 0.034977502596788));
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN COALESCE(vt0.c0, 0Xffffffffce4597dc) THEN (NOT (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (~ (vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN COALESCE(vt0.c0, 0Xffffffffce4597dc) THEN (NOT (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (~ (vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST, vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN COALESCE(vt0.c0, 0Xffffffffce4597dc) THEN (NOT (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (~ (vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN COALESCE(vt0.c0, 0Xffffffffce4597dc) THEN (NOT (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (~ (vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST, vt0.c0 DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((- (vt0.c0))) ORDER BY CASE (- (vt0.c0))  WHEN vt0.c0 THEN CASE WHEN vt0.c0 THEN vt0.c0 END WHEN COALESCE(vt0.c0, 0Xffffffffce4597dc) THEN (NOT (vt0.c0)) WHEN CAST(vt0.c0 AS BLOB) THEN (~ (vt0.c0)) ELSE ((vt0.c0)-(vt0.c0)) END  NULLS LAST, vt0.c0 DESC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((t0.c0)) BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((rt1.c2)*(0.23425959686914677))))) LEFT OUTER JOIN vt0 ON HEX(((vt0.c0)-(rt1.c2))) WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((rt1.c2) NOT BETWEEN ((rt1.c0 IN (rt1.c2))) AND (((rt1.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((t0.c0)) BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((rt1.c2)*(0.23425959686914677))))) LEFT OUTER JOIN vt0 ON HEX(((vt0.c0)-(rt1.c2))) ORDER BY ((rt1.c2) NOT BETWEEN ((rt1.c0 IN (rt1.c2))) AND (((rt1.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((t0.c0)) BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((rt1.c2)*(0.23425959686914677))))) LEFT OUTER JOIN vt0 ON HEX(((vt0.c0)-(rt1.c2))) WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((rt1.c2) NOT BETWEEN ((rt1.c0 IN (rt1.c2))) AND (((rt1.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON (((t0.c0)) BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((rt1.c2)*(0.23425959686914677))))) LEFT OUTER JOIN vt0 ON HEX(((vt0.c0)-(rt1.c2))) ORDER BY ((rt1.c2) NOT BETWEEN ((rt1.c0 IN (rt1.c2))) AND (((rt1.c1) NOTNULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 FULL OUTER JOIN rt1 ON (((t0.c0)) BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((rt1.c2)*(0.23425959686914677))))) LEFT OUTER JOIN vt0 ON HEX(((vt0.c0)-(rt1.c2))) WHERE (CAST(CAST(rt1.c0 AS INTEGER) AS NUMERIC)) ORDER BY ((rt1.c2) NOT BETWEEN ((rt1.c0 IN (rt1.c2))) AND (((rt1.c1) NOTNULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))<=(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY CASE WHEN (((t0.c0))<=((vt1.c0))) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((-743120717) NOTNULL) WHEN CASE vt0.c0  WHEN -1673708363 THEN t0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN '124776491' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END ELSE (- (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))<=(((vt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN (((t0.c0))<=((vt1.c0))) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((-743120717) NOTNULL) WHEN CASE vt0.c0  WHEN -1673708363 THEN t0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN '124776491' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END ELSE (- (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))<=(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY CASE WHEN (((t0.c0))<=((vt1.c0))) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((-743120717) NOTNULL) WHEN CASE vt0.c0  WHEN -1673708363 THEN t0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN '124776491' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END ELSE (- (vt1.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))<=(((vt1.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY CASE WHEN (((t0.c0))<=((vt1.c0))) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((-743120717) NOTNULL) WHEN CASE vt0.c0  WHEN -1673708363 THEN t0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN '124776491' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END ELSE (- (vt1.c0)) END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, vt1, t0 WHERE (((((t0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))<=(((vt1.c0)IS NOT(vt0.c0))))) ORDER BY CASE WHEN (((t0.c0))<=((vt1.c0))) THEN ((t0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) WHEN CAST(vt0.c0 AS NUMERIC) THEN ((-743120717) NOTNULL) WHEN CASE vt0.c0  WHEN -1673708363 THEN t0.c0 ELSE vt0.c0 END THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN t0.c0 WHEN '124776491' THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c0 END ELSE (- (vt1.c0)) END ASC  NULLS FIRST;
SELECT * FROM rt1, t0, vt0, vt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (CASE WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END COLLATE NOCASE);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(LTRIM(vt1.c0)))) ORDER BY (NOT (((vt1.c0)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt1.c0)/(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(LTRIM(vt1.c0)))) ORDER BY (NOT (((vt1.c0)/(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(LTRIM(vt1.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY (NOT (((vt1.c0)/(vt0.c0))))  NULLS LAST);
SELECT ALL * FROM vt0, vt1 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(LTRIM(vt1.c0)))) ORDER BY (NOT (((vt1.c0)/(vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2)%(t0.c0)))LIKE(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)%(t0.c0)))LIKE(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2)%(t0.c0)))LIKE(((rt1.c1) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)%(t0.c0)))LIKE(((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (((((rt1.c2)%(t0.c0)))LIKE(((rt1.c1) IS TRUE))));
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE ((((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))IS(vt1.c0))) ORDER BY ((((vt1.c0)+(vt1.c0)))/(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0)))/(NULL)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))IS(vt1.c0))) ORDER BY ((((vt1.c0)+(vt1.c0)))/(NULL)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))IS(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY ((((vt1.c0)+(vt1.c0)))/(NULL)) ASC  NULLS LAST);
SELECT ALL * FROM vt1 WHERE ((((~ (vt1.c0)))IS(vt1.c0))) ORDER BY ((((vt1.c0)+(vt1.c0)))/(NULL)) ASC  NULLS LAST;
SELECT * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)<=(((rt1.c2)OR(rt1.c1))))) ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE) DESC, (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<=(((rt1.c2)OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE) DESC, (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC);
SELECT * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)<=(((rt1.c2)OR(rt1.c1))))) ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE) DESC, (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE BINARY)<=(((rt1.c2)OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE) DESC, (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC);
SELECT * FROM rt1 WHERE (((rt1.c0 COLLATE BINARY)<=(((rt1.c2)OR(rt1.c1))))) ORDER BY ((((rt1.c0) NOTNULL)) IS TRUE) DESC, (((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) IN ()) DESC;
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON ((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)==(((((((((rt1.c2)OR(0.7282757358903272)))OR(t0.c0)))AND(rt1.c2)))OR(vt1.c0)))) CROSS JOIN rt1 ON ((((vt0.c0, t0.c0, t0.c0))>=((0.23425959686914677, t0.c0, vt0.c0))) IN ((rt1.c1 IN (rt1.c0, t0.c0)), (NOT ('546870625')))) WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c2)))) AND ((((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN (((~ (rt1.c2)))) AND ((((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)=(((((((((rt1.c2)OR(0.7282757358903272)))OR(t0.c0)))AND(rt1.c2)))OR(vt1.c0)))) CROSS JOIN rt1 ON ((((vt0.c0, t0.c0, t0.c0))>=((0.23425959686914677, t0.c0, vt0.c0))) IN ((rt1.c1 IN (rt1.c0, t0.c0)), (NOT ('546870625')))));
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON ((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)==(((((((((rt1.c2)OR(0.7282757358903272)))OR(t0.c0)))AND(rt1.c2)))OR(vt1.c0)))) CROSS JOIN rt1 ON ((((vt0.c0, t0.c0, t0.c0))>=((0.23425959686914677, t0.c0, vt0.c0))) IN ((rt1.c1 IN (rt1.c0, t0.c0)), (NOT ('546870625')))) WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c2)))) AND ((((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN (((~ (rt1.c2)))) AND ((((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0, t0 CROSS JOIN vt1 ON ((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)=(((((((((rt1.c2)OR(0.7282757358903272)))OR(t0.c0)))AND(rt1.c2)))OR(vt1.c0)))) CROSS JOIN rt1 ON ((((vt0.c0, t0.c0, t0.c0))>=((0.23425959686914677, t0.c0, vt0.c0))) IN ((rt1.c1 IN (rt1.c0, t0.c0)), (NOT ('546870625')))));
SELECT ALL * FROM vt0, t0 CROSS JOIN vt1 ON ((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)==(((((((((rt1.c2)OR(0.7282757358903272)))OR(t0.c0)))AND(rt1.c2)))OR(vt1.c0)))) CROSS JOIN rt1 ON ((((vt0.c0, t0.c0, t0.c0))>=((0.23425959686914677, t0.c0, vt0.c0))) IN ((rt1.c1 IN (rt1.c0, t0.c0)), (NOT ('546870625')))) WHERE ((((rt1.c1)) BETWEEN (((~ (rt1.c2)))) AND ((((vt1.c0) BETWEEN (rt1.c0) AND (vt0.c0))))));
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (t0.c0);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CASE (t0.c0 IN ())  WHEN (- (t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END END);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE ((((+ (vt1.c0)))<=(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))));
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON (((((t0.c0, rt1.c1, rt1.c2))>=((rt1.c1, '-1610447188', vt0.c0)))) BETWEEN (((x'8c45') BETWEEN (rt1.c1) AND (rt1.c1))) AND (((t0.c0) ISNULL))) WHERE (((((((((((NULL)-(t0.c0)))AND(((((((((rt1.c0)AND(rt1.c2)))OR(x'852573ed')))AND(t0.c0)))OR(vt0.c0)))))OR((NOT (x'')))))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR(((vt1.c0)%(1293889107))))) ORDER BY 0x577faf62  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)-(t0.c0)))AND(((((((((rt1.c0)AND(rt1.c2)))OR(x'852573ed')))AND(t0.c0)))OR(vt0.c0)))))OR((NOT (x'')))))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR(((vt1.c0)%(1293889107))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON (((((t0.c0, rt1.c1, rt1.c2))>=((rt1.c1, '-1610447188', vt0.c0)))) BETWEEN (((x'8c45') BETWEEN (rt1.c1) AND (rt1.c1))) AND (((t0.c0) ISNULL))) ORDER BY 0X577faf62  NULLS LAST);
SELECT COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON (((((t0.c0, rt1.c1, rt1.c2))>=((rt1.c1, '-1610447188', vt0.c0)))) BETWEEN (((x'8c45') BETWEEN (rt1.c1) AND (rt1.c1))) AND (((t0.c0) ISNULL))) WHERE (((((((((((NULL)-(t0.c0)))AND(((((((((rt1.c0)AND(rt1.c2)))OR(x'852573ed')))AND(t0.c0)))OR(vt0.c0)))))OR((NOT (x'')))))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR(((vt1.c0)%(1293889107))))) ORDER BY 0x577faf62  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((NULL)-(t0.c0)))AND(((((((((rt1.c0)AND(rt1.c2)))OR(x'852573ed')))AND(t0.c0)))OR(vt0.c0)))))OR((NOT (x'')))))AND(CASE WHEN rt1.c2 THEN rt1.c2 END)))OR(((vt1.c0)%(1293889107))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN vt1 ON t0.c0 FULL OUTER JOIN vt0 ON (((((t0.c0, rt1.c1, rt1.c2))>=((rt1.c1, '-1610447188', vt0.c0)))) BETWEEN (((x'8c45') BETWEEN (rt1.c1) AND (rt1.c1))) AND (((t0.c0) ISNULL))) ORDER BY 0X577faf62  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(ABS(vt0.c0))))AND((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(ABS(vt0.c0))))AND((+ (NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(ABS(vt0.c0))))AND((+ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(ABS(vt0.c0))))AND((+ (NULL))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(ABS(vt0.c0))))AND((+ (NULL)))));
SELECT COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((+ (rt1.c2))) NOT BETWEEN (((vt1.c0)GLOB(''))) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) ORDER BY ((((vt1.c0)=(rt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOT BETWEEN (((vt1.c0)GLOB(''))) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((vt1.c0)==(rt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((+ (rt1.c2))) NOT BETWEEN (((vt1.c0)GLOB(''))) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) ORDER BY ((((vt1.c0)=(rt1.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt1.c2))) NOT BETWEEN (((vt1.c0)GLOB(''))) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((vt1.c0)==(rt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((+ (rt1.c2))) NOT BETWEEN (((vt1.c0)GLOB(''))) AND (SQLITE_COMPILEOPTION_GET(rt1.c1)))) ORDER BY ((((vt1.c0)=(rt1.c0))) NOTNULL);
SELECT * FROM vt0 WHERE (UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 9.30378855E8 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 9.30378855E8 END)) DESC);
SELECT * FROM vt0 WHERE (UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 9.30378855E8 END)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 9.30378855E8 END)) DESC);
SELECT * FROM vt0 WHERE (UPPER((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ORDER BY ((vt0.c0 COLLATE NOCASE)>=(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 9.30378855E8 END)) DESC;
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (((((((((rt1.c0 COLLATE BINARY)AND(CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE '' END)))OR(LOWER(DISTINCT rt1.c0))))AND(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)+(rt1.c2))))) ORDER BY CAST((((t0.c0, vt1.c0, rt1.c2))=((rt1.c1, rt1.c0, t0.c0))) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0 COLLATE BINARY)AND(CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE '' END)))OR(LOWER(DISTINCT rt1.c0))))AND(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)+(rt1.c2))))) IS TRUE)  as count FROM vt1, t0, rt1 ORDER BY CAST((((t0.c0, vt1.c0, rt1.c2))==((rt1.c1, rt1.c0, t0.c0))) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (((((((((rt1.c0 COLLATE BINARY)AND(CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE '' END)))OR(LOWER(DISTINCT rt1.c0))))AND(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)+(rt1.c2))))) ORDER BY CAST((((t0.c0, vt1.c0, rt1.c2))=((rt1.c1, rt1.c0, t0.c0))) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c0 COLLATE BINARY)AND(CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE '' END)))OR(LOWER(DISTINCT rt1.c0))))AND(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)+(rt1.c2))))) IS TRUE)  as count FROM vt1, t0, rt1 ORDER BY CAST((((t0.c0, vt1.c0, rt1.c2))==((rt1.c1, rt1.c0, t0.c0))) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE (((((((((rt1.c0 COLLATE BINARY)AND(CASE t0.c0  WHEN t0.c0 THEN rt1.c2 ELSE '' END)))OR(LOWER(DISTINCT rt1.c0))))AND(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c2 THEN t0.c0 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c1)+(rt1.c2))))) ORDER BY CAST((((t0.c0, vt1.c0, rt1.c2))=((rt1.c1, rt1.c0, t0.c0))) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM rt1, vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ((rt1.c2)LIKE((vt1.c0 IN (rt1.c1)))) ASC  NULLS FIRST, ((rt1.c0) BETWEEN (NULL) AND (rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((rt1.c2)LIKE((vt1.c0 IN (rt1.c1)))) ASC  NULLS FIRST, ((rt1.c0) BETWEEN (NULL) AND (rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ((rt1.c2)LIKE((vt1.c0 IN (rt1.c1)))) ASC  NULLS FIRST, ((rt1.c0) BETWEEN (NULL) AND (rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((rt1.c2)LIKE((vt1.c0 IN (rt1.c1)))) ASC  NULLS FIRST, ((rt1.c0) BETWEEN (NULL) AND (rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST);
SELECT * FROM rt1, vt1 WHERE (((vt1.c0 COLLATE RTRIM) IS FALSE)) ORDER BY ((rt1.c2)LIKE((vt1.c0 IN (rt1.c1)))) ASC  NULLS FIRST, ((rt1.c0) BETWEEN (NULL) AND (rt1.c0 COLLATE RTRIM)) DESC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('㾩({N\n'))) COLLATE BINARY) ORDER BY CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN (((vt1.c0))!=((vt1.c0))) WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) END ASC  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('㾩({N\n'))) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) WHEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) END ASC  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('㾩({N\n'))) COLLATE BINARY) ORDER BY CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN (((vt1.c0))!=((vt1.c0))) WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) END ASC  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('㾩({N\n'))) COLLATE BINARY) IS TRUE)  as count FROM vt1 ORDER BY CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN (((vt1.c0))<>((vt1.c0))) WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c0))!=((vt1.c0))) WHEN (((vt1.c0, vt1.c0, vt1.c0))==((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) END ASC  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE ((((vt1.c0)) BETWEEN ((vt1.c0)) AND (('㾩({N\n'))) COLLATE BINARY) ORDER BY CASE CAST(vt1.c0 AS REAL)  WHEN vt1.c0 THEN (((vt1.c0))!=((vt1.c0))) WHEN ((vt1.c0)<=(vt1.c0)) THEN (((vt1.c0))<>((vt1.c0))) WHEN (((vt1.c0, vt1.c0, vt1.c0))=((vt1.c0, vt1.c0, vt1.c0))) THEN ((vt1.c0)==(vt1.c0)) END ASC  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT NULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE)) ORDER BY TRIM(DISTINCT (((rt1.c0))<=((rt1.c1))), ((rt1.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY TRIM(DISTINCT (((rt1.c0))<=((rt1.c1))), ((rt1.c0) NOTNULL)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE)) ORDER BY TRIM(DISTINCT (((rt1.c0))<=((rt1.c1))), ((rt1.c0) NOTNULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS INTEGER)) IS TRUE)) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY TRIM(DISTINCT (((rt1.c0))<=((rt1.c1))), ((rt1.c0) NOTNULL)) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (((CAST(rt1.c0 AS INTEGER)) IS TRUE)) ORDER BY TRIM(DISTINCT (((rt1.c0))<=((rt1.c1))), ((rt1.c0) NOTNULL)) DESC;
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.9836107066170745 RIGHT OUTER JOIN vt1 ON ((0.7363063683588316) NOT BETWEEN ((~ (rt1.c1))) AND (vt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) WHERE ((+ (((rt1.c1) BETWEEN (x'c603') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) BETWEEN (x'c603') AND (vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.9836107066170745 RIGHT OUTER JOIN vt1 ON ((0.7363063683588316) NOT BETWEEN ((~ (rt1.c1))) AND (vt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.9836107066170745 RIGHT OUTER JOIN vt1 ON ((0.7363063683588316) NOT BETWEEN ((~ (rt1.c1))) AND (vt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE) WHERE ((+ (((rt1.c1) BETWEEN (x'c603') AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) BETWEEN (x'c603') AND (vt0.c0))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.9836107066170745 RIGHT OUTER JOIN vt1 ON ((0.7363063683588316) NOT BETWEEN ((~ (rt1.c1))) AND (vt1.c0 COLLATE RTRIM)) LEFT OUTER JOIN rt1 ON ((CASE WHEN vt0.c0 THEN vt0.c0 END) IS FALSE));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) AND (('787962062' IN ()))) CROSS JOIN vt0 ON CAST(0.09153235522660075 AS TEXT) COLLATE RTRIM WHERE ((((((vt0.c0, vt1.c0, vt0.c0, '789449675', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((vt1.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt1.c0, vt0.c0, '789449675', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((vt1.c0)/(vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) AND (('787962062' IN ()))) CROSS JOIN vt0 ON CAST(0.09153235522660075 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) AND (('787962062' IN ()))) CROSS JOIN vt0 ON CAST(0.09153235522660075 AS TEXT) COLLATE RTRIM WHERE ((((((vt0.c0, vt1.c0, vt0.c0, '789449675', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((vt1.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt1.c0, vt0.c0, '789449675', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((vt1.c0)/(vt0.c0))))) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) AND (('787962062' IN ()))) CROSS JOIN vt0 ON CAST(0.09153235522660075 AS TEXT) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt1 ON ((CAST(vt0.c0 AS REAL)) BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))) AND (('787962062' IN ()))) CROSS JOIN vt0 ON CAST(0.09153235522660075 AS TEXT) COLLATE RTRIM WHERE ((((((vt0.c0, vt1.c0, vt0.c0, '789449675', vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0, NULL, vt0.c0)) AND ((vt1.c0, t0.c0, vt0.c0, vt0.c0, vt1.c0)))) NOT BETWEEN (((t0.c0) NOT NULL)) AND (((vt1.c0)/(vt0.c0)))));
SELECT * FROM t0, vt1, vt0 WHERE ((+ (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((+ (vt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT * FROM t0, vt1, vt0 WHERE ((+ (vt1.c0)) COLLATE NOCASE);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CAST(((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) AS INTEGER));
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) IS FALSE)) ORDER BY (~ (CAST(t0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) IS FALSE)) ORDER BY (~ (CAST(t0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0 ORDER BY (~ (CAST(t0.c0 AS TEXT))) DESC  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c0 IN ())) IS FALSE)) ORDER BY (~ (CAST(t0.c0 AS TEXT))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>(((t0.c0)>>('K<')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>(((t0.c0)>>('K<')))) DESC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>(((t0.c0)>>('K<')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>(((t0.c0)>>('K<')))) DESC);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY (((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))>(((t0.c0)>>('K<')))) DESC;
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (rt1.c0) ORDER BY (((~ (t0.c0)))-(((rt1.c2)IS NOT(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY (((~ (t0.c0)))-(((rt1.c2)IS NOT(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (rt1.c0) ORDER BY (((~ (t0.c0)))-(((rt1.c2)IS NOT(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY (((~ (t0.c0)))-(((rt1.c2)IS NOT(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (rt1.c0) ORDER BY (((~ (t0.c0)))-(((rt1.c2)IS NOT(rt1.c0))));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c2, t0.c0, rt1.c1)) AND ((t0.c0, vt0.c0, t0.c0))))) FULL OUTER JOIN rt1 ON ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.009244221528525998 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(CASE WHEN vt1.c0 THEN rt1.c0 END)) WHERE (RTRIM(x'99a0b75f')) ORDER BY (((rt1.c0)IS(rt1.c0)) IN (x''));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(x'99a0b75f')) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c2, t0.c0, rt1.c1)) AND ((t0.c0, vt0.c0, t0.c0))))) FULL OUTER JOIN rt1 ON ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.009244221528525998 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(CASE WHEN vt1.c0 THEN rt1.c0 END)) ORDER BY (((rt1.c0)IS(rt1.c0)) IN (x'')));
SELECT ALL COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c2, t0.c0, rt1.c1)) AND ((t0.c0, vt0.c0, t0.c0))))) FULL OUTER JOIN rt1 ON ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.009244221528525998 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(CASE WHEN vt1.c0 THEN rt1.c0 END)) WHERE (RTRIM(x'99a0b75f')) ORDER BY (((rt1.c0)IS(rt1.c0)) IN (x''));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(x'99a0b75f')) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN vt1 ON ((rt1.c0 COLLATE RTRIM) NOT BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((rt1.c1)))) AND ((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((rt1.c2, t0.c0, rt1.c1)) AND ((t0.c0, vt0.c0, t0.c0))))) FULL OUTER JOIN rt1 ON ((CASE vt1.c0  WHEN t0.c0 THEN t0.c0 WHEN 0.009244221528525998 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 ELSE rt1.c0 END)>=(CASE WHEN vt1.c0 THEN rt1.c0 END)) ORDER BY (((rt1.c0)IS(rt1.c0)) IN (x'')));
SELECT * FROM rt1, vt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))<>((x'')))) ORDER BY ((((rt1.c0) IS FALSE))&(CAST(rt1.c0 AS REAL)))  NULLS LAST, LIKELIHOOD(0.08586176419826641, 0.32586518329555425) DESC, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))!=((x'')))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c0) IS FALSE))&(CAST(rt1.c0 AS REAL)))  NULLS LAST, LIKELIHOOD(0.08586176419826641, 0.32586518329555425) DESC, vt1.c0  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))<>((x'')))) ORDER BY ((((rt1.c0) IS FALSE))&(CAST(rt1.c0 AS REAL)))  NULLS LAST, LIKELIHOOD(0.08586176419826641, 0.32586518329555425) DESC, vt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))!=((x'')))) IS TRUE)  as count FROM rt1, vt1 ORDER BY ((((rt1.c0) IS FALSE))&(CAST(rt1.c0 AS REAL)))  NULLS LAST, LIKELIHOOD(0.08586176419826641, 0.32586518329555425) DESC, vt1.c0  NULLS LAST);
SELECT * FROM rt1, vt1 WHERE ((((((rt1.c0) BETWEEN (rt1.c0) AND (vt1.c0))))<>((x'')))) ORDER BY ((((rt1.c0) IS FALSE))&(CAST(rt1.c0 AS REAL)))  NULLS LAST, LIKELIHOOD(0.08586176419826641, 0.32586518329555425) DESC, vt1.c0  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt1, t0 WHERE ((NOT (((rt1.c1) NOT NULL)))) ORDER BY ((~ (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, rt1, t0 ORDER BY ((~ (t0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, rt1, t0 WHERE ((NOT (((rt1.c1) NOT NULL)))) ORDER BY ((~ (t0.c0)) IN ());
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM vt1, rt1, t0 ORDER BY ((~ (t0.c0)) IN ()));
SELECT COUNT(*) FROM vt1, rt1, t0 WHERE ((NOT (((rt1.c1) NOT NULL)))) ORDER BY ((~ (t0.c0)) IN ());
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((+ (x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (x'')) AS TEXT)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((+ (x'')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (x'')) AS TEXT)) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (CAST((+ (x'')) AS TEXT));
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0)*(t0.c0)))|(CASE WHEN vt0.c0 THEN t0.c0 END))) ORDER BY '84696424' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(t0.c0)))|(CASE WHEN vt0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '84696424' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0)*(t0.c0)))|(CASE WHEN vt0.c0 THEN t0.c0 END))) ORDER BY '84696424' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)*(t0.c0)))|(CASE WHEN vt0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY '84696424' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0)*(t0.c0)))|(CASE WHEN vt0.c0 THEN t0.c0 END))) ORDER BY '84696424' ASC  NULLS FIRST;
SELECT * FROM vt0, rt1, vt1, t0 WHERE ((LOWER(rt1.c1) IN ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((LOWER(rt1.c1) IN ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT * FROM vt0, rt1, vt1, t0 WHERE ((LOWER(rt1.c1) IN ((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((LOWER(rt1.c1) IN ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1, vt1, t0);
SELECT * FROM vt0, rt1, vt1, t0 WHERE ((LOWER(rt1.c1) IN ((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0))))) ORDER BY ((rt1.c2 IN ()) IN (rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 IN ()) IN (rt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0))))) ORDER BY ((rt1.c2 IN ()) IN (rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2 IN ()) IN (rt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (((((((((rt1.c0)OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0))))) ORDER BY ((rt1.c2 IN ()) IN (rt1.c0))  NULLS LAST;
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY) ORDER BY (((((vt0.c0 IN ()))OR((- (vt0.c0)))))OR((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0 IN ()))OR((- (vt0.c0)))))OR((NOT (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY) ORDER BY (((((vt0.c0 IN ()))OR((- (vt0.c0)))))OR((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((((vt0.c0 IN ()))OR((- (vt0.c0)))))OR((NOT (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1, vt0 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY) ORDER BY (((((vt0.c0 IN ()))OR((- (vt0.c0)))))OR((NOT (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN rt1 ON CAST((((rt1.c2))==((rt1.c0))) AS INTEGER) FULL OUTER JOIN vt1 ON (((((rt1.c2 IN ()))OR((+ ('-412755393')))))AND(((rt1.c0)AND(t0.c0)))) WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt1 ON CAST((((rt1.c2))==((rt1.c0))) AS INTEGER) FULL OUTER JOIN vt1 ON (((((rt1.c2 IN ()))OR((+ ('-412755393')))))AND(((rt1.c0)AND(t0.c0)))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN rt1 ON CAST((((rt1.c2))==((rt1.c0))) AS INTEGER) FULL OUTER JOIN vt1 ON (((((rt1.c2 IN ()))OR((+ ('-412755393')))))AND(((rt1.c0)AND(t0.c0)))) WHERE (((t0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0 IN ()) IN ())) IS TRUE)  as count FROM vt0, t0 CROSS JOIN rt1 ON CAST((((rt1.c2))==((rt1.c0))) AS INTEGER) FULL OUTER JOIN vt1 ON (((((rt1.c2 IN ()))OR((+ ('-412755393')))))AND(((rt1.c0)AND(t0.c0)))));
SELECT COUNT(*) FROM vt0, t0 CROSS JOIN rt1 ON CAST((((rt1.c2))==((rt1.c0))) AS INTEGER) FULL OUTER JOIN vt1 ON (((((rt1.c2 IN ()))OR((+ ('-412755393')))))AND(((rt1.c0)AND(t0.c0)))) WHERE (((t0.c0 IN ()) IN ()));
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN vt1.c0 END)AND(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))))AND(((vt0.c0)&(t0.c0))))) ORDER BY x''  NULLS LAST, ((CAST('rM寺mc1' AS NUMERIC))>>(json_quote(x'158d'))) ASC  NULLS FIRST, ((((t0.c0) NOT NULL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN vt1.c0 END)AND(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))))AND(((vt0.c0)&(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, rt1 ORDER BY x''  NULLS LAST, ((CAST('rM寺mc1' AS NUMERIC))>>(json_quote(x'158d'))) ASC  NULLS FIRST, ((((t0.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM vt0, vt1, t0, rt1 WHERE (((((CASE WHEN rt1.c2 THEN vt1.c0 END)AND(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))))AND(((vt0.c0)&(t0.c0))))) ORDER BY x''  NULLS LAST, ((CAST('rM寺mc1' AS NUMERIC))>>(json_quote(x'158d'))) ASC  NULLS FIRST, ((((t0.c0) NOT NULL)) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN vt1.c0 END)AND(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))))AND(((vt0.c0)&(t0.c0))))) IS TRUE)  as count FROM vt0, vt1, t0, rt1 ORDER BY x''  NULLS LAST, ((CAST('rM寺mc1' AS NUMERIC))>>(json_quote(x'158d'))) ASC  NULLS FIRST, ((((t0.c0) NOT NULL)) IS TRUE));
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) ORDER BY ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt1.c2)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt1.c2)-(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) ORDER BY ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt1.c2)-(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt1.c2)-(rt1.c2)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) COLLATE NOCASE) ORDER BY ((rt1.c1 COLLATE RTRIM) NOT BETWEEN (x'') AND (((rt1.c2)-(rt1.c2))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON 955037190 LEFT OUTER JOIN vt1 ON ((((((((((NULL)OR(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) WHERE (0.0);
SELECT SUM(count) FROM (SELECT ALL ((0.0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON 955037190 LEFT OUTER JOIN vt1 ON ((((((((((NULL)OR(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON 955037190 LEFT OUTER JOIN vt1 ON ((((((((((NULL)OR(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) WHERE (0.0);
SELECT SUM(count) FROM (SELECT ALL ((0.0) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON 955037190 LEFT OUTER JOIN vt1 ON ((((((((((NULL)OR(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON 955037190 LEFT OUTER JOIN vt1 ON ((((((((((NULL)OR(t0.c0)))OR(NULL)))AND(t0.c0)))AND(t0.c0)))IS((((t0.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))) WHERE (0.0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt1, t0);
SELECT COUNT(*) FROM vt1, t0 WHERE (CAST(CAST(t0.c0 AS NUMERIC) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, rt1, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, t0 WHERE ((((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt1.c2))) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((IFNULL(rt1.c0, rt1.c2)) NOT NULL)) ORDER BY ((x'') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt1.c0, rt1.c2)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((x'') NOT NULL) DESC);
SELECT ALL * FROM rt1 WHERE (((IFNULL(rt1.c0, rt1.c2)) NOT NULL)) ORDER BY ((x'') NOT NULL) DESC;
SELECT SUM(count) FROM (SELECT ((((IFNULL(rt1.c0, rt1.c2)) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY ((x'') NOT NULL) DESC);
SELECT ALL * FROM rt1 WHERE (((IFNULL(rt1.c0, rt1.c2)) NOT NULL)) ORDER BY ((x'') NOT NULL) DESC;
SELECT COUNT(*) FROM vt1 WHERE (((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER) ASC, (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(x'' AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS INTEGER) ASC, (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(x'' AS TEXT)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER) ASC, (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(x'' AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) IS TRUE)  as count FROM vt1 ORDER BY CAST(vt1.c0 AS INTEGER) ASC, (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(x'' AS TEXT)))) ASC);
SELECT COUNT(*) FROM vt1 WHERE (((((((x'')OR(vt1.c0)))OR(vt1.c0)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))))) ORDER BY CAST(vt1.c0 AS INTEGER) ASC, (((vt1.c0)) BETWEEN ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) AND ((CAST(x'' AS TEXT)))) ASC;
SELECT * FROM vt1 WHERE (((-366379867 COLLATE NOCASE) NOT NULL)) ORDER BY ((((x'')AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-366379867 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((x'')AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((-366379867 COLLATE NOCASE) NOT NULL)) ORDER BY ((((x'')AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((-366379867 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt1 ORDER BY ((((x'')AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (((-366379867 COLLATE NOCASE) NOT NULL)) ORDER BY ((((x'')AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))OR(vt1.c0 COLLATE BINARY)) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((('-1502771800') NOT NULL))OR(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((('-1502771800') NOT NULL))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-1502771800') NOT NULL))OR(((vt0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT (((((('-1502771800') NOT NULL))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((('-1502771800') NOT NULL))OR(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((LIKELY(rt1.c1), (NULL IN (rt1.c1, rt1.c1)), (rt1.c1 IN ()))) AND ((((rt1.c2)>(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c0)<<(rt1.c1)))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CAST(x'' AS TEXT)) AND (rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((LIKELY(rt1.c1), (NULL IN (rt1.c1, rt1.c1)), (rt1.c1 IN ()))) AND ((((rt1.c2)>(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c0)<<(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CAST(x'' AS TEXT)) AND (rt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((LIKELY(rt1.c1), (NULL IN (rt1.c1, rt1.c1)), (rt1.c1 IN ()))) AND ((((rt1.c2)>(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c0)<<(rt1.c1)))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CAST(x'' AS TEXT)) AND (rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((LIKELY(rt1.c1), (NULL IN (rt1.c1, rt1.c1)), (rt1.c1 IN ()))) AND ((((rt1.c2)>(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c0)<<(rt1.c1)))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CAST(x'' AS TEXT)) AND (rt1.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c1, rt1.c2, rt1.c1)) BETWEEN ((LIKELY(rt1.c1), (NULL IN (rt1.c1, rt1.c1)), (rt1.c1 IN ()))) AND ((((rt1.c2)>(rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c1 END, ((rt1.c0)<<(rt1.c1)))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN (CAST(x'' AS TEXT)) AND (rt1.c0))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ())) ORDER BY (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ())) ORDER BY (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ())) IS TRUE)  as count FROM t0 ORDER BY (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)AND(t0.c0)))OR(t0.c0)) IN ())) ORDER BY (~ ((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (~ (vt1.c0)) LEFT OUTER JOIN t0 ON TRIM(x'') FULL OUTER JOIN vt1 ON CASE WHEN ABS(DISTINCT rt1.c0) THEN ((rt1.c0)|(rt1.c2)) ELSE CAST(vt1.c0 AS TEXT) END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (~ (vt1.c0)) LEFT OUTER JOIN t0 ON TRIM(x'') FULL OUTER JOIN vt1 ON CASE WHEN ABS(DISTINCT rt1.c0) THEN ((rt1.c0)|(rt1.c2)) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt1 ON (~ (vt1.c0)) LEFT OUTER JOIN t0 ON TRIM(x'') FULL OUTER JOIN vt1 ON CASE WHEN ABS(DISTINCT rt1.c0) THEN ((rt1.c0)|(rt1.c2)) ELSE CAST(vt1.c0 AS TEXT) END WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (~ (vt1.c0)) LEFT OUTER JOIN t0 ON TRIM(x'') FULL OUTER JOIN vt1 ON CASE WHEN ABS(DISTINCT rt1.c0) THEN ((rt1.c0)|(rt1.c2)) ELSE CAST(vt1.c0 AS TEXT) END);
SELECT ALL * FROM vt1, t0 INNER JOIN rt1 ON ((((((((((t0.c0) NOT NULL))OR(rt1.c1)))OR(CAST(rt1.c2 AS INTEGER))))AND(TIME(vt1.c0, t0.c0, t0.c0))))OR((((0.4858847339116412))<>((rt1.c2))))) RIGHT OUTER JOIN vt0 ON NULL WHERE (((((CAST(rt1.c1 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt1 ON ((((((((((t0.c0) NOT NULL))OR(rt1.c1)))OR(CAST(rt1.c2 AS INTEGER))))AND(TIME(vt1.c0, t0.c0, t0.c0))))OR((((0.4858847339116412))<>((rt1.c2))))) RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM vt1, t0 INNER JOIN rt1 ON ((((((((((t0.c0) NOT NULL))OR(rt1.c1)))OR(CAST(rt1.c2 AS INTEGER))))AND(TIME(vt1.c0, t0.c0, t0.c0))))OR((((0.4858847339116412))<>((rt1.c2))))) RIGHT OUTER JOIN vt0 ON NULL WHERE (((((CAST(rt1.c1 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt1.c1 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM vt1, t0 INNER JOIN rt1 ON ((((((((((t0.c0) NOT NULL))OR(rt1.c1)))OR(CAST(rt1.c2 AS INTEGER))))AND(TIME(vt1.c0, t0.c0, t0.c0))))OR((((0.4858847339116412))<>((rt1.c2))))) RIGHT OUTER JOIN vt0 ON NULL);
SELECT ALL * FROM vt1, t0 INNER JOIN rt1 ON ((((((((((t0.c0) NOT NULL))OR(rt1.c1)))OR(CAST(rt1.c2 AS INTEGER))))AND(TIME(vt1.c0, t0.c0, t0.c0))))OR((((0.4858847339116412))<>((rt1.c2))))) RIGHT OUTER JOIN vt0 ON NULL WHERE (((((CAST(rt1.c1 AS NUMERIC))OR(vt1.c0 COLLATE BINARY)))AND((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(0.028419838243848194)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c0)) AS NUMERIC) CROSS JOIN vt0 ON ((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))) NOTNULL) INNER JOIN rt1 ON ((((rt1.c2)LIKE(t0.c0))) IS FALSE) WHERE (json_array_length(((vt0.c0)&(rt1.c0)), CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0)&(rt1.c0)), CAST(t0.c0 AS BLOB))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(0.028419838243848194)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c0)) AS NUMERIC) CROSS JOIN vt0 ON ((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))) NOTNULL) INNER JOIN rt1 ON ((((rt1.c2)LIKE(t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(0.028419838243848194)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c0)) AS NUMERIC) CROSS JOIN vt0 ON ((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))) NOTNULL) INNER JOIN rt1 ON ((((rt1.c2)LIKE(t0.c0))) IS FALSE) WHERE (json_array_length(((vt0.c0)&(rt1.c0)), CAST(t0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((vt0.c0)&(rt1.c0)), CAST(t0.c0 AS BLOB))) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON CAST(((((((((rt1.c2)OR(0.028419838243848194)))AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c0)) AS NUMERIC) CROSS JOIN vt0 ON ((((((t0.c0)AND(rt1.c0)))OR(rt1.c1))) NOTNULL) INNER JOIN rt1 ON ((((rt1.c2)LIKE(t0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM t0 WHERE (-1.119646158E9) ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.119646158E9) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (-1.119646158E9) ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((-1.119646158E9) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (-1.119646158E9) ORDER BY ((t0.c0 COLLATE RTRIM) NOT NULL)  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)*(t0.c0))))==((CASE WHEN t0.c0 THEN '? iPJG^e' ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)*(t0.c0))))==((CASE WHEN t0.c0 THEN '? iPJG^e' ELSE t0.c0 END)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)*(t0.c0))))==((CASE WHEN t0.c0 THEN '? iPJG^e' ELSE t0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)*(t0.c0))))==((CASE WHEN t0.c0 THEN '? iPJG^e' ELSE t0.c0 END)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0)*(t0.c0))))==((CASE WHEN t0.c0 THEN '? iPJG^e' ELSE t0.c0 END))));
SELECT COUNT(*) FROM vt1 WHERE (('㾩({N\n' IN (TRIM(vt1.c0, vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)-(vt1.c0)))) AND (((vt1.c0 IN ()))))  NULLS LAST, ((vt1.c0 IN ()) IN (((vt1.c0) IS FALSE), '-1329607664')) DESC;
SELECT SUM(count) FROM (SELECT ((('㾩({N\n' IN (TRIM(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)-(vt1.c0)))) AND (((vt1.c0 IN ()))))  NULLS LAST, ((vt1.c0 IN ()) IN (((vt1.c0) IS FALSE), '-1329607664')) DESC);
SELECT COUNT(*) FROM vt1 WHERE (('㾩({N\n' IN (TRIM(vt1.c0, vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)-(vt1.c0)))) AND (((vt1.c0 IN ()))))  NULLS LAST, ((vt1.c0 IN ()) IN (((vt1.c0) IS FALSE), '-1329607664')) DESC;
SELECT SUM(count) FROM (SELECT ((('㾩({N\n' IN (TRIM(vt1.c0, vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)-(vt1.c0)))) AND (((vt1.c0 IN ()))))  NULLS LAST, ((vt1.c0 IN ()) IN (((vt1.c0) IS FALSE), '-1329607664')) DESC);
SELECT COUNT(*) FROM vt1 WHERE (('㾩({N\n' IN (TRIM(vt1.c0, vt1.c0)))) ORDER BY (((vt1.c0)) BETWEEN ((((vt1.c0)-(vt1.c0)))) AND (((vt1.c0 IN ()))))  NULLS LAST, ((vt1.c0 IN ()) IN (((vt1.c0) IS FALSE), '-1329607664')) DESC;
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (NULL);
SELECT COUNT(*) FROM rt1 WHERE (((((((1342474936)!=('')))AND((0.926305072510038 IN (rt1.c0)))))AND((NOT (rt1.c0))))) ORDER BY (((((rt1.c2)) NOT BETWEEN (('\r&')) AND ((rt1.c0))))%((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((1342474936)<>('')))AND((0.926305072510038 IN (rt1.c0)))))AND((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2)) NOT BETWEEN (('\r&')) AND ((rt1.c0))))%((rt1.c0 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((((1342474936)!=('')))AND((0.926305072510038 IN (rt1.c0)))))AND((NOT (rt1.c0))))) ORDER BY (((((rt1.c2)) NOT BETWEEN (('\r&')) AND ((rt1.c0))))%((rt1.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((((((((1342474936)<>('')))AND((0.926305072510038 IN (rt1.c0)))))AND((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2)) NOT BETWEEN (('\r&')) AND ((rt1.c0))))%((rt1.c0 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((((1342474936)!=('')))AND((0.926305072510038 IN (rt1.c0)))))AND((NOT (rt1.c0))))) ORDER BY (((((rt1.c2)) NOT BETWEEN (('\r&')) AND ((rt1.c0))))%((rt1.c0 IN ())));
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND ('\l')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND ('\l'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND ('\l')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND ('\l'))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (x'') AND ('\l')));
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))<(((((vt1.c0))<((rt1.c1))))))) ORDER BY t0.c0 COLLATE BINARY, rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))<(((((vt1.c0))<((rt1.c1))))))) IS TRUE)  as count FROM rt1, vt1, t0, vt0 ORDER BY t0.c0 COLLATE BINARY, rt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))<(((((vt1.c0))<((rt1.c1))))))) ORDER BY t0.c0 COLLATE BINARY, rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))<(((((vt1.c0))<((rt1.c1))))))) IS TRUE)  as count FROM rt1, vt1, t0, vt0 ORDER BY t0.c0 COLLATE BINARY, rt1.c0  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE ((((((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt0.c0))))<(((((vt1.c0))<((rt1.c1))))))) ORDER BY t0.c0 COLLATE BINARY, rt1.c0  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt0.c0)-('cZ')))OR(((vt0.c0)/(vt0.c0)))))OR((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)<<(vt0.c0)))), CASE WHEN ((vt0.c0) BETWEEN ('-139986562') AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)-('cZ')))OR(((vt0.c0)/(vt0.c0)))))OR((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)<<(vt0.c0)))), CASE WHEN ((vt0.c0) BETWEEN ('-139986562') AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt0.c0)-('cZ')))OR(((vt0.c0)/(vt0.c0)))))OR((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)<<(vt0.c0)))), CASE WHEN ((vt0.c0) BETWEEN ('-139986562') AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)-('cZ')))OR(((vt0.c0)/(vt0.c0)))))OR((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)<<(vt0.c0)))), CASE WHEN ((vt0.c0) BETWEEN ('-139986562') AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((((((((((vt0.c0)-('cZ')))OR(((vt0.c0)/(vt0.c0)))))OR((vt0.c0 IN ()))))AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)))AND(((vt0.c0)<<(vt0.c0)))), CASE WHEN ((vt0.c0) BETWEEN ('-139986562') AND (vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 COLLATE NOCASE END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN rt1 ON rt1.c0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) ORDER BY COALESCE(DISTINCT (((vt1.c0))<((t0.c0))), vt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN rt1 ON rt1.c0 ORDER BY COALESCE(DISTINCT (((vt1.c0))<((t0.c0))), vt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN rt1 ON rt1.c0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) ORDER BY COALESCE(DISTINCT (((vt1.c0))<((t0.c0))), vt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM vt1, vt0 INNER JOIN t0 ON (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN rt1 ON rt1.c0 ORDER BY COALESCE(DISTINCT (((vt1.c0))<((t0.c0))), vt0.c0 COLLATE NOCASE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 INNER JOIN t0 ON (((NOT (vt0.c0)))/(CASE vt0.c0  WHEN rt1.c2 THEN t0.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 END)) INNER JOIN rt1 ON rt1.c0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) ORDER BY COALESCE(DISTINCT (((vt1.c0))<((t0.c0))), vt0.c0 COLLATE NOCASE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 RIGHT OUTER JOIN t0 ON NULL WHERE (((+ (rt1.c1)) IN (CAST(rt1.c2 AS INTEGER)))) ORDER BY ((rt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c1)) IN (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0, vt1 RIGHT OUTER JOIN t0 ON NULL ORDER BY ((rt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 RIGHT OUTER JOIN t0 ON NULL WHERE (((+ (rt1.c1)) IN (CAST(rt1.c2 AS INTEGER)))) ORDER BY ((rt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((+ (rt1.c1)) IN (CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0, vt1 RIGHT OUTER JOIN t0 ON NULL ORDER BY ((rt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 RIGHT OUTER JOIN t0 ON NULL WHERE (((+ (rt1.c1)) IN (CAST(rt1.c2 AS INTEGER)))) ORDER BY ((rt1.c1) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (('A,%Zv	') ISNULL) WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY json_extract(t0.c0, x'', vt0.c0, t0.c0) COLLATE NOCASE  NULLS FIRST, (vt0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (('A,%Zv	') ISNULL) ORDER BY json_extract(t0.c0, x'', vt0.c0, t0.c0) COLLATE NOCASE  NULLS FIRST, (vt0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON (('A,%Zv	') ISNULL) WHERE (((((((t0.c0) IS FALSE))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0))) ORDER BY json_extract(t0.c0, x'', vt0.c0, t0.c0) COLLATE NOCASE  NULLS FIRST, (vt0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0) IS FALSE))OR(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (('A,%Zv	') ISNULL) ORDER BY json_extract(t0.c0, x'', vt0.c0, t0.c0) COLLATE NOCASE  NULLS FIRST, (vt0.c0 IN (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON CASE WHEN (~ (rt1.c0)) THEN CAST(vt1.c0 AS BLOB) END CROSS JOIN rt1 ON COALESCE(rt1.c1 COLLATE RTRIM, NULL) WHERE ((((((((((rt1.c1 IN ()))OR((+ (rt1.c2)))))AND((((rt1.c2))==((rt1.c0))))))AND((0.656461854631631 IN (vt0.c0)))))AND(((t0.c0)/(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1 IN ()))OR((+ (rt1.c2)))))AND((((rt1.c2))==((rt1.c0))))))AND((0.656461854631631 IN (vt0.c0)))))AND(((t0.c0)/(rt1.c1))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON CASE WHEN (~ (rt1.c0)) THEN CAST(vt1.c0 AS BLOB) END CROSS JOIN rt1 ON COALESCE(rt1.c1 COLLATE RTRIM, NULL));
SELECT * FROM t0, vt1 FULL OUTER JOIN vt0 ON CASE WHEN (~ (rt1.c0)) THEN CAST(vt1.c0 AS BLOB) END CROSS JOIN rt1 ON COALESCE(rt1.c1 COLLATE RTRIM, NULL) WHERE ((((((((((rt1.c1 IN ()))OR((+ (rt1.c2)))))AND((((rt1.c2))==((rt1.c0))))))AND((0.656461854631631 IN (vt0.c0)))))AND(((t0.c0)/(rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c1 IN ()))OR((+ (rt1.c2)))))AND((((rt1.c2))==((rt1.c0))))))AND((0.656461854631631 IN (vt0.c0)))))AND(((t0.c0)/(rt1.c1))))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN vt0 ON CASE WHEN (~ (rt1.c0)) THEN CAST(vt1.c0 AS BLOB) END CROSS JOIN rt1 ON COALESCE(rt1.c1 COLLATE RTRIM, NULL));
SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((CASE rt1.c1  WHEN '0.9836107066170745' THEN rt1.c1 WHEN t0.c0 THEN 0.6744879825384859 WHEN rt1.c0 THEN vt1.c0 END)) AND (((692041890 IN ())))) RIGHT OUTER JOIN vt1 ON json_insert(NULL, rt1.c0, ((NULL)<(t0.c0))) WHERE (CASE WHEN NULL THEN '0.04273463633970631' WHEN (- (rt1.c0)) THEN (- (t0.c0)) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS BLOB) ELSE ((rt1.c1)IS NOT(vt1.c0)) END) ORDER BY CASE ((vt0.c0)*(0xffffffffda85afad))  WHEN LIKELIHOOD(t0.c0, 0.6873762742872805) THEN IFNULL(DISTINCT NULL, vt1.c0) WHEN ((vt0.c0)LIKE(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((t0.c0)IS NOT(rt1.c2)) THEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) ELSE (vt0.c0 IN ()) END, (((((vt0.c0)) BETWEEN ((0.570641328217643)) AND ((rt1.c2))))AND((((rt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, vt1.c0, vt0.c0)) AND ((t0.c0, rt1.c2, rt1.c1))))) ASC, ((((rt1.c0) NOTNULL)) BETWEEN ((((7.89449675E8, rt1.c1, vt1.c0))!=((rt1.c0, rt1.c0, rt1.c0)))) AND (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN '0.04273463633970631' WHEN (- (rt1.c0)) THEN (- (t0.c0)) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS BLOB) ELSE ((rt1.c1)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((CASE rt1.c1  WHEN '0.9836107066170745' THEN rt1.c1 WHEN t0.c0 THEN 0.6744879825384859 WHEN rt1.c0 THEN vt1.c0 END)) AND (((692041890 IN ())))) RIGHT OUTER JOIN vt1 ON json_insert(NULL, rt1.c0, ((NULL)<(t0.c0))) ORDER BY CASE ((vt0.c0)*(0Xffffffffda85afad))  WHEN LIKELIHOOD(t0.c0, 0.6873762742872805) THEN IFNULL(DISTINCT NULL, vt1.c0) WHEN ((vt0.c0)LIKE(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((t0.c0)IS NOT(rt1.c2)) THEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) ELSE (vt0.c0 IN ()) END, (((((vt0.c0)) BETWEEN ((0.570641328217643)) AND ((rt1.c2))))AND((((rt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, vt1.c0, vt0.c0)) AND ((t0.c0, rt1.c2, rt1.c1))))) ASC, ((((rt1.c0) NOTNULL)) BETWEEN ((((7.89449675E8, rt1.c1, vt1.c0))!=((rt1.c0, rt1.c0, rt1.c0)))) AND (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((CASE rt1.c1  WHEN '0.9836107066170745' THEN rt1.c1 WHEN t0.c0 THEN 0.6744879825384859 WHEN rt1.c0 THEN vt1.c0 END)) AND (((692041890 IN ())))) RIGHT OUTER JOIN vt1 ON json_insert(NULL, rt1.c0, ((NULL)<(t0.c0))) WHERE (CASE WHEN NULL THEN '0.04273463633970631' WHEN (- (rt1.c0)) THEN (- (t0.c0)) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS BLOB) ELSE ((rt1.c1)IS NOT(vt1.c0)) END) ORDER BY CASE ((vt0.c0)*(0xffffffffda85afad))  WHEN LIKELIHOOD(t0.c0, 0.6873762742872805) THEN IFNULL(DISTINCT NULL, vt1.c0) WHEN ((vt0.c0)LIKE(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((t0.c0)IS NOT(rt1.c2)) THEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) ELSE (vt0.c0 IN ()) END, (((((vt0.c0)) BETWEEN ((0.570641328217643)) AND ((rt1.c2))))AND((((rt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, vt1.c0, vt0.c0)) AND ((t0.c0, rt1.c2, rt1.c1))))) ASC, ((((rt1.c0) NOTNULL)) BETWEEN ((((7.89449675E8, rt1.c1, vt1.c0))!=((rt1.c0, rt1.c0, rt1.c0)))) AND (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN '0.04273463633970631' WHEN (- (rt1.c0)) THEN (- (t0.c0)) WHEN (((vt1.c0)) BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS BLOB) ELSE ((rt1.c1)IS NOT(vt1.c0)) END) IS TRUE)  as count FROM rt1, vt0 RIGHT OUTER JOIN t0 ON (((t0.c0)) BETWEEN ((CASE rt1.c1  WHEN '0.9836107066170745' THEN rt1.c1 WHEN t0.c0 THEN 0.6744879825384859 WHEN rt1.c0 THEN vt1.c0 END)) AND (((692041890 IN ())))) RIGHT OUTER JOIN vt1 ON json_insert(NULL, rt1.c0, ((NULL)<(t0.c0))) ORDER BY CASE ((vt0.c0)*(0Xffffffffda85afad))  WHEN LIKELIHOOD(t0.c0, 0.6873762742872805) THEN IFNULL(DISTINCT NULL, vt1.c0) WHEN ((vt0.c0)LIKE(rt1.c0)) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((t0.c0)IS NOT(rt1.c2)) THEN ((((rt1.c0)OR(vt1.c0)))AND(rt1.c1)) ELSE (vt0.c0 IN ()) END, (((((vt0.c0)) BETWEEN ((0.570641328217643)) AND ((rt1.c2))))AND((((rt1.c0, rt1.c2, vt1.c0)) BETWEEN ((rt1.c2, vt1.c0, vt0.c0)) AND ((t0.c0, rt1.c2, rt1.c1))))) ASC, ((((rt1.c0) NOTNULL)) BETWEEN ((((7.89449675E8, rt1.c1, vt1.c0))!=((rt1.c0, rt1.c0, rt1.c0)))) AND (CAST(vt1.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY (- (((((t0.c0)OR(vt0.c0)))AND('-1285935948'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (- (((((t0.c0)OR(vt0.c0)))AND('-1285935948'))))  NULLS FIRST);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY (- (((((t0.c0)OR(vt0.c0)))AND('-1285935948'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT)) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (- (((((t0.c0)OR(vt0.c0)))AND('-1285935948'))))  NULLS FIRST);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (CAST(((((vt1.c0)OR(t0.c0)))OR(vt1.c0)) AS TEXT)) ORDER BY (- (((((t0.c0)OR(vt0.c0)))AND('-1285935948'))))  NULLS FIRST;
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(NULL))) ORDER BY ((vt1.c0)%(((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)GLOB(NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)%(((vt1.c0)%(vt1.c0)))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(NULL))) ORDER BY ((vt1.c0)%(((vt1.c0)%(vt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 COLLATE RTRIM)GLOB(NULL))) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0)%(((vt1.c0)%(vt1.c0)))));
SELECT * FROM vt1 WHERE (((vt1.c0 COLLATE RTRIM)GLOB(NULL))) ORDER BY ((vt1.c0)%(((vt1.c0)%(vt1.c0))));
SELECT * FROM rt1, vt0 WHERE ((((((((((NOT (rt1.c1)))AND((((-2073067041))>((rt1.c1))))))AND(((rt1.c2)*(rt1.c0)))))OR(NULL)))AND((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (+ ((rt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt1.c1)))AND((((-2073067041))>((rt1.c1))))))AND(((rt1.c2)*(rt1.c0)))))OR(NULL)))AND((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ ((rt1.c1 IN ()))) ASC);
SELECT * FROM rt1, vt0 WHERE ((((((((((NOT (rt1.c1)))AND((((-2073067041))>((rt1.c1))))))AND(((rt1.c2)*(rt1.c0)))))OR(NULL)))AND((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (+ ((rt1.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT (((((((((((NOT (rt1.c1)))AND((((-2073067041))>((rt1.c1))))))AND(((rt1.c2)*(rt1.c0)))))OR(NULL)))AND((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ ((rt1.c1 IN ()))) ASC);
SELECT * FROM rt1, vt0 WHERE ((((((((((NOT (rt1.c1)))AND((((-2073067041))>((rt1.c1))))))AND(((rt1.c2)*(rt1.c0)))))OR(NULL)))AND((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) ORDER BY (+ ((rt1.c1 IN ()))) ASC;
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE (-1 COLLATE RTRIM) ORDER BY CASE ((t0.c0) BETWEEN (vt1.c0) AND (0.6947236632029906))  WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((-1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY CASE ((t0.c0) BETWEEN (vt1.c0) AND (0.6947236632029906))  WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END ASC);
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE (-1 COLLATE RTRIM) ORDER BY CASE ((t0.c0) BETWEEN (vt1.c0) AND (0.6947236632029906))  WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ((-1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY CASE ((t0.c0) BETWEEN (vt1.c0) AND (0.6947236632029906))  WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END ASC);
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE (-1 COLLATE RTRIM) ORDER BY CASE ((t0.c0) BETWEEN (vt1.c0) AND (0.6947236632029906))  WHEN rt1.c2 COLLATE RTRIM THEN ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)) END ASC;
SELECT * FROM t0, vt1 WHERE ((- ((t0.c0 IN ())))) ORDER BY ((t0.c0)OR(((t0.c0) NOT NULL))) ASC  NULLS LAST, ((((vt1.c0)AND((~ ('R5㹘0UK')))))AND(((1925158233)>=(t0.c0))))  NULLS LAST, (~ ('\r&'));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0)OR(((t0.c0) NOT NULL))) ASC  NULLS LAST, ((((vt1.c0)AND((~ ('R5㹘0UK')))))AND(((1925158233)>=(t0.c0))))  NULLS LAST, (~ ('\r&')));
SELECT * FROM t0, vt1 WHERE ((- ((t0.c0 IN ())))) ORDER BY ((t0.c0)OR(((t0.c0) NOT NULL))) ASC  NULLS LAST, ((((vt1.c0)AND((~ ('R5㹘0UK')))))AND(((1925158233)>=(t0.c0))))  NULLS LAST, (~ ('\r&'));
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1 ORDER BY ((t0.c0)OR(((t0.c0) NOT NULL))) ASC  NULLS LAST, ((((vt1.c0)AND((~ ('R5㹘0UK')))))AND(((1925158233)>=(t0.c0))))  NULLS LAST, (~ ('\r&')));
SELECT * FROM t0, vt1 WHERE ((- ((t0.c0 IN ())))) ORDER BY ((t0.c0)OR(((t0.c0) NOT NULL))) ASC  NULLS LAST, ((((vt1.c0)AND((~ ('R5㹘0UK')))))AND(((1925158233)>=(t0.c0))))  NULLS LAST, (~ ('\r&'));
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((~ (vt1.c0))) NOT NULL)) ORDER BY ((CAST('d宅' AS BLOB))%(UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY ((CAST('d宅' AS BLOB))%(UNLIKELY(vt1.c0))));
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((~ (vt1.c0))) NOT NULL)) ORDER BY ((CAST('d宅' AS BLOB))%(UNLIKELY(vt1.c0)));
SELECT SUM(count) FROM (SELECT (((((~ (vt1.c0))) NOT NULL)) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY ((CAST('d宅' AS BLOB))%(UNLIKELY(vt1.c0))));
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE ((((~ (vt1.c0))) NOT NULL)) ORDER BY ((CAST('d宅' AS BLOB))%(UNLIKELY(vt1.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(IFNULL(NULL, rt1.c0))) WHERE (((((rt1.c0)GLOB(vt0.c0))) NOT NULL)) ORDER BY (rt1.c1 COLLATE RTRIM IN (x'c7f708a3')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(IFNULL(NULL, rt1.c0))) ORDER BY (rt1.c1 COLLATE RTRIM IN (x'c7f708a3')) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(IFNULL(NULL, rt1.c0))) WHERE (((((rt1.c0)GLOB(vt0.c0))) NOT NULL)) ORDER BY (rt1.c1 COLLATE RTRIM IN (x'c7f708a3')) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)GLOB(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(IFNULL(NULL, rt1.c0))) ORDER BY (rt1.c1 COLLATE RTRIM IN (x'c7f708a3')) DESC);
SELECT ALL COUNT(*) FROM vt0, rt1, t0 RIGHT OUTER JOIN vt1 ON ((CASE WHEN t0.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)<(IFNULL(NULL, rt1.c0))) WHERE (((((rt1.c0)GLOB(vt0.c0))) NOT NULL)) ORDER BY (rt1.c1 COLLATE RTRIM IN (x'c7f708a3')) DESC;
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((((0.8177578373537527) IS FALSE))<>(x'')));
SELECT SUM(count) FROM (SELECT ((((((0.8177578373537527) IS FALSE))<>(x''))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((((0.8177578373537527) IS FALSE))<>(x'')));
SELECT SUM(count) FROM (SELECT ((((((0.8177578373537527) IS FALSE))<>(x''))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT ALL * FROM rt1, vt1, vt0 WHERE (((((0.8177578373537527) IS FALSE))<>(x'')));
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0)-(vt1.c0)))>>(UNLIKELY(t0.c0)))) ORDER BY (~ (-1867810655)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c0)))>>(UNLIKELY(t0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (~ (-1867810655)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0)-(vt1.c0)))>>(UNLIKELY(t0.c0)))) ORDER BY (~ (-1867810655)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)-(vt1.c0)))>>(UNLIKELY(t0.c0)))) IS TRUE)  as count FROM vt0, vt1, t0 ORDER BY (~ (-1867810655)) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt0, vt1, t0 WHERE (((((vt1.c0)-(vt1.c0)))>>(UNLIKELY(t0.c0)))) ORDER BY (~ (-1867810655)) COLLATE RTRIM ASC;
SELECT * FROM t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<=(((((t0.c0))>((t0.c0))))))) ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<=(((((t0.c0))>((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC);
SELECT * FROM t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<=(((((t0.c0))>((t0.c0))))))) ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<=(((((t0.c0))>((t0.c0))))))) IS TRUE)  as count FROM t0 ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC);
SELECT * FROM t0 WHERE (((((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))))<=(((((t0.c0))>((t0.c0))))))) ORDER BY CAST(NULLIF(t0.c0, t0.c0) AS TEXT) ASC;
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CHANGES() WHERE ((((+ (vt0.c0)))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=(vt0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CHANGES());
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CHANGES() WHERE ((((+ (vt0.c0)))<=(vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<=(vt0.c0))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON CHANGES());
SELECT * FROM t0 RIGHT OUTER JOIN vt0 ON CHANGES() WHERE ((((+ (vt0.c0)))<=(vt0.c0)));
SELECT COUNT(*) FROM vt1, rt1 WHERE (((rt1.c0) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (UPPER(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (UPPER(rt1.c1)))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((rt1.c0) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (UPPER(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (UPPER(rt1.c1)))) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (((rt1.c0) NOT BETWEEN (((rt1.c0) IS FALSE)) AND (UPPER(rt1.c1))));
SELECT * FROM vt0, t0, rt1 WHERE ('') ORDER BY CASE WHEN (NOT (t0.c0)) THEN (NOT (t0.c0)) END, (NOT ((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))), PRINTF(((vt0.c0)%(vt0.c0)), ((rt1.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY CASE WHEN (NOT (t0.c0)) THEN (NOT (t0.c0)) END, (NOT ((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))), PRINTF(((vt0.c0)%(vt0.c0)), ((rt1.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) DESC);
SELECT * FROM vt0, t0, rt1 WHERE ('') ORDER BY CASE WHEN (NOT (t0.c0)) THEN (NOT (t0.c0)) END, (NOT ((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))), PRINTF(((vt0.c0)%(vt0.c0)), ((rt1.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0, t0, rt1 ORDER BY CASE WHEN (NOT (t0.c0)) THEN (NOT (t0.c0)) END, (NOT ((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))), PRINTF(((vt0.c0)%(vt0.c0)), ((rt1.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) DESC);
SELECT * FROM vt0, t0, rt1 WHERE ('') ORDER BY CASE WHEN (NOT (t0.c0)) THEN (NOT (t0.c0)) END, (NOT ((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))), PRINTF(((vt0.c0)%(vt0.c0)), ((rt1.c1) IS FALSE), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1))) DESC;
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY ((COALESCE(t0.c0, vt1.c0, vt1.c0, t0.c0))&(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((COALESCE(t0.c0, vt1.c0, vt1.c0, t0.c0))&(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY ((COALESCE(t0.c0, vt1.c0, vt1.c0, t0.c0))&(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM vt1 NATURAL JOIN t0 ORDER BY ((COALESCE(t0.c0, vt1.c0, vt1.c0, t0.c0))&(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1 NATURAL JOIN t0 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY ((COALESCE(t0.c0, vt1.c0, vt1.c0, t0.c0))&(((((t0.c0)AND(vt1.c0)))OR(vt1.c0)))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT * FROM rt1, vt0, t0, vt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT * FROM rt1, vt0, t0, vt1 WHERE (x'');
SELECT ALL * FROM rt1, vt1, vt0 INNER JOIN t0 ON t0.c0 WHERE (((rt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL)) IS TRUE)  as count FROM rt1, vt1, vt0 INNER JOIN t0 ON t0.c0);
SELECT ALL * FROM rt1, vt1, vt0 INNER JOIN t0 ON t0.c0 WHERE (((rt1.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) ISNULL)) IS TRUE)  as count FROM rt1, vt1, vt0 INNER JOIN t0 ON t0.c0);
SELECT ALL * FROM rt1, vt1, vt0 INNER JOIN t0 ON t0.c0 WHERE (((rt1.c0) ISNULL));
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (DATETIME(((t0.c0) NOTNULL), t0.c0 COLLATE NOCASE, t0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON json_remove(IFNULL(DISTINCT rt1.c2, vt1.c0), ((rt1.c0)%(rt1.c2)), (- (rt1.c0)), CAST(rt1.c0 AS BLOB)) INNER JOIN rt1 ON 0.24046642144459418 LEFT OUTER JOIN vt1 ON CASE WHEN UNLIKELY(rt1.c2) THEN (rt1.c0 IN ()) ELSE (((rt1.c0))>=((rt1.c0))) END WHERE ((NOT (vt0.c0))) ORDER BY (NOT (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON json_remove(IFNULL(DISTINCT rt1.c2, vt1.c0), ((rt1.c0)%(rt1.c2)), (- (rt1.c0)), CAST(rt1.c0 AS BLOB)) INNER JOIN rt1 ON 0.24046642144459418 LEFT OUTER JOIN vt1 ON CASE WHEN UNLIKELY(rt1.c2) THEN (rt1.c0 IN ()) ELSE (((rt1.c0))>=((rt1.c0))) END ORDER BY (NOT (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON json_remove(IFNULL(DISTINCT rt1.c2, vt1.c0), ((rt1.c0)%(rt1.c2)), (- (rt1.c0)), CAST(rt1.c0 AS BLOB)) INNER JOIN rt1 ON 0.24046642144459418 LEFT OUTER JOIN vt1 ON CASE WHEN UNLIKELY(rt1.c2) THEN (rt1.c0 IN ()) ELSE (((rt1.c0))>=((rt1.c0))) END WHERE ((NOT (vt0.c0))) ORDER BY (NOT (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON json_remove(IFNULL(DISTINCT rt1.c2, vt1.c0), ((rt1.c0)%(rt1.c2)), (- (rt1.c0)), CAST(rt1.c0 AS BLOB)) INNER JOIN rt1 ON 0.24046642144459418 LEFT OUTER JOIN vt1 ON CASE WHEN UNLIKELY(rt1.c2) THEN (rt1.c0 IN ()) ELSE (((rt1.c0))>=((rt1.c0))) END ORDER BY (NOT (((rt1.c1) NOT BETWEEN (vt0.c0) AND (rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0)))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt1.c0))==((vt0.c0, vt0.c0, vt1.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 NATURAL JOIN vt1);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt1 WHERE ((((((vt0.c0, vt0.c0, vt1.c0))=((vt0.c0, vt0.c0, vt1.c0)))) IS FALSE));
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt1 ON (- (t0.c0)) INNER JOIN vt0 ON 0.3315979944192393 WHERE ((NOT ('0.55930782606385'))) ORDER BY LOWER(DISTINCT (NOT (rt1.c2))) ASC, CAST(((rt1.c0) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('0.55930782606385'))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt1 ON (- (t0.c0)) INNER JOIN vt0 ON 0.3315979944192393 ORDER BY LOWER(DISTINCT (NOT (rt1.c2))) ASC, CAST(((rt1.c0) IS FALSE) AS BLOB) ASC);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt1 ON (- (t0.c0)) INNER JOIN vt0 ON 0.3315979944192393 WHERE ((NOT ('0.55930782606385'))) ORDER BY LOWER(DISTINCT (NOT (rt1.c2))) ASC, CAST(((rt1.c0) IS FALSE) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ('0.55930782606385'))) IS TRUE)  as count FROM t0, vt1 FULL OUTER JOIN rt1 ON (- (t0.c0)) INNER JOIN vt0 ON 0.3315979944192393 ORDER BY LOWER(DISTINCT (NOT (rt1.c2))) ASC, CAST(((rt1.c0) IS FALSE) AS BLOB) ASC);
SELECT ALL * FROM t0, vt1 FULL OUTER JOIN rt1 ON (- (t0.c0)) INNER JOIN vt0 ON 0.3315979944192393 WHERE ((NOT ('0.55930782606385'))) ORDER BY LOWER(DISTINCT (NOT (rt1.c2))) ASC, CAST(((rt1.c0) IS FALSE) AS BLOB) ASC;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (~ ((x'3b53' IN (vt0.c0)))) WHERE (HEX(DISTINCT ((0.44776567678093127)IS(x'2c0a'))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((0.44776567678093127)IS(x'2c0a')))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (~ ((x'3b53' IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (~ ((x'3b53' IN (vt0.c0)))) WHERE (HEX(DISTINCT ((0.44776567678093127)IS(x'2c0a'))));
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT ((0.44776567678093127)IS(x'2c0a')))) IS TRUE)  as count FROM vt0 INNER JOIN vt1 ON (~ ((x'3b53' IN (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN vt1 ON (~ ((x'3b53' IN (vt0.c0)))) WHERE (HEX(DISTINCT ((0.44776567678093127)IS(x'2c0a'))));
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, 0x113c5bfa)) END) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.9798844780577238 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, 0x113c5bfa)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.9798844780577238 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, 0x113c5bfa)) END) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.9798844780577238 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, 0x113c5bfa)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.9798844780577238 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE NULL  WHEN vt0.c0 THEN (vt0.c0 IN (vt0.c0, 0x113c5bfa)) END) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.9798844780577238 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ORDER BY NULL  NULLS FIRST, TYPEOF(DISTINCT rt1.c2) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt1, vt1, vt0, t0 ORDER BY NULL  NULLS FIRST, TYPEOF(DISTINCT rt1.c2) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ORDER BY NULL  NULLS FIRST, TYPEOF(DISTINCT rt1.c2) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) IS TRUE)  as count FROM rt1, vt1, vt0, t0 ORDER BY NULL  NULLS FIRST, TYPEOF(DISTINCT rt1.c2) COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE ((~ ((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c0)))))) ORDER BY NULL  NULLS FIRST, TYPEOF(DISTINCT rt1.c2) COLLATE BINARY  NULLS LAST;
SELECT * FROM rt1, t0, vt0 WHERE (CAST(CASE rt1.c2  WHEN 0.5319859851202889 THEN rt1.c1 ELSE rt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN 0.5319859851202889 THEN rt1.c1 ELSE rt1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (CAST(CASE rt1.c2  WHEN 0.5319859851202889 THEN rt1.c1 ELSE rt1.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c2  WHEN 0.5319859851202889 THEN rt1.c1 ELSE rt1.c0 END AS INTEGER)) IS TRUE)  as count FROM rt1, t0, vt0);
SELECT * FROM rt1, t0, vt0 WHERE (CAST(CASE rt1.c2  WHEN 0.5319859851202889 THEN rt1.c1 ELSE rt1.c0 END AS INTEGER));
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY 0.6023563437952328;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY 0.6023563437952328);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY 0.6023563437952328;
SELECT SUM(count) FROM (SELECT ((CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM vt1 ORDER BY 0.6023563437952328);
SELECT ALL * FROM vt1 WHERE (CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS NUMERIC)) ORDER BY 0.6023563437952328;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0)=(vt0.c0))))) ORDER BY ((((rt1.c1) IS TRUE))GLOB('-1116909494')) DESC  NULLS LAST, CAST((((rt1.c1))>=((rt1.c1))) AS TEXT)  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1) IS TRUE))GLOB('-1116909494')) DESC  NULLS LAST, CAST((((rt1.c1))>=((rt1.c1))) AS TEXT)  NULLS LAST, rt1.c1  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0)=(vt0.c0))))) ORDER BY ((((rt1.c1) IS TRUE))GLOB('-1116909494')) DESC  NULLS LAST, CAST((((rt1.c1))>=((rt1.c1))) AS TEXT)  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)IS NOT(rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0)=(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c1) IS TRUE))GLOB('-1116909494')) DESC  NULLS LAST, CAST((((rt1.c1))>=((rt1.c1))) AS TEXT)  NULLS LAST, rt1.c1  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c1)IS NOT(rt1.c1))) NOT BETWEEN (NULL) AND (((rt1.c0)=(vt0.c0))))) ORDER BY ((((rt1.c1) IS TRUE))GLOB('-1116909494')) DESC  NULLS LAST, CAST((((rt1.c1))>=((rt1.c1))) AS TEXT)  NULLS LAST, rt1.c1  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL)<=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)>=(vt0.c0)) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) ELSE vt0.c0 END) ORDER BY (((~ (vt0.c0)))>=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)<=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)>=(vt0.c0)) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL)<=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)>=(vt0.c0)) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) ELSE vt0.c0 END) ORDER BY (((~ (vt0.c0)))>=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((NULL)<=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)>=(vt0.c0)) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((NULL)<=(vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN CASE vt0.c0  WHEN NULL THEN vt0.c0 ELSE vt0.c0 END WHEN ((vt0.c0)>=(vt0.c0)) THEN NULL WHEN vt0.c0 THEN ((vt0.c0)-(vt0.c0)) ELSE vt0.c0 END) ORDER BY (((~ (vt0.c0)))>=(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS FIRST, ((vt0.c0)||(vt0.c0)) COLLATE BINARY ASC  NULLS FIRST, vt0.c0 DESC  NULLS FIRST;
SELECT * FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN 0x19e9b51d THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN x'' ELSE rt1.c0 END)+(((rt1.c0)||(vt1.c0)))) WHERE (IFNULL((('0.6744879825384859')>=(rt1.c0)), CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((('0.6744879825384859')>=(rt1.c0)), CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN 0x19e9b51d THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN x'' ELSE rt1.c0 END)+(((rt1.c0)||(vt1.c0)))));
SELECT * FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN 0x19e9b51d THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN x'' ELSE rt1.c0 END)+(((rt1.c0)||(vt1.c0)))) WHERE (IFNULL((('0.6744879825384859')>=(rt1.c0)), CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((('0.6744879825384859')>=(rt1.c0)), CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN 0x19e9b51d THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN x'' ELSE rt1.c0 END)+(((rt1.c0)||(vt1.c0)))));
SELECT * FROM rt1 FULL OUTER JOIN vt1 ON ((CASE WHEN 0x19e9b51d THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN x'' ELSE rt1.c0 END)+(((rt1.c0)||(vt1.c0)))) WHERE (IFNULL((('0.6744879825384859')>=(rt1.c0)), CASE vt1.c0  WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((((((vt1.c0)LIKE(vt1.c0)))OR(CAST(t0.c0 AS BLOB))))OR((~ (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(LIKELY(rt1.c0))) FULL OUTER JOIN rt1 ON LOWER(CAST(vt1.c0 AS REAL)) WHERE (((t0.c0 COLLATE NOCASE)<<(((vt1.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)<<(((vt1.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((((((vt1.c0)LIKE(vt1.c0)))OR(CAST(t0.c0 AS BLOB))))OR((~ (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(LIKELY(rt1.c0))) FULL OUTER JOIN rt1 ON LOWER(CAST(vt1.c0 AS REAL)));
SELECT ALL * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((((((vt1.c0)LIKE(vt1.c0)))OR(CAST(t0.c0 AS BLOB))))OR((~ (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(LIKELY(rt1.c0))) FULL OUTER JOIN rt1 ON LOWER(CAST(vt1.c0 AS REAL)) WHERE (((t0.c0 COLLATE NOCASE)<<(((vt1.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE NOCASE)<<(((vt1.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON ((((((((((vt1.c0)LIKE(vt1.c0)))OR(CAST(t0.c0 AS BLOB))))OR((~ (t0.c0)))))OR(((t0.c0) IS TRUE))))OR(LIKELY(rt1.c0))) FULL OUTER JOIN rt1 ON LOWER(CAST(vt1.c0 AS REAL)));
SELECT ALL * FROM rt1, t0, vt1 WHERE (((((rt1.c1) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt1, t0, vt1);
SELECT ALL * FROM rt1, t0, vt1 WHERE (((((rt1.c1) NOT NULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT NULL)) NOTNULL)) IS TRUE)  as count FROM rt1, t0, vt1);
SELECT ALL * FROM rt1, t0, vt1 WHERE (((((rt1.c1) NOT NULL)) NOTNULL));
SELECT * FROM vt0, t0, vt1, rt1 WHERE (LIKELY(((((((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1, rt1);
SELECT * FROM vt0, t0, vt1, rt1 WHERE (LIKELY(((((((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(((((((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c0)))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0, vt1, rt1);
SELECT * FROM vt0, t0, vt1, rt1 WHERE (LIKELY(((((((((rt1.c0)AND(rt1.c2)))OR(vt0.c0)))OR(rt1.c2)))OR(t0.c0))));
SELECT * FROM vt0, rt1, t0, vt1 WHERE (-1.902009779E9) ORDER BY CAST(((rt1.c1)&(rt1.c2)) AS REAL) DESC  NULLS LAST, (~ (rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt1.c0)OR(vt0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ((-1.902009779E9) IS TRUE)  as count FROM vt0, rt1, t0 NOT INDEXED, vt1 ORDER BY CAST(((rt1.c1)&(rt1.c2)) AS REAL) DESC  NULLS LAST, (~ (rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt1.c0)OR(vt0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN rt1.c2 END)));
SELECT * FROM vt0, rt1, t0, vt1 WHERE (-1.902009779E9) ORDER BY CAST(((rt1.c1)&(rt1.c2)) AS REAL) DESC  NULLS LAST, (~ (rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt1.c0)OR(vt0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN rt1.c2 END));
SELECT SUM(count) FROM (SELECT ((-1.902009779E9) IS TRUE)  as count FROM vt0, rt1, t0 NOT INDEXED, vt1 ORDER BY CAST(((rt1.c1)&(rt1.c2)) AS REAL) DESC  NULLS LAST, (~ (rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt1.c0)OR(vt0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN rt1.c2 END)));
SELECT * FROM vt0, rt1, t0, vt1 WHERE (-1.902009779E9) ORDER BY CAST(((rt1.c1)&(rt1.c2)) AS REAL) DESC  NULLS LAST, (~ (rt1.c1 COLLATE RTRIM)) ASC  NULLS FIRST, ((((((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt1.c0)OR(vt0.c0)))))AND(CASE t0.c0  WHEN vt1.c0 THEN rt1.c2 END));
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))-(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))-(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))-(CAST(rt1.c2 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))-(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, rt1, vt0, vt1);
SELECT ALL COUNT(*) FROM t0, rt1, vt0, vt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c1) AND (vt0.c0)))-(CAST(rt1.c2 AS INTEGER))));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CAST(CASE x'd5c3'  WHEN rt1.c2 THEN t0.c0 END AS BLOB) CROSS JOIN vt1 ON ((rt1.c1) BETWEEN ((NOT (rt1.c0))) AND (rt1.c1 COLLATE BINARY)) WHERE (COALESCE((vt1.c0 IN ()), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), rt1.c1, rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt1.c0 IN ()), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), rt1.c1, rt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(CASE x'd5c3'  WHEN rt1.c2 THEN t0.c0 END AS BLOB) CROSS JOIN vt1 ON ((rt1.c1) BETWEEN ((NOT (rt1.c0))) AND (rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CAST(CASE x'd5c3'  WHEN rt1.c2 THEN t0.c0 END AS BLOB) CROSS JOIN vt1 ON ((rt1.c1) BETWEEN ((NOT (rt1.c0))) AND (rt1.c1 COLLATE BINARY)) WHERE (COALESCE((vt1.c0 IN ()), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), rt1.c1, rt1.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((vt1.c0 IN ()), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), rt1.c1, rt1.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN rt1 ON CAST(CASE x'd5c3'  WHEN rt1.c2 THEN t0.c0 END AS BLOB) CROSS JOIN vt1 ON ((rt1.c1) BETWEEN ((NOT (rt1.c0))) AND (rt1.c1 COLLATE BINARY)));
SELECT ALL * FROM t0 LEFT OUTER JOIN rt1 ON CAST(CASE x'd5c3'  WHEN rt1.c2 THEN t0.c0 END AS BLOB) CROSS JOIN vt1 ON ((rt1.c1) BETWEEN ((NOT (rt1.c0))) AND (rt1.c1 COLLATE BINARY)) WHERE (COALESCE((vt1.c0 IN ()), ((NULL) NOT BETWEEN (t0.c0) AND (t0.c0)), rt1.c1, rt1.c0 COLLATE NOCASE));
SELECT * FROM t0, vt1 CROSS JOIN rt1 ON (((((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))))) WHERE (((((rt1.c0 COLLATE RTRIM)AND(((vt1.c0) IS FALSE))))OR('-683606562')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE RTRIM)AND(((vt1.c0) IS FALSE))))OR('-683606562'))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN rt1 ON (((((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))))));
SELECT * FROM t0, vt1 CROSS JOIN rt1 ON (((((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))))) WHERE (((((rt1.c0 COLLATE RTRIM)AND(((vt1.c0) IS FALSE))))OR('-683606562')));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0 COLLATE RTRIM)AND(((vt1.c0) IS FALSE))))OR('-683606562'))) IS TRUE)  as count FROM t0, vt1 CROSS JOIN rt1 ON (((((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))))));
SELECT * FROM t0, vt1 CROSS JOIN rt1 ON (((((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))))=((((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c1))))) WHERE (((((rt1.c0 COLLATE RTRIM)AND(((vt1.c0) IS FALSE))))OR('-683606562')));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN vt1.c0 END COLLATE BINARY COLLATE NOCASE WHERE ((((rt1.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) AND ((vt1.c0)))) ORDER BY (IFNULL(DISTINCT rt1.c0, rt1.c2) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN vt1.c0 END COLLATE BINARY COLLATE NOCASE ORDER BY (IFNULL(DISTINCT rt1.c0, rt1.c2) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN vt1.c0 END COLLATE BINARY COLLATE NOCASE WHERE ((((rt1.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) AND ((vt1.c0)))) ORDER BY (IFNULL(DISTINCT rt1.c0, rt1.c2) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) AND ((vt1.c0)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN vt1.c0 END COLLATE BINARY COLLATE NOCASE ORDER BY (IFNULL(DISTINCT rt1.c0, rt1.c2) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c2)AND(rt1.c2)))OR(rt1.c2)) IN ()) RIGHT OUTER JOIN vt1 ON CASE WHEN rt1.c0 THEN vt1.c0 END COLLATE BINARY COLLATE NOCASE WHERE ((((rt1.c2)) BETWEEN ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) AND ((vt1.c0)))) ORDER BY (IFNULL(DISTINCT rt1.c0, rt1.c2) IN ()) DESC  NULLS LAST;
SELECT * FROM rt1, vt1, vt0, t0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT * FROM rt1, vt1, vt0, t0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT * FROM rt1, vt1, vt0, t0 WHERE (CAST(vt0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL * FROM vt1, t0, rt1, vt0 WHERE (CASE WHEN NULLIF(1462446079, rt1.c2) THEN COALESCE(DISTINCT vt1.c0, t0.c0) WHEN ((vt0.c0)<(rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN ((rt1.c1)-(vt1.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(1462446079, rt1.c2) THEN COALESCE(DISTINCT vt1.c0, t0.c0) WHEN ((vt0.c0)<(rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN ((rt1.c1)-(vt1.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM vt1, t0, rt1, vt0);
SELECT ALL * FROM vt1, t0, rt1, vt0 WHERE (CASE WHEN NULLIF(1462446079, rt1.c2) THEN COALESCE(DISTINCT vt1.c0, t0.c0) WHEN ((vt0.c0)<(rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN ((rt1.c1)-(vt1.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULLIF(1462446079, rt1.c2) THEN COALESCE(DISTINCT vt1.c0, t0.c0) WHEN ((vt0.c0)<(rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN ((rt1.c1)-(vt1.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END END) IS TRUE)  as count FROM vt1, t0, rt1, vt0);
SELECT ALL * FROM vt1, t0, rt1, vt0 WHERE (CASE WHEN NULLIF(1462446079, rt1.c2) THEN COALESCE(DISTINCT vt1.c0, t0.c0) WHEN ((vt0.c0)<(rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN ((rt1.c1)-(vt1.c0)) THEN CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END END);
SELECT * FROM vt1, t0, rt1 WHERE (ROUND(CASE WHEN rt1.c2 THEN 0.6510320877214065 ELSE NULL END, ((rt1.c2)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(CASE WHEN rt1.c2 THEN 0.6510320877214065 ELSE NULL END, ((rt1.c2)IS(t0.c0)))) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT * FROM vt1, t0, rt1 WHERE (ROUND(CASE WHEN rt1.c2 THEN 0.6510320877214065 ELSE NULL END, ((rt1.c2)IS(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(CASE WHEN rt1.c2 THEN 0.6510320877214065 ELSE NULL END, ((rt1.c2)IS(t0.c0)))) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT * FROM vt1, t0, rt1 WHERE (ROUND(CASE WHEN rt1.c2 THEN 0.6510320877214065 ELSE NULL END, ((rt1.c2)IS(t0.c0))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((vt1.c0 IN ()) IN ())) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0 IN ()) IN ()));
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (((((vt1.c0) BETWEEN (rt1.c0) AND (t0.c0))) NOT NULL)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)>(t0.c0))) AND (COALESCE(t0.c0, rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (rt1.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt1, rt1, vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)>(t0.c0))) AND (COALESCE(t0.c0, rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (((((vt1.c0) BETWEEN (rt1.c0) AND (t0.c0))) NOT NULL)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)>(t0.c0))) AND (COALESCE(t0.c0, rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0) BETWEEN (rt1.c0) AND (t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt1, rt1, vt0 ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)>(t0.c0))) AND (COALESCE(t0.c0, rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (((((vt1.c0) BETWEEN (rt1.c0) AND (t0.c0))) NOT NULL)) ORDER BY ((((vt0.c0) IS FALSE)) NOT BETWEEN (((vt0.c0)>(t0.c0))) AND (COALESCE(t0.c0, rt1.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))LIKE((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))LIKE((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) ISNULL))LIKE((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) ISNULL))LIKE((vt0.c0 IN ()))));
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)>>(t0.c0))) AND (t0.c0))) ORDER BY ((t0.c0 COLLATE RTRIM)>=(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), ((x'')==(0.6310729146336221)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)>>(t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)>=(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), ((x'')==(0.6310729146336221)) DESC);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)>>(t0.c0))) AND (t0.c0))) ORDER BY ((t0.c0 COLLATE RTRIM)>=(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), ((x'')==(0.6310729146336221)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)>>(t0.c0))) AND (t0.c0))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE RTRIM)>=(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), ((x'')==(0.6310729146336221)) DESC);
SELECT * FROM t0 WHERE (((((t0.c0) NOT NULL)) BETWEEN (((t0.c0)>>(t0.c0))) AND (t0.c0))) ORDER BY ((t0.c0 COLLATE RTRIM)>=(((((t0.c0)AND(t0.c0)))OR(t0.c0)))), ((x'')==(0.6310729146336221)) DESC;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((((1222487201) IS FALSE))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) INNER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<((vt0.c0))) WHERE (((rt1.c2)GLOB(json_quote(vt0.c0)))) ORDER BY ((((t0.c0)IS NOT(rt1.c2)))-(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)GLOB(json_quote(vt0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((((1222487201) IS FALSE))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) INNER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<((vt0.c0))) ORDER BY ((((t0.c0)IS NOT(rt1.c2)))-(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((((1222487201) IS FALSE))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) INNER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<((vt0.c0))) WHERE (((rt1.c2)GLOB(json_quote(vt0.c0)))) ORDER BY ((((t0.c0)IS NOT(rt1.c2)))-(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)GLOB(json_quote(vt0.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) NOT BETWEEN ((((1222487201) IS FALSE))) AND ((CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END))) INNER JOIN rt1 ON (((CAST(rt1.c0 AS NUMERIC)))<((vt0.c0))) ORDER BY ((((t0.c0)IS NOT(rt1.c2)))-(CAST(vt0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE (0xffffffffbc259f67);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbc259f67) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE (0xffffffffbc259f67);
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbc259f67) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT COUNT(*) FROM rt1, vt1, t0 WHERE (0xffffffffbc259f67);
SELECT * FROM vt0 WHERE ((((vt0.c0))<(((- (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS BLOB))AND(NULL)) DESC  NULLS FIRST, (~ (STRFTIME(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS BLOB))AND(NULL)) DESC  NULLS FIRST, (~ (STRFTIME(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0))<(((- (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS BLOB))AND(NULL)) DESC  NULLS FIRST, (~ (STRFTIME(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS BLOB))AND(NULL)) DESC  NULLS FIRST, (~ (STRFTIME(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0))<(((- (vt0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), ((CAST(vt0.c0 AS BLOB))AND(NULL)) DESC  NULLS FIRST, (~ (STRFTIME(x'', vt0.c0, vt0.c0, vt0.c0, vt0.c0))) DESC;
SELECT * FROM rt1, t0, vt0, vt1 WHERE (NULLIF(NULL, ((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(NULL, ((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (NULLIF(NULL, ((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(NULL, ((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1)))) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (NULLIF(NULL, ((((((((vt0.c0)OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((rt1.c2)>>(rt1.c0)))))) ORDER BY (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((x'')) AND ((((rt1.c2)>>(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1 NATURAL JOIN t0 ORDER BY (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((rt1.c2)>>(rt1.c0)))))) ORDER BY (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) BETWEEN ((x'')) AND ((((rt1.c2)>>(rt1.c0)))))) IS TRUE)  as count FROM rt1, vt0, vt1 NATURAL JOIN t0 ORDER BY (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, vt1 NATURAL JOIN t0 WHERE ((((vt0.c0)) BETWEEN ((x'')) AND ((((rt1.c2)>>(rt1.c0)))))) ORDER BY (~ (t0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)-(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((0.2765558608320682)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((0.2765558608320682)|(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)-(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((0.2765558608320682)|(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((0.2765558608320682)|(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c0)-(NULL)))OR(vt0.c0 COLLATE RTRIM)))OR(((0.2765558608320682)|(t0.c0)))));
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN NULLIF(vt1.c0, 0.8416055578148206) THEN vt0.c0 COLLATE RTRIM ELSE ((vt1.c0) IS FALSE) END) ORDER BY (NOT (((((vt1.c0)AND(t0.c0)))AND(t0.c0)))), ((0.47696816150630206)/((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((2.98754092E8, vt0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(vt1.c0, 0.8416055578148206) THEN vt0.c0 COLLATE RTRIM ELSE ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (NOT (((((vt1.c0)AND(t0.c0)))AND(t0.c0)))), ((0.47696816150630206)/((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((2.98754092E8, vt0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN NULLIF(vt1.c0, 0.8416055578148206) THEN vt0.c0 COLLATE RTRIM ELSE ((vt1.c0) IS FALSE) END) ORDER BY (NOT (((((vt1.c0)AND(t0.c0)))AND(t0.c0)))), ((0.47696816150630206)/((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((2.98754092E8, vt0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULLIF(vt1.c0, 0.8416055578148206) THEN vt0.c0 COLLATE RTRIM ELSE ((vt1.c0) IS FALSE) END) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (NOT (((((vt1.c0)AND(t0.c0)))AND(t0.c0)))), ((0.47696816150630206)/((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((2.98754092E8, vt0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0))))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, vt0 WHERE (CASE WHEN NULLIF(vt1.c0, 0.8416055578148206) THEN vt0.c0 COLLATE RTRIM ELSE ((vt1.c0) IS FALSE) END) ORDER BY (NOT (((((vt1.c0)AND(t0.c0)))AND(t0.c0)))), ((0.47696816150630206)/((((vt0.c0, vt0.c0, vt1.c0)) BETWEEN ((2.98754092E8, vt0.c0, vt1.c0)) AND ((vt1.c0, t0.c0, t0.c0))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c0)<(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0, rt1 ORDER BY ((rt1.c0)<(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c0)<(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM t0, vt1, vt0, rt1 ORDER BY ((rt1.c0)<(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE (vt0.c0) ORDER BY ((rt1.c0)<(vt1.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR((((((((('651537642')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)-(t0.c0))))) ORDER BY CASE CASE t0.c0  WHEN 1.466252958E9 THEN t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('427629839')) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE t0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS BLOB))OR((((((((('651537642')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c0  WHEN 1.466252958E9 THEN t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('427629839')) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE t0.c0 COLLATE BINARY END DESC);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR((((((((('651537642')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)-(t0.c0))))) ORDER BY CASE CASE t0.c0  WHEN 1.466252958E9 THEN t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('427629839')) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE t0.c0 COLLATE BINARY END DESC;
SELECT SUM(count) FROM (SELECT ((((((CAST(t0.c0 AS BLOB))OR((((((((('651537642')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY CASE CASE t0.c0  WHEN 1.466252958E9 THEN t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('427629839')) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE t0.c0 COLLATE BINARY END DESC);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS BLOB))OR((((((((('651537642')OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))))OR(((t0.c0)-(t0.c0))))) ORDER BY CASE CASE t0.c0  WHEN 1.466252958E9 THEN t0.c0 END  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND ('427629839')) THEN (t0.c0 IN (t0.c0, t0.c0)) ELSE t0.c0 COLLATE BINARY END DESC;
SELECT ALL * FROM rt1, vt0, t0 INNER JOIN vt1 ON ((((CAST(t0.c0 AS TEXT))OR((~ (rt1.c1)))))OR(CAST(NULL AS REAL))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0, t0 INNER JOIN vt1 ON ((((CAST(t0.c0 AS TEXT))OR((~ (rt1.c1)))))OR(CAST(NULL AS REAL))));
SELECT ALL * FROM rt1, vt0, t0 INNER JOIN vt1 ON ((((CAST(t0.c0 AS TEXT))OR((~ (rt1.c1)))))OR(CAST(NULL AS REAL))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1, vt0, t0 INNER JOIN vt1 ON ((((CAST(t0.c0 AS TEXT))OR((~ (rt1.c1)))))OR(CAST(NULL AS REAL))));
SELECT ALL * FROM rt1, vt0, t0 INNER JOIN vt1 ON ((((CAST(t0.c0 AS TEXT))OR((~ (rt1.c1)))))OR(CAST(NULL AS REAL))) WHERE (rt1.c1);
SELECT * FROM vt1, vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((load_extension(vt0.c0, vt1.c0), CAST(t0.c0 AS TEXT), vt1.c0)) AND ((x'', (+ (t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((load_extension(vt0.c0, vt1.c0), CAST(t0.c0 AS TEXT), vt1.c0)) AND ((x'', (+ (t0.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, vt0, t0 WHERE ((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((load_extension(vt0.c0, vt1.c0), CAST(t0.c0 AS TEXT), vt1.c0)) AND ((x'', (+ (t0.c0)), t0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((load_extension(vt0.c0, vt1.c0), CAST(t0.c0 AS TEXT), vt1.c0)) AND ((x'', (+ (t0.c0)), t0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT * FROM vt1, t0 WHERE (TYPEOF(DISTINCT ((vt1.c0) NOTNULL))) ORDER BY x'', ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY x'', ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (TYPEOF(DISTINCT ((vt1.c0) NOTNULL))) ORDER BY x'', ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT ((vt1.c0) NOTNULL))) IS TRUE)  as count FROM vt1, t0 ORDER BY x'', ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END) IS TRUE) ASC  NULLS LAST);
SELECT * FROM vt1, t0 WHERE (TYPEOF(DISTINCT ((vt1.c0) NOTNULL))) ORDER BY x'', ((CASE t0.c0  WHEN t0.c0 THEN vt1.c0 END) IS TRUE) ASC  NULLS LAST;
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c0 IN ()) IN ()) WHERE (IFNULL((~ (rt1.c0)), ((NULL)==(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((~ (rt1.c0)), ((NULL)=(t0.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((rt1.c0 IN ()) IN ()));
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c0 IN ()) IN ()) WHERE (IFNULL((~ (rt1.c0)), ((NULL)==(t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL((~ (rt1.c0)), ((NULL)=(t0.c0)))) IS TRUE)  as count FROM rt1 CROSS JOIN t0 ON ((rt1.c0 IN ()) IN ()));
SELECT * FROM rt1 CROSS JOIN t0 ON ((rt1.c0 IN ()) IN ()) WHERE (IFNULL((~ (rt1.c0)), ((NULL)==(t0.c0))));
SELECT * FROM vt0, vt1, rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB)) ORDER BY json_array(((rt1.c0)OR(rt1.c2)), CAST(rt1.c2 AS REAL)), rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY json_array(((rt1.c0)OR(rt1.c2)), CAST(rt1.c2 AS REAL)), rt1.c2 DESC  NULLS LAST);
SELECT * FROM vt0, vt1, rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB)) ORDER BY json_array(((rt1.c0)OR(rt1.c2)), CAST(rt1.c2 AS REAL)), rt1.c2 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c0 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM vt0, vt1, rt1 ORDER BY json_array(((rt1.c0)OR(rt1.c2)), CAST(rt1.c2 AS REAL)), rt1.c2 DESC  NULLS LAST);
SELECT * FROM vt0, vt1, rt1 WHERE (CAST(rt1.c0 COLLATE NOCASE AS BLOB)) ORDER BY json_array(((rt1.c0)OR(rt1.c2)), CAST(rt1.c2 AS REAL)), rt1.c2 DESC  NULLS LAST;
SELECT ALL * FROM vt1 INNER JOIN rt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))IS(((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))) CROSS JOIN vt0 ON ((((rt1.c0) NOT NULL))<<(((vt0.c0) ISNULL))) WHERE ((((- (NULL)))||(CASE WHEN NULL THEN -1.797846282E9 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))||(CASE WHEN NULL THEN -1.797846282E9 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))IS(((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))) CROSS JOIN vt0 ON ((((rt1.c0) NOT NULL))<<(((vt0.c0) ISNULL))));
SELECT ALL * FROM vt1 INNER JOIN rt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))IS(((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))) CROSS JOIN vt0 ON ((((rt1.c0) NOT NULL))<<(((vt0.c0) ISNULL))) WHERE ((((- (NULL)))||(CASE WHEN NULL THEN -1.797846282E9 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((- (NULL)))||(CASE WHEN NULL THEN -1.797846282E9 ELSE t0.c0 END))) IS TRUE)  as count FROM vt1 INNER JOIN rt1 ON vt1.c0 RIGHT OUTER JOIN t0 ON ((((t0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c2)))IS(((((rt1.c0)AND(rt1.c0)))OR(rt1.c2)))) CROSS JOIN vt0 ON ((((rt1.c0) NOT NULL))<<(((vt0.c0) ISNULL))));
SELECT ALL * FROM t0 WHERE (((t0.c0)/(((t0.c0) IS FALSE)))) ORDER BY (x'' IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)/(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (x'' IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((t0.c0)/(((t0.c0) IS FALSE)))) ORDER BY (x'' IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)/(((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0 ORDER BY (x'' IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL * FROM t0 WHERE (((t0.c0)/(((t0.c0) IS FALSE)))) ORDER BY (x'' IN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c1))%(CASE rt1.c0  WHEN '-1e500' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) WHERE (CASE ((rt1.c1)<(vt0.c0))  WHEN ((vt0.c0)GLOB(rt1.c2)) THEN (((vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, 0Xffffffff873f7dc6)) AND ((rt1.c0, rt1.c1, rt1.c1))) WHEN (NOT (NULL)) THEN 'my' COLLATE NOCASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) END) ORDER BY (((rt1.c0 IN ())) BETWEEN (CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END) AND (((rt1.c0)&(x'')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)<(vt0.c0))  WHEN ((vt0.c0)GLOB(rt1.c2)) THEN (((vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, 0xffffffff873f7dc6)) AND ((rt1.c0, rt1.c1, rt1.c1))) WHEN (NOT (NULL)) THEN 'my' COLLATE NOCASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c1))%(CASE rt1.c0  WHEN '-1e500' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) ORDER BY (((rt1.c0 IN ())) BETWEEN (CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END) AND (((rt1.c0)&(x'')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c1))%(CASE rt1.c0  WHEN '-1e500' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) WHERE (CASE ((rt1.c1)<(vt0.c0))  WHEN ((vt0.c0)GLOB(rt1.c2)) THEN (((vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, 0Xffffffff873f7dc6)) AND ((rt1.c0, rt1.c1, rt1.c1))) WHEN (NOT (NULL)) THEN 'my' COLLATE NOCASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) END) ORDER BY (((rt1.c0 IN ())) BETWEEN (CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END) AND (((rt1.c0)&(x'')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1)<(vt0.c0))  WHEN ((vt0.c0)GLOB(rt1.c2)) THEN (((vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, 0xffffffff873f7dc6)) AND ((rt1.c0, rt1.c1, rt1.c1))) WHEN (NOT (NULL)) THEN 'my' COLLATE NOCASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM vt0, vt1 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c1))%(CASE rt1.c0  WHEN '-1e500' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) ORDER BY (((rt1.c0 IN ())) BETWEEN (CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END) AND (((rt1.c0)&(x'')))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt1 CROSS JOIN rt1 ON ((TYPEOF(DISTINCT rt1.c1))%(CASE rt1.c0  WHEN '-1e500' THEN rt1.c2 WHEN vt0.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)) WHERE (CASE ((rt1.c1)<(vt0.c0))  WHEN ((vt0.c0)GLOB(rt1.c2)) THEN (((vt0.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c0, vt1.c0, 0Xffffffff873f7dc6)) AND ((rt1.c0, rt1.c1, rt1.c1))) WHEN (NOT (NULL)) THEN 'my' COLLATE NOCASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c0) ISNULL) END) ORDER BY (((rt1.c0 IN ())) BETWEEN (CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN vt0.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 ELSE vt0.c0 END) AND (((rt1.c0)&(x'')))) ASC  NULLS FIRST;
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) IN ()) FULL OUTER JOIN rt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) WHERE (((((rt1.c0) ISNULL))IS((((t0.c0, vt0.c0, rt1.c2))<((t0.c0, rt1.c0, t0.c0)))))) ORDER BY LIKE((((vt1.c0)) BETWEEN ((rt1.c1)) AND ((x'84b7'))), rt1.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) ISNULL))IS((((t0.c0, vt0.c0, rt1.c2))<((t0.c0, rt1.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) IN ()) FULL OUTER JOIN rt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) ORDER BY LIKE((((vt1.c0)) BETWEEN ((rt1.c1)) AND ((x'84b7'))), rt1.c2) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) IN ()) FULL OUTER JOIN rt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) WHERE (((((rt1.c0) ISNULL))IS((((t0.c0, vt0.c0, rt1.c2))<((t0.c0, rt1.c0, t0.c0)))))) ORDER BY LIKE((((vt1.c0)) BETWEEN ((rt1.c1)) AND ((x'84b7'))), rt1.c2) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) ISNULL))IS((((t0.c0, vt0.c0, rt1.c2))<((t0.c0, rt1.c0, t0.c0)))))) IS TRUE)  as count FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) IN ()) FULL OUTER JOIN rt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) ORDER BY LIKE((((vt1.c0)) BETWEEN ((rt1.c1)) AND ((x'84b7'))), rt1.c2) DESC  NULLS FIRST);
SELECT * FROM vt1, t0 LEFT OUTER JOIN vt0 ON ((((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt0.c0))) IN ()) FULL OUTER JOIN rt1 ON CAST(vt1.c0 COLLATE RTRIM AS REAL) WHERE (((((rt1.c0) ISNULL))IS((((t0.c0, vt0.c0, rt1.c2))<((t0.c0, rt1.c0, t0.c0)))))) ORDER BY LIKE((((vt1.c0)) BETWEEN ((rt1.c1)) AND ((x'84b7'))), rt1.c2) DESC  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS REAL))>(CAST(vt0.c0 AS INTEGER)))) ORDER BY 5.46870625E8 ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(CAST(vt0.c0 AS INTEGER))))AND((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 5.46870625E8 ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(CAST(vt0.c0 AS INTEGER))))AND((rt1.c2 IN ()))) ASC);
SELECT * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS REAL))>(CAST(vt0.c0 AS INTEGER)))) ORDER BY 5.46870625E8 ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(CAST(vt0.c0 AS INTEGER))))AND((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS REAL))>(CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY 5.46870625E8 ASC  NULLS FIRST, ((((((rt1.c2) IS TRUE))AND(CAST(vt0.c0 AS INTEGER))))AND((rt1.c2 IN ()))) ASC);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((rt1.c1 IN ()) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((vt1.c0)AND(QUOTE(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)AND(QUOTE(rt1.c0)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((vt1.c0)AND(QUOTE(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((vt1.c0)AND(QUOTE(rt1.c0)))) IS TRUE)  as count FROM rt1, vt1);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((vt1.c0)AND(QUOTE(rt1.c0))));
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((x'')) AND ((0xffffffffb35a2cb4))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((0xffffffffb35a2cb4)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((x'')) AND ((0xffffffffb35a2cb4))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((x'')) AND ((0xffffffffb35a2cb4)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((x'')) AND ((0xffffffffb35a2cb4))));
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN UPPER(vt1.c0) ELSE 0.5303012197976719 END  NULLS FIRST, (((NOT (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN UPPER(vt1.c0) ELSE 0.5303012197976719 END  NULLS FIRST, (((NOT (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN UPPER(vt1.c0) ELSE 0.5303012197976719 END  NULLS FIRST, (((NOT (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN UPPER(vt1.c0) ELSE 0.5303012197976719 END  NULLS FIRST, (((NOT (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC);
SELECT * FROM vt1, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (vt1.c0) AND (vt1.c0))) ORDER BY CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN UPPER(vt1.c0) ELSE 0.5303012197976719 END  NULLS FIRST, (((NOT (vt1.c0))) BETWEEN (vt0.c0) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC;
SELECT ALL * FROM rt1, vt1, t0 WHERE (highlight(((rt1.c1)>>(rt1.c0)), ((vt1.c0) ISNULL), (((vt1.c0, vt1.c0, rt1.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))), CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((highlight(((rt1.c1)>>(rt1.c0)), ((vt1.c0) ISNULL), (((vt1.c0, vt1.c0, rt1.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))), CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT ALL * FROM rt1, vt1, t0 WHERE (highlight(((rt1.c1)>>(rt1.c0)), ((vt1.c0) ISNULL), (((vt1.c0, vt1.c0, rt1.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))), CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((highlight(((rt1.c1)>>(rt1.c0)), ((vt1.c0) ISNULL), (((vt1.c0, vt1.c0, rt1.c0)) BETWEEN ((NULL, t0.c0, t0.c0)) AND ((rt1.c2, rt1.c1, rt1.c0))), CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM rt1, vt1, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((' 8ssV6㢵')IS(((t0.c0)-(t0.c0))))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))), CASE WHEN (NOT (-9.76535848E8)) THEN vt0.c0 COLLATE BINARY ELSE INSTR(t0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((' 8ssV6㢵')IS(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))), CASE WHEN (NOT (-9.76535848E8)) THEN vt0.c0 COLLATE BINARY ELSE INSTR(t0.c0, vt0.c0) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((' 8ssV6㢵')IS(((t0.c0)-(t0.c0))))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))), CASE WHEN (NOT (-9.76535848E8)) THEN vt0.c0 COLLATE BINARY ELSE INSTR(t0.c0, vt0.c0) END;
SELECT SUM(count) FROM (SELECT ALL ((((' 8ssV6㢵')IS(((t0.c0)-(t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))), CASE WHEN (NOT (-9.76535848E8)) THEN vt0.c0 COLLATE BINARY ELSE INSTR(t0.c0, vt0.c0) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (((' 8ssV6㢵')IS(((t0.c0)-(t0.c0))))) ORDER BY (vt0.c0 COLLATE RTRIM IN ()), (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER), (vt0.c0 IN ()), CAST(vt0.c0 AS BLOB))) AND ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)), CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END, CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))), CASE WHEN (NOT (-9.76535848E8)) THEN vt0.c0 COLLATE BINARY ELSE INSTR(t0.c0, vt0.c0) END;
SELECT ALL * FROM vt0 WHERE ((NOT (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (TRIM(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((NOT (TRIM(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (TRIM(vt0.c0))));
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c0 AS NUMERIC) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(rt1.c0 AS NUMERIC) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt1 ON (((vt0.c0 IN ())) NOT BETWEEN ((((rt1.c0, vt1.c0, rt1.c0))<((rt1.c1, rt1.c1, NULL)))) AND (((rt1.c2) NOTNULL))) WHERE (x'') ORDER BY CASE WHEN 0.3622968387077069 COLLATE RTRIM THEN CAST(rt1.c1 AS REAL) END ASC  NULLS FIRST, ((((CAST(rt1.c2 AS TEXT))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, vt1 CROSS JOIN rt1 ON (((vt0.c0 IN ())) NOT BETWEEN ((((rt1.c0, vt1.c0, rt1.c0))<((rt1.c1, rt1.c1, NULL)))) AND (((rt1.c2) NOTNULL))) ORDER BY CASE WHEN 0.3622968387077069 COLLATE RTRIM THEN CAST(rt1.c1 AS REAL) END ASC  NULLS FIRST, ((((CAST(rt1.c2 AS TEXT))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, rt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt1 ON (((vt0.c0 IN ())) NOT BETWEEN ((((rt1.c0, vt1.c0, rt1.c0))<((rt1.c1, rt1.c1, NULL)))) AND (((rt1.c2) NOTNULL))) WHERE (x'') ORDER BY CASE WHEN 0.3622968387077069 COLLATE RTRIM THEN CAST(rt1.c1 AS REAL) END ASC  NULLS FIRST, ((((CAST(rt1.c2 AS TEXT))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, rt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, t0, vt1 CROSS JOIN rt1 ON (((vt0.c0 IN ())) NOT BETWEEN ((((rt1.c0, vt1.c0, rt1.c0))<((rt1.c1, rt1.c1, NULL)))) AND (((rt1.c2) NOTNULL))) ORDER BY CASE WHEN 0.3622968387077069 COLLATE RTRIM THEN CAST(rt1.c1 AS REAL) END ASC  NULLS FIRST, ((((CAST(rt1.c2 AS TEXT))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, rt1.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, t0, vt1 CROSS JOIN rt1 ON (((vt0.c0 IN ())) NOT BETWEEN ((((rt1.c0, vt1.c0, rt1.c0))<((rt1.c1, rt1.c1, NULL)))) AND (((rt1.c2) NOTNULL))) WHERE (x'') ORDER BY CASE WHEN 0.3622968387077069 COLLATE RTRIM THEN CAST(rt1.c1 AS REAL) END ASC  NULLS FIRST, ((((CAST(rt1.c2 AS TEXT))OR(vt1.c0 COLLATE RTRIM)))AND(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))))  NULLS FIRST, rt1.c0 DESC;
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL * FROM vt1, rt1, vt0, t0 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)==(vt1.c0))) ORDER BY json_valid(vt1.c0) DESC  NULLS LAST, ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)=(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY json_valid(vt1.c0) DESC  NULLS LAST, ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)==(vt1.c0))) ORDER BY json_valid(vt1.c0) DESC  NULLS LAST, ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt1.c0)=(vt1.c0))) IS TRUE)  as count FROM vt1 ORDER BY json_valid(vt1.c0) DESC  NULLS LAST, ((NULL) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0)==(vt1.c0))) ORDER BY json_valid(vt1.c0) DESC  NULLS LAST, ((NULL) IS TRUE) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, t0, rt1 INNER JOIN vt1 ON CASE WHEN rt1.c2 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (NULL) AND (rt1.c1)) ELSE CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END END WHERE (((NULL) BETWEEN (TRIM(vt0.c0, rt1.c2)) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0.15680078964139565)))))) ORDER BY (((rt1.c1, rt1.c2, vt0.c0))>=((rt1.c2, rt1.c1, rt1.c0))) COLLATE NOCASE DESC, (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (TRIM(vt0.c0, rt1.c2)) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0.15680078964139565)))))) IS TRUE)  as count FROM vt0, t0, rt1 INNER JOIN vt1 ON CASE WHEN rt1.c2 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (NULL) AND (rt1.c1)) ELSE CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END END ORDER BY (((rt1.c1, rt1.c2, vt0.c0))>=((rt1.c2, rt1.c1, rt1.c0))) COLLATE NOCASE DESC, (NULL IN ())  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt1 INNER JOIN vt1 ON CASE WHEN rt1.c2 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (NULL) AND (rt1.c1)) ELSE CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END END WHERE (((NULL) BETWEEN (TRIM(vt0.c0, rt1.c2)) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0.15680078964139565)))))) ORDER BY (((rt1.c1, rt1.c2, vt0.c0))>=((rt1.c2, rt1.c1, rt1.c0))) COLLATE NOCASE DESC, (NULL IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (TRIM(vt0.c0, rt1.c2)) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0.15680078964139565)))))) IS TRUE)  as count FROM vt0, t0, rt1 INNER JOIN vt1 ON CASE WHEN rt1.c2 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (NULL) AND (rt1.c1)) ELSE CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END END ORDER BY (((rt1.c1, rt1.c2, vt0.c0))>=((rt1.c2, rt1.c1, rt1.c0))) COLLATE NOCASE DESC, (NULL IN ())  NULLS LAST);
SELECT ALL * FROM vt0, t0, rt1 INNER JOIN vt1 ON CASE WHEN rt1.c2 COLLATE RTRIM THEN ((vt1.c0) BETWEEN (NULL) AND (rt1.c1)) ELSE CASE t0.c0  WHEN rt1.c1 THEN rt1.c1 ELSE vt0.c0 END END WHERE (((NULL) BETWEEN (TRIM(vt0.c0, rt1.c2)) AND ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((0.15680078964139565)))))) ORDER BY (((rt1.c1, rt1.c2, vt0.c0))>=((rt1.c2, rt1.c1, rt1.c0))) COLLATE NOCASE DESC, (NULL IN ())  NULLS LAST;
SELECT * FROM vt0, t0, rt1, vt1 NOT INDEXED WHERE (((rt1.c1) NOT BETWEEN ('1462446079') AND ((((vt0.c0))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN ('1462446079') AND ((((vt0.c0))=((vt1.c0)))))) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT * FROM vt0, t0, rt1, vt1 NOT INDEXED WHERE (((rt1.c1) NOT BETWEEN ('1462446079') AND ((((vt0.c0))==((vt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c1) NOT BETWEEN ('1462446079') AND ((((vt0.c0))=((vt1.c0)))))) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT * FROM vt0, t0, rt1, vt1 NOT INDEXED WHERE (((rt1.c1) NOT BETWEEN ('1462446079') AND ((((vt0.c0))==((vt1.c0))))));
SELECT COUNT(*) FROM vt1 WHERE ((((('') NOTNULL)) BETWEEN (((x'')==(vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOTNULL)) BETWEEN (((x'')=(vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((('') NOTNULL)) BETWEEN (((x'')==(vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((('') NOTNULL)) BETWEEN (((x'')=(vt1.c0))) AND ((vt1.c0 IN ())))) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE ((((('') NOTNULL)) BETWEEN (((x'')==(vt1.c0))) AND ((vt1.c0 IN ()))));
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN ()) COLLATE BINARY COLLATE BINARY WHERE (((((MAX(vt1.c0, t0.c0))AND((vt1.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((MAX(vt1.c0, t0.c0))AND((vt1.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN ()) COLLATE BINARY COLLATE BINARY ORDER BY vt0.c0 ASC);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN ()) COLLATE BINARY COLLATE BINARY WHERE (((((MAX(vt1.c0, t0.c0))AND((vt1.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((MAX(vt1.c0, t0.c0))AND((vt1.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN ()) COLLATE BINARY COLLATE BINARY ORDER BY vt0.c0 ASC);
SELECT * FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (t0.c0 IN ()) COLLATE BINARY COLLATE BINARY WHERE (((((MAX(vt1.c0, t0.c0))AND((vt1.c0 IN ()))))OR(CASE vt1.c0  WHEN vt0.c0 THEN t0.c0 END))) ORDER BY vt0.c0 ASC;
SELECT * FROM vt0, rt1, vt1 WHERE (CAST('' AS NUMERIC)) ORDER BY ((((((((((((((rt1.c0)>(rt1.c1)))OR(LIKELIHOOD(vt1.c0, 0.008377278924616038))))AND(((vt1.c0) NOT BETWEEN (NULL) AND ('u7')))))AND(CAST(rt1.c1 AS TEXT))))AND((rt1.c1 IN (vt0.c0)))))OR(CAST(rt1.c0 AS BLOB))))OR((rt1.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((((((((((((rt1.c0)>(rt1.c1)))OR(LIKELIHOOD(vt1.c0, 0.008377278924616038))))AND(((vt1.c0) NOT BETWEEN (NULL) AND ('u7')))))AND(CAST(rt1.c1 AS TEXT))))AND((rt1.c1 IN (vt0.c0)))))OR(CAST(rt1.c0 AS BLOB))))OR((rt1.c2 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1 WHERE (CAST('' AS NUMERIC)) ORDER BY ((((((((((((((rt1.c0)>(rt1.c1)))OR(LIKELIHOOD(vt1.c0, 0.008377278924616038))))AND(((vt1.c0) NOT BETWEEN (NULL) AND ('u7')))))AND(CAST(rt1.c1 AS TEXT))))AND((rt1.c1 IN (vt0.c0)))))OR(CAST(rt1.c0 AS BLOB))))OR((rt1.c2 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS NUMERIC)) IS TRUE)  as count FROM vt0, rt1, vt1 ORDER BY ((((((((((((((rt1.c0)>(rt1.c1)))OR(LIKELIHOOD(vt1.c0, 0.008377278924616038))))AND(((vt1.c0) NOT BETWEEN (NULL) AND ('u7')))))AND(CAST(rt1.c1 AS TEXT))))AND((rt1.c1 IN (vt0.c0)))))OR(CAST(rt1.c0 AS BLOB))))OR((rt1.c2 IN ()))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1, vt1 WHERE (CAST('' AS NUMERIC)) ORDER BY ((((((((((((((rt1.c0)>(rt1.c1)))OR(LIKELIHOOD(vt1.c0, 0.008377278924616038))))AND(((vt1.c0) NOT BETWEEN (NULL) AND ('u7')))))AND(CAST(rt1.c1 AS TEXT))))AND((rt1.c1 IN (vt0.c0)))))OR(CAST(rt1.c0 AS BLOB))))OR((rt1.c2 IN ()))) DESC  NULLS FIRST;
SELECT * FROM vt1, vt0, t0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT * FROM vt1, vt0, t0, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM vt1, vt0, t0, rt1);
SELECT * FROM vt1, vt0, t0, rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN vt1 ON -2.58471968E8 CROSS JOIN vt0 ON 'u7' WHERE (((((((x'7ca5')IS NOT(vt0.c0)))OR(-7.31403549E8)))OR(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((x'7ca5')IS NOT(vt0.c0)))OR(-7.31403549E8)))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt1 ON -2.58471968E8 CROSS JOIN vt0 ON 'u7');
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN vt1 ON -2.58471968E8 CROSS JOIN vt0 ON 'u7' WHERE (((((((x'7ca5')IS NOT(vt0.c0)))OR(-7.31403549E8)))OR(((t0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((((x'7ca5')IS NOT(vt0.c0)))OR(-7.31403549E8)))OR(((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0, rt1 CROSS JOIN vt1 ON -2.58471968E8 CROSS JOIN vt0 ON 'u7');
SELECT ALL COUNT(*) FROM t0, rt1 CROSS JOIN vt1 ON -2.58471968E8 CROSS JOIN vt0 ON 'u7' WHERE (((((((x'7ca5')IS NOT(vt0.c0)))OR(-7.31403549E8)))OR(((t0.c0) NOT NULL))));
SELECT * FROM vt1 WHERE (UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (UNLIKELY(DISTINCT vt1.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((NOT (((((t0.c0)OR(t0.c0)))OR(t0.c0)))));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)OR(vt0.c0)) WHERE (TRIM(DISTINCT t0.c0 COLLATE NOCASE, TYPEOF(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c0 COLLATE NOCASE, TYPEOF(DISTINCT t0.c0))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)OR(vt0.c0)) WHERE (TRIM(DISTINCT t0.c0 COLLATE NOCASE, TYPEOF(DISTINCT t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT t0.c0 COLLATE NOCASE, TYPEOF(DISTINCT t0.c0))) IS TRUE)  as count FROM vt1, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)OR(vt0.c0)));
SELECT ALL COUNT(*) FROM vt1, t0 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE)OR(vt0.c0)) WHERE (TRIM(DISTINCT t0.c0 COLLATE NOCASE, TYPEOF(DISTINCT t0.c0)));
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)&((~ (rt1.c2))))) ORDER BY rt1.c1  NULLS LAST, (CAST(rt1.c2 AS TEXT) IN ())  NULLS FIRST, (((((NOT (rt1.c1)))OR(((rt1.c2) IS FALSE))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)&((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST, (CAST(rt1.c2 AS TEXT) IN ())  NULLS FIRST, (((((NOT (rt1.c1)))OR(((rt1.c2) IS FALSE))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)&((~ (rt1.c2))))) ORDER BY rt1.c1  NULLS LAST, (CAST(rt1.c2 AS TEXT) IN ())  NULLS FIRST, (((((NOT (rt1.c1)))OR(((rt1.c2) IS FALSE))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c2 COLLATE RTRIM)&((~ (rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c1  NULLS LAST, (CAST(rt1.c2 AS TEXT) IN ())  NULLS FIRST, (((((NOT (rt1.c1)))OR(((rt1.c2) IS FALSE))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE (((rt1.c2 COLLATE RTRIM)&((~ (rt1.c2))))) ORDER BY rt1.c1  NULLS LAST, (CAST(rt1.c2 AS TEXT) IN ())  NULLS FIRST, (((((NOT (rt1.c1)))OR(((rt1.c2) IS FALSE))))OR(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT * FROM vt1, rt1 WHERE (((((((((rt1.c2 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))AND(((rt1.c2)|(rt1.c1)))))OR((vt1.c0 IN (rt1.c0)))))OR(((rt1.c2) NOT BETWEEN (0.5988963406590396) AND (vt1.c0))))) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))AND(((rt1.c2)|(rt1.c1)))))OR((vt1.c0 IN (rt1.c0)))))OR(((rt1.c2) NOT BETWEEN (0.5988963406590396) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE DESC);
SELECT * FROM vt1, rt1 WHERE (((((((((rt1.c2 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))AND(((rt1.c2)|(rt1.c1)))))OR((vt1.c0 IN (rt1.c0)))))OR(((rt1.c2) NOT BETWEEN (0.5988963406590396) AND (vt1.c0))))) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((((((rt1.c2 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))AND(((rt1.c2)|(rt1.c1)))))OR((vt1.c0 IN (rt1.c0)))))OR(((rt1.c2) NOT BETWEEN (0.5988963406590396) AND (vt1.c0))))) IS TRUE)  as count FROM vt1, rt1 ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE DESC);
SELECT * FROM vt1, rt1 WHERE (((((((((rt1.c2 COLLATE NOCASE)OR(vt1.c0 COLLATE RTRIM)))AND(((rt1.c2)|(rt1.c1)))))OR((vt1.c0 IN (rt1.c0)))))OR(((rt1.c2) NOT BETWEEN (0.5988963406590396) AND (vt1.c0))))) ORDER BY CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE DESC;
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (CASE WHEN NULL THEN vt0.c0 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN ((vt1.c0)/(rt1.c2)) WHEN rt1.c2 THEN ((vt1.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt0.c0 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN ((vt1.c0)/(rt1.c2)) WHEN rt1.c2 THEN ((vt1.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (CASE WHEN NULL THEN vt0.c0 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN ((vt1.c0)/(rt1.c2)) WHEN rt1.c2 THEN ((vt1.c0)<=(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN NULL THEN vt0.c0 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN ((vt1.c0)/(rt1.c2)) WHEN rt1.c2 THEN ((vt1.c0)<=(vt0.c0)) END) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT ALL * FROM rt1, vt1, vt0, t0 WHERE (CASE WHEN NULL THEN vt0.c0 COLLATE RTRIM WHEN (~ (rt1.c2)) THEN ((vt1.c0)/(rt1.c2)) WHEN rt1.c2 THEN ((vt1.c0)<=(vt0.c0)) END);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN ()) WHERE (rt1.c1) ORDER BY (rt1.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN ()) ORDER BY (rt1.c1 IN ())  NULLS LAST);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN ()) WHERE (rt1.c1) ORDER BY (rt1.c1 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM t0, vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN ()) ORDER BY (rt1.c1 IN ())  NULLS LAST);
SELECT ALL * FROM t0, vt0 RIGHT OUTER JOIN rt1 ON ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) IN ()) WHERE (rt1.c1) ORDER BY (rt1.c1 IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((LENGTH(t0.c0))<=(HEX(DISTINCT 0.3372043699431958))));
SELECT SUM(count) FROM (SELECT ((((LENGTH(t0.c0))<=(HEX(DISTINCT 0.3372043699431958)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((LENGTH(t0.c0))<=(HEX(DISTINCT 0.3372043699431958))));
SELECT SUM(count) FROM (SELECT ((((LENGTH(t0.c0))<=(HEX(DISTINCT 0.3372043699431958)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((LENGTH(t0.c0))<=(HEX(DISTINCT 0.3372043699431958))));
SELECT ALL * FROM vt1 WHERE (MAX((NOT (vt1.c0)), ((vt1.c0)%(vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN 1.466252958E9 END DESC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX((NOT (vt1.c0)), ((vt1.c0)%(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN 1.466252958E9 END DESC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (MAX((NOT (vt1.c0)), ((vt1.c0)%(vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN 1.466252958E9 END DESC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((MAX((NOT (vt1.c0)), ((vt1.c0)%(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN 1.466252958E9 END DESC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt1 WHERE (MAX((NOT (vt1.c0)), ((vt1.c0)%(vt1.c0)))) ORDER BY CASE WHEN ((vt1.c0)>=(vt1.c0)) THEN 1.466252958E9 END DESC, vt1.c0 COLLATE NOCASE COLLATE RTRIM COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt1, rt1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM vt1, rt1);
SELECT COUNT(*) FROM vt1, rt1 WHERE (x'' COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE BINARY);
SELECT * FROM rt1 WHERE ((~ (COALESCE(DISTINCT rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (COALESCE(DISTINCT rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((~ (COALESCE(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((~ (COALESCE(DISTINCT rt1.c2, rt1.c0))));
SELECT COUNT(*) FROM rt1, t0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0 IN ()))/(((vt1.c0)|(rt1.c1)))) WHERE (HEX((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))=((vt1.c0, NULL, rt1.c1, '2038021862', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((vt1.c0, NULL, rt1.c1, '2038021862', vt1.c0))))) IS TRUE)  as count FROM rt1, t0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0 IN ()))/(((vt1.c0)|(rt1.c1)))));
SELECT COUNT(*) FROM rt1, t0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0 IN ()))/(((vt1.c0)|(rt1.c1)))) WHERE (HEX((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))=((vt1.c0, NULL, rt1.c1, '2038021862', vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))==((vt1.c0, NULL, rt1.c1, '2038021862', vt1.c0))))) IS TRUE)  as count FROM rt1, t0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0 IN ()))/(((vt1.c0)|(rt1.c1)))));
SELECT COUNT(*) FROM rt1, t0, vt1 LEFT OUTER JOIN vt0 ON (((vt1.c0 IN ()))/(((vt1.c0)|(rt1.c1)))) WHERE (HEX((((t0.c0, t0.c0, t0.c0, t0.c0, t0.c0))=((vt1.c0, NULL, rt1.c1, '2038021862', vt1.c0)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0)%(vt0.c0))))=((vt0.c0)))) ORDER BY ((vt0.c0 COLLATE RTRIM)<<((- (t0.c0))))  NULLS LAST, (((RTRIM(vt0.c0), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) ISNULL), ((vt0.c0) IS TRUE)))) DESC, ((((- (t0.c0))))==((((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)%(vt0.c0))))=((vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<<((- (t0.c0))))  NULLS LAST, (((RTRIM(vt0.c0), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) ISNULL), ((vt0.c0) IS TRUE)))) DESC, ((((- (t0.c0))))=((((t0.c0) NOTNULL)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0)%(vt0.c0))))=((vt0.c0)))) ORDER BY ((vt0.c0 COLLATE RTRIM)<<((- (t0.c0))))  NULLS LAST, (((RTRIM(vt0.c0), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) ISNULL), ((vt0.c0) IS TRUE)))) DESC, ((((- (t0.c0))))==((((t0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0)%(vt0.c0))))=((vt0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM)<<((- (t0.c0))))  NULLS LAST, (((RTRIM(vt0.c0), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) ISNULL), ((vt0.c0) IS TRUE)))) DESC, ((((- (t0.c0))))=((((t0.c0) NOTNULL)))));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((t0.c0)%(vt0.c0))))=((vt0.c0)))) ORDER BY ((vt0.c0 COLLATE RTRIM)<<((- (t0.c0))))  NULLS LAST, (((RTRIM(vt0.c0), (NOT (t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))))<((CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, ((t0.c0) ISNULL), ((vt0.c0) IS TRUE)))) DESC, ((((- (t0.c0))))==((((t0.c0) NOTNULL))));
SELECT * FROM rt1 WHERE ((('434746653') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('434746653') IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((('434746653') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((('434746653') IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((('434746653') IS FALSE));
SELECT ALL * FROM vt1, t0, rt1 WHERE (CAST((((NULL))!=((vt1.c0))) AS TEXT)) ORDER BY UPPER(CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 END) ASC  NULLS LAST, ((CAST(0.8562786284143822 AS BLOB))==(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL))!=((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, t0, rt1 ORDER BY UPPER(CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 END) ASC  NULLS LAST, ((CAST(0.8562786284143822 AS BLOB))==(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt1 WHERE (CAST((((NULL))!=((vt1.c0))) AS TEXT)) ORDER BY UPPER(CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 END) ASC  NULLS LAST, ((CAST(0.8562786284143822 AS BLOB))==(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((NULL))!=((vt1.c0))) AS TEXT)) IS TRUE)  as count FROM vt1, t0, rt1 ORDER BY UPPER(CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 END) ASC  NULLS LAST, ((CAST(0.8562786284143822 AS BLOB))==(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST);
SELECT ALL * FROM vt1, t0, rt1 WHERE (CAST((((NULL))!=((vt1.c0))) AS TEXT)) ORDER BY UPPER(CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 END) ASC  NULLS LAST, ((CAST(0.8562786284143822 AS BLOB))==(rt1.c0 COLLATE BINARY)) ASC  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE ((+ ((NOT (t0.c0))))) ORDER BY (((((((((0.6023563437952328)OR(x'0bb2')))AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c0))))) IS TRUE)  as count FROM vt1, rt1, t0, vt0 ORDER BY (((((((((0.6023563437952328)OR(x'0bb2')))AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE ((+ ((NOT (t0.c0))))) ORDER BY (((((((((0.6023563437952328)OR(x'0bb2')))AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t0.c0))))) IS TRUE)  as count FROM vt1, rt1, t0, vt0 ORDER BY (((((((((0.6023563437952328)OR(x'0bb2')))AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)) IN ()));
SELECT ALL * FROM vt1, rt1, t0, vt0 WHERE ((+ ((NOT (t0.c0))))) ORDER BY (((((((((0.6023563437952328)OR(x'0bb2')))AND(vt0.c0)))OR(t0.c0)))AND(vt1.c0)) IN ());
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) BETWEEN ((x'')) AND ((((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(x'')))OR(rt1.c1))))) FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN rt1 ON NULL WHERE (CAST((- (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) BETWEEN ((x'')) AND ((((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(x'')))OR(rt1.c1))))) FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN rt1 ON NULL);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) BETWEEN ((x'')) AND ((((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(x'')))OR(rt1.c1))))) FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN rt1 ON NULL WHERE (CAST((- (t0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t0.c0)) AS NUMERIC)) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (((rt1.c1)) BETWEEN ((x'')) AND ((((((((((vt1.c0)AND(rt1.c1)))OR(rt1.c1)))OR(x'')))OR(rt1.c1))))) FULL OUTER JOIN vt1 ON ((vt1.c0 COLLATE BINARY) NOTNULL) LEFT OUTER JOIN rt1 ON NULL);
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST(((((((((((((((((vt1.c0)OR(vt0.c0)))AND('-885532073')))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)) AS BLOB) WHERE (((((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST(((((((((((((((((vt1.c0)OR(vt0.c0)))AND('-885532073')))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)) AS BLOB) ORDER BY ((((t0.c0)<(t0.c0))) ISNULL));
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST(((((((((((((((((vt1.c0)OR(vt0.c0)))AND('-885532073')))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)) AS BLOB) WHERE (((((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT ((((((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST(((((((((((((((((vt1.c0)OR(vt0.c0)))AND('-885532073')))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)) AS BLOB) ORDER BY ((((t0.c0)<(t0.c0))) ISNULL));
SELECT * FROM t0, vt0 FULL OUTER JOIN vt1 ON CAST(((((((((((((((((vt1.c0)OR(vt0.c0)))AND('-885532073')))OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(t0.c0)) AS BLOB) WHERE (((((((((t0.c0)OR(vt0.c0)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) ORDER BY ((((t0.c0)<(t0.c0))) ISNULL);
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt1 WHERE (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE NOCASE) ORDER BY ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (vt1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE WHEN t0.c0 THEN '0.17656421988708937' END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE WHEN t0.c0 THEN '0.17656421988708937' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE WHEN t0.c0 THEN '0.17656421988708937' END));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE WHEN t0.c0 THEN '0.17656421988708937' END)));
SELECT ALL COUNT(*) FROM t0 WHERE (NULL) ORDER BY (((((t0.c0))<>((t0.c0)))) NOT BETWEEN (((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) AND (CASE WHEN t0.c0 THEN '0.17656421988708937' END));
SELECT * FROM t0, vt0, vt1 INNER JOIN rt1 ON ((TRIM(t0.c0, rt1.c0)) ISNULL) WHERE (TRIM((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((+ (vt0.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 INNER JOIN rt1 ON ((TRIM(t0.c0, rt1.c0)) ISNULL));
SELECT * FROM t0, vt0, vt1 INNER JOIN rt1 ON ((TRIM(t0.c0, rt1.c0)) ISNULL) WHERE (TRIM((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((+ (vt0.c0)))) IS TRUE)  as count FROM t0, vt0, vt1 INNER JOIN rt1 ON ((TRIM(t0.c0, rt1.c0)) ISNULL));
SELECT * FROM t0, vt0, vt1 INNER JOIN rt1 ON ((TRIM(t0.c0, rt1.c0)) ISNULL) WHERE (TRIM((+ (vt0.c0))));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((SQLITE_SOURCE_ID()) NOTNULL) WHERE ((((((((('-1138385049')OR((((vt1.c0))!=((t0.c0))))))AND((- (vt0.c0)))))OR(t0.c0)))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((('-1138385049')OR((((vt1.c0))<>((t0.c0))))))AND((- (vt0.c0)))))OR(t0.c0)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((SQLITE_SOURCE_ID()) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((SQLITE_SOURCE_ID()) NOTNULL) WHERE ((((((((('-1138385049')OR((((vt1.c0))!=((t0.c0))))))AND((- (vt0.c0)))))OR(t0.c0)))AND((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((((('-1138385049')OR((((vt1.c0))<>((t0.c0))))))AND((- (vt0.c0)))))OR(t0.c0)))AND((vt0.c0 IN ())))) IS TRUE)  as count FROM vt1, vt0 CROSS JOIN t0 ON ((SQLITE_SOURCE_ID()) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, vt0 CROSS JOIN t0 ON ((SQLITE_SOURCE_ID()) NOTNULL) WHERE ((((((((('-1138385049')OR((((vt1.c0))!=((t0.c0))))))AND((- (vt0.c0)))))OR(t0.c0)))AND((vt0.c0 IN ()))));
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c0 IN (rt1.c1))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) AND (CAST('J4糼Q镡V3A%' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt1.c1))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) AND (CAST('J4糼Q镡V3A%' AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c0 IN (rt1.c1))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) AND (CAST('J4糼Q镡V3A%' AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0 IN (rt1.c1))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) AND (CAST('J4糼Q镡V3A%' AS REAL)))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL * FROM t0, vt0, rt1 WHERE ((((t0.c0 IN (rt1.c1))) NOT BETWEEN (CASE t0.c0  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END) AND (CAST('J4糼Q镡V3A%' AS REAL))));
SELECT ALL * FROM rt1, vt1 WHERE ('-1927520310') ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1927520310') IS TRUE)  as count FROM rt1, vt1 NOT INDEXED ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE ('-1927520310') ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-1927520310') IS TRUE)  as count FROM rt1, vt1 NOT INDEXED ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE ('-1927520310') ORDER BY ((rt1.c2) IS TRUE) COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) COLLATE RTRIM;
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) ISNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((t0.c0) ISNULL)) NOTNULL));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (vt1.c0);
SELECT * FROM t0 WHERE (CAST(json_type(t0.c0) AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_type(t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0 WHERE (CAST(json_type(t0.c0) AS NUMERIC)) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_type(t0.c0) AS NUMERIC)) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS LAST);
SELECT * FROM vt1, rt1, vt0, t0 WHERE (CASE (vt0.c0 IN ())  WHEN ((rt1.c0)<=(NULL)) THEN load_extension(rt1.c2, t0.c0) END) ORDER BY ((((((((((vt0.c0)AND(rt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN (rt1.c2))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((rt1.c0)<=(NULL)) THEN load_extension(rt1.c2, t0.c0) END) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((((((((vt0.c0)AND(rt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN (rt1.c2))) AND (rt1.c0)));
SELECT * FROM vt1, rt1, vt0, t0 WHERE (CASE (vt0.c0 IN ())  WHEN ((rt1.c0)<=(NULL)) THEN load_extension(rt1.c2, t0.c0) END) ORDER BY ((((((((((vt0.c0)AND(rt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN (rt1.c2))) AND (rt1.c0));
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((rt1.c0)<=(NULL)) THEN load_extension(rt1.c2, t0.c0) END) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY ((((((((((vt0.c0)AND(rt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN (rt1.c2))) AND (rt1.c0)));
SELECT * FROM vt1, rt1, vt0, t0 WHERE (CASE (vt0.c0 IN ())  WHEN ((rt1.c0)<=(NULL)) THEN load_extension(rt1.c2, t0.c0) END) ORDER BY ((((((((((vt0.c0)AND(rt1.c0)))AND(t0.c0)))AND(vt0.c0)))OR(rt1.c1))) BETWEEN ((rt1.c2 IN (rt1.c2))) AND (rt1.c0));
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CASE WHEN (vt1.c0 IN (0.49189168923093185, rt1.c0)) THEN (((x''))>((x'9f78'))) ELSE (((rt1.c0))<=((NULL))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (0.49189168923093185, rt1.c0)) THEN (((x''))>((x'9f78'))) ELSE (((rt1.c0))<=((NULL))) END) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CASE WHEN (vt1.c0 IN (0.49189168923093185, rt1.c0)) THEN (((x''))>((x'9f78'))) ELSE (((rt1.c0))<=((NULL))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt1.c0 IN (0.49189168923093185, rt1.c0)) THEN (((x''))>((x'9f78'))) ELSE (((rt1.c0))<=((NULL))) END) IS TRUE)  as count FROM vt1, rt1);
SELECT ALL COUNT(*) FROM vt1, rt1 WHERE (CASE WHEN (vt1.c0 IN (0.49189168923093185, rt1.c0)) THEN (((x''))>((x'9f78'))) ELSE (((rt1.c0))<=((NULL))) END);
SELECT COUNT(*) FROM vt0 WHERE (CAST(rtreenode(vt0.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(vt0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(rtreenode(vt0.c0, vt0.c0) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rtreenode(vt0.c0, vt0.c0) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(rtreenode(vt0.c0, vt0.c0) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((CAST(x'' AS BLOB)) NOT BETWEEN (((t0.c0)LIKE(rt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN rt1.c2 END)) WHERE ((((~ (vt1.c0)))+(ABS(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))+(ABS(rt1.c0)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt1 ON ((CAST(x'' AS BLOB)) NOT BETWEEN (((t0.c0)LIKE(rt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((CAST(x'' AS BLOB)) NOT BETWEEN (((t0.c0)LIKE(rt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN rt1.c2 END)) WHERE ((((~ (vt1.c0)))+(ABS(rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt1.c0)))+(ABS(rt1.c0)))) IS TRUE)  as count FROM vt1, t0 CROSS JOIN rt1 ON ((CAST(x'' AS BLOB)) NOT BETWEEN (((t0.c0)LIKE(rt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM vt1, t0 CROSS JOIN rt1 ON ((CAST(x'' AS BLOB)) NOT BETWEEN (((t0.c0)LIKE(rt1.c0))) AND (CASE vt1.c0  WHEN t0.c0 THEN rt1.c2 END)) WHERE ((((~ (vt1.c0)))+(ABS(rt1.c0))));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((vt0.c0) NOT NULL) IN ((rt1.c1 IN (rt1.c2, t0.c0))))) ORDER BY json_array_length(rt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ((rt1.c1 IN (rt1.c2, t0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY json_array_length(rt1.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((vt0.c0) NOT NULL) IN ((rt1.c1 IN (rt1.c2, t0.c0))))) ORDER BY json_array_length(rt1.c1 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) NOT NULL) IN ((rt1.c1 IN (rt1.c2, t0.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY json_array_length(rt1.c1 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((vt0.c0) NOT NULL) IN ((rt1.c1 IN (rt1.c2, t0.c0))))) ORDER BY json_array_length(rt1.c1 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)) AS REAL) WHERE (rt1.c1) ORDER BY (((((((((((rt1.c1, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0)<<(vt0.c0)))))OR(((rt1.c0)||(rt1.c1)))))AND(((rt1.c2) BETWEEN (vt0.c0) AND ('1716106775')))))AND((('1471126453')>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)) AS REAL) ORDER BY (((((((((((rt1.c1, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0)<<(vt0.c0)))))OR(((rt1.c0)||(rt1.c1)))))AND(((rt1.c2) BETWEEN (vt0.c0) AND ('1716106775')))))AND((('1471126453')>=(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)) AS REAL) WHERE (rt1.c1) ORDER BY (((((((((((rt1.c1, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0)<<(vt0.c0)))))OR(((rt1.c0)||(rt1.c1)))))AND(((rt1.c2) BETWEEN (vt0.c0) AND ('1716106775')))))AND((('1471126453')>=(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)) AS REAL) ORDER BY (((((((((((rt1.c1, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0)<<(vt0.c0)))))OR(((rt1.c0)||(rt1.c1)))))AND(((rt1.c2) BETWEEN (vt0.c0) AND ('1716106775')))))AND((('1471126453')>=(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON CAST(((rt1.c0) BETWEEN (rt1.c1) AND (vt0.c0)) AS REAL) WHERE (rt1.c1) ORDER BY (((((((((((rt1.c1, rt1.c2, vt0.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((vt0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0)<<(vt0.c0)))))OR(((rt1.c0)||(rt1.c1)))))AND(((rt1.c2) BETWEEN (vt0.c0) AND ('1716106775')))))AND((('1471126453')>=(vt0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (NULL);
SELECT ALL * FROM vt1, t0 WHERE ('0.24046642144459418');
SELECT SUM(count) FROM (SELECT (('0.24046642144459418') IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ('0.24046642144459418');
SELECT SUM(count) FROM (SELECT (('0.24046642144459418') IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE ('0.24046642144459418');
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS INTEGER)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS INTEGER)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS INTEGER)) ORDER BY (~ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)) DESC;
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN ('812414318') AND (vt0.c0)), 0.6808667283649291)) ORDER BY ((((vt0.c0)<=(vt0.c0)))<<(((vt0.c0) ISNULL))), ((CAST(vt0.c0 AS NUMERIC))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (('')<=(json_remove(vt0.c0, NULL))), ((((vt0.c0 COLLATE BINARY)OR('-1551555629')))AND(((((vt0.c0)OR(vt0.c0)))OR(x'31c6')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0) NOT BETWEEN ('812414318') AND (vt0.c0)), 0.6808667283649291)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0)))<<(((vt0.c0) ISNULL))), ((CAST(vt0.c0 AS NUMERIC))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (('')<=(json_remove(vt0.c0, NULL))), ((((vt0.c0 COLLATE BINARY)OR('-1551555629')))AND(((((vt0.c0)OR(vt0.c0)))OR(x'31c6')))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) NOT BETWEEN ('812414318') AND (vt0.c0)), 0.6808667283649291)) ORDER BY ((((vt0.c0)<=(vt0.c0)))<<(((vt0.c0) ISNULL))), ((CAST(vt0.c0 AS NUMERIC))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (('')<=(json_remove(vt0.c0, NULL))), ((((vt0.c0 COLLATE BINARY)OR('-1551555629')))AND(((((vt0.c0)OR(vt0.c0)))OR(x'31c6')))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0) NOT BETWEEN ('812414318') AND (vt0.c0)), 0.6808667283649291)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<=(vt0.c0)))<<(((vt0.c0) ISNULL))), ((CAST(vt0.c0 AS NUMERIC))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS LAST, (('')<=(json_remove(vt0.c0, NULL))), ((((vt0.c0 COLLATE BINARY)OR('-1551555629')))AND(((((vt0.c0)OR(vt0.c0)))OR(x'31c6')))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((rt1.c0 COLLATE BINARY)|((+ (rt1.c2))))) ORDER BY '955037190' ASC  NULLS FIRST, ((((NOT (rt1.c1)), ((vt1.c0) IS FALSE), CAST(rt1.c0 AS NUMERIC)))>=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c1)IS(rt1.c0)), ((rt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY)|((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY '955037190' ASC  NULLS FIRST, ((((NOT (rt1.c1)), ((vt1.c0) IS FALSE), CAST(rt1.c0 AS NUMERIC)))>=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c1)IS(rt1.c0)), ((rt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((rt1.c0 COLLATE BINARY)|((+ (rt1.c2))))) ORDER BY '955037190' ASC  NULLS FIRST, ((((NOT (rt1.c1)), ((vt1.c0) IS FALSE), CAST(rt1.c0 AS NUMERIC)))>=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c1)IS(rt1.c0)), ((rt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE BINARY)|((+ (rt1.c2))))) IS TRUE)  as count FROM rt1, vt1 ORDER BY '955037190' ASC  NULLS FIRST, ((((NOT (rt1.c1)), ((vt1.c0) IS FALSE), CAST(rt1.c0 AS NUMERIC)))>=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c1)IS(rt1.c0)), ((rt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt1 WHERE (((rt1.c0 COLLATE BINARY)|((+ (rt1.c2))))) ORDER BY '955037190' ASC  NULLS FIRST, ((((NOT (rt1.c1)), ((vt1.c0) IS FALSE), CAST(rt1.c0 AS NUMERIC)))>=(((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))), ((rt1.c1)IS(rt1.c0)), ((rt1.c1) BETWEEN (vt1.c0) AND (vt1.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, rt1.c1)))))<>((CAST(t0.c0 AS REAL)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 END)&((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 END)&((+ (rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, rt1.c1)))))!=((CAST(t0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, rt1.c1)))))<>((CAST(t0.c0 AS REAL)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 END)&((+ (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 END)&((+ (rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, rt1.c1)))))!=((CAST(t0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM vt1 NOT INDEXED, rt1, t0 RIGHT OUTER JOIN vt0 ON ((((((vt0.c0, vt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c1)) AND ((vt0.c0, vt0.c0, rt1.c1)))))<>((CAST(t0.c0 AS REAL)))) WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN t0.c0 END)&((+ (rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (TRIM(DISTINCT '787962062', (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT '787962062', (t0.c0 IN ()))) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (TRIM(DISTINCT '787962062', (t0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT '787962062', (t0.c0 IN ()))) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (TRIM(DISTINCT '787962062', (t0.c0 IN ())));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((rt1.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c0 IN ())) NOT NULL));
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c0)LIKE(vt0.c0))) NOT BETWEEN (CHAR(vt0.c0)) AND (((rt1.c0) IS FALSE)))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))LIKE(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt0.c0))) NOT BETWEEN (CHAR(vt0.c0)) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))LIKE(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c0)LIKE(vt0.c0))) NOT BETWEEN (CHAR(vt0.c0)) AND (((rt1.c0) IS FALSE)))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))LIKE(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)LIKE(vt0.c0))) NOT BETWEEN (CHAR(vt0.c0)) AND (((rt1.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))LIKE(vt1.c0 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt1, vt0, vt1 WHERE (((((vt1.c0)LIKE(vt0.c0))) NOT BETWEEN (CHAR(vt0.c0)) AND (((rt1.c0) IS FALSE)))) ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c0)))LIKE(vt1.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt1, rt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0, t0 WHERE (((vt0.c0 COLLATE RTRIM) IS FALSE));
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY CASE (rt1.c0 IN ())  WHEN t0.c0 THEN rt1.c1 ELSE t0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CASE (rt1.c0 IN ())  WHEN t0.c0 THEN rt1.c1 ELSE t0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY CASE (rt1.c0 IN ())  WHEN t0.c0 THEN rt1.c1 ELSE t0.c0 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) ISNULL)) NOTNULL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY CASE (rt1.c0 IN ())  WHEN t0.c0 THEN rt1.c1 ELSE t0.c0 END  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0, rt1 WHERE (((((vt0.c0) ISNULL)) NOTNULL)) ORDER BY CASE (rt1.c0 IN ())  WHEN t0.c0 THEN rt1.c1 ELSE t0.c0 END  NULLS LAST;
SELECT ALL * FROM vt1, t0, rt1 INNER JOIN vt0 ON ((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY WHERE (vt0.c0) ORDER BY ((LOWER(DISTINCT vt1.c0)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c2))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, rt1 INNER JOIN vt0 ON ((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY ORDER BY ((LOWER(DISTINCT vt1.c0)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c2))) AND (NULL)) ASC);
SELECT ALL * FROM vt1, t0, rt1 INNER JOIN vt0 ON ((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY WHERE (vt0.c0) ORDER BY ((LOWER(DISTINCT vt1.c0)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c2))) AND (NULL)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt1, t0, rt1 INNER JOIN vt0 ON ((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY ORDER BY ((LOWER(DISTINCT vt1.c0)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c2))) AND (NULL)) ASC);
SELECT ALL * FROM vt1, t0, rt1 INNER JOIN vt0 ON ((((vt0.c0)OR(rt1.c0)))AND(rt1.c1)) COLLATE BINARY WHERE (vt0.c0) ORDER BY ((LOWER(DISTINCT vt1.c0)) NOT BETWEEN (((((vt0.c0)OR(rt1.c2)))OR(rt1.c2))) AND (NULL)) ASC;
SELECT ALL * FROM t0 INNER JOIN vt1 ON 'iCj(7똆' WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))  WHEN IFNULL(t0.c0, vt1.c0) THEN (t0.c0 IN (vt1.c0, t0.c0)) END) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))  WHEN IFNULL(t0.c0, vt1.c0) THEN (t0.c0 IN (vt1.c0, t0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON 'iCj(7똆' ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt1 ON 'iCj(7똆' WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))  WHEN IFNULL(t0.c0, vt1.c0) THEN (t0.c0 IN (vt1.c0, t0.c0)) END) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))  WHEN IFNULL(t0.c0, vt1.c0) THEN (t0.c0 IN (vt1.c0, t0.c0)) END) IS TRUE)  as count FROM t0 INNER JOIN vt1 ON 'iCj(7똆' ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST);
SELECT ALL * FROM t0 INNER JOIN vt1 ON 'iCj(7똆' WHERE (CASE ((vt1.c0) BETWEEN (vt1.c0) AND (t0.c0))  WHEN IFNULL(t0.c0, vt1.c0) THEN (t0.c0 IN (vt1.c0, t0.c0)) END) ORDER BY (t0.c0 COLLATE BINARY IN ())  NULLS FIRST;
SELECT * FROM vt0 WHERE ((('769173219')>>((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('769173219')>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('769173219')>>((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('769173219')>>((+ (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('769173219')>>((+ (vt0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)%(t0.c0)) THEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) ELSE CAST(t0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)%(t0.c0)) THEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) ELSE CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)%(t0.c0)) THEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) ELSE CAST(t0.c0 AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((t0.c0)%(t0.c0)) THEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) ELSE CAST(t0.c0 AS BLOB) END) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c0)%(t0.c0)) THEN COALESCE(t0.c0, t0.c0, t0.c0, t0.c0, t0.c0, t0.c0) ELSE CAST(t0.c0 AS BLOB) END);
SELECT * FROM vt0, t0, rt1, vt1 WHERE (LIKE(((vt0.c0)|(vt0.c0)), CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c0)|(vt0.c0)), CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT * FROM vt0, t0, rt1, vt1 WHERE (LIKE(((vt0.c0)|(vt0.c0)), CAST(t0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((vt0.c0)|(vt0.c0)), CAST(t0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0, rt1, vt1);
SELECT * FROM vt0, t0, rt1, vt1 WHERE (LIKE(((vt0.c0)|(vt0.c0)), CAST(t0.c0 AS TEXT)));
SELECT * FROM rt1, vt1, t0 WHERE (CASE WHEN TYPEOF(vt1.c0) THEN ((rt1.c1)IS NOT(vt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('')) END) ORDER BY LOWER(LTRIM(rt1.c2, rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(vt1.c0) THEN ((rt1.c1)IS NOT(vt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('')) END) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY LOWER(LTRIM(rt1.c2, rt1.c0))  NULLS LAST);
SELECT * FROM rt1, vt1, t0 WHERE (CASE WHEN TYPEOF(vt1.c0) THEN ((rt1.c1)IS NOT(vt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('')) END) ORDER BY LOWER(LTRIM(rt1.c2, rt1.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN TYPEOF(vt1.c0) THEN ((rt1.c1)IS NOT(vt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('')) END) IS TRUE)  as count FROM rt1, vt1, t0 ORDER BY LOWER(LTRIM(rt1.c2, rt1.c0))  NULLS LAST);
SELECT * FROM rt1, vt1, t0 WHERE (CASE WHEN TYPEOF(vt1.c0) THEN ((rt1.c1)IS NOT(vt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (rt1.c2) AND ('')) END) ORDER BY LOWER(LTRIM(rt1.c2, rt1.c0))  NULLS LAST;
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY ((CAST('447692266' AS NUMERIC)) BETWEEN ((~ (x''))) AND (((vt1.c0)>>('356948742'))));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((CAST('447692266' AS NUMERIC)) BETWEEN ((~ (x''))) AND (((vt1.c0)>>('356948742')))));
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY ((CAST('447692266' AS NUMERIC)) BETWEEN ((~ (x''))) AND (((vt1.c0)>>('356948742'))));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt1.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((CAST('447692266' AS NUMERIC)) BETWEEN ((~ (x''))) AND (((vt1.c0)>>('356948742')))));
SELECT ALL * FROM vt1, rt1, vt0 WHERE ((+ (vt1.c0)) COLLATE RTRIM) ORDER BY ((CAST('447692266' AS NUMERIC)) BETWEEN ((~ (x''))) AND (((vt1.c0)>>('356948742'))));
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, vt1 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((t0.c0)IS NOT(rt1.c2)), 0.46111321509654557) WHERE (CAST(x'' AS REAL)) ORDER BY ((((x'4539') BETWEEN (vt0.c0) AND (rt1.c2)))/((- (t0.c0))))  NULLS LAST, ((CASE WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE 9.30378855E8 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t0, rt1, vt1 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((t0.c0)IS NOT(rt1.c2)), 0.46111321509654557) ORDER BY ((((x'4539') BETWEEN (vt0.c0) AND (rt1.c2)))/((- (t0.c0))))  NULLS LAST, ((CASE WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE 9.30378855E8 END) ISNULL) DESC);
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, vt1 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((t0.c0)IS NOT(rt1.c2)), 0.46111321509654557) WHERE (CAST(x'' AS REAL)) ORDER BY ((((x'4539') BETWEEN (vt0.c0) AND (rt1.c2)))/((- (t0.c0))))  NULLS LAST, ((CASE WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE 9.30378855E8 END) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS REAL)) IS TRUE)  as count FROM t0, rt1, vt1 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((t0.c0)IS NOT(rt1.c2)), 0.46111321509654557) ORDER BY ((((x'4539') BETWEEN (vt0.c0) AND (rt1.c2)))/((- (t0.c0))))  NULLS LAST, ((CASE WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE 9.30378855E8 END) ISNULL) DESC);
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, vt1 LEFT OUTER JOIN vt0 ON LIKELIHOOD(DISTINCT ((t0.c0)IS NOT(rt1.c2)), 0.46111321509654557) WHERE (CAST(x'' AS REAL)) ORDER BY ((((x'4539') BETWEEN (vt0.c0) AND (rt1.c2)))/((- (t0.c0))))  NULLS LAST, ((CASE WHEN t0.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt1.c2 WHEN vt1.c0 THEN vt1.c0 ELSE 9.30378855E8 END) ISNULL) DESC;
SELECT ALL * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS REAL))OR(NULLIF(rt1.c2, rt1.c1))))OR(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS REAL))OR(NULLIF(rt1.c2, rt1.c1))))OR(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS REAL))OR(NULLIF(rt1.c2, rt1.c1))))OR(rt1.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt1.c2 AS REAL))OR(NULLIF(rt1.c2, rt1.c1))))OR(rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((((CAST(rt1.c2 AS REAL))OR(NULLIF(rt1.c2, rt1.c1))))OR(rt1.c0 COLLATE NOCASE)));
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((t0.c0 IN ()) AS NUMERIC)) IS TRUE)  as count FROM t0, vt1, vt0);
SELECT ALL * FROM t0, vt1, vt0 WHERE (CAST((t0.c0 IN ()) AS NUMERIC));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE)>=((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) CROSS JOIN rt1 ON ((((rt1.c1)<=(rt1.c2))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt1.c1)) FULL OUTER JOIN t0 ON t0.c0 WHERE (CASE WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c2)) THEN CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c1 END WHEN x'dac2' THEN rt1.c1 WHEN (vt0.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.2587745234350862)) ELSE vt0.c0 END) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(TIME(t0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c2)) THEN CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c1 END WHEN x'dac2' THEN rt1.c1 WHEN (vt0.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.2587745234350862)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE)>=((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) CROSS JOIN rt1 ON ((((rt1.c1)<=(rt1.c2))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt1.c1)) FULL OUTER JOIN t0 ON t0.c0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(TIME(t0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT * FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE)>=((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) CROSS JOIN rt1 ON ((((rt1.c1)<=(rt1.c2))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt1.c1)) FULL OUTER JOIN t0 ON t0.c0 WHERE (CASE WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c2)) THEN CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c1 END WHEN x'dac2' THEN rt1.c1 WHEN (vt0.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.2587745234350862)) ELSE vt0.c0 END) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(TIME(t0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((vt0.c0)OR(vt1.c0)))AND(rt1.c2)) THEN CASE WHEN NULL THEN rt1.c2 WHEN vt1.c0 THEN t0.c0 WHEN t0.c0 THEN rt1.c0 ELSE rt1.c1 END WHEN x'dac2' THEN rt1.c1 WHEN (vt0.c0 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (0.2587745234350862)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON ((vt1.c0 COLLATE NOCASE)>=((((rt1.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) CROSS JOIN rt1 ON ((((rt1.c1)<=(rt1.c2))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (rt1.c1)) FULL OUTER JOIN t0 ON t0.c0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(TIME(t0.c0, vt0.c0, rt1.c0))))AND(((rt1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY TRIM(DISTINCT ((vt0.c0)=(vt0.c0)), TYPEOF(DISTINCT vt0.c0))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) ASC  NULLS LAST, ((((NULL)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(LTRIM(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c0)==(vt0.c0)), TYPEOF(DISTINCT vt0.c0))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) ASC  NULLS LAST, ((((NULL)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(LTRIM(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY TRIM(DISTINCT ((vt0.c0)=(vt0.c0)), TYPEOF(DISTINCT vt0.c0))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) ASC  NULLS LAST, ((((NULL)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(LTRIM(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((vt0.c0)==(vt0.c0)), TYPEOF(DISTINCT vt0.c0))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) ASC  NULLS LAST, ((((NULL)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(LTRIM(vt0.c0))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ())) ORDER BY TRIM(DISTINCT ((vt0.c0)=(vt0.c0)), TYPEOF(DISTINCT vt0.c0))  NULLS LAST, CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS TEXT) ASC  NULLS LAST, ((((NULL)AND((vt0.c0 IN (vt0.c0, vt0.c0)))))OR(LTRIM(vt0.c0))) ASC;
SELECT COUNT(*) FROM rt1, vt1 NATURAL JOIN t0 WHERE (((CAST(NULL AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt1, vt1 NATURAL JOIN t0 WHERE (((CAST(NULL AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS TEXT)) NOT NULL)) IS TRUE)  as count FROM rt1, vt1 NATURAL JOIN t0);
SELECT COUNT(*) FROM rt1, vt1 NATURAL JOIN t0 WHERE (((CAST(NULL AS TEXT)) NOT NULL));
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(((t0.c0) NOT NULL))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))OR(((t0.c0) NOT NULL))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(((t0.c0) NOT NULL))))OR((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(t0.c0 AS REAL))OR(((t0.c0) NOT NULL))))OR((NOT (t0.c0))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((((CAST(t0.c0 AS REAL))OR(((t0.c0) NOT NULL))))OR((NOT (t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, t0 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, rt1, t0);
SELECT ALL COUNT(*) FROM vt0, vt1, rt1, t0 WHERE (vt1.c0);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c2) IS FALSE))-(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))-(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c2) IS FALSE))-(rt1.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) IS FALSE))-(rt1.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0, rt1);
SELECT ALL * FROM t0, rt1 WHERE (((((rt1.c2) IS FALSE))-(rt1.c1 COLLATE BINARY)));
SELECT * FROM t0, vt1 WHERE ((((CAST(t0.c0 AS TEXT)))<>(((('-1449050536')==(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))!=(((('-1449050536')=(t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((CAST(t0.c0 AS TEXT)))<>(((('-1449050536')==(t0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(t0.c0 AS TEXT)))!=(((('-1449050536')=(t0.c0)))))) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE ((((CAST(t0.c0 AS TEXT)))<>(((('-1449050536')==(t0.c0))))));
SELECT * FROM rt1 WHERE (((((('84696424') BETWEEN (NULL) AND (0.7878801366764046))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((('84696424') BETWEEN (NULL) AND (0.7878801366764046))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((('84696424') BETWEEN (NULL) AND (0.7878801366764046))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((('84696424') BETWEEN (NULL) AND (0.7878801366764046))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((('84696424') BETWEEN (NULL) AND (0.7878801366764046))))<=((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END))));
SELECT * FROM vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt1.c0)))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT (SQLITE_COMPILEOPTION_GET(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE);
SELECT * FROM vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt1.c0)))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((NOT (SQLITE_COMPILEOPTION_GET(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE);
SELECT * FROM vt1 WHERE ((NOT (SQLITE_COMPILEOPTION_GET(vt1.c0)))) ORDER BY (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND(TRIM(DISTINCT vt1.c0)))  NULLS FIRST, ((vt1.c0)=(vt1.c0)) COLLATE NOCASE;
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))>>(json(vt1.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<>(((0.08586176419826641) BETWEEN (vt1.c0) AND (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c0)))>>(json(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))!=(((0.08586176419826641) BETWEEN (vt1.c0) AND (NULL))))  NULLS FIRST);
SELECT ALL * FROM vt1 WHERE (((((vt1.c0)AND(vt1.c0)))>>(json(vt1.c0)))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))<>(((0.08586176419826641) BETWEEN (vt1.c0) AND (NULL))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)AND(vt1.c0)))>>(json(vt1.c0)))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))!=(((0.08586176419826641) BETWEEN (vt1.c0) AND (NULL))))  NULLS FIRST);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 NOT INDEXED WHERE (NULL);
SELECT COUNT(*) FROM t0, rt1 WHERE (('651537642' IN (UNICODE(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((('651537642' IN (UNICODE(rt1.c2)))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (('651537642' IN (UNICODE(rt1.c2))));
SELECT SUM(count) FROM (SELECT ((('651537642' IN (UNICODE(rt1.c2)))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (('651537642' IN (UNICODE(rt1.c2))));
SELECT ALL * FROM vt1, t0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt1.c0)))AND(NULL))) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(NULL))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)OR(vt1.c0)))AND(NULL))) IS TRUE)) IS TRUE)  as count FROM vt1, t0);
SELECT ALL * FROM vt1, t0 WHERE (((((((t0.c0)OR(vt1.c0)))AND(NULL))) IS TRUE));
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt1, t0, vt0);
SELECT ALL COUNT(*) FROM rt1, vt1, t0, vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN '8BL*{Z>趵' ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN '8BL*{Z>趵' ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN '8BL*{Z>趵' ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt1, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN '8BL*{Z>趵' ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (vt1.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN '8BL*{Z>趵' ELSE vt0.c0 END)) AND ((((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))  NULLS FIRST;
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c0)>(t0.c0)))OR(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))))OR((~ (t0.c0)))));
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)) RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE WHERE (load_extension((- (t0.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((- (t0.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)) RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE);
SELECT COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)) RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE WHERE (load_extension((- (t0.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))));
SELECT SUM(count) FROM (SELECT ((load_extension((- (t0.c0)), ((t0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (vt0.c0 COLLATE RTRIM IN (CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)) RIGHT OUTER JOIN vt1 ON NULL COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON json_remove((rt1.c2 IN ()), CAST(vt1.c0 AS TEXT), UPPER(vt0.c0), (('Z?HW')-(vt1.c0))) CROSS JOIN rt1 ON ((- (vt1.c0)) IN ((((('_')AND(rt1.c1)))AND(rt1.c1)), MAX(rt1.c1, rt1.c2))) WHERE ((((- (rt1.c1)))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))OR(rt1.c2))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON json_remove((rt1.c2 IN ()), CAST(vt1.c0 AS TEXT), UPPER(vt0.c0), (('Z?HW')-(vt1.c0))) CROSS JOIN rt1 ON ((- (vt1.c0)) IN ((((('_')AND(rt1.c1)))AND(rt1.c1)), MAX(rt1.c1, rt1.c2))));
SELECT COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON json_remove((rt1.c2 IN ()), CAST(vt1.c0 AS TEXT), UPPER(vt0.c0), (('Z?HW')-(vt1.c0))) CROSS JOIN rt1 ON ((- (vt1.c0)) IN ((((('_')AND(rt1.c1)))AND(rt1.c1)), MAX(rt1.c1, rt1.c2))) WHERE ((((- (rt1.c1)))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT (((((- (rt1.c1)))OR(rt1.c2))) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON json_remove((rt1.c2 IN ()), CAST(vt1.c0 AS TEXT), UPPER(vt0.c0), (('Z?HW')-(vt1.c0))) CROSS JOIN rt1 ON ((- (vt1.c0)) IN ((((('_')AND(rt1.c1)))AND(rt1.c1)), MAX(rt1.c1, rt1.c2))));
SELECT ALL * FROM vt0 NOT INDEXED WHERE (json_object(vt0.c0 COLLATE BINARY, ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_object(vt0.c0 COLLATE BINARY, ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 NOT INDEXED WHERE (json_object(vt0.c0 COLLATE BINARY, ((vt0.c0)%(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((json_object(vt0.c0 COLLATE BINARY, ((vt0.c0)%(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (UNLIKELY(vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (UNLIKELY(vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (UNLIKELY(vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt1.c0)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) IS TRUE)  as count FROM vt1 ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (UNLIKELY(vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt1 WHERE ((((vt1.c0)) NOT BETWEEN ((LOWER(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS REAL))))) ORDER BY ((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))) BETWEEN (UNLIKELY(vt1.c0)) AND (((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, vt1, vt0 WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, vt1, vt0 WHERE (((NOT (rt1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c2)) IN ())) IS TRUE)  as count FROM t0, rt1, vt1, vt0);
SELECT COUNT(*) FROM t0, rt1 NOT INDEXED, vt1, vt0 WHERE (((NOT (rt1.c2)) IN ()));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt1 ON (+ ((((rt1.c0, vt0.c0, t0.c0))>((rt1.c1, t0.c0, rt1.c0))))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt1 ON (+ ((((rt1.c0, vt0.c0, t0.c0))>((rt1.c1, t0.c0, rt1.c0))))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt1 ON (+ ((((rt1.c0, vt0.c0, t0.c0))>((rt1.c1, t0.c0, rt1.c0))))) WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM vt0, t0 RIGHT OUTER JOIN rt1 ON (+ ((((rt1.c0, vt0.c0, t0.c0))>((rt1.c1, t0.c0, rt1.c0))))));
SELECT COUNT(*) FROM vt0, t0 RIGHT OUTER JOIN rt1 ON (+ ((((rt1.c0, vt0.c0, t0.c0))>((rt1.c1, t0.c0, rt1.c0))))) WHERE (rt1.c1);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN vt1 ON (((rt1.c2)>=(rt1.c0)) IN ()) FULL OUTER JOIN vt0 ON ((((((((0.24586604601530127)OR(-2.65894464E8)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))) WHERE (((((vt0.c0)OR((+ (vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((+ (vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN vt1 ON (((rt1.c2)>=(rt1.c0)) IN ()) FULL OUTER JOIN vt0 ON ((((((((0.24586604601530127)OR(-2.65894464E8)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))) ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN vt1 ON (((rt1.c2)>=(rt1.c0)) IN ()) FULL OUTER JOIN vt0 ON ((((((((0.24586604601530127)OR(-2.65894464E8)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))) WHERE (((((vt0.c0)OR((+ (vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((+ (vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM rt1, t0 RIGHT OUTER JOIN vt1 ON (((rt1.c2)>=(rt1.c0)) IN ()) FULL OUTER JOIN vt0 ON ((((((((0.24586604601530127)OR(-2.65894464E8)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))) ORDER BY vt1.c0 DESC);
SELECT ALL COUNT(*) FROM rt1, t0 RIGHT OUTER JOIN vt1 ON (((rt1.c2)>=(rt1.c0)) IN ()) FULL OUTER JOIN vt0 ON ((((((((0.24586604601530127)OR(-2.65894464E8)))AND(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND(CAST(vt0.c0 AS INTEGER))))OR((vt0.c0 IN ()))) WHERE (((((vt0.c0)OR((+ (vt1.c0)))))AND(((rt1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY vt1.c0 DESC;
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE (((CAST(rt1.c2 AS INTEGER))*(((rt1.c0) NOTNULL)))) ORDER BY CAST(((((((((vt1.c0)AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(t0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))*(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY CAST(((((((((vt1.c0)AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(t0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE (((CAST(rt1.c2 AS INTEGER))*(((rt1.c0) NOTNULL)))) ORDER BY CAST(((((((((vt1.c0)AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(t0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))*(((rt1.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY CAST(((((((((vt1.c0)AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(t0.c0)) AS TEXT) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE (((CAST(rt1.c2 AS INTEGER))*(((rt1.c0) NOTNULL)))) ORDER BY CAST(((((((((vt1.c0)AND(vt0.c0)))OR(rt1.c1)))AND(rt1.c1)))OR(t0.c0)) AS TEXT) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) AND ((NULL)))) ORDER BY (('Z?HW') BETWEEN (((((((((((((t0.c0)AND(x'5c0b')))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) AND ((~ (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (('Z?HW') BETWEEN (((((((((((((t0.c0)AND(x'5c0b')))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) AND ((~ (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) AND ((NULL)))) ORDER BY (('Z?HW') BETWEEN (((((((((((((t0.c0)AND(x'5c0b')))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) AND ((~ (t0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) AND ((NULL)))) IS TRUE)  as count FROM vt0, t0, vt1 ORDER BY (('Z?HW') BETWEEN (((((((((((((t0.c0)AND(x'5c0b')))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) AND ((~ (t0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0, vt1 WHERE ((((vt1.c0)) BETWEEN ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))) AND ((NULL)))) ORDER BY (('Z?HW') BETWEEN (((((((((((((t0.c0)AND(x'5c0b')))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))AND(vt1.c0))) AND ((~ (t0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((t0.c0)||(t0.c0)))))AND((+ (vt0.c0)))))OR((vt0.c0 IN (vt0.c0, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((t0.c0)||(t0.c0)))))AND((+ (vt0.c0)))))OR((vt0.c0 IN (vt0.c0, t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((t0.c0)||(t0.c0)))))AND((+ (vt0.c0)))))OR((vt0.c0 IN (vt0.c0, t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((t0.c0)||(t0.c0)))))AND((+ (vt0.c0)))))OR((vt0.c0 IN (vt0.c0, t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) ORDER BY ((((((((t0.c0 COLLATE BINARY)OR(((((t0.c0)OR(vt0.c0)))OR(vt0.c0)))))OR(((t0.c0)||(t0.c0)))))AND((+ (vt0.c0)))))OR((vt0.c0 IN (vt0.c0, t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE ((((rt1.c2, NULL, x'fda4'))==((NULL, t0.c0, rt1.c2))) COLLATE RTRIM) ORDER BY (((rt1.c0))!=(('1574067163'))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, NULL, x'fda4'))==((NULL, t0.c0, rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt1 ORDER BY (((rt1.c0))!=(('1574067163'))) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE ((((rt1.c2, NULL, x'fda4'))==((NULL, t0.c0, rt1.c2))) COLLATE RTRIM) ORDER BY (((rt1.c0))!=(('1574067163'))) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((rt1.c2, NULL, x'fda4'))==((NULL, t0.c0, rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM vt1, t0, rt1 ORDER BY (((rt1.c0))!=(('1574067163'))) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt1, t0, rt1 WHERE ((((rt1.c2, NULL, x'fda4'))==((NULL, t0.c0, rt1.c2))) COLLATE RTRIM) ORDER BY (((rt1.c0))!=(('1574067163'))) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0 IN (t0.c0))))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), 0x75476332, t0.c0 COLLATE RTRIM)) AND ((((t0.c0)||(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (7.47681192E8)), x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN (t0.c0))))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), 0x75476332, t0.c0 COLLATE RTRIM)) AND ((((t0.c0)||(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (7.47681192E8)), x''))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0 IN (t0.c0))))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), 0x75476332, t0.c0 COLLATE RTRIM)) AND ((((t0.c0)||(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (7.47681192E8)), x''))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN (t0.c0))))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), 0x75476332, t0.c0 COLLATE RTRIM)) AND ((((t0.c0)||(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (7.47681192E8)), x''))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0 IN (t0.c0))))==((((((t0.c0)AND(t0.c0)))OR(t0.c0)))))) ORDER BY (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN (((t0.c0 IN ()), 0x75476332, t0.c0 COLLATE RTRIM)) AND ((((t0.c0)||(t0.c0)), ((t0.c0) BETWEEN (t0.c0) AND (7.47681192E8)), x''))) ASC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((x'')AND(t0.c0)))AND(vt0.c0)))<(((t0.c0) ISNULL))) WHERE (('' IN ()) COLLATE RTRIM) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('-4㼈VaᴏcW')))  NULLS FIRST, (((- (t0.c0)))<<((~ (vt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((('' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((x'')AND(t0.c0)))AND(vt0.c0)))<(((t0.c0) ISNULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('-4㼈VaᴏcW')))  NULLS FIRST, (((- (t0.c0)))<<((~ (vt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((x'')AND(t0.c0)))AND(vt0.c0)))<(((t0.c0) ISNULL))) WHERE (('' IN ()) COLLATE RTRIM) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('-4㼈VaᴏcW')))  NULLS FIRST, (((- (t0.c0)))<<((~ (vt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((('' IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON ((((((x'')AND(t0.c0)))AND(vt0.c0)))<(((t0.c0) ISNULL))) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('-4㼈VaᴏcW')))  NULLS FIRST, (((- (t0.c0)))<<((~ (vt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON ((((((x'')AND(t0.c0)))AND(vt0.c0)))<(((t0.c0) ISNULL))) WHERE (('' IN ()) COLLATE RTRIM) ORDER BY (((t0.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) AND (('-4㼈VaᴏcW')))  NULLS FIRST, (((- (t0.c0)))<<((~ (vt0.c0)))), CAST(((((vt0.c0)OR(t0.c0)))AND(vt0.c0)) AS BLOB);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt1);
SELECT COUNT(*) FROM vt1 WHERE (((vt1.c0) IS FALSE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) ISNULL));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END) ISNULL));
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULL) ORDER BY ((((((((UPPER(rt1.c1))OR((- (t0.c0)))))AND(((t0.c0)%('>D')))))OR(rt1.c1)))OR((- (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((UPPER(rt1.c1))OR((- (t0.c0)))))AND(((t0.c0)%('>D')))))OR(rt1.c1)))OR((- (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULL) ORDER BY ((((((((UPPER(rt1.c1))OR((- (t0.c0)))))AND(((t0.c0)%('>D')))))OR(rt1.c1)))OR((- (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1 ORDER BY ((((((((UPPER(rt1.c1))OR((- (t0.c0)))))AND(((t0.c0)%('>D')))))OR(rt1.c1)))OR((- (rt1.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, rt1 WHERE (NULL) ORDER BY ((((((((UPPER(rt1.c1))OR((- (t0.c0)))))AND(((t0.c0)%('>D')))))OR(rt1.c1)))OR((- (rt1.c2))))  NULLS FIRST;
SELECT ALL * FROM vt1, vt0, rt1 FULL OUTER JOIN t0 ON NULL WHERE ((NOT ((((rt1.c1))<((rt1.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt1.c1))<((rt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1 FULL OUTER JOIN t0 ON NULL ORDER BY t0.c0);
SELECT ALL * FROM vt1, vt0, rt1 FULL OUTER JOIN t0 ON NULL WHERE ((NOT ((((rt1.c1))<((rt1.c0)))))) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((rt1.c1))<((rt1.c0)))))) IS TRUE)  as count FROM vt1, vt0, rt1 FULL OUTER JOIN t0 ON NULL ORDER BY t0.c0);
SELECT ALL * FROM vt1, vt0, rt1 FULL OUTER JOIN t0 ON NULL WHERE ((NOT ((((rt1.c1))<((rt1.c0)))))) ORDER BY t0.c0;
SELECT * FROM rt1, vt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((rt1.c1 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 IN ())) IS TRUE)  as count FROM rt1, vt1);
SELECT * FROM rt1, vt1 WHERE ((rt1.c1 IN ()));
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (((x'2f26', vt1.c0, vt1.c0)) NOT BETWEEN ((x'900faac6', 0x3df1da9b, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN (((x'2f26', vt1.c0, vt1.c0)) NOT BETWEEN ((x'900faac6', 0X3df1da9b, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (((x'2f26', vt1.c0, vt1.c0)) NOT BETWEEN ((x'900faac6', 0x3df1da9b, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt1.c0 THEN (((x'2f26', vt1.c0, vt1.c0)) NOT BETWEEN ((x'900faac6', 0X3df1da9b, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE WHEN vt1.c0 THEN (((x'2f26', vt1.c0, vt1.c0)) NOT BETWEEN ((x'900faac6', 0x3df1da9b, vt1.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) ELSE ((vt1.c0) ISNULL) END);
SELECT * FROM t0, rt1, vt1 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM t0, rt1, vt1);
SELECT * FROM t0, rt1, vt1 WHERE (CAST(NULL AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS INTEGER)) IS TRUE)  as count FROM t0, rt1, vt1);
SELECT * FROM t0, rt1, vt1 WHERE (CAST(NULL AS INTEGER));
SELECT ALL * FROM rt1, vt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS INTEGER)) ORDER BY (((rt1.c0 IN (rt1.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS INTEGER)) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((rt1.c0 IN (rt1.c2))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS INTEGER)) ORDER BY (((rt1.c0 IN (rt1.c2))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS INTEGER)) IS TRUE)  as count FROM rt1, vt1 ORDER BY (((rt1.c0 IN (rt1.c2))) IS TRUE)  NULLS LAST);
SELECT ALL * FROM rt1, vt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS INTEGER)) ORDER BY (((rt1.c0 IN (rt1.c2))) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0, vt1, rt1 RIGHT OUTER JOIN t0 ON (- (((((t0.c0)OR(rt1.c0)))AND(vt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, rt1 RIGHT OUTER JOIN t0 ON (- (((((t0.c0)OR(rt1.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, rt1 RIGHT OUTER JOIN t0 ON (- (((((t0.c0)OR(rt1.c0)))AND(vt0.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM vt0, vt1, rt1 RIGHT OUTER JOIN t0 ON (- (((((t0.c0)OR(rt1.c0)))AND(vt0.c0)))));
SELECT ALL * FROM vt0, vt1, rt1 RIGHT OUTER JOIN t0 ON (- (((((t0.c0)OR(rt1.c0)))AND(vt0.c0)))) WHERE (vt1.c0);
SELECT ALL * FROM t0, rt1, vt1 WHERE (NULL) ORDER BY ((((((rt1.c2))<=((t0.c0))), ((t0.c0)<>('')), ((rt1.c1) ISNULL)))>((CAST(rt1.c1 AS BLOB), ((rt1.c2)/('')), ((rt1.c2)%(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ((((((rt1.c2))<=((t0.c0))), ((t0.c0)<>('')), ((rt1.c1) ISNULL)))>((CAST(rt1.c1 AS BLOB), ((rt1.c2)/('')), ((rt1.c2)%(vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, vt1 WHERE (NULL) ORDER BY ((((((rt1.c2))<=((t0.c0))), ((t0.c0)<>('')), ((rt1.c1) ISNULL)))>((CAST(rt1.c1 AS BLOB), ((rt1.c2)/('')), ((rt1.c2)%(vt1.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, rt1, vt1 ORDER BY ((((((rt1.c2))<=((t0.c0))), ((t0.c0)<>('')), ((rt1.c1) ISNULL)))>((CAST(rt1.c1 AS BLOB), ((rt1.c2)/('')), ((rt1.c2)%(vt1.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, rt1, vt1 WHERE (NULL) ORDER BY ((((((rt1.c2))<=((t0.c0))), ((t0.c0)<>('')), ((rt1.c1) ISNULL)))>((CAST(rt1.c1 AS BLOB), ((rt1.c2)/('')), ((rt1.c2)%(vt1.c0))))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt1, t0 WHERE (((IFNULL(DISTINCT vt0.c0, rt1.c1))>>(rt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, rt1.c1))>>(rt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt1, t0 ORDER BY ((((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), rt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1, t0 WHERE (((IFNULL(DISTINCT vt0.c0, rt1.c1))>>(rt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), rt1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(DISTINCT vt0.c0, rt1.c1))>>(rt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt1, t0 ORDER BY ((((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), rt1.c0 ASC);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1, t0 WHERE (((IFNULL(DISTINCT vt0.c0, rt1.c1))>>(rt1.c0))) ORDER BY ((((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), rt1.c0 ASC;
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt0, vt1);
SELECT COUNT(*) FROM vt0, vt1 WHERE (vt1.c0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(t0.c0 COLLATE BINARY AS NUMERIC)) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CAST(t0.c0 COLLATE BINARY AS NUMERIC));
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) ORDER BY ((rt1.c2)-(NULLIF(DISTINCT rt1.c1, vt0.c0))) DESC  NULLS FIRST, (((- (vt1.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY ((rt1.c2)-(NULLIF(DISTINCT rt1.c1, vt0.c0))) DESC  NULLS FIRST, (((- (vt1.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) ORDER BY ((rt1.c2)-(NULLIF(DISTINCT rt1.c1, vt0.c0))) DESC  NULLS FIRST, (((- (vt1.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) IS FALSE)) ISNULL)) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY ((rt1.c2)-(NULLIF(DISTINCT rt1.c1, vt0.c0))) DESC  NULLS FIRST, (((- (vt1.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (((((vt0.c0) IS FALSE)) ISNULL)) ORDER BY ((rt1.c2)-(NULLIF(DISTINCT rt1.c1, vt0.c0))) DESC  NULLS FIRST, (((- (vt1.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE ((NOT (CASE WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))) ORDER BY json_type(rt1.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY json_type(rt1.c1) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE ((NOT (CASE WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))) ORDER BY json_type(rt1.c1) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt1, vt0, rt1 ORDER BY json_type(rt1.c1) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt1, vt0, rt1 WHERE ((NOT (CASE WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))) ORDER BY json_type(rt1.c1) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>>(ABS(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>>(ABS(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>>(ABS(DISTINCT t0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>>(ABS(DISTINCT t0.c0)))) IS TRUE)  as count FROM vt1, vt0, t0);
SELECT ALL COUNT(*) FROM vt1, vt0, t0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))>>(ABS(DISTINCT t0.c0))));
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0)&(-8.3429994E8)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0)&(-8.3429994E8)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0)&(-8.3429994E8)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0)&(-8.3429994E8)))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (t0.c0) ORDER BY (((vt0.c0 IN ())) BETWEEN (((vt0.c0) ISNULL)) AND (((t0.c0)&(-8.3429994E8)))) DESC  NULLS FIRST;
SELECT * FROM vt0, vt1, rt1, t0 WHERE ((NOT (((((((((vt1.c0)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))AND(rt1.c0))))) ORDER BY (+ ((~ (rt1.c0))))  NULLS LAST, rt1.c2, CAST(((t0.c0)LIKE(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt1.c0)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt1, t0 ORDER BY (+ ((~ (rt1.c0))))  NULLS LAST, rt1.c2, CAST(((t0.c0)LIKE(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0, vt1, rt1, t0 WHERE ((NOT (((((((((vt1.c0)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))AND(rt1.c0))))) ORDER BY (+ ((~ (rt1.c0))))  NULLS LAST, rt1.c2, CAST(((t0.c0)LIKE(vt0.c0)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((NOT (((((((((vt1.c0)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, vt1, rt1, t0 ORDER BY (+ ((~ (rt1.c0))))  NULLS LAST, rt1.c2, CAST(((t0.c0)LIKE(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0, vt1, rt1, t0 WHERE ((NOT (((((((((vt1.c0)AND(rt1.c0)))OR(NULL)))AND(rt1.c0)))AND(rt1.c0))))) ORDER BY (+ ((~ (rt1.c0))))  NULLS LAST, rt1.c2, CAST(((t0.c0)LIKE(vt0.c0)) AS NUMERIC);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE ((((vt0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE ((((vt0.c0 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT NULL)) IS TRUE)  as count FROM vt0, rt1, t0, vt1);
SELECT ALL * FROM vt0, rt1, t0, vt1 WHERE ((((vt0.c0 IN ())) NOT NULL));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (((t0.c0)<=(vt1.c0))))) ORDER BY ((CASE WHEN vt1.c0 THEN 0.7681467852207242 END)<>(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN 0.7681467852207242 END)<>(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (((t0.c0)<=(vt1.c0))))) ORDER BY ((CASE WHEN vt1.c0 THEN 0.7681467852207242 END)<>(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0)<=(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY ((CASE WHEN vt1.c0 THEN 0.7681467852207242 END)<>(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE ((~ (((t0.c0)<=(vt1.c0))))) ORDER BY ((CASE WHEN vt1.c0 THEN 0.7681467852207242 END)<>(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST;
SELECT * FROM t0, vt1 WHERE (0.8972419864986538);
SELECT SUM(count) FROM (SELECT ((0.8972419864986538) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (0.8972419864986538);
SELECT SUM(count) FROM (SELECT ((0.8972419864986538) IS TRUE)  as count FROM t0, vt1);
SELECT * FROM t0, vt1 WHERE (0.8972419864986538);
SELECT * FROM t0, vt1, vt0 WHERE ((- ((t0.c0 IN ())))) ORDER BY (((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0))))=(IFNULL(DISTINCT t0.c0, vt0.c0)))  NULLS LAST, ((((t0.c0) IS TRUE))||('Og')) ASC  NULLS LAST, NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0))))=(IFNULL(DISTINCT t0.c0, vt0.c0)))  NULLS LAST, ((((t0.c0) IS TRUE))||('Og')) ASC  NULLS LAST, NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (vt1.c0))) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE ((- ((t0.c0 IN ())))) ORDER BY (((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0))))=(IFNULL(DISTINCT t0.c0, vt0.c0)))  NULLS LAST, ((((t0.c0) IS TRUE))||('Og')) ASC  NULLS LAST, NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (vt1.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((t0.c0 IN ())))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY (((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0))))=(IFNULL(DISTINCT t0.c0, vt0.c0)))  NULLS LAST, ((((t0.c0) IS TRUE))||('Og')) ASC  NULLS LAST, NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (vt1.c0))) ASC  NULLS LAST);
SELECT * FROM t0, vt1, vt0 WHERE ((- ((t0.c0 IN ())))) ORDER BY (((((vt1.c0, t0.c0, t0.c0)) BETWEEN ((vt1.c0, t0.c0, x'')) AND ((vt1.c0, vt0.c0, vt0.c0))))=(IFNULL(DISTINCT t0.c0, vt0.c0)))  NULLS LAST, ((((t0.c0) IS TRUE))||('Og')) ASC  NULLS LAST, NULLIF(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (vt1.c0))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c0)<(rt1.c0)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END) ORDER BY CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((rt1.c0)<(rt1.c0)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c0)<(rt1.c0)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END) ORDER BY CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 THEN ((rt1.c0)<(rt1.c0)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c0 THEN ((rt1.c0)<(rt1.c0)) ELSE ((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)) END) ORDER BY CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END COLLATE RTRIM;
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((((t0.c0)>(rt1.c0)))OR((+ (rt1.c2)))))AND((+ (rt1.c1))))) ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 END  WHEN ((((t0.c0)AND(t0.c0)))OR(rt1.c0)) THEN t0.c0 COLLATE BINARY ELSE ((rt1.c1)IS(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>(rt1.c0)))OR((+ (rt1.c2)))))AND((+ (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 END  WHEN ((((t0.c0)AND(t0.c0)))OR(rt1.c0)) THEN t0.c0 COLLATE BINARY ELSE ((rt1.c1)IS(t0.c0)) END);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((((t0.c0)>(rt1.c0)))OR((+ (rt1.c2)))))AND((+ (rt1.c1))))) ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 END  WHEN ((((t0.c0)AND(t0.c0)))OR(rt1.c0)) THEN t0.c0 COLLATE BINARY ELSE ((rt1.c1)IS(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)>(rt1.c0)))OR((+ (rt1.c2)))))AND((+ (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 END  WHEN ((((t0.c0)AND(t0.c0)))OR(rt1.c0)) THEN t0.c0 COLLATE BINARY ELSE ((rt1.c1)IS(t0.c0)) END);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((((t0.c0)>(rt1.c0)))OR((+ (rt1.c2)))))AND((+ (rt1.c1))))) ORDER BY CASE CASE WHEN vt0.c0 THEN t0.c0 END  WHEN ((((t0.c0)AND(t0.c0)))OR(rt1.c0)) THEN t0.c0 COLLATE BINARY ELSE ((rt1.c1)IS(t0.c0)) END;
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((((rt1.c0, t0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)), ((vt0.c0) IS TRUE), json_object(vt0.c0, rt1.c2))) AND (((rt1.c1 IN (vt0.c0, t0.c0)), CAST(rt1.c1 AS INTEGER), ((rt1.c1)GLOB('-411798627'))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, t0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)), ((vt0.c0) IS TRUE), json_object(vt0.c0, rt1.c2))) AND (((rt1.c1 IN (vt0.c0, t0.c0)), CAST(rt1.c1 AS INTEGER), ((rt1.c1)GLOB('-411798627')))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((((rt1.c0, t0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)), ((vt0.c0) IS TRUE), json_object(vt0.c0, rt1.c2))) AND (((rt1.c1 IN (vt0.c0, t0.c0)), CAST(rt1.c1 AS INTEGER), ((rt1.c1)GLOB('-411798627'))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c0, t0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)), ((vt0.c0) IS TRUE), json_object(vt0.c0, rt1.c2))) AND (((rt1.c1 IN (vt0.c0, t0.c0)), CAST(rt1.c1 AS INTEGER), ((rt1.c1)GLOB('-411798627')))))) IS TRUE)  as count FROM t0, vt0, rt1);
SELECT ALL COUNT(*) FROM t0, vt0, rt1 WHERE ((((rt1.c0, t0.c0, rt1.c1)) NOT BETWEEN ((((rt1.c0) BETWEEN (rt1.c1) AND (t0.c0)), ((vt0.c0) IS TRUE), json_object(vt0.c0, rt1.c2))) AND (((rt1.c1 IN (vt0.c0, t0.c0)), CAST(rt1.c1 AS INTEGER), ((rt1.c1)GLOB('-411798627'))))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (((rt1.c1) ISNULL)) ORDER BY CASE (+ (t0.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(t0.c0)) THEN CAST(rt1.c0 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) ISNULL)) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY CASE (+ (t0.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(t0.c0)) THEN CAST(rt1.c0 AS REAL) END DESC);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (((rt1.c1) ISNULL)) ORDER BY CASE (+ (t0.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(t0.c0)) THEN CAST(rt1.c0 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) ISNULL)) IS TRUE)  as count FROM rt1, t0, vt1, vt0 ORDER BY CASE (+ (t0.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(t0.c0)) THEN CAST(rt1.c0 AS REAL) END DESC);
SELECT COUNT(*) FROM rt1, t0, vt1, vt0 WHERE (((rt1.c1) ISNULL)) ORDER BY CASE (+ (t0.c0))  WHEN ((((vt1.c0)OR(vt1.c0)))OR(t0.c0)) THEN CAST(rt1.c0 AS REAL) END DESC;
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS REAL)))) ORDER BY (((rt1.c2))<=((((rt1.c0) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))<=((((rt1.c0) ISNULL)))) DESC);
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS REAL)))) ORDER BY (((rt1.c2))<=((((rt1.c0) ISNULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2))<=((((rt1.c0) ISNULL)))) DESC);
SELECT ALL * FROM rt1 WHERE ((NOT (CAST(rt1.c2 AS REAL)))) ORDER BY (((rt1.c2))<=((((rt1.c0) ISNULL)))) DESC;
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE ((+ (CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (((0.7503685103233081)LIKE(NULL))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC, LIKELY(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ASC, (((rt1.c2) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (((0.7503685103233081)LIKE(NULL))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC, LIKELY(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ASC, (((rt1.c2) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE ((+ (CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (((0.7503685103233081)LIKE(NULL))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC, LIKELY(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ASC, (((rt1.c2) ISNULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (((0.7503685103233081)LIKE(NULL))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC, LIKELY(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ASC, (((rt1.c2) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE ((+ (CASE rt1.c0  WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((UNLIKELY(vt0.c0)) BETWEEN (((0.7503685103233081)LIKE(NULL))) AND (UNLIKELY(DISTINCT vt1.c0))) ASC, LIKELY(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))) ASC, (((rt1.c2) ISNULL) IN ());
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c0) ORDER BY ((t0.c0 COLLATE BINARY) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM rt1, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((rt1.c2) IS FALSE)) AND (CASE rt1.c1  WHEN vt1.c0 THEN 'FALSE' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN 298754092 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END)) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY END) ORDER BY ((rt1.c1)<(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((rt1.c2) IS FALSE)) AND (CASE rt1.c1  WHEN vt1.c0 THEN 'FALSE' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN 298754092 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END)) ORDER BY ((rt1.c1)<(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((rt1.c2) IS FALSE)) AND (CASE rt1.c1  WHEN vt1.c0 THEN 'FALSE' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN 298754092 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END)) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY END) ORDER BY ((rt1.c1)<(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY END) IS TRUE)  as count FROM rt1, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((rt1.c2) IS FALSE)) AND (CASE rt1.c1  WHEN vt1.c0 THEN 'FALSE' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN 298754092 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END)) ORDER BY ((rt1.c1)<(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt1, vt0 LEFT OUTER JOIN t0 ON ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END) BETWEEN (((rt1.c2) IS FALSE)) AND (CASE rt1.c1  WHEN vt1.c0 THEN 'FALSE' WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN t0.c0 WHEN t0.c0 THEN 298754092 WHEN t0.c0 THEN rt1.c2 ELSE rt1.c1 END)) WHERE (CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c0 COLLATE BINARY END) ORDER BY ((rt1.c1)<(rt1.c2)) COLLATE RTRIM DESC  NULLS FIRST;
SELECT * FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  WHEN (((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN vt1.c0 WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  WHEN (((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN vt1.c0 WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  WHEN (((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN vt1.c0 WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((vt1.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  WHEN (((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN vt1.c0 WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END) IS TRUE)  as count FROM vt1);
SELECT * FROM vt1 WHERE (CASE ((((((((vt1.c0)AND(NULL)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0))  WHEN (((NULL, vt1.c0, vt1.c0))>=((vt1.c0, vt1.c0, vt1.c0))) THEN vt1.c0 WHEN ((vt1.c0) NOT NULL) THEN CASE WHEN vt1.c0 THEN vt1.c0 END WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0)>(vt1.c0)) END);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (LIKELIHOOD((rt1.c1 IN ()), 0.9828550461095573)) ORDER BY ((CAST(rt1.c2 AS REAL)) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt1.c1 IN ()), 0.9828550461095573)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((CAST(rt1.c2 AS REAL)) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (LIKELIHOOD((rt1.c1 IN ()), 0.9828550461095573)) ORDER BY ((CAST(rt1.c2 AS REAL)) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((rt1.c1 IN ()), 0.9828550461095573)) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((CAST(rt1.c2 AS REAL)) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS INTEGER))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (LIKELIHOOD((rt1.c1 IN ()), 0.9828550461095573)) ORDER BY ((CAST(rt1.c2 AS REAL)) BETWEEN (UPPER(DISTINCT vt0.c0)) AND (CAST(vt0.c0 AS INTEGER)));
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((+ (rt1.c0))))<(((+ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt1.c0))))<(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((+ (rt1.c0))))<(((+ (rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((((+ (rt1.c0))))<(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1, vt0);
SELECT COUNT(*) FROM rt1, vt1, vt0 WHERE (((((+ (rt1.c0))))<(((+ (rt1.c1))))));
SELECT * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c2, rt1.c2, 'a8f1')) NOT BETWEEN ((((rt1.c2)>(rt1.c1)), CAST(rt1.c0 AS NUMERIC), (~ (rt1.c2)), (rt1.c1 IN ()), (((('6J-wnuJX')OR(rt1.c1)))AND(rt1.c0)))) AND ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), (- (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, (+ (rt1.c0)), rt1.c1 COLLATE NOCASE)))) ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))) BETWEEN (((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))) AND ((- ('?裍潀*fᓴp 뻦')))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt1.c2, rt1.c2, 'a8f1')) NOT BETWEEN ((((rt1.c2)>(rt1.c1)), CAST(rt1.c0 AS NUMERIC), (~ (rt1.c2)), (rt1.c1 IN ()), (((('6J-wnuJX')OR(rt1.c1)))AND(rt1.c0)))) AND ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), (- (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, (+ (rt1.c0)), rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))) BETWEEN (((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))) AND ((- ('?裍潀*fᓴp 뻦')))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c2, rt1.c2, 'a8f1')) NOT BETWEEN ((((rt1.c2)>(rt1.c1)), CAST(rt1.c0 AS NUMERIC), (~ (rt1.c2)), (rt1.c1 IN ()), (((('6J-wnuJX')OR(rt1.c1)))AND(rt1.c0)))) AND ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), (- (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, (+ (rt1.c0)), rt1.c1 COLLATE NOCASE)))) ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))) BETWEEN (((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))) AND ((- ('?裍潀*fᓴp 뻦')))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c0, rt1.c0, rt1.c2, rt1.c2, 'a8f1')) NOT BETWEEN ((((rt1.c2)>(rt1.c1)), CAST(rt1.c0 AS NUMERIC), (~ (rt1.c2)), (rt1.c1 IN ()), (((('6J-wnuJX')OR(rt1.c1)))AND(rt1.c0)))) AND ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), (- (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, (+ (rt1.c0)), rt1.c1 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))) BETWEEN (((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))) AND ((- ('?裍潀*fᓴp 뻦')))) ASC);
SELECT * FROM rt1 WHERE ((((rt1.c0, rt1.c0, rt1.c2, rt1.c2, 'a8f1')) NOT BETWEEN ((((rt1.c2)>(rt1.c1)), CAST(rt1.c0 AS NUMERIC), (~ (rt1.c2)), (rt1.c1 IN ()), (((('6J-wnuJX')OR(rt1.c1)))AND(rt1.c0)))) AND ((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2)), (- (rt1.c2)), CASE WHEN rt1.c0 THEN rt1.c1 END, (+ (rt1.c0)), rt1.c1 COLLATE NOCASE)))) ORDER BY ((((((((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2))) BETWEEN (((((rt1.c2)AND(rt1.c2)))AND(rt1.c0))) AND ((- ('?裍潀*fᓴp 뻦')))) ASC;
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((rt1.c2)AND(rt1.c1)))|(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN vt1 ORDER BY ((((rt1.c2)AND(rt1.c1)))|(CAST(t0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((rt1.c2)AND(rt1.c1)))|(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt1.c0 IN ())) IS TRUE)  as count FROM t0, rt1 NATURAL JOIN vt1 ORDER BY ((((rt1.c2)AND(rt1.c1)))|(CAST(t0.c0 AS INTEGER)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1 NATURAL JOIN vt1 WHERE ((vt1.c0 IN ())) ORDER BY ((((rt1.c2)AND(rt1.c1)))|(CAST(t0.c0 AS INTEGER)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((CASE WHEN rt1.c0 THEN t0.c0 END)<=(((rt1.c1) BETWEEN (t0.c0) AND (0.6701739976183515))))) ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN t0.c0 END)<=(((rt1.c1) BETWEEN (t0.c0) AND (0.6701739976183515))))) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((CASE WHEN rt1.c0 THEN t0.c0 END)<=(((rt1.c1) BETWEEN (t0.c0) AND (0.6701739976183515))))) ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN t0.c0 END)<=(((rt1.c1) BETWEEN (t0.c0) AND (0.6701739976183515))))) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB)  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0, vt1, rt1 WHERE (((CASE WHEN rt1.c0 THEN t0.c0 END)<=(((rt1.c1) BETWEEN (t0.c0) AND (0.6701739976183515))))) ORDER BY CAST(((vt1.c0) ISNULL) AS BLOB)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (NULL) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))) AND ((((rt1.c2))>=((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))) AND ((((rt1.c2))>=((t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (NULL) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))) AND ((((rt1.c2))>=((t0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0, rt1, vt0 ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))) AND ((((rt1.c2))>=((t0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, rt1, vt0 WHERE (NULL) ORDER BY (((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0)))) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt0.c0))) AND ((((rt1.c2))>=((t0.c0)))))  NULLS LAST;
SELECT * FROM vt1 WHERE (LOWER(DISTINCT vt1.c0) COLLATE NOCASE) ORDER BY (((vt1.c0 IN ()))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 265060977 END)), 0.21465943552708155 COLLATE NOCASE ASC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-1.92752031E9)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 265060977 END)), 0.21465943552708155 COLLATE NOCASE ASC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-1.92752031E9)))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (LOWER(DISTINCT vt1.c0) COLLATE NOCASE) ORDER BY (((vt1.c0 IN ()))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 265060977 END)), 0.21465943552708155 COLLATE NOCASE ASC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-1.92752031E9)))) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT vt1.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt1 ORDER BY (((vt1.c0 IN ()))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 265060977 END)), 0.21465943552708155 COLLATE NOCASE ASC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-1.92752031E9)))) NOT NULL) ASC  NULLS LAST);
SELECT * FROM vt1 WHERE (LOWER(DISTINCT vt1.c0) COLLATE NOCASE) ORDER BY (((vt1.c0 IN ()))-(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 265060977 END)), 0.21465943552708155 COLLATE NOCASE ASC, (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((-1.92752031E9)))) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM t0, rt1 WHERE (((((0.47696816150630206) NOTNULL)) BETWEEN (((rt1.c2)||(t0.c0))) AND ((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((0.47696816150630206) NOTNULL)) BETWEEN (((rt1.c2)||(t0.c0))) AND ((~ (rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((0.47696816150630206) NOTNULL)) BETWEEN (((rt1.c2)||(t0.c0))) AND ((~ (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((0.47696816150630206) NOTNULL)) BETWEEN (((rt1.c2)||(t0.c0))) AND ((~ (rt1.c1))))) IS TRUE)  as count FROM t0, rt1);
SELECT COUNT(*) FROM t0, rt1 WHERE (((((0.47696816150630206) NOTNULL)) BETWEEN (((rt1.c2)||(t0.c0))) AND ((~ (rt1.c1)))));
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TRIM(DISTINCT ((t0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)))) ORDER BY ((IFNULL(vt0.c0, vt1.c0)) ISNULL) ASC, ((((-1.674698735E9)OR((- (vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((IFNULL(vt0.c0, vt1.c0)) ISNULL) ASC, ((((-1.674698735E9)OR((- (vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TRIM(DISTINCT ((t0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)))) ORDER BY ((IFNULL(vt0.c0, vt1.c0)) ISNULL) ASC, ((((-1.674698735E9)OR((- (vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((t0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)))) IS TRUE)  as count FROM t0, vt1, vt0 ORDER BY ((IFNULL(vt0.c0, vt1.c0)) ISNULL) ASC, ((((-1.674698735E9)OR((- (vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))) ASC);
SELECT ALL COUNT(*) FROM t0, vt1, vt0 WHERE (TRIM(DISTINCT ((t0.c0)IS NOT(vt0.c0)), (+ (vt0.c0)))) ORDER BY ((IFNULL(vt0.c0, vt1.c0)) ISNULL) ASC, ((((-1.674698735E9)OR((- (vt1.c0)))))OR(CAST(vt1.c0 AS NUMERIC))) ASC;
SELECT ALL * FROM rt1, vt0, t0, vt1 WHERE (rt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT ALL * FROM rt1, vt0, t0, vt1 WHERE (rt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT ALL * FROM rt1, vt0, t0, vt1 WHERE (rt1.c0 COLLATE NOCASE);
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN rt1 WHERE (COALESCE(((rt1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)), rt1.c0)) ORDER BY ('YLX{贔H' COLLATE BINARY IN ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)), rt1.c0)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt1 ORDER BY ('YLX{贔H' COLLATE BINARY IN ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN rt1 WHERE (COALESCE(((rt1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)), rt1.c0)) ORDER BY ('YLX{贔H' COLLATE BINARY IN ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((COALESCE(((rt1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)), rt1.c0)) IS TRUE)  as count FROM t0, vt0 NATURAL JOIN rt1 ORDER BY ('YLX{贔H' COLLATE BINARY IN ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM t0, vt0 NATURAL JOIN rt1 WHERE (COALESCE(((rt1.c2) NOT BETWEEN (t0.c0) AND (vt0.c0)), rt1.c0)) ORDER BY ('YLX{贔H' COLLATE BINARY IN ((((t0.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT * FROM rt1, vt0, t0 WHERE (TRIM('㾩({N\n')) ORDER BY (((((((((- (rt1.c1)))OR(MIN(rt1.c2, vt0.c0))))AND(((rt1.c2) IS TRUE))))AND(((t0.c0)IS NOT(rt1.c0)))))OR(NULLIF(vt0.c0, rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM('㾩({N\n')) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (((((((((- (rt1.c1)))OR(MIN(rt1.c2, vt0.c0))))AND(((rt1.c2) IS TRUE))))AND(((t0.c0)IS NOT(rt1.c0)))))OR(NULLIF(vt0.c0, rt1.c2))) DESC);
SELECT * FROM rt1, vt0, t0 WHERE (TRIM('㾩({N\n')) ORDER BY (((((((((- (rt1.c1)))OR(MIN(rt1.c2, vt0.c0))))AND(((rt1.c2) IS TRUE))))AND(((t0.c0)IS NOT(rt1.c0)))))OR(NULLIF(vt0.c0, rt1.c2))) DESC;
SELECT SUM(count) FROM (SELECT ((TRIM('㾩({N\n')) IS TRUE)  as count FROM rt1, vt0, t0 ORDER BY (((((((((- (rt1.c1)))OR(MIN(rt1.c2, vt0.c0))))AND(((rt1.c2) IS TRUE))))AND(((t0.c0)IS NOT(rt1.c0)))))OR(NULLIF(vt0.c0, rt1.c2))) DESC);
SELECT * FROM rt1, vt0, t0 WHERE (TRIM('㾩({N\n')) ORDER BY (((((((((- (rt1.c1)))OR(MIN(rt1.c2, vt0.c0))))AND(((rt1.c2) IS TRUE))))AND(((t0.c0)IS NOT(rt1.c0)))))OR(NULLIF(vt0.c0, rt1.c2))) DESC;
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((- (rt1.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((- (rt1.c1)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((- (rt1.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((- (rt1.c1)) IN ()) ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY ((- (rt1.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((TYPEOF(vt1.c0))AND(('-139986562' IN ()))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND('?l Ma-')))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt1.c0 IN ()) WHEN ((NULL) BETWEEN ('p2p{楯tF7h') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN SUBSTR(vt1.c0, vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(x'')) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt1.c0 AS REAL) ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((TYPEOF(vt1.c0))AND(('-139986562' IN ()))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND('?l Ma-')))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt1.c0 IN ()) WHEN ((NULL) BETWEEN ('p2p{楯tF7h') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN SUBSTR(vt1.c0, vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(x'')) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt1.c0 AS REAL) ELSE (vt0.c0 IN ()) END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((TYPEOF(vt1.c0))AND(('-139986562' IN ()))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND('?l Ma-')))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt1.c0 IN ()) WHEN ((NULL) BETWEEN ('p2p{楯tF7h') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN SUBSTR(vt1.c0, vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(x'')) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt1.c0 AS REAL) ELSE (vt0.c0 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((TYPEOF(vt1.c0))AND(('-139986562' IN ()))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND('?l Ma-')))OR(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt1, vt0 ORDER BY CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt1.c0 IN ()) WHEN ((NULL) BETWEEN ('p2p{楯tF7h') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN SUBSTR(vt1.c0, vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(x'')) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt1.c0 AS REAL) ELSE (vt0.c0 IN ()) END DESC);
SELECT ALL COUNT(*) FROM vt1, vt0 WHERE (((((((((TYPEOF(vt1.c0))AND(('-139986562' IN ()))))AND((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND('?l Ma-')))OR(((vt0.c0) IS TRUE)))) ORDER BY CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN (vt1.c0 IN ()) WHEN ((NULL) BETWEEN ('p2p{楯tF7h') AND (vt0.c0)) THEN ((vt0.c0) IS FALSE) WHEN ((vt1.c0)OR(vt0.c0)) THEN ((vt0.c0)*(vt0.c0)) WHEN SUBSTR(vt1.c0, vt1.c0) THEN ((((vt1.c0)OR(vt0.c0)))AND(x'')) WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(vt1.c0 AS REAL) ELSE (vt0.c0 IN ()) END DESC;
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (CAST(COALESCE(vt1.c0, vt0.c0, vt1.c0, NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt1.c0, vt0.c0, vt1.c0, NULL) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (CAST(COALESCE(vt1.c0, vt0.c0, vt1.c0, NULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(COALESCE(vt1.c0, vt0.c0, vt1.c0, NULL) AS BLOB)) IS TRUE)  as count FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)));
SELECT ALL COUNT(*) FROM vt1 LEFT OUTER JOIN vt0 ON (- (vt1.c0)) WHERE (CAST(COALESCE(vt1.c0, vt0.c0, vt1.c0, NULL) AS BLOB));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN t0 ON ((t0.c0 IN ()) IN ()) WHERE ((+ ((((rt1.c2, 'we', rt1.c0, rt1.c1, rt1.c0))=((rt1.c2, x'', vt1.c0, vt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c2, 'we', rt1.c0, rt1.c1, rt1.c0))==((rt1.c2, x'', vt1.c0, vt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN t0 ON ((t0.c0 IN ()) IN ()));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN t0 ON ((t0.c0 IN ()) IN ()) WHERE ((+ ((((rt1.c2, 'we', rt1.c0, rt1.c1, rt1.c0))=((rt1.c2, x'', vt1.c0, vt1.c0, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((((rt1.c2, 'we', rt1.c0, rt1.c1, rt1.c0))==((rt1.c2, x'', vt1.c0, vt1.c0, rt1.c1)))))) IS TRUE)  as count FROM rt1, vt1 FULL OUTER JOIN t0 ON ((t0.c0 IN ()) IN ()));
SELECT ALL * FROM rt1, vt1 FULL OUTER JOIN t0 ON ((t0.c0 IN ()) IN ()) WHERE ((+ ((((rt1.c2, 'we', rt1.c0, rt1.c1, rt1.c0))=((rt1.c2, x'', vt1.c0, vt1.c0, rt1.c1))))));
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF((+ (vt1.c0)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF((+ (vt1.c0)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF((+ (vt1.c0)))) IS TRUE)  as count FROM vt1 NOT INDEXED ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt1 WHERE (TYPEOF((+ (vt1.c0)))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY 0.9408366494095228 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.9408366494095228 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY 0.9408366494095228 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS REAL) IN ())) IS TRUE)  as count FROM vt0 ORDER BY 0.9408366494095228 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS REAL) IN ())) ORDER BY 0.9408366494095228 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (((((t0.c0 IN ())))==((((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ())))=((((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (((((t0.c0 IN ())))==((((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0 IN ())))=((((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (((((t0.c0 IN ())))==((((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (json_array_length(vt0.c0, vt0.c0)))) ORDER BY x'1ee8' DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN ((('04')>>(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'1ee8' DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN ((('04')>>(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, vt1 WHERE ((NOT (json_array_length(vt0.c0, vt0.c0)))) ORDER BY x'1ee8' DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN ((('04')>>(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_array_length(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, vt1 ORDER BY x'1ee8' DESC  NULLS LAST, ((vt1.c0) NOT BETWEEN ((('04')>>(vt0.c0))) AND ((((vt0.c0, vt0.c0, vt0.c0))>((vt0.c0, vt1.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE (0.42033831490868656);
SELECT SUM(count) FROM (SELECT ALL ((0.42033831490868656) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE (0.42033831490868656);
SELECT SUM(count) FROM (SELECT ALL ((0.42033831490868656) IS TRUE)  as count FROM rt1, vt1, vt0, t0);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0, t0 WHERE (0.42033831490868656);
SELECT COUNT(*) FROM rt1 WHERE (0.7820777636572508 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.7820777636572508 COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (0.7820777636572508 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((0.7820777636572508 COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (0.7820777636572508 COLLATE NOCASE);
SELECT * FROM vt1, vt0, rt1, t0 WHERE (HEX(LOWER(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(LOWER(rt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt1, t0);
SELECT * FROM vt1, vt0, rt1, t0 WHERE (HEX(LOWER(rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(LOWER(rt1.c0))) IS TRUE)  as count FROM vt1, vt0, rt1, t0);
SELECT * FROM vt1, vt0, rt1, t0 WHERE (HEX(LOWER(rt1.c0)));
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))&(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt0.c0)))&(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))&(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0)>(vt0.c0)))&(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0))))) IS TRUE)  as count FROM t0, vt0 NOT INDEXED, vt1 NOT INDEXED);
SELECT ALL COUNT(*) FROM t0, vt0, vt1 WHERE (((((vt1.c0)>(vt0.c0)))&(((vt1.c0) NOT BETWEEN (t0.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON (((((((((t0.c0 IN (vt0.c0)))OR((rt1.c1 IN ()))))AND((NOT ('1108047323')))))AND((((rt1.c0))=((rt1.c2))))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) INNER JOIN vt0 ON (((('670766324')AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) IS FALSE))) INNER JOIN t0 ON (((NULL)>(vt0.c0)) IN (CASE rt1.c0  WHEN '1615127394' THEN rt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c1 END)) WHERE (CASE WHEN (+ (rt1.c0)) THEN CAST(0X6dca6905 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c0)) THEN CAST(0X6dca6905 AS REAL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (((((((((t0.c0 IN (vt0.c0)))OR((rt1.c1 IN ()))))AND((NOT ('1108047323')))))AND((((rt1.c0))=((rt1.c2))))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) INNER JOIN vt0 ON (((('670766324')AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) IS FALSE))) INNER JOIN t0 ON (((NULL)>(vt0.c0)) IN (CASE rt1.c0  WHEN '1615127394' THEN rt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c1 END)));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON (((((((((t0.c0 IN (vt0.c0)))OR((rt1.c1 IN ()))))AND((NOT ('1108047323')))))AND((((rt1.c0))=((rt1.c2))))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) INNER JOIN vt0 ON (((('670766324')AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) IS FALSE))) INNER JOIN t0 ON (((NULL)>(vt0.c0)) IN (CASE rt1.c0  WHEN '1615127394' THEN rt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c1 END)) WHERE (CASE WHEN (+ (rt1.c0)) THEN CAST(0X6dca6905 AS REAL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c0)) THEN CAST(0X6dca6905 AS REAL) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON (((((((((t0.c0 IN (vt0.c0)))OR((rt1.c1 IN ()))))AND((NOT ('1108047323')))))AND((((rt1.c0))=((rt1.c2))))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0))))) INNER JOIN vt0 ON (((('670766324')AND(CAST(vt0.c0 AS REAL))))AND(((vt0.c0) IS FALSE))) INNER JOIN t0 ON (((NULL)>(vt0.c0)) IN (CASE rt1.c0  WHEN '1615127394' THEN rt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN t0.c0 THEN rt1.c1 END)));
SELECT * FROM rt1, vt0, t0, vt1 WHERE (CAST(rt1.c2 AS REAL) COLLATE RTRIM) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY vt1.c0);
SELECT * FROM rt1, vt0, t0, vt1 WHERE (CAST(rt1.c2 AS REAL) COLLATE RTRIM) ORDER BY vt1.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt1.c2 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY vt1.c0);
SELECT * FROM rt1, vt0, t0, vt1 WHERE (CAST(rt1.c2 AS REAL) COLLATE RTRIM) ORDER BY vt1.c0;
SELECT * FROM rt1, t0, vt0, vt1 WHERE (((IFNULL(vt1.c0, rt1.c1)) IS TRUE)) ORDER BY (((((rt1.c2))>=((vt0.c0)))) BETWEEN (-3.78056136E8 COLLATE BINARY) AND (((rt1.c2) BETWEEN (vt1.c0) AND (t0.c0)))) ASC  NULLS FIRST, (('1075936634')|((- (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, rt1.c1)) IS TRUE)) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (((((rt1.c2))>=((vt0.c0)))) BETWEEN (-3.78056136E8 COLLATE BINARY) AND (((rt1.c2) BETWEEN (vt1.c0) AND (t0.c0)))) ASC  NULLS FIRST, (('1075936634')|((- (rt1.c0)))) ASC);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (((IFNULL(vt1.c0, rt1.c1)) IS TRUE)) ORDER BY (((((rt1.c2))>=((vt0.c0)))) BETWEEN (-3.78056136E8 COLLATE BINARY) AND (((rt1.c2) BETWEEN (vt1.c0) AND (t0.c0)))) ASC  NULLS FIRST, (('1075936634')|((- (rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((IFNULL(vt1.c0, rt1.c1)) IS TRUE)) IS TRUE)  as count FROM rt1, t0, vt0, vt1 ORDER BY (((((rt1.c2))>=((vt0.c0)))) BETWEEN (-3.78056136E8 COLLATE BINARY) AND (((rt1.c2) BETWEEN (vt1.c0) AND (t0.c0)))) ASC  NULLS FIRST, (('1075936634')|((- (rt1.c0)))) ASC);
SELECT * FROM rt1, t0, vt0, vt1 WHERE (((IFNULL(vt1.c0, rt1.c1)) IS TRUE)) ORDER BY (((((rt1.c2))>=((vt0.c0)))) BETWEEN (-3.78056136E8 COLLATE BINARY) AND (((rt1.c2) BETWEEN (vt1.c0) AND (t0.c0)))) ASC  NULLS FIRST, (('1075936634')|((- (rt1.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON json_quote(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0))) WHERE ((+ (t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)<(rt1.c1))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON json_quote(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0))) ORDER BY ((((t0.c0)<(rt1.c1))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON json_quote(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0))) WHERE ((+ (t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)<(rt1.c1))) ISNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 FULL OUTER JOIN rt1 ON json_quote(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0))) ORDER BY ((((t0.c0)<(rt1.c1))) ISNULL) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN rt1 ON json_quote(((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c0))) WHERE ((+ (t0.c0)) COLLATE BINARY) ORDER BY ((((t0.c0)<(rt1.c1))) ISNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (HEX(DISTINCT (+ (rt1.c2)))) ORDER BY ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOTNULL) DESC, 0Xffffffffaf064309 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (+ (rt1.c2)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOTNULL) DESC, 0Xffffffffaf064309 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (HEX(DISTINCT (+ (rt1.c2)))) ORDER BY ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOTNULL) DESC, 0Xffffffffaf064309 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (+ (rt1.c2)))) IS TRUE)  as count FROM vt1, t0, vt0, rt1 ORDER BY ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOTNULL) DESC, 0Xffffffffaf064309 COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM vt1, t0, vt0, rt1 WHERE (HEX(DISTINCT (+ (rt1.c2)))) ORDER BY ((((vt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) NOTNULL) DESC, 0Xffffffffaf064309 COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT SUM(count) FROM (SELECT ((((t0.c0) ISNULL)) IS TRUE)  as count FROM t0, vt1);
SELECT ALL * FROM t0, vt1 WHERE (((t0.c0) ISNULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))OR(((rt1.c1) NOT BETWEEN ('[h') AND (rt1.c0)))))AND(((rt1.c2) IS FALSE))) WHERE (((((rt1.c2)AND(0.23554969198411602))) BETWEEN (CASE ''  WHEN rt1.c1 THEN rt1.c1 END) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(0.23554969198411602))) BETWEEN (CASE ''  WHEN rt1.c1 THEN rt1.c1 END) AND (t0.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))OR(((rt1.c1) NOT BETWEEN ('[h') AND (rt1.c0)))))AND(((rt1.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))OR(((rt1.c1) NOT BETWEEN ('[h') AND (rt1.c0)))))AND(((rt1.c2) IS FALSE))) WHERE (((((rt1.c2)AND(0.23554969198411602))) BETWEEN (CASE ''  WHEN rt1.c1 THEN rt1.c1 END) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)AND(0.23554969198411602))) BETWEEN (CASE ''  WHEN rt1.c1 THEN rt1.c1 END) AND (t0.c0))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))OR(((rt1.c1) NOT BETWEEN ('[h') AND (rt1.c0)))))AND(((rt1.c2) IS FALSE))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON (((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))OR(((rt1.c1) NOT BETWEEN ('[h') AND (rt1.c0)))))AND(((rt1.c2) IS FALSE))) WHERE (((((rt1.c2)AND(0.23554969198411602))) BETWEEN (CASE ''  WHEN rt1.c1 THEN rt1.c1 END) AND (t0.c0)));
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)GLOB(((vt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)GLOB(((vt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)GLOB(((vt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)GLOB(((vt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1))))) IS TRUE)  as count FROM rt1, t0, vt0, vt1);
SELECT ALL * FROM rt1, t0, vt0, vt1 WHERE (((CASE vt0.c0  WHEN rt1.c1 THEN vt1.c0 WHEN t0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 END)GLOB(((vt1.c0) NOT BETWEEN (t0.c0) AND (rt1.c1)))));
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, (vt0.c0 IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, (vt0.c0 IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, (vt0.c0 IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, (vt0.c0 IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC);
SELECT * FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))IS NOT(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))  NULLS LAST, (vt0.c0 IN ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) ASC;
SELECT COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((((((((((t0.c0))==((rt1.c0))))AND(((rt1.c2)LIKE(rt1.c2)))))OR((rt1.c0 IN ()))))AND(((rt1.c1) NOTNULL))))OR((('Rd7*-')GLOB(rt1.c0))))) ORDER BY (NOT (rt1.c2));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0))=((rt1.c0))))AND(((rt1.c2)LIKE(rt1.c2)))))OR((rt1.c0 IN ()))))AND(((rt1.c1) NOTNULL))))OR((('Rd7*-')GLOB(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY (NOT (rt1.c2)));
SELECT COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((((((((((t0.c0))==((rt1.c0))))AND(((rt1.c2)LIKE(rt1.c2)))))OR((rt1.c0 IN ()))))AND(((rt1.c1) NOTNULL))))OR((('Rd7*-')GLOB(rt1.c0))))) ORDER BY (NOT (rt1.c2));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c0))=((rt1.c0))))AND(((rt1.c2)LIKE(rt1.c2)))))OR((rt1.c0 IN ()))))AND(((rt1.c1) NOTNULL))))OR((('Rd7*-')GLOB(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0, t0 ORDER BY (NOT (rt1.c2)));
SELECT COUNT(*) FROM vt1, rt1, vt0, t0 WHERE ((((((((((((t0.c0))==((rt1.c0))))AND(((rt1.c2)LIKE(rt1.c2)))))OR((rt1.c0 IN ()))))AND(((rt1.c1) NOTNULL))))OR((('Rd7*-')GLOB(rt1.c0))))) ORDER BY (NOT (rt1.c2));
SELECT * FROM rt1 WHERE (CAST(((0.20629305886500449) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((0.20629305886500449) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((0.20629305886500449) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((0.20629305886500449) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CAST(((0.20629305886500449) NOT BETWEEN (rt1.c0) AND (rt1.c2)) AS TEXT));
SELECT * FROM t0, vt0, rt1, vt1 WHERE (CAST((((rt1.c0))>((vt0.c0))) AS BLOB)) ORDER BY ((((x'')OR(((((((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(t0.c0)))))AND(x'8897'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0))>((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt1, vt1 ORDER BY ((((x'')OR(((((((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(t0.c0)))))AND(x'8897'))  NULLS LAST);
SELECT * FROM t0, vt0, rt1, vt1 WHERE (CAST((((rt1.c0))>((vt0.c0))) AS BLOB)) ORDER BY ((((x'')OR(((((((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(t0.c0)))))AND(x'8897'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c0))>((vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t0, vt0, rt1, vt1 ORDER BY ((((x'')OR(((((((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(t0.c0)))))AND(x'8897'))  NULLS LAST);
SELECT * FROM t0, vt0, rt1, vt1 WHERE (CAST((((rt1.c0))>((vt0.c0))) AS BLOB)) ORDER BY ((((x'')OR(((((((((rt1.c2)AND(rt1.c0)))OR(vt0.c0)))AND(rt1.c2)))OR(t0.c0)))))AND(x'8897'))  NULLS LAST;
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE (HEX(CAST(vt1.c0 AS TEXT))) ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE RTRIM ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE (HEX(CAST(vt1.c0 AS TEXT))) ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CAST(vt1.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE RTRIM ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 FULL OUTER JOIN vt1 ON vt0.c0 COLLATE RTRIM WHERE (HEX(CAST(vt1.c0 AS TEXT))) ORDER BY ((vt0.c0)IS NOT(t0.c0)) COLLATE RTRIM  NULLS FIRST;
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS BLOB)) ORDER BY (NOT (CASE WHEN '0.9037505188972321' THEN rt1.c2 END)) DESC  NULLS FIRST, ((((CAST(rt1.c1 AS REAL))OR(((rt1.c1)>(rt1.c0)))))AND(((rt1.c0)!=(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE WHEN '0.9037505188972321' THEN rt1.c2 END)) DESC  NULLS FIRST, ((((CAST(rt1.c1 AS REAL))OR(((rt1.c1)>(rt1.c0)))))AND(((rt1.c0)!=(rt1.c1)))) ASC);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS BLOB)) ORDER BY (NOT (CASE WHEN '0.9037505188972321' THEN rt1.c2 END)) DESC  NULLS FIRST, ((((CAST(rt1.c1 AS REAL))OR(((rt1.c1)>(rt1.c0)))))AND(((rt1.c0)!=(rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c2 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE WHEN '0.9037505188972321' THEN rt1.c2 END)) DESC  NULLS FIRST, ((((CAST(rt1.c1 AS REAL))OR(((rt1.c1)>(rt1.c0)))))AND(((rt1.c0)!=(rt1.c1)))) ASC);
SELECT * FROM rt1 WHERE (CAST(CAST(rt1.c2 AS INTEGER) AS BLOB)) ORDER BY (NOT (CASE WHEN '0.9037505188972321' THEN rt1.c2 END)) DESC  NULLS FIRST, ((((CAST(rt1.c1 AS REAL))OR(((rt1.c1)>(rt1.c0)))))AND(((rt1.c0)!=(rt1.c1)))) ASC;
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((vt1.c0 IN ()))) INNER JOIN t0 ON (~ (CAST(t0.c0 AS BLOB))) WHERE ((0X6bb43fa9 COLLATE RTRIM IN (786782631))) ORDER BY 'k2f緿';
SELECT SUM(count) FROM (SELECT (((0x6bb43fa9 COLLATE RTRIM IN (786782631))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((vt1.c0 IN ()))) INNER JOIN t0 ON (~ (CAST(t0.c0 AS BLOB))) ORDER BY 'k2f緿');
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((vt1.c0 IN ()))) INNER JOIN t0 ON (~ (CAST(t0.c0 AS BLOB))) WHERE ((0X6bb43fa9 COLLATE RTRIM IN (786782631))) ORDER BY 'k2f緿';
SELECT SUM(count) FROM (SELECT (((0x6bb43fa9 COLLATE RTRIM IN (786782631))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((vt1.c0 IN ()))) INNER JOIN t0 ON (~ (CAST(t0.c0 AS BLOB))) ORDER BY 'k2f緿');
SELECT ALL * FROM vt0 FULL OUTER JOIN vt1 ON (NOT ((vt1.c0 IN ()))) INNER JOIN t0 ON (~ (CAST(t0.c0 AS BLOB))) WHERE ((0X6bb43fa9 COLLATE RTRIM IN (786782631))) ORDER BY 'k2f緿';
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 NOT INDEXED WHERE (TYPEOF(DISTINCT (('*_+')>=(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (('*_+')>=(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 NOT INDEXED WHERE (TYPEOF(DISTINCT (('*_+')>=(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (('*_+')>=(rt1.c0)))) IS TRUE)  as count FROM rt1, vt0, t0, vt1);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 NOT INDEXED WHERE (TYPEOF(DISTINCT (('*_+')>=(rt1.c0))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c0 THEN rt1.c2 END))!=((((rt1.c1) IS FALSE)))) CROSS JOIN vt0 ON rt1.c2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c0 THEN rt1.c2 END))<>((((rt1.c1) IS FALSE)))) CROSS JOIN vt0 ON rt1.c2);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c0 THEN rt1.c2 END))!=((((rt1.c1) IS FALSE)))) CROSS JOIN vt0 ON rt1.c2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t0 ON (((CASE vt0.c0  WHEN t0.c0 THEN rt1.c2 END))<>((((rt1.c1) IS FALSE)))) CROSS JOIN vt0 ON rt1.c2);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((CAST(x'' AS REAL))AND(((t0.c0) ISNULL))))OR(x''))) ORDER BY '*k9姱&_]' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS REAL))AND(((t0.c0) ISNULL))))OR(x''))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY '*k9姱&_]' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((CAST(x'' AS REAL))AND(((t0.c0) ISNULL))))OR(x''))) ORDER BY '*k9姱&_]' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(x'' AS REAL))AND(((t0.c0) ISNULL))))OR(x''))) IS TRUE)  as count FROM vt0, rt1, t0 ORDER BY '*k9姱&_]' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (((((CAST(x'' AS REAL))AND(((t0.c0) ISNULL))))OR(x''))) ORDER BY '*k9姱&_]' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (t0.c0 COLLATE BINARY IN ('951186858')) DESC, CASE WHEN '769173219' THEN '1679413366' ELSE ((((vt0.c0)OR(rt1.c2)))AND(t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY (t0.c0 COLLATE BINARY IN ('951186858')) DESC, CASE WHEN '769173219' THEN '1679413366' ELSE ((((vt0.c0)OR(rt1.c2)))AND(t0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (t0.c0 COLLATE BINARY IN ('951186858')) DESC, CASE WHEN '769173219' THEN '1679413366' ELSE ((((vt0.c0)OR(rt1.c2)))AND(t0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0, t0, vt1 ORDER BY (t0.c0 COLLATE BINARY IN ('951186858')) DESC, CASE WHEN '769173219' THEN '1679413366' ELSE ((((vt0.c0)OR(rt1.c2)))AND(t0.c0)) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0, t0, vt1 WHERE (CAST(t0.c0 AS NUMERIC)) ORDER BY (t0.c0 COLLATE BINARY IN ('951186858')) DESC, CASE WHEN '769173219' THEN '1679413366' ELSE ((((vt0.c0)OR(rt1.c2)))AND(t0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt1, vt0, rt1 WHERE ((+ (((NULL) BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) BETWEEN (rt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT ALL * FROM t0, vt1, vt0, rt1 WHERE ((+ (((NULL) BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((NULL) BETWEEN (rt1.c1) AND (vt0.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT ALL * FROM t0, vt1, vt0, rt1 WHERE ((+ (((NULL) BETWEEN (rt1.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (CAST(UPPER(rt1.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c1) AS REAL)) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (CAST(UPPER(rt1.c1) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c1) AS REAL)) IS TRUE)  as count FROM vt0, rt1, t0);
SELECT COUNT(*) FROM vt0, rt1, t0 WHERE (CAST(UPPER(rt1.c1) AS REAL));
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END) IS TRUE)  as count FROM vt1, t0, vt0);
SELECT COUNT(*) FROM vt1, t0, vt0 WHERE (CASE WHEN (((vt1.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN SQLITE_COMPILEOPTION_USED(t0.c0) END);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND ('7d'))) BETWEEN (((rt1.c2)LIKE(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))))) ORDER BY (((((NULL)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) IS FALSE) ASC, CAST('Px௒EVn<寛C' AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND ('7d'))) BETWEEN (((rt1.c2)LIKE(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt1 ORDER BY (((((NULL)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) IS FALSE) ASC, CAST('Px௒EVn<寛C' AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND ('7d'))) BETWEEN (((rt1.c2)LIKE(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))))) ORDER BY (((((NULL)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) IS FALSE) ASC, CAST('Px௒EVn<寛C' AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND ('7d'))) BETWEEN (((rt1.c2)LIKE(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))))) IS TRUE)  as count FROM t0, vt0, vt1, rt1 ORDER BY (((((NULL)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) IS FALSE) ASC, CAST('Px௒EVn<寛C' AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0, vt1, rt1 WHERE (((((rt1.c2) NOT BETWEEN (rt1.c0) AND ('7d'))) BETWEEN (((rt1.c2)LIKE(rt1.c2))) AND (((rt1.c2)>>(vt1.c0))))) ORDER BY (((((NULL)) BETWEEN ((vt0.c0)) AND ((rt1.c2)))) IS FALSE) ASC, CAST('Px௒EVn<寛C' AS REAL) DESC  NULLS FIRST;
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (LIKELY(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.030596870675720145)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (LIKELY(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.030596870675720145))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (LIKELY(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.030596870675720145)));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (LIKELY(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.030596870675720145))));
SELECT ALL * FROM t0, vt0, vt1 WHERE (vt0.c0) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN (LIKELY(vt0.c0)) AND (LIKELIHOOD(t0.c0, 0.030596870675720145)));
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((((rt1.c1))>((rt1.c1))))LIKE(rt1.c2 COLLATE NOCASE))) ORDER BY (((((vt1.c0) IS TRUE), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, vt1.c0, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))>=((rt1.c1 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), CAST(rt1.c0 AS TEXT))))  NULLS LAST, rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>((rt1.c1))))LIKE(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((vt1.c0) IS TRUE), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, vt1.c0, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))>=((rt1.c1 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), CAST(rt1.c0 AS TEXT))))  NULLS LAST, rt1.c1 ASC);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((((rt1.c1))>((rt1.c1))))LIKE(rt1.c2 COLLATE NOCASE))) ORDER BY (((((vt1.c0) IS TRUE), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, vt1.c0, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))>=((rt1.c1 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), CAST(rt1.c0 AS TEXT))))  NULLS LAST, rt1.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1))>((rt1.c1))))LIKE(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (((((vt1.c0) IS TRUE), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, vt1.c0, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))>=((rt1.c1 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), CAST(rt1.c0 AS TEXT))))  NULLS LAST, rt1.c1 ASC);
SELECT COUNT(*) FROM vt1, rt1 WHERE ((((((rt1.c1))>((rt1.c1))))LIKE(rt1.c2 COLLATE NOCASE))) ORDER BY (((((vt1.c0) IS TRUE), (((rt1.c2, rt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt1.c0, vt1.c0, rt1.c1))), ((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c2))))>=((rt1.c1 COLLATE BINARY, (((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), CAST(rt1.c0 AS TEXT))))  NULLS LAST, rt1.c1 ASC;
SELECT ALL * FROM vt1 WHERE (((((((((NULLIF(DISTINCT vt1.c0, vt1.c0))AND(((vt1.c0)OR(vt1.c0)))))AND(((vt1.c0) IS TRUE))))AND((((vt1.c0))<>((vt1.c0))))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT vt1.c0, vt1.c0))AND(((vt1.c0)OR(vt1.c0)))))AND(((vt1.c0) IS TRUE))))AND((((vt1.c0))!=((vt1.c0))))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((NULLIF(DISTINCT vt1.c0, vt1.c0))AND(((vt1.c0)OR(vt1.c0)))))AND(((vt1.c0) IS TRUE))))AND((((vt1.c0))<>((vt1.c0))))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((NULLIF(DISTINCT vt1.c0, vt1.c0))AND(((vt1.c0)OR(vt1.c0)))))AND(((vt1.c0) IS TRUE))))AND((((vt1.c0))!=((vt1.c0))))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) IS TRUE)  as count FROM vt1);
SELECT ALL * FROM vt1 WHERE (((((((((NULLIF(DISTINCT vt1.c0, vt1.c0))AND(((vt1.c0)OR(vt1.c0)))))AND(((vt1.c0) IS TRUE))))AND((((vt1.c0))<>((vt1.c0))))))OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))));
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((- (t0.c0)))OR(((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))AND((((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, '')) AND ((vt1.c0, vt1.c0, vt0.c0))))) FULL OUTER JOIN rt1 ON ((((- (rt1.c2)), ((rt1.c1) IS TRUE), ((NULL)IS('-991668301'))))>((rt1.c1 COLLATE BINARY, (rt1.c1 IN ()), rt1.c1))) WHERE ((((t0.c0, vt1.c0, t0.c0)) BETWEEN (((- (rt1.c0)), '0.8686603250818472', ((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))) AND ((((0.7420737266343199) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((0x61bef67d) NOT BETWEEN (rt1.c2) AND (x'')), ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((((rt1.c2) ISNULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt1.c0, t0.c0)) BETWEEN (((- (rt1.c0)), '0.8686603250818472', ((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))) AND ((((0.7420737266343199) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((0x61bef67d) NOT BETWEEN (rt1.c2) AND (x'')), ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((- (t0.c0)))OR(((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))AND((((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, '')) AND ((vt1.c0, vt1.c0, vt0.c0))))) FULL OUTER JOIN rt1 ON ((((- (rt1.c2)), ((rt1.c1) IS TRUE), ((NULL)IS('-991668301'))))>((rt1.c1 COLLATE BINARY, (rt1.c1 IN ()), rt1.c1))) ORDER BY ((((rt1.c2) ISNULL)) ISNULL));
SELECT COUNT(*) FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((- (t0.c0)))OR(((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))AND((((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, '')) AND ((vt1.c0, vt1.c0, vt0.c0))))) FULL OUTER JOIN rt1 ON ((((- (rt1.c2)), ((rt1.c1) IS TRUE), ((NULL)IS('-991668301'))))>((rt1.c1 COLLATE BINARY, (rt1.c1 IN ()), rt1.c1))) WHERE ((((t0.c0, vt1.c0, t0.c0)) BETWEEN (((- (rt1.c0)), '0.8686603250818472', ((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))) AND ((((0.7420737266343199) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((0x61bef67d) NOT BETWEEN (rt1.c2) AND (x'')), ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))) ORDER BY ((((rt1.c2) ISNULL)) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt1.c0, t0.c0)) BETWEEN (((- (rt1.c0)), '0.8686603250818472', ((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))) AND ((((0.7420737266343199) NOT BETWEEN (t0.c0) AND (vt0.c0)), ((0x61bef67d) NOT BETWEEN (rt1.c2) AND (x'')), ((rt1.c2) BETWEEN (vt1.c0) AND (vt1.c0)))))) IS TRUE)  as count FROM vt1, vt0 RIGHT OUTER JOIN t0 ON (((((- (t0.c0)))OR(((rt1.c1) BETWEEN (vt1.c0) AND (vt0.c0)))))AND((((rt1.c2, t0.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c2, '')) AND ((vt1.c0, vt1.c0, vt0.c0))))) FULL OUTER JOIN rt1 ON ((((- (rt1.c2)), ((rt1.c1) IS TRUE), ((NULL)IS('-991668301'))))>((rt1.c1 COLLATE BINARY, (rt1.c1 IN ()), rt1.c1))) ORDER BY ((((rt1.c2) ISNULL)) ISNULL));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END)OR((- (rt1.c2)))))AND(CAST(rt1.c0 AS BLOB))) INNER JOIN vt0 ON ((((vt0.c0)OR(((((vt0.c0)AND(vt1.c0)))OR(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 END)) INNER JOIN t0 ON ((((NULL) NOT BETWEEN ('1222487201') AND (t0.c0)))*(((vt1.c0)<<(rt1.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END)OR((- (rt1.c2)))))AND(CAST(rt1.c0 AS BLOB))) INNER JOIN vt0 ON ((((vt0.c0)OR(((((vt0.c0)AND(vt1.c0)))OR(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 END)) INNER JOIN t0 ON ((((NULL) NOT BETWEEN ('1222487201') AND (t0.c0)))*(((vt1.c0)<<(rt1.c0)))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt1 ON ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END)OR((- (rt1.c2)))))AND(CAST(rt1.c0 AS BLOB))) INNER JOIN vt0 ON ((((vt0.c0)OR(((((vt0.c0)AND(vt1.c0)))OR(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 END)) INNER JOIN t0 ON ((((NULL) NOT BETWEEN ('1222487201') AND (t0.c0)))*(((vt1.c0)<<(rt1.c0)))) WHERE (vt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt1 ON ((((CASE rt1.c1  WHEN rt1.c2 THEN rt1.c1 ELSE t0.c0 END)OR((- (rt1.c2)))))AND(CAST(rt1.c0 AS BLOB))) INNER JOIN vt0 ON ((((vt0.c0)OR(((((vt0.c0)AND(vt1.c0)))OR(rt1.c2)))))AND(CASE WHEN rt1.c1 THEN vt1.c0 END)) INNER JOIN t0 ON ((((NULL) NOT BETWEEN ('1222487201') AND (t0.c0)))*(((vt1.c0)<<(rt1.c0)))));
SELECT ALL * FROM t0, vt0, vt1 WHERE ((- (NULL))) ORDER BY (((CAST(vt1.c0 AS BLOB)))!=((NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((CAST(vt1.c0 AS BLOB)))!=((NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((- (NULL))) ORDER BY (((CAST(vt1.c0 AS BLOB)))!=((NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM t0, vt0, vt1 ORDER BY (((CAST(vt1.c0 AS BLOB)))!=((NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM t0, vt0, vt1 WHERE ((- (NULL))) ORDER BY (((CAST(vt1.c0 AS BLOB)))!=((NULL))) DESC  NULLS FIRST;
SELECT * FROM t0, vt0, vt1 RIGHT OUTER JOIN rt1 ON ((((TRIM(DISTINCT rt1.c2, vt1.c0))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)))))AND((rt1.c1 IN (0.15374680669994278, vt1.c0)))) WHERE (((0X7fffffffffffffff)LIKE(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0X7fffffffffffffff)LIKE(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0, vt0, vt1 RIGHT OUTER JOIN rt1 ON ((((TRIM(DISTINCT rt1.c2, vt1.c0))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)))))AND((rt1.c1 IN (0.15374680669994278, vt1.c0)))));
SELECT * FROM t0, vt0, vt1 RIGHT OUTER JOIN rt1 ON ((((TRIM(DISTINCT rt1.c2, vt1.c0))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)))))AND((rt1.c1 IN (0.15374680669994278, vt1.c0)))) WHERE (((0X7fffffffffffffff)LIKE(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((0X7fffffffffffffff)LIKE(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN t0.c0 END))) IS TRUE)  as count FROM t0, vt0, vt1 RIGHT OUTER JOIN rt1 ON ((((TRIM(DISTINCT rt1.c2, vt1.c0))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)))))AND((rt1.c1 IN (0.15374680669994278, vt1.c0)))));
SELECT * FROM t0, vt0, vt1 RIGHT OUTER JOIN rt1 ON ((((TRIM(DISTINCT rt1.c2, vt1.c0))OR(((t0.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)))))AND((rt1.c1 IN (0.15374680669994278, vt1.c0)))) WHERE (((0X7fffffffffffffff)LIKE(CASE rt1.c0  WHEN t0.c0 THEN t0.c0 WHEN rt1.c2 THEN x'' WHEN rt1.c2 THEN t0.c0 END)));
SELECT COUNT(*) FROM vt1, rt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c1) BETWEEN (0.6273610524229681) AND (t0.c0)) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c0)) END FULL OUTER JOIN t0 ON (~ (rt1.c0)) WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c1) BETWEEN (0.6273610524229681) AND (t0.c0)) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c0)) END FULL OUTER JOIN t0 ON (~ (rt1.c0)));
SELECT COUNT(*) FROM vt1, rt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c1) BETWEEN (0.6273610524229681) AND (t0.c0)) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c0)) END FULL OUTER JOIN t0 ON (~ (rt1.c0)) WHERE (((vt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE)) IS TRUE)  as count FROM vt1, rt1 FULL OUTER JOIN vt0 ON CASE WHEN ((rt1.c1) BETWEEN (0.6273610524229681) AND (t0.c0)) THEN ((((vt0.c0)AND(rt1.c2)))AND(rt1.c0)) END FULL OUTER JOIN t0 ON (~ (rt1.c0)));
SELECT * FROM vt1, t0, vt0, rt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT * FROM vt1, t0, vt0, rt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt1, t0, vt0, rt1);
SELECT * FROM vt1, t0, vt0, rt1 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt1 WHERE (vt1.c0) ORDER BY SQLITE_COMPILEOPTION_GET(vt1.c0) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((rt1.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c1 COLLATE RTRIM IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c1 COLLATE RTRIM IN ()));
SELECT COUNT(*) FROM rt1 WHERE (((HEX(DISTINCT rt1.c2))-((rt1.c0 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt1.c2))-((rt1.c0 IN (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((HEX(DISTINCT rt1.c2))-((rt1.c0 IN (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((HEX(DISTINCT rt1.c2))-((rt1.c0 IN (rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((HEX(DISTINCT rt1.c2))-((rt1.c0 IN (rt1.c2)))));
SELECT ALL * FROM t0, vt0 NOT INDEXED, rt1 WHERE (((((((rt1.c2)AND(rt1.c0)))AND(t0.c0))) NOT NULL)) ORDER BY ((((rt1.c1)-(rt1.c2)))&(((rt1.c2)OR(vt0.c0)))) DESC, ((((vt0.c0)AND(x'')))OR(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ((((rt1.c1)-(rt1.c2)))&(((rt1.c2)OR(vt0.c0)))) DESC, ((((vt0.c0)AND(x'')))OR(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0, vt0 NOT INDEXED, rt1 WHERE (((((((rt1.c2)AND(rt1.c0)))AND(t0.c0))) NOT NULL)) ORDER BY ((((rt1.c1)-(rt1.c2)))&(((rt1.c2)OR(vt0.c0)))) DESC, ((((vt0.c0)AND(x'')))OR(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)AND(rt1.c0)))AND(t0.c0))) NOT NULL)) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY ((((rt1.c1)-(rt1.c2)))&(((rt1.c2)OR(vt0.c0)))) DESC, ((((vt0.c0)AND(x'')))OR(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM t0, vt0 NOT INDEXED, rt1 WHERE (((((((rt1.c2)AND(rt1.c0)))AND(t0.c0))) NOT NULL)) ORDER BY ((((rt1.c1)-(rt1.c2)))&(((rt1.c2)OR(vt0.c0)))) DESC, ((((vt0.c0)AND(x'')))OR(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE (rt1.c2) ORDER BY ((((((((vt1.c0)AND(rt1.c2)))OR(vt0.c0)))AND(CASE WHEN '' THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)))AND(x'')) ASC  NULLS FIRST, (NOT ((+ ('2127091688')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY ((((((((vt1.c0)AND(rt1.c2)))OR(vt0.c0)))AND(CASE WHEN '' THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)))AND(x'')) ASC  NULLS FIRST, (NOT ((+ ('2127091688')))) DESC);
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE (rt1.c2) ORDER BY ((((((((vt1.c0)AND(rt1.c2)))OR(vt0.c0)))AND(CASE WHEN '' THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)))AND(x'')) ASC  NULLS FIRST, (NOT ((+ ('2127091688')))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, t0, vt1, rt1 ORDER BY ((((((((vt1.c0)AND(rt1.c2)))OR(vt0.c0)))AND(CASE WHEN '' THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)))AND(x'')) ASC  NULLS FIRST, (NOT ((+ ('2127091688')))) DESC);
SELECT ALL * FROM vt0, t0, vt1, rt1 WHERE (rt1.c2) ORDER BY ((((((((vt1.c0)AND(rt1.c2)))OR(vt0.c0)))AND(CASE WHEN '' THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 WHEN rt1.c1 THEN t0.c0 ELSE rt1.c0 END)))AND(x'')) ASC  NULLS FIRST, (NOT ((+ ('2127091688')))) DESC;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0) IS FALSE) COLLATE RTRIM  NULLS FIRST;
SELECT ALL * FROM vt1, rt1, t0 WHERE (CASE (((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, x'', t0.c0)) AND ((t0.c0, rt1.c0, vt1.c0)))  WHEN rt1.c2 THEN ((((((((rt1.c2)OR(t0.c0)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((rt1.c1)=(t0.c0)) THEN ((t0.c0)||(rt1.c0)) ELSE ((rt1.c0)OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, x'', t0.c0)) AND ((t0.c0, rt1.c0, vt1.c0)))  WHEN rt1.c2 THEN ((((((((rt1.c2)OR(t0.c0)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((rt1.c1)==(t0.c0)) THEN ((t0.c0)||(rt1.c0)) ELSE ((rt1.c0)OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, rt1, t0 NOT INDEXED);
SELECT ALL * FROM vt1, rt1, t0 WHERE (CASE (((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, x'', t0.c0)) AND ((t0.c0, rt1.c0, vt1.c0)))  WHEN rt1.c2 THEN ((((((((rt1.c2)OR(t0.c0)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((rt1.c1)=(t0.c0)) THEN ((t0.c0)||(rt1.c0)) ELSE ((rt1.c0)OR(vt1.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, x'', t0.c0)) AND ((t0.c0, rt1.c0, vt1.c0)))  WHEN rt1.c2 THEN ((((((((rt1.c2)OR(t0.c0)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((rt1.c1)==(t0.c0)) THEN ((t0.c0)||(rt1.c0)) ELSE ((rt1.c0)OR(vt1.c0)) END) IS TRUE)  as count FROM vt1, rt1, t0 NOT INDEXED);
SELECT ALL * FROM vt1, rt1, t0 WHERE (CASE (((t0.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c0, x'', t0.c0)) AND ((t0.c0, rt1.c0, vt1.c0)))  WHEN rt1.c2 THEN ((((((((rt1.c2)OR(t0.c0)))OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c2)) WHEN rt1.c0 THEN ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c2)) WHEN ((rt1.c1)=(t0.c0)) THEN ((t0.c0)||(rt1.c0)) ELSE ((rt1.c0)OR(vt1.c0)) END);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (NULL);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((x'c451')<=(t0.c0))))) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) IS FALSE)))  NULLS LAST, ((((((t0.c0)) BETWEEN (('F/h+&')) AND ((t0.c0)))))<>(((t0.c0 IN (t0.c0)))))  NULLS FIRST, (((- (t0.c0)))|(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((x'c451')<=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) IS FALSE)))  NULLS LAST, ((((((t0.c0)) BETWEEN (('F/h+&')) AND ((t0.c0)))))<>(((t0.c0 IN (t0.c0)))))  NULLS FIRST, (((- (t0.c0)))|(CAST(t0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((x'c451')<=(t0.c0))))) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) IS FALSE)))  NULLS LAST, ((((((t0.c0)) BETWEEN (('F/h+&')) AND ((t0.c0)))))<>(((t0.c0 IN (t0.c0)))))  NULLS FIRST, (((- (t0.c0)))|(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)>=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((x'c451')<=(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) IS FALSE)))  NULLS LAST, ((((((t0.c0)) BETWEEN (('F/h+&')) AND ((t0.c0)))))<>(((t0.c0 IN (t0.c0)))))  NULLS FIRST, (((- (t0.c0)))|(CAST(t0.c0 AS NUMERIC)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)>=(t0.c0))) BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (((x'c451')<=(t0.c0))))) ORDER BY (((((t0.c0)OR(t0.c0)))AND(t0.c0)) IN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))), ((t0.c0) IS FALSE)))  NULLS LAST, ((((((t0.c0)) BETWEEN (('F/h+&')) AND ((t0.c0)))))<>(((t0.c0 IN (t0.c0)))))  NULLS FIRST, (((- (t0.c0)))|(CAST(t0.c0 AS NUMERIC)))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((((vt1.c0))>((vt1.c0)))) BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c1)OR(rt1.c0))))) ORDER BY ((CASE NULL  WHEN rt1.c2 THEN vt1.c0 END)&((- (rt1.c1)))) DESC, ((vt1.c0)+(CASE WHEN rt1.c0 THEN rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>((vt1.c0)))) BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c1)OR(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((CASE NULL  WHEN rt1.c2 THEN vt1.c0 END)&((- (rt1.c1)))) DESC, ((vt1.c0)+(CASE WHEN rt1.c0 THEN rt1.c2 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((((vt1.c0))>((vt1.c0)))) BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c1)OR(rt1.c0))))) ORDER BY ((CASE NULL  WHEN rt1.c2 THEN vt1.c0 END)&((- (rt1.c1)))) DESC, ((vt1.c0)+(CASE WHEN rt1.c0 THEN rt1.c2 END)) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt1.c0))>((vt1.c0)))) BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c1)OR(rt1.c0))))) IS TRUE)  as count FROM vt1, rt1, vt0 ORDER BY ((CASE NULL  WHEN rt1.c2 THEN vt1.c0 END)&((- (rt1.c1)))) DESC, ((vt1.c0)+(CASE WHEN rt1.c0 THEN rt1.c2 END)) DESC);
SELECT ALL COUNT(*) FROM vt1, rt1, vt0 WHERE ((((((vt1.c0))>((vt1.c0)))) BETWEEN (((rt1.c1) NOT NULL)) AND (((rt1.c1)OR(rt1.c0))))) ORDER BY ((CASE NULL  WHEN rt1.c2 THEN vt1.c0 END)&((- (rt1.c1)))) DESC, ((vt1.c0)+(CASE WHEN rt1.c0 THEN rt1.c2 END)) DESC;
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (NULLIF(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0xffffffffe818ee8b)), rt1.c2 COLLATE NOCASE)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0xffffffffe818ee8b)), rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (NULLIF(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0xffffffffe818ee8b)), rt1.c2 COLLATE NOCASE)) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0xffffffffe818ee8b)), rt1.c2 COLLATE NOCASE)) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY NULL DESC);
SELECT COUNT(*) FROM rt1, vt0, vt1 WHERE (NULLIF(((vt1.c0) NOT BETWEEN (rt1.c1) AND (0xffffffffe818ee8b)), rt1.c2 COLLATE NOCASE)) ORDER BY NULL DESC;
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (json_object(vt0.c0, vt0.c0)))) ORDER BY (((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t0.c0))))>=((CASE t0.c0  WHEN t0.c0 THEN -3.66379867E8 ELSE '164865873' END, ((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), ((vt0.c0)&(t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (json_object(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t0.c0))))>=((CASE t0.c0  WHEN t0.c0 THEN -3.66379867E8 ELSE '164865873' END, ((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), ((vt0.c0)&(t0.c0))))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((- (json_object(vt0.c0, vt0.c0)))) ORDER BY (((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t0.c0))))>=((CASE t0.c0  WHEN t0.c0 THEN -3.66379867E8 ELSE '164865873' END, ((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), ((vt0.c0)&(t0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (json_object(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS INTEGER), ((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(t0.c0))))>=((CASE t0.c0  WHEN t0.c0 THEN -3.66379867E8 ELSE '164865873' END, ((((vt0.c0)AND(t0.c0)))OR(vt0.c0)), ((vt0.c0)&(t0.c0))))) ASC);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0)OR(vt0.c0)) IN ())) ORDER BY json_remove(((vt0.c0)<=(vt0.c0)), (+ (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY json_remove(((vt0.c0)<=(vt0.c0)), (+ (vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0, vt1, t0 WHERE ((((vt0.c0)OR(vt0.c0)) IN ())) ORDER BY json_remove(((vt0.c0)<=(vt0.c0)), (+ (vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED, vt1, t0 ORDER BY json_remove(((vt0.c0)<=(vt0.c0)), (+ (vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (x'') ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, rt1, vt0 ORDER BY rt1.c1  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (x'') ORDER BY rt1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0, vt1, rt1, vt0 ORDER BY rt1.c1  NULLS LAST);
SELECT COUNT(*) FROM t0, vt1, rt1, vt0 WHERE (x'') ORDER BY rt1.c1  NULLS LAST;
SELECT * FROM t0, vt0, vt1 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0, vt1);
SELECT * FROM t0, vt0, vt1 WHERE (x'' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt1.c0) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM t0, vt1);
SELECT ALL COUNT(*) FROM t0, vt1 WHERE (((vt1.c0) IS TRUE) COLLATE BINARY);
SELECT * FROM rt1 WHERE ((+ ('-1366280011')) COLLATE BINARY) ORDER BY CAST((- (rt1.c2)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ('-1366280011')) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST((- (rt1.c2)) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ('-1366280011')) COLLATE BINARY) ORDER BY CAST((- (rt1.c2)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ('-1366280011')) COLLATE BINARY) IS TRUE)  as count FROM rt1 ORDER BY CAST((- (rt1.c2)) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((+ ('-1366280011')) COLLATE BINARY) ORDER BY CAST((- (rt1.c2)) AS INTEGER) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE (((((t0.c0)GLOB(rt1.c0))) IS FALSE)) ORDER BY (((rt1.c2)) BETWEEN (((((rt1.c2))<((rt1.c1))))) AND ((((rt1.c1) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY (((rt1.c2)) BETWEEN (((((rt1.c2))<((rt1.c1))))) AND ((((rt1.c1) IS FALSE)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE (((((t0.c0)GLOB(rt1.c0))) IS FALSE)) ORDER BY (((rt1.c2)) BETWEEN (((((rt1.c2))<((rt1.c1))))) AND ((((rt1.c1) IS FALSE)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0)GLOB(rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY (((rt1.c2)) BETWEEN (((((rt1.c2))<((rt1.c1))))) AND ((((rt1.c1) IS FALSE)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0, vt1, t0 WHERE (((((t0.c0)GLOB(rt1.c0))) IS FALSE)) ORDER BY (((rt1.c2)) BETWEEN (((((rt1.c2))<((rt1.c1))))) AND ((((rt1.c1) IS FALSE)))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST((~ (rt1.c1)) AS NUMERIC)) ORDER BY ((((-1501916741)OR(CAST(rt1.c1 AS INTEGER))))OR(((x'') IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((((-1501916741)OR(CAST(rt1.c1 AS INTEGER))))OR(((x'') IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST((~ (rt1.c1)) AS NUMERIC)) ORDER BY ((((-1501916741)OR(CAST(rt1.c1 AS INTEGER))))OR(((x'') IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (rt1.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY ((((-1501916741)OR(CAST(rt1.c1 AS INTEGER))))OR(((x'') IS TRUE))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CAST((~ (rt1.c1)) AS NUMERIC)) ORDER BY ((((-1501916741)OR(CAST(rt1.c1 AS INTEGER))))OR(((x'') IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS BLOB)) ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) IS FALSE))-(((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) IS FALSE))-(((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS BLOB)) ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) IS FALSE))-(((vt1.c0)<(vt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt1.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM vt1 ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) IS FALSE))-(((vt1.c0)<(vt1.c0)))));
SELECT ALL * FROM vt1 WHERE (CAST(CAST(vt1.c0 AS INTEGER) AS BLOB)) ORDER BY ((vt1.c0) ISNULL) COLLATE NOCASE ASC  NULLS LAST, ((((vt1.c0) IS FALSE))-(((vt1.c0)<(vt1.c0))));
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt1.c0) IS TRUE)  as count FROM vt1 ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST);
SELECT * FROM vt1 WHERE (vt1.c0) ORDER BY (CAST(vt1.c0 AS REAL) IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt1, t0, rt1 WHERE (((rt1.c1) NOT BETWEEN (CASE rt1.c2  WHEN NULL THEN 0.6744879825384859 ELSE vt1.c0 END) AND (CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (CASE rt1.c2  WHEN NULL THEN 0.6744879825384859 ELSE vt1.c0 END) AND (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL * FROM vt1, t0, rt1 WHERE (((rt1.c1) NOT BETWEEN (CASE rt1.c2  WHEN NULL THEN 0.6744879825384859 ELSE vt1.c0 END) AND (CAST(rt1.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1) NOT BETWEEN (CASE rt1.c2  WHEN NULL THEN 0.6744879825384859 ELSE vt1.c0 END) AND (CAST(rt1.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt1, t0, rt1);
SELECT ALL * FROM vt1, t0, rt1 WHERE (((rt1.c1) NOT BETWEEN (CASE rt1.c2  WHEN NULL THEN 0.6744879825384859 ELSE vt1.c0 END) AND (CAST(rt1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c1 COLLATE RTRIM) IS TRUE)) IS TRUE)  as count FROM rt1, vt1, vt0 ORDER BY x'' ASC);
SELECT ALL COUNT(*) FROM rt1, vt1, vt0 WHERE (((rt1.c1 COLLATE RTRIM) IS TRUE)) ORDER BY x'' ASC;
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE (CASE ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))AND(0xffffffff80461aae)))AND(vt1.c0))  WHEN ((rt1.c2) ISNULL) THEN vt0.c0 COLLATE NOCASE ELSE ((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))AND(0xffffffff80461aae)))AND(vt1.c0))  WHEN ((rt1.c2) ISNULL) THEN vt0.c0 COLLATE NOCASE ELSE ((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE (CASE ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))AND(0xffffffff80461aae)))AND(vt1.c0))  WHEN ((rt1.c2) ISNULL) THEN vt0.c0 COLLATE NOCASE ELSE ((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) END) ORDER BY NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))AND(0xffffffff80461aae)))AND(vt1.c0))  WHEN ((rt1.c2) ISNULL) THEN vt0.c0 COLLATE NOCASE ELSE ((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0, vt1, t0 ORDER BY NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0, vt1, t0 WHERE (CASE ((((((((t0.c0)AND(rt1.c1)))OR(rt1.c2)))AND(0xffffffff80461aae)))AND(vt1.c0))  WHEN ((rt1.c2) ISNULL) THEN vt0.c0 COLLATE NOCASE ELSE ((((rt1.c1)OR(vt1.c0)))AND(rt1.c0)) END) ORDER BY NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt0, vt1 WHERE (0X37747467);
SELECT SUM(count) FROM (SELECT ((0x37747467) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0X37747467);
SELECT SUM(count) FROM (SELECT ((0x37747467) IS TRUE)  as count FROM vt0, vt1);
SELECT ALL * FROM vt0, vt1 WHERE (0X37747467);
SELECT ALL * FROM vt1, rt1 WHERE (((((rt1.c0)!=(vt1.c0)))/(((vt1.c0) NOT NULL)))) ORDER BY (CASE 903607041  WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END IN (((rt1.c1)OR('-783674293'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (CASE 903607041  WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END IN (((rt1.c1)OR('-783674293'))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (((((rt1.c0)!=(vt1.c0)))/(((vt1.c0) NOT NULL)))) ORDER BY (CASE 903607041  WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END IN (((rt1.c1)OR('-783674293'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(vt1.c0)))/(((vt1.c0) NOT NULL)))) IS TRUE)  as count FROM vt1, rt1 ORDER BY (CASE 903607041  WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END IN (((rt1.c1)OR('-783674293'))))  NULLS FIRST);
SELECT ALL * FROM vt1, rt1 WHERE (((((rt1.c0)!=(vt1.c0)))/(((vt1.c0) NOT NULL)))) ORDER BY (CASE 903607041  WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 END IN (((rt1.c1)OR('-783674293'))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS BLOB))|(load_extension(rt1.c2))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(x'b42d' COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) WHERE (((((vt1.c0)<=(rt1.c1)))==(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(rt1.c1)))==(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS BLOB))|(load_extension(rt1.c2))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(x'b42d' COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS BLOB))|(load_extension(rt1.c2))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(x'b42d' COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()) WHERE (((((vt1.c0)<=(rt1.c1)))==(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((vt1.c0)<=(rt1.c1)))==(((vt0.c0) BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t0 ON ((CAST(rt1.c1 AS BLOB))|(load_extension(rt1.c2))) INNER JOIN vt0 ON ((CAST(vt0.c0 AS BLOB))<>(x'b42d' COLLATE NOCASE)) FULL OUTER JOIN vt1 ON (((vt0.c0) IS TRUE) IN ()));
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE ((((+ (vt0.c0)))<(((rt1.c2)%(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))<(((rt1.c2)%(rt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE ((((+ (vt0.c0)))<(((rt1.c2)%(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))<(((rt1.c2)%(rt1.c0))))) IS TRUE)  as count FROM t0, vt1, vt0, rt1);
SELECT COUNT(*) FROM t0, vt1, vt0, rt1 WHERE ((((+ (vt0.c0)))<(((rt1.c2)%(rt1.c0)))));
SELECT ALL * FROM t0 NOT INDEXED, vt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))))) ORDER BY LIKELIHOOD(DISTINCT (rt1.c0 IN (rt1.c0, rt1.c1)), 0.37259827863346395) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY LIKELIHOOD(DISTINCT (rt1.c0 IN (rt1.c0, rt1.c1)), 0.37259827863346395) DESC);
SELECT ALL * FROM t0 NOT INDEXED, vt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))))) ORDER BY LIKELIHOOD(DISTINCT (rt1.c0 IN (rt1.c0, rt1.c1)), 0.37259827863346395) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))))) IS TRUE)  as count FROM t0, vt0, rt1 ORDER BY LIKELIHOOD(DISTINCT (rt1.c0 IN (rt1.c0, rt1.c1)), 0.37259827863346395) DESC);
SELECT ALL * FROM t0 NOT INDEXED, vt0, rt1 WHERE ((((rt1.c1)) BETWEEN ((rt1.c1)) AND ((((((vt0.c0)AND(rt1.c0)))AND(rt1.c1)))))) ORDER BY LIKELIHOOD(DISTINCT (rt1.c0 IN (rt1.c0, rt1.c1)), 0.37259827863346395) DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, vt0.c0))<=((t0.c0, x'', t0.c0))), ((t0.c0) ISNULL), NULL)) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (t0.c0 IN (0.4105571686841676))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, vt0.c0))<=((t0.c0, x'', t0.c0))), ((t0.c0) ISNULL), NULL)) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (t0.c0 IN (0.4105571686841676)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, vt0.c0))<=((t0.c0, x'', t0.c0))), ((t0.c0) ISNULL), NULL)) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (t0.c0 IN (0.4105571686841676))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, vt0.c0))<=((t0.c0, x'', t0.c0))), ((t0.c0) ISNULL), NULL)) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (t0.c0 IN (0.4105571686841676)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((((t0.c0, t0.c0, vt0.c0))<=((t0.c0, x'', t0.c0))), ((t0.c0) ISNULL), NULL)) AND ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)), (t0.c0 IN (0.4105571686841676))))));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c2 COLLATE BINARY) AND (LIKE(t0.c0, rt1.c2, 'R'))) WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c2 COLLATE BINARY) AND (LIKE(t0.c0, rt1.c2, 'R'))));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c2 COLLATE BINARY) AND (LIKE(t0.c0, rt1.c2, 'R'))) WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt1.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM t0, rt1 FULL OUTER JOIN vt0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c2 COLLATE BINARY) AND (LIKE(t0.c0, rt1.c2, 'R'))));
SELECT ALL * FROM t0, rt1 FULL OUTER JOIN vt0 ON rt1.c0 FULL OUTER JOIN vt1 ON ((TYPEOF(DISTINCT rt1.c0)) BETWEEN (rt1.c2 COLLATE BINARY) AND (LIKE(t0.c0, rt1.c2, 'R'))) WHERE (CAST(vt1.c0 AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (NOT (IFNULL(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt1 ON ((CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN '-2025882170' WHEN NULL THEN vt1.c0 ELSE rt1.c0 END)||(((t0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) FULL OUTER JOIN t0 ON json_extract((rt1.c1 IN (-305053944)), (((t0.c0, x'71377aa0', rt1.c0, rt1.c1, rt1.c2))<=((rt1.c2, vt0.c0, rt1.c0, rt1.c0, rt1.c0)))) WHERE ((((vt0.c0 IN ()))||((rt1.c0 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))||((rt1.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (NOT (IFNULL(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt1 ON ((CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN '-2025882170' WHEN NULL THEN vt1.c0 ELSE rt1.c0 END)||(((t0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) FULL OUTER JOIN t0 ON json_extract((rt1.c1 IN (-305053944)), (((t0.c0, x'71377aa0', rt1.c0, rt1.c1, rt1.c2))<=((rt1.c2, vt0.c0, rt1.c0, rt1.c0, rt1.c0)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON (NOT (IFNULL(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt1 ON ((CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN '-2025882170' WHEN NULL THEN vt1.c0 ELSE rt1.c0 END)||(((t0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) FULL OUTER JOIN t0 ON json_extract((rt1.c1 IN (-305053944)), (((t0.c0, x'71377aa0', rt1.c0, rt1.c1, rt1.c2))<=((rt1.c2, vt0.c0, rt1.c0, rt1.c0, rt1.c0)))) WHERE ((((vt0.c0 IN ()))||((rt1.c0 IN ())))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))||((rt1.c0 IN ())))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON (NOT (IFNULL(vt0.c0, vt0.c0))) LEFT OUTER JOIN vt1 ON ((CASE rt1.c2  WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c1 THEN '-2025882170' WHEN NULL THEN vt1.c0 ELSE rt1.c0 END)||(((t0.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) FULL OUTER JOIN t0 ON json_extract((rt1.c1 IN (-305053944)), (((t0.c0, x'71377aa0', rt1.c0, rt1.c1, rt1.c2))<=((rt1.c2, vt0.c0, rt1.c0, rt1.c0, rt1.c0)))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM ASC);
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (+ (CASE vt1.c0  WHEN '0.38751277036848597' THEN vt1.c0 ELSE vt1.c0 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (+ (CASE vt1.c0  WHEN '0.38751277036848597' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (+ (CASE vt1.c0  WHEN '0.38751277036848597' THEN vt1.c0 ELSE vt1.c0 END)) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt1 RIGHT OUTER JOIN t0 ON (+ (CASE vt1.c0  WHEN '0.38751277036848597' THEN vt1.c0 ELSE vt1.c0 END)));
SELECT ALL COUNT(*) FROM vt1 RIGHT OUTER JOIN t0 ON (+ (CASE vt1.c0  WHEN '0.38751277036848597' THEN vt1.c0 ELSE vt1.c0 END)) WHERE (NULL);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c0) IS FALSE)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (((t0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt1.c0) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM vt1);
SELECT ALL COUNT(*) FROM vt1 WHERE (((((vt1.c0) NOTNULL)) IS FALSE));
SELECT * FROM t0, vt1, vt0, rt1 WHERE (CASE ((rt1.c1) NOTNULL)  WHEN x'11cb' THEN (rt1.c2 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) ORDER BY -6.71813448E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOTNULL)  WHEN x'11cb' THEN (rt1.c2 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0, rt1 ORDER BY -6.71813448E8  NULLS LAST);
SELECT * FROM t0, vt1, vt0, rt1 WHERE (CASE ((rt1.c1) NOTNULL)  WHEN x'11cb' THEN (rt1.c2 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) ORDER BY -6.71813448E8  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOTNULL)  WHEN x'11cb' THEN (rt1.c2 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM t0, vt1, vt0, rt1 ORDER BY -6.71813448E8  NULLS LAST);
SELECT * FROM t0, vt1, vt0, rt1 WHERE (CASE ((rt1.c1) NOTNULL)  WHEN x'11cb' THEN (rt1.c2 IN ()) ELSE ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c0)) END) ORDER BY -6.71813448E8  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (NULL) AND (rt1.c0)))==((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (NULL) AND (rt1.c0)))==((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (NULL) AND (rt1.c0)))==((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2) BETWEEN (NULL) AND (rt1.c0)))==((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c2) BETWEEN (NULL) AND (rt1.c0)))==((rt1.c1 IN ()))));
SELECT * FROM rt1, vt0, vt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(-3.66379867E8)))OR(vt1.c0)))AND(rt1.c2)))||((NOT (rt1.c0))))) ORDER BY (((rt1.c0)<=(rt1.c0)) IN (COALESCE(NULL, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)OR(rt1.c0)))OR(-3.66379867E8)))OR(vt1.c0)))AND(rt1.c2)))||((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY (((rt1.c0)<=(rt1.c0)) IN (COALESCE(NULL, vt1.c0)))  NULLS FIRST);
SELECT * FROM rt1, vt0, vt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(-3.66379867E8)))OR(vt1.c0)))AND(rt1.c2)))||((NOT (rt1.c0))))) ORDER BY (((rt1.c0)<=(rt1.c0)) IN (COALESCE(NULL, vt1.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c2)OR(rt1.c0)))OR(-3.66379867E8)))OR(vt1.c0)))AND(rt1.c2)))||((NOT (rt1.c0))))) IS TRUE)  as count FROM rt1, vt0, vt1 ORDER BY (((rt1.c0)<=(rt1.c0)) IN (COALESCE(NULL, vt1.c0)))  NULLS FIRST);
SELECT * FROM rt1, vt0, vt1 WHERE (((((((((((rt1.c2)OR(rt1.c0)))OR(-3.66379867E8)))OR(vt1.c0)))AND(rt1.c2)))||((NOT (rt1.c0))))) ORDER BY (((rt1.c0)<=(rt1.c0)) IN (COALESCE(NULL, vt1.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS REAL)) ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS REAL)) ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS REAL)) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (CAST((((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((t0.c0, x'', t0.c0)) AND ((t0.c0, t0.c0, t0.c0))) AS REAL)) ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c0 IN ()))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)))  NULLS LAST;
