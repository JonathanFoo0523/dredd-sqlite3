-- Time: 2024/06/09 14:51:48
-- Database: database49
-- Database version: 3.40.0
-- seed value: 3376609649
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
COMMIT; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, x'', NULL); -- 0ms;
PRAGMA temp.cache_spill = false; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c2, c1)=('fs', 'Vc', 0.9051112271415418); -- 0ms;
UPDATE OR ABORT rt0 SET c1=NULL, c0=0.20114571883300025, c0='25396624' WHERE (((((rt0.c1)<<(''))))=(('25396624'))); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL) WHERE ((((CAST(vt0.c1 AS INTEGER))OR(((vt0.c0)LIKE(vt0.c0)))))AND((- (vt0.c1)))); -- 0ms;
UPDATE OR REPLACE vt0 SET c1=x''; -- 0ms;
PRAGMA main.threads = 1776231844437794139; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END TRANSACTION; -- 0ms;
VACUUM; -- 9ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1703235475); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '6817'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR ABORT vt0 SET c0=x'', c1='' WHERE ((((vt0.c1) ISNULL))&((NOT (1728075710)))); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES (x'103b'); -- 0ms;
ANALYZE; -- 0ms;
DROP TABLE rt0; -- 4ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (x'')) AS INTEGER); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='G-'; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '62716'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (-1077800749, x''); -- 0ms;
CREATE VIEW v0(c0) AS SELECT COUNT(*) FROM vt0 WHERE (x'') GROUP BY (((((vt0.c0)OR('1154742867')))AND(vt0.c0)) IN ()) HAVING CAST((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'', '-240253932'), (NULL, 0.6873579822316788), (NULL, '0.6873579822316788'), (NULL, 0.6873579822316788), (0.20114571883300025, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1649953473); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(NULL, 0X7592677f); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.021855860054079468), (''), (x''), (0xffffffffbfc210d3), (NULL); -- 0ms;
ANALYZE; -- 0ms;
UPDATE vt0 SET (c0)=(2.5396624E7) WHERE ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))))AND((~ (vt0.c1)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 5ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (''), (-1077800749), (0x7592677f); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1224'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13155'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 949979731); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2137'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.9727463982193657, x'b071'), ((~ ((x'2a4c' IN (0.20114571883300025)))), x''), ('1310350519', x'cd65'), ('', NULL), ('25396624', 0.9278079907636068); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (-2.40253932E8), (1728075710), (x''), (NULL); -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26552'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'2747'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.9727463982193657 WHERE TRIM(DISTINCT vt0.c1, vt0.c0) COLLATE RTRIM; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('?'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL), (0.7251059884739479), (NULL); -- 1ms;
INSERT OR FAIL INTO vt0(c0, c1) VALUES ('914884979', x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0X3233465c), (x''), (0.6373700821759368); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=(0.16465135974327194) WHERE json_quote(INSTR(vt0.c1, vt0.c0)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '48770'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'8d30', '\rAo-*'), (-1970090040, x'147f'), ('', '0.20114571883300025'); -- 3ms;
UPDATE vt0 SET (c1)=('N1') WHERE ((((vt0.c0)%(vt0.c1)))>>(vt0.c1)); -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1005363371); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 602141026); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=4'); -- 0ms;
UPDATE vt0 SET (c1)=(0.27786305357827834); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 317101736); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(NULL) WHERE CASE WHEN vt0.c1 THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c1, vt0.c1, vt0.c0))=((vt0.c0, vt0.c0, vt0.c0))) WHEN ((vt0.c0) IS TRUE) THEN GLOB(vt0.c0, vt0.c1) END; -- 0ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
ANALYZE v0; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('Ìèót7801938055036275384 1429219977732700754 -7550399805613925759T1723:-2951150817854811807:384 565T1539--7942274573999546833 L4T\', 0.5604022593198893); -- 0ms;
UPDATE vt0 SET c1=''; -- 18ms;
END TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0xffffffff81ac6244)))OR(CAST(NULL AS NUMERIC))))OR(CASE x''  WHEN '-968436777' THEN x'b186' END)); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '20988'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '55750'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63826'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1819891819); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 10ms;
UPDATE vt0 SET c1=x'' WHERE ((((((((LIKELIHOOD(vt0.c1, 0.03828162783795086))OR((+ (vt0.c0)))))OR((vt0.c1 IN ()))))AND(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))); -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES ('0.6373700821759368', '303779089'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (512256668, 0.08599257235402646), ('-2008584977', x'21417099'), ('-1772913085', -1803604021); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
UPDATE OR ABORT vt0 SET c1='-968547841', c1=x'01dd' WHERE (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))) IS TRUE); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 840290974); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 4ms;
INSERT OR IGNORE INTO vt0 VALUES (0xffffffffc79f6886, NULL), ('0.021855860054079468', 0.9051112271415418), (x'cf2c892c', 0x55e54279); -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (x'2284'); -- 11ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((('1144521591')AND(vt0.c0)))AND(v0.c0)) IN ()) WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((('1144521591')AND(vt0.c0)))AND(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((('1144521591')AND(vt0.c0)))AND(v0.c0)) IN ()) WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((('1144521591')AND(vt0.c0)))AND(v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((('1144521591')AND(vt0.c0)))AND(v0.c0)) IN ()) WHERE ((NOT (((vt0.c0) NOT NULL))));
SELECT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS BLOB))OR(((vt0.c1)AND(vt0.c0))))) ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))OR(((vt0.c1)AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN v0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS BLOB))OR(((vt0.c1)AND(vt0.c0))))) ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN v0.c0 END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS BLOB))OR(((vt0.c1)AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN v0.c0 END DESC  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE (((CAST(v0.c0 AS BLOB))OR(((vt0.c1)AND(vt0.c0))))) ORDER BY CASE WHEN HEX(DISTINCT vt0.c0) THEN v0.c0 END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(vt0.c1)));
SELECT * FROM vt0 WHERE (((((highlight(vt0.c0, vt0.c1, vt0.c0, 0.05972416277886772))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((highlight(vt0.c0, vt0.c1, vt0.c0, 0.05972416277886772))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((highlight(vt0.c0, vt0.c1, vt0.c0, 0.05972416277886772))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((highlight(vt0.c0, vt0.c1, vt0.c0, 0.05972416277886772))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)!=(vt0.c0))) NOT BETWEEN ('JixsT0m') AND (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(vt0.c0))) NOT BETWEEN ('JixsT0m') AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)!=(vt0.c0))) NOT BETWEEN ('JixsT0m') AND (vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<>(vt0.c0))) NOT BETWEEN ('JixsT0m') AND (vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0)!=(vt0.c0))) NOT BETWEEN ('JixsT0m') AND (vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY (((ABS(DISTINCT v0.c0)))<>((((((vt0.c1)OR(vt0.c1)))AND(NULL))))) DESC  NULLS LAST, ''  NULLS FIRST, (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0, vt0.c0, 994800841))<=((vt0.c0, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((ABS(DISTINCT v0.c0)))<>((((((vt0.c1)OR(vt0.c1)))AND(NULL))))) DESC  NULLS LAST, ''  NULLS FIRST, (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0, vt0.c0, 994800841))<=((vt0.c0, vt0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY (((ABS(DISTINCT v0.c0)))<>((((((vt0.c1)OR(vt0.c1)))AND(NULL))))) DESC  NULLS LAST, ''  NULLS FIRST, (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0, vt0.c0, 994800841))<=((vt0.c0, vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((vt0.c0)+(vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((ABS(DISTINCT v0.c0)))<>((((((vt0.c1)OR(vt0.c1)))AND(NULL))))) DESC  NULLS LAST, ''  NULLS FIRST, (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0, vt0.c0, 994800841))<=((vt0.c0, vt0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE ((((vt0.c1)) BETWEEN ((v0.c0 COLLATE BINARY)) AND ((((vt0.c0)+(vt0.c0)))))) ORDER BY (((ABS(DISTINCT v0.c0)))<>((((((vt0.c1)OR(vt0.c1)))AND(NULL))))) DESC  NULLS LAST, ''  NULLS FIRST, (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 END IN ((((vt0.c0, vt0.c0, 994800841))<=((vt0.c0, vt0.c0, vt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (v0.c0)) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((+ (v0.c0)) AS NUMERIC));
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)AND(v0.c0))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)AND(v0.c0))) NOT BETWEEN ((((v0.c0))<((v0.c0)))) AND (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT * FROM vt0, v0 WHERE (((CAST(vt0.c1 AS BLOB))%((~ (vt0.c0))))) ORDER BY (((((((((v0.c0 IN ()))AND(((v0.c0)!=(vt0.c0)))))AND((vt0.c0 IN ()))))OR(vt0.c1)))AND(((((-1398616948)AND(vt0.c0)))OR(vt0.c0)))) DESC, (((vt0.c0)>=('1136181852')) IN ()) DESC  NULLS LAST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(-1.398616948E9)), v0.c0, ((('-2116437841')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END, x'67e8', ((vt0.c1)GLOB(v0.c0))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)<>(vt0.c0)), CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)!=(1013991000)), ((v0.c0)/('\n7^ÀÄ')), vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))%((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((v0.c0 IN ()))AND(((v0.c0)!=(vt0.c0)))))AND((vt0.c0 IN ()))))OR(vt0.c1)))AND(((((-1398616948)AND(vt0.c0)))OR(vt0.c0)))) DESC, (((vt0.c0)>=('1136181852')) IN ()) DESC  NULLS LAST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(-1.398616948E9)), v0.c0, ((('-2116437841')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END, x'67e8', ((vt0.c1)GLOB(v0.c0))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)!=(vt0.c0)), CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)<>(1013991000)), ((v0.c0)/('\n7^ÀÄ')), vt0.c1)))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((CAST(vt0.c1 AS BLOB))%((~ (vt0.c0))))) ORDER BY (((((((((v0.c0 IN ()))AND(((v0.c0)!=(vt0.c0)))))AND((vt0.c0 IN ()))))OR(vt0.c1)))AND(((((-1398616948)AND(vt0.c0)))OR(vt0.c0)))) DESC, (((vt0.c0)>=('1136181852')) IN ()) DESC  NULLS LAST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(-1.398616948E9)), v0.c0, ((('-2116437841')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END, x'67e8', ((vt0.c1)GLOB(v0.c0))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)<>(vt0.c0)), CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)!=(1013991000)), ((v0.c0)/('\n7^ÀÄ')), vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))%((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((((((v0.c0 IN ()))AND(((v0.c0)!=(vt0.c0)))))AND((vt0.c0 IN ()))))OR(vt0.c1)))AND(((((-1398616948)AND(vt0.c0)))OR(vt0.c0)))) DESC, (((vt0.c0)>=('1136181852')) IN ()) DESC  NULLS LAST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(-1.398616948E9)), v0.c0, ((('-2116437841')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END, x'67e8', ((vt0.c1)GLOB(v0.c0))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)!=(vt0.c0)), CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)<>(1013991000)), ((v0.c0)/('\n7^ÀÄ')), vt0.c1)))  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (((CAST(vt0.c1 AS BLOB))%((~ (vt0.c0))))) ORDER BY (((((((((v0.c0 IN ()))AND(((v0.c0)!=(vt0.c0)))))AND((vt0.c0 IN ()))))OR(vt0.c1)))AND(((((-1398616948)AND(vt0.c0)))OR(vt0.c0)))) DESC, (((vt0.c0)>=('1136181852')) IN ()) DESC  NULLS LAST, (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)))OR(-1.398616948E9)), v0.c0, ((('-2116437841')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) AND ((CASE WHEN vt0.c1 THEN vt0.c1 END, x'67e8', ((vt0.c1)GLOB(v0.c0))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (vt0.c1) AND (v0.c0)), ((v0.c0)<>(vt0.c0)), CASE vt0.c1  WHEN v0.c0 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 END)) AND ((((vt0.c1)!=(1013991000)), ((v0.c0)/('\n7^ÀÄ')), vt0.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))<>(0.5604022593198893 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))<>(0.5604022593198893 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))<>(0.5604022593198893 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB))<>(0.5604022593198893 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CAST(v0.c0 AS BLOB))<>(0.5604022593198893 COLLATE RTRIM)));
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1)=(vt0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1)==(vt0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1)=(vt0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1)==(vt0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN ((vt0.c1)=(vt0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))) WHERE (((((v0.c0)IS('0.05972416277886772'))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND ((((vt0.c1))=(('1809046226'))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS('0.05972416277886772'))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND ((((vt0.c1))==(('1809046226')))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))) WHERE (((((v0.c0)IS('0.05972416277886772'))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND ((((vt0.c1))=(('1809046226'))))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS('0.05972416277886772'))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND ((((vt0.c1))==(('1809046226')))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))));
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON ((((vt0.c1) IS FALSE)) BETWEEN ((vt0.c0 IN ())) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0))))) WHERE (((((v0.c0)IS('0.05972416277886772'))) BETWEEN (((vt0.c1)<<(vt0.c1))) AND ((((vt0.c1))=(('1809046226'))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('X·Éìz|') IS FALSE)) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((('X·Éìz|') IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('X·Éìz|') IS FALSE)) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((('X·Éìz|') IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('X·Éìz|') IS FALSE)) ORDER BY (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY;
SELECT * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS INTEGER));
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))));
SELECT * FROM v0 WHERE (NULL) ORDER BY ((((ABS('1154742867'))OR((v0.c0 IN ()))))OR((((v0.c0))<>((v0.c0)))))  NULLS FIRST, ((((v0.c0) IS FALSE))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((ABS('1154742867'))OR((v0.c0 IN ()))))OR((((v0.c0))!=((v0.c0)))))  NULLS FIRST, ((((v0.c0) IS FALSE))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (NULL) ORDER BY ((((ABS('1154742867'))OR((v0.c0 IN ()))))OR((((v0.c0))<>((v0.c0)))))  NULLS FIRST, ((((v0.c0) IS FALSE))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY ((((ABS('1154742867'))OR((v0.c0 IN ()))))OR((((v0.c0))!=((v0.c0)))))  NULLS FIRST, ((((v0.c0) IS FALSE))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (NULL) ORDER BY ((((ABS('1154742867'))OR((v0.c0 IN ()))))OR((((v0.c0))<>((v0.c0)))))  NULLS FIRST, ((((v0.c0) IS FALSE))||(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ROUND(v0.c0 COLLATE BINARY, x'') WHERE (CAST(((((vt0.c1)OR(v0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(v0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ROUND(v0.c0 COLLATE BINARY, x''));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ROUND(v0.c0 COLLATE BINARY, x'') WHERE (CAST(((((vt0.c1)OR(v0.c0)))OR(vt0.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(v0.c0)))OR(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ROUND(v0.c0 COLLATE BINARY, x''));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ROUND(v0.c0 COLLATE BINARY, x'') WHERE (CAST(((((vt0.c1)OR(v0.c0)))OR(vt0.c0)) AS TEXT));
SELECT * FROM vt0 WHERE ((((~ (vt0.c1))) NOT NULL)) ORDER BY (NOT (vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c1))) NOT NULL)) ORDER BY (NOT (vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c1)) COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0 WHERE ((((~ (vt0.c1))) NOT NULL)) ORDER BY (NOT (vt0.c1)) COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) IS TRUE) AS INTEGER) WHERE ('-2119409084') ORDER BY (v0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (('-2119409084') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) IS TRUE) AS INTEGER) ORDER BY (v0.c0 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) IS TRUE) AS INTEGER) WHERE ('-2119409084') ORDER BY (v0.c0 IN ()) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (('-2119409084') IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) IS TRUE) AS INTEGER) ORDER BY (v0.c0 IN ()) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON CAST(((vt0.c1) IS TRUE) AS INTEGER) WHERE ('-2119409084') ORDER BY (v0.c0 IN ()) COLLATE RTRIM ASC;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) IS TRUE)) ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, ((LOWER(vt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, ((LOWER(vt0.c0)) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) IS TRUE)) ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, ((LOWER(vt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, ((LOWER(vt0.c0)) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) IS TRUE)) ORDER BY ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))) IS TRUE) ASC  NULLS FIRST, ((LOWER(vt0.c0)) ISNULL) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c0)||(v0.c0)), ((v0.c0)<(v0.c0)), ((vt0.c1) NOT BETWEEN ('') AND (v0.c0)), ((((v0.c0)AND(vt0.c1)))AND(vt0.c0))))=(((NOT (vt0.c1)), vt0.c1 COLLATE RTRIM, v0.c0 COLLATE NOCASE, (((v0.c0))>=((vt0.c0))), ((vt0.c0) IS FALSE)))) WHERE (((((vt0.c1)<('860937711'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<('860937711'))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c0)||(v0.c0)), ((v0.c0)<(v0.c0)), ((vt0.c1) NOT BETWEEN ('') AND (v0.c0)), ((((v0.c0)AND(vt0.c1)))AND(vt0.c0))))=(((NOT (vt0.c1)), vt0.c1 COLLATE RTRIM, v0.c0 COLLATE NOCASE, (((v0.c0))>=((vt0.c0))), ((vt0.c0) IS FALSE)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c0)||(v0.c0)), ((v0.c0)<(v0.c0)), ((vt0.c1) NOT BETWEEN ('') AND (v0.c0)), ((((v0.c0)AND(vt0.c1)))AND(vt0.c0))))=(((NOT (vt0.c1)), vt0.c1 COLLATE RTRIM, v0.c0 COLLATE NOCASE, (((v0.c0))>=((vt0.c0))), ((vt0.c0) IS FALSE)))) WHERE (((((vt0.c1)<('860937711'))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<('860937711'))) IS TRUE)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c0)||(v0.c0)), ((v0.c0)<(v0.c0)), ((vt0.c1) NOT BETWEEN ('') AND (v0.c0)), ((((v0.c0)AND(vt0.c1)))AND(vt0.c0))))=(((NOT (vt0.c1)), vt0.c1 COLLATE RTRIM, v0.c0 COLLATE NOCASE, (((v0.c0))>=((vt0.c0))), ((vt0.c0) IS FALSE)))));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((((vt0.c0) BETWEEN (NULL) AND (vt0.c1)), ((vt0.c0)||(v0.c0)), ((v0.c0)<(v0.c0)), ((vt0.c1) NOT BETWEEN ('') AND (v0.c0)), ((((v0.c0)AND(vt0.c1)))AND(vt0.c0))))=(((NOT (vt0.c1)), vt0.c1 COLLATE RTRIM, v0.c0 COLLATE NOCASE, (((v0.c0))>=((vt0.c0))), ((vt0.c0) IS FALSE)))) WHERE (((((vt0.c1)<('860937711'))) IS TRUE));
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((CAST(v0.c0 AS BLOB), CAST(v0.c0 AS NUMERIC), (NOT (0.6873579822316788)), ((v0.c0)IS NOT(v0.c0)), v0.c0 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0)), ((x'478c48dd') IS TRUE), (((v0.c0))>((v0.c0))), json_array_length(v0.c0, v0.c0))))) ORDER BY TRIM(DISTINCT LAST_INSERT_ROWID(), (NOT (v0.c0))), (((~ (v0.c0))) NOT BETWEEN (((v0.c0)LIKE(v0.c0))) AND (CAST(0.5604022593198893 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((CAST(v0.c0 AS BLOB), CAST(v0.c0 AS NUMERIC), (NOT (0.6873579822316788)), ((v0.c0)IS NOT(v0.c0)), v0.c0 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0)), ((x'478c48dd') IS TRUE), (((v0.c0))>((v0.c0))), json_array_length(v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT LAST_INSERT_ROWID(), (NOT (v0.c0))), (((~ (v0.c0))) NOT BETWEEN (((v0.c0)LIKE(v0.c0))) AND (CAST(0.5604022593198893 AS BLOB)))  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((CAST(v0.c0 AS BLOB), CAST(v0.c0 AS NUMERIC), (NOT (0.6873579822316788)), ((v0.c0)IS NOT(v0.c0)), v0.c0 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0)), ((x'478c48dd') IS TRUE), (((v0.c0))>((v0.c0))), json_array_length(v0.c0, v0.c0))))) ORDER BY TRIM(DISTINCT LAST_INSERT_ROWID(), (NOT (v0.c0))), (((~ (v0.c0))) NOT BETWEEN (((v0.c0)LIKE(v0.c0))) AND (CAST(0.5604022593198893 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((CAST(v0.c0 AS BLOB), CAST(v0.c0 AS NUMERIC), (NOT (0.6873579822316788)), ((v0.c0)IS NOT(v0.c0)), v0.c0 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0)), ((x'478c48dd') IS TRUE), (((v0.c0))>((v0.c0))), json_array_length(v0.c0, v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY TRIM(DISTINCT LAST_INSERT_ROWID(), (NOT (v0.c0))), (((~ (v0.c0))) NOT BETWEEN (((v0.c0)LIKE(v0.c0))) AND (CAST(0.5604022593198893 AS BLOB)))  NULLS LAST);
SELECT * FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((CAST(v0.c0 AS BLOB), CAST(v0.c0 AS NUMERIC), (NOT (0.6873579822316788)), ((v0.c0)IS NOT(v0.c0)), v0.c0 COLLATE NOCASE)) AND ((v0.c0 COLLATE RTRIM, ((v0.c0)OR(v0.c0)), ((x'478c48dd') IS TRUE), (((v0.c0))>((v0.c0))), json_array_length(v0.c0, v0.c0))))) ORDER BY TRIM(DISTINCT LAST_INSERT_ROWID(), (NOT (v0.c0))), (((~ (v0.c0))) NOT BETWEEN (((v0.c0)LIKE(v0.c0))) AND (CAST(0.5604022593198893 AS BLOB)))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) IS TRUE))IS NOT(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))IS NOT(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) IS TRUE))IS NOT(vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS TRUE))IS NOT(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) IS TRUE))IS NOT(vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (ABS(DISTINCT v0.c0) IN (((vt0.c0)==(vt0.c1)), (vt0.c1 IN ()))) WHERE (((JULIANDAY(x'', v0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((vt0.c1 IN ())))) ORDER BY (((vt0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND (((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(x'', v0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (ABS(DISTINCT v0.c0) IN (((vt0.c0)=(vt0.c1)), (vt0.c1 IN ()))) ORDER BY (((vt0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND (((vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (ABS(DISTINCT v0.c0) IN (((vt0.c0)==(vt0.c1)), (vt0.c1 IN ()))) WHERE (((JULIANDAY(x'', v0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((vt0.c1 IN ())))) ORDER BY (((vt0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND (((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((JULIANDAY(x'', v0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (ABS(DISTINCT v0.c0) IN (((vt0.c0)=(vt0.c1)), (vt0.c1 IN ()))) ORDER BY (((vt0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND (((vt0.c0 IN ())))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON (ABS(DISTINCT v0.c0) IN (((vt0.c0)==(vt0.c1)), (vt0.c1 IN ()))) WHERE (((JULIANDAY(x'', v0.c0, vt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND ((vt0.c1 IN ())))) ORDER BY (((vt0.c1)) BETWEEN ((((v0.c0) NOTNULL))) AND (((vt0.c0 IN ()))));
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c1) ISNULL)) AND (LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c1) ISNULL)) AND (LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c1) ISNULL)) AND (LIKELY(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c1) ISNULL)) AND (LIKELY(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) BETWEEN (((vt0.c1) ISNULL)) AND (LIKELY(DISTINCT vt0.c0))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)OR(NULL)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) BETWEEN (x'') AND ((((vt0.c0))<>((vt0.c1)))))) ORDER BY vt0.c0 DESC  NULLS LAST, ((0.4864288123361853)>(CAST(vt0.c0 AS NUMERIC))), ((vt0.c1) NOT BETWEEN (((vt0.c1)IS NOT(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(NULL)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) BETWEEN (x'') AND ((((vt0.c0))<>((vt0.c1)))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY vt0.c0 DESC  NULLS LAST, ((0.4864288123361853)>(CAST(vt0.c0 AS NUMERIC))), ((vt0.c1) NOT BETWEEN (((vt0.c1)IS NOT(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)OR(NULL)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) BETWEEN (x'') AND ((((vt0.c0))<>((vt0.c1)))))) ORDER BY vt0.c0 DESC  NULLS LAST, ((0.4864288123361853)>(CAST(vt0.c0 AS NUMERIC))), ((vt0.c1) NOT BETWEEN (((vt0.c1)IS NOT(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(NULL)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) BETWEEN (x'') AND ((((vt0.c0))<>((vt0.c1)))))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0 ORDER BY vt0.c0 DESC  NULLS LAST, ((0.4864288123361853)>(CAST(vt0.c0 AS NUMERIC))), ((vt0.c1) NOT BETWEEN (((vt0.c1)IS NOT(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)OR(NULL)))AND(vt0.c0)))OR(NULL)))OR(v0.c0))) BETWEEN (x'') AND ((((vt0.c0))<>((vt0.c1)))))) ORDER BY vt0.c0 DESC  NULLS LAST, ((0.4864288123361853)>(CAST(vt0.c0 AS NUMERIC))), ((vt0.c1) NOT BETWEEN (((vt0.c1)IS NOT(v0.c0))) AND (CAST(v0.c0 AS TEXT)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((CAST(0.8162232547326419 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.8162232547326419 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((CAST(0.8162232547326419 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(0.8162232547326419 AS REAL) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((CAST(0.8162232547326419 AS REAL) IN ()));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1)<=(v0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((v0.c0) NOTNULL) WHEN ((x'')/(x'c52d')) THEN vt0.c1 COLLATE NOCASE END WHERE (1.154742867E9);
SELECT SUM(count) FROM (SELECT ((1.154742867E9) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1)<=(v0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((v0.c0) NOTNULL) WHEN ((x'')/(x'c52d')) THEN vt0.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1)<=(v0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((v0.c0) NOTNULL) WHEN ((x'')/(x'c52d')) THEN vt0.c1 COLLATE NOCASE END WHERE (1.154742867E9);
SELECT SUM(count) FROM (SELECT ((1.154742867E9) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1)<=(v0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((v0.c0) NOTNULL) WHEN ((x'')/(x'c52d')) THEN vt0.c1 COLLATE NOCASE END);
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CASE WHEN ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1)<=(v0.c0)) WHEN ((vt0.c1) ISNULL) THEN ((v0.c0) NOTNULL) WHEN ((x'')/(x'c52d')) THEN vt0.c1 COLLATE NOCASE END WHERE (1.154742867E9);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS REAL));
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)GLOB(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)GLOB(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)GLOB(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)GLOB(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)GLOB(((v0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CAST(v0.c0 AS TEXT), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c1 AS TEXT)))<(((+ (vt0.c1)), CASE ''  WHEN NULL THEN vt0.c0 ELSE v0.c0 END, vt0.c1 COLLATE BINARY)))) ORDER BY ((((v0.c0 IN ())))==((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))) ASC  NULLS LAST, ((CAST(vt0.c1 AS REAL)) IS TRUE) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS TEXT), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c1 AS TEXT)))<(((+ (vt0.c1)), CASE ''  WHEN NULL THEN vt0.c0 ELSE v0.c0 END, vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0 IN ())))==((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))) ASC  NULLS LAST, ((CAST(vt0.c1 AS REAL)) IS TRUE) ASC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CAST(v0.c0 AS TEXT), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c1 AS TEXT)))<(((+ (vt0.c1)), CASE ''  WHEN NULL THEN vt0.c0 ELSE v0.c0 END, vt0.c1 COLLATE BINARY)))) ORDER BY ((((v0.c0 IN ())))==((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))) ASC  NULLS LAST, ((CAST(vt0.c1 AS REAL)) IS TRUE) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS TEXT), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c1 AS TEXT)))<(((+ (vt0.c1)), CASE ''  WHEN NULL THEN vt0.c0 ELSE v0.c0 END, vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0 IN ())))==((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))) ASC  NULLS LAST, ((CAST(vt0.c1 AS REAL)) IS TRUE) ASC  NULLS FIRST, v0.c0  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((CAST(v0.c0 AS TEXT), ((vt0.c0)>=(vt0.c0)), CAST(vt0.c1 AS TEXT)))<(((+ (vt0.c1)), CASE ''  WHEN NULL THEN vt0.c0 ELSE v0.c0 END, vt0.c1 COLLATE BINARY)))) ORDER BY ((((v0.c0 IN ())))==((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))) ASC  NULLS LAST, ((CAST(vt0.c1 AS REAL)) IS TRUE) ASC  NULLS FIRST, v0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(CAST(v0.c0 AS TEXT))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS REAL), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE) DESC, (((((v0.c0) IS FALSE)))<>((((NULL)IS NOT(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))AND(CAST(v0.c0 AS TEXT))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS REAL), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE) DESC, (((((v0.c0) IS FALSE)))<>((((NULL)IS NOT(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(CAST(v0.c0 AS TEXT))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS REAL), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE) DESC, (((((v0.c0) IS FALSE)))<>((((NULL)IS NOT(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS BLOB))AND(CAST(v0.c0 AS TEXT))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS REAL), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE) DESC, (((((v0.c0) IS FALSE)))<>((((NULL)IS NOT(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))AND(CAST(v0.c0 AS TEXT))))AND(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(DATETIME(v0.c0, v0.c0, v0.c0) AS REAL), (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) IS TRUE) DESC, (((((v0.c0) IS FALSE)))<>((((NULL)IS NOT(v0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)|(v0.c0)))OR(((v0.c0) ISNULL)))) ORDER BY ((NULLIF(vt0.c1, v0.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(v0.c0)))OR(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULLIF(vt0.c1, v0.c0)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)|(v0.c0)))OR(((v0.c0) ISNULL)))) ORDER BY ((NULLIF(vt0.c1, v0.c0)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)|(v0.c0)))OR(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((NULLIF(vt0.c1, v0.c0)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)|(v0.c0)))OR(((v0.c0) ISNULL)))) ORDER BY ((NULLIF(vt0.c1, v0.c0)) ISNULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((vt0.c1)<(vt0.c1)))));
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0)==(vt0.c1)), ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c0)==(vt0.c1)), ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0)==(vt0.c1)), ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ROUND(((vt0.c0)==(vt0.c1)), ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (ROUND(((vt0.c0)==(vt0.c1)), ((vt0.c1) NOT BETWEEN (x'') AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((ROUND(vt0.c0, vt0.c1) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((ROUND(vt0.c0, vt0.c1) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((ROUND(vt0.c0, vt0.c1) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((ROUND(vt0.c0, vt0.c1) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((ROUND(vt0.c0, vt0.c1) IN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0)) WHERE ((((((v0.c0 IN ()))OR(vt0.c1)))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(vt0.c1)))OR(NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0)) WHERE ((((((v0.c0 IN ()))OR(vt0.c1)))OR(NULL)));
SELECT SUM(count) FROM (SELECT (((((((v0.c0 IN ()))OR(vt0.c1)))OR(NULL))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0)));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((vt0.c1) ISNULL)) BETWEEN (v0.c0 COLLATE BINARY) AND (v0.c0)) WHERE ((((((v0.c0 IN ()))OR(vt0.c1)))OR(NULL)));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1309707408' WHEN x'f280' THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1309707408' WHEN x'f280' THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1309707408' WHEN x'f280' THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1309707408' WHEN x'f280' THEN v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ())) NOT BETWEEN ((NOT (v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '1309707408' WHEN x'f280' THEN v0.c0 END)));
SELECT ALL * FROM v0, vt0 WHERE ((- (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((x'f385395b') BETWEEN ('512256668') AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((x'f385395b') BETWEEN ('512256668') AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((- (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((x'f385395b') BETWEEN ('512256668') AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (CAST(vt0.c0 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((x'f385395b') BETWEEN ('512256668') AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((- (CAST(vt0.c0 AS INTEGER)))) ORDER BY ((((x'f385395b') BETWEEN ('512256668') AND (vt0.c0))) NOT BETWEEN (vt0.c0) AND (((((v0.c0)OR(vt0.c0)))AND(vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c1) THEN LIKELY(DISTINCT vt0.c0) WHEN ((x'') NOTNULL) THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0) BETWEEN ('\Óåû+ÎΩå-pC57') AND (v0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN LTRIM(vt0.c0, v0.c0) THEN 0.05972416277886772 END) ORDER BY ((((vt0.c0)!=(v0.c0)))AND(((vt0.c0)<>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c1) THEN LIKELY(DISTINCT vt0.c0) WHEN ((x'') NOTNULL) THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0) BETWEEN ('\Óåû+ÎΩå-pC57') AND (v0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN LTRIM(vt0.c0, v0.c0) THEN 0.05972416277886772 END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)<>(v0.c0)))AND(((vt0.c0)!=(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c1) THEN LIKELY(DISTINCT vt0.c0) WHEN ((x'') NOTNULL) THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0) BETWEEN ('\Óåû+ÎΩå-pC57') AND (v0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN LTRIM(vt0.c0, v0.c0) THEN 0.05972416277886772 END) ORDER BY ((((vt0.c0)!=(v0.c0)))AND(((vt0.c0)<>(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c1) THEN LIKELY(DISTINCT vt0.c0) WHEN ((x'') NOTNULL) THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0) BETWEEN ('\Óåû+ÎΩå-pC57') AND (v0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN LTRIM(vt0.c0, v0.c0) THEN 0.05972416277886772 END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)<>(v0.c0)))AND(((vt0.c0)!=(vt0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (v0.c0 IN ()) THEN CAST(vt0.c0 AS REAL) WHEN IFNULL(DISTINCT vt0.c0, vt0.c1) THEN LIKELY(DISTINCT vt0.c0) WHEN ((x'') NOTNULL) THEN ((v0.c0)OR(v0.c0)) WHEN ((v0.c0) BETWEEN ('\Óåû+ÎΩå-pC57') AND (v0.c0)) THEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) WHEN LTRIM(vt0.c0, v0.c0) THEN 0.05972416277886772 END) ORDER BY ((((vt0.c0)!=(v0.c0)))AND(((vt0.c0)<>(vt0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c0))<=((vt0.c1))) IN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), ((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<=((vt0.c1))) IN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c0))<=((vt0.c1))) IN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), ((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))<=((vt0.c1))) IN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), ((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE (((((vt0.c0))<=((vt0.c1))) IN (((vt0.c1) NOT BETWEEN (v0.c0) AND (vt0.c1)), ((vt0.c0) NOTNULL))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) ISNULL)) ORDER BY ((CAST(v0.c0 AS REAL)) NOTNULL)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)GLOB(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(((v0.c0)GLOB(vt0.c0)) AS INTEGER));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE ((('-1334446926') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-1334446926') ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE ((('-1334446926') ISNULL));
SELECT SUM(count) FROM (SELECT (((('-1334446926') ISNULL)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON vt0.c1 COLLATE RTRIM WHERE ((('-1334446926') ISNULL));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((NOT (v0.c0)))AND((((v0.c0))==((v0.c0))))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (v0.c0)))AND((((v0.c0))==((v0.c0))))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((NOT (v0.c0)))AND((((v0.c0))==((v0.c0))))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (v0.c0)))AND((((v0.c0))==((v0.c0))))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((NOT (v0.c0)))AND((((v0.c0))==((v0.c0))))))AND(v0.c0)));
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (SQLITE_COMPILEOPTION_USED((NOT (vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (SQLITE_COMPILEOPTION_USED((NOT (vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED((NOT (vt0.c0)))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c0 AS INTEGER))) DESC);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (SQLITE_COMPILEOPTION_USED((NOT (vt0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(CAST(vt0.c0 AS INTEGER))) DESC;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE ((NULL IN ((((vt0.c1, vt0.c0, 0.9383708670713132))<((vt0.c1, 1441088121, vt0.c0))), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END) BETWEEN ((v0.c0 IN ())) AND ((vt0.c1 IN (v0.c0, v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((((vt0.c1, vt0.c0, 0.9383708670713132))<((vt0.c1, 1441088121, vt0.c0))), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END) BETWEEN ((v0.c0 IN ())) AND ((vt0.c1 IN (v0.c0, v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE ((NULL IN ((((vt0.c1, vt0.c0, 0.9383708670713132))<((vt0.c1, 1441088121, vt0.c0))), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END) BETWEEN ((v0.c0 IN ())) AND ((vt0.c1 IN (v0.c0, v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ((((vt0.c1, vt0.c0, 0.9383708670713132))<((vt0.c1, 1441088121, vt0.c0))), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END) BETWEEN ((v0.c0 IN ())) AND ((vt0.c1 IN (v0.c0, v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON vt0.c1 WHERE ((NULL IN ((((vt0.c1, vt0.c0, 0.9383708670713132))<((vt0.c1, 1441088121, vt0.c0))), ((((vt0.c1)OR(v0.c0)))AND(vt0.c0)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) ORDER BY ((CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END) BETWEEN ((v0.c0 IN ())) AND ((vt0.c1 IN (v0.c0, v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) IN ()), ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0))>=((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 'l*', 0.7867554310331905))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) IN ()), ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0))>=((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 'l*', 0.7867554310331905))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) IN ()), ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0))>=((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 'l*', 0.7867554310331905))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0)OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) IN ()), ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0))>=((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 'l*', 0.7867554310331905))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (((v0.c0)OR(v0.c0))))) ORDER BY ((((v0.c0, v0.c0, v0.c0))>=((v0.c0, v0.c0, v0.c0))) IN ()), ((((CAST(v0.c0 AS INTEGER))OR((((v0.c0))>=((v0.c0))))))OR((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 'l*', 0.7867554310331905))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON json_array(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((((((vt0.c0)AND('')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c1))) WHERE ((NOT (CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((((((((vt0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON json_array(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((((((vt0.c0)AND('')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c1))) ORDER BY (((((((((vt0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON json_array(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((((((vt0.c0)AND('')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c1))) WHERE ((NOT (CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((((((((vt0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON json_array(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((((((vt0.c0)AND('')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c1))) ORDER BY (((((((((vt0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM))  NULLS LAST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON json_array(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN x'' ELSE vt0.c0 END, ((((((((vt0.c0)AND('')))OR(v0.c0)))OR(v0.c0)))OR(vt0.c1))) WHERE ((NOT (CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END))) ORDER BY (((((((((vt0.c0 IN ()))AND(CAST(v0.c0 AS NUMERIC))))AND(vt0.c1 COLLATE NOCASE)))OR(vt0.c1 COLLATE BINARY)))OR(v0.c0 COLLATE RTRIM))  NULLS LAST;
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) COLLATE RTRIM COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE ((((~ (vt0.c1)))>(((v0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))>(((v0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((~ (vt0.c1)))>(((v0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))>(((v0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((~ (vt0.c1)))>(((v0.c0)<<(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((+ (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((+ (v0.c0)) IN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c1))))<>(vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c1))))!=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c1))))<>(vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))>=((vt0.c1))))!=(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c0))>=((vt0.c1))))<>(vt0.c0 COLLATE RTRIM))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (vt0.c0 COLLATE BINARY) AND (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0))));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((v0.c0)>(vt0.c1)))))) ORDER BY ((((((((((((((((((vt0.c0)<=(v0.c0)))OR(vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))))OR((vt0.c1 IN ()))))AND(NULL)))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))OR(((vt0.c0) NOTNULL))))AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((v0.c0)>(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((((((((vt0.c0)<=(v0.c0)))OR(vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))))OR((vt0.c1 IN ()))))AND(NULL)))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))OR(((vt0.c0) NOTNULL))))AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((v0.c0)>(vt0.c1)))))) ORDER BY ((((((((((((((((((vt0.c0)<=(v0.c0)))OR(vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))))OR((vt0.c1 IN ()))))AND(NULL)))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))OR(((vt0.c0) NOTNULL))))AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((v0.c0)>(vt0.c1)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((((((((vt0.c0)<=(v0.c0)))OR(vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))))OR((vt0.c1 IN ()))))AND(NULL)))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))OR(((vt0.c0) NOTNULL))))AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE ((((v0.c0)) BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) AND ((((v0.c0)>(vt0.c1)))))) ORDER BY ((((((((((((((((((vt0.c0)<=(v0.c0)))OR(vt0.c1)))AND(((vt0.c1) BETWEEN (vt0.c1) AND (v0.c0)))))OR((vt0.c1 IN ()))))AND(NULL)))OR(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)))OR(((vt0.c0) NOTNULL))))AND(v0.c0)))AND(((((vt0.c0)AND(v0.c0)))AND(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c1 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c1 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (((vt0.c1 IN ()) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(v0.c0 AS BLOB))<=(vt0.c1));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c0 AS BLOB))<=(vt0.c1)));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(v0.c0 AS BLOB))<=(vt0.c1));
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(v0.c0 AS BLOB))<=(vt0.c1)));
SELECT ALL * FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((CAST(v0.c0 AS BLOB))<=(vt0.c1));
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>>(SQLITE_COMPILEOPTION_USED(0.5206210755823416))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)>>(SQLITE_COMPILEOPTION_USED(0.5206210755823416)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>>(SQLITE_COMPILEOPTION_USED(0.5206210755823416))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE)>>(SQLITE_COMPILEOPTION_USED(0.5206210755823416)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)>>(SQLITE_COMPILEOPTION_USED(0.5206210755823416))));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((((vt0.c1)AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)-(vt0.c1)))))AND(v0.c0 COLLATE RTRIM)) WHERE (vt0.c0) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((vt0.c1)AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)-(vt0.c1)))))AND(v0.c0 COLLATE RTRIM)) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((((vt0.c1)AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)-(vt0.c1)))))AND(v0.c0 COLLATE RTRIM)) WHERE (vt0.c0) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((((((vt0.c1)AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)-(vt0.c1)))))AND(v0.c0 COLLATE RTRIM)) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST);
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON ((((((((vt0.c1)AND((vt0.c0 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c1)-(vt0.c1)))))AND(v0.c0 COLLATE RTRIM)) WHERE (vt0.c0) ORDER BY (NOT (vt0.c1)) COLLATE RTRIM  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS INTEGER)) ORDER BY (((v0.c0 IN ())) IS FALSE), (((v0.c0)) BETWEEN (((NOT (0Xffffffff8a92cfc8)))) AND ((((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) IS FALSE), (((v0.c0)) BETWEEN (((NOT (0xffffffff8a92cfc8)))) AND ((((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS INTEGER)) ORDER BY (((v0.c0 IN ())) IS FALSE), (((v0.c0)) BETWEEN (((NOT (0Xffffffff8a92cfc8)))) AND ((((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ())) IS FALSE), (((v0.c0)) BETWEEN (((NOT (0xffffffff8a92cfc8)))) AND ((((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((((v0.c0)OR(v0.c0)))OR(v0.c0)) AS INTEGER)) ORDER BY (((v0.c0 IN ())) IS FALSE), (((v0.c0)) BETWEEN (((NOT (0Xffffffff8a92cfc8)))) AND ((((((((((NULL)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((0.9646332430073856) IS TRUE)) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC, (- ((v0.c0 IN (v0.c0, vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9646332430073856) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC, (- ((v0.c0 IN (v0.c0, vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((0.9646332430073856) IS TRUE)) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC, (- ((v0.c0 IN (v0.c0, vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((0.9646332430073856) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC, (- ((v0.c0 IN (v0.c0, vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (((0.9646332430073856) IS TRUE)) ORDER BY (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY DESC, (- ((v0.c0 IN (v0.c0, vt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((-363453298) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) AND ('')) WHERE ('-363453298') ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE NOCASE END, ((vt0.c1)||(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (('-363453298') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((-363453298) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) AND ('')) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE NOCASE END, ((vt0.c1)||(vt0.c1)) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((-363453298) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) AND ('')) WHERE ('-363453298') ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE NOCASE END, ((vt0.c1)||(vt0.c1)) DESC;
SELECT SUM(count) FROM (SELECT (('-363453298') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((-363453298) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) AND ('')) ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE NOCASE END, ((vt0.c1)||(vt0.c1)) DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((-363453298) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END) AND ('')) WHERE ('-363453298') ORDER BY CASE WHEN vt0.c0 THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE NOCASE END, ((vt0.c1)||(vt0.c1)) DESC;
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END  WHEN ((v0.c0)<=(v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END  WHEN ((v0.c0)<=(v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END  WHEN ((v0.c0)<=(v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END  WHEN ((v0.c0)<=(v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) IS FALSE) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN x'' ELSE v0.c0 END  WHEN ((v0.c0)<=(v0.c0)) THEN (+ (v0.c0)) ELSE ((v0.c0) IS FALSE) END);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((vt0.c0 IN ()) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY ((((vt0.c0)&(vt0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(vt0.c1)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1)))AND(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<<(vt0.c1)))AND(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)<<(vt0.c1)))AND(vt0.c0 COLLATE BINARY)));
SELECT * FROM v0 FULL OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))>=(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))>=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))>=(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))>=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON NULL);
SELECT * FROM v0 FULL OUTER JOIN vt0 ON NULL WHERE ((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((v0.c0))))>=(((vt0.c0) IS FALSE))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1 IN ()))AND((+ ('x,w')))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c1))) ORDER BY (UPPER(-2.008584977E9) IN (0.29560510964707454))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN ()))AND((+ ('x,w')))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (UPPER(-2.008584977E9) IN (0.29560510964707454))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1 IN ()))AND((+ ('x,w')))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c1))) ORDER BY (UPPER(-2.008584977E9) IN (0.29560510964707454))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c1 IN ()))AND((+ ('x,w')))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (UPPER(-2.008584977E9) IN (0.29560510964707454))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((((vt0.c1 IN ()))AND((+ ('x,w')))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(vt0.c1))) ORDER BY (UPPER(-2.008584977E9) IN (0.29560510964707454))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((~ (v0.c0)) IN ()) ASC  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((~ (v0.c0)) IN ()) ASC  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT * FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((~ (v0.c0)) IN ()) ASC  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((~ (v0.c0)) IN ()) ASC  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC));
SELECT * FROM v0 WHERE ((((~ (v0.c0))) NOT BETWEEN (CAST(v0.c0 AS TEXT)) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((~ (v0.c0)) IN ()) ASC  NULLS LAST, CAST(CAST(v0.c0 AS NUMERIC) AS NUMERIC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) ORDER BY ((((((vt0.c0))==((vt0.c1)))))>=((((vt0.c0)OR('-1970090040')))))  NULLS LAST, ((((vt0.c1)>(vt0.c0)))LIKE((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, '970374988'))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))=((vt0.c1)))))>=((((vt0.c0)OR('-1970090040')))))  NULLS LAST, ((((vt0.c1)>(vt0.c0)))LIKE((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, '970374988'))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) ORDER BY ((((((vt0.c0))==((vt0.c1)))))>=((((vt0.c0)OR('-1970090040')))))  NULLS LAST, ((((vt0.c1)>(vt0.c0)))LIKE((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, '970374988'))))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) ISNULL) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0))=((vt0.c1)))))>=((((vt0.c0)OR('-1970090040')))))  NULLS LAST, ((((vt0.c1)>(vt0.c0)))LIKE((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, '970374988'))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) ISNULL) AS INTEGER)) ORDER BY ((((((vt0.c0))==((vt0.c1)))))>=((((vt0.c0)OR('-1970090040')))))  NULLS LAST, ((((vt0.c1)>(vt0.c0)))LIKE((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, '970374988'))))) DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((v0.c0) ISNULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, x'03c5')))<(vt0.c0 COLLATE NOCASE))) ORDER BY (((NOT (vt0.c0)))>=(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c0, x'03c5')))<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))>=(''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, x'03c5')))<(vt0.c0 COLLATE NOCASE))) ORDER BY (((NOT (vt0.c0)))>=(''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN (vt0.c0, x'03c5')))<(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY (((NOT (vt0.c0)))>=(''))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0, x'03c5')))<(vt0.c0 COLLATE NOCASE))) ORDER BY (((NOT (vt0.c0)))>=(''))  NULLS LAST;
SELECT * FROM v0 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))) WHERE (((('yÔÄ°?7tGG'))<=((((vt0.c1)>(v0.c0)))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST, ((((v0.c0))<((x'f79ed4f6'))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('yÔÄ°?7tGG'))<=((((vt0.c1)>(v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST, ((((v0.c0))<((x'f79ed4f6'))) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))) WHERE (((('yÔÄ°?7tGG'))<=((((vt0.c1)>(v0.c0)))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST, ((((v0.c0))<((x'f79ed4f6'))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((('yÔÄ°?7tGG'))<=((((vt0.c1)>(v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST, ((((v0.c0))<((x'f79ed4f6'))) IN ()) DESC  NULLS LAST);
SELECT * FROM v0 INNER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((((((((vt0.c0)OR(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))) WHERE (((('yÔÄ°?7tGG'))<=((((vt0.c1)>(v0.c0)))))) ORDER BY SQLITE_SOURCE_ID()  NULLS LAST, ((((v0.c0))<((x'f79ed4f6'))) IN ()) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.8051157618703391 WHERE (((((((((((((v0.c0)OR(0.8660167331572397)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND((vt0.c1 IN (vt0.c0, v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 DESC, vt0.c0  NULLS FIRST, ((((((((((0x35ffe18a)%(vt0.c0)))OR('W}' COLLATE RTRIM)))OR((- (v0.c0)))))OR(((vt0.c0) BETWEEN ('-2116437841') AND (vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)OR(0.8660167331572397)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND((vt0.c1 IN (vt0.c0, v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.8051157618703391 ORDER BY vt0.c0 DESC, vt0.c0  NULLS FIRST, ((((((((((0X35ffe18a)%(vt0.c0)))OR('W}' COLLATE RTRIM)))OR((- (v0.c0)))))OR(((vt0.c0) BETWEEN ('-2116437841') AND (vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.8051157618703391 WHERE (((((((((((((v0.c0)OR(0.8660167331572397)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND((vt0.c1 IN (vt0.c0, v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 DESC, vt0.c0  NULLS FIRST, ((((((((((0x35ffe18a)%(vt0.c0)))OR('W}' COLLATE RTRIM)))OR((- (v0.c0)))))OR(((vt0.c0) BETWEEN ('-2116437841') AND (vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((v0.c0)OR(0.8660167331572397)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND((vt0.c1 IN (vt0.c0, v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON 0.8051157618703391 ORDER BY vt0.c0 DESC, vt0.c0  NULLS FIRST, ((((((((((0X35ffe18a)%(vt0.c0)))OR('W}' COLLATE RTRIM)))OR((- (v0.c0)))))OR(((vt0.c0) BETWEEN ('-2116437841') AND (vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) ASC);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON 0.8051157618703391 WHERE (((((((((((((v0.c0)OR(0.8660167331572397)))AND(v0.c0)))AND(vt0.c0)))AND(v0.c0)))AND((vt0.c1 IN (vt0.c0, v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))))) ORDER BY vt0.c0 DESC, vt0.c0  NULLS FIRST, ((((((((((0x35ffe18a)%(vt0.c0)))OR('W}' COLLATE RTRIM)))OR((- (v0.c0)))))OR(((vt0.c0) BETWEEN ('-2116437841') AND (vt0.c0)))))AND(vt0.c1 COLLATE RTRIM)) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY ((~ (vt0.c1)) IN ()) ASC  NULLS FIRST, '-1398616948' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((~ (vt0.c1)) IN ()) ASC  NULLS FIRST, '-1398616948' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY ((~ (vt0.c1)) IN ()) ASC  NULLS FIRST, '-1398616948' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY ((~ (vt0.c1)) IN ()) ASC  NULLS FIRST, '-1398616948' ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE RTRIM) ORDER BY ((~ (vt0.c1)) IN ()) ASC  NULLS FIRST, '-1398616948' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('1441088121');
SELECT SUM(count) FROM (SELECT ALL (('1441088121') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('1441088121');
SELECT SUM(count) FROM (SELECT ALL (('1441088121') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('1441088121');
SELECT * FROM v0 WHERE (CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN (+ (v0.c0)) ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN (+ (v0.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN (+ (v0.c0)) ELSE (v0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN (+ (v0.c0)) ELSE (v0.c0 IN ()) END) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (CASE ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN ((v0.c0) IS TRUE) THEN (+ (v0.c0)) ELSE (v0.c0 IN ()) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((x'' IN (x''))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE (vt0.c1 IN (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (x''))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE (vt0.c1 IN (vt0.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((x'' IN (x''))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE (vt0.c1 IN (vt0.c1)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN (x''))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE (vt0.c1 IN (vt0.c1)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((x'' IN (x''))) ORDER BY CASE WHEN CAST(v0.c0 AS TEXT) THEN (vt0.c0 IN ()) WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c0 COLLATE BINARY WHEN vt0.c0 THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) ELSE (vt0.c1 IN (vt0.c1)) END DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c0)IS(NULL))))>=(((NOT (vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN vt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(NULL))))>=(((NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN vt0.c1 END DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)IS(NULL))))>=(((NOT (vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN vt0.c1 END DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)IS(NULL))))>=(((NOT (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN vt0.c1 END DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0)IS(NULL))))>=(((NOT (vt0.c1)))))) ORDER BY CASE WHEN ((vt0.c1)-(vt0.c0)) THEN vt0.c1 END DESC;
SELECT ALL * FROM v0 WHERE (((COALESCE(v0.c0, v0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((COALESCE(v0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((COALESCE(v0.c0, v0.c0)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((COALESCE(v0.c0, v0.c0)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((COALESCE(v0.c0, v0.c0)) NOTNULL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((0.14625046749565251)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((0.14625046749565251)/(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((0.14625046749565251)/(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((0.14625046749565251)/(vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))  WHEN ((((v0.c0)AND(vt0.c1)))OR(vt0.c0)) THEN ((0.14625046749565251)/(vt0.c0)) END);
SELECT ALL * FROM vt0 WHERE ((~ (0.10416072277301935))) ORDER BY ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.10416072277301935))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ (0.10416072277301935))) ORDER BY ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((~ (0.10416072277301935))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((~ (0.10416072277301935))) ORDER BY ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT * FROM v0 WHERE (NULL) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC), (((((v0.c0 IN (v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC), (((((v0.c0 IN (v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (NULL) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC), (((((v0.c0 IN (v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC), (((((v0.c0 IN (v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST);
SELECT * FROM v0 WHERE (NULL) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS NUMERIC), (((((v0.c0 IN (v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT * FROM v0 WHERE ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE ((- (((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))))) ORDER BY ((v0.c0) NOTNULL) COLLATE BINARY  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY 0X27dff5b1 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY 0X27dff5b1 DESC);
SELECT * FROM v0, vt0 WHERE (NULL) ORDER BY 0X27dff5b1 DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt0 ORDER BY 0X27dff5b1 DESC);
SELECT ALL * FROM vt0 WHERE (ABS(GLOB(vt0.c1, vt0.c1))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((ABS(GLOB(vt0.c1, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY '' DESC);
SELECT ALL * FROM vt0 WHERE (ABS(GLOB(vt0.c1, vt0.c1))) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((ABS(GLOB(vt0.c1, vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY '' DESC);
SELECT ALL * FROM vt0 WHERE (ABS(GLOB(vt0.c1, vt0.c1))) ORDER BY '' DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((CHAR(vt0.c0)) IS TRUE) ASC  NULLS LAST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CHAR(vt0.c0)) IS TRUE) ASC  NULLS LAST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((CHAR(vt0.c0)) IS TRUE) ASC  NULLS LAST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY ((CHAR(vt0.c0)) IS TRUE) ASC  NULLS LAST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))%((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) ORDER BY ((CHAR(vt0.c0)) IS TRUE) ASC  NULLS LAST, CAST(vt0.c1 AS INTEGER) COLLATE RTRIM;
SELECT * FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (NULL);
SELECT * FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM v0 CROSS JOIN vt0 ON ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((((vt0.c1)OR(vt0.c0)))AND(vt0.c1))) AND (((vt0.c1) BETWEEN (v0.c0) AND (v0.c0)))) WHERE (NULL);
SELECT COUNT(*) FROM v0 WHERE ((((INSTR(v0.c0, v0.c0)))>=((v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((INSTR(v0.c0, v0.c0)))>=((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((INSTR(v0.c0, v0.c0)))>=((v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((INSTR(v0.c0, v0.c0)))>=((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((INSTR(v0.c0, v0.c0)))>=((v0.c0 COLLATE BINARY))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('SEn(uHrFj');
SELECT SUM(count) FROM (SELECT (('SEn(uHrFj') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('SEn(uHrFj');
SELECT SUM(count) FROM (SELECT (('SEn(uHrFj') IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ('SEn(uHrFj');
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((vt0.c0 IN ()) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((vt0.c0 IN ()) AS REAL));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c0))) IS FALSE) WHERE (((-1099734064)<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((-1099734064)<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c0))) IS FALSE));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c0))) IS FALSE) WHERE (((-1099734064)<=((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((-1099734064)<=((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c0))) IS FALSE));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c1)OR(vt0.c0))) IS FALSE) WHERE (((-1099734064)<=((vt0.c0 IN ()))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (-1.099734064E9) AND (v0.c0)))<<((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (-1.099734064E9) AND (v0.c0)))<<((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (-1.099734064E9) AND (v0.c0)))<<((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (-1.099734064E9) AND (v0.c0)))<<((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) BETWEEN (-1.099734064E9) AND (v0.c0)))<<((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY CASE ((vt0.c1)|('g-'))  WHEN vt0.c0 COLLATE BINARY THEN (~ (vt0.c1)) ELSE ((((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c1)|('g-'))  WHEN vt0.c0 COLLATE BINARY THEN (~ (vt0.c1)) ELSE ((((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY CASE ((vt0.c1)|('g-'))  WHEN vt0.c0 COLLATE BINARY THEN (~ (vt0.c1)) ELSE ((((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1 COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE ((vt0.c1)|('g-'))  WHEN vt0.c0 COLLATE BINARY THEN (~ (vt0.c1)) ELSE ((((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c1 COLLATE RTRIM) ORDER BY CASE ((vt0.c1)|('g-'))  WHEN vt0.c0 COLLATE BINARY THEN (~ (vt0.c1)) ELSE ((((((((vt0.c1)AND(v0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(v0.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (NOT (vt0.c1)) WHERE (((v0.c0)>(vt0.c1)) COLLATE BINARY) ORDER BY CAST(((v0.c0)<=(vt0.c1)) AS TEXT), ((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))<(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (vt0.c1)) ORDER BY CAST(((v0.c0)<=(vt0.c1)) AS TEXT), ((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))<(NULL)));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (NOT (vt0.c1)) WHERE (((v0.c0)>(vt0.c1)) COLLATE BINARY) ORDER BY CAST(((v0.c0)<=(vt0.c1)) AS TEXT), ((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))<(NULL));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)>(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (NOT (vt0.c1)) ORDER BY CAST(((v0.c0)<=(vt0.c1)) AS TEXT), ((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))<(NULL)));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (NOT (vt0.c1)) WHERE (((v0.c0)>(vt0.c1)) COLLATE BINARY) ORDER BY CAST(((v0.c0)<=(vt0.c1)) AS TEXT), ((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))<(NULL));
SELECT COUNT(*) FROM vt0 WHERE ('-1334446926');
SELECT SUM(count) FROM (SELECT ALL (('-1334446926') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('-1334446926');
SELECT SUM(count) FROM (SELECT ALL (('-1334446926') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('-1334446926');
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((NULL IN ()))OR(vt0.c0))) ORDER BY ((CAST(NULL AS BLOB))<<(((v0.c0) NOT BETWEEN (0.10510742570626808) AND (v0.c0)))), ((vt0.c1)<(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))OR(x'')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))OR(vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((CAST(NULL AS BLOB))<<(((v0.c0) NOT BETWEEN (0.10510742570626808) AND (v0.c0)))), ((vt0.c1)<(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))OR(x'')) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((NULL IN ()))OR(vt0.c0))) ORDER BY ((CAST(NULL AS BLOB))<<(((v0.c0) NOT BETWEEN (0.10510742570626808) AND (v0.c0)))), ((vt0.c1)<(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))OR(x'')) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((NULL IN ()))OR(vt0.c0))) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY ((CAST(NULL AS BLOB))<<(((v0.c0) NOT BETWEEN (0.10510742570626808) AND (v0.c0)))), ((vt0.c1)<(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))OR(x'')) COLLATE BINARY);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE ((((NULL IN ()))OR(vt0.c0))) ORDER BY ((CAST(NULL AS BLOB))<<(((v0.c0) NOT BETWEEN (0.10510742570626808) AND (v0.c0)))), ((vt0.c1)<(v0.c0)) COLLATE RTRIM DESC  NULLS FIRST, ((((v0.c0)AND(v0.c0)))OR(x'')) COLLATE BINARY;
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END)OR((vt0.c0 IN ()))) WHERE (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))>>(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END)OR((vt0.c0 IN ()))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))>>(((v0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END)OR((vt0.c0 IN ()))) WHERE (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))>>(((v0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) IN ())) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END)OR((vt0.c0 IN ()))) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))>>(((v0.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE v0.c0 END)OR((vt0.c0 IN ()))) WHERE (((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c1))) IN ())) ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))>>(((v0.c0) NOT NULL))) ASC;
SELECT * FROM v0 WHERE (((v0.c0)<=(((v0.c0) NOTNULL)))) ORDER BY (((v0.c0)) NOT BETWEEN ((0x4fc3e934)) AND (((((v0.c0))<>((v0.c0)))))), ((((v0.c0) ISNULL))GLOB(CAST(v0.c0 AS REAL))) ASC, (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)<<(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((0X4fc3e934)) AND (((((v0.c0))<>((v0.c0)))))), ((((v0.c0) ISNULL))GLOB(CAST(v0.c0 AS REAL))) ASC, (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)<<(v0.c0))))) DESC);
SELECT * FROM v0 WHERE (((v0.c0)<=(((v0.c0) NOTNULL)))) ORDER BY (((v0.c0)) NOT BETWEEN ((0x4fc3e934)) AND (((((v0.c0))<>((v0.c0)))))), ((((v0.c0) ISNULL))GLOB(CAST(v0.c0 AS REAL))) ASC, (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)<<(v0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<=(((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN ((0X4fc3e934)) AND (((((v0.c0))<>((v0.c0)))))), ((((v0.c0) ISNULL))GLOB(CAST(v0.c0 AS REAL))) ASC, (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)<<(v0.c0))))) DESC);
SELECT * FROM v0 WHERE (((v0.c0)<=(((v0.c0) NOTNULL)))) ORDER BY (((v0.c0)) NOT BETWEEN ((0x4fc3e934)) AND (((((v0.c0))<>((v0.c0)))))), ((((v0.c0) ISNULL))GLOB(CAST(v0.c0 AS REAL))) ASC, (((v0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0)<<(v0.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) NOTNULL))&(vt0.c0 COLLATE BINARY))) ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) NOTNULL))&(vt0.c0 COLLATE BINARY))) ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOTNULL))&(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0) NOTNULL))&(vt0.c0 COLLATE BINARY))) ORDER BY ((x'') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT NULL)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(x'' COLLATE NOCASE)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(x'' COLLATE NOCASE)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(x'' COLLATE NOCASE)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(x'' COLLATE NOCASE)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(x'' COLLATE NOCASE)))AND(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c1)<<(v0.c0)))AND((~ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<<(v0.c0)))AND((~ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c1)<<(v0.c0)))AND((~ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)<<(v0.c0)))AND((~ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((vt0.c1)<<(v0.c0)))AND((~ (vt0.c0)))))OR(v0.c0 COLLATE NOCASE)));
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c1)))) ORDER BY CAST((x'c010' IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((x'c010' IN ()) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c1)))) ORDER BY CAST((x'c010' IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c1)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST((x'c010' IN ()) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE ((((vt0.c1)) NOT BETWEEN ((x'')) AND ((vt0.c1)))) ORDER BY CAST((x'c010' IN ()) AS INTEGER) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0Xffffffffc187f18f END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0Xffffffffc187f18f END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0Xffffffffc187f18f END) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0Xffffffffc187f18f END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0 COLLATE BINARY  WHEN NULL THEN 0Xffffffffc187f18f END) ORDER BY vt0.c0;
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c1) ISNULL))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c1) ISNULL))GLOB((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) ISNULL))GLOB((+ (vt0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c1) ISNULL))GLOB((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((((('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c1) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ((((((('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c1) NOTNULL))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((('') NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((((vt0.c1) NOTNULL)))));
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ORDER BY CASE (v0.c0 IN ())  WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c0 IN ())  WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS INTEGER) END DESC);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ORDER BY CASE (v0.c0 IN ())  WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS INTEGER) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM v0 ORDER BY CASE (v0.c0 IN ())  WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS INTEGER) END DESC);
SELECT * FROM v0 WHERE (CAST(CAST(v0.c0 AS BLOB) AS NUMERIC)) ORDER BY CASE (v0.c0 IN ())  WHEN ((v0.c0) NOT NULL) THEN CAST(v0.c0 AS INTEGER) END DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c0))) BETWEEN ('Du') AND (CAST(v0.c0 AS TEXT)))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN ('Du') AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c0))) BETWEEN ('Du') AND (CAST(v0.c0 AS TEXT)))) ORDER BY x'' ASC;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0))) BETWEEN ('Du') AND (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'' ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((+ (vt0.c0))) BETWEEN ('Du') AND (CAST(v0.c0 AS TEXT)))) ORDER BY x'' ASC;
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(MIN(vt0.c1, vt0.c0))))AND(0.8071307526020627))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(MIN(vt0.c1, vt0.c0))))AND(0.8071307526020627))  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(MIN(vt0.c1, vt0.c0))))AND(0.8071307526020627))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(MIN(vt0.c1, vt0.c0))))AND(0.8071307526020627))  NULLS LAST);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE ((((~ (vt0.c0))) IS TRUE)) ORDER BY ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(MIN(vt0.c1, vt0.c0))))AND(0.8071307526020627))  NULLS LAST;
SELECT * FROM vt0 WHERE (TRIM(vt0.c0) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(vt0.c0) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (TRIM(vt0.c0) COLLATE RTRIM) ORDER BY ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE COLLATE BINARY DESC  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_patch((((vt0.c1, x'', vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c1)OR((- (vt0.c1)))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, ((((((x'210a')<(vt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)|(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((vt0.c1, x'', vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)OR((- (vt0.c1)))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, ((((((x'210a')<(vt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)|(vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (json_patch((((vt0.c1, x'', vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB))) ORDER BY ((((vt0.c1)OR((- (vt0.c1)))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, ((((((x'210a')<(vt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)|(vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((json_patch((((vt0.c1, x'', vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))), CAST(vt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)OR((- (vt0.c1)))))AND(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST, ((((((x'210a')<(vt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((vt0.c0)|(vt0.c1)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN (NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN (NULL)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN (NULL)) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((vt0.c0 IN (NULL)) AS TEXT));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN ()))OR(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) WHERE ((((((vt0.c0))>=((-3.63453298E8))))!=(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((-3.63453298E8))))!=(x''))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN ()))OR(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN ()))OR(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) WHERE ((((((vt0.c0))>=((-3.63453298E8))))!=(x'')));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0))>=((-3.63453298E8))))!=(x''))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN ()))OR(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))));
SELECT ALL * FROM v0 CROSS JOIN vt0 ON (((((vt0.c0 IN ()))OR(vt0.c1 COLLATE RTRIM)))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))) WHERE ((((((vt0.c0))>=((-3.63453298E8))))!=(x'')));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((x'f6cc' IN ()))>=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((x'f6cc' IN ()))>=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((x'f6cc' IN ()))>=(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((x'f6cc' IN ()))>=(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((x'f6cc' IN ()))>=(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c1) IS TRUE)) IS FALSE)) ORDER BY (((vt0.c1)) NOT BETWEEN (((((9.14884979E8)) NOT BETWEEN ((x'e797')) AND ((vt0.c0))))) AND ((((vt0.c1)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((((9.14884979E8)) NOT BETWEEN ((x'e797')) AND ((vt0.c0))))) AND ((((vt0.c1)%(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c1) IS TRUE)) IS FALSE)) ORDER BY (((vt0.c1)) NOT BETWEEN (((((9.14884979E8)) NOT BETWEEN ((x'e797')) AND ((vt0.c0))))) AND ((((vt0.c1)%(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS TRUE)) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)) NOT BETWEEN (((((9.14884979E8)) NOT BETWEEN ((x'e797')) AND ((vt0.c0))))) AND ((((vt0.c1)%(v0.c0))))));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c1) IS TRUE)) IS FALSE)) ORDER BY (((vt0.c1)) NOT BETWEEN (((((9.14884979E8)) NOT BETWEEN ((x'e797')) AND ((vt0.c0))))) AND ((((vt0.c1)%(v0.c0)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (737926702);
SELECT SUM(count) FROM (SELECT ALL ((737926702) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (737926702);
SELECT SUM(count) FROM (SELECT ALL ((737926702) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (737926702);
SELECT COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((+ (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((+ (CAST(v0.c0 AS NUMERIC))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffffeec0a4ae)))IS NOT(((vt0.c1)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffffeec0a4ae)))IS NOT(((vt0.c1)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffffeec0a4ae)))IS NOT(((vt0.c1)==(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffffeec0a4ae)))IS NOT(((vt0.c1)=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c1) AND (0Xffffffffeec0a4ae)))IS NOT(((vt0.c1)==(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT NULL))))) ORDER BY vt0.c1  NULLS LAST, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, vt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT NULL))))) ORDER BY vt0.c1  NULLS LAST, vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, vt0.c1 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((((vt0.c0) NOT NULL))))) ORDER BY vt0.c1  NULLS LAST, vt0.c1 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (MAX(vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((MAX(vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MAX(vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((MAX(vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (MAX(vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1)+('-+ÁëÆ')) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)+('-+ÁëÆ')) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1)+('-+ÁëÆ')) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)+('-+ÁëÆ')) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1)+('-+ÁëÆ')) IN ()) ASC;
SELECT * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR(ABS(DISTINCT vt0.c0))))AND(((vt0.c0)=(vt0.c1))))) ORDER BY (NOT (((vt0.c1)OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR(ABS(DISTINCT vt0.c0))))AND(((vt0.c0)=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)OR(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR(ABS(DISTINCT vt0.c0))))AND(((vt0.c0)=(vt0.c1))))) ORDER BY (NOT (((vt0.c1)OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR(ABS(DISTINCT vt0.c0))))AND(((vt0.c0)=(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)OR(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE ((((((((((vt0.c0 IN ()))AND(CAST(vt0.c1 AS TEXT))))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)))))OR(ABS(DISTINCT vt0.c0))))AND(((vt0.c0)=(vt0.c1))))) ORDER BY (NOT (((vt0.c1)OR(vt0.c0)))) DESC;
SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))=(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))=(((vt0.c0) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))=(((vt0.c0) IS FALSE))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((+ ('\Óåû+ÎΩå-pC57' COLLATE RTRIM))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('\Óåû+ÎΩå-pC57' COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ('\Óåû+ÎΩå-pC57' COLLATE RTRIM))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ ('\Óåû+ÎΩå-pC57' COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((+ ('\Óåû+ÎΩå-pC57' COLLATE RTRIM))) ORDER BY vt0.c1 DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)<=(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<=(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)<=(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE NOCASE)<=(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE)<=(CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM v0, vt0 WHERE (NULLIF((v0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.09434877544054898)));
SELECT SUM(count) FROM (SELECT ((NULLIF((v0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.09434877544054898))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (NULLIF((v0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.09434877544054898)));
SELECT SUM(count) FROM (SELECT ((NULLIF((v0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.09434877544054898))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (NULLIF((v0.c0 IN ()), LIKELIHOOD(vt0.c0, 0.09434877544054898)));
SELECT ALL * FROM vt0, v0 WHERE (((SUBSTR(vt0.c0, v0.c0))IS NOT((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (UPPER(v0.c0)) AND (CAST(vt0.c0 AS TEXT))), (((vt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))), ((((vt0.c1) NOT NULL))>=(((vt0.c0) BETWEEN (x'0527') AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, v0.c0))IS NOT((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (UPPER(v0.c0)) AND (CAST(vt0.c0 AS TEXT))), (((vt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))), ((((vt0.c1) NOT NULL))>=(((vt0.c0) BETWEEN (x'0527') AND (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((SUBSTR(vt0.c0, v0.c0))IS NOT((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (UPPER(v0.c0)) AND (CAST(vt0.c0 AS TEXT))), (((vt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))), ((((vt0.c1) NOT NULL))>=(((vt0.c0) BETWEEN (x'0527') AND (v0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((SUBSTR(vt0.c0, v0.c0))IS NOT((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (UPPER(v0.c0)) AND (CAST(vt0.c0 AS TEXT))), (((vt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))), ((((vt0.c1) NOT NULL))>=(((vt0.c0) BETWEEN (x'0527') AND (v0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, v0 WHERE (((SUBSTR(vt0.c0, v0.c0))IS NOT((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, v0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) ORDER BY ((((vt0.c0)<<(vt0.c1))) NOT BETWEEN (UPPER(v0.c0)) AND (CAST(vt0.c0 AS TEXT))), (((vt0.c1)) BETWEEN (((v0.c0 IN ()))) AND ((((((((((v0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1))))), ((((vt0.c1) NOT NULL))>=(((vt0.c0) BETWEEN (x'0527') AND (v0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE (((CHAR(9.05961866E8)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(9.05961866E8)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (((((vt0.c1)AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CHAR(9.05961866E8)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CHAR(9.05961866E8)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (((((vt0.c1)AND(v0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CHAR(9.05961866E8)) BETWEEN ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (((((vt0.c1)AND(v0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0)));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((('-1568632617') NOT NULL))AND(x'')))AND(LENGTH(vt0.c1))))AND(vt0.c0)))AND(((vt0.c0) IS FALSE)))) ORDER BY CAST(((vt0.c1)&(v0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((('-1568632617') NOT NULL))AND(x'')))AND(LENGTH(vt0.c1))))AND(vt0.c0)))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c1)&(v0.c0)) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((('-1568632617') NOT NULL))AND(x'')))AND(LENGTH(vt0.c1))))AND(vt0.c0)))AND(((vt0.c0) IS FALSE)))) ORDER BY CAST(((vt0.c1)&(v0.c0)) AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT (((((((((((('-1568632617') NOT NULL))AND(x'')))AND(LENGTH(vt0.c1))))AND(vt0.c0)))AND(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(((vt0.c1)&(v0.c0)) AS NUMERIC) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((((((('-1568632617') NOT NULL))AND(x'')))AND(LENGTH(vt0.c1))))AND(vt0.c0)))AND(((vt0.c0) IS FALSE)))) ORDER BY CAST(((vt0.c1)&(v0.c0)) AS NUMERIC) DESC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)||(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)||(v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)||(v0.c0))) NOTNULL));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))IS(((vt0.c1)*(vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS BLOB))<<((('1136181852')-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1)))IS(((vt0.c1)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))<<((('1136181852')-(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))IS(((vt0.c1)*(vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS BLOB))<<((('1136181852')-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c1)))IS(((vt0.c1)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS BLOB))<<((('1136181852')-(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c1)))IS(((vt0.c1)*(vt0.c0))))) ORDER BY ((CAST(vt0.c1 AS BLOB))<<((('1136181852')-(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(vt0.c0))) BETWEEN ((v0.c0 IN ())) AND (vt0.c1 COLLATE BINARY)));
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)>(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)>(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((vt0.c0)>(v0.c0))) BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE))-((v0.c0 IN ())))) ORDER BY ((v0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE))-((v0.c0 IN ())))) ORDER BY ((v0.c0) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))-((v0.c0 IN ())))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE));
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE))-((v0.c0 IN ())))) ORDER BY ((v0.c0) IS TRUE);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c0))==((NULL))) THEN ABS(DISTINCT '') ELSE ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))=((NULL))) THEN ABS(DISTINCT '') ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c0))==((NULL))) THEN ABS(DISTINCT '') ELSE ((vt0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c0))=((NULL))) THEN ABS(DISTINCT '') ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN (((vt0.c0))==((NULL))) THEN ABS(DISTINCT '') ELSE ((vt0.c0) NOTNULL) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CASE WHEN CAST(NULL AS NUMERIC) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END ELSE ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END;
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 NATURAL JOIN v0);
SELECT ALL * FROM vt0 NATURAL JOIN v0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (json_insert(vt0.c0, CAST(0.8325136244201203 AS INTEGER), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) ORDER BY ((v0.c0) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c1))) AND (((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS INTEGER) ASC, (('1795325191')/(vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((json_insert(vt0.c0, CAST(0.8325136244201203 AS INTEGER), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c1))) AND (((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS INTEGER) ASC, (('1795325191')/(vt0.c1)) ASC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (json_insert(vt0.c0, CAST(0.8325136244201203 AS INTEGER), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) ORDER BY ((v0.c0) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c1))) AND (((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS INTEGER) ASC, (('1795325191')/(vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((json_insert(vt0.c0, CAST(0.8325136244201203 AS INTEGER), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c1))) AND (((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS INTEGER) ASC, (('1795325191')/(vt0.c1)) ASC);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, vt0 WHERE (json_insert(vt0.c0, CAST(0.8325136244201203 AS INTEGER), ((v0.c0) BETWEEN (v0.c0) AND (vt0.c1)))) ORDER BY ((v0.c0) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(x'')))AND(vt0.c1))) AND (((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))) ASC  NULLS FIRST, CAST(((((vt0.c0)OR(vt0.c0)))OR(v0.c0)) AS INTEGER) ASC, (('1795325191')/(vt0.c1)) ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN x'e0fd' WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN 0.31719855240051475 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)OR(vt0.c1)) THEN ROUND(vt0.c0, vt0.c0) WHEN ((vt0.c0)+(v0.c0)) THEN ROUND(vt0.c0, v0.c0) ELSE (('\n7^ÀÄ')GLOB(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN x'e0fd' WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN 0.31719855240051475 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)OR(vt0.c1)) THEN ROUND(vt0.c0, vt0.c0) WHEN ((vt0.c0)+(v0.c0)) THEN ROUND(vt0.c0, v0.c0) ELSE (('\n7^ÀÄ')GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN x'e0fd' WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN 0.31719855240051475 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)OR(vt0.c1)) THEN ROUND(vt0.c0, vt0.c0) WHEN ((vt0.c0)+(v0.c0)) THEN ROUND(vt0.c0, v0.c0) ELSE (('\n7^ÀÄ')GLOB(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN x'e0fd' WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN 0.31719855240051475 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)OR(vt0.c1)) THEN ROUND(vt0.c0, vt0.c0) WHEN ((vt0.c0)+(v0.c0)) THEN ROUND(vt0.c0, v0.c0) ELSE (('\n7^ÀÄ')GLOB(vt0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN STRFTIME(vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c1) THEN x'e0fd' WHEN ((((v0.c0)OR(v0.c0)))AND(vt0.c1)) THEN (vt0.c1 IN ()) WHEN CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END THEN CASE WHEN 0.31719855240051475 THEN vt0.c1 ELSE vt0.c0 END WHEN ((vt0.c0)OR(vt0.c1)) THEN ROUND(vt0.c0, vt0.c0) WHEN ((vt0.c0)+(v0.c0)) THEN ROUND(vt0.c0, v0.c0) ELSE (('\n7^ÀÄ')GLOB(vt0.c1)) END);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c0 IN (v0.c0, vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c1)<<(v0.c0)))) WHERE (((v0.c0)&(((('1229463915', v0.c0, vt0.c0))==((v0.c0, vt0.c1, v0.c0)))))) ORDER BY ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN '0.20114571883300025' THEN v0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c1 END)IS(v0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN json(v0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END ASC, CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN ((v0.c0)GLOB(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&(((('1229463915', v0.c0, vt0.c0))=((v0.c0, vt0.c1, v0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c0 IN (v0.c0, vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c1)<<(v0.c0)))) ORDER BY ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN '0.20114571883300025' THEN v0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c1 END)IS(v0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN json(v0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END ASC, CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN ((v0.c0)GLOB(vt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c0 IN (v0.c0, vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c1)<<(v0.c0)))) WHERE (((v0.c0)&(((('1229463915', v0.c0, vt0.c0))==((v0.c0, vt0.c1, v0.c0)))))) ORDER BY ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN '0.20114571883300025' THEN v0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c1 END)IS(v0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN json(v0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END ASC, CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN ((v0.c0)GLOB(vt0.c1)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)&(((('1229463915', v0.c0, vt0.c0))=((v0.c0, vt0.c1, v0.c0)))))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c0 IN (v0.c0, vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c1)<<(v0.c0)))) ORDER BY ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN '0.20114571883300025' THEN v0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c1 END)IS(v0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN json(v0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END ASC, CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN ((v0.c0)GLOB(vt0.c1)) END ASC);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (((v0.c0 IN (v0.c0, vt0.c0))) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c1)<<(v0.c0)))) WHERE (((v0.c0)&(((('1229463915', v0.c0, vt0.c0))==((v0.c0, vt0.c1, v0.c0)))))) ORDER BY ((CASE vt0.c1  WHEN v0.c0 THEN v0.c0 WHEN '0.20114571883300025' THEN v0.c0 WHEN '' THEN vt0.c0 ELSE vt0.c1 END)IS(v0.c0 COLLATE BINARY))  NULLS LAST, CASE WHEN json(v0.c0) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) END ASC, CASE vt0.c0 COLLATE BINARY  WHEN (vt0.c0 IN (v0.c0, vt0.c0)) THEN ((v0.c0)GLOB(vt0.c1)) END ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(-1.97009004E9)))OR(v0.c0)))AND(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(-1.97009004E9)))OR(v0.c0)))AND(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(-1.97009004E9)))OR(v0.c0)))AND(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(-1.97009004E9)))OR(v0.c0)))AND(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY v0.c0);
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)AND(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)OR(v0.c0)))AND(-1.97009004E9)))OR(v0.c0)))AND(v0.c0))) AND (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END))) ORDER BY v0.c0;
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))OR('-1758256966')))OR(vt0.c0))) AND ((('-1048055409') IS TRUE)))) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN CAST(v0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))OR('-1758256966')))OR(vt0.c0))) AND ((('-1048055409') IS TRUE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))OR('-1758256966')))OR(vt0.c0))) AND ((('-1048055409') IS TRUE)))) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN CAST(v0.c0 AS NUMERIC) END;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))OR('-1758256966')))OR(vt0.c0))) AND ((('-1048055409') IS TRUE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN CAST(v0.c0 AS NUMERIC) END);
SELECT * FROM vt0, v0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))OR('-1758256966')))OR(vt0.c0))) AND ((('-1048055409') IS TRUE)))) ORDER BY CASE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))  WHEN SQLITE_COMPILEOPTION_USED(vt0.c1) THEN CAST(v0.c0 AS NUMERIC) END;
SELECT ALL * FROM v0, vt0 WHERE ((((x''))==((vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((x''))==((vt0.c1 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT ALL (((((x''))=((vt0.c1 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((x''))==((vt0.c1 COLLATE BINARY))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))AND(vt0.c0)))OR(((vt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND(vt0.c0)))OR(((vt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))AND(vt0.c0)))OR(((vt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN ()))AND(vt0.c0)))OR(((vt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1 IN ()))AND(vt0.c0)))OR(((vt0.c0)<<(vt0.c1)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (UPPER(DISTINCT (((v0.c0, 0.12508305710555967, vt0.c1))<((x'', 'N1', vt0.c1))))) ORDER BY (((((vt0.c0))>((vt0.c0))))/((((vt0.c0))>((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((v0.c0, 0.12508305710555967, vt0.c1))<((x'', 'N1', vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0))>((vt0.c0))))/((((vt0.c0))>((vt0.c1))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (UPPER(DISTINCT (((v0.c0, 0.12508305710555967, vt0.c1))<((x'', 'N1', vt0.c1))))) ORDER BY (((((vt0.c0))>((vt0.c0))))/((((vt0.c0))>((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((v0.c0, 0.12508305710555967, vt0.c1))<((x'', 'N1', vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((((vt0.c0))>((vt0.c0))))/((((vt0.c0))>((vt0.c1))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (UPPER(DISTINCT (((v0.c0, 0.12508305710555967, vt0.c1))<((x'', 'N1', vt0.c1))))) ORDER BY (((((vt0.c0))>((vt0.c0))))/((((vt0.c0))>((vt0.c1)))));
SELECT ALL * FROM v0, vt0 WHERE (0x13a6d386) ORDER BY ((((vt0.c0, vt0.c1, v0.c0))<=((vt0.c1, v0.c0, vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x13a6d386) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0, vt0.c1, v0.c0))<=((vt0.c1, v0.c0, vt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (0x13a6d386) ORDER BY ((((vt0.c0, vt0.c1, v0.c0))<=((vt0.c1, v0.c0, vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0x13a6d386) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0, vt0.c1, v0.c0))<=((vt0.c1, v0.c0, vt0.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (0x13a6d386) ORDER BY ((((vt0.c0, vt0.c1, v0.c0))<=((vt0.c1, v0.c0, vt0.c0))) IN ()) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((('2019212147')>((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('2019212147')>((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2019212147')>((vt0.c1 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((('2019212147')>((vt0.c1 IN (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((('2019212147')>((vt0.c1 IN (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE (vt0.c0 IN ('737926702'))  WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c0 AS REAL) ELSE ((v0.c0)/(vt0.c1)) END) ORDER BY ((v0.c0 IN ()) IN (x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ('737926702'))  WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c0 AS REAL) ELSE ((v0.c0)/(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 IN ()) IN (x'')) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE (vt0.c0 IN ('737926702'))  WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c0 AS REAL) ELSE ((v0.c0)/(vt0.c1)) END) ORDER BY ((v0.c0 IN ()) IN (x'')) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ('737926702'))  WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c0 AS REAL) ELSE ((v0.c0)/(vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((v0.c0 IN ()) IN (x'')) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE (vt0.c0 IN ('737926702'))  WHEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c0 AS REAL) ELSE ((v0.c0)/(vt0.c1)) END) ORDER BY ((v0.c0 IN ()) IN (x'')) DESC  NULLS LAST;
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE)) ORDER BY CASE (('L{') IS FALSE)  WHEN CAST(NULL AS INTEGER) THEN ((v0.c0)&(vt0.c0)) WHEN v0.c0 THEN vt0.c0 WHEN (- (vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE COALESCE(DISTINCT vt0.c0, vt0.c1) END DESC, CAST(vt0.c1 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c1 ORDER BY CASE (('L{') IS FALSE)  WHEN CAST(NULL AS INTEGER) THEN ((v0.c0)&(vt0.c0)) WHEN v0.c0 THEN vt0.c0 WHEN (- (vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE COALESCE(DISTINCT vt0.c0, vt0.c1) END DESC, CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE)) ORDER BY CASE (('L{') IS FALSE)  WHEN CAST(NULL AS INTEGER) THEN ((v0.c0)&(vt0.c0)) WHEN v0.c0 THEN vt0.c0 WHEN (- (vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE COALESCE(DISTINCT vt0.c0, vt0.c1) END DESC, CAST(vt0.c1 AS REAL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c1 ORDER BY CASE (('L{') IS FALSE)  WHEN CAST(NULL AS INTEGER) THEN ((v0.c0)&(vt0.c0)) WHEN v0.c0 THEN vt0.c0 WHEN (- (vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE COALESCE(DISTINCT vt0.c0, vt0.c1) END DESC, CAST(vt0.c1 AS REAL) COLLATE RTRIM);
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c1 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) IS TRUE)) ORDER BY CASE (('L{') IS FALSE)  WHEN CAST(NULL AS INTEGER) THEN ((v0.c0)&(vt0.c0)) WHEN v0.c0 THEN vt0.c0 WHEN (- (vt0.c0)) THEN (((v0.c0))>=((vt0.c0))) ELSE COALESCE(DISTINCT vt0.c0, vt0.c1) END DESC, CAST(vt0.c1 AS REAL) COLLATE RTRIM;
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c1);
SELECT * FROM vt0, v0 WHERE (0.579053863919243);
SELECT SUM(count) FROM (SELECT ((0.579053863919243) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (0.579053863919243);
SELECT SUM(count) FROM (SELECT ((0.579053863919243) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (0.579053863919243);
SELECT COUNT(*) FROM vt0, v0 WHERE (-2.40253932E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.40253932E8) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (-2.40253932E8);
SELECT SUM(count) FROM (SELECT ALL ((-2.40253932E8) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (-2.40253932E8);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((x'')-(CAST(vt0.c1 AS BLOB)))) ORDER BY (((((x''))!=((vt0.c1)))) BETWEEN (((v0.c0)<>(vt0.c1))) AND (TRIM(DISTINCT v0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'')-(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((x''))<>((vt0.c1)))) BETWEEN (((v0.c0)!=(vt0.c1))) AND (TRIM(DISTINCT v0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((x'')-(CAST(vt0.c1 AS BLOB)))) ORDER BY (((((x''))!=((vt0.c1)))) BETWEEN (((v0.c0)<>(vt0.c1))) AND (TRIM(DISTINCT v0.c0, vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((((x'')-(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((x''))<>((vt0.c1)))) BETWEEN (((v0.c0)!=(vt0.c1))) AND (TRIM(DISTINCT v0.c0, vt0.c0))) ASC);
SELECT COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((x'')-(CAST(vt0.c1 AS BLOB)))) ORDER BY (((((x''))!=((vt0.c1)))) BETWEEN (((v0.c0)<>(vt0.c1))) AND (TRIM(DISTINCT v0.c0, vt0.c0))) ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.10416072277301935' ELSE '-409551443' END, json_remove(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((LIKELY(v0.c0), (((v0.c0))!=((v0.c0))), (v0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.10416072277301935' ELSE '-409551443' END, json_remove(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((LIKELY(v0.c0), (((v0.c0))!=((v0.c0))), (v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.10416072277301935' ELSE '-409551443' END, json_remove(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((LIKELY(v0.c0), (((v0.c0))!=((v0.c0))), (v0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.10416072277301935' ELSE '-409551443' END, json_remove(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((LIKELY(v0.c0), (((v0.c0))!=((v0.c0))), (v0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN '0.10416072277301935' ELSE '-409551443' END, json_remove(v0.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((LIKELY(v0.c0), (((v0.c0))!=((v0.c0))), (v0.c0 IN (v0.c0))))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN ())) ORDER BY CASE (- (NULL))  WHEN ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)) THEN ((vt0.c1)OR(vt0.c0)) ELSE (vt0.c1 IN (v0.c0, vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY CASE (- (NULL))  WHEN ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)) THEN ((vt0.c1)OR(vt0.c0)) ELSE (vt0.c1 IN (v0.c0, vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN ())) ORDER BY CASE (- (NULL))  WHEN ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)) THEN ((vt0.c1)OR(vt0.c0)) ELSE (vt0.c1 IN (v0.c0, vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN ())) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY CASE (- (NULL))  WHEN ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)) THEN ((vt0.c1)OR(vt0.c0)) ELSE (vt0.c1 IN (v0.c0, vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0) NOT BETWEEN (x'') AND (vt0.c1)) IN ())) ORDER BY CASE (- (NULL))  WHEN ((((((((v0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c1)) THEN ((vt0.c1)OR(vt0.c0)) ELSE (vt0.c1 IN (v0.c0, vt0.c1)) END  NULLS LAST;
SELECT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND((- (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND((- (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND((- (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND((- (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))AND((- (v0.c0)))))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((CAST('1809046226' AS INTEGER))AND(-1708982330)))AND((~ (vt0.c0)))) WHERE (((((vt0.c0)OR(vt0.c1)))IS NOT(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN ((((vt0.c0))=((v0.c0)))) AND (vt0.c1)), (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1)))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))IS NOT(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((CAST('1809046226' AS INTEGER))AND(-1708982330)))AND((~ (vt0.c0)))) ORDER BY ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN ((((vt0.c0))==((v0.c0)))) AND (vt0.c1)), (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1)))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((CAST('1809046226' AS INTEGER))AND(-1708982330)))AND((~ (vt0.c0)))) WHERE (((((vt0.c0)OR(vt0.c1)))IS NOT(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN ((((vt0.c0))=((v0.c0)))) AND (vt0.c1)), (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1)))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1)))IS NOT(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON ((((CAST('1809046226' AS INTEGER))AND(-1708982330)))AND((~ (vt0.c0)))) ORDER BY ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN ((((vt0.c0))==((v0.c0)))) AND (vt0.c1)), (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1)))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON ((((CAST('1809046226' AS INTEGER))AND(-1708982330)))AND((~ (vt0.c0)))) WHERE (((((vt0.c0)OR(vt0.c1)))IS NOT(CAST(vt0.c1 AS BLOB)))) ORDER BY ((((vt0.c0)<>(vt0.c1))) NOT BETWEEN ((((vt0.c0))=((v0.c0)))) AND (vt0.c1)), (((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1)))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.9068644928572646) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9068644928572646) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.9068644928572646) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9068644928572646) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.9068644928572646) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c0)>(v0.c0)))) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)+(vt0.c1)))+((+ (vt0.c0))))) ORDER BY LENGTH(v0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)+(vt0.c1)))+((+ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LENGTH(v0.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)+(vt0.c1)))+((+ (vt0.c0))))) ORDER BY LENGTH(v0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)+(vt0.c1)))+((+ (vt0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY LENGTH(v0.c0) COLLATE RTRIM ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)+(vt0.c1)))+((+ (vt0.c0))))) ORDER BY LENGTH(v0.c0) COLLATE RTRIM ASC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NOT (vt0.c0)));
SELECT COUNT(*) FROM v0 WHERE ((- ('-1508044401'))) ORDER BY LTRIM((v0.c0 IN (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('-1508044401'))) IS TRUE)  as count FROM v0 ORDER BY LTRIM((v0.c0 IN (v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((- ('-1508044401'))) ORDER BY LTRIM((v0.c0 IN (v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ('-1508044401'))) IS TRUE)  as count FROM v0 ORDER BY LTRIM((v0.c0 IN (v0.c0))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE ((- ('-1508044401'))) ORDER BY LTRIM((v0.c0 IN (v0.c0))) ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((vt0.c0)AND((NOT ('')))))OR(TRIM(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((NOT ('')))))OR(TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND((NOT ('')))))OR(TRIM(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND((NOT ('')))))OR(TRIM(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)AND((NOT ('')))))OR(TRIM(vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c1)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c1)) AS BLOB));
SELECT COUNT(*) FROM v0, vt0 WHERE ((- (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((- (CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((- (CAST(vt0.c1 AS INTEGER))));
SELECT ALL * FROM vt0 WHERE (((((x'') ISNULL))OR(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL))OR(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'') ISNULL))OR(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((x'') ISNULL))OR(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((x'') ISNULL))OR(((vt0.c0)/(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((x'' IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((x'' IN ()))));
SELECT SUM(count) FROM (SELECT (((~ ((x'' IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ ((x'' IN ()))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)>(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)>(v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>(v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((vt0.c1)>(v0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (((('1809046226')) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((vt0.c1)OR(vt0.c0)))AND(x''))))));
SELECT SUM(count) FROM (SELECT ((((('1809046226')) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((vt0.c1)OR(vt0.c0)))AND(x'')))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('1809046226')) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((vt0.c1)OR(vt0.c0)))AND(x''))))));
SELECT SUM(count) FROM (SELECT ((((('1809046226')) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((vt0.c1)OR(vt0.c0)))AND(x'')))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((('1809046226')) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))) AND ((((((vt0.c1)OR(vt0.c0)))AND(x''))))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((0.31719855240051475)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE WHERE (((vt0.c1)>=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, 407335500 DESC, (((v0.c0 IN ()))<=(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((0.31719855240051475)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, 407335500 DESC, (((v0.c0 IN ()))<=(((vt0.c0)IS(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON ((((0.31719855240051475)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE WHERE (((vt0.c1)>=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, 407335500 DESC, (((v0.c0 IN ()))<=(((vt0.c0)IS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)>=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON ((((0.31719855240051475)OR(vt0.c0)))OR(NULL)) COLLATE NOCASE ORDER BY (((NOT (vt0.c1))) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0 COLLATE RTRIM))  NULLS LAST, 407335500 DESC, (((v0.c0 IN ()))<=(((vt0.c0)IS(vt0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((v0.c0)GLOB(v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))!=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN ((v0.c0)GLOB(v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))!=((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((v0.c0)GLOB(v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))!=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0 COLLATE BINARY  WHEN ((v0.c0)GLOB(v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))!=((v0.c0))) END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE v0.c0 COLLATE BINARY  WHEN ((v0.c0)GLOB(v0.c0)) THEN v0.c0 COLLATE RTRIM WHEN CAST(v0.c0 AS INTEGER) THEN (NOT (v0.c0)) WHEN (v0.c0 IN ()) THEN (((v0.c0))!=((v0.c0))) END);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS TRUE))/(((vt0.c0) IS TRUE))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS TRUE))/(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS TRUE))/(((vt0.c0) IS TRUE))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS TRUE))/(((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((v0.c0) IS TRUE))/(((vt0.c0) IS TRUE))) WHERE (NULL);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c1)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c1)OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c1)OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c1)OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))+(((vt0.c1)OR(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((((v0.c0)>=(NULL)))AND(CAST(v0.c0 AS REAL))))AND(v0.c0))) ORDER BY (((((NULL))>=((v0.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(NULL)))AND(CAST(v0.c0 AS REAL))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((((NULL))>=((v0.c0)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)>=(NULL)))AND(CAST(v0.c0 AS REAL))))AND(v0.c0))) ORDER BY (((((NULL))>=((v0.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)>=(NULL)))AND(CAST(v0.c0 AS REAL))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY (((((NULL))>=((v0.c0)))) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (((((((v0.c0)>=(NULL)))AND(CAST(v0.c0 AS REAL))))AND(v0.c0))) ORDER BY (((((NULL))>=((v0.c0)))) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (INSTR(vt0.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (INSTR(vt0.c0, v0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((INSTR(vt0.c0, v0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (INSTR(vt0.c0, v0.c0) COLLATE RTRIM);
SELECT ALL * FROM v0 WHERE (NULLIF((+ (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END DESC);
SELECT ALL * FROM v0 WHERE (NULLIF((+ (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ((NULLIF((+ (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END DESC);
SELECT ALL * FROM v0 WHERE (NULLIF((+ (v0.c0)), ((((v0.c0)OR(v0.c0)))OR(v0.c0)))) ORDER BY CASE WHEN (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, '', v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN CASE WHEN v0.c0 THEN v0.c0 END ELSE CASE v0.c0  WHEN v0.c0 THEN x'' WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END DESC;
SELECT ALL * FROM v0 WHERE ((((NULLIF(v0.c0, '-1951499061')))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (((~ (v0.c0)))/((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULLIF(v0.c0, '-1951499061')))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0)))/((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((NULLIF(v0.c0, '-1951499061')))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (((~ (v0.c0)))/((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULLIF(v0.c0, '-1951499061')))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (v0.c0)))/((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((NULLIF(v0.c0, '-1951499061')))>=((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) ORDER BY (((~ (v0.c0)))/((((NULL)) BETWEEN ((v0.c0)) AND ((v0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (v0.c0 IN (v0.c0))))<((v0.c0 COLLATE RTRIM, x'', CAST(v0.c0 AS REAL))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0) ISNULL), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (v0.c0 IN (v0.c0))))<((v0.c0 COLLATE RTRIM, x'', CAST(v0.c0 AS REAL))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0) ISNULL), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), NULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (v0.c0 IN (v0.c0))))<((v0.c0 COLLATE RTRIM, x'', CAST(v0.c0 AS REAL))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0) ISNULL), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), NULL)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0 IN (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (v0.c0 IN (v0.c0))))<((v0.c0 COLLATE RTRIM, x'', CAST(v0.c0 AS REAL))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0) ISNULL), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), NULL))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0 IN (v0.c0)), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)), (v0.c0 IN (v0.c0))))<((v0.c0 COLLATE RTRIM, x'', CAST(v0.c0 AS REAL))))) ORDER BY (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)), (((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, NULL)) AND ((v0.c0, v0.c0, v0.c0))), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) AND ((((v0.c0) ISNULL), (((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))), NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY vt0.c0 COLLATE BINARY  NULLS FIRST;
SELECT * FROM vt0 WHERE (0.3368898780340013) ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1360916513'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3368898780340013) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1360916513'))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.3368898780340013) ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1360916513'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.3368898780340013) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1360916513'))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.3368898780340013) ORDER BY ((((vt0.c1) IS FALSE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND ('1360916513'))))  NULLS FIRST;
SELECT * FROM v0 WHERE ((((((((((((((((((NOT (v0.c0)))OR(((v0.c0)=(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(x'')))OR('Tr')))OR((- (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)>>(0.14026969168325287)))))AND(v0.c0))) ORDER BY ((((v0.c0)<(v0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((NOT (v0.c0)))OR(((v0.c0)=(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(x'')))OR('Tr')))OR((- (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)>>(0.14026969168325287)))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<(v0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((((((((((((((NOT (v0.c0)))OR(((v0.c0)=(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(x'')))OR('Tr')))OR((- (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)>>(0.14026969168325287)))))AND(v0.c0))) ORDER BY ((((v0.c0)<(v0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((((((NOT (v0.c0)))OR(((v0.c0)=(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(x'')))OR('Tr')))OR((- (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)>>(0.14026969168325287)))))AND(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<(v0.c0))) IS FALSE) ASC  NULLS LAST);
SELECT * FROM v0 WHERE ((((((((((((((((((NOT (v0.c0)))OR(((v0.c0)=(v0.c0)))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))))OR(x'')))OR('Tr')))OR((- (v0.c0)))))AND((- (v0.c0)))))AND(((v0.c0)>>(0.14026969168325287)))))AND(v0.c0))) ORDER BY ((((v0.c0)<(v0.c0))) IS FALSE) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (x'fb8f' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'fb8f' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'fb8f' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((x'fb8f' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'fb8f' COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0, 'h', v0.c0))<((vt0.c1, v0.c0, vt0.c0))))OR(v0.c0)))OR((+ (vt0.c1))))) ORDER BY (~ (v0.c0));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, 'h', v0.c0))<((vt0.c1, v0.c0, vt0.c0))))OR(v0.c0)))OR((+ (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (v0.c0)));
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0, 'h', v0.c0))<((vt0.c1, v0.c0, vt0.c0))))OR(v0.c0)))OR((+ (vt0.c1))))) ORDER BY (~ (v0.c0));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0, 'h', v0.c0))<((vt0.c1, v0.c0, vt0.c0))))OR(v0.c0)))OR((+ (vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (~ (v0.c0)));
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0, 'h', v0.c0))<((vt0.c1, v0.c0, vt0.c0))))OR(v0.c0)))OR((+ (vt0.c1))))) ORDER BY (~ (v0.c0));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND ('668988849')) COLLATE BINARY) ORDER BY CAST(((vt0.c0) NOT NULL) AS BLOB), ((((((vt0.c1) IS FALSE))OR(0.9804848923511672)))OR(CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND ('668988849')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS BLOB), ((((((vt0.c1) IS FALSE))OR(0.9804848923511672)))OR(CAST(v0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND ('668988849')) COLLATE BINARY) ORDER BY CAST(((vt0.c0) NOT NULL) AS BLOB), ((((((vt0.c1) IS FALSE))OR(0.9804848923511672)))OR(CAST(v0.c0 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND ('668988849')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(((vt0.c0) NOT NULL) AS BLOB), ((((((vt0.c1) IS FALSE))OR(0.9804848923511672)))OR(CAST(v0.c0 AS BLOB))) DESC);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND ('668988849')) COLLATE BINARY) ORDER BY CAST(((vt0.c0) NOT NULL) AS BLOB), ((((((vt0.c1) IS FALSE))OR(0.9804848923511672)))OR(CAST(v0.c0 AS BLOB))) DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0)AND(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((NOT (((v0.c0)AND(v0.c0)))));
SELECT * FROM v0 WHERE (NULL) ORDER BY CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)AND(v0.c0)) END ASC  NULLS LAST, (- (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)AND(v0.c0)) END ASC  NULLS LAST, (- (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM v0 WHERE (NULL) ORDER BY CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)AND(v0.c0)) END ASC  NULLS LAST, (- (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 ORDER BY CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)AND(v0.c0)) END ASC  NULLS LAST, (- (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))));
SELECT * FROM v0 WHERE (NULL) ORDER BY CASE ((v0.c0) ISNULL)  WHEN v0.c0 THEN v0.c0 COLLATE BINARY ELSE ((v0.c0)AND(v0.c0)) END ASC  NULLS LAST, (- (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0))));
SELECT * FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN (ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(vt0.c0)) IN (ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN (ABS(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)<<(vt0.c0)) IN (ABS(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0)<<(vt0.c0)) IN (ABS(vt0.c0))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN (vt0.c1, vt0.c0)))) WHERE (1.338239284E9);
SELECT SUM(count) FROM (SELECT ((1.338239284E9) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN (vt0.c1, vt0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN (vt0.c1, vt0.c0)))) WHERE (1.338239284E9);
SELECT SUM(count) FROM (SELECT ((1.338239284E9) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN (vt0.c1, vt0.c0)))));
SELECT ALL * FROM v0 INNER JOIN vt0 ON (((NOT (v0.c0))) BETWEEN ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN (vt0.c1, vt0.c0)))) WHERE (1.338239284E9);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((vt0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((+ ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS NUMERIC), HEX(DISTINCT vt0.c1), CASE NULL  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))<=(((vt0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS NUMERIC), HEX(DISTINCT vt0.c1), CASE NULL  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))<=(((vt0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS NUMERIC), HEX(DISTINCT vt0.c1), CASE NULL  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))<=(((vt0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), vt0.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((CAST(v0.c0 AS NUMERIC), HEX(DISTINCT vt0.c1), CASE NULL  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))<=(((vt0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), vt0.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((CAST(v0.c0 AS NUMERIC), HEX(DISTINCT vt0.c1), CASE NULL  WHEN v0.c0 THEN vt0.c1 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))<=(((vt0.c0 IN ()), ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)), vt0.c0 COLLATE NOCASE))));
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT NULL, v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT NULL, v0.c0)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT NULL, v0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT NULL, v0.c0)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (TRIM(DISTINCT NULL, v0.c0));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0)))LIKE(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)>=(vt0.c0)))LIKE(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1)>=(vt0.c0)))LIKE(vt0.c0)));
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((TRIM(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((TRIM(vt0.c0)) NOT NULL));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT * FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM v0 INNER JOIN vt0 ON vt0.c0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)IS(vt0.c1)))*(((v0.c0)|(vt0.c1))))) ORDER BY IFNULL((v0.c0 IN (v0.c0)), ((((v0.c0)OR(vt0.c1)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c1)))*(((v0.c0)|(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY IFNULL((v0.c0 IN (v0.c0)), ((((v0.c0)OR(vt0.c1)))OR(vt0.c1))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)IS(vt0.c1)))*(((v0.c0)|(vt0.c1))))) ORDER BY IFNULL((v0.c0 IN (v0.c0)), ((((v0.c0)OR(vt0.c1)))OR(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c1)))*(((v0.c0)|(vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY IFNULL((v0.c0 IN (v0.c0)), ((((v0.c0)OR(vt0.c1)))OR(vt0.c1))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)IS(vt0.c1)))*(((v0.c0)|(vt0.c1))))) ORDER BY IFNULL((v0.c0 IN (v0.c0)), ((((v0.c0)OR(vt0.c1)))OR(vt0.c1)));
SELECT * FROM v0, vt0 WHERE (ABS(DISTINCT (~ (x''))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (~ (x'')))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (ABS(DISTINCT (~ (x''))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (~ (x'')))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (ABS(DISTINCT (~ (x''))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN ABS(vt0.c1) THEN (('-409551443') NOTNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE RTRIM  WHEN ABS(vt0.c1) THEN (('-409551443') NOTNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN ABS(vt0.c1) THEN (('-409551443') NOTNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE RTRIM  WHEN ABS(vt0.c1) THEN (('-409551443') NOTNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY CAST(vt0.c0 AS TEXT) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (CASE vt0.c1 COLLATE RTRIM  WHEN ABS(vt0.c1) THEN (('-409551443') NOTNULL) ELSE CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c1 END END) ORDER BY CAST(vt0.c0 AS TEXT) COLLATE NOCASE ASC;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND ((+ (vt0.c1)))));
SELECT * FROM v0 WHERE ((((NOT (NULL)))IS(SQLITE_COMPILEOPTION_USED(v0.c0)))) ORDER BY ((v0.c0 IN ()) IN ((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))IS(SQLITE_COMPILEOPTION_USED(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ((+ (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((NOT (NULL)))IS(SQLITE_COMPILEOPTION_USED(v0.c0)))) ORDER BY ((v0.c0 IN ()) IN ((+ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (NULL)))IS(SQLITE_COMPILEOPTION_USED(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 IN ()) IN ((+ (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE ((((NOT (NULL)))IS(SQLITE_COMPILEOPTION_USED(v0.c0)))) ORDER BY ((v0.c0 IN ()) IN ((+ (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (~ ((('')IS NOT(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (~ ((('')IS NOT(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (~ ((('')IS NOT(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (~ ((('')IS NOT(vt0.c0)))) ASC);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY (~ ((('')IS NOT(vt0.c0)))) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN '.Mti' THEN 'mj9o7tAfZ' WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, vt0.c1, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN '.Mti' THEN 'mj9o7tAfZ' WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, vt0.c1, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN '.Mti' THEN 'mj9o7tAfZ' WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, vt0.c1, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN '.Mti' THEN 'mj9o7tAfZ' WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, vt0.c1, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0)|(vt0.c1)) THEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN '.Mti' THEN 'mj9o7tAfZ' WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END ELSE ((v0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) END) ORDER BY ((vt0.c0)IS NOT(vt0.c0)) COLLATE BINARY, vt0.c1, CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER);
SELECT ALL COUNT(*) FROM v0 WHERE (5.11312576E8) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS LAST, ((((x'')<>(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '994800841' END) AND (((((v0.c0)OR('1310350519')))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((5.11312576E8) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS LAST, ((((x'')!=(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '994800841' END) AND (((((v0.c0)OR('1310350519')))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (5.11312576E8) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS LAST, ((((x'')<>(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '994800841' END) AND (((((v0.c0)OR('1310350519')))OR(v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((5.11312576E8) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS LAST, ((((x'')!=(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '994800841' END) AND (((((v0.c0)OR('1310350519')))OR(v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (5.11312576E8) ORDER BY ((v0.c0 COLLATE NOCASE) IS TRUE)  NULLS LAST, ((((x'')<>(v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE '994800841' END) AND (((((v0.c0)OR('1310350519')))OR(v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (((NULL)<(vt0.c1))) AND ('1229463915'))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (('0.740875919146429')OR(vt0.c0)), vt0.c1, ((('T/'))<((v0.c0))), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))>((CAST(vt0.c0 AS TEXT), (~ (vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), (~ (v0.c0)))))  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN '512256668' THEN v0.c0 ELSE vt0.c1 END) AND ((((vt0.c0))<=((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (((NULL)<(vt0.c1))) AND ('1229463915'))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (('0.740875919146429')OR(vt0.c0)), vt0.c1, ((('T/'))<((v0.c0))), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))>((CAST(vt0.c0 AS TEXT), (~ (vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), (~ (v0.c0)))))  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN '512256668' THEN v0.c0 ELSE vt0.c1 END) AND ((((vt0.c0))<=((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (((NULL)<(vt0.c1))) AND ('1229463915'))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (('0.740875919146429')OR(vt0.c0)), vt0.c1, ((('T/'))<((v0.c0))), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))>((CAST(vt0.c0 AS TEXT), (~ (vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), (~ (v0.c0)))))  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN '512256668' THEN v0.c0 ELSE vt0.c1 END) AND ((((vt0.c0))<=((vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (((NULL)<(vt0.c1))) AND ('1229463915'))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (('0.740875919146429')OR(vt0.c0)), vt0.c1, ((('T/'))<((v0.c0))), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))>((CAST(vt0.c0 AS TEXT), (~ (vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), (~ (v0.c0)))))  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN '512256668' THEN v0.c0 ELSE vt0.c1 END) AND ((((vt0.c0))<=((vt0.c0))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c0) BETWEEN (NULL) AND (vt0.c0))) NOT BETWEEN (((NULL)<(vt0.c1))) AND ('1229463915'))) ORDER BY (((CASE WHEN v0.c0 THEN v0.c0 ELSE vt0.c0 END, (('0.740875919146429')OR(vt0.c0)), vt0.c1, ((('T/'))<((v0.c0))), ((((vt0.c1)AND(vt0.c0)))AND(vt0.c1))))>((CAST(vt0.c0 AS TEXT), (~ (vt0.c0)), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), (~ (v0.c0)))))  NULLS FIRST, ((vt0.c1 COLLATE RTRIM)>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, ((((vt0.c1)>=(vt0.c0))) NOT BETWEEN (CASE v0.c0  WHEN '512256668' THEN v0.c0 ELSE vt0.c1 END) AND ((((vt0.c0))<=((vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT))<<(((v0.c0)/(vt0.c1)))) WHERE ((((~ (vt0.c1)))==(((((NULL)AND(v0.c0)))OR(NULL))))) ORDER BY CASE x''  WHEN ((((((((v0.c0)AND(vt0.c1)))AND(NULL)))AND(v0.c0)))OR(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((v0.c0)OR(v0.c0)))OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'e\n	I' END WHEN v0.c0 COLLATE NOCASE THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1)>>(vt0.c1)) THEN (- (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)==(vt0.c0)) WHEN v0.c0 THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END WHEN ((vt0.c0)&(v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))=(((((NULL)AND(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT))<<(((v0.c0)/(vt0.c1)))) ORDER BY CASE x''  WHEN ((((((((v0.c0)AND(vt0.c1)))AND(NULL)))AND(v0.c0)))OR(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((v0.c0)OR(v0.c0)))OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'e\n	I' END WHEN v0.c0 COLLATE NOCASE THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1)>>(vt0.c1)) THEN (- (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)=(vt0.c0)) WHEN v0.c0 THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END WHEN ((vt0.c0)&(v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT))<<(((v0.c0)/(vt0.c1)))) WHERE ((((~ (vt0.c1)))==(((((NULL)AND(v0.c0)))OR(NULL))))) ORDER BY CASE x''  WHEN ((((((((v0.c0)AND(vt0.c1)))AND(NULL)))AND(v0.c0)))OR(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((v0.c0)OR(v0.c0)))OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'e\n	I' END WHEN v0.c0 COLLATE NOCASE THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1)>>(vt0.c1)) THEN (- (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)==(vt0.c0)) WHEN v0.c0 THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END WHEN ((vt0.c0)&(v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE vt0.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c1)))=(((((NULL)AND(v0.c0)))OR(NULL))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT))<<(((v0.c0)/(vt0.c1)))) ORDER BY CASE x''  WHEN ((((((((v0.c0)AND(vt0.c1)))AND(NULL)))AND(v0.c0)))OR(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((v0.c0)OR(v0.c0)))OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'e\n	I' END WHEN v0.c0 COLLATE NOCASE THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1)>>(vt0.c1)) THEN (- (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)=(vt0.c0)) WHEN v0.c0 THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END WHEN ((vt0.c0)&(v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE vt0.c0 END);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((CAST(v0.c0 AS TEXT))<<(((v0.c0)/(vt0.c1)))) WHERE ((((~ (vt0.c1)))==(((((NULL)AND(v0.c0)))OR(NULL))))) ORDER BY CASE x''  WHEN ((((((((v0.c0)AND(vt0.c1)))AND(NULL)))AND(v0.c0)))OR(vt0.c1)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))) WHEN ((((v0.c0)OR(v0.c0)))OR(vt0.c0)) THEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 'e\n	I' END WHEN v0.c0 COLLATE NOCASE THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c1)>>(vt0.c1)) THEN (- (vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)==(vt0.c0)) WHEN v0.c0 THEN CASE WHEN vt0.c1 THEN NULL WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END WHEN ((vt0.c0)&(v0.c0)) THEN vt0.c1 COLLATE RTRIM ELSE vt0.c0 END;
SELECT ALL COUNT(*) FROM vt0 WHERE ((INSTR(vt0.c1, vt0.c0) IN (0.944149219629372, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(vt0.c1, vt0.c0) IN (0.944149219629372, vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((INSTR(vt0.c1, vt0.c0) IN (0.944149219629372, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL (((INSTR(vt0.c1, vt0.c0) IN (0.944149219629372, vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((INSTR(vt0.c1, vt0.c0) IN (0.944149219629372, vt0.c1)));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c0)<=(v0.c0)))))AND(CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(((v0.c0)LIKE(vt0.c0)))) WHERE ((((vt0.c1))>=((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c0)<=(v0.c0)))))AND(CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(((v0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c0)<=(v0.c0)))))AND(CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(((v0.c0)LIKE(vt0.c0)))) WHERE ((((vt0.c1))>=((vt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c1))>=((vt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c0)<=(v0.c0)))))AND(CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(((v0.c0)LIKE(vt0.c0)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(((vt0.c0)<=(v0.c0)))))AND(CASE vt0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)))OR((((vt0.c1)) BETWEEN ((v0.c0)) AND ((vt0.c1))))))OR(((v0.c0)LIKE(vt0.c0)))) WHERE ((((vt0.c1))>=((vt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) ORDER BY PRINTF(0.359563527764136 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY PRINTF(0.359563527764136 COLLATE BINARY)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) ORDER BY PRINTF(0.359563527764136 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0 ORDER BY PRINTF(0.359563527764136 COLLATE BINARY)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((('') NOT BETWEEN (vt0.c0) AND (vt0.c1))) IS FALSE)) ORDER BY PRINTF(0.359563527764136 COLLATE BINARY)  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((NOT (v0.c0)) IN ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NOT (v0.c0)) IN ((~ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (v0.c0)) IN ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((NOT (v0.c0)) IN ((~ (vt0.c1)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT)) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) NOTNULL));
SELECT ALL * FROM v0 WHERE (((- (v0.c0)) IN ())) ORDER BY ((v0.c0)%(((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)%(((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((- (v0.c0)) IN ())) ORDER BY ((v0.c0)%(((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (v0.c0)) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)%(((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((- (v0.c0)) IN ())) ORDER BY ((v0.c0)%(((v0.c0)OR(v0.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffd492d6e4 THEN v0.c0 ELSE vt0.c1 END THEN TRIM(DISTINCT -1568632617) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffd492d6e4 THEN v0.c0 ELSE vt0.c1 END THEN TRIM(DISTINCT -1568632617) ELSE NULL END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffd492d6e4 THEN v0.c0 ELSE vt0.c1 END THEN TRIM(DISTINCT -1568632617) ELSE NULL END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffd492d6e4 THEN v0.c0 ELSE vt0.c1 END THEN TRIM(DISTINCT -1568632617) ELSE NULL END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c0 WHEN 0Xffffffffd492d6e4 THEN v0.c0 ELSE vt0.c1 END THEN TRIM(DISTINCT -1568632617) ELSE NULL END);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (v0.c0))) NOTNULL) WHERE (json_valid(CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((NULL))))IS(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((~ (v0.c0))) NOTNULL) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((NULL))))IS(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (v0.c0))) NOTNULL) WHERE (json_valid(CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((NULL))))IS(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((~ (v0.c0))) NOTNULL) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((NULL))))IS(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON (((~ (v0.c0))) NOTNULL) WHERE (json_valid(CASE vt0.c0  WHEN vt0.c1 THEN v0.c0 ELSE vt0.c1 END)) ORDER BY (((((vt0.c0)) BETWEEN ((v0.c0)) AND ((NULL))))IS(CAST(vt0.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND('1e500')))OR(vt0.c0)) IN ())) ORDER BY ((((((x'') NOTNULL))OR('d#')))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR((+ (vt0.c0)))))OR((x'f1b3' IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND('1e500')))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'') NOTNULL))OR('d#')))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR((+ (vt0.c0)))))OR((x'f1b3' IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1)AND('1e500')))OR(vt0.c0)) IN ())) ORDER BY ((((((x'') NOTNULL))OR('d#')))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR((+ (vt0.c0)))))OR((x'f1b3' IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)AND('1e500')))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((x'') NOTNULL))OR('d#')))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((((((((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR((+ (vt0.c0)))))OR((x'f1b3' IN ()))) ASC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN ')h' THEN v0.c0 ELSE 9.14884979E8 END))) ORDER BY vt0.c0 ASC  NULLS FIRST, LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.8143304668987812);
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN ')h' THEN v0.c0 ELSE 9.14884979E8 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.8143304668987812));
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN ')h' THEN v0.c0 ELSE 9.14884979E8 END))) ORDER BY vt0.c0 ASC  NULLS FIRST, LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.8143304668987812);
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN ')h' THEN v0.c0 ELSE 9.14884979E8 END))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.8143304668987812));
SELECT ALL * FROM v0, vt0 WHERE ((((((((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c1) NOT NULL))))AND(CASE WHEN ')h' THEN v0.c0 ELSE 9.14884979E8 END))) ORDER BY vt0.c0 ASC  NULLS FIRST, LIKELIHOOD(vt0.c0 COLLATE RTRIM, 0.8143304668987812);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) WHERE (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) WHERE (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c1) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) WHERE (CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END COLLATE BINARY);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN (((((v0.c0)AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((v0.c0 IN (((((v0.c0)AND(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT * FROM v0 WHERE ((((0.8785477685155865))=((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((0.8785477685155865))==((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0.8785477685155865))=((v0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((0.8785477685155865))==((v0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((0.8785477685155865))=((v0.c0))) COLLATE RTRIM);
SELECT * FROM v0 WHERE ('&') ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS TEXT) ELSE (('') BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('&') IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS TEXT) ELSE (('') BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST);
SELECT * FROM v0 WHERE ('&') ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS TEXT) ELSE (('') BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('&') IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS TEXT) ELSE (('') BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST);
SELECT * FROM v0 WHERE ('&') ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS TEXT) ELSE (('') BETWEEN (v0.c0) AND (v0.c0)) END  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c1))!=((v0.c0))) COLLATE NOCASE COLLATE BINARY WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((vt0.c1))<>((v0.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c1))!=((v0.c0))) COLLATE NOCASE COLLATE BINARY WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((vt0.c1))<>((v0.c0))) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((vt0.c1))!=((v0.c0))) COLLATE NOCASE COLLATE BINARY WHERE (v0.c0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY NULL  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)>(v0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY x'');
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)>(v0.c0))))) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY x'');
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) BETWEEN (CASE v0.c0  WHEN v0.c0 THEN v0.c0 END) AND (((v0.c0)>(v0.c0))))) ORDER BY x'';
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)-(SQLITE_VERSION()))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((CAST(v0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)-(SQLITE_VERSION()))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((CAST(v0.c0 AS TEXT)))) DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)-(SQLITE_VERSION()))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((CAST(v0.c0 AS TEXT)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM)-(SQLITE_VERSION()))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((CAST(v0.c0 AS TEXT)))) DESC);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE RTRIM)-(SQLITE_VERSION()))) ORDER BY (((v0.c0)) NOT BETWEEN (((~ (v0.c0)))) AND ((CAST(v0.c0 AS TEXT)))) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (0.9383708670713132) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), (((1.154742867E9))=((x''))), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), (- (vt0.c0)), ((vt0.c0)&(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9383708670713132) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), (((1.154742867E9))=((x''))), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), (- (vt0.c0)), ((vt0.c0)&(vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (0.9383708670713132) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), (((1.154742867E9))=((x''))), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), (- (vt0.c0)), ((vt0.c0)&(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.9383708670713132) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), (((1.154742867E9))=((x''))), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), (- (vt0.c0)), ((vt0.c0)&(vt0.c1)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN v0 WHERE (0.9383708670713132) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((((vt0.c1) NOT NULL), (((1.154742867E9))=((x''))), ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC), (- (vt0.c0)), ((vt0.c0)&(vt0.c1)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) IS TRUE)) ORDER BY (vt0.c0 IN (-667620124)) DESC, (+ (vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (-667620124)) DESC, (+ (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) IS TRUE)) ORDER BY (vt0.c0 IN (-667620124)) DESC, (+ (vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT vt0.c0)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN (-667620124)) DESC, (+ (vt0.c0)) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UPPER(DISTINCT vt0.c0)) IS TRUE)) ORDER BY (vt0.c0 IN (-667620124)) DESC, (+ (vt0.c0)) COLLATE BINARY COLLATE NOCASE;
SELECT ALL * FROM v0 WHERE (((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))AND((~ (v0.c0)))))OR(ABS(v0.c0))))OR(((x'')||(v0.c0))))) ORDER BY ((((v0.c0 COLLATE RTRIM)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))AND((~ (v0.c0)))))OR(ABS(v0.c0))))OR(((x'')||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE RTRIM)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))AND((~ (v0.c0)))))OR(ABS(v0.c0))))OR(((x'')||(v0.c0))))) ORDER BY ((((v0.c0 COLLATE RTRIM)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))AND((~ (v0.c0)))))OR(ABS(v0.c0))))OR(((x'')||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0 COLLATE RTRIM)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))) ASC);
SELECT ALL * FROM v0 WHERE (((((((((CAST(v0.c0 AS TEXT))AND((v0.c0 IN ()))))AND((~ (v0.c0)))))OR(ABS(v0.c0))))OR(((x'')||(v0.c0))))) ORDER BY ((((v0.c0 COLLATE RTRIM)AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((((((((v0.c0)OR(v0.c0)))OR(NULL)))OR(v0.c0)))AND(v0.c0)))) ASC;
SELECT ALL * FROM v0 WHERE (0.5604022593198893) ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<=(((v0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.5604022593198893) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<=(((v0.c0)>=(v0.c0)))));
SELECT ALL * FROM v0 WHERE (0.5604022593198893) ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<=(((v0.c0)>=(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((0.5604022593198893) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<=(((v0.c0)>=(v0.c0)))));
SELECT ALL * FROM v0 WHERE (0.5604022593198893) ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))))<=(((v0.c0)>=(v0.c0))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c1) THEN (vt0.c1 IN ()) ELSE (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY '-968547841';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c1) THEN (vt0.c1 IN ()) ELSE (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY '-968547841');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c1) THEN (vt0.c1 IN ()) ELSE (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY '-968547841';
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c1) THEN (vt0.c1 IN ()) ELSE (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY '-968547841');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(vt0.c1) THEN (vt0.c1 IN ()) ELSE (((vt0.c1, vt0.c1, vt0.c0))<((vt0.c0, vt0.c0, vt0.c0))) END) ORDER BY '-968547841';
SELECT ALL * FROM v0, vt0 WHERE (LENGTH(CAST(v0.c0 AS REAL))) ORDER BY CAST(vt0.c1 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(vt0.c1 AS REAL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (LENGTH(CAST(v0.c0 AS REAL))) ORDER BY CAST(vt0.c1 AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LENGTH(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST(vt0.c1 AS REAL)  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (LENGTH(CAST(v0.c0 AS REAL))) ORDER BY CAST(vt0.c1 AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST('1885170216' AS REAL)) ORDER BY CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1885170216' AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST('1885170216' AS REAL)) ORDER BY CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1885170216' AS REAL)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST('1885170216' AS REAL)) ORDER BY CASE NULL  WHEN vt0.c1 COLLATE RTRIM THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((+ (vt0.c1)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))) ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR((((vt0.c1, NULL, vt0.c0))!=((vt0.c0, vt0.c1, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR((((vt0.c1, NULL, vt0.c0))!=((vt0.c0, vt0.c1, v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((+ (vt0.c1)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))) ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR((((vt0.c1, NULL, vt0.c0))!=((vt0.c0, vt0.c1, v0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c1)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR((((vt0.c1, NULL, vt0.c0))!=((vt0.c0, vt0.c1, v0.c0)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((+ (vt0.c1)) IN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (NULL))))) ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)))))OR((((vt0.c1, NULL, vt0.c0))!=((vt0.c0, vt0.c1, v0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0))<=((vt0.c0, vt0.c1, vt0.c1))) COLLATE RTRIM);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)), (vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST((((v0.c0, v0.c0, v0.c0))>((v0.c0, v0.c0, v0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0)))AND(NULL)))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)LIKE(v0.c0)))AND(NULL)))AND(((v0.c0) BETWEEN (x'') AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0)))AND(NULL)))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)LIKE(v0.c0)))AND(NULL)))AND(((v0.c0) BETWEEN (x'') AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((v0.c0)LIKE(v0.c0)))AND(NULL)))AND(((v0.c0) BETWEEN (x'') AND (v0.c0)))));
SELECT * FROM v0, vt0 WHERE (UNLIKELY(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (UNLIKELY(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c1) NOT NULL))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (UNLIKELY(((vt0.c1) NOT NULL)));
SELECT COUNT(*) FROM v0 WHERE (((NULL IN ()) IN ())) ORDER BY ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)<>(v0.c0))))  NULLS LAST, CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)!=(v0.c0))))  NULLS LAST, CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((NULL IN ()) IN ())) ORDER BY ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)<>(v0.c0))))  NULLS LAST, CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)!=(v0.c0))))  NULLS LAST, CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((NULL IN ()) IN ())) ORDER BY ((((((v0.c0) IS TRUE))OR(v0.c0 COLLATE BINARY)))OR(((v0.c0)<>(v0.c0))))  NULLS LAST, CAST(((v0.c0) IS TRUE) AS BLOB) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) IS TRUE) WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC)) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) IS TRUE) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) IS TRUE) WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC)) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) IS TRUE) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON ((((((v0.c0)OR(vt0.c1)))AND(v0.c0))) IS TRUE) WHERE (CAST(((v0.c0) IS TRUE) AS NUMERIC)) ORDER BY ((vt0.c1) IS FALSE) COLLATE RTRIM;
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (NULL);
SELECT * FROM vt0 WHERE ((+ ((NOT (vt0.c1))))) ORDER BY (- (JULIANDAY(vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (- (JULIANDAY(vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL))));
SELECT * FROM vt0 WHERE ((+ ((NOT (vt0.c1))))) ORDER BY (- (JULIANDAY(vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (- (JULIANDAY(vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL))));
SELECT * FROM vt0 WHERE ((+ ((NOT (vt0.c1))))) ORDER BY (- (JULIANDAY(vt0.c1, vt0.c1, vt0.c1, vt0.c0, NULL)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0)||(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)||(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)||(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c0)||(CAST(vt0.c1 AS TEXT))));
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))>=((v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))>=((v0.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0))>=((v0.c0))) AS NUMERIC)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0))>=((v0.c0))) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (NULL) ORDER BY ((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR(vt0.c1)))AND((vt0.c1 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR(vt0.c1)))AND((vt0.c1 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, '' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, v0 WHERE (NULL) ORDER BY ((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR(vt0.c1)))AND((vt0.c1 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, '' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((v0.c0 COLLATE NOCASE)OR(((vt0.c0) NOTNULL))))OR(vt0.c1)))AND((vt0.c1 IN ()))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, '' DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) END) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)=(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) END) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)=(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN (((vt0.c0))>((vt0.c0))) THEN ((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)) END) ORDER BY CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END AS REAL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN v0 ON ((((0.21863095802411792)AND(NULL)))OR(vt0.c1 COLLATE NOCASE)) WHERE (CAST(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END AS INTEGER)) ORDER BY (((((NOT (vt0.c0)))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))))AND(((v0.c0)IS(v0.c0)))) DESC  NULLS LAST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((0.21863095802411792)AND(NULL)))OR(vt0.c1 COLLATE NOCASE)) ORDER BY (((((NOT (vt0.c0)))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))))AND(((v0.c0)IS(v0.c0)))) DESC  NULLS LAST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((0.21863095802411792)AND(NULL)))OR(vt0.c1 COLLATE NOCASE)) WHERE (CAST(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END AS INTEGER)) ORDER BY (((((NOT (vt0.c0)))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))))AND(((v0.c0)IS(v0.c0)))) DESC  NULLS LAST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END AS INTEGER)) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((((0.21863095802411792)AND(NULL)))OR(vt0.c1 COLLATE NOCASE)) ORDER BY (((((NOT (vt0.c0)))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))))AND(((v0.c0)IS(v0.c0)))) DESC  NULLS LAST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN v0 ON ((((0.21863095802411792)AND(NULL)))OR(vt0.c1 COLLATE NOCASE)) WHERE (CAST(CASE v0.c0  WHEN vt0.c1 THEN v0.c0 END AS INTEGER)) ORDER BY (((((NOT (vt0.c0)))OR(((((vt0.c1)AND(v0.c0)))OR(vt0.c1)))))AND(((v0.c0)IS(v0.c0)))) DESC  NULLS LAST, (- (v0.c0 COLLATE RTRIM)) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (((NOT (vt0.c0)))||(((((v0.c0)AND(x'87ca')))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (vt0.c0)))||(((((v0.c0)AND(x'87ca')))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (((NOT (vt0.c0)))||(((((v0.c0)AND(x'87ca')))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE BINARY) IS TRUE)  as count FROM vt0, v0 ORDER BY (((NOT (vt0.c0)))||(((((v0.c0)AND(x'87ca')))AND(vt0.c1)))));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0 COLLATE BINARY) ORDER BY (((NOT (vt0.c0)))||(((((v0.c0)AND(x'87ca')))AND(vt0.c1))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((v0.c0)) NOT BETWEEN ((LIKELY(vt0.c0))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))AND(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE BINARY)));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((json_type(vt0.c1), vt0.c1 COLLATE BINARY, (NOT (v0.c0)))) AND (('', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((json_type(vt0.c1), vt0.c1 COLLATE BINARY, (NOT (v0.c0)))) AND (('', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)AND(v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((json_type(vt0.c1), vt0.c1 COLLATE BINARY, (NOT (v0.c0)))) AND (('', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)AND(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((json_type(vt0.c1), vt0.c1 COLLATE BINARY, (NOT (v0.c0)))) AND (('', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)AND(v0.c0)))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE ((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((json_type(vt0.c1), vt0.c1 COLLATE BINARY, (NOT (v0.c0)))) AND (('', ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)AND(v0.c0))))));
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN '-76509904' THEN -1022135586 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0) NOTNULL)))) ORDER BY ((load_extension(v0.c0))<>(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN '-76509904' THEN -1022135586 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((load_extension(v0.c0))<>(CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN '-76509904' THEN -1022135586 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0) NOTNULL)))) ORDER BY ((load_extension(v0.c0))<>(CAST(v0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT (((CASE v0.c0  WHEN '-76509904' THEN -1022135586 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0) NOTNULL)))) IS TRUE)  as count FROM v0 ORDER BY ((load_extension(v0.c0))<>(CAST(v0.c0 AS INTEGER))) ASC);
SELECT COUNT(*) FROM v0 WHERE ((CASE v0.c0  WHEN '-76509904' THEN -1022135586 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END IN (((v0.c0) NOTNULL)))) ORDER BY ((load_extension(v0.c0))<>(CAST(v0.c0 AS INTEGER))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN '0.05972416277886772' THEN ((vt0.c1)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) THEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) END) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '0.05972416277886772' THEN ((vt0.c1)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) THEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN '0.05972416277886772' THEN ((vt0.c1)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) THEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) END) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN '0.05972416277886772' THEN ((vt0.c1)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) THEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((vt0.c0 IN ()) AS INTEGER));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN '0.05972416277886772' THEN ((vt0.c1)IS(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (NULL)) THEN ((((vt0.c1)AND(v0.c0)))AND(v0.c0)) END) ORDER BY CAST((vt0.c0 IN ()) AS INTEGER);
SELECT * FROM vt0, v0 WHERE (((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))&(((vt0.c1) BETWEEN ('s') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))&(((vt0.c1) BETWEEN ('s') AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))&(((vt0.c1) BETWEEN ('s') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))&(((vt0.c1) BETWEEN ('s') AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((((((v0.c0)AND(vt0.c0)))AND(v0.c0)))OR(v0.c0)))AND(v0.c0)))&(((vt0.c1) BETWEEN ('s') AND (vt0.c1)))));
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (NULL) ORDER BY ((vt0.c0 COLLATE NOCASE) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (v0.c0)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND (((+ (v0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((TYPEOF(DISTINCT v0.c0))*(vt0.c0))  NULLS FIRST, CAST(v0.c0 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((TYPEOF(DISTINCT v0.c0))*(vt0.c0))  NULLS FIRST, CAST(v0.c0 AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((TYPEOF(DISTINCT v0.c0))*(vt0.c0))  NULLS FIRST, CAST(v0.c0 AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((TYPEOF(DISTINCT v0.c0))*(vt0.c0))  NULLS FIRST, CAST(v0.c0 AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)) ORDER BY ((TYPEOF(DISTINCT v0.c0))*(vt0.c0))  NULLS FIRST, CAST(v0.c0 AS NUMERIC)  NULLS FIRST;
SELECT ALL * FROM v0 WHERE ((- (CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST('' AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (CAST('' AS NUMERIC))));
SELECT SUM(count) FROM (SELECT (((- (CAST('' AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((- (CAST('' AS NUMERIC))));
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c0 END END) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))) DESC, CASE ABS(DISTINCT v0.c0)  WHEN '-401153014' THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))) DESC, CASE ABS(DISTINCT v0.c0)  WHEN '-401153014' THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c0 END END) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))) DESC, CASE ABS(DISTINCT v0.c0)  WHEN '-401153014' THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c0 END END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))) DESC, CASE ABS(DISTINCT v0.c0)  WHEN '-401153014' THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))  WHEN NULL THEN CASE WHEN v0.c0 THEN v0.c0 END END) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR((v0.c0 IN ()))) DESC, CASE ABS(DISTINCT v0.c0)  WHEN '-401153014' THEN v0.c0 COLLATE NOCASE ELSE (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) END;
SELECT * FROM v0, vt0 WHERE (-1803604021 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((-1803604021 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (-1803604021 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((-1803604021 COLLATE BINARY) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (-1803604021 COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)-(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (((v0.c0) NOT NULL))) WHERE (json(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)-(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)-(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (((v0.c0) NOT NULL))) WHERE (json(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((json(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)-(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (((v0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON ((((v0.c0)-(v0.c0))) NOT BETWEEN (((v0.c0)+(v0.c0))) AND (((v0.c0) NOT NULL))) WHERE (json(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT * FROM vt0 WHERE (DATE(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((DATE(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (DATE(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((DATE(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (DATE(vt0.c0, vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) ISNULL), ((v0.c0)+(v0.c0)), CAST(v0.c0 AS TEXT)))==((CAST(v0.c0 AS BLOB), ((v0.c0)%(v0.c0)), v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL), ((v0.c0)+(v0.c0)), CAST(v0.c0 AS TEXT)))=((CAST(v0.c0 AS BLOB), ((v0.c0)%(v0.c0)), v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) ISNULL), ((v0.c0)+(v0.c0)), CAST(v0.c0 AS TEXT)))==((CAST(v0.c0 AS BLOB), ((v0.c0)%(v0.c0)), v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL), ((v0.c0)+(v0.c0)), CAST(v0.c0 AS TEXT)))=((CAST(v0.c0 AS BLOB), ((v0.c0)%(v0.c0)), v0.c0)))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) ISNULL), ((v0.c0)+(v0.c0)), CAST(v0.c0 AS TEXT)))==((CAST(v0.c0 AS BLOB), ((v0.c0)%(v0.c0)), v0.c0))));
SELECT ALL * FROM v0 WHERE (load_extension(((v0.c0) NOTNULL), v0.c0));
SELECT SUM(count) FROM (SELECT ((load_extension(((v0.c0) NOTNULL), v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (load_extension(((v0.c0) NOTNULL), v0.c0));
SELECT SUM(count) FROM (SELECT ((load_extension(((v0.c0) NOTNULL), v0.c0)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (load_extension(((v0.c0) NOTNULL), v0.c0));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((NULL)) AND (((v0.c0 IN ()))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((NULL)) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((NULL)) AND (((v0.c0 IN ()))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((NULL)) AND (((v0.c0 IN ()))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN ((NULL)) AND (((v0.c0 IN ()))))) ORDER BY v0.c0 ASC;
SELECT * FROM vt0 WHERE (((NULL) IS FALSE)) ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS BLOB)  NULLS FIRST, (((vt0.c0, 'Ìèót7801938055036275384 1429219977732700754 -7550399805613925759T1723:-2951150817854811807:384 565T1539--7942274573999546833 L4T\', vt0.c0))==((vt0.c1, vt0.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS BLOB)  NULLS FIRST, (((vt0.c0, 'Ìèót7801938055036275384 1429219977732700754 -7550399805613925759T1723:-2951150817854811807:384 565T1539--7942274573999546833 L4T\', vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL) IS FALSE)) ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS BLOB)  NULLS FIRST, (((vt0.c0, 'Ìèót7801938055036275384 1429219977732700754 -7550399805613925759T1723:-2951150817854811807:384 565T1539--7942274573999546833 L4T\', vt0.c0))==((vt0.c1, vt0.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS BLOB)  NULLS FIRST, (((vt0.c0, 'Ìèót7801938055036275384 1429219977732700754 -7550399805613925759T1723:-2951150817854811807:384 565T1539--7942274573999546833 L4T\', vt0.c0))=((vt0.c1, vt0.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((NULL) IS FALSE)) ORDER BY CAST(((vt0.c0)OR(vt0.c1)) AS BLOB)  NULLS FIRST, (((vt0.c0, 'Ìèót7801938055036275384 1429219977732700754 -7550399805613925759T1723:-2951150817854811807:384 565T1539--7942274573999546833 L4T\', vt0.c0))==((vt0.c1, vt0.c0, vt0.c1))) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CASE 0.15978320515268096  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)*(vt0.c1)), (((0.10841212446742565))>((v0.c0))))) AND ((NULL, v0.c0 COLLATE BINARY, (vt0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CASE 0.15978320515268096  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)*(vt0.c1)), (((0.10841212446742565))>((v0.c0))))) AND ((NULL, v0.c0 COLLATE BINARY, (vt0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CASE 0.15978320515268096  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)*(vt0.c1)), (((0.10841212446742565))>((v0.c0))))) AND ((NULL, v0.c0 COLLATE BINARY, (vt0.c0 IN (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CASE 0.15978320515268096  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)*(vt0.c1)), (((0.10841212446742565))>((v0.c0))))) AND ((NULL, v0.c0 COLLATE BINARY, (vt0.c0 IN (v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((CASE 0.15978320515268096  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END, ((v0.c0)*(vt0.c1)), (((0.10841212446742565))>((v0.c0))))) AND ((NULL, v0.c0 COLLATE BINARY, (vt0.c0 IN (v0.c0))))));
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c1, vt0.c0)))) AND ((0x4698cdd3 COLLATE NOCASE)))) ORDER BY UPPER(v0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c1, vt0.c0)))) AND ((0X4698cdd3 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY UPPER(v0.c0) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c1, vt0.c0)))) AND ((0x4698cdd3 COLLATE NOCASE)))) ORDER BY UPPER(v0.c0) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c1, vt0.c0)))) AND ((0X4698cdd3 COLLATE NOCASE)))) IS TRUE)  as count FROM v0, vt0 ORDER BY UPPER(v0.c0) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN (vt0.c1, vt0.c0)))) AND ((0x4698cdd3 COLLATE NOCASE)))) ORDER BY UPPER(v0.c0) DESC  NULLS LAST;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<=(((((v0.c0)AND(x'')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<=(((((v0.c0)AND(x'')))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<=(((((v0.c0)AND(x'')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<=(((((v0.c0)AND(x'')))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)<=(((((v0.c0)AND(x'')))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS BLOB))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(v0.c0 AS BLOB))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))))))AND(v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS BLOB))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((''))))))AND(v0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.5604022593198893 WHEN (-62448676 IN (vt0.c0, vt0.c1)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (0.6166116344615968) AND (vt0.c0)) THEN x'' ELSE (('-1105218763') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.5604022593198893 WHEN (-62448676 IN (vt0.c0, vt0.c1)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (0.6166116344615968) AND (vt0.c0)) THEN x'' ELSE (('-1105218763') NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.5604022593198893 WHEN (-62448676 IN (vt0.c0, vt0.c1)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (0.6166116344615968) AND (vt0.c0)) THEN x'' ELSE (('-1105218763') NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)!=(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.5604022593198893 WHEN (-62448676 IN (vt0.c0, vt0.c1)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (0.6166116344615968) AND (vt0.c0)) THEN x'' ELSE (('-1105218763') NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c1)IS NOT(vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0)<>(vt0.c0)) WHEN vt0.c1 COLLATE BINARY THEN 0.5604022593198893 WHEN (-62448676 IN (vt0.c0, vt0.c1)) THEN (~ (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (0.6166116344615968) AND (vt0.c0)) THEN x'' ELSE (('-1105218763') NOT NULL) END);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.6272916749527104)|('2045087971')));
SELECT SUM(count) FROM (SELECT ((((0.6272916749527104)|('2045087971'))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.6272916749527104)|('2045087971')));
SELECT SUM(count) FROM (SELECT ((((0.6272916749527104)|('2045087971'))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((0.6272916749527104)|('2045087971')));
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS TEXT)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(vt0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) AND ((((vt0.c1)IS NOT(vt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)>>(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt0.c1)))IS(vt0.c1 COLLATE NOCASE))) ORDER BY CAST(0.5185623328699646 AS BLOB)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)||((- (vt0.c0)))) DESC, CASE WHEN NULL THEN v0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(vt0.c1)))IS(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(0.5185623328699646 AS BLOB)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)||((- (vt0.c0)))) DESC, CASE WHEN NULL THEN v0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt0.c1)))IS(vt0.c1 COLLATE NOCASE))) ORDER BY CAST(0.5185623328699646 AS BLOB)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)||((- (vt0.c0)))) DESC, CASE WHEN NULL THEN v0.c0 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)AND(v0.c0)))OR(vt0.c1)))IS(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, v0 ORDER BY CAST(0.5185623328699646 AS BLOB)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)||((- (vt0.c0)))) DESC, CASE WHEN NULL THEN v0.c0 END COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt0.c1)))IS(vt0.c1 COLLATE NOCASE))) ORDER BY CAST(0.5185623328699646 AS BLOB)  NULLS FIRST, ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN v0.c0 THEN vt0.c1 END)||((- (vt0.c0)))) DESC, CASE WHEN NULL THEN v0.c0 END COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)<(vt0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)<(vt0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)<(vt0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)<(vt0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE))));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0)LIKE(vt0.c0))))) ORDER BY (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)<(vt0.c0)), ((vt0.c1)/(vt0.c0)))) AND ((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, vt0.c1 COLLATE NOCASE)));
SELECT * FROM vt0, v0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (HEX(DISTINCT CAST(vt0.c0 AS INTEGER)));
SELECT ALL * FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE (+ (vt0.c1))  WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c1)%(0.23673621580891402)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE (+ (vt0.c1))  WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c1)%(0.23673621580891402)) END);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE (+ (vt0.c1))  WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c1)%(0.23673621580891402)) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) IS TRUE) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE (+ (vt0.c1))  WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c1)%(0.23673621580891402)) END);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((vt0.c0) IS TRUE) AS BLOB)) ORDER BY CASE (+ (vt0.c1))  WHEN (((v0.c0)) BETWEEN ((vt0.c1)) AND ((v0.c0))) THEN ((vt0.c1)%(0.23673621580891402)) END;
SELECT * FROM v0, vt0 WHERE (CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CAST(v0.c0 AS REAL));
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (((v0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((v0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (((v0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (((v0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 NOT INDEXED WHERE (((vt0.c0) BETWEEN (((v0.c0) IS TRUE)) AND (CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND (((NOT (v0.c0)), CAST(vt0.c1 AS TEXT), ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c0))))) WHERE ((vt0.c1 IN (v0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(0.5401402203239752)), CASE ((NULL)+(0.6249210172901842))  WHEN (((vt0.c1, v0.c0, vt0.c1, v0.c0, vt0.c0))<=((vt0.c1, -1.70898233E9, 0.9085804942888283, vt0.c1, vt0.c0))) THEN x'' ELSE CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND (((NOT (v0.c0)), CAST(vt0.c1 AS TEXT), ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(0.5401402203239752)), CASE ((NULL)+(0.6249210172901842))  WHEN (((vt0.c1, v0.c0, vt0.c1, v0.c0, vt0.c0))<=((vt0.c1, -1.70898233E9, 0.9085804942888283, vt0.c1, vt0.c0))) THEN x'' ELSE CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND (((NOT (v0.c0)), CAST(vt0.c1 AS TEXT), ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c0))))) WHERE ((vt0.c1 IN (v0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(0.5401402203239752)), CASE ((NULL)+(0.6249210172901842))  WHEN (((vt0.c1, v0.c0, vt0.c1, v0.c0, vt0.c0))<=((vt0.c1, -1.70898233E9, 0.9085804942888283, vt0.c1, vt0.c0))) THEN x'' ELSE CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN (v0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND (((NOT (v0.c0)), CAST(vt0.c1 AS TEXT), ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(0.5401402203239752)), CASE ((NULL)+(0.6249210172901842))  WHEN (((vt0.c1, v0.c0, vt0.c1, v0.c0, vt0.c0))<=((vt0.c1, -1.70898233E9, 0.9085804942888283, vt0.c1, vt0.c0))) THEN x'' ELSE CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((vt0.c0, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1 COLLATE BINARY, NULL, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))) AND (((NOT (v0.c0)), CAST(vt0.c1 AS TEXT), ((((((((vt0.c0)AND(v0.c0)))AND(vt0.c1)))OR(v0.c0)))AND(vt0.c0))))) WHERE ((vt0.c1 IN (v0.c0)) COLLATE BINARY) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))GLOB(0.5401402203239752)), CASE ((NULL)+(0.6249210172901842))  WHEN (((vt0.c1, v0.c0, vt0.c1, v0.c0, vt0.c0))<=((vt0.c1, -1.70898233E9, 0.9085804942888283, vt0.c1, vt0.c0))) THEN x'' ELSE CASE WHEN vt0.c1 THEN v0.c0 ELSE vt0.c0 END END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (HEX(CASE WHEN vt0.c0 THEN '25396624' END)) ORDER BY (((+ (vt0.c1)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST, CAST(PRINTF(vt0.c1) AS TEXT);
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt0.c0 THEN '25396624' END)) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c1)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST, CAST(PRINTF(vt0.c1) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (HEX(CASE WHEN vt0.c0 THEN '25396624' END)) ORDER BY (((+ (vt0.c1)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST, CAST(PRINTF(vt0.c1) AS TEXT);
SELECT SUM(count) FROM (SELECT ((HEX(CASE WHEN vt0.c0 THEN '25396624' END)) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c1)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST, CAST(PRINTF(vt0.c1) AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (HEX(CASE WHEN vt0.c0 THEN '25396624' END)) ORDER BY (((+ (vt0.c1)))!=(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END))  NULLS LAST, CAST(PRINTF(vt0.c1) AS TEXT);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((+ ('')));
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((+ ('')));
SELECT SUM(count) FROM (SELECT ALL (((+ (''))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON vt0.c0 WHERE ((+ ('')));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((0.9383708670713132)AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))OR(v0.c0)))<=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.9383708670713132)AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))OR(v0.c0)))<=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((0.9383708670713132)AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))OR(v0.c0)))<=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((0.9383708670713132)AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))OR(v0.c0)))<=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((((((((0.9383708670713132)AND(v0.c0)))AND(v0.c0)))OR(vt0.c1)))OR(v0.c0)))<=(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)));
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.9571841401964817) AND (vt0.c1)))IS NOT((((vt0.c1)) BETWEEN (('-524347575')) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (0.9571841401964817) AND (vt0.c1)))IS NOT((((vt0.c1)) BETWEEN (('-524347575')) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.9571841401964817) AND (vt0.c1)))IS NOT((((vt0.c1)) BETWEEN (('-524347575')) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (0.9571841401964817) AND (vt0.c1)))IS NOT((((vt0.c1)) BETWEEN (('-524347575')) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) BETWEEN (0.9571841401964817) AND (vt0.c1)))IS NOT((((vt0.c1)) BETWEEN (('-524347575')) AND ((vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) ELSE ((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)) END);
SELECT COUNT(*) FROM v0 WHERE (CASE '' COLLATE BINARY  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)<<(v0.c0)))LIKE(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE '' COLLATE BINARY  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0)))LIKE(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE '' COLLATE BINARY  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)<<(v0.c0)))LIKE(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE '' COLLATE BINARY  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0)))LIKE(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CASE '' COLLATE BINARY  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) ELSE v0.c0 COLLATE NOCASE END) ORDER BY ((((v0.c0)<<(v0.c0)))LIKE(((v0.c0)|(v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((+ (v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN ((((0x6bd3dad2))>((v0.c0)))) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN ((((0X6bd3dad2))>((v0.c0)))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN ((((0x6bd3dad2))>((v0.c0)))) AND (v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((LAST_INSERT_ROWID()) NOT BETWEEN ((((0X6bd3dad2))>((v0.c0)))) AND (v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((LAST_INSERT_ROWID()) NOT BETWEEN ((((0x6bd3dad2))>((v0.c0)))) AND (v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (UNLIKELY(CAST(v0.c0 AS REAL)));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (DATETIME(v0.c0, v0.c0, 0.05441047774561436)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (DATETIME(v0.c0, v0.c0, 0.05441047774561436))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (DATETIME(v0.c0, v0.c0, 0.05441047774561436)));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (DATETIME(v0.c0, v0.c0, 0.05441047774561436))));
SELECT COUNT(*) FROM v0 WHERE (((((((v0.c0)OR(v0.c0)))OR(v0.c0)))IS NOT(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY ((((v0.c0)*(v0.c0))) BETWEEN (((((v0.c0)OR(v0.c0)))OR(v0.c0))) AND (DATETIME(v0.c0, v0.c0, 0.05441047774561436)));
SELECT * FROM vt0, v0 WHERE (NULLIF((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, v0.c0))), (vt0.c1 IN ()))) ORDER BY NULL  NULLS LAST, CASE ((v0.c0)&(v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) ISNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, v0.c0))), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS LAST, CASE ((v0.c0)&(v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) ISNULL) END DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (NULLIF((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, v0.c0))), (vt0.c1 IN ()))) ORDER BY NULL  NULLS LAST, CASE ((v0.c0)&(v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) ISNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, v0.c0))), (vt0.c1 IN ()))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL  NULLS LAST, CASE ((v0.c0)&(v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) ISNULL) END DESC  NULLS FIRST);
SELECT * FROM vt0, v0 WHERE (NULLIF((((vt0.c1, vt0.c1, v0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, v0.c0))), (vt0.c1 IN ()))) ORDER BY NULL  NULLS LAST, CASE ((v0.c0)&(v0.c0))  WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c1) ISNULL) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND (((NOT (vt0.c0)))))) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((((vt0.c0)IS(vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((((vt0.c0)IS(vt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND (((NOT (vt0.c0)))))) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((((vt0.c0)IS(vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND (((NOT (vt0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((((vt0.c0)IS(vt0.c1))))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1)) BETWEEN (((vt0.c0 IN ()))) AND (((NOT (vt0.c0)))))) ORDER BY (((vt0.c1)) BETWEEN ((((vt0.c1)-(vt0.c1)))) AND ((((vt0.c0)IS(vt0.c1))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((UNLIKELY(DISTINCT vt0.c0) IN (((vt0.c1)OR(NULL)), (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT vt0.c0) IN (((vt0.c1)OR(NULL)), (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((UNLIKELY(DISTINCT vt0.c0) IN (((vt0.c1)OR(NULL)), (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((UNLIKELY(DISTINCT vt0.c0) IN (((vt0.c1)OR(NULL)), (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1)))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((UNLIKELY(DISTINCT vt0.c0) IN (((vt0.c1)OR(NULL)), (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c1))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)AND(v0.c0))) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((NULL, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)AND(v0.c0))) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((NULL, v0.c0, v0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)AND(v0.c0))) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((NULL, v0.c0, v0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0)AND(v0.c0))) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((NULL, v0.c0, v0.c0))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1) ORDER BY ((((vt0.c0)AND(v0.c0))) BETWEEN (((v0.c0)LIKE(vt0.c0))) AND ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, v0.c0)) AND ((NULL, v0.c0, v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN 267974633 THEN v0.c0 END)<(((v0.c0)<>(v0.c0))))) ORDER BY ((v0.c0)AND(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN 267974633 THEN v0.c0 END)<(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)AND(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN 267974633 THEN v0.c0 END)<(((v0.c0)<>(v0.c0))))) ORDER BY ((v0.c0)AND(v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN 267974633 THEN v0.c0 END)<(((v0.c0)!=(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)AND(v0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (((CASE v0.c0  WHEN 267974633 THEN v0.c0 END)<(((v0.c0)<>(v0.c0))))) ORDER BY ((v0.c0)AND(v0.c0)) COLLATE NOCASE ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE 0.9966179658674058 END)|(((vt0.c0) ISNULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END)-(x'')) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE 0.9966179658674058 END)|(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END)-(x'')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE 0.9966179658674058 END)|(((vt0.c0) ISNULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END)-(x'')) ASC;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE 0.9966179658674058 END)|(((vt0.c0) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END)-(x'')) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE 0.9966179658674058 END)|(((vt0.c0) ISNULL)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END)-(x'')) ASC;
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((~ (NULL)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (NULL)) IN ()) ASC);
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((~ (NULL)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((NOT ((~ (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((~ (NULL)) IN ()) ASC);
SELECT * FROM vt0 WHERE ((NOT ((~ (vt0.c1))))) ORDER BY ((~ (NULL)) IN ()) ASC;
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (v0.c0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'1a10717c'))) NOT BETWEEN (x'') AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'1a10717c'))) NOT BETWEEN (x'') AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'1a10717c'))) NOT BETWEEN (x'') AND (v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (x'1a10717c'))) NOT BETWEEN (x'') AND (v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (x'1a10717c'))) NOT BETWEEN (x'') AND (v0.c0 COLLATE RTRIM)));
SELECT * FROM v0 WHERE (((((((v0.c0)<=(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff83e1ffd7 END)))AND(((v0.c0)LIKE(v0.c0))))) ORDER BY ((v0.c0)||(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<=(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff83e1ffd7 END)))AND(((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)||(v0.c0)) COLLATE BINARY);
SELECT * FROM v0 WHERE (((((((v0.c0)<=(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff83e1ffd7 END)))AND(((v0.c0)LIKE(v0.c0))))) ORDER BY ((v0.c0)||(v0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<=(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff83e1ffd7 END)))AND(((v0.c0)LIKE(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)||(v0.c0)) COLLATE BINARY);
SELECT * FROM v0 WHERE (((((((v0.c0)<=(v0.c0)))OR(CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN 0xffffffff83e1ffd7 END)))AND(((v0.c0)LIKE(v0.c0))))) ORDER BY ((v0.c0)||(v0.c0)) COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT CAST(vt0.c0 AS BLOB), vt0.c0 COLLATE RTRIM)) ORDER BY vt0.c1 ASC  NULLS LAST;
SELECT * FROM v0 WHERE (COALESCE(((((v0.c0)OR(v0.c0)))AND('rR')), HEX(v0.c0)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((v0.c0)OR(v0.c0)))AND('rR')), HEX(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (COALESCE(((((v0.c0)OR(v0.c0)))AND('rR')), HEX(v0.c0)));
SELECT SUM(count) FROM (SELECT ((COALESCE(((((v0.c0)OR(v0.c0)))AND('rR')), HEX(v0.c0))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (COALESCE(((((v0.c0)OR(v0.c0)))AND('rR')), HEX(v0.c0)));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE) ORDER BY 0Xffffffffed400f59 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffed400f59 ASC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE) ORDER BY 0Xffffffffed400f59 ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY 0xffffffffed400f59 ASC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE) ORDER BY 0Xffffffffed400f59 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (json_array_length(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array_length(((v0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((v0.c0) NOT NULL))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (json_array_length(((v0.c0) NOT NULL)));
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL)<>(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)!=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL)<>(((vt0.c0)IS NOT(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NULL)!=(((vt0.c0)IS NOT(vt0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NULL)<>(((vt0.c0)IS NOT(vt0.c0)))));
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (v0.c0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)|(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)|(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)|(CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE NOCASE)|(CAST(v0.c0 AS REAL)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE NOCASE)|(CAST(v0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(NULL)) END ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(NULL)) END ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(NULL)) END ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(NULL)) END ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(vt0.c0 AS REAL) COLLATE NOCASE) ORDER BY CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((((((((v0.c0)AND(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))AND(NULL)) END ASC  NULLS FIRST, (+ (((vt0.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY (((((v0.c0, v0.c0, v0.c0))<((v0.c0, 3.2970023E8, v0.c0))))<>(UPPER(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0))<((v0.c0, 3.2970023E8, v0.c0))))!=(UPPER(v0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY (((((v0.c0, v0.c0, v0.c0))<((v0.c0, 3.2970023E8, v0.c0))))<>(UPPER(v0.c0))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0))<((v0.c0, 3.2970023E8, v0.c0))))!=(UPPER(v0.c0))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (NULL) ORDER BY (((((v0.c0, v0.c0, v0.c0))<((v0.c0, 3.2970023E8, v0.c0))))<>(UPPER(v0.c0))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((((x'0c0a') NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((((x'0c0a') NOTNULL)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((((x'0c0a') NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((((x'0c0a') NOTNULL)) IS TRUE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((~ (vt0.c0)) IN ())) ORDER BY CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM ASC  NULLS FIRST, ((((x'0c0a') NOTNULL)) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1))==(((vt0.c1 IN ()))))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c1))=(((vt0.c1 IN ()))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1))==(((vt0.c1 IN ()))))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN ());
SELECT SUM(count) FROM (SELECT (((((vt0.c1))=(((vt0.c1 IN ()))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN ()));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c1))==(((vt0.c1 IN ()))))) ORDER BY (CASE WHEN vt0.c1 THEN vt0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END IN ());
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.6249210172901842) BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.6249210172901842) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.6249210172901842) BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((0.6249210172901842) BETWEEN (v0.c0) AND (v0.c0)) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((0.6249210172901842) BETWEEN (v0.c0) AND (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(x'f949' AS NUMERIC) THEN v0.c0 COLLATE RTRIM END) ORDER BY ((((((NULL)AND(v0.c0)))OR(v0.c0)))<<(((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(x'f949' AS NUMERIC) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)AND(v0.c0)))OR(v0.c0)))<<(((v0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(x'f949' AS NUMERIC) THEN v0.c0 COLLATE RTRIM END) ORDER BY ((((((NULL)AND(v0.c0)))OR(v0.c0)))<<(((v0.c0) IS TRUE))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(x'f949' AS NUMERIC) THEN v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM v0 ORDER BY ((((((NULL)AND(v0.c0)))OR(v0.c0)))<<(((v0.c0) IS TRUE))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE WHEN CAST(x'f949' AS NUMERIC) THEN v0.c0 COLLATE RTRIM END) ORDER BY ((((((NULL)AND(v0.c0)))OR(v0.c0)))<<(((v0.c0) IS TRUE))) DESC;
SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((v0.c0)AND(vt0.c0)))OR(vt0.c1)))) AND ((CAST(vt0.c1 AS NUMERIC))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (UNLIKELY(DISTINCT v0.c0) COLLATE NOCASE) ORDER BY (((vt0.c1 IN ()))==(((vt0.c1)OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1 IN ()))=(((vt0.c1)OR(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (UNLIKELY(DISTINCT v0.c0) COLLATE NOCASE) ORDER BY (((vt0.c1 IN ()))==(((vt0.c1)OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT v0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c1 IN ()))=(((vt0.c1)OR(vt0.c1)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (UNLIKELY(DISTINCT v0.c0) COLLATE NOCASE) ORDER BY (((vt0.c1 IN ()))==(((vt0.c1)OR(vt0.c1)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN CAST(vt0.c0 AS TEXT) ELSE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((vt0.c0)) NOT BETWEEN ((((v0.c0) IS FALSE))) AND (((- (v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))/(CAST(NULL AS INTEGER)))) ORDER BY vt0.c0, ((((vt0.c1)<>(vt0.c1)))IS NOT(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))/(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0, ((((vt0.c1)<>(vt0.c1)))IS NOT(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))/(CAST(NULL AS INTEGER)))) ORDER BY vt0.c0, ((((vt0.c1)<>(vt0.c1)))IS NOT(v0.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))/(CAST(NULL AS INTEGER)))) IS TRUE)  as count FROM v0, vt0 ORDER BY vt0.c0, ((((vt0.c1)<>(vt0.c1)))IS NOT(v0.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))AND(v0.c0)))OR(vt0.c1)))/(CAST(NULL AS INTEGER)))) ORDER BY vt0.c0, ((((vt0.c1)<>(vt0.c1)))IS NOT(v0.c0 COLLATE BINARY));
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (CHAR(vt0.c1)) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER)) BETWEEN (CHAR(vt0.c1)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (CHAR(vt0.c1)) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER)) BETWEEN (CHAR(vt0.c1)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) BETWEEN (CHAR(vt0.c1)) AND ((- (vt0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ('yÔÄ°?7tGG');
SELECT SUM(count) FROM (SELECT ALL (('yÔÄ°?7tGG') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('yÔÄ°?7tGG');
SELECT SUM(count) FROM (SELECT ALL (('yÔÄ°?7tGG') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('yÔÄ°?7tGG');
SELECT COUNT(*) FROM vt0 WHERE (json_valid(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) ORDER BY load_extension(CAST(vt0.c1 AS INTEGER), json_valid(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(CAST(vt0.c1 AS INTEGER), json_valid(vt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (json_valid(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) ORDER BY load_extension(CAST(vt0.c1 AS INTEGER), json_valid(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(CAST(vt0.c1 AS INTEGER), json_valid(vt0.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL)) ORDER BY (((- (v0.c0))) IS FALSE)  NULLS LAST, v0.c0  NULLS LAST, (((('602554538')>(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((- (v0.c0))) IS FALSE)  NULLS LAST, v0.c0  NULLS LAST, (((('602554538')>(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL)) ORDER BY (((- (v0.c0))) IS FALSE)  NULLS LAST, v0.c0  NULLS LAST, (((('602554538')>(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((- (v0.c0))) IS FALSE)  NULLS LAST, v0.c0  NULLS LAST, (((('602554538')>(vt0.c0))) NOT NULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c0)<(vt0.c0))) ISNULL)) ORDER BY (((- (v0.c0))) IS FALSE)  NULLS LAST, v0.c0  NULLS LAST, (((('602554538')>(vt0.c0))) NOT NULL)  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((x'') IS FALSE))AND(RTRIM('T')))) ORDER BY (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (ABS(DISTINCT '-524347575'), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS FALSE))AND(RTRIM('T')))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (ABS(DISTINCT '-524347575'), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((x'') IS FALSE))AND(RTRIM('T')))) ORDER BY (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (ABS(DISTINCT '-524347575'), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((x'') IS FALSE))AND(RTRIM('T')))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (ABS(DISTINCT '-524347575'), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (((((x'') IS FALSE))AND(RTRIM('T')))) ORDER BY (((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN (ABS(DISTINCT '-524347575'), ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))%(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(v0.c0)))%(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))%(v0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)LIKE(v0.c0)))%(v0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)LIKE(v0.c0)))%(v0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))AND(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))))OR(((vt0.c0)<=(vt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.34326733811546495))AND(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)  NULLS FIRST, ((((v0.c0) ISNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT v0.c0, 0.34326733811546495))AND(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)  NULLS FIRST, ((((v0.c0) ISNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.34326733811546495))AND(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)  NULLS FIRST, ((((v0.c0) ISNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(DISTINCT v0.c0, 0.34326733811546495))AND(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)  NULLS FIRST, ((((v0.c0) ISNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE (((((LIKELIHOOD(DISTINCT v0.c0, 0.34326733811546495))AND(CASE WHEN '' THEN v0.c0 ELSE v0.c0 END)))OR(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((NULL)) AND ((v0.c0)))) NOT NULL)  NULLS FIRST, ((((v0.c0) ISNULL))>>(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((~ (v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE ASC  NULLS LAST, (((0.6201734701945643, (+ (vt0.c0)), RTRIM(0.10510742570626808)))<(((vt0.c0 IN (x'')), (- (vt0.c0)), CAST(v0.c0 AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE ASC  NULLS LAST, (((0.6201734701945643, (+ (vt0.c0)), RTRIM(0.10510742570626808)))<(((vt0.c0 IN (x'')), (- (vt0.c0)), CAST(v0.c0 AS INTEGER)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((~ (v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE ASC  NULLS LAST, (((0.6201734701945643, (+ (vt0.c0)), RTRIM(0.10510742570626808)))<(((vt0.c0 IN (x'')), (- (vt0.c0)), CAST(v0.c0 AS INTEGER)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((~ (v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, v0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE ASC  NULLS LAST, (((0.6201734701945643, (+ (vt0.c0)), RTRIM(0.10510742570626808)))<(((vt0.c0 IN (x'')), (- (vt0.c0)), CAST(v0.c0 AS INTEGER)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((~ (v0.c0)))AND(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE NOCASE ASC  NULLS LAST, (((0.6201734701945643, (+ (vt0.c0)), RTRIM(0.10510742570626808)))<(((vt0.c0 IN (x'')), (- (vt0.c0)), CAST(v0.c0 AS INTEGER)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)GLOB((((vt0.c1))==((vt0.c1)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)GLOB((((vt0.c1))=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)GLOB((((vt0.c1))==((vt0.c1)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)GLOB((((vt0.c1))=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)GLOB((((vt0.c1))==((vt0.c1)))))) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((ABS(v0.c0))&(((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c0))&(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((ABS(v0.c0))&(((v0.c0)<<(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((ABS(v0.c0))&(((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((ABS(v0.c0))&(((v0.c0)<<(v0.c0)))));
SELECT ALL * FROM v0, vt0 WHERE (0.6166116344615968) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6166116344615968) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(vt0.c1 AS INTEGER))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (0.6166116344615968) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT SUM(count) FROM (SELECT ((0.6166116344615968) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(vt0.c1 AS INTEGER))) DESC);
SELECT ALL * FROM v0, vt0 WHERE (0.6166116344615968) ORDER BY ((CAST(vt0.c0 AS REAL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (CAST(vt0.c1 AS INTEGER))) DESC;
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((0.5361373220991107))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS LAST, ((NOT (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((0.5361373220991107))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS LAST, ((NOT (vt0.c0)) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((0.5361373220991107))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS LAST, ((NOT (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((0.5361373220991107))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS LAST, ((NOT (vt0.c0)) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE) ORDER BY (((v0.c0)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN v0.c0 END)) AND ((0.5361373220991107))) ASC  NULLS LAST, (vt0.c0 IN ())  NULLS LAST, ((NOT (vt0.c0)) IN ());
SELECT * FROM vt0 WHERE (CHANGES()) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CHANGES()) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE (CHANGES()) ORDER BY ((((vt0.c1) IS TRUE)) NOT BETWEEN (((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0))) AND ((- (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.8791937906263008));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.8791937906263008)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.8791937906263008));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.8791937906263008)) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.8791937906263008));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((0.33150699842865794) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1 COLLATE RTRIM)OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((0.33150699842865794) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((0.33150699842865794) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c1 IN ()) AS BLOB)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c1 COLLATE RTRIM)OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((0.33150699842865794) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST((vt0.c1 IN ()) AS BLOB)) ORDER BY ((((vt0.c1 COLLATE RTRIM)OR((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))))))AND(((0.33150699842865794) NOT BETWEEN (v0.c0) AND (v0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 IN ()) IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0 IN ()) IN ()));
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) IN ())) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) IN ())) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)) IN ())) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN (v0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('1639074121'))))|((((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c0))))) WHERE ((~ ('0.9085804942888283')));
SELECT SUM(count) FROM (SELECT (((~ ('0.9085804942888283'))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('1639074121'))))|((((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('1639074121'))))|((((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c0))))) WHERE ((~ ('0.9085804942888283')));
SELECT SUM(count) FROM (SELECT (((~ ('0.9085804942888283'))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('1639074121'))))|((((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c0))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND (('1639074121'))))|((((vt0.c0, v0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c1)) AND ((vt0.c0, v0.c0, v0.c0))))) WHERE ((~ ('0.9085804942888283')));
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM ELSE load_extension(vt0.c1) END) ORDER BY CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END  WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM ELSE load_extension(vt0.c1) END) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END  WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END DESC);
SELECT ALL * FROM vt0 WHERE (CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM ELSE load_extension(vt0.c1) END) ORDER BY CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END  WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END DESC;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END  WHEN vt0.c0 THEN vt0.c1 COLLATE RTRIM ELSE load_extension(vt0.c1) END) IS TRUE)  as count FROM vt0 ORDER BY CASE CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END  WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END ELSE CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 END END DESC);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE ((((NOT (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE ((((NOT (vt0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (vt0.c1))) IS FALSE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 NOT INDEXED WHERE ((((NOT (vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(((((((((vt0.c1)OR(vt0.c1)))OR('k?N')))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER))) ORDER BY (((0.20114571883300025) ISNULL) IN ()) ASC  NULLS LAST, CAST((vt0.c1 IN (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((vt0.c1)OR(vt0.c1)))OR('k?N')))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY (((0.20114571883300025) ISNULL) IN ()) ASC  NULLS LAST, CAST((vt0.c1 IN (vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(((((((((vt0.c1)OR(vt0.c1)))OR('k?N')))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER))) ORDER BY (((0.20114571883300025) ISNULL) IN ()) ASC  NULLS LAST, CAST((vt0.c1 IN (vt0.c0)) AS BLOB);
SELECT SUM(count) FROM (SELECT ((NULLIF(((((((((vt0.c1)OR(vt0.c1)))OR('k?N')))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER))) IS TRUE)  as count FROM vt0 ORDER BY (((0.20114571883300025) ISNULL) IN ()) ASC  NULLS LAST, CAST((vt0.c1 IN (vt0.c0)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(((((((((vt0.c1)OR(vt0.c1)))OR('k?N')))OR(vt0.c1)))AND(vt0.c1)), CAST(vt0.c0 AS INTEGER))) ORDER BY (((0.20114571883300025) ISNULL) IN ()) ASC  NULLS LAST, CAST((vt0.c1 IN (vt0.c0)) AS BLOB);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN x'' THEN v0.c0 END COLLATE BINARY) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN x'' THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN x'' THEN v0.c0 END COLLATE BINARY) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0  WHEN x'' THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (CASE v0.c0  WHEN x'' THEN v0.c0 END COLLATE BINARY) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((1.184419283E9)&(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((1.184419283E9)&(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((1.184419283E9)&(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((1.184419283E9)&(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((1.184419283E9)&(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)));
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, v0 WHERE (LTRIM(((v0.c0)|(vt0.c0)))) ORDER BY ((LIKELIHOOD(v0.c0, 0.788968843698504))||((vt0.c0 IN ()))) DESC  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(x'')))OR('0.4864288123361853')), (NOT (v0.c0)), ((vt0.c1)&(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER), (- (x''))))) ASC  NULLS LAST, (((vt0.c0 IN ()))IS(json_array_length(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((v0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.788968843698504))||((vt0.c0 IN ()))) DESC  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(x'')))OR('0.4864288123361853')), (NOT (v0.c0)), ((vt0.c1)&(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER), (- (x''))))) ASC  NULLS LAST, (((vt0.c0 IN ()))IS(json_array_length(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LTRIM(((v0.c0)|(vt0.c0)))) ORDER BY ((LIKELIHOOD(v0.c0, 0.788968843698504))||((vt0.c0 IN ()))) DESC  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(x'')))OR('0.4864288123361853')), (NOT (v0.c0)), ((vt0.c1)&(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER), (- (x''))))) ASC  NULLS LAST, (((vt0.c0 IN ()))IS(json_array_length(vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LTRIM(((v0.c0)|(vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((LIKELIHOOD(v0.c0, 0.788968843698504))||((vt0.c0 IN ()))) DESC  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(x'')))OR('0.4864288123361853')), (NOT (v0.c0)), ((vt0.c1)&(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER), (- (x''))))) ASC  NULLS LAST, (((vt0.c0 IN ()))IS(json_array_length(vt0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0 WHERE (LTRIM(((v0.c0)|(vt0.c0)))) ORDER BY ((LIKELIHOOD(v0.c0, 0.788968843698504))||((vt0.c0 IN ()))) DESC  NULLS FIRST, (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((((((vt0.c0)OR(x'')))OR('0.4864288123361853')), (NOT (v0.c0)), ((vt0.c1)&(vt0.c0)))) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (v0.c0)), CAST(v0.c0 AS INTEGER), (- (x''))))) ASC  NULLS LAST, (((vt0.c0 IN ()))IS(json_array_length(vt0.c0)))  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))!=((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) NOTNULL));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))!=((vt0.c0)))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1))!=((vt0.c0)))) NOTNULL));
SELECT ALL * FROM v0 WHERE ('') ORDER BY CAST(v0.c0 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) ASC);
SELECT ALL * FROM v0 WHERE ('') ORDER BY CAST(v0.c0 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0 ORDER BY CAST(v0.c0 AS REAL) ASC);
SELECT ALL * FROM v0 WHERE ('') ORDER BY CAST(v0.c0 AS REAL) ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB)) IS TRUE)) ORDER BY ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND((NOT (-1852151203)))))OR(((vt0.c1)IS(vt0.c1)))))OR(NULL)))AND(0.5795124636878912)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND((NOT (-1852151203)))))OR(((vt0.c1)IS(vt0.c1)))))OR(NULL)))AND(0.5795124636878912)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB)) IS TRUE)) ORDER BY ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND((NOT (-1852151203)))))OR(((vt0.c1)IS(vt0.c1)))))OR(NULL)))AND(0.5795124636878912)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB)) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND((NOT (-1852151203)))))OR(((vt0.c1)IS(vt0.c1)))))OR(NULL)))AND(0.5795124636878912)) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((CAST(vt0.c1 AS BLOB)) IS TRUE)) ORDER BY ((((((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND((NOT (-1852151203)))))OR(((vt0.c1)IS(vt0.c1)))))OR(NULL)))AND(0.5795124636878912)) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)<>(vt0.c1)))-(v0.c0 COLLATE BINARY))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(vt0.c1)))-(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)<>(vt0.c1)))-(v0.c0 COLLATE BINARY))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<>(vt0.c1)))-(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0 ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1)<>(vt0.c1)))-(v0.c0 COLLATE BINARY))) ORDER BY (vt0.c1 IN ()) COLLATE NOCASE ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((vt0.c1) NOTNULL))))AND('f')) WHERE (((((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(CAST(vt0.c0 AS BLOB))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(CAST(vt0.c0 AS BLOB))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((vt0.c1) NOTNULL))))AND('f')));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((vt0.c1) NOTNULL))))AND('f')) WHERE (((((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(CAST(vt0.c0 AS BLOB))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(CAST(vt0.c0 AS BLOB))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((vt0.c1) NOTNULL))))AND('f')));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR(((vt0.c1) NOTNULL))))AND('f')) WHERE (((((((((CASE vt0.c1  WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END)OR(CAST(vt0.c0 AS BLOB))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c1)+(vt0.c1)))))OR(CASE v0.c0  WHEN v0.c0 THEN vt0.c1 ELSE vt0.c0 END)));
SELECT ALL * FROM vt0, v0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CAST(CAST(vt0.c1 AS TEXT) AS INTEGER));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON vt0.c1 WHERE (((~ (v0.c0)) IN ())) ORDER BY (((((vt0.c0))>((vt0.c1))))IS(0.20450712181095076));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c1 ORDER BY (((((vt0.c0))>((vt0.c1))))IS(0.20450712181095076)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON vt0.c1 WHERE (((~ (v0.c0)) IN ())) ORDER BY (((((vt0.c0))>((vt0.c1))))IS(0.20450712181095076));
SELECT SUM(count) FROM (SELECT ALL ((((~ (v0.c0)) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON vt0.c1 ORDER BY (((((vt0.c0))>((vt0.c1))))IS(0.20450712181095076)));
SELECT COUNT(*) FROM v0 INNER JOIN vt0 ON vt0.c1 WHERE (((~ (v0.c0)) IN ())) ORDER BY (((((vt0.c0))>((vt0.c1))))IS(0.20450712181095076));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE (NOT (x''))  WHEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) THEN vt0.c1 END WHERE (0.5584073521022473) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5686143359430249)))))<=((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.5584073521022473) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE (NOT (x''))  WHEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) THEN vt0.c1 END ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5686143359430249)))))<=((NULL))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE (NOT (x''))  WHEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) THEN vt0.c1 END WHERE (0.5584073521022473) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5686143359430249)))))<=((NULL)));
SELECT SUM(count) FROM (SELECT ALL ((0.5584073521022473) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON CASE (NOT (x''))  WHEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) THEN vt0.c1 END ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5686143359430249)))))<=((NULL))));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON CASE (NOT (x''))  WHEN ((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1)) THEN vt0.c1 END WHERE (0.5584073521022473) ORDER BY ((((((v0.c0)) BETWEEN ((v0.c0)) AND ((0.5686143359430249)))))<=((NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE json_remove(vt0.c0, vt0.c0)  WHEN ((vt0.c1)|(vt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))) ELSE ((vt0.c1) IS FALSE) END) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_remove(vt0.c0, vt0.c0)  WHEN ((vt0.c1)|(vt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))) ELSE ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE json_remove(vt0.c0, vt0.c0)  WHEN ((vt0.c1)|(vt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))) ELSE ((vt0.c1) IS FALSE) END) ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE json_remove(vt0.c0, vt0.c0)  WHEN ((vt0.c1)|(vt0.c0)) THEN (((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c0, vt0.c1))) ELSE ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((vt0.c1 COLLATE NOCASE) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)+(vt0.c1)), (((vt0.c0))>((0.797079736613991))), ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))))<>((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 1.809046226E9 END, ((vt0.c1) IS FALSE), ((vt0.c0)>>(vt0.c0)))))) ORDER BY json_array_length(((vt0.c1)/(vt0.c0))) ASC, CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)+(vt0.c1)), (((vt0.c0))>((0.797079736613991))), ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))))!=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 1.809046226E9 END, ((vt0.c1) IS FALSE), ((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY json_array_length(((vt0.c1)/(vt0.c0))) ASC, CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)+(vt0.c1)), (((vt0.c0))>((0.797079736613991))), ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))))<>((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 1.809046226E9 END, ((vt0.c1) IS FALSE), ((vt0.c0)>>(vt0.c0)))))) ORDER BY json_array_length(((vt0.c1)/(vt0.c0))) ASC, CHANGES()  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)+(vt0.c1)), (((vt0.c0))>((0.797079736613991))), ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))))!=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 1.809046226E9 END, ((vt0.c1) IS FALSE), ((vt0.c0)>>(vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY json_array_length(((vt0.c1)/(vt0.c0))) ASC, CHANGES()  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c0)+(vt0.c1)), (((vt0.c0))>((0.797079736613991))), ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1))))<>((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE 1.809046226E9 END, ((vt0.c1) IS FALSE), ((vt0.c0)>>(vt0.c0)))))) ORDER BY json_array_length(((vt0.c1)/(vt0.c0))) ASC, CHANGES()  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<<(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1)<<(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)<<(vt0.c0)) AS BLOB));
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c1)))<<(((vt0.c1) NOT NULL)))) ORDER BY IFNULL(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((vt0.c1)))) ASC, ((((vt0.c0)%(vt0.c0)))*(vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))<<(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((vt0.c1)))) ASC, ((((vt0.c0)%(vt0.c0)))*(vt0.c1)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c1)))<<(((vt0.c1) NOT NULL)))) ORDER BY IFNULL(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((vt0.c1)))) ASC, ((((vt0.c0)%(vt0.c0)))*(vt0.c1)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))<<(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY IFNULL(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((vt0.c1)))) ASC, ((((vt0.c0)%(vt0.c0)))*(vt0.c1)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c1)))<<(((vt0.c1) NOT NULL)))) ORDER BY IFNULL(DISTINCT ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), (((vt0.c0))<=((vt0.c1)))) ASC, ((((vt0.c0)%(vt0.c0)))*(vt0.c1)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0) IS FALSE)))) ORDER BY (((('SQ') BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)), ((vt0.c0) BETWEEN ('-76509904') AND (vt0.c1)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, (NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('SQ') BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)), ((vt0.c0) BETWEEN ('-76509904') AND (vt0.c1)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, (NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0) IS FALSE)))) ORDER BY (((('SQ') BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)), ((vt0.c0) BETWEEN ('-76509904') AND (vt0.c1)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, (NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT (((NOT (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((('SQ') BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)), ((vt0.c0) BETWEEN ('-76509904') AND (vt0.c1)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, (NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0) IS FALSE)))) ORDER BY (((('SQ') BETWEEN (v0.c0) AND (vt0.c1))) BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((v0.c0)))) AND (CASE vt0.c0  WHEN v0.c0 THEN v0.c0 END)), ((vt0.c0) BETWEEN ('-76509904') AND (vt0.c1)) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST, (NOT (COALESCE(vt0.c0, vt0.c0, vt0.c0, vt0.c1)));
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)IS(vt0.c0)))AND(((vt0.c1)/(vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS(vt0.c0)))AND(((vt0.c1)/(vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)IS(vt0.c0)))AND(((vt0.c1)/(vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)IS(vt0.c0)))AND(((vt0.c1)/(vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((((vt0.c0)IS(vt0.c0)))AND(((vt0.c1)/(vt0.c0)))))OR(CASE WHEN vt0.c1 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (v0.c0 IN (vt0.c1, v0.c0)) THEN MAX(vt0.c0, v0.c0) ELSE 0.15854092100407613 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN (vt0.c1, v0.c0)) THEN MAX(vt0.c0, v0.c0) ELSE 0.15854092100407613 END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (v0.c0 IN (vt0.c1, v0.c0)) THEN MAX(vt0.c0, v0.c0) ELSE 0.15854092100407613 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (v0.c0 IN (vt0.c1, v0.c0)) THEN MAX(vt0.c0, v0.c0) ELSE 0.15854092100407613 END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN (v0.c0 IN (vt0.c1, v0.c0)) THEN MAX(vt0.c0, v0.c0) ELSE 0.15854092100407613 END);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)LIKE(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)LIKE(v0.c0))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)LIKE(v0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)LIKE(v0.c0))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 END)LIKE(v0.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((NULL)IS(v0.c0)) AS REAL)) ORDER BY ((('-1753934941', ((vt0.c1)<<(vt0.c1)), ((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))==(((x'' IN ()), v0.c0, ((v0.c0)=(NULL)))));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)IS(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((('-1753934941', ((vt0.c1)<<(vt0.c1)), ((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))=(((x'' IN ()), v0.c0, ((v0.c0)==(NULL))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((NULL)IS(v0.c0)) AS REAL)) ORDER BY ((('-1753934941', ((vt0.c1)<<(vt0.c1)), ((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))==(((x'' IN ()), v0.c0, ((v0.c0)=(NULL)))));
SELECT SUM(count) FROM (SELECT ((CAST(((NULL)IS(v0.c0)) AS REAL)) IS TRUE)  as count FROM vt0, v0 ORDER BY ((('-1753934941', ((vt0.c1)<<(vt0.c1)), ((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))=(((x'' IN ()), v0.c0, ((v0.c0)==(NULL))))));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(((NULL)IS(v0.c0)) AS REAL)) ORDER BY ((('-1753934941', ((vt0.c1)<<(vt0.c1)), ((((((((v0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1))))==(((x'' IN ()), v0.c0, ((v0.c0)=(NULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((0X1745b064 IN ()))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0x1745b064 IN ()))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((0X1745b064 IN ()))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0x1745b064 IN ()))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((0X1745b064 IN ()))AND(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0) NOTNULL) AS TEXT)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CAST(((v0.c0) NOTNULL) AS TEXT));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) END) ORDER BY (((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))) NOTNULL));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) END) ORDER BY (((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))) NOTNULL));
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN v0.c0 END THEN vt0.c0 COLLATE BINARY ELSE ((((vt0.c1)OR(v0.c0)))AND(vt0.c1)) END) ORDER BY (((((vt0.c1, vt0.c0, vt0.c1))>((vt0.c0, vt0.c1, vt0.c0)))) NOTNULL);
SELECT * FROM v0 WHERE (TYPEOF(((((((((((((NULL)OR(0.08032891552723664)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((((((((((NULL)OR(0.08032891552723664)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TYPEOF(((((((((((((NULL)OR(0.08032891552723664)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(((((((((((((NULL)OR(0.08032891552723664)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (TYPEOF(((((((((((((NULL)OR(0.08032891552723664)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON '0.5206210755823416' WHERE ((((v0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c1))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY (~ ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c1))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '0.5206210755823416' ORDER BY (~ ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON '0.5206210755823416' WHERE ((((v0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c1))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY (~ ((vt0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c1))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '0.5206210755823416' ORDER BY (~ ((vt0.c1 IN ()))));
SELECT ALL * FROM vt0 INNER JOIN v0 ON '0.5206210755823416' WHERE ((((v0.c0)) NOT BETWEEN ((TYPEOF(DISTINCT vt0.c1))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))) ORDER BY (~ ((vt0.c1 IN ())));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN NULL ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN NULL ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN NULL ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) ISNULL) THEN NULL ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN NULL ELSE ((vt0.c0) IS TRUE) END);
SELECT * FROM v0, vt0 WHERE ('') ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR('-968547841'))) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, CASE (v0.c0 IN ())  WHEN ((('-927344416', vt0.c1, v0.c0, '0.21863095802411792', NULL)) BETWEEN ((vt0.c1, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))) THEN 0.9593072370975145 WHEN QUOTE(v0.c0) THEN ((v0.c0)GLOB(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0.27481142009485404 END ELSE ABS(DISTINCT vt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR('-968547841'))) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, CASE (v0.c0 IN ())  WHEN ((('-927344416', vt0.c1, v0.c0, '0.21863095802411792', NULL)) BETWEEN ((vt0.c1, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))) THEN 0.9593072370975145 WHEN QUOTE(v0.c0) THEN ((v0.c0)GLOB(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0.27481142009485404 END ELSE ABS(DISTINCT vt0.c1) END DESC);
SELECT * FROM v0, vt0 WHERE ('') ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR('-968547841'))) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, CASE (v0.c0 IN ())  WHEN ((('-927344416', vt0.c1, v0.c0, '0.21863095802411792', NULL)) BETWEEN ((vt0.c1, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))) THEN 0.9593072370975145 WHEN QUOTE(v0.c0) THEN ((v0.c0)GLOB(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0.27481142009485404 END ELSE ABS(DISTINCT vt0.c1) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR('-968547841'))) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, CASE (v0.c0 IN ())  WHEN ((('-927344416', vt0.c1, v0.c0, '0.21863095802411792', NULL)) BETWEEN ((vt0.c1, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))) THEN 0.9593072370975145 WHEN QUOTE(v0.c0) THEN ((v0.c0)GLOB(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0.27481142009485404 END ELSE ABS(DISTINCT vt0.c1) END DESC);
SELECT * FROM v0, vt0 WHERE ('') ORDER BY ((((((vt0.c1)OR(vt0.c1)))OR('-968547841'))) BETWEEN (vt0.c1) AND (CAST(vt0.c0 AS NUMERIC))) ASC  NULLS LAST, CASE (v0.c0 IN ())  WHEN ((('-927344416', vt0.c1, v0.c0, '0.21863095802411792', NULL)) BETWEEN ((vt0.c1, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1, v0.c0, vt0.c1))) THEN 0.9593072370975145 WHEN QUOTE(v0.c0) THEN ((v0.c0)GLOB(v0.c0)) WHEN CAST(v0.c0 AS REAL) THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0.27481142009485404 END ELSE ABS(DISTINCT vt0.c1) END DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-524347575')) ELSE vt0.c0 END) ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-524347575')) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-524347575')) ELSE vt0.c0 END) ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-524347575')) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT) DESC);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (+ (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-524347575')) ELSE vt0.c0 END) ORDER BY CAST(IFNULL(vt0.c0, vt0.c0) AS TEXT) DESC;
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE CASE 0X1e495593  WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)*(CAST(v0.c0 AS TEXT))), ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1)==(vt0.c1)))))AND(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE CASE 0x1e495593  WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)*(CAST(v0.c0 AS TEXT))), ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1)==(vt0.c1)))))AND(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE CASE 0X1e495593  WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)*(CAST(v0.c0 AS TEXT))), ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1)==(vt0.c1)))))AND(vt0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE CASE 0x1e495593  WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END END) IS TRUE)  as count FROM vt0, v0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)*(CAST(v0.c0 AS TEXT))), ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1)==(vt0.c1)))))AND(vt0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c0) NOT NULL) THEN (((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) ELSE CASE 0X1e495593  WHEN vt0.c1 THEN v0.c0 WHEN vt0.c1 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE v0.c0 END END) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END)*(CAST(v0.c0 AS TEXT))), ((((CAST(vt0.c0 AS TEXT))OR(((vt0.c1)==(vt0.c1)))))AND(vt0.c0)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c1)IS(v0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c1)IS(v0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('')))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c1)IS(v0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('')))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c1)IS(v0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('')))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((vt0.c1) BETWEEN (NULL) AND (vt0.c0))) BETWEEN (((vt0.c1)IS(v0.c0))) AND (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR('')))OR(v0.c0)))));
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((0x1)>(vt0.c1))) AND (((v0.c0)<=(0x705d6a28)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((0X1)>(vt0.c1))) AND (((v0.c0)<=(0X705d6a28))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((0x1)>(vt0.c1))) AND (((v0.c0)<=(0x705d6a28)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((0X1)>(vt0.c1))) AND (((v0.c0)<=(0X705d6a28))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM v0 NATURAL JOIN vt0 WHERE (((((vt0.c0)%(vt0.c1))) NOT BETWEEN (((0x1)>(vt0.c1))) AND (((v0.c0)<=(0x705d6a28)))));
SELECT ALL * FROM v0 WHERE (((v0.c0)||(((v0.c0) ISNULL)))) ORDER BY (NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST, (((v0.c0 IN (v0.c0)))!=((+ (0.32391600772439144)))) DESC, v0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)||(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST, (((v0.c0 IN (v0.c0)))!=((+ (0.32391600772439144)))) DESC, v0.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM v0 WHERE (((v0.c0)||(((v0.c0) ISNULL)))) ORDER BY (NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST, (((v0.c0 IN (v0.c0)))!=((+ (0.32391600772439144)))) DESC, v0.c0 COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0)||(((v0.c0) ISNULL)))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST, (((v0.c0 IN (v0.c0)))!=((+ (0.32391600772439144)))) DESC, v0.c0 COLLATE NOCASE ASC);
SELECT ALL * FROM v0 WHERE (((v0.c0)||(((v0.c0) ISNULL)))) ORDER BY (NOT (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) ASC  NULLS FIRST, (((v0.c0 IN (v0.c0)))!=((+ (0.32391600772439144)))) DESC, v0.c0 COLLATE NOCASE ASC;
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))), ((((vt0.c1) NOT NULL))<<(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))), ((((vt0.c1) NOT NULL))<<(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))), ((((vt0.c1) NOT NULL))<<(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))), ((((vt0.c1) NOT NULL))<<(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST);
SELECT * FROM vt0, v0 WHERE (NULL) ORDER BY (((((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))>((((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))))), ((((vt0.c1) NOT NULL))<<(vt0.c0 COLLATE BINARY)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 COLLATE RTRIM AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 COLLATE RTRIM AS BLOB));
SELECT * FROM v0 WHERE (((((v0.c0)=(v0.c0)))IS NOT(x'bad9' COLLATE NOCASE))) ORDER BY (((v0.c0 IN ()))GLOB(('407335500' IN ()))) DESC  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)==(v0.c0)))IS NOT(x'bad9' COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))GLOB(('407335500' IN ()))) DESC  NULLS FIRST, v0.c0);
SELECT * FROM v0 WHERE (((((v0.c0)=(v0.c0)))IS NOT(x'bad9' COLLATE NOCASE))) ORDER BY (((v0.c0 IN ()))GLOB(('407335500' IN ()))) DESC  NULLS FIRST, v0.c0;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)==(v0.c0)))IS NOT(x'bad9' COLLATE NOCASE))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0 IN ()))GLOB(('407335500' IN ()))) DESC  NULLS FIRST, v0.c0);
SELECT * FROM v0 WHERE (((((v0.c0)=(v0.c0)))IS NOT(x'bad9' COLLATE NOCASE))) ORDER BY (((v0.c0 IN ()))GLOB(('407335500' IN ()))) DESC  NULLS FIRST, v0.c0;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS BLOB) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (v0.c0) ORDER BY CAST((vt0.c0 IN (vt0.c0)) AS BLOB) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((('s') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'a502') AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((('s') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'a502') AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((('s') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'a502') AND (v0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((('s') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'a502') AND (v0.c0))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((('s') NOT BETWEEN (v0.c0) AND (v0.c0))) NOT BETWEEN (x'a502') AND (v0.c0)));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((2.5396624E7)GLOB(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (~ (((v0.c0)>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((2.5396624E7)GLOB(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (~ (((v0.c0)>(vt0.c1)))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((2.5396624E7)GLOB(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (~ (((v0.c0)>(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((((2.5396624E7)GLOB(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt0 ORDER BY (~ (((v0.c0)>(vt0.c1)))));
SELECT ALL * FROM v0 NATURAL JOIN vt0 WHERE (((2.5396624E7)GLOB(((vt0.c1) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (~ (((v0.c0)>(vt0.c1))));
SELECT * FROM vt0, v0 WHERE (IFNULL(((vt0.c0)||(NULL)), (- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)||(NULL)), (- (vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (IFNULL(((vt0.c0)||(NULL)), (- (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)||(NULL)), (- (vt0.c1)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (IFNULL(((vt0.c0)||(NULL)), (- (vt0.c1))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))||(vt0.c0))) ORDER BY load_extension(IFNULL(v0.c0, v0.c0), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))||(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY load_extension(IFNULL(v0.c0, v0.c0), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))||(vt0.c0))) ORDER BY load_extension(IFNULL(v0.c0, v0.c0), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))||(vt0.c0))) IS TRUE)  as count FROM v0, vt0 ORDER BY load_extension(IFNULL(v0.c0, v0.c0), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))||(vt0.c0))) ORDER BY load_extension(IFNULL(v0.c0, v0.c0), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((TYPEOF(v0.c0))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)GLOB(v0.c0))))) ORDER BY (((v0.c0) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(v0.c0))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) ISNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((TYPEOF(v0.c0))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)GLOB(v0.c0))))) ORDER BY (((v0.c0) ISNULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(v0.c0))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) ISNULL) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((((TYPEOF(v0.c0))OR(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)GLOB(v0.c0))))) ORDER BY (((v0.c0) ISNULL) IN ())  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c1)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND('-1793952133')))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) END) ORDER BY COALESCE((NOT (v0.c0)), ((vt0.c1) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(vt0.c1)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND('-1793952133')))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY COALESCE((NOT (v0.c0)), ((vt0.c1) IS FALSE)) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c1)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND('-1793952133')))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) END) ORDER BY COALESCE((NOT (v0.c0)), ((vt0.c1) IS FALSE)) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((((v0.c0)OR(vt0.c1)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND('-1793952133')))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) END) IS TRUE)  as count FROM v0, vt0 NOT INDEXED ORDER BY COALESCE((NOT (v0.c0)), ((vt0.c1) IS FALSE)) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE ((((v0.c0)OR(vt0.c1)))AND(vt0.c0))  WHEN ((((((((vt0.c0)AND('-1793952133')))OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c0) ISNULL) END) ORDER BY COALESCE((NOT (v0.c0)), ((vt0.c1) IS FALSE)) ASC;
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (x'');
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((NULL)*(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE RTRIM END WHERE (((((((vt0.c1)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((v0.c0)<<(json_valid(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((NULL)*(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE RTRIM END ORDER BY ((v0.c0)<<(json_valid(v0.c0)))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((NULL)*(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE RTRIM END WHERE (((((((vt0.c1)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((v0.c0)<<(json_valid(v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((NULL)*(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE RTRIM END ORDER BY ((v0.c0)<<(json_valid(v0.c0)))  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CASE WHEN ((NULL)*(vt0.c0)) THEN ((vt0.c0) IS FALSE) ELSE vt0.c0 COLLATE RTRIM END WHERE (((((((vt0.c1)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (vt0.c1 COLLATE BINARY))) ORDER BY ((v0.c0)<<(json_valid(v0.c0)))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((~ (vt0.c0)))) DESC  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((~ (vt0.c0)))) DESC  NULLS LAST, vt0.c1);
SELECT * FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((~ (vt0.c0)))) DESC  NULLS LAST, vt0.c1;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((~ (vt0.c0)))) DESC  NULLS LAST, vt0.c1);
SELECT * FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((NULL) NOT BETWEEN (CAST(vt0.c1 AS REAL)) AND ((~ (vt0.c0)))) DESC  NULLS LAST, vt0.c1;
SELECT * FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (NULL);
SELECT * FROM v0 WHERE (((TOTAL_CHANGES())>=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY DESC  NULLS FIRST, NULL DESC, UNLIKELY(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(x'834d')))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())>=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY DESC  NULLS FIRST, NULL DESC, UNLIKELY(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(x'834d')))AND(v0.c0))));
SELECT * FROM v0 WHERE (((TOTAL_CHANGES())>=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY DESC  NULLS FIRST, NULL DESC, UNLIKELY(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(x'834d')))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())>=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY DESC  NULLS FIRST, NULL DESC, UNLIKELY(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(x'834d')))AND(v0.c0))));
SELECT * FROM v0 WHERE (((TOTAL_CHANGES())>=(((((v0.c0)OR(v0.c0)))AND(v0.c0))))) ORDER BY CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY DESC  NULLS FIRST, NULL DESC, UNLIKELY(((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(x'834d')))AND(v0.c0)));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (NOT (((v0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (NOT (((v0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (NOT (((v0.c0) ISNULL))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (NOT (((v0.c0) ISNULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((vt0.c0) IS TRUE));
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.43948555862280003)) ORDER BY CASE IFNULL(vt0.c1, vt0.c1)  WHEN CAST(vt0.c1 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.43948555862280003)) IS TRUE)  as count FROM vt0 ORDER BY CASE IFNULL(vt0.c1, vt0.c1)  WHEN CAST(vt0.c1 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.43948555862280003)) ORDER BY CASE IFNULL(vt0.c1, vt0.c1)  WHEN CAST(vt0.c1 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.43948555862280003)) IS TRUE)  as count FROM vt0 ORDER BY CASE IFNULL(vt0.c1, vt0.c1)  WHEN CAST(vt0.c1 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (LIKELIHOOD(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), 0.43948555862280003)) ORDER BY CASE IFNULL(vt0.c1, vt0.c1)  WHEN CAST(vt0.c1 AS INTEGER) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) END DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((x'21ed')) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((x'21ed')) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((x'21ed')) AND ((vt0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) NOT BETWEEN ((x'21ed')) AND ((vt0.c0))) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0)) NOT BETWEEN ((x'21ed')) AND ((vt0.c0))) IN ()));
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (('0.9068644928572646')>>(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN '-409551443' THEN (((v0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c1))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<>(0.58784586624665)) WHEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 ELSE json_array_length(v0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (('0.9068644928572646')>>(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN '-409551443' THEN (((v0.c0, vt0.c0, NULL))!=((vt0.c0, vt0.c0, vt0.c1))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<>(0.58784586624665)) WHEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 ELSE json_array_length(v0.c0, vt0.c0) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (('0.9068644928572646')>>(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN '-409551443' THEN (((v0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c1))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<>(0.58784586624665)) WHEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 ELSE json_array_length(v0.c0, vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (('0.9068644928572646')>>(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN '-409551443' THEN (((v0.c0, vt0.c0, NULL))!=((vt0.c0, vt0.c0, vt0.c1))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<>(0.58784586624665)) WHEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 ELSE json_array_length(v0.c0, vt0.c0) END) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (CASE WHEN CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN (('0.9068644928572646')>>(v0.c0)) WHEN (v0.c0 IN ()) THEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END WHEN '-409551443' THEN (((v0.c0, vt0.c0, NULL))<>((vt0.c0, vt0.c0, vt0.c1))) WHEN (vt0.c0 IN ()) THEN ((vt0.c0)<>(0.58784586624665)) WHEN (((v0.c0, v0.c0, vt0.c0))<>((v0.c0, vt0.c1, vt0.c1))) THEN vt0.c1 ELSE json_array_length(v0.c0, vt0.c0) END);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)<=(v0.c0)) AS REAL)) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(((v0.c0)<=(v0.c0)) AS REAL));
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(((x'')>(v0.c0))))) ORDER BY ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(((x'')>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0) IS FALSE))) ASC);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(((x'')>(v0.c0))))) ORDER BY ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY)/(((x'')>(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0) IS FALSE))) ASC);
SELECT ALL * FROM v0 WHERE (((v0.c0 COLLATE BINARY)/(((x'')>(v0.c0))))) ORDER BY ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR((- (v0.c0)))))OR(v0.c0)))AND((((v0.c0, v0.c0, v0.c0))==((v0.c0, v0.c0, v0.c0))))))AND(((v0.c0) IS FALSE))) ASC;
SELECT COUNT(*) FROM v0 WHERE ('TRUE');
SELECT SUM(count) FROM (SELECT ALL (('TRUE') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('TRUE');
SELECT SUM(count) FROM (SELECT ALL (('TRUE') IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ('TRUE');
SELECT COUNT(*) FROM vt0, v0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c1)<=(vt0.c1)))))OR(0.6976641545806078))) ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c1)<=(vt0.c1)))))OR(0.6976641545806078))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c1)<=(vt0.c1)))))OR(0.6976641545806078))) ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c1)<=(vt0.c1)))))OR(0.6976641545806078))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c1 END)AND(((vt0.c1)<=(vt0.c1)))))OR(0.6976641545806078))) ORDER BY ((((v0.c0)AND(v0.c0)))AND(v0.c0)) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN (vt0.c0 COLLATE RTRIM)) WHERE (((((((vt0.c0)OR(vt0.c1)))OR(v0.c0))) IS TRUE)) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN (vt0.c0 COLLATE RTRIM)) ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN (vt0.c0 COLLATE RTRIM)) WHERE (((((((vt0.c0)OR(vt0.c1)))OR(v0.c0))) IS TRUE)) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)OR(vt0.c1)))OR(v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN (vt0.c0 COLLATE RTRIM)) ORDER BY (vt0.c0 IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN v0 ON (v0.c0 IN (vt0.c0 COLLATE RTRIM)) WHERE (((((((vt0.c0)OR(vt0.c1)))OR(v0.c0))) IS TRUE)) ORDER BY (vt0.c0 IN ())  NULLS LAST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT BETWEEN ((vt0.c0 IN ())) AND ((NOT (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT ROUND(vt0.c0, vt0.c1), vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CASE WHEN vt0.c1 THEN x'' END AS NUMERIC)  NULLS LAST, (((vt0.c1 IN ()))<<(((0X5ee2b24c)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ROUND(vt0.c0, vt0.c1), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(CASE WHEN vt0.c1 THEN x'' END AS NUMERIC)  NULLS LAST, (((vt0.c1 IN ()))<<(((0X5ee2b24c)!=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT ROUND(vt0.c0, vt0.c1), vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CASE WHEN vt0.c1 THEN x'' END AS NUMERIC)  NULLS LAST, (((vt0.c1 IN ()))<<(((0X5ee2b24c)!=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT ROUND(vt0.c0, vt0.c1), vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY CAST(CASE WHEN vt0.c1 THEN x'' END AS NUMERIC)  NULLS LAST, (((vt0.c1 IN ()))<<(((0X5ee2b24c)!=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (COALESCE(DISTINCT ROUND(vt0.c0, vt0.c1), vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CASE WHEN vt0.c1 THEN x'' END AS NUMERIC)  NULLS LAST, (((vt0.c1 IN ()))<<(((0X5ee2b24c)!=(vt0.c0))));
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY MIN((- (v0.c0)), ((v0.c0)<<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY MIN((- (v0.c0)), ((v0.c0)<<(v0.c0)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY MIN((- (v0.c0)), ((v0.c0)<<(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY MIN((- (v0.c0)), ((v0.c0)<<(v0.c0)))  NULLS FIRST);
SELECT * FROM v0 WHERE (CASE WHEN v0.c0 THEN v0.c0 END COLLATE BINARY) ORDER BY MIN((- (v0.c0)), ((v0.c0)<<(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))GLOB(vt0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))GLOB(vt0.c1))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((CAST(vt0.c0 AS TEXT))GLOB(vt0.c1)));
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))<(((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM))<(((~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))<(((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0 COLLATE RTRIM))<(((~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0 COLLATE RTRIM))<(((~ (v0.c0))))));
SELECT COUNT(*) FROM v0, vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (((NOT (vt0.c0)) IN ()));
SELECT ALL * FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)-(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)-(v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0)-(v0.c0))) IS FALSE));
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)&((vt0.c0 IN ())))) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(NULL)))OR(((vt0.c1)%(vt0.c0)))), CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR('QÁ¥úTY')))OR(vt0.c0)))AND(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)&((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(NULL)))OR(((vt0.c1)%(vt0.c0)))), CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR('QÁ¥úTY')))OR(vt0.c0)))AND(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)&((vt0.c0 IN ())))) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(NULL)))OR(((vt0.c1)%(vt0.c0)))), CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR('QÁ¥úTY')))OR(vt0.c0)))AND(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)&((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(NULL)))OR(((vt0.c1)%(vt0.c0)))), CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR('QÁ¥úTY')))OR(vt0.c0)))AND(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)&((vt0.c0 IN ())))) ORDER BY ((((CAST(vt0.c1 AS INTEGER))OR(NULL)))OR(((vt0.c1)%(vt0.c0)))), CASE WHEN ((((((((vt0.c1)AND(vt0.c0)))OR('QÁ¥úTY')))OR(vt0.c0)))AND(vt0.c0)) THEN (+ (vt0.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) END  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)IS(vt0.c0))) BETWEEN (UPPER(0.5033491068109912)) AND ((~ (v0.c0)))) WHERE (CAST(((((vt0.c1)OR(0.23673621580891402)))OR(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(0.23673621580891402)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)IS(vt0.c0))) BETWEEN (UPPER(0.5033491068109912)) AND ((~ (v0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)IS(vt0.c0))) BETWEEN (UPPER(0.5033491068109912)) AND ((~ (v0.c0)))) WHERE (CAST(((((vt0.c1)OR(0.23673621580891402)))OR(vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c1)OR(0.23673621580891402)))OR(vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)IS(vt0.c0))) BETWEEN (UPPER(0.5033491068109912)) AND ((~ (v0.c0)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((vt0.c0)IS(vt0.c0))) BETWEEN (UPPER(0.5033491068109912)) AND ((~ (v0.c0)))) WHERE (CAST(((((vt0.c1)OR(0.23673621580891402)))OR(vt0.c1)) AS INTEGER));
SELECT * FROM v0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0)-(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)-(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0)-(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((vt0.c0)-(v0.c0)))) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (UPPER(DISTINCT ((vt0.c0)-(v0.c0))));
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)OR('')))AND(v0.c0))) IS FALSE)) ORDER BY '?F,qM()}'  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR('')))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY '?F,qM()}'  NULLS FIRST, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)OR('')))AND(v0.c0))) IS FALSE)) ORDER BY '?F,qM()}'  NULLS FIRST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR('')))AND(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0 ORDER BY '?F,qM()}'  NULLS FIRST, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((((((v0.c0)OR('')))AND(v0.c0))) IS FALSE)) ORDER BY '?F,qM()}'  NULLS FIRST, vt0.c1 ASC;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT NULL);
SELECT SUM(count) FROM (SELECT ((((((v0.c0) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT NULL));
SELECT COUNT(*) FROM v0, vt0 WHERE (((((v0.c0) IS FALSE)) NOTNULL)) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) NOT NULL);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt0 WHERE (1.144521591E9);
SELECT SUM(count) FROM (SELECT ((1.144521591E9) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (1.144521591E9);
SELECT SUM(count) FROM (SELECT ((1.144521591E9) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (1.144521591E9);
SELECT * FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) WHERE ((- ((vt0.c1 IN ())))) ORDER BY (NOT (LIKELIHOOD(v0.c0, 0.3650538663927133))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) ORDER BY (NOT (LIKELIHOOD(v0.c0, 0.3650538663927133))) DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) WHERE ((- ((vt0.c1 IN ())))) ORDER BY (NOT (LIKELIHOOD(v0.c0, 0.3650538663927133))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) ORDER BY (NOT (LIKELIHOOD(v0.c0, 0.3650538663927133))) DESC  NULLS FIRST);
SELECT * FROM vt0 INNER JOIN v0 ON (NOT (v0.c0)) WHERE ((- ((vt0.c1 IN ())))) ORDER BY (NOT (LIKELIHOOD(v0.c0, 0.3650538663927133))) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((~ ('-1970090040')))) AND ((v0.c0 COLLATE BINARY)))) ORDER BY (((vt0.c1 IN ()))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((v0.c0) IS FALSE)) IS FALSE) ASC, (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((~ ('-1970090040')))) AND ((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ()))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((v0.c0) IS FALSE)) IS FALSE) ASC, (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((~ ('-1970090040')))) AND ((v0.c0 COLLATE BINARY)))) ORDER BY (((vt0.c1 IN ()))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((v0.c0) IS FALSE)) IS FALSE) ASC, (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN (((~ ('-1970090040')))) AND ((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c1 IN ()))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((v0.c0) IS FALSE)) IS FALSE) ASC, (vt0.c0 IN ()) ASC  NULLS LAST);
SELECT * FROM v0, vt0 WHERE ((((v0.c0)) NOT BETWEEN (((~ ('-1970090040')))) AND ((v0.c0 COLLATE BINARY)))) ORDER BY (((vt0.c1 IN ()))+(vt0.c1 COLLATE RTRIM)) ASC  NULLS LAST, ((((v0.c0) IS FALSE)) IS FALSE) ASC, (vt0.c0 IN ()) ASC  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE))<=((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))<=((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE))<=((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE))<=((NOT (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) IS TRUE))<=((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(0.10672380977969376)))OR(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(0.10672380977969376)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(0.10672380977969376)))OR(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) ISNULL);
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(0.10672380977969376)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0))) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((((((vt0.c1)OR(0.10672380977969376)))OR(vt0.c0)) IN ())) ORDER BY (((~ (vt0.c0))) ISNULL);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0, 0.9818710908496581, v0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))>((((v0.c0))<((vt0.c1)))))) ORDER BY (((((vt0.c1))>((v0.c0))))*(0.6139783174801497)) ASC, CAST(((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, 0.9818710908496581, v0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))>((((v0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1))>((v0.c0))))*(0.6139783174801497)) ASC, CAST(((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0, 0.9818710908496581, v0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))>((((v0.c0))<((vt0.c1)))))) ORDER BY (((((vt0.c1))>((v0.c0))))*(0.6139783174801497)) ASC, CAST(((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, 0.9818710908496581, v0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))>((((v0.c0))<((vt0.c1)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((vt0.c1))>((v0.c0))))*(0.6139783174801497)) ASC, CAST(((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM vt0, v0 WHERE ((((((vt0.c0, 0.9818710908496581, v0.c0)) BETWEEN ((v0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, v0.c0, vt0.c0))))>((((v0.c0))<((vt0.c1)))))) ORDER BY (((((vt0.c1))>((v0.c0))))*(0.6139783174801497)) ASC, CAST(((((vt0.c0)AND(v0.c0)))OR(vt0.c0)) AS INTEGER) DESC;
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(LIKE(NULL, vt0.c1, 'J') AS NUMERIC)) ORDER BY (- ((((vt0.c1))>((NULL)))))  NULLS LAST, CAST(((vt0.c1) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(LIKE(NULL, vt0.c1, 'J') AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY (- ((((vt0.c1))>((NULL)))))  NULLS LAST, CAST(((vt0.c1) NOT NULL) AS TEXT));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(LIKE(NULL, vt0.c1, 'J') AS NUMERIC)) ORDER BY (- ((((vt0.c1))>((NULL)))))  NULLS LAST, CAST(((vt0.c1) NOT NULL) AS TEXT);
SELECT SUM(count) FROM (SELECT ((CAST(LIKE(NULL, vt0.c1, 'J') AS NUMERIC)) IS TRUE)  as count FROM vt0, v0 ORDER BY (- ((((vt0.c1))>((NULL)))))  NULLS LAST, CAST(((vt0.c1) NOT NULL) AS TEXT));
SELECT COUNT(*) FROM vt0, v0 WHERE (CAST(LIKE(NULL, vt0.c1, 'J') AS NUMERIC)) ORDER BY (- ((((vt0.c1))>((NULL)))))  NULLS LAST, CAST(((vt0.c1) NOT NULL) AS TEXT);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)%(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)%(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)%(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM v0 WHERE (TRIM(((v0.c0)<<(v0.c0)))) ORDER BY ((v0.c0)GLOB(((v0.c0)AND(x'')))) DESC, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0)<<(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)GLOB(((v0.c0)AND(x'')))) DESC, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (TRIM(((v0.c0)<<(v0.c0)))) ORDER BY ((v0.c0)GLOB(((v0.c0)AND(x'')))) DESC, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TRIM(((v0.c0)<<(v0.c0)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0)GLOB(((v0.c0)AND(x'')))) DESC, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (TRIM(((v0.c0)<<(v0.c0)))) ORDER BY ((v0.c0)GLOB(((v0.c0)AND(x'')))) DESC, ((CAST(v0.c0 AS TEXT)) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (CASE WHEN v0.c0 THEN v0.c0 END)) DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)/(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) NOT NULL)))) ORDER BY x'8963c3aa' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)/(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'8963c3aa' ASC);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)/(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) NOT NULL)))) ORDER BY x'8963c3aa' ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)/(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM v0, vt0 ORDER BY x'8963c3aa' ASC);
SELECT * FROM v0, vt0 WHERE (((((((vt0.c0)/(vt0.c0)))OR((vt0.c0 IN ()))))AND(((v0.c0) NOT NULL)))) ORDER BY x'8963c3aa' ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (DATE(vt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (DATE(vt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((DATE(vt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (DATE(vt0.c1, vt0.c0, v0.c0, v0.c0, vt0.c1) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) ORDER BY TRIM(vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY TRIM(vt0.c0)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) ORDER BY TRIM(vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY TRIM(vt0.c0)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((vt0.c1) BETWEEN (v0.c0) AND (vt0.c1))) ISNULL)) ORDER BY TRIM(vt0.c0)  NULLS FIRST;
SELECT * FROM v0 WHERE ((((NULL IN ())) BETWEEN ((+ (v0.c0))) AND (((v0.c0)<<(v0.c0))))) ORDER BY (((CAST(v0.c0 AS REAL)))=((((v0.c0)IS(v0.c0))))), (((v0.c0)<(v0.c0)) IN (v0.c0, (- (v0.c0)))), (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN ((+ (v0.c0))) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((CAST(v0.c0 AS REAL)))==((((v0.c0)IS(v0.c0))))), (((v0.c0)<(v0.c0)) IN (v0.c0, (- (v0.c0)))), (v0.c0 IN ()) ASC);
SELECT * FROM v0 WHERE ((((NULL IN ())) BETWEEN ((+ (v0.c0))) AND (((v0.c0)<<(v0.c0))))) ORDER BY (((CAST(v0.c0 AS REAL)))=((((v0.c0)IS(v0.c0))))), (((v0.c0)<(v0.c0)) IN (v0.c0, (- (v0.c0)))), (v0.c0 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL IN ())) BETWEEN ((+ (v0.c0))) AND (((v0.c0)<<(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((CAST(v0.c0 AS REAL)))==((((v0.c0)IS(v0.c0))))), (((v0.c0)<(v0.c0)) IN (v0.c0, (- (v0.c0)))), (v0.c0 IN ()) ASC);
SELECT * FROM v0 WHERE ((((NULL IN ())) BETWEEN ((+ (v0.c0))) AND (((v0.c0)<<(v0.c0))))) ORDER BY (((CAST(v0.c0 AS REAL)))=((((v0.c0)IS(v0.c0))))), (((v0.c0)<(v0.c0)) IN (v0.c0, (- (v0.c0)))), (v0.c0 IN ()) ASC;
SELECT ALL * FROM v0 WHERE ((((((((((- (v0.c0)))OR((~ (v0.c0)))))OR((- (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((((((- (v0.c0)))OR((~ (v0.c0)))))OR((- (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((- (v0.c0)))OR((~ (v0.c0)))))OR((- (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((((((- (v0.c0)))OR((~ (v0.c0)))))OR((- (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((((((((- (v0.c0)))OR((~ (v0.c0)))))OR((- (v0.c0)))))OR(((v0.c0) IS FALSE))))OR(CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ (vt0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (CASE ((v0.c0)/(''))  WHEN (((v0.c0, v0.c0, '41795937')) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) END) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)) DESC  NULLS FIRST, (~ (((v0.c0)==(v0.c0))))  NULLS LAST, (((v0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)/(''))  WHEN (((v0.c0, v0.c0, '41795937')) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)) DESC  NULLS FIRST, (~ (((v0.c0)=(v0.c0))))  NULLS LAST, (((v0.c0) NOTNULL) IN ()));
SELECT * FROM v0 WHERE (CASE ((v0.c0)/(''))  WHEN (((v0.c0, v0.c0, '41795937')) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) END) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)) DESC  NULLS FIRST, (~ (((v0.c0)==(v0.c0))))  NULLS LAST, (((v0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0)/(''))  WHEN (((v0.c0, v0.c0, '41795937')) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) END) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)) DESC  NULLS FIRST, (~ (((v0.c0)=(v0.c0))))  NULLS LAST, (((v0.c0) NOTNULL) IN ()));
SELECT * FROM v0 WHERE (CASE ((v0.c0)/(''))  WHEN (((v0.c0, v0.c0, '41795937')) BETWEEN ((NULL, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0))) THEN (NOT (v0.c0)) END) ORDER BY ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (v0.c0)) DESC  NULLS FIRST, (~ (((v0.c0)==(v0.c0))))  NULLS LAST, (((v0.c0) NOTNULL) IN ());
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((v0.c0)AND(v0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN '*y' COLLATE BINARY THEN v0.c0 COLLATE RTRIM WHEN ('1591915084' IN (v0.c0, v0.c0)) THEN x'' WHEN ((v0.c0)!=(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN v0.c0 COLLATE BINARY THEN (- (v0.c0)) WHEN (('') NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) END ASC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((v0.c0)AND(v0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN '*y' COLLATE BINARY THEN v0.c0 COLLATE RTRIM WHEN ('1591915084' IN (v0.c0, v0.c0)) THEN x'' WHEN ((v0.c0)<>(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN v0.c0 COLLATE BINARY THEN (- (v0.c0)) WHEN (('') NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) END ASC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((v0.c0)AND(v0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN '*y' COLLATE BINARY THEN v0.c0 COLLATE RTRIM WHEN ('1591915084' IN (v0.c0, v0.c0)) THEN x'' WHEN ((v0.c0)!=(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN v0.c0 COLLATE BINARY THEN (- (v0.c0)) WHEN (('') NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) END ASC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((v0.c0)AND(v0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN '*y' COLLATE BINARY THEN v0.c0 COLLATE RTRIM WHEN ('1591915084' IN (v0.c0, v0.c0)) THEN x'' WHEN ((v0.c0)<>(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN v0.c0 COLLATE BINARY THEN (- (v0.c0)) WHEN (('') NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) END ASC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN v0.c0 END)AND(((v0.c0)AND(v0.c0)))))OR(CAST(v0.c0 AS NUMERIC)))) ORDER BY CASE WHEN CASE WHEN v0.c0 THEN v0.c0 END THEN v0.c0 COLLATE RTRIM WHEN ((v0.c0)IS NOT(v0.c0)) THEN ((((v0.c0)OR(v0.c0)))AND(v0.c0)) WHEN '*y' COLLATE BINARY THEN v0.c0 COLLATE RTRIM WHEN ('1591915084' IN (v0.c0, v0.c0)) THEN x'' WHEN ((v0.c0)!=(v0.c0)) THEN CAST(v0.c0 AS REAL) WHEN v0.c0 COLLATE BINARY THEN (- (v0.c0)) WHEN (('') NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0) NOT NULL) END ASC  NULLS LAST, (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (((v0.c0)>(v0.c0))) AND (((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CAST(TYPEOF(vt0.c1) AS BLOB)) ORDER BY ((((vt0.c0 IN ())))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0Xffffffffcfcadb07 END)))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(vt0.c1) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0Xffffffffcfcadb07 END)))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CAST(TYPEOF(vt0.c1) AS BLOB)) ORDER BY ((((vt0.c0 IN ())))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0Xffffffffcfcadb07 END)))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((CAST(TYPEOF(vt0.c1) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 IN ())))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0Xffffffffcfcadb07 END)))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END AS INTEGER));
SELECT ALL * FROM vt0 WHERE (CAST(TYPEOF(vt0.c1) AS BLOB)) ORDER BY ((((vt0.c0 IN ())))>=((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE 0Xffffffffcfcadb07 END)))  NULLS LAST, CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END AS INTEGER);
SELECT * FROM vt0, v0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((- ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((- ((vt0.c1 IN ()))));
SELECT * FROM v0 WHERE ('-323529995') ORDER BY (+ (((v0.c0)<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-323529995') IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)<(v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE ('-323529995') ORDER BY (+ (((v0.c0)<(v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-323529995') IS TRUE)  as count FROM v0 ORDER BY (+ (((v0.c0)<(v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE ('-323529995') ORDER BY (+ (((v0.c0)<(v0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0, ((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0, ((vt0.c0)/(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0, ((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0, ((vt0.c0)/(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (vt0.c0 COLLATE BINARY IN (vt0.c0, ((vt0.c0)/(vt0.c1))))  NULLS LAST;
SELECT * FROM vt0, v0 WHERE (((('1440057660' IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('1440057660' IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((('1440057660' IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((('1440057660' IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((('1440057660' IN ()))AND((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.10404413531102752, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.10404413531102752, v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.10404413531102752, v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.10404413531102752, v0.c0))) IN ())) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.10404413531102752, v0.c0))) IN ()));
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0 COLLATE RTRIM COLLATE NOCASE COLLATE NOCASE);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))OR(x'df86')))>=((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))OR(x'df86')))>=((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))OR(x'df86')))>=((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))OR(x'df86')))>=((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c1)))AND(v0.c0)))OR(v0.c0)))OR(x'df86')))>=((v0.c0 IN ()))));
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))*((('1693685049') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))*((('1693685049') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))*((('1693685049') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))*((('1693685049') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))*((('1693685049') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND (((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND (((~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND (((~ (v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND (((~ (v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND (((~ (v0.c0))))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))==((vt0.c0))))||(((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))=((vt0.c0))))||(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))==((vt0.c0))))||(((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))=((vt0.c0))))||(((vt0.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOT NULL))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1))==((vt0.c0))))||(((vt0.c0)&(vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))+(((vt0.c1) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (0xfffffffff1453122);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff1453122) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0xfffffffff1453122);
SELECT SUM(count) FROM (SELECT ALL ((0xfffffffff1453122) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0xfffffffff1453122);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(x'eec25634')))OR(vt0.c0)))OR(((vt0.c1)AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(x'eec25634')))OR(vt0.c0)))OR(((vt0.c1)AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(x'eec25634')))OR(vt0.c0)))OR(((vt0.c1)AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(x'eec25634')))OR(vt0.c0)))OR(((vt0.c1)AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON ((((((((((((vt0.c1)AND(vt0.c0)))AND(v0.c0)))AND(x'eec25634')))OR(vt0.c0)))OR(((vt0.c1)AND(vt0.c0)))))OR(CASE WHEN vt0.c0 THEN vt0.c1 END)) WHERE (((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (COALESCE(DISTINCT vt0.c0, v0.c0)) AND (((vt0.c0)/(vt0.c0)))));
SELECT * FROM v0 WHERE (((x'')AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'')AND(CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')AND(CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((x'')AND(CAST(v0.c0 AS TEXT))));
SELECT * FROM v0, vt0 WHERE ((((vt0.c1))<((vt0.c0)))) ORDER BY CASE ((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END THEN ((v0.c0) IS TRUE) ELSE vt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))<((vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END THEN ((v0.c0) IS TRUE) ELSE vt0.c1 END);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1))<((vt0.c0)))) ORDER BY CASE ((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END THEN ((v0.c0) IS TRUE) ELSE vt0.c1 END;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1))<((vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY CASE ((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END THEN ((v0.c0) IS TRUE) ELSE vt0.c1 END);
SELECT * FROM v0, vt0 WHERE ((((vt0.c1))<((vt0.c0)))) ORDER BY CASE ((((((((vt0.c1)AND(vt0.c0)))OR(v0.c0)))OR(v0.c0)))AND(vt0.c0))  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c1 END THEN ((v0.c0) IS TRUE) ELSE vt0.c1 END;
SELECT * FROM v0 WHERE (0.32233153119200075);
SELECT SUM(count) FROM (SELECT ((0.32233153119200075) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.32233153119200075);
SELECT SUM(count) FROM (SELECT ((0.32233153119200075) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (0.32233153119200075);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY ((((((v0.c0)<<(v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)<<(v0.c0)))AND((((v0.c0))!=((v0.c0))))))AND(CAST(v0.c0 AS REAL))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY ((((((v0.c0)<<(v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(CAST(v0.c0 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)<<(v0.c0)))AND((((v0.c0))!=((v0.c0))))))AND(CAST(v0.c0 AS REAL))) DESC);
SELECT COUNT(*) FROM v0 WHERE (CAST((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY ((((((v0.c0)<<(v0.c0)))AND((((v0.c0))<>((v0.c0))))))AND(CAST(v0.c0 AS REAL))) DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ ((('') NOT BETWEEN (vt0.c1) AND ('842221148')))));
SELECT SUM(count) FROM (SELECT (((+ ((('') NOT BETWEEN (vt0.c1) AND ('842221148'))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ ((('') NOT BETWEEN (vt0.c1) AND ('842221148')))));
SELECT SUM(count) FROM (SELECT (((+ ((('') NOT BETWEEN (vt0.c1) AND ('842221148'))))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((+ ((('') NOT BETWEEN (vt0.c1) AND ('842221148')))));
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1))<=((0x35ffe18a))))AND(((vt0.c1)IS NOT(vt0.c1)))))OR(((vt0.c1) ISNULL)))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))=((CASE 1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1))<=((0X35ffe18a))))AND(((vt0.c1)IS NOT(vt0.c1)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))==((CASE 1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1))<=((0x35ffe18a))))AND(((vt0.c1)IS NOT(vt0.c1)))))OR(((vt0.c1) ISNULL)))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))=((CASE 1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1))<=((0X35ffe18a))))AND(((vt0.c1)IS NOT(vt0.c1)))))OR(((vt0.c1) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))==((CASE 1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((((((((vt0.c1))<=((0x35ffe18a))))AND(((vt0.c1)IS NOT(vt0.c1)))))OR(((vt0.c1) ISNULL)))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))=((CASE 1.7976931348623157E308  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (NULL)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN 0.9843067734487937 ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN 0.9843067734487937 ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (NULL)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN 0.9843067734487937 ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (NULL)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN 0.9843067734487937 ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (NULL)) COLLATE NOCASE) ORDER BY CASE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN vt0.c0 THEN 0.9843067734487937 ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST;
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+((NOT (v0.c0))))) ORDER BY (NOT (((('-1181349289')) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((('-1181349289')) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+((NOT (v0.c0))))) ORDER BY (NOT (((('-1181349289')) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+((NOT (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (NOT (((('-1181349289')) BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))+((NOT (v0.c0))))) ORDER BY (NOT (((('-1181349289')) BETWEEN ((v0.c0)) AND ((v0.c0)))));
SELECT * FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((vt0.c0)>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- (((vt0.c0)>(vt0.c1)))));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (v0.c0)) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (v0.c0)) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN (- (v0.c0)) THEN v0.c0 ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0 COLLATE BINARY))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))>((v0.c0 COLLATE BINARY))));
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((CAST(v0.c0 AS INTEGER)) IS FALSE));
SELECT ALL * FROM v0, vt0 WHERE (UPPER(DISTINCT ((v0.c0)IS(vt0.c1)))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1) BETWEEN (0X4fc3e934) AND (x'')), 0.08947679274924591) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((v0.c0)IS(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1) BETWEEN (0X4fc3e934) AND (x'')), 0.08947679274924591) DESC);
SELECT ALL * FROM v0, vt0 WHERE (UPPER(DISTINCT ((v0.c0)IS(vt0.c1)))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1) BETWEEN (0X4fc3e934) AND (x'')), 0.08947679274924591) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT ((v0.c0)IS(vt0.c1)))) IS TRUE)  as count FROM v0, vt0 ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1) BETWEEN (0X4fc3e934) AND (x'')), 0.08947679274924591) DESC);
SELECT ALL * FROM v0, vt0 WHERE (UPPER(DISTINCT ((v0.c0)IS(vt0.c1)))) ORDER BY LIKELIHOOD(DISTINCT ((vt0.c1) BETWEEN (0X4fc3e934) AND (x'')), 0.08947679274924591) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((vt0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 IN ()) COLLATE RTRIM);
SELECT COUNT(*) FROM v0 WHERE (CAST(((x'3d67')*(v0.c0)) AS TEXT)) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'3d67')*(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((x'3d67')*(v0.c0)) AS TEXT)) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((x'3d67')*(v0.c0)) AS TEXT)) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(((x'3d67')*(v0.c0)) AS TEXT)) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 END AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (NULL);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN 'h' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN 'h' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN 'h' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE vt0.c0  WHEN vt0.c0 THEN 'h' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN 'h' WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0)))|('1157584030')));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0)))|('1157584030'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0)))|('1157584030')));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)-(v0.c0)))|('1157584030'))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0)))|('1157584030')));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((x'8542')<<(LIKELIHOOD(DISTINCT vt0.c1, 0.1733312634868538))) WHERE (TIME(vt0.c0, (((vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((1129107647, vt0.c0, vt0.c1))), NULL, (vt0.c0 IN ()), ((v0.c0)%(vt0.c0)))) ORDER BY '0.10510742570626808' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((TIME(vt0.c0, (((vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((1129107647, vt0.c0, vt0.c1))), NULL, (vt0.c0 IN ()), ((v0.c0)%(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((x'8542')<<(LIKELIHOOD(DISTINCT vt0.c1, 0.1733312634868538))) ORDER BY '0.10510742570626808' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((x'8542')<<(LIKELIHOOD(DISTINCT vt0.c1, 0.1733312634868538))) WHERE (TIME(vt0.c0, (((vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((1129107647, vt0.c0, vt0.c1))), NULL, (vt0.c0 IN ()), ((v0.c0)%(vt0.c0)))) ORDER BY '0.10510742570626808' COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((TIME(vt0.c0, (((vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((1129107647, vt0.c0, vt0.c1))), NULL, (vt0.c0 IN ()), ((v0.c0)%(vt0.c0)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((x'8542')<<(LIKELIHOOD(DISTINCT vt0.c1, 0.1733312634868538))) ORDER BY '0.10510742570626808' COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((x'8542')<<(LIKELIHOOD(DISTINCT vt0.c1, 0.1733312634868538))) WHERE (TIME(vt0.c0, (((vt0.c1, vt0.c0, NULL)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((1129107647, vt0.c0, vt0.c1))), NULL, (vt0.c0 IN ()), ((v0.c0)%(vt0.c0)))) ORDER BY '0.10510742570626808' COLLATE RTRIM;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('\rAo-*') NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((('\rAo-*') NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('\rAo-*') NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((('\rAo-*') NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((('\rAo-*') NOT NULL) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (' i')));
SELECT SUM(count) FROM (SELECT ALL (((- (' i'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (' i')));
SELECT SUM(count) FROM (SELECT ALL (((- (' i'))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((- (' i')));
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))%(x''))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))%(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) NOTNULL));
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))%(x''))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))%(x''))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) NOTNULL));
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))%(x''))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1))) NOTNULL);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (CASE WHEN ((vt0.c1)+(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((HEX(vt0.c1))AND((+ (NULL)))))AND(((v0.c0)|('-924767533'))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(TYPEOF(v0.c0))) ASC, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((HEX(vt0.c1))AND((+ (NULL)))))AND(((v0.c0)|('-924767533'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(TYPEOF(v0.c0))) ASC, v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((HEX(vt0.c1))AND((+ (NULL)))))AND(((v0.c0)|('-924767533'))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(TYPEOF(v0.c0))) ASC, v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((HEX(vt0.c1))AND((+ (NULL)))))AND(((v0.c0)|('-924767533'))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(TYPEOF(v0.c0))) ASC, v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((((HEX(vt0.c1))AND((+ (NULL)))))AND(((v0.c0)|('-924767533'))))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))-(TYPEOF(v0.c0))) ASC, v0.c0 DESC  NULLS FIRST;
SELECT * FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC);
SELECT * FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 ASC);
SELECT * FROM v0, vt0 WHERE (((v0.c0 COLLATE NOCASE) NOT BETWEEN (LIKELY(DISTINCT v0.c0)) AND (((((vt0.c0)OR(vt0.c0)))AND(vt0.c1))))) ORDER BY v0.c0 ASC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((~ (vt0.c1))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((~ (vt0.c1))) AND (x''))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((~ (vt0.c1))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((~ (vt0.c1))) AND (x''))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((TRIM(DISTINCT v0.c0, v0.c0)) BETWEEN ((~ (vt0.c1))) AND (x'')));
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(CAST(v0.c0 AS NUMERIC))) WHERE (vt0.c1) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN (+ (NULL)) END DESC  NULLS FIRST, '' ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (0.9439865601463914) AND (x'')) ELSE (((x'6992', vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(CAST(v0.c0 AS NUMERIC))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN (+ (NULL)) END DESC  NULLS FIRST, '' ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (0.9439865601463914) AND (x'')) ELSE (((x'6992', vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(CAST(v0.c0 AS NUMERIC))) WHERE (vt0.c1) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN (+ (NULL)) END DESC  NULLS FIRST, '' ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (0.9439865601463914) AND (x'')) ELSE (((x'6992', vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(CAST(v0.c0 AS NUMERIC))) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN (+ (NULL)) END DESC  NULLS FIRST, '' ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (0.9439865601463914) AND (x'')) ELSE (((x'6992', vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))>>(CAST(v0.c0 AS NUMERIC))) WHERE (vt0.c1) ORDER BY CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) THEN (+ (NULL)) END DESC  NULLS FIRST, '' ASC  NULLS LAST, CASE CASE WHEN v0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN vt0.c1 COLLATE BINARY THEN ((vt0.c1) NOT BETWEEN (0.9439865601463914) AND (x'')) ELSE (((x'6992', vt0.c0, NULL))>=((vt0.c0, vt0.c0, vt0.c0))) END DESC;
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (('NZ')IS(vt0.c1)) ELSE vt0.c0 END) ORDER BY (NOT ((((((((('-+ÁëÆ')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (('NZ')IS(vt0.c1)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (NOT ((((((((('-+ÁëÆ')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (('NZ')IS(vt0.c1)) ELSE vt0.c0 END) ORDER BY (NOT ((((((((('-+ÁëÆ')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE RTRIM THEN (('NZ')IS(vt0.c1)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 NATURAL JOIN v0 ORDER BY (NOT ((((((((('-+ÁëÆ')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM vt0 NATURAL JOIN v0 WHERE (CASE WHEN vt0.c0 COLLATE RTRIM THEN (('NZ')IS(vt0.c1)) ELSE vt0.c0 END) ORDER BY (NOT ((((((((('-+ÁëÆ')OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))));
SELECT * FROM v0, vt0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (x'' COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (x'' COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE (CAST((0.18608579761904442 IN ()) AS BLOB)) ORDER BY (((-5.24347575E8) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((0.18608579761904442 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((-5.24347575E8) ISNULL) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CAST((0.18608579761904442 IN ()) AS BLOB)) ORDER BY (((-5.24347575E8) ISNULL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((0.18608579761904442 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (((-5.24347575E8) ISNULL) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (CAST((0.18608579761904442 IN ()) AS BLOB)) ORDER BY (((-5.24347575E8) ISNULL) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE ('-524347575') ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN HEX(DISTINCT vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) END  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC  NULLS LAST, ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))AND(x'')))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-524347575') IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN HEX(DISTINCT vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) END  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC  NULLS LAST, ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))AND(x'')))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-524347575') ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN HEX(DISTINCT vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) END  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC  NULLS LAST, ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))AND(x'')))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-524347575') IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN HEX(DISTINCT vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) END  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC  NULLS LAST, ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))AND(x'')))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('-524347575') ORDER BY CASE ((vt0.c0) NOT NULL)  WHEN HEX(DISTINCT vt0.c0) THEN ((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) END  NULLS LAST, ((((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((vt0.c1) IS FALSE))))AND((NOT (vt0.c1)))) ASC  NULLS LAST, ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c0)))AND(x'')))AND((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) AS TEXT)) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS FIRST, vt0.c0, (- (((vt0.c0)!=(0.023656871731219442)))) DESC  NULLS FIRST, (+ (((vt0.c1)<=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS FIRST, vt0.c0, (- (((vt0.c0)!=(0.023656871731219442)))) DESC  NULLS FIRST, (+ (((vt0.c1)<=(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) AS TEXT)) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS FIRST, vt0.c0, (- (((vt0.c0)!=(0.023656871731219442)))) DESC  NULLS FIRST, (+ (((vt0.c1)<=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) AS TEXT)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS FIRST, vt0.c0, (- (((vt0.c0)!=(0.023656871731219442)))) DESC  NULLS FIRST, (+ (((vt0.c1)<=(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(COALESCE(vt0.c0, vt0.c0, vt0.c1, vt0.c0) AS TEXT)) ORDER BY (((vt0.c1)) BETWEEN (((- (vt0.c0)))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))  NULLS FIRST, vt0.c0, (- (((vt0.c0)!=(0.023656871731219442)))) DESC  NULLS FIRST, (+ (((vt0.c1)<=(vt0.c0)))) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((- (CAST(vt0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)||(((vt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)||(((vt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)||(((vt0.c0)<<(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)||(((vt0.c0)<<(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)||(((vt0.c0)<<(vt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY (DATE(v0.c0, v0.c0, v0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (DATE(v0.c0, v0.c0, v0.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY (DATE(v0.c0, v0.c0, v0.c0) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM v0 ORDER BY (DATE(v0.c0, v0.c0, v0.c0) IN ()) ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (x'') ORDER BY (DATE(v0.c0, v0.c0, v0.c0) IN ()) ASC;
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ())) IS FALSE)) ORDER BY CAST((vt0.c0 IN ()) AS REAL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE (HEX(DISTINCT CASE WHEN vt0.c1 THEN '1Z' END)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((((NULL)-(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CASE WHEN vt0.c1 THEN '1Z' END)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((((NULL)-(vt0.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (HEX(DISTINCT CASE WHEN vt0.c1 THEN '1Z' END)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((((NULL)-(vt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT CASE WHEN vt0.c1 THEN '1Z' END)) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((((NULL)-(vt0.c0))))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (HEX(DISTINCT CASE WHEN vt0.c1 THEN '1Z' END)) ORDER BY (((vt0.c0)) NOT BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((((NULL)-(vt0.c0))))) ASC;
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0)%(vt0.c1)) AS BLOB) WHERE (x'e30c') ORDER BY (((vt0.c1 IN (vt0.c0, v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.08032891552723664')))) DESC;
SELECT SUM(count) FROM (SELECT ((x'e30c') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0)%(vt0.c1)) AS BLOB) ORDER BY (((vt0.c1 IN (vt0.c0, v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.08032891552723664')))) DESC);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0)%(vt0.c1)) AS BLOB) WHERE (x'e30c') ORDER BY (((vt0.c1 IN (vt0.c0, v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.08032891552723664')))) DESC;
SELECT SUM(count) FROM (SELECT ((x'e30c') IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0)%(vt0.c1)) AS BLOB) ORDER BY (((vt0.c1 IN (vt0.c0, v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.08032891552723664')))) DESC);
SELECT ALL * FROM v0 FULL OUTER JOIN vt0 ON CAST(((vt0.c0)%(vt0.c1)) AS BLOB) WHERE (x'e30c') ORDER BY (((vt0.c1 IN (vt0.c0, v0.c0)))>=(((v0.c0) NOT BETWEEN (vt0.c0) AND ('0.08032891552723664')))) DESC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))IS(vt0.c0))) ORDER BY ((CAST(vt0.c1 AS REAL))%(CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE '-993788317' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL))%(CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE '-993788317' END)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))IS(vt0.c0))) ORDER BY ((CAST(vt0.c1 AS REAL))%(CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE '-993788317' END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL))IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c1 AS REAL))%(CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE '-993788317' END)) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS REAL))IS(vt0.c0))) ORDER BY ((CAST(vt0.c1 AS REAL))%(CASE NULL  WHEN vt0.c0 THEN vt0.c1 ELSE '-993788317' END)) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0)*(vt0.c1)))))AND(((((vt0.c0)AND(vt0.c1)))AND(0.29228037345280955)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0)*(vt0.c1)))))AND(((((vt0.c0)AND(vt0.c1)))AND(0.29228037345280955))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0)*(vt0.c1)))))AND(((((vt0.c0)AND(vt0.c1)))AND(0.29228037345280955)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0)*(vt0.c1)))))AND(((((vt0.c0)AND(vt0.c1)))AND(0.29228037345280955))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0)*(vt0.c1)))))AND(((((vt0.c0)AND(vt0.c1)))AND(0.29228037345280955)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((((((vt0.c1)OR(vt0.c1)))OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)) IN ()));
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (vt0.c0) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT NULL) ASC;
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((- (v0.c0)))>=(((vt0.c0)|(vt0.c1)))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (v0.c0, vt0.c1)))) AND (((v0.c0 IN (vt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN (v0.c0, vt0.c1)))) AND (((v0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((- (v0.c0)))>=(((vt0.c0)|(vt0.c1)))) ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((- (v0.c0)))>=(((vt0.c0)|(vt0.c1)))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (v0.c0, vt0.c1)))) AND (((v0.c0 IN (vt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN (v0.c0, vt0.c1)))) AND (((v0.c0 IN (vt0.c0)))))) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON (((- (v0.c0)))>=(((vt0.c0)|(vt0.c1)))) ORDER BY vt0.c1 ASC);
SELECT ALL * FROM vt0 CROSS JOIN v0 ON (((- (v0.c0)))>=(((vt0.c0)|(vt0.c1)))) WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN (v0.c0, vt0.c1)))) AND (((v0.c0 IN (vt0.c0)))))) ORDER BY vt0.c1 ASC;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(vt0.c0)) AS NUMERIC) WHERE ((NOT (((vt0.c0)=(NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)==(NULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(vt0.c0)) AS NUMERIC) WHERE ((NOT (((vt0.c0)=(NULL)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)==(NULL))))) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt0 ON CAST(((v0.c0)GLOB(vt0.c0)) AS NUMERIC) WHERE ((NOT (((vt0.c0)=(NULL)))));
