-- Time: 2024/06/09 23:24:52
-- Database: database15
-- Database version: 3.40.0
-- seed value: 3139682115
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 BLOB , c1 INT , c2 REAL ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 0ms;
INSERT OR ABORT INTO rt1(c2, c0, c1, c6, c5, c3, c4) VALUES (0.9932600602579845, 0xda74b02, NULL, 0.18295857613410837, 'a\r', NULL, x'aa78'), ('', '6J>Hf<莈M', NULL, x'b1f8', '229067522', 0.7945129604957428, -698776696), (NULL, ']U䝻埝', 0.9932600602579845, '451479427', 0.34562683880378997, x'', 0Xfffffffffd6c477b); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (0.1291299745054888, NULL, x''), (0.26082045255296393, NULL, x''), (x'', NULL, '峏Q놺'); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (x'66aa', 0.397259298252163); -- 3ms;
UPDATE OR ABORT t0 SET c0=0.9494322329294207, c1=0Xffffffff91274c1e WHERE t0.c1; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=NULL WHERE (0xffffffffac827272 IN (((((((((t0.c2)AND(t0.c1)))AND(t0.c0)))OR(t0.c0)))OR(t0.c1)))); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA default_cache_size; -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES ('bs'), (0.9553885744150419), (((((x'2c53b476') BETWEEN (x'') AND ('1391238045'))) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c3, c6, c0, c4, c5) VALUES (NULL, x'', '964913212', 0X3983683c, 0.7528403754898013, x'', 0.9494322329294207), ('-1859695586', NULL, 0.3953668829116034, -1161553745, '0.34562683880378997', NULL, 'sx'), (NULL, '峏Q놺', '', 2.29067522E8, x'', '3B3+듏)X^*', 'Ry'); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2, c0) VALUES (x'', 0x16128a48, 0x52ec9b9d); -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1) VALUES ('-1161553745', x''); -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c3)=('-1400737166'); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c0) VALUES (0.5860649154059896, x''), (5.00020431E8, 0.7236301702156304), (x'c33a', -1696419398); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c2) VALUES (28073167, 0X1ae90783); -- 0ms;
UPDATE OR IGNORE rt1 SET (c5)=(x'') WHERE UNLIKELY(DISTINCT (+ (rt1.c2))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='500020431' WHERE CAST(((NULL)>>(rt1.c1)) AS REAL); -- 0ms;
PRAGMA busy_timeout = 8568158368035266384; -- 1ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE rt1 SET c1=NULL WHERE ((rt1.c0)<(rt1.c6)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2009378959 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1230192132 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('m<짗r,]㻐\n') ISNULL))IS(((NULL)||('&_8S7')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-222693772 sz=17315123 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1400737166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-934986032 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-297678377 sz=-1859695586 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN x'b813' THEN x'90a1' WHEN x'896a' THEN 0Xfffffffffeb50dc8 WHEN 0.5860649154059896 THEN 0X5c0bb44 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-315503308 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-2.22693772E8 COLLATE NOCASE) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS INTEGER)) NOT BETWEEN (CAST(NULL AS INTEGER)) AND ((((NULL, '1585560045', 0.399492065126662))<=((0X48f96abf, '&_8S7', '951781953'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1664415549 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-672915669'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((0.9411339238441397)OR(1391238045)))OR('858316967')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1620236123'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1829959829 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 0.8926684012093729 THEN x'' WHEN x'a572' THEN 0.8926684012093729 WHEN 0.8231916814965928 THEN x'' END IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1758875614 sz=723500357 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-672915669'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=503026017 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 5ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 188789209  WHEN '-2086341436' THEN 1144710609 END)|((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 782445225 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-316991946 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(0x1dfb9161) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '350509021 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1831797677 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-297678377')) NOT BETWEEN (((((((((('Bf')OR('<1AgMX')))AND(0.25188113754624397)))AND(x'3a53')))AND(NULL)))) AND ((('p' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('17315123')>>('-905149665'))) BETWEEN ((0X6d12f895 IN ())) AND (TYPEOF(DISTINCT 0.6582472043501564))); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-868182321 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(x'' COLLATE BINARY, (NULL IN ())); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-964205061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=370313800 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-297678377')<<(908962581)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1992388229 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1537655301'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=361691574 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 -1517712388 sz=1602837268 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1.391238045E9)GLOB(NULL))) NOT BETWEEN ((('') IS FALSE)) AND ((+ (215088697)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1537655301'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'D雏'  WHEN x'' THEN '' END) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'c02d' AS INTEGER) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X70cdbfd6) NOT BETWEEN ('') AND (0.03412570168514584)))-((('P98') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.6419009406144175 THEN '' ELSE -1.696419398E9 END) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)|(0.9593457047155487))))<=((((('-905149665', NULL, NULL)) BETWEEN ((NULL, 0.9243140488635709, '-1983980488')) AND ((0.33462141303653103, NULL, NULL)))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '911464010' WHEN 'u~Xp~C' THEN NULL WHEN '370313800' THEN NULL ELSE 'X''Z⁧' END) NOT BETWEEN (((x'88e6') IS TRUE)) AND (((0.9932600602579845)AND(-6.72915669E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1230192132 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((7.82445225E8) NOT BETWEEN ('&h') AND (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE '-61776861'  WHEN x'' THEN x'' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('1668984190')))OR(NULL)))OR(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '370313800 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))OR(9.6516932E7)))<=('801758208' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1223874310 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('350509021' COLLATE RTRIM)OR((('-61776861')LIKE(NULL)))))OR(SQLITE_VERSION())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-716204813'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1474593177'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1859695586'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL))|(CAST('1668984190' AS INTEGER))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-152837433'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1782115697 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.22653492375013862 COLLATE NOCASE)OR(1956430763)))AND(CAST(0.9565235332154878 AS BLOB))))AND(CAST('-1831797677' AS REAL))))AND(x'9cfb' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '600063359 sz=-1800277304 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((x'' IN ()), x'' COLLATE RTRIM, ((x'') ISNULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((((0.895039446489066)AND('-198510929')))OR(0.20074326068044068)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-58315935 192103049 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1880557637 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-479986335'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(1981763462, CAST(NULL AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-1126770512 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('54' AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN (0.7912662782965345) AND (x'cd66'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1328338143' COLLATE RTRIM) BETWEEN (UNLIKELY(DISTINCT NULL)) AND (CAST(0x6092d75b AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 858316967 sz=2057711678 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.7198259907518786)AND(NULL)))AND(x'05b8')))OR(0.4805861846467179)))AND(x'')))AND(0.588450563672208)))OR(MIN(x'ee59', ''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-596519737' THEN 0X3653d64a ELSE 'h''' END COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1868700796 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1445805503 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((NULL) IS TRUE))) AND ((((0.024894403436255597)+(0.34308911196249003))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=858316967 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-315503308'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-905149665') BETWEEN (0.0539851034764699) AND (x'')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=995975349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL)) BETWEEN (((-43235461) NOTNULL)) AND (CASE WHEN 0.7198259907518786 THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-48664963 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1079903390'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(-934986032 AS BLOB)  WHEN ((NULL) BETWEEN ('TRUE') AND (1.620236123E9)) THEN LOWER(DISTINCT '-0.0') WHEN ((0.4975402249853007) NOT NULL) THEN CHAR(',[') WHEN (- ('G>')) THEN (x'' IN ()) ELSE (('4rd6NF') NOT BETWEEN (0.9353663024801511) AND ('-E-eⷝ')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1915777912)) NOT BETWEEN ((CASE 0.1254605577521246  WHEN -479986335 THEN x'' WHEN '0.25188113754624397' THEN '' WHEN 0X442e14b1 THEN x'' WHEN NULL THEN x'' WHEN 0xffffffffac7bdca4 THEN '' ELSE NULL END)) AND (((~ (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array(NULL, '869072978', '-819793443', 0xffffffffe682e57f, x'', NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=874190807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1782115697 sz=964913212 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=737959914 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1831797677 AS INTEGER))+((('k')<<(NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (CASE ''  WHEN -6.98776696E8 THEN 0Xffffffffc277fb62 ELSE 2001134827 END IN (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=232254458 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((('2120088490')<>(NULL)), ((x'')>>(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-1983980488')<=(x'80d3')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'40bc')OR(0.2135309967575263)))OR((~ ('-E-eⷝ')))))OR(((((x'')OR('0.7236301702156304')))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-967884937 sz=782445225'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1983980488')>>(0.13873598181186964)))/(((x'')-(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2004109987 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '869072978 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) BETWEEN ('') AND (0.31204621090011586)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-157485886'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))!=((('600063359') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-967884937 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM((((0X66b88add)) BETWEEN (('9\n/''IjzF*')) AND ((566968960))), ((0.7329649632999657) NOT BETWEEN ('') AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))*(((-1696419398) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1844804072 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '315755551 995975349 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1610262579 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1594213222 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1409692856 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1696419398 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=723500357 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1464489305 sz=-1839938544'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '232254458 sz=1224305343'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=2041897860 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.8041925222658798 COLLATE RTRIM AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1602837268 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.9582716197865425) BETWEEN (x'') AND ('-1024421610')))<((((x'')) BETWEEN ((x'')) AND ((0.4966918171171627))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('4rd6nf')) NOT BETWEEN (('')) AND ((0X35c4cf3c))))|((NULL IN (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -61776861 sz=911464010 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=325027475'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1602837268 sz=2137097221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-198510929' COLLATE RTRIM) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (NULL)) THEN (('䊀r') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1577200907 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length('\r]m^sSJO' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('609089840') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CAST(NULL AS BLOB), (- (x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1758875614'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((1.92103049E8 IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('wd]fM|N,t') NOTNULL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((((x'c09f')OR('')))AND(x'')))) AND (('-222693772' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=359461615 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((TYPEOF(DISTINCT NULL), '1582002247', (~ (91721422))))<=(((((NULL, NULL, NULL))==((x'', '?P', '#Zldwﱓ'))), ((79428072) BETWEEN (NULL) AND (2120088490)), ((((874190807)OR(NULL)))AND('<1agmx'))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL)))&((((('215088697')AND(NULL)))OR('N')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-1545010390' COLLATE NOCASE  WHEN ((0.2167620369885609) NOT BETWEEN (0.7528403754898013) AND ('L})%Y&TD')) THEN ((x'ac6a') NOTNULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 sz=1758875614 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(CAST(0.5864885212867256 AS NUMERIC), x'' COLLATE RTRIM); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN (x'') AND (x'6c23')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-672915669'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-1813782763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=28073167 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1681948351 4 sz=-716204813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1718238427 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1602860483'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('FIHb2y+V')-(x'')))OR(CASE WHEN '1802663325' THEN 0Xffffffffd538dcb2 WHEN 0.34308911196249003 THEN NULL WHEN 'V[' THEN -934986032 END)))AND('1-500000bJ' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1894143180 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('3m')<=(NULL)))AND(CASE NULL  WHEN 0xfffffffffd196e7d THEN NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1799999076 917600386 sz=119058926'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.9582716197865425  WHEN NULL THEN 9.6516932E7 WHEN '980015349' THEN 0.5916130866854281 WHEN '' THEN NULL ELSE NULL END)*(CASE WHEN x'' THEN 0.27055511607996674 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-1797044007 sz=584846662 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-904791707'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1310143715'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(NULL)))AND(NULL))) BETWEEN (((('-1537655301')) BETWEEN (('')) AND ((x'')))) AND (((x'') NOT BETWEEN ('651865003') AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0 sz=1758875614 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-916639946 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(json_patch(0xffffffffb171a006, x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 sz=1992388229'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6419009406144175; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.12478858875290133; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME('1391238045', 0.8231916814965928, '86435226') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM(x'ac94')) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 0 sz=-297678377'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1585560045) NOT BETWEEN (0.42394912704865007) AND ('-218764879')))<<((((('-698776696')OR(0.36625615853239346)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1963118718 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1135269784 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8104682541976787 AS TEXT)) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF('-2004109987', 0.7313148947384718))+(NULL COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=852014974 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, '874190807')) BETWEEN (((('0.36625615853239346') IS FALSE), (('-1085026563')GLOB(NULL)), (('-1517712388')<<(NULL)))) AND ((CAST(x'97c04c88' AS NUMERIC), (x'' IN ()), (('cDT92D')>(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '865340894 -21762405 sz=-1281974720 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type(-3.15503308E8))OR(((NULL)<(-766000473)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.16629306304558744)AND(NULL)))OR('874190807'))) BETWEEN (((NULL) IS FALSE)) AND (CASE WHEN x'' THEN 0.8077186197136176 ELSE NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1699877771' IN (NULL, 0.07865962990416508))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1844804072 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-967884937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(x'') COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'fc9044cb')) BETWEEN ((1544722062)) AND ((x'')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1161553745'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-2048809355 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-426862733 -886350330 sz=300974479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2 sz=350509021 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 87451989 sz=-1904256408'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((('0.7313148947384718') BETWEEN (-2.086341436E9) AND ('s'))) AND (CASE WHEN x'' THEN 0.9044690142396988 END)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1508811402'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)IS('-1126770512')) THEN (~ (x'')) WHEN ((((x'')OR('-704856004')))OR(-2.1762405E7)) THEN (('')IS NOT(NULL)) WHEN (('1268837528') NOTNULL) THEN CAST(0xffffffffc64f3f77 AS NUMERIC) ELSE (((((((('')OR(0.4267169987588135)))OR(NULL)))AND(NULL)))AND(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0xffffffff9b780900)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN (0.2533713703564322) AND (0.5568268752927447)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=173579087 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-1328338143 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1071099879 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1230847660'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0Xffffffffe363fd61 AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1884209516 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((9.1146401E8)<=('o帾ZNVYc*x')))%((((0.27055511607996674)) BETWEEN ((1150758964)) AND ((0.7591624736840287))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '-533110517'  WHEN x'' THEN 232254458 END COLLATE NOCASE COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-1537655301 1174304770 sz=-819793443 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'551e' COLLATE BINARY) BETWEEN ((('-819793443') IS FALSE)) AND (CASE WHEN x'' THEN '' WHEN '' THEN 0.7232440708964528 WHEN NULL THEN '/Ro' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', x'24ee', '/we[5', NULL, 9223372036854775807)) BETWEEN ((((('718114279'))>((x''))), CASE NULL  WHEN x'' THEN NULL ELSE NULL END, '࠺諝7w', -1968514996, 'Tq' COLLATE NOCASE)) AND ((CAST(NULL AS TEXT), x'', (('-414254768') BETWEEN (0.45718814816589104) AND (NULL)), ((NULL) NOT BETWEEN (-8.68182321E8) AND (x'84a1')), CAST(NULL AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1859695586 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0020'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=173139314 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.18295857613410837  WHEN '\r]m^ssjo' THEN 0Xffffffffeb14341a END)IS(NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1739746748 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('?(N훪R-V')) NOT BETWEEN (((x'5e67' IN ('-1983980488')))) AND ((CASE WHEN x'4b55' THEN 0.2998713531483742 WHEN '' THEN 0.9913094617485504 WHEN '0.0' THEN x'' ELSE 1.143870641E9 END))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1738033086 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('#?pᄉ8ml3') IS TRUE))|(((NULL)IS(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2061489268'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-803009978 2 sz=9223372036854775807'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-419997445 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'0126'))>((0.5802990916825546)))) BETWEEN ((('^Sy￿ds\') IS TRUE)) AND (CAST(NULL AS BLOB))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))LIKE((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-937960065 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1825929928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-318881976 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.9044690142396988)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-698776696 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-754456979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1162005811 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '187603596 sz=-679385401 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-636172270 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=643922180 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE 975756389  WHEN x'9db3' THEN NULL WHEN NULL THEN x'' WHEN 0.858994263853057 THEN NULL ELSE NULL END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-558733166 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1300410861 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '6 sz=188789209 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=273098004'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 2 sz=-1031944616 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((NULL))>=((0.5860649154059896))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2125637372 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1723370205 -325437747 sz=995975349 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1949922493 -551890047 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1859695586 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-1361269857 4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1915777912')GLOB(x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('t)JZ,?L}v')) NOT BETWEEN ((NULL)) AND (('995975349'))))&((((x'', 0.9154656845498989, 652716930))<=((NULL, '-61776861', x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=594035154 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=508324227 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9960378296450941) IS FALSE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('891499701') BETWEEN ('') AND (NULL)))OR(x'')))OR(((('')) BETWEEN ((-3.79248537E8)) AND ((0X48f2d706))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1869987526 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (NULL))  WHEN 0.14638659878157434 THEN ((('cDT9iD'))>((NULL))) ELSE (('1585560045') IS TRUE) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(0.12417150218425155, x'dc82'))OR((~ (x'')))))OR(((0.7841070256733232)*(x'd845')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))*(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1143870641 -214360850 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=-2098091128'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))AND(x'')))=(((0.12548687532074654) NOT BETWEEN (NULL) AND (0.7232440708964528)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1664415549 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '682303802 -2141068131 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '2048488733 sz=-1126770512'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('u~Xp~C', 'PML^', NULL))=(('908962581', 0.9085038072988294, x''))))AND(-2.009378959E9 COLLATE NOCASE)))OR(((x'')<(1831875663)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((0.28649140141124707)OR(x'')))OR(NULL)))AND((- (NULL)))))AND((((((((('a듏?')OR(0Xffffffffb75cb96e)))AND(0.0)))AND('-406868106')))OR(0.45718814816589104)))))OR(x'')))AND(((0.05292691432565011)<=(0Xffffffff91274c1e)))); -- 21ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1470200664 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)>(NULL)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.30670615834661996) NOT BETWEEN (x'') AND (0.4532250032489442))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.2236342981490499 COLLATE RTRIM AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1.7976931348623157E308)OR(0.29711395182265155))))>(((((-1.161553745E9, NULL, x'')) BETWEEN ((x'', 'k*Z셳', '-1604209958')) AND (('P,D', -1.831797677E9, x'd75b0c5e')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1761535097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, (((NULL))<((0.33243800832674586))), ((NULL) BETWEEN (NULL) AND (NULL))))<=((((x'f950')!=('-')), ((x'')!=(NULL)), (('451479427') NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'L)'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '1377675660 368986256 sz=1758875614 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1126770512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1474593177 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE ''  WHEN x'' THEN 0.983251709339215 WHEN 0.7528403754898013 THEN '' WHEN NULL THEN '-1644462764' WHEN x'' THEN -7.16204813E8 WHEN 0.6346586158945394 THEN '' ELSE NULL END  WHEN (((('')AND(x'')))OR(x'')) THEN (((x''))>=((x''))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2096639885' COLLATE RTRIM) BETWEEN (5.00020431E8) AND (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1941013097 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1733502621 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1531617521 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.30670615834661996 AS NUMERIC), CAST(NULL AS BLOB), CAST(-427629185 AS NUMERIC)))<=(('', (~ (2.29067522E8)), ((x'') IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1422380175')+(NULL))))>=((((0xfffffffffeb3ee9b)||(x'3072'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1577131547 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '1645886749 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '872533530 -1554950712 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=445733829 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1191685364 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(-0.0 AS NUMERIC) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<('')) IN ((0.6320585987737323 IN ('1844804072', NULL)), '-1800561874')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 -1479570449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND('-119370612')))AND(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.9159597518121718)AND(x'5f80'))  WHEN (x'b15a' IN ()) THEN x'e9fa' ELSE ((x'')IS(192103049)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=320982725 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1613709995'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-372590484 sz=801758208 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ ('')) IN (x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '375284912 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '836093989 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1224305343 sz=-124947168 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'3939')%('500020431')))<((((0.5051385015090145)) NOT BETWEEN ((0.4805861846467179)) AND (('m<짗r,]㻐\n'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((((((((((x'')OR('-629715983')))OR('383378303')))OR(x'')))AND(x'')))AND('')))AND(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-816010349 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('')) THEN ((NULL)>(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=361691574 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT TRIM(DISTINCT -721299160)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=327464549 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((NULL)<=(7.37959914E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '96516932 1672990640 sz=-1149434029 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ']U䝻埝'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')AND(x'')))OR('')))OR(LOWER('5%煚b*W⭡峏2'))))AND(LIKELY(DISTINCT 0Xffffffffb69e3619))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_array('', x'68fe60e6') IN (((x'f51a') BETWEEN (x'') AND (0.8789593298746383)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=456578428 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ('F&')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1674399348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((2.001134827E9 IN (NULL)))AND(CAST(x'' AS TEXT))))OR(((x'f4db') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((x'')OR(x'')))AND(x'7035')))OR(NULL)))OR(NULLIF('', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-2086341436 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=739884604 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) NOT BETWEEN (x'') AND (((x'')<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.46922556715769836 IN ('1249537828')))OR((((((((('-297678377')AND('229067522')))OR('hL쪌TGD	')))AND('')))OR('0.26082045255296393')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'468c')<=('0.13873598181186964')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=15509017 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1483099847 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1230192132'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ ('-1859695586')))OR(((NULL)&(1315612781)))))AND(LIKELIHOOD(DISTINCT 0X4095f789, 0.9121132149809712))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '2001134827'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-1983028172)AND(0Xfffffffffeb3ee9b)))OR('\!g/Y䈽')))OR(0.45897719913245816)))AND(((x'') NOT BETWEEN (NULL) AND ('-1079903390')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN x'7819' THEN NULL WHEN x'' THEN NULL WHEN '874190807' THEN x'46a8' END IN (QUOTE(0.46639828817851203))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN '7+oh>}<uw' THEN 0.6865744215835936 WHEN x'' THEN NULL WHEN x'' THEN x'fddb' ELSE x'7961' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=188789209'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (-940700151)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-2109073371 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '468890700'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('#9' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1.391238045E9)LIKE(x'')))AND(('ᶳ?' IN (NULL, NULL)))))OR((('') NOT NULL))))AND(json_type(''))))OR((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN 0.2998713531483742 THEN -6.72915669E8 ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-578061333 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-18531081'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=-1537655301 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1412237318 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=951781953 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.332337450430398 COLLATE BINARY)>>(((x'')IS NOT(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 350509021'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=459247039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1723370205', NULL, x'49dbdc66'))<=((NULL, 0.03160362987218801, '0.9932600602579845')))) BETWEEN ((('') NOT NULL)) AND (CASE x''  WHEN NULL THEN 552283062 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '192103049 1668984190 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (']U䝻f')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-526155526 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-43079407'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4eb2' IN ()))=(CASE WHEN x'' THEN 0.029084295291871953 WHEN x'' THEN '17315123' WHEN '-1859695586' THEN 0.10781266656370936 WHEN NULL THEN '1819396338' WHEN NULL THEN 'Mr<臚' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.4451581640030007)AND(CASE WHEN '?Pj(' THEN 0.0882567726306539 END)))AND(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('0.8077186197136176') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOTNULL) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.3014952900700081)-(0.28649140141124707)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.03271502528320169) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-891824957 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1773525846 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '-698776696 sz=1584854076 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '600063359 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1892532182 sz=314556792 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN x'b422' THEN 1956430763 WHEN 'iW' THEN '-1092330874' WHEN 0.926252760140107 THEN 0.22932730060648487 ELSE x'f901' END IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-316991946 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-668528159 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1639258946 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1230192132'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN x'' THEN 0.024894403436255597 END AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '1616180760 sz=-1400737166 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=229067522 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1079903390 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-374394120 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '500020431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=591275550'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '-1769586310 451479427 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)||(((0.054529378582456656) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=375559689 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '1844804072 0 sz=-473913570 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=28073167 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 1391238045 -1888233003 sz=-819793443'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))<>(('-316991946'))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (('1081586022' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((((((((x'')AND(NULL)))OR(x'')))OR(x'')))OR(0.41892939910993554)) THEN (0.37942647051405665 IN ()) ELSE HEX(x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ed75')-(0.6885599008423706))) NOT BETWEEN ('' COLLATE BINARY) AND (((('')) NOT BETWEEN (('')) AND ((0.332337450430398))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('F')<>('m_')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1236342615 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-317864118 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-316991946'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'b5e0') BETWEEN ('801758208') AND (0.6865744215835936)))%(CAST(NULL AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2b1fbd45)!=(0.46672507911041006))) BETWEEN ('1568739823') AND (CASE WHEN 'u|-Y' THEN x'5e4d' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.399492065126662)>>(x'')), ((NULL)>=(5.00020431E8)), NULL))<=(((- (195524830)), (x'' IN ('8-*yEGD', NULL)), 0.9879325495110641 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1680122560 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.16629306304558744)IS('H\rhj ')))<(CASE 0.858994263853057  WHEN '' THEN '1158984803' WHEN 0.33498900991626157 THEN NULL WHEN x'257d' THEN 0.6016746874688039 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-297678377')>=('566968960'))))<>(((- (0.2998713531483742))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=350509021 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME(((((1230966180)AND(-1.401168732E9)))OR('1385009558')), 0.9160478128033567 COLLATE RTRIM, '-967884937' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-2081751556 500020431 sz=-587463417 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-319477008 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-58315935 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('Ri' AS NUMERIC)))>((NULL COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (CASE WHEN x'' THEN 'bnw' ELSE '66969206' END, CAST(0.7313148947384718 AS TEXT))); -- 2ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LOWER(DISTINCT '556833004') AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1868700796 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0Xffffffff883a8340) IS TRUE) THEN (((('168681061')AND(0.06653602590990204)))OR(380163767)) ELSE CAST(0.2236342981490499 AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE BINARY)&(CAST(x'b5a1' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1432147595 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(NULL AS BLOB), NULLIF(DISTINCT 'OZR-', NULL), ('' IN (0.9240159738238455))))>=((CASE '!9FOKF裏'  WHEN 0.4074668081704125 THEN 0.13873598181186964 WHEN NULL THEN x'944d' WHEN 0.385381722362534 THEN x'' ELSE '-1868700796' END, 0.659348020277242 COLLATE BINARY, (- ('0.3014952900700081'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '374045635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' sz=1090663032 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('>Rt4\rhZr~' IN ()))*(UNLIKELY(x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (-373204060) AND (x''))))<>((-8.68182321E8))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-964205061 sz=-297678377 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1915777912 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=9223372036854775807 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-719319259'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((CASE NULL  WHEN x'950e' THEN x'' WHEN '0.46639828817851203' THEN NULL WHEN 0xfffffffffd6c477b THEN x'' END)) AND (('qLn?' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '1558973977 sz=1770323503 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((x'')OR(0.2940234087367739)))OR('D'))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE json(-1918489200) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1950005376'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=-1924699868 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.0050314355545276745 COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=858469550 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2085721601 sz=-966667374 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1474185317 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('ﹼh' IN ((~ (0X7fe76630)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'c43e' THEN '(෈DOz' ELSE x'' END)GLOB(((-1.161553745E9)&(0.8149482320395633)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1697756632 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1030620882'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ()))<<('1668984190' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('509354372')<('1144710609')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1190601701 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-2004109987 sz=991700198 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=786509733 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.2037739931293695  WHEN '-1161553745' THEN NULL ELSE 0.1758070165529092 END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1954789585'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((json_insert(0X786d88ec, 0.5031086676920308, '33812517'))AND(('埝FJ2''' IN ()))))AND((((((((('')OR(x'')))AND(NULL)))AND(x'')))AND(x'4d25')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1079903390 sz=-1241760395 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=1602837268'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT IFNULL(x'', '-1497122470')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (x'1795', '215088697'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1348248632'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=746954218 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-716204813' COLLATE RTRIM)*(((NULL)OR(x'b538')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '17315123 sz=1782115697'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=-1366575723 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', '1794286857 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '2001134827 -1741017635 sz=655233742 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM('1585560045' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1146224723 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1829959829 566968960 sz=9223372036854775807 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.8358960531123312 AS TEXT))<=((- (0X669e2b79)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 2 sz=357678312 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 -1139526513'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'46a1')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1150338103 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=232254458 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT ('-178422975')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 0 sz=1782115697 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1627149704 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('f&H篓' IN ()))OR(NULL COLLATE NOCASE)))AND((NOT (5.00020431E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1180958538 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-716204813'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((('q?~dY')OR(0.3907276752130401)))OR(0Xfffffffff060f09a)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT BETWEEN ((('541714710')+(NULL))) AND (((-1.537655301E9)<>(0.6419009406144175)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7236301702156304)) BETWEEN ((-2.004109987E9)) AND ((((0.830424673256711) NOT BETWEEN (NULL) AND (9.51781953E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'e34e'))<=((0.793063304650948))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2 1143870641'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ' sz=940135494'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT CASE WHEN 0xffffffffc9777ec2 THEN NULL WHEN '' THEN 0.9160329571256739 WHEN x'' THEN '' ELSE NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1123668833 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1791457941 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-405720588'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X23dcbb2d) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ((('-868182321')OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1401168732 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1465480255 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1400737166 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-964205061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE '-2071326511'  WHEN x'f2a1' THEN x'' WHEN 0.4190747611414122 THEN 0X5c0bb44 WHEN 'aV⽸\n	E' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1524761279 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=492459144 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '503026017 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY)<>(CASE WHEN NULL THEN -1.859695586E9 WHEN '-1747304043' THEN x'' WHEN x'' THEN -6.98776696E8 ELSE '佱L' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (NULL))  WHEN (((0.6233720213032415))=((x''))) THEN ((0X4a5101be) BETWEEN ('BNW') AND (2.001134827E9)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=596626734 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.15164763581612817) NOT BETWEEN (NULL) AND (x'')), CASE WHEN '' THEN '-1886600586' ELSE NULL END, ((x'383c') BETWEEN (0Xffffffff91274c1e) AND ('1949995812'))))=((((((NULL)OR(x'')))AND('215088697')), ((((x'')OR(0.05292691432565011)))AND(x'184fd135')), (('-1831797677')OR(0.4150490229954553))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((('1664415549')AND(x'b813')))AND(x'')))AND(NULL)))OR('-93479754')))AND(NULL)))OR(x'')))OR(CAST('490104281' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.2695442002400328) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS NUMERIC))AND((('-905149665')IS NOT('Wc')))))OR(((('ቄB', '0.5802990916825546', NULL))>=((NULL, 0.47755244473044756, 0.6582472043501564))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE '1898392011'  WHEN '8SCQ!D?T' THEN x'' END, RTRIM('N^\,BV\r 7'), ((x'4896')<('1092705270'))))<=((x'' COLLATE RTRIM, ((('1758875614'))!=((x''))), CASE WHEN NULL THEN -1868700796 WHEN 'ﹼH' THEN NULL WHEN '' THEN 0.49766870396817475 ELSE 0.16583364257196065 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-404941774 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1082024889 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=1625832996 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=1620236123'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=839081803'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffa1d54a10; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')|(0.887778753320917)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-43235461 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=579626175 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((1620481811)<(1.143870641E9)))+(CASE WHEN '-0.0' THEN 0.46475848973511125 ELSE 0.0951603540334165 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '28073167' COLLATE NOCASE COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-1204271536 sz=-222693772 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((464499355)OR(0.3014952900700081)))OR(x'')))AND(9.51781953E8)))AND('1144710609')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 1775091150 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '^sy￿ds\' THEN NULL ELSE x'1862' END)>>((x'5ec4' IN (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '-461313407 -571420359 sz=17315123 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(((0.9135725930044843) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1626129963 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((('-1224290728')AND(0.25188113754624397)))AND(1.474593177E9)))AND('	z' COLLATE NOCASE)))OR(((NULL) IS FALSE))))AND((NULL IN ()))))AND(0x5acbe8b7 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '178302952 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('582957801')GLOB(((x'ca8c')IS NOT(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=2052305944'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT -8.19793443E8); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1014404005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1770766949 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-672915669 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0<')AND(0.332337450430398)))AND('7V9/')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT (NOT (-21499164)), (((0.9372196282345402, x'', 0X79d2ac87)) BETWEEN ((0Xffffffff83a4f4c4, x'7697', '0.858994263853057')) AND ((0Xfffffffffd6c477b, 526255657, x'51ce')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>(0Xffffffffe80b5377)))OR(((((((((0Xffffffff94796c72)AND(x'f20f')))OR('iw')))OR(x'')))AND(x'')))))AND(CAST('1391238045' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '-614161577 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=873059937'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULLIF(0.18175551363485742, 0.6965321838929238))AND((0xfffffffff42af6af IN (0Xffffffffe969c574, NULL)))))OR(((NULL) BETWEEN (0.9391436558326093) AND (0.2886448423881136)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=110649500 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')!=('''<뚽A')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-1298105541'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-957787357 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', '2 sz=-86664277 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 't0', ' sz=-479986335 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) BETWEEN ((('nE') IS TRUE)) AND (CASE WHEN 0.2720792642852595 THEN x'1b124161' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1246073120 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.9159597518121718')) NOT BETWEEN (((((((((('eRDun')OR(0x572fad1f)))OR(x'a753')))AND('1844804072')))OR(0.6733604719670511)))) AND ((('o^' IN (0.03160362987218801))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('PO請AkW2u끒')LIKE(x''))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=911464010 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-81510294 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '782445225' COLLATE NOCASE  WHEN ((0X23c247e6) BETWEEN (NULL) AND (NULL)) THEN ((0.021803327612769596) NOT BETWEEN (0X6d12f895) AND ('-1221264426')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)) BETWEEN ((NULL)) AND ((0.34308911196249003)))))>(((((-4.79986335E8)) NOT BETWEEN ((x'')) AND (('1829959829')))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1557483603')>>(-2.1762405E7))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', ' sz=-1400737166'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'rt1', '1580381089 sz=-684646064 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((TOTAL_CHANGES())) AND ((((0x6334f73d)>('3'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3366685420525459) IS TRUE))AND('')))OR((((((((('X''Z⁧')AND(NULL)))AND(0x32b13504)))AND('0F#gc')))OR('-1803525774')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 2 sz=1165190203 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((-1982472949)) AND ((x''))))AND(((((0.6849263159653384)OR(NULL)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'null', '2060805748 sz=-427629185'); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  t0; -- 0ms;
UPDATE OR ROLLBACK rt1 SET c6='-1797020315', c6=NULL WHERE x'b383'; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('-367156936') WHERE ((rt1.c1)-((rt1.c3 IN ()))); -- 0ms;
UPDATE OR REPLACE t0 SET c0=0.029084295291871953, c2=0.43270402680462383; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES ('-761318863', '1143870641', x'b7fd', '-1400737166', 0.05292691432565011, x'fb31', 1.474593177E9); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR ABORT t0 SET c2=0Xee46d3d WHERE CASE (+ (t0.c0))  WHEN ((t0.c0)<(t0.c0)) THEN ((t0.c0)|(t0.c2)) WHEN (NOT (t0.c0)) THEN ((t0.c2)==(t0.c0)) WHEN ((t0.c0)=('-48664963')) THEN ((t0.c2) BETWEEN (t0.c1) AND (t0.c0)) ELSE CAST(t0.c2 AS INTEGER) END; -- 0ms;
UPDATE OR IGNORE t0 SET c1=0.6025950629105369, c2='0.4267169987588135', c1='0.5568268752927447' WHERE CASE WHEN t0.c2 COLLATE BINARY THEN t0.c0 ELSE ((t0.c1)>=(t0.c1)) END; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c5)=('-1401168732', -1293438771); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA foreign_keys; -- 0ms;
INSERT OR IGNORE INTO t1(c2, c1) VALUES (0.028622415918376887, 'p') ON CONFLICT(c2, c1, c0) DO UPDATE SET c2=-3.79248537E8, c0=c1; -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c2, c5, c4) VALUES (x'', 1.66898419E9, x'5755', 0X341b17d7); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 0ms;
PRAGMA auto_vacuum = NONE; -- 0ms;
INSERT OR REPLACE INTO rt1(c4, c3, c0) VALUES (0.272889895505362, x'', x''), (20544159, x'', -1039326148), (0.05325811108956313, x'8a29', 0.4564436629051861); -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
ALTER TABLE t1 ADD COLUMN c12 INTEGER; -- 0ms;
UPDATE OR IGNORE rt1 SET c1=0.2640142331347729 WHERE rt1.c6; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2='-1328338143', c1=0.4971670021775887 WHERE (((- (rt0.c4))) BETWEEN ((rt0.c1 IN (rt0.c4, rt0.c2))) AND (((rt0.c3)+(rt0.c2)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c12)=(x''); -- 0ms;
UPDATE OR ABORT rt0 SET (c1)=(0.0822024948029727) WHERE LIKE(((((rt0.c0)AND(rt0.c3)))OR(rt0.c1)), ((rt0.c1)*(rt0.c2))); -- 0ms;
PRAGMA application_id = 3694236743287735808; -- 0ms;
CREATE INDEX i55 ON t1(c12 COLLATE BINARY ASC,(((((c0, c0, c2, c0, c12, c12, c12)) BETWEEN ((c2, c0, c0, c2, c1, c1, c1)) AND ((c0, c0, c12, 0X3b5d60b5, -1094297094, c1, c0))))*(((c2)AND(c2)))) COLLATE NOCASE ASC,((c1 COLLATE RTRIM) BETWEEN (((NULL)GLOB(c2))) AND ((c12 IN ()))) DESC,(~ (((c0)GLOB(c2)))) COLLATE NOCASE DESC) WHERE ((((c1) NOT BETWEEN (c2) AND (c1)))LIKE((c12 IN (c2, c12)))); -- 0ms;
CREATE INDEX IF NOT EXISTS i84 ON t1(((((c2) NOT NULL)) NOT BETWEEN (((c0) NOT BETWEEN (c1) AND (c0))) AND (0Xb40b1d9)) COLLATE BINARY,((c12 COLLATE BINARY) ISNULL),((((c2)&(NULL)))=(CASE '8w'  WHEN c1 THEN c2 END)) DESC,(((((c1) IS FALSE)))>((c1 COLLATE BINARY))) COLLATE BINARY); -- 1ms;
PRAGMA temp.cache_size = -7106138920515264561; -- 1ms;
UPDATE t1 SET (c12)=(0.07598076196071679); -- 0ms;
INSERT OR ABORT INTO rt0 VALUES (0.032346935385487385, NULL, '1782115697', x'', '඄rdJ'), (1.7315123E7, 0.7313148947384718, NULL, NULL, NULL), (NULL, 0.3001593900708074, NULL, NULL, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c1, c0, c1)=(-637379099, 0x394fc5f9, '1487219297') WHERE ((((t1.c12)+('-1859695586'))) IS TRUE); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c1, c0) VALUES (1585560045, x'', NULL, 0.8186752789653878), (x'b892', '〾S\7)W?', x'df52', '-596519737'), (-1497957556, 0.2167620369885609, '192103049', NULL); -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
UPDATE OR FAIL t1 SET c12=NULL, c1=0X29186b4e WHERE CASE WHEN (~ (t1.c2)) THEN ((t1.c12) ISNULL) END; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c39; -- 1ms;
END; -- 0ms;
INSERT OR FAIL INTO rt1 VALUES ('-1675172860', 'PO請M/W2u끒', x'', 'Kz', '', '-558831416', '-1859695586'), ('', 0.6741572084911692, 8.69072978E8, 0x637aad7e, '-21688888', x'', x''), (NULL, '-1226181819', x'456e', '858316967', '350509021', '1183258947', 0.4046466515675915); -- 0ms;
INSERT OR FAIL INTO rt0(c3, c0, c1, c2) VALUES (NULL, '1195443715', '0.7912662782965345', 0.2135309967575263); -- 0ms;
REINDEX; -- 15ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT rt1 SET (c5)=('-698776696'); -- 0ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t1 SET (c2)=(NULL) WHERE (((t1.c39, NULL, t1.c0)) NOT BETWEEN ((((t1.c39) IS FALSE), (NOT (t1.c2)), COALESCE(t1.c39, t1.c12))) AND ((t1.c0 COLLATE BINARY, ((t1.c0)<=(-2.1762405E7)), CASE t1.c39  WHEN t1.c0 THEN t1.c0 END))); -- 1ms;
UPDATE rt1 SET (c2)=(0.3796067649544055) WHERE (((rt1.c6)) NOT BETWEEN ((CASE WHEN rt1.c4 THEN rt1.c2 ELSE rt1.c1 END)) AND ((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c0) VALUES ('', NULL, '+5'); -- 0ms;
INSERT OR FAIL INTO rt1(c5, c2, c6, c4, c3) VALUES ('0E-pḀ_es!', '', '1143870641', x'', '1912445665'); -- 0ms;
INSERT OR REPLACE INTO rt1(c5, c2, c1, c3, c0, c6, c4) VALUES ('3', NULL, x'9f270075', 0xffffffffa7176d2d, x'', 0.7571518527593764, NULL); -- 0ms;
INSERT OR ROLLBACK INTO t1(c12, c39, c2) VALUES ('96516932', NULL, 0.15461766075567696), ('', '継', 0.9932600602579845), (x'', NULL, '+2T'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c4=NULL, c1=0.89270091829726 WHERE ((rt0.c4 IN ()) IN ()); -- 1ms;
COMMIT; -- 0ms;
PRAGMA temp.mmap_size = -7510772014886479211; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c4; -- 1ms;
REINDEX NOCASE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt1(c3, c5, c0, c4, c6) VALUES ('-517241059', '0 nI4*8', NULL, '', x'65f1'); -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 1ms;
REINDEX  t1; -- 0ms;
UPDATE t1 SET (c12, c12)=(0X4eba7c00, -555592162); -- 1ms;
UPDATE OR ABORT rt0 SET (c1)=(1199871876) WHERE rt0.c1 COLLATE RTRIM; -- 0ms;
PRAGMA secure_delete = true; -- 0ms;
REINDEX  rt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE i84; -- 0ms;
UPDATE OR IGNORE rt0 SET c3=0.7236301702156304, c2=-1232190901; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c1)=('-157485886', 0X827bdd6); -- 0ms;
INSERT OR ABORT INTO rt1(c5, c3, c2, c6, c4, c0) VALUES ('Ĝ-adh', 0xfffffffff42af6af, 0.34562683880378997, 0.5990641873293029, 0.0862154572417374, x''), (0.1009462828028368, NULL, NULL, 0.1316534431735955, x'', x''), (NULL, '908962581', '874190807', '-2139613612', x'', NULL); -- 0ms;
INSERT OR FAIL INTO t1(c4, c12) VALUES (-1019003308, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET c2=-479986335 WHERE CAST(CASE t1.c39  WHEN t1.c2 THEN t1.c4 ELSE t1.c39 END AS BLOB); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t1, rt0 WHERE (((t1.c39) NOT BETWEEN (((t1.c4) IS FALSE)) AND (((rt0.c4)>>(0xfffffffff9b99764)))));
SELECT SUM(count) FROM (SELECT ((((t1.c39) NOT BETWEEN (((t1.c4) IS FALSE)) AND (((rt0.c4)>>(0Xfffffffff9b99764))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((t1.c39) NOT BETWEEN (((t1.c4) IS FALSE)) AND (((rt0.c4)>>(0xfffffffff9b99764)))));
SELECT SUM(count) FROM (SELECT ((((t1.c39) NOT BETWEEN (((t1.c4) IS FALSE)) AND (((rt0.c4)>>(0Xfffffffff9b99764))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((t1.c39) NOT BETWEEN (((t1.c4) IS FALSE)) AND (((rt0.c4)>>(0xfffffffff9b99764)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6 COLLATE NOCASE)AND(((rt1.c2) NOTNULL))))AND(LTRIM(rt1.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c6 COLLATE NOCASE)AND(((rt1.c2) NOTNULL))))AND(LTRIM(rt1.c5)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6 COLLATE NOCASE)AND(((rt1.c2) NOTNULL))))AND(LTRIM(rt1.c5))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c6 COLLATE NOCASE)AND(((rt1.c2) NOTNULL))))AND(LTRIM(rt1.c5)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c6 COLLATE NOCASE)AND(((rt1.c2) NOTNULL))))AND(LTRIM(rt1.c5))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE INNER JOIN t1 ON (((rt1.c2)) NOT BETWEEN (((+ (rt1.c0)))) AND ((((((t1.c12)AND(0.16621299270164436)))AND(x''))))) WHERE (CAST(IFNULL(rt0.c0, t1.c12) AS TEXT)) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt1.c5)) THEN ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((t1.c12)) NOT BETWEEN ((x'')) AND ((t1.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(rt0.c0, t1.c12) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE INNER JOIN t1 ON (((rt1.c2)) NOT BETWEEN (((+ (rt1.c0)))) AND ((((((t1.c12)AND(0.16621299270164436)))AND(x''))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt1.c5)) THEN ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((t1.c12)) NOT BETWEEN ((x'')) AND ((t1.c2))) END  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE INNER JOIN t1 ON (((rt1.c2)) NOT BETWEEN (((+ (rt1.c0)))) AND ((((((t1.c12)AND(0.16621299270164436)))AND(x''))))) WHERE (CAST(IFNULL(rt0.c0, t1.c12) AS TEXT)) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt1.c5)) THEN ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((t1.c12)) NOT BETWEEN ((x'')) AND ((t1.c2))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(IFNULL(rt0.c0, t1.c12) AS TEXT)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE INNER JOIN t1 ON (((rt1.c2)) NOT BETWEEN (((+ (rt1.c0)))) AND ((((((t1.c12)AND(0.16621299270164436)))AND(x''))))) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt1.c5)) THEN ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((t1.c12)) NOT BETWEEN ((x'')) AND ((t1.c2))) END  NULLS FIRST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt0.c2)IS NOT(rt0.c0)) COLLATE NOCASE INNER JOIN t1 ON (((rt1.c2)) NOT BETWEEN (((+ (rt1.c0)))) AND ((((((t1.c12)AND(0.16621299270164436)))AND(x''))))) WHERE (CAST(IFNULL(rt0.c0, t1.c12) AS TEXT)) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt1.c5)) THEN ((rt1.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (((t1.c12)) NOT BETWEEN ((x'')) AND ((t1.c2))) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ('-21762405' IN ()) WHERE (((DATETIME(NULL, t1.c39, t1.c12, t1.c2, rt0.c0)) IS TRUE)) ORDER BY NULL  NULLS FIRST, (('')>>(((t1.c12)GLOB(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(NULL, t1.c39, t1.c12, t1.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ('-21762405' IN ()) ORDER BY NULL  NULLS FIRST, (('')>>(((t1.c12)GLOB(t1.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ('-21762405' IN ()) WHERE (((DATETIME(NULL, t1.c39, t1.c12, t1.c2, rt0.c0)) IS TRUE)) ORDER BY NULL  NULLS FIRST, (('')>>(((t1.c12)GLOB(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((DATETIME(NULL, t1.c39, t1.c12, t1.c2, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ('-21762405' IN ()) ORDER BY NULL  NULLS FIRST, (('')>>(((t1.c12)GLOB(t1.c2)))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON ('-21762405' IN ()) WHERE (((DATETIME(NULL, t1.c39, t1.c12, t1.c2, rt0.c0)) IS TRUE)) ORDER BY NULL  NULLS FIRST, (('')>>(((t1.c12)GLOB(t1.c2))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((((((((((rt0.c2)+(rt1.c5)))AND((- (x'')))))AND(rt1.c3)))AND(CAST(t1.c12 AS INTEGER))))OR(((((rt1.c5)OR(t1.c39)))AND(rt1.c2))))) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)+(rt1.c5)))AND((- (x'')))))AND(rt1.c3)))AND(CAST(t1.c12 AS INTEGER))))OR(((((rt1.c5)OR(t1.c39)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((((((((((rt0.c2)+(rt1.c5)))AND((- (x'')))))AND(rt1.c3)))AND(CAST(t1.c12 AS INTEGER))))OR(((((rt1.c5)OR(t1.c39)))AND(rt1.c2))))) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)+(rt1.c5)))AND((- (x'')))))AND(rt1.c3)))AND(CAST(t1.c12 AS INTEGER))))OR(((((rt1.c5)OR(t1.c39)))AND(rt1.c2))))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((rt0.c2 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (((((((((((rt0.c2)+(rt1.c5)))AND((- (x'')))))AND(rt1.c3)))AND(CAST(t1.c12 AS INTEGER))))OR(((((rt1.c5)OR(t1.c39)))AND(rt1.c2))))) ORDER BY ((rt0.c2 IN ()) IN ())  NULLS LAST;
SELECT ALL * FROM t1, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (rt1.c0);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((t1.c39)-(rt1.c0)) IN ())) ORDER BY t1.c12 DESC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt0.c1)) AND (((rt1.c3 IN (rt0.c4)))))  NULLS FIRST, ((((rt1.c2)>=(rt1.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c39)-(rt1.c0)) IN ())) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY t1.c12 DESC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt0.c1)) AND (((rt1.c3 IN (rt0.c4)))))  NULLS FIRST, ((((rt1.c2)>=(rt1.c2))) NOTNULL) ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((t1.c39)-(rt1.c0)) IN ())) ORDER BY t1.c12 DESC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt0.c1)) AND (((rt1.c3 IN (rt0.c4)))))  NULLS FIRST, ((((rt1.c2)>=(rt1.c2))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c39)-(rt1.c0)) IN ())) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY t1.c12 DESC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt0.c1)) AND (((rt1.c3 IN (rt0.c4)))))  NULLS FIRST, ((((rt1.c2)>=(rt1.c2))) NOTNULL) ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE ((((t1.c39)-(rt1.c0)) IN ())) ORDER BY t1.c12 DESC  NULLS FIRST, (((rt1.c2)) BETWEEN ((rt0.c1)) AND (((rt1.c3 IN (rt0.c4)))))  NULLS FIRST, ((((rt1.c2)>=(rt1.c2))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON (+ (0.2044253105915681)) WHERE ((((rt1.c3 IN ()))<((((rt1.c2, '-1831797677', t1.c39)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((t1.c2, t1.c4, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ()))<((((rt1.c2, '-1831797677', t1.c39)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((t1.c2, t1.c4, rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON (+ (0.2044253105915681)));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON (+ (0.2044253105915681)) WHERE ((((rt1.c3 IN ()))<((((rt1.c2, '-1831797677', t1.c39)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((t1.c2, t1.c4, rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN ()))<((((rt1.c2, '-1831797677', t1.c39)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((t1.c2, t1.c4, rt0.c0)))))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON (+ (0.2044253105915681)));
SELECT COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON (+ (0.2044253105915681)) WHERE ((((rt1.c3 IN ()))<((((rt1.c2, '-1831797677', t1.c39)) NOT BETWEEN ((rt1.c1, rt0.c1, rt1.c0)) AND ((t1.c2, t1.c4, rt0.c0))))));
SELECT ALL COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON (((t1.c4)) BETWEEN ((t1.c2)) AND ((rt1.c1))) COLLATE BINARY COLLATE NOCASE WHERE (1.391238045E9);
SELECT SUM(count) FROM (SELECT ((1.391238045E9) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON (((t1.c4)) BETWEEN ((t1.c2)) AND ((rt1.c1))) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON (((t1.c4)) BETWEEN ((t1.c2)) AND ((rt1.c1))) COLLATE BINARY COLLATE NOCASE WHERE (1.391238045E9);
SELECT SUM(count) FROM (SELECT ((1.391238045E9) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON (((t1.c4)) BETWEEN ((t1.c2)) AND ((rt1.c1))) COLLATE BINARY COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON (((t1.c4)) BETWEEN ((t1.c2)) AND ((rt1.c1))) COLLATE BINARY COLLATE NOCASE WHERE (1.391238045E9);
SELECT ALL * FROM rt0, rt1 CROSS JOIN t1 ON ((rt0.c1 COLLATE NOCASE)IS((- (rt1.c5)))) WHERE ((rt0.c2 IN ())) ORDER BY TRIM(DISTINCT CASE WHEN t1.c4 THEN rt1.c0 ELSE t1.c4 END, (rt0.c4 IN ())) DESC  NULLS LAST, rt1.c6 ASC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t1 ON ((rt0.c1 COLLATE NOCASE)IS((- (rt1.c5)))) ORDER BY TRIM(DISTINCT CASE WHEN t1.c4 THEN rt1.c0 ELSE t1.c4 END, (rt0.c4 IN ())) DESC  NULLS LAST, rt1.c6 ASC  NULLS FIRST, NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 CROSS JOIN t1 ON ((rt0.c1 COLLATE NOCASE)IS((- (rt1.c5)))) WHERE ((rt0.c2 IN ())) ORDER BY TRIM(DISTINCT CASE WHEN t1.c4 THEN rt1.c0 ELSE t1.c4 END, (rt0.c4 IN ())) DESC  NULLS LAST, rt1.c6 ASC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c2 IN ())) IS TRUE)  as count FROM rt0, rt1 CROSS JOIN t1 ON ((rt0.c1 COLLATE NOCASE)IS((- (rt1.c5)))) ORDER BY TRIM(DISTINCT CASE WHEN t1.c4 THEN rt1.c0 ELSE t1.c4 END, (rt0.c4 IN ())) DESC  NULLS LAST, rt1.c6 ASC  NULLS FIRST, NULL DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1 CROSS JOIN t1 ON ((rt0.c1 COLLATE NOCASE)IS((- (rt1.c5)))) WHERE ((rt0.c2 IN ())) ORDER BY TRIM(DISTINCT CASE WHEN t1.c4 THEN rt1.c0 ELSE t1.c4 END, (rt0.c4 IN ())) DESC  NULLS LAST, rt1.c6 ASC  NULLS FIRST, NULL DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (CAST(t1.c12 AS NUMERIC) IN ()) WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((((((((t1.c12, rt0.c4, t1.c12)) BETWEEN ((rt0.c3, rt0.c3, t1.c39)) AND ((rt0.c2, t1.c12, 0.5635311367192207))))OR(((t1.c4)=(t1.c2)))))OR((rt0.c3 IN ()))))OR(CASE x''  WHEN rt0.c1 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN '-P*.' THEN rt0.c4 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (CAST(t1.c12 AS NUMERIC) IN ()) ORDER BY (((((((((((t1.c12, rt0.c4, t1.c12)) BETWEEN ((rt0.c3, rt0.c3, t1.c39)) AND ((rt0.c2, t1.c12, 0.5635311367192207))))OR(((t1.c4)==(t1.c2)))))OR((rt0.c3 IN ()))))OR(CASE x''  WHEN rt0.c1 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN '-P*.' THEN rt0.c4 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (CAST(t1.c12 AS NUMERIC) IN ()) WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((((((((t1.c12, rt0.c4, t1.c12)) BETWEEN ((rt0.c3, rt0.c3, t1.c39)) AND ((rt0.c2, t1.c12, 0.5635311367192207))))OR(((t1.c4)=(t1.c2)))))OR((rt0.c3 IN ()))))OR(CASE x''  WHEN rt0.c1 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN '-P*.' THEN rt0.c4 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (CAST(t1.c12 AS NUMERIC) IN ()) ORDER BY (((((((((((t1.c12, rt0.c4, t1.c12)) BETWEEN ((rt0.c3, rt0.c3, t1.c39)) AND ((rt0.c2, t1.c12, 0.5635311367192207))))OR(((t1.c4)==(t1.c2)))))OR((rt0.c3 IN ()))))OR(CASE x''  WHEN rt0.c1 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN '-P*.' THEN rt0.c4 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))  NULLS LAST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN t1 ON (CAST(t1.c12 AS NUMERIC) IN ()) WHERE (SQLITE_SOURCE_ID()) ORDER BY (((((((((((t1.c12, rt0.c4, t1.c12)) BETWEEN ((rt0.c3, rt0.c3, t1.c39)) AND ((rt0.c2, t1.c12, 0.5635311367192207))))OR(((t1.c4)=(t1.c2)))))OR((rt0.c3 IN ()))))OR(CASE x''  WHEN rt0.c1 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN '-P*.' THEN rt0.c4 END)))OR(SQLITE_COMPILEOPTION_GET(rt0.c3)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (0.77255674309666);
SELECT SUM(count) FROM (SELECT ALL ((0.77255674309666) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (0.77255674309666);
SELECT SUM(count) FROM (SELECT ALL ((0.77255674309666) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (0.77255674309666);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt1.c5) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt1.c5) AND (rt0.c1)) END) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt1.c5) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt1.c5) AND (rt0.c1)) END) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (rt1.c5) AND (rt0.c1)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt0.c4)IS NOT(rt0.c1)))) AND ((((((rt1.c2)AND(rt1.c4)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt0.c4)IS NOT(rt0.c1)))) AND ((((((rt1.c2)AND(rt1.c4)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt0.c4)IS NOT(rt0.c1)))) AND ((((((rt1.c2)AND(rt1.c4)))AND(rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((((rt0.c4)IS NOT(rt0.c1)))) AND ((((((rt1.c2)AND(rt1.c4)))AND(rt0.c1)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt0.c4)IS NOT(rt0.c1)))) AND ((((((rt1.c2)AND(rt1.c4)))AND(rt0.c1))))));
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c2)) END) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (CASE WHEN (+ (rt1.c4)) THEN ((rt1.c3)AND(rt1.c2)) END);
SELECT ALL * FROM t1 INNER JOIN rt1 ON ((((json(rt1.c3))AND(TRIM(DISTINCT rt1.c4))))OR((+ (rt1.c4)))) WHERE (HEX((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((~ (rt1.c2)))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((json(rt1.c3))AND(TRIM(DISTINCT rt1.c4))))OR((+ (rt1.c4)))));
SELECT ALL * FROM t1 INNER JOIN rt1 ON ((((json(rt1.c3))AND(TRIM(DISTINCT rt1.c4))))OR((+ (rt1.c4)))) WHERE (HEX((~ (rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((~ (rt1.c2)))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((((json(rt1.c3))AND(TRIM(DISTINCT rt1.c4))))OR((+ (rt1.c4)))));
SELECT ALL * FROM t1 INNER JOIN rt1 ON ((((json(rt1.c3))AND(TRIM(DISTINCT rt1.c4))))OR((+ (rt1.c4)))) WHERE (HEX((~ (rt1.c2))));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON INSTR(CASE WHEN rt0.c3 THEN rt1.c6 ELSE rt0.c4 END, ((t1.c4) IS FALSE)) RIGHT OUTER JOIN t1 ON (((rt1.c3 IN ())) NOTNULL) WHERE (0xffffffffbf3ec3fd) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbf3ec3fd) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON INSTR(CASE WHEN rt0.c3 THEN rt1.c6 ELSE rt0.c4 END, ((t1.c4) IS FALSE)) RIGHT OUTER JOIN t1 ON (((rt1.c3 IN ())) NOTNULL) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST);
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON INSTR(CASE WHEN rt0.c3 THEN rt1.c6 ELSE rt0.c4 END, ((t1.c4) IS FALSE)) RIGHT OUTER JOIN t1 ON (((rt1.c3 IN ())) NOTNULL) WHERE (0xffffffffbf3ec3fd) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbf3ec3fd) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON INSTR(CASE WHEN rt0.c3 THEN rt1.c6 ELSE rt0.c4 END, ((t1.c4) IS FALSE)) RIGHT OUTER JOIN t1 ON (((rt1.c3 IN ())) NOTNULL) ORDER BY CAST(((rt1.c1) NOT NULL) AS INTEGER)  NULLS LAST);
SELECT * FROM t1 WHERE (((((t1.c4) NOT BETWEEN (x'') AND ('3H'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOT BETWEEN (x'') AND ('3H'))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c4) NOT BETWEEN (x'') AND ('3H'))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOT BETWEEN (x'') AND ('3H'))) ISNULL)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c4) NOT BETWEEN (x'') AND ('3H'))) ISNULL));
SELECT COUNT(*) FROM t1, rt1 WHERE (LIKELY(DISTINCT -43235461));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT -43235461)) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (LIKELY(DISTINCT -43235461));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT -43235461)) IS TRUE)  as count FROM t1, rt1);
SELECT COUNT(*) FROM t1, rt1 WHERE (LIKELY(DISTINCT -43235461));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON '621448080' WHERE (LIKELIHOOD(NULL, 0.5387097246763798));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(NULL, 0.5387097246763798)) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON '621448080');
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON '621448080' WHERE (LIKELIHOOD(NULL, 0.5387097246763798));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(NULL, 0.5387097246763798)) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON '621448080');
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON '621448080' WHERE (LIKELIHOOD(NULL, 0.5387097246763798));
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT ALL * FROM rt1 NOT INDEXED, t1 WHERE ((rt1.c4 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c4 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1 NOT INDEXED, t1 WHERE ((rt1.c4 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c4 COLLATE BINARY IN ())) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1 NOT INDEXED, t1 WHERE ((rt1.c4 COLLATE BINARY IN ()));
SELECT * FROM t1 WHERE (((((((((CAST(t1.c2 AS INTEGER))OR(((((t1.c12)AND(t1.c12)))OR(t1.c2)))))AND((+ (NULL)))))OR(LENGTH(t1.c39))))OR(((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c39))))) ORDER BY ((((((((TRIM(t1.c39, t1.c39))OR(t1.c4)))OR((~ (t1.c4)))))AND(-1.859695586E9 COLLATE NOCASE)))AND(((((((((t1.c4)AND(t1.c4)))OR(t1.c39)))OR(t1.c12)))OR(t1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c2 AS INTEGER))OR(((((t1.c12)AND(t1.c12)))OR(t1.c2)))))AND((+ (NULL)))))OR(LENGTH(t1.c39))))OR(((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c39))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((TRIM(t1.c39, t1.c39))OR(t1.c4)))OR((~ (t1.c4)))))AND(-1.859695586E9 COLLATE NOCASE)))AND(((((((((t1.c4)AND(t1.c4)))OR(t1.c39)))OR(t1.c12)))OR(t1.c2)))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((CAST(t1.c2 AS INTEGER))OR(((((t1.c12)AND(t1.c12)))OR(t1.c2)))))AND((+ (NULL)))))OR(LENGTH(t1.c39))))OR(((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c39))))) ORDER BY ((((((((TRIM(t1.c39, t1.c39))OR(t1.c4)))OR((~ (t1.c4)))))AND(-1.859695586E9 COLLATE NOCASE)))AND(((((((((t1.c4)AND(t1.c4)))OR(t1.c39)))OR(t1.c12)))OR(t1.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((CAST(t1.c2 AS INTEGER))OR(((((t1.c12)AND(t1.c12)))OR(t1.c2)))))AND((+ (NULL)))))OR(LENGTH(t1.c39))))OR(((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c39))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((TRIM(t1.c39, t1.c39))OR(t1.c4)))OR((~ (t1.c4)))))AND(-1.859695586E9 COLLATE NOCASE)))AND(((((((((t1.c4)AND(t1.c4)))OR(t1.c39)))OR(t1.c12)))OR(t1.c2)))) DESC  NULLS FIRST);
SELECT * FROM t1 WHERE (((((((((CAST(t1.c2 AS INTEGER))OR(((((t1.c12)AND(t1.c12)))OR(t1.c2)))))AND((+ (NULL)))))OR(LENGTH(t1.c39))))OR(((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c39))))) ORDER BY ((((((((TRIM(t1.c39, t1.c39))OR(t1.c4)))OR((~ (t1.c4)))))AND(-1.859695586E9 COLLATE NOCASE)))AND(((((((((t1.c4)AND(t1.c4)))OR(t1.c39)))OR(t1.c12)))OR(t1.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c5) NOT BETWEEN (0.5360843685538192) AND (rt1.c6)))AND(((((rt1.c5)AND(rt1.c5)))AND(rt1.c4)))))AND(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)))OR(((rt1.c4) IS TRUE))))OR('1360134245' COLLATE BINARY))) ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c5)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c5) NOT BETWEEN (0.5360843685538192) AND (rt1.c6)))AND(((((rt1.c5)AND(rt1.c5)))AND(rt1.c4)))))AND(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)))OR(((rt1.c4) IS TRUE))))OR('1360134245' COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c5)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c5) NOT BETWEEN (0.5360843685538192) AND (rt1.c6)))AND(((((rt1.c5)AND(rt1.c5)))AND(rt1.c4)))))AND(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)))OR(((rt1.c4) IS TRUE))))OR('1360134245' COLLATE BINARY))) ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c5)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c5) NOT BETWEEN (0.5360843685538192) AND (rt1.c6)))AND(((((rt1.c5)AND(rt1.c5)))AND(rt1.c4)))))AND(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)))OR(((rt1.c4) IS TRUE))))OR('1360134245' COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c5)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((((((rt1.c5) NOT BETWEEN (0.5360843685538192) AND (rt1.c6)))AND(((((rt1.c5)AND(rt1.c5)))AND(rt1.c4)))))AND(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c3 END)))OR(((rt1.c4) IS TRUE))))OR('1360134245' COLLATE BINARY))) ORDER BY (~ (((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c5)))) ASC;
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c2)<<(rt1.c0)))<((((0.6349313939381785))<>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<<(rt1.c0)))<((((0.6349313939381785))<>((rt1.c3)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c2)<<(rt1.c0)))<((((0.6349313939381785))<>((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)<<(rt1.c0)))<((((0.6349313939381785))<>((rt1.c3)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c2)<<(rt1.c0)))<((((0.6349313939381785))<>((rt1.c3))))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (TYPEOF(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (TYPEOF(DISTINCT NULL));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT NULL)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (TYPEOF(DISTINCT NULL));
SELECT ALL * FROM t1 INDEXED BY i84, rt1, rt0 WHERE (CAST(UPPER(rt1.c5) AS BLOB)) ORDER BY TRIM(((t1.c4)IS(0.07799078379590385)))  NULLS FIRST, (((((rt0.c0)OR(rt0.c4)))OR(t1.c12)) IN (UNLIKELY(DISTINCT rt0.c3), CASE rt1.c3  WHEN rt1.c4 THEN rt0.c1 WHEN t1.c4 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 ELSE t1.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c5) AS BLOB)) IS TRUE)  as count FROM t1 INDEXED BY i84, rt1, rt0 ORDER BY TRIM(((t1.c4)IS(0.07799078379590385)))  NULLS FIRST, (((((rt0.c0)OR(rt0.c4)))OR(t1.c12)) IN (UNLIKELY(DISTINCT rt0.c3), CASE rt1.c3  WHEN rt1.c4 THEN rt0.c1 WHEN t1.c4 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 ELSE t1.c4 END)));
SELECT ALL * FROM t1 INDEXED BY i84, rt1, rt0 WHERE (CAST(UPPER(rt1.c5) AS BLOB)) ORDER BY TRIM(((t1.c4)IS(0.07799078379590385)))  NULLS FIRST, (((((rt0.c0)OR(rt0.c4)))OR(t1.c12)) IN (UNLIKELY(DISTINCT rt0.c3), CASE rt1.c3  WHEN rt1.c4 THEN rt0.c1 WHEN t1.c4 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 ELSE t1.c4 END));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(rt1.c5) AS BLOB)) IS TRUE)  as count FROM t1 INDEXED BY i84, rt1, rt0 ORDER BY TRIM(((t1.c4)IS(0.07799078379590385)))  NULLS FIRST, (((((rt0.c0)OR(rt0.c4)))OR(t1.c12)) IN (UNLIKELY(DISTINCT rt0.c3), CASE rt1.c3  WHEN rt1.c4 THEN rt0.c1 WHEN t1.c4 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 ELSE t1.c4 END)));
SELECT ALL * FROM t1 INDEXED BY i84, rt1, rt0 WHERE (CAST(UPPER(rt1.c5) AS BLOB)) ORDER BY TRIM(((t1.c4)IS(0.07799078379590385)))  NULLS FIRST, (((((rt0.c0)OR(rt0.c4)))OR(t1.c12)) IN (UNLIKELY(DISTINCT rt0.c3), CASE rt1.c3  WHEN rt1.c4 THEN rt0.c1 WHEN t1.c4 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c5 ELSE t1.c4 END));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(ABS(rt0.c1))))AND((~ (rt0.c3)))))OR(rt0.c3)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) ORDER BY (((NOT (rt0.c4)))-((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, rt0.c3, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(ABS(rt0.c1))))AND((~ (rt0.c3)))))OR(rt0.c3)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c4)))-((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, rt0.c3, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(ABS(rt0.c1))))AND((~ (rt0.c3)))))OR(rt0.c3)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) ORDER BY (((NOT (rt0.c4)))-((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, rt0.c3, rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(ABS(rt0.c1))))AND((~ (rt0.c3)))))OR(rt0.c3)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0 ORDER BY (((NOT (rt0.c4)))-((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, rt0.c3, rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(ABS(rt0.c1))))AND((~ (rt0.c3)))))OR(rt0.c3)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c2))))) ORDER BY (((NOT (rt0.c4)))-((((rt0.c2, rt0.c2, rt0.c2))>((rt0.c0, rt0.c3, rt0.c1)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt1 ON (((((~ (rt1.c2)))OR(((rt1.c3)+(t1.c2)))))AND((- (t1.c39)))) WHERE (CASE WHEN x'f015' THEN rt1.c6 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'f015' THEN rt1.c6 COLLATE RTRIM END) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON (((((~ (rt1.c2)))OR(((rt1.c3)+(t1.c2)))))AND((- (t1.c39)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt1 ON (((((~ (rt1.c2)))OR(((rt1.c3)+(t1.c2)))))AND((- (t1.c39)))) WHERE (CASE WHEN x'f015' THEN rt1.c6 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN x'f015' THEN rt1.c6 COLLATE RTRIM END) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON (((((~ (rt1.c2)))OR(((rt1.c3)+(t1.c2)))))AND((- (t1.c39)))));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt1 ON (((((~ (rt1.c2)))OR(((rt1.c3)+(t1.c2)))))AND((- (t1.c39)))) WHERE (CASE WHEN x'f015' THEN rt1.c6 COLLATE RTRIM END);
SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c12 AS BLOB))) ORDER BY (NOT (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t1.c12 AS BLOB))) IS TRUE)  as count FROM t1 ORDER BY (NOT (''))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c12 AS BLOB))) ORDER BY (NOT (''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((ABS(CAST(t1.c12 AS BLOB))) IS TRUE)  as count FROM t1 ORDER BY (NOT (''))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (ABS(CAST(t1.c12 AS BLOB))) ORDER BY (NOT (''))  NULLS FIRST;
SELECT * FROM rt0, rt1, t1 WHERE (((rt0.c4 IN (rt1.c3)) IN ())) ORDER BY (CASE WHEN t1.c39 THEN t1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t1.c39 END IN (rt1.c6 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 IN (rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (CASE WHEN t1.c39 THEN t1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t1.c39 END IN (rt1.c6 COLLATE RTRIM)) DESC);
SELECT * FROM rt0, rt1, t1 WHERE (((rt0.c4 IN (rt1.c3)) IN ())) ORDER BY (CASE WHEN t1.c39 THEN t1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t1.c39 END IN (rt1.c6 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4 IN (rt1.c3)) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (CASE WHEN t1.c39 THEN t1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t1.c39 END IN (rt1.c6 COLLATE RTRIM)) DESC);
SELECT * FROM rt0, rt1, t1 WHERE (((rt0.c4 IN (rt1.c3)) IN ())) ORDER BY (CASE WHEN t1.c39 THEN t1.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN t1.c39 END IN (rt1.c6 COLLATE RTRIM)) DESC;
SELECT ALL * FROM t1, rt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0))==((t1.c12))))AND(-6.98776696E8)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))==((t1.c12))))AND(-6.98776696E8))) IS TRUE)  as count FROM t1, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM t1, rt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0))==((t1.c12))))AND(-6.98776696E8)));
SELECT SUM(count) FROM (SELECT (((((((rt0.c0))==((t1.c12))))AND(-6.98776696E8))) IS TRUE)  as count FROM t1, rt1 NATURAL JOIN rt0);
SELECT ALL * FROM t1, rt1 NATURAL JOIN rt0 WHERE ((((((rt0.c0))==((t1.c12))))AND(-6.98776696E8)));
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((((rt1.c4)) NOT BETWEEN (('-1032324254')) AND ((8.74190807E8))))IS NOT(0.4808960734495502)) INNER JOIN t1 ON rt1.c5 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt1.c4)) NOT BETWEEN (('-1032324254')) AND ((8.74190807E8))))IS NOT(0.4808960734495502)) INNER JOIN t1 ON rt1.c5);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((((rt1.c4)) NOT BETWEEN (('-1032324254')) AND ((8.74190807E8))))IS NOT(0.4808960734495502)) INNER JOIN t1 ON rt1.c5 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (((((rt1.c4)) NOT BETWEEN (('-1032324254')) AND ((8.74190807E8))))IS NOT(0.4808960734495502)) INNER JOIN t1 ON rt1.c5);
SELECT COUNT(*) FROM rt1 INNER JOIN rt0 ON (((((rt1.c4)) NOT BETWEEN (('-1032324254')) AND ((8.74190807E8))))IS NOT(0.4808960734495502)) INNER JOIN t1 ON rt1.c5 WHERE (rt1.c4);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c5)))/(CASE rt0.c3  WHEN rt0.c1 THEN '' ELSE rt1.c6 END)) WHERE ((((((((((((rt0.c0, rt1.c5, rt1.c0, rt0.c1, '|jn[')) NOT BETWEEN ((rt1.c4, rt0.c2, rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c1, rt0.c1, rt0.c1, rt1.c0, rt1.c0))))AND(CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c3 END)))OR(rt0.c4 COLLATE RTRIM)))AND(((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c0)))))OR(((rt0.c4)==(rt1.c3))))) ORDER BY (((0.4451581640030007)>>(rt1.c4)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt1.c5, rt1.c0, rt0.c1, '|jn[')) NOT BETWEEN ((rt1.c4, rt0.c2, rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c1, rt0.c1, rt0.c1, rt1.c0, rt1.c0))))AND(CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c3 END)))OR(rt0.c4 COLLATE RTRIM)))AND(((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c0)))))OR(((rt0.c4)==(rt1.c3))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c5)))/(CASE rt0.c3  WHEN rt0.c1 THEN '' ELSE rt1.c6 END)) ORDER BY (((0.4451581640030007)>>(rt1.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c5)))/(CASE rt0.c3  WHEN rt0.c1 THEN '' ELSE rt1.c6 END)) WHERE ((((((((((((rt0.c0, rt1.c5, rt1.c0, rt0.c1, '|jn[')) NOT BETWEEN ((rt1.c4, rt0.c2, rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c1, rt0.c1, rt0.c1, rt1.c0, rt1.c0))))AND(CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c3 END)))OR(rt0.c4 COLLATE RTRIM)))AND(((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c0)))))OR(((rt0.c4)==(rt1.c3))))) ORDER BY (((0.4451581640030007)>>(rt1.c4)) IN ());
SELECT SUM(count) FROM (SELECT (((((((((((((rt0.c0, rt1.c5, rt1.c0, rt0.c1, '|jn[')) NOT BETWEEN ((rt1.c4, rt0.c2, rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c1, rt0.c1, rt0.c1, rt1.c0, rt1.c0))))AND(CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c3 END)))OR(rt0.c4 COLLATE RTRIM)))AND(((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c0)))))OR(((rt0.c4)==(rt1.c3))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c5)))/(CASE rt0.c3  WHEN rt0.c1 THEN '' ELSE rt1.c6 END)) ORDER BY (((0.4451581640030007)>>(rt1.c4)) IN ()));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((((rt1.c2)AND(rt0.c4)))OR(rt1.c5)))/(CASE rt0.c3  WHEN rt0.c1 THEN '' ELSE rt1.c6 END)) WHERE ((((((((((((rt0.c0, rt1.c5, rt1.c0, rt0.c1, '|jn[')) NOT BETWEEN ((rt1.c4, rt0.c2, rt1.c1, rt1.c4, rt1.c2)) AND ((rt1.c1, rt0.c1, rt0.c1, rt1.c0, rt1.c0))))AND(CASE WHEN rt0.c2 THEN rt1.c3 ELSE rt0.c3 END)))OR(rt0.c4 COLLATE RTRIM)))AND(((rt1.c0) BETWEEN (rt0.c3) AND (rt1.c0)))))OR(((rt0.c4)==(rt1.c3))))) ORDER BY (((0.4451581640030007)>>(rt1.c4)) IN ());
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((~ (SQLITE_COMPILEOPTION_USED(rt1.c5))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_USED(rt1.c5)))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((~ (SQLITE_COMPILEOPTION_USED(rt1.c5))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_USED(rt1.c5)))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ((~ (SQLITE_COMPILEOPTION_USED(rt1.c5))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (NULL) ORDER BY (((t1.c12 IN ()))/(((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((t1.c12 IN ()))/(((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))) DESC);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (NULL) ORDER BY (((t1.c12 IN ()))/(((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((t1.c12 IN ()))/(((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))) DESC);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (NULL) ORDER BY (((t1.c12 IN ()))/(((((rt0.c1)AND(rt0.c0)))AND(rt1.c1)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c4)=(rt0.c1)))))AND((x'' IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c4)=(rt0.c1)))))AND((x'' IN ()))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c4)=(rt0.c1)))))AND((x'' IN ())));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)OR(CAST(rt0.c1 AS REAL))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)))))AND(((rt0.c4)=(rt0.c1)))))AND((x'' IN ()))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CASE WHEN 0.024894403436255597 THEN (((rt1.c3, rt0.c3, rt1.c1))<((rt1.c3, t1.c12, rt1.c6))) WHEN CASE WHEN rt1.c5 THEN rt0.c3 ELSE rt0.c4 END THEN CAST(t1.c4 AS INTEGER) WHEN CAST(t1.c12 AS BLOB) THEN (((t1.c4))<=((rt0.c4))) END) ORDER BY (((t1.c4, rt1.c2, t1.c39)) BETWEEN (((x'' IN ()), CAST(rt0.c3 AS BLOB), rt1.c5 COLLATE NOCASE)) AND ((((rt0.c1)||(rt0.c4)), rt0.c2, (((x''))!=((t1.c12))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.024894403436255597 THEN (((rt1.c3, rt0.c3, rt1.c1))<((rt1.c3, t1.c12, rt1.c6))) WHEN CASE WHEN rt1.c5 THEN rt0.c3 ELSE rt0.c4 END THEN CAST(t1.c4 AS INTEGER) WHEN CAST(t1.c12 AS BLOB) THEN (((t1.c4))<=((rt0.c4))) END) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (((t1.c4, rt1.c2, t1.c39)) BETWEEN (((x'' IN ()), CAST(rt0.c3 AS BLOB), rt1.c5 COLLATE NOCASE)) AND ((((rt0.c1)||(rt0.c4)), rt0.c2, (((x''))<>((t1.c12))))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CASE WHEN 0.024894403436255597 THEN (((rt1.c3, rt0.c3, rt1.c1))<((rt1.c3, t1.c12, rt1.c6))) WHEN CASE WHEN rt1.c5 THEN rt0.c3 ELSE rt0.c4 END THEN CAST(t1.c4 AS INTEGER) WHEN CAST(t1.c12 AS BLOB) THEN (((t1.c4))<=((rt0.c4))) END) ORDER BY (((t1.c4, rt1.c2, t1.c39)) BETWEEN (((x'' IN ()), CAST(rt0.c3 AS BLOB), rt1.c5 COLLATE NOCASE)) AND ((((rt0.c1)||(rt0.c4)), rt0.c2, (((x''))!=((t1.c12))))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.024894403436255597 THEN (((rt1.c3, rt0.c3, rt1.c1))<((rt1.c3, t1.c12, rt1.c6))) WHEN CASE WHEN rt1.c5 THEN rt0.c3 ELSE rt0.c4 END THEN CAST(t1.c4 AS INTEGER) WHEN CAST(t1.c12 AS BLOB) THEN (((t1.c4))<=((rt0.c4))) END) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (((t1.c4, rt1.c2, t1.c39)) BETWEEN (((x'' IN ()), CAST(rt0.c3 AS BLOB), rt1.c5 COLLATE NOCASE)) AND ((((rt0.c1)||(rt0.c4)), rt0.c2, (((x''))<>((t1.c12))))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (CASE WHEN 0.024894403436255597 THEN (((rt1.c3, rt0.c3, rt1.c1))<((rt1.c3, t1.c12, rt1.c6))) WHEN CASE WHEN rt1.c5 THEN rt0.c3 ELSE rt0.c4 END THEN CAST(t1.c4 AS INTEGER) WHEN CAST(t1.c12 AS BLOB) THEN (((t1.c4))<=((rt0.c4))) END) ORDER BY (((t1.c4, rt1.c2, t1.c39)) BETWEEN (((x'' IN ()), CAST(rt0.c3 AS BLOB), rt1.c5 COLLATE NOCASE)) AND ((((rt0.c1)||(rt0.c4)), rt0.c2, (((x''))!=((t1.c12))))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((rt1.c3 COLLATE BINARY)AND('1758875614'))) ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c4 END THEN LOWER(rt0.c1) WHEN CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c2 END THEN CASE t1.c39  WHEN t1.c4 THEN rt1.c5 END WHEN CAST(t1.c39 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN CAST(rt1.c5 AS BLOB) THEN LOWER(DISTINCT rt1.c3) WHEN (NOT (rt0.c1)) THEN ((rt1.c4)||(rt1.c6)) ELSE CAST(rt0.c1 AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY)AND('1758875614'))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c4 END THEN LOWER(rt0.c1) WHEN CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c2 END THEN CASE t1.c39  WHEN t1.c4 THEN rt1.c5 END WHEN CAST(t1.c39 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN CAST(rt1.c5 AS BLOB) THEN LOWER(DISTINCT rt1.c3) WHEN (NOT (rt0.c1)) THEN ((rt1.c4)||(rt1.c6)) ELSE CAST(rt0.c1 AS NUMERIC) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((rt1.c3 COLLATE BINARY)AND('1758875614'))) ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c4 END THEN LOWER(rt0.c1) WHEN CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c2 END THEN CASE t1.c39  WHEN t1.c4 THEN rt1.c5 END WHEN CAST(t1.c39 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN CAST(rt1.c5 AS BLOB) THEN LOWER(DISTINCT rt1.c3) WHEN (NOT (rt0.c1)) THEN ((rt1.c4)||(rt1.c6)) ELSE CAST(rt0.c1 AS NUMERIC) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE BINARY)AND('1758875614'))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c4 END THEN LOWER(rt0.c1) WHEN CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c2 END THEN CASE t1.c39  WHEN t1.c4 THEN rt1.c5 END WHEN CAST(t1.c39 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN CAST(rt1.c5 AS BLOB) THEN LOWER(DISTINCT rt1.c3) WHEN (NOT (rt0.c1)) THEN ((rt1.c4)||(rt1.c6)) ELSE CAST(rt0.c1 AS NUMERIC) END  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((rt1.c3 COLLATE BINARY)AND('1758875614'))) ORDER BY CASE WHEN CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt0.c4 END THEN LOWER(rt0.c1) WHEN CASE rt1.c4  WHEN rt0.c0 THEN rt0.c1 ELSE t1.c2 END THEN CASE t1.c39  WHEN t1.c4 THEN rt1.c5 END WHEN CAST(t1.c39 AS REAL) THEN ((rt0.c2) IS TRUE) WHEN CAST(rt1.c5 AS BLOB) THEN LOWER(DISTINCT rt1.c3) WHEN (NOT (rt0.c1)) THEN ((rt1.c4)||(rt1.c6)) ELSE CAST(rt0.c1 AS NUMERIC) END  NULLS LAST;
SELECT * FROM t1 CROSS JOIN rt1 ON CASE t1.c12 COLLATE RTRIM  WHEN CASE t1.c2  WHEN rt1.c2 THEN t1.c4 ELSE x'' END THEN (((t1.c4)) BETWEEN ((-1460140261)) AND ((rt1.c3))) WHEN ((rt1.c4) NOTNULL) THEN ((rt1.c5) BETWEEN (rt1.c4) AND (t1.c39)) WHEN rt1.c2 COLLATE RTRIM THEN ((t1.c39)&(rt1.c4)) END WHERE (t1.c12 COLLATE BINARY COLLATE BINARY) ORDER BY (((((NOT (t1.c12)))AND(((((((((rt1.c4)OR(rt1.c4)))OR(t1.c4)))AND(t1.c2)))AND(t1.c2)))))OR(((rt1.c2) BETWEEN (t1.c4) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c12 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON CASE t1.c12 COLLATE RTRIM  WHEN CASE t1.c2  WHEN rt1.c2 THEN t1.c4 ELSE x'' END THEN (((t1.c4)) BETWEEN ((-1460140261)) AND ((rt1.c3))) WHEN ((rt1.c4) NOTNULL) THEN ((rt1.c5) BETWEEN (rt1.c4) AND (t1.c39)) WHEN rt1.c2 COLLATE RTRIM THEN ((t1.c39)&(rt1.c4)) END ORDER BY (((((NOT (t1.c12)))AND(((((((((rt1.c4)OR(rt1.c4)))OR(t1.c4)))AND(t1.c2)))AND(t1.c2)))))OR(((rt1.c2) BETWEEN (t1.c4) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM t1 CROSS JOIN rt1 ON CASE t1.c12 COLLATE RTRIM  WHEN CASE t1.c2  WHEN rt1.c2 THEN t1.c4 ELSE x'' END THEN (((t1.c4)) BETWEEN ((-1460140261)) AND ((rt1.c3))) WHEN ((rt1.c4) NOTNULL) THEN ((rt1.c5) BETWEEN (rt1.c4) AND (t1.c39)) WHEN rt1.c2 COLLATE RTRIM THEN ((t1.c39)&(rt1.c4)) END WHERE (t1.c12 COLLATE BINARY COLLATE BINARY) ORDER BY (((((NOT (t1.c12)))AND(((((((((rt1.c4)OR(rt1.c4)))OR(t1.c4)))AND(t1.c2)))AND(t1.c2)))))OR(((rt1.c2) BETWEEN (t1.c4) AND (rt1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c12 COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON CASE t1.c12 COLLATE RTRIM  WHEN CASE t1.c2  WHEN rt1.c2 THEN t1.c4 ELSE x'' END THEN (((t1.c4)) BETWEEN ((-1460140261)) AND ((rt1.c3))) WHEN ((rt1.c4) NOTNULL) THEN ((rt1.c5) BETWEEN (rt1.c4) AND (t1.c39)) WHEN rt1.c2 COLLATE RTRIM THEN ((t1.c39)&(rt1.c4)) END ORDER BY (((((NOT (t1.c12)))AND(((((((((rt1.c4)OR(rt1.c4)))OR(t1.c4)))AND(t1.c2)))AND(t1.c2)))))OR(((rt1.c2) BETWEEN (t1.c4) AND (rt1.c0))))  NULLS LAST);
SELECT * FROM t1 CROSS JOIN rt1 ON CASE t1.c12 COLLATE RTRIM  WHEN CASE t1.c2  WHEN rt1.c2 THEN t1.c4 ELSE x'' END THEN (((t1.c4)) BETWEEN ((-1460140261)) AND ((rt1.c3))) WHEN ((rt1.c4) NOTNULL) THEN ((rt1.c5) BETWEEN (rt1.c4) AND (t1.c39)) WHEN rt1.c2 COLLATE RTRIM THEN ((t1.c39)&(rt1.c4)) END WHERE (t1.c12 COLLATE BINARY COLLATE BINARY) ORDER BY (((((NOT (t1.c12)))AND(((((((((rt1.c4)OR(rt1.c4)))OR(t1.c4)))AND(t1.c2)))AND(t1.c2)))))OR(((rt1.c2) BETWEEN (t1.c4) AND (rt1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c12) BETWEEN (t1.c39) AND (t1.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c12) BETWEEN (t1.c39) AND (t1.c12))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c12) BETWEEN (t1.c39) AND (t1.c12)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((t1.c12) BETWEEN (t1.c39) AND (t1.c12))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ (((t1.c12) BETWEEN (t1.c39) AND (t1.c12)))));
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c39 THEN t1.c39 COLLATE BINARY END) ORDER BY ((t1.c4 COLLATE RTRIM)OR(t1.c4 COLLATE RTRIM))  NULLS LAST, 0.6535423141412453  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c39 THEN t1.c39 COLLATE BINARY END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c4 COLLATE RTRIM)OR(t1.c4 COLLATE RTRIM))  NULLS LAST, 0.6535423141412453  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c39 THEN t1.c39 COLLATE BINARY END) ORDER BY ((t1.c4 COLLATE RTRIM)OR(t1.c4 COLLATE RTRIM))  NULLS LAST, 0.6535423141412453  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c39 THEN t1.c39 COLLATE BINARY END) IS TRUE)  as count FROM t1 ORDER BY ((t1.c4 COLLATE RTRIM)OR(t1.c4 COLLATE RTRIM))  NULLS LAST, 0.6535423141412453  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE WHEN t1.c39 THEN t1.c39 COLLATE BINARY END) ORDER BY ((t1.c4 COLLATE RTRIM)OR(t1.c4 COLLATE RTRIM))  NULLS LAST, 0.6535423141412453  NULLS FIRST;
SELECT * FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2) NOT NULL) THEN (('-453908614') ISNULL) ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) NOT NULL) THEN (('-453908614') ISNULL) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2) NOT NULL) THEN (('-453908614') ISNULL) ELSE (NOT (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c2) NOT NULL) THEN (('-453908614') ISNULL) ELSE (NOT (rt0.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE WHEN ((rt1.c2) NOT NULL) THEN (('-453908614') ISNULL) ELSE (NOT (rt0.c0)) END);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c0 END AS REAL)) ORDER BY ((((rt1.c4)<('921838396')))LIKE(((rt1.c5)IS(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c4)<('921838396')))LIKE(((rt1.c5)IS(rt0.c4))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c0 END AS REAL)) ORDER BY ((((rt1.c4)<('921838396')))LIKE(((rt1.c5)IS(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c0 END AS REAL)) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt1.c4)<('921838396')))LIKE(((rt1.c5)IS(rt0.c4))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (CAST(CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c4 THEN rt0.c0 END AS REAL)) ORDER BY ((((rt1.c4)<('921838396')))LIKE(((rt1.c5)IS(rt0.c4))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c4 AS TEXT)) ISNULL)) ORDER BY x'174b'  NULLS LAST, CAST(((t1.c12)>>(t1.c12)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c4 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY x'174b'  NULLS LAST, CAST(((t1.c12)>>(t1.c12)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c4 AS TEXT)) ISNULL)) ORDER BY x'174b'  NULLS LAST, CAST(((t1.c12)>>(t1.c12)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c4 AS TEXT)) ISNULL)) IS TRUE)  as count FROM t1 ORDER BY x'174b'  NULLS LAST, CAST(((t1.c12)>>(t1.c12)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CAST(t1.c4 AS TEXT)) ISNULL)) ORDER BY x'174b'  NULLS LAST, CAST(((t1.c12)>>(t1.c12)) AS REAL)  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((((rt0.c4) ISNULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c2 IN (rt0.c4, rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c4) NOT NULL), (rt0.c2 IN (rt0.c2, rt0.c1)), json_type(rt0.c4)))<((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS REAL), (NOT (rt0.c2)), (((rt0.c1, rt0.c4, rt0.c0, rt0.c0, rt0.c2))<((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c1))), ((rt0.c2)IS(rt0.c0)), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4) ISNULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c2 IN (rt0.c4, rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c4) NOT NULL), (rt0.c2 IN (rt0.c2, rt0.c1)), json_type(rt0.c4)))<((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS REAL), (NOT (rt0.c2)), (((rt0.c1, rt0.c4, rt0.c0, rt0.c0, rt0.c2))<((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c1))), ((rt0.c2)IS(rt0.c0)), rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c4) ISNULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c2 IN (rt0.c4, rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c4) NOT NULL), (rt0.c2 IN (rt0.c2, rt0.c1)), json_type(rt0.c4)))<((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS REAL), (NOT (rt0.c2)), (((rt0.c1, rt0.c4, rt0.c0, rt0.c0, rt0.c2))<((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c1))), ((rt0.c2)IS(rt0.c0)), rt0.c2))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4) ISNULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c2 IN (rt0.c4, rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c4) NOT NULL), (rt0.c2 IN (rt0.c2, rt0.c1)), json_type(rt0.c4)))<((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS REAL), (NOT (rt0.c2)), (((rt0.c1, rt0.c4, rt0.c0, rt0.c0, rt0.c2))<((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c1))), ((rt0.c2)IS(rt0.c0)), rt0.c2)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c4) ISNULL), CASE WHEN rt0.c1 THEN rt0.c0 END, (rt0.c2 IN (rt0.c4, rt0.c4)), CASE WHEN rt0.c4 THEN rt0.c1 END, ((rt0.c4) NOT NULL), (rt0.c2 IN (rt0.c2, rt0.c1)), json_type(rt0.c4)))<((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS REAL), (NOT (rt0.c2)), (((rt0.c1, rt0.c4, rt0.c0, rt0.c0, rt0.c2))<((rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c1))), ((rt0.c2)IS(rt0.c0)), rt0.c2))));
SELECT * FROM rt0 FULL OUTER JOIN t1 ON x'f3fc' COLLATE BINARY CROSS JOIN rt1 ON '-596519737' WHERE (LIKE(x'', ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LIKE(x'', ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON x'f3fc' COLLATE BINARY CROSS JOIN rt1 ON '-596519737');
SELECT * FROM rt0 FULL OUTER JOIN t1 ON x'f3fc' COLLATE BINARY CROSS JOIN rt1 ON '-596519737' WHERE (LIKE(x'', ((rt1.c1) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((LIKE(x'', ((rt1.c1) IS TRUE))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON x'f3fc' COLLATE BINARY CROSS JOIN rt1 ON '-596519737');
SELECT * FROM rt0 FULL OUTER JOIN t1 ON x'f3fc' COLLATE BINARY CROSS JOIN rt1 ON '-596519737' WHERE (LIKE(x'', ((rt1.c1) IS TRUE)));
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt1 ON (((((rt0.c1)OR(rt1.c0)))AND(rt1.c6)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt1.c5)<<(rt1.c5)))))OR(t1.c39)) WHERE (-212911673) ORDER BY ((~ (rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-212911673) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON (((((rt0.c1)OR(rt1.c0)))AND(rt1.c6)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt1.c5)<<(rt1.c5)))))OR(t1.c39)) ORDER BY ((~ (rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt1 ON (((((rt0.c1)OR(rt1.c0)))AND(rt1.c6)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt1.c5)<<(rt1.c5)))))OR(t1.c39)) WHERE (-212911673) ORDER BY ((~ (rt1.c1)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((-212911673) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt1 ON (((((rt0.c1)OR(rt1.c0)))AND(rt1.c6)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt1.c5)<<(rt1.c5)))))OR(t1.c39)) ORDER BY ((~ (rt1.c1)) IN ()) DESC);
SELECT COUNT(*) FROM t1 LEFT OUTER JOIN rt1 ON (((((rt0.c1)OR(rt1.c0)))AND(rt1.c6)) IN ()) RIGHT OUTER JOIN rt0 ON ((((rt0.c0)AND(((rt1.c5)<<(rt1.c5)))))OR(t1.c39)) WHERE (-212911673) ORDER BY ((~ (rt1.c1)) IN ()) DESC;
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt0.c1) NOTNULL)) IS FALSE)) ORDER BY NULL COLLATE RTRIM DESC  NULLS FIRST, MAX(x'', 'W&') DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY NULL COLLATE RTRIM DESC  NULLS FIRST, MAX(x'', 'W&') DESC);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt0.c1) NOTNULL)) IS FALSE)) ORDER BY NULL COLLATE RTRIM DESC  NULLS FIRST, MAX(x'', 'W&') DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY NULL COLLATE RTRIM DESC  NULLS FIRST, MAX(x'', 'W&') DESC);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((rt0.c1) NOTNULL)) IS FALSE)) ORDER BY NULL COLLATE RTRIM DESC  NULLS FIRST, MAX(x'', 'W&') DESC;
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(rt0.c3)))<((((rt0.c4))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c3)))<((((rt0.c4))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(rt0.c3)))<((((rt0.c4))<>((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)||(rt0.c3)))<((((rt0.c4))!=((rt0.c2)))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1)||(rt0.c3)))<((((rt0.c4))<>((rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c0 END)>=((NOT (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c0 END)>=((NOT (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c0 END)>=((NOT (rt1.c4)))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c0 END)>=((NOT (rt1.c4))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c0 END)>=((NOT (rt1.c4)))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (rt0.c3);
SELECT ALL * FROM t1 WHERE ((((t1.c39) BETWEEN (t1.c4) AND (t1.c2)) IN ((('')>(t1.c39))))) ORDER BY CASE WHEN ((t1.c12)+(t1.c2)) THEN (~ (t1.c12)) END;
SELECT SUM(count) FROM (SELECT (((((t1.c39) BETWEEN (t1.c4) AND (t1.c2)) IN ((('')>(t1.c39))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c12)+(t1.c2)) THEN (~ (t1.c12)) END);
SELECT ALL * FROM t1 WHERE ((((t1.c39) BETWEEN (t1.c4) AND (t1.c2)) IN ((('')>(t1.c39))))) ORDER BY CASE WHEN ((t1.c12)+(t1.c2)) THEN (~ (t1.c12)) END;
SELECT SUM(count) FROM (SELECT (((((t1.c39) BETWEEN (t1.c4) AND (t1.c2)) IN ((('')>(t1.c39))))) IS TRUE)  as count FROM t1 ORDER BY CASE WHEN ((t1.c12)+(t1.c2)) THEN (~ (t1.c12)) END);
SELECT ALL * FROM t1 WHERE ((((t1.c39) BETWEEN (t1.c4) AND (t1.c2)) IN ((('')>(t1.c39))))) ORDER BY CASE WHEN ((t1.c12)+(t1.c2)) THEN (~ (t1.c12)) END;
SELECT * FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS INTEGER), 0.10272137328472952)) ORDER BY ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c5)))%(CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 WHEN rt0.c4 THEN rt1.c6 WHEN rt1.c6 THEN 1.7976931348623157E308 ELSE rt0.c2 END)) ASC  NULLS FIRST, ((((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)))%(((NULL)<<(rt1.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt0.c0 AS INTEGER), 0.10272137328472952)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c5)))%(CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 WHEN rt0.c4 THEN rt1.c6 WHEN rt1.c6 THEN 1.7976931348623157E308 ELSE rt0.c2 END)) ASC  NULLS FIRST, ((((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)))%(((NULL)<<(rt1.c5)))) DESC);
SELECT * FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS INTEGER), 0.10272137328472952)) ORDER BY ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c5)))%(CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 WHEN rt0.c4 THEN rt1.c6 WHEN rt1.c6 THEN 1.7976931348623157E308 ELSE rt0.c2 END)) ASC  NULLS FIRST, ((((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)))%(((NULL)<<(rt1.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CAST(rt0.c0 AS INTEGER), 0.10272137328472952)) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c5)))%(CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 WHEN rt0.c4 THEN rt1.c6 WHEN rt1.c6 THEN 1.7976931348623157E308 ELSE rt0.c2 END)) ASC  NULLS FIRST, ((((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)))%(((NULL)<<(rt1.c5)))) DESC);
SELECT * FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT CAST(rt0.c0 AS INTEGER), 0.10272137328472952)) ORDER BY ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c5)))%(CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c6 WHEN rt0.c4 THEN rt1.c6 WHEN rt1.c6 THEN 1.7976931348623157E308 ELSE rt0.c2 END)) ASC  NULLS FIRST, ((((((rt1.c0)AND(rt1.c5)))AND(rt1.c4)))%(((NULL)<<(rt1.c5)))) DESC;
SELECT COUNT(*) FROM rt0, t1 WHERE ((((+ (0.4805992862788494))) NOT BETWEEN (CAST(t1.c39 AS BLOB)) AND ((t1.c2 IN ())))) ORDER BY (((t1.c2)) BETWEEN ((t1.c4 COLLATE NOCASE)) AND ((((t1.c39) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.4805992862788494))) NOT BETWEEN (CAST(t1.c39 AS BLOB)) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((t1.c2)) BETWEEN ((t1.c4 COLLATE NOCASE)) AND ((((t1.c39) NOT NULL)))) ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((+ (0.4805992862788494))) NOT BETWEEN (CAST(t1.c39 AS BLOB)) AND ((t1.c2 IN ())))) ORDER BY (((t1.c2)) BETWEEN ((t1.c4 COLLATE NOCASE)) AND ((((t1.c39) NOT NULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((+ (0.4805992862788494))) NOT BETWEEN (CAST(t1.c39 AS BLOB)) AND ((t1.c2 IN ())))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((t1.c2)) BETWEEN ((t1.c4 COLLATE NOCASE)) AND ((((t1.c39) NOT NULL)))) ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE ((((+ (0.4805992862788494))) NOT BETWEEN (CAST(t1.c39 AS BLOB)) AND ((t1.c2 IN ())))) ORDER BY (((t1.c2)) BETWEEN ((t1.c4 COLLATE NOCASE)) AND ((((t1.c39) NOT NULL)))) ASC;
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON (((NULL)) NOT BETWEEN ((((rt1.c1)AND('BGW.n')))) AND ((CASE WHEN rt1.c3 THEN rt1.c0 END))) WHERE ((NOT ((rt1.c2 IN (t1.c2))))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c6 THEN t1.c4 ELSE rt1.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c2 IN (t1.c2))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON (((NULL)) NOT BETWEEN ((((rt1.c1)AND('BGW.n')))) AND ((CASE WHEN rt1.c3 THEN rt1.c0 END))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c6 THEN t1.c4 ELSE rt1.c4 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON (((NULL)) NOT BETWEEN ((((rt1.c1)AND('BGW.n')))) AND ((CASE WHEN rt1.c3 THEN rt1.c0 END))) WHERE ((NOT ((rt1.c2 IN (t1.c2))))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c6 THEN t1.c4 ELSE rt1.c4 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c2 IN (t1.c2))))) IS TRUE)  as count FROM rt0, t1 CROSS JOIN rt1 ON (((NULL)) NOT BETWEEN ((((rt1.c1)AND('BGW.n')))) AND ((CASE WHEN rt1.c3 THEN rt1.c0 END))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c6 THEN t1.c4 ELSE rt1.c4 END))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, t1 CROSS JOIN rt1 ON (((NULL)) NOT BETWEEN ((((rt1.c1)AND('BGW.n')))) AND ((CASE WHEN rt1.c3 THEN rt1.c0 END))) WHERE ((NOT ((rt1.c2 IN (t1.c2))))) ORDER BY (+ (CASE rt1.c0  WHEN rt1.c6 THEN t1.c4 ELSE rt1.c4 END))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c2);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c2)<(((t1.c39) BETWEEN (rt1.c0) AND (t1.c12)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<(((t1.c39) BETWEEN (rt1.c0) AND (t1.c12))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c2)<(((t1.c39) BETWEEN (rt1.c0) AND (t1.c12)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)<(((t1.c39) BETWEEN (rt1.c0) AND (t1.c12))))) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((rt1.c2)<(((t1.c39) BETWEEN (rt1.c0) AND (t1.c12)))));
SELECT ALL * FROM rt1, rt0, t1 WHERE (((CASE WHEN rt0.c4 THEN t1.c2 ELSE '' END)&(CASE rt0.c0  WHEN rt0.c0 THEN t1.c4 WHEN t1.c39 THEN t1.c12 WHEN rt1.c1 THEN rt1.c6 END))) ORDER BY (((((rt1.c6))>((rt1.c1))))<=(LOWER(t1.c12))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN t1.c2 ELSE '' END)&(CASE rt0.c0  WHEN rt0.c0 THEN t1.c4 WHEN t1.c39 THEN t1.c12 WHEN rt1.c1 THEN rt1.c6 END))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((((rt1.c6))>((rt1.c1))))<=(LOWER(t1.c12))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((CASE WHEN rt0.c4 THEN t1.c2 ELSE '' END)&(CASE rt0.c0  WHEN rt0.c0 THEN t1.c4 WHEN t1.c39 THEN t1.c12 WHEN rt1.c1 THEN rt1.c6 END))) ORDER BY (((((rt1.c6))>((rt1.c1))))<=(LOWER(t1.c12))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c4 THEN t1.c2 ELSE '' END)&(CASE rt0.c0  WHEN rt0.c0 THEN t1.c4 WHEN t1.c39 THEN t1.c12 WHEN rt1.c1 THEN rt1.c6 END))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((((rt1.c6))>((rt1.c1))))<=(LOWER(t1.c12))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((CASE WHEN rt0.c4 THEN t1.c2 ELSE '' END)&(CASE rt0.c0  WHEN rt0.c0 THEN t1.c4 WHEN t1.c39 THEN t1.c12 WHEN rt1.c1 THEN rt1.c6 END))) ORDER BY (((((rt1.c6))>((rt1.c1))))<=(LOWER(t1.c12))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, rt1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((NULL) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((NULL) NOT NULL)) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL * FROM rt0, rt1 WHERE (((NULL) NOT NULL));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE WHEN ((t1.c12) ISNULL) THEN ((t1.c39)>>(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c12) ISNULL) THEN ((t1.c39)>>(rt1.c4)) END) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE WHEN ((t1.c12) ISNULL) THEN ((t1.c39)>>(rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t1.c12) ISNULL) THEN ((t1.c39)>>(rt1.c4)) END) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (CASE WHEN ((t1.c12) ISNULL) THEN ((t1.c39)>>(rt1.c4)) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((((2.12008849E9))<((t1.c12 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((2.12008849E9))<((t1.c12 COLLATE NOCASE)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((2.12008849E9))<((t1.c12 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT ALL (((((2.12008849E9))<((t1.c12 COLLATE NOCASE)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((2.12008849E9))<((t1.c12 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c3)) BETWEEN ((rt0.c1)) AND ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) WHERE (CASE WHEN CASE WHEN x'0bb8fb4f7d74' THEN rt1.c2 WHEN -4.8664963E7 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c3 END THEN (rt1.c2 IN (rt1.c5)) ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN x'0bb8fb4f7d74' THEN rt1.c2 WHEN -4.8664963E7 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c3 END THEN (rt1.c2 IN (rt1.c5)) ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt1.c3)) BETWEEN ((rt0.c1)) AND ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c3)) BETWEEN ((rt0.c1)) AND ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) WHERE (CASE WHEN CASE WHEN x'0bb8fb4f7d74' THEN rt1.c2 WHEN -4.8664963E7 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c3 END THEN (rt1.c2 IN (rt1.c5)) ELSE rt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN x'0bb8fb4f7d74' THEN rt1.c2 WHEN -4.8664963E7 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c3 END THEN (rt1.c2 IN (rt1.c5)) ELSE rt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (((rt1.c3)) BETWEEN ((rt0.c1)) AND ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (((rt1.c3)) BETWEEN ((rt0.c1)) AND ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c2))))) WHERE (CASE WHEN CASE WHEN x'0bb8fb4f7d74' THEN rt1.c2 WHEN -4.8664963E7 THEN rt0.c0 WHEN rt1.c2 THEN rt1.c3 ELSE rt0.c3 END THEN (rt1.c2 IN (rt1.c5)) ELSE rt0.c0 COLLATE NOCASE END);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt0.c4 COLLATE BINARY) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))) AND (rt1.c4)) WHERE (TRIM(DISTINCT rt1.c1 COLLATE RTRIM)) ORDER BY QUOTE(PRINTF(t1.c4)), (~ (rt1.c6)) COLLATE RTRIM DESC, TRIM(((t1.c12)>(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt0.c4 COLLATE BINARY) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))) AND (rt1.c4)) ORDER BY QUOTE(PRINTF(t1.c4)), (~ (rt1.c6)) COLLATE RTRIM DESC, TRIM(((t1.c12)>(rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt0.c4 COLLATE BINARY) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))) AND (rt1.c4)) WHERE (TRIM(DISTINCT rt1.c1 COLLATE RTRIM)) ORDER BY QUOTE(PRINTF(t1.c4)), (~ (rt1.c6)) COLLATE RTRIM DESC, TRIM(((t1.c12)>(rt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT rt1.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt0.c4 COLLATE BINARY) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))) AND (rt1.c4)) ORDER BY QUOTE(PRINTF(t1.c4)), (~ (rt1.c6)) COLLATE RTRIM DESC, TRIM(((t1.c12)>(rt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt0.c4 COLLATE BINARY) BETWEEN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c3))) AND (rt1.c4)) WHERE (TRIM(DISTINCT rt1.c1 COLLATE RTRIM)) ORDER BY QUOTE(PRINTF(t1.c4)), (~ (rt1.c6)) COLLATE RTRIM DESC, TRIM(((t1.c12)>(rt0.c1))) ASC  NULLS LAST;
SELECT * FROM rt0, rt1 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN ((x'') BETWEEN (rt0.c1) AND (rt1.c1)) THEN CAST(x'e8f5' AS REAL) ELSE ((rt0.c0)<<(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS REAL)  WHEN ((x'') BETWEEN (rt0.c1) AND (rt1.c1)) THEN CAST(x'e8f5' AS REAL) ELSE ((rt0.c0)<<(rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN ((x'') BETWEEN (rt0.c1) AND (rt1.c1)) THEN CAST(x'e8f5' AS REAL) ELSE ((rt0.c0)<<(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c2 AS REAL)  WHEN ((x'') BETWEEN (rt0.c1) AND (rt1.c1)) THEN CAST(x'e8f5' AS REAL) ELSE ((rt0.c0)<<(rt1.c0)) END) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE (CASE CAST(rt0.c2 AS REAL)  WHEN ((x'') BETWEEN (rt0.c1) AND (rt1.c1)) THEN CAST(x'e8f5' AS REAL) ELSE ((rt0.c0)<<(rt1.c0)) END);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((((rt1.c6)+('pL喆9J'))) IS TRUE) INNER JOIN rt1 ON ((((('-1161553745') NOTNULL), ((((((((rt1.c4)OR(rt1.c1)))OR(t1.c2)))OR(rt0.c1)))OR(rt0.c4)), (((rt1.c0))<=((rt0.c2)))))>(((t1.c12 IN ()), (rt1.c1 IN ()), CAST(rt1.c3 AS NUMERIC)))) WHERE (((rt0.c4 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((((rt1.c6)+('pL喆9J'))) IS TRUE) INNER JOIN rt1 ON ((((('-1161553745') NOTNULL), ((((((((rt1.c4)OR(rt1.c1)))OR(t1.c2)))OR(rt0.c1)))OR(rt0.c4)), (((rt1.c0))<=((rt0.c2)))))>(((t1.c12 IN ()), (rt1.c1 IN ()), CAST(rt1.c3 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN rt0 ON ((((rt1.c6)+('pL喆9J'))) IS TRUE) INNER JOIN rt1 ON ((((('-1161553745') NOTNULL), ((((((((rt1.c4)OR(rt1.c1)))OR(t1.c2)))OR(rt0.c1)))OR(rt0.c4)), (((rt1.c0))<=((rt0.c2)))))>(((t1.c12 IN ()), (rt1.c1 IN ()), CAST(rt1.c3 AS NUMERIC)))) WHERE (((rt0.c4 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c4 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON ((((rt1.c6)+('pL喆9J'))) IS TRUE) INNER JOIN rt1 ON ((((('-1161553745') NOTNULL), ((((((((rt1.c4)OR(rt1.c1)))OR(t1.c2)))OR(rt0.c1)))OR(rt0.c4)), (((rt1.c0))<=((rt0.c2)))))>(((t1.c12 IN ()), (rt1.c1 IN ()), CAST(rt1.c3 AS NUMERIC)))));
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (NULL IN (rt1.c6, ((rt1.c3) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (NULL IN (rt1.c6, ((rt1.c3) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (NULL IN (rt1.c6, ((rt1.c3) IS TRUE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (NULL IN (rt1.c6, ((rt1.c3) IS TRUE))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (NULL) ORDER BY (NULL IN (rt1.c6, ((rt1.c3) IS TRUE))) ASC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c6 AS TEXT) AS INTEGER)) ORDER BY (((rt1.c4 IN ()))||(rt1.c4)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c6 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4 IN ()))||(rt1.c4)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c6 AS TEXT) AS INTEGER)) ORDER BY (((rt1.c4 IN ()))||(rt1.c4)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c6 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4 IN ()))||(rt1.c4)) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (CAST(CAST(rt1.c6 AS TEXT) AS INTEGER)) ORDER BY (((rt1.c4 IN ()))||(rt1.c4)) DESC  NULLS LAST;
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c4)=(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)=(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c4)=(rt0.c2))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)=(rt0.c2))) NOTNULL)) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((rt0.c4)=(rt0.c2))) NOTNULL));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(rt1.c3)))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c2 END))) ORDER BY rt1.c2, (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c0, rt0.c2))OR(rt1.c3)))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2, (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(rt1.c3)))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c2 END))) ORDER BY rt1.c2, (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((TRIM(rt0.c0, rt0.c2))OR(rt1.c3)))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c2 END))) IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c2, (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((TRIM(rt0.c0, rt0.c2))OR(rt1.c3)))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt1.c2 END))) ORDER BY rt1.c2, (((rt1.c1 IN ())) IS FALSE) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON ((((((((SUBSTR(t1.c12, rt1.c2))AND(((t1.c39) NOT BETWEEN (t1.c2) AND (NULL)))))OR(((rt1.c6)AND(rt1.c6)))))OR(CASE WHEN rt1.c4 THEN t1.c12 END)))OR(((t1.c2) BETWEEN (t1.c4) AND (t1.c4)))) WHERE (json_type(((rt1.c6)-(t1.c12))));
SELECT SUM(count) FROM (SELECT ((json_type(((rt1.c6)-(t1.c12)))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON ((((((((SUBSTR(t1.c12, rt1.c2))AND(((t1.c39) NOT BETWEEN (t1.c2) AND (NULL)))))OR(((rt1.c6)AND(rt1.c6)))))OR(CASE WHEN rt1.c4 THEN t1.c12 END)))OR(((t1.c2) BETWEEN (t1.c4) AND (t1.c4)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON ((((((((SUBSTR(t1.c12, rt1.c2))AND(((t1.c39) NOT BETWEEN (t1.c2) AND (NULL)))))OR(((rt1.c6)AND(rt1.c6)))))OR(CASE WHEN rt1.c4 THEN t1.c12 END)))OR(((t1.c2) BETWEEN (t1.c4) AND (t1.c4)))) WHERE (json_type(((rt1.c6)-(t1.c12))));
SELECT SUM(count) FROM (SELECT ((json_type(((rt1.c6)-(t1.c12)))) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON ((((((((SUBSTR(t1.c12, rt1.c2))AND(((t1.c39) NOT BETWEEN (t1.c2) AND (NULL)))))OR(((rt1.c6)AND(rt1.c6)))))OR(CASE WHEN rt1.c4 THEN t1.c12 END)))OR(((t1.c2) BETWEEN (t1.c4) AND (t1.c4)))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON ((((((((SUBSTR(t1.c12, rt1.c2))AND(((t1.c39) NOT BETWEEN (t1.c2) AND (NULL)))))OR(((rt1.c6)AND(rt1.c6)))))OR(CASE WHEN rt1.c4 THEN t1.c12 END)))OR(((t1.c2) BETWEEN (t1.c4) AND (t1.c4)))) WHERE (json_type(((rt1.c6)-(t1.c12))));
SELECT * FROM rt1, t1, rt0 WHERE (((rt1.c3) NOT BETWEEN (-698776696) AND (rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (-698776696) AND (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (((rt1.c3) NOT BETWEEN (-698776696) AND (rt0.c4)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((rt1.c3) NOT BETWEEN (-698776696) AND (rt0.c4)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (((rt1.c3) NOT BETWEEN (-698776696) AND (rt0.c4)) COLLATE RTRIM);
SELECT * FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((NULL IN ()) IN ()) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((NULL IN ()) IN ()));
SELECT * FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((NULL IN ()) IN ()) WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((NULL IN ()) IN ()));
SELECT * FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((NULL IN ()) IN ()) WHERE (rt0.c3);
SELECT ALL * FROM t1 WHERE ((IFNULL(DISTINCT t1.c4, t1.c39) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT t1.c4, t1.c39) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((IFNULL(DISTINCT t1.c4, t1.c39) IN ()));
SELECT SUM(count) FROM (SELECT (((IFNULL(DISTINCT t1.c4, t1.c39) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((IFNULL(DISTINCT t1.c4, t1.c39) IN ()));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((t1.c4) NOT BETWEEN (((t1.c39)<<(t1.c12))) AND (((rt0.c4)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c4) NOT BETWEEN (((t1.c39)<<(t1.c12))) AND (((rt0.c4)<<(rt0.c3))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((t1.c4) NOT BETWEEN (((t1.c39)<<(t1.c12))) AND (((rt0.c4)<<(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c4) NOT BETWEEN (((t1.c39)<<(t1.c12))) AND (((rt0.c4)<<(rt0.c3))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((t1.c4) NOT BETWEEN (((t1.c39)<<(t1.c12))) AND (((rt0.c4)<<(rt0.c3)))));
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2 IN ())) IS TRUE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((rt0.c2 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY) IS TRUE) WHERE ((((((((rt1.c1, rt0.c0, rt1.c1)) BETWEEN ((rt1.c3, t1.c12, t1.c4)) AND ((rt1.c0, t1.c12, rt0.c3))))OR(rt0.c2)))AND(((rt1.c5)/(t1.c39))))) ORDER BY TYPEOF(DISTINCT (rt0.c3 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1, rt0.c0, rt1.c1)) BETWEEN ((rt1.c3, t1.c12, t1.c4)) AND ((rt1.c0, t1.c12, rt0.c3))))OR(rt0.c2)))AND(((rt1.c5)/(t1.c39))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY) IS TRUE) ORDER BY TYPEOF(DISTINCT (rt0.c3 IN ())) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY) IS TRUE) WHERE ((((((((rt1.c1, rt0.c0, rt1.c1)) BETWEEN ((rt1.c3, t1.c12, t1.c4)) AND ((rt1.c0, t1.c12, rt0.c3))))OR(rt0.c2)))AND(((rt1.c5)/(t1.c39))))) ORDER BY TYPEOF(DISTINCT (rt0.c3 IN ())) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c1, rt0.c0, rt1.c1)) BETWEEN ((rt1.c3, t1.c12, t1.c4)) AND ((rt1.c0, t1.c12, rt0.c3))))OR(rt0.c2)))AND(((rt1.c5)/(t1.c39))))) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY) IS TRUE) ORDER BY TYPEOF(DISTINCT (rt0.c3 IN ())) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON ((rt1.c1 COLLATE BINARY) IS TRUE) WHERE ((((((((rt1.c1, rt0.c0, rt1.c1)) BETWEEN ((rt1.c3, t1.c12, t1.c4)) AND ((rt1.c0, t1.c12, rt0.c3))))OR(rt0.c2)))AND(((rt1.c5)/(t1.c39))))) ORDER BY TYPEOF(DISTINCT (rt0.c3 IN ())) DESC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((((+ (x'')))AND(t1.c39 COLLATE NOCASE)))OR(CASE WHEN t1.c2 THEN t1.c39 WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN 0.7912662782965345 ELSE t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (x'')))AND(t1.c39 COLLATE NOCASE)))OR(CASE WHEN t1.c2 THEN t1.c39 WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN 0.7912662782965345 ELSE t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((+ (x'')))AND(t1.c39 COLLATE NOCASE)))OR(CASE WHEN t1.c2 THEN t1.c39 WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN 0.7912662782965345 ELSE t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL (((((((+ (x'')))AND(t1.c39 COLLATE NOCASE)))OR(CASE WHEN t1.c2 THEN t1.c39 WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN 0.7912662782965345 ELSE t1.c2 END))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((+ (x'')))AND(t1.c39 COLLATE NOCASE)))OR(CASE WHEN t1.c2 THEN t1.c39 WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN 0.7912662782965345 ELSE t1.c2 END)));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c4)<<((((rt0.c3))>=((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4)<<((((rt0.c3))>=((rt0.c4))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c4)<<((((rt0.c3))>=((rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c4)<<((((rt0.c3))>=((rt0.c4))))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c4)<<((((rt0.c3))>=((rt0.c4)))));
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)/((t1.c39 IN (t1.c39, t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c2  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)/((t1.c39 IN (t1.c39, t1.c4))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)/((t1.c39 IN (t1.c39, t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c2  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)/((t1.c39 IN (t1.c39, t1.c4))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((CASE t1.c2  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)/((t1.c39 IN (t1.c39, t1.c4)))));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON TRIM(((((rt1.c2)AND(t1.c2)))OR(rt1.c0)), t1.c12 COLLATE NOCASE) FULL OUTER JOIN rt1 ON (rt0.c1 IN ()) WHERE (((((rt1.c0)!=(t1.c39))) IS TRUE)) ORDER BY (((((t1.c4))=((t1.c4)))) IS FALSE), ((((((rt1.c1)AND(rt0.c1)))AND(t1.c39))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt1.c2)|(t1.c39))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(t1.c39))) IS TRUE)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON TRIM(((((rt1.c2)AND(t1.c2)))OR(rt1.c0)), t1.c12 COLLATE NOCASE) FULL OUTER JOIN rt1 ON (rt0.c1 IN ()) ORDER BY (((((t1.c4))=((t1.c4)))) IS FALSE), ((((((rt1.c1)AND(rt0.c1)))AND(t1.c39))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt1.c2)|(t1.c39)))));
SELECT ALL * FROM t1 CROSS JOIN rt0 ON TRIM(((((rt1.c2)AND(t1.c2)))OR(rt1.c0)), t1.c12 COLLATE NOCASE) FULL OUTER JOIN rt1 ON (rt0.c1 IN ()) WHERE (((((rt1.c0)!=(t1.c39))) IS TRUE)) ORDER BY (((((t1.c4))=((t1.c4)))) IS FALSE), ((((((rt1.c1)AND(rt0.c1)))AND(t1.c39))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt1.c2)|(t1.c39))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<>(t1.c39))) IS TRUE)) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON TRIM(((((rt1.c2)AND(t1.c2)))OR(rt1.c0)), t1.c12 COLLATE NOCASE) FULL OUTER JOIN rt1 ON (rt0.c1 IN ()) ORDER BY (((((t1.c4))=((t1.c4)))) IS FALSE), ((((((rt1.c1)AND(rt0.c1)))AND(t1.c39))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (((rt1.c2)|(t1.c39)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c3))) ORDER BY 0.32222176743678943 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY 0.32222176743678943 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c3))) ORDER BY 0.32222176743678943 ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY 0.32222176743678943 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (rt0.c3))) ORDER BY 0.32222176743678943 ASC;
SELECT ALL * FROM rt1 WHERE (CASE WHEN UNLIKELY(DISTINCT rt1.c4) THEN ((rt1.c0) IS FALSE) ELSE ((rt1.c6)IS NOT(rt1.c4)) END) ORDER BY CASE CAST(rt1.c0 AS BLOB)  WHEN rt1.c6 COLLATE BINARY THEN ((((((((((((x'')OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)) WHEN ((rt1.c4)*(rt1.c4)) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c5 IN (rt1.c5)) THEN CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END ELSE (~ (rt1.c5)) END DESC, ((rt1.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(DISTINCT rt1.c4) THEN ((rt1.c0) IS FALSE) ELSE ((rt1.c6)IS NOT(rt1.c4)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c0 AS BLOB)  WHEN rt1.c6 COLLATE BINARY THEN ((((((((((((x'')OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)) WHEN ((rt1.c4)*(rt1.c4)) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c5 IN (rt1.c5)) THEN CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END ELSE (~ (rt1.c5)) END DESC, ((rt1.c1 IN ()) IN ()));
SELECT ALL * FROM rt1 WHERE (CASE WHEN UNLIKELY(DISTINCT rt1.c4) THEN ((rt1.c0) IS FALSE) ELSE ((rt1.c6)IS NOT(rt1.c4)) END) ORDER BY CASE CAST(rt1.c0 AS BLOB)  WHEN rt1.c6 COLLATE BINARY THEN ((((((((((((x'')OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)) WHEN ((rt1.c4)*(rt1.c4)) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c5 IN (rt1.c5)) THEN CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END ELSE (~ (rt1.c5)) END DESC, ((rt1.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CASE WHEN UNLIKELY(DISTINCT rt1.c4) THEN ((rt1.c0) IS FALSE) ELSE ((rt1.c6)IS NOT(rt1.c4)) END) IS TRUE)  as count FROM rt1 ORDER BY CASE CAST(rt1.c0 AS BLOB)  WHEN rt1.c6 COLLATE BINARY THEN ((((((((((((x'')OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)) WHEN ((rt1.c4)*(rt1.c4)) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c5 IN (rt1.c5)) THEN CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END ELSE (~ (rt1.c5)) END DESC, ((rt1.c1 IN ()) IN ()));
SELECT ALL * FROM rt1 WHERE (CASE WHEN UNLIKELY(DISTINCT rt1.c4) THEN ((rt1.c0) IS FALSE) ELSE ((rt1.c6)IS NOT(rt1.c4)) END) ORDER BY CASE CAST(rt1.c0 AS BLOB)  WHEN rt1.c6 COLLATE BINARY THEN ((((((((((((x'')OR(rt1.c3)))OR(rt1.c6)))OR(rt1.c6)))OR(rt1.c4)))OR(rt1.c1)))OR(rt1.c5)) WHEN ((rt1.c4)*(rt1.c4)) THEN ((rt1.c1) IS FALSE) WHEN (rt1.c5 IN (rt1.c5)) THEN CASE rt1.c6  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END ELSE (~ (rt1.c5)) END DESC, ((rt1.c1 IN ()) IN ());
SELECT ALL * FROM rt1, t1, rt0 WHERE (NULL) ORDER BY ((((((((CAST(x'' AS TEXT))AND(((t1.c4) IS TRUE))))AND(((t1.c4) BETWEEN (t1.c39) AND (rt1.c6)))))OR(((t1.c12) IS FALSE))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((((CAST(x'' AS TEXT))AND(((t1.c4) IS TRUE))))AND(((t1.c4) BETWEEN (t1.c39) AND (rt1.c6)))))OR(((t1.c12) IS FALSE))))OR(x''))  NULLS FIRST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (NULL) ORDER BY ((((((((CAST(x'' AS TEXT))AND(((t1.c4) IS TRUE))))AND(((t1.c4) BETWEEN (t1.c39) AND (rt1.c6)))))OR(((t1.c12) IS FALSE))))OR(x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((((CAST(x'' AS TEXT))AND(((t1.c4) IS TRUE))))AND(((t1.c4) BETWEEN (t1.c39) AND (rt1.c6)))))OR(((t1.c12) IS FALSE))))OR(x''))  NULLS FIRST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (NULL) ORDER BY ((((((((CAST(x'' AS TEXT))AND(((t1.c4) IS TRUE))))AND(((t1.c4) BETWEEN (t1.c39) AND (rt1.c6)))))OR(((t1.c12) IS FALSE))))OR(x''))  NULLS FIRST;
SELECT * FROM rt0, rt1, t1 WHERE ('䍭P?5f?T.') ORDER BY ((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((t1.c12)))))<=(('+s'))), CAST(rt0.c1 AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('䍭P?5f?T.') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((t1.c12)))))<=(('+s'))), CAST(rt0.c1 AS REAL));
SELECT * FROM rt0, rt1, t1 WHERE ('䍭P?5f?T.') ORDER BY ((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((t1.c12)))))<=(('+s'))), CAST(rt0.c1 AS REAL);
SELECT SUM(count) FROM (SELECT ALL (('䍭P?5f?T.') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((t1.c12)))))<=(('+s'))), CAST(rt0.c1 AS REAL));
SELECT * FROM rt0, rt1, t1 WHERE ('䍭P?5f?T.') ORDER BY ((((((rt0.c1)) BETWEEN ((t1.c2)) AND ((t1.c12)))))<=(('+s'))), CAST(rt0.c1 AS REAL);
SELECT * FROM t1 WHERE ((~ (((t1.c12) ISNULL)))) ORDER BY CAST(-527298076 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, CAST(CASE WHEN t1.c39 THEN t1.c4 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c12) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY CAST(-527298076 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, CAST(CASE WHEN t1.c39 THEN t1.c4 END AS NUMERIC)  NULLS LAST);
SELECT * FROM t1 WHERE ((~ (((t1.c12) ISNULL)))) ORDER BY CAST(-527298076 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, CAST(CASE WHEN t1.c39 THEN t1.c4 END AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (((t1.c12) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY CAST(-527298076 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, CAST(CASE WHEN t1.c39 THEN t1.c4 END AS NUMERIC)  NULLS LAST);
SELECT * FROM t1 WHERE ((~ (((t1.c12) ISNULL)))) ORDER BY CAST(-527298076 AS INTEGER) COLLATE RTRIM ASC  NULLS LAST, CAST(CASE WHEN t1.c39 THEN t1.c4 END AS NUMERIC)  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((rt0.c3) BETWEEN (((t1.c4) IS TRUE)) AND ((NOT (rt1.c3)))) ASC  NULLS FIRST, CASE WHEN 'P*\r7cjs⪩' THEN CAST(rt1.c3 AS REAL) END DESC, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((rt0.c3) BETWEEN (((t1.c4) IS TRUE)) AND ((NOT (rt1.c3)))) ASC  NULLS FIRST, CASE WHEN 'P*\r7cjs⪩' THEN CAST(rt1.c3 AS REAL) END DESC, SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((rt0.c3) BETWEEN (((t1.c4) IS TRUE)) AND ((NOT (rt1.c3)))) ASC  NULLS FIRST, CASE WHEN 'P*\r7cjs⪩' THEN CAST(rt1.c3 AS REAL) END DESC, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((rt0.c3) BETWEEN (((t1.c4) IS TRUE)) AND ((NOT (rt1.c3)))) ASC  NULLS FIRST, CASE WHEN 'P*\r7cjs⪩' THEN CAST(rt1.c3 AS REAL) END DESC, SQLITE_SOURCE_ID() DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((rt0.c3) BETWEEN (((t1.c4) IS TRUE)) AND ((NOT (rt1.c3)))) ASC  NULLS FIRST, CASE WHEN 'P*\r7cjs⪩' THEN CAST(rt1.c3 AS REAL) END DESC, SQLITE_SOURCE_ID() DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((rt0.c4) BETWEEN (((rt0.c1) IS TRUE)) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) BETWEEN (((rt0.c1) IS TRUE)) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) BETWEEN (((rt0.c1) IS TRUE)) AND ((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4) BETWEEN (((rt0.c1) IS TRUE)) AND ((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c4) BETWEEN (((rt0.c1) IS TRUE)) AND ((~ (rt0.c1)))));
SELECT * FROM rt0, rt1, t1 WHERE (((t1.c39) NOT BETWEEN (rt1.c4) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c39) NOT BETWEEN (rt1.c4) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (((t1.c39) NOT BETWEEN (rt1.c4) AND (rt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((t1.c39) NOT BETWEEN (rt1.c4) AND (rt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (((t1.c39) NOT BETWEEN (rt1.c4) AND (rt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((rt0.c0)) BETWEEN ((((1.758875614E9) IS FALSE))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c2 END))) WHERE (CAST(CASE rt1.c1  WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c5 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c5 END AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt0.c0)) BETWEEN ((((1.758875614E9) IS FALSE))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c2 END))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((rt0.c0)) BETWEEN ((((1.758875614E9) IS FALSE))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c2 END))) WHERE (CAST(CASE rt1.c1  WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c5 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c5 END AS NUMERIC)) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON (((rt0.c0)) BETWEEN ((((1.758875614E9) IS FALSE))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c2 END))));
SELECT COUNT(*) FROM rt0 CROSS JOIN rt1 ON (((rt0.c0)) BETWEEN ((((1.758875614E9) IS FALSE))) AND ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt0.c2 END))) WHERE (CAST(CASE rt1.c1  WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c5 END AS NUMERIC));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON (('781989882') BETWEEN (0.5171851371466745) AND (0.4805861846467179)) INNER JOIN rt1 ON (((0.5403561683793983 IN (rt1.c2))) IS FALSE) WHERE ((- (LIKELY(t1.c2))));
SELECT SUM(count) FROM (SELECT (((- (LIKELY(t1.c2)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (('781989882') BETWEEN (0.5171851371466745) AND (0.4805861846467179)) INNER JOIN rt1 ON (((0.5403561683793983 IN (rt1.c2))) IS FALSE));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON (('781989882') BETWEEN (0.5171851371466745) AND (0.4805861846467179)) INNER JOIN rt1 ON (((0.5403561683793983 IN (rt1.c2))) IS FALSE) WHERE ((- (LIKELY(t1.c2))));
SELECT SUM(count) FROM (SELECT (((- (LIKELY(t1.c2)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (('781989882') BETWEEN (0.5171851371466745) AND (0.4805861846467179)) INNER JOIN rt1 ON (((0.5403561683793983 IN (rt1.c2))) IS FALSE));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON (('781989882') BETWEEN (0.5171851371466745) AND (0.4805861846467179)) INNER JOIN rt1 ON (((0.5403561683793983 IN (rt1.c2))) IS FALSE) WHERE ((- (LIKELY(t1.c2))));
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((((((((rt0.c0)AND(rt1.c6)))OR(rt0.c4)))OR(t1.c2)))AND(NULL)))) ORDER BY (- (((rt0.c3)-(rt0.c3)))), CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END AS NUMERIC), ((t1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c4)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((((((((rt0.c0)AND(rt1.c6)))OR(rt0.c4)))OR(t1.c2)))AND(NULL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (- (((rt0.c3)-(rt0.c3)))), CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END AS NUMERIC), ((t1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c4)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((((((((rt0.c0)AND(rt1.c6)))OR(rt0.c4)))OR(t1.c2)))AND(NULL)))) ORDER BY (- (((rt0.c3)-(rt0.c3)))), CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END AS NUMERIC), ((t1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c4)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((((((((rt0.c0)AND(rt1.c6)))OR(rt0.c4)))OR(t1.c2)))AND(NULL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (- (((rt0.c3)-(rt0.c3)))), CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END AS NUMERIC), ((t1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c4)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (SQLITE_COMPILEOPTION_USED(((((((((rt0.c0)AND(rt1.c6)))OR(rt0.c4)))OR(t1.c2)))AND(NULL)))) ORDER BY (- (((rt0.c3)-(rt0.c3)))), CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c1 ELSE rt1.c1 END AS NUMERIC), ((t1.c4) NOT BETWEEN (rt0.c1) AND (rt1.c4)) COLLATE NOCASE ASC;
SELECT ALL * FROM rt1, rt0 WHERE (CASE rt1.c6  WHEN '1528576688' THEN rt1.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c6  WHEN '1528576688' THEN rt1.c3 END COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE rt1.c6  WHEN '1528576688' THEN rt1.c3 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CASE rt1.c6  WHEN '1528576688' THEN rt1.c3 END COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE (CASE rt1.c6  WHEN '1528576688' THEN rt1.c3 END COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((TYPEOF(rt1.c0) IN ((x'f876' IN (rt0.c0, rt0.c4)), ''))) ORDER BY rt1.c3 ASC, (~ (CASE 0.6289531533392378  WHEN rt1.c6 THEN rt0.c3 END)) ASC, HEX(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(rt1.c0) IN ((x'f876' IN (rt0.c0, rt0.c4)), ''))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY rt1.c3 ASC, (~ (CASE 0.6289531533392378  WHEN rt1.c6 THEN rt0.c3 END)) ASC, HEX(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((TYPEOF(rt1.c0) IN ((x'f876' IN (rt0.c0, rt0.c4)), ''))) ORDER BY rt1.c3 ASC, (~ (CASE 0.6289531533392378  WHEN rt1.c6 THEN rt0.c3 END)) ASC, HEX(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TYPEOF(rt1.c0) IN ((x'f876' IN (rt0.c0, rt0.c4)), ''))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY rt1.c3 ASC, (~ (CASE 0.6289531533392378  WHEN rt1.c6 THEN rt0.c3 END)) ASC, HEX(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE ((TYPEOF(rt1.c0) IN ((x'f876' IN (rt0.c0, rt0.c4)), ''))) ORDER BY rt1.c3 ASC, (~ (CASE 0.6289531533392378  WHEN rt1.c6 THEN rt0.c3 END)) ASC, HEX(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END) DESC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((x'08ab')OR(CASE t1.c2  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((x'08ab')OR(CASE t1.c2  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((x'08ab')OR(CASE t1.c2  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((x'08ab')OR(CASE t1.c2  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (((x'08ab')OR(CASE t1.c2  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT ALL * FROM rt0 WHERE (json_array_length(CAST(rt0.c3 AS NUMERIC))) ORDER BY ((((rt0.c4)+(rt0.c2))) BETWEEN (LENGTH(rt0.c1)) AND (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(rt0.c3 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)+(rt0.c2))) BETWEEN (LENGTH(rt0.c1)) AND (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (json_array_length(CAST(rt0.c3 AS NUMERIC))) ORDER BY ((((rt0.c4)+(rt0.c2))) BETWEEN (LENGTH(rt0.c1)) AND (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(CAST(rt0.c3 AS NUMERIC))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)+(rt0.c2))) BETWEEN (LENGTH(rt0.c1)) AND (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (json_array_length(CAST(rt0.c3 AS NUMERIC))) ORDER BY ((((rt0.c4)+(rt0.c2))) BETWEEN (LENGTH(rt0.c1)) AND (((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)))) DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c2) BETWEEN ('-21688888') AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c2) BETWEEN ('-21688888') AND (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c2) BETWEEN ('-21688888') AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt1.c2) BETWEEN ('-21688888') AND (rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((NOT (((rt1.c2) BETWEEN ('-21688888') AND (rt1.c3)))));
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c6, rt0.c1, rt1.c6, rt0.c0, rt1.c3))>((rt0.c3, rt1.c2, rt1.c6, rt0.c3, rt1.c1))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c6, rt0.c1, rt1.c6, rt0.c0, rt1.c3))>((rt0.c3, rt1.c2, rt1.c6, rt0.c3, rt1.c1))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY '' DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c6, rt0.c1, rt1.c6, rt0.c0, rt1.c3))>((rt0.c3, rt1.c2, rt1.c6, rt0.c3, rt1.c1))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY '' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c6, rt0.c1, rt1.c6, rt0.c0, rt1.c3))>((rt0.c3, rt1.c2, rt1.c6, rt0.c3, rt1.c1))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY '' DESC  NULLS FIRST);
SELECT * FROM rt1, rt0 WHERE ((((((rt1.c6, rt0.c1, rt1.c6, rt0.c0, rt1.c3))>((rt0.c3, rt1.c2, rt1.c6, rt0.c3, rt1.c1))))OR(((rt0.c3) BETWEEN (rt0.c3) AND (NULL))))) ORDER BY '' DESC  NULLS FIRST;
SELECT * FROM rt0, t1 WHERE ((((NOT (t1.c39))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c39))) IS TRUE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((NOT (t1.c39))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c39))) IS TRUE)) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((NOT (t1.c39))) IS TRUE));
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST((rt0.c1 IN ()) AS INTEGER));
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'' WHERE ((NOT ((NOT (t1.c4))))) ORDER BY LOWER('8-')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t1.c4))))) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'' ORDER BY LOWER('8-')  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'' WHERE ((NOT ((NOT (t1.c4))))) ORDER BY LOWER('8-')  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t1.c4))))) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'' ORDER BY LOWER('8-')  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'' WHERE ((NOT ((NOT (t1.c4))))) ORDER BY LOWER('8-')  NULLS FIRST;
SELECT * FROM rt1 NATURAL JOIN t1 WHERE (((rt1.c4) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT * FROM rt1 NATURAL JOIN t1 WHERE (((rt1.c4) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt1.c4) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT * FROM rt1 NATURAL JOIN t1 WHERE (((rt1.c4) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM rt1, t1 WHERE (CAST(t1.c12 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c12 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (CAST(t1.c12 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c12 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (CAST(t1.c12 AS INTEGER) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (CASE (((rt1.c3))>((rt1.c5)))  WHEN COALESCE(x'ead0', rt1.c5) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))) WHEN rt1.c1 THEN ((1633527546) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN rt1.c1 THEN (~ (rt0.c4)) ELSE ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c3))>((rt1.c5)))  WHEN COALESCE(x'ead0', rt1.c5) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))) WHEN rt1.c1 THEN ((1633527546) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN rt1.c1 THEN (~ (rt0.c4)) ELSE ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (CASE (((rt1.c3))>((rt1.c5)))  WHEN COALESCE(x'ead0', rt1.c5) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))) WHEN rt1.c1 THEN ((1633527546) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN rt1.c1 THEN (~ (rt0.c4)) ELSE ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (((rt1.c3))>((rt1.c5)))  WHEN COALESCE(x'ead0', rt1.c5) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))) WHEN rt1.c1 THEN ((1633527546) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN rt1.c1 THEN (~ (rt0.c4)) ELSE ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN rt0 WHERE (CASE (((rt1.c3))>((rt1.c5)))  WHEN COALESCE(x'ead0', rt1.c5) THEN (((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c4))) WHEN rt1.c1 THEN ((1633527546) BETWEEN (rt1.c3) AND (rt1.c3)) WHEN rt1.c1 THEN (~ (rt0.c4)) ELSE ((rt1.c4) BETWEEN (rt1.c0) AND (rt1.c2)) END);
SELECT ALL * FROM t1 WHERE (((t1.c4)IS(t1.c2)) COLLATE BINARY) ORDER BY ((('-453488205')) NOT BETWEEN (((~ (0.3904561497327985)))) AND ((((t1.c2) IS TRUE)))), ((((t1.c4)OR(t1.c39)))OR(t1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c4)IS(t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((('-453488205')) NOT BETWEEN (((~ (0.3904561497327985)))) AND ((((t1.c2) IS TRUE)))), ((((t1.c4)OR(t1.c39)))OR(t1.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c4)IS(t1.c2)) COLLATE BINARY) ORDER BY ((('-453488205')) NOT BETWEEN (((~ (0.3904561497327985)))) AND ((((t1.c2) IS TRUE)))), ((((t1.c4)OR(t1.c39)))OR(t1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c4)IS(t1.c2)) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY ((('-453488205')) NOT BETWEEN (((~ (0.3904561497327985)))) AND ((((t1.c2) IS TRUE)))), ((((t1.c4)OR(t1.c39)))OR(t1.c2)) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((t1.c4)IS(t1.c2)) COLLATE BINARY) ORDER BY ((('-453488205')) NOT BETWEEN (((~ (0.3904561497327985)))) AND ((((t1.c2) IS TRUE)))), ((((t1.c4)OR(t1.c39)))OR(t1.c2)) COLLATE BINARY  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))AND((~ (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))AND((+ (rt0.c2)))))AND((- (rt0.c0))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(CASE WHEN 'Ma+S8' THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c0)))AND((~ (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))AND((+ (rt0.c2)))))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(CASE WHEN 'Ma+S8' THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))AND((~ (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))AND((+ (rt0.c2)))))AND((- (rt0.c0))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(CASE WHEN 'Ma+S8' THEN rt0.c3 END));
SELECT SUM(count) FROM (SELECT (((((((((((- (rt0.c0)))AND((~ (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))AND((+ (rt0.c2)))))AND((- (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (NOT ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(CASE WHEN 'Ma+S8' THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((((((- (rt0.c0)))AND((~ (rt0.c1)))))AND(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)))AND((+ (rt0.c2)))))AND((- (rt0.c0))))) ORDER BY (NOT ((rt0.c0 IN (rt0.c2, rt0.c0)))) DESC, ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c3)))GLOB(CASE WHEN 'Ma+S8' THEN rt0.c3 END));
SELECT * FROM t1 WHERE (((((CASE t1.c4  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)OR((((t1.c4))<((t1.c4))))))OR((t1.c12 IN (t1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c4  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)OR((((t1.c4))<((t1.c4))))))OR((t1.c12 IN (t1.c4))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CASE t1.c4  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)OR((((t1.c4))<((t1.c4))))))OR((t1.c12 IN (t1.c4)))));
SELECT SUM(count) FROM (SELECT ((((((CASE t1.c4  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)OR((((t1.c4))<((t1.c4))))))OR((t1.c12 IN (t1.c4))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((CASE t1.c4  WHEN t1.c39 THEN t1.c39 ELSE t1.c2 END)OR((((t1.c4))<((t1.c4))))))OR((t1.c12 IN (t1.c4)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c0)IS(rt1.c6)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS(rt1.c6)) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c0)IS(rt1.c6)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)IS(rt1.c6)) AS INTEGER)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (CAST(((rt0.c0)IS(rt1.c6)) AS INTEGER));
SELECT ALL * FROM rt1, rt0, t1 WHERE ((GLOB(rt1.c0, rt1.c6) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(rt1.c0, rt1.c6) IN ())) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((GLOB(rt1.c0, rt1.c6) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((GLOB(rt1.c0, rt1.c6) IN ())) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((GLOB(rt1.c0, rt1.c6) IN ()));
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ('-1445805503');
SELECT SUM(count) FROM (SELECT ALL (('-1445805503') IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ('-1445805503');
SELECT SUM(count) FROM (SELECT ALL (('-1445805503') IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE ('-1445805503');
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((((((rt1.c3)OR(rt1.c4)))OR(rt1.c6))))=((((rt1.c3)/(0.7489509872900422)))))) ORDER BY (((~ (rt0.c0)))||(((t1.c12)*(rt0.c4)))), CASE WHEN rt1.c2 COLLATE BINARY THEN (- (rt0.c0)) ELSE t1.c2 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c3)OR(rt1.c4)))OR(rt1.c6))))==((((rt1.c3)/(0.7489509872900422)))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((~ (rt0.c0)))||(((t1.c12)*(rt0.c4)))), CASE WHEN rt1.c2 COLLATE BINARY THEN (- (rt0.c0)) ELSE t1.c2 COLLATE RTRIM END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((((((rt1.c3)OR(rt1.c4)))OR(rt1.c6))))=((((rt1.c3)/(0.7489509872900422)))))) ORDER BY (((~ (rt0.c0)))||(((t1.c12)*(rt0.c4)))), CASE WHEN rt1.c2 COLLATE BINARY THEN (- (rt0.c0)) ELSE t1.c2 COLLATE RTRIM END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((rt1.c3)OR(rt1.c4)))OR(rt1.c6))))==((((rt1.c3)/(0.7489509872900422)))))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((~ (rt0.c0)))||(((t1.c12)*(rt0.c4)))), CASE WHEN rt1.c2 COLLATE BINARY THEN (- (rt0.c0)) ELSE t1.c2 COLLATE RTRIM END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE ((((((((rt1.c3)OR(rt1.c4)))OR(rt1.c6))))=((((rt1.c3)/(0.7489509872900422)))))) ORDER BY (((~ (rt0.c0)))||(((t1.c12)*(rt0.c4)))), CASE WHEN rt1.c2 COLLATE BINARY THEN (- (rt0.c0)) ELSE t1.c2 COLLATE RTRIM END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt0.c2 IN ()))AND((- (rt1.c1)))))AND(HEX(rt0.c4))) CROSS JOIN t1 ON (rt1.c0 IN (CASE WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END)) WHERE ((((- (t1.c39)))>>(CAST(t1.c39 AS INTEGER)))) ORDER BY ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c39)))>>(CAST(t1.c39 AS INTEGER)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt0.c2 IN ()))AND((- (rt1.c1)))))AND(HEX(rt0.c4))) CROSS JOIN t1 ON (rt1.c0 IN (CASE WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END)) ORDER BY ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt0.c2 IN ()))AND((- (rt1.c1)))))AND(HEX(rt0.c4))) CROSS JOIN t1 ON (rt1.c0 IN (CASE WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END)) WHERE ((((- (t1.c39)))>>(CAST(t1.c39 AS INTEGER)))) ORDER BY ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (t1.c39)))>>(CAST(t1.c39 AS INTEGER)))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt0.c2 IN ()))AND((- (rt1.c1)))))AND(HEX(rt0.c4))) CROSS JOIN t1 ON (rt1.c0 IN (CASE WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END)) ORDER BY ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((rt0.c2 IN ()))AND((- (rt1.c1)))))AND(HEX(rt0.c4))) CROSS JOIN t1 ON (rt1.c0 IN (CASE WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END)) WHERE ((((- (t1.c39)))>>(CAST(t1.c39 AS INTEGER)))) ORDER BY ((x'') BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (t1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c4 COLLATE BINARY) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (t1.c4 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((t1.c4 COLLATE BINARY) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (t1.c4 COLLATE BINARY);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c3 COLLATE BINARY))<=(((+ (rt0.c4)))))) ORDER BY (((rt1.c0, rt0.c2, rt1.c2)) BETWEEN (('-1264011130', NULL, ((rt1.c4)>>(rt1.c5)))) AND ((rt0.c0 COLLATE NOCASE, (((rt0.c4))==((rt0.c3))), ((rt0.c3) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE BINARY))<=(((+ (rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c0, rt0.c2, rt1.c2)) BETWEEN (('-1264011130', NULL, ((rt1.c4)>>(rt1.c5)))) AND ((rt0.c0 COLLATE NOCASE, (((rt0.c4))==((rt0.c3))), ((rt0.c3) NOTNULL))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c3 COLLATE BINARY))<=(((+ (rt0.c4)))))) ORDER BY (((rt1.c0, rt0.c2, rt1.c2)) BETWEEN (('-1264011130', NULL, ((rt1.c4)>>(rt1.c5)))) AND ((rt0.c0 COLLATE NOCASE, (((rt0.c4))==((rt0.c3))), ((rt0.c3) NOTNULL))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 COLLATE BINARY))<=(((+ (rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt1.c0, rt0.c2, rt1.c2)) BETWEEN (('-1264011130', NULL, ((rt1.c4)>>(rt1.c5)))) AND ((rt0.c0 COLLATE NOCASE, (((rt0.c4))==((rt0.c3))), ((rt0.c3) NOTNULL))))  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c3 COLLATE BINARY))<=(((+ (rt0.c4)))))) ORDER BY (((rt1.c0, rt0.c2, rt1.c2)) BETWEEN (('-1264011130', NULL, ((rt1.c4)>>(rt1.c5)))) AND ((rt0.c0 COLLATE NOCASE, (((rt0.c4))==((rt0.c3))), ((rt0.c3) NOTNULL))))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) DESC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (CAST(rt0.c1 AS REAL) COLLATE BINARY) ORDER BY CAST(CAST(rt0.c1 AS BLOB) AS INTEGER) DESC;
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON '1860493912' WHERE (LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))OR(rt1.c6)), 0.9146201402882297)) ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))GLOB(((rt0.c3)|(rt1.c5)))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))OR(rt1.c6)), 0.9146201402882297)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON '1860493912' ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))GLOB(((rt0.c3)|(rt1.c5)))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON '1860493912' WHERE (LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))OR(rt1.c6)), 0.9146201402882297)) ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))GLOB(((rt0.c3)|(rt1.c5)))) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))OR(rt1.c6)), 0.9146201402882297)) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON '1860493912' ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))GLOB(((rt0.c3)|(rt1.c5)))) ASC);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON '1860493912' WHERE (LIKELIHOOD(((((rt0.c3)OR(rt0.c2)))OR(rt1.c6)), 0.9146201402882297)) ORDER BY ((((((rt1.c3)OR(rt1.c1)))AND(rt1.c4)))GLOB(((rt0.c3)|(rt1.c5)))) ASC;
SELECT * FROM t1, rt0 WHERE ((- (((t1.c39)GLOB(t1.c39))))) ORDER BY CASE WHEN NULLIF(DISTINCT rt0.c3, t1.c39) THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c39)GLOB(t1.c39))))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN NULLIF(DISTINCT rt0.c3, t1.c39) THEN x'' END  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE ((- (((t1.c39)GLOB(t1.c39))))) ORDER BY CASE WHEN NULLIF(DISTINCT rt0.c3, t1.c39) THEN x'' END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c39)GLOB(t1.c39))))) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN NULLIF(DISTINCT rt0.c3, t1.c39) THEN x'' END  NULLS FIRST);
SELECT * FROM t1, rt0 WHERE ((- (((t1.c39)GLOB(t1.c39))))) ORDER BY CASE WHEN NULLIF(DISTINCT rt0.c3, t1.c39) THEN x'' END  NULLS FIRST;
SELECT * FROM rt1 WHERE (NULL) ORDER BY (NOT (CASE WHEN rt1.c2 THEN rt1.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE WHEN rt1.c2 THEN rt1.c3 END)) DESC);
SELECT * FROM rt1 WHERE (NULL) ORDER BY (NOT (CASE WHEN rt1.c2 THEN rt1.c3 END)) DESC;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CASE WHEN rt1.c2 THEN rt1.c3 END)) DESC);
SELECT * FROM rt1 WHERE (NULL) ORDER BY (NOT (CASE WHEN rt1.c2 THEN rt1.c3 END)) DESC;
SELECT * FROM rt0 WHERE (((rt0.c3 IN ()) IN (CAST(0.9486515666823805 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN (CAST(0.9486515666823805 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 IN ()) IN (CAST(0.9486515666823805 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN (CAST(0.9486515666823805 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c3 IN ()) IN (CAST(0.9486515666823805 AS INTEGER))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((('')*(((t1.c39)==(rt1.c5))))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL (((('')*(((t1.c39)=(rt1.c5))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt1.c3);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((('')*(((t1.c39)==(rt1.c5))))) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ALL (((('')*(((t1.c39)=(rt1.c5))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt1.c3);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((('')*(((t1.c39)==(rt1.c5))))) ORDER BY rt1.c3;
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE BINARY))) ORDER BY 'DB['  NULLS LAST, LIKELIHOOD(DISTINCT (6.00063359E8 IN (rt0.c3)), 0.51372125123305) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 'DB['  NULLS LAST, LIKELIHOOD(DISTINCT (6.00063359E8 IN (rt0.c3)), 0.51372125123305) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE BINARY))) ORDER BY 'DB['  NULLS LAST, LIKELIHOOD(DISTINCT (6.00063359E8 IN (rt0.c3)), 0.51372125123305) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, rt1 ORDER BY 'DB['  NULLS LAST, LIKELIHOOD(DISTINCT (6.00063359E8 IN (rt0.c3)), 0.51372125123305) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((rt0.c1 COLLATE NOCASE)&(rt0.c3 COLLATE BINARY))) ORDER BY 'DB['  NULLS LAST, LIKELIHOOD(DISTINCT (6.00063359E8 IN (rt0.c3)), 0.51372125123305) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c0 AS REAL)) ORDER BY CASE rt0.c0  WHEN t1.c12 COLLATE BINARY THEN CAST(rt0.c4 AS BLOB) ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE rt0.c0  WHEN t1.c12 COLLATE BINARY THEN CAST(rt0.c4 AS BLOB) ELSE '' END ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c0 AS REAL)) ORDER BY CASE rt0.c0  WHEN t1.c12 COLLATE BINARY THEN CAST(rt0.c4 AS BLOB) ELSE '' END ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS REAL)) IS TRUE)  as count FROM rt0, t1 ORDER BY CASE rt0.c0  WHEN t1.c12 COLLATE BINARY THEN CAST(rt0.c4 AS BLOB) ELSE '' END ASC);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(rt0.c0 AS REAL)) ORDER BY CASE rt0.c0  WHEN t1.c12 COLLATE BINARY THEN CAST(rt0.c4 AS BLOB) ELSE '' END ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1 IN (rt1.c0)), (+ (rt1.c3)), (rt1.c1 IN ())))!=((rt1.c3, ((rt1.c3)=(rt1.c6)), (((rt1.c0))>=((x''))))))) ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((rt1.c1 COLLATE BINARY, ((rt1.c6)OR(rt1.c5)), rt1.c4 COLLATE BINARY)) AND ((x'1e79', x'', ((((rt1.c2)AND(rt1.c5)))OR(0Xffffffff91274c1e))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 IN (rt1.c0)), (+ (rt1.c3)), (rt1.c1 IN ())))<>((rt1.c3, ((rt1.c3)==(rt1.c6)), (((rt1.c0))>=((x''))))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((rt1.c1 COLLATE BINARY, ((rt1.c6)OR(rt1.c5)), rt1.c4 COLLATE BINARY)) AND ((x'1e79', x'', ((((rt1.c2)AND(rt1.c5)))OR(0Xffffffff91274c1e))))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1 IN (rt1.c0)), (+ (rt1.c3)), (rt1.c1 IN ())))!=((rt1.c3, ((rt1.c3)=(rt1.c6)), (((rt1.c0))>=((x''))))))) ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((rt1.c1 COLLATE BINARY, ((rt1.c6)OR(rt1.c5)), rt1.c4 COLLATE BINARY)) AND ((x'1e79', x'', ((((rt1.c2)AND(rt1.c5)))OR(0Xffffffff91274c1e))))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1 IN (rt1.c0)), (+ (rt1.c3)), (rt1.c1 IN ())))<>((rt1.c3, ((rt1.c3)==(rt1.c6)), (((rt1.c0))>=((x''))))))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((rt1.c1 COLLATE BINARY, ((rt1.c6)OR(rt1.c5)), rt1.c4 COLLATE BINARY)) AND ((x'1e79', x'', ((((rt1.c2)AND(rt1.c5)))OR(0Xffffffff91274c1e))))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1 IN (rt1.c0)), (+ (rt1.c3)), (rt1.c1 IN ())))!=((rt1.c3, ((rt1.c3)=(rt1.c6)), (((rt1.c0))>=((x''))))))) ORDER BY (((rt1.c0, rt1.c1, rt1.c5)) NOT BETWEEN ((rt1.c1 COLLATE BINARY, ((rt1.c6)OR(rt1.c5)), rt1.c4 COLLATE BINARY)) AND ((x'1e79', x'', ((((rt1.c2)AND(rt1.c5)))OR(0Xffffffff91274c1e))))) DESC;
SELECT * FROM rt0, rt1, t1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS BLOB)) AND (((rt1.c5) NOT BETWEEN (t1.c39) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS BLOB)) AND (((rt1.c5) NOT BETWEEN (t1.c39) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS BLOB)) AND (((rt1.c5) NOT BETWEEN (t1.c39) AND (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS BLOB)) AND (((rt1.c5) NOT BETWEEN (t1.c39) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (((CASE WHEN rt0.c2 THEN rt0.c4 END) BETWEEN (CAST(rt1.c5 AS BLOB)) AND (((rt1.c5) NOT BETWEEN (t1.c39) AND (rt0.c0)))));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((((t1.c12) NOT BETWEEN (0Xffffffffd6100433) AND (rt1.c6)))IS NOT(((rt0.c2)GLOB(rt1.c6))))) ORDER BY ((((CASE t1.c39  WHEN t1.c12 THEN t1.c4 ELSE rt1.c5 END)OR(DATE(t1.c4, rt0.c1, t1.c39, 0x50dc29f, rt1.c4))))AND(0xffffffffdb450b96))  NULLS FIRST, (~ ((((0.6927652227059624))<=((rt0.c3))))) DESC, ((LOWER(rt0.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((t1.c12) NOT BETWEEN (0xffffffffd6100433) AND (rt1.c6)))IS NOT(((rt0.c2)GLOB(rt1.c6))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((CASE t1.c39  WHEN t1.c12 THEN t1.c4 ELSE rt1.c5 END)OR(DATE(t1.c4, rt0.c1, t1.c39, 0X50dc29f, rt1.c4))))AND(0Xffffffffdb450b96))  NULLS FIRST, (~ ((((0.6927652227059624))<=((rt0.c3))))) DESC, ((LOWER(rt0.c1)) IS FALSE));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((((t1.c12) NOT BETWEEN (0Xffffffffd6100433) AND (rt1.c6)))IS NOT(((rt0.c2)GLOB(rt1.c6))))) ORDER BY ((((CASE t1.c39  WHEN t1.c12 THEN t1.c4 ELSE rt1.c5 END)OR(DATE(t1.c4, rt0.c1, t1.c39, 0x50dc29f, rt1.c4))))AND(0xffffffffdb450b96))  NULLS FIRST, (~ ((((0.6927652227059624))<=((rt0.c3))))) DESC, ((LOWER(rt0.c1)) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((t1.c12) NOT BETWEEN (0xffffffffd6100433) AND (rt1.c6)))IS NOT(((rt0.c2)GLOB(rt1.c6))))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((CASE t1.c39  WHEN t1.c12 THEN t1.c4 ELSE rt1.c5 END)OR(DATE(t1.c4, rt0.c1, t1.c39, 0X50dc29f, rt1.c4))))AND(0Xffffffffdb450b96))  NULLS FIRST, (~ ((((0.6927652227059624))<=((rt0.c3))))) DESC, ((LOWER(rt0.c1)) IS FALSE));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((((t1.c12) NOT BETWEEN (0Xffffffffd6100433) AND (rt1.c6)))IS NOT(((rt0.c2)GLOB(rt1.c6))))) ORDER BY ((((CASE t1.c39  WHEN t1.c12 THEN t1.c4 ELSE rt1.c5 END)OR(DATE(t1.c4, rt0.c1, t1.c39, 0x50dc29f, rt1.c4))))AND(0xffffffffdb450b96))  NULLS FIRST, (~ ((((0.6927652227059624))<=((rt0.c3))))) DESC, ((LOWER(rt0.c1)) IS FALSE);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((x'1cb7')AND(LIKELIHOOD(DISTINCT rt1.c2, 0.829471698862738))))OR((rt1.c0 IN (t1.c39))))) ORDER BY (+ (((((((((((((rt1.c2)AND(rt1.c2)))OR(t1.c12)))OR(-74530692)))AND(NULL)))AND('')))OR(rt1.c5))))  NULLS LAST, (((rt1.c6))<>(((- (rt1.c5)))))  NULLS FIRST, (+ (((rt1.c0)<=(t1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'1cb7')AND(LIKELIHOOD(DISTINCT rt1.c2, 0.829471698862738))))OR((rt1.c0 IN (t1.c39))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (+ (((((((((((((rt1.c2)AND(rt1.c2)))OR(t1.c12)))OR(-74530692)))AND(NULL)))AND('')))OR(rt1.c5))))  NULLS LAST, (((rt1.c6))<>(((- (rt1.c5)))))  NULLS FIRST, (+ (((rt1.c0)<=(t1.c4)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((x'1cb7')AND(LIKELIHOOD(DISTINCT rt1.c2, 0.829471698862738))))OR((rt1.c0 IN (t1.c39))))) ORDER BY (+ (((((((((((((rt1.c2)AND(rt1.c2)))OR(t1.c12)))OR(-74530692)))AND(NULL)))AND('')))OR(rt1.c5))))  NULLS LAST, (((rt1.c6))<>(((- (rt1.c5)))))  NULLS FIRST, (+ (((rt1.c0)<=(t1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'1cb7')AND(LIKELIHOOD(DISTINCT rt1.c2, 0.829471698862738))))OR((rt1.c0 IN (t1.c39))))) IS TRUE)  as count FROM rt1, t1 ORDER BY (+ (((((((((((((rt1.c2)AND(rt1.c2)))OR(t1.c12)))OR(-74530692)))AND(NULL)))AND('')))OR(rt1.c5))))  NULLS LAST, (((rt1.c6))<>(((- (rt1.c5)))))  NULLS FIRST, (+ (((rt1.c0)<=(t1.c4)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((x'1cb7')AND(LIKELIHOOD(DISTINCT rt1.c2, 0.829471698862738))))OR((rt1.c0 IN (t1.c39))))) ORDER BY (+ (((((((((((((rt1.c2)AND(rt1.c2)))OR(t1.c12)))OR(-74530692)))AND(NULL)))AND('')))OR(rt1.c5))))  NULLS LAST, (((rt1.c6))<>(((- (rt1.c5)))))  NULLS FIRST, (+ (((rt1.c0)<=(t1.c4)))) ASC  NULLS FIRST;
SELECT * FROM rt0, rt1, t1 WHERE (CASE WHEN CAST(0xc2816e0 AS NUMERIC) THEN (rt0.c2 IN ()) WHEN IFNULL(DISTINCT 0.34139066870627743, rt1.c3) THEN CASE rt0.c2  WHEN rt0.c1 THEN t1.c12 ELSE t1.c4 END WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c4)) THEN (((rt1.c6, rt1.c3, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c6)) AND ((rt1.c6, t1.c4, rt1.c5))) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t1.c12 THEN rt1.c1 ELSE x'' END THEN ((rt1.c6) BETWEEN (rt0.c4) AND (rt1.c6)) WHEN CAST(0.9872900860665027 AS TEXT) THEN LIKELY(DISTINCT x'') ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0xc2816e0 AS NUMERIC) THEN (rt0.c2 IN ()) WHEN IFNULL(DISTINCT 0.34139066870627743, rt1.c3) THEN CASE rt0.c2  WHEN rt0.c1 THEN t1.c12 ELSE t1.c4 END WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c4)) THEN (((rt1.c6, rt1.c3, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c6)) AND ((rt1.c6, t1.c4, rt1.c5))) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t1.c12 THEN rt1.c1 ELSE x'' END THEN ((rt1.c6) BETWEEN (rt0.c4) AND (rt1.c6)) WHEN CAST(0.9872900860665027 AS TEXT) THEN LIKELY(DISTINCT x'') ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c4)) END) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (CASE WHEN CAST(0xc2816e0 AS NUMERIC) THEN (rt0.c2 IN ()) WHEN IFNULL(DISTINCT 0.34139066870627743, rt1.c3) THEN CASE rt0.c2  WHEN rt0.c1 THEN t1.c12 ELSE t1.c4 END WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c4)) THEN (((rt1.c6, rt1.c3, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c6)) AND ((rt1.c6, t1.c4, rt1.c5))) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t1.c12 THEN rt1.c1 ELSE x'' END THEN ((rt1.c6) BETWEEN (rt0.c4) AND (rt1.c6)) WHEN CAST(0.9872900860665027 AS TEXT) THEN LIKELY(DISTINCT x'') ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(0xc2816e0 AS NUMERIC) THEN (rt0.c2 IN ()) WHEN IFNULL(DISTINCT 0.34139066870627743, rt1.c3) THEN CASE rt0.c2  WHEN rt0.c1 THEN t1.c12 ELSE t1.c4 END WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c4)) THEN (((rt1.c6, rt1.c3, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c6)) AND ((rt1.c6, t1.c4, rt1.c5))) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t1.c12 THEN rt1.c1 ELSE x'' END THEN ((rt1.c6) BETWEEN (rt0.c4) AND (rt1.c6)) WHEN CAST(0.9872900860665027 AS TEXT) THEN LIKELY(DISTINCT x'') ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c4)) END) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (CASE WHEN CAST(0xc2816e0 AS NUMERIC) THEN (rt0.c2 IN ()) WHEN IFNULL(DISTINCT 0.34139066870627743, rt1.c3) THEN CASE rt0.c2  WHEN rt0.c1 THEN t1.c12 ELSE t1.c4 END WHEN ((((rt1.c6)OR(rt1.c0)))AND(rt1.c4)) THEN (((rt1.c6, rt1.c3, rt0.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c6)) AND ((rt1.c6, t1.c4, rt1.c5))) WHEN CASE rt1.c0  WHEN rt0.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN t1.c12 THEN rt1.c1 ELSE x'' END THEN ((rt1.c6) BETWEEN (rt0.c4) AND (rt1.c6)) WHEN CAST(0.9872900860665027 AS TEXT) THEN LIKELY(DISTINCT x'') ELSE ((rt0.c1) BETWEEN (rt0.c1) AND (t1.c4)) END);
SELECT ALL * FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((ROUND(rt0.c2, rt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((ROUND(rt0.c2, rt0.c0)) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((ROUND(rt0.c2, rt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((ROUND(rt0.c2, rt0.c0)) NOTNULL) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t1 WHERE (x'') ORDER BY ((ROUND(rt0.c2, rt0.c0)) NOTNULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (((((+ (x'')), (((('-1203597564')OR(rt0.c3)))OR(rt0.c0)), CASE WHEN t1.c4 THEN rt0.c1 ELSE t1.c12 END, (0Xffffffff80efa5af IN ()), ((rt0.c4) IS FALSE)))<>((NULL, (t1.c39 IN (t1.c4, '')), ((rt0.c1) IS FALSE), 0.9806679874929093, ((t1.c39)%(t1.c39))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (x'')), (((('-1203597564')OR(rt0.c3)))OR(rt0.c0)), CASE WHEN t1.c4 THEN rt0.c1 ELSE t1.c12 END, (0Xffffffff80efa5af IN ()), ((rt0.c4) IS FALSE)))<>((NULL, (t1.c39 IN (t1.c4, '')), ((rt0.c1) IS FALSE), 0.9806679874929093, ((t1.c39)%(t1.c39)))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((+ (x'')), (((('-1203597564')OR(rt0.c3)))OR(rt0.c0)), CASE WHEN t1.c4 THEN rt0.c1 ELSE t1.c12 END, (0Xffffffff80efa5af IN ()), ((rt0.c4) IS FALSE)))<>((NULL, (t1.c39 IN (t1.c4, '')), ((rt0.c1) IS FALSE), 0.9806679874929093, ((t1.c39)%(t1.c39))))));
SELECT SUM(count) FROM (SELECT ALL ((((((+ (x'')), (((('-1203597564')OR(rt0.c3)))OR(rt0.c0)), CASE WHEN t1.c4 THEN rt0.c1 ELSE t1.c12 END, (0Xffffffff80efa5af IN ()), ((rt0.c4) IS FALSE)))<>((NULL, (t1.c39 IN (t1.c4, '')), ((rt0.c1) IS FALSE), 0.9806679874929093, ((t1.c39)%(t1.c39)))))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((+ (x'')), (((('-1203597564')OR(rt0.c3)))OR(rt0.c0)), CASE WHEN t1.c4 THEN rt0.c1 ELSE t1.c12 END, (0Xffffffff80efa5af IN ()), ((rt0.c4) IS FALSE)))<>((NULL, (t1.c39 IN (t1.c4, '')), ((rt0.c1) IS FALSE), 0.9806679874929093, ((t1.c39)%(t1.c39))))));
SELECT * FROM t1 FULL OUTER JOIN rt1 ON rt1.c4 LEFT OUTER JOIN rt0 ON (((- (NULL))) IS FALSE) WHERE ((0.3817642598209052 IN ())) ORDER BY (((CASE rt1.c3  WHEN rt1.c4 THEN x'' ELSE rt0.c1 END))<((((0.9411339238441397) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((0.3817642598209052 IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON rt1.c4 LEFT OUTER JOIN rt0 ON (((- (NULL))) IS FALSE) ORDER BY (((CASE rt1.c3  WHEN rt1.c4 THEN x'' ELSE rt0.c1 END))<((((0.9411339238441397) NOT NULL)))));
SELECT * FROM t1 FULL OUTER JOIN rt1 ON rt1.c4 LEFT OUTER JOIN rt0 ON (((- (NULL))) IS FALSE) WHERE ((0.3817642598209052 IN ())) ORDER BY (((CASE rt1.c3  WHEN rt1.c4 THEN x'' ELSE rt0.c1 END))<((((0.9411339238441397) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((0.3817642598209052 IN ())) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON rt1.c4 LEFT OUTER JOIN rt0 ON (((- (NULL))) IS FALSE) ORDER BY (((CASE rt1.c3  WHEN rt1.c4 THEN x'' ELSE rt0.c1 END))<((((0.9411339238441397) NOT NULL)))));
SELECT * FROM t1 FULL OUTER JOIN rt1 ON rt1.c4 LEFT OUTER JOIN rt0 ON (((- (NULL))) IS FALSE) WHERE ((0.3817642598209052 IN ())) ORDER BY (((CASE rt1.c3  WHEN rt1.c4 THEN x'' ELSE rt0.c1 END))<((((0.9411339238441397) NOT NULL))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0)LIKE(rt0.c4))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (((rt0.c0)LIKE(rt0.c4))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0)LIKE(rt0.c4))) AND (((rt0.c2) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN (((rt0.c0)LIKE(rt0.c4))) AND (((rt0.c2) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c0) NOT BETWEEN (((rt0.c0)LIKE(rt0.c4))) AND (((rt0.c2) IS FALSE))));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c4, rt1.c4, rt1.c2))<=(('862453057', rt1.c1, rt1.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt1.c4, rt1.c2))<=(('862453057', rt1.c1, rt1.c2)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c4, rt1.c4, rt1.c2))<=(('862453057', rt1.c1, rt1.c2)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4, rt1.c4, rt1.c2))<=(('862453057', rt1.c1, rt1.c2)))) IS TRUE)) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((((((rt0.c4, rt1.c4, rt1.c2))<=(('862453057', rt1.c1, rt1.c2)))) IS TRUE));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CASE CAST(7.23500357E8 AS TEXT)  WHEN (('Y')=(rt0.c0)) THEN ((rt1.c0)<<(rt1.c0)) ELSE (- (rt1.c3)) END WHERE (((((rt0.c0)+(rt1.c1))) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt1.c6 COLLATE BINARY))) ORDER BY json((+ (rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt1.c1))) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt1.c6 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE CAST(7.23500357E8 AS TEXT)  WHEN (('Y')=(rt0.c0)) THEN ((rt1.c0)<<(rt1.c0)) ELSE (- (rt1.c3)) END ORDER BY json((+ (rt1.c1))) ASC);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CASE CAST(7.23500357E8 AS TEXT)  WHEN (('Y')=(rt0.c0)) THEN ((rt1.c0)<<(rt1.c0)) ELSE (- (rt1.c3)) END WHERE (((((rt0.c0)+(rt1.c1))) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt1.c6 COLLATE BINARY))) ORDER BY json((+ (rt1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)+(rt1.c1))) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt1.c6 COLLATE BINARY))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON CASE CAST(7.23500357E8 AS TEXT)  WHEN (('Y')=(rt0.c0)) THEN ((rt1.c0)<<(rt1.c0)) ELSE (- (rt1.c3)) END ORDER BY json((+ (rt1.c1))) ASC);
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON CASE CAST(7.23500357E8 AS TEXT)  WHEN (('Y')=(rt0.c0)) THEN ((rt1.c0)<<(rt1.c0)) ELSE (- (rt1.c3)) END WHERE (((((rt0.c0)+(rt1.c1))) BETWEEN (rt0.c3 COLLATE BINARY) AND (rt1.c6 COLLATE BINARY))) ORDER BY json((+ (rt1.c1))) ASC;
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON ((((t1.c2)IS(rt0.c2))) BETWEEN (((t1.c12)*(rt1.c1))) AND (0.9114444853334338)) WHERE (((((((((((((rt0.c3)AND(t1.c39)))OR(rt0.c2)))AND(t1.c2)))OR(rt1.c2)))OR(((rt0.c3) ISNULL))))AND(((t1.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c3)AND(t1.c39)))OR(rt0.c2)))AND(t1.c2)))OR(rt1.c2)))OR(((rt0.c3) ISNULL))))AND(((t1.c4) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON ((((t1.c2)IS(rt0.c2))) BETWEEN (((t1.c12)*(rt1.c1))) AND (0.9114444853334338)));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON ((((t1.c2)IS(rt0.c2))) BETWEEN (((t1.c12)*(rt1.c1))) AND (0.9114444853334338)) WHERE (((((((((((((rt0.c3)AND(t1.c39)))OR(rt0.c2)))AND(t1.c2)))OR(rt1.c2)))OR(((rt0.c3) ISNULL))))AND(((t1.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt0.c3)AND(t1.c39)))OR(rt0.c2)))AND(t1.c2)))OR(rt1.c2)))OR(((rt0.c3) ISNULL))))AND(((t1.c4) ISNULL)))) IS TRUE)  as count FROM rt0, rt1 INNER JOIN t1 ON ((((t1.c2)IS(rt0.c2))) BETWEEN (((t1.c12)*(rt1.c1))) AND (0.9114444853334338)));
SELECT ALL COUNT(*) FROM rt0, rt1 INNER JOIN t1 ON ((((t1.c2)IS(rt0.c2))) BETWEEN (((t1.c12)*(rt1.c1))) AND (0.9114444853334338)) WHERE (((((((((((((rt0.c3)AND(t1.c39)))OR(rt0.c2)))AND(t1.c2)))OR(rt1.c2)))OR(((rt0.c3) ISNULL))))AND(((t1.c4) ISNULL))));
SELECT ALL * FROM rt1, t1 WHERE (CASE WHEN ((rt1.c2)AND(rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) ELSE ('503026017' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)AND(rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) ELSE ('503026017' IN ()) END) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (CASE WHEN ((rt1.c2)AND(rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) ELSE ('503026017' IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)AND(rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) ELSE ('503026017' IN ()) END) IS TRUE)  as count FROM rt1, t1);
SELECT ALL * FROM rt1, t1 WHERE (CASE WHEN ((rt1.c2)AND(rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c0)) AND ((NULL))) ELSE ('503026017' IN ()) END);
SELECT ALL * FROM rt1 INNER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC) WHERE (COALESCE(CAST(x'' AS NUMERIC), SQLITE_SOURCE_ID(), (((rt1.c6))==((rt1.c2))), rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(x'' AS NUMERIC), SQLITE_SOURCE_ID(), (((rt1.c6))=((rt1.c2))), rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC) WHERE (COALESCE(CAST(x'' AS NUMERIC), SQLITE_SOURCE_ID(), (((rt1.c6))==((rt1.c2))), rt0.c3 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(CAST(x'' AS NUMERIC), SQLITE_SOURCE_ID(), (((rt1.c6))=((rt1.c2))), rt0.c3 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON CAST(rt1.c2 AS NUMERIC) WHERE (COALESCE(CAST(x'' AS NUMERIC), SQLITE_SOURCE_ID(), (((rt1.c6))==((rt1.c2))), rt0.c3 COLLATE RTRIM));
SELECT ALL * FROM rt1 WHERE (json_object((rt1.c4 IN (rt1.c4)), (rt1.c5 IN (rt1.c2, rt1.c1)))) ORDER BY ((rt1.c3 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object((rt1.c4 IN (rt1.c4)), (rt1.c5 IN (rt1.c2, rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3 IN ()) IN ())  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (json_object((rt1.c4 IN (rt1.c4)), (rt1.c5 IN (rt1.c2, rt1.c1)))) ORDER BY ((rt1.c3 IN ()) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((json_object((rt1.c4 IN (rt1.c4)), (rt1.c5 IN (rt1.c2, rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3 IN ()) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c5 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c5 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5 COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (rt1.c5 COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c2)IS(rt1.c4))))!=(((('-2004109987') NOT BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)IS(rt1.c4))))<>(((('-2004109987') NOT BETWEEN (rt0.c3) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c2)IS(rt1.c4))))!=(((('-2004109987') NOT BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)IS(rt1.c4))))<>(((('-2004109987') NOT BETWEEN (rt0.c3) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1);
SELECT COUNT(*) FROM rt0, rt1 WHERE ((((((rt1.c2)IS(rt1.c4))))!=(((('-2004109987') NOT BETWEEN (rt0.c3) AND (rt0.c4))))));
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c3)))AND(x'2aa9')) AS INTEGER)) ORDER BY ((IFNULL(DISTINCT 0x5173c40f, rt0.c0))||('-1001723529')) ASC  NULLS FIRST, rt0.c1 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(rt0.c3)))AND(x'2aa9')) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(DISTINCT 0X5173c40f, rt0.c0))||('-1001723529')) ASC  NULLS FIRST, rt0.c1 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c3)))AND(x'2aa9')) AS INTEGER)) ORDER BY ((IFNULL(DISTINCT 0x5173c40f, rt0.c0))||('-1001723529')) ASC  NULLS FIRST, rt0.c1 COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((((rt0.c2)AND(rt0.c3)))AND(x'2aa9')) AS INTEGER)) IS TRUE)  as count FROM rt0 ORDER BY ((IFNULL(DISTINCT 0X5173c40f, rt0.c0))||('-1001723529')) ASC  NULLS FIRST, rt0.c1 COLLATE NOCASE DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CAST(((((rt0.c2)AND(rt0.c3)))AND(x'2aa9')) AS INTEGER)) ORDER BY ((IFNULL(DISTINCT 0x5173c40f, rt0.c0))||('-1001723529')) ASC  NULLS FIRST, rt0.c1 COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE CAST(t1.c2 AS NUMERIC)  WHEN ((rt1.c4)!=(rt0.c3)) THEN (NOT (rt1.c0)) WHEN CAST(rt1.c6 AS REAL) THEN ((((rt1.c1)OR(rt0.c1)))OR('54')) WHEN rt1.c6 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END END LEFT OUTER JOIN t1 ON load_extension(CAST(rt1.c4 AS NUMERIC)) WHERE (((CASE WHEN rt1.c4 THEN rt0.c0 END)OR(t1.c12 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c4 THEN rt0.c0 END)OR(t1.c12 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE CAST(t1.c2 AS NUMERIC)  WHEN ((rt1.c4)!=(rt0.c3)) THEN (NOT (rt1.c0)) WHEN CAST(rt1.c6 AS REAL) THEN ((((rt1.c1)OR(rt0.c1)))OR('54')) WHEN rt1.c6 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END END LEFT OUTER JOIN t1 ON load_extension(CAST(rt1.c4 AS NUMERIC)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE CAST(t1.c2 AS NUMERIC)  WHEN ((rt1.c4)!=(rt0.c3)) THEN (NOT (rt1.c0)) WHEN CAST(rt1.c6 AS REAL) THEN ((((rt1.c1)OR(rt0.c1)))OR('54')) WHEN rt1.c6 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END END LEFT OUTER JOIN t1 ON load_extension(CAST(rt1.c4 AS NUMERIC)) WHERE (((CASE WHEN rt1.c4 THEN rt0.c0 END)OR(t1.c12 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c4 THEN rt0.c0 END)OR(t1.c12 COLLATE RTRIM))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE CAST(t1.c2 AS NUMERIC)  WHEN ((rt1.c4)!=(rt0.c3)) THEN (NOT (rt1.c0)) WHEN CAST(rt1.c6 AS REAL) THEN ((((rt1.c1)OR(rt0.c1)))OR('54')) WHEN rt1.c6 COLLATE NOCASE THEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE rt1.c6 END END LEFT OUTER JOIN t1 ON load_extension(CAST(rt1.c4 AS NUMERIC)));
SELECT COUNT(*) FROM t1 WHERE (('-604421068' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-604421068' IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE (('-604421068' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-604421068' IN ())) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT COUNT(*) FROM t1 WHERE (('-604421068' IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN t1 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c3))<((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c3))<((rt1.c1))) END) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN t1 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c3))<((rt1.c1))) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c3))<((rt1.c1))) END) IS TRUE)  as count FROM rt0, rt1 NATURAL JOIN t1);
SELECT ALL COUNT(*) FROM rt0, rt1 NATURAL JOIN t1 WHERE (CASE WHEN CAST(rt0.c2 AS INTEGER) THEN (((rt0.c3))<((rt1.c1))) END);
SELECT * FROM rt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (rt1.c4);
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN t1.c2 THEN rt0.c4 WHEN t1.c12 THEN rt0.c3 END)<=(t1.c4)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN t1.c2 THEN rt0.c4 WHEN t1.c12 THEN rt0.c3 END)<=(t1.c4))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN t1.c2 THEN rt0.c4 WHEN t1.c12 THEN rt0.c3 END)<=(t1.c4)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN t1.c2 THEN rt0.c4 WHEN t1.c12 THEN rt0.c3 END)<=(t1.c4))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN t1.c2 THEN rt0.c4 WHEN t1.c12 THEN rt0.c3 END)<=(t1.c4)));
SELECT ALL * FROM rt0 WHERE ((((0x7947fd99))>((((rt0.c0)!=(rt0.c2)))))) ORDER BY -1.57485886E8 ASC;
SELECT SUM(count) FROM (SELECT (((((0x7947fd99))>((((rt0.c0)<>(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY -1.57485886E8 ASC);
SELECT ALL * FROM rt0 WHERE ((((0x7947fd99))>((((rt0.c0)!=(rt0.c2)))))) ORDER BY -1.57485886E8 ASC;
SELECT SUM(count) FROM (SELECT (((((0x7947fd99))>((((rt0.c0)<>(rt0.c2)))))) IS TRUE)  as count FROM rt0 ORDER BY -1.57485886E8 ASC);
SELECT ALL * FROM rt0 WHERE ((((0x7947fd99))>((((rt0.c0)!=(rt0.c2)))))) ORDER BY -1.57485886E8 ASC;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((('', t1.c12, t1.c12, t1.c12, t1.c2))<((t1.c12, t1.c4, t1.c39, t1.c2, t1.c4)))))<((CAST(t1.c12 AS TEXT))))) ORDER BY ((INSTR(-1401168732, t1.c2))LIKE((t1.c39 IN (t1.c4, t1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((('', t1.c12, t1.c12, t1.c12, t1.c2))<((t1.c12, t1.c4, t1.c39, t1.c2, t1.c4)))))<((CAST(t1.c12 AS TEXT))))) IS TRUE)  as count FROM t1 ORDER BY ((INSTR(-1401168732, t1.c2))LIKE((t1.c39 IN (t1.c4, t1.c4)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((('', t1.c12, t1.c12, t1.c12, t1.c2))<((t1.c12, t1.c4, t1.c39, t1.c2, t1.c4)))))<((CAST(t1.c12 AS TEXT))))) ORDER BY ((INSTR(-1401168732, t1.c2))LIKE((t1.c39 IN (t1.c4, t1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((('', t1.c12, t1.c12, t1.c12, t1.c2))<((t1.c12, t1.c4, t1.c39, t1.c2, t1.c4)))))<((CAST(t1.c12 AS TEXT))))) IS TRUE)  as count FROM t1 ORDER BY ((INSTR(-1401168732, t1.c2))LIKE((t1.c39 IN (t1.c4, t1.c4)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((('', t1.c12, t1.c12, t1.c12, t1.c2))<((t1.c12, t1.c4, t1.c39, t1.c2, t1.c4)))))<((CAST(t1.c12 AS TEXT))))) ORDER BY ((INSTR(-1401168732, t1.c2))LIKE((t1.c39 IN (t1.c4, t1.c4)))) ASC;
SELECT * FROM rt1 WHERE (((((IFNULL(DISTINCT rt1.c4, rt1.c0))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND(((rt1.c2)||(rt1.c0))))) ORDER BY ((rt1.c0)OR(((rt1.c5) NOT BETWEEN (0.3312993003632063) AND (rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(DISTINCT rt1.c4, rt1.c0))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND(((rt1.c2)||(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)OR(((rt1.c5) NOT BETWEEN (0.3312993003632063) AND (rt1.c3))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((((IFNULL(DISTINCT rt1.c4, rt1.c0))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND(((rt1.c2)||(rt1.c0))))) ORDER BY ((rt1.c0)OR(((rt1.c5) NOT BETWEEN (0.3312993003632063) AND (rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((IFNULL(DISTINCT rt1.c4, rt1.c0))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND(((rt1.c2)||(rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)OR(((rt1.c5) NOT BETWEEN (0.3312993003632063) AND (rt1.c3))))  NULLS LAST);
SELECT * FROM rt1 WHERE (((((IFNULL(DISTINCT rt1.c4, rt1.c0))AND(CASE WHEN rt1.c3 THEN rt1.c3 END)))AND(((rt1.c2)||(rt1.c0))))) ORDER BY ((rt1.c0)OR(((rt1.c5) NOT BETWEEN (0.3312993003632063) AND (rt1.c3))))  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((- (CAST(t1.c39 AS TEXT)))) ORDER BY (((NOT (t1.c4))) NOT BETWEEN ((t1.c2 IN ())) AND ((NOT (t1.c4)))) ASC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c39 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c4))) NOT BETWEEN ((t1.c2 IN ())) AND ((NOT (t1.c4)))) ASC  NULLS LAST, NULL DESC);
SELECT ALL * FROM t1 WHERE ((- (CAST(t1.c39 AS TEXT)))) ORDER BY (((NOT (t1.c4))) NOT BETWEEN ((t1.c2 IN ())) AND ((NOT (t1.c4)))) ASC  NULLS LAST, NULL DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c39 AS TEXT)))) IS TRUE)  as count FROM t1 ORDER BY (((NOT (t1.c4))) NOT BETWEEN ((t1.c2 IN ())) AND ((NOT (t1.c4)))) ASC  NULLS LAST, NULL DESC);
SELECT ALL * FROM t1 WHERE ((- (CAST(t1.c39 AS TEXT)))) ORDER BY (((NOT (t1.c4))) NOT BETWEEN ((t1.c2 IN ())) AND ((NOT (t1.c4)))) ASC  NULLS LAST, NULL DESC;
SELECT * FROM rt1, rt0, t1 WHERE ((((rt0.c0, t1.c12, rt1.c6)) BETWEEN ((rt1.c4, rt1.c5, rt1.c3)) AND ((rt1.c1, '-243459633', rt1.c1))) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t1.c12, rt1.c6)) BETWEEN ((rt1.c4, rt1.c5, rt1.c3)) AND ((rt1.c1, '-243459633', rt1.c1))) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE ((((rt0.c0, t1.c12, rt1.c6)) BETWEEN ((rt1.c4, rt1.c5, rt1.c3)) AND ((rt1.c1, '-243459633', rt1.c1))) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t1.c12, rt1.c6)) BETWEEN ((rt1.c4, rt1.c5, rt1.c3)) AND ((rt1.c1, '-243459633', rt1.c1))) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE ((((rt0.c0, t1.c12, rt1.c6)) BETWEEN ((rt1.c4, rt1.c5, rt1.c3)) AND ((rt1.c1, '-243459633', rt1.c1))) COLLATE NOCASE COLLATE NOCASE);
SELECT * FROM rt1 CROSS JOIN rt0 ON UNLIKELY(DISTINCT rt1.c5 COLLATE BINARY) INNER JOIN t1 ON CASE (((rt0.c1, rt0.c0, rt1.c5, t1.c39, rt0.c2)) BETWEEN ((rt1.c1, rt1.c4, t1.c39, rt1.c3, t1.c39)) AND ((rt0.c4, rt1.c3, rt0.c3, rt1.c3, rt0.c2)))  WHEN ((rt0.c4)||(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c0 AS NUMERIC) THEN (((t1.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c0, t1.c2, rt1.c5)) AND ((rt0.c1, rt0.c2, rt1.c2))) WHEN TYPEOF(rt1.c6) THEN ((((rt1.c2)OR(NULL)))AND(rt1.c0)) ELSE ((rt1.c1)LIKE(rt1.c1)) END WHERE (UNLIKELY(((t1.c2)>(t1.c4)))) ORDER BY t1.c39 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t1.c2)>(t1.c4)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON UNLIKELY(DISTINCT rt1.c5 COLLATE BINARY) INNER JOIN t1 ON CASE (((rt0.c1, rt0.c0, rt1.c5, t1.c39, rt0.c2)) BETWEEN ((rt1.c1, rt1.c4, t1.c39, rt1.c3, t1.c39)) AND ((rt0.c4, rt1.c3, rt0.c3, rt1.c3, rt0.c2)))  WHEN ((rt0.c4)||(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c0 AS NUMERIC) THEN (((t1.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c0, t1.c2, rt1.c5)) AND ((rt0.c1, rt0.c2, rt1.c2))) WHEN TYPEOF(rt1.c6) THEN ((((rt1.c2)OR(NULL)))AND(rt1.c0)) ELSE ((rt1.c1)LIKE(rt1.c1)) END ORDER BY t1.c39 DESC);
SELECT * FROM rt1 CROSS JOIN rt0 ON UNLIKELY(DISTINCT rt1.c5 COLLATE BINARY) INNER JOIN t1 ON CASE (((rt0.c1, rt0.c0, rt1.c5, t1.c39, rt0.c2)) BETWEEN ((rt1.c1, rt1.c4, t1.c39, rt1.c3, t1.c39)) AND ((rt0.c4, rt1.c3, rt0.c3, rt1.c3, rt0.c2)))  WHEN ((rt0.c4)||(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c0 AS NUMERIC) THEN (((t1.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c0, t1.c2, rt1.c5)) AND ((rt0.c1, rt0.c2, rt1.c2))) WHEN TYPEOF(rt1.c6) THEN ((((rt1.c2)OR(NULL)))AND(rt1.c0)) ELSE ((rt1.c1)LIKE(rt1.c1)) END WHERE (UNLIKELY(((t1.c2)>(t1.c4)))) ORDER BY t1.c39 DESC;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((t1.c2)>(t1.c4)))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON UNLIKELY(DISTINCT rt1.c5 COLLATE BINARY) INNER JOIN t1 ON CASE (((rt0.c1, rt0.c0, rt1.c5, t1.c39, rt0.c2)) BETWEEN ((rt1.c1, rt1.c4, t1.c39, rt1.c3, t1.c39)) AND ((rt0.c4, rt1.c3, rt0.c3, rt1.c3, rt0.c2)))  WHEN ((rt0.c4)||(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c0 AS NUMERIC) THEN (((t1.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c0, t1.c2, rt1.c5)) AND ((rt0.c1, rt0.c2, rt1.c2))) WHEN TYPEOF(rt1.c6) THEN ((((rt1.c2)OR(NULL)))AND(rt1.c0)) ELSE ((rt1.c1)LIKE(rt1.c1)) END ORDER BY t1.c39 DESC);
SELECT * FROM rt1 CROSS JOIN rt0 ON UNLIKELY(DISTINCT rt1.c5 COLLATE BINARY) INNER JOIN t1 ON CASE (((rt0.c1, rt0.c0, rt1.c5, t1.c39, rt0.c2)) BETWEEN ((rt1.c1, rt1.c4, t1.c39, rt1.c3, t1.c39)) AND ((rt0.c4, rt1.c3, rt0.c3, rt1.c3, rt0.c2)))  WHEN ((rt0.c4)||(rt1.c1)) THEN (rt1.c3 IN ()) WHEN CAST(rt1.c0 AS NUMERIC) THEN (((t1.c4, rt0.c4, rt0.c1)) BETWEEN ((rt0.c0, t1.c2, rt1.c5)) AND ((rt0.c1, rt0.c2, rt1.c2))) WHEN TYPEOF(rt1.c6) THEN ((((rt1.c2)OR(NULL)))AND(rt1.c0)) ELSE ((rt1.c1)LIKE(rt1.c1)) END WHERE (UNLIKELY(((t1.c2)>(t1.c4)))) ORDER BY t1.c39 DESC;
SELECT ALL * FROM t1 WHERE (LOWER((((NULL))<>((-4.3235461E7)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((NULL))<>((-4.3235461E7))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (LOWER((((NULL))<>((-4.3235461E7)))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((((NULL))<>((-4.3235461E7))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (LOWER((((NULL))<>((-4.3235461E7)))));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((CASE WHEN rt1.c3 THEN x'4c22' END) BETWEEN (((t1.c12)<=(t1.c12))) AND ((((t1.c2)) BETWEEN ((rt1.c6)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN x'4c22' END) BETWEEN (((t1.c12)<=(t1.c12))) AND ((((t1.c2)) BETWEEN ((rt1.c6)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((CASE WHEN rt1.c3 THEN x'4c22' END) BETWEEN (((t1.c12)<=(t1.c12))) AND ((((t1.c2)) BETWEEN ((rt1.c6)) AND ((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN x'4c22' END) BETWEEN (((t1.c12)<=(t1.c12))) AND ((((t1.c2)) BETWEEN ((rt1.c6)) AND ((rt1.c0)))))) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((CASE WHEN rt1.c3 THEN x'4c22' END) BETWEEN (((t1.c12)<=(t1.c12))) AND ((((t1.c2)) BETWEEN ((rt1.c6)) AND ((rt1.c0))))));
SELECT ALL * FROM rt1 WHERE (TRIM(CASE WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c1 END, (((x'', rt1.c0, 0x71db9f7e, rt1.c2, rt1.c5))>((rt1.c1, rt1.c5, rt1.c4, '', rt1.c3))))) ORDER BY (NOT (CAST(rt1.c4 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c1 END, (((x'', rt1.c0, 0x71db9f7e, rt1.c2, rt1.c5))>((rt1.c1, rt1.c5, rt1.c4, '', rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CAST(rt1.c4 AS INTEGER))) ASC);
SELECT ALL * FROM rt1 WHERE (TRIM(CASE WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c1 END, (((x'', rt1.c0, 0x71db9f7e, rt1.c2, rt1.c5))>((rt1.c1, rt1.c5, rt1.c4, '', rt1.c3))))) ORDER BY (NOT (CAST(rt1.c4 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(CASE WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c1 END, (((x'', rt1.c0, 0x71db9f7e, rt1.c2, rt1.c5))>((rt1.c1, rt1.c5, rt1.c4, '', rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CAST(rt1.c4 AS INTEGER))) ASC);
SELECT ALL * FROM rt1 WHERE (TRIM(CASE WHEN rt1.c0 THEN rt1.c6 ELSE rt1.c1 END, (((x'', rt1.c0, 0x71db9f7e, rt1.c2, rt1.c5))>((rt1.c1, rt1.c5, rt1.c4, '', rt1.c3))))) ORDER BY (NOT (CAST(rt1.c4 AS INTEGER))) ASC;
SELECT ALL * FROM t1 WHERE (t1.c12) ORDER BY ((((t1.c12) IS FALSE)) NOTNULL) ASC  NULLS FIRST, CASE WHEN CASE t1.c12  WHEN t1.c39 THEN t1.c2 END THEN ((t1.c39)-('1459059443')) WHEN (((t1.c4))>=((t1.c39))) THEN JULIANDAY(t1.c12, t1.c39, t1.c2, 0.30646178999345985, t1.c12, t1.c4, t1.c12) WHEN CAST(t1.c12 AS TEXT) THEN (+ (t1.c12)) END, ((t1.c39 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c12) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c12) IS FALSE)) NOTNULL) ASC  NULLS FIRST, CASE WHEN CASE t1.c12  WHEN t1.c39 THEN t1.c2 END THEN ((t1.c39)-('1459059443')) WHEN (((t1.c4))>=((t1.c39))) THEN JULIANDAY(t1.c12, t1.c39, t1.c2, 0.30646178999345985, t1.c12, t1.c4, t1.c12) WHEN CAST(t1.c12 AS TEXT) THEN (+ (t1.c12)) END, ((t1.c39 COLLATE RTRIM) ISNULL) DESC);
SELECT ALL * FROM t1 WHERE (t1.c12) ORDER BY ((((t1.c12) IS FALSE)) NOTNULL) ASC  NULLS FIRST, CASE WHEN CASE t1.c12  WHEN t1.c39 THEN t1.c2 END THEN ((t1.c39)-('1459059443')) WHEN (((t1.c4))>=((t1.c39))) THEN JULIANDAY(t1.c12, t1.c39, t1.c2, 0.30646178999345985, t1.c12, t1.c4, t1.c12) WHEN CAST(t1.c12 AS TEXT) THEN (+ (t1.c12)) END, ((t1.c39 COLLATE RTRIM) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c12) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c12) IS FALSE)) NOTNULL) ASC  NULLS FIRST, CASE WHEN CASE t1.c12  WHEN t1.c39 THEN t1.c2 END THEN ((t1.c39)-('1459059443')) WHEN (((t1.c4))>=((t1.c39))) THEN JULIANDAY(t1.c12, t1.c39, t1.c2, 0.30646178999345985, t1.c12, t1.c4, t1.c12) WHEN CAST(t1.c12 AS TEXT) THEN (+ (t1.c12)) END, ((t1.c39 COLLATE RTRIM) ISNULL) DESC);
SELECT ALL * FROM t1 WHERE (t1.c12) ORDER BY ((((t1.c12) IS FALSE)) NOTNULL) ASC  NULLS FIRST, CASE WHEN CASE t1.c12  WHEN t1.c39 THEN t1.c2 END THEN ((t1.c39)-('1459059443')) WHEN (((t1.c4))>=((t1.c39))) THEN JULIANDAY(t1.c12, t1.c39, t1.c2, 0.30646178999345985, t1.c12, t1.c4, t1.c12) WHEN CAST(t1.c12 AS TEXT) THEN (+ (t1.c12)) END, ((t1.c39 COLLATE RTRIM) ISNULL) DESC;
SELECT ALL * FROM t1 WHERE (((((((t1.c4)%(t1.c2)))OR(CAST(t1.c2 AS NUMERIC))))AND(json_extract(t1.c12, t1.c39))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c4)%(t1.c2)))OR(CAST(t1.c2 AS NUMERIC))))AND(json_extract(t1.c12, t1.c39)))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL * FROM t1 WHERE (((((((t1.c4)%(t1.c2)))OR(CAST(t1.c2 AS NUMERIC))))AND(json_extract(t1.c12, t1.c39))));
SELECT SUM(count) FROM (SELECT ((((((((t1.c4)%(t1.c2)))OR(CAST(t1.c2 AS NUMERIC))))AND(json_extract(t1.c12, t1.c39)))) IS TRUE)  as count FROM t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'af8a8d64' WHERE (rt1.c6) ORDER BY rt1.c0, (((rt0.c4 IN (rt1.c2)))+(((rt1.c4)<=(rt1.c4)))) DESC  NULLS FIRST, rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c6) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'af8a8d64' ORDER BY rt1.c0, (((rt0.c4 IN (rt1.c2)))+(((rt1.c4)<=(rt1.c4)))) DESC  NULLS FIRST, rt1.c2);
SELECT ALL COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'af8a8d64' WHERE (rt1.c6) ORDER BY rt1.c0, (((rt0.c4 IN (rt1.c2)))+(((rt1.c4)<=(rt1.c4)))) DESC  NULLS FIRST, rt1.c2;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c6) IS TRUE)  as count FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'af8a8d64' ORDER BY rt1.c0, (((rt0.c4 IN (rt1.c2)))+(((rt1.c4)<=(rt1.c4)))) DESC  NULLS FIRST, rt1.c2);
SELECT ALL COUNT(*) FROM rt1, t1 LEFT OUTER JOIN rt0 ON x'af8a8d64' WHERE (rt1.c6) ORDER BY rt1.c0, (((rt0.c4 IN (rt1.c2)))+(((rt1.c4)<=(rt1.c4)))) DESC  NULLS FIRST, rt1.c2;
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((ABS(rt1.c0))>>(CASE WHEN t1.c4 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c0 END)) WHERE (t1.c12);
SELECT SUM(count) FROM (SELECT ((t1.c12) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((ABS(rt1.c0))>>(CASE WHEN t1.c4 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((ABS(rt1.c0))>>(CASE WHEN t1.c4 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c0 END)) WHERE (t1.c12);
SELECT SUM(count) FROM (SELECT ((t1.c12) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((ABS(rt1.c0))>>(CASE WHEN t1.c4 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c0 END)));
SELECT COUNT(*) FROM rt1, rt0 LEFT OUTER JOIN t1 ON ((ABS(rt1.c0))>>(CASE WHEN t1.c4 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c0 END)) WHERE (t1.c12);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((((t1.c39) BETWEEN (rt1.c4) AND (rt1.c2)))AND(STRFTIME(t1.c2, t1.c2, rt1.c0)))) ORDER BY t1.c4 DESC  NULLS LAST, (~ ((+ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c39) BETWEEN (rt1.c4) AND (rt1.c2)))AND(STRFTIME(t1.c2, t1.c2, rt1.c0)))) IS TRUE)  as count FROM rt0, t1, rt1 NOT INDEXED ORDER BY t1.c4 DESC  NULLS LAST, (~ ((+ (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((((t1.c39) BETWEEN (rt1.c4) AND (rt1.c2)))AND(STRFTIME(t1.c2, t1.c2, rt1.c0)))) ORDER BY t1.c4 DESC  NULLS LAST, (~ ((+ (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c39) BETWEEN (rt1.c4) AND (rt1.c2)))AND(STRFTIME(t1.c2, t1.c2, rt1.c0)))) IS TRUE)  as count FROM rt0, t1, rt1 NOT INDEXED ORDER BY t1.c4 DESC  NULLS LAST, (~ ((+ (rt0.c1)))) ASC);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (((((t1.c39) BETWEEN (rt1.c4) AND (rt1.c2)))AND(STRFTIME(t1.c2, t1.c2, rt1.c0)))) ORDER BY t1.c4 DESC  NULLS LAST, (~ ((+ (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t1, rt0, rt1 NOT INDEXED WHERE (CASE NULL  WHEN 'xMay+崃pF' THEN '317574433' ELSE 0X22e0dbb4 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN 'xMay+崃pF' THEN '317574433' ELSE 0x22e0dbb4 END COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 NOT INDEXED WHERE (CASE NULL  WHEN 'xMay+崃pF' THEN '317574433' ELSE 0X22e0dbb4 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN 'xMay+崃pF' THEN '317574433' ELSE 0x22e0dbb4 END COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 NOT INDEXED WHERE (CASE NULL  WHEN 'xMay+崃pF' THEN '317574433' ELSE 0X22e0dbb4 END COLLATE RTRIM);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON JULIANDAY(((rt1.c6)IS NOT(rt1.c0)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c5 THEN t1.c39 WHEN rt1.c3 THEN t1.c2 ELSE rt1.c3 END, t1.c39 COLLATE BINARY) WHERE ((~ (((rt1.c1) ISNULL)))) ORDER BY ((NOT (rt1.c0)) IN (t1.c2));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON JULIANDAY(((rt1.c6)IS NOT(rt1.c0)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c5 THEN t1.c39 WHEN rt1.c3 THEN t1.c2 ELSE rt1.c3 END, t1.c39 COLLATE BINARY) ORDER BY ((NOT (rt1.c0)) IN (t1.c2)));
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON JULIANDAY(((rt1.c6)IS NOT(rt1.c0)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c5 THEN t1.c39 WHEN rt1.c3 THEN t1.c2 ELSE rt1.c3 END, t1.c39 COLLATE BINARY) WHERE ((~ (((rt1.c1) ISNULL)))) ORDER BY ((NOT (rt1.c0)) IN (t1.c2));
SELECT SUM(count) FROM (SELECT (((~ (((rt1.c1) ISNULL)))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON JULIANDAY(((rt1.c6)IS NOT(rt1.c0)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c5 THEN t1.c39 WHEN rt1.c3 THEN t1.c2 ELSE rt1.c3 END, t1.c39 COLLATE BINARY) ORDER BY ((NOT (rt1.c0)) IN (t1.c2)));
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON JULIANDAY(((rt1.c6)IS NOT(rt1.c0)), CASE WHEN NULL THEN rt1.c5 WHEN rt1.c5 THEN t1.c39 WHEN rt1.c3 THEN t1.c2 ELSE rt1.c3 END, t1.c39 COLLATE BINARY) WHERE ((~ (((rt1.c1) ISNULL)))) ORDER BY ((NOT (rt1.c0)) IN (t1.c2));
SELECT ALL * FROM rt0, t1, rt1 WHERE (((CASE t1.c2  WHEN rt1.c1 THEN rt1.c1 END)<=(rt1.c6 COLLATE BINARY))) ORDER BY TYPEOF(DISTINCT (- (t1.c12)));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c2  WHEN rt1.c1 THEN rt1.c1 END)<=(rt1.c6 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY TYPEOF(DISTINCT (- (t1.c12))));
SELECT ALL * FROM rt0, t1, rt1 WHERE (((CASE t1.c2  WHEN rt1.c1 THEN rt1.c1 END)<=(rt1.c6 COLLATE BINARY))) ORDER BY TYPEOF(DISTINCT (- (t1.c12)));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c2  WHEN rt1.c1 THEN rt1.c1 END)<=(rt1.c6 COLLATE BINARY))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY TYPEOF(DISTINCT (- (t1.c12))));
SELECT ALL * FROM rt0, t1, rt1 WHERE (((CASE t1.c2  WHEN rt1.c1 THEN rt1.c1 END)<=(rt1.c6 COLLATE BINARY))) ORDER BY TYPEOF(DISTINCT (- (t1.c12)));
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (COALESCE(DISTINCT (((rt1.c0))==((t1.c4))), rt1.c4));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt1.c0))==((t1.c4))), rt1.c4)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (COALESCE(DISTINCT (((rt1.c0))==((t1.c4))), rt1.c4));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt1.c0))==((t1.c4))), rt1.c4)) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (COALESCE(DISTINCT (((rt1.c0))==((t1.c4))), rt1.c4));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c1, rt1.c1, rt1.c4)) BETWEEN (((((rt0.c4, rt1.c3, 215088697))!=((rt1.c6, rt0.c3, rt1.c3))), ((((((((rt0.c2)OR(rt1.c3)))OR('')))OR(rt1.c6)))OR(rt0.c4)), ((((rt1.c5)OR(rt1.c5)))OR(rt0.c0)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((rt0.c4)AND(rt1.c1)))AND(rt1.c1)), ((rt0.c1)*(rt0.c0))))) WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt1.c6)+(rt1.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt1.c6)+(rt1.c5)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c1, rt1.c1, rt1.c4)) BETWEEN (((((rt0.c4, rt1.c3, 215088697))<>((rt1.c6, rt0.c3, rt1.c3))), ((((((((rt0.c2)OR(rt1.c3)))OR('')))OR(rt1.c6)))OR(rt0.c4)), ((((rt1.c5)OR(rt1.c5)))OR(rt0.c0)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((rt0.c4)AND(rt1.c1)))AND(rt1.c1)), ((rt0.c1)*(rt0.c0))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c1, rt1.c1, rt1.c4)) BETWEEN (((((rt0.c4, rt1.c3, 215088697))!=((rt1.c6, rt0.c3, rt1.c3))), ((((((((rt0.c2)OR(rt1.c3)))OR('')))OR(rt1.c6)))OR(rt0.c4)), ((((rt1.c5)OR(rt1.c5)))OR(rt0.c0)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((rt0.c4)AND(rt1.c1)))AND(rt1.c1)), ((rt0.c1)*(rt0.c0))))) WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt1.c6)+(rt1.c5)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt1.c6)+(rt1.c5)) END) IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c1, rt1.c1, rt1.c4)) BETWEEN (((((rt0.c4, rt1.c3, 215088697))<>((rt1.c6, rt0.c3, rt1.c3))), ((((((((rt0.c2)OR(rt1.c3)))OR('')))OR(rt1.c6)))OR(rt0.c4)), ((((rt1.c5)OR(rt1.c5)))OR(rt0.c0)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((rt0.c4)AND(rt1.c1)))AND(rt1.c1)), ((rt0.c1)*(rt0.c0))))));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (((rt0.c1, rt1.c1, rt1.c4)) BETWEEN (((((rt0.c4, rt1.c3, 215088697))!=((rt1.c6, rt0.c3, rt1.c3))), ((((((((rt0.c2)OR(rt1.c3)))OR('')))OR(rt1.c6)))OR(rt0.c4)), ((((rt1.c5)OR(rt1.c5)))OR(rt0.c0)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)), ((((rt0.c4)AND(rt1.c1)))AND(rt1.c1)), ((rt0.c1)*(rt0.c0))))) WHERE (CASE WHEN ((((rt0.c1)OR(rt0.c4)))OR(rt0.c4)) THEN ((rt1.c6)+(rt1.c5)) END);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (x'7342') ORDER BY '1690905517' ASC, (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))))+((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'7342') IS TRUE)  as count FROM rt1, t1 ORDER BY '1690905517' ASC, (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))))+((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (x'7342') ORDER BY '1690905517' ASC, (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))))+((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'7342') IS TRUE)  as count FROM rt1, t1 ORDER BY '1690905517' ASC, (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))))+((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) DESC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (x'7342') ORDER BY '1690905517' ASC, (((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c4))))+((((rt1.c6)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) DESC;
SELECT * FROM rt0, t1 WHERE (((t1.c39) NOT NULL) COLLATE BINARY) ORDER BY ((((((((((t1.c2)OR(t1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c39)))IS NOT(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(t1.c12)))AND(t1.c12))))  NULLS LAST, ((0.8250294132777848)>(t1.c12 COLLATE RTRIM))  NULLS LAST, ((rt0.c3) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c39) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((((((t1.c2)OR(t1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c39)))IS NOT(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(t1.c12)))AND(t1.c12))))  NULLS LAST, ((0.8250294132777848)>(t1.c12 COLLATE RTRIM))  NULLS LAST, ((rt0.c3) IS TRUE));
SELECT * FROM rt0, t1 WHERE (((t1.c39) NOT NULL) COLLATE BINARY) ORDER BY ((((((((((t1.c2)OR(t1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c39)))IS NOT(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(t1.c12)))AND(t1.c12))))  NULLS LAST, ((0.8250294132777848)>(t1.c12 COLLATE RTRIM))  NULLS LAST, ((rt0.c3) IS TRUE);
SELECT SUM(count) FROM (SELECT ALL ((((t1.c39) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0, t1 ORDER BY ((((((((((t1.c2)OR(t1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c39)))IS NOT(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(t1.c12)))AND(t1.c12))))  NULLS LAST, ((0.8250294132777848)>(t1.c12 COLLATE RTRIM))  NULLS LAST, ((rt0.c3) IS TRUE));
SELECT * FROM rt0, t1 WHERE (((t1.c39) NOT NULL) COLLATE BINARY) ORDER BY ((((((((((t1.c2)OR(t1.c2)))OR(rt0.c4)))AND(rt0.c0)))AND(t1.c39)))IS NOT(((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c0)))OR(t1.c12)))AND(t1.c12))))  NULLS LAST, ((0.8250294132777848)>(t1.c12 COLLATE RTRIM))  NULLS LAST, ((rt0.c3) IS TRUE);
SELECT * FROM rt0 WHERE (((rt0.c2)&(UNLIKELY(0.2019857582611777)))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)&(UNLIKELY(0.2019857582611777)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c2)&(UNLIKELY(0.2019857582611777)))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)&(UNLIKELY(0.2019857582611777)))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((rt0.c2)&(UNLIKELY(0.2019857582611777)))) ORDER BY ((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE RTRIM ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c39) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c39) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c39) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((t1.c39) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c39) BETWEEN (t1.c2) AND (t1.c2)))));
SELECT * FROM rt1 WHERE (CASE ((rt1.c4) ISNULL)  WHEN ((rt1.c4)>>(NULL)) THEN rt1.c6 COLLATE RTRIM WHEN ((rt1.c5) ISNULL) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN x'84e6' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c1)) WHEN rt1.c5 THEN ((NULL) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4) ISNULL)  WHEN ((rt1.c4)>>(NULL)) THEN rt1.c6 COLLATE RTRIM WHEN ((rt1.c5) ISNULL) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN x'84e6' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c1)) WHEN rt1.c5 THEN ((NULL) IS FALSE) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c4) ISNULL)  WHEN ((rt1.c4)>>(NULL)) THEN rt1.c6 COLLATE RTRIM WHEN ((rt1.c5) ISNULL) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN x'84e6' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c1)) WHEN rt1.c5 THEN ((NULL) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c4) ISNULL)  WHEN ((rt1.c4)>>(NULL)) THEN rt1.c6 COLLATE RTRIM WHEN ((rt1.c5) ISNULL) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN x'84e6' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c1)) WHEN rt1.c5 THEN ((NULL) IS FALSE) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE ((rt1.c4) ISNULL)  WHEN ((rt1.c4)>>(NULL)) THEN rt1.c6 COLLATE RTRIM WHEN ((rt1.c5) ISNULL) THEN (rt1.c4 IN ()) WHEN ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)) THEN CAST(rt1.c0 AS REAL) WHEN x'84e6' THEN ((((rt1.c0)AND(rt1.c3)))OR(rt1.c1)) WHEN rt1.c5 THEN ((NULL) IS FALSE) END);
SELECT COUNT(*) FROM rt1, rt0 WHERE (IFNULL(((rt0.c4) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c6)))) ORDER BY ((((-1.07990339E9)AND(((rt1.c2) NOTNULL))))OR(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST, 0Xffffffffd4b0c52e ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c4) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c6)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((-1.07990339E9)AND(((rt1.c2) NOTNULL))))OR(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST, 0Xffffffffd4b0c52e ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (IFNULL(((rt0.c4) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c6)))) ORDER BY ((((-1.07990339E9)AND(((rt1.c2) NOTNULL))))OR(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST, 0Xffffffffd4b0c52e ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(((rt0.c4) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c6)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((((-1.07990339E9)AND(((rt1.c2) NOTNULL))))OR(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST, 0Xffffffffd4b0c52e ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (IFNULL(((rt0.c4) BETWEEN (rt1.c4) AND (rt1.c2)), ((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c6)))) ORDER BY ((((-1.07990339E9)AND(((rt1.c2) NOTNULL))))OR(CAST(rt0.c1 AS REAL))) DESC  NULLS FIRST, 0Xffffffffd4b0c52e ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((((rt1.c3) IS TRUE))%(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((((rt1.c3) IS TRUE))%(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) IS TRUE))%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (((((rt1.c3) IS TRUE))%(CAST(rt0.c0 AS INTEGER))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON ((((t1.c39) ISNULL))*((+ (t1.c4)))) WHERE (LIKELY(DISTINCT (- (t1.c12))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (t1.c12)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((t1.c39) ISNULL))*((+ (t1.c4)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON ((((t1.c39) ISNULL))*((+ (t1.c4)))) WHERE (LIKELY(DISTINCT (- (t1.c12))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT (- (t1.c12)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON ((((t1.c39) ISNULL))*((+ (t1.c4)))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN t1 ON ((((t1.c39) ISNULL))*((+ (t1.c4)))) WHERE (LIKELY(DISTINCT (- (t1.c12))));
SELECT ALL * FROM t1 WHERE (0.36561307154873124);
SELECT SUM(count) FROM (SELECT ((0.36561307154873124) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (0.36561307154873124);
SELECT SUM(count) FROM (SELECT ((0.36561307154873124) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (0.36561307154873124);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT NULL))/(UNLIKELY(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT NULL))/(UNLIKELY(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT NULL))/(UNLIKELY(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOT NULL))/(UNLIKELY(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOT NULL))/(UNLIKELY(rt0.c4))));
SELECT * FROM t1, rt1 WHERE (CAST((((rt1.c4, rt1.c6, 'x㣍䰻fsAE')) NOT BETWEEN ((t1.c39, 0.32557972137915914, rt1.c5)) AND ((t1.c39, rt1.c0, rt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c4, rt1.c6, 'x㣍䰻fsAE')) NOT BETWEEN ((t1.c39, 0.32557972137915914, rt1.c5)) AND ((t1.c39, rt1.c0, rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CAST((((rt1.c4, rt1.c6, 'x㣍䰻fsAE')) NOT BETWEEN ((t1.c39, 0.32557972137915914, rt1.c5)) AND ((t1.c39, rt1.c0, rt1.c0))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c4, rt1.c6, 'x㣍䰻fsAE')) NOT BETWEEN ((t1.c39, 0.32557972137915914, rt1.c5)) AND ((t1.c39, rt1.c0, rt1.c0))) AS NUMERIC)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (CAST((((rt1.c4, rt1.c6, 'x㣍䰻fsAE')) NOT BETWEEN ((t1.c39, 0.32557972137915914, rt1.c5)) AND ((t1.c39, rt1.c0, rt1.c0))) AS NUMERIC));
SELECT ALL * FROM t1 WHERE (((((t1.c12, t1.c39, t1.c4)) BETWEEN ((t1.c2, t1.c2, t1.c12)) AND ((t1.c12, t1.c39, t1.c12))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c12, t1.c39, t1.c4)) BETWEEN ((t1.c2, t1.c2, t1.c12)) AND ((t1.c12, t1.c39, t1.c12))) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c12, t1.c39, t1.c4)) BETWEEN ((t1.c2, t1.c2, t1.c12)) AND ((t1.c12, t1.c39, t1.c12))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c12, t1.c39, t1.c4)) BETWEEN ((t1.c2, t1.c2, t1.c12)) AND ((t1.c12, t1.c39, t1.c12))) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c12, t1.c39, t1.c4)) BETWEEN ((t1.c2, t1.c2, t1.c12)) AND ((t1.c12, t1.c39, t1.c12))) IN ()));
SELECT ALL * FROM t1 WHERE ((((((~ (t1.c4)))AND((- (t1.c4)))))OR((((t1.c12)) BETWEEN ((t1.c4)) AND ((t1.c2)))))) ORDER BY CASE ((0.5523755321469519)IS NOT(t1.c12))  WHEN CAST(t1.c2 AS TEXT) THEN ((t1.c2)OR(t1.c4)) WHEN ((t1.c39) NOT BETWEEN (t1.c12) AND (t1.c2)) THEN 0X23c43d7f WHEN x'efb2' THEN (t1.c2 IN (t1.c2)) WHEN (+ (t1.c39)) THEN (t1.c39 IN (t1.c4, t1.c2)) WHEN CAST(t1.c4 AS REAL) THEN (t1.c39 IN ()) ELSE ((t1.c12)LIKE(t1.c12)) END  NULLS LAST, CASE ((((t1.c4)AND(t1.c4)))OR(0.5834015560822609))  WHEN CASE t1.c2  WHEN t1.c39 THEN t1.c12 ELSE t1.c12 END THEN t1.c2 WHEN t1.c2 COLLATE NOCASE THEN (t1.c2 IN (t1.c39)) WHEN (+ (t1.c4)) THEN (((x'')) NOT BETWEEN ((t1.c39)) AND ((t1.c4))) ELSE CASE t1.c39  WHEN t1.c12 THEN t1.c12 END END;
SELECT SUM(count) FROM (SELECT (((((((~ (t1.c4)))AND((- (t1.c4)))))OR((((t1.c12)) BETWEEN ((t1.c4)) AND ((t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((0.5523755321469519)IS NOT(t1.c12))  WHEN CAST(t1.c2 AS TEXT) THEN ((t1.c2)OR(t1.c4)) WHEN ((t1.c39) NOT BETWEEN (t1.c12) AND (t1.c2)) THEN 0x23c43d7f WHEN x'efb2' THEN (t1.c2 IN (t1.c2)) WHEN (+ (t1.c39)) THEN (t1.c39 IN (t1.c4, t1.c2)) WHEN CAST(t1.c4 AS REAL) THEN (t1.c39 IN ()) ELSE ((t1.c12)LIKE(t1.c12)) END  NULLS LAST, CASE ((((t1.c4)AND(t1.c4)))OR(0.5834015560822609))  WHEN CASE t1.c2  WHEN t1.c39 THEN t1.c12 ELSE t1.c12 END THEN t1.c2 WHEN t1.c2 COLLATE NOCASE THEN (t1.c2 IN (t1.c39)) WHEN (+ (t1.c4)) THEN (((x'')) NOT BETWEEN ((t1.c39)) AND ((t1.c4))) ELSE CASE t1.c39  WHEN t1.c12 THEN t1.c12 END END);
SELECT ALL * FROM t1 WHERE ((((((~ (t1.c4)))AND((- (t1.c4)))))OR((((t1.c12)) BETWEEN ((t1.c4)) AND ((t1.c2)))))) ORDER BY CASE ((0.5523755321469519)IS NOT(t1.c12))  WHEN CAST(t1.c2 AS TEXT) THEN ((t1.c2)OR(t1.c4)) WHEN ((t1.c39) NOT BETWEEN (t1.c12) AND (t1.c2)) THEN 0X23c43d7f WHEN x'efb2' THEN (t1.c2 IN (t1.c2)) WHEN (+ (t1.c39)) THEN (t1.c39 IN (t1.c4, t1.c2)) WHEN CAST(t1.c4 AS REAL) THEN (t1.c39 IN ()) ELSE ((t1.c12)LIKE(t1.c12)) END  NULLS LAST, CASE ((((t1.c4)AND(t1.c4)))OR(0.5834015560822609))  WHEN CASE t1.c2  WHEN t1.c39 THEN t1.c12 ELSE t1.c12 END THEN t1.c2 WHEN t1.c2 COLLATE NOCASE THEN (t1.c2 IN (t1.c39)) WHEN (+ (t1.c4)) THEN (((x'')) NOT BETWEEN ((t1.c39)) AND ((t1.c4))) ELSE CASE t1.c39  WHEN t1.c12 THEN t1.c12 END END;
SELECT SUM(count) FROM (SELECT (((((((~ (t1.c4)))AND((- (t1.c4)))))OR((((t1.c12)) BETWEEN ((t1.c4)) AND ((t1.c2)))))) IS TRUE)  as count FROM t1 ORDER BY CASE ((0.5523755321469519)IS NOT(t1.c12))  WHEN CAST(t1.c2 AS TEXT) THEN ((t1.c2)OR(t1.c4)) WHEN ((t1.c39) NOT BETWEEN (t1.c12) AND (t1.c2)) THEN 0x23c43d7f WHEN x'efb2' THEN (t1.c2 IN (t1.c2)) WHEN (+ (t1.c39)) THEN (t1.c39 IN (t1.c4, t1.c2)) WHEN CAST(t1.c4 AS REAL) THEN (t1.c39 IN ()) ELSE ((t1.c12)LIKE(t1.c12)) END  NULLS LAST, CASE ((((t1.c4)AND(t1.c4)))OR(0.5834015560822609))  WHEN CASE t1.c2  WHEN t1.c39 THEN t1.c12 ELSE t1.c12 END THEN t1.c2 WHEN t1.c2 COLLATE NOCASE THEN (t1.c2 IN (t1.c39)) WHEN (+ (t1.c4)) THEN (((x'')) NOT BETWEEN ((t1.c39)) AND ((t1.c4))) ELSE CASE t1.c39  WHEN t1.c12 THEN t1.c12 END END);
SELECT ALL * FROM t1 WHERE ((((((~ (t1.c4)))AND((- (t1.c4)))))OR((((t1.c12)) BETWEEN ((t1.c4)) AND ((t1.c2)))))) ORDER BY CASE ((0.5523755321469519)IS NOT(t1.c12))  WHEN CAST(t1.c2 AS TEXT) THEN ((t1.c2)OR(t1.c4)) WHEN ((t1.c39) NOT BETWEEN (t1.c12) AND (t1.c2)) THEN 0X23c43d7f WHEN x'efb2' THEN (t1.c2 IN (t1.c2)) WHEN (+ (t1.c39)) THEN (t1.c39 IN (t1.c4, t1.c2)) WHEN CAST(t1.c4 AS REAL) THEN (t1.c39 IN ()) ELSE ((t1.c12)LIKE(t1.c12)) END  NULLS LAST, CASE ((((t1.c4)AND(t1.c4)))OR(0.5834015560822609))  WHEN CASE t1.c2  WHEN t1.c39 THEN t1.c12 ELSE t1.c12 END THEN t1.c2 WHEN t1.c2 COLLATE NOCASE THEN (t1.c2 IN (t1.c39)) WHEN (+ (t1.c4)) THEN (((x'')) NOT BETWEEN ((t1.c39)) AND ((t1.c4))) ELSE CASE t1.c39  WHEN t1.c12 THEN t1.c12 END END;
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (x'') ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY '' ASC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (x'') ORDER BY '' ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY '' ASC);
SELECT ALL COUNT(*) FROM rt0, t1, rt1 WHERE (x'') ORDER BY '' ASC;
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((((('1602837268')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) AND (((NOT (rt0.c4)))))) ORDER BY ((CASE WHEN rt1.c6 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((('1602837268')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) AND (((NOT (rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE WHEN rt1.c6 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((((('1602837268')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) AND (((NOT (rt0.c4)))))) ORDER BY ((CASE WHEN rt1.c6 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1)) BETWEEN ((((('1602837268')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) AND (((NOT (rt0.c4)))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY ((CASE WHEN rt1.c6 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE ((((rt0.c1)) BETWEEN ((((('1602837268')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) AND (((NOT (rt0.c4)))))) ORDER BY ((CASE WHEN rt1.c6 THEN rt0.c0 ELSE rt0.c2 END) NOT NULL)  NULLS FIRST;
SELECT * FROM rt0, t1, rt1 WHERE (rt1.c2) ORDER BY ((CAST(rt1.c5 AS BLOB))&((t1.c12 IN (t1.c39)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((CAST(rt1.c5 AS BLOB))&((t1.c12 IN (t1.c39)))) DESC  NULLS LAST);
SELECT * FROM rt0, t1, rt1 WHERE (rt1.c2) ORDER BY ((CAST(rt1.c5 AS BLOB))&((t1.c12 IN (t1.c39)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((CAST(rt1.c5 AS BLOB))&((t1.c12 IN (t1.c39)))) DESC  NULLS LAST);
SELECT * FROM rt0, t1, rt1 WHERE (rt1.c2) ORDER BY ((CAST(rt1.c5 AS BLOB))&((t1.c12 IN (t1.c39)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS REAL)) ORDER BY ((((((((((x'')<=(rt0.c4)))AND(((rt0.c4)+(rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c3 IN ()))))AND(((rt0.c3) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((x'')<=(rt0.c4)))AND(((rt0.c4)+(rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c3 IN ()))))AND(((rt0.c3) IS FALSE))));
SELECT COUNT(*) FROM rt0 WHERE (CAST(((rt0.c2) NOT NULL) AS REAL)) ORDER BY ((((((((((x'')<=(rt0.c4)))AND(((rt0.c4)+(rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c3 IN ()))))AND(((rt0.c3) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY ((((((((((x'')<=(rt0.c4)))AND(((rt0.c4)+(rt0.c0)))))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c2 END)))AND((rt0.c3 IN ()))))AND(((rt0.c3) IS FALSE))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) ORDER BY rt0.c2 DESC, (((rt0.c4)IS(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, (((rt0.c4)IS(rt0.c3)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) ORDER BY rt0.c2 DESC, (((rt0.c4)IS(rt0.c3)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE NOCASE) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC, (((rt0.c4)IS(rt0.c3)) IN ()) ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE NOCASE) ISNULL)) ORDER BY rt0.c2 DESC, (((rt0.c4)IS(rt0.c3)) IN ()) ASC;
SELECT * FROM t1, rt1 NOT INDEXED WHERE ((NOT (rt1.c1))) ORDER BY ((t1.c2) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1))) IS TRUE)  as count FROM t1, rt1 ORDER BY ((t1.c2) NOT NULL) COLLATE RTRIM);
SELECT * FROM t1, rt1 NOT INDEXED WHERE ((NOT (rt1.c1))) ORDER BY ((t1.c2) NOT NULL) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt1.c1))) IS TRUE)  as count FROM t1, rt1 ORDER BY ((t1.c2) NOT NULL) COLLATE RTRIM);
SELECT * FROM t1, rt1 NOT INDEXED WHERE ((NOT (rt1.c1))) ORDER BY ((t1.c2) NOT NULL) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN t1.c2 WHEN rt1.c3 THEN rt0.c1 ELSE NULL END))<>(((- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN t1.c2 WHEN rt1.c3 THEN rt0.c1 ELSE NULL END))!=(((- (rt0.c2)))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN t1.c2 WHEN rt1.c3 THEN rt0.c1 ELSE NULL END))<>(((- (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN t1.c2 WHEN rt1.c3 THEN rt0.c1 ELSE NULL END))!=(((- (rt0.c2)))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((((CASE WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c4 THEN t1.c2 WHEN rt1.c3 THEN rt0.c1 ELSE NULL END))<>(((- (rt0.c2))))));
SELECT * FROM rt0, rt1 WHERE ((((~ (NULL)))|((+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((~ (NULL)))|((+ (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((~ (NULL)))|((+ (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((((~ (NULL)))|((+ (rt1.c3))))) IS TRUE)  as count FROM rt0, rt1);
SELECT * FROM rt0, rt1 WHERE ((((~ (NULL)))|((+ (rt1.c3)))));
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (RTRIM('l䓀'));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM('l䓀')) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (RTRIM('l䓀'));
SELECT SUM(count) FROM (SELECT ALL ((RTRIM('l䓀')) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE (RTRIM('l䓀'));
SELECT * FROM rt0, t1 INNER JOIN rt1 ON COALESCE(DISTINCT ((((rt1.c6)OR(t1.c2)))OR(rt0.c1)), CAST(rt1.c0 AS NUMERIC), ((t1.c2)IS NOT(rt1.c0)), ((rt1.c3)IS NOT(t1.c4))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt0, t1 INNER JOIN rt1 ON COALESCE(DISTINCT ((((rt1.c6)OR(t1.c2)))OR(rt0.c1)), CAST(rt1.c0 AS NUMERIC), ((t1.c2)IS NOT(rt1.c0)), ((rt1.c3)IS NOT(t1.c4))));
SELECT * FROM rt0, t1 INNER JOIN rt1 ON COALESCE(DISTINCT ((((rt1.c6)OR(t1.c2)))OR(rt0.c1)), CAST(rt1.c0 AS NUMERIC), ((t1.c2)IS NOT(rt1.c0)), ((rt1.c3)IS NOT(t1.c4))) WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM rt0, t1 INNER JOIN rt1 ON COALESCE(DISTINCT ((((rt1.c6)OR(t1.c2)))OR(rt0.c1)), CAST(rt1.c0 AS NUMERIC), ((t1.c2)IS NOT(rt1.c0)), ((rt1.c3)IS NOT(t1.c4))));
SELECT * FROM rt0, t1 INNER JOIN rt1 ON COALESCE(DISTINCT ((((rt1.c6)OR(t1.c2)))OR(rt0.c1)), CAST(rt1.c0 AS NUMERIC), ((t1.c2)IS NOT(rt1.c0)), ((rt1.c3)IS NOT(t1.c4))) WHERE ((NULL IN ()));
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((rt0.c0 IN (rt0.c2, rt0.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2, rt0.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c0))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((rt0.c0 IN (rt0.c2, rt0.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (rt0.c2, rt0.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c0))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((rt0.c0 IN (rt0.c2, rt0.c0))) NOT BETWEEN ((rt1.c0 IN ())) AND (rt0.c0)));
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (t1.c2);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (QUOTE(rt1.c5) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((QUOTE(rt1.c5) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (QUOTE(rt1.c5) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((QUOTE(rt1.c5) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (QUOTE(rt1.c5) COLLATE RTRIM);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (((((((((((((CAST(rt1.c6 AS NUMERIC))AND(rt1.c5)))AND(((t1.c12)-(rt0.c0)))))AND((~ (rt0.c1)))))OR((rt1.c4 IN ()))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c3 IN (rt1.c5, t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt1.c6 AS NUMERIC))AND(rt1.c5)))AND(((t1.c12)-(rt0.c0)))))AND((~ (rt0.c1)))))OR((rt1.c4 IN ()))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c3 IN (rt1.c5, t1.c4))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (((((((((((((CAST(rt1.c6 AS NUMERIC))AND(rt1.c5)))AND(((t1.c12)-(rt0.c0)))))AND((~ (rt0.c1)))))OR((rt1.c4 IN ()))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c3 IN (rt1.c5, t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((CAST(rt1.c6 AS NUMERIC))AND(rt1.c5)))AND(((t1.c12)-(rt0.c0)))))AND((~ (rt0.c1)))))OR((rt1.c4 IN ()))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c3 IN (rt1.c5, t1.c4))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0 NOT INDEXED, t1 WHERE (((((((((((((CAST(rt1.c6 AS NUMERIC))AND(rt1.c5)))AND(((t1.c12)-(rt0.c0)))))AND((~ (rt0.c1)))))OR((rt1.c4 IN ()))))AND(CAST(rt0.c2 AS BLOB))))OR((rt0.c3 IN (rt1.c5, t1.c4)))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((- (t1.c39))) NOTNULL)) ORDER BY (((rt1.c1 IN (rt1.c4)))<<((((rt0.c4, rt1.c3, t1.c4)) NOT BETWEEN ((rt0.c2, t1.c2, rt1.c0)) AND ((rt0.c0, t1.c2, rt1.c5))))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (t1.c39))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((rt1.c1 IN (rt1.c4)))<<((((rt0.c4, rt1.c3, t1.c4)) NOT BETWEEN ((rt0.c2, t1.c2, rt1.c0)) AND ((rt0.c0, t1.c2, rt1.c5))))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((- (t1.c39))) NOTNULL)) ORDER BY (((rt1.c1 IN (rt1.c4)))<<((((rt0.c4, rt1.c3, t1.c4)) NOT BETWEEN ((rt0.c2, t1.c2, rt1.c0)) AND ((rt0.c0, t1.c2, rt1.c5))))) DESC;
SELECT SUM(count) FROM (SELECT (((((- (t1.c39))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((rt1.c1 IN (rt1.c4)))<<((((rt0.c4, rt1.c3, t1.c4)) NOT BETWEEN ((rt0.c2, t1.c2, rt1.c0)) AND ((rt0.c0, t1.c2, rt1.c5))))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((- (t1.c39))) NOTNULL)) ORDER BY (((rt1.c1 IN (rt1.c4)))<<((((rt0.c4, rt1.c3, t1.c4)) NOT BETWEEN ((rt0.c2, t1.c2, rt1.c0)) AND ((rt0.c0, t1.c2, rt1.c5))))) DESC;
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('-2086341436' COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT (((('-2086341436' COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('-2086341436' COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT (((('-2086341436' COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((('-2086341436' COLLATE NOCASE) NOTNULL));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) IS FALSE) FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c6)))>=(CAST(rt0.c3 AS NUMERIC))) WHERE ((((rt0.c2)) NOT BETWEEN (('\OdU')) AND (((- (t1.c4)))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((t1.c12) IS FALSE))), (((((x'') BETWEEN (t1.c12) AND (rt1.c0))))>((((0.25082658635458677) NOT BETWEEN (rt1.c1) AND (t1.c12))))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (('\OdU')) AND (((- (t1.c4)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) IS FALSE) FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c6)))>=(CAST(rt0.c3 AS NUMERIC))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((t1.c12) IS FALSE))), (((((x'') BETWEEN (t1.c12) AND (rt1.c0))))>((((0.25082658635458677) NOT BETWEEN (rt1.c1) AND (t1.c12))))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) IS FALSE) FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c6)))>=(CAST(rt0.c3 AS NUMERIC))) WHERE ((((rt0.c2)) NOT BETWEEN (('\OdU')) AND (((- (t1.c4)))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((t1.c12) IS FALSE))), (((((x'') BETWEEN (t1.c12) AND (rt1.c0))))>((((0.25082658635458677) NOT BETWEEN (rt1.c1) AND (t1.c12))))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2))) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2)) NOT BETWEEN (('\OdU')) AND (((- (t1.c4)))))) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) IS FALSE) FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c6)))>=(CAST(rt0.c3 AS NUMERIC))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((t1.c12) IS FALSE))), (((((x'') BETWEEN (t1.c12) AND (rt1.c0))))>((((0.25082658635458677) NOT BETWEEN (rt1.c1) AND (t1.c12))))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2))) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt0 ON (((+ (rt0.c3))) IS FALSE) FULL OUTER JOIN rt1 ON ((((rt1.c1)/(rt1.c6)))>=(CAST(rt0.c3 AS NUMERIC))) WHERE ((((rt0.c2)) NOT BETWEEN (('\OdU')) AND (((- (t1.c4)))))) ORDER BY ((CAST(rt0.c0 AS NUMERIC)) BETWEEN (rt1.c0 COLLATE NOCASE) AND (((t1.c12) IS FALSE))), (((((x'') BETWEEN (t1.c12) AND (rt1.c0))))>((((0.25082658635458677) NOT BETWEEN (rt1.c1) AND (t1.c12))))) DESC  NULLS FIRST, ((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((t1.c2))) IN ())  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((((((0xffffffffd867d71c) NOT BETWEEN (rt1.c6) AND (rt1.c5)))AND(CASE rt1.c0  WHEN 'QT' THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END)))OR(((((rt1.c4)OR(rt1.c2)))AND(rt1.c4)))))AND((('1152730751') NOTNULL))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((((rt1.c1)>=(rt1.c1)))%((((rt1.c3))<=((rt1.c6))))), ((((((((rt1.c3)AND((- (rt1.c6)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))AND((NOT (8.58316967E8)))))OR(CAST(rt1.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0Xffffffffd867d71c) NOT BETWEEN (rt1.c6) AND (rt1.c5)))AND(CASE rt1.c0  WHEN 'QT' THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END)))OR(((((rt1.c4)OR(rt1.c2)))AND(rt1.c4)))))AND((('1152730751') NOTNULL))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>=(rt1.c1)))%((((rt1.c3))<=((rt1.c6))))), ((((((((rt1.c3)AND((- (rt1.c6)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))AND((NOT (8.58316967E8)))))OR(CAST(rt1.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((((((((0xffffffffd867d71c) NOT BETWEEN (rt1.c6) AND (rt1.c5)))AND(CASE rt1.c0  WHEN 'QT' THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END)))OR(((((rt1.c4)OR(rt1.c2)))AND(rt1.c4)))))AND((('1152730751') NOTNULL))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((((rt1.c1)>=(rt1.c1)))%((((rt1.c3))<=((rt1.c6))))), ((((((((rt1.c3)AND((- (rt1.c6)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))AND((NOT (8.58316967E8)))))OR(CAST(rt1.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((0Xffffffffd867d71c) NOT BETWEEN (rt1.c6) AND (rt1.c5)))AND(CASE rt1.c0  WHEN 'QT' THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END)))OR(((((rt1.c4)OR(rt1.c2)))AND(rt1.c4)))))AND((('1152730751') NOTNULL))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>=(rt1.c1)))%((((rt1.c3))<=((rt1.c6))))), ((((((((rt1.c3)AND((- (rt1.c6)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))AND((NOT (8.58316967E8)))))OR(CAST(rt1.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((((((((0xffffffffd867d71c) NOT BETWEEN (rt1.c6) AND (rt1.c5)))AND(CASE rt1.c0  WHEN 'QT' THEN rt1.c6 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c4 END)))OR(((((rt1.c4)OR(rt1.c2)))AND(rt1.c4)))))AND((('1152730751') NOTNULL))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3))))) ORDER BY ((((rt1.c1)>=(rt1.c1)))%((((rt1.c3))<=((rt1.c6))))), ((((((((rt1.c3)AND((- (rt1.c6)))))OR(((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))))AND((NOT (8.58316967E8)))))OR(CAST(rt1.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT * FROM rt0, t1 FULL OUTER JOIN rt1 ON ((((((((((t1.c2)OR(t1.c2)))OR(rt1.c2)))AND(rt0.c3)))AND(rt0.c2))) NOTNULL) WHERE (t1.c39) ORDER BY (((t1.c2) BETWEEN (t1.c2) AND (rt1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c39) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON ((((((((((t1.c2)OR(t1.c2)))OR(rt1.c2)))AND(rt0.c3)))AND(rt0.c2))) NOTNULL) ORDER BY (((t1.c2) BETWEEN (t1.c2) AND (rt1.c2)) IN ()) ASC);
SELECT * FROM rt0, t1 FULL OUTER JOIN rt1 ON ((((((((((t1.c2)OR(t1.c2)))OR(rt1.c2)))AND(rt0.c3)))AND(rt0.c2))) NOTNULL) WHERE (t1.c39) ORDER BY (((t1.c2) BETWEEN (t1.c2) AND (rt1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t1.c39) IS TRUE)  as count FROM rt0, t1 FULL OUTER JOIN rt1 ON ((((((((((t1.c2)OR(t1.c2)))OR(rt1.c2)))AND(rt0.c3)))AND(rt0.c2))) NOTNULL) ORDER BY (((t1.c2) BETWEEN (t1.c2) AND (rt1.c2)) IN ()) ASC);
SELECT * FROM rt0, t1 FULL OUTER JOIN rt1 ON ((((((((((t1.c2)OR(t1.c2)))OR(rt1.c2)))AND(rt0.c3)))AND(rt0.c2))) NOTNULL) WHERE (t1.c39) ORDER BY (((t1.c2) BETWEEN (t1.c2) AND (rt1.c2)) IN ()) ASC;
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELIHOOD(0.2537719402385793, 0.8087723553710561)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELIHOOD(0.2537719402385793, 0.8087723553710561))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELIHOOD(0.2537719402385793, 0.8087723553710561)));
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELIHOOD(0.2537719402385793, 0.8087723553710561))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (COALESCE(DISTINCT (((rt0.c3, rt0.c0, rt0.c2, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c3, rt0.c1, rt0.c2))), ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c0)), LIKELIHOOD(0.2537719402385793, 0.8087723553710561)));
SELECT * FROM rt0 INNER JOIN t1 ON 0.7124378822852724 INNER JOIN rt1 ON (((t1.c39 IN (rt0.c4))) IS TRUE) WHERE ((((rt1.c3 COLLATE BINARY, ABS(rt1.c2), ((rt1.c4)IS NOT(rt1.c2))))>=((LOWER(DISTINCT rt0.c4), CASE rt1.c6  WHEN rt0.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN t1.c12 THEN rt0.c1 END, CAST(rt1.c4 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 COLLATE BINARY, ABS(rt1.c2), ((rt1.c4)IS NOT(rt1.c2))))>=((LOWER(DISTINCT rt0.c4), CASE rt1.c6  WHEN rt0.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN t1.c12 THEN rt0.c1 END, CAST(rt1.c4 AS REAL))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON 0.7124378822852724 INNER JOIN rt1 ON (((t1.c39 IN (rt0.c4))) IS TRUE));
SELECT * FROM rt0 INNER JOIN t1 ON 0.7124378822852724 INNER JOIN rt1 ON (((t1.c39 IN (rt0.c4))) IS TRUE) WHERE ((((rt1.c3 COLLATE BINARY, ABS(rt1.c2), ((rt1.c4)IS NOT(rt1.c2))))>=((LOWER(DISTINCT rt0.c4), CASE rt1.c6  WHEN rt0.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN t1.c12 THEN rt0.c1 END, CAST(rt1.c4 AS REAL)))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 COLLATE BINARY, ABS(rt1.c2), ((rt1.c4)IS NOT(rt1.c2))))>=((LOWER(DISTINCT rt0.c4), CASE rt1.c6  WHEN rt0.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN t1.c12 THEN rt0.c1 END, CAST(rt1.c4 AS REAL))))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON 0.7124378822852724 INNER JOIN rt1 ON (((t1.c39 IN (rt0.c4))) IS TRUE));
SELECT * FROM rt0 INNER JOIN t1 ON 0.7124378822852724 INNER JOIN rt1 ON (((t1.c39 IN (rt0.c4))) IS TRUE) WHERE ((((rt1.c3 COLLATE BINARY, ABS(rt1.c2), ((rt1.c4)IS NOT(rt1.c2))))>=((LOWER(DISTINCT rt0.c4), CASE rt1.c6  WHEN rt0.c0 THEN rt0.c3 WHEN rt1.c0 THEN rt0.c0 WHEN t1.c12 THEN rt0.c1 END, CAST(rt1.c4 AS REAL)))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (rt1.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c5) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (rt1.c5);
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((1128418833))<((NULL))) WHERE (LOWER((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((+ (rt0.c0)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((1128418833))<((NULL))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((1128418833))<((NULL))) WHERE (LOWER((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LOWER((+ (rt0.c0)))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON (((1128418833))<((NULL))));
SELECT ALL COUNT(*) FROM t1 FULL OUTER JOIN rt0 ON (((1128418833))<((NULL))) WHERE (LOWER((+ (rt0.c0))));
SELECT ALL * FROM rt1, rt0 WHERE ((- (CASE WHEN rt1.c3 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt1.c3 THEN rt1.c4 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((- (CASE WHEN rt1.c3 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt1.c3 THEN rt1.c4 END))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL * FROM rt1, rt0 WHERE ((- (CASE WHEN rt1.c3 THEN rt1.c4 END)));
SELECT ALL * FROM t1 WHERE ((((- (t1.c39)))<<(((t1.c4)IS NOT(t1.c2))))) ORDER BY NULL DESC  NULLS LAST, ((((((((((t1.c12) IS TRUE))OR(((t1.c2) IS TRUE))))OR(2.32254458E8)))AND(((t1.c39) NOT NULL))))AND(((t1.c4)IS(t1.c39)))), ABS(UNLIKELY(DISTINCT t1.c39)) DESC;
SELECT SUM(count) FROM (SELECT (((((- (t1.c39)))<<(((t1.c4)IS NOT(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS LAST, ((((((((((t1.c12) IS TRUE))OR(((t1.c2) IS TRUE))))OR(2.32254458E8)))AND(((t1.c39) NOT NULL))))AND(((t1.c4)IS(t1.c39)))), ABS(UNLIKELY(DISTINCT t1.c39)) DESC);
SELECT ALL * FROM t1 WHERE ((((- (t1.c39)))<<(((t1.c4)IS NOT(t1.c2))))) ORDER BY NULL DESC  NULLS LAST, ((((((((((t1.c12) IS TRUE))OR(((t1.c2) IS TRUE))))OR(2.32254458E8)))AND(((t1.c39) NOT NULL))))AND(((t1.c4)IS(t1.c39)))), ABS(UNLIKELY(DISTINCT t1.c39)) DESC;
SELECT SUM(count) FROM (SELECT (((((- (t1.c39)))<<(((t1.c4)IS NOT(t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY NULL DESC  NULLS LAST, ((((((((((t1.c12) IS TRUE))OR(((t1.c2) IS TRUE))))OR(2.32254458E8)))AND(((t1.c39) NOT NULL))))AND(((t1.c4)IS(t1.c39)))), ABS(UNLIKELY(DISTINCT t1.c39)) DESC);
SELECT ALL * FROM t1 WHERE ((((- (t1.c39)))<<(((t1.c4)IS NOT(t1.c2))))) ORDER BY NULL DESC  NULLS LAST, ((((((((((t1.c12) IS TRUE))OR(((t1.c2) IS TRUE))))OR(2.32254458E8)))AND(((t1.c39) NOT NULL))))AND(((t1.c4)IS(t1.c39)))), ABS(UNLIKELY(DISTINCT t1.c39)) DESC;
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c2)>(rt0.c4)))+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c4)))+(rt0.c1))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c2)>(rt0.c4)))+(rt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)>(rt0.c4)))+(rt0.c1))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((rt0.c2)>(rt0.c4)))+(rt0.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c4))) BETWEEN ((('-1328338143') IS TRUE)) AND (((rt0.c4)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c4))) BETWEEN ((('-1328338143') IS TRUE)) AND (((rt0.c4)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c4))) BETWEEN ((('-1328338143') IS TRUE)) AND (((rt0.c4)IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c4))) BETWEEN ((('-1328338143') IS TRUE)) AND (((rt0.c4)IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((+ (rt0.c4))) BETWEEN ((('-1328338143') IS TRUE)) AND (((rt0.c4)IS NOT(rt0.c1)))));
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c1) IS FALSE))OR((((t1.c39)) NOT BETWEEN ((t1.c2)) AND ((rt0.c2))))))OR(((t1.c39)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR((((t1.c39)) NOT BETWEEN ((t1.c2)) AND ((rt0.c2))))))OR(((t1.c39)>(rt0.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c1) IS FALSE))OR((((t1.c39)) NOT BETWEEN ((t1.c2)) AND ((rt0.c2))))))OR(((t1.c39)>(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))OR((((t1.c39)) NOT BETWEEN ((t1.c2)) AND ((rt0.c2))))))OR(((t1.c39)>(rt0.c2))))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((((((rt0.c1) IS FALSE))OR((((t1.c39)) NOT BETWEEN ((t1.c2)) AND ((rt0.c2))))))OR(((t1.c39)>(rt0.c2)))));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c3)IS(rt1.c3))) NOTNULL)) ORDER BY 0.040377374779153485  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt1.c3))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY 0.040377374779153485  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c3)IS(rt1.c3))) NOTNULL)) ORDER BY 0.040377374779153485  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)IS(rt1.c3))) NOTNULL)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY 0.040377374779153485  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE (((((rt0.c3)IS(rt1.c3))) NOTNULL)) ORDER BY 0.040377374779153485  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((('-1079903390' COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-1079903390' COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((('-1079903390' COLLATE RTRIM) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((('-1079903390' COLLATE RTRIM) NOTNULL)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL COUNT(*) FROM rt1, t1, rt0 WHERE ((('-1079903390' COLLATE RTRIM) NOTNULL));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) NOTNULL))) WHERE (((CAST(t1.c12 AS INTEGER))==(('岒懰' IN (rt0.c4, t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c12 AS INTEGER))==(('岒懰' IN (rt0.c4, t1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) NOTNULL))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) NOTNULL))) WHERE (((CAST(t1.c12 AS INTEGER))==(('岒懰' IN (rt0.c4, t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c12 AS INTEGER))==(('岒懰' IN (rt0.c4, t1.c2))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON ((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) NOTNULL))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON ((CAST(rt0.c2 AS BLOB))GLOB(((rt0.c4) NOTNULL))) WHERE (((CAST(t1.c12 AS INTEGER))==(('岒懰' IN (rt0.c4, t1.c2)))));
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY CAST((t1.c4 IN (t1.c2)) AS REAL)  NULLS LAST, ((((((((t1.c12)AND(t1.c39)))AND(t1.c4)))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c4 WHEN t1.c12 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN t1.c39 THEN NULL WHEN t1.c12 THEN t1.c12 ELSE t1.c12 END)))OR(((t1.c12)<<(t1.c4))))  NULLS FIRST, TRIM(DISTINCT t1.c4)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c4 IN (t1.c2)) AS REAL)  NULLS LAST, ((((((((t1.c12)AND(t1.c39)))AND(t1.c4)))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c4 WHEN t1.c12 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN t1.c39 THEN NULL WHEN t1.c12 THEN t1.c12 ELSE t1.c12 END)))OR(((t1.c12)<<(t1.c4))))  NULLS FIRST, TRIM(DISTINCT t1.c4)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY CAST((t1.c4 IN (t1.c2)) AS REAL)  NULLS LAST, ((((((((t1.c12)AND(t1.c39)))AND(t1.c4)))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c4 WHEN t1.c12 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN t1.c39 THEN NULL WHEN t1.c12 THEN t1.c12 ELSE t1.c12 END)))OR(((t1.c12)<<(t1.c4))))  NULLS FIRST, TRIM(DISTINCT t1.c4)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1 ORDER BY CAST((t1.c4 IN (t1.c2)) AS REAL)  NULLS LAST, ((((((((t1.c12)AND(t1.c39)))AND(t1.c4)))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c4 WHEN t1.c12 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN t1.c39 THEN NULL WHEN t1.c12 THEN t1.c12 ELSE t1.c12 END)))OR(((t1.c12)<<(t1.c4))))  NULLS FIRST, TRIM(DISTINCT t1.c4)  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (x'') ORDER BY CAST((t1.c4 IN (t1.c2)) AS REAL)  NULLS LAST, ((((((((t1.c12)AND(t1.c39)))AND(t1.c4)))OR(CASE t1.c2  WHEN t1.c2 THEN t1.c4 WHEN t1.c12 THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN t1.c39 THEN NULL WHEN t1.c12 THEN t1.c12 ELSE t1.c12 END)))OR(((t1.c12)<<(t1.c4))))  NULLS FIRST, TRIM(DISTINCT t1.c4)  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1)IS NOT(((((rt0.c4)OR(rt1.c4)))OR(t1.c39)))) INNER JOIN t1 ON CAST(((rt1.c5)<=(rt1.c2)) AS NUMERIC) WHERE ((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1)IS NOT(((((rt0.c4)OR(rt1.c4)))OR(t1.c39)))) INNER JOIN t1 ON CAST(((rt1.c5)<=(rt1.c2)) AS NUMERIC));
SELECT * FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1)IS NOT(((((rt0.c4)OR(rt1.c4)))OR(t1.c39)))) INNER JOIN t1 ON CAST(((rt1.c5)<=(rt1.c2)) AS NUMERIC) WHERE ((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt0.c4)) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON ((rt1.c1)IS NOT(((((rt0.c4)OR(rt1.c4)))OR(t1.c39)))) INNER JOIN t1 ON CAST(((rt1.c5)<=(rt1.c2)) AS NUMERIC));
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((t1.c4) BETWEEN (t1.c39) AND (t1.c4))  WHEN ((t1.c4) BETWEEN (t1.c2) AND (NULL)) THEN t1.c12 COLLATE BINARY ELSE t1.c39 END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c4) BETWEEN (t1.c39) AND (t1.c4))  WHEN ((t1.c4) BETWEEN (t1.c2) AND (NULL)) THEN t1.c12 COLLATE BINARY ELSE t1.c39 END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((t1.c4) BETWEEN (t1.c39) AND (t1.c4))  WHEN ((t1.c4) BETWEEN (t1.c2) AND (NULL)) THEN t1.c12 COLLATE BINARY ELSE t1.c39 END);
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c4) BETWEEN (t1.c39) AND (t1.c4))  WHEN ((t1.c4) BETWEEN (t1.c2) AND (NULL)) THEN t1.c12 COLLATE BINARY ELSE t1.c39 END) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CASE ((t1.c4) BETWEEN (t1.c39) AND (t1.c4))  WHEN ((t1.c4) BETWEEN (t1.c2) AND (NULL)) THEN t1.c12 COLLATE BINARY ELSE t1.c39 END);
SELECT ALL * FROM t1 WHERE ((((t1.c2 IN ()))+(((t1.c39)<=(t1.c12)))));
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN ()))+(((t1.c39)<=(t1.c12))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2 IN ()))+(((t1.c39)<=(t1.c12)))));
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN ()))+(((t1.c39)<=(t1.c12))))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((t1.c2 IN ()))+(((t1.c39)<=(t1.c12)))));
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c6)) THEN TRIM(DISTINCT rt0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c6)) THEN TRIM(DISTINCT rt0.c4) END) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c6)) THEN TRIM(DISTINCT rt0.c4) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c6)) THEN TRIM(DISTINCT rt0.c4) END) IS TRUE)  as count FROM rt0, t1, rt1);
SELECT COUNT(*) FROM rt0, t1, rt1 WHERE (CASE WHEN ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c6)) THEN TRIM(DISTINCT rt0.c4) END);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(0.03160362987218801)))AND(rt1.c2)))AND(rt1.c2))  WHEN COALESCE(DISTINCT rt0.c4, t1.c4) THEN (((rt0.c0, rt0.c3, rt0.c4))=((t1.c4, rt0.c2, rt1.c3))) END FULL OUTER JOIN t1 ON ((json(rt1.c6))!=(PRINTF(rt1.c1))) WHERE (((TIME(rt1.c2, t1.c12, rt1.c2)) NOT BETWEEN (NULL) AND (rt1.c1))) ORDER BY '!At2	o㷻D|' ASC;
SELECT SUM(count) FROM (SELECT ((((TIME(rt1.c2, t1.c12, rt1.c2)) NOT BETWEEN (NULL) AND (rt1.c1))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(0.03160362987218801)))AND(rt1.c2)))AND(rt1.c2))  WHEN COALESCE(DISTINCT rt0.c4, t1.c4) THEN (((rt0.c0, rt0.c3, rt0.c4))=((t1.c4, rt0.c2, rt1.c3))) END FULL OUTER JOIN t1 ON ((json(rt1.c6))!=(PRINTF(rt1.c1))) ORDER BY '!At2	o㷻D|' ASC);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(0.03160362987218801)))AND(rt1.c2)))AND(rt1.c2))  WHEN COALESCE(DISTINCT rt0.c4, t1.c4) THEN (((rt0.c0, rt0.c3, rt0.c4))=((t1.c4, rt0.c2, rt1.c3))) END FULL OUTER JOIN t1 ON ((json(rt1.c6))!=(PRINTF(rt1.c1))) WHERE (((TIME(rt1.c2, t1.c12, rt1.c2)) NOT BETWEEN (NULL) AND (rt1.c1))) ORDER BY '!At2	o㷻D|' ASC;
SELECT SUM(count) FROM (SELECT ((((TIME(rt1.c2, t1.c12, rt1.c2)) NOT BETWEEN (NULL) AND (rt1.c1))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CASE ((((((((((((rt0.c1)OR(rt1.c3)))OR(rt0.c2)))AND(rt1.c0)))AND(0.03160362987218801)))AND(rt1.c2)))AND(rt1.c2))  WHEN COALESCE(DISTINCT rt0.c4, t1.c4) THEN (((rt0.c0, rt0.c3, rt0.c4))=((t1.c4, rt0.c2, rt1.c3))) END FULL OUTER JOIN t1 ON ((json(rt1.c6))!=(PRINTF(rt1.c1))) ORDER BY '!At2	o㷻D|' ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON x'' WHERE ((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((t1.c12)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((t1.c12)))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON x'' WHERE ((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((t1.c12)))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((t1.c12)))) ISNULL)) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON x'');
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON x'' WHERE ((((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((t1.c12)))) ISNULL));
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c0) AND (t1.c12)))IS(((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c3))))) ORDER BY ((((x'') BETWEEN (rt1.c1) AND (t1.c12))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5) NOT BETWEEN (rt1.c0) AND (t1.c12)))IS(((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY ((((x'') BETWEEN (rt1.c1) AND (t1.c12))) IS FALSE));
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c0) AND (t1.c12)))IS(((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c3))))) ORDER BY ((((x'') BETWEEN (rt1.c1) AND (t1.c12))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c5) NOT BETWEEN (rt1.c0) AND (t1.c12)))IS(((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c3))))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY ((((x'') BETWEEN (rt1.c1) AND (t1.c12))) IS FALSE));
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE (((((rt1.c5) NOT BETWEEN (rt1.c0) AND (t1.c12)))IS(((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c3))))) ORDER BY ((((x'') BETWEEN (rt1.c1) AND (t1.c12))) IS FALSE);
SELECT ALL * FROM rt1, t1, rt0 WHERE (CASE (+ (rt1.c6))  WHEN ((rt0.c4)%(t1.c39)) THEN rtreenode(t1.c12, rt1.c6) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt1.c6))  WHEN ((rt0.c4)%(t1.c39)) THEN rtreenode(t1.c12, rt1.c6) END) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (CASE (+ (rt1.c6))  WHEN ((rt0.c4)%(t1.c39)) THEN rtreenode(t1.c12, rt1.c6) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (rt1.c6))  WHEN ((rt0.c4)%(t1.c39)) THEN rtreenode(t1.c12, rt1.c6) END) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (CASE (+ (rt1.c6))  WHEN ((rt0.c4)%(t1.c39)) THEN rtreenode(t1.c12, rt1.c6) END);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((t1.c2) BETWEEN (rt0.c1) AND (rt1.c6)) COLLATE RTRIM) ORDER BY (CAST(rt1.c4 AS BLOB) IN ())  NULLS LAST, (~ ((- (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) BETWEEN (rt0.c1) AND (rt1.c6)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (CAST(rt1.c4 AS BLOB) IN ())  NULLS LAST, (~ ((- (t1.c2)))) ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((t1.c2) BETWEEN (rt0.c1) AND (rt1.c6)) COLLATE RTRIM) ORDER BY (CAST(rt1.c4 AS BLOB) IN ())  NULLS LAST, (~ ((- (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2) BETWEEN (rt0.c1) AND (rt1.c6)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY (CAST(rt1.c4 AS BLOB) IN ())  NULLS LAST, (~ ((- (t1.c2)))) ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((t1.c2) BETWEEN (rt0.c1) AND (rt1.c6)) COLLATE RTRIM) ORDER BY (CAST(rt1.c4 AS BLOB) IN ())  NULLS LAST, (~ ((- (t1.c2)))) ASC;
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON CASE WHEN CASE t1.c4  WHEN t1.c4 THEN rt1.c2 END THEN CAST(rt1.c0 AS TEXT) WHEN '28073167' THEN (((rt1.c5))<=((rt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt0.c2)AND(rt1.c1)) WHEN (NOT (rt1.c6)) THEN ((rt1.c2)OR(t1.c12)) WHEN ((rt0.c4)AND(t1.c12)) THEN (((rt0.c3, rt0.c1, t1.c2))=((rt0.c1, rt1.c5, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((x'73ac') BETWEEN (rt1.c6) AND (rt0.c3)) COLLATE BINARY WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON CASE WHEN CASE t1.c4  WHEN t1.c4 THEN rt1.c2 END THEN CAST(rt1.c0 AS TEXT) WHEN '28073167' THEN (((rt1.c5))<=((rt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt0.c2)AND(rt1.c1)) WHEN (NOT (rt1.c6)) THEN ((rt1.c2)OR(t1.c12)) WHEN ((rt0.c4)AND(t1.c12)) THEN (((rt0.c3, rt0.c1, t1.c2))=((rt0.c1, rt1.c5, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((x'73ac') BETWEEN (rt1.c6) AND (rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON CASE WHEN CASE t1.c4  WHEN t1.c4 THEN rt1.c2 END THEN CAST(rt1.c0 AS TEXT) WHEN '28073167' THEN (((rt1.c5))<=((rt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt0.c2)AND(rt1.c1)) WHEN (NOT (rt1.c6)) THEN ((rt1.c2)OR(t1.c12)) WHEN ((rt0.c4)AND(t1.c12)) THEN (((rt0.c3, rt0.c1, t1.c2))=((rt0.c1, rt1.c5, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((x'73ac') BETWEEN (rt1.c6) AND (rt0.c3)) COLLATE BINARY WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON CASE WHEN CASE t1.c4  WHEN t1.c4 THEN rt1.c2 END THEN CAST(rt1.c0 AS TEXT) WHEN '28073167' THEN (((rt1.c5))<=((rt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt0.c2)AND(rt1.c1)) WHEN (NOT (rt1.c6)) THEN ((rt1.c2)OR(t1.c12)) WHEN ((rt0.c4)AND(t1.c12)) THEN (((rt0.c3, rt0.c1, t1.c2))=((rt0.c1, rt1.c5, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((x'73ac') BETWEEN (rt1.c6) AND (rt0.c3)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 CROSS JOIN rt1 ON CASE WHEN CASE t1.c4  WHEN t1.c4 THEN rt1.c2 END THEN CAST(rt1.c0 AS TEXT) WHEN '28073167' THEN (((rt1.c5))<=((rt1.c0))) WHEN CAST(rt1.c1 AS TEXT) THEN ((rt0.c2)AND(rt1.c1)) WHEN (NOT (rt1.c6)) THEN ((rt1.c2)OR(t1.c12)) WHEN ((rt0.c4)AND(t1.c12)) THEN (((rt0.c3, rt0.c1, t1.c2))=((rt0.c1, rt1.c5, rt1.c5))) END LEFT OUTER JOIN rt0 ON ((x'73ac') BETWEEN (rt1.c6) AND (rt0.c3)) COLLATE BINARY WHERE (rt0.c2);
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c3)IS NOT(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c3)IS NOT(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c3)IS NOT(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c3)IS NOT(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (TRIM(((rt0.c3)IS NOT(rt0.c4))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((0.4326313568797774))))>>((rt1.c1 IN ())))) ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN '-1831797677' THEN ((rt1.c5) IS FALSE) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c3) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 ELSE ((rt1.c5)<<(rt1.c6)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((0.4326313568797774))))>>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN '-1831797677' THEN ((rt1.c5) IS FALSE) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c3) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 ELSE ((rt1.c5)<<(rt1.c6)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((0.4326313568797774))))>>((rt1.c1 IN ())))) ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN '-1831797677' THEN ((rt1.c5) IS FALSE) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c3) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 ELSE ((rt1.c5)<<(rt1.c6)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((0.4326313568797774))))>>((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN '-1831797677' THEN ((rt1.c5) IS FALSE) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c3) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 ELSE ((rt1.c5)<<(rt1.c6)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((0.4326313568797774))))>>((rt1.c1 IN ())))) ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN '-1831797677' THEN ((rt1.c5) IS FALSE) WHEN CAST(rt1.c3 AS NUMERIC) THEN ((rt1.c3) NOTNULL) WHEN rt1.c2 COLLATE RTRIM THEN rt1.c0 ELSE ((rt1.c5)<<(rt1.c6)) END  NULLS LAST;
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((+ (rt0.c0))) NOT NULL));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt1.c2))>((x'5ce7'))) AS BLOB) WHERE ((((((((rt1.c5)) BETWEEN ((rt0.c4)) AND ((rt1.c2))))AND(((rt1.c4)<=(rt0.c3)))))AND(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c5)) BETWEEN ((rt0.c4)) AND ((rt1.c2))))AND(((rt1.c4)<=(rt0.c3)))))AND(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt1.c2))>((x'5ce7'))) AS BLOB));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt1.c2))>((x'5ce7'))) AS BLOB) WHERE ((((((((rt1.c5)) BETWEEN ((rt0.c4)) AND ((rt1.c2))))AND(((rt1.c4)<=(rt0.c3)))))AND(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((((rt1.c5)) BETWEEN ((rt0.c4)) AND ((rt1.c2))))AND(((rt1.c4)<=(rt0.c3)))))AND(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt1.c2))>((x'5ce7'))) AS BLOB));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON CAST((((rt1.c2))>((x'5ce7'))) AS BLOB) WHERE ((((((((rt1.c5)) BETWEEN ((rt0.c4)) AND ((rt1.c2))))AND(((rt1.c4)<=(rt0.c3)))))AND(rt1.c2 COLLATE BINARY)));
SELECT * FROM rt0 CROSS JOIN t1 ON (((CAST(t1.c12 AS BLOB)))!=(((rt0.c0 IN (rt0.c4))))) WHERE (CAST(((t1.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((CAST(t1.c12 AS BLOB)))<>(((rt0.c0 IN (rt0.c4))))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((CAST(t1.c12 AS BLOB)))!=(((rt0.c0 IN (rt0.c4))))) WHERE (CAST(((t1.c2) IS FALSE) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) IS FALSE) AS REAL)) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((CAST(t1.c12 AS BLOB)))<>(((rt0.c0 IN (rt0.c4))))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((CAST(t1.c12 AS BLOB)))!=(((rt0.c0 IN (rt0.c4))))) WHERE (CAST(((t1.c2) IS FALSE) AS REAL));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((('-141432311') IS TRUE)) BETWEEN (((rt1.c5)>=(t1.c39))) AND (CASE t1.c39  WHEN rt1.c4 THEN rt1.c0 END)) FULL OUTER JOIN t1 ON ((rt1.c6 COLLATE NOCASE) IS FALSE) WHERE ((((+ ('P|L('))) NOT BETWEEN (rt1.c6) AND (((rt1.c2)AND(rt0.c4))))) ORDER BY CAST(((t1.c2)IS('1758875614')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ ('P|L('))) NOT BETWEEN (rt1.c6) AND (((rt1.c2)AND(rt0.c4))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((('-141432311') IS TRUE)) BETWEEN (((rt1.c5)>=(t1.c39))) AND (CASE t1.c39  WHEN rt1.c4 THEN rt1.c0 END)) FULL OUTER JOIN t1 ON ((rt1.c6 COLLATE NOCASE) IS FALSE) ORDER BY CAST(((t1.c2)IS('1758875614')) AS NUMERIC));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN rt1 ON (((('-141432311') IS TRUE)) BETWEEN (((rt1.c5)>=(t1.c39))) AND (CASE t1.c39  WHEN rt1.c4 THEN rt1.c0 END)) FULL OUTER JOIN t1 ON ((rt1.c6 COLLATE NOCASE) IS FALSE) WHERE ((((+ ('P|L('))) NOT BETWEEN (rt1.c6) AND (((rt1.c2)AND(rt0.c4))))) ORDER BY CAST(((t1.c2)IS('1758875614')) AS NUMERIC);
SELECT SUM(count) FROM (SELECT (((((+ ('P|L('))) NOT BETWEEN (rt1.c6) AND (((rt1.c2)AND(rt0.c4))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN rt1 ON (((('-141432311') IS TRUE)) BETWEEN (((rt1.c5)>=(t1.c39))) AND (CASE t1.c39  WHEN rt1.c4 THEN rt1.c0 END)) FULL OUTER JOIN t1 ON ((rt1.c6 COLLATE NOCASE) IS FALSE) ORDER BY CAST(((t1.c2)IS('1758875614')) AS NUMERIC));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON CAST(t1.c4 AS BLOB) COLLATE BINARY WHERE (CAST(t1.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c4 AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON CAST(t1.c4 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON CAST(t1.c4 AS BLOB) COLLATE BINARY WHERE (CAST(t1.c4 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c4 AS BLOB)) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON CAST(t1.c4 AS BLOB) COLLATE BINARY);
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON CAST(t1.c4 AS BLOB) COLLATE BINARY WHERE (CAST(t1.c4 AS BLOB));
SELECT COUNT(*) FROM rt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((- (NULL))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((- (NULL)));
SELECT * FROM t1, rt1 WHERE (CAST(((0x4dcca0ae) IS FALSE) AS TEXT)) ORDER BY ((((~ (rt1.c4)), CASE rt1.c3  WHEN t1.c12 THEN t1.c2 ELSE t1.c12 END, ((rt1.c3)>(rt1.c2))))!=(((rt1.c0 IN ()), (((t1.c2, t1.c2, rt1.c4))!=((rt1.c1, t1.c12, rt1.c1))), ((t1.c4) NOT BETWEEN (rt1.c5) AND (t1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0X4dcca0ae) IS FALSE) AS TEXT)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((~ (rt1.c4)), CASE rt1.c3  WHEN t1.c12 THEN t1.c2 ELSE t1.c12 END, ((rt1.c3)>(rt1.c2))))<>(((rt1.c0 IN ()), (((t1.c2, t1.c2, rt1.c4))!=((rt1.c1, t1.c12, rt1.c1))), ((t1.c4) NOT BETWEEN (rt1.c5) AND (t1.c2)))))  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (CAST(((0x4dcca0ae) IS FALSE) AS TEXT)) ORDER BY ((((~ (rt1.c4)), CASE rt1.c3  WHEN t1.c12 THEN t1.c2 ELSE t1.c12 END, ((rt1.c3)>(rt1.c2))))!=(((rt1.c0 IN ()), (((t1.c2, t1.c2, rt1.c4))!=((rt1.c1, t1.c12, rt1.c1))), ((t1.c4) NOT BETWEEN (rt1.c5) AND (t1.c2)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((0X4dcca0ae) IS FALSE) AS TEXT)) IS TRUE)  as count FROM t1, rt1 ORDER BY ((((~ (rt1.c4)), CASE rt1.c3  WHEN t1.c12 THEN t1.c2 ELSE t1.c12 END, ((rt1.c3)>(rt1.c2))))<>(((rt1.c0 IN ()), (((t1.c2, t1.c2, rt1.c4))!=((rt1.c1, t1.c12, rt1.c1))), ((t1.c4) NOT BETWEEN (rt1.c5) AND (t1.c2)))))  NULLS LAST);
SELECT * FROM t1, rt1 WHERE (CAST(((0x4dcca0ae) IS FALSE) AS TEXT)) ORDER BY ((((~ (rt1.c4)), CASE rt1.c3  WHEN t1.c12 THEN t1.c2 ELSE t1.c12 END, ((rt1.c3)>(rt1.c2))))!=(((rt1.c0 IN ()), (((t1.c2, t1.c2, rt1.c4))!=((rt1.c1, t1.c12, rt1.c1))), ((t1.c4) NOT BETWEEN (rt1.c5) AND (t1.c2)))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c3))<=((rt1.c6))) COLLATE RTRIM) ORDER BY (((rt1.c4)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c1))))) ASC  NULLS FIRST, CASE WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c6)*(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3))<=((rt1.c6))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c1))))) ASC  NULLS FIRST, CASE WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c6)*(rt1.c2)) END  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c3))<=((rt1.c6))) COLLATE RTRIM) ORDER BY (((rt1.c4)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c1))))) ASC  NULLS FIRST, CASE WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c6)*(rt1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3))<=((rt1.c6))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c4)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c1))))) ASC  NULLS FIRST, CASE WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c6)*(rt1.c2)) END  NULLS FIRST);
SELECT * FROM rt1 WHERE ((((rt1.c3))<=((rt1.c6))) COLLATE RTRIM) ORDER BY (((rt1.c4)) NOT BETWEEN (((rt1.c0 IN ()))) AND ((((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c1))))) ASC  NULLS FIRST, CASE WHEN rt1.c1 COLLATE RTRIM THEN ((rt1.c6)*(rt1.c2)) END  NULLS FIRST;
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((0.9611391811697597) IS FALSE) WHERE (CASE ((1.992388229E9) IS TRUE)  WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((t1.c2) IS TRUE) THEN 0.399492065126662 WHEN CAST(rt0.c0 AS REAL) THEN (((t1.c4))==((rt0.c3))) ELSE ((rt1.c6) NOT BETWEEN (rt1.c1) AND (t1.c12)) END) ORDER BY ((((t1.c2) IS FALSE))GLOB(((((((((rt0.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3)))AND(t1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((1.992388229E9) IS TRUE)  WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((t1.c2) IS TRUE) THEN 0.399492065126662 WHEN CAST(rt0.c0 AS REAL) THEN (((t1.c4))==((rt0.c3))) ELSE ((rt1.c6) NOT BETWEEN (rt1.c1) AND (t1.c12)) END) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((0.9611391811697597) IS FALSE) ORDER BY ((((t1.c2) IS FALSE))GLOB(((((((((rt0.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3)))AND(t1.c4)))) ASC);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((0.9611391811697597) IS FALSE) WHERE (CASE ((1.992388229E9) IS TRUE)  WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((t1.c2) IS TRUE) THEN 0.399492065126662 WHEN CAST(rt0.c0 AS REAL) THEN (((t1.c4))==((rt0.c3))) ELSE ((rt1.c6) NOT BETWEEN (rt1.c1) AND (t1.c12)) END) ORDER BY ((((t1.c2) IS FALSE))GLOB(((((((((rt0.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3)))AND(t1.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((1.992388229E9) IS TRUE)  WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((t1.c2) IS TRUE) THEN 0.399492065126662 WHEN CAST(rt0.c0 AS REAL) THEN (((t1.c4))==((rt0.c3))) ELSE ((rt1.c6) NOT BETWEEN (rt1.c1) AND (t1.c12)) END) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((0.9611391811697597) IS FALSE) ORDER BY ((((t1.c2) IS FALSE))GLOB(((((((((rt0.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3)))AND(t1.c4)))) ASC);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((0.9611391811697597) IS FALSE) WHERE (CASE ((1.992388229E9) IS TRUE)  WHEN rt0.c3 THEN TRIM(rt1.c4) WHEN ((t1.c2) IS TRUE) THEN 0.399492065126662 WHEN CAST(rt0.c0 AS REAL) THEN (((t1.c4))==((rt0.c3))) ELSE ((rt1.c6) NOT BETWEEN (rt1.c1) AND (t1.c12)) END) ORDER BY ((((t1.c2) IS FALSE))GLOB(((((((((rt0.c3)OR(rt1.c4)))AND(rt1.c0)))OR(rt1.c3)))AND(t1.c4)))) ASC;
SELECT * FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c1, 0.7400457336989946) WHERE ((DATE(rt0.c0, rt0.c3, rt1.c0, rt1.c0, '') IN ())) ORDER BY CAST((((rt0.c3))>=((rt1.c3))) AS NUMERIC), rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL (((DATE(rt0.c0, rt0.c3, rt1.c0, rt1.c0, '') IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c1, 0.7400457336989946) ORDER BY CAST((((rt0.c3))>=((rt1.c3))) AS NUMERIC), rt1.c3 ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c1, 0.7400457336989946) WHERE ((DATE(rt0.c0, rt0.c3, rt1.c0, rt1.c0, '') IN ())) ORDER BY CAST((((rt0.c3))>=((rt1.c3))) AS NUMERIC), rt1.c3 ASC;
SELECT SUM(count) FROM (SELECT ALL (((DATE(rt0.c0, rt0.c3, rt1.c0, rt1.c0, '') IN ())) IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c1, 0.7400457336989946) ORDER BY CAST((((rt0.c3))>=((rt1.c3))) AS NUMERIC), rt1.c3 ASC);
SELECT * FROM rt0 INNER JOIN rt1 ON LIKELIHOOD(DISTINCT rt1.c1, 0.7400457336989946) WHERE ((DATE(rt0.c0, rt0.c3, rt1.c0, rt1.c0, '') IN ())) ORDER BY CAST((((rt0.c3))>=((rt1.c3))) AS NUMERIC), rt1.c3 ASC;
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt0.c4))!=((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c4))<>((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt0.c4))!=((rt0.c0))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((rt0.c4))<>((rt0.c0))) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt0.c4))!=((rt0.c0))) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<>(CAST(0x4354e309 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)!=(CAST(0X4354e309 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<>(CAST(0x4354e309 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE RTRIM)!=(CAST(0X4354e309 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c1 COLLATE RTRIM)<>(CAST(0x4354e309 AS INTEGER))));
SELECT * FROM t1, rt0 INNER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c2)))OR(rt1.c1))) NOT BETWEEN (((((rt0.c2)AND(t1.c4)))AND(t1.c12))) AND (((rt1.c3) IS FALSE))) WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)IS(CASE WHEN rt1.c3 THEN t1.c2 END))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c4)AND(x'')))) AND (((NOT (rt1.c4))))) ASC, ((((t1.c2)>=(t1.c2))) NOTNULL) DESC, (~ (((rt0.c2)<=(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)IS(CASE WHEN rt1.c3 THEN t1.c2 END))) IS TRUE)  as count FROM t1, rt0 INNER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c2)))OR(rt1.c1))) NOT BETWEEN (((((rt0.c2)AND(t1.c4)))AND(t1.c12))) AND (((rt1.c3) IS FALSE))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c4)AND(x'')))) AND (((NOT (rt1.c4))))) ASC, ((((t1.c2)>=(t1.c2))) NOTNULL) DESC, (~ (((rt0.c2)<=(rt1.c3))))  NULLS LAST);
SELECT * FROM t1, rt0 INNER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c2)))OR(rt1.c1))) NOT BETWEEN (((((rt0.c2)AND(t1.c4)))AND(t1.c12))) AND (((rt1.c3) IS FALSE))) WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)IS(CASE WHEN rt1.c3 THEN t1.c2 END))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c4)AND(x'')))) AND (((NOT (rt1.c4))))) ASC, ((((t1.c2)>=(t1.c2))) NOTNULL) DESC, (~ (((rt0.c2)<=(rt1.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)IS(CASE WHEN rt1.c3 THEN t1.c2 END))) IS TRUE)  as count FROM t1, rt0 INNER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c2)))OR(rt1.c1))) NOT BETWEEN (((((rt0.c2)AND(t1.c4)))AND(t1.c12))) AND (((rt1.c3) IS FALSE))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c4)AND(x'')))) AND (((NOT (rt1.c4))))) ASC, ((((t1.c2)>=(t1.c2))) NOTNULL) DESC, (~ (((rt0.c2)<=(rt1.c3))))  NULLS LAST);
SELECT * FROM t1, rt0 INNER JOIN rt1 ON ((((((rt1.c1)AND(rt0.c2)))OR(rt1.c1))) NOT BETWEEN (((((rt0.c2)AND(t1.c4)))AND(t1.c12))) AND (((rt1.c3) IS FALSE))) WHERE (((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c2 END)IS(CASE WHEN rt1.c3 THEN t1.c2 END))) ORDER BY (((rt1.c3)) NOT BETWEEN ((((rt1.c4)AND(x'')))) AND (((NOT (rt1.c4))))) ASC, ((((t1.c2)>=(t1.c2))) NOTNULL) DESC, (~ (((rt0.c2)<=(rt1.c3))))  NULLS LAST;
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (- (NULL)) WHERE ('-1957309520');
SELECT SUM(count) FROM (SELECT (('-1957309520') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (- (NULL)));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (- (NULL)) WHERE ('-1957309520');
SELECT SUM(count) FROM (SELECT (('-1957309520') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON (- (NULL)));
SELECT ALL * FROM rt1 FULL OUTER JOIN rt0 ON (- (NULL)) WHERE ('-1957309520');
SELECT * FROM rt1 WHERE (((((rt1.c4)IS NOT(0.5830030009069498))) NOT BETWEEN (CAST(rt1.c5 AS REAL)) AND (json_type(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)IS NOT(0.5830030009069498))) NOT BETWEEN (CAST(rt1.c5 AS REAL)) AND (json_type(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4)IS NOT(0.5830030009069498))) NOT BETWEEN (CAST(rt1.c5 AS REAL)) AND (json_type(rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4)IS NOT(0.5830030009069498))) NOT BETWEEN (CAST(rt1.c5 AS REAL)) AND (json_type(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c4)IS NOT(0.5830030009069498))) NOT BETWEEN (CAST(rt1.c5 AS REAL)) AND (json_type(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL)>(CAST(rt1.c1 AS INTEGER)))) ORDER BY (- ((~ (rt0.c4)))), ('#zldwﱓ' IN (COALESCE(DISTINCT NULL, 0.7658932830627988, rt0.c0, rt0.c3), TYPEOF(DISTINCT rt0.c4))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- ((~ (rt0.c4)))), ('#zldwﱓ' IN (COALESCE(DISTINCT NULL, 0.7658932830627988, rt0.c0, rt0.c3), TYPEOF(DISTINCT rt0.c4))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL)>(CAST(rt1.c1 AS INTEGER)))) ORDER BY (- ((~ (rt0.c4)))), ('#zldwﱓ' IN (COALESCE(DISTINCT NULL, 0.7658932830627988, rt0.c0, rt0.c3), TYPEOF(DISTINCT rt0.c4))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (- ((~ (rt0.c4)))), ('#zldwﱓ' IN (COALESCE(DISTINCT NULL, 0.7658932830627988, rt0.c0, rt0.c3), TYPEOF(DISTINCT rt0.c4))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((NULL)>(CAST(rt1.c1 AS INTEGER)))) ORDER BY (- ((~ (rt0.c4)))), ('#zldwﱓ' IN (COALESCE(DISTINCT NULL, 0.7658932830627988, rt0.c0, rt0.c3), TYPEOF(DISTINCT rt0.c4))) DESC  NULLS FIRST;
SELECT * FROM rt1, rt0, t1 WHERE (((CAST(rt1.c4 AS BLOB)) NOT BETWEEN (((rt0.c4)+(t1.c2))) AND (json_array(rt0.c1, rt0.c4, t1.c2, rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB)) NOT BETWEEN (((rt0.c4)+(t1.c2))) AND (json_array(rt0.c1, rt0.c4, t1.c2, rt0.c4)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((CAST(rt1.c4 AS BLOB)) NOT BETWEEN (((rt0.c4)+(t1.c2))) AND (json_array(rt0.c1, rt0.c4, t1.c2, rt0.c4))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c4 AS BLOB)) NOT BETWEEN (((rt0.c4)+(t1.c2))) AND (json_array(rt0.c1, rt0.c4, t1.c2, rt0.c4)))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (((CAST(rt1.c4 AS BLOB)) NOT BETWEEN (((rt0.c4)+(t1.c2))) AND (json_array(rt0.c1, rt0.c4, t1.c2, rt0.c4))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((((t1.c2))>=((t1.c12))))IS NOT(((t1.c4)>(rt0.c1)))) WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((t1.c2))>=((t1.c12))))IS NOT(((t1.c4)>(rt0.c1)))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((((t1.c2))>=((t1.c12))))IS NOT(((t1.c4)>(rt0.c1)))) WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON (((((t1.c2))>=((t1.c12))))IS NOT(((t1.c4)>(rt0.c1)))));
SELECT * FROM rt0 CROSS JOIN t1 ON (((((t1.c2))>=((t1.c12))))IS NOT(((t1.c4)>(rt0.c1)))) WHERE (t1.c2);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (0.7273455473169811) ORDER BY ((318138482)==((t1.c39 IN (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7273455473169811) IS TRUE)  as count FROM t1, rt0 ORDER BY ((318138482)==((t1.c39 IN (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (0.7273455473169811) ORDER BY ((318138482)==((t1.c39 IN (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.7273455473169811) IS TRUE)  as count FROM t1, rt0 ORDER BY ((318138482)==((t1.c39 IN (rt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (0.7273455473169811) ORDER BY ((318138482)==((t1.c39 IN (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (rt1.c4 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (rt1.c4 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (rt1.c4 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 NATURAL JOIN t1 WHERE (((rt1.c6 COLLATE RTRIM)<(t1.c12))) ORDER BY COALESCE(DISTINCT (((rt1.c4, '-2009378959', t1.c12, rt1.c6, t1.c39))>=((rt1.c2, rt1.c5, rt1.c5, -109004813, t1.c4))), ((((((((rt1.c4)AND(t1.c2)))AND(t1.c39)))AND(rt1.c2)))AND(rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c6 COLLATE RTRIM)<(t1.c12))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY COALESCE(DISTINCT (((rt1.c4, '-2009378959', t1.c12, rt1.c6, t1.c39))>=((rt1.c2, rt1.c5, rt1.c5, -109004813, t1.c4))), ((((((((rt1.c4)AND(t1.c2)))AND(t1.c39)))AND(rt1.c2)))AND(rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN t1 WHERE (((rt1.c6 COLLATE RTRIM)<(t1.c12))) ORDER BY COALESCE(DISTINCT (((rt1.c4, '-2009378959', t1.c12, rt1.c6, t1.c39))>=((rt1.c2, rt1.c5, rt1.c5, -109004813, t1.c4))), ((((((((rt1.c4)AND(t1.c2)))AND(t1.c39)))AND(rt1.c2)))AND(rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c6 COLLATE RTRIM)<(t1.c12))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1 ORDER BY COALESCE(DISTINCT (((rt1.c4, '-2009378959', t1.c12, rt1.c6, t1.c39))>=((rt1.c2, rt1.c5, rt1.c5, -109004813, t1.c4))), ((((((((rt1.c4)AND(t1.c2)))AND(t1.c39)))AND(rt1.c2)))AND(rt1.c1)))  NULLS FIRST);
SELECT COUNT(*) FROM rt1 NATURAL JOIN t1 WHERE (((rt1.c6 COLLATE RTRIM)<(t1.c12))) ORDER BY COALESCE(DISTINCT (((rt1.c4, '-2009378959', t1.c12, rt1.c6, t1.c39))>=((rt1.c2, rt1.c5, rt1.c5, -109004813, t1.c4))), ((((((((rt1.c4)AND(t1.c2)))AND(t1.c39)))AND(rt1.c2)))AND(rt1.c1)))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), ((json_type(rt0.c0))OR(rt0.c0 COLLATE NOCASE)) ASC, (((+ (rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), ((json_type(rt0.c0))OR(rt0.c0 COLLATE NOCASE)) ASC, (((+ (rt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), ((json_type(rt0.c0))OR(rt0.c0 COLLATE NOCASE)) ASC, (((+ (rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0 ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), ((json_type(rt0.c0))OR(rt0.c0 COLLATE NOCASE)) ASC, (((+ (rt0.c1))) NOT NULL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c2) ORDER BY (CAST(rt0.c4 AS TEXT) IN ()), ((json_type(rt0.c0))OR(rt0.c0 COLLATE NOCASE)) ASC, (((+ (rt0.c1))) NOT NULL) ASC  NULLS FIRST;
SELECT * FROM t1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.3874169226830335)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c2)AND(t1.c39)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c2, 0.3874169226830335)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c2)AND(t1.c39))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.3874169226830335)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c2)AND(t1.c39)))));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c2, 0.3874169226830335)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c2)AND(t1.c39))))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c2, 0.3874169226830335)) NOT BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c2)AND(t1.c39)))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((TYPEOF(DISTINCT rt0.c4))||((((rt0.c4))<((rt0.c2)))))) ORDER BY rt0.c3 ASC, (((NOT (rt0.c0)))||(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c4))||((((rt0.c4))<((rt0.c2)))))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c3 ASC, (((NOT (rt0.c0)))||(rt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((TYPEOF(DISTINCT rt0.c4))||((((rt0.c4))<((rt0.c2)))))) ORDER BY rt0.c3 ASC, (((NOT (rt0.c0)))||(rt0.c2)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(DISTINCT rt0.c4))||((((rt0.c4))<((rt0.c2)))))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c3 ASC, (((NOT (rt0.c0)))||(rt0.c2)) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (((TYPEOF(DISTINCT rt0.c4))||((((rt0.c4))<((rt0.c2)))))) ORDER BY rt0.c3 ASC, (((NOT (rt0.c0)))||(rt0.c2)) ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c4)) BETWEEN ((x'')) AND ((t1.c39))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((x'')) AND ((t1.c39))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c4)) BETWEEN ((x'')) AND ((t1.c39))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((rt1.c4)) BETWEEN ((x'')) AND ((t1.c39))) COLLATE NOCASE) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((rt1.c4)) BETWEEN ((x'')) AND ((t1.c39))) COLLATE NOCASE);
SELECT * FROM t1, rt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (rt1.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c4) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (rt1.c4);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c4) NOTNULL)) IS FALSE)) ORDER BY (((((rt0.c2))==((rt0.c0))))IS(''));
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, t1 ORDER BY (((((rt0.c2))==((rt0.c0))))IS('')));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c4) NOTNULL)) IS FALSE)) ORDER BY (((((rt0.c2))==((rt0.c0))))IS(''));
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOTNULL)) IS FALSE)) IS TRUE)  as count FROM rt0, t1 ORDER BY (((((rt0.c2))==((rt0.c0))))IS('')));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((((t1.c4) NOTNULL)) IS FALSE)) ORDER BY (((((rt0.c2))==((rt0.c0))))IS(''));
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c4)IS(t1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c4)IS(t1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c4)IS(t1.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c4)IS(t1.c2)) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CAST(((t1.c4)IS(t1.c2)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((0.1809727542215197))) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END THEN (rt1.c1 IN ()) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c4)<=(rt0.c2)) END) ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN (((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt1.c1) NOT BETWEEN (0.9124466225450836) AND (t1.c39))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((0.1809727542215197))) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END THEN (rt1.c1 IN ()) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c4)<=(rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN (((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt1.c1) NOT BETWEEN (0.9124466225450836) AND (t1.c39))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((0.1809727542215197))) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END THEN (rt1.c1 IN ()) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c4)<=(rt0.c2)) END) ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN (((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt1.c1) NOT BETWEEN (0.9124466225450836) AND (t1.c39))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((0.1809727542215197))) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END THEN (rt1.c1 IN ()) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c4)<=(rt0.c2)) END) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN (((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt1.c1) NOT BETWEEN (0.9124466225450836) AND (t1.c39))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0, t1 WHERE (CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c2))) THEN (((rt1.c2)) BETWEEN ((rt1.c3)) AND ((0.1809727542215197))) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c5 WHEN rt1.c4 THEN rt0.c3 WHEN rt1.c4 THEN rt0.c3 ELSE rt1.c2 END THEN (rt1.c1 IN ()) WHEN ((rt0.c3) ISNULL) THEN ((rt0.c4)<=(rt0.c2)) END) ORDER BY ((((rt0.c3) NOTNULL)) BETWEEN (((t1.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0))) AND (((rt1.c1) NOT BETWEEN (0.9124466225450836) AND (t1.c39))))  NULLS FIRST;
SELECT * FROM rt1, t1, rt0 WHERE (CAST(UPPER(t1.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(t1.c2) AS NUMERIC)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CAST(UPPER(t1.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(t1.c2) AS NUMERIC)) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CAST(UPPER(t1.c2) AS NUMERIC));
SELECT * FROM rt1, t1, rt0 WHERE ((rt1.c6 IN (((t1.c4)=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c6 IN (((t1.c4)=(rt1.c0))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE ((rt1.c6 IN (((t1.c4)=(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((rt1.c6 IN (((t1.c4)=(rt1.c0))))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE ((rt1.c6 IN (((t1.c4)=(rt1.c0)))));
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN (rt1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c0 COLLATE NOCASE THEN (rt1.c2 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN rt1.c0 COLLATE NOCASE THEN (rt1.c2 IN ()) END);
SELECT * FROM rt1 WHERE (((((rt1.c3)LIKE(rt1.c1))) NOTNULL)) ORDER BY UPPER(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)LIKE(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT NULL));
SELECT * FROM rt1 WHERE (((((rt1.c3)LIKE(rt1.c1))) NOTNULL)) ORDER BY UPPER(DISTINCT NULL);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)LIKE(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT NULL));
SELECT * FROM rt1 WHERE (((((rt1.c3)LIKE(rt1.c1))) NOTNULL)) ORDER BY UPPER(DISTINCT NULL);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (SUBSTR(((rt0.c3)LIKE(t1.c12)), ((rt0.c3)&(t1.c12)))) ORDER BY rt0.c2, ((((CASE t1.c12  WHEN t1.c12 THEN rt0.c2 ELSE rt0.c4 END)OR(((t1.c4)>>(rt0.c0)))))OR((~ (t1.c12)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c3)LIKE(t1.c12)), ((rt0.c3)&(t1.c12)))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c2, ((((CASE t1.c12  WHEN t1.c12 THEN rt0.c2 ELSE rt0.c4 END)OR(((t1.c4)>>(rt0.c0)))))OR((~ (t1.c12)))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (SUBSTR(((rt0.c3)LIKE(t1.c12)), ((rt0.c3)&(t1.c12)))) ORDER BY rt0.c2, ((((CASE t1.c12  WHEN t1.c12 THEN rt0.c2 ELSE rt0.c4 END)OR(((t1.c4)>>(rt0.c0)))))OR((~ (t1.c12)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((SUBSTR(((rt0.c3)LIKE(t1.c12)), ((rt0.c3)&(t1.c12)))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c2, ((((CASE t1.c12  WHEN t1.c12 THEN rt0.c2 ELSE rt0.c4 END)OR(((t1.c4)>>(rt0.c0)))))OR((~ (t1.c12)))) DESC);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE (SUBSTR(((rt0.c3)LIKE(t1.c12)), ((rt0.c3)&(t1.c12)))) ORDER BY rt0.c2, ((((CASE t1.c12  WHEN t1.c12 THEN rt0.c2 ELSE rt0.c4 END)OR(((t1.c4)>>(rt0.c0)))))OR((~ (t1.c12)))) DESC;
SELECT * FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c4 AS TEXT))IS NOT(ABS(rt0.c1))) CROSS JOIN rt1 ON ((((t1.c2 IN ())))>=(((((rt0.c4))>((rt1.c3)))))) WHERE ((+ (rt1.c2)) COLLATE RTRIM) ORDER BY (+ (((rt1.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c4 AS TEXT))IS NOT(ABS(rt0.c1))) CROSS JOIN rt1 ON ((((t1.c2 IN ())))>=(((((rt0.c4))>((rt1.c3)))))) ORDER BY (+ (((rt1.c1) NOTNULL))) DESC);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c4 AS TEXT))IS NOT(ABS(rt0.c1))) CROSS JOIN rt1 ON ((((t1.c2 IN ())))>=(((((rt0.c4))>((rt1.c3)))))) WHERE ((+ (rt1.c2)) COLLATE RTRIM) ORDER BY (+ (((rt1.c1) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c4 AS TEXT))IS NOT(ABS(rt0.c1))) CROSS JOIN rt1 ON ((((t1.c2 IN ())))>=(((((rt0.c4))>((rt1.c3)))))) ORDER BY (+ (((rt1.c1) NOTNULL))) DESC);
SELECT * FROM rt0 FULL OUTER JOIN t1 ON ((CAST(t1.c4 AS TEXT))IS NOT(ABS(rt0.c1))) CROSS JOIN rt1 ON ((((t1.c2 IN ())))>=(((((rt0.c4))>((rt1.c3)))))) WHERE ((+ (rt1.c2)) COLLATE RTRIM) ORDER BY (+ (((rt1.c1) NOTNULL))) DESC;
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((t1.c12 COLLATE NOCASE) IS TRUE) WHERE ((((t1.c12 IN ()))>('6DT\rO')));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c12 IN ()))>('6DT\rO'))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((t1.c12 COLLATE NOCASE) IS TRUE));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((t1.c12 COLLATE NOCASE) IS TRUE) WHERE ((((t1.c12 IN ()))>('6DT\rO')));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c12 IN ()))>('6DT\rO'))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((t1.c12 COLLATE NOCASE) IS TRUE));
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON ((t1.c12 COLLATE NOCASE) IS TRUE) WHERE ((((t1.c12 IN ()))>('6DT\rO')));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON (((((0.07653787011660407))<>((rt1.c3))))>>(rt1.c4)) INNER JOIN rt0 ON ((CAST(t1.c4 AS NUMERIC)) NOTNULL) WHERE ((((rt1.c1)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND (((((rt1.c6)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND (((((rt1.c6)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON (((((0.07653787011660407))<>((rt1.c3))))>>(rt1.c4)) INNER JOIN rt0 ON ((CAST(t1.c4 AS NUMERIC)) NOTNULL));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON (((((0.07653787011660407))<>((rt1.c3))))>>(rt1.c4)) INNER JOIN rt0 ON ((CAST(t1.c4 AS NUMERIC)) NOTNULL) WHERE ((((rt1.c1)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND (((((rt1.c6)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND (((((rt1.c6)) BETWEEN ((rt0.c2)) AND ((rt1.c1))))))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON (((((0.07653787011660407))<>((rt1.c3))))>>(rt1.c4)) INNER JOIN rt0 ON ((CAST(t1.c4 AS NUMERIC)) NOTNULL));
SELECT COUNT(*) FROM t1 INNER JOIN rt1 ON (((((0.07653787011660407))<>((rt1.c3))))>>(rt1.c4)) INNER JOIN rt0 ON ((CAST(t1.c4 AS NUMERIC)) NOTNULL) WHERE ((((rt1.c1)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND (((((rt1.c6)) BETWEEN ((rt0.c2)) AND ((rt1.c1)))))));
SELECT * FROM rt1, t1, rt0 WHERE (CASE WHEN ((rt1.c3)IS NOT(rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN (t1.c2, rt1.c6)) THEN ((rt1.c1) ISNULL) WHEN (- (rt1.c3)) THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3)IS NOT(rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN (t1.c2, rt1.c6)) THEN ((rt1.c1) ISNULL) WHEN (- (rt1.c3)) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CASE WHEN ((rt1.c3)IS NOT(rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN (t1.c2, rt1.c6)) THEN ((rt1.c1) ISNULL) WHEN (- (rt1.c3)) THEN (rt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3)IS NOT(rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN (t1.c2, rt1.c6)) THEN ((rt1.c1) ISNULL) WHEN (- (rt1.c3)) THEN (rt0.c0 IN ()) END) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (CASE WHEN ((rt1.c3)IS NOT(rt0.c1)) THEN rt0.c2 COLLATE NOCASE WHEN (rt0.c0 IN (t1.c2, rt1.c6)) THEN ((rt1.c1) ISNULL) WHEN (- (rt1.c3)) THEN (rt0.c0 IN ()) END);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((((((t1.c12)<(rt1.c2)))OR(CAST(rt1.c2 AS NUMERIC))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((t1.c12)<(rt1.c2)))OR(CAST(rt1.c2 AS NUMERIC))))OR(x''))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((((((t1.c12)<(rt1.c2)))OR(CAST(rt1.c2 AS NUMERIC))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((t1.c12)<(rt1.c2)))OR(CAST(rt1.c2 AS NUMERIC))))OR(x''))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (((((((t1.c12)<(rt1.c2)))OR(CAST(rt1.c2 AS NUMERIC))))OR(x'')));
SELECT ALL * FROM rt0, rt1, t1 WHERE ('') ORDER BY ((rt1.c3)*(rt1.c6)) COLLATE RTRIM DESC  NULLS LAST, RTRIM((- (t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((rt1.c3)*(rt1.c6)) COLLATE RTRIM DESC  NULLS LAST, RTRIM((- (t1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t1 WHERE ('') ORDER BY ((rt1.c3)*(rt1.c6)) COLLATE RTRIM DESC  NULLS LAST, RTRIM((- (t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((rt1.c3)*(rt1.c6)) COLLATE RTRIM DESC  NULLS LAST, RTRIM((- (t1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, rt1, t1 WHERE ('') ORDER BY ((rt1.c3)*(rt1.c6)) COLLATE RTRIM DESC  NULLS LAST, RTRIM((- (t1.c2))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2)>(rt1.c6)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>(rt1.c6)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2)>(rt1.c6)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)>(rt1.c6)) COLLATE RTRIM) IS TRUE)  as count FROM rt1, rt0);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c2)>(rt1.c6)) COLLATE RTRIM);
SELECT ALL * FROM rt0, rt1 WHERE ((CAST('-1741017635' AS REAL) IN (CAST(rt1.c1 AS NUMERIC), ((rt0.c1)&(rt0.c4))))) ORDER BY (- ((0.0822595478758481 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1741017635' AS REAL) IN (CAST(rt1.c1 AS NUMERIC), ((rt0.c1)&(rt0.c4))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- ((0.0822595478758481 IN ()))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE ((CAST('-1741017635' AS REAL) IN (CAST(rt1.c1 AS NUMERIC), ((rt0.c1)&(rt0.c4))))) ORDER BY (- ((0.0822595478758481 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST('-1741017635' AS REAL) IN (CAST(rt1.c1 AS NUMERIC), ((rt0.c1)&(rt0.c4))))) IS TRUE)  as count FROM rt0, rt1 ORDER BY (- ((0.0822595478758481 IN ()))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE ((CAST('-1741017635' AS REAL) IN (CAST(rt1.c1 AS NUMERIC), ((rt0.c1)&(rt0.c4))))) ORDER BY (- ((0.0822595478758481 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (0.627503777990888);
SELECT SUM(count) FROM (SELECT ((0.627503777990888) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.627503777990888);
SELECT SUM(count) FROM (SELECT ((0.627503777990888) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.627503777990888);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c2))) BETWEEN (0X4238ef63) AND (((rt1.c5) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>(rt1.c2))) BETWEEN (0x4238ef63) AND (((rt1.c5) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c2))) BETWEEN (0X4238ef63) AND (((rt1.c5) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)>(rt1.c2))) BETWEEN (0x4238ef63) AND (((rt1.c5) NOTNULL)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c4)>(rt1.c2))) BETWEEN (0X4238ef63) AND (((rt1.c5) NOTNULL))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON CAST(t1.c4 AS TEXT) WHERE (rt0.c4) ORDER BY 0.3687050161699459  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON CAST(t1.c4 AS TEXT) ORDER BY 0.3687050161699459  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON CAST(t1.c4 AS TEXT) WHERE (rt0.c4) ORDER BY 0.3687050161699459  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON CAST(t1.c4 AS TEXT) ORDER BY 0.3687050161699459  NULLS LAST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN t1 ON CAST(t1.c4 AS TEXT) WHERE (rt0.c4) ORDER BY 0.3687050161699459  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((- (rt1.c6)))AND((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt1.c6)) AND ((rt1.c3, rt1.c6, x''))))))AND((+ (rt0.c0)))))AND((~ (rt0.c3)))))OR(rt1.c3)) WHERE (((((rt0.c1) BETWEEN (rt1.c5) AND (rt0.c3))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c3))) AND (((((rt0.c0)OR(0.5560686594915248)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt1.c5) AND (rt0.c3))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c3))) AND (((((rt0.c0)OR(0.5560686594915248)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((- (rt1.c6)))AND((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt1.c6)) AND ((rt1.c3, rt1.c6, x''))))))AND((+ (rt0.c0)))))AND((~ (rt0.c3)))))OR(rt1.c3)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((- (rt1.c6)))AND((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt1.c6)) AND ((rt1.c3, rt1.c6, x''))))))AND((+ (rt0.c0)))))AND((~ (rt0.c3)))))OR(rt1.c3)) WHERE (((((rt0.c1) BETWEEN (rt1.c5) AND (rt0.c3))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c3))) AND (((((rt0.c0)OR(0.5560686594915248)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt1.c5) AND (rt0.c3))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c3))) AND (((((rt0.c0)OR(0.5560686594915248)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((- (rt1.c6)))AND((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt1.c6)) AND ((rt1.c3, rt1.c6, x''))))))AND((+ (rt0.c0)))))AND((~ (rt0.c3)))))OR(rt1.c3)));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON (((((((((- (rt1.c6)))AND((((rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt1.c6)) AND ((rt1.c3, rt1.c6, x''))))))AND((+ (rt0.c0)))))AND((~ (rt0.c3)))))OR(rt1.c3)) WHERE (((((rt0.c1) BETWEEN (rt1.c5) AND (rt0.c3))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c4) AND (rt0.c3))) AND (((((rt0.c0)OR(0.5560686594915248)))OR(rt0.c1)))));
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (x'') ORDER BY rt1.c6 DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c6 DESC);
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (x'') ORDER BY rt1.c6 DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, rt1 ORDER BY rt1.c6 DESC);
SELECT * FROM rt0 NOT INDEXED, rt1 WHERE (x'') ORDER BY rt1.c6 DESC;
SELECT ALL * FROM rt1, t1 INDEXED BY i84, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((((rt0.c2) IS TRUE))))) ORDER BY CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt1.c1 THEN t1.c12 ELSE t1.c4 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt1, t1 INDEXED BY i84, rt0 ORDER BY CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt1.c1 THEN t1.c12 ELSE t1.c4 END END  NULLS LAST);
SELECT ALL * FROM rt1, t1 INDEXED BY i84, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((((rt0.c2) IS TRUE))))) ORDER BY CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt1.c1 THEN t1.c12 ELSE t1.c4 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((((rt0.c2) IS TRUE))))) IS TRUE)  as count FROM rt1, t1 INDEXED BY i84, rt0 ORDER BY CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt1.c1 THEN t1.c12 ELSE t1.c4 END END  NULLS LAST);
SELECT ALL * FROM rt1, t1 INDEXED BY i84, rt0 WHERE ((((rt0.c1)) BETWEEN ((((rt1.c3) NOT NULL))) AND ((((rt0.c2) IS TRUE))))) ORDER BY CASE WHEN rt1.c4 COLLATE NOCASE THEN CASE rt0.c0  WHEN rt1.c1 THEN t1.c12 ELSE t1.c4 END END  NULLS LAST;
SELECT * FROM rt1 FULL OUTER JOIN t1 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)) AS TEXT) LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt1.c2) BETWEEN (rt1.c4) AND (t1.c2))))) WHERE (((COALESCE(DISTINCT t1.c39, x'', t1.c2, t1.c12, NULL, rt0.c4))/(((t1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t1.c39, x'', t1.c2, t1.c12, NULL, rt0.c4))/(((t1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)) AS TEXT) LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt1.c2) BETWEEN (rt1.c4) AND (t1.c2))))));
SELECT * FROM rt1 FULL OUTER JOIN t1 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)) AS TEXT) LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt1.c2) BETWEEN (rt1.c4) AND (t1.c2))))) WHERE (((COALESCE(DISTINCT t1.c39, x'', t1.c2, t1.c12, NULL, rt0.c4))/(((t1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(DISTINCT t1.c39, x'', t1.c2, t1.c12, NULL, rt0.c4))/(((t1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN t1 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)) AS TEXT) LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt1.c2) BETWEEN (rt1.c4) AND (t1.c2))))));
SELECT * FROM rt1 FULL OUTER JOIN t1 ON CAST(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c3)) AS TEXT) LEFT OUTER JOIN rt0 ON (((rt1.c0)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((((rt1.c2) BETWEEN (rt1.c4) AND (t1.c2))))) WHERE (((COALESCE(DISTINCT t1.c39, x'', t1.c2, t1.c12, NULL, rt0.c4))/(((t1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE rt0.c2  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY WHERE (CAST((+ (rt1.c2)) AS NUMERIC)) ORDER BY ((((((((((rt1.c0)GLOB(rt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c5)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((rt0.c3)AND(rt0.c0)))OR(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c5))))) DESC, ((rt0.c3 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE rt0.c2  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY ORDER BY ((((((((((rt1.c0)GLOB(rt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c5)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((rt0.c3)AND(rt0.c0)))OR(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c5))))) DESC, ((rt0.c3 IN ()) IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE rt0.c2  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY WHERE (CAST((+ (rt1.c2)) AS NUMERIC)) ORDER BY ((((((((((rt1.c0)GLOB(rt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c5)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((rt0.c3)AND(rt0.c0)))OR(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c5))))) DESC, ((rt0.c3 IN ()) IN ());
SELECT SUM(count) FROM (SELECT ((CAST((+ (rt1.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON CASE rt0.c2  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY ORDER BY ((((((((((rt1.c0)GLOB(rt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c5)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((rt0.c3)AND(rt0.c0)))OR(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c5))))) DESC, ((rt0.c3 IN ()) IN ()));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN rt1 ON CASE rt0.c2  WHEN rt1.c0 THEN rt1.c3 END COLLATE BINARY WHERE (CAST((+ (rt1.c2)) AS NUMERIC)) ORDER BY ((((((((((rt1.c0)GLOB(rt1.c0)))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c5)))))OR(rt0.c2 COLLATE RTRIM)))OR(((((rt0.c3)AND(rt0.c0)))OR(rt1.c1)))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c5))))) DESC, ((rt0.c3 IN ()) IN ());
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((- (0.9560421067992533))) NOT BETWEEN (HEX(rt1.c6)) AND ((-1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (0.9560421067992533))) NOT BETWEEN (HEX(rt1.c6)) AND ((-1 IN ())))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((- (0.9560421067992533))) NOT BETWEEN (HEX(rt1.c6)) AND ((-1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((- (0.9560421067992533))) NOT BETWEEN (HEX(rt1.c6)) AND ((-1 IN ())))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((- (0.9560421067992533))) NOT BETWEEN (HEX(rt1.c6)) AND ((-1 IN ()))));
SELECT ALL * FROM t1, rt1, rt0 WHERE (TRIM('')) ORDER BY CAST('504685988' AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM('')) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST('504685988' AS BLOB) ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE (TRIM('')) ORDER BY CAST('504685988' AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ((TRIM('')) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CAST('504685988' AS BLOB) ASC);
SELECT ALL * FROM t1, rt1, rt0 WHERE (TRIM('')) ORDER BY CAST('504685988' AS BLOB) ASC;
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((('-1092128023') NOT BETWEEN (rt0.c2) AND (rt1.c3))))>=((LIKE(t1.c39, rt0.c0, '뫇')))) CROSS JOIN t1 ON CASE WHEN ((rt1.c5) BETWEEN (t1.c39) AND (rt1.c6)) THEN 0.3722134282170486 ELSE (((rt0.c1, rt0.c3, rt0.c1))>=((t1.c4, 0.5482754714773838, rt0.c4))) END WHERE (CASE ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN ((t1.c39)==(rt1.c2)) THEN rt0.c3 ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN ((t1.c39)=(rt1.c2)) THEN rt0.c3 ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((('-1092128023') NOT BETWEEN (rt0.c2) AND (rt1.c3))))>=((LIKE(t1.c39, rt0.c0, '뫇')))) CROSS JOIN t1 ON CASE WHEN ((rt1.c5) BETWEEN (t1.c39) AND (rt1.c6)) THEN 0.3722134282170486 ELSE (((rt0.c1, rt0.c3, rt0.c1))>=((t1.c4, 0.5482754714773838, rt0.c4))) END);
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN rt1 ON ((((('-1092128023') NOT BETWEEN (rt0.c2) AND (rt1.c3))))>=((LIKE(t1.c39, rt0.c0, '뫇')))) CROSS JOIN t1 ON CASE WHEN ((rt1.c5) BETWEEN (t1.c39) AND (rt1.c6)) THEN 0.3722134282170486 ELSE (((rt0.c1, rt0.c3, rt0.c1))>=((t1.c4, 0.5482754714773838, rt0.c4))) END WHERE (CASE ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN ((t1.c39)==(rt1.c2)) THEN rt0.c3 ELSE rt0.c2 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))  WHEN ((t1.c39)=(rt1.c2)) THEN rt0.c3 ELSE rt0.c2 COLLATE NOCASE END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN rt1 ON ((((('-1092128023') NOT BETWEEN (rt0.c2) AND (rt1.c3))))>=((LIKE(t1.c39, rt0.c0, '뫇')))) CROSS JOIN t1 ON CASE WHEN ((rt1.c5) BETWEEN (t1.c39) AND (rt1.c6)) THEN 0.3722134282170486 ELSE (((rt0.c1, rt0.c3, rt0.c1))>=((t1.c4, 0.5482754714773838, rt0.c4))) END);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0)))AND(rt0.c1)))OR(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c0)))AND(rt0.c1)))OR(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0)))AND(rt0.c1)))OR(rt0.c4)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)-(rt0.c0)))AND(rt0.c1)))OR(rt0.c4))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c2)-(rt0.c0)))AND(rt0.c1)))OR(rt0.c4)));
SELECT * FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER))>>(((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(NULL)))OR(rt1.c1))))) ORDER BY ((((rt1.c3)<=(rt1.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))>>(((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(NULL)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)<=(rt1.c3))) IS FALSE) ASC);
SELECT * FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER))>>(((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(NULL)))OR(rt1.c1))))) ORDER BY ((((rt1.c3)<=(rt1.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS INTEGER))>>(((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(NULL)))OR(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)<=(rt1.c3))) IS FALSE) ASC);
SELECT * FROM rt1 WHERE (((CAST(rt1.c2 AS INTEGER))>>(((((((((rt1.c3)AND(rt1.c0)))AND(rt1.c3)))AND(NULL)))OR(rt1.c1))))) ORDER BY ((((rt1.c3)<=(rt1.c3))) IS FALSE) ASC;
SELECT ALL * FROM rt1 WHERE (((0.2998713531483742)*(rt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c3)>>(rt1.c1)))|(((rt1.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((0.2998713531483742)*(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)>>(rt1.c1)))|(((rt1.c3) NOTNULL))));
SELECT ALL * FROM rt1 WHERE (((0.2998713531483742)*(rt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c3)>>(rt1.c1)))|(((rt1.c3) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((((0.2998713531483742)*(rt1.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)>>(rt1.c1)))|(((rt1.c3) NOTNULL))));
SELECT ALL * FROM rt1 WHERE (((0.2998713531483742)*(rt1.c0 COLLATE BINARY))) ORDER BY ((((rt1.c3)>>(rt1.c1)))|(((rt1.c3) NOTNULL)));
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN t1.c2 WHEN t1.c2 THEN NULL END) NOT BETWEEN (((t1.c39) NOT BETWEEN (t1.c4) AND (t1.c2))) AND (((t1.c39)&(t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN t1.c2 WHEN t1.c2 THEN NULL END) NOT BETWEEN (((t1.c39) NOT BETWEEN (t1.c4) AND (t1.c2))) AND (((t1.c39)&(t1.c4))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN t1.c2 WHEN t1.c2 THEN NULL END) NOT BETWEEN (((t1.c39) NOT BETWEEN (t1.c4) AND (t1.c2))) AND (((t1.c39)&(t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN t1.c2 WHEN t1.c2 THEN NULL END) NOT BETWEEN (((t1.c39) NOT BETWEEN (t1.c4) AND (t1.c2))) AND (((t1.c39)&(t1.c4))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c12 THEN t1.c2 WHEN t1.c4 THEN t1.c2 WHEN t1.c2 THEN NULL END) NOT BETWEEN (((t1.c39) NOT BETWEEN (t1.c4) AND (t1.c2))) AND (((t1.c39)&(t1.c4)))));
SELECT * FROM t1, rt0 WHERE (rt0.c0) ORDER BY '1109704299' ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, rt0 ORDER BY '1109704299' ASC);
SELECT * FROM t1, rt0 WHERE (rt0.c0) ORDER BY '1109704299' ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM t1, rt0 ORDER BY '1109704299' ASC);
SELECT * FROM t1, rt0 WHERE (rt0.c0) ORDER BY '1109704299' ASC;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c4)) BETWEEN (((t1.c4 IN ()))) AND (((((t1.c4, t1.c12, t1.c12))<=((t1.c4, x'', t1.c39)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c4)) BETWEEN (((t1.c4 IN ()))) AND (((((t1.c4, t1.c12, t1.c12))<=((t1.c4, x'', t1.c39))))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c4)) BETWEEN (((t1.c4 IN ()))) AND (((((t1.c4, t1.c12, t1.c12))<=((t1.c4, x'', t1.c39)))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c4)) BETWEEN (((t1.c4 IN ()))) AND (((((t1.c4, t1.c12, t1.c12))<=((t1.c4, x'', t1.c39))))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c4)) BETWEEN (((t1.c4 IN ()))) AND (((((t1.c4, t1.c12, t1.c12))<=((t1.c4, x'', t1.c39)))))));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((('600063359')LIKE(rt0.c1)))))AND((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) ISNULL))AND((('600063359')LIKE(rt0.c1)))))AND((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((('600063359')LIKE(rt0.c1)))))AND((+ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1) ISNULL))AND((('600063359')LIKE(rt0.c1)))))AND((+ (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c1) ISNULL))AND((('600063359')LIKE(rt0.c1)))))AND((+ (rt0.c2)))));
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 END)>=(((0.37308257754717167)/(t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c3 END)>=(((0.37308257754717167)/(t1.c4))))) IS TRUE)  as count FROM t1 NOT INDEXED, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 END)>=(((0.37308257754717167)/(t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c3 END)>=(((0.37308257754717167)/(t1.c4))))) IS TRUE)  as count FROM t1 NOT INDEXED, rt0);
SELECT ALL * FROM t1, rt0 WHERE (((CASE WHEN rt0.c1 THEN rt0.c3 END)>=(((0.37308257754717167)/(t1.c4)))));
SELECT * FROM t1 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)=(rt1.c5)) THEN ((t1.c2) BETWEEN (x'5d23') AND (t1.c39)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(t1.c2)) THEN rt0.c2 COLLATE BINARY WHEN (((rt1.c0))<=((rt0.c2))) THEN ((rt1.c3) IS TRUE) END FULL OUTER JOIN rt1 ON NULL WHERE ((((x'' IN ()))>>(('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))>>(('' IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)==(rt1.c5)) THEN ((t1.c2) BETWEEN (x'5d23') AND (t1.c39)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(t1.c2)) THEN rt0.c2 COLLATE BINARY WHEN (((rt1.c0))<=((rt0.c2))) THEN ((rt1.c3) IS TRUE) END FULL OUTER JOIN rt1 ON NULL);
SELECT * FROM t1 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)=(rt1.c5)) THEN ((t1.c2) BETWEEN (x'5d23') AND (t1.c39)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(t1.c2)) THEN rt0.c2 COLLATE BINARY WHEN (((rt1.c0))<=((rt0.c2))) THEN ((rt1.c3) IS TRUE) END FULL OUTER JOIN rt1 ON NULL WHERE ((((x'' IN ()))>>(('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((x'' IN ()))>>(('' IN ())))) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt0 ON CASE WHEN ((rt0.c1)==(rt1.c5)) THEN ((t1.c2) BETWEEN (x'5d23') AND (t1.c39)) WHEN ((((rt1.c0)AND(rt1.c3)))AND(t1.c2)) THEN rt0.c2 COLLATE BINARY WHEN (((rt1.c0))<=((rt0.c2))) THEN ((rt1.c3) IS TRUE) END FULL OUTER JOIN rt1 ON NULL);
SELECT * FROM t1, rt0 WHERE ((0.38033054740848926 IN ()));
SELECT SUM(count) FROM (SELECT (((0.38033054740848926 IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((0.38033054740848926 IN ()));
SELECT SUM(count) FROM (SELECT (((0.38033054740848926 IN ())) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((0.38033054740848926 IN ()));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c4) ISNULL))!=(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) ISNULL))<>(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c4) ISNULL))!=(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c4) ISNULL))<>(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c4))))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c4) ISNULL))!=(((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt0.c4)))));
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (rt0.c1);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (NULL);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c3)) AS TEXT)) ORDER BY 0.764120501392448;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.764120501392448);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c3)) AS TEXT)) ORDER BY 0.764120501392448;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, rt1 ORDER BY 0.764120501392448);
SELECT * FROM rt0, rt1 WHERE (CAST(((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c3)) AS TEXT)) ORDER BY 0.764120501392448;
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c1 IN ()) IN ())) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (((rt0.c1 IN ()) IN ()));
SELECT * FROM t1, rt0, rt1 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (((NULL) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((NULL) IS TRUE)) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (((NULL) IS TRUE));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (NOT (IFNULL(DISTINCT rt1.c3, t1.c2))) FULL OUTER JOIN rt0 ON ((((((((((t1.c39)AND(7.82445225E8)))OR('')))OR(rt0.c2)))OR(rt1.c5)))+(((((rt0.c4)AND(x'a510')))AND(rt1.c2)))) WHERE (((- (rt1.c4)) IN (((((((((rt1.c6)OR(t1.c2)))AND(rt1.c3)))OR('Mf{''(')))OR(rt1.c0))))) ORDER BY x'' ASC, ((CAST(t1.c12 AS TEXT)) ISNULL) DESC, (- ((('500020431') NOT BETWEEN (rt0.c0) AND (t1.c12)))) DESC;
SELECT SUM(count) FROM (SELECT ((((- (rt1.c4)) IN (((((((((rt1.c6)OR(t1.c2)))AND(rt1.c3)))OR('Mf{''(')))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (NOT (IFNULL(DISTINCT rt1.c3, t1.c2))) FULL OUTER JOIN rt0 ON ((((((((((t1.c39)AND(7.82445225E8)))OR('')))OR(rt0.c2)))OR(rt1.c5)))+(((((rt0.c4)AND(x'a510')))AND(rt1.c2)))) ORDER BY x'' ASC, ((CAST(t1.c12 AS TEXT)) ISNULL) DESC, (- ((('500020431') NOT BETWEEN (rt0.c0) AND (t1.c12)))) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (NOT (IFNULL(DISTINCT rt1.c3, t1.c2))) FULL OUTER JOIN rt0 ON ((((((((((t1.c39)AND(7.82445225E8)))OR('')))OR(rt0.c2)))OR(rt1.c5)))+(((((rt0.c4)AND(x'a510')))AND(rt1.c2)))) WHERE (((- (rt1.c4)) IN (((((((((rt1.c6)OR(t1.c2)))AND(rt1.c3)))OR('Mf{''(')))OR(rt1.c0))))) ORDER BY x'' ASC, ((CAST(t1.c12 AS TEXT)) ISNULL) DESC, (- ((('500020431') NOT BETWEEN (rt0.c0) AND (t1.c12)))) DESC;
SELECT SUM(count) FROM (SELECT ((((- (rt1.c4)) IN (((((((((rt1.c6)OR(t1.c2)))AND(rt1.c3)))OR('Mf{''(')))OR(rt1.c0))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON (NOT (IFNULL(DISTINCT rt1.c3, t1.c2))) FULL OUTER JOIN rt0 ON ((((((((((t1.c39)AND(7.82445225E8)))OR('')))OR(rt0.c2)))OR(rt1.c5)))+(((((rt0.c4)AND(x'a510')))AND(rt1.c2)))) ORDER BY x'' ASC, ((CAST(t1.c12 AS TEXT)) ISNULL) DESC, (- ((('500020431') NOT BETWEEN (rt0.c0) AND (t1.c12)))) DESC);
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON (NOT (IFNULL(DISTINCT rt1.c3, t1.c2))) FULL OUTER JOIN rt0 ON ((((((((((t1.c39)AND(7.82445225E8)))OR('')))OR(rt0.c2)))OR(rt1.c5)))+(((((rt0.c4)AND(x'a510')))AND(rt1.c2)))) WHERE (((- (rt1.c4)) IN (((((((((rt1.c6)OR(t1.c2)))AND(rt1.c3)))OR('Mf{''(')))OR(rt1.c0))))) ORDER BY x'' ASC, ((CAST(t1.c12 AS TEXT)) ISNULL) DESC, (- ((('500020431') NOT BETWEEN (rt0.c0) AND (t1.c12)))) DESC;
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c6) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c6) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c6) IS TRUE)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c6) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c6) IS TRUE)) IS TRUE));
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON rt0.c0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c3))<=((rt0.c2, rt0.c3, t1.c12))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))))OR((((t1.c39))<((t1.c39)))))) ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND((~ (rt0.c4)))))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))AND('-1904816653')))OR(rt0.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3, rt0.c0, rt0.c3))<=((rt0.c2, rt0.c3, t1.c12))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))))OR((((t1.c39))<((t1.c39)))))) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN rt0 ON rt0.c0 ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND((~ (rt0.c4)))))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))AND('-1904816653')))OR(rt0.c4))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON rt0.c0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c3))<=((rt0.c2, rt0.c3, t1.c12))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))))OR((((t1.c39))<((t1.c39)))))) ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND((~ (rt0.c4)))))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))AND('-1904816653')))OR(rt0.c4))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c3, rt0.c0, rt0.c3))<=((rt0.c2, rt0.c3, t1.c12))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))))OR((((t1.c39))<((t1.c39)))))) IS TRUE)  as count FROM t1 NOT INDEXED INNER JOIN rt0 ON rt0.c0 ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND((~ (rt0.c4)))))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))AND('-1904816653')))OR(rt0.c4))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt0 ON rt0.c0 WHERE ((((((((rt0.c3, rt0.c0, rt0.c3))<=((rt0.c2, rt0.c3, t1.c12))))OR(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4)))))OR((((t1.c39))<((t1.c39)))))) ORDER BY ((((((((rt0.c1 COLLATE RTRIM)AND((~ (rt0.c4)))))AND(CASE WHEN rt0.c4 THEN rt0.c2 END)))AND('-1904816653')))OR(rt0.c4))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((t1.c2) ISNULL))>(((rt0.c4) BETWEEN (rt0.c0) AND (t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) ISNULL))>(((rt0.c4) BETWEEN (rt0.c0) AND (t1.c4))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((t1.c2) ISNULL))>(((rt0.c4) BETWEEN (rt0.c0) AND (t1.c4)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) ISNULL))>(((rt0.c4) BETWEEN (rt0.c0) AND (t1.c4))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((t1.c2) ISNULL))>(((rt0.c4) BETWEEN (rt0.c0) AND (t1.c4)))));
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt0.c0, t1.c4, t1.c39)) NOT BETWEEN ((rt0.c1, rt1.c6, rt1.c3)) AND ((rt1.c0, rt0.c0, rt0.c4))))AND(rt1.c2))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, t1.c4, t1.c39)) NOT BETWEEN ((rt0.c1, rt1.c6, rt1.c3)) AND ((rt1.c0, rt0.c0, rt0.c4))))AND(rt1.c2))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt0.c0, t1.c4, t1.c39)) NOT BETWEEN ((rt0.c1, rt1.c6, rt1.c3)) AND ((rt1.c0, rt0.c0, rt0.c4))))AND(rt1.c2))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, t1.c4, t1.c39)) NOT BETWEEN ((rt0.c1, rt1.c6, rt1.c3)) AND ((rt1.c0, rt0.c0, rt0.c4))))AND(rt1.c2))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY x'' ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt0.c0, t1.c4, t1.c39)) NOT BETWEEN ((rt0.c1, rt1.c6, rt1.c3)) AND ((rt1.c0, rt0.c0, rt0.c4))))AND(rt1.c2))) ORDER BY x'' ASC  NULLS LAST;
SELECT * FROM rt1 WHERE ((NOT ((rt1.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c5 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((rt1.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((rt1.c5 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((NOT ((rt1.c5 IN ()))));
SELECT COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (CASE WHEN ((rt0.c1)OR(rt0.c4)) THEN t1.c2 COLLATE BINARY WHEN t1.c12 THEN CASE WHEN t1.c2 THEN rt0.c1 WHEN t1.c39 THEN t1.c12 WHEN t1.c4 THEN t1.c2 WHEN rt0.c4 THEN t1.c4 WHEN t1.c4 THEN rt0.c1 END WHEN ((((t1.c12)AND(rt0.c2)))OR(rt0.c3)) THEN t1.c12 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)OR(rt0.c4)) THEN t1.c2 COLLATE BINARY WHEN t1.c12 THEN CASE WHEN t1.c2 THEN rt0.c1 WHEN t1.c39 THEN t1.c12 WHEN t1.c4 THEN t1.c2 WHEN rt0.c4 THEN t1.c4 WHEN t1.c4 THEN rt0.c1 END WHEN ((((t1.c12)AND(rt0.c2)))OR(rt0.c3)) THEN t1.c12 END) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (CASE WHEN ((rt0.c1)OR(rt0.c4)) THEN t1.c2 COLLATE BINARY WHEN t1.c12 THEN CASE WHEN t1.c2 THEN rt0.c1 WHEN t1.c39 THEN t1.c12 WHEN t1.c4 THEN t1.c2 WHEN rt0.c4 THEN t1.c4 WHEN t1.c4 THEN rt0.c1 END WHEN ((((t1.c12)AND(rt0.c2)))OR(rt0.c3)) THEN t1.c12 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1)OR(rt0.c4)) THEN t1.c2 COLLATE BINARY WHEN t1.c12 THEN CASE WHEN t1.c2 THEN rt0.c1 WHEN t1.c39 THEN t1.c12 WHEN t1.c4 THEN t1.c2 WHEN rt0.c4 THEN t1.c4 WHEN t1.c4 THEN rt0.c1 END WHEN ((((t1.c12)AND(rt0.c2)))OR(rt0.c3)) THEN t1.c12 END) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1 NOT INDEXED, rt0 WHERE (CASE WHEN ((rt0.c1)OR(rt0.c4)) THEN t1.c2 COLLATE BINARY WHEN t1.c12 THEN CASE WHEN t1.c2 THEN rt0.c1 WHEN t1.c39 THEN t1.c12 WHEN t1.c4 THEN t1.c2 WHEN rt0.c4 THEN t1.c4 WHEN t1.c4 THEN rt0.c1 END WHEN ((((t1.c12)AND(rt0.c2)))OR(rt0.c3)) THEN t1.c12 END);
SELECT * FROM t1 WHERE ((((((t1.c39))<((t1.c39))))>(((t1.c12)LIKE(0xffffffffa4593dfb)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c39))<((t1.c39))))>(((t1.c12)LIKE(0xffffffffa4593dfb))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c39))<((t1.c39))))>(((t1.c12)LIKE(0xffffffffa4593dfb)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c39))<((t1.c39))))>(((t1.c12)LIKE(0xffffffffa4593dfb))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c39))<((t1.c39))))>(((t1.c12)LIKE(0xffffffffa4593dfb)))));
SELECT ALL * FROM t1 WHERE (((((((((t1.c4)OR(t1.c12)))AND(0X7e5dfbaa)))AND(t1.c2)))AND(t1.c12)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t1.c4)OR(t1.c12)))AND(0X7e5dfbaa)))AND(t1.c2)))AND(t1.c12)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c4)OR(t1.c12)))AND(0X7e5dfbaa)))AND(t1.c2)))AND(t1.c12)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((((((t1.c4)OR(t1.c12)))AND(0X7e5dfbaa)))AND(t1.c2)))AND(t1.c12)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((((((t1.c4)OR(t1.c12)))AND(0X7e5dfbaa)))AND(t1.c2)))AND(t1.c12)) COLLATE RTRIM);
SELECT COUNT(*) FROM t1 WHERE ((CAST(t1.c12 AS NUMERIC) IN (((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c2)), ((t1.c39)-(t1.c4))))) ORDER BY t1.c4 COLLATE NOCASE, (((- (t1.c12))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c12 AS NUMERIC) IN (((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c2)), ((t1.c39)-(t1.c4))))) IS TRUE)  as count FROM t1 ORDER BY t1.c4 COLLATE NOCASE, (((- (t1.c12))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((CAST(t1.c12 AS NUMERIC) IN (((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c2)), ((t1.c39)-(t1.c4))))) ORDER BY t1.c4 COLLATE NOCASE, (((- (t1.c12))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c12 AS NUMERIC) IN (((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c2)), ((t1.c39)-(t1.c4))))) IS TRUE)  as count FROM t1 ORDER BY t1.c4 COLLATE NOCASE, (((- (t1.c12))) IS TRUE)  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE ((CAST(t1.c12 AS NUMERIC) IN (((t1.c12) NOT BETWEEN (t1.c39) AND (t1.c2)), ((t1.c39)-(t1.c4))))) ORDER BY t1.c4 COLLATE NOCASE, (((- (t1.c12))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt1, rt0 WHERE ((((NOT (rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((NOT (rt0.c4))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c4))) ISNULL)) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE ((((NOT (rt0.c4))) ISNULL));
SELECT * FROM rt0 CROSS JOIN t1 ON CASE rt0.c0 COLLATE NOCASE  WHEN (~ (t1.c39)) THEN CASE t1.c4  WHEN x'82fc' THEN t1.c12 WHEN t1.c39 THEN t1.c39 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE CASE WHEN t1.c2 THEN t1.c12 END END WHERE ((NOT (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE rt0.c0 COLLATE NOCASE  WHEN (~ (t1.c39)) THEN CASE t1.c4  WHEN x'82fc' THEN t1.c12 WHEN t1.c39 THEN t1.c39 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE CASE WHEN t1.c2 THEN t1.c12 END END);
SELECT * FROM rt0 CROSS JOIN t1 ON CASE rt0.c0 COLLATE NOCASE  WHEN (~ (t1.c39)) THEN CASE t1.c4  WHEN x'82fc' THEN t1.c12 WHEN t1.c39 THEN t1.c39 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE CASE WHEN t1.c2 THEN t1.c12 END END WHERE ((NOT (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON CASE rt0.c0 COLLATE NOCASE  WHEN (~ (t1.c39)) THEN CASE t1.c4  WHEN x'82fc' THEN t1.c12 WHEN t1.c39 THEN t1.c39 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE CASE WHEN t1.c2 THEN t1.c12 END END);
SELECT * FROM rt0 CROSS JOIN t1 ON CASE rt0.c0 COLLATE NOCASE  WHEN (~ (t1.c39)) THEN CASE t1.c4  WHEN x'82fc' THEN t1.c12 WHEN t1.c39 THEN t1.c39 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c3 END ELSE CASE WHEN t1.c2 THEN t1.c12 END END WHERE ((NOT (((rt0.c3) NOT NULL))));
SELECT * FROM t1, rt0 WHERE (LIKELY(((t1.c2)=(rt0.c1)))) ORDER BY (NOT ((+ (rt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((LIKELY(((t1.c2)=(rt0.c1)))) IS TRUE)  as count FROM t1, rt0 ORDER BY (NOT ((+ (rt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) NOT NULL));
SELECT * FROM t1, rt0 WHERE (LIKELY(((t1.c2)=(rt0.c1)))) ORDER BY (NOT ((+ (rt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) NOT NULL);
SELECT SUM(count) FROM (SELECT ((LIKELY(((t1.c2)=(rt0.c1)))) IS TRUE)  as count FROM t1, rt0 ORDER BY (NOT ((+ (rt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) NOT NULL));
SELECT * FROM t1, rt0 WHERE (LIKELY(((t1.c2)=(rt0.c1)))) ORDER BY (NOT ((+ (rt0.c1)))) ASC  NULLS LAST, ((((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c1))) NOT NULL);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0))=((rt0.c0)))))<((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0))=((rt0.c0)))))<((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0))=((rt0.c0)))))<((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0))=((rt0.c0)))))<((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)))) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((((rt1.c0))=((rt0.c0)))))<((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_extract(rt1.c4, rt1.c0))<((~ (rt0.c4)))) WHERE (((LIKELY(DISTINCT rt0.c3))<=(((rt1.c1)>>(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c3))<=(((rt1.c1)>>(rt1.c5))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_extract(rt1.c4, rt1.c0))<((~ (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_extract(rt1.c4, rt1.c0))<((~ (rt0.c4)))) WHERE (((LIKELY(DISTINCT rt0.c3))<=(((rt1.c1)>>(rt1.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(DISTINCT rt0.c3))<=(((rt1.c1)>>(rt1.c5))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((json_extract(rt1.c4, rt1.c0))<((~ (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON CASE WHEN (+ (rt1.c5)) THEN rt0.c0 END WHERE (t1.c4) ORDER BY ((0X33cd0052)*(LIKELY('-1401168732'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c4) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON CASE WHEN (+ (rt1.c5)) THEN rt0.c0 END ORDER BY ((0X33cd0052)*(LIKELY('-1401168732'))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON CASE WHEN (+ (rt1.c5)) THEN rt0.c0 END WHERE (t1.c4) ORDER BY ((0X33cd0052)*(LIKELY('-1401168732'))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c4) IS TRUE)  as count FROM rt0, rt1 LEFT OUTER JOIN t1 ON CASE WHEN (+ (rt1.c5)) THEN rt0.c0 END ORDER BY ((0X33cd0052)*(LIKELY('-1401168732'))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, rt1 LEFT OUTER JOIN t1 ON CASE WHEN (+ (rt1.c5)) THEN rt0.c0 END WHERE (t1.c4) ORDER BY ((0X33cd0052)*(LIKELY('-1401168732'))) DESC  NULLS FIRST;
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON (~ (((t1.c39) IS TRUE))) WHERE (CAST(CASE t1.c12  WHEN rt0.c3 THEN t1.c39 WHEN rt0.c1 THEN t1.c2 WHEN t1.c39 THEN rt0.c4 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c12  WHEN rt0.c3 THEN t1.c39 WHEN rt0.c1 THEN t1.c2 WHEN t1.c39 THEN rt0.c4 END AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (~ (((t1.c39) IS TRUE))));
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON (~ (((t1.c39) IS TRUE))) WHERE (CAST(CASE t1.c12  WHEN rt0.c3 THEN t1.c39 WHEN rt0.c1 THEN t1.c2 WHEN t1.c39 THEN rt0.c4 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE t1.c12  WHEN rt0.c3 THEN t1.c39 WHEN rt0.c1 THEN t1.c2 WHEN t1.c39 THEN rt0.c4 END AS INTEGER)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN t1 ON (~ (((t1.c39) IS TRUE))));
SELECT * FROM rt0 RIGHT OUTER JOIN t1 ON (~ (((t1.c39) IS TRUE))) WHERE (CAST(CASE t1.c12  WHEN rt0.c3 THEN t1.c39 WHEN rt0.c1 THEN t1.c2 WHEN t1.c39 THEN rt0.c4 END AS INTEGER));
SELECT ALL * FROM rt1, t1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN t1.c12 THEN rt1.c3 END))) ORDER BY ((((rt0.c2)!=(t1.c12))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN t1.c12 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((rt0.c2)<>(t1.c12))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN t1.c12 THEN rt1.c3 END))) ORDER BY ((((rt0.c2)!=(t1.c12))) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN t1.c12 THEN rt1.c3 END))) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((rt0.c2)<>(t1.c12))) NOT NULL)  NULLS LAST);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (((((t1.c4)AND(t1.c4)))AND(rt0.c2))) AND (CASE rt1.c1  WHEN t1.c12 THEN rt1.c3 END))) ORDER BY ((((rt0.c2)!=(t1.c12))) NOT NULL)  NULLS LAST;
SELECT * FROM t1, rt0, rt1 WHERE (CAST(((t1.c12)&(rt1.c3)) AS TEXT)) ORDER BY rt0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c12)&(rt1.c3)) AS TEXT)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c4 DESC  NULLS LAST);
SELECT * FROM t1, rt0, rt1 WHERE (CAST(((t1.c12)&(rt1.c3)) AS TEXT)) ORDER BY rt0.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c12)&(rt1.c3)) AS TEXT)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY rt0.c4 DESC  NULLS LAST);
SELECT * FROM t1, rt0, rt1 WHERE (CAST(((t1.c12)&(rt1.c3)) AS TEXT)) ORDER BY rt0.c4 DESC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((((~ (rt1.c5)))OR(rt1.c5)))AND((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c5)))OR(rt1.c5)))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((~ (rt1.c5)))OR(rt1.c5)))AND((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((~ (rt1.c5)))OR(rt1.c5)))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((((~ (rt1.c5)))OR(rt1.c5)))AND((rt1.c1 IN ()))));
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c2) IS FALSE)))) ORDER BY (((((t1.c39, t1.c12, t1.c12))<((t1.c2, t1.c12, 'gg?UG')))) NOTNULL), CAST('_x' AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c2) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c39, t1.c12, t1.c12))<((t1.c2, t1.c12, 'gg?UG')))) NOTNULL), CAST('_x' AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c2) IS FALSE)))) ORDER BY (((((t1.c39, t1.c12, t1.c12))<((t1.c2, t1.c12, 'gg?UG')))) NOTNULL), CAST('_x' AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((t1.c2) IS FALSE)))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c39, t1.c12, t1.c12))<((t1.c2, t1.c12, 'gg?UG')))) NOTNULL), CAST('_x' AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (((t1.c2) IS FALSE)))) ORDER BY (((((t1.c39, t1.c12, t1.c12))<((t1.c2, t1.c12, 'gg?UG')))) NOTNULL), CAST('_x' AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((LIKE(rt0.c1, rt1.c0, '峏'), ((rt0.c0)<(t1.c12)), (t1.c4 IN (rt1.c3))))>=((((rt0.c2)>>(rt0.c1)), ((rt0.c3)GLOB(rt0.c2)), ((rt1.c5) IS TRUE)))) INNER JOIN rt1 ON IFNULL(DISTINCT CASE t1.c39  WHEN '-1400737166' THEN rt1.c3 ELSE rt0.c2 END, ((rt1.c6)<>(t1.c4))) WHERE (((((rt1.c0) NOT NULL))IS(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL))IS(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (((LIKE(rt0.c1, rt1.c0, '峏'), ((rt0.c0)<(t1.c12)), (t1.c4 IN (rt1.c3))))>=((((rt0.c2)>>(rt0.c1)), ((rt0.c3)GLOB(rt0.c2)), ((rt1.c5) IS TRUE)))) INNER JOIN rt1 ON IFNULL(DISTINCT CASE t1.c39  WHEN '-1400737166' THEN rt1.c3 ELSE rt0.c2 END, ((rt1.c6)!=(t1.c4))));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON (((LIKE(rt0.c1, rt1.c0, '峏'), ((rt0.c0)<(t1.c12)), (t1.c4 IN (rt1.c3))))>=((((rt0.c2)>>(rt0.c1)), ((rt0.c3)GLOB(rt0.c2)), ((rt1.c5) IS TRUE)))) INNER JOIN rt1 ON IFNULL(DISTINCT CASE t1.c39  WHEN '-1400737166' THEN rt1.c3 ELSE rt0.c2 END, ((rt1.c6)<>(t1.c4))) WHERE (((((rt1.c0) NOT NULL))IS(CAST(rt1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL))IS(CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON (((LIKE(rt0.c1, rt1.c0, '峏'), ((rt0.c0)<(t1.c12)), (t1.c4 IN (rt1.c3))))>=((((rt0.c2)>>(rt0.c1)), ((rt0.c3)GLOB(rt0.c2)), ((rt1.c5) IS TRUE)))) INNER JOIN rt1 ON IFNULL(DISTINCT CASE t1.c39  WHEN '-1400737166' THEN rt1.c3 ELSE rt0.c2 END, ((rt1.c6)!=(t1.c4))));
SELECT * FROM rt0, t1, rt1 WHERE (((rt0.c3)AND(CAST(t1.c12 AS REAL)))) ORDER BY (NOT (((rt1.c0)<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)AND(CAST(t1.c12 AS REAL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (NOT (((rt1.c0)<=(rt1.c1)))));
SELECT * FROM rt0, t1, rt1 WHERE (((rt0.c3)AND(CAST(t1.c12 AS REAL)))) ORDER BY (NOT (((rt1.c0)<=(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)AND(CAST(t1.c12 AS REAL)))) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY (NOT (((rt1.c0)<=(rt1.c1)))));
SELECT * FROM rt0, t1, rt1 WHERE (((rt0.c3)AND(CAST(t1.c12 AS REAL)))) ORDER BY (NOT (((rt1.c0)<=(rt1.c1))));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((CAST(rt0.c4 AS BLOB))OR(t1.c4)))AND(CAST(t1.c12 AS REAL)))) ORDER BY CASE ((rt1.c6)<>(rt0.c3))  WHEN ((rt1.c1)||(rt0.c3)) THEN rt1.c6 WHEN ((rt1.c0)/(t1.c39)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) WHEN ((rt1.c1) ISNULL) THEN (rt1.c5 IN ()) END, CASE WHEN '1724712630' THEN rt0.c2 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c4 AS BLOB))OR(t1.c4)))AND(CAST(t1.c12 AS REAL)))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE ((rt1.c6)!=(rt0.c3))  WHEN ((rt1.c1)||(rt0.c3)) THEN rt1.c6 WHEN ((rt1.c0)/(t1.c39)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) WHEN ((rt1.c1) ISNULL) THEN (rt1.c5 IN ()) END, CASE WHEN '1724712630' THEN rt0.c2 COLLATE RTRIM END  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((CAST(rt0.c4 AS BLOB))OR(t1.c4)))AND(CAST(t1.c12 AS REAL)))) ORDER BY CASE ((rt1.c6)<>(rt0.c3))  WHEN ((rt1.c1)||(rt0.c3)) THEN rt1.c6 WHEN ((rt1.c0)/(t1.c39)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) WHEN ((rt1.c1) ISNULL) THEN (rt1.c5 IN ()) END, CASE WHEN '1724712630' THEN rt0.c2 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c4 AS BLOB))OR(t1.c4)))AND(CAST(t1.c12 AS REAL)))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY CASE ((rt1.c6)!=(rt0.c3))  WHEN ((rt1.c1)||(rt0.c3)) THEN rt1.c6 WHEN ((rt1.c0)/(t1.c39)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) WHEN ((rt1.c1) ISNULL) THEN (rt1.c5 IN ()) END, CASE WHEN '1724712630' THEN rt0.c2 COLLATE RTRIM END  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE (((((CAST(rt0.c4 AS BLOB))OR(t1.c4)))AND(CAST(t1.c12 AS REAL)))) ORDER BY CASE ((rt1.c6)<>(rt0.c3))  WHEN ((rt1.c1)||(rt0.c3)) THEN rt1.c6 WHEN ((rt1.c0)/(t1.c39)) THEN ((rt0.c4) NOT BETWEEN (rt0.c0) AND (NULL)) WHEN ((rt1.c1) ISNULL) THEN (rt1.c5 IN ()) END, CASE WHEN '1724712630' THEN rt0.c2 COLLATE RTRIM END  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), SUBSTR(t1.c12, t1.c2), ((t1.c2)AND(rt0.c2))))<=(((+ (rt0.c1)), IFNULL(DISTINCT rt0.c3, rt1.c3), SQLITE_VERSION())))) ORDER BY ((((rt0.c1) NOTNULL))==(((x'a0a2') IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), SUBSTR(t1.c12, t1.c2), ((t1.c2)AND(rt0.c2))))<=(((+ (rt0.c1)), IFNULL(DISTINCT rt0.c3, rt1.c3), SQLITE_VERSION())))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((rt0.c1) NOTNULL))==(((x'a0a2') IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), SUBSTR(t1.c12, t1.c2), ((t1.c2)AND(rt0.c2))))<=(((+ (rt0.c1)), IFNULL(DISTINCT rt0.c3, rt1.c3), SQLITE_VERSION())))) ORDER BY ((((rt0.c1) NOTNULL))==(((x'a0a2') IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), SUBSTR(t1.c12, t1.c2), ((t1.c2)AND(rt0.c2))))<=(((+ (rt0.c1)), IFNULL(DISTINCT rt0.c3, rt1.c3), SQLITE_VERSION())))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((rt0.c1) NOTNULL))==(((x'a0a2') IS TRUE)))  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), SUBSTR(t1.c12, t1.c2), ((t1.c2)AND(rt0.c2))))<=(((+ (rt0.c1)), IFNULL(DISTINCT rt0.c3, rt1.c3), SQLITE_VERSION())))) ORDER BY ((((rt0.c1) NOTNULL))==(((x'a0a2') IS TRUE)))  NULLS LAST;
SELECT * FROM rt1 INNER JOIN rt0 ON (- ('')) WHERE (CASE ((rt0.c1)%(rt1.c4))  WHEN ((rt1.c2) IS FALSE) THEN (((rt1.c6, rt1.c0, rt1.c4)) BETWEEN ((rt0.c0, rt1.c0, 0xffffffffbcd6d8b0)) AND ((rt0.c1, rt1.c0, rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)%(rt1.c4))  WHEN ((rt1.c2) IS FALSE) THEN (((rt1.c6, rt1.c0, rt1.c4)) BETWEEN ((rt0.c0, rt1.c0, 0xffffffffbcd6d8b0)) AND ((rt0.c1, rt1.c0, rt0.c2))) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- ('')));
SELECT * FROM rt1 INNER JOIN rt0 ON (- ('')) WHERE (CASE ((rt0.c1)%(rt1.c4))  WHEN ((rt1.c2) IS FALSE) THEN (((rt1.c6, rt1.c0, rt1.c4)) BETWEEN ((rt0.c0, rt1.c0, 0xffffffffbcd6d8b0)) AND ((rt0.c1, rt1.c0, rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c1)%(rt1.c4))  WHEN ((rt1.c2) IS FALSE) THEN (((rt1.c6, rt1.c0, rt1.c4)) BETWEEN ((rt0.c0, rt1.c0, 0xffffffffbcd6d8b0)) AND ((rt0.c1, rt1.c0, rt0.c2))) END) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON (- ('')));
SELECT * FROM rt1 INNER JOIN rt0 ON (- ('')) WHERE (CASE ((rt0.c1)%(rt1.c4))  WHEN ((rt1.c2) IS FALSE) THEN (((rt1.c6, rt1.c0, rt1.c4)) BETWEEN ((rt0.c0, rt1.c0, 0xffffffffbcd6d8b0)) AND ((rt0.c1, rt1.c0, rt0.c2))) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)IS NOT(t1.c2)), ((((t1.c2)AND('-1560133505')))AND(t1.c12)), (- (t1.c4))))<>((((((t1.c39)OR(t1.c4)))OR('咢^')), CASE t1.c12  WHEN t1.c2 THEN t1.c2 ELSE t1.c4 END, t1.c4 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t1.c2)IS NOT(t1.c2)), ((((t1.c2)AND('-1560133505')))AND(t1.c12)), (- (t1.c4))))!=((((((t1.c39)OR(t1.c4)))OR('咢^')), CASE t1.c12  WHEN t1.c2 THEN t1.c2 ELSE t1.c4 END, t1.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)IS NOT(t1.c2)), ((((t1.c2)AND('-1560133505')))AND(t1.c12)), (- (t1.c4))))<>((((((t1.c39)OR(t1.c4)))OR('咢^')), CASE t1.c12  WHEN t1.c2 THEN t1.c2 ELSE t1.c4 END, t1.c4 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((((t1.c2)IS NOT(t1.c2)), ((((t1.c2)AND('-1560133505')))AND(t1.c12)), (- (t1.c4))))!=((((((t1.c39)OR(t1.c4)))OR('咢^')), CASE t1.c12  WHEN t1.c2 THEN t1.c2 ELSE t1.c4 END, t1.c4 COLLATE RTRIM)))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((t1.c2)IS NOT(t1.c2)), ((((t1.c2)AND('-1560133505')))AND(t1.c12)), (- (t1.c4))))<>((((((t1.c39)OR(t1.c4)))OR('咢^')), CASE t1.c12  WHEN t1.c2 THEN t1.c2 ELSE t1.c4 END, t1.c4 COLLATE RTRIM))));
SELECT * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT rt1.c2, rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt1.c2, rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT rt1.c2, rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT rt1.c2, rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (NULLIF(DISTINCT rt1.c2, rt0.c3) COLLATE BINARY);
SELECT * FROM rt1 WHERE (CASE LIKELIHOOD(rt1.c1, 0.8918707757142899)  WHEN rt1.c4 COLLATE RTRIM THEN (((rt1.c0))<=((rt1.c2))) ELSE ((rt1.c6)OR(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt1.c1, 0.8918707757142899)  WHEN rt1.c4 COLLATE RTRIM THEN (((rt1.c0))<=((rt1.c2))) ELSE ((rt1.c6)OR(rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE LIKELIHOOD(rt1.c1, 0.8918707757142899)  WHEN rt1.c4 COLLATE RTRIM THEN (((rt1.c0))<=((rt1.c2))) ELSE ((rt1.c6)OR(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKELIHOOD(rt1.c1, 0.8918707757142899)  WHEN rt1.c4 COLLATE RTRIM THEN (((rt1.c0))<=((rt1.c2))) ELSE ((rt1.c6)OR(rt1.c0)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE LIKELIHOOD(rt1.c1, 0.8918707757142899)  WHEN rt1.c4 COLLATE RTRIM THEN (((rt1.c0))<=((rt1.c2))) ELSE ((rt1.c6)OR(rt1.c0)) END);
SELECT ALL * FROM t1 NOT INDEXED, rt1, rt0 WHERE (((((CASE rt0.c2  WHEN t1.c12 THEN rt1.c5 WHEN t1.c4 THEN rt1.c1 WHEN rt0.c4 THEN t1.c4 ELSE rt0.c2 END)AND('')))OR(CASE rt1.c1  WHEN 'qB' THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN t1.c12 THEN rt1.c5 WHEN t1.c4 THEN rt1.c1 WHEN rt0.c4 THEN t1.c4 ELSE rt0.c2 END)AND('')))OR(CASE rt1.c1  WHEN 'qB' THEN rt1.c4 END))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1 NOT INDEXED, rt1, rt0 WHERE (((((CASE rt0.c2  WHEN t1.c12 THEN rt1.c5 WHEN t1.c4 THEN rt1.c1 WHEN rt0.c4 THEN t1.c4 ELSE rt0.c2 END)AND('')))OR(CASE rt1.c1  WHEN 'qB' THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt0.c2  WHEN t1.c12 THEN rt1.c5 WHEN t1.c4 THEN rt1.c1 WHEN rt0.c4 THEN t1.c4 ELSE rt0.c2 END)AND('')))OR(CASE rt1.c1  WHEN 'qB' THEN rt1.c4 END))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1 NOT INDEXED, rt1, rt0 WHERE (((((CASE rt0.c2  WHEN t1.c12 THEN rt1.c5 WHEN t1.c4 THEN rt1.c1 WHEN rt0.c4 THEN t1.c4 ELSE rt0.c2 END)AND('')))OR(CASE rt1.c1  WHEN 'qB' THEN rt1.c4 END)));
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c2)|(rt1.c0)) COLLATE NOCASE) ORDER BY CAST((NOT (rt0.c1)) AS INTEGER) DESC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((NOT (rt0.c1)) AS INTEGER) DESC, rt0.c1 ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c2)|(rt1.c0)) COLLATE NOCASE) ORDER BY CAST((NOT (rt0.c1)) AS INTEGER) DESC, rt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c2)|(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST((NOT (rt0.c1)) AS INTEGER) DESC, rt0.c1 ASC);
SELECT ALL * FROM rt1, rt0 WHERE (((rt0.c2)|(rt1.c0)) COLLATE NOCASE) ORDER BY CAST((NOT (rt0.c1)) AS INTEGER) DESC, rt0.c1 ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c2, NULL))!=((x'', rt0.c1, rt0.c4))))/(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c2, NULL))<>((x'', rt0.c1, rt0.c4))))/(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c2, NULL))!=((x'', rt0.c1, rt0.c4))))/(((rt0.c3) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, rt0.c2, NULL))<>((x'', rt0.c1, rt0.c4))))/(((rt0.c3) NOTNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c1, rt0.c2, NULL))!=((x'', rt0.c1, rt0.c4))))/(((rt0.c3) NOTNULL))));
SELECT * FROM t1, rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY)%((+ (rt0.c1))))) ORDER BY CASE t1.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c6 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)%((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE t1.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c6 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1, rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY)%((+ (rt0.c1))))) ORDER BY CASE t1.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c6 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY)%((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE t1.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c6 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1, rt0, rt1 WHERE (((rt1.c2 COLLATE BINARY)%((+ (rt0.c1))))) ORDER BY CASE t1.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt1.c6 THEN rt0.c1 WHEN rt0.c4 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(-344473178 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(-344473178 AS BLOB)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(-344473178 AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(-344473178 AS BLOB)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(-344473178 AS BLOB));
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((t1.c39 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END)))OR(HEX(rt1.c5)))) ORDER BY (((((- (rt1.c3)))AND(((rt1.c3)<>(rt0.c1)))))AND(CHAR(x'', rt0.c4, rt0.c0))) DESC  NULLS FIRST, ((t1.c12) IS TRUE) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c39 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END)))OR(HEX(rt1.c5)))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((((- (rt1.c3)))AND(((rt1.c3)!=(rt0.c1)))))AND(CHAR(x'', rt0.c4, rt0.c0))) DESC  NULLS FIRST, ((t1.c12) IS TRUE) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((t1.c39 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END)))OR(HEX(rt1.c5)))) ORDER BY (((((- (rt1.c3)))AND(((rt1.c3)<>(rt0.c1)))))AND(CHAR(x'', rt0.c4, rt0.c0))) DESC  NULLS FIRST, ((t1.c12) IS TRUE) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c39 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END)))OR(HEX(rt1.c5)))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY (((((- (rt1.c3)))AND(((rt1.c3)!=(rt0.c1)))))AND(CHAR(x'', rt0.c4, rt0.c0))) DESC  NULLS FIRST, ((t1.c12) IS TRUE) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((t1.c39 COLLATE NOCASE)AND(CASE WHEN rt0.c0 THEN rt1.c0 ELSE rt0.c1 END)))OR(HEX(rt1.c5)))) ORDER BY (((((- (rt1.c3)))AND(((rt1.c3)<>(rt0.c1)))))AND(CHAR(x'', rt0.c4, rt0.c0))) DESC  NULLS FIRST, ((t1.c12) IS TRUE) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((+ (((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c1)))));
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL COLLATE BINARY) ORDER BY (((rt0.c3)<<(rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c4 THEN t1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c3)<<(rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c4 THEN t1.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL COLLATE BINARY) ORDER BY (((rt0.c3)<<(rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c4 THEN t1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL COLLATE BINARY) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c3)<<(rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c4 THEN t1.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL COLLATE BINARY) ORDER BY (((rt0.c3)<<(rt0.c1)) IN (CASE rt0.c2  WHEN rt0.c4 THEN t1.c2 END))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((-1999336280)) AND ((rt1.c0))))AND(CAST(NULL AS NUMERIC)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((-1999336280)) AND ((rt1.c0))))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((-1999336280)) AND ((rt1.c0))))AND(CAST(NULL AS NUMERIC)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((-1999336280)) AND ((rt1.c0))))AND(CAST(NULL AS NUMERIC)))) IS TRUE)  as count FROM rt1 ORDER BY NULL);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((-1999336280)) AND ((rt1.c0))))AND(CAST(NULL AS NUMERIC)))) ORDER BY NULL;
SELECT * FROM rt0, t1 RIGHT OUTER JOIN rt1 ON 0.5005890270545564 COLLATE BINARY WHERE ((~ (rt1.c5)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c5))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN rt1 ON 0.5005890270545564 COLLATE BINARY);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN rt1 ON 0.5005890270545564 COLLATE BINARY WHERE ((~ (rt1.c5)));
SELECT SUM(count) FROM (SELECT ALL (((~ (rt1.c5))) IS TRUE)  as count FROM rt0, t1 RIGHT OUTER JOIN rt1 ON 0.5005890270545564 COLLATE BINARY);
SELECT * FROM rt0, t1 RIGHT OUTER JOIN rt1 ON 0.5005890270545564 COLLATE BINARY WHERE ((~ (rt1.c5)));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt1.c2)IS NOT(rt0.c3))) AND (((((((((rt0.c4)OR(rt1.c6)))AND(rt0.c2)))AND(rt0.c2)))AND(rt1.c3)))) WHERE ((~ (((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt1.c2)IS NOT(rt0.c3))) AND (((((((((rt0.c4)OR(rt1.c6)))AND(rt0.c2)))AND(rt0.c2)))AND(rt1.c3)))));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt1.c2)IS NOT(rt0.c3))) AND (((((((((rt0.c4)OR(rt1.c6)))AND(rt0.c2)))AND(rt0.c2)))AND(rt1.c3)))) WHERE ((~ (((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c4))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt1.c2)IS NOT(rt0.c3))) AND (((((((((rt0.c4)OR(rt1.c6)))AND(rt0.c2)))AND(rt0.c2)))AND(rt1.c3)))));
SELECT ALL * FROM rt1 INNER JOIN rt0 ON ((rt1.c3 COLLATE RTRIM) BETWEEN (((rt1.c2)IS NOT(rt0.c3))) AND (((((((((rt0.c4)OR(rt1.c6)))AND(rt0.c2)))AND(rt0.c2)))AND(rt1.c3)))) WHERE ((~ (((rt1.c4) BETWEEN (rt0.c4) AND (rt0.c4)))));
SELECT * FROM t1, rt1 WHERE (((rt1.c4 COLLATE BINARY)<=(CASE WHEN rt1.c2 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE BINARY)<=(CASE WHEN rt1.c2 THEN rt1.c4 END))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((rt1.c4 COLLATE BINARY)<=(CASE WHEN rt1.c2 THEN rt1.c4 END)));
SELECT SUM(count) FROM (SELECT ((((rt1.c4 COLLATE BINARY)<=(CASE WHEN rt1.c2 THEN rt1.c4 END))) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (((rt1.c4 COLLATE BINARY)<=(CASE WHEN rt1.c2 THEN rt1.c4 END)));
SELECT ALL * FROM t1 WHERE (((((((t1.c4)AND(t1.c39)))AND(t1.c39)))<=(t1.c12))) ORDER BY ((((t1.c39) NOTNULL)) BETWEEN ((((t1.c4))<=((t1.c39)))) AND (''));
SELECT SUM(count) FROM (SELECT ((((((((t1.c4)AND(t1.c39)))AND(t1.c39)))<=(t1.c12))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c39) NOTNULL)) BETWEEN ((((t1.c4))<=((t1.c39)))) AND ('')));
SELECT ALL * FROM t1 WHERE (((((((t1.c4)AND(t1.c39)))AND(t1.c39)))<=(t1.c12))) ORDER BY ((((t1.c39) NOTNULL)) BETWEEN ((((t1.c4))<=((t1.c39)))) AND (''));
SELECT SUM(count) FROM (SELECT ((((((((t1.c4)AND(t1.c39)))AND(t1.c39)))<=(t1.c12))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c39) NOTNULL)) BETWEEN ((((t1.c4))<=((t1.c39)))) AND ('')));
SELECT ALL * FROM t1 WHERE (((((((t1.c4)AND(t1.c39)))AND(t1.c39)))<=(t1.c12))) ORDER BY ((((t1.c39) NOTNULL)) BETWEEN ((((t1.c4))<=((t1.c39)))) AND (''));
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE '0.4532250032489442' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE '0.4532250032489442' END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE '0.4532250032489442' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE '0.4532250032489442' END IN ())) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((CASE WHEN rt0.c1 THEN rt0.c2 ELSE '0.4532250032489442' END IN ()));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt1.c2)OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c3)) IN (((rt1.c0)*(rt1.c0))))) ORDER BY (+ (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c2)OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c3)) IN (((rt1.c0)*(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt1.c2)OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c3)) IN (((rt1.c0)*(rt1.c0))))) ORDER BY (+ (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt1.c2)OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c3)) IN (((rt1.c0)*(rt1.c0))))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (+ (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE ((((((((((rt1.c2)OR(rt1.c4)))AND(rt0.c3)))AND(rt0.c3)))OR(rt1.c3)) IN (((rt1.c0)*(rt1.c0))))) ORDER BY (+ (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c6)))>(((rt1.c3)IS NOT(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c6)))>(((rt1.c3)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c6)))>(((rt1.c3)IS NOT(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c6)))>(((rt1.c3)IS NOT(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c6)))>(((rt1.c3)IS NOT(rt1.c0)))));
SELECT COUNT(*) FROM t1, rt1 CROSS JOIN rt0 ON json_array_length(rt0.c4) COLLATE NOCASE WHERE (rt1.c5 COLLATE RTRIM) ORDER BY CASE WHEN TOTAL_CHANGES() THEN ((NULL) NOTNULL) WHEN ((((rt1.c6)AND(NULL)))OR(t1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1) NOTNULL) ELSE ((rt1.c0)>=(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1 CROSS JOIN rt0 ON json_array_length(rt0.c4) COLLATE NOCASE ORDER BY CASE WHEN TOTAL_CHANGES() THEN ((NULL) NOTNULL) WHEN ((((rt1.c6)AND(NULL)))OR(t1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1) NOTNULL) ELSE ((rt1.c0)>=(rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1 CROSS JOIN rt0 ON json_array_length(rt0.c4) COLLATE NOCASE WHERE (rt1.c5 COLLATE RTRIM) ORDER BY CASE WHEN TOTAL_CHANGES() THEN ((NULL) NOTNULL) WHEN ((((rt1.c6)AND(NULL)))OR(t1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1) NOTNULL) ELSE ((rt1.c0)>=(rt1.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c5 COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1 CROSS JOIN rt0 ON json_array_length(rt0.c4) COLLATE NOCASE ORDER BY CASE WHEN TOTAL_CHANGES() THEN ((NULL) NOTNULL) WHEN ((((rt1.c6)AND(NULL)))OR(t1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1) NOTNULL) ELSE ((rt1.c0)>=(rt1.c0)) END  NULLS LAST);
SELECT COUNT(*) FROM t1, rt1 CROSS JOIN rt0 ON json_array_length(rt0.c4) COLLATE NOCASE WHERE (rt1.c5 COLLATE RTRIM) ORDER BY CASE WHEN TOTAL_CHANGES() THEN ((NULL) NOTNULL) WHEN ((((rt1.c6)AND(NULL)))OR(t1.c2)) THEN rt1.c0 COLLATE RTRIM WHEN ((rt0.c2) ISNULL) THEN ((rt0.c1) NOTNULL) ELSE ((rt1.c0)>=(rt1.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c2)))<=(CAST(t1.c39 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c2)))<=(CAST(t1.c39 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c2)))<=(CAST(t1.c39 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t1.c2)))<=(CAST(t1.c39 AS NUMERIC)))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((NOT (t1.c2)))<=(CAST(t1.c39 AS NUMERIC))));
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((+ (CASE t1.c2  WHEN t1.c12 THEN t1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t1.c2  WHEN t1.c12 THEN t1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((+ (CASE t1.c2  WHEN t1.c12 THEN t1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE t1.c2  WHEN t1.c12 THEN t1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END))) IS TRUE)  as count FROM rt1 NATURAL JOIN t1);
SELECT ALL * FROM rt1 NATURAL JOIN t1 WHERE ((+ (CASE t1.c2  WHEN t1.c12 THEN t1.c2 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END)));
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c0)AND(rt1.c0)))AND(NULL)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt1.c3))) ORDER BY CASE ''  WHEN ((rt1.c5) IS FALSE) THEN rt0.c2 COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt1.c0)))AND(NULL)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt1.c3))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ''  WHEN ((rt1.c5) IS FALSE) THEN rt0.c2 COLLATE BINARY END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c0)AND(rt1.c0)))AND(NULL)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt1.c3))) ORDER BY CASE ''  WHEN ((rt1.c5) IS FALSE) THEN rt0.c2 COLLATE BINARY END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt0.c0)AND(rt1.c0)))AND(NULL)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt1.c3))) IS TRUE)  as count FROM rt0, rt1 ORDER BY CASE ''  WHEN ((rt1.c5) IS FALSE) THEN rt0.c2 COLLATE BINARY END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0, rt1 WHERE (((((((((rt0.c0)AND(rt1.c0)))AND(NULL)))AND(CAST(rt0.c2 AS INTEGER))))AND(rt1.c3))) ORDER BY CASE ''  WHEN ((rt1.c5) IS FALSE) THEN rt0.c2 COLLATE BINARY END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c4)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c4)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c0 IN (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST((rt0.c0 IN (rt0.c4)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((((~ (rt1.c5)))OR((NOT (rt1.c0)))))OR((((0.25209378102946933, rt1.c2, rt1.c1))<((rt1.c6, rt1.c1, rt1.c0))))))OR(((rt1.c6)GLOB(rt1.c4)))))AND(x'17da')))OR(((rt1.c4) ISNULL))))AND(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((~ (rt1.c5)))OR((NOT (rt1.c0)))))OR((((0.25209378102946933, rt1.c2, rt1.c1))<((rt1.c6, rt1.c1, rt1.c0))))))OR(((rt1.c6)GLOB(rt1.c4)))))AND(x'17da')))OR(((rt1.c4) ISNULL))))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((((~ (rt1.c5)))OR((NOT (rt1.c0)))))OR((((0.25209378102946933, rt1.c2, rt1.c1))<((rt1.c6, rt1.c1, rt1.c0))))))OR(((rt1.c6)GLOB(rt1.c4)))))AND(x'17da')))OR(((rt1.c4) ISNULL))))AND(rt1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((~ (rt1.c5)))OR((NOT (rt1.c0)))))OR((((0.25209378102946933, rt1.c2, rt1.c1))<((rt1.c6, rt1.c1, rt1.c0))))))OR(((rt1.c6)GLOB(rt1.c4)))))AND(x'17da')))OR(((rt1.c4) ISNULL))))AND(rt1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((((((((((~ (rt1.c5)))OR((NOT (rt1.c0)))))OR((((0.25209378102946933, rt1.c2, rt1.c1))<((rt1.c6, rt1.c1, rt1.c0))))))OR(((rt1.c6)GLOB(rt1.c4)))))AND(x'17da')))OR(((rt1.c4) ISNULL))))AND(rt1.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c3) ORDER BY UPPER(DISTINCT ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 END) BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 END) AND (((rt0.c3) NOT BETWEEN (0.06377121086530069) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1 ORDER BY UPPER(DISTINCT ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 END) BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 END) AND (((rt0.c3) NOT BETWEEN (0.06377121086530069) AND (rt0.c1)))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c3) ORDER BY UPPER(DISTINCT ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 END) BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 END) AND (((rt0.c3) NOT BETWEEN (0.06377121086530069) AND (rt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt0, rt1 ORDER BY UPPER(DISTINCT ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 END) BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 END) AND (((rt0.c3) NOT BETWEEN (0.06377121086530069) AND (rt0.c1)))) ASC);
SELECT ALL * FROM rt0, rt1 WHERE (rt1.c3) ORDER BY UPPER(DISTINCT ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c3)))AND(rt1.c3))) DESC, ((CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c0 END) BETWEEN (CASE rt1.c2  WHEN rt0.c0 THEN rt1.c0 END) AND (((rt0.c3) NOT BETWEEN (0.06377121086530069) AND (rt0.c1)))) ASC;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON ((t1.c2) NOT BETWEEN ((+ (rt1.c5))) AND (CASE WHEN rt1.c1 THEN x'' END)) WHERE (UNLIKELY((rt1.c6 IN ()))) ORDER BY ((rt1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST, ((CASE WHEN t1.c39 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN 0.4803876946076825 THEN rt1.c6 END)-(CASE WHEN t1.c12 THEN rt1.c2 ELSE t1.c12 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((rt1.c6 IN ()))) IS TRUE)  as count FROM t1 NOT INDEXED RIGHT OUTER JOIN rt1 ON ((t1.c2) NOT BETWEEN ((+ (rt1.c5))) AND (CASE WHEN rt1.c1 THEN x'' END)) ORDER BY ((rt1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST, ((CASE WHEN t1.c39 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN 0.4803876946076825 THEN rt1.c6 END)-(CASE WHEN t1.c12 THEN rt1.c2 ELSE t1.c12 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON ((t1.c2) NOT BETWEEN ((+ (rt1.c5))) AND (CASE WHEN rt1.c1 THEN x'' END)) WHERE (UNLIKELY((rt1.c6 IN ()))) ORDER BY ((rt1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST, ((CASE WHEN t1.c39 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN 0.4803876946076825 THEN rt1.c6 END)-(CASE WHEN t1.c12 THEN rt1.c2 ELSE t1.c12 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY((rt1.c6 IN ()))) IS TRUE)  as count FROM t1 NOT INDEXED RIGHT OUTER JOIN rt1 ON ((t1.c2) NOT BETWEEN ((+ (rt1.c5))) AND (CASE WHEN rt1.c1 THEN x'' END)) ORDER BY ((rt1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST, ((CASE WHEN t1.c39 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN 0.4803876946076825 THEN rt1.c6 END)-(CASE WHEN t1.c12 THEN rt1.c2 ELSE t1.c12 END)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON ((t1.c2) NOT BETWEEN ((+ (rt1.c5))) AND (CASE WHEN rt1.c1 THEN x'' END)) WHERE (UNLIKELY((rt1.c6 IN ()))) ORDER BY ((rt1.c0 COLLATE NOCASE) IS TRUE) ASC  NULLS FIRST, ((CASE WHEN t1.c39 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c6 WHEN 0.4803876946076825 THEN rt1.c6 END)-(CASE WHEN t1.c12 THEN rt1.c2 ELSE t1.c12 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (rt0.c1)));
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))OR('-1537655301'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c3)))OR('-1537655301'))) IS FALSE)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))OR('-1537655301'))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2)OR(rt0.c3)))OR('-1537655301'))) IS FALSE)) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL * FROM t1, rt1, rt0 WHERE (((((((rt0.c2)OR(rt0.c3)))OR('-1537655301'))) IS FALSE));
SELECT * FROM t1 NOT INDEXED WHERE ((((((x'' IN (t1.c2)))OR(t1.c39)))OR(((t1.c2) NOT NULL)))) ORDER BY -3.79248537E8 COLLATE BINARY DESC  NULLS LAST, CAST(((0x5d0177ef)<>(t1.c39)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN (t1.c2)))OR(t1.c39)))OR(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY -3.79248537E8 COLLATE BINARY DESC  NULLS LAST, CAST(((0X5d0177ef)<>(t1.c39)) AS BLOB));
SELECT * FROM t1 NOT INDEXED WHERE ((((((x'' IN (t1.c2)))OR(t1.c39)))OR(((t1.c2) NOT NULL)))) ORDER BY -3.79248537E8 COLLATE BINARY DESC  NULLS LAST, CAST(((0x5d0177ef)<>(t1.c39)) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((((((x'' IN (t1.c2)))OR(t1.c39)))OR(((t1.c2) NOT NULL)))) IS TRUE)  as count FROM t1 ORDER BY -3.79248537E8 COLLATE BINARY DESC  NULLS LAST, CAST(((0X5d0177ef)<>(t1.c39)) AS BLOB));
SELECT * FROM t1 NOT INDEXED WHERE ((((((x'' IN (t1.c2)))OR(t1.c39)))OR(((t1.c2) NOT NULL)))) ORDER BY -3.79248537E8 COLLATE BINARY DESC  NULLS LAST, CAST(((0x5d0177ef)<>(t1.c39)) AS BLOB);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c12 IN ()) IN ())) ORDER BY ((((t1.c4)||(t1.c4)))!=((((t1.c12))<=((t1.c12)))))  NULLS LAST, ((((((t1.c39)<=(t1.c12)))OR(highlight(t1.c2, t1.c4, t1.c12, t1.c2))))OR(((t1.c39)<<(x'ade4')))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c12 IN ()) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c4)||(t1.c4)))<>((((t1.c12))<=((t1.c12)))))  NULLS LAST, ((((((t1.c39)<=(t1.c12)))OR(highlight(t1.c2, t1.c4, t1.c12, t1.c2))))OR(((t1.c39)<<(x'ade4')))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE (((t1.c12 IN ()) IN ())) ORDER BY ((((t1.c4)||(t1.c4)))!=((((t1.c12))<=((t1.c12)))))  NULLS LAST, ((((((t1.c39)<=(t1.c12)))OR(highlight(t1.c2, t1.c4, t1.c12, t1.c2))))OR(((t1.c39)<<(x'ade4')))) ASC;
SELECT SUM(count) FROM (SELECT ((((t1.c12 IN ()) IN ())) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c4)||(t1.c4)))<>((((t1.c12))<=((t1.c12)))))  NULLS LAST, ((((((t1.c39)<=(t1.c12)))OR(highlight(t1.c2, t1.c4, t1.c12, t1.c2))))OR(((t1.c39)<<(x'ade4')))) ASC);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((NULL)AND(rt0.c2)))OR(rt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN ((rt1.c4 IN ())) AND (((rt0.c0) NOTNULL)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN ((rt1.c4 IN ())) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN ((rt1.c4 IN ())) AND (((rt0.c0) NOTNULL)))) ORDER BY x''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0) BETWEEN ((rt1.c4 IN ())) AND (((rt0.c0) NOTNULL)))) IS TRUE)  as count FROM rt1, rt0 ORDER BY x''  NULLS FIRST);
SELECT COUNT(*) FROM rt1, rt0 WHERE (((rt1.c0) BETWEEN ((rt1.c4 IN ())) AND (((rt0.c0) NOTNULL)))) ORDER BY x''  NULLS FIRST;
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON ((CASE rt1.c4  WHEN '' THEN rt0.c4 WHEN rt0.c4 THEN t1.c2 WHEN rt0.c2 THEN rt1.c3 END) BETWEEN (json_object(t1.c4, rt0.c0)) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END)) RIGHT OUTER JOIN rt0 ON (((((+ (t1.c39)))AND((((t1.c4))<=((t1.c12))))))AND(((rt1.c0)<<(x'259c')))) WHERE ((((t1.c2)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON ((CASE rt1.c4  WHEN '' THEN rt0.c4 WHEN rt0.c4 THEN t1.c2 WHEN rt0.c2 THEN rt1.c3 END) BETWEEN (json_object(t1.c4, rt0.c0)) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END)) RIGHT OUTER JOIN rt0 ON (((((+ (t1.c39)))AND((((t1.c4))<=((t1.c12))))))AND(((rt1.c0)<<(x'259c')))));
SELECT COUNT(*) FROM rt1 LEFT OUTER JOIN t1 ON ((CASE rt1.c4  WHEN '' THEN rt0.c4 WHEN rt0.c4 THEN t1.c2 WHEN rt0.c2 THEN rt1.c3 END) BETWEEN (json_object(t1.c4, rt0.c0)) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END)) RIGHT OUTER JOIN rt0 ON (((((+ (t1.c39)))AND((((t1.c4))<=((t1.c12))))))AND(((rt1.c0)<<(x'259c')))) WHERE ((((t1.c2)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((rt1.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)) NOT BETWEEN ((((rt0.c1) IS FALSE))) AND ((rt1.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN t1 ON ((CASE rt1.c4  WHEN '' THEN rt0.c4 WHEN rt0.c4 THEN t1.c2 WHEN rt0.c2 THEN rt1.c3 END) BETWEEN (json_object(t1.c4, rt0.c0)) AND (CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c3 END)) RIGHT OUTER JOIN rt0 ON (((((+ (t1.c39)))AND((((t1.c4))<=((t1.c12))))))AND(((rt1.c0)<<(x'259c')))));
SELECT * FROM rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c5)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c5)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c5)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c5)) COLLATE BINARY);
SELECT ALL * FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (t1.c4)))<<(rt1.c4)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOT NULL) WHERE (0X39016398);
SELECT SUM(count) FROM (SELECT ((0X39016398) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (t1.c4)))<<(rt1.c4)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOT NULL));
SELECT ALL * FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (t1.c4)))<<(rt1.c4)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOT NULL) WHERE (0X39016398);
SELECT SUM(count) FROM (SELECT ((0X39016398) IS TRUE)  as count FROM t1 FULL OUTER JOIN rt1 ON ((((rt0.c0) BETWEEN (rt0.c4) AND (t1.c4)))<<(rt1.c4)) LEFT OUTER JOIN rt0 ON ((CAST(rt0.c4 AS TEXT)) NOT NULL));
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((CAST(rt1.c0 AS TEXT) IN (((('1207781331'))<=((rt1.c5))))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS TEXT) IN (((('1207781331'))<=((rt1.c5)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((CAST(rt1.c0 AS TEXT) IN (((('1207781331'))<=((rt1.c5))))));
SELECT SUM(count) FROM (SELECT (((CAST(rt1.c0 AS TEXT) IN (((('1207781331'))<=((rt1.c5)))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((CAST(rt1.c0 AS TEXT) IN (((('1207781331'))<=((rt1.c5))))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) CROSS JOIN t1 ON LTRIM(((rt0.c1)!=(rt0.c1))) WHERE ((((rt1.c6, rt1.c6, rt0.c4)) NOT BETWEEN (((t1.c4 IN ()), ((((rt1.c2)AND('-2086341436')))OR(rt1.c5)), UPPER(t1.c39))) AND ((((t1.c39)IS(t1.c39)), ((rt0.c3)/(rt0.c3)), LIKELY(DISTINCT rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c6, rt1.c6, rt0.c4)) NOT BETWEEN (((t1.c4 IN ()), ((((rt1.c2)AND('-2086341436')))OR(rt1.c5)), UPPER(t1.c39))) AND ((((t1.c39)IS(t1.c39)), ((rt0.c3)/(rt0.c3)), LIKELY(DISTINCT rt1.c6))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) CROSS JOIN t1 ON LTRIM(((rt0.c1)!=(rt0.c1))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) CROSS JOIN t1 ON LTRIM(((rt0.c1)!=(rt0.c1))) WHERE ((((rt1.c6, rt1.c6, rt0.c4)) NOT BETWEEN (((t1.c4 IN ()), ((((rt1.c2)AND('-2086341436')))OR(rt1.c5)), UPPER(t1.c39))) AND ((((t1.c39)IS(t1.c39)), ((rt0.c3)/(rt0.c3)), LIKELY(DISTINCT rt1.c6)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c6, rt1.c6, rt0.c4)) NOT BETWEEN (((t1.c4 IN ()), ((((rt1.c2)AND('-2086341436')))OR(rt1.c5)), UPPER(t1.c39))) AND ((((t1.c39)IS(t1.c39)), ((rt0.c3)/(rt0.c3)), LIKELY(DISTINCT rt1.c6))))) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) CROSS JOIN t1 ON LTRIM(((rt0.c1)!=(rt0.c1))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON CAST(CAST(rt0.c0 AS BLOB) AS INTEGER) CROSS JOIN t1 ON LTRIM(((rt0.c1)!=(rt0.c1))) WHERE ((((rt1.c6, rt1.c6, rt0.c4)) NOT BETWEEN (((t1.c4 IN ()), ((((rt1.c2)AND('-2086341436')))OR(rt1.c5)), UPPER(t1.c39))) AND ((((t1.c39)IS(t1.c39)), ((rt0.c3)/(rt0.c3)), LIKELY(DISTINCT rt1.c6)))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c2)OR(rt0.c2 COLLATE BINARY)))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt0.c2 COLLATE BINARY)))AND(rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c2)OR(rt0.c2 COLLATE BINARY)))AND(rt1.c1)));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2)OR(rt0.c2 COLLATE BINARY)))AND(rt1.c1))) IS TRUE)  as count FROM rt1, rt0);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((rt1.c2)OR(rt0.c2 COLLATE BINARY)))AND(rt1.c1)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c6 AS NUMERIC))!=(((rt1.c0) NOT NULL))) INNER JOIN t1 ON rt0.c4 WHERE (CAST('Q\rdL' AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST('Q\rdL' AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c6 AS NUMERIC))!=(((rt1.c0) NOT NULL))) INNER JOIN t1 ON rt0.c4);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c6 AS NUMERIC))!=(((rt1.c0) NOT NULL))) INNER JOIN t1 ON rt0.c4 WHERE (CAST('Q\rdL' AS NUMERIC) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CAST('Q\rdL' AS NUMERIC) COLLATE RTRIM) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c6 AS NUMERIC))!=(((rt1.c0) NOT NULL))) INNER JOIN t1 ON rt0.c4);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON ((CAST(rt1.c6 AS NUMERIC))!=(((rt1.c0) NOT NULL))) INNER JOIN t1 ON rt0.c4 WHERE (CAST('Q\rdL' AS NUMERIC) COLLATE RTRIM);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c5)<>(rt1.c3)))<<('')));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)!=(rt1.c3)))<<(''))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c5)<>(rt1.c3)))<<('')));
SELECT SUM(count) FROM (SELECT ((((((rt1.c5)!=(rt1.c3)))<<(''))) IS TRUE)  as count FROM rt1, rt0);
SELECT * FROM rt1, rt0 WHERE (((((rt1.c5)<>(rt1.c3)))<<('')));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)<(rt0.c0 COLLATE RTRIM)) WHERE (((((t1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR((((t1.c4)) NOT BETWEEN ((rt0.c2)) AND ((t1.c39)))))) ORDER BY CASE WHEN (NOT (t1.c2)) THEN CAST(rt0.c4 AS TEXT) ELSE ((t1.c4)!=(t1.c12)) END  NULLS LAST, ((UNICODE('mv!Ixn')) IS FALSE) ASC, ((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(t1.c12 AS NUMERIC))))AND(((NULL)IS NOT(t1.c4)))))AND(')vTFBXB')))OR(json_remove(rt0.c2, t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR((((t1.c4)) NOT BETWEEN ((rt0.c2)) AND ((t1.c39)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)<(rt0.c0 COLLATE RTRIM)) ORDER BY CASE WHEN (NOT (t1.c2)) THEN CAST(rt0.c4 AS TEXT) ELSE ((t1.c4)<>(t1.c12)) END  NULLS LAST, ((UNICODE('mv!Ixn')) IS FALSE) ASC, ((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(t1.c12 AS NUMERIC))))AND(((NULL)IS NOT(t1.c4)))))AND(')vTFBXB')))OR(json_remove(rt0.c2, t1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)<(rt0.c0 COLLATE RTRIM)) WHERE (((((t1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR((((t1.c4)) NOT BETWEEN ((rt0.c2)) AND ((t1.c39)))))) ORDER BY CASE WHEN (NOT (t1.c2)) THEN CAST(rt0.c4 AS TEXT) ELSE ((t1.c4)!=(t1.c12)) END  NULLS LAST, ((UNICODE('mv!Ixn')) IS FALSE) ASC, ((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(t1.c12 AS NUMERIC))))AND(((NULL)IS NOT(t1.c4)))))AND(')vTFBXB')))OR(json_remove(rt0.c2, t1.c2))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR((((t1.c4)) NOT BETWEEN ((rt0.c2)) AND ((t1.c39)))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)<(rt0.c0 COLLATE RTRIM)) ORDER BY CASE WHEN (NOT (t1.c2)) THEN CAST(rt0.c4 AS TEXT) ELSE ((t1.c4)<>(t1.c12)) END  NULLS LAST, ((UNICODE('mv!Ixn')) IS FALSE) ASC, ((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(t1.c12 AS NUMERIC))))AND(((NULL)IS NOT(t1.c4)))))AND(')vTFBXB')))OR(json_remove(rt0.c2, t1.c2))) ASC  NULLS LAST);
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON ((CASE WHEN rt0.c1 THEN rt0.c1 END)<(rt0.c0 COLLATE RTRIM)) WHERE (((((t1.c4) NOT BETWEEN (rt0.c4) AND (rt0.c0)))OR((((t1.c4)) NOT BETWEEN ((rt0.c2)) AND ((t1.c39)))))) ORDER BY CASE WHEN (NOT (t1.c2)) THEN CAST(rt0.c4 AS TEXT) ELSE ((t1.c4)!=(t1.c12)) END  NULLS LAST, ((UNICODE('mv!Ixn')) IS FALSE) ASC, ((((((((CAST(rt0.c2 AS INTEGER))OR(CAST(t1.c12 AS NUMERIC))))AND(((NULL)IS NOT(t1.c4)))))AND(')vTFBXB')))OR(json_remove(rt0.c2, t1.c2))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c39);
SELECT SUM(count) FROM (SELECT ALL ((t1.c39) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c39);
SELECT SUM(count) FROM (SELECT ALL ((t1.c39) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (t1.c39);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((t1.c4)) AND ((rt0.c0)))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN ((t1.c4)) AND ((rt0.c0)))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((t1.c4)) AND ((rt0.c0)))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND ((~ (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN ((t1.c4)) AND ((rt0.c0)))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND ((~ (rt0.c2))))) IS TRUE)  as count FROM t1, rt0);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ((((((rt0.c4)) NOT BETWEEN ((t1.c4)) AND ((rt0.c0)))) BETWEEN (LIKELY(DISTINCT rt0.c0)) AND ((~ (rt0.c2)))));
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END) NOTNULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 END) NOTNULL));
SELECT ALL COUNT(*) FROM rt1 WHERE (((INSTR(rt1.c4, rt1.c1)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c5)OR(rt1.c6))))) ORDER BY ((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((INSTR(rt1.c4, rt1.c1)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c5)OR(rt1.c6))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((INSTR(rt1.c4, rt1.c1)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c5)OR(rt1.c6))))) ORDER BY ((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((INSTR(rt1.c4, rt1.c1)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c5)OR(rt1.c6))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE));
SELECT ALL COUNT(*) FROM rt1 WHERE (((INSTR(rt1.c4, rt1.c1)) BETWEEN (((rt1.c1) ISNULL)) AND (((rt1.c5)OR(rt1.c6))))) ORDER BY ((rt1.c5) NOT BETWEEN (rt1.c6) AND (rt1.c2)) COLLATE BINARY DESC  NULLS FIRST, ((CAST(rt1.c1 AS NUMERIC)) IS TRUE);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (CASE WHEN t1.c2 COLLATE BINARY THEN (- (t1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'EEP氄#' END THEN ((rt1.c4)||(t1.c12)) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c3 ELSE rt1.c6 END THEN CASE WHEN t1.c2 THEN t1.c12 ELSE rt1.c4 END WHEN TRIM(rt1.c2, t1.c2) THEN ((0.9593457047155487)<<(t1.c39)) WHEN rt1.c5 THEN ((t1.c12)<<(t1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c2 COLLATE BINARY THEN (- (t1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'EEP氄#' END THEN ((rt1.c4)||(t1.c12)) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c3 ELSE rt1.c6 END THEN CASE WHEN t1.c2 THEN t1.c12 ELSE rt1.c4 END WHEN TRIM(rt1.c2, t1.c2) THEN ((0.9593457047155487)<<(t1.c39)) WHEN rt1.c5 THEN ((t1.c12)<<(t1.c4)) END) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (CASE WHEN t1.c2 COLLATE BINARY THEN (- (t1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'EEP氄#' END THEN ((rt1.c4)||(t1.c12)) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c3 ELSE rt1.c6 END THEN CASE WHEN t1.c2 THEN t1.c12 ELSE rt1.c4 END WHEN TRIM(rt1.c2, t1.c2) THEN ((0.9593457047155487)<<(t1.c39)) WHEN rt1.c5 THEN ((t1.c12)<<(t1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN t1.c2 COLLATE BINARY THEN (- (t1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'EEP氄#' END THEN ((rt1.c4)||(t1.c12)) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c3 ELSE rt1.c6 END THEN CASE WHEN t1.c2 THEN t1.c12 ELSE rt1.c4 END WHEN TRIM(rt1.c2, t1.c2) THEN ((0.9593457047155487)<<(t1.c39)) WHEN rt1.c5 THEN ((t1.c12)<<(t1.c4)) END) IS TRUE)  as count FROM rt1, t1);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (CASE WHEN t1.c2 COLLATE BINARY THEN (- (t1.c2)) WHEN CASE WHEN rt1.c1 THEN rt1.c4 ELSE 'EEP氄#' END THEN ((rt1.c4)||(t1.c12)) WHEN CASE rt1.c1  WHEN t1.c4 THEN rt1.c3 ELSE rt1.c6 END THEN CASE WHEN t1.c2 THEN t1.c12 ELSE rt1.c4 END WHEN TRIM(rt1.c2, t1.c2) THEN ((0.9593457047155487)<<(t1.c39)) WHEN rt1.c5 THEN ((t1.c12)<<(t1.c4)) END);
SELECT ALL * FROM t1 INNER JOIN rt0 ON (t1.c12 IN ()) COLLATE RTRIM WHERE (((('-937117692', (rt0.c3 IN ()), HEX(rt0.c3)))<((((rt0.c3) ISNULL), 0.7849112120044994, CAST(rt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((('-937117692', (rt0.c3 IN ()), HEX(rt0.c3)))<((((rt0.c3) ISNULL), 0.7849112120044994, CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON (t1.c12 IN ()) COLLATE RTRIM);
SELECT ALL * FROM t1 INNER JOIN rt0 ON (t1.c12 IN ()) COLLATE RTRIM WHERE (((('-937117692', (rt0.c3 IN ()), HEX(rt0.c3)))<((((rt0.c3) ISNULL), 0.7849112120044994, CAST(rt0.c0 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ((((('-937117692', (rt0.c3 IN ()), HEX(rt0.c3)))<((((rt0.c3) ISNULL), 0.7849112120044994, CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON (t1.c12 IN ()) COLLATE RTRIM);
SELECT ALL * FROM t1 INNER JOIN rt0 ON (t1.c12 IN ()) COLLATE RTRIM WHERE (((('-937117692', (rt0.c3 IN ()), HEX(rt0.c3)))<((((rt0.c3) ISNULL), 0.7849112120044994, CAST(rt0.c0 AS TEXT)))));
SELECT * FROM t1 WHERE (CAST(((x'') IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((x'') IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS BLOB)) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CAST(((x'') IS FALSE) AS BLOB));
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c3))))==(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c3))))=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c3))))==(CAST(rt0.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2))<((rt0.c3))))=(CAST(rt0.c2 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((((rt0.c2))<((rt0.c3))))==(CAST(rt0.c2 AS BLOB))));
SELECT ALL * FROM rt1 WHERE ((~ (LIKELIHOOD(DISTINCT rt1.c2, 0.7770936554931323)))) ORDER BY ((rt1.c3)=(rt1.c6 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(DISTINCT rt1.c2, 0.7770936554931323)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3)==(rt1.c6 COLLATE NOCASE)) ASC);
SELECT ALL * FROM rt1 WHERE ((~ (LIKELIHOOD(DISTINCT rt1.c2, 0.7770936554931323)))) ORDER BY ((rt1.c3)=(rt1.c6 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((~ (LIKELIHOOD(DISTINCT rt1.c2, 0.7770936554931323)))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3)==(rt1.c6 COLLATE NOCASE)) ASC);
SELECT ALL * FROM rt1 WHERE ((~ (LIKELIHOOD(DISTINCT rt1.c2, 0.7770936554931323)))) ORDER BY ((rt1.c3)=(rt1.c6 COLLATE NOCASE)) ASC;
SELECT * FROM t1 WHERE ((((t1.c12)+(t1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c12)+(t1.c2)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c12)+(t1.c2)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t1.c12)+(t1.c2)) IN ())) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((t1.c12)+(t1.c2)) IN ()));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON ((CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 END)AND((('-113569830')LIKE(rt1.c2)))) RIGHT OUTER JOIN rt0 ON load_extension((0.9593457047155487 IN ()), rt0.c4 COLLATE RTRIM) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON ((CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 END)AND((('-113569830')LIKE(rt1.c2)))) RIGHT OUTER JOIN rt0 ON load_extension((0.9593457047155487 IN ()), rt0.c4 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN t1 ON ((CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 END)AND((('-113569830')LIKE(rt1.c2)))) RIGHT OUTER JOIN rt0 ON load_extension((0.9593457047155487 IN ()), rt0.c4 COLLATE RTRIM) WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1 INNER JOIN t1 ON ((CASE rt1.c3  WHEN rt1.c5 THEN rt0.c2 END)AND((('-113569830')LIKE(rt1.c2)))) RIGHT OUTER JOIN rt0 ON load_extension((0.9593457047155487 IN ()), rt0.c4 COLLATE RTRIM));
SELECT COUNT(*) FROM rt1, rt0 WHERE ((rt0.c4 IN ())) ORDER BY CASE ((rt1.c1)/(0.45897719913245816))  WHEN ((rt1.c6) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN (+ (rt1.c6)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE ((rt1.c1)/(0.45897719913245816))  WHEN ((rt1.c6) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN (+ (rt1.c6)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((rt0.c4 IN ())) ORDER BY CASE ((rt1.c1)/(0.45897719913245816))  WHEN ((rt1.c6) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN (+ (rt1.c6)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c4 IN ())) IS TRUE)  as count FROM rt1, rt0 ORDER BY CASE ((rt1.c1)/(0.45897719913245816))  WHEN ((rt1.c6) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN (+ (rt1.c6)) END ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, rt0 WHERE ((rt0.c4 IN ())) ORDER BY CASE ((rt1.c1)/(0.45897719913245816))  WHEN ((rt1.c6) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN (+ (rt1.c6)) END ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((CAST(rt1.c5 AS BLOB))))) ORDER BY (- (CASE rt1.c6  WHEN rt1.c5 THEN NULL WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((CAST(rt1.c5 AS BLOB))))) IS TRUE)  as count FROM rt1 ORDER BY (- (CASE rt1.c6  WHEN rt1.c5 THEN NULL WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((CAST(rt1.c5 AS BLOB))))) ORDER BY (- (CASE rt1.c6  WHEN rt1.c5 THEN NULL WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) NOT BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((CAST(rt1.c5 AS BLOB))))) IS TRUE)  as count FROM rt1 ORDER BY (- (CASE rt1.c6  WHEN rt1.c5 THEN NULL WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END)));
SELECT ALL * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((((rt1.c1)&(rt1.c2)))) AND ((CAST(rt1.c5 AS BLOB))))) ORDER BY (- (CASE rt1.c6  WHEN rt1.c5 THEN NULL WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END));
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c12 WHEN rt0.c3 THEN '' ELSE rt0.c4 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c12 WHEN rt0.c3 THEN '' ELSE rt0.c4 END AS INTEGER)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c12 WHEN rt0.c3 THEN '' ELSE rt0.c4 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c12 WHEN rt0.c3 THEN '' ELSE rt0.c4 END AS INTEGER)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t1.c12 WHEN rt0.c3 THEN '' ELSE rt0.c4 END AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM);
SELECT * FROM rt0 INNER JOIN t1 ON ((t1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE BINARY WHERE (((rt0.c0 COLLATE BINARY)<>((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<>((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((t1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE BINARY);
SELECT * FROM rt0 INNER JOIN t1 ON ((t1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE BINARY WHERE (((rt0.c0 COLLATE BINARY)<>((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY)<>((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((t1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE BINARY);
SELECT * FROM rt0 INNER JOIN t1 ON ((t1.c2) BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE BINARY WHERE (((rt0.c0 COLLATE BINARY)<>((rt0.c2 IN ()))));
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN rt1 ON ((((x'')LIKE('	fb5'))) ISNULL) WHERE ((rt1.c1 COLLATE BINARY IN ())) ORDER BY (((t1.c12)>(rt1.c6)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN rt1 ON ((((x'')LIKE('	fb5'))) ISNULL) ORDER BY (((t1.c12)>(rt1.c6)) IN ()));
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN rt1 ON ((((x'')LIKE('	fb5'))) ISNULL) WHERE ((rt1.c1 COLLATE BINARY IN ())) ORDER BY (((t1.c12)>(rt1.c6)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((rt1.c1 COLLATE BINARY IN ())) IS TRUE)  as count FROM t1, rt0 LEFT OUTER JOIN rt1 ON ((((x'')LIKE('	fb5'))) ISNULL) ORDER BY (((t1.c12)>(rt1.c6)) IN ()));
SELECT ALL * FROM t1, rt0 LEFT OUTER JOIN rt1 ON ((((x'')LIKE('	fb5'))) ISNULL) WHERE ((rt1.c1 COLLATE BINARY IN ())) ORDER BY (((t1.c12)>(rt1.c6)) IN ());
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((rt0.c1))>((rt0.c3)))) NOT BETWEEN (((((t1.c12)OR(0.14487730668483167)))OR(rt0.c4))) AND (json_array_length('8w')))) ORDER BY ((((((t1.c39)OR(rt1.c2)))AND(rt1.c1))) BETWEEN (CAST(t1.c4 AS NUMERIC)) AND (((t1.c2)IS NOT(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>((rt0.c3)))) NOT BETWEEN (((((t1.c12)OR(0.14487730668483167)))OR(rt0.c4))) AND (json_array_length('8w')))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((t1.c39)OR(rt1.c2)))AND(rt1.c1))) BETWEEN (CAST(t1.c4 AS NUMERIC)) AND (((t1.c2)IS NOT(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((rt0.c1))>((rt0.c3)))) NOT BETWEEN (((((t1.c12)OR(0.14487730668483167)))OR(rt0.c4))) AND (json_array_length('8w')))) ORDER BY ((((((t1.c39)OR(rt1.c2)))AND(rt1.c1))) BETWEEN (CAST(t1.c4 AS NUMERIC)) AND (((t1.c2)IS NOT(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>((rt0.c3)))) NOT BETWEEN (((((t1.c12)OR(0.14487730668483167)))OR(rt0.c4))) AND (json_array_length('8w')))) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((t1.c39)OR(rt1.c2)))AND(rt1.c1))) BETWEEN (CAST(t1.c4 AS NUMERIC)) AND (((t1.c2)IS NOT(rt1.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN ((rt1.c5)==(rt1.c6)) THEN (~ (rt0.c3)) WHEN 0.18295857613410837 THEN ((((((((rt0.c2)AND(rt1.c4)))AND(rt1.c6)))AND(rt0.c4)))OR(t1.c2)) WHEN ((((((((((((rt1.c3)OR(rt1.c6)))OR(rt0.c2)))AND(rt1.c3)))OR(rt0.c4)))OR(rt1.c1)))OR(rt0.c0)) THEN CAST('932875561' AS TEXT) ELSE (((rt0.c2, t1.c2, rt0.c2)) BETWEEN ((rt0.c4, t1.c2, rt1.c0)) AND ((rt1.c0, rt0.c4, t1.c39))) END) ORDER BY CASE WHEN ((rt1.c5) BETWEEN (t1.c4) AND (rt1.c0)) THEN IFNULL(rt0.c4, t1.c2) ELSE ((t1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC, (- ((rt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c5)=(rt1.c6)) THEN (~ (rt0.c3)) WHEN 0.18295857613410837 THEN ((((((((rt0.c2)AND(rt1.c4)))AND(rt1.c6)))AND(rt0.c4)))OR(t1.c2)) WHEN ((((((((((((rt1.c3)OR(rt1.c6)))OR(rt0.c2)))AND(rt1.c3)))OR(rt0.c4)))OR(rt1.c1)))OR(rt0.c0)) THEN CAST('932875561' AS TEXT) ELSE (((rt0.c2, t1.c2, rt0.c2)) BETWEEN ((rt0.c4, t1.c2, rt1.c0)) AND ((rt1.c0, rt0.c4, t1.c39))) END) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE WHEN ((rt1.c5) BETWEEN (t1.c4) AND (rt1.c0)) THEN IFNULL(rt0.c4, t1.c2) ELSE ((t1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC, (- ((rt1.c1 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN ((rt1.c5)==(rt1.c6)) THEN (~ (rt0.c3)) WHEN 0.18295857613410837 THEN ((((((((rt0.c2)AND(rt1.c4)))AND(rt1.c6)))AND(rt0.c4)))OR(t1.c2)) WHEN ((((((((((((rt1.c3)OR(rt1.c6)))OR(rt0.c2)))AND(rt1.c3)))OR(rt0.c4)))OR(rt1.c1)))OR(rt0.c0)) THEN CAST('932875561' AS TEXT) ELSE (((rt0.c2, t1.c2, rt0.c2)) BETWEEN ((rt0.c4, t1.c2, rt1.c0)) AND ((rt1.c0, rt0.c4, t1.c39))) END) ORDER BY CASE WHEN ((rt1.c5) BETWEEN (t1.c4) AND (rt1.c0)) THEN IFNULL(rt0.c4, t1.c2) ELSE ((t1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC, (- ((rt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c5)=(rt1.c6)) THEN (~ (rt0.c3)) WHEN 0.18295857613410837 THEN ((((((((rt0.c2)AND(rt1.c4)))AND(rt1.c6)))AND(rt0.c4)))OR(t1.c2)) WHEN ((((((((((((rt1.c3)OR(rt1.c6)))OR(rt0.c2)))AND(rt1.c3)))OR(rt0.c4)))OR(rt1.c1)))OR(rt0.c0)) THEN CAST('932875561' AS TEXT) ELSE (((rt0.c2, t1.c2, rt0.c2)) BETWEEN ((rt0.c4, t1.c2, rt1.c0)) AND ((rt1.c0, rt0.c4, t1.c39))) END) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE WHEN ((rt1.c5) BETWEEN (t1.c4) AND (rt1.c0)) THEN IFNULL(rt0.c4, t1.c2) ELSE ((t1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC, (- ((rt1.c1 IN ()))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CASE WHEN ((rt1.c5)==(rt1.c6)) THEN (~ (rt0.c3)) WHEN 0.18295857613410837 THEN ((((((((rt0.c2)AND(rt1.c4)))AND(rt1.c6)))AND(rt0.c4)))OR(t1.c2)) WHEN ((((((((((((rt1.c3)OR(rt1.c6)))OR(rt0.c2)))AND(rt1.c3)))OR(rt0.c4)))OR(rt1.c1)))OR(rt0.c0)) THEN CAST('932875561' AS TEXT) ELSE (((rt0.c2, t1.c2, rt0.c2)) BETWEEN ((rt0.c4, t1.c2, rt1.c0)) AND ((rt1.c0, rt0.c4, t1.c39))) END) ORDER BY CASE WHEN ((rt1.c5) BETWEEN (t1.c4) AND (rt1.c0)) THEN IFNULL(rt0.c4, t1.c2) ELSE ((t1.c4) NOT BETWEEN (rt1.c1) AND (rt1.c0)) END DESC, (- ((rt1.c1 IN ()))) DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (+ (CAST(rt0.c2 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c2 AS TEXT))) DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (+ (CAST(rt0.c2 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (+ (CAST(rt0.c2 AS TEXT))) DESC);
SELECT * FROM rt0 WHERE (rt0.c0) ORDER BY (+ (CAST(rt0.c2 AS TEXT))) DESC;
SELECT ALL * FROM rt0, rt1 WHERE (UNLIKELY(rt1.c0)) ORDER BY (((NULL)) BETWEEN ((NULL)) AND (((- (rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt1.c0)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NULL)) BETWEEN ((NULL)) AND (((- (rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (UNLIKELY(rt1.c0)) ORDER BY (((NULL)) BETWEEN ((NULL)) AND (((- (rt0.c4)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(rt1.c0)) IS TRUE)  as count FROM rt0, rt1 ORDER BY (((NULL)) BETWEEN ((NULL)) AND (((- (rt0.c4)))))  NULLS LAST);
SELECT ALL * FROM rt0, rt1 WHERE (UNLIKELY(rt1.c0)) ORDER BY (((NULL)) BETWEEN ((NULL)) AND (((- (rt0.c4)))))  NULLS LAST;
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CASE '6D]i'  WHEN rt1.c1 THEN NULL ELSE rt0.c1 END)|((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '6D]i'  WHEN rt1.c1 THEN NULL ELSE rt0.c1 END)|((- (rt0.c3))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CASE '6D]i'  WHEN rt1.c1 THEN NULL ELSE rt0.c1 END)|((- (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE '6D]i'  WHEN rt1.c1 THEN NULL ELSE rt0.c1 END)|((- (rt0.c3))))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CASE '6D]i'  WHEN rt1.c1 THEN NULL ELSE rt0.c1 END)|((- (rt0.c3)))));
SELECT * FROM t1 WHERE ((((t1.c2 IN ()))>=(((t1.c2)<(t1.c12))))) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2 IN ()))>=(((t1.c2)<(t1.c12))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c2 IN ()))>=(((t1.c2)<(t1.c12))))) ORDER BY t1.c2  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2 IN ()))>=(((t1.c2)<(t1.c12))))) IS TRUE)  as count FROM t1 ORDER BY t1.c2  NULLS FIRST);
SELECT * FROM t1 WHERE ((((t1.c2 IN ()))>=(((t1.c2)<(t1.c12))))) ORDER BY t1.c2  NULLS FIRST;
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((rt1.c1)>>(rt0.c3))) NOT NULL) WHERE (rt0.c1) ORDER BY json_array(rt1.c4, ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)), rt1.c4, rt0.c2), rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt1.c1)>>(rt0.c3))) NOT NULL) ORDER BY json_array(rt1.c4, ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)), rt1.c4, rt0.c2), rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((rt1.c1)>>(rt0.c3))) NOT NULL) WHERE (rt0.c1) ORDER BY json_array(rt1.c4, ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)), rt1.c4, rt0.c2), rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON ((((rt1.c1)>>(rt0.c3))) NOT NULL) ORDER BY json_array(rt1.c4, ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)), rt1.c4, rt0.c2), rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM rt1 CROSS JOIN rt0 ON ((((rt1.c1)>>(rt0.c3))) NOT NULL) WHERE (rt0.c1) ORDER BY json_array(rt1.c4, ((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c1)), rt1.c4, rt0.c2), rt1.c3  NULLS LAST;
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN ((((t1.c12)OR(t1.c2)))AND('-1479733433')) THEN ((rt0.c3)!=(t1.c39)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c12)OR(t1.c2)))AND('-1479733433')) THEN ((rt0.c3)<>(t1.c39)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN ((((t1.c12)OR(t1.c2)))AND('-1479733433')) THEN ((rt0.c3)!=(t1.c39)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((t1.c12)OR(t1.c2)))AND('-1479733433')) THEN ((rt0.c3)<>(t1.c39)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CASE WHEN ((((t1.c12)OR(t1.c2)))AND('-1479733433')) THEN ((rt0.c3)!=(t1.c39)) ELSE CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END END);
SELECT * FROM t1 INNER JOIN rt1 ON ((('7', t1.c12, rt1.c0)) BETWEEN ((CASE WHEN t1.c2 THEN t1.c39 END, (rt1.c3 IN ()), ((t1.c12) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) AND ((rt1.c4, ((((((((rt1.c5)OR(rt1.c2)))AND(t1.c39)))AND(rt1.c5)))OR(t1.c39)), -1.859695586E9))) WHERE ((((((rt1.c6)) BETWEEN ((x'')) AND ((t1.c4))))>=(rt1.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c6)) BETWEEN ((x'')) AND ((t1.c4))))>=(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((('7', t1.c12, rt1.c0)) BETWEEN ((CASE WHEN t1.c2 THEN t1.c39 END, (rt1.c3 IN ()), ((t1.c12) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) AND ((rt1.c4, ((((((((rt1.c5)OR(rt1.c2)))AND(t1.c39)))AND(rt1.c5)))OR(t1.c39)), -1.859695586E9))));
SELECT * FROM t1 INNER JOIN rt1 ON ((('7', t1.c12, rt1.c0)) BETWEEN ((CASE WHEN t1.c2 THEN t1.c39 END, (rt1.c3 IN ()), ((t1.c12) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) AND ((rt1.c4, ((((((((rt1.c5)OR(rt1.c2)))AND(t1.c39)))AND(rt1.c5)))OR(t1.c39)), -1.859695586E9))) WHERE ((((((rt1.c6)) BETWEEN ((x'')) AND ((t1.c4))))>=(rt1.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c6)) BETWEEN ((x'')) AND ((t1.c4))))>=(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON ((('7', t1.c12, rt1.c0)) BETWEEN ((CASE WHEN t1.c2 THEN t1.c39 END, (rt1.c3 IN ()), ((t1.c12) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) AND ((rt1.c4, ((((((((rt1.c5)OR(rt1.c2)))AND(t1.c39)))AND(rt1.c5)))OR(t1.c39)), -1.859695586E9))));
SELECT * FROM t1 INNER JOIN rt1 ON ((('7', t1.c12, rt1.c0)) BETWEEN ((CASE WHEN t1.c2 THEN t1.c39 END, (rt1.c3 IN ()), ((t1.c12) NOT BETWEEN (rt1.c6) AND (rt1.c4)))) AND ((rt1.c4, ((((((((rt1.c5)OR(rt1.c2)))AND(t1.c39)))AND(rt1.c5)))OR(t1.c39)), -1.859695586E9))) WHERE ((((((rt1.c6)) BETWEEN ((x'')) AND ((t1.c4))))>=(rt1.c3 COLLATE NOCASE)));
SELECT ALL * FROM t1 WHERE (((((t1.c12) NOTNULL)) NOT BETWEEN ((((t1.c12)) NOT BETWEEN ((t1.c12)) AND ((t1.c4)))) AND (((t1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t1.c12) NOTNULL)) NOT BETWEEN ((((t1.c12)) NOT BETWEEN ((t1.c12)) AND ((t1.c4)))) AND (((t1.c2) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c12) NOTNULL)) NOT BETWEEN ((((t1.c12)) NOT BETWEEN ((t1.c12)) AND ((t1.c4)))) AND (((t1.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t1.c12) NOTNULL)) NOT BETWEEN ((((t1.c12)) NOT BETWEEN ((t1.c12)) AND ((t1.c4)))) AND (((t1.c2) NOTNULL)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c12) NOTNULL)) NOT BETWEEN ((((t1.c12)) NOT BETWEEN ((t1.c12)) AND ((t1.c4)))) AND (((t1.c2) NOTNULL))));
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(CAST(rt0.c3 AS NUMERIC) AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (json_valid(((x'') IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_valid(((x'') IS TRUE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_valid(((x'') IS TRUE)));
SELECT SUM(count) FROM (SELECT ((json_valid(((x'') IS TRUE))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (json_valid(((x'') IS TRUE)));
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((t1.c2) NOT BETWEEN (rt1.c2) AND (t1.c39)))<<(((t1.c2) IS FALSE)))) ORDER BY (CASE t1.c2  WHEN t1.c39 THEN t1.c39 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (rt1.c2) AND (t1.c39)))<<(((t1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, t1 ORDER BY (CASE t1.c2  WHEN t1.c39 THEN t1.c39 END IN ()) DESC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((t1.c2) NOT BETWEEN (rt1.c2) AND (t1.c39)))<<(((t1.c2) IS FALSE)))) ORDER BY (CASE t1.c2  WHEN t1.c39 THEN t1.c39 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (rt1.c2) AND (t1.c39)))<<(((t1.c2) IS FALSE)))) IS TRUE)  as count FROM rt1, t1 ORDER BY (CASE t1.c2  WHEN t1.c39 THEN t1.c39 END IN ()) DESC);
SELECT ALL COUNT(*) FROM rt1, t1 WHERE (((((t1.c2) NOT BETWEEN (rt1.c2) AND (t1.c39)))<<(((t1.c2) IS FALSE)))) ORDER BY (CASE t1.c2  WHEN t1.c39 THEN t1.c39 END IN ()) DESC;
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c1)OR(rt1.c5)))OR(rt0.c0)))IS(rt1.c5 COLLATE RTRIM))) ORDER BY CAST(CAST('1325035330' AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt1.c5)))OR(rt0.c0)))IS(rt1.c5 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(CAST('1325035330' AS BLOB) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c1)OR(rt1.c5)))OR(rt0.c0)))IS(rt1.c5 COLLATE RTRIM))) ORDER BY CAST(CAST('1325035330' AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(rt1.c5)))OR(rt0.c0)))IS(rt1.c5 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 ORDER BY CAST(CAST('1325035330' AS BLOB) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM rt1, rt0 WHERE (((((((rt0.c1)OR(rt1.c5)))OR(rt0.c0)))IS(rt1.c5 COLLATE RTRIM))) ORDER BY CAST(CAST('1325035330' AS BLOB) AS REAL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((~ (rt0.c4)), CASE WHEN t1.c39 THEN t1.c12 END, ((((((((t1.c4)AND(rt0.c0)))OR(t1.c39)))OR(rt1.c0)))OR(t1.c39))))<=((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c5)))OR(rt0.c3)))AND(rt1.c5)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c12 END, ((x'') BETWEEN (rt0.c2) AND (NULL)))))) ORDER BY CASE ((rt0.c3)AND(rt0.c1))  WHEN (((t1.c2, rt1.c1, -1e500))<=((t1.c2, rt1.c6, rt0.c1))) THEN (+ (NULL)) ELSE rt1.c2 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c4)), CASE WHEN t1.c39 THEN t1.c12 END, ((((((((t1.c4)AND(rt0.c0)))OR(t1.c39)))OR(rt1.c0)))OR(t1.c39))))<=((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c5)))OR(rt0.c3)))AND(rt1.c5)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c12 END, ((x'') BETWEEN (rt0.c2) AND (NULL)))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE ((rt0.c3)AND(rt0.c1))  WHEN (((t1.c2, rt1.c1, -1e500))<=((t1.c2, rt1.c6, rt0.c1))) THEN (+ (NULL)) ELSE rt1.c2 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((~ (rt0.c4)), CASE WHEN t1.c39 THEN t1.c12 END, ((((((((t1.c4)AND(rt0.c0)))OR(t1.c39)))OR(rt1.c0)))OR(t1.c39))))<=((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c5)))OR(rt0.c3)))AND(rt1.c5)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c12 END, ((x'') BETWEEN (rt0.c2) AND (NULL)))))) ORDER BY CASE ((rt0.c3)AND(rt0.c1))  WHEN (((t1.c2, rt1.c1, -1e500))<=((t1.c2, rt1.c6, rt0.c1))) THEN (+ (NULL)) ELSE rt1.c2 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c4)), CASE WHEN t1.c39 THEN t1.c12 END, ((((((((t1.c4)AND(rt0.c0)))OR(t1.c39)))OR(rt1.c0)))OR(t1.c39))))<=((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c5)))OR(rt0.c3)))AND(rt1.c5)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c12 END, ((x'') BETWEEN (rt0.c2) AND (NULL)))))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY CASE ((rt0.c3)AND(rt0.c1))  WHEN (((t1.c2, rt1.c1, -1e500))<=((t1.c2, rt1.c6, rt0.c1))) THEN (+ (NULL)) ELSE rt1.c2 COLLATE RTRIM END ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (((((~ (rt0.c4)), CASE WHEN t1.c39 THEN t1.c12 END, ((((((((t1.c4)AND(rt0.c0)))OR(t1.c39)))OR(rt1.c0)))OR(t1.c39))))<=((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c5)))OR(rt0.c3)))AND(rt1.c5)), CASE WHEN rt0.c2 THEN rt0.c2 ELSE t1.c12 END, ((x'') BETWEEN (rt0.c2) AND (NULL)))))) ORDER BY CASE ((rt0.c3)AND(rt0.c1))  WHEN (((t1.c2, rt1.c1, -1e500))<=((t1.c2, rt1.c6, rt0.c1))) THEN (+ (NULL)) ELSE rt1.c2 COLLATE RTRIM END ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt1 ON ((((rt1.c5, rt1.c3, t1.c12))<((rt1.c5, rt1.c2, rt1.c0))) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)>>(((rt1.c5)OR(rt1.c1)))) WHERE (((((t1.c39) NOT NULL))LIKE((rt1.c5 IN ())))) ORDER BY (((~ (rt1.c4)))-(t1.c39 COLLATE RTRIM))  NULLS FIRST, (((rt1.c2) ISNULL) IN (912305096, 1221737333)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c39) NOT NULL))LIKE((rt1.c5 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((((rt1.c5, rt1.c3, t1.c12))<((rt1.c5, rt1.c2, rt1.c0))) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)>>(((rt1.c5)OR(rt1.c1)))) ORDER BY (((~ (rt1.c4)))-(t1.c39 COLLATE RTRIM))  NULLS FIRST, (((rt1.c2) ISNULL) IN (912305096, 1221737333)) DESC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt1 ON ((((rt1.c5, rt1.c3, t1.c12))<((rt1.c5, rt1.c2, rt1.c0))) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)>>(((rt1.c5)OR(rt1.c1)))) WHERE (((((t1.c39) NOT NULL))LIKE((rt1.c5 IN ())))) ORDER BY (((~ (rt1.c4)))-(t1.c39 COLLATE RTRIM))  NULLS FIRST, (((rt1.c2) ISNULL) IN (912305096, 1221737333)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c39) NOT NULL))LIKE((rt1.c5 IN ())))) IS TRUE)  as count FROM t1 CROSS JOIN rt1 ON ((((rt1.c5, rt1.c3, t1.c12))<((rt1.c5, rt1.c2, rt1.c0))) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)>>(((rt1.c5)OR(rt1.c1)))) ORDER BY (((~ (rt1.c4)))-(t1.c39 COLLATE RTRIM))  NULLS FIRST, (((rt1.c2) ISNULL) IN (912305096, 1221737333)) DESC);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt1 ON ((((rt1.c5, rt1.c3, t1.c12))<((rt1.c5, rt1.c2, rt1.c0))) IN ()) RIGHT OUTER JOIN rt0 ON ((rt0.c2)>>(((rt1.c5)OR(rt1.c1)))) WHERE (((((t1.c39) NOT NULL))LIKE((rt1.c5 IN ())))) ORDER BY (((~ (rt1.c4)))-(t1.c39 COLLATE RTRIM))  NULLS FIRST, (((rt1.c2) ISNULL) IN (912305096, 1221737333)) DESC;
SELECT * FROM t1 WHERE ((+ (t1.c12)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c12)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((+ (t1.c12)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((+ (t1.c12)) COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((+ (t1.c12)) COLLATE RTRIM);
SELECT * FROM t1, rt1, rt0 WHERE (((((rt1.c3)*(rt1.c4)))/(((t1.c39) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)*(rt1.c4)))/(((t1.c39) IS TRUE)))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (((((rt1.c3)*(rt1.c4)))/(((t1.c39) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)*(rt1.c4)))/(((t1.c39) IS TRUE)))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT * FROM t1, rt1, rt0 WHERE (((((rt1.c3)*(rt1.c4)))/(((t1.c39) IS TRUE))));
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN t1 ON (+ (t1.c2 COLLATE BINARY)) WHERE ((((((t1.c12)||(rt1.c2)), ((t1.c2)OR(t1.c2)), CASE WHEN t1.c2 THEN t1.c12 END))!=(((+ (rt1.c5)), (rt0.c2 IN ()), rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((((t1.c12)||(rt1.c2)), ((t1.c2)OR(t1.c2)), CASE WHEN t1.c2 THEN t1.c12 END))!=(((+ (rt1.c5)), (rt0.c2 IN ()), rt0.c3)))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t1 ON (+ (t1.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN t1 ON (+ (t1.c2 COLLATE BINARY)) WHERE ((((((t1.c12)||(rt1.c2)), ((t1.c2)OR(t1.c2)), CASE WHEN t1.c2 THEN t1.c12 END))!=(((+ (rt1.c5)), (rt0.c2 IN ()), rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((((t1.c12)||(rt1.c2)), ((t1.c2)OR(t1.c2)), CASE WHEN t1.c2 THEN t1.c12 END))!=(((+ (rt1.c5)), (rt0.c2 IN ()), rt0.c3)))) IS TRUE)  as count FROM rt1, rt0 LEFT OUTER JOIN t1 ON (+ (t1.c2 COLLATE BINARY)));
SELECT ALL * FROM rt1, rt0 LEFT OUTER JOIN t1 ON (+ (t1.c2 COLLATE BINARY)) WHERE ((((((t1.c12)||(rt1.c2)), ((t1.c2)OR(t1.c2)), CASE WHEN t1.c2 THEN t1.c12 END))!=(((+ (rt1.c5)), (rt0.c2 IN ()), rt0.c3))));
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((LTRIM(NULL), CASE rt1.c2  WHEN rt1.c6 THEN t1.c12 END, ('' IN ())))!=((json_quote(rt0.c4), ((rt0.c0) IS FALSE), ((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c2)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((LTRIM(NULL), CASE rt1.c2  WHEN rt1.c6 THEN t1.c12 END, ('' IN ())))!=((json_quote(rt0.c4), ((rt0.c0) IS FALSE), ((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY NULL);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((LTRIM(NULL), CASE rt1.c2  WHEN rt1.c6 THEN t1.c12 END, ('' IN ())))!=((json_quote(rt0.c4), ((rt0.c0) IS FALSE), ((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c2)))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((LTRIM(NULL), CASE rt1.c2  WHEN rt1.c6 THEN t1.c12 END, ('' IN ())))!=((json_quote(rt0.c4), ((rt0.c0) IS FALSE), ((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c2)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY NULL);
SELECT ALL * FROM rt1, rt0, t1 WHERE ((((LTRIM(NULL), CASE rt1.c2  WHEN rt1.c6 THEN t1.c12 END, ('' IN ())))!=((json_quote(rt0.c4), ((rt0.c0) IS FALSE), ((rt0.c4) BETWEEN (rt0.c0) AND (rt1.c2)))))) ORDER BY NULL;
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c2)) NOT BETWEEN ((t1.c4)) AND ((0.8195374386859061))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c2)) NOT BETWEEN ((t1.c4)) AND ((0.8195374386859061))) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c2)) NOT BETWEEN ((t1.c4)) AND ((0.8195374386859061))) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c2)) NOT BETWEEN ((t1.c4)) AND ((0.8195374386859061))) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c2)) NOT BETWEEN ((t1.c4)) AND ((0.8195374386859061))) AS REAL));
SELECT ALL * FROM rt1, t1 WHERE ((((((t1.c12, rt1.c6, rt1.c4)) BETWEEN ((rt1.c4, rt1.c0, t1.c4)) AND ((rt1.c3, t1.c2, 1.474593177E9)))) NOT NULL)) ORDER BY (((((~ (rt1.c2)))OR(TRIM(t1.c12, t1.c39))))OR(((((x'')OR(t1.c4)))OR(rt1.c5)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c12, rt1.c6, rt1.c4)) BETWEEN ((rt1.c4, rt1.c0, t1.c4)) AND ((rt1.c3, t1.c2, 1.474593177E9)))) NOT NULL)) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((~ (rt1.c2)))OR(TRIM(t1.c12, t1.c39))))OR(((((x'')OR(t1.c4)))OR(rt1.c5)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, t1 WHERE ((((((t1.c12, rt1.c6, rt1.c4)) BETWEEN ((rt1.c4, rt1.c0, t1.c4)) AND ((rt1.c3, t1.c2, 1.474593177E9)))) NOT NULL)) ORDER BY (((((~ (rt1.c2)))OR(TRIM(t1.c12, t1.c39))))OR(((((x'')OR(t1.c4)))OR(rt1.c5)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((t1.c12, rt1.c6, rt1.c4)) BETWEEN ((rt1.c4, rt1.c0, t1.c4)) AND ((rt1.c3, t1.c2, 1.474593177E9)))) NOT NULL)) IS TRUE)  as count FROM rt1, t1 ORDER BY (((((~ (rt1.c2)))OR(TRIM(t1.c12, t1.c39))))OR(((((x'')OR(t1.c4)))OR(rt1.c5)))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, t1 WHERE ((((((t1.c12, rt1.c6, rt1.c4)) BETWEEN ((rt1.c4, rt1.c0, t1.c4)) AND ((rt1.c3, t1.c2, 1.474593177E9)))) NOT NULL)) ORDER BY (((((~ (rt1.c2)))OR(TRIM(t1.c12, t1.c39))))OR(((((x'')OR(t1.c4)))OR(rt1.c5)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))>=(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(((((rt0.c3)AND(rt0.c3)))OR(0xffffffffb6acc1fc)) AS TEXT) ASC, (+ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))>=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c3)AND(rt0.c3)))OR(0Xffffffffb6acc1fc)) AS TEXT) ASC, (+ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))>=(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(((((rt0.c3)AND(rt0.c3)))OR(0xffffffffb6acc1fc)) AS TEXT) ASC, (+ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c1 AS BLOB))>=(rt0.c2 COLLATE NOCASE))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((((rt0.c3)AND(rt0.c3)))OR(0Xffffffffb6acc1fc)) AS TEXT) ASC, (+ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c1 AS BLOB))>=(rt0.c2 COLLATE NOCASE))) ORDER BY CAST(((((rt0.c3)AND(rt0.c3)))OR(0xffffffffb6acc1fc)) AS TEXT) ASC, (+ (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC;
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c3)|(t1.c2))) IS FALSE)) ORDER BY (+ (TRIM(DISTINCT rt0.c1, t1.c4)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(t1.c2))) IS FALSE)) IS TRUE)  as count FROM t1, rt0 ORDER BY (+ (TRIM(DISTINCT rt0.c1, t1.c4))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c3)|(t1.c2))) IS FALSE)) ORDER BY (+ (TRIM(DISTINCT rt0.c1, t1.c4)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)|(t1.c2))) IS FALSE)) IS TRUE)  as count FROM t1, rt0 ORDER BY (+ (TRIM(DISTINCT rt0.c1, t1.c4))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((((rt0.c3)|(t1.c2))) IS FALSE)) ORDER BY (+ (TRIM(DISTINCT rt0.c1, t1.c4)));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((rt1.c5, rt1.c5, t1.c4, rt0.c3, rt1.c6)) NOT BETWEEN ((((rt0.c3) ISNULL), CAST(rt1.c1 AS BLOB), NULLIF(t1.c39, rt1.c4), ((rt0.c4)+(0X443ae5d1)), ((0.597498105125497)*(rt1.c2)))) AND (((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND (('-8aa汬d}'))), ((t1.c39) NOT BETWEEN ('1620236123') AND (rt1.c5)), CASE rt1.c5  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c0 THEN x'' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END, rt1.c1 COLLATE NOCASE, INSTR(rt0.c0, t1.c2)))) FULL OUTER JOIN t1 ON (+ (t1.c2 COLLATE NOCASE)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt1.c5, rt1.c5, t1.c4, rt0.c3, rt1.c6)) NOT BETWEEN ((((rt0.c3) ISNULL), CAST(rt1.c1 AS BLOB), NULLIF(t1.c39, rt1.c4), ((rt0.c4)+(0X443ae5d1)), ((0.597498105125497)*(rt1.c2)))) AND (((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND (('-8aa汬d}'))), ((t1.c39) NOT BETWEEN ('1620236123') AND (rt1.c5)), CASE rt1.c5  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c0 THEN x'' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END, rt1.c1 COLLATE NOCASE, INSTR(rt0.c0, t1.c2)))) FULL OUTER JOIN t1 ON (+ (t1.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 INNER JOIN rt1 ON (((rt1.c5, rt1.c5, t1.c4, rt0.c3, rt1.c6)) NOT BETWEEN ((((rt0.c3) ISNULL), CAST(rt1.c1 AS BLOB), NULLIF(t1.c39, rt1.c4), ((rt0.c4)+(0X443ae5d1)), ((0.597498105125497)*(rt1.c2)))) AND (((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND (('-8aa汬d}'))), ((t1.c39) NOT BETWEEN ('1620236123') AND (rt1.c5)), CASE rt1.c5  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c0 THEN x'' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END, rt1.c1 COLLATE NOCASE, INSTR(rt0.c0, t1.c2)))) FULL OUTER JOIN t1 ON (+ (t1.c2 COLLATE NOCASE)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INNER JOIN rt1 ON (((rt1.c5, rt1.c5, t1.c4, rt0.c3, rt1.c6)) NOT BETWEEN ((((rt0.c3) ISNULL), CAST(rt1.c1 AS BLOB), NULLIF(t1.c39, rt1.c4), ((rt0.c4)+(0X443ae5d1)), ((0.597498105125497)*(rt1.c2)))) AND (((((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND (('-8aa汬d}'))), ((t1.c39) NOT BETWEEN ('1620236123') AND (rt1.c5)), CASE rt1.c5  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c0 THEN x'' WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c4 END, rt1.c1 COLLATE NOCASE, INSTR(rt0.c0, t1.c2)))) FULL OUTER JOIN t1 ON (+ (t1.c2 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM t1 INDEXED BY i84 WHERE (STRFTIME(t1.c4 COLLATE RTRIM, (- (t1.c12)), UPPER(t1.c2))) ORDER BY ((((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c12)))-('	'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(t1.c4 COLLATE RTRIM, (- (t1.c12)), UPPER(t1.c2))) IS TRUE)  as count FROM t1 INDEXED BY i84 ORDER BY ((((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c12)))-('	'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i84 WHERE (STRFTIME(t1.c4 COLLATE RTRIM, (- (t1.c12)), UPPER(t1.c2))) ORDER BY ((((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c12)))-('	'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(t1.c4 COLLATE RTRIM, (- (t1.c12)), UPPER(t1.c2))) IS TRUE)  as count FROM t1 INDEXED BY i84 ORDER BY ((((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c12)))-('	'))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 INDEXED BY i84 WHERE (STRFTIME(t1.c4 COLLATE RTRIM, (- (t1.c12)), UPPER(t1.c2))) ORDER BY ((((t1.c12) NOT BETWEEN (t1.c12) AND (t1.c12)))-('	'))  NULLS LAST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(ROUND(t1.c4, rt0.c3) AS TEXT)) ORDER BY ((((((rt0.c4)IS(t1.c39)))AND((((rt1.c1, rt1.c0, rt0.c3))=((t1.c12, rt0.c4, NULL))))))AND((~ (NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(ROUND(t1.c4, rt0.c3) AS TEXT)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((((rt0.c4)IS(t1.c39)))AND((((rt1.c1, rt1.c0, rt0.c3))==((t1.c12, rt0.c4, NULL))))))AND((~ (NULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(ROUND(t1.c4, rt0.c3) AS TEXT)) ORDER BY ((((((rt0.c4)IS(t1.c39)))AND((((rt1.c1, rt1.c0, rt0.c3))=((t1.c12, rt0.c4, NULL))))))AND((~ (NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(ROUND(t1.c4, rt0.c3) AS TEXT)) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY ((((((rt0.c4)IS(t1.c39)))AND((((rt1.c1, rt1.c0, rt0.c3))==((t1.c12, rt0.c4, NULL))))))AND((~ (NULL)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (CAST(ROUND(t1.c4, rt0.c3) AS TEXT)) ORDER BY ((((((rt0.c4)IS(t1.c39)))AND((((rt1.c1, rt1.c0, rt0.c3))=((t1.c12, rt0.c4, NULL))))))AND((~ (NULL)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (0.39189498116303667) ORDER BY rt1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.39189498116303667) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.39189498116303667) ORDER BY rt1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.39189498116303667) IS TRUE)  as count FROM rt1 ORDER BY rt1.c4 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.39189498116303667) ORDER BY rt1.c4 DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(0Xffffffffd606d37b)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(0xffffffffd606d37b)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(0Xffffffffd606d37b)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(0xffffffffd606d37b)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((TRIM(0Xffffffffd606d37b)) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c6 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c2 THEN rt1.c6 END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c6 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c2 THEN rt1.c6 END IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c2 THEN rt1.c6 END IN ()));
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN (NULL, HEX(DISTINCT rt1.c2)))) ORDER BY t1.c4 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(rt0.c1)) IN (NULL, HEX(DISTINCT rt1.c2)))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY t1.c4 ASC);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN (NULL, HEX(DISTINCT rt1.c2)))) ORDER BY t1.c4 ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)IS(rt0.c1)) IN (NULL, HEX(DISTINCT rt1.c2)))) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY t1.c4 ASC);
SELECT COUNT(*) FROM t1, rt1, rt0 WHERE ((((rt0.c0)IS(rt0.c1)) IN (NULL, HEX(DISTINCT rt1.c2)))) ORDER BY t1.c4 ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c2)&(-1230192132))  WHEN IFNULL(t1.c12, t1.c4) THEN ((t1.c2)<<(t1.c39)) WHEN ((t1.c4)!=(t1.c2)) THEN ((t1.c12)!=(t1.c12)) WHEN CAST(t1.c4 AS TEXT) THEN CAST(t1.c12 AS INTEGER) ELSE (t1.c39 IN (t1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c2)&(-1230192132))  WHEN IFNULL(t1.c12, t1.c4) THEN ((t1.c2)<<(t1.c39)) WHEN ((t1.c4)<>(t1.c2)) THEN ((t1.c12)<>(t1.c12)) WHEN CAST(t1.c4 AS TEXT) THEN CAST(t1.c12 AS INTEGER) ELSE (t1.c39 IN (t1.c4)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c2)&(-1230192132))  WHEN IFNULL(t1.c12, t1.c4) THEN ((t1.c2)<<(t1.c39)) WHEN ((t1.c4)!=(t1.c2)) THEN ((t1.c12)!=(t1.c12)) WHEN CAST(t1.c4 AS TEXT) THEN CAST(t1.c12 AS INTEGER) ELSE (t1.c39 IN (t1.c4)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c2)&(-1230192132))  WHEN IFNULL(t1.c12, t1.c4) THEN ((t1.c2)<<(t1.c39)) WHEN ((t1.c4)<>(t1.c2)) THEN ((t1.c12)<>(t1.c12)) WHEN CAST(t1.c4 AS TEXT) THEN CAST(t1.c12 AS INTEGER) ELSE (t1.c39 IN (t1.c4)) END) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c2)&(-1230192132))  WHEN IFNULL(t1.c12, t1.c4) THEN ((t1.c2)<<(t1.c39)) WHEN ((t1.c4)!=(t1.c2)) THEN ((t1.c12)!=(t1.c12)) WHEN CAST(t1.c4 AS TEXT) THEN CAST(t1.c12 AS INTEGER) ELSE (t1.c39 IN (t1.c4)) END);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c1, 8.69072978E8, rt0.c4))<((rt0.c3, rt0.c3, rt0.c0)))) BETWEEN (((rt0.c2) IS FALSE)) AND (INSTR('>MXK)eI', x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 8.69072978E8, rt0.c4))<((rt0.c3, rt0.c3, rt0.c0)))) BETWEEN (((rt0.c2) IS FALSE)) AND (INSTR('>MXK)eI', x'')))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c1, 8.69072978E8, rt0.c4))<((rt0.c3, rt0.c3, rt0.c0)))) BETWEEN (((rt0.c2) IS FALSE)) AND (INSTR('>MXK)eI', x''))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c1, 8.69072978E8, rt0.c4))<((rt0.c3, rt0.c3, rt0.c0)))) BETWEEN (((rt0.c2) IS FALSE)) AND (INSTR('>MXK)eI', x'')))) IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE ((((((rt0.c1, 8.69072978E8, rt0.c4))<((rt0.c3, rt0.c3, rt0.c0)))) BETWEEN (((rt0.c2) IS FALSE)) AND (INSTR('>MXK)eI', x''))));
SELECT ALL * FROM rt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 ELSE CASE WHEN t1.c39 THEN rt1.c5 END END WHERE (CAST((rt1.c0 IN ()) AS BLOB)) ORDER BY CASE NULLIF(DISTINCT t1.c12, rt1.c1)  WHEN (('-596519737') IS TRUE) THEN (((rt0.c3))<=((t1.c39))) WHEN (rt0.c4 IN ()) THEN ((rt0.c4)<=(t1.c4)) WHEN ((rt0.c0)>=(rt0.c4)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((rt0.c1)AND(rt1.c5)))OR(rt1.c0)))AND(rt0.c0)))AND(t1.c12)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 ELSE CASE WHEN t1.c39 THEN rt1.c5 END END ORDER BY CASE NULLIF(DISTINCT t1.c12, rt1.c1)  WHEN (('-596519737') IS TRUE) THEN (((rt0.c3))<=((t1.c39))) WHEN (rt0.c4 IN ()) THEN ((rt0.c4)<=(t1.c4)) WHEN ((rt0.c0)>=(rt0.c4)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((rt0.c1)AND(rt1.c5)))OR(rt1.c0)))AND(rt0.c0)))AND(t1.c12)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 ELSE CASE WHEN t1.c39 THEN rt1.c5 END END WHERE (CAST((rt1.c0 IN ()) AS BLOB)) ORDER BY CASE NULLIF(DISTINCT t1.c12, rt1.c1)  WHEN (('-596519737') IS TRUE) THEN (((rt0.c3))<=((t1.c39))) WHEN (rt0.c4 IN ()) THEN ((rt0.c4)<=(t1.c4)) WHEN ((rt0.c0)>=(rt0.c4)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((rt0.c1)AND(rt1.c5)))OR(rt1.c0)))AND(rt0.c0)))AND(t1.c12)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt1.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM rt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 ELSE CASE WHEN t1.c39 THEN rt1.c5 END END ORDER BY CASE NULLIF(DISTINCT t1.c12, rt1.c1)  WHEN (('-596519737') IS TRUE) THEN (((rt0.c3))<=((t1.c39))) WHEN (rt0.c4 IN ()) THEN ((rt0.c4)<=(t1.c4)) WHEN ((rt0.c0)>=(rt0.c4)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((rt0.c1)AND(rt1.c5)))OR(rt1.c0)))AND(rt0.c0)))AND(t1.c12)) END DESC  NULLS FIRST);
SELECT ALL * FROM rt1, t1 FULL OUTER JOIN rt0 ON CASE WHEN ((((rt0.c4)OR(rt1.c0)))OR(rt1.c0)) THEN rt1.c0 ELSE CASE WHEN t1.c39 THEN rt1.c5 END END WHERE (CAST((rt1.c0 IN ()) AS BLOB)) ORDER BY CASE NULLIF(DISTINCT t1.c12, rt1.c1)  WHEN (('-596519737') IS TRUE) THEN (((rt0.c3))<=((t1.c39))) WHEN (rt0.c4 IN ()) THEN ((rt0.c4)<=(t1.c4)) WHEN ((rt0.c0)>=(rt0.c4)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((rt0.c1)AND(rt1.c5)))OR(rt1.c0)))AND(rt0.c0)))AND(t1.c12)) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c4)OR(rt1.c4)))AND(rt1.c2)) COLLATE NOCASE) ORDER BY (((((rt1.c5)AND(rt1.c6))))>(((rt1.c6 IN ())))), (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(0.44470819971441333))))!=(((+ (rt1.c3))))) DESC, CASE WHEN rt1.c3 THEN rt1.c3 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)OR(rt1.c4)))AND(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c5)AND(rt1.c6))))>(((rt1.c6 IN ())))), (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(0.44470819971441333))))<>(((+ (rt1.c3))))) DESC, CASE WHEN rt1.c3 THEN rt1.c3 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c4)OR(rt1.c4)))AND(rt1.c2)) COLLATE NOCASE) ORDER BY (((((rt1.c5)AND(rt1.c6))))>(((rt1.c6 IN ())))), (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(0.44470819971441333))))!=(((+ (rt1.c3))))) DESC, CASE WHEN rt1.c3 THEN rt1.c3 END COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)OR(rt1.c4)))AND(rt1.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c5)AND(rt1.c6))))>(((rt1.c6 IN ())))), (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(0.44470819971441333))))<>(((+ (rt1.c3))))) DESC, CASE WHEN rt1.c3 THEN rt1.c3 END COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c4)OR(rt1.c4)))AND(rt1.c2)) COLLATE NOCASE) ORDER BY (((((rt1.c5)AND(rt1.c6))))>(((rt1.c6 IN ())))), (((((((((((rt1.c0)OR(rt1.c1)))AND(rt1.c0)))AND(rt1.c2)))AND(0.44470819971441333))))!=(((+ (rt1.c3))))) DESC, CASE WHEN rt1.c3 THEN rt1.c3 END COLLATE BINARY  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c39)) BETWEEN ((((t1.c4) IS FALSE))) AND (((t1.c12 IN (t1.c2, t1.c12))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c39)) BETWEEN ((((t1.c4) IS FALSE))) AND (((t1.c12 IN (t1.c2, t1.c12)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c39)) BETWEEN ((((t1.c4) IS FALSE))) AND (((t1.c12 IN (t1.c2, t1.c12))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c39)) BETWEEN ((((t1.c4) IS FALSE))) AND (((t1.c12 IN (t1.c2, t1.c12)))))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((((t1.c39)) BETWEEN ((((t1.c4) IS FALSE))) AND (((t1.c12 IN (t1.c2, t1.c12))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((rt0.c3) IS FALSE)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c3) IS FALSE));
SELECT * FROM t1 CROSS JOIN rt0 ON ((ABS(rt0.c1))|((((t1.c2))!=((t1.c2))))) WHERE ((- (((t1.c39) IS TRUE)))) ORDER BY ((0.647780694876568) BETWEEN (CASE t1.c39  WHEN t1.c12 THEN rt0.c1 END) AND (((((t1.c39)AND(rt0.c2)))AND(rt0.c4)))) DESC  NULLS LAST, ((((('{!', t1.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, t1.c39, rt0.c3)) AND ((rt0.c0, rt0.c1, t1.c2))))==((~ ('-464790905')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c39) IS TRUE)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((ABS(rt0.c1))|((((t1.c2))<>((t1.c2))))) ORDER BY ((0.647780694876568) BETWEEN (CASE t1.c39  WHEN t1.c12 THEN rt0.c1 END) AND (((((t1.c39)AND(rt0.c2)))AND(rt0.c4)))) DESC  NULLS LAST, ((((('{!', t1.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, t1.c39, rt0.c3)) AND ((rt0.c0, rt0.c1, t1.c2))))=((~ ('-464790905')))) ASC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN rt0 ON ((ABS(rt0.c1))|((((t1.c2))!=((t1.c2))))) WHERE ((- (((t1.c39) IS TRUE)))) ORDER BY ((0.647780694876568) BETWEEN (CASE t1.c39  WHEN t1.c12 THEN rt0.c1 END) AND (((((t1.c39)AND(rt0.c2)))AND(rt0.c4)))) DESC  NULLS LAST, ((((('{!', t1.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, t1.c39, rt0.c3)) AND ((rt0.c0, rt0.c1, t1.c2))))==((~ ('-464790905')))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((t1.c39) IS TRUE)))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((ABS(rt0.c1))|((((t1.c2))<>((t1.c2))))) ORDER BY ((0.647780694876568) BETWEEN (CASE t1.c39  WHEN t1.c12 THEN rt0.c1 END) AND (((((t1.c39)AND(rt0.c2)))AND(rt0.c4)))) DESC  NULLS LAST, ((((('{!', t1.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, t1.c39, rt0.c3)) AND ((rt0.c0, rt0.c1, t1.c2))))=((~ ('-464790905')))) ASC  NULLS FIRST);
SELECT * FROM t1 CROSS JOIN rt0 ON ((ABS(rt0.c1))|((((t1.c2))!=((t1.c2))))) WHERE ((- (((t1.c39) IS TRUE)))) ORDER BY ((0.647780694876568) BETWEEN (CASE t1.c39  WHEN t1.c12 THEN rt0.c1 END) AND (((((t1.c39)AND(rt0.c2)))AND(rt0.c4)))) DESC  NULLS LAST, ((((('{!', t1.c2, rt0.c1)) NOT BETWEEN ((rt0.c3, t1.c39, rt0.c3)) AND ((rt0.c0, rt0.c1, t1.c2))))==((~ ('-464790905')))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (t1.c4);
SELECT SUM(count) FROM (SELECT ALL ((t1.c4) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (t1.c4);
SELECT SUM(count) FROM (SELECT ALL ((t1.c4) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT COUNT(*) FROM rt0, rt1, t1 WHERE (t1.c4);
SELECT ALL COUNT(*) FROM t1, rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4))) ISNULL)) ORDER BY LIKE((((rt1.c6, rt0.c1, rt1.c1))>((rt0.c2, t1.c39, rt1.c1))), ((rt1.c3)+(rt1.c2)), 'W')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4))) ISNULL)) IS TRUE)  as count FROM t1, rt1 NATURAL JOIN rt0 ORDER BY LIKE((((rt1.c6, rt0.c1, rt1.c1))>((rt0.c2, t1.c39, rt1.c1))), ((rt1.c3)+(rt1.c2)), 'W')  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4))) ISNULL)) ORDER BY LIKE((((rt1.c6, rt0.c1, rt1.c1))>((rt0.c2, t1.c39, rt1.c1))), ((rt1.c3)+(rt1.c2)), 'W')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4))) ISNULL)) IS TRUE)  as count FROM t1, rt1 NATURAL JOIN rt0 ORDER BY LIKE((((rt1.c6, rt0.c1, rt1.c1))>((rt0.c2, t1.c39, rt1.c1))), ((rt1.c3)+(rt1.c2)), 'W')  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, rt1 NATURAL JOIN rt0 WHERE (((((((rt1.c1)OR(rt1.c4)))AND(rt1.c4))) ISNULL)) ORDER BY LIKE((((rt1.c6, rt0.c1, rt1.c1))>((rt0.c2, t1.c39, rt1.c1))), ((rt1.c3)+(rt1.c2)), 'W')  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt1 ON rt1.c1 WHERE (((CAST(rt1.c5 AS REAL))||(CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c5 AS REAL))||(CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt1 ON rt1.c1 WHERE (((CAST(rt1.c5 AS REAL))||(CAST(rt1.c4 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c5 AS REAL))||(CAST(rt1.c4 AS NUMERIC)))) IS TRUE)  as count FROM t1 INNER JOIN rt1 ON rt1.c1);
SELECT ALL COUNT(*) FROM t1 INNER JOIN rt1 ON rt1.c1 WHERE (((CAST(rt1.c5 AS REAL))||(CAST(rt1.c4 AS NUMERIC))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CASE UPPER(rt1.c4)  WHEN (- (t1.c39)) THEN (NOT (rt0.c0)) ELSE (((('')OR(t1.c12)))OR(t1.c2)) END) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(rt1.c4)  WHEN (- (t1.c39)) THEN (NOT (rt0.c0)) ELSE (((('')OR(t1.c12)))OR(t1.c2)) END) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CASE UPPER(rt1.c4)  WHEN (- (t1.c39)) THEN (NOT (rt0.c0)) ELSE (((('')OR(t1.c12)))OR(t1.c2)) END) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE UPPER(rt1.c4)  WHEN (- (t1.c39)) THEN (NOT (rt0.c0)) ELSE (((('')OR(t1.c12)))OR(t1.c2)) END) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CASE UPPER(rt1.c4)  WHEN (- (t1.c39)) THEN (NOT (rt0.c0)) ELSE (((('')OR(t1.c12)))OR(t1.c2)) END) ORDER BY NULL COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, t1 WHERE ((((rt1.c0)>>(rt1.c1)) IN (0.41555541742079505, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)>>(rt1.c1)) IN (0.41555541742079505, rt1.c0))) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE ((((rt1.c0)>>(rt1.c1)) IN (0.41555541742079505, rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)>>(rt1.c1)) IN (0.41555541742079505, rt1.c0))) IS TRUE)  as count FROM rt1, t1);
SELECT COUNT(*) FROM rt1, t1 WHERE ((((rt1.c0)>>(rt1.c1)) IN (0.41555541742079505, rt1.c0)));
SELECT * FROM t1, rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0))>((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0))>((rt0.c3))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>((rt0.c3))) IN ())) IS TRUE)  as count FROM rt0, rt1, t1 NOT INDEXED);
SELECT ALL COUNT(*) FROM rt0, rt1, t1 WHERE (((((rt1.c0))>((rt0.c3))) IN ()));
SELECT * FROM rt0, rt1, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE (x'');
SELECT ALL * FROM rt1, rt0 WHERE (((((ABS(rt1.c1))OR(((('1tﵡ#O'))==((rt1.c1))))))OR(NULL))) ORDER BY (((rt0.c3 IN ())) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(rt1.c1))OR(((('1tﵡ#O'))=((rt1.c1))))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c3 IN ())) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((ABS(rt1.c1))OR(((('1tﵡ#O'))==((rt1.c1))))))OR(NULL))) ORDER BY (((rt0.c3 IN ())) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((ABS(rt1.c1))OR(((('1tﵡ#O'))=((rt1.c1))))))OR(NULL))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (((rt0.c3 IN ())) IS FALSE) DESC  NULLS FIRST);
SELECT ALL * FROM rt1, rt0 WHERE (((((ABS(rt1.c1))OR(((('1tﵡ#O'))==((rt1.c1))))))OR(NULL))) ORDER BY (((rt0.c3 IN ())) IS FALSE) DESC  NULLS FIRST;
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((451479427) BETWEEN (t1.c4) AND (rt1.c5)))&(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((451479427) BETWEEN (t1.c4) AND (rt1.c5)))&(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((451479427) BETWEEN (t1.c4) AND (rt1.c5)))&(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((451479427) BETWEEN (t1.c4) AND (rt1.c5)))&(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT ALL * FROM rt1, rt0, t1 WHERE (((((451479427) BETWEEN (t1.c4) AND (rt1.c5)))&(CASE rt1.c1  WHEN rt1.c1 THEN rt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (((((UNLIKELY('[B%b	'''))OR((rt0.c0 IN ()))))AND(rt0.c3))) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY('[B%b	'''))OR((rt0.c0 IN ()))))AND(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((UNLIKELY('[B%b	'''))OR((rt0.c0 IN ()))))AND(rt0.c3))) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((UNLIKELY('[B%b	'''))OR((rt0.c0 IN ()))))AND(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((((UNLIKELY('[B%b	'''))OR((rt0.c0 IN ()))))AND(rt0.c3))) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c2)AND(t1.c12)))AND(t1.c39)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)AND(t1.c12)))AND(t1.c39)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c2)AND(t1.c12)))AND(t1.c39)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2)AND(t1.c12)))AND(t1.c39)) COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE (((((t1.c2)AND(t1.c12)))AND(t1.c39)) COLLATE BINARY);
SELECT * FROM t1 WHERE (t1.c12) ORDER BY ((t1.c39) IS TRUE) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c12) IS TRUE)  as count FROM t1 ORDER BY ((t1.c39) IS TRUE) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c12) ORDER BY ((t1.c39) IS TRUE) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c12) IS TRUE)  as count FROM t1 ORDER BY ((t1.c39) IS TRUE) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM t1 WHERE (t1.c12) ORDER BY ((t1.c39) IS TRUE) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((CASE WHEN t1.c4 THEN t1.c4 END)OR(((rt1.c2) BETWEEN ('2y') AND (rt0.c1)))))OR(CASE 0xffffffffac827272  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c4 END)))OR(((t1.c4)%(rt0.c0)))))OR(((rt1.c6)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t1.c4 THEN t1.c4 END)OR(((rt1.c2) BETWEEN ('2y') AND (rt0.c1)))))OR(CASE 0Xffffffffac827272  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c4 END)))OR(((t1.c4)%(rt0.c0)))))OR(((rt1.c6)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((CASE WHEN t1.c4 THEN t1.c4 END)OR(((rt1.c2) BETWEEN ('2y') AND (rt0.c1)))))OR(CASE 0xffffffffac827272  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c4 END)))OR(((t1.c4)%(rt0.c0)))))OR(((rt1.c6)GLOB(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE WHEN t1.c4 THEN t1.c4 END)OR(((rt1.c2) BETWEEN ('2y') AND (rt0.c1)))))OR(CASE 0Xffffffffac827272  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c4 END)))OR(((t1.c4)%(rt0.c0)))))OR(((rt1.c6)GLOB(rt1.c2))))) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT COUNT(*) FROM rt1, rt0, t1 WHERE (((((((((CASE WHEN t1.c4 THEN t1.c4 END)OR(((rt1.c2) BETWEEN ('2y') AND (rt0.c1)))))OR(CASE 0xffffffffac827272  WHEN rt1.c2 THEN rt0.c2 ELSE rt1.c4 END)))OR(((t1.c4)%(rt0.c0)))))OR(((rt1.c6)GLOB(rt1.c2)))));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c6 WHERE (0.6604493619189822);
SELECT SUM(count) FROM (SELECT ALL ((0.6604493619189822) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c6);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c6 WHERE (0.6604493619189822);
SELECT SUM(count) FROM (SELECT ALL ((0.6604493619189822) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c6);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON rt1.c6 WHERE (0.6604493619189822);
SELECT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN ((x'')-(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c1)) THEN ((x'')-(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN ((x'')-(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (+ (rt0.c1)) THEN ((x'')-(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CASE WHEN (+ (rt0.c1)) THEN ((x'')-(rt0.c0)) END);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c5)IS(t1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)IS(t1.c4)) IN ())) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c5)IS(t1.c4)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c5)IS(t1.c4)) IN ())) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT * FROM t1, rt0, rt1 WHERE ((((rt1.c5)IS(t1.c4)) IN ()));
SELECT * FROM rt0, rt1, t1 WHERE ((((rt1.c3)) BETWEEN (((((t1.c4)) NOT BETWEEN ((t1.c2)) AND ((rt0.c3))))) AND ((((t1.c39)-(t1.c39))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN (((((t1.c4)) NOT BETWEEN ((t1.c2)) AND ((rt0.c3))))) AND ((((t1.c39)-(t1.c39)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((((rt1.c3)) BETWEEN (((((t1.c4)) NOT BETWEEN ((t1.c2)) AND ((rt0.c3))))) AND ((((t1.c39)-(t1.c39))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) BETWEEN (((((t1.c4)) NOT BETWEEN ((t1.c2)) AND ((rt0.c3))))) AND ((((t1.c39)-(t1.c39)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((((rt1.c3)) BETWEEN (((((t1.c4)) NOT BETWEEN ((t1.c2)) AND ((rt0.c3))))) AND ((((t1.c39)-(t1.c39))))));
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c6)LIKE(rt0.c4))  WHEN (((rt0.c1, NULL, rt1.c3))!=((rt0.c2, t1.c12, rt0.c1))) THEN SUBSTR(rt1.c5, t1.c2) END INNER JOIN t1 ON (((70270037, rt1.c3, t1.c4)) NOT BETWEEN ((((t1.c2) NOT BETWEEN (rt1.c5) AND (x'')), ((t1.c2)OR(rt1.c1)), '777485003')) AND ((((rt1.c1)||(rt0.c3)), COALESCE(t1.c4, t1.c39), (rt1.c1 IN ())))) WHERE (COALESCE(DISTINCT (rt1.c4 IN ()), (((rt1.c0, rt1.c0, t1.c39)) BETWEEN ((t1.c39, t1.c2, rt1.c2)) AND (('~H', t1.c4, rt0.c2))))) ORDER BY ((((rt0.c4 IN ())))<>((rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (rt1.c4 IN ()), (((rt1.c0, rt1.c0, t1.c39)) BETWEEN ((t1.c39, t1.c2, rt1.c2)) AND (('~H', t1.c4, rt0.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c6)LIKE(rt0.c4))  WHEN (((rt0.c1, NULL, rt1.c3))!=((rt0.c2, t1.c12, rt0.c1))) THEN SUBSTR(rt1.c5, t1.c2) END INNER JOIN t1 ON (((70270037, rt1.c3, t1.c4)) NOT BETWEEN ((((t1.c2) NOT BETWEEN (rt1.c5) AND (x'')), ((t1.c2)OR(rt1.c1)), '777485003')) AND ((((rt1.c1)||(rt0.c3)), COALESCE(t1.c4, t1.c39), (rt1.c1 IN ())))) ORDER BY ((((rt0.c4 IN ())))!=((rt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c6)LIKE(rt0.c4))  WHEN (((rt0.c1, NULL, rt1.c3))!=((rt0.c2, t1.c12, rt0.c1))) THEN SUBSTR(rt1.c5, t1.c2) END INNER JOIN t1 ON (((70270037, rt1.c3, t1.c4)) NOT BETWEEN ((((t1.c2) NOT BETWEEN (rt1.c5) AND (x'')), ((t1.c2)OR(rt1.c1)), '777485003')) AND ((((rt1.c1)||(rt0.c3)), COALESCE(t1.c4, t1.c39), (rt1.c1 IN ())))) WHERE (COALESCE(DISTINCT (rt1.c4 IN ()), (((rt1.c0, rt1.c0, t1.c39)) BETWEEN ((t1.c39, t1.c2, rt1.c2)) AND (('~H', t1.c4, rt0.c2))))) ORDER BY ((((rt0.c4 IN ())))<>((rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT (rt1.c4 IN ()), (((rt1.c0, rt1.c0, t1.c39)) BETWEEN ((t1.c39, t1.c2, rt1.c2)) AND (('~H', t1.c4, rt0.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c6)LIKE(rt0.c4))  WHEN (((rt0.c1, NULL, rt1.c3))!=((rt0.c2, t1.c12, rt0.c1))) THEN SUBSTR(rt1.c5, t1.c2) END INNER JOIN t1 ON (((70270037, rt1.c3, t1.c4)) NOT BETWEEN ((((t1.c2) NOT BETWEEN (rt1.c5) AND (x'')), ((t1.c2)OR(rt1.c1)), '777485003')) AND ((((rt1.c1)||(rt0.c3)), COALESCE(t1.c4, t1.c39), (rt1.c1 IN ())))) ORDER BY ((((rt0.c4 IN ())))!=((rt1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN rt0 ON CASE ((rt1.c6)LIKE(rt0.c4))  WHEN (((rt0.c1, NULL, rt1.c3))!=((rt0.c2, t1.c12, rt0.c1))) THEN SUBSTR(rt1.c5, t1.c2) END INNER JOIN t1 ON (((70270037, rt1.c3, t1.c4)) NOT BETWEEN ((((t1.c2) NOT BETWEEN (rt1.c5) AND (x'')), ((t1.c2)OR(rt1.c1)), '777485003')) AND ((((rt1.c1)||(rt0.c3)), COALESCE(t1.c4, t1.c39), (rt1.c1 IN ())))) WHERE (COALESCE(DISTINCT (rt1.c4 IN ()), (((rt1.c0, rt1.c0, t1.c39)) BETWEEN ((t1.c39, t1.c2, rt1.c2)) AND (('~H', t1.c4, rt0.c2))))) ORDER BY ((((rt0.c4 IN ())))<>((rt1.c0))) DESC  NULLS FIRST;
SELECT * FROM rt1, rt0, t1 WHERE ((((t1.c39)) NOT BETWEEN ((((rt1.c4)LIKE(t1.c12)))) AND ((((((rt1.c5)AND(rt1.c6)))AND(rt1.c1)))))) ORDER BY (((json_extract(t1.c12, rt0.c1, t1.c4, rt1.c1), (~ (t1.c2)), (((rt1.c5, '^_R炳', x'59b8')) NOT BETWEEN ((NULL, rt1.c3, rt1.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))==(((NOT (rt0.c4)), x'6070a38d', (rt0.c2 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c39)) NOT BETWEEN ((((rt1.c4)LIKE(t1.c12)))) AND ((((((rt1.c5)AND(rt1.c6)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((json_extract(t1.c12, rt0.c1, t1.c4, rt1.c1), (~ (t1.c2)), (((rt1.c5, '^_R炳', x'59b8')) NOT BETWEEN ((NULL, rt1.c3, rt1.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))==(((NOT (rt0.c4)), x'6070a38d', (rt0.c2 IN ())))) ASC  NULLS LAST);
SELECT * FROM rt1, rt0, t1 WHERE ((((t1.c39)) NOT BETWEEN ((((rt1.c4)LIKE(t1.c12)))) AND ((((((rt1.c5)AND(rt1.c6)))AND(rt1.c1)))))) ORDER BY (((json_extract(t1.c12, rt0.c1, t1.c4, rt1.c1), (~ (t1.c2)), (((rt1.c5, '^_R炳', x'59b8')) NOT BETWEEN ((NULL, rt1.c3, rt1.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))==(((NOT (rt0.c4)), x'6070a38d', (rt0.c2 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t1.c39)) NOT BETWEEN ((((rt1.c4)LIKE(t1.c12)))) AND ((((((rt1.c5)AND(rt1.c6)))AND(rt1.c1)))))) IS TRUE)  as count FROM rt1, rt0, t1 ORDER BY (((json_extract(t1.c12, rt0.c1, t1.c4, rt1.c1), (~ (t1.c2)), (((rt1.c5, '^_R炳', x'59b8')) NOT BETWEEN ((NULL, rt1.c3, rt1.c1)) AND ((rt0.c2, rt0.c3, rt0.c2)))))==(((NOT (rt0.c4)), x'6070a38d', (rt0.c2 IN ())))) ASC  NULLS LAST);
SELECT * FROM t1 WHERE (CASE WHEN t1.c4 THEN t1.c39 WHEN -1e500 THEN x'ac53' WHEN t1.c12 THEN t1.c12 ELSE t1.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c4 THEN t1.c39 WHEN -1e500 THEN x'ac53' WHEN t1.c12 THEN t1.c12 ELSE t1.c4 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c4 THEN t1.c39 WHEN -1e500 THEN x'ac53' WHEN t1.c12 THEN t1.c12 ELSE t1.c4 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c4 THEN t1.c39 WHEN -1e500 THEN x'ac53' WHEN t1.c12 THEN t1.c12 ELSE t1.c4 END COLLATE BINARY) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (CASE WHEN t1.c4 THEN t1.c39 WHEN -1e500 THEN x'ac53' WHEN t1.c12 THEN t1.c12 ELSE t1.c4 END COLLATE BINARY);
SELECT COUNT(*) FROM rt1 WHERE ((((('*~>\r\rITzo')AND(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('*~>\r\rITzo')AND(NULL))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((('*~>\r\rITzo')AND(NULL))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((('*~>\r\rITzo')AND(NULL))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((('*~>\r\rITzo')AND(NULL))) IS FALSE));
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((CAST(rt0.c4 AS BLOB))OR(t1.c12)))AND(t1.c4 COLLATE RTRIM)))OR((rt0.c0 IN (t1.c2)))))AND(TRIM(DISTINCT t1.c2))) WHERE ((NOT (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t1.c39 WHEN rt0.c2 THEN t1.c39 END))) ORDER BY ((((t1.c2)<<(t1.c4))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t1.c39 WHEN rt0.c2 THEN t1.c39 END))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((((((CAST(rt0.c4 AS BLOB))OR(t1.c12)))AND(t1.c4 COLLATE RTRIM)))OR((rt0.c0 IN (t1.c2)))))AND(TRIM(DISTINCT t1.c2))) ORDER BY ((((t1.c2)<<(t1.c4))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((CAST(rt0.c4 AS BLOB))OR(t1.c12)))AND(t1.c4 COLLATE RTRIM)))OR((rt0.c0 IN (t1.c2)))))AND(TRIM(DISTINCT t1.c2))) WHERE ((NOT (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t1.c39 WHEN rt0.c2 THEN t1.c39 END))) ORDER BY ((((t1.c2)<<(t1.c4))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t1.c39 WHEN rt0.c2 THEN t1.c39 END))) IS TRUE)  as count FROM rt0 INNER JOIN t1 ON ((((((((CAST(rt0.c4 AS BLOB))OR(t1.c12)))AND(t1.c4 COLLATE RTRIM)))OR((rt0.c0 IN (t1.c2)))))AND(TRIM(DISTINCT t1.c2))) ORDER BY ((((t1.c2)<<(t1.c4))) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 INNER JOIN t1 ON ((((((((CAST(rt0.c4 AS BLOB))OR(t1.c12)))AND(t1.c4 COLLATE RTRIM)))OR((rt0.c0 IN (t1.c2)))))AND(TRIM(DISTINCT t1.c2))) WHERE ((NOT (CASE WHEN rt0.c2 THEN NULL WHEN rt0.c2 THEN t1.c39 WHEN rt0.c2 THEN t1.c39 END))) ORDER BY ((((t1.c2)<<(t1.c4))) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (COALESCE(DISTINCT (rt1.c0 IN ()), SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (rt1.c0 IN ()), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (COALESCE(DISTINCT (rt1.c0 IN ()), SQLITE_SOURCE_ID()));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (rt1.c0 IN ()), SQLITE_SOURCE_ID())) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT COUNT(*) FROM t1, rt0, rt1 WHERE (COALESCE(DISTINCT (rt1.c0 IN ()), SQLITE_SOURCE_ID()));
SELECT * FROM t1 WHERE ((- (((t1.c2) NOT BETWEEN (NULL) AND (t1.c2))))) ORDER BY (((((t1.c12)AND(t1.c39)))AND(t1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (((t1.c2) NOT BETWEEN (NULL) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c12)AND(t1.c39)))AND(t1.c2)) IN ()) ASC);
SELECT * FROM t1 WHERE ((- (((t1.c2) NOT BETWEEN (NULL) AND (t1.c2))))) ORDER BY (((((t1.c12)AND(t1.c39)))AND(t1.c2)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((- (((t1.c2) NOT BETWEEN (NULL) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c12)AND(t1.c39)))AND(t1.c2)) IN ()) ASC);
SELECT * FROM t1 WHERE ((- (((t1.c2) NOT BETWEEN (NULL) AND (t1.c2))))) ORDER BY (((((t1.c12)AND(t1.c39)))AND(t1.c2)) IN ()) ASC;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((t1.c39)OR(rt1.c2)))AND(t1.c39)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c39)OR(rt1.c2)))AND(t1.c39)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((t1.c39)OR(rt1.c2)))AND(t1.c39)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c39)OR(rt1.c2)))AND(t1.c39)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE (((((t1.c39)OR(rt1.c2)))AND(t1.c39)) COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)==((rt0.c3 IN ())))) ORDER BY (((x'ec3e')) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN 0.03160362987218801 WHEN rt0.c1 THEN rt0.c4 END)) AND ((rt0.c1 COLLATE RTRIM))) ASC, ((((((((CAST(rt0.c3 AS REAL))OR(rt0.c3)))OR((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)==((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((x'ec3e')) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN 0.03160362987218801 WHEN rt0.c1 THEN rt0.c4 END)) AND ((rt0.c1 COLLATE RTRIM))) ASC, ((((((((CAST(rt0.c3 AS REAL))OR(rt0.c3)))OR((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)==((rt0.c3 IN ())))) ORDER BY (((x'ec3e')) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN 0.03160362987218801 WHEN rt0.c1 THEN rt0.c4 END)) AND ((rt0.c1 COLLATE RTRIM))) ASC, ((((((((CAST(rt0.c3 AS REAL))OR(rt0.c3)))OR((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)==((rt0.c3 IN ())))) IS TRUE)  as count FROM rt0 ORDER BY (((x'ec3e')) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN 0.03160362987218801 WHEN rt0.c1 THEN rt0.c4 END)) AND ((rt0.c1 COLLATE RTRIM))) ASC, ((((((((CAST(rt0.c3 AS REAL))OR(rt0.c3)))OR((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)==((rt0.c3 IN ())))) ORDER BY (((x'ec3e')) BETWEEN ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN 0.03160362987218801 WHEN rt0.c1 THEN rt0.c4 END)) AND ((rt0.c1 COLLATE RTRIM))) ASC, ((((((((CAST(rt0.c3 AS REAL))OR(rt0.c3)))OR((((rt0.c0, rt0.c1, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c2)) AND ((rt0.c0, rt0.c3, rt0.c1))))))AND(CAST(rt0.c1 AS BLOB))))OR(CAST(rt0.c4 AS REAL))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ('-1453238840');
SELECT SUM(count) FROM (SELECT (('-1453238840') IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ('-1453238840');
SELECT SUM(count) FROM (SELECT (('-1453238840') IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ('-1453238840');
SELECT ALL * FROM t1 WHERE ((~ (t1.c2 COLLATE NOCASE))) ORDER BY (+ (((t1.c4) NOT NULL))), CASE t1.c4  WHEN (t1.c4 IN ()) THEN ((t1.c39)AND(t1.c2)) WHEN ((((t1.c12)AND(t1.c2)))AND(t1.c4)) THEN x'' WHEN CAST(t1.c39 AS INTEGER) THEN x'1693' COLLATE NOCASE ELSE (NOT (t1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY (+ (((t1.c4) NOT NULL))), CASE t1.c4  WHEN (t1.c4 IN ()) THEN ((t1.c39)AND(t1.c2)) WHEN ((((t1.c12)AND(t1.c2)))AND(t1.c4)) THEN x'' WHEN CAST(t1.c39 AS INTEGER) THEN x'1693' COLLATE NOCASE ELSE (NOT (t1.c2)) END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((~ (t1.c2 COLLATE NOCASE))) ORDER BY (+ (((t1.c4) NOT NULL))), CASE t1.c4  WHEN (t1.c4 IN ()) THEN ((t1.c39)AND(t1.c2)) WHEN ((((t1.c12)AND(t1.c2)))AND(t1.c4)) THEN x'' WHEN CAST(t1.c39 AS INTEGER) THEN x'1693' COLLATE NOCASE ELSE (NOT (t1.c2)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2 COLLATE NOCASE))) IS TRUE)  as count FROM t1 ORDER BY (+ (((t1.c4) NOT NULL))), CASE t1.c4  WHEN (t1.c4 IN ()) THEN ((t1.c39)AND(t1.c2)) WHEN ((((t1.c12)AND(t1.c2)))AND(t1.c4)) THEN x'' WHEN CAST(t1.c39 AS INTEGER) THEN x'1693' COLLATE NOCASE ELSE (NOT (t1.c2)) END  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((~ (t1.c2 COLLATE NOCASE))) ORDER BY (+ (((t1.c4) NOT NULL))), CASE t1.c4  WHEN (t1.c4 IN ()) THEN ((t1.c39)AND(t1.c2)) WHEN ((((t1.c12)AND(t1.c2)))AND(t1.c4)) THEN x'' WHEN CAST(t1.c39 AS INTEGER) THEN x'1693' COLLATE NOCASE ELSE (NOT (t1.c2)) END  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE WHEN ((((rt1.c4)AND(rt1.c6)))AND(rt1.c5)) THEN (+ (rt1.c4)) WHEN NULL THEN (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CASE 28073167  WHEN rt1.c6 THEN rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (rt1.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c4)AND(rt1.c6)))AND(rt1.c5)) THEN (+ (rt1.c4)) WHEN NULL THEN (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CASE 28073167  WHEN rt1.c6 THEN rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (rt1.c4 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN ((((rt1.c4)AND(rt1.c6)))AND(rt1.c5)) THEN (+ (rt1.c4)) WHEN NULL THEN (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CASE 28073167  WHEN rt1.c6 THEN rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (rt1.c4 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((((rt1.c4)AND(rt1.c6)))AND(rt1.c5)) THEN (+ (rt1.c4)) WHEN NULL THEN (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CASE 28073167  WHEN rt1.c6 THEN rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (rt1.c4 IN ()) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN ((((rt1.c4)AND(rt1.c6)))AND(rt1.c5)) THEN (+ (rt1.c4)) WHEN NULL THEN (((rt1.c6)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN CASE 28073167  WHEN rt1.c6 THEN rt1.c0 END THEN rt1.c4 COLLATE NOCASE ELSE (rt1.c4 IN ()) END);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (rt0.c1 IN (rt1.c4)) COLLATE NOCASE WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (rt0.c1 IN (rt1.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (rt0.c1 IN (rt1.c4)) COLLATE NOCASE WHERE ((rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c3 IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN rt0 ON (rt0.c1 IN (rt1.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN rt0 ON (rt0.c1 IN (rt1.c4)) COLLATE NOCASE WHERE ((rt0.c3 IN ()));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (RTRIM(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY (((CASE WHEN rt1.c5 THEN t1.c2 WHEN t1.c39 THEN rt1.c0 WHEN t1.c39 THEN rt1.c4 ELSE t1.c4 END))!=(((x'' IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (((CASE WHEN rt1.c5 THEN t1.c2 WHEN t1.c39 THEN rt1.c0 WHEN t1.c39 THEN rt1.c4 ELSE t1.c4 END))<>(((x'' IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (RTRIM(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY (((CASE WHEN rt1.c5 THEN t1.c2 WHEN t1.c39 THEN rt1.c0 WHEN t1.c39 THEN rt1.c4 ELSE t1.c4 END))!=(((x'' IN ()))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END)) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY (((CASE WHEN rt1.c5 THEN t1.c2 WHEN t1.c39 THEN rt1.c0 WHEN t1.c39 THEN rt1.c4 ELSE t1.c4 END))<>(((x'' IN ()))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (RTRIM(CASE rt1.c2  WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c0 ELSE rt1.c2 END)) ORDER BY (((CASE WHEN rt1.c5 THEN t1.c2 WHEN t1.c39 THEN rt1.c0 WHEN t1.c39 THEN rt1.c4 ELSE t1.c4 END))!=(((x'' IN ()))))  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c12, t1.c39)) AND ((t1.c4, t1.c2, rt0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c12, t1.c39)) AND ((t1.c4, t1.c2, rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c12, t1.c39)) AND ((t1.c4, t1.c2, rt0.c1)))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c12, t1.c39)) AND ((t1.c4, t1.c2, rt0.c1)))) IS TRUE)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c0, t1.c12, t1.c39)) AND ((t1.c4, t1.c2, rt0.c1)))) IS TRUE));
SELECT * FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)<=(rt1.c4)))AND(rt1.c5 COLLATE BINARY)) WHERE ((((CAST(rt1.c6 AS NUMERIC), ((rt1.c0) IS TRUE), CAST(rt1.c5 AS INTEGER)))<=((((rt1.c4) NOT NULL), ((rt1.c0) NOT NULL), ((t1.c12)||(rt1.c4)))))) ORDER BY (NOT (((rt1.c1)||(rt1.c5)))) ASC  NULLS FIRST, (((t1.c39 IN ()))|(HEX(t1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c6 AS NUMERIC), ((rt1.c0) IS TRUE), CAST(rt1.c5 AS INTEGER)))<=((((rt1.c4) NOT NULL), ((rt1.c0) NOT NULL), ((t1.c12)||(rt1.c4)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)<=(rt1.c4)))AND(rt1.c5 COLLATE BINARY)) ORDER BY (NOT (((rt1.c1)||(rt1.c5)))) ASC  NULLS FIRST, (((t1.c39 IN ()))|(HEX(t1.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)<=(rt1.c4)))AND(rt1.c5 COLLATE BINARY)) WHERE ((((CAST(rt1.c6 AS NUMERIC), ((rt1.c0) IS TRUE), CAST(rt1.c5 AS INTEGER)))<=((((rt1.c4) NOT NULL), ((rt1.c0) NOT NULL), ((t1.c12)||(rt1.c4)))))) ORDER BY (NOT (((rt1.c1)||(rt1.c5)))) ASC  NULLS FIRST, (((t1.c39 IN ()))|(HEX(t1.c2))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c6 AS NUMERIC), ((rt1.c0) IS TRUE), CAST(rt1.c5 AS INTEGER)))<=((((rt1.c4) NOT NULL), ((rt1.c0) NOT NULL), ((t1.c12)||(rt1.c4)))))) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)<=(rt1.c4)))AND(rt1.c5 COLLATE BINARY)) ORDER BY (NOT (((rt1.c1)||(rt1.c5)))) ASC  NULLS FIRST, (((t1.c39 IN ()))|(HEX(t1.c2))) ASC  NULLS FIRST);
SELECT * FROM rt1 CROSS JOIN t1 ON ((((rt1.c1)<=(rt1.c4)))AND(rt1.c5 COLLATE BINARY)) WHERE ((((CAST(rt1.c6 AS NUMERIC), ((rt1.c0) IS TRUE), CAST(rt1.c5 AS INTEGER)))<=((((rt1.c4) NOT NULL), ((rt1.c0) NOT NULL), ((t1.c12)||(rt1.c4)))))) ORDER BY (NOT (((rt1.c1)||(rt1.c5)))) ASC  NULLS FIRST, (((t1.c39 IN ()))|(HEX(t1.c2))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((('-868182321')IS(x'')));
SELECT SUM(count) FROM (SELECT ALL (((('-868182321')IS(x''))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((('-868182321')IS(x'')));
SELECT SUM(count) FROM (SELECT ALL (((('-868182321')IS(x''))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((('-868182321')IS(x'')));
SELECT COUNT(*) FROM rt1 WHERE (((CASE 0.8092287619656345  WHEN rt1.c0 THEN '\nAwEVe' ELSE rt1.c4 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.8092287619656345  WHEN rt1.c0 THEN '\nAwEVe' ELSE rt1.c4 END) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE 0.8092287619656345  WHEN rt1.c0 THEN '\nAwEVe' ELSE rt1.c4 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CASE 0.8092287619656345  WHEN rt1.c0 THEN '\nAwEVe' ELSE rt1.c4 END) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((CASE 0.8092287619656345  WHEN rt1.c0 THEN '\nAwEVe' ELSE rt1.c4 END) IS TRUE));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((rt1.c4 COLLATE BINARY IN (((((((((rt0.c4)AND(rt1.c1)))AND(t1.c4)))OR(rt0.c0)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((rt1.c4 COLLATE BINARY IN (((((((((rt0.c4)AND(rt1.c1)))AND(t1.c4)))OR(rt0.c0)))AND(rt1.c4))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((rt1.c4 COLLATE BINARY IN (((((((((rt0.c4)AND(rt1.c1)))AND(t1.c4)))OR(rt0.c0)))AND(rt1.c4)))));
SELECT SUM(count) FROM (SELECT (((rt1.c4 COLLATE BINARY IN (((((((((rt0.c4)AND(rt1.c1)))AND(t1.c4)))OR(rt0.c0)))AND(rt1.c4))))) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE ((rt1.c4 COLLATE BINARY IN (((((((((rt0.c4)AND(rt1.c1)))AND(t1.c4)))OR(rt0.c0)))AND(rt1.c4)))));
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (t1.c2) ORDER BY ((((((t1.c4)|(rt0.c4)))OR(((rt1.c2)-(rt1.c2)))))OR((~ (t1.c39)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((t1.c4)|(rt0.c4)))OR(((rt1.c2)-(rt1.c2)))))OR((~ (t1.c39)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (t1.c2) ORDER BY ((((((t1.c4)|(rt0.c4)))OR(((rt1.c2)-(rt1.c2)))))OR((~ (t1.c39)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t1.c2) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY ((((((t1.c4)|(rt0.c4)))OR(((rt1.c2)-(rt1.c2)))))OR((~ (t1.c39)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, t1, rt0 WHERE (t1.c2) ORDER BY ((((((t1.c4)|(rt0.c4)))OR(((rt1.c2)-(rt1.c2)))))OR((~ (t1.c39)))) DESC  NULLS LAST;
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(((rt0.c1) BETWEEN (t1.c2) AND (t1.c12))))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((0.6280270364570688)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(((rt0.c1) BETWEEN (t1.c2) AND (t1.c12))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((0.6280270364570688)))  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(((rt0.c1) BETWEEN (t1.c2) AND (t1.c12))))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((0.6280270364570688)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(((rt0.c1) BETWEEN (t1.c2) AND (t1.c12))))) IS TRUE)  as count FROM t1, rt0 ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((0.6280270364570688)))  NULLS LAST);
SELECT * FROM t1, rt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)+(((rt0.c1) BETWEEN (t1.c2) AND (t1.c12))))) ORDER BY (((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((0.6280270364570688)))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)>>(rt1.c1)))AND(json_object(rt1.c5, rt1.c6, rt1.c4, ''))))AND(0.718768829665042)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)>>(rt1.c1)))AND(json_object(rt1.c5, rt1.c6, rt1.c4, ''))))AND(0.718768829665042))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)>>(rt1.c1)))AND(json_object(rt1.c5, rt1.c6, rt1.c4, ''))))AND(0.718768829665042)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c3)>>(rt1.c1)))AND(json_object(rt1.c5, rt1.c6, rt1.c4, ''))))AND(0.718768829665042))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)>(rt0.c0)))IS('1362076176')) CROSS JOIN t1 ON (('-2142891811')<=(t1.c12)) COLLATE NOCASE WHERE (UNLIKELY(CAST(t1.c12 AS TEXT))) ORDER BY ((0.5568268752927447 COLLATE NOCASE) IS TRUE)  NULLS LAST, (rt0.c0 IN (TRIM(t1.c2, x''), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(t1.c12 AS TEXT))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)>(rt0.c0)))IS('1362076176')) CROSS JOIN t1 ON (('-2142891811')<=(t1.c12)) COLLATE NOCASE ORDER BY ((0.5568268752927447 COLLATE NOCASE) IS TRUE)  NULLS LAST, (rt0.c0 IN (TRIM(t1.c2, x''), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)>(rt0.c0)))IS('1362076176')) CROSS JOIN t1 ON (('-2142891811')<=(t1.c12)) COLLATE NOCASE WHERE (UNLIKELY(CAST(t1.c12 AS TEXT))) ORDER BY ((0.5568268752927447 COLLATE NOCASE) IS TRUE)  NULLS LAST, (rt0.c0 IN (TRIM(t1.c2, x''), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(CAST(t1.c12 AS TEXT))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)>(rt0.c0)))IS('1362076176')) CROSS JOIN t1 ON (('-2142891811')<=(t1.c12)) COLLATE NOCASE ORDER BY ((0.5568268752927447 COLLATE NOCASE) IS TRUE)  NULLS LAST, (rt0.c0 IN (TRIM(t1.c2, x''), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST);
SELECT * FROM rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c3)>(rt0.c0)))IS('1362076176')) CROSS JOIN t1 ON (('-2142891811')<=(t1.c12)) COLLATE NOCASE WHERE (UNLIKELY(CAST(t1.c12 AS TEXT))) ORDER BY ((0.5568268752927447 COLLATE NOCASE) IS TRUE)  NULLS LAST, (rt0.c0 IN (TRIM(t1.c2, x''), ((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c0)%(rt0.c2)))))AND('-2086341436'))) ORDER BY (((rt0.c4 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c0)%(rt0.c2)))))AND('-2086341436'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 IN ())) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c0)%(rt0.c2)))))AND('-2086341436'))) ORDER BY (((rt0.c4 IN ())) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c0)%(rt0.c2)))))AND('-2086341436'))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c4 IN ())) ISNULL)  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (((((CAST(rt0.c2 AS NUMERIC))AND(((rt0.c0)%(rt0.c2)))))AND('-2086341436'))) ORDER BY (((rt0.c4 IN ())) ISNULL)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY (((((rt1.c4)>>(rt1.c3)), ((rt1.c5)AND(rt1.c3)), ((((rt1.c4)AND(rt1.c2)))OR(rt1.c5))))<=((rt1.c6 COLLATE BINARY, ((rt1.c4) NOTNULL), (rt1.c0 IN (rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c4)>>(rt1.c3)), ((rt1.c5)AND(rt1.c3)), ((((rt1.c4)AND(rt1.c2)))OR(rt1.c5))))<=((rt1.c6 COLLATE BINARY, ((rt1.c4) NOTNULL), (rt1.c0 IN (rt1.c1))))) DESC);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY (((((rt1.c4)>>(rt1.c3)), ((rt1.c5)AND(rt1.c3)), ((((rt1.c4)AND(rt1.c2)))OR(rt1.c5))))<=((rt1.c6 COLLATE BINARY, ((rt1.c4) NOTNULL), (rt1.c0 IN (rt1.c1))))) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c4)>>(rt1.c3)), ((rt1.c5)AND(rt1.c3)), ((((rt1.c4)AND(rt1.c2)))OR(rt1.c5))))<=((rt1.c6 COLLATE BINARY, ((rt1.c4) NOTNULL), (rt1.c0 IN (rt1.c1))))) DESC);
SELECT ALL * FROM rt1 WHERE (x'') ORDER BY (((((rt1.c4)>>(rt1.c3)), ((rt1.c5)AND(rt1.c3)), ((((rt1.c4)AND(rt1.c2)))OR(rt1.c5))))<=((rt1.c6 COLLATE BINARY, ((rt1.c4) NOTNULL), (rt1.c0 IN (rt1.c1))))) DESC;
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((+ (rt1.c6)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c6))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((+ (rt1.c6)));
SELECT SUM(count) FROM (SELECT ALL (((+ (rt1.c6))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL COUNT(*) FROM t1, rt1 WHERE ((+ (rt1.c6)));
SELECT ALL * FROM t1 INDEXED BY i84, rt0, rt1 NOT INDEXED WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c3))  WHEN ((-43235461) NOTNULL) THEN ((rt1.c3)>>(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c3))  WHEN ((-43235461) NOTNULL) THEN ((rt1.c3)>>(rt0.c4)) END) IS TRUE)  as count FROM t1 INDEXED BY i84, rt0, rt1);
SELECT ALL * FROM t1 INDEXED BY i84, rt0, rt1 NOT INDEXED WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c3))  WHEN ((-43235461) NOTNULL) THEN ((rt1.c3)>>(rt0.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c3))  WHEN ((-43235461) NOTNULL) THEN ((rt1.c3)>>(rt0.c4)) END) IS TRUE)  as count FROM t1 INDEXED BY i84, rt0, rt1);
SELECT ALL * FROM t1 INDEXED BY i84, rt0, rt1 NOT INDEXED WHERE (CASE ((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c3))  WHEN ((-43235461) NOTNULL) THEN ((rt1.c3)>>(rt0.c4)) END);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((((t1.c39) NOTNULL)) BETWEEN (((x'')>>(rt1.c3))) AND (CAST(rt1.c6 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t1.c39) NOTNULL)) BETWEEN (((x'')>>(rt1.c3))) AND (CAST(rt1.c6 AS REAL)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((((t1.c39) NOTNULL)) BETWEEN (((x'')>>(rt1.c3))) AND (CAST(rt1.c6 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((t1.c39) NOTNULL)) BETWEEN (((x'')>>(rt1.c3))) AND (CAST(rt1.c6 AS REAL)))) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT ALL * FROM rt1, t1, rt0 WHERE (((((t1.c39) NOTNULL)) BETWEEN (((x'')>>(rt1.c3))) AND (CAST(rt1.c6 AS REAL))));
SELECT * FROM rt1 CROSS JOIN t1 ON TYPEOF(DISTINCT rt1.c2) COLLATE BINARY WHERE (CAST(((rt1.c1) NOT BETWEEN (0.765079771020475) AND (t1.c39)) AS NUMERIC)) ORDER BY (((rt1.c3) NOT BETWEEN (t1.c12) AND (rt1.c6)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (0.765079771020475) AND (t1.c39)) AS NUMERIC)) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON TYPEOF(DISTINCT rt1.c2) COLLATE BINARY ORDER BY (((rt1.c3) NOT BETWEEN (t1.c12) AND (rt1.c6)) IN ()) DESC);
SELECT * FROM rt1 CROSS JOIN t1 ON TYPEOF(DISTINCT rt1.c2) COLLATE BINARY WHERE (CAST(((rt1.c1) NOT BETWEEN (0.765079771020475) AND (t1.c39)) AS NUMERIC)) ORDER BY (((rt1.c3) NOT BETWEEN (t1.c12) AND (rt1.c6)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c1) NOT BETWEEN (0.765079771020475) AND (t1.c39)) AS NUMERIC)) IS TRUE)  as count FROM rt1 CROSS JOIN t1 ON TYPEOF(DISTINCT rt1.c2) COLLATE BINARY ORDER BY (((rt1.c3) NOT BETWEEN (t1.c12) AND (rt1.c6)) IN ()) DESC);
SELECT * FROM rt1 CROSS JOIN t1 ON TYPEOF(DISTINCT rt1.c2) COLLATE BINARY WHERE (CAST(((rt1.c1) NOT BETWEEN (0.765079771020475) AND (t1.c39)) AS NUMERIC)) ORDER BY (((rt1.c3) NOT BETWEEN (t1.c12) AND (rt1.c6)) IN ()) DESC;
SELECT * FROM rt1, t1, rt0 WHERE (rt0.c1) ORDER BY CAST(CAST('-1892527981' AS REAL) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY CAST(CAST('-1892527981' AS REAL) AS REAL) DESC  NULLS FIRST);
SELECT * FROM rt1, t1, rt0 WHERE (rt0.c1) ORDER BY CAST(CAST('-1892527981' AS REAL) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt1, t1, rt0 ORDER BY CAST(CAST('-1892527981' AS REAL) AS REAL) DESC  NULLS FIRST);
SELECT * FROM rt1, t1, rt0 WHERE (rt0.c1) ORDER BY CAST(CAST('-1892527981' AS REAL) AS REAL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (0X761f4f86) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0X761f4f86) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0X761f4f86) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0X761f4f86) IS TRUE)  as count FROM rt0 ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (0X761f4f86) ORDER BY CAST(rt0.c2 AS REAL) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c3) AND (0.1881376055618792)))>=((~ (t1.c39)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c3) AND (0.1881376055618792)))>=((~ (t1.c39))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c3) AND (0.1881376055618792)))>=((~ (t1.c39)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1) BETWEEN (rt1.c3) AND (0.1881376055618792)))>=((~ (t1.c39))))) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c3) AND (0.1881376055618792)))>=((~ (t1.c39)))));
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) AS BLOB) WHERE ((((~ (rt1.c0)))LIKE(((rt1.c2) BETWEEN (359302043) AND (rt0.c4))))) ORDER BY (((rt0.c4 IN ()))+((NOT (rt0.c4)))) ASC, CAST((rt1.c3 IN (rt1.c0, 7.82445225E8)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0)))LIKE(((rt1.c2) BETWEEN (359302043) AND (rt0.c4))))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) AS BLOB) ORDER BY (((rt0.c4 IN ()))+((NOT (rt0.c4)))) ASC, CAST((rt1.c3 IN (rt1.c0, 7.82445225E8)) AS TEXT));
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) AS BLOB) WHERE ((((~ (rt1.c0)))LIKE(((rt1.c2) BETWEEN (359302043) AND (rt0.c4))))) ORDER BY (((rt0.c4 IN ()))+((NOT (rt0.c4)))) ASC, CAST((rt1.c3 IN (rt1.c0, 7.82445225E8)) AS TEXT);
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0)))LIKE(((rt1.c2) BETWEEN (359302043) AND (rt0.c4))))) IS TRUE)  as count FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) AS BLOB) ORDER BY (((rt0.c4 IN ()))+((NOT (rt0.c4)))) ASC, CAST((rt1.c3 IN (rt1.c0, 7.82445225E8)) AS TEXT));
SELECT COUNT(*) FROM t1, rt0 RIGHT OUTER JOIN rt1 ON CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c3)) AS BLOB) WHERE ((((~ (rt1.c0)))LIKE(((rt1.c2) BETWEEN (359302043) AND (rt0.c4))))) ORDER BY (((rt0.c4 IN ()))+((NOT (rt0.c4)))) ASC, CAST((rt1.c3 IN (rt1.c0, 7.82445225E8)) AS TEXT);
SELECT * FROM rt0, rt1, t1 WHERE ((((t1.c39, '', CAST(rt1.c0 AS REAL)))>((CAST(rt1.c0 AS REAL), rt0.c0, ((rt1.c0) BETWEEN (t1.c2) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c39, '', CAST(rt1.c0 AS REAL)))>((CAST(rt1.c0 AS REAL), rt0.c0, ((rt1.c0) BETWEEN (t1.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((((t1.c39, '', CAST(rt1.c0 AS REAL)))>((CAST(rt1.c0 AS REAL), rt0.c0, ((rt1.c0) BETWEEN (t1.c2) AND (rt0.c4))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c39, '', CAST(rt1.c0 AS REAL)))>((CAST(rt1.c0 AS REAL), rt0.c0, ((rt1.c0) BETWEEN (t1.c2) AND (rt0.c4)))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT * FROM rt0, rt1, t1 WHERE ((((t1.c39, '', CAST(rt1.c0 AS REAL)))>((CAST(rt1.c0 AS REAL), rt0.c0, ((rt1.c0) BETWEEN (t1.c2) AND (rt0.c4))))));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (x''))) ORDER BY ((((rt0.c4) NOT BETWEEN (2.29067522E8) AND (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c4) NOT BETWEEN (2.29067522E8) AND (rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (x''))) ORDER BY ((((rt0.c4) NOT BETWEEN (2.29067522E8) AND (rt0.c0))) NOTNULL);
SELECT SUM(count) FROM (SELECT ALL (((- (x''))) IS TRUE)  as count FROM rt0, rt1 ORDER BY ((((rt0.c4) NOT BETWEEN (2.29067522E8) AND (rt0.c0))) NOTNULL));
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ((- (x''))) ORDER BY ((((rt0.c4) NOT BETWEEN (2.29067522E8) AND (rt0.c0))) NOTNULL);
SELECT ALL * FROM t1, rt1 WHERE ((((rt1.c2))<>((NULL))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt1.c2))<>((NULL))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE ((((rt1.c2))<>((NULL))) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((rt1.c2))<>((NULL))) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM t1, rt1);
SELECT ALL * FROM t1, rt1 WHERE ((((rt1.c2))<>((NULL))) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((- (rt0.c2))) ISNULL)) ORDER BY ((((rt1.c5) BETWEEN (rt1.c2) AND (rt0.c4))) NOT BETWEEN (((t1.c39) NOTNULL)) AND ((- (t1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((rt1.c5) BETWEEN (rt1.c2) AND (rt0.c4))) NOT BETWEEN (((t1.c39) NOTNULL)) AND ((- (t1.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((- (rt0.c2))) ISNULL)) ORDER BY ((((rt1.c5) BETWEEN (rt1.c2) AND (rt0.c4))) NOT BETWEEN (((t1.c39) NOTNULL)) AND ((- (t1.c4)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, t1, rt1 ORDER BY ((((rt1.c5) BETWEEN (rt1.c2) AND (rt0.c4))) NOT BETWEEN (((t1.c39) NOTNULL)) AND ((- (t1.c4)))) ASC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, rt1 WHERE ((((- (rt0.c2))) ISNULL)) ORDER BY ((((rt1.c5) BETWEEN (rt1.c2) AND (rt0.c4))) NOT BETWEEN (((t1.c39) NOTNULL)) AND ((- (t1.c4)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c12)AND(t1.c2)))OR(t1.c4)))AND(t1.c39)))OR(t1.c2)) IN ())) ORDER BY t1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((t1.c12)AND(t1.c2)))OR(t1.c4)))AND(t1.c39)))OR(t1.c2)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c4 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c12)AND(t1.c2)))OR(t1.c4)))AND(t1.c39)))OR(t1.c2)) IN ())) ORDER BY t1.c4 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((t1.c12)AND(t1.c2)))OR(t1.c4)))AND(t1.c39)))OR(t1.c2)) IN ())) IS TRUE)  as count FROM t1 ORDER BY t1.c4 DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((((((((t1.c12)AND(t1.c2)))OR(t1.c4)))AND(t1.c39)))OR(t1.c2)) IN ())) ORDER BY t1.c4 DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c5)/(rt1.c1)) WHEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 END THEN (rt1.c5 IN ()) WHEN rt1.c3 COLLATE NOCASE THEN (NOT (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c5)/(rt1.c1)) WHEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 END THEN (rt1.c5 IN ()) WHEN rt1.c3 COLLATE NOCASE THEN (NOT (rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c5)/(rt1.c1)) WHEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 END THEN (rt1.c5 IN ()) WHEN rt1.c3 COLLATE NOCASE THEN (NOT (rt1.c4)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c5)/(rt1.c1)) WHEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 END THEN (rt1.c5 IN ()) WHEN rt1.c3 COLLATE NOCASE THEN (NOT (rt1.c4)) END) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c5)/(rt1.c1)) WHEN CASE rt1.c6  WHEN rt1.c4 THEN rt1.c6 END THEN (rt1.c5 IN ()) WHEN rt1.c3 COLLATE NOCASE THEN (NOT (rt1.c4)) END);
SELECT ALL * FROM rt1 WHERE ((((((+ (rt1.c5)))OR((- (rt1.c0)))))OR(rt1.c1))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt1.c5)))OR((- (rt1.c0)))))OR(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((+ (rt1.c5)))OR((- (rt1.c0)))))OR(rt1.c1))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (rt1.c5)))OR((- (rt1.c0)))))OR(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY rt1.c0 DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE ((((((+ (rt1.c5)))OR((- (rt1.c0)))))OR(rt1.c1))) ORDER BY rt1.c0 DESC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ('500020431') ORDER BY ('1186704895' IN (TOTAL_CHANGES())) ASC;
SELECT SUM(count) FROM (SELECT ALL (('500020431') IS TRUE)  as count FROM rt0 ORDER BY ('1186704895' IN (TOTAL_CHANGES())) ASC);
SELECT ALL * FROM rt0 WHERE ('500020431') ORDER BY ('1186704895' IN (TOTAL_CHANGES())) ASC;
SELECT SUM(count) FROM (SELECT ALL (('500020431') IS TRUE)  as count FROM rt0 ORDER BY ('1186704895' IN (TOTAL_CHANGES())) ASC);
SELECT ALL * FROM rt0 WHERE ('500020431') ORDER BY ('1186704895' IN (TOTAL_CHANGES())) ASC;
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))LIKE('['))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))LIKE('['))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))LIKE('['))) ORDER BY rt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))LIKE('['))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))LIKE('['))) ORDER BY rt0.c0  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)) IN ()));
SELECT * FROM rt1, t1, rt0 WHERE (((rt1.c2)/(rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)/(rt1.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (((rt1.c2)/(rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2)/(rt1.c2)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1, t1, rt0);
SELECT * FROM rt1, t1, rt0 WHERE (((rt1.c2)/(rt1.c2)) COLLATE RTRIM COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c6)AND(rt1.c0)))AND('-58315935'))) NOT BETWEEN (UPPER(rt1.c3)) AND (rt1.c1 COLLATE RTRIM))) ORDER BY (~ (CAST(rt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c6)AND(rt1.c0)))AND('-58315935'))) NOT BETWEEN (UPPER(rt1.c3)) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (CAST(rt1.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c6)AND(rt1.c0)))AND('-58315935'))) NOT BETWEEN (UPPER(rt1.c3)) AND (rt1.c1 COLLATE RTRIM))) ORDER BY (~ (CAST(rt1.c2 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c6)AND(rt1.c0)))AND('-58315935'))) NOT BETWEEN (UPPER(rt1.c3)) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, rt0 ORDER BY (~ (CAST(rt1.c2 AS REAL))));
SELECT ALL COUNT(*) FROM rt1, rt0 WHERE (((((((rt1.c6)AND(rt1.c0)))AND('-58315935'))) NOT BETWEEN (UPPER(rt1.c3)) AND (rt1.c1 COLLATE RTRIM))) ORDER BY (~ (CAST(rt1.c2 AS REAL)));
SELECT * FROM t1 WHERE (((((t1.c2) IS TRUE))<(CAST(t1.c39 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) IS TRUE))<(CAST(t1.c39 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c2) IS TRUE))<(CAST(t1.c39 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2) IS TRUE))<(CAST(t1.c39 AS TEXT)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((((t1.c2) IS TRUE))<(CAST(t1.c39 AS TEXT))));
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3))) BETWEEN ((rt0.c0 IN ('K*Z셳', rt0.c2))) AND (rt0.c3))) ORDER BY (('-661088511') BETWEEN (CAST(rt0.c1 AS REAL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, RTRIM((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3))) BETWEEN ((rt0.c0 IN ('K*Z셳', rt0.c2))) AND (rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY (('-661088511') BETWEEN (CAST(rt0.c1 AS REAL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, RTRIM((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3))) BETWEEN ((rt0.c0 IN ('K*Z셳', rt0.c2))) AND (rt0.c3))) ORDER BY (('-661088511') BETWEEN (CAST(rt0.c1 AS REAL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, RTRIM((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3))) BETWEEN ((rt0.c0 IN ('K*Z셳', rt0.c2))) AND (rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY (('-661088511') BETWEEN (CAST(rt0.c1 AS REAL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, RTRIM((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))) ASC  NULLS LAST);
SELECT * FROM rt0 WHERE (((((((rt0.c3)OR(rt0.c4)))AND(rt0.c3))) BETWEEN ((rt0.c0 IN ('K*Z셳', rt0.c2))) AND (rt0.c3))) ORDER BY (('-661088511') BETWEEN (CAST(rt0.c1 AS REAL)) AND ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))  NULLS FIRST, RTRIM((((rt0.c4, rt0.c2, rt0.c1))!=((rt0.c1, rt0.c2, rt0.c3)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((((0.04082696529817109))<>((rt0.c1))))OR(rt1.c5 COLLATE RTRIM)))OR(((((rt0.c2)AND(0x6d12f895)))OR(t1.c12)))));
SELECT SUM(count) FROM (SELECT (((((((((0.04082696529817109))<>((rt0.c1))))OR(rt1.c5 COLLATE RTRIM)))OR(((((rt0.c2)AND(0X6d12f895)))OR(t1.c12))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((((0.04082696529817109))<>((rt0.c1))))OR(rt1.c5 COLLATE RTRIM)))OR(((((rt0.c2)AND(0x6d12f895)))OR(t1.c12)))));
SELECT SUM(count) FROM (SELECT (((((((((0.04082696529817109))<>((rt0.c1))))OR(rt1.c5 COLLATE RTRIM)))OR(((((rt0.c2)AND(0X6d12f895)))OR(t1.c12))))) IS TRUE)  as count FROM rt0, rt1, t1);
SELECT ALL * FROM rt0, rt1, t1 WHERE ((((((((0.04082696529817109))<>((rt0.c1))))OR(rt1.c5 COLLATE RTRIM)))OR(((((rt0.c2)AND(0x6d12f895)))OR(t1.c12)))));
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND (((rt1.c0)>(rt1.c1))))) ORDER BY CAST((rt1.c5 IN (rt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND (((rt1.c0)>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c5 IN (rt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND (((rt1.c0)>(rt1.c1))))) ORDER BY CAST((rt1.c5 IN (rt1.c0)) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND (((rt1.c0)>(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY CAST((rt1.c5 IN (rt1.c0)) AS REAL)  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (((rt1.c0 COLLATE RTRIM) BETWEEN (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c3))) AND (((rt1.c0)>(rt1.c1))))) ORDER BY CAST((rt1.c5 IN (rt1.c0)) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON NULL WHERE ('1915777912') ORDER BY rtreenode(rt1.c4, rt1.c2 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1915777912') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON NULL ORDER BY rtreenode(rt1.c4, rt1.c2 COLLATE RTRIM) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON NULL WHERE ('1915777912') ORDER BY rtreenode(rt1.c4, rt1.c2 COLLATE RTRIM) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1915777912') IS TRUE)  as count FROM rt1 FULL OUTER JOIN rt0 ON NULL ORDER BY rtreenode(rt1.c4, rt1.c2 COLLATE RTRIM) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN rt0 ON NULL WHERE ('1915777912') ORDER BY rtreenode(rt1.c4, rt1.c2 COLLATE RTRIM) ASC  NULLS LAST;
SELECT * FROM t1, rt1 WHERE (LIKELIHOOD((((('-273175477')OR(rt1.c5)))AND(0.541115956036616)), 0.3332789189526041));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((('-273175477')OR(rt1.c5)))AND(0.541115956036616)), 0.3332789189526041)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (LIKELIHOOD((((('-273175477')OR(rt1.c5)))AND(0.541115956036616)), 0.3332789189526041));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD((((('-273175477')OR(rt1.c5)))AND(0.541115956036616)), 0.3332789189526041)) IS TRUE)  as count FROM t1, rt1);
SELECT * FROM t1, rt1 WHERE (LIKELIHOOD((((('-273175477')OR(rt1.c5)))AND(0.541115956036616)), 0.3332789189526041));
SELECT * FROM rt0, rt1, t1 WHERE (0.1950533091425093 COLLATE RTRIM) ORDER BY ((((((rt1.c4)AND(rt0.c2)))OR(t1.c39)))||('A{')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1950533091425093 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((rt1.c4)AND(rt0.c2)))OR(t1.c39)))||('A{')) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1, t1 WHERE (0.1950533091425093 COLLATE RTRIM) ORDER BY ((((((rt1.c4)AND(rt0.c2)))OR(t1.c39)))||('A{')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.1950533091425093 COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1, t1 ORDER BY ((((((rt1.c4)AND(rt0.c2)))OR(t1.c39)))||('A{')) ASC  NULLS FIRST);
SELECT * FROM rt0, rt1, t1 WHERE (0.1950533091425093 COLLATE RTRIM) ORDER BY ((((((rt1.c4)AND(rt0.c2)))OR(t1.c39)))||('A{')) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c2)) AS BLOB)) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c2)) AS BLOB));
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((NULL)AND(rt0.c4 COLLATE RTRIM)) WHERE (TOTAL_CHANGES()) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((NULL)AND(rt0.c4 COLLATE RTRIM)) ORDER BY CHANGES() DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((NULL)AND(rt0.c4 COLLATE RTRIM)) WHERE (TOTAL_CHANGES()) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((TOTAL_CHANGES()) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((NULL)AND(rt0.c4 COLLATE RTRIM)) ORDER BY CHANGES() DESC  NULLS FIRST);
SELECT ALL * FROM rt0 CROSS JOIN rt1 ON ((NULL)AND(rt0.c4 COLLATE RTRIM)) WHERE (TOTAL_CHANGES()) ORDER BY CHANGES() DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1 WHERE (LIKE((NOT (t1.c4)), (NOT (t1.c39))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((NOT (t1.c4)), (NOT (t1.c39)))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (LIKE((NOT (t1.c4)), (NOT (t1.c39))));
SELECT SUM(count) FROM (SELECT ALL ((LIKE((NOT (t1.c4)), (NOT (t1.c39)))) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (LIKE((NOT (t1.c4)), (NOT (t1.c39))));
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CAST(rt1.c5 AS TEXT)) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(t1.c39)))OR(rt1.c0)))AND(x''))) AND (CAST(rt1.c3 AS NUMERIC)))) ORDER BY (((rt0.c1))<>((CAST(rt1.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS TEXT)) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(t1.c39)))OR(rt1.c0)))AND(x''))) AND (CAST(rt1.c3 AS NUMERIC)))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((rt0.c1))!=((CAST(rt1.c0 AS NUMERIC)))) ASC);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CAST(rt1.c5 AS TEXT)) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(t1.c39)))OR(rt1.c0)))AND(x''))) AND (CAST(rt1.c3 AS NUMERIC)))) ORDER BY (((rt0.c1))<>((CAST(rt1.c0 AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c5 AS TEXT)) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(t1.c39)))OR(rt1.c0)))AND(x''))) AND (CAST(rt1.c3 AS NUMERIC)))) IS TRUE)  as count FROM t1, rt0, rt1 ORDER BY (((rt0.c1))!=((CAST(rt1.c0 AS NUMERIC)))) ASC);
SELECT ALL * FROM t1, rt0, rt1 WHERE (((CAST(rt1.c5 AS TEXT)) BETWEEN (((((((((rt1.c1)AND(rt1.c1)))OR(t1.c39)))OR(rt1.c0)))AND(x''))) AND (CAST(rt1.c3 AS NUMERIC)))) ORDER BY (((rt0.c1))<>((CAST(rt1.c0 AS NUMERIC)))) ASC;
SELECT * FROM t1, rt0 WHERE ((~ (CASE t1.c12  WHEN t1.c12 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t1.c12  WHEN t1.c12 THEN rt0.c4 END))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((~ (CASE t1.c12  WHEN t1.c12 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT (((~ (CASE t1.c12  WHEN t1.c12 THEN rt0.c4 END))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((~ (CASE t1.c12  WHEN t1.c12 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)<(0.3680987939181599)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(0.3680987939181599)))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)<(0.3680987939181599)))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)<(0.3680987939181599)))OR(x''))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c3)<(0.3680987939181599)))OR(x'')));
SELECT ALL * FROM rt0, t1 WHERE (TRIM(LIKELY(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(LIKELY(rt0.c0))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (TRIM(LIKELY(rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(LIKELY(rt0.c0))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL * FROM rt0, t1 WHERE (TRIM(LIKELY(rt0.c0)));
SELECT * FROM rt0, t1 WHERE (t1.c39) ORDER BY UNLIKELY('p,d')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c39) IS TRUE)  as count FROM rt0, t1 ORDER BY UNLIKELY('p,d')  NULLS LAST);
SELECT * FROM rt0, t1 WHERE (t1.c39) ORDER BY UNLIKELY('p,d')  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c39) IS TRUE)  as count FROM rt0, t1 ORDER BY UNLIKELY('p,d')  NULLS LAST);
SELECT * FROM rt0, t1 WHERE (t1.c39) ORDER BY UNLIKELY('p,d')  NULLS LAST;
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)-(rt0.c1))) AND ((~ (2.29067522E8))))) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3)>(rt0.c3)) END DESC  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(-1.859695586E9 AS REAL) THEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)-(NULL)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) ELSE x'044f' COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)-(rt0.c1))) AND ((~ (2.29067522E8))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3)>(rt0.c3)) END DESC  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(-1.859695586E9 AS REAL) THEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)-(NULL)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) ELSE x'044f' COLLATE RTRIM END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)-(rt0.c1))) AND ((~ (2.29067522E8))))) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3)>(rt0.c3)) END DESC  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(-1.859695586E9 AS REAL) THEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)-(NULL)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) ELSE x'044f' COLLATE RTRIM END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)-(rt0.c1))) AND ((~ (2.29067522E8))))) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3)>(rt0.c3)) END DESC  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(-1.859695586E9 AS REAL) THEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)-(NULL)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) ELSE x'044f' COLLATE RTRIM END  NULLS LAST);
SELECT * FROM rt0 WHERE (((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) BETWEEN (((rt0.c1)-(rt0.c1))) AND ((~ (2.29067522E8))))) ORDER BY CASE WHEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) THEN ((rt0.c3)>(rt0.c3)) END DESC  NULLS LAST, CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN (rt0.c3 IN (rt0.c2)) WHEN CAST(-1.859695586E9 AS REAL) THEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) WHEN ((rt0.c0)-(NULL)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)) ELSE x'044f' COLLATE RTRIM END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((((((rt1.c4) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND((((rt1.c3))>((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))AND(((rt1.c4)/(rt1.c1)))) WHERE (rt0.c0) ORDER BY (((x'08af'))>(((((rt0.c4))>((1143870641))))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((((((((rt1.c4) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND((((rt1.c3))>((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))AND(((rt1.c4)/(rt1.c1)))) ORDER BY (((x'08af'))>(((((rt0.c4))>((1143870641)))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((((((rt1.c4) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND((((rt1.c3))>((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))AND(((rt1.c4)/(rt1.c1)))) WHERE (rt0.c0) ORDER BY (((x'08af'))>(((((rt0.c4))>((1143870641))))));
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 CROSS JOIN rt1 ON ((((((((((rt1.c4) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND((((rt1.c3))>((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))AND(((rt1.c4)/(rt1.c1)))) ORDER BY (((x'08af'))>(((((rt0.c4))>((1143870641)))))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN rt1 ON ((((((((((rt1.c4) NOT NULL))OR(CAST(rt0.c0 AS INTEGER))))AND((((rt1.c3))>((rt0.c2))))))AND(rt0.c0 COLLATE BINARY)))AND(((rt1.c4)/(rt1.c1)))) WHERE (rt0.c0) ORDER BY (((x'08af'))>(((((rt0.c4))>((1143870641))))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c39)))==(((t1.c4) BETWEEN (0.21676619520402218) AND (t1.c39))))) ORDER BY (((- (t1.c2)))IS(((t1.c4) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c39)))=(((t1.c4) BETWEEN (0.21676619520402218) AND (t1.c39))))) IS TRUE)  as count FROM t1 ORDER BY (((- (t1.c2)))IS(((t1.c4) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c39)))==(((t1.c4) BETWEEN (0.21676619520402218) AND (t1.c39))))) ORDER BY (((- (t1.c2)))IS(((t1.c4) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (t1.c39)))=(((t1.c4) BETWEEN (0.21676619520402218) AND (t1.c39))))) IS TRUE)  as count FROM t1 ORDER BY (((- (t1.c2)))IS(((t1.c4) ISNULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE ((((- (t1.c39)))==(((t1.c4) BETWEEN (0.21676619520402218) AND (t1.c39))))) ORDER BY (((- (t1.c2)))IS(((t1.c4) ISNULL)))  NULLS LAST;
SELECT * FROM rt1, rt0, t1 WHERE (CAST(t1.c39 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c39 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CAST(t1.c39 AS TEXT) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c39 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM rt1, rt0, t1);
SELECT * FROM rt1, rt0, t1 WHERE (CAST(t1.c39 AS TEXT) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c4 AS BLOB))!=(x'2db0')));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c4 AS BLOB))!=(x'2db0'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c4 AS BLOB))!=(x'2db0')));
SELECT SUM(count) FROM (SELECT ((((CAST(t1.c4 AS BLOB))!=(x'2db0'))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((CAST(t1.c4 AS BLOB))!=(x'2db0')));
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt1.c6)GLOB(t1.c39))))>=((-1791988648))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c6)GLOB(t1.c39))))>=((-1791988648)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt1.c6)GLOB(t1.c39))))>=((-1791988648))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c6)GLOB(t1.c39))))>=((-1791988648)))) IS TRUE)  as count FROM t1, rt0, rt1);
SELECT ALL COUNT(*) FROM t1, rt0, rt1 WHERE ((((((rt1.c6)GLOB(t1.c39))))>=((-1791988648))));
SELECT * FROM rt1, t1 NATURAL JOIN rt0 WHERE (((rt1.c3) NOT BETWEEN ('') AND (rt1.c1)) COLLATE BINARY) ORDER BY ((rt1.c4)OR((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN ('') AND (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1 NATURAL JOIN rt0 ORDER BY ((rt1.c4)OR((- (rt0.c4)))));
SELECT * FROM rt1, t1 NATURAL JOIN rt0 WHERE (((rt1.c3) NOT BETWEEN ('') AND (rt1.c1)) COLLATE BINARY) ORDER BY ((rt1.c4)OR((- (rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3) NOT BETWEEN ('') AND (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1, t1 NATURAL JOIN rt0 ORDER BY ((rt1.c4)OR((- (rt0.c4)))));
SELECT * FROM rt1, t1 NATURAL JOIN rt0 WHERE (((rt1.c3) NOT BETWEEN ('') AND (rt1.c1)) COLLATE BINARY) ORDER BY ((rt1.c4)OR((- (rt0.c4))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt1.c5, rt1.c3) THEN CAST(rt1.c4 AS REAL) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c0)) END INNER JOIN t1 ON CAST(CAST(t1.c2 AS REAL) AS REAL) WHERE (((2111533600) NOT BETWEEN (rt0.c2) AND (((t1.c2)>(t1.c4))))) ORDER BY json_array_length(rt1.c1) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((2111533600) NOT BETWEEN (rt0.c2) AND (((t1.c2)>(t1.c4))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt1.c5, rt1.c3) THEN CAST(rt1.c4 AS REAL) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c0)) END INNER JOIN t1 ON CAST(CAST(t1.c2 AS REAL) AS REAL) ORDER BY json_array_length(rt1.c1) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt1.c5, rt1.c3) THEN CAST(rt1.c4 AS REAL) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c0)) END INNER JOIN t1 ON CAST(CAST(t1.c2 AS REAL) AS REAL) WHERE (((2111533600) NOT BETWEEN (rt0.c2) AND (((t1.c2)>(t1.c4))))) ORDER BY json_array_length(rt1.c1) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((2111533600) NOT BETWEEN (rt0.c2) AND (((t1.c2)>(t1.c4))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt1.c5, rt1.c3) THEN CAST(rt1.c4 AS REAL) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c0)) END INNER JOIN t1 ON CAST(CAST(t1.c2 AS REAL) AS REAL) ORDER BY json_array_length(rt1.c1) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN rt0 ON CASE WHEN COALESCE(DISTINCT rt1.c5, rt1.c3) THEN CAST(rt1.c4 AS REAL) ELSE ((rt0.c3) BETWEEN (rt0.c2) AND (rt1.c0)) END INNER JOIN t1 ON CAST(CAST(t1.c2 AS REAL) AS REAL) WHERE (((2111533600) NOT BETWEEN (rt0.c2) AND (((t1.c2)>(t1.c4))))) ORDER BY json_array_length(rt1.c1) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((((rt1.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE (((((rt1.c4)AND(rt0.c4)))AND(rt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c4) IS FALSE)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY NULL);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c4) IS FALSE)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c4) IS FALSE)))) IS TRUE)  as count FROM rt1 ORDER BY NULL);
SELECT COUNT(*) FROM rt1 WHERE ((NOT (((rt1.c4) IS FALSE)))) ORDER BY NULL;
SELECT * FROM rt1 WHERE (rt1.c5) ORDER BY ((CAST(rt1.c0 AS INTEGER))&(TRIM(rt1.c5)))  NULLS FIRST, (((rt1.c3 COLLATE RTRIM))>((rt1.c3 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER))&(TRIM(rt1.c5)))  NULLS FIRST, (((rt1.c3 COLLATE RTRIM))>((rt1.c3 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (rt1.c5) ORDER BY ((CAST(rt1.c0 AS INTEGER))&(TRIM(rt1.c5)))  NULLS FIRST, (((rt1.c3 COLLATE RTRIM))>((rt1.c3 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt1.c5) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS INTEGER))&(TRIM(rt1.c5)))  NULLS FIRST, (((rt1.c3 COLLATE RTRIM))>((rt1.c3 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT * FROM rt1 WHERE (rt1.c5) ORDER BY ((CAST(rt1.c0 AS INTEGER))&(TRIM(rt1.c5)))  NULLS FIRST, (((rt1.c3 COLLATE RTRIM))>((rt1.c3 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON 0.9913094617485504 WHERE (((CASE WHEN t1.c39 THEN t1.c12 ELSE rt1.c3 END)>>(CASE rt1.c6  WHEN rt1.c4 THEN t1.c2 WHEN '-2004109987' THEN rt1.c3 WHEN x'' THEN t1.c2 WHEN '-604075989' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c3 ELSE t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c39 THEN t1.c12 ELSE rt1.c3 END)>>(CASE rt1.c6  WHEN rt1.c4 THEN t1.c2 WHEN '-2004109987' THEN rt1.c3 WHEN x'' THEN t1.c2 WHEN '-604075989' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c3 ELSE t1.c2 END))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON 0.9913094617485504);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON 0.9913094617485504 WHERE (((CASE WHEN t1.c39 THEN t1.c12 ELSE rt1.c3 END)>>(CASE rt1.c6  WHEN rt1.c4 THEN t1.c2 WHEN '-2004109987' THEN rt1.c3 WHEN x'' THEN t1.c2 WHEN '-604075989' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c3 ELSE t1.c2 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c39 THEN t1.c12 ELSE rt1.c3 END)>>(CASE rt1.c6  WHEN rt1.c4 THEN t1.c2 WHEN '-2004109987' THEN rt1.c3 WHEN x'' THEN t1.c2 WHEN '-604075989' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c3 ELSE t1.c2 END))) IS TRUE)  as count FROM rt1, rt0 RIGHT OUTER JOIN t1 ON 0.9913094617485504);
SELECT * FROM rt1, rt0 RIGHT OUTER JOIN t1 ON 0.9913094617485504 WHERE (((CASE WHEN t1.c39 THEN t1.c12 ELSE rt1.c3 END)>>(CASE rt1.c6  WHEN rt1.c4 THEN t1.c2 WHEN '-2004109987' THEN rt1.c3 WHEN x'' THEN t1.c2 WHEN '-604075989' THEN rt1.c2 WHEN rt1.c0 THEN rt0.c3 ELSE t1.c2 END)));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c2 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t1, rt1, rt0);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CAST(rt0.c2 AS INTEGER) COLLATE BINARY);
SELECT * FROM rt1, t1 WHERE ((((rt1.c1)) BETWEEN ((HEX(rt1.c4))) AND ((x''))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((HEX(rt1.c4))) AND ((x'')))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((((rt1.c1)) BETWEEN ((HEX(rt1.c4))) AND ((x''))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((HEX(rt1.c4))) AND ((x'')))) IS TRUE)  as count FROM rt1, t1);
SELECT * FROM rt1, t1 WHERE ((((rt1.c1)) BETWEEN ((HEX(rt1.c4))) AND ((x''))));
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CASE ((rt0.c4) BETWEEN (t1.c4) AND (t1.c12))  WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (NULL)) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((t1.c12)+(rt0.c0)) END) ORDER BY ((((rt1.c1)&(t1.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((NULL) NOT BETWEEN (x'') AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (t1.c4) AND (t1.c12))  WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (NULL)) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((t1.c12)+(rt0.c0)) END) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt1.c1)&(t1.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((NULL) NOT BETWEEN (x'') AND (rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CASE ((rt0.c4) BETWEEN (t1.c4) AND (t1.c12))  WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (NULL)) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((t1.c12)+(rt0.c0)) END) ORDER BY ((((rt1.c1)&(t1.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((NULL) NOT BETWEEN (x'') AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c4) BETWEEN (t1.c4) AND (t1.c12))  WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (NULL)) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((t1.c12)+(rt0.c0)) END) IS TRUE)  as count FROM t1, rt1, rt0 ORDER BY ((((rt1.c1)&(t1.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((NULL) NOT BETWEEN (x'') AND (rt0.c4))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt1, rt0 WHERE (CASE ((rt0.c4) BETWEEN (t1.c4) AND (t1.c12))  WHEN ((rt0.c0) NOT BETWEEN (rt1.c4) AND (NULL)) THEN ((rt1.c4)IS(rt1.c2)) ELSE ((t1.c12)+(rt0.c0)) END) ORDER BY ((((rt1.c1)&(t1.c2))) NOT BETWEEN ((rt1.c1 IN ())) AND (((NULL) NOT BETWEEN (x'') AND (rt0.c4))))  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL) ORDER BY CAST(((t1.c2)|(t1.c2)) AS TEXT) DESC, ((((rt0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(((t1.c2)|(t1.c2)) AS TEXT) DESC, ((((rt0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL) ORDER BY CAST(((t1.c2)|(t1.c2)) AS TEXT) DESC, ((((rt0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t1, rt0 ORDER BY CAST(((t1.c2)|(t1.c2)) AS TEXT) DESC, ((((rt0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE (NULL) ORDER BY CAST(((t1.c2)|(t1.c2)) AS TEXT) DESC, ((((rt0.c0) IS FALSE)) NOT NULL) DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS INTEGER));
SELECT * FROM rt0 CROSS JOIN t1 ON UNLIKELY(((((rt0.c1)AND(t1.c12)))OR(t1.c39))) WHERE (ABS(((t1.c12)GLOB(t1.c2)))) ORDER BY (((0Xffffffffe875d8ab)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t1.c12)GLOB(t1.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON UNLIKELY(((((rt0.c1)AND(t1.c12)))OR(t1.c39))) ORDER BY (((0xffffffffe875d8ab)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE  NULLS FIRST, x'' ASC);
SELECT * FROM rt0 CROSS JOIN t1 ON UNLIKELY(((((rt0.c1)AND(t1.c12)))OR(t1.c39))) WHERE (ABS(((t1.c12)GLOB(t1.c2)))) ORDER BY (((0Xffffffffe875d8ab)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE  NULLS FIRST, x'' ASC;
SELECT SUM(count) FROM (SELECT ALL ((ABS(((t1.c12)GLOB(t1.c2)))) IS TRUE)  as count FROM rt0 CROSS JOIN t1 ON UNLIKELY(((((rt0.c1)AND(t1.c12)))OR(t1.c39))) ORDER BY (((0xffffffffe875d8ab)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE  NULLS FIRST, x'' ASC);
SELECT * FROM rt0 CROSS JOIN t1 ON UNLIKELY(((((rt0.c1)AND(t1.c12)))OR(t1.c39))) WHERE (ABS(((t1.c12)GLOB(t1.c2)))) ORDER BY (((0Xffffffffe875d8ab)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE NOCASE  NULLS FIRST, x'' ASC;
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (CASE WHEN t1.c39 THEN t1.c2 ELSE t1.c2 END IN ((- (t1.c4)), t1.c39)) WHERE (t1.c4);
SELECT SUM(count) FROM (SELECT ((t1.c4) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (CASE WHEN t1.c39 THEN t1.c2 ELSE t1.c2 END IN ((- (t1.c4)), t1.c39)));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (CASE WHEN t1.c39 THEN t1.c2 ELSE t1.c2 END IN ((- (t1.c4)), t1.c39)) WHERE (t1.c4);
SELECT SUM(count) FROM (SELECT ((t1.c4) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON (CASE WHEN t1.c39 THEN t1.c2 ELSE t1.c2 END IN ((- (t1.c4)), t1.c39)));
SELECT ALL * FROM rt0 FULL OUTER JOIN t1 ON (CASE WHEN t1.c39 THEN t1.c2 ELSE t1.c2 END IN ((- (t1.c4)), t1.c39)) WHERE (t1.c4);
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c4) AND ('0.9159597518121718')) IN ((((rt1.c2, rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c4, rt1.c1, rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c4) AND ('0.9159597518121718')) IN ((((rt1.c2, rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c4, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c4) AND ('0.9159597518121718')) IN ((((rt1.c2, rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c4, rt1.c1, rt1.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2) NOT BETWEEN (rt1.c4) AND ('0.9159597518121718')) IN ((((rt1.c2, rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c4, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c4) AND ('0.9159597518121718')) IN ((((rt1.c2, rt1.c0, rt1.c6)) NOT BETWEEN ((rt1.c6, rt1.c0, rt1.c0)) AND ((rt1.c4, rt1.c1, rt1.c1))))));
SELECT ALL * FROM t1 WHERE (TRIM('-21762405')) ORDER BY (((t1.c12)<(t1.c12)) IN ((((t1.c12)) BETWEEN ((t1.c2)) AND ((t1.c4))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM('-21762405')) IS TRUE)  as count FROM t1 ORDER BY (((t1.c12)<(t1.c12)) IN ((((t1.c12)) BETWEEN ((t1.c2)) AND ((t1.c4))))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (TRIM('-21762405')) ORDER BY (((t1.c12)<(t1.c12)) IN ((((t1.c12)) BETWEEN ((t1.c2)) AND ((t1.c4))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM('-21762405')) IS TRUE)  as count FROM t1 ORDER BY (((t1.c12)<(t1.c12)) IN ((((t1.c12)) BETWEEN ((t1.c2)) AND ((t1.c4))))) ASC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (TRIM('-21762405')) ORDER BY (((t1.c12)<(t1.c12)) IN ((((t1.c12)) BETWEEN ((t1.c2)) AND ((t1.c4))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON t1.c39 WHERE (RTRIM(rt1.c1) COLLATE BINARY) ORDER BY rt1.c6, CAST((((rt1.c6))=((rt1.c1))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON t1.c39 ORDER BY rt1.c6, CAST((((rt1.c6))=((rt1.c1))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON t1.c39 WHERE (RTRIM(rt1.c1) COLLATE BINARY) ORDER BY rt1.c6, CAST((((rt1.c6))=((rt1.c1))) AS BLOB) ASC;
SELECT SUM(count) FROM (SELECT ALL ((RTRIM(rt1.c1) COLLATE BINARY) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN rt1 ON t1.c39 ORDER BY rt1.c6, CAST((((rt1.c6))=((rt1.c1))) AS BLOB) ASC);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN rt1 ON t1.c39 WHERE (RTRIM(rt1.c1) COLLATE BINARY) ORDER BY rt1.c6, CAST((((rt1.c6))=((rt1.c1))) AS BLOB) ASC;
SELECT * FROM rt1 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN ((rt1.c5) NOT NULL) THEN CAST(NULL AS REAL) ELSE CASE WHEN rt1.c6 THEN rt1.c5 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c1 END END WHERE (((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN ((rt1.c5) NOT NULL) THEN CAST(NULL AS REAL) ELSE CASE WHEN rt1.c6 THEN rt1.c5 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c1 END END);
SELECT * FROM rt1 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN ((rt1.c5) NOT NULL) THEN CAST(NULL AS REAL) ELSE CASE WHEN rt1.c6 THEN rt1.c5 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c1 END END WHERE (((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN ((rt1.c5) NOT NULL) THEN CAST(NULL AS REAL) ELSE CASE WHEN rt1.c6 THEN rt1.c5 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c1 END END);
SELECT * FROM rt1 INNER JOIN rt0 ON CASE (+ (rt0.c0))  WHEN ((rt1.c5) NOT NULL) THEN CAST(NULL AS REAL) ELSE CASE WHEN rt1.c6 THEN rt1.c5 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c1 END END WHERE (((rt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0, rt1);
SELECT ALL COUNT(*) FROM rt0, rt1 WHERE ('');
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c4))  WHEN (- (t1.c4)) THEN ((t1.c12)OR(t1.c2)) WHEN ((t1.c4) IS TRUE) THEN (t1.c2 IN (t1.c12)) WHEN ((((t1.c12)OR(t1.c39)))AND(t1.c4)) THEN (~ (t1.c39)) END) ORDER BY json_type(((((t1.c39)OR(t1.c2)))OR(t1.c39))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c4))  WHEN (- (t1.c4)) THEN ((t1.c12)OR(t1.c2)) WHEN ((t1.c4) IS TRUE) THEN (t1.c2 IN (t1.c12)) WHEN ((((t1.c12)OR(t1.c39)))AND(t1.c4)) THEN (~ (t1.c39)) END) IS TRUE)  as count FROM t1 ORDER BY json_type(((((t1.c39)OR(t1.c2)))OR(t1.c39))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c4))  WHEN (- (t1.c4)) THEN ((t1.c12)OR(t1.c2)) WHEN ((t1.c4) IS TRUE) THEN (t1.c2 IN (t1.c12)) WHEN ((((t1.c12)OR(t1.c39)))AND(t1.c4)) THEN (~ (t1.c39)) END) ORDER BY json_type(((((t1.c39)OR(t1.c2)))OR(t1.c39))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c4))  WHEN (- (t1.c4)) THEN ((t1.c12)OR(t1.c2)) WHEN ((t1.c4) IS TRUE) THEN (t1.c2 IN (t1.c12)) WHEN ((((t1.c12)OR(t1.c39)))AND(t1.c4)) THEN (~ (t1.c39)) END) IS TRUE)  as count FROM t1 ORDER BY json_type(((((t1.c39)OR(t1.c2)))OR(t1.c39))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (CASE ((t1.c2) NOT BETWEEN (t1.c2) AND (t1.c4))  WHEN (- (t1.c4)) THEN ((t1.c12)OR(t1.c2)) WHEN ((t1.c4) IS TRUE) THEN (t1.c2 IN (t1.c12)) WHEN ((((t1.c12)OR(t1.c39)))AND(t1.c4)) THEN (~ (t1.c39)) END) ORDER BY json_type(((((t1.c39)OR(t1.c2)))OR(t1.c39))) ASC  NULLS LAST;
SELECT * FROM rt0, t1 WHERE (((((t1.c4)AND('W')))OR(x'4aad'))) ORDER BY (((x'b5ddfc44'))>((((rt0.c1) BETWEEN (t1.c39) AND (rt0.c4)))))  NULLS FIRST, t1.c39;
SELECT SUM(count) FROM (SELECT ((((((t1.c4)AND('W')))OR(x'4aad'))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((x'b5ddfc44'))>((((rt0.c1) BETWEEN (t1.c39) AND (rt0.c4)))))  NULLS FIRST, t1.c39);
SELECT * FROM rt0, t1 WHERE (((((t1.c4)AND('W')))OR(x'4aad'))) ORDER BY (((x'b5ddfc44'))>((((rt0.c1) BETWEEN (t1.c39) AND (rt0.c4)))))  NULLS FIRST, t1.c39;
SELECT SUM(count) FROM (SELECT ((((((t1.c4)AND('W')))OR(x'4aad'))) IS TRUE)  as count FROM rt0, t1 ORDER BY (((x'b5ddfc44'))>((((rt0.c1) BETWEEN (t1.c39) AND (rt0.c4)))))  NULLS FIRST, t1.c39);
SELECT * FROM rt0, t1 WHERE (((((t1.c4)AND('W')))OR(x'4aad'))) ORDER BY (((x'b5ddfc44'))>((((rt0.c1) BETWEEN (t1.c39) AND (rt0.c4)))))  NULLS FIRST, t1.c39;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((t1.c2 COLLATE BINARY)+(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE BINARY)+(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((t1.c2 COLLATE BINARY)+(TOTAL_CHANGES())));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 COLLATE BINARY)+(TOTAL_CHANGES()))) IS TRUE)  as count FROM rt0, t1);
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (((t1.c2 COLLATE BINARY)+(TOTAL_CHANGES())));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))%(((rt0.c0)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))%(((rt0.c0)>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))%(((rt0.c0)>(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))%(((rt0.c0)>(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((NOT (rt0.c1)))%(((rt0.c0)>(rt0.c3)))));
