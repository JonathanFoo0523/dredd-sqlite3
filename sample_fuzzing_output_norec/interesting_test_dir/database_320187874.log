-- Time: 2024/06/09 07:12:48
-- Database: database74
-- Database version: 3.40.0
-- seed value: 320187874
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, c1, notindexed=c0); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA cache_size; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR(x'f870')))OR(0.37741249124277176)))AND('')))OR(0.37741249124277176))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1840448801 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1258910426 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1258910426 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1423446910 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f1e8')) BETWEEN (((- ('0.37741249124277176')))) AND (((('-1423446910')GLOB(x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((-416563088) BETWEEN (0.6498326408886628) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(NULL, 0.5106342795259158) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '0.9371329951003966' COLLATE NOCASE  WHEN NULL COLLATE RTRIM THEN '' COLLATE NOCASE WHEN x'' THEN CAST(x'' AS INTEGER) WHEN (('-1423446910') BETWEEN (x'4a36') AND (NULL)) THEN (NOT (x'')) ELSE (- (0.9371329951003966)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT NULL) IN ((+ (0.37282066585159357)), CASE NULL  WHEN NULL THEN 774963915 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(((x'')AND(NULL)))))AND((('thb_镂')|('-1755593204')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=22557316 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-149869673 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)||('')) IN (((0.6498326408886628) NOT BETWEEN (-1258910426) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1824501962 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1943828519 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT BETWEEN (x'') AND (x''))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 846487058 sz=-1016047311'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.27864258375650086) NOT NULL))<<((('-2031547046') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('mK') BETWEEN (x'') AND (NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1755593204'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=594413835 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('HA')) BETWEEN ((x'')) AND ((0.6498326408886628))) IN ((x'' IN ('')), NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((x'')) BETWEEN ((x'')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL)))*(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 sz=846487058 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)|(x'f843'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=83700350'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')|('6')))IS NOT(-1755593204 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1016047311 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '200483078 sz=1487928965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '719866472 sz=600568112 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1425138806 sz=719866472'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1484492205 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1798150009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1161895502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1613658615 -416563088 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2087206922 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0x4fd2a7e)))OR(''))) BETWEEN (((0X7c0c3cdf) NOTNULL)) AND (((0.9590142310126692) NOT BETWEEN (NULL) AND ('1824501962')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1161895502 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NULL IN (x'3927'))  WHEN '-314163391' COLLATE NOCASE THEN (~ (x'')) WHEN ((1158534564) NOT BETWEEN (0.3998330104435782) AND ('0.6498326408886628')) THEN TOTAL_CHANGES() WHEN x'' THEN 0.8711720978373335 ELSE ((0.4608554448167709)||('0.3998330104435782')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')<<(x'')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-288286870 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('T+Co<.꺨' AS BLOB))OR((- ('<)')))))OR(((((x'd74c')AND(-1.484492205E9)))OR(0X1e3902a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-628583102 sz=1667585748'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=200483078 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (LIKELIHOOD(DISTINCT x'0a43', 0.498323405204394))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1907700629 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=9223372036854775807 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=996903268 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-827844305'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-256275088 sz=31690794 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-149869673'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((MAX('-2031547046', '-149869673'))GLOB(CAST(x'' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-(IW-' THEN 'kz' ELSE 326825638 END) BETWEEN (CASE WHEN NULL THEN '699577567' WHEN '0.37741249124277176' THEN 0.006000746268300272 WHEN -6.28583102E8 THEN '-1015325928' END) AND ((((NULL))!=((NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((3.1690794E7 IN ()) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE 'kz'  WHEN '-1798150009' THEN 0.6051710762277445 WHEN 0.6498326408886628 THEN NULL WHEN x'' THEN 0Xffffffffe2657ff1 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1423446910 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(0X4645ce2))) BETWEEN (((NULL) BETWEEN ('1667585748') AND (''))) AND (((NULL)<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=888789248 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-827844305 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') IS FALSE))OR(NULL COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(UPPER(DISTINCT x'd1b9')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.943486816063079; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=1488831292 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((0X1fbae6b1)AND(NULL)))AND(0.08996393425570903))  WHEN (((0.10909185699633717))<((x''))) THEN ((NULL)GLOB('fN')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN NULL THEN 0x1e3902a ELSE 'vq' END THEN CAST(0.12418042343721258 AS BLOB) ELSE ((' ') ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1943828519 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.798150009E9)&('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((' '))!=((x'8460'))) IN (((0Xffffffff9018166c)IS(1185204063)), CAST(NULL AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1236014310 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight('-1943828519', '83700350', NULL, x''))&(((0.8578479423909896) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -2087206922 sz=-733030665'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-989039954')%(0.21101519145080605)))+(((2.2557316E7)<<(x'db6a')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1428727139 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, '	Y', 0x17d2889f))!=(('-195487072', 0.8453236605674556, 'k\reN햤'))))=(CASE WHEN '0.4608554448167709' THEN 0.38399505810767276 ELSE 0xffffffffe62ca4ab END)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=1423722504 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('517585377') IS TRUE)  WHEN ((('iJ{x')) BETWEEN (('399673503')) AND (('399673503'))) THEN (+ ('I')) ELSE (0X5e7a410c IN ('', NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT NULL, 0.29179152753035975); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.511082179978554; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(DISTINCT NULL)) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CASE WHEN '83700350' THEN NULL WHEN 0.8873025576305991 THEN '[#)zIq귿2' WHEN 0.5197053986019134 THEN 0.5601066928952441 END)) AND ((((0.5781722170684679) NOT NULL)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('0.9371329951003966', '-1321076513')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NOT (0.3449780840927229)) IN (((-1.49869673E8) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((0.5197053986019134))<=((0.12418042343721258))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 476161714 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN ()))OR((~ ('-2087206922')))))AND(((('517585377')) NOT BETWEEN ((NULL)) AND ((0.3998330104435782))))))AND((((''))==(('骵R&mT'))))))AND(json_array(x'ce4b', ')Me᷆', '1820337719', 0.8453236605674556, x'', 0.9127668631952439))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1360873542 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1943828519 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2049336477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS(((8.88789248E8)<=('iJ{x'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 774963915 sz=998989221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1564671622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '309506387 -427905909 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=78561201 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('' COLLATE NOCASE)<<(CAST('#2' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-961293290 0 sz=-1161895502'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)LIKE('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN (NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1366164406 sz=-9223372036854775808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1428727139 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1551665360 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-631762956 unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN ((0.9477176048133975)) AND (('1807513606'))))OR(((((x'')AND(x'67f4')))OR(NULL)))))OR(((0.7036633869835207)AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2110646624 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((LIKELY(0.02298020366390474)))<>((CASE WHEN NULL THEN '' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1847955238'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '32961005'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE x'8d3c'  WHEN '1667585748' THEN x'e552' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=184229453 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('-2087206922')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1597019044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 8ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-631762956 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY(((NULL)>('#yx')), NULLIF('252613105', NULL), '' COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -878174778 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)LIKE('-169300974')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-1.161895502E9 IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((('928281244') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=840042473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-325423569 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1103624256 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=52953651 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=272631713 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffda889542) NOT BETWEEN ('') AND (0.3998330104435782)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-427905909 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1834119038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=353975823 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((998989221) NOT BETWEEN ('-1755593204') AND (0.9590142310126692))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=73686242'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1264915774 sz=-1074643181 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.4939891175040535 COLLATE BINARY AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'fbbd'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0X47db9785 END) NOT BETWEEN (((618208023) ISNULL)) AND (SQLITE_SOURCE_ID())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5376920483783578)OR(((NULL) BETWEEN (x'2257') AND (6.18208023E8)))))AND(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('骵r&mt')<<('J8')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-1.840448801E9 AS TEXT))AND((+ ('699577567')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-2008920977 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=1784931449 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.9881846776162289)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1487928965'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST('0.3998330104435782' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1311230503 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=998989221 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '465551561 sz=1963089391 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 -2021293352'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-814039028 -1311230503 sz=-311104437 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1074643181 0 sz=1907700629'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-156513840 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(('' IN ()), CAST('-1735810382' AS REAL), 1316194917); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-434448199 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-593252036 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0X269e41d5  WHEN (0Xffffffffc7d9a518 IN ()) THEN CHANGES() END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1726641630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '309769510 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1507490894'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'b064'))>((0.4572708325995023))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-477409278 sz=1488229977 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-2111734205 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffda889542) NOTNULL)) NOT BETWEEN (json_remove('', x'26e6', 0.3624903264497872, 'kz')) AND (((('(湨', '1820337719', x'')) NOT BETWEEN ((0.06697115726204372, 0.9881846776162289, '774963915')) AND (('y', 0X71b53395, '-323756930'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')LIKE(0.10909185699633717)) IN (((x'f020')>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -466179139 sz=774963915 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT CASE x''  WHEN 'r&X8C鞅_' THEN 'W.<<' END, 0.005027482343464507 COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1287102369 -1765070481 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-314163391)>>('1721298143' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(((0.9515433411280425)<(0.8578479423909896)))))AND(((0.606861923326995)>=(0.7036633869835207)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1103624256 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(0Xffffffff9aa84289)))AND(x'b006')))AND(x'f88c')))AND(NULL)))<=((((('399673503')AND('')))OR('a>')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ (NULL)) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1147118026 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '78561201 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATETIME((('1643513912') NOT BETWEEN ('-961293290') AND (0.5378194021625805)), (((('aN')AND(NULL)))AND(x'')), ((NULL) BETWEEN (0.5869903981700593) AND (''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1807513606'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=200483078 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.3624903264497872  WHEN x'97fa' THEN -1.016047311E9 ELSE -197679289 END) BETWEEN ((NULL IN ())) AND (((NULL) NOT BETWEEN (NULL) AND (254473516)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1306672527 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=-25066605 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ((('-733030665') BETWEEN (NULL) AND (2.00483078E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-585288802 0 sz=1807513606'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (('105409719')) AND ((0.2863928778846464))) COLLATE RTRIM COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 -1613658615 sz=1746272753 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-380424609 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 0.2038734990799821  WHEN '' THEN 0.10427975236702114 ELSE 0.9544945115360718 END)AND(((('-1360873542'))==((NULL))))))AND((('-1016047311')GLOB(0.12261350604182342)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1376070451'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)>>(x'6575')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS TEXT) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'J<'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('') BETWEEN ('J<') AND (')<')) THEN ('0.5781722170684679' IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1423722504'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1164411782 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1360873542 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '963268879 sz=92099880 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((-0.0)AND(NULL)))OR('ꕣ1''x*ri&')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-868040421 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (364391984))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=494144135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1511286091 0 sz=980628643 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote(((2041315728)LIKE(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5601066928952441 IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(((((x'cbecef0e')AND(x'9a17')))AND('A&')), (('-291537189') BETWEEN (NULL) AND (NULL)), ((0.11009088570826375) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1258265405 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1430275768 -1085100860 sz=-192532802 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN '' THEN 8.370035E7 ELSE x'' END)>=(ABS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2003811008 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1810957700 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2077423015 sz=-559175813 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-739038510 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1236014310'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(0Xffffffff86e90d5a AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('a>', '-470045016', NULL))<=((0.04382162525907218, x'', x''))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) ISNULL))AND((('0.27864258375650086') NOTNULL))))AND(x'1ad60543')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-701194788 887954170 sz=-2008920977'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'5293', x'', 0.8775099423960124))!=((0.38184877000772965, '}䕸e', '1187352633'))) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ ('1804561311'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x''))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 -169300974 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-74369840 sz=-2049336477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1705433937 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN ((('-416563088') NOT BETWEEN (0.7786990955689141) AND (x'757d'))) AND ((+ ('-1484492205')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('!m')) NOT BETWEEN ((TRIM(DISTINCT NULL, '-961293290'))) AND ((CASE '1598187695'  WHEN NULL THEN -340489337 END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '840042473 sz=-169300974 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1132202688 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1034481146 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=578913819 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1484492205 sz=-255522630 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1813986090'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0.2778545138865489 THEN x'' WHEN x'beb1' THEN NULL WHEN 0X2ae84a68 THEN 0.4931522206186657 ELSE '532342449' END)AND((((('J')AND('')))AND('67')))))AND(x'' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1761417856 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE RTRIM))>=(((NOT ('465551561'))))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=603108000 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((JULIANDAY(x'', x'', NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1104571451'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=696099648'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1008328987 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2059900112 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(x'', 0.9145396236918869, '랺'))-(((NULL)<>('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2110646624 -1248415119'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1151934291'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOT BETWEEN (NULL) AND (635866181)), (NULL IN ()), STRFTIME('1784931449', '888789248', '-209193857'), x'' COLLATE BINARY, ((((0.8822687684115099)AND(0.9428395168054956)))OR(NULL))))<=((CASE WHEN NULL THEN NULL END, CAST('RGI' AS NUMERIC), CAST(2061305642 AS REAL), '-1696867015' COLLATE NOCASE, (('0.2863928778846464') NOTNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1048619891 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(((NULL) NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE NULL  WHEN NULL THEN NULL END)>=(CASE 'J'  WHEN NULL THEN -337607206 ELSE 0.9084406553867113 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=303017471 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0.22385726845966103 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=87939308 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2080230746 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1213935862 sz=-785438966 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ ('#E'))) BETWEEN ((('{R*\n')-('0.7786990955689141'))) AND ((((0.7819378089506437))<=((x'7ca1'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('w85%NaNL tHq'))>((840042473))) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1511286091')LIKE(NULL)), ((((((((0.9478958350676082)OR('73618389')))OR(0.16106091507786724)))OR(0.3722302471877924)))AND('')), CASE WHEN '0.9428395168054956' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 'dCh''|p' ELSE 0Xffffffffc294812f END))>=(((- (0X29b2b4df)), ((('\r.')) BETWEEN ((1371093096)) AND (('_0/}u\r6ߧ9'))), ((x'')||(0Xffffffffb4f68d26))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-940557044 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((+ (0.26657345057546333)))OR((((('')OR(0.4682824542279944)))OR(0.8809984582466347)))))OR(CASE 'I|fN#\'  WHEN 1807513606 THEN NULL ELSE -1.074643181E9 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-149934069 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -945892419 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1597019044 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('Fj')OR(x'')))OR('')))AND(NULL COLLATE RTRIM)))AND((((x'24bd007c')) BETWEEN ((0.1579863784283152)) AND ((0.27759537148358815))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=70759937 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2055048607 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'0a67' AS INTEGER) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=998989221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1877469588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1579760104'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1859292798 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('(Pr)')OR(x'')))OR(CAST('326825638' AS NUMERIC))))OR(CASE '8'  WHEN '1' THEN '-1103624256' WHEN ')*' THEN 0.61341155229752 WHEN 0.27522175144802763 THEN -1.49869673E8 END)))OR(0.6829871693781961 COLLATE NOCASE)))AND((~ (x'7057')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '553866757'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=31690794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=818501014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('8}qQA')<(0.26657345057546333))) NOT BETWEEN (LOWER(1.784931449E9)) AND (LTRIM(1587463130, NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2130998601 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('260907665')>(0.06697115726204372)) IN ((('0.4939891175040535') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=600384452 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-516111121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'58dd' COLLATE NOCASE THEN CAST(NULL AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1957342080'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT CASE '2101458995'  WHEN 0.008419338390611042 THEN NULL WHEN x'1239' THEN '' WHEN x'' THEN '' END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1645547630'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1798150009 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1953927915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE(((NULL)OR(NULL)), (x'' IN ('', x'')), ((0.3706772783821881)>(0.7124216427365772)), (NULL IN ()), x'' COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN '0.8873025576305991' WHEN x'' THEN '-202332544' WHEN NULL THEN NULL WHEN NULL THEN 2141663635 WHEN NULL THEN 'R' END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)&(x'a494')))AND((+ (NULL)))))AND((- (0x6555e5eb)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (NULL))))>=((CASE WHEN 0.008419338390611042 THEN 'J\r2<' END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=232992724 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC))<(CASE WHEN -0.0 THEN 0.27522175144802763 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (+ (''))  WHEN CAST(0.943486816063079 AS INTEGER) THEN (NOT (0.4682824542279944)) ELSE (NOT ('353565925')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('' IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2097278963 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-878174778 1426906628 sz=-543127812 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-325423569 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((('896576157')OR('/q')))AND('719866472')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '398615642 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 sz=1514652063 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1016047311 1834119038 sz=998989221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS FALSE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR((0.7124216427365772 IN ('')))))OR(((0.5990891450493888)<>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-471879652 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2121782499 sz=-1258910426 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(x''))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '[C3?[]ᔾx!' THEN '' END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.675580459807806; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-195487072 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1922333824 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=32961005 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((((0xffffffffb9e10868)) NOT BETWEEN (('1240436987')) AND ((2.72631713E8))), CAST('' AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' COLLATE NOCASE IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.44579876526078066))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '614257082 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1366164406 -1991966017 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=862027400'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'6a2a4a48f743' IN ()))OR(NULL COLLATE RTRIM)))AND(json_remove('1779481642', 573844512))))OR(CASE WHEN x'' THEN 1.667585748E9 ELSE x'4eee' END)))AND(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1425138806 sz=1598734512'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1487928965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('䵃|~')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1815089981 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2081176799 -1943828519 sz=1196596477'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-894663972'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1311230503 sz=-2048108128'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1899506229 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')<>(x'')))OR(((((252613105)OR('-1708893834')))AND(x'a1e6')))))OR(((x'')<=(0.11368411855268468)))))AND('361832864')))AND(((x'')||(0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1461602772'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1306551092 sz=597001630 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((x'') BETWEEN (x'935fc2b2') AND (0Xfffffffff637d798)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((x'' IN (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((COALESCE(NULL, 0.20882114819256903, 'z%', 0.9643699617386005))AND(((-983226070)>>(0x2068741e)))))OR(((0x2a4bbc07) NOTNULL))))AND((((((((('r&X8C鞅_')OR(NULL)))AND(1.824501962E9)))OR(0.20882114819256903)))AND(x'')))))AND(CAST(NULL AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=78561201 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('8CdQA') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('''F' AS BLOB)) NOT BETWEEN ((+ ('360:1355T-6080280055182073056 1439T603T314 1175T-4218174657878069928 '))) AND ((('')!=('-1795378996')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-62703859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2087016496 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (NULL))) BETWEEN (0.5607921554382516) AND ('-2087206922')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=574454 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1751492921 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1755593204') BETWEEN ((+ (NULL))) AND (-1292414903)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=969743356'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xfffffffffac7d3a5)) BETWEEN ((((0.41518223780613117) NOT NULL))) AND (((NULL IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1784911602 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-653753734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('I') NOT BETWEEN (0xffffffffb34afb08) AND (0.8656116632487658)) THEN 'yearsn' COLLATE NOCASE ELSE 0.8274204524018168 COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL IN ()))OR((- ('!P')))))OR(((x'') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)<(0.7066266484055826)) IN (LIKE('8vI\r4c9[A', x'0135'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(NULL)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1065078363 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.8255104188542919; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (''))) NOT BETWEEN (CAST(1.23601431E9 AS BLOB)) AND (x'cb08' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffeaf836ea COLLATE NOCASE) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-610896703' COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2031547046 2 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1820337719 -563633935 sz=581592405 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('-628583102')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1236014310 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1811297393'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-496664591 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '83700350 sz=743180268 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-551189840'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1462739170 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-670551995 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1718291661'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1664552462 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '719866472'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('fN' IN (0.6269370805374975, 1907700629)))>>(((((NULL)OR(0xfffffffff935cce7)))OR(0.9038500010238586)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1516243122 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-912578092 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(json_array_length('954379204', x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1015325928 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=('1366164406'))) NOT BETWEEN (('' IN ())) AND (((x'82c8') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2078955921 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-145754991 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4448') IS TRUE)) NOT BETWEEN (CAST(0.541325196681188 AS NUMERIC)) AND ((((0xffffffff975bc60c, 0.006000746268300272, 0.035356489084711784)) BETWEEN (('', x'', '')) AND (('-2102930608', 0.2846776226583515, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=584365307'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-224625959 sz=699577567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0.6139073798434725)AND(1165956034)))AND('1490446336')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.798150009E9) NOT BETWEEN (NULL) AND ('-9223372036854775808')))<=(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL) BETWEEN ('eE㛝') AND (NULL)), ((0.10738010910385831) NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(('-1161895502' IN ()), ((0.27759537148358815)|(0xffffffff868a584f))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1129145108 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-416563088))==((x'440e'))))-((0.5618912426954481 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND((x'd6f7' IN ('骵R&MT', 0.8937424384156198)))))OR(((0.5607921554382516) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(NULL COLLATE NOCASE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('\r\nt㸏w3af')|(NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-669299285'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '\nmR/W', -2.049336477E9)) NOT BETWEEN (((0.22385726845966103 IN ()), CAST(NULL AS TEXT), CAST(NULL AS REAL))) AND (((('-1913402200')>('ㆸ>')), (~ (NULL)), ((x'') IS FALSE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((0.9038500010238586 IN (0xffffffff8a0c03ec)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('D}㍇{XQ79' COLLATE BINARY)AND(((NULL) BETWEEN (NULL) AND (0.9428395168054956)))))OR((NOT (0.8991338040185448)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1488831292'); -- 2ms;
DELETE FROM sqlite_stat1 WHERE CASE (((((((('{}')OR(x'1dab7183')))OR(')吏5꥔AzFko')))AND(NULL)))OR(x''))  WHEN ('' IN (x'')) THEN -827498373 COLLATE NOCASE WHEN CAST('-1754280244' AS REAL) THEN (((NULL))!=((''))) WHEN CASE WHEN '83700350' THEN 0X6d526f7e ELSE '-4335183' END THEN (('') IS TRUE) ELSE ((x'')-(x'7b6c')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((6.00568112E8)) BETWEEN ((((0.4939891175040535) IS TRUE))) AND ((((x'005e')||('-433281877'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1963925318 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2018011515 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-641614005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1258910426 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-792010056 252613105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('-Infinity')GLOB(0.09419953612893406)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (load_extension(NULL, NULL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL))<=((((NULL) NOT BETWEEN ('-961293290') AND (0Xafb1e4d))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.5825670280202628)) BETWEEN (('')) AND ((-1.597019044E9))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1311230503 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1205573509 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2130869462 sz=-80080723 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1151893616'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.7219992770496406, '-557351715', x'2443')) BETWEEN ((((-1449707420)AND(0.7277672245443296)), CAST(NULL AS REAL), '-1208297160')) AND (((('1810193003') NOT BETWEEN (0Xffffffffeed1176a) AND (0x430a0064)), ((NULL)IS('719866472')), rtreenode(1.834119038E9, '789917641')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1639562378 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=839297517 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('-913843122' AS INTEGER)) NOT BETWEEN (CASE WHEN x'e6c3' THEN NULL END) AND ((((NULL, '', NULL)) BETWEEN ((x'', x'', NULL)) AND (('>ﺈ䂭dӵV', 'x[맡SJ냊', '1932568584'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1131497991')) BETWEEN ((NULL COLLATE NOCASE)) AND ((TRIM(DISTINCT '1878906947', NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1847955238 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(x'8c0b'))AND(CASE WHEN 0Xffffffffa2bd017a THEN NULL ELSE 0.7728011946484902 END)))OR(HEX(0xffffffffc3705931))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(0.27522175144802763)))OR(x'')))||(ABS(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1168059221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.3894677727826278)))IS NOT(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1423446910 -736425123 sz=-1068305089 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LAST_INSERT_ROWID(); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-704581960') NOT NULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-88851188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=517585377 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE TYPEOF(DISTINCT x'f7fc')  WHEN (x'' IN ()) THEN CASE WHEN '-1597019044' THEN '-1015325928' END ELSE CASE 1842734961  WHEN '-325423569' THEN x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 sz=1645445194 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1824501962'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1820036030 0 sz=-720875502'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('682039956') BETWEEN (NULL) AND (0.9532155692619209))))>((((x'')%(-9.6129329E8))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ()) IN ((((NULL))=((NULL))), (((x'')) NOT BETWEEN ((7.8561201E7)) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('849676994')OR(0.9544945115360718)))AND(1.264915774E9)))%((('-1408919850')IS(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>=(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS TRUE) THEN CASE WHEN x'b94a' THEN 0.16106091507786724 WHEN NULL THEN '>*H!' WHEN 0.18309604596684226 THEN NULL ELSE 0.24021529770228356 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '799748058 sz=793940750'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1907700629 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE HEX('1487928965')  WHEN ((((x'')AND(x'953d')))AND(NULL)) THEN ((((((((((((0X52c00853)AND(0Xffffffffa5657996)))AND(NULL)))OR(0.04382162525907218)))OR(NULL)))OR(0x6e1270df)))AND('Mz咖a')) WHEN (('')LIKE(8.46487058E8)) THEN ((2.00483078E8)AND(NULL)) WHEN CASE 0X5958ede7  WHEN '' THEN -1101588076 WHEN x'' THEN x'5abfe581' WHEN NULL THEN NULL ELSE 'ktQv첏cx8袟' END THEN (((NULL)) BETWEEN ((0Xffffffffb1d835d9)) AND ((-496664591))) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '734077125 -1237244585 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE WHEN 0.541325196681188 THEN 0.8560053463654516 END)AND(((((NULL)OR(0.02224732462389145)))AND(NULL)))))AND(0Xffffffffdf6c6abf)))OR(CAST(0.8162166272234086 AS REAL))))OR(((540706544)>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1486514918 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', 0.5670350034714923, NULL, NULL, x'aab6')) NOT BETWEEN (((0.6690632741850335 IN ()), (0.2919140719320251 IN (x'b32c')), TRIM('a&', NULL), ((((0.9371329951003966)OR(-1.016047311E9)))OR(NULL)), ((x'')=(NULL)))) AND (((((x'ff85', x'', 0.006000746268300272))<>(('', NULL, 0xffffffffacfc7d09))), -4.33281877E8 COLLATE RTRIM, ((0x23ff0f57)|(0.8656116632487658)), CAST(NULL AS NUMERIC), x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1937011958 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1820337719 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-379180835 sz=1537063090 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2134112764', '', 0xffffffffe409339f)) BETWEEN ((x'' COLLATE NOCASE, ((0.796746662380711)>('309506387')), CAST(x'' AS NUMERIC))) AND (((~ (NULL)), ((NULL) NOTNULL), x'94011e9e' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME(x'', x'', 'oqr#,IO%')) NOT BETWEEN (CAST(1477944696 AS BLOB)) AND ((('\r\nt㸏w3af') ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2139701643 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=998989221 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'019c') ISNULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -2049336477 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -2031547046'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (0X3a9fc8a0)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-378701455 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1215771715'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (NOT ('')) THEN 0.7219992770496406 COLLATE BINARY WHEN UNLIKELY(DISTINCT 0.8262627562708) THEN ((NULL) BETWEEN ('1264915774') AND ('0.27522175144802763')) WHEN ((((((((0.6432879229184637)AND(x'bef2')))OR('')))OR(x'')))OR(-1597601395)) THEN (((((((('652416938')AND('-0.0')))AND('(⮗')))OR('')))OR(NULL)) WHEN ((NULL)IS(NULL)) THEN (((('532342449')AND(0X3bb198a5)))OR(x'')) WHEN ((0.06697115726204372)|('1227838155')) THEN ((((((((x'')AND(NULL)))AND(x'2ca3')))OR(x'')))OR(x'')) ELSE ((0.8272426518784596) BETWEEN (0.5654545619085087) AND (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1667585748 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((((('<>w')OR(x'40f3')))AND('0.7786990955689141')), (~ (5.2953651E7))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '980844539'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-408569973 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1370457798 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-427905909'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '#2'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2049336477 2 sz=998989221 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '618208023'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1654662194 sz=2010526246'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)%(x'')))+(((1952092893)LIKE('-478847097')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1093372404'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1877469588 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LTRIM('<3ᝪHT') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1755593204 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2066062200 -1074643181 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1316869438 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1840448801 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1784931449 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.26951855900711297 AS TEXT)))<(((NULL IN ())))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=377888673 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-858366054 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (STRFTIME(NULL, '', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '983503848 -106677867 sz=-970009168 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')LIKE(NULL))) BETWEEN (load_extension(3.26825638E8)) AND ('')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)+('719866472' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-470045016 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((409870082) BETWEEN (x'38ad') AND (x'55a4'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((NOT (0X15193e0f)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE x'27ac'  WHEN x'6c80' THEN 52953651 WHEN NULL THEN 0Xffffffffe51c1965 WHEN 'H,' THEN ']-913118890591982439 1975 -185475025319277891--1096205316979524815:-4948938370462445430T4s9' ELSE 0.8321576398528435 END)!=(0.5115808282458295 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1743526434 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'58f3')) BETWEEN (((- ('')))) AND ((NULL COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('y')<>(0Xfffffffff4591aa0))) BETWEEN (NULLIF(0.8198448409621208, NULL)) AND (0xffffffffd37cebbe)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'638d')IS NOT(NULL)))AND(LIKE(NULL, '0.08996393425570903', 'M'))))AND((NULL IN ()))))AND((0.8991338040185448 IN (x'6ea1')))))AND(CASE '-1016047311'  WHEN x'' THEN 0.382071878509888 WHEN x'' THEN 0.7124216427365772 WHEN x'' THEN 0.564842485594246 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)|(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=465551561'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1847955238 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT ('kw?c]E}G~'))  WHEN load_extension(NULL, '-708245470') THEN CAST(x'' AS TEXT) ELSE CAST(-9223372036854775808 AS BLOB) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1585070348 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(x'' AS NUMERIC))OR((~ (0.6898329838309157)))))AND(((0.9613525992743556)%(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1009529711 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.7219992770496406)))<(CAST(NULL AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 sz=1150195229 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -2008920977 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=453093257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1314283252 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT ((NULL)-('m)xu'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (NULL))) BETWEEN (((x'')>=('0.44579876526078066'))) AND (CASE '962431783'  WHEN 0.5759018943951955 THEN '' WHEN NULL THEN 0.37623820758175863 WHEN -4.27905909E8 THEN 0xffffffff85d99b63 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((('J<') NOT BETWEEN (x'') AND (x'7353')), CASE WHEN '-1564671622' THEN '252613105' END); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1042838124'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST('1076905258' AS INTEGER) THEN CAST(NULL AS NUMERIC) WHEN x'47ac' COLLATE NOCASE THEN ((NULL) IS TRUE) WHEN (((((((((((('-1259586247')OR(NULL)))AND(0xffffffffda889542)))AND('1252017431')))AND(NULL)))AND(3.99673503E8)))AND('-733030665')) THEN ((((1726997944)AND('')))AND(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-635527442 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'228d'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '32961005 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-115396215 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.6051710762277445) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2004153157 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0.23721990913246982))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1438053006 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-142005635'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('R㳔x๪8l{P◡' IN ()))GLOB(((((((((0.5620777638517516)AND('244284367')))OR('LM')))OR(0x13ad0c75)))OR('-1567765798')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.6052753805418907  WHEN NULL THEN x'' END) NOT BETWEEN ((('476161714')|(0.9190667747339923))) AND ((('') NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-878174778 sz=600568112 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1264915774'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1371953553 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=699577567 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((((((((NULL)OR(0.6361032711109802)))OR(NULL)))OR('')))AND('')), ((((NULL)OR(0Xffffffff9c2f4044)))OR(0Xffffffff84897d41))); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37685'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE vt0 SET (c1, c0, c1)=(NULL, 0.61341155229752, NULL) WHERE ((PRINTF(vt0.c0)) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', x''); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, '1010613990'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 324974226); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '13143'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', x''), (0.590481758471538, NULL), (-1.425138806E9, 'e2'), (0.5033092958837574, NULL), (x'', -1.484492205E9); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA busy_timeout = 5230728090987895575; -- 0ms;
PRAGMA main.cell_size_check; -- 0ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INT , c1 BLOB , c2 INT ); -- 0ms;
INSERT OR IGNORE INTO t0(c2, c0) VALUES (x'', '-1840448801'), ((((((('|.47㑢f') NOTNULL))AND(LIKELY(x''))))OR(((((0.5376804134617119)OR('0.21101519145080605')))AND('-1784480926')))), '2+	Cy'), (x'661a', 'WQ\n1俩 {'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('', x'', x'a6ca'), (NULL, '22557316', NULL), ('-1847955238', NULL, '-1258910426'); -- 0ms;
UPDATE t0 SET c1='-1847955238', c1=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1482897235); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('1454500094', ''), (')6Q1p', -1423446910), ('476161714', 1.487928965E9), (NULL, 326825638), (NULL, x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '49167'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c1)=('-1016047311', ']f'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '2674'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=x''; -- 0ms;
PRAGMA temp.journal_mode = WAL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('0')) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=767328321 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1840448801 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -4.70045016E8  WHEN 0.04382162525907218 THEN 0X7e068edd WHEN '\O\%\nUk>' THEN NULL WHEN '476161714' THEN 0.6245616412376931 ELSE NULL END)>=(x'88d4')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CHAR(-1.755593204E9)  WHEN (('H,')<=(x'')) THEN ((272631713)%(6.00568112E8)) WHEN ((x'5ae8')>=(x'')) THEN CAST(x'41ed' AS NUMERIC) WHEN (x'8d115807' IN ()) THEN 0x2801cbaf ELSE (('-535668444')<=('-416563088')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (-1350937347)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1787511866'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=762742740 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CAST('1185204063' AS INTEGER))) AND (((~ (0X266d85f6))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1246568689'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-798344572 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(-917415247 AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1849070590 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '558854292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0Xffffffffab845b9b)||(x'9926')))OR(CAST(0.8583601430050763 AS INTEGER))))AND((+ (954314495)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1972210687 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN x'' THEN x'29a3' ELSE '~K^X	/\n[' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.7832483630819109  WHEN ((x'b8fb')*(x'')) THEN (('.oO8옌\P')=('1._n')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1001683052 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=846487058 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)OR(x'31fd')))AND(7.19866472E8)))OR(x'')))AND(x'76a5')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1798150009 sz=78561201 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'4e0f')) NOT BETWEEN ((((NULL) BETWEEN (0.02174872701236774) AND ('')))) AND ((((('1981932945')) BETWEEN ((NULL)) AND (('-1798150009')))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TRIM(('-1' IN ()), ((NULL) IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '774963915 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1029398251 sz=-1161895502 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1204661127) BETWEEN (CASE WHEN x'' THEN x'' END) AND ((('1988315701') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1928770502 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1205573509 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1835395846') NOT BETWEEN (CASE WHEN x'' THEN '0.10427975236702114' END) AND (CASE WHEN NULL THEN '' WHEN 0.008419338390611042 THEN '&' WHEN 'r&x8c鞅_' THEN x'0841' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1264915774 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xffffffffa06ce275; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(1e500 AS INTEGER)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 503774317  WHEN '-1016047311' THEN x'' END) NOT BETWEEN ((+ (0.2571655504552697))) AND (SQLITE_COMPILEOPTION_USED(x'e41f'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LOWER(x'')) NOT BETWEEN (-2.049336477E9 COLLATE NOCASE) AND ((((0.08832295389004896, 0.5231829138401966, 3.53975823E8))>((x'', 0x49ac14e6, NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-424690557 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(((NULL)&(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' IN ('1264915774')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'daf0' IN (0X61a83271)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('R')<=(NULL))  WHEN ')ꕣgm\' COLLATE NOCASE THEN '-563641872' ELSE '?t8Ij}6H砄' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert('-1871824736', (NOT (0.06784260086516014)), (((x''))>(('1937404111')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1673233887'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') ISNULL)) BETWEEN (((NULL) NOT BETWEEN (x'9047') AND (''))) AND (('\r.' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-735899937 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '459183496 -1820949780 sz=-2087206922 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1511286091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', 0.8196426806231066)) NOT BETWEEN ((CAST(NULL AS REAL), CAST(x'' AS BLOB), CAST('1033206856' AS NUMERIC))) AND ((x'' COLLATE BINARY, CASE '}wP'  WHEN '-631762956' THEN 0xffffffffdb8d0cac WHEN '''' THEN '78561201' WHEN '1807513606' THEN NULL WHEN x'4b30' THEN '-1551665360' WHEN x'' THEN NULL END, ((')D?\᤯')>=(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1487928965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 2123422934'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=403005864'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1423446910 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2083502933 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1812231910'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '32961005 2 sz=-1873960173 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((~ (NULL)), CASE WHEN x'5993' THEN '-864082761' ELSE '/q' END); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) BETWEEN ('') AND (NULL))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1974574235 0 sz=-2099197431 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1811741410 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-868200301 1583069209 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=991180377 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')AND(NULL)))AND(0.6815971069077436)), CASE 'C'  WHEN 175868622 THEN '-295976266' END, CAST('芯\c D6Vt*' AS TEXT)))>((((0.9546046058141007) NOTNULL), CASE NULL  WHEN NULL THEN x'fc2b' WHEN NULL THEN -760003235 WHEN 0X406b059b THEN '' END, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((('1807513606')) BETWEEN (('-1234789876')) AND ((x''))), (NULL IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2123268290 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=905102289'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff85d99b63; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('-1466377121' AS TEXT)))<=(((((0.6819320321986707))>=(('R^_74-6.')))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1423722504 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULLIF(DISTINCT NULL, 0.844509745022806))/(LENGTH(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1978271004 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-989039954'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '496272404 0 sz=1918246098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE NULL  WHEN NULL THEN x'' WHEN NULL THEN NULL WHEN x'' THEN NULL END  WHEN ((19254311) IS FALSE) THEN ('}ECVp' IN (x'ec2b', x'9bde4234')) WHEN LIKE('-1551665360', 'noD', 's') THEN (NOT (x'ffdd')) WHEN ((0.31892734165135384)AND('')) THEN CAST(x'' AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((NULL)AND(((NULL) BETWEEN (0.9260219174916459) AND (0.33180096354625943)))))AND((((0.8937424384156198))==((0.9590142310126692))))))AND(CASE 0.8198334782277217  WHEN 0.11348747989230601 THEN NULL END)))AND(((x'040a') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=719389419 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '787009639'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'6d83' IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1168913438 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('7&D3ꪳSNT') BETWEEN ('-1522802296') AND ('2091319898'))  WHEN 0.7445186123021874 COLLATE RTRIM THEN ((0.5494468036551209) NOT BETWEEN (x'') AND ('52953651')) ELSE '2KP{' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (json('V'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('0.7219992770496406')OR(19858918)))OR(NULL)))AND(0.002232336544774949)))AND(x'0412f1af'))) NOT BETWEEN (CAST('1521088218' AS REAL)) AND (CASE WHEN 0x640c3008 THEN 'XT' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1067429223 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '515831939 2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1621289996 sz=1409624922 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1511286091 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension((('港') IS FALSE), ((x'8f10') NOT BETWEEN (NULL) AND ('T쭲M'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1820337719')OR(NULL)) THEN ((((((((x'')OR(200483078)))OR(0.6202501515279064)))AND(1824501962)))OR('0.5376920483783578')) ELSE ((NULL) BETWEEN ('-40545952') AND (9.96903268E8)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=833894492'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((1264915774)) BETWEEN (('22557316')) AND (('p~색'))))AND(CASE 0.6651525680981155  WHEN 0x5e7a410c THEN 0.9643699617386005 WHEN '' THEN x'' WHEN NULL THEN '' WHEN x'' THEN NULL WHEN '1229381199' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8055349522352839 COLLATE NOCASE) BETWEEN ((~ (0.5199495841133632))) AND ((('719866472')LIKE(x'd383')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1755593204 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1736084826 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)>=(x'')))OR((((NULL)) NOT BETWEEN ((NULL)) AND (('1487928965'))))))AND(x'' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1831645543) NOT BETWEEN (NULL) AND (x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1966658720 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1477324838 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1016047311'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1258910426 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1478715719'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE 0X15193e0f  WHEN 0.919742060134501 THEN 0.006000746268300272 WHEN NULL THEN x'2b72' WHEN '-1016047311' THEN NULL ELSE NULL END AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('0.10427975236702114'))>(('184229453'))))AND((((NULL)) NOT BETWEEN ((-1253251869)) AND (('1721298143'))))))AND(STRFTIME('699577567', ']xJ/KH칊x', '0.9371329951003966', 0xffffffffcd3c9965, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1550639793 sz=1366164406'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-866645484'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.25423569E8) BETWEEN (NULL) AND ('BS듟^#')))LIKE((- ('-1564671622')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'') NOTNULL)))<((CAST(0.8507096352442627 AS REAL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.8204323923238817)<<(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1959423285 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)>=(0.064536825065726))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2110646624 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1494934257'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '22557316 31690794 1695981139 sz=-2049336477'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=517585377 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.6070561633627434, 0.4243117862160375, '-1213145067'))<=((2078193703, 0.5601066928952441, 'L^kn'))))||(LIKELY(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)==(0X6c802637)) THEN x'' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL)) NOT BETWEEN ((0.04091757037603516 IN ())) AND ((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.6160533895370484)AND(x'')))AND(NULL)))OR(NULL)))AND(0.25583776699906424)))AND(-70393696)))AND(x'78e8')))LIKE(ABS(NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1868589357 COLLATE BINARY))<(('' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('' AS REAL) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.27759537148358815')) NOT BETWEEN (((('-961293290') NOT NULL))) AND ((((((0.6892313407274384)OR(1824501962)))OR(0.03969290065674791))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (1807513606 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1893079328 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=896953247'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2081176799 sz=1851483853'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -188426659'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1652371421 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-886795541' THEN 'vks*s\9ar' WHEN '1001164026' THEN '+y<s(' WHEN 0.27759537148358815 THEN NULL ELSE 0Xffffffffba79d0a8 END) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE JULIANDAY((('*hfw\rXvꃗ')GLOB('-2112148191')), ((NULL) NOT NULL), (('517585377') IS TRUE), ((0.28922089559527475)*(x'')), (589940471 IN ())); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1156229375 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-927498034 sz=-314163391 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2110646624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-696981510 sz=-498982814'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('[G' IN (x'f04c')))||((((('1585070348')AND('FALSE')))AND('m+')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-878174778 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-142121760 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN NULL THEN 1366164406 ELSE NULL END)OR(('1484799026' IN ()))))OR((('-878174778') IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((600568112) NOT BETWEEN (0.2891181315169613) AND ('.mT햤tp#R'))) NOT BETWEEN (0.5427564998831054 COLLATE RTRIM) AND (LOWER(DISTINCT '32961005'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(((x'')>=(0.613328235561231))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=46365732 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0X10c6b89c, '-288286870', NULL)) NOT BETWEEN ((0.2781987006918136, '', 0.6538392362554569)) AND ((NULL, '184229453', x'eee3')))) NOT BETWEEN ((NOT (0.7728011946484902))) AND (((0x7cad5559)<('1907700629')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2049336477 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-659203678 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0xffffffffc37b5b18)) THEN LOWER(0.5573755992796383) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1779555094')=(NULL))) BETWEEN (NULL COLLATE RTRIM) AND ((('')<>(0.3543545498284123)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1134167794)OR(353975823)))AND(NULL)))OR('-631762956')))AND('')))%(((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (UPPER(DISTINCT 3.26825638E8) IN ((NOT (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '517585377 sz=-1484492205 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1239448326 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1922488892; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-570064373')OR('-628583102')))<<(CAST(0.37741249124277176 AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((('1667585748'))<>((NULL))))AND((('TFx[-cF')||('-28122920')))))AND((('(⮗')=(x'4c69')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1472435587 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1044392799 sz=1869876131 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((998989221))<((x'1129'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-561759663 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1258910426'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-365650038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 1834119038 sz=1205573509 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS TRUE))*((('958369066') NOT BETWEEN (0.003655377541351701) AND (0.2380336508643619)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('') IS TRUE))OR((+ (NULL)))))AND(((NULL)>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1036445255 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xfffffffff5e8ac12 COLLATE RTRIM)|('517585377')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1463760371'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '996903268 2 sz=-921090243 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('840042473' IN ())) BETWEEN (LIKE(0.9007949718603231, 0.5607921554382516, '5')) AND (((NULL) NOT BETWEEN (NULL) AND (0.3706772783821881)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=22557316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1236014310 sz=-795199490'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1824501962' IN ('<iRP', NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1102419303 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1311230503 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1714954002'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -302183627 sz=-577715779 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LTRIM(((('phRF'))<(('805762171')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (((NULL)IS(0.1352950369272956)), (('1236014310') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2049336477 0 2 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1943828519 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('1820337719')) NOT BETWEEN ((x'')) AND ((x'86f7'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS BLOB) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-416563088')*(NULL)))OR((NULL IN ()))))AND(CAST(1e500 AS BLOB))))OR(('80283005' IN (NULL)))))AND(CASE WHEN x'' THEN x'716e' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR(NULL)))AND(1.585070348E9)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1200171222 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1392605443 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '73686242 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6398' COLLATE BINARY, ((NULL) NOT BETWEEN (x'') AND (-4.27905909E8)), ((((0.3894677727826278)OR(0.9625175091800862)))OR('-1469748090')), (('-1069980544') NOT BETWEEN (465551561) AND (x'')), (0Xffffffffbe3807c0 IN (NULL))))>=(((('1488831292')|(NULL)), CASE '?shE'  WHEN 0.8122180761904939 THEN '' END, (((('')OR('1095080213')))AND(x'')), (((0x528a2c14)) NOT BETWEEN ((NULL)) AND ((0X281791b0))), (((((((('-256275088')OR(NULL)))OR(NULL)))AND('')))AND(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=115665356 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1064105989 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1161895502 sz=609580186 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1205573509'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1016047311 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '774963915 -1153690442 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-1564671622') NOT BETWEEN (-1779398888) AND (NULL)) AS REAL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL)GLOB(NULL))  WHEN highlight('-314163391', NULL, 0xffffffffed463f41, NULL) THEN (~ ('-1258910426')) ELSE CASE ''  WHEN -1970979111 THEN 0.710543367414846 ELSE '1419259344' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('1667585748' AS BLOB) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1530147198'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1880960227 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9145396236918869 THEN 'r' END)OR((+ (0.3577960280766673)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-256275088 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1909558041 0 sz=-2049336477'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('%}c\' COLLATE RTRIM) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1990716721'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')<<(NULL)) IN (((x'')||('-1273437359')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-733030665 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0x1f6f1ed IN ())) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ()))*(('' IN (x'9d35', 0x13679de4)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(x''))||(CASE WHEN NULL THEN NULL WHEN '' THEN '-1417354954' WHEN -1840448801 THEN x'' ELSE 0.39449965627683903 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1919187309 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '476161714 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=200483078 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-9223372036854775808 sz=-2008920977 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1360873542 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-509258124 sz=-756910774 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1008574854 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*('*]'))) ISNULL); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1915726943 sz=1891556624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1155596589'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-878174778 sz=770142624 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=682651062'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 953767193 sz=-1648096874'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-919897555 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-427905909 IN (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=2081176799 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((+ (0.31543935668034095)) IN (0X3513e956 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1152519375 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1103624256 sz=210548311 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1036562672 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-876091797'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('1784931449'))) BETWEEN (((-1690439992) BETWEEN ('-1239572040') AND ('-1847955238'))) AND ('㽁''𢡊{i鄽W')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1236014310 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)GLOB((+ (0.9396782961523694)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.27759537148358815') NOT BETWEEN (x'') AND (NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '309506387 sz=413320805 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((LOWER(DISTINCT NULL))OR(CASE WHEN 0.19037517798911796 THEN x'' END)))AND(((0.541325196681188)<(NULL)))))AND((((((((('')OR(0.6783212633990633)))OR(NULL)))AND('++')))AND(0x58bdc33c)))))OR(((NULL) ISNULL))))OR(0x3ecb8aff)))OR((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x''))) NOT BETWEEN (('J5h}x' IN ())) AND ((+ ('ch7D⇈F')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-733030665 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')GLOB('-1143292054')) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 888789248 sz=681344769 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1281267421 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '280519820 196089311 sz=1089769982 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X236e090b)>=(NULL)))*(((0.5079738866269343) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1524007101'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-7.33030665E8 IN ()))>=((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=796228599 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN '#8Y	' THEN x'1afe' END AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL))LIKE((((('G?P-0!O''7')OR(NULL)))OR(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1487928965') IS TRUE), ('!m' IN ()), 0.9291757854285843 COLLATE RTRIM))<=((((0.40424152739664554) NOTNULL), ((('J(ng-%w'))!=((0.6077431220368712))), ((-165936659) IS TRUE)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2087206922 sz=-1644078043 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1472422186'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('gFa'))<>((CASE WHEN 'Xa' THEN -1843725277 ELSE '0.4682824542279944' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('Iu䰢}门	{>O')<(0.10738010910385831)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (-8.78174778E8))) BETWEEN (0.5376920483783578 COLLATE BINARY) AND ((((0.7221761298602692))>((0.05702440293618238))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1813952281'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1333197831 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=399673503 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') BETWEEN (NULL) AND ('1955228224')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1847955238 sz=1667585748 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7395588225540294) ISNULL))>((NULL IN ('-90102295')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-106487343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=98459467 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 252613105 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffffed25df44) IS FALSE) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1613658615 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '32961005 sz=-149358420 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2044065591 0 sz=948093498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=532342449 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(LIKELIHOOD(3.1690794E7, 0.5968628016001141)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1711605583 IN ('1728222858', NULL)) IN (0.12261350604182342 COLLATE RTRIM, (- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-420235384 2104088646 sz=-153414087 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=774963915 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- ('998989221')) THEN (0.7769305349507375 IN ()) ELSE (- (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=272631713'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1821735041 sz=-461645447 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffff8459cd77 IN ())) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 4 sz=1418159622 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=996566389 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, NULL, '+k햤T-q냊')) BETWEEN ((('0.7219992770496406' IN ()), ((('30724298'))<=(('5496110'))), ((NULL) NOT BETWEEN (0.0973138125606291) AND ('FCf3䄌[L]')))) AND (((((0.4002730286866132))>=((1.205573509E9))), (((x'')) NOT BETWEEN ((x'')) AND ((x'5721'))), CAST('' AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('*!' IN ())))<(((('0.4682824542279944')<=(-4.27905909E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09921807015700046, 0.24772329789993552, NULL)) NOT BETWEEN ((TRIM('465551561'), (NOT ('2081176799')), CAST(NULL AS INTEGER))) AND ((((NULL) ISNULL), ((NULL)>>('-388380512')), ((NULL)<(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-470045016 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (json_remove('1423722504', x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=957068318 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (x'eb6c')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1016047311 sz=-827844305'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0x2371d38b)OR(x'')))OR(NULL)))OR(CASE WHEN '6/楸*' THEN x'' ELSE x'' END)))AND(((((NULL)AND(0.91595213838675)))AND(x'')))))OR(((NULL) NOT BETWEEN ('[#)ziq귿2') AND (-1602431192)))))AND((('-373625168')>(x'')))))OR(CAST(0x4c87c5ec AS BLOB))))AND(x'526a' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.18712102133163233) IS TRUE))OR((((x'', x'', 0.9544945115360718)) NOT BETWEEN ((x'f472', 719866472, 2.72631713E8)) AND (('-1425138806', '1185204063', 0.41822979096749047))))))OR(((NULL)>=(x'6b85')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-985501433 -325423569 sz=846487058 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.9038500010238586 IN ('548284620')))AND((((('')OR(NULL)))AND(NULL)))))AND(((0.1579863784283152)<<(x'')))))OR(CASE WHEN 8.46487058E8 THEN 'BN' END)))OR(((((1e500)OR(0X646b20c6)))OR(0.36886668721109606)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=728698889 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN NULL ELSE 'j읟C_HRi' END) NOT BETWEEN ((- ('-2031547046'))) AND (CAST(0.14330771930369224 AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'a932' AS REAL))GLOB((((('2T')AND(NULL)))OR(x'8172')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1366164406 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1341375791 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1129720196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1119041254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('22557316', 0.8007035379322135, -1213145067)) BETWEEN (('-2049336477', x'', x'9957')) AND (('FL4', NULL, x'50b1')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('oqr#,io%'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 532342449 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '' END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.16700749941547743)AND('')))OR(NULL)) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN ((('8}qQA')>(0.7906670652625103))) AND (CAST(x'' AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1482712985 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('?t8Ij}6H砄' AS INTEGER) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-833127586'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (x''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1105446480 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2030258967 sz=-2146284710'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1788855279'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 1.820337719E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(DISTINCT 0.3916376503426676, NULL))OR((x'' IN ()))))AND(CAST(x'' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.943486816063079) IS FALSE) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') BETWEEN ('-22895467') AND (-1943828519))))>(((('476161714')>('yearsn'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '42420945 sz=-2135488367'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(NULL))) NOT BETWEEN ((('0.7819378089506437') NOT NULL)) AND ('-' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.21101519145080605 IN ('Fx')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1091552470 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1487928965'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN UPPER(DISTINCT x'b1c4') THEN ((NULL) BETWEEN (x'') AND (0.37129094226236947)) ELSE '727030650' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=272631713 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 648821277 sz=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1798150009'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((('[el~.f\r')) NOT BETWEEN (('440177625')) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('C>*i'))<=(('P*㢯3*')))) NOT BETWEEN (CHANGES()) AND ((('oe') NOT BETWEEN (-1360873542) AND ('-523129812')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1423446910 sz=32961005 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1845449100 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '252613105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-182956674 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(NULL) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1755593204 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((NULL) NOT BETWEEN (0.16570271804890413) AND ('-1961744452')))) AND ((('-2031547046' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=726219704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1066514561 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT CAST(0.35944208021903645 AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('#T#}컪失NE' IN ()) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.005027482343464507)<=('L0>I)\(SZ')))<=((((0.5700175596546232))=((0.5848949158564213))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '353975823'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE ''  WHEN x'' THEN x'6550' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1369358714 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=1699612874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-733030665 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 0 sz=2081176799 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=345330727'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (0.466255172072095) AND ('')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') IS TRUE) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'd2a2'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((((((('-939628452')AND('')))AND('')))OR('')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1519560999 sz=-1425138806 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) IS FALSE) THEN (NULL IN (0Xffffffff9635b3ac)) ELSE ((x'')+('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=78561201 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=474974237'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '-1248527004' THEN 'vy?''K\n' END)IS NOT((('')IS NOT(x'd644')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1840448801'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS REAL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-793718903'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-288342085 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1016047311')GLOB(1.721298143E9))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1560705351 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'44d5', '#YX', x'dcdd6b39')) BETWEEN (('399106746', NULL, '966661328')) AND ((1505435800, '83700350', 'r{7	R'))))GLOB(0.9478958350676082)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2129752441 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1129232316 sz=840042473 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=994268967'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('i[]#') IS TRUE) IN ()); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (-2.031547046E9 IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '4 2 sz=589499254 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((' W쓱FKJCOY') BETWEEN (NULL) AND ('1667585748'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=184229453'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (x'') AND (x''))) BETWEEN ((('846487058')<(NULL))) AND (((NULL)AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 2 sz=-1613658615'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((0X58bdc33c COLLATE BINARY)) AND ((LIKELY(x'8260')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(LIKELY(NULL), CAST('998989221' AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ']*/v(AX4'  WHEN NULL THEN '52953651' ELSE 0.7816515042370988 END) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0xffffffffffc66d37))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('2060362140') IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.7189999781635706 COLLATE BINARY IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6520875578448281) NOT BETWEEN (NULL) AND (NULL))) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1015325928'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT BETWEEN ('7C走\_&') AND (NULL)))OR((+ (NULL)))))OR((('e^^Uc')|(-1.49869673E8)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('32961005')) NOT BETWEEN ((x'')) AND ((((NULL) NOT BETWEEN (0xffffffffeed1176a) AND (''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('{}')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-416563088 sz=1135004983 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL THEN NULL END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=326825638 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1672172884 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.5869903981700593')OR(NULL)))IS(((x'') BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1588346163'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('>*H!' IN (NULL, '-1074643181')))AND(CAST('' AS INTEGER))))AND(0.5378194021625805)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1681720037'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x''))<=((x''))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'1a4f'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=353975823 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-97984073 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1016047311 sz=-1213145067 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '465551561 sz=1308204238 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1019642973 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1297985285 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1878267522 sz=-1834923676'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '977920632 sz=1834119038 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1202924060 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 1.487928965E9))<=((((x'')) NOT BETWEEN ((2.081176799E9)) AND ((0.10641692388638413))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1079346162 sz=303017471 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1949342517 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0Xffffffffcea8192f))<=((x'')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1753028605 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('2110646624' AS TEXT)) NOT BETWEEN ((+ (0.8937424384156198))) AND ('Z' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('')) BETWEEN ((x'')) AND ((NULL))))||(NULLIF(0X236e090b, 0.16443815507052517))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT BETWEEN (0.541325196681188) AND (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1236014310 sz=594413835 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1185204063 sz=615528086'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=200483078'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('yNWt~g>A7' AS NUMERIC)) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=928281244'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(((x'5505') NOT NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x''  WHEN x'' THEN x'' ELSE NULL END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -470045016 sz=987451454 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1023851581 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5900315799312679) NOT BETWEEN (NULL) AND (NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1074643181 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-875161438 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('1728067262', ']Gn(', 1807513606)) BETWEEN (('1727062722', x'', x'74f634c9')) AND ((0.8581947423821251, '-1016047311', '7<3r?&搿vt')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((- (x''))))!=(((((('3')AND(0.8873025576305991)))AND(''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((-360264934)OR(NULL)))AND(-35135597)))OR(CAST(x'' AS NUMERIC))))AND((('e')<=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (x'9be0')) THEN x'baf5' ELSE ((((NULL)AND(0.748188197583664)))OR('1508861790')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1015325928 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '774963915 0 sz=-470045016'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -507443104 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=840042473 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=939622848 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1236014310 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-2049336477 sz=600568112'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('') NOTNULL))) AND ((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1674828226 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=517585377 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-511766779 sz=-695875035 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1755593204'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8392726291464598) NOT BETWEEN ('487804396') AND ('T')))IS(0.4713126993803952)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-212469607 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=600568112 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1274503703 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-227377548 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-884397167') NOT BETWEEN (NULL) AND (0.6482861390644427))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'mUd,Ⲹ?_<\'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('-1613658615') AND (NULL)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1758102716 0 sz=32961005'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffffe72bc070; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1144252531 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-108581382 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')AND(x'')))AND('-1628113374')) COLLATE NOCASE; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((('-942329050' IN ()))AND(((0.7578647164441709) BETWEEN (0Xffffffff83e68991) AND (3.53975823E8)))))AND((('Tt') BETWEEN (0.3894677727826278) AND (-1.49869673E8)))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '309506387 4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-850058654 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=849106126'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')IS NOT(0.9249143280926138)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-711617512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE RTRIM)AND(((x'') BETWEEN (x'') AND (0.3593058343522466)))))AND(UPPER(DISTINCT '-1296294890'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('쌼''௣\rr%iZ9')) BETWEEN (('i' COLLATE BINARY)) AND (('' COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2081176799'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1308775238 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1161149133 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1364424350 -111060702 sz=998989221 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '73686242 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1859898602')AND(x'8333')))OR(0xfffffffff7112b97)))AND('-1016047311')))OR(NULL))) BETWEEN (x'') AND (CASE -1.69300974E8  WHEN NULL THEN NULL ELSE x'307f' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_extract(0.40112652458604814, x'', 'ErLYTUIEj', 0.30753459585771337) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1983211644 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('303017471'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1082043811 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-329826718'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1764955953)>(-1216911154)))|(((x'') NOT BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (x'')) IN ('1428899632' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE '\['  WHEN '' THEN '-1016047311' ELSE '22557316' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST(x'0e03c365' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(json_extract(0xffffffffb73bf70a, x''), LIKELY(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 699577567 sz=1487928965'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=22557316'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('akSe_f#Ry')))<>((((NULL))==((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((rtreenode('*', NULL))OR(CASE WHEN NULL THEN NULL ELSE '' END)))OR(CAST(0Xffffffff8993a06a AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=697690879'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'7c5f' THEN 'J%/r>(U#' END)>(CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-646752241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-562208687 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL) NOT BETWEEN ('1158534564') AND (0.6829871693781961)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-9.89039954E8, '218303140', 0Xffffffffbcbc4d37)) NOT BETWEEN ((CASE WHEN 'TⰷxWM/m' THEN 'kW~Gek~' END, ((-1671788269) BETWEEN ('397986575') AND (0.06401095431924297)), TIME(NULL, '1679579307', 0.7395185445451881))) AND (((('*6') BETWEEN ('') AND (NULL)), '46' COLLATE BINARY, x'909c' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=461024834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'' THEN ((x'')IS('O[')) ELSE ((((((((-6.31762956E8)AND(0.4908069795299511)))OR(0x75b15ada)))OR('')))AND(0.8519483339687598)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('nh')>>(' ')))AND(CAST('31690794' AS TEXT))))AND(HEX(1205573509))))OR(CAST(x'' AS INTEGER))))OR((('-1213145067')<<(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(('448119914' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('''(R}M|0' AS BLOB))OR(COALESCE(0.8159643316614534, ''))))OR((('w')*(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=212633669'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-737153483 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2147221931'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-219319835 sz=1898494563 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'40ac') NOTNULL))/((0.08142420276369655 IN ('-490297174')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1667585748 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1476523153; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-481458908 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1213145067 -2048304476 sz=1487928965 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2110646624'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1488831292 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-879371148 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2018062652 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('928281244' AS TEXT)) BETWEEN ((0.14623676181916268 IN ())) AND (COALESCE(DISTINCT 0x50dd044f, x'd743'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1820337719 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'') NOT BETWEEN (x'') AND ('')))AND((((x''))<((160563767))))))OR(CASE NULL  WHEN '' THEN x'' WHEN '-1484492205' THEN NULL WHEN NULL THEN '200483078' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME(x'a262' COLLATE BINARY, x'', CASE x''  WHEN NULL THEN 0.9121430351823112 END, CASE WHEN 0.038633382483467704 THEN 0x3987e51d END, x'' COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0X20fdc596 AS REAL) IN ((((NULL)) NOT BETWEEN ((9.98989221E8)) AND ((3.03017471E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1380456276'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1016047311 0 sz=465551561 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=699577567 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=786029144'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=968610887'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT ((((0X10f545f4)OR(0.4572708325995023)))AND(-1454871894)), ((x'') NOT BETWEEN (0.9084406553867113) AND (-1.798150009E9))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 348529492 sz=1784931449'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT NULL))+((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('0.22385726845966103' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffba7f2211 IN ()))GLOB(((((0.3741630739885896)OR(0.6829871693781961)))AND('0.005027482343464507')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL))==(('2081176799')))))<((x'bf4c' COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((NULL)OR(x'86e7')))OR('888789248'))  WHEN ((0.948823134731916)>=(x'')) THEN ((0.009698032084116126)>=(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')/(NULL)) IN ((NULL IN ()), CAST(x'4274' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.9145396236918869)<>(x'')) THEN ((x'')&(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '600568112 -268467331'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-147106408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1438590379 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1798150009 sz=1470752167'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE (((0.27920428637216876))<>(('946312403')))  WHEN CAST(0.9997752807385935 AS TEXT) THEN CASE WHEN 'ᒚ)g5PsK' THEN 0xffffffff9cab7502 ELSE -1e500 END WHEN ((((x'5492d285')OR(NULL)))AND(x'')) THEN (('-1194083160') NOT BETWEEN (0.7650824682770344) AND (x'')) WHEN (((x'')) NOT BETWEEN ((0.4681315388998778)) AND ((0.689064511639852))) THEN (- (0X6a63e479)) ELSE ((0X6819e892)-(0.9857763621165145)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1604450492 1366164406'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)<('fN')))AND(((x'') IS TRUE))))AND(CASE WHEN 'ㆸ>' THEN '1<' END)))AND(((x'3c2b') NOT BETWEEN (0x5e1061fb) AND (0.04354162315707355)))))OR(CASE 'R'''  WHEN x'51d4' THEN '' WHEN '-534967180' THEN 0.3535453221321847 WHEN x'' THEN '52953651' ELSE NULL END)))AND(CAST(NULL AS REAL))))AND(((((0.07862833299217875)OR(x'')))OR('972704057')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1778691962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=179400535 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-827844305')<>(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ('888789248')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-287868365 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=734928822 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=251712638'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('WЎxk')) AND ((0X43df50a5))))&(CASE NULL  WHEN 0.7808076099344564 THEN 'MZ咖A' ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-989039954 sz=1073504021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('RGI')LIKE(x'be0a')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(0xffffffffc6b3d416, x'') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('465551561') NOT NULL))AND(((NULL)&(0Xffffffffb7b0e015)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1264915774 sz=-33032162 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((x'') IS FALSE) THEN ((((((((NULL)OR(NULL)))AND(x'')))AND(1820337719)))OR(x'')) ELSE ((NULL) NOT BETWEEN (NULL) AND ('2144389220')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-416563088 sz=-1070590201 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-33310690 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1064682512 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 'Q\瀂j^2' THEN 0.3078587246634835 END) NOT BETWEEN ('Zv') AND (((((NULL)AND(x'')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1778075251 sz=590069977'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-564887730 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1958075889 sz=1784931449'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1877280795 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN CASE x''  WHEN 0.9188498357639822 THEN 0.21308544675563368 ELSE '1733020399' END THEN (('0.27759537148358815')==(5.32342449E8)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-9223372036854775808'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-268764677 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1062224818 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1847955238'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE STRFTIME('197944617' COLLATE RTRIM, ((((0.3894677727826278)OR(0.12901408909113365)))AND(NULL)), (+ (NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1318318260 -296219133'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1434068909'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1821529731') BETWEEN (x'') AND ((NOT (0.452439665238187)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '307616770 sz=-1436718972'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffd915ddf9)%(NULL)))<>('')); -- 0ms;
PRAGMA application_id = 7147549736884906019; -- 0ms;
PRAGMA wal_autocheckpoint = 1389356100769358291; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
PRAGMA short_column_names; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0M9E_DA'), (NULL), ('1807513606'), (-1.840448801E9), (x'c27d'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.47518713313505156); -- 0ms;
REINDEX; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.07997349398315767); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.2721840874931004, 0.6798756717715914); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE vt0 SET c0=NULL WHERE ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1))) NOTNULL); -- 0ms;
UPDATE vt0 SET c1='774963915', c1=0.37358309648672827; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1225126970); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1591677341); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14511'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE vt0; -- 1ms;
PRAGMA reverse_unordered_selects; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE vt0 SET (c1)=('-1780604330') WHERE ((0.08996393425570903)IS((((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c0, x''))))); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-511351180', 'QgU'); -- 1ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2144559566); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '25756'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'', NULL); -- 1ms;
REINDEX RTRIM; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1264915774);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 770045015); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1=-802109934, c1=0.45347974303288574 WHERE vt0.c1 COLLATE NOCASE; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 TEXT ); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 641774663);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DELETE FROM rt0 WHERE (- ((rt0.c5 IN ()))); -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR FAIL rt0 SET c1=0.8948326529918702; -- 0ms;
ANALYZE vt0; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0, c5) VALUES ('', '200483078', '痔', x'078d'); -- 0ms;
UPDATE OR ABORT rt0 SET c1='-2087206922', c3=x'' WHERE ((((rt0.c0) NOT NULL))>(NULL)); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('689996841', 9223372036854775807); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.7219992770496406), (0.3775041285468621, 0.6024085729590237), ('-1753410739', NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO vt0(c0, c1) VALUES (x'1805', '0.5376920483783578'), (1820337719, x'f6bb'), ('-1334073387', 0.39209333287173886); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c4) VALUES (-2031547046, 0.6767148428294342, NULL); -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (x'');
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT rt0.c0) COLLATE NOCASE COLLATE BINARY) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c0) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT rt0.c0) COLLATE NOCASE COLLATE BINARY) ORDER BY vt0.c1 DESC;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT rt0.c0) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (TRIM(DISTINCT rt0.c0) COLLATE NOCASE COLLATE BINARY) ORDER BY vt0.c1 DESC;
SELECT * FROM rt0 WHERE ((((((rt0.c4))==((rt0.c3))))||(((((rt0.c2)OR(rt0.c5)))OR(rt0.c5))))) ORDER BY ((COALESCE(DISTINCT rt0.c0, rt0.c4))IS(((((rt0.c0)OR(rt0.c4)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4))==((rt0.c3))))||(((((rt0.c2)OR(rt0.c5)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c0, rt0.c4))IS(((((rt0.c0)OR(rt0.c4)))AND(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c4))==((rt0.c3))))||(((((rt0.c2)OR(rt0.c5)))OR(rt0.c5))))) ORDER BY ((COALESCE(DISTINCT rt0.c0, rt0.c4))IS(((((rt0.c0)OR(rt0.c4)))AND(rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4))==((rt0.c3))))||(((((rt0.c2)OR(rt0.c5)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY ((COALESCE(DISTINCT rt0.c0, rt0.c4))IS(((((rt0.c0)OR(rt0.c4)))AND(rt0.c1))))  NULLS LAST);
SELECT * FROM rt0 WHERE ((((((rt0.c4))==((rt0.c3))))||(((((rt0.c2)OR(rt0.c5)))OR(rt0.c5))))) ORDER BY ((COALESCE(DISTINCT rt0.c0, rt0.c4))IS(((((rt0.c0)OR(rt0.c4)))AND(rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c1)))OR(vt0.c0)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))OR(vt0.c0)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c1)))OR(vt0.c0)))AND(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((((NOT (vt0.c1)))OR(vt0.c0)))AND(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((NOT (vt0.c1)))OR(vt0.c0)))AND(vt0.c1)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c2)OR(vt0.c0)))OR(0.9477176048133975)) AS BLOB)) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(vt0.c0)))OR(0.9477176048133975)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c2)OR(vt0.c0)))OR(0.9477176048133975)) AS BLOB)) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt0.c2)OR(vt0.c0)))OR(0.9477176048133975)) AS BLOB)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((((rt0.c2)OR(vt0.c0)))OR(0.9477176048133975)) AS BLOB)) ORDER BY ((UNLIKELY(DISTINCT rt0.c1)) IS FALSE)  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' ELSE vt0.c1 END)OR((- (vt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) ORDER BY CAST(rt0.c2 AS REAL);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' ELSE vt0.c1 END)OR((- (vt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 AS REAL));
SELECT * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' ELSE vt0.c1 END)OR((- (vt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) ORDER BY CAST(rt0.c2 AS REAL);
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' ELSE vt0.c1 END)OR((- (vt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST(rt0.c2 AS REAL));
SELECT * FROM rt0, vt0 WHERE (((((CASE WHEN rt0.c4 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN '' ELSE vt0.c1 END)OR((- (vt0.c0)))))AND(((rt0.c2)GLOB(rt0.c1))))) ORDER BY CAST(rt0.c2 AS REAL);
SELECT ALL * FROM rt0 WHERE (((x'5deb')>(((rt0.c0) BETWEEN (']N') AND (rt0.c4))))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'5deb')>(((rt0.c0) BETWEEN (']N') AND (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'5deb')>(((rt0.c0) BETWEEN (']N') AND (rt0.c4))))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'5deb')>(((rt0.c0) BETWEEN (']N') AND (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (((x'5deb')>(((rt0.c0) BETWEEN (']N') AND (rt0.c4))))) ORDER BY rt0.c2 COLLATE NOCASE  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))<=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))<=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))<=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))<=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT * FROM vt0, rt0 WHERE (rt0.c4) ORDER BY (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))<=(((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))));
SELECT * FROM rt0 WHERE ('') ORDER BY ((((((((((rt0.c0) ISNULL))OR(rt0.c4)))OR(((rt0.c3) NOT NULL))))AND(CASE 0.5572688905219024  WHEN rt0.c0 THEN 0.38627110019758415 END)))OR(((rt0.c4)-(rt0.c0)))) DESC  NULLS LAST, rt0.c1 DESC, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) IS TRUE);
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) ISNULL))OR(rt0.c4)))OR(((rt0.c3) NOT NULL))))AND(CASE 0.5572688905219024  WHEN rt0.c0 THEN 0.38627110019758415 END)))OR(((rt0.c4)-(rt0.c0)))) DESC  NULLS LAST, rt0.c1 DESC, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) IS TRUE));
SELECT * FROM rt0 WHERE ('') ORDER BY ((((((((((rt0.c0) ISNULL))OR(rt0.c4)))OR(((rt0.c3) NOT NULL))))AND(CASE 0.5572688905219024  WHEN rt0.c0 THEN 0.38627110019758415 END)))OR(((rt0.c4)-(rt0.c0)))) DESC  NULLS LAST, rt0.c1 DESC, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) IS TRUE);
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM rt0 ORDER BY ((((((((((rt0.c0) ISNULL))OR(rt0.c4)))OR(((rt0.c3) NOT NULL))))AND(CASE 0.5572688905219024  WHEN rt0.c0 THEN 0.38627110019758415 END)))OR(((rt0.c4)-(rt0.c0)))) DESC  NULLS LAST, rt0.c1 DESC, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) IS TRUE));
SELECT * FROM rt0 WHERE ('') ORDER BY ((((((((((rt0.c0) ISNULL))OR(rt0.c4)))OR(((rt0.c3) NOT NULL))))AND(CASE 0.5572688905219024  WHEN rt0.c0 THEN 0.38627110019758415 END)))OR(((rt0.c4)-(rt0.c0)))) DESC  NULLS LAST, rt0.c1 DESC, ((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3))) IS TRUE);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c4) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c4) ORDER BY rt0.c3  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c3  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c4) ORDER BY rt0.c3  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS NUMERIC)) ORDER BY ((((vt0.c1)>=(rt0.c4)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ASC  NULLS FIRST, (((rt0.c3 IN ())) NOT BETWEEN (((((rt0.c3)AND(x'')))OR(rt0.c2))) AND (rt0.c2)) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<=(('618208023' IN (vt0.c0, rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1)>=(rt0.c4)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ASC  NULLS FIRST, (((rt0.c3 IN ())) NOT BETWEEN (((((rt0.c3)AND(x'')))OR(rt0.c2))) AND (rt0.c2)) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<=(('618208023' IN (vt0.c0, rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS NUMERIC)) ORDER BY ((((vt0.c1)>=(rt0.c4)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ASC  NULLS FIRST, (((rt0.c3 IN ())) NOT BETWEEN (((((rt0.c3)AND(x'')))OR(rt0.c2))) AND (rt0.c2)) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<=(('618208023' IN (vt0.c0, rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS NUMERIC)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((vt0.c1)>=(rt0.c4)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ASC  NULLS FIRST, (((rt0.c3 IN ())) NOT BETWEEN (((((rt0.c3)AND(x'')))OR(rt0.c2))) AND (rt0.c2)) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<=(('618208023' IN (vt0.c0, rt0.c2)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CAST(vt0.c1 AS NUMERIC)) ORDER BY ((((vt0.c1)>=(rt0.c4)))IS NOT((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt0.c4))))) ASC  NULLS FIRST, (((rt0.c3 IN ())) NOT BETWEEN (((((rt0.c3)AND(x'')))OR(rt0.c2))) AND (rt0.c2)) DESC, ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)))<=(('618208023' IN (vt0.c0, rt0.c2)))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'') NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((x'') NOTNULL));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)/(rt0.c3))) AND (((rt0.c0)>>(rt0.c0))))) ORDER BY CAST(((rt0.c2)GLOB(rt0.c4)) AS REAL)  NULLS LAST, ((((((-558745774)>=(rt0.c3)))AND(0.8177570554182799)))OR(rt0.c3))  NULLS FIRST, CAST((rt0.c4 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)/(rt0.c3))) AND (((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)GLOB(rt0.c4)) AS REAL)  NULLS LAST, ((((((-558745774)>=(rt0.c3)))AND(0.8177570554182799)))OR(rt0.c3))  NULLS FIRST, CAST((rt0.c4 IN ()) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)/(rt0.c3))) AND (((rt0.c0)>>(rt0.c0))))) ORDER BY CAST(((rt0.c2)GLOB(rt0.c4)) AS REAL)  NULLS LAST, ((((((-558745774)>=(rt0.c3)))AND(0.8177570554182799)))OR(rt0.c3))  NULLS FIRST, CAST((rt0.c4 IN ()) AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)/(rt0.c3))) AND (((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c2)GLOB(rt0.c4)) AS REAL)  NULLS LAST, ((((((-558745774)>=(rt0.c3)))AND(0.8177570554182799)))OR(rt0.c3))  NULLS FIRST, CAST((rt0.c4 IN ()) AS INTEGER));
SELECT COUNT(*) FROM rt0 WHERE (((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END) NOT BETWEEN (((rt0.c0)/(rt0.c3))) AND (((rt0.c0)>>(rt0.c0))))) ORDER BY CAST(((rt0.c2)GLOB(rt0.c4)) AS REAL)  NULLS LAST, ((((((-558745774)>=(rt0.c3)))AND(0.8177570554182799)))OR(rt0.c3))  NULLS FIRST, CAST((rt0.c4 IN ()) AS INTEGER);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN '1706339497' WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN '1706339497' WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN '1706339497' WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c1 END) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c1 THEN '1706339497' WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c1 END) NOTNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((CASE rt0.c0  WHEN rt0.c1 THEN '1706339497' WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c1 END) NOTNULL));
SELECT * FROM rt0 WHERE ((NOT (((((0xffffffff837d51d9)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((0xffffffff837d51d9)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((((0xffffffff837d51d9)OR(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((0xffffffff837d51d9)OR(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((NOT (((((0xffffffff837d51d9)OR(rt0.c1)))AND(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((INSTR('', rt0.c1)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END) AND (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))) WHERE (((((rt0.c1)AND(vt0.c0)))AND('1275028513')) COLLATE RTRIM) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (TRIM(rt0.c3, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(vt0.c0)))AND('1275028513')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((INSTR('', rt0.c1)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END) AND (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (TRIM(rt0.c3, rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((INSTR('', rt0.c1)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END) AND (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))) WHERE (((((rt0.c1)AND(vt0.c0)))AND('1275028513')) COLLATE RTRIM) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (TRIM(rt0.c3, rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(vt0.c0)))AND('1275028513')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((INSTR('', rt0.c1)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END) AND (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (TRIM(rt0.c3, rt0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((INSTR('', rt0.c1)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt0.c0 END) AND (((((rt0.c3)AND(rt0.c3)))AND(rt0.c1)))) WHERE (((((rt0.c1)AND(vt0.c0)))AND('1275028513')) COLLATE RTRIM) ORDER BY (((~ (rt0.c1))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (TRIM(rt0.c3, rt0.c0))) DESC;
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(NULL))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(NULL))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(NULL))) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(NULL))) NOT NULL));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (CASE ((((rt0.c5)OR(rt0.c2)))OR(rt0.c0))  WHEN UNLIKELY(rt0.c4) THEN ((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)) ELSE ((rt0.c4)>>(rt0.c3)) END) ORDER BY ((x'') NOT BETWEEN (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c5)OR(rt0.c2)))OR(rt0.c0))  WHEN UNLIKELY(rt0.c4) THEN ((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)) ELSE ((rt0.c4)>>(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'') NOT BETWEEN (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL))));
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (CASE ((((rt0.c5)OR(rt0.c2)))OR(rt0.c0))  WHEN UNLIKELY(rt0.c4) THEN ((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)) ELSE ((rt0.c4)>>(rt0.c3)) END) ORDER BY ((x'') NOT BETWEEN (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((CASE ((((rt0.c5)OR(rt0.c2)))OR(rt0.c0))  WHEN UNLIKELY(rt0.c4) THEN ((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)) ELSE ((rt0.c4)>>(rt0.c3)) END) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((x'') NOT BETWEEN (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL))));
SELECT * FROM rt0, vt0 NOT INDEXED WHERE (CASE ((((rt0.c5)OR(rt0.c2)))OR(rt0.c0))  WHEN UNLIKELY(rt0.c4) THEN ((((rt0.c2)OR(vt0.c0)))OR(vt0.c1)) ELSE ((rt0.c4)>>(rt0.c3)) END) ORDER BY ((x'') NOT BETWEEN (((((((((rt0.c3)AND(rt0.c4)))OR(rt0.c5)))OR(rt0.c3)))AND(rt0.c2))) AND (((rt0.c2) NOTNULL)));
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN (NULLIF(DISTINCT rt0.c0, rt0.c5)))) ORDER BY (((rt0.c4, vt0.c1, NULL)) BETWEEN ((((vt0.c0)GLOB(x'75c2ed63')), (- (rt0.c2)), 0.14276526032772607)) AND ((((vt0.c0)>=(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN (NULLIF(DISTINCT rt0.c0, rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c4, vt0.c1, NULL)) BETWEEN ((((vt0.c0)GLOB(x'75c2ed63')), (- (rt0.c2)), 0.14276526032772607)) AND ((((vt0.c0)>=(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN (NULLIF(DISTINCT rt0.c0, rt0.c5)))) ORDER BY (((rt0.c4, vt0.c1, NULL)) BETWEEN ((((vt0.c0)GLOB(x'75c2ed63')), (- (rt0.c2)), 0.14276526032772607)) AND ((((vt0.c0)>=(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN (NULLIF(DISTINCT rt0.c0, rt0.c5)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c4, vt0.c1, NULL)) BETWEEN ((((vt0.c0)GLOB(x'75c2ed63')), (- (rt0.c2)), 0.14276526032772607)) AND ((((vt0.c0)>=(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c1)) IN (NULLIF(DISTINCT rt0.c0, rt0.c5)))) ORDER BY (((rt0.c4, vt0.c1, NULL)) BETWEEN ((((vt0.c0)GLOB(x'75c2ed63')), (- (rt0.c2)), 0.14276526032772607)) AND ((((vt0.c0)>=(rt0.c4)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)), rt0.c0))) DESC  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (((rt0.c4) ISNULL) COLLATE NOCASE) ORDER BY 465551561;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY 465551561);
SELECT * FROM rt0, vt0 WHERE (((rt0.c4) ISNULL) COLLATE NOCASE) ORDER BY 465551561;
SELECT SUM(count) FROM (SELECT ((((rt0.c4) ISNULL) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY 465551561);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN (vt0.c0 IN (vt0.c0)) END WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (-1.798150009E9));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN (vt0.c0 IN (vt0.c0)) END ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (-1.798150009E9)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN (vt0.c0 IN (vt0.c0)) END WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (-1.798150009E9));
SELECT SUM(count) FROM (SELECT (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN (vt0.c0 IN (vt0.c0)) END ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (-1.798150009E9)));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON CASE (vt0.c0 IN ())  WHEN rt0.c2 COLLATE RTRIM THEN (vt0.c0 IN (vt0.c0)) END WHERE ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE RTRIM) ORDER BY ((rt0.c2 COLLATE BINARY) NOT BETWEEN (rt0.c3) AND (-1.798150009E9));
SELECT * FROM vt0, rt0 WHERE (LIKELY((((rt0.c2)) BETWEEN ((0xfffffffff8ba980c)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c2)) BETWEEN ((0Xfffffffff8ba980c)) AND ((rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LIKELY((((rt0.c2)) BETWEEN ((0xfffffffff8ba980c)) AND ((rt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((((rt0.c2)) BETWEEN ((0Xfffffffff8ba980c)) AND ((rt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (LIKELY((((rt0.c2)) BETWEEN ((0xfffffffff8ba980c)) AND ((rt0.c0)))));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2) NOT BETWEEN (x'6ac1') AND (rt0.c0)) IN ())) ORDER BY (('272631713') ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (x'6ac1') AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (('272631713') ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2) NOT BETWEEN (x'6ac1') AND (rt0.c0)) IN ())) ORDER BY (('272631713') ISNULL);
SELECT SUM(count) FROM (SELECT (((((rt0.c2) NOT BETWEEN (x'6ac1') AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY (('272631713') ISNULL));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((rt0.c2) NOT BETWEEN (x'6ac1') AND (rt0.c0)) IN ())) ORDER BY (('272631713') ISNULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c5 AS NUMERIC)))) ORDER BY ((((rt0.c1 IN (vt0.c0, rt0.c5))))>=((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c5 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1 IN (vt0.c0, rt0.c5))))>=((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c5 AS NUMERIC)))) ORDER BY ((((rt0.c1 IN (vt0.c0, rt0.c5))))>=((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(vt0.c1)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(rt0.c5 AS NUMERIC)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1 IN (vt0.c0, rt0.c5))))>=((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(vt0.c1)))))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((NOT (CAST(rt0.c5 AS NUMERIC)))) ORDER BY ((((rt0.c1 IN (vt0.c0, rt0.c5))))>=((((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))AND(vt0.c1)))))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0))) ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<<((~ (rt0.c0))))  NULLS LAST, ((((rt0.c0) IS FALSE)) BETWEEN (COALESCE(rt0.c3, rt0.c2, rt0.c0, vt0.c1, rt0.c3, rt0.c4)) AND (((rt0.c1)-('-1213145067')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<<((~ (rt0.c0))))  NULLS LAST, ((((rt0.c0) IS FALSE)) BETWEEN (COALESCE(rt0.c3, rt0.c2, rt0.c0, vt0.c1, rt0.c3, rt0.c4)) AND (((rt0.c1)-('-1213145067')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0))) ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<<((~ (rt0.c0))))  NULLS LAST, ((((rt0.c0) IS FALSE)) BETWEEN (COALESCE(rt0.c3, rt0.c2, rt0.c0, vt0.c1, rt0.c3, rt0.c4)) AND (((rt0.c1)-('-1213145067')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c2 IN (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<<((~ (rt0.c0))))  NULLS LAST, ((((rt0.c0) IS FALSE)) BETWEEN (COALESCE(rt0.c3, rt0.c2, rt0.c0, vt0.c1, rt0.c3, rt0.c4)) AND (((rt0.c1)-('-1213145067')))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c2 IN (vt0.c0))) NOT BETWEEN ((vt0.c1 IN ())) AND (rt0.c0))) ORDER BY ((((rt0.c0)IS NOT(rt0.c0)))<<((~ (rt0.c0))))  NULLS LAST, ((((rt0.c0) IS FALSE)) BETWEEN (COALESCE(rt0.c3, rt0.c2, rt0.c0, vt0.c1, rt0.c3, rt0.c4)) AND (((rt0.c1)-('-1213145067')))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c1)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c1)>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c1)>(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c1)>(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0)IS NOT(vt0.c0)) IN (((vt0.c1)>(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1)AND(0.19237506297960805)))AND(''))))>(('')))) ORDER BY '0.6139073798434725'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(0.19237506297960805)))AND(''))))>(('')))) IS TRUE)  as count FROM vt0 ORDER BY '0.6139073798434725'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1)AND(0.19237506297960805)))AND(''))))>(('')))) ORDER BY '0.6139073798434725'  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((vt0.c1)AND(0.19237506297960805)))AND(''))))>(('')))) IS TRUE)  as count FROM vt0 ORDER BY '0.6139073798434725'  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((((vt0.c1)AND(0.19237506297960805)))AND(''))))>(('')))) ORDER BY '0.6139073798434725'  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(LOWER(DISTINCT vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c0)GLOB(rt0.c1)), ((rt0.c2) IS FALSE))) AND ((((rt0.c5) NOTNULL), CAST(rt0.c4 AS REAL), ((rt0.c1)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(LOWER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c0)GLOB(rt0.c1)), ((rt0.c2) IS FALSE))) AND ((((rt0.c5) NOTNULL), CAST(rt0.c4 AS REAL), ((rt0.c1)AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(LOWER(DISTINCT vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c0)GLOB(rt0.c1)), ((rt0.c2) IS FALSE))) AND ((((rt0.c5) NOTNULL), CAST(rt0.c4 AS REAL), ((rt0.c1)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(LOWER(DISTINCT vt0.c0))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c0)GLOB(rt0.c1)), ((rt0.c2) IS FALSE))) AND ((((rt0.c5) NOTNULL), CAST(rt0.c4 AS REAL), ((rt0.c1)AND(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (UNLIKELY(LOWER(DISTINCT vt0.c0))) ORDER BY (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (((~ (vt0.c0)), ((rt0.c0)GLOB(rt0.c1)), ((rt0.c2) IS FALSE))) AND ((((rt0.c5) NOTNULL), CAST(rt0.c4 AS REAL), ((rt0.c1)AND(vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c3) BETWEEN ('EsRt') AND (0xffffffffeb47cad5)), 0.41280585101602896)) ORDER BY ((((rt0.c3) IS TRUE))LIKE((NOT (rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c3) BETWEEN ('EsRt') AND (0Xffffffffeb47cad5)), 0.41280585101602896)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) IS TRUE))LIKE((NOT (rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c3) BETWEEN ('EsRt') AND (0xffffffffeb47cad5)), 0.41280585101602896)) ORDER BY ((((rt0.c3) IS TRUE))LIKE((NOT (rt0.c5)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT ((rt0.c3) BETWEEN ('EsRt') AND (0Xffffffffeb47cad5)), 0.41280585101602896)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3) IS TRUE))LIKE((NOT (rt0.c5)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ((rt0.c3) BETWEEN ('EsRt') AND (0xffffffffeb47cad5)), 0.41280585101602896)) ORDER BY ((((rt0.c3) IS TRUE))LIKE((NOT (rt0.c5)))) DESC;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((((-1189649334)OR(vt0.c1)))OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c2)))AND((+ (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)) WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((((x'bf9e')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) AND (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN ((((x'bf9e')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) AND (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((((-1189649334)OR(vt0.c1)))OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c2)))AND((+ (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((((-1189649334)OR(vt0.c1)))OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c2)))AND((+ (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)) WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((((x'bf9e')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) AND (CAST(rt0.c3 AS REAL))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ())) NOT BETWEEN ((((x'bf9e')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) AND (CAST(rt0.c3 AS REAL)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((((-1189649334)OR(vt0.c1)))OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c2)))AND((+ (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((((((((((((-1189649334)OR(vt0.c1)))OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c2)))AND((+ (vt0.c1)))))AND(CASE WHEN vt0.c0 THEN rt0.c4 END)) WHERE ((((rt0.c0 IN ())) NOT BETWEEN ((((x'bf9e')) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) AND (CAST(rt0.c3 AS REAL))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((TRIM(DISTINCT rt0.c3, vt0.c1), rt0.c5 COLLATE BINARY, (~ (rt0.c5))))<((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(vt0.c1)), ((vt0.c0)+(vt0.c0)), ((vt0.c1)==(rt0.c4))))) WHERE (((0.8063735292727704) BETWEEN (((((rt0.c0)OR(1.820337719E9)))OR(rt0.c0))) AND (((rt0.c0)==(vt0.c0))))) ORDER BY ((((((((((((((rt0.c2)IS(rt0.c1)))OR((- (rt0.c1)))))OR(((((rt0.c4)OR(rt0.c2)))OR(vt0.c1)))))AND(rt0.c0)))AND(((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c5)))))AND(((vt0.c0)<=(rt0.c2)))))OR(((0.2778545138865489) BETWEEN (rt0.c2) AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8063735292727704) BETWEEN (((((rt0.c0)OR(1.820337719E9)))OR(rt0.c0))) AND (((rt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((TRIM(DISTINCT rt0.c3, vt0.c1), rt0.c5 COLLATE BINARY, (~ (rt0.c5))))<((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(vt0.c1)), ((vt0.c0)+(vt0.c0)), ((vt0.c1)==(rt0.c4))))) ORDER BY ((((((((((((((rt0.c2)IS(rt0.c1)))OR((- (rt0.c1)))))OR(((((rt0.c4)OR(rt0.c2)))OR(vt0.c1)))))AND(rt0.c0)))AND(((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c5)))))AND(((vt0.c0)<=(rt0.c2)))))OR(((0.2778545138865489) BETWEEN (rt0.c2) AND (rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((TRIM(DISTINCT rt0.c3, vt0.c1), rt0.c5 COLLATE BINARY, (~ (rt0.c5))))<((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(vt0.c1)), ((vt0.c0)+(vt0.c0)), ((vt0.c1)==(rt0.c4))))) WHERE (((0.8063735292727704) BETWEEN (((((rt0.c0)OR(1.820337719E9)))OR(rt0.c0))) AND (((rt0.c0)==(vt0.c0))))) ORDER BY ((((((((((((((rt0.c2)IS(rt0.c1)))OR((- (rt0.c1)))))OR(((((rt0.c4)OR(rt0.c2)))OR(vt0.c1)))))AND(rt0.c0)))AND(((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c5)))))AND(((vt0.c0)<=(rt0.c2)))))OR(((0.2778545138865489) BETWEEN (rt0.c2) AND (rt0.c4))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0.8063735292727704) BETWEEN (((((rt0.c0)OR(1.820337719E9)))OR(rt0.c0))) AND (((rt0.c0)=(vt0.c0))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON (((TRIM(DISTINCT rt0.c3, vt0.c1), rt0.c5 COLLATE BINARY, (~ (rt0.c5))))<((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(vt0.c1)), ((vt0.c0)+(vt0.c0)), ((vt0.c1)==(rt0.c4))))) ORDER BY ((((((((((((((rt0.c2)IS(rt0.c1)))OR((- (rt0.c1)))))OR(((((rt0.c4)OR(rt0.c2)))OR(vt0.c1)))))AND(rt0.c0)))AND(((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c5)))))AND(((vt0.c0)<=(rt0.c2)))))OR(((0.2778545138865489) BETWEEN (rt0.c2) AND (rt0.c4))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON (((TRIM(DISTINCT rt0.c3, vt0.c1), rt0.c5 COLLATE BINARY, (~ (rt0.c5))))<((((((((((rt0.c4)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)))OR(vt0.c1)), ((vt0.c0)+(vt0.c0)), ((vt0.c1)==(rt0.c4))))) WHERE (((0.8063735292727704) BETWEEN (((((rt0.c0)OR(1.820337719E9)))OR(rt0.c0))) AND (((rt0.c0)==(vt0.c0))))) ORDER BY ((((((((((((((rt0.c2)IS(rt0.c1)))OR((- (rt0.c1)))))OR(((((rt0.c4)OR(rt0.c2)))OR(vt0.c1)))))AND(rt0.c0)))AND(((((((((vt0.c1)OR(rt0.c4)))AND(rt0.c3)))OR(vt0.c1)))AND(rt0.c5)))))AND(((vt0.c0)<=(rt0.c2)))))OR(((0.2778545138865489) BETWEEN (rt0.c2) AND (rt0.c4))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY CAST(((rt0.c4)||(rt0.c4)) AS TEXT) DESC, (((rt0.c3)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)||(rt0.c4)) AS TEXT) DESC, (((rt0.c3)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((rt0.c3))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY CAST(((rt0.c4)||(rt0.c4)) AS TEXT) DESC, (((rt0.c3)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((rt0.c3))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c4)||(rt0.c4)) AS TEXT) DESC, (((rt0.c3)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((rt0.c3))) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(rt0.c1 COLLATE BINARY AS TEXT)) ORDER BY CAST(((rt0.c4)||(rt0.c4)) AS TEXT) DESC, (((rt0.c3)) BETWEEN ((rt0.c4 COLLATE RTRIM)) AND ((rt0.c3))) ASC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((((rt0.c0)OR(0X49ac14e6)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((((rt0.c0)OR(0x49ac14e6)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((((rt0.c0)OR(0X49ac14e6)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((((rt0.c0)OR(0x49ac14e6)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3))) NOT BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((((rt0.c0)OR(0X49ac14e6)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY SQLITE_COMPILEOPTION_USED((rt0.c3 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_COMPILEOPTION_USED((rt0.c3 IN ())) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY SQLITE_COMPILEOPTION_USED((rt0.c3 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM vt0, rt0 ORDER BY SQLITE_COMPILEOPTION_USED((rt0.c3 IN ())) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c3) ORDER BY SQLITE_COMPILEOPTION_USED((rt0.c3 IN ())) ASC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (+ (((((((((0.45825221525432214)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((((((((0.45825221525432214)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (+ (((((((((0.45825221525432214)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((rt0.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ (((((((((0.45825221525432214)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c1)))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((rt0.c0 IN ()) COLLATE NOCASE) ORDER BY (+ (((((((((0.45825221525432214)AND(rt0.c2)))AND(rt0.c2)))AND(vt0.c0)))AND(vt0.c1)))) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c1)&(vt0.c1))) BETWEEN (NULL) AND (CAST(vt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)&(vt0.c1))) BETWEEN (NULL) AND (CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c1)&(vt0.c1))) BETWEEN (NULL) AND (CAST(vt0.c1 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)&(vt0.c1))) BETWEEN (NULL) AND (CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC)) ORDER BY ((((vt0.c1)&(vt0.c1))) BETWEEN (NULL) AND (CAST(vt0.c1 AS BLOB)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c5))) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c2, rt0.c3) IN ()) ASC, CHANGES(), ((((rt0.c5) IS TRUE))GLOB((+ (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c5))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (SUBSTR(rt0.c2, rt0.c3) IN ()) ASC, CHANGES(), ((((rt0.c5) IS TRUE))GLOB((+ (rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c5))) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c2, rt0.c3) IN ()) ASC, CHANGES(), ((((rt0.c5) IS TRUE))GLOB((+ (rt0.c3)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c5))) COLLATE BINARY) IS TRUE)  as count FROM rt0 ORDER BY (SUBSTR(rt0.c2, rt0.c3) IN ()) ASC, CHANGES(), ((((rt0.c5) IS TRUE))GLOB((+ (rt0.c3)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c2, rt0.c4, rt0.c2)) BETWEEN ((rt0.c0, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c5))) COLLATE BINARY) ORDER BY (SUBSTR(rt0.c2, rt0.c3) IN ()) ASC, CHANGES(), ((((rt0.c5) IS TRUE))GLOB((+ (rt0.c3)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((rt0.c5))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((rt0.c5)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c2)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))) AND ((rt0.c5))));
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 WHEN x'' THEN vt0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2)+(rt0.c2)) THEN ((rt0.c3)GLOB(rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c4 AS TEXT) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 WHEN x'' THEN vt0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2)+(rt0.c2)) THEN ((rt0.c3)GLOB(rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c4 AS TEXT) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 WHEN x'' THEN vt0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2)+(rt0.c2)) THEN ((rt0.c3)GLOB(rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c4 AS TEXT) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 WHEN x'' THEN vt0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2)+(rt0.c2)) THEN ((rt0.c3)GLOB(rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c4 AS TEXT) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (rt0.c0 IN ()) WHEN ((vt0.c1) NOTNULL) THEN CAST(rt0.c2 AS BLOB) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt0.c3 WHEN x'' THEN vt0.c0 END THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c2)+(rt0.c2)) THEN ((rt0.c3)GLOB(rt0.c3)) WHEN rt0.c2 COLLATE BINARY THEN CAST(rt0.c4 AS TEXT) ELSE ((vt0.c0) IS TRUE) END);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS TRUE))<=(((((((((NULL)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5))) BETWEEN (0.344584218497081) AND (((rt0.c5) ISNULL))), ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0))) BETWEEN (((rt0.c1)<=(rt0.c3))) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) IS TRUE))<=(((((((((NULL)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5))) BETWEEN (0.344584218497081) AND (((rt0.c5) ISNULL))), ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0))) BETWEEN (((rt0.c1)<=(rt0.c3))) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS TRUE))<=(((((((((NULL)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5))) BETWEEN (0.344584218497081) AND (((rt0.c5) ISNULL))), ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0))) BETWEEN (((rt0.c1)<=(rt0.c3))) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c4) IS TRUE))<=(((((((((NULL)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5))) BETWEEN (0.344584218497081) AND (((rt0.c5) ISNULL))), ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0))) BETWEEN (((rt0.c1)<=(rt0.c3))) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c4) IS TRUE))<=(((((((((NULL)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4))))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c5))) BETWEEN (0.344584218497081) AND (((rt0.c5) ISNULL))), ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0))) BETWEEN (((rt0.c1)<=(rt0.c3))) AND (((rt0.c2)GLOB(rt0.c2))))  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((CAST(0xffffffffe3fbaea8 AS REAL)) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0xffffffffe3fbaea8 AS REAL)) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(0xffffffffe3fbaea8 AS REAL)) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (rt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(0xffffffffe3fbaea8 AS REAL)) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (rt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CAST(0xffffffffe3fbaea8 AS REAL)) NOT BETWEEN ((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c2)))) AND (rt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY vt0.c0 ASC, CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN RTRIM(vt0.c0) ELSE ((rt0.c3)+(vt0.c1)) END, (- (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC, CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN RTRIM(vt0.c0) ELSE ((rt0.c3)+(vt0.c1)) END, (- (x''))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY vt0.c0 ASC, CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN RTRIM(vt0.c0) ELSE ((rt0.c3)+(vt0.c1)) END, (- (x''))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0 ASC, CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN RTRIM(vt0.c0) ELSE ((rt0.c3)+(vt0.c1)) END, (- (x''))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(rt0.c1 COLLATE RTRIM AS INTEGER)) ORDER BY vt0.c0 ASC, CASE WHEN ((vt0.c1)GLOB(vt0.c0)) THEN RTRIM(vt0.c0) ELSE ((rt0.c3)+(vt0.c1)) END, (- (x''))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.21101519145080605 THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.21101519145080605 THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.21101519145080605 THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.21101519145080605 THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c0))) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.21101519145080605 THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) ELSE (((rt0.c3)) BETWEEN ((rt0.c5)) AND ((rt0.c0))) END);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c0)) AS INTEGER)) ORDER BY ((((((rt0.c0)AND(rt0.c5)))AND(rt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c5)))AND(rt0.c1))) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c0)) AS INTEGER)) ORDER BY ((((((rt0.c0)AND(rt0.c5)))AND(rt0.c1))) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (rt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c0)AND(rt0.c5)))AND(rt0.c1))) ISNULL) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST((- (rt0.c0)) AS INTEGER)) ORDER BY ((((((rt0.c0)AND(rt0.c5)))AND(rt0.c1))) ISNULL) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)<=(rt0.c2)) COLLATE NOCASE) ORDER BY CASE WHEN (rt0.c0 IN (-1608195933)) THEN ((rt0.c3)<(vt0.c1)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, NULL DESC, (CAST(rt0.c2 AS REAL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (rt0.c0 IN (-1608195933)) THEN ((rt0.c3)<(vt0.c1)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, NULL DESC, (CAST(rt0.c2 AS REAL) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)<=(rt0.c2)) COLLATE NOCASE) ORDER BY CASE WHEN (rt0.c0 IN (-1608195933)) THEN ((rt0.c3)<(vt0.c1)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, NULL DESC, (CAST(rt0.c2 AS REAL) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<=(rt0.c2)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE WHEN (rt0.c0 IN (-1608195933)) THEN ((rt0.c3)<(vt0.c1)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, NULL DESC, (CAST(rt0.c2 AS REAL) IN ()) DESC);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((vt0.c1)<=(rt0.c2)) COLLATE NOCASE) ORDER BY CASE WHEN (rt0.c0 IN (-1608195933)) THEN ((rt0.c3)<(vt0.c1)) ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST, NULL DESC, (CAST(rt0.c2 AS REAL) IN ()) DESC;
SELECT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE) WHERE ((0.23073237642797517 IN ())) ORDER BY (- (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c5 END)) ASC;
SELECT SUM(count) FROM (SELECT (((0.23073237642797517 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE) ORDER BY (- (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c5 END)) ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE) WHERE ((0.23073237642797517 IN ())) ORDER BY (- (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c5 END)) ASC;
SELECT SUM(count) FROM (SELECT (((0.23073237642797517 IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE) ORDER BY (- (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c5 END)) ASC);
SELECT * FROM vt0 INNER JOIN rt0 ON ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE vt0.c0 END) IS TRUE) WHERE ((0.23073237642797517 IN ())) ORDER BY (- (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c5 END)) ASC;
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)) AS REAL) WHERE (CAST(x'' AS INTEGER)) ORDER BY ((rt0.c3)<=(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)) AS REAL) ORDER BY ((rt0.c3)<=(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)) AS REAL) WHERE (CAST(x'' AS INTEGER)) ORDER BY ((rt0.c3)<=(rt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS INTEGER)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)) AS REAL) ORDER BY ((rt0.c3)<=(rt0.c0))  NULLS LAST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON CAST(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)) AS REAL) WHERE (CAST(x'' AS INTEGER)) ORDER BY ((rt0.c3)<=(rt0.c0))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (load_extension((rt0.c5 IN ()), ((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((rt0.c5 IN ()), ((rt0.c2) IS TRUE))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (load_extension((rt0.c5 IN ()), ((rt0.c2) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((load_extension((rt0.c5 IN ()), ((rt0.c2) IS TRUE))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('w'))))))AND((~ (vt0.c1)))))AND(((vt0.c1)!=(vt0.c1)))))OR(UPPER(DISTINCT vt0.c1)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('w'))))))AND((~ (vt0.c1)))))AND(((vt0.c1)!=(vt0.c1)))))OR(UPPER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('w'))))))AND((~ (vt0.c1)))))AND(((vt0.c1)!=(vt0.c1)))))OR(UPPER(DISTINCT vt0.c1)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('w'))))))AND((~ (vt0.c1)))))AND(((vt0.c1)!=(vt0.c1)))))OR(UPPER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('w'))))))AND((~ (vt0.c1)))))AND(((vt0.c1)!=(vt0.c1)))))OR(UPPER(DISTINCT vt0.c1)))) ORDER BY ((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT BETWEEN ((NOT (vt0.c1))) AND (CAST(vt0.c1 AS INTEGER)))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c3 AS INTEGER)  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS INTEGER)  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c3 AS INTEGER)  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(rt0.c3 AS INTEGER)  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE CAST(rt0.c3 AS INTEGER)  WHEN rt0.c4 COLLATE NOCASE THEN rt0.c1 COLLATE BINARY END);
SELECT * FROM rt0, vt0 WHERE (((((HEX(vt0.c0))AND(((vt0.c0)GLOB(rt0.c1)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c0))AND(((vt0.c0)GLOB(rt0.c1)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT * FROM rt0, vt0 WHERE (((((HEX(vt0.c0))AND(((vt0.c0)GLOB(rt0.c1)))))OR((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((HEX(vt0.c0))AND(((vt0.c0)GLOB(rt0.c1)))))OR((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0, vt0 NOT INDEXED);
SELECT * FROM rt0, vt0 WHERE (((((HEX(vt0.c0))AND(((vt0.c0)GLOB(rt0.c1)))))OR((rt0.c2 IN ()))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5 IN (rt0.c4, vt0.c1)))LIKE((((rt0.c0))>=((rt0.c5)))))) ORDER BY (((NOT (rt0.c0)))>=(((rt0.c0)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5 IN (rt0.c4, vt0.c1)))LIKE((((rt0.c0))>=((rt0.c5)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c0)))>=(((rt0.c0)<=(rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5 IN (rt0.c4, vt0.c1)))LIKE((((rt0.c0))>=((rt0.c5)))))) ORDER BY (((NOT (rt0.c0)))>=(((rt0.c0)<=(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5 IN (rt0.c4, vt0.c1)))LIKE((((rt0.c0))>=((rt0.c5)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (rt0.c0)))>=(((rt0.c0)<=(rt0.c3)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5 IN (rt0.c4, vt0.c1)))LIKE((((rt0.c0))>=((rt0.c5)))))) ORDER BY (((NOT (rt0.c0)))>=(((rt0.c0)<=(rt0.c3))));
SELECT ALL * FROM rt0 WHERE ('1264915774');
SELECT SUM(count) FROM (SELECT ALL (('1264915774') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1264915774');
SELECT SUM(count) FROM (SELECT ALL (('1264915774') IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ('1264915774');
SELECT * FROM vt0, rt0 WHERE (CAST(LIKE(vt0.c0, rt0.c2, '-') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(vt0.c0, rt0.c2, '-') AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(LIKE(vt0.c0, rt0.c2, '-') AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKE(vt0.c0, rt0.c2, '-') AS TEXT)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(LIKE(vt0.c0, rt0.c2, '-') AS TEXT));
SELECT * FROM vt0 WHERE ((TRIM(vt0.c0) IN ())) ORDER BY ((('>')) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((('>')) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((TRIM(vt0.c0) IN ())) ORDER BY ((('>')) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT (((TRIM(vt0.c0) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((('>')) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, vt0.c0))))) DESC);
SELECT * FROM vt0 WHERE ((TRIM(vt0.c0) IN ())) ORDER BY ((('>')) BETWEEN (((vt0.c0 IN ()))) AND (((vt0.c0 IN (vt0.c0, vt0.c0))))) DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((303342346, rt0.c1, rt0.c1))<=((vt0.c1, rt0.c0, rt0.c3)))) NOTNULL)) ORDER BY '1507248542', 0.5580411463422653  NULLS LAST, ((((QUOTE(rt0.c5))OR(((rt0.c0) NOT NULL))))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c4 THEN vt0.c1 ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((303342346, rt0.c1, rt0.c1))<=((vt0.c1, rt0.c0, rt0.c3)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1507248542', 0.5580411463422653  NULLS LAST, ((((QUOTE(rt0.c5))OR(((rt0.c0) NOT NULL))))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c4 THEN vt0.c1 ELSE rt0.c3 END)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((303342346, rt0.c1, rt0.c1))<=((vt0.c1, rt0.c0, rt0.c3)))) NOTNULL)) ORDER BY '1507248542', 0.5580411463422653  NULLS LAST, ((((QUOTE(rt0.c5))OR(((rt0.c0) NOT NULL))))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c4 THEN vt0.c1 ELSE rt0.c3 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((303342346, rt0.c1, rt0.c1))<=((vt0.c1, rt0.c0, rt0.c3)))) NOTNULL)) IS TRUE)  as count FROM vt0, rt0 ORDER BY '1507248542', 0.5580411463422653  NULLS LAST, ((((QUOTE(rt0.c5))OR(((rt0.c0) NOT NULL))))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c4 THEN vt0.c1 ELSE rt0.c3 END)) ASC);
SELECT ALL * FROM vt0, rt0 WHERE ((((((303342346, rt0.c1, rt0.c1))<=((vt0.c1, rt0.c0, rt0.c3)))) NOTNULL)) ORDER BY '1507248542', 0.5580411463422653  NULLS LAST, ((((QUOTE(rt0.c5))OR(((rt0.c0) NOT NULL))))OR(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c1 WHEN rt0.c4 THEN vt0.c1 ELSE rt0.c3 END)) ASC;
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'2416')))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'2416'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'2416')))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'2416'))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (IFNULL(DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1), (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((x'2416')))));
SELECT * FROM rt0 WHERE (TYPEOF(CASE WHEN rt0.c5 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN rt0.c5 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(CASE WHEN rt0.c5 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ((TYPEOF(CASE WHEN rt0.c5 THEN rt0.c1 END)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (TYPEOF(CASE WHEN rt0.c5 THEN rt0.c1 END));
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON 0.6390930739565054 WHERE (LIKELY(DISTINCT TRIM(rt0.c1))) ORDER BY HEX(((rt0.c4) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT TRIM(rt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON 0.6390930739565054 ORDER BY HEX(((rt0.c4) IS TRUE))  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON 0.6390930739565054 WHERE (LIKELY(DISTINCT TRIM(rt0.c1))) ORDER BY HEX(((rt0.c4) IS TRUE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT TRIM(rt0.c1))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON 0.6390930739565054 ORDER BY HEX(((rt0.c4) IS TRUE))  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON 0.6390930739565054 WHERE (LIKELY(DISTINCT TRIM(rt0.c1))) ORDER BY HEX(((rt0.c4) IS TRUE))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))%(CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))%(CAST(rt0.c4 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))%(CAST(rt0.c4 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2 IN ()))%(CAST(rt0.c4 AS BLOB))));
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY (((rt0.c2 IN ()))%(CAST(rt0.c4 AS BLOB)));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))AND(((((((((((((rt0.c5)AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c5)))AND('549966176')))))OR(((rt0.c4)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))AND(((((((((((((rt0.c5)AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c5)))AND('549966176')))))OR(((rt0.c4)!=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))AND(((((((((((((rt0.c5)AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c5)))AND('549966176')))))OR(((rt0.c4)!=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c3 IN ()))AND(((((((((((((rt0.c5)AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c5)))AND('549966176')))))OR(((rt0.c4)!=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((((rt0.c3 IN ()))AND(((((((((((((rt0.c5)AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c5)))AND('549966176')))))OR(((rt0.c4)!=(rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c5)<(rt0.c5)))>=((((rt0.c4)) BETWEEN ((vt0.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<(rt0.c5)))>=((((rt0.c4)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c5)<(rt0.c5)))>=((((rt0.c4)) BETWEEN ((vt0.c1)) AND ((rt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<(rt0.c5)))>=((((rt0.c4)) BETWEEN ((vt0.c1)) AND ((rt0.c0)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c5)<(rt0.c5)))>=((((rt0.c4)) BETWEEN ((vt0.c1)) AND ((rt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND ((json(vt0.c1))))) ORDER BY vt0.c0, rt0.c1, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND ((json(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0, rt0.c1, NULL);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND ((json(vt0.c1))))) ORDER BY vt0.c0, rt0.c1, NULL;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3)) BETWEEN (((rt0.c4 IN ()))) AND ((json(vt0.c1))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c0, rt0.c1, NULL);
SELECT * FROM rt0 WHERE (((((rt0.c5)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c5 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c5 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c5)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c5 IN (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c5 IN (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c5)IS(rt0.c2))) NOT BETWEEN (((rt0.c2) ISNULL)) AND ((rt0.c5 IN (rt0.c2)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3)IS(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)IS(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3)IS(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c3)IS(rt0.c4))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c3)IS(rt0.c4)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)))>=(((vt0.c1)>>(-533164375))))) ORDER BY ((((0.06543839763293513 IN ())))=(((~ (rt0.c4))))) ASC, rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)))>=(((vt0.c1)>>(-533164375))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((0.06543839763293513 IN ())))=(((~ (rt0.c4))))) ASC, rt0.c4  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)))>=(((vt0.c1)>>(-533164375))))) ORDER BY ((((0.06543839763293513 IN ())))=(((~ (rt0.c4))))) ASC, rt0.c4  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)))>=(((vt0.c1)>>(-533164375))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((0.06543839763293513 IN ())))=(((~ (rt0.c4))))) ASC, rt0.c4  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((vt0.c1)OR(rt0.c0)))OR(rt0.c2)))>=(((vt0.c1)>>(-533164375))))) ORDER BY ((((0.06543839763293513 IN ())))=(((~ (rt0.c4))))) ASC, rt0.c4  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(CASE WHEN rt0.c5 THEN vt0.c0 END, (vt0.c1 IN ()), (vt0.c1 IN ()))) ORDER BY TRIM(rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE WHEN rt0.c5 THEN vt0.c0 END, (vt0.c1 IN ()), (vt0.c1 IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TRIM(rt0.c1));
SELECT COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(CASE WHEN rt0.c5 THEN vt0.c0 END, (vt0.c1 IN ()), (vt0.c1 IN ()))) ORDER BY TRIM(rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(CASE WHEN rt0.c5 THEN vt0.c0 END, (vt0.c1 IN ()), (vt0.c1 IN ()))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TRIM(rt0.c1));
SELECT COUNT(*) FROM rt0, vt0 WHERE (STRFTIME(CASE WHEN rt0.c5 THEN vt0.c0 END, (vt0.c1 IN ()), (vt0.c1 IN ()))) ORDER BY TRIM(rt0.c1);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((((vt0.c0)AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c2)))AND(-1016047311)))AND(((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))))OR(((((((((rt0.c5)OR(x'')))AND(rt0.c3)))AND(x'')))AND(vt0.c0)))))AND('-195487072')))OR(CAST(vt0.c0 AS REAL)))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS TRUE) DESC, MIN(rt0.c2, rt0.c0, rt0.c5, vt0.c1) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt0.c0)AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c2)))AND(-1016047311)))AND(((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))))OR(((((((((rt0.c5)OR(x'')))AND(rt0.c3)))AND(x'')))AND(vt0.c0)))))AND('-195487072')))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS TRUE) DESC, MIN(rt0.c2, rt0.c0, rt0.c5, vt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((((vt0.c0)AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c2)))AND(-1016047311)))AND(((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))))OR(((((((((rt0.c5)OR(x'')))AND(rt0.c3)))AND(x'')))AND(vt0.c0)))))AND('-195487072')))OR(CAST(vt0.c0 AS REAL)))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS TRUE) DESC, MIN(rt0.c2, rt0.c0, rt0.c5, vt0.c1) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((vt0.c0)AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c2)))AND(-1016047311)))AND(((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))))OR(((((((((rt0.c5)OR(x'')))AND(rt0.c3)))AND(x'')))AND(vt0.c0)))))AND('-195487072')))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS TRUE) DESC, MIN(rt0.c2, rt0.c0, rt0.c5, vt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((((((((vt0.c0)AND(rt0.c4)))AND(vt0.c0)))AND(rt0.c2)))AND(-1016047311)))AND(((((rt0.c5)OR(rt0.c0)))OR(rt0.c4)))))OR(((((((((rt0.c5)OR(x'')))AND(rt0.c3)))AND(x'')))AND(vt0.c0)))))AND('-195487072')))OR(CAST(vt0.c0 AS REAL)))) ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c3))) IS TRUE) DESC, MIN(rt0.c2, rt0.c0, rt0.c5, vt0.c1) COLLATE NOCASE;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((('1487928965')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CAST(vt0.c0 AS INTEGER)))), ((IFNULL(vt0.c1, vt0.c0)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((('1487928965')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CAST(vt0.c0 AS INTEGER)))), ((IFNULL(vt0.c1, vt0.c0)) ISNULL) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((('1487928965')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CAST(vt0.c0 AS INTEGER)))), ((IFNULL(vt0.c1, vt0.c0)) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((((('1487928965')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CAST(vt0.c0 AS INTEGER)))), ((IFNULL(vt0.c1, vt0.c0)) ISNULL) ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c0)) BETWEEN ((((('1487928965')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) AND ((CAST(vt0.c0 AS INTEGER)))), ((IFNULL(vt0.c1, vt0.c0)) ISNULL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END ASC, ((((((((((vt0.c1)OR(vt0.c1)))AND('699577567')))AND(vt0.c0)))OR(vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt0.c1)OR('0.5197053986019134')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))>=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END ASC, ((((((((((vt0.c1)OR(vt0.c1)))AND('699577567')))AND(vt0.c0)))OR(vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt0.c1)OR('0.5197053986019134')) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END ASC, ((((((((((vt0.c1)OR(vt0.c1)))AND('699577567')))AND(vt0.c0)))OR(vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt0.c1)OR('0.5197053986019134')) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>=(vt0.c0)))>=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END ASC, ((((((((((vt0.c1)OR(vt0.c1)))AND('699577567')))AND(vt0.c0)))OR(vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt0.c1)OR('0.5197053986019134')) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)>=(vt0.c0)))>=(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY CASE (((vt0.c0))!=((vt0.c0)))  WHEN CAST(vt0.c0 AS REAL) THEN NULL WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) THEN NULL WHEN vt0.c1 COLLATE BINARY THEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) ELSE CAST(vt0.c1 AS NUMERIC) END ASC, ((((((((((vt0.c1)OR(vt0.c1)))AND('699577567')))AND(vt0.c0)))OR(vt0.c0)))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC  NULLS LAST, (((vt0.c1)OR('0.5197053986019134')) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(TOTAL_CHANGES() AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TOTAL_CHANGES() AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TOTAL_CHANGES() AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TOTAL_CHANGES() AS TEXT));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY TYPEOF(ABS(DISTINCT 0.04354970412927994))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(ABS(DISTINCT 0.04354970412927994))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY TYPEOF(ABS(DISTINCT 0.04354970412927994))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY TYPEOF(ABS(DISTINCT 0.04354970412927994))  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY TYPEOF(ABS(DISTINCT 0.04354970412927994))  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2)))<>(SQLITE_COMPILEOPTION_USED(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))!=(SQLITE_COMPILEOPTION_USED(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2)))<>(SQLITE_COMPILEOPTION_USED(rt0.c4))));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))!=(SQLITE_COMPILEOPTION_USED(rt0.c4)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((- (rt0.c2)))<>(SQLITE_COMPILEOPTION_USED(rt0.c4))));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))<>((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))<>((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))<>((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))<>((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1)))))) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c3 IN ()))<>((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c0, vt0.c0, rt0.c1))))));
SELECT ALL * FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (UNLIKELY(rt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5 COLLATE NOCASE, ((rt0.c5) NOT BETWEEN (vt0.c1) AND (rt0.c2)), ((rt0.c3)<(rt0.c3))))<(((vt0.c0 IN ()), (((rt0.c3))<=((rt0.c5))), (0.38965670327425006 IN ()))))) ORDER BY ((((vt0.c0)<<(vt0.c1)))-(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5 COLLATE NOCASE, ((rt0.c5) NOT BETWEEN (vt0.c1) AND (rt0.c2)), ((rt0.c3)<(rt0.c3))))<(((vt0.c0 IN ()), (((rt0.c3))<=((rt0.c5))), (0.38965670327425006 IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)<<(vt0.c1)))-(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5 COLLATE NOCASE, ((rt0.c5) NOT BETWEEN (vt0.c1) AND (rt0.c2)), ((rt0.c3)<(rt0.c3))))<(((vt0.c0 IN ()), (((rt0.c3))<=((rt0.c5))), (0.38965670327425006 IN ()))))) ORDER BY ((((vt0.c0)<<(vt0.c1)))-(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c5 COLLATE NOCASE, ((rt0.c5) NOT BETWEEN (vt0.c1) AND (rt0.c2)), ((rt0.c3)<(rt0.c3))))<(((vt0.c0 IN ()), (((rt0.c3))<=((rt0.c5))), (0.38965670327425006 IN ()))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c0)<<(vt0.c1)))-(vt0.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5 COLLATE NOCASE, ((rt0.c5) NOT BETWEEN (vt0.c1) AND (rt0.c2)), ((rt0.c3)<(rt0.c3))))<(((vt0.c0 IN ()), (((rt0.c3))<=((rt0.c5))), (0.38965670327425006 IN ()))))) ORDER BY ((((vt0.c0)<<(vt0.c1)))-(vt0.c0 COLLATE BINARY))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5)<>(x''))) IS TRUE)) ORDER BY (- ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<>(x''))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- ((NOT (vt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5)<>(x''))) IS TRUE)) ORDER BY (- ((NOT (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)<>(x''))) IS TRUE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- ((NOT (vt0.c1)))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c5)<>(x''))) IS TRUE)) ORDER BY (- ((NOT (vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(((vt0.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(((vt0.c0)<<(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (vt0.c1)) COLLATE RTRIM) ORDER BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<=(((vt0.c0)<<(vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c1) NOT NULL))));
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((((((NOT (rt0.c5)))OR(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END)))OR(((((rt0.c4)OR(1.667585748E9)))OR(rt0.c4)))))OR('-1798150009')))OR(x'0e63'))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))<(rt0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt0.c5)))OR(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END)))OR(((((rt0.c4)OR(1.667585748E9)))OR(rt0.c4)))))OR('-1798150009')))OR(x'0e63'))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))<(rt0.c3 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((((((NOT (rt0.c5)))OR(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END)))OR(((((rt0.c4)OR(1.667585748E9)))OR(rt0.c4)))))OR('-1798150009')))OR(x'0e63'))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))<(rt0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt0.c5)))OR(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END)))OR(((((rt0.c4)OR(1.667585748E9)))OR(rt0.c4)))))OR('-1798150009')))OR(x'0e63'))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))<(rt0.c3 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE ((((((((((NOT (rt0.c5)))OR(CASE rt0.c2  WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c4 END)))OR(((((rt0.c4)OR(1.667585748E9)))OR(rt0.c4)))))OR('-1798150009')))OR(x'0e63'))) ORDER BY ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))<(rt0.c3 COLLATE RTRIM))  NULLS LAST;
SELECT * FROM vt0 CROSS JOIN rt0 ON (NOT (((rt0.c5)AND(rt0.c5)))) WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (((rt0.c5)AND(rt0.c5)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (NOT (((rt0.c5)AND(rt0.c5)))) WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((rt0.c0) NOTNULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT (((rt0.c5)AND(rt0.c5)))));
SELECT * FROM vt0 CROSS JOIN rt0 ON (NOT (((rt0.c5)AND(rt0.c5)))) WHERE (((rt0.c0) NOTNULL) COLLATE NOCASE);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(0.8713658398485953))) IS FALSE) WHERE (CAST(((0.5948940766751218)>>(rt0.c2)) AS TEXT)) ORDER BY ((rt0.c2) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.5948940766751218)>>(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(0.8713658398485953))) IS FALSE) ORDER BY ((rt0.c2) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(0.8713658398485953))) IS FALSE) WHERE (CAST(((0.5948940766751218)>>(rt0.c2)) AS TEXT)) ORDER BY ((rt0.c2) NOTNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((0.5948940766751218)>>(rt0.c2)) AS TEXT)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(0.8713658398485953))) IS FALSE) ORDER BY ((rt0.c2) NOTNULL)  NULLS FIRST);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c1)))OR(0.8713658398485953))) IS FALSE) WHERE (CAST(((0.5948940766751218)>>(rt0.c2)) AS TEXT)) ORDER BY ((rt0.c2) NOTNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c4)IS(rt0.c4)) AS BLOB) WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c4)IS(rt0.c4)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c4)IS(rt0.c4)) AS BLOB) WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)|(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c4)IS(rt0.c4)) AS BLOB));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(((rt0.c4)IS(rt0.c4)) AS BLOB) WHERE ((((vt0.c0)|(vt0.c1)) IN ()));
SELECT * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c4))) WHERE ((((((vt0.c1))<((rt0.c1))))LIKE(NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((rt0.c1))))LIKE(NULL))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c4))));
SELECT * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c4))) WHERE ((((((vt0.c1))<((rt0.c1))))LIKE(NULL)));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1))<((rt0.c1))))LIKE(NULL))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c4))));
SELECT * FROM vt0 CROSS JOIN rt0 ON TRIM(DISTINCT ((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c5)))AND(rt0.c5)))AND(rt0.c4))) WHERE ((((((vt0.c1))<((rt0.c1))))LIKE(NULL)));
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3 COLLATE BINARY))!=(((- (vt0.c0)))))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 COLLATE BINARY))!=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3 COLLATE BINARY))!=(((- (vt0.c0)))))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3 COLLATE BINARY))!=(((- (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c3 COLLATE BINARY))!=(((- (vt0.c0)))))) ORDER BY (CAST(rt0.c1 AS TEXT) IN ()) DESC;
SELECT * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.23973313212656144)) BETWEEN (x'') AND (((rt0.c2)IS NOT(x'2473'))))) ORDER BY CASE rt0.c4 COLLATE NOCASE  WHEN ((vt0.c0)==(rt0.c4)) THEN ((vt0.c1) IS FALSE) ELSE ((rt0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c1, 0.23973313212656144)) BETWEEN (x'') AND (((rt0.c2)IS NOT(x'2473'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c4 COLLATE NOCASE  WHEN ((vt0.c0)==(rt0.c4)) THEN ((vt0.c1) IS FALSE) ELSE ((rt0.c2) ISNULL) END);
SELECT * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.23973313212656144)) BETWEEN (x'') AND (((rt0.c2)IS NOT(x'2473'))))) ORDER BY CASE rt0.c4 COLLATE NOCASE  WHEN ((vt0.c0)==(rt0.c4)) THEN ((vt0.c1) IS FALSE) ELSE ((rt0.c2) ISNULL) END;
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(DISTINCT rt0.c1, 0.23973313212656144)) BETWEEN (x'') AND (((rt0.c2)IS NOT(x'2473'))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE rt0.c4 COLLATE NOCASE  WHEN ((vt0.c0)==(rt0.c4)) THEN ((vt0.c1) IS FALSE) ELSE ((rt0.c2) ISNULL) END);
SELECT * FROM rt0, vt0 WHERE (((LIKELIHOOD(DISTINCT rt0.c1, 0.23973313212656144)) BETWEEN (x'') AND (((rt0.c2)IS NOT(x'2473'))))) ORDER BY CASE rt0.c4 COLLATE NOCASE  WHEN ((vt0.c0)==(rt0.c4)) THEN ((vt0.c1) IS FALSE) ELSE ((rt0.c2) ISNULL) END;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c4)AND(((rt0.c3) NOT NULL))))AND(((rt0.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)AND(((rt0.c3) NOT NULL))))AND(((rt0.c2)+(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c4)AND(((rt0.c3) NOT NULL))))AND(((rt0.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)AND(((rt0.c3) NOT NULL))))AND(((rt0.c2)+(vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c4)AND(((rt0.c3) NOT NULL))))AND(((rt0.c2)+(vt0.c0)))));
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC))>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))>=(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS NUMERIC))>=(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS NUMERIC))>=(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (9.98989221E8) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((9.98989221E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (9.98989221E8) ORDER BY rt0.c2;
SELECT SUM(count) FROM (SELECT ((9.98989221E8) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c2);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (9.98989221E8) ORDER BY rt0.c2;
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY -4.96664591E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY -4.96664591E8  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY -4.96664591E8  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY -4.96664591E8  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1) ORDER BY -4.96664591E8  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (NULL IN ()) END) ORDER BY CASE ((rt0.c1)<(rt0.c1))  WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END ELSE CAST(rt0.c5 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (NULL IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)<(rt0.c1))  WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END ELSE CAST(rt0.c5 AS REAL) END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (NULL IN ()) END) ORDER BY CASE ((rt0.c1)<(rt0.c1))  WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END ELSE CAST(rt0.c5 AS REAL) END;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (NULL IN ()) END) IS TRUE)  as count FROM rt0 ORDER BY CASE ((rt0.c1)<(rt0.c1))  WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END ELSE CAST(rt0.c5 AS REAL) END);
SELECT ALL * FROM rt0 WHERE (CASE WHEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c2 END THEN (NULL IN ()) END) ORDER BY CASE ((rt0.c1)<(rt0.c1))  WHEN rt0.c3 COLLATE NOCASE THEN CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 END ELSE CAST(rt0.c5 AS REAL) END;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN ()) WHERE (json_remove((((rt0.c0))<=((vt0.c1))), (((((((((((('-989039954')AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((rt0.c0))<=((vt0.c1))), (((((((((((('-989039954')AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN ()) WHERE (json_remove((((rt0.c0))<=((vt0.c1))), (((((((((((('-989039954')AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((json_remove((((rt0.c0))<=((vt0.c1))), (((((((((((('-989039954')AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN ()));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON (rt0.c2 COLLATE NOCASE IN ()) WHERE (json_remove((((rt0.c0))<=((vt0.c1))), (((((((((((('-989039954')AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c1)))OR(rt0.c0)))AND(vt0.c1)))OR(vt0.c0))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, 'ᢲ1'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, 'ᢲ1'))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, 'ᢲ1'))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, 'ᢲ1'))) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0))!=((vt0.c0, vt0.c0, vt0.c1, vt0.c0, 'ᢲ1'))) IN ()));
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c5) ORDER BY (((((rt0.c1))=((rt0.c3))))==(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1))==((rt0.c3))))==(vt0.c0)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c5) ORDER BY (((((rt0.c1))=((rt0.c3))))==(vt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c1))==((rt0.c3))))==(vt0.c0)) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c5) ORDER BY (((((rt0.c1))=((rt0.c3))))==(vt0.c0)) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)OR(vt0.c0)))<=(rt0.c5 COLLATE RTRIM))) ORDER BY ((((((rt0.c4) BETWEEN (NULL) AND (vt0.c1)))OR(LOWER('-632925093'))))OR((+ (vt0.c1))))  NULLS FIRST, (+ (((rt0.c2)|(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(vt0.c0)))<=(rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c4) BETWEEN (NULL) AND (vt0.c1)))OR(LOWER('-632925093'))))OR((+ (vt0.c1))))  NULLS FIRST, (+ (((rt0.c2)|(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)OR(vt0.c0)))<=(rt0.c5 COLLATE RTRIM))) ORDER BY ((((((rt0.c4) BETWEEN (NULL) AND (vt0.c1)))OR(LOWER('-632925093'))))OR((+ (vt0.c1))))  NULLS FIRST, (+ (((rt0.c2)|(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4)OR(vt0.c0)))<=(rt0.c5 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c4) BETWEEN (NULL) AND (vt0.c1)))OR(LOWER('-632925093'))))OR((+ (vt0.c1))))  NULLS FIRST, (+ (((rt0.c2)|(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c4)OR(vt0.c0)))<=(rt0.c5 COLLATE RTRIM))) ORDER BY ((((((rt0.c4) BETWEEN (NULL) AND (vt0.c1)))OR(LOWER('-632925093'))))OR((+ (vt0.c1))))  NULLS FIRST, (+ (((rt0.c2)|(rt0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c0))) BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)||(vt0.c0))) BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1)||(vt0.c0))) BETWEEN ((((vt0.c1))<((vt0.c0)))) AND (vt0.c1 COLLATE BINARY)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY (~ (COALESCE(rt0.c5, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (COALESCE(rt0.c5, vt0.c0))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY (~ (COALESCE(rt0.c5, vt0.c0)));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (~ (COALESCE(rt0.c5, vt0.c0))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c0) NOT NULL) IN ())) ORDER BY (~ (COALESCE(rt0.c5, vt0.c0)));
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (rt0.c4);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3) NOT NULL) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE TYPEOF(vt0.c1)  WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (NOT (rt0.c4)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c5)LIKE(rt0.c2)) THEN HEX(DISTINCT vt0.c0) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(vt0.c1)  WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (NOT (rt0.c4)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c5)LIKE(rt0.c2)) THEN HEX(DISTINCT vt0.c0) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE TYPEOF(vt0.c1)  WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (NOT (rt0.c4)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c5)LIKE(rt0.c2)) THEN HEX(DISTINCT vt0.c0) ELSE rt0.c1 END);
SELECT SUM(count) FROM (SELECT ((CASE TYPEOF(vt0.c1)  WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (NOT (rt0.c4)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c5)LIKE(rt0.c2)) THEN HEX(DISTINCT vt0.c0) ELSE rt0.c1 END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE TYPEOF(vt0.c1)  WHEN ((vt0.c0)>=(vt0.c0)) THEN CAST(rt0.c0 AS TEXT) WHEN (NOT (rt0.c4)) THEN CAST(vt0.c1 AS NUMERIC) WHEN ((rt0.c5)LIKE(rt0.c2)) THEN HEX(DISTINCT vt0.c0) ELSE rt0.c1 END);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))%(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))%(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))%(vt0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))%(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))%(vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CAST(vt0.c0 COLLATE NOCASE AS NUMERIC);
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)OR(rt0.c4 COLLATE NOCASE)))AND(CAST(rt0.c1 AS BLOB))) WHERE ((((~ (vt0.c0))) BETWEEN (json_remove(rt0.c2, rt0.c1)) AND (SQLITE_COMPILEOPTION_USED(x'2c39'))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (json_remove(rt0.c2, rt0.c1)) AND (SQLITE_COMPILEOPTION_USED(x'2c39')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)OR(rt0.c4 COLLATE NOCASE)))AND(CAST(rt0.c1 AS BLOB))));
SELECT ALL * FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)OR(rt0.c4 COLLATE NOCASE)))AND(CAST(rt0.c1 AS BLOB))) WHERE ((((~ (vt0.c0))) BETWEEN (json_remove(rt0.c2, rt0.c1)) AND (SQLITE_COMPILEOPTION_USED(x'2c39'))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0))) BETWEEN (json_remove(rt0.c2, rt0.c1)) AND (SQLITE_COMPILEOPTION_USED(x'2c39')))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)OR(rt0.c4 COLLATE NOCASE)))AND(CAST(rt0.c1 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (((((NULL)*(rt0.c4)))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((NULL)*(rt0.c4)))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((NULL)*(rt0.c4)))OR(rt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((NULL)*(rt0.c4)))OR(rt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((NULL)*(rt0.c4)))OR(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c3))) IS TRUE)) ORDER BY ((rt0.c5)IS NOT(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c5)IS NOT(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c3))) IS TRUE)) ORDER BY ((rt0.c5)IS NOT(vt0.c0)) COLLATE RTRIM ASC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((rt0.c5)IS NOT(vt0.c0)) COLLATE RTRIM ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c3))) IS TRUE)) ORDER BY ((rt0.c5)IS NOT(vt0.c0)) COLLATE RTRIM ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) BETWEEN (x'de58') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) BETWEEN (x'de58') AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) BETWEEN (x'de58') AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((- (((vt0.c1) BETWEEN (x'de58') AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- (((vt0.c1) BETWEEN (x'de58') AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((- (vt0.c1)))AND(((0x1) NOT NULL))))OR(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((- (vt0.c1)))AND(((0X1) NOT NULL))))OR(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((- (vt0.c1)))AND(((0x1) NOT NULL))))OR(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY (((((- (vt0.c1)))AND(((0X1) NOT NULL))))OR(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY (((((- (vt0.c1)))AND(((0x1) NOT NULL))))OR(vt0.c0))  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE (((((rt0.c5) ISNULL))<(((rt0.c2)>>(rt0.c4))))) ORDER BY rt0.c2  NULLS LAST, (~ (rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) ISNULL))<(((rt0.c2)>>(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2  NULLS LAST, (~ (rt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c5) ISNULL))<(((rt0.c2)>>(rt0.c4))))) ORDER BY rt0.c2  NULLS LAST, (~ (rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c5) ISNULL))<(((rt0.c2)>>(rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c2  NULLS LAST, (~ (rt0.c0)) COLLATE NOCASE DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c5) ISNULL))<(((rt0.c2)>>(rt0.c4))))) ORDER BY rt0.c2  NULLS LAST, (~ (rt0.c0)) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, '2110646624')))) AND (CASE vt0.c0  WHEN '1264915774' THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, '2110646624')))) AND (CASE vt0.c0  WHEN '1264915774' THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, '2110646624')))) AND (CASE vt0.c0  WHEN '1264915774' THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, '2110646624')))) AND (CASE vt0.c0  WHEN '1264915774' THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL) BETWEEN ((((vt0.c1, vt0.c0, vt0.c0))<((vt0.c1, vt0.c0, '2110646624')))) AND (CASE vt0.c0  WHEN '1264915774' THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY vt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c4)<=(rt0.c3))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)<=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c4)<=(rt0.c3))))) ORDER BY rt0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((rt0.c4)<=(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c0 ASC);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (((rt0.c4)<=(rt0.c3))))) ORDER BY rt0.c0 ASC;
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))IS NOT(((rt0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT))IS NOT(((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))IS NOT(((rt0.c4) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c4 AS TEXT))IS NOT(((rt0.c4) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((CAST(rt0.c4 AS TEXT))IS NOT(((rt0.c4) ISNULL))));
SELECT * FROM vt0, rt0 WHERE ('-1068860537');
SELECT SUM(count) FROM (SELECT (('-1068860537') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('-1068860537');
SELECT SUM(count) FROM (SELECT (('-1068860537') IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ('-1068860537');
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((NULL)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((rt0.c0) NOT BETWEEN ('<O~T') AND (rt0.c3)))))OR(((rt0.c5)=(rt0.c1)))) WHERE ((~ (((rt0.c0)=(rt0.c5))))) ORDER BY ((rt0.c5 COLLATE BINARY)&(((rt0.c4)LIKE(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)==(rt0.c5))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((((NULL)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((rt0.c0) NOT BETWEEN ('<O~T') AND (rt0.c3)))))OR(((rt0.c5)=(rt0.c1)))) ORDER BY ((rt0.c5 COLLATE BINARY)&(((rt0.c4)LIKE(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((NULL)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((rt0.c0) NOT BETWEEN ('<O~T') AND (rt0.c3)))))OR(((rt0.c5)=(rt0.c1)))) WHERE ((~ (((rt0.c0)=(rt0.c5))))) ORDER BY ((rt0.c5 COLLATE BINARY)&(((rt0.c4)LIKE(rt0.c2)))) DESC;
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)==(rt0.c5))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((((((((((NULL)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((rt0.c0) NOT BETWEEN ('<O~T') AND (rt0.c3)))))OR(((rt0.c5)=(rt0.c1)))) ORDER BY ((rt0.c5 COLLATE BINARY)&(((rt0.c4)LIKE(rt0.c2)))) DESC);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((((((((((NULL)AND(rt0.c1)))OR(rt0.c1)))AND(vt0.c0)))OR(vt0.c0)))AND(((rt0.c0) NOT BETWEEN ('<O~T') AND (rt0.c3)))))OR(((rt0.c5)=(rt0.c1)))) WHERE ((~ (((rt0.c0)=(rt0.c5))))) ORDER BY ((rt0.c5 COLLATE BINARY)&(((rt0.c4)LIKE(rt0.c2)))) DESC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')), ((vt0.c0)AND(vt0.c1)), ((vt0.c1)IS(vt0.c1))))>=(((- (vt0.c0)), vt0.c1 COLLATE NOCASE, NULL)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')), ((vt0.c0)AND(vt0.c1)), ((vt0.c1)IS(vt0.c1))))>=(((- (vt0.c0)), vt0.c1 COLLATE NOCASE, NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')), ((vt0.c0)AND(vt0.c1)), ((vt0.c1)IS(vt0.c1))))>=(((- (vt0.c0)), vt0.c1 COLLATE NOCASE, NULL)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')), ((vt0.c0)AND(vt0.c1)), ((vt0.c1)IS(vt0.c1))))>=(((- (vt0.c0)), vt0.c1 COLLATE NOCASE, NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (x'')), ((vt0.c0)AND(vt0.c1)), ((vt0.c1)IS(vt0.c1))))>=(((- (vt0.c0)), vt0.c1 COLLATE NOCASE, NULL)))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1 COLLATE BINARY)) ASC  NULLS FIRST, vt0.c0;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((0.05388134675970868)=(rt0.c4)) IN ())) ORDER BY TYPEOF(DISTINCT (rt0.c0 IN (x'a188', rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.05388134675970868)=(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY TYPEOF(DISTINCT (rt0.c0 IN (x'a188', rt0.c2))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((0.05388134675970868)=(rt0.c4)) IN ())) ORDER BY TYPEOF(DISTINCT (rt0.c0 IN (x'a188', rt0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((0.05388134675970868)=(rt0.c4)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY TYPEOF(DISTINCT (rt0.c0 IN (x'a188', rt0.c2))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((0.05388134675970868)=(rt0.c4)) IN ())) ORDER BY TYPEOF(DISTINCT (rt0.c0 IN (x'a188', rt0.c2))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c3))) ORDER BY TRIM(((rt0.c0)|(rt0.c3)), ((vt0.c0) IS FALSE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c3))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TRIM(((rt0.c0)|(rt0.c3)), ((vt0.c0) IS FALSE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c3))) ORDER BY TRIM(((rt0.c0)|(rt0.c3)), ((vt0.c0) IS FALSE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c3))) IS TRUE)  as count FROM rt0, vt0 ORDER BY TRIM(((rt0.c0)|(rt0.c3)), ((vt0.c0) IS FALSE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0))) BETWEEN (((((rt0.c0)AND(rt0.c0)))OR(rt0.c0))) AND (rt0.c3))) ORDER BY TRIM(((rt0.c0)|(rt0.c3)), ((vt0.c0) IS FALSE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)|(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)|(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)|(rt0.c2)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c1)|(rt0.c2)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((rt0.c1)|(rt0.c2)) AS NUMERIC));
SELECT * FROM rt0, vt0 WHERE (TIME(NULL, (vt0.c0 IN ()), vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL, (vt0.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE (TIME(NULL, (vt0.c0 IN ()), vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((TIME(NULL, (vt0.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM rt0 NOT INDEXED, vt0);
SELECT * FROM rt0, vt0 WHERE (TIME(NULL, (vt0.c0 IN ()), vt0.c0));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4)IS(rt0.c3)) IN ())) ORDER BY (('*F0' IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)IS(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('*F0' IN ()) IN ()) ASC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4)IS(rt0.c3)) IN ())) ORDER BY (('*F0' IN ()) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c4)IS(rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (('*F0' IN ()) IN ()) ASC);
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4)IS(rt0.c3)) IN ())) ORDER BY (('*F0' IN ()) IN ()) ASC;
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), NULL, ((vt0.c0)%(vt0.c0))))>((vt0.c0, (vt0.c1 IN (vt0.c0)), ((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS NUMERIC), NULL, ((vt0.c0)%(vt0.c0))))>((vt0.c0, (vt0.c1 IN (vt0.c0)), ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), NULL, ((vt0.c0)%(vt0.c0))))>((vt0.c0, (vt0.c1 IN (vt0.c0)), ((vt0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(vt0.c1 AS NUMERIC), NULL, ((vt0.c0)%(vt0.c0))))>((vt0.c0, (vt0.c1 IN (vt0.c0)), ((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((CAST(vt0.c1 AS NUMERIC), NULL, ((vt0.c0)%(vt0.c0))))>((vt0.c0, (vt0.c1 IN (vt0.c0)), ((vt0.c0) IS FALSE)))));
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c0))) ORDER BY (+ (vt0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE (CAST(NULL AS REAL)) ORDER BY CASE (rt0.c1 IN ())  WHEN ((rt0.c3)IS(rt0.c1)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1812663194') AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c1 IN ())  WHEN ((rt0.c3)IS(rt0.c1)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1812663194') AND (rt0.c0)) END);
SELECT * FROM rt0 WHERE (CAST(NULL AS REAL)) ORDER BY CASE (rt0.c1 IN ())  WHEN ((rt0.c3)IS(rt0.c1)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1812663194') AND (rt0.c0)) END;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c1 IN ())  WHEN ((rt0.c3)IS(rt0.c1)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1812663194') AND (rt0.c0)) END);
SELECT * FROM rt0 WHERE (CAST(NULL AS REAL)) ORDER BY CASE (rt0.c1 IN ())  WHEN ((rt0.c3)IS(rt0.c1)) THEN x'' ELSE ((rt0.c1) BETWEEN ('-1812663194') AND (rt0.c0)) END;
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CASE (NOT (vt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c5, vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c5, vt0.c1))) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CASE (NOT (vt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c5, vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (NOT (vt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c5, vt0.c1))) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT * FROM vt0 NATURAL JOIN rt0 WHERE (CASE (NOT (vt0.c1))  WHEN rt0.c0 COLLATE RTRIM THEN (((rt0.c3, rt0.c2, rt0.c3))>=((rt0.c0, rt0.c5, vt0.c1))) END);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)!=(vt0.c1))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c1 END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)!=(vt0.c1))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c1 END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)<>(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c1 END ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)!=(vt0.c1))))) ORDER BY CASE WHEN ((vt0.c0) ISNULL) THEN vt0.c1 END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((((0X4b2ecedc)OR(((vt0.c1)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))!=((vt0.c0))))), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) BETWEEN (((0X550e74c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((0x4b2ecedc)OR(((vt0.c1)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<>((vt0.c0))))), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) BETWEEN (((0x550e74c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((((0X4b2ecedc)OR(((vt0.c1)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))!=((vt0.c0))))), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) BETWEEN (((0X550e74c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((((((((0x4b2ecedc)OR(((vt0.c1)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))<>((vt0.c0))))), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) BETWEEN (((0x550e74c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((((((((0X4b2ecedc)OR(((vt0.c1)LIKE(vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((vt0.c0)OR(vt0.c0)))))AND((((vt0.c0))!=((vt0.c0))))), ((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))) BETWEEN (((0X550e74c3) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c1 COLLATE NOCASE)) DESC;
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((0.6196061627556083) BETWEEN (rt0.c4) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c5 IN (rt0.c3, rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN TOTAL_CHANGES() THEN (rt0.c4 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((0.6196061627556083) BETWEEN (rt0.c4) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c5 IN (rt0.c3, rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN TOTAL_CHANGES() THEN (rt0.c4 IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((0.6196061627556083) BETWEEN (rt0.c4) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c5 IN (rt0.c3, rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN TOTAL_CHANGES() THEN (rt0.c4 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((0.6196061627556083) BETWEEN (rt0.c4) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c5 IN (rt0.c3, rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN TOTAL_CHANGES() THEN (rt0.c4 IN ()) END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c3) ORDER BY CASE WHEN ((0.6196061627556083) BETWEEN (rt0.c4) AND (rt0.c5)) THEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) WHEN (rt0.c5 IN (rt0.c3, rt0.c1)) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)) WHEN TOTAL_CHANGES() THEN (rt0.c4 IN ()) END DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)))+(rt0.c2 COLLATE BINARY))) ORDER BY UNLIKELY(((((0xffffffffdb906820)AND(rt0.c3)))OR(0.4594297644388483))) ASC, (((+ (rt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)))+(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY UNLIKELY(((((0Xffffffffdb906820)AND(rt0.c3)))OR(0.4594297644388483))) ASC, (((+ (rt0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)))+(rt0.c2 COLLATE BINARY))) ORDER BY UNLIKELY(((((0xffffffffdb906820)AND(rt0.c3)))OR(0.4594297644388483))) ASC, (((+ (rt0.c0))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)))+(rt0.c2 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY UNLIKELY(((((0Xffffffffdb906820)AND(rt0.c3)))OR(0.4594297644388483))) ASC, (((+ (rt0.c0))) IS FALSE) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c4)))+(rt0.c2 COLLATE BINARY))) ORDER BY UNLIKELY(((((0xffffffffdb906820)AND(rt0.c3)))OR(0.4594297644388483))) ASC, (((+ (rt0.c0))) IS FALSE) ASC;
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOTNULL)) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c2) NOTNULL)) NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c5 AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c5 AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c5 AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt0.c5 AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN CAST(rt0.c5 AS NUMERIC) THEN (((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) END);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c1)>(rt0.c4)) AS BLOB)) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)>(rt0.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c1)>(rt0.c4)) AS BLOB)) ORDER BY NULL ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)>(rt0.c4)) AS BLOB)) IS TRUE)  as count FROM rt0, vt0 ORDER BY NULL ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((vt0.c1)>(rt0.c4)) AS BLOB)) ORDER BY NULL ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY json_type((~ (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY json_type((~ (rt0.c4))));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY json_type((~ (rt0.c4)));
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt0 ORDER BY json_type((~ (rt0.c4))));
SELECT COUNT(*) FROM rt0 WHERE (NULL) ORDER BY json_type((~ (rt0.c4)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((json_remove(vt0.c0, vt0.c0), TYPEOF(vt0.c1), (- (vt0.c1)))) AND ((((vt0.c0) NOT NULL), '>랺', ((vt0.c1)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((json_remove(vt0.c0, vt0.c0), TYPEOF(vt0.c1), (- (vt0.c1)))) AND ((((vt0.c0) NOT NULL), '>랺', ((vt0.c1)OR(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1 COLLATE BINARY) ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((json_remove(vt0.c0, vt0.c0), TYPEOF(vt0.c1), (- (vt0.c1)))) AND ((((vt0.c0) NOT NULL), '>랺', ((vt0.c1)OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((vt0.c1 COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((json_remove(vt0.c0, vt0.c0), TYPEOF(vt0.c1), (- (vt0.c1)))) AND ((((vt0.c0) NOT NULL), '>랺', ((vt0.c1)OR(vt0.c0))))));
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))AND(((vt0.c1)IS NOT('iJ{x'))))) ORDER BY ((vt0.c0)OR(vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))AND(((vt0.c1)IS NOT('iJ{x'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)OR(vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c4  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))AND(((vt0.c1)IS NOT('iJ{x'))))) ORDER BY ((vt0.c0)OR(vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c4  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt0.c0)))AND(((vt0.c1)IS NOT('iJ{x'))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((vt0.c0)OR(vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c4  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((~ (vt0.c0)))AND(((vt0.c1)IS NOT('iJ{x'))))) ORDER BY ((vt0.c0)OR(vt0.c1)) COLLATE NOCASE ASC  NULLS LAST, rt0.c4  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (((vt0.c1))!=((vt0.c0))) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (((vt0.c1))<>((vt0.c0))) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (((vt0.c1))!=((vt0.c0))) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (((vt0.c1))<>((vt0.c0))) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)) THEN (((vt0.c1))!=((vt0.c0))) ELSE ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('k/y*/Pgu') ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (('k/y*/Pgu') IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('k/y*/Pgu') ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (('k/y*/Pgu') IS TRUE)  as count FROM vt0, rt0 ORDER BY vt0.c1 ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('k/y*/Pgu') ORDER BY vt0.c1 ASC;
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1))<>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c1))!=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1))<>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'')))));
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(vt0.c1))!=(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x''))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UNLIKELY(vt0.c1))<>(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(x'')))));
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 NOT INDEXED WHERE (((vt0.c0) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND (((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))));
SELECT * FROM rt0 WHERE (((NULL)*(rt0.c4))) ORDER BY ((896265850)/(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c5 WHEN 1738362445 THEN rt0.c4 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)*(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY ((896265850)/(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c5 WHEN 1738362445 THEN rt0.c4 END)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((NULL)*(rt0.c4))) ORDER BY ((896265850)/(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c5 WHEN 1738362445 THEN rt0.c4 END)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NULL)*(rt0.c4))) IS TRUE)  as count FROM rt0 ORDER BY ((896265850)/(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c5 WHEN 1738362445 THEN rt0.c4 END)) DESC  NULLS LAST);
SELECT * FROM rt0 WHERE (((NULL)*(rt0.c4))) ORDER BY ((896265850)/(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c5 WHEN 1738362445 THEN rt0.c4 END)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))|((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))|((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))|((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))|((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0))))|((vt0.c1 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((TYPEOF(DISTINCT rt0.c3))AND('8遠')))OR(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt0.c3))AND('8遠')))OR(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((TYPEOF(DISTINCT rt0.c3))AND('8遠')))OR(CAST(rt0.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((TYPEOF(DISTINCT rt0.c3))AND('8遠')))OR(CAST(rt0.c1 AS REAL)))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((TYPEOF(DISTINCT rt0.c3))AND('8遠')))OR(CAST(rt0.c1 AS REAL))));
SELECT * FROM vt0 WHERE ((((vt0.c0)GLOB(vt0.c1)) IN ())) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)GLOB(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)GLOB(vt0.c1)) IN ())) ORDER BY vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)GLOB(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 ASC);
SELECT * FROM vt0 WHERE ((((vt0.c0)GLOB(vt0.c1)) IN ())) ORDER BY vt0.c1 ASC;
SELECT ALL * FROM vt0 WHERE ('-1166724918' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1166724918' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-1166724918' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (('-1166724918' COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('-1166724918' COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c4) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c4) ISNULL) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c4) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CAST(((rt0.c4) ISNULL) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (load_extension(CAST(vt0.c1 AS NUMERIC), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(vt0.c1 AS NUMERIC), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (load_extension(CAST(vt0.c1 AS NUMERIC), rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((load_extension(CAST(vt0.c1 AS NUMERIC), rt0.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_valid(rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(rt0.c4)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_valid(rt0.c4));
SELECT SUM(count) FROM (SELECT ALL ((json_valid(rt0.c4)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (json_valid(rt0.c4));
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c5))) BETWEEN ((- (rt0.c4))) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c5))) BETWEEN ((- (rt0.c4))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c5))) BETWEEN ((- (rt0.c4))) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN (rt0.c5))) BETWEEN ((- (rt0.c4))) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((rt0.c1 IN (rt0.c5))) BETWEEN ((- (rt0.c4))) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1e3902a) ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0x1e3902a) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1e3902a) ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((0x1e3902a) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (0x1e3902a) ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))) DESC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END AS INTEGER)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 END AS INTEGER));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY (((0.541325196681188)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((0.541325196681188)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY (((0.541325196681188)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (((0.541325196681188)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT ALL * FROM vt0 WHERE ((- (CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY (((0.541325196681188)) NOT BETWEEN (((+ (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT * FROM rt0 WHERE (((((rt0.c5)IS NOT(rt0.c3)))IS NOT('-1553387276')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)IS NOT(rt0.c3)))IS NOT('-1553387276'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c5)IS NOT(rt0.c3)))IS NOT('-1553387276')));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)IS NOT(rt0.c3)))IS NOT('-1553387276'))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((rt0.c5)IS NOT(rt0.c3)))IS NOT('-1553387276')));
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT NULL, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT NULL, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT NULL, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT NULL, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL(DISTINCT NULL, ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE (((COALESCE(DISTINCT rt0.c2, '73686242')) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c2, '73686242')) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((COALESCE(DISTINCT rt0.c2, '73686242')) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt0.c2, '73686242')) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS INTEGER)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((COALESCE(DISTINCT rt0.c2, '73686242')) NOT BETWEEN (rt0.c1) AND (CAST(rt0.c3 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c4 IN ())) IS TRUE)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c4 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c5 AS REAL))OR(x'')))AND((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c5 AS REAL))OR(x'')))AND((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c5 AS REAL))OR(x'')))AND((+ (rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(rt0.c5 AS REAL))OR(x'')))AND((+ (rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((CAST(rt0.c5 AS REAL))OR(x'')))AND((+ (rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c4)+(rt0.c2)))))OR(((vt0.c0) BETWEEN (rt0.c4) AND (NULL)))))OR(rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c5))))) ORDER BY CASE ((rt0.c0)!=('83700350'))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE ((rt0.c5) IS FALSE) END ASC, (((vt0.c1)*(rt0.c4)) IN ()), (~ (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 END));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c4)+(rt0.c2)))))OR(((vt0.c0) BETWEEN (rt0.c4) AND (NULL)))))OR(rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c0)!=('83700350'))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE ((rt0.c5) IS FALSE) END ASC, (((vt0.c1)*(rt0.c4)) IN ()), (~ (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c4)+(rt0.c2)))))OR(((vt0.c0) BETWEEN (rt0.c4) AND (NULL)))))OR(rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c5))))) ORDER BY CASE ((rt0.c0)!=('83700350'))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE ((rt0.c5) IS FALSE) END ASC, (((vt0.c1)*(rt0.c4)) IN ()), (~ (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 END));
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c4)+(rt0.c2)))))OR(((vt0.c0) BETWEEN (rt0.c4) AND (NULL)))))OR(rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE ((rt0.c0)!=('83700350'))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE ((rt0.c5) IS FALSE) END ASC, (((vt0.c1)*(rt0.c4)) IN ()), (~ (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 END)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c4)+(rt0.c2)))))OR(((vt0.c0) BETWEEN (rt0.c4) AND (NULL)))))OR(rt0.c0)))AND(((((rt0.c3)OR(rt0.c1)))OR(rt0.c5))))) ORDER BY CASE ((rt0.c0)!=('83700350'))  WHEN ((rt0.c3) ISNULL) THEN ((rt0.c5) BETWEEN (rt0.c4) AND (rt0.c3)) ELSE ((rt0.c5) IS FALSE) END ASC, (((vt0.c1)*(rt0.c4)) IN ()), (~ (CASE WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c5 END));
SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c1)) NOT BETWEEN ((('1820337719')>(NULL))) AND ((- (rt0.c3))))) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c1 END)AND('0.8578479423909896')))AND(((rt0.c2)IS(rt0.c5)))))AND(rt0.c5)))OR(('&A' IN ()))), CAST(rt0.c5 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) NOT BETWEEN ((('1820337719')>(NULL))) AND ((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c1 END)AND('0.8578479423909896')))AND(((rt0.c2)IS(rt0.c5)))))AND(rt0.c5)))OR(('&A' IN ()))), CAST(rt0.c5 AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c1)) NOT BETWEEN ((('1820337719')>(NULL))) AND ((- (rt0.c3))))) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c1 END)AND('0.8578479423909896')))AND(((rt0.c2)IS(rt0.c5)))))AND(rt0.c5)))OR(('&A' IN ()))), CAST(rt0.c5 AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c1)) NOT BETWEEN ((('1820337719')>(NULL))) AND ((- (rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c1 END)AND('0.8578479423909896')))AND(((rt0.c2)IS(rt0.c5)))))AND(rt0.c5)))OR(('&A' IN ()))), CAST(rt0.c5 AS REAL) ASC);
SELECT ALL * FROM rt0 WHERE (((LIKELY(rt0.c1)) NOT BETWEEN ((('1820337719')>(NULL))) AND ((- (rt0.c3))))) ORDER BY ((((((((CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c1 END)AND('0.8578479423909896')))AND(((rt0.c2)IS(rt0.c5)))))AND(rt0.c5)))OR(('&A' IN ()))), CAST(rt0.c5 AS REAL) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c5)))))OR(((rt0.c4) ISNULL))))OR('>C')))OR(CASE WHEN rt0.c4 THEN x'' END)))AND(((((((((rt0.c5)AND(rt0.c1)))OR(rt0.c1)))OR('CL')))OR(rt0.c4)))))OR(((rt0.c3)GLOB(rt0.c5))))) ORDER BY LIKELY(rt0.c3 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c4)AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c5)))))OR(((rt0.c4) ISNULL))))OR('>C')))OR(CASE WHEN rt0.c4 THEN x'' END)))AND(((((((((rt0.c5)AND(rt0.c1)))OR(rt0.c1)))OR('CL')))OR(rt0.c4)))))OR(((rt0.c3)GLOB(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(rt0.c3 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c5)))))OR(((rt0.c4) ISNULL))))OR('>C')))OR(CASE WHEN rt0.c4 THEN x'' END)))AND(((((((((rt0.c5)AND(rt0.c1)))OR(rt0.c1)))OR('CL')))OR(rt0.c4)))))OR(((rt0.c3)GLOB(rt0.c5))))) ORDER BY LIKELY(rt0.c3 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((rt0.c4)AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c5)))))OR(((rt0.c4) ISNULL))))OR('>C')))OR(CASE WHEN rt0.c4 THEN x'' END)))AND(((((((((rt0.c5)AND(rt0.c1)))OR(rt0.c1)))OR('CL')))OR(rt0.c4)))))OR(((rt0.c3)GLOB(rt0.c5))))) IS TRUE)  as count FROM rt0 ORDER BY LIKELY(rt0.c3 COLLATE NOCASE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((((((rt0.c4)AND(rt0.c1)))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c5)))))OR(((rt0.c4) ISNULL))))OR('>C')))OR(CASE WHEN rt0.c4 THEN x'' END)))AND(((((((((rt0.c5)AND(rt0.c1)))OR(rt0.c1)))OR('CL')))OR(rt0.c4)))))OR(((rt0.c3)GLOB(rt0.c5))))) ORDER BY LIKELY(rt0.c3 COLLATE NOCASE) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE ('453477051');
SELECT SUM(count) FROM (SELECT (('453477051') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('453477051');
SELECT SUM(count) FROM (SELECT (('453477051') IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ('453477051');
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5)) NOT BETWEEN ((LIKE(vt0.c0, rt0.c4))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN ((LIKE(vt0.c0, rt0.c4))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5)) NOT BETWEEN ((LIKE(vt0.c0, rt0.c4))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5)) NOT BETWEEN ((LIKE(vt0.c0, rt0.c4))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5)) NOT BETWEEN ((LIKE(vt0.c0, rt0.c4))) AND ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c0))<>((vt0.c0))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))!=((vt0.c0))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c0))<>((vt0.c0))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0))!=((vt0.c0))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) IS FALSE)))) ORDER BY (((((vt0.c0))<>((vt0.c0))))>=(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))))  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((- (RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (RTRIM(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (RTRIM(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((- (RTRIM(vt0.c1)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((- (RTRIM(vt0.c1))));
SELECT ALL * FROM rt0 WHERE (885988714);
SELECT SUM(count) FROM (SELECT ((885988714) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (885988714);
SELECT SUM(count) FROM (SELECT ((885988714) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (885988714);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0)>>(rt0.c1)) IN ())) ORDER BY CASE WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3) NOT NULL) ELSE CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>>(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3) NOT NULL) ELSE CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0)>>(rt0.c1)) IN ())) ORDER BY CASE WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3) NOT NULL) ELSE CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)>>(rt0.c1)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3) NOT NULL) ELSE CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END END ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0)>>(rt0.c1)) IN ())) ORDER BY CASE WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c3) NOT NULL) ELSE CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)IS NOT(rt0.c1))) ORDER BY ((((((rt0.c4)&(rt0.c4)))OR(((rt0.c5) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)IS NOT(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c4)&(rt0.c4)))OR(((rt0.c5) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)IS NOT(rt0.c1))) ORDER BY ((((((rt0.c4)&(rt0.c4)))OR(((rt0.c5) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c3 COLLATE NOCASE)IS NOT(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c4)&(rt0.c4)))OR(((rt0.c5) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)IS NOT(rt0.c1))) ORDER BY ((((((rt0.c4)&(rt0.c4)))OR(((rt0.c5) NOT BETWEEN (vt0.c0) AND (rt0.c3)))))AND(vt0.c0 COLLATE NOCASE))  NULLS FIRST, ((((vt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOTNULL) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c0)<>(vt0.c0))))=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)!=(vt0.c0))))=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c0)<>(vt0.c0))))=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)!=(vt0.c0))))=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) ORDER BY (((((vt0.c0)<>(vt0.c0))))=((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) WHERE (rt0.c4 COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT NULL))LIKE((rt0.c4 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) ORDER BY ((((rt0.c3) NOT NULL))LIKE((rt0.c4 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) WHERE (rt0.c4 COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT NULL))LIKE((rt0.c4 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4 COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) ORDER BY ((((rt0.c3) NOT NULL))LIKE((rt0.c4 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((rt0.c0 COLLATE RTRIM) NOTNULL) WHERE (rt0.c4 COLLATE RTRIM COLLATE NOCASE) ORDER BY ((((rt0.c3) NOT NULL))LIKE((rt0.c4 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c4, rt0.c4) AS REAL)) ORDER BY (('t')<(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1)))), CAST(((rt0.c0)IS(rt0.c4)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c4, rt0.c4) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (('t')<(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1)))), CAST(((rt0.c0)IS(rt0.c4)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c4, rt0.c4) AS REAL)) ORDER BY (('t')<(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1)))), CAST(((rt0.c0)IS(rt0.c4)) AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(TRIM(DISTINCT rt0.c4, rt0.c4) AS REAL)) IS TRUE)  as count FROM rt0 ORDER BY (('t')<(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1)))), CAST(((rt0.c0)IS(rt0.c4)) AS NUMERIC) ASC);
SELECT COUNT(*) FROM rt0 WHERE (CAST(TRIM(DISTINCT rt0.c4, rt0.c4) AS REAL)) ORDER BY (('t')<(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1)))), CAST(((rt0.c0)IS(rt0.c4)) AS NUMERIC) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c4) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c4);
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c3, rt0.c5, rt0.c3)) BETWEEN (((((rt0.c4, rt0.c1, rt0.c0))>=((rt0.c1, 8.88789248E8, rt0.c0))), rt0.c5 COLLATE RTRIM, (((0.6507357106853402)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, rt0.c5 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((rt0.c4))!=((rt0.c3))), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), 0.44579876526078066 COLLATE NOCASE)))) ORDER BY UNLIKELY(((rt0.c0)AND(rt0.c3))), (+ (((rt0.c0)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c2, rt0.c3, rt0.c5, rt0.c3)) BETWEEN (((((rt0.c4, rt0.c1, rt0.c0))>=((rt0.c1, 8.88789248E8, rt0.c0))), rt0.c5 COLLATE RTRIM, (((0.6507357106853402)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, rt0.c5 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((rt0.c4))<>((rt0.c3))), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), 0.44579876526078066 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(((rt0.c0)AND(rt0.c3))), (+ (((rt0.c0)GLOB(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c3, rt0.c5, rt0.c3)) BETWEEN (((((rt0.c4, rt0.c1, rt0.c0))>=((rt0.c1, 8.88789248E8, rt0.c0))), rt0.c5 COLLATE RTRIM, (((0.6507357106853402)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, rt0.c5 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((rt0.c4))!=((rt0.c3))), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), 0.44579876526078066 COLLATE NOCASE)))) ORDER BY UNLIKELY(((rt0.c0)AND(rt0.c3))), (+ (((rt0.c0)GLOB(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3, rt0.c2, rt0.c3, rt0.c5, rt0.c3)) BETWEEN (((((rt0.c4, rt0.c1, rt0.c0))>=((rt0.c1, 8.88789248E8, rt0.c0))), rt0.c5 COLLATE RTRIM, (((0.6507357106853402)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, rt0.c5 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((rt0.c4))<>((rt0.c3))), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), 0.44579876526078066 COLLATE NOCASE)))) IS TRUE)  as count FROM rt0 ORDER BY UNLIKELY(((rt0.c0)AND(rt0.c3))), (+ (((rt0.c0)GLOB(rt0.c2)))));
SELECT ALL * FROM rt0 WHERE ((((rt0.c3, rt0.c2, rt0.c3, rt0.c5, rt0.c3)) BETWEEN (((((rt0.c4, rt0.c1, rt0.c0))>=((rt0.c1, 8.88789248E8, rt0.c0))), rt0.c5 COLLATE RTRIM, (((0.6507357106853402)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), rt0.c4 COLLATE BINARY, rt0.c5 COLLATE NOCASE)) AND ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c5 END, (((rt0.c4))!=((rt0.c3))), rt0.c0 COLLATE NOCASE, (rt0.c0 IN ()), 0.44579876526078066 COLLATE NOCASE)))) ORDER BY UNLIKELY(((rt0.c0)AND(rt0.c3))), (+ (((rt0.c0)GLOB(rt0.c2))));
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (0.33341586492211395 IN ())  NULLS LAST, CAST(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (0.33341586492211395 IN ())  NULLS LAST, CAST(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (0.33341586492211395 IN ())  NULLS LAST, CAST(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY (0.33341586492211395 IN ())  NULLS LAST, CAST(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c0) ORDER BY (0.33341586492211395 IN ())  NULLS LAST, CAST(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)) AS REAL) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(rt0.c2) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c2) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_COMPILEOPTION_GET(rt0.c2) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((SQLITE_COMPILEOPTION_GET(rt0.c2) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 END)&(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c2 END)&(NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 END)&(NULL COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt0.c4 THEN rt0.c2 END)&(NULL COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CASE WHEN rt0.c4 THEN rt0.c2 END)&(NULL COLLATE NOCASE)));
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)*(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)*(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)*(rt0.c3))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((CAST(rt0.c5 AS TEXT)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (((rt0.c4)*(rt0.c3)))));
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (rt0.c0))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE ((NOT (rt0.c0)));
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))AND(((vt0.c1)!=(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN 0.6045445538953391 END))) ORDER BY rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))AND(((vt0.c1)!=(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN 0.6045445538953391 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c5  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))AND(((vt0.c1)!=(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN 0.6045445538953391 END))) ORDER BY rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))AND(((vt0.c1)!=(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN 0.6045445538953391 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c5  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))AND(((vt0.c1)!=(rt0.c2)))))AND(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c1 THEN 0.6045445538953391 END))) ORDER BY rt0.c5  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (load_extension(rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((load_extension(rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (load_extension(rt0.c2) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((load_extension(rt0.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) ORDER BY rt0.c3 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) ORDER BY rt0.c3 COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt0.c2 AS REAL)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c3 COLLATE RTRIM ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((NOT (CAST(rt0.c2 AS REAL)))) ORDER BY rt0.c3 COLLATE RTRIM ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c1, vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c1, vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c1, vt0.c1) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(vt0.c1, vt0.c1) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (IFNULL(vt0.c1, vt0.c1) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON '2084913741' WHERE (CASE WHEN CAST(-2.8828687E8 AS REAL) THEN ((((((((rt0.c0)OR(rt0.c5)))OR(vt0.c1)))AND(rt0.c3)))AND(rt0.c3)) ELSE (- ('[/')) END) ORDER BY NULLIF(DISTINCT NULL, rt0.c4) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(-2.8828687E8 AS REAL) THEN ((((((((rt0.c0)OR(rt0.c5)))OR(vt0.c1)))AND(rt0.c3)))AND(rt0.c3)) ELSE (- ('[/')) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON '2084913741' ORDER BY NULLIF(DISTINCT NULL, rt0.c4) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON '2084913741' WHERE (CASE WHEN CAST(-2.8828687E8 AS REAL) THEN ((((((((rt0.c0)OR(rt0.c5)))OR(vt0.c1)))AND(rt0.c3)))AND(rt0.c3)) ELSE (- ('[/')) END) ORDER BY NULLIF(DISTINCT NULL, rt0.c4) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(-2.8828687E8 AS REAL) THEN ((((((((rt0.c0)OR(rt0.c5)))OR(vt0.c1)))AND(rt0.c3)))AND(rt0.c3)) ELSE (- ('[/')) END) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON '2084913741' ORDER BY NULLIF(DISTINCT NULL, rt0.c4) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON '2084913741' WHERE (CASE WHEN CAST(-2.8828687E8 AS REAL) THEN ((((((((rt0.c0)OR(rt0.c5)))OR(vt0.c1)))AND(rt0.c3)))AND(rt0.c3)) ELSE (- ('[/')) END) ORDER BY NULLIF(DISTINCT NULL, rt0.c4) ASC  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 END)OR(CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END)) WHERE ((((rt0.c3 IN ('-,f'))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ('-,f'))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 END)OR(CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END)) ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 END)OR(CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END)) WHERE ((((rt0.c3 IN ('-,f'))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ('-,f'))) NOT NULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 END)OR(CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END)) ORDER BY vt0.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN rt0.c3 END)OR(CASE WHEN rt0.c5 THEN rt0.c4 ELSE x'' END)) WHERE ((((rt0.c3 IN ('-,f'))) NOT NULL)) ORDER BY vt0.c0 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<>((vt0.c0)))))) ORDER BY 0.4015027156018903  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.4015027156018903  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<>((vt0.c0)))))) ORDER BY 0.4015027156018903  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT ((((vt0.c0))<>((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY 0.4015027156018903  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((((vt0.c0))<>((vt0.c0)))))) ORDER BY 0.4015027156018903  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((json_valid(rt0.c0)) BETWEEN (((vt0.c1)|(rt0.c5))) AND ((vt0.c1 IN ('WWuD', vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c0)) BETWEEN (((vt0.c1)|(rt0.c5))) AND ((vt0.c1 IN ('WWuD', vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((json_valid(rt0.c0)) BETWEEN (((vt0.c1)|(rt0.c5))) AND ((vt0.c1 IN ('WWuD', vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((json_valid(rt0.c0)) BETWEEN (((vt0.c1)|(rt0.c5))) AND ((vt0.c1 IN ('WWuD', vt0.c0))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((json_valid(rt0.c0)) BETWEEN (((vt0.c1)|(rt0.c5))) AND ((vt0.c1 IN ('WWuD', vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((LIKE(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST, ((HEX(vt0.c0))==(((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))), CAST(x'4be3' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKE(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST, ((HEX(vt0.c0))=(((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))), CAST(x'4be3' AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((LIKE(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST, ((HEX(vt0.c0))==(((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))), CAST(x'4be3' AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((LIKE(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST, ((HEX(vt0.c0))=(((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))), CAST(x'4be3' AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0 COLLATE NOCASE, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) ORDER BY ((LIKE(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c0)<(vt0.c1))) AND (((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))))  NULLS FIRST, ((HEX(vt0.c0))==(((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))), CAST(x'4be3' AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (x'' IN (rt0.c4, PRINTF(vt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c2))) WHERE (TYPEOF(DISTINCT ((rt0.c0)AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c0)AND(rt0.c3)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (x'' IN (rt0.c4, PRINTF(vt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c2))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (x'' IN (rt0.c4, PRINTF(vt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c2))) WHERE (TYPEOF(DISTINCT ((rt0.c0)AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT ((rt0.c0)AND(rt0.c3)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON (x'' IN (rt0.c4, PRINTF(vt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c2))));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN rt0 ON (x'' IN (rt0.c4, PRINTF(vt0.c1, rt0.c2, rt0.c5, rt0.c4, rt0.c2))) WHERE (TYPEOF(DISTINCT ((rt0.c0)AND(rt0.c3))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((((((((((vt0.c1)LIKE(vt0.c1)))OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(x'')))OR(((vt0.c0)LIKE(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c1 AS REAL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)LIKE(vt0.c1)))OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(x'')))OR(((vt0.c0)LIKE(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((((((((((vt0.c1)LIKE(vt0.c1)))OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(x'')))OR(((vt0.c0)LIKE(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c1 AS REAL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1)LIKE(vt0.c1)))OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(x'')))OR(((vt0.c0)LIKE(vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN CAST(vt0.c1 AS REAL) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END END) ORDER BY ((((((((((vt0.c1)LIKE(vt0.c1)))OR((NOT (vt0.c0)))))AND(vt0.c0 COLLATE RTRIM)))AND(x'')))OR(((vt0.c0)LIKE(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LTRIM((('1774355084') NOTNULL), json_patch(vt0.c0, vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LTRIM((('1774355084') NOTNULL), json_patch(vt0.c0, vt0.c1)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY LTRIM((('1774355084') NOTNULL), json_patch(vt0.c0, vt0.c1)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY LTRIM((('1774355084') NOTNULL), json_patch(vt0.c0, vt0.c1)) ASC);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 AS REAL)) ORDER BY CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN vt0.c0 END ELSE CAST(vt0.c0 AS REAL) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE);
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))) AND (((((rt0.c5)OR(rt0.c0)))OR(rt0.c4))))) ORDER BY ((((('B/' IN ()))AND(CAST(rt0.c2 AS NUMERIC))))AND(((((rt0.c2)OR(rt0.c5)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))) AND (((((rt0.c5)OR(rt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('B/' IN ()))AND(CAST(rt0.c2 AS NUMERIC))))AND(((((rt0.c2)OR(rt0.c5)))OR(rt0.c3)))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))) AND (((((rt0.c5)OR(rt0.c0)))OR(rt0.c4))))) ORDER BY ((((('B/' IN ()))AND(CAST(rt0.c2 AS NUMERIC))))AND(((((rt0.c2)OR(rt0.c5)))OR(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4))) AND (((((rt0.c5)OR(rt0.c0)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY ((((('B/' IN ()))AND(CAST(rt0.c2 AS NUMERIC))))AND(((((rt0.c2)OR(rt0.c5)))OR(rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (IFNULL(vt0.c1, x'') COLLATE RTRIM) ORDER BY NULL, CAST(x'' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c1, x'') COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, CAST(x'' AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (IFNULL(vt0.c1, x'') COLLATE RTRIM) ORDER BY NULL, CAST(x'' AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL(vt0.c1, x'') COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY NULL, CAST(x'' AS NUMERIC) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (IFNULL(vt0.c1, x'') COLLATE RTRIM) ORDER BY NULL, CAST(x'' AS NUMERIC) ASC;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON STRFTIME(((rt0.c4)GLOB(rt0.c1)), ((-1.597019044E9)>=(rt0.c3)), CAST(rt0.c2 AS INTEGER)) WHERE (x'') ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c2 ELSE vt0.c0 END)), UNLIKELY((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON STRFTIME(((rt0.c4)GLOB(rt0.c1)), ((-1.597019044E9)>=(rt0.c3)), CAST(rt0.c2 AS INTEGER)) ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c2 ELSE vt0.c0 END)), UNLIKELY((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON STRFTIME(((rt0.c4)GLOB(rt0.c1)), ((-1.597019044E9)>=(rt0.c3)), CAST(rt0.c2 AS INTEGER)) WHERE (x'') ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c2 ELSE vt0.c0 END)), UNLIKELY((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1))));
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON STRFTIME(((rt0.c4)GLOB(rt0.c1)), ((-1.597019044E9)>=(rt0.c3)), CAST(rt0.c2 AS INTEGER)) ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c2 ELSE vt0.c0 END)), UNLIKELY((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON STRFTIME(((rt0.c4)GLOB(rt0.c1)), ((-1.597019044E9)>=(rt0.c3)), CAST(rt0.c2 AS INTEGER)) WHERE (x'') ORDER BY (- (CASE rt0.c4  WHEN rt0.c5 THEN rt0.c2 ELSE vt0.c0 END)), UNLIKELY((((vt0.c1)) BETWEEN ((rt0.c5)) AND ((rt0.c1))));
SELECT * FROM vt0 WHERE ('0.3706772783821881') ORDER BY '1549193057' DESC;
SELECT SUM(count) FROM (SELECT ALL (('0.3706772783821881') IS TRUE)  as count FROM vt0 ORDER BY '1549193057' DESC);
SELECT * FROM vt0 WHERE ('0.3706772783821881') ORDER BY '1549193057' DESC;
SELECT SUM(count) FROM (SELECT ALL (('0.3706772783821881') IS TRUE)  as count FROM vt0 ORDER BY '1549193057' DESC);
SELECT * FROM vt0 WHERE ('0.3706772783821881') ORDER BY '1549193057' DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0)<>(rt0.c3))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)<>(rt0.c3))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0)<>(rt0.c3))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0)<>(rt0.c3))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (rt0.c1) ORDER BY ((((rt0.c0)<>(rt0.c3))) IS TRUE)  NULLS LAST;
SELECT * FROM rt0 WHERE (UPPER(LAST_INSERT_ROWID())) ORDER BY ((')*') NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt0 ORDER BY ((')*') NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (UPPER(LAST_INSERT_ROWID())) ORDER BY ((')*') NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(LAST_INSERT_ROWID())) IS TRUE)  as count FROM rt0 ORDER BY ((')*') NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM DESC);
SELECT * FROM rt0 WHERE (UPPER(LAST_INSERT_ROWID())) ORDER BY ((')*') NOT BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)AND(NULLIF('-733030665', rt0.c1))))OR('32961005')))OR(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)AND(NULLIF('-733030665', rt0.c1))))OR('32961005')))OR(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)AND(NULLIF('-733030665', rt0.c1))))OR('32961005')))OR(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1) IS FALSE))));
SELECT SUM(count) FROM (SELECT ((((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)AND(NULLIF('-733030665', rt0.c1))))OR('32961005')))OR(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1) IS FALSE)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END)AND(NULLIF('-733030665', rt0.c1))))OR('32961005')))OR(CAST(rt0.c4 AS BLOB))))OR(((rt0.c1) IS FALSE))));
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c1) IS FALSE))OR(((rt0.c4)LIKE(rt0.c4)))))AND(((rt0.c0)>=(rt0.c2)))))AND(rt0.c2 COLLATE NOCASE)))AND(((vt0.c1)>>(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) IS FALSE))OR(((rt0.c4)LIKE(rt0.c4)))))AND(((rt0.c0)>=(rt0.c2)))))AND(rt0.c2 COLLATE NOCASE)))AND(((vt0.c1)>>(rt0.c5))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c1) IS FALSE))OR(((rt0.c4)LIKE(rt0.c4)))))AND(((rt0.c0)>=(rt0.c2)))))AND(rt0.c2 COLLATE NOCASE)))AND(((vt0.c1)>>(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c1) IS FALSE))OR(((rt0.c4)LIKE(rt0.c4)))))AND(((rt0.c0)>=(rt0.c2)))))AND(rt0.c2 COLLATE NOCASE)))AND(((vt0.c1)>>(rt0.c5))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((((((((rt0.c1) IS FALSE))OR(((rt0.c4)LIKE(rt0.c4)))))AND(((rt0.c0)>=(rt0.c2)))))AND(rt0.c2 COLLATE NOCASE)))AND(((vt0.c1)>>(rt0.c5)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c1 IN ())))) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))  WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1, 0.634273571492575, '-634973073')) NOT BETWEEN ((vt0.c1, vt0.c1, -8.78174778E8)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN HEX(vt0.c1) THEN LENGTH(vt0.c1) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c1))<=((-1484492205))) END  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))!=(COALESCE(vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))  WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1, 0.634273571492575, '-634973073')) NOT BETWEEN ((vt0.c1, vt0.c1, -8.78174778E8)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN HEX(vt0.c1) THEN LENGTH(vt0.c1) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c1))<=((-1484492205))) END  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))!=(COALESCE(vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c1 IN ())))) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))  WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1, 0.634273571492575, '-634973073')) NOT BETWEEN ((vt0.c1, vt0.c1, -8.78174778E8)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN HEX(vt0.c1) THEN LENGTH(vt0.c1) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c1))<=((-1484492205))) END  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))!=(COALESCE(vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))  WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1, 0.634273571492575, '-634973073')) NOT BETWEEN ((vt0.c1, vt0.c1, -8.78174778E8)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN HEX(vt0.c1) THEN LENGTH(vt0.c1) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c1))<=((-1484492205))) END  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))!=(COALESCE(vt0.c0, vt0.c0))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((- ((vt0.c1 IN ())))) ORDER BY CASE ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1))  WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c1, 0.634273571492575, '-634973073')) NOT BETWEEN ((vt0.c1, vt0.c1, -8.78174778E8)) AND ((vt0.c0, vt0.c1, vt0.c1))) WHEN HEX(vt0.c1) THEN LENGTH(vt0.c1) WHEN ((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)) THEN (((vt0.c1))<=((-1484492205))) END  NULLS FIRST, ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))!=(COALESCE(vt0.c0, vt0.c0))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((COALESCE(DISTINCT vt0.c0, vt0.c0))AND((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c0)GLOB(x''))))) ORDER BY (NOT (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT vt0.c0, vt0.c0))AND((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c0)GLOB(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((COALESCE(DISTINCT vt0.c0, vt0.c0))AND((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c0)GLOB(x''))))) ORDER BY (NOT (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((COALESCE(DISTINCT vt0.c0, vt0.c0))AND((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c0)GLOB(x''))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c0) NOTNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((COALESCE(DISTINCT vt0.c0, vt0.c0))AND((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c1))))))OR(((vt0.c0)GLOB(x''))))) ORDER BY (NOT (((vt0.c0) NOTNULL))) DESC;
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((rt0.c2)||(rt0.c5))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND (((rt0.c1)|(-265332226))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 ORDER BY ((((rt0.c2)||(rt0.c5))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND (((rt0.c1)|(-265332226)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((rt0.c2)||(rt0.c5))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND (((rt0.c1)|(-265332226))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 IN ()) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 ORDER BY ((((rt0.c2)||(rt0.c5))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND (((rt0.c1)|(-265332226)))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON rt0.c2 WHERE (((vt0.c0 IN ()) IN ())) ORDER BY ((((rt0.c2)||(rt0.c5))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND (((rt0.c1)|(-265332226))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c4) IS FALSE)) ISNULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c4) IS FALSE)) ISNULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c4) IS FALSE)) ISNULL)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY x'' ASC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c4) IS FALSE)) ISNULL)) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY ((NULL)>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY ((NULL)>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY ((NULL)>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY ((NULL)>(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.016149751430805215)||(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.016149751430805215)||(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.016149751430805215)||(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((0.016149751430805215)||(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((0.016149751430805215)||(CASE WHEN vt0.c0 THEN vt0.c1 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((0.7407523989071869)OR(rt0.c3)))AND(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c5)OR(rt0.c5)) END) ORDER BY MAX(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), 0.37282066585159357);
SELECT SUM(count) FROM (SELECT ((CASE ((((0.7407523989071869)OR(rt0.c3)))AND(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c5)OR(rt0.c5)) END) IS TRUE)  as count FROM rt0 ORDER BY MAX(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), 0.37282066585159357));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((0.7407523989071869)OR(rt0.c3)))AND(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c5)OR(rt0.c5)) END) ORDER BY MAX(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), 0.37282066585159357);
SELECT SUM(count) FROM (SELECT ((CASE ((((0.7407523989071869)OR(rt0.c3)))AND(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c5)OR(rt0.c5)) END) IS TRUE)  as count FROM rt0 ORDER BY MAX(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), 0.37282066585159357));
SELECT COUNT(*) FROM rt0 WHERE (CASE ((((0.7407523989071869)OR(rt0.c3)))AND(rt0.c2))  WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c5)OR(rt0.c5)) END) ORDER BY MAX(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)), 0.37282066585159357);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((NULL)GLOB(rt0.c4)) THEN ((NULL)IS NOT(vt0.c1)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c5 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)GLOB(rt0.c4)) THEN ((NULL)IS NOT(vt0.c1)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c5 END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((NULL)GLOB(rt0.c4)) THEN ((NULL)IS NOT(vt0.c1)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c5 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((NULL)GLOB(rt0.c4)) THEN ((NULL)IS NOT(vt0.c1)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c5 END) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (CASE WHEN ((NULL)GLOB(rt0.c4)) THEN ((NULL)IS NOT(vt0.c1)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c5)) THEN ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c3)) WHEN ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN rt0.c5 END);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)AND((((rt0.c3))!=((vt0.c0))))))OR((vt0.c1 IN ())))) ORDER BY (rt0.c5 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND((((rt0.c3))<>((vt0.c0))))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c5 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)AND((((rt0.c3))!=((vt0.c0))))))OR((vt0.c1 IN ())))) ORDER BY (rt0.c5 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3)AND((((rt0.c3))<>((vt0.c0))))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (rt0.c5 COLLATE RTRIM IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((((rt0.c3)AND((((rt0.c3))!=((vt0.c0))))))OR((vt0.c1 IN ())))) ORDER BY (rt0.c5 COLLATE RTRIM IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '8~' ELSE vt0.c0 END)IS((('1299631312')&(vt0.c0))))) ORDER BY ((((((((((((((vt0.c1)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('0.7786990955689141')))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)))AND(((1488831292)<>(vt0.c0)))))OR(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '8~' ELSE vt0.c0 END)IS((('1299631312')&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c1)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('0.7786990955689141')))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)))AND(((1488831292)<>(vt0.c0)))))OR(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '8~' ELSE vt0.c0 END)IS((('1299631312')&(vt0.c0))))) ORDER BY ((((((((((((((vt0.c1)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('0.7786990955689141')))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)))AND(((1488831292)<>(vt0.c0)))))OR(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '8~' ELSE vt0.c0 END)IS((('1299631312')&(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((((((vt0.c1)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('0.7786990955689141')))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)))AND(((1488831292)<>(vt0.c0)))))OR(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE)) ASC);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN '8~' ELSE vt0.c0 END)IS((('1299631312')&(vt0.c0))))) ORDER BY ((((((((((((((vt0.c1)-(vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((((((((vt0.c0)OR(vt0.c0)))OR('0.7786990955689141')))OR(vt0.c0)))OR(vt0.c1)))))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END)))AND(((1488831292)<>(vt0.c0)))))OR(((vt0.c0) IS TRUE))))AND(vt0.c1 COLLATE NOCASE)) ASC;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3 COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3 COLLATE BINARY) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3 COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('-1769283359') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('-1769283359') NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('-1769283359') NOT NULL));
SELECT SUM(count) FROM (SELECT (((('-1769283359') NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('-1769283359') NOT NULL));
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY -2049336477  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY -2049336477  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (x'') ORDER BY -2049336477  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, vt0 ORDER BY -2049336477  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY 0.6620698298250868;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY 0.6620698298250868);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY 0.6620698298250868;
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY 0.6620698298250868);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4))))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))))) ORDER BY 0.6620698298250868;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY vt0.c1  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(NULL))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c0))) IN (CAST(rt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(NULL))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c0))) IN (CAST(rt0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(NULL))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c0))) IN (CAST(rt0.c1 AS TEXT)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UNLIKELY(NULL))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c0))) IN (CAST(rt0.c1 AS TEXT)))  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((UNLIKELY(NULL))!=(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1))))) ORDER BY ((((rt0.c1, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c2, rt0.c3, rt0.c0))) IN (CAST(rt0.c1 AS TEXT)))  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((vt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) ORDER BY UNLIKELY(DISTINCT (0.08391636512003853 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY UNLIKELY(DISTINCT (0.08391636512003853 IN ()))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((vt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) ORDER BY UNLIKELY(DISTINCT (0.08391636512003853 IN ()))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY UNLIKELY(DISTINCT (0.08391636512003853 IN ()))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((vt0.c1)OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c0)) IN ())) ORDER BY UNLIKELY(DISTINCT (0.08391636512003853 IN ()))  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)) THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CASE rt0.c1  WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c2 END END) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c1)))) DESC  NULLS LAST, ((ROUND(vt0.c1, rt0.c5))|((((rt0.c5, vt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)) THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CASE rt0.c1  WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c1)))) DESC  NULLS LAST, ((ROUND(vt0.c1, rt0.c5))|((((rt0.c5, vt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)) THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CASE rt0.c1  WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c2 END END) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c1)))) DESC  NULLS LAST, ((ROUND(vt0.c1, rt0.c5))|((((rt0.c5, vt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)) THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CASE rt0.c1  WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c2 END END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c1)))) DESC  NULLS LAST, ((ROUND(vt0.c1, rt0.c5))|((((rt0.c5, vt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c1)) THEN ((rt0.c2)GLOB(rt0.c0)) ELSE CASE rt0.c1  WHEN rt0.c5 THEN vt0.c1 ELSE rt0.c2 END END) ORDER BY (((((vt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))%(((((((((x'')OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c1)))) DESC  NULLS LAST, ((ROUND(vt0.c1, rt0.c5))|((((rt0.c5, vt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c1))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))>>(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))>>(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))>>(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))>>(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((((((((vt0.c0)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)))>>(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT COUNT(*) FROM rt0 WHERE (((rtreenode(rt0.c5, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt0.c5, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rtreenode(rt0.c5, rt0.c0)) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rtreenode(rt0.c5, rt0.c0)) IS TRUE)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((rtreenode(rt0.c5, rt0.c0)) IS TRUE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))GLOB((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))GLOB((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) IS FALSE))GLOB((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) IS FALSE))GLOB((vt0.c0 IN ()))));
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c3 AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(rt0.c3 AS TEXT));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(0X516e03b6)))OR(vt0.c0)) AS BLOB)) ORDER BY NULLIF((vt0.c1 IN ()), ((vt0.c1)>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(0x516e03b6)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((vt0.c1 IN ()), ((vt0.c1)>=(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(0X516e03b6)))OR(vt0.c0)) AS BLOB)) ORDER BY NULLIF((vt0.c1 IN ()), ((vt0.c1)>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)AND(0x516e03b6)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY NULLIF((vt0.c1 IN ()), ((vt0.c1)>=(vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)AND(0X516e03b6)))OR(vt0.c0)) AS BLOB)) ORDER BY NULLIF((vt0.c1 IN ()), ((vt0.c1)>=(vt0.c1)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN (((vt0.c0, vt0.c1, rt0.c1))!=((rt0.c0, rt0.c5, rt0.c5))) WHEN ((rt0.c3) BETWEEN (vt0.c1) AND ('-1551665360')) THEN STRFTIME(rt0.c3, rt0.c2, rt0.c0) WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN '0.8255104188542919' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN (((vt0.c0, vt0.c1, rt0.c1))!=((rt0.c0, rt0.c5, rt0.c5))) WHEN ((rt0.c3) BETWEEN (vt0.c1) AND ('-1551665360')) THEN STRFTIME(rt0.c3, rt0.c2, rt0.c0) WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN '0.8255104188542919' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN (((vt0.c0, vt0.c1, rt0.c1))!=((rt0.c0, rt0.c5, rt0.c5))) WHEN ((rt0.c3) BETWEEN (vt0.c1) AND ('-1551665360')) THEN STRFTIME(rt0.c3, rt0.c2, rt0.c0) WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN '0.8255104188542919' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt0.c2)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN (((vt0.c0, vt0.c1, rt0.c1))!=((rt0.c0, rt0.c5, rt0.c5))) WHEN ((rt0.c3) BETWEEN (vt0.c1) AND ('-1551665360')) THEN STRFTIME(rt0.c3, rt0.c2, rt0.c0) WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN '0.8255104188542919' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE ((rt0.c2)IS NOT(rt0.c0))  WHEN ((rt0.c1) NOTNULL) THEN (((vt0.c0, vt0.c1, rt0.c1))!=((rt0.c0, rt0.c5, rt0.c5))) WHEN ((rt0.c3) BETWEEN (vt0.c1) AND ('-1551665360')) THEN STRFTIME(rt0.c3, rt0.c2, rt0.c0) WHEN ((((((((rt0.c0)AND(rt0.c3)))AND(rt0.c5)))OR(rt0.c3)))AND(vt0.c0)) THEN CASE WHEN vt0.c0 THEN '0.8255104188542919' WHEN vt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END END);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)IS NOT(CAST(0.8086805417251406 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(CAST(0.8086805417251406 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)IS NOT(CAST(0.8086805417251406 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(CAST(0.8086805417251406 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)IS NOT(CAST(0.8086805417251406 AS TEXT))));
SELECT COUNT(*) FROM vt0 WHERE (((((('265336059', vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('}HaoPPr', vt0.c0, vt0.c0)))) NOT BETWEEN (CASE WHEN 1264915774 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) ORDER BY vt0.c0, (((1916717700))<((LIKELY(vt0.c1)))), ((x'') NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((('265336059', vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('}HaoPPr', vt0.c0, vt0.c0)))) NOT BETWEEN (CASE WHEN 1264915774 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((1916717700))<((LIKELY(vt0.c1)))), ((x'') NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (((((('265336059', vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('}HaoPPr', vt0.c0, vt0.c0)))) NOT BETWEEN (CASE WHEN 1264915774 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) ORDER BY vt0.c0, (((1916717700))<((LIKELY(vt0.c1)))), ((x'') NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((((((('265336059', vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('}HaoPPr', vt0.c0, vt0.c0)))) NOT BETWEEN (CASE WHEN 1264915774 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, (((1916717700))<((LIKELY(vt0.c1)))), ((x'') NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS REAL))));
SELECT COUNT(*) FROM vt0 WHERE (((((('265336059', vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND (('}HaoPPr', vt0.c0, vt0.c0)))) NOT BETWEEN (CASE WHEN 1264915774 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) NOTNULL)))) ORDER BY vt0.c0, (((1916717700))<((LIKELY(vt0.c1)))), ((x'') NOT BETWEEN ((- (vt0.c1))) AND (CAST(vt0.c0 AS REAL)));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(rt0.c2 AS TEXT) WHERE (((((rt0.c1)AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) ORDER BY CAST((NOT (NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(rt0.c2 AS TEXT) ORDER BY CAST((NOT (NULL)) AS TEXT));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(rt0.c2 AS TEXT) WHERE (((((rt0.c1)AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) ORDER BY CAST((NOT (NULL)) AS TEXT);
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON CAST(rt0.c2 AS TEXT) ORDER BY CAST((NOT (NULL)) AS TEXT));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON CAST(rt0.c2 AS TEXT) WHERE (((((rt0.c1)AND(CAST(rt0.c2 AS TEXT))))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c0))))) ORDER BY CAST((NOT (NULL)) AS TEXT);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN ('75218992') AND (((vt0.c1)|(x'ae57')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN ('75218992') AND (((vt0.c1)|(x'ae57'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN ('75218992') AND (((vt0.c1)|(x'ae57')))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0) NOT NULL)) BETWEEN ('75218992') AND (((vt0.c1)|(x'ae57'))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c0) NOT NULL)) BETWEEN ('75218992') AND (((vt0.c1)|(x'ae57')))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)||(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)||(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)||(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c0)||(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c0)||(rt0.c1)) AS TEXT));
SELECT ALL * FROM vt0 WHERE ('517585377') ORDER BY ((((vt0.c0)<<(NULL))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('517585377') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(NULL))) NOTNULL) ASC);
SELECT ALL * FROM vt0 WHERE ('517585377') ORDER BY ((((vt0.c0)<<(NULL))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT (('517585377') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)<<(NULL))) NOTNULL) ASC);
SELECT ALL * FROM vt0 WHERE ('517585377') ORDER BY ((((vt0.c0)<<(NULL))) NOTNULL) ASC;
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c5)))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(rt0.c5)))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c5)))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)OR(rt0.c5)))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c1)OR(rt0.c5)))/(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))));
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((vt0.c0 COLLATE BINARY)))) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES()  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((vt0.c0 COLLATE BINARY)))) ORDER BY CHANGES()  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((vt0.c0 COLLATE BINARY)))) IS TRUE)  as count FROM vt0 ORDER BY CHANGES()  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))!=((vt0.c0 COLLATE BINARY)))) ORDER BY CHANGES()  NULLS LAST;
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN -1731599408 END) IS FALSE) WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) ORDER BY 0.27493825536766225 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN -1731599408 END) IS FALSE) ORDER BY 0.27493825536766225 ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN -1731599408 END) IS FALSE) WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) ORDER BY 0.27493825536766225 ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c1) ISNULL) COLLATE RTRIM) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN -1731599408 END) IS FALSE) ORDER BY 0.27493825536766225 ASC);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c5 WHEN rt0.c4 THEN vt0.c0 WHEN rt0.c2 THEN -1731599408 END) IS FALSE) WHERE (((rt0.c1) ISNULL) COLLATE RTRIM) ORDER BY 0.27493825536766225 ASC;
SELECT * FROM rt0, vt0 WHERE (((rt0.c2)/(rt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c1) ISNULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1) ISNULL)) IS FALSE) ASC);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2)/(rt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c1) ISNULL)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2)/(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((vt0.c1) ISNULL)) IS FALSE) ASC);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2)/(rt0.c0)) COLLATE NOCASE) ORDER BY ((((vt0.c1) ISNULL)) IS FALSE) ASC;
SELECT COUNT(*) FROM rt0 WHERE (UNICODE(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c5)))) ORDER BY highlight(rt0.c4, (~ (rt0.c0)), (- ('1288524359')), CAST(rt0.c2 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c5)))) IS TRUE)  as count FROM rt0 ORDER BY highlight(rt0.c4, (~ (rt0.c0)), (- ('1288524359')), CAST(rt0.c2 AS TEXT)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (UNICODE(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c5)))) ORDER BY highlight(rt0.c4, (~ (rt0.c0)), (- ('1288524359')), CAST(rt0.c2 AS TEXT)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c5)))) IS TRUE)  as count FROM rt0 ORDER BY highlight(rt0.c4, (~ (rt0.c0)), (- ('1288524359')), CAST(rt0.c2 AS TEXT)) DESC);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0 NOT INDEXED, vt0 WHERE (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (('0.7219992770496406')) AND ((rt0.c1))))OR(0.7436413405389969 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN (('0.7219992770496406')) AND ((rt0.c1))))OR(0.7436413405389969 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (('0.7219992770496406')) AND ((rt0.c1))))OR(0.7436413405389969 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c4)) NOT BETWEEN (('0.7219992770496406')) AND ((rt0.c1))))OR(0.7436413405389969 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((((rt0.c4)) NOT BETWEEN (('0.7219992770496406')) AND ((rt0.c1))))OR(0.7436413405389969 COLLATE RTRIM)));
SELECT ALL * FROM rt0, vt0 WHERE ((((+ (vt0.c0)))<<(((vt0.c1)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<<(((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((+ (vt0.c0)))<<(((vt0.c1)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<<(((vt0.c1)IS NOT(vt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((+ (vt0.c0)))<<(((vt0.c1)IS NOT(vt0.c1)))));
SELECT ALL * FROM rt0 WHERE ((+ ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((NOT (rt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((+ ((NOT (rt0.c1)))));
SELECT ALL * FROM vt0 WHERE (LOWER(UNLIKELY(DISTINCT vt0.c1))) ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(UNLIKELY(DISTINCT vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c1) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (LOWER(UNLIKELY(DISTINCT vt0.c1))) ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c1) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(UNLIKELY(DISTINCT vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c1) IN ()) DESC);
SELECT ALL * FROM vt0 WHERE (LOWER(UNLIKELY(DISTINCT vt0.c1))) ORDER BY (SQLITE_COMPILEOPTION_GET(vt0.c1) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND ((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND ((rt0.c5 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND ((rt0.c5 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND ((rt0.c5 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (rt0.c2) AND ((rt0.c5 IN ()))));
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0)OR(rt0.c3))) IS TRUE)) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (vt0.c0)))<>(LIKELY(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (vt0.c0)))!=(LIKELY(rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0)OR(rt0.c3))) IS TRUE)) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (vt0.c0)))<>(LIKELY(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (vt0.c0)))!=(LIKELY(rt0.c0))) DESC);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((vt0.c0)OR(rt0.c3))) IS TRUE)) ORDER BY ((((rt0.c3) BETWEEN (rt0.c4) AND (vt0.c0)))<>(LIKELY(rt0.c0))) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)==(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) ORDER BY NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)==(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c1)=(vt0.c0)) IN ())) ORDER BY NULL ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((rt0.c0) ISNULL)) WHERE ((~ (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((rt0.c0) ISNULL)) WHERE ((~ (rt0.c3)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c3))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((rt0.c0) ISNULL)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON HEX(DISTINCT ((rt0.c0) ISNULL)) WHERE ((~ (rt0.c3)));
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c4)/(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)/(x''))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c4)/(x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c4)/(x''))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE (((rt0.c4)/(x'')));
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 END)AND(((rt0.c2) NOTNULL))))OR(vt0.c0 COLLATE BINARY)) WHERE (vt0.c1) ORDER BY ((((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c5))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 END)AND(((rt0.c2) NOTNULL))))OR(vt0.c0 COLLATE BINARY)) ORDER BY ((((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c5))) ISNULL)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 END)AND(((rt0.c2) NOTNULL))))OR(vt0.c0 COLLATE BINARY)) WHERE (vt0.c1) ORDER BY ((((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c5))) ISNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 END)AND(((rt0.c2) NOTNULL))))OR(vt0.c0 COLLATE BINARY)) ORDER BY ((((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c5))) ISNULL)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN rt0 ON ((((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN vt0.c0 THEN rt0.c4 END)AND(((rt0.c2) NOTNULL))))OR(vt0.c0 COLLATE BINARY)) WHERE (vt0.c1) ORDER BY ((((((((((vt0.c1)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c5))) ISNULL)  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY TRIM(DISTINCT ((NULL) IS FALSE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '840042473' THEN vt0.c0 ELSE vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((NULL) IS FALSE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '840042473' THEN vt0.c0 ELSE vt0.c1 END) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY TRIM(DISTINCT ((NULL) IS FALSE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '840042473' THEN vt0.c0 ELSE vt0.c1 END) DESC;
SELECT SUM(count) FROM (SELECT ((((vt0.c0) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((NULL) IS FALSE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '840042473' THEN vt0.c0 ELSE vt0.c1 END) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) ISNULL)) ORDER BY TRIM(DISTINCT ((NULL) IS FALSE), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN '840042473' THEN vt0.c0 ELSE vt0.c1 END) DESC;
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (CAST(rt0.c4 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c4 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (CAST(rt0.c4 AS INTEGER))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY (NOT (CAST(rt0.c4 AS INTEGER))) DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c0 COLLATE NOCASE COLLATE NOCASE COLLATE RTRIM) ORDER BY (NOT (CAST(rt0.c4 AS INTEGER))) DESC  NULLS LAST;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c5)IS(rt0.c3)) IN (rt0.c5 COLLATE BINARY))) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)IS(rt0.c3)) IN (rt0.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c5)IS(rt0.c3)) IN (rt0.c5 COLLATE BINARY))) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5)IS(rt0.c3)) IN (rt0.c5 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c5)IS(rt0.c3)) IN (rt0.c5 COLLATE BINARY))) ORDER BY (((vt0.c0) IS TRUE) IN ()) ASC;
SELECT * FROM vt0 WHERE (((vt0.c1)=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE 0xffffffff933b9d34  WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN NULL WHEN (((vt0.c0, vt0.c0, '996903268')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c1 IN (x'')) THEN LIKE(vt0.c0, x'040f', 'B') ELSE ((vt0.c0)/(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)==(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE 0xffffffff933b9d34  WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN NULL WHEN (((vt0.c0, vt0.c0, '996903268')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c1 IN (x'')) THEN LIKE(vt0.c0, x'040f', 'B') ELSE ((vt0.c0)/(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1)=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE 0xffffffff933b9d34  WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN NULL WHEN (((vt0.c0, vt0.c0, '996903268')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c1 IN (x'')) THEN LIKE(vt0.c0, x'040f', 'B') ELSE ((vt0.c0)/(vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1)==(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE 0xffffffff933b9d34  WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN NULL WHEN (((vt0.c0, vt0.c0, '996903268')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c1 IN (x'')) THEN LIKE(vt0.c0, x'040f', 'B') ELSE ((vt0.c0)/(vt0.c0)) END  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1)=(vt0.c0)) COLLATE RTRIM) ORDER BY CASE 0xffffffff933b9d34  WHEN MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c0) THEN NULL WHEN (((vt0.c0, vt0.c0, '996903268')) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))) THEN ((vt0.c0)/(vt0.c0)) WHEN (vt0.c1 IN (x'')) THEN LIKE(vt0.c0, x'040f', 'B') ELSE ((vt0.c0)/(vt0.c0)) END  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN ()) IN (((NULL) IS TRUE))) WHERE (CAST(json_remove(rt0.c5, 0.606861923326995) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(json_remove(rt0.c5, 0.606861923326995) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN ()) IN (((NULL) IS TRUE))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN ()) IN (((NULL) IS TRUE))) WHERE (CAST(json_remove(rt0.c5, 0.606861923326995) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(json_remove(rt0.c5, 0.606861923326995) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN ()) IN (((NULL) IS TRUE))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((rt0.c2 IN ()) IN (((NULL) IS TRUE))) WHERE (CAST(json_remove(rt0.c5, 0.606861923326995) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1)OR(vt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 WHERE ((((x'')) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND ('囔|')))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE NULL END)))) ORDER BY CAST((((vt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c5, 0.0948310605522602, rt0.c5)) AND ((rt0.c0, rt0.c0, vt0.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND ('囔|')))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE NULL END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c5, 0.0948310605522602, rt0.c5)) AND ((rt0.c0, rt0.c0, vt0.c1))) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE ((((x'')) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND ('囔|')))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE NULL END)))) ORDER BY CAST((((vt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c5, 0.0948310605522602, rt0.c5)) AND ((rt0.c0, rt0.c0, vt0.c1))) AS REAL);
SELECT SUM(count) FROM (SELECT (((((x'')) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND ('囔|')))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE NULL END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CAST((((vt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c5, 0.0948310605522602, rt0.c5)) AND ((rt0.c0, rt0.c0, vt0.c1))) AS REAL));
SELECT ALL * FROM rt0, vt0 WHERE ((((x'')) BETWEEN ((((rt0.c1) NOT BETWEEN (x'') AND ('囔|')))) AND ((CASE WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c0 THEN vt0.c1 ELSE NULL END)))) ORDER BY CAST((((vt0.c0, rt0.c1, NULL)) BETWEEN ((rt0.c5, 0.0948310605522602, rt0.c5)) AND ((rt0.c0, rt0.c0, vt0.c1))) AS REAL);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN ((rt0.c3 IN ())) AND (((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN ((rt0.c3 IN ())) AND (((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN ((rt0.c3 IN ())) AND (((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c4)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c2) BETWEEN ((rt0.c3 IN ())) AND (((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c2) BETWEEN ((rt0.c3 IN ())) AND (((vt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c4)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ('?E') ORDER BY ((CASE '0.3722302471877924'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)<<((rt0.c0 IN (rt0.c2, rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('?E') IS TRUE)  as count FROM rt0 ORDER BY ((CASE '0.3722302471877924'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)<<((rt0.c0 IN (rt0.c2, rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('?E') ORDER BY ((CASE '0.3722302471877924'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)<<((rt0.c0 IN (rt0.c2, rt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('?E') IS TRUE)  as count FROM rt0 ORDER BY ((CASE '0.3722302471877924'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)<<((rt0.c0 IN (rt0.c2, rt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM rt0 WHERE ('?E') ORDER BY ((CASE '0.3722302471877924'  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)<<((rt0.c0 IN (rt0.c2, rt0.c1)))) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3)))AND(CAST(rt0.c5 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3)))AND(CAST(rt0.c5 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3)))AND(CAST(rt0.c5 AS INTEGER))));
SELECT SUM(count) FROM (SELECT (((((~ (rt0.c3)))AND(CAST(rt0.c5 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3)))AND(CAST(rt0.c5 AS INTEGER))));
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0) NOTNULL) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(((vt0.c0) NOTNULL) AS INTEGER));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (x'c6a3f177'))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (DATETIME(rt0.c4, vt0.c1, rt0.c5, rt0.c0, rt0.c3)) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c5 END))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 END) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((- (x'c6a3f177'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (DATETIME(rt0.c4, vt0.c1, rt0.c5, rt0.c0, rt0.c3)) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c5 END))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (x'c6a3f177'))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (DATETIME(rt0.c4, vt0.c1, rt0.c5, rt0.c0, rt0.c3)) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c5 END))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 END) AND ((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT (((- (x'c6a3f177'))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (DATETIME(rt0.c4, vt0.c1, rt0.c5, rt0.c0, rt0.c3)) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c5 END))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 END) AND ((vt0.c0 IN ()))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((- (x'c6a3f177'))) ORDER BY ((((((rt0.c4)AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (DATETIME(rt0.c4, vt0.c1, rt0.c5, rt0.c0, rt0.c3)) AND (CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c5 END))  NULLS FIRST, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (CASE rt0.c5  WHEN rt0.c1 THEN rt0.c0 END) AND ((vt0.c0 IN ())));
SELECT COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c3 AS INTEGER) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c3 AS INTEGER) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c3 AS INTEGER) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((x'' COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c3 AS INTEGER) AS TEXT) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (x'' COLLATE NOCASE) ORDER BY CAST(CAST(rt0.c3 AS INTEGER) AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)IS(vt0.c0)) IN ())) ORDER BY ((vt0.c1 COLLATE BINARY)%(vt0.c1)) ASC  NULLS LAST, CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY)%(vt0.c1)) ASC  NULLS LAST, CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (vt0.c0 IN ()) END ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)IS(vt0.c0)) IN ())) ORDER BY ((vt0.c1 COLLATE BINARY)%(vt0.c1)) ASC  NULLS LAST, CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (vt0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)IS(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE BINARY)%(vt0.c1)) ASC  NULLS LAST, CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (vt0.c0 IN ()) END ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)IS(vt0.c0)) IN ())) ORDER BY ((vt0.c1 COLLATE BINARY)%(vt0.c1)) ASC  NULLS LAST, CASE WHEN ((vt0.c1)GLOB(vt0.c1)) THEN (vt0.c0 IN ()) END ASC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)GLOB(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)GLOB(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((vt0.c0)GLOB(vt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c0)))AND((+ (rt0.c0)))))OR((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c0)))AND((+ (rt0.c0)))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c0)))AND((+ (rt0.c0)))))OR((rt0.c4 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c0)))AND((+ (rt0.c0)))))OR((rt0.c4 IN ())))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c4) NOT BETWEEN (rt0.c5) AND (rt0.c0)))AND((+ (rt0.c0)))))OR((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((+ ('6')))&(((((rt0.c2)AND('')))AND('-2087206922')))) WHERE (((((~ (rt0.c4)), ((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)), (- (rt0.c0))))>((('8' IN (rt0.c2)), (vt0.c0 IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((rt0.c2, rt0.c5, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c4)), ((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)), (- (rt0.c0))))>((('8' IN (rt0.c2)), (vt0.c0 IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((rt0.c2, rt0.c5, rt0.c0))))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((+ ('6')))&(((((rt0.c2)AND('')))AND('-2087206922')))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((+ ('6')))&(((((rt0.c2)AND('')))AND('-2087206922')))) WHERE (((((~ (rt0.c4)), ((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)), (- (rt0.c0))))>((('8' IN (rt0.c2)), (vt0.c0 IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((rt0.c2, rt0.c5, rt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL ((((((~ (rt0.c4)), ((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)), (- (rt0.c0))))>((('8' IN (rt0.c2)), (vt0.c0 IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((rt0.c2, rt0.c5, rt0.c0))))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((+ ('6')))&(((((rt0.c2)AND('')))AND('-2087206922')))));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((+ ('6')))&(((((rt0.c2)AND('')))AND('-2087206922')))) WHERE (((((~ (rt0.c4)), ((((vt0.c1)AND(vt0.c0)))OR(rt0.c0)), (- (rt0.c0))))>((('8' IN (rt0.c2)), (vt0.c0 IN ()), (((vt0.c1, vt0.c1, vt0.c1))<=((rt0.c2, rt0.c5, rt0.c0)))))));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5)))IS NOT((((x'', rt0.c0, rt0.c0, rt0.c0, x'd4ed')) NOT BETWEEN ((vt0.c0, rt0.c2, NULL, rt0.c2, '1696649040')) AND ((rt0.c3, rt0.c2, NULL, rt0.c4, rt0.c4)))))) ORDER BY ((CASE WHEN x'' THEN rt0.c5 ELSE vt0.c0 END) BETWEEN (((rt0.c4)*(rt0.c3))) AND (NULL)) DESC, (NOT (DATE(vt0.c1, rt0.c3, rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5)))IS NOT((((x'', rt0.c0, rt0.c0, rt0.c0, x'd4ed')) NOT BETWEEN ((vt0.c0, rt0.c2, NULL, rt0.c2, '1696649040')) AND ((rt0.c3, rt0.c2, NULL, rt0.c4, rt0.c4)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN x'' THEN rt0.c5 ELSE vt0.c0 END) BETWEEN (((rt0.c4)*(rt0.c3))) AND (NULL)) DESC, (NOT (DATE(vt0.c1, rt0.c3, rt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5)))IS NOT((((x'', rt0.c0, rt0.c0, rt0.c0, x'd4ed')) NOT BETWEEN ((vt0.c0, rt0.c2, NULL, rt0.c2, '1696649040')) AND ((rt0.c3, rt0.c2, NULL, rt0.c4, rt0.c4)))))) ORDER BY ((CASE WHEN x'' THEN rt0.c5 ELSE vt0.c0 END) BETWEEN (((rt0.c4)*(rt0.c3))) AND (NULL)) DESC, (NOT (DATE(vt0.c1, rt0.c3, rt0.c1))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5)))IS NOT((((x'', rt0.c0, rt0.c0, rt0.c0, x'd4ed')) NOT BETWEEN ((vt0.c0, rt0.c2, NULL, rt0.c2, '1696649040')) AND ((rt0.c3, rt0.c2, NULL, rt0.c4, rt0.c4)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((CASE WHEN x'' THEN rt0.c5 ELSE vt0.c0 END) BETWEEN (((rt0.c4)*(rt0.c3))) AND (NULL)) DESC, (NOT (DATE(vt0.c1, rt0.c3, rt0.c1))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c5)))IS NOT((((x'', rt0.c0, rt0.c0, rt0.c0, x'd4ed')) NOT BETWEEN ((vt0.c0, rt0.c2, NULL, rt0.c2, '1696649040')) AND ((rt0.c3, rt0.c2, NULL, rt0.c4, rt0.c4)))))) ORDER BY ((CASE WHEN x'' THEN rt0.c5 ELSE vt0.c0 END) BETWEEN (((rt0.c4)*(rt0.c3))) AND (NULL)) DESC, (NOT (DATE(vt0.c1, rt0.c3, rt0.c1))) DESC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ((rt0.c5) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c5);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) WHERE (rt0.c2) ORDER BY (NOT ((('1185990785') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) ORDER BY (NOT ((('1185990785') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) WHERE (rt0.c2) ORDER BY (NOT ((('1185990785') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC;
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) ORDER BY (NOT ((('1185990785') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((NOT (rt0.c1)) IN ()) WHERE (rt0.c2) ORDER BY (NOT ((('1185990785') NOT BETWEEN (rt0.c2) AND (rt0.c3)))) ASC;
SELECT ALL * FROM rt0 WHERE (CAST((+ (NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (NULL)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((+ (NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (NULL)) AS NUMERIC)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((+ (NULL)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c3))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND ((((rt0.c1))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND ((((rt0.c1))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c3))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND ((((rt0.c1))>=((rt0.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (rt0.c3))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND ((((rt0.c1))>=((rt0.c2)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((+ (rt0.c3))) NOT BETWEEN (rt0.c5 COLLATE BINARY) AND ((((rt0.c1))>=((rt0.c2))))));
SELECT * FROM rt0 WHERE (((NULL)<<(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL)<<(rt0.c3)));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)<<(rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((NULL)<<(rt0.c3)));
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3 COLLATE NOCASE)%(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE '' END))) ORDER BY (((rt0.c1 IN (rt0.c2)))OR((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)%(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE '' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c2)))OR((vt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3 COLLATE NOCASE)%(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE '' END))) ORDER BY (((rt0.c1 IN (rt0.c2)))OR((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)%(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE '' END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (((rt0.c1 IN (rt0.c2)))OR((vt0.c1 IN ())))  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (((rt0.c3 COLLATE NOCASE)%(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 ELSE '' END))) ORDER BY (((rt0.c1 IN (rt0.c2)))OR((vt0.c1 IN ())))  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER) COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE BINARY COLLATE RTRIM);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2)) IN ())) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c5 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c5 END IN ())  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2)) IN ())) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c5 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c5 END IN ())  NULLS LAST);
SELECT * FROM vt0 NOT INDEXED, rt0 WHERE ((((rt0.c3) BETWEEN (vt0.c1) AND (rt0.c2)) IN ())) ORDER BY (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c5 END IN ())  NULLS LAST;
SELECT * FROM rt0 WHERE (0.7405112282582057) ORDER BY TIME(rt0.c4 COLLATE RTRIM, (rt0.c3 IN ()), rt0.c3 COLLATE NOCASE) ASC  NULLS FIRST, ((x'f63e')<>(rt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)))OR(rt0.c3)))OR((~ (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7405112282582057) IS TRUE)  as count FROM rt0 ORDER BY TIME(rt0.c4 COLLATE RTRIM, (rt0.c3 IN ()), rt0.c3 COLLATE NOCASE) ASC  NULLS FIRST, ((x'f63e')!=(rt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)))OR(rt0.c3)))OR((~ (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (0.7405112282582057) ORDER BY TIME(rt0.c4 COLLATE RTRIM, (rt0.c3 IN ()), rt0.c3 COLLATE NOCASE) ASC  NULLS FIRST, ((x'f63e')<>(rt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)))OR(rt0.c3)))OR((~ (rt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.7405112282582057) IS TRUE)  as count FROM rt0 ORDER BY TIME(rt0.c4 COLLATE RTRIM, (rt0.c3 IN ()), rt0.c3 COLLATE NOCASE) ASC  NULLS FIRST, ((x'f63e')!=(rt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)))OR(rt0.c3)))OR((~ (rt0.c1))))  NULLS FIRST);
SELECT * FROM rt0 WHERE (0.7405112282582057) ORDER BY TIME(rt0.c4 COLLATE RTRIM, (rt0.c3 IN ()), rt0.c3 COLLATE NOCASE) ASC  NULLS FIRST, ((x'f63e')<>(rt0.c1 COLLATE RTRIM))  NULLS FIRST, ((((((rt0.c0) NOT BETWEEN (rt0.c5) AND (rt0.c0)))OR(rt0.c3)))OR((~ (rt0.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((NULL)AND(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c1)))))OR(rt0.c1)) WHERE (((((rt0.c3) NOT NULL)) BETWEEN (LIKE(rt0.c0, rt0.c2)) AND ((((rt0.c1))==((rt0.c5))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL)) BETWEEN (LIKE(rt0.c0, rt0.c2)) AND ((((rt0.c1))==((rt0.c5)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((NULL)AND(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c1)))))OR(rt0.c1)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((NULL)AND(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c1)))))OR(rt0.c1)) WHERE (((((rt0.c3) NOT NULL)) BETWEEN (LIKE(rt0.c0, rt0.c2)) AND ((((rt0.c1))==((rt0.c5))))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT NULL)) BETWEEN (LIKE(rt0.c0, rt0.c2)) AND ((((rt0.c1))==((rt0.c5)))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((((NULL)AND(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c1)))))OR(rt0.c1)));
SELECT COUNT(*) FROM rt0 INNER JOIN vt0 ON ((((NULL)AND(((rt0.c4) BETWEEN (vt0.c1) AND (rt0.c1)))))OR(rt0.c1)) WHERE (((((rt0.c3) NOT NULL)) BETWEEN (LIKE(rt0.c0, rt0.c2)) AND ((((rt0.c1))==((rt0.c5))))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY (((rt0.c0, rt0.c4, rt0.c5)) BETWEEN (((-169300974 IN ()), CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END, CAST(rt0.c2 AS INTEGER))) AND ((rt0.c1 COLLATE RTRIM, CAST(NULL AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c3 IN ())) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c4, rt0.c5)) BETWEEN (((-169300974 IN ()), CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END, CAST(rt0.c2 AS INTEGER))) AND ((rt0.c1 COLLATE RTRIM, CAST(NULL AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c3 IN ())) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY (((rt0.c0, rt0.c4, rt0.c5)) BETWEEN (((-169300974 IN ()), CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END, CAST(rt0.c2 AS INTEGER))) AND ((rt0.c1 COLLATE RTRIM, CAST(NULL AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c3 IN ())) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c0, rt0.c4, rt0.c5)) BETWEEN (((-169300974 IN ()), CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END, CAST(rt0.c2 AS INTEGER))) AND ((rt0.c1 COLLATE RTRIM, CAST(NULL AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c3 IN ())) IS TRUE) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE ((((~ (rt0.c3))) BETWEEN ((NOT (rt0.c0))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1))))) ORDER BY (((rt0.c0, rt0.c4, rt0.c5)) BETWEEN (((-169300974 IN ()), CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c5 END, CAST(rt0.c2 AS INTEGER))) AND ((rt0.c1 COLLATE RTRIM, CAST(NULL AS INTEGER), ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3))))) ASC, (((rt0.c3 IN ())) IS TRUE) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN CAST(rt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN CAST(rt0.c0 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN CAST(rt0.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)) THEN CAST(rt0.c0 AS NUMERIC) END);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(NULL))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(NULL))) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(NULL))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(NULL))) AND (NULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c1))) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(NULL))) AND (NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4 COLLATE BINARY, ((rt0.c0) ISNULL), ((rt0.c2)<=(rt0.c2))))>((((vt0.c1)OR(-6.28583102E8)), vt0.c1 COLLATE RTRIM, CAST(rt0.c5 AS BLOB))))) ORDER BY ((((((((((rt0.c0)!=(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c5)))))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(TOTAL_CHANGES())))AND(CASE vt0.c1  WHEN x'' THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 COLLATE BINARY, ((rt0.c0) ISNULL), ((rt0.c2)<=(rt0.c2))))>((((vt0.c1)OR(-6.28583102E8)), vt0.c1 COLLATE RTRIM, CAST(rt0.c5 AS BLOB))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c0)<>(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c5)))))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(TOTAL_CHANGES())))AND(CASE vt0.c1  WHEN x'' THEN rt0.c1 END)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4 COLLATE BINARY, ((rt0.c0) ISNULL), ((rt0.c2)<=(rt0.c2))))>((((vt0.c1)OR(-6.28583102E8)), vt0.c1 COLLATE RTRIM, CAST(rt0.c5 AS BLOB))))) ORDER BY ((((((((((rt0.c0)!=(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c5)))))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(TOTAL_CHANGES())))AND(CASE vt0.c1  WHEN x'' THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4 COLLATE BINARY, ((rt0.c0) ISNULL), ((rt0.c2)<=(rt0.c2))))>((((vt0.c1)OR(-6.28583102E8)), vt0.c1 COLLATE RTRIM, CAST(rt0.c5 AS BLOB))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c0)<>(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c5)))))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(TOTAL_CHANGES())))AND(CASE vt0.c1  WHEN x'' THEN rt0.c1 END)));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4 COLLATE BINARY, ((rt0.c0) ISNULL), ((rt0.c2)<=(rt0.c2))))>((((vt0.c1)OR(-6.28583102E8)), vt0.c1 COLLATE RTRIM, CAST(rt0.c5 AS BLOB))))) ORDER BY ((((((((((rt0.c0)!=(rt0.c0)))OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c5)))))OR(((rt0.c1) NOT BETWEEN (vt0.c1) AND (rt0.c2)))))AND(TOTAL_CHANGES())))AND(CASE vt0.c1  WHEN x'' THEN rt0.c1 END));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT));
SELECT * FROM vt0, rt0 WHERE ((((x'')>=(vt0.c0)) IN ())) ORDER BY CASE ((rt0.c5)+(rt0.c1))  WHEN CASE WHEN rt0.c5 THEN NULL ELSE vt0.c0 END THEN (((vt0.c1, vt0.c0, rt0.c1, rt0.c4, rt0.c2))!=((vt0.c1, rt0.c0, vt0.c1, rt0.c3, rt0.c5))) ELSE UPPER(vt0.c0) END, ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '532342449' THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c5, rt0.c2, rt0.c5, 8.46487058E8, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')>=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c5)+(rt0.c1))  WHEN CASE WHEN rt0.c5 THEN NULL ELSE vt0.c0 END THEN (((vt0.c1, vt0.c0, rt0.c1, rt0.c4, rt0.c2))<>((vt0.c1, rt0.c0, vt0.c1, rt0.c3, rt0.c5))) ELSE UPPER(vt0.c0) END, ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '532342449' THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c5, rt0.c2, rt0.c5, 8.46487058E8, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((x'')>=(vt0.c0)) IN ())) ORDER BY CASE ((rt0.c5)+(rt0.c1))  WHEN CASE WHEN rt0.c5 THEN NULL ELSE vt0.c0 END THEN (((vt0.c1, vt0.c0, rt0.c1, rt0.c4, rt0.c2))!=((vt0.c1, rt0.c0, vt0.c1, rt0.c3, rt0.c5))) ELSE UPPER(vt0.c0) END, ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '532342449' THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c5, rt0.c2, rt0.c5, 8.46487058E8, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')>=(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE ((rt0.c5)+(rt0.c1))  WHEN CASE WHEN rt0.c5 THEN NULL ELSE vt0.c0 END THEN (((vt0.c1, vt0.c0, rt0.c1, rt0.c4, rt0.c2))<>((vt0.c1, rt0.c0, vt0.c1, rt0.c3, rt0.c5))) ELSE UPPER(vt0.c0) END, ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '532342449' THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c5, rt0.c2, rt0.c5, 8.46487058E8, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((((x'')>=(vt0.c0)) IN ())) ORDER BY CASE ((rt0.c5)+(rt0.c1))  WHEN CASE WHEN rt0.c5 THEN NULL ELSE vt0.c0 END THEN (((vt0.c1, vt0.c0, rt0.c1, rt0.c4, rt0.c2))!=((vt0.c1, rt0.c0, vt0.c1, rt0.c3, rt0.c5))) ELSE UPPER(vt0.c0) END, ((CASE rt0.c5  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN '532342449' THEN rt0.c0 ELSE rt0.c1 END) NOTNULL) ASC  NULLS FIRST, (((vt0.c1, vt0.c1, vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c5, rt0.c2, rt0.c5, 8.46487058E8, vt0.c0))) COLLATE RTRIM COLLATE NOCASE  NULLS LAST;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((x'')=(vt0.c1)) IN ()) WHERE (((((((((((rt0.c5)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c0))) BETWEEN (rt0.c1) AND (((136431954)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c5)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c0))) BETWEEN (rt0.c1) AND (((136431954)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((x'')==(vt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((x'')=(vt0.c1)) IN ()) WHERE (((((((((((rt0.c5)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c0))) BETWEEN (rt0.c1) AND (((136431954)GLOB(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c5)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c0))) BETWEEN (rt0.c1) AND (((136431954)GLOB(vt0.c1))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON (((x'')==(vt0.c1)) IN ()));
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON (((x'')=(vt0.c1)) IN ()) WHERE (((((((((((rt0.c5)OR(vt0.c0)))AND(rt0.c1)))OR(rt0.c4)))AND(vt0.c0))) BETWEEN (rt0.c1) AND (((136431954)GLOB(vt0.c1)))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((((((rt0.c5)&(rt0.c4))))!=((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)&(rt0.c4))))!=((rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((((((rt0.c5)&(rt0.c4))))!=((rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt0.c5)&(rt0.c4))))!=((rt0.c2)))) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON (NOT ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))));
SELECT ALL * FROM vt0 CROSS JOIN rt0 ON (NOT ((((vt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))) WHERE ((((((rt0.c5)&(rt0.c4))))!=((rt0.c2))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ASC  NULLS LAST, ((((((((((vt0.c1)|(rt0.c2)))AND(0.9635905882572776)))AND((- (rt0.c5)))))OR(((rt0.c5)>(rt0.c2)))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (LOWER(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ASC  NULLS LAST, ((((((((((vt0.c1)|(rt0.c2)))AND(0.9635905882572776)))AND((- (rt0.c5)))))OR(((rt0.c5)>(rt0.c2)))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (LOWER(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ASC  NULLS LAST, ((((((((((vt0.c1)|(rt0.c2)))AND(0.9635905882572776)))AND((- (rt0.c5)))))OR(((rt0.c5)>(rt0.c2)))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (LOWER(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((- (rt0.c3)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ASC  NULLS LAST, ((((((((((vt0.c1)|(rt0.c2)))AND(0.9635905882572776)))AND((- (rt0.c5)))))OR(((rt0.c5)>(rt0.c2)))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (LOWER(DISTINCT vt0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((- (rt0.c3)) IN ())) ORDER BY (- (((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) ASC  NULLS LAST, ((((((((((vt0.c1)|(rt0.c2)))AND(0.9635905882572776)))AND((- (rt0.c5)))))OR(((rt0.c5)>(rt0.c2)))))OR(rt0.c2)) ASC  NULLS LAST, (NOT (LOWER(DISTINCT vt0.c0)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('-[\r℆?Ds') ORDER BY rt0.c5 ASC  NULLS FIRST, CASE WHEN TRIM(rt0.c0) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-[\r℆?Ds') IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c5 ASC  NULLS FIRST, CASE WHEN TRIM(rt0.c0) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('-[\r℆?Ds') ORDER BY rt0.c5 ASC  NULLS FIRST, CASE WHEN TRIM(rt0.c0) THEN rt0.c2 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-[\r℆?Ds') IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c5 ASC  NULLS FIRST, CASE WHEN TRIM(rt0.c0) THEN rt0.c2 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ('-[\r℆?Ds') ORDER BY rt0.c5 ASC  NULLS FIRST, CASE WHEN TRIM(rt0.c0) THEN rt0.c2 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY (((((- (rt0.c1)))AND((rt0.c3 IN ()))))AND(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((- (rt0.c1)))AND((rt0.c3 IN ()))))AND(((rt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM) ORDER BY (((((- (rt0.c1)))AND((rt0.c3 IN ()))))AND(((rt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((- (rt0.c1)))AND((rt0.c3 IN ()))))AND(((rt0.c0) IS TRUE))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((rt0.c4)AND(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((rt0.c4)AND(rt0.c2)))AND(rt0.c4)))));
SELECT SUM(count) FROM (SELECT (((NOT (((((rt0.c4)AND(rt0.c2)))AND(rt0.c4))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (((((rt0.c4)AND(rt0.c2)))AND(rt0.c4)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.007415729230419887 IN ())) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(((vt0.c0)<<(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '-373482799'))))>>((vt0.c0 IN ()))), NULL;
SELECT SUM(count) FROM (SELECT (((0.007415729230419887 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(((vt0.c0)<<(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '-373482799'))))>>((vt0.c0 IN ()))), NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.007415729230419887 IN ())) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(((vt0.c0)<<(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '-373482799'))))>>((vt0.c0 IN ()))), NULL;
SELECT SUM(count) FROM (SELECT (((0.007415729230419887 IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(((vt0.c0)<<(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '-373482799'))))>>((vt0.c0 IN ()))), NULL);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.007415729230419887 IN ())) ORDER BY ((((vt0.c1 COLLATE NOCASE)AND(((vt0.c0)<<(vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER)))  NULLS FIRST, (((((vt0.c0, vt0.c1, vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c1, vt0.c0, vt0.c1, '-373482799'))))>>((vt0.c0 IN ()))), NULL;
SELECT * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN ()));
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND (((NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND (((NOT (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND (((NOT (rt0.c3)))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((((rt0.c0) IS FALSE))) AND (((NOT (rt0.c3))))));
SELECT * FROM vt0 WHERE ((- (CHANGES()))) ORDER BY ((vt0.c1)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (NULL) AND (((0.9251065032350452)%(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (NULL) AND (((0.9251065032350452)%(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (CHANGES()))) ORDER BY ((vt0.c1)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (NULL) AND (((0.9251065032350452)%(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (CHANGES()))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (NULL) AND (((0.9251065032350452)%(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE ((- (CHANGES()))) ORDER BY ((vt0.c1)IS(vt0.c0)) COLLATE BINARY COLLATE RTRIM DESC  NULLS FIRST, ((vt0.c0) NOT BETWEEN (NULL) AND (((0.9251065032350452)%(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (LIKE(vt0.c0, ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) ORDER BY ((((((((MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c1))OR(vt0.c0)))AND((((vt0.c1))>((vt0.c0))))))OR((vt0.c1 IN ()))))OR(NULL COLLATE NOCASE)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB)))>=(((vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0, ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c1))OR(vt0.c0)))AND((((vt0.c1))>((vt0.c0))))))OR((vt0.c1 IN ()))))OR(NULL COLLATE NOCASE)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB)))>=(((vt0.c0 IN ())))) DESC);
SELECT ALL * FROM vt0 WHERE (LIKE(vt0.c0, ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) ORDER BY ((((((((MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c1))OR(vt0.c0)))AND((((vt0.c1))>((vt0.c0))))))OR((vt0.c1 IN ()))))OR(NULL COLLATE NOCASE)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB)))>=(((vt0.c0 IN ())))) DESC;
SELECT SUM(count) FROM (SELECT ((LIKE(vt0.c0, ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c1))OR(vt0.c0)))AND((((vt0.c1))>((vt0.c0))))))OR((vt0.c1 IN ()))))OR(NULL COLLATE NOCASE)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB)))>=(((vt0.c0 IN ())))) DESC);
SELECT ALL * FROM vt0 WHERE (LIKE(vt0.c0, ((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))) ORDER BY ((((((((MAX(vt0.c1, vt0.c1, vt0.c1, vt0.c1))OR(vt0.c0)))AND((((vt0.c1))>((vt0.c0))))))OR((vt0.c1 IN ()))))OR(NULL COLLATE NOCASE)) DESC  NULLS FIRST, (((CAST(vt0.c0 AS BLOB)))>=(((vt0.c0 IN ())))) DESC;
SELECT ALL * FROM rt0, vt0 WHERE (0xffffffffb99555cf) ORDER BY (-9.6129329E8 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffb99555cf) IS TRUE)  as count FROM rt0, vt0 ORDER BY (-9.6129329E8 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (0xffffffffb99555cf) ORDER BY (-9.6129329E8 IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0xffffffffb99555cf) IS TRUE)  as count FROM rt0, vt0 ORDER BY (-9.6129329E8 IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (0xffffffffb99555cf) ORDER BY (-9.6129329E8 IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((x'' COLLATE BINARY) NOT NULL)) ORDER BY x'' ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))/(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY x'' ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))/(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'' COLLATE BINARY) NOT NULL)) ORDER BY x'' ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))/(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'' COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY x'' ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))/(vt0.c0 COLLATE RTRIM))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((x'' COLLATE BINARY) NOT NULL)) ORDER BY x'' ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))/(vt0.c0 COLLATE RTRIM))  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((x'')&(rt0.c3)) AS NUMERIC)) ORDER BY IFNULL(DISTINCT CAST(rt0.c3 AS NUMERIC), ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) ASC, ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 END)/(((((rt0.c0)OR(rt0.c5)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')&(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY IFNULL(DISTINCT CAST(rt0.c3 AS NUMERIC), ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) ASC, ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 END)/(((((rt0.c0)OR(rt0.c5)))OR(vt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((x'')&(rt0.c3)) AS NUMERIC)) ORDER BY IFNULL(DISTINCT CAST(rt0.c3 AS NUMERIC), ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) ASC, ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 END)/(((((rt0.c0)OR(rt0.c5)))OR(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'')&(rt0.c3)) AS NUMERIC)) IS TRUE)  as count FROM vt0 NOT INDEXED, rt0 ORDER BY IFNULL(DISTINCT CAST(rt0.c3 AS NUMERIC), ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) ASC, ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 END)/(((((rt0.c0)OR(rt0.c5)))OR(vt0.c0)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE (CAST(((x'')&(rt0.c3)) AS NUMERIC)) ORDER BY IFNULL(DISTINCT CAST(rt0.c3 AS NUMERIC), ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c1)))  NULLS FIRST, CAST(rt0.c3 AS NUMERIC) ASC, ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN NULL THEN rt0.c1 WHEN vt0.c1 THEN rt0.c2 END)/(((((rt0.c0)OR(rt0.c5)))OR(vt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0))>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0))>((vt0.c1))))));
SELECT SUM(count) FROM (SELECT (((~ ((((vt0.c0))>((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((~ ((((vt0.c0))>((vt0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)%(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)%(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)%(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)%(vt0.c0)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)%(vt0.c0)) AS REAL));
SELECT * FROM rt0 WHERE (json_extract(((rt0.c2) IS FALSE), HEX(rt0.c5))) ORDER BY CAST(rt0.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((rt0.c2) IS FALSE), HEX(rt0.c5))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(rt0.c1 AS BLOB) DESC);
SELECT * FROM rt0 WHERE (json_extract(((rt0.c2) IS FALSE), HEX(rt0.c5))) ORDER BY CAST(rt0.c1 AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ((json_extract(((rt0.c2) IS FALSE), HEX(rt0.c5))) IS TRUE)  as count FROM rt0 NOT INDEXED ORDER BY CAST(rt0.c1 AS BLOB) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((json_insert(rt0.c5, NULL, rt0.c3)) ISNULL)) ORDER BY CASE WHEN ((((((((rt0.c4)OR(x'')))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c5)) THEN ((rt0.c4) ISNULL) ELSE ((rt0.c2) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt0.c5, NULL, rt0.c3)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c4)OR(x'')))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c5)) THEN ((rt0.c4) ISNULL) ELSE ((rt0.c2) ISNULL) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((json_insert(rt0.c5, NULL, rt0.c3)) ISNULL)) ORDER BY CASE WHEN ((((((((rt0.c4)OR(x'')))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c5)) THEN ((rt0.c4) ISNULL) ELSE ((rt0.c2) ISNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt0.c5, NULL, rt0.c3)) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c4)OR(x'')))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c5)) THEN ((rt0.c4) ISNULL) ELSE ((rt0.c2) ISNULL) END  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (((json_insert(rt0.c5, NULL, rt0.c3)) ISNULL)) ORDER BY CASE WHEN ((((((((rt0.c4)OR(x'')))AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c5)) THEN ((rt0.c4) ISNULL) ELSE ((rt0.c2) ISNULL) END  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY (((~ (rt0.c3))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c3))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY (((~ (rt0.c3))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((~ (rt0.c3))) NOT NULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c1) ORDER BY (((~ (rt0.c3))) NOT NULL) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (0.19115186197075507) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.19115186197075507) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.19115186197075507) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.19115186197075507) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (0.19115186197075507) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) AND (x'')));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) AND (x''))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c3 COLLATE RTRIM) BETWEEN ((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c4)))) AND (x'')));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c0)IS(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c0)IS(vt0.c1)) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)*(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)IS(vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)*(vt0.c1)) COLLATE NOCASE) ORDER BY ((vt0.c0)IS(vt0.c1)) COLLATE NOCASE;
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c5) ORDER BY ((vt0.c1)==(rt0.c1)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(rt0.c5 AS TEXT)) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c4)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((vt0.c1)=(rt0.c1)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(rt0.c5 AS TEXT)) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c4)>=(vt0.c0)))));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c5) ORDER BY ((vt0.c1)==(rt0.c1)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(rt0.c5 AS TEXT)) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c4)>=(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((vt0.c1)=(rt0.c1)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(rt0.c5 AS TEXT)) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c4)>=(vt0.c0)))));
SELECT * FROM rt0 NATURAL JOIN vt0 WHERE (rt0.c5) ORDER BY ((vt0.c1)==(rt0.c1)) COLLATE RTRIM DESC  NULLS LAST, ((CAST(rt0.c5 AS TEXT)) BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt0.c4)>=(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5, rt0.c5, vt0.c1)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c1), ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), NULLIF(0.4891332196637842, vt0.c0))) AND ((CAST(rt0.c3 AS INTEGER), (((rt0.c5)) BETWEEN ((vt0.c1)) AND ((6.00568112E8))), ((rt0.c0)<>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5, rt0.c5, vt0.c1)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c1), ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), NULLIF(0.4891332196637842, vt0.c0))) AND ((CAST(rt0.c3 AS INTEGER), (((rt0.c5)) BETWEEN ((vt0.c1)) AND ((6.00568112E8))), ((rt0.c0)<>(rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5, rt0.c5, vt0.c1)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c1), ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), NULLIF(0.4891332196637842, vt0.c0))) AND ((CAST(rt0.c3 AS INTEGER), (((rt0.c5)) BETWEEN ((vt0.c1)) AND ((6.00568112E8))), ((rt0.c0)<>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c5, rt0.c5, vt0.c1)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c1), ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), NULLIF(0.4891332196637842, vt0.c0))) AND ((CAST(rt0.c3 AS INTEGER), (((rt0.c5)) BETWEEN ((vt0.c1)) AND ((6.00568112E8))), ((rt0.c0)<>(rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c5, rt0.c5, vt0.c1)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c1), ((((((((rt0.c0)AND(rt0.c4)))OR(vt0.c1)))OR(vt0.c1)))AND(NULL)), NULLIF(0.4891332196637842, vt0.c0))) AND ((CAST(rt0.c3 AS INTEGER), (((rt0.c5)) BETWEEN ((vt0.c1)) AND ((6.00568112E8))), ((rt0.c0)<>(rt0.c3))))));
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS BLOB))/(LIKELIHOOD(DISTINCT rt0.c3, 0.3676713500693186))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))/(LIKELIHOOD(DISTINCT rt0.c3, 0.3676713500693186)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS BLOB))/(LIKELIHOOD(DISTINCT rt0.c3, 0.3676713500693186))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c3 AS BLOB))/(LIKELIHOOD(DISTINCT rt0.c3, 0.3676713500693186)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(rt0.c3 AS BLOB))/(LIKELIHOOD(DISTINCT rt0.c3, 0.3676713500693186))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(((((0.5837722076324434)AND(rt0.c3)))OR(rt0.c4)))) ASC, ((-1.798150009E9) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c4))))  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(((((0.5837722076324434)AND(rt0.c3)))OR(rt0.c4)))) ASC, ((-1.798150009E9) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c4))))  NULLS LAST, rt0.c5  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(((((0.5837722076324434)AND(rt0.c3)))OR(rt0.c4)))) ASC, ((-1.798150009E9) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c4))))  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(((((0.5837722076324434)AND(rt0.c3)))OR(rt0.c4)))) ASC, ((-1.798150009E9) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c4))))  NULLS LAST, rt0.c5  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c0) BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(vt0.c1 AS REAL)))) ORDER BY ((((((((rt0.c2)OR(rt0.c1)))OR(vt0.c0)))AND((NOT (rt0.c2)))))OR(((((0.5837722076324434)AND(rt0.c3)))OR(rt0.c4)))) ASC, ((-1.798150009E9) NOT BETWEEN (((vt0.c1) NOT NULL)) AND (((rt0.c4) NOT BETWEEN (vt0.c1) AND (rt0.c4))))  NULLS LAST, rt0.c5  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((0.6823434198563456)OR(((NULL)<<(vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))%((((x'966a')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6823434198563456)OR(((NULL)<<(vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))%((((x'966a')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((0.6823434198563456)OR(((NULL)<<(vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))%((((x'966a')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0.6823434198563456)OR(((NULL)<<(vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))%((((x'966a')) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM vt0 WHERE (((((0.6823434198563456)OR(((NULL)<<(vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) ORDER BY ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))%((((x'966a')) BETWEEN ((vt0.c1)) AND ((vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)AND(vt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY (((vt0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (NULL COLLATE BINARY)), (NOT (x'3fbc250d'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (NULL COLLATE BINARY)), (NOT (x'3fbc250d'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY (((vt0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (NULL COLLATE BINARY)), (NOT (x'3fbc250d'))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL)) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY (((vt0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (NULL COLLATE BINARY)), (NOT (x'3fbc250d'))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) NOT NULL)) ORDER BY (((vt0.c0 IN ())) BETWEEN (TYPEOF(DISTINCT vt0.c0)) AND (NULL COLLATE BINARY)), (NOT (x'3fbc250d'))  NULLS FIRST;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN vt0.c0 THEN CASE vt0.c1  WHEN rt0.c5 THEN rt0.c2 END WHEN IFNULL(DISTINCT rt0.c4, rt0.c2) THEN 790797419 WHEN (~ (rt0.c2)) THEN CAST(rt0.c3 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS NUMERIC)  WHEN vt0.c0 THEN CASE vt0.c1  WHEN rt0.c5 THEN rt0.c2 END WHEN IFNULL(DISTINCT rt0.c4, rt0.c2) THEN 790797419 WHEN (~ (rt0.c2)) THEN CAST(rt0.c3 AS TEXT) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN vt0.c0 THEN CASE vt0.c1  WHEN rt0.c5 THEN rt0.c2 END WHEN IFNULL(DISTINCT rt0.c4, rt0.c2) THEN 790797419 WHEN (~ (rt0.c2)) THEN CAST(rt0.c3 AS TEXT) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST(vt0.c1 AS NUMERIC)  WHEN vt0.c0 THEN CASE vt0.c1  WHEN rt0.c5 THEN rt0.c2 END WHEN IFNULL(DISTINCT rt0.c4, rt0.c2) THEN 790797419 WHEN (~ (rt0.c2)) THEN CAST(rt0.c3 AS TEXT) END) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (CASE CAST(vt0.c1 AS NUMERIC)  WHEN vt0.c0 THEN CASE vt0.c1  WHEN rt0.c5 THEN rt0.c2 END WHEN IFNULL(DISTINCT rt0.c4, rt0.c2) THEN 790797419 WHEN (~ (rt0.c2)) THEN CAST(rt0.c3 AS TEXT) END);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c4, vt0.c1, rt0.c3))) IN ())) ORDER BY ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) NOT NULL))))OR(rt0.c5 COLLATE RTRIM)) DESC, ((((SUBSTR(vt0.c0, rt0.c4))OR((('993269680') NOT NULL))))OR((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c4, vt0.c1, rt0.c3))) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) NOT NULL))))OR(rt0.c5 COLLATE RTRIM)) DESC, ((((SUBSTR(vt0.c0, rt0.c4))OR((('993269680') NOT NULL))))OR((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c4, vt0.c1, rt0.c3))) IN ())) ORDER BY ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) NOT NULL))))OR(rt0.c5 COLLATE RTRIM)) DESC, ((((SUBSTR(vt0.c0, rt0.c4))OR((('993269680') NOT NULL))))OR((rt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c4, vt0.c1, rt0.c3))) IN ())) IS TRUE)  as count FROM rt0 NATURAL JOIN vt0 ORDER BY ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) NOT NULL))))OR(rt0.c5 COLLATE RTRIM)) DESC, ((((SUBSTR(vt0.c0, rt0.c4))OR((('993269680') NOT NULL))))OR((rt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM rt0 NATURAL JOIN vt0 WHERE (((((rt0.c2, vt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c3, vt0.c1)) AND ((rt0.c4, vt0.c1, rt0.c3))) IN ())) ORDER BY ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c0) NOT NULL))))OR(rt0.c5 COLLATE RTRIM)) DESC, ((((SUBSTR(vt0.c0, rt0.c4))OR((('993269680') NOT NULL))))OR((rt0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) IS FALSE));
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND (0.48403871965756795)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND (0.48403871965756795))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND (0.48403871965756795)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND (0.48403871965756795))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c0) NOT BETWEEN ((((rt0.c0))>((rt0.c0)))) AND (0.48403871965756795)));
SELECT ALL * FROM rt0 WHERE (((rt0.c5 COLLATE BINARY)!=(((((rt0.c2)OR(rt0.c3)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE BINARY)!=(((((rt0.c2)OR(rt0.c3)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c5 COLLATE BINARY)!=(((((rt0.c2)OR(rt0.c3)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5 COLLATE BINARY)!=(((((rt0.c2)OR(rt0.c3)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c5 COLLATE BINARY)!=(((((rt0.c2)OR(rt0.c3)))OR(rt0.c5)))));
SELECT ALL * FROM vt0 WHERE (0.052280517534645576) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), (vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.052280517534645576) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT (+ (vt0.c0)), (vt0.c1 IN ())) DESC);
SELECT ALL * FROM vt0 WHERE (0.052280517534645576) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), (vt0.c1 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.052280517534645576) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT (+ (vt0.c0)), (vt0.c1 IN ())) DESC);
SELECT ALL * FROM vt0 WHERE (0.052280517534645576) ORDER BY TRIM(DISTINCT (+ (vt0.c0)), (vt0.c1 IN ())) DESC;
SELECT COUNT(*) FROM rt0 WHERE ((NOT (('U[p蘉AQJlc' IN ())))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (('U[p蘉AQJlc' IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (('U[p蘉AQJlc' IN ())))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (('U[p蘉AQJlc' IN ())))) IS TRUE)  as count FROM rt0 ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((NOT (('U[p蘉AQJlc' IN ())))) ORDER BY CAST(CAST(rt0.c2 AS TEXT) AS NUMERIC)  NULLS FIRST;
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'45fc' THEN vt0.c1 ELSE NULL END)AND((~ (NULL))))) ORDER BY (+ (522408922))  NULLS FIRST, vt0.c1  NULLS LAST, (((((+ (vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'45fc' THEN vt0.c1 ELSE NULL END)AND((~ (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (522408922))  NULLS FIRST, vt0.c1  NULLS LAST, (((((+ (vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'45fc' THEN vt0.c1 ELSE NULL END)AND((~ (NULL))))) ORDER BY (+ (522408922))  NULLS FIRST, vt0.c1  NULLS LAST, (((((+ (vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN x'45fc' THEN vt0.c1 ELSE NULL END)AND((~ (NULL))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (522408922))  NULLS FIRST, vt0.c1  NULLS LAST, (((((+ (vt0.c1)))AND(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)))OR(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c5 COLLATE BINARY) NOTNULL) WHERE (json_insert((((vt0.c1, rt0.c0, -1016047311))>=((rt0.c3, x'', rt0.c1))), IFNULL(rt0.c2, rt0.c1), 0.46698296177023113));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt0.c1, rt0.c0, -1016047311))>=((rt0.c3, x'', rt0.c1))), IFNULL(rt0.c2, rt0.c1), 0.46698296177023113)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c5 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c5 COLLATE BINARY) NOTNULL) WHERE (json_insert((((vt0.c1, rt0.c0, -1016047311))>=((rt0.c3, x'', rt0.c1))), IFNULL(rt0.c2, rt0.c1), 0.46698296177023113));
SELECT SUM(count) FROM (SELECT ALL ((json_insert((((vt0.c1, rt0.c0, -1016047311))>=((rt0.c3, x'', rt0.c1))), IFNULL(rt0.c2, rt0.c1), 0.46698296177023113)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c5 COLLATE BINARY) NOTNULL));
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((rt0.c5 COLLATE BINARY) NOTNULL) WHERE (json_insert((((vt0.c1, rt0.c0, -1016047311))>=((rt0.c3, x'', rt0.c1))), IFNULL(rt0.c2, rt0.c1), 0.46698296177023113));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY x'' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))AND(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY x'' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, NULL)) AND ((vt0.c0, vt0.c1, vt0.c0))))AND(CAST(vt0.c1 AS TEXT)))) ORDER BY x'' ASC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (CASE rt0.c4  WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c4)>(rt0.c1)) WHEN ((rt0.c1)OR(x'')) THEN ((rt0.c0)LIKE(rt0.c5)) WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((((((((rt0.c0)AND('')))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) ORDER BY 0.8319897049870174  NULLS LAST, (((rt0.c5)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c4)>(rt0.c1)) WHEN ((rt0.c1)OR(x'')) THEN ((rt0.c0)LIKE(rt0.c5)) WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((((((((rt0.c0)AND('')))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY 0.8319897049870174  NULLS LAST, (((rt0.c5)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c4  WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c4)>(rt0.c1)) WHEN ((rt0.c1)OR(x'')) THEN ((rt0.c0)LIKE(rt0.c5)) WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((((((((rt0.c0)AND('')))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) ORDER BY 0.8319897049870174  NULLS LAST, (((rt0.c5)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE rt0.c4  WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c4)>(rt0.c1)) WHEN ((rt0.c1)OR(x'')) THEN ((rt0.c0)LIKE(rt0.c5)) WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((((((((rt0.c0)AND('')))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) IS TRUE)  as count FROM rt0 ORDER BY 0.8319897049870174  NULLS LAST, (((rt0.c5)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (CASE rt0.c4  WHEN (((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN ((rt0.c4)>(rt0.c1)) WHEN ((rt0.c1)OR(x'')) THEN ((rt0.c0)LIKE(rt0.c5)) WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((((((((rt0.c0)AND('')))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)) END) ORDER BY 0.8319897049870174  NULLS LAST, (((rt0.c5)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1)))) AND ((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))))) DESC  NULLS LAST, rt0.c3 DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE (((rt0.c0)-(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)-(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE (((rt0.c0)-(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((rt0.c0)-(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c2 COLLATE NOCASE WHERE (((rt0.c0)-(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_type(0.449518963606087)) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_type(0.449518963606087)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_type(0.449518963606087)) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END));
SELECT SUM(count) FROM (SELECT ((json_type(0.449518963606087)) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (json_type(0.449518963606087)) ORDER BY ((((((rt0.c1)AND(vt0.c0)))AND(rt0.c3)))IS NOT(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c0 END));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)) WHERE (((((0.541325196681188)OR(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((0.541325196681188)OR(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)) WHERE (((((0.541325196681188)OR(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((0.541325196681188)OR(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE rt0.c0 END)<(CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END)) WHERE (((((0.541325196681188)OR(((vt0.c1) BETWEEN (vt0.c0) AND (rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c1 END)));
SELECT * FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((rt0.c2) ISNULL));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('1201370871') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT (((('1201370871') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('1201370871') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL)));
SELECT SUM(count) FROM (SELECT (((('1201370871') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((('1201370871') NOT BETWEEN (((vt0.c0) NOTNULL)) AND (NULL)));
SELECT ALL * FROM rt0 WHERE ((('-1119882638') BETWEEN (((((rt0.c1)OR(rt0.c3)))AND(rt0.c4))) AND (NULLIF(rt0.c3, rt0.c5)))) ORDER BY rt0.c1 DESC, CASE WHEN '' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-1119882638') BETWEEN (((((rt0.c1)OR(rt0.c3)))AND(rt0.c4))) AND (NULLIF(rt0.c3, rt0.c5)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC, CASE WHEN '' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((('-1119882638') BETWEEN (((((rt0.c1)OR(rt0.c3)))AND(rt0.c4))) AND (NULLIF(rt0.c3, rt0.c5)))) ORDER BY rt0.c1 DESC, CASE WHEN '' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((('-1119882638') BETWEEN (((((rt0.c1)OR(rt0.c3)))AND(rt0.c4))) AND (NULLIF(rt0.c3, rt0.c5)))) IS TRUE)  as count FROM rt0 ORDER BY rt0.c1 DESC, CASE WHEN '' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt0 WHERE ((('-1119882638') BETWEEN (((((rt0.c1)OR(rt0.c3)))AND(rt0.c4))) AND (NULLIF(rt0.c3, rt0.c5)))) ORDER BY rt0.c1 DESC, CASE WHEN '' THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END COLLATE RTRIM DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY SQLITE_VERSION(), CAST(-1.015325928E9 AS REAL) ASC, ((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1)-(vt0.c0)))))AND(((vt0.c1)LIKE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION(), CAST(-1.015325928E9 AS REAL) ASC, ((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1)-(vt0.c0)))))AND(((vt0.c1)LIKE(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY SQLITE_VERSION(), CAST(-1.015325928E9 AS REAL) ASC, ((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1)-(vt0.c0)))))AND(((vt0.c1)LIKE(vt0.c1))));
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_VERSION(), CAST(-1.015325928E9 AS REAL) ASC, ((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1)-(vt0.c0)))))AND(((vt0.c1)LIKE(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY SQLITE_VERSION(), CAST(-1.015325928E9 AS REAL) ASC, ((((CAST(vt0.c1 AS NUMERIC))OR(((vt0.c1)-(vt0.c0)))))AND(((vt0.c1)LIKE(vt0.c1))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((rt0.c2 COLLATE NOCASE) NOT NULL));
SELECT ALL * FROM vt0, rt0 WHERE ((- ((((vt0.c0))>((rt0.c1)))))) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS LAST, (((('-1423446910' IN (rt0.c4)), NULL, ((rt0.c2)-(rt0.c2))))>=((rt0.c1, rt0.c1 COLLATE NOCASE, (rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))>((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS LAST, (((('-1423446910' IN (rt0.c4)), NULL, ((rt0.c2)-(rt0.c2))))>=((rt0.c1, rt0.c1 COLLATE NOCASE, (rt0.c1 IN ())))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((- ((((vt0.c0))>((rt0.c1)))))) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS LAST, (((('-1423446910' IN (rt0.c4)), NULL, ((rt0.c2)-(rt0.c2))))>=((rt0.c1, rt0.c1 COLLATE NOCASE, (rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((vt0.c0))>((rt0.c1)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS LAST, (((('-1423446910' IN (rt0.c4)), NULL, ((rt0.c2)-(rt0.c2))))>=((rt0.c1, rt0.c1 COLLATE NOCASE, (rt0.c1 IN ())))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE ((- ((((vt0.c0))>((rt0.c1)))))) ORDER BY (NOT (((rt0.c4) IS TRUE))) DESC  NULLS LAST, (((('-1423446910' IN (rt0.c4)), NULL, ((rt0.c2)-(rt0.c2))))>=((rt0.c1, rt0.c1 COLLATE NOCASE, (rt0.c1 IN ())))) ASC  NULLS FIRST;
SELECT ALL * FROM rt0 WHERE ((((x'')) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0)IS NOT(rt0.c4)))))) ORDER BY ((((rt0.c3)<<(0x761db61d))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c5 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0)IS NOT(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<<(0x761db61d))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c5 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((x'')) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0)IS NOT(rt0.c4)))))) ORDER BY ((((rt0.c3)<<(0x761db61d))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c5 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((x'')) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0)IS NOT(rt0.c4)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c3)<<(0x761db61d))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c5 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((x'')) BETWEEN (((- (rt0.c0)))) AND ((((rt0.c0)IS NOT(rt0.c4)))))) ORDER BY ((((rt0.c3)<<(0x761db61d))) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (rt0.c5 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((COALESCE(rt0.c3, rt0.c1)) IS TRUE)) ORDER BY 0.11369575333040571 ASC  NULLS LAST, ((1468289870) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE BINARY  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c3, rt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.11369575333040571 ASC  NULLS LAST, ((1468289870) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE BINARY  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((COALESCE(rt0.c3, rt0.c1)) IS TRUE)) ORDER BY 0.11369575333040571 ASC  NULLS LAST, ((1468289870) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE BINARY  NULLS LAST, NULL;
SELECT SUM(count) FROM (SELECT ((((COALESCE(rt0.c3, rt0.c1)) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY 0.11369575333040571 ASC  NULLS LAST, ((1468289870) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE BINARY  NULLS LAST, NULL);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((COALESCE(rt0.c3, rt0.c1)) IS TRUE)) ORDER BY 0.11369575333040571 ASC  NULLS LAST, ((1468289870) BETWEEN (rt0.c3) AND (vt0.c1)) COLLATE BINARY  NULLS LAST, NULL;
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))GLOB(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((LIKE(rt0.c0, '865902046')) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))GLOB(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LIKE(rt0.c0, '865902046')) NOTNULL) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))GLOB(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((LIKE(rt0.c0, '865902046')) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))GLOB(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((LIKE(rt0.c0, '865902046')) NOTNULL) ASC);
SELECT ALL * FROM rt0, vt0 WHERE (((CAST(vt0.c1 AS INTEGER))GLOB(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))))) ORDER BY ((LIKE(rt0.c0, '865902046')) NOTNULL) ASC;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5)<(vt0.c0)))LIKE(CASE WHEN vt0.c1 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)<(vt0.c0)))LIKE(CASE WHEN vt0.c1 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5)<(vt0.c0)))LIKE(CASE WHEN vt0.c1 THEN rt0.c4 END)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)<(vt0.c0)))LIKE(CASE WHEN vt0.c1 THEN rt0.c4 END))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5)<(vt0.c0)))LIKE(CASE WHEN vt0.c1 THEN rt0.c4 END)));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, vt0.c0, vt0.c1)) AND ((((((((((vt0.c1)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)), vt0.c1 COLLATE NOCASE, (((x''))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, vt0.c0, vt0.c1)) AND ((((((((((vt0.c1)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)), vt0.c1 COLLATE NOCASE, (((x''))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, vt0.c0, vt0.c1)) AND ((((((((((vt0.c1)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)), vt0.c1 COLLATE NOCASE, (((x''))>((vt0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, vt0.c0, vt0.c1)) AND ((((((((((vt0.c1)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)), vt0.c1 COLLATE NOCASE, (((x''))>((vt0.c0))))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c1 END, vt0.c0, vt0.c1)) AND ((((((((((vt0.c1)OR(x'')))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)), vt0.c1 COLLATE NOCASE, (((x''))>((vt0.c0)))))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c4))<=((rt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY TRIM(((0.5193455281480069)+(vt0.c1))) ASC  NULLS FIRST, CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))<=((rt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(((0.5193455281480069)+(vt0.c1))) ASC  NULLS FIRST, CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c4))<=((rt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY TRIM(((0.5193455281480069)+(vt0.c1))) ASC  NULLS FIRST, CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c4))<=((rt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, rt0 ORDER BY TRIM(((0.5193455281480069)+(vt0.c1))) ASC  NULLS FIRST, CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((rt0.c4))<=((rt0.c0)))) BETWEEN (((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY TRIM(((0.5193455281480069)+(vt0.c1))) ASC  NULLS FIRST, CASE CASE WHEN rt0.c2 THEN rt0.c0 END  WHEN rt0.c4 COLLATE NOCASE THEN vt0.c1 COLLATE BINARY ELSE ((rt0.c0) NOT NULL) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS(((vt0.c0)GLOB(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1)IS(((vt0.c0)GLOB(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS(((vt0.c0)GLOB(vt0.c0)))));
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5 COLLATE BINARY))>=((((rt0.c5)>>(0.12692840671334982)))))) ORDER BY (- ((((vt0.c0))<((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 COLLATE BINARY))>=((((rt0.c5)>>(0.12692840671334982)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- ((((vt0.c0))<((rt0.c0))))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5 COLLATE BINARY))>=((((rt0.c5)>>(0.12692840671334982)))))) ORDER BY (- ((((vt0.c0))<((rt0.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c5 COLLATE BINARY))>=((((rt0.c5)>>(0.12692840671334982)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- ((((vt0.c0))<((rt0.c0))))) ASC);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c5 COLLATE BINARY))>=((((rt0.c5)>>(0.12692840671334982)))))) ORDER BY (- ((((vt0.c0))<((rt0.c0))))) ASC;
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (SQLITE_COMPILEOPTION_GET('1264915774'))) WHERE (CAST(((rt0.c5)/(NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5)/(NULL)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (SQLITE_COMPILEOPTION_GET('1264915774'))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (SQLITE_COMPILEOPTION_GET('1264915774'))) WHERE (CAST(((rt0.c5)/(NULL)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c5)/(NULL)) AS NUMERIC)) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (SQLITE_COMPILEOPTION_GET('1264915774'))));
SELECT ALL COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (+ (SQLITE_COMPILEOPTION_GET('1264915774'))) WHERE (CAST(((rt0.c5)/(NULL)) AS NUMERIC));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)=(rt0.c5)))OR(rt0.c1)))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)=(rt0.c5)))OR(rt0.c1)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)=(rt0.c5)))OR(rt0.c1)))AND((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)=(rt0.c5)))OR(rt0.c1)))AND((rt0.c2 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((rt0.c0)=(rt0.c5)))OR(rt0.c1)))AND((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (CASE WHEN rt0.c5 THEN NULL ELSE rt0.c3 END))) ORDER BY ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c5 THEN NULL ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (CASE WHEN rt0.c5 THEN NULL ELSE rt0.c3 END))) ORDER BY ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT (((- (CASE WHEN rt0.c5 THEN NULL ELSE rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))) NOT NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((- (CASE WHEN rt0.c5 THEN NULL ELSE rt0.c3 END))) ORDER BY ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))) NOT NULL) ASC;
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((+ (vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((+ (vt0.c1)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c5)) AS NUMERIC)) ORDER BY (SQLITE_COMPILEOPTION_GET(rt0.c3) IN (rt0.c0, ((rt0.c4)<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (SQLITE_COMPILEOPTION_GET(rt0.c3) IN (rt0.c0, ((rt0.c4)<(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c5)) AS NUMERIC)) ORDER BY (SQLITE_COMPILEOPTION_GET(rt0.c3) IN (rt0.c0, ((rt0.c4)<(rt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt0.c2 IN (rt0.c5)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY (SQLITE_COMPILEOPTION_GET(rt0.c3) IN (rt0.c0, ((rt0.c4)<(rt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (CAST((rt0.c2 IN (rt0.c5)) AS NUMERIC)) ORDER BY (SQLITE_COMPILEOPTION_GET(rt0.c3) IN (rt0.c0, ((rt0.c4)<(rt0.c0))))  NULLS FIRST;
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1))) NOT NULL) WHERE (2052789929) ORDER BY ((((rt0.c4)<<(rt0.c5)))-(rt0.c3 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((2052789929) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1))) NOT NULL) ORDER BY ((((rt0.c4)<<(rt0.c5)))-(rt0.c3 COLLATE RTRIM)) ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1))) NOT NULL) WHERE (2052789929) ORDER BY ((((rt0.c4)<<(rt0.c5)))-(rt0.c3 COLLATE RTRIM)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((2052789929) IS TRUE)  as count FROM rt0 NOT INDEXED FULL OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1))) NOT NULL) ORDER BY ((((rt0.c4)<<(rt0.c5)))-(rt0.c3 COLLATE RTRIM)) ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON ((((vt0.c1)<=(vt0.c1))) NOT NULL) WHERE (2052789929) ORDER BY ((((rt0.c4)<<(rt0.c5)))-(rt0.c3 COLLATE RTRIM)) ASC;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c5)))<=(LOWER(rt0.c0)))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c5)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c5)))<=(LOWER(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c5)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c5)))<=(LOWER(rt0.c0)))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c5)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (rt0.c5)))<=(LOWER(rt0.c0)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c5)))) DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c0 IN (rt0.c5)))<=(LOWER(rt0.c0)))) ORDER BY (- (((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c5)))) DESC  NULLS FIRST;
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE vt0.c1 END) IS TRUE) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)))||((NOT (vt0.c1))))) ORDER BY ((((((rt0.c1)*(rt0.c1)))OR(((1.185204063E9) IS FALSE))))AND((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)))||((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE vt0.c1 END) IS TRUE) ORDER BY ((((((rt0.c1)*(rt0.c1)))OR(((1.185204063E9) IS FALSE))))AND((rt0.c4 IN ()))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE vt0.c1 END) IS TRUE) WHERE (((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)))||((NOT (vt0.c1))))) ORDER BY ((((((rt0.c1)*(rt0.c1)))OR(((1.185204063E9) IS FALSE))))AND((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOT BETWEEN (rt0.c5) AND (rt0.c5)))||((NOT (vt0.c1))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN NULL ELSE vt0.c1 END) IS TRUE) ORDER BY ((((((rt0.c1)*(rt0.c1)))OR(((1.185204063E9) IS FALSE))))AND((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST('蝮X+F' AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('蝮X+F' AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST('蝮X+F' AS TEXT)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST('蝮X+F' AS TEXT)) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((CAST('蝮X+F' AS TEXT)) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))>=((vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((NULL))>=((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))>=((vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((NULL))>=((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((NULL))>=((vt0.c1))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (+ ('*E' COLLATE BINARY)) WHERE (TRIM(0.2846776226583515, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)) ORDER BY ((((CAST(vt0.c0 AS BLOB))AND((rt0.c3 IN ()))))AND((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.2846776226583515, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (+ ('*E' COLLATE BINARY)) ORDER BY ((((CAST(vt0.c0 AS BLOB))AND((rt0.c3 IN ()))))AND((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INNER JOIN vt0 ON (+ ('*E' COLLATE BINARY)) WHERE (TRIM(0.2846776226583515, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)) ORDER BY ((((CAST(vt0.c0 AS BLOB))AND((rt0.c3 IN ()))))AND((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(0.2846776226583515, CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c1 END)) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON (+ ('*E' COLLATE BINARY)) ORDER BY ((((CAST(vt0.c0 AS BLOB))AND((rt0.c3 IN ()))))AND((vt0.c0 IN (vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE x'38f2'  WHEN '719866472' THEN ((rt0.c0) NOTNULL) ELSE rt0.c4 END WHERE ((((('-799676930')AND(((((((((rt0.c0)OR('c_환')))OR('z!')))OR(rt0.c0)))AND(rt0.c4)))))OR(0.11575877858264794))) ORDER BY (((CAST(vt0.c1 AS REAL)))<=((CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-799676930')AND(((((((((rt0.c0)OR('c_환')))OR('z!')))OR(rt0.c0)))AND(rt0.c4)))))OR(0.11575877858264794))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE x'38f2'  WHEN '719866472' THEN ((rt0.c0) NOTNULL) ELSE rt0.c4 END ORDER BY (((CAST(vt0.c1 AS REAL)))<=((CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))) ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE x'38f2'  WHEN '719866472' THEN ((rt0.c0) NOTNULL) ELSE rt0.c4 END WHERE ((((('-799676930')AND(((((((((rt0.c0)OR('c_환')))OR('z!')))OR(rt0.c0)))AND(rt0.c4)))))OR(0.11575877858264794))) ORDER BY (((CAST(vt0.c1 AS REAL)))<=((CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))) ASC;
SELECT SUM(count) FROM (SELECT (((((('-799676930')AND(((((((((rt0.c0)OR('c_환')))OR('z!')))OR(rt0.c0)))AND(rt0.c4)))))OR(0.11575877858264794))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON CASE x'38f2'  WHEN '719866472' THEN ((rt0.c0) NOTNULL) ELSE rt0.c4 END ORDER BY (((CAST(vt0.c1 AS REAL)))<=((CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))) ASC);
SELECT * FROM rt0 FULL OUTER JOIN vt0 ON CASE x'38f2'  WHEN '719866472' THEN ((rt0.c0) NOTNULL) ELSE rt0.c4 END WHERE ((((('-799676930')AND(((((((((rt0.c0)OR('c_환')))OR('z!')))OR(rt0.c0)))AND(rt0.c4)))))OR(0.11575877858264794))) ORDER BY (((CAST(vt0.c1 AS REAL)))<=((CASE WHEN NULL THEN rt0.c0 ELSE vt0.c0 END))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((NULL) IS TRUE) END) ORDER BY (vt0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN ((NULL) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((NULL) IS TRUE) END) ORDER BY (vt0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 COLLATE BINARY THEN ((NULL) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 COLLATE BINARY THEN ((NULL) IS TRUE) END) ORDER BY (vt0.c1 IN ())  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (((((('998989221')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) ISNULL)) ORDER BY (rt0.c2 COLLATE NOCASE IN (CAST(rt0.c4 AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c5)))) ASC  NULLS FIRST, CAST(rt0.c0 COLLATE RTRIM AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((('998989221')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN (CAST(rt0.c4 AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c5)))) ASC  NULLS FIRST, CAST(rt0.c0 COLLATE RTRIM AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((('998989221')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) ISNULL)) ORDER BY (rt0.c2 COLLATE NOCASE IN (CAST(rt0.c4 AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c5)))) ASC  NULLS FIRST, CAST(rt0.c0 COLLATE RTRIM AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((('998989221')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) ISNULL)) IS TRUE)  as count FROM rt0 ORDER BY (rt0.c2 COLLATE NOCASE IN (CAST(rt0.c4 AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c5)))) ASC  NULLS FIRST, CAST(rt0.c0 COLLATE RTRIM AS REAL) ASC);
SELECT COUNT(*) FROM rt0 WHERE (((((('998989221')) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) ISNULL)) ORDER BY (rt0.c2 COLLATE NOCASE IN (CAST(rt0.c4 AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c5)))) ASC  NULLS FIRST, CAST(rt0.c0 COLLATE RTRIM AS REAL) ASC;
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)IS(vt0.c0))) ORDER BY (LIKE(-8.27844305E8, vt0.c1, '1') IN ()) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR(((-1.511286091E9) IS FALSE))))AND((vt0.c0 IN ())))  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (LIKE(-8.27844305E8, vt0.c1, '1') IN ()) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR(((-1.511286091E9) IS FALSE))))AND((vt0.c0 IN ())))  NULLS FIRST, vt0.c1  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)IS(vt0.c0))) ORDER BY (LIKE(-8.27844305E8, vt0.c1, '1') IN ()) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR(((-1.511286091E9) IS FALSE))))AND((vt0.c0 IN ())))  NULLS FIRST, vt0.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN NULL ELSE vt0.c0 END)IS(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY (LIKE(-8.27844305E8, vt0.c1, '1') IN ()) ASC  NULLS LAST, ((((vt0.c0 COLLATE NOCASE)OR(((-1.511286091E9) IS FALSE))))AND((vt0.c0 IN ())))  NULLS FIRST, vt0.c1  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'588a' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'588a' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'588a' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((x'588a' COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (x'588a' COLLATE BINARY);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (LIKELIHOOD(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END, 0.720232202243277));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END, 0.720232202243277)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (LIKELIHOOD(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END, 0.720232202243277));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END, 0.720232202243277)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE (LIKELIHOOD(CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END, 0.720232202243277));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND((((rt0.c3, rt0.c3, vt0.c0)) BETWEEN ((rt0.c4, vt0.c1, rt0.c5)) AND ((rt0.c0, rt0.c1, -1.69300974E8))))))OR(x'')))OR(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND((((rt0.c3, rt0.c3, vt0.c0)) BETWEEN ((rt0.c4, vt0.c1, rt0.c5)) AND ((rt0.c0, rt0.c1, -1.69300974E8))))))OR(x'')))OR(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND((((rt0.c3, rt0.c3, vt0.c0)) BETWEEN ((rt0.c4, vt0.c1, rt0.c5)) AND ((rt0.c0, rt0.c1, -1.69300974E8))))))OR(x'')))OR(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND((((rt0.c3, rt0.c3, vt0.c0)) BETWEEN ((rt0.c4, vt0.c1, rt0.c5)) AND ((rt0.c0, rt0.c1, -1.69300974E8))))))OR(x'')))OR(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((((((((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)))AND((vt0.c0 IN ()))))AND((((rt0.c3, rt0.c3, vt0.c0)) BETWEEN ((rt0.c4, vt0.c1, rt0.c5)) AND ((rt0.c0, rt0.c1, -1.69300974E8))))))OR(x'')))OR(((rt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.6699383473165808 THEN (((rt0.c2))>=((rt0.c0))) ELSE (rt0.c5 IN (rt0.c5, rt0.c4, rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.6699383473165808 THEN (((rt0.c2))>=((rt0.c0))) ELSE (rt0.c5 IN (rt0.c5, rt0.c4, rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.6699383473165808 THEN (((rt0.c2))>=((rt0.c0))) ELSE (rt0.c5 IN (rt0.c5, rt0.c4, rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 0.6699383473165808 THEN (((rt0.c2))>=((rt0.c0))) ELSE (rt0.c5 IN (rt0.c5, rt0.c4, rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN 0.6699383473165808 THEN (((rt0.c2))>=((rt0.c0))) ELSE (rt0.c5 IN (rt0.c5, rt0.c4, rt0.c0)) END);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffffe598d7dc END) IS TRUE)) ORDER BY x'28ed' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffffe598d7dc END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY x'28ed' DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffffe598d7dc END) IS TRUE)) ORDER BY x'28ed' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffffe598d7dc END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY x'28ed' DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN 0Xffffffffe598d7dc END) IS TRUE)) ORDER BY x'28ed' DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c3 COLLATE NOCASE))) ORDER BY (- (TRIM(rt0.c0, rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (TRIM(rt0.c0, rt0.c4)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c3 COLLATE NOCASE))) ORDER BY (- (TRIM(rt0.c0, rt0.c4)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (rt0.c3 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (TRIM(rt0.c0, rt0.c4)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((NOT (rt0.c3 COLLATE NOCASE))) ORDER BY (- (TRIM(rt0.c0, rt0.c4)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CASE '-1336035456'  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c1)%(vt0.c1)) END) ORDER BY NULL COLLATE RTRIM, ((((vt0.c1 IN (vt0.c0, vt0.c0))))<=(((NOT (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-1336035456'  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c1)%(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE RTRIM, ((((vt0.c1 IN (vt0.c0, vt0.c0))))<=(((NOT (vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE '-1336035456'  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c1)%(vt0.c1)) END) ORDER BY NULL COLLATE RTRIM, ((((vt0.c1 IN (vt0.c0, vt0.c0))))<=(((NOT (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE '-1336035456'  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c1)%(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY NULL COLLATE RTRIM, ((((vt0.c1 IN (vt0.c0, vt0.c0))))<=(((NOT (vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE '-1336035456'  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) ELSE ((vt0.c1)%(vt0.c1)) END) ORDER BY NULL COLLATE RTRIM, ((((vt0.c1 IN (vt0.c0, vt0.c0))))<=(((NOT (vt0.c0))))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)) ORDER BY CAST(0.002403858361678002 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.002403858361678002 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)) ORDER BY CAST(0.002403858361678002 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(0.002403858361678002 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END AS REAL)) ORDER BY CAST(0.002403858361678002 AS INTEGER) COLLATE NOCASE DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((TOTAL_CHANGES())AND(NULL)))OR(CAST(rt0.c1 AS REAL))))OR(rt0.c5)))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((TOTAL_CHANGES())AND(NULL)))OR(CAST(rt0.c1 AS REAL))))OR(rt0.c5)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((TOTAL_CHANGES())AND(NULL)))OR(CAST(rt0.c1 AS REAL))))OR(rt0.c5)))OR(CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((((TOTAL_CHANGES())AND(NULL)))OR(CAST(rt0.c1 AS REAL))))OR(rt0.c5)))OR(CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((((((TOTAL_CHANGES())AND(NULL)))OR(CAST(rt0.c1 AS REAL))))OR(rt0.c5)))OR(CAST(vt0.c0 AS REAL))));
SELECT * FROM vt0, rt0 WHERE (((NULL)OR(((vt0.c1) BETWEEN (rt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((vt0.c1) BETWEEN (rt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((NULL)OR(((vt0.c1) BETWEEN (rt0.c0) AND (NULL)))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)OR(((vt0.c1) BETWEEN (rt0.c0) AND (NULL))))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((NULL)OR(((vt0.c1) BETWEEN (rt0.c0) AND (NULL)))));
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL))<>(((vt0.c1)IS NOT(vt0.c0))))) ORDER BY (+ (((0.13605989708423527) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<>(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((0.13605989708423527) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL))<>(((vt0.c1)IS NOT(vt0.c0))))) ORDER BY (+ (((0.13605989708423527) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))<>(((vt0.c1)IS NOT(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((0.13605989708423527) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL))<>(((vt0.c1)IS NOT(vt0.c0))))) ORDER BY (+ (((0.13605989708423527) BETWEEN (vt0.c1) AND (vt0.c1)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (CHAR((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((NULL IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CHAR((NULL IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CHAR((NULL IN ()))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CHAR((NULL IN ())));
SELECT * FROM rt0, vt0 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY UNLIKELY(((vt0.c1)IS NOT(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY UNLIKELY(((vt0.c1)IS NOT(rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY UNLIKELY(((vt0.c1)IS NOT(rt0.c1))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ()) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0 ORDER BY UNLIKELY(((vt0.c1)IS NOT(rt0.c1))) DESC  NULLS LAST);
SELECT * FROM rt0, vt0 WHERE ((NULL IN ()) COLLATE RTRIM) ORDER BY UNLIKELY(((vt0.c1)IS NOT(rt0.c1))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN vt0.c1 END) ORDER BY (((vt0.c1, NULL, 0.9274948365223207)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), json_patch(vt0.c0, vt0.c0), (~ (vt0.c1)))) AND (((vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1)|(vt0.c1))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, NULL)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), JULIANDAY(vt0.c0, vt0.c0, vt0.c1), ((vt0.c0)==(vt0.c1)))) AND ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (-1243842794)), (vt0.c0 IN (vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(vt0.c0) THEN vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, NULL, 0.9274948365223207)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), json_patch(vt0.c0, vt0.c0), (~ (vt0.c1)))) AND (((vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1)|(vt0.c1))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, NULL)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), JULIANDAY(vt0.c0, vt0.c0, vt0.c1), ((vt0.c0)=(vt0.c1)))) AND ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (-1243842794)), (vt0.c0 IN (vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN vt0.c1 END) ORDER BY (((vt0.c1, NULL, 0.9274948365223207)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), json_patch(vt0.c0, vt0.c0), (~ (vt0.c1)))) AND (((vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1)|(vt0.c1))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, NULL)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), JULIANDAY(vt0.c0, vt0.c0, vt0.c1), ((vt0.c0)==(vt0.c1)))) AND ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (-1243842794)), (vt0.c0 IN (vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN LOWER(vt0.c0) THEN vt0.c1 END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, NULL, 0.9274948365223207)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), json_patch(vt0.c0, vt0.c0), (~ (vt0.c1)))) AND (((vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1)|(vt0.c1))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, NULL)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), JULIANDAY(vt0.c0, vt0.c0, vt0.c1), ((vt0.c0)=(vt0.c1)))) AND ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (-1243842794)), (vt0.c0 IN (vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN LOWER(vt0.c0) THEN vt0.c1 END) ORDER BY (((vt0.c1, NULL, 0.9274948365223207)) BETWEEN ((((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)), json_patch(vt0.c0, vt0.c0), (~ (vt0.c1)))) AND (((vt0.c1 IN ()), (((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c1, vt0.c0, vt0.c1))), ((vt0.c1)|(vt0.c1))))) ASC  NULLS LAST, (((vt0.c0, vt0.c1, NULL)) NOT BETWEEN ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)), JULIANDAY(vt0.c0, vt0.c0, vt0.c1), ((vt0.c0)==(vt0.c1)))) AND ((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)), (+ (-1243842794)), (vt0.c0 IN (vt0.c1)))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(highlight(rt0.c4, rt0.c4, 0.8424909807803895, rt0.c1), MAX(rt0.c1, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((IFNULL(highlight(rt0.c4, rt0.c4, 0.8424909807803895, rt0.c1), MAX(rt0.c1, rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (IFNULL(highlight(rt0.c4, rt0.c4, 0.8424909807803895, rt0.c1), MAX(rt0.c1, rt0.c3)));
SELECT SUM(count) FROM (SELECT ((IFNULL(highlight(rt0.c4, rt0.c4, 0.8424909807803895, rt0.c1), MAX(rt0.c1, rt0.c3))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((519191163) ISNULL));
SELECT SUM(count) FROM (SELECT ((((519191163) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((519191163) ISNULL));
SELECT SUM(count) FROM (SELECT ((((519191163) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((519191163) ISNULL));
SELECT COUNT(*) FROM rt0 WHERE (((LENGTH(rt0.c2))OR(((((((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)))AND(NULL)))AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c4))))) ORDER BY (('731412818') BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1))) AND ((rt0.c0 IN (rt0.c3)))) ASC, (((rt0.c5)IS(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c2))OR(((((((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)))AND(NULL)))AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (('731412818') BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1))) AND ((rt0.c0 IN (rt0.c3)))) ASC, (((rt0.c5)IS(rt0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((LENGTH(rt0.c2))OR(((((((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)))AND(NULL)))AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c4))))) ORDER BY (('731412818') BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1))) AND ((rt0.c0 IN (rt0.c3)))) ASC, (((rt0.c5)IS(rt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((LENGTH(rt0.c2))OR(((((((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)))AND(NULL)))AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (('731412818') BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1))) AND ((rt0.c0 IN (rt0.c3)))) ASC, (((rt0.c5)IS(rt0.c0)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((LENGTH(rt0.c2))OR(((((((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)))AND(NULL)))AND(rt0.c5)))AND(rt0.c4)))AND(rt0.c4))))) ORDER BY (('731412818') BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c1))) AND ((rt0.c0 IN (rt0.c3)))) ASC, (((rt0.c5)IS(rt0.c0)) IN ())  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)OR(vt0.c1))  WHEN ((0.9275049673563099) NOT NULL) THEN (vt0.c1 IN (vt0.c1)) END) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END AS TEXT) DESC  NULLS FIRST, CASE WHEN vt0.c1 THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL COLLATE RTRIM THEN 0.20515297600729854 WHEN (+ (vt0.c0)) THEN ((vt0.c1)+(vt0.c1)) WHEN (vt0.c1 IN ()) THEN 'A>' WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (- (vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)OR(vt0.c1))  WHEN ((0.9275049673563099) NOT NULL) THEN (vt0.c1 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END AS TEXT) DESC  NULLS FIRST, CASE WHEN vt0.c1 THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL COLLATE RTRIM THEN 0.20515297600729854 WHEN (+ (vt0.c0)) THEN ((vt0.c1)+(vt0.c1)) WHEN (vt0.c1 IN ()) THEN 'A>' WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (- (vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)OR(vt0.c1))  WHEN ((0.9275049673563099) NOT NULL) THEN (vt0.c1 IN (vt0.c1)) END) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END AS TEXT) DESC  NULLS FIRST, CASE WHEN vt0.c1 THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL COLLATE RTRIM THEN 0.20515297600729854 WHEN (+ (vt0.c0)) THEN ((vt0.c1)+(vt0.c1)) WHEN (vt0.c1 IN ()) THEN 'A>' WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (- (vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1)OR(vt0.c1))  WHEN ((0.9275049673563099) NOT NULL) THEN (vt0.c1 IN (vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END AS TEXT) DESC  NULLS FIRST, CASE WHEN vt0.c1 THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL COLLATE RTRIM THEN 0.20515297600729854 WHEN (+ (vt0.c0)) THEN ((vt0.c1)+(vt0.c1)) WHEN (vt0.c1 IN ()) THEN 'A>' WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (- (vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c1)OR(vt0.c1))  WHEN ((0.9275049673563099) NOT NULL) THEN (vt0.c1 IN (vt0.c1)) END) ORDER BY CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END AS TEXT) DESC  NULLS FIRST, CASE WHEN vt0.c1 THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN NULL COLLATE RTRIM THEN 0.20515297600729854 WHEN (+ (vt0.c0)) THEN ((vt0.c1)+(vt0.c1)) WHEN (vt0.c1 IN ()) THEN 'A>' WHEN (((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN (- (vt0.c1)) ELSE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)LIKE((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)LIKE((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)LIKE((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)LIKE((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3 COLLATE NOCASE)LIKE((rt0.c2 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c3 END))) ORDER BY (((((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c5))<>((rt0.c3, rt0.c2, rt0.c3, vt0.c0, vt0.c1))))&((rt0.c4 IN (rt0.c1, NULL)))) ASC  NULLS FIRST, (NOT (((vt0.c0) BETWEEN (rt0.c5) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c5))!=((rt0.c3, rt0.c2, rt0.c3, vt0.c0, vt0.c1))))&((rt0.c4 IN (rt0.c1, NULL)))) ASC  NULLS FIRST, (NOT (((vt0.c0) BETWEEN (rt0.c5) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c3 END))) ORDER BY (((((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c5))<>((rt0.c3, rt0.c2, rt0.c3, vt0.c0, vt0.c1))))&((rt0.c4 IN (rt0.c1, NULL)))) ASC  NULLS FIRST, (NOT (((vt0.c0) BETWEEN (rt0.c5) AND (rt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c3 END))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c5))!=((rt0.c3, rt0.c2, rt0.c3, vt0.c0, vt0.c1))))&((rt0.c4 IN (rt0.c1, NULL)))) ASC  NULLS FIRST, (NOT (((vt0.c0) BETWEEN (rt0.c5) AND (rt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((+ (CASE WHEN rt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c1 THEN rt0.c3 END))) ORDER BY (((((rt0.c0, rt0.c3, rt0.c4, rt0.c0, rt0.c5))<>((rt0.c3, rt0.c2, rt0.c3, vt0.c0, vt0.c1))))&((rt0.c4 IN (rt0.c1, NULL)))) ASC  NULLS FIRST, (NOT (((vt0.c0) BETWEEN (rt0.c5) AND (rt0.c1))))  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, NULL)))) WHERE (CAST(((((x'')OR(vt0.c0)))OR('-55860602')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((x'')OR(vt0.c0)))OR('-55860602')) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, NULL)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, NULL)))) WHERE (CAST(((((x'')OR(vt0.c0)))OR('-55860602')) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((((x'')OR(vt0.c0)))OR('-55860602')) AS BLOB)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, NULL)))));
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON (((rt0.c0)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((COALESCE(DISTINCT vt0.c0, NULL)))) WHERE (CAST(((((x'')OR(vt0.c0)))OR('-55860602')) AS BLOB));
SELECT * FROM rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC)) ORDER BY LOWER(0.716873652222427 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY LOWER(0.716873652222427 COLLATE NOCASE));
SELECT * FROM rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC)) ORDER BY LOWER(0.716873652222427 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST((- (rt0.c4)) AS NUMERIC)) IS TRUE)  as count FROM rt0 ORDER BY LOWER(0.716873652222427 COLLATE NOCASE));
SELECT * FROM rt0 WHERE (CAST((- (rt0.c4)) AS NUMERIC)) ORDER BY LOWER(0.716873652222427 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 END))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY) ORDER BY (((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 END))) DESC;
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((('-1311230503')!=('-325423569')))/(CASE rt0.c3  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END)) WHERE (((((((rt0.c2) ISNULL))OR(SQLITE_COMPILEOPTION_USED('U5(Ixb'))))AND((rt0.c0 IN ())))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<=((CAST(rt0.c1 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR(SQLITE_COMPILEOPTION_USED('U5(Ixb'))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((('-1311230503')<>('-325423569')))/(CASE rt0.c3  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END)) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<=((CAST(rt0.c1 AS TEXT)))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((('-1311230503')!=('-325423569')))/(CASE rt0.c3  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END)) WHERE (((((((rt0.c2) ISNULL))OR(SQLITE_COMPILEOPTION_USED('U5(Ixb'))))AND((rt0.c0 IN ())))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<=((CAST(rt0.c1 AS TEXT)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) ISNULL))OR(SQLITE_COMPILEOPTION_USED('U5(Ixb'))))AND((rt0.c0 IN ())))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((('-1311230503')<>('-325423569')))/(CASE rt0.c3  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END)) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<=((CAST(rt0.c1 AS TEXT)))) ASC);
SELECT * FROM rt0 RIGHT OUTER JOIN vt0 ON (((('-1311230503')!=('-325423569')))/(CASE rt0.c3  WHEN NULL THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c1 END)) WHERE (((((((rt0.c2) ISNULL))OR(SQLITE_COMPILEOPTION_USED('U5(Ixb'))))AND((rt0.c0 IN ())))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))<=((CAST(rt0.c1 AS TEXT)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((TRIM(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE NOCASE)))AND(COALESCE(vt0.c1, vt0.c1, vt0.c0, vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))AND(TYPEOF(DISTINCT vt0.c1)))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL), TRIM(vt0.c1 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE NOCASE)))AND(COALESCE(vt0.c1, vt0.c1, vt0.c0, vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))AND(TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL), TRIM(vt0.c1 COLLATE RTRIM) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((TRIM(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE NOCASE)))AND(COALESCE(vt0.c1, vt0.c1, vt0.c0, vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))AND(TYPEOF(DISTINCT vt0.c1)))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL), TRIM(vt0.c1 COLLATE RTRIM) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((TRIM(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE NOCASE)))AND(COALESCE(vt0.c1, vt0.c1, vt0.c0, vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))AND(TYPEOF(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL), TRIM(vt0.c1 COLLATE RTRIM) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((((TRIM(vt0.c0, vt0.c0))AND(vt0.c0 COLLATE NOCASE)))AND(COALESCE(vt0.c1, vt0.c1, vt0.c0, vt0.c0))))AND(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))))AND(TYPEOF(DISTINCT vt0.c1)))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS REAL), TRIM(vt0.c1 COLLATE RTRIM) ASC;
SELECT ALL * FROM vt0, rt0 WHERE ((- (((rt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (((rt0.c1)%(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((rt0.c1)%(vt0.c0))))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((- (((rt0.c1)%(vt0.c0)))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))GLOB(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))GLOB(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))GLOB(SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))GLOB(SQLITE_VERSION()))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))GLOB(SQLITE_VERSION())));
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE)) ORDER BY (+ (TYPEOF(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (TYPEOF(vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE)) ORDER BY (+ (TYPEOF(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE NOCASE) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (+ (TYPEOF(vt0.c0)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1 COLLATE NOCASE) IS FALSE)) ORDER BY (+ (TYPEOF(vt0.c0)))  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c5) NOT NULL) COLLATE BINARY DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt0.c1))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c5) NOT NULL) COLLATE BINARY DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt0.c1))) DESC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c5) NOT NULL) COLLATE BINARY DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt0.c1))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c5) NOT NULL) COLLATE BINARY DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt0.c1))) DESC  NULLS LAST, NULL  NULLS LAST);
SELECT ALL * FROM rt0 WHERE (rt0.c1) ORDER BY ((rt0.c5) NOT NULL) COLLATE BINARY DESC, ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (NULL))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND (SQLITE_COMPILEOPTION_GET(rt0.c1))) DESC  NULLS LAST, NULL  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)>=(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)>=(vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1 COLLATE RTRIM)>=(vt0.c1))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE RTRIM)>=(vt0.c1)));
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN CAST(rt0.c3 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN CAST(rt0.c3 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN CAST(rt0.c3 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt0.c1 IN ()) THEN CAST(rt0.c3 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN (vt0.c1 IN ()) THEN CAST(rt0.c3 AS REAL) ELSE ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)) END);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0 IN ())))<=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))<=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0 IN ())))<=((rt0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0 IN ())))<=((rt0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0 IN ())))<=((rt0.c0 COLLATE RTRIM))));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE NOCASE) ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN ((0.04186027183524377 IN ())) AND (((((rt0.c5)AND(rt0.c4)))OR(rt0.c4)))) DESC, load_extension(x'7f9d', (rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN ((0.04186027183524377 IN ())) AND (((((rt0.c5)AND(rt0.c4)))OR(rt0.c4)))) DESC, load_extension(x'7f9d', (rt0.c3 IN ())));
SELECT ALL * FROM rt0 WHERE (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE NOCASE) ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN ((0.04186027183524377 IN ())) AND (((((rt0.c5)AND(rt0.c4)))OR(rt0.c4)))) DESC, load_extension(x'7f9d', (rt0.c3 IN ()));
SELECT SUM(count) FROM (SELECT ALL ((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) IS FALSE)) NOT BETWEEN ((0.04186027183524377 IN ())) AND (((((rt0.c5)AND(rt0.c4)))OR(rt0.c4)))) DESC, load_extension(x'7f9d', (rt0.c3 IN ())));
SELECT * FROM vt0, rt0 WHERE ((NOT (0.5161834435552358))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (0.5161834435552358))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((NOT (0.5161834435552358))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (0.5161834435552358))) IS TRUE)  as count FROM vt0, rt0 ORDER BY rt0.c1 DESC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE ((NOT (0.5161834435552358))) ORDER BY rt0.c1 DESC  NULLS LAST;
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c3)))) AND ((((rt0.c0)LIKE('UQ''*?M/sO'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c3)))) AND ((((rt0.c0)LIKE('UQ''*?M/sO')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c3)))) AND ((((rt0.c0)LIKE('UQ''*?M/sO'))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c3)))) AND ((((rt0.c0)LIKE('UQ''*?M/sO')))))) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE ((((vt0.c1)) BETWEEN (((rt0.c2 IN (rt0.c3)))) AND ((((rt0.c0)LIKE('UQ''*?M/sO'))))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5) NOTNULL))&(((rt0.c0)*(rt0.c0))))) ORDER BY HEX(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c1 END)  NULLS FIRST, ((rt0.c2)==(((rt0.c3)>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOTNULL))&(((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c1 END)  NULLS FIRST, ((rt0.c2)==(((rt0.c3)>=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5) NOTNULL))&(((rt0.c0)*(rt0.c0))))) ORDER BY HEX(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c1 END)  NULLS FIRST, ((rt0.c2)==(((rt0.c3)>=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOTNULL))&(((rt0.c0)*(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c1 END)  NULLS FIRST, ((rt0.c2)==(((rt0.c3)>=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (((((rt0.c5) NOTNULL))&(((rt0.c0)*(rt0.c0))))) ORDER BY HEX(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c1 END)  NULLS FIRST, ((rt0.c2)==(((rt0.c3)>=(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))OR(0Xffffffffb4f68d26)))OR(rt0.c3)))OR(0Xffffffffadc8b3b5)) COLLATE NOCASE) ORDER BY TYPEOF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c4)))OR(0Xffffffffb4f68d26)))OR(rt0.c3)))OR(0Xffffffffadc8b3b5)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))OR(0Xffffffffb4f68d26)))OR(rt0.c3)))OR(0Xffffffffadc8b3b5)) COLLATE NOCASE) ORDER BY TYPEOF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((rt0.c1)AND(rt0.c4)))OR(0Xffffffffb4f68d26)))OR(rt0.c3)))OR(0Xffffffffadc8b3b5)) COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY TYPEOF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((rt0.c1)AND(rt0.c4)))OR(0Xffffffffb4f68d26)))OR(rt0.c3)))OR(0Xffffffffadc8b3b5)) COLLATE NOCASE) ORDER BY TYPEOF(((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY ((((vt0.c1)<=(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY ((((vt0.c1)<=(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)<=(vt0.c1))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) IN ())) ORDER BY ((((vt0.c1)<=(vt0.c1))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt0.c3 IN ()) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 IN ()) IN ()));
SELECT * FROM rt0 WHERE (CAST(x'' COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(x'' COLLATE NOCASE AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(x'' COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (CAST(x'' COLLATE NOCASE AS TEXT));
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((TYPEOF(rt0.c3))))) ORDER BY ((rt0.c5) ISNULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((TYPEOF(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c5) ISNULL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((TYPEOF(rt0.c3))))) ORDER BY ((rt0.c5) ISNULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((TYPEOF(rt0.c3))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c5) ISNULL) COLLATE RTRIM ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE ((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((TYPEOF(rt0.c3))))) ORDER BY ((rt0.c5) ISNULL) COLLATE RTRIM ASC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c5 THEN vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN rt0.c5 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c5 THEN vt0.c1 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt0.c3  WHEN rt0.c5 THEN vt0.c1 END AS REAL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CAST(CASE rt0.c3  WHEN rt0.c5 THEN vt0.c1 END AS REAL));
SELECT COUNT(*) FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN ((rt0.c4)IS(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 END ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN ((rt0.c4)IS(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 END ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN ((rt0.c4)IS(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 END ELSE (+ (rt0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (~ (rt0.c0))  WHEN ((rt0.c4)IS(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 END ELSE (+ (rt0.c2)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE (~ (rt0.c0))  WHEN ((rt0.c4)IS(rt0.c2)) THEN CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c5 THEN rt0.c2 END ELSE (+ (rt0.c2)) END);
SELECT ALL * FROM rt0, vt0 WHERE ('-1157932486');
SELECT SUM(count) FROM (SELECT ALL (('-1157932486') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ('-1157932486');
SELECT SUM(count) FROM (SELECT ALL (('-1157932486') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ('-1157932486');
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c4) ORDER BY ((((((rt0.c5)OR(vt0.c1)))OR(rt0.c1)))LIKE(((rt0.c1)OR(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c5)OR(vt0.c1)))OR(rt0.c1)))LIKE(((rt0.c1)OR(rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c4) ORDER BY ((((((rt0.c5)OR(vt0.c1)))OR(rt0.c1)))LIKE(((rt0.c1)OR(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c5)OR(vt0.c1)))OR(rt0.c1)))LIKE(((rt0.c1)OR(rt0.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (rt0.c4) ORDER BY ((((((rt0.c5)OR(vt0.c1)))OR(rt0.c1)))LIKE(((rt0.c1)OR(rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((((rt0.c0)OR(rt0.c4)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)OR(rt0.c4)))OR(rt0.c5))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((((rt0.c0)OR(rt0.c4)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)OR(rt0.c4)))OR(rt0.c5))))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((- (((((rt0.c0)OR(rt0.c4)))OR(rt0.c5)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL (((- (((rt0.c2) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ((- (((rt0.c2) ISNULL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY (((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY (((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) IN ()) ASC);
SELECT COUNT(*) FROM vt0, rt0 WHERE (vt0.c0) ORDER BY (((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) IN ()) ASC;
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c4)) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)))))) ORDER BY ((json_type(rt0.c3)) BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.17155997477948737)))) AND ((rt0.c3 IN ()))), CASE rt0.c0  WHEN ((rt0.c2)>(rt0.c0)) THEN (rt0.c3 IN (rt0.c0)) ELSE rt0.c5 END DESC, 0.9477176048133975 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((json_type(rt0.c3)) BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.17155997477948737)))) AND ((rt0.c3 IN ()))), CASE rt0.c0  WHEN ((rt0.c2)>(rt0.c0)) THEN (rt0.c3 IN (rt0.c0)) ELSE rt0.c5 END DESC, 0.9477176048133975 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c4)) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)))))) ORDER BY ((json_type(rt0.c3)) BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.17155997477948737)))) AND ((rt0.c3 IN ()))), CASE rt0.c0  WHEN ((rt0.c2)>(rt0.c0)) THEN (rt0.c3 IN (rt0.c0)) ELSE rt0.c5 END DESC, 0.9477176048133975 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((json_type(rt0.c3)) BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.17155997477948737)))) AND ((rt0.c3 IN ()))), CASE rt0.c0  WHEN ((rt0.c2)>(rt0.c0)) THEN (rt0.c3 IN (rt0.c0)) ELSE rt0.c5 END DESC, 0.9477176048133975 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c4)) BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c2) BETWEEN (rt0.c3) AND (vt0.c1)))))) ORDER BY ((json_type(rt0.c3)) BETWEEN ((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((0.17155997477948737)))) AND ((rt0.c3 IN ()))), CASE rt0.c0  WHEN ((rt0.c2)>(rt0.c0)) THEN (rt0.c3 IN (rt0.c0)) ELSE rt0.c5 END DESC, 0.9477176048133975 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('-878174778' IN ()))<(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((('-878174778' IN ()))<(NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('-878174778' IN ()))<(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((('-878174778' IN ()))<(NULL))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((('-878174778' IN ()))<(NULL)));
SELECT ALL * FROM rt0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY '-0.0' ASC;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-0.0' ASC);
SELECT ALL * FROM rt0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY '-0.0' ASC;
SELECT SUM(count) FROM (SELECT ((((+ (rt0.c3)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY '-0.0' ASC);
SELECT ALL * FROM rt0 WHERE (((+ (rt0.c3)) IN ())) ORDER BY '-0.0' ASC;
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) ISNULL) WHERE (((((rt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) ISNULL) WHERE (((((rt0.c1) ISNULL)) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) ISNULL)) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) ISNULL));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((rt0.c2 COLLATE NOCASE) ISNULL) WHERE (((((rt0.c1) ISNULL)) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ((~ (0x23cbf130)), LOWER(DISTINCT vt0.c1)))) ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ((~ (0x23cbf130)), LOWER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ((~ (0x23cbf130)), LOWER(DISTINCT vt0.c1)))) ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((+ (vt0.c0)) IN ((~ (0x23cbf130)), LOWER(DISTINCT vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (((+ (vt0.c0)) IN ((~ (0x23cbf130)), LOWER(DISTINCT vt0.c1)))) ORDER BY (((vt0.c0)LIKE(vt0.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c1  WHEN 0.1579863784283152 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN 0.1579863784283152 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c1  WHEN 0.1579863784283152 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1  WHEN 0.1579863784283152 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c1  WHEN 0.1579863784283152 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) ORDER BY rt0.c4 DESC, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 DESC, rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) ORDER BY rt0.c4 DESC, rt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt0 ORDER BY rt0.c4 DESC, rt0.c1 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c0 AS BLOB) IN ())) ORDER BY rt0.c4 DESC, rt0.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (vt0.c0 COLLATE NOCASE))) ORDER BY ((vt0.c1 COLLATE NOCASE) IS TRUE);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c5 WHERE ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) IN (((rt0.c2) NOT NULL), ((rt0.c2) BETWEEN (vt0.c1) AND (0.36501354353814985))))) ORDER BY ABS(((rt0.c2) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) IN (((rt0.c2) NOT NULL), ((rt0.c2) BETWEEN (vt0.c1) AND (0.36501354353814985))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c5 ORDER BY ABS(((rt0.c2) IS FALSE))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c5 WHERE ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) IN (((rt0.c2) NOT NULL), ((rt0.c2) BETWEEN (vt0.c1) AND (0.36501354353814985))))) ORDER BY ABS(((rt0.c2) IS FALSE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) IN (((rt0.c2) NOT NULL), ((rt0.c2) BETWEEN (vt0.c1) AND (0.36501354353814985))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON rt0.c5 ORDER BY ABS(((rt0.c2) IS FALSE))  NULLS LAST);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON rt0.c5 WHERE ((((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c3)) IN (((rt0.c2) NOT NULL), ((rt0.c2) BETWEEN (vt0.c1) AND (0.36501354353814985))))) ORDER BY ABS(((rt0.c2) IS FALSE))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CAST(rt0.c1 AS BLOB) AS TEXT));
SELECT ALL * FROM rt0 WHERE (((((((((((((COALESCE(rt0.c2, rt0.c0))OR(rt0.c5)))OR(CAST(NULL AS BLOB))))AND((~ (rt0.c0)))))AND(((rt0.c4)||(rt0.c5)))))OR(((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((COALESCE(rt0.c2, rt0.c0))OR(rt0.c5)))OR(CAST(NULL AS BLOB))))AND((~ (rt0.c0)))))AND(((rt0.c4)||(rt0.c5)))))OR(((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((COALESCE(rt0.c2, rt0.c0))OR(rt0.c5)))OR(CAST(NULL AS BLOB))))AND((~ (rt0.c0)))))AND(((rt0.c4)||(rt0.c5)))))OR(((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))))OR(rt0.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((COALESCE(rt0.c2, rt0.c0))OR(rt0.c5)))OR(CAST(NULL AS BLOB))))AND((~ (rt0.c0)))))AND(((rt0.c4)||(rt0.c5)))))OR(((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))))OR(rt0.c2))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((((((((((COALESCE(rt0.c2, rt0.c0))OR(rt0.c5)))OR(CAST(NULL AS BLOB))))AND((~ (rt0.c0)))))AND(((rt0.c4)||(rt0.c5)))))OR(((((rt0.c3)OR(rt0.c0)))AND(rt0.c3)))))OR(rt0.c2)));
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (vt0.c1 IN ()) THEN CASE ')y]0Zw'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END ELSE (((vt0.c1))>((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (vt0.c1 IN ()) THEN CASE ')y]0Zw'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END ELSE (((vt0.c1))>((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (vt0.c1 IN ()) THEN CASE ')y]0Zw'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END ELSE (((vt0.c1))>((vt0.c1))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (vt0.c1 IN ()) THEN CASE ')y]0Zw'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END ELSE (((vt0.c1))>((vt0.c1))) END) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0))  WHEN (vt0.c1 IN ()) THEN CASE ')y]0Zw'  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END ELSE (((vt0.c1))>((vt0.c1))) END);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c5)<(0.6331258586542827))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)<(0.6331258586542827))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c5)<(0.6331258586542827))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)<(0.6331258586542827))) NOT NULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (((((rt0.c5)<(0.6331258586542827))) NOT NULL));
SELECT * FROM vt0, rt0 WHERE ((('-2094850226')LIKE(((vt0.c0)&(rt0.c3))))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC), rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((('-2094850226')LIKE(((vt0.c0)&(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC), rt0.c3);
SELECT * FROM vt0, rt0 WHERE ((('-2094850226')LIKE(((vt0.c0)&(rt0.c3))))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC), rt0.c3;
SELECT SUM(count) FROM (SELECT ALL (((('-2094850226')LIKE(((vt0.c0)&(rt0.c3))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC), rt0.c3);
SELECT * FROM vt0, rt0 WHERE ((('-2094850226')LIKE(((vt0.c0)&(rt0.c3))))) ORDER BY CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC), rt0.c3;
SELECT * FROM rt0, vt0 WHERE (NULLIF(vt0.c0 COLLATE NOCASE, (((rt0.c0, NULL, rt0.c4))==((rt0.c5, rt0.c2, rt0.c4))))) ORDER BY CASE NULLIF(DISTINCT rt0.c1, vt0.c0)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN DATETIME(vt0.c0, rt0.c1, vt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN '1965853716' THEN rt0.c3 ELSE rt0.c0 END ELSE json_array_length(vt0.c1, rt0.c2) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0 COLLATE NOCASE, (((rt0.c0, NULL, rt0.c4))=((rt0.c5, rt0.c2, rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE NULLIF(DISTINCT rt0.c1, vt0.c0)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN DATETIME(vt0.c0, rt0.c1, vt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN '1965853716' THEN rt0.c3 ELSE rt0.c0 END ELSE json_array_length(vt0.c1, rt0.c2) END ASC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (NULLIF(vt0.c0 COLLATE NOCASE, (((rt0.c0, NULL, rt0.c4))==((rt0.c5, rt0.c2, rt0.c4))))) ORDER BY CASE NULLIF(DISTINCT rt0.c1, vt0.c0)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN DATETIME(vt0.c0, rt0.c1, vt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN '1965853716' THEN rt0.c3 ELSE rt0.c0 END ELSE json_array_length(vt0.c1, rt0.c2) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULLIF(vt0.c0 COLLATE NOCASE, (((rt0.c0, NULL, rt0.c4))=((rt0.c5, rt0.c2, rt0.c4))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY CASE NULLIF(DISTINCT rt0.c1, vt0.c0)  WHEN ((rt0.c1) NOT NULL) THEN rt0.c1 WHEN DATETIME(vt0.c0, rt0.c1, vt0.c0) THEN CAST(rt0.c2 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN CASE WHEN rt0.c3 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN '1965853716' THEN rt0.c3 ELSE rt0.c0 END ELSE json_array_length(vt0.c1, rt0.c2) END ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((NULL)>=(rt0.c5 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL)>=(rt0.c5 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((NULL)>=(rt0.c5 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((NULL)>=(rt0.c5 COLLATE NOCASE)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 COLLATE BINARY) IS FALSE)) ORDER BY ((NULL)>=(rt0.c5 COLLATE NOCASE)) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN (vt0.c1, vt0.c1)))LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (- (((rt0.c5)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c1, vt0.c1)))LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c5)*(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN (vt0.c1, vt0.c1)))LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (- (((rt0.c5)*(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN (vt0.c1, vt0.c1)))LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (((rt0.c5)*(vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c1 IN (vt0.c1, vt0.c1)))LIKE(CASE WHEN vt0.c0 THEN rt0.c0 END))) ORDER BY (- (((rt0.c5)*(vt0.c0))))  NULLS FIRST;
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, vt0);
SELECT * FROM rt0, vt0 WHERE (rt0.c0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 END)-((+ (vt0.c0))))) ORDER BY vt0.c1  NULLS LAST, ((TRIM(vt0.c0)) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 END)-((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, ((TRIM(vt0.c0)) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 END)-((+ (vt0.c0))))) ORDER BY vt0.c1  NULLS LAST, ((TRIM(vt0.c0)) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 END)-((+ (vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS LAST, ((TRIM(vt0.c0)) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN '' THEN vt0.c0 END)-((+ (vt0.c0))))) ORDER BY vt0.c1  NULLS LAST, ((TRIM(vt0.c0)) BETWEEN (((vt0.c0)%(vt0.c0))) AND ((vt0.c1 IN ()))) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((~ (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((rt0.c3) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((~ (((rt0.c3) NOT NULL)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((~ (((rt0.c3) NOT NULL))));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON STRFTIME(HEX(rt0.c3), (((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)AND(rt0.c4)), ((rt0.c2) IS TRUE), 0.8243997138226073) WHERE (((CAST(x'' AS TEXT)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS TEXT)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON STRFTIME(HEX(rt0.c3), (((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)AND(rt0.c4)), ((rt0.c2) IS TRUE), 0.8243997138226073));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON STRFTIME(HEX(rt0.c3), (((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)AND(rt0.c4)), ((rt0.c2) IS TRUE), 0.8243997138226073) WHERE (((CAST(x'' AS TEXT)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CAST(rt0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(x'' AS TEXT)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CAST(rt0.c2 AS TEXT)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON STRFTIME(HEX(rt0.c3), (((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)AND(rt0.c4)), ((rt0.c2) IS TRUE), 0.8243997138226073));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON STRFTIME(HEX(rt0.c3), (((rt0.c3)) BETWEEN ((vt0.c1)) AND ((rt0.c2))), ((rt0.c2)AND(rt0.c4)), ((rt0.c2) IS TRUE), 0.8243997138226073) WHERE (((CAST(x'' AS TEXT)) BETWEEN (rt0.c3 COLLATE NOCASE) AND (CAST(rt0.c2 AS TEXT))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (CASE WHEN x'' THEN rt0.c5 ELSE rt0.c4 END IN (COALESCE(DISTINCT rt0.c3, rt0.c4))) WHERE (((TYPEOF(vt0.c1)) BETWEEN (UNLIKELY(DISTINCT rt0.c3)) AND (((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt0.c1)) BETWEEN (UNLIKELY(DISTINCT rt0.c3)) AND (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (CASE WHEN x'' THEN rt0.c5 ELSE rt0.c4 END IN (COALESCE(DISTINCT rt0.c3, rt0.c4))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (CASE WHEN x'' THEN rt0.c5 ELSE rt0.c4 END IN (COALESCE(DISTINCT rt0.c3, rt0.c4))) WHERE (((TYPEOF(vt0.c1)) BETWEEN (UNLIKELY(DISTINCT rt0.c3)) AND (((rt0.c4) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((TYPEOF(vt0.c1)) BETWEEN (UNLIKELY(DISTINCT rt0.c3)) AND (((rt0.c4) NOT NULL)))) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (CASE WHEN x'' THEN rt0.c5 ELSE rt0.c4 END IN (COALESCE(DISTINCT rt0.c3, rt0.c4))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON (CASE WHEN x'' THEN rt0.c5 ELSE rt0.c4 END IN (COALESCE(DISTINCT rt0.c3, rt0.c4))) WHERE (((TYPEOF(vt0.c1)) BETWEEN (UNLIKELY(DISTINCT rt0.c3)) AND (((rt0.c4) NOT NULL))));
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c5)OR(LOWER(rt0.c2))))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)OR(LOWER(rt0.c2))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c5)OR(LOWER(rt0.c2))))OR(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((rt0.c5)OR(LOWER(rt0.c2))))OR(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (((((rt0.c5)OR(LOWER(rt0.c2))))OR(vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c5) NOTNULL))OR(((rt0.c5)>(rt0.c1)))))OR('')))OR((((rt0.c0))<((vt0.c1))))))AND(UNLIKELY(vt0.c1))) WHERE (((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END)OR(((0.035356489084711784) NOTNULL))))AND(((vt0.c0)||(rt0.c3)))))AND(UNICODE(vt0.c1))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END)OR(((0.035356489084711784) NOTNULL))))AND(((vt0.c0)||(rt0.c3)))))AND(UNICODE(vt0.c1))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c5) NOTNULL))OR(((rt0.c5)>(rt0.c1)))))OR('')))OR((((rt0.c0))<((vt0.c1))))))AND(UNLIKELY(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c5) NOTNULL))OR(((rt0.c5)>(rt0.c1)))))OR('')))OR((((rt0.c0))<((vt0.c1))))))AND(UNLIKELY(vt0.c1))) WHERE (((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END)OR(((0.035356489084711784) NOTNULL))))AND(((vt0.c0)||(rt0.c3)))))AND(UNICODE(vt0.c1))))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END)OR(((0.035356489084711784) NOTNULL))))AND(((vt0.c0)||(rt0.c3)))))AND(UNICODE(vt0.c1))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c5) NOTNULL))OR(((rt0.c5)>(rt0.c1)))))OR('')))OR((((rt0.c0))<((vt0.c1))))))AND(UNLIKELY(vt0.c1))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((((((rt0.c5) NOTNULL))OR(((rt0.c5)>(rt0.c1)))))OR('')))OR((((rt0.c0))<((vt0.c1))))))AND(UNLIKELY(vt0.c1))) WHERE (((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c5 ELSE vt0.c0 END)OR(((0.035356489084711784) NOTNULL))))AND(((vt0.c0)||(rt0.c3)))))AND(UNICODE(vt0.c1))))AND(((vt0.c0) NOTNULL))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c0) NOT BETWEEN (vt0.c1) AND (rt0.c0)) IN ()));
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((((x'')AND(0.035356489084711784)))AND(0.00832706194414956)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((x'')AND(0.035356489084711784)))AND(0.00832706194414956)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((((x'')AND(0.035356489084711784)))AND(0.00832706194414956)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((((x'')AND(0.035356489084711784)))AND(0.00832706194414956)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (CAST(((((x'')AND(0.035356489084711784)))AND(0.00832706194414956)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)OR((rt0.c5 IN ()))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.3634299283291198))))) ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c4)LIKE(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c1)<<(rt0.c4)) WHEN CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) END ASC  NULLS LAST, (~ (rt0.c2 COLLATE RTRIM)), ((((LIKELIHOOD(rt0.c2, 0.36397142296262075))OR((- (NULL)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((rt0.c5 IN ()))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.3634299283291198))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c4)LIKE(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c1)<<(rt0.c4)) WHEN CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) END ASC  NULLS LAST, (~ (rt0.c2 COLLATE RTRIM)), ((((LIKELIHOOD(rt0.c2, 0.36397142296262075))OR((- (NULL)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)OR((rt0.c5 IN ()))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.3634299283291198))))) ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c4)LIKE(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c1)<<(rt0.c4)) WHEN CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) END ASC  NULLS LAST, (~ (rt0.c2 COLLATE RTRIM)), ((((LIKELIHOOD(rt0.c2, 0.36397142296262075))OR((- (NULL)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)OR((rt0.c5 IN ()))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.3634299283291198))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c4)LIKE(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c1)<<(rt0.c4)) WHEN CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) END ASC  NULLS LAST, (~ (rt0.c2 COLLATE RTRIM)), ((((LIKELIHOOD(rt0.c2, 0.36397142296262075))OR((- (NULL)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((((vt0.c0)OR((rt0.c5 IN ()))))AND(((rt0.c1) NOT BETWEEN (vt0.c1) AND (0.3634299283291198))))) ORDER BY CASE (rt0.c3 IN ())  WHEN ((rt0.c1)IS NOT(rt0.c0)) THEN ((rt0.c4)LIKE(rt0.c1)) WHEN rt0.c0 COLLATE BINARY THEN ((vt0.c1)<<(rt0.c4)) WHEN CASE vt0.c1  WHEN rt0.c2 THEN vt0.c1 WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) END ASC  NULLS LAST, (~ (rt0.c2 COLLATE RTRIM)), ((((LIKELIHOOD(rt0.c2, 0.36397142296262075))OR((- (NULL)))))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3) IS FALSE) IN ()) WHERE ((((rt0.c1 IN ())) BETWEEN (vt0.c1) AND (0.1311212576595252)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (vt0.c1) AND (0.1311212576595252))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3) IS FALSE) IN ()) WHERE ((((rt0.c1 IN ())) BETWEEN (vt0.c1) AND (0.1311212576595252)));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1 IN ())) BETWEEN (vt0.c1) AND (0.1311212576595252))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3) IS FALSE) IN ()));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON (((rt0.c3) IS FALSE) IN ()) WHERE ((((rt0.c1 IN ())) BETWEEN (vt0.c1) AND (0.1311212576595252)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)*(vt0.c0)))OR(MIN(vt0.c1, vt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))=((- (vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c1))>((vt0.c0)))) AND (CAST(vt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)*(vt0.c0)))OR(MIN(vt0.c1, vt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((- (vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c1))>((vt0.c0)))) AND (CAST(vt0.c1 AS REAL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)*(vt0.c0)))OR(MIN(vt0.c1, vt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))=((- (vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c1))>((vt0.c0)))) AND (CAST(vt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)*(vt0.c0)))OR(MIN(vt0.c1, vt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))==((- (vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c1))>((vt0.c0)))) AND (CAST(vt0.c1 AS REAL))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)*(vt0.c0)))OR(MIN(vt0.c1, vt0.c1))))AND(CASE WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))=((- (vt0.c0)))) DESC, ((vt0.c0 COLLATE BINARY) NOT BETWEEN ((((vt0.c1))>((vt0.c0)))) AND (CAST(vt0.c1 AS REAL))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) ORDER BY ('' IN ((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ('' IN ((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) ORDER BY ('' IN ((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ('' IN ((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT NULL)) ORDER BY ('' IN ((((vt0.c0, vt0.c0, vt0.c1))<((vt0.c0, vt0.c0, vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (rt0.c4);
SELECT COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c5, rt0.c4))-(0X5ef1d250)));
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c5, rt0.c4))-(0X5ef1d250))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c5, rt0.c4))-(0X5ef1d250)));
SELECT SUM(count) FROM (SELECT ((((GLOB(rt0.c5, rt0.c4))-(0X5ef1d250))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((GLOB(rt0.c5, rt0.c4))-(0X5ef1d250)));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC)) NOT BETWEEN ((((rt0.c1))>((NULL)))) AND (((rt0.c1)+(vt0.c0)))) WHERE (CASE WHEN ((((rt0.c4)OR(x'27ee')))OR(rt0.c5)) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c5 THEN NULL WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)AND(((((vt0.c1)OR(-4.16563088E8)))AND(NULL)))))OR(rt0.c1 COLLATE BINARY)), ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))&(CAST(rt0.c4 AS REAL))) DESC  NULLS LAST, (('<>w') NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c4)OR(x'27ee')))OR(rt0.c5)) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC)) NOT BETWEEN ((((rt0.c1))>((NULL)))) AND (((rt0.c1)+(vt0.c0)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c5 THEN NULL WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)AND(((((vt0.c1)OR(-4.16563088E8)))AND(NULL)))))OR(rt0.c1 COLLATE BINARY)), ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))&(CAST(rt0.c4 AS REAL))) DESC  NULLS LAST, (('<>w') NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC)) NOT BETWEEN ((((rt0.c1))>((NULL)))) AND (((rt0.c1)+(vt0.c0)))) WHERE (CASE WHEN ((((rt0.c4)OR(x'27ee')))OR(rt0.c5)) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c5 THEN NULL WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)AND(((((vt0.c1)OR(-4.16563088E8)))AND(NULL)))))OR(rt0.c1 COLLATE BINARY)), ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))&(CAST(rt0.c4 AS REAL))) DESC  NULLS LAST, (('<>w') NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((rt0.c4)OR(x'27ee')))OR(rt0.c5)) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC)) NOT BETWEEN ((((rt0.c1))>((NULL)))) AND (((rt0.c1)+(vt0.c0)))) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c5 THEN NULL WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)AND(((((vt0.c1)OR(-4.16563088E8)))AND(NULL)))))OR(rt0.c1 COLLATE BINARY)), ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))&(CAST(rt0.c4 AS REAL))) DESC  NULLS LAST, (('<>w') NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN rt0 ON ((CAST(rt0.c4 AS NUMERIC)) NOT BETWEEN ((((rt0.c1))>((NULL)))) AND (((rt0.c1)+(vt0.c0)))) WHERE (CASE WHEN ((((rt0.c4)OR(x'27ee')))OR(rt0.c5)) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) END) ORDER BY ((((CASE WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c5 THEN NULL WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END)AND(((((vt0.c1)OR(-4.16563088E8)))AND(NULL)))))OR(rt0.c1 COLLATE BINARY)), ((((((vt0.c1)OR(rt0.c0)))OR(vt0.c1)))&(CAST(rt0.c4 AS REAL))) DESC  NULLS LAST, (('<>w') NOT BETWEEN (((vt0.c1)||(vt0.c1))) AND (((((((((rt0.c4)OR(rt0.c5)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c3)))) ASC  NULLS LAST;
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((rt0.c3) NOT NULL))OR((rt0.c5 IN (rt0.c2)))))AND((((((((('846487058')OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c4))))) ORDER BY (((((rt0.c5))<=((rt0.c0)))) BETWEEN (((rt0.c3)>(NULL))) AND (((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)))OR(0.3698244762014986)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT NULL))OR((rt0.c5 IN (rt0.c2)))))AND((((((((('846487058')OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5))<=((rt0.c0)))) BETWEEN (((rt0.c3)>(NULL))) AND (((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)))OR(0.3698244762014986)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((rt0.c3) NOT NULL))OR((rt0.c5 IN (rt0.c2)))))AND((((((((('846487058')OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c4))))) ORDER BY (((((rt0.c5))<=((rt0.c0)))) BETWEEN (((rt0.c3)>(NULL))) AND (((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)))OR(0.3698244762014986)))OR(rt0.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3) NOT NULL))OR((rt0.c5 IN (rt0.c2)))))AND((((((((('846487058')OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY (((((rt0.c5))<=((rt0.c0)))) BETWEEN (((rt0.c3)>(NULL))) AND (((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)))OR(0.3698244762014986)))OR(rt0.c2)))));
SELECT ALL * FROM rt0 NOT INDEXED WHERE (((((((rt0.c3) NOT NULL))OR((rt0.c5 IN (rt0.c2)))))AND((((((((('846487058')OR(rt0.c3)))OR(rt0.c5)))OR(rt0.c4)))OR(rt0.c4))))) ORDER BY (((((rt0.c5))<=((rt0.c0)))) BETWEEN (((rt0.c3)>(NULL))) AND (((((((((rt0.c4)AND(rt0.c5)))OR(rt0.c0)))OR(0.3698244762014986)))OR(rt0.c2))));
SELECT * FROM rt0 WHERE (((rt0.c0)<<((((rt0.c3)) BETWEEN (('g3')) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<((((rt0.c3)) BETWEEN (('g3')) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<<((((rt0.c3)) BETWEEN (('g3')) AND ((rt0.c4))))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<<((((rt0.c3)) BETWEEN (('g3')) AND ((rt0.c4)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((rt0.c0)<<((((rt0.c3)) BETWEEN (('g3')) AND ((rt0.c4))))));
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)!=(rt0.c5)))<(((0.3065073735840611)|(0.5385660275224903)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)!=(rt0.c5)))<(((0.3065073735840611)|(0.5385660275224903))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)!=(rt0.c5)))<(((0.3065073735840611)|(0.5385660275224903)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5)!=(rt0.c5)))<(((0.3065073735840611)|(0.5385660275224903))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((rt0.c5)!=(rt0.c5)))<(((0.3065073735840611)|(0.5385660275224903)))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((0.5060256934917309)+(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.5060256934917309)+(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((0.5060256934917309)+(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((0.5060256934917309)+(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(((0.5060256934917309)+(vt0.c0)) AS NUMERIC));
SELECT * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)>(rt0.c2)))) AND ((((rt0.c5)|(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((((rt0.c1)>(rt0.c2)))) AND ((((rt0.c5)|(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)>(rt0.c2)))) AND ((((rt0.c5)|(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c4)) NOT BETWEEN ((((rt0.c1)>(rt0.c2)))) AND ((((rt0.c5)|(rt0.c1)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c4)) NOT BETWEEN ((((rt0.c1)>(rt0.c2)))) AND ((((rt0.c5)|(rt0.c1))))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY vt0.c0, ABS(DISTINCT TRIM(DISTINCT vt0.c1, 0.8861118923116336));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0, ABS(DISTINCT TRIM(DISTINCT vt0.c1, 0.8861118923116336)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY vt0.c0, ABS(DISTINCT TRIM(DISTINCT vt0.c1, 0.8861118923116336));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM rt0, vt0 ORDER BY vt0.c0, ABS(DISTINCT TRIM(DISTINCT vt0.c1, 0.8861118923116336)));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (vt0.c1) ORDER BY vt0.c0, ABS(DISTINCT TRIM(DISTINCT vt0.c1, 0.8861118923116336));
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ('0.10909185699633717');
SELECT SUM(count) FROM (SELECT (('0.10909185699633717') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ('0.10909185699633717');
SELECT SUM(count) FROM (SELECT (('0.10909185699633717') IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 NOT INDEXED WHERE ('0.10909185699633717');
SELECT ALL COUNT(*) FROM rt0 WHERE ('-561892435');
SELECT SUM(count) FROM (SELECT (('-561892435') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-561892435');
SELECT SUM(count) FROM (SELECT (('-561892435') IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE ('-561892435');
SELECT * FROM vt0 WHERE ((((NULL)) BETWEEN ((x'42ea')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((x'42ea')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE ((((NULL)) BETWEEN ((x'42ea')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((NULL)) BETWEEN ((x'42ea')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE ((((NULL)) BETWEEN ((x'42ea')) AND ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM rt0 WHERE (x'4012') ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)  NULLS FIRST, '_' DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'4012') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)  NULLS FIRST, '_' DESC);
SELECT ALL * FROM rt0 WHERE (x'4012') ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)  NULLS FIRST, '_' DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'4012') IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)  NULLS FIRST, '_' DESC);
SELECT ALL * FROM rt0 WHERE (x'4012') ORDER BY ((((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE)  NULLS FIRST, '_' DESC;
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((x'66d1' IN ()));
SELECT SUM(count) FROM (SELECT (((x'66d1' IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((x'66d1' IN ()));
SELECT SUM(count) FROM (SELECT (((x'66d1' IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 NOT INDEXED WHERE ((x'66d1' IN ()));
SELECT * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((IFNULL(vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1))>((NULL)))) AND ('-(nWO'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1))>((NULL)))) AND ('-(nWO'))  NULLS LAST);
SELECT * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((IFNULL(vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1))>((NULL)))) AND ('-(nWO'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY ((IFNULL(vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1))>((NULL)))) AND ('-(nWO'))  NULLS LAST);
SELECT * FROM vt0 WHERE (x'' COLLATE RTRIM) ORDER BY ((IFNULL(vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c1))>((NULL)))) AND ('-(nWO'))  NULLS LAST;
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ('-1551665360') AND (('rK6e' IN ())))) ORDER BY CASE CAST(rt0.c3 AS REAL)  WHEN ((-496664591) ISNULL) THEN ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ('-1551665360') AND (('rK6e' IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE CAST(rt0.c3 AS REAL)  WHEN ((-496664591) ISNULL) THEN ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)) END ASC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ('-1551665360') AND (('rK6e' IN ())))) ORDER BY CASE CAST(rt0.c3 AS REAL)  WHEN ((-496664591) ISNULL) THEN ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ('-1551665360') AND (('rK6e' IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CASE CAST(rt0.c3 AS REAL)  WHEN ((-496664591) ISNULL) THEN ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)) END ASC);
SELECT ALL * FROM vt0 NATURAL JOIN rt0 WHERE (((((rt0.c0)IS NOT(rt0.c0))) BETWEEN ('-1551665360') AND (('rK6e' IN ())))) ORDER BY CASE CAST(rt0.c3 AS REAL)  WHEN ((-496664591) ISNULL) THEN ((((((((rt0.c5)AND(rt0.c0)))AND(vt0.c0)))AND(rt0.c1)))AND(rt0.c4)) END ASC;
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))-(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(CAST(vt0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))-(CAST(vt0.c1 AS INTEGER)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))-(CAST(vt0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c4) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END AS TEXT)  NULLS LAST, ((rt0.c3) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END AS TEXT)  NULLS LAST, ((rt0.c3) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c4) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END AS TEXT)  NULLS LAST, ((rt0.c3) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM vt0 NATURAL JOIN rt0 ORDER BY CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END AS TEXT)  NULLS LAST, ((rt0.c3) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt0 WHERE (rt0.c4) ORDER BY CAST(CASE WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c1 END AS TEXT)  NULLS LAST, ((rt0.c3) IS TRUE)  NULLS LAST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((rt0.c1 IN (((rt0.c0) NOT BETWEEN (x'1eed') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (((rt0.c0) NOT BETWEEN (x'1eed') AND (rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((rt0.c1 IN (((rt0.c0) NOT BETWEEN (x'1eed') AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((rt0.c1 IN (((rt0.c0) NOT BETWEEN (x'1eed') AND (rt0.c2))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0);
SELECT ALL * FROM vt0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE ((rt0.c1 IN (((rt0.c0) NOT BETWEEN (x'1eed') AND (rt0.c2)))));
SELECT COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (vt0.c1 COLLATE RTRIM, ((rt0.c1) NOTNULL)))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c4)%(0.18406487417356476)) THEN vt0.c0 ELSE TOTAL_CHANGES() END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (vt0.c1 COLLATE RTRIM, ((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c4)%(0.18406487417356476)) THEN vt0.c0 ELSE TOTAL_CHANGES() END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (vt0.c1 COLLATE RTRIM, ((rt0.c1) NOTNULL)))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c4)%(0.18406487417356476)) THEN vt0.c0 ELSE TOTAL_CHANGES() END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN (vt0.c1 COLLATE RTRIM, ((rt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c4)%(0.18406487417356476)) THEN vt0.c0 ELSE TOTAL_CHANGES() END DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((rt0.c2 COLLATE RTRIM IN (vt0.c1 COLLATE RTRIM, ((rt0.c1) NOTNULL)))) ORDER BY CASE rt0.c2 COLLATE BINARY  WHEN ((rt0.c4)%(0.18406487417356476)) THEN vt0.c0 ELSE TOTAL_CHANGES() END DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC)))>=((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC)))>=((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC)))>=((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC)))>=((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM vt0 INNER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC)))>=((CASE vt0.c0  WHEN rt0.c0 THEN vt0.c0 END))) WHERE (NULL);
SELECT ALL * FROM rt0 WHERE (((rt0.c5) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c5) NOT NULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c5) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((rt0.c5) NOT NULL) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)>(vt0.c0))) NOT NULL) WHERE (((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c5) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN '' ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)>(vt0.c0))) NOT NULL) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c5) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN '' ELSE rt0.c2 END END);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)>(vt0.c0))) NOT NULL) WHERE (((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c5) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN '' ELSE rt0.c2 END END;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)>(vt0.c0))) NOT NULL) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c5) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN '' ELSE rt0.c2 END END);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)>(vt0.c0))) NOT NULL) WHERE (((((vt0.c1)OR(rt0.c3)))OR(rt0.c1)) COLLATE RTRIM) ORDER BY CASE WHEN ((rt0.c2) BETWEEN (rt0.c5) AND (vt0.c0)) THEN CASE WHEN vt0.c1 THEN '' ELSE rt0.c2 END END;
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c4)))&(LIKELIHOOD(rt0.c4, 0.4725629172479875))) WHERE (UPPER(((rt0.c2)<<(vt0.c0)))) ORDER BY (((('')AND(((rt0.c2)%(rt0.c0)))))OR((((rt0.c5))<>((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c2)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c4)))&(LIKELIHOOD(rt0.c4, 0.4725629172479875))) ORDER BY (((('')AND(((rt0.c2)%(rt0.c0)))))OR((((rt0.c5))<>((vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c4)))&(LIKELIHOOD(rt0.c4, 0.4725629172479875))) WHERE (UPPER(((rt0.c2)<<(vt0.c0)))) ORDER BY (((('')AND(((rt0.c2)%(rt0.c0)))))OR((((rt0.c5))<>((vt0.c1))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(((rt0.c2)<<(vt0.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c4)))&(LIKELIHOOD(rt0.c4, 0.4725629172479875))) ORDER BY (((('')AND(((rt0.c2)%(rt0.c0)))))OR((((rt0.c5))<>((vt0.c1))))) DESC  NULLS LAST);
SELECT * FROM vt0 LEFT OUTER JOIN rt0 ON ((((((rt0.c5)AND(rt0.c1)))AND(rt0.c4)))&(LIKELIHOOD(rt0.c4, 0.4725629172479875))) WHERE (UPPER(((rt0.c2)<<(vt0.c0)))) ORDER BY (((('')AND(((rt0.c2)%(rt0.c0)))))OR((((rt0.c5))<>((vt0.c1))))) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((((NULL COLLATE RTRIM))>((CAST(rt0.c0 AS TEXT))))) ORDER BY ((((rt0.c1)>=(rt0.c1)))<=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC, CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS NUMERIC)  NULLS LAST, ((rt0.c4 COLLATE RTRIM) BETWEEN ((((rt0.c5))<=((rt0.c2)))) AND (((rt0.c3)==(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL COLLATE RTRIM))>((CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)>=(rt0.c1)))<=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC, CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS NUMERIC)  NULLS LAST, ((rt0.c4 COLLATE RTRIM) BETWEEN ((((rt0.c5))<=((rt0.c2)))) AND (((rt0.c3)==(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL COLLATE RTRIM))>((CAST(rt0.c0 AS TEXT))))) ORDER BY ((((rt0.c1)>=(rt0.c1)))<=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC, CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS NUMERIC)  NULLS LAST, ((rt0.c4 COLLATE RTRIM) BETWEEN ((((rt0.c5))<=((rt0.c2)))) AND (((rt0.c3)==(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((NULL COLLATE RTRIM))>((CAST(rt0.c0 AS TEXT))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c1)>=(rt0.c1)))<=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC, CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS NUMERIC)  NULLS LAST, ((rt0.c4 COLLATE RTRIM) BETWEEN ((((rt0.c5))<=((rt0.c2)))) AND (((rt0.c3)==(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE ((((NULL COLLATE RTRIM))>((CAST(rt0.c0 AS TEXT))))) ORDER BY ((((rt0.c1)>=(rt0.c1)))<=(((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))) ASC, CAST((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) AS NUMERIC)  NULLS LAST, ((rt0.c4 COLLATE RTRIM) BETWEEN ((((rt0.c5))<=((rt0.c2)))) AND (((rt0.c3)==(rt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.9803021042512072))*(((rt0.c4)>=(rt0.c0))))) ORDER BY ((~ (rt0.c5)) IN ()) ASC, ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))IS(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c1, 0.9803021042512072))*(((rt0.c4)>=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c5)) IN ()) ASC, ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))IS(((rt0.c0) IS FALSE))));
SELECT ALL * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.9803021042512072))*(((rt0.c4)>=(rt0.c0))))) ORDER BY ((~ (rt0.c5)) IN ()) ASC, ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))IS(((rt0.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(DISTINCT vt0.c1, 0.9803021042512072))*(((rt0.c4)>=(rt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((~ (rt0.c5)) IN ()) ASC, ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))IS(((rt0.c0) IS FALSE))));
SELECT ALL * FROM vt0, rt0 WHERE (((LIKELIHOOD(DISTINCT vt0.c1, 0.9803021042512072))*(((rt0.c4)>=(rt0.c0))))) ORDER BY ((~ (rt0.c5)) IN ()) ASC, ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))IS(((rt0.c0) IS FALSE)));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS BLOB) COLLATE RTRIM);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(rt0.c1, 0.1909496506592555)) ORDER BY ABS(DISTINCT QUOTE(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c1, 0.1909496506592555)) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT QUOTE(rt0.c0)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(rt0.c1, 0.1909496506592555)) ORDER BY ABS(DISTINCT QUOTE(rt0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(rt0.c1, 0.1909496506592555)) IS TRUE)  as count FROM rt0 ORDER BY ABS(DISTINCT QUOTE(rt0.c0)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (LIKELIHOOD(rt0.c1, 0.1909496506592555)) ORDER BY ABS(DISTINCT QUOTE(rt0.c0)) DESC;
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LIKELY((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((+ (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LIKELY((+ (rt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((+ (rt0.c0)))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (LIKELY((+ (rt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((UNICODE(vt0.c1)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.c1)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((UNICODE(vt0.c1)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((UNICODE(vt0.c1)) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((UNICODE(vt0.c1)) ISNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((0.32996486893620613)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((0.32996486893620613)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((0.32996486893620613)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((0.32996486893620613)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((0.32996486893620613)) AND ((vt0.c0)))) BETWEEN (((vt0.c0)=(vt0.c0))) AND (CAST(vt0.c0 AS REAL))));
SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c4))))) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER), (((rt0.c3 IN ()))LIKE(rt0.c4)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER), (((rt0.c3 IN ()))LIKE(rt0.c4)) ASC);
SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c4))))) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER), (((rt0.c3 IN ()))LIKE(rt0.c4)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((- (rt0.c4))))) IS TRUE)  as count FROM rt0 ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER), (((rt0.c3 IN ()))LIKE(rt0.c4)) ASC);
SELECT * FROM rt0 WHERE ((NOT ((- (rt0.c4))))) ORDER BY CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER), (((rt0.c3 IN ()))LIKE(rt0.c4)) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c2))) AND (((rt0.c1)%(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c2))) AND (((rt0.c1)%(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c2))) AND (((rt0.c1)%(rt0.c5)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c2))) AND (((rt0.c1)%(rt0.c5))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c2))) AND (((rt0.c1)%(rt0.c5)))));
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c5 THEN -851595612 END)OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))OR(CAST(rt0.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c5 THEN -851595612 END)OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))OR(CAST(rt0.c5 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c5 THEN -851595612 END)OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))OR(CAST(rt0.c5 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c5 THEN -851595612 END)OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))OR(CAST(rt0.c5 AS BLOB)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c4 WHEN rt0.c5 THEN -851595612 END)OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))OR(CAST(rt0.c5 AS BLOB))));
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN json_array_length(rt0.c3) THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE vt0.c0 END ASC, CASE WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN json_array_length(rt0.c3) THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE vt0.c0 END ASC, CASE WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 END DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN json_array_length(rt0.c3) THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE vt0.c0 END ASC, CASE WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) NOTNULL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE WHEN json_array_length(rt0.c3) THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE vt0.c0 END ASC, CASE WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 END DESC);
SELECT * FROM vt0, rt0 WHERE (((rt0.c1) NOTNULL) COLLATE RTRIM) ORDER BY CASE WHEN json_array_length(rt0.c3) THEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c4)) ELSE vt0.c0 END ASC, CASE WHEN CAST(rt0.c3 AS REAL) THEN rt0.c3 END DESC;
SELECT * FROM vt0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c4 THEN x'' ELSE rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN rt0.c4 THEN x'' ELSE rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c4 THEN x'' ELSE rt0.c2 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c1  WHEN rt0.c4 THEN x'' ELSE rt0.c2 END) NOT NULL)) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((CASE vt0.c1  WHEN rt0.c4 THEN x'' ELSE rt0.c2 END) NOT NULL));
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (rt0.c4) ORDER BY rt0.c2 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE (0X5931b82e COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c1 COLLATE NOCASE, (rt0.c3 IN ()), ((rt0.c3)||(rt0.c3)))) AND ((((rt0.c2) NOT NULL), ((rt0.c5) NOTNULL), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))  NULLS FIRST, CAST(x'4b30' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x5931b82e COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c1 COLLATE NOCASE, (rt0.c3 IN ()), ((rt0.c3)||(rt0.c3)))) AND ((((rt0.c2) NOT NULL), ((rt0.c5) NOTNULL), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))  NULLS FIRST, CAST(x'4b30' AS REAL) DESC);
SELECT * FROM rt0 WHERE (0X5931b82e COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c1 COLLATE NOCASE, (rt0.c3 IN ()), ((rt0.c3)||(rt0.c3)))) AND ((((rt0.c2) NOT NULL), ((rt0.c5) NOTNULL), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))  NULLS FIRST, CAST(x'4b30' AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0x5931b82e COLLATE NOCASE) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c1 COLLATE NOCASE, (rt0.c3 IN ()), ((rt0.c3)||(rt0.c3)))) AND ((((rt0.c2) NOT NULL), ((rt0.c5) NOTNULL), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))  NULLS FIRST, CAST(x'4b30' AS REAL) DESC);
SELECT * FROM rt0 WHERE (0X5931b82e COLLATE NOCASE) ORDER BY (((rt0.c1, rt0.c2, rt0.c3)) BETWEEN ((rt0.c1 COLLATE NOCASE, (rt0.c3 IN ()), ((rt0.c3)||(rt0.c3)))) AND ((((rt0.c2) NOT NULL), ((rt0.c5) NOTNULL), ((((rt0.c2)AND(rt0.c2)))AND(rt0.c1)))))  NULLS FIRST, CAST(x'4b30' AS REAL) DESC;
SELECT ALL * FROM vt0, rt0 WHERE ((((((('')AND(rt0.c1)))AND(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND (TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(rt0.c1)))AND(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((('')AND(rt0.c1)))AND(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND (TRIM(DISTINCT vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((('')AND(rt0.c1)))AND(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND (TRIM(DISTINCT vt0.c0)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((((('')AND(rt0.c1)))AND(vt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN x'' END) AND (TRIM(DISTINCT vt0.c0))));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c1)))AND(vt0.c1))))<((((vt0.c1)OR(rt0.c3)))))) ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN -1311230503 THEN 0.547548197933 END  WHEN (+ (vt0.c1)) THEN ABS(rt0.c0) ELSE ((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)) END DESC  NULLS FIRST, ((((vt0.c1)!=(rt0.c3)))AND(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c1)))AND(vt0.c1))))<((((vt0.c1)OR(rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN -1311230503 THEN 0.547548197933 END  WHEN (+ (vt0.c1)) THEN ABS(rt0.c0) ELSE ((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)) END DESC  NULLS FIRST, ((((vt0.c1)<>(rt0.c3)))AND(vt0.c1)));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c1)))AND(vt0.c1))))<((((vt0.c1)OR(rt0.c3)))))) ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN -1311230503 THEN 0.547548197933 END  WHEN (+ (vt0.c1)) THEN ABS(rt0.c0) ELSE ((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)) END DESC  NULLS FIRST, ((((vt0.c1)!=(rt0.c3)))AND(vt0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c1)))AND(vt0.c1))))<((((vt0.c1)OR(rt0.c3)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN -1311230503 THEN 0.547548197933 END  WHEN (+ (vt0.c1)) THEN ABS(rt0.c0) ELSE ((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)) END DESC  NULLS FIRST, ((((vt0.c1)<>(rt0.c3)))AND(vt0.c1)));
SELECT ALL * FROM vt0, rt0 WHERE ((((((((((((vt0.c0)AND(rt0.c1)))AND(rt0.c5)))OR(rt0.c1)))AND(vt0.c1))))<((((vt0.c1)OR(rt0.c3)))))) ORDER BY CASE CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN -1311230503 THEN 0.547548197933 END  WHEN (+ (vt0.c1)) THEN ABS(rt0.c0) ELSE ((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)) END DESC  NULLS FIRST, ((((vt0.c1)!=(rt0.c3)))AND(vt0.c1));
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END COLLATE RTRIM) ORDER BY CASE WHEN rt0.c4 THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (0.808004122441039)) END ASC, ((UPPER(DISTINCT rt0.c4))OR(CASE WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c4 THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (0.808004122441039)) END ASC, ((UPPER(DISTINCT rt0.c4))OR(CASE WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END COLLATE RTRIM) ORDER BY CASE WHEN rt0.c4 THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (0.808004122441039)) END ASC, ((UPPER(DISTINCT rt0.c4))OR(CASE WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM rt0 ORDER BY CASE WHEN rt0.c4 THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (0.808004122441039)) END ASC, ((UPPER(DISTINCT rt0.c4))OR(CASE WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE (CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c5 WHEN rt0.c4 THEN rt0.c1 END COLLATE RTRIM) ORDER BY CASE WHEN rt0.c4 THEN ((rt0.c1) NOT BETWEEN (rt0.c3) AND (0.808004122441039)) END ASC, ((UPPER(DISTINCT rt0.c4))OR(CASE WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c3 END)) ASC  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE (x'');
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0) BETWEEN (x'3887') AND (rt0.c1)), rt0.c3, CAST(vt0.c0 AS INTEGER)))>(((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c4))), 0.3247886140516516, CASE WHEN rt0.c1 THEN rt0.c5 END)))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) BETWEEN (x'3887') AND (rt0.c1)), rt0.c3, CAST(vt0.c0 AS INTEGER)))>(((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c4))), 0.3247886140516516, CASE WHEN rt0.c1 THEN rt0.c5 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (CAST(rt0.c3 AS NUMERIC))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0) BETWEEN (x'3887') AND (rt0.c1)), rt0.c3, CAST(vt0.c0 AS INTEGER)))>(((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c4))), 0.3247886140516516, CASE WHEN rt0.c1 THEN rt0.c5 END)))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT (((((((rt0.c0) BETWEEN (x'3887') AND (rt0.c1)), rt0.c3, CAST(vt0.c0 AS INTEGER)))>(((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c4))), 0.3247886140516516, CASE WHEN rt0.c1 THEN rt0.c5 END)))) IS TRUE)  as count FROM rt0, vt0 ORDER BY (- (CAST(rt0.c3 AS NUMERIC))) DESC);
SELECT ALL * FROM rt0, vt0 WHERE ((((((rt0.c0) BETWEEN (x'3887') AND (rt0.c1)), rt0.c3, CAST(vt0.c0 AS INTEGER)))>(((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c4))), 0.3247886140516516, CASE WHEN rt0.c1 THEN rt0.c5 END)))) ORDER BY (- (CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (x'')) AS TEXT)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (x'')) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (x'')) AS TEXT)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN (x'')) AS TEXT)) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c1 DESC  NULLS FIRST);
SELECT * FROM rt0, vt0 WHERE (CAST((rt0.c2 IN (x'')) AS TEXT)) ORDER BY rt0.c1 DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((x'')!=(rt0.c0))) AND (LIKELIHOOD(rt0.c4, 0.9936822874255918))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (((x'')<>(rt0.c0))) AND (LIKELIHOOD(rt0.c4, 0.9936822874255918)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((x'')!=(rt0.c0))) AND (LIKELIHOOD(rt0.c4, 0.9936822874255918))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) BETWEEN (((x'')<>(rt0.c0))) AND (LIKELIHOOD(rt0.c4, 0.9936822874255918)))) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c1 IN ())) BETWEEN (((x'')!=(rt0.c0))) AND (LIKELIHOOD(rt0.c4, 0.9936822874255918))));
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))%((('M8') IS FALSE)))) ORDER BY ((- (rt0.c4)) IN ((((rt0.c4, rt0.c5, rt0.c1, rt0.c1, vt0.c0))==((rt0.c3, vt0.c0, rt0.c1, rt0.c5, vt0.c0))), (NULL IN (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))%((('M8') IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((- (rt0.c4)) IN ((((rt0.c4, rt0.c5, rt0.c1, rt0.c1, vt0.c0))=((rt0.c3, vt0.c0, rt0.c1, rt0.c5, vt0.c0))), (NULL IN (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))%((('M8') IS FALSE)))) ORDER BY ((- (rt0.c4)) IN ((((rt0.c4, rt0.c5, rt0.c1, rt0.c1, vt0.c0))==((rt0.c3, vt0.c0, rt0.c1, rt0.c5, vt0.c0))), (NULL IN (rt0.c3))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c0 AS BLOB))%((('M8') IS FALSE)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((- (rt0.c4)) IN ((((rt0.c4, rt0.c5, rt0.c1, rt0.c1, vt0.c0))=((rt0.c3, vt0.c0, rt0.c1, rt0.c5, vt0.c0))), (NULL IN (rt0.c3))))  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (((CAST(rt0.c0 AS BLOB))%((('M8') IS FALSE)))) ORDER BY ((- (rt0.c4)) IN ((((rt0.c4, rt0.c5, rt0.c1, rt0.c1, vt0.c0))==((rt0.c3, vt0.c0, rt0.c1, rt0.c5, vt0.c0))), (NULL IN (rt0.c3))))  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c1 THEN rt0.c2 END  WHEN rt0.c5 THEN CAST(rt0.c4 AS INTEGER) END WHERE (0.955212226953875);
SELECT SUM(count) FROM (SELECT ((0.955212226953875) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c1 THEN rt0.c2 END  WHEN rt0.c5 THEN CAST(rt0.c4 AS INTEGER) END);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c1 THEN rt0.c2 END  WHEN rt0.c5 THEN CAST(rt0.c4 AS INTEGER) END WHERE (0.955212226953875);
SELECT SUM(count) FROM (SELECT ((0.955212226953875) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c1 THEN rt0.c2 END  WHEN rt0.c5 THEN CAST(rt0.c4 AS INTEGER) END);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON CASE CASE WHEN vt0.c1 THEN rt0.c2 END  WHEN rt0.c5 THEN CAST(rt0.c4 AS INTEGER) END WHERE (0.955212226953875);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE BINARY)-(COALESCE('-636021212', vt0.c1)))) ORDER BY HEX((vt0.c0 IN (rt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)-(COALESCE('-636021212', vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX((vt0.c0 IN (rt0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE BINARY)-(COALESCE('-636021212', vt0.c1)))) ORDER BY HEX((vt0.c0 IN (rt0.c0, rt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE BINARY)-(COALESCE('-636021212', vt0.c1)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY HEX((vt0.c0 IN (rt0.c0, rt0.c0))));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (((rt0.c3 COLLATE BINARY)-(COALESCE('-636021212', vt0.c1)))) ORDER BY HEX((vt0.c0 IN (rt0.c0, rt0.c0)));
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0, rt0.c3, rt0.c3, rt0.c5, rt0.c2))<>((rt0.c0, vt0.c0, rt0.c4, vt0.c0, rt0.c5))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c3, rt0.c3, rt0.c5, rt0.c2))!=((rt0.c0, vt0.c0, rt0.c4, vt0.c0, rt0.c5))) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0, rt0.c3, rt0.c3, rt0.c5, rt0.c2))<>((rt0.c0, vt0.c0, rt0.c4, vt0.c0, rt0.c5))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0, rt0.c3, rt0.c3, rt0.c5, rt0.c2))!=((rt0.c0, vt0.c0, rt0.c4, vt0.c0, rt0.c5))) IN ())) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((((rt0.c0, rt0.c3, rt0.c3, rt0.c5, rt0.c2))<>((rt0.c0, vt0.c0, rt0.c4, vt0.c0, rt0.c5))) IN ()));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)IS(vt0.c0)) AS NUMERIC)) ORDER BY -1.564671622E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)IS(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY -1.564671622E9  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)IS(vt0.c0)) AS NUMERIC)) ORDER BY -1.564671622E9  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1)IS(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY -1.564671622E9  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1)IS(vt0.c0)) AS NUMERIC)) ORDER BY -1.564671622E9  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (UPPER(LTRIM(vt0.c0, vt0.c0))) ORDER BY 0.9544945115360718  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(LTRIM(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY 0.9544945115360718  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(LTRIM(vt0.c0, vt0.c0))) ORDER BY 0.9544945115360718  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UPPER(LTRIM(vt0.c0, vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY 0.9544945115360718  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (UPPER(LTRIM(vt0.c0, vt0.c0))) ORDER BY 0.9544945115360718  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3) IS TRUE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (((rt0.c3) IS TRUE) COLLATE BINARY);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c3)>(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)>(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c3)>(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c3)>(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST);
SELECT COUNT(*) FROM rt0 WHERE (rt0.c0) ORDER BY ((rt0.c3)>(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c2))))  NULLS LAST;
SELECT ALL * FROM rt0 INNER JOIN vt0 ON rt0.c1 COLLATE BINARY WHERE ((((NULL)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c1 COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON rt0.c1 COLLATE BINARY WHERE ((((NULL)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((((NULL)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON rt0.c1 COLLATE BINARY);
SELECT ALL * FROM rt0 INNER JOIN vt0 ON rt0.c1 COLLATE BINARY WHERE ((((NULL)) BETWEEN ((rt0.c1)) AND ((vt0.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0 WHERE (-4.16563088E8);
SELECT SUM(count) FROM (SELECT ALL ((-4.16563088E8) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-4.16563088E8);
SELECT SUM(count) FROM (SELECT ALL ((-4.16563088E8) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-4.16563088E8);
SELECT * FROM vt0, rt0 WHERE (((((((((((((((rt0.c5)>=(rt0.c2)))AND(rt0.c5)))OR(CASE WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c5 END)))AND((((vt0.c0, rt0.c5, rt0.c0)) BETWEEN ((rt0.c5, 0.11704281721820986, rt0.c0)) AND ((vt0.c0, rt0.c5, rt0.c5))))))OR((((rt0.c2, vt0.c1, vt0.c1))<=((rt0.c5, vt0.c1, rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)))))AND((~ (vt0.c0))))) ORDER BY (((NOT (vt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0)) ASC  NULLS LAST, CAST(((((x'')AND(rt0.c1)))OR(rt0.c5)) AS TEXT), CASE CAST(rt0.c2 AS TEXT)  WHEN rt0.c3 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c5) IS FALSE) THEN ((rt0.c5)/(rt0.c1)) WHEN INSTR(rt0.c5, rt0.c5) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c5 AS BLOB) THEN ((rt0.c0)GLOB(vt0.c1)) WHEN NULL THEN ((rt0.c1)OR(vt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c5)>=(rt0.c2)))AND(rt0.c5)))OR(CASE WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c5 END)))AND((((vt0.c0, rt0.c5, rt0.c0)) BETWEEN ((rt0.c5, 0.11704281721820986, rt0.c0)) AND ((vt0.c0, rt0.c5, rt0.c5))))))OR((((rt0.c2, vt0.c1, vt0.c1))<=((rt0.c5, vt0.c1, rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (vt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0)) ASC  NULLS LAST, CAST(((((x'')AND(rt0.c1)))OR(rt0.c5)) AS TEXT), CASE CAST(rt0.c2 AS TEXT)  WHEN rt0.c3 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c5) IS FALSE) THEN ((rt0.c5)/(rt0.c1)) WHEN INSTR(rt0.c5, rt0.c5) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c5 AS BLOB) THEN ((rt0.c0)GLOB(vt0.c1)) WHEN NULL THEN ((rt0.c1)OR(vt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) END ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((((((((((((rt0.c5)>=(rt0.c2)))AND(rt0.c5)))OR(CASE WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c5 END)))AND((((vt0.c0, rt0.c5, rt0.c0)) BETWEEN ((rt0.c5, 0.11704281721820986, rt0.c0)) AND ((vt0.c0, rt0.c5, rt0.c5))))))OR((((rt0.c2, vt0.c1, vt0.c1))<=((rt0.c5, vt0.c1, rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)))))AND((~ (vt0.c0))))) ORDER BY (((NOT (vt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0)) ASC  NULLS LAST, CAST(((((x'')AND(rt0.c1)))OR(rt0.c5)) AS TEXT), CASE CAST(rt0.c2 AS TEXT)  WHEN rt0.c3 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c5) IS FALSE) THEN ((rt0.c5)/(rt0.c1)) WHEN INSTR(rt0.c5, rt0.c5) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c5 AS BLOB) THEN ((rt0.c0)GLOB(vt0.c1)) WHEN NULL THEN ((rt0.c1)OR(vt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((((((rt0.c5)>=(rt0.c2)))AND(rt0.c5)))OR(CASE WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c5 END)))AND((((vt0.c0, rt0.c5, rt0.c0)) BETWEEN ((rt0.c5, 0.11704281721820986, rt0.c0)) AND ((vt0.c0, rt0.c5, rt0.c5))))))OR((((rt0.c2, vt0.c1, vt0.c1))<=((rt0.c5, vt0.c1, rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)))))AND((~ (vt0.c0))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (((NOT (vt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0)) ASC  NULLS LAST, CAST(((((x'')AND(rt0.c1)))OR(rt0.c5)) AS TEXT), CASE CAST(rt0.c2 AS TEXT)  WHEN rt0.c3 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c5) IS FALSE) THEN ((rt0.c5)/(rt0.c1)) WHEN INSTR(rt0.c5, rt0.c5) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c5 AS BLOB) THEN ((rt0.c0)GLOB(vt0.c1)) WHEN NULL THEN ((rt0.c1)OR(vt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) END ASC  NULLS LAST);
SELECT * FROM vt0, rt0 WHERE (((((((((((((((rt0.c5)>=(rt0.c2)))AND(rt0.c5)))OR(CASE WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN rt0.c5 END)))AND((((vt0.c0, rt0.c5, rt0.c0)) BETWEEN ((rt0.c5, 0.11704281721820986, rt0.c0)) AND ((vt0.c0, rt0.c5, rt0.c5))))))OR((((rt0.c2, vt0.c1, vt0.c1))<=((rt0.c5, vt0.c1, rt0.c0))))))AND(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c0)))OR(vt0.c0)))OR(rt0.c4)))))AND((~ (vt0.c0))))) ORDER BY (((NOT (vt0.c1))) BETWEEN (((rt0.c3) NOTNULL)) AND (vt0.c0)) ASC  NULLS LAST, CAST(((((x'')AND(rt0.c1)))OR(rt0.c5)) AS TEXT), CASE CAST(rt0.c2 AS TEXT)  WHEN rt0.c3 THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c5) IS FALSE) THEN ((rt0.c5)/(rt0.c1)) WHEN INSTR(rt0.c5, rt0.c5) THEN ((rt0.c1) IS TRUE) WHEN CAST(rt0.c5 AS BLOB) THEN ((rt0.c0)GLOB(vt0.c1)) WHEN NULL THEN ((rt0.c1)OR(vt0.c1)) ELSE (((rt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((rt0.c1))) END ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c5 COLLATE NOCASE))) ORDER BY (+ ((- (rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ ((- (rt0.c4)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c5 COLLATE NOCASE))) ORDER BY (+ ((- (rt0.c4)))) DESC;
SELECT SUM(count) FROM (SELECT (((- (rt0.c5 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, rt0 ORDER BY (+ ((- (rt0.c4)))) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((- (rt0.c5 COLLATE NOCASE))) ORDER BY (+ ((- (rt0.c4)))) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c0 END)AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c0 END)AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c0 END)AND((rt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c0 END)AND((rt0.c1 IN ())))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE WHEN rt0.c5 THEN rt0.c3 ELSE rt0.c0 END)AND((rt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'6422')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((x'6422')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'6422')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((x'6422')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((x'6422')) BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.1609676329126276)&(vt0.c0)))IS(NULL)));
SELECT SUM(count) FROM (SELECT ((((((0.1609676329126276)&(vt0.c0)))IS(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.1609676329126276)&(vt0.c0)))IS(NULL)));
SELECT SUM(count) FROM (SELECT ((((((0.1609676329126276)&(vt0.c0)))IS(NULL))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((0.1609676329126276)&(vt0.c0)))IS(NULL)));
SELECT COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((rt0.c1)%(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c1)%(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((rt0.c1)%(rt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT ((rt0.c1)%(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE (ABS(DISTINCT ((rt0.c1)%(rt0.c1))));
SELECT * FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS TRUE) IN (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (vt0.c1 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((vt0.c1) IS TRUE) IN (vt0.c1 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1) IS TRUE) IN (vt0.c1 COLLATE BINARY)));
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))|(((rt0.c3)>(rt0.c0))))) ORDER BY CAST((((rt0.c0))!=((rt0.c1))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))|(((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0))!=((rt0.c1))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))|(((rt0.c3)>(rt0.c0))))) ORDER BY CAST((((rt0.c0))!=((rt0.c1))) AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN ()))|(((rt0.c3)>(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CAST((((rt0.c0))!=((rt0.c1))) AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM rt0 WHERE ((((rt0.c0 IN ()))|(((rt0.c3)>(rt0.c0))))) ORDER BY CAST((((rt0.c0))!=((rt0.c1))) AS TEXT) ASC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c0)-(rt0.c1)) IN ())) ORDER BY ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CAST(rt0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CAST(rt0.c2 AS BLOB))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c0)-(rt0.c1)) IN ())) ORDER BY ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CAST(rt0.c2 AS BLOB))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)-(rt0.c1)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CAST(rt0.c2 AS BLOB))) DESC);
SELECT * FROM rt0 WHERE ((((rt0.c0)-(rt0.c1)) IN ())) ORDER BY ((((((rt0.c4)OR(rt0.c5)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0)LIKE(rt0.c1))) AND (CAST(rt0.c2 AS BLOB))) DESC;
SELECT * FROM rt0 WHERE ('') ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0 WHERE ('') ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 ORDER BY NULL  NULLS FIRST);
SELECT * FROM rt0 WHERE ('') ORDER BY NULL  NULLS FIRST;
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c5);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c5) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 NOT INDEXED WHERE (rt0.c5);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0xffffffffcc8163e6)IS((NOT (rt0.c0))))) ORDER BY ((((((rt0.c0)/('-1087268599')))OR(TRIM(rt0.c2, rt0.c0))))AND(((rt0.c3)*(rt0.c3)))), (((rt0.c5)>>(rt0.c1)) IN (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c5))) NOT BETWEEN (((rt0.c3)|(vt0.c0))) AND ((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffcc8163e6)IS((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)/('-1087268599')))OR(TRIM(rt0.c2, rt0.c0))))AND(((rt0.c3)*(rt0.c3)))), (((rt0.c5)>>(rt0.c1)) IN (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c5))) NOT BETWEEN (((rt0.c3)|(vt0.c0))) AND ((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0xffffffffcc8163e6)IS((NOT (rt0.c0))))) ORDER BY ((((((rt0.c0)/('-1087268599')))OR(TRIM(rt0.c2, rt0.c0))))AND(((rt0.c3)*(rt0.c3)))), (((rt0.c5)>>(rt0.c1)) IN (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c5))) NOT BETWEEN (((rt0.c3)|(vt0.c0))) AND ((rt0.c4 IN ())));
SELECT SUM(count) FROM (SELECT ((((0Xffffffffcc8163e6)IS((NOT (rt0.c0))))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((rt0.c0)/('-1087268599')))OR(TRIM(rt0.c2, rt0.c0))))AND(((rt0.c3)*(rt0.c3)))), (((rt0.c5)>>(rt0.c1)) IN (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c5))) NOT BETWEEN (((rt0.c3)|(vt0.c0))) AND ((rt0.c4 IN ()))));
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (((0xffffffffcc8163e6)IS((NOT (rt0.c0))))) ORDER BY ((((((rt0.c0)/('-1087268599')))OR(TRIM(rt0.c2, rt0.c0))))AND(((rt0.c3)*(rt0.c3)))), (((rt0.c5)>>(rt0.c1)) IN (vt0.c1 COLLATE BINARY)) ASC  NULLS LAST, ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c5))) NOT BETWEEN (((rt0.c3)|(vt0.c0))) AND ((rt0.c4 IN ())));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1) BETWEEN ('517585377') AND (rt0.c5)))OR((NOT (rt0.c0)))))OR(((rt0.c0)>=(0.4860605479956437)))) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1) BETWEEN ('517585377') AND (rt0.c5)))OR((NOT (rt0.c0)))))OR(((rt0.c0)>=(0.4860605479956437)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1) BETWEEN ('517585377') AND (rt0.c5)))OR((NOT (rt0.c0)))))OR(((rt0.c0)>=(0.4860605479956437)))) WHERE (rt0.c4);
SELECT SUM(count) FROM (SELECT ((rt0.c4) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1) BETWEEN ('517585377') AND (rt0.c5)))OR((NOT (rt0.c0)))))OR(((rt0.c0)>=(0.4860605479956437)))));
SELECT * FROM rt0 LEFT OUTER JOIN vt0 ON ((((((rt0.c1) BETWEEN ('517585377') AND (rt0.c5)))OR((NOT (rt0.c0)))))OR(((rt0.c0)>=(0.4860605479956437)))) WHERE (rt0.c4);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)<=(vt0.c1)))AND(((vt0.c1) NOT NULL)))) ORDER BY ((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (TRIM(vt0.c1, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC, (NOT ('j')) ASC, (~ (TRIM(DISTINCT vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (TRIM(vt0.c1, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC, (NOT ('j')) ASC, (~ (TRIM(DISTINCT vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)<=(vt0.c1)))AND(((vt0.c1) NOT NULL)))) ORDER BY ((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (TRIM(vt0.c1, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC, (NOT ('j')) ASC, (~ (TRIM(DISTINCT vt0.c0, vt0.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)<=(vt0.c1)))AND(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (TRIM(vt0.c1, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC, (NOT ('j')) ASC, (~ (TRIM(DISTINCT vt0.c0, vt0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)<=(vt0.c1)))AND(((vt0.c1) NOT NULL)))) ORDER BY ((((vt0.c1)GLOB(vt0.c0))) NOT BETWEEN (TRIM(vt0.c1, vt0.c0)) AND (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC, (NOT ('j')) ASC, (~ (TRIM(DISTINCT vt0.c0, vt0.c1)));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c1))>((rt0.c0)))) IS FALSE)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c1))>((rt0.c0)))) IS FALSE)) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1))>((rt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0, rt0 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((((vt0.c1))>((rt0.c0)))) IS FALSE)) ORDER BY '' DESC;
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)<<(rt0.c4)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)<<(rt0.c4)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)<<(rt0.c4)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)>=(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c0)<<(rt0.c4)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)>=(rt0.c2))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((((rt0.c0)<<(rt0.c4)))AND(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c0)>=(rt0.c2)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)|(vt0.c0))) ISNULL) WHERE (json_insert(((rt0.c3)IS(rt0.c3)), CAST(rt0.c3 AS INTEGER), ((rt0.c5)<>(rt0.c4)))) ORDER BY ((vt0.c1) NOT NULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((json_insert(((rt0.c3)IS(rt0.c3)), CAST(rt0.c3 AS INTEGER), ((rt0.c5)<>(rt0.c4)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)|(vt0.c0))) ISNULL) ORDER BY ((vt0.c1) NOT NULL) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)|(vt0.c0))) ISNULL) WHERE (json_insert(((rt0.c3)IS(rt0.c3)), CAST(rt0.c3 AS INTEGER), ((rt0.c5)<>(rt0.c4)))) ORDER BY ((vt0.c1) NOT NULL) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ((json_insert(((rt0.c3)IS(rt0.c3)), CAST(rt0.c3 AS INTEGER), ((rt0.c5)<>(rt0.c4)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON ((((rt0.c0)|(vt0.c0))) ISNULL) ORDER BY ((vt0.c1) NOT NULL) COLLATE RTRIM DESC);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ('');
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c3 AS REAL), rt0.c3 COLLATE BINARY)) ORDER BY ((((rt0.c4)-(rt0.c4)))IS NOT(((rt0.c3)/(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt0.c3 AS REAL), rt0.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)-(rt0.c4)))IS NOT(((rt0.c3)/(rt0.c4))))  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c3 AS REAL), rt0.c3 COLLATE BINARY)) ORDER BY ((((rt0.c4)-(rt0.c4)))IS NOT(((rt0.c3)/(rt0.c4))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT CAST(rt0.c3 AS REAL), rt0.c3 COLLATE BINARY)) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c4)-(rt0.c4)))IS NOT(((rt0.c3)/(rt0.c4))))  NULLS LAST);
SELECT * FROM rt0 WHERE (TRIM(DISTINCT CAST(rt0.c3 AS REAL), rt0.c3 COLLATE BINARY)) ORDER BY ((((rt0.c4)-(rt0.c4)))IS NOT(((rt0.c3)/(rt0.c4))))  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0 WHERE (-1.42344691E9) ORDER BY ((((CAST(vt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY)))OR(CAST(rt0.c5 AS TEXT))) ASC  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1.42344691E9) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CAST(vt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY)))OR(CAST(rt0.c5 AS TEXT))) ASC  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-1.42344691E9) ORDER BY ((((CAST(vt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY)))OR(CAST(rt0.c5 AS TEXT))) ASC  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-1.42344691E9) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((CAST(vt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY)))OR(CAST(rt0.c5 AS TEXT))) ASC  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt0, vt0 WHERE (-1.42344691E9) ORDER BY ((((CAST(vt0.c1 AS REAL))AND(rt0.c2 COLLATE BINARY)))OR(CAST(rt0.c5 AS TEXT))) ASC  NULLS LAST, CAST(rt0.c2 AS TEXT) COLLATE BINARY DESC  NULLS FIRST;
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4)=(-4.70045016E8)) IN ())) ORDER BY ((rt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c4)==(-4.70045016E8)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 IN ()) IN ()));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4)=(-4.70045016E8)) IN ())) ORDER BY ((rt0.c1 IN ()) IN ());
SELECT SUM(count) FROM (SELECT (((((rt0.c4)==(-4.70045016E8)) IN ())) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((rt0.c1 IN ()) IN ()));
SELECT * FROM vt0, rt0 WHERE ((((rt0.c4)=(-4.70045016E8)) IN ())) ORDER BY ((rt0.c1 IN ()) IN ());
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5) NOTNULL))%(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOTNULL))%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5) NOTNULL))%(CAST(rt0.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c5) NOTNULL))%(CAST(rt0.c0 AS INTEGER)))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c5) NOTNULL))%(CAST(rt0.c0 AS INTEGER))));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c4 END)IS(rt0.c2 COLLATE NOCASE)) WHERE ((+ (((((((((rt0.c1)AND(vt0.c0)))OR(NULL)))AND(rt0.c3)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c1)AND(vt0.c0)))OR(NULL)))AND(rt0.c3)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c4 END)IS(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c4 END)IS(rt0.c2 COLLATE NOCASE)) WHERE ((+ (((((((((rt0.c1)AND(vt0.c0)))OR(NULL)))AND(rt0.c3)))OR(rt0.c5)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((rt0.c1)AND(vt0.c0)))OR(NULL)))AND(rt0.c3)))OR(rt0.c5))))) IS TRUE)  as count FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c4 END)IS(rt0.c2 COLLATE NOCASE)));
SELECT ALL * FROM rt0 INNER JOIN vt0 ON ((CASE WHEN vt0.c1 THEN rt0.c4 ELSE rt0.c4 END)IS(rt0.c2 COLLATE NOCASE)) WHERE ((+ (((((((((rt0.c1)AND(vt0.c0)))OR(NULL)))AND(rt0.c3)))OR(rt0.c5)))));
SELECT * FROM rt0 WHERE (((((0.5618912426954481 IN ())))<=(((((rt0.c2))=((rt0.c5)))))));
SELECT SUM(count) FROM (SELECT ((((((0.5618912426954481 IN ())))<=(((((rt0.c2))=((rt0.c5))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.5618912426954481 IN ())))<=(((((rt0.c2))=((rt0.c5)))))));
SELECT SUM(count) FROM (SELECT ((((((0.5618912426954481 IN ())))<=(((((rt0.c2))=((rt0.c5))))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (((((0.5618912426954481 IN ())))<=(((((rt0.c2))=((rt0.c5)))))));
