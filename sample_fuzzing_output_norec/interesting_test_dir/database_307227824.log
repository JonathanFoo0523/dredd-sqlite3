-- Time: 2024/06/08 20:56:16
-- Database: database24
-- Database version: 3.40.0
-- seed value: 307227824
PRAGMA cache_size = 50000; -- 9ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB , c1 INTEGER UNIQUE ON CONFLICT IGNORE CHECK ( (NOT (((c2) IS TRUE)))) PRIMARY KEY ASC NOT NULL , c2 INTEGER ) WITHOUT ROWID; -- 1ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT (ABS(DISTINCT t0.c0) IN (((t0.c2)<<(0.29095089195278123)))) FROM t0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) IS TRUE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=585985635 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1131501106 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.747344833887016; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'562f' COLLATE BINARY)AND((((NULL)) NOT BETWEEN ((NULL)) AND ((0.6890207785995729))))))OR(CAST(1131501106 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((-1011666675)AND(NULL)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.34457813663389014)=(x'742b')) IN (NULL COLLATE NOCASE, (- ('WmkL')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=585985635'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((('?jo|V')%(''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('pqu嘲o.')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE RTRIM AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR('')))AND(x'')))GLOB((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1131501106 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((RTRIM(NULL))OR('EB2p\rK' COLLATE NOCASE)))AND((('') NOT BETWEEN (NULL) AND (-366353980)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('944998403' IN ()))%((+ ('?R&.Og,')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('1073835721')))AND(0.9382492411701993)))AND('145833392')))AND(NULL))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1024933127 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT (((('-566379034')OR(NULL)))AND(0.34457813663389014))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1045277856', '1710206354', 'e0?}Lb5'))>((x'', 0.15676892812439358, 0.9742751227462298)))) BETWEEN ((- (NULL))) AND (((x'') NOTNULL))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-1045277856'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1192548738'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ ('{Ij5⫦?0tP')) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1710206354 sz=488087701 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-0.0') NOT BETWEEN ('-254362361') AND (x''))))==(('1106410367'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((json_object(0xffffffff8d90274a, -254362361), (((''))>((x''))), (((1073835721)) NOT BETWEEN ((NULL)) AND (('-720491802')))))>((((x'') NOT BETWEEN ('') AND ('_踇')), LIKELY('Hr#%'), (NOT ('h'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(LTRIM(NULL) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1553488039') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('')<(x'600b')) COLLATE RTRIM; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-1549615108 -2037989912 sz=585985635 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1669528101 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(x'' AS NUMERIC))OR(CAST(NULL AS NUMERIC))))AND((('') IS FALSE))))OR(CAST(NULL AS BLOB))))AND('cQ' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '488087701 sz=1573761115 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-72976520'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1384387824 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 -254362361 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-626989242 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5182463842058033) ISNULL))<<(TYPEOF(DISTINCT 0.45293079476579967))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.8552106635082098)<=(1073835721)) THEN (x'' IN ('1710206354')) WHEN x'' COLLATE NOCASE THEN CASE NULL  WHEN NULL THEN NULL WHEN '-2037989912' THEN 'yx8CN' WHEN 0x4a647f7b THEN x'' ELSE '944998403' END WHEN (('{IJ5⫦?0TP')|(0.9382492411701993)) THEN ((NULL)&('-566379034')) WHEN CASE 'nowm?n\r'  WHEN '-1337663639' THEN NULL END THEN CAST('j<뗻C㐙jM' AS NUMERIC) WHEN (('') NOT BETWEEN (0.5498874697553312) AND ('1710206354')) THEN ((0xdf8c02e) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-524413033 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((NULL)AND(x'1996')))OR(NULL)))OR(0.8688477678802491)))OR(NULL)))AND(NULL)))OR('-1337663639'))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ ('nowm?n\r'))  WHEN x'' THEN (('-483346949')>=(x'')) WHEN (NULL IN (0.3407831629676208)) THEN ((x'')GLOB('')) WHEN CASE '	r\9]*s\r'  WHEN x'' THEN x'cfdd' END THEN (NULL IN ('n]Yt', NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-782732014 unordered'); -- 5ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2037989912 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-974351022 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-720491802 1248100219 sz=-1994739433'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((ROUND(x'', -466935238)) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-72976520')&('pIJm4릏K')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-396363275'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 sz=-2037989912 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1785127765 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=119775266 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-2115586098 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1549615108 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1073835721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 -1228521394 sz=-317241928 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '119775266 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1748386122 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(0.3069208900346969 COLLATE BINARY, (('1000432270') ISNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.9361338427703966; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)AND('')))OR('')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER((NOT (0.12146960933469009))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 4 sz=-1423967021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1508446848 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=75856254 unordered'); -- 3ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (('')&(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL)IS(0Xffffffffec874200)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-282131111 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('359621183' COLLATE BINARY)OR(json_extract(0.9092060116428733, 0x764d06e6))))AND((NOT ('d4')))))OR(0.8820659956311281 COLLATE RTRIM)))OR(((x'')&(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1522690301 sz=-686275506'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-159014508'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN (NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=253981345 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('1248100219')AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1390706039'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=-466935238 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '6 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1384387824')/(716045537)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')/('#^'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '1106410367 sz=1715615073 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=323027724 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(0.29095089195278123) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.4573951326749002) ISNULL) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-366353980 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('') AND (x''))) NOT BETWEEN ((NULL IN ())) AND (CASE WHEN NULL THEN -4.83346949E8 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '-2125155208'  WHEN '-1994739433' THEN '-1975492705' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09380195136258307, 0.747344833887016, -1022303804)) BETWEEN ((((x'54049ac7') BETWEEN (x'') AND (-7.297652E7)), 2.53981345E8 COLLATE RTRIM, ((NULL)LIKE('1762251549')))) AND ((CAST(0.5448859421120869 AS NUMERIC), (NULL IN ()), load_extension('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1045277856 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2125155208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 2 sz=-761572881'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT SUBSTR(NULL, x'bb00'), ((0.04491886277553614)IS('774575270'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '4 0 sz=1443331630 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-483346949 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 sz=-303598609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-764175609 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL) BETWEEN (-1662488317) AND ('-900678884')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=624983499 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-907831389 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('{1嘲bZ孬Bnc')OR('')))<=(((((-508278809)AND(x'6b92')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1901809319'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('*\n')|('8vY5~kC.c')))&((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT NULL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-251036436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1384387824 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 660377090 sz=-1748386122'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=164543289 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOTNULL))<<(CASE ''  WHEN -1470094467 THEN x'3510' WHEN 0.23947148925991757 THEN '' WHEN 0.4573951326749002 THEN 0.39959466094892504 ELSE '0.39959466094892504' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(NULL)))*(((((((((0.37427332364064725)OR('234405934')))OR(NULL)))AND('')))OR(-1470094467)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('.x' AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1962577244 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('-704151640')AND(x'')))OR(NULL)))OR((((0x156f623f)) NOT BETWEEN ((x'')) AND ((NULL))))))OR(CAST('1854038111' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-89530436 0 sz=-303598609 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TRIM('0.12146960933469009', x'') THEN (('xuB4>i') NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)==(NULL))) NOT BETWEEN (CASE NULL  WHEN NULL THEN 0.12146960933469009 ELSE NULL END) AND ((('585985635')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 0 sz=-2009055741 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1 sz=768612369 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LENGTH(7.7457527E8)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1508446848 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=234405934 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '713952410 sz=-45797190 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('249171471' COLLATE RTRIM AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=479023208'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1426676902 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1171247745 sz=-508278809 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-468707872 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKE(CASE 0.29095089195278123  WHEN NULL THEN '&\' ELSE 0.09089831888498379 END, '501918073'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1991340971 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((((((('')OR(NULL)))OR('} ')))AND(-1669528101)))OR(x'9b1c')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=600409947 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1353463997 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8319735571785939)&(NULL)))>=((0.3407831629676208 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('0.23947148925991757' IN ('0.3069208900346969' COLLATE RTRIM)); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '1508446848 sz=-782732014 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LTRIM(0.014322659868515997, '')) BETWEEN (CASE NULL  WHEN 0.6691554182033234 THEN x'' ELSE x'9b8f' END) AND (LOWER(DISTINCT '-254362361'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2009055741'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 1916556914 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-880269249 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '䧙{v'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.8820659956311281 AS TEXT))OR((((('234405934')OR('-1337663639')))AND(-1994739433)))))OR(((NULL) BETWEEN (x'') AND ('1245317439')))))OR(-1192548738 COLLATE BINARY)))AND(((0.3072239799850157)<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ABS(-251036436)  WHEN (NULL IN ()) THEN ((NULL)<<(x'c828')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((1.916556914E9)OR(NULL)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1939166824 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-419062961 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('') BETWEEN (0.16317877976025608) AND (x'0113')), (('펑Gh/')AND(x'9105')), CAST(x'' AS REAL)))!=(((- (1413495411)), ((NULL)>=(NULL)), x'' COLLATE BINARY))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ('Y')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 sz=-910226498 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '808460857 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('624983499' COLLATE BINARY)/(('1106410367' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-1423967021'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS REAL))OR(((x'') ISNULL))))AND(((('(\nyf'))<(('	{>榴yt7i'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 0 sz=1553488039 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '983084196 sz=1529987682 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_SOURCE_ID(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (0.5429818733825057)) THEN '0.37427332364064725' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKE(0.41096713418233743, '-1131015271', '0')) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 sz=29093717 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=284192753 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND('-1470094467')))AND(0xffffffff894e8c55))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=894294165 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 sz=1960333654 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 6ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1441778435 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1228521394 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-873923128 2058804604 sz=1459376003 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT('-1961661349')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1959790256 sz=-1631941557 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 2 sz=585985635 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((((((NULL)AND(NULL)))AND('')))AND('')))AND(0x31ffc8a7))  WHEN (('ET\rh蒤')LIKE('')) THEN (('R偺r/') BETWEEN (0.2550442994764801) AND (NULL)) WHEN 0.949771231126439 COLLATE NOCASE THEN '774575270' COLLATE NOCASE WHEN CAST(NULL AS INTEGER) THEN (((0.594064545101301))<=((NULL))) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT LOWER(DISTINCT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL IN ()) IN (CAST(0.1795241672582969 AS BLOB), (0.46673111285992763 IN ('-1748386122')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 1433469815 -2091517621 sz=-511981691'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (~ (NULL))  WHEN CASE WHEN 0.4790894254972812 THEN x'' END THEN CAST(x'' AS BLOB) ELSE '-317241928' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-233523380') NOTNULL)) NOT BETWEEN (NULL) AND (((0X66423561) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL IN ())))<((0.2768656937591263 COLLATE BINARY))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, '1e500'))-((('0.45293079476579967') BETWEEN (0.9382492411701993) AND (0.39959466094892504)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-468707872 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '2 0 sz=-357343906 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '1818836136 sz=1229815436 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '567923389 2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))/(CAST('606183096' AS TEXT))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1384387824'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=234405934 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL COLLATE NOCASE)AND(('YwL\' IN ()))))AND((((0.07402858072399665))=(('-1020881998'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.8312770876677074) BETWEEN (0.43327897961250417) AND (0xffffffff92091238)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('1073835721' AS INTEGER))AND((('600409947') NOT BETWEEN ('75856254') AND (x'')))))AND(((0.6976436141224297) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1182869228'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1684745105'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 -1546042066 sz=1130401461 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=653232648'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-524413033 sz=-1162537954 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1508446848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1236251090 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (~ (x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-282131111 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-179448283 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-72976520 119775266 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((x'f0d3') IS FALSE)  WHEN (('h|ei&T')<>('')) THEN CAST(NULL AS TEXT) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN (NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1831970463'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('&Nﻋ{J', 0.29095089195278123, 0.45745419712906776)) NOT BETWEEN ((NULL, NULL, x'5140')) AND ((x'fd86', NULL, NULL))) IN (((NULL) BETWEEN (NULL) AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((((-1.7976931348623157E308) NOT BETWEEN (x'') AND ('◇5')))) AND ((CASE WHEN '1501160552' THEN x'' WHEN 0.294146163560536 THEN 0xffffffffde3dbde6 WHEN '1131501106' THEN 0x2aadfce1 ELSE 0xf2b0778 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('', 0Xffffffffed1745b8, x'22a6'))<=((NULL, NULL, 0.8821259221014596)))) BETWEEN (((0.9482048926351968)||(1517513362))) AND (((1672158232)/(0.4710644748862346)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '333865396 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB)) BETWEEN ((('') NOT BETWEEN (0.2488997382341941) AND (NULL))) AND ((((('-1901809319')AND(0.594064545101301)))OR(0X38538803)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1492391688 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(0.14534103672009757 AS INTEGER) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 -880269249'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2047745892 2032907641 sz=2092350067 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('Z,*ZT\nr2' IN ()))==((('')>>(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -72976520 sz=-1183979878 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1342177883 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '585985635 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-513265135 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('0.8312770876677074')OR(x'0ca9'))) BETWEEN ('0.8820659956311281' COLLATE BINARY) AND (LIKE('', x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL COLLATE NOCASE AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '4 sz=1762251549 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'6be62844', 0.20604343581361184, '')) NOT BETWEEN ((NULL, 0xffffffffb40e8fd5, 1548989978)) AND ((NULL, 0.8875470723123227, '2070882518'))))AND('0.39959466094892504')))OR(json('944998403'))))AND(((NULL)AND(0.10461159382624707)))))OR((('')IS NOT('855010716')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'e51e' AS NUMERIC) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff929aa11c; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '769964166'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-1760961083 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN NULL THEN '-1761900378' WHEN x'' THEN NULL WHEN x'' THEN x'' WHEN '-1' THEN NULL WHEN x'' THEN 0.16317877976025608 ELSE '-1022303804' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-2084799474 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (1.44333163E9)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-872070737'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1710206354 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((x'' COLLATE BINARY)) AND (((0.0026229349463410268 IN ('-1718135268'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2037593617'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-626989242 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1973176193'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-764175609'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((NULL)OR('-118375499')))AND(-4277845)))OR('164543289')))AND(0.21967010754547822)), NULLIF(1.573761115E9, 'pQ2'), ((x'9e1a6eef') IS TRUE)))>(((((NULL))<((x'acd5'))), UPPER(x''), (((NULL)) BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_array_length(x'', NULL))GLOB((0.4631648489732225 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1936174096 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'668a')-((- (6.24983499E8)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'1de5') IS TRUE))&(NULLIF(2.49171471E8, 'n]Yt'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1139765873 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5912494292906002; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '1854038111 sz=-957059707 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1192941253 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('iJez甐~筿W>') BETWEEN ('') AND (x'9330dbc3'))) NOT BETWEEN ((('rG') ISNULL)) AND ((((NULL, x'', NULL)) BETWEEN (('-1590264790', NULL, NULL)) AND ((NULL, 0.16317877976025608, 0.6976436141224297))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST('&\' AS TEXT) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)OR(x'')))AND(-362043115)))==(CASE WHEN NULL THEN ']z' ELSE x'c708' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((NULL)AND(NULL)))AND(0.956479622295546)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1899600847 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((0.8552106635082098)>=(((x'')/(0.6504229163009547)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1919932598 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE RTRIM)OR((NOT (0Xffffffffbbcb7845)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-712871400 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-907831389 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((('-466935238')) NOT BETWEEN ((NULL)) AND ((-1.353463997E9))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1799909564 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=808556982'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-1919932598'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN ((- (0.25863969043389523))) AND ((x'2a45' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-2115586098 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((NULL) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 sz=-1385662834 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1090969191 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=115052272'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 sz=-1057595271 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('0.8319735571785939')OR(-8.9530436E7)))OR(0.347250173899339))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((((0.6691554182033234)AND(NULL)))AND('㶰m')))OR('1e500')))AND(NULL)))OR('866945812')))OR(TRIM(-8440172, '-294594233'))))OR((+ (0.46673111285992763)))))OR(((-1e500) NOT BETWEEN (0.5193205271624654) AND (0xffffffffc2e8c2f9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 -159014508 sz=-588277119 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=397295848 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')AND('rg')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELIHOOD('2018314320', 0.7823421518237366)) NOT BETWEEN (((NULL)<(0.09768070618095326))) AND (((0.7308353289474058) BETWEEN (x'') AND ('1771330412')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1762251549'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-196636769 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-2.51036436E8))<=((x'')))) NOT BETWEEN ((('v䧙') BETWEEN (-2.009055741E9) AND (x''))) AND (((0.8120416670265609) BETWEEN (0.12057801171380877) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-366353980 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-974351022'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-1975492705 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=796234514 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=327786505 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-975287900 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1369467072 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '362797438 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '4 sz=1553488039'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1403958920'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1596167369 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1077451595 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1771330412'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) BETWEEN ((-4.66935238E8 IN ())) AND (CAST(0.38259978550881435 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1878421946') IS FALSE)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=345889323 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-2003818013')) BETWEEN ((-4.579719E7)) AND ((((((x'9c7c')AND('774575270')))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1573761115 sz=-1875296188'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1499071789 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)GLOB('nowm?n\r')))>>(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1045277856'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-159014508 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1668996992'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 0 sz=-1975492705 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1670172110 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-954884929 sz=-1901809319'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-1259720754 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('249171471')IS NOT(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-501664944 sz=-773027297 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-159014508 sz=219727043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1984759526 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1797655308 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffbbc5697d)*('-1228521394')))GLOB((+ ('''h')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1073835721 1872469364 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST('1710206354' AS TEXT) IN (CASE WHEN '75856254' THEN 0.04032249881822714 ELSE '-880269249' END, CASE 0X7717afbe  WHEN NULL THEN NULL ELSE '' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '573987036'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-566379034'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '592545926 -11609427 sz=323027724'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN 0X56077e2e THEN 0.8821259221014596 ELSE '1073835721' END)AND((x'c70e' IN ()))))OR(CASE WHEN 0.8065640708594268 THEN x'' ELSE NULL END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE NULL  WHEN NULL THEN 0.14972010537588842 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('(b')AND(NULL)))GLOB(0Xffffffff8c96e330)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1344213114 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(json_array(x'', x'') AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=253981345 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=944998403 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((CASE x''  WHEN NULL THEN NULL ELSE x'66204cd7' END)) AND ((CASE WHEN NULL THEN NULL ELSE '1848506669' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((0.6969824011144334) ISNULL) THEN ((0.7104601251716623)+('-300484276')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '716045537 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-898130678')>=(0.64970357884846))  WHEN (('2055650863')|('242065471')) THEN '1615919032' ELSE ((((x'fa80')OR(0.39642844160681323)))OR(0.949771231126439)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((~ (NULL))))<((((x'ba87')&(0.05923183189317738))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=458335960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 0 1508446848 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2046146769 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-900678884 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('0.09380195136258307') ISNULL) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (0.2768656937591263)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=-2071060086 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE NOCASE)OR(ABS(1.553488039E9))))OR('174079213' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1228521394 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=-1504833025'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((2053553275)AND('')))OR(1.106410367E9)))AND(NULL)))OR('wmkl')))OR('75856254')))AND(-1465979293)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)<>(NULL)) THEN (('-483346949')GLOB('S镒')) ELSE UPPER(0.5808755962256152) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '2 sz=1836974499 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-747329755 sz=1000432270'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -1061706610 sz=-366353980 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1011666675'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-483346949 0 sz=-1286908596 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5684186565268845; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 -894681279 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-1164685927 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=944998403 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-233564697'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=791415500'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=1370873823'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ (x'')) THEN ('359621183' IN ()) WHEN (NOT (0.6395489358624612)) THEN json_patch('Ku', x'b5e2') WHEN NULL THEN ((0.9358969458646318)-(x'c22b3eac')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1708694336 sz=-1549615108 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=404769179 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ABS(NULL)  WHEN CASE WHEN x'90fd' THEN x'' END THEN ((0.914260471486212)<(NULL)) ELSE ((NULL) BETWEEN (0.6834138265366052) AND ('')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '894903729 sz=921336082'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1650860058 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '0 0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.9358969458646318 THEN '' WHEN '56030700' THEN '-761572881' WHEN 0.18234748920952404 THEN NULL END)OR((NOT (0X1deaa979)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1944417859 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=2068425701 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-1098081958 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(NULL, NULL)) BETWEEN (CASE WHEN NULL THEN '' WHEN '' THEN 0.010589917860821307 WHEN x'8d62e01d' THEN 0.5365528571746288 WHEN NULL THEN x'e80b' WHEN NULL THEN x'' ELSE NULL END) AND (json_extract(NULL, NULL, x'2a8d', '488087701'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('-833990838')>>('')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('0.9358969458646318')GLOB(NULL)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-392218991 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=181510638 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1646442147 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1543936611 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN ((0.5914497954377848)*(NULL)) THEN (((('-254362361')OR(x'736f')))OR('p}孬t⮜hq䖸?')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-483346949 sz=759053470 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULLIF(DISTINCT '0.41096713418233743', NULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-633591679 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1854038111 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('369851436' COLLATE RTRIM)<=(((x'') NOT BETWEEN (244259309) AND ('1106410367')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1762251549'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('\X>lU}M', NULL, '')) BETWEEN ((x'', '-1198056108', NULL)) AND ((x'94da', NULL, -632785171))))<<(CAST(x'' AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-1043394386 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'90e9' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.4573951326749002 END)%(((x'') NOT BETWEEN (0.1959079869695982) AND (0xfffffffff685a194)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1623895970'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-974351022 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=488087701 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.4631648489732225))==(('1248100219'))))LIKE('uW' COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('PR7?[') IS TRUE))AND(('-1144685665' IN ()))))AND((('{A?nJ2ꍚG2')/(x'a014')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1526017826 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((1977548038) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-2092401128 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LOWER(0.34330647814150905)  WHEN ((NULL) BETWEEN (x'') AND ('Lq')) THEN (((((((('-482630353')OR(x'')))AND(x'')))OR(NULL)))AND(0.8974173793086871)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=704088591 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (x'86c2'))) NOT BETWEEN (TYPEOF('-1423967021')) AND (x'9562' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN x'' THEN 'b&lsC''7' WHEN NULL THEN 0Xffffffffca50bb1c WHEN x'e6aa' THEN '-907831389' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((0.19853843455642883 IN ()))OR(CAST(x'' AS BLOB))))AND((('-1567057314') NOTNULL))))AND(((('')) NOT BETWEEN ((NULL)) AND ((x''))))))AND(((-1.549615108E9)&('0.8312770876677074')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))%(((0.13157674294190713)&(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1192548738 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=420526479'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('667592486' IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '1565206840 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=277581459 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode(UPPER(DISTINCT 0.5891149818701424), ((NULL) BETWEEN ('#^') AND ('◇5'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=290745464 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-966387240'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '43336354 sz=-490490321 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '2 0 sz=-1662488317 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('b&lsc''7')OR(0.4462144598229485)))<>((((0.7884721478184996, x'3380', NULL))>((0.8795956533192165, 0.6331053699665775, '188180182'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-764175609 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('')OR(-317241928)))AND(NULL)))AND(NULL)))OR(x'2768')))||(x'865c' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '1273232436 sz=323027724'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1045277856 -1665477368 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0 sz=1771330412 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.4996463912194069)&(((((-1.662488317E9)OR(0.30433302997580625)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2001106393 sz=-289474931 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE GLOB('1396698210', 'Lq')  WHEN (('') IS TRUE) THEN CAST(x'8ee0' AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((TRIM(0.7914869628524462, ''))AND((NOT ('421692178')))))AND(CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=141514104 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((highlight('tMi{iuh', '', '-686275506', NULL))OR(LIKELY(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=243201979 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1423967021 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-122459070 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-640971126 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1854101125'  WHEN '1700670933' THEN x'' WHEN '' THEN NULL WHEN x'' THEN 'f7aWq	' END COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '-1076124110 sz=709460648 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.6395489358624612)IS('0.8875470723123227'))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '253981345 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT CAST(NULL AS BLOB)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1017956844 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1596208600'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<(NULL)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '1510197988' THEN x'' ELSE 0.5298488834667803 END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-1856861911'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=255351344'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-445109318'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-512689970 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '1421468621 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=385168409 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE '-907831389'  WHEN x'' THEN '1916556914' END  WHEN ('1000432270' IN ()) THEN (('r&''Z&S_^')|(0.8681609884892273)) WHEN ((((((((6.6037709E8)OR('9c3492Thq')))OR(0.6610564168087851)))OR(x'')))OR(0.2184232324625267)) THEN ((((NULL)AND(x'')))OR(0.8047010220537139)) WHEN DATE('', NULL, 0.38309877169670414) THEN ((NULL)<<(NULL)) ELSE ((x'') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-548091820 sz=-1024933127 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN '0.3407831629676208' THEN x'' WHEN 'Hr#%' THEN '''h' WHEN '-811774732' THEN 0X1b2bdc6 END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-514147302 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1762251549 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('357087739')<<(-4.579719E7)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-1490382596 sz=-1029644136 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '359621183 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '768612369 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 428027012 sz=660377090 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-396084554 sz=-782732014 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-222926213') NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=1530640001'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('')||(NULL)) THEN (- ('')) ELSE CASE x''  WHEN '323027724' THEN '-900678884' WHEN 0.5029260664198371 THEN x'' WHEN '34063265' THEN NULL END END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('424205082')<>(x'61c5')) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=1175072049 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=-1457396624'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((0.22136349501401542)AND('P^/ss琏,')), ('XM✓r	^p퐼' IN ('BO[I', '1962577244'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '0 sz=1435085526 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF((NOT (NULL)), 0.956479622295546); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('{1嘲BZ孬BNC')AND(-1.045277856E9)))AND(0.17500481073062624)) IN (((((((((((((((((0X4fa75288)AND(x'')))AND('0.12146960933469009')))OR(-1990914917)))OR(0.35811433339661003)))AND('?R&.Og,')))AND(x'6fe0')))OR('Z0n?s0젫\r좣')))OR(0Xffffffffea29e1c4)), ((x'') NOT BETWEEN (NULL) AND (x'')), (((x'6744')) NOT BETWEEN ((0.8795956533192165)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('')<('7InJ{m')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1019992889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (('')&(0xffffffff9da036cb)), 0.34328968560070217 COLLATE NOCASE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 sz=-10128254 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-974351022 sz=-671132444 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=479023208 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '1359732065 0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('7V') IS FALSE))) AND ((((NULL)/(x''))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'c284' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.08635763745467229)) NOT BETWEEN ((x'')) AND ((-7.82732014E8)))) BETWEEN (JULIANDAY(NULL, 0.010212777379396965, 1474608093, 0Xfffffffffc1a8e07, '-1037656868')) AND (((0.5429818733825057) BETWEEN (x'aed840e2') AND (0.9574709102454338)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-483346949 -1994739433 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=2107809248'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('')*('占ytj_')))>((((0.7044293084396748))>=(('cQ'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-2146033641 sz=358004027 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '-329636839 sz=-876468508'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'072f')OR(0.16659804748185514)) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1749150276 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-704151640 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE WHEN 'qX' THEN NULL ELSE '72' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=1384387824'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (NULL))  WHEN CAST(x'' AS REAL) THEN NULL COLLATE RTRIM WHEN NULL THEN CAST(0x74fa8d5c AS INTEGER) WHEN CAST('' AS NUMERIC) THEN ((((((((NULL)OR(0.6976436141224297)))OR(-9.00678884E8)))OR(0.41998378247130175)))AND('uW')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-1390706039 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-1748386122'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '1495450887'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=1997251294 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=839639370 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=-782732014 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '-900678884 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'd0d6' IN ()))OR((- (-2.115586098E9)))))OR('\n')))AND((((('')AND('gk')))OR(NULL)))))AND((+ ('326202468')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, '-1423967021', 0.9142888521084723)) NOT BETWEEN (('', 0.4573951326749002, 'BO[I')) AND ((x'f5fe', -1.662488317E9, NULL))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')AND(0.6937274596460672)))AND(x''))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('h|ei&T')=(0.6554946503876496)))LIKE(x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((((((0.7625278803423151)AND(x'')))OR('1710206354')))OR('hz,G')))AND(x'')) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-468707872 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=983561124'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', '-202750267 0 sz=468898786 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('䧙{v' IN ()) THEN CASE WHEN x'b590' THEN -1.7976931348623157E308 WHEN '0skY&Kv' THEN x'' WHEN x'' THEN 'w7' END WHEN ((0.5754642894508216) NOT NULL) THEN (('-741073438')>>(x'')) WHEN ((0xdf8c02e)IS(NULL)) THEN ((x'') NOT BETWEEN (0.8795956533192165) AND (0.7752435684120668)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', '0 sz=780085432'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 -42464109 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(COALESCE(0.4245648114445959, -1022667479, 0.8023349469327824, -303598609) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '624983499 sz=1565244482'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', '0 sz=-830209401'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL)))+((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '104501061 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS INTEGER)) IS FALSE); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0xffffffffd47f730b)<>(-2.54362361E8)))-(((0.17085602484078755) ISNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-2037989912'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('713952410' IN ()) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '2 sz=1229200892 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_GET(CAST('0.347250173899339' AS NUMERIC)); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' sz=232460168'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')OR(x'8354')))OR(CASE WHEN 0.646663086603467 THEN x'7a57' END)))AND(((-1894446711)IS(0.08368893226165064)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE NULL  WHEN NULL THEN x'4f08' WHEN 0.7091811094611432 THEN 0Xffffffff8217ca1f WHEN 'Q%Sd' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.59014508E8)>>(x''))) NOT BETWEEN (((((0.6002536304859961)AND('-빉 䮨)%K')))AND('|m)墧'))) AND (((1.248100219E9)/(x'4d46')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=600409947 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '0.5891149818701424' THEN '' WHEN NULL THEN 1825880744 WHEN NULL THEN NULL END)%(0.30433302997580625 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=444392676 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-1522690301 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '4'  WHEN '' THEN x'' WHEN NULL THEN NULL WHEN 'Q%Sd' THEN 0.5879176776598494 END)AND(((x'')IS NOT(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'' IN ()))AND((((0.1959079869695982))<((0.9341016447856041))))))OR('-2115586098')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('411664402' IN (-2.125155208E9, NULL)))AND(CAST(x'' AS REAL))))OR(CASE x'746c'  WHEN '8쇫' THEN 1081427095 ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=-103511805 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=1871260405 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (NULL) AND ('774575270')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 't0', ' sz=-146310519 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8708276993781225)AND(NULL)))AND(x'')) IN ((- ('')), ((x'') NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'092e')<=((x'' IN (0.21967010754547822, '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' sz=-71534373 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' sz=1553488039 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', ' sz=16031111 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=-720491802 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '-1239846543 1851846512 sz=883059463'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=624983499'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TOTAL_CHANGES(); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR FAIL INTO t0(c1) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (' 릏u5rwcH(', 'Y)'); -- 0ms;
PRAGMA temp.default_cache_size = -89530436; -- 0ms;
ANALYZE main; -- 0ms;
DELETE FROM t0 WHERE NULL; -- 0ms;
UPDATE OR IGNORE t0 SET c1=x'' WHERE CASE (t0.c0 IN ())  WHEN ((t0.c2) NOT BETWEEN (t0.c2) AND (t0.c0)) THEN ((t0.c1)|(t0.c1)) ELSE CAST(t0.c0 AS TEXT) END; -- 0ms;
INSERT OR ABORT INTO t0(c0) VALUES (249171471), (x''), (NULL); -- 0ms;
INSERT OR FAIL INTO t0(c0, c2, c1) VALUES (0.3812251008294474, x'', x'52c5'), (0.6599155799619849, '-704151640', 0Xffffffffc242aeb2), ('', '-838710484', x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c1) VALUES (x''), ('1R'), (x'dcae'); -- 0ms;
ANALYZE t0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA integrity_check; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c18; -- 0ms;
ALTER TABLE t0 ADD COLUMN c30 INT; -- 1ms;
COMMIT TRANSACTION; -- 9ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.03008164976662908, x''), (NULL, 0.05392224258171596), (-1605381022, NULL), (NULL, NULL), ('', ''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 602343410); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
END; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8736'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -833505973);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7699'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '52810'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX; -- 12ms;
INSERT OR IGNORE INTO t1(c30) VALUES (x''); -- 0ms;
UPDATE OR ROLLBACK t1 SET c1=x''; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-1535547331) WHERE CASE WHEN vt0.c1 COLLATE RTRIM THEN CAST(vt0.c0 AS TEXT) WHEN CAST(vt0.c1 AS NUMERIC) THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c1 IN (vt0.c0)) THEN (vt0.c0 IN (vt0.c1)) END; -- 0ms;
PRAGMA temp.foreign_keys; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
PRAGMA default_cache_size = -1267971686; -- 1ms;
REINDEX; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA temp.automatic_index = false; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.7847354302545289); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1947353446'); -- 0ms;
ANALYZE t0; -- 0ms;
PRAGMA default_cache_size; -- 0ms;
PRAGMA secure_delete = FAST; -- 0ms;
UPDATE t0 SET (c2)=(x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1153478954); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c0, c30) VALUES (x'', '0.949771231126439'), (1.762251549E9, 1086585899), (x'', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x'6938'); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES ('0.014322659868515997', 0.21967010754547822, '1384387824', 0.9702419660492504), ('', NULL, x'36ca', x'6e58'), ('-626989242', '&\', x'7d5e', '-310299326'); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES ('585146365', NULL, x'', '1962577244'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.mmap_size = -96574854306177221; -- 0ms;
UPDATE t0 SET (c0)=(x'7d9a'); -- 0ms;
UPDATE OR IGNORE t0 SET (c30)=('') WHERE (- (((t0.c1)OR(t0.c0)))); -- 0ms;
ALTER TABLE t0 ADD COLUMN c73 BLOB; -- 0ms;
INSERT OR ROLLBACK INTO t0(c2, c1) VALUES (x'9d53', '-1241047815'); -- 0ms;
VACUUM; -- 0ms;
REINDEX; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c2, c1, c30, c0) VALUES (NULL, 0.6850287691258732, NULL, x'00f1'), (NULL, '|Pr59&', 0.4648092692080724, '1111396279'), (x'', 5.01918073E8, 0.9651279579571957, '-551973863'), (NULL, '', x'', 0.6389438389514718), (x'', 1247389062, 0.777696346487981, '{a?nj2ꍚg2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'v0', '-770773908 unordered'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES ('-2115586098'), ('-1919932598'), (1.44333163E9), (NULL), ('-빉 䮨)%K'); -- 13ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO t0(c73, c1) VALUES ('-1991340971', x'c8d4'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.default_cache_size = -673902762; -- 0ms;
ANALYZE v0; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP VIEW v0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 12ms;
INSERT OR FAIL INTO vt0 VALUES (0Xffffffff9b35e1cf, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '14189'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.journal_size_limit = 5372189671044109370; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c73)<(t0.c1)))))) ORDER BY CAST(TRIM(DISTINCT t0.c73, vt0.c0) AS TEXT)  NULLS FIRST, (((vt0.c0 IN (vt0.c1, t0.c30)))IS(((vt0.c1) NOT BETWEEN (t0.c30) AND (vt0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c1) AND (NULL)))IS NOT(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c73)<(t0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(TRIM(DISTINCT t0.c73, vt0.c0) AS TEXT)  NULLS FIRST, (((vt0.c0 IN (vt0.c1, t0.c30)))IS(((vt0.c1) NOT BETWEEN (t0.c30) AND (vt0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c1) AND (NULL)))IS NOT(x'')) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c73)<(t0.c1)))))) ORDER BY CAST(TRIM(DISTINCT t0.c73, vt0.c0) AS TEXT)  NULLS FIRST, (((vt0.c0 IN (vt0.c1, t0.c30)))IS(((vt0.c1) NOT BETWEEN (t0.c30) AND (vt0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c1) AND (NULL)))IS NOT(x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c73)<(t0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(TRIM(DISTINCT t0.c73, vt0.c0) AS TEXT)  NULLS FIRST, (((vt0.c0 IN (vt0.c1, t0.c30)))IS(((vt0.c1) NOT BETWEEN (t0.c30) AND (vt0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c1) AND (NULL)))IS NOT(x'')) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c0)) BETWEEN ((t0.c0)) AND ((((t0.c73)<(t0.c1)))))) ORDER BY CAST(TRIM(DISTINCT t0.c73, vt0.c0) AS TEXT)  NULLS FIRST, (((vt0.c0 IN (vt0.c1, t0.c30)))IS(((vt0.c1) NOT BETWEEN (t0.c30) AND (vt0.c0)))) ASC, ((((t0.c1) BETWEEN (t0.c1) AND (NULL)))IS NOT(x'')) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) IS TRUE))IS NOT(CASE WHEN t0.c73 THEN t0.c30 WHEN vt0.c1 THEN t0.c0 WHEN t0.c73 THEN t0.c1 END)) WHERE ('*K[ob');
SELECT SUM(count) FROM (SELECT ALL (('*K[ob') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) IS TRUE))IS NOT(CASE WHEN t0.c73 THEN t0.c30 WHEN vt0.c1 THEN t0.c0 WHEN t0.c73 THEN t0.c1 END)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) IS TRUE))IS NOT(CASE WHEN t0.c73 THEN t0.c30 WHEN vt0.c1 THEN t0.c0 WHEN t0.c73 THEN t0.c1 END)) WHERE ('*K[ob');
SELECT SUM(count) FROM (SELECT ALL (('*K[ob') IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) IS TRUE))IS NOT(CASE WHEN t0.c73 THEN t0.c30 WHEN vt0.c1 THEN t0.c0 WHEN t0.c73 THEN t0.c1 END)));
SELECT ALL COUNT(*) FROM t0 RIGHT OUTER JOIN vt0 ON ((((t0.c0) IS TRUE))IS NOT(CASE WHEN t0.c73 THEN t0.c30 WHEN vt0.c1 THEN t0.c0 WHEN t0.c73 THEN t0.c1 END)) WHERE ('*K[ob');
SELECT * FROM t0 WHERE ((((t0.c1))>((t0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c1))>((t0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1))>((t0.c1))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((((t0.c1))>((t0.c1))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((t0.c1))>((t0.c1))) COLLATE RTRIM);
SELECT * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (t0.c0))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((NOT (t0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c30 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE))))) ORDER BY (((((+ (t0.c0)))OR(t0.c0)))AND(((((t0.c0)OR(t0.c1)))OR(t0.c30))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c30 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 ORDER BY (((((+ (t0.c0)))OR(t0.c0)))AND(((((t0.c0)OR(t0.c1)))OR(t0.c30)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c30 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE))))) ORDER BY (((((+ (t0.c0)))OR(t0.c0)))AND(((((t0.c0)OR(t0.c1)))OR(t0.c30))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c30 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE))))) IS TRUE)  as count FROM t0 ORDER BY (((((+ (t0.c0)))OR(t0.c0)))AND(((((t0.c0)OR(t0.c1)))OR(t0.c30)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((CASE WHEN t0.c30 THEN t0.c0 ELSE t0.c0 END))>((((t0.c0) IS TRUE))))) ORDER BY (((((+ (t0.c0)))OR(t0.c0)))AND(((((t0.c0)OR(t0.c1)))OR(t0.c30))));
SELECT * FROM vt0, t0 WHERE (((((t0.c2)IS NOT(t0.c73))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS NOT(t0.c73))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)IS NOT(t0.c73))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2)IS NOT(t0.c73))) ISNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2)IS NOT(t0.c73))) ISNULL));
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN ('0.64970357884846') AND (vt0.c1)))OR((((t0.c0))<((vt0.c1))))))AND(t0.c73))) ORDER BY ((((((((t0.c73)AND(vt0.c1)))AND(t0.c30)))OR(t0.c1)))AND(t0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN ('0.64970357884846') AND (vt0.c1)))OR((((t0.c0))<((vt0.c1))))))AND(t0.c73))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((t0.c73)AND(vt0.c1)))AND(t0.c30)))OR(t0.c1)))AND(t0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN ('0.64970357884846') AND (vt0.c1)))OR((((t0.c0))<((vt0.c1))))))AND(t0.c73))) ORDER BY ((((((((t0.c73)AND(vt0.c1)))AND(t0.c30)))OR(t0.c1)))AND(t0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) NOT BETWEEN ('0.64970357884846') AND (vt0.c1)))OR((((t0.c0))<((vt0.c1))))))AND(t0.c73))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((((t0.c73)AND(vt0.c1)))AND(t0.c30)))OR(t0.c1)))AND(t0.c1)) COLLATE NOCASE ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1) NOT BETWEEN ('0.64970357884846') AND (vt0.c1)))OR((((t0.c0))<((vt0.c1))))))AND(t0.c73))) ORDER BY ((((((((t0.c73)AND(vt0.c1)))AND(t0.c30)))OR(t0.c1)))AND(t0.c1)) COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((vt0.c0)>(t0.c30)))) AND ((((vt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((((vt0.c0)>(t0.c30)))) AND ((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((vt0.c0)>(t0.c30)))) AND ((((vt0.c1) NOT NULL)))));
SELECT SUM(count) FROM (SELECT (((((t0.c2)) NOT BETWEEN ((((vt0.c0)>(t0.c30)))) AND ((((vt0.c1) NOT NULL))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((t0.c2)) NOT BETWEEN ((((vt0.c0)>(t0.c30)))) AND ((((vt0.c1) NOT NULL)))));
SELECT * FROM t0 WHERE (t0.c73);
SELECT SUM(count) FROM (SELECT ((t0.c73) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c73);
SELECT SUM(count) FROM (SELECT ((t0.c73) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c73);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c73)OR(t0.c30)))AND(t0.c0))))) ORDER BY ((((((((((NULL)AND(t0.c1)))OR(t0.c1)))AND(0.016011852043156027)))OR(t0.c1)))GLOB((- (t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c73)OR(t0.c30)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((NULL)AND(t0.c1)))OR(t0.c1)))AND(0.016011852043156027)))OR(t0.c1)))GLOB((- (t0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c73)OR(t0.c30)))AND(t0.c0))))) ORDER BY ((((((((((NULL)AND(t0.c1)))OR(t0.c1)))AND(0.016011852043156027)))OR(t0.c1)))GLOB((- (t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ (((((t0.c73)OR(t0.c30)))AND(t0.c0))))) IS TRUE)  as count FROM t0 ORDER BY ((((((((((NULL)AND(t0.c1)))OR(t0.c1)))AND(0.016011852043156027)))OR(t0.c1)))GLOB((- (t0.c2)))) DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((+ (((((t0.c73)OR(t0.c30)))AND(t0.c0))))) ORDER BY ((((((((((NULL)AND(t0.c1)))OR(t0.c1)))AND(0.016011852043156027)))OR(t0.c1)))GLOB((- (t0.c2)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CAST(x'b6c4' AS BLOB), ((vt0.c1)LIKE(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))!=(((+ (vt0.c0)), ((vt0.c0)>=(vt0.c1)), (NOT (vt0.c0)), 0Xeda0e0f, CAST(vt0.c1 AS BLOB))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CAST(x'b6c4' AS BLOB), ((vt0.c1)LIKE(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))!=(((+ (vt0.c0)), ((vt0.c0)>=(vt0.c1)), (NOT (vt0.c0)), 0xeda0e0f, CAST(vt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CAST(x'b6c4' AS BLOB), ((vt0.c1)LIKE(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))!=(((+ (vt0.c0)), ((vt0.c0)>=(vt0.c1)), (NOT (vt0.c0)), 0Xeda0e0f, CAST(vt0.c1 AS BLOB))))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CAST(x'b6c4' AS BLOB), ((vt0.c1)LIKE(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))!=(((+ (vt0.c0)), ((vt0.c0)>=(vt0.c1)), (NOT (vt0.c0)), 0xeda0e0f, CAST(vt0.c1 AS BLOB))))) IS TRUE)  as count FROM vt0 ORDER BY NULL);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)), CAST(x'b6c4' AS BLOB), ((vt0.c1)LIKE(vt0.c1)), CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN NULL WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END, ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))))!=(((+ (vt0.c0)), ((vt0.c0)>=(vt0.c1)), (NOT (vt0.c0)), 0Xeda0e0f, CAST(vt0.c1 AS BLOB))))) ORDER BY NULL;
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.6492049089897605 WHERE ('') ORDER BY ((- (t0.c73)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.6492049089897605 ORDER BY ((- (t0.c73)) IN ()) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.6492049089897605 WHERE ('') ORDER BY ((- (t0.c73)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON 0.6492049089897605 ORDER BY ((- (t0.c73)) IN ()) DESC);
SELECT COUNT(*) FROM t0 CROSS JOIN vt0 ON 0.6492049089897605 WHERE ('') ORDER BY ((- (t0.c73)) IN ()) DESC;
SELECT ALL * FROM t0 WHERE (((((t0.c73) NOT BETWEEN (t0.c73) AND (t0.c73))) BETWEEN (((t0.c2)LIKE(t0.c1))) AND (((t0.c2) IS TRUE)))) ORDER BY ((LTRIM(t0.c2))>=(((((t0.c73)AND(t0.c2)))AND(t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c73) NOT BETWEEN (t0.c73) AND (t0.c73))) BETWEEN (((t0.c2)LIKE(t0.c1))) AND (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((LTRIM(t0.c2))>=(((((t0.c73)AND(t0.c2)))AND(t0.c2)))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c73) NOT BETWEEN (t0.c73) AND (t0.c73))) BETWEEN (((t0.c2)LIKE(t0.c1))) AND (((t0.c2) IS TRUE)))) ORDER BY ((LTRIM(t0.c2))>=(((((t0.c73)AND(t0.c2)))AND(t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c73) NOT BETWEEN (t0.c73) AND (t0.c73))) BETWEEN (((t0.c2)LIKE(t0.c1))) AND (((t0.c2) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY ((LTRIM(t0.c2))>=(((((t0.c73)AND(t0.c2)))AND(t0.c2)))) ASC);
SELECT ALL * FROM t0 WHERE (((((t0.c73) NOT BETWEEN (t0.c73) AND (t0.c73))) BETWEEN (((t0.c2)LIKE(t0.c1))) AND (((t0.c2) IS TRUE)))) ORDER BY ((LTRIM(t0.c2))>=(((((t0.c73)AND(t0.c2)))AND(t0.c2)))) ASC;
SELECT * FROM vt0 WHERE (ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (ABS(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN LIKELIHOOD(vt0.c0, 0.009373065611853137) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))==((vt0.c1 IN ())))  NULLS LAST, (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)==(vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN LIKELIHOOD(vt0.c0, 0.009373065611853137) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))==((vt0.c1 IN ())))  NULLS LAST, (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN LIKELIHOOD(vt0.c0, 0.009373065611853137) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))==((vt0.c1 IN ())))  NULLS LAST, (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)==(vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN LIKELIHOOD(vt0.c0, 0.009373065611853137) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))==((vt0.c1 IN ())))  NULLS LAST, (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0)=(vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN LIKELIHOOD(vt0.c0, 0.009373065611853137) END) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))==((vt0.c1 IN ())))  NULLS LAST, (((((((((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)|((vt0.c1 IN (vt0.c1, x'')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|((vt0.c1 IN (vt0.c1, x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)|((vt0.c1 IN (vt0.c1, x'')))));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|((vt0.c1 IN (vt0.c1, x''))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)|((vt0.c1 IN (vt0.c1, x'')))));
SELECT ALL * FROM vt0 WHERE (HEX((((vt0.c1))>=((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c1))>=((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX((((vt0.c1))>=((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((HEX((((vt0.c1))>=((vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX((((vt0.c1))>=((vt0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM((t0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t0.c1 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM((t0.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((TRIM((t0.c1 IN ()))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (TRIM((t0.c1 IN ())));
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c30) BETWEEN (t0.c1) AND (t0.c2)) END) ORDER BY ((0Xffffffffe41015e0) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN ((t0.c30) BETWEEN (t0.c1) AND (t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY ((0Xffffffffe41015e0) ISNULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c30) BETWEEN (t0.c1) AND (t0.c2)) END) ORDER BY ((0Xffffffffe41015e0) ISNULL) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN t0.c0 THEN ((t0.c30) BETWEEN (t0.c1) AND (t0.c2)) END) IS TRUE)  as count FROM t0 ORDER BY ((0Xffffffffe41015e0) ISNULL) ASC  NULLS FIRST);
SELECT * FROM t0 WHERE (CASE WHEN t0.c0 THEN ((t0.c30) BETWEEN (t0.c1) AND (t0.c2)) END) ORDER BY ((0Xffffffffe41015e0) ISNULL) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((('-764175609')+(vt0.c0)))>=(vt0.c0)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((('-764175609')+(vt0.c0)))>=(vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((('-764175609')+(vt0.c0)))>=(vt0.c0)) WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((('-764175609')+(vt0.c0)))>=(vt0.c0)));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((('-764175609')+(vt0.c0)))>=(vt0.c0)) WHERE (x'');
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))LIKE((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) ORDER BY CAST(t0.c73 AS BLOB) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))LIKE((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c73 AS BLOB) COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))LIKE((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) ORDER BY CAST(t0.c73 AS BLOB) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c0) IS FALSE))LIKE((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c73 AS BLOB) COLLATE BINARY COLLATE BINARY  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0) IS FALSE))LIKE((((t0.c0)) BETWEEN ((t0.c1)) AND ((t0.c0)))))) ORDER BY CAST(t0.c73 AS BLOB) COLLATE BINARY COLLATE BINARY  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((((((((t0.c73, vt0.c1, NULL))=((t0.c1, t0.c73, vt0.c1))))AND(CASE t0.c73  WHEN t0.c1 THEN t0.c30 WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c30 END)))OR((t0.c73 IN (vt0.c1))))) ORDER BY CASE WHEN (((t0.c30)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))) THEN CASE t0.c73  WHEN vt0.c1 THEN vt0.c1 WHEN 1851827596 THEN vt0.c0 WHEN t0.c30 THEN t0.c1 END WHEN (- (t0.c30)) THEN (((t0.c1))==((t0.c2))) WHEN ((t0.c30)%(t0.c2)) THEN ((((((((t0.c2)AND(t0.c73)))OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)) ELSE (vt0.c0 IN (t0.c30, t0.c1)) END DESC, (((t0.c73 IN ())) NOT BETWEEN ((- (t0.c30))) AND (((t0.c30) IS TRUE))), '-974351022';
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c73, vt0.c1, NULL))==((t0.c1, t0.c73, vt0.c1))))AND(CASE t0.c73  WHEN t0.c1 THEN t0.c30 WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c30 END)))OR((t0.c73 IN (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (((t0.c30)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))) THEN CASE t0.c73  WHEN vt0.c1 THEN vt0.c1 WHEN 1851827596 THEN vt0.c0 WHEN t0.c30 THEN t0.c1 END WHEN (- (t0.c30)) THEN (((t0.c1))==((t0.c2))) WHEN ((t0.c30)%(t0.c2)) THEN ((((((((t0.c2)AND(t0.c73)))OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)) ELSE (vt0.c0 IN (t0.c30, t0.c1)) END DESC, (((t0.c73 IN ())) NOT BETWEEN ((- (t0.c30))) AND (((t0.c30) IS TRUE))), '-974351022');
SELECT * FROM t0, vt0 WHERE ((((((((t0.c73, vt0.c1, NULL))=((t0.c1, t0.c73, vt0.c1))))AND(CASE t0.c73  WHEN t0.c1 THEN t0.c30 WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c30 END)))OR((t0.c73 IN (vt0.c1))))) ORDER BY CASE WHEN (((t0.c30)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))) THEN CASE t0.c73  WHEN vt0.c1 THEN vt0.c1 WHEN 1851827596 THEN vt0.c0 WHEN t0.c30 THEN t0.c1 END WHEN (- (t0.c30)) THEN (((t0.c1))==((t0.c2))) WHEN ((t0.c30)%(t0.c2)) THEN ((((((((t0.c2)AND(t0.c73)))OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)) ELSE (vt0.c0 IN (t0.c30, t0.c1)) END DESC, (((t0.c73 IN ())) NOT BETWEEN ((- (t0.c30))) AND (((t0.c30) IS TRUE))), '-974351022';
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c73, vt0.c1, NULL))==((t0.c1, t0.c73, vt0.c1))))AND(CASE t0.c73  WHEN t0.c1 THEN t0.c30 WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c30 END)))OR((t0.c73 IN (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN (((t0.c30)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))) THEN CASE t0.c73  WHEN vt0.c1 THEN vt0.c1 WHEN 1851827596 THEN vt0.c0 WHEN t0.c30 THEN t0.c1 END WHEN (- (t0.c30)) THEN (((t0.c1))==((t0.c2))) WHEN ((t0.c30)%(t0.c2)) THEN ((((((((t0.c2)AND(t0.c73)))OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)) ELSE (vt0.c0 IN (t0.c30, t0.c1)) END DESC, (((t0.c73 IN ())) NOT BETWEEN ((- (t0.c30))) AND (((t0.c30) IS TRUE))), '-974351022');
SELECT * FROM t0, vt0 WHERE ((((((((t0.c73, vt0.c1, NULL))=((t0.c1, t0.c73, vt0.c1))))AND(CASE t0.c73  WHEN t0.c1 THEN t0.c30 WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE t0.c30 END)))OR((t0.c73 IN (vt0.c1))))) ORDER BY CASE WHEN (((t0.c30)) NOT BETWEEN ((vt0.c0)) AND ((t0.c2))) THEN CASE t0.c73  WHEN vt0.c1 THEN vt0.c1 WHEN 1851827596 THEN vt0.c0 WHEN t0.c30 THEN t0.c1 END WHEN (- (t0.c30)) THEN (((t0.c1))==((t0.c2))) WHEN ((t0.c30)%(t0.c2)) THEN ((((((((t0.c2)AND(t0.c73)))OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)) ELSE (vt0.c0 IN (t0.c30, t0.c1)) END DESC, (((t0.c73 IN ())) NOT BETWEEN ((- (t0.c30))) AND (((t0.c30) IS TRUE))), '-974351022';
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CHANGES() THEN (NOT (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHANGES() THEN (NOT (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CHANGES() THEN (NOT (t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CHANGES() THEN (NOT (t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE WHEN CHANGES() THEN (NOT (t0.c1)) END);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE ((((vt0.c0, vt0.c1, t0.c0, t0.c73, t0.c1)) NOT BETWEEN (((vt0.c0 IN (t0.c30)), ((t0.c1)>>(t0.c30)), t0.c2 COLLATE NOCASE, ((t0.c73) ISNULL), ((((t0.c73)AND(t0.c1)))AND(vt0.c0)))) AND ((((vt0.c1)<<(t0.c30)), ((((vt0.c1)AND(t0.c73)))AND(t0.c73)), ((t0.c73) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE vt0.c1  WHEN t0.c30 THEN t0.c30 END, ((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c0, t0.c73, t0.c1)) NOT BETWEEN (((vt0.c0 IN (t0.c30)), ((t0.c1)>>(t0.c30)), t0.c2 COLLATE NOCASE, ((t0.c73) ISNULL), ((((t0.c73)AND(t0.c1)))AND(vt0.c0)))) AND ((((vt0.c1)<<(t0.c30)), ((((vt0.c1)AND(t0.c73)))AND(t0.c73)), ((t0.c73) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE vt0.c1  WHEN t0.c30 THEN t0.c30 END, ((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE ((((vt0.c0, vt0.c1, t0.c0, t0.c73, t0.c1)) NOT BETWEEN (((vt0.c0 IN (t0.c30)), ((t0.c1)>>(t0.c30)), t0.c2 COLLATE NOCASE, ((t0.c73) ISNULL), ((((t0.c73)AND(t0.c1)))AND(vt0.c0)))) AND ((((vt0.c1)<<(t0.c30)), ((((vt0.c1)AND(t0.c73)))AND(t0.c73)), ((t0.c73) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE vt0.c1  WHEN t0.c30 THEN t0.c30 END, ((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, t0.c0, t0.c73, t0.c1)) NOT BETWEEN (((vt0.c0 IN (t0.c30)), ((t0.c1)>>(t0.c30)), t0.c2 COLLATE NOCASE, ((t0.c73) ISNULL), ((((t0.c73)AND(t0.c1)))AND(vt0.c0)))) AND ((((vt0.c1)<<(t0.c30)), ((((vt0.c1)AND(t0.c73)))AND(t0.c73)), ((t0.c73) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE vt0.c1  WHEN t0.c30 THEN t0.c30 END, ((vt0.c0) BETWEEN (t0.c1) AND (t0.c0)))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON NULL COLLATE BINARY WHERE ((((vt0.c0, vt0.c1, t0.c0, t0.c73, t0.c1)) NOT BETWEEN (((vt0.c0 IN (t0.c30)), ((t0.c1)>>(t0.c30)), t0.c2 COLLATE NOCASE, ((t0.c73) ISNULL), ((((t0.c73)AND(t0.c1)))AND(vt0.c0)))) AND ((((vt0.c1)<<(t0.c30)), ((((vt0.c1)AND(t0.c73)))AND(t0.c73)), ((t0.c73) NOT BETWEEN (t0.c0) AND (t0.c1)), CASE vt0.c1  WHEN t0.c30 THEN t0.c30 END, ((vt0.c0) BETWEEN (t0.c1) AND (t0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (HEX(t0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (HEX(t0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (HEX(t0.c1))));
SELECT SUM(count) FROM (SELECT (((~ (HEX(t0.c1)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ (HEX(t0.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL))LIKE(TRIM(''))) WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL))LIKE(TRIM(''))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL))LIKE(TRIM(''))) WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL))LIKE(TRIM(''))));
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((t0.c1) NOTNULL))LIKE(TRIM(''))) WHERE (CAST(vt0.c1 AS TEXT) COLLATE NOCASE COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN INSTR(vt0.c1, vt0.c0) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN INSTR(vt0.c1, vt0.c0) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN INSTR(vt0.c1, vt0.c0) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN INSTR(vt0.c1, vt0.c0) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 END WHEN INSTR(vt0.c1, vt0.c0) THEN CAST(vt0.c1 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c2)))OR(vt0.c1)))!=(CASE WHEN t0.c73 THEN t0.c30 END))) ORDER BY json_array(t0.c0, CASE WHEN t0.c2 THEN t0.c2 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c2)))OR(vt0.c1)))<>(CASE WHEN t0.c73 THEN t0.c30 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array(t0.c0, CASE WHEN t0.c2 THEN t0.c2 END) ASC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c2)))OR(vt0.c1)))!=(CASE WHEN t0.c73 THEN t0.c30 END))) ORDER BY json_array(t0.c0, CASE WHEN t0.c2 THEN t0.c2 END) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c1)AND(t0.c2)))OR(vt0.c1)))<>(CASE WHEN t0.c73 THEN t0.c30 END))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array(t0.c0, CASE WHEN t0.c2 THEN t0.c2 END) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (vt0.c0, ((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN (vt0.c0, ((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (vt0.c0, ((vt0.c0)<=(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN (vt0.c0, ((vt0.c0)<=(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((~ (vt0.c0)) IN (vt0.c0, ((vt0.c0)<=(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c1)))<=((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c1)))<=((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c1)))<=((t0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t0.c1)))<=((t0.c2 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((+ (t0.c1)))<=((t0.c2 IN ()))));
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(t0.c0) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(t0.c0) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(t0.c0) COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY NULL  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (RTRIM(t0.c0) COLLATE NOCASE) ORDER BY NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, CAST(vt0.c0 AS TEXT))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT vt0.c0, CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, CAST(vt0.c0 AS TEXT))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULLIF(DISTINCT vt0.c0, CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULLIF(DISTINCT vt0.c0, CAST(vt0.c0 AS TEXT))) ORDER BY CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS BLOB) THEN vt0.c0 COLLATE NOCASE ELSE (((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c0))<((vt0.c1, vt0.c0, vt0.c0, vt0.c0, vt0.c1))) END DESC  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (t0.c1) ORDER BY CAST((((t0.c2)) BETWEEN ((-366353980)) AND ((t0.c73))) AS BLOB) ASC  NULLS FIRST, (((vt0.c1)&(t0.c73)) IN ()), ((CAST(vt0.c1 AS REAL)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((t0.c2)) BETWEEN ((-366353980)) AND ((t0.c73))) AS BLOB) ASC  NULLS FIRST, (((vt0.c1)&(t0.c73)) IN ()), ((CAST(vt0.c1 AS REAL)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c1) ORDER BY CAST((((t0.c2)) BETWEEN ((-366353980)) AND ((t0.c73))) AS BLOB) ASC  NULLS FIRST, (((vt0.c1)&(t0.c73)) IN ()), ((CAST(vt0.c1 AS REAL)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((((t0.c2)) BETWEEN ((-366353980)) AND ((t0.c73))) AS BLOB) ASC  NULLS FIRST, (((vt0.c1)&(t0.c73)) IN ()), ((CAST(vt0.c1 AS REAL)) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (t0.c1) ORDER BY CAST((((t0.c2)) BETWEEN ((-366353980)) AND ((t0.c73))) AS BLOB) ASC  NULLS FIRST, (((vt0.c1)&(t0.c73)) IN ()), ((CAST(vt0.c1 AS REAL)) NOTNULL) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c73) IS TRUE) AS NUMERIC)) ORDER BY (+ (((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0))))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c30)) THEN CAST(t0.c2 AS NUMERIC) WHEN NULLIF(t0.c0, t0.c1) THEN ((((((((t0.c1)OR(t0.c73)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)) WHEN t0.c0 THEN (((t0.c1))<=((t0.c0))) ELSE CAST(t0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c73) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0))))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c30)) THEN CAST(t0.c2 AS NUMERIC) WHEN NULLIF(t0.c0, t0.c1) THEN ((((((((t0.c1)OR(t0.c73)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)) WHEN t0.c0 THEN (((t0.c1))<=((t0.c0))) ELSE CAST(t0.c0 AS TEXT) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c73) IS TRUE) AS NUMERIC)) ORDER BY (+ (((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0))))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c30)) THEN CAST(t0.c2 AS NUMERIC) WHEN NULLIF(t0.c0, t0.c1) THEN ((((((((t0.c1)OR(t0.c73)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)) WHEN t0.c0 THEN (((t0.c1))<=((t0.c0))) ELSE CAST(t0.c0 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c73) IS TRUE) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0))))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c30)) THEN CAST(t0.c2 AS NUMERIC) WHEN NULLIF(t0.c0, t0.c1) THEN ((((((((t0.c1)OR(t0.c73)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)) WHEN t0.c0 THEN (((t0.c1))<=((t0.c0))) ELSE CAST(t0.c0 AS TEXT) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c73) IS TRUE) AS NUMERIC)) ORDER BY (+ (((vt0.c1) NOT BETWEEN (t0.c2) AND (vt0.c0))))  NULLS FIRST, CASE ((t0.c0) IS FALSE)  WHEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (t0.c30)) THEN CAST(t0.c2 AS NUMERIC) WHEN NULLIF(t0.c0, t0.c1) THEN ((((((((t0.c1)OR(t0.c73)))AND(t0.c0)))OR(t0.c2)))AND(t0.c0)) WHEN t0.c0 THEN (((t0.c1))<=((t0.c0))) ELSE CAST(t0.c0 AS TEXT) END;
SELECT * FROM t0 WHERE ((- (t0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (t0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((- (t0.c1)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (t0.c1)) COLLATE BINARY COLLATE BINARY);
SELECT * FROM vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c30 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN t0.c30 END AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c30 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN t0.c30 END AS INTEGER)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(CASE WHEN vt0.c0 THEN t0.c30 END AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((NOT (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1) NOT NULL))==(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))=(CAST(vt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((NOT (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1) NOT NULL))==(CAST(vt0.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL))=(CAST(vt0.c1 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE ((NOT (CAST(vt0.c1 AS TEXT)))) ORDER BY ((((vt0.c1) NOT NULL))==(CAST(vt0.c1 AS NUMERIC)));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1 COLLATE BINARY)OR(((vt0.c1)&(vt0.c1)))))OR(CASE WHEN t0.c30 THEN t0.c73 WHEN vt0.c1 THEN t0.c73 WHEN t0.c1 THEN t0.c73 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)OR(((vt0.c1)&(vt0.c1)))))OR(CASE WHEN t0.c30 THEN t0.c73 WHEN vt0.c1 THEN t0.c73 WHEN t0.c1 THEN t0.c73 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1 COLLATE BINARY)OR(((vt0.c1)&(vt0.c1)))))OR(CASE WHEN t0.c30 THEN t0.c73 WHEN vt0.c1 THEN t0.c73 WHEN t0.c1 THEN t0.c73 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 ELSE t0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 COLLATE BINARY)OR(((vt0.c1)&(vt0.c1)))))OR(CASE WHEN t0.c30 THEN t0.c73 WHEN vt0.c1 THEN t0.c73 WHEN t0.c1 THEN t0.c73 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 ELSE t0.c0 END))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1 COLLATE BINARY)OR(((vt0.c1)&(vt0.c1)))))OR(CASE WHEN t0.c30 THEN t0.c73 WHEN vt0.c1 THEN t0.c73 WHEN t0.c1 THEN t0.c73 WHEN t0.c2 THEN t0.c0 WHEN vt0.c0 THEN t0.c30 ELSE t0.c0 END)));
SELECT ALL * FROM t0 WHERE (json_patch(x'', (('Y')IS(t0.c73))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(x'', (('Y')IS(t0.c73)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (json_patch(x'', (('Y')IS(t0.c73))));
SELECT SUM(count) FROM (SELECT ALL ((json_patch(x'', (('Y')IS(t0.c73)))) IS TRUE)  as count FROM t0);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c30 AS REAL) COLLATE RTRIM) ORDER BY ((CAST(t0.c2 AS BLOB))|(((t0.c30) BETWEEN (t0.c0) AND ('0.15676892812439358')))) ASC  NULLS LAST, CASE HEX(DISTINCT 0.8539554807152653)  WHEN ((t0.c0) NOT BETWEEN (t0.c30) AND (t0.c73)) THEN (~ ('-2133141990')) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c30 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c2 AS BLOB))|(((t0.c30) BETWEEN (t0.c0) AND ('0.15676892812439358')))) ASC  NULLS LAST, CASE HEX(DISTINCT 0.8539554807152653)  WHEN ((t0.c0) NOT BETWEEN (t0.c30) AND (t0.c73)) THEN (~ ('-2133141990')) END);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c30 AS REAL) COLLATE RTRIM) ORDER BY ((CAST(t0.c2 AS BLOB))|(((t0.c30) BETWEEN (t0.c0) AND ('0.15676892812439358')))) ASC  NULLS LAST, CASE HEX(DISTINCT 0.8539554807152653)  WHEN ((t0.c0) NOT BETWEEN (t0.c30) AND (t0.c73)) THEN (~ ('-2133141990')) END;
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c30 AS REAL) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c2 AS BLOB))|(((t0.c30) BETWEEN (t0.c0) AND ('0.15676892812439358')))) ASC  NULLS LAST, CASE HEX(DISTINCT 0.8539554807152653)  WHEN ((t0.c0) NOT BETWEEN (t0.c30) AND (t0.c73)) THEN (~ ('-2133141990')) END);
SELECT * FROM vt0, t0 WHERE (CAST(t0.c30 AS REAL) COLLATE RTRIM) ORDER BY ((CAST(t0.c2 AS BLOB))|(((t0.c30) BETWEEN (t0.c0) AND ('0.15676892812439358')))) ASC  NULLS LAST, CASE HEX(DISTINCT 0.8539554807152653)  WHEN ((t0.c0) NOT BETWEEN (t0.c30) AND (t0.c73)) THEN (~ ('-2133141990')) END;
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY ((((((vt0.c0)IS(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c73 END)), ((((vt0.c1) NOT BETWEEN (t0.c73) AND (vt0.c0)))LIKE(t0.c2)), (((((t0.c1))<((t0.c30)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)IS(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c73 END)), ((((vt0.c1) NOT BETWEEN (t0.c73) AND (vt0.c0)))LIKE(t0.c2)), (((((t0.c1))<((t0.c30)))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY ((((((vt0.c0)IS(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c73 END)), ((((vt0.c1) NOT BETWEEN (t0.c73) AND (vt0.c0)))LIKE(t0.c2)), (((((t0.c1))<((t0.c30)))) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((((vt0.c0)IS(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c73 END)), ((((vt0.c1) NOT BETWEEN (t0.c73) AND (vt0.c0)))LIKE(t0.c2)), (((((t0.c1))<((t0.c30)))) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS BLOB)) ORDER BY ((((((vt0.c0)IS(t0.c1)))OR((- (t0.c0)))))AND(CASE WHEN t0.c2 THEN vt0.c0 ELSE t0.c73 END)), ((((vt0.c1) NOT BETWEEN (t0.c73) AND (vt0.c0)))LIKE(t0.c2)), (((((t0.c1))<((t0.c30)))) NOT NULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((((vt0.c1)AND(t0.c30)))OR(t0.c0))))) ORDER BY UPPER(DISTINCT ((t0.c73) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)AND(t0.c30)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(DISTINCT ((t0.c73) ISNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((((vt0.c1)AND(t0.c30)))OR(t0.c0))))) ORDER BY UPPER(DISTINCT ((t0.c73) ISNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c1)AND(t0.c30)))OR(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(DISTINCT ((t0.c73) ISNULL))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (((((vt0.c1)AND(t0.c30)))OR(t0.c0))))) ORDER BY UPPER(DISTINCT ((t0.c73) ISNULL))  NULLS LAST;
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE ((t0.c0)>=(vt0.c0))  WHEN (t0.c0 IN (vt0.c1)) THEN CAST(t0.c30 AS BLOB) END WHERE (0.19857819923067288);
SELECT SUM(count) FROM (SELECT ALL ((0.19857819923067288) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE ((t0.c0)>=(vt0.c0))  WHEN (t0.c0 IN (vt0.c1)) THEN CAST(t0.c30 AS BLOB) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE ((t0.c0)>=(vt0.c0))  WHEN (t0.c0 IN (vt0.c1)) THEN CAST(t0.c30 AS BLOB) END WHERE (0.19857819923067288);
SELECT SUM(count) FROM (SELECT ALL ((0.19857819923067288) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE ((t0.c0)>=(vt0.c0))  WHEN (t0.c0 IN (vt0.c1)) THEN CAST(t0.c30 AS BLOB) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON CASE ((t0.c0)>=(vt0.c0))  WHEN (t0.c0 IN (vt0.c1)) THEN CAST(t0.c30 AS BLOB) END WHERE (0.19857819923067288);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN 649636695 THEN ((t0.c30) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t0.c73)/(t0.c1)) THEN ((t0.c0)LIKE(t0.c2)) WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1) BETWEEN (0.47355523339994965) AND (t0.c73)) THEN t0.c30 COLLATE RTRIM WHEN TRIM(x'') THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(t0.c73 AS INTEGER) THEN ((((t0.c73)AND(t0.c0)))OR(t0.c2)) WHEN NULL THEN ((((((((t0.c73)OR(vt0.c0)))OR(t0.c30)))OR(t0.c0)))OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 649636695 THEN ((t0.c30) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t0.c73)/(t0.c1)) THEN ((t0.c0)LIKE(t0.c2)) WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1) BETWEEN (0.47355523339994965) AND (t0.c73)) THEN t0.c30 COLLATE RTRIM WHEN TRIM(x'') THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(t0.c73 AS INTEGER) THEN ((((t0.c73)AND(t0.c0)))OR(t0.c2)) WHEN NULL THEN ((((((((t0.c73)OR(vt0.c0)))OR(t0.c30)))OR(t0.c0)))OR(t0.c2)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN 649636695 THEN ((t0.c30) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t0.c73)/(t0.c1)) THEN ((t0.c0)LIKE(t0.c2)) WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1) BETWEEN (0.47355523339994965) AND (t0.c73)) THEN t0.c30 COLLATE RTRIM WHEN TRIM(x'') THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(t0.c73 AS INTEGER) THEN ((((t0.c73)AND(t0.c0)))OR(t0.c2)) WHEN NULL THEN ((((((((t0.c73)OR(vt0.c0)))OR(t0.c30)))OR(t0.c0)))OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 649636695 THEN ((t0.c30) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t0.c73)/(t0.c1)) THEN ((t0.c0)LIKE(t0.c2)) WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1) BETWEEN (0.47355523339994965) AND (t0.c73)) THEN t0.c30 COLLATE RTRIM WHEN TRIM(x'') THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(t0.c73 AS INTEGER) THEN ((((t0.c73)AND(t0.c0)))OR(t0.c2)) WHEN NULL THEN ((((((((t0.c73)OR(vt0.c0)))OR(t0.c30)))OR(t0.c0)))OR(t0.c2)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN 649636695 THEN ((t0.c30) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t0.c73)/(t0.c1)) THEN ((t0.c0)LIKE(t0.c2)) WHEN vt0.c1 THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) WHEN ((vt0.c1) BETWEEN (0.47355523339994965) AND (t0.c73)) THEN t0.c30 COLLATE RTRIM WHEN TRIM(x'') THEN CAST(vt0.c1 AS INTEGER) WHEN CAST(t0.c73 AS INTEGER) THEN ((((t0.c73)AND(t0.c0)))OR(t0.c2)) WHEN NULL THEN ((((((((t0.c73)OR(vt0.c0)))OR(t0.c30)))OR(t0.c0)))OR(t0.c2)) END);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((CAST((+ (vt0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (CAST((+ (vt0.c0)) AS BLOB)) ORDER BY vt0.c0;
SELECT ALL * FROM t0, vt0 WHERE (t0.c30) ORDER BY ((- (vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0 ORDER BY ((- (vt0.c1)) IN ()) ASC);
SELECT ALL * FROM t0, vt0 WHERE (t0.c30) ORDER BY ((- (vt0.c1)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0 ORDER BY ((- (vt0.c1)) IN ()) ASC);
SELECT ALL * FROM t0, vt0 WHERE (t0.c30) ORDER BY ((- (vt0.c1)) IN ()) ASC;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE ((('%7H]Y') BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((NULL) ISNULL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((NULL)))  NULLS LAST, ((((0x723a022 IN (vt0.c0, vt0.c1))))>=(((vt0.c1 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('%7H]Y') BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((NULL) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((NULL)))  NULLS LAST, ((((0x723a022 IN (vt0.c0, vt0.c1))))>=(((vt0.c1 IN ())))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((('%7H]Y') BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((NULL) ISNULL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((NULL)))  NULLS LAST, ((((0x723a022 IN (vt0.c0, vt0.c1))))>=(((vt0.c1 IN ())))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((('%7H]Y') BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((NULL) ISNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((NULL)))  NULLS LAST, ((((0x723a022 IN (vt0.c0, vt0.c1))))>=(((vt0.c1 IN ())))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((('%7H]Y') BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((NULL) ISNULL)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS NUMERIC))) AND ((NULL)))  NULLS LAST, ((((0x723a022 IN (vt0.c0, vt0.c1))))>=(((vt0.c1 IN ())))) DESC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY t0.c73 ASC  NULLS LAST, (((- (t0.c2)))<=(((t0.c0) BETWEEN (t0.c0) AND ('175253617')))) DESC  NULLS LAST, CASE CASE t0.c2  WHEN t0.c30 THEN t0.c1 END  WHEN ((((t0.c1)AND(t0.c73)))AND('420526479')) THEN (NOT (t0.c30)) WHEN ((x'fbb2')IS NOT(t0.c2)) THEN ((((t0.c2)OR(t0.c2)))OR(0Xffffffff9afc183d)) WHEN (('')OR(t0.c1)) THEN ((((t0.c73)AND(t0.c1)))OR(t0.c30)) ELSE (NOT (t0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c73 ASC  NULLS LAST, (((- (t0.c2)))<=(((t0.c0) BETWEEN (t0.c0) AND ('175253617')))) DESC  NULLS LAST, CASE CASE t0.c2  WHEN t0.c30 THEN t0.c1 END  WHEN ((((t0.c1)AND(t0.c73)))AND('420526479')) THEN (NOT (t0.c30)) WHEN ((x'fbb2')IS NOT(t0.c2)) THEN ((((t0.c2)OR(t0.c2)))OR(0Xffffffff9afc183d)) WHEN (('')OR(t0.c1)) THEN ((((t0.c73)AND(t0.c1)))OR(t0.c30)) ELSE (NOT (t0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY t0.c73 ASC  NULLS LAST, (((- (t0.c2)))<=(((t0.c0) BETWEEN (t0.c0) AND ('175253617')))) DESC  NULLS LAST, CASE CASE t0.c2  WHEN t0.c30 THEN t0.c1 END  WHEN ((((t0.c1)AND(t0.c73)))AND('420526479')) THEN (NOT (t0.c30)) WHEN ((x'fbb2')IS NOT(t0.c2)) THEN ((((t0.c2)OR(t0.c2)))OR(0Xffffffff9afc183d)) WHEN (('')OR(t0.c1)) THEN ((((t0.c73)AND(t0.c1)))OR(t0.c30)) ELSE (NOT (t0.c2)) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t0.c0) NOT NULL)))) IS TRUE)  as count FROM t0 ORDER BY t0.c73 ASC  NULLS LAST, (((- (t0.c2)))<=(((t0.c0) BETWEEN (t0.c0) AND ('175253617')))) DESC  NULLS LAST, CASE CASE t0.c2  WHEN t0.c30 THEN t0.c1 END  WHEN ((((t0.c1)AND(t0.c73)))AND('420526479')) THEN (NOT (t0.c30)) WHEN ((x'fbb2')IS NOT(t0.c2)) THEN ((((t0.c2)OR(t0.c2)))OR(0Xffffffff9afc183d)) WHEN (('')OR(t0.c1)) THEN ((((t0.c73)AND(t0.c1)))OR(t0.c30)) ELSE (NOT (t0.c2)) END DESC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE ((~ (((t0.c0) NOT NULL)))) ORDER BY t0.c73 ASC  NULLS LAST, (((- (t0.c2)))<=(((t0.c0) BETWEEN (t0.c0) AND ('175253617')))) DESC  NULLS LAST, CASE CASE t0.c2  WHEN t0.c30 THEN t0.c1 END  WHEN ((((t0.c1)AND(t0.c73)))AND('420526479')) THEN (NOT (t0.c30)) WHEN ((x'fbb2')IS NOT(t0.c2)) THEN ((((t0.c2)OR(t0.c2)))OR(0Xffffffff9afc183d)) WHEN (('')OR(t0.c1)) THEN ((((t0.c73)AND(t0.c1)))OR(t0.c30)) ELSE (NOT (t0.c2)) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c1 COLLATE BINARY END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c1 COLLATE BINARY END) IS TRUE)  as count FROM vt0 NOT INDEXED);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) ELSE vt0.c1 COLLATE BINARY END);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY SQLITE_COMPILEOPTION_GET(TRIM(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_COMPILEOPTION_GET(TRIM(vt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY SQLITE_COMPILEOPTION_GET(TRIM(vt0.c0)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY SQLITE_COMPILEOPTION_GET(TRIM(vt0.c0)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (NULL) ORDER BY SQLITE_COMPILEOPTION_GET(TRIM(vt0.c0)) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((NOT (vt0.c0))) ISNULL));
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1))))>=((CAST(vt0.c0 AS INTEGER))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1) IS TRUE), ((vt0.c1)-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c1))))>=((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1) IS TRUE), ((vt0.c1)-(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1))))>=((CAST(vt0.c0 AS INTEGER))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1) IS TRUE), ((vt0.c1)-(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)OR(vt0.c1))))>=((CAST(vt0.c0 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1) IS TRUE), ((vt0.c1)-(vt0.c0))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1))))>=((CAST(vt0.c0 AS INTEGER))))) ORDER BY ((vt0.c0 IN (vt0.c0)) IN (((vt0.c1) IS TRUE), ((vt0.c1)-(vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE ((((((+ (0.27255924430644074)))AND(((t0.c2)/(x'')))))OR(LIKELIHOOD(t0.c2, 0.1317468111951735)))) ORDER BY (t0.c73 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (0.27255924430644074)))AND(((t0.c2)/(x'')))))OR(LIKELIHOOD(t0.c2, 0.1317468111951735)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c73 IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((+ (0.27255924430644074)))AND(((t0.c2)/(x'')))))OR(LIKELIHOOD(t0.c2, 0.1317468111951735)))) ORDER BY (t0.c73 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (0.27255924430644074)))AND(((t0.c2)/(x'')))))OR(LIKELIHOOD(t0.c2, 0.1317468111951735)))) IS TRUE)  as count FROM t0 ORDER BY (t0.c73 IN ())  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((((((+ (0.27255924430644074)))AND(((t0.c2)/(x'')))))OR(LIKELIHOOD(t0.c2, 0.1317468111951735)))) ORDER BY (t0.c73 IN ())  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ (CASE t0.c1  WHEN t0.c73 THEN t0.c0 END))) ORDER BY CAST((t0.c1 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE t0.c1  WHEN t0.c73 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c1 IN ()) AS BLOB));
SELECT ALL * FROM t0 WHERE ((~ (CASE t0.c1  WHEN t0.c73 THEN t0.c0 END))) ORDER BY CAST((t0.c1 IN ()) AS BLOB);
SELECT SUM(count) FROM (SELECT ALL (((~ (CASE t0.c1  WHEN t0.c73 THEN t0.c0 END))) IS TRUE)  as count FROM t0 ORDER BY CAST((t0.c1 IN ()) AS BLOB));
SELECT ALL * FROM t0 WHERE ((~ (CASE t0.c1  WHEN t0.c73 THEN t0.c0 END))) ORDER BY CAST((t0.c1 IN ()) AS BLOB);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c1 AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID() ASC, (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID() ASC, (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c1 AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID() ASC, (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY LAST_INSERT_ROWID() ASC, (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((~ (CAST(vt0.c1 AS NUMERIC)))) ORDER BY LAST_INSERT_ROWID() ASC, (~ (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) DESC  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON '' WHERE (CAST(t0.c2 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '');
SELECT ALL * FROM t0 CROSS JOIN vt0 ON '' WHERE (CAST(t0.c2 COLLATE NOCASE AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(t0.c2 COLLATE NOCASE AS BLOB)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON '');
SELECT ALL * FROM t0 CROSS JOIN vt0 ON '' WHERE (CAST(t0.c2 COLLATE NOCASE AS BLOB));
SELECT * FROM t0 WHERE ((((0Xffffffffca6e9e76)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) AND ((((t0.c2)OR(t0.c30))))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffffca6e9e76)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) AND ((((t0.c2)OR(t0.c30)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((0Xffffffffca6e9e76)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) AND ((((t0.c2)OR(t0.c30))))));
SELECT SUM(count) FROM (SELECT (((((0Xffffffffca6e9e76)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) AND ((((t0.c2)OR(t0.c30)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((((0Xffffffffca6e9e76)) NOT BETWEEN ((((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) AND ((((t0.c2)OR(t0.c30))))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((0.7221882109834471) IS FALSE), (+ (t0.c73)), t0.c1))<=((t0.c73 COLLATE NOCASE, ((vt0.c1)LIKE(t0.c73)), (vt0.c1 IN (vt0.c1, t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.7221882109834471) IS FALSE), (+ (t0.c73)), t0.c1))<=((t0.c73 COLLATE NOCASE, ((vt0.c1)LIKE(t0.c73)), (vt0.c1 IN (vt0.c1, t0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((0.7221882109834471) IS FALSE), (+ (t0.c73)), t0.c1))<=((t0.c73 COLLATE NOCASE, ((vt0.c1)LIKE(t0.c73)), (vt0.c1 IN (vt0.c1, t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.7221882109834471) IS FALSE), (+ (t0.c73)), t0.c1))<=((t0.c73 COLLATE NOCASE, ((vt0.c1)LIKE(t0.c73)), (vt0.c1 IN (vt0.c1, t0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((0.7221882109834471) IS FALSE), (+ (t0.c73)), t0.c1))<=((t0.c73 COLLATE NOCASE, ((vt0.c1)LIKE(t0.c73)), (vt0.c1 IN (vt0.c1, t0.c1))))));
SELECT COUNT(*) FROM vt0 WHERE (-764175609) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((-764175609) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (-764175609) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((-764175609) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL) ASC);
SELECT COUNT(*) FROM vt0 WHERE (-764175609) ORDER BY CAST(CAST(vt0.c1 AS NUMERIC) AS REAL) ASC;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN t0.c0 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN t0.c0 THEN vt0.c1 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c0 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN t0 WHERE (CASE WHEN t0.c0 THEN vt0.c1 END COLLATE BINARY);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER));
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1, t0.c0, t0.c73))==((vt0.c1, t0.c30, 0.9358969458646318))))+(((t0.c1)%(t0.c2))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, t0.c0, t0.c73))==((vt0.c1, t0.c30, 0.9358969458646318))))+(((t0.c1)%(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1, t0.c0, t0.c73))==((vt0.c1, t0.c30, 0.9358969458646318))))+(((t0.c1)%(t0.c2))))) ORDER BY NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1, t0.c0, t0.c73))==((vt0.c1, t0.c30, 0.9358969458646318))))+(((t0.c1)%(t0.c2))))) IS TRUE)  as count FROM t0, vt0 ORDER BY NULL  NULLS LAST);
SELECT * FROM t0, vt0 WHERE ((((((vt0.c1, t0.c0, t0.c73))==((vt0.c1, t0.c30, 0.9358969458646318))))+(((t0.c1)%(t0.c2))))) ORDER BY NULL  NULLS LAST;
SELECT ALL * FROM vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c1);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c0 COLLATE NOCASE)OR((- ('-1470094467')))))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END)))AND(((t0.c0)=(t0.c73)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0 COLLATE NOCASE)OR((- ('-1470094467')))))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END)))AND(((t0.c0)==(t0.c73)))))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c0 COLLATE NOCASE)OR((- ('-1470094467')))))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END)))AND(((t0.c0)=(t0.c73)))))AND(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c0 COLLATE NOCASE)OR((- ('-1470094467')))))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END)))AND(((t0.c0)==(t0.c73)))))AND(NULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((((((((t0.c0 COLLATE NOCASE)OR((- ('-1470094467')))))OR(CASE t0.c1  WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END)))AND(((t0.c0)=(t0.c73)))))AND(NULL)));
SELECT * FROM vt0, t0 WHERE ((((t0.c73)&(t0.c2)) IN ())) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) DESC, t0.c30  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c73)&(t0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) DESC, t0.c30  NULLS LAST, t0.c0 DESC);
SELECT * FROM vt0, t0 WHERE ((((t0.c73)&(t0.c2)) IN ())) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) DESC, t0.c30  NULLS LAST, t0.c0 DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c73)&(t0.c2)) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) DESC, t0.c30  NULLS LAST, t0.c0 DESC);
SELECT * FROM vt0, t0 WHERE ((((t0.c73)&(t0.c2)) IN ())) ORDER BY CAST(((vt0.c1) NOTNULL) AS BLOB) DESC, t0.c30  NULLS LAST, t0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE ((CASE NULL  WHEN NULL THEN vt0.c0 END IN (CAST(vt0.c1 AS NUMERIC)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND('253981345')))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))) AND ((vt0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN NULL THEN vt0.c0 END IN (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND('253981345')))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))) AND ((vt0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE NULL  WHEN NULL THEN vt0.c0 END IN (CAST(vt0.c1 AS NUMERIC)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND('253981345')))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))) AND ((vt0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((CASE NULL  WHEN NULL THEN vt0.c0 END IN (CAST(vt0.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND('253981345')))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))) AND ((vt0.c0 COLLATE BINARY))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((CASE NULL  WHEN NULL THEN vt0.c0 END IN (CAST(vt0.c1 AS NUMERIC)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)AND('253981345')))OR(vt0.c1)))AND(vt0.c0)))AND(NULL)))) AND ((vt0.c0 COLLATE BINARY))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c73)) NOT BETWEEN ((t0.c73)) AND ((t0.c30))) IN ())) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c73)) NOT BETWEEN ((t0.c73)) AND ((t0.c30))) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c73)) NOT BETWEEN ((t0.c73)) AND ((t0.c30))) IN ())) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c73)) NOT BETWEEN ((t0.c73)) AND ((t0.c30))) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c73)) NOT BETWEEN ((t0.c73)) AND ((t0.c30))) IN ())) ORDER BY CAST((+ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((- ((((t0.c73))>((t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c73))>((t0.c73)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- ((((t0.c73))>((t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL (((- ((((t0.c73))>((t0.c73)))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((- ((((t0.c73))>((t0.c73))))));
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN '\rlb' END) BETWEEN ((~ (vt0.c0))) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CASE WHEN vt0.c0 THEN '\rlb' END) BETWEEN ((~ (vt0.c0))) AND (NULL))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN '\rlb' END) BETWEEN ((~ (vt0.c0))) AND (NULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE NOCASE IN ())) IS TRUE)  as count FROM vt0 NOT INDEXED ORDER BY ((CASE WHEN vt0.c0 THEN '\rlb' END) BETWEEN ((~ (vt0.c0))) AND (NULL))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c1 COLLATE NOCASE IN ())) ORDER BY ((CASE WHEN vt0.c0 THEN '\rlb' END) BETWEEN ((~ (vt0.c0))) AND (NULL))  NULLS LAST;
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((+ (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((+ (vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM t0 WHERE ((~ (SQLITE_COMPILEOPTION_GET(t0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_GET(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (SQLITE_COMPILEOPTION_GET(t0.c2))));
SELECT SUM(count) FROM (SELECT (((~ (SQLITE_COMPILEOPTION_GET(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((~ (SQLITE_COMPILEOPTION_GET(t0.c2))));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c2)))AND('2106649774'))) BETWEEN ((t0.c73 IN ())) AND (((((vt0.c0)AND(t0.c2)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c2)))AND('2106649774'))) BETWEEN ((t0.c73 IN ())) AND (((((vt0.c0)AND(t0.c2)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c2)))AND('2106649774'))) BETWEEN ((t0.c73 IN ())) AND (((((vt0.c0)AND(t0.c2)))AND(t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c2)))AND('2106649774'))) BETWEEN ((t0.c73 IN ())) AND (((((vt0.c0)AND(t0.c2)))AND(t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c1)AND(t0.c2)))AND('2106649774'))) BETWEEN ((t0.c73 IN ())) AND (((((vt0.c0)AND(t0.c2)))AND(t0.c0)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY CASE WHEN ((vt0.c0)<>(t0.c73)) THEN t0.c0 COLLATE RTRIM WHEN LIKELY(DISTINCT vt0.c1) THEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) WHEN (t0.c73 IN ()) THEN MAX(t0.c0, 0.5684186565268845, t0.c30, t0.c73) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c0)<>(t0.c73)) THEN t0.c0 COLLATE RTRIM WHEN LIKELY(DISTINCT vt0.c1) THEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) WHEN (t0.c73 IN ()) THEN MAX(t0.c0, 0.5684186565268845, t0.c30, t0.c73) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY CASE WHEN ((vt0.c0)<>(t0.c73)) THEN t0.c0 COLLATE RTRIM WHEN LIKELY(DISTINCT vt0.c1) THEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) WHEN (t0.c73 IN ()) THEN MAX(t0.c0, 0.5684186565268845, t0.c30, t0.c73) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOTNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN ((vt0.c0)<>(t0.c73)) THEN t0.c0 COLLATE RTRIM WHEN LIKELY(DISTINCT vt0.c1) THEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) WHEN (t0.c73 IN ()) THEN MAX(t0.c0, 0.5684186565268845, t0.c30, t0.c73) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 END) NOTNULL)) ORDER BY CASE WHEN ((vt0.c0)<>(t0.c73)) THEN t0.c0 COLLATE RTRIM WHEN LIKELY(DISTINCT vt0.c1) THEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) WHEN (t0.c73 IN ()) THEN MAX(t0.c0, 0.5684186565268845, t0.c30, t0.c73) END  NULLS FIRST;
SELECT * FROM t0 WHERE (0.41194273067240905) ORDER BY ((((CASE t0.c30  WHEN 0xffffffffffffffff THEN t0.c1 END)AND(t0.c1 COLLATE BINARY)))AND((t0.c30 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((0.41194273067240905) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c30  WHEN 0xffffffffffffffff THEN t0.c1 END)AND(t0.c1 COLLATE BINARY)))AND((t0.c30 IN ()))));
SELECT * FROM t0 WHERE (0.41194273067240905) ORDER BY ((((CASE t0.c30  WHEN 0xffffffffffffffff THEN t0.c1 END)AND(t0.c1 COLLATE BINARY)))AND((t0.c30 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((0.41194273067240905) IS TRUE)  as count FROM t0 ORDER BY ((((CASE t0.c30  WHEN 0xffffffffffffffff THEN t0.c1 END)AND(t0.c1 COLLATE BINARY)))AND((t0.c30 IN ()))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c1 AS BLOB) AS NUMERIC)) ORDER BY CAST(vt0.c0 AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) WHERE (QUOTE((((vt0.c1))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((QUOTE((((vt0.c1))>=((vt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) WHERE (QUOTE((((vt0.c1))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((QUOTE((((vt0.c1))>=((vt0.c0))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (NOT ((((vt0.c0)) NOT BETWEEN ((t0.c2)) AND ((vt0.c0))))) WHERE (QUOTE((((vt0.c1))>=((vt0.c0)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c73)AND(t0.c0)))OR(t0.c2))) NOT NULL)) ORDER BY ((x'')<=((t0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c73)AND(t0.c0)))OR(t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((x'')<=((t0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c73)AND(t0.c0)))OR(t0.c2))) NOT NULL)) ORDER BY ((x'')<=((t0.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c73)AND(t0.c0)))OR(t0.c2))) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ((x'')<=((t0.c2 IN ()))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c73)AND(t0.c0)))OR(t0.c2))) NOT NULL)) ORDER BY ((x'')<=((t0.c2 IN ()))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c1 COLLATE RTRIM)-(((t0.c1)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE RTRIM)-(((t0.c1)/(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c1 COLLATE RTRIM)-(((t0.c1)/(t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1 COLLATE RTRIM)-(((t0.c1)/(t0.c0))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c1 COLLATE RTRIM)-(((t0.c1)/(t0.c0)))));
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR(UNICODE(x'3523')))) ORDER BY ((((((t0.c0)OR(x'494c')))OR(t0.c30))) BETWEEN (t0.c0) AND (((((((((((((t0.c73)AND(t0.c30)))OR(t0.c30)))AND(t0.c73)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR(UNICODE(x'3523')))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(x'494c')))OR(t0.c30))) BETWEEN (t0.c0) AND (((((((((((((t0.c73)AND(t0.c30)))OR(t0.c30)))AND(t0.c73)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR(UNICODE(x'3523')))) ORDER BY ((((((t0.c0)OR(x'494c')))OR(t0.c30))) BETWEEN (t0.c0) AND (((((((((((((t0.c73)AND(t0.c30)))OR(t0.c30)))AND(t0.c73)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0 IN (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR(UNICODE(x'3523')))) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c0)OR(x'494c')))OR(t0.c30))) BETWEEN (t0.c0) AND (((((((((((((t0.c73)AND(t0.c30)))OR(t0.c30)))AND(t0.c73)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1))))  NULLS LAST);
SELECT * FROM t0 WHERE ((((((t0.c0 IN (t0.c0)))AND(CAST(t0.c0 AS NUMERIC))))OR(UNICODE(x'3523')))) ORDER BY ((((((t0.c0)OR(x'494c')))OR(t0.c30))) BETWEEN (t0.c0) AND (((((((((((((t0.c73)AND(t0.c30)))OR(t0.c30)))AND(t0.c73)))OR(t0.c1)))AND(t0.c0)))AND(t0.c1))))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(vt0.c0 COLLATE NOCASE AS INTEGER));
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(t0.c73)), ((t0.c2)<=(vt0.c0)), (t0.c73 IN ()), ((t0.c2) NOT BETWEEN (t0.c73) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c73))))>=((CASE t0.c0  WHEN vt0.c1 THEN t0.c2 ELSE t0.c73 END, DATETIME(t0.c0, t0.c1, t0.c2, t0.c0, ''), ((((((((t0.c30)OR(x'')))OR(t0.c0)))OR(t0.c30)))AND(t0.c30)), ((t0.c73)&(t0.c2)), ABS(t0.c1))))) ORDER BY 0Xfffffffff0a08122;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(vt0.c1)))OR(t0.c73)), ((t0.c2)<=(vt0.c0)), (t0.c73 IN ()), ((t0.c2) NOT BETWEEN (t0.c73) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c73))))>=((CASE t0.c0  WHEN vt0.c1 THEN t0.c2 ELSE t0.c73 END, DATETIME(t0.c0, t0.c1, t0.c2, t0.c0, ''), ((((((((t0.c30)OR(x'')))OR(t0.c0)))OR(t0.c30)))AND(t0.c30)), ((t0.c73)&(t0.c2)), ABS(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0xfffffffff0a08122);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(t0.c73)), ((t0.c2)<=(vt0.c0)), (t0.c73 IN ()), ((t0.c2) NOT BETWEEN (t0.c73) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c73))))>=((CASE t0.c0  WHEN vt0.c1 THEN t0.c2 ELSE t0.c73 END, DATETIME(t0.c0, t0.c1, t0.c2, t0.c0, ''), ((((((((t0.c30)OR(x'')))OR(t0.c0)))OR(t0.c30)))AND(t0.c30)), ((t0.c73)&(t0.c2)), ABS(t0.c1))))) ORDER BY 0Xfffffffff0a08122;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)OR(vt0.c1)))OR(t0.c73)), ((t0.c2)<=(vt0.c0)), (t0.c73 IN ()), ((t0.c2) NOT BETWEEN (t0.c73) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c73))))>=((CASE t0.c0  WHEN vt0.c1 THEN t0.c2 ELSE t0.c73 END, DATETIME(t0.c0, t0.c1, t0.c2, t0.c0, ''), ((((((((t0.c30)OR(x'')))OR(t0.c0)))OR(t0.c30)))AND(t0.c30)), ((t0.c73)&(t0.c2)), ABS(t0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY 0xfffffffff0a08122);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((((((vt0.c1)OR(vt0.c1)))OR(t0.c73)), ((t0.c2)<=(vt0.c0)), (t0.c73 IN ()), ((t0.c2) NOT BETWEEN (t0.c73) AND (vt0.c0)), ((vt0.c0) BETWEEN (t0.c2) AND (t0.c73))))>=((CASE t0.c0  WHEN vt0.c1 THEN t0.c2 ELSE t0.c73 END, DATETIME(t0.c0, t0.c1, t0.c2, t0.c0, ''), ((((((((t0.c30)OR(x'')))OR(t0.c0)))OR(t0.c30)))AND(t0.c30)), ((t0.c73)&(t0.c2)), ABS(t0.c1))))) ORDER BY 0Xfffffffff0a08122;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)=(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)==(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)=(t0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1)==(t0.c0))) IS TRUE)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c1)=(t0.c0))) IS TRUE));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((NULL, 'Eኀ쎙sbeC0y', t0.c1)) NOT BETWEEN ((t0.c0, 0xffffffffd70610df, t0.c73)) AND ((t0.c1, t0.c0, t0.c30))) IN ())) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL, 'Eኀ쎙sbeC0y', t0.c1)) NOT BETWEEN ((t0.c0, 0xffffffffd70610df, t0.c73)) AND ((t0.c1, t0.c0, t0.c30))) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((NULL, 'Eኀ쎙sbeC0y', t0.c1)) NOT BETWEEN ((t0.c0, 0xffffffffd70610df, t0.c73)) AND ((t0.c1, t0.c0, t0.c30))) IN ())) ORDER BY t0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((NULL, 'Eኀ쎙sbeC0y', t0.c1)) NOT BETWEEN ((t0.c0, 0xffffffffd70610df, t0.c73)) AND ((t0.c1, t0.c0, t0.c30))) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY t0.c1  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((NULL, 'Eኀ쎙sbeC0y', t0.c1)) NOT BETWEEN ((t0.c0, 0xffffffffd70610df, t0.c73)) AND ((t0.c1, t0.c0, t0.c30))) IN ())) ORDER BY t0.c1  NULLS FIRST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((t0.c73)-(vt0.c0))) IS TRUE) WHERE (((((vt0.c1) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((t0.c73)-(vt0.c0))) IS TRUE));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((t0.c73)-(vt0.c0))) IS TRUE) WHERE (((((vt0.c1) NOTNULL)) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL)) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((t0.c73)-(vt0.c0))) IS TRUE));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON ((((t0.c73)-(vt0.c0))) IS TRUE) WHERE (((((vt0.c1) NOTNULL)) ISNULL));
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1 IN (vt0.c0))) IS TRUE)) ORDER BY (((t0.c2 IN ()))<=(t0.c0)), '' DESC  NULLS LAST, MAX((vt0.c0 IN ()), (NOT (t0.c73)), (t0.c1 IN (t0.c73, vt0.c1)), (NOT (NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2 IN ()))<=(t0.c0)), '' DESC  NULLS LAST, MAX((vt0.c0 IN ()), (NOT (t0.c73)), (t0.c1 IN (t0.c73, vt0.c1)), (NOT (NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1 IN (vt0.c0))) IS TRUE)) ORDER BY (((t0.c2 IN ()))<=(t0.c0)), '' DESC  NULLS LAST, MAX((vt0.c0 IN ()), (NOT (t0.c73)), (t0.c1 IN (t0.c73, vt0.c1)), (NOT (NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c2 IN ()))<=(t0.c0)), '' DESC  NULLS LAST, MAX((vt0.c0 IN ()), (NOT (t0.c73)), (t0.c1 IN (t0.c73, vt0.c1)), (NOT (NULL))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((vt0.c1 IN (vt0.c0))) IS TRUE)) ORDER BY (((t0.c2 IN ()))<=(t0.c0)), '' DESC  NULLS LAST, MAX((vt0.c0 IN ()), (NOT (t0.c73)), (t0.c1 IN (t0.c73, vt0.c1)), (NOT (NULL))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'') IS FALSE)) ORDER BY ((t0.c1 COLLATE RTRIM)<=(((t0.c0)==('R+'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c1 COLLATE RTRIM)<=(((t0.c0)==('R+'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'') IS FALSE)) ORDER BY ((t0.c1 COLLATE RTRIM)<=(((t0.c0)==('R+'))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c1 COLLATE RTRIM)<=(((t0.c0)==('R+'))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'') IS FALSE)) ORDER BY ((t0.c1 COLLATE RTRIM)<=(((t0.c0)==('R+'))))  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c2) IS FALSE))>=((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE))>=((+ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) IS FALSE))>=((+ (t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE))>=((+ (t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) IS FALSE))>=((+ (t0.c2)))));
SELECT ALL * FROM t0, vt0 WHERE (((x'')OR((~ (t0.c73)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')OR((~ (t0.c73))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((x'')OR((~ (t0.c73)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'')OR((~ (t0.c73))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((x'')OR((~ (t0.c73)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (NULL) AND (x'8918c816')), (+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) BETWEEN (NULL) AND (x'8918c816')), (+ (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (NULL) AND (x'8918c816')), (+ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((vt0.c0) BETWEEN (NULL) AND (x'8918c816')), (+ (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (TRIM(((vt0.c0) BETWEEN (NULL) AND (x'8918c816')), (+ (vt0.c1))));
SELECT * FROM t0 WHERE (((CAST(t0.c73 AS REAL))>>(((NULL)>=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c73 AS REAL))>>(((NULL)>=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c73 AS REAL))>>(((NULL)>=(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c73 AS REAL))>>(((NULL)>=(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((CAST(t0.c73 AS REAL))>>(((NULL)>=(t0.c2)))));
SELECT * FROM t0 WHERE (((((((((((((NULL)OR((- (t0.c0)))))OR(t0.c73 COLLATE RTRIM)))AND(0.10339722554365594)))AND(((t0.c30) BETWEEN (t0.c0) AND (t0.c73)))))OR(((t0.c1)&(t0.c30)))))AND(((((t0.c1)AND(t0.c73)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR((- (t0.c0)))))OR(t0.c73 COLLATE RTRIM)))AND(0.10339722554365594)))AND(((t0.c30) BETWEEN (t0.c0) AND (t0.c73)))))OR(((t0.c1)&(t0.c30)))))AND(((((t0.c1)AND(t0.c73)))AND(t0.c2))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((((((((((((NULL)OR((- (t0.c0)))))OR(t0.c73 COLLATE RTRIM)))AND(0.10339722554365594)))AND(((t0.c30) BETWEEN (t0.c0) AND (t0.c73)))))OR(((t0.c1)&(t0.c30)))))AND(((((t0.c1)AND(t0.c73)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((NULL)OR((- (t0.c0)))))OR(t0.c73 COLLATE RTRIM)))AND(0.10339722554365594)))AND(((t0.c30) BETWEEN (t0.c0) AND (t0.c73)))))OR(((t0.c1)&(t0.c30)))))AND(((((t0.c1)AND(t0.c73)))AND(t0.c2))))) IS TRUE)  as count FROM t0 NOT INDEXED);
SELECT * FROM t0 WHERE (((((((((((((NULL)OR((- (t0.c0)))))OR(t0.c73 COLLATE RTRIM)))AND(0.10339722554365594)))AND(((t0.c30) BETWEEN (t0.c0) AND (t0.c73)))))OR(((t0.c1)&(t0.c30)))))AND(((((t0.c1)AND(t0.c73)))AND(t0.c2)))));
SELECT * FROM t0, vt0 NOT INDEXED WHERE ((CAST(vt0.c1 AS TEXT) IN (((0.7371060849508564) BETWEEN (t0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((0.7371060849508564) BETWEEN (t0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 NOT INDEXED WHERE ((CAST(vt0.c1 AS TEXT) IN (((0.7371060849508564) BETWEEN (t0.c2) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c1 AS TEXT) IN (((0.7371060849508564) BETWEEN (t0.c2) AND (vt0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 NOT INDEXED WHERE ((CAST(vt0.c1 AS TEXT) IN (((0.7371060849508564) BETWEEN (t0.c2) AND (vt0.c1)))));
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)=('4O')))AND((t0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c0)=('4O')))AND((t0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) DESC);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)=('4O')))AND((t0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((((vt0.c0)=('4O')))AND((t0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) DESC);
SELECT * FROM t0, vt0 WHERE (NULL) ORDER BY ((((((((((vt0.c0)=('4O')))AND((t0.c1 IN ()))))OR(vt0.c0 COLLATE BINARY)))OR(CAST(vt0.c0 AS INTEGER))))AND(((t0.c1) BETWEEN (t0.c73) AND (t0.c30)))) DESC;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON x'' WHERE (((((((((((((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c30)))AND(t0.c1)))OR('1878468767')))OR(t0.c30)))AND('JᵉOWKx')))AND(t0.c2)))OR(t0.c30)))<>(((0.155604480756664) NOT NULL)))) ORDER BY ((((CAST(x'' AS BLOB))AND(((vt0.c1) IS TRUE))))AND(((((t0.c1)AND(t0.c30)))AND(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c30)))AND(t0.c1)))OR('1878468767')))OR(t0.c30)))AND('JᵉOWKx')))AND(t0.c2)))OR(t0.c30)))!=(((0.155604480756664) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON x'' ORDER BY ((((CAST(x'' AS BLOB))AND(((vt0.c1) IS TRUE))))AND(((((t0.c1)AND(t0.c30)))AND(t0.c1)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON x'' WHERE (((((((((((((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c30)))AND(t0.c1)))OR('1878468767')))OR(t0.c30)))AND('JᵉOWKx')))AND(t0.c2)))OR(t0.c30)))<>(((0.155604480756664) NOT NULL)))) ORDER BY ((((CAST(x'' AS BLOB))AND(((vt0.c1) IS TRUE))))AND(((((t0.c1)AND(t0.c30)))AND(t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c30)))AND(t0.c1)))OR('1878468767')))OR(t0.c30)))AND('JᵉOWKx')))AND(t0.c2)))OR(t0.c30)))!=(((0.155604480756664) NOT NULL)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON x'' ORDER BY ((((CAST(x'' AS BLOB))AND(((vt0.c1) IS TRUE))))AND(((((t0.c1)AND(t0.c30)))AND(t0.c1)))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON x'' WHERE (((((((((((((((((((((((vt0.c0)AND(t0.c0)))OR(t0.c2)))OR(vt0.c1)))AND(t0.c30)))AND(t0.c1)))OR('1878468767')))OR(t0.c30)))AND('JᵉOWKx')))AND(t0.c2)))OR(t0.c30)))<>(((0.155604480756664) NOT NULL)))) ORDER BY ((((CAST(x'' AS BLOB))AND(((vt0.c1) IS TRUE))))AND(((((t0.c1)AND(t0.c30)))AND(t0.c1))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)<=(vt0.c0))) IS FALSE)) ORDER BY ((t0.c1)*(((vt0.c1)IS NOT(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c1)*(((vt0.c1)IS NOT(t0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)<=(vt0.c0))) IS FALSE)) ORDER BY ((t0.c1)*(((vt0.c1)IS NOT(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)<=(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c1)*(((vt0.c1)IS NOT(t0.c2)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)<=(vt0.c0))) IS FALSE)) ORDER BY ((t0.c1)*(((vt0.c1)IS NOT(t0.c2))));
SELECT * FROM vt0 WHERE (CAST('1171247745' AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1171247745' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST('1171247745' AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST('1171247745' AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST('1171247745' AS NUMERIC)) ORDER BY (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM);
SELECT COUNT(*) FROM t0 WHERE (CAST('rx6_᱒4%' AS BLOB)) ORDER BY ((LOWER(t0.c30)) BETWEEN ((((t0.c2, t0.c30, t0.c2)) NOT BETWEEN ((t0.c30, t0.c73, t0.c0)) AND ((t0.c1, t0.c0, t0.c1)))) AND (t0.c2)), ((((NOT (t0.c2))))=((t0.c73)));
SELECT SUM(count) FROM (SELECT ((CAST('rx6_᱒4%' AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(t0.c30)) BETWEEN ((((t0.c2, t0.c30, t0.c2)) NOT BETWEEN ((t0.c30, t0.c73, t0.c0)) AND ((t0.c1, t0.c0, t0.c1)))) AND (t0.c2)), ((((NOT (t0.c2))))=((t0.c73))));
SELECT COUNT(*) FROM t0 WHERE (CAST('rx6_᱒4%' AS BLOB)) ORDER BY ((LOWER(t0.c30)) BETWEEN ((((t0.c2, t0.c30, t0.c2)) NOT BETWEEN ((t0.c30, t0.c73, t0.c0)) AND ((t0.c1, t0.c0, t0.c1)))) AND (t0.c2)), ((((NOT (t0.c2))))=((t0.c73)));
SELECT SUM(count) FROM (SELECT ((CAST('rx6_᱒4%' AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY ((LOWER(t0.c30)) BETWEEN ((((t0.c2, t0.c30, t0.c2)) NOT BETWEEN ((t0.c30, t0.c73, t0.c0)) AND ((t0.c1, t0.c0, t0.c1)))) AND (t0.c2)), ((((NOT (t0.c2))))=((t0.c73))));
SELECT COUNT(*) FROM t0 WHERE (CAST('rx6_᱒4%' AS BLOB)) ORDER BY ((LOWER(t0.c30)) BETWEEN ((((t0.c2, t0.c30, t0.c2)) NOT BETWEEN ((t0.c30, t0.c73, t0.c0)) AND ((t0.c1, t0.c0, t0.c1)))) AND (t0.c2)), ((((NOT (t0.c2))))=((t0.c73)));
SELECT COUNT(*) FROM t0 WHERE (RTRIM((('') NOT NULL)));
SELECT SUM(count) FROM (SELECT ((RTRIM((('') NOT NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (RTRIM((('') NOT NULL)));
SELECT SUM(count) FROM (SELECT ((RTRIM((('') NOT NULL))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (RTRIM((('') NOT NULL)));
SELECT COUNT(*) FROM vt0, t0 WHERE (HEX((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX((t0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0 WHERE (HEX((t0.c2 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((HEX((t0.c2 IN ()))) IS TRUE)  as count FROM vt0, t0 NOT INDEXED);
SELECT COUNT(*) FROM vt0, t0 WHERE (HEX((t0.c2 IN ())));
SELECT * FROM t0 WHERE (UNLIKELY(0.09030697623486594));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(0.09030697623486594)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UNLIKELY(0.09030697623486594));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(0.09030697623486594)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (UNLIKELY(0.09030697623486594));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1))!=((x'', vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1))<>((x'', vt0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1))!=((x'', vt0.c0, vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN ())) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1))<>((x'', vt0.c0, vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1 IN ())) NOTNULL)) ORDER BY (- ((((vt0.c0, vt0.c1, vt0.c1))!=((x'', vt0.c0, vt0.c1)))));
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT SUM(count) FROM (SELECT ((t0.c2) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c2);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((x'') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((x'') NOT NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((x'') NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c2)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((x'') NOT NULL))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c2)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((((x'') NOT NULL)))));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0, t0 WHERE ((((0xdf8c02e, x'', vt0.c1)) NOT BETWEEN (((((t0.c30))>=((t0.c73))), CAST(vt0.c1 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) AND ((((t0.c0) IS TRUE), (((t0.c1)) NOT BETWEEN ((t0.c73)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((0xeda0e0f)) AND ((t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((0Xdf8c02e, x'', vt0.c1)) NOT BETWEEN (((((t0.c30))>=((t0.c73))), CAST(vt0.c1 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) AND ((((t0.c0) IS TRUE), (((t0.c1)) NOT BETWEEN ((t0.c73)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((0Xeda0e0f)) AND ((t0.c2))))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((0xdf8c02e, x'', vt0.c1)) NOT BETWEEN (((((t0.c30))>=((t0.c73))), CAST(vt0.c1 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) AND ((((t0.c0) IS TRUE), (((t0.c1)) NOT BETWEEN ((t0.c73)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((0xeda0e0f)) AND ((t0.c2)))))));
SELECT SUM(count) FROM (SELECT (((((0Xdf8c02e, x'', vt0.c1)) NOT BETWEEN (((((t0.c30))>=((t0.c73))), CAST(vt0.c1 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) AND ((((t0.c0) IS TRUE), (((t0.c1)) NOT BETWEEN ((t0.c73)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((0Xeda0e0f)) AND ((t0.c2))))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((0xdf8c02e, x'', vt0.c1)) NOT BETWEEN (((((t0.c30))>=((t0.c73))), CAST(vt0.c1 AS NUMERIC), ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)))) AND ((((t0.c0) IS TRUE), (((t0.c1)) NOT BETWEEN ((t0.c73)) AND ((t0.c1))), (((t0.c0)) BETWEEN ((0xeda0e0f)) AND ((t0.c2)))))));
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c30 WHERE (LIKELY((~ (t0.c30)))) ORDER BY ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c0, t0.c30)) ISNULL) ASC, ((t0.c30)&(t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY((~ (t0.c30)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c30 ORDER BY ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c0, t0.c30)) ISNULL) ASC, ((t0.c30)&(t0.c2)) ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c30 WHERE (LIKELY((~ (t0.c30)))) ORDER BY ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c0, t0.c30)) ISNULL) ASC, ((t0.c30)&(t0.c2)) ASC;
SELECT SUM(count) FROM (SELECT ((LIKELY((~ (t0.c30)))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c30 ORDER BY ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c0, t0.c30)) ISNULL) ASC, ((t0.c30)&(t0.c2)) ASC);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c30 WHERE (LIKELY((~ (t0.c30)))) ORDER BY ((COALESCE(DISTINCT t0.c2, t0.c1, t0.c0, t0.c30)) ISNULL) ASC, ((t0.c30)&(t0.c2)) ASC;
SELECT * FROM t0 WHERE ((((t0.c73) NOT NULL) IN ('716045537'))) ORDER BY (NOT (t0.c73)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c73) NOT NULL) IN ('716045537'))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c73)) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c73) NOT NULL) IN ('716045537'))) ORDER BY (NOT (t0.c73)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c73) NOT NULL) IN ('716045537'))) IS TRUE)  as count FROM t0 ORDER BY (NOT (t0.c73)) COLLATE BINARY  NULLS LAST);
SELECT * FROM t0 WHERE ((((t0.c73) NOT NULL) IN ('716045537'))) ORDER BY (NOT (t0.c73)) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((x'' COLLATE NOCASE) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (x'' COLLATE NOCASE);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) ORDER BY (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))<(((vt0.c0 IN (vt0.c0))))), ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))&(x'15b4')), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))<(((vt0.c0 IN (vt0.c0))))), ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))&(x'15b4')), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) ORDER BY (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))<(((vt0.c0 IN (vt0.c0))))), ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))&(x'15b4')), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))<(((vt0.c0 IN (vt0.c0))))), ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))&(x'15b4')), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT NULL)) ORDER BY (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))))<(((vt0.c0 IN (vt0.c0))))), ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1)))&(x'15b4')), (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END IN ((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c1))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) ISNULL)) ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0, vt0.c1)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) ELSE -5.66379034E8 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0, vt0.c1)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) ELSE -5.66379034E8 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) ISNULL)) ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0, vt0.c1)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) ELSE -5.66379034E8 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0, vt0.c1)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) ELSE -5.66379034E8 END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER)) ISNULL)) ORDER BY CASE COALESCE(DISTINCT vt0.c0, vt0.c1, vt0.c0, vt0.c1)  WHEN ((vt0.c1)=(vt0.c1)) THEN ((vt0.c0)&(vt0.c0)) ELSE -5.66379034E8 END  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((((t0.c0)*(t0.c30))) NOT BETWEEN ((+ (t0.c30))) AND ((NOT (NULL))))) ORDER BY LIKELIHOOD((((t0.c30))<((t0.c1))), 0.4911475178727259);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(t0.c30))) NOT BETWEEN ((+ (t0.c30))) AND ((NOT (NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD((((t0.c30))<((t0.c1))), 0.4911475178727259));
SELECT * FROM t0, vt0 WHERE (((((t0.c0)*(t0.c30))) NOT BETWEEN ((+ (t0.c30))) AND ((NOT (NULL))))) ORDER BY LIKELIHOOD((((t0.c30))<((t0.c1))), 0.4911475178727259);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)*(t0.c30))) NOT BETWEEN ((+ (t0.c30))) AND ((NOT (NULL))))) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD((((t0.c30))<((t0.c1))), 0.4911475178727259));
SELECT * FROM t0, vt0 WHERE (((((t0.c0)*(t0.c30))) NOT BETWEEN ((+ (t0.c30))) AND ((NOT (NULL))))) ORDER BY LIKELIHOOD((((t0.c30))<((t0.c1))), 0.4911475178727259);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) IS FALSE))IS(t0.c1 COLLATE RTRIM))) ORDER BY ((CASE t0.c30  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN t0.c2 THEN x'' WHEN 0x50bac0b4 THEN t0.c2 WHEN vt0.c1 THEN t0.c73 ELSE t0.c1 END)<=(((t0.c1)+(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))IS(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE t0.c30  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN t0.c2 THEN x'' WHEN 0x50bac0b4 THEN t0.c2 WHEN vt0.c1 THEN t0.c73 ELSE t0.c1 END)<=(((t0.c1)+(t0.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) IS FALSE))IS(t0.c1 COLLATE RTRIM))) ORDER BY ((CASE t0.c30  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN t0.c2 THEN x'' WHEN 0x50bac0b4 THEN t0.c2 WHEN vt0.c1 THEN t0.c73 ELSE t0.c1 END)<=(((t0.c1)+(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS FALSE))IS(t0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CASE t0.c30  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN t0.c2 THEN x'' WHEN 0x50bac0b4 THEN t0.c2 WHEN vt0.c1 THEN t0.c73 ELSE t0.c1 END)<=(((t0.c1)+(t0.c0)))) ASC);
SELECT * FROM vt0, t0 WHERE (((((vt0.c0) IS FALSE))IS(t0.c1 COLLATE RTRIM))) ORDER BY ((CASE t0.c30  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c1 THEN t0.c2 WHEN t0.c2 THEN x'' WHEN 0x50bac0b4 THEN t0.c2 WHEN vt0.c1 THEN t0.c73 ELSE t0.c1 END)<=(((t0.c1)+(t0.c0)))) ASC;
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c73) NOT NULL)  WHEN NULL THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) WHEN (((0.9482048926351968))>((t0.c2))) THEN 0X1d17a095 WHEN UNLIKELY(t0.c30) THEN t0.c30 COLLATE NOCASE END) ORDER BY (('1700057701')<=(((t0.c0)<=(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c73) NOT NULL)  WHEN NULL THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) WHEN (((0.9482048926351968))>((t0.c2))) THEN 0X1d17a095 WHEN UNLIKELY(t0.c30) THEN t0.c30 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY (('1700057701')<=(((t0.c0)<=(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c73) NOT NULL)  WHEN NULL THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) WHEN (((0.9482048926351968))>((t0.c2))) THEN 0X1d17a095 WHEN UNLIKELY(t0.c30) THEN t0.c30 COLLATE NOCASE END) ORDER BY (('1700057701')<=(((t0.c0)<=(t0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c73) NOT NULL)  WHEN NULL THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) WHEN (((0.9482048926351968))>((t0.c2))) THEN 0X1d17a095 WHEN UNLIKELY(t0.c30) THEN t0.c30 COLLATE NOCASE END) IS TRUE)  as count FROM t0 ORDER BY (('1700057701')<=(((t0.c0)<=(t0.c0)))) ASC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE ((t0.c73) NOT NULL)  WHEN NULL THEN ((((((((t0.c2)OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))AND(t0.c1)) WHEN (((0.9482048926351968))>((t0.c2))) THEN 0X1d17a095 WHEN UNLIKELY(t0.c30) THEN t0.c30 COLLATE NOCASE END) ORDER BY (('1700057701')<=(((t0.c0)<=(t0.c0)))) ASC;
SELECT ALL * FROM t0 WHERE (((((t0.c2) IS TRUE))<<(t0.c73)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE))<<(t0.c73))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) IS TRUE))<<(t0.c73)));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE))<<(t0.c73))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((t0.c2) IS TRUE))<<(t0.c73)));
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c0))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (t0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))<((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))<((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))<((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))<((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))))<((JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c0, vt0.c0)))));
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN (x'3473') AND (CASE t0.c2  WHEN t0.c1 THEN 0.8208946857946583 ELSE vt0.c0 END)) WHERE (NULL) ORDER BY CASE CASE WHEN vt0.c1 THEN t0.c30 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END THEN t0.c30 WHEN t0.c0 THEN ((t0.c1)%('1527402782')) WHEN CASE t0.c30  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c73 THEN t0.c30 WHEN t0.c30 THEN 'hz,G' WHEN vt0.c0 THEN t0.c73 WHEN t0.c30 THEN t0.c0 ELSE NULL END THEN (((-1.390706039E9, t0.c0, t0.c1)) NOT BETWEEN ((t0.c30, t0.c1, t0.c73)) AND ((t0.c2, vt0.c1, vt0.c1))) ELSE ((t0.c2) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN (x'3473') AND (CASE t0.c2  WHEN t0.c1 THEN 0.8208946857946583 ELSE vt0.c0 END)) ORDER BY CASE CASE WHEN vt0.c1 THEN t0.c30 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END THEN t0.c30 WHEN t0.c0 THEN ((t0.c1)%('1527402782')) WHEN CASE t0.c30  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c73 THEN t0.c30 WHEN t0.c30 THEN 'hz,G' WHEN vt0.c0 THEN t0.c73 WHEN t0.c30 THEN t0.c0 ELSE NULL END THEN (((-1.390706039E9, t0.c0, t0.c1)) NOT BETWEEN ((t0.c30, t0.c1, t0.c73)) AND ((t0.c2, vt0.c1, vt0.c1))) ELSE ((t0.c2) NOTNULL) END  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN (x'3473') AND (CASE t0.c2  WHEN t0.c1 THEN 0.8208946857946583 ELSE vt0.c0 END)) WHERE (NULL) ORDER BY CASE CASE WHEN vt0.c1 THEN t0.c30 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END THEN t0.c30 WHEN t0.c0 THEN ((t0.c1)%('1527402782')) WHEN CASE t0.c30  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c73 THEN t0.c30 WHEN t0.c30 THEN 'hz,G' WHEN vt0.c0 THEN t0.c73 WHEN t0.c30 THEN t0.c0 ELSE NULL END THEN (((-1.390706039E9, t0.c0, t0.c1)) NOT BETWEEN ((t0.c30, t0.c1, t0.c73)) AND ((t0.c2, vt0.c1, vt0.c1))) ELSE ((t0.c2) NOTNULL) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN (x'3473') AND (CASE t0.c2  WHEN t0.c1 THEN 0.8208946857946583 ELSE vt0.c0 END)) ORDER BY CASE CASE WHEN vt0.c1 THEN t0.c30 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END THEN t0.c30 WHEN t0.c0 THEN ((t0.c1)%('1527402782')) WHEN CASE t0.c30  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c73 THEN t0.c30 WHEN t0.c30 THEN 'hz,G' WHEN vt0.c0 THEN t0.c73 WHEN t0.c30 THEN t0.c0 ELSE NULL END THEN (((-1.390706039E9, t0.c0, t0.c1)) NOT BETWEEN ((t0.c30, t0.c1, t0.c73)) AND ((t0.c2, vt0.c1, vt0.c1))) ELSE ((t0.c2) NOTNULL) END  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((CAST(t0.c0 AS REAL)) BETWEEN (x'3473') AND (CASE t0.c2  WHEN t0.c1 THEN 0.8208946857946583 ELSE vt0.c0 END)) WHERE (NULL) ORDER BY CASE CASE WHEN vt0.c1 THEN t0.c30 WHEN t0.c2 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 ELSE vt0.c0 END  WHEN CASE t0.c1  WHEN t0.c2 THEN t0.c0 ELSE vt0.c0 END THEN t0.c30 WHEN t0.c0 THEN ((t0.c1)%('1527402782')) WHEN CASE t0.c30  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c73 THEN t0.c30 WHEN t0.c30 THEN 'hz,G' WHEN vt0.c0 THEN t0.c73 WHEN t0.c30 THEN t0.c0 ELSE NULL END THEN (((-1.390706039E9, t0.c0, t0.c1)) NOT BETWEEN ((t0.c30, t0.c1, t0.c73)) AND ((t0.c2, vt0.c1, vt0.c1))) ELSE ((t0.c2) NOTNULL) END  NULLS LAST;
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c30, t0.c0, t0.c73)) BETWEEN ((t0.c30, t0.c1, t0.c2)) AND ((t0.c73, t0.c2, t0.c0)))))) ORDER BY ((((((0.09001666204953529)OR(t0.c73)))AND(t0.c1)))=(((((t0.c30)AND(t0.c30)))AND(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c30, t0.c0, t0.c73)) BETWEEN ((t0.c30, t0.c1, t0.c2)) AND ((t0.c73, t0.c2, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((0.09001666204953529)OR(t0.c73)))AND(t0.c1)))=(((((t0.c30)AND(t0.c30)))AND(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c30, t0.c0, t0.c73)) BETWEEN ((t0.c30, t0.c1, t0.c2)) AND ((t0.c73, t0.c2, t0.c0)))))) ORDER BY ((((((0.09001666204953529)OR(t0.c73)))AND(t0.c1)))=(((((t0.c30)AND(t0.c30)))AND(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((t0.c30, t0.c0, t0.c73)) BETWEEN ((t0.c30, t0.c1, t0.c2)) AND ((t0.c73, t0.c2, t0.c0)))))) IS TRUE)  as count FROM t0 ORDER BY ((((((0.09001666204953529)OR(t0.c73)))AND(t0.c1)))=(((((t0.c30)AND(t0.c30)))AND(t0.c2)))));
SELECT ALL * FROM t0 WHERE ((~ ((((t0.c30, t0.c0, t0.c73)) BETWEEN ((t0.c30, t0.c1, t0.c2)) AND ((t0.c73, t0.c2, t0.c0)))))) ORDER BY ((((((0.09001666204953529)OR(t0.c73)))AND(t0.c1)))=(((((t0.c30)AND(t0.c30)))AND(t0.c2))));
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c1)OR(t0.c30)))OR(t0.c2)))AND(t0.c2)))AND(t0.c30))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((t0.c1)OR(t0.c30)))OR(t0.c2)))AND(t0.c2)))AND(t0.c30)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c1)OR(t0.c30)))OR(t0.c2)))AND(t0.c2)))AND(t0.c30))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((((((((t0.c1)OR(t0.c30)))OR(t0.c2)))AND(t0.c2)))AND(t0.c30)))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (TRIM(DISTINCT ((((((((t0.c1)OR(t0.c30)))OR(t0.c2)))AND(t0.c2)))AND(t0.c30))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c73)IS NOT(t0.c0)))+(((t0.c30) IS TRUE)))) ORDER BY CASE WHEN '' THEN t0.c30 WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((CAST(t0.c73 AS BLOB)) NOT BETWEEN (0.43212082781126515) AND (((t0.c0)GLOB(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c73)IS NOT(t0.c0)))+(((t0.c30) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN '' THEN t0.c30 WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((CAST(t0.c73 AS BLOB)) NOT BETWEEN (0.43212082781126515) AND (((t0.c0)GLOB(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c73)IS NOT(t0.c0)))+(((t0.c30) IS TRUE)))) ORDER BY CASE WHEN '' THEN t0.c30 WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((CAST(t0.c73 AS BLOB)) NOT BETWEEN (0.43212082781126515) AND (((t0.c0)GLOB(t0.c2))));
SELECT SUM(count) FROM (SELECT ((((((t0.c73)IS NOT(t0.c0)))+(((t0.c30) IS TRUE)))) IS TRUE)  as count FROM t0 ORDER BY CASE WHEN '' THEN t0.c30 WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((CAST(t0.c73 AS BLOB)) NOT BETWEEN (0.43212082781126515) AND (((t0.c0)GLOB(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((((t0.c73)IS NOT(t0.c0)))+(((t0.c30) IS TRUE)))) ORDER BY CASE WHEN '' THEN t0.c30 WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 END COLLATE RTRIM DESC  NULLS LAST, ((CAST(t0.c73 AS BLOB)) NOT BETWEEN (0.43212082781126515) AND (((t0.c0)GLOB(t0.c2))));
SELECT ALL COUNT(*) FROM vt0 WHERE (0.14972010537588842);
SELECT SUM(count) FROM (SELECT ((0.14972010537588842) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.14972010537588842);
SELECT SUM(count) FROM (SELECT ((0.14972010537588842) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (0.14972010537588842);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)<>(t0.c1)))||(((t0.c73)IS NOT(t0.c30))))) ORDER BY t0.c30;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)!=(t0.c1)))||(((t0.c73)IS NOT(t0.c30))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c30);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)<>(t0.c1)))||(((t0.c73)IS NOT(t0.c30))))) ORDER BY t0.c30;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)!=(t0.c1)))||(((t0.c73)IS NOT(t0.c30))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c30);
SELECT ALL * FROM vt0, t0 WHERE (((((vt0.c1)<>(t0.c1)))||(((t0.c73)IS NOT(t0.c30))))) ORDER BY t0.c30;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((UNLIKELY(DISTINCT t0.c73)) IS FALSE) WHERE ((((~ (x'')))-((((t0.c2, t0.c2, t0.c2))>=((t0.c0, t0.c0, t0.c30)))))) ORDER BY NULLIF(((t0.c0) NOT NULL), (- (t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (x'')))-((((t0.c2, t0.c2, t0.c2))>=((t0.c0, t0.c0, t0.c30)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((UNLIKELY(DISTINCT t0.c73)) IS FALSE) ORDER BY NULLIF(((t0.c0) NOT NULL), (- (t0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((UNLIKELY(DISTINCT t0.c73)) IS FALSE) WHERE ((((~ (x'')))-((((t0.c2, t0.c2, t0.c2))>=((t0.c0, t0.c0, t0.c30)))))) ORDER BY NULLIF(((t0.c0) NOT NULL), (- (t0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (x'')))-((((t0.c2, t0.c2, t0.c2))>=((t0.c0, t0.c0, t0.c30)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON ((UNLIKELY(DISTINCT t0.c73)) IS FALSE) ORDER BY NULLIF(((t0.c0) NOT NULL), (- (t0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON ((UNLIKELY(DISTINCT t0.c73)) IS FALSE) WHERE ((((~ (x'')))-((((t0.c2, t0.c2, t0.c2))>=((t0.c0, t0.c0, t0.c30)))))) ORDER BY NULLIF(((t0.c0) NOT NULL), (- (t0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((COALESCE(DISTINCT t0.c73, vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)), NULL))>=((((vt0.c0)IS NOT(t0.c73)), LIKELIHOOD(t0.c2, 0.11824220985533118), ((((0.6273275811830826)AND(t0.c0)))OR(vt0.c1))))) WHERE (((vt0.c1 COLLATE BINARY)==((t0.c2 IN (t0.c73)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)==((t0.c2 IN (t0.c73))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((COALESCE(DISTINCT t0.c73, vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)), NULL))>=((((vt0.c0)IS NOT(t0.c73)), LIKELIHOOD(t0.c2, 0.11824220985533118), ((((0.6273275811830826)AND(t0.c0)))OR(vt0.c1))))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((COALESCE(DISTINCT t0.c73, vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)), NULL))>=((((vt0.c0)IS NOT(t0.c73)), LIKELIHOOD(t0.c2, 0.11824220985533118), ((((0.6273275811830826)AND(t0.c0)))OR(vt0.c1))))) WHERE (((vt0.c1 COLLATE BINARY)==((t0.c2 IN (t0.c73)))));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY)==((t0.c2 IN (t0.c73))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((COALESCE(DISTINCT t0.c73, vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)), NULL))>=((((vt0.c0)IS NOT(t0.c73)), LIKELIHOOD(t0.c2, 0.11824220985533118), ((((0.6273275811830826)AND(t0.c0)))OR(vt0.c1))))));
SELECT ALL * FROM vt0 CROSS JOIN t0 ON (((COALESCE(DISTINCT t0.c73, vt0.c0), ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)), NULL))>=((((vt0.c0)IS NOT(t0.c73)), LIKELIHOOD(t0.c2, 0.11824220985533118), ((((0.6273275811830826)AND(t0.c0)))OR(vt0.c1))))) WHERE (((vt0.c1 COLLATE BINARY)==((t0.c2 IN (t0.c73)))));
SELECT ALL * FROM vt0 WHERE ('-762197419') ORDER BY ((NULL) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (('-762197419') IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ('-762197419') ORDER BY ((NULL) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT (('-762197419') IS TRUE)  as count FROM vt0 ORDER BY ((NULL) IS TRUE) ASC);
SELECT ALL * FROM vt0 WHERE ('-762197419') ORDER BY ((NULL) IS TRUE) ASC;
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL))-((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL))-((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL))-((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOTNULL))-((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOTNULL))-((+ (vt0.c1)))));
SELECT ALL * FROM t0 WHERE ('791358459') ORDER BY (((t0.c2)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((t0.c2)OR(t0.c73)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (('791358459') IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((t0.c2)OR(t0.c73)))AND(t0.c1))))));
SELECT ALL * FROM t0 WHERE ('791358459') ORDER BY (((t0.c2)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((t0.c2)OR(t0.c73)))AND(t0.c1)))));
SELECT SUM(count) FROM (SELECT (('791358459') IS TRUE)  as count FROM t0 ORDER BY (((t0.c2)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((t0.c2)OR(t0.c73)))AND(t0.c1))))));
SELECT ALL * FROM t0 WHERE ('791358459') ORDER BY (((t0.c2)) BETWEEN ((CAST(NULL AS INTEGER))) AND ((((((t0.c2)OR(t0.c73)))AND(t0.c1)))));
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (0.07402858072399665) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (0.07402858072399665) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (0.07402858072399665) AND (UPPER(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (0.07402858072399665) AND (UPPER(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (0.07402858072399665) AND (UPPER(vt0.c0))));
SELECT * FROM vt0, t0 WHERE ((((json_extract(t0.c73, t0.c73, t0.c0, vt0.c0)))<=((((t0.c2) BETWEEN (t0.c1) AND (t0.c30)))))) ORDER BY t0.c30  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_extract(t0.c73, t0.c73, t0.c0, vt0.c0)))<=((((t0.c2) BETWEEN (t0.c1) AND (t0.c30)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c30  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((json_extract(t0.c73, t0.c73, t0.c0, vt0.c0)))<=((((t0.c2) BETWEEN (t0.c1) AND (t0.c30)))))) ORDER BY t0.c30  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((json_extract(t0.c73, t0.c73, t0.c0, vt0.c0)))<=((((t0.c2) BETWEEN (t0.c1) AND (t0.c30)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c30  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((((t0.c73)OR(t0.c1)))AND(t0.c0)) AS BLOB)) ORDER BY (+ ((t0.c1 IN ())))  NULLS LAST, (((t0.c0)) BETWEEN ((t0.c73)) AND ((((t0.c1)*(t0.c73)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c73)OR(t0.c1)))AND(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (+ ((t0.c1 IN ())))  NULLS LAST, (((t0.c0)) BETWEEN ((t0.c73)) AND ((((t0.c1)*(t0.c73)))))  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((((t0.c73)OR(t0.c1)))AND(t0.c0)) AS BLOB)) ORDER BY (+ ((t0.c1 IN ())))  NULLS LAST, (((t0.c0)) BETWEEN ((t0.c73)) AND ((((t0.c1)*(t0.c73)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((t0.c73)OR(t0.c1)))AND(t0.c0)) AS BLOB)) IS TRUE)  as count FROM t0 ORDER BY (+ ((t0.c1 IN ())))  NULLS LAST, (((t0.c0)) BETWEEN ((t0.c73)) AND ((((t0.c1)*(t0.c73)))))  NULLS FIRST);
SELECT * FROM t0 WHERE (CAST(((((t0.c73)OR(t0.c1)))AND(t0.c0)) AS BLOB)) ORDER BY (+ ((t0.c1 IN ())))  NULLS LAST, (((t0.c0)) BETWEEN ((t0.c73)) AND ((((t0.c1)*(t0.c73)))))  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (x''))) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((((t0.c30)AND(t0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (vt0.c0) AND (x''))) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((((t0.c30)AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (x''))) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((((t0.c30)AND(t0.c0)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) NOT BETWEEN (vt0.c0) AND (x''))) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((((t0.c30)AND(t0.c0)))OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2) NOT BETWEEN (vt0.c0) AND (x''))) NOT BETWEEN (t0.c2 COLLATE BINARY) AND (((((t0.c30)AND(t0.c0)))OR(t0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE ((t0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((t0.c1 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((t0.c1 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((t0.c1 IN ()) COLLATE RTRIM);
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) IS TRUE) WHERE (((vt0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) IS TRUE) WHERE (((vt0.c0 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) IS TRUE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c1) IS TRUE)) IS TRUE) WHERE (((vt0.c0 COLLATE BINARY) NOT NULL));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((vt0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((vt0.c1 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (+ ((vt0.c1 IN ()))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (+ ((vt0.c1 IN ()))) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE ('Z0N?S0젫\r좣') ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Z0N?S0젫\r좣') IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ('Z0N?S0젫\r좣') ORDER BY t0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('Z0N?S0젫\r좣') IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ('Z0N?S0젫\r좣') ORDER BY t0.c0  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0, t0 WHERE (((((HEX(t0.c73))AND(((vt0.c0)<<(t0.c30)))))OR(('qk\<' IN ())))) ORDER BY ((((t0.c0, vt0.c0, t0.c2))>=((t0.c2, vt0.c0, t0.c2))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((HEX(t0.c73))AND(((vt0.c0)<<(t0.c30)))))OR(('qk\<' IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0, vt0.c0, t0.c2))>=((t0.c2, vt0.c0, t0.c2))) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((HEX(t0.c73))AND(((vt0.c0)<<(t0.c30)))))OR(('qk\<' IN ())))) ORDER BY ((((t0.c0, vt0.c0, t0.c2))>=((t0.c2, vt0.c0, t0.c2))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((HEX(t0.c73))AND(((vt0.c0)<<(t0.c30)))))OR(('qk\<' IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c0, vt0.c0, t0.c2))>=((t0.c2, vt0.c0, t0.c2))) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (((((HEX(t0.c73))AND(((vt0.c0)<<(t0.c30)))))OR(('qk\<' IN ())))) ORDER BY ((((t0.c0, vt0.c0, t0.c2))>=((t0.c2, vt0.c0, t0.c2))) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((NULL)&((t0.c30 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&((t0.c30 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((NULL)&((t0.c30 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL)&((t0.c30 IN ())))) IS TRUE)  as count FROM vt0 NATURAL JOIN t0);
SELECT * FROM vt0 NATURAL JOIN t0 WHERE (((NULL)&((t0.c30 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT ((t0.c0 IN (t0.c30, t0.c30))))) ORDER BY ((((((t0.c30)AND(vt0.c1)))OR(2068549799)))<(((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c0 IN (t0.c30, t0.c30))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c30)AND(vt0.c1)))OR(2068549799)))<(((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT ((t0.c0 IN (t0.c30, t0.c30))))) ORDER BY ((((((t0.c30)AND(vt0.c1)))OR(2068549799)))<(((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((t0.c0 IN (t0.c30, t0.c30))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((t0.c30)AND(vt0.c1)))OR(2068549799)))<(((vt0.c1) IS FALSE)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT ((t0.c0 IN (t0.c30, t0.c30))))) ORDER BY ((((((t0.c30)AND(vt0.c1)))OR(2068549799)))<(((vt0.c1) IS FALSE)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (CAST(vt0.c1 AS REAL) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (CAST(vt0.c1 AS REAL) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c1 AS REAL) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((- ((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))) ORDER BY (CAST(vt0.c1 AS REAL) IN (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)), (+ (vt0.c0))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c0 IN ('')) COLLATE RTRIM) ORDER BY CAST((- (t0.c73)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ('')) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((- (t0.c73)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c0 IN ('')) COLLATE RTRIM) ORDER BY CAST((- (t0.c73)) AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c0 IN ('')) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST((- (t0.c73)) AS BLOB)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((t0.c0 IN ('')) COLLATE RTRIM) ORDER BY CAST((- (t0.c73)) AS BLOB)  NULLS LAST;
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((CASE WHEN t0.c2 THEN t0.c73 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN t0.c73 END IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((CASE WHEN t0.c2 THEN t0.c73 END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE WHEN t0.c2 THEN t0.c73 END IN ())) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0 NOT INDEXED, t0 WHERE ((CASE WHEN t0.c2 THEN t0.c73 END IN ()));
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c73)) BETWEEN ((t0.c1)) AND ((t0.c2))))OR(t0.c73 COLLATE BINARY)))OR(((t0.c73) BETWEEN (t0.c1) AND (t0.c73)))))AND(COALESCE(t0.c73, t0.c30))))AND(t0.c1 COLLATE NOCASE))) ORDER BY (((t0.c73)) BETWEEN ((x'')) AND ((((((t0.c73)AND(x'')))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c73)) BETWEEN ((t0.c1)) AND ((t0.c2))))OR(t0.c73 COLLATE BINARY)))OR(((t0.c73) BETWEEN (t0.c1) AND (t0.c73)))))AND(COALESCE(t0.c73, t0.c30))))AND(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c73)) BETWEEN ((x'')) AND ((((((t0.c73)AND(x'')))OR(t0.c2))))));
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c73)) BETWEEN ((t0.c1)) AND ((t0.c2))))OR(t0.c73 COLLATE BINARY)))OR(((t0.c73) BETWEEN (t0.c1) AND (t0.c73)))))AND(COALESCE(t0.c73, t0.c30))))AND(t0.c1 COLLATE NOCASE))) ORDER BY (((t0.c73)) BETWEEN ((x'')) AND ((((((t0.c73)AND(x'')))OR(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((((((((((((t0.c73)) BETWEEN ((t0.c1)) AND ((t0.c2))))OR(t0.c73 COLLATE BINARY)))OR(((t0.c73) BETWEEN (t0.c1) AND (t0.c73)))))AND(COALESCE(t0.c73, t0.c30))))AND(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c73)) BETWEEN ((x'')) AND ((((((t0.c73)AND(x'')))OR(t0.c2))))));
SELECT ALL * FROM t0 WHERE ((((((((((((t0.c73)) BETWEEN ((t0.c1)) AND ((t0.c2))))OR(t0.c73 COLLATE BINARY)))OR(((t0.c73) BETWEEN (t0.c1) AND (t0.c73)))))AND(COALESCE(t0.c73, t0.c30))))AND(t0.c1 COLLATE NOCASE))) ORDER BY (((t0.c73)) BETWEEN ((x'')) AND ((((((t0.c73)AND(x'')))OR(t0.c2)))));
SELECT * FROM vt0, t0 WHERE ((((t0.c73)) NOT BETWEEN ((((t0.c1)OR(t0.c30)))) AND (((x'' IN (t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c73)) NOT BETWEEN ((((t0.c1)OR(t0.c30)))) AND (((x'' IN (t0.c73)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c73)) NOT BETWEEN ((((t0.c1)OR(t0.c30)))) AND (((x'' IN (t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c73)) NOT BETWEEN ((((t0.c1)OR(t0.c30)))) AND (((x'' IN (t0.c73)))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c73)) NOT BETWEEN ((((t0.c1)OR(t0.c30)))) AND (((x'' IN (t0.c73))))));
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 END) IS TRUE));
SELECT ALL * FROM t0, vt0 WHERE (CAST('-686275506' COLLATE NOCASE AS TEXT)) ORDER BY ABS(((t0.c30)OR(t0.c73))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('-686275506' COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(((t0.c30)OR(t0.c73))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (CAST('-686275506' COLLATE NOCASE AS TEXT)) ORDER BY ABS(((t0.c30)OR(t0.c73))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST('-686275506' COLLATE NOCASE AS TEXT)) IS TRUE)  as count FROM t0, vt0 ORDER BY ABS(((t0.c30)OR(t0.c73))) ASC);
SELECT ALL * FROM t0, vt0 WHERE (CAST('-686275506' COLLATE NOCASE AS TEXT)) ORDER BY ABS(((t0.c30)OR(t0.c73))) ASC;
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN (+ (t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, t0.c30) THEN ((t0.c30) BETWEEN (t0.c2) AND (t0.c73)) WHEN ((t0.c30)>>(t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c73 ELSE t0.c30 END END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN (+ (t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, t0.c30) THEN ((t0.c30) BETWEEN (t0.c2) AND (t0.c73)) WHEN ((t0.c30)>>(t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c73 ELSE t0.c30 END END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN (+ (t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, t0.c30) THEN ((t0.c30) BETWEEN (t0.c2) AND (t0.c73)) WHEN ((t0.c30)>>(t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c73 ELSE t0.c30 END END);
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN (+ (t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, t0.c30) THEN ((t0.c30) BETWEEN (t0.c2) AND (t0.c73)) WHEN ((t0.c30)>>(t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c73 ELSE t0.c30 END END) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN (+ (t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c0 END WHEN TRIM(DISTINCT t0.c0, t0.c30) THEN ((t0.c30) BETWEEN (t0.c2) AND (t0.c73)) WHEN ((t0.c30)>>(t0.c2)) THEN CASE WHEN t0.c73 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c73 ELSE t0.c30 END END);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c0);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((CAST(t0.c2 AS INTEGER), t0.c30, (t0.c2 IN ())))<((((x'0e506818') ISNULL), ((t0.c0)==(t0.c0)), t0.c0 COLLATE RTRIM))) WHERE (((t0.c73 COLLATE RTRIM) IS FALSE)) ORDER BY ((0.7155966997259009) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c73 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((CAST(t0.c2 AS INTEGER), t0.c30, (t0.c2 IN ())))<((((x'0e506818') ISNULL), ((t0.c0)=(t0.c0)), t0.c0 COLLATE RTRIM))) ORDER BY ((0.7155966997259009) NOT NULL) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((CAST(t0.c2 AS INTEGER), t0.c30, (t0.c2 IN ())))<((((x'0e506818') ISNULL), ((t0.c0)==(t0.c0)), t0.c0 COLLATE RTRIM))) WHERE (((t0.c73 COLLATE RTRIM) IS FALSE)) ORDER BY ((0.7155966997259009) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c73 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON (((CAST(t0.c2 AS INTEGER), t0.c30, (t0.c2 IN ())))<((((x'0e506818') ISNULL), ((t0.c0)=(t0.c0)), t0.c0 COLLATE RTRIM))) ORDER BY ((0.7155966997259009) NOT NULL) ASC);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON (((CAST(t0.c2 AS INTEGER), t0.c30, (t0.c2 IN ())))<((((x'0e506818') ISNULL), ((t0.c0)==(t0.c0)), t0.c0 COLLATE RTRIM))) WHERE (((t0.c73 COLLATE RTRIM) IS FALSE)) ORDER BY ((0.7155966997259009) NOT NULL) ASC;
SELECT ALL * FROM vt0, t0 WHERE (t0.c73);
SELECT SUM(count) FROM (SELECT ((t0.c73) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c73);
SELECT SUM(count) FROM (SELECT ((t0.c73) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (t0.c73);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c30)>=(t0.c0)) IN (0.25755826568343554)) WHERE (IFNULL('914969351', '')) ORDER BY json_quote((- (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL('914969351', '')) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c30)>=(t0.c0)) IN (0.25755826568343554)) ORDER BY json_quote((- (t0.c1))) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c30)>=(t0.c0)) IN (0.25755826568343554)) WHERE (IFNULL('914969351', '')) ORDER BY json_quote((- (t0.c1))) ASC;
SELECT SUM(count) FROM (SELECT ((IFNULL('914969351', '')) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c30)>=(t0.c0)) IN (0.25755826568343554)) ORDER BY json_quote((- (t0.c1))) ASC);
SELECT * FROM vt0 LEFT OUTER JOIN t0 ON (((t0.c30)>=(t0.c0)) IN (0.25755826568343554)) WHERE (IFNULL('914969351', '')) ORDER BY json_quote((- (t0.c1))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('11')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (~ (x'')) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('11')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (x'')) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('11')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (~ (x'')) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((('11')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (~ (x'')) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((('11')) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (~ (x'')) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (- (t0.c2)) THEN (NOT (t0.c1)) ELSE ABS(DISTINCT t0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c2)) THEN (NOT (t0.c1)) ELSE ABS(DISTINCT t0.c1) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (- (t0.c2)) THEN (NOT (t0.c1)) ELSE ABS(DISTINCT t0.c1) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (t0.c2)) THEN (NOT (t0.c1)) ELSE ABS(DISTINCT t0.c1) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (CASE WHEN (- (t0.c2)) THEN (NOT (t0.c1)) ELSE ABS(DISTINCT t0.c1) END);
SELECT * FROM t0, vt0 WHERE (((((LIKELIHOOD(t0.c1, 0.9927596871791502))AND(HEX(DISTINCT t0.c0))))OR((((t0.c30)) BETWEEN ((t0.c73)) AND ((t0.c0)))))) ORDER BY (+ (CAST(x'dbe6' AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(t0.c1, 0.9927596871791502))AND(HEX(DISTINCT t0.c0))))OR((((t0.c30)) BETWEEN ((t0.c73)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (CAST(x'dbe6' AS TEXT))) ASC);
SELECT * FROM t0, vt0 WHERE (((((LIKELIHOOD(t0.c1, 0.9927596871791502))AND(HEX(DISTINCT t0.c0))))OR((((t0.c30)) BETWEEN ((t0.c73)) AND ((t0.c0)))))) ORDER BY (+ (CAST(x'dbe6' AS TEXT))) ASC;
SELECT SUM(count) FROM (SELECT ((((((LIKELIHOOD(t0.c1, 0.9927596871791502))AND(HEX(DISTINCT t0.c0))))OR((((t0.c30)) BETWEEN ((t0.c73)) AND ((t0.c0)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ (CAST(x'dbe6' AS TEXT))) ASC);
SELECT * FROM t0, vt0 WHERE (((((LIKELIHOOD(t0.c1, 0.9927596871791502))AND(HEX(DISTINCT t0.c0))))OR((((t0.c30)) BETWEEN ((t0.c73)) AND ((t0.c0)))))) ORDER BY (+ (CAST(x'dbe6' AS TEXT))) ASC;
SELECT * FROM vt0, t0 WHERE (((((((((((((((((((vt0.c0)<<('1462414062')))AND(((x'') NOT BETWEEN (t0.c2) AND (NULL)))))OR(((t0.c73)<(t0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((NULL) NOT BETWEEN (t0.c1) AND (vt0.c0)))))AND(LIKELIHOOD(t0.c73, 0.8071156815648249))))AND(t0.c1)))OR(CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN t0.c73 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 END)))OR(t0.c73))) ORDER BY ((((vt0.c1)<>(t0.c73)))>=(((t0.c73) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((vt0.c0)<<('1462414062')))AND(((x'') NOT BETWEEN (t0.c2) AND (NULL)))))OR(((t0.c73)<(t0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((NULL) NOT BETWEEN (t0.c1) AND (vt0.c0)))))AND(LIKELIHOOD(t0.c73, 0.8071156815648249))))AND(t0.c1)))OR(CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN t0.c73 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 END)))OR(t0.c73))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)<>(t0.c73)))>=(((t0.c73) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((((((((((((((((((vt0.c0)<<('1462414062')))AND(((x'') NOT BETWEEN (t0.c2) AND (NULL)))))OR(((t0.c73)<(t0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((NULL) NOT BETWEEN (t0.c1) AND (vt0.c0)))))AND(LIKELIHOOD(t0.c73, 0.8071156815648249))))AND(t0.c1)))OR(CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN t0.c73 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 END)))OR(t0.c73))) ORDER BY ((((vt0.c1)<>(t0.c73)))>=(((t0.c73) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((vt0.c0)<<('1462414062')))AND(((x'') NOT BETWEEN (t0.c2) AND (NULL)))))OR(((t0.c73)<(t0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((NULL) NOT BETWEEN (t0.c1) AND (vt0.c0)))))AND(LIKELIHOOD(t0.c73, 0.8071156815648249))))AND(t0.c1)))OR(CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN t0.c73 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 END)))OR(t0.c73))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((vt0.c1)<>(t0.c73)))>=(((t0.c73) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT * FROM vt0, t0 WHERE (((((((((((((((((((vt0.c0)<<('1462414062')))AND(((x'') NOT BETWEEN (t0.c2) AND (NULL)))))OR(((t0.c73)<(t0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((NULL) NOT BETWEEN (t0.c1) AND (vt0.c0)))))AND(LIKELIHOOD(t0.c73, 0.8071156815648249))))AND(t0.c1)))OR(CASE t0.c30  WHEN t0.c0 THEN t0.c0 WHEN t0.c73 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 END)))OR(t0.c73))) ORDER BY ((((vt0.c1)<>(t0.c73)))>=(((t0.c73) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT * FROM t0, vt0 WHERE (('-1046568454' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1046568454' IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (('-1046568454' IN ()));
SELECT SUM(count) FROM (SELECT ALL ((('-1046568454' IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (('-1046568454' IN ()));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (t0.c30 COLLATE NOCASE))) ORDER BY (((((((((~ (t0.c73)))AND(((t0.c2)IS(t0.c30)))))OR(vt0.c0 COLLATE BINARY)))AND((('67*h2M꥚') BETWEEN (0.5808755962256152) AND (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) DESC, CAST((((vt0.c0))>=((t0.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c30 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((~ (t0.c73)))AND(((t0.c2)IS(t0.c30)))))OR(vt0.c0 COLLATE BINARY)))AND((('67*h2M꥚') BETWEEN (0.5808755962256152) AND (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) DESC, CAST((((vt0.c0))>=((t0.c0))) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (t0.c30 COLLATE NOCASE))) ORDER BY (((((((((~ (t0.c73)))AND(((t0.c2)IS(t0.c30)))))OR(vt0.c0 COLLATE BINARY)))AND((('67*h2M꥚') BETWEEN (0.5808755962256152) AND (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) DESC, CAST((((vt0.c0))>=((t0.c0))) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t0.c30 COLLATE NOCASE))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((((((~ (t0.c73)))AND(((t0.c2)IS(t0.c30)))))OR(vt0.c0 COLLATE BINARY)))AND((('67*h2M꥚') BETWEEN (0.5808755962256152) AND (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) DESC, CAST((((vt0.c0))>=((t0.c0))) AS REAL)  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((NOT (t0.c30 COLLATE NOCASE))) ORDER BY (((((((((~ (t0.c73)))AND(((t0.c2)IS(t0.c30)))))OR(vt0.c0 COLLATE BINARY)))AND((('67*h2M꥚') BETWEEN (0.5808755962256152) AND (vt0.c0)))))AND(CAST(vt0.c0 AS INTEGER))) DESC, CAST((((vt0.c0))>=((t0.c0))) AS REAL)  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY HEX(((vt0.c1) NOTNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(((vt0.c1) NOTNULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY HEX(((vt0.c1) NOTNULL)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0, vt0 ORDER BY HEX(((vt0.c1) NOTNULL)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c2) ORDER BY HEX(((vt0.c1) NOTNULL)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '0.12146960933469009' WHERE ((((- (t0.c2)))AND((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2)))AND((- (vt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '0.12146960933469009');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '0.12146960933469009' WHERE ((((- (t0.c2)))AND((- (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c2)))AND((- (vt0.c1))))) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '0.12146960933469009');
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON '0.12146960933469009' WHERE ((((- (t0.c2)))AND((- (vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c73)) NOT BETWEEN ((((('', t0.c73, t0.c73)) BETWEEN ((t0.c0, t0.c73, t0.c2)) AND ((t0.c1, 0.03817805448105027, t0.c73))), 0.6890207785995729, CASE WHEN t0.c73 THEN t0.c0 ELSE t0.c0 END)) AND ((LAST_INSERT_ROWID(), ((t0.c73) NOTNULL), ((t0.c1)=(t0.c73)))))) ORDER BY ((((t0.c73 IN (t0.c0))))<((STRFTIME(t0.c2, t0.c2, t0.c2)))) DESC, CASE (- (t0.c0))  WHEN ((t0.c73)<=(t0.c30)) THEN ((t0.c1) NOT NULL) WHEN t0.c0 COLLATE RTRIM THEN 'za' WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c1)IS(t0.c73)) END DESC  NULLS FIRST, CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c73)) NOT BETWEEN ((((('', t0.c73, t0.c73)) BETWEEN ((t0.c0, t0.c73, t0.c2)) AND ((t0.c1, 0.03817805448105027, t0.c73))), 0.6890207785995729, CASE WHEN t0.c73 THEN t0.c0 ELSE t0.c0 END)) AND ((LAST_INSERT_ROWID(), ((t0.c73) NOTNULL), ((t0.c1)==(t0.c73)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c73 IN (t0.c0))))<((STRFTIME(t0.c2, t0.c2, t0.c2)))) DESC, CASE (- (t0.c0))  WHEN ((t0.c73)<=(t0.c30)) THEN ((t0.c1) NOT NULL) WHEN t0.c0 COLLATE RTRIM THEN 'za' WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c1)IS(t0.c73)) END DESC  NULLS FIRST, CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c73)) NOT BETWEEN ((((('', t0.c73, t0.c73)) BETWEEN ((t0.c0, t0.c73, t0.c2)) AND ((t0.c1, 0.03817805448105027, t0.c73))), 0.6890207785995729, CASE WHEN t0.c73 THEN t0.c0 ELSE t0.c0 END)) AND ((LAST_INSERT_ROWID(), ((t0.c73) NOTNULL), ((t0.c1)=(t0.c73)))))) ORDER BY ((((t0.c73 IN (t0.c0))))<((STRFTIME(t0.c2, t0.c2, t0.c2)))) DESC, CASE (- (t0.c0))  WHEN ((t0.c73)<=(t0.c30)) THEN ((t0.c1) NOT NULL) WHEN t0.c0 COLLATE RTRIM THEN 'za' WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c1)IS(t0.c73)) END DESC  NULLS FIRST, CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, t0.c0, t0.c73)) NOT BETWEEN ((((('', t0.c73, t0.c73)) BETWEEN ((t0.c0, t0.c73, t0.c2)) AND ((t0.c1, 0.03817805448105027, t0.c73))), 0.6890207785995729, CASE WHEN t0.c73 THEN t0.c0 ELSE t0.c0 END)) AND ((LAST_INSERT_ROWID(), ((t0.c73) NOTNULL), ((t0.c1)==(t0.c73)))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c73 IN (t0.c0))))<((STRFTIME(t0.c2, t0.c2, t0.c2)))) DESC, CASE (- (t0.c0))  WHEN ((t0.c73)<=(t0.c30)) THEN ((t0.c1) NOT NULL) WHEN t0.c0 COLLATE RTRIM THEN 'za' WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c1)IS(t0.c73)) END DESC  NULLS FIRST, CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC  NULLS FIRST, NULL  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c0, t0.c0, t0.c73)) NOT BETWEEN ((((('', t0.c73, t0.c73)) BETWEEN ((t0.c0, t0.c73, t0.c2)) AND ((t0.c1, 0.03817805448105027, t0.c73))), 0.6890207785995729, CASE WHEN t0.c73 THEN t0.c0 ELSE t0.c0 END)) AND ((LAST_INSERT_ROWID(), ((t0.c73) NOTNULL), ((t0.c1)=(t0.c73)))))) ORDER BY ((((t0.c73 IN (t0.c0))))<((STRFTIME(t0.c2, t0.c2, t0.c2)))) DESC, CASE (- (t0.c0))  WHEN ((t0.c73)<=(t0.c30)) THEN ((t0.c1) NOT NULL) WHEN t0.c0 COLLATE RTRIM THEN 'za' WHEN ((t0.c2)IS NOT(t0.c2)) THEN ((t0.c1)IS(t0.c73)) END DESC  NULLS FIRST, CAST(CAST(t0.c2 AS TEXT) AS BLOB) DESC  NULLS FIRST, NULL  NULLS LAST;
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '496260186' WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '496260186');
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '496260186' WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON '496260186');
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON '496260186' WHERE (x'');
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))<<((((NULL, x'', vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1)))<<((((NULL, x'', vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))<<((((NULL, x'', vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c1)))<<((((NULL, x'', vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c1)))<<((((NULL, x'', vt0.c0))<>((vt0.c0, vt0.c0, vt0.c0)))))) ORDER BY (NOT (((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))) DESC;
SELECT * FROM t0 CROSS JOIN vt0 ON TRIM(((t0.c2) ISNULL)) WHERE (CASE ((t0.c2)IS(vt0.c0))  WHEN ((t0.c0)*(t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c30)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2)IS(vt0.c0))  WHEN ((t0.c0)*(t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c30)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON TRIM(((t0.c2) ISNULL)));
SELECT * FROM t0 CROSS JOIN vt0 ON TRIM(((t0.c2) ISNULL)) WHERE (CASE ((t0.c2)IS(vt0.c0))  WHEN ((t0.c0)*(t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c30)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((t0.c2)IS(vt0.c0))  WHEN ((t0.c0)*(t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c30)) END) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON TRIM(((t0.c2) ISNULL)));
SELECT * FROM t0 CROSS JOIN vt0 ON TRIM(((t0.c2) ISNULL)) WHERE (CASE ((t0.c2)IS(vt0.c0))  WHEN ((t0.c0)*(t0.c1)) THEN ((vt0.c1) NOT BETWEEN (t0.c2) AND (t0.c30)) END);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY '1661525081' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON NULL ORDER BY '1661525081' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY '1661525081' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON NULL ORDER BY '1661525081' DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE (CAST((~ (vt0.c0)) AS TEXT)) ORDER BY '1661525081' DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1) IS TRUE)) NOT NULL)) ORDER BY ROUND(((((((((t0.c1)AND(NULL)))AND(t0.c0)))OR(t0.c0)))AND(t0.c30)), ((t0.c2)IS NOT(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ROUND(((((((((t0.c1)AND(NULL)))AND(t0.c0)))OR(t0.c0)))AND(t0.c30)), ((t0.c2)IS NOT(t0.c0))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1) IS TRUE)) NOT NULL)) ORDER BY ROUND(((((((((t0.c1)AND(NULL)))AND(t0.c0)))OR(t0.c0)))AND(t0.c30)), ((t0.c2)IS NOT(t0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1) IS TRUE)) NOT NULL)) IS TRUE)  as count FROM t0 ORDER BY ROUND(((((((((t0.c1)AND(NULL)))AND(t0.c0)))OR(t0.c0)))AND(t0.c30)), ((t0.c2)IS NOT(t0.c0))) DESC);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c1) IS TRUE)) NOT NULL)) ORDER BY ROUND(((((((((t0.c1)AND(NULL)))AND(t0.c0)))OR(t0.c0)))AND(t0.c30)), ((t0.c2)IS NOT(t0.c0))) DESC;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((((t0.c2)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(0.3528082638992468)))OR(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c2)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(0.3528082638992468)))OR(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((((t0.c2)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(0.3528082638992468)))OR(t0.c1))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t0.c2)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(0.3528082638992468)))OR(t0.c1))) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((((((t0.c2)OR(vt0.c0)))OR(x'')))AND(vt0.c1)))OR(vt0.c0)))AND(0.3528082638992468)))OR(t0.c1))) IS FALSE));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c73 THEN t0.c2 WHEN t0.c30 THEN vt0.c0 WHEN t0.c30 THEN t0.c30 END)))OR(vt0.c0)) WHERE ((((((((((NOT (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(((vt0.c0)IS NOT(t0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c1))<((t0.c73)))))) ORDER BY (- (CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(((vt0.c0)IS NOT(t0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c1))<((t0.c73)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c73 THEN t0.c2 WHEN t0.c30 THEN vt0.c0 WHEN t0.c30 THEN t0.c30 END)))OR(vt0.c0)) ORDER BY (- (CAST(t0.c2 AS NUMERIC))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c73 THEN t0.c2 WHEN t0.c30 THEN vt0.c0 WHEN t0.c30 THEN t0.c30 END)))OR(vt0.c0)) WHERE ((((((((((NOT (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(((vt0.c0)IS NOT(t0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c1))<((t0.c73)))))) ORDER BY (- (CAST(t0.c2 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(((vt0.c0)IS NOT(t0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c1))<((t0.c73)))))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c73 THEN t0.c2 WHEN t0.c30 THEN vt0.c0 WHEN t0.c30 THEN t0.c30 END)))OR(vt0.c0)) ORDER BY (- (CAST(t0.c2 AS NUMERIC))));
SELECT ALL * FROM t0 LEFT OUTER JOIN vt0 ON ((((vt0.c0 COLLATE RTRIM)AND(CASE WHEN t0.c73 THEN t0.c2 WHEN t0.c30 THEN vt0.c0 WHEN t0.c30 THEN t0.c30 END)))OR(vt0.c0)) WHERE ((((((((((NOT (vt0.c0)))OR(CAST(t0.c0 AS INTEGER))))OR(((vt0.c0)IS NOT(t0.c1)))))OR(vt0.c0 COLLATE RTRIM)))AND((((vt0.c1))<((t0.c73)))))) ORDER BY (- (CAST(t0.c2 AS NUMERIC)));
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (0Xffffffffe6df28cb)))>>(t0.c30))) ORDER BY (((((t0.c73))!=((t0.c1))))<(((t0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0xffffffffe6df28cb)))>>(t0.c30))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c73))!=((t0.c1))))<(((t0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (0Xffffffffe6df28cb)))>>(t0.c30))) ORDER BY (((((t0.c73))!=((t0.c1))))<(((t0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (0xffffffffe6df28cb)))>>(t0.c30))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c73))!=((t0.c1))))<(((t0.c1) ISNULL))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE ((((~ (0Xffffffffe6df28cb)))>>(t0.c30))) ORDER BY (((((t0.c73))!=((t0.c1))))<(((t0.c1) ISNULL))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (t0.c0) ORDER BY LIKELIHOOD(DISTINCT (+ (t0.c2)), 0.3786513129009702) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD(DISTINCT (+ (t0.c2)), 0.3786513129009702) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (t0.c0) ORDER BY LIKELIHOOD(DISTINCT (+ (t0.c2)), 0.3786513129009702) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY LIKELIHOOD(DISTINCT (+ (t0.c2)), 0.3786513129009702) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (t0.c0) ORDER BY LIKELIHOOD(DISTINCT (+ (t0.c2)), 0.3786513129009702) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c73)-(t0.c2)))AND(((((vt0.c0)OR(x'')))OR(vt0.c1)))))AND(NULL)))AND(t0.c30 COLLATE BINARY)))OR((((t0.c30)) NOT BETWEEN ((t0.c30)) AND ((t0.c2)))))) ORDER BY CASE ((((t0.c2)AND(vt0.c1)))OR(t0.c1))  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2)AND(t0.c1)) WHEN (- (t0.c30)) THEN x'd03c' WHEN ((((((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(t0.c2)))AND('0.7308353289474058')))OR(t0.c0)))AND(t0.c0)))OR(x'')))OR(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c73)-(t0.c2)))AND(((((vt0.c0)OR(x'')))OR(vt0.c1)))))AND(NULL)))AND(t0.c30 COLLATE BINARY)))OR((((t0.c30)) NOT BETWEEN ((t0.c30)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY CASE ((((t0.c2)AND(vt0.c1)))OR(t0.c1))  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2)AND(t0.c1)) WHEN (- (t0.c30)) THEN x'd03c' WHEN ((((((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(t0.c2)))AND('0.7308353289474058')))OR(t0.c0)))AND(t0.c0)))OR(x'')))OR(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c73)-(t0.c2)))AND(((((vt0.c0)OR(x'')))OR(vt0.c1)))))AND(NULL)))AND(t0.c30 COLLATE BINARY)))OR((((t0.c30)) NOT BETWEEN ((t0.c30)) AND ((t0.c2)))))) ORDER BY CASE ((((t0.c2)AND(vt0.c1)))OR(t0.c1))  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2)AND(t0.c1)) WHEN (- (t0.c30)) THEN x'd03c' WHEN ((((((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(t0.c2)))AND('0.7308353289474058')))OR(t0.c0)))AND(t0.c0)))OR(x'')))OR(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END;
SELECT SUM(count) FROM (SELECT ((((((((((((t0.c73)-(t0.c2)))AND(((((vt0.c0)OR(x'')))OR(vt0.c1)))))AND(NULL)))AND(t0.c30 COLLATE BINARY)))OR((((t0.c30)) NOT BETWEEN ((t0.c30)) AND ((t0.c2)))))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0 ORDER BY CASE ((((t0.c2)AND(vt0.c1)))OR(t0.c1))  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2)AND(t0.c1)) WHEN (- (t0.c30)) THEN x'd03c' WHEN ((((((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(t0.c2)))AND('0.7308353289474058')))OR(t0.c0)))AND(t0.c0)))OR(x'')))OR(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((((((((t0.c73)-(t0.c2)))AND(((((vt0.c0)OR(x'')))OR(vt0.c1)))))AND(NULL)))AND(t0.c30 COLLATE BINARY)))OR((((t0.c30)) NOT BETWEEN ((t0.c30)) AND ((t0.c2)))))) ORDER BY CASE ((((t0.c2)AND(vt0.c1)))OR(t0.c1))  WHEN CAST(t0.c2 AS REAL) THEN ((t0.c2)AND(t0.c1)) WHEN (- (t0.c30)) THEN x'd03c' WHEN ((((((((((((((((t0.c0)AND(vt0.c0)))OR(vt0.c1)))OR(t0.c2)))AND('0.7308353289474058')))OR(t0.c0)))AND(t0.c0)))OR(x'')))OR(vt0.c0)) THEN CAST(vt0.c1 AS TEXT) END;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c30)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c1))) AND (((((t0.c30)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))) ORDER BY ((((t0.c73) NOTNULL))>(CASE WHEN t0.c30 THEN '%m' ELSE t0.c0 END)) DESC  NULLS LAST, ((((t0.c30, t0.c1, t0.c30, t0.c30, t0.c2))!=((t0.c2, t0.c30, t0.c0, t0.c2, t0.c30))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c1))) AND (((((t0.c30)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c73) NOTNULL))>(CASE WHEN t0.c30 THEN '%m' ELSE t0.c0 END)) DESC  NULLS LAST, ((((t0.c30, t0.c1, t0.c30, t0.c30, t0.c2))!=((t0.c2, t0.c30, t0.c0, t0.c2, t0.c30))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c30)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c1))) AND (((((t0.c30)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))) ORDER BY ((((t0.c73) NOTNULL))>(CASE WHEN t0.c30 THEN '%m' ELSE t0.c0 END)) DESC  NULLS LAST, ((((t0.c30, t0.c1, t0.c30, t0.c30, t0.c2))!=((t0.c2, t0.c30, t0.c0, t0.c2, t0.c30))) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c1))) AND (((((t0.c30)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c73) NOTNULL))>(CASE WHEN t0.c30 THEN '%m' ELSE t0.c0 END)) DESC  NULLS LAST, ((((t0.c30, t0.c1, t0.c30, t0.c30, t0.c2))!=((t0.c2, t0.c30, t0.c0, t0.c2, t0.c30))) IN ()) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c30)) NOT BETWEEN ((TYPEOF(DISTINCT t0.c1))) AND (((((t0.c30)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))))) ORDER BY ((((t0.c73) NOTNULL))>(CASE WHEN t0.c30 THEN '%m' ELSE t0.c0 END)) DESC  NULLS LAST, ((((t0.c30, t0.c1, t0.c30, t0.c30, t0.c2))!=((t0.c2, t0.c30, t0.c0, t0.c2, t0.c30))) IN ()) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((0.008652442005590788)AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((0.008652442005590788)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((0.008652442005590788)AND(vt0.c1)))AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((+ (((((0.008652442005590788)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((((0.008652442005590788)AND(vt0.c1)))AND(vt0.c1)))));
SELECT * FROM t0, vt0 WHERE ((((t0.c1 COLLATE NOCASE, ((((t0.c0)OR(vt0.c1)))AND(t0.c2)), t0.c30))>=(((+ (vt0.c0)), ABS('\rCgg榻o)A'), ((t0.c73) NOT BETWEEN (t0.c1) AND (0.7791308268088993)))))) ORDER BY (((+ (vt0.c1)))/(((t0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 COLLATE NOCASE, ((((t0.c0)OR(vt0.c1)))AND(t0.c2)), t0.c30))>=(((+ (vt0.c0)), ABS('\rCgg榻o)A'), ((t0.c73) NOT BETWEEN (t0.c1) AND (0.7791308268088993)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (vt0.c1)))/(((t0.c1) NOT NULL))));
SELECT * FROM t0, vt0 WHERE ((((t0.c1 COLLATE NOCASE, ((((t0.c0)OR(vt0.c1)))AND(t0.c2)), t0.c30))>=(((+ (vt0.c0)), ABS('\rCgg榻o)A'), ((t0.c73) NOT BETWEEN (t0.c1) AND (0.7791308268088993)))))) ORDER BY (((+ (vt0.c1)))/(((t0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 COLLATE NOCASE, ((((t0.c0)OR(vt0.c1)))AND(t0.c2)), t0.c30))>=(((+ (vt0.c0)), ABS('\rCgg榻o)A'), ((t0.c73) NOT BETWEEN (t0.c1) AND (0.7791308268088993)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((+ (vt0.c1)))/(((t0.c1) NOT NULL))));
SELECT * FROM t0, vt0 WHERE ((((t0.c1 COLLATE NOCASE, ((((t0.c0)OR(vt0.c1)))AND(t0.c2)), t0.c30))>=(((+ (vt0.c0)), ABS('\rCgg榻o)A'), ((t0.c73) NOT BETWEEN (t0.c1) AND (0.7791308268088993)))))) ORDER BY (((+ (vt0.c1)))/(((t0.c1) NOT NULL)));
SELECT ALL COUNT(*) FROM t0 WHERE (json_valid(t0.c0) COLLATE BINARY) ORDER BY ((((((t0.c1)LIKE(0.37318328365744124)))AND(0.7911813148476905)))AND(((((t0.c73)OR(t0.c2)))OR(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)LIKE(0.37318328365744124)))AND(0.7911813148476905)))AND(((((t0.c73)OR(t0.c2)))OR(t0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (json_valid(t0.c0) COLLATE BINARY) ORDER BY ((((((t0.c1)LIKE(0.37318328365744124)))AND(0.7911813148476905)))AND(((((t0.c73)OR(t0.c2)))OR(t0.c2)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((json_valid(t0.c0) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((((((t0.c1)LIKE(0.37318328365744124)))AND(0.7911813148476905)))AND(((((t0.c73)OR(t0.c2)))OR(t0.c2)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (json_valid(t0.c0) COLLATE BINARY) ORDER BY ((((((t0.c1)LIKE(0.37318328365744124)))AND(0.7911813148476905)))AND(((((t0.c73)OR(t0.c2)))OR(t0.c2)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LTRIM(((vt0.c1)+(t0.c73)), ((t0.c1) BETWEEN (t0.c73) AND (t0.c0)))) ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c73))) AND ((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c1)+(t0.c73)), ((t0.c1) BETWEEN (t0.c73) AND (t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c73))) AND ((NULL IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LTRIM(((vt0.c1)+(t0.c73)), ((t0.c1) BETWEEN (t0.c73) AND (t0.c0)))) ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c73))) AND ((NULL IN ()))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(((vt0.c1)+(t0.c73)), ((t0.c1) BETWEEN (t0.c73) AND (t0.c0)))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c73))) AND ((NULL IN ()))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (LTRIM(((vt0.c1)+(t0.c73)), ((t0.c1) BETWEEN (t0.c73) AND (t0.c0)))) ORDER BY ((((t0.c2) NOT BETWEEN (vt0.c0) AND (NULL))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t0.c73))) AND ((NULL IN ()))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0 COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 WHERE (CASE t0.c73  WHEN t0.c1 THEN t0.c30 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c73  WHEN t0.c1 THEN t0.c30 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE t0.c73  WHEN t0.c1 THEN t0.c30 END COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((CASE t0.c73  WHEN t0.c1 THEN t0.c30 END COLLATE BINARY) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CASE t0.c73  WHEN t0.c1 THEN t0.c30 END COLLATE BINARY);
SELECT ALL * FROM t0 WHERE (((TOTAL_CHANGES())-(t0.c30)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())-(t0.c30))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TOTAL_CHANGES())-(t0.c30)));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES())-(t0.c30))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((TOTAL_CHANGES())-(t0.c30)));
SELECT * FROM vt0, t0 WHERE ((((((t0.c1))<((vt0.c1))))IS(((vt0.c0)/(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1))<((vt0.c1))))IS(((vt0.c0)/(t0.c30))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c1))<((vt0.c1))))IS(((vt0.c0)/(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c1))<((vt0.c1))))IS(((vt0.c0)/(t0.c30))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((((t0.c1))<((vt0.c1))))IS(((vt0.c0)/(t0.c30)))));
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((NULL))>((vt0.c0)))) IS TRUE) WHERE (((((x'') NOT BETWEEN (t0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY t0.c0 ASC, CASE ((t0.c1) NOT NULL)  WHEN (('jT')IS NOT(t0.c73)) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c73) NOT BETWEEN (t0.c73) AND (x'')) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c30)) AND ((0Xffffffffa8dc8e7e))) THEN CASE WHEN t0.c1 THEN t0.c73 ELSE t0.c0 END ELSE CASE t0.c30  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST, CAST(((t0.c0)IS(t0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (t0.c0) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((NULL))>((vt0.c0)))) IS TRUE) ORDER BY t0.c0 ASC, CASE ((t0.c1) NOT NULL)  WHEN (('jT')IS NOT(t0.c73)) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c73) NOT BETWEEN (t0.c73) AND (x'')) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c30)) AND ((0xffffffffa8dc8e7e))) THEN CASE WHEN t0.c1 THEN t0.c73 ELSE t0.c0 END ELSE CASE t0.c30  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST, CAST(((t0.c0)IS(t0.c1)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((NULL))>((vt0.c0)))) IS TRUE) WHERE (((((x'') NOT BETWEEN (t0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY t0.c0 ASC, CASE ((t0.c1) NOT NULL)  WHEN (('jT')IS NOT(t0.c73)) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c73) NOT BETWEEN (t0.c73) AND (x'')) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c30)) AND ((0Xffffffffa8dc8e7e))) THEN CASE WHEN t0.c1 THEN t0.c73 ELSE t0.c0 END ELSE CASE t0.c30  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST, CAST(((t0.c0)IS(t0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((x'') NOT BETWEEN (t0.c0) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (((((NULL))>((vt0.c0)))) IS TRUE) ORDER BY t0.c0 ASC, CASE ((t0.c1) NOT NULL)  WHEN (('jT')IS NOT(t0.c73)) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c73) NOT BETWEEN (t0.c73) AND (x'')) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c30)) AND ((0xffffffffa8dc8e7e))) THEN CASE WHEN t0.c1 THEN t0.c73 ELSE t0.c0 END ELSE CASE t0.c30  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST, CAST(((t0.c0)IS(t0.c1)) AS INTEGER) DESC  NULLS LAST);
SELECT ALL * FROM t0 FULL OUTER JOIN vt0 ON (((((NULL))>((vt0.c0)))) IS TRUE) WHERE (((((x'') NOT BETWEEN (t0.c0) AND (vt0.c1))) NOTNULL)) ORDER BY t0.c0 ASC, CASE ((t0.c1) NOT NULL)  WHEN (('jT')IS NOT(t0.c73)) THEN CAST(t0.c0 AS INTEGER) WHEN ((t0.c73) NOT BETWEEN (t0.c73) AND (x'')) THEN (((NULL)) BETWEEN ((vt0.c1)) AND ((t0.c0))) WHEN (((vt0.c0)) NOT BETWEEN ((t0.c30)) AND ((0Xffffffffa8dc8e7e))) THEN CASE WHEN t0.c1 THEN t0.c73 ELSE t0.c0 END ELSE CASE t0.c30  WHEN vt0.c1 THEN vt0.c1 END END  NULLS LAST, CAST(((t0.c0)IS(t0.c1)) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (t0.c0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c1)OR(0.2550442994764801)))OR(NULL)) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((((vt0.c1)OR(0.2550442994764801)))OR(NULL)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c1)OR(0.2550442994764801)))OR(NULL)) ELSE ((vt0.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN vt0.c0 THEN ((((vt0.c1)OR(0.2550442994764801)))OR(NULL)) ELSE ((vt0.c0) IS TRUE) END) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN ((((vt0.c1)OR(0.2550442994764801)))OR(NULL)) ELSE ((vt0.c0) IS TRUE) END);
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)>=(vt0.c1))) NOTNULL) WHERE ((((t0.c1)/(t0.c1)) IN (LIKELIHOOD(t0.c2, 0.47581163148280725))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)/(t0.c1)) IN (LIKELIHOOD(t0.c2, 0.47581163148280725)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)>=(vt0.c1))) NOTNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)>=(vt0.c1))) NOTNULL) WHERE ((((t0.c1)/(t0.c1)) IN (LIKELIHOOD(t0.c2, 0.47581163148280725))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)/(t0.c1)) IN (LIKELIHOOD(t0.c2, 0.47581163148280725)))) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)>=(vt0.c1))) NOTNULL));
SELECT * FROM t0 LEFT OUTER JOIN vt0 ON ((((t0.c2)>=(vt0.c1))) NOTNULL) WHERE ((((t0.c1)/(t0.c1)) IN (LIKELIHOOD(t0.c2, 0.47581163148280725))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE ((1.44333163E9 COLLATE BINARY IN ())) ORDER BY (((- (vt0.c1))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (((((((((vt0.c1)AND(0x2408297f)))AND(t0.c1)))OR(t0.c30)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((1.44333163E9 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((- (vt0.c1))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (((((((((vt0.c1)AND(0x2408297f)))AND(t0.c1)))OR(t0.c30)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE ((1.44333163E9 COLLATE BINARY IN ())) ORDER BY (((- (vt0.c1))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (((((((((vt0.c1)AND(0x2408297f)))AND(t0.c1)))OR(t0.c30)))AND(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((1.44333163E9 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((- (vt0.c1))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (((((((((vt0.c1)AND(0x2408297f)))AND(t0.c1)))OR(t0.c30)))AND(vt0.c1))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, t0 WHERE ((1.44333163E9 COLLATE BINARY IN ())) ORDER BY (((- (vt0.c1))) NOT BETWEEN ((((t0.c2)) BETWEEN ((t0.c0)) AND ((vt0.c0)))) AND (((((((((vt0.c1)AND(0x2408297f)))AND(t0.c1)))OR(t0.c30)))AND(vt0.c1))))  NULLS LAST;
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (+ (t0.c0)) ASC, ((NULL)-(((t0.c73) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0)) ASC, ((NULL)-(((t0.c73) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (+ (t0.c0)) ASC, ((NULL)-(((t0.c73) IS FALSE))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (+ (t0.c0)) ASC, ((NULL)-(((t0.c73) IS FALSE))) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (t0.c2) ORDER BY (+ (t0.c0)) ASC, ((NULL)-(((t0.c73) IS FALSE))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS NUMERIC)) ORDER BY (+ (vt0.c0)) COLLATE RTRIM, (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)), ((vt0.c0)>=(vt0.c0)))) AND (((NOT (vt0.c0)), CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS FIRST, SUBSTR(((vt0.c0)<=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM, (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)), ((vt0.c0)>=(vt0.c0)))) AND (((NOT (vt0.c0)), CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS FIRST, SUBSTR(((vt0.c0)<=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS NUMERIC)) ORDER BY (+ (vt0.c0)) COLLATE RTRIM, (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)), ((vt0.c0)>=(vt0.c0)))) AND (((NOT (vt0.c0)), CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS FIRST, SUBSTR(((vt0.c0)<=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c1) IS FALSE) AS NUMERIC)) IS TRUE)  as count FROM vt0 ORDER BY (+ (vt0.c0)) COLLATE RTRIM, (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)), ((vt0.c0)>=(vt0.c0)))) AND (((NOT (vt0.c0)), CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS FIRST, SUBSTR(((vt0.c0)<=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((vt0.c1) IS FALSE) AS NUMERIC)) ORDER BY (+ (vt0.c0)) COLLATE RTRIM, (((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1 COLLATE NOCASE, ((vt0.c0)%(vt0.c1)), ((vt0.c0)>=(vt0.c0)))) AND (((NOT (vt0.c0)), CAST(vt0.c0 AS TEXT), CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)))  NULLS FIRST, SUBSTR(((vt0.c0)<=(vt0.c0)), CAST(vt0.c0 AS NUMERIC)) DESC;
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c30) AND (vt0.c1)), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)), (~ (t0.c2)))) AND ((((t0.c0)AND('-686275506')), ((t0.c0)||(vt0.c0)), ((t0.c1)IS NOT(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c30) AND (vt0.c1)), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)), (~ (t0.c2)))) AND ((((t0.c0)AND('-686275506')), ((t0.c0)||(vt0.c0)), ((t0.c1)IS NOT(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c30) AND (vt0.c1)), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)), (~ (t0.c2)))) AND ((((t0.c0)AND('-686275506')), ((t0.c0)||(vt0.c0)), ((t0.c1)IS NOT(t0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c30) AND (vt0.c1)), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)), (~ (t0.c2)))) AND ((((t0.c0)AND('-686275506')), ((t0.c0)||(vt0.c0)), ((t0.c1)IS NOT(t0.c0)))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((t0.c1, t0.c1, t0.c2)) NOT BETWEEN ((((t0.c0) NOT BETWEEN (t0.c30) AND (vt0.c1)), ((vt0.c1) BETWEEN (t0.c2) AND (vt0.c1)), (~ (t0.c2)))) AND ((((t0.c0)AND('-686275506')), ((t0.c0)||(vt0.c0)), ((t0.c1)IS NOT(t0.c0))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)) AS INTEGER) WHERE ((((vt0.c0)) BETWEEN ((CASE t0.c30  WHEN t0.c2 THEN t0.c30 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END)) AND ((((vt0.c0)<(t0.c0)))))) ORDER BY (TYPEOF(x'') IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE t0.c30  WHEN t0.c2 THEN t0.c30 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END)) AND ((((vt0.c0)<(t0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)) AS INTEGER) ORDER BY (TYPEOF(x'') IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)) AS INTEGER) WHERE ((((vt0.c0)) BETWEEN ((CASE t0.c30  WHEN t0.c2 THEN t0.c30 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END)) AND ((((vt0.c0)<(t0.c0)))))) ORDER BY (TYPEOF(x'') IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE t0.c30  WHEN t0.c2 THEN t0.c30 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END)) AND ((((vt0.c0)<(t0.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)) AS INTEGER) ORDER BY (TYPEOF(x'') IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN t0 ON CAST(((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)) AS INTEGER) WHERE ((((vt0.c0)) BETWEEN ((CASE t0.c30  WHEN t0.c2 THEN t0.c30 WHEN t0.c0 THEN vt0.c0 WHEN t0.c2 THEN t0.c1 END)) AND ((((vt0.c0)<(t0.c0)))))) ORDER BY (TYPEOF(x'') IN ()) ASC;
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (t0.c73))) BETWEEN (((t0.c73)&(t0.c1))) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c73)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c73))) BETWEEN (((t0.c73)&(t0.c1))) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c73))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (t0.c73))) BETWEEN (((t0.c73)&(t0.c1))) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c73)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (t0.c73))) BETWEEN (((t0.c73)&(t0.c1))) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c73))))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((vt0.c0 IN (t0.c73))) BETWEEN (((t0.c73)&(t0.c1))) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c73)))));
SELECT ALL * FROM vt0, t0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (IFNULL(DISTINCT vt0.c0, vt0.c0) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c73)OR(-587256351)))OR(t0.c73))))<((DATETIME(t0.c30, t0.c1, 624983499)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c73)OR(-587256351)))OR(t0.c73))))<((DATETIME(t0.c30, t0.c1, 624983499))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c73)OR(-587256351)))OR(t0.c73))))<((DATETIME(t0.c30, t0.c1, 624983499)))));
SELECT SUM(count) FROM (SELECT ALL (((((((((t0.c73)OR(-587256351)))OR(t0.c73))))<((DATETIME(t0.c30, t0.c1, 624983499))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((((((t0.c73)OR(-587256351)))OR(t0.c73))))<((DATETIME(t0.c30, t0.c1, 624983499)))));
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c30 AS NUMERIC))>=((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c30 AS NUMERIC))>=((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c30 AS NUMERIC))>=((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c30 AS NUMERIC))>=((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c30 AS NUMERIC))>=((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))))));
SELECT * FROM t0 WHERE (CAST((('')GLOB(t0.c1)) AS INTEGER)) ORDER BY ABS(DISTINCT ((((t0.c30)AND(t0.c30)))OR(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')GLOB(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ABS(DISTINCT ((((t0.c30)AND(t0.c30)))OR(t0.c2))) DESC);
SELECT * FROM t0 WHERE (CAST((('')GLOB(t0.c1)) AS INTEGER)) ORDER BY ABS(DISTINCT ((((t0.c30)AND(t0.c30)))OR(t0.c2))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((('')GLOB(t0.c1)) AS INTEGER)) IS TRUE)  as count FROM t0 ORDER BY ABS(DISTINCT ((((t0.c30)AND(t0.c30)))OR(t0.c2))) DESC);
SELECT * FROM t0 WHERE (CAST((('')GLOB(t0.c1)) AS INTEGER)) ORDER BY ABS(DISTINCT ((((t0.c30)AND(t0.c30)))OR(t0.c2))) DESC;
SELECT * FROM t0, vt0 WHERE (((t0.c2 IN ()) IN (CASE vt0.c1  WHEN t0.c30 THEN '1384387824' END, (('돲Y')-(t0.c0))))) ORDER BY ((((vt0.c0 IN ()), UNLIKELY(t0.c73), (- (t0.c73))))>=((((((((((vt0.c1)OR(t0.c30)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), (NOT (vt0.c1)), ((((((((t0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN (CASE vt0.c1  WHEN t0.c30 THEN '1384387824' END, (('돲Y')-(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0 IN ()), UNLIKELY(t0.c73), (- (t0.c73))))>=((((((((((vt0.c1)OR(t0.c30)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), (NOT (vt0.c1)), ((((((((t0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL))))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((t0.c2 IN ()) IN (CASE vt0.c1  WHEN t0.c30 THEN '1384387824' END, (('돲Y')-(t0.c0))))) ORDER BY ((((vt0.c0 IN ()), UNLIKELY(t0.c73), (- (t0.c73))))>=((((((((((vt0.c1)OR(t0.c30)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), (NOT (vt0.c1)), ((((((((t0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 IN ()) IN (CASE vt0.c1  WHEN t0.c30 THEN '1384387824' END, (('돲Y')-(t0.c0))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((vt0.c0 IN ()), UNLIKELY(t0.c73), (- (t0.c73))))>=((((((((((vt0.c1)OR(t0.c30)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), (NOT (vt0.c1)), ((((((((t0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL))))) DESC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((t0.c2 IN ()) IN (CASE vt0.c1  WHEN t0.c30 THEN '1384387824' END, (('돲Y')-(t0.c0))))) ORDER BY ((((vt0.c0 IN ()), UNLIKELY(t0.c73), (- (t0.c73))))>=((((((((((vt0.c1)OR(t0.c30)))OR(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)), (NOT (vt0.c1)), ((((((((t0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(NULL))))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c1)*(vt0.c1)) COLLATE BINARY) ORDER BY (- ((vt0.c1 IN (x''))))  NULLS FIRST, (+ ((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)*(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c1 IN (x''))))  NULLS FIRST, (+ ((vt0.c1 IN ())))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1)*(vt0.c1)) COLLATE BINARY) ORDER BY (- ((vt0.c1 IN (x''))))  NULLS FIRST, (+ ((vt0.c1 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)*(vt0.c1)) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (- ((vt0.c1 IN (x''))))  NULLS FIRST, (+ ((vt0.c1 IN ())))  NULLS LAST);
SELECT * FROM vt0 WHERE (((vt0.c1)*(vt0.c1)) COLLATE BINARY) ORDER BY (- ((vt0.c1 IN (x''))))  NULLS FIRST, (+ ((vt0.c1 IN ())))  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN (vt0.c1))))>((((vt0.c1)*(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN (vt0.c1))))>((((vt0.c1)*(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN (vt0.c1))))>((((vt0.c1)*(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1 IN (vt0.c1))))>((((vt0.c1)*(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN (vt0.c1))))>((((vt0.c1)*(vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ('1178322424') ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1178322424') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE ('1178322424') ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c0)) ASC;
SELECT SUM(count) FROM (SELECT ALL (('1178322424') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c0)) ASC);
SELECT ALL * FROM vt0 WHERE ('1178322424') ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))) NOT BETWEEN ((- (vt0.c1))) AND (vt0.c0)) ASC;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt0.c1, 1.45833392E8)))))OR(0Xffffffffa4ebca68)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt0.c1, 1.45833392E8)))))OR(0xffffffffa4ebca68)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt0.c1, 1.45833392E8)))))OR(0Xffffffffa4ebca68)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt0.c1, 1.45833392E8)))))OR(0xffffffffa4ebca68)) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)) ORDER BY (((((((((vt0.c1 IN ()))OR(((vt0.c0) IS TRUE))))AND(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN (vt0.c1, 1.45833392E8)))))OR(0Xffffffffa4ebca68)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((0.9492305348007805)AND((t0.c1 IN ()))))AND(((t0.c0)>=(vt0.c0)))) WHERE (((((((t0.c0)OR(t0.c1)))OR(t0.c2))) NOT NULL)) ORDER BY t0.c73;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c1)))OR(t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((0.9492305348007805)AND((t0.c1 IN ()))))AND(((t0.c0)>=(vt0.c0)))) ORDER BY t0.c73);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((0.9492305348007805)AND((t0.c1 IN ()))))AND(((t0.c0)>=(vt0.c0)))) WHERE (((((((t0.c0)OR(t0.c1)))OR(t0.c2))) NOT NULL)) ORDER BY t0.c73;
SELECT SUM(count) FROM (SELECT ((((((((t0.c0)OR(t0.c1)))OR(t0.c2))) NOT NULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON ((((0.9492305348007805)AND((t0.c1 IN ()))))AND(((t0.c0)>=(vt0.c0)))) ORDER BY t0.c73);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON ((((0.9492305348007805)AND((t0.c1 IN ()))))AND(((t0.c0)>=(vt0.c0)))) WHERE (((((((t0.c0)OR(t0.c1)))OR(t0.c2))) NOT NULL)) ORDER BY t0.c73;
SELECT * FROM t0, vt0 WHERE ((((t0.c30)>=(vt0.c0)) IN ())) ORDER BY (((((0X2109ad2e IN ()))AND((((t0.c2))<=((t0.c1))))))OR(t0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((0x2109ad2e IN ()))AND((((t0.c2))<=((t0.c1))))))OR(t0.c1)));
SELECT * FROM t0, vt0 WHERE ((((t0.c30)>=(vt0.c0)) IN ())) ORDER BY (((((0X2109ad2e IN ()))AND((((t0.c2))<=((t0.c1))))))OR(t0.c1));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c30)>=(vt0.c0)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (((((0x2109ad2e IN ()))AND((((t0.c2))<=((t0.c1))))))OR(t0.c1)));
SELECT * FROM t0, vt0 WHERE ((((t0.c30)>=(vt0.c0)) IN ())) ORDER BY (((((0X2109ad2e IN ()))AND((((t0.c2))<=((t0.c1))))))OR(t0.c1));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c1)<(vt0.c0)) COLLATE RTRIM) ORDER BY (~ (CASE WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (CASE WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c1)<(vt0.c0)) COLLATE RTRIM) ORDER BY (~ (CASE WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1)<(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t0 ORDER BY (~ (CASE WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c1)<(vt0.c0)) COLLATE RTRIM) ORDER BY (~ (CASE WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END)) ASC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2 COLLATE RTRIM)LIKE(CAST(t0.c2 AS INTEGER)))) ORDER BY ((CASE WHEN t0.c1 THEN vt0.c1 WHEN t0.c73 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 END)LIKE((- (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM)LIKE(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c1 THEN vt0.c1 WHEN t0.c73 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 END)LIKE((- (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2 COLLATE RTRIM)LIKE(CAST(t0.c2 AS INTEGER)))) ORDER BY ((CASE WHEN t0.c1 THEN vt0.c1 WHEN t0.c73 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 END)LIKE((- (vt0.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c2 COLLATE RTRIM)LIKE(CAST(t0.c2 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((CASE WHEN t0.c1 THEN vt0.c1 WHEN t0.c73 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 END)LIKE((- (vt0.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((t0.c2 COLLATE RTRIM)LIKE(CAST(t0.c2 AS INTEGER)))) ORDER BY ((CASE WHEN t0.c1 THEN vt0.c1 WHEN t0.c73 THEN t0.c2 WHEN vt0.c0 THEN t0.c0 END)LIKE((- (vt0.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (NOT (vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (vt0.c1)) END  NULLS LAST, (((((0.5001563105487019))>((vt0.c0))))OR(CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (vt0.c1)) END  NULLS LAST, (((((0.5001563105487019))>((vt0.c0))))OR(CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (NOT (vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (vt0.c1)) END  NULLS LAST, (((((0.5001563105487019))>((vt0.c0))))OR(CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (vt0.c1)) END  NULLS LAST, (((((0.5001563105487019))>((vt0.c0))))OR(CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (NOT (vt0.c1))  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)) THEN (- (vt0.c1)) END  NULLS LAST, (((((0.5001563105487019))>((vt0.c0))))OR(CAST(vt0.c1 AS TEXT))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.8821259221014596') ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c1)))))OR(vt0.c1)), vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.8821259221014596') IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c1)))))OR(vt0.c1)), vt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.8821259221014596') ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c1)))))OR(vt0.c1)), vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('0.8821259221014596') IS TRUE)  as count FROM vt0 ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c1)))))OR(vt0.c1)), vt0.c1 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ('0.8821259221014596') ORDER BY (((((NOT (vt0.c0)))OR(((vt0.c1)>=(vt0.c1)))))OR(vt0.c1)), vt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((CAST(vt0.c1 AS NUMERIC), (vt0.c1 IN ()), UPPER(DISTINCT vt0.c0)))>=((vt0.c1 COLLATE BINARY, ((NULL) IS FALSE), vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c1 AS NUMERIC), (vt0.c1 IN ()), UPPER(DISTINCT vt0.c0)))>=((vt0.c1 COLLATE BINARY, ((NULL) IS FALSE), vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((CAST(vt0.c1 AS NUMERIC), (vt0.c1 IN ()), UPPER(DISTINCT vt0.c0)))>=((vt0.c1 COLLATE BINARY, ((NULL) IS FALSE), vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c1 AS NUMERIC), (vt0.c1 IN ()), UPPER(DISTINCT vt0.c0)))>=((vt0.c1 COLLATE BINARY, ((NULL) IS FALSE), vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY (((CAST(vt0.c1 AS NUMERIC), (vt0.c1 IN ()), UPPER(DISTINCT vt0.c0)))>=((vt0.c1 COLLATE BINARY, ((NULL) IS FALSE), vt0.c1)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))>=(HEX(t0.c73))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))>=(HEX(t0.c73)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))>=(HEX(t0.c73))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))>=(HEX(t0.c73)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))>=(HEX(t0.c73))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY COALESCE(CAST(vt0.c1 AS BLOB), ((vt0.c1)<>(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(CAST(vt0.c1 AS BLOB), ((vt0.c1)<>(vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY COALESCE(CAST(vt0.c1 AS BLOB), ((vt0.c1)<>(vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY COALESCE(CAST(vt0.c1 AS BLOB), ((vt0.c1)<>(vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c0 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) ORDER BY COALESCE(CAST(vt0.c1 AS BLOB), ((vt0.c1)<>(vt0.c1))) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY '' DESC;
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0 ORDER BY '' DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c0) ORDER BY '' DESC;
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((vt0.c0)&(NULL))  WHEN (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c1))) THEN t0.c0 ELSE t0.c73 COLLATE RTRIM END) ORDER BY ((((t0.c2 COLLATE RTRIM)OR(t0.c30 COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT vt0.c1, 0.5859580810497044))) DESC, ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c73 END) BETWEEN (x'') AND (CAST(t0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(NULL))  WHEN (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c1))) THEN t0.c0 ELSE t0.c73 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2 COLLATE RTRIM)OR(t0.c30 COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT vt0.c1, 0.5859580810497044))) DESC, ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c73 END) BETWEEN (x'') AND (CAST(t0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((vt0.c0)&(NULL))  WHEN (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c1))) THEN t0.c0 ELSE t0.c73 COLLATE RTRIM END) ORDER BY ((((t0.c2 COLLATE RTRIM)OR(t0.c30 COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT vt0.c1, 0.5859580810497044))) DESC, ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c73 END) BETWEEN (x'') AND (CAST(t0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)&(NULL))  WHEN (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c1))) THEN t0.c0 ELSE t0.c73 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c2 COLLATE RTRIM)OR(t0.c30 COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT vt0.c1, 0.5859580810497044))) DESC, ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c73 END) BETWEEN (x'') AND (CAST(t0.c1 AS NUMERIC)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (CASE ((vt0.c0)&(NULL))  WHEN (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c1))) THEN t0.c0 ELSE t0.c73 COLLATE RTRIM END) ORDER BY ((((t0.c2 COLLATE RTRIM)OR(t0.c30 COLLATE BINARY)))OR(LIKELIHOOD(DISTINCT vt0.c1, 0.5859580810497044))) DESC, ((CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c73 END) BETWEEN (x'') AND (CAST(t0.c1 AS NUMERIC)))  NULLS FIRST;
SELECT * FROM vt0 WHERE (x'') ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (x'') ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) DESC);
SELECT * FROM vt0 WHERE (x'') ORDER BY (- (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))) DESC;
SELECT * FROM t0, vt0 WHERE (CASE WHEN NULL THEN CAST(t0.c73 AS INTEGER) END) ORDER BY CAST(t0.c30 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CAST(t0.c73 AS INTEGER) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c30 COLLATE NOCASE AS NUMERIC) DESC);
SELECT * FROM t0, vt0 WHERE (CASE WHEN NULL THEN CAST(t0.c73 AS INTEGER) END) ORDER BY CAST(t0.c30 COLLATE NOCASE AS NUMERIC) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN NULL THEN CAST(t0.c73 AS INTEGER) END) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(t0.c30 COLLATE NOCASE AS NUMERIC) DESC);
SELECT * FROM t0, vt0 WHERE (CASE WHEN NULL THEN CAST(t0.c73 AS INTEGER) END) ORDER BY CAST(t0.c30 COLLATE NOCASE AS NUMERIC) DESC;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))=(((t0.c1)>>(t0.c30)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))=(((t0.c1)>>(t0.c30))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))=(((t0.c1)>>(t0.c30)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c0 AS BLOB))=(((t0.c1)>>(t0.c30))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB))=(((t0.c1)>>(t0.c30)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CASE WHEN t0.c30 THEN t0.c2 END))==((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c30 THEN t0.c2 END))==((vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CASE WHEN t0.c30 THEN t0.c2 END))==((vt0.c0))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c30 THEN t0.c2 END))==((vt0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((CASE WHEN t0.c30 THEN t0.c2 END))==((vt0.c0))));
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c30 AS INTEGER))OR(t0.c2 COLLATE BINARY)))AND(t0.c30)))OR(TRIM(t0.c1, t0.c1))))AND((NULL IN ())))) ORDER BY ((((0.44995015862015186 COLLATE BINARY)AND((t0.c2 IN ()))))OR(((((t0.c30)AND(t0.c30)))AND(t0.c73))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c30 AS INTEGER))OR(t0.c2 COLLATE BINARY)))AND(t0.c30)))OR(TRIM(t0.c1, t0.c1))))AND((NULL IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((0.44995015862015186 COLLATE BINARY)AND((t0.c2 IN ()))))OR(((((t0.c30)AND(t0.c30)))AND(t0.c73)))));
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c30 AS INTEGER))OR(t0.c2 COLLATE BINARY)))AND(t0.c30)))OR(TRIM(t0.c1, t0.c1))))AND((NULL IN ())))) ORDER BY ((((0.44995015862015186 COLLATE BINARY)AND((t0.c2 IN ()))))OR(((((t0.c30)AND(t0.c30)))AND(t0.c73))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CAST(t0.c30 AS INTEGER))OR(t0.c2 COLLATE BINARY)))AND(t0.c30)))OR(TRIM(t0.c1, t0.c1))))AND((NULL IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((0.44995015862015186 COLLATE BINARY)AND((t0.c2 IN ()))))OR(((((t0.c30)AND(t0.c30)))AND(t0.c73)))));
SELECT ALL * FROM t0 WHERE (((((((((CAST(t0.c30 AS INTEGER))OR(t0.c2 COLLATE BINARY)))AND(t0.c30)))OR(TRIM(t0.c1, t0.c1))))AND((NULL IN ())))) ORDER BY ((((0.44995015862015186 COLLATE BINARY)AND((t0.c2 IN ()))))OR(((((t0.c30)AND(t0.c30)))AND(t0.c73))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c30 COLLATE NOCASE)AND(t0.c73 COLLATE NOCASE)))AND(((t0.c2)GLOB(t0.c1)))))AND(((((t0.c73)AND('946117367')))OR(t0.c0)))))AND(((t0.c0) NOTNULL)))) ORDER BY ((((t0.c30)<(t0.c73)))>=((((t0.c30))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c30 COLLATE NOCASE)AND(t0.c73 COLLATE NOCASE)))AND(((t0.c2)GLOB(t0.c1)))))AND(((((t0.c73)AND('946117367')))OR(t0.c0)))))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30)<(t0.c73)))>=((((t0.c30))>((t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c30 COLLATE NOCASE)AND(t0.c73 COLLATE NOCASE)))AND(((t0.c2)GLOB(t0.c1)))))AND(((((t0.c73)AND('946117367')))OR(t0.c0)))))AND(((t0.c0) NOTNULL)))) ORDER BY ((((t0.c30)<(t0.c73)))>=((((t0.c30))>((t0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c30 COLLATE NOCASE)AND(t0.c73 COLLATE NOCASE)))AND(((t0.c2)GLOB(t0.c1)))))AND(((((t0.c73)AND('946117367')))OR(t0.c0)))))AND(((t0.c0) NOTNULL)))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30)<(t0.c73)))>=((((t0.c30))>((t0.c0))))));
SELECT ALL * FROM t0 WHERE (((((((((t0.c30 COLLATE NOCASE)AND(t0.c73 COLLATE NOCASE)))AND(((t0.c2)GLOB(t0.c1)))))AND(((((t0.c73)AND('946117367')))OR(t0.c0)))))AND(((t0.c0) NOTNULL)))) ORDER BY ((((t0.c30)<(t0.c73)))>=((((t0.c30))>((t0.c0)))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c30)OR(t0.c1)))AND(t0.c73))) NOT BETWEEN ('-1006637994') AND ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) ORDER BY CAST((- (t0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c30)OR(t0.c1)))AND(t0.c73))) NOT BETWEEN ('-1006637994') AND ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c1)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c30)OR(t0.c1)))AND(t0.c73))) NOT BETWEEN ('-1006637994') AND ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) ORDER BY CAST((- (t0.c1)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c30)OR(t0.c1)))AND(t0.c73))) NOT BETWEEN ('-1006637994') AND ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY CAST((- (t0.c1)) AS INTEGER)  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c30)OR(t0.c1)))AND(t0.c73))) NOT BETWEEN ('-1006637994') AND ((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c1)))))) ORDER BY CAST((- (t0.c1)) AS INTEGER)  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'c9f7eed5') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'c9f7eed5') IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'c9f7eed5') IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((x'c9f7eed5') IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((x'c9f7eed5') IS FALSE));
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((~ (t0.c0)))>=(CASE t0.c73  WHEN 0xffffffffeba7159e THEN t0.c0 WHEN '317608003' THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END))) ORDER BY ((TYPEOF(t0.c0))/(CASE WHEN t0.c0 THEN t0.c30 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))>=(CASE t0.c73  WHEN 0Xffffffffeba7159e THEN t0.c0 WHEN '317608003' THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((TYPEOF(t0.c0))/(CASE WHEN t0.c0 THEN t0.c30 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((~ (t0.c0)))>=(CASE t0.c73  WHEN 0xffffffffeba7159e THEN t0.c0 WHEN '317608003' THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END))) ORDER BY ((TYPEOF(t0.c0))/(CASE WHEN t0.c0 THEN t0.c30 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (t0.c0)))>=(CASE t0.c73  WHEN 0Xffffffffeba7159e THEN t0.c0 WHEN '317608003' THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY ((TYPEOF(t0.c0))/(CASE WHEN t0.c0 THEN t0.c30 END))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE ((((~ (t0.c0)))>=(CASE t0.c73  WHEN 0xffffffffeba7159e THEN t0.c0 WHEN '317608003' THEN t0.c1 WHEN vt0.c0 THEN t0.c0 ELSE t0.c1 END))) ORDER BY ((TYPEOF(t0.c0))/(CASE WHEN t0.c0 THEN t0.c30 END))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c30)AND(t0.c2)))>>(((vt0.c0)>=(vt0.c1))))) ORDER BY '-2130755680' DESC, (((t0.c0) BETWEEN (t0.c2) AND (t0.c73)) IN (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c30)AND(t0.c2)))>>(((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '-2130755680' DESC, (((t0.c0) BETWEEN (t0.c2) AND (t0.c73)) IN (((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c30)AND(t0.c2)))>>(((vt0.c0)>=(vt0.c1))))) ORDER BY '-2130755680' DESC, (((t0.c0) BETWEEN (t0.c2) AND (t0.c73)) IN (((vt0.c0) ISNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c30)AND(t0.c2)))>>(((vt0.c0)>=(vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY '-2130755680' DESC, (((t0.c0) BETWEEN (t0.c2) AND (t0.c73)) IN (((vt0.c0) ISNULL))) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((t0.c30)AND(t0.c2)))>>(((vt0.c0)>=(vt0.c1))))) ORDER BY '-2130755680' DESC, (((t0.c0) BETWEEN (t0.c2) AND (t0.c73)) IN (((vt0.c0) ISNULL))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (vt0.c1);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c30 WHERE (CAST(json_array_length(t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c30);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c30 WHERE (CAST(json_array_length(t0.c2) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_array_length(t0.c2) AS NUMERIC)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c30);
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c30 IN ())) NOT BETWEEN (t0.c2) AND (CAST(t0.c73 AS REAL))) WHERE (((((NULL)&(vt0.c1))) NOT BETWEEN (((t0.c73)*(vt0.c0))) AND (((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)&(vt0.c1))) NOT BETWEEN (((t0.c73)*(vt0.c0))) AND (((vt0.c0)&(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c30 IN ())) NOT BETWEEN (t0.c2) AND (CAST(t0.c73 AS REAL))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c30 IN ())) NOT BETWEEN (t0.c2) AND (CAST(t0.c73 AS REAL))) WHERE (((((NULL)&(vt0.c1))) NOT BETWEEN (((t0.c73)*(vt0.c0))) AND (((vt0.c0)&(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((NULL)&(vt0.c1))) NOT BETWEEN (((t0.c73)*(vt0.c0))) AND (((vt0.c0)&(vt0.c1))))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((t0.c30 IN ())) NOT BETWEEN (t0.c2) AND (CAST(t0.c73 AS REAL))));
SELECT * FROM vt0 CROSS JOIN t0 ON (((t0.c30 IN ())) NOT BETWEEN (t0.c2) AND (CAST(t0.c73 AS REAL))) WHERE (((((NULL)&(vt0.c1))) NOT BETWEEN (((t0.c73)*(vt0.c0))) AND (((vt0.c0)&(vt0.c1)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (IFNULL(RTRIM(t0.c2), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((IFNULL(RTRIM(t0.c2), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (IFNULL(RTRIM(t0.c2), CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ((IFNULL(RTRIM(t0.c2), CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (IFNULL(RTRIM(t0.c2), CAST(vt0.c0 AS TEXT)));
SELECT * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c30);
SELECT * FROM t0, vt0 WHERE ((((t0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c1 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((t0.c1 IN ())) ISNULL)) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c1 IN ())) ISNULL));
SELECT COUNT(*) FROM t0 WHERE ('^23w넗') ORDER BY ((CAST(t0.c73 AS REAL)) NOT BETWEEN ((NOT (t0.c2))) AND (CASE WHEN t0.c0 THEN t0.c30 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('^23w넗') IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c73 AS REAL)) NOT BETWEEN ((NOT (t0.c2))) AND (CASE WHEN t0.c0 THEN t0.c30 ELSE t0.c2 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('^23w넗') ORDER BY ((CAST(t0.c73 AS REAL)) NOT BETWEEN ((NOT (t0.c2))) AND (CASE WHEN t0.c0 THEN t0.c30 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('^23w넗') IS TRUE)  as count FROM t0 ORDER BY ((CAST(t0.c73 AS REAL)) NOT BETWEEN ((NOT (t0.c2))) AND (CASE WHEN t0.c0 THEN t0.c30 ELSE t0.c2 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ('^23w넗') ORDER BY ((CAST(t0.c73 AS REAL)) NOT BETWEEN ((NOT (t0.c2))) AND (CASE WHEN t0.c0 THEN t0.c30 ELSE t0.c2 END)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0, vt0 WHERE (((TRIM(DISTINCT vt0.c0, t0.c1))OR((((((((('')OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0, t0.c1))OR((((((((('')OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)))OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((TRIM(DISTINCT vt0.c0, t0.c1))OR((((((((('')OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)))OR(t0.c1)))));
SELECT SUM(count) FROM (SELECT ((((TRIM(DISTINCT vt0.c0, t0.c1))OR((((((((('')OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)))OR(t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((TRIM(DISTINCT vt0.c0, t0.c1))OR((((((((('')OR(vt0.c1)))OR(t0.c30)))AND(t0.c30)))OR(t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, 0.7506860944861121, t0.c2)) BETWEEN ((((t0.c73) NOT BETWEEN (t0.c2) AND (NULL)), (((t0.c30))!=((t0.c0))), LOWER(t0.c2))) AND ((t0.c0, (- (t0.c30)), ((t0.c30) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, 0.7506860944861121, t0.c2)) BETWEEN ((((t0.c73) NOT BETWEEN (t0.c2) AND (NULL)), (((t0.c30))<>((t0.c0))), LOWER(t0.c2))) AND ((t0.c0, (- (t0.c30)), ((t0.c30) NOTNULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, 0.7506860944861121, t0.c2)) BETWEEN ((((t0.c73) NOT BETWEEN (t0.c2) AND (NULL)), (((t0.c30))!=((t0.c0))), LOWER(t0.c2))) AND ((t0.c0, (- (t0.c30)), ((t0.c30) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((t0.c0, 0.7506860944861121, t0.c2)) BETWEEN ((((t0.c73) NOT BETWEEN (t0.c2) AND (NULL)), (((t0.c30))<>((t0.c0))), LOWER(t0.c2))) AND ((t0.c0, (- (t0.c30)), ((t0.c30) NOTNULL))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((t0.c0, 0.7506860944861121, t0.c2)) BETWEEN ((((t0.c73) NOT BETWEEN (t0.c2) AND (NULL)), (((t0.c30))!=((t0.c0))), LOWER(t0.c2))) AND ((t0.c0, (- (t0.c30)), ((t0.c30) NOTNULL)))));
SELECT * FROM t0, vt0 WHERE (t0.c30) ORDER BY (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c1 IN ()) ASC);
SELECT * FROM t0, vt0 WHERE (t0.c30) ORDER BY (vt0.c1 IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0 ORDER BY (vt0.c1 IN ()) ASC);
SELECT * FROM t0, vt0 WHERE (t0.c30) ORDER BY (vt0.c1 IN ()) ASC;
SELECT * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN t0.c73 THEN -7.82732014E8 WHEN vt0.c0 THEN t0.c2 WHEN t0.c73 THEN t0.c1 END) NOT BETWEEN (vt0.c1) AND ((+ (vt0.c1))))) ORDER BY (~ (((((t0.c30)AND(t0.c73)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c73 THEN -7.82732014E8 WHEN vt0.c0 THEN t0.c2 WHEN t0.c73 THEN t0.c1 END) NOT BETWEEN (vt0.c1) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((((t0.c30)AND(t0.c73)))OR(t0.c2))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN t0.c73 THEN -7.82732014E8 WHEN vt0.c0 THEN t0.c2 WHEN t0.c73 THEN t0.c1 END) NOT BETWEEN (vt0.c1) AND ((+ (vt0.c1))))) ORDER BY (~ (((((t0.c30)AND(t0.c73)))OR(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c0  WHEN t0.c73 THEN -7.82732014E8 WHEN vt0.c0 THEN t0.c2 WHEN t0.c73 THEN t0.c1 END) NOT BETWEEN (vt0.c1) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM t0, vt0 ORDER BY (~ (((((t0.c30)AND(t0.c73)))OR(t0.c2))))  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c0  WHEN t0.c73 THEN -7.82732014E8 WHEN vt0.c0 THEN t0.c2 WHEN t0.c73 THEN t0.c1 END) NOT BETWEEN (vt0.c1) AND ((+ (vt0.c1))))) ORDER BY (~ (((((t0.c30)AND(t0.c73)))OR(t0.c2))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL)) ORDER BY ((COALESCE(t0.c1, t0.c73)) NOT BETWEEN (((t0.c2)IS(t0.c30))) AND (((t0.c1)IS(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((COALESCE(t0.c1, t0.c73)) NOT BETWEEN (((t0.c2)IS(t0.c30))) AND (((t0.c1)IS(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL)) ORDER BY ((COALESCE(t0.c1, t0.c73)) NOT BETWEEN (((t0.c2)IS(t0.c30))) AND (((t0.c1)IS(t0.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c0 AS BLOB)) ISNULL)) IS TRUE)  as count FROM t0 ORDER BY ((COALESCE(t0.c1, t0.c73)) NOT BETWEEN (((t0.c2)IS(t0.c30))) AND (((t0.c1)IS(t0.c2))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c0 AS BLOB)) ISNULL)) ORDER BY ((COALESCE(t0.c1, t0.c73)) NOT BETWEEN (((t0.c2)IS(t0.c30))) AND (((t0.c1)IS(t0.c2))))  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(0.146831854864501 AS NUMERIC) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c1) IS FALSE) END) ORDER BY (NOT (vt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN CAST(0.146831854864501 AS NUMERIC) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c1))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(0.146831854864501 AS NUMERIC) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c1) IS FALSE) END) ORDER BY (NOT (vt0.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN CAST(0.146831854864501 AS NUMERIC) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c1) IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY (NOT (vt0.c1))  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN CAST(0.146831854864501 AS NUMERIC) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c1) IS FALSE) END) ORDER BY (NOT (vt0.c1))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c0 AS INTEGER) AS INTEGER)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c0 AS INTEGER) AS INTEGER));
SELECT * FROM t0 INNER JOIN vt0 ON t0.c1 WHERE (NULL) ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(t0.c73)))OR(((t0.c1) NOT NULL))))AND(0.06761948966162823)))OR(UNLIKELY(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c1 ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(t0.c73)))OR(((t0.c1) NOT NULL))))AND(0.06761948966162823)))OR(UNLIKELY(t0.c2))) ASC);
SELECT * FROM t0 INNER JOIN vt0 ON t0.c1 WHERE (NULL) ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(t0.c73)))OR(((t0.c1) NOT NULL))))AND(0.06761948966162823)))OR(UNLIKELY(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c1 ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(t0.c73)))OR(((t0.c1) NOT NULL))))AND(0.06761948966162823)))OR(UNLIKELY(t0.c2))) ASC);
SELECT * FROM t0 INNER JOIN vt0 ON t0.c1 WHERE (NULL) ORDER BY ((((((((CAST(t0.c0 AS INTEGER))AND(t0.c73)))OR(((t0.c1) NOT NULL))))AND(0.06761948966162823)))OR(UNLIKELY(t0.c2))) ASC;
SELECT ALL * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c2) NOTNULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(((t0.c2) NOTNULL))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (SQLITE_COMPILEOPTION_USED(((t0.c2) NOTNULL)));
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(t0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR(t0.c73)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c1))) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR(t0.c73)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c1))) AND (t0.c2))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(t0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR(t0.c73)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c1))) AND (t0.c2)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR(t0.c73)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c1))) AND (t0.c2))) IS TRUE)  as count FROM t0 NOT INDEXED, vt0);
SELECT * FROM t0, vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(t0.c0))) NOT BETWEEN (((((((((((((vt0.c0)OR(t0.c73)))AND(vt0.c1)))OR(t0.c30)))OR(vt0.c0)))AND(vt0.c1)))OR(t0.c1))) AND (t0.c2)));
SELECT ALL * FROM t0 WHERE ((t0.c73 COLLATE BINARY IN ((t0.c73 IN ()), t0.c30))) ORDER BY ((CASE WHEN t0.c30 THEN t0.c73 ELSE t0.c73 END)<=(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c73 COLLATE BINARY IN ((t0.c73 IN ()), t0.c30))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c30 THEN t0.c73 ELSE t0.c73 END)<=(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((t0.c73 COLLATE BINARY IN ((t0.c73 IN ()), t0.c30))) ORDER BY ((CASE WHEN t0.c30 THEN t0.c73 ELSE t0.c73 END)<=(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((t0.c73 COLLATE BINARY IN ((t0.c73 IN ()), t0.c30))) IS TRUE)  as count FROM t0 ORDER BY ((CASE WHEN t0.c30 THEN t0.c73 ELSE t0.c73 END)<=(((t0.c0) NOTNULL)))  NULLS LAST);
SELECT ALL * FROM t0 WHERE ((t0.c73 COLLATE BINARY IN ((t0.c73 IN ()), t0.c30))) ORDER BY ((CASE WHEN t0.c30 THEN t0.c73 ELSE t0.c73 END)<=(((t0.c0) NOTNULL)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET((- (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY SQLITE_COMPILEOPTION_GET((- (vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET((- (vt0.c1))) DESC;
SELECT SUM(count) FROM (SELECT (((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY SQLITE_COMPILEOPTION_GET((- (vt0.c1))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) ORDER BY SQLITE_COMPILEOPTION_GET((- (vt0.c1))) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) ISNULL)))>=((CAST(t0.c73 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) ISNULL)))>=((CAST(t0.c73 AS TEXT))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) ISNULL)))>=((CAST(t0.c73 AS TEXT)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1) ISNULL)))>=((CAST(t0.c73 AS TEXT))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((((((vt0.c1) ISNULL)))>=((CAST(t0.c73 AS TEXT)))));
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((1880960258)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (-1800671919) AND (((vt0.c1)+(t0.c73))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((1880960258)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (-1800671919) AND (((vt0.c1)+(t0.c73))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((1880960258)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (-1800671919) AND (((vt0.c1)+(t0.c73))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((1880960258)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (-1800671919) AND (((vt0.c1)+(t0.c73))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE (vt0.c0) ORDER BY (((((1880960258)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) BETWEEN (-1800671919) AND (((vt0.c1)+(t0.c73))))  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (LIKELY((- (t0.c73)))) ORDER BY (+ ((+ (t0.c0)))) ASC, ((((((t0.c2)LIKE(t0.c0)))AND(CASE t0.c30  WHEN t0.c1 THEN vt0.c0 END)))AND(((((t0.c73)AND(t0.c1)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY((- (t0.c73)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ ((+ (t0.c0)))) ASC, ((((((t0.c2)LIKE(t0.c0)))AND(CASE t0.c30  WHEN t0.c1 THEN vt0.c0 END)))AND(((((t0.c73)AND(t0.c1)))OR(t0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (LIKELY((- (t0.c73)))) ORDER BY (+ ((+ (t0.c0)))) ASC, ((((((t0.c2)LIKE(t0.c0)))AND(CASE t0.c30  WHEN t0.c1 THEN vt0.c0 END)))AND(((((t0.c73)AND(t0.c1)))OR(t0.c1))));
SELECT SUM(count) FROM (SELECT ((LIKELY((- (t0.c73)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ ((+ (t0.c0)))) ASC, ((((((t0.c2)LIKE(t0.c0)))AND(CASE t0.c30  WHEN t0.c1 THEN vt0.c0 END)))AND(((((t0.c73)AND(t0.c1)))OR(t0.c1)))));
SELECT ALL * FROM t0, vt0 WHERE (LIKELY((- (t0.c73)))) ORDER BY (+ ((+ (t0.c0)))) ASC, ((((((t0.c2)LIKE(t0.c0)))AND(CASE t0.c30  WHEN t0.c1 THEN vt0.c0 END)))AND(((((t0.c73)AND(t0.c1)))OR(t0.c1))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ((t0.c0 IN (t0.c0)))));
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c0)) IN ((t0.c0 IN (t0.c0))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((NOT (vt0.c0)) IN ((t0.c0 IN (t0.c0)))));
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c73)))OR(vt0.c1))) BETWEEN (((t0.c1)LIKE(t0.c30))) AND (0.8008028180017422)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(t0.c73)))OR(vt0.c1))) BETWEEN (((t0.c1)LIKE(t0.c30))) AND (0.8008028180017422))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c73)))OR(vt0.c1))) BETWEEN (((t0.c1)LIKE(t0.c30))) AND (0.8008028180017422)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(t0.c73)))OR(vt0.c1))) BETWEEN (((t0.c1)LIKE(t0.c30))) AND (0.8008028180017422))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c73)))OR(vt0.c1))) BETWEEN (((t0.c1)LIKE(t0.c30))) AND (0.8008028180017422)));
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE WHEN 366832984 THEN t0.c30 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 366832984 THEN t0.c30 END AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE WHEN 366832984 THEN t0.c30 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN 366832984 THEN t0.c30 END AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CASE WHEN 366832984 THEN t0.c30 END AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (((('-1522690301')*(vt0.c1)) IN ())) ORDER BY (((vt0.c1 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-1522690301')*(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('-1522690301')*(vt0.c1)) IN ())) ORDER BY (((vt0.c1 IN ())) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-1522690301')*(vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ())) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('-1522690301')*(vt0.c1)) IN ())) ORDER BY (((vt0.c1 IN ())) ISNULL)  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN t0.c73 THEN t0.c2 END COLLATE NOCASE) ORDER BY (CASE WHEN t0.c30 THEN t0.c30 END IN ()) DESC, (~ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c73 THEN t0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c30 THEN t0.c30 END IN ()) DESC, (~ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ASC);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN t0.c73 THEN t0.c2 END COLLATE NOCASE) ORDER BY (CASE WHEN t0.c30 THEN t0.c30 END IN ()) DESC, (~ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ((CASE t0.c1  WHEN t0.c73 THEN t0.c2 END COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY (CASE WHEN t0.c30 THEN t0.c30 END IN ()) DESC, (~ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ASC);
SELECT ALL * FROM t0 WHERE (CASE t0.c1  WHEN t0.c73 THEN t0.c2 END COLLATE NOCASE) ORDER BY (CASE WHEN t0.c30 THEN t0.c30 END IN ()) DESC, (~ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c2)))) ASC;
SELECT * FROM t0, vt0 WHERE ((((vt0.c0))<(((NOT (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<(((NOT (t0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0))<(((NOT (t0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0))<(((NOT (t0.c1)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((vt0.c0))<(((NOT (t0.c1))))));
SELECT * FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c1))) NOT NULL)) ORDER BY CASE ((0.2840164454260947) NOT BETWEEN (vt0.c0) AND ('C8'))  WHEN (t0.c30 IN ()) THEN '' WHEN CAST(NULL AS NUMERIC) THEN vt0.c1 WHEN t0.c2 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c73) AND (t0.c30)) END, (((((vt0.c0) ISNULL)))==(((((t0.c1, t0.c73, t0.c30))>((t0.c30, NULL, vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((0.2840164454260947) NOT BETWEEN (vt0.c0) AND ('C8'))  WHEN (t0.c30 IN ()) THEN '' WHEN CAST(NULL AS NUMERIC) THEN vt0.c1 WHEN t0.c2 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c73) AND (t0.c30)) END, (((((vt0.c0) ISNULL)))==(((((t0.c1, t0.c73, t0.c30))>((t0.c30, NULL, vt0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c1))) NOT NULL)) ORDER BY CASE ((0.2840164454260947) NOT BETWEEN (vt0.c0) AND ('C8'))  WHEN (t0.c30 IN ()) THEN '' WHEN CAST(NULL AS NUMERIC) THEN vt0.c1 WHEN t0.c2 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c73) AND (t0.c30)) END, (((((vt0.c0) ISNULL)))==(((((t0.c1, t0.c73, t0.c30))>((t0.c30, NULL, vt0.c0)))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t0.c0 IN (t0.c1))) NOT NULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE ((0.2840164454260947) NOT BETWEEN (vt0.c0) AND ('C8'))  WHEN (t0.c30 IN ()) THEN '' WHEN CAST(NULL AS NUMERIC) THEN vt0.c1 WHEN t0.c2 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c73) AND (t0.c30)) END, (((((vt0.c0) ISNULL)))==(((((t0.c1, t0.c73, t0.c30))>((t0.c30, NULL, vt0.c0)))))) DESC  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE ((((t0.c0 IN (t0.c1))) NOT NULL)) ORDER BY CASE ((0.2840164454260947) NOT BETWEEN (vt0.c0) AND ('C8'))  WHEN (t0.c30 IN ()) THEN '' WHEN CAST(NULL AS NUMERIC) THEN vt0.c1 WHEN t0.c2 COLLATE BINARY THEN ((t0.c0) BETWEEN (t0.c73) AND (t0.c30)) END, (((((vt0.c0) ISNULL)))==(((((t0.c1, t0.c73, t0.c30))>((t0.c30, NULL, vt0.c0)))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c0) BETWEEN (t0.c30) AND (NULL))) BETWEEN (((t0.c0)>=(t0.c30))) AND (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c30) AND (NULL))) BETWEEN (((t0.c0)>=(t0.c30))) AND (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c0) BETWEEN (t0.c30) AND (NULL))) BETWEEN (((t0.c0)>=(t0.c30))) AND (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c0) BETWEEN (t0.c30) AND (NULL))) BETWEEN (((t0.c0)>=(t0.c30))) AND (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (((((t0.c0) BETWEEN (t0.c30) AND (NULL))) BETWEEN (((t0.c0)>=(t0.c30))) AND (CASE t0.c0  WHEN t0.c0 THEN vt0.c1 END)));
SELECT ALL * FROM vt0, t0 WHERE (CASE LIKE(t0.c0, t0.c1, '7')  WHEN ((vt0.c0)LIKE(t0.c30)) THEN HEX(DISTINCT t0.c73) ELSE ((((0.7391841183630935)AND(t0.c73)))OR(vt0.c1)) END) ORDER BY ((t0.c73 COLLATE RTRIM) IS FALSE), (((t0.c1 IN (t0.c0)))%(((t0.c0) BETWEEN (t0.c1) AND (t0.c30)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE(t0.c0, t0.c1, '7')  WHEN ((vt0.c0)LIKE(t0.c30)) THEN HEX(DISTINCT t0.c73) ELSE ((((0.7391841183630935)AND(t0.c73)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c73 COLLATE RTRIM) IS FALSE), (((t0.c1 IN (t0.c0)))%(((t0.c0) BETWEEN (t0.c1) AND (t0.c30)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE LIKE(t0.c0, t0.c1, '7')  WHEN ((vt0.c0)LIKE(t0.c30)) THEN HEX(DISTINCT t0.c73) ELSE ((((0.7391841183630935)AND(t0.c73)))OR(vt0.c1)) END) ORDER BY ((t0.c73 COLLATE RTRIM) IS FALSE), (((t0.c1 IN (t0.c0)))%(((t0.c0) BETWEEN (t0.c1) AND (t0.c30)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE LIKE(t0.c0, t0.c1, '7')  WHEN ((vt0.c0)LIKE(t0.c30)) THEN HEX(DISTINCT t0.c73) ELSE ((((0.7391841183630935)AND(t0.c73)))OR(vt0.c1)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c73 COLLATE RTRIM) IS FALSE), (((t0.c1 IN (t0.c0)))%(((t0.c0) BETWEEN (t0.c1) AND (t0.c30)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CASE LIKE(t0.c0, t0.c1, '7')  WHEN ((vt0.c0)LIKE(t0.c30)) THEN HEX(DISTINCT t0.c73) ELSE ((((0.7391841183630935)AND(t0.c73)))OR(vt0.c1)) END) ORDER BY ((t0.c73 COLLATE RTRIM) IS FALSE), (((t0.c1 IN (t0.c0)))%(((t0.c0) BETWEEN (t0.c1) AND (t0.c30)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c1))<((t0.c30)))) IS FALSE) WHERE ((('-684930644' COLLATE NOCASE) BETWEEN (t0.c0) AND (((t0.c30) NOTNULL)))) ORDER BY (((t0.c2)IS('/cm皎')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((('-684930644' COLLATE NOCASE) BETWEEN (t0.c0) AND (((t0.c30) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c1))<((t0.c30)))) IS FALSE) ORDER BY (((t0.c2)IS('/cm皎')) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c1))<((t0.c30)))) IS FALSE) WHERE ((('-684930644' COLLATE NOCASE) BETWEEN (t0.c0) AND (((t0.c30) NOTNULL)))) ORDER BY (((t0.c2)IS('/cm皎')) IN ());
SELECT SUM(count) FROM (SELECT ALL (((('-684930644' COLLATE NOCASE) BETWEEN (t0.c0) AND (((t0.c30) NOTNULL)))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON (((((t0.c1))<((t0.c30)))) IS FALSE) ORDER BY (((t0.c2)IS('/cm皎')) IN ()));
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON (((((t0.c1))<((t0.c30)))) IS FALSE) WHERE ((('-684930644' COLLATE NOCASE) BETWEEN (t0.c0) AND (((t0.c30) NOTNULL)))) ORDER BY (((t0.c2)IS('/cm皎')) IN ());
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ('');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c73) ISNULL) COLLATE BINARY) ORDER BY '-997485690' DESC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c73) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY '-997485690' DESC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c73) ISNULL) COLLATE BINARY) ORDER BY '-997485690' DESC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c73) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY '-997485690' DESC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c73) ISNULL) COLLATE BINARY) ORDER BY '-997485690' DESC  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c73) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c73) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c73) ISNULL))));
SELECT SUM(count) FROM (SELECT (((NOT (((t0.c73) ISNULL)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((NOT (((t0.c73) ISNULL))));
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))<=(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(((vt0.c1) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))<=(((vt0.c1) NOTNULL)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))<=(((vt0.c1) NOTNULL))));
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c73  WHEN t0.c73 THEN t0.c2 ELSE vt0.c1 END)&(((t0.c73)<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c73  WHEN t0.c73 THEN t0.c2 ELSE vt0.c1 END)&(((t0.c73)<(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c73  WHEN t0.c73 THEN t0.c2 ELSE vt0.c1 END)&(((t0.c73)<(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c73  WHEN t0.c73 THEN t0.c2 ELSE vt0.c1 END)&(((t0.c73)<(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((CASE t0.c73  WHEN t0.c73 THEN t0.c2 ELSE vt0.c1 END)&(((t0.c73)<(t0.c2)))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c2 COLLATE BINARY) BETWEEN (((vt0.c0) NOTNULL)) AND ((t0.c1 IN ())))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY) BETWEEN (((vt0.c0) NOTNULL)) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c2 COLLATE BINARY) BETWEEN (((vt0.c0) NOTNULL)) AND ((t0.c1 IN ())))) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE BINARY) BETWEEN (((vt0.c0) NOTNULL)) AND ((t0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY vt0.c1  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c2 COLLATE BINARY) BETWEEN (((vt0.c0) NOTNULL)) AND ((t0.c1 IN ())))) ORDER BY vt0.c1  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM t0 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM t0 NATURAL JOIN vt0 WHERE (vt0.c0);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(t0.c73 AS INTEGER) AS REAL)) ORDER BY (+ ((+ (t0.c73)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c73 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ ((+ (t0.c73)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(t0.c73 AS INTEGER) AS REAL)) ORDER BY (+ ((+ (t0.c73)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c73 AS INTEGER) AS REAL)) IS TRUE)  as count FROM t0, vt0 ORDER BY (+ ((+ (t0.c73)))) ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (CAST(CAST(t0.c73 AS INTEGER) AS REAL)) ORDER BY (+ ((+ (t0.c73)))) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE (((((((t0.c73)AND(t0.c0)))AND(vt0.c0)))*(json_insert(t0.c1, t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c73)AND(t0.c0)))AND(vt0.c0)))*(json_insert(t0.c1, t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c73)AND(t0.c0)))AND(vt0.c0)))*(json_insert(t0.c1, t0.c0, t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c73)AND(t0.c0)))AND(vt0.c0)))*(json_insert(t0.c1, t0.c0, t0.c0)))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT((vt0.c1 IN ())))) ORDER BY ((((vt0.c0)OR((~ (x'')))))AND(CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))IS NOT((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR((~ (x'')))))AND(CAST(vt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT((vt0.c1 IN ())))) ORDER BY ((((vt0.c0)OR((~ (x'')))))AND(CAST(vt0.c0 AS REAL))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))IS NOT((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR((~ (x'')))))AND(CAST(vt0.c0 AS REAL))) ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))IS NOT((vt0.c1 IN ())))) ORDER BY ((((vt0.c0)OR((~ (x'')))))AND(CAST(vt0.c0 AS REAL))) ASC;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON TRIM(t0.c30 COLLATE NOCASE, CAST(t0.c30 AS REAL)) WHERE (CAST(CAST('' AS TEXT) AS NUMERIC)) ORDER BY HEX(t0.c73) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('' AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON TRIM(t0.c30 COLLATE NOCASE, CAST(t0.c30 AS REAL)) ORDER BY HEX(t0.c73) ASC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON TRIM(t0.c30 COLLATE NOCASE, CAST(t0.c30 AS REAL)) WHERE (CAST(CAST('' AS TEXT) AS NUMERIC)) ORDER BY HEX(t0.c73) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST('' AS TEXT) AS NUMERIC)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON TRIM(t0.c30 COLLATE NOCASE, CAST(t0.c30 AS REAL)) ORDER BY HEX(t0.c73) ASC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN t0 ON TRIM(t0.c30 COLLATE NOCASE, CAST(t0.c30 AS REAL)) WHERE (CAST(CAST('' AS TEXT) AS NUMERIC)) ORDER BY HEX(t0.c73) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER((NOT (t0.c30)))) ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((NOT (t0.c30)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER((NOT (t0.c30)))) ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER((NOT (t0.c30)))) IS TRUE)  as count FROM t0, vt0 ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS INTEGER) ASC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (LOWER((NOT (t0.c30)))) ORDER BY CAST(CAST(t0.c2 AS INTEGER) AS INTEGER) ASC;
SELECT * FROM t0, vt0 WHERE ((- ((((t0.c2))>=((t0.c73))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c2))>=((t0.c73)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((- ((((t0.c2))>=((t0.c73))))));
SELECT SUM(count) FROM (SELECT (((- ((((t0.c2))>=((t0.c73)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((- ((((t0.c2))>=((t0.c73))))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)=(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)==(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)=(((vt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)==(((vt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)=(((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0))) NOT BETWEEN ((((t0.c0, t0.c73, t0.c73)) BETWEEN ((t0.c1, t0.c73, x'')) AND (('^%KVm', t0.c2, t0.c1)))) AND ((t0.c0 IN (t0.c73)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) NOT BETWEEN ((((t0.c0, t0.c73, t0.c73)) BETWEEN ((t0.c1, t0.c73, x'')) AND (('^%KVm', t0.c2, t0.c1)))) AND ((t0.c0 IN (t0.c73))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0))) NOT BETWEEN ((((t0.c0, t0.c73, t0.c73)) BETWEEN ((t0.c1, t0.c73, x'')) AND (('^%KVm', t0.c2, t0.c1)))) AND ((t0.c0 IN (t0.c73)))));
SELECT SUM(count) FROM (SELECT (((((NOT (t0.c0))) NOT BETWEEN ((((t0.c0, t0.c73, t0.c73)) BETWEEN ((t0.c1, t0.c73, x'')) AND (('^%KVm', t0.c2, t0.c1)))) AND ((t0.c0 IN (t0.c73))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((NOT (t0.c0))) NOT BETWEEN ((((t0.c0, t0.c73, t0.c73)) BETWEEN ((t0.c1, t0.c73, x'')) AND (('^%KVm', t0.c2, t0.c1)))) AND ((t0.c0 IN (t0.c73)))));
SELECT * FROM t0 WHERE ((NOT ((((t0.c1))<((t0.c1)))))) ORDER BY ((('2-Infinitysd~鑍S<I_', ((t0.c2) IS TRUE), (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c2)))))<((((t0.c0)IS('w')), TYPEOF(DISTINCT -326680064), ((((t0.c1)AND('0S踂f_8.')))OR(t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c1))<((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((('2-Infinitysd~鑍S<I_', ((t0.c2) IS TRUE), (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c2)))))<((((t0.c0)IS('w')), TYPEOF(DISTINCT -326680064), ((((t0.c1)AND('0S踂f_8.')))OR(t0.c2))))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT ((((t0.c1))<((t0.c1)))))) ORDER BY ((('2-Infinitysd~鑍S<I_', ((t0.c2) IS TRUE), (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c2)))))<((((t0.c0)IS('w')), TYPEOF(DISTINCT -326680064), ((((t0.c1)AND('0S踂f_8.')))OR(t0.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c1))<((t0.c1)))))) IS TRUE)  as count FROM t0 ORDER BY ((('2-Infinitysd~鑍S<I_', ((t0.c2) IS TRUE), (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c2)))))<((((t0.c0)IS('w')), TYPEOF(DISTINCT -326680064), ((((t0.c1)AND('0S踂f_8.')))OR(t0.c2))))) DESC  NULLS FIRST);
SELECT * FROM t0 WHERE ((NOT ((((t0.c1))<((t0.c1)))))) ORDER BY ((('2-Infinitysd~鑍S<I_', ((t0.c2) IS TRUE), (((t0.c30)) BETWEEN ((t0.c0)) AND ((t0.c2)))))<((((t0.c0)IS('w')), TYPEOF(DISTINCT -326680064), ((((t0.c1)AND('0S踂f_8.')))OR(t0.c2))))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE ((t0.c1 IN ())) ORDER BY ((((((((((t0.c30) NOT BETWEEN (t0.c0) AND (0xffffffffd8900668)))OR((+ (t0.c1)))))OR((t0.c1 IN ()))))AND(((t0.c1) NOTNULL))))AND(CASE t0.c30  WHEN '' THEN t0.c73 END))  NULLS LAST, (t0.c2 IN (t0.c1, t0.c73)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c30) NOT BETWEEN (t0.c0) AND (0xffffffffd8900668)))OR((+ (t0.c1)))))OR((t0.c1 IN ()))))AND(((t0.c1) NOTNULL))))AND(CASE t0.c30  WHEN '' THEN t0.c73 END))  NULLS LAST, (t0.c2 IN (t0.c1, t0.c73)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c1 IN ())) ORDER BY ((((((((((t0.c30) NOT BETWEEN (t0.c0) AND (0xffffffffd8900668)))OR((+ (t0.c1)))))OR((t0.c1 IN ()))))AND(((t0.c1) NOTNULL))))AND(CASE t0.c30  WHEN '' THEN t0.c73 END))  NULLS LAST, (t0.c2 IN (t0.c1, t0.c73)) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((t0.c1 IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((((((((t0.c30) NOT BETWEEN (t0.c0) AND (0xffffffffd8900668)))OR((+ (t0.c1)))))OR((t0.c1 IN ()))))AND(((t0.c1) NOTNULL))))AND(CASE t0.c30  WHEN '' THEN t0.c73 END))  NULLS LAST, (t0.c2 IN (t0.c1, t0.c73)) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((t0.c1 IN ())) ORDER BY ((((((((((t0.c30) NOT BETWEEN (t0.c0) AND (0xffffffffd8900668)))OR((+ (t0.c1)))))OR((t0.c1 IN ()))))AND(((t0.c1) NOTNULL))))AND(CASE t0.c30  WHEN '' THEN t0.c73 END))  NULLS LAST, (t0.c2 IN (t0.c1, t0.c73)) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c73 AS NUMERIC))>=(t0.c30)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c73 AS NUMERIC))>=(t0.c30))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c73 AS NUMERIC))>=(t0.c30)));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c73 AS NUMERIC))>=(t0.c30))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c73 AS NUMERIC))>=(t0.c30)));
SELECT ALL * FROM vt0 WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (((((((((((vt0.c1))!=((vt0.c0))))OR(vt0.c0)))OR((vt0.c1 IN (vt0.c1, '2083085735')))))OR(((vt0.c1) NOT NULL))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c1))!=((vt0.c0))))OR(vt0.c0)))OR((vt0.c1 IN (vt0.c1, '2083085735')))))OR(((vt0.c1) NOT NULL))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (((((((((((vt0.c1))!=((vt0.c0))))OR(vt0.c0)))OR((vt0.c1 IN (vt0.c1, '2083085735')))))OR(((vt0.c1) NOT NULL))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY (((((((((((vt0.c1))!=((vt0.c0))))OR(vt0.c0)))OR((vt0.c1 IN (vt0.c1, '2083085735')))))OR(((vt0.c1) NOT NULL))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (HEX(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) ORDER BY (((((((((((vt0.c1))!=((vt0.c0))))OR(vt0.c0)))OR((vt0.c1 IN (vt0.c1, '2083085735')))))OR(((vt0.c1) NOT NULL))))OR(CAST(vt0.c1 AS INTEGER)))  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c30 AS TEXT) IN ())) ORDER BY UPPER(t0.c73 COLLATE NOCASE)  NULLS FIRST, ((0.8104904265178007)GLOB(CASE WHEN t0.c30 THEN '*\n' ELSE vt0.c1 END))  NULLS FIRST, 1573761115  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c30 AS TEXT) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(t0.c73 COLLATE NOCASE)  NULLS FIRST, ((0.8104904265178007)GLOB(CASE WHEN t0.c30 THEN '*\n' ELSE vt0.c1 END))  NULLS FIRST, 1573761115  NULLS FIRST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((CAST(t0.c30 AS TEXT) IN ())) ORDER BY UPPER(t0.c73 COLLATE NOCASE)  NULLS FIRST, ((0.8104904265178007)GLOB(CASE WHEN t0.c30 THEN '*\n' ELSE vt0.c1 END))  NULLS FIRST, 1573761115  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c30 AS TEXT) IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY UPPER(t0.c73 COLLATE NOCASE)  NULLS FIRST, ((0.8104904265178007)GLOB(CASE WHEN t0.c30 THEN '*\n' ELSE vt0.c1 END))  NULLS FIRST, 1573761115  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(0.18222750704653634))) BETWEEN (LIKELY(DISTINCT t0.c2)) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))) WHERE (((t0.c0)==(t0.c0)) COLLATE BINARY) ORDER BY (NOT (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)==(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(0.18222750704653634))) BETWEEN (LIKELY(DISTINCT t0.c2)) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))) ORDER BY (NOT (x''))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(0.18222750704653634))) BETWEEN (LIKELY(DISTINCT t0.c2)) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))) WHERE (((t0.c0)==(t0.c0)) COLLATE BINARY) ORDER BY (NOT (x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c0)==(t0.c0)) COLLATE BINARY) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(0.18222750704653634))) BETWEEN (LIKELY(DISTINCT t0.c2)) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))) ORDER BY (NOT (x''))  NULLS LAST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON ((((((t0.c0)OR(t0.c0)))AND(0.18222750704653634))) BETWEEN (LIKELY(DISTINCT t0.c2)) AND (((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)))) WHERE (((t0.c0)==(t0.c0)) COLLATE BINARY) ORDER BY (NOT (x''))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (~ (x'')) THEN ((((t0.c73)OR(t0.c30)))AND(t0.c2)) ELSE CASE WHEN t0.c30 THEN x'cd25' ELSE t0.c30 END END) ORDER BY ((UNLIKELY(t0.c0)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (x'')) THEN ((((t0.c73)OR(t0.c30)))AND(t0.c2)) ELSE CASE WHEN t0.c30 THEN x'cd25' ELSE t0.c30 END END) IS TRUE)  as count FROM t0 ORDER BY ((UNLIKELY(t0.c0)) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (~ (x'')) THEN ((((t0.c73)OR(t0.c30)))AND(t0.c2)) ELSE CASE WHEN t0.c30 THEN x'cd25' ELSE t0.c30 END END) ORDER BY ((UNLIKELY(t0.c0)) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (x'')) THEN ((((t0.c73)OR(t0.c30)))AND(t0.c2)) ELSE CASE WHEN t0.c30 THEN x'cd25' ELSE t0.c30 END END) IS TRUE)  as count FROM t0 ORDER BY ((UNLIKELY(t0.c0)) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (~ (x'')) THEN ((((t0.c73)OR(t0.c30)))AND(t0.c2)) ELSE CASE WHEN t0.c30 THEN x'cd25' ELSE t0.c30 END END) ORDER BY ((UNLIKELY(t0.c0)) NOTNULL);
SELECT COUNT(*) FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((t0.c2)*('-38118894'));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)*('-38118894')));
SELECT COUNT(*) FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((t0.c2)*('-38118894'));
SELECT SUM(count) FROM (SELECT ALL ((t0.c0 COLLATE NOCASE) IS TRUE)  as count FROM t0 ORDER BY ((t0.c2)*('-38118894')));
SELECT COUNT(*) FROM t0 WHERE (t0.c0 COLLATE NOCASE) ORDER BY ((t0.c2)*('-38118894'));
SELECT * FROM t0 WHERE ((NOT ((((t0.c73, t0.c30, t0.c30))>=((t0.c0, t0.c0, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c73, t0.c30, t0.c30))>=((t0.c0, t0.c0, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((((t0.c73, t0.c30, t0.c30))>=((t0.c0, t0.c0, t0.c2))))));
SELECT SUM(count) FROM (SELECT (((NOT ((((t0.c73, t0.c30, t0.c30))>=((t0.c0, t0.c0, t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((NOT ((((t0.c73, t0.c30, t0.c30))>=((t0.c0, t0.c0, t0.c2))))));
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY ((vt0.c1) IS FALSE) COLLATE BINARY  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (HEX(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(vt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((HEX(vt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (HEX(vt0.c1) COLLATE NOCASE);
SELECT COUNT(*) FROM t0 WHERE ((~ ((x'' IN ())))) ORDER BY ((((0.22922141514244065) NOT BETWEEN (t0.c0) AND (t0.c30)))/(CASE t0.c30  WHEN t0.c30 THEN t0.c1 ELSE t0.c30 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((x'' IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((0.22922141514244065) NOT BETWEEN (t0.c0) AND (t0.c30)))/(CASE t0.c30  WHEN t0.c30 THEN t0.c1 ELSE t0.c30 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ ((x'' IN ())))) ORDER BY ((((0.22922141514244065) NOT BETWEEN (t0.c0) AND (t0.c30)))/(CASE t0.c30  WHEN t0.c30 THEN t0.c1 ELSE t0.c30 END)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((x'' IN ())))) IS TRUE)  as count FROM t0 ORDER BY ((((0.22922141514244065) NOT BETWEEN (t0.c0) AND (t0.c30)))/(CASE t0.c30  WHEN t0.c30 THEN t0.c1 ELSE t0.c30 END)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((~ ((x'' IN ())))) ORDER BY ((((0.22922141514244065) NOT BETWEEN (t0.c0) AND (t0.c30)))/(CASE t0.c30  WHEN t0.c30 THEN t0.c1 ELSE t0.c30 END)) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)-(t0.c73))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-(t0.c73))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)-(t0.c73))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)-(t0.c73))) NOT NULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c0)-(t0.c73))) NOT NULL));
SELECT * FROM vt0, t0 WHERE (((NULL) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (x''))) ORDER BY CASE (t0.c30 IN ())  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (t0.c30 IN ())  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC);
SELECT * FROM vt0, t0 WHERE (((NULL) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (x''))) ORDER BY CASE (t0.c30 IN ())  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((NULL) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (x''))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE (t0.c30 IN ())  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC);
SELECT * FROM vt0, t0 WHERE (((NULL) NOT BETWEEN (CAST(t0.c0 AS TEXT)) AND (x''))) ORDER BY CASE (t0.c30 IN ())  WHEN ((t0.c0)||(t0.c0)) THEN ((t0.c0)LIKE(t0.c0)) ELSE vt0.c0 COLLATE RTRIM END DESC;
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((t0.c2)<<(t0.c1)) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((t0.c2)<<(t0.c1)) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((t0.c2)<<(t0.c1)) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY CASE WHEN ((t0.c2)<<(t0.c1)) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END ASC  NULLS FIRST);
SELECT ALL * FROM t0, vt0 WHERE (vt0.c1) ORDER BY CASE WHEN ((t0.c2)<<(t0.c1)) THEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) END ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER))<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))<<(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER))<<(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))<<(vt0.c0))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CAST(vt0.c0 AS INTEGER))<<(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN (0.8434969470488096)))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1))))))AND(((-9.74351022E8)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN (0.8434969470488096)))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1))))))AND(((-9.74351022E8)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN (0.8434969470488096)))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1))))))AND(((-9.74351022E8)*(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1 IN (0.8434969470488096)))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1))))))AND(((-9.74351022E8)*(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((vt0.c1 IN (0.8434969470488096)))AND((((vt0.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c1, vt0.c1))))))AND(((-9.74351022E8)*(vt0.c0)))));
SELECT * FROM vt0 INNER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (t0.c73) AND (DATE(t0.c1, t0.c30, t0.c73))) WHERE ('cD<}DCdw') ORDER BY ((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c30)))/(((vt0.c0)<>(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('cD<}DCdw') IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (t0.c73) AND (DATE(t0.c1, t0.c30, t0.c73))) ORDER BY ((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c30)))/(((vt0.c0)<>(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (t0.c73) AND (DATE(t0.c1, t0.c30, t0.c73))) WHERE ('cD<}DCdw') ORDER BY ((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c30)))/(((vt0.c0)<>(t0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('cD<}DCdw') IS TRUE)  as count FROM vt0 INNER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (t0.c73) AND (DATE(t0.c1, t0.c30, t0.c73))) ORDER BY ((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c30)))/(((vt0.c0)<>(t0.c1)))) DESC  NULLS LAST);
SELECT * FROM vt0 INNER JOIN t0 ON ((CAST(t0.c2 AS BLOB)) BETWEEN (t0.c73) AND (DATE(t0.c1, t0.c30, t0.c73))) WHERE ('cD<}DCdw') ORDER BY ((((((((((t0.c2)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(t0.c30)))/(((vt0.c0)<>(t0.c1)))) DESC  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))LIKE(((t0.c30) NOT BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))LIKE(((t0.c30) NOT BETWEEN (t0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))LIKE(((t0.c30) NOT BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))LIKE(((t0.c30) NOT BETWEEN (t0.c1) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((((vt0.c1)AND(t0.c0)))OR(vt0.c0)))LIKE(((t0.c30) NOT BETWEEN (t0.c1) AND (vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((t0.c2 COLLATE RTRIM) BETWEEN ((t0.c2 IN ())) AND (t0.c1))) ORDER BY ((((t0.c73 COLLATE RTRIM)AND(t0.c30)))AND(UPPER(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM) BETWEEN ((t0.c2 IN ())) AND (t0.c1))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c73 COLLATE RTRIM)AND(t0.c30)))AND(UPPER(t0.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2 COLLATE RTRIM) BETWEEN ((t0.c2 IN ())) AND (t0.c1))) ORDER BY ((((t0.c73 COLLATE RTRIM)AND(t0.c30)))AND(UPPER(t0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2 COLLATE RTRIM) BETWEEN ((t0.c2 IN ())) AND (t0.c1))) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c73 COLLATE RTRIM)AND(t0.c30)))AND(UPPER(t0.c0))) ASC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c2 COLLATE RTRIM) BETWEEN ((t0.c2 IN ())) AND (t0.c1))) ORDER BY ((((t0.c73 COLLATE RTRIM)AND(t0.c30)))AND(UPPER(t0.c0))) ASC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ALL ((t0.c1) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (t0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (((TOTAL_CHANGES()) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TOTAL_CHANGES()) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((TOTAL_CHANGES()) NOTNULL)) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((TOTAL_CHANGES()) NOTNULL));
SELECT COUNT(*) FROM t0 WHERE (((t0.c1 COLLATE BINARY)-(((t0.c0)OR(t0.c73)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)-(((t0.c0)OR(t0.c73))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c1 COLLATE BINARY)-(((t0.c0)OR(t0.c73)))));
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)-(((t0.c0)OR(t0.c73))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((t0.c1 COLLATE BINARY)-(((t0.c0)OR(t0.c73)))));
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER)) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (CAST(((t0.c0) BETWEEN (t0.c1) AND (t0.c0)) AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((x'')/(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE (((x'')/(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL ((((x'')/(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC);
SELECT ALL * FROM vt0 WHERE (((x'')/(((((((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1))))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE DESC;
SELECT * FROM vt0, t0 WHERE ((+ (((t0.c2)/(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2)/(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((+ (((t0.c2)/(t0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((t0.c2)/(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((+ (((t0.c2)/(t0.c2)))));
SELECT COUNT(*) FROM t0, vt0 WHERE (highlight(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE BINARY, (- (t0.c73)), ((((t0.c1)AND(vt0.c0)))AND(t0.c0)))) ORDER BY (CAST(t0.c73 AS BLOB) IN ()) ASC  NULLS FIRST, (t0.c73 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE BINARY, (- (t0.c73)), ((((t0.c1)AND(vt0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CAST(t0.c73 AS BLOB) IN ()) ASC  NULLS FIRST, (t0.c73 IN ()) DESC);
SELECT COUNT(*) FROM t0, vt0 WHERE (highlight(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE BINARY, (- (t0.c73)), ((((t0.c1)AND(vt0.c0)))AND(t0.c0)))) ORDER BY (CAST(t0.c73 AS BLOB) IN ()) ASC  NULLS FIRST, (t0.c73 IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((highlight(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, vt0.c0 COLLATE BINARY, (- (t0.c73)), ((((t0.c1)AND(vt0.c0)))AND(t0.c0)))) IS TRUE)  as count FROM t0, vt0 ORDER BY (CAST(t0.c73 AS BLOB) IN ()) ASC  NULLS FIRST, (t0.c73 IN ()) DESC);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE RTRIM(t0.c0)  WHEN ((t0.c0) NOTNULL) THEN TYPEOF(DISTINCT t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE RTRIM(t0.c0)  WHEN ((t0.c0) NOTNULL) THEN TYPEOF(DISTINCT t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE RTRIM(t0.c0)  WHEN ((t0.c0) NOTNULL) THEN TYPEOF(DISTINCT t0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE RTRIM(t0.c0)  WHEN ((t0.c0) NOTNULL) THEN TYPEOF(DISTINCT t0.c0) END) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (CASE RTRIM(t0.c0)  WHEN ((t0.c0) NOTNULL) THEN TYPEOF(DISTINCT t0.c0) END);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)), 0.03243317025381509) WHERE ('-1022303804');
SELECT SUM(count) FROM (SELECT ALL (('-1022303804') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)), 0.03243317025381509));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)), 0.03243317025381509) WHERE ('-1022303804');
SELECT SUM(count) FROM (SELECT ALL (('-1022303804') IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)), 0.03243317025381509));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN t0 ON IFNULL(DISTINCT ((t0.c2) NOT BETWEEN (t0.c1) AND (vt0.c1)), 0.03243317025381509) WHERE ('-1022303804');
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (CAST(((t0.c1) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (CAST(((t0.c1) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t0.c1) NOT NULL) AS TEXT)) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL * FROM vt0 NOT INDEXED, t0 WHERE (CAST(((t0.c1) NOT NULL) AS TEXT));
SELECT * FROM vt0 WHERE (0.8889650232820858);
SELECT SUM(count) FROM (SELECT ((0.8889650232820858) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8889650232820858);
SELECT SUM(count) FROM (SELECT ((0.8889650232820858) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (0.8889650232820858);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((((vt0.c1) NOT NULL) IN (((t0.c0) NOT BETWEEN (0.10911012312018431) AND (t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT NULL) IN (((t0.c0) NOT BETWEEN (0.10911012312018431) AND (t0.c30))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((((vt0.c1) NOT NULL) IN (((t0.c0) NOT BETWEEN (0.10911012312018431) AND (t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT NULL) IN (((t0.c0) NOT BETWEEN (0.10911012312018431) AND (t0.c30))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON NULL);
SELECT * FROM vt0 RIGHT OUTER JOIN t0 ON NULL WHERE ((((vt0.c1) NOT NULL) IN (((t0.c0) NOT BETWEEN (0.10911012312018431) AND (t0.c30)))));
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c30) IS FALSE))AND(((t0.c1) BETWEEN (414378639) AND (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c30 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30) IS FALSE))AND(((t0.c1) BETWEEN (414378639) AND (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c30 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c30) IS FALSE))AND(((t0.c1) BETWEEN (414378639) AND (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c30 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30) IS FALSE))AND(((t0.c1) BETWEEN (414378639) AND (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c30 END))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((((((t0.c30) IS FALSE))AND(((t0.c1) BETWEEN (414378639) AND (NULL)))))AND(CASE WHEN t0.c0 THEN t0.c2 ELSE t0.c30 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY INSTR(json_patch(vt0.c0, vt0.c0), ((t0.c2)<>(t0.c73)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(json_patch(vt0.c0, vt0.c0), ((t0.c2)!=(t0.c73)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY INSTR(json_patch(vt0.c0, vt0.c0), ((t0.c2)<>(t0.c73)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM t0, vt0 ORDER BY INSTR(json_patch(vt0.c0, vt0.c0), ((t0.c2)!=(t0.c73)))  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (vt0.c1) ORDER BY INSTR(json_patch(vt0.c0, vt0.c0), ((t0.c2)<>(t0.c73)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((('1715615073') IS FALSE))>=(((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.045806156471237314)))) WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((('1715615073') IS FALSE))>=(((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.045806156471237314)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((('1715615073') IS FALSE))>=(((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.045806156471237314)))) WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((('1715615073') IS FALSE))>=(((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.045806156471237314)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (((('1715615073') IS FALSE))>=(((((((((t0.c2)AND(t0.c2)))AND(t0.c0)))OR(t0.c2)))AND(0.045806156471237314)))) WHERE (t0.c30);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) IS TRUE))>>('1298369345')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))>>('1298369345'))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) IS TRUE))>>('1298369345')));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0) IS TRUE))>>('1298369345'))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((t0.c0) IS TRUE))>>('1298369345')));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.39258172737136154 END IN (((vt0.c0)>>(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((0.17465872030672347)OR(NULL)))OR(0.14972010537588842)))AND(vt0.c0)))OR(vt0.c0)))) AND (((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.39258172737136154 END IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((0.17465872030672347)OR(NULL)))OR(0.14972010537588842)))AND(vt0.c0)))OR(vt0.c0)))) AND (((- (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.39258172737136154 END IN (((vt0.c0)>>(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((0.17465872030672347)OR(NULL)))OR(0.14972010537588842)))AND(vt0.c0)))OR(vt0.c0)))) AND (((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.39258172737136154 END IN (((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((0.17465872030672347)OR(NULL)))OR(0.14972010537588842)))AND(vt0.c0)))OR(vt0.c0)))) AND (((- (vt0.c0))))));
SELECT ALL * FROM vt0 WHERE ((CASE WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.39258172737136154 END IN (((vt0.c0)>>(vt0.c0))))) ORDER BY (((vt0.c0)) NOT BETWEEN ((((((((((0.17465872030672347)OR(NULL)))OR(0.14972010537588842)))AND(vt0.c0)))OR(vt0.c0)))) AND (((- (vt0.c0)))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c1)AND(t0.c2)))OR(t0.c1))) NOT BETWEEN (((vt0.c1)/(t0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY -1.337663639E9  NULLS FIRST, ((((vt0.c1)AND(CASE WHEN t0.c0 THEN vt0.c0 END)))AND(CASE WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c2)))OR(t0.c1))) NOT BETWEEN (((vt0.c1)/(t0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY -1.337663639E9  NULLS FIRST, ((((vt0.c1)AND(CASE WHEN t0.c0 THEN vt0.c0 END)))AND(CASE WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c1)AND(t0.c2)))OR(t0.c1))) NOT BETWEEN (((vt0.c1)/(t0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY -1.337663639E9  NULLS FIRST, ((((vt0.c1)AND(CASE WHEN t0.c0 THEN vt0.c0 END)))AND(CASE WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((t0.c1)AND(t0.c2)))OR(t0.c1))) NOT BETWEEN (((vt0.c1)/(t0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) IS TRUE)  as count FROM t0, vt0 ORDER BY -1.337663639E9  NULLS FIRST, ((((vt0.c1)AND(CASE WHEN t0.c0 THEN vt0.c0 END)))AND(CASE WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((t0.c1)AND(t0.c2)))OR(t0.c1))) NOT BETWEEN (((vt0.c1)/(t0.c2))) AND (CASE WHEN vt0.c1 THEN vt0.c0 END))) ORDER BY -1.337663639E9  NULLS FIRST, ((((vt0.c1)AND(CASE WHEN t0.c0 THEN vt0.c0 END)))AND(CASE WHEN t0.c0 THEN t0.c0 END)) ASC  NULLS FIRST;
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR((((t0.c30, t0.c73, t0.c73))<=((t0.c2, t0.c30, t0.c30))))))AND(t0.c73))) ORDER BY (((t0.c0 IN ())) ISNULL) ASC, (CAST(t0.c2 AS BLOB) IN ()), CAST(((t0.c30)OR(t0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR((((t0.c30, t0.c73, t0.c73))<=((t0.c2, t0.c30, t0.c30))))))AND(t0.c73))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) ISNULL) ASC, (CAST(t0.c2 AS BLOB) IN ()), CAST(((t0.c30)OR(t0.c1)) AS NUMERIC));
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR((((t0.c30, t0.c73, t0.c73))<=((t0.c2, t0.c30, t0.c30))))))AND(t0.c73))) ORDER BY (((t0.c0 IN ())) ISNULL) ASC, (CAST(t0.c2 AS BLOB) IN ()), CAST(((t0.c30)OR(t0.c1)) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c0)OR((((t0.c30, t0.c73, t0.c73))<=((t0.c2, t0.c30, t0.c30))))))AND(t0.c73))) IS TRUE)  as count FROM t0 ORDER BY (((t0.c0 IN ())) ISNULL) ASC, (CAST(t0.c2 AS BLOB) IN ()), CAST(((t0.c30)OR(t0.c1)) AS NUMERIC));
SELECT ALL * FROM t0 WHERE (((((t0.c0)OR((((t0.c30, t0.c73, t0.c73))<=((t0.c2, t0.c30, t0.c30))))))AND(t0.c73))) ORDER BY (((t0.c0 IN ())) ISNULL) ASC, (CAST(t0.c2 AS BLOB) IN ()), CAST(((t0.c30)OR(t0.c1)) AS NUMERIC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)/(vt0.c1))) NOTNULL));
SELECT ALL * FROM vt0, t0 WHERE (CAST((~ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((~ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST((~ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (CAST((~ (vt0.c1)) AS TEXT));
SELECT ALL * FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c30);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((0X571dd6e9) BETWEEN (t0.c73) AND (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0x571dd6e9) BETWEEN (t0.c73) AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((0X571dd6e9) BETWEEN (t0.c73) AND (t0.c2)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((0x571dd6e9) BETWEEN (t0.c73) AND (t0.c2)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((0X571dd6e9) BETWEEN (t0.c73) AND (t0.c2)) IN ()));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (('')<(CAST(t0.c0 AS TEXT))) WHERE (((UNICODE(x'')) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNICODE(x'')) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (('')<(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (('')<(CAST(t0.c0 AS TEXT))) WHERE (((UNICODE(x'')) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((UNICODE(x'')) IS TRUE)) IS TRUE)  as count FROM t0 FULL OUTER JOIN vt0 ON (('')<(CAST(t0.c0 AS TEXT))));
SELECT COUNT(*) FROM t0 FULL OUTER JOIN vt0 ON (('')<(CAST(t0.c0 AS TEXT))) WHERE (((UNICODE(x'')) IS TRUE));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c73 IN (t0.c1)))OR(((vt0.c1)<<(vt0.c1)))))AND((t0.c0 IN ())))) ORDER BY ((vt0.c1) NOTNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c73 IN (t0.c1)))OR(((vt0.c1)<<(vt0.c1)))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) NOTNULL) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c73 IN (t0.c1)))OR(((vt0.c1)<<(vt0.c1)))))AND((t0.c0 IN ())))) ORDER BY ((vt0.c1) NOTNULL) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c73 IN (t0.c1)))OR(((vt0.c1)<<(vt0.c1)))))AND((t0.c0 IN ())))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1) NOTNULL) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((((t0.c73 IN (t0.c1)))OR(((vt0.c1)<<(vt0.c1)))))AND((t0.c0 IN ())))) ORDER BY ((vt0.c1) NOTNULL) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c2 WHERE (CAST(((vt0.c1) NOT NULL) AS BLOB)) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((vt0.c0 IN ('-1970421514')))))  NULLS FIRST, CASE NULL  WHEN (- ('')) THEN CAST(t0.c1 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c2 ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((vt0.c0 IN ('-1970421514')))))  NULLS FIRST, CASE NULL  WHEN (- ('')) THEN CAST(t0.c1 AS REAL) END DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c2 WHERE (CAST(((vt0.c1) NOT NULL) AS BLOB)) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((vt0.c0 IN ('-1970421514')))))  NULLS FIRST, CASE NULL  WHEN (- ('')) THEN CAST(t0.c1 AS REAL) END DESC;
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) NOT NULL) AS BLOB)) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c2 ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((vt0.c0 IN ('-1970421514')))))  NULLS FIRST, CASE NULL  WHEN (- ('')) THEN CAST(t0.c1 AS REAL) END DESC);
SELECT ALL COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c2 WHERE (CAST(((vt0.c1) NOT NULL) AS BLOB)) ORDER BY (((vt0.c1)) NOT BETWEEN (((vt0.c1 IN ()))) AND (((vt0.c0 IN ('-1970421514')))))  NULLS FIRST, CASE NULL  WHEN (- ('')) THEN CAST(t0.c1 AS REAL) END DESC;
SELECT ALL * FROM t0 WHERE (0.18082912633495973) ORDER BY CAST(t0.c73 AS BLOB) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.18082912633495973) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c73 AS BLOB) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.18082912633495973) ORDER BY CAST(t0.c73 AS BLOB) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.18082912633495973) IS TRUE)  as count FROM t0 ORDER BY CAST(t0.c73 AS BLOB) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM t0 WHERE (0.18082912633495973) ORDER BY CAST(t0.c73 AS BLOB) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c73))<((t0.c2))))GLOB(CHAR(t0.c1))) WHERE ((((t0.c0)) BETWEEN (('%7h]y')) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (('%7h]y')) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON (((((t0.c73))<((t0.c2))))GLOB(CHAR(t0.c1))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c73))<((t0.c2))))GLOB(CHAR(t0.c1))) WHERE ((((t0.c0)) BETWEEN (('%7h]y')) AND (((~ (vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((t0.c0)) BETWEEN (('%7h]y')) AND (((~ (vt0.c0)))))) IS TRUE)  as count FROM vt0 NOT INDEXED FULL OUTER JOIN t0 ON (((((t0.c73))<((t0.c2))))GLOB(CHAR(t0.c1))));
SELECT * FROM vt0 FULL OUTER JOIN t0 ON (((((t0.c73))<((t0.c2))))GLOB(CHAR(t0.c1))) WHERE ((((t0.c0)) BETWEEN (('%7h]y')) AND (((~ (vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), UNLIKELY(0Xf857d19)))=(((((vt0.c1))=((923496800))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, (NULL IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), UNLIKELY(0xf857d19)))=(((((vt0.c1))=((923496800))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, (NULL IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), UNLIKELY(0Xf857d19)))=(((((vt0.c1))=((923496800))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, (NULL IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), UNLIKELY(0xf857d19)))=(((((vt0.c1))=((923496800))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, (NULL IN ()))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c1, ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), UNLIKELY(0Xf857d19)))=(((((vt0.c1))=((923496800))), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END, (NULL IN ())))));
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c73) ISNULL))&(CASE t0.c0  WHEN '525801777' THEN t0.c73 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c73) ISNULL))&(CASE t0.c0  WHEN '525801777' THEN t0.c73 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c73) ISNULL))&(CASE t0.c0  WHEN '525801777' THEN t0.c73 END)));
SELECT SUM(count) FROM (SELECT ((((((t0.c73) ISNULL))&(CASE t0.c0  WHEN '525801777' THEN t0.c73 END))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((t0.c73) ISNULL))&(CASE t0.c0  WHEN '525801777' THEN t0.c73 END)));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.9376610811907232) ORDER BY ((t0.c0)>=(vt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((t0.c2)<>(-1680664396)))OR(((t0.c73) ISNULL))))OR(CAST(vt0.c0 AS REAL))))OR(CAST(t0.c30 AS BLOB))))AND(((t0.c30) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9376610811907232) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)>=(vt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((t0.c2)<>(-1680664396)))OR(((t0.c73) ISNULL))))OR(CAST(vt0.c0 AS REAL))))OR(CAST(t0.c30 AS BLOB))))AND(((t0.c30) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.9376610811907232) ORDER BY ((t0.c0)>=(vt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((t0.c2)<>(-1680664396)))OR(((t0.c73) ISNULL))))OR(CAST(vt0.c0 AS REAL))))OR(CAST(t0.c30 AS BLOB))))AND(((t0.c30) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.9376610811907232) IS TRUE)  as count FROM t0, vt0 ORDER BY ((t0.c0)>=(vt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((t0.c2)<>(-1680664396)))OR(((t0.c73) ISNULL))))OR(CAST(vt0.c0 AS REAL))))OR(CAST(t0.c30 AS BLOB))))AND(((t0.c30) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.9376610811907232) ORDER BY ((t0.c0)>=(vt0.c1)) COLLATE BINARY  NULLS LAST, ((((((((((t0.c2)<>(-1680664396)))OR(((t0.c73) ISNULL))))OR(CAST(vt0.c0 AS REAL))))OR(CAST(t0.c30 AS BLOB))))AND(((t0.c30) BETWEEN (vt0.c0) AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)IS NOT(t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)IS NOT(t0.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS NOT(t0.c1))) IS TRUE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((vt0.c1)IS NOT(t0.c1))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((x'' IN ())) ORDER BY (UPPER(t0.c0) IN (((t0.c0)>(t0.c1)), ((t0.c2) BETWEEN (t0.c73) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (UPPER(t0.c0) IN (((t0.c0)>(t0.c1)), ((t0.c2) BETWEEN (t0.c73) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((x'' IN ())) ORDER BY (UPPER(t0.c0) IN (((t0.c0)>(t0.c1)), ((t0.c2) BETWEEN (t0.c73) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'' IN ())) IS TRUE)  as count FROM t0, vt0 ORDER BY (UPPER(t0.c0) IN (((t0.c0)>(t0.c1)), ((t0.c2) BETWEEN (t0.c73) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((x'' IN ())) ORDER BY (UPPER(t0.c0) IN (((t0.c0)>(t0.c1)), ((t0.c2) BETWEEN (t0.c73) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT))>=(((t0.c73)>=(t0.c73))))) ORDER BY (((((((t0.c2)AND(t0.c73)))AND(t0.c2))))<>((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, (('359621183')==(CASE t0.c2  WHEN t0.c30 THEN t0.c30 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN 0.13787306452983317 ELSE t0.c0 END))  NULLS LAST, json_array(CAST(t0.c1 AS TEXT), (t0.c30 IN (vt0.c1)), CAST(t0.c73 AS TEXT), ((t0.c30)OR(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT))>=(((t0.c73)>=(t0.c73))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((t0.c2)AND(t0.c73)))AND(t0.c2))))<>((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, (('359621183')==(CASE t0.c2  WHEN t0.c30 THEN t0.c30 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN 0.13787306452983317 ELSE t0.c0 END))  NULLS LAST, json_array(CAST(t0.c1 AS TEXT), (t0.c30 IN (vt0.c1)), CAST(t0.c73 AS TEXT), ((t0.c30)OR(t0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT))>=(((t0.c73)>=(t0.c73))))) ORDER BY (((((((t0.c2)AND(t0.c73)))AND(t0.c2))))<>((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, (('359621183')==(CASE t0.c2  WHEN t0.c30 THEN t0.c30 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN 0.13787306452983317 ELSE t0.c0 END))  NULLS LAST, json_array(CAST(t0.c1 AS TEXT), (t0.c30 IN (vt0.c1)), CAST(t0.c73 AS TEXT), ((t0.c30)OR(t0.c2))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c2 AS TEXT))>=(((t0.c73)>=(t0.c73))))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((((t0.c2)AND(t0.c73)))AND(t0.c2))))<>((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, (('359621183')==(CASE t0.c2  WHEN t0.c30 THEN t0.c30 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN 0.13787306452983317 ELSE t0.c0 END))  NULLS LAST, json_array(CAST(t0.c1 AS TEXT), (t0.c30 IN (vt0.c1)), CAST(t0.c73 AS TEXT), ((t0.c30)OR(t0.c2))) ASC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c2 AS TEXT))>=(((t0.c73)>=(t0.c73))))) ORDER BY (((((((t0.c2)AND(t0.c73)))AND(t0.c2))))<>((((t0.c2) BETWEEN (vt0.c0) AND (vt0.c1))))) ASC  NULLS FIRST, (('359621183')==(CASE t0.c2  WHEN t0.c30 THEN t0.c30 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN 0.13787306452983317 ELSE t0.c0 END))  NULLS LAST, json_array(CAST(t0.c1 AS TEXT), (t0.c30 IN (vt0.c1)), CAST(t0.c73 AS TEXT), ((t0.c30)OR(t0.c2))) ASC;
SELECT ALL * FROM vt0 WHERE (CAST(((x'') IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((x'') IS FALSE) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((x'') IS FALSE) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(((x'') IS FALSE) AS TEXT));
SELECT ALL COUNT(*) FROM vt0 WHERE (-900678884);
SELECT SUM(count) FROM (SELECT ALL ((-900678884) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-900678884);
SELECT SUM(count) FROM (SELECT ALL ((-900678884) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (-900678884);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c30) NOT BETWEEN (((vt0.c1)|(t0.c73))) AND ((((t0.c0))!=((t0.c2)))))) ORDER BY json_array_length((- (t0.c30)), HEX(t0.c73));
SELECT SUM(count) FROM (SELECT ((((t0.c30) NOT BETWEEN (((vt0.c1)|(t0.c73))) AND ((((t0.c0))<>((t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array_length((- (t0.c30)), HEX(t0.c73)));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((t0.c30) NOT BETWEEN (((vt0.c1)|(t0.c73))) AND ((((t0.c0))!=((t0.c2)))))) ORDER BY json_array_length((- (t0.c30)), HEX(t0.c73));
SELECT SUM(count) FROM (SELECT ((((t0.c30) NOT BETWEEN (((vt0.c1)|(t0.c73))) AND ((((t0.c0))<>((t0.c2)))))) IS TRUE)  as count FROM vt0, t0 ORDER BY json_array_length((- (t0.c30)), HEX(t0.c73)));
SELECT ALL * FROM t0 WHERE (0.2797316165218575) ORDER BY json_insert(CAST(t0.c0 AS BLOB), NULLIF(t0.c1, t0.c73), CAST(t0.c2 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ((0.2797316165218575) IS TRUE)  as count FROM t0 ORDER BY json_insert(CAST(t0.c0 AS BLOB), NULLIF(t0.c1, t0.c73), CAST(t0.c2 AS REAL)) DESC);
SELECT ALL * FROM t0 WHERE (0.2797316165218575) ORDER BY json_insert(CAST(t0.c0 AS BLOB), NULLIF(t0.c1, t0.c73), CAST(t0.c2 AS REAL)) DESC;
SELECT SUM(count) FROM (SELECT ((0.2797316165218575) IS TRUE)  as count FROM t0 ORDER BY json_insert(CAST(t0.c0 AS BLOB), NULLIF(t0.c1, t0.c73), CAST(t0.c2 AS REAL)) DESC);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c0) AND (UPPER(t0.c30))) WHERE (((((t0.c1))<>((t0.c30))) IN ())) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1))<>((t0.c30))) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c0) AND (UPPER(t0.c30))) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c0) AND (UPPER(t0.c30))) WHERE (((((t0.c1))<>((t0.c30))) IN ())) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c1))<>((t0.c30))) IN ())) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c0) AND (UPPER(t0.c30))) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (t0.c0) AND (UPPER(t0.c30))) WHERE (((((t0.c1))<>((t0.c30))) IN ())) ORDER BY (((t0.c2) IS TRUE) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE load_extension(vt0.c0, t0.c1)  WHEN vt0.c1 COLLATE BINARY THEN ((((t0.c0)OR(t0.c73)))OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(vt0.c0, t0.c1)  WHEN vt0.c1 COLLATE BINARY THEN ((((t0.c0)OR(t0.c73)))OR(t0.c2)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE load_extension(vt0.c0, t0.c1)  WHEN vt0.c1 COLLATE BINARY THEN ((((t0.c0)OR(t0.c73)))OR(t0.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE load_extension(vt0.c0, t0.c1)  WHEN vt0.c1 COLLATE BINARY THEN ((((t0.c0)OR(t0.c73)))OR(t0.c2)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c73))) NOT BETWEEN (CAST(t0.c30 AS TEXT)) AND (json_quote(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c73))) NOT BETWEEN (CAST(t0.c30 AS TEXT)) AND (json_quote(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE ((((- (t0.c73))) NOT BETWEEN (CAST(t0.c30 AS TEXT)) AND (json_quote(t0.c2))));
SELECT SUM(count) FROM (SELECT ALL (((((- (t0.c73))) NOT BETWEEN (CAST(t0.c30 AS TEXT)) AND (json_quote(t0.c2)))) IS TRUE)  as count FROM t0);
SELECT * FROM vt0 WHERE ((CAST(-8.80269249E8 AS NUMERIC) IN ())) ORDER BY CASE ((vt0.c1)*(vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) ELSE 0.33698091471083413 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(-8.80269249E8 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)*(vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) ELSE 0.33698091471083413 END ASC);
SELECT * FROM vt0 WHERE ((CAST(-8.80269249E8 AS NUMERIC) IN ())) ORDER BY CASE ((vt0.c1)*(vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) ELSE 0.33698091471083413 END ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(-8.80269249E8 AS NUMERIC) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)*(vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) ELSE 0.33698091471083413 END ASC);
SELECT * FROM vt0 WHERE ((CAST(-8.80269249E8 AS NUMERIC) IN ())) ORDER BY CASE ((vt0.c1)*(vt0.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)) ELSE 0.33698091471083413 END ASC;
SELECT * FROM t0 WHERE (((((((t0.c30) NOT NULL))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c73)))))AND(CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c30) NOT NULL))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c73)))))AND(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c30) NOT NULL))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c73)))))AND(CAST(t0.c2 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((((((t0.c30) NOT NULL))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c73)))))AND(CAST(t0.c2 AS TEXT)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((t0.c30) NOT NULL))AND(((t0.c2) BETWEEN (t0.c0) AND (t0.c73)))))AND(CAST(t0.c2 AS TEXT))));
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c30)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c30))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c30)));
SELECT SUM(count) FROM (SELECT ALL (((~ (t0.c30))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((~ (t0.c30)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) IS FALSE)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)||(vt0.c1)) END) ORDER BY (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) IS FALSE)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)||(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) IS FALSE)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)||(vt0.c1)) END) ORDER BY (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c1) IS FALSE)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)||(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c1) IS FALSE)  WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c1)||(vt0.c1)) END) ORDER BY (((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)) IN ())  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c30 AS BLOB) IN ())) ORDER BY (((((t0.c2))==((774575270)))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c30 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c2))=((774575270)))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c30 AS BLOB) IN ())) ORDER BY (((((t0.c2))==((774575270)))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((CAST(t0.c30 AS BLOB) IN ())) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c2))=((774575270)))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE ((CAST(t0.c30 AS BLOB) IN ())) ORDER BY (((((t0.c2))==((774575270)))) NOT BETWEEN ((vt0.c1 IN ())) AND (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1);
SELECT SUM(count) FROM (SELECT ((t0.c1) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c1);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ()), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))==((CAST(vt0.c1 AS REAL), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ()), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))==((CAST(vt0.c1 AS REAL), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ()), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))==((CAST(vt0.c1 AS REAL), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1 IN ()), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))==((CAST(vt0.c1 AS REAL), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1 IN ()), ((vt0.c1)<(vt0.c0)), ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0))))==((CAST(vt0.c1 AS REAL), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END))));
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)*(t0.c1)))+(((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)*(t0.c1)))+(((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)*(t0.c1)))+(((t0.c2) NOTNULL))));
SELECT SUM(count) FROM (SELECT ((((((t0.c2)*(t0.c1)))+(((t0.c2) NOTNULL)))) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (((((t0.c2)*(t0.c1)))+(((t0.c2) NOTNULL))));
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (((vt0.c1) IS TRUE) COLLATE NOCASE);
SELECT COUNT(*) FROM vt0, t0 WHERE (((214089033) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((214089033) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((214089033) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((214089033) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((214089033) NOTNULL));
SELECT ALL * FROM t0, vt0 WHERE (t0.c73);
SELECT SUM(count) FROM (SELECT ((t0.c73) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c73);
SELECT SUM(count) FROM (SELECT ((t0.c73) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE (t0.c73);
SELECT * FROM vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN (((vt0.c1)LIKE(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (((vt0.c1)LIKE(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN (((vt0.c1)LIKE(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN (((vt0.c1)LIKE(t0.c2))))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((vt0.c0 COLLATE NOCASE IN (((vt0.c1)LIKE(t0.c2)))));
SELECT ALL * FROM t0 WHERE (((CASE t0.c30  WHEN t0.c2 THEN t0.c2 WHEN t0.c73 THEN x'' WHEN t0.c30 THEN t0.c73 END) BETWEEN (LAST_INSERT_ROWID()) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c30  WHEN t0.c2 THEN t0.c2 WHEN t0.c73 THEN x'' WHEN t0.c30 THEN t0.c73 END) BETWEEN (LAST_INSERT_ROWID()) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c30  WHEN t0.c2 THEN t0.c2 WHEN t0.c73 THEN x'' WHEN t0.c30 THEN t0.c73 END) BETWEEN (LAST_INSERT_ROWID()) AND (t0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c30  WHEN t0.c2 THEN t0.c2 WHEN t0.c73 THEN x'' WHEN t0.c30 THEN t0.c73 END) BETWEEN (LAST_INSERT_ROWID()) AND (t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((CASE t0.c30  WHEN t0.c2 THEN t0.c2 WHEN t0.c73 THEN x'' WHEN t0.c30 THEN t0.c73 END) BETWEEN (LAST_INSERT_ROWID()) AND (t0.c0 COLLATE BINARY)));
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c30)&(t0.c30)))AND(((0.05162192321942294) IS FALSE))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30)&(t0.c30)))AND(((0.05162192321942294) IS FALSE))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c30)&(t0.c30)))AND(((0.05162192321942294) IS FALSE))))AND(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c30)&(t0.c30)))AND(((0.05162192321942294) IS FALSE))))AND(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE (((((((t0.c30)&(t0.c30)))AND(((0.05162192321942294) IS FALSE))))AND(CAST(vt0.c1 AS BLOB))));
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c73)) AND ((t0.c73))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((t0.c73)) AND ((t0.c73))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c73)) AND ((t0.c73))) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1)) BETWEEN ((t0.c73)) AND ((t0.c73))) COLLATE RTRIM) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((((t0.c1)) BETWEEN ((t0.c73)) AND ((t0.c73))) COLLATE RTRIM);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c1)AND(t0.c0)))AND(((t0.c73)=(t0.c2)))))AND('-1975492705')))OR((t0.c0 IN (t0.c73)))))AND(t0.c30 COLLATE BINARY))) ORDER BY (((((t0.c2 IN (t0.c30)))AND(((t0.c30)==(t0.c1)))))AND((t0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)AND(t0.c0)))AND(((t0.c73)==(t0.c2)))))AND('-1975492705')))OR((t0.c0 IN (t0.c73)))))AND(t0.c30 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2 IN (t0.c30)))AND(((t0.c30)==(t0.c1)))))AND((t0.c1 IN ()))) ASC);
SELECT ALL * FROM t0 WHERE (((((((((((t0.c1)AND(t0.c0)))AND(((t0.c73)=(t0.c2)))))AND('-1975492705')))OR((t0.c0 IN (t0.c73)))))AND(t0.c30 COLLATE BINARY))) ORDER BY (((((t0.c2 IN (t0.c30)))AND(((t0.c30)==(t0.c1)))))AND((t0.c1 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c1)AND(t0.c0)))AND(((t0.c73)==(t0.c2)))))AND('-1975492705')))OR((t0.c0 IN (t0.c73)))))AND(t0.c30 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY (((((t0.c2 IN (t0.c30)))AND(((t0.c30)==(t0.c1)))))AND((t0.c1 IN ()))) ASC);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)GLOB(vt0.c0)) AS NUMERIC));
SELECT * FROM vt0, t0 WHERE (INSTR(CAST(0.9022206099552399 AS TEXT), ((t0.c30)OR(0.19853843455642883))));
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(0.9022206099552399 AS TEXT), ((t0.c30)OR(0.19853843455642883)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (INSTR(CAST(0.9022206099552399 AS TEXT), ((t0.c30)OR(0.19853843455642883))));
SELECT SUM(count) FROM (SELECT ((INSTR(CAST(0.9022206099552399 AS TEXT), ((t0.c30)OR(0.19853843455642883)))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (INSTR(CAST(0.9022206099552399 AS TEXT), ((t0.c30)OR(0.19853843455642883))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c1 AS NUMERIC) END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) IS TRUE)  WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt0.c1 AS NUMERIC) END);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((vt0.c0 IN ())) IS FALSE));
SELECT * FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c30);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c1 IN ())) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(t0.c1))) AND ((((t0.c1, t0.c73, '', vt0.c0, t0.c73)) BETWEEN ((t0.c2, t0.c1, t0.c0, vt0.c1, t0.c30)) AND ((t0.c1, t0.c1, vt0.c1, t0.c2, t0.c1)))))) ORDER BY x'' ASC, LIKELIHOOD(DISTINCT (- (vt0.c0)), 0.7239347904410637) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(t0.c1))) AND ((((t0.c1, t0.c73, '', vt0.c0, t0.c73)) BETWEEN ((t0.c2, t0.c1, t0.c0, vt0.c1, t0.c30)) AND ((t0.c1, t0.c1, vt0.c1, t0.c2, t0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC, LIKELIHOOD(DISTINCT (- (vt0.c0)), 0.7239347904410637) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c1 IN ())) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(t0.c1))) AND ((((t0.c1, t0.c73, '', vt0.c0, t0.c73)) BETWEEN ((t0.c2, t0.c1, t0.c0, vt0.c1, t0.c30)) AND ((t0.c1, t0.c1, vt0.c1, t0.c2, t0.c1)))))) ORDER BY x'' ASC, LIKELIHOOD(DISTINCT (- (vt0.c0)), 0.7239347904410637) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t0.c1 IN ())) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(t0.c1))) AND ((((t0.c1, t0.c73, '', vt0.c0, t0.c73)) BETWEEN ((t0.c2, t0.c1, t0.c0, vt0.c1, t0.c30)) AND ((t0.c1, t0.c1, vt0.c1, t0.c2, t0.c1)))))) IS TRUE)  as count FROM t0, vt0 ORDER BY x'' ASC, LIKELIHOOD(DISTINCT (- (vt0.c0)), 0.7239347904410637) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE ((((t0.c1 IN ())) BETWEEN (((((vt0.c1)AND(vt0.c1)))AND(t0.c1))) AND ((((t0.c1, t0.c73, '', vt0.c0, t0.c73)) BETWEEN ((t0.c2, t0.c1, t0.c0, vt0.c1, t0.c30)) AND ((t0.c1, t0.c1, vt0.c1, t0.c2, t0.c1)))))) ORDER BY x'' ASC, LIKELIHOOD(DISTINCT (- (vt0.c0)), 0.7239347904410637) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)>=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)>=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)>=(vt0.c1)))));
SELECT ALL * FROM vt0, t0 WHERE (((0.7628467408742305)%(((t0.c1) IS FALSE)))) ORDER BY CASE WHEN CASE WHEN t0.c2 THEN 0.5709574396386401 WHEN t0.c73 THEN t0.c73 WHEN t0.c0 THEN t0.c73 END THEN CAST(t0.c2 AS TEXT) WHEN ((t0.c0) IS TRUE) THEN (NOT (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) THEN ((t0.c1) NOT NULL) ELSE CASE t0.c1  WHEN t0.c73 THEN t0.c1 ELSE 0.5180448615648051 END END ASC;
SELECT SUM(count) FROM (SELECT ((((0.7628467408742305)%(((t0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE WHEN t0.c2 THEN 0.5709574396386401 WHEN t0.c73 THEN t0.c73 WHEN t0.c0 THEN t0.c73 END THEN CAST(t0.c2 AS TEXT) WHEN ((t0.c0) IS TRUE) THEN (NOT (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) THEN ((t0.c1) NOT NULL) ELSE CASE t0.c1  WHEN t0.c73 THEN t0.c1 ELSE 0.5180448615648051 END END ASC);
SELECT ALL * FROM vt0, t0 WHERE (((0.7628467408742305)%(((t0.c1) IS FALSE)))) ORDER BY CASE WHEN CASE WHEN t0.c2 THEN 0.5709574396386401 WHEN t0.c73 THEN t0.c73 WHEN t0.c0 THEN t0.c73 END THEN CAST(t0.c2 AS TEXT) WHEN ((t0.c0) IS TRUE) THEN (NOT (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) THEN ((t0.c1) NOT NULL) ELSE CASE t0.c1  WHEN t0.c73 THEN t0.c1 ELSE 0.5180448615648051 END END ASC;
SELECT SUM(count) FROM (SELECT ((((0.7628467408742305)%(((t0.c1) IS FALSE)))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE WHEN t0.c2 THEN 0.5709574396386401 WHEN t0.c73 THEN t0.c73 WHEN t0.c0 THEN t0.c73 END THEN CAST(t0.c2 AS TEXT) WHEN ((t0.c0) IS TRUE) THEN (NOT (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) THEN ((t0.c1) NOT NULL) ELSE CASE t0.c1  WHEN t0.c73 THEN t0.c1 ELSE 0.5180448615648051 END END ASC);
SELECT ALL * FROM vt0, t0 WHERE (((0.7628467408742305)%(((t0.c1) IS FALSE)))) ORDER BY CASE WHEN CASE WHEN t0.c2 THEN 0.5709574396386401 WHEN t0.c73 THEN t0.c73 WHEN t0.c0 THEN t0.c73 END THEN CAST(t0.c2 AS TEXT) WHEN ((t0.c0) IS TRUE) THEN (NOT (t0.c0)) WHEN ((vt0.c0) BETWEEN (t0.c30) AND (t0.c0)) THEN ((t0.c1) NOT NULL) ELSE CASE t0.c1  WHEN t0.c73 THEN t0.c1 ELSE 0.5180448615648051 END END ASC;
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE t0.c0  WHEN t0.c30 COLLATE BINARY THEN ((t0.c73)IS(t0.c2)) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2)<(t0.c1)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c30) IS FALSE) ELSE ((t0.c73)>=(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c30 COLLATE BINARY THEN ((t0.c73)IS(t0.c2)) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2)<(t0.c1)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c30) IS FALSE) ELSE ((t0.c73)>=(t0.c0)) END);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE t0.c0  WHEN t0.c30 COLLATE BINARY THEN ((t0.c73)IS(t0.c2)) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2)<(t0.c1)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c30) IS FALSE) ELSE ((t0.c73)>=(t0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM t0 ORDER BY CASE t0.c0  WHEN t0.c30 COLLATE BINARY THEN ((t0.c73)IS(t0.c2)) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2)<(t0.c1)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c30) IS FALSE) ELSE ((t0.c73)>=(t0.c0)) END);
SELECT COUNT(*) FROM t0 WHERE (NULL) ORDER BY CASE t0.c0  WHEN t0.c30 COLLATE BINARY THEN ((t0.c73)IS(t0.c2)) WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END THEN ((t0.c2)<(t0.c1)) WHEN t0.c0 COLLATE BINARY THEN ((t0.c30) IS FALSE) ELSE ((t0.c73)>=(t0.c0)) END;
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t0.c2 COLLATE BINARY))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE ((NOT (t0.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((LOWER(DISTINCT t0.c73))AND(CAST(t0.c30 AS NUMERIC))))OR('0.6976436141224297')))OR(t0.c73)))AND(((((t0.c30)OR(t0.c0)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(DISTINCT t0.c73))AND(CAST(t0.c30 AS NUMERIC))))OR('0.6976436141224297')))OR(t0.c73)))AND(((((t0.c30)OR(t0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((LOWER(DISTINCT t0.c73))AND(CAST(t0.c30 AS NUMERIC))))OR('0.6976436141224297')))OR(t0.c73)))AND(((((t0.c30)OR(t0.c0)))AND(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((LOWER(DISTINCT t0.c73))AND(CAST(t0.c30 AS NUMERIC))))OR('0.6976436141224297')))OR(t0.c73)))AND(((((t0.c30)OR(t0.c0)))AND(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((((LOWER(DISTINCT t0.c73))AND(CAST(t0.c30 AS NUMERIC))))OR('0.6976436141224297')))OR(t0.c73)))AND(((((t0.c30)OR(t0.c0)))AND(t0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c1))!=((vt0.c1))))) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c1))!=((vt0.c1))))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c1))!=((vt0.c1))))) AND ((((vt0.c0) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN (((((vt0.c1))!=((vt0.c1))))) AND ((((vt0.c0) ISNULL))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN (((((vt0.c1))!=((vt0.c1))))) AND ((((vt0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN -3.6635398E8 THEN vt0.c1 END COLLATE BINARY) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<(vt0.c1)) ELSE ((vt0.c0) NOTNULL) END, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -3.6635398E8 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<(vt0.c1)) ELSE ((vt0.c0) NOTNULL) END, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN -3.6635398E8 THEN vt0.c1 END COLLATE BINARY) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<(vt0.c1)) ELSE ((vt0.c0) NOTNULL) END, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((CASE WHEN -3.6635398E8 THEN vt0.c1 END COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<(vt0.c1)) ELSE ((vt0.c0) NOTNULL) END, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN -3.6635398E8 THEN vt0.c1 END COLLATE BINARY) ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<(vt0.c1)) ELSE ((vt0.c0) NOTNULL) END, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) IS FALSE);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT * FROM t0 WHERE (((((((((((((((((t0.c73)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))OR(t0.c73)))AND(t0.c2)))AND(((x'4970') NOT BETWEEN (t0.c30) AND (t0.c73)))))OR(t0.c30 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c73)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))OR(t0.c73)))AND(t0.c2)))AND(((x'4970') NOT BETWEEN (t0.c30) AND (t0.c73)))))OR(t0.c30 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((((((((t0.c73)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))OR(t0.c73)))AND(t0.c2)))AND(((x'4970') NOT BETWEEN (t0.c30) AND (t0.c73)))))OR(t0.c30 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((((((((((((t0.c73)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))OR(t0.c73)))AND(t0.c2)))AND(((x'4970') NOT BETWEEN (t0.c30) AND (t0.c73)))))OR(t0.c30 COLLATE RTRIM))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((((((((((((((t0.c73)OR(t0.c2)))OR(t0.c1)))AND(t0.c2)))AND(t0.c2)))OR(t0.c73)))AND(t0.c2)))AND(((x'4970') NOT BETWEEN (t0.c30) AND (t0.c73)))))OR(t0.c30 COLLATE RTRIM)));
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))AND(t0.c0 COLLATE BINARY))) ORDER BY ((((x'')+(t0.c0)))GLOB((t0.c30 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))AND(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((x'')+(t0.c0)))GLOB((t0.c30 IN ()))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))AND(t0.c0 COLLATE BINARY))) ORDER BY ((((x'')+(t0.c0)))GLOB((t0.c30 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS BLOB))AND(t0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((x'')+(t0.c0)))GLOB((t0.c30 IN ()))) ASC);
SELECT COUNT(*) FROM t0, vt0 WHERE (((CAST(vt0.c1 AS BLOB))AND(t0.c0 COLLATE BINARY))) ORDER BY ((((x'')+(t0.c0)))GLOB((t0.c30 IN ()))) ASC;
SELECT * FROM t0 WHERE (((((t0.c1)AND(t0.c2)))%(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)AND(t0.c2)))%(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1)AND(t0.c2)))%(TRIM(t0.c0))));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)AND(t0.c2)))%(TRIM(t0.c0)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((((t0.c1)AND(t0.c2)))%(TRIM(t0.c0))));
SELECT ALL * FROM t0 WHERE (t0.c30) ORDER BY ((((CASE WHEN t0.c30 THEN t0.c1 WHEN t0.c2 THEN t0.c30 WHEN t0.c2 THEN t0.c0 END)OR(CAST(t0.c1 AS NUMERIC))))AND(((t0.c30) BETWEEN (t0.c73) AND (t0.c30)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c30 THEN t0.c1 WHEN t0.c2 THEN t0.c30 WHEN t0.c2 THEN t0.c0 END)OR(CAST(t0.c1 AS NUMERIC))))AND(((t0.c30) BETWEEN (t0.c73) AND (t0.c30)))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c30) ORDER BY ((((CASE WHEN t0.c30 THEN t0.c1 WHEN t0.c2 THEN t0.c30 WHEN t0.c2 THEN t0.c0 END)OR(CAST(t0.c1 AS NUMERIC))))AND(((t0.c30) BETWEEN (t0.c73) AND (t0.c30)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c30) IS TRUE)  as count FROM t0 ORDER BY ((((CASE WHEN t0.c30 THEN t0.c1 WHEN t0.c2 THEN t0.c30 WHEN t0.c2 THEN t0.c0 END)OR(CAST(t0.c1 AS NUMERIC))))AND(((t0.c30) BETWEEN (t0.c73) AND (t0.c30)))) ASC);
SELECT ALL * FROM t0 WHERE (t0.c30) ORDER BY ((((CASE WHEN t0.c30 THEN t0.c1 WHEN t0.c2 THEN t0.c30 WHEN t0.c2 THEN t0.c0 END)OR(CAST(t0.c1 AS NUMERIC))))AND(((t0.c30) BETWEEN (t0.c73) AND (t0.c30)))) ASC;
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (t0.c0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c73 THEN t0.c30 ELSE t0.c0 END, t0.c73 COLLATE NOCASE, (('1854038111')-(t0.c1))))<(('1166210457', CASE x''  WHEN t0.c2 THEN t0.c2 END, (((t0.c30))=((0.7458591599300609))))))) ORDER BY (NOT (CAST(t0.c30 AS TEXT))) ASC, CASE NULLIF(DISTINCT t0.c73, t0.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c30)) THEN (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c73 THEN t0.c30 ELSE t0.c0 END, t0.c73 COLLATE NOCASE, (('1854038111')-(t0.c1))))<(('1166210457', CASE x''  WHEN t0.c2 THEN t0.c2 END, (((t0.c30))=((0.7458591599300609))))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CAST(t0.c30 AS TEXT))) ASC, CASE NULLIF(DISTINCT t0.c73, t0.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c30)) THEN (t0.c0 IN ()) END ASC);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c73 THEN t0.c30 ELSE t0.c0 END, t0.c73 COLLATE NOCASE, (('1854038111')-(t0.c1))))<(('1166210457', CASE x''  WHEN t0.c2 THEN t0.c2 END, (((t0.c30))=((0.7458591599300609))))))) ORDER BY (NOT (CAST(t0.c30 AS TEXT))) ASC, CASE NULLIF(DISTINCT t0.c73, t0.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c30)) THEN (t0.c0 IN ()) END ASC;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t0.c73 THEN t0.c30 ELSE t0.c0 END, t0.c73 COLLATE NOCASE, (('1854038111')-(t0.c1))))<(('1166210457', CASE x''  WHEN t0.c2 THEN t0.c2 END, (((t0.c30))=((0.7458591599300609))))))) IS TRUE)  as count FROM t0 ORDER BY (NOT (CAST(t0.c30 AS TEXT))) ASC, CASE NULLIF(DISTINCT t0.c73, t0.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c30)) THEN (t0.c0 IN ()) END ASC);
SELECT ALL * FROM t0 WHERE ((((CASE WHEN t0.c73 THEN t0.c30 ELSE t0.c0 END, t0.c73 COLLATE NOCASE, (('1854038111')-(t0.c1))))<(('1166210457', CASE x''  WHEN t0.c2 THEN t0.c2 END, (((t0.c30))=((0.7458591599300609))))))) ORDER BY (NOT (CAST(t0.c30 AS TEXT))) ASC, CASE NULLIF(DISTINCT t0.c73, t0.c0)  WHEN ((((((((t0.c0)OR(t0.c0)))OR(t0.c2)))AND(t0.c0)))OR(t0.c30)) THEN (t0.c0 IN ()) END ASC;
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END) NOT BETWEEN (vt0.c0) AND ((+ (t0.c0))))) ORDER BY CAST(CASE t0.c2  WHEN t0.c73 THEN t0.c73 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END) NOT BETWEEN (vt0.c0) AND ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE t0.c2  WHEN t0.c73 THEN t0.c73 END AS REAL) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END) NOT BETWEEN (vt0.c0) AND ((+ (t0.c0))))) ORDER BY CAST(CASE t0.c2  WHEN t0.c73 THEN t0.c73 END AS REAL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END) NOT BETWEEN (vt0.c0) AND ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(CASE t0.c2  WHEN t0.c73 THEN t0.c73 END AS REAL) DESC);
SELECT COUNT(*) FROM vt0, t0 WHERE (((CASE WHEN t0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c2 THEN t0.c1 ELSE NULL END) NOT BETWEEN (vt0.c0) AND ((+ (t0.c0))))) ORDER BY CAST(CASE t0.c2  WHEN t0.c73 THEN t0.c73 END AS REAL) DESC;
SELECT ALL * FROM vt0, t0 WHERE ((- (((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- (((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- (((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c1)))));
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c73 AS REAL))OR((((0.17995006438509353))<((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c73 AS REAL))OR((((0.17995006438509353))<((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c73 AS REAL))OR((((0.17995006438509353))<((t0.c2))))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c73 AS REAL))OR((((0.17995006438509353))<((t0.c2)))))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((CAST(t0.c73 AS REAL))OR((((0.17995006438509353))<((t0.c2))))));
SELECT * FROM t0 WHERE ('0.5891149818701424');
SELECT SUM(count) FROM (SELECT ALL (('0.5891149818701424') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('0.5891149818701424');
SELECT SUM(count) FROM (SELECT ALL (('0.5891149818701424') IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ('0.5891149818701424');
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) ORDER BY (((vt0.c0)%(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, 'r歀5', (NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)%(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, 'r歀5', (NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) ORDER BY (((vt0.c0)%(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, 'r歀5', (NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)%(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, 'r歀5', (NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) NOTNULL)) ORDER BY (((vt0.c0)%(vt0.c1)) IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, 'r歀5', (NOT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(t0.c73 AS TEXT) AS INTEGER)) ORDER BY ((((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c30)))OR(((NULL) NOT BETWEEN (t0.c2) AND (vt0.c0)))) ASC, (((((((((t0.c2 IN ()))AND((((t0.c30)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((t0.c1)>(t0.c30)))))AND(vt0.c1)))AND(CAST(x'' AS TEXT))) ASC, CASE WHEN CASE t0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END THEN CAST(t0.c30 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c73 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c30)))OR(((NULL) NOT BETWEEN (t0.c2) AND (vt0.c0)))) ASC, (((((((((t0.c2 IN ()))AND((((t0.c30)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((t0.c1)>(t0.c30)))))AND(vt0.c1)))AND(CAST(x'' AS TEXT))) ASC, CASE WHEN CASE t0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END THEN CAST(t0.c30 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(t0.c73 AS TEXT) AS INTEGER)) ORDER BY ((((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c30)))OR(((NULL) NOT BETWEEN (t0.c2) AND (vt0.c0)))) ASC, (((((((((t0.c2 IN ()))AND((((t0.c30)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((t0.c1)>(t0.c30)))))AND(vt0.c1)))AND(CAST(x'' AS TEXT))) ASC, CASE WHEN CASE t0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END THEN CAST(t0.c30 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t0.c73 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c30)))OR(((NULL) NOT BETWEEN (t0.c2) AND (vt0.c0)))) ASC, (((((((((t0.c2 IN ()))AND((((t0.c30)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((t0.c1)>(t0.c30)))))AND(vt0.c1)))AND(CAST(x'' AS TEXT))) ASC, CASE WHEN CASE t0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END THEN CAST(t0.c30 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST);
SELECT ALL * FROM vt0, t0 WHERE (CAST(CAST(t0.c73 AS TEXT) AS INTEGER)) ORDER BY ((((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c30)))OR(((NULL) NOT BETWEEN (t0.c2) AND (vt0.c0)))) ASC, (((((((((t0.c2 IN ()))AND((((t0.c30)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((t0.c1)>(t0.c30)))))AND(vt0.c1)))AND(CAST(x'' AS TEXT))) ASC, CASE WHEN CASE t0.c1  WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END THEN CAST(t0.c30 AS INTEGER) ELSE vt0.c0 COLLATE NOCASE END  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(t0.c30)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt0.c1)))AND(t0.c30)) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(t0.c30)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c1)OR(vt0.c1)))AND(t0.c30)) AS REAL)) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (CAST(((((vt0.c1)OR(vt0.c1)))AND(t0.c30)) AS REAL));
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c0, t0.c2, 0.16317877976025608))>=((t0.c1, t0.c30, t0.c30)))  WHEN NULL THEN CAST(t0.c73 AS TEXT) WHEN ((t0.c30) BETWEEN (t0.c73) AND (t0.c73)) THEN ((t0.c30)AND(t0.c0)) WHEN ((t0.c1)IS NOT(t0.c2)) THEN ((t0.c0)=(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0, t0.c2, 0.16317877976025608))>=((t0.c1, t0.c30, t0.c30)))  WHEN NULL THEN CAST(t0.c73 AS TEXT) WHEN ((t0.c30) BETWEEN (t0.c73) AND (t0.c73)) THEN ((t0.c30)AND(t0.c0)) WHEN ((t0.c1)IS NOT(t0.c2)) THEN ((t0.c0)=(t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c0, t0.c2, 0.16317877976025608))>=((t0.c1, t0.c30, t0.c30)))  WHEN NULL THEN CAST(t0.c73 AS TEXT) WHEN ((t0.c30) BETWEEN (t0.c73) AND (t0.c73)) THEN ((t0.c30)AND(t0.c0)) WHEN ((t0.c1)IS NOT(t0.c2)) THEN ((t0.c0)=(t0.c1)) END);
SELECT SUM(count) FROM (SELECT ((CASE (((t0.c0, t0.c2, 0.16317877976025608))>=((t0.c1, t0.c30, t0.c30)))  WHEN NULL THEN CAST(t0.c73 AS TEXT) WHEN ((t0.c30) BETWEEN (t0.c73) AND (t0.c73)) THEN ((t0.c30)AND(t0.c0)) WHEN ((t0.c1)IS NOT(t0.c2)) THEN ((t0.c0)=(t0.c1)) END) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (CASE (((t0.c0, t0.c2, 0.16317877976025608))>=((t0.c1, t0.c30, t0.c30)))  WHEN NULL THEN CAST(t0.c73 AS TEXT) WHEN ((t0.c30) BETWEEN (t0.c73) AND (t0.c73)) THEN ((t0.c30)AND(t0.c0)) WHEN ((t0.c1)IS NOT(t0.c2)) THEN ((t0.c0)=(t0.c1)) END);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c0)||(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c1)))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (UNICODE(((((vt0.c0)AND(t0.c73)))OR(vt0.c1)))) ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c2 IN ()))) AND ((((vt0.c0)&(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((((vt0.c0)AND(t0.c73)))OR(vt0.c1)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c2 IN ()))) AND ((((vt0.c0)&(t0.c2))))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (UNICODE(((((vt0.c0)AND(t0.c73)))OR(vt0.c1)))) ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c2 IN ()))) AND ((((vt0.c0)&(t0.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((UNICODE(((((vt0.c0)AND(t0.c73)))OR(vt0.c1)))) IS TRUE)  as count FROM t0 NATURAL JOIN vt0 ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c2 IN ()))) AND ((((vt0.c0)&(t0.c2))))));
SELECT ALL * FROM t0 NATURAL JOIN vt0 WHERE (UNICODE(((((vt0.c0)AND(t0.c73)))OR(vt0.c1)))) ORDER BY (((t0.c0)) NOT BETWEEN (((t0.c2 IN ()))) AND ((((vt0.c0)&(t0.c2)))));
SELECT * FROM t0, vt0 WHERE (((NOT (t0.c30)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c30)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((NOT (t0.c30)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NOT (t0.c30)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((NOT (t0.c30)) IN ()));
SELECT COUNT(*) FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c30) AND (t0.c73)) COLLATE BINARY) ORDER BY ((t0.c30 COLLATE BINARY)+(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c30) AND (t0.c73)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((t0.c30 COLLATE BINARY)+(t0.c2)) DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c30) AND (t0.c73)) COLLATE BINARY) ORDER BY ((t0.c30 COLLATE BINARY)+(t0.c2)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) NOT BETWEEN (t0.c30) AND (t0.c73)) COLLATE BINARY) IS TRUE)  as count FROM t0 ORDER BY ((t0.c30 COLLATE BINARY)+(t0.c2)) DESC);
SELECT COUNT(*) FROM t0 WHERE (((t0.c1) NOT BETWEEN (t0.c30) AND (t0.c73)) COLLATE BINARY) ORDER BY ((t0.c30 COLLATE BINARY)+(t0.c2)) DESC;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)|(t0.c73)))OR(CAST(vt0.c0 AS TEXT))))AND(((t0.c2)LIKE(vt0.c1)))))OR((t0.c0 IN ()))))AND(((vt0.c0) BETWEEN (0.4157497462567761) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)|(t0.c73)))OR(CAST(vt0.c0 AS TEXT))))AND(((t0.c2)LIKE(vt0.c1)))))OR((t0.c0 IN ()))))AND(((vt0.c0) BETWEEN (0.4157497462567761) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)|(t0.c73)))OR(CAST(vt0.c0 AS TEXT))))AND(((t0.c2)LIKE(vt0.c1)))))OR((t0.c0 IN ()))))AND(((vt0.c0) BETWEEN (0.4157497462567761) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t0.c0)|(t0.c73)))OR(CAST(vt0.c0 AS TEXT))))AND(((t0.c2)LIKE(vt0.c1)))))OR((t0.c0 IN ()))))AND(((vt0.c0) BETWEEN (0.4157497462567761) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((t0.c0)|(t0.c73)))OR(CAST(vt0.c0 AS TEXT))))AND(((t0.c2)LIKE(vt0.c1)))))OR((t0.c0 IN ()))))AND(((vt0.c0) BETWEEN (0.4157497462567761) AND (vt0.c1)))));
SELECT * FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (t0.c30);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c73  WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c30 THEN t0.c1 END)IS NOT(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c73  WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c30 THEN t0.c1 END)IS NOT(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c73  WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c30 THEN t0.c1 END)IS NOT(CAST(t0.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE t0.c73  WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c30 THEN t0.c1 END)IS NOT(CAST(t0.c1 AS INTEGER)))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((CASE t0.c73  WHEN t0.c2 THEN t0.c1 WHEN vt0.c0 THEN t0.c0 WHEN t0.c30 THEN t0.c1 END)IS NOT(CAST(t0.c1 AS INTEGER))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT SUM(count) FROM (SELECT ((t0.c0) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c30)) THEN json_quote(t0.c30) WHEN CAST(t0.c30 AS INTEGER) THEN ((t0.c2) IS FALSE) WHEN (t0.c73 IN ()) THEN x'' END) ORDER BY (~ (t0.c0)) ASC  NULLS LAST, (- (RTRIM(t0.c30))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2)>>(t0.c30)) THEN json_quote(t0.c30) WHEN CAST(t0.c30 AS INTEGER) THEN ((t0.c2) IS FALSE) WHEN (t0.c73 IN ()) THEN x'' END) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)) ASC  NULLS LAST, (- (RTRIM(t0.c30))) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c30)) THEN json_quote(t0.c30) WHEN CAST(t0.c30 AS INTEGER) THEN ((t0.c2) IS FALSE) WHEN (t0.c73 IN ()) THEN x'' END) ORDER BY (~ (t0.c0)) ASC  NULLS LAST, (- (RTRIM(t0.c30))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((t0.c2)>>(t0.c30)) THEN json_quote(t0.c30) WHEN CAST(t0.c30 AS INTEGER) THEN ((t0.c2) IS FALSE) WHEN (t0.c73 IN ()) THEN x'' END) IS TRUE)  as count FROM t0 ORDER BY (~ (t0.c0)) ASC  NULLS LAST, (- (RTRIM(t0.c30))) DESC);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN ((t0.c2)>>(t0.c30)) THEN json_quote(t0.c30) WHEN CAST(t0.c30 AS INTEGER) THEN ((t0.c2) IS FALSE) WHEN (t0.c73 IN ()) THEN x'' END) ORDER BY (~ (t0.c0)) ASC  NULLS LAST, (- (RTRIM(t0.c30))) DESC;
SELECT * FROM t0, vt0 WHERE ((((-3.96363275E8, t0.c73, t0.c73)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t0.c30 ELSE vt0.c0 END, CAST(t0.c30 AS NUMERIC), ((t0.c1) NOT NULL))) AND ((((vt0.c1)|(t0.c1)), CAST(vt0.c1 AS TEXT), (- (t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL (((((-3.96363275E8, t0.c73, t0.c73)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t0.c30 ELSE vt0.c0 END, CAST(t0.c30 AS NUMERIC), ((t0.c1) NOT NULL))) AND ((((vt0.c1)|(t0.c1)), CAST(vt0.c1 AS TEXT), (- (t0.c73)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((-3.96363275E8, t0.c73, t0.c73)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t0.c30 ELSE vt0.c0 END, CAST(t0.c30 AS NUMERIC), ((t0.c1) NOT NULL))) AND ((((vt0.c1)|(t0.c1)), CAST(vt0.c1 AS TEXT), (- (t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL (((((-3.96363275E8, t0.c73, t0.c73)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t0.c30 ELSE vt0.c0 END, CAST(t0.c30 AS NUMERIC), ((t0.c1) NOT NULL))) AND ((((vt0.c1)|(t0.c1)), CAST(vt0.c1 AS TEXT), (- (t0.c73)))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((-3.96363275E8, t0.c73, t0.c73)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN t0.c30 ELSE vt0.c0 END, CAST(t0.c30 AS NUMERIC), ((t0.c1) NOT NULL))) AND ((((vt0.c1)|(t0.c1)), CAST(vt0.c1 AS TEXT), (- (t0.c73))))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt0.c0) IS TRUE) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) IS TRUE) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.8574557733335956 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.8574557733335956 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.8574557733335956 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.8574557733335956 END) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) THEN 0.8574557733335956 END);
SELECT ALL * FROM t0 WHERE (((UPPER(t0.c30))IS NOT(CASE t0.c30  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c30))IS NOT(CASE t0.c30  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((UPPER(t0.c30))IS NOT(CASE t0.c30  WHEN t0.c0 THEN t0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((UPPER(t0.c30))IS NOT(CASE t0.c30  WHEN t0.c0 THEN t0.c0 END))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((UPPER(t0.c30))IS NOT(CASE t0.c30  WHEN t0.c0 THEN t0.c0 END)));
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c2)LIKE(t0.c0))  WHEN (((vt0.c0, t0.c73, vt0.c0))>((t0.c73, t0.c1, t0.c73))) THEN CASE WHEN vt0.c1 THEN t0.c73 END WHEN CASE t0.c2  WHEN vt0.c0 THEN t0.c30 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN 0.594064545101301 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c1 END THEN t0.c0 COLLATE NOCASE WHEN x'' THEN ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)) ELSE ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) END) ORDER BY ((((((((t0.c1)AND((t0.c1 IN (vt0.c1)))))OR(((t0.c30)<(vt0.c0)))))OR(CASE WHEN 0.4554749683101543 THEN t0.c73 WHEN t0.c30 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE NULL END)))AND(CAST(NULL AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)LIKE(t0.c0))  WHEN (((vt0.c0, t0.c73, vt0.c0))>((t0.c73, t0.c1, t0.c73))) THEN CASE WHEN vt0.c1 THEN t0.c73 END WHEN CASE t0.c2  WHEN vt0.c0 THEN t0.c30 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN 0.594064545101301 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c1 END THEN t0.c0 COLLATE NOCASE WHEN x'' THEN ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)) ELSE ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((t0.c1)AND((t0.c1 IN (vt0.c1)))))OR(((t0.c30)<(vt0.c0)))))OR(CASE WHEN 0.4554749683101543 THEN t0.c73 WHEN t0.c30 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE NULL END)))AND(CAST(NULL AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c2)LIKE(t0.c0))  WHEN (((vt0.c0, t0.c73, vt0.c0))>((t0.c73, t0.c1, t0.c73))) THEN CASE WHEN vt0.c1 THEN t0.c73 END WHEN CASE t0.c2  WHEN vt0.c0 THEN t0.c30 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN 0.594064545101301 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c1 END THEN t0.c0 COLLATE NOCASE WHEN x'' THEN ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)) ELSE ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) END) ORDER BY ((((((((t0.c1)AND((t0.c1 IN (vt0.c1)))))OR(((t0.c30)<(vt0.c0)))))OR(CASE WHEN 0.4554749683101543 THEN t0.c73 WHEN t0.c30 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE NULL END)))AND(CAST(NULL AS TEXT))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t0.c2)LIKE(t0.c0))  WHEN (((vt0.c0, t0.c73, vt0.c0))>((t0.c73, t0.c1, t0.c73))) THEN CASE WHEN vt0.c1 THEN t0.c73 END WHEN CASE t0.c2  WHEN vt0.c0 THEN t0.c30 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN 0.594064545101301 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c1 END THEN t0.c0 COLLATE NOCASE WHEN x'' THEN ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)) ELSE ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) END) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((((((t0.c1)AND((t0.c1 IN (vt0.c1)))))OR(((t0.c30)<(vt0.c0)))))OR(CASE WHEN 0.4554749683101543 THEN t0.c73 WHEN t0.c30 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE NULL END)))AND(CAST(NULL AS TEXT))) DESC  NULLS LAST);
SELECT COUNT(*) FROM t0, vt0 WHERE (CASE ((t0.c2)LIKE(t0.c0))  WHEN (((vt0.c0, t0.c73, vt0.c0))>((t0.c73, t0.c1, t0.c73))) THEN CASE WHEN vt0.c1 THEN t0.c73 END WHEN CASE t0.c2  WHEN vt0.c0 THEN t0.c30 WHEN vt0.c0 THEN t0.c0 WHEN t0.c2 THEN 0.594064545101301 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN vt0.c1 END THEN t0.c0 COLLATE NOCASE WHEN x'' THEN ((t0.c1) BETWEEN (vt0.c1) AND (t0.c0)) ELSE ((t0.c2) BETWEEN (vt0.c0) AND (t0.c0)) END) ORDER BY ((((((((t0.c1)AND((t0.c1 IN (vt0.c1)))))OR(((t0.c30)<(vt0.c0)))))OR(CASE WHEN 0.4554749683101543 THEN t0.c73 WHEN t0.c30 THEN x'' WHEN t0.c0 THEN t0.c2 ELSE NULL END)))AND(CAST(NULL AS TEXT))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT (- (t0.c0)), (t0.c2 IN (t0.c1, t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (- (t0.c0)), (t0.c2 IN (t0.c1, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT (- (t0.c0)), (t0.c2 IN (t0.c1, t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE(DISTINCT (- (t0.c0)), (t0.c2 IN (t0.c1, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (COALESCE(DISTINCT (- (t0.c0)), (t0.c2 IN (t0.c1, t0.c1))));
SELECT COUNT(*) FROM vt0 WHERE (((((0Xffffffffa53d9703)OR(JULIANDAY(vt0.c0, vt0.c1, vt0.c1))))OR((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffa53d9703)OR(JULIANDAY(vt0.c0, vt0.c1, vt0.c1))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((0Xffffffffa53d9703)OR(JULIANDAY(vt0.c0, vt0.c1, vt0.c1))))OR((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((0xffffffffa53d9703)OR(JULIANDAY(vt0.c0, vt0.c1, vt0.c1))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((0Xffffffffa53d9703)OR(JULIANDAY(vt0.c0, vt0.c1, vt0.c1))))OR((vt0.c0 IN ())))) ORDER BY vt0.c0 DESC;
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ())) ORDER BY ((vt0.c1)/(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)/(vt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ())) ORDER BY ((vt0.c1)/(vt0.c0)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c1)/(vt0.c0)) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE ((NULL IN ())) ORDER BY ((vt0.c1)/(vt0.c0)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c2) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) IS FALSE) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c2) IS FALSE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c2) IS FALSE) AS BLOB)) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c2) IS FALSE) AS BLOB));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((json_array(vt0.c1, t0.c0))OR(((t0.c2)<<(t0.c0)))))AND(((t0.c73) ISNULL)))) ORDER BY ((((t0.c2 IN (t0.c1)), ((('', '-2115586098', ''))<=((vt0.c0, vt0.c1, vt0.c0))), ((t0.c73)/(t0.c0))))<=(((t0.c2 IN ()), ((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c0)), -317241928)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_array(vt0.c1, t0.c0))OR(((t0.c2)<<(t0.c0)))))AND(((t0.c73) ISNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2 IN (t0.c1)), ((('', '-2115586098', ''))<=((vt0.c0, vt0.c1, vt0.c0))), ((t0.c73)/(t0.c0))))<=(((t0.c2 IN ()), ((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c0)), -317241928)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((json_array(vt0.c1, t0.c0))OR(((t0.c2)<<(t0.c0)))))AND(((t0.c73) ISNULL)))) ORDER BY ((((t0.c2 IN (t0.c1)), ((('', '-2115586098', ''))<=((vt0.c0, vt0.c1, vt0.c0))), ((t0.c73)/(t0.c0))))<=(((t0.c2 IN ()), ((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c0)), -317241928)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((json_array(vt0.c1, t0.c0))OR(((t0.c2)<<(t0.c0)))))AND(((t0.c73) ISNULL)))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c2 IN (t0.c1)), ((('', '-2115586098', ''))<=((vt0.c0, vt0.c1, vt0.c0))), ((t0.c73)/(t0.c0))))<=(((t0.c2 IN ()), ((t0.c73) NOT BETWEEN (vt0.c1) AND (t0.c0)), -317241928)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)>>(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)>>(vt0.c1)) COLLATE RTRIM);
SELECT ALL * FROM vt0, t0 WHERE (((((((((t0.c2)AND(((vt0.c0)IS NOT(t0.c0)))))AND(((vt0.c0)!=(0.514901124965129)))))OR((((NULL, vt0.c0, t0.c1)) BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c1, t0.c73, t0.c2))))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((((0x57fb865c)GLOB(vt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(((vt0.c0)IS NOT(t0.c0)))))AND(((vt0.c0)<>(0.514901124965129)))))OR((((NULL, vt0.c0, t0.c1)) BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c1, t0.c73, t0.c2))))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0X57fb865c)GLOB(vt0.c1))) NOTNULL) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((((((t0.c2)AND(((vt0.c0)IS NOT(t0.c0)))))AND(((vt0.c0)!=(0.514901124965129)))))OR((((NULL, vt0.c0, t0.c1)) BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c1, t0.c73, t0.c2))))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((((0x57fb865c)GLOB(vt0.c1))) NOTNULL) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)AND(((vt0.c0)IS NOT(t0.c0)))))AND(((vt0.c0)<>(0.514901124965129)))))OR((((NULL, vt0.c0, t0.c1)) BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c1, t0.c73, t0.c2))))))AND(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((((0X57fb865c)GLOB(vt0.c1))) NOTNULL) DESC);
SELECT ALL * FROM vt0, t0 WHERE (((((((((t0.c2)AND(((vt0.c0)IS NOT(t0.c0)))))AND(((vt0.c0)!=(0.514901124965129)))))OR((((NULL, vt0.c0, t0.c1)) BETWEEN ((t0.c2, vt0.c1, vt0.c1)) AND ((t0.c1, t0.c73, t0.c2))))))AND(vt0.c1 COLLATE NOCASE))) ORDER BY ((((0x57fb865c)GLOB(vt0.c1))) NOTNULL) DESC;
SELECT * FROM t0 WHERE ((- (json_insert(t0.c2, t0.c73, t0.c73))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_insert(t0.c2, t0.c73, t0.c73)))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE ((- (json_insert(t0.c2, t0.c73, t0.c73))));
SELECT SUM(count) FROM (SELECT ALL (((- (json_insert(t0.c2, t0.c73, t0.c73)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.06470232445354895 ASC  NULLS LAST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.06470232445354895 ASC  NULLS LAST, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.06470232445354895 ASC  NULLS LAST, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY 0.06470232445354895 ASC  NULLS LAST, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY 0.06470232445354895 ASC  NULLS LAST, vt0.c1 ASC;
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(x'')))>(((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR(x'')))>(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(x'')))>(((vt0.c1)AND(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c1)))OR(x'')))>(((vt0.c1)AND(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))OR(x'')))>(((vt0.c1)AND(vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE)) ORDER BY (((t0.c73)AND(t0.c73)) IN (CASE vt0.c0  WHEN t0.c73 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) ASC  NULLS LAST, ((((t0.c73)<(vt0.c0)))<((((t0.c0, t0.c0, t0.c30))!=((t0.c30, t0.c1, t0.c73))))) DESC  NULLS LAST, ((((0.3069208900346969)==(t0.c73)))>=(rtreenode(t0.c0, t0.c30)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c73)AND(t0.c73)) IN (CASE vt0.c0  WHEN t0.c73 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) ASC  NULLS LAST, ((((t0.c73)<(vt0.c0)))<((((t0.c0, t0.c0, t0.c30))!=((t0.c30, t0.c1, t0.c73))))) DESC  NULLS LAST, ((((0.3069208900346969)==(t0.c73)))>=(rtreenode(t0.c0, t0.c30))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE)) ORDER BY (((t0.c73)AND(t0.c73)) IN (CASE vt0.c0  WHEN t0.c73 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) ASC  NULLS LAST, ((((t0.c73)<(vt0.c0)))<((((t0.c0, t0.c0, t0.c30))!=((t0.c30, t0.c1, t0.c73))))) DESC  NULLS LAST, ((((0.3069208900346969)==(t0.c73)))>=(rtreenode(t0.c0, t0.c30)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL)) IS TRUE)) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c73)AND(t0.c73)) IN (CASE vt0.c0  WHEN t0.c73 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) ASC  NULLS LAST, ((((t0.c73)<(vt0.c0)))<((((t0.c0, t0.c0, t0.c30))!=((t0.c30, t0.c1, t0.c73))))) DESC  NULLS LAST, ((((0.3069208900346969)==(t0.c73)))>=(rtreenode(t0.c0, t0.c30))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((vt0.c1) NOTNULL)) IS TRUE)) ORDER BY (((t0.c73)AND(t0.c73)) IN (CASE vt0.c0  WHEN t0.c73 THEN t0.c1 END, ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)))) ASC  NULLS LAST, ((((t0.c73)<(vt0.c0)))<((((t0.c0, t0.c0, t0.c30))!=((t0.c30, t0.c1, t0.c73))))) DESC  NULLS LAST, ((((0.3069208900346969)==(t0.c73)))>=(rtreenode(t0.c0, t0.c30)));
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((0.5828285553841209)*(t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((0.5828285553841209)*(t0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((0.5828285553841209)*(t0.c1))))));
SELECT SUM(count) FROM (SELECT (((((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((0.5828285553841209)*(t0.c1)))))) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE ((((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((0.5828285553841209)*(t0.c1))))));
SELECT COUNT(*) FROM t0 WHERE (TRIM(((((((((0.9098261362457144)AND(t0.c2)))AND(t0.c30)))AND(t0.c2)))OR(t0.c1)), json('h|ei&T'))) ORDER BY ((t0.c30) IS FALSE) ASC  NULLS LAST, ((t0.c2)IS NOT(LIKELIHOOD(t0.c0, 0.2971393865264126))), '{1嘲bZ孬Bnc';
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((0.9098261362457144)AND(t0.c2)))AND(t0.c30)))AND(t0.c2)))OR(t0.c1)), json('h|ei&T'))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c30) IS FALSE) ASC  NULLS LAST, ((t0.c2)IS NOT(LIKELIHOOD(t0.c0, 0.2971393865264126))), '{1嘲bZ孬Bnc');
SELECT COUNT(*) FROM t0 WHERE (TRIM(((((((((0.9098261362457144)AND(t0.c2)))AND(t0.c30)))AND(t0.c2)))OR(t0.c1)), json('h|ei&T'))) ORDER BY ((t0.c30) IS FALSE) ASC  NULLS LAST, ((t0.c2)IS NOT(LIKELIHOOD(t0.c0, 0.2971393865264126))), '{1嘲bZ孬Bnc';
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((((((((0.9098261362457144)AND(t0.c2)))AND(t0.c30)))AND(t0.c2)))OR(t0.c1)), json('h|ei&T'))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c30) IS FALSE) ASC  NULLS LAST, ((t0.c2)IS NOT(LIKELIHOOD(t0.c0, 0.2971393865264126))), '{1嘲bZ孬Bnc');
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(((0X16f53419)>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))%(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(((0x16f53419)>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))%(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(((0X16f53419)>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))%(CAST(vt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(((0x16f53419)>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))%(CAST(vt0.c0 AS BLOB))));
SELECT ALL * FROM vt0 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS NUMERIC))/(((0X16f53419)>(vt0.c0))))  NULLS LAST, CAST(((vt0.c0) IS FALSE) AS NUMERIC) ASC, ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))%(CAST(vt0.c0 AS BLOB)));
SELECT * FROM t0 WHERE (((t0.c2)IS((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)IS((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c73)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)IS((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c73))))));
SELECT SUM(count) FROM (SELECT ALL ((((t0.c2)IS((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c73)))))) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)IS((((t0.c1)) BETWEEN ((t0.c0)) AND ((t0.c73))))));
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(((((t0.c30)AND(t0.c2)))OR(t0.c2))))) ORDER BY CAST(((((((((t0.c1)AND(t0.c0)))OR(t0.c73)))OR(t0.c73)))AND(t0.c2)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)LIKE(((((t0.c30)AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c1)AND(t0.c0)))OR(t0.c73)))OR(t0.c73)))AND(t0.c2)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(((((t0.c30)AND(t0.c2)))OR(t0.c2))))) ORDER BY CAST(((((((((t0.c1)AND(t0.c0)))OR(t0.c73)))OR(t0.c73)))AND(t0.c2)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c0 COLLATE BINARY)LIKE(((((t0.c30)AND(t0.c2)))OR(t0.c2))))) IS TRUE)  as count FROM t0 ORDER BY CAST(((((((((t0.c1)AND(t0.c0)))OR(t0.c73)))OR(t0.c73)))AND(t0.c2)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL * FROM t0 WHERE (((t0.c0 COLLATE BINARY)LIKE(((((t0.c30)AND(t0.c2)))OR(t0.c2))))) ORDER BY CAST(((((((((t0.c1)AND(t0.c0)))OR(t0.c73)))OR(t0.c73)))AND(t0.c2)) AS NUMERIC) ASC  NULLS FIRST;
SELECT * FROM t0, vt0 WHERE ((((t0.c73) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c73) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c73) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((t0.c73) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ())) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE ((((t0.c73) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)/(vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c1)/(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((NOT (((vt0.c1)/(vt0.c1)))));
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS BLOB))>=(((t0.c30)>>(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS BLOB))>=(((t0.c30)>>(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS BLOB))>=(((t0.c30)>>(t0.c2)))));
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c2 AS BLOB))>=(((t0.c30)>>(t0.c2))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (((CAST(t0.c2 AS BLOB))>=(((t0.c30)>>(t0.c2)))));
SELECT COUNT(*) FROM t0 WHERE (((((NOT (t0.c30))))<((((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c30)))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c30))))<((((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c30)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((NOT (t0.c30))))<((((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c30)))))) ORDER BY t0.c1;
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (t0.c30))))<((((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c30)))))) IS TRUE)  as count FROM t0 ORDER BY t0.c1);
SELECT COUNT(*) FROM t0 WHERE (((((NOT (t0.c30))))<((((t0.c30) NOT BETWEEN (t0.c30) AND (t0.c30)))))) ORDER BY t0.c1;
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))<=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0))<=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS(vt0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))<=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS(vt0.c1)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0))<=(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS(vt0.c1)) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))<=(CAST(vt0.c0 AS NUMERIC)))) ORDER BY CASE WHEN (~ (vt0.c0)) THEN ((vt0.c0)IS(vt0.c1)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ORDER BY ((((vt0.c1) IS TRUE)) IS TRUE), (- (((vt0.c1)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE)) IS TRUE), (- (((vt0.c1)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ORDER BY ((((vt0.c1) IS TRUE)) IS TRUE), (- (((vt0.c1)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) IS TRUE)) IS TRUE), (- (((vt0.c1)GLOB(vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END) AND (vt0.c0))) ORDER BY ((((vt0.c1) IS TRUE)) IS TRUE), (- (((vt0.c1)GLOB(vt0.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (1.45833392E8);
SELECT SUM(count) FROM (SELECT ALL ((1.45833392E8) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (1.45833392E8);
SELECT SUM(count) FROM (SELECT ALL ((1.45833392E8) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (1.45833392E8);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c30 AS BLOB))*((NOT (t0.c2))))) ORDER BY CASE WHEN CASE vt0.c1  WHEN t0.c73 THEN vt0.c0 END THEN (t0.c30 IN ()) ELSE t0.c73 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c30 AS BLOB))*((NOT (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE vt0.c1  WHEN t0.c73 THEN vt0.c0 END THEN (t0.c30 IN ()) ELSE t0.c73 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c30 AS BLOB))*((NOT (t0.c2))))) ORDER BY CASE WHEN CASE vt0.c1  WHEN t0.c73 THEN vt0.c0 END THEN (t0.c30 IN ()) ELSE t0.c73 COLLATE RTRIM END;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t0.c30 AS BLOB))*((NOT (t0.c2))))) IS TRUE)  as count FROM vt0, t0 ORDER BY CASE WHEN CASE vt0.c1  WHEN t0.c73 THEN vt0.c0 END THEN (t0.c30 IN ()) ELSE t0.c73 COLLATE RTRIM END);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((CAST(t0.c30 AS BLOB))*((NOT (t0.c2))))) ORDER BY CASE WHEN CASE vt0.c1  WHEN t0.c73 THEN vt0.c0 END THEN (t0.c30 IN ()) ELSE t0.c73 COLLATE RTRIM END;
SELECT * FROM vt0, t0 WHERE (((vt0.c1) NOT NULL) COLLATE BINARY) ORDER BY '904243650' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY '904243650' ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c1) NOT NULL) COLLATE BINARY) ORDER BY '904243650' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, t0 ORDER BY '904243650' ASC  NULLS LAST);
SELECT * FROM vt0, t0 WHERE (((vt0.c1) NOT NULL) COLLATE BINARY) ORDER BY '904243650' ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.707902327297412 COLLATE RTRIM)&(((((t0.c30)OR(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.707902327297412 COLLATE RTRIM)&(((((t0.c30)OR(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.707902327297412 COLLATE RTRIM)&(((((t0.c30)OR(t0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.707902327297412 COLLATE RTRIM)&(((((t0.c30)OR(t0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 NOT INDEXED, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((0.707902327297412 COLLATE RTRIM)&(((((t0.c30)OR(t0.c0)))AND(vt0.c0)))));
SELECT * FROM t0, vt0 WHERE (CASE CAST('1e500000*\r' AS INTEGER)  WHEN t0.c30 THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST('1e500000*\r' AS INTEGER)  WHEN t0.c30 THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE CAST('1e500000*\r' AS INTEGER)  WHEN t0.c30 THEN (t0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CAST('1e500000*\r' AS INTEGER)  WHEN t0.c30 THEN (t0.c0 IN ()) END) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (CASE CAST('1e500000*\r' AS INTEGER)  WHEN t0.c30 THEN (t0.c0 IN ()) END);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(((((((((vt0.c1)OR('207269894')))OR(vt0.c0)))OR('%m')))AND(vt0.c1))))) ORDER BY CAST(((vt0.c1)=(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(((((((((vt0.c1)OR('207269894')))OR(vt0.c0)))OR('%m')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)=(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(((((((((vt0.c1)OR('207269894')))OR(vt0.c0)))OR('%m')))AND(vt0.c1))))) ORDER BY CAST(((vt0.c1)=(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)IS NOT(((((((((vt0.c1)OR('207269894')))OR(vt0.c0)))OR('%m')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)=(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)IS NOT(((((((((vt0.c1)OR('207269894')))OR(vt0.c0)))OR('%m')))AND(vt0.c1))))) ORDER BY CAST(((vt0.c1)=(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((t0.c73)OR(t0.c73)))) WHERE (((CAST(t0.c1 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((NULL)AND(vt0.c0))))) ORDER BY ((((t0.c1)<=(t0.c73)))+(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((NULL)AND(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((t0.c73)OR(t0.c73)))) ORDER BY ((((t0.c1)<=(t0.c73)))+(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((t0.c73)OR(t0.c73)))) WHERE (((CAST(t0.c1 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((NULL)AND(vt0.c0))))) ORDER BY ((((t0.c1)<=(t0.c73)))+(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))  NULLS FIRST, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(t0.c1 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((NULL)AND(vt0.c0))))) IS TRUE)  as count FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((t0.c73)OR(t0.c73)))) ORDER BY ((((t0.c1)<=(t0.c73)))+(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))  NULLS FIRST, NULL  NULLS FIRST);
SELECT ALL * FROM t0 RIGHT OUTER JOIN vt0 ON (+ (((t0.c73)OR(t0.c73)))) WHERE (((CAST(t0.c1 AS TEXT)) BETWEEN (TOTAL_CHANGES()) AND (((NULL)AND(vt0.c0))))) ORDER BY ((((t0.c1)<=(t0.c73)))+(CASE WHEN t0.c1 THEN t0.c0 ELSE t0.c1 END))  NULLS FIRST, NULL  NULLS FIRST;
SELECT * FROM vt0, t0 WHERE (CASE NULL  WHEN CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c0 END THEN t0.c0 ELSE (x'' IN (t0.c30)) END) ORDER BY (((t0.c0 IN (t0.c1)))=(LIKELY(DISTINCT t0.c30)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c0 END THEN t0.c0 ELSE (x'' IN (t0.c30)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0 IN (t0.c1)))==(LIKELY(DISTINCT t0.c30)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE NULL  WHEN CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c0 END THEN t0.c0 ELSE (x'' IN (t0.c30)) END) ORDER BY (((t0.c0 IN (t0.c1)))=(LIKELY(DISTINCT t0.c30)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE NULL  WHEN CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c0 END THEN t0.c0 ELSE (x'' IN (t0.c30)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((t0.c0 IN (t0.c1)))==(LIKELY(DISTINCT t0.c30)))  NULLS FIRST);
SELECT * FROM vt0, t0 WHERE (CASE NULL  WHEN CASE vt0.c1  WHEN t0.c30 THEN vt0.c0 ELSE t0.c0 END THEN t0.c0 ELSE (x'' IN (t0.c30)) END) ORDER BY (((t0.c0 IN (t0.c1)))=(LIKELY(DISTINCT t0.c30)))  NULLS FIRST;
SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)))||(((t0.c2)%(t0.c1)))) WHERE (((((t0.c30)&(t0.c30))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c30)&(t0.c30))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)))||(((t0.c2)%(t0.c1)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)))||(((t0.c2)%(t0.c1)))) WHERE (((((t0.c30)&(t0.c30))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c30)&(t0.c30))) ISNULL)) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)))||(((t0.c2)%(t0.c1)))));
SELECT * FROM t0 CROSS JOIN vt0 ON ((((vt0.c0) NOT BETWEEN (t0.c30) AND (t0.c2)))||(((t0.c2)%(t0.c1)))) WHERE (((((t0.c30)&(t0.c30))) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((+ (2.49171471E8))) NOTNULL) WHERE (((((t0.c73, t0.c1, t0.c73))<>((t0.c30, '-44469354', t0.c0))) IN ())) ORDER BY (((((NULL IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1)))))OR(((t0.c2)&(vt0.c1)))) ASC, ((((t0.c73) NOT BETWEEN (t0.c2) AND (t0.c30)))AND(t0.c0 COLLATE BINARY))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c1 THEN t0.c73 END)) AND ((t0.c30 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c73, t0.c1, t0.c73))!=((t0.c30, '-44469354', t0.c0))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((+ (2.49171471E8))) NOTNULL) ORDER BY (((((NULL IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1)))))OR(((t0.c2)&(vt0.c1)))) ASC, ((((t0.c73) NOT BETWEEN (t0.c2) AND (t0.c30)))AND(t0.c0 COLLATE BINARY))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c1 THEN t0.c73 END)) AND ((t0.c30 COLLATE RTRIM))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((+ (2.49171471E8))) NOTNULL) WHERE (((((t0.c73, t0.c1, t0.c73))<>((t0.c30, '-44469354', t0.c0))) IN ())) ORDER BY (((((NULL IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1)))))OR(((t0.c2)&(vt0.c1)))) ASC, ((((t0.c73) NOT BETWEEN (t0.c2) AND (t0.c30)))AND(t0.c0 COLLATE BINARY))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c1 THEN t0.c73 END)) AND ((t0.c30 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c73, t0.c1, t0.c73))!=((t0.c30, '-44469354', t0.c0))) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (((+ (2.49171471E8))) NOTNULL) ORDER BY (((((NULL IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1)))))OR(((t0.c2)&(vt0.c1)))) ASC, ((((t0.c73) NOT BETWEEN (t0.c2) AND (t0.c30)))AND(t0.c0 COLLATE BINARY))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c1 THEN t0.c73 END)) AND ((t0.c30 COLLATE RTRIM))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 LEFT OUTER JOIN t0 ON (((+ (2.49171471E8))) NOTNULL) WHERE (((((t0.c73, t0.c1, t0.c73))<>((t0.c30, '-44469354', t0.c0))) IN ())) ORDER BY (((((NULL IN ()))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c1)))))OR(((t0.c2)&(vt0.c1)))) ASC, ((((t0.c73) NOT BETWEEN (t0.c2) AND (t0.c30)))AND(t0.c0 COLLATE BINARY))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CASE vt0.c0  WHEN t0.c1 THEN t0.c73 END)) AND ((t0.c30 COLLATE RTRIM))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('20350846') NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('20350846') NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('20350846') NOT NULL) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((('20350846') NOT NULL) COLLATE RTRIM) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((('20350846') NOT NULL) COLLATE RTRIM);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c1) BETWEEN (vt0.c0) AND (t0.c73)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) BETWEEN (vt0.c0) AND (t0.c73)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c1) BETWEEN (vt0.c0) AND (t0.c73)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t0.c1) BETWEEN (vt0.c0) AND (t0.c73)) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(((t0.c1) BETWEEN (vt0.c0) AND (t0.c73)) AS NUMERIC));
SELECT ALL * FROM vt0, t0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY ((vt0.c1 COLLATE NOCASE)|((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE)|((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY ((vt0.c1 COLLATE NOCASE)|((+ (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((- (vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, t0 ORDER BY ((vt0.c1 COLLATE NOCASE)|((+ (vt0.c0))))  NULLS FIRST);
SELECT ALL * FROM vt0, t0 WHERE ((((- (vt0.c1))) ISNULL)) ORDER BY ((vt0.c1 COLLATE NOCASE)|((+ (vt0.c0))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c1)||(t0.c30))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)||(t0.c30))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c1)||(t0.c30))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c1)||(t0.c30))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c1)||(t0.c30))) NOTNULL));
SELECT * FROM vt0 WHERE (((((vt0.c1)AND(NULL)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(NULL)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)AND(NULL)))AND(vt0.c1)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)AND(NULL)))AND(vt0.c1)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)AND(NULL)))AND(vt0.c1)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (NULL IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (NULL IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (NULL IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY (NULL IN ()) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY (NULL IN ()) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (0.64970357884846 COLLATE RTRIM) ORDER BY CAST(CASE WHEN 0Xffffffffb7d52962 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((0.64970357884846 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN 0xffffffffb7d52962 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE (0.64970357884846 COLLATE RTRIM) ORDER BY CAST(CASE WHEN 0Xffffffffb7d52962 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC;
SELECT SUM(count) FROM (SELECT ((0.64970357884846 COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CAST(CASE WHEN 0xffffffffb7d52962 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC);
SELECT ALL * FROM vt0 WHERE (0.64970357884846 COLLATE RTRIM) ORDER BY CAST(CASE WHEN 0Xffffffffb7d52962 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC) ASC;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON -8.9530436E7 WHERE (((CASE t0.c30  WHEN t0.c1 THEN t0.c30 WHEN t0.c1 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END)>(((t0.c73) BETWEEN (vt0.c0) AND (t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c30  WHEN t0.c1 THEN t0.c30 WHEN t0.c1 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END)>(((t0.c73) BETWEEN (vt0.c0) AND (t0.c30))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON -8.9530436E7);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON -8.9530436E7 WHERE (((CASE t0.c30  WHEN t0.c1 THEN t0.c30 WHEN t0.c1 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END)>(((t0.c73) BETWEEN (vt0.c0) AND (t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE t0.c30  WHEN t0.c1 THEN t0.c30 WHEN t0.c1 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END)>(((t0.c73) BETWEEN (vt0.c0) AND (t0.c30))))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON -8.9530436E7);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON -8.9530436E7 WHERE (((CASE t0.c30  WHEN t0.c1 THEN t0.c30 WHEN t0.c1 THEN vt0.c1 WHEN t0.c1 THEN t0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c1 THEN t0.c1 END)>(((t0.c73) BETWEEN (vt0.c0) AND (t0.c30)))));
SELECT ALL * FROM vt0, t0 WHERE ((- ('')));
SELECT SUM(count) FROM (SELECT (((- (''))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- ('')));
SELECT SUM(count) FROM (SELECT (((- (''))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL * FROM vt0, t0 WHERE ((- ('')));
SELECT ALL * FROM t0, vt0 WHERE ((+ ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((+ ((vt0.c1 IN ())))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((+ ((vt0.c1 IN ()))));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2)OR(t0.c30)))OR(t0.c73))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c30)))OR(t0.c73))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2)OR(t0.c30)))OR(t0.c73))) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)OR(t0.c30)))OR(t0.c73))) IS TRUE)) IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 WHERE (((((((t0.c2)OR(t0.c30)))OR(t0.c73))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ((((716045537)OR(CAST(NULL AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((716045537)OR(CAST(NULL AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ((((716045537)OR(CAST(NULL AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((t0.c0) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((716045537)OR(CAST(NULL AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c1))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (t0.c0) ORDER BY ((((716045537)OR(CAST(NULL AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((t0.c1)) AND ((vt0.c1))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (COALESCE((vt0.c1 IN (vt0.c0, vt0.c1, '906063541')), (((vt0.c1))<=(('-524413033')))));
SELECT SUM(count) FROM (SELECT ((COALESCE((vt0.c1 IN (vt0.c0, vt0.c1, '906063541')), (((vt0.c1))<=(('-524413033'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (COALESCE((vt0.c1 IN (vt0.c0, vt0.c1, '906063541')), (((vt0.c1))<=(('-524413033')))));
SELECT SUM(count) FROM (SELECT ((COALESCE((vt0.c1 IN (vt0.c0, vt0.c1, '906063541')), (((vt0.c1))<=(('-524413033'))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (COALESCE((vt0.c1 IN (vt0.c0, vt0.c1, '906063541')), (((vt0.c1))<=(('-524413033')))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES()) ORDER BY 0xfffffffffd4530ba;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffffd4530ba);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES()) ORDER BY 0xfffffffffd4530ba;
SELECT SUM(count) FROM (SELECT ALL ((TOTAL_CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY 0Xfffffffffd4530ba);
SELECT ALL COUNT(*) FROM vt0 WHERE (TOTAL_CHANGES()) ORDER BY 0xfffffffffd4530ba;
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c30))))) ORDER BY ((((t0.c30) BETWEEN (vt0.c0) AND (t0.c30))) BETWEEN ((+ (vt0.c1))) AND ((+ (t0.c30)))), ((((((((((vt0.c1)<>(t0.c0)))AND((((t0.c30, vt0.c0, t0.c2))<=((t0.c1, t0.c73, vt0.c0))))))OR((('1457342566') BETWEEN (t0.c0) AND (t0.c1)))))AND(t0.c1)))AND(t0.c2 COLLATE BINARY)) ASC  NULLS LAST, (+ ((((x'ceb6', t0.c0, vt0.c0))<=((t0.c1, t0.c30, t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c30))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c30) BETWEEN (vt0.c0) AND (t0.c30))) BETWEEN ((+ (vt0.c1))) AND ((+ (t0.c30)))), ((((((((((vt0.c1)<>(t0.c0)))AND((((t0.c30, vt0.c0, t0.c2))<=((t0.c1, t0.c73, vt0.c0))))))OR((('1457342566') BETWEEN (t0.c0) AND (t0.c1)))))AND(t0.c1)))AND(t0.c2 COLLATE BINARY)) ASC  NULLS LAST, (+ ((((x'ceb6', t0.c0, vt0.c0))<=((t0.c1, t0.c30, t0.c0))))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c30))))) ORDER BY ((((t0.c30) BETWEEN (vt0.c0) AND (t0.c30))) BETWEEN ((+ (vt0.c1))) AND ((+ (t0.c30)))), ((((((((((vt0.c1)<>(t0.c0)))AND((((t0.c30, vt0.c0, t0.c2))<=((t0.c1, t0.c73, vt0.c0))))))OR((('1457342566') BETWEEN (t0.c0) AND (t0.c1)))))AND(t0.c1)))AND(t0.c2 COLLATE BINARY)) ASC  NULLS LAST, (+ ((((x'ceb6', t0.c0, vt0.c0))<=((t0.c1, t0.c30, t0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c30))))) IS TRUE)  as count FROM t0, vt0 ORDER BY ((((t0.c30) BETWEEN (vt0.c0) AND (t0.c30))) BETWEEN ((+ (vt0.c1))) AND ((+ (t0.c30)))), ((((((((((vt0.c1)<>(t0.c0)))AND((((t0.c30, vt0.c0, t0.c2))<=((t0.c1, t0.c73, vt0.c0))))))OR((('1457342566') BETWEEN (t0.c0) AND (t0.c1)))))AND(t0.c1)))AND(t0.c2 COLLATE BINARY)) ASC  NULLS LAST, (+ ((((x'ceb6', t0.c0, vt0.c0))<=((t0.c1, t0.c30, t0.c0))))) ASC  NULLS FIRST);
SELECT * FROM t0, vt0 WHERE ((+ (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c30))))) ORDER BY ((((t0.c30) BETWEEN (vt0.c0) AND (t0.c30))) BETWEEN ((+ (vt0.c1))) AND ((+ (t0.c30)))), ((((((((((vt0.c1)<>(t0.c0)))AND((((t0.c30, vt0.c0, t0.c2))<=((t0.c1, t0.c73, vt0.c0))))))OR((('1457342566') BETWEEN (t0.c0) AND (t0.c1)))))AND(t0.c1)))AND(t0.c2 COLLATE BINARY)) ASC  NULLS LAST, (+ ((((x'ceb6', t0.c0, vt0.c0))<=((t0.c1, t0.c30, t0.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (((((vt0.c1)AND(t0.c1)))OR(t0.c1))) AND ((t0.c2 IN ())))) ORDER BY (((vt0.c0, vt0.c0, t0.c0))>=((vt0.c1, t0.c2, t0.c73))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (((((vt0.c1)AND(t0.c1)))OR(t0.c1))) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0, vt0.c0, t0.c0))>=((vt0.c1, t0.c2, t0.c73))) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (((((vt0.c1)AND(t0.c1)))OR(t0.c1))) AND ((t0.c2 IN ())))) ORDER BY (((vt0.c0, vt0.c0, t0.c0))>=((vt0.c1, t0.c2, t0.c73))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((t0.c1) BETWEEN (((((vt0.c1)AND(t0.c1)))OR(t0.c1))) AND ((t0.c2 IN ())))) IS TRUE)  as count FROM t0, vt0 ORDER BY (((vt0.c0, vt0.c0, t0.c0))>=((vt0.c1, t0.c2, t0.c73))) COLLATE RTRIM  NULLS LAST);
SELECT ALL * FROM t0, vt0 WHERE (((t0.c1) BETWEEN (((((vt0.c1)AND(t0.c1)))OR(t0.c1))) AND ((t0.c2 IN ())))) ORDER BY (((vt0.c0, vt0.c0, t0.c0))>=((vt0.c1, t0.c2, t0.c73))) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (vt0.c0)));
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN (vt0.c0)));
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT ((vt0.c1) NOTNULL))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (HEX(DISTINCT ((vt0.c1) NOTNULL)));
SELECT * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c2)))AND(41615094)))OR(t0.c1)))OR(t0.c30)) IN ())) ORDER BY ((((t0.c1) NOT NULL))<(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0)AND(t0.c2)))AND(41615094)))OR(t0.c1)))OR(t0.c30)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT NULL))<(NULL))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c2)))AND(41615094)))OR(t0.c1)))OR(t0.c30)) IN ())) ORDER BY ((((t0.c1) NOT NULL))<(NULL))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((t0.c0)AND(t0.c2)))AND(41615094)))OR(t0.c1)))OR(t0.c30)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c1) NOT NULL))<(NULL))  NULLS FIRST);
SELECT * FROM t0 WHERE ((((((((((t0.c0)AND(t0.c2)))AND(41615094)))OR(t0.c1)))OR(t0.c30)) IN ())) ORDER BY ((((t0.c1) NOT NULL))<(NULL))  NULLS FIRST;
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c73 END COLLATE RTRIM WHERE (CASE (t0.c73 IN ())  WHEN CAST(t0.c2 AS INTEGER) THEN NULL ELSE ((t0.c30) NOTNULL) END) ORDER BY CAST(((t0.c30) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC) DESC  NULLS LAST, UPPER(DISTINCT vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c73 IN ())  WHEN CAST(t0.c2 AS INTEGER) THEN NULL ELSE ((t0.c30) NOTNULL) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c73 END COLLATE RTRIM ORDER BY CAST(((t0.c30) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC) DESC  NULLS LAST, UPPER(DISTINCT vt0.c1));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c73 END COLLATE RTRIM WHERE (CASE (t0.c73 IN ())  WHEN CAST(t0.c2 AS INTEGER) THEN NULL ELSE ((t0.c30) NOTNULL) END) ORDER BY CAST(((t0.c30) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC) DESC  NULLS LAST, UPPER(DISTINCT vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((CASE (t0.c73 IN ())  WHEN CAST(t0.c2 AS INTEGER) THEN NULL ELSE ((t0.c30) NOTNULL) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c73 END COLLATE RTRIM ORDER BY CAST(((t0.c30) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC) DESC  NULLS LAST, UPPER(DISTINCT vt0.c1));
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t0 ON CASE t0.c2  WHEN t0.c0 THEN t0.c73 END COLLATE RTRIM WHERE (CASE (t0.c73 IN ())  WHEN CAST(t0.c2 AS INTEGER) THEN NULL ELSE ((t0.c30) NOTNULL) END) ORDER BY CAST(((t0.c30) BETWEEN (t0.c2) AND (t0.c2)) AS NUMERIC) DESC  NULLS LAST, UPPER(DISTINCT vt0.c1);
SELECT COUNT(*) FROM vt0 WHERE (((LIKE(vt0.c1, vt0.c0, '蠃'))>('-89530436'))) ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)IS NOT(x'd164')))*(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, vt0.c0, '蠃'))>('-89530436'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)IS NOT(x'd164')))*(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((LIKE(vt0.c1, vt0.c0, '蠃'))>('-89530436'))) ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)IS NOT(x'd164')))*(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((LIKE(vt0.c1, vt0.c0, '蠃'))>('-89530436'))) IS TRUE)  as count FROM vt0 ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)IS NOT(x'd164')))*(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((LIKE(vt0.c1, vt0.c0, '蠃'))>('-89530436'))) ORDER BY CAST(vt0.c1 AS REAL) COLLATE RTRIM  NULLS FIRST, ((((vt0.c1)IS NOT(x'd164')))*(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))OR(t0.c0)))>>(((t0.c73)<=('701959423')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))>>(((t0.c73)<=('701959423'))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))OR(t0.c0)))>>(((t0.c73)<=('701959423')))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c2)AND(t0.c2)))OR(t0.c0)))>>(((t0.c73)<=('701959423'))))) IS TRUE)  as count FROM t0);
SELECT ALL * FROM t0 WHERE (((((((t0.c2)AND(t0.c2)))OR(t0.c0)))>>(((t0.c73)<=('701959423')))));
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c30))))IS NOT(t0.c73 COLLATE NOCASE))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c30))))IS NOT(t0.c73 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c30))))IS NOT(t0.c73 COLLATE NOCASE))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t0.c0))<((t0.c30))))IS NOT(t0.c73 COLLATE NOCASE))) IS TRUE)  as count FROM t0 ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE ((((((t0.c0))<((t0.c30))))IS NOT(t0.c73 COLLATE NOCASE))) ORDER BY ((t0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c1))) NOT BETWEEN (((vt0.c0)<=(t0.c30))) AND ((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1))) NOT BETWEEN (((vt0.c0)<=(t0.c30))) AND ((NOT (t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c1))) NOT BETWEEN (((vt0.c0)<=(t0.c30))) AND ((NOT (t0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((NOT (t0.c1))) NOT BETWEEN (((vt0.c0)<=(t0.c30))) AND ((NOT (t0.c1))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((NOT (t0.c1))) NOT BETWEEN (((vt0.c0)<=(t0.c30))) AND ((NOT (t0.c1)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)AND(vt0.c1)))OR('*\n')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c1)))OR('*\n')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)AND(vt0.c1)))OR('*\n')) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((((t0.c0)AND(vt0.c1)))OR('*\n')) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c0)AND(vt0.c1)))OR('*\n')) COLLATE NOCASE);
SELECT ALL * FROM vt0 WHERE ((NOT (json_object(vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_object(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (json_object(vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (json_object(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (- (CASE t0.c1  WHEN vt0.c1 THEN t0.c73 WHEN -783916345 THEN vt0.c0 WHEN vt0.c1 THEN t0.c73 ELSE t0.c30 END)) WHERE ((((('-168640482')AND(((vt0.c1) BETWEEN (t0.c0) AND (0.5071202715927655)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c73)))));
SELECT SUM(count) FROM (SELECT (((((('-168640482')AND(((vt0.c1) BETWEEN (t0.c0) AND (0.5071202715927655)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c73))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- (CASE t0.c1  WHEN vt0.c1 THEN t0.c73 WHEN -783916345 THEN vt0.c0 WHEN vt0.c1 THEN t0.c73 ELSE t0.c30 END)));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (- (CASE t0.c1  WHEN vt0.c1 THEN t0.c73 WHEN -783916345 THEN vt0.c0 WHEN vt0.c1 THEN t0.c73 ELSE t0.c30 END)) WHERE ((((('-168640482')AND(((vt0.c1) BETWEEN (t0.c0) AND (0.5071202715927655)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c73)))));
SELECT SUM(count) FROM (SELECT (((((('-168640482')AND(((vt0.c1) BETWEEN (t0.c0) AND (0.5071202715927655)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c73))))) IS TRUE)  as count FROM vt0 INNER JOIN t0 ON (- (CASE t0.c1  WHEN vt0.c1 THEN t0.c73 WHEN -783916345 THEN vt0.c0 WHEN vt0.c1 THEN t0.c73 ELSE t0.c30 END)));
SELECT COUNT(*) FROM vt0 INNER JOIN t0 ON (- (CASE t0.c1  WHEN vt0.c1 THEN t0.c73 WHEN -783916345 THEN vt0.c0 WHEN vt0.c1 THEN t0.c73 ELSE t0.c30 END)) WHERE ((((('-168640482')AND(((vt0.c1) BETWEEN (t0.c0) AND (0.5071202715927655)))))AND(((((vt0.c0)OR(t0.c1)))OR(t0.c73)))));
SELECT COUNT(*) FROM t0 WHERE ((((t0.c73)%(t0.c30)) IN ())) ORDER BY ((x'') IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c73)%(t0.c30)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((x'') IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c73)%(t0.c30)) IN ())) ORDER BY ((x'') IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((t0.c73)%(t0.c30)) IN ())) IS TRUE)  as count FROM t0 ORDER BY ((x'') IS TRUE) ASC  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c73)%(t0.c30)) IN ())) ORDER BY ((x'') IS TRUE) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((- ('5Btb(!<')));
SELECT SUM(count) FROM (SELECT (((- ('5Btb(!<'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ('5Btb(!<')));
SELECT SUM(count) FROM (SELECT (((- ('5Btb(!<'))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((- ('5Btb(!<')));
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c1) NOT NULL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL)) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c1) NOT NULL)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c1) NOT NULL)) ISNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY ((((vt0.c1) NOT NULL)) ISNULL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((-6.86275506E8) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN ())  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((-6.86275506E8) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((-6.86275506E8) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN ())  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((-6.86275506E8) NOT NULL) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c1 IN ())  WHEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END THEN ((-6.86275506E8) NOT NULL) END);
SELECT COUNT(*) FROM vt0, t0 WHERE (0Xffffffffe0bba5fe) ORDER BY (CASE WHEN t0.c1 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe0bba5fe) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN t0.c1 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0Xffffffffe0bba5fe) ORDER BY (CASE WHEN t0.c1 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0xffffffffe0bba5fe) IS TRUE)  as count FROM vt0, t0 ORDER BY (CASE WHEN t0.c1 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT COUNT(*) FROM vt0, t0 WHERE (0Xffffffffe0bba5fe) ORDER BY (CASE WHEN t0.c1 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c2 THEN t0.c30 ELSE t0.c1 END COLLATE RTRIM WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c2 THEN t0.c30 ELSE t0.c1 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c2 THEN t0.c30 ELSE t0.c1 END COLLATE RTRIM WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE) COLLATE RTRIM) IS TRUE)  as count FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c2 THEN t0.c30 ELSE t0.c1 END COLLATE RTRIM);
SELECT ALL COUNT(*) FROM t0 LEFT OUTER JOIN vt0 ON CASE WHEN t0.c2 THEN t0.c30 ELSE t0.c1 END COLLATE RTRIM WHERE (((vt0.c0) IS TRUE) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (TRIM(DISTINCT ((t0.c0)*(NULL)), t0.c2 COLLATE BINARY)) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c0)*(NULL)), t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (TRIM(DISTINCT ((t0.c0)*(NULL)), t0.c2 COLLATE BINARY)) ORDER BY t0.c0;
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((t0.c0)*(NULL)), t0.c2 COLLATE BINARY)) IS TRUE)  as count FROM vt0, t0 ORDER BY t0.c0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (TRIM(DISTINCT ((t0.c0)*(NULL)), t0.c2 COLLATE BINARY)) ORDER BY t0.c0;
SELECT COUNT(*) FROM t0 WHERE ((((0xffffffff8686bde8 IN (t0.c2))) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c30) NOT BETWEEN (138844779) AND (t0.c73)))));
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffff8686bde8 IN (t0.c2))) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c30) NOT BETWEEN (138844779) AND (t0.c73))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((0xffffffff8686bde8 IN (t0.c2))) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c30) NOT BETWEEN (138844779) AND (t0.c73)))));
SELECT SUM(count) FROM (SELECT ALL (((((0xffffffff8686bde8 IN (t0.c2))) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c30) NOT BETWEEN (138844779) AND (t0.c73))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((0xffffffff8686bde8 IN (t0.c2))) BETWEEN (((t0.c1) NOT BETWEEN (t0.c0) AND (t0.c2))) AND (((t0.c30) NOT BETWEEN (138844779) AND (t0.c73)))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c30) BETWEEN (t0.c73) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c30) BETWEEN (t0.c73) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c30) BETWEEN (t0.c73) AND (vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((t0.c30) BETWEEN (t0.c73) AND (vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((t0.c30) BETWEEN (t0.c73) AND (vt0.c0))) NOTNULL));
SELECT * FROM vt0 WHERE (CASE WHEN INSTR(vt0.c0, vt0.c0) THEN ((vt0.c1)||(vt0.c1)) WHEN (NOT ('-1919932598')) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN 'l~' END) ORDER BY (((vt0.c1, vt0.c0, x'0f3c')) BETWEEN ((vt0.c1 COLLATE BINARY, CASE '0.9092060116428733'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>(vt0.c1)), (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN INSTR(vt0.c0, vt0.c0) THEN ((vt0.c1)||(vt0.c1)) WHEN (NOT ('-1919932598')) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN 'l~' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, x'0f3c')) BETWEEN ((vt0.c1 COLLATE BINARY, CASE '0.9092060116428733'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>(vt0.c1)), (vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN INSTR(vt0.c0, vt0.c0) THEN ((vt0.c1)||(vt0.c1)) WHEN (NOT ('-1919932598')) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN 'l~' END) ORDER BY (((vt0.c1, vt0.c0, x'0f3c')) BETWEEN ((vt0.c1 COLLATE BINARY, CASE '0.9092060116428733'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>(vt0.c1)), (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN INSTR(vt0.c0, vt0.c0) THEN ((vt0.c1)||(vt0.c1)) WHEN (NOT ('-1919932598')) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN 'l~' END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1, vt0.c0, x'0f3c')) BETWEEN ((vt0.c1 COLLATE BINARY, CASE '0.9092060116428733'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>(vt0.c1)), (vt0.c0 IN ())))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE WHEN INSTR(vt0.c0, vt0.c0) THEN ((vt0.c1)||(vt0.c1)) WHEN (NOT ('-1919932598')) THEN vt0.c1 COLLATE BINARY WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN 'l~' END) ORDER BY (((vt0.c1, vt0.c0, x'0f3c')) BETWEEN ((vt0.c1 COLLATE BINARY, CASE '0.9092060116428733'  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END, CAST(vt0.c0 AS INTEGER))) AND ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0)>(vt0.c1)), (vt0.c0 IN ())))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))>(0.5592624465448036 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))>(0.5592624465448036 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))>(0.5592624465448036 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))>(0.5592624465448036 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))>(0.5592624465448036 COLLATE NOCASE)));
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (vt0.c0 COLLATE BINARY IN ()) DESC  NULLS LAST, (vt0.c1 IN ()) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c1)) BETWEEN ((t0.c30)) AND ((t0.c30))) THEN UPPER(DISTINCT t0.c2) END) ORDER BY ((((t0.c30)>>(t0.c2))) IS TRUE) DESC, (((t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS TEXT))) AND ((CASE t0.c73  WHEN t0.c1 THEN t0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c1)) BETWEEN ((t0.c30)) AND ((t0.c30))) THEN UPPER(DISTINCT t0.c2) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30)>>(t0.c2))) IS TRUE) DESC, (((t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS TEXT))) AND ((CASE t0.c73  WHEN t0.c1 THEN t0.c2 END)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c1)) BETWEEN ((t0.c30)) AND ((t0.c30))) THEN UPPER(DISTINCT t0.c2) END) ORDER BY ((((t0.c30)>>(t0.c2))) IS TRUE) DESC, (((t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS TEXT))) AND ((CASE t0.c73  WHEN t0.c1 THEN t0.c2 END)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((t0.c1)) BETWEEN ((t0.c30)) AND ((t0.c30))) THEN UPPER(DISTINCT t0.c2) END) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30)>>(t0.c2))) IS TRUE) DESC, (((t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS TEXT))) AND ((CASE t0.c73  WHEN t0.c1 THEN t0.c2 END)))  NULLS FIRST);
SELECT COUNT(*) FROM t0 WHERE (CASE WHEN (((t0.c1)) BETWEEN ((t0.c30)) AND ((t0.c30))) THEN UPPER(DISTINCT t0.c2) END) ORDER BY ((((t0.c30)>>(t0.c2))) IS TRUE) DESC, (((t0.c2)) NOT BETWEEN ((CAST(t0.c2 AS TEXT))) AND ((CASE t0.c73  WHEN t0.c1 THEN t0.c2 END)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ())) ISNULL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c30) IS TRUE))*(0xeda0e0f))) ORDER BY CAST(((t0.c0)=(vt0.c0)) AS BLOB) ASC, ((((((t0.c30)OR(vt0.c1)))AND(t0.c0)))OR(t0.c1)), ((((vt0.c1)||(t0.c30))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((t0.c30) IS TRUE))*(0Xeda0e0f))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c0)==(vt0.c0)) AS BLOB) ASC, ((((((t0.c30)OR(vt0.c1)))AND(t0.c0)))OR(t0.c1)), ((((vt0.c1)||(t0.c30))) IS FALSE));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c30) IS TRUE))*(0xeda0e0f))) ORDER BY CAST(((t0.c0)=(vt0.c0)) AS BLOB) ASC, ((((((t0.c30)OR(vt0.c1)))AND(t0.c0)))OR(t0.c1)), ((((vt0.c1)||(t0.c30))) IS FALSE);
SELECT SUM(count) FROM (SELECT ((((((t0.c30) IS TRUE))*(0Xeda0e0f))) IS TRUE)  as count FROM vt0, t0 ORDER BY CAST(((t0.c0)==(vt0.c0)) AS BLOB) ASC, ((((((t0.c30)OR(vt0.c1)))AND(t0.c0)))OR(t0.c1)), ((((vt0.c1)||(t0.c30))) IS FALSE));
SELECT COUNT(*) FROM vt0, t0 WHERE (((((t0.c30) IS TRUE))*(0xeda0e0f))) ORDER BY CAST(((t0.c0)=(vt0.c0)) AS BLOB) ASC, ((((((t0.c30)OR(vt0.c1)))AND(t0.c0)))OR(t0.c1)), ((((vt0.c1)||(t0.c30))) IS FALSE);
SELECT * FROM t0, vt0 WHERE (DATETIME(x'', CAST(t0.c2 AS INTEGER), '624066982')) ORDER BY (json_type(t0.c0) IN ())  NULLS LAST, ((((t0.c73)||(vt0.c0)))+((~ (t0.c2)))), ((NULL) NOT BETWEEN ((t0.c30 IN ('-524413033'))) AND (COALESCE(t0.c73, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(x'', CAST(t0.c2 AS INTEGER), '624066982')) IS TRUE)  as count FROM t0, vt0 ORDER BY (json_type(t0.c0) IN ())  NULLS LAST, ((((t0.c73)||(vt0.c0)))+((~ (t0.c2)))), ((NULL) NOT BETWEEN ((t0.c30 IN ('-524413033'))) AND (COALESCE(t0.c73, t0.c0))));
SELECT * FROM t0, vt0 WHERE (DATETIME(x'', CAST(t0.c2 AS INTEGER), '624066982')) ORDER BY (json_type(t0.c0) IN ())  NULLS LAST, ((((t0.c73)||(vt0.c0)))+((~ (t0.c2)))), ((NULL) NOT BETWEEN ((t0.c30 IN ('-524413033'))) AND (COALESCE(t0.c73, t0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((DATETIME(x'', CAST(t0.c2 AS INTEGER), '624066982')) IS TRUE)  as count FROM t0, vt0 ORDER BY (json_type(t0.c0) IN ())  NULLS LAST, ((((t0.c73)||(vt0.c0)))+((~ (t0.c2)))), ((NULL) NOT BETWEEN ((t0.c30 IN ('-524413033'))) AND (COALESCE(t0.c73, t0.c0))));
SELECT * FROM t0, vt0 WHERE (DATETIME(x'', CAST(t0.c2 AS INTEGER), '624066982')) ORDER BY (json_type(t0.c0) IN ())  NULLS LAST, ((((t0.c73)||(vt0.c0)))+((~ (t0.c2)))), ((NULL) NOT BETWEEN ((t0.c30 IN ('-524413033'))) AND (COALESCE(t0.c73, t0.c0)));
SELECT * FROM t0 WHERE ((((t0.c73 IN ()))||(t0.c1 COLLATE BINARY))) ORDER BY t0.c2 COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((t0.c73 IN ()))||(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c73 IN ()))||(t0.c1 COLLATE BINARY))) ORDER BY t0.c2 COLLATE RTRIM COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT (((((t0.c73 IN ()))||(t0.c1 COLLATE BINARY))) IS TRUE)  as count FROM t0 ORDER BY t0.c2 COLLATE RTRIM COLLATE NOCASE);
SELECT * FROM t0 WHERE ((((t0.c73 IN ()))||(t0.c1 COLLATE BINARY))) ORDER BY t0.c2 COLLATE RTRIM COLLATE NOCASE;
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c0 AS REAL));
SELECT * FROM t0, vt0 WHERE (((((((t0.c0)&(x'')))AND(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))OR(((t0.c73)/(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)&(x'')))AND(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))OR(((t0.c73)/(t0.c30))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c0)&(x'')))AND(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))OR(((t0.c73)/(t0.c30)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t0.c0)&(x'')))AND(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))OR(((t0.c73)/(t0.c30))))) IS TRUE)  as count FROM t0, vt0);
SELECT * FROM t0, vt0 WHERE (((((((t0.c0)&(x'')))AND(CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 END)))OR(((t0.c73)/(t0.c30)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS(0.10461159382624707)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(0.10461159382624707)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS(0.10461159382624707)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)IS(0.10461159382624707)) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)IS(0.10461159382624707)) AS REAL));
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY)%(1705838869))) ORDER BY ((t0.c1)<(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)%(1705838869))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1)<(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY)%(1705838869))) ORDER BY ((t0.c1)<(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t0.c1 COLLATE BINARY)%(1705838869))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((t0.c1)<(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t0 WHERE (((t0.c1 COLLATE BINARY)%(1705838869))) ORDER BY ((t0.c1)<(((((t0.c0)AND(vt0.c0)))OR(vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY t0.c0, ((((((t0.c0)IS(t0.c73)))AND((((t0.c1, t0.c73, t0.c30)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c73, t0.c73, t0.c1))))))OR(((t0.c1) ISNULL))), 'Z뷦6%XKL' ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY t0.c0, ((((((t0.c0)IS(t0.c73)))AND((((t0.c1, t0.c73, t0.c30)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c73, t0.c73, t0.c1))))))OR(((t0.c1) ISNULL))), 'Z뷦6%XKL' ASC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY t0.c0, ((((((t0.c0)IS(t0.c73)))AND((((t0.c1, t0.c73, t0.c30)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c73, t0.c73, t0.c1))))))OR(((t0.c1) ISNULL))), 'Z뷦6%XKL' ASC;
SELECT SUM(count) FROM (SELECT ALL ((t0.c2) IS TRUE)  as count FROM t0 ORDER BY t0.c0, ((((((t0.c0)IS(t0.c73)))AND((((t0.c1, t0.c73, t0.c30)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c73, t0.c73, t0.c1))))))OR(((t0.c1) ISNULL))), 'Z뷦6%XKL' ASC);
SELECT COUNT(*) FROM t0 WHERE (t0.c2) ORDER BY t0.c0, ((((((t0.c0)IS(t0.c73)))AND((((t0.c1, t0.c73, t0.c30)) BETWEEN ((t0.c1, t0.c2, t0.c2)) AND ((t0.c73, t0.c73, t0.c1))))))OR(((t0.c1) ISNULL))), 'Z뷦6%XKL' ASC;
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))AND(((vt0.c1) NOT NULL))))OR((vt0.c1 IN ())))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE), vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)+(vt0.c1)))AND(((vt0.c1) NOT NULL))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE), vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))AND(((vt0.c1) NOT NULL))))OR((vt0.c1 IN ())))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE), vt0.c1 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1)+(vt0.c1)))AND(((vt0.c1) NOT NULL))))OR((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE), vt0.c1 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)+(vt0.c1)))AND(((vt0.c1) NOT NULL))))OR((vt0.c1 IN ())))) ORDER BY UNLIKELY(DISTINCT vt0.c0 COLLATE NOCASE), vt0.c1 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(-1349673821)))AND(t0.c30))) BETWEEN (CAST(t0.c30 AS TEXT)) AND (t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(-1349673821)))AND(t0.c30))) BETWEEN (CAST(t0.c30 AS TEXT)) AND (t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(-1349673821)))AND(t0.c30))) BETWEEN (CAST(t0.c30 AS TEXT)) AND (t0.c1)));
SELECT SUM(count) FROM (SELECT ((((((((t0.c2)AND(-1349673821)))AND(t0.c30))) BETWEEN (CAST(t0.c30 AS TEXT)) AND (t0.c1))) IS TRUE)  as count FROM t0);
SELECT ALL COUNT(*) FROM t0 WHERE (((((((t0.c2)AND(-1349673821)))AND(t0.c30))) BETWEEN (CAST(t0.c30 AS TEXT)) AND (t0.c1)));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((vt0.c1 IN (vt0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN (vt0.c0))) IS TRUE));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN TYPEOF(vt0.c1) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.6331053699665775)) THEN TRIM(vt0.c0) WHEN ((t0.c73)IS(t0.c0)) THEN ((t0.c2)LIKE(t0.c30)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(vt0.c1) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.6331053699665775)) THEN TRIM(vt0.c0) WHEN ((t0.c73)IS(t0.c0)) THEN ((t0.c2)LIKE(t0.c30)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN TYPEOF(vt0.c1) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.6331053699665775)) THEN TRIM(vt0.c0) WHEN ((t0.c73)IS(t0.c0)) THEN ((t0.c2)LIKE(t0.c30)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN TYPEOF(vt0.c1) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.6331053699665775)) THEN TRIM(vt0.c0) WHEN ((t0.c73)IS(t0.c0)) THEN ((t0.c2)LIKE(t0.c30)) END) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (CASE WHEN TYPEOF(vt0.c1) THEN NULL WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.6331053699665775)) THEN TRIM(vt0.c0) WHEN ((t0.c73)IS(t0.c0)) THEN ((t0.c2)LIKE(t0.c30)) END);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((t0.c2, NULL, t0.c1))>((t0.c30, t0.c73, t0.c30)))) NOT BETWEEN (7.7457527E8) AND ((~ (t0.c30)))) WHERE (((('-1994739433' COLLATE NOCASE))==((t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1994739433' COLLATE NOCASE))==((t0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((t0.c2, NULL, t0.c1))>((t0.c30, t0.c73, t0.c30)))) NOT BETWEEN (7.7457527E8) AND ((~ (t0.c30)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((t0.c2, NULL, t0.c1))>((t0.c30, t0.c73, t0.c30)))) NOT BETWEEN (7.7457527E8) AND ((~ (t0.c30)))) WHERE (((('-1994739433' COLLATE NOCASE))==((t0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1994739433' COLLATE NOCASE))==((t0.c1)))) IS TRUE)  as count FROM vt0 CROSS JOIN t0 ON (((((t0.c2, NULL, t0.c1))>((t0.c30, t0.c73, t0.c30)))) NOT BETWEEN (7.7457527E8) AND ((~ (t0.c30)))));
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t0 ON (((((t0.c2, NULL, t0.c1))>((t0.c30, t0.c73, t0.c30)))) NOT BETWEEN (7.7457527E8) AND ((~ (t0.c30)))) WHERE (((('-1994739433' COLLATE NOCASE))==((t0.c1))));
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ ((+ (t0.c0))))) ORDER BY ((CAST(t0.c2 AS INTEGER))&(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c2 AS INTEGER))&(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ ((+ (t0.c0))))) ORDER BY ((CAST(t0.c2 AS INTEGER))&(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((~ ((+ (t0.c0))))) IS TRUE)  as count FROM vt0, t0 ORDER BY ((CAST(t0.c2 AS INTEGER))&(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE ((~ ((+ (t0.c0))))) ORDER BY ((CAST(t0.c2 AS INTEGER))&(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) DESC;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((0.7151670218311198 IN ())) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (0xfffffffffba67778)));
SELECT SUM(count) FROM (SELECT (((((0.7151670218311198 IN ())) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (0xfffffffffba67778))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((0.7151670218311198 IN ())) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (0xfffffffffba67778)));
SELECT SUM(count) FROM (SELECT (((((0.7151670218311198 IN ())) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (0xfffffffffba67778))) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON t0.c0);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON t0.c0 WHERE ((((0.7151670218311198 IN ())) BETWEEN (((vt0.c1) NOT BETWEEN (t0.c1) AND (t0.c2))) AND (0xfffffffffba67778)));
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ('75856254');
SELECT SUM(count) FROM (SELECT ALL (('75856254') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ('75856254');
SELECT SUM(count) FROM (SELECT ALL (('75856254') IS TRUE)  as count FROM vt0, t0);
SELECT COUNT(*) FROM vt0, t0 NOT INDEXED WHERE ('75856254');
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c73)OR(vt0.c0)))AND(t0.c73)))OR(CAST('-483346949' AS INTEGER))))AND((t0.c73 IN (t0.c2, t0.c1)))))OR(CASE WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)))OR(((vt0.c0)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c73)OR(vt0.c0)))AND(t0.c73)))OR(CAST('-483346949' AS INTEGER))))AND((t0.c73 IN (t0.c2, t0.c1)))))OR(CASE WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)))OR(((vt0.c0)|(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c73)OR(vt0.c0)))AND(t0.c73)))OR(CAST('-483346949' AS INTEGER))))AND((t0.c73 IN (t0.c2, t0.c1)))))OR(CASE WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)))OR(((vt0.c0)|(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((t0.c73)OR(vt0.c0)))AND(t0.c73)))OR(CAST('-483346949' AS INTEGER))))AND((t0.c73 IN (t0.c2, t0.c1)))))OR(CASE WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)))OR(((vt0.c0)|(vt0.c1))))) IS TRUE)  as count FROM vt0, t0);
SELECT ALL COUNT(*) FROM vt0, t0 WHERE (((((((((((((t0.c73)OR(vt0.c0)))AND(t0.c73)))OR(CAST('-483346949' AS INTEGER))))AND((t0.c73 IN (t0.c2, t0.c1)))))OR(CASE WHEN t0.c0 THEN t0.c30 WHEN t0.c0 THEN t0.c2 WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)))OR(((vt0.c0)|(vt0.c1)))));
SELECT * FROM t0 WHERE (((t0.c2)|(t0.c73)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2)|(t0.c73)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)|(t0.c73)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((t0.c2)|(t0.c73)) COLLATE BINARY) IS TRUE)  as count FROM t0);
SELECT * FROM t0 WHERE (((t0.c2)|(t0.c73)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0)) ORDER BY ((((CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c1) NOT NULL))))AND(((((x'')OR('')))AND(NULL))));
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c1) NOT NULL))))AND(((((x'')OR('')))AND(NULL)))));
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0)) ORDER BY ((((CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c1) NOT NULL))))AND(((((x'')OR('')))AND(NULL))));
SELECT SUM(count) FROM (SELECT ((ABS(vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c1) NOT NULL))))AND(((((x'')OR('')))AND(NULL)))));
SELECT ALL * FROM vt0 WHERE (ABS(vt0.c0)) ORDER BY ((((CASE vt0.c0  WHEN NULL THEN vt0.c1 ELSE vt0.c1 END)AND(((vt0.c1) NOT NULL))))AND(((((x'')OR('')))AND(NULL))));
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c73 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c73 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c73 AS REAL) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(t0.c73 AS REAL) AS NUMERIC)) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (CAST(CAST(t0.c73 AS REAL) AS NUMERIC));
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT (NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (NOT (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT (NOT (t0.c2))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (NOT (t0.c2)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE (TYPEOF(DISTINCT (NOT (t0.c2))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((+ (t0.c73)))OR(((t0.c30) ISNULL))))OR((t0.c30 IN (t0.c30)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c73)))OR(((t0.c30) ISNULL))))OR((t0.c30 IN (t0.c30))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((+ (t0.c73)))OR(((t0.c30) ISNULL))))OR((t0.c30 IN (t0.c30)))));
SELECT SUM(count) FROM (SELECT (((((((+ (t0.c73)))OR(((t0.c30) ISNULL))))OR((t0.c30 IN (t0.c30))))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE ((((((+ (t0.c73)))OR(((t0.c30) ISNULL))))OR((t0.c30 IN (t0.c30)))));
SELECT * FROM vt0, t0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c1)) IN (t0.c30 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((t0.c1) BETWEEN (t0.c2) AND (vt0.c1)) IN (t0.c30 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c1)) IN (t0.c30 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((t0.c1) BETWEEN (t0.c2) AND (vt0.c1)) IN (t0.c30 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE ((((t0.c1) BETWEEN (t0.c2) AND (vt0.c1)) IN (t0.c30 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) AS INTEGER)) ORDER BY vt0.c0;
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c30);
SELECT SUM(count) FROM (SELECT ((t0.c30) IS TRUE)  as count FROM t0, vt0);
SELECT COUNT(*) FROM t0, vt0 WHERE (t0.c30);
SELECT * FROM vt0, t0 WHERE (HEX(((vt0.c1)&(vt0.c1)))) ORDER BY (((vt0.c1)) BETWEEN (((NOT (t0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c1)&(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1)) BETWEEN (((NOT (t0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC)))));
SELECT * FROM vt0, t0 WHERE (HEX(((vt0.c1)&(vt0.c1)))) ORDER BY (((vt0.c1)) BETWEEN (((NOT (t0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((HEX(((vt0.c1)&(vt0.c1)))) IS TRUE)  as count FROM vt0, t0 ORDER BY (((vt0.c1)) BETWEEN (((NOT (t0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC)))));
SELECT * FROM vt0, t0 WHERE (HEX(((vt0.c1)&(vt0.c1)))) ORDER BY (((vt0.c1)) BETWEEN (((NOT (t0.c0)))) AND ((CAST(vt0.c1 AS NUMERIC))));
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (('-1712064286' IN ()), ((vt0.c0)IS(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (('-1712064286' IN ()), ((vt0.c0)IS(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (('-1712064286' IN ()), ((vt0.c0)IS(vt0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (('-1712064286' IN ()), ((vt0.c0)IS(vt0.c0))))  NULLS LAST);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END) IS TRUE)) ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN (('-1712064286' IN ()), ((vt0.c0)IS(vt0.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((- (COALESCE(t0.c30, t0.c0, t0.c1, t0.c1))));
SELECT SUM(count) FROM (SELECT (((- (COALESCE(t0.c30, t0.c0, t0.c1, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (COALESCE(t0.c30, t0.c0, t0.c1, t0.c1))));
SELECT SUM(count) FROM (SELECT (((- (COALESCE(t0.c30, t0.c0, t0.c1, t0.c1)))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((- (COALESCE(t0.c30, t0.c0, t0.c1, t0.c1))));
SELECT * FROM vt0, t0 WHERE (CASE WHEN (~ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c73 IN ()) THEN ((t0.c0) NOTNULL) WHEN (((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c2 ELSE ((t0.c73)*(t0.c0)) END) ORDER BY (((((t0.c1))<((t0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c73 IN ()) THEN ((t0.c0) NOTNULL) WHEN (((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c2 ELSE ((t0.c73)*(t0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c1))<((t0.c0)))) NOTNULL));
SELECT * FROM vt0, t0 WHERE (CASE WHEN (~ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c73 IN ()) THEN ((t0.c0) NOTNULL) WHEN (((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c2 ELSE ((t0.c73)*(t0.c0)) END) ORDER BY (((((t0.c1))<((t0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c73 IN ()) THEN ((t0.c0) NOTNULL) WHEN (((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c2 ELSE ((t0.c73)*(t0.c0)) END) IS TRUE)  as count FROM vt0, t0 ORDER BY (((((t0.c1))<((t0.c0)))) NOTNULL));
SELECT * FROM vt0, t0 WHERE (CASE WHEN (~ (vt0.c1)) THEN CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c2 END WHEN (t0.c73 IN ()) THEN ((t0.c0) NOTNULL) WHEN (((vt0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c0))) THEN t0.c2 ELSE ((t0.c73)*(t0.c0)) END) ORDER BY (((((t0.c1))<((t0.c0)))) NOTNULL);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c2 AS INTEGER) IN (t0.c30, LIKELY(t0.c30))) WHERE (UNLIKELY(t0.c73));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c73)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c2 AS INTEGER) IN (t0.c30, LIKELY(t0.c30))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c2 AS INTEGER) IN (t0.c30, LIKELY(t0.c30))) WHERE (UNLIKELY(t0.c73));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(t0.c73)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c2 AS INTEGER) IN (t0.c30, LIKELY(t0.c30))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t0 ON (CAST(t0.c2 AS INTEGER) IN (t0.c30, LIKELY(t0.c30))) WHERE (UNLIKELY(t0.c73));
SELECT * FROM vt0 WHERE (((((((((-1786902922)AND(vt0.c1 COLLATE BINARY)))OR('-1011666675')))AND(((vt0.c0) ISNULL))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((-1786902922)AND(vt0.c1 COLLATE BINARY)))OR('-1011666675')))AND(((vt0.c0) ISNULL))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((-1786902922)AND(vt0.c1 COLLATE BINARY)))OR('-1011666675')))AND(((vt0.c0) ISNULL))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((((((((-1786902922)AND(vt0.c1 COLLATE BINARY)))OR('-1011666675')))AND(((vt0.c0) ISNULL))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((((((-1786902922)AND(vt0.c1 COLLATE BINARY)))OR('-1011666675')))AND(((vt0.c0) ISNULL))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((json_valid(vt0.c0))AND((((NULL, t0.c1, t0.c0))<((t0.c73, t0.c73, t0.c2))))))OR(CASE t0.c1  WHEN vt0.c0 THEN t0.c30 ELSE vt0.c0 END)) WHERE ((((vt0.c1) BETWEEN (t0.c1) AND (x'74ae')) IN ())) ORDER BY NULL, ((((((vt0.c0) IS FALSE))AND(t0.c30 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (vt0.c1) AND (t0.c2)))), (((t0.c30)<(t0.c0)) IN ()), ((((CAST(vt0.c0 AS BLOB))OR((((t0.c1))>((t0.c0))))))AND(x'c16e')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (t0.c1) AND (x'74ae')) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((json_valid(vt0.c0))AND((((NULL, t0.c1, t0.c0))<((t0.c73, t0.c73, t0.c2))))))OR(CASE t0.c1  WHEN vt0.c0 THEN t0.c30 ELSE vt0.c0 END)) ORDER BY NULL, ((((((vt0.c0) IS FALSE))AND(t0.c30 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (vt0.c1) AND (t0.c2)))), (((t0.c30)<(t0.c0)) IN ()), ((((CAST(vt0.c0 AS BLOB))OR((((t0.c1))>((t0.c0))))))AND(x'c16e')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((json_valid(vt0.c0))AND((((NULL, t0.c1, t0.c0))<((t0.c73, t0.c73, t0.c2))))))OR(CASE t0.c1  WHEN vt0.c0 THEN t0.c30 ELSE vt0.c0 END)) WHERE ((((vt0.c1) BETWEEN (t0.c1) AND (x'74ae')) IN ())) ORDER BY NULL, ((((((vt0.c0) IS FALSE))AND(t0.c30 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (vt0.c1) AND (t0.c2)))), (((t0.c30)<(t0.c0)) IN ()), ((((CAST(vt0.c0 AS BLOB))OR((((t0.c1))>((t0.c0))))))AND(x'c16e')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c1) BETWEEN (t0.c1) AND (x'74ae')) IN ())) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON ((((json_valid(vt0.c0))AND((((NULL, t0.c1, t0.c0))<((t0.c73, t0.c73, t0.c2))))))OR(CASE t0.c1  WHEN vt0.c0 THEN t0.c30 ELSE vt0.c0 END)) ORDER BY NULL, ((((((vt0.c0) IS FALSE))AND(t0.c30 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (vt0.c1) AND (t0.c2)))), (((t0.c30)<(t0.c0)) IN ()), ((((CAST(vt0.c0 AS BLOB))OR((((t0.c1))>((t0.c0))))))AND(x'c16e')) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON ((((json_valid(vt0.c0))AND((((NULL, t0.c1, t0.c0))<((t0.c73, t0.c73, t0.c2))))))OR(CASE t0.c1  WHEN vt0.c0 THEN t0.c30 ELSE vt0.c0 END)) WHERE ((((vt0.c1) BETWEEN (t0.c1) AND (x'74ae')) IN ())) ORDER BY NULL, ((((((vt0.c0) IS FALSE))AND(t0.c30 COLLATE RTRIM)))OR(((x'') NOT BETWEEN (vt0.c1) AND (t0.c2)))), (((t0.c30)<(t0.c0)) IN ()), ((((CAST(vt0.c0 AS BLOB))OR((((t0.c1))>((t0.c0))))))AND(x'c16e')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c73 WHERE (((((vt0.c1)LIKE(t0.c30)))==(t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(t0.c30)))==(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c73);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c73 WHERE (((((vt0.c1)LIKE(t0.c30)))==(t0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)LIKE(t0.c30)))==(t0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t0 INNER JOIN vt0 ON t0.c73);
SELECT COUNT(*) FROM t0 INNER JOIN vt0 ON t0.c73 WHERE (((((vt0.c1)LIKE(t0.c30)))==(t0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS BLOB) ASC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS BLOB) ASC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS BLOB) ASC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS BLOB) ASC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT NULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (NULL) ORDER BY CAST(((vt0.c1)-(vt0.c0)) AS BLOB) ASC, ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM t0 WHERE ((((t0.c73 IN ())) BETWEEN (((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))AND(t0.c30)))AND(0x764d06e6))) AND (((t0.c73) BETWEEN (t0.c30) AND (t0.c30)))));
SELECT SUM(count) FROM (SELECT (((((t0.c73 IN ())) BETWEEN (((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))AND(t0.c30)))AND(0X764d06e6))) AND (((t0.c73) BETWEEN (t0.c30) AND (t0.c30))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c73 IN ())) BETWEEN (((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))AND(t0.c30)))AND(0x764d06e6))) AND (((t0.c73) BETWEEN (t0.c30) AND (t0.c30)))));
SELECT SUM(count) FROM (SELECT (((((t0.c73 IN ())) BETWEEN (((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))AND(t0.c30)))AND(0X764d06e6))) AND (((t0.c73) BETWEEN (t0.c30) AND (t0.c30))))) IS TRUE)  as count FROM t0);
SELECT COUNT(*) FROM t0 WHERE ((((t0.c73 IN ())) BETWEEN (((((((((t0.c1)OR(t0.c1)))OR(t0.c2)))AND(t0.c30)))AND(0x764d06e6))) AND (((t0.c73) BETWEEN (t0.c30) AND (t0.c30)))));
SELECT * FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c0 COLLATE RTRIM ELSE 0.18234748920952404 END) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c73 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c1 THEN t0.c0 COLLATE RTRIM ELSE 0.18234748920952404 END) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c73 END) DESC);
SELECT * FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c0 COLLATE RTRIM ELSE 0.18234748920952404 END) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c73 END) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t0.c1 THEN t0.c0 COLLATE RTRIM ELSE 0.18234748920952404 END) IS TRUE)  as count FROM t0 ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c73 END) DESC);
SELECT * FROM t0 WHERE (CASE WHEN t0.c1 THEN t0.c0 COLLATE RTRIM ELSE 0.18234748920952404 END) ORDER BY TYPEOF(CASE WHEN t0.c0 THEN t0.c73 END) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c1)=(CASE WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (+ ((('{]uutcq')&(vt0.c0)))), ((CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)=(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((('{]uutcq')&(vt0.c0)))), ((CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)=(CASE WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (+ ((('{]uutcq')&(vt0.c0)))), ((CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)=(CASE WHEN vt0.c0 THEN vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY (+ ((('{]uutcq')&(vt0.c0)))), ((CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)=(CASE WHEN vt0.c0 THEN vt0.c1 END))) ORDER BY (+ ((('{]uutcq')&(vt0.c0)))), ((CASE ''  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE) ASC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c2 WHERE (CASE CASE x''  WHEN t0.c2 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c1 THEN x'' ELSE t0.c0 END  WHEN (~ (t0.c2)) THEN vt0.c0 ELSE ((t0.c0)|(t0.c2)) END) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE x''  WHEN t0.c2 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c1 THEN x'' ELSE t0.c0 END  WHEN (~ (t0.c2)) THEN vt0.c0 ELSE ((t0.c0)|(t0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c2 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c2 WHERE (CASE CASE x''  WHEN t0.c2 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c1 THEN x'' ELSE t0.c0 END  WHEN (~ (t0.c2)) THEN vt0.c0 ELSE ((t0.c0)|(t0.c2)) END) ORDER BY vt0.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE CASE x''  WHEN t0.c2 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c1 THEN x'' ELSE t0.c0 END  WHEN (~ (t0.c2)) THEN vt0.c0 ELSE ((t0.c0)|(t0.c2)) END) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t0 ON t0.c2 ORDER BY vt0.c1  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN t0 ON t0.c2 WHERE (CASE CASE x''  WHEN t0.c2 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c1 THEN x'' ELSE t0.c0 END  WHEN (~ (t0.c2)) THEN vt0.c0 ELSE ((t0.c0)|(t0.c2)) END) ORDER BY vt0.c1  NULLS FIRST;
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) IS FALSE)) NOTNULL)) ORDER BY ((((t0.c30)GLOB(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND ('0.8795956533192165'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30)GLOB(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND ('0.8795956533192165'))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) IS FALSE)) NOTNULL)) ORDER BY ((((t0.c30)GLOB(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND ('0.8795956533192165'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t0.c2) IS FALSE)) NOTNULL)) IS TRUE)  as count FROM t0 ORDER BY ((((t0.c30)GLOB(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND ('0.8795956533192165'))  NULLS LAST);
SELECT COUNT(*) FROM t0 WHERE (((((t0.c2) IS FALSE)) NOTNULL)) ORDER BY ((((t0.c30)GLOB(t0.c1))) BETWEEN (((t0.c1) ISNULL)) AND ('0.8795956533192165'))  NULLS LAST;
SELECT * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((t0.c2) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0, t0);
SELECT * FROM vt0, t0 WHERE (((((t0.c2) IS TRUE)) BETWEEN ((vt0.c1 IN ())) AND ((vt0.c1 IN ()))));
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.7206423578658973);
SELECT SUM(count) FROM (SELECT ((0.7206423578658973) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.7206423578658973);
SELECT SUM(count) FROM (SELECT ((0.7206423578658973) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (0.7206423578658973);
SELECT ALL * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN ((~ (t0.c2))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1))) BETWEEN ((~ (t0.c2))) AND (t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN ((~ (t0.c2))) AND (t0.c0)));
SELECT SUM(count) FROM (SELECT (((((- (t0.c1))) BETWEEN ((~ (t0.c2))) AND (t0.c0))) IS TRUE)  as count FROM t0, vt0);
SELECT ALL * FROM t0, vt0 WHERE ((((- (t0.c1))) BETWEEN ((~ (t0.c2))) AND (t0.c0)));
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN 0.7224865677960454 WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 END) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c1 ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)||(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN 0.7224865677960454 WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c1 ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN 0.7224865677960454 WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 END) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c1 ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt0.c0)||(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN 0.7224865677960454 WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c1 ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) END ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (CASE ((vt0.c0)||(vt0.c1))  WHEN vt0.c0 COLLATE NOCASE THEN 0.7224865677960454 WHEN ((vt0.c1)>>(vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0)<<(vt0.c0)) ELSE vt0.c0 END) ORDER BY CASE WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN vt0.c1 ELSE (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c2)OR(t0.c73)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c73)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)OR(t0.c73)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c73)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c2)OR(t0.c73)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c73)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((((((((t0.c2)OR(t0.c73)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c73)) COLLATE BINARY) IS TRUE)  as count FROM t0, vt0);
SELECT ALL COUNT(*) FROM t0, vt0 WHERE (((((((((t0.c2)OR(t0.c73)))OR(vt0.c0)))AND(t0.c2)))OR(t0.c73)) COLLATE BINARY);
SELECT * FROM vt0 WHERE ('/TT') ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)  NULLS LAST, (((vt0.c1) ISNULL) IN (((vt0.c1) IS FALSE))) ASC, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)|(vt0.c0)) ELSE COALESCE(vt0.c1, vt0.c1) END;
SELECT SUM(count) FROM (SELECT (('/TT') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)  NULLS LAST, (((vt0.c1) ISNULL) IN (((vt0.c1) IS FALSE))) ASC, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)|(vt0.c0)) ELSE COALESCE(vt0.c1, vt0.c1) END);
SELECT * FROM vt0 WHERE ('/TT') ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)  NULLS LAST, (((vt0.c1) ISNULL) IN (((vt0.c1) IS FALSE))) ASC, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)|(vt0.c0)) ELSE COALESCE(vt0.c1, vt0.c1) END;
SELECT SUM(count) FROM (SELECT (('/TT') IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)  NULLS LAST, (((vt0.c1) ISNULL) IN (((vt0.c1) IS FALSE))) ASC, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)|(vt0.c0)) ELSE COALESCE(vt0.c1, vt0.c1) END);
SELECT * FROM vt0 WHERE ('/TT') ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS TEXT)  NULLS LAST, (((vt0.c1) ISNULL) IN (((vt0.c1) IS FALSE))) ASC, CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)|(vt0.c0)) ELSE COALESCE(vt0.c1, vt0.c1) END;
SELECT ALL * FROM vt0 WHERE (COALESCE(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), '-303598609', vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY ((vt0.c0 COLLATE NOCASE)/((((vt0.c1))>((vt0.c1))))) DESC, CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), '-303598609', vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/((((vt0.c1))>((vt0.c1))))) DESC, CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (COALESCE(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), '-303598609', vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY ((vt0.c0 COLLATE NOCASE)/((((vt0.c1))>((vt0.c1))))) DESC, CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), '-303598609', vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE NOCASE)/((((vt0.c1))>((vt0.c1))))) DESC, CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (COALESCE(((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), '-303598609', vt0.c0 COLLATE BINARY, CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)) ORDER BY ((vt0.c0 COLLATE NOCASE)/((((vt0.c1))>((vt0.c1))))) DESC, CAST((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE ((t0.c1)-(vt0.c1))  WHEN CASE vt0.c0  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN 'w{厰}' WHEN vt0.c1 THEN '' WHEN t0.c73 THEN vt0.c0 END THEN x'' END WHERE (LIKELY(DISTINCT LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT LAST_INSERT_ROWID())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE ((t0.c1)-(vt0.c1))  WHEN CASE vt0.c0  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN 'w{厰}' WHEN vt0.c1 THEN '' WHEN t0.c73 THEN vt0.c0 END THEN x'' END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE ((t0.c1)-(vt0.c1))  WHEN CASE vt0.c0  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN 'w{厰}' WHEN vt0.c1 THEN '' WHEN t0.c73 THEN vt0.c0 END THEN x'' END WHERE (LIKELY(DISTINCT LAST_INSERT_ROWID()));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT LAST_INSERT_ROWID())) IS TRUE)  as count FROM t0 CROSS JOIN vt0 ON CASE ((t0.c1)-(vt0.c1))  WHEN CASE vt0.c0  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN 'w{厰}' WHEN vt0.c1 THEN '' WHEN t0.c73 THEN vt0.c0 END THEN x'' END);
SELECT ALL * FROM t0 CROSS JOIN vt0 ON CASE ((t0.c1)-(vt0.c1))  WHEN CASE vt0.c0  WHEN t0.c73 THEN vt0.c0 WHEN vt0.c0 THEN t0.c2 WHEN vt0.c1 THEN 'w{厰}' WHEN vt0.c1 THEN '' WHEN t0.c73 THEN vt0.c0 END THEN x'' END WHERE (LIKELY(DISTINCT LAST_INSERT_ROWID()));
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c1)<(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((vt0.c1)<(vt0.c0)) COLLATE BINARY);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))&(((vt0.c0)IS(0.39090919652950984)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))&(((vt0.c0)IS(0.39090919652950984))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))&(((vt0.c0)IS(0.39090919652950984)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))&(((vt0.c0)IS(0.39090919652950984))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((x''))))&(((vt0.c0)IS(0.39090919652950984)))));
