-- Time: 2024/06/09 13:29:07
-- Database: database82
-- Database version: 3.40.0
-- seed value: 2487615282
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER ); -- 0ms;
INSERT OR FAIL INTO rt0(c2) VALUES (0.773784027831997); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES (x'f52c', '0Q'); -- 1ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(NULL) WHERE NULL; -- 1ms;
UPDATE rt0 SET c0=NULL, c1='&O42-\rg5' WHERE CASE WHEN ((rt0.c2) IS TRUE) THEN COALESCE(rt0.c2, rt0.c3) WHEN ('1430859333' IN (rt0.c0, rt0.c1)) THEN (~ (rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 END THEN CAST(rt0.c2 AS BLOB) ELSE ((rt0.c0) NOT NULL) END; -- 15ms;
INSERT OR REPLACE INTO rt0(c3, c1, c0, c2) VALUES (1.430859333E9, 0X55492e45, '⹅-', 0.9021545710085941); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'8dcb', 0.6192449733273029, 0.4701477768848037); -- 0ms;
PRAGMA automatic_index; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(0X3dbed550) WHERE CASE WHEN rt0.c0 COLLATE NOCASE THEN ((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1282641463 sz=1299518634 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-816844177 -347103295'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 -1282641463 sz=1430859333 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-165694354'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1035916624 sz=1299518634 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS BLOB) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1 WHERE (((((('657727731') IS FALSE))OR(((NULL)>>(-1585906364)))))OR((- ('F*t it6|&')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((x'' IN ()), (('')<=('1430859333'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=657727731 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '39758898 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('	6')*('-1100288946')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.785786095847456; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1299518634'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-428613112'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1003542214'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN '317932112' THEN '1035916624' ELSE x'c39a' END) BETWEEN ((('>L1ZK') NOT BETWEEN ('JGr)') AND (''))) AND (CAST(NULL AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' COLLATE RTRIM IN ((('-1282641463') ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((''))<>(('F*t it6|&'))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1299518634'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-618557344')) NOT BETWEEN ((((0X51c1b9ef) BETWEEN ('') AND ('}6')))) AND (((((('657727731')AND(x'')))OR(NULL))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) NOT NULL)))<(((('1371650543') NOT BETWEEN ('1299518634') AND (NULL))))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE '39758898'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=276079836 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1189668460 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-918421640 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((('') IS TRUE), 0.9689337329936333); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NULL IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0Xffffffff8afa1ad3)>=(-37475217)) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-12017045 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-347103295'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffe673e208 IN ()) IN (CASE WHEN '39758898' THEN x'' ELSE ']' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1754348694'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1078407340'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (1022181977)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1371650543 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')AND('-816844177')))AND('')))OR('')))OR('-143759214'))) BETWEEN (('1129210498' IN (x'caf8', x'2b7c4fe2'))) AND (((((0.5479254314402955)OR(0.9021545710085941)))OR('1129210498')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-978314992 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2113057917 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('-428613112')+(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1242355137'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=379611805 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-1911615147 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.8934355916955244 IN (NULL, 0Xfffffffff76e6892)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 -864263785'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE))GLOB(CASE WHEN 1.299518634E9 THEN 0.03743428799923343 ELSE 0xffffffffff48a26b END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1754348694 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1074504221 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-418084275 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=123696121 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-165694354 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((- (0Xffffffffbfb8cf54)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((json_remove(0.8934355916955244, '453851574'))AND(NULL COLLATE RTRIM)))OR('9E{f v')))AND(((('')) NOT BETWEEN ((x'')) AND ((NULL))))))AND(((NULL) NOT BETWEEN (0.47844150766644067) AND ('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 1129210498 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1749029025, '1270691542', NULL)) NOT BETWEEN (((('1288308404') NOTNULL), ('0.785786095847456' IN ()), -1)) AND (('#^3' COLLATE RTRIM, (1.371650543E9 IN ()), (((NULL, 0.7542235105659636, -143759214)) NOT BETWEEN ((x'', NULL, x'')) AND (('0u', NULL, 0.669270281476015)))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-165694354 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2 sz=-347103295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1062888014 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 sz=-347103295 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1878042147)) BETWEEN ((TRIM('-12017045', x''))) AND ((((NULL) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1161462931 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1442849608 sz=-549953206 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((((x'cd7b')AND(NULL)))AND('-490035543'))  WHEN 0.08956381004964498 THEN ((NULL)%(NULL)) WHEN load_extension(0.8069781390382993) THEN LIKE(1074504221, NULL) WHEN (+ (NULL)) THEN (- (NULL)) WHEN ((0.4951687426133673) NOTNULL) THEN (0x3a9caf3b IN (0X684010a1)) WHEN x'' COLLATE NOCASE THEN ((x'018b')!=(0.669270281476015)) ELSE ((x'6503')OR(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (((x'' IN ()))) AND ((((0.6816649204446226) ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, 0.9021545710085941, '1587690342')) NOT BETWEEN (('1878042147' COLLATE RTRIM, (0X7697321b IN ()), CASE WHEN x'' THEN 0.4951687426133673 ELSE 0.40446857353809784 END)) AND (((- (NULL)), ((((0x7b82c5b8)OR(NULL)))OR(x'6473')), INSTR(0.6663766313971463, '')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1366013341 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1594004262 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 sz=-1366013341 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -2.113057917E9; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-618557344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-973962807 sz=-1242355137 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-428613112'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-378556447 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-918421640'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1242355137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((((0xffffffff9c92b34f)AND(0.3437117065455946)))OR('-1100288946'))) BETWEEN ((~ (0.26931919700253926))) AND ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1859968995 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1474161718 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1919100248 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1410363007 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1370897999'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.9870348947603806)+(0.2375974282807719)))OR((+ ('')))))OR(CASE WHEN x'' THEN NULL WHEN 0.8283258494535501 THEN '*|' WHEN 0Xffffffffa178fd44 THEN 0.8525818529172173 WHEN NULL THEN x'' WHEN '-973962807' THEN '1754348694' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-342338282'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1029778350 -2113057917 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('&+Z0V?0^c' AS BLOB) AS TEXT); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((-206197263)) NOT BETWEEN ((NULL)) AND ((((('1299518634')) NOT BETWEEN ((0.8087088652309418)) AND (('700985059')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-799474259'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=92522043'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('俒.U6⹅(d''') NOT NULL) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0xffffffffe96fafe1 IN ()))&((+ (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-534834403 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=136790786 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS BLOB))IS((+ (')')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)&(0.8148319974616773)))OR(ROUND(NULL, NULL))))OR((('922116813') NOT BETWEEN (NULL) AND (0.32911635141531415)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (39758898) AND (NULL)) COLLATE BINARY COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1927955613 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0.11885510879044858 AS REAL) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '1410363007' THEN NULL ELSE NULL END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (x'')))>(((((NULL)OR(0.21882987356820305)))OR('453851574')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'7ece0dc2'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1366013341' COLLATE RTRIM)+(LIKELIHOOD(DISTINCT NULL, 0.046834303887070994))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((TRIM(NULL))OR((('C\')+('1-500000')))))AND(x'33c9')))AND((('9E{F V')<(0.42641009425287213)))))OR(((x'5ddd6bb4')/(1117988708)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-792301314 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '718432342'  WHEN x'' THEN NULL END)>>(CAST(0.6032514489735572 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 sz=1022181977'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((('\n*rb', '0.6192449733273029', 0xffffffffa3b7c257)) NOT BETWEEN ((x'', 'QiC', NULL)) AND ((0x19d455fb, 0.33917203896175563, '1861224491')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-697246658 123696121 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1623533013 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1179828627'))) BETWEEN (TYPEOF(DISTINCT 0Xffffffffd25029e7)) AND ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=2012130165'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE(0.42641009425287213)))<>(((('263736555')) NOT BETWEEN ((NULL)) AND ((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1749029025 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-297253132'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-347103295'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1726492627 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -9223372036854775808'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.21262479190759498) IS TRUE) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT 1382934090); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CASE WHEN 0x7c8c9d8c THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1409074489 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X14719977 COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.3454969211369633)GLOB(0.6990425749642706)))AND((('턪')*('LgdWW]')))))OR((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-799474259 sz=1074504221 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')&('961731188'))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 2ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1754348694 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=700985059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>('')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1859968995'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '700985059' COLLATE RTRIM THEN (~ (0.4478368245436385)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(NULL AS NUMERIC)  WHEN ((NULL) BETWEEN (x'') AND (NULL)) THEN (-7.99474259E8 IN (NULL)) ELSE (+ ('0U')) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'9e2c80ad29d6', '-1021799135', '(Hm*k'))>((x'4058', 0.3844848117076515, '⹅-'))))AND(0.1454982728848101)))AND(((x'')>=('⹅-')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=961731188 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=453851574'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-978314992 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-170084220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CASE WHEN NULL THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-61817329 1482071443 sz=922116813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1062180825'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-534834403 sz=379611805 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=700985059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(DISTINCT ((x'')>=('tj'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1242355137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1444143599 sz=1035916624 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1129210498 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1189668460 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('IC\rM') NOT BETWEEN ('-526590139') AND (0.6990425749642706))) BETWEEN ('123696121' COLLATE BINARY) AND ((('춖a0')>=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('-347103295')<(0xffffffff83b1ba9c)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOTNULL) IN ((((((((('-1927955613')OR(0.19353939607327997)))AND(0.638190537884274)))AND(0X684010a1)))AND('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-318429471 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.9291121259793433 AS REAL) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('蕄')<<(-219525)))+(((317932112) BETWEEN ('-297253132') AND (x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-634623192 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=2055326289 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.42641009425287213 IN ()))AND(((NULL)%(0Xffffffffc941ff78)))))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1911615147 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2094725527 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-792301314 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1500189912 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('OC' IN ())) NOT BETWEEN ((0.9687449012572158 IN (x''))) AND (((NULL) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.06084580851109056; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1373479580 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-697246658 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '375880608 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2095854466')) NOT BETWEEN ((('B3>A' IN ()))) AND ((((1.444143599E9)<(0x70c9dc45))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-792697267 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-378556447 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.18966324349262798) NOT BETWEEN (351943746) AND (NULL)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xfffffffffdd15ce1) BETWEEN (x'') AND ('J뛺a')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7792404245728662)-(0)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -1110610066 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '922116813'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', NULL, -1020031391, '|8', 0xffffffffdb219060)) BETWEEN (((- (-102312743)), '983347003', (+ (x'b030')), ((x'')==('ۚUSHS_cze')), (x'' IN ()))) AND ((1884701768, ((0.30539447817866006) ISNULL), (((-3.7475217E7)) BETWEEN ((x'1326')) AND ((39758898))), NULL, ((-1181838191) NOT BETWEEN (0.040324565927890466) AND (433346043))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=9223372036854775807'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1385438758 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2056705114 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'50b2f440dbc3' COLLATE BINARY)AND(((x'') NOT BETWEEN (x'33ff') AND ('2072167864')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1413428789 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-501005258 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1003542214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)==(NULL)) THEN x'b66057ed' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1386642728'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1896758234 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0.5586380902122569 COLLATE NOCASE AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-3.42338282E8)IS NOT(NULL)))<<(CAST(NULL AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.5752211227960218; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-2.97253132E8) NOTNULL))LIKE(((x'')>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN NULL COLLATE RTRIM THEN CASE WHEN x'56d60afa' THEN NULL ELSE 0x192ca61a END ELSE ((0x6420d1f9) BETWEEN (0Xb7aed86) AND (x'7b9e')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('-697246658')<(NULL))  WHEN ((0.9968437010360178) NOTNULL) THEN CASE WHEN 0x6ef0082b THEN 0Xffffffff9f5aa7f0 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '2 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1431238600 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-31786110'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '450153795 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1245159489'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-342338282'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1623533013 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '136790786 -861001154 -1242355137 sz=-1258500489 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1394995738 sz=-1668107441'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1894372344 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1003542214 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) NOTNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((((0.5865588564879186)) BETWEEN ((NULL)) AND ((NULL))))) AND ((x'' COLLATE NOCASE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '529907057 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '185936899'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE LIKELY(DISTINCT NULL)  WHEN ((2.072167864E9)||(NULL)) THEN ((0.11885510879044858) NOT NULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE BINARY) BETWEEN (((0.475846191102991)<=(x''))) AND (((((x'1bf4')OR(0.6286575922681513)))AND(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-124031509 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x''))<((x'1d15'))) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1771283599 sz=1805226852 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0Xffffffffe8adbd09 IN (NULL)) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '378422975 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=(('424106264')))) BETWEEN (NULL) AND ((((x'e311'))<>((0.8774654242794063))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1615114981'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1482156445 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-636611334'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS REAL))<(CAST('' AS BLOB))); -- 2ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1288308404 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')/(''))))<((((((((((0.18678007047125922)OR('')))AND(0.9021545710085941)))AND('757300426')))AND(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-766498329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-783516197 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '39758898'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (x''))  WHEN (+ ('1563090448')) THEN 0.9330912584506224 COLLATE RTRIM ELSE 'b2T' COLLATE RTRIM END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=433346043 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=182229795 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-146927930 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-170084220 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0X684010a1  WHEN 0.9848319548688607 THEN 0.7170149701671878 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((+ ('1299518634')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1370897999 0 sz=1155126893 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('SQuG%2')|(x'')))AND(0.6972543330576706 COLLATE RTRIM)))AND(NULL COLLATE NOCASE)))AND(CASE WHEN NULL THEN 0.30539447817866006 WHEN 0.9637106374081907 THEN x'' WHEN '' THEN NULL ELSE 78242552 END)))OR(CASE -1822992030  WHEN NULL THEN 0.4146809033273072 END)); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x''))=((x'f39e'))) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1911615147 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN NULL WHEN x'' THEN '284505139' WHEN 0.24095164167706118 THEN x'189f' ELSE x'' END) BETWEEN ((('-2000822896') NOT BETWEEN (x'c067') AND (0.6264190116224397))) AND (CASE WHEN '-1353779326' THEN x'3a81' WHEN '657727731' THEN 0.3454969211369633 WHEN -272103489 THEN 'S&yKt5' WHEN -1144600856 THEN '-722905071' WHEN x'' THEN NULL ELSE '<' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-618557344 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((NULL)IS NOT(x'5f8d')) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-17774762 sz=1065536716'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN ']' WHEN x'' THEN NULL WHEN -1.668107441E9 THEN 0.8798187165995395 ELSE -1e500 END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1482071443 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1021799135 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1623533013'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.7112202229777399) NOT BETWEEN ((('C팣d]hcI') NOT NULL)) AND ((+ (0.7475333914233783)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1989620251'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(DISTINCT ((NULL)<(NULL)), 0.8100399631896685); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))!=(('1855910298'))))=((((NULL)) BETWEEN ((401843676)) AND ((2088871132))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=941870465 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1984951803 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1117988708 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (LOWER(0Xffffffff8cc51695) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 'Pg\zu'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1242355137 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- ('XE')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-808631929 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'5839'))<=(('574086092'))) COLLATE NOCASE COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-2039044845 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=470936054 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0x4f5e4fd2)) BETWEEN (('~둮')) AND ((-8.16844177E8)))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-2113057917 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.0561358260590995 COLLATE RTRIM)AND(json_patch(2.072167864E9, 1303935017))))OR((('4J') BETWEEN (0.4976256446975944) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1439070678 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=263736555 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=2012130165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=160267592 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.10135622093567065)IS NOT(NULL))) BETWEEN ((x'' IN ())) AND (CAST('0.42641009425287213' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 860189523 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -490035543'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((CASE 1.749029025E9  WHEN '1117988708' THEN 0X3952da74 ELSE NULL END)OR(NULL)))OR((4.33346043E8 IN ()))))AND(x'f13a')))OR(CASE NULL  WHEN x'a74a' THEN 0Xffffffffef96ac35 ELSE 'ۆW\n/>j,' END)))OR(x'')))AND(x'')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD(((0xffffffffb00182f4)>>(0xffffffffdf70b0ea)), 0.5185653830930879); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-342338282 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'' COLLATE RTRIM)OR(((NULL)+(-1.179828627E9)))))AND(0.19855741887194245)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-274054707)OR(0.9990336249907427)))AND('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=604891649 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1599680617 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-737734121 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.07353743461885132)&(0.9615329813568144)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1826539875 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=193796359'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.7250050347915096  WHEN 60718962 THEN NULL END) BETWEEN ('X}V?I-l') AND (((((x'')AND(NULL)))OR(0.3930993460011678)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1454307920')) BETWEEN ((0.6010157040100436)) AND ((x'')))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-918421640 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=657727731'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=362671561 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=342989175 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((']')) NOT BETWEEN ((((NULL) IS TRUE))) AND ((CASE WHEN 0.1568831993080706 THEN 0Xffffffffc88c73d4 END))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1385933338'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1062602454 sz=636363877 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1129210498 sz=966146731'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE NOCASE)%((((x'', '', x''))<>((0.9899022301766969, '', NULL))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') IS FALSE) IN (CAST(NULL AS TEXT), CAST(NULL AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN ((((NULL)>=(NULL)))) AND ((((((-1.161462931E9)OR(NULL)))AND(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1596616197 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1706695021 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'f3f1' COLLATE NOCASE))<(((~ ('-766498329'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (0.2696002088466357) AND (x''))  WHEN x'dafe' THEN (('') IS FALSE) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=982435851 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.17901046195371306)AND(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN x'' THEN '1008415655' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT ('-618557344'))))<((LIKELIHOOD(0.7444133543774479, 0.5482034348164954)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.8906714044750823)<(NULL))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2014671189'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1927955613', '123696121', '-1371378916'))<=((NULL, '-1439478484', 0.4783536394013067)))) NOT BETWEEN ((('-1366013341')>=(NULL))) AND (((NULL) NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=379611805 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2036869554 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1817322659 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1029603241 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=263736555 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (INSTR('0.6816649204446226', '*]'))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1503443693 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=5354801 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1749029025 sz=1270691542'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-792301314 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 2 sz=521186658'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.04234370416128219 IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) NOT BETWEEN (((0.21065165673130637) ISNULL)) AND ('-534834403' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=1233491578 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (0X6ff8f6fc))) BETWEEN ((+ (0.12220804697956578))) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1410363007 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')OR(-660137014)) AS INTEGER); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (x'4436' IN (x'cc3c', 0.8790234481440566))  WHEN (((((((('1129210498')OR(0.773784027831997)))OR('')))OR(x'')))AND(NULL)) THEN CAST(x'' AS BLOB) WHEN (('-618557344')<=(x'c157')) THEN ((x'61033075')-(NULL)) WHEN '-792301314' THEN ((NULL) ISNULL) WHEN (('now')>(x'')) THEN ((0.11861458294224203)>(x'')) WHEN ((x'')>('')) THEN CAST('-1538638574' AS BLOB) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-269556631'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5646505760549496)>>(0.3429385352543074)))<(CAST(0xffffffffd4850fd6 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-411932166'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-618557344 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 0 sz=2012130165 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 sz=-1062180825'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(NULL AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-73312565'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0.24181693067906296  WHEN NULL THEN NULL ELSE x'b257' END) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '103171512 sz=1602144074 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('턪', x'', 0.7424665663274246)) BETWEEN ((highlight('\rYlㅃ', x'', 0.5803462332963616, 0.21065165673130637), ((((((((x'f1e3')OR(NULL)))OR(0.6978316904760864)))AND(0Xffffffff8d15bb63)))AND('|s,')), '2012130165' COLLATE BINARY)) AND ((TRIM(DISTINCT 0.7424665663274246), ((NULL) NOT BETWEEN ('1288308404') AND (4.33346043E8)), ((x'd056')<>(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 0X3f7e9370  WHEN x'' THEN -1726492627 WHEN x'' THEN NULL WHEN x'91ba' THEN x'' ELSE 0.6075911051820533 END) BETWEEN (((NULL)>>('1189668460'))) AND ((((('-1320758998')AND(0.19855741887194245)))OR('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=465362703'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1900461612 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')LIKE(NULL)) IN ((~ (NULL)), (('0.17901046195371306')+('|J')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1350287259'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(x'') COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2009712507 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')==(0.8017366579019857)) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1744873129 sz=39758898 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'd20c') NOT BETWEEN (('-170084220' IN ())) AND ((((NULL))<((']uUy['))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=433346043 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1509317657 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '-973962807' COLLATE RTRIM THEN 6.57727731E8 ELSE NULL END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1181077128 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((754836606)) NOT BETWEEN ((((NULL) NOT BETWEEN (x'') AND (709673274)))) AND (((('-1668107441') NOT BETWEEN (NULL) AND (0.6172062249415025))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE '657727731'  WHEN NULL THEN '' END IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.6397559533520575)*(' KjkጥPFC0')))OR(0.39523493673136734 COLLATE RTRIM)))OR((('')-(x'')))))OR(0x75f73f9 COLLATE BINARY)))OR(((NULL)/(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '700985059 sz=-1848762476'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) ISNULL) THEN CASE x''  WHEN '-1280563346' THEN 'i#' ELSE NULL END WHEN LIKELY(DISTINCT '<') THEN ((0.0362629565996605) NOT BETWEEN (0.30427105582065483) AND ('-548958293')) WHEN ABS(DISTINCT '-2113057917') THEN ((NULL) BETWEEN (x'') AND ('/2')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1371650543'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((((0X78872952)) NOT BETWEEN ((NULL)) AND (('5z\XtR8zV'))))AND(x'66be')))AND((+ ('\72J')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 700491942'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((0.7718022247398166)) AND ((NULL))))!=(x'' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1351980462 sz=-1601798290 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-886173863 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1304561859'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(x'', 0.37235097137058915, '', '-0.0')) NOT BETWEEN (CASE NULL  WHEN NULL THEN NULL END) AND (load_extension(-1.668107441E9, 'XE'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 1444143599 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1389090900 -1410164653 sz=-293146363 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-382976176 sz=-766498329 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1252626734 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1430859333 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.6126716203523827 AS NUMERIC))*(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-858512721 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=523240500 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-218372056 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL, '1133659226', NULL)) NOT BETWEEN (('1193912384', NULL, NULL)) AND ((NULL, NULL, 718432342))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=798431162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-733026767'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'9518'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-342338282'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-965989710 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2012130165' COLLATE NOCASE))>=((x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1500213194 sz=-740933055'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.4699351811428789; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('342989175' IN ())) NOT BETWEEN ((('') BETWEEN ('') AND ('1371650543'))) AND (x'b99a7dc6' COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1587690342 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 -816844177 sz=-432673564 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1845713940 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(((('|s,')) NOT BETWEEN (('0.4701477768848037')) AND (('961731188')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-864263785 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=601962564'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST(0.08255936446769152 AS BLOB))OR(DATETIME('0.6192449733273029', NULL, '-752795036'))))OR((+ (x'4469')))))OR((('263736555') NOT BETWEEN (-161000674) AND ('433346043')))))OR(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9253210517089516)) NOT BETWEEN ((((1861224491)IS(0.9540561096092652)))) AND (((0.6860563556993288 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1701318025 2 sz=2012130165 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1074504221 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-970276881' IN ()))>>((~ ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.388499185446907) IS FALSE))OR((- (0.2511877015534616)))))AND(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1831121042 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1739727344 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=2115837867 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1410363007 -1816340787 sz=-1726492627 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1494662 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1089632467' COLLATE NOCASE)>(((x'ebbd')>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-62759592'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-978587778 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1124715643 sz=2022409339 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((x'' IN ()))OR(LIKELY(DISTINCT 1.074504221E9))))AND(('221890699' IN ()))))OR(((NULL)LIKE(x'6fae')))))AND('657727731' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-978314992 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x64c7c9ce; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- (0xf719be1))) NOT BETWEEN (((NULL) BETWEEN ('1686418760') AND (NULL))) AND (0.6397559533520575 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '537593441 -12848876 sz=-1548238249 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.669270281476015) BETWEEN (0.22289866160668792) AND ('-268782316')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-170084220 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-622810961 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1731993656 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2130882576 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-428613112 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-799474259'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '1410363007 2 sz=981245757 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('657727731')OR(0X2ad26856)))OR(x'5d63'))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '俒.u6⹅(d'''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '744695168 sz=1029778350'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)AND('Ui')))OR(''))))>=((((-618349157) BETWEEN ('A+') AND (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=824460673 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((((0xffffffffabb47275)AND('')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '207880941 274147963 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1879143284 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, 1191179398, '590879893'))>=(('263736555', 3.79611805E8, -1.179828627E9)))) BETWEEN (CAST('-1668107441' AS REAL)) AND (('1749029025' IN ('0.4146809033273072')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1280781984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=700985059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'') IS TRUE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((''))>=(('-491715771'))))<=(((-1927955613) NOT BETWEEN (-1.927955613E9) AND ('92522043')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('718432342'))>((0.6075911051820533))) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('&UZ0 ?0^c')))AND((('678875242') IS FALSE))))AND(LAST_INSERT_ROWID())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE load_extension(CASE WHEN NULL THEN NULL END); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-251945017 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.15525266418123185 COLLATE NOCASE)+(((NULL)%(0.8323405916335945)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.894145844002785)==(NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 0 sz=-799474259 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1859968995')LIKE(0Xfffffffffe213b44)))AND((('1132389854')/(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((('N\rw*')OR(-1.409074489E9)))AND(0.18678007047125922)))OR((NULL IN (NULL)))))OR(((x'') NOT BETWEEN (x'') AND ('-342338282')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '2 noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=52903537 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((((((('-973962807')OR(NULL)))AND(0.43679340302223246)))AND('760479050')))OR(x'')))OR(((NULL)GLOB('-1971412937')))))OR((- ('-82368475')))))AND(((NULL) IS FALSE))))OR(CASE 1.754348694E9  WHEN 0.17614994515340143 THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ('0.3844848117076515')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'6e7c')+(NULL)) IN (x'340a')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((rtreenode(NULL, NULL)))!=(((('s얊Sj') IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR('-929302530')))OR(x'')))OR(0.3005883419282429)))OR(0.2840106577709868))) IS FALSE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS TEXT))IS NOT((((x'4109'))==((NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-2107966834 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('-653906226' AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((('-1274887456')OR(0x51c1b9ef)))OR(((NULL)GLOB('	6')))))AND(TRIM(DISTINCT NULL))))AND('IC\rM' COLLATE NOCASE)))AND(CAST(0.8378331667690841 AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1371650543 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(NULL AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-143759214 983347003 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CAST(NULL AS BLOB) THEN '1754348694' ELSE LIKELIHOOD('', 0.12224318286390201) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM((x'3321' IN (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) ISNULL) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 sz=-258812872 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-1906752287 2119365954 sz=1413583524 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('-581483722' IN (0.6484343201028907))  WHEN ((1.749029025E9)GLOB('-485933985')) THEN LIKELY(DISTINCT x'') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1299518634 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x''))==(('1104451519'))))OR(((1410363007) ISNULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL COLLATE RTRIM IN ((((NULL)) NOT BETWEEN ((0.26558894388333354)) AND (('쎤cW#mDeDS'))), ((((NULL)OR('pF')))OR('-864263785')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TIME(NULL, NULL, 0xffffffffbfbdde6b, NULL, x'6489'))==((('660578900') IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1444143599'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=949339480 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1449900185 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '>-ﶭP0KC언'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1409074489 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '-545941420 -534797219 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.726492627E9)) NOT BETWEEN ((((NULL)IS NOT(NULL)))) AND ((('0.9615329813568144' IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-490035543 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL, x'', 'V', x'', '-549953206')) BETWEEN ((x'', '\n*rb', NULL, x'', x'')) AND (('.<䰓jf', 0.604071504911493, x'', x'', x'')))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN (('춖a0')) AND ((''))))-(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1409074489 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-163065423 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '-1849150144 sz=-1738496595 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '1297858979 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1989620251'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN LIKELY(0.8355362001060561) THEN ((((0.287694781407563)AND(0.17273831490120506)))AND(x'4a79')) WHEN json_extract('闡9', x'') THEN ((x'') IS FALSE) WHEN (('-1411779349')&(x'')) THEN CAST(-810951251 AS REAL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\ng%u{}Y', x'', 0.24181693067906296)) NOT BETWEEN ((('-981664345' IN (NULL)), (+ ('Tᡤ1T''%H')), NULL)) AND ((((NULL) BETWEEN ('') AND (NULL)), json_quote('7f'), (('?O')-('-1913246838'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(x'')))AND(x'')))AND(0.4582797874709348)))AND(-752038040))) BETWEEN (CAST(0.5311750916600494 AS TEXT)) AND ('-143759214')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE('O', NULL))>>((~ ('-143759214')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) BETWEEN (-1562977968) AND (0.2605415254258052))  WHEN ((('342989175'))>((-4.90035543E8))) THEN CAST(0.9746136404058146 AS NUMERIC) ELSE CAST(0.5182592028263691 AS INTEGER) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS NOT(NULL)))IS(('' IN (x'')))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) BETWEEN ((x'')) AND (('')))) BETWEEN ((((('-206197263')OR(x'')))OR(NULL))) AND (((((((((0x61885d4c)OR(0.4485692148267517)))OR(x'c710')))AND(0xffffffffa178fd44)))AND(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN '疥FBPBb(Q' WHEN 0.7413064885350659 THEN NULL WHEN '-792337422' THEN 0.9870348947603806 END) NOT BETWEEN ((NULL IN ())) AND ((((x'd676')) NOT BETWEEN ((x'')) AND (('-802765636'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-536233800'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1622885215 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=600866302 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-368843172 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('')))AND(((((x'ca7c')OR('HKN*4	sd')))OR(x'')))))OR(((NULL)AND('rAr')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (('0.6663766313971463') NOTNULL)  WHEN CAST(NULL AS INTEGER) THEN (('㫇RmwMG?') BETWEEN ('4d') AND (x'')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '351637215'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1410363007 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=718432342 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-696009139'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1128699316'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-697246658 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ())) BETWEEN (('OV묋N' IN ())) AND (LOWER(DISTINCT 0xffffffffb5f32a3f))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE x'0d22'  WHEN 0.8603779842702359 THEN NULL END AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=229561646 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '4'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-154553794 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((-918421640) ISNULL)  WHEN ((('1961518471'))<((1693564617))) THEN CASE WHEN x'' THEN 0.3598637893778074 ELSE 0.6816649204446226 END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1726492627 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('309426312' IN ())) NOT BETWEEN ((('now') ISNULL)) AND ((('1003542214') NOT NULL))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1860689974 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UPPER(DISTINCT IFNULL('gtkG', -82417044)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '0 -698952593 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('-2015687373')AND('1066054036')))OR('0.8525818529172173')))AND(0.8468437235222445)))AND(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CHANGES()) NOT BETWEEN (x'') AND (((']UUY[') NOT BETWEEN (NULL) AND (3.17932112E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-1100288946 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'4399')>>(NULL)))LIKE(((1430859333) NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1482071443'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.07353743461885132 IN ('-378556447', NULL))))>=(((- (x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-1078407340' IN ('718432342')))&(UNLIKELY(0xffffffff8e0f1155))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1725727459') IS FALSE))>=((NULL IN ('zMrZH2')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((((x'', NULL, 0.8341508798785638)) NOT BETWEEN ((NULL, NULL, -1.474161718E9)) AND ((x'4c30', '809367744', NULL))))OR((NULL IN ()))))OR(CAST(0.49609247347036545 AS NUMERIC))))OR(x'b98c' COLLATE BINARY)))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1371650543')IS NOT(x'')))/((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-659331655 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-342338282') NOT NULL)) BETWEEN (((0.9148924100917045)>=(x''))) AND (NULL COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-900861959 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0 270545301 sz=456148137 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-1623533013 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'336e' IN ()))OR(IFNULL(0.2208579428654308, NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1074504221 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '770233250'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '961731188 sz=1594004262 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=-200279145 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=-235865450'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', ' sz=1260560370 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff975945b6; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT CAST(((rt0.c3)=(rt0.c2)) AS NUMERIC) FROM rt0 WHERE (((CASE WHEN NULL THEN x'' END) NOT BETWEEN (((NULL)AND(0.34855636153675373))) AND (((((0.7257997535279702)AND('%F')))AND('-770326515'))))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (1003542214); -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=(', '); -- 4ms;
UPDATE OR IGNORE rt0 SET (c3)=(x''); -- 0ms;
PRAGMA auto_vacuum = FULL; -- 0ms;
REINDEX NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync = false; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='2h', c1=x''; -- 1ms;
INSERT OR FAIL INTO rt0(c0, c3, c2, c1) VALUES ('', NULL, 0.9990878516731198, '-1215532751'); -- 0ms;
UPDATE rt0 SET c2=0.7004228004848431, c2='2026560856'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c2) VALUES (NULL, '1790573539', x''), (0.5253674227256611, x'9c3c', '1352057847'), (NULL, 0.3437117065455946, x''); -- 0ms;
PRAGMA cache_spill = 8585522024482877644; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=x''; -- 0ms;
UPDATE rt0 SET c2=-6.18557344E8, c3=1.941756775E9 WHERE (('7VꊀrN㫇')/(rt0.c3)) COLLATE NOCASE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1, c0, c1)=(7.00985059E8, x'7113', 'v6') WHERE (((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END, rt0.c2, ((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))))>((CASE WHEN x'9b459a79' THEN rt0.c1 END, CAST(rt0.c1 AS TEXT), ((rt0.c1) NOTNULL)))); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'', 0.007713417820431667); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'rt0', '0 0 sz=1189668460 noskipscan'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c3, c1, c0) VALUES (0.6449801119436417, 0.08024619093375152, '652781426', 0.8294282148542571); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c2) VALUES (x'', x'c405'); -- 1ms;
PRAGMA threads = -2491875853454463798; -- 0ms;
INSERT OR FAIL INTO rt0 VALUES ('m氯', '', 0.8017366579019857, '1270691542'); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c3) VALUES ('', 0.6593412230333899); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c2, c0)=('0.7792404245728662', -9.1842164E8, 0Xfffffffff3e262b1) WHERE (rt0.c2 COLLATE BINARY IN (rt0.c3, (((((((('1435239556')OR(0.8316148382477223)))AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c1)))); -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1, c2) VALUES (NULL, '/E', 2.012130165E9, x''), (x'', '-477584183', 0x52a8d86, 0.8944273179812424), (0.3002313454155324, '', 0.12220804697956578, -1854611301); -- 0ms;
REINDEX; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE TABLE t0 (c0 TEXT , c1 BLOB , c2 INT  CHECK ( ((c2 COLLATE RTRIM) IS TRUE))); -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='-771848201', c0=NULL, c0='T 87'; -- 0ms;
DELETE FROM rt0; -- 0ms;
UPDATE rt0 SET c2='.G7<~~' WHERE CAST('-1422307559' AS NUMERIC); -- 0ms;
UPDATE rt0 SET c2='' WHERE ((((((((('}g	zYe嘃.~')AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c0)) IN (((rt0.c1) IS TRUE), ((rt0.c1)||(rt0.c2)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c2) VALUES (NULL, 0.6264190116224397); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE t0 SET (c1, c1)=(NULL, x'') WHERE (CAST(t0.c0 AS TEXT) IN ()); -- 0ms;
PRAGMA main.default_cache_size = -97245549; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('xjz샛('); -- 0ms;
UPDATE t0 SET c2=0X2700c5dc; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
INSERT OR REPLACE INTO t0(c0, c2) VALUES (x'', '-1474161718'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'', c3=x'3163', c3=x'5efc'; -- 1ms;
END TRANSACTION; -- 1ms;
PRAGMA temp.foreign_keys = true; -- 0ms;
PRAGMA ignore_check_constraints = false; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c1)=('-1827824565', 0xffffffffd3fad725) WHERE ((((CASE WHEN t0.c1 THEN t0.c0 END)OR(((((t0.c1)OR(t0.c1)))AND(t0.c0)))))AND(IFNULL(t0.c2, t0.c1))); -- 0ms;
PRAGMA locking_mode; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i4 ON t0(((((c0)%(c2))) NOT BETWEEN (((((c1)AND(c1)))OR(c0))) AND ((('342989175') NOTNULL))) DESC,((c0)||(x'')),0.10565323854922026 COLLATE NOCASE) WHERE ((((NULL)) NOT BETWEEN ((c2)) AND ((c0))) IN ((((c0, c0, 0.4976256446975944, c2, c0))<>((c1, c1, c0, c0, c0))))); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31064'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -170084220);\n; -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
CREATE INDEX IF NOT EXISTS i92 ON t0(CAST(HEX(DISTINCT c1) AS NUMERIC),CAST(CAST(c0 AS BLOB) AS INTEGER) COLLATE BINARY,((-12017045) BETWEEN (c2) AND (c0 COLLATE BINARY)) COLLATE RTRIM DESC); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'i92', ''); -- 0ms;
PRAGMA main.auto_vacuum = INCREMENTAL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
UPDATE vt0 SET (c0)=(-269336833); -- 1ms;
UPDATE OR IGNORE t0 SET (c1)=('-378556447'); -- 1ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i0 ON t0((CAST(c2 AS REAL) IN ()) COLLATE NOCASE DESC,CAST(c2 AS NUMERIC) COLLATE NOCASE,c1 ASC) WHERE ((json_array_length(c1, c1)) NOT BETWEEN (((c0)%(c1))) AND ((c1 IN (c0, c0)))); -- 1ms;
CREATE INDEX i19 ON t0(c2,(((c1)) NOT BETWEEN ((c2)) AND ((0.06145313816972309))) COLLATE RTRIM ASC,CASE WHEN ((c1) BETWEEN (c0) AND (c1)) THEN TIME(c0, c0, c1) END COLLATE NOCASE) WHERE ((c0)|(c1)) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x''; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '28565'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR FAIL INTO rt0 VALUES (x'', -1.623533013E9, 0.17276417400462896, 'UB\ET*D.u'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'2405', x'4de8ba13', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL), ('**'), ('2072167864'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (''), (1.587690342E9), (NULL); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 3ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'9b0a'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c3)=(x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='-819492890'; -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 BEGIN INSERT OR REPLACE INTO rt0(c0) VALUES ('&+Z0V?0^c'), (x''), (NULL), (0.10590234539757104), ('');END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c2) VALUES (0xffffffffecbae372), (-1.911615147E9), ('WB'); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE t1 SET c2=NULL, c1=-1.7008422E8; -- 0ms;
INSERT OR ABORT INTO rt0(c3, c0, c2, c1) VALUES (NULL, 0.8302775492031016, NULL, NULL); -- 2ms;
INSERT OR ROLLBACK INTO t1 VALUES (-816844177, 'Yh ~c%樷E', '|S,'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '43354'); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c0, c3) VALUES (NULL, NULL, -1.062180825E9), (0.49238474800556187, 0.8286236458118481, NULL), ('1117988708', 0.06255104213904328, '%f'), ('', NULL, x'8dd0'), ('823474961', 0.7723321036186812, 0.7837636645368413); -- 0ms;
PRAGMA main.cache_spill = true; -- 0ms;
PRAGMA temp.default_cache_size = 17290458; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) CROSS JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c3)))AND('\72J')) AS NUMERIC) WHERE ((((rt0.c3) IS TRUE) IN ())) ORDER BY CAST(((rt0.c2)+(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) IS TRUE) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) CROSS JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c3)))AND('\72J')) AS NUMERIC) ORDER BY CAST(((rt0.c2)+(vt0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) CROSS JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c3)))AND('\72J')) AS NUMERIC) WHERE ((((rt0.c3) IS TRUE) IN ())) ORDER BY CAST(((rt0.c2)+(vt0.c0)) AS INTEGER) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3) IS TRUE) IN ())) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) CROSS JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c3)))AND('\72J')) AS NUMERIC) ORDER BY CAST(((rt0.c2)+(vt0.c0)) AS INTEGER) DESC);
SELECT ALL * FROM v0 INNER JOIN vt0 ON (~ (((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) CROSS JOIN rt0 ON CAST(((((rt0.c0)OR(rt0.c3)))AND('\72J')) AS NUMERIC) WHERE ((((rt0.c3) IS TRUE) IN ())) ORDER BY CAST(((rt0.c2)+(vt0.c0)) AS INTEGER) DESC;
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)-(rt0.c3)))<=((~ (rt0.c1))))) ORDER BY (- ((((rt0.c1))=((rt0.c0))))) DESC, ((((0.4106770725380704) NOTNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c3)))<=((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((((rt0.c1))==((rt0.c0))))) DESC, ((((0.4106770725380704) NOTNULL)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)-(rt0.c3)))<=((~ (rt0.c1))))) ORDER BY (- ((((rt0.c1))=((rt0.c0))))) DESC, ((((0.4106770725380704) NOTNULL)) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)-(rt0.c3)))<=((~ (rt0.c1))))) IS TRUE)  as count FROM rt0, v0 ORDER BY (- ((((rt0.c1))==((rt0.c0))))) DESC, ((((0.4106770725380704) NOTNULL)) IS TRUE)  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (((((rt0.c1)-(rt0.c3)))<=((~ (rt0.c1))))) ORDER BY (- ((((rt0.c1))=((rt0.c0))))) DESC, ((((0.4106770725380704) NOTNULL)) IS TRUE)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 NOT INDEXED, rt0 WHERE (((((CAST(t1.c1 AS REAL))AND(((((t1.c0)AND(t1.c2)))AND(rt0.c0)))))AND(rt0.c3))) ORDER BY (((t1.c1)) BETWEEN ((rt0.c0)) AND ((t1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS REAL))AND(((((t1.c0)AND(t1.c2)))AND(rt0.c0)))))AND(rt0.c3))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((t1.c1)) BETWEEN ((rt0.c0)) AND ((t1.c2 COLLATE NOCASE))));
SELECT ALL * FROM t1, vt0 NOT INDEXED, rt0 WHERE (((((CAST(t1.c1 AS REAL))AND(((((t1.c0)AND(t1.c2)))AND(rt0.c0)))))AND(rt0.c3))) ORDER BY (((t1.c1)) BETWEEN ((rt0.c0)) AND ((t1.c2 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS REAL))AND(((((t1.c0)AND(t1.c2)))AND(rt0.c0)))))AND(rt0.c3))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((t1.c1)) BETWEEN ((rt0.c0)) AND ((t1.c2 COLLATE NOCASE))));
SELECT ALL * FROM t1, vt0 NOT INDEXED, rt0 WHERE (((((CAST(t1.c1 AS REAL))AND(((((t1.c0)AND(t1.c2)))AND(rt0.c0)))))AND(rt0.c3))) ORDER BY (((t1.c1)) BETWEEN ((rt0.c0)) AND ((t1.c2 COLLATE NOCASE)));
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(rt0.c0) COLLATE BINARY) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (-7.99474259E8)))AND(v0.c0)))OR(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (-7.99474259E8)))AND(v0.c0)))OR(x''))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(rt0.c0) COLLATE BINARY) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (-7.99474259E8)))AND(v0.c0)))OR(x''))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(rt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, rt0 ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (-7.99474259E8)))AND(v0.c0)))OR(x''))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0 WHERE (UNLIKELY(rt0.c0) COLLATE BINARY) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c3) AND (-7.99474259E8)))AND(v0.c0)))OR(x''))  NULLS LAST;
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (+ ((+ (rt0.c0)))) WHERE (((((rt0.c3))>((t1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3))>((t1.c2))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (+ ((+ (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (+ ((+ (rt0.c0)))) WHERE (((((rt0.c3))>((t1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3))>((t1.c2))) IN ())) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (+ ((+ (rt0.c0)))));
SELECT * FROM rt0 LEFT OUTER JOIN t1 ON (+ ((+ (rt0.c0)))) WHERE (((((rt0.c3))>((t1.c2))) IN ()));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE WHEN -697246658 THEN (v0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, vt0.c0, v0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN ((v0.c0) IS FALSE) WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 END WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (1.587690342E9))  WHEN (~ (vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) END) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND('N%')))AND(v0.c0)))OR('1587690342'))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((~ (v0.c0)))), (((('W	+	')AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)) DESC, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (1.587690342E9))  WHEN (~ (vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN -697246658 THEN (v0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, vt0.c0, v0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN ((v0.c0) IS FALSE) WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 END ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND('N%')))AND(v0.c0)))OR('1587690342'))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((~ (v0.c0)))), (((('W	+	')AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)) DESC, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE WHEN -697246658 THEN (v0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, vt0.c0, v0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN ((v0.c0) IS FALSE) WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 END WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (1.587690342E9))  WHEN (~ (vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) END) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND('N%')))AND(v0.c0)))OR('1587690342'))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((~ (v0.c0)))), (((('W	+	')AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)) DESC, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (1.587690342E9))  WHEN (~ (vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) END) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN -697246658 THEN (v0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, vt0.c0, v0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN ((v0.c0) IS FALSE) WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 END ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND('N%')))AND(v0.c0)))OR('1587690342'))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((~ (v0.c0)))), (((('W	+	')AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)) DESC, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON CASE WHEN -697246658 THEN (v0.c0 IN ()) WHEN (vt0.c0 IN ()) THEN COALESCE(vt0.c0, vt0.c0, v0.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN (vt0.c0 IN (vt0.c0)) THEN ((v0.c0) IS FALSE) WHEN UPPER(DISTINCT v0.c0) THEN v0.c0 END WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (1.587690342E9))  WHEN (~ (vt0.c0)) THEN ((((v0.c0)AND(vt0.c0)))OR(v0.c0)) END) ORDER BY ((((((((((v0.c0)OR(v0.c0)))AND('N%')))AND(v0.c0)))OR('1587690342'))) NOT BETWEEN (v0.c0 COLLATE BINARY) AND ((~ (v0.c0)))), (((('W	+	')AND((vt0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)) DESC, (((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) COLLATE RTRIM  NULLS LAST;
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)<=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)<=(v0.c0))) NOT NULL));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.09192879750225946 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.09192879750225946 COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.09192879750225946 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((0.09192879750225946 COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (0.09192879750225946 COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c1)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c1)<(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c1)<(rt0.c0))));
SELECT SUM(count) FROM (SELECT ((LTRIM(((rt0.c1)<(rt0.c0)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (LTRIM(((rt0.c1)<(rt0.c0))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ((((((t1.c2)OR(v0.c0)))OR(t1.c2))) NOT BETWEEN ((((t1.c1, t1.c0, t1.c0))<>((t1.c2, v0.c0, t1.c2)))) AND ((((v0.c0))<>((v0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((((((t1.c2)OR(v0.c0)))OR(t1.c2))) NOT BETWEEN ((((t1.c1, t1.c0, t1.c0))!=((t1.c2, v0.c0, t1.c2)))) AND ((((v0.c0))<>((v0.c0))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ((((((t1.c2)OR(v0.c0)))OR(t1.c2))) NOT BETWEEN ((((t1.c1, t1.c0, t1.c0))<>((t1.c2, v0.c0, t1.c2)))) AND ((((v0.c0))<>((v0.c0))))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((((((t1.c2)OR(v0.c0)))OR(t1.c2))) NOT BETWEEN ((((t1.c1, t1.c0, t1.c0))!=((t1.c2, v0.c0, t1.c2)))) AND ((((v0.c0))<>((v0.c0))))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ((((((t1.c2)OR(v0.c0)))OR(t1.c2))) NOT BETWEEN ((((t1.c1, t1.c0, t1.c0))<>((t1.c2, v0.c0, t1.c2)))) AND ((((v0.c0))<>((v0.c0))))) WHERE (NULL);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((((t1.c2)IS(v0.c0))) NOT NULL)) ORDER BY ((((TRIM(t1.c2))AND(((t1.c2)GLOB(v0.c0)))))AND((+ (v0.c0)))) ASC, ((TOTAL_CHANGES()) NOT BETWEEN ((~ (-5.49953206E8))) AND (((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)IS(v0.c0))) NOT NULL)) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY ((((TRIM(t1.c2))AND(((t1.c2)GLOB(v0.c0)))))AND((+ (v0.c0)))) ASC, ((TOTAL_CHANGES()) NOT BETWEEN ((~ (-5.49953206E8))) AND (((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((((t1.c2)IS(v0.c0))) NOT NULL)) ORDER BY ((((TRIM(t1.c2))AND(((t1.c2)GLOB(v0.c0)))))AND((+ (v0.c0)))) ASC, ((TOTAL_CHANGES()) NOT BETWEEN ((~ (-5.49953206E8))) AND (((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c0))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)IS(v0.c0))) NOT NULL)) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY ((((TRIM(t1.c2))AND(((t1.c2)GLOB(v0.c0)))))AND((+ (v0.c0)))) ASC, ((TOTAL_CHANGES()) NOT BETWEEN ((~ (-5.49953206E8))) AND (((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c0)))));
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((((t1.c2)IS(v0.c0))) NOT NULL)) ORDER BY ((((TRIM(t1.c2))AND(((t1.c2)GLOB(v0.c0)))))AND((+ (v0.c0)))) ASC, ((TOTAL_CHANGES()) NOT BETWEEN ((~ (-5.49953206E8))) AND (((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c0))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(vt0.c0)))OR(rt0.c2)))<=(LIKELIHOOD(DISTINCT t1.c0, 0.8574194594759076))) RIGHT OUTER JOIN t1 ON (+ (json_remove(t1.c1, rt0.c2))) WHERE (CASE (~ (t1.c2))  WHEN ((t1.c0)<<(t1.c2)) THEN (((rt0.c2, rt0.c0, rt0.c1))==((vt0.c0, rt0.c2, t1.c1))) ELSE ((((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t1.c2))  WHEN ((t1.c0)<<(t1.c2)) THEN (((rt0.c2, rt0.c0, rt0.c1))=((vt0.c0, rt0.c2, t1.c1))) ELSE ((((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(vt0.c0)))OR(rt0.c2)))<=(LIKELIHOOD(DISTINCT t1.c0, 0.8574194594759076))) RIGHT OUTER JOIN t1 ON (+ (json_remove(t1.c1, rt0.c2))));
SELECT COUNT(*) FROM rt0 FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(vt0.c0)))OR(rt0.c2)))<=(LIKELIHOOD(DISTINCT t1.c0, 0.8574194594759076))) RIGHT OUTER JOIN t1 ON (+ (json_remove(t1.c1, rt0.c2))) WHERE (CASE (~ (t1.c2))  WHEN ((t1.c0)<<(t1.c2)) THEN (((rt0.c2, rt0.c0, rt0.c1))==((vt0.c0, rt0.c2, t1.c1))) ELSE ((((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (t1.c2))  WHEN ((t1.c0)<<(t1.c2)) THEN (((rt0.c2, rt0.c0, rt0.c1))=((vt0.c0, rt0.c2, t1.c1))) ELSE ((((((((((((rt0.c2)AND(vt0.c0)))AND(vt0.c0)))AND(rt0.c2)))OR(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)) END) IS TRUE)  as count FROM rt0 FULL OUTER JOIN vt0 ON ((((((t1.c0)AND(vt0.c0)))OR(rt0.c2)))<=(LIKELIHOOD(DISTINCT t1.c0, 0.8574194594759076))) RIGHT OUTER JOIN t1 ON (+ (json_remove(t1.c1, rt0.c2))));
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_VERSION() COLLATE NOCASE) IS TRUE)  as count FROM rt0, v0);
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (SQLITE_VERSION() COLLATE NOCASE);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c2 COLLATE RTRIM)AND(((t1.c0)>>(t1.c1)))))AND(CAST(t1.c2 AS REAL))))OR(t1.c0 COLLATE RTRIM)))OR(((((x'')OR(t1.c1)))AND(t1.c1)))) WHERE (NULL) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c2 COLLATE RTRIM)AND(((t1.c0)>>(t1.c1)))))AND(CAST(t1.c2 AS REAL))))OR(t1.c0 COLLATE RTRIM)))OR(((((x'')OR(t1.c1)))AND(t1.c1)))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c2 COLLATE RTRIM)AND(((t1.c0)>>(t1.c1)))))AND(CAST(t1.c2 AS REAL))))OR(t1.c0 COLLATE RTRIM)))OR(((((x'')OR(t1.c1)))AND(t1.c1)))) WHERE (NULL) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c2 COLLATE RTRIM)AND(((t1.c0)>>(t1.c1)))))AND(CAST(t1.c2 AS REAL))))OR(t1.c0 COLLATE RTRIM)))OR(((((x'')OR(t1.c1)))AND(t1.c1)))) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON ((((((((t1.c2 COLLATE RTRIM)AND(((t1.c0)>>(t1.c1)))))AND(CAST(t1.c2 AS REAL))))OR(t1.c0 COLLATE RTRIM)))OR(((((x'')OR(t1.c1)))AND(t1.c1)))) WHERE (NULL) ORDER BY CASE WHEN CASE WHEN t1.c0 THEN t1.c0 ELSE v0.c0 END THEN CAST(t1.c1 AS TEXT) ELSE ((t1.c1) BETWEEN (t1.c0) AND (t1.c1)) END;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((NULL)>>(((t1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(t1.c2 COLLATE NOCASE AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(((t1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY CAST(t1.c2 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((NULL)>>(((t1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(t1.c2 COLLATE NOCASE AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)>>(((t1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY CAST(t1.c2 COLLATE NOCASE AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((NULL)>>(((t1.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY CAST(t1.c2 COLLATE NOCASE AS NUMERIC);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT * FROM rt0 WHERE ((- (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((- (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))))) IS TRUE)  as count FROM rt0 NOT INDEXED);
SELECT * FROM rt0 WHERE ((- (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)>=('0.8283258494535501')))LIKE(((rt0.c2) BETWEEN (vt0.c0) AND ('1919100248')))) WHERE (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))LIKE(((rt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))LIKE(((rt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)>=('0.8283258494535501')))LIKE(((rt0.c2) BETWEEN (vt0.c0) AND ('1919100248')))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)>=('0.8283258494535501')))LIKE(((rt0.c2) BETWEEN (vt0.c0) AND ('1919100248')))) WHERE (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))LIKE(((rt0.c0)LIKE(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))LIKE(((rt0.c0)LIKE(vt0.c0))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)>=('0.8283258494535501')))LIKE(((rt0.c2) BETWEEN (vt0.c0) AND ('1919100248')))));
SELECT ALL * FROM rt0 CROSS JOIN vt0 ON ((((rt0.c1)>=('0.8283258494535501')))LIKE(((rt0.c2) BETWEEN (vt0.c0) AND ('1919100248')))) WHERE (((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))LIKE(((rt0.c0)LIKE(vt0.c0)))));
SELECT COUNT(*) FROM t1, v0 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0)))>>((((v0.c0)) BETWEEN ((v0.c0)) AND ((t1.c0)))))) ORDER BY (((v0.c0, t1.c1, t1.c0))<=((x'1daf', x'700c', v0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))>>((((v0.c0)) BETWEEN ((v0.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1, v0 ORDER BY (((v0.c0, t1.c1, t1.c0))<=((x'1daf', x'700c', v0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, v0 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0)))>>((((v0.c0)) BETWEEN ((v0.c0)) AND ((t1.c0)))))) ORDER BY (((v0.c0, t1.c1, t1.c0))<=((x'1daf', x'700c', v0.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(t1.c0)))OR(t1.c0)))>>((((v0.c0)) BETWEEN ((v0.c0)) AND ((t1.c0)))))) IS TRUE)  as count FROM t1, v0 ORDER BY (((v0.c0, t1.c1, t1.c0))<=((x'1daf', x'700c', v0.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM t1, v0 WHERE (((((((t1.c0)OR(t1.c0)))OR(t1.c0)))>>((((v0.c0)) BETWEEN ((v0.c0)) AND ((t1.c0)))))) ORDER BY (((v0.c0, t1.c1, t1.c0))<=((x'1daf', x'700c', v0.c0))) COLLATE RTRIM;
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (JULIANDAY((NOT (v0.c0)), (((vt0.c0))!=((rt0.c0))), '-1442849608')) ORDER BY CASE WHEN 'QL 4\r{x{' THEN CAST(rt0.c0 AS NUMERIC) WHEN UPPER(DISTINCT t1.c2) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)*(NULL)) THEN x'' COLLATE RTRIM END DESC, (((v0.c0 IN (rt0.c1, t1.c0)))%(((t1.c2) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY((NOT (v0.c0)), (((vt0.c0))<>((rt0.c0))), '-1442849608')) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY CASE WHEN 'QL 4\r{x{' THEN CAST(rt0.c0 AS NUMERIC) WHEN UPPER(DISTINCT t1.c2) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)*(NULL)) THEN x'' COLLATE RTRIM END DESC, (((v0.c0 IN (rt0.c1, t1.c0)))%(((t1.c2) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (JULIANDAY((NOT (v0.c0)), (((vt0.c0))!=((rt0.c0))), '-1442849608')) ORDER BY CASE WHEN 'QL 4\r{x{' THEN CAST(rt0.c0 AS NUMERIC) WHEN UPPER(DISTINCT t1.c2) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)*(NULL)) THEN x'' COLLATE RTRIM END DESC, (((v0.c0 IN (rt0.c1, t1.c0)))%(((t1.c2) NOTNULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((JULIANDAY((NOT (v0.c0)), (((vt0.c0))<>((rt0.c0))), '-1442849608')) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY CASE WHEN 'QL 4\r{x{' THEN CAST(rt0.c0 AS NUMERIC) WHEN UPPER(DISTINCT t1.c2) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)*(NULL)) THEN x'' COLLATE RTRIM END DESC, (((v0.c0 IN (rt0.c1, t1.c0)))%(((t1.c2) NOTNULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (JULIANDAY((NOT (v0.c0)), (((vt0.c0))!=((rt0.c0))), '-1442849608')) ORDER BY CASE WHEN 'QL 4\r{x{' THEN CAST(rt0.c0 AS NUMERIC) WHEN UPPER(DISTINCT t1.c2) THEN CAST(rt0.c1 AS REAL) WHEN ((rt0.c3)*(NULL)) THEN x'' COLLATE RTRIM END DESC, (((v0.c0 IN (rt0.c1, t1.c0)))%(((t1.c2) NOTNULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT NULL)) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT NULL)) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>=(v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>=(v0.c0))) NOT NULL)) ORDER BY v0.c0 ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE (NULL) ORDER BY (+ ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (+ ((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (+ ((NOT (vt0.c0))));
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (+ ((NOT (vt0.c0)))));
SELECT * FROM vt0 WHERE (NULL) ORDER BY (+ ((NOT (vt0.c0))));
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE ((((v0.c0 IN (vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON '2119365954' RIGHT OUTER JOIN rt0 ON ((((0.22554301349440464)OR((((rt0.c0))<=((vt0.c0))))))OR(CAST(rt0.c3 AS TEXT))) WHERE (0.29335317229928204 COLLATE RTRIM) ORDER BY ((((((((rt0.c0)AND('0.6990425749642706')))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.29335317229928204 COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '2119365954' RIGHT OUTER JOIN rt0 ON ((((0.22554301349440464)OR((((rt0.c0))<=((vt0.c0))))))OR(CAST(rt0.c3 AS TEXT))) ORDER BY ((((((((rt0.c0)AND('0.6990425749642706')))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON '2119365954' RIGHT OUTER JOIN rt0 ON ((((0.22554301349440464)OR((((rt0.c0))<=((vt0.c0))))))OR(CAST(rt0.c3 AS TEXT))) WHERE (0.29335317229928204 COLLATE RTRIM) ORDER BY ((((((((rt0.c0)AND('0.6990425749642706')))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.29335317229928204 COLLATE RTRIM) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON '2119365954' RIGHT OUTER JOIN rt0 ON ((((0.22554301349440464)OR((((rt0.c0))<=((vt0.c0))))))OR(CAST(rt0.c3 AS TEXT))) ORDER BY ((((((((rt0.c0)AND('0.6990425749642706')))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON '2119365954' RIGHT OUTER JOIN rt0 ON ((((0.22554301349440464)OR((((rt0.c0))<=((vt0.c0))))))OR(CAST(rt0.c3 AS TEXT))) WHERE (0.29335317229928204 COLLATE RTRIM) ORDER BY ((((((((rt0.c0)AND('0.6990425749642706')))AND(rt0.c2)))OR(rt0.c1)))AND(vt0.c0)) COLLATE BINARY  NULLS LAST;
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c0, t1.c1, t1.c2)) BETWEEN ((t1.c2, t1.c1 COLLATE BINARY, t1.c1)) AND ((((t1.c2)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)), ((((t1.c0)OR(t1.c2)))AND(0.31092484657721353))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t1.c1, t1.c2)) BETWEEN ((t1.c2, t1.c1 COLLATE BINARY, t1.c1)) AND ((((t1.c2)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)), ((((t1.c0)OR(t1.c2)))AND(0.31092484657721353)))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c0, t1.c1, t1.c2)) BETWEEN ((t1.c2, t1.c1 COLLATE BINARY, t1.c1)) AND ((((t1.c2)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)), ((((t1.c0)OR(t1.c2)))AND(0.31092484657721353))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, t1.c1, t1.c2)) BETWEEN ((t1.c2, t1.c1 COLLATE BINARY, t1.c1)) AND ((((t1.c2)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)), ((((t1.c0)OR(t1.c2)))AND(0.31092484657721353)))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL * FROM vt0, t1 WHERE ((((vt0.c0, t1.c1, t1.c2)) BETWEEN ((t1.c2, t1.c1 COLLATE BINARY, t1.c1)) AND ((((t1.c2)||(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c2)), ((((t1.c0)OR(t1.c2)))AND(0.31092484657721353))))));
SELECT * FROM t1, v0 WHERE ((((((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))!=(('0.08956381004964498'))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))<>(('0.08956381004964498')))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE ((((((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))!=(('0.08956381004964498'))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))<>(('0.08956381004964498')))) IS TRUE)  as count FROM t1, v0);
SELECT * FROM t1, v0 WHERE ((((((v0.c0) NOT BETWEEN (t1.c2) AND (t1.c0))))!=(('0.08956381004964498'))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS TEXT))) AND ((RTRIM(vt0.c0), ((x'24f6') IS TRUE), CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, '', vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS TEXT))) AND ((RTRIM(vt0.c0), ((x'24f6') IS TRUE), CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS TEXT))) AND ((RTRIM(vt0.c0), ((x'24f6') IS TRUE), CAST(vt0.c0 AS BLOB)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, '', vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS TEXT))) AND ((RTRIM(vt0.c0), ((x'24f6') IS TRUE), CAST(vt0.c0 AS BLOB))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, '', vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, vt0.c0 COLLATE BINARY, CAST(vt0.c0 AS TEXT))) AND ((RTRIM(vt0.c0), ((x'24f6') IS TRUE), CAST(vt0.c0 AS BLOB)))));
SELECT * FROM vt0, rt0, t1 WHERE ((~ (rt0.c3))) ORDER BY TYPEOF((~ (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY TYPEOF((~ (t1.c0))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE ((~ (rt0.c3))) ORDER BY TYPEOF((~ (t1.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((~ (rt0.c3))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY TYPEOF((~ (t1.c0))) ASC);
SELECT * FROM vt0, rt0, t1 WHERE ((~ (rt0.c3))) ORDER BY TYPEOF((~ (t1.c0))) ASC;
SELECT ALL COUNT(*) FROM rt0 WHERE (0.29299609228429646);
SELECT SUM(count) FROM (SELECT ALL ((0.29299609228429646) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.29299609228429646);
SELECT SUM(count) FROM (SELECT ALL ((0.29299609228429646) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.29299609228429646);
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c1))) ISNULL) WHERE ((((rt0.c0 IN (t1.c0, rt0.c2))) NOT BETWEEN (CASE t1.c1  WHEN x'' THEN t1.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND ((((t1.c1)) BETWEEN ((t1.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (t1.c0, rt0.c2))) NOT BETWEEN (CASE t1.c1  WHEN x'' THEN t1.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND ((((t1.c1)) BETWEEN ((t1.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c1))) ISNULL) WHERE ((((rt0.c0 IN (t1.c0, rt0.c2))) NOT BETWEEN (CASE t1.c1  WHEN x'' THEN t1.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND ((((t1.c1)) BETWEEN ((t1.c2)) AND ((rt0.c1))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0 IN (t1.c0, rt0.c2))) NOT BETWEEN (CASE t1.c1  WHEN x'' THEN t1.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND ((((t1.c1)) BETWEEN ((t1.c2)) AND ((rt0.c1)))))) IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c1))) ISNULL));
SELECT ALL COUNT(*) FROM t1 CROSS JOIN rt0 ON ((((rt0.c1)>=(rt0.c1))) ISNULL) WHERE ((((rt0.c0 IN (t1.c0, rt0.c2))) NOT BETWEEN (CASE t1.c1  WHEN x'' THEN t1.c1 WHEN rt0.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END) AND ((((t1.c1)) BETWEEN ((t1.c2)) AND ((rt0.c1))))));
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((t1.c1 IN ()))>=(CAST('-1726492627' AS REAL))) ASC, t1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1 IN ()))>=(CAST('-1726492627' AS REAL))) ASC, t1.c1  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((t1.c1 IN ()))>=(CAST('-1726492627' AS REAL))) ASC, t1.c1  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1 IN ()))>=(CAST('-1726492627' AS REAL))) ASC, t1.c1  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (CAST(t1.c0 COLLATE NOCASE AS NUMERIC)) ORDER BY (((t1.c1 IN ()))>=(CAST('-1726492627' AS REAL))) ASC, t1.c1  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY json_object(vt0.c0 COLLATE BINARY, vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY json_object(vt0.c0 COLLATE BINARY, vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY json_object(vt0.c0 COLLATE BINARY, vt0.c0)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY json_object(vt0.c0 COLLATE BINARY, vt0.c0)  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)OR(((vt0.c0)LIKE(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) ORDER BY json_object(vt0.c0 COLLATE BINARY, vt0.c0)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))) THEN ((t1.c1)>=(t1.c0)) WHEN ((((((((vt0.c0)AND(t1.c2)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) THEN CAST('Ge>D-' AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 END THEN v0.c0 COLLATE BINARY ELSE ((((t1.c1)AND(t1.c1)))AND(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))) THEN ((t1.c1)>=(t1.c0)) WHEN ((((((((vt0.c0)AND(t1.c2)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) THEN CAST('Ge>D-' AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 END THEN v0.c0 COLLATE BINARY ELSE ((((t1.c1)AND(t1.c1)))AND(t1.c0)) END) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))) THEN ((t1.c1)>=(t1.c0)) WHEN ((((((((vt0.c0)AND(t1.c2)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) THEN CAST('Ge>D-' AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 END THEN v0.c0 COLLATE BINARY ELSE ((((t1.c1)AND(t1.c1)))AND(t1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))) THEN ((t1.c1)>=(t1.c0)) WHEN ((((((((vt0.c0)AND(t1.c2)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) THEN CAST('Ge>D-' AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 END THEN v0.c0 COLLATE BINARY ELSE ((((t1.c1)AND(t1.c1)))AND(t1.c0)) END) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (CASE WHEN (((v0.c0)) BETWEEN ((t1.c2)) AND ((t1.c1))) THEN ((t1.c1)>=(t1.c0)) WHEN ((((((((vt0.c0)AND(t1.c2)))AND(t1.c0)))AND(t1.c0)))OR(t1.c1)) THEN CAST('Ge>D-' AS REAL) WHEN CASE v0.c0  WHEN v0.c0 THEN t1.c0 END THEN v0.c0 COLLATE BINARY ELSE ((((t1.c1)AND(t1.c1)))AND(t1.c0)) END);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) NOTNULL) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(((rt0.c3) NOTNULL) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE ((((x'a28a', ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))<=((((v0.c0)-(v0.c0)), ((v0.c0)|(v0.c0)), v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((x'a28a', ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))<=((((v0.c0)-(v0.c0)), ((v0.c0)|(v0.c0)), v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((x'a28a', ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))<=((((v0.c0)-(v0.c0)), ((v0.c0)|(v0.c0)), v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((x'a28a', ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))<=((((v0.c0)-(v0.c0)), ((v0.c0)|(v0.c0)), v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((x'a28a', ((((v0.c0)AND(v0.c0)))OR(v0.c0)), (NOT (v0.c0))))<=((((v0.c0)-(v0.c0)), ((v0.c0)|(v0.c0)), v0.c0))));
SELECT ALL * FROM t1 WHERE (UNICODE(((0.443855330305268) IS TRUE))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((x'')));
SELECT SUM(count) FROM (SELECT ((UNICODE(((0.443855330305268) IS TRUE))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((x''))));
SELECT ALL * FROM t1 WHERE (UNICODE(((0.443855330305268) IS TRUE))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((x'')));
SELECT SUM(count) FROM (SELECT ((UNICODE(((0.443855330305268) IS TRUE))) IS TRUE)  as count FROM t1 ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((x''))));
SELECT ALL * FROM t1 WHERE (UNICODE(((0.443855330305268) IS TRUE))) ORDER BY (((t1.c1)) NOT BETWEEN ((t1.c2)) AND ((x'')));
SELECT * FROM rt0, vt0, t1, v0 WHERE (GLOB(CASE WHEN rt0.c0 THEN t1.c2 END, TYPEOF(DISTINCT t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE WHEN rt0.c0 THEN t1.c2 END, TYPEOF(DISTINCT t1.c2))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE (GLOB(CASE WHEN rt0.c0 THEN t1.c2 END, TYPEOF(DISTINCT t1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB(CASE WHEN rt0.c0 THEN t1.c2 END, TYPEOF(DISTINCT t1.c2))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE (GLOB(CASE WHEN rt0.c0 THEN t1.c2 END, TYPEOF(DISTINCT t1.c2)));
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) INNER JOIN rt0 ON ((((v0.c0)-(rt0.c1))) IS TRUE) WHERE (((('-1093310480')IS(v0.c0)) IN ())) ORDER BY (- (((0Xffffffff93ebeeb4) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-1093310480')IS(v0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) INNER JOIN rt0 ON ((((v0.c0)-(rt0.c1))) IS TRUE) ORDER BY (- (((0Xffffffff93ebeeb4) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) INNER JOIN rt0 ON ((((v0.c0)-(rt0.c1))) IS TRUE) WHERE (((('-1093310480')IS(v0.c0)) IN ())) ORDER BY (- (((0Xffffffff93ebeeb4) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((('-1093310480')IS(v0.c0)) IN ())) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) INNER JOIN rt0 ON ((((v0.c0)-(rt0.c1))) IS TRUE) ORDER BY (- (((0Xffffffff93ebeeb4) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON CAST(v0.c0 AS REAL) INNER JOIN rt0 ON ((((v0.c0)-(rt0.c1))) IS TRUE) WHERE (((('-1093310480')IS(v0.c0)) IN ())) ORDER BY (- (((0Xffffffff93ebeeb4) BETWEEN (rt0.c2) AND (rt0.c2)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE ((+ (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2)))));
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c1, rt0.c2, t1.c1)) NOT BETWEEN ((t1.c2, t1.c0, vt0.c0)) AND ((t1.c0, vt0.c0, rt0.c3))))OR(CASE t1.c2  WHEN 'H	' THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN t1.c2 THEN rt0.c2 END)))OR((+ (t1.c0)))))AND((((t1.c2)) BETWEEN ((t1.c0)) AND ((rt0.c2))))))AND(CAST(-6.18557344E8 AS BLOB))) FULL OUTER JOIN rt0 ON CASE t1.c2  WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY LEFT OUTER JOIN v0 ON 1687243503 WHERE ((((t1.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c1, rt0.c2, t1.c1)) NOT BETWEEN ((t1.c2, t1.c0, vt0.c0)) AND ((t1.c0, vt0.c0, rt0.c3))))OR(CASE t1.c2  WHEN 'H	' THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN t1.c2 THEN rt0.c2 END)))OR((+ (t1.c0)))))AND((((t1.c2)) BETWEEN ((t1.c0)) AND ((rt0.c2))))))AND(CAST(-6.18557344E8 AS BLOB))) FULL OUTER JOIN rt0 ON CASE t1.c2  WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY LEFT OUTER JOIN v0 ON 1687243503);
SELECT ALL COUNT(*) FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c1, rt0.c2, t1.c1)) NOT BETWEEN ((t1.c2, t1.c0, vt0.c0)) AND ((t1.c0, vt0.c0, rt0.c3))))OR(CASE t1.c2  WHEN 'H	' THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN t1.c2 THEN rt0.c2 END)))OR((+ (t1.c0)))))AND((((t1.c2)) BETWEEN ((t1.c0)) AND ((rt0.c2))))))AND(CAST(-6.18557344E8 AS BLOB))) FULL OUTER JOIN rt0 ON CASE t1.c2  WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY LEFT OUTER JOIN v0 ON 1687243503 WHERE ((((t1.c2 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2 IN ())) NOT NULL)) IS TRUE)  as count FROM t1 LEFT OUTER JOIN vt0 ON (((((((((((t1.c1, rt0.c2, t1.c1)) NOT BETWEEN ((t1.c2, t1.c0, vt0.c0)) AND ((t1.c0, vt0.c0, rt0.c3))))OR(CASE t1.c2  WHEN 'H	' THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN t1.c2 THEN rt0.c2 END)))OR((+ (t1.c0)))))AND((((t1.c2)) BETWEEN ((t1.c0)) AND ((rt0.c2))))))AND(CAST(-6.18557344E8 AS BLOB))) FULL OUTER JOIN rt0 ON CASE t1.c2  WHEN rt0.c3 THEN rt0.c1 END COLLATE BINARY LEFT OUTER JOIN v0 ON 1687243503);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(((vt0.c0)||(vt0.c0))))) ORDER BY CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c0 AS NUMERIC) WHEN TIME(vt0.c0, vt0.c0, '700985059') THEN (vt0.c0 IN ()) ELSE ((vt0.c0)/(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c0 AS NUMERIC) WHEN TIME(vt0.c0, vt0.c0, '700985059') THEN (vt0.c0 IN ()) ELSE ((vt0.c0)/(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(((vt0.c0)||(vt0.c0))))) ORDER BY CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c0 AS NUMERIC) WHEN TIME(vt0.c0, vt0.c0, '700985059') THEN (vt0.c0 IN ()) ELSE ((vt0.c0)/(vt0.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c0 AS NUMERIC) WHEN TIME(vt0.c0, vt0.c0, '700985059') THEN (vt0.c0 IN ()) ELSE ((vt0.c0)/(vt0.c0)) END  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)%(((vt0.c0)||(vt0.c0))))) ORDER BY CASE (~ (vt0.c0))  WHEN ((vt0.c0)&(vt0.c0)) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c0 AS INTEGER) THEN CAST(vt0.c0 AS NUMERIC) WHEN TIME(vt0.c0, vt0.c0, '700985059') THEN (vt0.c0 IN ()) ELSE ((vt0.c0)/(vt0.c0)) END  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN 0.3356053114423684 THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.3356053114423684 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN 0.3356053114423684 THEN (vt0.c0 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0.3356053114423684 THEN (vt0.c0 IN ()) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE WHEN 0.3356053114423684 THEN (vt0.c0 IN ()) END);
SELECT COUNT(*) FROM t1 WHERE ((+ ((t1.c2 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((t1.c2 IN (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ ((t1.c2 IN (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((t1.c2 IN (t1.c0))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((+ ((t1.c2 IN (t1.c0)))));
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c2 END)OR((+ (t1.c0)))))AND(CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END))) ORDER BY ((((t1.c0) NOTNULL))IS NOT(x'2d9c')) DESC, CAST(t1.c0 COLLATE BINARY AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c1  WHEN t1.c1 THEN t1.c2 END)OR((+ (t1.c0)))))AND(CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOTNULL))IS NOT(x'2d9c')) DESC, CAST(t1.c0 COLLATE BINARY AS BLOB) DESC);
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c2 END)OR((+ (t1.c0)))))AND(CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END))) ORDER BY ((((t1.c0) NOTNULL))IS NOT(x'2d9c')) DESC, CAST(t1.c0 COLLATE BINARY AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE t1.c1  WHEN t1.c1 THEN t1.c2 END)OR((+ (t1.c0)))))AND(CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0) NOTNULL))IS NOT(x'2d9c')) DESC, CAST(t1.c0 COLLATE BINARY AS BLOB) DESC);
SELECT * FROM t1 WHERE (((((CASE t1.c1  WHEN t1.c1 THEN t1.c2 END)OR((+ (t1.c0)))))AND(CASE t1.c1  WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END))) ORDER BY ((((t1.c0) NOTNULL))IS NOT(x'2d9c')) DESC, CAST(t1.c0 COLLATE BINARY AS BLOB) DESC;
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CHANGES()) AND (CAST(t1.c2 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (((-940824089)<=(v0.c0))) AND (CAST(x'' AS REAL))) WHERE ((((((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c2)||(t1.c1)))))AND(t1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c2)||(t1.c1)))))AND(t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CHANGES()) AND (CAST(t1.c2 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (((-940824089)<=(v0.c0))) AND (CAST(x'' AS REAL))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CHANGES()) AND (CAST(t1.c2 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (((-940824089)<=(v0.c0))) AND (CAST(x'' AS REAL))) WHERE ((((((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c2)||(t1.c1)))))AND(t1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c2)||(t1.c1)))))AND(t1.c2 COLLATE BINARY))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CHANGES()) AND (CAST(t1.c2 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (((-940824089)<=(v0.c0))) AND (CAST(x'' AS REAL))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN t1 ON ((CASE WHEN t1.c1 THEN t1.c0 WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c1 END) BETWEEN (CHANGES()) AND (CAST(t1.c2 AS INTEGER))) LEFT OUTER JOIN vt0 ON ((vt0.c0) BETWEEN (((-940824089)<=(v0.c0))) AND (CAST(x'' AS REAL))) WHERE ((((((((v0.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c0))))AND(((t1.c2)||(t1.c1)))))AND(t1.c2 COLLATE BINARY)));
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c0 END AS NUMERIC)) ORDER BY ((HEX(t1.c2))>=(t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c1 THEN t1.c0 END AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY ((HEX(t1.c2))>=(t1.c0 COLLATE BINARY)));
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c0 END AS NUMERIC)) ORDER BY ((HEX(t1.c2))>=(t1.c0 COLLATE BINARY));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c1 THEN t1.c0 END AS NUMERIC)) IS TRUE)  as count FROM t1 ORDER BY ((HEX(t1.c2))>=(t1.c0 COLLATE BINARY)));
SELECT * FROM t1 WHERE (CAST(CASE WHEN t1.c1 THEN t1.c0 END AS NUMERIC)) ORDER BY ((HEX(t1.c2))>=(t1.c0 COLLATE BINARY));
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON TRIM(rt0.c1, rt0.c0) COLLATE BINARY FULL OUTER JOIN t1 ON rt0.c0 WHERE (CAST(((rt0.c3) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON TRIM(rt0.c1, rt0.c0) COLLATE BINARY FULL OUTER JOIN t1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON TRIM(rt0.c1, rt0.c0) COLLATE BINARY FULL OUTER JOIN t1 ON rt0.c0 WHERE (CAST(((rt0.c3) IS TRUE) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt0.c3) IS TRUE) AS BLOB)) IS TRUE)  as count FROM rt0 CROSS JOIN v0 ON TRIM(rt0.c1, rt0.c0) COLLATE BINARY FULL OUTER JOIN t1 ON rt0.c0);
SELECT ALL COUNT(*) FROM rt0 CROSS JOIN v0 ON TRIM(rt0.c1, rt0.c0) COLLATE BINARY FULL OUTER JOIN t1 ON rt0.c0 WHERE (CAST(((rt0.c3) IS TRUE) AS BLOB));
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT COUNT(*) FROM vt0, rt0, v0 WHERE (rt0.c1);
SELECT * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT ALL * FROM rt0, t1 NATURAL JOIN vt0 WHERE (((((t1.c1)GLOB(rt0.c2)))IS(CASE 0.8017366579019857  WHEN rt0.c3 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)GLOB(rt0.c2)))IS(CASE 0.8017366579019857  WHEN rt0.c3 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t1 NATURAL JOIN vt0 WHERE (((((t1.c1)GLOB(rt0.c2)))IS(CASE 0.8017366579019857  WHEN rt0.c3 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c1)GLOB(rt0.c2)))IS(CASE 0.8017366579019857  WHEN rt0.c3 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, t1 NATURAL JOIN vt0);
SELECT ALL * FROM rt0, t1 NATURAL JOIN vt0 WHERE (((((t1.c1)GLOB(rt0.c2)))IS(CASE 0.8017366579019857  WHEN rt0.c3 THEN t1.c0 END)));
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT COUNT(*) FROM vt0, t1, rt0, v0 WHERE (x'');
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((highlight(v0.c0, vt0.c0, v0.c0, vt0.c0) IN (vt0.c0, CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((highlight(v0.c0, vt0.c0, v0.c0, vt0.c0) IN (vt0.c0, CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((highlight(v0.c0, vt0.c0, v0.c0, vt0.c0) IN (vt0.c0, CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((highlight(v0.c0, vt0.c0, v0.c0, vt0.c0) IN (vt0.c0, CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((highlight(v0.c0, vt0.c0, v0.c0, vt0.c0) IN (vt0.c0, CASE vt0.c0  WHEN x'' THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt0, t1 NOT INDEXED, v0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY (((((((((((v0.c0))==((t1.c0))))OR((+ (0x388ccdb5)))))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c0)))))AND(((v0.c0)>=(0.8453553432762656)))))AND(CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY (((((((((((v0.c0))=((t1.c0))))OR((+ (0x388ccdb5)))))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c0)))))AND(((v0.c0)>=(0.8453553432762656)))))AND(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, rt0, t1 NOT INDEXED, v0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY (((((((((((v0.c0))==((t1.c0))))OR((+ (0x388ccdb5)))))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c0)))))AND(((v0.c0)>=(0.8453553432762656)))))AND(CAST(t1.c0 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c1 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY (((((((((((v0.c0))=((t1.c0))))OR((+ (0x388ccdb5)))))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c0)))))AND(((v0.c0)>=(0.8453553432762656)))))AND(CAST(t1.c0 AS NUMERIC))));
SELECT ALL COUNT(*) FROM vt0, rt0, t1 NOT INDEXED, v0 WHERE (((CAST(rt0.c1 AS TEXT)) IS TRUE)) ORDER BY (((((((((((v0.c0))==((t1.c0))))OR((+ (0x388ccdb5)))))AND(((((t1.c0)AND(rt0.c3)))AND(rt0.c0)))))AND(((v0.c0)>=(0.8453553432762656)))))AND(CAST(t1.c0 AS NUMERIC)));
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<=((-1.100288946E9))) THEN (((vt0.c0))<((vt0.c0))) WHEN ((x'')<>(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) IS FALSE) THEN (('-2083744898') IS FALSE) END) ORDER BY CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))<=((-1.100288946E9))) THEN (((vt0.c0))<((vt0.c0))) WHEN ((x'')<>(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) IS FALSE) THEN (('-2083744898') IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<=((-1.100288946E9))) THEN (((vt0.c0))<((vt0.c0))) WHEN ((x'')<>(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) IS FALSE) THEN (('-2083744898') IS FALSE) END) ORDER BY CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (((vt0.c0))<=((-1.100288946E9))) THEN (((vt0.c0))<((vt0.c0))) WHEN ((x'')<>(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) IS FALSE) THEN (('-2083744898') IS FALSE) END) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (((vt0.c0))<=((-1.100288946E9))) THEN (((vt0.c0))<((vt0.c0))) WHEN ((x'')<>(vt0.c0)) THEN ((vt0.c0) IS TRUE) WHEN ((vt0.c0) IS FALSE) THEN (('-2083744898') IS FALSE) END) ORDER BY CASE WHEN ((vt0.c0)>>(vt0.c0)) THEN ((vt0.c0) NOT NULL) END  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) AND ((rt0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) AND ((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) AND ((rt0.c3 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) AND ((rt0.c3 COLLATE RTRIM)))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((rt0.c0)) NOT BETWEEN ((((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)))) AND ((rt0.c3 COLLATE RTRIM))));
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)OR(t1.c0)))AND(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(t1.c0)))AND(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)OR(t1.c0)))AND(rt0.c3))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt0.c1)OR(t1.c0)))AND(rt0.c3))) IS TRUE)) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)OR(t1.c0)))AND(rt0.c3))) IS TRUE));
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)&(rt0.c0))))) ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((((NULL)OR(rt0.c3)))AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN UPPER(rt0.c0) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE LIKELIHOOD(rt0.c1, 0.5090921915951199) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((((NULL)OR(rt0.c3)))AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN UPPER(rt0.c0) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE LIKELIHOOD(rt0.c1, 0.5090921915951199) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)&(rt0.c0))))) ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((((NULL)OR(rt0.c3)))AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN UPPER(rt0.c0) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE LIKELIHOOD(rt0.c1, 0.5090921915951199) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((((NULL)OR(rt0.c3)))AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN UPPER(rt0.c0) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE LIKELIHOOD(rt0.c1, 0.5090921915951199) END  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))OR(rt0.c0))) AND (((rt0.c0)&(rt0.c0))))) ORDER BY CASE rt0.c3 COLLATE BINARY  WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN ((((NULL)OR(rt0.c3)))AND(rt0.c3)) WHEN (rt0.c2 IN ()) THEN UPPER(rt0.c0) WHEN ((rt0.c1)<<(rt0.c2)) THEN ((rt0.c1)GLOB(rt0.c1)) ELSE LIKELIHOOD(rt0.c1, 0.5090921915951199) END  NULLS LAST;
SELECT * FROM v0, t1, rt0 NOT INDEXED WHERE (((CAST(v0.c0 AS NUMERIC))/((t1.c1 IN ())))) ORDER BY HEX(rt0.c3) COLLATE NOCASE ASC, LIKELY(rt0.c2 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))/((t1.c1 IN ())))) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY HEX(rt0.c3) COLLATE NOCASE ASC, LIKELY(rt0.c2 COLLATE BINARY)  NULLS FIRST);
SELECT * FROM v0, t1, rt0 NOT INDEXED WHERE (((CAST(v0.c0 AS NUMERIC))/((t1.c1 IN ())))) ORDER BY HEX(rt0.c3) COLLATE NOCASE ASC, LIKELY(rt0.c2 COLLATE BINARY)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS NUMERIC))/((t1.c1 IN ())))) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY HEX(rt0.c3) COLLATE NOCASE ASC, LIKELY(rt0.c2 COLLATE BINARY)  NULLS FIRST);
SELECT * FROM v0, t1, rt0 NOT INDEXED WHERE (((CAST(v0.c0 AS NUMERIC))/((t1.c1 IN ())))) ORDER BY HEX(rt0.c3) COLLATE NOCASE ASC, LIKELY(rt0.c2 COLLATE BINARY)  NULLS FIRST;
SELECT ALL * FROM rt0, vt0 INNER JOIN t1 ON (((((rt0.c3) IS FALSE)))<(((t1.c2 IN (t1.c2, t1.c1))))) WHERE (((MIN(t1.c1, rt0.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (SQLITE_VERSION()))) ORDER BY ((+ (NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((MIN(t1.c1, rt0.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t1 ON (((((rt0.c3) IS FALSE)))<(((t1.c2 IN (t1.c2, t1.c1))))) ORDER BY ((+ (NULL)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 INNER JOIN t1 ON (((((rt0.c3) IS FALSE)))<(((t1.c2 IN (t1.c2, t1.c1))))) WHERE (((MIN(t1.c1, rt0.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (SQLITE_VERSION()))) ORDER BY ((+ (NULL)) IN ()) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((MIN(t1.c1, rt0.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (SQLITE_VERSION()))) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t1 ON (((((rt0.c3) IS FALSE)))<(((t1.c2 IN (t1.c2, t1.c1))))) ORDER BY ((+ (NULL)) IN ()) DESC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 INNER JOIN t1 ON (((((rt0.c3) IS FALSE)))<(((t1.c2 IN (t1.c2, t1.c1))))) WHERE (((MIN(t1.c1, rt0.c0)) BETWEEN (((rt0.c2) ISNULL)) AND (SQLITE_VERSION()))) ORDER BY ((+ (NULL)) IN ()) DESC  NULLS LAST;
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS NUMERIC) WHERE ((NOT (t1.c1 COLLATE RTRIM))) ORDER BY (('-2144059961') NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS NUMERIC) ORDER BY (('-2144059961') NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS NUMERIC) WHERE ((NOT (t1.c1 COLLATE RTRIM))) ORDER BY (('-2144059961') NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS NUMERIC) ORDER BY (('-2144059961') NOTNULL) ASC  NULLS LAST);
SELECT * FROM vt0, t1 LEFT OUTER JOIN rt0 ON CAST(vt0.c0 AS NUMERIC) WHERE ((NOT (t1.c1 COLLATE RTRIM))) ORDER BY (('-2144059961') NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((('')%(t1.c1)) IN ())) ORDER BY IFNULL(t1.c0, ((t1.c0) BETWEEN (t1.c1) AND (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')%(t1.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0, t1 ORDER BY IFNULL(t1.c0, ((t1.c0) BETWEEN (t1.c1) AND (vt0.c0))) ASC);
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((('')%(t1.c1)) IN ())) ORDER BY IFNULL(t1.c0, ((t1.c0) BETWEEN (t1.c1) AND (vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((('')%(t1.c1)) IN ())) IS TRUE)  as count FROM rt0, v0, vt0, t1 ORDER BY IFNULL(t1.c0, ((t1.c0) BETWEEN (t1.c1) AND (vt0.c0))) ASC);
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((('')%(t1.c1)) IN ())) ORDER BY IFNULL(t1.c0, ((t1.c0) BETWEEN (t1.c1) AND (vt0.c0))) ASC;
SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (t1.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN '-1976262291' WHEN (((rt0.c2, '''tFx~|', rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c3, 0.1579616581355595, rt0.c0, 0.08047206802954932))) THEN rt0.c1 WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN '-1976262291' WHEN (((rt0.c2, '''tFx~|', rt0.c1, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c3, 0.1579616581355595, rt0.c0, 0.08047206802954932))) THEN rt0.c1 WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN '-1976262291' WHEN (((rt0.c2, '''tFx~|', rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c3, 0.1579616581355595, rt0.c0, 0.08047206802954932))) THEN rt0.c1 WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN '-1976262291' WHEN (((rt0.c2, '''tFx~|', rt0.c1, rt0.c2, rt0.c1))!=((rt0.c2, rt0.c3, 0.1579616581355595, rt0.c0, 0.08047206802954932))) THEN rt0.c1 WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) THEN '-1976262291' WHEN (((rt0.c2, '''tFx~|', rt0.c1, rt0.c2, rt0.c1))<>((rt0.c2, rt0.c3, 0.1579616581355595, rt0.c0, 0.08047206802954932))) THEN rt0.c1 WHEN CAST(rt0.c0 AS BLOB) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) END);
SELECT * FROM v0, t1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, t1, rt0, vt0);
SELECT * FROM v0, t1, rt0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, t1, rt0, vt0);
SELECT * FROM v0, t1, rt0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, v0, t1 FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((- (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, t1 FULL OUTER JOIN vt0 ON rt0.c3);
SELECT ALL * FROM rt0, v0, t1 FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((- (rt0.c1))) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c1))) NOTNULL)) IS TRUE)  as count FROM rt0, v0, t1 FULL OUTER JOIN vt0 ON rt0.c3);
SELECT ALL * FROM rt0, v0, t1 FULL OUTER JOIN vt0 ON rt0.c3 WHERE ((((- (rt0.c1))) NOTNULL));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((NULL) BETWEEN (NULL) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (NULL) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((NULL) BETWEEN (NULL) AND ((rt0.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((NULL) BETWEEN (NULL) AND ((rt0.c2 IN ())))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE (((NULL) BETWEEN (NULL) AND ((rt0.c2 IN ()))));
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON LAST_INSERT_ROWID() WHERE ((((rt0.c0 IN (t1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON LAST_INSERT_ROWID());
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON LAST_INSERT_ROWID() WHERE ((((rt0.c0 IN (t1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0 IN (t1.c2))) IS FALSE)) IS TRUE)  as count FROM rt0, vt0 CROSS JOIN t1 ON LAST_INSERT_ROWID());
SELECT ALL * FROM rt0, vt0 CROSS JOIN t1 ON LAST_INSERT_ROWID() WHERE ((((rt0.c0 IN (t1.c2))) IS FALSE));
SELECT ALL * FROM rt0, v0, t1 WHERE ((+ (CASE WHEN 0.43243046910747185 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN 0.43243046910747185 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT ALL * FROM rt0, v0, t1 WHERE ((+ (CASE WHEN 0.43243046910747185 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT SUM(count) FROM (SELECT (((+ (CASE WHEN 0.43243046910747185 THEN rt0.c0 ELSE rt0.c1 END))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT ALL * FROM rt0, v0, t1 WHERE ((+ (CASE WHEN 0.43243046910747185 THEN rt0.c0 ELSE rt0.c1 END)));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, rt0 WHERE (0.46399803908986514) ORDER BY CAST(((rt0.c0)=(rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.46399803908986514) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c0)==(rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (0.46399803908986514) ORDER BY CAST(((rt0.c0)=(rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.46399803908986514) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c0)==(rt0.c2)) AS INTEGER)  NULLS LAST);
SELECT ALL * FROM vt0, rt0 WHERE (0.46399803908986514) ORDER BY CAST(((rt0.c0)=(rt0.c2)) AS INTEGER)  NULLS LAST;
SELECT * FROM vt0, rt0, t1 WHERE (x'') ORDER BY ((t1.c0 COLLATE NOCASE)-(((NULL) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((t1.c0 COLLATE NOCASE)-(((NULL) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0, rt0, t1 WHERE (x'') ORDER BY ((t1.c0 COLLATE NOCASE)-(((NULL) IS TRUE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY ((t1.c0 COLLATE NOCASE)-(((NULL) IS TRUE)))  NULLS LAST);
SELECT * FROM vt0, rt0, t1 WHERE (x'') ORDER BY ((t1.c0 COLLATE NOCASE)-(((NULL) IS TRUE)))  NULLS LAST;
SELECT * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)==(rt0.c2)) WHEN x'' COLLATE RTRIM THEN ((rt0.c2)AND(rt0.c3)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN (vt0.c0 IN (rt0.c3, rt0.c2, vt0.c0)) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c2, rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)=(rt0.c2)) WHEN x'' COLLATE RTRIM THEN ((rt0.c2)AND(rt0.c3)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN (vt0.c0 IN (rt0.c3, rt0.c2, vt0.c0)) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c2, rt0.c3) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)==(rt0.c2)) WHEN x'' COLLATE RTRIM THEN ((rt0.c2)AND(rt0.c3)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN (vt0.c0 IN (rt0.c3, rt0.c2, vt0.c0)) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c2, rt0.c3) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)=(rt0.c2)) WHEN x'' COLLATE RTRIM THEN ((rt0.c2)AND(rt0.c3)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN (vt0.c0 IN (rt0.c3, rt0.c2, vt0.c0)) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c2, rt0.c3) END) IS TRUE)  as count FROM vt0, rt0);
SELECT * FROM vt0, rt0 WHERE (CASE WHEN CAST(rt0.c1 AS TEXT) THEN ((rt0.c2)==(rt0.c2)) WHEN x'' COLLATE RTRIM THEN ((rt0.c2)AND(rt0.c3)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3)) THEN (vt0.c0 IN (rt0.c3, rt0.c2, vt0.c0)) ELSE COALESCE(DISTINCT rt0.c1, rt0.c2, rt0.c2, rt0.c3) END);
SELECT ALL * FROM t1 WHERE ((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c2, t1.c1)) AND ((t1.c0, t1.c0, t1.c2))))OR((+ (t1.c2))))) ORDER BY ((((CASE WHEN t1.c0 THEN t1.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)OR(json_extract(t1.c0, t1.c0, t1.c1, t1.c0))))OR((~ (t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c2, t1.c1)) AND ((t1.c0, t1.c0, t1.c2))))OR((+ (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((CASE WHEN t1.c0 THEN t1.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)OR(json_extract(t1.c0, t1.c0, t1.c1, t1.c0))))OR((~ (t1.c1))))  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c2, t1.c1)) AND ((t1.c0, t1.c0, t1.c2))))OR((+ (t1.c2))))) ORDER BY ((((CASE WHEN t1.c0 THEN t1.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)OR(json_extract(t1.c0, t1.c0, t1.c1, t1.c0))))OR((~ (t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2, t1.c0, t1.c0)) BETWEEN ((t1.c0, t1.c2, t1.c1)) AND ((t1.c0, t1.c0, t1.c2))))OR((+ (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((CASE WHEN t1.c0 THEN t1.c2 WHEN x'' THEN t1.c0 WHEN t1.c0 THEN t1.c2 ELSE t1.c2 END)OR(json_extract(t1.c0, t1.c0, t1.c1, t1.c0))))OR((~ (t1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CAST(((v0.c0) BETWEEN (t1.c2) AND (t1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (t1.c2) AND (t1.c2)) AS TEXT)) IS TRUE)  as count FROM t1, vt0, v0);
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CAST(((v0.c0) BETWEEN (t1.c2) AND (t1.c2)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((v0.c0) BETWEEN (t1.c2) AND (t1.c2)) AS TEXT)) IS TRUE)  as count FROM t1, vt0, v0);
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CAST(((v0.c0) BETWEEN (t1.c2) AND (t1.c2)) AS TEXT));
SELECT * FROM t1, vt0, v0, rt0 WHERE ((('-549953206')%(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('-549953206')%(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT * FROM t1, vt0, v0, rt0 WHERE ((('-549953206')%(rt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((('-549953206')%(rt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, v0, rt0);
SELECT * FROM t1, vt0, v0, rt0 WHERE ((('-549953206')%(rt0.c0)) COLLATE NOCASE);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0)))||((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)-(v0.c0)))||((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0)))||((~ (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)-(v0.c0)))||((~ (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0)-(v0.c0)))||((~ (v0.c0)))));
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(v0.c0 AS REAL) COLLATE NOCASE) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(v0.c0 AS REAL) COLLATE NOCASE) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 AS REAL) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY v0.c0 ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, t1 WHERE (CAST(v0.c0 AS REAL) COLLATE NOCASE) ORDER BY v0.c0 ASC  NULLS LAST;
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE ((~ (((rt0.c0)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE ((~ (((rt0.c0)>>(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((~ (((rt0.c0)>>(rt0.c0))))) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL * FROM vt0, t1, rt0, v0 WHERE ((~ (((rt0.c0)>>(rt0.c0)))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((NULL)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((NULL)))) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((NULL)))) AND (NULL)));
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((NULL)))) AND (NULL))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END) BETWEEN ((((rt0.c0))<=((NULL)))) AND (NULL)));
SELECT COUNT(*) FROM rt0, t1 WHERE (((((0.8313083132662293)+(1.23696121E8))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8313083132662293)+(1.23696121E8))) ISNULL)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((0.8313083132662293)+(1.23696121E8))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((0.8313083132662293)+(1.23696121E8))) ISNULL)) IS TRUE)  as count FROM rt0, t1);
SELECT COUNT(*) FROM rt0, t1 WHERE (((((0.8313083132662293)+(1.23696121E8))) ISNULL));
SELECT ALL * FROM t1, vt0 WHERE (((((0x7e4a0b2b) NOTNULL)) NOT BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c2))) AND (((t1.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0x7e4a0b2b) NOTNULL)) NOT BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c2))) AND (((t1.c2)+(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((0x7e4a0b2b) NOTNULL)) NOT BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c2))) AND (((t1.c2)+(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((0x7e4a0b2b) NOTNULL)) NOT BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c2))) AND (((t1.c2)+(vt0.c0))))) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (((((0x7e4a0b2b) NOTNULL)) NOT BETWEEN (((((t1.c0)OR(t1.c0)))OR(t1.c2))) AND (((t1.c2)+(vt0.c0)))));
SELECT * FROM vt0, v0, t1, rt0 WHERE ((+ ((~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (t1.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT * FROM vt0, v0, t1, rt0 WHERE ((+ ((~ (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((~ (t1.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT * FROM vt0, v0, t1, rt0 WHERE ((+ ((~ (t1.c0)))));
SELECT ALL * FROM vt0 NOT INDEXED, v0, t1 WHERE ((((x'' IN (vt0.c0)))*(x'd61b')));
SELECT SUM(count) FROM (SELECT (((((x'' IN (vt0.c0)))*(x'd61b'))) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL * FROM vt0 NOT INDEXED, v0, t1 WHERE ((((x'' IN (vt0.c0)))*(x'd61b')));
SELECT SUM(count) FROM (SELECT (((((x'' IN (vt0.c0)))*(x'd61b'))) IS TRUE)  as count FROM vt0, v0, t1);
SELECT ALL * FROM vt0 NOT INDEXED, v0, t1 WHERE ((((x'' IN (vt0.c0)))*(x'd61b')));
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t1, rt0, v0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (NOT (0x37ca0082)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN (NOT (0x37ca0082)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, v0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (NOT (0x37ca0082)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) IS TRUE) THEN (NOT (0x37ca0082)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, v0 WHERE (CASE WHEN ((vt0.c0) IS TRUE) THEN (NOT (0x37ca0082)) ELSE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) END);
SELECT COUNT(*) FROM t1 WHERE (((UPPER(0.7749423516633414)) BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(0.7749423516633414)) BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((UPPER(0.7749423516633414)) BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(0.7749423516633414)) BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (t1.c2))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (((UPPER(0.7749423516633414)) BETWEEN (((t1.c1) BETWEEN (t1.c0) AND (t1.c1))) AND ((NOT (t1.c2)))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))) IS TRUE)) ORDER BY CASE t1.c0  WHEN t1.c2 THEN '1382934090' END, t1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE t1.c0  WHEN t1.c2 THEN '1382934090' END, t1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))) IS TRUE)) ORDER BY CASE t1.c0  WHEN t1.c2 THEN '1382934090' END, t1.c2 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))) IS TRUE)) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE t1.c0  WHEN t1.c2 THEN '1382934090' END, t1.c2 DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((((t1.c0) NOT BETWEEN (t1.c2) AND (t1.c0))) IS TRUE)) ORDER BY CASE t1.c0  WHEN t1.c2 THEN '1382934090' END, t1.c2 DESC  NULLS FIRST;
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))) AND ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))) ORDER BY ((((rt0.c0) NOT BETWEEN ('''9') AND (rt0.c3)))<(json_array_length(rt0.c0))) ASC, ((-5.49953206E8)*((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))) AND ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN ('''9') AND (rt0.c3)))<(json_array_length(rt0.c0))) ASC, ((-5.49953206E8)*((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3))))) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))) AND ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))) ORDER BY ((((rt0.c0) NOT BETWEEN ('''9') AND (rt0.c3)))<(json_array_length(rt0.c0))) ASC, ((-5.49953206E8)*((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3))))) ASC;
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))) AND ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0 ORDER BY ((((rt0.c0) NOT BETWEEN ('''9') AND (rt0.c3)))<(json_array_length(rt0.c0))) ASC, ((-5.49953206E8)*((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3))))) ASC);
SELECT * FROM rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))) AND ((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))))) ORDER BY ((((rt0.c0) NOT BETWEEN ('''9') AND (rt0.c3)))<(json_array_length(rt0.c0))) ASC, ((-5.49953206E8)*((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((NULL, rt0.c3, rt0.c2)) AND ((rt0.c1, rt0.c2, rt0.c3))))) ASC;
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(t1.c2, t1.c0))>=(CAST('-931042074' AS INTEGER)))) ORDER BY ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0, 0.20217305065569524)) AND ((t1.c0, '-143759214', t1.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(t1.c2, t1.c0))>=(CAST('-931042074' AS INTEGER)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0, 0.20217305065569524)) AND ((t1.c0, '-143759214', t1.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(t1.c2, t1.c0))>=(CAST('-931042074' AS INTEGER)))) ORDER BY ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0, 0.20217305065569524)) AND ((t1.c0, '-143759214', t1.c0))) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((TRIM(t1.c2, t1.c0))>=(CAST('-931042074' AS INTEGER)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0, 0.20217305065569524)) AND ((t1.c0, '-143759214', t1.c0))) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1 WHERE (((TRIM(t1.c2, t1.c0))>=(CAST('-931042074' AS INTEGER)))) ORDER BY ((((t1.c0, t1.c0, t1.c1)) BETWEEN ((t1.c2, t1.c0, 0.20217305065569524)) AND ((t1.c0, '-143759214', t1.c0))) IN ()) ASC  NULLS LAST;
SELECT * FROM t1, rt0 WHERE ((((t1.c0 IN ()))-(CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT NULL) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) BETWEEN (t1.c2) AND (rt0.c2))) AND (CASE t1.c0  WHEN t1.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))-(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOT NULL) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) BETWEEN (t1.c2) AND (rt0.c2))) AND (CASE t1.c0  WHEN t1.c2 THEN rt0.c1 END)));
SELECT * FROM t1, rt0 WHERE ((((t1.c0 IN ()))-(CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT NULL) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) BETWEEN (t1.c2) AND (rt0.c2))) AND (CASE t1.c0  WHEN t1.c2 THEN rt0.c1 END));
SELECT SUM(count) FROM (SELECT (((((t1.c0 IN ()))-(CASE WHEN rt0.c0 THEN rt0.c1 END))) IS TRUE)  as count FROM t1, rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOT NULL) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) BETWEEN (t1.c2) AND (rt0.c2))) AND (CASE t1.c0  WHEN t1.c2 THEN rt0.c1 END)));
SELECT * FROM t1, rt0 WHERE ((((t1.c0 IN ()))-(CASE WHEN rt0.c0 THEN rt0.c1 END))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOT NULL) DESC  NULLS FIRST, ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((rt0.c3) BETWEEN (t1.c2) AND (rt0.c2))) AND (CASE t1.c0  WHEN t1.c2 THEN rt0.c1 END));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(rt0.c2)))AND(rt0.c3))) NOTNULL) FULL OUTER JOIN v0 ON rt0.c0 WHERE (((((t1.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (((NOT (t1.c2))) BETWEEN (((((t1.c0)OR(vt0.c0)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(rt0.c2)))AND(rt0.c3))) NOTNULL) FULL OUTER JOIN v0 ON rt0.c0 ORDER BY (((NOT (t1.c2))) BETWEEN (((((t1.c0)OR(vt0.c0)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(rt0.c2)))AND(rt0.c3))) NOTNULL) FULL OUTER JOIN v0 ON rt0.c0 WHERE (((((t1.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (((NOT (t1.c2))) BETWEEN (((((t1.c0)OR(vt0.c0)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((t1.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(rt0.c2)))AND(rt0.c3))) NOTNULL) FULL OUTER JOIN v0 ON rt0.c0 ORDER BY (((NOT (t1.c2))) BETWEEN (((((t1.c0)OR(vt0.c0)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((((rt0.c1)OR(rt0.c3)))OR(rt0.c2))) LEFT OUTER JOIN t1 ON ((((((t1.c0)AND(rt0.c2)))AND(rt0.c3))) NOTNULL) FULL OUTER JOIN v0 ON rt0.c0 WHERE (((((t1.c2) NOT BETWEEN (rt0.c0) AND (vt0.c0))) IS FALSE)) ORDER BY (((NOT (t1.c2))) BETWEEN (((((t1.c0)OR(vt0.c0)))OR(rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (t1.c0))))  NULLS LAST;
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((0.5091060451019255)>>(((v0.c0) IS TRUE))) CROSS JOIN v0 ON ((((rt0.c1)==(t1.c2))) NOT BETWEEN (t1.c2 COLLATE RTRIM) AND (((t1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.9289563322078911) ISNULL) IN ()) WHERE (CAST((((t1.c2)) NOT BETWEEN ((0xffffffffd0c670fe)) AND ((rt0.c3))) AS NUMERIC)) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c2)) NOT BETWEEN ((0xffffffffd0c670fe)) AND ((rt0.c3))) AS NUMERIC)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((0.5091060451019255)>>(((v0.c0) IS TRUE))) CROSS JOIN v0 ON ((((rt0.c1)=(t1.c2))) NOT BETWEEN (t1.c2 COLLATE RTRIM) AND (((t1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.9289563322078911) ISNULL) IN ()) ORDER BY x'' DESC  NULLS FIRST);
SELECT COUNT(*) FROM t1 FULL OUTER JOIN vt0 ON ((0.5091060451019255)>>(((v0.c0) IS TRUE))) CROSS JOIN v0 ON ((((rt0.c1)==(t1.c2))) NOT BETWEEN (t1.c2 COLLATE RTRIM) AND (((t1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.9289563322078911) ISNULL) IN ()) WHERE (CAST((((t1.c2)) NOT BETWEEN ((0xffffffffd0c670fe)) AND ((rt0.c3))) AS NUMERIC)) ORDER BY x'' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c2)) NOT BETWEEN ((0xffffffffd0c670fe)) AND ((rt0.c3))) AS NUMERIC)) IS TRUE)  as count FROM t1 FULL OUTER JOIN vt0 ON ((0.5091060451019255)>>(((v0.c0) IS TRUE))) CROSS JOIN v0 ON ((((rt0.c1)=(t1.c2))) NOT BETWEEN (t1.c2 COLLATE RTRIM) AND (((t1.c2) BETWEEN (v0.c0) AND (rt0.c1)))) FULL OUTER JOIN rt0 ON (((0.9289563322078911) ISNULL) IN ()) ORDER BY x'' DESC  NULLS FIRST);
SELECT * FROM vt0, t1, v0, rt0 WHERE (((((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))>=(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))>=(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT * FROM vt0, t1, v0, rt0 WHERE (((((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))>=(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))>=(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3))))) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT * FROM vt0, t1, v0, rt0 WHERE (((((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))>=(((((vt0.c0)OR(rt0.c2)))OR(rt0.c3)))));
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (x'') ORDER BY (NOT ((vt0.c0 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c1) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((rt0.c1) NOTNULL)) NOTNULL));
SELECT ALL * FROM vt0, t1, rt0 WHERE ((- (((((rt0.c0)AND(t1.c1)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)AND(t1.c1)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE ((- (((((rt0.c0)AND(t1.c1)))OR(t1.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((rt0.c0)AND(t1.c1)))OR(t1.c0))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL * FROM vt0, t1, rt0 WHERE ((- (((((rt0.c0)AND(t1.c1)))OR(t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 CROSS JOIN t1 ON rt0.c2 COLLATE RTRIM WHERE (rt0.c1) ORDER BY (((~ (rt0.c1))) BETWEEN (((rt0.c2)IS NOT(t1.c2))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0 CROSS JOIN t1 ON rt0.c2 COLLATE RTRIM ORDER BY (((~ (rt0.c1))) BETWEEN (((rt0.c2)IS NOT(t1.c2))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 CROSS JOIN t1 ON rt0.c2 COLLATE RTRIM WHERE (rt0.c1) ORDER BY (((~ (rt0.c1))) BETWEEN (((rt0.c2)IS NOT(t1.c2))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM vt0, rt0, v0 CROSS JOIN t1 ON rt0.c2 COLLATE RTRIM ORDER BY (((~ (rt0.c1))) BETWEEN (((rt0.c2)IS NOT(t1.c2))) AND (((vt0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, rt0, v0 CROSS JOIN t1 ON rt0.c2 COLLATE RTRIM WHERE (rt0.c1) ORDER BY (((~ (rt0.c1))) BETWEEN (((rt0.c2)IS NOT(t1.c2))) AND (((vt0.c0) IS TRUE)));
SELECT ALL * FROM v0, vt0 WHERE (CASE (x'ba34' IN ())  WHEN NULL THEN (vt0.c0 IN (v0.c0)) END) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'ba34' IN ())  WHEN NULL THEN (vt0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CASE (x'ba34' IN ())  WHEN NULL THEN (vt0.c0 IN (v0.c0)) END) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE (x'ba34' IN ())  WHEN NULL THEN (vt0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (CASE (x'ba34' IN ())  WHEN NULL THEN (vt0.c0 IN (v0.c0)) END) ORDER BY ((((((((CAST(vt0.c0 AS TEXT))OR(CAST(vt0.c0 AS NUMERIC))))OR((vt0.c0 IN ()))))OR(CAST(v0.c0 AS TEXT))))AND(v0.c0 COLLATE BINARY))  NULLS FIRST;
SELECT ALL * FROM t1, rt0, v0 WHERE ((~ (LIKELY(t1.c2)))) ORDER BY ((t1.c2)>>(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (LIKELY(t1.c2)))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((t1.c2)>>(rt0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, v0 WHERE ((~ (LIKELY(t1.c2)))) ORDER BY ((t1.c2)>>(rt0.c2)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (LIKELY(t1.c2)))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((t1.c2)>>(rt0.c2)) ASC  NULLS FIRST);
SELECT ALL * FROM t1, rt0, v0 WHERE ((~ (LIKELY(t1.c2)))) ORDER BY ((t1.c2)>>(rt0.c2)) ASC  NULLS FIRST;
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN (((vt0.c0, '1764986183', vt0.c0))<=((v0.c0, NULL, v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE NOCASE THEN (((vt0.c0, '1764986183', vt0.c0))<=((v0.c0, NULL, v0.c0))) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN (((vt0.c0, '1764986183', vt0.c0))<=((v0.c0, NULL, v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c3 COLLATE NOCASE THEN (((vt0.c0, '1764986183', vt0.c0))<=((v0.c0, NULL, v0.c0))) ELSE v0.c0 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN rt0 ON ((rt0.c0 IN ()) IN ()) WHERE (CASE WHEN rt0.c3 COLLATE NOCASE THEN (((vt0.c0, '1764986183', vt0.c0))<=((v0.c0, NULL, v0.c0))) ELSE v0.c0 COLLATE RTRIM END);
SELECT ALL * FROM v0 NOT INDEXED FULL OUTER JOIN t1 ON '-1937918120' INNER JOIN rt0 ON (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END))>=((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 ELSE v0.c0 END))) WHERE ((SQLITE_VERSION() IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_VERSION() IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON '-1937918120' INNER JOIN rt0 ON (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END))>=((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 ELSE v0.c0 END))));
SELECT ALL * FROM v0 NOT INDEXED FULL OUTER JOIN t1 ON '-1937918120' INNER JOIN rt0 ON (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END))>=((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 ELSE v0.c0 END))) WHERE ((SQLITE_VERSION() IN ()));
SELECT SUM(count) FROM (SELECT ALL (((SQLITE_VERSION() IN ())) IS TRUE)  as count FROM v0 FULL OUTER JOIN t1 ON '-1937918120' INNER JOIN rt0 ON (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END))>=((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 ELSE v0.c0 END))));
SELECT ALL * FROM v0 NOT INDEXED FULL OUTER JOIN t1 ON '-1937918120' INNER JOIN rt0 ON (((CASE WHEN t1.c1 THEN t1.c1 ELSE t1.c2 END))>=((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN t1.c1 THEN rt0.c0 ELSE v0.c0 END))) WHERE ((SQLITE_VERSION() IN ()));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON UNICODE(CASE WHEN rt0.c2 THEN rt0.c3 END) WHERE (((((x'74f4') NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE NULL  WHEN rt0.c2 THEN 'F/U繮g' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'74f4') NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE NULL  WHEN rt0.c2 THEN 'F/U繮g' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON UNICODE(CASE WHEN rt0.c2 THEN rt0.c3 END));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON UNICODE(CASE WHEN rt0.c2 THEN rt0.c3 END) WHERE (((((x'74f4') NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE NULL  WHEN rt0.c2 THEN 'F/U繮g' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'74f4') NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE NULL  WHEN rt0.c2 THEN 'F/U繮g' ELSE vt0.c0 END))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON UNICODE(CASE WHEN rt0.c2 THEN rt0.c3 END));
SELECT ALL * FROM rt0 LEFT OUTER JOIN vt0 ON UNICODE(CASE WHEN rt0.c2 THEN rt0.c3 END) WHERE (((((x'74f4') NOT BETWEEN (rt0.c2) AND (rt0.c2)))OR(CASE NULL  WHEN rt0.c2 THEN 'F/U繮g' ELSE vt0.c0 END)));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)%(vt0.c0)))LIKE(vt0.c0 COLLATE NOCASE))) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (DATE((t1.c1 IN (v0.c0)), ((((x'')AND(t1.c1)))OR(t1.c0)), CAST(t1.c0 AS TEXT), 0.7423580536040089, v0.c0 COLLATE BINARY)) ORDER BY (((t1.c2)+(t1.c0)) IN ()) DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE((t1.c1 IN (v0.c0)), ((((x'')AND(t1.c1)))OR(t1.c0)), CAST(t1.c0 AS TEXT), 0.7423580536040089, v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, v0 ORDER BY (((t1.c2)+(t1.c0)) IN ()) DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (DATE((t1.c1 IN (v0.c0)), ((((x'')AND(t1.c1)))OR(t1.c0)), CAST(t1.c0 AS TEXT), 0.7423580536040089, v0.c0 COLLATE BINARY)) ORDER BY (((t1.c2)+(t1.c0)) IN ()) DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((DATE((t1.c1 IN (v0.c0)), ((((x'')AND(t1.c1)))OR(t1.c0)), CAST(t1.c0 AS TEXT), 0.7423580536040089, v0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0 NOT INDEXED, t1, v0 ORDER BY (((t1.c2)+(t1.c0)) IN ()) DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1, v0 WHERE (DATE((t1.c1 IN (v0.c0)), ((((x'')AND(t1.c1)))OR(t1.c0)), CAST(t1.c0 AS TEXT), 0.7423580536040089, v0.c0 COLLATE BINARY)) ORDER BY (((t1.c2)+(t1.c0)) IN ()) DESC  NULLS FIRST, vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE IFNULL(t1.c1, t1.c1)  WHEN (t1.c2 IN ()) THEN CAST(rt0.c1 AS REAL) ELSE UPPER(DISTINCT t1.c2) END DESC;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE IFNULL(t1.c1, t1.c1)  WHEN (t1.c2 IN ()) THEN CAST(rt0.c1 AS REAL) ELSE UPPER(DISTINCT t1.c2) END DESC);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE IFNULL(t1.c1, t1.c1)  WHEN (t1.c2 IN ()) THEN CAST(rt0.c1 AS REAL) ELSE UPPER(DISTINCT t1.c2) END DESC;
SELECT SUM(count) FROM (SELECT (((t1.c0 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt0, vt0, t1 ORDER BY CASE IFNULL(t1.c1, t1.c1)  WHEN (t1.c2 IN ()) THEN CAST(rt0.c1 AS REAL) ELSE UPPER(DISTINCT t1.c2) END DESC);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE ((t1.c0 IN ()) COLLATE NOCASE) ORDER BY CASE IFNULL(t1.c1, t1.c1)  WHEN (t1.c2 IN ()) THEN CAST(rt0.c1 AS REAL) ELSE UPPER(DISTINCT t1.c2) END DESC;
SELECT * FROM rt0, vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)), (- (rt0.c2)), ((vt0.c0) BETWEEN (x'40ea') AND (v0.c0)))) AND ((((NULL)*(rt0.c1)), (rt0.c3 IN (rt0.c0)), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)), (- (rt0.c2)), ((vt0.c0) BETWEEN (x'40ea') AND (v0.c0)))) AND ((((NULL)*(rt0.c1)), (rt0.c3 IN (rt0.c0)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)), (- (rt0.c2)), ((vt0.c0) BETWEEN (x'40ea') AND (v0.c0)))) AND ((((NULL)*(rt0.c1)), (rt0.c3 IN (rt0.c0)), (rt0.c1 IN ())))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)), (- (rt0.c2)), ((vt0.c0) BETWEEN (x'40ea') AND (v0.c0)))) AND ((((NULL)*(rt0.c1)), (rt0.c3 IN (rt0.c0)), (rt0.c1 IN ()))))) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT * FROM rt0, vt0, v0 WHERE ((((vt0.c0, vt0.c0, v0.c0)) BETWEEN ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c2)))OR(vt0.c0)), (- (rt0.c2)), ((vt0.c0) BETWEEN (x'40ea') AND (v0.c0)))) AND ((((NULL)*(rt0.c1)), (rt0.c3 IN (rt0.c0)), (rt0.c1 IN ())))));
SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))>=((((((t1.c0)AND(t1.c2)))OR(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))>=((((((t1.c0)AND(t1.c2)))OR(t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))>=((((((t1.c0)AND(t1.c2)))OR(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))>=((((((t1.c0)AND(t1.c2)))OR(t1.c0)))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE ((((((t1.c1) NOT BETWEEN (t1.c2) AND (t1.c0))))>=((((((t1.c0)AND(t1.c2)))OR(t1.c0))))));
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (CAST((~ (t1.c2)) AS BLOB)) ORDER BY (~ (json_valid(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c2)) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY (~ (json_valid(x'')))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (CAST((~ (t1.c2)) AS BLOB)) ORDER BY (~ (json_valid(x'')))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((~ (t1.c2)) AS BLOB)) IS TRUE)  as count FROM v0, rt0, vt0, t1 ORDER BY (~ (json_valid(x'')))  NULLS LAST);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE (CAST((~ (t1.c2)) AS BLOB)) ORDER BY (~ (json_valid(x'')))  NULLS LAST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c2)) AND ((NULL))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)) BETWEEN ((t1.c2)) AND ((NULL))) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c2)) AND ((NULL))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)) BETWEEN ((t1.c2)) AND ((NULL))) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((((t1.c0)) BETWEEN ((t1.c2)) AND ((NULL))) IN ()));
SELECT ALL * FROM t1, v0, rt0 WHERE ((((rt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0);
SELECT ALL * FROM t1, v0, rt0 WHERE ((((rt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((rt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0);
SELECT ALL * FROM t1, v0, rt0 WHERE ((((rt0.c1 IN ())) IS TRUE));
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE vt0.c0  WHEN t1.c1 THEN x'8b25' END)>>(((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t1.c1 THEN x'8b25' END)>>(((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE vt0.c0  WHEN t1.c1 THEN x'8b25' END)>>(((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(NULL)))));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN t1.c1 THEN x'8b25' END)>>(((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(NULL))))) IS TRUE)  as count FROM vt0, t1);
SELECT ALL COUNT(*) FROM vt0, t1 WHERE (((CASE vt0.c0  WHEN t1.c1 THEN x'8b25' END)>>(((((((((t1.c0)OR(t1.c1)))OR(t1.c2)))AND(t1.c0)))AND(NULL)))));
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)+(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)+(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)+(v0.c0)))) DESC);
SELECT ALL * FROM v0 WHERE (CAST((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0))) AS INTEGER)) ORDER BY (((NOT (v0.c0))) BETWEEN (((v0.c0) ISNULL)) AND (((v0.c0)+(v0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((HEX(DISTINCT vt0.c0))%(vt0.c0 COLLATE RTRIM)) WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CAST(((((t1.c1)AND(0.17901046195371306)))OR(t1.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((HEX(DISTINCT vt0.c0))%(vt0.c0 COLLATE RTRIM)) ORDER BY CAST(((((t1.c1)AND(0.17901046195371306)))OR(t1.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((HEX(DISTINCT vt0.c0))%(vt0.c0 COLLATE RTRIM)) WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CAST(((((t1.c1)AND(0.17901046195371306)))OR(t1.c2)) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(t1.c0 COLLATE NOCASE AS INTEGER)) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON ((HEX(DISTINCT vt0.c0))%(vt0.c0 COLLATE RTRIM)) ORDER BY CAST(((((t1.c1)AND(0.17901046195371306)))OR(t1.c2)) AS INTEGER)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 CROSS JOIN t1 ON ((HEX(DISTINCT vt0.c0))%(vt0.c0 COLLATE RTRIM)) WHERE (CAST(t1.c0 COLLATE NOCASE AS INTEGER)) ORDER BY CAST(((((t1.c1)AND(0.17901046195371306)))OR(t1.c2)) AS INTEGER)  NULLS FIRST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)>>(t1.c0)) IN ())) ORDER BY (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)>>(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)>>(t1.c0)) IN ())) ORDER BY (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2)>>(t1.c0)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c2)>>(t1.c0)) IN ())) ORDER BY (((((t1.c0)AND(t1.c1)))AND(t1.c0)) IN ()) ASC;
SELECT * FROM v0, t1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c2 THEN x'b86e' WHEN v0.c0 THEN '-526590139' ELSE rt0.c1 END) AND (((((t1.c2)AND(rt0.c0)))OR(rt0.c0)))) INNER JOIN vt0 ON ((((t1.c0)OR(('' IN (t1.c1)))))OR(((rt0.c2)IS(rt0.c1)))) WHERE (((LIKELIHOOD(rt0.c3, 0.6011844706163973))&(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c3, 0.6011844706163973))&(rt0.c2))) IS TRUE)  as count FROM v0, t1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c2 THEN x'b86e' WHEN v0.c0 THEN '-526590139' ELSE rt0.c1 END) AND (((((t1.c2)AND(rt0.c0)))OR(rt0.c0)))) INNER JOIN vt0 ON ((((t1.c0)OR(('' IN (t1.c1)))))OR(((rt0.c2)IS(rt0.c1)))));
SELECT * FROM v0, t1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c2 THEN x'b86e' WHEN v0.c0 THEN '-526590139' ELSE rt0.c1 END) AND (((((t1.c2)AND(rt0.c0)))OR(rt0.c0)))) INNER JOIN vt0 ON ((((t1.c0)OR(('' IN (t1.c1)))))OR(((rt0.c2)IS(rt0.c1)))) WHERE (((LIKELIHOOD(rt0.c3, 0.6011844706163973))&(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((LIKELIHOOD(rt0.c3, 0.6011844706163973))&(rt0.c2))) IS TRUE)  as count FROM v0, t1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c2 THEN x'b86e' WHEN v0.c0 THEN '-526590139' ELSE rt0.c1 END) AND (((((t1.c2)AND(rt0.c0)))OR(rt0.c0)))) INNER JOIN vt0 ON ((((t1.c0)OR(('' IN (t1.c1)))))OR(((rt0.c2)IS(rt0.c1)))));
SELECT * FROM v0, t1 INNER JOIN rt0 ON ((((rt0.c3)*(rt0.c0))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c2 WHEN t1.c2 THEN x'b86e' WHEN v0.c0 THEN '-526590139' ELSE rt0.c1 END) AND (((((t1.c2)AND(rt0.c0)))OR(rt0.c0)))) INNER JOIN vt0 ON ((((t1.c0)OR(('' IN (t1.c1)))))OR(((rt0.c2)IS(rt0.c1)))) WHERE (((LIKELIHOOD(rt0.c3, 0.6011844706163973))&(rt0.c2)));
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE ((NULL IN ()));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN ())) IS TRUE)  as count FROM v0, rt0, vt0, t1);
SELECT COUNT(*) FROM v0, rt0, vt0, t1 WHERE ((NULL IN ()));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN ())) ORDER BY (((t1.c0 IN (t1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)||(t1.c1)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN (t1.c2))) IS FALSE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN ())) ORDER BY (((t1.c0 IN (t1.c2))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)||(t1.c1)) IN ())) IS TRUE)  as count FROM t1 ORDER BY (((t1.c0 IN (t1.c2))) IS FALSE));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)||(t1.c1)) IN ())) ORDER BY (((t1.c0 IN (t1.c2))) IS FALSE);
SELECT ALL * FROM vt0, v0, t1 WHERE ((+ (x''))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN x'6c71' THEN ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)) ELSE ((t1.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, t1 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN x'6c71' THEN ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)) ELSE ((t1.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) END ASC);
SELECT ALL * FROM vt0, v0, t1 WHERE ((+ (x''))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN x'6c71' THEN ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)) ELSE ((t1.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((+ (x''))) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, t1 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN x'6c71' THEN ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)) ELSE ((t1.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) END ASC);
SELECT ALL * FROM vt0, v0, t1 WHERE ((+ (x''))) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN x'6c71' THEN ((vt0.c0) BETWEEN (t1.c0) AND (v0.c0)) ELSE ((t1.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) END ASC;
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY END) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CAST(x'' AS TEXT) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) IS FALSE)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CAST(x'' AS TEXT) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC);
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY END) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CAST(x'' AS TEXT) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) IS FALSE)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY END) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CAST(x'' AS TEXT) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC);
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS FALSE)  WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN v0.c0 COLLATE BINARY END) ORDER BY CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN CAST(x'' AS TEXT) ELSE ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) END ASC;
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (highlight(rt0.c3, rt0.c1, rt0.c1, rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((highlight(rt0.c3, rt0.c1, rt0.c1, rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (highlight(rt0.c3, rt0.c1, rt0.c1, rt0.c1) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((highlight(rt0.c3, rt0.c1, rt0.c1, rt0.c1) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT ALL * FROM v0, vt0, rt0, t1 WHERE (highlight(rt0.c3, rt0.c1, rt0.c1, rt0.c1) COLLATE NOCASE);
SELECT ALL * FROM v0, t1 WHERE (((('-1021799135')) BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((CAST(v0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1021799135')) BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((CAST(v0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((('-1021799135')) BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((CAST(v0.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL ((((('-1021799135')) BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((CAST(v0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((('-1021799135')) BETWEEN ((t1.c2 COLLATE RTRIM)) AND ((CAST(v0.c0 AS NUMERIC)))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT (v0.c0 IN (NULL)), ((((v0.c0)AND(v0.c0)))OR(rt0.c3))) WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.5508241493890565) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT v0.c0, 0.5508241493890565) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT (v0.c0 IN (NULL)), ((((v0.c0)AND(v0.c0)))OR(rt0.c3))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT (v0.c0 IN (NULL)), ((((v0.c0)AND(v0.c0)))OR(rt0.c3))) WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.5508241493890565) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(LIKELIHOOD(DISTINCT v0.c0, 0.5508241493890565) AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT (v0.c0 IN (NULL)), ((((v0.c0)AND(v0.c0)))OR(rt0.c3))));
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON TRIM(DISTINCT (v0.c0 IN (NULL)), ((((v0.c0)AND(v0.c0)))OR(rt0.c3))) WHERE (CAST(LIKELIHOOD(DISTINCT v0.c0, 0.5508241493890565) AS NUMERIC));
SELECT * FROM t1, v0 WHERE ((((CASE WHEN t1.c2 THEN t1.c2 END))>=((((t1.c0) IS TRUE))))) ORDER BY CASE WHEN t1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c2 THEN t1.c2 END))>=((((t1.c0) IS TRUE))))) IS TRUE)  as count FROM t1, v0 ORDER BY CASE WHEN t1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END DESC  NULLS LAST);
SELECT * FROM t1, v0 WHERE ((((CASE WHEN t1.c2 THEN t1.c2 END))>=((((t1.c0) IS TRUE))))) ORDER BY CASE WHEN t1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN t1.c2 THEN t1.c2 END))>=((((t1.c0) IS TRUE))))) IS TRUE)  as count FROM t1, v0 ORDER BY CASE WHEN t1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END DESC  NULLS LAST);
SELECT * FROM t1, v0 WHERE ((((CASE WHEN t1.c2 THEN t1.c2 END))>=((((t1.c0) IS TRUE))))) ORDER BY CASE WHEN t1.c0 COLLATE BINARY THEN (v0.c0 IN ()) END DESC  NULLS LAST;
SELECT * FROM t1 INNER JOIN vt0 ON CAST((vt0.c0 IN ()) AS INTEGER) INNER JOIN v0 ON '-826677533' WHERE (CASE ((vt0.c0) IS TRUE)  WHEN x'' COLLATE NOCASE THEN ((x'a52f') NOT BETWEEN (v0.c0) AND (t1.c2)) END) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN x'' COLLATE NOCASE THEN ((x'a52f') NOT BETWEEN (v0.c0) AND (t1.c2)) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CAST((vt0.c0 IN ()) AS INTEGER) INNER JOIN v0 ON '-826677533' ORDER BY v0.c0);
SELECT * FROM t1 INNER JOIN vt0 ON CAST((vt0.c0 IN ()) AS INTEGER) INNER JOIN v0 ON '-826677533' WHERE (CASE ((vt0.c0) IS TRUE)  WHEN x'' COLLATE NOCASE THEN ((x'a52f') NOT BETWEEN (v0.c0) AND (t1.c2)) END) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) IS TRUE)  WHEN x'' COLLATE NOCASE THEN ((x'a52f') NOT BETWEEN (v0.c0) AND (t1.c2)) END) IS TRUE)  as count FROM t1 INNER JOIN vt0 ON CAST((vt0.c0 IN ()) AS INTEGER) INNER JOIN v0 ON '-826677533' ORDER BY v0.c0);
SELECT * FROM t1 INNER JOIN vt0 ON CAST((vt0.c0 IN ()) AS INTEGER) INNER JOIN v0 ON '-826677533' WHERE (CASE ((vt0.c0) IS TRUE)  WHEN x'' COLLATE NOCASE THEN ((x'a52f') NOT BETWEEN (v0.c0) AND (t1.c2)) END) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM v0 INDEXED BY i92, vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY (((rt0.c0, v0.c0, x'e64b')) NOT BETWEEN (((+ (vt0.c0)), ((((((((rt0.c3)AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND('0.5479254314402955')), x'')) AND (((((rt0.c3))>((rt0.c3))), (rt0.c0 IN ()), ((rt0.c1) NOT BETWEEN (0.9643414500314863) AND (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM v0 INDEXED BY i92, vt0, rt0 ORDER BY (((rt0.c0, v0.c0, x'e64b')) NOT BETWEEN (((+ (vt0.c0)), ((((((((rt0.c3)AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND('0.5479254314402955')), x'')) AND (((((rt0.c3))>((rt0.c3))), (rt0.c0 IN ()), ((rt0.c1) NOT BETWEEN (0.9643414500314863) AND (rt0.c3)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i92, vt0, rt0 WHERE (((CAST(vt0.c0 AS TEXT)) IS TRUE)) ORDER BY (((rt0.c0, v0.c0, x'e64b')) NOT BETWEEN (((+ (vt0.c0)), ((((((((rt0.c3)AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND('0.5479254314402955')), x'')) AND (((((rt0.c3))>((rt0.c3))), (rt0.c0 IN ()), ((rt0.c1) NOT BETWEEN (0.9643414500314863) AND (rt0.c3)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) IS TRUE)) IS TRUE)  as count FROM v0 INDEXED BY i92, vt0, rt0 ORDER BY (((rt0.c0, v0.c0, x'e64b')) NOT BETWEEN (((+ (vt0.c0)), ((((((((rt0.c3)AND(v0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND('0.5479254314402955')), x'')) AND (((((rt0.c3))>((rt0.c3))), (rt0.c0 IN ()), ((rt0.c1) NOT BETWEEN (0.9643414500314863) AND (rt0.c3)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED, v0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c1) IS FALSE), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.9596313112254263)) AND ((CAST(rt0.c1 AS REAL), ((((rt0.c1)AND(rt0.c3)))OR(t1.c2)), CASE t1.c1  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)))) ORDER BY CAST((~ (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c1) IS FALSE), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.9596313112254263)) AND ((CAST(rt0.c1 AS REAL), ((((rt0.c1)AND(rt0.c3)))OR(t1.c2)), CASE t1.c1  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CAST((~ (rt0.c1)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED, v0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c1) IS FALSE), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.9596313112254263)) AND ((CAST(rt0.c1 AS REAL), ((((rt0.c1)AND(rt0.c3)))OR(t1.c2)), CASE t1.c1  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)))) ORDER BY CAST((~ (rt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c1) IS FALSE), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.9596313112254263)) AND ((CAST(rt0.c1 AS REAL), ((((rt0.c1)AND(rt0.c3)))OR(t1.c2)), CASE t1.c1  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)))) IS TRUE)  as count FROM rt0, t1, v0 ORDER BY CAST((~ (rt0.c1)) AS REAL) ASC);
SELECT ALL COUNT(*) FROM rt0, t1 NOT INDEXED, v0 WHERE ((((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((((rt0.c1) IS FALSE), ((((t1.c1)OR(t1.c1)))AND(t1.c0)), 0.9596313112254263)) AND ((CAST(rt0.c1 AS REAL), ((((rt0.c1)AND(rt0.c3)))OR(t1.c2)), CASE t1.c1  WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END)))) ORDER BY CAST((~ (rt0.c1)) AS REAL) ASC;
SELECT ALL * FROM t1, v0, rt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c2 THEN t1.c2 END IN ())) ORDER BY (t1.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c2 THEN t1.c2 END IN ())) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY (t1.c0 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t1, v0, rt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c2 THEN t1.c2 END IN ())) ORDER BY (t1.c0 IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c2 THEN t1.c2 END IN ())) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY (t1.c0 IN ()) DESC  NULLS FIRST);
SELECT ALL * FROM t1, v0, rt0 WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t1.c2 THEN t1.c2 END IN ())) ORDER BY (t1.c0 IN ()) DESC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (+ (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (+ (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (+ (vt0.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) ISNULL)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (+ (vt0.c0)) COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE ((((vt0.c0 IN ())) ISNULL)) ORDER BY (+ (vt0.c0)) COLLATE BINARY DESC;
SELECT * FROM v0, t1 WHERE (((((t1.c0)>(v0.c0)))<=(((t1.c0) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(v0.c0)))<=(((t1.c0) BETWEEN (t1.c2) AND (t1.c1))))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE (((((t1.c0)>(v0.c0)))<=(((t1.c0) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)>(v0.c0)))<=(((t1.c0) BETWEEN (t1.c2) AND (t1.c1))))) IS TRUE)  as count FROM v0, t1);
SELECT * FROM v0, t1 WHERE (((((t1.c0)>(v0.c0)))<=(((t1.c0) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(t1.c1 AS REAL) IN ())) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((CAST(t1.c1 AS REAL) IN ()));
SELECT * FROM vt0, v0, rt0, t1 WHERE ((((((((((~ (rt0.c1)))AND(((vt0.c0)<<(t1.c1)))))AND(v0.c0)))AND(v0.c0)))AND(DATETIME(rt0.c2, t1.c0, rt0.c0, v0.c0, 0.9561772126917933)))) ORDER BY ((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt0.c1)))AND(((vt0.c0)<<(t1.c1)))))AND(v0.c0)))AND(v0.c0)))AND(DATETIME(rt0.c2, t1.c0, rt0.c0, v0.c0, 0.9561772126917933)))) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))) IS FALSE) ASC);
SELECT * FROM vt0, v0, rt0, t1 WHERE ((((((((((~ (rt0.c1)))AND(((vt0.c0)<<(t1.c1)))))AND(v0.c0)))AND(v0.c0)))AND(DATETIME(rt0.c2, t1.c0, rt0.c0, v0.c0, 0.9561772126917933)))) ORDER BY ((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((~ (rt0.c1)))AND(((vt0.c0)<<(t1.c1)))))AND(v0.c0)))AND(v0.c0)))AND(DATETIME(rt0.c2, t1.c0, rt0.c0, v0.c0, 0.9561772126917933)))) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))) IS FALSE) ASC);
SELECT * FROM vt0, v0, rt0, t1 WHERE ((((((((((~ (rt0.c1)))AND(((vt0.c0)<<(t1.c1)))))AND(v0.c0)))AND(v0.c0)))AND(DATETIME(rt0.c2, t1.c0, rt0.c0, v0.c0, 0.9561772126917933)))) ORDER BY ((((((rt0.c3)AND(vt0.c0)))AND(rt0.c3))) IS FALSE) ASC;
SELECT * FROM v0 CROSS JOIN vt0 ON CASE WHEN UNLIKELY(DISTINCT 0.8087088652309418) THEN CASE WHEN '0.9968437010360178' THEN '' ELSE t1.c0 END ELSE (((t1.c2))<>((t1.c0))) END CROSS JOIN t1 ON ((((((((((t1.c2) ISNULL))AND(t1.c2 COLLATE BINARY)))OR(-4.28613112E8)))AND(vt0.c0)))AND(t1.c2 COLLATE RTRIM)) WHERE (((0.6200433039430034)GLOB(CASE t1.c1  WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END))) ORDER BY (((t1.c1)) BETWEEN (((((t1.c2))>((t1.c1))))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.6200433039430034)GLOB(CASE t1.c1  WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN UNLIKELY(DISTINCT 0.8087088652309418) THEN CASE WHEN '0.9968437010360178' THEN '' ELSE t1.c0 END ELSE (((t1.c2))!=((t1.c0))) END CROSS JOIN t1 ON ((((((((((t1.c2) ISNULL))AND(t1.c2 COLLATE BINARY)))OR(-4.28613112E8)))AND(vt0.c0)))AND(t1.c2 COLLATE RTRIM)) ORDER BY (((t1.c1)) BETWEEN (((((t1.c2))>((t1.c1))))) AND ((vt0.c0 COLLATE BINARY))) ASC);
SELECT * FROM v0 CROSS JOIN vt0 ON CASE WHEN UNLIKELY(DISTINCT 0.8087088652309418) THEN CASE WHEN '0.9968437010360178' THEN '' ELSE t1.c0 END ELSE (((t1.c2))<>((t1.c0))) END CROSS JOIN t1 ON ((((((((((t1.c2) ISNULL))AND(t1.c2 COLLATE BINARY)))OR(-4.28613112E8)))AND(vt0.c0)))AND(t1.c2 COLLATE RTRIM)) WHERE (((0.6200433039430034)GLOB(CASE t1.c1  WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END))) ORDER BY (((t1.c1)) BETWEEN (((((t1.c2))>((t1.c1))))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT SUM(count) FROM (SELECT ((((0.6200433039430034)GLOB(CASE t1.c1  WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CASE WHEN UNLIKELY(DISTINCT 0.8087088652309418) THEN CASE WHEN '0.9968437010360178' THEN '' ELSE t1.c0 END ELSE (((t1.c2))!=((t1.c0))) END CROSS JOIN t1 ON ((((((((((t1.c2) ISNULL))AND(t1.c2 COLLATE BINARY)))OR(-4.28613112E8)))AND(vt0.c0)))AND(t1.c2 COLLATE RTRIM)) ORDER BY (((t1.c1)) BETWEEN (((((t1.c2))>((t1.c1))))) AND ((vt0.c0 COLLATE BINARY))) ASC);
SELECT * FROM v0 CROSS JOIN vt0 ON CASE WHEN UNLIKELY(DISTINCT 0.8087088652309418) THEN CASE WHEN '0.9968437010360178' THEN '' ELSE t1.c0 END ELSE (((t1.c2))<>((t1.c0))) END CROSS JOIN t1 ON ((((((((((t1.c2) ISNULL))AND(t1.c2 COLLATE BINARY)))OR(-4.28613112E8)))AND(vt0.c0)))AND(t1.c2 COLLATE RTRIM)) WHERE (((0.6200433039430034)GLOB(CASE t1.c1  WHEN vt0.c0 THEN v0.c0 ELSE t1.c0 END))) ORDER BY (((t1.c1)) BETWEEN (((((t1.c2))>((t1.c1))))) AND ((vt0.c0 COLLATE BINARY))) ASC;
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (CAST((- (t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (CAST((- (t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((- (t1.c0)) AS TEXT)) IS TRUE)  as count FROM t1, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (CAST((- (t1.c0)) AS TEXT));
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON NULL WHERE (CASE WHEN CASE WHEN t1.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY ELSE LIKELY(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t1.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN v0 ON NULL);
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON NULL WHERE (CASE WHEN CASE WHEN t1.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY ELSE LIKELY(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE WHEN t1.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY ELSE LIKELY(vt0.c0) END) IS TRUE)  as count FROM vt0, t1 LEFT OUTER JOIN v0 ON NULL);
SELECT * FROM vt0, t1 LEFT OUTER JOIN v0 ON NULL WHERE (CASE WHEN CASE WHEN t1.c0 THEN v0.c0 END THEN v0.c0 COLLATE BINARY ELSE LIKELY(vt0.c0) END);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (((t1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (((t1.c2 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c2 IN ()) IN ())) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (((t1.c2 IN ()) IN ()));
SELECT COUNT(*) FROM v0, vt0, t1 INNER JOIN rt0 ON ((((((((((rt0.c0)LIKE(t1.c1)))OR(DATETIME(t1.c1, vt0.c0, v0.c0, vt0.c0, rt0.c1))))AND((NOT (v0.c0)))))AND(((rt0.c3) ISNULL))))AND(ABS(x''))) WHERE (LIKELIHOOD(CASE t1.c1  WHEN vt0.c0 THEN rt0.c2 ELSE t1.c2 END, 0.6952196841343022));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE t1.c1  WHEN vt0.c0 THEN rt0.c2 ELSE t1.c2 END, 0.6952196841343022)) IS TRUE)  as count FROM v0, vt0, t1 INNER JOIN rt0 ON ((((((((((rt0.c0)LIKE(t1.c1)))OR(DATETIME(t1.c1, vt0.c0, v0.c0, vt0.c0, rt0.c1))))AND((NOT (v0.c0)))))AND(((rt0.c3) ISNULL))))AND(ABS(x''))));
SELECT COUNT(*) FROM v0, vt0, t1 INNER JOIN rt0 ON ((((((((((rt0.c0)LIKE(t1.c1)))OR(DATETIME(t1.c1, vt0.c0, v0.c0, vt0.c0, rt0.c1))))AND((NOT (v0.c0)))))AND(((rt0.c3) ISNULL))))AND(ABS(x''))) WHERE (LIKELIHOOD(CASE t1.c1  WHEN vt0.c0 THEN rt0.c2 ELSE t1.c2 END, 0.6952196841343022));
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(CASE t1.c1  WHEN vt0.c0 THEN rt0.c2 ELSE t1.c2 END, 0.6952196841343022)) IS TRUE)  as count FROM v0, vt0, t1 INNER JOIN rt0 ON ((((((((((rt0.c0)LIKE(t1.c1)))OR(DATETIME(t1.c1, vt0.c0, v0.c0, vt0.c0, rt0.c1))))AND((NOT (v0.c0)))))AND(((rt0.c3) ISNULL))))AND(ABS(x''))));
SELECT COUNT(*) FROM v0, vt0, t1 INNER JOIN rt0 ON ((((((((((rt0.c0)LIKE(t1.c1)))OR(DATETIME(t1.c1, vt0.c0, v0.c0, vt0.c0, rt0.c1))))AND((NOT (v0.c0)))))AND(((rt0.c3) ISNULL))))AND(ABS(x''))) WHERE (LIKELIHOOD(CASE t1.c1  WHEN vt0.c0 THEN rt0.c2 ELSE t1.c2 END, 0.6952196841343022));
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(((NULL)>(NULL)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS INTEGER))AND(((NULL)>(NULL)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(((NULL)>(NULL)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(v0.c0 AS INTEGER))AND(((NULL)>(NULL)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((CAST(v0.c0 AS INTEGER))AND(((NULL)>(NULL)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (CAST('1415871702' AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)+(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1415871702' AS INTEGER)) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((t1.c1 COLLATE NOCASE)+(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (CAST('1415871702' AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)+(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST('1415871702' AS INTEGER)) IS TRUE)  as count FROM vt0, v0, t1 ORDER BY ((t1.c1 COLLATE NOCASE)+(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, v0, t1 WHERE (CAST('1415871702' AS INTEGER)) ORDER BY ((t1.c1 COLLATE NOCASE)+(((t1.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CAST(((t1.c2) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CAST(((t1.c2) NOT NULL) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c2) NOT NULL) AS TEXT)) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CAST(((t1.c2) NOT NULL) AS TEXT));
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE (((CAST(t1.c2 AS BLOB)) ISNULL)) ORDER BY ((((t1.c2)AND(((((((((((((NULL)AND(rt0.c0)))AND(v0.c0)))AND(-1593797027)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))))OR(((rt0.c1)<<(rt0.c3)))) DESC, (((vt0.c0)) BETWEEN ((t1.c2)) AND ((CAST(NULL AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY ((((t1.c2)AND(((((((((((((NULL)AND(rt0.c0)))AND(v0.c0)))AND(-1593797027)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))))OR(((rt0.c1)<<(rt0.c3)))) DESC, (((vt0.c0)) BETWEEN ((t1.c2)) AND ((CAST(NULL AS NUMERIC)))) ASC);
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE (((CAST(t1.c2 AS BLOB)) ISNULL)) ORDER BY ((((t1.c2)AND(((((((((((((NULL)AND(rt0.c0)))AND(v0.c0)))AND(-1593797027)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))))OR(((rt0.c1)<<(rt0.c3)))) DESC, (((vt0.c0)) BETWEEN ((t1.c2)) AND ((CAST(NULL AS NUMERIC)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(t1.c2 AS BLOB)) ISNULL)) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY ((((t1.c2)AND(((((((((((((NULL)AND(rt0.c0)))AND(v0.c0)))AND(-1593797027)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))))OR(((rt0.c1)<<(rt0.c3)))) DESC, (((vt0.c0)) BETWEEN ((t1.c2)) AND ((CAST(NULL AS NUMERIC)))) ASC);
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE (((CAST(t1.c2 AS BLOB)) ISNULL)) ORDER BY ((((t1.c2)AND(((((((((((((NULL)AND(rt0.c0)))AND(v0.c0)))AND(-1593797027)))OR(rt0.c1)))OR(vt0.c0)))AND(rt0.c1)))))OR(((rt0.c1)<<(rt0.c3)))) DESC, (((vt0.c0)) BETWEEN ((t1.c2)) AND ((CAST(NULL AS NUMERIC)))) ASC;
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(0.3617907632343925)))OR(t1.c1)))||(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(0.3617907632343925)))OR(t1.c1)))||(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(0.3617907632343925)))OR(t1.c1)))||(t1.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)AND(0.3617907632343925)))OR(t1.c1)))||(t1.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE (((((((rt0.c1)AND(0.3617907632343925)))OR(t1.c1)))||(t1.c0 COLLATE BINARY)));
SELECT ALL * FROM t1 WHERE (-428613112) ORDER BY ((((-973962807) IS FALSE))&(((t1.c1)||(t1.c0))));
SELECT SUM(count) FROM (SELECT ((-428613112) IS TRUE)  as count FROM t1 ORDER BY ((((-973962807) IS FALSE))&(((t1.c1)||(t1.c0)))));
SELECT ALL * FROM t1 WHERE (-428613112) ORDER BY ((((-973962807) IS FALSE))&(((t1.c1)||(t1.c0))));
SELECT SUM(count) FROM (SELECT ((-428613112) IS TRUE)  as count FROM t1 ORDER BY ((((-973962807) IS FALSE))&(((t1.c1)||(t1.c0)))));
SELECT ALL * FROM t1 WHERE (-428613112) ORDER BY ((((-973962807) IS FALSE))&(((t1.c1)||(t1.c0))));
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (NULL);
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((t1.c1 IN (0.8934355916955244))) IS TRUE) CROSS JOIN t1 ON (((v0.c0)) NOT BETWEEN ((((t1.c2) BETWEEN (vt0.c0) AND (0.8659092371229078)))) AND ((((rt0.c3) IS FALSE)))) WHERE ((((t1.c1)|(rt0.c0)) IN (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)|(rt0.c0)) IN (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((t1.c1 IN (0.8934355916955244))) IS TRUE) CROSS JOIN t1 ON (((v0.c0)) NOT BETWEEN ((((t1.c2) BETWEEN (vt0.c0) AND (0.8659092371229078)))) AND ((((rt0.c3) IS FALSE)))));
SELECT ALL * FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((t1.c1 IN (0.8934355916955244))) IS TRUE) CROSS JOIN t1 ON (((v0.c0)) NOT BETWEEN ((((t1.c2) BETWEEN (vt0.c0) AND (0.8659092371229078)))) AND ((((rt0.c3) IS FALSE)))) WHERE ((((t1.c1)|(rt0.c0)) IN (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)|(rt0.c0)) IN (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON ((NULL)LIKE(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) RIGHT OUTER JOIN vt0 ON (((t1.c1 IN (0.8934355916955244))) IS TRUE) CROSS JOIN t1 ON (((v0.c0)) NOT BETWEEN ((((t1.c2) BETWEEN (vt0.c0) AND (0.8659092371229078)))) AND ((((rt0.c3) IS FALSE)))));
SELECT * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN (0.9291121259793433))) ORDER BY (('-973962807')>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6286575922681513) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))=((vt0.c0))) IN (0.9291121259793433))) IS TRUE)  as count FROM vt0 ORDER BY (('-973962807')>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6286575922681513) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN (0.9291121259793433))) ORDER BY (('-973962807')>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6286575922681513) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0))=((vt0.c0))) IN (0.9291121259793433))) IS TRUE)  as count FROM vt0 ORDER BY (('-973962807')>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6286575922681513) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT * FROM vt0 WHERE (((((vt0.c0))=((vt0.c0))) IN (0.9291121259793433))) ORDER BY (('-973962807')>(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) ASC  NULLS LAST, ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOT BETWEEN (0.6286575922681513) AND ((((x'')) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))));
SELECT * FROM t1, v0, rt0 WHERE ('TG1<') ORDER BY CASE ((t1.c1) IS FALSE)  WHEN (((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((1189668460))) THEN (t1.c1 IN ()) ELSE ((((t1.c0)OR(t1.c2)))AND(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('TG1<') IS TRUE)  as count FROM t1, v0, rt0 ORDER BY CASE ((t1.c1) IS FALSE)  WHEN (((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((1189668460))) THEN (t1.c1 IN ()) ELSE ((((t1.c0)OR(t1.c2)))AND(t1.c0)) END ASC);
SELECT * FROM t1, v0, rt0 WHERE ('TG1<') ORDER BY CASE ((t1.c1) IS FALSE)  WHEN (((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((1189668460))) THEN (t1.c1 IN ()) ELSE ((((t1.c0)OR(t1.c2)))AND(t1.c0)) END ASC;
SELECT SUM(count) FROM (SELECT ALL (('TG1<') IS TRUE)  as count FROM t1, v0, rt0 ORDER BY CASE ((t1.c1) IS FALSE)  WHEN (((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((1189668460))) THEN (t1.c1 IN ()) ELSE ((((t1.c0)OR(t1.c2)))AND(t1.c0)) END ASC);
SELECT * FROM t1, v0, rt0 WHERE ('TG1<') ORDER BY CASE ((t1.c1) IS FALSE)  WHEN (((t1.c0)) NOT BETWEEN ((rt0.c3)) AND ((1189668460))) THEN (t1.c1 IN ()) ELSE ((((t1.c0)OR(t1.c2)))AND(t1.c0)) END ASC;
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((('-37475217') NOTNULL) IN ()), '-1512839646';
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((('-37475217') NOTNULL) IN ()), '-1512839646');
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((('-37475217') NOTNULL) IN ()), '-1512839646';
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY ((('-37475217') NOTNULL) IN ()), '-1512839646');
SELECT COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY ((('-37475217') NOTNULL) IN ()), '-1512839646';
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL))GLOB(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL))GLOB(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL))GLOB(rt0.c2 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c3) NOTNULL))GLOB(rt0.c2 COLLATE RTRIM))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c3) NOTNULL))GLOB(rt0.c2 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((CAST('1989620251' AS TEXT)) ISNULL)) ORDER BY (~ (t1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('1989620251' AS TEXT)) ISNULL)) IS TRUE)  as count FROM v0, t1 ORDER BY (~ (t1.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((CAST('1989620251' AS TEXT)) ISNULL)) ORDER BY (~ (t1.c1 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST('1989620251' AS TEXT)) ISNULL)) IS TRUE)  as count FROM v0, t1 ORDER BY (~ (t1.c1 COLLATE BINARY)) ASC);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (((CAST('1989620251' AS TEXT)) ISNULL)) ORDER BY (~ (t1.c1 COLLATE BINARY)) ASC;
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0) NOT BETWEEN (-1.370897999E9) AND (t1.c0)) THEN (vt0.c0 IN (t1.c1)) END) ORDER BY t1.c1, t1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0) NOT BETWEEN (-1.370897999E9) AND (t1.c0)) THEN (vt0.c0 IN (t1.c1)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c1, t1.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0) NOT BETWEEN (-1.370897999E9) AND (t1.c0)) THEN (vt0.c0 IN (t1.c1)) END) ORDER BY t1.c1, t1.c2 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0) NOT BETWEEN (-1.370897999E9) AND (t1.c0)) THEN (vt0.c0 IN (t1.c1)) END) IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c1, t1.c2 ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE t1.c1 COLLATE BINARY  WHEN ((t1.c0) NOT BETWEEN (-1.370897999E9) AND (t1.c0)) THEN (vt0.c0 IN (t1.c1)) END) ORDER BY t1.c1, t1.c2 ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))||(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))||(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))||(((vt0.c0)>>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))||(((vt0.c0)>>(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0 LEFT OUTER JOIN rt0 ON ((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE WHERE (((((rt0.c2) BETWEEN (rt0.c2) AND (v0.c0)))||(((vt0.c0)>>(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))=(((vt0.c0)!=(0.42641009425287213)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))=(((vt0.c0)!=(0.42641009425287213))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))=(((vt0.c0)!=(0.42641009425287213)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))=(((vt0.c0)!=(0.42641009425287213))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0 IN ()))=(((vt0.c0)!=(0.42641009425287213)))));
SELECT ALL * FROM rt0 WHERE ((((NULL IN ())) NOT BETWEEN (-1903925639) AND (((rt0.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN (-1903925639) AND (((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NULL IN ())) NOT BETWEEN (-1903925639) AND (((rt0.c0)==(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((NULL IN ())) NOT BETWEEN (-1903925639) AND (((rt0.c0)=(rt0.c0))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((NULL IN ())) NOT BETWEEN (-1903925639) AND (((rt0.c0)==(rt0.c0)))));
SELECT ALL * FROM t1 CROSS JOIN v0 ON (NOT ((+ (t1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN t1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST((((rt0.c1))=((t1.c1))) AS NUMERIC) WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY (((0.5067692746889092, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(v0.c0)), COALESCE(v0.c0, rt0.c3, t1.c0, x'ce9882bf'), CAST(rt0.c1 AS BLOB))) AND ((((NULL) BETWEEN (t1.c0) AND (rt0.c1)), t1.c1, CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (NOT ((+ (t1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN t1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST((((rt0.c1))=((t1.c1))) AS NUMERIC) ORDER BY (((0.5067692746889092, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(v0.c0)), COALESCE(v0.c0, rt0.c3, t1.c0, x'ce9882bf'), CAST(rt0.c1 AS BLOB))) AND ((((NULL) BETWEEN (t1.c0) AND (rt0.c1)), t1.c1, CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM t1 CROSS JOIN v0 ON (NOT ((+ (t1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN t1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST((((rt0.c1))=((t1.c1))) AS NUMERIC) WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY (((0.5067692746889092, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(v0.c0)), COALESCE(v0.c0, rt0.c3, t1.c0, x'ce9882bf'), CAST(rt0.c1 AS BLOB))) AND ((((NULL) BETWEEN (t1.c0) AND (rt0.c1)), t1.c1, CAST(vt0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS NUMERIC)) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (NOT ((+ (t1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN t1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST((((rt0.c1))=((t1.c1))) AS NUMERIC) ORDER BY (((0.5067692746889092, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(v0.c0)), COALESCE(v0.c0, rt0.c3, t1.c0, x'ce9882bf'), CAST(rt0.c1 AS BLOB))) AND ((((NULL) BETWEEN (t1.c0) AND (rt0.c1)), t1.c1, CAST(vt0.c0 AS REAL)))));
SELECT ALL * FROM t1 CROSS JOIN v0 ON (NOT ((+ (t1.c0)))) LEFT OUTER JOIN rt0 ON CASE WHEN t1.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END COLLATE NOCASE RIGHT OUTER JOIN vt0 ON CAST((((rt0.c1))=((t1.c1))) AS NUMERIC) WHERE (CAST(v0.c0 AS NUMERIC)) ORDER BY (((0.5067692746889092, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)OR(v0.c0)), COALESCE(v0.c0, rt0.c3, t1.c0, x'ce9882bf'), CAST(rt0.c1 AS BLOB))) AND ((((NULL) BETWEEN (t1.c0) AND (rt0.c1)), t1.c1, CAST(vt0.c0 AS REAL))));
SELECT ALL * FROM rt0, vt0 NOT INDEXED, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0 NOT INDEXED, t1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0 NOT INDEXED, t1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (CAST(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)) AS TEXT)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (CAST(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)) AS TEXT)) IS TRUE)  as count FROM v0, t1);
SELECT ALL COUNT(*) FROM v0, t1 WHERE (CAST(((t1.c1) BETWEEN (v0.c0) AND (t1.c0)) AS TEXT));
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((vt0.c0)!=(rt0.c1)))<<(((vt0.c0) NOT BETWEEN (rt0.c3) AND ('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(rt0.c1)))<<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (''))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((vt0.c0)!=(rt0.c1)))<<(((vt0.c0) NOT BETWEEN (rt0.c3) AND ('')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)!=(rt0.c1)))<<(((vt0.c0) NOT BETWEEN (rt0.c3) AND (''))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE (((((vt0.c0)!=(rt0.c1)))<<(((vt0.c0) NOT BETWEEN (rt0.c3) AND ('')))));
SELECT ALL * FROM t1, v0, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL) WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((((NULL)OR(rt0.c3)))AND(t1.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN (((((NULL)OR(rt0.c3)))AND(t1.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END))) IS TRUE)  as count FROM t1, v0, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM t1, v0, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL) WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((((NULL)OR(rt0.c3)))AND(t1.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS BLOB)) BETWEEN (((((NULL)OR(rt0.c3)))AND(t1.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END))) IS TRUE)  as count FROM t1, v0, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL));
SELECT ALL * FROM t1, v0, vt0 LEFT OUTER JOIN rt0 ON ((rt0.c3 COLLATE RTRIM) NOT NULL) WHERE (((CAST(v0.c0 AS BLOB)) BETWEEN (((((NULL)OR(rt0.c3)))AND(t1.c0))) AND (CASE WHEN t1.c0 THEN v0.c0 END)));
SELECT * FROM vt0, t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1, rt0);
SELECT * FROM vt0, t1, rt0 WHERE (x'');
SELECT * FROM vt0 WHERE ('**');
SELECT SUM(count) FROM (SELECT (('**') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('**');
SELECT SUM(count) FROM (SELECT (('**') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('**');
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)LIKE(vt0.c0)), CAST(rt0.c1 AS REAL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, rt0.c0, (~ (vt0.c0)))))) ORDER BY CAST(((rt0.c2)>(rt0.c3)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)LIKE(vt0.c0)), CAST(rt0.c1 AS REAL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, rt0.c0, (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)>(rt0.c3)) AS TEXT) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)LIKE(vt0.c0)), CAST(rt0.c1 AS REAL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, rt0.c0, (~ (vt0.c0)))))) ORDER BY CAST(((rt0.c2)>(rt0.c3)) AS TEXT) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)LIKE(vt0.c0)), CAST(rt0.c1 AS REAL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, rt0.c0, (~ (vt0.c0)))))) IS TRUE)  as count FROM vt0, rt0 ORDER BY CAST(((rt0.c2)>(rt0.c3)) AS TEXT) DESC);
SELECT ALL * FROM vt0, rt0 WHERE ((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c1)LIKE(vt0.c0)), CAST(rt0.c1 AS REAL))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END, rt0.c0, (~ (vt0.c0)))))) ORDER BY CAST(((rt0.c2)>(rt0.c3)) AS TEXT) DESC;
SELECT ALL * FROM rt0, vt0 INNER JOIN t1 ON ((((rt0.c3)AND(t1.c0)))AND(rt0.c0)) COLLATE RTRIM WHERE (CAST(((vt0.c0)%(rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t1 ON ((((rt0.c3)AND(t1.c0)))AND(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 INNER JOIN t1 ON ((((rt0.c3)AND(t1.c0)))AND(rt0.c0)) COLLATE RTRIM WHERE (CAST(((vt0.c0)%(rt0.c3)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(rt0.c3)) AS REAL)) IS TRUE)  as count FROM rt0, vt0 INNER JOIN t1 ON ((((rt0.c3)AND(t1.c0)))AND(rt0.c0)) COLLATE RTRIM);
SELECT ALL * FROM rt0, vt0 INNER JOIN t1 ON ((((rt0.c3)AND(t1.c0)))AND(rt0.c0)) COLLATE RTRIM WHERE (CAST(((vt0.c0)%(rt0.c3)) AS REAL));
SELECT COUNT(*) FROM t1, vt0 WHERE ((((NOT (t1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c2))) NOT NULL)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((NOT (t1.c2))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((NOT (t1.c2))) NOT NULL)) IS TRUE)  as count FROM t1, vt0);
SELECT COUNT(*) FROM t1, vt0 WHERE ((((NOT (t1.c2))) NOT NULL));
SELECT ALL * FROM v0, t1 WHERE ((((((t1.c2)<('ⶺld'))))=(((NOT (t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)<('ⶺld'))))==(((NOT (t1.c2)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE ((((((t1.c2)<('ⶺld'))))=(((NOT (t1.c2))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)<('ⶺld'))))==(((NOT (t1.c2)))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE ((((((t1.c2)<('ⶺld'))))=(((NOT (t1.c2))))));
SELECT * FROM rt0, v0, t1 CROSS JOIN vt0 ON ((((t1.c2) BETWEEN (v0.c0) AND (t1.c1)))-(((((x'')OR(v0.c0)))AND(vt0.c0)))) WHERE ((((((((((NOT (rt0.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((t1.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0) IS TRUE))))AND(PRINTF(rt0.c1, rt0.c0, rt0.c1)))) ORDER BY (((t1.c0 COLLATE NOCASE))>=((HEX(DISTINCT vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt0.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((t1.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0) IS TRUE))))AND(PRINTF(rt0.c1, rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0, t1 CROSS JOIN vt0 ON ((((t1.c2) BETWEEN (v0.c0) AND (t1.c1)))-(((((x'')OR(v0.c0)))AND(vt0.c0)))) ORDER BY (((t1.c0 COLLATE NOCASE))>=((HEX(DISTINCT vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0, t1 CROSS JOIN vt0 ON ((((t1.c2) BETWEEN (v0.c0) AND (t1.c1)))-(((((x'')OR(v0.c0)))AND(vt0.c0)))) WHERE ((((((((((NOT (rt0.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((t1.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0) IS TRUE))))AND(PRINTF(rt0.c1, rt0.c0, rt0.c1)))) ORDER BY (((t1.c0 COLLATE NOCASE))>=((HEX(DISTINCT vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((NOT (rt0.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((t1.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0) IS TRUE))))AND(PRINTF(rt0.c1, rt0.c0, rt0.c1)))) IS TRUE)  as count FROM rt0, v0, t1 CROSS JOIN vt0 ON ((((t1.c2) BETWEEN (v0.c0) AND (t1.c1)))-(((((x'')OR(v0.c0)))AND(vt0.c0)))) ORDER BY (((t1.c0 COLLATE NOCASE))>=((HEX(DISTINCT vt0.c0)))) DESC  NULLS LAST);
SELECT * FROM rt0, v0, t1 CROSS JOIN vt0 ON ((((t1.c2) BETWEEN (v0.c0) AND (t1.c1)))-(((((x'')OR(v0.c0)))AND(vt0.c0)))) WHERE ((((((((((NOT (rt0.c1)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((t1.c2))))))AND(((t1.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(((v0.c0) IS TRUE))))AND(PRINTF(rt0.c1, rt0.c0, rt0.c1)))) ORDER BY (((t1.c0 COLLATE NOCASE))>=((HEX(DISTINCT vt0.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (NULL) ORDER BY (((vt0.c0, vt0.c0, '*|', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0x69725899, vt0.c0, vt0.c0))) COLLATE BINARY ASC, CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY ELSE json(vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, '*|', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0X69725899, vt0.c0, vt0.c0))) COLLATE BINARY ASC, CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY ELSE json(vt0.c0) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (NULL) ORDER BY (((vt0.c0, vt0.c0, '*|', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0x69725899, vt0.c0, vt0.c0))) COLLATE BINARY ASC, CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY ELSE json(vt0.c0) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0, vt0.c0, '*|', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0X69725899, vt0.c0, vt0.c0))) COLLATE BINARY ASC, CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY ELSE json(vt0.c0) END DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED WHERE (NULL) ORDER BY (((vt0.c0, vt0.c0, '*|', vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, 0x69725899, vt0.c0, vt0.c0))) COLLATE BINARY ASC, CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c0 COLLATE BINARY ELSE json(vt0.c0) END DESC  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT (((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (((vt0.c0)||(vt0.c0)))));
SELECT ALL * FROM vt0, t1, v0, rt0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT ALL * FROM vt0, t1, v0, rt0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST((v0.c0 IN ()) AS INTEGER)) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT ALL * FROM vt0, t1, v0, rt0 WHERE (CAST((v0.c0 IN ()) AS INTEGER));
SELECT * FROM t1 WHERE (((((t1.c2 IN (-1489144632))))<=(((NOT (t1.c1)))))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) BETWEEN (-2.06197263E8) AND (t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2 IN (-1489144632))))<=(((NOT (t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) BETWEEN (-2.06197263E8) AND (t1.c0)));
SELECT * FROM t1 WHERE (((((t1.c2 IN (-1489144632))))<=(((NOT (t1.c1)))))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) BETWEEN (-2.06197263E8) AND (t1.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2 IN (-1489144632))))<=(((NOT (t1.c1)))))) IS TRUE)  as count FROM t1 ORDER BY ((((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) BETWEEN (-2.06197263E8) AND (t1.c0)));
SELECT * FROM t1 WHERE (((((t1.c2 IN (-1489144632))))<=(((NOT (t1.c1)))))) ORDER BY ((((((((((t1.c0)OR(t1.c0)))OR(t1.c1)))OR(t1.c1)))OR(t1.c2))) BETWEEN (-2.06197263E8) AND (t1.c0));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON (CAST(t1.c1 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON -243411070 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN t1.c2 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t1.c2 END)+(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c0 THEN t1.c2 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t1.c2 END)+(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON (CAST(t1.c1 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON -243411070);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON (CAST(t1.c1 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON -243411070 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN t1.c2 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t1.c2 END)+(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN rt0.c0 THEN t1.c2 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t1.c2 END)+(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON (CAST(t1.c1 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON -243411070);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt0 ON rt0.c0 RIGHT OUTER JOIN v0 ON (CAST(t1.c1 AS TEXT) IN ()) RIGHT OUTER JOIN t1 ON -243411070 WHERE (((CASE v0.c0  WHEN rt0.c0 THEN t1.c2 WHEN rt0.c2 THEN v0.c0 WHEN NULL THEN t1.c2 WHEN t1.c2 THEN t1.c1 WHEN rt0.c1 THEN rt0.c0 ELSE t1.c2 END)+(((t1.c1) NOT BETWEEN (NULL) AND (t1.c0)))));
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c0)) WHEN ((t1.c2)OR(t1.c2)) THEN ((x'') NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 END THEN ((((((((vt0.c0)OR('')))AND(t1.c1)))OR(t1.c0)))OR(t1.c2)) ELSE '' END) ORDER BY MIN(CAST(t1.c2 AS BLOB), ('tj' IN ())), ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR('-357495750')))OR(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) ISNULL)  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c0)) WHEN ((t1.c2)OR(t1.c2)) THEN ((x'') NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 END THEN ((((((((vt0.c0)OR('')))AND(t1.c1)))OR(t1.c0)))OR(t1.c2)) ELSE '' END) IS TRUE)  as count FROM vt0, t1 ORDER BY MIN(CAST(t1.c2 AS BLOB), ('tj' IN ())), ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR('-357495750')))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c0)) WHEN ((t1.c2)OR(t1.c2)) THEN ((x'') NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 END THEN ((((((((vt0.c0)OR('')))AND(t1.c1)))OR(t1.c0)))OR(t1.c2)) ELSE '' END) ORDER BY MIN(CAST(t1.c2 AS BLOB), ('tj' IN ())), ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR('-357495750')))OR(vt0.c0)) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((t1.c0) ISNULL)  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c0)) WHEN ((t1.c2)OR(t1.c2)) THEN ((x'') NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 END THEN ((((((((vt0.c0)OR('')))AND(t1.c1)))OR(t1.c0)))OR(t1.c2)) ELSE '' END) IS TRUE)  as count FROM vt0, t1 ORDER BY MIN(CAST(t1.c2 AS BLOB), ('tj' IN ())), ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR('-357495750')))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t1 WHERE (CASE ((t1.c0) ISNULL)  WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0)>>(vt0.c0)) WHEN ((t1.c2)OR(t1.c2)) THEN ((x'') NOT BETWEEN (vt0.c0) AND (t1.c0)) WHEN CASE t1.c2  WHEN t1.c0 THEN t1.c1 WHEN t1.c2 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 END THEN ((((((((vt0.c0)OR('')))AND(t1.c1)))OR(t1.c0)))OR(t1.c2)) ELSE '' END) ORDER BY MIN(CAST(t1.c2 AS BLOB), ('tj' IN ())), ((((((((((((t1.c0)OR(t1.c1)))OR(t1.c1)))AND(t1.c1)))OR(t1.c0)))OR('-357495750')))OR(vt0.c0)) COLLATE RTRIM;
SELECT * FROM rt0 WHERE (((((rt0.c2)IS NOT('-792301314')))+(rt0.c3))) ORDER BY ((json_insert(rt0.c1, rt0.c2, rt0.c1)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT('-792301314')))+(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((json_insert(rt0.c1, rt0.c2, rt0.c1)) IS FALSE) ASC  NULLS FIRST);
SELECT * FROM rt0 WHERE (((((rt0.c2)IS NOT('-792301314')))+(rt0.c3))) ORDER BY ((json_insert(rt0.c1, rt0.c2, rt0.c1)) IS FALSE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c2)IS NOT('-792301314')))+(rt0.c3))) IS TRUE)  as count FROM rt0 ORDER BY ((json_insert(rt0.c1, rt0.c2, rt0.c1)) IS FALSE) ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((((-1.668107441E9)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) ORDER BY (CASE -4.28613112E8  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Mtj7' THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)=(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((-1.668107441E9)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (CASE -4.28613112E8  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Mtj7' THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((-1.668107441E9)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) ORDER BY (CASE -4.28613112E8  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Mtj7' THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)=(v0.c0))));
SELECT SUM(count) FROM (SELECT (((((((-1.668107441E9)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) IS TRUE)  as count FROM v0 ORDER BY (CASE -4.28613112E8  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Mtj7' THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)=(v0.c0)))));
SELECT ALL * FROM v0 WHERE ((((((-1.668107441E9)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) IS FALSE)) ORDER BY (CASE -4.28613112E8  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 'Mtj7' THEN v0.c0 ELSE v0.c0 END IN (((v0.c0)=(v0.c0))));
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (0.5320216626837082) AND (((t1.c0)||(t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (0.5320216626837082) AND (((t1.c0)||(t1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (0.5320216626837082) AND (((t1.c0)||(t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM t1 ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (0.5320216626837082) AND (((t1.c0)||(t1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1 WHERE (t1.c1) ORDER BY ((CAST(t1.c0 AS REAL)) BETWEEN (0.5320216626837082) AND (((t1.c0)||(t1.c1))))  NULLS FIRST;
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c3))<((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3))<((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c3))<((rt0.c0))) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c3))<((rt0.c0))) COLLATE NOCASE) IS TRUE)  as count FROM t1, vt0, rt0);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE ((((rt0.c3))<((rt0.c0))) COLLATE NOCASE);
SELECT * FROM v0, t1, rt0 WHERE ((+ ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t1.c0))))) IS TRUE)  as count FROM v0, t1, rt0);
SELECT * FROM v0, t1, rt0 WHERE ((+ ((NOT (t1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((NOT (t1.c0))))) IS TRUE)  as count FROM v0, t1, rt0);
SELECT * FROM v0, t1, rt0 WHERE ((+ ((NOT (t1.c0)))));
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c3)LIKE(0.5348331268464147))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) IS TRUE))) RIGHT OUTER JOIN t1 ON rt0.c3 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c3)LIKE(0.5348331268464147))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) IS TRUE))) RIGHT OUTER JOIN t1 ON rt0.c3);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c3)LIKE(0.5348331268464147))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) IS TRUE))) RIGHT OUTER JOIN t1 ON rt0.c3 WHERE ((+ (NULL)));
SELECT SUM(count) FROM (SELECT ALL (((+ (NULL))) IS TRUE)  as count FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c3)LIKE(0.5348331268464147))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) IS TRUE))) RIGHT OUTER JOIN t1 ON rt0.c3);
SELECT ALL COUNT(*) FROM vt0, rt0 INNER JOIN v0 ON ((((rt0.c3)LIKE(0.5348331268464147))) BETWEEN ((+ (rt0.c0))) AND (((rt0.c1) IS TRUE))) RIGHT OUTER JOIN t1 ON rt0.c3 WHERE ((+ (NULL)));
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((((((((((rt0.c2)AND(t1.c1)))OR(v0.c0)))AND(rt0.c0)))AND(''))) BETWEEN ((((1.989620251E9)) BETWEEN ((t1.c0)) AND ((v0.c0)))) AND (((((((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR('0.21065165673130637')))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(t1.c1)))OR(v0.c0)))AND(rt0.c0)))AND(''))) BETWEEN ((((1.989620251E9)) BETWEEN ((t1.c0)) AND ((v0.c0)))) AND (((((((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR('0.21065165673130637'))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((((((((((rt0.c2)AND(t1.c1)))OR(v0.c0)))AND(rt0.c0)))AND(''))) BETWEEN ((((1.989620251E9)) BETWEEN ((t1.c0)) AND ((v0.c0)))) AND (((((((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR('0.21065165673130637')))));
SELECT SUM(count) FROM (SELECT ((((((((((((rt0.c2)AND(t1.c1)))OR(v0.c0)))AND(rt0.c0)))AND(''))) BETWEEN ((((1.989620251E9)) BETWEEN ((t1.c0)) AND ((v0.c0)))) AND (((((((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR('0.21065165673130637'))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, v0, t1, rt0 WHERE (((((((((((rt0.c2)AND(t1.c1)))OR(v0.c0)))AND(rt0.c0)))AND(''))) BETWEEN ((((1.989620251E9)) BETWEEN ((t1.c0)) AND ((v0.c0)))) AND (((((((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))AND(rt0.c2)))OR('0.21065165673130637')))));
SELECT ALL * FROM t1, rt0, vt0 WHERE (((json_valid(rt0.c3)) BETWEEN ((t1.c1 IN ())) AND (((t1.c1)||(rt0.c2))))) ORDER BY (rt0.c2 IN (((rt0.c2)*(t1.c0)))) ASC  NULLS FIRST, '-1911615147';
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c3)) BETWEEN ((t1.c1 IN ())) AND (((t1.c1)||(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (rt0.c2 IN (((rt0.c2)*(t1.c0)))) ASC  NULLS FIRST, '-1911615147');
SELECT ALL * FROM t1, rt0, vt0 WHERE (((json_valid(rt0.c3)) BETWEEN ((t1.c1 IN ())) AND (((t1.c1)||(rt0.c2))))) ORDER BY (rt0.c2 IN (((rt0.c2)*(t1.c0)))) ASC  NULLS FIRST, '-1911615147';
SELECT SUM(count) FROM (SELECT ((((json_valid(rt0.c3)) BETWEEN ((t1.c1 IN ())) AND (((t1.c1)||(rt0.c2))))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY (rt0.c2 IN (((rt0.c2)*(t1.c0)))) ASC  NULLS FIRST, '-1911615147');
SELECT ALL * FROM t1, rt0, vt0 WHERE (((json_valid(rt0.c3)) BETWEEN ((t1.c1 IN ())) AND (((t1.c1)||(rt0.c2))))) ORDER BY (rt0.c2 IN (((rt0.c2)*(t1.c0)))) ASC  NULLS FIRST, '-1911615147';
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN t1.c0 END)AND(CAST(t1.c2 AS BLOB))))AND(((t1.c2)>(t1.c0))))) ORDER BY (t1.c2 COLLATE RTRIM IN (((((t1.c1)AND(t1.c1)))OR(t1.c2)), ((t1.c2) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN t1.c0 END)AND(CAST(t1.c2 AS BLOB))))AND(((t1.c2)>(t1.c0))))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (t1.c2 COLLATE RTRIM IN (((((t1.c1)AND(t1.c1)))OR(t1.c2)), ((t1.c2) ISNULL)))  NULLS LAST);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN t1.c0 END)AND(CAST(t1.c2 AS BLOB))))AND(((t1.c2)>(t1.c0))))) ORDER BY (t1.c2 COLLATE RTRIM IN (((((t1.c1)AND(t1.c1)))OR(t1.c2)), ((t1.c2) ISNULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN t1.c0 END)AND(CAST(t1.c2 AS BLOB))))AND(((t1.c2)>(t1.c0))))) IS TRUE)  as count FROM t1, vt0, v0 ORDER BY (t1.c2 COLLATE RTRIM IN (((((t1.c1)AND(t1.c1)))OR(t1.c2)), ((t1.c2) ISNULL)))  NULLS LAST);
SELECT ALL * FROM t1, vt0, v0 WHERE (((((CASE WHEN vt0.c0 THEN t1.c0 END)AND(CAST(t1.c2 AS BLOB))))AND(((t1.c2)>(t1.c0))))) ORDER BY (t1.c2 COLLATE RTRIM IN (((((t1.c1)AND(t1.c1)))OR(t1.c2)), ((t1.c2) ISNULL)))  NULLS LAST;
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0x5613e1ef))))))OR((v0.c0 IN ()))) WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY x'f69a' DESC, ((rt0.c3 COLLATE RTRIM) NOT NULL), ((((((((((rt0.c1)*(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND((('') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((((v0.c0, v0.c0, rt0.c2))<=((v0.c0, rt0.c1, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0X5613e1ef))))))OR((v0.c0 IN ()))) ORDER BY x'f69a' DESC, ((rt0.c3 COLLATE RTRIM) NOT NULL), ((((((((((rt0.c1)*(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND((('') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((((v0.c0, v0.c0, rt0.c2))<=((v0.c0, rt0.c1, v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0x5613e1ef))))))OR((v0.c0 IN ()))) WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY x'f69a' DESC, ((rt0.c3 COLLATE RTRIM) NOT NULL), ((((((((((rt0.c1)*(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND((('') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((((v0.c0, v0.c0, rt0.c2))<=((v0.c0, rt0.c1, v0.c0))))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0X5613e1ef))))))OR((v0.c0 IN ()))) ORDER BY x'f69a' DESC, ((rt0.c3 COLLATE RTRIM) NOT NULL), ((((((((((rt0.c1)*(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND((('') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((((v0.c0, v0.c0, rt0.c2))<=((v0.c0, rt0.c1, v0.c0))))) DESC  NULLS LAST);
SELECT * FROM v0 RIGHT OUTER JOIN rt0 ON ((((rt0.c2 COLLATE BINARY)OR((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((0x5613e1ef))))))OR((v0.c0 IN ()))) WHERE (((rt0.c1) ISNULL) COLLATE BINARY) ORDER BY x'f69a' DESC, ((rt0.c3 COLLATE RTRIM) NOT NULL), ((((((((((rt0.c1)*(rt0.c0)))OR(CASE WHEN rt0.c1 THEN rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND((('') NOT BETWEEN (v0.c0) AND (v0.c0)))))AND((((v0.c0, v0.c0, rt0.c2))<=((v0.c0, rt0.c1, v0.c0))))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, t1, rt0 LEFT OUTER JOIN vt0 ON x'' WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, t1, rt0 LEFT OUTER JOIN vt0 ON x'' ORDER BY t1.c0 DESC);
SELECT ALL COUNT(*) FROM v0, t1, rt0 LEFT OUTER JOIN vt0 ON x'' WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY t1.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, t1, rt0 LEFT OUTER JOIN vt0 ON x'' ORDER BY t1.c0 DESC);
SELECT ALL COUNT(*) FROM v0, t1, rt0 LEFT OUTER JOIN vt0 ON x'' WHERE (((v0.c0 COLLATE RTRIM) IS FALSE)) ORDER BY t1.c0 DESC;
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((0.0705246148888875 IN ((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))), ((t1.c1) IS FALSE)))) ORDER BY (((((t1.c0, v0.c0, rt0.c2))>=((t1.c1, t1.c1, rt0.c3))))IS NOT(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((0.0705246148888875 IN ((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))), ((t1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY (((((t1.c0, v0.c0, rt0.c2))>=((t1.c1, t1.c1, rt0.c3))))IS NOT(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((0.0705246148888875 IN ((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))), ((t1.c1) IS FALSE)))) ORDER BY (((((t1.c0, v0.c0, rt0.c2))>=((t1.c1, t1.c1, rt0.c3))))IS NOT(rt0.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT (((0.0705246148888875 IN ((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))), ((t1.c1) IS FALSE)))) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY (((((t1.c0, v0.c0, rt0.c2))>=((t1.c1, t1.c1, rt0.c3))))IS NOT(rt0.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM rt0, v0, t1 WHERE ((0.0705246148888875 IN ((((rt0.c2)) NOT BETWEEN ((t1.c1)) AND ((rt0.c2))), ((t1.c1) IS FALSE)))) ORDER BY (((((t1.c0, v0.c0, rt0.c2))>=((t1.c1, t1.c1, rt0.c3))))IS NOT(rt0.c0 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t1 ON ((((((rt0.c3)>>(rt0.c3)))AND(((rt0.c0)==(rt0.c3)))))OR(json_array_length(rt0.c2, rt0.c0))) WHERE ((((rt0.c0, t1.c2, t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER), ((NULL)/(v0.c0)), ((v0.c0)<(t1.c0)))) AND (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0))), (+ (t1.c2)), ABS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t1.c2, t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER), ((NULL)/(v0.c0)), ((v0.c0)<(t1.c0)))) AND (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0))), (+ (t1.c2)), ABS(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t1 ON ((((((rt0.c3)>>(rt0.c3)))AND(((rt0.c0)==(rt0.c3)))))OR(json_array_length(rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t1 ON ((((((rt0.c3)>>(rt0.c3)))AND(((rt0.c0)==(rt0.c3)))))OR(json_array_length(rt0.c2, rt0.c0))) WHERE ((((rt0.c0, t1.c2, t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER), ((NULL)/(v0.c0)), ((v0.c0)<(t1.c0)))) AND (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0))), (+ (t1.c2)), ABS(rt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((rt0.c0, t1.c2, t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER), ((NULL)/(v0.c0)), ((v0.c0)<(t1.c0)))) AND (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0))), (+ (t1.c2)), ABS(rt0.c0))))) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t1 ON ((((((rt0.c3)>>(rt0.c3)))AND(((rt0.c0)==(rt0.c3)))))OR(json_array_length(rt0.c2, rt0.c0))));
SELECT ALL COUNT(*) FROM rt0, v0 LEFT OUTER JOIN t1 ON ((((((rt0.c3)>>(rt0.c3)))AND(((rt0.c0)==(rt0.c3)))))OR(json_array_length(rt0.c2, rt0.c0))) WHERE ((((rt0.c0, t1.c2, t1.c0)) NOT BETWEEN ((CAST(t1.c0 AS INTEGER), ((NULL)/(v0.c0)), ((v0.c0)<(t1.c0)))) AND (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0))), (+ (t1.c2)), ABS(rt0.c0)))));
SELECT COUNT(*) FROM t1, rt0 WHERE ((- ((+ (rt0.c1))))) ORDER BY rt0.c2 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c2 COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((- ((+ (rt0.c1))))) ORDER BY rt0.c2 COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((+ (rt0.c1))))) IS TRUE)  as count FROM t1, rt0 ORDER BY rt0.c2 COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0 WHERE ((- ((+ (rt0.c1))))) ORDER BY rt0.c2 COLLATE BINARY DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN -1265759122 THEN vt0.c0 WHEN rt0.c2 THEN t1.c1 WHEN t1.c2 THEN x'' WHEN v0.c0 THEN '&0!!p' END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN -1265759122 THEN vt0.c0 WHEN rt0.c2 THEN t1.c1 WHEN t1.c2 THEN x'' WHEN v0.c0 THEN '&0!!p' END AS REAL)) IS TRUE)  as count FROM v0, vt0, t1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN -1265759122 THEN vt0.c0 WHEN rt0.c2 THEN t1.c1 WHEN t1.c2 THEN x'' WHEN v0.c0 THEN '&0!!p' END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN -1265759122 THEN vt0.c0 WHEN rt0.c2 THEN t1.c1 WHEN t1.c2 THEN x'' WHEN v0.c0 THEN '&0!!p' END AS REAL)) IS TRUE)  as count FROM v0, vt0, t1 NOT INDEXED, rt0);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (CAST(CASE t1.c0  WHEN t1.c0 THEN t1.c2 WHEN -1265759122 THEN vt0.c0 WHEN rt0.c2 THEN t1.c1 WHEN t1.c2 THEN x'' WHEN v0.c0 THEN '&0!!p' END AS REAL));
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY (((((~ (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((((~ (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY (((((~ (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM v0 ORDER BY (((((~ (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM v0 WHERE (NULL) ORDER BY (((((~ (v0.c0)))OR((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(v0.c0 COLLATE BINARY)) ASC;
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN t1 ON rt0.c3 WHERE (CAST(((rt0.c0)>>(rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 INNER JOIN t1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN t1 ON rt0.c3 WHERE (CAST(((rt0.c0)>>(rt0.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c0)>>(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM rt0, v0 INNER JOIN t1 ON rt0.c3);
SELECT ALL COUNT(*) FROM rt0, v0 INNER JOIN t1 ON rt0.c3 WHERE (CAST(((rt0.c0)>>(rt0.c3)) AS TEXT));
SELECT * FROM vt0, t1, rt0, v0 WHERE (((CASE rt0.c3  WHEN t1.c0 THEN rt0.c2 END)IS NOT((((vt0.c0)) BETWEEN ((t1.c2)) AND ((rt0.c0)))))) ORDER BY (((t1.c1, x'', t1.c1)) BETWEEN ((LIKELIHOOD(v0.c0, 0.8745737674211937), (0.18233967720862143 IN (rt0.c0, rt0.c1)), ABS(DISTINCT t1.c2))) AND (((v0.c0 IN (NULL, t1.c1)), ((t1.c2) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ASC  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(t1.c0))) AND (((rt0.c2)/(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN t1.c0 THEN rt0.c2 END)IS NOT((((vt0.c0)) BETWEEN ((t1.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0, t1, rt0, v0 ORDER BY (((t1.c1, x'', t1.c1)) BETWEEN ((LIKELIHOOD(v0.c0, 0.8745737674211937), (0.18233967720862143 IN (rt0.c0, rt0.c1)), ABS(DISTINCT t1.c2))) AND (((v0.c0 IN (NULL, t1.c1)), ((t1.c2) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ASC  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(t1.c0))) AND (((rt0.c2)/(rt0.c0)))) DESC);
SELECT * FROM vt0, t1, rt0, v0 WHERE (((CASE rt0.c3  WHEN t1.c0 THEN rt0.c2 END)IS NOT((((vt0.c0)) BETWEEN ((t1.c2)) AND ((rt0.c0)))))) ORDER BY (((t1.c1, x'', t1.c1)) BETWEEN ((LIKELIHOOD(v0.c0, 0.8745737674211937), (0.18233967720862143 IN (rt0.c0, rt0.c1)), ABS(DISTINCT t1.c2))) AND (((v0.c0 IN (NULL, t1.c1)), ((t1.c2) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ASC  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(t1.c0))) AND (((rt0.c2)/(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE rt0.c3  WHEN t1.c0 THEN rt0.c2 END)IS NOT((((vt0.c0)) BETWEEN ((t1.c2)) AND ((rt0.c0)))))) IS TRUE)  as count FROM vt0, t1, rt0, v0 ORDER BY (((t1.c1, x'', t1.c1)) BETWEEN ((LIKELIHOOD(v0.c0, 0.8745737674211937), (0.18233967720862143 IN (rt0.c0, rt0.c1)), ABS(DISTINCT t1.c2))) AND (((v0.c0 IN (NULL, t1.c1)), ((t1.c2) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ASC  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(t1.c0))) AND (((rt0.c2)/(rt0.c0)))) DESC);
SELECT * FROM vt0, t1, rt0, v0 WHERE (((CASE rt0.c3  WHEN t1.c0 THEN rt0.c2 END)IS NOT((((vt0.c0)) BETWEEN ((t1.c2)) AND ((rt0.c0)))))) ORDER BY (((t1.c1, x'', t1.c1)) BETWEEN ((LIKELIHOOD(v0.c0, 0.8745737674211937), (0.18233967720862143 IN (rt0.c0, rt0.c1)), ABS(DISTINCT t1.c2))) AND (((v0.c0 IN (NULL, t1.c1)), ((t1.c2) ISNULL), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2))))) ASC  NULLS LAST, ((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0)GLOB(t1.c0))) AND (((rt0.c2)/(rt0.c0)))) DESC;
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((+ (rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((rt0.c2 IN (rt0.c2)))))OR(ROUND(vt0.c0, rt0.c3))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((rt0.c2 IN (rt0.c2)))))OR(ROUND(vt0.c0, rt0.c3))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((+ (rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((rt0.c2 IN (rt0.c2)))))OR(ROUND(vt0.c0, rt0.c3))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((((((((((+ (rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((rt0.c2 IN (rt0.c2)))))OR(ROUND(vt0.c0, rt0.c3))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0, rt0);
SELECT COUNT(*) FROM vt0, rt0 WHERE ((((((((((+ (rt0.c1)))AND(rt0.c3 COLLATE RTRIM)))AND((rt0.c2 IN (rt0.c2)))))OR(ROUND(vt0.c0, rt0.c3))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (NOT (((rt0.c3) BETWEEN ('') AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c1 IN ()) IN (rt0.c1 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c3) BETWEEN ('') AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c1 IN ()) IN (rt0.c1 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (NOT (((rt0.c3) BETWEEN ('') AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c1 IN ()) IN (rt0.c1 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((rt0.c1) IS TRUE)  as count FROM vt0, rt0 ORDER BY (NOT (((rt0.c3) BETWEEN ('') AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c1 IN ()) IN (rt0.c1 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))  NULLS FIRST);
SELECT ALL * FROM vt0, rt0 WHERE (rt0.c1) ORDER BY (NOT (((rt0.c3) BETWEEN ('') AND (vt0.c0)))) DESC  NULLS LAST, ((rt0.c1 IN ()) IN (rt0.c1 COLLATE RTRIM, ((vt0.c0)%(rt0.c3))))  NULLS FIRST;
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))), rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))), rt0.c1 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((NULLIF((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))), rt0.c1 COLLATE RTRIM)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (NULLIF((((rt0.c2, rt0.c0, rt0.c2))<((rt0.c0, rt0.c2, rt0.c3))), rt0.c1 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CAST(json(t1.c1) AS INTEGER)) ORDER BY CASE 0.04707895652125649  WHEN t1.c2 THEN ((((rt0.c1)OR(t1.c1)))OR(v0.c0)) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json(t1.c1) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY CASE 0.04707895652125649  WHEN t1.c2 THEN ((((rt0.c1)OR(t1.c1)))OR(v0.c0)) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CAST(json(t1.c1) AS INTEGER)) ORDER BY CASE 0.04707895652125649  WHEN t1.c2 THEN ((((rt0.c1)OR(t1.c1)))OR(v0.c0)) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(rt0.c0)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(json(t1.c1) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0, t1 ORDER BY CASE 0.04707895652125649  WHEN t1.c2 THEN ((((rt0.c1)OR(t1.c1)))OR(v0.c0)) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(rt0.c0)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, v0, t1 WHERE (CAST(json(t1.c1) AS INTEGER)) ORDER BY CASE 0.04707895652125649  WHEN t1.c2 THEN ((((rt0.c1)OR(t1.c1)))OR(v0.c0)) ELSE ((((((((rt0.c0)AND(rt0.c1)))OR(vt0.c0)))AND(t1.c1)))AND(rt0.c0)) END ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (((((NULLIF(v0.c0, v0.c0))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (- (((v0.c0)>(v0.c0)))) ASC, ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))*(((v0.c0)=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(v0.c0, v0.c0))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)>(v0.c0)))) ASC, ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))*(((v0.c0)=(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((NULLIF(v0.c0, v0.c0))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (- (((v0.c0)>(v0.c0)))) ASC, ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))*(((v0.c0)=(v0.c0))));
SELECT SUM(count) FROM (SELECT ((((((NULLIF(v0.c0, v0.c0))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (- (((v0.c0)>(v0.c0)))) ASC, ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))*(((v0.c0)=(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((((NULLIF(v0.c0, v0.c0))AND(v0.c0)))OR(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ORDER BY (- (((v0.c0)>(v0.c0)))) ASC, ((((((v0.c0)AND(v0.c0)))AND(v0.c0)))*(((v0.c0)=(v0.c0))));
SELECT * FROM rt0, v0 WHERE (json_array_length(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_array_length(((rt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((json_array_length(((rt0.c0) NOTNULL))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_array_length(((rt0.c0) NOTNULL)));
SELECT ALL * FROM t1 WHERE (((t1.c2)+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))) ORDER BY ((((t1.c2)<=(t1.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND ((((0.7729835653689001))<((t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((t1.c2)+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2)<=(t1.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND ((((0.7729835653689001))<((t1.c1))))));
SELECT ALL * FROM t1 WHERE (((t1.c2)+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))) ORDER BY ((((t1.c2)<=(t1.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND ((((0.7729835653689001))<((t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((t1.c2)+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2)<=(t1.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND ((((0.7729835653689001))<((t1.c1))))));
SELECT ALL * FROM t1 WHERE (((t1.c2)+(((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2))))) ORDER BY ((((t1.c2)<=(t1.c0))) NOT BETWEEN (((t1.c0) NOTNULL)) AND ((((0.7729835653689001))<((t1.c1)))));
SELECT ALL * FROM rt0, v0 WHERE (RTRIM(SUBSTR(rt0.c2, rt0.c0))) ORDER BY (((rt0.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST, ((rt0.c1 IN ()) IN (rt0.c1)), (((rt0.c1 IN ()))<=(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(SUBSTR(rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST, ((rt0.c1 IN ()) IN (rt0.c1)), (((rt0.c1 IN ()))<=(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (RTRIM(SUBSTR(rt0.c2, rt0.c0))) ORDER BY (((rt0.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST, ((rt0.c1 IN ()) IN (rt0.c1)), (((rt0.c1 IN ()))<=(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((RTRIM(SUBSTR(rt0.c2, rt0.c0))) IS TRUE)  as count FROM rt0, v0 ORDER BY (((rt0.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST, ((rt0.c1 IN ()) IN (rt0.c1)), (((rt0.c1 IN ()))<=(((v0.c0) NOT NULL)))  NULLS FIRST);
SELECT ALL * FROM rt0, v0 WHERE (RTRIM(SUBSTR(rt0.c2, rt0.c0))) ORDER BY (((rt0.c0)) BETWEEN (((+ (rt0.c1)))) AND ((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))))  NULLS FIRST, ((rt0.c1 IN ()) IN (rt0.c1)), (((rt0.c1 IN ()))<=(((v0.c0) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((CASE t1.c0  WHEN rt0.c3 THEN t1.c2 WHEN 0.3711753245522189 THEN rt0.c1 WHEN rt0.c1 THEN x'488b' ELSE t1.c2 END)!=(vt0.c0))) ORDER BY ((((t1.c1)AND(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN rt0.c3 THEN t1.c2 WHEN 0.3711753245522189 THEN rt0.c1 WHEN rt0.c1 THEN x'488b' ELSE t1.c2 END)<>(vt0.c0))) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY ((((t1.c1)AND(vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((CASE t1.c0  WHEN rt0.c3 THEN t1.c2 WHEN 0.3711753245522189 THEN rt0.c1 WHEN rt0.c1 THEN x'488b' ELSE t1.c2 END)!=(vt0.c0))) ORDER BY ((((t1.c1)AND(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE t1.c0  WHEN rt0.c3 THEN t1.c2 WHEN 0.3711753245522189 THEN rt0.c1 WHEN rt0.c1 THEN x'488b' ELSE t1.c2 END)<>(vt0.c0))) IS TRUE)  as count FROM t1, rt0, v0, vt0 ORDER BY ((((t1.c1)AND(vt0.c0))) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, v0, vt0 WHERE (((CASE t1.c0  WHEN rt0.c3 THEN t1.c2 WHEN 0.3711753245522189 THEN rt0.c1 WHEN rt0.c1 THEN x'488b' ELSE t1.c2 END)!=(vt0.c0))) ORDER BY ((((t1.c1)AND(vt0.c0))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM v0 WHERE ('-1623533013');
SELECT SUM(count) FROM (SELECT ALL (('-1623533013') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-1623533013');
SELECT SUM(count) FROM (SELECT ALL (('-1623533013') IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ('-1623533013');
SELECT * FROM vt0, t1 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (vt0.c0 COLLATE NOCASE);
SELECT * FROM v0 WHERE ((((v0.c0) NOT NULL) IN (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT NULL) IN (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) NOT NULL) IN (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0) NOT NULL) IN (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE ((((v0.c0) NOT NULL) IN (((((((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS TEXT) AS REAL)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS REAL));
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE (((rt0.c0)<(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<(rt0.c3))) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE (((rt0.c0)<(rt0.c3)));
SELECT SUM(count) FROM (SELECT ((((rt0.c0)<(rt0.c3))) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE (((rt0.c0)<(rt0.c3)));
SELECT ALL * FROM t1 WHERE (((((((x'5098')&(t1.c2)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))AND(((-478998376) ISNULL)))) ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'5098')&(t1.c2)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))AND(((-478998376) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((x'5098')&(t1.c2)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))AND(((-478998376) ISNULL)))) ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((x'5098')&(t1.c2)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))AND(((-478998376) ISNULL)))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((((x'5098')&(t1.c2)))OR(((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c2)))))AND(((-478998376) ISNULL)))) ORDER BY ((((t1.c2) NOT NULL)) NOT NULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (CAST(LIKELIHOOD(t1.c0, 0.702510052877182) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(t1.c0, 0.702510052877182) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (CAST(LIKELIHOOD(t1.c0, 0.702510052877182) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELIHOOD(t1.c0, 0.702510052877182) AS INTEGER)) IS TRUE)  as count FROM v0, rt0, t1);
SELECT ALL COUNT(*) FROM v0, rt0, t1 WHERE (CAST(LIKELIHOOD(t1.c0, 0.702510052877182) AS INTEGER));
SELECT ALL * FROM t1, rt0, vt0 CROSS JOIN v0 ON (+ (x'')) WHERE (INSTR(((t1.c0) IS TRUE), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((INSTR(((t1.c0) IS TRUE), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN v0 ON (+ (x'')));
SELECT ALL * FROM t1, rt0, vt0 CROSS JOIN v0 ON (+ (x'')) WHERE (INSTR(((t1.c0) IS TRUE), rt0.c0 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ((INSTR(((t1.c0) IS TRUE), rt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN v0 ON (+ (x'')));
SELECT ALL * FROM t1, rt0, vt0 CROSS JOIN v0 ON (+ (x'')) WHERE (INSTR(((t1.c0) IS TRUE), rt0.c0 COLLATE NOCASE));
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE (((-2.97253132E8)LIKE('')));
SELECT SUM(count) FROM (SELECT ((((-2.97253132E8)LIKE(''))) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE (((-2.97253132E8)LIKE('')));
SELECT SUM(count) FROM (SELECT ((((-2.97253132E8)LIKE(''))) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, v0, t1, vt0 WHERE (((-2.97253132E8)LIKE('')));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE WHEN (t1.c0 IN (t1.c0, vt0.c0)) THEN t1.c2 ELSE ((NULL) BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (((((((((NOT (t1.c1)))AND(((t1.c0) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c1 AS REAL))))OR((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c0 IN (t1.c0, vt0.c0)) THEN t1.c2 ELSE ((NULL) BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((((((NOT (t1.c1)))AND(((t1.c0) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c1 AS REAL))))OR((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE WHEN (t1.c0 IN (t1.c0, vt0.c0)) THEN t1.c2 ELSE ((NULL) BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (((((((((NOT (t1.c1)))AND(((t1.c0) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c1 AS REAL))))OR((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (t1.c0 IN (t1.c0, vt0.c0)) THEN t1.c2 ELSE ((NULL) BETWEEN (t1.c0) AND (t1.c0)) END) IS TRUE)  as count FROM t1, vt0 ORDER BY (((((((((NOT (t1.c1)))AND(((t1.c0) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c1 AS REAL))))OR((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CASE WHEN (t1.c0 IN (t1.c0, vt0.c0)) THEN t1.c2 ELSE ((NULL) BETWEEN (t1.c0) AND (t1.c0)) END) ORDER BY (((((((((NOT (t1.c1)))AND(((t1.c0) NOT NULL))))OR(CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c2 END)))OR(CAST(t1.c1 AS REAL))))OR((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0 WHERE (((0xffffffffc5f281c9)OR(v0.c0))) ORDER BY COALESCE(ABS(DISTINCT v0.c0), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0xffffffffc5f281c9)OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(ABS(DISTINCT v0.c0), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((0xffffffffc5f281c9)OR(v0.c0))) ORDER BY COALESCE(ABS(DISTINCT v0.c0), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((0xffffffffc5f281c9)OR(v0.c0))) IS TRUE)  as count FROM v0 ORDER BY COALESCE(ABS(DISTINCT v0.c0), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (((0xffffffffc5f281c9)OR(v0.c0))) ORDER BY COALESCE(ABS(DISTINCT v0.c0), ((((v0.c0)AND(v0.c0)))OR(v0.c0)))  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (((rt0.c1 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE ((rt0.c1 IN ()) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY vt0.c0 ASC;
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c3)OR(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c3)OR(rt0.c3 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((rt0.c3)OR(rt0.c3 COLLATE BINARY))) IS TRUE)  as count FROM rt0, v0);
SELECT ALL * FROM rt0, v0 WHERE (((rt0.c3)OR(rt0.c3 COLLATE BINARY)));
SELECT ALL * FROM v0 WHERE (x'6f9e') ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS LAST, (((v0.c0 IN (v0.c0))) NOT BETWEEN ((((v0.c0))!=((NULL)))) AND (0X34869352));
SELECT SUM(count) FROM (SELECT ALL ((x'6f9e') IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS LAST, (((v0.c0 IN (v0.c0))) NOT BETWEEN ((((v0.c0))!=((NULL)))) AND (0x34869352)));
SELECT ALL * FROM v0 WHERE (x'6f9e') ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS LAST, (((v0.c0 IN (v0.c0))) NOT BETWEEN ((((v0.c0))!=((NULL)))) AND (0X34869352));
SELECT SUM(count) FROM (SELECT ALL ((x'6f9e') IS TRUE)  as count FROM v0 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS LAST, (((v0.c0 IN (v0.c0))) NOT BETWEEN ((((v0.c0))!=((NULL)))) AND (0x34869352)));
SELECT ALL * FROM v0 WHERE (x'6f9e') ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END) NOTNULL) ASC  NULLS LAST, (((v0.c0 IN (v0.c0))) NOT BETWEEN ((((v0.c0))!=((NULL)))) AND (0X34869352));
SELECT ALL * FROM t1, vt0, v0 WHERE (CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (((0X16a06a9d))<=((t1.c0))) WHEN -6.97246658E8 THEN ((t1.c2)=(t1.c2)) WHEN CAST(t1.c2 AS REAL) THEN CASE t1.c0  WHEN v0.c0 THEN t1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (((0x16a06a9d))<=((t1.c0))) WHEN -6.97246658E8 THEN ((t1.c2)==(t1.c2)) WHEN CAST(t1.c2 AS REAL) THEN CASE t1.c0  WHEN v0.c0 THEN t1.c2 END END) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL * FROM t1, vt0, v0 WHERE (CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (((0X16a06a9d))<=((t1.c0))) WHEN -6.97246658E8 THEN ((t1.c2)=(t1.c2)) WHEN CAST(t1.c2 AS REAL) THEN CASE t1.c0  WHEN v0.c0 THEN t1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (((0x16a06a9d))<=((t1.c0))) WHEN -6.97246658E8 THEN ((t1.c2)==(t1.c2)) WHEN CAST(t1.c2 AS REAL) THEN CASE t1.c0  WHEN v0.c0 THEN t1.c2 END END) IS TRUE)  as count FROM t1, vt0, v0);
SELECT ALL * FROM t1, vt0, v0 WHERE (CASE WHEN CASE WHEN t1.c1 THEN t1.c0 ELSE t1.c0 END THEN (((0X16a06a9d))<=((t1.c0))) WHEN -6.97246658E8 THEN ((t1.c2)=(t1.c2)) WHEN CAST(t1.c2 AS REAL) THEN CASE t1.c0  WHEN v0.c0 THEN t1.c2 END END);
SELECT ALL * FROM v0, rt0, t1 WHERE (t1.c0) ORDER BY ((0.812541567494441)&(0.6595340518792726))  NULLS LAST, ((((((((((((((t1.c2)AND(t1.c0)))OR(t1.c2)))OR(rt0.c3)))OR(t1.c0)))AND(v0.c0)))AND(rt0.c0)))*('-101441789'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY ((0.812541567494441)&(0.6595340518792726))  NULLS LAST, ((((((((((((((t1.c2)AND(t1.c0)))OR(t1.c2)))OR(rt0.c3)))OR(t1.c0)))AND(v0.c0)))AND(rt0.c0)))*('-101441789'))  NULLS LAST);
SELECT ALL * FROM v0, rt0, t1 WHERE (t1.c0) ORDER BY ((0.812541567494441)&(0.6595340518792726))  NULLS LAST, ((((((((((((((t1.c2)AND(t1.c0)))OR(t1.c2)))OR(rt0.c3)))OR(t1.c0)))AND(v0.c0)))AND(rt0.c0)))*('-101441789'))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((t1.c0) IS TRUE)  as count FROM v0, rt0, t1 ORDER BY ((0.812541567494441)&(0.6595340518792726))  NULLS LAST, ((((((((((((((t1.c2)AND(t1.c0)))OR(t1.c2)))OR(rt0.c3)))OR(t1.c0)))AND(v0.c0)))AND(rt0.c0)))*('-101441789'))  NULLS LAST);
SELECT ALL * FROM v0, rt0, t1 WHERE (t1.c0) ORDER BY ((0.812541567494441)&(0.6595340518792726))  NULLS LAST, ((((((((((((((t1.c2)AND(t1.c0)))OR(t1.c2)))OR(rt0.c3)))OR(t1.c0)))AND(v0.c0)))AND(rt0.c0)))*('-101441789'))  NULLS LAST;
SELECT * FROM v0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))<=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))<=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))<=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))<=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1))))) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c0)))<=(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(-816844177)))OR(-1.07840734E9))))) ORDER BY v0.c0 COLLATE BINARY, (((v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X1b0d39b6 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(-816844177)))OR(-1.07840734E9))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY, (((v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN 0x1b0d39b6 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(-816844177)))OR(-1.07840734E9))))) ORDER BY v0.c0 COLLATE BINARY, (((v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X1b0d39b6 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(-816844177)))OR(-1.07840734E9))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY, (((v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN 0x1b0d39b6 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END))) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE ((NOT (((((((((v0.c0)AND(x'')))OR(v0.c0)))AND(-816844177)))OR(-1.07840734E9))))) ORDER BY v0.c0 COLLATE BINARY, (((v0.c0)) NOT BETWEEN ((((v0.c0)|(v0.c0)))) AND ((CASE WHEN v0.c0 THEN v0.c0 WHEN 0X1b0d39b6 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE NULL END))) DESC;
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((+ (vt0.c0)))IS NOT((('')+(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))IS NOT((('')+(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((+ (vt0.c0)))IS NOT((('')+(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((+ (vt0.c0)))IS NOT((('')+(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (vt0.c0) ORDER BY (((+ (vt0.c0)))IS NOT((('')+(vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (0.5815796102606834) ORDER BY RTRIM(']') DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.5815796102606834) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(']') DESC);
SELECT COUNT(*) FROM vt0 WHERE (0.5815796102606834) ORDER BY RTRIM(']') DESC;
SELECT SUM(count) FROM (SELECT ALL ((0.5815796102606834) IS TRUE)  as count FROM vt0 ORDER BY RTRIM(']') DESC);
SELECT COUNT(*) FROM vt0 WHERE (0.5815796102606834) ORDER BY RTRIM(']') DESC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT NULL)) ORDER BY ((LTRIM(vt0.c0))>>(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((LTRIM(vt0.c0))>>(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT NULL)) ORDER BY ((LTRIM(vt0.c0))>>(vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)>>(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((LTRIM(vt0.c0))>>(vt0.c0 COLLATE BINARY)) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)>>(vt0.c0))) NOT NULL)) ORDER BY ((LTRIM(vt0.c0))>>(vt0.c0 COLLATE BINARY)) ASC;
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY (((CAST(vt0.c0 AS NUMERIC)))>=((LIKELIHOOD(DISTINCT vt0.c0, 0.8780220360895916)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS NUMERIC)))>=((LIKELIHOOD(DISTINCT vt0.c0, 0.8780220360895916)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY (((CAST(vt0.c0 AS NUMERIC)))>=((LIKELIHOOD(DISTINCT vt0.c0, 0.8780220360895916)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((+ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS NUMERIC)))>=((LIKELIHOOD(DISTINCT vt0.c0, 0.8780220360895916)))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((+ (vt0.c0)))LIKE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))) ORDER BY (((CAST(vt0.c0 AS NUMERIC)))>=((LIKELIHOOD(DISTINCT vt0.c0, 0.8780220360895916)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt0.c2 AS BLOB) IN ())) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((CAST(rt0.c2 AS BLOB) IN ()));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON '1029778350' WHERE (((((0.8724442073671774)=(rt0.c1))) IS TRUE)) ORDER BY CAST(NULL AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((0.8724442073671774)=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON '1029778350' ORDER BY CAST(NULL AS INTEGER));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON '1029778350' WHERE (((((0.8724442073671774)=(rt0.c1))) IS TRUE)) ORDER BY CAST(NULL AS INTEGER);
SELECT SUM(count) FROM (SELECT ((((((0.8724442073671774)=(rt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON '1029778350' ORDER BY CAST(NULL AS INTEGER));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON '1029778350' WHERE (((((0.8724442073671774)=(rt0.c1))) IS TRUE)) ORDER BY CAST(NULL AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))>((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)/(vt0.c0)))>((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>((vt0.c0 IN (vt0.c0, vt0.c0)))));
SELECT * FROM vt0 FULL OUTER JOIN t1 ON CAST(t1.c1 COLLATE NOCASE AS NUMERIC) WHERE (DATE(NULL, CAST(t1.c2 AS BLOB), ((((((((t1.c0)OR(vt0.c0)))OR(t1.c1)))OR(t1.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(NULL, CAST(t1.c2 AS BLOB), ((((((((t1.c0)OR(vt0.c0)))OR(t1.c1)))OR(t1.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CAST(t1.c1 COLLATE NOCASE AS NUMERIC));
SELECT * FROM vt0 FULL OUTER JOIN t1 ON CAST(t1.c1 COLLATE NOCASE AS NUMERIC) WHERE (DATE(NULL, CAST(t1.c2 AS BLOB), ((((((((t1.c0)OR(vt0.c0)))OR(t1.c1)))OR(t1.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((DATE(NULL, CAST(t1.c2 AS BLOB), ((((((((t1.c0)OR(vt0.c0)))OR(t1.c1)))OR(t1.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN t1 ON CAST(t1.c1 COLLATE NOCASE AS NUMERIC));
SELECT * FROM vt0 FULL OUTER JOIN t1 ON CAST(t1.c1 COLLATE NOCASE AS NUMERIC) WHERE (DATE(NULL, CAST(t1.c2 AS BLOB), ((((((((t1.c0)OR(vt0.c0)))OR(t1.c1)))OR(t1.c2)))OR(vt0.c0))));
SELECT * FROM t1, rt0, vt0 WHERE (((rt0.c2) BETWEEN (t1.c0) AND (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (t1.c0) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT * FROM t1, rt0, vt0 WHERE (((rt0.c2) BETWEEN (t1.c0) AND (((rt0.c3) IS FALSE))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2) BETWEEN (t1.c0) AND (((rt0.c3) IS FALSE)))) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT * FROM t1, rt0, vt0 WHERE (((rt0.c2) BETWEEN (t1.c0) AND (((rt0.c3) IS FALSE))));
SELECT COUNT(*) FROM t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((((ABS(t1.c2))AND(LIKELIHOOD(rt0.c0, 0.06018113864476793))))AND(((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((ABS(t1.c2))AND(LIKELIHOOD(rt0.c0, 0.06018113864476793))))AND(((rt0.c1) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((((ABS(t1.c2))AND(LIKELIHOOD(rt0.c0, 0.06018113864476793))))AND(((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt0.c1 COLLATE RTRIM) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY ((((ABS(t1.c2))AND(LIKELIHOOD(rt0.c0, 0.06018113864476793))))AND(((rt0.c1) NOT NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM t1, rt0 WHERE (((rt0.c1 COLLATE RTRIM) ISNULL)) ORDER BY ((((ABS(t1.c2))AND(LIKELIHOOD(rt0.c0, 0.06018113864476793))))AND(((rt0.c1) NOT NULL)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) WHERE (((CAST(rt0.c3 AS TEXT)) ISNULL)) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOTNULL))) AND ((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOTNULL))) AND ((NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) WHERE (((CAST(rt0.c3 AS TEXT)) ISNULL)) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOTNULL))) AND ((NULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt0.c3 AS TEXT)) ISNULL)) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOTNULL))) AND ((NULL)))  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON CAST(((((((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))AND(vt0.c0)))OR(vt0.c0)) AS INTEGER) WHERE (((CAST(rt0.c3 AS TEXT)) ISNULL)) ORDER BY (((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOTNULL))) AND ((NULL)))  NULLS FIRST;
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((x'' COLLATE BINARY)OR((NOT (rt0.c3)))))OR(CAST(vt0.c0 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((((v0.c0)<=(rt0.c3)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))AND((t1.c2 IN (t1.c0)))))AND((((rt0.c0))>=((t1.c1))))))OR(t1.c0)) WHERE ((((((+ (t1.c2)))OR(((NULL)GLOB(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY (- (0.7163290312704406 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (t1.c2)))OR(((NULL)GLOB(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((x'' COLLATE BINARY)OR((NOT (rt0.c3)))))OR(CAST(vt0.c0 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((((v0.c0)<=(rt0.c3)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))AND((t1.c2 IN (t1.c0)))))AND((((rt0.c0))>=((t1.c1))))))OR(t1.c0)) ORDER BY (- (0.7163290312704406 COLLATE RTRIM))  NULLS LAST);
SELECT ALL * FROM rt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((x'' COLLATE BINARY)OR((NOT (rt0.c3)))))OR(CAST(vt0.c0 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((((v0.c0)<=(rt0.c3)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))AND((t1.c2 IN (t1.c0)))))AND((((rt0.c0))>=((t1.c1))))))OR(t1.c0)) WHERE ((((((+ (t1.c2)))OR(((NULL)GLOB(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB)))) ORDER BY (- (0.7163290312704406 COLLATE RTRIM))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((+ (t1.c2)))OR(((NULL)GLOB(rt0.c2)))))AND(CAST(rt0.c0 AS BLOB)))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN v0 ON ((vt0.c0)AND(rt0.c3)) COLLATE NOCASE LEFT OUTER JOIN vt0 ON ((((x'' COLLATE BINARY)OR((NOT (rt0.c3)))))OR(CAST(vt0.c0 AS INTEGER))) LEFT OUTER JOIN t1 ON ((((((((((v0.c0)<=(rt0.c3)))AND(((((v0.c0)OR(vt0.c0)))AND(v0.c0)))))AND((t1.c2 IN (t1.c0)))))AND((((rt0.c0))>=((t1.c1))))))OR(t1.c0)) ORDER BY (- (0.7163290312704406 COLLATE RTRIM))  NULLS LAST);
SELECT * FROM rt0 FULL OUTER JOIN v0 ON NULLIF(DISTINCT (~ (rt0.c0)), (NOT (rt0.c0))) WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON NULLIF(DISTINCT (~ (rt0.c0)), (NOT (rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON NULLIF(DISTINCT (~ (rt0.c0)), (NOT (rt0.c0))) WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN v0 ON NULLIF(DISTINCT (~ (rt0.c0)), (NOT (rt0.c0))));
SELECT * FROM rt0 FULL OUTER JOIN v0 ON NULLIF(DISTINCT (~ (rt0.c0)), (NOT (rt0.c0))) WHERE (((((rt0.c2) IS FALSE)) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (+ (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((x'6396')) AND ((vt0.c0))) THEN vt0.c0 END ASC, ((((0.5586380902122569)<>(vt0.c0)))>=(((NULL) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((x'6396')) AND ((vt0.c0))) THEN vt0.c0 END ASC, ((((0.5586380902122569)<>(vt0.c0)))>=(((NULL) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (+ (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((x'6396')) AND ((vt0.c0))) THEN vt0.c0 END ASC, ((((0.5586380902122569)<>(vt0.c0)))>=(((NULL) NOTNULL)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE (+ (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((x'6396')) AND ((vt0.c0))) THEN vt0.c0 END ASC, ((((0.5586380902122569)<>(vt0.c0)))>=(((NULL) NOTNULL)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY CASE (+ (vt0.c0))  WHEN (((vt0.c0)) NOT BETWEEN ((x'6396')) AND ((vt0.c0))) THEN vt0.c0 END ASC, ((((0.5586380902122569)<>(vt0.c0)))>=(((NULL) NOTNULL)))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((TRIM(NULL) IN ())) ORDER BY 0.5803997390789615  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(NULL) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.5803997390789615  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((TRIM(NULL) IN ())) ORDER BY 0.5803997390789615  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((TRIM(NULL) IN ())) IS TRUE)  as count FROM v0, rt0 ORDER BY 0.5803997390789615  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((TRIM(NULL) IN ())) ORDER BY 0.5803997390789615  NULLS LAST;
SELECT ALL * FROM t1, vt0 NATURAL JOIN rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN -149889432 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN -149889432 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM t1, vt0 NATURAL JOIN rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN -149889432 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN -149889432 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))) IS TRUE)  as count FROM t1, vt0 NATURAL JOIN rt0);
SELECT ALL * FROM t1, vt0 NATURAL JOIN rt0 WHERE ((((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN -149889432 END)) AND ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))));
SELECT * FROM v0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT * FROM v0, vt0, rt0 WHERE (SQLITE_COMPILEOPTION_USED(rt0.c3) COLLATE BINARY);
SELECT ALL * FROM vt0, t1, v0 WHERE (CAST(((t1.c2) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE (CAST(((t1.c2) NOTNULL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((t1.c2) NOTNULL) AS BLOB)) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE (CAST(((t1.c2) NOTNULL) AS BLOB));
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((t1.c2)<<(t1.c0)) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (('-1063359360') BETWEEN (rt0.c2) AND (t1.c0)) END INNER JOIN vt0 ON CASE WHEN highlight(t1.c1, rt0.c0, vt0.c0, t1.c1) THEN CAST(t1.c0 AS INTEGER) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)))AND(t1.c2)) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) ISNULL) THEN (rt0.c3 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((0.2511070111127577)) AND ((rt0.c3))) THEN NULL END INNER JOIN t1 ON t1.c2 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((t1.c2)<<(t1.c0)) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (('-1063359360') BETWEEN (rt0.c2) AND (t1.c0)) END INNER JOIN vt0 ON CASE WHEN highlight(t1.c1, rt0.c0, vt0.c0, t1.c1) THEN CAST(t1.c0 AS INTEGER) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)))AND(t1.c2)) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) ISNULL) THEN (rt0.c3 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((0.2511070111127577)) AND ((rt0.c3))) THEN NULL END INNER JOIN t1 ON t1.c2);
SELECT * FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((t1.c2)<<(t1.c0)) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (('-1063359360') BETWEEN (rt0.c2) AND (t1.c0)) END INNER JOIN vt0 ON CASE WHEN highlight(t1.c1, rt0.c0, vt0.c0, t1.c1) THEN CAST(t1.c0 AS INTEGER) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)))AND(t1.c2)) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) ISNULL) THEN (rt0.c3 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((0.2511070111127577)) AND ((rt0.c3))) THEN NULL END INNER JOIN t1 ON t1.c2 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON CASE WHEN ((t1.c2)<<(t1.c0)) THEN ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)) ELSE (('-1063359360') BETWEEN (rt0.c2) AND (t1.c0)) END INNER JOIN vt0 ON CASE WHEN highlight(t1.c1, rt0.c0, vt0.c0, t1.c1) THEN CAST(t1.c0 AS INTEGER) WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE WHEN rt0.c1 THEN NULL END WHEN ((((((((rt0.c3)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c2)))AND(t1.c2)) THEN v0.c0 COLLATE RTRIM WHEN ((rt0.c3) ISNULL) THEN (rt0.c3 IN ()) WHEN (((t1.c0)) NOT BETWEEN ((0.2511070111127577)) AND ((rt0.c3))) THEN NULL END INNER JOIN t1 ON t1.c2);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((t1.c0)&(LIKELIHOOD(DISTINCT rt0.c2, 0.1831084044464748)))) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END)<>(((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)&(LIKELIHOOD(DISTINCT rt0.c2, 0.1831084044464748)))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END)<>(((t1.c0) IS FALSE))));
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((t1.c0)&(LIKELIHOOD(DISTINCT rt0.c2, 0.1831084044464748)))) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END)<>(((t1.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0)&(LIKELIHOOD(DISTINCT rt0.c2, 0.1831084044464748)))) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END)<>(((t1.c0) IS FALSE))));
SELECT COUNT(*) FROM t1, rt0, v0 WHERE (((t1.c0)&(LIKELIHOOD(DISTINCT rt0.c2, 0.1831084044464748)))) ORDER BY ((CASE WHEN t1.c0 THEN rt0.c0 ELSE rt0.c2 END)<>(((t1.c0) IS FALSE)));
SELECT * FROM vt0, rt0, t1 NOT INDEXED WHERE ((((((rt0.c2)<>(t1.c2))))>=((((t1.c0)IS NOT(rt0.c0)))))) ORDER BY (NOT (rt0.c2 COLLATE RTRIM)) DESC, ((((((((CAST(rt0.c1 AS BLOB))AND(UPPER(DISTINCT t1.c0))))AND(((rt0.c0)<(rt0.c2)))))OR(t1.c2 COLLATE NOCASE)))OR(((rt0.c0)<(0.6383086824324641)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)<>(t1.c2))))>=((((t1.c0)IS NOT(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (NOT (rt0.c2 COLLATE RTRIM)) DESC, ((((((((CAST(rt0.c1 AS BLOB))AND(UPPER(DISTINCT t1.c0))))AND(((rt0.c0)<(rt0.c2)))))OR(t1.c2 COLLATE NOCASE)))OR(((rt0.c0)<(0.6383086824324641)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, t1 NOT INDEXED WHERE ((((((rt0.c2)<>(t1.c2))))>=((((t1.c0)IS NOT(rt0.c0)))))) ORDER BY (NOT (rt0.c2 COLLATE RTRIM)) DESC, ((((((((CAST(rt0.c1 AS BLOB))AND(UPPER(DISTINCT t1.c0))))AND(((rt0.c0)<(rt0.c2)))))OR(t1.c2 COLLATE NOCASE)))OR(((rt0.c0)<(0.6383086824324641)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((rt0.c2)<>(t1.c2))))>=((((t1.c0)IS NOT(rt0.c0)))))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY (NOT (rt0.c2 COLLATE RTRIM)) DESC, ((((((((CAST(rt0.c1 AS BLOB))AND(UPPER(DISTINCT t1.c0))))AND(((rt0.c0)<(rt0.c2)))))OR(t1.c2 COLLATE NOCASE)))OR(((rt0.c0)<(0.6383086824324641)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt0, t1 NOT INDEXED WHERE ((((((rt0.c2)<>(t1.c2))))>=((((t1.c0)IS NOT(rt0.c0)))))) ORDER BY (NOT (rt0.c2 COLLATE RTRIM)) DESC, ((((((((CAST(rt0.c1 AS BLOB))AND(UPPER(DISTINCT t1.c0))))AND(((rt0.c0)<(rt0.c2)))))OR(t1.c2 COLLATE NOCASE)))OR(((rt0.c0)<(0.6383086824324641)))) DESC  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE (UPPER(0.38169737879837573));
SELECT SUM(count) FROM (SELECT ((UPPER(0.38169737879837573)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (UPPER(0.38169737879837573));
SELECT SUM(count) FROM (SELECT ((UPPER(0.38169737879837573)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE (UPPER(0.38169737879837573));
SELECT * FROM vt0, rt0, v0 WHERE (((((((v0.c0) ISNULL))AND(v0.c0)))OR((rt0.c3 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))AND(v0.c0)))OR((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((v0.c0) ISNULL))AND(v0.c0)))OR((rt0.c3 IN (rt0.c3)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) ISNULL))AND(v0.c0)))OR((rt0.c3 IN (rt0.c3))))) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT * FROM vt0, rt0, v0 WHERE (((((((v0.c0) ISNULL))AND(v0.c0)))OR((rt0.c3 IN (rt0.c3)))));
SELECT * FROM t1 INNER JOIN v0 ON t1.c1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t1 INNER JOIN v0 ON t1.c1);
SELECT * FROM t1 INNER JOIN v0 ON t1.c1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM t1 INNER JOIN v0 ON t1.c1);
SELECT * FROM t1 INNER JOIN v0 ON t1.c1 WHERE (v0.c0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (rt0.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((~ (rt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((~ (rt0.c1 COLLATE NOCASE)));
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) AS NUMERIC)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))) AS NUMERIC));
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c2) IS TRUE)  as count FROM v0, rt0);
SELECT COUNT(*) FROM v0, rt0 WHERE (rt0.c2);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON NULL LEFT OUTER JOIN t1 ON (((t1.c0 IN ()))||(16118284)) WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON NULL LEFT OUTER JOIN t1 ON (((t1.c0 IN ()))||(16118284)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON NULL LEFT OUTER JOIN t1 ON (((t1.c0 IN ()))||(16118284)) WHERE (t1.c1);
SELECT SUM(count) FROM (SELECT ALL ((t1.c1) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON NULL LEFT OUTER JOIN t1 ON (((t1.c0 IN ()))||(16118284)));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN v0 ON NULL LEFT OUTER JOIN t1 ON (((t1.c0 IN ()))||(16118284)) WHERE (t1.c1);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE WHEN '2119365954' THEN 0.7437990297287952 END)) AND ((0X3db2483a))) WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND(((vt0.c0) IS TRUE))))AND(rt0.c1))) ORDER BY (((NULL COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND(((vt0.c0) IS TRUE))))AND(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE WHEN '2119365954' THEN 0.7437990297287952 END)) AND ((0X3db2483a))) ORDER BY (((NULL COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE WHEN '2119365954' THEN 0.7437990297287952 END)) AND ((0X3db2483a))) WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND(((vt0.c0) IS TRUE))))AND(rt0.c1))) ORDER BY (((NULL COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND(((vt0.c0) IS TRUE))))AND(rt0.c1))) IS TRUE)  as count FROM vt0, rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE WHEN '2119365954' THEN 0.7437990297287952 END)) AND ((0X3db2483a))) ORDER BY (((NULL COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))) ASC);
SELECT COUNT(*) FROM vt0, rt0 FULL OUTER JOIN v0 ON (((v0.c0)) NOT BETWEEN ((CASE WHEN '2119365954' THEN 0.7437990297287952 END)) AND ((0X3db2483a))) WHERE (((((((vt0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND(((vt0.c0) IS TRUE))))AND(rt0.c1))) ORDER BY (((NULL COLLATE NOCASE))>=((vt0.c0 COLLATE RTRIM))) ASC;
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((((((((((((((((((rt0.c1) IS FALSE))AND(((rt0.c0)IS(vt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((-213835190, NULL, rt0.c0))))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'efc8')))))AND(((rt0.c1)>=(rt0.c0)))))OR(((rt0.c1)>(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC))))OR((((('?H?)1')OR(vt0.c0)))AND(rt0.c3)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((rt0.c1) IS FALSE))AND(((rt0.c0)IS(vt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((-213835190, NULL, rt0.c0))))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'efc8')))))AND(((rt0.c1)>=(rt0.c0)))))OR(((rt0.c1)>(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC))))OR((((('?H?)1')OR(vt0.c0)))AND(rt0.c3)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((((((((((((((((((rt0.c1) IS FALSE))AND(((rt0.c0)IS(vt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((-213835190, NULL, rt0.c0))))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'efc8')))))AND(((rt0.c1)>=(rt0.c0)))))OR(((rt0.c1)>(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC))))OR((((('?H?)1')OR(vt0.c0)))AND(rt0.c3)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((((rt0.c1) IS FALSE))AND(((rt0.c0)IS(vt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((-213835190, NULL, rt0.c0))))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'efc8')))))AND(((rt0.c1)>=(rt0.c0)))))OR(((rt0.c1)>(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC))))OR((((('?H?)1')OR(vt0.c0)))AND(rt0.c3)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER));
SELECT * FROM vt0 FULL OUTER JOIN rt0 ON x'' COLLATE BINARY WHERE (((((((((((((((((((rt0.c1) IS FALSE))AND(((rt0.c0)IS(vt0.c0)))))OR((((rt0.c1, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, vt0.c0)) AND ((-213835190, NULL, rt0.c0))))))OR(((vt0.c0) NOT BETWEEN (rt0.c1) AND (x'efc8')))))AND(((rt0.c1)>=(rt0.c0)))))OR(((rt0.c1)>(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC))))OR((((('?H?)1')OR(vt0.c0)))AND(rt0.c3)))))OR(((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c3))))) ORDER BY CAST(rt0.c0 COLLATE NOCASE AS INTEGER);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) ORDER BY (((v0.c0, t1.c1, t1.c1)) BETWEEN ((v0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS INTEGER), t1.c1 COLLATE NOCASE, t1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY (((v0.c0, t1.c1, t1.c1)) BETWEEN ((v0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS INTEGER), t1.c1 COLLATE NOCASE, t1.c1))) ASC);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) ORDER BY (((v0.c0, t1.c1, t1.c1)) BETWEEN ((v0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS INTEGER), t1.c1 COLLATE NOCASE, t1.c1))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) IS TRUE)  as count FROM t1, v0, rt0 ORDER BY (((v0.c0, t1.c1, t1.c1)) BETWEEN ((v0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS INTEGER), t1.c1 COLLATE NOCASE, t1.c1))) ASC);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE (((CAST(rt0.c2 AS NUMERIC)) IS FALSE)) ORDER BY (((v0.c0, t1.c1, t1.c1)) BETWEEN ((v0.c0 COLLATE RTRIM, t1.c0 COLLATE BINARY, v0.c0 COLLATE RTRIM)) AND ((CAST(v0.c0 AS INTEGER), t1.c1 COLLATE NOCASE, t1.c1))) ASC;
SELECT ALL * FROM rt0, t1, vt0 INDEXED BY i92, v0 WHERE (CASE WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN '1346515345' WHEN t1.c0 THEN t1.c0 ELSE rt0.c0 END COLLATE BINARY COLLATE BINARY) ORDER BY x'1c73'  NULLS FIRST, (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))*(((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN '1346515345' WHEN t1.c0 THEN t1.c0 ELSE rt0.c0 END COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0 INDEXED BY i92, v0 ORDER BY x'1c73'  NULLS FIRST, (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))*(((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1, vt0 INDEXED BY i92, v0 WHERE (CASE WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN '1346515345' WHEN t1.c0 THEN t1.c0 ELSE rt0.c0 END COLLATE BINARY COLLATE BINARY) ORDER BY x'1c73'  NULLS FIRST, (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))*(((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN t1.c0 WHEN rt0.c1 THEN '1346515345' WHEN t1.c0 THEN t1.c0 ELSE rt0.c0 END COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM rt0, t1, vt0 INDEXED BY i92, v0 ORDER BY x'1c73'  NULLS FIRST, (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ())  NULLS LAST, ((CAST(rt0.c3 AS INTEGER))*(((rt0.c1)LIKE(rt0.c0)))) ASC  NULLS LAST);
SELECT * FROM t1, rt0, vt0 CROSS JOIN v0 ON ((((((vt0.c0)>>(rt0.c3)))OR(0xffffffffd1b193f6)))AND((t1.c2 IN ()))) WHERE ((highlight(rt0.c1, vt0.c0, t1.c2, rt0.c0) IN (CAST(t1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((highlight(rt0.c1, vt0.c0, t1.c2, rt0.c0) IN (CAST(t1.c1 AS TEXT)))) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN v0 ON ((((((vt0.c0)>>(rt0.c3)))OR(0xffffffffd1b193f6)))AND((t1.c2 IN ()))));
SELECT * FROM t1, rt0, vt0 CROSS JOIN v0 ON ((((((vt0.c0)>>(rt0.c3)))OR(0xffffffffd1b193f6)))AND((t1.c2 IN ()))) WHERE ((highlight(rt0.c1, vt0.c0, t1.c2, rt0.c0) IN (CAST(t1.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ALL (((highlight(rt0.c1, vt0.c0, t1.c2, rt0.c0) IN (CAST(t1.c1 AS TEXT)))) IS TRUE)  as count FROM t1, rt0, vt0 CROSS JOIN v0 ON ((((((vt0.c0)>>(rt0.c3)))OR(0xffffffffd1b193f6)))AND((t1.c2 IN ()))));
SELECT * FROM t1, rt0, vt0 CROSS JOIN v0 ON ((((((vt0.c0)>>(rt0.c3)))OR(0xffffffffd1b193f6)))AND((t1.c2 IN ()))) WHERE ((highlight(rt0.c1, vt0.c0, t1.c2, rt0.c0) IN (CAST(t1.c1 AS TEXT))));
SELECT COUNT(*) FROM vt0, v0 WHERE (0.237160208347322);
SELECT SUM(count) FROM (SELECT ALL ((0.237160208347322) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (0.237160208347322);
SELECT SUM(count) FROM (SELECT ALL ((0.237160208347322) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (0.237160208347322);
SELECT ALL * FROM rt0 WHERE (CASE WHEN 0X7006cb81 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN 0.4036685093733893 ELSE rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN 0.2988219759413955 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0x7006cb81 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN 0.4036685093733893 ELSE rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN 0.2988219759413955 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN 0X7006cb81 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN 0.4036685093733893 ELSE rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN 0.2988219759413955 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN 0x7006cb81 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN 0.4036685093733893 ELSE rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN 0.2988219759413955 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CASE WHEN 0X7006cb81 COLLATE RTRIM THEN CASE WHEN rt0.c3 THEN 0.4036685093733893 ELSE rt0.c1 END ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN 0.2988219759413955 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE ((((((((v0.c0)AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0))  WHEN CAST(v0.c0 AS BLOB) THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.15161538696070287);
SELECT SUM(count) FROM (SELECT ((0.15161538696070287) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.15161538696070287);
SELECT SUM(count) FROM (SELECT ((0.15161538696070287) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (0.15161538696070287);
SELECT COUNT(*) FROM t1, v0 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CASE t1.c2 COLLATE RTRIM  WHEN (((t1.c1))<((t1.c0))) THEN (t1.c0 IN (t1.c2, t1.c1, v0.c0)) ELSE t1.c1 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 ORDER BY CASE t1.c2 COLLATE RTRIM  WHEN (((t1.c1))<((t1.c0))) THEN (t1.c0 IN (t1.c2, t1.c1, v0.c0)) ELSE t1.c1 END DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CASE t1.c2 COLLATE RTRIM  WHEN (((t1.c1))<((t1.c0))) THEN (t1.c0 IN (t1.c2, t1.c1, v0.c0)) ELSE t1.c1 END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (t1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM t1, v0 ORDER BY CASE t1.c2 COLLATE RTRIM  WHEN (((t1.c1))<((t1.c0))) THEN (t1.c0 IN (t1.c2, t1.c1, v0.c0)) ELSE t1.c1 END DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0 WHERE ((- (t1.c0)) COLLATE NOCASE) ORDER BY CASE t1.c2 COLLATE RTRIM  WHEN (((t1.c1))<((t1.c0))) THEN (t1.c0 IN (t1.c2, t1.c1, v0.c0)) ELSE t1.c1 END DESC  NULLS LAST;
SELECT ALL * FROM rt0 WHERE (((QUOTE(rt0.c1)) NOT BETWEEN (LIKELIHOOD(rt0.c3, 0.5196780527741881)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c1)) NOT BETWEEN (LIKELIHOOD(rt0.c3, 0.5196780527741881)) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((QUOTE(rt0.c1)) NOT BETWEEN (LIKELIHOOD(rt0.c3, 0.5196780527741881)) AND (rt0.c0)));
SELECT SUM(count) FROM (SELECT ((((QUOTE(rt0.c1)) NOT BETWEEN (LIKELIHOOD(rt0.c3, 0.5196780527741881)) AND (rt0.c0))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((QUOTE(rt0.c1)) NOT BETWEEN (LIKELIHOOD(rt0.c3, 0.5196780527741881)) AND (rt0.c0)));
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(t1.c0)))OR(x'eea9')))OR(rt0.c1))) AND (((t1.c2)IS(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(t1.c0)))OR(x'eea9')))OR(rt0.c1))) AND (((t1.c2)IS(t1.c1))))) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(t1.c0)))OR(x'eea9')))OR(rt0.c1))) AND (((t1.c2)IS(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((NOT (rt0.c0))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(t1.c0)))OR(x'eea9')))OR(rt0.c1))) AND (((t1.c2)IS(t1.c1))))) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE ((((NOT (rt0.c0))) NOT BETWEEN (((((((((rt0.c1)AND(rt0.c2)))AND(t1.c0)))OR(x'eea9')))OR(rt0.c1))) AND (((t1.c2)IS(t1.c1)))));
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE (((((rt0.c0)OR(t1.c1)))AND(v0.c0)) COLLATE NOCASE) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(t1.c1)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY '' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE (((((rt0.c0)OR(t1.c1)))AND(v0.c0)) COLLATE NOCASE) ORDER BY '' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)OR(t1.c1)))AND(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt0, t1, v0 ORDER BY '' ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0, t1, v0 WHERE (((((rt0.c0)OR(t1.c1)))AND(v0.c0)) COLLATE NOCASE) ORDER BY '' ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((x'c3cc' IN ())) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'c3cc' IN ())) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((x'c3cc' IN ())) ORDER BY x'' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((x'c3cc' IN ())) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY x'' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE ((x'c3cc' IN ())) ORDER BY x'' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON t1.c2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 WHEN t1.c2 THEN x'' WHEN t1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)/(((((t1.c2)OR(vt0.c0)))AND(rt0.c2)))) WHERE (((((rt0.c0)LIKE(t1.c1)))AND(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(t1.c1)))AND(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 WHEN t1.c2 THEN x'' WHEN t1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)/(((((t1.c2)OR(vt0.c0)))AND(rt0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON t1.c2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 WHEN t1.c2 THEN x'' WHEN t1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)/(((((t1.c2)OR(vt0.c0)))AND(rt0.c2)))) WHERE (((((rt0.c0)LIKE(t1.c1)))AND(((rt0.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt0.c0)LIKE(t1.c1)))AND(((rt0.c1) NOT NULL)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN t1 ON t1.c2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 WHEN t1.c2 THEN x'' WHEN t1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)/(((((t1.c2)OR(vt0.c0)))AND(rt0.c2)))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN t1 ON t1.c2 FULL OUTER JOIN rt0 ON ((CASE WHEN rt0.c1 THEN t1.c1 WHEN t1.c1 THEN rt0.c3 WHEN t1.c2 THEN x'' WHEN t1.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 END)/(((((t1.c2)OR(vt0.c0)))AND(rt0.c2)))) WHERE (((((rt0.c0)LIKE(t1.c1)))AND(((rt0.c1) NOT NULL))));
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (t1.c2);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '/Z*⦉2' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '/Z*⦉2' END AS TEXT)) IS TRUE)  as count FROM v0, vt0, t1, rt0);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '/Z*⦉2' END AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '/Z*⦉2' END AS TEXT)) IS TRUE)  as count FROM v0, vt0, t1, rt0);
SELECT COUNT(*) FROM v0, vt0, t1, rt0 WHERE (CAST(CASE WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN '/Z*⦉2' END AS TEXT));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) ISNULL)) ORDER BY ABS(DISTINCT vt0.c0) DESC, ((((vt0.c0)/(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT vt0.c0) DESC, ((((vt0.c0)/(vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) ISNULL)) ORDER BY ABS(DISTINCT vt0.c0) DESC, ((((vt0.c0)/(vt0.c0))) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)<=(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY ABS(DISTINCT vt0.c0) DESC, ((((vt0.c0)/(vt0.c0))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)<=(vt0.c0))) ISNULL)) ORDER BY ABS(DISTINCT vt0.c0) DESC, ((((vt0.c0)/(vt0.c0))) IS FALSE);
SELECT ALL * FROM t1 WHERE (((((((t1.c0)OR(NULL)))AND(t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END) AND (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY ((((((x'')OR(1093051762)))OR(t1.c0)))>(CASE t1.c2  WHEN t1.c2 THEN t1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(NULL)))AND(t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END) AND (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((((x'')OR(1093051762)))OR(t1.c0)))>(CASE t1.c2  WHEN t1.c2 THEN t1.c2 END)));
SELECT ALL * FROM t1 WHERE (((((((t1.c0)OR(NULL)))AND(t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END) AND (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY ((((((x'')OR(1093051762)))OR(t1.c0)))>(CASE t1.c2  WHEN t1.c2 THEN t1.c2 END));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0)OR(NULL)))AND(t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END) AND (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY ((((((x'')OR(1093051762)))OR(t1.c0)))>(CASE t1.c2  WHEN t1.c2 THEN t1.c2 END)));
SELECT ALL * FROM t1 WHERE (((((((t1.c0)OR(NULL)))AND(t1.c0))) BETWEEN (CASE WHEN t1.c1 THEN t1.c2 ELSE t1.c0 END) AND (((t1.c2) BETWEEN (t1.c2) AND (t1.c2))))) ORDER BY ((((((x'')OR(1093051762)))OR(t1.c0)))>(CASE t1.c2  WHEN t1.c2 THEN t1.c2 END));
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (((((t1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))&(LTRIM(rt0.c0, rt0.c3)))) ORDER BY x'9295' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))&(LTRIM(rt0.c0, rt0.c3)))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY x'9295' ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (((((t1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))&(LTRIM(rt0.c0, rt0.c3)))) ORDER BY x'9295' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))&(LTRIM(rt0.c0, rt0.c3)))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY x'9295' ASC  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (((((t1.c2) BETWEEN (rt0.c0) AND (rt0.c0)))&(LTRIM(rt0.c0, rt0.c3)))) ORDER BY x'9295' ASC  NULLS LAST;
SELECT * FROM vt0, t1, v0, rt0 WHERE (CAST(((t1.c0) ISNULL) AS REAL)) ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0, t1, v0, rt0 WHERE (CAST(((t1.c0) ISNULL) AS REAL)) ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((t1.c0) ISNULL) AS REAL)) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END))  NULLS FIRST);
SELECT * FROM vt0, t1, v0, rt0 WHERE (CAST(((t1.c0) ISNULL) AS REAL)) ORDER BY ((rt0.c1)>>(CASE WHEN rt0.c1 THEN t1.c1 ELSE rt0.c0 END))  NULLS FIRST;
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) ISNULL)) ORDER BY CASE WHEN ((t1.c0) IS FALSE) THEN ((((((((x'')AND(t1.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN ((t1.c0) IS FALSE) THEN ((((((((x'')AND(t1.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) END ASC);
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) ISNULL)) ORDER BY CASE WHEN ((t1.c0) IS FALSE) THEN ((((((((x'')AND(t1.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) END ASC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) ISNULL)) IS TRUE)  as count FROM t1, rt0 ORDER BY CASE WHEN ((t1.c0) IS FALSE) THEN ((((((((x'')AND(t1.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) END ASC);
SELECT ALL * FROM t1, rt0 WHERE (((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1))) ISNULL)) ORDER BY CASE WHEN ((t1.c0) IS FALSE) THEN ((((((((x'')AND(t1.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)) END ASC;
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c2)<=(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c2)<=(rt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((rt0.c2)<=(rt0.c1)) AS TEXT)) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (CAST(((rt0.c2)<=(rt0.c1)) AS TEXT));
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN '2089590156' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('1e500')GLOB(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN TYPEOF(v0.c0) ELSE ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN '2089590156' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('1e500')GLOB(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN TYPEOF(v0.c0) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN '2089590156' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('1e500')GLOB(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN TYPEOF(v0.c0) ELSE ((v0.c0) NOTNULL) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN '2089590156' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('1e500')GLOB(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN TYPEOF(v0.c0) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN '2089590156' WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (('1e500')GLOB(v0.c0)) WHEN v0.c0 COLLATE RTRIM THEN TYPEOF(v0.c0) ELSE ((v0.c0) NOTNULL) END);
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((vt0.c0)LIKE(rt0.c0)))))AND(('888499322' IN ()))) CROSS JOIN t1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(DISTINCT x'')) AND (t1.c0)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((vt0.c0)LIKE(rt0.c0)))))AND(('888499322' IN ()))) CROSS JOIN t1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(DISTINCT x'')) AND (t1.c0)));
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((vt0.c0)LIKE(rt0.c0)))))AND(('888499322' IN ()))) CROSS JOIN t1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(DISTINCT x'')) AND (t1.c0)) WHERE (rt0.c2);
SELECT SUM(count) FROM (SELECT ((rt0.c2) IS TRUE)  as count FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((vt0.c0)LIKE(rt0.c0)))))AND(('888499322' IN ()))) CROSS JOIN t1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(DISTINCT x'')) AND (t1.c0)));
SELECT COUNT(*) FROM v0, rt0 RIGHT OUTER JOIN vt0 ON (((((+ (t1.c0)))AND(((vt0.c0)LIKE(rt0.c0)))))AND(('888499322' IN ()))) CROSS JOIN t1 ON ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (LOWER(DISTINCT x'')) AND (t1.c0)) WHERE (rt0.c2);
SELECT * FROM t1, rt0, v0, vt0 WHERE (3.79611805E8);
SELECT SUM(count) FROM (SELECT ((3.79611805E8) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT * FROM t1, rt0, v0, vt0 WHERE (3.79611805E8);
SELECT SUM(count) FROM (SELECT ((3.79611805E8) IS TRUE)  as count FROM t1, rt0, v0, vt0);
SELECT * FROM t1, rt0, v0, vt0 WHERE (3.79611805E8);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i92, v0, vt0 WHERE (x'') ORDER BY ((x'')>(((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INDEXED BY i92, v0, vt0 ORDER BY ((x'')>(((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 INDEXED BY i92, v0, vt0 WHERE (x'') ORDER BY ((x'')>(((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM rt0 INDEXED BY i92, v0, vt0 ORDER BY ((x'')>(((((v0.c0)OR(rt0.c3)))AND(rt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((((v0.c0)IS(v0.c0))))>=((NULLIF(v0.c0, v0.c0)))) ASC  NULLS LAST, (NOT (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)IS(v0.c0))))>=((NULLIF(v0.c0, v0.c0)))) ASC  NULLS LAST, (NOT (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((((v0.c0)IS(v0.c0))))>=((NULLIF(v0.c0, v0.c0)))) ASC  NULLS LAST, (NOT (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0)IS(v0.c0))))>=((NULLIF(v0.c0, v0.c0)))) ASC  NULLS LAST, (NOT (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))IS(CASE WHEN v0.c0 THEN v0.c0 END))) ORDER BY (((((v0.c0)IS(v0.c0))))>=((NULLIF(v0.c0, v0.c0)))) ASC  NULLS LAST, (NOT (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS FIRST;
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) ORDER BY ((((v0.c0)<<(v0.c0)))||(((v0.c0) NOT BETWEEN ('0.19353939607327997') AND (v0.c0)))) ASC, (((((v0.c0))>=(('')))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0)))||(((v0.c0) NOT BETWEEN ('0.19353939607327997') AND (v0.c0)))) ASC, (((((v0.c0))>=(('')))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) ORDER BY ((((v0.c0)<<(v0.c0)))||(((v0.c0) NOT BETWEEN ('0.19353939607327997') AND (v0.c0)))) ASC, (((((v0.c0))>=(('')))) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)<<(v0.c0)))||(((v0.c0) NOT BETWEEN ('0.19353939607327997') AND (v0.c0)))) ASC, (((((v0.c0))>=(('')))) NOTNULL) DESC  NULLS FIRST);
SELECT * FROM v0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) NOT NULL)) ORDER BY ((((v0.c0)<<(v0.c0)))||(((v0.c0) NOT BETWEEN ('0.19353939607327997') AND (v0.c0)))) ASC, (((((v0.c0))>=(('')))) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((((('-170084220')OR(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)) IN ())) ORDER BY UNICODE(v0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((('-170084220')OR(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY UNICODE(v0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((((('-170084220')OR(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)) IN ())) ORDER BY UNICODE(v0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((('-170084220')OR(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)) IN ())) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY UNICODE(v0.c0) COLLATE RTRIM ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((((((('-170084220')OR(v0.c0)))OR(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)) IN ())) ORDER BY UNICODE(v0.c0) COLLATE RTRIM ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))OR(((rt0.c2) ISNULL))))OR((+ (NULL)))) LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR((+ (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB))=(TYPEOF(rt0.c1))) WHERE (-707683133 COLLATE RTRIM) ORDER BY NULLIF(((v0.c0)&(rt0.c0)), TYPEOF(DISTINCT rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-707683133 COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))OR(((rt0.c2) ISNULL))))OR((+ (NULL)))) LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR((+ (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB))=(TYPEOF(rt0.c1))) ORDER BY NULLIF(((v0.c0)&(rt0.c0)), TYPEOF(DISTINCT rt0.c1))  NULLS FIRST);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))OR(((rt0.c2) ISNULL))))OR((+ (NULL)))) LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR((+ (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB))=(TYPEOF(rt0.c1))) WHERE (-707683133 COLLATE RTRIM) ORDER BY NULLIF(((v0.c0)&(rt0.c0)), TYPEOF(DISTINCT rt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((-707683133 COLLATE RTRIM) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON ((((((NULL) BETWEEN (v0.c0) AND (rt0.c1)))OR(((rt0.c2) ISNULL))))OR((+ (NULL)))) LEFT OUTER JOIN v0 ON ((((((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))AND(((v0.c0) IS FALSE))))OR((+ (vt0.c0)))) RIGHT OUTER JOIN t1 ON ((CAST(t1.c1 AS BLOB))=(TYPEOF(rt0.c1))) ORDER BY NULLIF(((v0.c0)&(rt0.c0)), TYPEOF(DISTINCT rt0.c1))  NULLS FIRST);
SELECT * FROM rt0, v0 LEFT OUTER JOIN t1 ON (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))=(((~ (v0.c0))))) INNER JOIN vt0 ON ((CAST(t1.c0 AS BLOB)) IS FALSE) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t1 ON (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))==(((~ (v0.c0))))) INNER JOIN vt0 ON ((CAST(t1.c0 AS BLOB)) IS FALSE));
SELECT * FROM rt0, v0 LEFT OUTER JOIN t1 ON (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))=(((~ (v0.c0))))) INNER JOIN vt0 ON ((CAST(t1.c0 AS BLOB)) IS FALSE) WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c0) IS TRUE)  as count FROM rt0, v0 LEFT OUTER JOIN t1 ON (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))==(((~ (v0.c0))))) INNER JOIN vt0 ON ((CAST(t1.c0 AS BLOB)) IS FALSE));
SELECT * FROM rt0, v0 LEFT OUTER JOIN t1 ON (((CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 ELSE rt0.c0 END))=(((~ (v0.c0))))) INNER JOIN vt0 ON ((CAST(t1.c0 AS BLOB)) IS FALSE) WHERE (rt0.c0);
SELECT ALL * FROM vt0, t1 WHERE (x'') ORDER BY t1.c2 ASC  NULLS FIRST, 0.612455049259024  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c2 ASC  NULLS FIRST, 0.612455049259024  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (x'') ORDER BY t1.c2 ASC  NULLS FIRST, 0.612455049259024  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0, t1 ORDER BY t1.c2 ASC  NULLS FIRST, 0.612455049259024  NULLS LAST);
SELECT ALL * FROM vt0, t1 WHERE (x'') ORDER BY t1.c2 ASC  NULLS FIRST, 0.612455049259024  NULLS LAST;
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((((0.9707240257641626)AND((t1.c0 IN ()))))OR(0.2375974282807719)));
SELECT SUM(count) FROM (SELECT ((((((0.9707240257641626)AND((t1.c0 IN ()))))OR(0.2375974282807719))) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((((0.9707240257641626)AND((t1.c0 IN ()))))OR(0.2375974282807719)));
SELECT SUM(count) FROM (SELECT ((((((0.9707240257641626)AND((t1.c0 IN ()))))OR(0.2375974282807719))) IS TRUE)  as count FROM rt0, v0, vt0, t1);
SELECT ALL * FROM rt0, v0, vt0, t1 WHERE (((((0.9707240257641626)AND((t1.c0 IN ()))))OR(0.2375974282807719)));
SELECT * FROM rt0, t1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '2072167864' ELSE vt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM))) LEFT OUTER JOIN v0 ON (((rt0.c1)<<(v0.c0)) IN ()) WHERE (((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 END) AND (((x'')IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 END) AND (((x'')IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '2072167864' ELSE vt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM))) LEFT OUTER JOIN v0 ON (((rt0.c1)<<(v0.c0)) IN ()));
SELECT * FROM rt0, t1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '2072167864' ELSE vt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM))) LEFT OUTER JOIN v0 ON (((rt0.c1)<<(v0.c0)) IN ()) WHERE (((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 END) AND (((x'')IS NOT(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 END) AND (((x'')IS NOT(rt0.c1))))) IS TRUE)  as count FROM rt0, t1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '2072167864' ELSE vt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM))) LEFT OUTER JOIN v0 ON (((rt0.c1)<<(v0.c0)) IN ()));
SELECT * FROM rt0, t1 LEFT OUTER JOIN vt0 ON (((rt0.c0)) NOT BETWEEN ((CASE WHEN t1.c0 THEN '2072167864' ELSE vt0.c0 END)) AND ((rt0.c3 COLLATE RTRIM))) LEFT OUTER JOIN v0 ON (((rt0.c1)<<(v0.c0)) IN ()) WHERE (((x'') NOT BETWEEN (CASE t1.c0  WHEN t1.c0 THEN rt0.c0 WHEN t1.c2 THEN rt0.c0 WHEN t1.c1 THEN rt0.c3 END) AND (((x'')IS NOT(rt0.c1)))));
SELECT COUNT(*) FROM v0, rt0, t1, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT COUNT(*) FROM v0, rt0, t1, vt0 WHERE (rt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt0.c1) IS TRUE)  as count FROM v0, rt0, t1, vt0);
SELECT COUNT(*) FROM v0, rt0, t1, vt0 WHERE (rt0.c1);
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(t1.c0 AS NUMERIC))GLOB((+ (t1.c0)))) WHERE ('0.6075911051820533') ORDER BY (NOT (((vt0.c0)GLOB(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL (('0.6075911051820533') IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(t1.c0 AS NUMERIC))GLOB((+ (t1.c0)))) ORDER BY (NOT (((vt0.c0)GLOB(t1.c1)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(t1.c0 AS NUMERIC))GLOB((+ (t1.c0)))) WHERE ('0.6075911051820533') ORDER BY (NOT (((vt0.c0)GLOB(t1.c1))));
SELECT SUM(count) FROM (SELECT ALL (('0.6075911051820533') IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(t1.c0 AS NUMERIC))GLOB((+ (t1.c0)))) ORDER BY (NOT (((vt0.c0)GLOB(t1.c1)))));
SELECT ALL * FROM t1 RIGHT OUTER JOIN vt0 ON ((CAST(t1.c0 AS NUMERIC))GLOB((+ (t1.c0)))) WHERE ('0.6075911051820533') ORDER BY (NOT (((vt0.c0)GLOB(t1.c1))));
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'jO{pشᘇ' END WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((NULL))) THEN NULL WHEN rt0.c3 THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 COLLATE NOCASE END) ORDER BY (- (rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'jO{pشᘇ' END WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((NULL))) THEN NULL WHEN rt0.c3 THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'jO{pشᘇ' END WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((NULL))) THEN NULL WHEN rt0.c3 THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 COLLATE NOCASE END) ORDER BY (- (rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'jO{pشᘇ' END WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((NULL))) THEN NULL WHEN rt0.c3 THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 COLLATE NOCASE END) IS TRUE)  as count FROM vt0, rt0 ORDER BY (- (rt0.c1)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE 'jO{pشᘇ' END WHEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((NULL))) THEN NULL WHEN rt0.c3 THEN CAST(rt0.c3 AS NUMERIC) WHEN ((rt0.c0) NOTNULL) THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 COLLATE NOCASE END) ORDER BY (- (rt0.c1)) COLLATE NOCASE  NULLS FIRST;
SELECT ALL * FROM rt0, t1 WHERE (0.9637106374081907) ORDER BY x'224f' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9637106374081907) IS TRUE)  as count FROM rt0, t1 ORDER BY x'224f' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (0.9637106374081907) ORDER BY x'224f' COLLATE NOCASE ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.9637106374081907) IS TRUE)  as count FROM rt0, t1 ORDER BY x'224f' COLLATE NOCASE ASC  NULLS LAST);
SELECT ALL * FROM rt0, t1 WHERE (0.9637106374081907) ORDER BY x'224f' COLLATE NOCASE ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((('0.6816649204446226') NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0 ORDER BY (((('0.6816649204446226') NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((('0.6816649204446226') NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM v0 ORDER BY (((('0.6816649204446226') NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (LAST_INSERT_ROWID()) ORDER BY (((('0.6816649204446226') NOT BETWEEN (v0.c0) AND (v0.c0))) IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (ABS(DISTINCT CAST(rt0.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (ABS(DISTINCT CAST(rt0.c3 AS REAL)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT CAST(rt0.c3 AS REAL))) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT COUNT(*) FROM rt0, vt0, t1 WHERE (ABS(DISTINCT CAST(rt0.c3 AS REAL)));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC), ((rt0.c2)>(rt0.c2)), ((0.2258043390820601) BETWEEN (rt0.c0) AND (rt0.c0))))=((rt0.c3 COLLATE RTRIM, (~ (rt0.c0)), (((rt0.c2))<((rt0.c1)))))) WHERE (CAST(('1444143599' IN ()) AS REAL)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (1166509598)))|(IFNULL(DISTINCT '', rt0.c3))) ASC, (+ ((~ (vt0.c0)))) ASC, LENGTH((((('734078005')AND(rt0.c1)))AND(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('1444143599' IN ()) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC), ((rt0.c2)>(rt0.c2)), ((0.2258043390820601) BETWEEN (rt0.c0) AND (rt0.c0))))==((rt0.c3 COLLATE RTRIM, (~ (rt0.c0)), (((rt0.c2))<((rt0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (1166509598)))|(IFNULL(DISTINCT '', rt0.c3))) ASC, (+ ((~ (vt0.c0)))) ASC, LENGTH((((('734078005')AND(rt0.c1)))AND(rt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC), ((rt0.c2)>(rt0.c2)), ((0.2258043390820601) BETWEEN (rt0.c0) AND (rt0.c0))))=((rt0.c3 COLLATE RTRIM, (~ (rt0.c0)), (((rt0.c2))<((rt0.c1)))))) WHERE (CAST(('1444143599' IN ()) AS REAL)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (1166509598)))|(IFNULL(DISTINCT '', rt0.c3))) ASC, (+ ((~ (vt0.c0)))) ASC, LENGTH((((('734078005')AND(rt0.c1)))AND(rt0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(('1444143599' IN ()) AS REAL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC), ((rt0.c2)>(rt0.c2)), ((0.2258043390820601) BETWEEN (rt0.c0) AND (rt0.c0))))==((rt0.c3 COLLATE RTRIM, (~ (rt0.c0)), (((rt0.c2))<((rt0.c1)))))) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (1166509598)))|(IFNULL(DISTINCT '', rt0.c3))) ASC, (+ ((~ (vt0.c0)))) ASC, LENGTH((((('734078005')AND(rt0.c1)))AND(rt0.c0))) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt0 ON (((CAST(rt0.c3 AS NUMERIC), ((rt0.c2)>(rt0.c2)), ((0.2258043390820601) BETWEEN (rt0.c0) AND (rt0.c0))))=((rt0.c3 COLLATE RTRIM, (~ (rt0.c0)), (((rt0.c2))<((rt0.c1)))))) WHERE (CAST(('1444143599' IN ()) AS REAL)) ORDER BY ((((rt0.c0) BETWEEN (rt0.c2) AND (1166509598)))|(IFNULL(DISTINCT '', rt0.c3))) ASC, (+ ((~ (vt0.c0)))) ASC, LENGTH((((('734078005')AND(rt0.c1)))AND(rt0.c0))) DESC;
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOT NULL) WHERE (((CASE rt0.c2  WHEN -1426032345 THEN rt0.c3 ELSE rt0.c3 END)GLOB(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((x'' IN (rt0.c2, rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN 0.3125325743434725 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE '656368906'  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN -1426032345 THEN rt0.c3 ELSE rt0.c3 END)GLOB(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOT NULL) ORDER BY (((x'' IN (rt0.c2, rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN 0.3125325743434725 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE '656368906'  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOT NULL) WHERE (((CASE rt0.c2  WHEN -1426032345 THEN rt0.c3 ELSE rt0.c3 END)GLOB(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((x'' IN (rt0.c2, rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN 0.3125325743434725 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE '656368906'  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT ((((CASE rt0.c2  WHEN -1426032345 THEN rt0.c3 ELSE rt0.c3 END)GLOB(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOT NULL) ORDER BY (((x'' IN (rt0.c2, rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN 0.3125325743434725 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE '656368906'  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC);
SELECT COUNT(*) FROM rt0 CROSS JOIN vt0 ON ((((vt0.c0)%(vt0.c0))) NOT NULL) WHERE (((CASE rt0.c2  WHEN -1426032345 THEN rt0.c3 ELSE rt0.c3 END)GLOB(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY (((x'' IN (rt0.c2, rt0.c0))) NOT BETWEEN (CASE rt0.c1  WHEN 0.3125325743434725 THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 ELSE vt0.c0 END) AND (CASE '656368906'  WHEN vt0.c0 THEN rt0.c1 ELSE vt0.c0 END)) DESC;
SELECT * FROM vt0, t1, v0 WHERE ((((~ (v0.c0)))>>((- (t1.c2))))) ORDER BY (((NULL IN (v0.c0)))>>(((('0.6032514489735572')) NOT BETWEEN ((NULL)) AND ((x'a369')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))>>((- (t1.c2))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY (((NULL IN (v0.c0)))>>(((('0.6032514489735572')) NOT BETWEEN ((NULL)) AND ((x'a369')))))  NULLS LAST);
SELECT * FROM vt0, t1, v0 WHERE ((((~ (v0.c0)))>>((- (t1.c2))))) ORDER BY (((NULL IN (v0.c0)))>>(((('0.6032514489735572')) NOT BETWEEN ((NULL)) AND ((x'a369')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))>>((- (t1.c2))))) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY (((NULL IN (v0.c0)))>>(((('0.6032514489735572')) NOT BETWEEN ((NULL)) AND ((x'a369')))))  NULLS LAST);
SELECT * FROM vt0, t1, v0 WHERE ((((~ (v0.c0)))>>((- (t1.c2))))) ORDER BY (((NULL IN (v0.c0)))>>(((('0.6032514489735572')) NOT BETWEEN ((NULL)) AND ((x'a369')))))  NULLS LAST;
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON LIKELIHOOD(rt0.c1, 0.09743470270119037) COLLATE NOCASE WHERE (((((((((((v0.c0) NOTNULL))AND(((rt0.c0)<(rt0.c2)))))OR(0.6918756369189061)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) NOTNULL))AND(((rt0.c0)<(rt0.c2)))))OR(0.6918756369189061)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(v0.c0))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON LIKELIHOOD(rt0.c1, 0.09743470270119037) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON LIKELIHOOD(rt0.c1, 0.09743470270119037) COLLATE NOCASE WHERE (((((((((((v0.c0) NOTNULL))AND(((rt0.c0)<(rt0.c2)))))OR(0.6918756369189061)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0) NOTNULL))AND(((rt0.c0)<(rt0.c2)))))OR(0.6918756369189061)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(v0.c0))) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON LIKELIHOOD(rt0.c1, 0.09743470270119037) COLLATE NOCASE);
SELECT COUNT(*) FROM v0 FULL OUTER JOIN rt0 ON LIKELIHOOD(rt0.c1, 0.09743470270119037) COLLATE NOCASE WHERE (((((((((((v0.c0) NOTNULL))AND(((rt0.c0)<(rt0.c2)))))OR(0.6918756369189061)))OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))AND(v0.c0)));
SELECT * FROM rt0 CROSS JOIN vt0 ON 0.2636933555094596 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ()))) WHERE ((((x'0eaf'))==((((rt0.c3)>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'0eaf'))==((((rt0.c3)>(rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0.2636933555094596 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ()))));
SELECT * FROM rt0 CROSS JOIN vt0 ON 0.2636933555094596 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ()))) WHERE ((((x'0eaf'))==((((rt0.c3)>(rt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((x'0eaf'))==((((rt0.c3)>(rt0.c0)))))) IS TRUE)  as count FROM rt0 CROSS JOIN vt0 ON 0.2636933555094596 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ()))));
SELECT * FROM rt0 CROSS JOIN vt0 ON 0.2636933555094596 FULL OUTER JOIN v0 ON (CAST(v0.c0 AS NUMERIC) IN (((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), (rt0.c0 IN ()))) WHERE ((((x'0eaf'))==((((rt0.c3)>(rt0.c0))))));
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c0) BETWEEN (vt0.c0) AND (1.117988708E9)) COLLATE BINARY) ORDER BY t1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (vt0.c0) AND (1.117988708E9)) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 ORDER BY t1.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c0) BETWEEN (vt0.c0) AND (1.117988708E9)) COLLATE BINARY) ORDER BY t1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (vt0.c0) AND (1.117988708E9)) COLLATE BINARY) IS TRUE)  as count FROM t1 NOT INDEXED, vt0 ORDER BY t1.c2 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((t1.c0) BETWEEN (vt0.c0) AND (1.117988708E9)) COLLATE BINARY) ORDER BY t1.c2 ASC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((~ ('&,H0)솱+桖')))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ ('&,H0)솱+桖'))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((~ ('&,H0)솱+桖')))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ ('&,H0)솱+桖'))))) IS TRUE)  as count FROM vt0 NOT INDEXED, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((NOT ((~ ('&,H0)솱+桖')))));
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((0.9899022301766969)OR('1444143599')) THEN ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE BINARY  WHEN ((0.9899022301766969)OR('1444143599')) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((0.9899022301766969)OR('1444143599')) THEN ((rt0.c1) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ((CASE rt0.c1 COLLATE BINARY  WHEN ((0.9899022301766969)OR('1444143599')) THEN ((rt0.c1) IS FALSE) END) IS TRUE)  as count FROM t1, rt0, vt0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0 WHERE (CASE rt0.c1 COLLATE BINARY  WHEN ((0.9899022301766969)OR('1444143599')) THEN ((rt0.c1) IS FALSE) END);
SELECT * FROM vt0, v0, rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t1.c2))) NOT BETWEEN ('/2') AND (rt0.c2)) WHERE (((((((((((v0.c0)OR(t1.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) ORDER BY (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((0.7005121486919917)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(t1.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t1.c2))) NOT BETWEEN ('/2') AND (rt0.c2)) ORDER BY (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((0.7005121486919917)))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t1.c2))) NOT BETWEEN ('/2') AND (rt0.c2)) WHERE (((((((((((v0.c0)OR(t1.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) ORDER BY (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((0.7005121486919917)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(t1.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0, v0, rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t1.c2))) NOT BETWEEN ('/2') AND (rt0.c2)) ORDER BY (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((0.7005121486919917)))  NULLS LAST);
SELECT * FROM vt0, v0, rt0 RIGHT OUTER JOIN t1 ON ((((rt0.c0) BETWEEN (rt0.c1) AND (t1.c2))) NOT BETWEEN ('/2') AND (rt0.c2)) WHERE (((((((((((v0.c0)OR(t1.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0))) NOTNULL)) ORDER BY (((rt0.c3)) BETWEEN ((vt0.c0)) AND ((0.7005121486919917)))  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE ((((t1.c1 IN ())) NOT BETWEEN (NULLIF(rt0.c1, rt0.c0)) AND (t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1 IN ())) NOT BETWEEN (NULLIF(rt0.c1, rt0.c0)) AND (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, v0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE ((((t1.c1 IN ())) NOT BETWEEN (NULLIF(rt0.c1, rt0.c0)) AND (t1.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1 IN ())) NOT BETWEEN (NULLIF(rt0.c1, rt0.c0)) AND (t1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM t1, v0, rt0);
SELECT ALL COUNT(*) FROM t1, v0, rt0 WHERE ((((t1.c1 IN ())) NOT BETWEEN (NULLIF(rt0.c1, rt0.c0)) AND (t1.c1 COLLATE RTRIM)));
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)&(((rt0.c0)*(rt0.c1))))) ORDER BY CASE (rt0.c0 IN ())  WHEN CASE rt0.c1  WHEN -56623927 THEN x'' WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN (0X3c06c5c6 IN ()) ELSE ((rt0.c2) IS TRUE) END  NULLS LAST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN '39758898' WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'f59d')) THEN CASE rt0.c1  WHEN '-1857932539' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')) END ASC, 0.2237093784442281;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)&(((rt0.c0)*(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN CASE rt0.c1  WHEN -56623927 THEN x'' WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN (0X3c06c5c6 IN ()) ELSE ((rt0.c2) IS TRUE) END  NULLS LAST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN '39758898' WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'f59d')) THEN CASE rt0.c1  WHEN '-1857932539' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')) END ASC, 0.2237093784442281);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)&(((rt0.c0)*(rt0.c1))))) ORDER BY CASE (rt0.c0 IN ())  WHEN CASE rt0.c1  WHEN -56623927 THEN x'' WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN (0X3c06c5c6 IN ()) ELSE ((rt0.c2) IS TRUE) END  NULLS LAST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN '39758898' WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'f59d')) THEN CASE rt0.c1  WHEN '-1857932539' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')) END ASC, 0.2237093784442281;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c3 COLLATE NOCASE)&(((rt0.c0)*(rt0.c1))))) IS TRUE)  as count FROM rt0 ORDER BY CASE (rt0.c0 IN ())  WHEN CASE rt0.c1  WHEN -56623927 THEN x'' WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN (0X3c06c5c6 IN ()) ELSE ((rt0.c2) IS TRUE) END  NULLS LAST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN '39758898' WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'f59d')) THEN CASE rt0.c1  WHEN '-1857932539' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')) END ASC, 0.2237093784442281);
SELECT * FROM rt0 WHERE (((rt0.c3 COLLATE NOCASE)&(((rt0.c0)*(rt0.c1))))) ORDER BY CASE (rt0.c0 IN ())  WHEN CASE rt0.c1  WHEN -56623927 THEN x'' WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c3 END THEN (0X3c06c5c6 IN ()) ELSE ((rt0.c2) IS TRUE) END  NULLS LAST, CASE WHEN CAST(rt0.c3 AS TEXT) THEN '39758898' WHEN ((rt0.c3) BETWEEN (rt0.c3) AND (x'f59d')) THEN CASE rt0.c1  WHEN '-1857932539' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')) END ASC, 0.2237093784442281;
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))  WHEN (NOT (t1.c2)) THEN CASE rt0.c2  WHEN t1.c0 THEN t1.c2 END ELSE ((rt0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))  WHEN (NOT (t1.c2)) THEN CASE rt0.c2  WHEN t1.c0 THEN t1.c2 END ELSE ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM t1, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))  WHEN (NOT (t1.c2)) THEN CASE rt0.c2  WHEN t1.c0 THEN t1.c2 END ELSE ((rt0.c2) IS FALSE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))  WHEN (NOT (t1.c2)) THEN CASE rt0.c2  WHEN t1.c0 THEN t1.c2 END ELSE ((rt0.c2) IS FALSE) END) IS TRUE)  as count FROM t1, v0, rt0);
SELECT COUNT(*) FROM t1, v0, rt0 WHERE (CASE ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t1.c1))  WHEN (NOT (t1.c2)) THEN CASE rt0.c2  WHEN t1.c0 THEN t1.c2 END ELSE ((rt0.c2) IS FALSE) END);
SELECT * FROM t1, rt0 INNER JOIN v0 ON (((rt0.c3 IN (t1.c2))) NOT NULL) WHERE (CAST(0.14922720446282967 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.14922720446282967 AS TEXT)) IS TRUE)  as count FROM t1, rt0 INNER JOIN v0 ON (((rt0.c3 IN (t1.c2))) NOT NULL));
SELECT * FROM t1, rt0 INNER JOIN v0 ON (((rt0.c3 IN (t1.c2))) NOT NULL) WHERE (CAST(0.14922720446282967 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(0.14922720446282967 AS TEXT)) IS TRUE)  as count FROM t1, rt0 INNER JOIN v0 ON (((rt0.c3 IN (t1.c2))) NOT NULL));
SELECT * FROM t1, rt0 INNER JOIN v0 ON (((rt0.c3 IN (t1.c2))) NOT NULL) WHERE (CAST(0.14922720446282967 AS TEXT));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t1 WHERE ('G㹭鿁n埛&1y1');
SELECT SUM(count) FROM (SELECT ALL (('G㹭鿁n埛&1y1') IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t1 WHERE ('G㹭鿁n埛&1y1');
SELECT SUM(count) FROM (SELECT ALL (('G㹭鿁n埛&1y1') IS TRUE)  as count FROM vt0, v0, rt0, t1);
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t1 WHERE ('G㹭鿁n埛&1y1');
SELECT ALL * FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT SUM(count) FROM (SELECT ALL ((t1.c0) IS TRUE)  as count FROM rt0, vt0, t1);
SELECT ALL * FROM rt0, vt0, t1 WHERE (t1.c0);
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE ((t1.c0) NOTNULL)  WHEN HEX(v0.c0) THEN (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))) WHEN t1.c1 COLLATE RTRIM THEN ((0.1877430805791548) BETWEEN (vt0.c0) AND (t1.c2)) WHEN (t1.c1 IN ()) THEN (~ (v0.c0)) ELSE v0.c0 COLLATE BINARY END WHERE ((((((t1.c2)>=(t1.c0)), t1.c1, ((vt0.c0)>(t1.c2))))==(((~ (t1.c0)), ((t1.c0)LIKE(t1.c2)), ((t1.c0)AND(t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)>=(t1.c0)), t1.c1, ((vt0.c0)>(t1.c2))))==(((~ (t1.c0)), ((t1.c0)LIKE(t1.c2)), ((t1.c0)AND(t1.c1)))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE ((t1.c0) NOTNULL)  WHEN HEX(v0.c0) THEN (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))) WHEN t1.c1 COLLATE RTRIM THEN ((0.1877430805791548) BETWEEN (vt0.c0) AND (t1.c2)) WHEN (t1.c1 IN ()) THEN (~ (v0.c0)) ELSE v0.c0 COLLATE BINARY END);
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE ((t1.c0) NOTNULL)  WHEN HEX(v0.c0) THEN (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))) WHEN t1.c1 COLLATE RTRIM THEN ((0.1877430805791548) BETWEEN (vt0.c0) AND (t1.c2)) WHEN (t1.c1 IN ()) THEN (~ (v0.c0)) ELSE v0.c0 COLLATE BINARY END WHERE ((((((t1.c2)>=(t1.c0)), t1.c1, ((vt0.c0)>(t1.c2))))==(((~ (t1.c0)), ((t1.c0)LIKE(t1.c2)), ((t1.c0)AND(t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c2)>=(t1.c0)), t1.c1, ((vt0.c0)>(t1.c2))))==(((~ (t1.c0)), ((t1.c0)LIKE(t1.c2)), ((t1.c0)AND(t1.c1)))))) IS TRUE)  as count FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE ((t1.c0) NOTNULL)  WHEN HEX(v0.c0) THEN (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))) WHEN t1.c1 COLLATE RTRIM THEN ((0.1877430805791548) BETWEEN (vt0.c0) AND (t1.c2)) WHEN (t1.c1 IN ()) THEN (~ (v0.c0)) ELSE v0.c0 COLLATE BINARY END);
SELECT * FROM t1, vt0 LEFT OUTER JOIN v0 ON CASE ((t1.c0) NOTNULL)  WHEN HEX(v0.c0) THEN (((t1.c0)) BETWEEN ((v0.c0)) AND ((t1.c2))) WHEN t1.c1 COLLATE RTRIM THEN ((0.1877430805791548) BETWEEN (vt0.c0) AND (t1.c2)) WHEN (t1.c1 IN ()) THEN (~ (v0.c0)) ELSE v0.c0 COLLATE BINARY END WHERE ((((((t1.c2)>=(t1.c0)), t1.c1, ((vt0.c0)>(t1.c2))))==(((~ (t1.c0)), ((t1.c0)LIKE(t1.c2)), ((t1.c0)AND(t1.c1))))));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (0.021763926447201487))) ORDER BY ((((((((((0Xffffffff98b50167)AND(rt0.c0)))AND(0.9439307071684251)))OR(vt0.c0)))OR(rt0.c3))) BETWEEN (rt0.c3) AND (UNLIKELY(rt0.c1))) ASC  NULLS FIRST, (((((((0x2ad26856))>((vt0.c0))))AND((rt0.c2 IN ()))))OR(((((0X16192c0f)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (0.021763926447201487))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((0Xffffffff98b50167)AND(rt0.c0)))AND(0.9439307071684251)))OR(vt0.c0)))OR(rt0.c3))) BETWEEN (rt0.c3) AND (UNLIKELY(rt0.c1))) ASC  NULLS FIRST, (((((((0x2ad26856))>((vt0.c0))))AND((rt0.c2 IN ()))))OR(((((0X16192c0f)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (0.021763926447201487))) ORDER BY ((((((((((0Xffffffff98b50167)AND(rt0.c0)))AND(0.9439307071684251)))OR(vt0.c0)))OR(rt0.c3))) BETWEEN (rt0.c3) AND (UNLIKELY(rt0.c1))) ASC  NULLS FIRST, (((((((0x2ad26856))>((vt0.c0))))AND((rt0.c2 IN ()))))OR(((((0X16192c0f)OR(vt0.c0)))AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((+ (0.021763926447201487))) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((((((((0Xffffffff98b50167)AND(rt0.c0)))AND(0.9439307071684251)))OR(vt0.c0)))OR(rt0.c3))) BETWEEN (rt0.c3) AND (UNLIKELY(rt0.c1))) ASC  NULLS FIRST, (((((((0x2ad26856))>((vt0.c0))))AND((rt0.c2 IN ()))))OR(((((0X16192c0f)OR(vt0.c0)))AND(vt0.c0)))));
SELECT ALL * FROM rt0, vt0 WHERE ((+ (0.021763926447201487))) ORDER BY ((((((((((0Xffffffff98b50167)AND(rt0.c0)))AND(0.9439307071684251)))OR(vt0.c0)))OR(rt0.c3))) BETWEEN (rt0.c3) AND (UNLIKELY(rt0.c1))) ASC  NULLS FIRST, (((((((0x2ad26856))>((vt0.c0))))AND((rt0.c2 IN ()))))OR(((((0X16192c0f)OR(vt0.c0)))AND(vt0.c0))));
SELECT ALL * FROM v0, vt0, t1 WHERE (((((v0.c0) NOTNULL))+(CAST(vt0.c0 AS BLOB)))) ORDER BY (((t1.c1 IN ()))*(((vt0.c0) ISNULL))) DESC  NULLS LAST, t1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))+(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (((t1.c1 IN ()))*(((vt0.c0) ISNULL))) DESC  NULLS LAST, t1.c1  NULLS LAST);
SELECT ALL * FROM v0, vt0, t1 WHERE (((((v0.c0) NOTNULL))+(CAST(vt0.c0 AS BLOB)))) ORDER BY (((t1.c1 IN ()))*(((vt0.c0) ISNULL))) DESC  NULLS LAST, t1.c1  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL))+(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt0, t1 ORDER BY (((t1.c1 IN ()))*(((vt0.c0) ISNULL))) DESC  NULLS LAST, t1.c1  NULLS LAST);
SELECT ALL * FROM v0, vt0, t1 WHERE (((((v0.c0) NOTNULL))+(CAST(vt0.c0 AS BLOB)))) ORDER BY (((t1.c1 IN ()))*(((vt0.c0) ISNULL))) DESC  NULLS LAST, t1.c1  NULLS LAST;
SELECT ALL * FROM vt0, t1, v0 WHERE ((((v0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND (((t1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND (((t1.c1 IN ()))))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((v0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND (((t1.c1 IN ())))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND (((t1.c1 IN ()))))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL * FROM vt0, t1, v0 WHERE ((((v0.c0)) BETWEEN ((((t1.c0) NOT NULL))) AND (((t1.c1 IN ())))));
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE ((('-1370897999')>=(((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1370897999')>=(((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE ((('-1370897999')>=(((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1370897999')>=(((((rt0.c1)AND(rt0.c3)))AND(vt0.c0))))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE ((('-1370897999')>=(((((rt0.c1)AND(rt0.c3)))AND(vt0.c0)))));
SELECT ALL * FROM rt0 WHERE (((((json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c3))AND(rt0.c1)))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c3))AND(rt0.c1)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (((((json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c3))AND(rt0.c1)))AND((~ (rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((json_remove(rt0.c2, rt0.c0, rt0.c1, rt0.c3))AND(rt0.c1)))AND((~ (rt0.c1))))) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((((((rt0.c1) IS FALSE))AND(((rt0.c3)IS NOT(t1.c1)))))OR(ABS(rt0.c1)))) ORDER BY CAST(t1.c1 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))AND(((rt0.c3)IS NOT(t1.c1)))))OR(ABS(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(t1.c1 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((((((rt0.c1) IS FALSE))AND(((rt0.c3)IS NOT(t1.c1)))))OR(ABS(rt0.c1)))) ORDER BY CAST(t1.c1 AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1) IS FALSE))AND(((rt0.c3)IS NOT(t1.c1)))))OR(ABS(rt0.c1)))) IS TRUE)  as count FROM vt0, rt0, t1 ORDER BY CAST(t1.c1 AS BLOB)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0, t1 WHERE (((((((rt0.c1) IS FALSE))AND(((rt0.c3)IS NOT(t1.c1)))))OR(ABS(rt0.c1)))) ORDER BY CAST(t1.c1 AS BLOB)  NULLS FIRST;
SELECT ALL * FROM t1, vt0 WHERE ((- (CAST(t1.c1 AS TEXT)))) ORDER BY CASE WHEN ((t1.c2)<=(t1.c2)) THEN ((t1.c1)>=(t1.c0)) END DESC  NULLS FIRST, CASE (((0.08768861168903574)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))  WHEN (+ (vt0.c0)) THEN ((x'141d') BETWEEN (t1.c2) AND (t1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c1 AS TEXT)))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE WHEN ((t1.c2)<=(t1.c2)) THEN ((t1.c1)>=(t1.c0)) END DESC  NULLS FIRST, CASE (((0.08768861168903574)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))  WHEN (+ (vt0.c0)) THEN ((x'141d') BETWEEN (t1.c2) AND (t1.c0)) END  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((- (CAST(t1.c1 AS TEXT)))) ORDER BY CASE WHEN ((t1.c2)<=(t1.c2)) THEN ((t1.c1)>=(t1.c0)) END DESC  NULLS FIRST, CASE (((0.08768861168903574)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))  WHEN (+ (vt0.c0)) THEN ((x'141d') BETWEEN (t1.c2) AND (t1.c0)) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(t1.c1 AS TEXT)))) IS TRUE)  as count FROM t1, vt0 ORDER BY CASE WHEN ((t1.c2)<=(t1.c2)) THEN ((t1.c1)>=(t1.c0)) END DESC  NULLS FIRST, CASE (((0.08768861168903574)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))  WHEN (+ (vt0.c0)) THEN ((x'141d') BETWEEN (t1.c2) AND (t1.c0)) END  NULLS FIRST);
SELECT ALL * FROM t1, vt0 WHERE ((- (CAST(t1.c1 AS TEXT)))) ORDER BY CASE WHEN ((t1.c2)<=(t1.c2)) THEN ((t1.c1)>=(t1.c0)) END DESC  NULLS FIRST, CASE (((0.08768861168903574)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0)))  WHEN (+ (vt0.c0)) THEN ((x'141d') BETWEEN (t1.c2) AND (t1.c0)) END  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INDEXED BY i92 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY 0xfffffffffb4432c7 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i92 ORDER BY 0Xfffffffffb4432c7 ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 INDEXED BY i92 WHERE ((rt0.c2 COLLATE RTRIM IN ())) ORDER BY 0xfffffffffb4432c7 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((rt0.c2 COLLATE RTRIM IN ())) IS TRUE)  as count FROM rt0 INDEXED BY i92 ORDER BY 0Xfffffffffb4432c7 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3 IN ('-1078407340', vt0.c0))) IS TRUE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ('-1078407340', vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3 IN ('-1078407340', vt0.c0))) IS TRUE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ('-1078407340', vt0.c0))) IS TRUE)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE ((((rt0.c3 IN ('-1078407340', vt0.c0))) IS TRUE)) ORDER BY ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END) NOT BETWEEN (x'') AND ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY CAST(((vt0.c0)AND(vt0.c0)) AS NUMERIC)  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 COLLATE NOCASE IN ())) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((vt0.c0 COLLATE NOCASE IN ()));
SELECT ALL * FROM v0 WHERE (((STRFTIME(v0.c0, v0.c0, v0.c0))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((~ (0.4471278788662746))) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(v0.c0, v0.c0, v0.c0))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (0.4471278788662746))) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)>(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((STRFTIME(v0.c0, v0.c0, v0.c0))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((~ (0.4471278788662746))) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)>(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((STRFTIME(v0.c0, v0.c0, v0.c0))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY (((~ (0.4471278788662746))) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)>(v0.c0)))));
SELECT ALL * FROM v0 WHERE (((STRFTIME(v0.c0, v0.c0, v0.c0))*(((v0.c0) BETWEEN (v0.c0) AND (v0.c0))))) ORDER BY (((~ (0.4471278788662746))) BETWEEN (((v0.c0)<=(v0.c0))) AND (((v0.c0)>(v0.c0))));
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)) COLLATE BINARY WHERE ((((NOT (rt0.c1)))%(((rt0.c0)IS NOT(rt0.c3))))) ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))%(((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)) COLLATE BINARY ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)) COLLATE BINARY WHERE ((((NOT (rt0.c1)))%(((rt0.c0)IS NOT(rt0.c3))))) ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (rt0.c1)))%(((rt0.c0)IS NOT(rt0.c3))))) IS TRUE)  as count FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)) COLLATE BINARY ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY  NULLS FIRST);
SELECT COUNT(*) FROM rt0 RIGHT OUTER JOIN vt0 ON rt0.c2 LEFT OUTER JOIN v0 ON ((rt0.c3) NOT BETWEEN (rt0.c1) AND (NULL)) COLLATE BINARY WHERE ((((NOT (rt0.c1)))%(((rt0.c0)IS NOT(rt0.c3))))) ORDER BY ((rt0.c1) IS TRUE) COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0, v0 WHERE ((- (rt0.c3)) COLLATE NOCASE) ORDER BY CASE WHEN t1.c1 THEN ((rt0.c0) IS TRUE) END DESC, ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c2)))OR(((((((((0.2696002088466357)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(t1.c1)))))AND(((t1.c1)/(t1.c0)))))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN rt0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((rt0.c1 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY CASE WHEN t1.c1 THEN ((rt0.c0) IS TRUE) END DESC, ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c2)))OR(((((((((0.2696002088466357)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(t1.c1)))))AND(((t1.c1)/(t1.c0)))))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN rt0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((rt0.c1 COLLATE BINARY) NOT NULL) ASC);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE ((- (rt0.c3)) COLLATE NOCASE) ORDER BY CASE WHEN t1.c1 THEN ((rt0.c0) IS TRUE) END DESC, ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c2)))OR(((((((((0.2696002088466357)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(t1.c1)))))AND(((t1.c1)/(t1.c0)))))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN rt0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((rt0.c1 COLLATE BINARY) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((- (rt0.c3)) COLLATE NOCASE) IS TRUE)  as count FROM t1, rt0, v0 ORDER BY CASE WHEN t1.c1 THEN ((rt0.c0) IS TRUE) END DESC, ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c2)))OR(((((((((0.2696002088466357)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(t1.c1)))))AND(((t1.c1)/(t1.c0)))))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN rt0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((rt0.c1 COLLATE BINARY) NOT NULL) ASC);
SELECT COUNT(*) FROM t1, rt0, v0 WHERE ((- (rt0.c3)) COLLATE NOCASE) ORDER BY CASE WHEN t1.c1 THEN ((rt0.c0) IS TRUE) END DESC, ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (t1.c2)))OR(((((((((0.2696002088466357)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c0)))AND(t1.c1)))))AND(((t1.c1)/(t1.c0)))))AND(CASE WHEN v0.c0 THEN t1.c2 WHEN rt0.c0 THEN rt0.c3 WHEN v0.c0 THEN v0.c0 END)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))), ((rt0.c1 COLLATE BINARY) NOT NULL) ASC;
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)-(rt0.c2)) THEN ((rt0.c3)>=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)-(rt0.c2)) THEN ((rt0.c3)>=(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)-(rt0.c2)) THEN ((rt0.c3)>=(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)-(rt0.c2)) THEN ((rt0.c3)>=(rt0.c0)) END) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CASE CASE WHEN rt0.c1 THEN vt0.c0 ELSE rt0.c2 END  WHEN ((vt0.c0)-(rt0.c2)) THEN ((rt0.c3)>=(rt0.c0)) END);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (GLOB((((rt0.c0))>((rt0.c3))), CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((rt0.c0))>((rt0.c3))), CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (GLOB((((rt0.c0))>((rt0.c3))), CAST(v0.c0 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((rt0.c0))>((rt0.c3))), CAST(v0.c0 AS REAL))) IS TRUE)  as count FROM v0, rt0);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE (GLOB((((rt0.c0))>((rt0.c3))), CAST(v0.c0 AS REAL)));
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t1, vt0 WHERE (((((((((((vt0.c0)OR(v0.c0)))AND('Wx<z&')))AND(t1.c0)))AND(vt0.c0)))&(((vt0.c0)|(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(v0.c0)))AND('Wx<z&')))AND(t1.c0)))AND(vt0.c0)))&(((vt0.c0)|(t1.c2))))) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t1, vt0 WHERE (((((((((((vt0.c0)OR(v0.c0)))AND('Wx<z&')))AND(t1.c0)))AND(vt0.c0)))&(((vt0.c0)|(t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c0)OR(v0.c0)))AND('Wx<z&')))AND(t1.c0)))AND(vt0.c0)))&(((vt0.c0)|(t1.c2))))) IS TRUE)  as count FROM v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t1, vt0 WHERE (((((((((((vt0.c0)OR(v0.c0)))AND('Wx<z&')))AND(t1.c0)))AND(vt0.c0)))&(((vt0.c0)|(t1.c2)))));
SELECT COUNT(*) FROM rt0, v0, t1 NATURAL JOIN vt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM rt0, v0, t1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, v0, t1 NATURAL JOIN vt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM rt0, v0, t1 NATURAL JOIN vt0);
SELECT COUNT(*) FROM rt0, v0, t1 NATURAL JOIN vt0 WHERE (t1.c2);
SELECT ALL * FROM t1, rt0 WHERE (((0xffffffff91d66658)||(rt0.c0))) ORDER BY NULL ASC, (((((t1.c2) BETWEEN (rt0.c2) AND (rt0.c3))))>((((t1.c2) IS FALSE))))  NULLS FIRST, ((((((((((t1.c1)OR(0.956641529222959)))OR('')))AND(rt0.c0)))OR(t1.c1))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff91d66658)||(rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY NULL ASC, (((((t1.c2) BETWEEN (rt0.c2) AND (rt0.c3))))>((((t1.c2) IS FALSE))))  NULLS FIRST, ((((((((((t1.c1)OR(0.956641529222959)))OR('')))AND(rt0.c0)))OR(t1.c1))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)))) ASC);
SELECT ALL * FROM t1, rt0 WHERE (((0xffffffff91d66658)||(rt0.c0))) ORDER BY NULL ASC, (((((t1.c2) BETWEEN (rt0.c2) AND (rt0.c3))))>((((t1.c2) IS FALSE))))  NULLS FIRST, ((((((((((t1.c1)OR(0.956641529222959)))OR('')))AND(rt0.c0)))OR(t1.c1))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff91d66658)||(rt0.c0))) IS TRUE)  as count FROM t1, rt0 ORDER BY NULL ASC, (((((t1.c2) BETWEEN (rt0.c2) AND (rt0.c3))))>((((t1.c2) IS FALSE))))  NULLS FIRST, ((((((((((t1.c1)OR(0.956641529222959)))OR('')))AND(rt0.c0)))OR(t1.c1))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)))) ASC);
SELECT ALL * FROM t1, rt0 WHERE (((0xffffffff91d66658)||(rt0.c0))) ORDER BY NULL ASC, (((((t1.c2) BETWEEN (rt0.c2) AND (rt0.c3))))>((((t1.c2) IS FALSE))))  NULLS FIRST, ((((((((((t1.c1)OR(0.956641529222959)))OR('')))AND(rt0.c0)))OR(t1.c1))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((rt0.c0) BETWEEN (t1.c2) AND (t1.c2)))) ASC;
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN (((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN (((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((rt0.c0 IN ()) IN (((((rt0.c1)AND(vt0.c0)))OR(rt0.c1))))) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((rt0.c0 IN ()) IN (((((rt0.c1)AND(vt0.c0)))OR(rt0.c1)))));
SELECT COUNT(*) FROM t1, rt0 WHERE (0.6172062249415025);
SELECT SUM(count) FROM (SELECT ALL ((0.6172062249415025) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (0.6172062249415025);
SELECT SUM(count) FROM (SELECT ALL ((0.6172062249415025) IS TRUE)  as count FROM t1, rt0);
SELECT COUNT(*) FROM t1, rt0 WHERE (0.6172062249415025);
SELECT * FROM v0, vt0, t1, rt0 WHERE ((((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) AND ((((rt0.c1) IS TRUE))))) ORDER BY ((0.1607697179098827)IS NOT(UNICODE(v0.c0))) ASC  NULLS FIRST, ((((rt0.c2)>(rt0.c1))) BETWEEN (((((((((((((vt0.c0)OR('1823671303')))AND(rt0.c0)))OR(t1.c1)))OR(t1.c0)))OR(rt0.c0)))AND(t1.c0))) AND (((t1.c0)&(vt0.c0)))) ASC  NULLS FIRST, ((NULL)|(CASE WHEN rt0.c3 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM v0, vt0, t1, rt0 ORDER BY ((0.1607697179098827)IS NOT(UNICODE(v0.c0))) ASC  NULLS FIRST, ((((rt0.c2)>(rt0.c1))) BETWEEN (((((((((((((vt0.c0)OR('1823671303')))AND(rt0.c0)))OR(t1.c1)))OR(t1.c0)))OR(rt0.c0)))AND(t1.c0))) AND (((t1.c0)&(vt0.c0)))) ASC  NULLS FIRST, ((NULL)|(CASE WHEN rt0.c3 THEN v0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, t1, rt0 WHERE ((((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) AND ((((rt0.c1) IS TRUE))))) ORDER BY ((0.1607697179098827)IS NOT(UNICODE(v0.c0))) ASC  NULLS FIRST, ((((rt0.c2)>(rt0.c1))) BETWEEN (((((((((((((vt0.c0)OR('1823671303')))AND(rt0.c0)))OR(t1.c1)))OR(t1.c0)))OR(rt0.c0)))AND(t1.c0))) AND (((t1.c0)&(vt0.c0)))) ASC  NULLS FIRST, ((NULL)|(CASE WHEN rt0.c3 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) AND ((((rt0.c1) IS TRUE))))) IS TRUE)  as count FROM v0, vt0, t1, rt0 ORDER BY ((0.1607697179098827)IS NOT(UNICODE(v0.c0))) ASC  NULLS FIRST, ((((rt0.c2)>(rt0.c1))) BETWEEN (((((((((((((vt0.c0)OR('1823671303')))AND(rt0.c0)))OR(t1.c1)))OR(t1.c0)))OR(rt0.c0)))AND(t1.c0))) AND (((t1.c0)&(vt0.c0)))) ASC  NULLS FIRST, ((NULL)|(CASE WHEN rt0.c3 THEN v0.c0 END)) ASC  NULLS FIRST);
SELECT * FROM v0, vt0, t1, rt0 WHERE ((((vt0.c0)) BETWEEN ((((v0.c0) BETWEEN (t1.c1) AND (t1.c2)))) AND ((((rt0.c1) IS TRUE))))) ORDER BY ((0.1607697179098827)IS NOT(UNICODE(v0.c0))) ASC  NULLS FIRST, ((((rt0.c2)>(rt0.c1))) BETWEEN (((((((((((((vt0.c0)OR('1823671303')))AND(rt0.c0)))OR(t1.c1)))OR(t1.c0)))OR(rt0.c0)))AND(t1.c0))) AND (((t1.c0)&(vt0.c0)))) ASC  NULLS FIRST, ((NULL)|(CASE WHEN rt0.c3 THEN v0.c0 END)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt0 INDEXED BY i92, v0, t1, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INDEXED BY i92, v0, t1, vt0);
SELECT COUNT(*) FROM rt0 INDEXED BY i92, v0, t1, vt0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM rt0 INDEXED BY i92, v0, t1, vt0);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i4 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) AS INTEGER)) ORDER BY ((DATETIME(v0.c0, v0.c0, v0.c0))IS NOT((((v0.c0))<>((v0.c0)))))  NULLS FIRST, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 INDEXED BY i4 ORDER BY ((DATETIME(v0.c0, v0.c0, v0.c0))IS NOT((((v0.c0))!=((v0.c0)))))  NULLS FIRST, v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 INDEXED BY i4 WHERE (CAST((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))) AS INTEGER)) ORDER BY ((DATETIME(v0.c0, v0.c0, v0.c0))IS NOT((((v0.c0))<>((v0.c0)))))  NULLS FIRST, v0.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((((v0.c0, v0.c0, v0.c0))!=((v0.c0, v0.c0, v0.c0))) AS INTEGER)) IS TRUE)  as count FROM v0 INDEXED BY i4 ORDER BY ((DATETIME(v0.c0, v0.c0, v0.c0))IS NOT((((v0.c0))!=((v0.c0)))))  NULLS FIRST, v0.c0 ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (LIKELIHOOD(0.09053691901212824, 0.9287793759174429)) ORDER BY (((((t1.c2))<>((vt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(0.09053691901212824, 0.9287793759174429)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY (((((t1.c2))!=((vt0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (LIKELIHOOD(0.09053691901212824, 0.9287793759174429)) ORDER BY (((((t1.c2))<>((vt0.c0)))) NOTNULL);
SELECT SUM(count) FROM (SELECT ((LIKELIHOOD(0.09053691901212824, 0.9287793759174429)) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY (((((t1.c2))!=((vt0.c0)))) NOTNULL));
SELECT ALL COUNT(*) FROM v0, t1, vt0 WHERE (LIKELIHOOD(0.09053691901212824, 0.9287793759174429)) ORDER BY (((((t1.c2))<>((vt0.c0)))) NOTNULL);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c0)||(t1.c0))  WHEN (- (t1.c1)) THEN ((((((((((((rt0.c3)OR('>-ﶭp0kc언')))OR(rt0.c0)))OR(rt0.c2)))OR(t1.c2)))AND(rt0.c0)))OR(x'a9ab')) WHEN ((t1.c2)-(t1.c2)) THEN ((rt0.c3)&(t1.c1)) WHEN (+ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c2 WHEN t1.c2 THEN rt0.c2 END WHEN (((t1.c2))<>((t1.c2))) THEN (~ (x'')) WHEN COALESCE(t1.c2, rt0.c1) THEN UNLIKELY(DISTINCT 0.1291046770770804) ELSE ((rt0.c0) NOT NULL) END LEFT OUTER JOIN vt0 ON ((rt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.23882827089146663))) WHERE ((~ (t1.c2))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c0) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c0)||(t1.c0))  WHEN (- (t1.c1)) THEN ((((((((((((rt0.c3)OR('>-ﶭp0kc언')))OR(rt0.c0)))OR(rt0.c2)))OR(t1.c2)))AND(rt0.c0)))OR(x'a9ab')) WHEN ((t1.c2)-(t1.c2)) THEN ((rt0.c3)&(t1.c1)) WHEN (+ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c2 WHEN t1.c2 THEN rt0.c2 END WHEN (((t1.c2))!=((t1.c2))) THEN (~ (x'')) WHEN COALESCE(t1.c2, rt0.c1) THEN UNLIKELY(DISTINCT 0.1291046770770804) ELSE ((rt0.c0) NOT NULL) END LEFT OUTER JOIN vt0 ON ((rt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.23882827089146663))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c0) COLLATE BINARY DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c0)||(t1.c0))  WHEN (- (t1.c1)) THEN ((((((((((((rt0.c3)OR('>-ﶭp0kc언')))OR(rt0.c0)))OR(rt0.c2)))OR(t1.c2)))AND(rt0.c0)))OR(x'a9ab')) WHEN ((t1.c2)-(t1.c2)) THEN ((rt0.c3)&(t1.c1)) WHEN (+ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c2 WHEN t1.c2 THEN rt0.c2 END WHEN (((t1.c2))<>((t1.c2))) THEN (~ (x'')) WHEN COALESCE(t1.c2, rt0.c1) THEN UNLIKELY(DISTINCT 0.1291046770770804) ELSE ((rt0.c0) NOT NULL) END LEFT OUTER JOIN vt0 ON ((rt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.23882827089146663))) WHERE ((~ (t1.c2))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c0) COLLATE BINARY DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((~ (t1.c2))) IS TRUE)  as count FROM rt0 FULL OUTER JOIN t1 ON CASE ((rt0.c0)||(t1.c0))  WHEN (- (t1.c1)) THEN ((((((((((((rt0.c3)OR('>-ﶭp0kc언')))OR(rt0.c0)))OR(rt0.c2)))OR(t1.c2)))AND(rt0.c0)))OR(x'a9ab')) WHEN ((t1.c2)-(t1.c2)) THEN ((rt0.c3)&(t1.c1)) WHEN (+ (rt0.c1)) THEN CASE WHEN vt0.c0 THEN rt0.c3 WHEN t1.c0 THEN rt0.c2 WHEN t1.c2 THEN rt0.c2 END WHEN (((t1.c2))!=((t1.c2))) THEN (~ (x'')) WHEN COALESCE(t1.c2, rt0.c1) THEN UNLIKELY(DISTINCT 0.1291046770770804) ELSE ((rt0.c0) NOT NULL) END LEFT OUTER JOIN vt0 ON ((rt0.c1) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0))) AND (LIKELIHOOD(DISTINCT rt0.c1, 0.23882827089146663))) ORDER BY SQLITE_COMPILEOPTION_GET(t1.c0) COLLATE BINARY DESC  NULLS LAST);
SELECT COUNT(*) FROM t1, v0, vt0, rt0 WHERE (CASE WHEN (- (rt0.c1)) THEN x'' END) ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN x'' END) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL) ASC);
SELECT COUNT(*) FROM t1, v0, vt0, rt0 WHERE (CASE WHEN (- (rt0.c1)) THEN x'' END) ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (- (rt0.c1)) THEN x'' END) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL) ASC);
SELECT COUNT(*) FROM t1, v0, vt0, rt0 WHERE (CASE WHEN (- (rt0.c1)) THEN x'' END) ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL) ASC;
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)IS(CAST(t1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)IS(CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)IS(CAST(t1.c1 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ((((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)IS(CAST(t1.c1 AS INTEGER)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE (((CASE t1.c1  WHEN t1.c1 THEN t1.c1 WHEN t1.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c0 END)IS(CAST(t1.c1 AS INTEGER))));
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))+(((rt0.c3)&(rt0.c0))))) ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c1 IN ()))) AND ((rt0.c2 COLLATE RTRIM, rt0.c2 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(rt0.c0)))+(((rt0.c3)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c1 IN ()))) AND ((rt0.c2 COLLATE RTRIM, rt0.c2 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))+(((rt0.c3)&(rt0.c0))))) ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c1 IN ()))) AND ((rt0.c2 COLLATE RTRIM, rt0.c2 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)<(rt0.c0)))+(((rt0.c3)&(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c1 IN ()))) AND ((rt0.c2 COLLATE RTRIM, rt0.c2 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt0 WHERE (((((rt0.c2)<(rt0.c0)))+(((rt0.c3)&(rt0.c0))))) ORDER BY (((rt0.c2, rt0.c2, rt0.c3)) BETWEEN ((rt0.c2, (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c2))), (rt0.c1 IN ()))) AND ((rt0.c2 COLLATE RTRIM, rt0.c2 COLLATE BINARY, ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0))))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL (((NOT (((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE ((NOT (((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN v0 ON 0.8017366579019857 INNER JOIN rt0 ON rt0.c2 WHERE ((((((((t1.c2)AND(v0.c0)))OR(rt0.c2))))>((t1.c0 COLLATE NOCASE)))) ORDER BY ((((rt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 DESC, ((((NULL)AND(((0.41969063628992054) NOT NULL))))OR(((t1.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c2)AND(v0.c0)))OR(rt0.c2))))>((t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN v0 ON 0.8017366579019857 INNER JOIN rt0 ON rt0.c2 ORDER BY ((((rt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 DESC, ((((NULL)AND(((0.41969063628992054) NOT NULL))))OR(((t1.c2) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN v0 ON 0.8017366579019857 INNER JOIN rt0 ON rt0.c2 WHERE ((((((((t1.c2)AND(v0.c0)))OR(rt0.c2))))>((t1.c0 COLLATE NOCASE)))) ORDER BY ((((rt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 DESC, ((((NULL)AND(((0.41969063628992054) NOT NULL))))OR(((t1.c2) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((t1.c2)AND(v0.c0)))OR(rt0.c2))))>((t1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN v0 ON 0.8017366579019857 INNER JOIN rt0 ON rt0.c2 ORDER BY ((((rt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 DESC, ((((NULL)AND(((0.41969063628992054) NOT NULL))))OR(((t1.c2) ISNULL))) DESC);
SELECT ALL COUNT(*) FROM vt0, t1 FULL OUTER JOIN v0 ON 0.8017366579019857 INNER JOIN rt0 ON rt0.c2 WHERE ((((((((t1.c2)AND(v0.c0)))OR(rt0.c2))))>((t1.c0 COLLATE NOCASE)))) ORDER BY ((((rt0.c1) BETWEEN (t1.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (rt0.c0)), rt0.c1 DESC, ((((NULL)AND(((0.41969063628992054) NOT NULL))))OR(((t1.c2) ISNULL))) DESC;
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((LIKELY(rt0.c3)) NOT BETWEEN (NULL) AND ('x_{HAXW' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c3)) NOT BETWEEN (NULL) AND ('x_{HAXW' COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((LIKELY(rt0.c3)) NOT BETWEEN (NULL) AND ('x_{HAXW' COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(rt0.c3)) NOT BETWEEN (NULL) AND ('x_{HAXW' COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((LIKELY(rt0.c3)) NOT BETWEEN (NULL) AND ('x_{HAXW' COLLATE BINARY)));
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON t1.c0 INNER JOIN rt0 ON NULL WHERE (((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) ORDER BY ((rt0.c2 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON t1.c0 INNER JOIN rt0 ON NULL ORDER BY ((rt0.c2 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON t1.c0 INNER JOIN rt0 ON NULL WHERE (((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) ORDER BY ((rt0.c2 IN ()) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN v0 ON t1.c0 INNER JOIN rt0 ON NULL ORDER BY ((rt0.c2 IN ()) IN ()) DESC);
SELECT COUNT(*) FROM t1 RIGHT OUTER JOIN v0 ON t1.c0 INNER JOIN rt0 ON NULL WHERE (((((rt0.c2)LIKE(rt0.c2))) IS TRUE)) ORDER BY ((rt0.c2 IN ()) IN ()) DESC;
SELECT ALL * FROM vt0, v0, rt0 WHERE ((~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))));
SELECT SUM(count) FROM (SELECT (((~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2))))) IS TRUE)  as count FROM vt0, v0, rt0);
SELECT ALL * FROM vt0, v0, rt0 WHERE ((~ (((((rt0.c2)AND(rt0.c1)))AND(rt0.c2)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)AND(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))GLOB(((vt0.c0)AND(vt0.c0)))));
SELECT * FROM vt0, v0, t1, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))<(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))<(((t1.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT * FROM vt0, v0, t1, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))<(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))<(((t1.c0) BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0, v0, t1, rt0);
SELECT * FROM vt0, v0, t1, rt0 WHERE (((((((rt0.c0)AND(rt0.c1)))OR(v0.c0)))<(((t1.c0) BETWEEN (v0.c0) AND (v0.c0)))));
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c2 IN (rt0.c3)))AND(CASE '1897573248'  WHEN t1.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(t1.c1 COLLATE RTRIM)))OR(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(CASE WHEN 0x77eeab75 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN (rt0.c3)))AND(CASE '1897573248'  WHEN t1.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(t1.c1 COLLATE RTRIM)))OR(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(CASE WHEN 0X77eeab75 THEN rt0.c3 END))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c2 IN (rt0.c3)))AND(CASE '1897573248'  WHEN t1.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(t1.c1 COLLATE RTRIM)))OR(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(CASE WHEN 0x77eeab75 THEN rt0.c3 END)));
SELECT SUM(count) FROM (SELECT (((((((((((rt0.c2 IN (rt0.c3)))AND(CASE '1897573248'  WHEN t1.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(t1.c1 COLLATE RTRIM)))OR(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(CASE WHEN 0X77eeab75 THEN rt0.c3 END))) IS TRUE)  as count FROM t1, rt0);
SELECT * FROM t1, rt0 WHERE ((((((((((rt0.c2 IN (rt0.c3)))AND(CASE '1897573248'  WHEN t1.c2 THEN rt0.c0 ELSE rt0.c0 END)))AND(t1.c1 COLLATE RTRIM)))OR(((((t1.c0)OR(t1.c0)))OR(t1.c1)))))AND(CASE WHEN 0x77eeab75 THEN rt0.c3 END)));
SELECT * FROM rt0 WHERE (NULLIF(rtreenode(rt0.c1, rt0.c1), rt0.c3));
SELECT SUM(count) FROM (SELECT ((NULLIF(rtreenode(rt0.c1, rt0.c1), rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(rtreenode(rt0.c1, rt0.c1), rt0.c3));
SELECT SUM(count) FROM (SELECT ((NULLIF(rtreenode(rt0.c1, rt0.c1), rt0.c3)) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE (NULLIF(rtreenode(rt0.c1, rt0.c1), rt0.c3));
SELECT * FROM rt0, v0 WHERE (json_insert(((0.6335634536900797)LIKE(rt0.c2)), ((rt0.c0)<(v0.c0)), ((rt0.c2)==(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_insert(((0.6335634536900797)LIKE(rt0.c2)), ((rt0.c0)<(v0.c0)), ((rt0.c2)=(rt0.c3)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_insert(((0.6335634536900797)LIKE(rt0.c2)), ((rt0.c0)<(v0.c0)), ((rt0.c2)==(rt0.c3))));
SELECT SUM(count) FROM (SELECT ((json_insert(((0.6335634536900797)LIKE(rt0.c2)), ((rt0.c0)<(v0.c0)), ((rt0.c2)=(rt0.c3)))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (json_insert(((0.6335634536900797)LIKE(rt0.c2)), ((rt0.c0)<(v0.c0)), ((rt0.c2)==(rt0.c3))));
SELECT COUNT(*) FROM t1, vt0 WHERE (((t1.c1 COLLATE RTRIM) BETWEEN ((((t1.c0))<((t1.c0)))) AND (NULL COLLATE NOCASE))) ORDER BY t1.c1  NULLS FIRST, LIKELIHOOD((t1.c2 IN ()), 0.8054645953987721), ((0.19979592722784933)GLOB(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1 COLLATE RTRIM) BETWEEN ((((t1.c0))<((t1.c0)))) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c1  NULLS FIRST, LIKELIHOOD((t1.c2 IN ()), 0.8054645953987721), ((0.19979592722784933)GLOB(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((t1.c1 COLLATE RTRIM) BETWEEN ((((t1.c0))<((t1.c0)))) AND (NULL COLLATE NOCASE))) ORDER BY t1.c1  NULLS FIRST, LIKELIHOOD((t1.c2 IN ()), 0.8054645953987721), ((0.19979592722784933)GLOB(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((t1.c1 COLLATE RTRIM) BETWEEN ((((t1.c0))<((t1.c0)))) AND (NULL COLLATE NOCASE))) IS TRUE)  as count FROM t1, vt0 ORDER BY t1.c1  NULLS FIRST, LIKELIHOOD((t1.c2 IN ()), 0.8054645953987721), ((0.19979592722784933)GLOB(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0 WHERE (((t1.c1 COLLATE RTRIM) BETWEEN ((((t1.c0))<((t1.c0)))) AND (NULL COLLATE NOCASE))) ORDER BY t1.c1  NULLS FIRST, LIKELIHOOD((t1.c2 IN ()), 0.8054645953987721), ((0.19979592722784933)GLOB(((vt0.c0) NOT BETWEEN (t1.c0) AND (t1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))==((vt0.c0)))) ORDER BY ((((((((((rt0.c3)+(rt0.c3)))OR(0.8774654242794063)))AND((+ (rt0.c1)))))OR((vt0.c0 IN ()))))AND(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM))==((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c3)+(rt0.c3)))OR(0.8774654242794063)))AND((+ (rt0.c1)))))OR((vt0.c0 IN ()))))AND(rt0.c3))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))==((vt0.c0)))) ORDER BY ((((((((((rt0.c3)+(rt0.c3)))OR(0.8774654242794063)))AND((+ (rt0.c1)))))OR((vt0.c0 IN ()))))AND(rt0.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c1 COLLATE RTRIM))==((vt0.c0)))) IS TRUE)  as count FROM vt0, rt0 ORDER BY ((((((((((rt0.c3)+(rt0.c3)))OR(0.8774654242794063)))AND((+ (rt0.c1)))))OR((vt0.c0 IN ()))))AND(rt0.c3))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE ((((rt0.c1 COLLATE RTRIM))==((vt0.c0)))) ORDER BY ((((((((((rt0.c3)+(rt0.c3)))OR(0.8774654242794063)))AND((+ (rt0.c1)))))OR((vt0.c0 IN ()))))AND(rt0.c3))  NULLS FIRST;
SELECT ALL * FROM rt0, vt0, v0, t1 WHERE ('-1714810154');
SELECT SUM(count) FROM (SELECT (('-1714810154') IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL * FROM rt0, vt0, v0, t1 WHERE ('-1714810154');
SELECT SUM(count) FROM (SELECT (('-1714810154') IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL * FROM rt0, vt0, v0, t1 WHERE ('-1714810154');
SELECT ALL * FROM vt0 INNER JOIN t1 ON LOWER(CASE t1.c0  WHEN 0.37343842652311565 THEN t1.c2 END) CROSS JOIN v0 ON LIKE(((t1.c1)|(t1.c2)), ((t1.c2) BETWEEN (v0.c0) AND (t1.c2)), 'n') WHERE (json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY (t1.c2 IN ()) DESC  NULLS LAST, PRINTF(((t1.c1)AND(v0.c0))) ASC, (~ (t1.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON LOWER(CASE t1.c0  WHEN 0.37343842652311565 THEN t1.c2 END) CROSS JOIN v0 ON LIKE(((t1.c1)|(t1.c2)), ((t1.c2) BETWEEN (v0.c0) AND (t1.c2)), 'n') ORDER BY (t1.c2 IN ()) DESC  NULLS LAST, PRINTF(((t1.c1)AND(v0.c0))) ASC, (~ (t1.c2 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 INNER JOIN t1 ON LOWER(CASE t1.c0  WHEN 0.37343842652311565 THEN t1.c2 END) CROSS JOIN v0 ON LIKE(((t1.c1)|(t1.c2)), ((t1.c2) BETWEEN (v0.c0) AND (t1.c2)), 'n') WHERE (json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY (t1.c2 IN ()) DESC  NULLS LAST, PRINTF(((t1.c1)AND(v0.c0))) ASC, (~ (t1.c2 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON LOWER(CASE t1.c0  WHEN 0.37343842652311565 THEN t1.c2 END) CROSS JOIN v0 ON LIKE(((t1.c1)|(t1.c2)), ((t1.c2) BETWEEN (v0.c0) AND (t1.c2)), 'n') ORDER BY (t1.c2 IN ()) DESC  NULLS LAST, PRINTF(((t1.c1)AND(v0.c0))) ASC, (~ (t1.c2 COLLATE NOCASE)) ASC);
SELECT ALL * FROM vt0 INNER JOIN t1 ON LOWER(CASE t1.c0  WHEN 0.37343842652311565 THEN t1.c2 END) CROSS JOIN v0 ON LIKE(((t1.c1)|(t1.c2)), ((t1.c2) BETWEEN (v0.c0) AND (t1.c2)), 'n') WHERE (json_quote(((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) ORDER BY (t1.c2 IN ()) DESC  NULLS LAST, PRINTF(((t1.c1)AND(v0.c0))) ASC, (~ (t1.c2 COLLATE NOCASE)) ASC;
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS TEXT)) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE (CAST((rt0.c2 IN ()) AS TEXT));
SELECT * FROM v0 WHERE (((((v0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) IS TRUE)) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) IS TRUE)) NOTNULL)) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((v0.c0) IS TRUE)) NOTNULL));
SELECT ALL * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c1 THEN 0.8553372451291218 END AS TEXT)) ORDER BY (((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(t1.c0)))OR(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t1.c0  WHEN t1.c1 THEN 0.8553372451291218 END AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(t1.c0)))OR(CAST(t1.c1 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c1 THEN 0.8553372451291218 END AS TEXT)) ORDER BY (((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(t1.c0)))OR(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE t1.c0  WHEN t1.c1 THEN 0.8553372451291218 END AS TEXT)) IS TRUE)  as count FROM t1 ORDER BY (((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(t1.c0)))OR(CAST(t1.c1 AS REAL))) DESC  NULLS LAST);
SELECT ALL * FROM t1 WHERE (CAST(CASE t1.c0  WHEN t1.c1 THEN 0.8553372451291218 END AS TEXT)) ORDER BY (((((((t1.c2)) BETWEEN ((t1.c1)) AND ((t1.c1))))OR(t1.c0)))OR(CAST(t1.c1 AS REAL))) DESC  NULLS LAST;
SELECT * FROM rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (('N}')))) NOT BETWEEN (x'1ae2') AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((((v0.c0)AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND (((rt0.c2)IS NOT('-428613112')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (('N}')))) NOT BETWEEN (x'1ae2') AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND (((rt0.c2)IS NOT('-428613112')))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (('N}')))) NOT BETWEEN (x'1ae2') AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((((v0.c0)AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND (((rt0.c2)IS NOT('-428613112')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (('N}')))) NOT BETWEEN (x'1ae2') AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END))) IS TRUE)  as count FROM rt0, v0 ORDER BY ((((v0.c0)AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND (((rt0.c2)IS NOT('-428613112')))) ASC  NULLS LAST);
SELECT * FROM rt0, v0 WHERE ((((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND (('N}')))) NOT BETWEEN (x'1ae2') AND (CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN x'' WHEN rt0.c1 THEN rt0.c0 END))) ORDER BY ((((v0.c0)AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c1 END) AND (((rt0.c2)IS NOT('-428613112')))) ASC  NULLS LAST;
SELECT * FROM vt0, t1 WHERE (((((t1.c2)+(0.13940027641029518))) BETWEEN ((~ (t1.c0))) AND ((+ ('')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)+(0.13940027641029518))) BETWEEN ((~ (t1.c0))) AND ((+ (''))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((t1.c2)+(0.13940027641029518))) BETWEEN ((~ (t1.c0))) AND ((+ ('')))));
SELECT SUM(count) FROM (SELECT ((((((t1.c2)+(0.13940027641029518))) BETWEEN ((~ (t1.c0))) AND ((+ (''))))) IS TRUE)  as count FROM vt0, t1);
SELECT * FROM vt0, t1 WHERE (((((t1.c2)+(0.13940027641029518))) BETWEEN ((~ (t1.c0))) AND ((+ ('')))));
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (((0.15837144024297123) NOT BETWEEN (NULL) AND (((t1.c1)>=(vt0.c0))))) ORDER BY 0X3a9caf3b  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.15837144024297123) NOT BETWEEN (NULL) AND (((t1.c1)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY 0x3a9caf3b  NULLS FIRST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN t1 WHERE (((0.15837144024297123) NOT BETWEEN (NULL) AND (((t1.c1)>=(vt0.c0))))) ORDER BY 0X3a9caf3b  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((0.15837144024297123) NOT BETWEEN (NULL) AND (((t1.c1)>=(vt0.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN t1 ORDER BY 0x3a9caf3b  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS REAL))OR(((t1.c2)|(vt0.c0)))))AND(((((t1.c0)AND(t1.c1)))AND(t1.c0)))) WHERE (CAST((((vt0.c0, '0.6978316904760864', t1.c0)) NOT BETWEEN ((t1.c1, vt0.c0, t1.c2)) AND ((t1.c2, t1.c1, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, '0.6978316904760864', t1.c0)) NOT BETWEEN ((t1.c1, vt0.c0, t1.c2)) AND ((t1.c2, t1.c1, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS REAL))OR(((t1.c2)|(vt0.c0)))))AND(((((t1.c0)AND(t1.c1)))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS REAL))OR(((t1.c2)|(vt0.c0)))))AND(((((t1.c0)AND(t1.c1)))AND(t1.c0)))) WHERE (CAST((((vt0.c0, '0.6978316904760864', t1.c0)) NOT BETWEEN ((t1.c1, vt0.c0, t1.c2)) AND ((t1.c2, t1.c1, vt0.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0, '0.6978316904760864', t1.c0)) NOT BETWEEN ((t1.c1, vt0.c0, t1.c2)) AND ((t1.c2, t1.c1, vt0.c0))) AS BLOB)) IS TRUE)  as count FROM t1 RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS REAL))OR(((t1.c2)|(vt0.c0)))))AND(((((t1.c0)AND(t1.c1)))AND(t1.c0)))));
SELECT ALL COUNT(*) FROM t1 RIGHT OUTER JOIN vt0 ON ((((CAST(vt0.c0 AS REAL))OR(((t1.c2)|(vt0.c0)))))AND(((((t1.c0)AND(t1.c1)))AND(t1.c0)))) WHERE (CAST((((vt0.c0, '0.6978316904760864', t1.c0)) NOT BETWEEN ((t1.c1, vt0.c0, t1.c2)) AND ((t1.c2, t1.c1, vt0.c0))) AS BLOB));
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((((t1.c2)OR(t1.c0)))AND(-1.7008422E8)))) AND (((x'' IN ()))))) ORDER BY (((('') BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c2)IS NOT(t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) NOT BETWEEN ((((((t1.c2)OR(t1.c0)))AND(-1.7008422E8)))) AND (((x'' IN ()))))) IS TRUE)  as count FROM t1 ORDER BY (((('') BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c2)IS NOT(t1.c1)))) ASC);
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((((t1.c2)OR(t1.c0)))AND(-1.7008422E8)))) AND (((x'' IN ()))))) ORDER BY (((('') BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c2)IS NOT(t1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1)) NOT BETWEEN ((((((t1.c2)OR(t1.c0)))AND(-1.7008422E8)))) AND (((x'' IN ()))))) IS TRUE)  as count FROM t1 ORDER BY (((('') BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c2)IS NOT(t1.c1)))) ASC);
SELECT * FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((((((t1.c2)OR(t1.c0)))AND(-1.7008422E8)))) AND (((x'' IN ()))))) ORDER BY (((('') BETWEEN (t1.c2) AND (t1.c0))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (((t1.c2)IS NOT(t1.c1)))) ASC;
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE (rt0.c3);
SELECT SUM(count) FROM (SELECT ((rt0.c3) IS TRUE)  as count FROM rt0, t1, v0);
SELECT ALL COUNT(*) FROM rt0, t1, v0 WHERE (rt0.c3);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((t1.c2)) BETWEEN ((0.11861458294224203)) AND (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))))) ORDER BY (- (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN ((0.11861458294224203)) AND (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY (- (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((t1.c2)) BETWEEN ((0.11861458294224203)) AND (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))))) ORDER BY (- (vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)) BETWEEN ((0.11861458294224203)) AND (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY (- (vt0.c0))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((t1.c2)) BETWEEN ((0.11861458294224203)) AND (((((t1.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c0))))))) ORDER BY (- (vt0.c0))  NULLS FIRST;
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL ((((t1.c1) BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c1 COLLATE NOCASE))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((t1.c1) BETWEEN (((t1.c1) BETWEEN (t1.c1) AND (t1.c1))) AND (t1.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN LIKELIHOOD(rt0.c3, 0.24447333480899025) WHEN (((rt0.c3, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, -1695090808, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, t1.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((t1.c0, 1754348694, t1.c0))) THEN ((((((((v0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c2)))OR('2')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(NULL AS TEXT) THEN LIKELIHOOD(rt0.c3, 0.24447333480899025) WHEN (((rt0.c3, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, -1695090808, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, t1.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((t1.c0, 1754348694, t1.c0))) THEN ((((((((v0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c2)))OR('2')) END) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN LIKELIHOOD(rt0.c3, 0.24447333480899025) WHEN (((rt0.c3, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, -1695090808, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, t1.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((t1.c0, 1754348694, t1.c0))) THEN ((((((((v0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c2)))OR('2')) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN CAST(NULL AS TEXT) THEN LIKELIHOOD(rt0.c3, 0.24447333480899025) WHEN (((rt0.c3, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, -1695090808, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, t1.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((t1.c0, 1754348694, t1.c0))) THEN ((((((((v0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c2)))OR('2')) END) IS TRUE)  as count FROM rt0, t1, v0, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, v0, vt0 WHERE (CASE WHEN CAST(NULL AS TEXT) THEN LIKELIHOOD(rt0.c3, 0.24447333480899025) WHEN (((rt0.c3, v0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, -1695090808, vt0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))) THEN ((rt0.c2) NOT NULL) WHEN (((t1.c0, t1.c0, rt0.c1)) BETWEEN ((rt0.c2, vt0.c0, rt0.c3)) AND ((t1.c0, 1754348694, t1.c0))) THEN ((((((((v0.c0)AND(rt0.c3)))AND(vt0.c0)))AND(rt0.c2)))OR('2')) END);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c0)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (t1.c0))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((NOT (t1.c0)));
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE rt0.c3  WHEN (('-132553322')&(vt0.c0)) THEN ((rt0.c1)*(rt0.c0)) WHEN 0.19353939607327997 THEN NULL WHEN ((rt0.c2) IS FALSE) THEN v0.c0 ELSE (('-452895517') NOT BETWEEN (rt0.c1) AND (vt0.c0)) END CROSS JOIN v0 ON v0.c0 WHERE ((((vt0.c0 COLLATE RTRIM, (x'c127' IN (rt0.c1)), ((rt0.c1) ISNULL)))<((((rt0.c3)*(v0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c3), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, (x'c127' IN (rt0.c1)), ((rt0.c1) ISNULL)))<((((rt0.c3)*(v0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c3), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE rt0.c3  WHEN (('-132553322')&(vt0.c0)) THEN ((rt0.c1)*(rt0.c0)) WHEN 0.19353939607327997 THEN NULL WHEN ((rt0.c2) IS FALSE) THEN v0.c0 ELSE (('-452895517') NOT BETWEEN (rt0.c1) AND (vt0.c0)) END CROSS JOIN v0 ON v0.c0 ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE) ASC);
SELECT ALL COUNT(*) FROM rt0 LEFT OUTER JOIN vt0 ON CASE rt0.c3  WHEN (('-132553322')&(vt0.c0)) THEN ((rt0.c1)*(rt0.c0)) WHEN 0.19353939607327997 THEN NULL WHEN ((rt0.c2) IS FALSE) THEN v0.c0 ELSE (('-452895517') NOT BETWEEN (rt0.c1) AND (vt0.c0)) END CROSS JOIN v0 ON v0.c0 WHERE ((((vt0.c0 COLLATE RTRIM, (x'c127' IN (rt0.c1)), ((rt0.c1) ISNULL)))<((((rt0.c3)*(v0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c3), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))))) ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 COLLATE RTRIM, (x'c127' IN (rt0.c1)), ((rt0.c1) ISNULL)))<((((rt0.c3)*(v0.c0)), SQLITE_COMPILEOPTION_GET(rt0.c3), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN vt0 ON CASE rt0.c3  WHEN (('-132553322')&(vt0.c0)) THEN ((rt0.c1)*(rt0.c0)) WHEN 0.19353939607327997 THEN NULL WHEN ((rt0.c2) IS FALSE) THEN v0.c0 ELSE (('-452895517') NOT BETWEEN (rt0.c1) AND (vt0.c0)) END CROSS JOIN v0 ON v0.c0 ORDER BY ((((v0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2))) IS TRUE) ASC);
SELECT * FROM rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt0, t1);
SELECT * FROM rt0, t1 WHERE (x'');
SELECT * FROM v0 WHERE (0.9968437010360178) ORDER BY (((0.7650923225752743 IN (v0.c0)))LIKE(CAST(v0.c0 AS NUMERIC))) ASC, 'T-EY' COLLATE BINARY DESC, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9968437010360178) IS TRUE)  as count FROM v0 ORDER BY (((0.7650923225752743 IN (v0.c0)))LIKE(CAST(v0.c0 AS NUMERIC))) ASC, 'T-EY' COLLATE BINARY DESC, v0.c0 ASC);
SELECT * FROM v0 WHERE (0.9968437010360178) ORDER BY (((0.7650923225752743 IN (v0.c0)))LIKE(CAST(v0.c0 AS NUMERIC))) ASC, 'T-EY' COLLATE BINARY DESC, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.9968437010360178) IS TRUE)  as count FROM v0 ORDER BY (((0.7650923225752743 IN (v0.c0)))LIKE(CAST(v0.c0 AS NUMERIC))) ASC, 'T-EY' COLLATE BINARY DESC, v0.c0 ASC);
SELECT * FROM v0 WHERE (0.9968437010360178) ORDER BY (((0.7650923225752743 IN (v0.c0)))LIKE(CAST(v0.c0 AS NUMERIC))) ASC, 'T-EY' COLLATE BINARY DESC, v0.c0 ASC;
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE (TYPEOF(0.4533047402750998) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TYPEOF(0.4533047402750998) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE (TYPEOF(0.4533047402750998) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TYPEOF(0.4533047402750998) COLLATE RTRIM) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE (TYPEOF(0.4533047402750998) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) ORDER BY ((((rt0.c1)%(rt0.c0)))<((((rt0.c0))<=((rt0.c1)))))  NULLS FIRST, (+ ((rt0.c1 IN (0.42710597911725223)))) ASC  NULLS FIRST, ((1.02977835E9)|(CHAR(rt0.c0, rt0.c3, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)%(rt0.c0)))<((((rt0.c0))<=((rt0.c1)))))  NULLS FIRST, (+ ((rt0.c1 IN (0.42710597911725223)))) ASC  NULLS FIRST, ((1.02977835E9)|(CHAR(rt0.c0, rt0.c3, rt0.c0))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) ORDER BY ((((rt0.c1)%(rt0.c0)))<((((rt0.c0))<=((rt0.c1)))))  NULLS FIRST, (+ ((rt0.c1 IN (0.42710597911725223)))) ASC  NULLS FIRST, ((1.02977835E9)|(CHAR(rt0.c0, rt0.c3, rt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0 ORDER BY ((((rt0.c1)%(rt0.c0)))<((((rt0.c0))<=((rt0.c1)))))  NULLS FIRST, (+ ((rt0.c1 IN (0.42710597911725223)))) ASC  NULLS FIRST, ((1.02977835E9)|(CHAR(rt0.c0, rt0.c3, rt0.c0))) ASC);
SELECT ALL COUNT(*) FROM rt0, vt0 WHERE (CAST(CASE WHEN rt0.c3 THEN rt0.c0 END AS NUMERIC)) ORDER BY ((((rt0.c1)%(rt0.c0)))<((((rt0.c0))<=((rt0.c1)))))  NULLS FIRST, (+ ((rt0.c1 IN (0.42710597911725223)))) ASC  NULLS FIRST, ((1.02977835E9)|(CHAR(rt0.c0, rt0.c3, rt0.c0))) ASC;
SELECT ALL * FROM v0, t1 WHERE (((((((((((((t1.c1)AND(v0.c0)))OR(x'')))AND(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(ABS(DISTINCT t1.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c1)AND(v0.c0)))OR(x'')))AND(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(ABS(DISTINCT t1.c2)))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((((((((((t1.c1)AND(v0.c0)))OR(x'')))AND(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(ABS(DISTINCT t1.c2))));
SELECT SUM(count) FROM (SELECT ((((((((((((((t1.c1)AND(v0.c0)))OR(x'')))AND(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(ABS(DISTINCT t1.c2)))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((((((((((t1.c1)AND(v0.c0)))OR(x'')))AND(v0.c0)))OR(v0.c0)))OR(t1.c1)))OR(ABS(DISTINCT t1.c2))));
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c2, t1.c1))<((t1.c0, 0.9857919346005674, t1.c0))))IS NOT(CAST(t1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, t1.c2, t1.c1))<((t1.c0, 0.9857919346005674, t1.c0))))IS NOT(CAST(t1.c1 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c2, t1.c1))<((t1.c0, 0.9857919346005674, t1.c0))))IS NOT(CAST(t1.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0, t1.c2, t1.c1))<((t1.c0, 0.9857919346005674, t1.c0))))IS NOT(CAST(t1.c1 AS BLOB)))) IS TRUE)  as count FROM t1);
SELECT ALL * FROM t1 WHERE ((((((t1.c0, t1.c2, t1.c1))<((t1.c0, 0.9857919346005674, t1.c0))))IS NOT(CAST(t1.c1 AS BLOB))));
SELECT ALL * FROM t1, rt0 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (rt0.c3))))>=((CASE WHEN rt0.c3 THEN t1.c0 ELSE t1.c1 END)))) ORDER BY json_type(CAST(t1.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) BETWEEN (t1.c0) AND (rt0.c3))))>=((CASE WHEN rt0.c3 THEN t1.c0 ELSE t1.c1 END)))) IS TRUE)  as count FROM t1, rt0 ORDER BY json_type(CAST(t1.c1 AS TEXT)));
SELECT ALL * FROM t1, rt0 WHERE ((((((t1.c0) BETWEEN (t1.c0) AND (rt0.c3))))>=((CASE WHEN rt0.c3 THEN t1.c0 ELSE t1.c1 END)))) ORDER BY json_type(CAST(t1.c1 AS TEXT));
SELECT SUM(count) FROM (SELECT ALL (((((((t1.c0) BETWEEN (t1.c0) AND (rt0.c3))))>=((CASE WHEN rt0.c3 THEN t1.c0 ELSE t1.c1 END)))) IS TRUE)  as count FROM t1, rt0 ORDER BY json_type(CAST(t1.c1 AS TEXT)));
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)-(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)-(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)-(rt0.c2))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt0.c3)-(rt0.c2))) ISNULL)) IS TRUE)  as count FROM rt0, vt0);
SELECT COUNT(*) FROM rt0, vt0 WHERE (((((rt0.c3)-(rt0.c2))) ISNULL));
SELECT ALL * FROM rt0, v0 INDEXED BY i92 NATURAL JOIN t1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 INDEXED BY i92 NATURAL JOIN t1);
SELECT ALL * FROM rt0, v0 INDEXED BY i92 NATURAL JOIN t1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM rt0, v0 INDEXED BY i92 NATURAL JOIN t1);
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE ((((~ (x'b191'))) IS TRUE)) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(x'')))AND((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (x'b191'))) IS TRUE)) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(x'')))AND((rt0.c2 IN ()))) DESC);
SELECT COUNT(*) FROM vt0, v0, rt0, t1 WHERE ((((~ (x'b191'))) IS TRUE)) ORDER BY ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(x'')))AND((rt0.c2 IN ()))) DESC;
SELECT SUM(count) FROM (SELECT (((((~ (x'b191'))) IS TRUE)) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(x'')))AND((rt0.c2 IN ()))) DESC);
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON UNLIKELY(((rt0.c2)LIKE(t1.c2))) RIGHT OUTER JOIN vt0 ON (- (((t1.c1)<>(t1.c0)))) RIGHT OUTER JOIN v0 ON ((((NOT (0.22193207268498238))))<((((((rt0.c1)AND(rt0.c3)))AND(t1.c1))))) WHERE ((((0.373425621478102 COLLATE RTRIM))=(((vt0.c0 IN (t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.373425621478102 COLLATE RTRIM))=(((vt0.c0 IN (t1.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON UNLIKELY(((rt0.c2)LIKE(t1.c2))) RIGHT OUTER JOIN vt0 ON (- (((t1.c1)!=(t1.c0)))) RIGHT OUTER JOIN v0 ON ((((NOT (0.22193207268498238))))<((((((rt0.c1)AND(rt0.c3)))AND(t1.c1))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON UNLIKELY(((rt0.c2)LIKE(t1.c2))) RIGHT OUTER JOIN vt0 ON (- (((t1.c1)<>(t1.c0)))) RIGHT OUTER JOIN v0 ON ((((NOT (0.22193207268498238))))<((((((rt0.c1)AND(rt0.c3)))AND(t1.c1))))) WHERE ((((0.373425621478102 COLLATE RTRIM))=(((vt0.c0 IN (t1.c0))))));
SELECT SUM(count) FROM (SELECT (((((0.373425621478102 COLLATE RTRIM))=(((vt0.c0 IN (t1.c0)))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON UNLIKELY(((rt0.c2)LIKE(t1.c2))) RIGHT OUTER JOIN vt0 ON (- (((t1.c1)!=(t1.c0)))) RIGHT OUTER JOIN v0 ON ((((NOT (0.22193207268498238))))<((((((rt0.c1)AND(rt0.c3)))AND(t1.c1))))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON UNLIKELY(((rt0.c2)LIKE(t1.c2))) RIGHT OUTER JOIN vt0 ON (- (((t1.c1)<>(t1.c0)))) RIGHT OUTER JOIN v0 ON ((((NOT (0.22193207268498238))))<((((((rt0.c1)AND(rt0.c3)))AND(t1.c1))))) WHERE ((((0.373425621478102 COLLATE RTRIM))=(((vt0.c0 IN (t1.c0))))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c0)+(vt0.c0))) NOT NULL), (((vt0.c0)IS(vt0.c0)) IN ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c0))) NOT NULL), (((vt0.c0)IS(vt0.c0)) IN ((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c0)+(vt0.c0))) NOT NULL), (((vt0.c0)IS(vt0.c0)) IN ((- (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)+(vt0.c0))) NOT NULL), (((vt0.c0)IS(vt0.c0)) IN ((- (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) IS FALSE)))) ORDER BY ((((vt0.c0)+(vt0.c0))) NOT NULL), (((vt0.c0)IS(vt0.c0)) IN ((- (vt0.c0))));
SELECT ALL * FROM rt0, v0, t1 WHERE (CASE IFNULL(DISTINCT t1.c1, rt0.c3)  WHEN '-1179828627' THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c1)) ELSE ((t1.c1)/(rt0.c3)) END) ORDER BY CAST((+ ('238805236')) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT t1.c1, rt0.c3)  WHEN '-1179828627' THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c1)) ELSE ((t1.c1)/(rt0.c3)) END) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY CAST((+ ('238805236')) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0, t1 WHERE (CASE IFNULL(DISTINCT t1.c1, rt0.c3)  WHEN '-1179828627' THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c1)) ELSE ((t1.c1)/(rt0.c3)) END) ORDER BY CAST((+ ('238805236')) AS BLOB) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE IFNULL(DISTINCT t1.c1, rt0.c3)  WHEN '-1179828627' THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c1)) ELSE ((t1.c1)/(rt0.c3)) END) IS TRUE)  as count FROM rt0, v0, t1 ORDER BY CAST((+ ('238805236')) AS BLOB) DESC  NULLS LAST);
SELECT ALL * FROM rt0, v0, t1 WHERE (CASE IFNULL(DISTINCT t1.c1, rt0.c3)  WHEN '-1179828627' THEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)))AND(t1.c0)))OR(rt0.c1)) ELSE ((t1.c1)/(rt0.c3)) END) ORDER BY CAST((+ ('238805236')) AS BLOB) DESC  NULLS LAST;
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((x'')LIKE(vt0.c0)) WHEN rt0.c2 COLLATE BINARY THEN 1.18966846E9 WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN ((((NULL)AND(rt0.c3)))OR(rt0.c1)) WHEN NULL THEN (((rt0.c3, vt0.c0, rt0.c2))>=((rt0.c2, v0.c0, rt0.c3))) WHEN ((vt0.c0)+(vt0.c0)) THEN (- (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) ISNULL) THEN ((x'')LIKE(vt0.c0)) WHEN rt0.c2 COLLATE BINARY THEN 1.18966846E9 WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN ((((NULL)AND(rt0.c3)))OR(rt0.c1)) WHEN NULL THEN (((rt0.c3, vt0.c0, rt0.c2))>=((rt0.c2, v0.c0, rt0.c3))) WHEN ((vt0.c0)+(vt0.c0)) THEN (- (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((x'')LIKE(vt0.c0)) WHEN rt0.c2 COLLATE BINARY THEN 1.18966846E9 WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN ((((NULL)AND(rt0.c3)))OR(rt0.c1)) WHEN NULL THEN (((rt0.c3, vt0.c0, rt0.c2))>=((rt0.c2, v0.c0, rt0.c3))) WHEN ((vt0.c0)+(vt0.c0)) THEN (- (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt0.c1) ISNULL) THEN ((x'')LIKE(vt0.c0)) WHEN rt0.c2 COLLATE BINARY THEN 1.18966846E9 WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN ((((NULL)AND(rt0.c3)))OR(rt0.c1)) WHEN NULL THEN (((rt0.c3, vt0.c0, rt0.c2))>=((rt0.c2, v0.c0, rt0.c3))) WHEN ((vt0.c0)+(vt0.c0)) THEN (- (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)) END) IS TRUE)  as count FROM rt0, v0, vt0);
SELECT * FROM rt0, v0, vt0 WHERE (CASE WHEN ((rt0.c1) ISNULL) THEN ((x'')LIKE(vt0.c0)) WHEN rt0.c2 COLLATE BINARY THEN 1.18966846E9 WHEN CAST(rt0.c0 AS BLOB) THEN ((((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c0)))AND(v0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN ((rt0.c3) NOT BETWEEN (vt0.c0) AND (v0.c0)) WHEN CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c1 END THEN ((((NULL)AND(rt0.c3)))OR(rt0.c1)) WHEN NULL THEN (((rt0.c3, vt0.c0, rt0.c2))>=((rt0.c2, v0.c0, rt0.c3))) WHEN ((vt0.c0)+(vt0.c0)) THEN (- (v0.c0)) ELSE ((v0.c0) NOT BETWEEN (rt0.c3) AND (vt0.c0)) END);
SELECT COUNT(*) FROM vt0, v0 WHERE (TRIM(LOWER(DISTINCT vt0.c0), (+ (vt0.c0)))) ORDER BY ((load_extension(v0.c0, v0.c0))GLOB(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(LOWER(DISTINCT vt0.c0), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((load_extension(v0.c0, v0.c0))GLOB(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (TRIM(LOWER(DISTINCT vt0.c0), (+ (vt0.c0)))) ORDER BY ((load_extension(v0.c0, v0.c0))GLOB(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TRIM(LOWER(DISTINCT vt0.c0), (+ (vt0.c0)))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((load_extension(v0.c0, v0.c0))GLOB(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (TRIM(LOWER(DISTINCT vt0.c0), (+ (vt0.c0)))) ORDER BY ((load_extension(v0.c0, v0.c0))GLOB(CAST(v0.c0 AS INTEGER))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((x'd247')) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((x'd247')) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((x'd247')) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((((x'd247')) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((x'd247')) NOT BETWEEN ((x'')) AND ((vt0.c0))) COLLATE BINARY);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((rt0.c2 COLLATE BINARY)+(CASE v0.c0  WHEN t1.c2 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)+(CASE v0.c0  WHEN t1.c2 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((rt0.c2 COLLATE BINARY)+(CASE v0.c0  WHEN t1.c2 THEN t1.c0 END)));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY)+(CASE v0.c0  WHEN t1.c2 THEN t1.c0 END))) IS TRUE)  as count FROM rt0, v0, t1);
SELECT COUNT(*) FROM rt0, v0, t1 WHERE (((rt0.c2 COLLATE BINARY)+(CASE v0.c0  WHEN t1.c2 THEN t1.c0 END)));
SELECT COUNT(*) FROM rt0 WHERE (CASE COALESCE(DISTINCT rt0.c1, rt0.c2)  WHEN (((0.8718289925309521)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN (+ (rt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) IS TRUE) WHEN rt0.c3 THEN ((((((((((((0.031588392645114816)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c1, rt0.c2)  WHEN (((0.8718289925309521)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN (+ (rt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) IS TRUE) WHEN rt0.c3 THEN ((((((((((((0.031588392645114816)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE COALESCE(DISTINCT rt0.c1, rt0.c2)  WHEN (((0.8718289925309521)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN (+ (rt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) IS TRUE) WHEN rt0.c3 THEN ((((((((((((0.031588392645114816)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c1, rt0.c2)  WHEN (((0.8718289925309521)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN (+ (rt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) IS TRUE) WHEN rt0.c3 THEN ((((((((((((0.031588392645114816)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) END) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (CASE COALESCE(DISTINCT rt0.c1, rt0.c2)  WHEN (((0.8718289925309521)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN (+ (rt0.c0)) WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2) IS TRUE) WHEN rt0.c3 THEN ((((((((((((0.031588392645114816)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c0)) END);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((CAST(rt0.c3 AS NUMERIC))&(t1.c1 COLLATE NOCASE)) INNER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('G1')) INNER JOIN v0 ON (+ (((t1.c1) NOT NULL))) WHERE (((((rt0.c1)*(rt0.c3)))AND(((rt0.c2) IS TRUE)))) ORDER BY TYPEOF(TIME(v0.c0, rt0.c0, rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c3)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((CAST(rt0.c3 AS NUMERIC))&(t1.c1 COLLATE NOCASE)) INNER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('G1')) INNER JOIN v0 ON (+ (((t1.c1) NOT NULL))) ORDER BY TYPEOF(TIME(v0.c0, rt0.c0, rt0.c3)) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN t1 ON ((CAST(rt0.c3 AS NUMERIC))&(t1.c1 COLLATE NOCASE)) INNER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('G1')) INNER JOIN v0 ON (+ (((t1.c1) NOT NULL))) WHERE (((((rt0.c1)*(rt0.c3)))AND(((rt0.c2) IS TRUE)))) ORDER BY TYPEOF(TIME(v0.c0, rt0.c0, rt0.c3)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt0.c1)*(rt0.c3)))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN t1 ON ((CAST(rt0.c3 AS NUMERIC))&(t1.c1 COLLATE NOCASE)) INNER JOIN rt0 ON ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (CASE WHEN v0.c0 THEN t1.c0 ELSE t1.c0 END) AND ('G1')) INNER JOIN v0 ON (+ (((t1.c1) NOT NULL))) ORDER BY TYPEOF(TIME(v0.c0, rt0.c0, rt0.c3)) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '' CROSS JOIN t1 ON (t1.c0 COLLATE NOCASE IN ((~ (t1.c1)), ((t1.c2)IS NOT(vt0.c0)))) WHERE (((((t1.c0)|(t1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)|(t1.c1))) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON '' CROSS JOIN t1 ON (t1.c0 COLLATE NOCASE IN ((~ (t1.c1)), ((t1.c2)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '' CROSS JOIN t1 ON (t1.c0 COLLATE NOCASE IN ((~ (t1.c1)), ((t1.c2)IS NOT(vt0.c0)))) WHERE (((((t1.c0)|(t1.c1))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)|(t1.c1))) IS TRUE)) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON '' CROSS JOIN t1 ON (t1.c0 COLLATE NOCASE IN ((~ (t1.c1)), ((t1.c2)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM v0 CROSS JOIN vt0 ON '' CROSS JOIN t1 ON (t1.c0 COLLATE NOCASE IN ((~ (t1.c1)), ((t1.c2)IS NOT(vt0.c0)))) WHERE (((((t1.c0)|(t1.c1))) IS TRUE));
SELECT * FROM vt0 WHERE ((CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN '1236162302' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN vt0.c0 THEN '鲲' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN '1236162302' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN vt0.c0 THEN '鲲' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN '1236162302' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN vt0.c0 THEN '鲲' ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN '1236162302' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN vt0.c0 THEN '鲲' ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((CASE x''  WHEN vt0.c0 THEN vt0.c0 WHEN '1236162302' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END IN (CASE WHEN vt0.c0 THEN '鲲' ELSE vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, t1, rt0 INDEXED BY i92 WHERE (((rt0.c0) BETWEEN (((((t1.c1)OR(t1.c1)))AND(rt0.c2))) AND (UPPER(rt0.c1)))) ORDER BY ((x'') IS TRUE), (((vt0.c0)) BETWEEN (((((rt0.c0))<((vt0.c0))))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c2 THEN rt0.c0 END)))  NULLS FIRST, (((((((t1.c2)) BETWEEN ((t1.c0)) AND ((''))))AND(rt0.c0)))AND(((((t1.c2)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (((((t1.c1)OR(t1.c1)))AND(rt0.c2))) AND (UPPER(rt0.c1)))) IS TRUE)  as count FROM vt0, t1, rt0 INDEXED BY i92 ORDER BY ((x'') IS TRUE), (((vt0.c0)) BETWEEN (((((rt0.c0))<((vt0.c0))))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c2 THEN rt0.c0 END)))  NULLS FIRST, (((((((t1.c2)) BETWEEN ((t1.c0)) AND ((''))))AND(rt0.c0)))AND(((((t1.c2)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 INDEXED BY i92 WHERE (((rt0.c0) BETWEEN (((((t1.c1)OR(t1.c1)))AND(rt0.c2))) AND (UPPER(rt0.c1)))) ORDER BY ((x'') IS TRUE), (((vt0.c0)) BETWEEN (((((rt0.c0))<((vt0.c0))))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c2 THEN rt0.c0 END)))  NULLS FIRST, (((((((t1.c2)) BETWEEN ((t1.c0)) AND ((''))))AND(rt0.c0)))AND(((((t1.c2)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c0) BETWEEN (((((t1.c1)OR(t1.c1)))AND(rt0.c2))) AND (UPPER(rt0.c1)))) IS TRUE)  as count FROM vt0, t1, rt0 INDEXED BY i92 ORDER BY ((x'') IS TRUE), (((vt0.c0)) BETWEEN (((((rt0.c0))<((vt0.c0))))) AND ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN t1.c2 THEN rt0.c0 END)))  NULLS FIRST, (((((((t1.c2)) BETWEEN ((t1.c0)) AND ((''))))AND(rt0.c0)))AND(((((t1.c2)AND(vt0.c0)))OR(vt0.c0)))) ASC  NULLS FIRST);
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY) ORDER BY '172898466';
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY '172898466');
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY) ORDER BY '172898466';
SELECT SUM(count) FROM (SELECT ALL ((CAST(t1.c0 AS INTEGER) COLLATE BINARY) IS TRUE)  as count FROM t1 ORDER BY '172898466');
SELECT * FROM t1 WHERE (CAST(t1.c0 AS INTEGER) COLLATE BINARY) ORDER BY '172898466';
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (('1806261154') IS FALSE) CROSS JOIN v0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((((((((((rt0.c3)OR(rt0.c3)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c0)), (~ (rt0.c1)), ((t1.c2) NOT NULL)))<(((t1.c2 IN ()), NULL, rt0.c3 COLLATE NOCASE))) WHERE (((((t1.c2 IN (vt0.c0)), (NOT (v0.c0)), ((-1e500) NOT BETWEEN (rt0.c2) AND (rt0.c3))))>((CAST(v0.c0 AS INTEGER), ((((t1.c0)AND(rt0.c2)))OR(rt0.c0)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2 IN (vt0.c0)), (NOT (v0.c0)), ((-1e500) NOT BETWEEN (rt0.c2) AND (rt0.c3))))>((CAST(v0.c0 AS INTEGER), ((((t1.c0)AND(rt0.c2)))OR(rt0.c0)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (('1806261154') IS FALSE) CROSS JOIN v0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((((((((((rt0.c3)OR(rt0.c3)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c0)), (~ (rt0.c1)), ((t1.c2) NOT NULL)))<(((t1.c2 IN ()), NULL, rt0.c3 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (('1806261154') IS FALSE) CROSS JOIN v0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((((((((((rt0.c3)OR(rt0.c3)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c0)), (~ (rt0.c1)), ((t1.c2) NOT NULL)))<(((t1.c2 IN ()), NULL, rt0.c3 COLLATE NOCASE))) WHERE (((((t1.c2 IN (vt0.c0)), (NOT (v0.c0)), ((-1e500) NOT BETWEEN (rt0.c2) AND (rt0.c3))))>((CAST(v0.c0 AS INTEGER), ((((t1.c0)AND(rt0.c2)))OR(rt0.c0)), (rt0.c0 IN ())))));
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c2 IN (vt0.c0)), (NOT (v0.c0)), ((-1e500) NOT BETWEEN (rt0.c2) AND (rt0.c3))))>((CAST(v0.c0 AS INTEGER), ((((t1.c0)AND(rt0.c2)))OR(rt0.c0)), (rt0.c0 IN ()))))) IS TRUE)  as count FROM rt0 LEFT OUTER JOIN t1 ON (('1806261154') IS FALSE) CROSS JOIN v0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((((((((((rt0.c3)OR(rt0.c3)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c0)), (~ (rt0.c1)), ((t1.c2) NOT NULL)))<(((t1.c2 IN ()), NULL, rt0.c3 COLLATE NOCASE))));
SELECT COUNT(*) FROM rt0 LEFT OUTER JOIN t1 ON (('1806261154') IS FALSE) CROSS JOIN v0 ON rt0.c1 RIGHT OUTER JOIN vt0 ON (((((((((((rt0.c3)OR(rt0.c3)))OR(v0.c0)))AND(rt0.c2)))OR(vt0.c0)), (~ (rt0.c1)), ((t1.c2) NOT NULL)))<(((t1.c2 IN ()), NULL, rt0.c3 COLLATE NOCASE))) WHERE (((((t1.c2 IN (vt0.c0)), (NOT (v0.c0)), ((-1e500) NOT BETWEEN (rt0.c2) AND (rt0.c3))))>((CAST(v0.c0 AS INTEGER), ((((t1.c0)AND(rt0.c2)))OR(rt0.c0)), (rt0.c0 IN ())))));
SELECT * FROM vt0, v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))>((((vt0.c0) IS TRUE))))) ORDER BY ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR((- (v0.c0)))))AND(((x'acda') BETWEEN (vt0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))>((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR((- (v0.c0)))))AND(((x'acda') BETWEEN (vt0.c0) AND (v0.c0)))) DESC);
SELECT * FROM vt0, v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))>((((vt0.c0) IS TRUE))))) ORDER BY ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR((- (v0.c0)))))AND(((x'acda') BETWEEN (vt0.c0) AND (v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT (((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))>((((vt0.c0) IS TRUE))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR((- (v0.c0)))))AND(((x'acda') BETWEEN (vt0.c0) AND (v0.c0)))) DESC);
SELECT * FROM vt0, v0 WHERE ((((((((v0.c0)OR(v0.c0)))OR(v0.c0))))>((((vt0.c0) IS TRUE))))) ORDER BY ((((((((v0.c0)AND(vt0.c0)))OR(v0.c0)))OR((- (v0.c0)))))AND(((x'acda') BETWEEN (vt0.c0) AND (v0.c0)))) DESC;
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((json_valid(0.8613392261094203))GLOB(((((t1.c2)AND(NULL)))AND(t1.c2))))) ORDER BY (((((((((rt0.c1 IN (NULL)))OR(((t1.c2) NOT BETWEEN (rt0.c3) AND (t1.c0)))))OR(((t1.c2) BETWEEN (0Xfffffffff721c216) AND (t1.c0)))))AND(vt0.c0)))OR((+ (t1.c0)))) ASC  NULLS FIRST, ((t1.c1)>>(CAST(t1.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_valid(0.8613392261094203))GLOB(((((t1.c2)AND(NULL)))AND(t1.c2))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((((((((rt0.c1 IN (NULL)))OR(((t1.c2) NOT BETWEEN (rt0.c3) AND (t1.c0)))))OR(((t1.c2) BETWEEN (0xfffffffff721c216) AND (t1.c0)))))AND(vt0.c0)))OR((+ (t1.c0)))) ASC  NULLS FIRST, ((t1.c1)>>(CAST(t1.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((json_valid(0.8613392261094203))GLOB(((((t1.c2)AND(NULL)))AND(t1.c2))))) ORDER BY (((((((((rt0.c1 IN (NULL)))OR(((t1.c2) NOT BETWEEN (rt0.c3) AND (t1.c0)))))OR(((t1.c2) BETWEEN (0Xfffffffff721c216) AND (t1.c0)))))AND(vt0.c0)))OR((+ (t1.c0)))) ASC  NULLS FIRST, ((t1.c1)>>(CAST(t1.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((json_valid(0.8613392261094203))GLOB(((((t1.c2)AND(NULL)))AND(t1.c2))))) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY (((((((((rt0.c1 IN (NULL)))OR(((t1.c2) NOT BETWEEN (rt0.c3) AND (t1.c0)))))OR(((t1.c2) BETWEEN (0xfffffffff721c216) AND (t1.c0)))))AND(vt0.c0)))OR((+ (t1.c0)))) ASC  NULLS FIRST, ((t1.c1)>>(CAST(t1.c1 AS TEXT))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM t1, vt0, rt0 WHERE (((json_valid(0.8613392261094203))GLOB(((((t1.c2)AND(NULL)))AND(t1.c2))))) ORDER BY (((((((((rt0.c1 IN (NULL)))OR(((t1.c2) NOT BETWEEN (rt0.c3) AND (t1.c0)))))OR(((t1.c2) BETWEEN (0Xfffffffff721c216) AND (t1.c0)))))AND(vt0.c0)))OR((+ (t1.c0)))) ASC  NULLS FIRST, ((t1.c1)>>(CAST(t1.c1 AS TEXT))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c2 THEN x'703c2bca' END)IS((t1.c1 IN ())))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c2 THEN x'703c2bca' END)IS((t1.c1 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c2 THEN x'703c2bca' END)IS((t1.c1 IN ())))) ORDER BY ''  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN t1.c2 THEN x'703c2bca' END)IS((t1.c1 IN ())))) IS TRUE)  as count FROM t1 ORDER BY ''  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c2 THEN x'703c2bca' END)IS((t1.c1 IN ())))) ORDER BY ''  NULLS FIRST;
SELECT * FROM v0, rt0 WHERE (((LIKELIHOOD(rt0.c0, 0.5127392353088491)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c0, 0.5127392353088491)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((LIKELIHOOD(rt0.c0, 0.5127392353088491)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELIHOOD(rt0.c0, 0.5127392353088491)) NOT NULL)) IS TRUE)  as count FROM v0, rt0);
SELECT * FROM v0, rt0 WHERE (((LIKELIHOOD(rt0.c0, 0.5127392353088491)) NOT NULL));
SELECT ALL * FROM v0, t1 WHERE (((((v0.c0)>>(t1.c2))) BETWEEN (((t1.c0) ISNULL)) AND (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(t1.c2))) BETWEEN (((t1.c0) ISNULL)) AND (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((v0.c0)>>(t1.c2))) BETWEEN (((t1.c0) ISNULL)) AND (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)>>(t1.c2))) BETWEEN (((t1.c0) ISNULL)) AND (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2))))) IS TRUE)  as count FROM v0, t1);
SELECT ALL * FROM v0, t1 WHERE (((((v0.c0)>>(t1.c2))) BETWEEN (((t1.c0) ISNULL)) AND (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c2)))));
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM rt0, vt0 ORDER BY rt0.c3 ASC  NULLS LAST);
SELECT ALL * FROM rt0, vt0 WHERE (rt0.c3) ORDER BY rt0.c3 ASC  NULLS LAST;
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, '9E{f v')) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END, (((t1.c1, t1.c0, t1.c1))<=((t1.c2, t1.c2, t1.c1))))) AND ((((t1.c1)+(t1.c1)), ((((((((t1.c1)OR(t1.c2)))AND(t1.c0)))OR(t1.c1)))OR(t1.c2)), ((((t1.c2)OR(t1.c1)))OR(0.9324248165225969)))))) ORDER BY ((((t1.c1, t1.c1, t1.c1))>((t1.c2, t1.c1, t1.c2))) IN ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) DESC, HEX(DISTINCT ((t1.c0)>(t1.c0))) DESC, (t1.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1, t1.c1, '9E{f v')) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END, (((t1.c1, t1.c0, t1.c1))<=((t1.c2, t1.c2, t1.c1))))) AND ((((t1.c1)+(t1.c1)), ((((((((t1.c1)OR(t1.c2)))AND(t1.c0)))OR(t1.c1)))OR(t1.c2)), ((((t1.c2)OR(t1.c1)))OR(0.9324248165225969)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1, t1.c1, t1.c1))>((t1.c2, t1.c1, t1.c2))) IN ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) DESC, HEX(DISTINCT ((t1.c0)>(t1.c0))) DESC, (t1.c1 IN ())  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, '9E{f v')) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END, (((t1.c1, t1.c0, t1.c1))<=((t1.c2, t1.c2, t1.c1))))) AND ((((t1.c1)+(t1.c1)), ((((((((t1.c1)OR(t1.c2)))AND(t1.c0)))OR(t1.c1)))OR(t1.c2)), ((((t1.c2)OR(t1.c1)))OR(0.9324248165225969)))))) ORDER BY ((((t1.c1, t1.c1, t1.c1))>((t1.c2, t1.c1, t1.c2))) IN ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) DESC, HEX(DISTINCT ((t1.c0)>(t1.c0))) DESC, (t1.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c1, t1.c1, '9E{f v')) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END, (((t1.c1, t1.c0, t1.c1))<=((t1.c2, t1.c2, t1.c1))))) AND ((((t1.c1)+(t1.c1)), ((((((((t1.c1)OR(t1.c2)))AND(t1.c0)))OR(t1.c1)))OR(t1.c2)), ((((t1.c2)OR(t1.c1)))OR(0.9324248165225969)))))) IS TRUE)  as count FROM t1 ORDER BY ((((t1.c1, t1.c1, t1.c1))>((t1.c2, t1.c1, t1.c2))) IN ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) DESC, HEX(DISTINCT ((t1.c0)>(t1.c0))) DESC, (t1.c1 IN ())  NULLS FIRST);
SELECT ALL * FROM t1 WHERE ((((t1.c1, t1.c1, '9E{f v')) BETWEEN ((((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c0)), CASE WHEN t1.c0 THEN t1.c1 ELSE t1.c2 END, (((t1.c1, t1.c0, t1.c1))<=((t1.c2, t1.c2, t1.c1))))) AND ((((t1.c1)+(t1.c1)), ((((((((t1.c1)OR(t1.c2)))AND(t1.c0)))OR(t1.c1)))OR(t1.c2)), ((((t1.c2)OR(t1.c1)))OR(0.9324248165225969)))))) ORDER BY ((((t1.c1, t1.c1, t1.c1))>((t1.c2, t1.c1, t1.c2))) IN ((((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t1.c0))))) DESC, HEX(DISTINCT ((t1.c0)>(t1.c0))) DESC, (t1.c1 IN ())  NULLS FIRST;
SELECT * FROM vt0, t1, v0, rt0 WHERE (((((CAST(t1.c1 AS BLOB))OR((~ (t1.c2)))))AND(((t1.c2)>=(t1.c2))))) ORDER BY CAST((t1.c2 IN ()) AS REAL) DESC, ((x'1b65e19f' COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS BLOB))OR((~ (t1.c2)))))AND(((t1.c2)>=(t1.c2))))) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY CAST((t1.c2 IN ()) AS REAL) DESC, ((x'1b65e19f' COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))));
SELECT * FROM vt0, t1, v0, rt0 WHERE (((((CAST(t1.c1 AS BLOB))OR((~ (t1.c2)))))AND(((t1.c2)>=(t1.c2))))) ORDER BY CAST((t1.c2 IN ()) AS REAL) DESC, ((x'1b65e19f' COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CAST(t1.c1 AS BLOB))OR((~ (t1.c2)))))AND(((t1.c2)>=(t1.c2))))) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY CAST((t1.c2 IN ()) AS REAL) DESC, ((x'1b65e19f' COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))));
SELECT * FROM vt0, t1, v0, rt0 WHERE (((((CAST(t1.c1 AS BLOB))OR((~ (t1.c2)))))AND(((t1.c2)>=(t1.c2))))) ORDER BY CAST((t1.c2 IN ()) AS REAL) DESC, ((x'1b65e19f' COLLATE RTRIM)GLOB((((v0.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2)))));
SELECT * FROM t1, rt0, vt0 WHERE ((((- (rt0.c2)))<=(t1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<=(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END  NULLS FIRST);
SELECT * FROM t1, rt0, vt0 WHERE ((((- (rt0.c2)))<=(t1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c2)))<=(t1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY CASE WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END  NULLS FIRST);
SELECT * FROM t1, rt0, vt0 WHERE ((((- (rt0.c2)))<=(t1.c0 COLLATE NOCASE))) ORDER BY CASE WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (rt0.c2 IN ()) END  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((t1.c0) NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((t1.c0) NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((t1.c0) NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, t1, v0 WHERE (((t1.c0) NOT BETWEEN ((- (v0.c0))) AND (CAST(v0.c0 AS BLOB))));
SELECT * FROM t1 WHERE (ABS((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((NOT (t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (ABS((NOT (t1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS((NOT (t1.c0)))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (ABS((NOT (t1.c0))));
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)AND(0X7e52f542)))AND(v0.c0)) THEN (NOT (v0.c0)) ELSE TRIM(x'') END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)AND(0x7e52f542)))AND(v0.c0)) THEN (NOT (v0.c0)) ELSE TRIM(x'') END) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS LAST);
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)AND(0X7e52f542)))AND(v0.c0)) THEN (NOT (v0.c0)) ELSE TRIM(x'') END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)AND(0x7e52f542)))AND(v0.c0)) THEN (NOT (v0.c0)) ELSE TRIM(x'') END) IS TRUE)  as count FROM v0 ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS LAST);
SELECT * FROM v0 WHERE (CASE ((v0.c0) IS TRUE)  WHEN ((((v0.c0)AND(0X7e52f542)))AND(v0.c0)) THEN (NOT (v0.c0)) ELSE TRIM(x'') END) ORDER BY CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST(((((vt0.c0)OR(rt0.c1)))OR('2072167864')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(rt0.c1)))OR('2072167864')) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST(((((vt0.c0)OR(rt0.c1)))OR('2072167864')) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(((((vt0.c0)OR(rt0.c1)))OR('2072167864')) AS INTEGER)) IS TRUE)  as count FROM vt0, rt0, v0);
SELECT ALL * FROM vt0, rt0, v0 WHERE (CAST(((((vt0.c0)OR(rt0.c1)))OR('2072167864')) AS INTEGER));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((json_insert(rt0.c3, rt0.c0, rt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (('Swp8ሚ5' IN ())))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt0.c3, rt0.c0, rt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (('Swp8ሚ5' IN ())))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (rt0.c2 IN ()));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((json_insert(rt0.c3, rt0.c0, rt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (('Swp8ሚ5' IN ())))) ORDER BY (rt0.c2 IN ());
SELECT SUM(count) FROM (SELECT ALL ((((json_insert(rt0.c3, rt0.c0, rt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (('Swp8ሚ5' IN ())))) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY (rt0.c2 IN ()));
SELECT COUNT(*) FROM v0, vt0, rt0 WHERE (((json_insert(rt0.c3, rt0.c0, rt0.c0)) BETWEEN (CAST(vt0.c0 AS REAL)) AND (('Swp8ሚ5' IN ())))) ORDER BY (rt0.c2 IN ());
SELECT * FROM t1, vt0, rt0 WHERE (CAST(((((t1.c2)AND(t1.c2)))OR(rt0.c3)) AS TEXT)) ORDER BY '-143759214'  NULLS LAST, ((IFNULL(t1.c2, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c2)AND(t1.c2)))OR(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY '-143759214'  NULLS LAST, ((IFNULL(t1.c2, rt0.c2)) IS FALSE)  NULLS LAST);
SELECT * FROM t1, vt0, rt0 WHERE (CAST(((((t1.c2)AND(t1.c2)))OR(rt0.c3)) AS TEXT)) ORDER BY '-143759214'  NULLS LAST, ((IFNULL(t1.c2, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c2)AND(t1.c2)))OR(rt0.c3)) AS TEXT)) IS TRUE)  as count FROM t1, vt0, rt0 ORDER BY '-143759214'  NULLS LAST, ((IFNULL(t1.c2, rt0.c2)) IS FALSE)  NULLS LAST);
SELECT * FROM t1, vt0, rt0 WHERE (CAST(((((t1.c2)AND(t1.c2)))OR(rt0.c3)) AS TEXT)) ORDER BY '-143759214'  NULLS LAST, ((IFNULL(t1.c2, rt0.c2)) IS FALSE)  NULLS LAST;
SELECT ALL * FROM v0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON LIKE(NULL, (rt0.c1 IN ()), 'l') WHERE (((((v0.c0) NOT NULL))+(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))+(rt0.c2))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON LIKE(NULL, (rt0.c1 IN ()), 'l'));
SELECT ALL * FROM v0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON LIKE(NULL, (rt0.c1 IN ()), 'l') WHERE (((((v0.c0) NOT NULL))+(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOT NULL))+(rt0.c2))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN rt0 ON LIKE(NULL, (rt0.c1 IN ()), 'l'));
SELECT ALL * FROM v0, vt0 NOT INDEXED LEFT OUTER JOIN rt0 ON LIKE(NULL, (rt0.c1 IN ()), 'l') WHERE (((((v0.c0) NOT NULL))+(rt0.c2)));
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (t1.c1) ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c3) AND (t1.c2)))AND(CAST(t1.c2 AS INTEGER))))OR((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, 'i#')) AND ((rt0.c3, v0.c0, t1.c1))))))OR(rt0.c3 COLLATE RTRIM)))OR(((((vt0.c0)AND(t1.c1)))OR(t1.c1)))) ASC, (((t1.c1))<=(((((((((('(Hm*k')OR(t1.c0)))OR(rt0.c0)))AND(t1.c2)))OR(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c3) AND (t1.c2)))AND(CAST(t1.c2 AS INTEGER))))OR((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, 'i#')) AND ((rt0.c3, v0.c0, t1.c1))))))OR(rt0.c3 COLLATE RTRIM)))OR(((((vt0.c0)AND(t1.c1)))OR(t1.c1)))) ASC, (((t1.c1))<=(((((((((('(Hm*k')OR(t1.c0)))OR(rt0.c0)))AND(t1.c2)))OR(rt0.c2))))) DESC);
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (t1.c1) ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c3) AND (t1.c2)))AND(CAST(t1.c2 AS INTEGER))))OR((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, 'i#')) AND ((rt0.c3, v0.c0, t1.c1))))))OR(rt0.c3 COLLATE RTRIM)))OR(((((vt0.c0)AND(t1.c1)))OR(t1.c1)))) ASC, (((t1.c1))<=(((((((((('(Hm*k')OR(t1.c0)))OR(rt0.c0)))AND(t1.c2)))OR(rt0.c2))))) DESC;
SELECT SUM(count) FROM (SELECT ((t1.c1) IS TRUE)  as count FROM vt0, v0, t1, rt0 ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c3) AND (t1.c2)))AND(CAST(t1.c2 AS INTEGER))))OR((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, 'i#')) AND ((rt0.c3, v0.c0, t1.c1))))))OR(rt0.c3 COLLATE RTRIM)))OR(((((vt0.c0)AND(t1.c1)))OR(t1.c1)))) ASC, (((t1.c1))<=(((((((((('(Hm*k')OR(t1.c0)))OR(rt0.c0)))AND(t1.c2)))OR(rt0.c2))))) DESC);
SELECT ALL * FROM vt0, v0, t1, rt0 WHERE (t1.c1) ORDER BY ((((((((((rt0.c0) BETWEEN (rt0.c3) AND (t1.c2)))AND(CAST(t1.c2 AS INTEGER))))OR((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, rt0.c1, 'i#')) AND ((rt0.c3, v0.c0, t1.c1))))))OR(rt0.c3 COLLATE RTRIM)))OR(((((vt0.c0)AND(t1.c1)))OR(t1.c1)))) ASC, (((t1.c1))<=(((((((((('(Hm*k')OR(t1.c0)))OR(rt0.c0)))AND(t1.c2)))OR(rt0.c2))))) DESC;
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, v0);
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(v0.c0 COLLATE RTRIM AS NUMERIC)) IS TRUE)  as count FROM t1, vt0, v0);
SELECT COUNT(*) FROM t1, vt0, v0 WHERE (CAST(v0.c0 COLLATE RTRIM AS NUMERIC));
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((+ (rt0.c1))))) ORDER BY rt0.c1 ASC, (((((v0.c0))>=((rt0.c1)))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 ASC, (((((v0.c0))>=((rt0.c1)))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((+ (rt0.c1))))) ORDER BY rt0.c1 ASC, (((((v0.c0))>=((rt0.c1)))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((+ ((+ (rt0.c1))))) IS TRUE)  as count FROM v0, rt0 ORDER BY rt0.c1 ASC, (((((v0.c0))>=((rt0.c1)))) ISNULL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, rt0 WHERE ((+ ((+ (rt0.c1))))) ORDER BY rt0.c1 ASC, (((((v0.c0))>=((rt0.c1)))) ISNULL)  NULLS FIRST;
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT COUNT(*) FROM rt0, vt0, t1, v0 WHERE (SQLITE_SOURCE_ID());
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (-1.585906364E9) ORDER BY ((((t1.c2)+(vt0.c0)))>((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((x'', rt0.c1, rt0.c0))))), '868iXT'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.585906364E9) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((t1.c2)+(vt0.c0)))>((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((x'', rt0.c1, rt0.c0))))), '868iXT'  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (-1.585906364E9) ORDER BY ((((t1.c2)+(vt0.c0)))>((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((x'', rt0.c1, rt0.c0))))), '868iXT'  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((-1.585906364E9) IS TRUE)  as count FROM t1, rt0, vt0 ORDER BY ((((t1.c2)+(vt0.c0)))>((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((x'', rt0.c1, rt0.c0))))), '868iXT'  NULLS LAST);
SELECT COUNT(*) FROM t1, rt0, vt0 WHERE (-1.585906364E9) ORDER BY ((((t1.c2)+(vt0.c0)))>((((rt0.c1, rt0.c0, rt0.c2)) BETWEEN ((rt0.c2, rt0.c0, rt0.c3)) AND ((x'', rt0.c1, rt0.c0))))), '868iXT'  NULLS LAST;
SELECT ALL * FROM t1, vt0, rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((t1.c1))) COLLATE BINARY) ORDER BY CAST(((t1.c2) IS TRUE) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((t1.c1))) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY CAST(((t1.c2) IS TRUE) AS BLOB) DESC);
SELECT ALL * FROM t1, vt0, rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((t1.c1))) COLLATE BINARY) ORDER BY CAST(((t1.c2) IS TRUE) AS BLOB) DESC;
SELECT SUM(count) FROM (SELECT (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((t1.c1))) COLLATE BINARY) IS TRUE)  as count FROM t1, vt0, rt0, v0 ORDER BY CAST(((t1.c2) IS TRUE) AS BLOB) DESC);
SELECT ALL * FROM t1, vt0, rt0, v0 WHERE ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((t1.c1))) COLLATE BINARY) ORDER BY CAST(((t1.c2) IS TRUE) AS BLOB) DESC;
SELECT ALL * FROM v0, t1, rt0, vt0 WHERE ((((- (rt0.c0)))<=(CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END))) ORDER BY CASE CASE WHEN rt0.c2 THEN vt0.c0 END  WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (rt0.c3) AND (t1.c2)) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))<=(CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, t1, rt0, vt0 ORDER BY CASE CASE WHEN rt0.c2 THEN vt0.c0 END  WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (rt0.c3) AND (t1.c2)) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM v0, t1, rt0, vt0 WHERE ((((- (rt0.c0)))<=(CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END))) ORDER BY CASE CASE WHEN rt0.c2 THEN vt0.c0 END  WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (rt0.c3) AND (t1.c2)) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (rt0.c0)))<=(CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END))) IS TRUE)  as count FROM v0, t1, rt0, vt0 ORDER BY CASE CASE WHEN rt0.c2 THEN vt0.c0 END  WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (rt0.c3) AND (t1.c2)) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST);
SELECT ALL * FROM v0, t1, rt0, vt0 WHERE ((((- (rt0.c0)))<=(CASE WHEN t1.c1 THEN t1.c2 ELSE vt0.c0 END))) ORDER BY CASE CASE WHEN rt0.c2 THEN vt0.c0 END  WHEN CAST(t1.c0 AS INTEGER) THEN ((t1.c0) NOT BETWEEN (rt0.c3) AND (t1.c2)) ELSE vt0.c0 COLLATE BINARY END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE (rt0.c0);
SELECT SUM(count) FROM (SELECT ((rt0.c0) IS TRUE)  as count FROM rt0, vt0, v0, t1);
SELECT ALL COUNT(*) FROM rt0, vt0, v0, t1 WHERE (rt0.c0);
SELECT COUNT(*) FROM v0 INDEXED BY i92 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND('(HM*K'))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)%(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND('(HM*K'))) IS TRUE)  as count FROM v0 INDEXED BY i92 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)%(v0.c0)) DESC);
SELECT COUNT(*) FROM v0 INDEXED BY i92 WHERE (((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND('(HM*K'))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)%(v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND('(HM*K'))) IS TRUE)  as count FROM v0 INDEXED BY i92 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)%(v0.c0)) DESC);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM t1 WHERE (CASE ((((t1.c2)OR(t1.c1)))AND(t1.c0))  WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND('0.8774654242794063')))AND(x'')))AND(t1.c0)) WHEN (t1.c0 IN ()) THEN (((t1.c2))<((t1.c0))) WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c2)) THEN (t1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c2)OR(t1.c1)))AND(t1.c0))  WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND('0.8774654242794063')))AND(x'')))AND(t1.c0)) WHEN (t1.c0 IN ()) THEN (((t1.c2))<((t1.c0))) WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c2)) THEN (t1.c2 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((((t1.c2)OR(t1.c1)))AND(t1.c0))  WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND('0.8774654242794063')))AND(x'')))AND(t1.c0)) WHEN (t1.c0 IN ()) THEN (((t1.c2))<((t1.c0))) WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c2)) THEN (t1.c2 IN ()) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((t1.c2)OR(t1.c1)))AND(t1.c0))  WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND('0.8774654242794063')))AND(x'')))AND(t1.c0)) WHEN (t1.c0 IN ()) THEN (((t1.c2))<((t1.c0))) WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c2)) THEN (t1.c2 IN ()) END) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CASE ((((t1.c2)OR(t1.c1)))AND(t1.c0))  WHEN ((t1.c2) BETWEEN (t1.c2) AND (t1.c2)) THEN ((((((((((((t1.c1)AND(t1.c1)))OR(t1.c0)))AND(t1.c0)))AND('0.8774654242794063')))AND(x'')))AND(t1.c0)) WHEN (t1.c0 IN ()) THEN (((t1.c2))<((t1.c0))) WHEN ((((t1.c1)OR(t1.c1)))AND(t1.c2)) THEN (t1.c2 IN ()) END);
SELECT * FROM t1 INDEXED BY i92 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) IS FALSE) END) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t1.c0  WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) IS FALSE) END) IS TRUE)  as count FROM t1 INDEXED BY i92 ORDER BY t1.c0 ASC);
SELECT * FROM t1 INDEXED BY i92 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) IS FALSE) END) ORDER BY t1.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE t1.c0  WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) IS FALSE) END) IS TRUE)  as count FROM t1 INDEXED BY i92 ORDER BY t1.c0 ASC);
SELECT * FROM t1 INDEXED BY i92 WHERE (CASE WHEN CASE t1.c0  WHEN t1.c2 THEN t1.c2 END THEN ((t1.c0) IS FALSE) END) ORDER BY t1.c0 ASC;
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL)) ORDER BY ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL)) ORDER BY ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ((((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL)) IS TRUE)  as count FROM t1 ORDER BY ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY DESC);
SELECT ALL COUNT(*) FROM t1 WHERE (((CASE WHEN t1.c1 THEN t1.c0 END) NOT NULL)) ORDER BY ((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)) COLLATE BINARY DESC;
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c0) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 1371650543 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END) NOT BETWEEN (((t1.c1)>>(v0.c0))) AND (((vt0.c0)>=(t1.c2)))) DESC  NULLS FIRST, (((- (t1.c0)))IS(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 1371650543 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END) NOT BETWEEN (((t1.c1)>>(v0.c0))) AND (((vt0.c0)>=(t1.c2)))) DESC  NULLS FIRST, (((- (t1.c0)))IS(v0.c0))  NULLS LAST);
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c0) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 1371650543 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END) NOT BETWEEN (((t1.c1)>>(v0.c0))) AND (((vt0.c0)>=(t1.c2)))) DESC  NULLS FIRST, (((- (t1.c0)))IS(v0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, t1, vt0 ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 1371650543 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END) NOT BETWEEN (((t1.c1)>>(v0.c0))) AND (((vt0.c0)>=(t1.c2)))) DESC  NULLS FIRST, (((- (t1.c0)))IS(v0.c0))  NULLS LAST);
SELECT ALL * FROM v0, t1, vt0 WHERE (vt0.c0) ORDER BY ((CASE t1.c0  WHEN t1.c0 THEN vt0.c0 WHEN 1371650543 THEN t1.c2 WHEN t1.c1 THEN t1.c2 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN v0.c0 ELSE t1.c2 END) NOT BETWEEN (((t1.c1)>>(v0.c0))) AND (((vt0.c0)>=(t1.c2)))) DESC  NULLS FIRST, (((- (t1.c0)))IS(v0.c0))  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((('718432342', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))OR(HEX(vt0.c0)))) ORDER BY -1.062888014E9 ASC  NULLS LAST, (((vt0.c0)GLOB(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('718432342', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))OR(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY -1.062888014E9 ASC  NULLS LAST, (((vt0.c0)GLOB(NULL)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((('718432342', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))OR(HEX(vt0.c0)))) ORDER BY -1.062888014E9 ASC  NULLS LAST, (((vt0.c0)GLOB(NULL)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((('718432342', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))OR(HEX(vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY -1.062888014E9 ASC  NULLS LAST, (((vt0.c0)GLOB(NULL)) IN ()) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((((('718432342', vt0.c0, vt0.c0))>((vt0.c0, vt0.c0, vt0.c0))))OR(HEX(vt0.c0)))) ORDER BY -1.062888014E9 ASC  NULLS LAST, (((vt0.c0)GLOB(NULL)) IN ()) DESC;
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (t1.c2) AND (x'1b58'))) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((0.6447499948937465)) AND ((t1.c1)))) AND (((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)))) INNER JOIN vt0 ON ((((t1.c2)+(vt0.c0))) IS TRUE) RIGHT OUTER JOIN t1 ON (((- (NULL))) NOT BETWEEN ((((t1.c1))<((x'')))) AND (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE (CASE WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE rt0.c2 END THEN ((rt0.c3)-(rt0.c3)) END) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((((v0.c0)AND(t1.c1)))OR(t1.c1))) AND (LIKELIHOOD(DISTINCT rt0.c3, 0.3364495023549712))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE rt0.c2 END THEN ((rt0.c3)-(rt0.c3)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (t1.c2) AND (x'1b58'))) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((0.6447499948937465)) AND ((t1.c1)))) AND (((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)))) INNER JOIN vt0 ON ((((t1.c2)+(vt0.c0))) IS TRUE) RIGHT OUTER JOIN t1 ON (((- (NULL))) NOT BETWEEN ((((t1.c1))<((x'')))) AND (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((((v0.c0)AND(t1.c1)))OR(t1.c1))) AND (LIKELIHOOD(DISTINCT rt0.c3, 0.3364495023549712))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (t1.c2) AND (x'1b58'))) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((0.6447499948937465)) AND ((t1.c1)))) AND (((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)))) INNER JOIN vt0 ON ((((t1.c2)+(vt0.c0))) IS TRUE) RIGHT OUTER JOIN t1 ON (((- (NULL))) NOT BETWEEN ((((t1.c1))<((x'')))) AND (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0)))) WHERE (CASE WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE rt0.c2 END THEN ((rt0.c3)-(rt0.c3)) END) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((((v0.c0)AND(t1.c1)))OR(t1.c1))) AND (LIKELIHOOD(DISTINCT rt0.c3, 0.3364495023549712))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN t1.c1 THEN t1.c2 ELSE rt0.c2 END THEN ((rt0.c3)-(rt0.c3)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN rt0 ON ((((NULL) NOT BETWEEN (t1.c2) AND (x'1b58'))) NOT BETWEEN ((((t1.c0)) NOT BETWEEN ((0.6447499948937465)) AND ((t1.c1)))) AND (((rt0.c0) BETWEEN (v0.c0) AND (t1.c0)))) INNER JOIN vt0 ON ((((t1.c2)+(vt0.c0))) IS TRUE) RIGHT OUTER JOIN t1 ON (((- (NULL))) NOT BETWEEN ((((t1.c1))<((x'')))) AND (((rt0.c3) BETWEEN (rt0.c2) AND (vt0.c0)))) ORDER BY ((((vt0.c0) NOT NULL)) NOT BETWEEN (((((v0.c0)AND(t1.c1)))OR(t1.c1))) AND (LIKELIHOOD(DISTINCT rt0.c3, 0.3364495023549712))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((t1.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((+ ((t1.c0 IN ())))) IS TRUE)  as count FROM t1);
SELECT ALL COUNT(*) FROM t1 WHERE ((+ ((t1.c0 IN ()))));
SELECT * FROM t1, v0, vt0, rt0 WHERE (((((((t1.c0))>=((NULL))), (t1.c0 IN (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(t1.c2))))<((LOWER(DISTINCT vt0.c0), (rt0.c0 IN ()), (+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0))>=((NULL))), (t1.c0 IN (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(t1.c2))))<((LOWER(DISTINCT vt0.c0), (rt0.c0 IN ()), (+ (rt0.c1)))))) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((((((t1.c0))>=((NULL))), (t1.c0 IN (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(t1.c2))))<((LOWER(DISTINCT vt0.c0), (rt0.c0 IN ()), (+ (rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((t1.c0))>=((NULL))), (t1.c0 IN (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(t1.c2))))<((LOWER(DISTINCT vt0.c0), (rt0.c0 IN ()), (+ (rt0.c1)))))) IS TRUE)  as count FROM t1, v0, vt0, rt0);
SELECT * FROM t1, v0, vt0, rt0 WHERE (((((((t1.c0))>=((NULL))), (t1.c0 IN (rt0.c1)), ((((vt0.c0)OR(rt0.c3)))AND(t1.c2))))<((LOWER(DISTINCT vt0.c0), (rt0.c0 IN ()), (+ (rt0.c1))))));
SELECT * FROM vt0, t1, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(t1.c0)))OR(t1.c1)) COLLATE NOCASE) ORDER BY ((((t1.c0)%(t1.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(t1.c0)))OR(t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((((t1.c0)%(t1.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (t1.c2)))));
SELECT * FROM vt0, t1, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(t1.c0)))OR(t1.c1)) COLLATE NOCASE) ORDER BY ((((t1.c0)%(t1.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(t1.c0)))OR(t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, v0 ORDER BY ((((t1.c0)%(t1.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (t1.c2)))));
SELECT * FROM vt0, t1, v0 WHERE (((((((((vt0.c0)AND(v0.c0)))AND(v0.c0)))OR(t1.c0)))OR(t1.c1)) COLLATE NOCASE) ORDER BY ((((t1.c0)%(t1.c0)))<(((v0.c0) BETWEEN (v0.c0) AND (t1.c2))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (('-1474161718')) AND (('')))) ORDER BY (((rt0.c2)<=(rt0.c3)) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN (('-1474161718')) AND (('')))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)<=(rt0.c3)) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (('-1474161718')) AND (('')))) ORDER BY (((rt0.c2)<=(rt0.c3)) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))));
SELECT SUM(count) FROM (SELECT (((((rt0.c3)) NOT BETWEEN (('-1474161718')) AND (('')))) IS TRUE)  as count FROM rt0 ORDER BY (((rt0.c2)<=(rt0.c3)) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3)))));
SELECT ALL COUNT(*) FROM rt0 WHERE ((((rt0.c3)) NOT BETWEEN (('-1474161718')) AND (('')))) ORDER BY (((rt0.c2)<=(rt0.c3)) IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c3))));
SELECT * FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(x'cc81')))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS NOT(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(x'cc81')))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(x'cc81')))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)IS NOT(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(x'cc81')))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)IS NOT(v0.c0)))AND(CAST(v0.c0 AS INTEGER))))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(x'cc81')))AND(v0.c0)))));
SELECT * FROM vt0, t1, v0, rt0 WHERE ((- ('0.9330912584506224')));
SELECT SUM(count) FROM (SELECT (((- ('0.9330912584506224'))) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT * FROM vt0, t1, v0, rt0 WHERE ((- ('0.9330912584506224')));
SELECT SUM(count) FROM (SELECT (((- ('0.9330912584506224'))) IS TRUE)  as count FROM vt0, t1, v0, rt0);
SELECT * FROM vt0, t1, v0, rt0 WHERE ((- ('0.9330912584506224')));
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((- ((('0.8906714044750823') NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('0.8906714044750823') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((- ((('0.8906714044750823') NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('0.8906714044750823') NOT BETWEEN (rt0.c2) AND (rt0.c2))))) IS TRUE)  as count FROM t1, vt0, rt0, v0);
SELECT COUNT(*) FROM t1, vt0, rt0, v0 WHERE ((- ((('0.8906714044750823') NOT BETWEEN (rt0.c2) AND (rt0.c2)))));
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ((((+ (t1.c1)))>=((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c1)))>=((~ (NULL))))) IS TRUE)  as count FROM v0, vt0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ((((+ (t1.c1)))>=((~ (NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((+ (t1.c1)))>=((~ (NULL))))) IS TRUE)  as count FROM v0, vt0, t1);
SELECT ALL COUNT(*) FROM v0, vt0, t1 WHERE ((((+ (t1.c1)))>=((~ (NULL)))));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS REAL)) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN ((vt0.c0) ISNULL) ELSE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN ((vt0.c0) ISNULL) ELSE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN ((vt0.c0) ISNULL) ELSE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt0.c0 THEN ((vt0.c0) ISNULL) ELSE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END END) IS TRUE)  as count FROM vt0, rt0);
SELECT ALL COUNT(*) FROM vt0, rt0 WHERE (CASE WHEN rt0.c0 THEN ((vt0.c0) ISNULL) ELSE CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END END);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN v0.c0 THEN ((rt0.c1)/(rt0.c3)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c2)<(x'')) THEN ((rt0.c2)|(rt0.c1)) ELSE CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(v0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) ISNULL)  WHEN v0.c0 THEN ((rt0.c1)/(rt0.c3)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c2)<(x'')) THEN ((rt0.c2)|(rt0.c1)) ELSE CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(v0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN v0.c0 THEN ((rt0.c1)/(rt0.c3)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c2)<(x'')) THEN ((rt0.c2)|(rt0.c1)) ELSE CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(v0.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt0.c0) ISNULL)  WHEN v0.c0 THEN ((rt0.c1)/(rt0.c3)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c2)<(x'')) THEN ((rt0.c2)|(rt0.c1)) ELSE CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END END) IS TRUE)  as count FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(v0.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN rt0 ON rt0.c0 WHERE (CASE ((rt0.c0) ISNULL)  WHEN v0.c0 THEN ((rt0.c1)/(rt0.c3)) WHEN ((rt0.c3)IS NOT(rt0.c2)) THEN CAST(v0.c0 AS REAL) WHEN ((rt0.c2)<(x'')) THEN ((rt0.c2)|(rt0.c1)) ELSE CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 END END) ORDER BY ((((((rt0.c3)OR(rt0.c3)))OR(v0.c0))) IS FALSE)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i4 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END THEN ((t1.c1)*(t1.c2)) END FULL OUTER JOIN t1 ON ((((rt0.c1)AND(((t1.c1) IS TRUE))))OR(((rt0.c2) NOT NULL))) LEFT OUTER JOIN v0 ON (((CASE WHEN 0.10177909813216046 THEN rt0.c2 WHEN vt0.c0 THEN t1.c2 WHEN v0.c0 THEN t1.c2 END))>((((vt0.c0) ISNULL)))) WHERE ((('-1276625336')%(((t1.c2)>>(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1276625336')%(((t1.c2)>>(t1.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i4 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END THEN ((t1.c1)*(t1.c2)) END FULL OUTER JOIN t1 ON ((((rt0.c1)AND(((t1.c1) IS TRUE))))OR(((rt0.c2) NOT NULL))) LEFT OUTER JOIN v0 ON (((CASE WHEN 0.10177909813216046 THEN rt0.c2 WHEN vt0.c0 THEN t1.c2 WHEN v0.c0 THEN t1.c2 END))>((((vt0.c0) ISNULL)))));
SELECT ALL COUNT(*) FROM vt0 INDEXED BY i4 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END THEN ((t1.c1)*(t1.c2)) END FULL OUTER JOIN t1 ON ((((rt0.c1)AND(((t1.c1) IS TRUE))))OR(((rt0.c2) NOT NULL))) LEFT OUTER JOIN v0 ON (((CASE WHEN 0.10177909813216046 THEN rt0.c2 WHEN vt0.c0 THEN t1.c2 WHEN v0.c0 THEN t1.c2 END))>((((vt0.c0) ISNULL)))) WHERE ((('-1276625336')%(((t1.c2)>>(t1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((('-1276625336')%(((t1.c2)>>(t1.c1))))) IS TRUE)  as count FROM vt0 INDEXED BY i4 RIGHT OUTER JOIN rt0 ON CASE CAST(rt0.c0 AS NUMERIC)  WHEN CASE WHEN v0.c0 THEN rt0.c3 ELSE vt0.c0 END THEN ((t1.c1)*(t1.c2)) END FULL OUTER JOIN t1 ON ((((rt0.c1)AND(((t1.c1) IS TRUE))))OR(((rt0.c2) NOT NULL))) LEFT OUTER JOIN v0 ON (((CASE WHEN 0.10177909813216046 THEN rt0.c2 WHEN vt0.c0 THEN t1.c2 WHEN v0.c0 THEN t1.c2 END))>((((vt0.c0) ISNULL)))));
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE ((~ ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t1 WHERE ((v0.c0 IN ())) ORDER BY ((((rt0.c3)>=(1904755407))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((((rt0.c3)>=(1904755407))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t1 WHERE ((v0.c0 IN ())) ORDER BY ((((rt0.c3)>=(1904755407))) ISNULL);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ())) IS TRUE)  as count FROM vt0, v0, rt0, t1 ORDER BY ((((rt0.c3)>=(1904755407))) ISNULL));
SELECT ALL COUNT(*) FROM vt0, v0, rt0, t1 WHERE ((v0.c0 IN ())) ORDER BY ((((rt0.c3)>=(1904755407))) ISNULL);
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON '1299518634' CROSS JOIN v0 ON ((NULL)>=((- (rt0.c0)))) WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.4316115507149091)))AND(CAST(rt0.c3 AS BLOB))))AND(0.48932259264356004)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.4316115507149091)))AND(CAST(rt0.c3 AS BLOB))))AND(0.48932259264356004))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON '1299518634' CROSS JOIN v0 ON ((NULL)>=((- (rt0.c0)))));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON '1299518634' CROSS JOIN v0 ON ((NULL)>=((- (rt0.c0)))) WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.4316115507149091)))AND(CAST(rt0.c3 AS BLOB))))AND(0.48932259264356004)));
SELECT SUM(count) FROM (SELECT ((((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.4316115507149091)))AND(CAST(rt0.c3 AS BLOB))))AND(0.48932259264356004))) IS TRUE)  as count FROM t1 LEFT OUTER JOIN rt0 ON '1299518634' CROSS JOIN v0 ON ((NULL)>=((- (rt0.c0)))));
SELECT * FROM t1 LEFT OUTER JOIN rt0 ON '1299518634' CROSS JOIN v0 ON ((NULL)>=((- (rt0.c0)))) WHERE (((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (0.4316115507149091)))AND(CAST(rt0.c3 AS BLOB))))AND(0.48932259264356004)));
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(rt0.c0 AS NUMERIC)) IS TRUE)  as count FROM rt0, vt0, v0);
SELECT COUNT(*) FROM rt0, vt0, v0 WHERE (CAST(rt0.c0 AS NUMERIC));
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((t1.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1 IN ())) IS TRUE));
SELECT COUNT(*) FROM t1, vt0 WHERE (json_extract(((t1.c1)<<(vt0.c0)), CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE '0.8525818529172173' END)) ORDER BY ((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c0, t1.c2, vt0.c0))) IN (((t1.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((t1.c1)<<(vt0.c0)), CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE '0.8525818529172173' END)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c0, t1.c2, vt0.c0))) IN (((t1.c1) IS FALSE))));
SELECT COUNT(*) FROM t1, vt0 WHERE (json_extract(((t1.c1)<<(vt0.c0)), CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE '0.8525818529172173' END)) ORDER BY ((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c0, t1.c2, vt0.c0))) IN (((t1.c1) IS FALSE)));
SELECT SUM(count) FROM (SELECT ALL ((json_extract(((t1.c1)<<(vt0.c0)), CASE vt0.c0  WHEN t1.c2 THEN vt0.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE '0.8525818529172173' END)) IS TRUE)  as count FROM t1, vt0 ORDER BY ((((t1.c0, t1.c1, t1.c2)) BETWEEN ((t1.c0, t1.c0, t1.c2)) AND ((t1.c0, t1.c2, vt0.c0))) IN (((t1.c1) IS FALSE))));
SELECT COUNT(*) FROM v0, rt0 WHERE (0.9078663876750833) ORDER BY ((v0.c0)||(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 END)|(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9078663876750833) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)||(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 END)|(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.9078663876750833) ORDER BY ((v0.c0)||(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 END)|(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0.9078663876750833) IS TRUE)  as count FROM v0, rt0 ORDER BY ((v0.c0)||(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 END)|(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, rt0 WHERE (0.9078663876750833) ORDER BY ((v0.c0)||(((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC, ((CASE v0.c0  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 END)|(CAST(rt0.c3 AS NUMERIC))) DESC  NULLS FIRST;
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c1)))IS((~ (t1.c1))))) ORDER BY ((CAST(0.46937506100308124 AS REAL)) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1))>=((NULL))))) ASC, CAST(t1.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)|(t1.c1)))IS((~ (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(0.46937506100308124 AS REAL)) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1))>=((NULL))))) ASC, CAST(t1.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c1)))IS((~ (t1.c1))))) ORDER BY ((CAST(0.46937506100308124 AS REAL)) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1))>=((NULL))))) ASC, CAST(t1.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)|(t1.c1)))IS((~ (t1.c1))))) IS TRUE)  as count FROM t1 ORDER BY ((CAST(0.46937506100308124 AS REAL)) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1))>=((NULL))))) ASC, CAST(t1.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST);
SELECT ALL * FROM t1 WHERE (((((t1.c0)|(t1.c1)))IS((~ (t1.c1))))) ORDER BY ((CAST(0.46937506100308124 AS REAL)) BETWEEN (t1.c1 COLLATE BINARY) AND ((((t1.c1))>=((NULL))))) ASC, CAST(t1.c0 COLLATE NOCASE AS TEXT) ASC  NULLS FIRST;
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c2 IN ()) AS NUMERIC)) IS TRUE)  as count FROM v0, rt0, vt0);
SELECT ALL * FROM v0, rt0, vt0 WHERE (CAST((rt0.c2 IN ()) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0)|(v0.c0)), x'1f82')) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((v0.c0)|(v0.c0)), x'1f82')) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0)|(v0.c0)), x'1f82')) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(((v0.c0)|(v0.c0)), x'1f82')) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (COALESCE(((v0.c0)|(v0.c0)), x'1f82')) ORDER BY (((v0.c0)) BETWEEN ((((v0.c0)AND(v0.c0)))) AND ((((((v0.c0)OR(v0.c0)))OR(v0.c0))))) ASC  NULLS LAST;
SELECT * FROM v0, vt0, rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT * FROM v0, vt0, rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c2 COLLATE RTRIM) IS FALSE)) IS TRUE)  as count FROM v0, vt0, rt0, t1);
SELECT * FROM v0, vt0, rt0, t1 WHERE (((rt0.c2 COLLATE RTRIM) IS FALSE));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t1 WHERE (((((t1.c0)OR(v0.c0)))AND(t1.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY LOWER(t1.c0) COLLATE BINARY  NULLS FIRST, (((((((t1.c0)AND(t1.c0)))OR(t1.c0)), (~ (t1.c1)), rt0.c0))<(((~ (vt0.c0)), (NOT (rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)OR(v0.c0)))AND(t1.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY LOWER(t1.c0) COLLATE BINARY  NULLS FIRST, (((((((t1.c0)AND(t1.c0)))OR(t1.c0)), (~ (t1.c1)), rt0.c0))<(((~ (vt0.c0)), (NOT (rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t1 WHERE (((((t1.c0)OR(v0.c0)))AND(t1.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY LOWER(t1.c0) COLLATE BINARY  NULLS FIRST, (((((((t1.c0)AND(t1.c0)))OR(t1.c0)), (~ (t1.c1)), rt0.c0))<(((~ (vt0.c0)), (NOT (rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((t1.c0)OR(v0.c0)))AND(t1.c0)) COLLATE BINARY COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, rt0, t1 ORDER BY LOWER(t1.c0) COLLATE BINARY  NULLS FIRST, (((((((t1.c0)AND(t1.c0)))OR(t1.c0)), (~ (t1.c1)), rt0.c0))<(((~ (vt0.c0)), (NOT (rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0, rt0, t1 WHERE (((((t1.c0)OR(v0.c0)))AND(t1.c0)) COLLATE BINARY COLLATE BINARY) ORDER BY LOWER(t1.c0) COLLATE BINARY  NULLS FIRST, (((((((t1.c0)AND(t1.c0)))OR(t1.c0)), (~ (t1.c1)), rt0.c0))<(((~ (vt0.c0)), (NOT (rt0.c0)), ((((vt0.c0)OR(rt0.c2)))AND(rt0.c0)))));
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c2)))+(((t1.c0) BETWEEN (t1.c1) AND (t1.c2))))) ORDER BY (((((t1.c2, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((x'', t1.c0, t1.c1))))|((- (t1.c2)))) ASC  NULLS FIRST, ((((((((((t1.c1)&(t1.c1)))AND((t1.c1 IN (x'')))))OR(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0)))))AND((- (t1.c0)))), ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2) IS FALSE)) AND (((t1.c1)OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t1.c2)))+(((t1.c0) BETWEEN (t1.c1) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((x'', t1.c0, t1.c1))))|((- (t1.c2)))) ASC  NULLS FIRST, ((((((((((t1.c1)&(t1.c1)))AND((t1.c1 IN (x'')))))OR(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0)))))AND((- (t1.c0)))), ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2) IS FALSE)) AND (((t1.c1)OR(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c2)))+(((t1.c0) BETWEEN (t1.c1) AND (t1.c2))))) ORDER BY (((((t1.c2, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((x'', t1.c0, t1.c1))))|((- (t1.c2)))) ASC  NULLS FIRST, ((((((((((t1.c1)&(t1.c1)))AND((t1.c1 IN (x'')))))OR(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0)))))AND((- (t1.c0)))), ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2) IS FALSE)) AND (((t1.c1)OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT (((((~ (t1.c2)))+(((t1.c0) BETWEEN (t1.c1) AND (t1.c2))))) IS TRUE)  as count FROM t1 ORDER BY (((((t1.c2, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((x'', t1.c0, t1.c1))))|((- (t1.c2)))) ASC  NULLS FIRST, ((((((((((t1.c1)&(t1.c1)))AND((t1.c1 IN (x'')))))OR(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0)))))AND((- (t1.c0)))), ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2) IS FALSE)) AND (((t1.c1)OR(t1.c0)))) ASC);
SELECT ALL COUNT(*) FROM t1 WHERE ((((~ (t1.c2)))+(((t1.c0) BETWEEN (t1.c1) AND (t1.c2))))) ORDER BY (((((t1.c2, t1.c1, t1.c1)) NOT BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((x'', t1.c0, t1.c1))))|((- (t1.c2)))) ASC  NULLS FIRST, ((((((((((t1.c1)&(t1.c1)))AND((t1.c1 IN (x'')))))OR(CAST(t1.c1 AS BLOB))))AND((~ (t1.c0)))))AND((- (t1.c0)))), ((t1.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c2) IS FALSE)) AND (((t1.c1)OR(t1.c0)))) ASC;
SELECT * FROM v0, vt0, rt0 WHERE (CAST((NULL IN ()) AS INTEGER)) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS REAL) END, (rt0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS REAL) END, (rt0.c1 IN ())  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE (CAST((NULL IN ()) AS INTEGER)) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS REAL) END, (rt0.c1 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST((NULL IN ()) AS INTEGER)) IS TRUE)  as count FROM v0, vt0, rt0 ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS REAL) END, (rt0.c1 IN ())  NULLS FIRST);
SELECT * FROM v0, vt0, rt0 WHERE (CAST((NULL IN ()) AS INTEGER)) ORDER BY CASE WHEN rt0.c3 COLLATE BINARY THEN CAST(rt0.c3 AS REAL) END, (rt0.c1 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CAST(t1.c0 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CAST(t1.c0 AS REAL) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(t1.c0 AS REAL) AS BLOB)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (CAST(CAST(t1.c0 AS REAL) AS BLOB));
SELECT ALL COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0)AND(t1.c1)))OR(v0.c0)))AND(rt0.c1)))AND(vt0.c0))))<((v0.c0 COLLATE RTRIM))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (((0.19931971028587359) BETWEEN (t1.c0) AND (vt0.c0))) AND (((rt0.c1) IS TRUE))) WHERE (((((t1.c0)OR(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (+ (CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)OR(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0)AND(t1.c1)))OR(v0.c0)))AND(rt0.c1)))AND(vt0.c0))))<((v0.c0 COLLATE RTRIM))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (((0.19931971028587359) BETWEEN (t1.c0) AND (vt0.c0))) AND (((rt0.c1) IS TRUE))) ORDER BY (+ (CAST(rt0.c3 AS NUMERIC))) DESC);
SELECT ALL COUNT(*) FROM t1, vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0)AND(t1.c1)))OR(v0.c0)))AND(rt0.c1)))AND(vt0.c0))))<((v0.c0 COLLATE RTRIM))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (((0.19931971028587359) BETWEEN (t1.c0) AND (vt0.c0))) AND (((rt0.c1) IS TRUE))) WHERE (((((t1.c0)OR(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM) ORDER BY (+ (CAST(rt0.c3 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((t1.c0)OR(rt0.c2)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM t1, vt0 RIGHT OUTER JOIN v0 ON (((((((((((v0.c0)AND(t1.c1)))OR(v0.c0)))AND(rt0.c1)))AND(vt0.c0))))<((v0.c0 COLLATE RTRIM))) CROSS JOIN rt0 ON ((vt0.c0) BETWEEN (((0.19931971028587359) BETWEEN (t1.c0) AND (vt0.c0))) AND (((rt0.c1) IS TRUE))) ORDER BY (+ (CAST(rt0.c3 AS NUMERIC))) DESC);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(0.0));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(0.0)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(0.0));
SELECT SUM(count) FROM (SELECT ALL ((LOWER(0.0)) IS TRUE)  as count FROM rt0);
SELECT COUNT(*) FROM rt0 WHERE (LOWER(0.0));
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c0)AND((NOT (rt0.c1)))))OR(LOWER('Nu-2Y0ae'))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND((NOT (rt0.c1)))))OR(LOWER('Nu-2Y0ae')))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c0)AND((NOT (rt0.c1)))))OR(LOWER('Nu-2Y0ae'))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c0)AND((NOT (rt0.c1)))))OR(LOWER('Nu-2Y0ae')))) IS TRUE)  as count FROM v0, vt0, rt0);
SELECT ALL * FROM v0, vt0, rt0 WHERE (((((rt0.c0)AND((NOT (rt0.c1)))))OR(LOWER('Nu-2Y0ae'))));
SELECT COUNT(*) FROM t1 WHERE (CAST(((((t1.c2)AND(t1.c2)))AND(t1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c2)AND(t1.c2)))AND(t1.c2)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((t1.c2)AND(t1.c2)))AND(t1.c2)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((t1.c2)AND(t1.c2)))AND(t1.c2)) AS REAL)) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE (CAST(((((t1.c2)AND(t1.c2)))AND(t1.c2)) AS REAL));
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c2);
SELECT SUM(count) FROM (SELECT ((t1.c2) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT COUNT(*) FROM rt0, t1, vt0 WHERE (t1.c2);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (+ (CAST(t1.c2 AS REAL))) LEFT OUTER JOIN t1 ON rt0.c3 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c1)IS(vt0.c0)))) AND ((((((t1.c2)OR(t1.c1)))OR(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((((t1.c1)IS(vt0.c0)))) AND ((((((t1.c2)OR(t1.c1)))OR(t1.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ (CAST(t1.c2 AS REAL))) LEFT OUTER JOIN t1 ON rt0.c3);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt0 ON (+ (CAST(t1.c2 AS REAL))) LEFT OUTER JOIN t1 ON rt0.c3 WHERE ((((t1.c0)) NOT BETWEEN ((((t1.c1)IS(vt0.c0)))) AND ((((((t1.c2)OR(t1.c1)))OR(t1.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0)) NOT BETWEEN ((((t1.c1)IS(vt0.c0)))) AND ((((((t1.c2)OR(t1.c1)))OR(t1.c0)))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt0 ON (+ (CAST(t1.c2 AS REAL))) LEFT OUTER JOIN t1 ON rt0.c3);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS FIRST, vt0.c0 ASC, (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS FIRST, vt0.c0 ASC, (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS FIRST, vt0.c0 ASC, (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN (+ (vt0.c0)) THEN vt0.c0 COLLATE RTRIM END ASC  NULLS FIRST, vt0.c0 ASC, (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND((vt0.c0 IN ()))))AND(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, vt0, v0 WHERE (CAST(CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END AS BLOB)) IS TRUE)  as count FROM rt0, t1, vt0, v0);
SELECT ALL * FROM rt0, t1, vt0, v0 WHERE (CAST(CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END AS BLOB)) IS TRUE)  as count FROM rt0, t1, vt0, v0);
SELECT ALL * FROM rt0, t1, vt0, v0 WHERE (CAST(CASE WHEN t1.c0 THEN vt0.c0 ELSE x'' END AS BLOB));
SELECT * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))-(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))-(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))-(((vt0.c0)||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))-(((vt0.c0)||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((vt0.c0))<=((vt0.c0))))-(((vt0.c0)||(vt0.c0)))));
SELECT COUNT(*) FROM v0, t1, vt0 INNER JOIN rt0 ON CASE WHEN '3/' THEN ABS(DISTINCT NULL) ELSE ((rt0.c2)>=(rt0.c2)) END WHERE ((NOT (x'e387' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'e387' COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1, vt0 INNER JOIN rt0 ON CASE WHEN '3/' THEN ABS(DISTINCT NULL) ELSE ((rt0.c2)>=(rt0.c2)) END);
SELECT COUNT(*) FROM v0, t1, vt0 INNER JOIN rt0 ON CASE WHEN '3/' THEN ABS(DISTINCT NULL) ELSE ((rt0.c2)>=(rt0.c2)) END WHERE ((NOT (x'e387' COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x'e387' COLLATE RTRIM))) IS TRUE)  as count FROM v0, t1, vt0 INNER JOIN rt0 ON CASE WHEN '3/' THEN ABS(DISTINCT NULL) ELSE ((rt0.c2)>=(rt0.c2)) END);
SELECT COUNT(*) FROM v0, t1, vt0 INNER JOIN rt0 ON CASE WHEN '3/' THEN ABS(DISTINCT NULL) ELSE ((rt0.c2)>=(rt0.c2)) END WHERE ((NOT (x'e387' COLLATE RTRIM)));
SELECT * FROM t1 WHERE (((NULLIF(DISTINCT t1.c2, t1.c1))<(((0.9637106374081907) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t1.c2, t1.c1))<(((0.9637106374081907) BETWEEN (t1.c2) AND (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((NULLIF(DISTINCT t1.c2, t1.c1))<(((0.9637106374081907) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT SUM(count) FROM (SELECT ((((NULLIF(DISTINCT t1.c2, t1.c1))<(((0.9637106374081907) BETWEEN (t1.c2) AND (t1.c1))))) IS TRUE)  as count FROM t1);
SELECT * FROM t1 WHERE (((NULLIF(DISTINCT t1.c2, t1.c1))<(((0.9637106374081907) BETWEEN (t1.c2) AND (t1.c1)))));
SELECT COUNT(*) FROM vt0, t1, v0, rt0 WHERE (((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, v0, rt0 WHERE (((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, t1, v0, rt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1, v0, rt0 WHERE (((t1.c0) BETWEEN (vt0.c0) AND (t1.c1)) COLLATE NOCASE) ORDER BY vt0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (t1.c2 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) ORDER BY (((rt0.c2 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c2 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (t1.c2 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) ORDER BY (((rt0.c2 IN ())) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((t1.c2 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) IS TRUE)  as count FROM rt0, t1 ORDER BY (((rt0.c2 IN ())) IS FALSE));
SELECT ALL COUNT(*) FROM rt0, t1 WHERE (t1.c2 COLLATE NOCASE COLLATE RTRIM COLLATE NOCASE) ORDER BY (((rt0.c2 IN ())) IS FALSE);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0) IS TRUE));
SELECT * FROM rt0 WHERE ((((CAST(rt0.c3 AS NUMERIC)))<>((((rt0.c2)<>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c3 AS NUMERIC)))<>((((rt0.c2)!=(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c3 AS NUMERIC)))<>((((rt0.c2)<>(rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((CAST(rt0.c3 AS NUMERIC)))<>((((rt0.c2)!=(rt0.c3)))))) IS TRUE)  as count FROM rt0);
SELECT * FROM rt0 WHERE ((((CAST(rt0.c3 AS NUMERIC)))<>((((rt0.c2)<>(rt0.c3))))));
SELECT ALL COUNT(*) FROM v0, t1, rt0 WHERE (CASE WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM) ORDER BY LOWER(DISTINCT ((rt0.c3)IS NOT(rt0.c2))), ((((t1.c1) NOT NULL))>(((t1.c0)<=(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY LOWER(DISTINCT ((rt0.c3)IS NOT(rt0.c2))), ((((t1.c1) NOT NULL))>(((t1.c0)<=(t1.c2)))));
SELECT ALL COUNT(*) FROM v0, t1, rt0 WHERE (CASE WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM) ORDER BY LOWER(DISTINCT ((rt0.c3)IS NOT(rt0.c2))), ((((t1.c1) NOT NULL))>(((t1.c0)<=(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY LOWER(DISTINCT ((rt0.c3)IS NOT(rt0.c2))), ((((t1.c1) NOT NULL))>(((t1.c0)<=(t1.c2)))));
SELECT ALL COUNT(*) FROM v0, t1, rt0 WHERE (CASE WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM) ORDER BY LOWER(DISTINCT ((rt0.c3)IS NOT(rt0.c2))), ((((t1.c1) NOT NULL))>(((t1.c0)<=(t1.c2))));
SELECT * FROM v0, vt0 FULL OUTER JOIN t1 ON ((((t1.c2) BETWEEN (rt0.c2) AND (t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON (+ (((t1.c1)&(rt0.c3)))) WHERE ('#^3') ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 ELSE v0.c0 END IN (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('#^3') IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t1 ON ((((t1.c2) BETWEEN (rt0.c2) AND (t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON (+ (((t1.c1)&(rt0.c3)))) ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 ELSE v0.c0 END IN (((rt0.c3) NOT NULL)))  NULLS LAST);
SELECT * FROM v0, vt0 FULL OUTER JOIN t1 ON ((((t1.c2) BETWEEN (rt0.c2) AND (t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON (+ (((t1.c1)&(rt0.c3)))) WHERE ('#^3') ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 ELSE v0.c0 END IN (((rt0.c3) NOT NULL)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('#^3') IS TRUE)  as count FROM v0, vt0 FULL OUTER JOIN t1 ON ((((t1.c2) BETWEEN (rt0.c2) AND (t1.c0))) ISNULL) RIGHT OUTER JOIN rt0 ON (+ (((t1.c1)&(rt0.c3)))) ORDER BY (CASE WHEN v0.c0 THEN rt0.c1 WHEN t1.c2 THEN rt0.c1 WHEN t1.c2 THEN t1.c2 ELSE v0.c0 END IN (((rt0.c3) NOT NULL)))  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((t1.c0 IN ()))>>(v0.c0 COLLATE BINARY))) ORDER BY ((((((t1.c0)>(v0.c0)))AND(((((vt0.c0)OR(v0.c0)))AND(t1.c1)))))OR(((t1.c2)AND(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))>>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY ((((((t1.c0)>(v0.c0)))AND(((((vt0.c0)OR(v0.c0)))AND(t1.c1)))))OR(((t1.c2)AND(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((t1.c0 IN ()))>>(v0.c0 COLLATE BINARY))) ORDER BY ((((((t1.c0)>(v0.c0)))AND(((((vt0.c0)OR(v0.c0)))AND(t1.c1)))))OR(((t1.c2)AND(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c0 IN ()))>>(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY ((((((t1.c0)>(v0.c0)))AND(((((vt0.c0)OR(v0.c0)))AND(t1.c1)))))OR(((t1.c2)AND(v0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE ((((t1.c0 IN ()))>>(v0.c0 COLLATE BINARY))) ORDER BY ((((((t1.c0)>(v0.c0)))AND(((((vt0.c0)OR(v0.c0)))AND(t1.c1)))))OR(((t1.c2)AND(v0.c0)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ('') ORDER BY CASE (NOT (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('Mn1g')) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('Mn1g')) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC);
SELECT ALL * FROM vt0 WHERE ('') ORDER BY CASE (NOT (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('Mn1g')) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0 ORDER BY CASE (NOT (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('Mn1g')) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC);
SELECT ALL * FROM vt0 WHERE ('') ORDER BY CASE (NOT (vt0.c0))  WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 WHEN vt0.c0 COLLATE NOCASE THEN ((vt0.c0)AND('Mn1g')) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) THEN ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)) END DESC;
SELECT * FROM v0, rt0, vt0, t1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED, t1);
SELECT * FROM v0, rt0, vt0, t1 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, rt0, vt0 NOT INDEXED, t1);
SELECT * FROM v0, rt0, vt0, t1 WHERE (v0.c0);
SELECT ALL * FROM vt0, t1 RIGHT OUTER JOIN v0 ON '**' WHERE (IFNULL((((t1.c0))<((t1.c2))), ((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL((((t1.c0))<((t1.c2))), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN v0 ON '**');
SELECT ALL * FROM vt0, t1 RIGHT OUTER JOIN v0 ON '**' WHERE (IFNULL((((t1.c0))<((t1.c2))), ((vt0.c0) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((IFNULL((((t1.c0))<((t1.c2))), ((vt0.c0) NOTNULL))) IS TRUE)  as count FROM vt0, t1 RIGHT OUTER JOIN v0 ON '**');
SELECT ALL * FROM vt0, t1 RIGHT OUTER JOIN v0 ON '**' WHERE (IFNULL((((t1.c0))<((t1.c2))), ((vt0.c0) NOTNULL)));
SELECT * FROM vt0, t1, rt0, v0 WHERE (CAST((rt0.c1 IN (t1.c2, v0.c0)) AS BLOB)) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c2)))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (t1.c2, v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1, rt0, v0 ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c2)))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c2) NOTNULL))));
SELECT * FROM vt0, t1, rt0, v0 WHERE (CAST((rt0.c1 IN (t1.c2, v0.c0)) AS BLOB)) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c2)))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c2) NOTNULL)));
SELECT SUM(count) FROM (SELECT ALL ((CAST((rt0.c1 IN (t1.c2, v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt0, t1, rt0, v0 ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c2)))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c2) NOTNULL))));
SELECT * FROM vt0, t1, rt0, v0 WHERE (CAST((rt0.c1 IN (t1.c2, v0.c0)) AS BLOB)) ORDER BY ((((((((t1.c0)AND(t1.c0)))OR(t1.c2)))AND(CASE WHEN vt0.c0 THEN rt0.c1 WHEN vt0.c0 THEN t1.c2 WHEN t1.c0 THEN t1.c1 WHEN vt0.c0 THEN t1.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)))OR(((rt0.c2) NOTNULL)));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt0 ON json_array_length(NULL, ((rt0.c2) NOT BETWEEN ('6C/O') AND (vt0.c0))) FULL OUTER JOIN t1 ON ((x'1665372f') IS TRUE) WHERE ('-134033783');
SELECT SUM(count) FROM (SELECT ALL (('-134033783') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt0 ON json_array_length(NULL, ((rt0.c2) NOT BETWEEN ('6C/O') AND (vt0.c0))) FULL OUTER JOIN t1 ON ((x'1665372f') IS TRUE));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt0 ON json_array_length(NULL, ((rt0.c2) NOT BETWEEN ('6C/O') AND (vt0.c0))) FULL OUTER JOIN t1 ON ((x'1665372f') IS TRUE) WHERE ('-134033783');
SELECT SUM(count) FROM (SELECT ALL (('-134033783') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt0 ON json_array_length(NULL, ((rt0.c2) NOT BETWEEN ('6C/O') AND (vt0.c0))) FULL OUTER JOIN t1 ON ((x'1665372f') IS TRUE));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON (rt0.c1 IN ()) COLLATE BINARY RIGHT OUTER JOIN rt0 ON json_array_length(NULL, ((rt0.c2) NOT BETWEEN ('6C/O') AND (vt0.c0))) FULL OUTER JOIN t1 ON ((x'1665372f') IS TRUE) WHERE ('-134033783');
SELECT * FROM vt0 CROSS JOIN t1 ON LTRIM(((vt0.c0)IS NOT(t1.c1)), SQLITE_COMPILEOPTION_USED(0.9848319548688607)) WHERE (((~ (t1.c2)) IN (CAST(t1.c1 AS NUMERIC)))) ORDER BY INSTR(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c0)), ((vt0.c0)|(t1.c1))), ((LIKELY(vt0.c0)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((~ (t1.c2)) IN (CAST(t1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON LTRIM(((vt0.c0)IS NOT(t1.c1)), SQLITE_COMPILEOPTION_USED(0.9848319548688607)) ORDER BY INSTR(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c0)), ((vt0.c0)|(t1.c1))), ((LIKELY(vt0.c0)) IS FALSE) ASC);
SELECT * FROM vt0 CROSS JOIN t1 ON LTRIM(((vt0.c0)IS NOT(t1.c1)), SQLITE_COMPILEOPTION_USED(0.9848319548688607)) WHERE (((~ (t1.c2)) IN (CAST(t1.c1 AS NUMERIC)))) ORDER BY INSTR(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c0)), ((vt0.c0)|(t1.c1))), ((LIKELY(vt0.c0)) IS FALSE) ASC;
SELECT SUM(count) FROM (SELECT ((((~ (t1.c2)) IN (CAST(t1.c1 AS NUMERIC)))) IS TRUE)  as count FROM vt0 CROSS JOIN t1 ON LTRIM(((vt0.c0)IS NOT(t1.c1)), SQLITE_COMPILEOPTION_USED(0.9848319548688607)) ORDER BY INSTR(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c0)), ((vt0.c0)|(t1.c1))), ((LIKELY(vt0.c0)) IS FALSE) ASC);
SELECT * FROM vt0 CROSS JOIN t1 ON LTRIM(((vt0.c0)IS NOT(t1.c1)), SQLITE_COMPILEOPTION_USED(0.9848319548688607)) WHERE (((~ (t1.c2)) IN (CAST(t1.c1 AS NUMERIC)))) ORDER BY INSTR(((t1.c2) NOT BETWEEN (t1.c1) AND (vt0.c0)), ((vt0.c0)|(t1.c1))), ((LIKELY(vt0.c0)) IS FALSE) ASC;
SELECT * FROM rt0, v0, t1, vt0 WHERE ((+ (MIN(rt0.c3, t1.c2)))) ORDER BY (('*|') NOT BETWEEN (((t1.c0)OR(rt0.c0))) AND (TYPEOF(DISTINCT t1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (MIN(rt0.c3, t1.c2)))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY (('*|') NOT BETWEEN (((t1.c0)OR(rt0.c0))) AND (TYPEOF(DISTINCT t1.c2)))  NULLS LAST);
SELECT * FROM rt0, v0, t1, vt0 WHERE ((+ (MIN(rt0.c3, t1.c2)))) ORDER BY (('*|') NOT BETWEEN (((t1.c0)OR(rt0.c0))) AND (TYPEOF(DISTINCT t1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((+ (MIN(rt0.c3, t1.c2)))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY (('*|') NOT BETWEEN (((t1.c0)OR(rt0.c0))) AND (TYPEOF(DISTINCT t1.c2)))  NULLS LAST);
SELECT * FROM rt0, v0, t1, vt0 WHERE ((+ (MIN(rt0.c3, t1.c2)))) ORDER BY (('*|') NOT BETWEEN (((t1.c0)OR(rt0.c0))) AND (TYPEOF(DISTINCT t1.c2)))  NULLS LAST;
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END)) AND (((((t1.c1))<=((t1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END)) AND (((((t1.c1))<=((t1.c0))))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END)) AND (((((t1.c1))<=((t1.c0)))))));
SELECT SUM(count) FROM (SELECT (((((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END)) AND (((((t1.c1))<=((t1.c0))))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((t1.c1)) NOT BETWEEN ((CASE WHEN t1.c2 THEN t1.c0 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END)) AND (((((t1.c1))<=((t1.c0)))))));
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t1 WHERE ((((((0.03743428799923343))=((v0.c0)))) BETWEEN (((t1.c1) NOT NULL)) AND (((vt0.c0)>>(t1.c2))))) ORDER BY CASE t1.c1  WHEN t1.c0 THEN v0.c0 ELSE t1.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((0.03743428799923343))==((v0.c0)))) BETWEEN (((t1.c1) NOT NULL)) AND (((vt0.c0)>>(t1.c2))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t1 ORDER BY CASE t1.c1  WHEN t1.c0 THEN v0.c0 ELSE t1.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t1 WHERE ((((((0.03743428799923343))=((v0.c0)))) BETWEEN (((t1.c1) NOT NULL)) AND (((vt0.c0)>>(t1.c2))))) ORDER BY CASE t1.c1  WHEN t1.c0 THEN v0.c0 ELSE t1.c1 END COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((((0.03743428799923343))==((v0.c0)))) BETWEEN (((t1.c1) NOT NULL)) AND (((vt0.c0)>>(t1.c2))))) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN t1 ORDER BY CASE t1.c1  WHEN t1.c0 THEN v0.c0 ELSE t1.c1 END COLLATE NOCASE);
SELECT COUNT(*) FROM v0, vt0 NATURAL JOIN t1 WHERE ((((((0.03743428799923343))=((v0.c0)))) BETWEEN (((t1.c1) NOT NULL)) AND (((vt0.c0)>>(t1.c2))))) ORDER BY CASE t1.c1  WHEN t1.c0 THEN v0.c0 ELSE t1.c1 END COLLATE NOCASE;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST((- ('q')) AS REAL) INNER JOIN t1 ON (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(t1.c1 AS INTEGER))))AND(('y*q>' IN (NULL)))) WHERE ((((t1.c2 IN (t1.c0)))>=(x''))) ORDER BY CASE ((t1.c1)/(t1.c1))  WHEN ((v0.c0)*(t1.c1)) THEN ((v0.c0)>=(t1.c2)) ELSE CAST(v0.c0 AS NUMERIC) END, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c0)))>=(x''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((- ('q')) AS REAL) INNER JOIN t1 ON (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(t1.c1 AS INTEGER))))AND(('y*q>' IN (NULL)))) ORDER BY CASE ((t1.c1)/(t1.c1))  WHEN ((v0.c0)*(t1.c1)) THEN ((v0.c0)>=(t1.c2)) ELSE CAST(v0.c0 AS NUMERIC) END, v0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST((- ('q')) AS REAL) INNER JOIN t1 ON (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(t1.c1 AS INTEGER))))AND(('y*q>' IN (NULL)))) WHERE ((((t1.c2 IN (t1.c0)))>=(x''))) ORDER BY CASE ((t1.c1)/(t1.c1))  WHEN ((v0.c0)*(t1.c1)) THEN ((v0.c0)>=(t1.c2)) ELSE CAST(v0.c0 AS NUMERIC) END, v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2 IN (t1.c0)))>=(x''))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((- ('q')) AS REAL) INNER JOIN t1 ON (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(t1.c1 AS INTEGER))))AND(('y*q>' IN (NULL)))) ORDER BY CASE ((t1.c1)/(t1.c1))  WHEN ((v0.c0)*(t1.c1)) THEN ((v0.c0)>=(t1.c2)) ELSE CAST(v0.c0 AS NUMERIC) END, v0.c0  NULLS FIRST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON CAST((- ('q')) AS REAL) INNER JOIN t1 ON (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c0))))OR(CAST(t1.c1 AS INTEGER))))AND(('y*q>' IN (NULL)))) WHERE ((((t1.c2 IN (t1.c0)))>=(x''))) ORDER BY CASE ((t1.c1)/(t1.c1))  WHEN ((v0.c0)*(t1.c1)) THEN ((v0.c0)>=(t1.c2)) ELSE CAST(v0.c0 AS NUMERIC) END, v0.c0  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE)) ORDER BY (+ (((rt0.c1)OR('Ac/')))) ASC, '-2113525530';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c0 ORDER BY (+ (((rt0.c1)OR('Ac/')))) ASC, '-2113525530');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE)) ORDER BY (+ (((rt0.c1)OR('Ac/')))) ASC, '-2113525530';
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS INTEGER)) IS FALSE)) IS TRUE)  as count FROM vt0 INNER JOIN rt0 ON rt0.c0 ORDER BY (+ (((rt0.c1)OR('Ac/')))) ASC, '-2113525530');
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt0 ON rt0.c0 WHERE (((CAST(vt0.c0 AS INTEGER)) IS FALSE)) ORDER BY (+ (((rt0.c1)OR('Ac/')))) ASC, '-2113525530';
SELECT COUNT(*) FROM vt0, v0 WHERE (396877550) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((((v0.c0)) BETWEEN ((123696121)) AND ((vt0.c0)))) NOT BETWEEN (((NULL)>(NULL))) AND (vt0.c0 COLLATE BINARY)) ASC, ((((vt0.c0) IS TRUE))>(((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((396877550) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((((v0.c0)) BETWEEN ((123696121)) AND ((vt0.c0)))) NOT BETWEEN (((NULL)>(NULL))) AND (vt0.c0 COLLATE BINARY)) ASC, ((((vt0.c0) IS TRUE))>(((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (396877550) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((((v0.c0)) BETWEEN ((123696121)) AND ((vt0.c0)))) NOT BETWEEN (((NULL)>(NULL))) AND (vt0.c0 COLLATE BINARY)) ASC, ((((vt0.c0) IS TRUE))>(((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((396877550) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((((v0.c0)) BETWEEN ((123696121)) AND ((vt0.c0)))) NOT BETWEEN (((NULL)>(NULL))) AND (vt0.c0 COLLATE BINARY)) ASC, ((((vt0.c0) IS TRUE))>(((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (396877550) ORDER BY NULL COLLATE RTRIM  NULLS LAST, (((((v0.c0)) BETWEEN ((123696121)) AND ((vt0.c0)))) NOT BETWEEN (((NULL)>(NULL))) AND (vt0.c0 COLLATE BINARY)) ASC, ((((vt0.c0) IS TRUE))>(((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))) ASC;
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((0.8232554977087647))))<<(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((0.8232554977087647))))<<(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((0.8232554977087647))))<<(((rt0.c3) ISNULL))));
SELECT SUM(count) FROM (SELECT (((((((rt0.c1))>=((0.8232554977087647))))<<(((rt0.c3) ISNULL)))) IS TRUE)  as count FROM rt0);
SELECT ALL * FROM rt0 WHERE ((((((rt0.c1))>=((0.8232554977087647))))<<(((rt0.c3) ISNULL))));
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c1))>((t1.c2))))=(((t1.c2)%(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1))>((t1.c2))))==(((t1.c2)%(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c1))>((t1.c2))))=(((t1.c2)%(t1.c1)))));
SELECT SUM(count) FROM (SELECT (((((((t1.c1))>((t1.c2))))==(((t1.c2)%(t1.c1))))) IS TRUE)  as count FROM t1);
SELECT COUNT(*) FROM t1 WHERE ((((((t1.c1))>((t1.c2))))=(((t1.c2)%(t1.c1)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME((('1003542214') ISNULL), ((0X58569d93)>(vt0.c0)), NULL)) ORDER BY (((vt0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((TIME((('1003542214') ISNULL), ((0X58569d93)>(vt0.c0)), NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME((('1003542214') ISNULL), ((0X58569d93)>(vt0.c0)), NULL)) ORDER BY (((vt0.c0) NOTNULL) IN ());
SELECT SUM(count) FROM (SELECT ((TIME((('1003542214') ISNULL), ((0X58569d93)>(vt0.c0)), NULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0) NOTNULL) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (TIME((('1003542214') ISNULL), ((0X58569d93)>(vt0.c0)), NULL)) ORDER BY (((vt0.c0) NOTNULL) IN ());
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (-1887847518 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((-1887847518 COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (-1887847518 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((-1887847518 COLLATE RTRIM) IS TRUE)  as count FROM t1 NOT INDEXED, rt0, vt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0, vt0, v0 WHERE (-1887847518 COLLATE RTRIM);
SELECT ALL * FROM t1 INDEXED BY i4, vt0 NATURAL JOIN rt0 WHERE (rt0.c3) ORDER BY (~ (((rt0.c3)&(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t1 INDEXED BY i4, vt0 NATURAL JOIN rt0 ORDER BY (~ (((rt0.c3)&(t1.c2)))));
SELECT ALL * FROM t1 INDEXED BY i4, vt0 NATURAL JOIN rt0 WHERE (rt0.c3) ORDER BY (~ (((rt0.c3)&(t1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((rt0.c3) IS TRUE)  as count FROM t1 INDEXED BY i4, vt0 NATURAL JOIN rt0 ORDER BY (~ (((rt0.c3)&(t1.c2)))));
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (LIKELY(CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (LIKELY(CAST(rt0.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ((LIKELY(CAST(rt0.c0 AS BLOB))) IS TRUE)  as count FROM vt0, rt0, t1);
SELECT COUNT(*) FROM vt0, rt0, t1 WHERE (LIKELY(CAST(rt0.c0 AS BLOB)));
SELECT * FROM t1, v0, vt0, rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c3)AND(rt0.c3))) AND ((vt0.c0 IN (rt0.c0))))) ORDER BY ((CAST(t1.c2 AS REAL)) BETWEEN (CASE WHEN t1.c0 THEN 0.8188802563221574 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN vt0.c0 THEN '822383266' WHEN rt0.c0 THEN rt0.c1 END) AND (CASE WHEN rt0.c0 THEN 0.5976757025783652 END)), ((t1.c0) IS FALSE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT BETWEEN (((rt0.c3)AND(rt0.c3))) AND ((vt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY ((CAST(t1.c2 AS REAL)) BETWEEN (CASE WHEN t1.c0 THEN 0.8188802563221574 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN vt0.c0 THEN '822383266' WHEN rt0.c0 THEN rt0.c1 END) AND (CASE WHEN rt0.c0 THEN 0.5976757025783652 END)), ((t1.c0) IS FALSE) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1, v0, vt0, rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c3)AND(rt0.c3))) AND ((vt0.c0 IN (rt0.c0))))) ORDER BY ((CAST(t1.c2 AS REAL)) BETWEEN (CASE WHEN t1.c0 THEN 0.8188802563221574 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN vt0.c0 THEN '822383266' WHEN rt0.c0 THEN rt0.c1 END) AND (CASE WHEN rt0.c0 THEN 0.5976757025783652 END)), ((t1.c0) IS FALSE) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt0.c2))) NOT BETWEEN (((rt0.c3)AND(rt0.c3))) AND ((vt0.c0 IN (rt0.c0))))) IS TRUE)  as count FROM t1, v0, vt0, rt0 ORDER BY ((CAST(t1.c2 AS REAL)) BETWEEN (CASE WHEN t1.c0 THEN 0.8188802563221574 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN vt0.c0 THEN '822383266' WHEN rt0.c0 THEN rt0.c1 END) AND (CASE WHEN rt0.c0 THEN 0.5976757025783652 END)), ((t1.c0) IS FALSE) COLLATE RTRIM  NULLS LAST);
SELECT * FROM t1, v0, vt0, rt0 WHERE ((((~ (rt0.c2))) NOT BETWEEN (((rt0.c3)AND(rt0.c3))) AND ((vt0.c0 IN (rt0.c0))))) ORDER BY ((CAST(t1.c2 AS REAL)) BETWEEN (CASE WHEN t1.c0 THEN 0.8188802563221574 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN t1.c1 WHEN vt0.c0 THEN '822383266' WHEN rt0.c0 THEN rt0.c1 END) AND (CASE WHEN rt0.c0 THEN 0.5976757025783652 END)), ((t1.c0) IS FALSE) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((((((0.5889905590383847) IS FALSE), t1.c2 COLLATE NOCASE, (((('-悸')OR(rt0.c1)))AND(vt0.c0))))>((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, t1.c2 COLLATE NOCASE, ((rt0.c0)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.5889905590383847) IS FALSE), t1.c2 COLLATE NOCASE, (((('-悸')OR(rt0.c1)))AND(vt0.c0))))>((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, t1.c2 COLLATE NOCASE, ((rt0.c0)*(rt0.c1)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((((((0.5889905590383847) IS FALSE), t1.c2 COLLATE NOCASE, (((('-悸')OR(rt0.c1)))AND(vt0.c0))))>((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, t1.c2 COLLATE NOCASE, ((rt0.c0)*(rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((((0.5889905590383847) IS FALSE), t1.c2 COLLATE NOCASE, (((('-悸')OR(rt0.c1)))AND(vt0.c0))))>((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, t1.c2 COLLATE NOCASE, ((rt0.c0)*(rt0.c1)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((((((0.5889905590383847) IS FALSE), t1.c2 COLLATE NOCASE, (((('-悸')OR(rt0.c1)))AND(vt0.c0))))>((CASE WHEN vt0.c0 THEN rt0.c1 ELSE rt0.c0 END, t1.c2 COLLATE NOCASE, ((rt0.c0)*(rt0.c1))))));
SELECT ALL COUNT(*) FROM v0, t1, rt0 WHERE (((((((x'')AND(rt0.c3)))AND(rt0.c3)))*(''))) ORDER BY CAST((((rt0.c3, t1.c0, rt0.c3))!=((rt0.c2, NULL, rt0.c2))) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(rt0.c3)))AND(rt0.c3)))*(''))) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY CAST((((rt0.c3, t1.c0, rt0.c3))!=((rt0.c2, NULL, rt0.c2))) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM v0, t1, rt0 WHERE (((((((x'')AND(rt0.c3)))AND(rt0.c3)))*(''))) ORDER BY CAST((((rt0.c3, t1.c0, rt0.c3))!=((rt0.c2, NULL, rt0.c2))) AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((((x'')AND(rt0.c3)))AND(rt0.c3)))*(''))) IS TRUE)  as count FROM v0, t1, rt0 ORDER BY CAST((((rt0.c3, t1.c0, rt0.c3))!=((rt0.c2, NULL, rt0.c2))) AS TEXT) ASC);
SELECT ALL COUNT(*) FROM v0, t1, rt0 WHERE (((((((x'')AND(rt0.c3)))AND(rt0.c3)))*(''))) ORDER BY CAST((((rt0.c3, t1.c0, rt0.c3))!=((rt0.c2, NULL, rt0.c2))) AS TEXT) ASC;
SELECT * FROM rt0, vt0, t1, v0 WHERE (((((((((((((((t1.c1)>(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(CAST('-560364970' AS INTEGER))))OR((+ (t1.c1)))))OR(((t1.c0)OR(x'')))))OR(MIN(t1.c2, t1.c1))))AND(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c1)>(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(CAST('-560364970' AS INTEGER))))OR((+ (t1.c1)))))OR(((t1.c0)OR(x'')))))OR(MIN(t1.c2, t1.c1))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE (((((((((((((((t1.c1)>(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(CAST('-560364970' AS INTEGER))))OR((+ (t1.c1)))))OR(((t1.c0)OR(x'')))))OR(MIN(t1.c2, t1.c1))))AND(((rt0.c2) IS TRUE))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((t1.c1)>(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(CAST('-560364970' AS INTEGER))))OR((+ (t1.c1)))))OR(((t1.c0)OR(x'')))))OR(MIN(t1.c2, t1.c1))))AND(((rt0.c2) IS TRUE)))) IS TRUE)  as count FROM rt0, vt0, t1, v0);
SELECT * FROM rt0, vt0, t1, v0 WHERE (((((((((((((((t1.c1)>(rt0.c3)))OR(CAST(rt0.c0 AS REAL))))AND(CAST('-560364970' AS INTEGER))))OR((+ (t1.c1)))))OR(((t1.c0)OR(x'')))))OR(MIN(t1.c2, t1.c1))))AND(((rt0.c2) IS TRUE))));
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL), ((LIKELY(rt0.c0)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL), ((LIKELY(rt0.c0)) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL), ((LIKELY(rt0.c0)) IS TRUE) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)) IN ())) IS TRUE)  as count FROM rt0 ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL), ((LIKELY(rt0.c0)) IS TRUE) ASC);
SELECT COUNT(*) FROM rt0 WHERE ((((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c3)))AND(rt0.c2)) IN ())) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END) NOTNULL), ((LIKELY(rt0.c0)) IS TRUE) ASC;
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL))||(RTRIM(0.408107317505948)))) ORDER BY v0.c0  NULLS FIRST, ((((x'') IS TRUE)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))||(RTRIM(0.408107317505948)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, ((((x'') IS TRUE)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL))||(RTRIM(0.408107317505948)))) ORDER BY v0.c0  NULLS FIRST, ((((x'') IS TRUE)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) NOT NULL))||(RTRIM(0.408107317505948)))) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS FIRST, ((((x'') IS TRUE)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0) NOT NULL))||(RTRIM(0.408107317505948)))) ORDER BY v0.c0  NULLS FIRST, ((((x'') IS TRUE)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (v0.c0)) ASC  NULLS FIRST;
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON ((- (vt0.c0)) IN (((rt0.c1)!=(t1.c2)))) WHERE (((rt0.c3) BETWEEN (t1.c0) AND (rt0.c3)) COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM)<<(((rt0.c1)OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (t1.c0) AND (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON ((- (vt0.c0)) IN (((rt0.c1)!=(t1.c2)))) ORDER BY ((rt0.c3 COLLATE RTRIM)<<(((rt0.c1)OR(t1.c0)))) ASC);
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON ((- (vt0.c0)) IN (((rt0.c1)!=(t1.c2)))) WHERE (((rt0.c3) BETWEEN (t1.c0) AND (rt0.c3)) COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM)<<(((rt0.c1)OR(t1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((rt0.c3) BETWEEN (t1.c0) AND (rt0.c3)) COLLATE RTRIM) IS TRUE)  as count FROM t1, rt0 CROSS JOIN vt0 ON ((- (vt0.c0)) IN (((rt0.c1)!=(t1.c2)))) ORDER BY ((rt0.c3 COLLATE RTRIM)<<(((rt0.c1)OR(t1.c0)))) ASC);
SELECT COUNT(*) FROM t1, rt0 CROSS JOIN vt0 ON ((- (vt0.c0)) IN (((rt0.c1)!=(t1.c2)))) WHERE (((rt0.c3) BETWEEN (t1.c0) AND (rt0.c3)) COLLATE RTRIM) ORDER BY ((rt0.c3 COLLATE RTRIM)<<(((rt0.c1)OR(t1.c0)))) ASC;
SELECT * FROM vt0 WHERE ((('8jA7') NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('8jA7') NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('8jA7') NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((((vt0.c0))>((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((('8jA7') NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((((vt0.c0))>((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((('8jA7') NOT BETWEEN (UNLIKELY(DISTINCT vt0.c0)) AND ((((vt0.c0))>((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, t1, rt0, v0 WHERE ((('-1320758998')GLOB(t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('-1320758998')GLOB(t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, v0 WHERE ((('-1320758998')GLOB(t1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((('-1320758998')GLOB(t1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, t1, rt0, v0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0, v0 WHERE ((('-1320758998')GLOB(t1.c2)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT COUNT(*) FROM vt0, t1, rt0 WHERE (vt0.c0);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((rt0.c3 IN ()))<>(LTRIM(rt0.c2, t1.c2)))) ORDER BY ((((((t1.c2)!=(t1.c2)))AND(rt0.c2)))OR(((((t1.c0)AND(t1.c1)))AND(rt0.c0)))), (((t1.c2 IN ())) BETWEEN (vt0.c0) AND (((t1.c0)==(t1.c2)))) ASC, 0.2395877149115646 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))<>(LTRIM(rt0.c2, t1.c2)))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((((t1.c2)<>(t1.c2)))AND(rt0.c2)))OR(((((t1.c0)AND(t1.c1)))AND(rt0.c0)))), (((t1.c2 IN ())) BETWEEN (vt0.c0) AND (((t1.c0)=(t1.c2)))) ASC, 0.2395877149115646 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((rt0.c3 IN ()))<>(LTRIM(rt0.c2, t1.c2)))) ORDER BY ((((((t1.c2)!=(t1.c2)))AND(rt0.c2)))OR(((((t1.c0)AND(t1.c1)))AND(rt0.c0)))), (((t1.c2 IN ())) BETWEEN (vt0.c0) AND (((t1.c0)==(t1.c2)))) ASC, 0.2395877149115646 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt0.c3 IN ()))<>(LTRIM(rt0.c2, t1.c2)))) IS TRUE)  as count FROM rt0, t1, vt0 ORDER BY ((((((t1.c2)<>(t1.c2)))AND(rt0.c2)))OR(((((t1.c0)AND(t1.c1)))AND(rt0.c0)))), (((t1.c2 IN ())) BETWEEN (vt0.c0) AND (((t1.c0)=(t1.c2)))) ASC, 0.2395877149115646 DESC  NULLS FIRST);
SELECT ALL * FROM rt0, t1, vt0 WHERE ((((rt0.c3 IN ()))<>(LTRIM(rt0.c2, t1.c2)))) ORDER BY ((((((t1.c2)!=(t1.c2)))AND(rt0.c2)))OR(((((t1.c0)AND(t1.c1)))AND(rt0.c0)))), (((t1.c2 IN ())) BETWEEN (vt0.c0) AND (((t1.c0)==(t1.c2)))) ASC, 0.2395877149115646 DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS TEXT)  WHEN (('-1442134676') NOT NULL) THEN x'' COLLATE NOCASE END INNER JOIN v0 ON CASE WHEN ((((t1.c0)OR(t1.c0)))AND(rt0.c1)) THEN ((vt0.c0)LIKE(rt0.c3)) WHEN (+ (t1.c0)) THEN LIKE(v0.c0, t1.c2, 'S') WHEN ((t1.c1)<(t1.c2)) THEN ((rt0.c1) NOT NULL) END WHERE ((((t1.c2)GLOB(t1.c0)) IN ())) ORDER BY CASE WHEN x'' COLLATE BINARY THEN t1.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)GLOB(t1.c0)) IN ())) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS TEXT)  WHEN (('-1442134676') NOT NULL) THEN x'' COLLATE NOCASE END INNER JOIN v0 ON CASE WHEN ((((t1.c0)OR(t1.c0)))AND(rt0.c1)) THEN ((vt0.c0)LIKE(rt0.c3)) WHEN (+ (t1.c0)) THEN LIKE(v0.c0, t1.c2, 'S') WHEN ((t1.c1)<(t1.c2)) THEN ((rt0.c1) NOT NULL) END ORDER BY CASE WHEN x'' COLLATE BINARY THEN t1.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS TEXT)  WHEN (('-1442134676') NOT NULL) THEN x'' COLLATE NOCASE END INNER JOIN v0 ON CASE WHEN ((((t1.c0)OR(t1.c0)))AND(rt0.c1)) THEN ((vt0.c0)LIKE(rt0.c3)) WHEN (+ (t1.c0)) THEN LIKE(v0.c0, t1.c2, 'S') WHEN ((t1.c1)<(t1.c2)) THEN ((rt0.c1) NOT NULL) END WHERE ((((t1.c2)GLOB(t1.c0)) IN ())) ORDER BY CASE WHEN x'' COLLATE BINARY THEN t1.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((t1.c2)GLOB(t1.c0)) IN ())) IS TRUE)  as count FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS TEXT)  WHEN (('-1442134676') NOT NULL) THEN x'' COLLATE NOCASE END INNER JOIN v0 ON CASE WHEN ((((t1.c0)OR(t1.c0)))AND(rt0.c1)) THEN ((vt0.c0)LIKE(rt0.c3)) WHEN (+ (t1.c0)) THEN LIKE(v0.c0, t1.c2, 'S') WHEN ((t1.c1)<(t1.c2)) THEN ((rt0.c1) NOT NULL) END ORDER BY CASE WHEN x'' COLLATE BINARY THEN t1.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST);
SELECT COUNT(*) FROM vt0, t1 FULL OUTER JOIN rt0 ON CASE CAST(rt0.c2 AS TEXT)  WHEN (('-1442134676') NOT NULL) THEN x'' COLLATE NOCASE END INNER JOIN v0 ON CASE WHEN ((((t1.c0)OR(t1.c0)))AND(rt0.c1)) THEN ((vt0.c0)LIKE(rt0.c3)) WHEN (+ (t1.c0)) THEN LIKE(v0.c0, t1.c2, 'S') WHEN ((t1.c1)<(t1.c2)) THEN ((rt0.c1) NOT NULL) END WHERE ((((t1.c2)GLOB(t1.c0)) IN ())) ORDER BY CASE WHEN x'' COLLATE BINARY THEN t1.c1 COLLATE NOCASE ELSE rt0.c0 COLLATE RTRIM END  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c0 COLLATE NOCASE)) ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9869069788370116)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9869069788370116)))) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c0 COLLATE NOCASE)) ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9869069788370116)))) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9869069788370116)))) ISNULL) DESC);
SELECT ALL * FROM vt0 WHERE (UPPER(vt0.c0 COLLATE NOCASE)) ORDER BY ((CASE NULL  WHEN vt0.c0 THEN vt0.c0 END) IS TRUE), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((0.9869069788370116)))) ISNULL) DESC;
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((rt0.c2 COLLATE BINARY) NOTNULL)) IS TRUE)  as count FROM rt0);
SELECT ALL COUNT(*) FROM rt0 WHERE (((rt0.c2 COLLATE BINARY) NOTNULL));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND ('춖A0')) COLLATE RTRIM) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND ('춖A0')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND ('춖A0')) COLLATE RTRIM) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND ('춖A0')) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0) BETWEEN (vt0.c0) AND ('춖A0')) COLLATE RTRIM) ORDER BY (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM t1, v0 LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS INTEGER)) NOTNULL) WHERE ('-1328702885') ORDER BY TIME('-799474259', CASE WHEN '0.10135622093567065' THEN rt0.c3 ELSE 0xffffffffd25029e7 END, (NOT (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1328702885') IS TRUE)  as count FROM t1, v0 LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS INTEGER)) NOTNULL) ORDER BY TIME('-799474259', CASE WHEN '0.10135622093567065' THEN rt0.c3 ELSE 0Xffffffffd25029e7 END, (NOT (v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS INTEGER)) NOTNULL) WHERE ('-1328702885') ORDER BY TIME('-799474259', CASE WHEN '0.10135622093567065' THEN rt0.c3 ELSE 0xffffffffd25029e7 END, (NOT (v0.c0)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('-1328702885') IS TRUE)  as count FROM t1, v0 LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS INTEGER)) NOTNULL) ORDER BY TIME('-799474259', CASE WHEN '0.10135622093567065' THEN rt0.c3 ELSE 0Xffffffffd25029e7 END, (NOT (v0.c0)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0 LEFT OUTER JOIN rt0 ON ((CAST(t1.c1 AS INTEGER)) NOTNULL) WHERE ('-1328702885') ORDER BY TIME('-799474259', CASE WHEN '0.10135622093567065' THEN rt0.c3 ELSE 0xffffffffd25029e7 END, (NOT (v0.c0)))  NULLS FIRST;
SELECT * FROM t1, rt0, vt0, v0 WHERE (0x23501f8f) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X23501f8f) IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL)  NULLS LAST);
SELECT * FROM t1, rt0, vt0, v0 WHERE (0x23501f8f) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0X23501f8f) IS TRUE)  as count FROM t1, rt0, vt0, v0 ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL)  NULLS LAST);
SELECT * FROM t1, rt0, vt0, v0 WHERE (0x23501f8f) ORDER BY CAST(CAST(rt0.c0 AS BLOB) AS REAL)  NULLS LAST;
SELECT ALL * FROM t1, v0, rt0, vt0 WHERE (LIKELY(DISTINCT ((v0.c0)*(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0)*(v0.c0)))) IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT ALL * FROM t1, v0, rt0, vt0 WHERE (LIKELY(DISTINCT ((v0.c0)*(v0.c0))));
SELECT SUM(count) FROM (SELECT ((LIKELY(DISTINCT ((v0.c0)*(v0.c0)))) IS TRUE)  as count FROM t1, v0, rt0, vt0);
SELECT ALL * FROM t1, v0, rt0, vt0 WHERE (LIKELY(DISTINCT ((v0.c0)*(v0.c0))));
SELECT * FROM rt0, v0, t1, vt0 WHERE ((- (((((((((t1.c1)AND(t1.c1)))OR(-8.16844177E8)))OR(t1.c0)))OR(v0.c0))))) ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((((((t1.c1)AND(t1.c1)))OR(-8.16844177E8)))OR(t1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, v0, t1, vt0 WHERE ((- (((((((((t1.c1)AND(t1.c1)))OR(-8.16844177E8)))OR(t1.c0)))OR(v0.c0))))) ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (((((((((t1.c1)AND(t1.c1)))OR(-8.16844177E8)))OR(t1.c0)))OR(v0.c0))))) IS TRUE)  as count FROM rt0, v0, t1, vt0 ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST);
SELECT * FROM rt0, v0, t1, vt0 WHERE ((- (((((((((t1.c1)AND(t1.c1)))OR(-8.16844177E8)))OR(t1.c0)))OR(v0.c0))))) ORDER BY ((t1.c2 COLLATE NOCASE) ISNULL)  NULLS FIRST;
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND((+ (t1.c2)))))OR(CAST(t1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND((+ (t1.c2)))))OR(CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM t1, vt0, v0);
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND((+ (t1.c2)))))OR(CAST(t1.c1 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND((+ (t1.c2)))))OR(CAST(t1.c1 AS REAL)))) IS TRUE)  as count FROM t1, vt0, v0);
SELECT * FROM t1, vt0, v0 WHERE (((((((v0.c0) NOT BETWEEN (t1.c0) AND (t1.c0)))AND((+ (t1.c2)))))OR(CAST(t1.c1 AS REAL))));
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON rt0.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON rt0.c0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM t1 CROSS JOIN rt0 ON rt0.c0);
SELECT COUNT(*) FROM t1 CROSS JOIN rt0 ON rt0.c0 WHERE (x'');
SELECT * FROM rt0, v0 WHERE (PRINTF(-534834403, (('983347003') NOTNULL), LOWER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((PRINTF(-534834403, (('983347003') NOTNULL), LOWER(rt0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (PRINTF(-534834403, (('983347003') NOTNULL), LOWER(rt0.c2)));
SELECT SUM(count) FROM (SELECT ((PRINTF(-534834403, (('983347003') NOTNULL), LOWER(rt0.c2))) IS TRUE)  as count FROM rt0, v0);
SELECT * FROM rt0, v0 WHERE (PRINTF(-534834403, (('983347003') NOTNULL), LOWER(rt0.c2)));
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((COALESCE(v0.c0, t1.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (0.38843459215972553) AND (t1.c1))) AND (((vt0.c0) BETWEEN (t1.c2) AND (v0.c0))))) ORDER BY (vt0.c0 IN ()) ASC, (((- (t1.c1)))-(((t1.c0)<(t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(v0.c0, t1.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (0.38843459215972553) AND (t1.c1))) AND (((vt0.c0) BETWEEN (t1.c2) AND (v0.c0))))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY (vt0.c0 IN ()) ASC, (((- (t1.c1)))-(((t1.c0)<(t1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((COALESCE(v0.c0, t1.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (0.38843459215972553) AND (t1.c1))) AND (((vt0.c0) BETWEEN (t1.c2) AND (v0.c0))))) ORDER BY (vt0.c0 IN ()) ASC, (((- (t1.c1)))-(((t1.c0)<(t1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(v0.c0, t1.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (0.38843459215972553) AND (t1.c1))) AND (((vt0.c0) BETWEEN (t1.c2) AND (v0.c0))))) IS TRUE)  as count FROM t1, v0, vt0 ORDER BY (vt0.c0 IN ()) ASC, (((- (t1.c1)))-(((t1.c0)<(t1.c1))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, v0, vt0 WHERE (((COALESCE(v0.c0, t1.c0)) NOT BETWEEN (((v0.c0) NOT BETWEEN (0.38843459215972553) AND (t1.c1))) AND (((vt0.c0) BETWEEN (t1.c2) AND (v0.c0))))) ORDER BY (vt0.c0 IN ()) ASC, (((- (t1.c1)))-(((t1.c0)<(t1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON LOWER(DISTINCT '-1282641463') FULL OUTER JOIN rt0 ON (~ (((t1.c2) NOTNULL))) CROSS JOIN vt0 ON (((((('1189668460')!=(t1.c0)))OR((+ (rt0.c3)))))OR((((v0.c0, t1.c2, vt0.c0))<=((t1.c0, t1.c1, rt0.c1))))) WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ((~ (t1.c2))) AND (((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN ((~ (t1.c2))) AND (((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON LOWER(DISTINCT '-1282641463') FULL OUTER JOIN rt0 ON (~ (((t1.c2) NOTNULL))) CROSS JOIN vt0 ON (((((('1189668460')!=(t1.c0)))OR((+ (rt0.c3)))))OR((((v0.c0, t1.c2, vt0.c0))<=((t1.c0, t1.c1, rt0.c1))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON LOWER(DISTINCT '-1282641463') FULL OUTER JOIN rt0 ON (~ (((t1.c2) NOTNULL))) CROSS JOIN vt0 ON (((((('1189668460')!=(t1.c0)))OR((+ (rt0.c3)))))OR((((v0.c0, t1.c2, vt0.c0))<=((t1.c0, t1.c1, rt0.c1))))) WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ((~ (t1.c2))) AND (((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE NOCASE) BETWEEN ((~ (t1.c2))) AND (((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0))))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN t1 ON LOWER(DISTINCT '-1282641463') FULL OUTER JOIN rt0 ON (~ (((t1.c2) NOTNULL))) CROSS JOIN vt0 ON (((((('1189668460')!=(t1.c0)))OR((+ (rt0.c3)))))OR((((v0.c0, t1.c2, vt0.c0))<=((t1.c0, t1.c1, rt0.c1))))));
SELECT ALL COUNT(*) FROM v0 RIGHT OUTER JOIN t1 ON LOWER(DISTINCT '-1282641463') FULL OUTER JOIN rt0 ON (~ (((t1.c2) NOTNULL))) CROSS JOIN vt0 ON (((((('1189668460')!=(t1.c0)))OR((+ (rt0.c3)))))OR((((v0.c0, t1.c2, vt0.c0))<=((t1.c0, t1.c1, rt0.c1))))) WHERE (((rt0.c1 COLLATE NOCASE) BETWEEN ((~ (t1.c2))) AND (((v0.c0) BETWEEN (rt0.c3) AND (vt0.c0)))));
SELECT ALL * FROM vt0, rt0, v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))|(CAST(t1.c1 AS REAL))) WHERE ((((+ (rt0.c3))) NOT NULL)) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) COLLATE BINARY DESC, (((rt0.c3 IN (0.33835869040557354)))<(CAST(t1.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))|(CAST(t1.c1 AS REAL))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) COLLATE BINARY DESC, (((rt0.c3 IN (0.33835869040557354)))<(CAST(t1.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))|(CAST(t1.c1 AS REAL))) WHERE ((((+ (rt0.c3))) NOT NULL)) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) COLLATE BINARY DESC, (((rt0.c3 IN (0.33835869040557354)))<(CAST(t1.c1 AS INTEGER)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt0.c3))) NOT NULL)) IS TRUE)  as count FROM vt0, rt0, v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))|(CAST(t1.c1 AS REAL))) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) COLLATE BINARY DESC, (((rt0.c3 IN (0.33835869040557354)))<(CAST(t1.c1 AS INTEGER)))  NULLS LAST);
SELECT ALL * FROM vt0, rt0, v0 LEFT OUTER JOIN t1 ON ((CAST(v0.c0 AS REAL))|(CAST(t1.c1 AS REAL))) WHERE ((((+ (rt0.c3))) NOT NULL)) ORDER BY ((rt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c2)) COLLATE BINARY DESC, (((rt0.c3 IN (0.33835869040557354)))<(CAST(t1.c1 AS INTEGER)))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))<(CAST(vt0.c0 AS NUMERIC)))) ORDER BY v0.c0 DESC, ((((vt0.c0)<(vt0.c0)))GLOB(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC, ((((vt0.c0)<(vt0.c0)))GLOB(v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))<(CAST(vt0.c0 AS NUMERIC)))) ORDER BY v0.c0 DESC, ((((vt0.c0)<(vt0.c0)))GLOB(v0.c0)) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0, vt0 ORDER BY v0.c0 DESC, ((((vt0.c0)<(vt0.c0)))GLOB(v0.c0)) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0 WHERE (((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))<(CAST(vt0.c0 AS NUMERIC)))) ORDER BY v0.c0 DESC, ((((vt0.c0)<(vt0.c0)))GLOB(v0.c0)) ASC  NULLS FIRST;
SELECT * FROM vt0, rt0, t1, v0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT * FROM vt0, rt0, t1, v0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT * FROM vt0, rt0, t1, v0 WHERE (((rt0.c1 COLLATE BINARY) IS FALSE));
SELECT COUNT(*) FROM t1 WHERE ((- (x''))) ORDER BY TYPEOF(((t1.c0)%(t1.c2)));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM t1 ORDER BY TYPEOF(((t1.c0)%(t1.c2))));
SELECT COUNT(*) FROM t1 WHERE ((- (x''))) ORDER BY TYPEOF(((t1.c0)%(t1.c2)));
SELECT SUM(count) FROM (SELECT (((- (x''))) IS TRUE)  as count FROM t1 ORDER BY TYPEOF(((t1.c0)%(t1.c2))));
SELECT COUNT(*) FROM t1 WHERE ((- (x''))) ORDER BY TYPEOF(((t1.c0)%(t1.c2)));
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), CAST(0X434e6282 AS TEXT), CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, ((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), CAST(0X434e6282 AS TEXT), CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), CAST(0X434e6282 AS TEXT), CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, ((rt0.c2) NOTNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), CAST(0X434e6282 AS TEXT), CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, ((rt0.c2) NOTNULL))))) IS TRUE)  as count FROM rt0, vt0);
SELECT ALL * FROM rt0, vt0 WHERE ((((rt0.c1, rt0.c2, rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()), CAST(0X434e6282 AS TEXT), CASE rt0.c3  WHEN vt0.c0 THEN rt0.c1 END)) AND ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt0.c2)), rt0.c0, ((rt0.c2) NOTNULL)))));
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))+(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))+(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))+(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))+(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) IS TRUE)  as count FROM v0, rt0 ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) DESC);
SELECT ALL * FROM v0, rt0 WHERE (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))+(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c3))))) ORDER BY (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END IN ()) DESC;
SELECT ALL * FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((rt0.c3)||(t1.c1)))))OR((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))))) WHERE ((((vt0.c0 IN (t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((rt0.c3)||(t1.c1)))))OR((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((rt0.c3)||(t1.c1)))))OR((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))))) WHERE ((((vt0.c0 IN (t1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (t1.c2))) IS TRUE)) IS TRUE)  as count FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((rt0.c3)||(t1.c1)))))OR((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))))));
SELECT ALL * FROM t1, v0, rt0 FULL OUTER JOIN vt0 ON ((((NULL)AND(((rt0.c3)||(t1.c1)))))OR((((vt0.c0)) NOT BETWEEN ((t1.c1)) AND ((vt0.c0))))) WHERE ((((vt0.c0 IN (t1.c2))) IS TRUE));
SELECT COUNT(*) FROM t1, v0 WHERE ((((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) IN ())) ORDER BY t1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) IN ())) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c1 DESC);
SELECT COUNT(*) FROM t1, v0 WHERE ((((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) IN ())) ORDER BY t1.c1 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) IN ())) IS TRUE)  as count FROM t1, v0 ORDER BY t1.c1 DESC);
SELECT COUNT(*) FROM t1, v0 WHERE ((((t1.c2) BETWEEN (t1.c1) AND (t1.c0)) IN ())) ORDER BY t1.c1 DESC;
SELECT ALL * FROM rt0, vt0, v0 INDEXED BY i92, t1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT NULL)) AND (rt0.c0 COLLATE BINARY))) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT NULL)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, v0 INDEXED BY i92, t1 ORDER BY (NOT (CAST(rt0.c0 AS INTEGER))) ASC);
SELECT ALL * FROM rt0, vt0, v0 INDEXED BY i92, t1 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT NULL)) AND (rt0.c0 COLLATE BINARY))) ORDER BY (NOT (CAST(rt0.c0 AS INTEGER))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM) BETWEEN (((v0.c0) NOT NULL)) AND (rt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM rt0, vt0, v0 INDEXED BY i92, t1 ORDER BY (NOT (CAST(rt0.c0 AS INTEGER))) ASC);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((~ (((t1.c1)>(rt0.c0))))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c2) NOTNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c2) NOTNULL) END DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((~ (((t1.c1)>(rt0.c0))))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c2) NOTNULL) END DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (((t1.c1)>(rt0.c0))))) IS TRUE)  as count FROM rt0, vt0, t1, v0 ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c2) NOTNULL) END DESC  NULLS FIRST);
SELECT * FROM rt0, vt0, t1, v0 WHERE ((~ (((t1.c1)>(rt0.c0))))) ORDER BY CASE WHEN (t1.c1 IN ()) THEN ((t1.c2) NOTNULL) END DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM t1, v0 WHERE (json_extract(((((((((t1.c0)AND(t1.c2)))AND(v0.c0)))OR(t1.c2)))AND(t1.c1)), (((x'')) BETWEEN ((x'')) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_extract(((((((((t1.c0)AND(t1.c2)))AND(v0.c0)))OR(t1.c2)))AND(t1.c1)), (((x'')) BETWEEN ((x'')) AND ((t1.c0))))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (json_extract(((((((((t1.c0)AND(t1.c2)))AND(v0.c0)))OR(t1.c2)))AND(t1.c1)), (((x'')) BETWEEN ((x'')) AND ((t1.c0)))));
SELECT SUM(count) FROM (SELECT ((json_extract(((((((((t1.c0)AND(t1.c2)))AND(v0.c0)))OR(t1.c2)))AND(t1.c1)), (((x'')) BETWEEN ((x'')) AND ((t1.c0))))) IS TRUE)  as count FROM t1, v0);
SELECT ALL COUNT(*) FROM t1, v0 WHERE (json_extract(((((((((t1.c0)AND(t1.c2)))AND(v0.c0)))OR(t1.c2)))AND(t1.c1)), (((x'')) BETWEEN ((x'')) AND ((t1.c0)))));
SELECT COUNT(*) FROM t1, v0, rt0, vt0 WHERE (CASE COALESCE(DISTINCT rt0.c1, vt0.c0, '', vt0.c0)  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN NULL ELSE ((((t1.c1)OR(t1.c2)))AND(rt0.c0)) END) ORDER BY ((NULL)AND(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c1, vt0.c0, '', vt0.c0)  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN NULL ELSE ((((t1.c1)OR(t1.c2)))AND(rt0.c0)) END) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY ((NULL)AND(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM t1, v0, rt0, vt0 WHERE (CASE COALESCE(DISTINCT rt0.c1, vt0.c0, '', vt0.c0)  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN NULL ELSE ((((t1.c1)OR(t1.c2)))AND(rt0.c0)) END) ORDER BY ((NULL)AND(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((CASE COALESCE(DISTINCT rt0.c1, vt0.c0, '', vt0.c0)  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN NULL ELSE ((((t1.c1)OR(t1.c2)))AND(rt0.c0)) END) IS TRUE)  as count FROM t1, v0, rt0, vt0 ORDER BY ((NULL)AND(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM t1, v0, rt0, vt0 WHERE (CASE COALESCE(DISTINCT rt0.c1, vt0.c0, '', vt0.c0)  WHEN (((rt0.c1)) BETWEEN ((v0.c0)) AND ((rt0.c2))) THEN NULL ELSE ((((t1.c1)OR(t1.c2)))AND(rt0.c0)) END) ORDER BY ((NULL)AND(((rt0.c0) BETWEEN (rt0.c1) AND (vt0.c0))));
SELECT * FROM t1, v0 WHERE (CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE 0x60f4b142 END COLLATE RTRIM) ORDER BY (+ ((+ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE 0x60f4b142 END COLLATE RTRIM) IS TRUE)  as count FROM t1, v0 ORDER BY (+ ((+ (v0.c0))))  NULLS LAST);
SELECT * FROM t1, v0 WHERE (CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE 0x60f4b142 END COLLATE RTRIM) ORDER BY (+ ((+ (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE 0x60f4b142 END COLLATE RTRIM) IS TRUE)  as count FROM t1, v0 ORDER BY (+ ((+ (v0.c0))))  NULLS LAST);
SELECT * FROM t1, v0 WHERE (CASE t1.c2  WHEN t1.c2 THEN t1.c0 WHEN t1.c1 THEN t1.c2 WHEN t1.c2 THEN t1.c2 ELSE 0x60f4b142 END COLLATE RTRIM) ORDER BY (+ ((+ (v0.c0))))  NULLS LAST;
SELECT * FROM vt0 INNER JOIN v0 ON (((JULIANDAY(v0.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c3)))>(((0.32911635141531415 IN ())))) CROSS JOIN rt0 ON json_extract(LOWER(DISTINCT rt0.c2), ((vt0.c0)!=(0.24269088551052864))) WHERE ((TRIM(DISTINCT vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((JULIANDAY(v0.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c3)))>(((0.32911635141531415 IN ())))) CROSS JOIN rt0 ON json_extract(LOWER(DISTINCT rt0.c2), ((vt0.c0)!=(0.24269088551052864))));
SELECT * FROM vt0 INNER JOIN v0 ON (((JULIANDAY(v0.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c3)))>(((0.32911635141531415 IN ())))) CROSS JOIN rt0 ON json_extract(LOWER(DISTINCT rt0.c2), ((vt0.c0)!=(0.24269088551052864))) WHERE ((TRIM(DISTINCT vt0.c0) IN ()));
SELECT SUM(count) FROM (SELECT (((TRIM(DISTINCT vt0.c0) IN ())) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON (((JULIANDAY(v0.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c3)))>(((0.32911635141531415 IN ())))) CROSS JOIN rt0 ON json_extract(LOWER(DISTINCT rt0.c2), ((vt0.c0)!=(0.24269088551052864))));
SELECT * FROM vt0 INNER JOIN v0 ON (((JULIANDAY(v0.c0, vt0.c0, vt0.c0, rt0.c2, rt0.c3)))>(((0.32911635141531415 IN ())))) CROSS JOIN rt0 ON json_extract(LOWER(DISTINCT rt0.c2), ((vt0.c0)!=(0.24269088551052864))) WHERE ((TRIM(DISTINCT vt0.c0) IN ()));
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((NULLIF(t1.c1, t1.c1))OR(((t1.c2)-(rt0.c0)))))OR(((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(t1.c1, t1.c1))OR(((t1.c2)-(rt0.c0)))))OR(((NULL) ISNULL)))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((NULLIF(t1.c1, t1.c1))OR(((t1.c2)-(rt0.c0)))))OR(((NULL) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULLIF(t1.c1, t1.c1))OR(((t1.c2)-(rt0.c0)))))OR(((NULL) ISNULL)))) IS TRUE)  as count FROM rt0, t1, vt0);
SELECT ALL COUNT(*) FROM rt0, t1, vt0 WHERE (((((NULLIF(t1.c1, t1.c1))OR(((t1.c2)-(rt0.c0)))))OR(((NULL) ISNULL))));
SELECT ALL * FROM t1, vt0 WHERE ((((+ (t1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c2))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((+ (t1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT (((((+ (t1.c2))) IS FALSE)) IS TRUE)  as count FROM t1, vt0);
SELECT ALL * FROM t1, vt0 WHERE ((((+ (t1.c2))) IS FALSE));
SELECT ALL COUNT(*) FROM vt0, rt0, t1, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(t1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CAST(t1.c2 AS BLOB))) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(t1.c2 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_COMPILEOPTION_GET(CAST(t1.c2 AS BLOB))) IS TRUE)  as count FROM vt0, rt0, t1, v0);
SELECT ALL COUNT(*) FROM vt0, rt0, t1, v0 WHERE (SQLITE_COMPILEOPTION_GET(CAST(t1.c2 AS BLOB)));
SELECT * FROM vt0 INNER JOIN t1 ON (((vt0.c0))<((t1.c1))) COLLATE BINARY WHERE (UPPER(CAST(t1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(t1.c0 AS BLOB))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((vt0.c0))<((t1.c1))) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN t1 ON (((vt0.c0))<((t1.c1))) COLLATE BINARY WHERE (UPPER(CAST(t1.c0 AS BLOB)));
SELECT SUM(count) FROM (SELECT ALL ((UPPER(CAST(t1.c0 AS BLOB))) IS TRUE)  as count FROM vt0 INNER JOIN t1 ON (((vt0.c0))<((t1.c1))) COLLATE BINARY);
SELECT * FROM vt0 INNER JOIN t1 ON (((vt0.c0))<((t1.c1))) COLLATE BINARY WHERE (UPPER(CAST(t1.c0 AS BLOB)));
SELECT COUNT(*) FROM rt0 WHERE (((CAST('-342338282' AS INTEGER))OR(((rt0.c0) NOT BETWEEN (0.6212120886339052) AND (rt0.c0))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (rt0.c3 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST('-342338282' AS INTEGER))OR(((rt0.c0) NOT BETWEEN (0.6212120886339052) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (rt0.c3 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST('-342338282' AS INTEGER))OR(((rt0.c0) NOT BETWEEN (0.6212120886339052) AND (rt0.c0))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (rt0.c3 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST('-342338282' AS INTEGER))OR(((rt0.c0) NOT BETWEEN (0.6212120886339052) AND (rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (rt0.c3 COLLATE RTRIM)) DESC);
SELECT COUNT(*) FROM rt0 WHERE (((CAST('-342338282' AS INTEGER))OR(((rt0.c0) NOT BETWEEN (0.6212120886339052) AND (rt0.c0))))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) BETWEEN (((rt0.c3)AND(rt0.c2))) AND (rt0.c3 COLLATE RTRIM)) DESC;
SELECT ALL COUNT(*) FROM t1, rt0 NOT INDEXED, v0 WHERE (((((((((((t1.c0)AND(rt0.c2)))OR(t1.c0)))AND(x'')))AND(rt0.c1)))>>((((rt0.c1))!=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)AND(rt0.c2)))OR(t1.c0)))AND(x'')))AND(rt0.c1)))>>((((rt0.c1))!=((rt0.c1)))))) IS TRUE)  as count FROM t1, rt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0 NOT INDEXED, v0 WHERE (((((((((((t1.c0)AND(rt0.c2)))OR(t1.c0)))AND(x'')))AND(rt0.c1)))>>((((rt0.c1))!=((rt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((t1.c0)AND(rt0.c2)))OR(t1.c0)))AND(x'')))AND(rt0.c1)))>>((((rt0.c1))!=((rt0.c1)))))) IS TRUE)  as count FROM t1, rt0, v0);
SELECT ALL COUNT(*) FROM t1, rt0 NOT INDEXED, v0 WHERE (((((((((((t1.c0)AND(rt0.c2)))OR(t1.c0)))AND(x'')))AND(rt0.c1)))>>((((rt0.c1))!=((rt0.c1))))));
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN (CAST(rt0.c3 AS TEXT), CAST(v0.c0 AS TEXT)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST, IFNULL(CAST(vt0.c0 AS INTEGER), (rt0.c3 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN (CAST(rt0.c3 AS TEXT), CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST, IFNULL(CAST(vt0.c0 AS INTEGER), (rt0.c3 IN ())) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN (CAST(rt0.c3 AS TEXT), CAST(v0.c0 AS TEXT)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST, IFNULL(CAST(vt0.c0 AS INTEGER), (rt0.c3 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN (CAST(rt0.c3 AS TEXT), CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0, rt0, vt0 ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST, IFNULL(CAST(vt0.c0 AS INTEGER), (rt0.c3 IN ())) DESC);
SELECT ALL * FROM v0, rt0, vt0 WHERE ((((((((((rt0.c1)OR(v0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c3)) IN (CAST(rt0.c3 AS TEXT), CAST(v0.c0 AS TEXT)))) ORDER BY (NOT ((vt0.c0 IN ()))) DESC  NULLS FIRST, IFNULL(CAST(vt0.c0 AS INTEGER), (rt0.c3 IN ())) DESC;
SELECT COUNT(*) FROM t1 CROSS JOIN v0 ON (((v0.c0)*(v0.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (NOT (v0.c0)) WHERE ((((v0.c0)) NOT BETWEEN ((UPPER(DISTINCT t1.c2))) AND (((+ (t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((UPPER(DISTINCT t1.c2))) AND (((+ (t1.c1)))))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (((v0.c0)*(v0.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (NOT (v0.c0)));
SELECT COUNT(*) FROM t1 CROSS JOIN v0 ON (((v0.c0)*(v0.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (NOT (v0.c0)) WHERE ((((v0.c0)) NOT BETWEEN ((UPPER(DISTINCT t1.c2))) AND (((+ (t1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((UPPER(DISTINCT t1.c2))) AND (((+ (t1.c1)))))) IS TRUE)  as count FROM t1 CROSS JOIN v0 ON (((v0.c0)*(v0.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (NOT (v0.c0)));
SELECT COUNT(*) FROM t1 CROSS JOIN v0 ON (((v0.c0)*(v0.c0)) IN ()) RIGHT OUTER JOIN vt0 ON (NOT (v0.c0)) WHERE ((((v0.c0)) NOT BETWEEN ((UPPER(DISTINCT t1.c2))) AND (((+ (t1.c1))))));
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE (((((rt0.c1)AND(t1.c2)))*(((vt0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(t1.c2)))*(((vt0.c0)||(v0.c0))))) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE (((((rt0.c1)AND(t1.c2)))*(((vt0.c0)||(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt0.c1)AND(t1.c2)))*(((vt0.c0)||(v0.c0))))) IS TRUE)  as count FROM rt0, v0, t1, vt0);
SELECT ALL * FROM rt0, v0, t1, vt0 WHERE (((((rt0.c1)AND(t1.c2)))*(((vt0.c0)||(v0.c0)))));
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ('2097438914') ORDER BY IFNULL((~ (t1.c2)), (('u(撰{')/(t1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2097438914') IS TRUE)  as count FROM t1, rt0 ORDER BY IFNULL((~ (t1.c2)), (('u(撰{')/(t1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ('2097438914') ORDER BY IFNULL((~ (t1.c2)), (('u(撰{')/(t1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('2097438914') IS TRUE)  as count FROM t1, rt0 ORDER BY IFNULL((~ (t1.c2)), (('u(撰{')/(t1.c0))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM t1, rt0 WHERE ('2097438914') ORDER BY IFNULL((~ (t1.c2)), (('u(撰{')/(t1.c0))) DESC  NULLS FIRST;
SELECT * FROM v0, t1, vt0, rt0 WHERE (TRIM(((rt0.c1)*(v0.c0)))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.3714737333093451 END IN (ABS(t1.c1), (((rt0.c3)) NOT BETWEEN ((t1.c1)) AND ((rt0.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)*(v0.c0)))) IS TRUE)  as count FROM v0, t1, vt0, rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.3714737333093451 END IN (ABS(t1.c1), (((rt0.c3)) NOT BETWEEN ((t1.c1)) AND ((rt0.c3))))) ASC  NULLS FIRST);
SELECT * FROM v0, t1, vt0, rt0 WHERE (TRIM(((rt0.c1)*(v0.c0)))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.3714737333093451 END IN (ABS(t1.c1), (((rt0.c3)) NOT BETWEEN ((t1.c1)) AND ((rt0.c3))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(((rt0.c1)*(v0.c0)))) IS TRUE)  as count FROM v0, t1, vt0, rt0 ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.3714737333093451 END IN (ABS(t1.c1), (((rt0.c3)) NOT BETWEEN ((t1.c1)) AND ((rt0.c3))))) ASC  NULLS FIRST);
SELECT * FROM v0, t1, vt0, rt0 WHERE (TRIM(((rt0.c1)*(v0.c0)))) ORDER BY (CASE WHEN rt0.c1 THEN rt0.c0 ELSE 0.3714737333093451 END IN (ABS(t1.c1), (((rt0.c3)) NOT BETWEEN ((t1.c1)) AND ((rt0.c3))))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((((vt0.c0))!=(((t1.c2 IN (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))!=(((t1.c2 IN (rt0.c3)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((((vt0.c0))!=(((t1.c2 IN (rt0.c3))))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0))!=(((t1.c2 IN (rt0.c3)))))) IS TRUE)  as count FROM vt0, t1, rt0);
SELECT ALL COUNT(*) FROM vt0, t1, rt0 WHERE ((((vt0.c0))!=(((t1.c2 IN (rt0.c3))))));
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))IS NOT(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))IS NOT(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))IS NOT(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))IS NOT(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))) IS TRUE)  as count FROM rt0 ORDER BY ((rt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt0 WHERE (((((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))IS NOT(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))))) ORDER BY ((rt0.c0 COLLATE NOCASE) NOTNULL) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((vt0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC);
SELECT * FROM vt0 WHERE ((vt0.c0 COLLATE BINARY IN ())) ORDER BY CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE RTRIM DESC;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.4411621894739556);
SELECT SUM(count) FROM (SELECT ALL ((0.4411621894739556) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.4411621894739556);
SELECT SUM(count) FROM (SELECT ALL ((0.4411621894739556) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (0.4411621894739556);
SELECT ALL * FROM t1, rt0 WHERE (CAST((((x''))<>((rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((x''))<>((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CAST((((x''))<>((rt0.c1))) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((((x''))<>((rt0.c1))) AS INTEGER)) IS TRUE)  as count FROM t1, rt0);
SELECT ALL * FROM t1, rt0 WHERE (CAST((((x''))<>((rt0.c1))) AS INTEGER));
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t1.c1) AND (rt0.c2))) AND (t1.c2)) WHERE (((rt0.c1)&(t1.c0)) COLLATE BINARY) ORDER BY (- (((rt0.c3)IS(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t1.c1) AND (rt0.c2))) AND (t1.c2)) ORDER BY (- (((rt0.c3)IS(rt0.c0)))) DESC);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t1.c1) AND (rt0.c2))) AND (t1.c2)) WHERE (((rt0.c1)&(t1.c0)) COLLATE BINARY) ORDER BY (- (((rt0.c3)IS(rt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((rt0.c1)&(t1.c0)) COLLATE BINARY) IS TRUE)  as count FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t1.c1) AND (rt0.c2))) AND (t1.c2)) ORDER BY (- (((rt0.c3)IS(rt0.c0)))) DESC);
SELECT COUNT(*) FROM t1 INNER JOIN rt0 ON ((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN (((rt0.c3) NOT BETWEEN (t1.c1) AND (rt0.c2))) AND (t1.c2)) WHERE (((rt0.c1)&(t1.c0)) COLLATE BINARY) ORDER BY (- (((rt0.c3)IS(rt0.c0)))) DESC;
