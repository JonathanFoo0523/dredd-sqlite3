-- Time: 2024/06/10 06:02:52
-- Database: database2
-- Database version: 3.40.0
-- seed value: 3992318902
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 BLOB ); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE vt0 SET c1='', c0=0.35814800886437037 WHERE CASE ((vt0.c1) NOTNULL)  WHEN NULL THEN UPPER(DISTINCT vt0.c0) ELSE ((vt0.c1) ISNULL) END; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt1(c2, c3) VALUES (NULL, NULL), (x'', '.~ ߗ'), (0.35814800886437037, '?wo?O?u R'); -- 4ms;
INSERT OR ROLLBACK INTO rt1(c2, c3, c0, c1) VALUES ('Wd~A*0dR', NULL, '', 0.07590943226238844), (NULL, 2.95176151E8, 0Xffffffffd9862c49, 0.09818741927887564), (0Xffffffffd9862c49, '?wo?O?u R', x'd11a', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c3) VALUES (0x1c4e6144, x'', '	O\no)4'); -- 3ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('ⵠ', 1.7976931348623157E308); -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('295176151', NULL); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1, order=DESC); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3, c0) VALUES (x'69d6', x'', 1.621241184E9), (-1577919574, ' Eg5Bv\L\n', NULL), (0.9804147707811475, 0.2655668773789853, '-645518263'), (NULL, '', 295176151), ('Olxc', '-1', NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES ('~9', 1110133861), ('1110133861', '-2093633246'), (x'', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (0.5748103520803579); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, '-504664007'); -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c3, c1, c0) VALUES (NULL, '24718253', 'v?⁡L4Q6~鮱', NULL); -- 1ms;
INSERT OR ABORT INTO rt1(c2) VALUES (0.48485189564834985); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x''), (0.6607173649167077), ('0.09818741927887564'); -- 0ms;
REINDEX; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', 4.30186593E8), (x'', 2.95176151E8), (NULL, '24718253'); -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (''); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c1) VALUES (0.6607173649167077, NULL), (NULL, 0.9711152075623621), (x'', 'Y%'); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c0, c3, c2) VALUES ('1615:쮶!', '985030505', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c0, c3) VALUES (0.14635667106358652, '-1577919574', NULL, 0.07590943226238844); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (80579696); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (NULL), (NULL), (x'7f3c'); -- 0ms;
UPDATE OR FAIL rt1 SET c0=x'', c3=0.14635667106358652 WHERE HEX(1.110133861E9); -- 0ms;
UPDATE vt0 SET c0='-937358815' WHERE ((('D%_39(Q'))<=((NULL))); -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('E3M%S~T'), ('ⱉ/w	'), ('2cbq&8'); -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0, c2)=(NULL, NULL); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT LAST_INSERT_ROWID() FROM rt1, vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=2'); -- 0ms;
REINDEX RTRIM; -- 0ms;
DROP VIEW v0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (x'c01e'), (2.4718253E7), (NULL); -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c0, c2) VALUES (0xfffffffff6ee8f55, NULL, 0.9804147707811475), (0.48485189564834985, -169398901, NULL), (NULL, NULL, '鮱7zBᵣ'); -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c1)=(NULL, '-169398901') WHERE (((vt0.c1)/(vt0.c1)) IN ()); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1958887323);\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 686101788); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '37542'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3) VALUES (-377813295, x'98a4'), ('?wo?O?u R', 0.6982164689161463), ('', x''); -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('E3M%S~T'), (0X19a42061), ('-937358815'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 820060790); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '59731'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 BLOB , +c4 REAL ); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x'd795'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-645518263,12');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1904002462); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '31277'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '45459'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 1ms;
INSERT OR IGNORE INTO rt1(c0, c3, c1) VALUES (NULL, NULL, x''); -- 0ms;
INSERT OR FAIL INTO vt0 VALUES ('x?}K_o', 0.3649532116713958); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c0 IN ())  WHEN rt1.c3 THEN 0.45321738494580466 WHEN ((((rt1.c3)OR(1044564918)))AND(rt1.c0)) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c2)) WHEN CAST(rt1.c3 AS INTEGER) THEN ((rt1.c3)+(rt1.c1)) END) ORDER BY (rt1.c3 IN (NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c0 IN ())  WHEN rt1.c3 THEN 0.45321738494580466 WHEN ((((rt1.c3)OR(1044564918)))AND(rt1.c0)) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c2)) WHEN CAST(rt1.c3 AS INTEGER) THEN ((rt1.c3)+(rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 IN (NULL)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c0 IN ())  WHEN rt1.c3 THEN 0.45321738494580466 WHEN ((((rt1.c3)OR(1044564918)))AND(rt1.c0)) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c2)) WHEN CAST(rt1.c3 AS INTEGER) THEN ((rt1.c3)+(rt1.c1)) END) ORDER BY (rt1.c3 IN (NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c0 IN ())  WHEN rt1.c3 THEN 0.45321738494580466 WHEN ((((rt1.c3)OR(1044564918)))AND(rt1.c0)) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c2)) WHEN CAST(rt1.c3 AS INTEGER) THEN ((rt1.c3)+(rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c3 IN (NULL)) COLLATE NOCASE  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (CASE (rt1.c0 IN ())  WHEN rt1.c3 THEN 0.45321738494580466 WHEN ((((rt1.c3)OR(1044564918)))AND(rt1.c0)) THEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c3)))OR(rt1.c2)) WHEN CAST(rt1.c3 AS INTEGER) THEN ((rt1.c3)+(rt1.c1)) END) ORDER BY (rt1.c3 IN (NULL)) COLLATE NOCASE  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN x'' ELSE rt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN x'' ELSE rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN x'' ELSE rt1.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN rt1.c2 THEN x'' ELSE rt1.c0 END COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN rt1.c2 THEN x'' ELSE rt1.c0 END COLLATE RTRIM);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) IN (vt0.c0, ((rt1.c0)>>(rt1.c0))))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) IN (vt0.c0, ((rt1.c0)>>(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) IN (vt0.c0, ((rt1.c0)>>(rt1.c0))))) ORDER BY rt1.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) IN (vt0.c0, ((rt1.c0)>>(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY rt1.c0  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0)) IN (vt0.c0, ((rt1.c0)>>(rt1.c0))))) ORDER BY rt1.c0  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3 IN ()))<=((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ()))<=((rt1.c3 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3 IN ()))<=((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((((rt1.c3 IN ()))<=((rt1.c3 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3 IN ()))<=((rt1.c3 IN ()))));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR(((rt1.c1) NOT NULL))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR(((rt1.c1) NOT NULL)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR(((rt1.c1) NOT NULL))));
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0)IS(vt0.c1)))>(((vt0.c1)LIKE(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(vt0.c1)))>(((vt0.c1)LIKE(NULL))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0)IS(vt0.c1)))>(((vt0.c1)LIKE(NULL)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)IS(vt0.c1)))>(((vt0.c1)LIKE(NULL))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0)IS(vt0.c1)))>(((vt0.c1)LIKE(NULL)))));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)|(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)|(vt0.c0)) COLLATE BINARY);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((vt0.c0 IN ()))AND(CAST(vt0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((NOT ((NOT (vt0.c1))))) ORDER BY CAST(CAST(vt0.c0 AS NUMERIC) AS NUMERIC)  NULLS FIRST;
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) IS TRUE)  WHEN NULL THEN rt1.c1 COLLATE NOCASE WHEN ((x'b428')||(rt1.c1)) THEN rt1.c0 COLLATE RTRIM WHEN (- (NULL)) THEN 0x3ac1be2c END) ORDER BY 1416826225  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) IS TRUE)  WHEN NULL THEN rt1.c1 COLLATE NOCASE WHEN ((x'b428')||(rt1.c1)) THEN rt1.c0 COLLATE RTRIM WHEN (- (NULL)) THEN 0x3ac1be2c END) IS TRUE)  as count FROM rt1 ORDER BY 1416826225  NULLS LAST);
SELECT * FROM rt1 WHERE (CASE ((rt1.c1) IS TRUE)  WHEN NULL THEN rt1.c1 COLLATE NOCASE WHEN ((x'b428')||(rt1.c1)) THEN rt1.c0 COLLATE RTRIM WHEN (- (NULL)) THEN 0x3ac1be2c END) ORDER BY 1416826225  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) IS TRUE)  WHEN NULL THEN rt1.c1 COLLATE NOCASE WHEN ((x'b428')||(rt1.c1)) THEN rt1.c0 COLLATE RTRIM WHEN (- (NULL)) THEN 0x3ac1be2c END) IS TRUE)  as count FROM rt1 ORDER BY 1416826225  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(rt1.c1)))AND(NULL)))OR('-['))))) ORDER BY (((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((rt1.c1)))) IS TRUE) DESC, ((((vt0.c1)<(rt1.c3))) BETWEEN (json_extract(rt1.c3, vt0.c0)) AND (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(rt1.c1)))AND(NULL)))OR('-['))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((rt1.c1)))) IS TRUE) DESC, ((((vt0.c1)<(rt1.c3))) BETWEEN (json_extract(rt1.c3, vt0.c0)) AND (((vt0.c0) IS TRUE))) ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(rt1.c1)))AND(NULL)))OR('-['))))) ORDER BY (((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((rt1.c1)))) IS TRUE) DESC, ((((vt0.c1)<(rt1.c3))) BETWEEN (json_extract(rt1.c3, vt0.c0)) AND (((vt0.c0) IS TRUE))) ASC;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c1 AS TEXT)) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c2))) AND (((((((((vt0.c1)OR(vt0.c0)))AND(rt1.c1)))AND(NULL)))OR('-['))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((rt1.c1)) BETWEEN ((vt0.c1)) AND ((rt1.c1)))) IS TRUE) DESC, ((((vt0.c1)<(rt1.c3))) BETWEEN (json_extract(rt1.c3, vt0.c0)) AND (((vt0.c0) IS TRUE))) ASC);
SELECT * FROM vt0 WHERE ((((0.49614677714145294 IN ())) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, vt0.c0, vt0.c1, vt0.c1, 0.2542492301179149)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY CAST(CHANGES() AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.49614677714145294 IN ())) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, vt0.c0, vt0.c1, vt0.c1, 0.2542492301179149)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CHANGES() AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((0.49614677714145294 IN ())) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, vt0.c0, vt0.c1, vt0.c1, 0.2542492301179149)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY CAST(CHANGES() AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((0.49614677714145294 IN ())) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, vt0.c0, vt0.c1, vt0.c1, 0.2542492301179149)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY CAST(CHANGES() AS TEXT)  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((0.49614677714145294 IN ())) NOT BETWEEN ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c1))<>((vt0.c0, vt0.c0, vt0.c1, vt0.c1, 0.2542492301179149)))) AND (CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY CAST(CHANGES() AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c1)IS(rt1.c0)) THEN ((0.6423546641954294) BETWEEN (rt1.c0) AND (vt0.c1)) ELSE ((((((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c0)))AND(NULL)) END WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c1)IS(rt1.c0)) THEN ((0.6423546641954294) BETWEEN (rt1.c0) AND (vt0.c1)) ELSE ((((((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c0)))AND(NULL)) END);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c1)IS(rt1.c0)) THEN ((0.6423546641954294) BETWEEN (rt1.c0) AND (vt0.c1)) ELSE ((((((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c0)))AND(NULL)) END WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c1)IS(rt1.c0)) THEN ((0.6423546641954294) BETWEEN (rt1.c0) AND (vt0.c1)) ELSE ((((((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c0)))AND(NULL)) END);
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON CASE WHEN ((rt1.c1)IS(rt1.c0)) THEN ((0.6423546641954294) BETWEEN (rt1.c0) AND (vt0.c1)) ELSE ((((((((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))AND(rt1.c3)))OR(vt0.c0)))AND(rt1.c0)))AND(NULL)) END WHERE (rt1.c0);
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c2) ISNULL)) NOTNULL) WHERE (((((((((((rt1.c2)<(rt1.c1)))OR(rt1.c0)))AND((vt0.c1 IN ()))))OR(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN rt1.c1 THEN NULL END))) ORDER BY (((0.619119947116852 IN (vt0.c0, rt1.c0)))=(SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)<(rt1.c1)))OR(rt1.c0)))AND((vt0.c1 IN ()))))OR(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN rt1.c1 THEN NULL END))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c2) ISNULL)) NOTNULL) ORDER BY (((0.619119947116852 IN (vt0.c0, rt1.c0)))==(SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c2) ISNULL)) NOTNULL) WHERE (((((((((((rt1.c2)<(rt1.c1)))OR(rt1.c0)))AND((vt0.c1 IN ()))))OR(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN rt1.c1 THEN NULL END))) ORDER BY (((0.619119947116852 IN (vt0.c0, rt1.c0)))=(SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)<(rt1.c1)))OR(rt1.c0)))AND((vt0.c1 IN ()))))OR(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN rt1.c1 THEN NULL END))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c2) ISNULL)) NOTNULL) ORDER BY (((0.619119947116852 IN (vt0.c0, rt1.c0)))==(SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC);
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c2) ISNULL)) NOTNULL) WHERE (((((((((((rt1.c2)<(rt1.c1)))OR(rt1.c0)))AND((vt0.c1 IN ()))))OR(((rt1.c2) IS TRUE))))OR(CASE rt1.c1  WHEN rt1.c1 THEN NULL END))) ORDER BY (((0.619119947116852 IN (vt0.c0, rt1.c0)))=(SQLITE_COMPILEOPTION_USED(vt0.c0))) ASC;
SELECT ALL * FROM vt0 WHERE (((((SQLITE_VERSION())OR(vt0.c1)))OR(((NULL) NOTNULL)))) ORDER BY NULLIF(vt0.c1, vt0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_VERSION())OR(vt0.c1)))OR(((NULL) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1, vt0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_VERSION())OR(vt0.c1)))OR(((NULL) NOTNULL)))) ORDER BY NULLIF(vt0.c1, vt0.c1) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((SQLITE_VERSION())OR(vt0.c1)))OR(((NULL) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY NULLIF(vt0.c1, vt0.c1) COLLATE BINARY  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((SQLITE_VERSION())OR(vt0.c1)))OR(((NULL) NOTNULL)))) ORDER BY NULLIF(vt0.c1, vt0.c1) COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c1)>>(rt1.c1))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c0)IS NOT(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>>(rt1.c1))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c0)IS NOT(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c1)>>(rt1.c1))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c0)IS NOT(rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS(CAST(rt1.c2 AS INTEGER)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>>(rt1.c1))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c0)IS NOT(rt1.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)IS(CAST(rt1.c2 AS INTEGER)))) ORDER BY ((((rt1.c1)>>(rt1.c1))) BETWEEN (((rt1.c0) IS TRUE)) AND (((rt1.c0)IS NOT(rt1.c0))));
SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR(((rt1.c2)|(rt1.c1)))))AND(rt1.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2 IN ()))OR(((rt1.c2)|(rt1.c1)))))AND(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR(((rt1.c2)|(rt1.c1)))))AND(rt1.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2 IN ()))OR(((rt1.c2)|(rt1.c1)))))AND(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c2 IN ()))OR(((rt1.c2)|(rt1.c1)))))AND(rt1.c3 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.12388768513169057 COLLATE NOCASE IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((0.12388768513169057 COLLATE NOCASE IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.12388768513169057 COLLATE NOCASE IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((0.12388768513169057 COLLATE NOCASE IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((0.12388768513169057 COLLATE NOCASE IN (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (load_extension(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((~ (load_extension(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((~ (load_extension(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((~ (load_extension(rt1.c1)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)<=(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)<=(vt0.c0)) COLLATE RTRIM);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((+ (vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((+ (vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN ((+ (vt0.c0))) AND ((+ (vt0.c1)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((NULL)/(rt1.c0))) ORDER BY CASE CAST(rt1.c1 AS BLOB)  WHEN ((vt0.c0) BETWEEN (NULL) AND (rt1.c3)) THEN ((rt1.c1) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END END, ((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))OR(vt0.c1)))AND(rt1.c3))) ISNULL) ASC  NULLS LAST, (((((('Ls+W') IS TRUE))AND((rt1.c3 IN ()))))OR((vt0.c0 IN (rt1.c2, rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)/(rt1.c0))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE CAST(rt1.c1 AS BLOB)  WHEN ((vt0.c0) BETWEEN (NULL) AND (rt1.c3)) THEN ((rt1.c1) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END END, ((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))OR(vt0.c1)))AND(rt1.c3))) ISNULL) ASC  NULLS LAST, (((((('Ls+W') IS TRUE))AND((rt1.c3 IN ()))))OR((vt0.c0 IN (rt1.c2, rt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((NULL)/(rt1.c0))) ORDER BY CASE CAST(rt1.c1 AS BLOB)  WHEN ((vt0.c0) BETWEEN (NULL) AND (rt1.c3)) THEN ((rt1.c1) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END END, ((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))OR(vt0.c1)))AND(rt1.c3))) ISNULL) ASC  NULLS LAST, (((((('Ls+W') IS TRUE))AND((rt1.c3 IN ()))))OR((vt0.c0 IN (rt1.c2, rt1.c1))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)/(rt1.c0))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE CAST(rt1.c1 AS BLOB)  WHEN ((vt0.c0) BETWEEN (NULL) AND (rt1.c3)) THEN ((rt1.c1) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END END, ((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))OR(vt0.c1)))AND(rt1.c3))) ISNULL) ASC  NULLS LAST, (((((('Ls+W') IS TRUE))AND((rt1.c3 IN ()))))OR((vt0.c0 IN (rt1.c2, rt1.c1))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((NULL)/(rt1.c0))) ORDER BY CASE CAST(rt1.c1 AS BLOB)  WHEN ((vt0.c0) BETWEEN (NULL) AND (rt1.c3)) THEN ((rt1.c1) NOTNULL) ELSE CASE WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c3 END END, ((((((((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))OR(vt0.c1)))AND(rt1.c3))) ISNULL) ASC  NULLS LAST, (((((('Ls+W') IS TRUE))AND((rt1.c3 IN ()))))OR((vt0.c0 IN (rt1.c2, rt1.c1))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (UPPER(DISTINCT (((vt0.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))) ORDER BY CAST(x'' AS NUMERIC) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (load_extension(((rt1.c2)=(rt1.c2)))) ORDER BY CAST(CAST(rt1.c1 AS TEXT) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((rt1.c2)==(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c1 AS TEXT) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (load_extension(((rt1.c2)=(rt1.c2)))) ORDER BY CAST(CAST(rt1.c1 AS TEXT) AS INTEGER) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((load_extension(((rt1.c2)==(rt1.c2)))) IS TRUE)  as count FROM rt1 ORDER BY CAST(CAST(rt1.c1 AS TEXT) AS INTEGER) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)AND(rt1.c2 COLLATE RTRIM)))OR((~ (rt1.c0))))) ORDER BY ((rt1.c3 IN (rt1.c3, rt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(rt1.c2 COLLATE RTRIM)))OR((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3 IN (rt1.c3, rt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)AND(rt1.c2 COLLATE RTRIM)))OR((~ (rt1.c0))))) ORDER BY ((rt1.c3 IN (rt1.c3, rt1.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)AND(rt1.c2 COLLATE RTRIM)))OR((~ (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c3 IN (rt1.c3, rt1.c0)) IN ())  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c1)AND(rt1.c2 COLLATE RTRIM)))OR((~ (rt1.c0))))) ORDER BY ((rt1.c3 IN (rt1.c3, rt1.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((LIKELY(DISTINCT vt0.c0)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(DISTINCT vt0.c0)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((LIKELY(DISTINCT vt0.c0)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((LIKELY(DISTINCT vt0.c0)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((LIKELY(DISTINCT vt0.c0)) IS FALSE)  NULLS LAST;
SELECT * FROM vt0, rt1 WHERE (CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 END AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 END AS REAL)) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (CAST(CASE WHEN rt1.c1 THEN rt1.c2 WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c2 THEN vt0.c1 WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c0 END AS REAL));
SELECT ALL * FROM vt0 WHERE ((((0.4846630004880441)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((vt0.c1)%(vt0.c1)))))) ORDER BY ((- ('-596908704')) IN ()), NULL  NULLS FIRST, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.4846630004880441)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((vt0.c1)%(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((- ('-596908704')) IN ()), NULL  NULLS FIRST, vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((0.4846630004880441)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((vt0.c1)%(vt0.c1)))))) ORDER BY ((- ('-596908704')) IN ()), NULL  NULLS FIRST, vt0.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((0.4846630004880441)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((vt0.c1)%(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((- ('-596908704')) IN ()), NULL  NULLS FIRST, vt0.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE ((((0.4846630004880441)) NOT BETWEEN ((((vt0.c1) IS FALSE))) AND ((((vt0.c1)%(vt0.c1)))))) ORDER BY ((- ('-596908704')) IN ()), NULL  NULLS FIRST, vt0.c1 ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)) AND (((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)) AND (((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0))))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)) AND (((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)) AND (((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0))))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1)) NOT BETWEEN ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 END)) AND (((((rt1.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c0)))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((+ (vt0.c0)))!=(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<>(vt0.c1))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((+ (vt0.c0)))!=(vt0.c1)));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c0)))<>(vt0.c1))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((+ (vt0.c0)))!=(vt0.c1)));
SELECT * FROM rt1, vt0 WHERE (((rt1.c3 COLLATE NOCASE)%((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE)%((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c3 COLLATE NOCASE)%((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c1))))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE)%((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((rt1.c3 COLLATE NOCASE)%((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((rt1.c1))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (LTRIM(CAST(vt0.c1 AS TEXT), (- (rt1.c1)))) ORDER BY (rt1.c2 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CAST(vt0.c1 AS TEXT), (- (rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (rt1.c2 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LTRIM(CAST(vt0.c1 AS TEXT), (- (rt1.c1)))) ORDER BY (rt1.c2 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((LTRIM(CAST(vt0.c1 AS TEXT), (- (rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (rt1.c2 COLLATE RTRIM IN ()) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LTRIM(CAST(vt0.c1 AS TEXT), (- (rt1.c1)))) ORDER BY (rt1.c2 COLLATE RTRIM IN ()) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (-152137899) ORDER BY (((vt0.c1) IS TRUE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-152137899) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c1) IS TRUE) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (-152137899) ORDER BY (((vt0.c1) IS TRUE) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-152137899) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c1) IS TRUE) IN ())  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (-152137899) ORDER BY (((vt0.c1) IS TRUE) IN ())  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((NULL)-(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((rt1.c3)LIKE('430186593'))))) ORDER BY ((((rt1.c1)IS NOT(rt1.c0)))IS NOT(((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)-(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((rt1.c3)LIKE('430186593'))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)IS NOT(rt1.c0)))IS NOT(((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((((((NULL)-(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((rt1.c3)LIKE('430186593'))))) ORDER BY ((((rt1.c1)IS NOT(rt1.c0)))IS NOT(((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((((((NULL)-(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((rt1.c3)LIKE('430186593'))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)IS NOT(rt1.c0)))IS NOT(((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((((((NULL)-(rt1.c0)))AND(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((rt1.c3)LIKE('430186593'))))) ORDER BY ((((rt1.c1)IS NOT(rt1.c0)))IS NOT(((((((((rt1.c3)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1))));
SELECT * FROM vt0 WHERE (((((vt0.c1)>(vt0.c0)))+((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(vt0.c0)))+((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)>(vt0.c0)))+((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1)>(vt0.c0)))+((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((((vt0.c1)>(vt0.c0)))+((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES()) ORDER BY (DATE(vt0.c1, x'', vt0.c1) IN (vt0.c0, (vt0.c0 IN (NULL, vt0.c1)))) ASC, ((vt0.c0)*(((('1044564918')) BETWEEN (('d[ +')) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY (DATE(vt0.c1, x'', vt0.c1) IN (vt0.c0, (vt0.c0 IN (NULL, vt0.c1)))) ASC, ((vt0.c0)*(((('1044564918')) BETWEEN (('d[ +')) AND ((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES()) ORDER BY (DATE(vt0.c1, x'', vt0.c1) IN (vt0.c0, (vt0.c0 IN (NULL, vt0.c1)))) ASC, ((vt0.c0)*(((('1044564918')) BETWEEN (('d[ +')) AND ((vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CHANGES()) IS TRUE)  as count FROM vt0 ORDER BY (DATE(vt0.c1, x'', vt0.c1) IN (vt0.c0, (vt0.c0 IN (NULL, vt0.c1)))) ASC, ((vt0.c0)*(((('1044564918')) BETWEEN (('d[ +')) AND ((vt0.c0))))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CHANGES()) ORDER BY (DATE(vt0.c1, x'', vt0.c1) IN (vt0.c0, (vt0.c0 IN (NULL, vt0.c1)))) ASC, ((vt0.c0)*(((('1044564918')) BETWEEN (('d[ +')) AND ((vt0.c0))))) DESC;
SELECT * FROM vt0 WHERE ((~ ((NULL IN ())))) ORDER BY ((((vt0.c0) ISNULL))OR(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))OR(((vt0.c0)<(vt0.c0)))));
SELECT * FROM vt0 WHERE ((~ ((NULL IN ())))) ORDER BY ((((vt0.c0) ISNULL))OR(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT (((~ ((NULL IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) ISNULL))OR(((vt0.c0)<(vt0.c0)))));
SELECT * FROM vt0 WHERE ((~ ((NULL IN ())))) ORDER BY ((((vt0.c0) ISNULL))OR(((vt0.c0)<(vt0.c0))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) NOT BETWEEN (0.046123744601955785) AND (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (0.046123744601955785) AND (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) NOT BETWEEN (0.046123744601955785) AND (rt1.c0))) ISNULL));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0) NOT BETWEEN (0.046123744601955785) AND (rt1.c0))) ISNULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c0) NOT BETWEEN (0.046123744601955785) AND (rt1.c0))) ISNULL));
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c2))))|(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS BLOB) ASC  NULLS LAST, rt1.c3  NULLS LAST, '1621241184' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c2, rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c2))))|(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c3 COLLATE NOCASE AS BLOB) ASC  NULLS LAST, rt1.c3  NULLS LAST, '1621241184' ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c2))))|(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS BLOB) ASC  NULLS LAST, rt1.c3  NULLS LAST, '1621241184' ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c1, rt1.c2, rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c2))))|(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c3 COLLATE NOCASE AS BLOB) ASC  NULLS LAST, rt1.c3  NULLS LAST, '1621241184' ASC);
SELECT ALL * FROM rt1 WHERE ((((((rt1.c1, rt1.c2, rt1.c0, rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c2, rt1.c0)) AND ((rt1.c1, rt1.c2, rt1.c2, rt1.c1, rt1.c2))))|(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 END))) ORDER BY CAST(rt1.c3 COLLATE NOCASE AS BLOB) ASC  NULLS LAST, rt1.c3  NULLS LAST, '1621241184' ASC;
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c1))) AS REAL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL) ASC);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c1))) AS REAL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ((CAST((((vt0.c0))<=((vt0.c1))) AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL) ASC);
SELECT ALL * FROM vt0 WHERE (CAST((((vt0.c0))<=((vt0.c1))) AS REAL)) ORDER BY CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL) ASC;
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c0)IS(rt1.c2))) AND (rt1.c0 COLLATE BINARY)) WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c0)>=(rt1.c2))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c0)>=(rt1.c2))) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c0)IS(rt1.c2))) AND (rt1.c0 COLLATE BINARY)) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c0)IS(rt1.c2))) AND (rt1.c0 COLLATE BINARY)) WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c0)>=(rt1.c2))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c0)>=(rt1.c2))) AND (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c0)IS(rt1.c2))) AND (rt1.c0 COLLATE BINARY)) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST);
SELECT * FROM rt1 FULL OUTER JOIN vt0 ON ((vt0.c0 COLLATE NOCASE) BETWEEN (((rt1.c0)IS(rt1.c2))) AND (rt1.c0 COLLATE BINARY)) WHERE (((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN (((rt1.c0)>=(rt1.c2))) AND (rt1.c0 COLLATE NOCASE))) ORDER BY ((vt0.c0) ISNULL) COLLATE NOCASE ASC  NULLS FIRST;
SELECT * FROM vt0 WHERE ('4ۑ!') ORDER BY vt0.c0 ASC  NULLS FIRST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB) ASC, TYPEOF(DISTINCT vt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('4ۑ!') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB) ASC, TYPEOF(DISTINCT vt0.c1)  NULLS LAST);
SELECT * FROM vt0 WHERE ('4ۑ!') ORDER BY vt0.c0 ASC  NULLS FIRST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB) ASC, TYPEOF(DISTINCT vt0.c1)  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('4ۑ!') IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 ASC  NULLS FIRST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB) ASC, TYPEOF(DISTINCT vt0.c1)  NULLS LAST);
SELECT * FROM vt0 WHERE ('4ۑ!') ORDER BY vt0.c0 ASC  NULLS FIRST, CAST(UPPER(DISTINCT vt0.c0) AS BLOB) ASC, TYPEOF(DISTINCT vt0.c1)  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS REAL) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(vt0.c1 AS REAL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT (((- (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((- (CAST(rt1.c2 AS BLOB))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON 'SK' WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON 'SK');
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON 'SK' WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON 'SK');
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON 'SK' WHERE (rt1.c0);
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC, (~ (TYPEOF(NULL)))  NULLS LAST, CAST(UNICODE(vt0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC, (~ (TYPEOF(NULL)))  NULLS LAST, CAST(UNICODE(vt0.c0) AS REAL));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC, (~ (TYPEOF(NULL)))  NULLS LAST, CAST(UNICODE(vt0.c0) AS REAL);
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC, (~ (TYPEOF(NULL)))  NULLS LAST, CAST(UNICODE(vt0.c0) AS REAL));
SELECT * FROM vt0 WHERE (CAST(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS BLOB)) ORDER BY (+ (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) ASC, (~ (TYPEOF(NULL)))  NULLS LAST, CAST(UNICODE(vt0.c0) AS REAL);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END) ORDER BY (+ (((vt0.c1)/(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1)/(NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END) ORDER BY (+ (((vt0.c1)/(NULL)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (+ (((vt0.c1)/(NULL)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (CASE WHEN (vt0.c0 IN (vt0.c1)) THEN CAST(vt0.c0 AS NUMERIC) WHEN vt0.c0 COLLATE NOCASE THEN ((((((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) END) ORDER BY (+ (((vt0.c1)/(NULL)))) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ((~ (879713315))) ORDER BY (((((rt1.c0)<=(rt1.c0))))<((((rt1.c1)|(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (879713315))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)<=(rt1.c0))))<((((rt1.c1)|(rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE ((~ (879713315))) ORDER BY (((((rt1.c0)<=(rt1.c0))))<((((rt1.c1)|(rt1.c1))))) ASC;
SELECT SUM(count) FROM (SELECT (((~ (879713315))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c0)<=(rt1.c0))))<((((rt1.c1)|(rt1.c1))))) ASC);
SELECT * FROM rt1 WHERE ((~ (879713315))) ORDER BY (((((rt1.c0)<=(rt1.c0))))<((((rt1.c1)|(rt1.c1))))) ASC;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((load_extension(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((load_extension(vt0.c0)) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((load_extension(vt0.c0)) IS FALSE)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))OR(((vt0.c0) NOTNULL)))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))));
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))OR(((vt0.c0) NOTNULL)))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT vt0.c0))OR(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))));
SELECT * FROM vt0 WHERE (((HEX(DISTINCT vt0.c0))OR(((vt0.c0) NOTNULL)))) ORDER BY TRIM(DISTINCT ((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE ((0.15785452846708248 IN ())) ORDER BY (NOT (((vt0.c1)>=(vt0.c0)))), (((((vt0.c0))<((vt0.c1)))) NOTNULL)  NULLS LAST, (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL (((0.15785452846708248 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)>=(vt0.c0)))), (((((vt0.c0))<((vt0.c1)))) NOTNULL)  NULLS LAST, (x'' IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((0.15785452846708248 IN ())) ORDER BY (NOT (((vt0.c1)>=(vt0.c0)))), (((((vt0.c0))<((vt0.c1)))) NOTNULL)  NULLS LAST, (x'' IN ());
SELECT SUM(count) FROM (SELECT ALL (((0.15785452846708248 IN ())) IS TRUE)  as count FROM vt0 ORDER BY (NOT (((vt0.c1)>=(vt0.c0)))), (((((vt0.c0))<((vt0.c1)))) NOTNULL)  NULLS LAST, (x'' IN ()));
SELECT COUNT(*) FROM vt0 WHERE ((0.15785452846708248 IN ())) ORDER BY (NOT (((vt0.c1)>=(vt0.c0)))), (((((vt0.c0))<((vt0.c1)))) NOTNULL)  NULLS LAST, (x'' IN ());
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ABS(rt1.c0) THEN ((((((((0.15785452846708248)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)) ELSE ((rt1.c3) ISNULL) END) ORDER BY json_array_length((rt1.c2 IN ())) DESC  NULLS LAST, ((((rt1.c1))=((rt1.c1))) IN ((+ (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(rt1.c0) THEN ((((((((0.15785452846708248)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)) ELSE ((rt1.c3) ISNULL) END) IS TRUE)  as count FROM rt1 ORDER BY json_array_length((rt1.c2 IN ())) DESC  NULLS LAST, ((((rt1.c1))=((rt1.c1))) IN ((+ (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ABS(rt1.c0) THEN ((((((((0.15785452846708248)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)) ELSE ((rt1.c3) ISNULL) END) ORDER BY json_array_length((rt1.c2 IN ())) DESC  NULLS LAST, ((((rt1.c1))=((rt1.c1))) IN ((+ (rt1.c2)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(rt1.c0) THEN ((((((((0.15785452846708248)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)) ELSE ((rt1.c3) ISNULL) END) IS TRUE)  as count FROM rt1 ORDER BY json_array_length((rt1.c2 IN ())) DESC  NULLS LAST, ((((rt1.c1))=((rt1.c1))) IN ((+ (rt1.c2)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE WHEN ABS(rt1.c0) THEN ((((((((0.15785452846708248)AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2)))AND(rt1.c3)) ELSE ((rt1.c3) ISNULL) END) ORDER BY json_array_length((rt1.c2 IN ())) DESC  NULLS LAST, ((((rt1.c1))=((rt1.c1))) IN ((+ (rt1.c2)))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND ('-2093633246'))))) ORDER BY ((((vt0.c1) NOT BETWEEN (rt1.c0) AND (NULL)))||((rt1.c2 IN ()))) DESC  NULLS LAST, x'ac0f' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND ('-2093633246'))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c1) NOT BETWEEN (rt1.c0) AND (NULL)))||((rt1.c2 IN ()))) DESC  NULLS LAST, x'ac0f' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND ('-2093633246'))))) ORDER BY ((((vt0.c1) NOT BETWEEN (rt1.c0) AND (NULL)))||((rt1.c2 IN ()))) DESC  NULLS LAST, x'ac0f' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND ('-2093633246'))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c1) NOT BETWEEN (rt1.c0) AND (NULL)))||((rt1.c2 IN ()))) DESC  NULLS LAST, x'ac0f' DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c1)))IS NOT(((rt1.c1) BETWEEN (rt1.c2) AND ('-2093633246'))))) ORDER BY ((((vt0.c1) NOT BETWEEN (rt1.c0) AND (NULL)))||((rt1.c2 IN ()))) DESC  NULLS LAST, x'ac0f' DESC  NULLS LAST;
SELECT * FROM rt1 INNER JOIN vt0 ON MAX(LAST_INSERT_ROWID(), LOWER(DISTINCT rt1.c2), ((vt0.c0)>=(rt1.c2)), CAST(rt1.c2 AS INTEGER)) WHERE ((NOT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY (+ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON MAX(LAST_INSERT_ROWID(), LOWER(DISTINCT rt1.c2), ((vt0.c0)>=(rt1.c2)), CAST(rt1.c2 AS INTEGER)) ORDER BY (+ (x'')) ASC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON MAX(LAST_INSERT_ROWID(), LOWER(DISTINCT rt1.c2), ((vt0.c0)>=(rt1.c2)), CAST(rt1.c2 AS INTEGER)) WHERE ((NOT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY (+ (x'')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON MAX(LAST_INSERT_ROWID(), LOWER(DISTINCT rt1.c2), ((vt0.c0)>=(rt1.c2)), CAST(rt1.c2 AS INTEGER)) ORDER BY (+ (x'')) ASC  NULLS FIRST);
SELECT * FROM rt1 INNER JOIN vt0 ON MAX(LAST_INSERT_ROWID(), LOWER(DISTINCT rt1.c2), ((vt0.c0)>=(rt1.c2)), CAST(rt1.c2 AS INTEGER)) WHERE ((NOT (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c2))))) ORDER BY (+ (x'')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) ORDER BY (vt0.c1 IN (0x2b1e13d0)) COLLATE RTRIM DESC  NULLS FIRST, (NULL IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN (0x2b1e13d0)) COLLATE RTRIM DESC  NULLS FIRST, (NULL IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) ORDER BY (vt0.c1 IN (0x2b1e13d0)) COLLATE RTRIM DESC  NULLS FIRST, (NULL IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c1 IN (0x2b1e13d0)) COLLATE RTRIM DESC  NULLS FIRST, (NULL IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)<>(vt0.c1)) COLLATE NOCASE) ORDER BY (vt0.c1 IN (0x2b1e13d0)) COLLATE RTRIM DESC  NULLS FIRST, (NULL IN (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((('52HF?Hl4') NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) WHERE (json((- (x'1ed8'))));
SELECT SUM(count) FROM (SELECT ALL ((json((- (x'1ed8')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((('52HF?Hl4') NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((('52HF?Hl4') NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) WHERE (json((- (x'1ed8'))));
SELECT SUM(count) FROM (SELECT ALL ((json((- (x'1ed8')))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((('52HF?Hl4') NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON (((('52HF?Hl4') NOT BETWEEN (rt1.c2) AND (rt1.c0))) NOTNULL) WHERE (json((- (x'1ed8'))));
SELECT * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) AND ((CASE rt1.c0  WHEN rt1.c0 THEN '0.12388768513169057' END)))) ORDER BY (((rt1.c2 IN (rt1.c0, rt1.c3)))AND(((((rt1.c3)OR(0.09710381792102907)))AND(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) AND ((CASE rt1.c0  WHEN rt1.c0 THEN '0.12388768513169057' END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN (rt1.c0, rt1.c3)))AND(((((rt1.c3)OR(0.09710381792102907)))AND(rt1.c0)))) DESC);
SELECT * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) AND ((CASE rt1.c0  WHEN rt1.c0 THEN '0.12388768513169057' END)))) ORDER BY (((rt1.c2 IN (rt1.c0, rt1.c3)))AND(((((rt1.c3)OR(0.09710381792102907)))AND(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) AND ((CASE rt1.c0  WHEN rt1.c0 THEN '0.12388768513169057' END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2 IN (rt1.c0, rt1.c3)))AND(((((rt1.c3)OR(0.09710381792102907)))AND(rt1.c0)))) DESC);
SELECT * FROM rt1 WHERE ((((rt1.c0)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c0)))) AND ((CASE rt1.c0  WHEN rt1.c0 THEN '0.12388768513169057' END)))) ORDER BY (((rt1.c2 IN (rt1.c0, rt1.c3)))AND(((((rt1.c3)OR(0.09710381792102907)))AND(rt1.c0)))) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2) ORDER BY ((((rt1.c1)IS NOT(vt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1)IS NOT(vt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2) ORDER BY ((((rt1.c1)IS NOT(vt0.c1))) IS FALSE) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c2) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((rt1.c1)IS NOT(vt0.c1))) IS FALSE) DESC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c2) ORDER BY ((((rt1.c1)IS NOT(vt0.c1))) IS FALSE) DESC;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (((rt1.c1) IS TRUE)))) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c1)))) BETWEEN ((rt1.c2 IN ())) AND ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c1)))) BETWEEN ((rt1.c2 IN ())) AND ((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (((rt1.c1) IS TRUE)))) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c1)))) BETWEEN ((rt1.c2 IN ())) AND ((rt1.c1 IN ())));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c1) IS TRUE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c1)))) BETWEEN ((rt1.c2 IN ())) AND ((rt1.c1 IN ()))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((+ (((rt1.c1) IS TRUE)))) ORDER BY (((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((vt0.c1)))) BETWEEN ((rt1.c2 IN ())) AND ((rt1.c1 IN ())));
SELECT * FROM vt0 WHERE ('1624459715') ORDER BY 1.416826225E9 DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))&(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1624459715') IS TRUE)  as count FROM vt0 ORDER BY 1.416826225E9 DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))&(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE ('1624459715') ORDER BY 1.416826225E9 DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))&(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('1624459715') IS TRUE)  as count FROM vt0 ORDER BY 1.416826225E9 DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))&(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST);
SELECT * FROM vt0 WHERE ('1624459715') ORDER BY 1.416826225E9 DESC  NULLS LAST, ((CAST(vt0.c0 AS REAL))&(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))), (CASE WHEN vt0.c0 THEN vt0.c0 END IN ())  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(SQLITE_VERSION())))OR('-1478394460')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(SQLITE_VERSION())))OR('-1478394460'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(SQLITE_VERSION())))OR('-1478394460')));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0 IN ()))OR(SQLITE_VERSION())))OR('-1478394460'))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0 IN ()))OR(SQLITE_VERSION())))OR('-1478394460')));
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c1))) NOTNULL)) ORDER BY rt1.c3 ASC, '80579696' ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 ASC, '80579696' ASC);
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c1))) NOTNULL)) ORDER BY rt1.c3 ASC, '80579696' ASC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c1))) NOTNULL)) IS TRUE)  as count FROM rt1 ORDER BY rt1.c3 ASC, '80579696' ASC);
SELECT * FROM rt1 WHERE (((((((((((rt1.c0)AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c3)))AND(rt1.c1))) NOTNULL)) ORDER BY rt1.c3 ASC, '80579696' ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE NOCASE) ORDER BY CASE (vt0.c1 IN ())  WHEN (NOT (0.046123744601955785)) THEN CAST('1864412415' AS BLOB) ELSE ((vt0.c0)IS(x'75ea')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN (NOT (0.046123744601955785)) THEN CAST('1864412415' AS BLOB) ELSE ((vt0.c0)IS(x'75ea')) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE NOCASE) ORDER BY CASE (vt0.c1 IN ())  WHEN (NOT (0.046123744601955785)) THEN CAST('1864412415' AS BLOB) ELSE ((vt0.c0)IS(x'75ea')) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0)%(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN (NOT (0.046123744601955785)) THEN CAST('1864412415' AS BLOB) ELSE ((vt0.c0)IS(x'75ea')) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0)%(vt0.c0)) COLLATE NOCASE) ORDER BY CASE (vt0.c1 IN ())  WHEN (NOT (0.046123744601955785)) THEN CAST('1864412415' AS BLOB) ELSE ((vt0.c0)IS(x'75ea')) END  NULLS LAST;
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c1 AS INTEGER)) IS TRUE)  as count FROM vt0 ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS LAST);
SELECT * FROM vt0 WHERE (CAST(vt0.c1 AS INTEGER)) ORDER BY CAST((~ (vt0.c0)) AS NUMERIC)  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (TYPEOF(CAST(rt1.c1 AS BLOB))) ORDER BY 0.6982164689161463 DESC  NULLS LAST, ((((rt1.c3)AND(rt1.c3)))<<((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND (('879713315')))))  NULLS LAST, (((rt1.c2 COLLATE RTRIM, ((((((((x'3286')OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)), TRIM(DISTINCT rt1.c1)))<((x'', ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), TRIM(rt1.c3, rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(rt1.c1 AS BLOB))) IS TRUE)  as count FROM rt1 ORDER BY 0.6982164689161463 DESC  NULLS LAST, ((((rt1.c3)AND(rt1.c3)))<<((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND (('879713315')))))  NULLS LAST, (((rt1.c2 COLLATE RTRIM, ((((((((x'3286')OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)), TRIM(DISTINCT rt1.c1)))<((x'', ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), TRIM(rt1.c3, rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (TYPEOF(CAST(rt1.c1 AS BLOB))) ORDER BY 0.6982164689161463 DESC  NULLS LAST, ((((rt1.c3)AND(rt1.c3)))<<((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND (('879713315')))))  NULLS LAST, (((rt1.c2 COLLATE RTRIM, ((((((((x'3286')OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)), TRIM(DISTINCT rt1.c1)))<((x'', ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), TRIM(rt1.c3, rt1.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((TYPEOF(CAST(rt1.c1 AS BLOB))) IS TRUE)  as count FROM rt1 ORDER BY 0.6982164689161463 DESC  NULLS LAST, ((((rt1.c3)AND(rt1.c3)))<<((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND (('879713315')))))  NULLS LAST, (((rt1.c2 COLLATE RTRIM, ((((((((x'3286')OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)), TRIM(DISTINCT rt1.c1)))<((x'', ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), TRIM(rt1.c3, rt1.c1))))  NULLS LAST);
SELECT ALL * FROM rt1 WHERE (TYPEOF(CAST(rt1.c1 AS BLOB))) ORDER BY 0.6982164689161463 DESC  NULLS LAST, ((((rt1.c3)AND(rt1.c3)))<<((((rt1.c3)) NOT BETWEEN ((rt1.c2)) AND (('879713315')))))  NULLS LAST, (((rt1.c2 COLLATE RTRIM, ((((((((x'3286')OR(rt1.c1)))OR(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)), TRIM(DISTINCT rt1.c1)))<((x'', ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), TRIM(rt1.c3, rt1.c1))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((CASE WHEN 0.4024500504042474 THEN rt1.c3 END)))) ORDER BY (((rt1.c0 IN ())) NOT BETWEEN (ABS(rt1.c0)) AND (((rt1.c3)IS NOT(rt1.c3)))) DESC, (~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((CASE WHEN 0.4024500504042474 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ())) NOT BETWEEN (ABS(rt1.c0)) AND (((rt1.c3)IS NOT(rt1.c3)))) DESC, (~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((CASE WHEN 0.4024500504042474 THEN rt1.c3 END)))) ORDER BY (((rt1.c0 IN ())) NOT BETWEEN (ABS(rt1.c0)) AND (((rt1.c3)IS NOT(rt1.c3)))) DESC, (~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((CASE WHEN 0.4024500504042474 THEN rt1.c3 END)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN ())) NOT BETWEEN (ABS(rt1.c0)) AND (((rt1.c3)IS NOT(rt1.c3)))) DESC, (~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)))) DESC  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((CASE WHEN 0.4024500504042474 THEN rt1.c3 END)))) ORDER BY (((rt1.c0 IN ())) NOT BETWEEN (ABS(rt1.c0)) AND (((rt1.c3)IS NOT(rt1.c3)))) DESC, (~ (((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c3)))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS('0.5748103520803579'))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS('0.5748103520803579'))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS('0.5748103520803579'))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)IS('0.5748103520803579'))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c1)IS('0.5748103520803579'))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((((vt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c1))))))OR(IFNULL(rt1.c1, rt1.c0))))OR(((x'')!=(vt0.c0)))))OR(0.629226695968074))) ORDER BY (('') NOT BETWEEN (((rt1.c3)!=(vt0.c0))) AND ((NOT (0.6251373759800115)))) DESC, rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c1))))))OR(IFNULL(rt1.c1, rt1.c0))))OR(((x'')<>(vt0.c0)))))OR(0.629226695968074))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('') NOT BETWEEN (((rt1.c3)<>(vt0.c0))) AND ((NOT (0.6251373759800115)))) DESC, rt1.c3 DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((((vt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c1))))))OR(IFNULL(rt1.c1, rt1.c0))))OR(((x'')!=(vt0.c0)))))OR(0.629226695968074))) ORDER BY (('') NOT BETWEEN (((rt1.c3)!=(vt0.c0))) AND ((NOT (0.6251373759800115)))) DESC, rt1.c3 DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((vt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c1))))))OR(IFNULL(rt1.c1, rt1.c0))))OR(((x'')<>(vt0.c0)))))OR(0.629226695968074))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (('') NOT BETWEEN (((rt1.c3)<>(vt0.c0))) AND ((NOT (0.6251373759800115)))) DESC, rt1.c3 DESC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((((((vt0.c1) NOT BETWEEN (rt1.c0) AND (rt1.c2)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c1))))))OR(IFNULL(rt1.c1, rt1.c0))))OR(((x'')!=(vt0.c0)))))OR(0.629226695968074))) ORDER BY (('') NOT BETWEEN (((rt1.c3)!=(vt0.c0))) AND ((NOT (0.6251373759800115)))) DESC, rt1.c3 DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((('|bA')&(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('|bA')&(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((('|bA')&(vt0.c1))) ISNULL));
SELECT SUM(count) FROM (SELECT ALL (((((('|bA')&(vt0.c1))) ISNULL)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((('|bA')&(vt0.c1))) ISNULL));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((('0.45321738494580466')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c0) IS TRUE))))AND(0.5331322299073697 COLLATE RTRIM)))OR(((rt1.c2)%(0.8138442232412197)))))AND((((rt1.c0))<=((rt1.c3)))))) ORDER BY CASE vt0.c0  WHEN (- (vt0.c0)) THEN ((rt1.c3)>(rt1.c1)) END, rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('0.45321738494580466')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c0) IS TRUE))))AND(0.5331322299073697 COLLATE RTRIM)))OR(((rt1.c2)%(0.8138442232412197)))))AND((((rt1.c0))<=((rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE vt0.c0  WHEN (- (vt0.c0)) THEN ((rt1.c3)>(rt1.c1)) END, rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((('0.45321738494580466')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c0) IS TRUE))))AND(0.5331322299073697 COLLATE RTRIM)))OR(((rt1.c2)%(0.8138442232412197)))))AND((((rt1.c0))<=((rt1.c3)))))) ORDER BY CASE vt0.c0  WHEN (- (vt0.c0)) THEN ((rt1.c3)>(rt1.c1)) END, rt1.c3  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((('0.45321738494580466')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c0) IS TRUE))))AND(0.5331322299073697 COLLATE RTRIM)))OR(((rt1.c2)%(0.8138442232412197)))))AND((((rt1.c0))<=((rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE vt0.c0  WHEN (- (vt0.c0)) THEN ((rt1.c3)>(rt1.c1)) END, rt1.c3  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((((((('0.45321738494580466')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))AND(((vt0.c0) IS TRUE))))AND(0.5331322299073697 COLLATE RTRIM)))OR(((rt1.c2)%(0.8138442232412197)))))AND((((rt1.c0))<=((rt1.c3)))))) ORDER BY CASE vt0.c0  WHEN (- (vt0.c0)) THEN ((rt1.c3)>(rt1.c1)) END, rt1.c3  NULLS LAST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (8.0579696E7);
SELECT SUM(count) FROM (SELECT ((8.0579696E7) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (8.0579696E7);
SELECT SUM(count) FROM (SELECT ((8.0579696E7) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (8.0579696E7);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(x'' AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(x'' AS BLOB)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(x'' AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNICODE(vt0.c1)) NOT BETWEEN (vt0.c1) AND ((((0.9438832752241003)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt0.c1)) NOT BETWEEN (vt0.c1) AND ((((0.9438832752241003)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNICODE(vt0.c1)) NOT BETWEEN (vt0.c1) AND ((((0.9438832752241003)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((UNICODE(vt0.c1)) NOT BETWEEN (vt0.c1) AND ((((0.9438832752241003)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((UNICODE(vt0.c1)) NOT BETWEEN (vt0.c1) AND ((((0.9438832752241003)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))));
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((+ (rt1.c1)))) AND ((rt1.c0 COLLATE RTRIM))) WHERE (TRIM(DISTINCT ((rt1.c2) NOT BETWEEN ('gSjU') AND (vt0.c1)), rt1.c0 COLLATE RTRIM)) ORDER BY ((((((((((((((vt0.c1)AND(rt1.c1)))OR(0.4846630004880441)))OR(vt0.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((rt1.c2 IN (rt1.c0, vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c2) NOT BETWEEN ('gSjU') AND (vt0.c1)), rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((+ (rt1.c1)))) AND ((rt1.c0 COLLATE RTRIM))) ORDER BY ((((((((((((((vt0.c1)AND(rt1.c1)))OR(0.4846630004880441)))OR(vt0.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((rt1.c2 IN (rt1.c0, vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((+ (rt1.c1)))) AND ((rt1.c0 COLLATE RTRIM))) WHERE (TRIM(DISTINCT ((rt1.c2) NOT BETWEEN ('gSjU') AND (vt0.c1)), rt1.c0 COLLATE RTRIM)) ORDER BY ((((((((((((((vt0.c1)AND(rt1.c1)))OR(0.4846630004880441)))OR(vt0.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((rt1.c2 IN (rt1.c0, vt0.c1)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((TRIM(DISTINCT ((rt1.c2) NOT BETWEEN ('gSjU') AND (vt0.c1)), rt1.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((+ (rt1.c1)))) AND ((rt1.c0 COLLATE RTRIM))) ORDER BY ((((((((((((((vt0.c1)AND(rt1.c1)))OR(0.4846630004880441)))OR(vt0.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((rt1.c2 IN (rt1.c0, vt0.c1)))) DESC);
SELECT ALL COUNT(*) FROM vt0 INNER JOIN rt1 ON (((rt1.c0)) NOT BETWEEN (((+ (rt1.c1)))) AND ((rt1.c0 COLLATE RTRIM))) WHERE (TRIM(DISTINCT ((rt1.c2) NOT BETWEEN ('gSjU') AND (vt0.c1)), rt1.c0 COLLATE RTRIM)) ORDER BY ((((((((((((((vt0.c1)AND(rt1.c1)))OR(0.4846630004880441)))OR(vt0.c1)))AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c1))) NOT BETWEEN (CASE WHEN rt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND ((rt1.c2 IN (rt1.c0, vt0.c1)))) DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt1.c3 THEN rt1.c2 ELSE vt0.c1 END IN ()) WHERE (((((x'') NOT NULL))!=(((((((((vt0.c1)OR(0x90d9bbb)))OR(vt0.c0)))OR(vt0.c1)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT NULL))!=(((((((((vt0.c1)OR(0x90d9bbb)))OR(vt0.c0)))OR(vt0.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt1.c3 THEN rt1.c2 ELSE vt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt1.c3 THEN rt1.c2 ELSE vt0.c1 END IN ()) WHERE (((((x'') NOT NULL))!=(((((((((vt0.c1)OR(0x90d9bbb)))OR(vt0.c0)))OR(vt0.c1)))AND(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((((x'') NOT NULL))!=(((((((((vt0.c1)OR(0x90d9bbb)))OR(vt0.c0)))OR(vt0.c1)))AND(rt1.c1))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt1.c3 THEN rt1.c2 ELSE vt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (CASE WHEN rt1.c3 THEN rt1.c2 ELSE vt0.c1 END IN ()) WHERE (((((x'') NOT NULL))!=(((((((((vt0.c1)OR(0x90d9bbb)))OR(vt0.c0)))OR(vt0.c1)))AND(rt1.c1)))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((TRIM(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((TRIM(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((TRIM(vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((TRIM(vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1)) NOT BETWEEN ((((vt0.c0) IS FALSE))) AND ((TRIM(vt0.c0, vt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c3)<>(rt1.c1)) THEN ((rt1.c2)<<(rt1.c3)) WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) WHEN NULLIF(DISTINCT rt1.c0, rt1.c2) THEN ((rt1.c0)|(rt1.c3)) ELSE (rt1.c1 IN ()) END) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN 0.508918379443361 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1))) AND (LIKELY(DISTINCT rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3)<>(rt1.c1)) THEN ((rt1.c2)<<(rt1.c3)) WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) WHEN NULLIF(DISTINCT rt1.c0, rt1.c2) THEN ((rt1.c0)|(rt1.c3)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN 0.508918379443361 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1))) AND (LIKELY(DISTINCT rt1.c2)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c3)<>(rt1.c1)) THEN ((rt1.c2)<<(rt1.c3)) WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) WHEN NULLIF(DISTINCT rt1.c0, rt1.c2) THEN ((rt1.c0)|(rt1.c3)) ELSE (rt1.c1 IN ()) END) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN 0.508918379443361 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1))) AND (LIKELY(DISTINCT rt1.c2)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((rt1.c3)<>(rt1.c1)) THEN ((rt1.c2)<<(rt1.c3)) WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) WHEN NULLIF(DISTINCT rt1.c0, rt1.c2) THEN ((rt1.c0)|(rt1.c3)) ELSE (rt1.c1 IN ()) END) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN 0.508918379443361 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1))) AND (LIKELY(DISTINCT rt1.c2)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN ((rt1.c3)<>(rt1.c1)) THEN ((rt1.c2)<<(rt1.c3)) WHEN ((rt1.c3)LIKE(rt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c0)) WHEN NULLIF(DISTINCT rt1.c0, rt1.c2) THEN ((rt1.c0)|(rt1.c3)) ELSE (rt1.c1 IN ()) END) ORDER BY ((CASE rt1.c0  WHEN rt1.c1 THEN 0.508918379443361 END) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c1))) AND (LIKELY(DISTINCT rt1.c2)))  NULLS LAST;
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY vt0.c0);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY vt0.c0;
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((((((((vt0.c1)) BETWEEN ((rt1.c1)) AND ((vt0.c0))))AND(vt0.c1 COLLATE NOCASE)))AND(vt0.c1 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 COLLATE NOCASE) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1 COLLATE NOCASE) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c1)))/(((rt1.c2)<<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))/(((rt1.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c1)))/(((rt1.c2)<<(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((~ (rt1.c1)))/(((rt1.c2)<<(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((~ (rt1.c1)))/(((rt1.c2)<<(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 END)<>(IFNULL(DISTINCT rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 END)!=(IFNULL(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 END)<>(IFNULL(DISTINCT rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 END)!=(IFNULL(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 END)<>(IFNULL(DISTINCT rt1.c2, rt1.c0))));
SELECT * FROM vt0 INNER JOIN rt1 ON vt0.c0 WHERE (((((((NULL))>=((vt0.c0))), CAST(rt1.c1 AS REAL), CHAR(vt0.c1, vt0.c1, rt1.c1), rt1.c3, ((((((((((((vt0.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c3))))=((((rt1.c3)||(rt1.c0)), ((((rt1.c3)OR(rt1.c2)))AND(vt0.c0)), LIKELIHOOD(rt1.c2, 0.22678965693884579), (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c3, rt1.c3, vt0.c0))), x'')))) ORDER BY ((((((x'') IS FALSE))OR((+ (rt1.c3)))))OR((NOT (rt1.c0)))) ASC, (((((rt1.c3 IN ()))OR(vt0.c1 COLLATE RTRIM)))AND(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL))>=((vt0.c0))), CAST(rt1.c1 AS REAL), CHAR(vt0.c1, vt0.c1, rt1.c1), rt1.c3, ((((((((((((vt0.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c3))))=((((rt1.c3)||(rt1.c0)), ((((rt1.c3)OR(rt1.c2)))AND(vt0.c0)), LIKELIHOOD(rt1.c2, 0.22678965693884579), (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c3, rt1.c3, vt0.c0))), x'')))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON vt0.c0 ORDER BY ((((((x'') IS FALSE))OR((+ (rt1.c3)))))OR((NOT (rt1.c0)))) ASC, (((((rt1.c3 IN ()))OR(vt0.c1 COLLATE RTRIM)))AND(rt1.c2 COLLATE NOCASE)));
SELECT * FROM vt0 INNER JOIN rt1 ON vt0.c0 WHERE (((((((NULL))>=((vt0.c0))), CAST(rt1.c1 AS REAL), CHAR(vt0.c1, vt0.c1, rt1.c1), rt1.c3, ((((((((((((vt0.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c3))))=((((rt1.c3)||(rt1.c0)), ((((rt1.c3)OR(rt1.c2)))AND(vt0.c0)), LIKELIHOOD(rt1.c2, 0.22678965693884579), (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c3, rt1.c3, vt0.c0))), x'')))) ORDER BY ((((((x'') IS FALSE))OR((+ (rt1.c3)))))OR((NOT (rt1.c0)))) ASC, (((((rt1.c3 IN ()))OR(vt0.c1 COLLATE RTRIM)))AND(rt1.c2 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((((NULL))>=((vt0.c0))), CAST(rt1.c1 AS REAL), CHAR(vt0.c1, vt0.c1, rt1.c1), rt1.c3, ((((((((((((vt0.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c3))))=((((rt1.c3)||(rt1.c0)), ((((rt1.c3)OR(rt1.c2)))AND(vt0.c0)), LIKELIHOOD(rt1.c2, 0.22678965693884579), (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c3, rt1.c3, vt0.c0))), x'')))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON vt0.c0 ORDER BY ((((((x'') IS FALSE))OR((+ (rt1.c3)))))OR((NOT (rt1.c0)))) ASC, (((((rt1.c3 IN ()))OR(vt0.c1 COLLATE RTRIM)))AND(rt1.c2 COLLATE NOCASE)));
SELECT * FROM vt0 INNER JOIN rt1 ON vt0.c0 WHERE (((((((NULL))>=((vt0.c0))), CAST(rt1.c1 AS REAL), CHAR(vt0.c1, vt0.c1, rt1.c1), rt1.c3, ((((((((((((vt0.c1)AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c3))))=((((rt1.c3)||(rt1.c0)), ((((rt1.c3)OR(rt1.c2)))AND(vt0.c0)), LIKELIHOOD(rt1.c2, 0.22678965693884579), (((rt1.c3, rt1.c3, rt1.c1)) BETWEEN ((rt1.c3, rt1.c2, rt1.c1)) AND ((rt1.c3, rt1.c3, vt0.c0))), x'')))) ORDER BY ((((((x'') IS FALSE))OR((+ (rt1.c3)))))OR((NOT (rt1.c0)))) ASC, (((((rt1.c3 IN ()))OR(vt0.c1 COLLATE RTRIM)))AND(rt1.c2 COLLATE NOCASE));
SELECT ALL * FROM rt1 INNER JOIN vt0 ON NULL WHERE ((((~ (rt1.c0))) IS FALSE)) ORDER BY CASE ((rt1.c0)==(rt1.c3))  WHEN (rt1.c2 IN ()) THEN vt0.c1 END;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL ORDER BY CASE ((rt1.c0)==(rt1.c3))  WHEN (rt1.c2 IN ()) THEN vt0.c1 END);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON NULL WHERE ((((~ (rt1.c0))) IS FALSE)) ORDER BY CASE ((rt1.c0)==(rt1.c3))  WHEN (rt1.c2 IN ()) THEN vt0.c1 END;
SELECT SUM(count) FROM (SELECT (((((~ (rt1.c0))) IS FALSE)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON NULL ORDER BY CASE ((rt1.c0)==(rt1.c3))  WHEN (rt1.c2 IN ()) THEN vt0.c1 END);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON NULL WHERE ((((~ (rt1.c0))) IS FALSE)) ORDER BY CASE ((rt1.c0)==(rt1.c3))  WHEN (rt1.c2 IN ()) THEN vt0.c1 END;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 END AS INTEGER));
SELECT ALL * FROM rt1, vt0 WHERE (((((vt0.c1) NOT NULL))>>(x''))) ORDER BY CASE WHEN vt0.c1 COLLATE BINARY THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) WHEN json_extract(x'2951', vt0.c0) THEN UNLIKELY(rt1.c2) WHEN ((((((((rt1.c2)OR('')))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (vt0.c1) AND (rt1.c0)) ELSE ((vt0.c1)AND(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))>>(x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE BINARY THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) WHEN json_extract(x'2951', vt0.c0) THEN UNLIKELY(rt1.c2) WHEN ((((((((rt1.c2)OR('')))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (vt0.c1) AND (rt1.c0)) ELSE ((vt0.c1)AND(vt0.c1)) END  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((((vt0.c1) NOT NULL))>>(x''))) ORDER BY CASE WHEN vt0.c1 COLLATE BINARY THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) WHEN json_extract(x'2951', vt0.c0) THEN UNLIKELY(rt1.c2) WHEN ((((((((rt1.c2)OR('')))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (vt0.c1) AND (rt1.c0)) ELSE ((vt0.c1)AND(vt0.c1)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL))>>(x''))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN vt0.c1 COLLATE BINARY THEN (((rt1.c1)) BETWEEN ((rt1.c3)) AND ((rt1.c0))) WHEN json_extract(x'2951', vt0.c0) THEN UNLIKELY(rt1.c2) WHEN ((((((((rt1.c2)OR('')))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)) THEN ((rt1.c2) NOT BETWEEN (vt0.c1) AND (rt1.c0)) ELSE ((vt0.c1)AND(vt0.c1)) END  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0)<=(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0)<=(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((UPPER(vt0.c1)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END) AND (((vt0.c0)<=(vt0.c1)))));
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (rt1.c3);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((rt1.c0 IN ())) ISNULL) WHERE (CAST(((((rt1.c3)OR(NULL)))AND(vt0.c0)) AS TEXT)) ORDER BY (NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))  NULLS FIRST, ((((SUBSTR(rt1.c0, rt1.c2))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))OR((('|ba') NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(NULL)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((rt1.c0 IN ())) ISNULL) ORDER BY (NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))  NULLS FIRST, ((((SUBSTR(rt1.c0, rt1.c2))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))OR((('|ba') NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((rt1.c0 IN ())) ISNULL) WHERE (CAST(((((rt1.c3)OR(NULL)))AND(vt0.c0)) AS TEXT)) ORDER BY (NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))  NULLS FIRST, ((((SUBSTR(rt1.c0, rt1.c2))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))OR((('|ba') NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((rt1.c3)OR(NULL)))AND(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((rt1.c0 IN ())) ISNULL) ORDER BY (NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))  NULLS FIRST, ((((SUBSTR(rt1.c0, rt1.c2))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))OR((('|ba') NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((rt1.c0 IN ())) ISNULL) WHERE (CAST(((((rt1.c3)OR(NULL)))AND(vt0.c0)) AS TEXT)) ORDER BY (NOT (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 END))  NULLS FIRST, ((((SUBSTR(rt1.c0, rt1.c2))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c3)))))OR((('|ba') NOT BETWEEN (rt1.c3) AND (rt1.c2)))) DESC  NULLS LAST, rt1.c1 ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1577919574') ORDER BY x'';
SELECT SUM(count) FROM (SELECT (('-1577919574') IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1577919574') ORDER BY x'';
SELECT SUM(count) FROM (SELECT (('-1577919574') IS TRUE)  as count FROM rt1 ORDER BY x'');
SELECT ALL COUNT(*) FROM rt1 WHERE ('-1577919574') ORDER BY x'';
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0)&(0X48cbdf38)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(0X48cbdf38)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0)&(0X48cbdf38)) ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)&(0X48cbdf38)) ASC);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c1) ORDER BY ((vt0.c0)&(0X48cbdf38)) ASC;
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3)&(rt1.c3))  WHEN ((NULL)<=(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3) ISNULL) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) THEN (- (rt1.c1)) END) ORDER BY ((((((rt1.c0)<<(rt1.c0)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)&(rt1.c3))  WHEN ((NULL)<=(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3) ISNULL) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) THEN (- (rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c0)<<(rt1.c0)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c0))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3)&(rt1.c3))  WHEN ((NULL)<=(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3) ISNULL) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) THEN (- (rt1.c1)) END) ORDER BY ((((((rt1.c0)<<(rt1.c0)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c3)&(rt1.c3))  WHEN ((NULL)<=(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3) ISNULL) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) THEN (- (rt1.c1)) END) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c0)<<(rt1.c0)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c0))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CASE ((rt1.c3)&(rt1.c3))  WHEN ((NULL)<=(rt1.c2)) THEN rt1.c1 COLLATE BINARY WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3) ISNULL) WHEN ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) THEN (- (rt1.c1)) END) ORDER BY ((((((rt1.c0)<<(rt1.c0)))OR(rt1.c2 COLLATE BINARY)))OR(rt1.c0))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY CASE (vt0.c1 IN ())  WHEN HEX(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN HEX(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY CASE (vt0.c1 IN ())  WHEN HEX(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY CASE (vt0.c1 IN ())  WHEN HEX(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY CASE (vt0.c1 IN ())  WHEN HEX(DISTINCT vt0.c0) THEN vt0.c0 COLLATE BINARY END ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (0X346f5c23);
SELECT SUM(count) FROM (SELECT ((0X346f5c23) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (0X346f5c23);
SELECT SUM(count) FROM (SELECT ((0X346f5c23) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (0X346f5c23);
SELECT * FROM vt0, rt1 WHERE (-152137899);
SELECT SUM(count) FROM (SELECT ((-152137899) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (-152137899);
SELECT SUM(count) FROM (SELECT ((-152137899) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (-152137899);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c0)))) AND ((((0.17812018943690633)%(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c0)))) AND ((((0.17812018943690633)%(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c0)))) AND ((((0.17812018943690633)%(rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c0)))) AND ((((0.17812018943690633)%(rt1.c1)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2)) NOT BETWEEN ((((rt1.c1)%(rt1.c0)))) AND ((((0.17812018943690633)%(rt1.c1))))));
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '4.B	' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '4.B	' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '4.B	' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((- (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '4.B	' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((- (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN '4.B	' WHEN vt0.c1 THEN vt0.c0 WHEN x'' THEN vt0.c1 END) AND (((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)/(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)/(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)/(rt1.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)/(rt1.c0)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c0)/(rt1.c0)) COLLATE BINARY);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1 IN ()))>>(CAST(rt1.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>>(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1 IN ()))>>(CAST(rt1.c2 AS REAL))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1 IN ()))>>(CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((rt1.c1 IN ()))>>(CAST(rt1.c2 AS REAL))));
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (x'');
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c2 IN (NULL)))AND((((vt0.c0, vt0.c0, '985775660', rt1.c2, rt1.c1))<((rt1.c0, vt0.c0, rt1.c0, rt1.c3, vt0.c0))))))OR(NULL))) ORDER BY (((rt1.c3, vt0.c0, vt0.c1)) BETWEEN (((rt1.c2 IN ()), '-1413498391' COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND (((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c1))), rt1.c3, (x'' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2 IN (NULL)))AND((((vt0.c0, vt0.c0, '985775660', rt1.c2, rt1.c1))<((rt1.c0, vt0.c0, rt1.c0, rt1.c3, vt0.c0))))))OR(NULL))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c3, vt0.c0, vt0.c1)) BETWEEN (((rt1.c2 IN ()), '-1413498391' COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND (((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c1))), rt1.c3, (x'' IN ()))))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c2 IN (NULL)))AND((((vt0.c0, vt0.c0, '985775660', rt1.c2, rt1.c1))<((rt1.c0, vt0.c0, rt1.c0, rt1.c3, vt0.c0))))))OR(NULL))) ORDER BY (((rt1.c3, vt0.c0, vt0.c1)) BETWEEN (((rt1.c2 IN ()), '-1413498391' COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND (((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c1))), rt1.c3, (x'' IN ()))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c2 IN (NULL)))AND((((vt0.c0, vt0.c0, '985775660', rt1.c2, rt1.c1))<((rt1.c0, vt0.c0, rt1.c0, rt1.c3, vt0.c0))))))OR(NULL))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c3, vt0.c0, vt0.c1)) BETWEEN (((rt1.c2 IN ()), '-1413498391' COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND (((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c1))), rt1.c3, (x'' IN ()))))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((rt1.c2 IN (NULL)))AND((((vt0.c0, vt0.c0, '985775660', rt1.c2, rt1.c1))<((rt1.c0, vt0.c0, rt1.c0, rt1.c3, vt0.c0))))))OR(NULL))) ORDER BY (((rt1.c3, vt0.c0, vt0.c1)) BETWEEN (((rt1.c2 IN ()), '-1413498391' COLLATE NOCASE, CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) AND (((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((vt0.c1))), rt1.c3, (x'' IN ()))))  NULLS LAST;
SELECT * FROM rt1 WHERE ((- (((rt1.c0)&(rt1.c1))))) ORDER BY x'a1e5';
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)&(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY x'a1e5');
SELECT * FROM rt1 WHERE ((- (((rt1.c0)&(rt1.c1))))) ORDER BY x'a1e5';
SELECT SUM(count) FROM (SELECT (((- (((rt1.c0)&(rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY x'a1e5');
SELECT * FROM rt1 WHERE ((- (((rt1.c0)&(rt1.c1))))) ORDER BY x'a1e5';
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (vt0.c0))) ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c3)>(rt1.c1)) THEN (((rt1.c2, '0.508918379443361', vt0.c0)) BETWEEN ((rt1.c2, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c3, rt1.c1))) ELSE (((rt1.c0))>=((vt0.c0))) END  NULLS FIRST, (((x'290f' IN (rt1.c0, rt1.c2, rt1.c2)))&(((vt0.c1)OR(rt1.c1)))) ASC, (((((((((vt0.c1 IN ()))AND('92204047')))OR(TYPEOF(vt0.c0))))AND(x'6203')))OR(((rt1.c2)/(rt1.c1)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(rt1.c1, 0.09221035485047369)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c3)>(rt1.c1)) THEN (((rt1.c2, '0.508918379443361', vt0.c0)) BETWEEN ((rt1.c2, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c3, rt1.c1))) ELSE (((rt1.c0))>=((vt0.c0))) END  NULLS FIRST, (((x'290f' IN (rt1.c0, rt1.c2, rt1.c2)))&(((vt0.c1)OR(rt1.c1)))) ASC, (((((((((vt0.c1 IN ()))AND('92204047')))OR(TYPEOF(vt0.c0))))AND(x'6203')))OR(((rt1.c2)/(rt1.c1)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(rt1.c1, 0.09221035485047369))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (vt0.c0))) ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c3)>(rt1.c1)) THEN (((rt1.c2, '0.508918379443361', vt0.c0)) BETWEEN ((rt1.c2, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c3, rt1.c1))) ELSE (((rt1.c0))>=((vt0.c0))) END  NULLS FIRST, (((x'290f' IN (rt1.c0, rt1.c2, rt1.c2)))&(((vt0.c1)OR(rt1.c1)))) ASC, (((((((((vt0.c1 IN ()))AND('92204047')))OR(TYPEOF(vt0.c0))))AND(x'6203')))OR(((rt1.c2)/(rt1.c1)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(rt1.c1, 0.09221035485047369)));
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c3)>(rt1.c1)) THEN (((rt1.c2, '0.508918379443361', vt0.c0)) BETWEEN ((rt1.c2, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c3, rt1.c1))) ELSE (((rt1.c0))>=((vt0.c0))) END  NULLS FIRST, (((x'290f' IN (rt1.c0, rt1.c2, rt1.c2)))&(((vt0.c1)OR(rt1.c1)))) ASC, (((((((((vt0.c1 IN ()))AND('92204047')))OR(TYPEOF(vt0.c0))))AND(x'6203')))OR(((rt1.c2)/(rt1.c1)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(rt1.c1, 0.09221035485047369))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((~ (vt0.c0))) ORDER BY CASE rt1.c3 COLLATE BINARY  WHEN ((rt1.c3)>(rt1.c1)) THEN (((rt1.c2, '0.508918379443361', vt0.c0)) BETWEEN ((rt1.c2, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c3, rt1.c1))) ELSE (((rt1.c0))>=((vt0.c0))) END  NULLS FIRST, (((x'290f' IN (rt1.c0, rt1.c2, rt1.c2)))&(((vt0.c1)OR(rt1.c1)))) ASC, (((((((((vt0.c1 IN ()))AND('92204047')))OR(TYPEOF(vt0.c0))))AND(x'6203')))OR(((rt1.c2)/(rt1.c1)))) ASC  NULLS FIRST, (NOT (LIKELIHOOD(rt1.c1, 0.09221035485047369)));
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((NOT (vt0.c0 COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY vt0.c1 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY vt0.c1 COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1 COLLATE BINARY ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0))) IS FALSE)) ORDER BY vt0.c1 COLLATE BINARY ASC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c2) NOT NULL))) AND ((rt1.c0 COLLATE NOCASE)))) ORDER BY (((rt1.c0) NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((rt1.c2) NOT NULL))) AND ((rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c2) NOT NULL))) AND ((rt1.c0 COLLATE NOCASE)))) ORDER BY (((rt1.c0) NOT NULL) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((((rt1.c2) NOT NULL))) AND ((rt1.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0) NOT NULL) IN ()));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((((rt1.c2) NOT NULL))) AND ((rt1.c0 COLLATE NOCASE)))) ORDER BY (((rt1.c0) NOT NULL) IN ());
SELECT ALL * FROM rt1, vt0 WHERE ((((CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c0 THEN vt0.c0 END))<=(((NOT (0.24479967860401952)))))) ORDER BY NULL, (((((~ (vt0.c0)))OR((vt0.c1 IN ()))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c0 THEN vt0.c0 END))<=(((NOT (0.24479967860401952)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULL, (((((~ (vt0.c0)))OR((vt0.c1 IN ()))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c0 THEN vt0.c0 END))<=(((NOT (0.24479967860401952)))))) ORDER BY NULL, (((((~ (vt0.c0)))OR((vt0.c1 IN ()))))AND(vt0.c0))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c0 THEN vt0.c0 END))<=(((NOT (0.24479967860401952)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULL, (((((~ (vt0.c0)))OR((vt0.c1 IN ()))))AND(vt0.c0))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((CASE rt1.c3  WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c0 THEN vt0.c0 END))<=(((NOT (0.24479967860401952)))))) ORDER BY NULL, (((((~ (vt0.c0)))OR((vt0.c1 IN ()))))AND(vt0.c0))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) IN ())) ORDER BY CAST(((((0.1909137715697018)AND(rt1.c3)))OR(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY CAST(((((0.1909137715697018)AND(rt1.c3)))OR(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) IN ())) ORDER BY CAST(((((0.1909137715697018)AND(rt1.c3)))OR(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) IN ())) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY CAST(((((0.1909137715697018)AND(rt1.c3)))OR(vt0.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))OR(rt1.c2)))OR(rt1.c0)) IN ())) ORDER BY CAST(((((0.1909137715697018)AND(rt1.c3)))OR(vt0.c0)) AS REAL)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (('295176151') ISNULL) WHERE (((((((vt0.c0)*(vt0.c1)))AND((~ (rt1.c3)))))AND((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)*(vt0.c1)))AND((~ (rt1.c3)))))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (('295176151') ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (('295176151') ISNULL) WHERE (((((((vt0.c0)*(vt0.c1)))AND((~ (rt1.c3)))))AND((rt1.c1 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)*(vt0.c1)))AND((~ (rt1.c3)))))AND((rt1.c1 IN ())))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON (('295176151') ISNULL));
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON (('295176151') ISNULL) WHERE (((((((vt0.c0)*(vt0.c1)))AND((~ (rt1.c3)))))AND((rt1.c1 IN ()))));
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((- ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt1.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((- ((- (rt1.c3)))));
SELECT SUM(count) FROM (SELECT (((- ((- (rt1.c3))))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT ALL * FROM vt0 NATURAL JOIN rt1 WHERE ((- ((- (rt1.c3)))));
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) IS TRUE)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c1 IN ())) IS TRUE));
SELECT ALL * FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (x'');
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (x'');
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY (((((((((- (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(0x42f91e31)))))AND((('	o\no)4')&(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((((((- (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(0X42f91e31)))))AND((('	o\no)4')&(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY (((((((((- (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(0x42f91e31)))))AND((('	o\no)4')&(vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY (((((((((- (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(0X42f91e31)))))AND((('	o\no)4')&(vt0.c1))))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM) ORDER BY (((((((((- (vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 END)))AND((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c1)))OR(0x42f91e31)))))AND((('	o\no)4')&(vt0.c1))))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c1 END AS BLOB)) ORDER BY NULLIF(DISTINCT ((rt1.c3)<<(rt1.c2)), vt0.c0) ASC  NULLS LAST, (((vt0.c0, rt1.c1, rt1.c3)) BETWEEN ((((vt0.c1)*(rt1.c1)), ((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c1)), (vt0.c1 IN ()))) AND (((rt1.c2 IN (vt0.c1)), LIKELY(DISTINCT rt1.c1), (- (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULLIF(DISTINCT ((rt1.c3)<<(rt1.c2)), vt0.c0) ASC  NULLS LAST, (((vt0.c0, rt1.c1, rt1.c3)) BETWEEN ((((vt0.c1)*(rt1.c1)), ((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c1)), (vt0.c1 IN ()))) AND (((rt1.c2 IN (vt0.c1)), LIKELY(DISTINCT rt1.c1), (- (vt0.c1))))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c1 END AS BLOB)) ORDER BY NULLIF(DISTINCT ((rt1.c3)<<(rt1.c2)), vt0.c0) ASC  NULLS LAST, (((vt0.c0, rt1.c1, rt1.c3)) BETWEEN ((((vt0.c1)*(rt1.c1)), ((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c1)), (vt0.c1 IN ()))) AND (((rt1.c2 IN (vt0.c1)), LIKELY(DISTINCT rt1.c1), (- (vt0.c1))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c1 END AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY NULLIF(DISTINCT ((rt1.c3)<<(rt1.c2)), vt0.c0) ASC  NULLS LAST, (((vt0.c0, rt1.c1, rt1.c3)) BETWEEN ((((vt0.c1)*(rt1.c1)), ((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c1)), (vt0.c1 IN ()))) AND (((rt1.c2 IN (vt0.c1)), LIKELY(DISTINCT rt1.c1), (- (vt0.c1))))) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(CASE rt1.c2  WHEN rt1.c0 THEN vt0.c1 END AS BLOB)) ORDER BY NULLIF(DISTINCT ((rt1.c3)<<(rt1.c2)), vt0.c0) ASC  NULLS LAST, (((vt0.c0, rt1.c1, rt1.c3)) BETWEEN ((((vt0.c1)*(rt1.c1)), ((((((((vt0.c0)OR(rt1.c1)))OR(rt1.c0)))AND(vt0.c0)))AND(rt1.c1)), (vt0.c1 IN ()))) AND (((rt1.c2 IN (vt0.c1)), LIKELY(DISTINCT rt1.c1), (- (vt0.c1))))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ('-937358815');
SELECT SUM(count) FROM (SELECT (('-937358815') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-937358815');
SELECT SUM(count) FROM (SELECT (('-937358815') IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ('-937358815');
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON ((load_extension(rt1.c3, rt1.c1))LIKE(vt0.c0 COLLATE NOCASE)) WHERE ((- ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1 NOT INDEXED INNER JOIN vt0 ON ((load_extension(rt1.c3, rt1.c1))LIKE(vt0.c0 COLLATE NOCASE)));
SELECT COUNT(*) FROM rt1 INNER JOIN vt0 ON ((load_extension(rt1.c3, rt1.c1))LIKE(vt0.c0 COLLATE NOCASE)) WHERE ((- ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((- ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1 NOT INDEXED INNER JOIN vt0 ON ((load_extension(rt1.c3, rt1.c1))LIKE(vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT x''), CASE WHEN vt0.c1 THEN vt0.c0 END, ((0.9263999909683097) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS INTEGER), vt0.c0 COLLATE BINARY, vt0.c0)))) ORDER BY x'd48a'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT x''), CASE WHEN vt0.c1 THEN vt0.c0 END, ((0.9263999909683097) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS INTEGER), vt0.c0 COLLATE BINARY, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY x'd48a'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT x''), CASE WHEN vt0.c1 THEN vt0.c0 END, ((0.9263999909683097) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS INTEGER), vt0.c0 COLLATE BINARY, vt0.c0)))) ORDER BY x'd48a'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT x''), CASE WHEN vt0.c1 THEN vt0.c0 END, ((0.9263999909683097) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS INTEGER), vt0.c0 COLLATE BINARY, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY x'd48a'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((vt0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT x''), CASE WHEN vt0.c1 THEN vt0.c0 END, ((0.9263999909683097) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((CAST(vt0.c1 AS INTEGER), vt0.c0 COLLATE BINARY, vt0.c0)))) ORDER BY x'd48a'  NULLS FIRST;
SELECT * FROM rt1, vt0 WHERE (DATE(CASE WHEN rt1.c0 THEN vt0.c1 END, CAST(vt0.c1 AS INTEGER), (- (rt1.c0)))) ORDER BY (((NOT (vt0.c0))) BETWEEN (vt0.c1) AND ((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN rt1.c0 THEN vt0.c1 END, CAST(vt0.c1 AS INTEGER), (- (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (vt0.c1) AND ((rt1.c2 IN ()))) ASC);
SELECT * FROM rt1, vt0 WHERE (DATE(CASE WHEN rt1.c0 THEN vt0.c1 END, CAST(vt0.c1 AS INTEGER), (- (rt1.c0)))) ORDER BY (((NOT (vt0.c0))) BETWEEN (vt0.c1) AND ((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((DATE(CASE WHEN rt1.c0 THEN vt0.c1 END, CAST(vt0.c1 AS INTEGER), (- (rt1.c0)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((NOT (vt0.c0))) BETWEEN (vt0.c1) AND ((rt1.c2 IN ()))) ASC);
SELECT * FROM rt1, vt0 WHERE (DATE(CASE WHEN rt1.c0 THEN vt0.c1 END, CAST(vt0.c1 AS INTEGER), (- (rt1.c0)))) ORDER BY (((NOT (vt0.c0))) BETWEEN (vt0.c1) AND ((rt1.c2 IN ()))) ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c1)LIKE(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c1)LIKE(rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c1)LIKE(rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c1)LIKE(rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((((rt1.c1)LIKE(rt1.c3))))));
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((rt1.c0)OR('''忺S')))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c3)))LIKE((rt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)OR('''忺S')))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c3)))LIKE((rt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((rt1.c0)OR('''忺S')))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c3)))LIKE((rt1.c0 IN (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c0)OR('''忺S')))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c3)))LIKE((rt1.c0 IN (vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((((((rt1.c0)OR('''忺S')))OR(rt1.c1)))AND(vt0.c1)))OR(rt1.c3)))LIKE((rt1.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((NOT (rt1.c3)) IN ())) ORDER BY (((rt1.c0 IN (rt1.c1)))<=(rt1.c2 COLLATE NOCASE))  NULLS FIRST, ((((((rt1.c0, rt1.c3, rt1.c1))>=((rt1.c0, rt1.c3, rt1.c1))), -35499592, (((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((rt1.c3, rt1.c3, x'b59f')) AND ((rt1.c3, rt1.c0, rt1.c1)))))<=(('0.9263999909683097' COLLATE RTRIM, CAST(rt1.c2 AS TEXT), rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c1)))<=(rt1.c2 COLLATE NOCASE))  NULLS FIRST, ((((((rt1.c0, rt1.c3, rt1.c1))>=((rt1.c0, rt1.c3, rt1.c1))), -35499592, (((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((rt1.c3, rt1.c3, x'b59f')) AND ((rt1.c3, rt1.c0, rt1.c1)))))<=(('0.9263999909683097' COLLATE RTRIM, CAST(rt1.c2 AS TEXT), rt1.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt1 WHERE (((NOT (rt1.c3)) IN ())) ORDER BY (((rt1.c0 IN (rt1.c1)))<=(rt1.c2 COLLATE NOCASE))  NULLS FIRST, ((((((rt1.c0, rt1.c3, rt1.c1))>=((rt1.c0, rt1.c3, rt1.c1))), -35499592, (((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((rt1.c3, rt1.c3, x'b59f')) AND ((rt1.c3, rt1.c0, rt1.c1)))))<=(('0.9263999909683097' COLLATE RTRIM, CAST(rt1.c2 AS TEXT), rt1.c1 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ((((NOT (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c0 IN (rt1.c1)))<=(rt1.c2 COLLATE NOCASE))  NULLS FIRST, ((((((rt1.c0, rt1.c3, rt1.c1))>=((rt1.c0, rt1.c3, rt1.c1))), -35499592, (((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((rt1.c3, rt1.c3, x'b59f')) AND ((rt1.c3, rt1.c0, rt1.c1)))))<=(('0.9263999909683097' COLLATE RTRIM, CAST(rt1.c2 AS TEXT), rt1.c1 COLLATE NOCASE))));
SELECT ALL * FROM rt1 WHERE (((NOT (rt1.c3)) IN ())) ORDER BY (((rt1.c0 IN (rt1.c1)))<=(rt1.c2 COLLATE NOCASE))  NULLS FIRST, ((((((rt1.c0, rt1.c3, rt1.c1))>=((rt1.c0, rt1.c3, rt1.c1))), -35499592, (((rt1.c1, rt1.c1, rt1.c2)) BETWEEN ((rt1.c3, rt1.c3, x'b59f')) AND ((rt1.c3, rt1.c0, rt1.c1)))))<=(('0.9263999909683097' COLLATE RTRIM, CAST(rt1.c2 AS TEXT), rt1.c1 COLLATE NOCASE)));
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c1 COLLATE NOCASE  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN (rt1.c1 IN ()) END WHERE ((((NULL, rt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, 'Cf\r늕', (((vt0.c0, rt1.c0, rt1.c2))=((rt1.c3, rt1.c3, vt0.c1))))) AND ((((rt1.c1) IS TRUE), (rt1.c0 IN ()), ((rt1.c0) NOTNULL))))) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt1.c3)) NOT BETWEEN (NULL) AND (rt1.c0)) DESC  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, rt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, 'Cf\r늕', (((vt0.c0, rt1.c0, rt1.c2))=((rt1.c3, rt1.c3, vt0.c1))))) AND ((((rt1.c1) IS TRUE), (rt1.c0 IN ()), ((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c1 COLLATE NOCASE  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN (rt1.c1 IN ()) END ORDER BY ((IFNULL(DISTINCT rt1.c1, rt1.c3)) NOT BETWEEN (NULL) AND (rt1.c0)) DESC  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c1 COLLATE NOCASE  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN (rt1.c1 IN ()) END WHERE ((((NULL, rt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, 'Cf\r늕', (((vt0.c0, rt1.c0, rt1.c2))=((rt1.c3, rt1.c3, vt0.c1))))) AND ((((rt1.c1) IS TRUE), (rt1.c0 IN ()), ((rt1.c0) NOTNULL))))) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt1.c3)) NOT BETWEEN (NULL) AND (rt1.c0)) DESC  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NULL, rt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, 'Cf\r늕', (((vt0.c0, rt1.c0, rt1.c2))=((rt1.c3, rt1.c3, vt0.c1))))) AND ((((rt1.c1) IS TRUE), (rt1.c0 IN ()), ((rt1.c0) NOTNULL))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c1 COLLATE NOCASE  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN (rt1.c1 IN ()) END ORDER BY ((IFNULL(DISTINCT rt1.c1, rt1.c3)) NOT BETWEEN (NULL) AND (rt1.c0)) DESC  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON CASE rt1.c1 COLLATE NOCASE  WHEN (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN (rt1.c1 IN ()) END WHERE ((((NULL, rt1.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, 'Cf\r늕', (((vt0.c0, rt1.c0, rt1.c2))=((rt1.c3, rt1.c3, vt0.c1))))) AND ((((rt1.c1) IS TRUE), (rt1.c0 IN ()), ((rt1.c0) NOTNULL))))) ORDER BY ((IFNULL(DISTINCT rt1.c1, rt1.c3)) NOT BETWEEN (NULL) AND (rt1.c0)) DESC  NULLS FIRST, (- (vt0.c0)) COLLATE RTRIM DESC  NULLS LAST;
SELECT * FROM rt1 WHERE ((- (IFNULL(DISTINCT rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (IFNULL(DISTINCT rt1.c2, rt1.c0))));
SELECT SUM(count) FROM (SELECT (((- (IFNULL(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((- (IFNULL(DISTINCT rt1.c2, rt1.c0))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(json_remove(vt0.c0, vt0.c0, rt1.c3, vt0.c1) AS NUMERIC)) ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(x''))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(vt0.c0, vt0.c0, rt1.c3, vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(x'')))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(json_remove(vt0.c0, vt0.c0, rt1.c3, vt0.c1) AS NUMERIC)) ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(x''))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(json_remove(vt0.c0, vt0.c0, rt1.c3, vt0.c1) AS NUMERIC)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ (((((vt0.c1)OR(vt0.c0)))AND(x'')))));
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c1, rt1.c0, rt1.c1, rt1.c1)))) NOT BETWEEN ((NOT (rt1.c0))) AND ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c1, rt1.c0, rt1.c1, rt1.c1)))) NOT BETWEEN ((NOT (rt1.c0))) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c1, rt1.c0, rt1.c1, rt1.c1)))) NOT BETWEEN ((NOT (rt1.c0))) AND ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT (((((((rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c1, rt1.c0, rt1.c1, rt1.c1)))) NOT BETWEEN ((NOT (rt1.c0))) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((rt1.c2, rt1.c1, rt1.c0, rt1.c3, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c0, rt1.c3, rt1.c0, rt1.c3)) AND ((rt1.c3, rt1.c1, rt1.c0, rt1.c1, rt1.c1)))) NOT BETWEEN ((NOT (rt1.c0))) AND ((rt1.c3 IN ()))));
SELECT * FROM vt0 WHERE (((CAST(NULL AS REAL))-(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL))-(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(NULL AS REAL))-(CAST(vt0.c1 AS TEXT))));
SELECT SUM(count) FROM (SELECT ((((CAST(NULL AS REAL))-(CAST(vt0.c1 AS TEXT)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(NULL AS REAL))-(CAST(vt0.c1 AS TEXT))));
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c1)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c1)) ORDER BY vt0.c0 DESC;
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_USED(vt0.c1)) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0 DESC);
SELECT ALL * FROM vt0 WHERE (SQLITE_COMPILEOPTION_USED(vt0.c1)) ORDER BY vt0.c0 DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((rt1.c1)) BETWEEN ((((0.6607173649167077)+(rt1.c3)))) AND ((((rt1.c1)<(rt1.c1))))) ASC  NULLS FIRST, 0.7733311428984619 DESC  NULLS FIRST, CAST((+ (rt1.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((0.6607173649167077)+(rt1.c3)))) AND ((((rt1.c1)<(rt1.c1))))) ASC  NULLS FIRST, 0.7733311428984619 DESC  NULLS FIRST, CAST((+ (rt1.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((rt1.c1)) BETWEEN ((((0.6607173649167077)+(rt1.c3)))) AND ((((rt1.c1)<(rt1.c1))))) ASC  NULLS FIRST, 0.7733311428984619 DESC  NULLS FIRST, CAST((+ (rt1.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c1)) BETWEEN ((((0.6607173649167077)+(rt1.c3)))) AND ((((rt1.c1)<(rt1.c1))))) ASC  NULLS FIRST, 0.7733311428984619 DESC  NULLS FIRST, CAST((+ (rt1.c1)) AS NUMERIC) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST(rt1.c2 COLLATE NOCASE AS NUMERIC)) ORDER BY (((rt1.c1)) BETWEEN ((((0.6607173649167077)+(rt1.c3)))) AND ((((rt1.c1)<(rt1.c1))))) ASC  NULLS FIRST, 0.7733311428984619 DESC  NULLS FIRST, CAST((+ (rt1.c1)) AS NUMERIC) ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c1)))AND(rt1.c1))) AND (rtreenode(rt1.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c1)))AND(rt1.c1))) AND (rtreenode(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c1)))AND(rt1.c1))) AND (rtreenode(rt1.c0, rt1.c2))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c1)))AND(rt1.c1))) AND (rtreenode(rt1.c0, rt1.c2)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) NOT BETWEEN (((((((((vt0.c1)OR(rt1.c0)))OR(rt1.c1)))OR(vt0.c1)))AND(rt1.c1))) AND (rtreenode(rt1.c0, rt1.c2))));
SELECT ALL * FROM rt1 WHERE (4.74898756E8);
SELECT SUM(count) FROM (SELECT ALL ((4.74898756E8) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (4.74898756E8);
SELECT SUM(count) FROM (SELECT ALL ((4.74898756E8) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (4.74898756E8);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c1  WHEN '295176151' THEN rt1.c2 WHEN rt1.c3 THEN '1374263772' WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 WHEN '-914740617' THEN rt1.c3 WHEN rt1.c1 THEN 0.19897183506183058 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c0 END) AND (CASE WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c1 END))) ORDER BY ((((((((((vt0.c0) NOTNULL))AND(((rt1.c0) NOT NULL))))OR(((vt0.c0) IS TRUE))))AND(NULLIF(DISTINCT rt1.c0, NULL))))OR((+ (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN '295176151' THEN rt1.c2 WHEN rt1.c3 THEN '1374263772' WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 WHEN '-914740617' THEN rt1.c3 WHEN rt1.c1 THEN 0.19897183506183058 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c0 END) AND (CASE WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))AND(((rt1.c0) NOT NULL))))OR(((vt0.c0) IS TRUE))))AND(NULLIF(DISTINCT rt1.c0, NULL))))OR((+ (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c1  WHEN '295176151' THEN rt1.c2 WHEN rt1.c3 THEN '1374263772' WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 WHEN '-914740617' THEN rt1.c3 WHEN rt1.c1 THEN 0.19897183506183058 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c0 END) AND (CASE WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c1 END))) ORDER BY ((((((((((vt0.c0) NOTNULL))AND(((rt1.c0) NOT NULL))))OR(((vt0.c0) IS TRUE))))AND(NULLIF(DISTINCT rt1.c0, NULL))))OR((+ (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c1  WHEN '295176151' THEN rt1.c2 WHEN rt1.c3 THEN '1374263772' WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 WHEN '-914740617' THEN rt1.c3 WHEN rt1.c1 THEN 0.19897183506183058 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c0 END) AND (CASE WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((vt0.c0) NOTNULL))AND(((rt1.c0) NOT NULL))))OR(((vt0.c0) IS TRUE))))AND(NULLIF(DISTINCT rt1.c0, NULL))))OR((+ (vt0.c1)))) DESC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((CASE rt1.c1  WHEN '295176151' THEN rt1.c2 WHEN rt1.c3 THEN '1374263772' WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (CASE WHEN rt1.c1 THEN rt1.c0 WHEN '-914740617' THEN rt1.c3 WHEN rt1.c1 THEN 0.19897183506183058 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c1 THEN vt0.c0 END) AND (CASE WHEN rt1.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c1 END))) ORDER BY ((((((((((vt0.c0) NOTNULL))AND(((rt1.c0) NOT NULL))))OR(((vt0.c0) IS TRUE))))AND(NULLIF(DISTINCT rt1.c0, NULL))))OR((+ (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (((NULL) ISNULL));
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0);
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON rt1.c0 WHERE (((NULL) ISNULL));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3)=(rt1.c0)))>(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)==(rt1.c0)))>(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3)=(rt1.c0)))>(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c3)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)==(rt1.c0)))>(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c3)=(rt1.c0)))>(((rt1.c2) BETWEEN (vt0.c0) AND (rt1.c3)))));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(x'')))>(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(x'')))>(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(x'')))>(NULL)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c1)))AND(x'')))>(NULL))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c1)))AND(x'')))>(NULL)));
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))), (((vt0.c0, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c3, rt1.c2, rt1.c3))), (~ (rt1.c1))))>=(((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c3, 0.48485189564834985, rt1.c0))), NULLIF(rt1.c3, rt1.c3), ((((vt0.c1)OR(rt1.c3)))OR(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))), (((vt0.c0, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c3, rt1.c2, rt1.c3))), (~ (rt1.c1))))>=(((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c3, 0.48485189564834985, rt1.c0))), NULLIF(rt1.c3, rt1.c3), ((((vt0.c1)OR(rt1.c3)))OR(rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))), (((vt0.c0, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c3, rt1.c2, rt1.c3))), (~ (rt1.c1))))>=(((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c3, 0.48485189564834985, rt1.c0))), NULLIF(rt1.c3, rt1.c3), ((((vt0.c1)OR(rt1.c3)))OR(rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))), (((vt0.c0, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c3, rt1.c2, rt1.c3))), (~ (rt1.c1))))>=(((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c3, 0.48485189564834985, rt1.c0))), NULLIF(rt1.c3, rt1.c3), ((((vt0.c1)OR(rt1.c3)))OR(rt1.c0)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((rt1.c2))), (((vt0.c0, rt1.c3, rt1.c0)) NOT BETWEEN ((rt1.c1, vt0.c0, rt1.c1)) AND ((rt1.c3, rt1.c2, rt1.c3))), (~ (rt1.c1))))>=(((((rt1.c2, rt1.c1, rt1.c0))>=((rt1.c3, 0.48485189564834985, rt1.c0))), NULLIF(rt1.c3, rt1.c3), ((((vt0.c1)OR(rt1.c3)))OR(rt1.c0))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((COALESCE(DISTINCT rt1.c2, rt1.c2))AND(((rt1.c0)>=(rt1.c2)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(DISTINCT rt1.c2, rt1.c2))AND(((rt1.c0)>=(rt1.c2)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((COALESCE(DISTINCT rt1.c2, rt1.c2))AND(((rt1.c0)>=(rt1.c2)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((((COALESCE(DISTINCT rt1.c2, rt1.c2))AND(((rt1.c0)>=(rt1.c2)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((COALESCE(DISTINCT rt1.c2, rt1.c2))AND(((rt1.c0)>=(rt1.c2)))))OR(rt1.c2)));
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (x'') AND (((vt0.c1)|(vt0.c1))))) ORDER BY CAST(((vt0.c1)>>(vt0.c1)) AS TEXT), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (x'') AND (((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)>>(vt0.c1)) AS TEXT), vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (x'') AND (((vt0.c1)|(vt0.c1))))) ORDER BY CAST(((vt0.c1)>>(vt0.c1)) AS TEXT), vt0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((NOT (vt0.c0))) BETWEEN (x'') AND (((vt0.c1)|(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c1)>>(vt0.c1)) AS TEXT), vt0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((NOT (vt0.c0))) BETWEEN (x'') AND (((vt0.c1)|(vt0.c1))))) ORDER BY CAST(((vt0.c1)>>(vt0.c1)) AS TEXT), vt0.c0 DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (IFNULL(((vt0.c0)>=(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(-339896925))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)>=(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(-339896925)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL(((vt0.c0)>=(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(-339896925))));
SELECT SUM(count) FROM (SELECT ((IFNULL(((vt0.c0)>=(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(-339896925)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (IFNULL(((vt0.c0)>=(vt0.c0)), ((((vt0.c0)AND(vt0.c1)))OR(-339896925))));
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c0, NULL))>((vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY vt0.c0, vt0.c1  NULLS FIRST, CAST(((vt0.c0)AND(vt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1, vt0.c0, NULL))>((vt0.c1, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, vt0.c1  NULLS FIRST, CAST(((vt0.c0)AND(vt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c0, NULL))>((vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY vt0.c0, vt0.c1  NULLS FIRST, CAST(((vt0.c0)AND(vt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt0.c1, vt0.c0, NULL))>((vt0.c1, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0, vt0.c1  NULLS FIRST, CAST(((vt0.c0)AND(vt0.c1)) AS TEXT) DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((~ ((((vt0.c1, vt0.c0, NULL))>((vt0.c1, vt0.c1, vt0.c0)))))) ORDER BY vt0.c0, vt0.c1  NULLS FIRST, CAST(((vt0.c0)AND(vt0.c1)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS REAL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c2 AS REAL) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((CAST(rt1.c2 AS REAL) IN ()));
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c1)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (vt0.c1) AND (-737914132))) AND ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (vt0.c1) AND (-737914132))) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c1)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (vt0.c1) AND (-737914132))) AND ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (vt0.c1) AND (-737914132))) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((((rt1.c1)AND(vt0.c1)))AND(vt0.c0))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (vt0.c1) AND (-737914132))) AND ((rt1.c3 IN ()))));
SELECT * FROM vt0, rt1 WHERE (LIKELY(DISTINCT ((((rt1.c1)AND(rt1.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((rt1.c1)AND(rt1.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (LIKELY(DISTINCT ((((rt1.c1)AND(rt1.c2)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((((rt1.c1)AND(rt1.c2)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (LIKELY(DISTINCT ((((rt1.c1)AND(rt1.c2)))OR(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0) NOT NULL)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0) NOT NULL)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT NULL)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c0) NOT NULL)) NOT BETWEEN (((rt1.c1) ISNULL)) AND (CAST(rt1.c2 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c1))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC, vt0.c1 ASC;
SELECT SUM(count) FROM (SELECT ((((LOWER(DISTINCT vt0.c1))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC, vt0.c1 ASC);
SELECT COUNT(*) FROM vt0 WHERE (((LOWER(DISTINCT vt0.c1))>(CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c0 END))) ORDER BY (+ (((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))) DESC, vt0.c1 ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY '곿' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY '곿' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY '곿' ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) IS TRUE)  as count FROM vt0 ORDER BY '곿' ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1, vt0.c1, vt0.c1))!=((vt0.c0, vt0.c0, vt0.c0))) THEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)) END) ORDER BY '곿' ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '~9' THEN rt1.c0 ELSE rt1.c1 END)%((+ (rt1.c0))))) ORDER BY rt1.c1, (((vt0.c1, vt0.c1, vt0.c1, rt1.c1, rt1.c1)) BETWEEN ((vt0.c1, (((('-737914132')AND(rt1.c1)))OR(rt1.c1)), vt0.c0, ((rt1.c1)GLOB(NULL)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((~ (rt1.c1)), ((NULL)IS(rt1.c1)), ((x'') NOTNULL), ((((rt1.c0)AND(rt1.c3)))AND(x'')), vt0.c1 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '~9' THEN rt1.c0 ELSE rt1.c1 END)%((+ (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1, (((vt0.c1, vt0.c1, vt0.c1, rt1.c1, rt1.c1)) BETWEEN ((vt0.c1, (((('-737914132')AND(rt1.c1)))OR(rt1.c1)), vt0.c0, ((rt1.c1)GLOB(NULL)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((~ (rt1.c1)), ((NULL)IS(rt1.c1)), ((x'') NOTNULL), ((((rt1.c0)AND(rt1.c3)))AND(x'')), vt0.c1 COLLATE NOCASE))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '~9' THEN rt1.c0 ELSE rt1.c1 END)%((+ (rt1.c0))))) ORDER BY rt1.c1, (((vt0.c1, vt0.c1, vt0.c1, rt1.c1, rt1.c1)) BETWEEN ((vt0.c1, (((('-737914132')AND(rt1.c1)))OR(rt1.c1)), vt0.c0, ((rt1.c1)GLOB(NULL)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((~ (rt1.c1)), ((NULL)IS(rt1.c1)), ((x'') NOTNULL), ((((rt1.c0)AND(rt1.c3)))AND(x'')), vt0.c1 COLLATE NOCASE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '~9' THEN rt1.c0 ELSE rt1.c1 END)%((+ (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1, (((vt0.c1, vt0.c1, vt0.c1, rt1.c1, rt1.c1)) BETWEEN ((vt0.c1, (((('-737914132')AND(rt1.c1)))OR(rt1.c1)), vt0.c0, ((rt1.c1)GLOB(NULL)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((~ (rt1.c1)), ((NULL)IS(rt1.c1)), ((x'') NOTNULL), ((((rt1.c0)AND(rt1.c3)))AND(x'')), vt0.c1 COLLATE NOCASE))) DESC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CASE WHEN vt0.c0 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '~9' THEN rt1.c0 ELSE rt1.c1 END)%((+ (rt1.c0))))) ORDER BY rt1.c1, (((vt0.c1, vt0.c1, vt0.c1, rt1.c1, rt1.c1)) BETWEEN ((vt0.c1, (((('-737914132')AND(rt1.c1)))OR(rt1.c1)), vt0.c0, ((rt1.c1)GLOB(NULL)), ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND (((~ (rt1.c1)), ((NULL)IS(rt1.c1)), ((x'') NOTNULL), ((((rt1.c0)AND(rt1.c3)))AND(x'')), vt0.c1 COLLATE NOCASE))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((('1746688654') BETWEEN ((NULL IN ())) AND (vt0.c1))) ORDER BY load_extension(((((vt0.c0)OR(vt0.c1)))AND(x'bb87')), ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1746688654') BETWEEN ((NULL IN ())) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(((((vt0.c0)OR(vt0.c1)))AND(x'bb87')), ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((('1746688654') BETWEEN ((NULL IN ())) AND (vt0.c1))) ORDER BY load_extension(((((vt0.c0)OR(vt0.c1)))AND(x'bb87')), ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('1746688654') BETWEEN ((NULL IN ())) AND (vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY load_extension(((((vt0.c0)OR(vt0.c1)))AND(x'bb87')), ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1))) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((NOT ('2121322894')));
SELECT SUM(count) FROM (SELECT (((NOT ('2121322894'))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((NOT ('2121322894')));
SELECT SUM(count) FROM (SELECT (((NOT ('2121322894'))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((NOT ('2121322894')));
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF((((rt1.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c0, rt1.c3, rt1.c1))))) ORDER BY ((+ (rt1.c0)) IN (((rt1.c3) NOTNULL)))  NULLS LAST, NULLIF(DISTINCT ((rt1.c0)&(rt1.c3)), (rt1.c1 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt1.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c0, rt1.c3, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((+ (rt1.c0)) IN (((rt1.c3) NOTNULL)))  NULLS LAST, NULLIF(DISTINCT ((rt1.c0)&(rt1.c3)), (rt1.c1 IN ())) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF((((rt1.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c0, rt1.c3, rt1.c1))))) ORDER BY ((+ (rt1.c0)) IN (((rt1.c3) NOTNULL)))  NULLS LAST, NULLIF(DISTINCT ((rt1.c0)&(rt1.c3)), (rt1.c1 IN ())) ASC;
SELECT SUM(count) FROM (SELECT ((TYPEOF((((rt1.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c0, rt1.c3, rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((+ (rt1.c0)) IN (((rt1.c3) NOTNULL)))  NULLS LAST, NULLIF(DISTINCT ((rt1.c0)&(rt1.c3)), (rt1.c1 IN ())) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (TYPEOF((((rt1.c3, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c0)) AND ((rt1.c0, rt1.c3, rt1.c1))))) ORDER BY ((+ (rt1.c0)) IN (((rt1.c3) NOTNULL)))  NULLS LAST, NULLIF(DISTINCT ((rt1.c0)&(rt1.c3)), (rt1.c1 IN ())) ASC;
SELECT ALL * FROM vt0, rt1 WHERE ((((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))AND(((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c3) IS FALSE))))AND((vt0.c1 IN ()))))AND((((rt1.c2))>=((''))))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))AND(((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c3) IS FALSE))))AND((vt0.c1 IN ()))))AND((((rt1.c2))>=(('')))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))AND(((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c3) IS FALSE))))AND((vt0.c1 IN ()))))AND((((rt1.c2))>=((''))))));
SELECT SUM(count) FROM (SELECT (((((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))AND(((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c3) IS FALSE))))AND((vt0.c1 IN ()))))AND((((rt1.c2))>=(('')))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE ((((((((((((rt1.c2)) NOT BETWEEN ((vt0.c0)) AND ((rt1.c0))))AND(((((((((vt0.c0)AND(rt1.c1)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR(((rt1.c3) IS FALSE))))AND((vt0.c1 IN ()))))AND((((rt1.c2))>=((''))))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1))<>((rt1.c1))) AS BLOB)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) BETWEEN ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND (('', rt1.c0, rt1.c1)))) AND ((NOT (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))<>((rt1.c1))) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) BETWEEN ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND (('', rt1.c0, rt1.c1)))) AND ((NOT (rt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1))<>((rt1.c1))) AS BLOB)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) BETWEEN ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND (('', rt1.c0, rt1.c1)))) AND ((NOT (rt1.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST((((rt1.c1))<>((rt1.c1))) AS BLOB)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) BETWEEN ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND (('', rt1.c0, rt1.c1)))) AND ((NOT (rt1.c1)))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((((rt1.c1))<>((rt1.c1))) AS BLOB)) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) BETWEEN ((((rt1.c0, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, rt1.c1, rt1.c0)) AND (('', rt1.c0, rt1.c1)))) AND ((NOT (rt1.c1)))) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0)IS NOT(vt0.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))AND(MIN(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))AND(MIN(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))AND(MIN(vt0.c0, vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN ()))AND(MIN(vt0.c0, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0 IN ()))AND(MIN(vt0.c0, vt0.c1))));
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((CASE vt0.c1  WHEN rt1.c1 THEN vt0.c1 END)) AND ((rt1.c1 COLLATE BINARY)))) ORDER BY ((rt1.c1) BETWEEN (vt0.c1) AND (rt1.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((rt1.c1)-(vt0.c1)))%(rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((CASE vt0.c1  WHEN rt1.c1 THEN vt0.c1 END)) AND ((rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1) BETWEEN (vt0.c1) AND (rt1.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((rt1.c1)-(vt0.c1)))%(rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((CASE vt0.c1  WHEN rt1.c1 THEN vt0.c1 END)) AND ((rt1.c1 COLLATE BINARY)))) ORDER BY ((rt1.c1) BETWEEN (vt0.c1) AND (rt1.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((rt1.c1)-(vt0.c1)))%(rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)) BETWEEN ((CASE vt0.c1  WHEN rt1.c1 THEN vt0.c1 END)) AND ((rt1.c1 COLLATE BINARY)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1) BETWEEN (vt0.c1) AND (rt1.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((rt1.c1)-(vt0.c1)))%(rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST);
SELECT * FROM vt0, rt1 WHERE ((((rt1.c0)) BETWEEN ((CASE vt0.c1  WHEN rt1.c1 THEN vt0.c1 END)) AND ((rt1.c1 COLLATE BINARY)))) ORDER BY ((rt1.c1) BETWEEN (vt0.c1) AND (rt1.c2)) COLLATE BINARY ASC  NULLS FIRST, ((((rt1.c1)-(vt0.c1)))%(rt1.c3 COLLATE NOCASE)) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1 IN ()))OR(((vt0.c1)<=(1.746688654E9)))))AND((vt0.c1 IN (NULL)))))OR(((vt0.c0) IS TRUE))))OR((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1 IN ()))OR(((vt0.c1)<=(1.746688654E9)))))AND((vt0.c1 IN (NULL)))))OR(((vt0.c0) IS TRUE))))OR((NULL IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1 IN ()))OR(((vt0.c1)<=(1.746688654E9)))))AND((vt0.c1 IN (NULL)))))OR(((vt0.c0) IS TRUE))))OR((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL (((((((((((vt0.c1 IN ()))OR(((vt0.c1)<=(1.746688654E9)))))AND((vt0.c1 IN (NULL)))))OR(((vt0.c0) IS TRUE))))OR((NULL IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((((((vt0.c1 IN ()))OR(((vt0.c1)<=(1.746688654E9)))))AND((vt0.c1 IN (NULL)))))OR(((vt0.c0) IS TRUE))))OR((NULL IN ()))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CAST((('-984969911') NOT NULL) AS BLOB) WHERE ((((((rt1.c0, vt0.c1, rt1.c2))<=((vt0.c0, rt1.c0, vt0.c1)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY json_remove((rt1.c0 IN (vt0.c1)), ((x'') NOT BETWEEN (vt0.c1) AND (rt1.c3)), (((vt0.c0, rt1.c0, rt1.c0))>=((1051103784, rt1.c1, rt1.c3))), ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(x'2e9e')));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, vt0.c1, rt1.c2))<=((vt0.c0, rt1.c0, vt0.c1)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST((('-984969911') NOT NULL) AS BLOB) ORDER BY json_remove((rt1.c0 IN (vt0.c1)), ((x'') NOT BETWEEN (vt0.c1) AND (rt1.c3)), (((vt0.c0, rt1.c0, rt1.c0))>=((1051103784, rt1.c1, rt1.c3))), ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(x'2e9e'))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON CAST((('-984969911') NOT NULL) AS BLOB) WHERE ((((((rt1.c0, vt0.c1, rt1.c2))<=((vt0.c0, rt1.c0, vt0.c1)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)<<(vt0.c0))))) ORDER BY json_remove((rt1.c0 IN (vt0.c1)), ((x'') NOT BETWEEN (vt0.c1) AND (rt1.c3)), (((vt0.c0, rt1.c0, rt1.c0))>=((1051103784, rt1.c1, rt1.c3))), ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(x'2e9e')));
SELECT SUM(count) FROM (SELECT (((((((rt1.c0, vt0.c1, rt1.c2))<=((vt0.c0, rt1.c0, vt0.c1)))) NOT BETWEEN ((vt0.c0 IN ())) AND (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST((('-984969911') NOT NULL) AS BLOB) ORDER BY json_remove((rt1.c0 IN (vt0.c1)), ((x'') NOT BETWEEN (vt0.c1) AND (rt1.c3)), (((vt0.c0, rt1.c0, rt1.c0))>=((1051103784, rt1.c1, rt1.c3))), ((((((((rt1.c1)OR(vt0.c0)))OR(rt1.c2)))OR(rt1.c0)))OR(x'2e9e'))));
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(NULL)))OR(rt1.c1)) COLLATE RTRIM WHERE (-152137899 COLLATE BINARY) ORDER BY (((((vt0.c0))<>((rt1.c3))))GLOB((- (vt0.c1)))) ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c3 END  WHEN rt1.c3 THEN TYPEOF(DISTINCT vt0.c1) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-152137899 COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(NULL)))OR(rt1.c1)) COLLATE RTRIM ORDER BY (((((vt0.c0))!=((rt1.c3))))GLOB((- (vt0.c1)))) ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c3 END  WHEN rt1.c3 THEN TYPEOF(DISTINCT vt0.c1) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(NULL)))OR(rt1.c1)) COLLATE RTRIM WHERE (-152137899 COLLATE BINARY) ORDER BY (((((vt0.c0))<>((rt1.c3))))GLOB((- (vt0.c1)))) ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c3 END  WHEN rt1.c3 THEN TYPEOF(DISTINCT vt0.c1) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((-152137899 COLLATE BINARY) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(NULL)))OR(rt1.c1)) COLLATE RTRIM ORDER BY (((((vt0.c0))!=((rt1.c3))))GLOB((- (vt0.c1)))) ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c3 END  WHEN rt1.c3 THEN TYPEOF(DISTINCT vt0.c1) END DESC  NULLS LAST);
SELECT ALL * FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)AND(NULL)))OR(rt1.c1)) COLLATE RTRIM WHERE (-152137899 COLLATE BINARY) ORDER BY (((((vt0.c0))<>((rt1.c3))))GLOB((- (vt0.c1)))) ASC  NULLS FIRST, CASE CASE WHEN rt1.c0 THEN rt1.c3 END  WHEN rt1.c3 THEN TYPEOF(DISTINCT vt0.c1) END DESC  NULLS LAST;
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(0.9424011253628362)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(0.9424011253628362)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(0.9424011253628362)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE NOCASE));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(0.9424011253628362)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))/(((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))AND(0.9424011253628362)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))))) ORDER BY (CAST(vt0.c0 AS INTEGER) IN (vt0.c1 COLLATE NOCASE));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((((((0.6295971094428385)AND(x'')))OR(rt1.c2)))) AND ((((rt1.c2)AND(rt1.c3))))) WHERE (((LTRIM(9.8577566E8, rt1.c1)) BETWEEN (x'') AND (x'5be13d50')));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(9.8577566E8, rt1.c1)) BETWEEN (x'') AND (x'5be13d50'))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((((((0.6295971094428385)AND(x'')))OR(rt1.c2)))) AND ((((rt1.c2)AND(rt1.c3))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((((((0.6295971094428385)AND(x'')))OR(rt1.c2)))) AND ((((rt1.c2)AND(rt1.c3))))) WHERE (((LTRIM(9.8577566E8, rt1.c1)) BETWEEN (x'') AND (x'5be13d50')));
SELECT SUM(count) FROM (SELECT ALL ((((LTRIM(9.8577566E8, rt1.c1)) BETWEEN (x'') AND (x'5be13d50'))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((((((0.6295971094428385)AND(x'')))OR(rt1.c2)))) AND ((((rt1.c2)AND(rt1.c3))))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((rt1.c3)) NOT BETWEEN ((((((0.6295971094428385)AND(x'')))OR(rt1.c2)))) AND ((((rt1.c2)AND(rt1.c3))))) WHERE (((LTRIM(9.8577566E8, rt1.c1)) BETWEEN (x'') AND (x'5be13d50')));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))>=(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) ORDER BY ((((rt1.c1)>(rt1.c2)))*(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))>=(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>(rt1.c2)))*(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))>=(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) ORDER BY ((((rt1.c1)>(rt1.c2)))*(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))>=(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c1)>(rt1.c2)))*(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c2)))>=(((rt1.c0) NOT BETWEEN (NULL) AND (rt1.c0))))) ORDER BY ((((rt1.c1)>(rt1.c2)))*(CASE WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END));
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 THEN rt1.c2 END COLLATE NOCASE WHERE ((((rt1.c3, (((vt0.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((NULL, rt1.c2, vt0.c0, 0.5748103520803579, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt1.c1, NULL))), (((rt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2)))))>((CAST(rt1.c3 AS TEXT), vt0.c0, (vt0.c1 IN (vt0.c1, rt1.c0)))))) ORDER BY MAX(((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)=(rt1.c3))) DESC  NULLS LAST, ((x'b98c')==(((vt0.c1)!=(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, (((vt0.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((NULL, rt1.c2, vt0.c0, 0.5748103520803579, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt1.c1, NULL))), (((rt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2)))))>((CAST(rt1.c3 AS TEXT), vt0.c0, (vt0.c1 IN (vt0.c1, rt1.c0)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 THEN rt1.c2 END COLLATE NOCASE ORDER BY MAX(((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)==(rt1.c3))) DESC  NULLS LAST, ((x'b98c')=(((vt0.c1)!=(rt1.c0)))) ASC);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 THEN rt1.c2 END COLLATE NOCASE WHERE ((((rt1.c3, (((vt0.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((NULL, rt1.c2, vt0.c0, 0.5748103520803579, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt1.c1, NULL))), (((rt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2)))))>((CAST(rt1.c3 AS TEXT), vt0.c0, (vt0.c1 IN (vt0.c1, rt1.c0)))))) ORDER BY MAX(((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)=(rt1.c3))) DESC  NULLS LAST, ((x'b98c')==(((vt0.c1)!=(rt1.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3, (((vt0.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((NULL, rt1.c2, vt0.c0, 0.5748103520803579, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt1.c1, NULL))), (((rt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2)))))>((CAST(rt1.c3 AS TEXT), vt0.c0, (vt0.c1 IN (vt0.c1, rt1.c0)))))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 THEN rt1.c2 END COLLATE NOCASE ORDER BY MAX(((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)==(rt1.c3))) DESC  NULLS LAST, ((x'b98c')=(((vt0.c1)!=(rt1.c0)))) ASC);
SELECT * FROM rt1 LEFT OUTER JOIN vt0 ON CASE WHEN rt1.c1 THEN rt1.c2 END COLLATE NOCASE WHERE ((((rt1.c3, (((vt0.c1, rt1.c1, rt1.c0, rt1.c1, rt1.c1)) BETWEEN ((NULL, rt1.c2, vt0.c0, 0.5748103520803579, rt1.c0)) AND ((rt1.c0, rt1.c2, rt1.c0, rt1.c1, NULL))), (((rt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((rt1.c0, vt0.c0, rt1.c0)) AND ((rt1.c1, vt0.c0, rt1.c2)))))>((CAST(rt1.c3 AS TEXT), vt0.c0, (vt0.c1 IN (vt0.c1, rt1.c0)))))) ORDER BY MAX(((vt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)=(rt1.c3))) DESC  NULLS LAST, ((x'b98c')==(((vt0.c1)!=(rt1.c0)))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (MIN(rt1.c0, NULLIF(DISTINCT rt1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt1.c1)), (((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((MIN(rt1.c0, NULLIF(DISTINCT rt1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt1.c1)), (((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (MIN(rt1.c0, NULLIF(DISTINCT rt1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt1.c1)), (((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((MIN(rt1.c0, NULLIF(DISTINCT rt1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt1.c1)), (((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (MIN(rt1.c0, NULLIF(DISTINCT rt1.c0, vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (rt1.c1)), (((rt1.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))));
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ((((rt1.c1, rt1.c3, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c3)))) AND (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY ((CAST(rt1.c3 AS BLOB))-(rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) BETWEEN ((((rt1.c1, rt1.c3, rt1.c1))!=((rt1.c2, rt1.c1, rt1.c3)))) AND (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS BLOB))-(rt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ((((rt1.c1, rt1.c3, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c3)))) AND (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY ((CAST(rt1.c3 AS BLOB))-(rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(rt1.c2 AS TEXT)) BETWEEN ((((rt1.c1, rt1.c3, rt1.c1))!=((rt1.c2, rt1.c1, rt1.c3)))) AND (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c3 AS BLOB))-(rt1.c0)) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((CAST(rt1.c2 AS TEXT)) BETWEEN ((((rt1.c1, rt1.c3, rt1.c1))<>((rt1.c2, rt1.c1, rt1.c3)))) AND (((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY ((CAST(rt1.c3 AS BLOB))-(rt1.c0)) DESC  NULLS FIRST;
SELECT * FROM rt1 INNER JOIN vt0 ON TRIM(SQLITE_SOURCE_ID()) WHERE (IFNULL(DISTINCT '-1478394460', ((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT '-1478394460', ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON TRIM(SQLITE_SOURCE_ID()));
SELECT * FROM rt1 INNER JOIN vt0 ON TRIM(SQLITE_SOURCE_ID()) WHERE (IFNULL(DISTINCT '-1478394460', ((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((IFNULL(DISTINCT '-1478394460', ((vt0.c0) IS TRUE))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON TRIM(SQLITE_SOURCE_ID()));
SELECT * FROM rt1 INNER JOIN vt0 ON TRIM(SQLITE_SOURCE_ID()) WHERE (IFNULL(DISTINCT '-1478394460', ((vt0.c0) IS TRUE)));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY SUBSTR(((((0.17748707525767793)AND(vt0.c0)))OR(vt0.c1)), ((x'') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(((((0.17748707525767793)AND(vt0.c0)))OR(vt0.c1)), ((x'') NOT NULL)));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY SUBSTR(((((0.17748707525767793)AND(vt0.c0)))OR(vt0.c1)), ((x'') NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE BINARY AS REAL)) IS TRUE)  as count FROM vt0 ORDER BY SUBSTR(((((0.17748707525767793)AND(vt0.c0)))OR(vt0.c1)), ((x'') NOT NULL)));
SELECT * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS REAL)) ORDER BY SUBSTR(((((0.17748707525767793)AND(vt0.c0)))OR(vt0.c1)), ((x'') NOT NULL));
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)AND(rt1.c1)))) ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN rt1.c3 WHEN rt1.c3 COLLATE NOCASE THEN LIKELY(rt1.c1) WHEN rt1.c2 COLLATE RTRIM THEN GLOB(rt1.c0, rt1.c3) ELSE rt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)AND(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN rt1.c3 WHEN rt1.c3 COLLATE NOCASE THEN LIKELY(rt1.c1) WHEN rt1.c2 COLLATE RTRIM THEN GLOB(rt1.c0, rt1.c3) ELSE rt1.c0 END  NULLS FIRST);
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)AND(rt1.c1)))) ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN rt1.c3 WHEN rt1.c3 COLLATE NOCASE THEN LIKELY(rt1.c1) WHEN rt1.c2 COLLATE RTRIM THEN GLOB(rt1.c0, rt1.c3) ELSE rt1.c0 END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)AND(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN rt1.c3 WHEN rt1.c3 COLLATE NOCASE THEN LIKELY(rt1.c1) WHEN rt1.c2 COLLATE RTRIM THEN GLOB(rt1.c0, rt1.c3) ELSE rt1.c0 END  NULLS FIRST);
SELECT * FROM rt1 WHERE (NULLIF(DISTINCT ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2)), ((rt1.c3)AND(rt1.c1)))) ORDER BY CASE WHEN ((rt1.c2)&(rt1.c1)) THEN rt1.c3 WHEN rt1.c3 COLLATE NOCASE THEN LIKELY(rt1.c1) WHEN rt1.c2 COLLATE RTRIM THEN GLOB(rt1.c0, rt1.c3) ELSE rt1.c0 END  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c3)>(rt1.c0)), (((rt1.c3)) NOT BETWEEN ((0.9045028091786417)) AND ((vt0.c1))), '-1107353844'))<>(((+ (vt0.c1)), ((rt1.c0)IS(rt1.c2)), (~ (vt0.c1)))))) ORDER BY '|BA' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)>(rt1.c0)), (((rt1.c3)) NOT BETWEEN ((0.9045028091786417)) AND ((vt0.c1))), '-1107353844'))!=(((+ (vt0.c1)), ((rt1.c0)IS(rt1.c2)), (~ (vt0.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '|BA' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c3)>(rt1.c0)), (((rt1.c3)) NOT BETWEEN ((0.9045028091786417)) AND ((vt0.c1))), '-1107353844'))<>(((+ (vt0.c1)), ((rt1.c0)IS(rt1.c2)), (~ (vt0.c1)))))) ORDER BY '|BA' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((rt1.c3)>(rt1.c0)), (((rt1.c3)) NOT BETWEEN ((0.9045028091786417)) AND ((vt0.c1))), '-1107353844'))!=(((+ (vt0.c1)), ((rt1.c0)IS(rt1.c2)), (~ (vt0.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '|BA' ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((((rt1.c3)>(rt1.c0)), (((rt1.c3)) NOT BETWEEN ((0.9045028091786417)) AND ((vt0.c1))), '-1107353844'))<>(((+ (vt0.c1)), ((rt1.c0)IS(rt1.c2)), (~ (vt0.c1)))))) ORDER BY '|BA' ASC  NULLS LAST;
SELECT * FROM vt0 WHERE ((NOT (((vt0.c1)GLOB(0.8805243416799253))))) ORDER BY vt0.c1  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)GLOB(0.8805243416799253))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c1)GLOB(0.8805243416799253))))) ORDER BY vt0.c1  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt0.c1)GLOB(0.8805243416799253))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c1  NULLS FIRST, vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE ((NOT (((vt0.c1)GLOB(0.8805243416799253))))) ORDER BY vt0.c1  NULLS FIRST, vt0.c0  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c1) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END))) ORDER BY CAST(((('-138547119', vt0.c1, rt1.c2)) BETWEEN ((vt0.c0, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c0, rt1.c3))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c1) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((('-138547119', vt0.c1, rt1.c2)) BETWEEN ((vt0.c0, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c0, rt1.c3))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c1) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END))) ORDER BY CAST(((('-138547119', vt0.c1, rt1.c2)) BETWEEN ((vt0.c0, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c0, rt1.c3))) AS NUMERIC)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c1) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((('-138547119', vt0.c1, rt1.c2)) BETWEEN ((vt0.c0, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c0, rt1.c3))) AS NUMERIC)  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(vt0.c0 AS TEXT)) BETWEEN (vt0.c1) AND (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END))) ORDER BY CAST(((('-138547119', vt0.c1, rt1.c2)) BETWEEN ((vt0.c0, vt0.c1, rt1.c0)) AND ((vt0.c1, rt1.c0, rt1.c3))) AS NUMERIC)  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE (((((((((CASE x''  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(((rt1.c0)>>(rt1.c1)))))OR((rt1.c0 IN ()))))OR((+ (0.7272778832793173)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE x''  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(((rt1.c0)>>(rt1.c1)))))OR((rt1.c0 IN ()))))OR((+ (0.7272778832793173)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((CASE x''  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(((rt1.c0)>>(rt1.c1)))))OR((rt1.c0 IN ()))))OR((+ (0.7272778832793173)))))OR(rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((((CASE x''  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(((rt1.c0)>>(rt1.c1)))))OR((rt1.c0 IN ()))))OR((+ (0.7272778832793173)))))OR(rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((((((CASE x''  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END)AND(((rt1.c0)>>(rt1.c1)))))OR((rt1.c0 IN ()))))OR((+ (0.7272778832793173)))))OR(rt1.c2)));
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1)OR(vt0.c1)) IN (CAST(rt1.c1 AS INTEGER)))) ORDER BY '151886779' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)OR(vt0.c1)) IN (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '151886779' DESC);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1)OR(vt0.c1)) IN (CAST(rt1.c1 AS INTEGER)))) ORDER BY '151886779' DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1)OR(vt0.c1)) IN (CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY '151886779' DESC);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1)OR(vt0.c1)) IN (CAST(rt1.c1 AS INTEGER)))) ORDER BY '151886779' DESC;
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS NUMERIC)) IS TRUE));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS NUMERIC)) IS TRUE)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CAST(rt1.c3 AS NUMERIC)) IS TRUE));
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(((vt0.c1) IS TRUE)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(((vt0.c1) IS TRUE)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c1)GLOB(((vt0.c1) IS TRUE)))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1)GLOB(((vt0.c1) IS TRUE)))) ORDER BY ((vt0.c0) BETWEEN (((vt0.c1) ISNULL)) AND (CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST;
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c1) BETWEEN (0.669188122711143) AND (vt0.c1))))) ORDER BY (- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), json_object('ls+w', LIKE(vt0.c1, vt0.c1)) DESC, (~ (((vt0.c1)<<(-1413509769))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c1) BETWEEN (0.669188122711143) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), json_object('ls+w', LIKE(vt0.c1, vt0.c1)) DESC, (~ (((vt0.c1)<<(-1413509769))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c1) BETWEEN (0.669188122711143) AND (vt0.c1))))) ORDER BY (- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), json_object('ls+w', LIKE(vt0.c1, vt0.c1)) DESC, (~ (((vt0.c1)<<(-1413509769))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c1) BETWEEN (0.669188122711143) AND (vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY (- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), json_object('ls+w', LIKE(vt0.c1, vt0.c1)) DESC, (~ (((vt0.c1)<<(-1413509769))))  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)) IN (((vt0.c1) BETWEEN (0.669188122711143) AND (vt0.c1))))) ORDER BY (- (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))*((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))), json_object('ls+w', LIKE(vt0.c1, vt0.c1)) DESC, (~ (((vt0.c1)<<(-1413509769))))  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT (vt0.c1 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt0.c1 IN (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT (vt0.c1 IN (vt0.c1))));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT (vt0.c1 IN (vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (ABS(DISTINCT (vt0.c1 IN (vt0.c1))));
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3)&(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)&(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3)&(rt1.c1)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)&(rt1.c1)) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3)&(rt1.c1)) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (NULL COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT (((NOT (NULL COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((NOT (NULL COLLATE BINARY)));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((('-138547119') ISNULL))OR(CASE rt1.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c3 THEN rt1.c0 WHEN vt0.c0 THEN 0.2655668773789853 WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY CAST(((vt0.c1) BETWEEN (rt1.c1) AND (vt0.c0)) AS TEXT)  NULLS FIRST, (((- (rt1.c1)))+('|ba')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-138547119') ISNULL))OR(CASE rt1.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c3 THEN rt1.c0 WHEN vt0.c0 THEN 0.2655668773789853 WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY CAST(((vt0.c1) BETWEEN (rt1.c1) AND (vt0.c0)) AS TEXT)  NULLS FIRST, (((- (rt1.c1)))+('|ba')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((('-138547119') ISNULL))OR(CASE rt1.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c3 THEN rt1.c0 WHEN vt0.c0 THEN 0.2655668773789853 WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY CAST(((vt0.c1) BETWEEN (rt1.c1) AND (vt0.c0)) AS TEXT)  NULLS FIRST, (((- (rt1.c1)))+('|ba')) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((('-138547119') ISNULL))OR(CASE rt1.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c3 THEN rt1.c0 WHEN vt0.c0 THEN 0.2655668773789853 WHEN rt1.c0 THEN rt1.c0 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY CAST(((vt0.c1) BETWEEN (rt1.c1) AND (vt0.c0)) AS TEXT)  NULLS FIRST, (((- (rt1.c1)))+('|ba')) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE ((((((('-138547119') ISNULL))OR(CASE rt1.c1  WHEN vt0.c1 THEN vt0.c0 ELSE rt1.c0 END)))AND(CASE WHEN rt1.c3 THEN rt1.c0 WHEN vt0.c0 THEN 0.2655668773789853 WHEN rt1.c0 THEN rt1.c0 END))) ORDER BY CAST(((vt0.c1) BETWEEN (rt1.c1) AND (vt0.c0)) AS TEXT)  NULLS FIRST, (((- (rt1.c1)))+('|ba')) ASC  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (LIKE(((rt1.c3)<=(vt0.c0)), ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)), '0'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c3)<=(vt0.c0)), ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)), '0')) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKE(((rt1.c3)<=(vt0.c0)), ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)), '0'));
SELECT SUM(count) FROM (SELECT ALL ((LIKE(((rt1.c3)<=(vt0.c0)), ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)), '0')) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (LIKE(((rt1.c3)<=(vt0.c0)), ((rt1.c3) BETWEEN (vt0.c0) AND (rt1.c1)), '0'));
SELECT * FROM vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE RTRIM THEN (+ (vt0.c0)) WHEN ((vt0.c1)<(NULL)) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c1))>=((0.22902792358293267))) THEN '' ELSE (- (vt0.c0)) END) ORDER BY (((vt0.c1 IN ()))LIKE(LIKELIHOOD(vt0.c1, 0.31904947075700685))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE RTRIM THEN (+ (vt0.c0)) WHEN ((vt0.c1)<(NULL)) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c1))>=((0.22902792358293267))) THEN '' ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))LIKE(LIKELIHOOD(vt0.c1, 0.31904947075700685))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE RTRIM THEN (+ (vt0.c0)) WHEN ((vt0.c1)<(NULL)) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c1))>=((0.22902792358293267))) THEN '' ELSE (- (vt0.c0)) END) ORDER BY (((vt0.c1 IN ()))LIKE(LIKELIHOOD(vt0.c1, 0.31904947075700685))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE RTRIM THEN (+ (vt0.c0)) WHEN ((vt0.c1)<(NULL)) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c1))>=((0.22902792358293267))) THEN '' ELSE (- (vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))LIKE(LIKELIHOOD(vt0.c1, 0.31904947075700685))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE vt0.c1 COLLATE BINARY  WHEN vt0.c1 COLLATE RTRIM THEN (+ (vt0.c0)) WHEN ((vt0.c1)<(NULL)) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c1))>=((0.22902792358293267))) THEN '' ELSE (- (vt0.c0)) END) ORDER BY (((vt0.c1 IN ()))LIKE(LIKELIHOOD(vt0.c1, 0.31904947075700685))) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(UNLIKELY(vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UNLIKELY(vt0.c1) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UNLIKELY(vt0.c1) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(UNLIKELY(vt0.c1) AS INTEGER));
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((NULL IN ()) IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((NULL IN ()) IN ()));
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ('') ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0))) NOT BETWEEN (IFNULL(vt0.c1, vt0.c0)) AND (HEX(DISTINCT vt0.c0))) ASC  NULLS LAST;
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(0.5375825255455774)))AND(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL))LIKE(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(0.5375825255455774)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))LIKE(vt0.c1))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(0.5375825255455774)))AND(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL))LIKE(vt0.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(0.5375825255455774)))AND(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOTNULL))LIKE(vt0.c1))  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((vt0.c1)OR(0.5375825255455774)))AND(vt0.c0))) NOT NULL)) ORDER BY ((((vt0.c0) NOTNULL))LIKE(vt0.c1))  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)%(vt0.c1))) IS TRUE) WHERE (UNLIKELY(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) ORDER BY ((((x'')*(rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)%(vt0.c1))) IS TRUE) ORDER BY ((((x'')*(rt1.c2))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)%(vt0.c1))) IS TRUE) WHERE (UNLIKELY(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) ORDER BY ((((x'')*(rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((UNLIKELY(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)%(vt0.c1))) IS TRUE) ORDER BY ((((x'')*(rt1.c2))) IS TRUE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 INNER JOIN vt0 ON ((((rt1.c2)%(vt0.c1))) IS TRUE) WHERE (UNLIKELY(DISTINCT ((rt1.c0) BETWEEN (rt1.c3) AND (rt1.c3)))) ORDER BY ((((x'')*(rt1.c2))) IS TRUE)  NULLS FIRST;
SELECT * FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT SUM(count) FROM (SELECT ((((rt1.c3) ISNULL)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((rt1.c3) ISNULL));
SELECT * FROM rt1 WHERE (((NULL) IS FALSE)) ORDER BY json_insert(((rt1.c3)!=(rt1.c2)), rt1.c2 COLLATE RTRIM, (~ (rt1.c2)))  NULLS LAST, 0.6982164689161463, ((NULL)<>(json_type(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY json_insert(((rt1.c3)<>(rt1.c2)), rt1.c2 COLLATE RTRIM, (~ (rt1.c2)))  NULLS LAST, 0.6982164689161463, ((NULL)<>(json_type(rt1.c0))));
SELECT * FROM rt1 WHERE (((NULL) IS FALSE)) ORDER BY json_insert(((rt1.c3)!=(rt1.c2)), rt1.c2 COLLATE RTRIM, (~ (rt1.c2)))  NULLS LAST, 0.6982164689161463, ((NULL)<>(json_type(rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((NULL) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY json_insert(((rt1.c3)<>(rt1.c2)), rt1.c2 COLLATE RTRIM, (~ (rt1.c2)))  NULLS LAST, 0.6982164689161463, ((NULL)<>(json_type(rt1.c0))));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((((((NULL) NOTNULL))AND(((NULL) IS TRUE))))AND(rt1.c3 COLLATE RTRIM)))OR(((('8>XKZ')) NOT BETWEEN ((rt1.c0)) AND ((0.8705232042053394))))))OR(rt1.c1)))AND((((rt1.c1))>((vt0.c0))))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'81a5c476')))) WHERE (((rt1.c0)GLOB(((((((((vt0.c1)OR(rt1.c0)))AND(rt1.c3)))OR('*e')))AND(vt0.c1))))) ORDER BY ((((((rt1.c3) NOT NULL))AND(CAST(rt1.c1 AS BLOB))))OR(((985775660) NOT BETWEEN (NULL) AND (vt0.c0))))  NULLS FIRST, rt1.c1 DESC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)GLOB(((((((((vt0.c1)OR(rt1.c0)))AND(rt1.c3)))OR('*e')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((((((NULL) NOTNULL))AND(((NULL) IS TRUE))))AND(rt1.c3 COLLATE RTRIM)))OR(((('8>XKZ')) NOT BETWEEN ((rt1.c0)) AND ((0.8705232042053394))))))OR(rt1.c1)))AND((((rt1.c1))>((vt0.c0))))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'81a5c476')))) ORDER BY ((((((rt1.c3) NOT NULL))AND(CAST(rt1.c1 AS BLOB))))OR(((985775660) NOT BETWEEN (NULL) AND (vt0.c0))))  NULLS FIRST, rt1.c1 DESC, NULL  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((((((NULL) NOTNULL))AND(((NULL) IS TRUE))))AND(rt1.c3 COLLATE RTRIM)))OR(((('8>XKZ')) NOT BETWEEN ((rt1.c0)) AND ((0.8705232042053394))))))OR(rt1.c1)))AND((((rt1.c1))>((vt0.c0))))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'81a5c476')))) WHERE (((rt1.c0)GLOB(((((((((vt0.c1)OR(rt1.c0)))AND(rt1.c3)))OR('*e')))AND(vt0.c1))))) ORDER BY ((((((rt1.c3) NOT NULL))AND(CAST(rt1.c1 AS BLOB))))OR(((985775660) NOT BETWEEN (NULL) AND (vt0.c0))))  NULLS FIRST, rt1.c1 DESC, NULL  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c0)GLOB(((((((((vt0.c1)OR(rt1.c0)))AND(rt1.c3)))OR('*e')))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((((((NULL) NOTNULL))AND(((NULL) IS TRUE))))AND(rt1.c3 COLLATE RTRIM)))OR(((('8>XKZ')) NOT BETWEEN ((rt1.c0)) AND ((0.8705232042053394))))))OR(rt1.c1)))AND((((rt1.c1))>((vt0.c0))))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'81a5c476')))) ORDER BY ((((((rt1.c3) NOT NULL))AND(CAST(rt1.c1 AS BLOB))))OR(((985775660) NOT BETWEEN (NULL) AND (vt0.c0))))  NULLS FIRST, rt1.c1 DESC, NULL  NULLS FIRST);
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON ((((((((((((((NULL) NOTNULL))AND(((NULL) IS TRUE))))AND(rt1.c3 COLLATE RTRIM)))OR(((('8>XKZ')) NOT BETWEEN ((rt1.c0)) AND ((0.8705232042053394))))))OR(rt1.c1)))AND((((rt1.c1))>((vt0.c0))))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (x'81a5c476')))) WHERE (((rt1.c0)GLOB(((((((((vt0.c1)OR(rt1.c0)))AND(rt1.c3)))OR('*e')))AND(vt0.c1))))) ORDER BY ((((((rt1.c3) NOT NULL))AND(CAST(rt1.c1 AS BLOB))))OR(((985775660) NOT BETWEEN (NULL) AND (vt0.c0))))  NULLS FIRST, rt1.c1 DESC, NULL  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END AS INTEGER));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY (~ (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY (~ (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (~ (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))<<(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END))) ORDER BY (~ (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))));
SELECT * FROM rt1, vt0 WHERE (CAST((((rt1.c1))<((vt0.c1))) AS BLOB)) ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)) THEN (((vt0.c1)) BETWEEN ((0.32103297052765134)) AND ((rt1.c1))) ELSE CAST(rt1.c3 AS BLOB) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1))<((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)) THEN (((vt0.c1)) BETWEEN ((0.32103297052765134)) AND ((rt1.c1))) ELSE CAST(rt1.c3 AS BLOB) END ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CAST((((rt1.c1))<((vt0.c1))) AS BLOB)) ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)) THEN (((vt0.c1)) BETWEEN ((0.32103297052765134)) AND ((rt1.c1))) ELSE CAST(rt1.c3 AS BLOB) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((((rt1.c1))<((vt0.c1))) AS BLOB)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)) THEN (((vt0.c1)) BETWEEN ((0.32103297052765134)) AND ((rt1.c1))) ELSE CAST(rt1.c3 AS BLOB) END ASC  NULLS LAST);
SELECT * FROM rt1, vt0 WHERE (CAST((((rt1.c1))<((vt0.c1))) AS BLOB)) ORDER BY CASE WHEN ((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c0)))OR(rt1.c3)) THEN (((vt0.c1)) BETWEEN ((0.32103297052765134)) AND ((rt1.c1))) ELSE CAST(rt1.c3 AS BLOB) END ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (CASE WHEN x'' THEN ((((vt0.c0)OR(rt1.c3)))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((((vt0.c0)OR(rt1.c3)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN x'' THEN ((((vt0.c0)OR(rt1.c3)))AND(rt1.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN ((((vt0.c0)OR(rt1.c3)))AND(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (CASE WHEN x'' THEN ((((vt0.c0)OR(rt1.c3)))AND(rt1.c0)) END);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND ('-1842329644')) IN ())) ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)=(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c1) AND ('-1842329644')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)==(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND ('-1842329644')) IN ())) ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)=(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0) BETWEEN (vt0.c1) AND ('-1842329644')) IN ())) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)==(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND ('-1842329644')) IN ())) ORDER BY CASE ((vt0.c1)||(vt0.c0))  WHEN ((vt0.c1)=(vt0.c0)) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (NULL);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c3)-(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)-(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c3)-(rt1.c2)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)-(rt1.c2)) COLLATE RTRIM) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c3)-(rt1.c2)) COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c1) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (rt1.c1);
SELECT * FROM rt1, vt0 WHERE ((((CAST(rt1.c3 AS INTEGER)))<((916127374))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS INTEGER)))<((916127374)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((CAST(rt1.c3 AS INTEGER)))<((916127374))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(rt1.c3 AS INTEGER)))<((916127374)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((CAST(rt1.c3 AS INTEGER)))<((916127374))));
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((rt1.c2)*(vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END END) ORDER BY ((((((rt1.c1) NOT NULL))OR(((vt0.c1)>(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((rt1.c2)*(vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c1) NOT NULL))OR(((vt0.c1)>(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((rt1.c2)*(vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END END) ORDER BY ((((((rt1.c1) NOT NULL))OR(((vt0.c1)>(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((rt1.c2)*(vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c1) NOT NULL))OR(((vt0.c1)>(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE CASE rt1.c2  WHEN rt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN ((rt1.c2)*(vt0.c0)) THEN CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c1 END END) ORDER BY ((((((rt1.c1) NOT NULL))OR(((vt0.c1)>(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, '1322677130', vt0.c1, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, '1322677130', vt0.c1, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, '1322677130', vt0.c1, vt0.c0, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, '1322677130', vt0.c1, vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (TYPEOF(DISTINCT (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, vt0.c0))<=((vt0.c1, '1322677130', vt0.c1, vt0.c0, vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)AND(rt1.c1)))GLOB(((rt1.c1)!=(rt1.c3))))) ORDER BY (((((((((rt1.c1 IN ()))AND(((rt1.c3) NOT NULL))))OR(NULL)))AND(((NULL) ISNULL))))OR((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt1.c1)))GLOB(((rt1.c1)<>(rt1.c3))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((rt1.c1 IN ()))AND(((rt1.c3) NOT NULL))))OR(NULL)))AND(((NULL) ISNULL))))OR((rt1.c2 IN ()))) ASC);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)AND(rt1.c1)))GLOB(((rt1.c1)!=(rt1.c3))))) ORDER BY (((((((((rt1.c1 IN ()))AND(((rt1.c3) NOT NULL))))OR(NULL)))AND(((NULL) ISNULL))))OR((rt1.c2 IN ()))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(rt1.c1)))GLOB(((rt1.c1)<>(rt1.c3))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((((((((rt1.c1 IN ()))AND(((rt1.c3) NOT NULL))))OR(NULL)))AND(((NULL) ISNULL))))OR((rt1.c2 IN ()))) ASC);
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)AND(rt1.c1)))GLOB(((rt1.c1)!=(rt1.c3))))) ORDER BY (((((((((rt1.c1 IN ()))AND(((rt1.c3) NOT NULL))))OR(NULL)))AND(((NULL) ISNULL))))OR((rt1.c2 IN ()))) ASC;
SELECT * FROM vt0 WHERE ('-377813295');
SELECT SUM(count) FROM (SELECT (('-377813295') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-377813295');
SELECT SUM(count) FROM (SELECT (('-377813295') IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ('-377813295');
SELECT * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1))) NOT BETWEEN ((NOT (rt1.c1))) AND (rt1.c2)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)OR(vt0.c1)))OR(vt0.c0)))GLOB(x'3853')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(vt0.c1)))OR(vt0.c0)))GLOB(x'3853'))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)OR(vt0.c1)))OR(vt0.c0)))GLOB(x'3853')));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c0)OR(vt0.c1)))OR(vt0.c0)))GLOB(x'3853'))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c0)OR(vt0.c1)))OR(vt0.c0)))GLOB(x'3853')));
SELECT ALL * FROM vt0 WHERE ((('')IS NOT(NULL))) ORDER BY (((vt0.c0 COLLATE NOCASE, ((vt0.c0)*(vt0.c0)), ((vt0.c1) IS TRUE), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((0.019598954008256064)) AND ((vt0.c1)))))<=(((vt0.c0 IN (vt0.c0)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, -9.84969911E8, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, 0.8398886018211928, vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) BETWEEN (x'') AND (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')IS NOT(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE NOCASE, ((vt0.c0)*(vt0.c0)), ((vt0.c1) IS TRUE), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((0.019598954008256064)) AND ((vt0.c1)))))<=(((vt0.c0 IN (vt0.c0)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, -9.84969911E8, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, 0.8398886018211928, vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) BETWEEN (x'') AND (vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((('')IS NOT(NULL))) ORDER BY (((vt0.c0 COLLATE NOCASE, ((vt0.c0)*(vt0.c0)), ((vt0.c1) IS TRUE), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((0.019598954008256064)) AND ((vt0.c1)))))<=(((vt0.c0 IN (vt0.c0)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, -9.84969911E8, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, 0.8398886018211928, vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) BETWEEN (x'') AND (vt0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((('')IS NOT(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 COLLATE NOCASE, ((vt0.c0)*(vt0.c0)), ((vt0.c1) IS TRUE), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((0.019598954008256064)) AND ((vt0.c1)))))<=(((vt0.c0 IN (vt0.c0)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, -9.84969911E8, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, 0.8398886018211928, vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) BETWEEN (x'') AND (vt0.c0))))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((('')IS NOT(NULL))) ORDER BY (((vt0.c0 COLLATE NOCASE, ((vt0.c0)*(vt0.c0)), ((vt0.c1) IS TRUE), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (((vt0.c1)) NOT BETWEEN ((0.019598954008256064)) AND ((vt0.c1)))))<=(((vt0.c0 IN (vt0.c0)), (((vt0.c1, vt0.c0, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, -9.84969911E8, vt0.c0, vt0.c0, vt0.c1)) AND ((vt0.c1, 0.8398886018211928, vt0.c1, vt0.c0, vt0.c0))), CASE WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)), ((vt0.c0) BETWEEN (x'') AND (vt0.c0))))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((NOT (rt1.c3)))AND(CASE rt1.c3  WHEN vt0.c0 THEN NULL END)))OR(IFNULL(DISTINCT rt1.c1, rt1.c1)))) ORDER BY ((((vt0.c0) IS FALSE))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c3)))AND(CASE rt1.c3  WHEN vt0.c0 THEN NULL END)))OR(IFNULL(DISTINCT rt1.c1, rt1.c1)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) IS FALSE))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((NOT (rt1.c3)))AND(CASE rt1.c3  WHEN vt0.c0 THEN NULL END)))OR(IFNULL(DISTINCT rt1.c1, rt1.c1)))) ORDER BY ((((vt0.c0) IS FALSE))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (rt1.c3)))AND(CASE rt1.c3  WHEN vt0.c0 THEN NULL END)))OR(IFNULL(DISTINCT rt1.c1, rt1.c1)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c0) IS FALSE))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c1)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((NOT (rt1.c3)))AND(CASE rt1.c3  WHEN vt0.c0 THEN NULL END)))OR(IFNULL(DISTINCT rt1.c1, rt1.c1)))) ORDER BY ((((vt0.c0) IS FALSE))OR(((rt1.c3) NOT BETWEEN (rt1.c1) AND (vt0.c1))));
SELECT ALL * FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END THEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END END) ORDER BY CASE rt1.c2  WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END THEN UPPER(DISTINCT rt1.c2) WHEN (((rt1.c0))<>((rt1.c3))) THEN (rt1.c1 IN ('D', rt1.c1)) WHEN NULL THEN (- (NULL)) WHEN ((rt1.c3)>(rt1.c3)) THEN ((((rt1.c3)OR(0Xffffffffabbf8d77)))OR(0X3373fd49)) WHEN (NOT (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END THEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END THEN UPPER(DISTINCT rt1.c2) WHEN (((rt1.c0))!=((rt1.c3))) THEN (rt1.c1 IN ('D', rt1.c1)) WHEN NULL THEN (- (NULL)) WHEN ((rt1.c3)>(rt1.c3)) THEN ((((rt1.c3)OR(0xffffffffabbf8d77)))OR(0X3373fd49)) WHEN (NOT (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)) END DESC);
SELECT ALL * FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END THEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END END) ORDER BY CASE rt1.c2  WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END THEN UPPER(DISTINCT rt1.c2) WHEN (((rt1.c0))<>((rt1.c3))) THEN (rt1.c1 IN ('D', rt1.c1)) WHEN NULL THEN (- (NULL)) WHEN ((rt1.c3)>(rt1.c3)) THEN ((((rt1.c3)OR(0Xffffffffabbf8d77)))OR(0X3373fd49)) WHEN (NOT (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)) END DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END THEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END END) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END THEN UPPER(DISTINCT rt1.c2) WHEN (((rt1.c0))!=((rt1.c3))) THEN (rt1.c1 IN ('D', rt1.c1)) WHEN NULL THEN (- (NULL)) WHEN ((rt1.c3)>(rt1.c3)) THEN ((((rt1.c3)OR(0xffffffffabbf8d77)))OR(0X3373fd49)) WHEN (NOT (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)) END DESC);
SELECT ALL * FROM rt1 WHERE (CASE WHEN CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c3 ELSE rt1.c3 END THEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c3 END END) ORDER BY CASE rt1.c2  WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END THEN UPPER(DISTINCT rt1.c2) WHEN (((rt1.c0))<>((rt1.c3))) THEN (rt1.c1 IN ('D', rt1.c1)) WHEN NULL THEN (- (NULL)) WHEN ((rt1.c3)>(rt1.c3)) THEN ((((rt1.c3)OR(0Xffffffffabbf8d77)))OR(0X3373fd49)) WHEN (NOT (rt1.c1)) THEN ((((rt1.c2)OR(rt1.c3)))OR(rt1.c1)) END DESC;
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CASE CAST(rt1.c1 AS BLOB)  WHEN rt1.c3 THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)) END WHERE ((((~ (x'3115'))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)&(vt0.c1))))) ORDER BY (((vt0.c1, rt1.c2, x'')) NOT BETWEEN ((((rt1.c2) IS FALSE), ((vt0.c0) NOTNULL), rt1.c2)) AND ((((rt1.c1)-(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (x'3115'))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CASE CAST(rt1.c1 AS BLOB)  WHEN rt1.c3 THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)) END ORDER BY (((vt0.c1, rt1.c2, x'')) NOT BETWEEN ((((rt1.c2) IS FALSE), ((vt0.c0) NOTNULL), rt1.c2)) AND ((((rt1.c1)-(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CASE CAST(rt1.c1 AS BLOB)  WHEN rt1.c3 THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)) END WHERE ((((~ (x'3115'))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)&(vt0.c1))))) ORDER BY (((vt0.c1, rt1.c2, x'')) NOT BETWEEN ((((rt1.c2) IS FALSE), ((vt0.c0) NOTNULL), rt1.c2)) AND ((((rt1.c1)-(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(vt0.c1)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((~ (x'3115'))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)&(vt0.c1))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON CASE CAST(rt1.c1 AS BLOB)  WHEN rt1.c3 THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)) END ORDER BY (((vt0.c1, rt1.c2, x'')) NOT BETWEEN ((((rt1.c2) IS FALSE), ((vt0.c0) NOTNULL), rt1.c2)) AND ((((rt1.c1)-(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(vt0.c1)))))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN rt1 ON CASE CAST(rt1.c1 AS BLOB)  WHEN rt1.c3 THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)) END WHERE ((((~ (x'3115'))) NOT BETWEEN (vt0.c0) AND (((vt0.c1)&(vt0.c1))))) ORDER BY (((vt0.c1, rt1.c2, x'')) NOT BETWEEN ((((rt1.c2) IS FALSE), ((vt0.c0) NOTNULL), rt1.c2)) AND ((((rt1.c1)-(rt1.c2)), ((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)), ((((rt1.c0)OR(rt1.c2)))OR(vt0.c1)))))  NULLS FIRST;
SELECT * FROM rt1 WHERE ('0.8138442232412197' COLLATE NOCASE) ORDER BY CASE (((rt1.c1))==((rt1.c3)))  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((rt1.c3) ISNULL) END ASC, '>*pT4zRF';
SELECT SUM(count) FROM (SELECT ALL (('0.8138442232412197' COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CASE (((rt1.c1))==((rt1.c3)))  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((rt1.c3) ISNULL) END ASC, '>*pT4zRF');
SELECT * FROM rt1 WHERE ('0.8138442232412197' COLLATE NOCASE) ORDER BY CASE (((rt1.c1))==((rt1.c3)))  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((rt1.c3) ISNULL) END ASC, '>*pT4zRF';
SELECT SUM(count) FROM (SELECT ALL (('0.8138442232412197' COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY CASE (((rt1.c1))==((rt1.c3)))  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((rt1.c3) ISNULL) END ASC, '>*pT4zRF');
SELECT * FROM rt1 WHERE ('0.8138442232412197' COLLATE NOCASE) ORDER BY CASE (((rt1.c1))==((rt1.c3)))  WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN ((rt1.c3) ISNULL) END ASC, '>*pT4zRF';
SELECT ALL * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)OR(((NULL)GLOB(rt1.c1)))))AND(((rt1.c2) NOT NULL)))) ORDER BY ((NULL) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)OR(((NULL)GLOB(rt1.c1)))))AND(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)OR(((NULL)GLOB(rt1.c1)))))AND(((rt1.c2) NOT NULL)))) ORDER BY ((NULL) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)OR(((NULL)GLOB(rt1.c1)))))AND(((rt1.c2) NOT NULL)))) IS TRUE)  as count FROM rt1 ORDER BY ((NULL) NOT NULL) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END)OR(((NULL)GLOB(rt1.c1)))))AND(((rt1.c2) NOT NULL)))) ORDER BY ((NULL) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c1, rt1.c2, rt1.c1))<=((rt1.c3, vt0.c1, ''))))) WHERE (((rt1.c0)*(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)*(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c1, rt1.c2, rt1.c1))<=((rt1.c3, vt0.c1, ''))))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c1, rt1.c2, rt1.c1))<=((rt1.c3, vt0.c1, ''))))) WHERE (((rt1.c0)*(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c0)*(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c1, rt1.c2, rt1.c1))<=((rt1.c3, vt0.c1, ''))))));
SELECT * FROM rt1 RIGHT OUTER JOIN vt0 ON (NOT ((((vt0.c1, rt1.c2, rt1.c1))<=((rt1.c3, vt0.c1, ''))))) WHERE (((rt1.c0)*(rt1.c0)) COLLATE NOCASE);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN CASE '1346946431'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt1.c0)) THEN CASE '1346946431'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN CASE '1346946431'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (~ (rt1.c0)) THEN CASE '1346946431'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE WHEN (~ (rt1.c0)) THEN CASE '1346946431'  WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c2 END END);
SELECT * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)) COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c1)AND(rt1.c3)))AND(rt1.c0)) COLLATE NOCASE);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN NULL THEN ((vt0.c1) IS TRUE) END) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN NULL THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN NULL THEN ((vt0.c1) IS TRUE) END) ORDER BY vt0.c0  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN NULL THEN ((vt0.c1) IS TRUE) END) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END  WHEN NULL THEN ((vt0.c1) IS TRUE) END) ORDER BY vt0.c0  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)))OR(x'')))OR(rt1.c3)))-(LIKELY(DISTINCT rt1.c0)))) ORDER BY ((((rt1.c3) NOTNULL)) ISNULL) ASC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c3 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)))OR(x'')))OR(rt1.c3)))-(LIKELY(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) NOTNULL)) ISNULL) ASC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c3 END COLLATE RTRIM DESC);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)))OR(x'')))OR(rt1.c3)))-(LIKELY(DISTINCT rt1.c0)))) ORDER BY ((((rt1.c3) NOTNULL)) ISNULL) ASC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c3 END COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)))OR(x'')))OR(rt1.c3)))-(LIKELY(DISTINCT rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) NOTNULL)) ISNULL) ASC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c3 END COLLATE RTRIM DESC);
SELECT ALL * FROM rt1 WHERE (((((((((((rt1.c2)AND(rt1.c2)))AND(rt1.c3)))OR(x'')))OR(rt1.c3)))-(LIKELY(DISTINCT rt1.c0)))) ORDER BY ((((rt1.c3) NOTNULL)) ISNULL) ASC  NULLS FIRST, CASE WHEN rt1.c2 THEN rt1.c3 END COLLATE RTRIM DESC;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1))) IS TRUE)) ORDER BY ((((rt1.c3)&(0X11d8e28))) NOT NULL) DESC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)&(0X11d8e28))) NOT NULL) DESC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1))) IS TRUE)) ORDER BY ((((rt1.c3)&(0X11d8e28))) NOT NULL) DESC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2 IN (rt1.c1))) IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)&(0X11d8e28))) NOT NULL) DESC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END) IS FALSE));
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c2 IN (rt1.c1))) IS TRUE)) ORDER BY ((((rt1.c3)&(0X11d8e28))) NOT NULL) DESC  NULLS FIRST, ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END) IS FALSE);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS TRUE)) ORDER BY UNICODE((vt0.c0 IN ())), LIKELY(((vt0.c0)<(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY UNICODE((vt0.c0 IN ())), LIKELY(((vt0.c0)<(vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS TRUE)) ORDER BY UNICODE((vt0.c0 IN ())), LIKELY(((vt0.c0)<(vt0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOT NULL)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY UNICODE((vt0.c0 IN ())), LIKELY(((vt0.c0)<(vt0.c0))) ASC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((vt0.c1) NOT NULL)) IS TRUE)) ORDER BY UNICODE((vt0.c0 IN ())), LIKELY(((vt0.c0)<(vt0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT NULL)) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT NULL)) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c1) NOT NULL)) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c1) NOT NULL)) ORDER BY ((vt0.c0) NOT NULL)  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS TEXT))LIKE(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))))) ORDER BY ((((((rt1.c3) NOTNULL))AND(0x5b4b9c8)))OR(rt1.c0))  NULLS LAST, ((LIKELY(vt0.c1))>>(((((rt1.c3)OR(rt1.c2)))OR(x'171371c921c4')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))LIKE(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c3) NOTNULL))AND(0X5b4b9c8)))OR(rt1.c0))  NULLS LAST, ((LIKELY(vt0.c1))>>(((((rt1.c3)OR(rt1.c2)))OR(x'171371c921c4')))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS TEXT))LIKE(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))))) ORDER BY ((((((rt1.c3) NOTNULL))AND(0x5b4b9c8)))OR(rt1.c0))  NULLS LAST, ((LIKELY(vt0.c1))>>(((((rt1.c3)OR(rt1.c2)))OR(x'171371c921c4')))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS TEXT))LIKE(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c3) NOTNULL))AND(0X5b4b9c8)))OR(rt1.c0))  NULLS LAST, ((LIKELY(vt0.c1))>>(((((rt1.c3)OR(rt1.c2)))OR(x'171371c921c4')))) ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((CAST(vt0.c0 AS TEXT))LIKE(((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0))))) ORDER BY ((((((rt1.c3) NOTNULL))AND(0x5b4b9c8)))OR(rt1.c0))  NULLS LAST, ((LIKELY(vt0.c1))>>(((((rt1.c3)OR(rt1.c2)))OR(x'171371c921c4')))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((4.74898756E8, vt0.c1, vt0.c0))))>=(0.016471259650238212));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((4.74898756E8, vt0.c1, vt0.c0))))>=(0.016471259650238212)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((4.74898756E8, vt0.c1, vt0.c0))))>=(0.016471259650238212));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((4.74898756E8, vt0.c1, vt0.c0))))>=(0.016471259650238212)));
SELECT ALL * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE NOCASE) ORDER BY (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((4.74898756E8, vt0.c1, vt0.c0))))>=(0.016471259650238212));
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c1 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(vt0.c1 COLLATE BINARY AS TEXT));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>(rt1.c3)))LIKE(CAST(x'1740' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(rt1.c3)))LIKE(CAST(x'1740' AS INTEGER)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>(rt1.c3)))LIKE(CAST(x'1740' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)>(rt1.c3)))LIKE(CAST(x'1740' AS INTEGER)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>(rt1.c3)))LIKE(CAST(x'1740' AS INTEGER))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_array_length(vt0.c1))) WHERE (((~ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_array_length(vt0.c1))));
SELECT ALL * FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_array_length(vt0.c1))) WHERE (((~ (rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (rt1.c1)) IN ())) IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((rt1.c0 COLLATE NOCASE) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (json_array_length(vt0.c1))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((((~ ('')))AND(((((((((vt0.c0)OR(0Xffffffffc306f6d6)))OR(rt1.c1)))AND(rt1.c1)))AND(vt0.c1)))))OR((vt0.c1 IN ()))) WHERE (((((rt1.c2) NOTNULL))>=(CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c3 END))) ORDER BY ((((rt1.c3)/(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(-138547119 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL))>=(CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((((~ ('')))AND(((((((((vt0.c0)OR(0Xffffffffc306f6d6)))OR(rt1.c1)))AND(rt1.c1)))AND(vt0.c1)))))OR((vt0.c1 IN ()))) ORDER BY ((((rt1.c3)/(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(-138547119 AS REAL))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((((~ ('')))AND(((((((((vt0.c0)OR(0Xffffffffc306f6d6)))OR(rt1.c1)))AND(rt1.c1)))AND(vt0.c1)))))OR((vt0.c1 IN ()))) WHERE (((((rt1.c2) NOTNULL))>=(CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c3 END))) ORDER BY ((((rt1.c3)/(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(-138547119 AS REAL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL))>=(CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c3 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON (((((~ ('')))AND(((((((((vt0.c0)OR(0Xffffffffc306f6d6)))OR(rt1.c1)))AND(rt1.c1)))AND(vt0.c1)))))OR((vt0.c1 IN ()))) ORDER BY ((((rt1.c3)/(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(-138547119 AS REAL))) DESC);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON (((((~ ('')))AND(((((((((vt0.c0)OR(0Xffffffffc306f6d6)))OR(rt1.c1)))AND(rt1.c1)))AND(vt0.c1)))))OR((vt0.c1 IN ()))) WHERE (((((rt1.c2) NOTNULL))>=(CASE WHEN vt0.c0 THEN rt1.c3 ELSE rt1.c3 END))) ORDER BY ((((rt1.c3)/(vt0.c0))) NOT BETWEEN ((NOT (vt0.c0))) AND (CAST(-138547119 AS REAL))) DESC;
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN (((x'')||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN (((x'')||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN (((x'')||(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c1 COLLATE BINARY IN (((x'')||(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((vt0.c1 COLLATE BINARY IN (((x'')||(vt0.c0)))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c2))) COLLATE RTRIM) ORDER BY ((rt1.c2)IS(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS LAST, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)IS(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS LAST, rt1.c2 ASC);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c2))) COLLATE RTRIM) ORDER BY ((rt1.c2)IS(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS LAST, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c2))) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c2)IS(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS LAST, rt1.c2 ASC);
SELECT ALL * FROM rt1 WHERE ((((rt1.c0, rt1.c3, rt1.c2, rt1.c0, rt1.c3)) BETWEEN ((rt1.c3, rt1.c0, rt1.c3, rt1.c0, rt1.c1)) AND ((rt1.c1, rt1.c1, rt1.c3, rt1.c2, rt1.c2))) COLLATE RTRIM) ORDER BY ((rt1.c2)IS(((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) DESC  NULLS LAST, rt1.c2 ASC;
SELECT * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (rt1.c0) AND (((rt1.c1)==(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (rt1.c0) AND (((rt1.c1)=(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (rt1.c0) AND (((rt1.c1)==(rt1.c1)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (rt1.c0) AND (((rt1.c1)=(rt1.c1))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2)))) NOT BETWEEN (rt1.c0) AND (((rt1.c1)==(rt1.c1)))));
SELECT * FROM vt0 INNER JOIN rt1 ON CASE WHEN 0.3369720916402553 THEN ((rt1.c1) NOT NULL) ELSE CAST(rt1.c0 AS BLOB) END WHERE ((((0.23063055033118174 IN (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND ('-0.0'))) ORDER BY ((json_array_length(rt1.c2, rt1.c1)) BETWEEN ((+ (vt0.c0))) AND ((rt1.c3 IN (rt1.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0.23063055033118174 IN (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND ('-0.0'))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE WHEN 0.3369720916402553 THEN ((rt1.c1) NOT NULL) ELSE CAST(rt1.c0 AS BLOB) END ORDER BY ((json_array_length(rt1.c2, rt1.c1)) BETWEEN ((+ (vt0.c0))) AND ((rt1.c3 IN (rt1.c1, vt0.c0)))));
SELECT * FROM vt0 INNER JOIN rt1 ON CASE WHEN 0.3369720916402553 THEN ((rt1.c1) NOT NULL) ELSE CAST(rt1.c0 AS BLOB) END WHERE ((((0.23063055033118174 IN (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND ('-0.0'))) ORDER BY ((json_array_length(rt1.c2, rt1.c1)) BETWEEN ((+ (vt0.c0))) AND ((rt1.c3 IN (rt1.c1, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((0.23063055033118174 IN (vt0.c1))) NOT BETWEEN (TRIM(vt0.c0)) AND ('-0.0'))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE WHEN 0.3369720916402553 THEN ((rt1.c1) NOT NULL) ELSE CAST(rt1.c0 AS BLOB) END ORDER BY ((json_array_length(rt1.c2, rt1.c1)) BETWEEN ((+ (vt0.c0))) AND ((rt1.c3 IN (rt1.c1, vt0.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c0)-(vt0.c0))) ORDER BY (((+ (rt1.c3)))<(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)-(vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((+ (rt1.c3)))<(((vt0.c1) NOTNULL))));
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c0)-(vt0.c0))) ORDER BY (((+ (rt1.c3)))<(((vt0.c1) NOTNULL)));
SELECT SUM(count) FROM (SELECT ((((rt1.c0)-(vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((+ (rt1.c3)))<(((vt0.c1) NOTNULL))));
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c0)-(vt0.c0))) ORDER BY (((+ (rt1.c3)))<(((vt0.c1) NOTNULL)));
SELECT ALL * FROM rt1 WHERE (CHAR(rt1.c0, rt1.c0 COLLATE BINARY, (('')LIKE(rt1.c1)))) ORDER BY ((((UNLIKELY(DISTINCT rt1.c1))AND((~ (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt1.c0, rt1.c0 COLLATE BINARY, (('')LIKE(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((((UNLIKELY(DISTINCT rt1.c1))AND((~ (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CHAR(rt1.c0, rt1.c0 COLLATE BINARY, (('')LIKE(rt1.c1)))) ORDER BY ((((UNLIKELY(DISTINCT rt1.c1))AND((~ (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CHAR(rt1.c0, rt1.c0 COLLATE BINARY, (('')LIKE(rt1.c1)))) IS TRUE)  as count FROM rt1 ORDER BY ((((UNLIKELY(DISTINCT rt1.c1))AND((~ (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB)))  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (CHAR(rt1.c0, rt1.c0 COLLATE BINARY, (('')LIKE(rt1.c1)))) ORDER BY ((((UNLIKELY(DISTINCT rt1.c1))AND((~ (rt1.c0)))))AND(CAST(rt1.c2 AS BLOB)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)%(NULL)) END) ORDER BY ((((NULL)AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)%(NULL)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)%(NULL)) END) ORDER BY ((((NULL)AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)%(NULL)) END) IS TRUE)  as count FROM vt0 ORDER BY ((((NULL)AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) THEN ((vt0.c0)%(NULL)) END) ORDER BY ((((NULL)AND(vt0.c1 COLLATE NOCASE)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(LOWER(rt1.c3))) ORDER BY ((((rt1.c3) NOT NULL)) NOT BETWEEN ((((rt1.c0, x'', rt1.c2, rt1.c3, rt1.c1))==((rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c1)))) AND (((rt1.c2)GLOB(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LOWER(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) NOT NULL)) NOT BETWEEN ((((rt1.c0, x'', rt1.c2, rt1.c3, rt1.c1))==((rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c1)))) AND (((rt1.c2)GLOB(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(LOWER(rt1.c3))) ORDER BY ((((rt1.c3) NOT NULL)) NOT BETWEEN ((((rt1.c0, x'', rt1.c2, rt1.c3, rt1.c1))==((rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c1)))) AND (((rt1.c2)GLOB(rt1.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((LOWER(LOWER(rt1.c3))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3) NOT NULL)) NOT BETWEEN ((((rt1.c0, x'', rt1.c2, rt1.c3, rt1.c1))==((rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c1)))) AND (((rt1.c2)GLOB(rt1.c0)))) DESC);
SELECT ALL COUNT(*) FROM rt1 WHERE (LOWER(LOWER(rt1.c3))) ORDER BY ((((rt1.c3) NOT NULL)) NOT BETWEEN ((((rt1.c0, x'', rt1.c2, rt1.c3, rt1.c1))==((rt1.c2, rt1.c0, rt1.c0, rt1.c2, rt1.c1)))) AND (((rt1.c2)GLOB(rt1.c0)))) DESC;
SELECT * FROM vt0, rt1 WHERE (((((NOT (rt1.c0)), CAST(rt1.c1 AS INTEGER), (~ (rt1.c0))))<>((((rt1.c2) NOT NULL), (((rt1.c2, rt1.c3, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, vt0.c1, rt1.c2))), ((rt1.c0)=(x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt1.c0)), CAST(rt1.c1 AS INTEGER), (~ (rt1.c0))))!=((((rt1.c2) NOT NULL), (((rt1.c2, rt1.c3, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, vt0.c1, rt1.c2))), ((rt1.c0)==(x'')))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((NOT (rt1.c0)), CAST(rt1.c1 AS INTEGER), (~ (rt1.c0))))<>((((rt1.c2) NOT NULL), (((rt1.c2, rt1.c3, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, vt0.c1, rt1.c2))), ((rt1.c0)=(x''))))));
SELECT SUM(count) FROM (SELECT ALL ((((((NOT (rt1.c0)), CAST(rt1.c1 AS INTEGER), (~ (rt1.c0))))!=((((rt1.c2) NOT NULL), (((rt1.c2, rt1.c3, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, vt0.c1, rt1.c2))), ((rt1.c0)==(x'')))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (((((NOT (rt1.c0)), CAST(rt1.c1 AS INTEGER), (~ (rt1.c0))))<>((((rt1.c2) NOT NULL), (((rt1.c2, rt1.c3, rt1.c0)) NOT BETWEEN ((vt0.c0, rt1.c1, rt1.c3)) AND ((rt1.c2, vt0.c1, rt1.c2))), ((rt1.c0)=(x''))))));
SELECT ALL * FROM rt1, vt0 WHERE (((LAST_INSERT_ROWID())*(((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())*(((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((LAST_INSERT_ROWID())*(((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((LAST_INSERT_ROWID())*(((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((LAST_INSERT_ROWID())*(((vt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((vt0.c1)==(rt1.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND(((vt0.c1)==(rt1.c0)))))AND(x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((vt0.c1)==(rt1.c0)))))AND(x'')));
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS REAL))AND(((vt0.c1)==(rt1.c0)))))AND(x''))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((CAST(vt0.c0 AS REAL))AND(((vt0.c1)==(rt1.c0)))))AND(x'')));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN vt0.c1 THEN rt1.c1 END AS INTEGER)) ORDER BY json_type(((rt1.c2)IS(rt1.c2)))  NULLS FIRST, CAST(UNLIKELY(vt0.c1) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN rt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY json_type(((rt1.c2)IS(rt1.c2)))  NULLS FIRST, CAST(UNLIKELY(vt0.c1) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN vt0.c1 THEN rt1.c1 END AS INTEGER)) ORDER BY json_type(((rt1.c2)IS(rt1.c2)))  NULLS FIRST, CAST(UNLIKELY(vt0.c1) AS NUMERIC)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt0.c1 THEN rt1.c1 END AS INTEGER)) IS TRUE)  as count FROM vt0, rt1 ORDER BY json_type(((rt1.c2)IS(rt1.c2)))  NULLS FIRST, CAST(UNLIKELY(vt0.c1) AS NUMERIC)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST(CASE WHEN vt0.c1 THEN rt1.c1 END AS INTEGER)) ORDER BY json_type(((rt1.c2)IS(rt1.c2)))  NULLS FIRST, CAST(UNLIKELY(vt0.c1) AS NUMERIC)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) BETWEEN (NULLIF(DISTINCT rt1.c2, '')) AND ('-75455879'))) ORDER BY ((((((rt1.c2)-(rt1.c3)))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (NULLIF(DISTINCT rt1.c2, '')) AND ('-75455879'))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)-(rt1.c3)))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) BETWEEN (NULLIF(DISTINCT rt1.c2, '')) AND ('-75455879'))) ORDER BY ((((((rt1.c2)-(rt1.c3)))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c1) BETWEEN (NULLIF(DISTINCT rt1.c2, '')) AND ('-75455879'))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)-(rt1.c3)))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c1 AS TEXT))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c1) BETWEEN (NULLIF(DISTINCT rt1.c2, '')) AND ('-75455879'))) ORDER BY ((((((rt1.c2)-(rt1.c3)))OR(rt1.c0 COLLATE RTRIM)))OR(CAST(rt1.c1 AS TEXT))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1, vt0.c1, rt1.c0))<=((rt1.c3, rt1.c1, rt1.c2))) IN (HEX(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1, vt0.c1, rt1.c0))<=((rt1.c3, rt1.c1, rt1.c2))) IN (HEX(DISTINCT rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1, vt0.c1, rt1.c0))<=((rt1.c3, rt1.c1, rt1.c2))) IN (HEX(DISTINCT rt1.c1))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c1, vt0.c1, rt1.c0))<=((rt1.c3, rt1.c1, rt1.c2))) IN (HEX(DISTINCT rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1, vt0.c1, rt1.c0))<=((rt1.c3, rt1.c1, rt1.c2))) IN (HEX(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((+ (rt1.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.8285800344020444 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.8285800344020444 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((+ (rt1.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.8285800344020444 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.8285800344020444 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((+ (rt1.c1))) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (0.8285800344020444 COLLATE NOCASE)));
SELECT * FROM rt1 WHERE (((-9.84969911E8)&(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY '' ASC, ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0))) BETWEEN (((rt1.c1)<<(rt1.c2))) AND ((rt1.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-9.84969911E8)&(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '' ASC, ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0))) BETWEEN (((rt1.c1)<<(rt1.c2))) AND ((rt1.c3 IN ())))  NULLS LAST);
SELECT * FROM rt1 WHERE (((-9.84969911E8)&(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY '' ASC, ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0))) BETWEEN (((rt1.c1)<<(rt1.c2))) AND ((rt1.c3 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((-9.84969911E8)&(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) IS TRUE)  as count FROM rt1 ORDER BY '' ASC, ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0))) BETWEEN (((rt1.c1)<<(rt1.c2))) AND ((rt1.c3 IN ())))  NULLS LAST);
SELECT * FROM rt1 WHERE (((-9.84969911E8)&(((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1))))) ORDER BY '' ASC, ((((((rt1.c1)OR(rt1.c3)))OR(rt1.c0))) BETWEEN (((rt1.c1)<<(rt1.c2))) AND ((rt1.c3 IN ())))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(x'7a28')))OR(((vt0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(x'7a28')))OR(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(x'7a28')))OR(((vt0.c1)IS(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(x'7a28')))OR(((vt0.c1)IS(vt0.c1))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((vt0.c0)OR(x'7a28')))OR(((vt0.c1)IS(vt0.c1)))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)|(vt0.c0)) THEN 0.9125491622824654 WHEN rt1.c0 THEN 0.8533368768375719 WHEN ((((NULL)AND(rt1.c3)))AND(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c0) ISNULL) THEN ((vt0.c1)LIKE(rt1.c3)) WHEN rt1.c2 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN rt1.c2 END END) ORDER BY ((rt1.c1) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)|(vt0.c0)) THEN 0.9125491622824654 WHEN rt1.c0 THEN 0.8533368768375719 WHEN ((((NULL)AND(rt1.c3)))AND(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c0) ISNULL) THEN ((vt0.c1)LIKE(rt1.c3)) WHEN rt1.c2 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN rt1.c2 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1) IS FALSE));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)|(vt0.c0)) THEN 0.9125491622824654 WHEN rt1.c0 THEN 0.8533368768375719 WHEN ((((NULL)AND(rt1.c3)))AND(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c0) ISNULL) THEN ((vt0.c1)LIKE(rt1.c3)) WHEN rt1.c2 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN rt1.c2 END END) ORDER BY ((rt1.c1) IS FALSE);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((rt1.c2)|(vt0.c0)) THEN 0.9125491622824654 WHEN rt1.c0 THEN 0.8533368768375719 WHEN ((((NULL)AND(rt1.c3)))AND(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c0) ISNULL) THEN ((vt0.c1)LIKE(rt1.c3)) WHEN rt1.c2 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN rt1.c2 END END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1) IS FALSE));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN ((rt1.c2)|(vt0.c0)) THEN 0.9125491622824654 WHEN rt1.c0 THEN 0.8533368768375719 WHEN ((((NULL)AND(rt1.c3)))AND(rt1.c0)) THEN (+ (rt1.c0)) WHEN ((rt1.c0) ISNULL) THEN ((vt0.c1)LIKE(rt1.c3)) WHEN rt1.c2 COLLATE NOCASE THEN CASE WHEN vt0.c1 THEN rt1.c2 END END) ORDER BY ((rt1.c1) IS FALSE);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c1)OR(((rt1.c3)||(vt0.c1)))))OR(((rt1.c1)-(rt1.c2)))) WHERE (SUBSTR((- (vt0.c0)), ((x'') NOT NULL))) ORDER BY vt0.c0 DESC  NULLS FIRST, (+ ((((x'')) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))) DESC, ((vt0.c0 IN (vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (vt0.c0)), ((x'') NOT NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((rt1.c1)OR(((rt1.c3)||(vt0.c1)))))OR(((rt1.c1)-(rt1.c2)))) ORDER BY vt0.c0 DESC  NULLS FIRST, (+ ((((x'')) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))) DESC, ((vt0.c0 IN (vt0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c1)OR(((rt1.c3)||(vt0.c1)))))OR(((rt1.c1)-(rt1.c2)))) WHERE (SUBSTR((- (vt0.c0)), ((x'') NOT NULL))) ORDER BY vt0.c0 DESC  NULLS FIRST, (+ ((((x'')) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))) DESC, ((vt0.c0 IN (vt0.c1)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((SUBSTR((- (vt0.c0)), ((x'') NOT NULL))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON ((((rt1.c1)OR(((rt1.c3)||(vt0.c1)))))OR(((rt1.c1)-(rt1.c2)))) ORDER BY vt0.c0 DESC  NULLS FIRST, (+ ((((x'')) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))) DESC, ((vt0.c0 IN (vt0.c1)) IN ())  NULLS FIRST);
SELECT COUNT(*) FROM vt0 INNER JOIN rt1 ON ((((rt1.c1)OR(((rt1.c3)||(vt0.c1)))))OR(((rt1.c1)-(rt1.c2)))) WHERE (SUBSTR((- (vt0.c0)), ((x'') NOT NULL))) ORDER BY vt0.c0 DESC  NULLS FIRST, (+ ((((x'')) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))) DESC, ((vt0.c0 IN (vt0.c1)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON HEX(DISTINCT vt0.c1) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON HEX(DISTINCT vt0.c1));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON HEX(DISTINCT vt0.c1) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON HEX(DISTINCT vt0.c1));
SELECT ALL COUNT(*) FROM rt1 LEFT OUTER JOIN vt0 ON HEX(DISTINCT vt0.c1) WHERE (NULL);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c0 AS NUMERIC)) ISNULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CAST(vt0.c0 AS NUMERIC)) ISNULL));
SELECT COUNT(*) FROM vt0 WHERE ((0X615404ec IN ())) ORDER BY ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))AND('')))OR((((vt0.c1, 0.4313691586693955, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, x''))))), (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0X615404ec IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))AND('')))OR((((vt0.c1, 0.4313691586693955, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, x''))))), (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((0X615404ec IN ())) ORDER BY ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))AND('')))OR((((vt0.c1, 0.4313691586693955, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, x''))))), (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((0X615404ec IN ())) IS TRUE)  as count FROM vt0 ORDER BY ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))AND('')))OR((((vt0.c1, 0.4313691586693955, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, x''))))), (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE ((0X615404ec IN ())) ORDER BY ((((((NULL) BETWEEN (vt0.c1) AND (vt0.c1)))AND('')))OR((((vt0.c1, 0.4313691586693955, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, x''))))), (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((0.23063055033118174) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (x'5fb074209ddc') AND ((rt1.c0 IN (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((0.23063055033118174) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (x'5fb074209ddc') AND ((rt1.c0 IN (NULL)))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((0.23063055033118174) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (x'5fb074209ddc') AND ((rt1.c0 IN (NULL)))) DESC;
SELECT SUM(count) FROM (SELECT (((NOT (rt1.c0 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((0.23063055033118174) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (x'5fb074209ddc') AND ((rt1.c0 IN (NULL)))) DESC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((NOT (rt1.c0 COLLATE NOCASE))) ORDER BY ((((0.23063055033118174) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (x'5fb074209ddc') AND ((rt1.c0 IN (NULL)))) DESC;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>>(DATE(vt0.c1, vt0.c1, vt0.c0)))) ORDER BY ((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN 0.7785739836971423 END)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0)&(vt0.c0)))))OR(((vt0.c1) NOTNULL))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((NULL))))) ASC, ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>>(DATE(vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN 0.7785739836971423 END)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0)&(vt0.c0)))))OR(((vt0.c1) NOTNULL))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((NULL))))) ASC, ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>>(DATE(vt0.c1, vt0.c1, vt0.c0)))) ORDER BY ((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN 0.7785739836971423 END)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0)&(vt0.c0)))))OR(((vt0.c1) NOTNULL))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((NULL))))) ASC, ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)>>(DATE(vt0.c1, vt0.c1, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY ((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN 0.7785739836971423 END)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0)&(vt0.c0)))))OR(((vt0.c1) NOTNULL))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((NULL))))) ASC, ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)>>(DATE(vt0.c1, vt0.c1, vt0.c0)))) ORDER BY ((((((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN 0.7785739836971423 END)OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0)&(vt0.c0)))))OR(((vt0.c1) NOTNULL))))OR((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((NULL))))) ASC, ((((vt0.c0)||(vt0.c0))) IS TRUE) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((((((((('!HA貟')|(vt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR((NULL IN ()))))AND('^VR_o')))AND(((((rt1.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((rt1.c0) NOT NULL))))OR(vt0.c0))) ORDER BY ((((((rt1.c2) NOT BETWEEN ('㷅?qu') AND (rt1.c1)))OR(((0.7662273626982236) BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(rt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((('!HA貟')|(vt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR((NULL IN ()))))AND('^VR_o')))AND(((((rt1.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((rt1.c0) NOT NULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c2) NOT BETWEEN ('㷅?qu') AND (rt1.c1)))OR(((0.7662273626982236) BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(rt1.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((((((((('!HA貟')|(vt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR((NULL IN ()))))AND('^VR_o')))AND(((((rt1.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((rt1.c0) NOT NULL))))OR(vt0.c0))) ORDER BY ((((((rt1.c2) NOT BETWEEN ('㷅?qu') AND (rt1.c1)))OR(((0.7662273626982236) BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(rt1.c1 AS REAL)));
SELECT SUM(count) FROM (SELECT ALL (((((((((((((((('!HA貟')|(vt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR((NULL IN ()))))AND('^VR_o')))AND(((((rt1.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((rt1.c0) NOT NULL))))OR(vt0.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((rt1.c2) NOT BETWEEN ('㷅?qu') AND (rt1.c1)))OR(((0.7662273626982236) BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(rt1.c1 AS REAL))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((((((((((((('!HA貟')|(vt0.c1)))AND(rt1.c0 COLLATE BINARY)))OR((NULL IN ()))))AND('^VR_o')))AND(((((rt1.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((rt1.c0) NOT NULL))))OR(vt0.c0))) ORDER BY ((((((rt1.c2) NOT BETWEEN ('㷅?qu') AND (rt1.c1)))OR(((0.7662273626982236) BETWEEN (rt1.c1) AND (rt1.c0)))))OR(CAST(rt1.c1 AS REAL)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((x'') IS TRUE)) ORDER BY (NOT (((rt1.c3)>=(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c3)>=(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((x'') IS TRUE)) ORDER BY (NOT (((rt1.c3)>=(rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((x'') IS TRUE)) IS TRUE)  as count FROM rt1 ORDER BY (NOT (((rt1.c3)>=(rt1.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((x'') IS TRUE)) ORDER BY (NOT (((rt1.c3)>=(rt1.c0)))) DESC  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE (((((rt1.c3)>=(rt1.c2)))==((- (rt1.c3))))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)>=(rt1.c2)))==((- (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3)>=(rt1.c2)))==((- (rt1.c3))))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)>=(rt1.c2)))==((- (rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY CAST(rt1.c1 AS REAL) COLLATE NOCASE);
SELECT ALL * FROM rt1 WHERE (((((rt1.c3)>=(rt1.c2)))==((- (rt1.c3))))) ORDER BY CAST(rt1.c1 AS REAL) COLLATE NOCASE;
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c3);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((vt0.c0)OR(rt1.c1)))OR(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt1.c1)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((vt0.c0)OR(rt1.c1)))OR(rt1.c1)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(rt1.c1)))OR(rt1.c1)) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((((vt0.c0)OR(rt1.c1)))OR(rt1.c1)) IN ()));
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY vt0.c1 DESC, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c1 DESC, rt1.c2 ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY vt0.c1 DESC, rt1.c2 ASC;
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM vt0, rt1 ORDER BY vt0.c1 DESC, rt1.c2 ASC);
SELECT COUNT(*) FROM vt0, rt1 WHERE (rt1.c2) ORDER BY vt0.c1 DESC, rt1.c2 ASC;
SELECT ALL * FROM rt1, vt0 WHERE (CASE STRFTIME(vt0.c0, vt0.c0, vt0.c1)  WHEN COALESCE(rt1.c3, rt1.c2, rt1.c2, rt1.c1) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN ((rt1.c2)>=(rt1.c1)) THEN ((((((((rt1.c0)OR(rt1.c3)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) END) ORDER BY ((vt0.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE STRFTIME(vt0.c0, vt0.c0, vt0.c1)  WHEN COALESCE(rt1.c3, rt1.c2, rt1.c2, rt1.c1) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN ((rt1.c2)>=(rt1.c1)) THEN ((((((((rt1.c0)OR(rt1.c3)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (CASE STRFTIME(vt0.c0, vt0.c0, vt0.c1)  WHEN COALESCE(rt1.c3, rt1.c2, rt1.c2, rt1.c1) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN ((rt1.c2)>=(rt1.c1)) THEN ((((((((rt1.c0)OR(rt1.c3)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) END) ORDER BY ((vt0.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1))) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE STRFTIME(vt0.c0, vt0.c0, vt0.c1)  WHEN COALESCE(rt1.c3, rt1.c2, rt1.c2, rt1.c1) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN ((rt1.c2)>=(rt1.c1)) THEN ((((((((rt1.c0)OR(rt1.c3)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((vt0.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1))) ISNULL)  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (CASE STRFTIME(vt0.c0, vt0.c0, vt0.c1)  WHEN COALESCE(rt1.c3, rt1.c2, rt1.c2, rt1.c1) THEN SQLITE_COMPILEOPTION_GET(vt0.c0) WHEN ((rt1.c2)>=(rt1.c1)) THEN ((((((((rt1.c0)OR(rt1.c3)))OR(vt0.c1)))OR(vt0.c0)))OR(vt0.c1)) WHEN ((((((((rt1.c1)OR(rt1.c1)))AND(vt0.c0)))OR(rt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c0 AS NUMERIC) END) ORDER BY ((vt0.c1) NOT BETWEEN (rt1.c1) AND (vt0.c1)) COLLATE RTRIM  NULLS FIRST, ((((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt0.c1))) ISNULL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((('80579696')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((('80579696')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('80579696')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((('80579696')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((('80579696')) NOT BETWEEN ((((vt0.c0)AND(vt0.c0)))) AND ((vt0.c0))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS BLOB) IN ())) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((CAST(vt0.c0 AS BLOB) IN ()));
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(vt0.c1)) DESC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(vt0.c1)) DESC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(vt0.c1)) DESC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(vt0.c1)) DESC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt0 WHERE (NULL) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))-(vt0.c1)) DESC, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY;
SELECT COUNT(*) FROM vt0 WHERE (((9.2204047E7) BETWEEN (((vt0.c1)%(vt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY CASE WHEN (- (vt0.c0)) THEN ((x'')+(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((9.2204047E7) BETWEEN (((vt0.c1)%(vt0.c1))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN ((x'')+(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((9.2204047E7) BETWEEN (((vt0.c1)%(vt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY CASE WHEN (- (vt0.c0)) THEN ((x'')+(vt0.c0)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((9.2204047E7) BETWEEN (((vt0.c1)%(vt0.c1))) AND ((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN (- (vt0.c0)) THEN ((x'')+(vt0.c0)) END DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((9.2204047E7) BETWEEN (((vt0.c1)%(vt0.c1))) AND ((vt0.c0 IN ())))) ORDER BY CASE WHEN (- (vt0.c0)) THEN ((x'')+(vt0.c0)) END DESC  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE (vt0.c1 IN (vt0.c0, vt0.c1))  WHEN ((vt0.c1)*(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN NULL THEN NULL WHEN ((vt0.c1) NOT NULL) THEN (~ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN (vt0.c0, vt0.c1))  WHEN ((vt0.c1)*(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN NULL THEN NULL WHEN ((vt0.c1) NOT NULL) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c1 IN (vt0.c0, vt0.c1))  WHEN ((vt0.c1)*(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN NULL THEN NULL WHEN ((vt0.c1) NOT NULL) THEN (~ (vt0.c1)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c1 IN (vt0.c0, vt0.c1))  WHEN ((vt0.c1)*(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN NULL THEN NULL WHEN ((vt0.c1) NOT NULL) THEN (~ (vt0.c1)) END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (vt0.c1 IN (vt0.c0, vt0.c1))  WHEN ((vt0.c1)*(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN NULL THEN NULL WHEN ((vt0.c1) NOT NULL) THEN (~ (vt0.c1)) END);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c3)>=(vt0.c1))))>=((TRIM(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)>=(vt0.c1))))>=((TRIM(rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c3)>=(vt0.c1))))>=((TRIM(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((((rt1.c3)>=(vt0.c1))))>=((TRIM(rt1.c3))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c3)>=(vt0.c1))))>=((TRIM(rt1.c3)))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN (rt1.c2 IN (rt1.c2)) THEN NULL WHEN (((rt1.c0))=((rt1.c0))) THEN ((rt1.c0)>>(vt0.c1)) WHEN highlight(rt1.c2, rt1.c3, rt1.c1, 0.35814800886437037) THEN ((((rt1.c2)AND(rt1.c0)))OR(vt0.c1)) ELSE vt0.c1 END) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN ((((NULL))<=((vt0.c1)))) AND (((rt1.c2)+(rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN (rt1.c2)) THEN NULL WHEN (((rt1.c0))=((rt1.c0))) THEN ((rt1.c0)>>(vt0.c1)) WHEN highlight(rt1.c2, rt1.c3, rt1.c1, 0.35814800886437037) THEN ((((rt1.c2)AND(rt1.c0)))OR(vt0.c1)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN ((((NULL))<=((vt0.c1)))) AND (((rt1.c2)+(rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN (rt1.c2 IN (rt1.c2)) THEN NULL WHEN (((rt1.c0))=((rt1.c0))) THEN ((rt1.c0)>>(vt0.c1)) WHEN highlight(rt1.c2, rt1.c3, rt1.c1, 0.35814800886437037) THEN ((((rt1.c2)AND(rt1.c0)))OR(vt0.c1)) ELSE vt0.c1 END) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN ((((NULL))<=((vt0.c1)))) AND (((rt1.c2)+(rt1.c3)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (rt1.c2 IN (rt1.c2)) THEN NULL WHEN (((rt1.c0))=((rt1.c0))) THEN ((rt1.c0)>>(vt0.c1)) WHEN highlight(rt1.c2, rt1.c3, rt1.c1, 0.35814800886437037) THEN ((((rt1.c2)AND(rt1.c0)))OR(vt0.c1)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN ((((NULL))<=((vt0.c1)))) AND (((rt1.c2)+(rt1.c3)))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CASE WHEN (rt1.c2 IN (rt1.c2)) THEN NULL WHEN (((rt1.c0))=((rt1.c0))) THEN ((rt1.c0)>>(vt0.c1)) WHEN highlight(rt1.c2, rt1.c3, rt1.c1, 0.35814800886437037) THEN ((((rt1.c2)AND(rt1.c0)))OR(vt0.c1)) ELSE vt0.c1 END) ORDER BY ((CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN ((((NULL))<=((vt0.c1)))) AND (((rt1.c2)+(rt1.c3)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((1356926314)+(rt1.c0))))>((((rt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((1356926314)+(rt1.c0))))>((((rt1.c0) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((1356926314)+(rt1.c0))))>((((rt1.c0) NOT NULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((((1356926314)+(rt1.c0))))>((((rt1.c0) NOT NULL))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((1356926314)+(rt1.c0))))>((((rt1.c0) NOT NULL)))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c2 WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c2);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c2 WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c1)) COLLATE BINARY) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c2);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c2 WHERE ((+ (rt1.c1)) COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c3)IS NOT(vt0.c1)))=(CAST(vt0.c0 AS TEXT)))) ORDER BY (- ((((-35499592))<=((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT(vt0.c1)))==(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- ((((-35499592))<=((rt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c3)IS NOT(vt0.c1)))=(CAST(vt0.c0 AS TEXT)))) ORDER BY (- ((((-35499592))<=((rt1.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3)IS NOT(vt0.c1)))==(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- ((((-35499592))<=((rt1.c0)))))  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE (((((rt1.c3)IS NOT(vt0.c1)))=(CAST(vt0.c0 AS TEXT)))) ORDER BY (- ((((-35499592))<=((rt1.c0)))))  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((((('&x-Zsd''k?')AND(rt1.c1)))OR(rt1.c1)))>=(TRIM(rt1.c0, rt1.c3))));
SELECT SUM(count) FROM (SELECT (((((((('&x-Zsd''k?')AND(rt1.c1)))OR(rt1.c1)))>=(TRIM(rt1.c0, rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((('&x-Zsd''k?')AND(rt1.c1)))OR(rt1.c1)))>=(TRIM(rt1.c0, rt1.c3))));
SELECT SUM(count) FROM (SELECT (((((((('&x-Zsd''k?')AND(rt1.c1)))OR(rt1.c1)))>=(TRIM(rt1.c0, rt1.c3)))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((((('&x-Zsd''k?')AND(rt1.c1)))OR(rt1.c1)))>=(TRIM(rt1.c0, rt1.c3))));
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c1) ORDER BY CASE WHEN (((rt1.c0, vt0.c1, vt0.c0))<((rt1.c2, rt1.c2, vt0.c0))) THEN ((rt1.c1) IS FALSE) END, (CAST(0xffffffffabbfb9e9 AS BLOB) IN ((~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN (((rt1.c0, vt0.c1, vt0.c0))<((rt1.c2, rt1.c2, vt0.c0))) THEN ((rt1.c1) IS FALSE) END, (CAST(0xffffffffabbfb9e9 AS BLOB) IN ((~ (vt0.c1)))));
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c1) ORDER BY CASE WHEN (((rt1.c0, vt0.c1, vt0.c0))<((rt1.c2, rt1.c2, vt0.c0))) THEN ((rt1.c1) IS FALSE) END, (CAST(0xffffffffabbfb9e9 AS BLOB) IN ((~ (vt0.c1))));
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN (((rt1.c0, vt0.c1, vt0.c0))<((rt1.c2, rt1.c2, vt0.c0))) THEN ((rt1.c1) IS FALSE) END, (CAST(0xffffffffabbfb9e9 AS BLOB) IN ((~ (vt0.c1)))));
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c1) ORDER BY CASE WHEN (((rt1.c0, vt0.c1, vt0.c0))<((rt1.c2, rt1.c2, vt0.c0))) THEN ((rt1.c1) IS FALSE) END, (CAST(0xffffffffabbfb9e9 AS BLOB) IN ((~ (vt0.c1))));
SELECT ALL * FROM vt0, rt1 WHERE (((((CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END)OR(CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 END)))AND((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END)OR(CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 END)))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END)OR(CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 END)))AND((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END)OR(CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 END)))AND((rt1.c3 IN ())))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END)OR(CASE vt0.c1  WHEN vt0.c1 THEN rt1.c1 END)))AND((rt1.c3 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'')>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'')>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((x'')>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'')>=(vt0.c0))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)AND(rt1.c3)))OR(vt0.c1))) IS FALSE)) ORDER BY (((NOT (rt1.c2))) IS TRUE) DESC, ((CAST(vt0.c0 AS NUMERIC))>(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((NOT (rt1.c2))) IS TRUE) DESC, ((CAST(vt0.c0 AS NUMERIC))>(((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)AND(rt1.c3)))OR(vt0.c1))) IS FALSE)) ORDER BY (((NOT (rt1.c2))) IS TRUE) DESC, ((CAST(vt0.c0 AS NUMERIC))>(((vt0.c1) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1)AND(rt1.c3)))OR(vt0.c1))) IS FALSE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((NOT (rt1.c2))) IS TRUE) DESC, ((CAST(vt0.c0 AS NUMERIC))>(((vt0.c1) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((((rt1.c1)AND(rt1.c3)))OR(vt0.c1))) IS FALSE)) ORDER BY (((NOT (rt1.c2))) IS TRUE) DESC, ((CAST(vt0.c0 AS NUMERIC))>(((vt0.c1) NOT NULL)));
SELECT * FROM rt1 WHERE (((0xfffffffffde251b8) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS NUMERIC))<=(rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffffde251b8) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS NUMERIC))<=(rt1.c1))  NULLS LAST);
SELECT * FROM rt1 WHERE (((0xfffffffffde251b8) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS NUMERIC))<=(rt1.c1))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((0Xfffffffffde251b8) IS FALSE)) IS TRUE)  as count FROM rt1 ORDER BY ((CAST(rt1.c0 AS NUMERIC))<=(rt1.c1))  NULLS LAST);
SELECT * FROM rt1 WHERE (((0xfffffffffde251b8) IS FALSE)) ORDER BY ((CAST(rt1.c0 AS NUMERIC))<=(rt1.c1))  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CAST(((rt1.c1)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)||(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CAST(((rt1.c1)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c1)||(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (NULL) ORDER BY CAST(((rt1.c1)||(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((- (rt1.c0)))+(rt1.c3 COLLATE NOCASE))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (0.02919133475592872)) ASC, (((rt1.c3)<=(rt1.c0)) IN ((NOT (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))+(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (0.02919133475592872)) ASC, (((rt1.c3)<=(rt1.c0)) IN ((NOT (rt1.c3)))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((- (rt1.c0)))+(rt1.c3 COLLATE NOCASE))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (0.02919133475592872)) ASC, (((rt1.c3)<=(rt1.c0)) IN ((NOT (rt1.c3)))) ASC;
SELECT SUM(count) FROM (SELECT (((((- (rt1.c0)))+(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (0.02919133475592872)) ASC, (((rt1.c3)<=(rt1.c0)) IN ((NOT (rt1.c3)))) ASC);
SELECT ALL COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE ((((- (rt1.c0)))+(rt1.c3 COLLATE NOCASE))) ORDER BY ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CAST(rt1.c1 AS REAL)) AND (0.02919133475592872)) ASC, (((rt1.c3)<=(rt1.c0)) IN ((NOT (rt1.c3)))) ASC;
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>((vt0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)>((vt0.c0 IN ()))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (CASE WHEN 0Xffffffffcac80cfa THEN vt0.c0 END IN (LIKELIHOOD(vt0.c1, 0.376244636698743))) DESC, (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'', ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((TRIM(vt0.c1), CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)/(vt0.c1))))), ((((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1)>=(vt0.c0)), (~ (vt0.c0))))<=(((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN 0Xffffffffcac80cfa THEN vt0.c0 END IN (LIKELIHOOD(vt0.c1, 0.376244636698743))) DESC, (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'', ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((TRIM(vt0.c1), CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)/(vt0.c1))))), ((((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1)>=(vt0.c0)), (~ (vt0.c0))))<=(((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (CASE WHEN 0Xffffffffcac80cfa THEN vt0.c0 END IN (LIKELIHOOD(vt0.c1, 0.376244636698743))) DESC, (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'', ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((TRIM(vt0.c1), CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)/(vt0.c1))))), ((((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1)>=(vt0.c0)), (~ (vt0.c0))))<=(((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (CASE WHEN 0Xffffffffcac80cfa THEN vt0.c0 END IN (LIKELIHOOD(vt0.c1, 0.376244636698743))) DESC, (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'', ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((TRIM(vt0.c1), CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)/(vt0.c1))))), ((((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1)>=(vt0.c0)), (~ (vt0.c0))))<=(((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY (CASE WHEN 0Xffffffffcac80cfa THEN vt0.c0 END IN (LIKELIHOOD(vt0.c1, 0.376244636698743))) DESC, (((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, x'', ((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) AND ((TRIM(vt0.c1), CASE NULL  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, ((vt0.c0)/(vt0.c1))))), ((((vt0.c0 IN (vt0.c0, vt0.c0)), ((vt0.c1)>=(vt0.c0)), (~ (vt0.c0))))<=(((((vt0.c1, vt0.c0, vt0.c1))>=((vt0.c0, vt0.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)), vt0.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0)%(vt0.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)&(rt1.c2))) ISNULL)) ORDER BY ((((TRIM(DISTINCT x''))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(rt1.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((TRIM(DISTINCT x''))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)&(rt1.c2))) ISNULL)) ORDER BY ((((TRIM(DISTINCT x''))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)&(rt1.c2))) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((TRIM(DISTINCT x''))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)&(rt1.c2))) ISNULL)) ORDER BY ((((TRIM(DISTINCT x''))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c0));
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((rt1.c3)OR(vt0.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)) IN ())) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c3)OR(vt0.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((rt1.c3)OR(vt0.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)) IN ())) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((((((rt1.c3)OR(vt0.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)) IN ())) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((((((rt1.c3)OR(vt0.c1)))OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c2)) IN ())) ORDER BY (((rt1.c0) NOTNULL) IN ()) ASC  NULLS FIRST;
SELECT * FROM rt1 WHERE (COALESCE((~ (rt1.c0)), ((((rt1.c2)AND(-9.84969911E8)))AND(rt1.c0)), '734734522', ABS(DISTINCT rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((~ (rt1.c0)), ((((rt1.c2)AND(-9.84969911E8)))AND(rt1.c0)), '734734522', ABS(DISTINCT rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (COALESCE((~ (rt1.c0)), ((((rt1.c2)AND(-9.84969911E8)))AND(rt1.c0)), '734734522', ABS(DISTINCT rt1.c2)));
SELECT SUM(count) FROM (SELECT ALL ((COALESCE((~ (rt1.c0)), ((((rt1.c2)AND(-9.84969911E8)))AND(rt1.c0)), '734734522', ABS(DISTINCT rt1.c2))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (COALESCE((~ (rt1.c0)), ((((rt1.c2)AND(-9.84969911E8)))AND(rt1.c0)), '734734522', ABS(DISTINCT rt1.c2)));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((vt0.c0)<<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0)<<(vt0.c0)))));
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>=(rt1.c1)))+(0.6661636642630306))) ORDER BY (NOT (CAST(rt1.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>=(rt1.c1)))+(0.6661636642630306))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CAST(rt1.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>=(rt1.c1)))+(0.6661636642630306))) ORDER BY (NOT (CAST(rt1.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>=(rt1.c1)))+(0.6661636642630306))) IS TRUE)  as count FROM rt1 ORDER BY (NOT (CAST(rt1.c1 AS BLOB))) ASC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)>=(rt1.c1)))+(0.6661636642630306))) ORDER BY (NOT (CAST(rt1.c1 AS BLOB))) ASC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (vt0.c0) ORDER BY 'Z8DU' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY 'Z8DU' ASC);
SELECT * FROM vt0, rt1 WHERE (vt0.c0) ORDER BY 'Z8DU' ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1 ORDER BY 'Z8DU' ASC);
SELECT * FROM vt0, rt1 WHERE (vt0.c0) ORDER BY 'Z8DU' ASC;
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((NULL)>((rt1.c2 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)>((rt1.c2 IN (rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((NULL)>((rt1.c2 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST((rt1.c1 IN ()) AS INTEGER)) IS TRUE)  as count FROM rt1 ORDER BY ((NULL)>((rt1.c2 IN (rt1.c1)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (CAST((rt1.c1 IN ()) AS INTEGER)) ORDER BY ((NULL)>((rt1.c2 IN (rt1.c1)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) ORDER BY json_array((vt0.c0 IN ()), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)<>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY json_array((vt0.c0 IN ()), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)<>(vt0.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(x'' AS BLOB)) ISNULL)) ORDER BY json_array((vt0.c0 IN ()), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)<>(vt0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(x'' AS BLOB)) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY json_array((vt0.c0 IN ()), ((vt0.c0) IS FALSE), CAST(vt0.c0 AS INTEGER), vt0.c1 COLLATE NOCASE, ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)), ((vt0.c1)<>(vt0.c0))));
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c3 IN ())  WHEN (((rt1.c1))>((rt1.c1))) THEN (NOT (rt1.c2)) WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c0)GLOB(rt1.c3)) WHEN ((rt1.c0)-(rt1.c0)) THEN LOWER(DISTINCT rt1.c1) END) ORDER BY ((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))) DESC  NULLS FIRST, (((NOT (rt1.c3)))-(((rt1.c3)GLOB(rt1.c1)))), x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN ())  WHEN (((rt1.c1))>((rt1.c1))) THEN (NOT (rt1.c2)) WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c0)GLOB(rt1.c3)) WHEN ((rt1.c0)-(rt1.c0)) THEN LOWER(DISTINCT rt1.c1) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))) DESC  NULLS FIRST, (((NOT (rt1.c3)))-(((rt1.c3)GLOB(rt1.c1)))), x'');
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c3 IN ())  WHEN (((rt1.c1))>((rt1.c1))) THEN (NOT (rt1.c2)) WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c0)GLOB(rt1.c3)) WHEN ((rt1.c0)-(rt1.c0)) THEN LOWER(DISTINCT rt1.c1) END) ORDER BY ((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))) DESC  NULLS FIRST, (((NOT (rt1.c3)))-(((rt1.c3)GLOB(rt1.c1)))), x'';
SELECT SUM(count) FROM (SELECT ALL ((CASE (rt1.c3 IN ())  WHEN (((rt1.c1))>((rt1.c1))) THEN (NOT (rt1.c2)) WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c0)GLOB(rt1.c3)) WHEN ((rt1.c0)-(rt1.c0)) THEN LOWER(DISTINCT rt1.c1) END) IS TRUE)  as count FROM rt1 ORDER BY ((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))) DESC  NULLS FIRST, (((NOT (rt1.c3)))-(((rt1.c3)GLOB(rt1.c1)))), x'');
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE (rt1.c3 IN ())  WHEN (((rt1.c1))>((rt1.c1))) THEN (NOT (rt1.c2)) WHEN rt1.c3 COLLATE BINARY THEN ((rt1.c0)GLOB(rt1.c3)) WHEN ((rt1.c0)-(rt1.c0)) THEN LOWER(DISTINCT rt1.c1) END) ORDER BY ((rt1.c0)AND(((rt1.c0) NOT BETWEEN (rt1.c3) AND (x'')))) DESC  NULLS FIRST, (((NOT (rt1.c3)))-(((rt1.c3)GLOB(rt1.c1)))), x'';
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN UNLIKELY(DISTINCT vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(vt0.c0)) AND (((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN UNLIKELY(DISTINCT vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(vt0.c0)) AND (((vt0.c1) ISNULL))) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN UNLIKELY(DISTINCT vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(vt0.c0)) AND (((vt0.c1) ISNULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN UNLIKELY(DISTINCT vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(vt0.c0)) AND (((vt0.c1) ISNULL))) DESC);
SELECT * FROM vt0 WHERE (CASE WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (~ (vt0.c1)) THEN (vt0.c0 IN (vt0.c1)) WHEN UNLIKELY(DISTINCT vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END) ORDER BY ((vt0.c0 COLLATE RTRIM) NOT BETWEEN (LOWER(vt0.c0)) AND (((vt0.c1) ISNULL))) DESC;
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, rt1.c2)) AND ((rt1.c3, vt0.c0, rt1.c0))))-(x'')) WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))GLOB(((vt0.c1)LIKE(rt1.c2))))) ORDER BY ((rt1.c2) IS FALSE) DESC  NULLS FIRST, TYPEOF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))GLOB(((vt0.c1)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, rt1.c2)) AND ((rt1.c3, vt0.c0, rt1.c0))))-(x'')) ORDER BY ((rt1.c2) IS FALSE) DESC  NULLS FIRST, TYPEOF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 END) ASC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, rt1.c2)) AND ((rt1.c3, vt0.c0, rt1.c0))))-(x'')) WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))GLOB(((vt0.c1)LIKE(rt1.c2))))) ORDER BY ((rt1.c2) IS FALSE) DESC  NULLS FIRST, TYPEOF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 END) ASC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))GLOB(((vt0.c1)LIKE(rt1.c2))))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, rt1.c2)) AND ((rt1.c3, vt0.c0, rt1.c0))))-(x'')) ORDER BY ((rt1.c2) IS FALSE) DESC  NULLS FIRST, TYPEOF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 END) ASC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((((rt1.c0, rt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, rt1.c2)) AND ((rt1.c3, vt0.c0, rt1.c0))))-(x'')) WHERE (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c0)))GLOB(((vt0.c1)LIKE(rt1.c2))))) ORDER BY ((rt1.c2) IS FALSE) DESC  NULLS FIRST, TYPEOF(DISTINCT CASE WHEN vt0.c0 THEN vt0.c1 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c2 THEN vt0.c1 END) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE ((((((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)), ((((rt1.c0)OR(NULL)))AND('-1859934918')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2))))!=((CAST(rt1.c3 AS NUMERIC), vt0.c1, 0.4946823403477636))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)), ((((rt1.c0)OR(NULL)))AND('-1859934918')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2))))!=((CAST(rt1.c3 AS NUMERIC), vt0.c1, 0.4946823403477636)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE ((((((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)), ((((rt1.c0)OR(NULL)))AND('-1859934918')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2))))!=((CAST(rt1.c3 AS NUMERIC), vt0.c1, 0.4946823403477636))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)), ((((rt1.c0)OR(NULL)))AND('-1859934918')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2))))!=((CAST(rt1.c3 AS NUMERIC), vt0.c1, 0.4946823403477636)))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE ((((((vt0.c1) NOT BETWEEN (rt1.c3) AND (vt0.c0)), ((((rt1.c0)OR(NULL)))AND('-1859934918')), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c2))))!=((CAST(rt1.c3 AS NUMERIC), vt0.c1, 0.4946823403477636))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c3 AS INTEGER))LIKE(TRIM(rt1.c2)))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS INTEGER))LIKE(TRIM(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c3 AS INTEGER))LIKE(TRIM(rt1.c2)))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS INTEGER))LIKE(TRIM(rt1.c2)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c2 ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c3 AS INTEGER))LIKE(TRIM(rt1.c2)))) ORDER BY rt1.c2 ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3)LIKE(CAST(rt1.c3 AS REAL)))) ORDER BY CAST((NOT (rt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)LIKE(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST((NOT (rt1.c1)) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3)LIKE(CAST(rt1.c3 AS REAL)))) ORDER BY CAST((NOT (rt1.c1)) AS REAL);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)LIKE(CAST(rt1.c3 AS REAL)))) IS TRUE)  as count FROM rt1 ORDER BY CAST((NOT (rt1.c1)) AS REAL));
SELECT COUNT(*) FROM rt1 WHERE (((rt1.c3)LIKE(CAST(rt1.c3 AS REAL)))) ORDER BY CAST((NOT (rt1.c1)) AS REAL);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt1.c2))<>((rt1.c2))) AS NUMERIC) WHERE (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END, rt1.c3))) ORDER BY rt1.c3 COLLATE NOCASE DESC  NULLS LAST, (NOT (rt1.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END, rt1.c3))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt1.c2))!=((rt1.c2))) AS NUMERIC) ORDER BY rt1.c3 COLLATE NOCASE DESC  NULLS LAST, (NOT (rt1.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt1.c2))<>((rt1.c2))) AS NUMERIC) WHERE (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END, rt1.c3))) ORDER BY rt1.c3 COLLATE NOCASE DESC  NULLS LAST, (NOT (rt1.c1)) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END, rt1.c3))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt1.c2))!=((rt1.c2))) AS NUMERIC) ORDER BY rt1.c3 COLLATE NOCASE DESC  NULLS LAST, (NOT (rt1.c1)) COLLATE NOCASE DESC);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON CAST((((rt1.c2))<>((rt1.c2))) AS NUMERIC) WHERE (((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3))) IN (CASE vt0.c0  WHEN rt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 END, rt1.c3))) ORDER BY rt1.c3 COLLATE NOCASE DESC  NULLS LAST, (NOT (rt1.c1)) COLLATE NOCASE DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((+ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((+ (vt0.c1)) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST((+ (vt0.c1)) AS TEXT)) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (CAST((+ (vt0.c1)) AS TEXT));
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((load_extension(rt1.c1))AND(vt0.c1)))OR(CASE vt0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE 0.40149079648859676 END)));
SELECT SUM(count) FROM (SELECT ((((((load_extension(rt1.c1))AND(vt0.c1)))OR(CASE vt0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE 0.40149079648859676 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((load_extension(rt1.c1))AND(vt0.c1)))OR(CASE vt0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE 0.40149079648859676 END)));
SELECT SUM(count) FROM (SELECT ((((((load_extension(rt1.c1))AND(vt0.c1)))OR(CASE vt0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE 0.40149079648859676 END))) IS TRUE)  as count FROM vt0 NATURAL JOIN rt1);
SELECT COUNT(*) FROM vt0 NATURAL JOIN rt1 WHERE (((((load_extension(rt1.c1))AND(vt0.c1)))OR(CASE vt0.c1  WHEN rt1.c1 THEN vt0.c0 ELSE 0.40149079648859676 END)));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (rt1.c3 IN (TYPEOF(rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c1 ORDER BY (rt1.c3 IN (TYPEOF(rt1.c3))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (rt1.c3 IN (TYPEOF(rt1.c3)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c1 ORDER BY (rt1.c3 IN (TYPEOF(rt1.c3))));
SELECT ALL * FROM rt1 LEFT OUTER JOIN vt0 ON rt1.c1 WHERE (CAST(vt0.c0 COLLATE RTRIM AS INTEGER)) ORDER BY (rt1.c3 IN (TYPEOF(rt1.c3)));
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (1.624459715E9) AND (rt1.c1))) BETWEEN (((rt1.c3) ISNULL)) AND ((((rt1.c3))<((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (1.624459715E9) AND (rt1.c1))) BETWEEN (((rt1.c3) ISNULL)) AND ((((rt1.c3))<((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (1.624459715E9) AND (rt1.c1))) BETWEEN (((rt1.c3) ISNULL)) AND ((((rt1.c3))<((rt1.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3) NOT BETWEEN (1.624459715E9) AND (rt1.c1))) BETWEEN (((rt1.c3) ISNULL)) AND ((((rt1.c3))<((rt1.c0)))))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((rt1.c3) NOT BETWEEN (1.624459715E9) AND (rt1.c1))) BETWEEN (((rt1.c3) ISNULL)) AND ((((rt1.c3))<((rt1.c0))))));
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt1.c2 IN ()), CAST(((rt1.c2)>(rt1.c1)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN ()), CAST(((rt1.c2)>(rt1.c1)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt1.c2 IN ()), CAST(((rt1.c2)>(rt1.c1)) AS INTEGER) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c2 IN ()), CAST(((rt1.c2)>(rt1.c1)) AS INTEGER) ASC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c2)))AND(rt1.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY (rt1.c2 IN ()), CAST(((rt1.c2)>(rt1.c1)) AS INTEGER) ASC  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((+ (x'3eea')))IS NOT((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (x'3eea')))IS NOT((vt0.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((+ (x'3eea')))IS NOT((vt0.c1 IN ()))));
SELECT SUM(count) FROM (SELECT (((((+ (x'3eea')))IS NOT((vt0.c1 IN ())))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((((+ (x'3eea')))IS NOT((vt0.c1 IN ()))));
SELECT ALL * FROM rt1 WHERE ((((- ('-1842329644')))%(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((- ('-1842329644')))%(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- ('-1842329644')))%(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT SUM(count) FROM (SELECT (((((- ('-1842329644')))%(CASE WHEN rt1.c1 THEN rt1.c2 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((((- ('-1842329644')))%(CASE WHEN rt1.c1 THEN rt1.c2 END)));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((rt1.c3 COLLATE BINARY)OR(((rt1.c2) NOTNULL))))OR(MIN(rt1.c1, ''))) WHERE (vt0.c0) ORDER BY ((rt1.c0)!=(rt1.c2)) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c3 COLLATE BINARY)OR(((rt1.c2) NOTNULL))))OR(MIN(rt1.c1, ''))) ORDER BY ((rt1.c0)<>(rt1.c2)) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((rt1.c3 COLLATE BINARY)OR(((rt1.c2) NOTNULL))))OR(MIN(rt1.c1, ''))) WHERE (vt0.c0) ORDER BY ((rt1.c0)!=(rt1.c2)) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c3 COLLATE BINARY)OR(((rt1.c2) NOTNULL))))OR(MIN(rt1.c1, ''))) ORDER BY ((rt1.c0)<>(rt1.c2)) COLLATE NOCASE COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON ((((rt1.c3 COLLATE BINARY)OR(((rt1.c2) NOTNULL))))OR(MIN(rt1.c1, ''))) WHERE (vt0.c0) ORDER BY ((rt1.c0)!=(rt1.c2)) COLLATE NOCASE COLLATE NOCASE ASC;
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE ((((vt0.c1)OR(x'')))OR(vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c1 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt1.c0 END WHEN (((rt1.c3, vt0.c1, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c1, rt1.c0))) THEN NULL WHEN TRIM(DISTINCT rt1.c3, vt0.c0) THEN CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END END WHERE (CASE rt1.c1 COLLATE BINARY  WHEN json_object(vt0.c0, vt0.c0) THEN ((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1 COLLATE BINARY  WHEN json_object(vt0.c0, vt0.c0) THEN ((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE ((((vt0.c1)OR(x'')))OR(vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c1 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt1.c0 END WHEN (((rt1.c3, vt0.c1, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c1, rt1.c0))) THEN NULL WHEN TRIM(DISTINCT rt1.c3, vt0.c0) THEN CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END END);
SELECT * FROM vt0 RIGHT OUTER JOIN rt1 ON CASE ((((vt0.c1)OR(x'')))OR(vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c1 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt1.c0 END WHEN (((rt1.c3, vt0.c1, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c1, rt1.c0))) THEN NULL WHEN TRIM(DISTINCT rt1.c3, vt0.c0) THEN CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END END WHERE (CASE rt1.c1 COLLATE BINARY  WHEN json_object(vt0.c0, vt0.c0) THEN ((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1 COLLATE BINARY  WHEN json_object(vt0.c0, vt0.c0) THEN ((((rt1.c3)AND(vt0.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON CASE ((((vt0.c1)OR(x'')))OR(vt0.c1))  WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt0.c1 THEN rt1.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN rt1.c0 END WHEN (((rt1.c3, vt0.c1, rt1.c2)) NOT BETWEEN ((vt0.c0, rt1.c2, rt1.c0)) AND ((vt0.c0, rt1.c1, rt1.c0))) THEN NULL WHEN TRIM(DISTINCT rt1.c3, vt0.c0) THEN CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END END);
SELECT * FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c3);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c1  WHEN ((rt1.c2)%(rt1.c3)) THEN json_array_length('188284327', 0Xfffffffff5e72d8b) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN ((rt1.c2)%(rt1.c3)) THEN json_array_length('188284327', 0Xfffffffff5e72d8b) END) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (CASE rt1.c1  WHEN ((rt1.c2)%(rt1.c3)) THEN json_array_length('188284327', 0Xfffffffff5e72d8b) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE rt1.c1  WHEN ((rt1.c2)%(rt1.c3)) THEN json_array_length('188284327', 0Xfffffffff5e72d8b) END) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c2) NOT NULL) AS REAL)) ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c2) NOT NULL) AS REAL)) ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((rt1.c2) NOT NULL) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c2))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(((rt1.c2) NOT NULL) AS REAL)) ORDER BY (+ (((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c2))))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON STRFTIME(rt1.c2, rt1.c0 COLLATE NOCASE, ((((rt1.c3)OR(rt1.c2)))OR(0Xffffffffbfbb33e2))) WHERE (((rt1.c3 COLLATE NOCASE) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON STRFTIME(rt1.c2, rt1.c0 COLLATE NOCASE, ((((rt1.c3)OR(rt1.c2)))OR(0Xffffffffbfbb33e2))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON STRFTIME(rt1.c2, rt1.c0 COLLATE NOCASE, ((((rt1.c3)OR(rt1.c2)))OR(0Xffffffffbfbb33e2))) WHERE (((rt1.c3 COLLATE NOCASE) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((rt1.c3 IN ()))));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE NOCASE) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((rt1.c3 IN ())))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON STRFTIME(rt1.c2, rt1.c0 COLLATE NOCASE, ((((rt1.c3)OR(rt1.c2)))OR(0Xffffffffbfbb33e2))));
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON STRFTIME(rt1.c2, rt1.c0 COLLATE NOCASE, ((((rt1.c3)OR(rt1.c2)))OR(0Xffffffffbfbb33e2))) WHERE (((rt1.c3 COLLATE NOCASE) NOT BETWEEN (rt1.c0 COLLATE BINARY) AND ((rt1.c3 IN ()))));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)<(x'')) IN ())) ORDER BY CAST(((rt1.c2)*(rt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(x'')) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2)*(rt1.c2)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)<(x'')) IN ())) ORDER BY CAST(((rt1.c2)*(rt1.c2)) AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0)<(x'')) IN ())) IS TRUE)  as count FROM rt1 ORDER BY CAST(((rt1.c2)*(rt1.c2)) AS INTEGER));
SELECT ALL * FROM rt1 WHERE ((((rt1.c0)<(x'')) IN ())) ORDER BY CAST(((rt1.c2)*(rt1.c2)) AS INTEGER);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (json_remove(vt0.c0, vt0.c0)))) ORDER BY '-347517512' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN (json_remove(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '-347517512' COLLATE BINARY ASC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CAST(vt0.c0 AS INTEGER) IN (json_remove(vt0.c0, vt0.c0)))) ORDER BY '-347517512' COLLATE BINARY ASC;
SELECT SUM(count) FROM (SELECT ALL (((CAST(vt0.c0 AS INTEGER) IN (json_remove(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0 ORDER BY '-347517512' COLLATE BINARY ASC);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY ABS(vt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ABS(vt0.c1) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY ABS(vt0.c1) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY ABS(vt0.c1) COLLATE RTRIM);
SELECT ALL * FROM vt0 WHERE ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) IN ())) ORDER BY ABS(vt0.c1) COLLATE RTRIM;
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)IS(NULL))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)IS(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)IS(NULL))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)IS(NULL))))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0  NULLS FIRST);
SELECT * FROM vt0 WHERE (((CAST(vt0.c1 AS INTEGER))AND(((vt0.c0)IS(NULL))))) ORDER BY vt0.c0  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (0.4024500504042474);
SELECT SUM(count) FROM (SELECT ALL ((0.4024500504042474) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (0.4024500504042474);
SELECT SUM(count) FROM (SELECT ALL ((0.4024500504042474) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (0.4024500504042474);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c3 AS REAL) IN ((((rt1.c0))<=((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c3 AS REAL) IN ((((rt1.c0))<=((rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c3 AS REAL) IN ((((rt1.c0))<=((rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL (((CAST(rt1.c3 AS REAL) IN ((((rt1.c0))<=((rt1.c3)))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((CAST(rt1.c3 AS REAL) IN ((((rt1.c0))<=((rt1.c3))))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(NULL AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(NULL AS NUMERIC) AS TEXT)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(CAST(NULL AS NUMERIC) AS TEXT));
SELECT * FROM rt1, vt0 WHERE ((((rt1.c3 IN (rt1.c2, vt0.c1))) NOT BETWEEN (x'') AND (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN (rt1.c2, vt0.c1))) NOT BETWEEN (x'') AND (SQLITE_VERSION()))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c3 IN (rt1.c2, vt0.c1))) NOT BETWEEN (x'') AND (SQLITE_VERSION())));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3 IN (rt1.c2, vt0.c1))) NOT BETWEEN (x'') AND (SQLITE_VERSION()))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((rt1.c3 IN (rt1.c2, vt0.c1))) NOT BETWEEN (x'') AND (SQLITE_VERSION())));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) ORDER BY (+ (((0X3ab65f69)/(rt1.c2)))) ASC, (rt1.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (+ (((0x3ab65f69)/(rt1.c2)))) ASC, (rt1.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) ORDER BY (+ (((0X3ab65f69)/(rt1.c2)))) ASC, (rt1.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT (((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) IS TRUE)  as count FROM rt1 ORDER BY (+ (((0x3ab65f69)/(rt1.c2)))) ASC, (rt1.c0 COLLATE NOCASE IN ()));
SELECT ALL COUNT(*) FROM rt1 WHERE ((CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END IN ())) ORDER BY (+ (((0X3ab65f69)/(rt1.c2)))) ASC, (rt1.c0 COLLATE NOCASE IN ());
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT 80579696, vt0.c0))*(CASE WHEN '-1532027981' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-256804993' THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT 80579696, vt0.c0))*(CASE WHEN '-1532027981' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-256804993' THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT 80579696, vt0.c0))*(CASE WHEN '-1532027981' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-256804993' THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((TRIM(DISTINCT 80579696, vt0.c0))*(CASE WHEN '-1532027981' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-256804993' THEN vt0.c1 ELSE vt0.c1 END))) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) DESC);
SELECT ALL * FROM vt0 WHERE (((TRIM(DISTINCT 80579696, vt0.c0))*(CASE WHEN '-1532027981' THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN '-256804993' THEN vt0.c1 ELSE vt0.c1 END))) ORDER BY ((vt0.c0 COLLATE RTRIM) IS TRUE) DESC;
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c1) ISNULL))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c1) ISNULL))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c1) ISNULL))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0 ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c1) ISNULL))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS FALSE)))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (NULL) ORDER BY ((((((((vt0.c0 COLLATE RTRIM)AND(((vt0.c1) ISNULL))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))OR(CAST(vt0.c0 AS REAL))))OR(((vt0.c0) IS FALSE)))  NULLS LAST;
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((UPPER(DISTINCT vt0.c1)))) DESC, (+ (((vt0.c0)IS(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((UPPER(DISTINCT vt0.c1)))) DESC, (+ (((vt0.c0)IS(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((UPPER(DISTINCT vt0.c1)))) DESC, (+ (((vt0.c0)IS(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((UPPER(DISTINCT vt0.c1)))) DESC, (+ (((vt0.c0)IS(vt0.c0)))) DESC);
SELECT * FROM vt0 WHERE (vt0.c0) ORDER BY (((vt0.c1)) BETWEEN (((+ (vt0.c0)))) AND ((UPPER(DISTINCT vt0.c1)))) DESC, (+ (((vt0.c0)IS(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3) NOT NULL) IN ())) ORDER BY LIKELY(NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKELY(NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3) NOT NULL) IN ())) ORDER BY LIKELY(NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT NULL) IN ())) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKELY(NULL) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3) NOT NULL) IN ())) ORDER BY LIKELY(NULL) ASC;
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<=(x'1bb9')))|(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<=(x'1bb9')))|(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<=(x'1bb9')))|(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)<=(x'1bb9')))|(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0)<=(x'1bb9')))|(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))));
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY ((DATE(rt1.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c3, rt1.c0))GLOB(((rt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((DATE(rt1.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c3, rt1.c0))GLOB(((rt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY ((DATE(rt1.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c3, rt1.c0))GLOB(((rt1.c0) NOT NULL))) ASC;
SELECT SUM(count) FROM (SELECT (((rt1.c3 IN ()) COLLATE NOCASE) IS TRUE)  as count FROM rt1 ORDER BY ((DATE(rt1.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c3, rt1.c0))GLOB(((rt1.c0) NOT NULL))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE ((rt1.c3 IN ()) COLLATE NOCASE) ORDER BY ((DATE(rt1.c0, rt1.c2, rt1.c3, rt1.c1, rt1.c2, rt1.c3, rt1.c0))GLOB(((rt1.c0) NOT NULL))) ASC;
SELECT COUNT(*) FROM rt1, vt0 WHERE (((COALESCE(DISTINCT rt1.c0, rt1.c1)) BETWEEN (((rt1.c0) NOT NULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(rt1.c2))))) ORDER BY (- ((rt1.c3 IN ())))  NULLS FIRST, (~ (CASE vt0.c0  WHEN rt1.c0 THEN NULL ELSE vt0.c0 END)), ((0X25ff6d48)>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt1.c0, rt1.c1)) BETWEEN (((rt1.c0) NOT NULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- ((rt1.c3 IN ())))  NULLS FIRST, (~ (CASE vt0.c0  WHEN rt1.c0 THEN NULL ELSE vt0.c0 END)), ((0x25ff6d48)>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((COALESCE(DISTINCT rt1.c0, rt1.c1)) BETWEEN (((rt1.c0) NOT NULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(rt1.c2))))) ORDER BY (- ((rt1.c3 IN ())))  NULLS FIRST, (~ (CASE vt0.c0  WHEN rt1.c0 THEN NULL ELSE vt0.c0 END)), ((0X25ff6d48)>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((COALESCE(DISTINCT rt1.c0, rt1.c1)) BETWEEN (((rt1.c0) NOT NULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (- ((rt1.c3 IN ())))  NULLS FIRST, (~ (CASE vt0.c0  WHEN rt1.c0 THEN NULL ELSE vt0.c0 END)), ((0x25ff6d48)>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((COALESCE(DISTINCT rt1.c0, rt1.c1)) BETWEEN (((rt1.c0) NOT NULL)) AND (((((vt0.c0)OR(vt0.c0)))OR(rt1.c2))))) ORDER BY (- ((rt1.c3 IN ())))  NULLS FIRST, (~ (CASE vt0.c0  WHEN rt1.c0 THEN NULL ELSE vt0.c0 END)), ((0X25ff6d48)>>(CASE WHEN rt1.c2 THEN rt1.c2 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (NULLIF(vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (NULLIF(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (NULLIF(vt0.c1, vt0.c1))));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (NULLIF(vt0.c1, vt0.c1)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END IN (NULLIF(vt0.c1, vt0.c1))));
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 END THEN (((rt1.c2, rt1.c1, NULL))>=((rt1.c0, vt0.c1, vt0.c1))) ELSE CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN '' ELSE rt1.c3 END END WHERE (0.14467219571208956);
SELECT SUM(count) FROM (SELECT ((0.14467219571208956) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 END THEN (((rt1.c2, rt1.c1, NULL))>=((rt1.c0, vt0.c1, vt0.c1))) ELSE CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN '' ELSE rt1.c3 END END);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 END THEN (((rt1.c2, rt1.c1, NULL))>=((rt1.c0, vt0.c1, vt0.c1))) ELSE CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN '' ELSE rt1.c3 END END WHERE (0.14467219571208956);
SELECT SUM(count) FROM (SELECT ((0.14467219571208956) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 END THEN (((rt1.c2, rt1.c1, NULL))>=((rt1.c0, vt0.c1, vt0.c1))) ELSE CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN '' ELSE rt1.c3 END END);
SELECT COUNT(*) FROM vt0 CROSS JOIN rt1 ON CASE WHEN CASE WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 END THEN (((rt1.c2, rt1.c1, NULL))>=((rt1.c0, vt0.c1, vt0.c1))) ELSE CASE rt1.c3  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN vt0.c1 THEN vt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN '' ELSE rt1.c3 END END WHERE (0.14467219571208956);
SELECT ALL * FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c0))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY (((((((((vt0.c1 IN ()))AND(NULL)))AND(vt0.c0 COLLATE RTRIM)))OR(UNLIKELY(vt0.c1))))AND((((0.9206443394512422, vt0.c1, vt0.c1))>=((' Eg5Bv\L\n', vt0.c0, vt0.c1))))), (~ ((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(vt0.c0, vt0.c0))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1 IN ()))AND(NULL)))AND(vt0.c0 COLLATE RTRIM)))OR(UNLIKELY(vt0.c1))))AND((((0.9206443394512422, vt0.c1, vt0.c1))>=((' Eg5Bv\L\n', vt0.c0, vt0.c1))))), (~ ((+ (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c0))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY (((((((((vt0.c1 IN ()))AND(NULL)))AND(vt0.c0 COLLATE RTRIM)))OR(UNLIKELY(vt0.c1))))AND((((0.9206443394512422, vt0.c1, vt0.c1))>=((' Eg5Bv\L\n', vt0.c0, vt0.c1))))), (~ ((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((IFNULL(vt0.c0, vt0.c0))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt0 ORDER BY (((((((((vt0.c1 IN ()))AND(NULL)))AND(vt0.c0 COLLATE RTRIM)))OR(UNLIKELY(vt0.c1))))AND((((0.9206443394512422, vt0.c1, vt0.c1))>=((' Eg5Bv\L\n', vt0.c0, vt0.c1))))), (~ ((+ (vt0.c1)))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((IFNULL(vt0.c0, vt0.c0))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOTNULL)))) ORDER BY (((((((((vt0.c1 IN ()))AND(NULL)))AND(vt0.c0 COLLATE RTRIM)))OR(UNLIKELY(vt0.c1))))AND((((0.9206443394512422, vt0.c1, vt0.c1))>=((' Eg5Bv\L\n', vt0.c0, vt0.c1))))), (~ ((+ (vt0.c1)))) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE ((((((('4ۑ!') ISNULL))OR(((vt0.c1) NOT NULL))))AND((rt1.c0 IN ())))) ORDER BY (NOT (rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('4ۑ!') ISNULL))OR(((vt0.c1) NOT NULL))))AND((rt1.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT (rt1.c3))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((((('4ۑ!') ISNULL))OR(((vt0.c1) NOT NULL))))AND((rt1.c0 IN ())))) ORDER BY (NOT (rt1.c3))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((('4ۑ!') ISNULL))OR(((vt0.c1) NOT NULL))))AND((rt1.c0 IN ())))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (NOT (rt1.c3))  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE ((((((('4ۑ!') ISNULL))OR(((vt0.c1) NOT NULL))))AND((rt1.c0 IN ())))) ORDER BY (NOT (rt1.c3))  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY CASE ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2))  WHEN CAST(rt1.c3 AS BLOB) THEN NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY CASE ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2))  WHEN CAST(rt1.c3 AS BLOB) THEN NULL END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY CASE ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2))  WHEN CAST(rt1.c3 AS BLOB) THEN NULL END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1 ORDER BY CASE ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2))  WHEN CAST(rt1.c3 AS BLOB) THEN NULL END DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c1) ORDER BY CASE ((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2))  WHEN CAST(rt1.c3 AS BLOB) THEN NULL END DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (NULL)))AND((NOT (vt0.c1)))))OR(HEX(vt0.c1)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((('￹')LIKE(vt0.c0)))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 WHEN -384714042 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT (((((((NOT (NULL)))AND((NOT (vt0.c1)))))OR(HEX(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((('￹')LIKE(vt0.c0)))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 WHEN -384714042 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (NULL)))AND((NOT (vt0.c1)))))OR(HEX(vt0.c1)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((('￹')LIKE(vt0.c0)))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 WHEN -384714042 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ());
SELECT SUM(count) FROM (SELECT (((((((NOT (NULL)))AND((NOT (vt0.c1)))))OR(HEX(vt0.c1)))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((('￹')LIKE(vt0.c0)))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 WHEN -384714042 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((NOT (NULL)))AND((NOT (vt0.c1)))))OR(HEX(vt0.c1)))) ORDER BY (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((('￹')LIKE(vt0.c0)))))  NULLS FIRST, (CASE WHEN vt0.c0 THEN vt0.c0 WHEN -384714042 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ());
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c1)) AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c1)) AS REAL)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c1)) AS REAL));
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY CASE (rt1.c2 IN ())  WHEN COALESCE(DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c0) THEN TRIM(DISTINCT rt1.c2, rt1.c3) WHEN x'' THEN NULL WHEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c2 IN ())  WHEN COALESCE(DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c0) THEN TRIM(DISTINCT rt1.c2, rt1.c3) WHEN x'' THEN NULL WHEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY CASE (rt1.c2 IN ())  WHEN COALESCE(DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c0) THEN TRIM(DISTINCT rt1.c2, rt1.c3) WHEN x'' THEN NULL WHEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3)) END ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c2 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE (rt1.c2 IN ())  WHEN COALESCE(DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c0) THEN TRIM(DISTINCT rt1.c2, rt1.c3) WHEN x'' THEN NULL WHEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3)) END ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 WHERE (((rt1.c2 COLLATE BINARY) NOT NULL)) ORDER BY CASE (rt1.c2 IN ())  WHEN COALESCE(DISTINCT rt1.c3, rt1.c1, rt1.c0, rt1.c0) THEN TRIM(DISTINCT rt1.c2, rt1.c3) WHEN x'' THEN NULL WHEN CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c3)) END ASC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1) NOTNULL))OR(((rt1.c0)&(rt1.c1)))))AND(((vt0.c0) IS TRUE)))) ORDER BY 0.6152401322737242 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOTNULL))OR(((rt1.c0)&(rt1.c1)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.6152401322737242 ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1) NOTNULL))OR(((rt1.c0)&(rt1.c1)))))AND(((vt0.c0) IS TRUE)))) ORDER BY 0.6152401322737242 ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c1) NOTNULL))OR(((rt1.c0)&(rt1.c1)))))AND(((vt0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY 0.6152401322737242 ASC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c1) NOTNULL))OR(((rt1.c0)&(rt1.c1)))))AND(((vt0.c0) IS TRUE)))) ORDER BY 0.6152401322737242 ASC;
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c0)))OR(vt0.c1)))AND(rt1.c0)))OR((rt1.c1 IN ()))))OR(GLOB(rt1.c1, rt1.c3))) WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c0)))OR(vt0.c1)))AND(rt1.c0)))OR((rt1.c1 IN ()))))OR(GLOB(rt1.c1, rt1.c3))));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c0)))OR(vt0.c1)))AND(rt1.c0)))OR((rt1.c1 IN ()))))OR(GLOB(rt1.c1, rt1.c3))) WHERE (((rt1.c1 IN ()) IN ()));
SELECT SUM(count) FROM (SELECT ((((rt1.c1 IN ()) IN ())) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c0)))OR(vt0.c1)))AND(rt1.c0)))OR((rt1.c1 IN ()))))OR(GLOB(rt1.c1, rt1.c3))));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((((((((((vt0.c0)AND(rt1.c3)))OR(rt1.c0)))OR(vt0.c1)))AND(rt1.c0)))OR((rt1.c1 IN ()))))OR(GLOB(rt1.c1, rt1.c3))) WHERE (((rt1.c1 IN ()) IN ()));
SELECT ALL * FROM rt1, vt0 WHERE (CASE (rt1.c1 IN ())  WHEN (- (rt1.c2)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((((rt1.c2)OR(vt0.c1))))<((((rt1.c2) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c1 IN ())  WHEN (- (rt1.c2)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c2)OR(vt0.c1))))<((((rt1.c2) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (CASE (rt1.c1 IN ())  WHEN (- (rt1.c2)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((((rt1.c2)OR(vt0.c1))))<((((rt1.c2) IS TRUE))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (rt1.c1 IN ())  WHEN (- (rt1.c2)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((rt1.c2)OR(vt0.c1))))<((((rt1.c2) IS TRUE))))  NULLS FIRST);
SELECT ALL * FROM rt1, vt0 WHERE (CASE (rt1.c1 IN ())  WHEN (- (rt1.c2)) THEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) END) ORDER BY (((((rt1.c2)OR(vt0.c1))))<((((rt1.c2) IS TRUE))))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(x'')));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(x''))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))OR(((vt0.c1) IS TRUE))))OR(x'')));
SELECT COUNT(*) FROM vt0, rt1 WHERE ('a>');
SELECT SUM(count) FROM (SELECT ALL (('a>') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('a>');
SELECT SUM(count) FROM (SELECT ALL (('a>') IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ('a>');
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON '0.09710381792102907' WHERE (((LIKELY(vt0.c0)) BETWEEN ((- (rt1.c3))) AND ((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, vt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) BETWEEN ((- (rt1.c3))) AND ((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, vt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON '0.09710381792102907');
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON '0.09710381792102907' WHERE (((LIKELY(vt0.c0)) BETWEEN ((- (rt1.c3))) AND ((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, vt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c1))))));
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt0.c0)) BETWEEN ((- (rt1.c3))) AND ((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, vt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON '0.09710381792102907');
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON '0.09710381792102907' WHERE (((LIKELY(vt0.c0)) BETWEEN ((- (rt1.c3))) AND ((((rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((rt1.c1, rt1.c2, vt0.c0)) AND ((rt1.c2, rt1.c1, rt1.c1))))));
SELECT * FROM rt1 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('' COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT (('' COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('' COLLATE NOCASE);
SELECT * FROM rt1 WHERE (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ())) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)) BETWEEN ((rt1.c3)) AND ((rt1.c2))) IN ()));
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (rt1.c0);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) WHERE ('');
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST((rt1.c3 IN ()) AS INTEGER) WHERE ('');
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((0X2dd5011d)AND(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)) WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((('430186593'))!=((vt0.c1)))) AND ((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((('430186593'))!=((vt0.c1)))) AND ((- (rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((0X2dd5011d)AND(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((0X2dd5011d)AND(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)) WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((('430186593'))!=((vt0.c1)))) AND ((- (rt1.c1)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((('430186593'))!=((vt0.c1)))) AND ((- (rt1.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((0X2dd5011d)AND(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((0X2dd5011d)AND(vt0.c0)))AND(rt1.c1 COLLATE NOCASE)) WHERE (((CAST(vt0.c1 AS REAL)) NOT BETWEEN (((('430186593'))!=((vt0.c1)))) AND ((- (rt1.c1)))));
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON vt0.c1 WHERE (((NOT (vt0.c1)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY 'z*M3tB' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c1)) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON vt0.c1 ORDER BY 'z*M3tB' DESC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON vt0.c1 WHERE (((NOT (vt0.c1)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY 'z*M3tB' DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((NOT (vt0.c1)) IN (CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON vt0.c1 ORDER BY 'z*M3tB' DESC  NULLS LAST);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON vt0.c1 WHERE (((NOT (vt0.c1)) IN (CAST(vt0.c0 AS NUMERIC)))) ORDER BY 'z*M3tB' DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0 ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (vt0.c0)) COLLATE NOCASE) ORDER BY (~ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)IS(rt1.c2))  WHEN ((((rt1.c3)AND(rt1.c2)))AND('492528065')) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)IS(rt1.c2))  WHEN ((((rt1.c3)AND(rt1.c2)))AND('492528065')) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)IS(rt1.c2))  WHEN ((((rt1.c3)AND(rt1.c2)))AND('492528065')) THEN CAST(vt0.c1 AS REAL) END);
SELECT SUM(count) FROM (SELECT ((CASE ((rt1.c0)IS(rt1.c2))  WHEN ((((rt1.c3)AND(rt1.c2)))AND('492528065')) THEN CAST(vt0.c1 AS REAL) END) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE ((rt1.c0)IS(rt1.c2))  WHEN ((((rt1.c3)AND(rt1.c2)))AND('492528065')) THEN CAST(vt0.c1 AS REAL) END);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2)%(vt0.c1)))AND(CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)%(vt0.c1)))AND(CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2)%(vt0.c1)))AND(CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2)%(vt0.c1)))AND(CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((rt1.c2)%(vt0.c1)))AND(CASE vt0.c0  WHEN rt1.c2 THEN vt0.c0 END)));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (ABS(DISTINCT RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT RTRIM(vt0.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (ABS(DISTINCT RTRIM(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((ABS(DISTINCT RTRIM(vt0.c0))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (ABS(DISTINCT RTRIM(vt0.c0)));
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(x'' COLLATE RTRIM)))AND(((vt0.c1)/(vt0.c0)))))AND(((vt0.c1)IS(vt0.c1)))))OR(((vt0.c0)<(vt0.c1))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) BETWEEN ('xd-o|c&kN') AND (((vt0.c0)AND(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(x'' COLLATE RTRIM)))AND(((vt0.c1)/(vt0.c0)))))AND(((vt0.c1)IS(vt0.c1)))))OR(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0))) BETWEEN ('xd-o|c&kN') AND (((vt0.c0)AND(vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(x'' COLLATE RTRIM)))AND(((vt0.c1)/(vt0.c0)))))AND(((vt0.c1)IS(vt0.c1)))))OR(((vt0.c0)<(vt0.c1))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) BETWEEN ('xd-o|c&kN') AND (((vt0.c0)AND(vt0.c1)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(x'' COLLATE RTRIM)))AND(((vt0.c1)/(vt0.c0)))))AND(((vt0.c1)IS(vt0.c1)))))OR(((vt0.c0)<(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)>=(vt0.c0))) BETWEEN ('xd-o|c&kN') AND (((vt0.c0)AND(vt0.c1)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))OR(x'' COLLATE RTRIM)))AND(((vt0.c1)/(vt0.c0)))))AND(((vt0.c1)IS(vt0.c1)))))OR(((vt0.c0)<(vt0.c1))))) ORDER BY ((((vt0.c0)>=(vt0.c0))) BETWEEN ('xd-o|c&kN') AND (((vt0.c0)AND(vt0.c1)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULLIF(vt0.c1, rt1.c2) COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c1, rt1.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'');
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULLIF(vt0.c1, rt1.c2) COLLATE NOCASE) ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(vt0.c1, rt1.c2) COLLATE NOCASE) IS TRUE)  as count FROM rt1, vt0 ORDER BY x'');
SELECT COUNT(*) FROM rt1, vt0 WHERE (NULLIF(vt0.c1, rt1.c2) COLLATE NOCASE) ORDER BY x'';
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((((vt0.c1))<((vt0.c0)))))) ORDER BY (((- (vt0.c0)))>>((~ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((((vt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>>((~ (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((((vt0.c1))<((vt0.c0)))))) ORDER BY (((- (vt0.c0)))>>((~ (vt0.c1))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((((vt0.c1))<((vt0.c0)))))) IS TRUE)  as count FROM vt0 ORDER BY (((- (vt0.c0)))>>((~ (vt0.c1))))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((((- (vt0.c0))) NOT BETWEEN (((vt0.c0)<<(vt0.c1))) AND ((((vt0.c1))<((vt0.c0)))))) ORDER BY (((- (vt0.c0)))>>((~ (vt0.c1))))  NULLS LAST;
SELECT * FROM rt1 WHERE (((((rt1.c3)>(rt1.c3)))LIKE((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>(rt1.c3)))LIKE((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)>(rt1.c3)))LIKE((NULL IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c3)>(rt1.c3)))LIKE((NULL IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c3)>(rt1.c3)))LIKE((NULL IN ()))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c1)!=(rt1.c1)))IS NOT(CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CAST(0.8848908137702977 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<>(rt1.c1)))IS NOT(CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(0.8848908137702977 AS TEXT) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c1)!=(rt1.c1)))IS NOT(CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CAST(0.8848908137702977 AS TEXT) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c1)<>(rt1.c1)))IS NOT(CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(0.8848908137702977 AS TEXT) ASC);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((vt0.c1)!=(rt1.c1)))IS NOT(CASE rt1.c2  WHEN vt0.c1 THEN vt0.c1 END))) ORDER BY CAST(0.8848908137702977 AS TEXT) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c2 WHEN '~	&k4' THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c2)))AND(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c2 WHEN '~	&k4' THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c2)))AND(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c2 WHEN '~	&k4' THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c2)))AND(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)))));
SELECT SUM(count) FROM (SELECT ((((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c2 WHEN '~	&k4' THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c2)))AND(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN rt1.c2 WHEN '~	&k4' THEN rt1.c3 ELSE rt1.c3 END)OR(rt1.c2)))AND(((((rt1.c1)AND(rt1.c3)))OR(rt1.c2)))));
SELECT * FROM rt1 NOT INDEXED, vt0 WHERE (rt1.c1) ORDER BY ((x'') ISNULL) DESC  NULLS FIRST, (((CAST(rt1.c0 AS BLOB)))>((((rt1.c3) IS TRUE)))) DESC, TYPEOF(DISTINCT (~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((x'') ISNULL) DESC  NULLS FIRST, (((CAST(rt1.c0 AS BLOB)))>((((rt1.c3) IS TRUE)))) DESC, TYPEOF(DISTINCT (~ (vt0.c1))));
SELECT * FROM rt1 NOT INDEXED, vt0 WHERE (rt1.c1) ORDER BY ((x'') ISNULL) DESC  NULLS FIRST, (((CAST(rt1.c0 AS BLOB)))>((((rt1.c3) IS TRUE)))) DESC, TYPEOF(DISTINCT (~ (vt0.c1)));
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((x'') ISNULL) DESC  NULLS FIRST, (((CAST(rt1.c0 AS BLOB)))>((((rt1.c3) IS TRUE)))) DESC, TYPEOF(DISTINCT (~ (vt0.c1))));
SELECT * FROM rt1 NOT INDEXED, vt0 WHERE (rt1.c1) ORDER BY ((x'') ISNULL) DESC  NULLS FIRST, (((CAST(rt1.c0 AS BLOB)))>((((rt1.c3) IS TRUE)))) DESC, TYPEOF(DISTINCT (~ (vt0.c1)));
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (0.23755569563250223) AND (rt1.c1)) THEN rt1.c1 ELSE CAST(rt1.c3 AS BLOB) END) ORDER BY ((((((((vt0.c0)OR(((vt0.c0)|(vt0.c0)))))OR(TRIM(DISTINCT rt1.c2, rt1.c0))))AND(((((x'')OR(rt1.c2)))AND(rt1.c0)))))AND((~ (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (0.23755569563250223) AND (rt1.c1)) THEN rt1.c1 ELSE CAST(rt1.c3 AS BLOB) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((vt0.c0)OR(((vt0.c0)|(vt0.c0)))))OR(TRIM(DISTINCT rt1.c2, rt1.c0))))AND(((((x'')OR(rt1.c2)))AND(rt1.c0)))))AND((~ (rt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (0.23755569563250223) AND (rt1.c1)) THEN rt1.c1 ELSE CAST(rt1.c3 AS BLOB) END) ORDER BY ((((((((vt0.c0)OR(((vt0.c0)|(vt0.c0)))))OR(TRIM(DISTINCT rt1.c2, rt1.c0))))AND(((((x'')OR(rt1.c2)))AND(rt1.c0)))))AND((~ (rt1.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN ((vt0.c0) NOT BETWEEN (0.23755569563250223) AND (rt1.c1)) THEN rt1.c1 ELSE CAST(rt1.c3 AS BLOB) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((((((vt0.c0)OR(((vt0.c0)|(vt0.c0)))))OR(TRIM(DISTINCT rt1.c2, rt1.c0))))AND(((((x'')OR(rt1.c2)))AND(rt1.c0)))))AND((~ (rt1.c0)))) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN ((vt0.c0) NOT BETWEEN (0.23755569563250223) AND (rt1.c1)) THEN rt1.c1 ELSE CAST(rt1.c3 AS BLOB) END) ORDER BY ((((((((vt0.c0)OR(((vt0.c0)|(vt0.c0)))))OR(TRIM(DISTINCT rt1.c2, rt1.c0))))AND(((((x'')OR(rt1.c2)))AND(rt1.c0)))))AND((~ (rt1.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) ORDER BY ((((((((((vt0.c1) ISNULL))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '1496997882', vt0.c0))))))AND(CAST(vt0.c0 AS INTEGER))))OR(x'0d4c')))AND(((vt0.c1)+(0.0)))) DESC, ((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))) DESC, (((vt0.c1 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((NOT (0.16788066904178567))) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) ISNULL))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '1496997882', vt0.c0))))))AND(CAST(vt0.c0 AS INTEGER))))OR(x'0d4c')))AND(((vt0.c1)+(0.0)))) DESC, ((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))) DESC, (((vt0.c1 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((NOT (0.16788066904178567))) AND ((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) ORDER BY ((((((((((vt0.c1) ISNULL))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '1496997882', vt0.c0))))))AND(CAST(vt0.c0 AS INTEGER))))OR(x'0d4c')))AND(((vt0.c1)+(0.0)))) DESC, ((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))) DESC, (((vt0.c1 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((NOT (0.16788066904178567))) AND ((+ (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0) NOT NULL) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((((((((((vt0.c1) ISNULL))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '1496997882', vt0.c0))))))AND(CAST(vt0.c0 AS INTEGER))))OR(x'0d4c')))AND(((vt0.c1)+(0.0)))) DESC, ((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))) DESC, (((vt0.c1 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((NOT (0.16788066904178567))) AND ((+ (vt0.c0)))));
SELECT * FROM vt0 WHERE (((vt0.c0) NOT NULL) COLLATE BINARY) ORDER BY ((((((((((vt0.c1) ISNULL))OR((((vt0.c1, vt0.c1, vt0.c0))>=((vt0.c0, '1496997882', vt0.c0))))))AND(CAST(vt0.c0 AS INTEGER))))OR(x'0d4c')))AND(((vt0.c1)+(0.0)))) DESC, ((vt0.c1)IS NOT(CAST(vt0.c0 AS NUMERIC))) DESC, (((vt0.c1 IN (vt0.c0, vt0.c1))) NOT BETWEEN ((NOT (0.16788066904178567))) AND ((+ (vt0.c0))));
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (x'f47d9110') ORDER BY LIKELIHOOD(NULL COLLATE RTRIM, 0.3751169863143736)  NULLS FIRST, ((((0.38614659230532444)+(rt1.c3))) NOT NULL) DESC, 0.6793084873102773;
SELECT SUM(count) FROM (SELECT ((x'f47d9110') IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY LIKELIHOOD(NULL COLLATE RTRIM, 0.3751169863143736)  NULLS FIRST, ((((0.38614659230532444)+(rt1.c3))) NOT NULL) DESC, 0.6793084873102773);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (x'f47d9110') ORDER BY LIKELIHOOD(NULL COLLATE RTRIM, 0.3751169863143736)  NULLS FIRST, ((((0.38614659230532444)+(rt1.c3))) NOT NULL) DESC, 0.6793084873102773;
SELECT SUM(count) FROM (SELECT ((x'f47d9110') IS TRUE)  as count FROM rt1 NATURAL JOIN vt0 ORDER BY LIKELIHOOD(NULL COLLATE RTRIM, 0.3751169863143736)  NULLS FIRST, ((((0.38614659230532444)+(rt1.c3))) NOT NULL) DESC, 0.6793084873102773);
SELECT COUNT(*) FROM rt1 NATURAL JOIN vt0 WHERE (x'f47d9110') ORDER BY LIKELIHOOD(NULL COLLATE RTRIM, 0.3751169863143736)  NULLS FIRST, ((((0.38614659230532444)+(rt1.c3))) NOT NULL) DESC, 0.6793084873102773;
SELECT * FROM vt0 WHERE (LOWER(json(vt0.c1))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((LOWER(json(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM vt0 WHERE (LOWER(json(vt0.c1))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((LOWER(json(vt0.c1))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ())) NOT NULL)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1 IN ())) NOT NULL));
SELECT ALL * FROM rt1 WHERE ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) ORDER BY (rt1.c1 IN ()) DESC, ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 IN ()) DESC, ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) ORDER BY (rt1.c1 IN ()) DESC, ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) IS FALSE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) IS TRUE)  as count FROM rt1 ORDER BY (rt1.c1 IN ()) DESC, ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) IS FALSE) DESC  NULLS LAST);
SELECT ALL * FROM rt1 WHERE ((((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c3)) IN ())) ORDER BY (rt1.c1 IN ()) DESC, ((CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c3 END) IS FALSE) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))) THEN rt1.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))) THEN rt1.c3 END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))) THEN rt1.c3 END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))) THEN rt1.c3 END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))) THEN rt1.c3 END);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c3) AND ('-295167678'))  WHEN CAST(rt1.c0 AS BLOB) THEN COALESCE(rt1.c3, rt1.c2) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) BETWEEN (rt1.c3) AND ('-295167678'))  WHEN CAST(rt1.c0 AS BLOB) THEN COALESCE(rt1.c3, rt1.c2) ELSE rt1.c0 END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c3) AND ('-295167678'))  WHEN CAST(rt1.c0 AS BLOB) THEN COALESCE(rt1.c3, rt1.c2) ELSE rt1.c0 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((rt1.c1) BETWEEN (rt1.c3) AND ('-295167678'))  WHEN CAST(rt1.c0 AS BLOB) THEN COALESCE(rt1.c3, rt1.c2) ELSE rt1.c0 END) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (CASE ((rt1.c1) BETWEEN (rt1.c3) AND ('-295167678'))  WHEN CAST(rt1.c0 AS BLOB) THEN COALESCE(rt1.c3, rt1.c2) ELSE rt1.c0 END);
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON x'' WHERE (LOWER(DISTINCT rt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON x'');
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON x'' WHERE (LOWER(DISTINCT rt1.c2 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ((LOWER(DISTINCT rt1.c2 COLLATE RTRIM)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON x'');
SELECT ALL * FROM rt1 CROSS JOIN vt0 ON x'' WHERE (LOWER(DISTINCT rt1.c2 COLLATE RTRIM));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS NUMERIC) WHERE (rt1.c2) ORDER BY ((NOT (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS NUMERIC) ORDER BY ((NOT (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS NUMERIC) WHERE (rt1.c2) ORDER BY ((NOT (vt0.c1)) IN ());
SELECT SUM(count) FROM (SELECT ALL ((rt1.c2) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS NUMERIC) ORDER BY ((NOT (vt0.c1)) IN ()));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) NOTNULL) AS NUMERIC) WHERE (rt1.c2) ORDER BY ((NOT (vt0.c1)) IN ());
SELECT * FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ())) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ())) ORDER BY rt1.c2  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1) ISNULL) IN ())) IS TRUE)  as count FROM rt1 ORDER BY rt1.c2  NULLS LAST);
SELECT * FROM rt1 WHERE ((((rt1.c1) ISNULL) IN ())) ORDER BY rt1.c2  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE ((((((NULL, rt1.c3, rt1.c1))>((rt1.c0, rt1.c2, vt0.c0))))+(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))) ORDER BY LIKELY(CASE WHEN rt1.c0 THEN rt1.c1 END), CASE WHEN ((0.8676975723727179) IS FALSE) THEN CASE rt1.c1  WHEN x'3149' THEN rt1.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, '-377813295' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt1.c3, rt1.c1))>((rt1.c0, rt1.c2, vt0.c0))))+(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKELY(CASE WHEN rt1.c0 THEN rt1.c1 END), CASE WHEN ((0.8676975723727179) IS FALSE) THEN CASE rt1.c1  WHEN x'3149' THEN rt1.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, '-377813295' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((NULL, rt1.c3, rt1.c1))>((rt1.c0, rt1.c2, vt0.c0))))+(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))) ORDER BY LIKELY(CASE WHEN rt1.c0 THEN rt1.c1 END), CASE WHEN ((0.8676975723727179) IS FALSE) THEN CASE rt1.c1  WHEN x'3149' THEN rt1.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, '-377813295' ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt1.c3, rt1.c1))>((rt1.c0, rt1.c2, vt0.c0))))+(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY LIKELY(CASE WHEN rt1.c0 THEN rt1.c1 END), CASE WHEN ((0.8676975723727179) IS FALSE) THEN CASE rt1.c1  WHEN x'3149' THEN rt1.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, '-377813295' ASC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((((NULL, rt1.c3, rt1.c1))>((rt1.c0, rt1.c2, vt0.c0))))+(((((rt1.c0)AND(rt1.c3)))AND(rt1.c1))))) ORDER BY LIKELY(CASE WHEN rt1.c0 THEN rt1.c1 END), CASE WHEN ((0.8676975723727179) IS FALSE) THEN CASE rt1.c1  WHEN x'3149' THEN rt1.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, '-377813295' ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c0) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((rt1.c0) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c0) IS TRUE));
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON vt0.c0 WHERE ('') ORDER BY CASE CASE rt1.c3  WHEN x'd0c4' THEN rt1.c2 ELSE vt0.c0 END  WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c0)AND(vt0.c0)))AND(0x60a22d60)) END;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON vt0.c0 ORDER BY CASE CASE rt1.c3  WHEN x'd0c4' THEN rt1.c2 ELSE vt0.c0 END  WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c0)AND(vt0.c0)))AND(0x60a22d60)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON vt0.c0 WHERE ('') ORDER BY CASE CASE rt1.c3  WHEN x'd0c4' THEN rt1.c2 ELSE vt0.c0 END  WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c0)AND(vt0.c0)))AND(0x60a22d60)) END;
SELECT SUM(count) FROM (SELECT (('') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON vt0.c0 ORDER BY CASE CASE rt1.c3  WHEN x'd0c4' THEN rt1.c2 ELSE vt0.c0 END  WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c0)AND(vt0.c0)))AND(0x60a22d60)) END);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON vt0.c0 WHERE ('') ORDER BY CASE CASE rt1.c3  WHEN x'd0c4' THEN rt1.c2 ELSE vt0.c0 END  WHEN rt1.c2 COLLATE NOCASE THEN ((rt1.c0) NOT NULL) ELSE ((((rt1.c0)AND(vt0.c0)))AND(0x60a22d60)) END;
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)>(NULLIF(DISTINCT rt1.c2, rt1.c0)))) ORDER BY (((('985775660') NOT BETWEEN (rt1.c0) AND (rt1.c0)))||(LOWER(DISTINCT rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)>(NULLIF(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((('985775660') NOT BETWEEN (rt1.c0) AND (rt1.c0)))||(LOWER(DISTINCT rt1.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)>(NULLIF(DISTINCT rt1.c2, rt1.c0)))) ORDER BY (((('985775660') NOT BETWEEN (rt1.c0) AND (rt1.c0)))||(LOWER(DISTINCT rt1.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)>(NULLIF(DISTINCT rt1.c2, rt1.c0)))) IS TRUE)  as count FROM rt1 ORDER BY (((('985775660') NOT BETWEEN (rt1.c0) AND (rt1.c0)))||(LOWER(DISTINCT rt1.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1 WHERE (((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c2 END)>(NULLIF(DISTINCT rt1.c2, rt1.c0)))) ORDER BY (((('985775660') NOT BETWEEN (rt1.c0) AND (rt1.c0)))||(LOWER(DISTINCT rt1.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1 WHERE (((('XꂮtR')) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE x'65d0' END)) AND ((COALESCE(rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('XꂮtR')) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE x'65d0' END)) AND ((COALESCE(rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((('XꂮtR')) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE x'65d0' END)) AND ((COALESCE(rt1.c0, rt1.c2)))));
SELECT SUM(count) FROM (SELECT ALL ((((('XꂮtR')) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE x'65d0' END)) AND ((COALESCE(rt1.c0, rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((('XꂮtR')) BETWEEN ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 ELSE x'65d0' END)) AND ((COALESCE(rt1.c0, rt1.c2)))));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)>=(rt1.c2))) IS FALSE) WHERE (GLOB((((x'2ad2'))==((rt1.c2))), 0.8826692092297976));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((x'2ad2'))==((rt1.c2))), 0.8826692092297976)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)>=(rt1.c2))) IS FALSE));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)>=(rt1.c2))) IS FALSE) WHERE (GLOB((((x'2ad2'))==((rt1.c2))), 0.8826692092297976));
SELECT SUM(count) FROM (SELECT ALL ((GLOB((((x'2ad2'))==((rt1.c2))), 0.8826692092297976)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)>=(rt1.c2))) IS FALSE));
SELECT * FROM rt1 CROSS JOIN vt0 ON ((((rt1.c0)>=(rt1.c2))) IS FALSE) WHERE (GLOB((((x'2ad2'))==((rt1.c2))), 0.8826692092297976));
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS INTEGER) WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) IN (CASE WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((0.8573801676948083) BETWEEN (rt1.c2) AND (rt1.c2)))%(((vt0.c1) ISNULL))) DESC  NULLS FIRST, ((((rt1.c1) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) IN (CASE WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS INTEGER) ORDER BY ((((0.8573801676948083) BETWEEN (rt1.c2) AND (rt1.c2)))%(((vt0.c1) ISNULL))) DESC  NULLS FIRST, ((((rt1.c1) IS TRUE)) NOTNULL) ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS INTEGER) WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) IN (CASE WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((0.8573801676948083) BETWEEN (rt1.c2) AND (rt1.c2)))%(((vt0.c1) ISNULL))) DESC  NULLS FIRST, ((((rt1.c1) IS TRUE)) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) IN (CASE WHEN rt1.c1 THEN rt1.c1 END))) IS TRUE)  as count FROM vt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS INTEGER) ORDER BY ((((0.8573801676948083) BETWEEN (rt1.c2) AND (rt1.c2)))%(((vt0.c1) ISNULL))) DESC  NULLS FIRST, ((((rt1.c1) IS TRUE)) NOTNULL) ASC);
SELECT ALL * FROM vt0 CROSS JOIN rt1 ON CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS INTEGER) WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt1.c3))) IN (CASE WHEN rt1.c1 THEN rt1.c1 END))) ORDER BY ((((0.8573801676948083) BETWEEN (rt1.c2) AND (rt1.c2)))%(((vt0.c1) ISNULL))) DESC  NULLS FIRST, ((((rt1.c1) IS TRUE)) NOTNULL) ASC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'2d02')OR(UNLIKELY(DISTINCT vt0.c1))))OR((vt0.c0 IN ())))) ORDER BY (((-1971473771 IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1));
SELECT SUM(count) FROM (SELECT ((((((x'2d02')OR(UNLIKELY(DISTINCT vt0.c1))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((-1971473771 IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'2d02')OR(UNLIKELY(DISTINCT vt0.c1))))OR((vt0.c0 IN ())))) ORDER BY (((-1971473771 IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1));
SELECT SUM(count) FROM (SELECT ((((((x'2d02')OR(UNLIKELY(DISTINCT vt0.c1))))OR((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY (((-1971473771 IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((x'2d02')OR(UNLIKELY(DISTINCT vt0.c1))))OR((vt0.c0 IN ())))) ORDER BY (((-1971473771 IN (vt0.c1))) NOT BETWEEN ((vt0.c1 IN ())) AND (vt0.c1));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((0xffffffffe5969872)*(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((0xffffffffe5969872)*(rt1.c2))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((0xffffffffe5969872)*(rt1.c2)));
SELECT SUM(count) FROM (SELECT ((((0xffffffffe5969872)*(rt1.c2))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((0xffffffffe5969872)*(rt1.c2)));
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) ORDER BY ((((vt0.c1)OR(rt1.c3))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c1)OR(rt1.c3))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) ORDER BY ((((vt0.c1)OR(rt1.c3))) IS FALSE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((vt0.c1)OR(rt1.c3))) IS FALSE) DESC  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CAST(CAST(rt1.c1 AS NUMERIC) AS REAL)) ORDER BY ((((vt0.c1)OR(rt1.c3))) IS FALSE) DESC  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)OR(vt0.c1))) IS TRUE)) ORDER BY (vt0.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (vt0.c1 COLLATE BINARY IN ()));
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)OR(vt0.c1))) IS TRUE)) ORDER BY (vt0.c1 COLLATE BINARY IN ());
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)OR(vt0.c1))) IS TRUE)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (vt0.c1 COLLATE BINARY IN ()));
SELECT * FROM vt0, rt1 WHERE (((((vt0.c0)OR(vt0.c1))) IS TRUE)) ORDER BY (vt0.c1 COLLATE BINARY IN ());
SELECT COUNT(*) FROM rt1 WHERE ((((((- (rt1.c0)))AND(((rt1.c0)<(rt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))))) ORDER BY ((((((rt1.c2)*(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(x'3494'))  NULLS LAST, 0x6f20acff DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c0)))AND(((rt1.c0)<(rt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)*(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(x'3494'))  NULLS LAST, 0X6f20acff DESC);
SELECT COUNT(*) FROM rt1 WHERE ((((((- (rt1.c0)))AND(((rt1.c0)<(rt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))))) ORDER BY ((((((rt1.c2)*(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(x'3494'))  NULLS LAST, 0x6f20acff DESC;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c0)))AND(((rt1.c0)<(rt1.c1)))))OR(((rt1.c3) BETWEEN (rt1.c3) AND (rt1.c0))))) IS TRUE)  as count FROM rt1 ORDER BY ((((((rt1.c2)*(rt1.c1)))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(x'3494'))  NULLS LAST, 0X6f20acff DESC);
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)IS NOT(rt1.c3)))>(rt1.c1 COLLATE NOCASE)) WHERE (CAST((NOT (vt0.c1)) AS NUMERIC)) ORDER BY ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c0)<(vt0.c1)))))AND(((rt1.c3)<>(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)IS NOT(rt1.c3)))>(rt1.c1 COLLATE NOCASE)) ORDER BY ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c0)<(vt0.c1)))))AND(((rt1.c3)!=(rt1.c1)))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)IS NOT(rt1.c3)))>(rt1.c1 COLLATE NOCASE)) WHERE (CAST((NOT (vt0.c1)) AS NUMERIC)) ORDER BY ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c0)<(vt0.c1)))))AND(((rt1.c3)<>(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((CAST((NOT (vt0.c1)) AS NUMERIC)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)IS NOT(rt1.c3)))>(rt1.c1 COLLATE NOCASE)) ORDER BY ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c0)<(vt0.c1)))))AND(((rt1.c3)!=(rt1.c1)))));
SELECT * FROM rt1 INNER JOIN vt0 ON ((((rt1.c1)IS NOT(rt1.c3)))>(rt1.c1 COLLATE NOCASE)) WHERE (CAST((NOT (vt0.c1)) AS NUMERIC)) ORDER BY ((((((((((((rt1.c2)OR(rt1.c2)))AND(rt1.c3)))OR((rt1.c2 IN ()))))OR(((rt1.c2) IS TRUE))))AND(((rt1.c0)<(vt0.c1)))))AND(((rt1.c3)<>(rt1.c1))));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'1327');
SELECT SUM(count) FROM (SELECT ((x'1327') IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'1327');
SELECT SUM(count) FROM (SELECT ((x'1327') IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'1327');
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((CASE WHEN vt0.c1 THEN vt0.c1 END) NOT NULL));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 IN (vt0.c1))))>=((MAX(0x3b5fef24, rt1.c2))))) ORDER BY (((vt0.c0, rt1.c3, x'3942')) BETWEEN ((LIKELY(vt0.c0), rt1.c2, ((0x51e999dc)+(rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)), (((rt1.c0, vt0.c0, vt0.c0))==((rt1.c3, vt0.c0, rt1.c0))), MIN(rt1.c3, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 IN (vt0.c1))))>=((MAX(0x3b5fef24, rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0, rt1.c3, x'3942')) BETWEEN ((LIKELY(vt0.c0), rt1.c2, ((0x51e999dc)+(rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)), (((rt1.c0, vt0.c0, vt0.c0))=((rt1.c3, vt0.c0, rt1.c0))), MIN(rt1.c3, rt1.c0)))));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 IN (vt0.c1))))>=((MAX(0x3b5fef24, rt1.c2))))) ORDER BY (((vt0.c0, rt1.c3, x'3942')) BETWEEN ((LIKELY(vt0.c0), rt1.c2, ((0x51e999dc)+(rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)), (((rt1.c0, vt0.c0, vt0.c0))==((rt1.c3, vt0.c0, rt1.c0))), MIN(rt1.c3, rt1.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c2 IN (vt0.c1))))>=((MAX(0x3b5fef24, rt1.c2))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((vt0.c0, rt1.c3, x'3942')) BETWEEN ((LIKELY(vt0.c0), rt1.c2, ((0x51e999dc)+(rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)), (((rt1.c0, vt0.c0, vt0.c0))=((rt1.c3, vt0.c0, rt1.c0))), MIN(rt1.c3, rt1.c0)))));
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2 IN (vt0.c1))))>=((MAX(0x3b5fef24, rt1.c2))))) ORDER BY (((vt0.c0, rt1.c3, x'3942')) BETWEEN ((LIKELY(vt0.c0), rt1.c2, ((0x51e999dc)+(rt1.c1)))) AND ((((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c1)), (((rt1.c0, vt0.c0, vt0.c0))==((rt1.c3, vt0.c0, rt1.c0))), MIN(rt1.c3, rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (((CASE x''  WHEN 0.12068371487436114 THEN rt1.c2 END)*((rt1.c2 IN ())))) ORDER BY (~ (((rt1.c2)AND(0xffffffffee5fb91d)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN 0.12068371487436114 THEN rt1.c2 END)*((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2)AND(0xffffffffee5fb91d)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((CASE x''  WHEN 0.12068371487436114 THEN rt1.c2 END)*((rt1.c2 IN ())))) ORDER BY (~ (((rt1.c2)AND(0xffffffffee5fb91d)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE x''  WHEN 0.12068371487436114 THEN rt1.c2 END)*((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1 ORDER BY (~ (((rt1.c2)AND(0xffffffffee5fb91d)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1 WHERE (((CASE x''  WHEN 0.12068371487436114 THEN rt1.c2 END)*((rt1.c2 IN ())))) ORDER BY (~ (((rt1.c2)AND(0xffffffffee5fb91d)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))<<((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<<((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))<<((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))<<((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))<<((((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c0))))));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2) IS FALSE)) NOT NULL) WHERE ((((vt0.c0, rt1.c1, vt0.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, CASE rt1.c1  WHEN '' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END, ((rt1.c3)&(rt1.c0)), ((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2)), x'8379')) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), rt1.c1 COLLATE NOCASE, 'XX{gyAt&‥', rt1.c2 COLLATE BINARY, CASE rt1.c3  WHEN x'' THEN rt1.c2 END)))) ORDER BY (((rt1.c2, 0.20064520259481, rt1.c1)) NOT BETWEEN ((((vt0.c0)<=(rt1.c2)), ((rt1.c3)+(rt1.c2)), rt1.c1)) AND ((-1.078250526E9, ((0.7733311428984619) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c2)<<(vt0.c0))))) ASC, (- (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c1, vt0.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, CASE rt1.c1  WHEN '' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END, ((rt1.c3)&(rt1.c0)), ((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2)), x'8379')) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), rt1.c1 COLLATE NOCASE, 'XX{gyAt&‥', rt1.c2 COLLATE BINARY, CASE rt1.c3  WHEN x'' THEN rt1.c2 END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2) IS FALSE)) NOT NULL) ORDER BY (((rt1.c2, 0.20064520259481, rt1.c1)) NOT BETWEEN ((((vt0.c0)<=(rt1.c2)), ((rt1.c3)+(rt1.c2)), rt1.c1)) AND ((-1.078250526E9, ((0.7733311428984619) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c2)<<(vt0.c0))))) ASC, (- (rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2) IS FALSE)) NOT NULL) WHERE ((((vt0.c0, rt1.c1, vt0.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, CASE rt1.c1  WHEN '' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END, ((rt1.c3)&(rt1.c0)), ((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2)), x'8379')) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), rt1.c1 COLLATE NOCASE, 'XX{gyAt&‥', rt1.c2 COLLATE BINARY, CASE rt1.c3  WHEN x'' THEN rt1.c2 END)))) ORDER BY (((rt1.c2, 0.20064520259481, rt1.c1)) NOT BETWEEN ((((vt0.c0)<=(rt1.c2)), ((rt1.c3)+(rt1.c2)), rt1.c1)) AND ((-1.078250526E9, ((0.7733311428984619) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c2)<<(vt0.c0))))) ASC, (- (rt1.c1))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, rt1.c1, vt0.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, CASE rt1.c1  WHEN '' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END, ((rt1.c3)&(rt1.c0)), ((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2)), x'8379')) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), rt1.c1 COLLATE NOCASE, 'XX{gyAt&‥', rt1.c2 COLLATE BINARY, CASE rt1.c3  WHEN x'' THEN rt1.c2 END)))) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2) IS FALSE)) NOT NULL) ORDER BY (((rt1.c2, 0.20064520259481, rt1.c1)) NOT BETWEEN ((((vt0.c0)<=(rt1.c2)), ((rt1.c3)+(rt1.c2)), rt1.c1)) AND ((-1.078250526E9, ((0.7733311428984619) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c2)<<(vt0.c0))))) ASC, (- (rt1.c1))  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((((rt1.c2) IS FALSE)) NOT NULL) WHERE ((((vt0.c0, rt1.c1, vt0.c1, rt1.c2, rt1.c0)) BETWEEN ((rt1.c2, CASE rt1.c1  WHEN '' THEN vt0.c0 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END, ((rt1.c3)&(rt1.c0)), ((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2)), x'8379')) AND ((((((rt1.c0)AND(rt1.c0)))AND(rt1.c2)), rt1.c1 COLLATE NOCASE, 'XX{gyAt&‥', rt1.c2 COLLATE BINARY, CASE rt1.c3  WHEN x'' THEN rt1.c2 END)))) ORDER BY (((rt1.c2, 0.20064520259481, rt1.c1)) NOT BETWEEN ((((vt0.c0)<=(rt1.c2)), ((rt1.c3)+(rt1.c2)), rt1.c1)) AND ((-1.078250526E9, ((0.7733311428984619) NOT BETWEEN (rt1.c0) AND (rt1.c0)), ((rt1.c2)<<(vt0.c0))))) ASC, (- (rt1.c1))  NULLS FIRST;
SELECT ALL * FROM rt1 INNER JOIN vt0 ON rt1.c2 WHERE (CAST(CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt1.c2);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON rt1.c2 WHERE (CAST(CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END AS TEXT)) IS TRUE)  as count FROM rt1 INNER JOIN vt0 ON rt1.c2);
SELECT ALL * FROM rt1 INNER JOIN vt0 ON rt1.c2 WHERE (CAST(CASE WHEN vt0.c1 THEN rt1.c3 ELSE vt0.c0 END AS TEXT));
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt1.c2))  WHEN ((rt1.c2)IS(rt1.c3)) THEN ((rt1.c0)AND(rt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt1.c2))  WHEN ((rt1.c2)IS(rt1.c3)) THEN ((rt1.c0)AND(rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt1.c2))  WHEN ((rt1.c2)IS(rt1.c3)) THEN ((rt1.c0)AND(rt1.c1)) END;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM rt1 ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt1.c2))  WHEN ((rt1.c2)IS(rt1.c3)) THEN ((rt1.c0)AND(rt1.c1)) END);
SELECT ALL COUNT(*) FROM rt1 WHERE (x'') ORDER BY CASE ((((rt1.c3)AND(rt1.c2)))OR(rt1.c2))  WHEN ((rt1.c2)IS(rt1.c3)) THEN ((rt1.c0)AND(rt1.c1)) END;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1)*(rt1.c3)))) AND (((vt0.c1 IN ()))))) ORDER BY ((((((((((rt1.c1)/(x'')))AND(((vt0.c0) ISNULL))))AND(((((vt0.c0)OR(0.4733632709594825)))AND(rt1.c3)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CASE WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c0 END))  NULLS LAST, (((rt1.c2)) NOT BETWEEN (((vt0.c1 IN (rt1.c3)))) AND ((CAST(rt1.c2 AS NUMERIC)))) DESC  NULLS LAST, ((((~ (vt0.c1)), rt1.c2, ((vt0.c0) IS TRUE)))<=((((-596188081) IS FALSE), LIKELY(rt1.c2), rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt1.c1)*(rt1.c3)))) AND (((vt0.c1 IN ()))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c1)/(x'')))AND(((vt0.c0) ISNULL))))AND(((((vt0.c0)OR(0.4733632709594825)))AND(rt1.c3)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CASE WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c0 END))  NULLS LAST, (((rt1.c2)) NOT BETWEEN (((vt0.c1 IN (rt1.c3)))) AND ((CAST(rt1.c2 AS NUMERIC)))) DESC  NULLS LAST, ((((~ (vt0.c1)), rt1.c2, ((vt0.c0) IS TRUE)))<=((((-596188081) IS FALSE), LIKELY(rt1.c2), rt1.c1))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1)*(rt1.c3)))) AND (((vt0.c1 IN ()))))) ORDER BY ((((((((((rt1.c1)/(x'')))AND(((vt0.c0) ISNULL))))AND(((((vt0.c0)OR(0.4733632709594825)))AND(rt1.c3)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CASE WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c0 END))  NULLS LAST, (((rt1.c2)) NOT BETWEEN (((vt0.c1 IN (rt1.c3)))) AND ((CAST(rt1.c2 AS NUMERIC)))) DESC  NULLS LAST, ((((~ (vt0.c1)), rt1.c2, ((vt0.c0) IS TRUE)))<=((((-596188081) IS FALSE), LIKELY(rt1.c2), rt1.c1)));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) BETWEEN ((((rt1.c1)*(rt1.c3)))) AND (((vt0.c1 IN ()))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((((((((((rt1.c1)/(x'')))AND(((vt0.c0) ISNULL))))AND(((((vt0.c0)OR(0.4733632709594825)))AND(rt1.c3)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CASE WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c0 END))  NULLS LAST, (((rt1.c2)) NOT BETWEEN (((vt0.c1 IN (rt1.c3)))) AND ((CAST(rt1.c2 AS NUMERIC)))) DESC  NULLS LAST, ((((~ (vt0.c1)), rt1.c2, ((vt0.c0) IS TRUE)))<=((((-596188081) IS FALSE), LIKELY(rt1.c2), rt1.c1))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c2)) BETWEEN ((((rt1.c1)*(rt1.c3)))) AND (((vt0.c1 IN ()))))) ORDER BY ((((((((((rt1.c1)/(x'')))AND(((vt0.c0) ISNULL))))AND(((((vt0.c0)OR(0.4733632709594825)))AND(rt1.c3)))))AND(CAST(vt0.c1 AS NUMERIC))))OR(CASE WHEN rt1.c1 THEN rt1.c3 ELSE vt0.c0 END))  NULLS LAST, (((rt1.c2)) NOT BETWEEN (((vt0.c1 IN (rt1.c3)))) AND ((CAST(rt1.c2 AS NUMERIC)))) DESC  NULLS LAST, ((((~ (vt0.c1)), rt1.c2, ((vt0.c0) IS TRUE)))<=((((-596188081) IS FALSE), LIKELY(rt1.c2), rt1.c1)));
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3)LIKE('-1761183694')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)LIKE('-1761183694')) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3)LIKE('-1761183694')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((rt1.c3)LIKE('-1761183694')) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (((rt1.c3)LIKE('-1761183694')) COLLATE BINARY);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOTNULL))>>(rt1.c1))) ORDER BY ((((rt1.c3)*(rt1.c3))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (rt1.c2))  NULLS LAST, (~ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, (((((rt1.c1) IS FALSE)))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL))>>(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)*(rt1.c3))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (rt1.c2))  NULLS LAST, (~ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, (((((rt1.c1) IS FALSE)))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOTNULL))>>(rt1.c1))) ORDER BY ((((rt1.c3)*(rt1.c3))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (rt1.c2))  NULLS LAST, (~ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, (((((rt1.c1) IS FALSE)))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOTNULL))>>(rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c3)*(rt1.c3))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (rt1.c2))  NULLS LAST, (~ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, (((((rt1.c1) IS FALSE)))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) DESC);
SELECT ALL * FROM rt1 WHERE (((((rt1.c0) NOTNULL))>>(rt1.c1))) ORDER BY ((((rt1.c3)*(rt1.c3))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c2)))) AND (rt1.c2))  NULLS LAST, (~ (((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c3)))) DESC, (((((rt1.c1) IS FALSE)))<>((((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0))))) DESC;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((json_quote(x'0a90f606')) ISNULL) WHERE ('-1591419288') ORDER BY ((((((rt1.c3)>>(vt0.c0)))OR(((((rt1.c2)OR(vt0.c1)))OR(x'')))))AND(((rt1.c2)*(rt1.c2)))), (((rt1.c2)) BETWEEN (((NOT (rt1.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1591419288') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((json_quote(x'0a90f606')) ISNULL) ORDER BY ((((((rt1.c3)>>(vt0.c0)))OR(((((rt1.c2)OR(vt0.c1)))OR(x'')))))AND(((rt1.c2)*(rt1.c2)))), (((rt1.c2)) BETWEEN (((NOT (rt1.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END))) ASC);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((json_quote(x'0a90f606')) ISNULL) WHERE ('-1591419288') ORDER BY ((((((rt1.c3)>>(vt0.c0)))OR(((((rt1.c2)OR(vt0.c1)))OR(x'')))))AND(((rt1.c2)*(rt1.c2)))), (((rt1.c2)) BETWEEN (((NOT (rt1.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('-1591419288') IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((json_quote(x'0a90f606')) ISNULL) ORDER BY ((((((rt1.c3)>>(vt0.c0)))OR(((((rt1.c2)OR(vt0.c1)))OR(x'')))))AND(((rt1.c2)*(rt1.c2)))), (((rt1.c2)) BETWEEN (((NOT (rt1.c0)))) AND ((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c3 END))) ASC);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE NULLIF(rt1.c1, vt0.c0)  WHEN rt1.c2 THEN (((rt1.c1))<=((vt0.c1))) ELSE ((vt0.c1)&(rt1.c0)) END) ORDER BY (HEX(DISTINCT rt1.c0) IN ()) ASC, ((rt1.c3)!=(rt1.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(rt1.c1, vt0.c0)  WHEN rt1.c2 THEN (((rt1.c1))<=((vt0.c1))) ELSE ((vt0.c1)&(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (HEX(DISTINCT rt1.c0) IN ()) ASC, ((rt1.c3)<>(rt1.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE NULLIF(rt1.c1, vt0.c0)  WHEN rt1.c2 THEN (((rt1.c1))<=((vt0.c1))) ELSE ((vt0.c1)&(rt1.c0)) END) ORDER BY (HEX(DISTINCT rt1.c0) IN ()) ASC, ((rt1.c3)!=(rt1.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE NULLIF(rt1.c1, vt0.c0)  WHEN rt1.c2 THEN (((rt1.c1))<=((vt0.c1))) ELSE ((vt0.c1)&(rt1.c0)) END) IS TRUE)  as count FROM rt1, vt0 ORDER BY (HEX(DISTINCT rt1.c0) IN ()) ASC, ((rt1.c3)<>(rt1.c3)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CASE NULLIF(rt1.c1, vt0.c0)  WHEN rt1.c2 THEN (((rt1.c1))<=((vt0.c1))) ELSE ((vt0.c1)&(rt1.c0)) END) ORDER BY (HEX(DISTINCT rt1.c0) IN ()) ASC, ((rt1.c3)!=(rt1.c3)) COLLATE BINARY ASC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((CAST(rt1.c3 AS REAL)))!=((((vt0.c0)==(vt0.c0)))))) ORDER BY ((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c0 IN ())) AND (CAST(rt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c3 AS REAL)))<>((((vt0.c0)=(vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c0 IN ())) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((CAST(rt1.c3 AS REAL)))!=((((vt0.c0)==(vt0.c0)))))) ORDER BY ((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c0 IN ())) AND (CAST(rt1.c1 AS NUMERIC)));
SELECT SUM(count) FROM (SELECT (((((CAST(rt1.c3 AS REAL)))<>((((vt0.c0)=(vt0.c0)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c0 IN ())) AND (CAST(rt1.c1 AS NUMERIC))));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((CAST(rt1.c3 AS REAL)))!=((((vt0.c0)==(vt0.c0)))))) ORDER BY ((LIKELY(DISTINCT rt1.c2)) NOT BETWEEN ((rt1.c0 IN ())) AND (CAST(rt1.c1 AS NUMERIC)));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))OR(0.23063055033118174)))OR(((((x'')OR(rt1.c2)))AND(rt1.c2))))) ORDER BY UPPER(DISTINCT (+ (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))OR(0.23063055033118174)))OR(((((x'')OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT (+ (rt1.c0))));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))OR(0.23063055033118174)))OR(((((x'')OR(rt1.c2)))AND(rt1.c2))))) ORDER BY UPPER(DISTINCT (+ (rt1.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))OR(0.23063055033118174)))OR(((((x'')OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1 ORDER BY UPPER(DISTINCT (+ (rt1.c0))));
SELECT ALL * FROM rt1 WHERE (((((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))OR(0.23063055033118174)))OR(((((x'')OR(rt1.c2)))AND(rt1.c2))))) ORDER BY UPPER(DISTINCT (+ (rt1.c0)));
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))||((vt0.c1 IN ())))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))=((vt0.c1))))))AND((((('-1886110267')OR(vt0.c1)))OR(vt0.c0)))), x'45cd', ((json_array_length(vt0.c0)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB))||((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))==((vt0.c1))))))AND((((('-1886110267')OR(vt0.c1)))OR(vt0.c0)))), x'45cd', ((json_array_length(vt0.c0)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c1 AS BLOB))||((vt0.c1 IN ())))) ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))=((vt0.c1))))))AND((((('-1886110267')OR(vt0.c1)))OR(vt0.c0)))), x'45cd', ((json_array_length(vt0.c0)) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CAST(vt0.c1 AS BLOB))||((vt0.c1 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))==((vt0.c1))))))AND((((('-1886110267')OR(vt0.c1)))OR(vt0.c0)))), x'45cd', ((json_array_length(vt0.c0)) IS FALSE)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((vt0.c0)AND(rt1.c2)))OR(rt1.c1))) WHERE (((((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c0)))==(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c0)))==(rt1.c1))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((vt0.c0)AND(rt1.c2)))OR(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((vt0.c0)AND(rt1.c2)))OR(rt1.c1))) WHERE (((((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c0)))==(rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c0)))==(rt1.c1))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((vt0.c0)AND(rt1.c2)))OR(rt1.c1))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON LIKELY(((((vt0.c0)AND(rt1.c2)))OR(rt1.c1))) WHERE (((((rt1.c0) NOT BETWEEN (vt0.c1) AND (rt1.c0)))==(rt1.c1)));
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((NOT (rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((NOT (rt1.c2))) IS TRUE));
SELECT SUM(count) FROM (SELECT (((((NOT (rt1.c2))) IS TRUE)) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((((NOT (rt1.c2))) IS TRUE));
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CASE WHEN (((rt1.c2))<((vt0.c1))) THEN MIN(vt0.c1, vt0.c0) ELSE GLOB(rt1.c3, rt1.c0) END WHERE (((rt1.c3 COLLATE RTRIM)IS NOT('')));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM)IS NOT(''))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE WHEN (((rt1.c2))<((vt0.c1))) THEN MIN(vt0.c1, vt0.c0) ELSE GLOB(rt1.c3, rt1.c0) END);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CASE WHEN (((rt1.c2))<((vt0.c1))) THEN MIN(vt0.c1, vt0.c0) ELSE GLOB(rt1.c3, rt1.c0) END WHERE (((rt1.c3 COLLATE RTRIM)IS NOT('')));
SELECT SUM(count) FROM (SELECT ((((rt1.c3 COLLATE RTRIM)IS NOT(''))) IS TRUE)  as count FROM vt0 INNER JOIN rt1 ON CASE WHEN (((rt1.c2))<((vt0.c1))) THEN MIN(vt0.c1, vt0.c0) ELSE GLOB(rt1.c3, rt1.c0) END);
SELECT ALL * FROM vt0 INNER JOIN rt1 ON CASE WHEN (((rt1.c2))<((vt0.c1))) THEN MIN(vt0.c1, vt0.c0) ELSE GLOB(rt1.c3, rt1.c0) END WHERE (((rt1.c3 COLLATE RTRIM)IS NOT('')));
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM rt1 WHERE (251584162);
SELECT SUM(count) FROM (SELECT ALL ((251584162) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (251584162);
SELECT SUM(count) FROM (SELECT ALL ((251584162) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE (251584162);
SELECT ALL * FROM vt0, rt1 WHERE ((((+ (rt1.c0)))%(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY (- (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0)))%(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((+ (rt1.c0)))%(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY (- (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c0)))%(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT ALL * FROM vt0, rt1 WHERE ((((+ (rt1.c0)))%(CASE NULL  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c0 END))) ORDER BY (- (((rt1.c1) BETWEEN (vt0.c0) AND (vt0.c1))));
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c3)GLOB(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3)GLOB(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c3)GLOB(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((rt1.c3)GLOB(rt1.c3))))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (((rt1.c3)GLOB(rt1.c3)))));
SELECT * FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c3 AS INTEGER) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c3 COLLATE RTRIM END) ORDER BY (((- (rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (x'c658') AND (rt1.c1))) AND (rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c3 AS INTEGER) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c3 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (x'c658') AND (rt1.c1))) AND (rt1.c0)) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c3 AS INTEGER) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c3 COLLATE RTRIM END) ORDER BY (((- (rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (x'c658') AND (rt1.c1))) AND (rt1.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(rt1.c3 AS INTEGER) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c3 COLLATE RTRIM END) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((- (rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (x'c658') AND (rt1.c1))) AND (rt1.c0)) DESC  NULLS FIRST);
SELECT * FROM vt0, rt1 WHERE (CASE WHEN CAST(rt1.c3 AS INTEGER) THEN CAST(rt1.c0 AS REAL) ELSE rt1.c3 COLLATE RTRIM END) ORDER BY (((- (rt1.c2))) NOT BETWEEN (((rt1.c0) BETWEEN (x'c658') AND (rt1.c1))) AND (rt1.c0)) DESC  NULLS FIRST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 END, 0.835475575232006)) ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 END, 0.835475575232006)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 END, 0.835475575232006)) ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(DISTINCT CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 END, 0.835475575232006)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (LIKELIHOOD(DISTINCT CASE WHEN rt1.c3 THEN vt0.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt0.c0 THEN vt0.c0 END, 0.835475575232006)) ORDER BY CAST((vt0.c1 IN ()) AS REAL) ASC  NULLS LAST;
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END) BETWEEN (LTRIM(rt1.c2)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END) BETWEEN (LTRIM(rt1.c2)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END) BETWEEN (LTRIM(rt1.c2)) AND (CAST(rt1.c2 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END) BETWEEN (LTRIM(rt1.c2)) AND (CAST(rt1.c2 AS BLOB)))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN rt1.c3 END) BETWEEN (LTRIM(rt1.c2)) AND (CAST(rt1.c2 AS BLOB))));
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1 IN ()))IS NOT(LOWER(rt1.c1)))) ORDER BY (('')IS(((rt1.c1)*(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))IS NOT(LOWER(rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (('')IS(((rt1.c1)*(rt1.c2)))) DESC);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1 IN ()))IS NOT(LOWER(rt1.c1)))) ORDER BY (('')IS(((rt1.c1)*(rt1.c2)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c1 IN ()))IS NOT(LOWER(rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (('')IS(((rt1.c1)*(rt1.c2)))) DESC);
SELECT * FROM rt1, vt0 WHERE ((((vt0.c1 IN ()))IS NOT(LOWER(rt1.c1)))) ORDER BY (('')IS(((rt1.c1)*(rt1.c2)))) DESC;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) ORDER BY (((rt1.c0)%(rt1.c3)) IN ()) ASC, (((rt1.c0 IN (NULL)))<(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)%(rt1.c3)) IN ()) ASC, (((rt1.c0 IN (NULL)))<(((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) ORDER BY (((rt1.c0)%(rt1.c3)) IN ()) ASC, (((rt1.c0 IN (NULL)))<(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((NOT (((rt1.c1) NOTNULL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c0)%(rt1.c3)) IN ()) ASC, (((rt1.c0 IN (NULL)))<(((rt1.c1) NOT NULL))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((NOT (((rt1.c1) NOTNULL)))) ORDER BY (((rt1.c0)%(rt1.c3)) IN ()) ASC, (((rt1.c0 IN (NULL)))<(((rt1.c1) NOT NULL))) DESC  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE (((0.5596399807794298 COLLATE NOCASE)!=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((0.5596399807794298 COLLATE NOCASE)<>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.5596399807794298 COLLATE NOCASE)!=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ((((0.5596399807794298 COLLATE NOCASE)<>((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((0.5596399807794298 COLLATE NOCASE)!=((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY CAST(((((rt1.c2)OR(vt0.c1)))OR(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((((rt1.c2)OR(vt0.c1)))OR(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY CAST(((((rt1.c2)OR(vt0.c1)))OR(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(((((rt1.c2)OR(vt0.c1)))OR(rt1.c0)) AS REAL)  NULLS FIRST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (NULL) ORDER BY CAST(((((rt1.c2)OR(vt0.c1)))OR(rt1.c0)) AS REAL)  NULLS FIRST;
SELECT ALL * FROM rt1, vt0 WHERE ((((((- (rt1.c3)))AND(rt1.c2)))OR(vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN UNICODE(rt1.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c3)))AND(rt1.c2)))OR(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN UNICODE(rt1.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((- (rt1.c3)))AND(rt1.c2)))OR(vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN UNICODE(rt1.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((- (rt1.c3)))AND(rt1.c2)))OR(vt0.c1 COLLATE NOCASE))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN UNICODE(rt1.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE ((((((- (rt1.c3)))AND(rt1.c2)))OR(vt0.c1 COLLATE NOCASE))) ORDER BY CASE WHEN UNICODE(rt1.c1) THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)) END  NULLS LAST;
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL, rt1.c0, rt1.c2))>=((rt1.c1, rt1.c2, rt1.c1))))>=(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt1.c0, rt1.c2))>=((rt1.c1, rt1.c2, rt1.c1))))>=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL, rt1.c0, rt1.c2))>=((rt1.c1, rt1.c2, rt1.c1))))>=(rt1.c2 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ALL (((((((NULL, rt1.c0, rt1.c2))>=((rt1.c1, rt1.c2, rt1.c1))))>=(rt1.c2 COLLATE BINARY))) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((((NULL, rt1.c0, rt1.c2))>=((rt1.c1, rt1.c2, rt1.c1))))>=(rt1.c2 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE RTRIM))) ORDER BY ((0.7699460014153292)LIKE(ABS(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0.7699460014153292)LIKE(ABS(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE RTRIM))) ORDER BY ((0.7699460014153292)LIKE(ABS(DISTINCT rt1.c1)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN ())) NOT BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE RTRIM))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((0.7699460014153292)LIKE(ABS(DISTINCT rt1.c1))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((rt1.c0 IN ())) NOT BETWEEN ((+ (rt1.c2))) AND (rt1.c1 COLLATE RTRIM))) ORDER BY ((0.7699460014153292)LIKE(ABS(DISTINCT rt1.c1)));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOT NULL)) ISNULL)) ORDER BY (((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((+ (rt1.c0)), (((vt0.c1))>=((rt1.c1))), ((vt0.c1)*('K7qzOv>r')))) AND (((rt1.c0 IN ()), rt1.c0, ((((((((rt1.c0)OR(x'')))OR(rt1.c2)))AND(rt1.c3)))OR(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((+ (rt1.c0)), (((vt0.c1))>=((rt1.c1))), ((vt0.c1)*('K7qzOv>r')))) AND (((rt1.c0 IN ()), rt1.c0, ((((((((rt1.c0)OR(x'')))OR(rt1.c2)))AND(rt1.c3)))OR(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOT NULL)) ISNULL)) ORDER BY (((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((+ (rt1.c0)), (((vt0.c1))>=((rt1.c1))), ((vt0.c1)*('K7qzOv>r')))) AND (((rt1.c0 IN ()), rt1.c0, ((((((((rt1.c0)OR(x'')))OR(rt1.c2)))AND(rt1.c3)))OR(vt0.c0)))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c3) NOT NULL)) ISNULL)) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((+ (rt1.c0)), (((vt0.c1))>=((rt1.c1))), ((vt0.c1)*('K7qzOv>r')))) AND (((rt1.c0 IN ()), rt1.c0, ((((((((rt1.c0)OR(x'')))OR(rt1.c2)))AND(rt1.c3)))OR(vt0.c0)))))  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c3) NOT NULL)) ISNULL)) ORDER BY (((rt1.c2, vt0.c0, rt1.c2)) NOT BETWEEN (((+ (rt1.c0)), (((vt0.c1))>=((rt1.c1))), ((vt0.c1)*('K7qzOv>r')))) AND (((rt1.c0 IN ()), rt1.c0, ((((((((rt1.c0)OR(x'')))OR(rt1.c2)))AND(rt1.c3)))OR(vt0.c0)))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'') ORDER BY ((((rt1.c3)==(rt1.c1)))|(rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c3)=(rt1.c1)))|(rt1.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'') ORDER BY ((((rt1.c3)==(rt1.c1)))|(rt1.c1)) ASC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((rt1.c3)=(rt1.c1)))|(rt1.c1)) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (x'') ORDER BY ((((rt1.c3)==(rt1.c1)))|(rt1.c1)) ASC;
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (TRIM(DISTINCT ((vt0.c0)LIKE(vt0.c0))));
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c1)AND(NULL)))OR(rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c1)AND(NULL)))OR(rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c1)AND(NULL)))OR(rt1.c3)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((((rt1.c1)AND(NULL)))OR(rt1.c3)) AS TEXT)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (CAST(((((rt1.c1)AND(NULL)))OR(rt1.c3)) AS TEXT));
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)OR(CAST(rt1.c0 AS BLOB))))AND(((((((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(CAST(rt1.c0 AS BLOB))))AND(((((((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)OR(CAST(rt1.c0 AS BLOB))))AND(((((((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)OR(CAST(rt1.c0 AS BLOB))))AND(((((((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c0))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (((((rt1.c0)OR(CAST(rt1.c0 AS BLOB))))AND(((((((((((((rt1.c2)AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))OR(rt1.c3)))OR(rt1.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8445335706205227)))AND(vt0.c1)))OR((('1044564918') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8445335706205227)))AND(vt0.c1)))OR((('1044564918') NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8445335706205227)))AND(vt0.c1)))OR((('1044564918') NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8445335706205227)))AND(vt0.c1)))OR((('1044564918') NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.8445335706205227)))AND(vt0.c1)))OR((('1044564918') NOT NULL))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)|(rt1.c2))) NOT BETWEEN ((rt1.c2 IN ())) AND (((0Xffffffff96b07107)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(rt1.c2))) NOT BETWEEN ((rt1.c2 IN ())) AND (((0xffffffff96b07107)-(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)|(rt1.c2))) NOT BETWEEN ((rt1.c2 IN ())) AND (((0Xffffffff96b07107)-(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(rt1.c2))) NOT BETWEEN ((rt1.c2 IN ())) AND (((0xffffffff96b07107)-(vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((((rt1.c1)|(rt1.c2))) NOT BETWEEN ((rt1.c2 IN ())) AND (((0Xffffffff96b07107)-(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)*(0.07452040462744314)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)*(0.07452040462744314))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)*(0.07452040462744314)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)*(0.07452040462744314))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)*(0.07452040462744314)))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)-(vt0.c1)))>=(rt1.c2 COLLATE RTRIM)) WHERE ((((rt1.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((((0.6841460207904042) IS TRUE), LIKELY(vt0.c1), rt1.c3)) AND (((rt1.c1 IN ()), ((rt1.c3) NOT NULL), CHANGES())))) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) DESC  NULLS LAST, ((((vt0.c0) ISNULL)) IS FALSE) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((((0.6841460207904042) IS TRUE), LIKELY(vt0.c1), rt1.c3)) AND (((rt1.c1 IN ()), ((rt1.c3) NOT NULL), CHANGES())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)-(vt0.c1)))>=(rt1.c2 COLLATE RTRIM)) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) DESC  NULLS LAST, ((((vt0.c0) ISNULL)) IS FALSE) ASC, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)-(vt0.c1)))>=(rt1.c2 COLLATE RTRIM)) WHERE ((((rt1.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((((0.6841460207904042) IS TRUE), LIKELY(vt0.c1), rt1.c3)) AND (((rt1.c1 IN ()), ((rt1.c3) NOT NULL), CHANGES())))) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) DESC  NULLS LAST, ((((vt0.c0) ISNULL)) IS FALSE) ASC, NULL  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((((0.6841460207904042) IS TRUE), LIKELY(vt0.c1), rt1.c3)) AND (((rt1.c1 IN ()), ((rt1.c3) NOT NULL), CHANGES())))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)-(vt0.c1)))>=(rt1.c2 COLLATE RTRIM)) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) DESC  NULLS LAST, ((((vt0.c0) ISNULL)) IS FALSE) ASC, NULL  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON ((((vt0.c1)-(vt0.c1)))>=(rt1.c2 COLLATE RTRIM)) WHERE ((((rt1.c0, rt1.c1, vt0.c0)) NOT BETWEEN ((((0.6841460207904042) IS TRUE), LIKELY(vt0.c1), rt1.c3)) AND (((rt1.c1 IN ()), ((rt1.c3) NOT NULL), CHANGES())))) ORDER BY ((((vt0.c0) NOTNULL)) NOT NULL) DESC  NULLS LAST, ((((vt0.c0) ISNULL)) IS FALSE) ASC, NULL  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((LOWER(DISTINCT vt0.c1)) IS FALSE)  NULLS LAST, json(((vt0.c1)>=(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((LOWER(DISTINCT vt0.c1)) IS FALSE)  NULLS LAST, json(((vt0.c1)>=(rt1.c0)))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((LOWER(DISTINCT vt0.c1)) IS FALSE)  NULLS LAST, json(((vt0.c1)>=(rt1.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c1) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((LOWER(DISTINCT vt0.c1)) IS FALSE)  NULLS LAST, json(((vt0.c1)>=(rt1.c0)))  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (rt1.c1) ORDER BY ((LOWER(DISTINCT vt0.c1)) IS FALSE)  NULLS LAST, json(((vt0.c1)>=(rt1.c0)))  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE 'TRUE'  WHEN x'7a77' COLLATE RTRIM THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE 'TRUE'  WHEN x'7a77' COLLATE RTRIM THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE 'TRUE'  WHEN x'7a77' COLLATE RTRIM THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END END);
SELECT SUM(count) FROM (SELECT ((CASE 'TRUE'  WHEN x'7a77' COLLATE RTRIM THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE 'TRUE'  WHEN x'7a77' COLLATE RTRIM THEN CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END END);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN (rt1.c1)))AND(rt1.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt1.c1)))AND(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN (rt1.c1)))AND(rt1.c3 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c0 IN (rt1.c1)))AND(rt1.c3 COLLATE NOCASE))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((((rt1.c0 IN (rt1.c1)))AND(rt1.c3 COLLATE NOCASE)));
SELECT ALL * FROM vt0 WHERE (CAST(json_patch(vt0.c0, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(json_patch(vt0.c0, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CAST(json_patch(vt0.c0, vt0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(json_patch(vt0.c0, vt0.c0) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM rt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))||((- (rt1.c3))))) ORDER BY DATE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c2)), json_remove(rt1.c1, '0.17812018943690633', rt1.c1, rt1.c1), ((vt0.c0)AND(rt1.c0)), (+ (rt1.c0)), (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))  NULLS FIRST, ((rt1.c0)>=(((vt0.c0)<<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))||((- (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY DATE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c2)), json_remove(rt1.c1, '0.17812018943690633', rt1.c1, rt1.c1), ((vt0.c0)AND(rt1.c0)), (+ (rt1.c0)), (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))  NULLS FIRST, ((rt1.c0)>=(((vt0.c0)<<(vt0.c0)))) ASC);
SELECT * FROM rt1, vt0 WHERE ((((((vt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))||((- (rt1.c3))))) ORDER BY DATE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c2)), json_remove(rt1.c1, '0.17812018943690633', rt1.c1, rt1.c1), ((vt0.c0)AND(rt1.c0)), (+ (rt1.c0)), (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))  NULLS FIRST, ((rt1.c0)>=(((vt0.c0)<<(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c3))))||((- (rt1.c3))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY DATE(((((((((vt0.c0)OR(vt0.c0)))AND(rt1.c2)))AND(vt0.c1)))AND(rt1.c2)), json_remove(rt1.c1, '0.17812018943690633', rt1.c1, rt1.c1), ((vt0.c0)AND(rt1.c0)), (+ (rt1.c0)), (((NULL)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c1))))  NULLS FIRST, ((rt1.c0)>=(((vt0.c0)<<(vt0.c0)))) ASC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt0.c1)))==(rt1.c0)) WHERE (((((vt0.c1) NOTNULL))!=(((((rt1.c2)OR(vt0.c1)))AND(rt1.c2))))) ORDER BY COALESCE(DISTINCT (((('731040101')AND(rt1.c1)))AND(rt1.c2)), ((vt0.c0) NOTNULL), 'BQ', ((rt1.c0)AND(vt0.c0))), (rt1.c0 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))<>(((((rt1.c2)OR(vt0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt0.c1)))==(rt1.c0)) ORDER BY COALESCE(DISTINCT (((('731040101')AND(rt1.c1)))AND(rt1.c2)), ((vt0.c0) NOTNULL), 'BQ', ((rt1.c0)AND(vt0.c0))), (rt1.c0 IN ()) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt0.c1)))==(rt1.c0)) WHERE (((((vt0.c1) NOTNULL))!=(((((rt1.c2)OR(vt0.c1)))AND(rt1.c2))))) ORDER BY COALESCE(DISTINCT (((('731040101')AND(rt1.c1)))AND(rt1.c2)), ((vt0.c0) NOTNULL), 'BQ', ((rt1.c0)AND(vt0.c0))), (rt1.c0 IN ()) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c1) NOTNULL))<>(((((rt1.c2)OR(vt0.c1)))AND(rt1.c2))))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt0.c1)))==(rt1.c0)) ORDER BY COALESCE(DISTINCT (((('731040101')AND(rt1.c1)))AND(rt1.c2)), ((vt0.c0) NOTNULL), 'BQ', ((rt1.c0)AND(vt0.c0))), (rt1.c0 IN ()) COLLATE RTRIM DESC);
SELECT COUNT(*) FROM vt0 RIGHT OUTER JOIN rt1 ON ((((vt0.c0) NOT BETWEEN (rt1.c3) AND (vt0.c1)))==(rt1.c0)) WHERE (((((vt0.c1) NOTNULL))!=(((((rt1.c2)OR(vt0.c1)))AND(rt1.c2))))) ORDER BY COALESCE(DISTINCT (((('731040101')AND(rt1.c1)))AND(rt1.c2)), ((vt0.c0) NOTNULL), 'BQ', ((rt1.c0)AND(vt0.c0))), (rt1.c0 IN ()) COLLATE RTRIM DESC;
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (vt0.c0);
SELECT * FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC) WHERE (((((rt1.c1)|(vt0.c1)))IS(((rt1.c2)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(vt0.c1)))IS(((rt1.c2)IS NOT(vt0.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC));
SELECT * FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC) WHERE (((((rt1.c1)|(vt0.c1)))IS(((rt1.c2)IS NOT(vt0.c1)))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c1)|(vt0.c1)))IS(((rt1.c2)IS NOT(vt0.c1))))) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC));
SELECT * FROM rt1 CROSS JOIN vt0 ON CAST(((rt1.c1) IS FALSE) AS NUMERIC) WHERE (((((rt1.c1)|(vt0.c1)))IS(((rt1.c2)IS NOT(vt0.c1)))));
SELECT ALL * FROM vt0 WHERE (CASE ((((((((((((x'8d8e')OR(vt0.c1)))AND('m')))OR(vt0.c1)))OR(vt0.c1)))OR(0.05139296880000299)))OR(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (+ ((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((x'8d8e')OR(vt0.c1)))AND('m')))OR(vt0.c1)))OR(vt0.c1)))OR(0.05139296880000299)))OR(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((- (vt0.c1)))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((((((((((((x'8d8e')OR(vt0.c1)))AND('m')))OR(vt0.c1)))OR(vt0.c1)))OR(0.05139296880000299)))OR(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (+ ((- (vt0.c1)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((((((((((((x'8d8e')OR(vt0.c1)))AND('m')))OR(vt0.c1)))OR(vt0.c1)))OR(0.05139296880000299)))OR(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN ()) END) IS TRUE)  as count FROM vt0 ORDER BY (+ ((- (vt0.c1)))) ASC);
SELECT ALL * FROM vt0 WHERE (CASE ((((((((((((x'8d8e')OR(vt0.c1)))AND('m')))OR(vt0.c1)))OR(vt0.c1)))OR(0.05139296880000299)))OR(vt0.c1))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)) THEN (vt0.c1 IN ()) END) ORDER BY (+ ((- (vt0.c1)))) ASC;
SELECT * FROM rt1 NOT INDEXED WHERE (((((rt1.c0))>=((rt1.c0))) IN ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>=((rt1.c0))) IN ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE (((((rt1.c0))>=((rt1.c0))) IN ((rt1.c2 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0))>=((rt1.c0))) IN ((rt1.c2 IN ())))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 NOT INDEXED WHERE (((((rt1.c0))>=((rt1.c0))) IN ((rt1.c2 IN ()))));
SELECT ALL * FROM rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)) IN ()) WHERE (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)) IN ()));
SELECT ALL * FROM rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)) IN ()) WHERE (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3))));
SELECT SUM(count) FROM (SELECT ((UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3)))) IS TRUE)  as count FROM rt1 LEFT OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)) IN ()));
SELECT ALL * FROM rt1 NOT INDEXED LEFT OUTER JOIN vt0 ON (((vt0.c1) BETWEEN (vt0.c1) AND (rt1.c2)) IN ()) WHERE (UNLIKELY(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c3))));
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((+ (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('1221591033');
SELECT SUM(count) FROM (SELECT (('1221591033') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('1221591033');
SELECT SUM(count) FROM (SELECT (('1221591033') IS TRUE)  as count FROM rt1, vt0);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ('1221591033');
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((-1387144930 IN ())) BETWEEN ((((rt1.c2))=((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((x'')))))) ORDER BY rt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((-1387144930 IN ())) BETWEEN ((((rt1.c2))==((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((x'')))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((-1387144930 IN ())) BETWEEN ((((rt1.c2))=((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((x'')))))) ORDER BY rt1.c0 COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ALL (((((-1387144930 IN ())) BETWEEN ((((rt1.c2))==((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((x'')))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((-1387144930 IN ())) BETWEEN ((((rt1.c2))=((vt0.c1)))) AND ((((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((x'')))))) ORDER BY rt1.c0 COLLATE NOCASE;
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((rt1.c0 COLLATE NOCASE) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (rt1.c0 COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS REAL))+(((rt1.c0)>=(x'4b64')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL))+(((rt1.c0)>=(x'4b64'))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS REAL))+(((rt1.c0)>=(x'4b64')))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS REAL))+(((rt1.c0)>=(x'4b64'))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CAST(rt1.c2 AS REAL))+(((rt1.c0)>=(x'4b64')))));
SELECT COUNT(*) FROM vt0, rt1 WHERE ((~ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((~ (vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL (((~ (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((~ (vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)AND(rt1.c0))) AND ('/')));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)AND(rt1.c0))) AND ('/'))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)AND(rt1.c0))) AND ('/')));
SELECT SUM(count) FROM (SELECT ((((rt1.c0 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)AND(rt1.c0))) AND ('/'))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((rt1.c0 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)AND(rt1.c0))) AND ('/')));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE NULL  WHEN ((rt1.c1)&(rt1.c2)) THEN (((rt1.c0, '-3081836', vt0.c0))>=((rt1.c0, vt0.c0, 0.388644922109768))) WHEN CAST(0xfffffffff0556446 AS REAL) THEN ((vt0.c1)GLOB(rt1.c0)) WHEN ((rt1.c3)>=(rt1.c1)) THEN 0.38614659230532444 ELSE ((vt0.c1) ISNULL) END) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c1)))GLOB((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((rt1.c1)&(rt1.c2)) THEN (((rt1.c0, '-3081836', vt0.c0))>=((rt1.c0, vt0.c0, 0.388644922109768))) WHEN CAST(0Xfffffffff0556446 AS REAL) THEN ((vt0.c1)GLOB(rt1.c0)) WHEN ((rt1.c3)>=(rt1.c1)) THEN 0.38614659230532444 ELSE ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c1)))GLOB((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE NULL  WHEN ((rt1.c1)&(rt1.c2)) THEN (((rt1.c0, '-3081836', vt0.c0))>=((rt1.c0, vt0.c0, 0.388644922109768))) WHEN CAST(0xfffffffff0556446 AS REAL) THEN ((vt0.c1)GLOB(rt1.c0)) WHEN ((rt1.c3)>=(rt1.c1)) THEN 0.38614659230532444 ELSE ((vt0.c1) ISNULL) END) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c1)))GLOB((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE NULL  WHEN ((rt1.c1)&(rt1.c2)) THEN (((rt1.c0, '-3081836', vt0.c0))>=((rt1.c0, vt0.c0, 0.388644922109768))) WHEN CAST(0Xfffffffff0556446 AS REAL) THEN ((vt0.c1)GLOB(rt1.c0)) WHEN ((rt1.c3)>=(rt1.c1)) THEN 0.38614659230532444 ELSE ((vt0.c1) ISNULL) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c1)))GLOB((vt0.c0 IN ()))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (CASE NULL  WHEN ((rt1.c1)&(rt1.c2)) THEN (((rt1.c0, '-3081836', vt0.c0))>=((rt1.c0, vt0.c0, 0.388644922109768))) WHEN CAST(0xfffffffff0556446 AS REAL) THEN ((vt0.c1)GLOB(rt1.c0)) WHEN ((rt1.c3)>=(rt1.c1)) THEN 0.38614659230532444 ELSE ((vt0.c1) ISNULL) END) ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (rt1.c1)))GLOB((vt0.c0 IN ())));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((+ (rt1.c1)))OR((NOT (vt0.c1)))))AND(CHANGES())) WHERE ((((rt1.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) AND (((rt1.c3 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) AND (((rt1.c3 IN ()))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((+ (rt1.c1)))OR((NOT (vt0.c1)))))AND(CHANGES())));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((+ (rt1.c1)))OR((NOT (vt0.c1)))))AND(CHANGES())) WHERE ((((rt1.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) AND (((rt1.c3 IN ())))));
SELECT SUM(count) FROM (SELECT (((((rt1.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) AND (((rt1.c3 IN ()))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON (((((+ (rt1.c1)))OR((NOT (vt0.c1)))))AND(CHANGES())));
SELECT * FROM vt0 LEFT OUTER JOIN rt1 ON (((((+ (rt1.c1)))OR((NOT (vt0.c1)))))AND(CHANGES())) WHERE ((((rt1.c1)) BETWEEN ((((((vt0.c0)AND(vt0.c0)))AND(rt1.c2)))) AND (((rt1.c3 IN ())))));
SELECT * FROM vt0 WHERE ((((((vt0.c0, -2.56804993E8, vt0.c0, vt0.c0, '-254386718'))!=((vt0.c0, vt0.c1, vt0.c0, 0.13939985830075952, vt0.c0))))!=(((vt0.c0)!=(vt0.c0))))) ORDER BY CASE json_valid(vt0.c0)  WHEN vt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((x'', '?s', vt0.c0))) WHEN CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) ELSE ((vt0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, -2.56804993E8, vt0.c0, vt0.c0, '-254386718'))!=((vt0.c0, vt0.c1, vt0.c0, 0.13939985830075952, vt0.c0))))!=(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE json_valid(vt0.c0)  WHEN vt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((x'', '?s', vt0.c0))) WHEN CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) ELSE ((vt0.c0) ISNULL) END DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0, -2.56804993E8, vt0.c0, vt0.c0, '-254386718'))!=((vt0.c0, vt0.c1, vt0.c0, 0.13939985830075952, vt0.c0))))!=(((vt0.c0)!=(vt0.c0))))) ORDER BY CASE json_valid(vt0.c0)  WHEN vt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((x'', '?s', vt0.c0))) WHEN CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) ELSE ((vt0.c0) ISNULL) END DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0, -2.56804993E8, vt0.c0, vt0.c0, '-254386718'))!=((vt0.c0, vt0.c1, vt0.c0, 0.13939985830075952, vt0.c0))))!=(((vt0.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE json_valid(vt0.c0)  WHEN vt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((x'', '?s', vt0.c0))) WHEN CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) ELSE ((vt0.c0) ISNULL) END DESC);
SELECT * FROM vt0 WHERE ((((((vt0.c0, -2.56804993E8, vt0.c0, vt0.c0, '-254386718'))!=((vt0.c0, vt0.c1, vt0.c0, 0.13939985830075952, vt0.c0))))!=(((vt0.c0)!=(vt0.c0))))) ORDER BY CASE json_valid(vt0.c0)  WHEN vt0.c1 COLLATE BINARY THEN (vt0.c0 IN ()) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (x'')) THEN (((vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((x'', '?s', vt0.c0))) WHEN CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END THEN (vt0.c1 IN ()) ELSE ((vt0.c0) ISNULL) END DESC;
SELECT COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<>((CAST(vt0.c1 AS INTEGER))))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<>((CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<>((CAST(vt0.c1 AS INTEGER))))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((~ (vt0.c0))))<>((CAST(vt0.c1 AS INTEGER))))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT)  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((~ (vt0.c0))))<>((CAST(vt0.c1 AS INTEGER))))) ORDER BY CAST(((vt0.c0)<=(vt0.c0)) AS TEXT)  NULLS LAST;
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c1);
SELECT SUM(count) FROM (SELECT ((vt0.c1) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (vt0.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))) AND (rt1.c1))) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))>=((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))) AND (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))>=((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))) AND (rt1.c1))) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))>=((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ASC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c3)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))) AND (rt1.c1))) IS TRUE)  as count FROM rt1 ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))>=((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ASC);
SELECT ALL COUNT(*) FROM rt1 WHERE (((((((rt1.c3)OR(rt1.c1)))OR(rt1.c1))) NOT BETWEEN (((((rt1.c2)OR(rt1.c1)))OR(rt1.c0))) AND (rt1.c1))) ORDER BY (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))))>=((((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0))))) ASC;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELY((((rt1.c2, rt1.c1, rt1.c0))>=((vt0.c0, vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt1.c2, rt1.c1, rt1.c0))>=((vt0.c0, vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELY((((rt1.c2, rt1.c1, rt1.c0))>=((vt0.c0, vt0.c1, vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((LIKELY((((rt1.c2, rt1.c1, rt1.c0))>=((vt0.c0, vt0.c1, vt0.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (LIKELY((((rt1.c2, rt1.c1, rt1.c0))>=((vt0.c0, vt0.c1, vt0.c0)))));
SELECT * FROM vt0, rt1 WHERE (((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))AND(vt0.c0)))*(rt1.c0))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('I瓝'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))AND(vt0.c0)))*(rt1.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('I瓝')));
SELECT * FROM vt0, rt1 WHERE (((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))AND(vt0.c0)))*(rt1.c0))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('I瓝'));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))AND(vt0.c0)))*(rt1.c0))) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('I瓝')));
SELECT * FROM vt0, rt1 WHERE (((((((((((rt1.c2)AND(rt1.c0)))AND(rt1.c3)))AND(rt1.c2)))AND(vt0.c0)))*(rt1.c0))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c0 AS INTEGER)) AND ('I瓝'));
SELECT * FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c3);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (rt1.c3);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY (~ ((((rt1.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ ((((rt1.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c3))))) DESC);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY (~ ((((rt1.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c3))))) DESC;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1, vt0 ORDER BY (~ ((((rt1.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c3))))) DESC);
SELECT * FROM rt1, vt0 WHERE (rt1.c0) ORDER BY (~ ((((rt1.c0, vt0.c0, rt1.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, rt1.c1)) AND ((rt1.c0, rt1.c0, rt1.c3))))) DESC;
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))>((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY ((LENGTH('-443115406')) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))>((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LENGTH('-443115406')) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))>((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY ((LENGTH('-443115406')) NOT NULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))>((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((LENGTH('-443115406')) NOT NULL) DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE ((((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END))>((((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)))))) ORDER BY ((LENGTH('-443115406')) NOT NULL) DESC  NULLS FIRST;
SELECT * FROM rt1 WHERE ('9223372036854775807' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('9223372036854775807' COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('9223372036854775807' COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (('9223372036854775807' COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ('9223372036854775807' COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2))) ISNULL)) ORDER BY CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2))) ISNULL)) ORDER BY CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (rt1.c2))) ISNULL)) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((+ (rt1.c2))) ISNULL)) ORDER BY CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c1 END COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt0, rt1 WHERE ((- ((+ (rt1.c1))))) ORDER BY MAX(((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), CASE WHEN x'' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY MAX(((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), CASE WHEN x'' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((- ((+ (rt1.c1))))) ORDER BY MAX(((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), CASE WHEN x'' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((+ (rt1.c1))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY MAX(((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), CASE WHEN x'' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END)  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE ((- ((+ (rt1.c1))))) ORDER BY MAX(((((rt1.c1)OR(rt1.c0)))AND(rt1.c0)), CASE WHEN x'' THEN rt1.c2 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c3 ELSE vt0.c0 END)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT NULL), vt0.c0, (rt1.c0 IN ()))) AND (((rt1.c0 IN ()), (rt1.c2 IN (rt1.c0)), (NULL IN (rt1.c1, rt1.c1)))))) ORDER BY (CAST(4.30186593E8 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT NULL), vt0.c0, (rt1.c0 IN ()))) AND (((rt1.c0 IN ()), (rt1.c2 IN (rt1.c0)), (NULL IN (rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (CAST(4.30186593E8 AS BLOB) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT NULL), vt0.c0, (rt1.c0 IN ()))) AND (((rt1.c0 IN ()), (rt1.c2 IN (rt1.c0)), (NULL IN (rt1.c1, rt1.c1)))))) ORDER BY (CAST(4.30186593E8 AS BLOB) IN ()) ASC;
SELECT SUM(count) FROM (SELECT (((((rt1.c3, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT NULL), vt0.c0, (rt1.c0 IN ()))) AND (((rt1.c0 IN ()), (rt1.c2 IN (rt1.c0)), (NULL IN (rt1.c1, rt1.c1)))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (CAST(4.30186593E8 AS BLOB) IN ()) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE ((((rt1.c3, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT NULL), vt0.c0, (rt1.c0 IN ()))) AND (((rt1.c0 IN ()), (rt1.c2 IN (rt1.c0)), (NULL IN (rt1.c1, rt1.c1)))))) ORDER BY (CAST(4.30186593E8 AS BLOB) IN ()) ASC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE UPPER(DISTINCT rt1.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE UPPER(DISTINCT rt1.c1) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE UPPER(DISTINCT rt1.c1) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS TEXT)) IS TRUE)  as count FROM rt1, vt0 ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE UPPER(DISTINCT rt1.c1) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE (CAST(NULL AS TEXT)) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (vt0.c0 IN ()) ELSE UPPER(DISTINCT rt1.c1) END ASC  NULLS LAST;
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 ELSE -1007531029 END) BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)))) WHERE (NULL) ORDER BY ((((((rt1.c1)||(rt1.c0)))AND((~ (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt0.c1 END)) DESC, (NOT (TRIM(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 ELSE -1007531029 END) BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)))) ORDER BY ((((((rt1.c1)||(rt1.c0)))AND((~ (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt0.c1 END)) DESC, (NOT (TRIM(rt1.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 ELSE -1007531029 END) BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)))) WHERE (NULL) ORDER BY ((((((rt1.c1)||(rt1.c0)))AND((~ (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt0.c1 END)) DESC, (NOT (TRIM(rt1.c1)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((NULL) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 ELSE -1007531029 END) BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)))) ORDER BY ((((((rt1.c1)||(rt1.c0)))AND((~ (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt0.c1 END)) DESC, (NOT (TRIM(rt1.c1)))  NULLS LAST);
SELECT COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON ((CASE vt0.c0  WHEN NULL THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c1 THEN vt0.c0 ELSE -1007531029 END) BETWEEN (rt1.c3) AND (((rt1.c0) NOT BETWEEN (rt1.c3) AND (vt0.c0)))) WHERE (NULL) ORDER BY ((((((rt1.c1)||(rt1.c0)))AND((~ (rt1.c0)))))OR(CASE rt1.c1  WHEN rt1.c3 THEN vt0.c1 END)) DESC, (NOT (TRIM(rt1.c1)))  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS INTEGER));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(rt1.c1 AS TEXT) AS INTEGER)) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE (CAST(CAST(rt1.c1 AS TEXT) AS INTEGER));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC))>=(CAST(rt1.c1 AS INTEGER)))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1)|(vt0.c0))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS NUMERIC))>=(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1)|(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC))>=(CAST(rt1.c1 AS INTEGER)))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1)|(vt0.c0))) AND (((vt0.c0) IS TRUE)));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c2 AS NUMERIC))>=(CAST(rt1.c1 AS INTEGER)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1)|(vt0.c0))) AND (((vt0.c0) IS TRUE))));
SELECT ALL * FROM rt1, vt0 WHERE (((CAST(rt1.c2 AS NUMERIC))>=(CAST(rt1.c1 AS INTEGER)))) ORDER BY ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1)|(vt0.c0))) AND (((vt0.c0) IS TRUE)));
SELECT ALL * FROM rt1 WHERE (((rt1.c3)|(rt1.c3)) COLLATE RTRIM) ORDER BY (((rt1.c2)) NOT BETWEEN ((((((rt1.c0)AND('1450612015')))AND(rt1.c3)))) AND (((+ (rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)|(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) NOT BETWEEN ((((((rt1.c0)AND('1450612015')))AND(rt1.c3)))) AND (((+ (rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3)|(rt1.c3)) COLLATE RTRIM) ORDER BY (((rt1.c2)) NOT BETWEEN ((((((rt1.c0)AND('1450612015')))AND(rt1.c3)))) AND (((+ (rt1.c2))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((rt1.c3)|(rt1.c3)) COLLATE RTRIM) IS TRUE)  as count FROM rt1 ORDER BY (((rt1.c2)) NOT BETWEEN ((((((rt1.c0)AND('1450612015')))AND(rt1.c3)))) AND (((+ (rt1.c2))))) DESC  NULLS FIRST);
SELECT ALL * FROM rt1 WHERE (((rt1.c3)|(rt1.c3)) COLLATE RTRIM) ORDER BY (((rt1.c2)) NOT BETWEEN ((((((rt1.c0)AND('1450612015')))AND(rt1.c3)))) AND (((+ (rt1.c2))))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, rt1 WHERE ('1346946431') ORDER BY 'z\rwL	^(*' ASC;
SELECT SUM(count) FROM (SELECT (('1346946431') IS TRUE)  as count FROM vt0, rt1 ORDER BY 'z\rwL	^(*' ASC);
SELECT ALL * FROM vt0, rt1 WHERE ('1346946431') ORDER BY 'z\rwL	^(*' ASC;
SELECT SUM(count) FROM (SELECT (('1346946431') IS TRUE)  as count FROM vt0, rt1 ORDER BY 'z\rwL	^(*' ASC);
SELECT ALL * FROM vt0, rt1 WHERE ('1346946431') ORDER BY 'z\rwL	^(*' ASC;
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE)<(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE NOCASE)<(((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)))));
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE rt1.c0  WHEN '-1012339294' THEN rt1.c2 END)OR(x'')))OR(LOWER(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN '-1012339294' THEN rt1.c2 END)OR(x'')))OR(LOWER(rt1.c3)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE rt1.c0  WHEN '-1012339294' THEN rt1.c2 END)OR(x'')))OR(LOWER(rt1.c3))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE rt1.c0  WHEN '-1012339294' THEN rt1.c2 END)OR(x'')))OR(LOWER(rt1.c3)))) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((CASE rt1.c0  WHEN '-1012339294' THEN rt1.c2 END)OR(x'')))OR(LOWER(rt1.c3))));
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (vt0.c0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN rt1.c2 THEN ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN rt1.c2 THEN ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN rt1.c2 THEN ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END) IS TRUE)  as count FROM rt1, vt0);
SELECT COUNT(*) FROM rt1, vt0 WHERE (CASE WHEN rt1.c2 THEN ((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2)) END);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) NOTNULL))&(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL))&(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) NOTNULL))&(CAST(vt0.c1 AS BLOB))));
SELECT SUM(count) FROM (SELECT ((((((rt1.c2) NOTNULL))&(CAST(vt0.c1 AS BLOB)))) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (((((rt1.c2) NOTNULL))&(CAST(vt0.c1 AS BLOB))));
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE rt1.c3  WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)==(LOWER(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c3  WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)=(LOWER(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE rt1.c3  WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)==(LOWER(rt1.c1))));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c3  WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)=(LOWER(rt1.c1)))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (((CASE rt1.c3  WHEN NULL THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 ELSE vt0.c0 END)==(LOWER(rt1.c1))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END THEN (((rt1.c3))>=((vt0.c1))) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (-1555689393)) THEN ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)) WHEN CAST(rt1.c1 AS INTEGER) THEN CAST(rt1.c3 AS TEXT) ELSE ((rt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END THEN (((rt1.c3))>=((vt0.c1))) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (-1555689393)) THEN ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)) WHEN CAST(rt1.c1 AS INTEGER) THEN CAST(rt1.c3 AS TEXT) ELSE ((rt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END THEN (((rt1.c3))>=((vt0.c1))) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (-1555689393)) THEN ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)) WHEN CAST(rt1.c1 AS INTEGER) THEN CAST(rt1.c3 AS TEXT) ELSE ((rt1.c0) IS TRUE) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END THEN (((rt1.c3))>=((vt0.c1))) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (-1555689393)) THEN ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)) WHEN CAST(rt1.c1 AS INTEGER) THEN CAST(rt1.c3 AS TEXT) ELSE ((rt1.c0) IS TRUE) END) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN rt1.c1 END THEN (((rt1.c3))>=((vt0.c1))) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (-1555689393)) THEN ((((rt1.c2)OR(vt0.c0)))AND(rt1.c3)) WHEN CAST(rt1.c1 AS INTEGER) THEN CAST(rt1.c3 AS TEXT) ELSE ((rt1.c0) IS TRUE) END);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (vt0.c0);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-397754369'))))<=(((- (vt0.c1)))))) ORDER BY (((vt0.c1 IN ()))%(0.4953360863069034)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-397754369'))))<=(((- (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))%(0.4953360863069034)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-397754369'))))<=(((- (vt0.c1)))))) ORDER BY (((vt0.c1 IN ()))%(0.4953360863069034)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-397754369'))))<=(((- (vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c1 IN ()))%(0.4953360863069034)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0) NOT BETWEEN (vt0.c1) AND ('-397754369'))))<=(((- (vt0.c1)))))) ORDER BY (((vt0.c1 IN ()))%(0.4953360863069034)) ASC, CAST(vt0.c1 AS BLOB) COLLATE BINARY  NULLS LAST;
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c1))  WHEN '-2049749469' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c1))  WHEN '-2049749469' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c1))  WHEN '-2049749469' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (+ (vt0.c1))  WHEN '-2049749469' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CASE (+ (vt0.c1))  WHEN '-2049749469' THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c1 END);
SELECT COUNT(*) FROM rt1 WHERE (((((('985030505', rt1.c1, rt1.c2))>((NULL, 0xffffffffbdff1f0c, rt1.c2))))>(0.8398886018211928))) ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 END)*(COALESCE(DISTINCT rt1.c1, rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((('985030505', rt1.c1, rt1.c2))>((NULL, 0Xffffffffbdff1f0c, rt1.c2))))>(0.8398886018211928))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 END)*(COALESCE(DISTINCT rt1.c1, rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (((((('985030505', rt1.c1, rt1.c2))>((NULL, 0xffffffffbdff1f0c, rt1.c2))))>(0.8398886018211928))) ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 END)*(COALESCE(DISTINCT rt1.c1, rt1.c0)));
SELECT SUM(count) FROM (SELECT ((((((('985030505', rt1.c1, rt1.c2))>((NULL, 0Xffffffffbdff1f0c, rt1.c2))))>(0.8398886018211928))) IS TRUE)  as count FROM rt1 ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 END)*(COALESCE(DISTINCT rt1.c1, rt1.c0))));
SELECT COUNT(*) FROM rt1 WHERE (((((('985030505', rt1.c1, rt1.c2))>((NULL, 0xffffffffbdff1f0c, rt1.c2))))>(0.8398886018211928))) ORDER BY ((CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c3 END)*(COALESCE(DISTINCT rt1.c1, rt1.c0)));
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN NULL END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c2 THEN NULL END) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN NULL END) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((CASE rt1.c2  WHEN rt1.c2 THEN NULL END) NOT NULL)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((CASE rt1.c2  WHEN rt1.c2 THEN NULL END) NOT NULL));
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 WHERE (rt1.c0) ORDER BY CASE WHEN rt1.c3 COLLATE RTRIM THEN ((((rt1.c1)AND(vt0.c1)))OR(x'4d5e')) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((1.221591033E9))) THEN 0.5748103520803579 WHEN CAST(vt0.c1 AS INTEGER) THEN LIKELIHOOD(DISTINCT rt1.c0, 0.04431799699665029) WHEN 0.30283320172908335 THEN rt1.c1 COLLATE BINARY WHEN CASE rt1.c3  WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END THEN TRIM(rt1.c2) ELSE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((vt0.c1, vt0.c1, rt1.c3))) END, JULIANDAY((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))), rt1.c0 COLLATE RTRIM, (NOT (rt1.c1)), ((vt0.c0)*(rt1.c3)), (vt0.c1 IN (vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 ORDER BY CASE WHEN rt1.c3 COLLATE RTRIM THEN ((((rt1.c1)AND(vt0.c1)))OR(x'4d5e')) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((1.221591033E9))) THEN 0.5748103520803579 WHEN CAST(vt0.c1 AS INTEGER) THEN LIKELIHOOD(DISTINCT rt1.c0, 0.04431799699665029) WHEN 0.30283320172908335 THEN rt1.c1 COLLATE BINARY WHEN CASE rt1.c3  WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END THEN TRIM(rt1.c2) ELSE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((vt0.c1, vt0.c1, rt1.c3))) END, JULIANDAY((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))), rt1.c0 COLLATE RTRIM, (NOT (rt1.c1)), ((vt0.c0)*(rt1.c3)), (vt0.c1 IN (vt0.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 WHERE (rt1.c0) ORDER BY CASE WHEN rt1.c3 COLLATE RTRIM THEN ((((rt1.c1)AND(vt0.c1)))OR(x'4d5e')) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((1.221591033E9))) THEN 0.5748103520803579 WHEN CAST(vt0.c1 AS INTEGER) THEN LIKELIHOOD(DISTINCT rt1.c0, 0.04431799699665029) WHEN 0.30283320172908335 THEN rt1.c1 COLLATE BINARY WHEN CASE rt1.c3  WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END THEN TRIM(rt1.c2) ELSE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((vt0.c1, vt0.c1, rt1.c3))) END, JULIANDAY((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))), rt1.c0 COLLATE RTRIM, (NOT (rt1.c1)), ((vt0.c0)*(rt1.c3)), (vt0.c1 IN (vt0.c1))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((rt1.c0) IS TRUE)  as count FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 ORDER BY CASE WHEN rt1.c3 COLLATE RTRIM THEN ((((rt1.c1)AND(vt0.c1)))OR(x'4d5e')) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((1.221591033E9))) THEN 0.5748103520803579 WHEN CAST(vt0.c1 AS INTEGER) THEN LIKELIHOOD(DISTINCT rt1.c0, 0.04431799699665029) WHEN 0.30283320172908335 THEN rt1.c1 COLLATE BINARY WHEN CASE rt1.c3  WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END THEN TRIM(rt1.c2) ELSE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((vt0.c1, vt0.c1, rt1.c3))) END, JULIANDAY((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))), rt1.c0 COLLATE RTRIM, (NOT (rt1.c1)), ((vt0.c0)*(rt1.c3)), (vt0.c1 IN (vt0.c1))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 FULL OUTER JOIN vt0 ON rt1.c1 WHERE (rt1.c0) ORDER BY CASE WHEN rt1.c3 COLLATE RTRIM THEN ((((rt1.c1)AND(vt0.c1)))OR(x'4d5e')) WHEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((1.221591033E9))) THEN 0.5748103520803579 WHEN CAST(vt0.c1 AS INTEGER) THEN LIKELIHOOD(DISTINCT rt1.c0, 0.04431799699665029) WHEN 0.30283320172908335 THEN rt1.c1 COLLATE BINARY WHEN CASE rt1.c3  WHEN vt0.c1 THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c3 END THEN TRIM(rt1.c2) ELSE (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((vt0.c0, rt1.c2, rt1.c2)) AND ((vt0.c1, vt0.c1, rt1.c3))) END, JULIANDAY((((vt0.c0)) BETWEEN ((rt1.c0)) AND ((x''))), rt1.c0 COLLATE RTRIM, (NOT (rt1.c1)), ((vt0.c0)*(rt1.c3)), (vt0.c1 IN (vt0.c1))) ASC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE (((x'') NOTNULL) COLLATE BINARY) ORDER BY (((0X15c3db33, ((rt1.c1)GLOB(vt0.c1)), (rt1.c2 IN ())))=((rt1.c2 COLLATE RTRIM, (rt1.c3 IN ()), rt1.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((0x15c3db33, ((rt1.c1)GLOB(vt0.c1)), (rt1.c2 IN ())))==((rt1.c2 COLLATE RTRIM, (rt1.c3 IN ()), rt1.c1 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((x'') NOTNULL) COLLATE BINARY) ORDER BY (((0X15c3db33, ((rt1.c1)GLOB(vt0.c1)), (rt1.c2 IN ())))=((rt1.c2 COLLATE RTRIM, (rt1.c3 IN ()), rt1.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((x'') NOTNULL) COLLATE BINARY) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((0x15c3db33, ((rt1.c1)GLOB(vt0.c1)), (rt1.c2 IN ())))==((rt1.c2 COLLATE RTRIM, (rt1.c3 IN ()), rt1.c1 COLLATE NOCASE))) ASC  NULLS LAST);
SELECT ALL * FROM rt1, vt0 WHERE (((x'') NOTNULL) COLLATE BINARY) ORDER BY (((0X15c3db33, ((rt1.c1)GLOB(vt0.c1)), (rt1.c2 IN ())))=((rt1.c2 COLLATE RTRIM, (rt1.c3 IN ()), rt1.c1 COLLATE NOCASE))) ASC  NULLS LAST;
SELECT * FROM rt1, vt0 WHERE (LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.6933250041966567));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.6933250041966567)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.6933250041966567));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.6933250041966567)) IS TRUE)  as count FROM rt1, vt0);
SELECT * FROM rt1, vt0 WHERE (LIKELIHOOD(CAST(vt0.c1 AS REAL), 0.6933250041966567));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(((vt0.c0)=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY '1624459715'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS BLOB))AND(((vt0.c0)==(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '1624459715'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(((vt0.c0)=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY '1624459715'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c1 AS BLOB))AND(((vt0.c0)==(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) IS TRUE)  as count FROM vt0 ORDER BY '1624459715'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c1 AS BLOB))AND(((vt0.c0)=(vt0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))))) ORDER BY '1624459715'  NULLS FIRST;
SELECT * FROM vt0, rt1 WHERE (UPPER(((rt1.c2)<(0x36cd8462))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c2)<(0X36cd8462)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (UPPER(((rt1.c2)<(0x36cd8462))));
SELECT SUM(count) FROM (SELECT ((UPPER(((rt1.c2)<(0X36cd8462)))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE (UPPER(((rt1.c2)<(0x36cd8462))));
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN (((((vt0.c1))==((rt1.c0))), ((rt1.c2) NOT BETWEEN (' &mC') AND (vt0.c1)), CAST(vt0.c0 AS REAL))) AND (('', ((rt1.c0)<=(rt1.c0)), ((((vt0.c1)AND(vt0.c1)))OR(rt1.c2))))) WHERE (((((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(-2.56804993E8)))LIKE(CAST(rt1.c0 AS INTEGER)))) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (rt1.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(-2.56804993E8)))LIKE(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN (((((vt0.c1))==((rt1.c0))), ((rt1.c2) NOT BETWEEN (' &mC') AND (vt0.c1)), CAST(vt0.c0 AS REAL))) AND (('', ((rt1.c0)<=(rt1.c0)), ((((vt0.c1)AND(vt0.c1)))OR(rt1.c2))))) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (rt1.c2 IN ()) END DESC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN (((((vt0.c1))==((rt1.c0))), ((rt1.c2) NOT BETWEEN (' &mC') AND (vt0.c1)), CAST(vt0.c0 AS REAL))) AND (('', ((rt1.c0)<=(rt1.c0)), ((((vt0.c1)AND(vt0.c1)))OR(rt1.c2))))) WHERE (((((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(-2.56804993E8)))LIKE(CAST(rt1.c0 AS INTEGER)))) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (rt1.c2 IN ()) END DESC;
SELECT SUM(count) FROM (SELECT ((((((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(-2.56804993E8)))LIKE(CAST(rt1.c0 AS INTEGER)))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN (((((vt0.c1))==((rt1.c0))), ((rt1.c2) NOT BETWEEN (' &mC') AND (vt0.c1)), CAST(vt0.c0 AS REAL))) AND (('', ((rt1.c0)<=(rt1.c0)), ((((vt0.c1)AND(vt0.c1)))OR(rt1.c2))))) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (rt1.c2 IN ()) END DESC);
SELECT ALL COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON (((rt1.c2, rt1.c2, vt0.c0)) NOT BETWEEN (((((vt0.c1))==((rt1.c0))), ((rt1.c2) NOT BETWEEN (' &mC') AND (vt0.c1)), CAST(vt0.c0 AS REAL))) AND (('', ((rt1.c0)<=(rt1.c0)), ((((vt0.c1)AND(vt0.c1)))OR(rt1.c2))))) WHERE (((((((((((rt1.c1)AND(vt0.c0)))OR(rt1.c2)))AND(rt1.c0)))AND(-2.56804993E8)))LIKE(CAST(rt1.c0 AS INTEGER)))) ORDER BY CASE WHEN rt1.c1 COLLATE BINARY THEN (rt1.c2 IN ()) END DESC;
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((rt1.c3 COLLATE RTRIM) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE (rt1.c3 COLLATE RTRIM);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((~ (CAST(rt1.c2 AS NUMERIC)))) ORDER BY json(x'') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY json(x'') DESC  NULLS LAST);
SELECT COUNT(*) FROM rt1, vt0 WHERE ((~ (CAST(rt1.c2 AS NUMERIC)))) ORDER BY json(x'') DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((~ (CAST(rt1.c2 AS NUMERIC)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY json(x'') DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL COUNT(*) FROM rt1 WHERE ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) IN ()));
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)<>(rt1.c3)))AND((- (vt0.c1)))))OR(((vt0.c1)=(rt1.c2))))) ORDER BY (- (rt1.c1))  NULLS FIRST, (((vt0.c0)<>(vt0.c1)) IN ()) ASC, (- (rt1.c3 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)!=(rt1.c3)))AND((- (vt0.c1)))))OR(((vt0.c1)=(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (rt1.c1))  NULLS FIRST, (((vt0.c0)!=(vt0.c1)) IN ()) ASC, (- (rt1.c3 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)<>(rt1.c3)))AND((- (vt0.c1)))))OR(((vt0.c1)=(rt1.c2))))) ORDER BY (- (rt1.c1))  NULLS FIRST, (((vt0.c0)<>(vt0.c1)) IN ()) ASC, (- (rt1.c3 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ((((((((rt1.c2)!=(rt1.c3)))AND((- (vt0.c1)))))OR(((vt0.c1)=(rt1.c2))))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (- (rt1.c1))  NULLS FIRST, (((vt0.c0)!=(vt0.c1)) IN ()) ASC, (- (rt1.c3 COLLATE BINARY)) DESC);
SELECT ALL * FROM vt0, rt1 WHERE (((((((rt1.c2)<>(rt1.c3)))AND((- (vt0.c1)))))OR(((vt0.c1)=(rt1.c2))))) ORDER BY (- (rt1.c1))  NULLS FIRST, (((vt0.c0)<>(vt0.c1)) IN ()) ASC, (- (rt1.c3 COLLATE BINARY)) DESC;
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM);
SELECT ALL * FROM rt1 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c2 IN ()));
SELECT SUM(count) FROM (SELECT (((rt1.c2 IN ())) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((rt1.c2 IN ()));
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (((((rt1.c0)>=(rt1.c1)))IS NOT(((((vt0.c1)OR(rt1.c0)))AND(rt1.c0))))) ORDER BY ((CASE WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END)>=(CASE WHEN vt0.c1 THEN rt1.c0 END))  NULLS LAST, ((((((0Xffffffff98c5d35d)AND(vt0.c1)))OR(vt0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>=(rt1.c1)))IS NOT(((((vt0.c1)OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END)>=(CASE WHEN vt0.c1 THEN rt1.c0 END))  NULLS LAST, ((((((0Xffffffff98c5d35d)AND(vt0.c1)))OR(vt0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (((((rt1.c0)>=(rt1.c1)))IS NOT(((((vt0.c1)OR(rt1.c0)))AND(rt1.c0))))) ORDER BY ((CASE WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END)>=(CASE WHEN vt0.c1 THEN rt1.c0 END))  NULLS LAST, ((((((0Xffffffff98c5d35d)AND(vt0.c1)))OR(vt0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((rt1.c0)>=(rt1.c1)))IS NOT(((((vt0.c1)OR(rt1.c0)))AND(rt1.c0))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY ((CASE WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END)>=(CASE WHEN vt0.c1 THEN rt1.c0 END))  NULLS LAST, ((((((0Xffffffff98c5d35d)AND(vt0.c1)))OR(vt0.c1))) NOTNULL) DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM rt1, vt0 NOT INDEXED WHERE (((((rt1.c0)>=(rt1.c1)))IS NOT(((((vt0.c1)OR(rt1.c0)))AND(rt1.c0))))) ORDER BY ((CASE WHEN rt1.c3 THEN vt0.c0 ELSE rt1.c0 END)>=(CASE WHEN vt0.c1 THEN rt1.c0 END))  NULLS LAST, ((((((0Xffffffff98c5d35d)AND(vt0.c1)))OR(vt0.c1))) NOTNULL) DESC  NULLS LAST;
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c1))<=((rt1.c3))))<=(((vt0.c0) IS FALSE)))) ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))<=((rt1.c3))))<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c3)) AS REAL) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c1))<=((rt1.c3))))<=(((vt0.c0) IS FALSE)))) ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c3)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT (((((((rt1.c1))<=((rt1.c3))))<=(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c3)) AS REAL) ASC);
SELECT ALL * FROM rt1, vt0 WHERE ((((((rt1.c1))<=((rt1.c3))))<=(((vt0.c0) IS FALSE)))) ORDER BY CAST(rt1.c0 AS NUMERIC) COLLATE RTRIM  NULLS FIRST, CAST(((rt1.c0) BETWEEN (vt0.c0) AND (rt1.c3)) AS REAL) ASC;
SELECT * FROM rt1 NOT INDEXED WHERE ((((rt1.c0)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((LIKELY(rt1.c3))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))IS(ROUND(rt1.c3, rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((LIKELY(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))IS(ROUND(rt1.c3, rt1.c1)))  NULLS FIRST);
SELECT * FROM rt1 NOT INDEXED WHERE ((((rt1.c0)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((LIKELY(rt1.c3))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))IS(ROUND(rt1.c3, rt1.c1)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((rt1.c0)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((LIKELY(rt1.c3))))) IS TRUE)  as count FROM rt1 ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))IS(ROUND(rt1.c3, rt1.c1)))  NULLS FIRST);
SELECT * FROM rt1 NOT INDEXED WHERE ((((rt1.c0)) BETWEEN ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))) AND ((LIKELY(rt1.c3))))) ORDER BY ((((rt1.c2) BETWEEN (rt1.c1) AND (rt1.c0)))IS(ROUND(rt1.c3, rt1.c1)))  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE (x'') ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (x'') ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0, rt1 ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (x'') ORDER BY ((rt1.c1 COLLATE BINARY) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1)AND(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM WHERE (CASE (+ (vt0.c0))  WHEN 0.6607173649167077 THEN (+ (vt0.c1)) END) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN 0.6607173649167077 THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1)AND(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM ORDER BY rt1.c3);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1)AND(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM WHERE (CASE (+ (vt0.c0))  WHEN 0.6607173649167077 THEN (+ (vt0.c1)) END) ORDER BY rt1.c3;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt0.c0))  WHEN 0.6607173649167077 THEN (+ (vt0.c1)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1)AND(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM ORDER BY rt1.c3);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN rt1 ON ((((rt1.c1)AND(vt0.c1)))AND(rt1.c0)) COLLATE RTRIM WHERE (CASE (+ (vt0.c0))  WHEN 0.6607173649167077 THEN (+ (vt0.c1)) END) ORDER BY rt1.c3;
SELECT * FROM rt1 WHERE ((+ (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))));
SELECT SUM(count) FROM (SELECT (((+ (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2))))) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE ((+ (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))));
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (x'' COLLATE RTRIM IN ('0.7699460014153292')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (x'' COLLATE RTRIM IN ('0.7699460014153292')) DESC);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (x'' COLLATE RTRIM IN ('0.7699460014153292')) DESC;
SELECT SUM(count) FROM (SELECT ((CAST(vt0.c0 AS TEXT) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY (x'' COLLATE RTRIM IN ('0.7699460014153292')) DESC);
SELECT * FROM vt0 WHERE (CAST(vt0.c0 AS TEXT) COLLATE BINARY) ORDER BY (x'' COLLATE RTRIM IN ('0.7699460014153292')) DESC;
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CASE WHEN NULL THEN rt1.c3 END))==(((+ (rt1.c1)))))) ORDER BY (((~ (rt1.c1)))==(((vt0.c0)>=(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN NULL THEN rt1.c3 END))==(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((~ (rt1.c1)))=(((vt0.c0)>=(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CASE WHEN NULL THEN rt1.c3 END))==(((+ (rt1.c1)))))) ORDER BY (((~ (rt1.c1)))==(((vt0.c0)>=(rt1.c1))));
SELECT SUM(count) FROM (SELECT (((((CASE WHEN NULL THEN rt1.c3 END))==(((+ (rt1.c1)))))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((~ (rt1.c1)))=(((vt0.c0)>=(rt1.c1)))));
SELECT ALL COUNT(*) FROM rt1, vt0 WHERE ((((CASE WHEN NULL THEN rt1.c3 END))==(((+ (rt1.c1)))))) ORDER BY (((~ (rt1.c1)))==(((vt0.c0)>=(rt1.c1))));
SELECT * FROM vt0, rt1 WHERE ((+ (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))));
SELECT SUM(count) FROM (SELECT (((+ (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))))) IS TRUE)  as count FROM vt0, rt1);
SELECT * FROM vt0, rt1 WHERE ((+ (((((((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))OR(rt1.c2)))AND(rt1.c0)))));
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END THEN (+ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END THEN (+ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END THEN (+ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END THEN (+ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) IS TRUE)  as count FROM vt0, rt1 ORDER BY rt1.c1 ASC  NULLS FIRST);
SELECT ALL * FROM vt0, rt1 WHERE (CASE WHEN CASE rt1.c0  WHEN rt1.c0 THEN vt0.c0 END THEN (+ (rt1.c2)) ELSE ((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)) END) ORDER BY rt1.c1 ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (vt0.c1)))|(((((0.3173772602227434)OR(vt0.c0)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))|(((((0.3173772602227434)OR(vt0.c0)))OR(rt1.c3))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (vt0.c1)))|(((((0.3173772602227434)OR(vt0.c0)))OR(rt1.c3)))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c1)))|(((((0.3173772602227434)OR(vt0.c0)))OR(rt1.c3))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((- (vt0.c1)))|(((((0.3173772602227434)OR(vt0.c0)))OR(rt1.c3)))));
SELECT * FROM vt0 WHERE (CAST((0.4851353130856406 IN (vt0.c1, vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((0.4851353130856406 IN (vt0.c1, vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((0.4851353130856406 IN (vt0.c1, vt0.c1)) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST((0.4851353130856406 IN (vt0.c1, vt0.c1)) AS INTEGER)) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (CAST((0.4851353130856406 IN (vt0.c1, vt0.c1)) AS INTEGER));
SELECT * FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))  WHEN rt1.c3 THEN CAST(rt1.c1 AS TEXT) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END THEN CAST(rt1.c3 AS INTEGER) WHEN (((rt1.c2))==((rt1.c2))) THEN CASE WHEN rt1.c1 THEN rt1.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))  WHEN rt1.c3 THEN CAST(rt1.c1 AS TEXT) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END THEN CAST(rt1.c3 AS INTEGER) WHEN (((rt1.c2))==((rt1.c2))) THEN CASE WHEN rt1.c1 THEN rt1.c0 END END DESC);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))  WHEN rt1.c3 THEN CAST(rt1.c1 AS TEXT) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END THEN CAST(rt1.c3 AS INTEGER) WHEN (((rt1.c2))==((rt1.c2))) THEN CASE WHEN rt1.c1 THEN rt1.c0 END END DESC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) IS TRUE)  as count FROM rt1 ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))  WHEN rt1.c3 THEN CAST(rt1.c1 AS TEXT) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END THEN CAST(rt1.c3 AS INTEGER) WHEN (((rt1.c2))==((rt1.c2))) THEN CASE WHEN rt1.c1 THEN rt1.c0 END END DESC);
SELECT * FROM rt1 WHERE (CAST(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)) AS TEXT)) ORDER BY CASE (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))  WHEN rt1.c3 THEN CAST(rt1.c1 AS TEXT) WHEN CASE WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 END THEN CAST(rt1.c3 AS INTEGER) WHEN (((rt1.c2))==((rt1.c2))) THEN CASE WHEN rt1.c1 THEN rt1.c0 END END DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((vt0.c1 COLLATE BINARY) NOT NULL)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c1 COLLATE BINARY) NOT NULL));
SELECT * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c2 AS REAL)))) ORDER BY -2073781373 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY -2073781373 DESC);
SELECT * FROM rt1, vt0 WHERE ((NOT (CAST(rt1.c2 AS REAL)))) ORDER BY -2073781373 DESC;
SELECT SUM(count) FROM (SELECT (((NOT (CAST(rt1.c2 AS REAL)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY -2073781373 DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((((((rt1.c0)OR(rt1.c2)))AND(1.416826225E9)))OR(vt0.c0)))OR(rt1.c2)))AND((vt0.c0 IN (vt0.c0)))))AND(LOWER(DISTINCT rt1.c1)))) ORDER BY (((((NOT (rt1.c3)))AND(CASE WHEN 'D' THEN rt1.c2 WHEN rt1.c1 THEN 0.8272803774621984 WHEN rt1.c0 THEN x'' END)))AND(((vt0.c0)|(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c0)OR(rt1.c2)))AND(1.416826225E9)))OR(vt0.c0)))OR(rt1.c2)))AND((vt0.c0 IN (vt0.c0)))))AND(LOWER(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((NOT (rt1.c3)))AND(CASE WHEN 'D' THEN rt1.c2 WHEN rt1.c1 THEN 0.8272803774621984 WHEN rt1.c0 THEN x'' END)))AND(((vt0.c0)|(rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((((((rt1.c0)OR(rt1.c2)))AND(1.416826225E9)))OR(vt0.c0)))OR(rt1.c2)))AND((vt0.c0 IN (vt0.c0)))))AND(LOWER(DISTINCT rt1.c1)))) ORDER BY (((((NOT (rt1.c3)))AND(CASE WHEN 'D' THEN rt1.c2 WHEN rt1.c1 THEN 0.8272803774621984 WHEN rt1.c0 THEN x'' END)))AND(((vt0.c0)|(rt1.c3))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((rt1.c0)OR(rt1.c2)))AND(1.416826225E9)))OR(vt0.c0)))OR(rt1.c2)))AND((vt0.c0 IN (vt0.c0)))))AND(LOWER(DISTINCT rt1.c1)))) IS TRUE)  as count FROM rt1, vt0 ORDER BY (((((NOT (rt1.c3)))AND(CASE WHEN 'D' THEN rt1.c2 WHEN rt1.c1 THEN 0.8272803774621984 WHEN rt1.c0 THEN x'' END)))AND(((vt0.c0)|(rt1.c3))))  NULLS FIRST);
SELECT COUNT(*) FROM rt1, vt0 WHERE (((((((((((((rt1.c0)OR(rt1.c2)))AND(1.416826225E9)))OR(vt0.c0)))OR(rt1.c2)))AND((vt0.c0 IN (vt0.c0)))))AND(LOWER(DISTINCT rt1.c1)))) ORDER BY (((((NOT (rt1.c3)))AND(CASE WHEN 'D' THEN rt1.c2 WHEN rt1.c1 THEN 0.8272803774621984 WHEN rt1.c0 THEN x'' END)))AND(((vt0.c0)|(rt1.c3))))  NULLS FIRST;
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((+ (rt1.c2)) COLLATE BINARY) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE ((+ (rt1.c2)) COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(vt0.c1 AS REAL))&(vt0.c0 COLLATE NOCASE)) WHERE ('-645518263') ORDER BY ((((rt1.c1) IS TRUE))IS(rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-645518263') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(vt0.c1 AS REAL))&(vt0.c0 COLLATE NOCASE)) ORDER BY ((((rt1.c1) IS TRUE))IS(rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(vt0.c1 AS REAL))&(vt0.c0 COLLATE NOCASE)) WHERE ('-645518263') ORDER BY ((((rt1.c1) IS TRUE))IS(rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (('-645518263') IS TRUE)  as count FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(vt0.c1 AS REAL))&(vt0.c0 COLLATE NOCASE)) ORDER BY ((((rt1.c1) IS TRUE))IS(rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST);
SELECT * FROM vt0 FULL OUTER JOIN rt1 ON ((CAST(vt0.c1 AS REAL))&(vt0.c0 COLLATE NOCASE)) WHERE ('-645518263') ORDER BY ((((rt1.c1) IS TRUE))IS(rt1.c1 COLLATE RTRIM)) DESC  NULLS LAST;
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((GLOB(rt1.c2, rt1.c2))) AND ((((rt1.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((GLOB(rt1.c2, rt1.c2))) AND ((((rt1.c1) ISNULL))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((GLOB(rt1.c2, rt1.c2))) AND ((((rt1.c1) ISNULL)))));
SELECT SUM(count) FROM (SELECT ALL (((((rt1.c1)) BETWEEN ((GLOB(rt1.c2, rt1.c2))) AND ((((rt1.c1) ISNULL))))) IS TRUE)  as count FROM rt1);
SELECT COUNT(*) FROM rt1 WHERE ((((rt1.c1)) BETWEEN ((GLOB(rt1.c2, rt1.c2))) AND ((((rt1.c1) ISNULL)))));
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0)&(rt1.c2))) BETWEEN (NULLIF(rt1.c0, rt1.c0)) AND ((((vt0.c1, rt1.c3, rt1.c1))==((rt1.c1, rt1.c3, rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(rt1.c2))) BETWEEN (NULLIF(rt1.c0, rt1.c0)) AND ((((vt0.c1, rt1.c3, rt1.c1))==((rt1.c1, rt1.c3, rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0)&(rt1.c2))) BETWEEN (NULLIF(rt1.c0, rt1.c0)) AND ((((vt0.c1, rt1.c3, rt1.c1))==((rt1.c1, rt1.c3, rt1.c3))))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)&(rt1.c2))) BETWEEN (NULLIF(rt1.c0, rt1.c0)) AND ((((vt0.c1, rt1.c3, rt1.c1))==((rt1.c1, rt1.c3, rt1.c3)))))) IS TRUE)  as count FROM vt0, rt1);
SELECT ALL * FROM vt0, rt1 WHERE (((((vt0.c0)&(rt1.c2))) BETWEEN (NULLIF(rt1.c0, rt1.c0)) AND ((((vt0.c1, rt1.c3, rt1.c1))==((rt1.c1, rt1.c3, rt1.c3))))));
SELECT ALL * FROM vt0, rt1 WHERE ((((CASE rt1.c3  WHEN rt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END))<=((rt1.c2)))) ORDER BY (((COALESCE(DISTINCT rt1.c0, rt1.c3)))!=((json_array(vt0.c0, rt1.c2)))), rt1.c0  NULLS LAST, (~ ((vt0.c1 IN (vt0.c0)))), ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))IS((rt1.c1 IN (rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE rt1.c3  WHEN rt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END))<=((rt1.c2)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((COALESCE(DISTINCT rt1.c0, rt1.c3)))!=((json_array(vt0.c0, rt1.c2)))), rt1.c0  NULLS LAST, (~ ((vt0.c1 IN (vt0.c0)))), ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))IS((rt1.c1 IN (rt1.c2)))) DESC  NULLS LAST);
SELECT ALL * FROM vt0, rt1 WHERE ((((CASE rt1.c3  WHEN rt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END))<=((rt1.c2)))) ORDER BY (((COALESCE(DISTINCT rt1.c0, rt1.c3)))!=((json_array(vt0.c0, rt1.c2)))), rt1.c0  NULLS LAST, (~ ((vt0.c1 IN (vt0.c0)))), ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))IS((rt1.c1 IN (rt1.c2)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((CASE rt1.c3  WHEN rt1.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE rt1.c0 END))<=((rt1.c2)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY (((COALESCE(DISTINCT rt1.c0, rt1.c3)))!=((json_array(vt0.c0, rt1.c2)))), rt1.c0  NULLS LAST, (~ ((vt0.c1 IN (vt0.c0)))), ((((rt1.c0) NOT BETWEEN (x'') AND (rt1.c2)))IS((rt1.c1 IN (rt1.c2)))) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((x'057fc91b') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'057fc91b') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((x'057fc91b') IS FALSE) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((x'057fc91b') IS FALSE) COLLATE BINARY) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE (((x'057fc91b') IS FALSE) COLLATE BINARY);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.14467219571208956) ORDER BY CASE rt1.c1  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 END THEN rt1.c1 COLLATE RTRIM WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1)!=(rt1.c2)) WHEN '_V' THEN rt1.c3 COLLATE NOCASE ELSE (rt1.c1 IN ()) END DESC  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ((0.14467219571208956) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c1  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 END THEN rt1.c1 COLLATE RTRIM WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1)<>(rt1.c2)) WHEN '_V' THEN rt1.c3 COLLATE NOCASE ELSE (rt1.c1 IN ()) END DESC  NULLS LAST, rt1.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.14467219571208956) ORDER BY CASE rt1.c1  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 END THEN rt1.c1 COLLATE RTRIM WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1)!=(rt1.c2)) WHEN '_V' THEN rt1.c3 COLLATE NOCASE ELSE (rt1.c1 IN ()) END DESC  NULLS LAST, rt1.c1;
SELECT SUM(count) FROM (SELECT ((0.14467219571208956) IS TRUE)  as count FROM rt1 ORDER BY CASE rt1.c1  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 END THEN rt1.c1 COLLATE RTRIM WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1)<>(rt1.c2)) WHEN '_V' THEN rt1.c3 COLLATE NOCASE ELSE (rt1.c1 IN ()) END DESC  NULLS LAST, rt1.c1);
SELECT ALL COUNT(*) FROM rt1 WHERE (0.14467219571208956) ORDER BY CASE rt1.c1  WHEN CASE rt1.c0  WHEN rt1.c1 THEN rt1.c3 END THEN rt1.c1 COLLATE RTRIM WHEN ((rt1.c2) IS TRUE) THEN ((rt1.c1)!=(rt1.c2)) WHEN '_V' THEN rt1.c3 COLLATE NOCASE ELSE (rt1.c1 IN ()) END DESC  NULLS LAST, rt1.c1;
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((+ (vt0.c1)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((+ (vt0.c1)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT SUM(count) FROM (SELECT (((((+ (vt0.c1)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))))) IS TRUE)  as count FROM vt0, rt1);
SELECT COUNT(*) FROM vt0, rt1 WHERE ((((+ (vt0.c1)))>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)))));
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((NOT (rt1.c0))) AND (CAST(rt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((NOT (rt1.c0))) AND (CAST(rt1.c0 AS TEXT))) DESC);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((NOT (rt1.c0))) AND (CAST(rt1.c0 AS TEXT))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 NATURAL JOIN rt1 ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((NOT (rt1.c0))) AND (CAST(rt1.c0 AS TEXT))) DESC);
SELECT * FROM vt0 NATURAL JOIN rt1 WHERE (x'') ORDER BY (((vt0.c1 IN ())) NOT BETWEEN ((NOT (rt1.c0))) AND (CAST(rt1.c0 AS TEXT))) DESC;
SELECT * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<=(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c2))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((rt1.c0)<=(rt1.c2))) IS FALSE)) IS TRUE)  as count FROM rt1);
SELECT * FROM rt1 WHERE (((((rt1.c0)<=(rt1.c2))) IS FALSE));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ((((vt0.c0))<=((vt0.c1)))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ((((vt0.c0))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ((((vt0.c0))<=((vt0.c1)))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT (((CASE WHEN vt0.c1 THEN vt0.c1 END IN ((((vt0.c0))<=((vt0.c1)))))) IS TRUE)  as count FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt0 WHERE ((CASE WHEN vt0.c1 THEN vt0.c1 END IN ((((vt0.c0))<=((vt0.c1)))))) ORDER BY ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT NULL);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))OR(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))OR(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))OR(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT SUM(count) FROM (SELECT ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))OR(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END))) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (((((((rt1.c1)OR(rt1.c3)))AND(rt1.c3)))OR(CASE WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c1 END)));
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('\rmLaDN%'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('\rmLaDN%')))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('\rmLaDN%'))));
SELECT SUM(count) FROM (SELECT (((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('\rmLaDN%')))) IS TRUE)  as count FROM rt1 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT COUNT(*) FROM rt1 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE ((((rt1.c2)) NOT BETWEEN ((CAST(rt1.c1 AS BLOB))) AND (('\rmLaDN%'))));
SELECT ALL * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c1 AS REAL)))) ORDER BY CASE WHEN rt1.c1 THEN 0.6899615763983865 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c3 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c1 THEN 0.6899615763983865 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c3 END COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c1 AS REAL)))) ORDER BY CASE WHEN rt1.c1 THEN 0.6899615763983865 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c3 END COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((+ (CAST(rt1.c1 AS REAL)))) IS TRUE)  as count FROM vt0, rt1 ORDER BY CASE WHEN rt1.c1 THEN 0.6899615763983865 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c3 END COLLATE BINARY);
SELECT ALL * FROM vt0, rt1 WHERE ((+ (CAST(rt1.c1 AS REAL)))) ORDER BY CASE WHEN rt1.c1 THEN 0.6899615763983865 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN vt0.c1 ELSE rt1.c3 END COLLATE BINARY;
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN vt0.c1 END) AND ((((vt0.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c2)) AND ((rt1.c2, 552220623, rt1.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN vt0.c1 END) AND ((((vt0.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c2)) AND ((rt1.c2, 552220623, rt1.c3))))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN vt0.c1 END) AND ((((vt0.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c2)) AND ((rt1.c2, 552220623, rt1.c3))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c1) IS TRUE)  as count FROM vt0, rt1 ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN vt0.c1 END) AND ((((vt0.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c2)) AND ((rt1.c2, 552220623, rt1.c3))))) ASC);
SELECT ALL COUNT(*) FROM vt0, rt1 WHERE (vt0.c1) ORDER BY ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (CASE rt1.c2  WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN vt0.c0 THEN vt0.c1 END) AND ((((vt0.c0, rt1.c1, vt0.c1)) NOT BETWEEN ((rt1.c1, rt1.c3, rt1.c2)) AND ((rt1.c2, 552220623, rt1.c3))))) ASC;
SELECT ALL * FROM rt1, vt0 WHERE ((- ((~ ('+N~|sXh2T')))));
SELECT SUM(count) FROM (SELECT (((- ((~ ('+N~|sXh2T'))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((- ((~ ('+N~|sXh2T')))));
SELECT SUM(count) FROM (SELECT (((- ((~ ('+N~|sXh2T'))))) IS TRUE)  as count FROM rt1, vt0);
SELECT ALL * FROM rt1, vt0 WHERE ((- ((~ ('+N~|sXh2T')))));
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON NULL WHERE (((CAST(rt1.c3 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON NULL WHERE (((CAST(rt1.c3 AS BLOB)) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(rt1.c3 AS BLOB)) NOT NULL)) IS TRUE)  as count FROM rt1 CROSS JOIN vt0 ON NULL);
SELECT ALL COUNT(*) FROM rt1 CROSS JOIN vt0 ON NULL WHERE (((CAST(rt1.c3 AS BLOB)) NOT NULL));
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD((+ ('1889703480')), 0.3519418635682018));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((+ ('1889703480')), 0.3519418635682018)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD((+ ('1889703480')), 0.3519418635682018));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD((+ ('1889703480')), 0.3519418635682018)) IS TRUE)  as count FROM rt1);
SELECT ALL * FROM rt1 WHERE (LIKELIHOOD((+ ('1889703480')), 0.3519418635682018));
