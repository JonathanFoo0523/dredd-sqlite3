-- Time: 2024/06/08 22:48:16
-- Database: database50
-- Database version: 3.40.0
-- seed value: 4116990650
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED, prefix=281, tokenize=unicode61); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA cache_size; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('now'); -- 0ms;
UPDATE vt0 SET (c0)=(NULL) WHERE CASE WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) END; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.07464652947384942, c0=0.5419674087946056 WHERE (((((vt0.c0)%(vt0.c0)), ((vt0.c0)+(vt0.c0)), vt0.c0 COLLATE NOCASE))<=((CAST(vt0.c0 AS BLOB), ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), (vt0.c0 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-738641481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-738641481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=425598819 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=388724849 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '425598819'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-1425588876')))IS(0.5419674087946056 COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=892952129'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((~ (0.06160729758775263)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('') NOT BETWEEN (x'') AND (NULL)) IN ((- (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1130564922 -328416300 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1736928191 sz=-686883473 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'0a75' THEN '-686883473' ELSE x'' END) BETWEEN ('-Infinity' COLLATE BINARY) AND ((~ (0.8528556242514744)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1425588876 0 sz=-1130564922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-610515867'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.22504571493840664)>=(NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-610515867 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')IS NOT(-682846744)) COLLATE NOCASE; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 1046060669 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-686883473 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-714166339 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1521642745 sz=892952129 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1062292246 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '425598819 sz=-115714293 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=290086038 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=197688083'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1109942937 sz=-13517792 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT (NOT ('')), (('{Y')*(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2108101035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x''  WHEN 0xffffffffeefc62a3 THEN 2.90086038E8 ELSE NULL END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1593415456 -738641481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-147849408 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<=((-1449620361)))) NOT BETWEEN (CASE ''  WHEN x'' THEN '1158167905' END) AND ((((x'', 0xffffffff86b83bfa, NULL))==(('Î¹e', 0x2b9e57fe, 0.048321453242990975))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-285449565 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'55a5') NOT BETWEEN (x'8338') AND (-411638920)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('-9223372036854775808') IS FALSE))AND(CAST(-547679859 AS INTEGER))))OR((((0xffffffffd484d334)) BETWEEN ((x'baa6')) AND ((x'47f1'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1062292246 -227224706 sz=-2087900082'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1797270672 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(NULL AS BLOB) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((- (NULL)))AND('-2050206098')))AND(json_type(x'90e1'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2063577363 sz=1227092382 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('85675255') IS TRUE) IN (LENGTH(0.8439511202380987))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=733185438 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x35ecaf46; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LOWER('Df'))OR(((NULL)-(0xffffffffd034b933)))))AND(NULL COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE x''  WHEN -527819257 THEN NULL END  WHEN ((x'')=('-738641481')) THEN CAST(0.21881659408798992 AS BLOB) WHEN 0.5983967008919416 COLLATE RTRIM THEN ((x'')-(0.877759940937543)) WHEN ((0.31303840128796356)GLOB('')) THEN ((-836802078)<<(0.9554857033047655)) WHEN CAST(x'75c4' AS REAL) THEN CASE '/'  WHEN x'e7ed' THEN 0xffffffff86b83bfa ELSE '733185438' END WHEN (NULL IN ()) THEN ((NULL) NOTNULL) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-147849408'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 731797502 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1109942937')LIKE(x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1456308631 sz=-1456308631'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1833642978'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1229666999 -1644654984 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1010897269 1803811202 sz=-1527998562'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ('}wo_m'))) BETWEEN (((NULL) NOT BETWEEN (NULL) AND (NULL))) AND (0.5894896910330493 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=142948612 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHAR(NULL, '-413266550' COLLATE RTRIM, LIKELIHOOD(x'', 0.8619526426455943)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7098817827507448)IS('|pWé¼eH9ãµ´{')))<('&578' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((NULL) IS FALSE)  WHEN CAST(0.7669837272063377 AS BLOB) THEN (('!?')>>(x'')) ELSE x'' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5775714868790103))<((0.9073077209147277)))) NOT BETWEEN (((NULL)%(NULL))) AND (json_remove(0xffffffffce1f69e2, '5%H<'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=522160467 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0X4ec461e0; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1227092382 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1474415626 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1340121690 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(x'' AS NUMERIC) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '733185438 sz=907228224 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0Xffffffff98789441; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1749331657 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '953172962 -1643457764 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=65949835'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'd16e' IN ()))<>(NULL COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE WHEN NULL THEN 0Xffffffffcd753a47 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1340121690 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1229666999'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1003270208'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN TYPEOF('1321492960') THEN CAST(x'36ea' AS INTEGER) WHEN ((((((((0x195e1f63)OR(-3.284163E8)))AND(NULL)))AND(NULL)))AND('0.9554857033047655')) THEN '-1721169550' COLLATE NOCASE WHEN (x'' IN ()) THEN (((((((('q?')OR(NULL)))AND(NULL)))AND(0.9392307714473448)))AND('0.9392307714473448')) ELSE ((NULL)>=(x'e7e0')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1754002806 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND (0.69602061330254)))%(((0.9581890604950214)>('1')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1358612274 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)IS NOT(NULL))) BETWEEN (x'') AND ((('?')=(0X515f3688)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'') NOT BETWEEN (NULL) AND (x'')))<((('')==(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-13517792' COLLATE RTRIM) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-560576285'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1486399733'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1062292246' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-101466286 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 -147849408 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1109942937 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS NUMERIC))<(CASE -1e500  WHEN NULL THEN 'qç¡±l' WHEN 1196056655 THEN 0xffffffff92b4d41e WHEN 'DO' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 59ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1210037607 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL) BETWEEN (0.4202625262601265) AND (NULL)), ('-560576285' IN (NULL)), (NULL IN ())))<>((CASE WHEN '-2087900082' THEN x'f55b' ELSE 0.4551780955726118 END, CAST(NULL AS INTEGER), ((NULL) ISNULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (1.474415626E9 IN (NULL))  WHEN (x'' IN ()) THEN CASE WHEN NULL THEN NULL END WHEN CASE NULL  WHEN NULL THEN x'1dff' ELSE x'84c3' END THEN 'èª±N_*Y' COLLATE NOCASE WHEN (((x'1f0d'))>((0.7669837272063377))) THEN (((((((((((('')OR(NULL)))AND(0.012331773994530115)))OR(NULL)))AND(NULL)))OR(-1376467828)))AND(NULL)) ELSE x'' COLLATE BINARY END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=953172962'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1358612274 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '900931496 sz=-546214060 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-546214060'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=597954584 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((~ ('NJ')))OR(x'' COLLATE NOCASE)))AND(((NULL)<('X1ds')))))AND((-1.527998562E9 IN ()))))AND(((NULL) BETWEEN (0.10139362871919888) AND (134914465)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1966524534 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((NULL)AND(CAST('D!z' AS REAL))))OR(NULL)))AND(((0.4551780955726118)==(NULL)))))AND(json('0.048321453242990975'))))OR(json_patch(0.14904469918667496, '-200002105'))))AND(json_remove(0.012331773994530115, '733185438'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 -1012847348 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2028685947 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1294864097 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=980660356 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-320112848 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE x''  WHEN 0.877759940937543 THEN 'c	4' ELSE '[]' END IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=768381945'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-561228197 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=713782843 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 57136816 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-738641481 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('QAB&~gU')OR(-1797270672)))OR(0xffffffffb6ce7932))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=-1262057403 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1591431912 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2004272209 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X515f3688)>(0.8845988166808285)))IS((x'' IN ('-1984217976')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1133599808 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1062292246 -200002105 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1625221999'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL COLLATE NOCASE)IS((- (0.9208012278481527)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('528093815')AND('R\rbu\rè°]')))AND(0.030034179088631263)) IN ((((NULL)) NOT BETWEEN (('')) AND ((0.6613643437277893))), '(y' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (-1.833642978E9)))<=(((0.06160729758775263)+(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1227982542')OR('0.9073077209147277')))+(((x'ebb3c576')>(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(UPPER(DISTINCT x'3a44')); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.9392307714473448 IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=57136816 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '388724849 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1591431912 sz=-738641481 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1144614614 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((x'' IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((0.27153912472379504) NOT BETWEEN (x'') AND ('5b9')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1208116929 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (NULL)))AND(((0X3c411175)=('')))))OR((~ (0xfffffffff6ee5f40)))); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-801851085'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'3b39')<=(NULL))) BETWEEN (CAST('' AS TEXT)) AND ((((x''))!=(('731797502'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (0.5625219208957664)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-2087900082 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=733185438 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST(0.21881659408798992 AS INTEGER)))<=(((-4.1163892E8 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)AND(NULL)))OR(NULL)))<>((((-1736928191)) NOT BETWEEN ((NULL)) AND ((0.8528556242514744))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-210231749 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1227982542 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('Df')IS(x'')) AS BLOB); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 34ms;
DELETE FROM sqlite_stat1 WHERE ((('D4xN(ç¤²f' IN ())) BETWEEN ('-714166339') AND ((0.5983967008919416 IN (0.3945381786092683)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((''))<((x'6bd1c089'))) THEN (0.03404622785688505 IN ()) WHEN '' COLLATE NOCASE THEN ((NULL)==('-1644654984')) WHEN CASE 0.4551780955726118  WHEN 'të¤4LQ' THEN x'' WHEN '-1966524534' THEN 0.18878864118347816 WHEN 'Hâ¿8' THEN 'FqJZ>u' ELSE '0.06160729758775263' END THEN (0.3424125598947457 IN ()) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-320112848 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '731797502 -355248740 sz=258521917 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'ddf7cf05') NOT NULL)) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-758655860')) NOT BETWEEN (((('-2050206098') IS TRUE))) AND (((((0.31520100759825087, 0.8680849236332225, -6.86883473E8)) NOT BETWEEN ((0.1783866769248812, NULL, 'g8OZS0')) AND (('-285449565', '542739724', '1022845073')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1281954142 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1163329672'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CAST(0.8525585009192127 AS INTEGER)  WHEN (0.45490541267202855 IN ()) THEN '' END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.014551784437074944) IS FALSE) IN (CASE WHEN x'' THEN 0.13773438307889063 END, CASE 0.37889685415309693  WHEN NULL THEN NULL ELSE x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '85675255 sz=-288879154'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -361082551 sz=-1643512462'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.19962209876897163) NOT BETWEEN (0X172b7871) AND (NULL)) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1046060669 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((((((('-1587499624')OR('-466727034')))AND(x'e3a8')))AND('0[')))OR('qç¡±l')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('-653979678')) BETWEEN ((0.5548793814312164)) AND ((''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', x'fd65')) NOT BETWEEN ((STRFTIME(0.5550320615084127, 1.294864097E9, 0.8525585009192127), TYPEOF(0.626269623769413), CAST(0.31520100759825087 AS REAL))) AND ((CAST(NULL AS INTEGER), LOWER('-1721169550'), ((((((((-1848003315)AND(NULL)))AND(0.6613643437277893)))AND('487481838')))AND('1708770584'))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-200432581'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 -1749331657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('')AND(0.8680849236332225)))OR('-268913050'))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-572894357 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'966cc5f6' IN ()))IS(CASE WHEN -6.82846744E8 THEN 0.4551780955726118 ELSE 0.9208012278481527 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX('|pWé¼eH9ãµ´{')) NOT BETWEEN (LIKE(NULL, x'79e6')) AND (((x'') NOT BETWEEN (NULL) AND ('>_55')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '768381945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') IS FALSE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'b1c2')) BETWEEN ((NULL)) AND ((x''))))>((0.05608227443546865 IN (0.014551784437074944)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1886257412 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(NULL AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1803811202'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'')GLOB(x'')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '89038605 597954584 sz=1399988358 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=2004146894 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-328416300 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'' COLLATE RTRIM)IS(0X10ad228b COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1593415456 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_type('0.22504571493840664') COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-544431287 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL)GLOB('')))OR(0.4913058834838897)))AND(((NULL) BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.341476818499055)GLOB('TU')))>>(x'2c66d863' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'10b8'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=534919490 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 489616740 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-450113682 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1439636546 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 sz=-227224706 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '334374776 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2062230851 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-598992014 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 sz=-988926437 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2034746374 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -1657687627 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOT NULL)) NOT BETWEEN (CASE 0X738ba18f  WHEN 'U)ZSRy' THEN x'f4ee' END) AND (CASE WHEN NULL THEN x'' ELSE x'' END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN x'9fac' THEN 779508811 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1330645055 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('FqJZ>u')) NOT BETWEEN ((0X4ec461e0)) AND ((1539525171)))  WHEN ((((NULL)OR(NULL)))OR(0X7a90c2ab)) THEN x'' COLLATE RTRIM WHEN CAST('X1d\' AS NUMERIC) THEN '(E&~' WHEN ((0xffffffffb79034a8) NOT BETWEEN (0.21238394824248152) AND ('0.877759940937543')) THEN ((((((((NULL)OR(0.7950434911062776)))OR(x'')))OR('2022834422')))AND(0.31520100759825087)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (510928964) AND (')HQ')))+(NULLIF(0.5254577762400938, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT NULL, 0.5775714868790103) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-118214066 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1680083326 -173168909'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN NULL THEN NULL WHEN NULL THEN '980660356' WHEN '1365194376' THEN '' ELSE x'' END COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -610515867 sz=848963315 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(0.6572827313537221, '-1644654984')) BETWEEN (((((0.8685178101320539)AND(x'89a3')))OR('-2128077329'))) AND (x'9535' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=615402077 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '1238995071 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((-1.109942937E9) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS(CAST(0Xffffffffeceb7730 AS BLOB)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2034746374 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-13517792 sz=498942590 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 1862646767 sz=321287423'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2057219377'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT NULL))>((- (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(((346951231) NOT NULL), ((((((((0.3964971627637196)AND(x'')))AND('H''')))AND(0.37010605897783755)))OR('0.5550320615084127'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1925459468 sz=1321492960 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST('-546214060' AS INTEGER) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((- (-1.449620361E9)))) AND ((ABS(0.6921272089741877)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.159729151707527 IN ()))%((- ('1p')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 3ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1909690383 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-949192269 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-468322631'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT (x'')))OR(((NULL) ISNULL))))AND(NULL)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 4ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(NULL) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=((('988527614')IS(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=103612751'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=222189666'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '131893405 sz=-147849408 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 277369558 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '657043608 sz=867303763 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 904703814 sz=-460268766 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0Xffffffffa65d709d)<=(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-936689049 sz=1028483651 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1365194376 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-715488257 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-200002105 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('900931496' AS TEXT)) BETWEEN ((((((((('-438924379')AND(1.803811202E9)))AND('2028275738')))AND(NULL)))AND(0.14904469918667496))) AND (((('-101466286', 0.8395668977745798, '-278344084'))>((86604396, NULL, x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.43272056693310834)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)*(x'e161')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-19439285 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1457450930 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'', '-1966524534', 'U<L(ugc)', '', ''))==(('', 0Xffffffffffffffff, '', NULL, '-729492684')))) NOT NULL); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=461759714 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1663145790') NOT BETWEEN (x'') AND (-2087900082)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=542514491 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1974953610 6 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-212154202'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-836802078', 0.5268722088179494, NULL)) NOT BETWEEN ((('' IN ()), (NOT (0xffffffffc3341f4d)), '-1229666999' COLLATE RTRIM)) AND (((- ('-1229666999')), ((0.5168588610631287) ISNULL), CAST(0.7950434911062776 AS REAL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN -1858192940 THEN NULL END) BETWEEN (((NULL)GLOB(NULL))) AND (LOWER('MZ'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=68692562'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-610515867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '260105059 sz=-1177251934 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1007858316 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE NOCASE  WHEN ((-1.109942937E9) NOTNULL) THEN CASE WHEN x'' THEN NULL ELSE '1924430659' END WHEN ((((0.23771104658236353)OR(0.6058033615725222)))AND(NULL)) THEN ((('-560576285')) NOT BETWEEN ((x'')) AND (('1332475146'))) WHEN ((0.6921272089741877) BETWEEN (NULL) AND (NULL)) THEN (~ (x'')) WHEN CASE WHEN 0.6172801272306369 THEN NULL END THEN ((('-671588942'))>=((x''))) WHEN (('-1257499905')<=(x'')) THEN CASE WHEN x'' THEN 0.7721386359855128 WHEN x'1763' THEN 0.5548793814312164 WHEN x'' THEN '-1003270208' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('241623995' IN ()))|(((1521642745) NOT BETWEEN (x'') AND ('-1425588876')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL COLLATE NOCASE COLLATE RTRIM COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (('1613031849') NOT BETWEEN (NULL) AND (NULL)) THEN CAST('' AS REAL) WHEN '-757684163' THEN ('e!]eV1' IN ()) WHEN CAST('lL)Z|9' AS NUMERIC) THEN ((0Xffffffffdfe84b5b)-(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1227092382' COLLATE BINARY)OR(((0.6172801272306369) NOT BETWEEN ('-1425588876') AND (x'b675')))))AND(TRIM(DISTINCT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('ïX') NOT BETWEEN (x'') AND (x'4f90')))%(((((((((NULL)OR(NULL)))AND(NULL)))OR(0.6892457914589301)))AND(NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL)<>('-101466286')) THEN x'' COLLATE BINARY WHEN ((('817850232'))<=((x''))) THEN ((((((((-1527998562)AND(0Xfac28f9)))AND('!}')))AND(0.02496306456552333)))OR(0x197aef04)) WHEN ((NULL) NOT NULL) THEN ((((0.28758702391353697)AND(NULL)))OR(-2.00002105E8)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2035334850 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1896228045 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-155457820 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((0.05534951018924128)>=(-1.797270672E9)))AND(((0.43869710400831263) BETWEEN ('â«Vdfi[') AND (NULL)))))AND(QUOTE(-1.833642978E9))))AND('-1385157160')))OR(((('0.37889685415309693'))>=((NULL))))))AND(((0.6798478805729753)>(x'')))))OR((- ('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL) NOT BETWEEN ('-1939841049') AND (1634613150)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CAST(x'' AS BLOB) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'47cc') NOT BETWEEN (0.15242580468540112) AND ('-729492684')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=623532706 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(0.5775714868790103 AS INTEGER)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (NOT (0.16348338739045276))  WHEN GLOB(NULL, '2028685947') THEN ((0.8039759697190114)-(NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1833642978 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-1853595649') ISNULL) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.45490541267202855 COLLATE NOCASE  WHEN (((0.21395652470635373))>=((x''))) THEN ABS(DISTINCT '') ELSE (NULL IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ROUND(((((NULL)AND('0.43869710400831263')))AND('')), CASE WHEN '0.014551784437074944' THEN x'2222' ELSE x'' END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0.6377290587843147, x'6fc0', x''))>=((0Xffffffff9e257dd2, x'844a', '0.012331773994530115'))) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=802138851'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-166959899 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1833642978'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1229666999'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-888202336 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-350735765 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((NULL)AND('1p')))OR('1750750038')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.21395652470635373 IN ())) NOT BETWEEN (CAST('	aC0|1' AS BLOB)) AND (('Rxdêº·æ¼»N_' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '538914397 sz=295886723 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((UPPER(DISTINCT 0.1896216988533388))>=(((0xffffffff8ac9378a) NOT BETWEEN ('1537612825') AND (x'ff89')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.5041650429148368)) NOT BETWEEN ((((x'') NOT BETWEEN ('-1130564922') AND (6.5949835E7)))) AND ((x'' COLLATE NOCASE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=831278543 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))=('1474415626' COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1644654984 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((+ (0.457249449313216)) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.10537204129879207 THEN x'' WHEN NULL THEN '12015930' WHEN '2019432363' THEN '' END) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1324708309 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 4'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove(NULL COLLATE NOCASE, 911059873); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('953172962' IN ())) BETWEEN (x'' COLLATE RTRIM) AND ((((1.046060669E9, x'61f7', '425598819'))=((0.20050490847564717, '', 3.88724849E8))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1810446940 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-222769587 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (json_insert(0.23771104658236353, -1635607310, 'A', NULL, '-1007880432') IN (((0.5746370934368993) NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-323178737 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '904703814'  WHEN x'4c010dbb' THEN '' ELSE '1358612274' END) BETWEEN ((('1321492960') IS FALSE)) AND ((('713782843') NOTNULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1591431912 sz=-1984217976 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'') NOT BETWEEN (0.824604077692952) AND ('')) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1180899352 -1737931180 sz=197688083 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.9423031541869205 IN ()))>>(((('oYå£X%E')) NOT BETWEEN (('0.6058033615725222')) AND ((0.4253901291111096))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-2050206098 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((x'')) BETWEEN ((x'a2e6')) AND ((x''))))AND(((0.4890882723882133)LIKE(x'')))))OR(((((x'')AND(0X78eb4a7b)))OR(x'af34')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.8656720185073834))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (NULL)) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-818164646'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=893217793'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-1.527998562E9) ISNULL)) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.08796956570376924; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1412433327 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-262248108 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.8418070298261758) NOT BETWEEN (x'dd3c') AND ('')) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1159008055'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((('') NOT BETWEEN (NULL) AND (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1602806564 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1062292246')) NOT BETWEEN (('-1456308631')) AND ((x'e51e')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=240624371 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN CASE WHEN -1.644654984E9 THEN x'6c5b' END THEN ('1358612274' IN (x'')) ELSE ((x'c9a9')<<(x'')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length((('142948612') NOT BETWEEN (NULL) AND (0.32212692963221545)), CAST(NULL AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1043391497 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-227224706 noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1592227649 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-1262057403'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'')OR('0.43272056693310834')))AND(NULL)))<=((NOT ('-547679859')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1893603591 sz=-781523751'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1003270208 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=980264172'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ('-527819257')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1870338518 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') BETWEEN ('1010897269') AND (x'eece')))-(highlight(NULL, 0.06020639928135174, NULL, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-738641481 0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1120139052; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN ((0.8091725348042862 COLLATE RTRIM)) AND ((((((((((x'')OR(2033551193)))OR('-2062230851')))OR(0.22193400445349876)))OR(0.981748508501207))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=412255572'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-405607121'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('\4c}'))>=(('154250665'))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CASE NULL  WHEN 1803811202 THEN '-1839464271' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE RTRIM(((-1.833642978E9) NOT BETWEEN (NULL) AND ('-1833642978'))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2034746374 sz=1277252066 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1578652889 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1428009355 sz=-560576285 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(0X3c411175 COLLATE RTRIM AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2006157400 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1046845873 0 sz=-411638920 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.17315169179486434) BETWEEN (x'e186') AND ('-460862795')))GLOB((('1803811202')<=(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1449620361 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-147849408 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0.4296508103085064))<=((NULL)))))<=((((NULL) NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=907228224 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 sz=1558154958'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=892952129 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1521642745 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-416594162 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(DISTINCT ((0.6109943547980751)<('')), NULLIF(x'd722', x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'', x'a196', x'73e2')) NOT BETWEEN ((0.8197393213663873, x'f2df101b', 0.839188899006142)) AND ((x'', x'd354', ',9C2,')))  WHEN CASE '0.23771104658236353'  WHEN 0.35021827040015185 THEN 0.6739100134176447 ELSE x'' END THEN ('' IN ()) WHEN CAST('205761228' AS INTEGER) THEN CASE 0.20658779812053651  WHEN 0.0016744792952331222 THEN 'aå¹#g' END WHEN (~ ('JGs''Abw5')) THEN LIKELY(0Xbc87b13) END; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (- (((((NULL)AND(x'96c9')))OR('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=64572917 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('1356320617') IS FALSE) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-100856685 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((x'')<>(NULL)) AS NUMERIC); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1240001535'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((((NOT ('[]')))AND((-1821804900 IN ()))))OR(('-147849408' IN ()))))AND((('197688083') NOT BETWEEN (x'30e9') AND (NULL)))))AND((- (x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0X78eb4a7b) IS TRUE) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-1333667841 -1885074112 sz=927345867 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 1221285689 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 sz=768381945 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.34677808159623413)LIKE(-1.736928191E9)))AND(LTRIM(x'ded4', 'Lï³·DD_Efk['))))OR(((((0x481fb567)AND(0.2350116016515411)))OR(x'3766')))))OR(((((NULL)AND(NULL)))AND(x'')))))AND('0.3964971627637196' COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-651544609 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-760023450 sz=-594930738 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1152452391 1948958964'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((('-921489156') BETWEEN (x'') AND (NULL)))) AND (((((x''))==((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-630509058 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CAST(0x449e41eb AS NUMERIC) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'52b5' AS BLOB); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1391596876 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-909820414'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-35298506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-738641481 sz=-579339167 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=341533522 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'74c8')>=(x'')))||(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '801021683 0 sz=-639796797 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=938505281'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-1062292246 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (- (x''))  WHEN ((0.7862388658645074) NOT BETWEEN (0.43869710400831263) AND ('953172962')) THEN CAST('-1338419710' AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-2115813298 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_remove((x'' IN ()), ((1706672649)OR(0X79c23a0))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (0.824604077692952 COLLATE NOCASE)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.9505442299690839)) BETWEEN (('-1595439796')) AND (('2028685947')))) BETWEEN (((0.8418070298261758) BETWEEN (0.46266715648026124) AND (x''))) AND ('0.05608227443546865' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0.14161750174827836 THEN 0X474a604f END)||(CAST(x'7398' AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-315581028 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'a921'))>=(('+-	JL'))) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1862978843 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1229666999'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1821881346 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1754002806'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1595057065 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1106415609 1210037607 sz=-1'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1426563172 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (x'4974')))AND((((NULL))<((NULL))))))AND(((((((((x'')OR('n{}G')))OR(x'9307')))OR('1279597638')))AND(0.7511071874901523)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-328416300 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -332943022 1624994117 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-1580298607 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ ('-738641481')))AND(('-1881937759' IN ()))))AND((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1293543610 sz=-1593415456'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=421014132 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1020342686 sz=-546214060 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.09436241335934958)*(x'')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE NULL  WHEN -8623435 THEN 't' END  WHEN (NULL IN ('')) THEN ((((x'fc58')AND('')))AND(0.649161331426458)) WHEN NULLIF(x'', x'') THEN ((((x'')AND(1867838246)))OR(-2017759931)) WHEN (~ (x'')) THEN '953172962' WHEN NULLIF(716317392, x'') THEN LIKELY(NULL) WHEN (('') NOT BETWEEN (']k') AND (x'')) THEN (((x'', -4973062, 0xffffffffe563749f))!=((0.6454883239702331, NULL, 'g*'))) WHEN 0.9554857033047655 COLLATE RTRIM THEN (((0.6133616698436485, '0', NULL))<((0.44791945055223836, '*3M*C', 0xfffffffffc0d5ab0))) WHEN CAST(-2131994876 AS TEXT) THEN 0.9697709712329882 ELSE (0.3515526169055879 IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('2113779343'))<=((((NULL) NOT NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-659277617 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1571610790 sz=-546214060 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1084569997 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 1803811202'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE NULL  WHEN NULL COLLATE NOCASE THEN (NULL IN (x'', '_-Bæ¦z\r-\ná')) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (']!&lpv' COLLATE BINARY IN ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE LOWER(((NULL)>('448953549'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (0.5746370934368993))) BETWEEN (((0.9374972064326186)AND(0X7a3af1f5))) AND ((('H''')GLOB(0.05274564337139187)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 1247497897 sz=-1254280467 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((NULL IN ('1604304704', x'')))) AND (((((x''))>=((x'')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1109942937 sz=215418022 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1559277900 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0x74cf6959 COLLATE BINARY)IS(CASE WHEN 0.7910331730241223 THEN '' WHEN NULL THEN x'387f' WHEN NULL THEN NULL ELSE '1754002806' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=892952129 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('0.27153912472379504' IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 1918016289 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1957405644 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1521642745'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'' COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (359761013 COLLATE NOCASE IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-147849408 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1425588876 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.5737580362486007)) NOT BETWEEN ((0.1896216988533388)) AND (('&578')))) NOT BETWEEN (('~q1' IN ())) AND (CAST(NULL AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('134914465') NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=1918463998 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -654912192 sz=388724849 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.5168588610631287)||(NULL))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) ISNULL))GLOB(0xffffffffa80248f5 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-29952195 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0X2001c3fe)GLOB(0.5499040839860618))) BETWEEN ((('2061934400')+('-1833082909'))) AND (71102084)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2064689215 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'')GLOB('')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1606294909 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 2 sz=-1471429148 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1864563478 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=410362250 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('290086038') NOT BETWEEN (1470001129) AND (0.3424125598947457)))AND('é¤ªæ°5')))OR((('')=(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '443859728 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((7.31797502E8) IS FALSE))AND(CAST(']k' AS INTEGER))))AND(((0.24234774478718557)>>(1.42948612E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=290086038 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.26000704425523957; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (0.24001942335569715))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((IFNULL(DISTINCT NULL, NULL))AND((('T!') BETWEEN (x'') AND (x'')))))OR(((0.28758702391353697)>>(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1921614048 sz=-334345665'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '899097611 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2093584395 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)>=(1747345979)))AND(NULL)))AND(DATETIME(0.8525585009192127, 0.24868109900366153, NULL))))OR(DATE(NULL, NULL, x''))))OR(((NULL)<<(x'')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-316395694 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-551930397 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=134914465 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1012847348 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((x'')||(1007949714)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1593415456'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 131953316 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=806835054 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1762506824 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1877200081 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 2 sz=1992000092 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((')â2æ')<(0.4938251555864317)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((('t]p~*', 1114691799, x'', '1380669623', '')) BETWEEN ((0.7150696809641618, '-738641481', '-74007433', 0xffffffffefb9e970, '-1133599808')) AND ((0.16348338739045276, x'', '~K', NULL, 'yQma<Q'))))AND((x'' IN (x'599f')))))AND((NULL IN ()))))AND((+ (0.7826895504293374)))))OR((((('1287923554')AND(x'')))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=188269558 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN -525022072 THEN 0x3661aca4 WHEN NULL THEN NULL WHEN 0.04398817265944133 THEN NULL END)OR((((x''))<=((x'3969'))))))OR(UPPER(DISTINCT x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-2102820100 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '46898164 sz=-1684763851'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=2108101035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-201644845 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=522160467 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-135304918'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1363315366'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)=(x'')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-377198662 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE ''  WHEN '-1012847348' THEN 0.9584214696767489 ELSE x'4755' END)AND(NULL COLLATE RTRIM)))AND(((0Xffffffffdcf68b57)OR(0Xffffffffc4334fc0)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-413266550 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1807413680 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1749108123 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((LIKELY(DISTINCT NULL))OR((((0.8971401156720664, -296963070, -1456308631))<((NULL, '	aC0|1', 1210037607))))))OR(((('', 'Md', '-924260510'))=((NULL, 0.1963758701466065, 0.35338852794512043))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL)) NOT BETWEEN ((0.06378476418901546)) AND (('yq'))))-(((0.8826811164770162)OR(0.704406820043666)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1227982542 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-231288560')-(x''))))=((((0x5d6bb8c7)-('W9hT._1'''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ABS((('1158167905') NOTNULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 sz=-2004272209 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('U	' IN ()))AND(CASE '2131947756'  WHEN NULL THEN '-1126054694' WHEN '' THEN 'mz' WHEN 'sU~lJ}a' THEN 0.5268722088179494 ELSE '!Q>S' END)))AND((((('65949835')AND('1223160345')))OR('0.7950434911062776')))))AND(((NULL) BETWEEN ('425598819') AND (x'')))))AND(CASE WHEN 0.22816420742228172 THEN NULL WHEN NULL THEN '-1392397977' WHEN NULL THEN NULL WHEN x'' THEN 0.5994470545561028 WHEN '-1461361249' THEN -1007950381 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 0.5548793814312164  WHEN 0.9554857033047655 THEN (('')IS('-2122792661')) ELSE (+ (NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_insert(('-1449620361' IN ()), UNLIKELY(DISTINCT '-9223372036854775808'), (((x'24bc')) BETWEEN ((NULL)) AND ((NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1626174026'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1185587664 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1425588876 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY(DISTINCT NULLIF(0.9591066905886769, x'')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'b0ba', NULL))<=((x'836a', '1007671072', x''))) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.6968092170233421 COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (- (0.27153912472379504)) THEN UNLIKELY(DISTINCT '-919947467') ELSE ('' IN ()) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('-2066545735')||(((((0.7369373868631413)OR(0.24304188598979393)))AND('421893669')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE DATE((((0.22504571493840664)) BETWEEN (('t]p~*')) AND ((NULL))), ((NULL) IS FALSE), (('-140224328')|(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2060255028 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1644654984 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=222351440 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1320612938'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)AND(x'a1a9')))OR(0xff22e09)))AND('-1736928191')))AND(NULL)))<=(CAST(0.6128962088766478 AS NUMERIC))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1552373061 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((NULL) NOT NULL))AND(((-1.376467828E9)AND(-8.47955385E8)))))AND(CASE 0.9922517470052608  WHEN NULL THEN 1.486399733E9 ELSE '-1687239621' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1016308574 210219795 sz=-1643457764 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'2df3'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-201991151 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.985676248246971)OR(CASE WHEN 0X34cf2fc5 THEN 0x38d043e2 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-320112848 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (json_insert(NULL, x'', 'OR&>X', '-1625221999', '713782843'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '419878725'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1456308631 -1797270672'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-686883473 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-977768388'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)!=((~ ('\V')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((NULL IN ()), (('zpìW')GLOB(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1227092382 sz=2001341244 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE(DISTINCT CAST('GCé²7V ê¸u' AS REAL), ((-1096692258)>>(NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1748364621 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CAST('1754062003' AS INTEGER))AND(0Xffffffffc9666840 COLLATE NOCASE)))AND(((((NULL)AND(0Xffffffffd034b933)))OR(0.8296819131592079)))))OR(CASE 0.38932142630731426  WHEN 'PkTj|jã©/' THEN NULL END)))AND(CAST(x'4c2a' AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1993719060 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 0 0 sz=-477959017'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE WHEN '' THEN '' WHEN NULL THEN x'' WHEN NULL THEN '.ê»¥l-L''3' ELSE '-' END)AND('0.159729151707527' COLLATE RTRIM)))AND(0.37387000004009363 COLLATE RTRIM)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=142948612'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((0.6523104628979559 COLLATE RTRIM)OR(CASE WHEN '142758633' THEN '? %U' WHEN '1' THEN '522160467' WHEN 0.9015147028065201 THEN '-1643457764' ELSE 0.6539099901106018 END)))OR((134914465 IN (0x4d2e0ee1)))))AND((('') BETWEEN (NULL) AND ('1433832984')))))AND(-1.749331657E9 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-998379867'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'd8bd')GLOB('ì¨­G'))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((x'988c')>=('907228224')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY(DISTINCT ''))||(x'b42b' COLLATE RTRIM)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((1.358612274E9 IN ()) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('' IN ())) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=1605468273 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE rtreenode('^\r', x'') COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((0.4890882723882133) BETWEEN (x'') AND (0X20b923f4))  WHEN CAST(0.981748508501207 AS NUMERIC) THEN ((0.5438648196435961)/(x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1054524030'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=242031163 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-274308483 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN x'31902def' COLLATE BINARY THEN CASE 0.8400272384806015  WHEN NULL THEN 'Km' ELSE '1486399733' END WHEN CAST(x'88ff' AS REAL) THEN LIKELY(DISTINCT x'') WHEN ((x'') BETWEEN (0.3792763407220703) AND ('-489221438')) THEN ((x'')==(0.4198601467958065)) ELSE (((1.365194376E9)) BETWEEN ((0.6613643437277893)) AND ((x'45d1'))) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((x'')))) NOTNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1625221999 sz=-1625221999 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_VERSION(); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST('900931496' AS INTEGER) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, '1331533623', 0.6208623936350748)) NOT BETWEEN (((('-578376486') NOT BETWEEN ('') AND (-1.227982542E9)), (~ (NULL)), ((0.410286516877449)OR('')))) AND ((x'' COLLATE NOCASE, CAST('é¤ªæ°5' AS NUMERIC), UPPER(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1593415456'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)>(x'')) IN (0.9373121583068749, ((((x'')AND(0.03362848620761516)))OR('-686883473')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((x'9311')%('+C')), ((x'')>(''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=598730704 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=581435749 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'556a' AS INTEGER))!=(UNLIKELY('5bz'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((1.365194376E9 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('1474415626') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '-1547514727 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1955560706'  WHEN 0.6639897994892245 THEN NULL WHEN '0.341476818499055' THEN 0.9627602095759926 WHEN ',m./e''U0' THEN 0.0987661925918113 END COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1510789116'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-746323989 -101466286 0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-227224706 noskipscan'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '1331928761 9223372036854775807 sz=1046060669 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (0.2388854553454186)) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '6 2 sz=-758711619 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE CAST(1.32149296E9 AS NUMERIC) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -1311105709 sz=905076729 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -1093657852 sz=-227224706'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array_length(NULL, NULLIF(DISTINCT x'933c', x'af60')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN 0Xffffffffb6ce7932 THEN '' WHEN 0.8290112444772056 THEN x'' WHEN -589481280 THEN NULL ELSE '-2004272209' END  WHEN (((x'206e')) BETWEEN (('+.D vJ)*')) AND ((NULL))) THEN CAST(0.6725601763468697 AS INTEGER) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=505427169 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1536608914'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE UNLIKELY((('-936790663')<('-1229666999'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1923135830 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-610515867 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 -1718102811 sz=1171697582 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)*(0Xffffffffa0b8f23b)))/(((NULL) IS FALSE))); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1098679869'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')<(x'd074'))) BETWEEN ((((x''))>((0.7253583399988368)))) AND ((((NULL))<>((0.12263840794131453))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((UNLIKELY('375574713'))OR(CAST('-458136451' AS BLOB))))AND(LIKELY(x''))); -- 4ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-200002105 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((+ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME((+ (x'bd13')), ((NULL) NOTNULL), (('á¯6*Ri[wq(')&(0.07464652947384942))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-183924910 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1873256201 0 sz=-1591431912 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((('')OR(0.4732978578856667)))AND('0.6798478805729753'))  WHEN (('^\r')|(NULL)) THEN ((x'')%('-1425588876')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (ROUND(0.9415412940133768, x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-817720987'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1631209812'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (NULL) AND ('éµ§9'))) NOT BETWEEN (((x'')<(NULL))) AND (0.2048620550885495 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' COLLATE RTRIM, ((3.88724849E8) NOT BETWEEN ('-2062782445') AND (x'')), (('*')|(x''))))==(('0.6798478805729753' COLLATE BINARY, LOWER('7*'), MAX(0.13773438307889063, '', 0.21218323596258182, 0Xfffffffffdce3c0a)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=-1887123336 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)AND(NULL)))AND(0.5202968027385434)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(CAST(NULL AS REAL), '-1915530644' COLLATE NOCASE); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CAST('å¸ à¶ê´a#' AS REAL)))>=((((NULL) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1593415456 0 sz=1345107203 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=346124566 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) BETWEEN (((- (1315064357)))) AND ((((x'')IS NOT(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-547679859 0 sz=-1091877627 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1010897269 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('-427623153' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=892952129'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE WHEN '-1109942937' THEN '-1885464673' END AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((1839358112 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-651243864'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1625879557'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=0 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-296248881'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-115714293 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.1803897754067777 THEN NULL WHEN '' THEN x'' WHEN '157648116' THEN NULL ELSE 0x4422bf9b END COLLATE BINARY COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((('168447390') BETWEEN ('^6|\>>ZN') AND (0.6900806026253152)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((x'f93d')OR('-2050206098')))OR(0.5041650429148368))) BETWEEN (NULL) AND (LIKELY(x'2c43'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN ((((((((((NULL)AND(0.8378332423537074)))OR(0x15315142)))AND(0.47703474702573667)))OR(0Xffffffffa9988c77)))) AND ((RTRIM('à¡/à»¡-puL')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9223372036854775808 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 sz=-13517792'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('') NOTNULL))<(CAST(143690874 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-186313250'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ('0.1783866769248812' IN ()) THEN ((NULL)<(x'')) ELSE (- (x'c75323de')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) NOT BETWEEN ((('-285449565') BETWEEN (x'785f') AND ('-1591431912'))) AND ((~ ('-1984217976')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('') IS TRUE) AS NUMERIC); -- 0ms;
DELETE FROM sqlite_stat1 WHERE MAX((((0X7c2e59af)) NOT BETWEEN ((x'')) AND ((0.8103993470694412))), ((0.3043466724929883) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN 0xfffffffff4acf2a6 THEN NULL WHEN NULL THEN x'a70a' WHEN x'' THEN '1667040223' ELSE x'' END)/(0.8788112096152724 COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)!=('-714166339')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=201309656 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '853768243 sz=-686883473'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-911300874 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1229666999'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE SQLITE_COMPILEOPTION_USED(''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1233671118 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=248293635 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((TRIM('-1557595587')) NOT BETWEEN (((0.35507425896829503)*(0.08310886617432178))) AND ((x'' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1823358712'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF((('-1130564922')*(x''))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-212476707 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE ''  WHEN 0.37445504511180283 THEN x'49c4' END) BETWEEN ((('5GcJ0') BETWEEN (x'') AND ('{*3x'))) AND (((NULL) BETWEEN ('4/fjè¼') AND (892952129)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-546214060 sz=-1625221999 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1527998562'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ ((- (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-419316635'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES() COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -1721169550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE COALESCE((('1349101350') BETWEEN ('') AND (0.02917107297131727)), ((NULL) IS TRUE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT (('EdI3')*(x'103b')), (~ (',m./e''U0'))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 0 sz=980660356 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1616948451 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 -1966524534 sz=401737991 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))))OR(0Xffffffffa1056013 COLLATE NOCASE)))OR(HEX(x''))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN '(v rGy' COLLATE RTRIM THEN ((NULL)<(0.0023973507120464976)) WHEN ((-1504170215) IS FALSE) THEN ((((((((((((-1644654984)OR('')))AND(-1.794798927E9)))OR(x'')))AND(0.7535040866565451)))OR(x'')))AND(NULL)) WHEN LIKELIHOOD(DISTINCT x'', 0.15446841634351305) THEN ((x'9d090190') NOT NULL) END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.133599808E9, 0Xfffffffff91a570b, '')) BETWEEN (('', '\%.*t(C!t', x'7662')) AND (('', NULL, 0.42351393345225385))) COLLATE RTRIM; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-895388442 sz=1953356450'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((('máª´9^Wá¸	')) BETWEEN ((1068335481)) AND ((x'c9f3')))  WHEN ((x'0caaef98') NOT BETWEEN (1167535775) AND (NULL)) THEN x'' COLLATE RTRIM END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1229666999 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-454857738'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 -780358295 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')AND('d8')))OR(x'f4c23209')))OR(((0.7340979876374237) IS TRUE))))AND((NULL IN ('1210037607')))))OR((NULL IN ()))))OR(((0.0988268517569526)GLOB('')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2104323769'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.22097813907781483; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=938028669 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1460712735 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2004272209 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')LIKE('0.5254577762400938')))||(LOWER(0.6426425560748207))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)||(0.7295727995444036))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-308530052'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0x664ff631 COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=606912712'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-1611282598 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=2135142620'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2063577363 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1447752772 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1654373505 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '362220978 -503653127 2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'75ff' COLLATE BINARY) BETWEEN (((x'') NOT NULL)) AND ((('')%(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((NULL) IS FALSE), ((NULL) IS FALSE)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(('290086038' IN ()) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2035090318'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2108101035 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '1173567026 0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-812556002')IS NOT(0.9576656739398034)), ((0.6158994872101144)%(x'')), TRIM(0.7829871943565475)))!=((x'' COLLATE NOCASE, ((NULL)>>(NULL)), ((((0.29528210994564996)OR(NULL)))OR(x'077a'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) IS FALSE) THEN 0.760298696236811 END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE '1978271729'  WHEN CASE ''  WHEN '' THEN x'' WHEN '<Eã5ã²®	' THEN x'' WHEN 0x25a2201e THEN x'bec0' WHEN NULL THEN '' WHEN x'' THEN 0.9195980004153856 END THEN '1240394815' END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((x'ff56')) BETWEEN (('ä^')) AND (('1046060669'))) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-413266550 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-580056542 0 sz=768381945 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2062230851 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '860371500 sz=297356083 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (CASE WHEN NULL THEN x'' END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1659554582'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CHAR(x'9a06') AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 0 sz=-1797270672 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((HEX(DISTINCT 733185438))%(((x'523a')|('-1548416266')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=600272225 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 0 sz=908138235 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=736591818 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')IS('-1425588876')))<((('1491340578') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1425588876 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-617841888'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-285449565 2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6125781074676108)/('904703814')) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1059006285'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2053779536 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((803744886)*(((((((((x'')AND(x'79b6')))OR(0xffffffffcdfe5321)))OR(NULL)))OR(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2108101035'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('k*	.XQB') BETWEEN (x'') AND (x'')))LIKE((- (0.08425377777115672)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST('' AS INTEGER))AND((+ (x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-836802078'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-336901450 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-350731643'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=772094393'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS BLOB))<<('0.5419674087946056')); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'', '0.8680849236332225', '')) NOT BETWEEN (((0.06703522049891664 IN ()), (('<Aãµ´(6O\nT)')|(x'')), (NOT ('741956477')))) AND (('', CAST(x'' AS NUMERIC), (('2005906032') BETWEEN ('à¶,4') AND (x'4d7f4c8a'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.12972208594277002)>('1010897269')) IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))>=((x'b8bd'))))||(CAST('-686883473' AS BLOB))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1669143726 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'8bc2') BETWEEN (CAST(0.61116485956571 AS NUMERIC)) AND ((((NULL)) NOT BETWEEN ((1560396051)) AND (('0.4913058834838897'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-320112848 2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1200281606'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ('-1243602915' IN ())  WHEN x'' COLLATE RTRIM THEN ((((x'')OR(NULL)))OR('290086038')) ELSE COALESCE(0.014551784437074944, '616483792') END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-886711046')) NOT BETWEEN (((((NULL))==((NULL))))) AND ((TRIM(DISTINCT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-423832950 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.1968393632493085)<=(x'')) IN ((NULL IN (121373463)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('f>') NOT BETWEEN (NULL) AND (NULL))) BETWEEN ((- (NULL))) AND (0.7649702896727314)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1404893734 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) NOT BETWEEN (0xffffffffe2a71832) AND (0Xffffffff92b4d41e)))&(((0.11550559641061009)IS NOT(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1966524534 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE -1.527998562E9; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL)OR(0Xffffffffe7ff6448)))AND('-646185652')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1191474008 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 -527819257 unordered'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=733185438 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '388724849 -1994127706 sz=127023043'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((0.37010605897783755 IN ()) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-2145288226 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN 0xffffffffe58ab59a THEN 1632945452 END, CAST(0xfffffffff2054408 AS TEXT), (NOT (NULL))))>=((load_extension(0X22f4c6e7), INSTR(x'c1e6', '-738641481'), (0.3852576182190868 IN ())))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (0.9423031541869205 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=713782843 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')>=(0.820222192026648)) IN (('-561228197' IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1806284251 313511745 2 sz=-1246848883 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((HEX(x'7a8b'), (((NULL))>=((1.754002806E9))), (0.3068799692665427 IN ())))==(('980430401' COLLATE RTRIM, ((NULL)%(x'')), (x'0403' IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((((0x114a5c96)) BETWEEN (('cX')) AND ((x'28de'))) AS BLOB); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-672741110 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE CASE WHEN '-1591431912' THEN 'Ycs''o5' WHEN '-1112602759' THEN -1.130564922E9 WHEN 0.16802199349414682 THEN x'' END  WHEN (((0.2541472240918129, x'992e7242', 0.15242580468540112)) NOT BETWEEN ((-1.591431912E9, x'7740', x'be40')) AND ((0Xffffffff94dfd370, 154262336, NULL))) THEN (((x'')) NOT BETWEEN (('-2050206098')) AND ((0.7514520480130444))) ELSE ((NULL)&('')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.24034250562228276)OR(-617767512)))OR(0.02200697831689702)) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=519080946 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('') BETWEEN (x'') AND ('-1003270208')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '522160467'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'')OR(NULL)))OR('')) IN ('' COLLATE RTRIM, (+ ('DW2C')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1386312343 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1478190033 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1249260217 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-560576285'))<(('0P8P')))) NOT BETWEEN (((NULL) NOT NULL)) AND (CASE WHEN NULL THEN 0.5561191022274098 WHEN NULL THEN 'Jn_L' WHEN '-1229666999' THEN NULL END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0xffffffff887822c4) NOT BETWEEN (0.01544512066612136) AND (NULL)) COLLATE RTRIM; -- 1ms;
DELETE FROM sqlite_stat1 WHERE (((0.3945381786092683)) BETWEEN (((NULL IN ()))) AND ((0.21284949456769175 COLLATE RTRIM))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) NOT BETWEEN (((+ ('')))) AND ((TRIM('1196056655', -1.833642978E9)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-2079821624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-686883473 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=1294864097 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1146986138 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((('892952129') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (IFNULL(DISTINCT NULL, 0.21271330699198232))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-729492684 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1109942937'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'6ba8'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((('1210037607', NULL, NULL)) NOT BETWEEN ((0.5562840937042013, '5%H<', '')) AND ((NULL, 0.8480402795909401, 0.3208868915218489))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=85675255 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.15242580468540112)) NOT BETWEEN ((((((0.32867399886771853)AND(x'410c')))AND(x'')))) AND ((((-1.736928191E9) IS TRUE)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((0x4ea62eaa) NOT NULL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1499249346 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-714166339 sz=-1530146624 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1800935328 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE 1.754002806E9  WHEN 0.09629183790095608 THEN x'' ELSE 0.38920687566833856 END COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1593415456'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-411638920 COLLATE BINARY)AND(IFNULL('-1531750132', ''))))AND((('0.030034179088631263') BETWEEN (x'') AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-157966653 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1082032254 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 0.6798478805729753; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('{rcé¬Y9R' IN ())) NOT BETWEEN (NULL COLLATE RTRIM) AND ((((x''))>=((x'647c866b'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=155186449 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.109942937E9)) NOT BETWEEN (((((0x5b548595)) BETWEEN ((0.4584507103654417)) AND (('â¨'))))) AND ((((NULL) IS TRUE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=344590560'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((NULL)OR('0.7950434911062776')))AND(x'')))OR(0.21876104474727098)))OR(x'')))GLOB((-1223431054 IN ()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1474415626 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ('4*' IN ()) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN ((NULL) ISNULL) THEN LIKELY(NULL) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1748073297 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1850344267 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1394711909 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '460339787 0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE LIKELIHOOD((((x'')) BETWEEN ((0.601145015619783)) AND ((0.37889685415309693))), 0.9713824123511505); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '1219898788'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CHANGES(); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL)) NOT BETWEEN (((('') BETWEEN (0.636198670493569) AND (x'')))) AND (((('XDt)lU	y')<(x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1482038340 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1523015412')*('T\nI#H'))))<((('0.4202625262601265' IN (''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1952737180 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=89038605 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1480713106 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=742628120 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ('' COLLATE BINARY)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(load_extension('430653334'), ('0.9581890604950214' IN (0X2a8b763b))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(NULL AS NUMERIC)) NOT BETWEEN (((0.3135620788589337)<=(2028685947))) AND (NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0Xffffffffeacfb7d4))<((NULL))) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1846063583' COLLATE NOCASE)OR(((0.3802579449185244) NOT NULL))))OR(CAST(0X7a62c4fd AS INTEGER))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-413266550 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-978221817'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-2096567421 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 sz=-877165196'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=105925144 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 sz=-297898657 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1516004874 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '670304017 sz=1633890607'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((0.48707911933180303) NOT BETWEEN (0.49480879411463585) AND (NULL)))); -- 34ms;
DELETE FROM sqlite_stat1 WHERE (((x'', x'', x''))<(('-546214060', x'', '-2062230851'))) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((((x'')AND(x'')))OR(0.707025369313704)))OR('-1850463475')))AND('')))AND(0.4132073859573525)))OR('')))GLOB((- (0.13773438307889063)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1169326143'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1948523700 sz=907228224 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'e439' COLLATE BINARY)AND(UPPER(DISTINCT 1.803811202E9))))OR((((('.-ë¬·-sLá8ï¦')AND(0.873627895811835)))AND(0.9947090749975969)))); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(x'' AS REAL)) NOT NULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1010897269 0 sz=1660498524 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE '0.6172801272306369'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1966524534 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE 'Md'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=85675255 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1087450625 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((~ ('210126141')) AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=330250651 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '1415621246 sz=-358998488'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN (x'1501')))%(CAST('-546214060' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((~ (x''))) BETWEEN (CAST(0Xffffffffa325625e AS BLOB)) AND (((0.7960881577051939)=(-762335674)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '4 sz=-1006983411 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL COLLATE NOCASE, ((x'') IS FALSE), ((((1308321795)OR(0.8321384880145463)))AND(x''))))=(((NULL IN ()), (NOT (x'')), ((x'3ed4') NOT NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 sz=-884460077 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((x'')OR(0.37889685415309693)))OR(0.685687148398094)))AND('_zTgZ]ïï ')))OR('â«VDFI[')))<<(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2005624892 0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1408223541 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-546214060 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1600425775 sz=-527819257 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('|''!aF')>>(-5.61228197E8)))>>(CAST('\m' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('0.012331773994530115')) BETWEEN (((((x''))<((NULL))))) AND ((((((0.353748289110572)AND(NULL)))AND(-8.01851085E8))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((NULL)-(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1141329019 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0'); -- 1ms;
DELETE FROM sqlite_stat1 WHERE (+ ((((((((('E-')OR(0Xffffffff8713b221)))AND(NULL)))AND(-1996738188)))OR(290086038)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE x'' COLLATE BINARY  WHEN ((((0.5041650429148368)AND(x'371c')))OR('-1906001508')) THEN '-1450244579' ELSE (NOT ('')) END; -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1227092382 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-714166339 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((CASE WHEN NULL THEN 't?Ks/hTtt' END, ((x'')&(NULL)), 2091965766))>=((((0.975004451039696) NOT BETWEEN (x'8ecd') AND ('')), x'', ((NULL) NOTNULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1296808011 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0Xffffffffc3cb1957 IN ('-1070273189')))IS NOT(((NULL)+(NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (+ ('-1391345983')) THEN ((((((((2108101035)OR(-494301911)))AND(x'')))OR('o4#Ydá·~')))OR('')) ELSE ((((((((0.13485500795697247)OR('-370334537')))OR('^F')))AND(0.9606217577203158)))AND(NULL)) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1839073725 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN '904703814' END) NOT BETWEEN ((((('124571587')AND(0.3945381786092683)))OR(x'f634'))) AND ((0.3688965274889259 IN ()))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL)<<(0xffffffffc4334fc0)) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '85675255 sz=-996730675'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULLIF(((x'5557') BETWEEN (0.5915902057136638) AND ('0.5168588610631287')), UNLIKELY(DISTINCT NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-645486241'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-714166339 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1646975813 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-413266550 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0xfffffffff9f3bf52; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'07f0' IN (0.7835359696872279))) BETWEEN (((x'') NOT BETWEEN ('0.06020639928135174') AND ('1328144419'))) AND (CAST(0.5565784032299393 AS REAL))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '4/fjè¼'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1644654984 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1695665361'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 sz=-610515867 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 -1130564922 sz=734796458 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-864455329 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1387208586'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 sz=726994744 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (CAST(']' AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (((((x'')AND('89038605')))AND(0.13773438307889063)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT ('-285449565')))+((('A')&('-1802400290')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (CASE NULL  WHEN 0.4015727502001115 THEN '1521642745' WHEN -1.425588876E9 THEN 0.02496306456552333 WHEN x'54b0' THEN 0x34f3907d ELSE NULL END IN (((0.2318171638325166) IS FALSE))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((('hTeç¡å¹bj1h')<=('Nã')) AS INTEGER); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.6798478805729753)) BETWEEN (((0.9039603389805925 IN ()))) AND ((ABS(DISTINCT 1.42948612E8)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8120383240434715))>((x'ba31')))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (- (((NULL) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 713782843 sz=-676731852 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE(NULL, x''))%(((0.22504571493840664) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((- (NULL)) IN ()); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=812808989 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((~ (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'391d')-('0.6921272089741877')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1709877537'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '253964542 sz=1613775240 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1474415626 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-733045703 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NULL))<((0.5901238246711911))))>(((0.8439511202380987) IS FALSE))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '375512403 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 2'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (0.6539438874016927 IN ())  WHEN (('w5Ti') IS FALSE) THEN NULL COLLATE NOCASE WHEN 'é¹½^' COLLATE RTRIM THEN ((0.4277870620046592)||(NULL)) WHEN load_extension(0.37010605897783755, 0.02496306456552333) THEN ((-682846744)+(0xffffffffe7b32e91)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1727166510 sz=1321492960 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((((x'6af3')AND(NULL)))AND(0.03774449551759185)) AS TEXT); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((ROUND('uJDz,A^W<', '-592127321'))AND(x'dfb4' COLLATE BINARY)))OR(CAST('' AS REAL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_array(((((NULL)AND(0.1353467681579157)))OR(NULL)), '-527819257' COLLATE RTRIM, NULL, CASE '904703814'  WHEN x'' THEN NULL WHEN '-1055000794' THEN -1526423811 WHEN NULL THEN NULL WHEN NULL THEN '' WHEN NULL THEN x'f31b' ELSE NULL END); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) BETWEEN (((((0x202102b3)) NOT BETWEEN ((x'11ab')) AND (('2Y'))))) AND ((0.46909475456479477 COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1003270208 -1939979433 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1210561763 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=2040464518 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE PRINTF(((NULL) NOTNULL), x'' COLLATE RTRIM, ((0xffffffffdbb3d62e) BETWEEN (0.039011195449654146) AND (x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2108101035 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x'0db9d92a'; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE TIME(LTRIM('0.7721386359855128'), CAST(0.6238263202615271 AS TEXT), ((0x481fb567) NOT BETWEEN (0.9515271815935512) AND (0.6058033615725222))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 -1526215844 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=953172962'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1164671051 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=-974466859 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((LIKELY('-1817596367')) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('LH~'))>((((NULL)AND(NULL))))); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-200002105 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1528707783'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.6196482980595662) BETWEEN ('') AND (0.8119551265577097)) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 1259604897 sz=425598819 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((0x6efc6a13)OR(NULL)))AND(0.4811242901378536)))IS((((0x620bf984)) NOT BETWEEN (('VR''.Så¹e')) AND (('-628823818'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL, x'', 765564592)) NOT BETWEEN (((~ (x'1d3f')), LOWER(NULL), -1.984217976E9 COLLATE NOCASE)) AND ((CASE NULL  WHEN 9.04703814E8 THEN NULL WHEN x'' THEN ',' WHEN NULL THEN '1521642745' END, x'', CASE x''  WHEN NULL THEN 0X5a511ee5 ELSE '-2066545735' END))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-508416429)OR(0.976699899601781)))AND(NULL)) IN ((('')IS NOT(x'')), 1530540475 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '592877109 sz=600540671 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((IFNULL(DISTINCT NULL, -2066545735)) NOT BETWEEN (((((-292202751)OR(NULL)))OR(0xbf47246))) AND ((NOT (0x4b41f6a7)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 sz=1358612274 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((('-1539932781' IN (0.4468053801827233)))OR((('') NOTNULL))))OR(((x'589fce48')OR(0.23771104658236353)))))OR(x'' COLLATE NOCASE)))AND(((((NULL)AND(x'')))OR(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NOT (-1843413101))))>=((LAST_INSERT_ROWID()))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=1294864097 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((- ('')))GLOB(((228345335) NOT BETWEEN (0Xffffffffd034b933) AND ('-682846744')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE (((x'8375'))<((NULL)))  WHEN CAST(NULL AS INTEGER) THEN ((((x'')AND(x'e5a8')))OR('-847790823')) WHEN ((((0.45187198235167025)AND(x'')))AND(-1.47849408E8)) THEN '' COLLATE RTRIM WHEN ('-1794798927' IN ()) THEN ('1183748978' IN ('-799577161')) WHEN CAST(x'' AS INTEGER) THEN (((x'4da1')) NOT BETWEEN ((4.25598819E8)) AND ((x''))) WHEN (NULL IN ()) THEN CASE WHEN NULL THEN NULL ELSE x'' END END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-786310300 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=1851757918 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-610295562 197688083 sz=1158167905 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT ((((0.8418070298261758, 0.1440511151587719, NULL, 0.516092267707609, '-2014837710'))==((']!&lpv', '-1449620361', 0.053707954139521896, 'YpJF#pM', 0Xffffffffe5adfcac))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1449620361 -855033323 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((0.7721386359855128) BETWEEN (NULL) AND (-1.229666999E9))) NOT BETWEEN ((- (0.9755188069173567))) AND ((('2063577363') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2089251236'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((0.22894515303959007) BETWEEN ('1?') AND ('597954584')))AND((((('æ »')OR(0.4022240999274337)))AND(x'cca6')))))AND(TRIM(NULL, 0.8705999660159226))))OR(CASE x''  WHEN 0x7fffffffffffffff THEN x'' WHEN 0.9350125906391382 THEN NULL WHEN 0.03497955860903523 THEN NULL WHEN 0.6556712207895784 THEN '522160467' WHEN '-999755235' THEN NULL END)))AND((NOT (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=2108101035 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'e447')OR('_K')))OR(-1.3517792E7)))OR((x'' IN ()))))AND((((('%7Zê¢MB4')AND(0.23599696783017066)))OR(0.06160729758775263)))))AND((0.9472316641695205 IN ()))))AND((((0x2a8b763b))<((')!'))))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '2 2 794789543 sz=-1877792116 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-738641481 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1540761765 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((((((('-1721169550')OR(NULL)))OR(0xffffffffb636e269)))AND('mM')))OR(0.573554054536991)) THEN LIKE(x'', '!?', 'F') END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '4 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2002078384 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=762551776 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1486399733'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1486399733 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=879105242 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1778787660 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-9223372036854775808 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-1833642978'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1235845699 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-2050206098 2 sz=540705178'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=522160467 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 sz=474201529 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((-147849408)+(x'ca3b'))) BETWEEN (0.45928230185201047) AND (((0x6747ca42) BETWEEN (0Xffffffffb6ce7932) AND (NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE json_quote((x'905d' IN ())); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (CAST(x'd508' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NULL IN ()) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((1754002806)AND(1390629188)))AND(x'')))AND('-1721169550')))OR(NULL))) ISNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-91978319 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1644654984 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(DISTINCT ((('-1527998562'))<=((-1376467828))), CAST(0.7733369821440543 AS INTEGER)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NOT (''))) NOT NULL); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((CASE 0x515f3688  WHEN 0X45083d61 THEN 0.81139965934545 ELSE NULL END)OR(((NULL) NOT BETWEEN (0.1896216988533388) AND (823583750)))))AND(((NULL) NOTNULL))))AND(((-5.47679859E8) BETWEEN (0.5268722088179494) AND (1521642745)))))AND(((x'') NOT NULL))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')OR('-847955385')))OR('â¶¨lxâ«¼')) COLLATE NOCASE; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(((0.9277832757956369) ISNULL) AS INTEGER); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1451304092 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=-961095362'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '-1514607642 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=713782843'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1133599808 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1833642978'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1365194376 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>>(NULL)))>(0.3680389359166576 COLLATE NOCASE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=71947693 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1872779101'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-4079768 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('*helZOf2U' AS INTEGER))AND(CAST('gcé²7v ê¸u' AS REAL))))OR(NULL)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-705153663'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-1062292246')<<(NULL))) IS TRUE); -- 0ms;
DELETE FROM sqlite_stat1 WHERE HEX(DISTINCT '' COLLATE RTRIM); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=142948612 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE ((691057688)|(''))  WHEN LIKELIHOOD(x'a74a', 0.13812708284055197) THEN ('' IN ()) WHEN LIKELIHOOD(NULL, 0.8298153131814123) THEN ((x'')||(x'')) WHEN x'43a8' THEN (NOT (x'')) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-12772368 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 0 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2028685947 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('jhjáº·JeB-')IS('1521642745'))) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 unordered'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1398945595 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-729492684 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((json_type('-574262622'))>=(CAST('892952129' AS TEXT))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'b201')) NOT BETWEEN ((((0.16328693803307892)||(0x58a3c5ea)))) AND ((((('NM'))>(('0.15242580468540112')))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 -1821140604 sz=-290370661 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-801851085 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('-1130564922')) BETWEEN (('')) AND (('-')))) ISNULL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1502259700'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 sz=54730775'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE LIKELY(0.05886425067975021 COLLATE BINARY); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=-1130564922'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1376607385 sz=367670718'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-1106179012 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1262057403 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' sz=1384747200 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (NOT (CAST('~t' AS INTEGER))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-1425588876 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE NULL; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2041787708 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (~ (0X771d4315)) THEN ((0x5cabc6a4)==(NULL)) ELSE CASE '486422616'  WHEN 2001075815 THEN 'fS' END END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '4 2 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-930836395 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1935014069 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((0.15242580468540112, (((x'', x'', '-175230308')) NOT BETWEEN ((x'cc0b', NULL, NULL)) AND ((x'', NULL, '1417765404'))), ((x'cb43') IS TRUE)))<=(('-1870472095' COLLATE NOCASE, 0.42629380410111173, (0.8354320313581632 IN ())))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('-891074076')OR((((x'0fea42a4', 0.14904469918667496, NULL, 'pL{à»¡0', NULL))<((NULL, 0.873652758337808, x'', NULL, '<ë´ì¾0''E'))))))OR(CAST(0.4296508103085064 AS NUMERIC))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((COALESCE('fo', NULL)) BETWEEN ((x'' IN ())) AND (CASE WHEN NULL THEN 0Xffffffff934ed16c WHEN 0Xffffffffd70efd6f THEN NULL WHEN 0.877759940937543 THEN 0.8656720185073834 END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1741126506 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('', '!}', -7.29492684E8, x'cca301b3', NULL)) NOT BETWEEN ((0.5645481667163026, ('-1591431912' IN ()), load_extension(0.226437947375571), (('-1227982542') NOT BETWEEN (NULL) AND (NULL)), (((0.8007550313241748))<((-8.47955385E8))))) AND ((x'' COLLATE NOCASE, CAST(-1.527998562E9 AS BLOB), NULL, ((('-1527998562')) BETWEEN (('-1212342730')) AND ((NULL))), ((x'')OR(NULL))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-1643457764 -1927322046 sz=1587607360 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 0 unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'')>(0x55cfa139)))<=((('Lso') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TYPEOF(DISTINCT 0.5144220172885996) COLLATE BINARY; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=625473963 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('1080747817')) BETWEEN ((((0.4890882723882133)IS NOT('4y')))) AND ((((0.6467449965529998)IS('3m'))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('-115714293')) NOT BETWEEN (((('nm')<=('-1106982820')))) AND ((-101466286 COLLATE RTRIM))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1643457764 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (0.5265921100423622 IN ((((0.38566476511248615))>=((x''))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE TRIM(DISTINCT '') COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('A7s''Ba7') BETWEEN ('0.5775714868790103') AND ('B[?W|qj]')))AND(((((NULL)OR(x'')))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-2105403513'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-1392636285'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=1759916488 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-561228197'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '4 sz=1631749460 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
DELETE FROM sqlite_stat1 WHERE ABS((((']Fam'))!=((NULL)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '2 -1130564922 sz=-1519241089'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((1773183163) NOT BETWEEN ('') AND (NULL)) IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((NULL) IS FALSE)) BETWEEN (NULL COLLATE RTRIM) AND (((0.7290226562424293)>=(x'')))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE '-1488281774'  WHEN 'ã¼. + Qzk+' THEN '' ELSE 0.4890882723882133 END) NOT BETWEEN (NULL COLLATE BINARY) AND ((((NULL))<((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST((NOT ('-546214060')) AS NUMERIC); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((709081583) NOT BETWEEN (x'c4b3') AND (x'')) COLLATE RTRIM; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((~ (NULL)))AND(NULL)))OR(((x'') NOT BETWEEN (0.9106758526734146) AND (0X81cf8fe)))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '2 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=909695848 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((-932921640))=(('1803811202')))) BETWEEN (LTRIM(x'')) AND (CAST(0.20014377041443654 AS BLOB))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(CASE NULL  WHEN '-1224362906' THEN 0.9196146832176693 WHEN '' THEN '' WHEN 0.9011550733404965 THEN x'' ELSE NULL END AS REAL); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-74590847 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '0 unordered noskipscan'); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1487436823'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'7ffd')AND(x'7ed2')))OR(x'36bf')) COLLATE NOCASE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-179118322 sz=-249837305'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-1727660359 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' sz=2042000558 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN x'' THEN 0.37010605897783755 END)IS NOT(CASE WHEN 0xffffffff81bca48d THEN '-1797270672' ELSE 0.6444680241827285 END)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CAST(-2.27224706E8 AS INTEGER))||((((x'')) NOT BETWEEN ((-1507170655)) AND (('1110680561'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN (NULL, '0.05608227443546865'))) BETWEEN ((('-686883473')>(x''))) AND (CAST(x'' AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '4 sz=-1485686783 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1483603815 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((('1020282678')AND(x'b3f3')))OR('oIã7')))IS(NULL)); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (+ (((('æ»ã')) NOT BETWEEN ((0.012331773994530115)) AND (('-402750876'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((NULL) IS TRUE) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 -1966524534 sz=311158984 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((((((((((x'')AND((+ (x'4149')))))AND(CAST('u	bpCyé¹îµ½' AS TEXT))))OR(0.29676906710092466 COLLATE RTRIM)))AND(((x'')>>(NULL)))))OR(((0xfffffffff15c6816)<=('1210037607')))))AND(0.9554857033047655)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '0 sz=-388005479 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('2063577363')IS NOT(0.3751463680451741))) NOTNULL); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', '-457314230 sz=-211820450 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '-1871294571'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((NULL IN ()))IS((('') BETWEEN (x'') AND (NULL)))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE IFNULL(((0.9715183795289477)OR('768381945')), ((x'') IS FALSE)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '1040244353'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '969397275 -1952378010 sz=-1337707324 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE WHEN NULL THEN 0.9061539054429055 END)AND(CASE WHEN x'' THEN 'I_v3ëeL&' ELSE 0.7669837272063377 END)); -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '733185438 sz=528565902 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-911566309'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'Lj'  WHEN x'c7ec' THEN -779082804 WHEN '*Oíº' THEN 0.33291747722537135 WHEN -8.47955385E8 THEN '290879882' END) NOT BETWEEN (((x'')>>(0.5550320615084127))) AND (TRIM('p0'))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '1199222559'; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')) NOT BETWEEN (((x'' IN ()))) AND (((NULL IN (0Xffffffffcd7bb2fc))))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' sz=1900849667'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((0.35589811528027193)OR((((('')OR(0xfffffffff76867d4)))AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ (((x'')AND(x'')))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=722809162'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ''; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', '0 -325146533 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(x'' AS BLOB) COLLATE BINARY; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN (((NULL, NULL, x'5d52', x'', 'm')) BETWEEN ((NULL, NULL, '-738641481', '-1603637734', -1506019139)) AND ((0.003228576213102574, '-2140117344', '', 4735551, 0.9787186286668141))) THEN ((((-2.087900082E9)AND('-115714293')))AND(2.063577363E9)) ELSE ((x'') NOT BETWEEN (NULL) AND (NULL)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=1486399733 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE CASE WHEN 0.5773475254499649 COLLATE RTRIM THEN ((x'')>>('-1243863145')) END; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE 'cD[~'  WHEN NULL THEN 'c	' ELSE -8.36802078E8 END) IS TRUE); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '2 1081384775 sz=1'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=-830044028 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE GLOB(((1692683048) ISNULL), '1570791468'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=733185438 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((('1524721885') NOTNULL))OR(((x'') IS TRUE))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE '-1133599808'; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((NOT ('-888724495')))OR(CASE NULL  WHEN x'' THEN 489042128 ELSE -1.591431912E9 END)))OR((((-1547297619)) BETWEEN (('90?sâªxJ')) AND ((x''))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((((x'538a')) NOT BETWEEN ((0.6613643437277893)) AND (('-594196600'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((((NULL)AND(x'')))OR(x''))))<(((-931136579 IN ('0.10537204129879207'))))); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST(NULL AS REAL))AND((('4é·P<x')*(NULL)))))AND(('0.45490541267202855' IN ('2R1Zã¨¦/6', 0.37552435737160805)))); -- 20ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' sz=290086038 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1340297591 0 sz=2028685947'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt1', '-1814571464 sz=1474415626 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (x'' IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=1158167905'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '-213589999 sz=1034923980 noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '0 sz=-994733048'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((x'62df58fa') BETWEEN (-1984217976) AND (x'a022')))/(x'')); -- 1ms;
DELETE FROM sqlite_stat1 WHERE ((((CAST('65949835' AS INTEGER))OR(0.07464652947384942)))AND(CASE WHEN 1046060669 THEN '?\r\7' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ' unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.49930559632608285, 0X39c98c38, 1227092382)) NOT BETWEEN ((x'4c354cbb', NULL, -1418096684)) AND ((0x166352c5, x'e06b', x'9338')))) BETWEEN ((('L0')>(-1987453566))) AND (CASE WHEN '576956330' THEN x'' END)); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'vt0', '45595790 -260818580 noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (-147849408 COLLATE RTRIM IN ()); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=2084774099 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', ''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', '0 unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt0_segdir_1', '534309525 sz=1161192059 unordered'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((-1.376467828E9)) BETWEEN ((CASE 0.6191694252116187  WHEN x'' THEN NULL END)) AND ((((0.9578977407354617) IS FALSE)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=-511302682 unordered noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((CASE -1.625221999E9  WHEN 952935365 THEN 0.3851001934834761 END)||(x'')); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' unordered'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ' sz=-2042781885'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
UPDATE OR FAIL vt1 SET (c0, c0)=(x'', x'') WHERE ((((vt1.c0)OR(((vt1.c0) ISNULL))))AND((- (vt1.c0)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 215627591); -- 0ms;
ROLLBACK TRANSACTION; -- 43ms;
INSERT INTO vt1(vt1) VALUES('merge=57136816,7');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 13); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('1302484218'); -- 6ms;
INSERT OR IGNORE INTO vt0 VALUES ('1474415626'), (-6.82846744E8), ('-668468910'); -- 1ms;
PRAGMA temp.journal_mode = DELETE; -- 0ms;
PRAGMA optimize; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
END; -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('jgs''abw5'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1794798927,9');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA locking_mode = NORMAL; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''); -- 1ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0, order=ASC, notindexed=c0); -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'7313'); -- 1ms;
UPDATE OR REPLACE vt1 SET (c0)=(7.31797502E8) WHERE 0.7278439569725148; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('pgsz', '32277'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=11'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1724098585); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1215412555); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('\'); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (x''), (-1527998562), (NULL); -- 0ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT ((((ABS(vt0.c0))AND((vt2.c0 IN ()))))OR(vt2.c0)) FROM vt2; -- 0ms;
END TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-2015394964'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 962434537); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 45ms;
UPDATE vt0 SET (c0)=(NULL); -- 1ms;
UPDATE OR IGNORE vt2 SET c0='twGZ' WHERE '' COLLATE BINARY; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'sqlite_autoindex_vt2_segdir_1', '1757054906 sz=1227942357 unordered'); -- 1ms;
CREATE TRIGGER IF NOT EXISTS tr0 INSTEAD OF DELETE ON v0 FOR EACH ROW  WHEN (((v0.c0 IN ())) IS TRUE) BEGIN SELECT RAISE(IGNORE);END; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=10'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.20687528049191684), ('lTK*ïµ¯'), (0.7383740257335647); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (x''), (0Xffffffffec6cc3d4); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE vt2 SET (c0)=(NULL) WHERE ((((((((((((((((((((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(((vt2.c0) BETWEEN (vt2.c0) AND (-1644654984)))))AND(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END)))OR(vt2.c0)))AND(((NULL)&(vt2.c0)))))AND(NULL)); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE LIKELIHOOD(DISTINCT vt0.c0, 0.8460857495100208); -- 0ms;
INSERT OR IGNORE INTO vt2 VALUES ('ë´që¿º'); -- 0ms;
PRAGMA optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('automerge', 15); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0.7446308494425519), (NULL), (0.8537120266291719); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=11'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '63881'); -- 0ms;
INSERT INTO vt2(vt2, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt2(vt2) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-1250483247'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.45622127952719416); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1340815668,6');\n; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt2', '-561228197 unordered'); -- 0ms;
END; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.8682159247115531); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE (NOT (0.032961123315741636)); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
COMMIT; -- 0ms;
DROP TABLE vt1; -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt2 SET c0='1321492960', c0='-1736928191' WHERE '1296826694'; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt2 VALUES (NULL), (0.5669207505014415), ('i<DgM''Lg|'), (x'27bc'), (x'8080'); -- 1ms;
UPDATE vt0 SET c0=x''; -- 1ms;
INSERT OR FAIL INTO vt2 VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (0x5e91d9ce); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffffca195f14 WHERE CASE WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE BINARY END; -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('^h'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt2(vt2) VALUES('optimize'); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), (NULL), (0.7300783223247779); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '11306'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt2(vt2) VALUES('automerge=11'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('1391083713'), ('-1966524534'), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.012331773994530115), (NULL), (((((0.27153912472379504) ISNULL))<((~ (0Xffffffffbf038c3c))))); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA threads = -3478533883888480824; -- 0ms;
INSERT OR ROLLBACK INTO vt2(c0) VALUES (3.88724849E8); -- 1ms;
ANALYZE; -- 0ms;
ANALYZE; -- 1ms;
UPDATE vt0 SET (c0)=(''); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)GLOB(0Xffffffffbf60a39e)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.1646408307338847, vt0.c0, vt0.c0))) WHEN (((vt0.c0))<=((vt0.c0))) THEN (vt0.c0 IN (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)GLOB(0Xffffffffbf60a39e)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.1646408307338847, vt0.c0, vt0.c0))) WHEN (((vt0.c0))<=((vt0.c0))) THEN (vt0.c0 IN (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)GLOB(0Xffffffffbf60a39e)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.1646408307338847, vt0.c0, vt0.c0))) WHEN (((vt0.c0))<=((vt0.c0))) THEN (vt0.c0 IN (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0)GLOB(0Xffffffffbf60a39e)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.1646408307338847, vt0.c0, vt0.c0))) WHEN (((vt0.c0))<=((vt0.c0))) THEN (vt0.c0 IN (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0)GLOB(0Xffffffffbf60a39e)) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c0)) AND ((0.1646408307338847, vt0.c0, vt0.c0))) WHEN (((vt0.c0))<=((vt0.c0))) THEN (vt0.c0 IN (v0.c0)) WHEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0)GLOB(vt0.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c0))) ELSE (NOT (vt0.c0)) END);
SELECT * FROM vt2 WHERE (vt2.c0) ORDER BY CAST(vt2.c0 COLLATE NOCASE AS BLOB) ASC, ((vt2.c0)-(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY CAST(vt2.c0 COLLATE NOCASE AS BLOB) ASC, ((vt2.c0)-(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC);
SELECT * FROM vt2 WHERE (vt2.c0) ORDER BY CAST(vt2.c0 COLLATE NOCASE AS BLOB) ASC, ((vt2.c0)-(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY CAST(vt2.c0 COLLATE NOCASE AS BLOB) ASC, ((vt2.c0)-(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC);
SELECT * FROM vt2 WHERE (vt2.c0) ORDER BY CAST(vt2.c0 COLLATE NOCASE AS BLOB) ASC, ((vt2.c0)-(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) DESC;
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON (- (vt0.c0)) WHERE (((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) ORDER BY ((+ (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON (- (vt0.c0)) ORDER BY ((+ (vt0.c0)) IN ()));
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON (- (vt0.c0)) WHERE (((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) ORDER BY ((+ (vt0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON (- (vt0.c0)) ORDER BY ((+ (vt0.c0)) IN ()));
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON (- (vt0.c0)) WHERE (((vt0.c0)IS(vt0.c0)) COLLATE NOCASE) ORDER BY ((+ (vt0.c0)) IN ());
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (- (((v0.c0)>(v0.c0))))  NULLS LAST, (+ ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((v0.c0)>(v0.c0))))  NULLS LAST, (+ ((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (- (((v0.c0)>(v0.c0))))  NULLS LAST, (+ ((v0.c0 IN ())))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, v0 ORDER BY (- (((v0.c0)>(v0.c0))))  NULLS LAST, (+ ((v0.c0 IN ())))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE (v0.c0) ORDER BY (- (((v0.c0)>(v0.c0))))  NULLS LAST, (+ ((v0.c0 IN ())))  NULLS LAST;
SELECT COUNT(*) FROM vt2, v0 WHERE (v0.c0) ORDER BY (((vt2.c0)) BETWEEN ((TYPEOF(v0.c0))) AND ((json_array_length(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2, v0 ORDER BY (((vt2.c0)) BETWEEN ((TYPEOF(v0.c0))) AND ((json_array_length(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0 WHERE (v0.c0) ORDER BY (((vt2.c0)) BETWEEN ((TYPEOF(v0.c0))) AND ((json_array_length(v0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2, v0 ORDER BY (((vt2.c0)) BETWEEN ((TYPEOF(v0.c0))) AND ((json_array_length(v0.c0)))) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt2, v0 WHERE (v0.c0) ORDER BY (((vt2.c0)) BETWEEN ((TYPEOF(v0.c0))) AND ((json_array_length(v0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) ISNULL)) ORDER BY 'Jt*'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY 'Jt*'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) ISNULL)) ORDER BY 'Jt*'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) ISNULL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY 'Jt*'  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) ISNULL)) ORDER BY 'Jt*'  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)==('Xr\rzrP'))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (vt0.c0)), NULLIF(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)=('Xr\rzrP'))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (vt0.c0)), NULLIF(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)==('Xr\rzrP'))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (vt0.c0)), NULLIF(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)=('Xr\rzrP'))) AND (CAST(vt0.c0 AS REAL)))) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (vt0.c0)), NULLIF(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM) BETWEEN (((vt0.c0)==('Xr\rzrP'))) AND (CAST(vt0.c0 AS REAL)))) ORDER BY (vt0.c0 COLLATE NOCASE IN ((~ (vt0.c0)), NULLIF(DISTINCT vt0.c0, vt0.c0))) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt2, v0 WHERE ((((~ (vt2.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt2.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((((~ (vt2.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((~ (vt2.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((((~ (vt2.c0))) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (NOT (0.08796956570376924)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.08796956570376924)) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (NOT (0.08796956570376924)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0 ORDER BY (NOT (0.08796956570376924)) DESC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (vt0.c0 COLLATE BINARY))) ORDER BY (NOT (0.08796956570376924)) DESC;
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT ALL * FROM vt0, vt2 WHERE (((((((((vt2.c0 COLLATE BINARY)OR(((vt2.c0) BETWEEN (vt0.c0) AND ('kw')))))AND(((vt0.c0)>(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)))OR(''))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt2.c0 COLLATE BINARY)OR(((vt2.c0) BETWEEN (vt0.c0) AND ('kw')))))AND(((vt0.c0)>(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)))OR(''))) IS TRUE)  as count FROM vt0, vt2 ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE (((((((((vt2.c0 COLLATE BINARY)OR(((vt2.c0) BETWEEN (vt0.c0) AND ('kw')))))AND(((vt0.c0)>(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)))OR(''))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt2.c0 COLLATE BINARY)OR(((vt2.c0) BETWEEN (vt0.c0) AND ('kw')))))AND(((vt0.c0)>(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)))OR(''))) IS TRUE)  as count FROM vt0, vt2 ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 WHERE (((((((((vt2.c0 COLLATE BINARY)OR(((vt2.c0) BETWEEN (vt0.c0) AND ('kw')))))AND(((vt0.c0)>(vt0.c0)))))AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END)))OR(''))) ORDER BY CAST(vt0.c0 AS INTEGER)  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((vt2.c0) ISNULL))) AND ((CASE vt0.c0  WHEN 'i8' THEN vt2.c0 END))) CROSS JOIN vt2 ON (((NULL))>((((-5.4621406E8) BETWEEN (vt2.c0) AND (v0.c0))))) WHERE ((((vt0.c0)>=('2108101035')) IN ())) ORDER BY ((((((vt0.c0, v0.c0, vt2.c0, vt0.c0, v0.c0))=((v0.c0, vt2.c0, vt2.c0, vt2.c0, vt0.c0)))))>=((CAST(v0.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>=('2108101035')) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((vt2.c0) ISNULL))) AND ((CASE vt0.c0  WHEN 'i8' THEN vt2.c0 END))) CROSS JOIN vt2 ON (((NULL))>((((-5.4621406E8) BETWEEN (vt2.c0) AND (v0.c0))))) ORDER BY ((((((vt0.c0, v0.c0, vt2.c0, vt0.c0, v0.c0))=((v0.c0, vt2.c0, vt2.c0, vt2.c0, vt0.c0)))))>=((CAST(v0.c0 AS INTEGER))))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((vt2.c0) ISNULL))) AND ((CASE vt0.c0  WHEN 'i8' THEN vt2.c0 END))) CROSS JOIN vt2 ON (((NULL))>((((-5.4621406E8) BETWEEN (vt2.c0) AND (v0.c0))))) WHERE ((((vt0.c0)>=('2108101035')) IN ())) ORDER BY ((((((vt0.c0, v0.c0, vt2.c0, vt0.c0, v0.c0))=((v0.c0, vt2.c0, vt2.c0, vt2.c0, vt0.c0)))))>=((CAST(v0.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0)>=('2108101035')) IN ())) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((vt0.c0)) BETWEEN ((((vt2.c0) ISNULL))) AND ((CASE vt0.c0  WHEN 'i8' THEN vt2.c0 END))) CROSS JOIN vt2 ON (((NULL))>((((-5.4621406E8) BETWEEN (vt2.c0) AND (v0.c0))))) ORDER BY ((((((vt0.c0, v0.c0, vt2.c0, vt0.c0, v0.c0))=((v0.c0, vt2.c0, vt2.c0, vt2.c0, vt0.c0)))))>=((CAST(v0.c0 AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((+ (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((5.97954584E8) NOT BETWEEN (v0.c0) AND ('n|A'))))) ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST, (((0.03884223434486267 IN (v0.c0, v0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((5.97954584E8) NOT BETWEEN (v0.c0) AND ('n|A'))))) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST, (((0.03884223434486267 IN (v0.c0, v0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((+ (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((5.97954584E8) NOT BETWEEN (v0.c0) AND ('n|A'))))) ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST, (((0.03884223434486267 IN (v0.c0, v0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((+ (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((5.97954584E8) NOT BETWEEN (v0.c0) AND ('n|A'))))) IS TRUE)  as count FROM v0 ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST, (((0.03884223434486267 IN (v0.c0, v0.c0))) IS TRUE) DESC  NULLS LAST);
SELECT ALL * FROM v0 WHERE ((((((+ (v0.c0)))AND(CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)))AND(((5.97954584E8) NOT BETWEEN (v0.c0) AND ('n|A'))))) ORDER BY CAST((~ (v0.c0)) AS NUMERIC)  NULLS FIRST, NULL  NULLS FIRST, (((0.03884223434486267 IN (v0.c0, v0.c0))) IS TRUE) DESC  NULLS LAST;
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)OR((vt2.c0 IN ()))))OR(CAST(vt2.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)OR((vt2.c0 IN ()))))OR(CAST(vt2.c0 AS INTEGER)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)OR((vt2.c0 IN ()))))OR(CAST(vt2.c0 AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)OR((vt2.c0 IN ()))))OR(CAST(vt2.c0 AS INTEGER)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((vt2.c0)OR((vt2.c0 IN ()))))OR(CAST(vt2.c0 AS INTEGER))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(TRIM(vt2.c0) AS REAL)) ORDER BY ((((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOTNULL))))AND(((((v0.c0)OR(vt0.c0)))AND(vt2.c0)))))OR(0.7180042780149368)))OR(LIKELY(DISTINCT vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt2.c0) AS REAL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOTNULL))))AND(((((v0.c0)OR(vt0.c0)))AND(vt2.c0)))))OR(0.7180042780149368)))OR(LIKELY(DISTINCT vt2.c0))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(TRIM(vt2.c0) AS REAL)) ORDER BY ((((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOTNULL))))AND(((((v0.c0)OR(vt0.c0)))AND(vt2.c0)))))OR(0.7180042780149368)))OR(LIKELY(DISTINCT vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(TRIM(vt2.c0) AS REAL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOTNULL))))AND(((((v0.c0)OR(vt0.c0)))AND(vt2.c0)))))OR(0.7180042780149368)))OR(LIKELY(DISTINCT vt2.c0))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(TRIM(vt2.c0) AS REAL)) ORDER BY ((((((((IFNULL(DISTINCT v0.c0, v0.c0))AND(((v0.c0) NOTNULL))))AND(((((v0.c0)OR(vt0.c0)))AND(vt2.c0)))))OR(0.7180042780149368)))OR(LIKELY(DISTINCT vt2.c0)));
SELECT ALL * FROM vt0, vt2 WHERE (CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '' THEN vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY (NOT (CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '' THEN vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0, vt2 ORDER BY (NOT (CHANGES())) DESC);
SELECT ALL * FROM vt0, vt2 WHERE (CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '' THEN vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY (NOT (CHANGES())) DESC;
SELECT SUM(count) FROM (SELECT ((CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '' THEN vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) IS TRUE)  as count FROM vt0, vt2 ORDER BY (NOT (CHANGES())) DESC);
SELECT ALL * FROM vt0, vt2 WHERE (CASE WHEN CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN '' THEN vt0.c0 END THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END) ORDER BY (NOT (CHANGES())) DESC;
SELECT * FROM vt0 INNER JOIN vt2 ON ((((LIKE(vt0.c0, vt0.c0, ' '))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(NULL AS TEXT))) WHERE (ROUND(CAST(vt0.c0 AS NUMERIC), vt2.c0)) ORDER BY CASE WHEN COALESCE(vt2.c0, vt2.c0) THEN IFNULL(vt0.c0, vt2.c0) WHEN vt0.c0 THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c0 THEN (vt2.c0 IN (vt2.c0)) ELSE 0.6255457675902746 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(CAST(vt0.c0 AS NUMERIC), vt2.c0)) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN vt2 ON ((((LIKE(vt0.c0, vt0.c0, ' '))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(NULL AS TEXT))) ORDER BY CASE WHEN COALESCE(vt2.c0, vt2.c0) THEN IFNULL(vt0.c0, vt2.c0) WHEN vt0.c0 THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c0 THEN (vt2.c0 IN (vt2.c0)) ELSE 0.6255457675902746 END  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt2 ON ((((LIKE(vt0.c0, vt0.c0, ' '))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(NULL AS TEXT))) WHERE (ROUND(CAST(vt0.c0 AS NUMERIC), vt2.c0)) ORDER BY CASE WHEN COALESCE(vt2.c0, vt2.c0) THEN IFNULL(vt0.c0, vt2.c0) WHEN vt0.c0 THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c0 THEN (vt2.c0 IN (vt2.c0)) ELSE 0.6255457675902746 END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((ROUND(CAST(vt0.c0 AS NUMERIC), vt2.c0)) IS TRUE)  as count FROM vt0 NOT INDEXED INNER JOIN vt2 ON ((((LIKE(vt0.c0, vt0.c0, ' '))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(NULL AS TEXT))) ORDER BY CASE WHEN COALESCE(vt2.c0, vt2.c0) THEN IFNULL(vt0.c0, vt2.c0) WHEN vt0.c0 THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c0 THEN (vt2.c0 IN (vt2.c0)) ELSE 0.6255457675902746 END  NULLS LAST);
SELECT * FROM vt0 INNER JOIN vt2 ON ((((LIKE(vt0.c0, vt0.c0, ' '))AND(vt0.c0 COLLATE NOCASE)))AND(CAST(NULL AS TEXT))) WHERE (ROUND(CAST(vt0.c0 AS NUMERIC), vt2.c0)) ORDER BY CASE WHEN COALESCE(vt2.c0, vt2.c0) THEN IFNULL(vt0.c0, vt2.c0) WHEN vt0.c0 THEN ((vt0.c0)&(vt0.c0)) WHEN vt0.c0 THEN (vt2.c0 IN (vt2.c0)) ELSE 0.6255457675902746 END  NULLS LAST;
SELECT * FROM vt0, vt2 WHERE ((- (((((vt2.c0)OR(-704681982)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt2.c0)OR(-704681982)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((- (((((vt2.c0)OR(-704681982)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((((vt2.c0)OR(-704681982)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((- (((((vt2.c0)OR(-704681982)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST((~ (vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST((~ (vt0.c0)) AS NUMERIC));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)%(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) ISNULL))OR(((v0.c0)%(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)%(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) ISNULL))OR(((v0.c0)%(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0) ISNULL))OR(((v0.c0)%(v0.c0)))))AND((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((CAST(vt0.c0 AS INTEGER)) IS TRUE);
SELECT COUNT(*) FROM vt2, v0 WHERE ((((((vt2.c0 IN (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))))AND(json_array(v0.c0, vt2.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0 IN (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))))AND(json_array(v0.c0, vt2.c0)))) IS TRUE)  as count FROM vt2, v0);
SELECT COUNT(*) FROM vt2, v0 WHERE ((((((vt2.c0 IN (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))))AND(json_array(v0.c0, vt2.c0))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0 IN (v0.c0)))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))))AND(json_array(v0.c0, vt2.c0)))) IS TRUE)  as count FROM vt2, v0);
SELECT COUNT(*) FROM vt2 WHERE ((vt2.c0 IN (vt2.c0)) COLLATE BINARY) ORDER BY CAST((('1442360225')/(vt2.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN (vt2.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt2 ORDER BY CAST((('1442360225')/(vt2.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((vt2.c0 IN (vt2.c0)) COLLATE BINARY) ORDER BY CAST((('1442360225')/(vt2.c0)) AS TEXT)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN (vt2.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt2 ORDER BY CAST((('1442360225')/(vt2.c0)) AS TEXT)  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((vt2.c0 IN (vt2.c0)) COLLATE BINARY) ORDER BY CAST((('1442360225')/(vt2.c0)) AS TEXT)  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-1.797270672E9)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)AND(((vt0.c0)<=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-1.797270672E9)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(((vt0.c0)<=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-1.797270672E9)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)AND(((vt0.c0)<=(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) NOT BETWEEN ((-1.797270672E9)) AND ((vt0.c0))) COLLATE BINARY) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)AND(((vt0.c0)<=(vt0.c0)))) DESC);
SELECT COUNT(*) FROM vt0 WHERE ((((vt0.c0)) NOT BETWEEN ((-1.797270672E9)) AND ((vt0.c0))) COLLATE BINARY) ORDER BY ((vt0.c0)AND(((vt0.c0)<=(vt0.c0)))) DESC;
SELECT ALL * FROM v0 WHERE (((NULL)<<(((v0.c0) IS TRUE)))) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((NULL)<<(((v0.c0) IS TRUE)))) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((NULL)<<(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE) DESC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE (((NULL)<<(((v0.c0) IS TRUE)))) ORDER BY ((v0.c0 COLLATE BINARY) IS TRUE) DESC  NULLS FIRST;
SELECT * FROM vt2, vt0 WHERE ('1686926845') ORDER BY ((CASE WHEN vt2.c0 THEN vt0.c0 END) BETWEEN ('-1016407641') AND (((x'750155fa') NOT BETWEEN (vt2.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1686926845') IS TRUE)  as count FROM vt2, vt0 ORDER BY ((CASE WHEN vt2.c0 THEN vt0.c0 END) BETWEEN ('-1016407641') AND (((x'750155fa') NOT BETWEEN (vt2.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt2, vt0 WHERE ('1686926845') ORDER BY ((CASE WHEN vt2.c0 THEN vt0.c0 END) BETWEEN ('-1016407641') AND (((x'750155fa') NOT BETWEEN (vt2.c0) AND (vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (('1686926845') IS TRUE)  as count FROM vt2, vt0 ORDER BY ((CASE WHEN vt2.c0 THEN vt0.c0 END) BETWEEN ('-1016407641') AND (((x'750155fa') NOT BETWEEN (vt2.c0) AND (vt0.c0)))) DESC);
SELECT * FROM vt2, vt0 WHERE ('1686926845') ORDER BY ((CASE WHEN vt2.c0 THEN vt0.c0 END) BETWEEN ('-1016407641') AND (((x'750155fa') NOT BETWEEN (vt2.c0) AND (vt0.c0)))) DESC;
SELECT COUNT(*) FROM v0, vt2 INNER JOIN vt0 ON v0.c0 WHERE (CAST(((((((((((((v0.c0)AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY ((0.4166553705259498)<<((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((v0.c0)AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt2 INNER JOIN vt0 ON v0.c0 ORDER BY ((0.4166553705259498)<<((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2 INNER JOIN vt0 ON v0.c0 WHERE (CAST(((((((((((((v0.c0)AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY ((0.4166553705259498)<<((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((((((((((((v0.c0)AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)) AS BLOB)) IS TRUE)  as count FROM v0, vt2 INNER JOIN vt0 ON v0.c0 ORDER BY ((0.4166553705259498)<<((NOT (vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2 INNER JOIN vt0 ON v0.c0 WHERE (CAST(((((((((((((v0.c0)AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(v0.c0)))OR(vt0.c0)) AS BLOB)) ORDER BY ((0.4166553705259498)<<((NOT (vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5034504517009167)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5034504517009167)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5034504517009167)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((+ (CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5034504517009167)))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (CAST(vt0.c0 AS TEXT)))) ORDER BY (+ (((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(0.5034504517009167)))) DESC;
SELECT ALL * FROM v0, vt2 WHERE (((v0.c0)&(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)&(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE (((v0.c0)&(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((((v0.c0)&(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE (((v0.c0)&(v0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((((vt2.c0) IS FALSE)))<((NULLIF(vt2.c0, vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0) IS FALSE)))<((NULLIF(vt2.c0, vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((((vt2.c0) IS FALSE)))<((NULLIF(vt2.c0, vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0) IS FALSE)))<((NULLIF(vt2.c0, vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((((vt2.c0) IS FALSE)))<((NULLIF(vt2.c0, vt2.c0)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (((0.8091725348042862) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.8091725348042862) NOTNULL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((0.8091725348042862) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((0.8091725348042862) NOTNULL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((0.8091725348042862) NOTNULL));
SELECT ALL * FROM v0, vt0 INNER JOIN vt2 ON (((- (vt2.c0))) IS FALSE) WHERE (((vt0.c0 COLLATE BINARY)<>(CASE WHEN vt2.c0 THEN v0.c0 END))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<>(CASE WHEN vt2.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt2 ON (((- (vt2.c0))) IS FALSE) ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, vt0 INNER JOIN vt2 ON (((- (vt2.c0))) IS FALSE) WHERE (((vt0.c0 COLLATE BINARY)<>(CASE WHEN vt2.c0 THEN v0.c0 END))) ORDER BY v0.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((vt0.c0 COLLATE BINARY)<>(CASE WHEN vt2.c0 THEN v0.c0 END))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt2 ON (((- (vt2.c0))) IS FALSE) ORDER BY v0.c0  NULLS FIRST);
SELECT ALL * FROM v0, vt0 INNER JOIN vt2 ON (((- (vt2.c0))) IS FALSE) WHERE (((vt0.c0 COLLATE BINARY)<>(CASE WHEN vt2.c0 THEN v0.c0 END))) ORDER BY v0.c0  NULLS FIRST;
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt0.c0)>(vt0.c0))))) ORDER BY CASE WHEN 't!' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY CASE WHEN 't!' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt0.c0)>(vt0.c0))))) ORDER BY CASE WHEN 't!' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY CASE WHEN 't!' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((v0.c0) BETWEEN (CAST(v0.c0 AS TEXT)) AND (((vt0.c0)>(vt0.c0))))) ORDER BY CASE WHEN 't!' THEN CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END ELSE (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) END DESC;
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.593247102959082 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.593247102959082 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.593247102959082 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)=(vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.593247102959082 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)==(vt0.c0)))) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0 WHERE ((~ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN 0.593247102959082 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((vt0.c0) NOT NULL)) BETWEEN ((((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))==((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) AND (((vt0.c0)=(vt0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt2 NATURAL JOIN vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN '349231953' THEN 0xfffffffff2afc53a ELSE vt0.c0 END END) ORDER BY CASE WHEN (((v0.c0))>((vt0.c0))) THEN ((vt0.c0)OR(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN '349231953' THEN 0xfffffffff2afc53a ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt2 NATURAL JOIN vt0 ORDER BY CASE WHEN (((v0.c0))>((vt0.c0))) THEN ((vt0.c0)OR(v0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2 NATURAL JOIN vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN '349231953' THEN 0xfffffffff2afc53a ELSE vt0.c0 END END) ORDER BY CASE WHEN (((v0.c0))>((vt0.c0))) THEN ((vt0.c0)OR(v0.c0)) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0 COLLATE NOCASE  WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN '349231953' THEN 0xfffffffff2afc53a ELSE vt0.c0 END END) IS TRUE)  as count FROM v0, vt2 NATURAL JOIN vt0 ORDER BY CASE WHEN (((v0.c0))>((vt0.c0))) THEN ((vt0.c0)OR(v0.c0)) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2 NATURAL JOIN vt0 WHERE (CASE vt0.c0 COLLATE NOCASE  WHEN (((vt2.c0, vt0.c0, vt0.c0))>=((v0.c0, vt0.c0, vt0.c0))) THEN CASE WHEN '349231953' THEN 0xfffffffff2afc53a ELSE vt0.c0 END END) ORDER BY CASE WHEN (((v0.c0))>((vt0.c0))) THEN ((vt0.c0)OR(v0.c0)) END ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, v0 WHERE (CAST(((vt2.c0)AND(v0.c0)) AS INTEGER)) ORDER BY (((CAST(vt2.c0 AS NUMERIC)))>((((v0.c0) BETWEEN (x'') AND (vt2.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.c0)AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt2, v0 ORDER BY (((CAST(vt2.c0 AS NUMERIC)))>((((v0.c0) BETWEEN (x'') AND (vt2.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, v0 WHERE (CAST(((vt2.c0)AND(v0.c0)) AS INTEGER)) ORDER BY (((CAST(vt2.c0 AS NUMERIC)))>((((v0.c0) BETWEEN (x'') AND (vt2.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.c0)AND(v0.c0)) AS INTEGER)) IS TRUE)  as count FROM vt2, v0 ORDER BY (((CAST(vt2.c0 AS NUMERIC)))>((((v0.c0) BETWEEN (x'') AND (vt2.c0)))))  NULLS FIRST);
SELECT COUNT(*) FROM vt2, v0 WHERE (CAST(((vt2.c0)AND(v0.c0)) AS INTEGER)) ORDER BY (((CAST(vt2.c0 AS NUMERIC)))>((((v0.c0) BETWEEN (x'') AND (vt2.c0)))))  NULLS FIRST;
SELECT ALL * FROM v0 CROSS JOIN vt2 ON vt2.c0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON vt2.c0);
SELECT ALL * FROM v0 CROSS JOIN vt2 ON vt2.c0 WHERE (CAST(NULL AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(NULL AS BLOB)) IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON vt2.c0);
SELECT ALL * FROM v0 CROSS JOIN vt2 ON vt2.c0 WHERE (CAST(NULL AS BLOB));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (('1010897269')&(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN UPPER(vt0.c0) THEN TOTAL_CHANGES() END) ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN (('1010897269')&(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN UPPER(vt0.c0) THEN TOTAL_CHANGES() END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (('1010897269')&(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN UPPER(vt0.c0) THEN TOTAL_CHANGES() END) ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)));
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((vt0.c0) ISNULL) THEN (('1010897269')&(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN UPPER(vt0.c0) THEN TOTAL_CHANGES() END) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL))));
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE WHEN ((vt0.c0) ISNULL) THEN (('1010897269')&(vt0.c0)) WHEN vt0.c0 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE WHEN UPPER(vt0.c0) THEN TOTAL_CHANGES() END) ORDER BY (((vt0.c0 IN (vt0.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) NOT NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.c0)<(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((PRINTF(((vt0.c0)<(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (PRINTF(((vt0.c0)<(vt0.c0))));
SELECT ALL * FROM v0, vt2 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, v0.c0)))))) ORDER BY (((v0.c0 IN ())) IS TRUE), ((((vt2.c0)>>(vt2.c0)))>>(((vt2.c0)IS NOT(vt2.c0)))), CAST(LIKELIHOOD(v0.c0, 0.9869379716393772) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt2 ORDER BY (((v0.c0 IN ())) IS TRUE), ((((vt2.c0)>>(vt2.c0)))>>(((vt2.c0)IS NOT(vt2.c0)))), CAST(LIKELIHOOD(v0.c0, 0.9869379716393772) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, v0.c0)))))) ORDER BY (((v0.c0 IN ())) IS TRUE), ((((vt2.c0)>>(vt2.c0)))>>(((vt2.c0)IS NOT(vt2.c0)))), CAST(LIKELIHOOD(v0.c0, 0.9869379716393772) AS REAL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt2 ORDER BY (((v0.c0 IN ())) IS TRUE), ((((vt2.c0)>>(vt2.c0)))>>(((vt2.c0)IS NOT(vt2.c0)))), CAST(LIKELIHOOD(v0.c0, 0.9869379716393772) AS REAL) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE ((NOT ((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, v0.c0)))))) ORDER BY (((v0.c0 IN ())) IS TRUE), ((((vt2.c0)>>(vt2.c0)))>>(((vt2.c0)IS NOT(vt2.c0)))), CAST(LIKELIHOOD(v0.c0, 0.9869379716393772) AS REAL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) ISNULL) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (((v0.c0) ISNULL) COLLATE BINARY);
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON (+ ((((vt2.c0, vt0.c0, vt0.c0))<(('522160467', vt0.c0, vt0.c0))))) WHERE (CAST(UPPER(vt2.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt2.c0) AS BLOB)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON (+ ((((vt2.c0, vt0.c0, vt0.c0))<(('522160467', vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON (+ ((((vt2.c0, vt0.c0, vt0.c0))<(('522160467', vt0.c0, vt0.c0))))) WHERE (CAST(UPPER(vt2.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(UPPER(vt2.c0) AS BLOB)) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON (+ ((((vt2.c0, vt0.c0, vt0.c0))<(('522160467', vt0.c0, vt0.c0))))));
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON (+ ((((vt2.c0, vt0.c0, vt0.c0))<(('522160467', vt0.c0, vt0.c0))))) WHERE (CAST(UPPER(vt2.c0) AS BLOB));
SELECT ALL * FROM vt2, v0, vt0 WHERE (0.676881702208774);
SELECT SUM(count) FROM (SELECT ALL ((0.676881702208774) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (0.676881702208774);
SELECT SUM(count) FROM (SELECT ALL ((0.676881702208774) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (0.676881702208774);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (x'') ORDER BY (~ ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (~ ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0))))));
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (x'') ORDER BY (~ ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (~ ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0))))));
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (x'') ORDER BY (~ ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((vt2.c0)))));
SELECT ALL * FROM vt0, vt2 LEFT OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt0.c0) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END WHERE (HEX(DISTINCT (+ (v0.c0)))) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (+ (v0.c0)))) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt0.c0) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 LEFT OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt0.c0) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END WHERE (HEX(DISTINCT (+ (v0.c0)))) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((HEX(DISTINCT (+ (v0.c0)))) IS TRUE)  as count FROM vt0, vt2 LEFT OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt0.c0) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE DESC  NULLS FIRST);
SELECT ALL * FROM vt0, vt2 LEFT OUTER JOIN v0 ON CASE WHEN vt2.c0 COLLATE BINARY THEN LIKELY(DISTINCT vt0.c0) ELSE ((((((((vt2.c0)AND(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(v0.c0)) END WHERE (HEX(DISTINCT (+ (v0.c0)))) ORDER BY LAST_INSERT_ROWID() COLLATE NOCASE DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<>(vt0.c0)))))OR(vt0.c0)))AND((+ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))))OR(vt0.c0)))AND((+ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<>(vt0.c0)))))OR(vt0.c0)))AND((+ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)!=(vt0.c0)))))OR(vt0.c0)))AND((+ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0 ORDER BY (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST);
SELECT * FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(((vt0.c0)<>(vt0.c0)))))OR(vt0.c0)))AND((+ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) ORDER BY (- (vt0.c0)) COLLATE BINARY DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB));
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (v0.c0);
SELECT ALL * FROM v0 INNER JOIN vt2 ON ((v0.c0)LIKE(v0.c0)) COLLATE BINARY WHERE (((CAST(vt2.c0 AS TEXT))<<(((v0.c0)/(vt2.c0))))) ORDER BY 0.22504571493840664  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS TEXT))<<(((v0.c0)/(vt2.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON ((v0.c0)LIKE(v0.c0)) COLLATE BINARY ORDER BY 0.22504571493840664  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt2 ON ((v0.c0)LIKE(v0.c0)) COLLATE BINARY WHERE (((CAST(vt2.c0 AS TEXT))<<(((v0.c0)/(vt2.c0))))) ORDER BY 0.22504571493840664  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS TEXT))<<(((v0.c0)/(vt2.c0))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON ((v0.c0)LIKE(v0.c0)) COLLATE BINARY ORDER BY 0.22504571493840664  NULLS LAST);
SELECT ALL * FROM v0 INNER JOIN vt2 ON ((v0.c0)LIKE(v0.c0)) COLLATE BINARY WHERE (((CAST(vt2.c0 AS TEXT))<<(((v0.c0)/(vt2.c0))))) ORDER BY 0.22504571493840664  NULLS LAST;
SELECT * FROM vt0, vt2 WHERE ((((((vt0.c0))<=((vt0.c0))))>>(((vt2.c0)<(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))>>(((vt2.c0)<(vt2.c0))))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((((((vt0.c0))<=((vt0.c0))))>>(((vt2.c0)<(vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((((((vt0.c0))<=((vt0.c0))))>>(((vt2.c0)<(vt2.c0))))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((((((vt0.c0))<=((vt0.c0))))>>(((vt2.c0)<(vt2.c0)))));
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((((((((v0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((((((((v0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((v0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0);
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((((((((v0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((HEX(DISTINCT v0.c0))<<(((((v0.c0)AND(v0.c0)))AND('-836802078'))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c0))<<(((((v0.c0)AND(v0.c0)))AND('-836802078'))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((HEX(DISTINCT v0.c0))<<(((((v0.c0)AND(v0.c0)))AND('-836802078'))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((HEX(DISTINCT v0.c0))<<(((((v0.c0)AND(v0.c0)))AND('-836802078'))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((HEX(DISTINCT v0.c0))<<(((((v0.c0)AND(v0.c0)))AND('-836802078'))))) ORDER BY LAST_INSERT_ROWID() DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt2 ON (- (((v0.c0)&(vt2.c0)))) CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (v0.c0) AND ('-1643457764')), v0.c0, CASE WHEN vt0.c0 THEN vt2.c0 END))>((((vt0.c0) IS TRUE), ((((((((v0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt2.c0))))) WHERE (0x54e9f0d);
SELECT SUM(count) FROM (SELECT ALL ((0X54e9f0d) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (- (((v0.c0)&(vt2.c0)))) CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (v0.c0) AND ('-1643457764')), v0.c0, CASE WHEN vt0.c0 THEN vt2.c0 END))>((((vt0.c0) IS TRUE), ((((((((v0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt2.c0))))));
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN vt2 ON (- (((v0.c0)&(vt2.c0)))) CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (v0.c0) AND ('-1643457764')), v0.c0, CASE WHEN vt0.c0 THEN vt2.c0 END))>((((vt0.c0) IS TRUE), ((((((((v0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt2.c0))))) WHERE (0x54e9f0d);
SELECT SUM(count) FROM (SELECT ALL ((0X54e9f0d) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (- (((v0.c0)&(vt2.c0)))) CROSS JOIN v0 ON (((((v0.c0) NOT BETWEEN (v0.c0) AND ('-1643457764')), v0.c0, CASE WHEN vt0.c0 THEN vt2.c0 END))>((((vt0.c0) IS TRUE), ((((((((v0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)), ((((((((vt0.c0)OR(vt2.c0)))AND(v0.c0)))AND(v0.c0)))AND(vt2.c0))))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((((((((((vt2.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0, vt2.c0, vt0.c0))!=((vt0.c0, 0.7790784837845591, vt2.c0))))))AND((NOT (v0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt2.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0, vt2.c0, vt0.c0))<>((vt0.c0, 0.7790784837845591, vt2.c0))))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((((((((((vt2.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0, vt2.c0, vt0.c0))!=((vt0.c0, 0.7790784837845591, vt2.c0))))))AND((NOT (v0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt2.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0, vt2.c0, vt0.c0))<>((vt0.c0, 0.7790784837845591, vt2.c0))))))AND((NOT (v0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((((((((((vt2.c0) BETWEEN (v0.c0) AND (vt0.c0)))OR(v0.c0)))AND((v0.c0 IN ()))))AND((((v0.c0, vt2.c0, vt0.c0))!=((vt0.c0, 0.7790784837845591, vt2.c0))))))AND((NOT (v0.c0))))) ORDER BY CAST(vt0.c0 COLLATE BINARY AS INTEGER);
SELECT ALL * FROM v0 INNER JOIN vt2 ON ((0.15725127128288774)AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, 0xfffffffffa8060b5))) WHERE (((((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))OR(vt2.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((0.5594526504126005)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))OR(vt2.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((0.5594526504126005)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON ((0.15725127128288774)AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, 0xfffffffffa8060b5))));
SELECT ALL * FROM v0 INNER JOIN vt2 ON ((0.15725127128288774)AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, 0xfffffffffa8060b5))) WHERE (((((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))OR(vt2.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((0.5594526504126005)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))OR(vt2.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((0.5594526504126005)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON ((0.15725127128288774)AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, 0xfffffffffa8060b5))));
SELECT ALL * FROM v0 INNER JOIN vt2 ON ((0.15725127128288774)AND(STRFTIME(vt2.c0, vt2.c0, vt2.c0, vt2.c0, 0xfffffffffa8060b5))) WHERE (((((((v0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))OR(vt2.c0 COLLATE NOCASE)))OR((((v0.c0)) BETWEEN ((0.5594526504126005)) AND ((v0.c0))))));
SELECT * FROM v0 WHERE (((((((v0.c0)<<(x'')))OR(((v0.c0) NOTNULL))))AND((('^28é¢	4&&') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<<(x'')))OR(((v0.c0) NOTNULL))))AND((('^28é¢	4&&') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)<<(x'')))OR(((v0.c0) NOTNULL))))AND((('^28é¢	4&&') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)<<(x'')))OR(((v0.c0) NOTNULL))))AND((('^28é¢	4&&') NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (((((((v0.c0)<<(x'')))OR(((v0.c0) NOTNULL))))AND((('^28é¢	4&&') NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((v0.c0)+('676257113')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)+('676257113')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((v0.c0)+('676257113')) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((v0.c0)+('676257113')) COLLATE BINARY) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((v0.c0)+('676257113')) COLLATE BINARY);
SELECT * FROM vt0, v0 WHERE (((((-1062292246)GLOB(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1062292246)GLOB(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((-1062292246)GLOB(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL ((((((-1062292246)GLOB(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((((-1062292246)GLOB(v0.c0)))>>((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN ())) IS FALSE)) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((((v0.c0 IN ())) IS FALSE));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((+ (vt0.c0)))) DESC  NULLS LAST, (((~ (vt0.c0)))AND((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((+ (vt0.c0)))) DESC  NULLS LAST, (((~ (vt0.c0)))AND((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((+ (vt0.c0)))) DESC  NULLS LAST, (((~ (vt0.c0)))AND((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)*(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((+ (vt0.c0)))) DESC  NULLS LAST, (((~ (vt0.c0)))AND((~ (vt0.c0)))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)*(vt0.c0)))GLOB(CAST(vt0.c0 AS TEXT)))) ORDER BY (((((+ (vt0.c0)))OR(((vt0.c0)>=(vt0.c0)))))AND((+ (vt0.c0)))) DESC  NULLS LAST, (((~ (vt0.c0)))AND((~ (vt0.c0)))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt2 INNER JOIN vt0 ON ((((1424234356)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ((vt0.c0 IN (vt2.c0)))) WHERE (((((((v0.c0)OR(vt2.c0)))OR(v0.c0)))OR(UNICODE(vt0.c0)))) ORDER BY v0.c0, ((((((vt0.c0) NOT BETWEEN (vt2.c0) AND (x'5216')))AND(((v0.c0)*(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) ASC  NULLS LAST, v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt2.c0)))OR(v0.c0)))OR(UNICODE(vt0.c0)))) IS TRUE)  as count FROM v0, vt2 INNER JOIN vt0 ON ((((1424234356)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ((vt0.c0 IN (vt2.c0)))) ORDER BY v0.c0, ((((((vt0.c0) NOT BETWEEN (vt2.c0) AND (x'5216')))AND(((v0.c0)*(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) ASC  NULLS LAST, v0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt2 INNER JOIN vt0 ON ((((1424234356)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ((vt0.c0 IN (vt2.c0)))) WHERE (((((((v0.c0)OR(vt2.c0)))OR(v0.c0)))OR(UNICODE(vt0.c0)))) ORDER BY v0.c0, ((((((vt0.c0) NOT BETWEEN (vt2.c0) AND (x'5216')))AND(((v0.c0)*(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) ASC  NULLS LAST, v0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt2.c0)))OR(v0.c0)))OR(UNICODE(vt0.c0)))) IS TRUE)  as count FROM v0, vt2 INNER JOIN vt0 ON ((((1424234356)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ((vt0.c0 IN (vt2.c0)))) ORDER BY v0.c0, ((((((vt0.c0) NOT BETWEEN (vt2.c0) AND (x'5216')))AND(((v0.c0)*(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) ASC  NULLS LAST, v0.c0 ASC  NULLS LAST);
SELECT COUNT(*) FROM v0, vt2 INNER JOIN vt0 ON ((((1424234356)) BETWEEN ((vt0.c0)) AND ((v0.c0))) IN ((vt0.c0 IN (vt2.c0)))) WHERE (((((((v0.c0)OR(vt2.c0)))OR(v0.c0)))OR(UNICODE(vt0.c0)))) ORDER BY v0.c0, ((((((vt0.c0) NOT BETWEEN (vt2.c0) AND (x'5216')))AND(((v0.c0)*(vt0.c0)))))AND(((v0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) ASC  NULLS LAST, v0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt2 WHERE ((((((((x'')AND(v0.c0)))OR(v0.c0))))!=((((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)))))) ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((((x'')AND(v0.c0)))OR(v0.c0))))!=((((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, vt2 ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt2 WHERE ((((((((x'')AND(v0.c0)))OR(v0.c0))))!=((((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)))))) ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL (((((((((x'')AND(v0.c0)))OR(v0.c0))))!=((((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, vt2 ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt2 WHERE ((((((((x'')AND(v0.c0)))OR(v0.c0))))!=((((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)))))) ORDER BY CAST(CAST(x'' AS INTEGER) AS NUMERIC);
SELECT * FROM v0 FULL OUTER JOIN vt2 ON ((((((vt2.c0)GLOB(vt2.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON CASE LIKELY(v0.c0)  WHEN (vt2.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (0.4435202124396692) AND (vt0.c0)) ELSE (+ (v0.c0)) END WHERE (CASE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))  WHEN LIKE(x'', v0.c0, 'l') THEN (('1797152148') NOT BETWEEN (vt2.c0) AND (v0.c0)) END) ORDER BY ((((v0.c0) NOTNULL))==((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))  WHEN LIKE(x'', v0.c0, 'l') THEN (('1797152148') NOT BETWEEN (vt2.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON ((((((vt2.c0)GLOB(vt2.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON CASE LIKELY(v0.c0)  WHEN (vt2.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (0.4435202124396692) AND (vt0.c0)) ELSE (+ (v0.c0)) END ORDER BY ((((v0.c0) NOTNULL))=((v0.c0 IN ()))));
SELECT * FROM v0 FULL OUTER JOIN vt2 ON ((((((vt2.c0)GLOB(vt2.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON CASE LIKELY(v0.c0)  WHEN (vt2.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (0.4435202124396692) AND (vt0.c0)) ELSE (+ (v0.c0)) END WHERE (CASE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))  WHEN LIKE(x'', v0.c0, 'l') THEN (('1797152148') NOT BETWEEN (vt2.c0) AND (v0.c0)) END) ORDER BY ((((v0.c0) NOTNULL))==((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))  WHEN LIKE(x'', v0.c0, 'l') THEN (('1797152148') NOT BETWEEN (vt2.c0) AND (v0.c0)) END) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON ((((((vt2.c0)GLOB(vt2.c0)))AND(((vt0.c0) ISNULL))))AND(((vt0.c0) NOTNULL))) FULL OUTER JOIN vt0 ON CASE LIKELY(v0.c0)  WHEN (vt2.c0 IN ()) THEN ((vt0.c0) NOT BETWEEN (0.4435202124396692) AND (vt0.c0)) ELSE (+ (v0.c0)) END ORDER BY ((((v0.c0) NOTNULL))=((v0.c0 IN ()))));
SELECT COUNT(*) FROM v0, vt2 WHERE (((NULL)|(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN v0.c0 THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY (((((vt2.c0))==((v0.c0))))>=(vt2.c0)), CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((x'')))  WHEN ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((vt2.c0) IS TRUE) END, CAST(((0.03097657853330127) IS FALSE) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN v0.c0 THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM v0, vt2 ORDER BY (((((vt2.c0))=((v0.c0))))>=(vt2.c0)), CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((x'')))  WHEN ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((vt2.c0) IS TRUE) END, CAST(((0.03097657853330127) IS FALSE) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt2 WHERE (((NULL)|(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN v0.c0 THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY (((((vt2.c0))==((v0.c0))))>=(vt2.c0)), CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((x'')))  WHEN ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((vt2.c0) IS TRUE) END, CAST(((0.03097657853330127) IS FALSE) AS NUMERIC);
SELECT SUM(count) FROM (SELECT ALL ((((NULL)|(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN v0.c0 THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM v0, vt2 ORDER BY (((((vt2.c0))=((v0.c0))))>=(vt2.c0)), CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((x'')))  WHEN ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((vt2.c0) IS TRUE) END, CAST(((0.03097657853330127) IS FALSE) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt2 WHERE (((NULL)|(CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN v0.c0 THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY (((((vt2.c0))==((v0.c0))))>=(vt2.c0)), CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((x'')))  WHEN ((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN ((vt2.c0) IS TRUE) END, CAST(((0.03097657853330127) IS FALSE) AS NUMERIC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c0 END)IS NOT((v0.c0 IN ()))) FULL OUTER JOIN vt0 ON CAST(((vt2.c0)/(vt2.c0)) AS BLOB) WHERE (x'') ORDER BY ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c0 END)IS NOT((v0.c0 IN ()))) FULL OUTER JOIN vt0 ON CAST(((vt2.c0)/(vt2.c0)) AS BLOB) ORDER BY ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE ASC);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c0 END)IS NOT((v0.c0 IN ()))) FULL OUTER JOIN vt0 ON CAST(((vt2.c0)/(vt2.c0)) AS BLOB) WHERE (x'') ORDER BY ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt2 ON ((CASE WHEN vt0.c0 THEN vt2.c0 END)IS NOT((v0.c0 IN ()))) FULL OUTER JOIN vt0 ON CAST(((vt2.c0)/(vt2.c0)) AS BLOB) ORDER BY ((vt2.c0) BETWEEN (vt0.c0) AND (v0.c0)) COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)LIKE(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)LIKE(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)LIKE(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0)LIKE(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((v0.c0)LIKE(v0.c0)) IN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))));
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (vt0.c0);
SELECT ALL * FROM vt2 WHERE ((((vt2.c0)) NOT BETWEEN ((((vt2.c0)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0)) NOT BETWEEN ((((vt2.c0)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((((vt2.c0)) NOT BETWEEN ((((vt2.c0)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE))));
SELECT SUM(count) FROM (SELECT (((((vt2.c0)) NOT BETWEEN ((((vt2.c0)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((((vt2.c0)) NOT BETWEEN ((((vt2.c0)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE))));
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (NULL) ORDER BY (((((((vt2.c0))<((vt0.c0))))OR(json_remove(vt2.c0, vt2.c0))))AND(CAST(vt2.c0 AS TEXT)))  NULLS FIRST, json_array_length((((0.9392307714473448))<((vt0.c0))), ((((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((((vt2.c0))<((vt0.c0))))OR(json_remove(vt2.c0, vt2.c0))))AND(CAST(vt2.c0 AS TEXT)))  NULLS FIRST, json_array_length((((0.9392307714473448))<((vt0.c0))), ((((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (NULL) ORDER BY (((((((vt2.c0))<((vt0.c0))))OR(json_remove(vt2.c0, vt2.c0))))AND(CAST(vt2.c0 AS TEXT)))  NULLS FIRST, json_array_length((((0.9392307714473448))<((vt0.c0))), ((((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt2, vt0 ORDER BY (((((((vt2.c0))<((vt0.c0))))OR(json_remove(vt2.c0, vt2.c0))))AND(CAST(vt2.c0 AS TEXT)))  NULLS FIRST, json_array_length((((0.9392307714473448))<((vt0.c0))), ((((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt2 ON HEX(v0.c0 COLLATE BINARY) WHERE ((+ (vt2.c0))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt2.c0))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN vt2 ON HEX(v0.c0 COLLATE BINARY) ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt2 ON HEX(v0.c0 COLLATE BINARY) WHERE ((+ (vt2.c0))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((+ (vt2.c0))) IS TRUE)  as count FROM vt0, v0 LEFT OUTER JOIN vt2 ON HEX(v0.c0 COLLATE BINARY) ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM vt0, v0 LEFT OUTER JOIN vt2 ON HEX(v0.c0 COLLATE BINARY) WHERE ((+ (vt2.c0))) ORDER BY v0.c0 ASC;
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(((vt0.c0)GLOB(v0.c0))))) ORDER BY (- (LIKELY(DISTINCT v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(((vt0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (- (LIKELY(DISTINCT v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(((vt0.c0)GLOB(v0.c0))))) ORDER BY (- (LIKELY(DISTINCT v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(((vt0.c0)GLOB(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (- (LIKELY(DISTINCT v0.c0))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((CASE v0.c0  WHEN v0.c0 THEN v0.c0 END)IS(((vt0.c0)GLOB(v0.c0))))) ORDER BY (- (LIKELY(DISTINCT v0.c0))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL) ISNULL)) ORDER BY DATE(((v0.c0) IS FALSE), (v0.c0 IN (v0.c0)), v0.c0, CAST(v0.c0 AS BLOB), (v0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY DATE(((v0.c0) IS FALSE), (v0.c0 IN (v0.c0)), v0.c0, CAST(v0.c0 AS BLOB), (v0.c0 IN ())) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL) ISNULL)) ORDER BY DATE(((v0.c0) IS FALSE), (v0.c0 IN (v0.c0)), v0.c0, CAST(v0.c0 AS BLOB), (v0.c0 IN ())) DESC;
SELECT SUM(count) FROM (SELECT ((((NULL) ISNULL)) IS TRUE)  as count FROM v0 ORDER BY DATE(((v0.c0) IS FALSE), (v0.c0 IN (v0.c0)), v0.c0, CAST(v0.c0 AS BLOB), (v0.c0 IN ())) DESC);
SELECT ALL COUNT(*) FROM v0 WHERE (((NULL) ISNULL)) ORDER BY DATE(((v0.c0) IS FALSE), (v0.c0 IN (v0.c0)), v0.c0, CAST(v0.c0 AS BLOB), (v0.c0 IN ())) DESC;
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c0))%(TYPEOF(DISTINCT 0.9938249127280228))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0))%(TYPEOF(DISTINCT 0.9938249127280228)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c0))%(TYPEOF(DISTINCT 0.9938249127280228))));
SELECT SUM(count) FROM (SELECT ((((LTRIM(vt0.c0))%(TYPEOF(DISTINCT 0.9938249127280228)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (((LTRIM(vt0.c0))%(TYPEOF(DISTINCT 0.9938249127280228))));
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(TYPEOF(vt2.c0) AS TEXT)) ORDER BY (NOT (NULL)), vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(vt2.c0) AS TEXT)) IS TRUE)  as count FROM vt2 ORDER BY (NOT (NULL)), vt2.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(TYPEOF(vt2.c0) AS TEXT)) ORDER BY (NOT (NULL)), vt2.c0  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(TYPEOF(vt2.c0) AS TEXT)) IS TRUE)  as count FROM vt2 ORDER BY (NOT (NULL)), vt2.c0  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(TYPEOF(vt2.c0) AS TEXT)) ORDER BY (NOT (NULL)), vt2.c0  NULLS FIRST;
SELECT * FROM vt0 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((vt0.c0) IS FALSE))) WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB), vt0.c0 COLLATE NOCASE))==((v0.c0, CAST(v0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((vt0.c0) IS FALSE))) ORDER BY (((((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB), vt0.c0 COLLATE NOCASE))==((v0.c0, CAST(v0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((vt0.c0) IS FALSE))) WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB), vt0.c0 COLLATE NOCASE))==((v0.c0, CAST(v0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((vt0.c0) IS FALSE))) ORDER BY (((((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB), vt0.c0 COLLATE NOCASE))==((v0.c0, CAST(v0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON ((CASE WHEN v0.c0 THEN v0.c0 END) BETWEEN ((((vt0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))) AND (((vt0.c0) IS FALSE))) WHERE (v0.c0 COLLATE RTRIM) ORDER BY (((((v0.c0) NOTNULL), CAST(v0.c0 AS BLOB), vt0.c0 COLLATE NOCASE))==((v0.c0, CAST(v0.c0 AS NUMERIC), CAST(vt0.c0 AS INTEGER))))  NULLS LAST;
SELECT * FROM v0, vt2, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 END)) AND ((((vt2.c0)==(vt2.c0)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 END)) AND ((((vt2.c0)==(vt2.c0)))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt2, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 END)) AND ((((vt2.c0)==(vt2.c0)))))) ORDER BY v0.c0;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 END)) AND ((((vt2.c0)==(vt2.c0)))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY v0.c0);
SELECT * FROM v0, vt2, vt0 WHERE ((((v0.c0)) NOT BETWEEN ((CASE WHEN vt2.c0 THEN v0.c0 END)) AND ((((vt2.c0)==(vt2.c0)))))) ORDER BY v0.c0;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)>=(((((vt0.c0)AND(0.5590489847441278)))OR(vt0.c0)))) ASC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)>=(((((vt0.c0)AND(0.5590489847441278)))OR(vt0.c0)))) ASC  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)>=(((((vt0.c0)AND(0.5590489847441278)))OR(vt0.c0)))) ASC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)>=(((((vt0.c0)AND(0.5590489847441278)))OR(vt0.c0)))) ASC  NULLS LAST, NULL DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ((((vt0.c0)) BETWEEN (((vt0.c0 IN ()))) AND ((vt0.c0)))) ORDER BY ((CASE WHEN vt0.c0 THEN v0.c0 ELSE '' END)>=(((((vt0.c0)AND(0.5590489847441278)))OR(vt0.c0)))) ASC  NULLS LAST, NULL DESC  NULLS FIRST;
SELECT ALL * FROM vt2 WHERE (((-1.227982542E9)*('243469006')));
SELECT SUM(count) FROM (SELECT ((((-1.227982542E9)*('243469006'))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((-1.227982542E9)*('243469006')));
SELECT SUM(count) FROM (SELECT ((((-1.227982542E9)*('243469006'))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((-1.227982542E9)*('243469006')));
SELECT * FROM v0, vt2 WHERE ((((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, NULL)) AND ((vt2.c0, vt2.c0, v0.c0)))) IS TRUE)) ORDER BY ((((CAST(v0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))AND(vt2.c0)))) DESC  NULLS FIRST, (((((vt2.c0)AND(v0.c0)))OR(vt2.c0)) IN (vt2.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, NULL)) AND ((vt2.c0, vt2.c0, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, vt2 ORDER BY ((((CAST(v0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))AND(vt2.c0)))) DESC  NULLS FIRST, (((((vt2.c0)AND(v0.c0)))OR(vt2.c0)) IN (vt2.c0 COLLATE NOCASE)) ASC);
SELECT * FROM v0, vt2 WHERE ((((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, NULL)) AND ((vt2.c0, vt2.c0, v0.c0)))) IS TRUE)) ORDER BY ((((CAST(v0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))AND(vt2.c0)))) DESC  NULLS FIRST, (((((vt2.c0)AND(v0.c0)))OR(vt2.c0)) IN (vt2.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, NULL)) AND ((vt2.c0, vt2.c0, v0.c0)))) IS TRUE)) IS TRUE)  as count FROM v0, vt2 ORDER BY ((((CAST(v0.c0 AS TEXT))AND((vt2.c0 IN ()))))AND(((((v0.c0)AND(v0.c0)))AND(vt2.c0)))) DESC  NULLS FIRST, (((((vt2.c0)AND(v0.c0)))OR(vt2.c0)) IN (vt2.c0 COLLATE NOCASE)) ASC);
SELECT COUNT(*) FROM vt0, v0 WHERE (((~ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((~ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ((((~ (vt0.c0)) IN ())) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((~ (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT (((~ (vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((~ (vt0.c0)) COLLATE BINARY);
SELECT * FROM vt2, v0 WHERE ((NULL IN ((((vt2.c0))>=((vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((NULL IN ((((vt2.c0))>=((vt2.c0)))))) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE ((NULL IN ((((vt2.c0))>=((vt2.c0))))));
SELECT SUM(count) FROM (SELECT (((NULL IN ((((vt2.c0))>=((vt2.c0)))))) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE ((NULL IN ((((vt2.c0))>=((vt2.c0))))));
SELECT ALL * FROM vt0, v0, vt2 WHERE ((- (LOWER(vt2.c0)))) ORDER BY COALESCE((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, v0.c0, NULL))), (((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), -2042164027, ((v0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(vt2.c0)))) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY COALESCE((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, v0.c0, NULL))), (((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), -2042164027, ((v0.c0) IS FALSE)) DESC);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((- (LOWER(vt2.c0)))) ORDER BY COALESCE((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, v0.c0, NULL))), (((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), -2042164027, ((v0.c0) IS FALSE)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((- (LOWER(vt2.c0)))) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY COALESCE((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, v0.c0, NULL))), (((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), -2042164027, ((v0.c0) IS FALSE)) DESC);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((- (LOWER(vt2.c0)))) ORDER BY COALESCE((((v0.c0, vt2.c0, v0.c0)) BETWEEN ((vt0.c0, vt2.c0, vt0.c0)) AND ((vt0.c0, v0.c0, NULL))), (((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0))), -2042164027, ((v0.c0) IS FALSE)) DESC;
SELECT * FROM vt2, v0, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) NOTNULL)) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END)*((~ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END)*((~ (v0.c0)))) ASC);
SELECT * FROM vt2, v0, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) NOTNULL)) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END)*((~ (v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END)*((~ (v0.c0)))) ASC);
SELECT * FROM vt2, v0, vt0 WHERE (((((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0))) NOTNULL)) ORDER BY ((CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END)*((~ (v0.c0)))) ASC;
SELECT * FROM vt2, vt0 WHERE ((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((HEX(vt0.c0), UNLIKELY(vt0.c0), ((vt0.c0)||(vt2.c0)))) AND (((x'' IN ()), vt2.c0, ((vt0.c0)&(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((HEX(vt0.c0), UNLIKELY(vt0.c0), ((vt0.c0)||(vt2.c0)))) AND (((x'' IN ()), vt2.c0, ((vt0.c0)&(vt0.c0)))))) IS TRUE)  as count FROM vt2, vt0);
SELECT * FROM vt2, vt0 WHERE ((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((HEX(vt0.c0), UNLIKELY(vt0.c0), ((vt0.c0)||(vt2.c0)))) AND (((x'' IN ()), vt2.c0, ((vt0.c0)&(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((HEX(vt0.c0), UNLIKELY(vt0.c0), ((vt0.c0)||(vt2.c0)))) AND (((x'' IN ()), vt2.c0, ((vt0.c0)&(vt0.c0)))))) IS TRUE)  as count FROM vt2, vt0);
SELECT * FROM vt2, vt0 WHERE ((((vt0.c0, x'', vt0.c0)) NOT BETWEEN ((HEX(vt0.c0), UNLIKELY(vt0.c0), ((vt0.c0)||(vt2.c0)))) AND (((x'' IN ()), vt2.c0, ((vt0.c0)&(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN v0 ON CASE WHEN ((vt2.c0) IS TRUE) THEN CASE x'e7ec'  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END WHEN ((vt0.c0)!=(vt2.c0)) THEN CASE WHEN vt0.c0 THEN NULL END WHEN (- (v0.c0)) THEN ((vt0.c0) ISNULL) ELSE x'bc5c' END INNER JOIN vt0 ON IFNULL(rtreenode(vt0.c0, vt2.c0), ((vt2.c0)||(vt2.c0))) WHERE (vt2.c0) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0)))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, ((x'f9d1')&(CASE WHEN vt2.c0 THEN x'' END))  NULLS FIRST, CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON CASE WHEN ((vt2.c0) IS TRUE) THEN CASE x'e7ec'  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END WHEN ((vt0.c0)<>(vt2.c0)) THEN CASE WHEN vt0.c0 THEN NULL END WHEN (- (v0.c0)) THEN ((vt0.c0) ISNULL) ELSE x'bc5c' END INNER JOIN vt0 ON IFNULL(rtreenode(vt0.c0, vt2.c0), ((vt2.c0)||(vt2.c0))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0)))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, ((x'f9d1')&(CASE WHEN vt2.c0 THEN x'' END))  NULLS FIRST, CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 RIGHT OUTER JOIN v0 ON CASE WHEN ((vt2.c0) IS TRUE) THEN CASE x'e7ec'  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END WHEN ((vt0.c0)!=(vt2.c0)) THEN CASE WHEN vt0.c0 THEN NULL END WHEN (- (v0.c0)) THEN ((vt0.c0) ISNULL) ELSE x'bc5c' END INNER JOIN vt0 ON IFNULL(rtreenode(vt0.c0, vt2.c0), ((vt2.c0)||(vt2.c0))) WHERE (vt2.c0) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0)))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, ((x'f9d1')&(CASE WHEN vt2.c0 THEN x'' END))  NULLS FIRST, CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON CASE WHEN ((vt2.c0) IS TRUE) THEN CASE x'e7ec'  WHEN v0.c0 THEN vt2.c0 ELSE vt0.c0 END WHEN ((vt0.c0)<>(vt2.c0)) THEN CASE WHEN vt0.c0 THEN NULL END WHEN (- (v0.c0)) THEN ((vt0.c0) ISNULL) ELSE x'bc5c' END INNER JOIN vt0 ON IFNULL(rtreenode(vt0.c0, vt2.c0), ((vt2.c0)||(vt2.c0))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN ((((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0)))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))) DESC  NULLS LAST, ((x'f9d1')&(CASE WHEN vt2.c0 THEN x'' END))  NULLS FIRST, CAST(CAST(vt0.c0 AS INTEGER) AS REAL) DESC  NULLS FIRST);
SELECT ALL * FROM vt2, v0, vt0 WHERE (((((vt2.c0)&(vt2.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)&(vt2.c0)))OR(NULL))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (((((vt2.c0)&(vt2.c0)))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)&(vt2.c0)))OR(NULL))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (((((vt2.c0)&(vt2.c0)))OR(NULL)));
SELECT ALL * FROM vt2, v0, vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB)) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (CAST(vt0.c0 AS BLOB));
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0))IS(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))IS(vt0.c0)));
SELECT SUM(count) FROM (SELECT ((((UPPER(vt0.c0))IS(vt0.c0))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((UPPER(vt0.c0))IS(vt0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE ((~ (vt2.c0 COLLATE BINARY))) ORDER BY ((((((0xffffffff92b4d41e)*(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(v0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((((((0xffffffff92b4d41e)*(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(v0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE ((~ (vt2.c0 COLLATE BINARY))) ORDER BY ((((((0xffffffff92b4d41e)*(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(v0.c0 AS INTEGER)))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((~ (vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((((((0xffffffff92b4d41e)*(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(v0.c0 AS INTEGER)))  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE ((~ (vt2.c0 COLLATE BINARY))) ORDER BY ((((((0xffffffff92b4d41e)*(vt0.c0)))AND((vt0.c0 IN ()))))OR(CAST(v0.c0 AS INTEGER)))  NULLS FIRST;
SELECT ALL * FROM v0, vt0 WHERE ((NOT ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NOT ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NOT ((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NOT ((NOT (v0.c0)))));
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (COALESCE(((v0.c0)<('')), CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(((v0.c0)<('')), CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (COALESCE(((v0.c0)<('')), CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((COALESCE(((v0.c0)<('')), CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (COALESCE(((v0.c0)<('')), CASE vt2.c0  WHEN v0.c0 THEN v0.c0 END));
SELECT ALL * FROM vt2 WHERE ((NOT ((NOT (vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((NOT ((NOT (vt2.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((NOT (vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE ((NOT ((NOT (vt2.c0)))));
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((v0.c0))!=((-1.797270672E9))) COLLATE NOCASE) ORDER BY ((PRINTF(v0.c0, vt2.c0, vt0.c0, vt0.c0, v0.c0, v0.c0, vt2.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('-1527998562')<(v0.c0)))) ASC, (((((((0xffffffffeefc62a3, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))AND((vt0.c0 IN (v0.c0)))))OR(MAX('ï	', '', '-1182292934', v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))!=((-1.797270672E9))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((PRINTF(v0.c0, vt2.c0, vt0.c0, vt0.c0, v0.c0, v0.c0, vt2.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('-1527998562')<(v0.c0)))) ASC, (((((((0xffffffffeefc62a3, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))AND((vt0.c0 IN (v0.c0)))))OR(MAX('ï	', '', '-1182292934', v0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((v0.c0))!=((-1.797270672E9))) COLLATE NOCASE) ORDER BY ((PRINTF(v0.c0, vt2.c0, vt0.c0, vt0.c0, v0.c0, v0.c0, vt2.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('-1527998562')<(v0.c0)))) ASC, (((((((0xffffffffeefc62a3, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))AND((vt0.c0 IN (v0.c0)))))OR(MAX('ï	', '', '-1182292934', v0.c0))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0))!=((-1.797270672E9))) COLLATE NOCASE) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY ((PRINTF(v0.c0, vt2.c0, vt0.c0, vt0.c0, v0.c0, v0.c0, vt2.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('-1527998562')<(v0.c0)))) ASC, (((((((0xffffffffeefc62a3, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))AND((vt0.c0 IN (v0.c0)))))OR(MAX('ï	', '', '-1182292934', v0.c0))) ASC  NULLS FIRST);
SELECT ALL * FROM vt0, v0, vt2 WHERE ((((v0.c0))!=((-1.797270672E9))) COLLATE NOCASE) ORDER BY ((PRINTF(v0.c0, vt2.c0, vt0.c0, vt0.c0, v0.c0, v0.c0, vt2.c0)) BETWEEN (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND ((('-1527998562')<(v0.c0)))) ASC, (((((((0xffffffffeefc62a3, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, v0.c0))))AND((vt0.c0 IN (v0.c0)))))OR(MAX('ï	', '', '-1182292934', v0.c0))) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') ISNULL));
SELECT SUM(count) FROM (SELECT ((((x'') ISNULL)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((x'') ISNULL));
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN '393195838' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN '393195838' END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN '393195838' END IN ()));
SELECT SUM(count) FROM (SELECT (((CASE vt0.c0  WHEN vt0.c0 THEN '393195838' END IN ())) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((CASE vt0.c0  WHEN vt0.c0 THEN '393195838' END IN ()));
SELECT ALL * FROM vt2 WHERE ('616184975') ORDER BY ((NOT (x'')) IN ());
SELECT SUM(count) FROM (SELECT (('616184975') IS TRUE)  as count FROM vt2 ORDER BY ((NOT (x'')) IN ()));
SELECT ALL * FROM vt2 WHERE ('616184975') ORDER BY ((NOT (x'')) IN ());
SELECT SUM(count) FROM (SELECT (('616184975') IS TRUE)  as count FROM vt2 ORDER BY ((NOT (x'')) IN ()));
SELECT ALL * FROM vt2 WHERE ('616184975') ORDER BY ((NOT (x'')) IN ());
SELECT * FROM vt2, vt0 WHERE ((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)) IN (((vt0.c0)-(vt0.c0))))) ORDER BY ((TRIM(vt2.c0, x''))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)) IN (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((TRIM(vt2.c0, x''))OR(vt0.c0)));
SELECT * FROM vt2, vt0 WHERE ((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)) IN (((vt0.c0)-(vt0.c0))))) ORDER BY ((TRIM(vt2.c0, x''))OR(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)) IN (((vt0.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((TRIM(vt2.c0, x''))OR(vt0.c0)));
SELECT * FROM vt2, vt0 WHERE ((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)) IN (((vt0.c0)-(vt0.c0))))) ORDER BY ((TRIM(vt2.c0, x''))OR(vt0.c0));
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)<=(v0.c0)))|(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)<=(v0.c0)))|(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)<=(v0.c0)))|(v0.c0 COLLATE NOCASE)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((vt0.c0)<=(v0.c0)))|(v0.c0 COLLATE NOCASE)) ASC);
SELECT ALL * FROM v0, vt0 WHERE (((((((v0.c0)AND(vt0.c0)))AND(vt0.c0))) IS TRUE)) ORDER BY ((((vt0.c0)<=(v0.c0)))|(v0.c0 COLLATE NOCASE)) ASC;
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0) BETWEEN (vt0.c0) AND ('756083628'))))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((v0.c0 IN (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((0.9740286164320693)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) BETWEEN (vt0.c0) AND ('756083628'))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((v0.c0 IN (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((0.9740286164320693)) AND ((v0.c0)))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0) BETWEEN (vt0.c0) AND ('756083628'))))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((v0.c0 IN (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((0.9740286164320693)) AND ((v0.c0)))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((~ (((v0.c0) BETWEEN (vt0.c0) AND ('756083628'))))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((v0.c0 IN (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((0.9740286164320693)) AND ((v0.c0)))))  NULLS FIRST);
SELECT * FROM v0, vt0 WHERE ((~ (((v0.c0) BETWEEN (vt0.c0) AND ('756083628'))))) ORDER BY (((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), ((v0.c0 IN (vt0.c0)) IN ((((v0.c0)) NOT BETWEEN ((0.9740286164320693)) AND ((v0.c0)))))  NULLS FIRST;
SELECT * FROM vt0, v0, vt2 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)|(v0.c0)) END) ORDER BY ((+ (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)|(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, vt2 ORDER BY ((+ (vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0, v0, vt2 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)|(v0.c0)) END) ORDER BY ((+ (vt0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)|(v0.c0)) END) IS TRUE)  as count FROM vt0, v0 NOT INDEXED, vt2 ORDER BY ((+ (vt0.c0)) IN ())  NULLS FIRST);
SELECT * FROM vt0, v0, vt2 WHERE (CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((vt0.c0)|(v0.c0)) END) ORDER BY ((+ (vt0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt2 WHERE (((((((((((((((x'')GLOB(vt2.c0)))AND(((vt0.c0)OR(NULL)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt2.c0)-(vt0.c0))))) ORDER BY (- ((((vt0.c0))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((x'')GLOB(vt2.c0)))AND(((vt0.c0)OR(NULL)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt2.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (- ((((vt0.c0))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt2 WHERE (((((((((((((((x'')GLOB(vt2.c0)))AND(((vt0.c0)OR(NULL)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt2.c0)-(vt0.c0))))) ORDER BY (- ((((vt0.c0))>=((vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((x'')GLOB(vt2.c0)))AND(((vt0.c0)OR(NULL)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt2.c0)-(vt0.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (- ((((vt0.c0))>=((vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0 NOT INDEXED, vt2 WHERE (((((((((((((((x'')GLOB(vt2.c0)))AND(((vt0.c0)OR(NULL)))))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CAST(vt2.c0 AS TEXT))))AND(((((vt2.c0)AND(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))AND(((vt2.c0)-(vt0.c0))))) ORDER BY (- ((((vt0.c0))>=((vt0.c0)))));
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt0.c0) ORDER BY x'8a75' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY x'8a75' DESC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt0.c0) ORDER BY x'8a75' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY x'8a75' DESC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt0.c0) ORDER BY x'8a75' DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ (vt2.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ (vt2.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT (((~ (vt2.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ((~ (vt2.c0 COLLATE RTRIM)));
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt2 ON ((((vt0.c0, 'qç¡±l', vt2.c0))!=((v0.c0, v0.c0, '911193248'))) IN ()) WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt2 ON ((((vt0.c0, 'qç¡±l', vt2.c0))<>((v0.c0, v0.c0, '911193248'))) IN ()) ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt2 ON ((((vt0.c0, 'qç¡±l', vt2.c0))!=((v0.c0, v0.c0, '911193248'))) IN ()) WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM v0, vt0 INNER JOIN vt2 ON ((((vt0.c0, 'qç¡±l', vt2.c0))<>((v0.c0, v0.c0, '911193248'))) IN ()) ORDER BY v0.c0 ASC);
SELECT COUNT(*) FROM v0, vt0 INNER JOIN vt2 ON ((((vt0.c0, 'qç¡±l', vt2.c0))!=((v0.c0, v0.c0, '911193248'))) IN ()) WHERE ((NOT (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))))) ORDER BY v0.c0 ASC;
SELECT ALL * FROM vt2, v0, vt0 WHERE (STRFTIME(((vt2.c0)>=(vt2.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE))) ORDER BY ((((vt0.c0) BETWEEN (vt2.c0) AND (x'e76b')))=((0.5421077304292834 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt2.c0)>=(vt2.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt2.c0) AND (x'e76b')))==((0.5421077304292834 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, v0, vt0 WHERE (STRFTIME(((vt2.c0)>=(vt2.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE))) ORDER BY ((((vt0.c0) BETWEEN (vt2.c0) AND (x'e76b')))=((0.5421077304292834 IN ()))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt2.c0)>=(vt2.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((vt0.c0) BETWEEN (vt2.c0) AND (x'e76b')))==((0.5421077304292834 IN ()))) DESC  NULLS LAST);
SELECT ALL * FROM vt2, v0, vt0 WHERE (STRFTIME(((vt2.c0)>=(vt2.c0)), CAST(v0.c0 AS BLOB), ((vt0.c0) IS FALSE))) ORDER BY ((((vt0.c0) BETWEEN (vt2.c0) AND (x'e76b')))=((0.5421077304292834 IN ()))) DESC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE ((LTRIM(vt0.c0, v0.c0) IN ())) ORDER BY UPPER(DISTINCT ((((v0.c0)AND(vt0.c0)))OR(0.6259943351851313))) ASC;
SELECT SUM(count) FROM (SELECT (((LTRIM(vt0.c0, v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY UPPER(DISTINCT ((((v0.c0)AND(vt0.c0)))OR(0.6259943351851313))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((LTRIM(vt0.c0, v0.c0) IN ())) ORDER BY UPPER(DISTINCT ((((v0.c0)AND(vt0.c0)))OR(0.6259943351851313))) ASC;
SELECT SUM(count) FROM (SELECT (((LTRIM(vt0.c0, v0.c0) IN ())) IS TRUE)  as count FROM vt0, v0 ORDER BY UPPER(DISTINCT ((((v0.c0)AND(vt0.c0)))OR(0.6259943351851313))) ASC);
SELECT ALL * FROM vt0, v0 WHERE ((LTRIM(vt0.c0, v0.c0) IN ())) ORDER BY UPPER(DISTINCT ((((v0.c0)AND(vt0.c0)))OR(0.6259943351851313))) ASC;
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB((((vt0.c0)) NOT BETWEEN (('0.014551784437074944')) AND ((')â2æ'))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB((((vt0.c0)) NOT BETWEEN (('0.014551784437074944')) AND ((')â2æ'))))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB((((vt0.c0)) NOT BETWEEN (('0.014551784437074944')) AND ((')â2æ'))))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB((((vt0.c0)) NOT BETWEEN (('0.014551784437074944')) AND ((')â2æ'))))) ASC);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0)AND(vt0.c0))) IS FALSE)) ORDER BY ((CAST(vt0.c0 AS TEXT))GLOB((((vt0.c0)) NOT BETWEEN (('0.014551784437074944')) AND ((')â2æ'))))) ASC;
SELECT ALL * FROM vt2 WHERE ((+ ((~ (vt2.c0))))) ORDER BY ('313329822' IN ()), '2104916492'  NULLS FIRST, ((vt2.c0 IN ()) IN ()), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((CAST('*0S' AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY ('313329822' IN ()), '2104916492'  NULLS FIRST, ((vt2.c0 IN ()) IN ()), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((CAST('*0S' AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM vt2 WHERE ((+ ((~ (vt2.c0))))) ORDER BY ('313329822' IN ()), '2104916492'  NULLS FIRST, ((vt2.c0 IN ()) IN ()), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((CAST('*0S' AS INTEGER))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY ('313329822' IN ()), '2104916492'  NULLS FIRST, ((vt2.c0 IN ()) IN ()), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((CAST('*0S' AS INTEGER))))  NULLS LAST);
SELECT ALL * FROM vt2 WHERE ((+ ((~ (vt2.c0))))) ORDER BY ('313329822' IN ()), '2104916492'  NULLS FIRST, ((vt2.c0 IN ()) IN ()), (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((CAST('*0S' AS INTEGER))))  NULLS LAST;
SELECT COUNT(*) FROM v0, vt2 WHERE (CAST(0.8888199224244618 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.8888199224244618 AS INTEGER)) IS TRUE)  as count FROM v0, vt2);
SELECT COUNT(*) FROM v0, vt2 WHERE (CAST(0.8888199224244618 AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(0.8888199224244618 AS INTEGER)) IS TRUE)  as count FROM v0, vt2);
SELECT COUNT(*) FROM v0, vt2 WHERE (CAST(0.8888199224244618 AS INTEGER));
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE (v0.c0);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (CAST(((('^6|\>>ZN'))<=((v0.c0))) AS TEXT)) ORDER BY (~ (0.9478721037913004)) DESC, (((((vt0.c0) NOT NULL)))==((vt2.c0)))  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('^6|\>>ZN'))<=((v0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY (~ (0.9478721037913004)) DESC, (((((vt0.c0) NOT NULL)))==((vt2.c0)))  NULLS FIRST, v0.c0 ASC);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (CAST(((('^6|\>>ZN'))<=((v0.c0))) AS TEXT)) ORDER BY (~ (0.9478721037913004)) DESC, (((((vt0.c0) NOT NULL)))==((vt2.c0)))  NULLS FIRST, v0.c0 ASC;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((('^6|\>>ZN'))<=((v0.c0))) AS TEXT)) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY (~ (0.9478721037913004)) DESC, (((((vt0.c0) NOT NULL)))==((vt2.c0)))  NULLS FIRST, v0.c0 ASC);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (CAST(((('^6|\>>ZN'))<=((v0.c0))) AS TEXT)) ORDER BY (~ (0.9478721037913004)) DESC, (((((vt0.c0) NOT NULL)))==((vt2.c0)))  NULLS FIRST, v0.c0 ASC;
SELECT * FROM vt0, v0, vt2 NOT INDEXED WHERE (CASE WHEN (((v0.c0, vt0.c0, vt2.c0))!=((v0.c0, x'1cd5', v0.c0))) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN (NOT (v0.c0)) ELSE ((vt2.c0)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0, vt0.c0, vt2.c0))<>((v0.c0, x'1cd5', v0.c0))) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN (NOT (v0.c0)) ELSE ((vt2.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 NOT INDEXED WHERE (CASE WHEN (((v0.c0, vt0.c0, vt2.c0))!=((v0.c0, x'1cd5', v0.c0))) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN (NOT (v0.c0)) ELSE ((vt2.c0)LIKE(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((v0.c0, vt0.c0, vt2.c0))<>((v0.c0, x'1cd5', v0.c0))) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN (NOT (v0.c0)) ELSE ((vt2.c0)LIKE(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 NOT INDEXED WHERE (CASE WHEN (((v0.c0, vt0.c0, vt2.c0))!=((v0.c0, x'1cd5', v0.c0))) THEN v0.c0 COLLATE NOCASE WHEN ((v0.c0)LIKE(v0.c0)) THEN (NOT (vt0.c0)) WHEN vt0.c0 THEN (NOT (v0.c0)) ELSE ((vt2.c0)LIKE(v0.c0)) END);
SELECT * FROM vt2 WHERE (x'794f');
SELECT SUM(count) FROM (SELECT ((x'794f') IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (x'794f');
SELECT SUM(count) FROM (SELECT ((x'794f') IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (x'794f');
SELECT ALL * FROM vt2 WHERE (((((((((-738641481)AND(vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND((((vt2.c0))<((vt2.c0))))))OR(((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((-738641481)AND(vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND((((vt2.c0))<((vt2.c0))))))OR(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((((((-738641481)AND(vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND((((vt2.c0))<((vt2.c0))))))OR(((NULL) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((((-738641481)AND(vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND((((vt2.c0))<((vt2.c0))))))OR(((NULL) NOT NULL)))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((((((-738641481)AND(vt2.c0)))OR(((vt2.c0)<=(vt2.c0)))))AND((((vt2.c0))<((vt2.c0))))))OR(((NULL) NOT NULL))));
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((~ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((~ (vt0.c0)) IN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)), ((vt0.c0) NOT NULL))));
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CAST(vt0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))|(CAST(vt0.c0 AS BLOB))));
SELECT COUNT(*) FROM v0, vt2 WHERE ((((vt2.c0, v0.c0, '')) BETWEEN ((vt2.c0, ((v0.c0)>=(vt2.c0)), ((v0.c0)LIKE(v0.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, CAST(1536109232 AS TEXT), v0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0, v0.c0, '')) BETWEEN ((vt2.c0, ((v0.c0)>=(vt2.c0)), ((v0.c0)LIKE(v0.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, CAST(1536109232 AS TEXT), v0.c0)))) IS TRUE)  as count FROM v0, vt2 ORDER BY NULL);
SELECT COUNT(*) FROM v0, vt2 WHERE ((((vt2.c0, v0.c0, '')) BETWEEN ((vt2.c0, ((v0.c0)>=(vt2.c0)), ((v0.c0)LIKE(v0.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, CAST(1536109232 AS TEXT), v0.c0)))) ORDER BY NULL;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0, v0.c0, '')) BETWEEN ((vt2.c0, ((v0.c0)>=(vt2.c0)), ((v0.c0)LIKE(v0.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, CAST(1536109232 AS TEXT), v0.c0)))) IS TRUE)  as count FROM v0, vt2 ORDER BY NULL);
SELECT COUNT(*) FROM v0, vt2 WHERE ((((vt2.c0, v0.c0, '')) BETWEEN ((vt2.c0, ((v0.c0)>=(vt2.c0)), ((v0.c0)LIKE(v0.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN NULL THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE vt2.c0 END, CAST(1536109232 AS TEXT), v0.c0)))) ORDER BY NULL;
SELECT * FROM vt0, vt2, v0 WHERE (('Kt' COLLATE RTRIM IN (('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((('Kt' COLLATE RTRIM IN (('' IN ())))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT * FROM vt0, vt2, v0 WHERE (('Kt' COLLATE RTRIM IN (('' IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((('Kt' COLLATE RTRIM IN (('' IN ())))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT * FROM vt0, vt2, v0 WHERE (('Kt' COLLATE RTRIM IN (('' IN ()))));
SELECT * FROM vt2, v0, vt0 WHERE (json_type((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))) ORDER BY (((((((((((((vt2.c0 IN (vt2.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)))))OR(v0.c0)))AND(((vt2.c0)+(v0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(v0.c0)))OR(vt2.c0)))))OR(((vt2.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json_type((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY (((((((((((((vt2.c0 IN (vt2.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)))))OR(v0.c0)))AND(((vt2.c0)+(v0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(v0.c0)))OR(vt2.c0)))))OR(((vt2.c0) IS FALSE))));
SELECT * FROM vt2, v0, vt0 WHERE (json_type((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))) ORDER BY (((((((((((((vt2.c0 IN (vt2.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)))))OR(v0.c0)))AND(((vt2.c0)+(v0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(v0.c0)))OR(vt2.c0)))))OR(((vt2.c0) IS FALSE)));
SELECT SUM(count) FROM (SELECT ((json_type((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY (((((((((((((vt2.c0 IN (vt2.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)))))OR(v0.c0)))AND(((vt2.c0)+(v0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(v0.c0)))OR(vt2.c0)))))OR(((vt2.c0) IS FALSE))));
SELECT * FROM vt2, v0, vt0 WHERE (json_type((((vt0.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt0.c0))))) ORDER BY (((((((((((((vt2.c0 IN (vt2.c0)))OR(((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)))))OR(v0.c0)))AND(((vt2.c0)+(v0.c0)))))OR(vt0.c0)))OR(((((vt0.c0)OR(v0.c0)))OR(vt2.c0)))))OR(((vt2.c0) IS FALSE)));
SELECT * FROM v0, vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) ORDER BY ((CAST(vt2.c0 AS REAL))|(IFNULL(DISTINCT v0.c0, 0.5295688864215937)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt2 ORDER BY ((CAST(vt2.c0 AS REAL))|(IFNULL(DISTINCT v0.c0, 0.5295688864215937))));
SELECT * FROM v0, vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) ORDER BY ((CAST(vt2.c0 AS REAL))|(IFNULL(DISTINCT v0.c0, 0.5295688864215937)));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt2 ORDER BY ((CAST(vt2.c0 AS REAL))|(IFNULL(DISTINCT v0.c0, 0.5295688864215937))));
SELECT * FROM v0, vt2 WHERE (CAST(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END AS REAL)) ORDER BY ((CAST(vt2.c0 AS REAL))|(IFNULL(DISTINCT v0.c0, 0.5295688864215937)));
SELECT * FROM v0 WHERE ((((((v0.c0))<>((v0.c0))))%((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<>((v0.c0))))%((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT * FROM v0 WHERE ((((((v0.c0))<>((v0.c0))))%((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY v0.c0 ASC;
SELECT SUM(count) FROM (SELECT (((((((v0.c0))<>((v0.c0))))%((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 ASC);
SELECT * FROM v0 WHERE ((((((v0.c0))<>((v0.c0))))%((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY v0.c0 ASC;
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ROUND(v0.c0, v0.c0) THEN (v0.c0 IN ()) WHEN ROUND(v0.c0, v0.c0) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN ()) END) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ROUND(v0.c0, v0.c0) THEN (v0.c0 IN ()) WHEN ROUND(v0.c0, v0.c0) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ROUND(v0.c0, v0.c0) THEN (v0.c0 IN ()) WHEN ROUND(v0.c0, v0.c0) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN ()) END) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CASE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ROUND(v0.c0, v0.c0) THEN (v0.c0 IN ()) WHEN ROUND(v0.c0, v0.c0) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN ()) END) IS TRUE)  as count FROM v0 ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CASE CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN ROUND(v0.c0, v0.c0) THEN (v0.c0 IN ()) WHEN ROUND(v0.c0, v0.c0) THEN ((v0.c0) NOT NULL) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN (v0.c0 IN ()) END) ORDER BY ((CAST(v0.c0 AS INTEGER)) ISNULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt2 ON (~ (((v0.c0)<=(vt2.c0)))) WHERE (CASE WHEN (NOT (vt2.c0)) THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN v0.c0 THEN (+ (vt0.c0)) WHEN 'NV' THEN ((v0.c0) NOTNULL) END) ORDER BY ((CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (((v0.c0)=(vt2.c0))) AND (x'bb15' COLLATE NOCASE))  NULLS LAST, CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt2.c0)) THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN v0.c0 THEN (+ (vt0.c0)) WHEN 'NV' THEN ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt2 ON (~ (((v0.c0)<=(vt2.c0)))) ORDER BY ((CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (((v0.c0)=(vt2.c0))) AND (x'bb15' COLLATE NOCASE))  NULLS LAST, CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt2 ON (~ (((v0.c0)<=(vt2.c0)))) WHERE (CASE WHEN (NOT (vt2.c0)) THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN v0.c0 THEN (+ (vt0.c0)) WHEN 'NV' THEN ((v0.c0) NOTNULL) END) ORDER BY ((CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (((v0.c0)=(vt2.c0))) AND (x'bb15' COLLATE NOCASE))  NULLS LAST, CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (NOT (vt2.c0)) THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN v0.c0 THEN (+ (vt0.c0)) WHEN 'NV' THEN ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt2 ON (~ (((v0.c0)<=(vt2.c0)))) ORDER BY ((CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (((v0.c0)=(vt2.c0))) AND (x'bb15' COLLATE NOCASE))  NULLS LAST, CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON vt0.c0 RIGHT OUTER JOIN vt2 ON (~ (((v0.c0)<=(vt2.c0)))) WHERE (CASE WHEN (NOT (vt2.c0)) THEN ((v0.c0) BETWEEN (vt2.c0) AND (vt2.c0)) WHEN v0.c0 THEN (+ (vt0.c0)) WHEN 'NV' THEN ((v0.c0) NOTNULL) END) ORDER BY ((CASE v0.c0  WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN (((v0.c0)=(vt2.c0))) AND (x'bb15' COLLATE NOCASE))  NULLS LAST, CASE v0.c0  WHEN vt2.c0 THEN v0.c0 END COLLATE RTRIM;
SELECT * FROM v0 WHERE (5584868);
SELECT SUM(count) FROM (SELECT ((5584868) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (5584868);
SELECT SUM(count) FROM (SELECT ((5584868) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (5584868);
SELECT * FROM vt2, v0 WHERE (((0.4074984409890632 IN (v0.c0)) IN ())) ORDER BY x'4f5d';
SELECT SUM(count) FROM (SELECT ALL ((((0.4074984409890632 IN (v0.c0)) IN ())) IS TRUE)  as count FROM vt2, v0 ORDER BY x'4f5d');
SELECT * FROM vt2, v0 WHERE (((0.4074984409890632 IN (v0.c0)) IN ())) ORDER BY x'4f5d';
SELECT SUM(count) FROM (SELECT ALL ((((0.4074984409890632 IN (v0.c0)) IN ())) IS TRUE)  as count FROM vt2, v0 ORDER BY x'4f5d');
SELECT * FROM vt2, v0 WHERE (((0.4074984409890632 IN (v0.c0)) IN ())) ORDER BY x'4f5d';
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) NOT NULL))>(((((vt0.c0)AND(v0.c0)))OR(vt2.c0)))) WHERE (((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(vt2.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN 2.108101035E9 THEN vt2.c0 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(vt2.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN 2.108101035E9 THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) NOT NULL))>(((((vt0.c0)AND(v0.c0)))OR(vt2.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) NOT NULL))>(((((vt0.c0)AND(v0.c0)))OR(vt2.c0)))) WHERE (((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(vt2.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN 2.108101035E9 THEN vt2.c0 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(vt2.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN 2.108101035E9 THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) NOT NULL))>(((((vt0.c0)AND(v0.c0)))OR(vt2.c0)))));
SELECT ALL COUNT(*) FROM v0, vt0 RIGHT OUTER JOIN vt2 ON ((((vt2.c0) NOT NULL))>(((((vt0.c0)AND(v0.c0)))OR(vt2.c0)))) WHERE (((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND(vt2.c0 COLLATE BINARY)))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN 2.108101035E9 THEN vt2.c0 ELSE vt2.c0 END)));
SELECT COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON CAST(UNLIKELY(v0.c0) AS INTEGER) WHERE (((((vt0.c0)IS(vt0.c0)))<((~ (v0.c0))))) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))<((~ (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(UNLIKELY(v0.c0) AS INTEGER) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0)) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON CAST(UNLIKELY(v0.c0) AS INTEGER) WHERE (((((vt0.c0)IS(vt0.c0)))<((~ (v0.c0))))) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0)) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(vt0.c0)))<((~ (v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON CAST(UNLIKELY(v0.c0) AS INTEGER) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0)) DESC);
SELECT COUNT(*) FROM v0 NOT INDEXED CROSS JOIN vt0 ON CAST(UNLIKELY(v0.c0) AS INTEGER) WHERE (((((vt0.c0)IS(vt0.c0)))<((~ (v0.c0))))) ORDER BY ((((((vt0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (v0.c0 COLLATE RTRIM) AND (v0.c0)) DESC;
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ((vt0.c0) IS TRUE))) AND ((((NULL) IS FALSE), ((('2144718766')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ((vt0.c0) IS TRUE))) AND ((((NULL) IS FALSE), ((('2144718766')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ((vt0.c0) IS TRUE))) AND ((((NULL) IS FALSE), ((('2144718766')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)GLOB(vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ((vt0.c0) IS TRUE))) AND ((((NULL) IS FALSE), ((('2144718766')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)GLOB(vt0.c0)))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ((vt0.c0) IS TRUE))) AND ((((NULL) IS FALSE), ((('2144718766')) BETWEEN ((vt0.c0)) AND ((vt0.c0))), ((vt0.c0)GLOB(vt0.c0))))));
SELECT ALL COUNT(*) FROM vt0, vt2 INNER JOIN v0 ON CAST(((v0.c0)>(vt2.c0)) AS REAL) WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((NULL)=(vt0.c0)), ((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt2 INNER JOIN v0 ON CAST(((v0.c0)>(vt2.c0)) AS REAL) ORDER BY ((NULL)==(vt0.c0)), ((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt2 INNER JOIN v0 ON CAST(((v0.c0)>(vt2.c0)) AS REAL) WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((NULL)=(vt0.c0)), ((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt0, vt2 INNER JOIN v0 ON CAST(((v0.c0)>(vt2.c0)) AS REAL) ORDER BY ((NULL)==(vt0.c0)), ((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0, vt2 INNER JOIN v0 ON CAST(((v0.c0)>(vt2.c0)) AS REAL) WHERE (TYPEOF(DISTINCT vt0.c0 COLLATE BINARY)) ORDER BY ((NULL)=(vt0.c0)), ((((CAST(v0.c0 AS NUMERIC))AND(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))))OR((vt0.c0 IN (vt2.c0))));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY NULL ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)/(vt0.c0)))>>((vt0.c0 IN ())))) IS TRUE)  as count FROM vt0 ORDER BY NULL ASC);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)/(vt0.c0)))>>((vt0.c0 IN ())))) ORDER BY NULL ASC;
SELECT * FROM vt2, vt0, v0 WHERE (CASE (+ (vt2.c0))  WHEN vt2.c0 THEN vt0.c0 WHEN v0.c0 THEN LIKELIHOOD(vt0.c0, 0.41862537956546564) WHEN (x'' IN ()) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt2.c0, vt2.c0) END) ORDER BY v0.c0 DESC  NULLS FIRST, json_extract((- (vt2.c0)), ((vt0.c0)&(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt2.c0))  WHEN vt2.c0 THEN vt0.c0 WHEN v0.c0 THEN LIKELIHOOD(vt0.c0, 0.41862537956546564) WHEN (x'' IN ()) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt2.c0, vt2.c0) END) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST, json_extract((- (vt2.c0)), ((vt0.c0)&(vt0.c0))) DESC  NULLS FIRST);
SELECT * FROM vt2, vt0, v0 WHERE (CASE (+ (vt2.c0))  WHEN vt2.c0 THEN vt0.c0 WHEN v0.c0 THEN LIKELIHOOD(vt0.c0, 0.41862537956546564) WHEN (x'' IN ()) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt2.c0, vt2.c0) END) ORDER BY v0.c0 DESC  NULLS FIRST, json_extract((- (vt2.c0)), ((vt0.c0)&(vt0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE (+ (vt2.c0))  WHEN vt2.c0 THEN vt0.c0 WHEN v0.c0 THEN LIKELIHOOD(vt0.c0, 0.41862537956546564) WHEN (x'' IN ()) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt2.c0, vt2.c0) END) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY v0.c0 DESC  NULLS FIRST, json_extract((- (vt2.c0)), ((vt0.c0)&(vt0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))!=(((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ORDER BY ((((TYPEOF(DISTINCT v0.c0))OR(NULL)))OR(vt0.c0)) DESC  NULLS FIRST, (0.3628996307962653 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))<>(((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((TYPEOF(DISTINCT v0.c0))OR(NULL)))OR(vt0.c0)) DESC  NULLS FIRST, (0.3628996307962653 IN ())  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))!=(((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ORDER BY ((((TYPEOF(DISTINCT v0.c0))OR(NULL)))OR(vt0.c0)) DESC  NULLS FIRST, (0.3628996307962653 IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))<>(((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((TYPEOF(DISTINCT v0.c0))OR(NULL)))OR(vt0.c0)) DESC  NULLS FIRST, (0.3628996307962653 IN ())  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (((((((((((vt0.c0)OR(vt0.c0)))OR(v0.c0)))AND(v0.c0)))AND(vt0.c0)))!=(((((vt0.c0)OR(vt0.c0)))OR(v0.c0))))) ORDER BY ((((TYPEOF(DISTINCT v0.c0))OR(NULL)))OR(vt0.c0)) DESC  NULLS FIRST, (0.3628996307962653 IN ())  NULLS LAST;
SELECT * FROM vt2, v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT * FROM vt2, v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((NULL) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL)))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT * FROM vt2, v0, vt0 WHERE (((((NULL) NOT BETWEEN (vt2.c0) AND (vt0.c0)))AND(((vt0.c0) NOTNULL))));
SELECT ALL * FROM vt2, v0 WHERE ((((((((vt2.c0)AND(x'7fa5')))AND(v0.c0)), (NOT (vt2.c0)), ((((((((((((v0.c0)AND('0.07464652947384942')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL))))=(('??' COLLATE RTRIM, (vt2.c0 IN ()), (- (vt2.c0)))))) ORDER BY (NOT (vt2.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((((vt2.c0)AND(x'7fa5')))AND(v0.c0)), (NOT (vt2.c0)), ((((((((((((v0.c0)AND('0.07464652947384942')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL))))==(('??' COLLATE RTRIM, (vt2.c0 IN ()), (- (vt2.c0)))))) IS TRUE)  as count FROM vt2, v0 ORDER BY (NOT (vt2.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt2, v0 WHERE ((((((((vt2.c0)AND(x'7fa5')))AND(v0.c0)), (NOT (vt2.c0)), ((((((((((((v0.c0)AND('0.07464652947384942')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL))))=(('??' COLLATE RTRIM, (vt2.c0 IN ()), (- (vt2.c0)))))) ORDER BY (NOT (vt2.c0)) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((((((vt2.c0)AND(x'7fa5')))AND(v0.c0)), (NOT (vt2.c0)), ((((((((((((v0.c0)AND('0.07464652947384942')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL))))==(('??' COLLATE RTRIM, (vt2.c0 IN ()), (- (vt2.c0)))))) IS TRUE)  as count FROM vt2, v0 ORDER BY (NOT (vt2.c0)) COLLATE BINARY DESC);
SELECT ALL * FROM vt2, v0 WHERE ((((((((vt2.c0)AND(x'7fa5')))AND(v0.c0)), (NOT (vt2.c0)), ((((((((((((v0.c0)AND('0.07464652947384942')))OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(NULL))))=(('??' COLLATE RTRIM, (vt2.c0 IN ()), (- (vt2.c0)))))) ORDER BY (NOT (vt2.c0)) COLLATE BINARY DESC;
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST, CAST(((vt0.c0)<('-101466286')) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST, CAST(((vt0.c0)<('-101466286')) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST, CAST(((vt0.c0)<('-101466286')) AS INTEGER) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST, CAST(((vt0.c0)<('-101466286')) AS INTEGER) DESC  NULLS LAST);
SELECT * FROM vt0 WHERE ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) IN ())) ORDER BY (vt0.c0 IN ()) DESC  NULLS LAST, CAST(((vt0.c0)<('-101466286')) AS INTEGER) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((NULL IN (((vt0.c0)-(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NULL IN (((vt0.c0)-(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((NULL IN (((vt0.c0)-(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((NULL IN (((vt0.c0)-(v0.c0)))));
SELECT COUNT(*) FROM v0, vt2 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)) IN (CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END, (((vt2.c0))==((v0.c0))))) WHERE (((x'8d6e')AND(PRINTF(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'8d6e')AND(PRINTF(v0.c0)))) IS TRUE)  as count FROM v0, vt2 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)) IN (CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END, (((vt2.c0))=((v0.c0))))));
SELECT COUNT(*) FROM v0, vt2 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)) IN (CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END, (((vt2.c0))==((v0.c0))))) WHERE (((x'8d6e')AND(PRINTF(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((((x'8d6e')AND(PRINTF(v0.c0)))) IS TRUE)  as count FROM v0, vt2 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)) IN (CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END, (((vt2.c0))=((v0.c0))))));
SELECT COUNT(*) FROM v0, vt2 LEFT OUTER JOIN vt0 ON (((((((((v0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(v0.c0)))OR(vt0.c0)) IN (CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END, (((vt2.c0))==((v0.c0))))) WHERE (((x'8d6e')AND(PRINTF(v0.c0))));
SELECT ALL COUNT(*) FROM vt2 WHERE ((+ ((~ (vt2.c0))))) ORDER BY ((CASE '1451493952'  WHEN vt2.c0 THEN vt2.c0 END)GLOB((((vt2.c0))<(('-738641481'))))) DESC  NULLS FIRST, ((COALESCE(vt2.c0, vt2.c0)) BETWEEN (x'') AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY ((CASE '1451493952'  WHEN vt2.c0 THEN vt2.c0 END)GLOB((((vt2.c0))<(('-738641481'))))) DESC  NULLS FIRST, ((COALESCE(vt2.c0, vt2.c0)) BETWEEN (x'') AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt2 WHERE ((+ ((~ (vt2.c0))))) ORDER BY ((CASE '1451493952'  WHEN vt2.c0 THEN vt2.c0 END)GLOB((((vt2.c0))<(('-738641481'))))) DESC  NULLS FIRST, ((COALESCE(vt2.c0, vt2.c0)) BETWEEN (x'') AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) DESC;
SELECT SUM(count) FROM (SELECT (((+ ((~ (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY ((CASE '1451493952'  WHEN vt2.c0 THEN vt2.c0 END)GLOB((((vt2.c0))<(('-738641481'))))) DESC  NULLS FIRST, ((COALESCE(vt2.c0, vt2.c0)) BETWEEN (x'') AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) DESC);
SELECT ALL COUNT(*) FROM vt2 WHERE ((+ ((~ (vt2.c0))))) ORDER BY ((CASE '1451493952'  WHEN vt2.c0 THEN vt2.c0 END)GLOB((((vt2.c0))<(('-738641481'))))) DESC  NULLS FIRST, ((COALESCE(vt2.c0, vt2.c0)) BETWEEN (x'') AND (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) DESC;
SELECT ALL COUNT(*) FROM v0, vt2 NOT INDEXED, vt0 WHERE (TYPEOF((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (v0.c0)))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2 NOT INDEXED, vt0 WHERE (TYPEOF((+ (v0.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF((+ (v0.c0)))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2 NOT INDEXED, vt0 WHERE (TYPEOF((+ (v0.c0))));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (CAST(((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (CAST(((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT));
SELECT SUM(count) FROM (SELECT ((CAST(((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT)) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (CAST(((vt2.c0) BETWEEN (v0.c0) AND (vt2.c0)) AS TEXT));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt2 ON ('915983866' IN ((vt0.c0 IN (vt2.c0, vt0.c0)))) WHERE (((CAST(vt2.c0 AS TEXT)) BETWEEN (((vt2.c0) NOT NULL)) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS TEXT)) BETWEEN (((vt2.c0) NOT NULL)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ('915983866' IN ((vt0.c0 IN (vt2.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt2 ON ('915983866' IN ((vt0.c0 IN (vt2.c0, vt0.c0)))) WHERE (((CAST(vt2.c0 AS TEXT)) BETWEEN (((vt2.c0) NOT NULL)) AND ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS TEXT)) BETWEEN (((vt2.c0) NOT NULL)) AND ((- (vt0.c0))))) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ('915983866' IN ((vt0.c0 IN (vt2.c0, vt0.c0)))));
SELECT COUNT(*) FROM vt0 CROSS JOIN vt2 ON ('915983866' IN ((vt0.c0 IN (vt2.c0, vt0.c0)))) WHERE (((CAST(vt2.c0 AS TEXT)) BETWEEN (((vt2.c0) NOT NULL)) AND ((- (vt0.c0)))));
SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON (((vt2.c0) IS FALSE) IN (((vt0.c0)<(vt0.c0)))) FULL OUTER JOIN v0 ON ((vt2.c0)+(((((v0.c0)OR(v0.c0)))AND(vt2.c0)))) WHERE ('-1710723898') ORDER BY ((((vt0.c0)*(vt0.c0)))|(((v0.c0) ISNULL))) ASC  NULLS LAST, (NOT ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1710723898') IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON (((vt2.c0) IS FALSE) IN (((vt0.c0)<(vt0.c0)))) FULL OUTER JOIN v0 ON ((vt2.c0)+(((((v0.c0)OR(v0.c0)))AND(vt2.c0)))) ORDER BY ((((vt0.c0)*(vt0.c0)))|(((v0.c0) ISNULL))) ASC  NULLS LAST, (NOT ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON (((vt2.c0) IS FALSE) IN (((vt0.c0)<(vt0.c0)))) FULL OUTER JOIN v0 ON ((vt2.c0)+(((((v0.c0)OR(v0.c0)))AND(vt2.c0)))) WHERE ('-1710723898') ORDER BY ((((vt0.c0)*(vt0.c0)))|(((v0.c0) ISNULL))) ASC  NULLS LAST, (NOT ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (('-1710723898') IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON (((vt2.c0) IS FALSE) IN (((vt0.c0)<(vt0.c0)))) FULL OUTER JOIN v0 ON ((vt2.c0)+(((((v0.c0)OR(v0.c0)))AND(vt2.c0)))) ORDER BY ((((vt0.c0)*(vt0.c0)))|(((v0.c0) ISNULL))) ASC  NULLS LAST, (NOT ((vt0.c0 IN ()))) ASC  NULLS FIRST);
SELECT * FROM vt2 LEFT OUTER JOIN vt0 ON (((vt2.c0) IS FALSE) IN (((vt0.c0)<(vt0.c0)))) FULL OUTER JOIN v0 ON ((vt2.c0)+(((((v0.c0)OR(v0.c0)))AND(vt2.c0)))) WHERE ('-1710723898') ORDER BY ((((vt0.c0)*(vt0.c0)))|(((v0.c0) ISNULL))) ASC  NULLS LAST, (NOT ((vt0.c0 IN ()))) ASC  NULLS FIRST;
SELECT * FROM vt0, vt2 WHERE ((('èª±n_*y') BETWEEN (CAST(vt2.c0 AS INTEGER)) AND (CAST('214214844' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((('èª±n_*y') BETWEEN (CAST(vt2.c0 AS INTEGER)) AND (CAST('214214844' AS INTEGER)))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((('èª±n_*y') BETWEEN (CAST(vt2.c0 AS INTEGER)) AND (CAST('214214844' AS INTEGER))));
SELECT SUM(count) FROM (SELECT ALL (((('èª±n_*y') BETWEEN (CAST(vt2.c0 AS INTEGER)) AND (CAST('214214844' AS INTEGER)))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE ((('èª±n_*y') BETWEEN (CAST(vt2.c0 AS INTEGER)) AND (CAST('214214844' AS INTEGER))));
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ((((1666007792))<(((v0.c0 IN ()))))) ORDER BY ((((vt0.c0)AND(v0.c0))) NOT BETWEEN (x'') AND ((vt2.c0 IN (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1666007792))<(((v0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((((vt0.c0)AND(v0.c0))) NOT BETWEEN (x'') AND ((vt2.c0 IN (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ((((1666007792))<(((v0.c0 IN ()))))) ORDER BY ((((vt0.c0)AND(v0.c0))) NOT BETWEEN (x'') AND ((vt2.c0 IN (vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((1666007792))<(((v0.c0 IN ()))))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((((vt0.c0)AND(v0.c0))) NOT BETWEEN (x'') AND ((vt2.c0 IN (vt0.c0)))) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ((((1666007792))<(((v0.c0 IN ()))))) ORDER BY ((((vt0.c0)AND(v0.c0))) NOT BETWEEN (x'') AND ((vt2.c0 IN (vt0.c0)))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL));
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE NOCASE) NOTNULL)) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (((vt0.c0 COLLATE NOCASE) NOTNULL));
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt2 WHERE (json_type(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json_type(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt2);
SELECT ALL * FROM v0, vt0 NATURAL JOIN vt2 WHERE (json_type(vt0.c0) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((json_type(vt0.c0) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0 NATURAL JOIN vt2);
SELECT COUNT(*) FROM vt2 WHERE (((LIKELY(vt2.c0))<=(CASE vt2.c0  WHEN '-1978826621' THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt2.c0))<=(CASE vt2.c0  WHEN '-1978826621' THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt2 WHERE (((LIKELY(vt2.c0))<=(CASE vt2.c0  WHEN '-1978826621' THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY x'' DESC;
SELECT SUM(count) FROM (SELECT ALL ((((LIKELY(vt2.c0))<=(CASE vt2.c0  WHEN '-1978826621' THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2 ORDER BY x'' DESC);
SELECT COUNT(*) FROM vt2 WHERE (((LIKELY(vt2.c0))<=(CASE vt2.c0  WHEN '-1978826621' THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY x'' DESC;
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY v0.c0, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7100557559933243) AND (v0.c0)), NULLIF(v0.c0, v0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7100557559933243) AND (v0.c0)), NULLIF(v0.c0, v0.c0) COLLATE BINARY DESC);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY v0.c0, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7100557559933243) AND (v0.c0)), NULLIF(v0.c0, v0.c0) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ())) IS TRUE)) IS TRUE)  as count FROM v0 ORDER BY v0.c0, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7100557559933243) AND (v0.c0)), NULLIF(v0.c0, v0.c0) COLLATE BINARY DESC);
SELECT * FROM v0 WHERE ((((v0.c0 IN ())) IS TRUE)) ORDER BY v0.c0, ((((((v0.c0)OR(v0.c0)))AND(v0.c0))) BETWEEN (0.7100557559933243) AND (v0.c0)), NULLIF(v0.c0, v0.c0) COLLATE BINARY DESC;
SELECT ALL * FROM vt0, vt2, v0 WHERE ((- ('')) COLLATE BINARY) ORDER BY vt2.c0;
SELECT SUM(count) FROM (SELECT (((- ('')) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY vt2.c0);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((- ('')) COLLATE BINARY) ORDER BY vt2.c0;
SELECT SUM(count) FROM (SELECT (((- ('')) COLLATE BINARY) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY vt2.c0);
SELECT ALL * FROM vt0, vt2, v0 WHERE ((- ('')) COLLATE BINARY) ORDER BY vt2.c0;
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt2 ON ((CAST(vt0.c0 AS REAL))>(vt0.c0 COLLATE RTRIM)) WHERE ((((vt2.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('eP	M', v0.c0, vt2.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) ORDER BY (((((v0.c0)OR(v0.c0)))AND(vt2.c0)) IN (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('eP	M', v0.c0, vt2.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt2 ON ((CAST(vt0.c0 AS REAL))>(vt0.c0 COLLATE RTRIM)) ORDER BY (((((v0.c0)OR(v0.c0)))AND(vt2.c0)) IN (vt0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt2 ON ((CAST(vt0.c0 AS REAL))>(vt0.c0 COLLATE RTRIM)) WHERE ((((vt2.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('eP	M', v0.c0, vt2.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) ORDER BY (((((v0.c0)OR(v0.c0)))AND(vt2.c0)) IN (vt0.c0 COLLATE BINARY)) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('eP	M', v0.c0, vt2.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) IS TRUE)  as count FROM vt0, v0 INNER JOIN vt2 ON ((CAST(vt0.c0 AS REAL))>(vt0.c0 COLLATE RTRIM)) ORDER BY (((((v0.c0)OR(v0.c0)))AND(vt2.c0)) IN (vt0.c0 COLLATE BINARY)) ASC);
SELECT COUNT(*) FROM vt0, v0 INNER JOIN vt2 ON ((CAST(vt0.c0 AS REAL))>(vt0.c0 COLLATE RTRIM)) WHERE ((((vt2.c0)) BETWEEN ((((vt0.c0) BETWEEN (v0.c0) AND (x'')))) AND (((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN (('eP	M', v0.c0, vt2.c0)) AND ((v0.c0, v0.c0, v0.c0))))))) ORDER BY (((((v0.c0)OR(v0.c0)))AND(vt2.c0)) IN (vt0.c0 COLLATE BINARY)) ASC;
SELECT * FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE)>(((vt2.c0) IS TRUE)))) ORDER BY (((((vt2.c0)IS NOT(vt2.c0))))<=(((~ (vt2.c0))))) DESC  NULLS FIRST, (((0.18544672127711426)) BETWEEN ((((-1.625221999E9)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0 COLLATE NOCASE)>(((vt2.c0) IS TRUE)))) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.c0)IS NOT(vt2.c0))))<=(((~ (vt2.c0))))) DESC  NULLS FIRST, (((0.18544672127711426)) BETWEEN ((((-1.625221999E9)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))  NULLS LAST, NULL ASC  NULLS FIRST);
SELECT * FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE)>(((vt2.c0) IS TRUE)))) ORDER BY (((((vt2.c0)IS NOT(vt2.c0))))<=(((~ (vt2.c0))))) DESC  NULLS FIRST, (((0.18544672127711426)) BETWEEN ((((-1.625221999E9)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0 COLLATE NOCASE)>(((vt2.c0) IS TRUE)))) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.c0)IS NOT(vt2.c0))))<=(((~ (vt2.c0))))) DESC  NULLS FIRST, (((0.18544672127711426)) BETWEEN ((((-1.625221999E9)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))  NULLS LAST, NULL ASC  NULLS FIRST);
SELECT * FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE)>(((vt2.c0) IS TRUE)))) ORDER BY (((((vt2.c0)IS NOT(vt2.c0))))<=(((~ (vt2.c0))))) DESC  NULLS FIRST, (((0.18544672127711426)) BETWEEN ((((-1.625221999E9)>=(vt2.c0)))) AND ((vt2.c0 COLLATE NOCASE)))  NULLS LAST, NULL ASC  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS NUMERIC)) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS NUMERIC));
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((NULL)) AND ((CAST(v0.c0 AS NUMERIC))))) ORDER BY (v0.c0 IN (v0.c0, v0.c0, v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((NULL)) AND ((CAST(v0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (v0.c0, v0.c0, v0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((NULL)) AND ((CAST(v0.c0 AS NUMERIC))))) ORDER BY (v0.c0 IN (v0.c0, v0.c0, v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((NULL)) AND ((CAST(v0.c0 AS NUMERIC))))) IS TRUE)  as count FROM v0 ORDER BY (v0.c0 IN (v0.c0, v0.c0, v0.c0)) COLLATE BINARY ASC  NULLS FIRST);
SELECT ALL * FROM v0 WHERE ((((v0.c0)) BETWEEN ((NULL)) AND ((CAST(v0.c0 AS NUMERIC))))) ORDER BY (v0.c0 IN (v0.c0, v0.c0, v0.c0)) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM v0 WHERE ((- (((v0.c0)<<(''))))) ORDER BY ((v0.c0) IS TRUE) ASC, '65949835', CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffa205302d)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)<<(''))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) ASC, '65949835', CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (0xffffffffa205302d)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((- (((v0.c0)<<(''))))) ORDER BY ((v0.c0) IS TRUE) ASC, '65949835', CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffa205302d)) AS TEXT) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- (((v0.c0)<<(''))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) IS TRUE) ASC, '65949835', CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (0xffffffffa205302d)) AS TEXT) DESC  NULLS LAST);
SELECT * FROM v0 WHERE ((- (((v0.c0)<<(''))))) ORDER BY ((v0.c0) IS TRUE) ASC, '65949835', CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (0Xffffffffa205302d)) AS TEXT) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (((v0.c0)GLOB((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (((v0.c0)GLOB((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)GLOB((NOT (vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (((v0.c0)GLOB((NOT (vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (((SQLITE_VERSION())%(((v0.c0) IS FALSE)))) ORDER BY '0.4296508103085064' ASC  NULLS FIRST, TYPEOF(DISTINCT ABS(0Xffffffffacde5020)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())%(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt2, v0 ORDER BY '0.4296508103085064' ASC  NULLS FIRST, TYPEOF(DISTINCT ABS(0Xffffffffacde5020)) ASC);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (((SQLITE_VERSION())%(((v0.c0) IS FALSE)))) ORDER BY '0.4296508103085064' ASC  NULLS FIRST, TYPEOF(DISTINCT ABS(0Xffffffffacde5020)) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((SQLITE_VERSION())%(((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt2, v0 ORDER BY '0.4296508103085064' ASC  NULLS FIRST, TYPEOF(DISTINCT ABS(0Xffffffffacde5020)) ASC);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (((SQLITE_VERSION())%(((v0.c0) IS FALSE)))) ORDER BY '0.4296508103085064' ASC  NULLS FIRST, TYPEOF(DISTINCT ABS(0Xffffffffacde5020)) ASC;
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((+ (v0.c0)))OR(LOWER(vt2.c0))))AND((vt0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c0)))OR(LOWER(vt2.c0))))AND((vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((+ (v0.c0)))OR(LOWER(vt2.c0))))AND((vt0.c0 IN (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((+ (v0.c0)))OR(LOWER(vt2.c0))))AND((vt0.c0 IN (v0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((+ (v0.c0)))OR(LOWER(vt2.c0))))AND((vt0.c0 IN (v0.c0)))));
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL)) ORDER BY x'' DESC, 0x7c4ff7aa  NULLS LAST, ((((v0.c0)&(v0.c0)))+((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC, 0X7c4ff7aa  NULLS LAST, ((((v0.c0)&(v0.c0)))+((~ (v0.c0))))  NULLS FIRST);
SELECT * FROM v0 WHERE (((((v0.c0) NOTNULL)) NOTNULL)) ORDER BY x'' DESC, 0x7c4ff7aa  NULLS LAST, ((((v0.c0)&(v0.c0)))+((~ (v0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) NOTNULL)) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY x'' DESC, 0X7c4ff7aa  NULLS LAST, ((((v0.c0)&(v0.c0)))+((~ (v0.c0))))  NULLS FIRST);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0);
SELECT * FROM v0 WHERE ((- ((- (v0.c0))))) ORDER BY ((((v0.c0)|(v0.c0)))>(((v0.c0)==('0.5268722088179494')))) ASC, (((v0.c0)IS NOT(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)|(v0.c0)))>(((v0.c0)==('0.5268722088179494')))) ASC, (((v0.c0)IS NOT(v0.c0)) IN ())  NULLS FIRST);
SELECT * FROM v0 WHERE ((- ((- (v0.c0))))) ORDER BY ((((v0.c0)|(v0.c0)))>(((v0.c0)==('0.5268722088179494')))) ASC, (((v0.c0)IS NOT(v0.c0)) IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- ((- (v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((((v0.c0)|(v0.c0)))>(((v0.c0)==('0.5268722088179494')))) ASC, (((v0.c0)IS NOT(v0.c0)) IN ())  NULLS FIRST);
SELECT * FROM v0 WHERE ((- ((- (v0.c0))))) ORDER BY ((((v0.c0)|(v0.c0)))>(((v0.c0)==('0.5268722088179494')))) ASC, (((v0.c0)IS NOT(v0.c0)) IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((NOT ((- (vt0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((NOT ((- (vt0.c0)))));
SELECT ALL * FROM v0, vt0, vt2 WHERE (CAST(CAST(vt2.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt2.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE (CAST(CAST(vt2.c0 AS INTEGER) AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt2.c0 AS INTEGER) AS BLOB)) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0, vt0, vt2 WHERE (CAST(CAST(vt2.c0 AS INTEGER) AS BLOB));
SELECT COUNT(*) FROM vt2, vt0 WHERE ((((((vt0.c0)<<(vt0.c0))))<((NULLIF(vt0.c0, x'b1cb'))))) ORDER BY CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<<(vt0.c0))))<((NULLIF(vt0.c0, x'b1cb'))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0 WHERE ((((((vt0.c0)<<(vt0.c0))))<((NULLIF(vt0.c0, x'b1cb'))))) ORDER BY CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)<<(vt0.c0))))<((NULLIF(vt0.c0, x'b1cb'))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END AS NUMERIC) DESC  NULLS LAST);
SELECT COUNT(*) FROM vt2, vt0 WHERE ((((((vt0.c0)<<(vt0.c0))))<((NULLIF(vt0.c0, x'b1cb'))))) ORDER BY CAST(CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END AS NUMERIC) DESC  NULLS LAST;
SELECT ALL * FROM v0, vt2 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)>(vt2.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((vt2.c0 COLLATE BINARY) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT BETWEEN (((v0.c0)>(vt2.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt2 ORDER BY ((vt2.c0 COLLATE BINARY) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)>(vt2.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((vt2.c0 COLLATE BINARY) NOT NULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((+ (v0.c0))) NOT BETWEEN (((v0.c0)>(vt2.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) IS TRUE)  as count FROM v0, vt2 ORDER BY ((vt2.c0 COLLATE BINARY) NOT NULL) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt2 WHERE ((((+ (v0.c0))) NOT BETWEEN (((v0.c0)>(vt2.c0))) AND ((((v0.c0)) BETWEEN ((v0.c0)) AND ((v0.c0)))))) ORDER BY ((vt2.c0 COLLATE BINARY) NOT NULL) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))||((vt0.c0 IN (vt0.c0)))) WHERE (vt2.c0) ORDER BY vt2.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))||((vt0.c0 IN (vt0.c0)))) ORDER BY vt2.c0 ASC);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))||((vt0.c0 IN (vt0.c0)))) WHERE (vt2.c0) ORDER BY vt2.c0 ASC;
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))||((vt0.c0 IN (vt0.c0)))) ORDER BY vt2.c0 ASC);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON ((((vt0.c0)AND(vt0.c0)))||((vt0.c0 IN (vt0.c0)))) WHERE (vt2.c0) ORDER BY vt2.c0 ASC;
SELECT ALL * FROM vt2, v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE)) ORDER BY (~ (((vt2.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt2, v0 ORDER BY (~ (((vt2.c0) NOTNULL))) ASC);
SELECT ALL * FROM vt2, v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE)) ORDER BY (~ (((vt2.c0) NOTNULL))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0 COLLATE BINARY) IS FALSE)) IS TRUE)  as count FROM vt2, v0 ORDER BY (~ (((vt2.c0) NOTNULL))) ASC);
SELECT ALL * FROM vt2, v0 WHERE (((v0.c0 COLLATE BINARY) IS FALSE)) ORDER BY (~ (((vt2.c0) NOTNULL))) ASC;
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)LIKE(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.05608227443546865, ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)>=('ãµ¡lrf{')), ((v0.c0)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.05608227443546865, ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)>=('ãµ¡lrf{')), ((v0.c0)!=(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)LIKE(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.05608227443546865, ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)>=('ãµ¡lrf{')), ((v0.c0)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(((v0.c0)LIKE(vt0.c0)) AS TEXT)) IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.05608227443546865, ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)>=('ãµ¡lrf{')), ((v0.c0)!=(vt0.c0))))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0, v0 WHERE (CAST(((v0.c0)LIKE(vt0.c0)) AS TEXT)) ORDER BY (((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), 0.05608227443546865, ((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))) AND (((+ (v0.c0)), ((v0.c0)>=('ãµ¡lrf{')), ((v0.c0)<>(vt0.c0))))) DESC  NULLS FIRST;
SELECT * FROM vt0, v0, vt2 WHERE (((vt2.c0 COLLATE BINARY)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE BINARY)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE (((vt2.c0 COLLATE BINARY)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END)));
SELECT SUM(count) FROM (SELECT ((((vt2.c0 COLLATE BINARY)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE (((vt2.c0 COLLATE BINARY)||(CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt2.c0 END)));
SELECT ALL * FROM vt2, vt0 WHERE (((((((((vt2.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt2.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE (((((((((vt2.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt2.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE (((((((((vt2.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE);
SELECT ALL * FROM vt2, vt0 WHERE (CAST(vt2.c0 COLLATE NOCASE AS REAL)) ORDER BY '-115714293' DESC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))OR(vt0.c0)))>(((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY '-115714293' DESC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))OR(vt0.c0)))>(((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM vt2, vt0 WHERE (CAST(vt2.c0 COLLATE NOCASE AS REAL)) ORDER BY '-115714293' DESC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))OR(vt0.c0)))>(((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ((CAST(vt2.c0 COLLATE NOCASE AS REAL)) IS TRUE)  as count FROM vt2, vt0 ORDER BY '-115714293' DESC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))OR(vt0.c0)))>(((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)))) ASC);
SELECT ALL * FROM vt2, vt0 WHERE (CAST(vt2.c0 COLLATE NOCASE AS REAL)) ORDER BY '-115714293' DESC  NULLS LAST, ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt2.c0)))OR(vt0.c0)))>(((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ((~ (NULL))) ORDER BY CASE WHEN ((vt2.c0)IS NOT(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY CASE WHEN ((vt2.c0)IS NOT(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) IS FALSE) END);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ((~ (NULL))) ORDER BY CASE WHEN ((vt2.c0)IS NOT(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) IS FALSE) END;
SELECT SUM(count) FROM (SELECT ALL (((~ (NULL))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY CASE WHEN ((vt2.c0)IS NOT(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) IS FALSE) END);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ((~ (NULL))) ORDER BY CASE WHEN ((vt2.c0)IS NOT(v0.c0)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c0) IS FALSE) END;
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(vt2.c0))))) ORDER BY ((((v0.c0) IS FALSE))IS(CAST(vt2.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((v0.c0) IS FALSE))IS(CAST(vt2.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(vt2.c0))))) ORDER BY ((((v0.c0) IS FALSE))IS(CAST(vt2.c0 AS TEXT))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(vt2.c0))))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((v0.c0) IS FALSE))IS(CAST(vt2.c0 AS TEXT))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((v0.c0)IS NOT(vt0.c0))) AND (((((v0.c0)OR(vt0.c0)))OR(vt2.c0))))) ORDER BY ((((v0.c0) IS FALSE))IS(CAST(vt2.c0 AS TEXT))) ASC  NULLS LAST;
SELECT ALL * FROM vt2, v0 WHERE (CASE (~ (vt2.c0))  WHEN (((v0.c0))>((v0.c0))) THEN (v0.c0 IN (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt2.c0))  WHEN (((v0.c0))>((v0.c0))) THEN (v0.c0 IN (vt2.c0)) END) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (CASE (~ (vt2.c0))  WHEN (((v0.c0))>((v0.c0))) THEN (v0.c0 IN (vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (~ (vt2.c0))  WHEN (((v0.c0))>((v0.c0))) THEN (v0.c0 IN (vt2.c0)) END) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (CASE (~ (vt2.c0))  WHEN (((v0.c0))>((v0.c0))) THEN (v0.c0 IN (vt2.c0)) END);
SELECT ALL * FROM vt0, v0, vt2 NOT INDEXED WHERE (((((((('7{Iéµ§9t*')) BETWEEN ((vt2.c0)) AND ((v0.c0))))OR(json(v0.c0))))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((('7{Iéµ§9t*')) BETWEEN ((vt2.c0)) AND ((v0.c0))))OR(json(v0.c0))))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 NOT INDEXED WHERE (((((((('7{Iéµ§9t*')) BETWEEN ((vt2.c0)) AND ((v0.c0))))OR(json(v0.c0))))AND(((v0.c0) IS TRUE))));
SELECT SUM(count) FROM (SELECT ((((((((('7{Iéµ§9t*')) BETWEEN ((vt2.c0)) AND ((v0.c0))))OR(json(v0.c0))))AND(((v0.c0) IS TRUE)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 NOT INDEXED WHERE (((((((('7{Iéµ§9t*')) BETWEEN ((vt2.c0)) AND ((v0.c0))))OR(json(v0.c0))))AND(((v0.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((((vt2.c0) IS FALSE))>=(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) IS FALSE))>=(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((((vt2.c0) IS FALSE))>=(((vt0.c0)/(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0) IS FALSE))>=(((vt0.c0)/(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((((vt2.c0) IS FALSE))>=(((vt0.c0)/(vt0.c0)))));
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT COUNT(*) FROM vt2 WHERE ((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) IN ())) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) IN ())) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE ((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) IN ()));
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0))>(('Jé£#[]3D')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0))>(('Jé£#[]3D')))))  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0))>(('Jé£#[]3D')))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (CASE WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0))>(('Jé£#[]3D')))))  NULLS LAST);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY (CASE WHEN v0.c0 THEN v0.c0 END IN ((((v0.c0))>(('Jé£#[]3D')))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0))==((vt2.c0))))AND(vt2.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) CROSS JOIN vt2 ON vt0.c0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY (((((vt2.c0))<=((NULL))))-(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((v0.c0, v0.c0, v0.c0)) BETWEEN (((NOT (v0.c0)), (((v0.c0, 1222353859, vt0.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, v0.c0)) AND ((vt2.c0, v0.c0, v0.c0))), CAST(vt0.c0 AS BLOB))) AND ((LIKE(vt2.c0, v0.c0, ','), RTRIM(vt0.c0), ((v0.c0)OR(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0))==((vt2.c0))))AND(vt2.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) CROSS JOIN vt2 ON vt0.c0 ORDER BY (((((vt2.c0))<=((NULL))))-(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((v0.c0, v0.c0, v0.c0)) BETWEEN (((NOT (v0.c0)), (((v0.c0, 1222353859, vt0.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, v0.c0)) AND ((vt2.c0, v0.c0, v0.c0))), CAST(vt0.c0 AS BLOB))) AND ((LIKE(vt2.c0, v0.c0, ','), RTRIM(vt0.c0), ((v0.c0)OR(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0))==((vt2.c0))))AND(vt2.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) CROSS JOIN vt2 ON vt0.c0 WHERE (CAST(NULL AS NUMERIC)) ORDER BY (((((vt2.c0))<=((NULL))))-(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((v0.c0, v0.c0, v0.c0)) BETWEEN (((NOT (v0.c0)), (((v0.c0, 1222353859, vt0.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, v0.c0)) AND ((vt2.c0, v0.c0, v0.c0))), CAST(vt0.c0 AS BLOB))) AND ((LIKE(vt2.c0, v0.c0, ','), RTRIM(vt0.c0), ((v0.c0)OR(v0.c0))))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(NULL AS NUMERIC)) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN v0 ON (((((((v0.c0))==((vt2.c0))))AND(vt2.c0 COLLATE RTRIM)))AND(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))) CROSS JOIN vt2 ON vt0.c0 ORDER BY (((((vt2.c0))<=((NULL))))-(((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC  NULLS FIRST, (((v0.c0, v0.c0, v0.c0)) BETWEEN (((NOT (v0.c0)), (((v0.c0, 1222353859, vt0.c0)) NOT BETWEEN ((vt2.c0, vt0.c0, v0.c0)) AND ((vt2.c0, v0.c0, v0.c0))), CAST(vt0.c0 AS BLOB))) AND ((LIKE(vt2.c0, v0.c0, ','), RTRIM(vt0.c0), ((v0.c0)OR(v0.c0))))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) BETWEEN (0.24974436591678018) AND (v0.c0)))))OR((NULL IN (NULL, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) BETWEEN (0.24974436591678018) AND (v0.c0)))))OR((NULL IN (NULL, v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) BETWEEN (0.24974436591678018) AND (v0.c0)))))OR((NULL IN (NULL, v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN ()) COLLATE BINARY) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) BETWEEN (0.24974436591678018) AND (v0.c0)))))OR((NULL IN (NULL, v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((vt0.c0 IN ()) COLLATE BINARY) ORDER BY (((((v0.c0 IN ()))OR(((v0.c0) BETWEEN (0.24974436591678018) AND (v0.c0)))))OR((NULL IN (NULL, v0.c0))));
SELECT ALL * FROM vt2 WHERE (((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(-518552298))) NOT NULL)) ORDER BY ((((('Z6D8æ³¹', vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (LOWER(DISTINCT vt2.c0)) AND ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))) ASC, '980660356'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(-518552298))) NOT NULL)) IS TRUE)  as count FROM vt2 ORDER BY ((((('Z6D8æ³¹', vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (LOWER(DISTINCT vt2.c0)) AND ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))) ASC, '980660356'  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(-518552298))) NOT NULL)) ORDER BY ((((('Z6D8æ³¹', vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (LOWER(DISTINCT vt2.c0)) AND ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))) ASC, '980660356'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(-518552298))) NOT NULL)) IS TRUE)  as count FROM vt2 ORDER BY ((((('Z6D8æ³¹', vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (LOWER(DISTINCT vt2.c0)) AND ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))) ASC, '980660356'  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (((((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))OR(vt2.c0)))OR(-518552298))) NOT NULL)) ORDER BY ((((('Z6D8æ³¹', vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0)))) BETWEEN (LOWER(DISTINCT vt2.c0)) AND ((((vt2.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, vt2.c0, vt2.c0))))) ASC, '980660356'  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE ((((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))) BETWEEN (UNLIKELY(v0.c0)) AND (((vt2.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))) BETWEEN (UNLIKELY(v0.c0)) AND (((vt2.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE ((((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))) BETWEEN (UNLIKELY(v0.c0)) AND (((vt2.c0)&(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))) BETWEEN (UNLIKELY(v0.c0)) AND (((vt2.c0)&(vt0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE ((((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0)))) BETWEEN (UNLIKELY(v0.c0)) AND (((vt2.c0)&(vt0.c0)))));
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))*(((vt2.c0)+(vt2.c0))))) ORDER BY UNLIKELY(((vt2.c0) ISNULL))  NULLS LAST, vt2.c0;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))*(((vt2.c0)+(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY UNLIKELY(((vt2.c0) ISNULL))  NULLS LAST, vt2.c0);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))*(((vt2.c0)+(vt2.c0))))) ORDER BY UNLIKELY(((vt2.c0) ISNULL))  NULLS LAST, vt2.c0;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))*(((vt2.c0)+(vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY UNLIKELY(((vt2.c0) ISNULL))  NULLS LAST, vt2.c0);
SELECT COUNT(*) FROM vt2 WHERE (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))*(((vt2.c0)+(vt2.c0))))) ORDER BY UNLIKELY(((vt2.c0) ISNULL))  NULLS LAST, vt2.c0;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)*(vt0.c0))))) ORDER BY ((PRINTF(vt0.c0))/(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((PRINTF(vt0.c0))/(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)*(vt0.c0))))) ORDER BY ((PRINTF(vt0.c0))/(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)*(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY ((PRINTF(vt0.c0))/(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOTNULL))OR(((vt0.c0) NOTNULL))))OR(((vt0.c0)*(vt0.c0))))) ORDER BY ((PRINTF(vt0.c0))/(vt0.c0))  NULLS LAST;
SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))AND(((v0.c0) IS FALSE))))AND(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))>=((vt0.c0))))AND(((v0.c0) IS FALSE))))AND(((NULL) IS FALSE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))AND(((v0.c0) IS FALSE))))AND(((NULL) IS FALSE))));
SELECT SUM(count) FROM (SELECT (((((((((vt0.c0))>=((vt0.c0))))AND(((v0.c0) IS FALSE))))AND(((NULL) IS FALSE)))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE ((((((((vt0.c0))>=((vt0.c0))))AND(((v0.c0) IS FALSE))))AND(((NULL) IS FALSE))));
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0 IN (vt0.c0)))<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE ((((vt0.c0 IN (vt0.c0)))<=(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((vt2.c0))<=((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0))<=((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((vt2.c0))<=((((v0.c0) IS FALSE)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0))<=((((v0.c0) IS FALSE))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((vt2.c0))<=((((v0.c0) IS FALSE)))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC)) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(CAST(vt0.c0 AS BLOB) AS NUMERIC));
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt2 ON (((((((((v0.c0 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN vt2.c0 THEN NULL ELSE vt2.c0 END)))OR((('-2087900082') NOT NULL))))OR(0X79f02c87)) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.13773438307889063 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((vt0.c0) IS FALSE))))) ORDER BY ((CAST(NULL AS REAL)) IS FALSE), CAST(vt2.c0 AS REAL), (((~ (vt2.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.13773438307889063 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt2 ON (((((((((v0.c0 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN vt2.c0 THEN NULL ELSE vt2.c0 END)))OR((('-2087900082') NOT NULL))))OR(0X79f02c87)) ORDER BY ((CAST(NULL AS REAL)) IS FALSE), CAST(vt2.c0 AS REAL), (((~ (vt2.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt2 ON (((((((((v0.c0 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN vt2.c0 THEN NULL ELSE vt2.c0 END)))OR((('-2087900082') NOT NULL))))OR(0X79f02c87)) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.13773438307889063 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((vt0.c0) IS FALSE))))) ORDER BY ((CAST(NULL AS REAL)) IS FALSE), CAST(vt2.c0 AS REAL), (((~ (vt2.c0))) NOTNULL) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.13773438307889063 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((vt0.c0) IS FALSE))))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt2 ON (((((((((v0.c0 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN vt2.c0 THEN NULL ELSE vt2.c0 END)))OR((('-2087900082') NOT NULL))))OR(0X79f02c87)) ORDER BY ((CAST(NULL AS REAL)) IS FALSE), CAST(vt2.c0 AS REAL), (((~ (vt2.c0))) NOTNULL) ASC);
SELECT COUNT(*) FROM v0, vt0 LEFT OUTER JOIN vt2 ON (((((((((v0.c0 IN ()))AND(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN vt2.c0 THEN NULL ELSE vt2.c0 END)))OR((('-2087900082') NOT NULL))))OR(0X79f02c87)) WHERE ((((vt0.c0)) BETWEEN ((CASE WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN 0.13773438307889063 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)) AND ((((vt0.c0) IS FALSE))))) ORDER BY ((CAST(NULL AS REAL)) IS FALSE), CAST(vt2.c0 AS REAL), (((~ (vt2.c0))) NOTNULL) ASC;
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))<=(((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))<=(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))<=(((v0.c0)|(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))<=(((v0.c0)|(v0.c0))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0 NOT INDEXED, vt0 WHERE (((((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))<=(((v0.c0)|(v0.c0)))));
SELECT * FROM vt2, v0, vt0 WHERE (((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)))|((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)))|((NOT (vt0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT * FROM vt2, v0, vt0 WHERE (((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)))|((NOT (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)))|((NOT (vt0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT * FROM vt2, v0, vt0 WHERE (((((((vt2.c0)OR(vt0.c0)))OR(vt2.c0)))|((NOT (vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS TEXT)));
SELECT SUM(count) FROM (SELECT ALL ((STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS TEXT))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (STRFTIME(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), CASE WHEN vt0.c0 THEN vt0.c0 END, CAST(vt0.c0 AS TEXT)));
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON ((((LAST_INSERT_ROWID())OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0)|(vt2.c0)))) FULL OUTER JOIN v0 ON CASE ((vt0.c0)<(vt2.c0))  WHEN ((((1754002806)OR(vt0.c0)))OR(vt2.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((NULL) IS FALSE) END WHERE (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt2.c0))) IN ())) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((((LAST_INSERT_ROWID())OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0)|(vt2.c0)))) FULL OUTER JOIN v0 ON CASE ((vt0.c0)<(vt2.c0))  WHEN ((((1754002806)OR(vt0.c0)))OR(vt2.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((NULL) IS FALSE) END);
SELECT * FROM vt2 FULL OUTER JOIN vt0 ON ((((LAST_INSERT_ROWID())OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0)|(vt2.c0)))) FULL OUTER JOIN v0 ON CASE ((vt0.c0)<(vt2.c0))  WHEN ((((1754002806)OR(vt0.c0)))OR(vt2.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((NULL) IS FALSE) END WHERE (((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt2.c0, v0.c0)) AND ((vt0.c0, v0.c0, vt2.c0))) IN ())) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON ((((LAST_INSERT_ROWID())OR(CAST(v0.c0 AS TEXT))))OR(((vt0.c0)|(vt2.c0)))) FULL OUTER JOIN v0 ON CASE ((vt0.c0)<(vt2.c0))  WHEN ((((1754002806)OR(vt0.c0)))OR(vt2.c0)) THEN ((vt0.c0) IS TRUE) ELSE ((NULL) IS FALSE) END);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS NUMERIC))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((NOT ((vt2.c0 IN ())))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (NOT ((- (vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt2.c0 IN ())))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (NOT ((- (vt2.c0)))) DESC);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((NOT ((vt2.c0 IN ())))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (NOT ((- (vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((NOT ((vt2.c0 IN ())))) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (NOT ((- (vt2.c0)))) DESC);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((NOT ((vt2.c0 IN ())))) ORDER BY x'' COLLATE RTRIM DESC  NULLS LAST, (NOT ((- (vt2.c0)))) DESC;
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON -1.794798927E9 WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt2 ON -1.794798927E9);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON -1.794798927E9 WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT SUM(count) FROM (SELECT (((NOT (CAST(v0.c0 AS TEXT)))) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt2 ON -1.794798927E9);
SELECT COUNT(*) FROM v0 LEFT OUTER JOIN vt2 ON -1.794798927E9 WHERE ((NOT (CAST(v0.c0 AS TEXT))));
SELECT * FROM vt0 WHERE ((((((NULL))>=((vt0.c0)))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((NULL))>=((vt0.c0)))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL))>=((vt0.c0)))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (((((((NULL))>=((vt0.c0)))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NULL))>=((vt0.c0)))) BETWEEN (TRIM(DISTINCT vt0.c0)) AND (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt2 WHERE ((((vt2.c0 IN (vt2.c0, vt2.c0)))/('EH'))) ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN (vt2.c0, vt2.c0)))/('EH'))) IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt2 WHERE ((((vt2.c0 IN (vt2.c0, vt2.c0)))/('EH'))) ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt2.c0 IN (vt2.c0, vt2.c0)))/('EH'))) IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST);
SELECT * FROM vt2 WHERE ((((vt2.c0 IN (vt2.c0, vt2.c0)))/('EH'))) ORDER BY (((vt2.c0 IN ())) NOTNULL) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((vt0.c0)IS(vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((vt0.c0)IS(vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)IS(vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((vt0.c0)IS(vt2.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((((vt0.c0, NULL, vt2.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((0Xffffffff85cc566e, vt0.c0, v0.c0))) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)))OR(0.05608227443546865)))OR(v0.c0))))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(x'f9ce')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, NULL, vt2.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((0Xffffffff85cc566e, vt0.c0, v0.c0))) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)))OR(0.05608227443546865)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(x'f9ce')) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((((vt0.c0, NULL, vt2.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((0Xffffffff85cc566e, vt0.c0, v0.c0))) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)))OR(0.05608227443546865)))OR(v0.c0))))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(x'f9ce')) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0, NULL, vt2.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((0Xffffffff85cc566e, vt0.c0, v0.c0))) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)))OR(0.05608227443546865)))OR(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(x'f9ce')) IN ()) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((((vt0.c0, NULL, vt2.c0)) BETWEEN ((vt0.c0, vt0.c0, NULL)) AND ((0Xffffffff85cc566e, vt0.c0, v0.c0))) IN (((((((((vt0.c0)OR(vt0.c0)))OR(vt2.c0)))OR(0.05608227443546865)))OR(v0.c0))))) ORDER BY (((((((((vt0.c0)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(x'f9ce')) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (((v0.c0)||(vt0.c0))) AND (ABS(DISTINCT v0.c0))) WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (((v0.c0)||(vt0.c0))) AND (ABS(DISTINCT v0.c0))) ORDER BY vt0.c0 COLLATE BINARY);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (((v0.c0)||(vt0.c0))) AND (ABS(DISTINCT v0.c0))) WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY vt0.c0 COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (((v0.c0)||(vt0.c0))) AND (ABS(DISTINCT v0.c0))) ORDER BY vt0.c0 COLLATE BINARY);
SELECT * FROM vt0 LEFT OUTER JOIN v0 ON (((+ (v0.c0))) BETWEEN (((v0.c0)||(vt0.c0))) AND (ABS(DISTINCT v0.c0))) WHERE ((NOT ((vt0.c0 IN (vt0.c0, vt0.c0))))) ORDER BY vt0.c0 COLLATE BINARY;
SELECT ALL * FROM vt2 WHERE (CAST(INSTR(vt2.c0, vt2.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(INSTR(vt2.c0, vt2.c0) AS TEXT)) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (CAST(INSTR(vt2.c0, vt2.c0) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(INSTR(vt2.c0, vt2.c0) AS TEXT)) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (CAST(INSTR(vt2.c0, vt2.c0) AS TEXT));
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL (((v0.c0 IN ()) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((v0.c0 IN ()) COLLATE RTRIM);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (1979012945) AND (v0.c0)))) AND (((~ (vt0.c0))))) FULL OUTER JOIN v0 ON (((INSTR(v0.c0, NULL)))<((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))))) WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(json(vt0.c0)))) ORDER BY (((LIKE(vt0.c0, vt0.c0, 'Z')))==((((vt2.c0) IS TRUE)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) AS REAL), (- (v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(json(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (1979012945) AND (v0.c0)))) AND (((~ (vt0.c0))))) FULL OUTER JOIN v0 ON (((INSTR(v0.c0, NULL)))<((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))))) ORDER BY (((LIKE(vt0.c0, vt0.c0, 'Z')))==((((vt2.c0) IS TRUE)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) AS REAL), (- (v0.c0)) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (1979012945) AND (v0.c0)))) AND (((~ (vt0.c0))))) FULL OUTER JOIN v0 ON (((INSTR(v0.c0, NULL)))<((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))))) WHERE ((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(json(vt0.c0)))) ORDER BY (((LIKE(vt0.c0, vt0.c0, 'Z')))==((((vt2.c0) IS TRUE)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) AS REAL), (- (v0.c0)) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))&(json(vt0.c0)))) IS TRUE)  as count FROM vt0 RIGHT OUTER JOIN vt2 ON (((vt2.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (1979012945) AND (v0.c0)))) AND (((~ (vt0.c0))))) FULL OUTER JOIN v0 ON (((INSTR(v0.c0, NULL)))<((((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))))) ORDER BY (((LIKE(vt0.c0, vt0.c0, 'Z')))==((((vt2.c0) IS TRUE)))) ASC  NULLS LAST, CAST((((vt0.c0)) NOT BETWEEN ((NULL)) AND ((vt0.c0))) AS REAL), (- (v0.c0)) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN v0 ON ((((vt2.c0)+(vt2.c0))) ISNULL) WHERE ((- ('-1003270208'))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC, ((((v0.c0) NOT BETWEEN (x'') AND (vt2.c0))) NOT BETWEEN (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) AND (((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CAST((-1003270208 IN (v0.c0, x'', v0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((- ('-1003270208'))) IS TRUE)  as count FROM vt2 CROSS JOIN v0 ON ((((vt2.c0)+(vt2.c0))) ISNULL) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC, ((((v0.c0) NOT BETWEEN (x'') AND (vt2.c0))) NOT BETWEEN (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) AND (((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CAST((-1003270208 IN (v0.c0, x'', v0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN v0 ON ((((vt2.c0)+(vt2.c0))) ISNULL) WHERE ((- ('-1003270208'))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC, ((((v0.c0) NOT BETWEEN (x'') AND (vt2.c0))) NOT BETWEEN (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) AND (((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CAST((-1003270208 IN (v0.c0, x'', v0.c0)) AS REAL) DESC;
SELECT SUM(count) FROM (SELECT (((- ('-1003270208'))) IS TRUE)  as count FROM vt2 CROSS JOIN v0 ON ((((vt2.c0)+(vt2.c0))) ISNULL) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC, ((((v0.c0) NOT BETWEEN (x'') AND (vt2.c0))) NOT BETWEEN (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) AND (((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CAST((-1003270208 IN (v0.c0, x'', v0.c0)) AS REAL) DESC);
SELECT ALL COUNT(*) FROM vt2 CROSS JOIN v0 ON ((((vt2.c0)+(vt2.c0))) ISNULL) WHERE ((- ('-1003270208'))) ORDER BY CAST((v0.c0 IN ()) AS NUMERIC) DESC, ((((v0.c0) NOT BETWEEN (x'') AND (vt2.c0))) NOT BETWEEN (CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) AND (((((v0.c0)AND(vt2.c0)))OR(v0.c0)))) ASC  NULLS FIRST, CAST((-1003270208 IN (v0.c0, x'', v0.c0)) AS REAL) DESC;
SELECT COUNT(*) FROM v0, vt2 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR((v0.c0 IN (vt2.c0, v0.c0)))))AND(((vt2.c0) ISNULL))) WHERE (v0.c0) ORDER BY (((vt2.c0, vt2.c0, v0.c0, vt0.c0, vt2.c0))>=((vt0.c0, vt2.c0, vt0.c0, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt2 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR((v0.c0 IN (vt2.c0, v0.c0)))))AND(((vt2.c0) ISNULL))) ORDER BY (((vt2.c0, vt2.c0, v0.c0, vt0.c0, vt2.c0))>=((vt0.c0, vt2.c0, vt0.c0, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR((v0.c0 IN (vt2.c0, v0.c0)))))AND(((vt2.c0) ISNULL))) WHERE (v0.c0) ORDER BY (((vt2.c0, vt2.c0, v0.c0, vt0.c0, vt2.c0))>=((vt0.c0, vt2.c0, vt0.c0, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0, vt2 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR((v0.c0 IN (vt2.c0, v0.c0)))))AND(((vt2.c0) ISNULL))) ORDER BY (((vt2.c0, vt2.c0, v0.c0, vt0.c0, vt2.c0))>=((vt0.c0, vt2.c0, vt0.c0, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt2 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) NOT NULL))OR((v0.c0 IN (vt2.c0, v0.c0)))))AND(((vt2.c0) ISNULL))) WHERE (v0.c0) ORDER BY (((vt2.c0, vt2.c0, v0.c0, vt0.c0, vt2.c0))>=((vt0.c0, vt2.c0, vt0.c0, v0.c0, vt0.c0))) COLLATE BINARY ASC  NULLS FIRST;
SELECT * FROM v0, vt0, vt2 WHERE (((1803811202) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((1803811202) IS FALSE)) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE (((1803811202) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((1803811202) IS FALSE)) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE (((1803811202) IS FALSE));
SELECT COUNT(*) FROM v0, vt0 WHERE ((((x'8f5c') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'8f5c') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((x'8f5c') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((x'8f5c') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE ((((x'8f5c') NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()));
SELECT * FROM vt2 WHERE (CAST(vt2.c0 COLLATE BINARY AS TEXT)) ORDER BY ((vt2.c0 COLLATE BINARY)<(((vt2.c0)|(vt2.c0)))) DESC, (((vt2.c0)) BETWEEN ((CASE WHEN '-1643457764' THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN 0.23539997445152516 THEN vt2.c0 ELSE vt2.c0 END)) AND (((vt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0 COLLATE BINARY)<(((vt2.c0)|(vt2.c0)))) DESC, (((vt2.c0)) BETWEEN ((CASE WHEN '-1643457764' THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN 0.23539997445152516 THEN vt2.c0 ELSE vt2.c0 END)) AND (((vt2.c0 IN ())))));
SELECT * FROM vt2 WHERE (CAST(vt2.c0 COLLATE BINARY AS TEXT)) ORDER BY ((vt2.c0 COLLATE BINARY)<(((vt2.c0)|(vt2.c0)))) DESC, (((vt2.c0)) BETWEEN ((CASE WHEN '-1643457764' THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN 0.23539997445152516 THEN vt2.c0 ELSE vt2.c0 END)) AND (((vt2.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt2.c0 COLLATE BINARY AS TEXT)) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0 COLLATE BINARY)<(((vt2.c0)|(vt2.c0)))) DESC, (((vt2.c0)) BETWEEN ((CASE WHEN '-1643457764' THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN 0.23539997445152516 THEN vt2.c0 ELSE vt2.c0 END)) AND (((vt2.c0 IN ())))));
SELECT * FROM vt2 WHERE (CAST(vt2.c0 COLLATE BINARY AS TEXT)) ORDER BY ((vt2.c0 COLLATE BINARY)<(((vt2.c0)|(vt2.c0)))) DESC, (((vt2.c0)) BETWEEN ((CASE WHEN '-1643457764' THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN 0.23539997445152516 THEN vt2.c0 ELSE vt2.c0 END)) AND (((vt2.c0 IN ()))));
SELECT COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))) ORDER BY (((((x'5d81')OR(v0.c0)))AND(v0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((x'5d81')OR(v0.c0)))AND(v0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))) ORDER BY (((((x'5d81')OR(v0.c0)))AND(v0.c0)) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((- ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY (((((x'5d81')OR(v0.c0)))AND(v0.c0)) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, v0 WHERE ((- ((((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((v0.c0, v0.c0, vt0.c0)))))) ORDER BY (((((x'5d81')OR(v0.c0)))AND(v0.c0)) IN ()) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY (((((v0.c0)AND(v0.c0)))OR('-2034746374')) IN ()) ASC  NULLS FIRST, '-1794798927'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((((v0.c0)AND(v0.c0)))OR('-2034746374')) IN ()) ASC  NULLS FIRST, '-1794798927'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY (((((v0.c0)AND(v0.c0)))OR('-2034746374')) IN ()) ASC  NULLS FIRST, '-1794798927'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((((v0.c0)AND(v0.c0)))OR('-2034746374')) IN ()) ASC  NULLS FIRST, '-1794798927'  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (v0.c0 COLLATE NOCASE) ORDER BY (((((v0.c0)AND(v0.c0)))OR('-2034746374')) IN ()) ASC  NULLS FIRST, '-1794798927'  NULLS FIRST;
SELECT COUNT(*) FROM v0, vt2 WHERE ((((((((0.159729151707527))<((vt2.c0))))OR((NOT (v0.c0)))))OR(((v0.c0)>=(x''))))) ORDER BY (((((v0.c0)IS NOT(v0.c0))))<>((((((((((((((x'')AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR('686570295')))OR(vt2.c0)))AND(vt2.c0))))) ASC  NULLS LAST, CASE x''  WHEN ((v0.c0)>(v0.c0)) THEN LIKELY(DISTINCT v0.c0) WHEN (v0.c0 IN ()) THEN HEX(vt2.c0) WHEN (vt2.c0 IN (v0.c0, vt2.c0)) THEN LIKELY(DISTINCT v0.c0) ELSE ((vt2.c0)<<(vt2.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((((((0.159729151707527))<((vt2.c0))))OR((NOT (v0.c0)))))OR(((v0.c0)>=(x''))))) IS TRUE)  as count FROM v0, vt2 ORDER BY (((((v0.c0)IS NOT(v0.c0))))!=((((((((((((((x'')AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR('686570295')))OR(vt2.c0)))AND(vt2.c0))))) ASC  NULLS LAST, CASE x''  WHEN ((v0.c0)>(v0.c0)) THEN LIKELY(DISTINCT v0.c0) WHEN (v0.c0 IN ()) THEN HEX(vt2.c0) WHEN (vt2.c0 IN (v0.c0, vt2.c0)) THEN LIKELY(DISTINCT v0.c0) ELSE ((vt2.c0)<<(vt2.c0)) END ASC);
SELECT COUNT(*) FROM v0, vt2 WHERE ((((((((0.159729151707527))<((vt2.c0))))OR((NOT (v0.c0)))))OR(((v0.c0)>=(x''))))) ORDER BY (((((v0.c0)IS NOT(v0.c0))))<>((((((((((((((x'')AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR('686570295')))OR(vt2.c0)))AND(vt2.c0))))) ASC  NULLS LAST, CASE x''  WHEN ((v0.c0)>(v0.c0)) THEN LIKELY(DISTINCT v0.c0) WHEN (v0.c0 IN ()) THEN HEX(vt2.c0) WHEN (vt2.c0 IN (v0.c0, vt2.c0)) THEN LIKELY(DISTINCT v0.c0) ELSE ((vt2.c0)<<(vt2.c0)) END ASC;
SELECT SUM(count) FROM (SELECT (((((((((0.159729151707527))<((vt2.c0))))OR((NOT (v0.c0)))))OR(((v0.c0)>=(x''))))) IS TRUE)  as count FROM v0, vt2 ORDER BY (((((v0.c0)IS NOT(v0.c0))))!=((((((((((((((x'')AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR('686570295')))OR(vt2.c0)))AND(vt2.c0))))) ASC  NULLS LAST, CASE x''  WHEN ((v0.c0)>(v0.c0)) THEN LIKELY(DISTINCT v0.c0) WHEN (v0.c0 IN ()) THEN HEX(vt2.c0) WHEN (vt2.c0 IN (v0.c0, vt2.c0)) THEN LIKELY(DISTINCT v0.c0) ELSE ((vt2.c0)<<(vt2.c0)) END ASC);
SELECT COUNT(*) FROM v0, vt2 WHERE ((((((((0.159729151707527))<((vt2.c0))))OR((NOT (v0.c0)))))OR(((v0.c0)>=(x''))))) ORDER BY (((((v0.c0)IS NOT(v0.c0))))<>((((((((((((((x'')AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))OR('686570295')))OR(vt2.c0)))AND(vt2.c0))))) ASC  NULLS LAST, CASE x''  WHEN ((v0.c0)>(v0.c0)) THEN LIKELY(DISTINCT v0.c0) WHEN (v0.c0 IN ()) THEN HEX(vt2.c0) WHEN (vt2.c0 IN (v0.c0, vt2.c0)) THEN LIKELY(DISTINCT v0.c0) ELSE ((vt2.c0)<<(vt2.c0)) END ASC;
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (('-101466286' IN (vt0.c0)) IN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END, ((vt0.c0)||(0xffffffffe685435b)))) WHERE ((((vt2.c0) BETWEEN ('') AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0) BETWEEN ('') AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (('-101466286' IN (vt0.c0)) IN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END, ((vt0.c0)||(0Xffffffffe685435b)))));
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (('-101466286' IN (vt0.c0)) IN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END, ((vt0.c0)||(0xffffffffe685435b)))) WHERE ((((vt2.c0) BETWEEN ('') AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0) BETWEEN ('') AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (('-101466286' IN (vt0.c0)) IN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END, ((vt0.c0)||(0Xffffffffe685435b)))));
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (('-101466286' IN (vt0.c0)) IN (CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 END, ((vt0.c0)||(0xffffffffe685435b)))) WHERE ((((vt2.c0) BETWEEN ('') AND (vt0.c0)) IN ()));
SELECT * FROM vt2 WHERE ((((vt2.c0)) BETWEEN (((((vt2.c0, vt2.c0, vt2.c0))=((vt2.c0, vt2.c0, vt2.c0))))) AND ((CAST(vt2.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN (((((vt2.c0, vt2.c0, vt2.c0))==((vt2.c0, vt2.c0, vt2.c0))))) AND ((CAST(vt2.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((vt2.c0)) BETWEEN (((((vt2.c0, vt2.c0, vt2.c0))=((vt2.c0, vt2.c0, vt2.c0))))) AND ((CAST(vt2.c0 AS NUMERIC)))));
SELECT SUM(count) FROM (SELECT ALL (((((vt2.c0)) BETWEEN (((((vt2.c0, vt2.c0, vt2.c0))==((vt2.c0, vt2.c0, vt2.c0))))) AND ((CAST(vt2.c0 AS NUMERIC))))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((vt2.c0)) BETWEEN (((((vt2.c0, vt2.c0, vt2.c0))=((vt2.c0, vt2.c0, vt2.c0))))) AND ((CAST(vt2.c0 AS NUMERIC)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ('1340121690');
SELECT SUM(count) FROM (SELECT ALL (('1340121690') IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ('1340121690');
SELECT SUM(count) FROM (SELECT ALL (('1340121690') IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ('1340121690');
SELECT ALL * FROM v0 NATURAL JOIN vt2 WHERE (((((((v0.c0)<>(vt2.c0)))OR(vt2.c0)))AND((- (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)!=(vt2.c0)))OR(vt2.c0)))AND((- (vt2.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt2);
SELECT ALL * FROM v0 NATURAL JOIN vt2 WHERE (((((((v0.c0)<>(vt2.c0)))OR(vt2.c0)))AND((- (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)!=(vt2.c0)))OR(vt2.c0)))AND((- (vt2.c0))))) IS TRUE)  as count FROM v0 NATURAL JOIN vt2);
SELECT ALL * FROM v0 NATURAL JOIN vt2 WHERE (((((((v0.c0)<>(vt2.c0)))OR(vt2.c0)))AND((- (vt2.c0)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((((((vt2.c0)<=(v0.c0))))<((NULL)))) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE DESC, (~ (vt2.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)<=(v0.c0))))<((NULL)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE DESC, (~ (vt2.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((((((vt2.c0)<=(v0.c0))))<((NULL)))) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE DESC, (~ (vt2.c0)) COLLATE RTRIM DESC;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)<=(v0.c0))))<((NULL)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE DESC, (~ (vt2.c0)) COLLATE RTRIM DESC);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((((((vt2.c0)<=(v0.c0))))<((NULL)))) ORDER BY ((vt0.c0) NOT NULL) COLLATE NOCASE DESC, (~ (vt2.c0)) COLLATE RTRIM DESC;
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0)))  WHEN '-1797270672' THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0))) END) ORDER BY (CAST(-204913595 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0)))  WHEN '-1797270672' THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0))) END) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (CAST(-204913595 AS INTEGER) IN ()));
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0)))  WHEN '-1797270672' THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0))) END) ORDER BY (CAST(-204913595 AS INTEGER) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0)))  WHEN '-1797270672' THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0))) END) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (CAST(-204913595 AS INTEGER) IN ()));
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (CASE (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((v0.c0)))  WHEN '-1797270672' THEN (((v0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0))) END) ORDER BY (CAST(-204913595 AS INTEGER) IN ());
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((+ (HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(v0.c0)))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((+ (HEX(v0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((+ (HEX(v0.c0)))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ((+ (HEX(v0.c0))));
SELECT ALL COUNT(*) FROM vt2, v0 INNER JOIN vt0 ON TRIM(DISTINCT (((vt2.c0))<=((v0.c0)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((NULL IN ()))))) ORDER BY (((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((NULL IN ()))))) IS TRUE)  as count FROM vt2, v0 INNER JOIN vt0 ON TRIM(DISTINCT (((vt2.c0))<=((v0.c0)))) ORDER BY (((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt2, v0 INNER JOIN vt0 ON TRIM(DISTINCT (((vt2.c0))<=((v0.c0)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((NULL IN ()))))) ORDER BY (((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) IN ());
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((NULL IN ()))))) IS TRUE)  as count FROM vt2, v0 INNER JOIN vt0 ON TRIM(DISTINCT (((vt2.c0))<=((v0.c0)))) ORDER BY (((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt2, v0 INNER JOIN vt0 ON TRIM(DISTINCT (((vt2.c0))<=((v0.c0)))) WHERE ((((v0.c0)) BETWEEN ((v0.c0 COLLATE BINARY)) AND (((NULL IN ()))))) ORDER BY (((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) IN ());
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)%(vt2.c0)))) WHERE (((((TRIM(vt2.c0))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<<(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt2.c0))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<<(vt2.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)%(vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)%(vt2.c0)))) WHERE (((((TRIM(vt2.c0))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<<(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((TRIM(vt2.c0))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<<(vt2.c0))))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)%(vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON (((~ (vt0.c0))) BETWEEN (((vt0.c0) NOT NULL)) AND (((vt0.c0)%(vt2.c0)))) WHERE (((((TRIM(vt2.c0))AND(vt0.c0 COLLATE NOCASE)))AND(((vt0.c0)<<(vt2.c0)))));
SELECT ALL * FROM vt2, v0, vt0 WHERE ('93498213') ORDER BY '-1870179921'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('93498213') IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY '-1870179921'  NULLS FIRST);
SELECT ALL * FROM vt2, v0, vt0 WHERE ('93498213') ORDER BY '-1870179921'  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (('93498213') IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY '-1870179921'  NULLS FIRST);
SELECT ALL * FROM vt2, v0, vt0 WHERE ('93498213') ORDER BY '-1870179921'  NULLS FIRST;
SELECT ALL * FROM v0, vt2, vt0 WHERE (((0.06160729758775263)-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.06160729758775263)-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL * FROM v0, vt2, vt0 WHERE (((0.06160729758775263)-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.06160729758775263)-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL * FROM v0, vt2, vt0 WHERE (((0.06160729758775263)-(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((x'' IN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT (((x'' IN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((x'' IN (JULIANDAY(vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))));
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0 COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0 COLLATE RTRIM);
SELECT * FROM v0, vt2 WHERE (CAST(CASE WHEN NULL THEN vt2.c0 ELSE v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN vt2.c0 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE (CAST(CASE WHEN NULL THEN vt2.c0 ELSE v0.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE WHEN NULL THEN vt2.c0 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE (CAST(CASE WHEN NULL THEN vt2.c0 ELSE v0.c0 END AS REAL));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) ISNULL)) ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) ISNULL)) ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)||(vt0.c0))) ISNULL)) IS TRUE)  as count FROM vt0 ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0)||(vt0.c0))) ISNULL)) ORDER BY (((vt0.c0))<=((vt0.c0))) COLLATE NOCASE DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0, vt2 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT vt2.c0, 0.1448777192202445))<=(((vt2.c0) IS TRUE))) WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT vt2.c0, 0.1448777192202445))<=(((vt2.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt2 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT vt2.c0, 0.1448777192202445))<=(((vt2.c0) IS TRUE))) WHERE ((+ ((- (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((- (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT vt2.c0, 0.1448777192202445))<=(((vt2.c0) IS TRUE))));
SELECT ALL COUNT(*) FROM vt0, vt2 FULL OUTER JOIN v0 ON ((LIKELIHOOD(DISTINCT vt2.c0, 0.1448777192202445))<=(((vt2.c0) IS TRUE))) WHERE ((+ ((- (vt0.c0)))));
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((v0.c0)GLOB(vt0.c0)) IN ())) ORDER BY (~ (x'59b0')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (~ (x'59b0')) COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((v0.c0)GLOB(vt0.c0)) IN ())) ORDER BY (~ (x'59b0')) COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0)GLOB(vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (~ (x'59b0')) COLLATE BINARY DESC);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((v0.c0)GLOB(vt0.c0)) IN ())) ORDER BY (~ (x'59b0')) COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (0.31303840128796356) ORDER BY ((TRIM(DISTINCT vt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((0.31303840128796356) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((TRIM(DISTINCT vt0.c0)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (0.31303840128796356) ORDER BY ((TRIM(DISTINCT vt0.c0)) ISNULL) DESC;
SELECT SUM(count) FROM (SELECT ((0.31303840128796356) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((TRIM(DISTINCT vt0.c0)) ISNULL) DESC);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (0.31303840128796356) ORDER BY ((TRIM(DISTINCT vt0.c0)) ISNULL) DESC;
SELECT ALL * FROM v0, vt0 WHERE (CAST(0.6845802387889756 AS INTEGER)) ORDER BY ((((-2000354269) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.6845802387889756 AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((-2000354269) NOTNULL)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CAST(0.6845802387889756 AS INTEGER)) ORDER BY ((((-2000354269) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(0.6845802387889756 AS INTEGER)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((-2000354269) NOTNULL)) NOT NULL) DESC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE (CAST(0.6845802387889756 AS INTEGER)) ORDER BY ((((-2000354269) NOTNULL)) NOT NULL) DESC  NULLS LAST;
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((v0.c0, vt0.c0, vt2.c0)) BETWEEN ((NULL, ((('3-*')) BETWEEN ((vt2.c0)) AND ((v0.c0))), (((v0.c0))==((0Xfffffffff3672baf))))) AND ((vt0.c0, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt2.c0)) BETWEEN ((NULL, ((('3-*')) BETWEEN ((vt2.c0)) AND ((v0.c0))), (((v0.c0))=((0Xfffffffff3672baf))))) AND ((vt0.c0, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((v0.c0, vt0.c0, vt2.c0)) BETWEEN ((NULL, ((('3-*')) BETWEEN ((vt2.c0)) AND ((v0.c0))), (((v0.c0))==((0Xfffffffff3672baf))))) AND ((vt0.c0, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)|(vt0.c0))))));
SELECT SUM(count) FROM (SELECT (((((v0.c0, vt0.c0, vt2.c0)) BETWEEN ((NULL, ((('3-*')) BETWEEN ((vt2.c0)) AND ((v0.c0))), (((v0.c0))=((0Xfffffffff3672baf))))) AND ((vt0.c0, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)|(vt0.c0)))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE ((((v0.c0, vt0.c0, vt2.c0)) BETWEEN ((NULL, ((('3-*')) BETWEEN ((vt2.c0)) AND ((v0.c0))), (((v0.c0))==((0Xfffffffff3672baf))))) AND ((vt0.c0, CAST(vt0.c0 AS NUMERIC), ((vt0.c0)|(vt0.c0))))));
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)>=(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) ELSE SQLITE_SOURCE_ID() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>=(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)>=(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) ELSE SQLITE_SOURCE_ID() END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((v0.c0)>=(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) ELSE SQLITE_SOURCE_ID() END) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (CASE ((v0.c0)>=(v0.c0))  WHEN CAST(v0.c0 AS TEXT) THEN CAST(v0.c0 AS INTEGER) ELSE SQLITE_SOURCE_ID() END);
SELECT ALL * FROM vt0 CROSS JOIN vt2 ON (((((vt2.c0))=((v0.c0)))) NOT BETWEEN (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END) AND (QUOTE(vt0.c0))) INNER JOIN v0 ON (- (((vt0.c0) ISNULL))) WHERE (((((vt2.c0) NOT NULL)) NOT NULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON (((((vt2.c0))==((v0.c0)))) NOT BETWEEN (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END) AND (QUOTE(vt0.c0))) INNER JOIN v0 ON (- (((vt0.c0) ISNULL))) ORDER BY vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt2 ON (((((vt2.c0))=((v0.c0)))) NOT BETWEEN (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END) AND (QUOTE(vt0.c0))) INNER JOIN v0 ON (- (((vt0.c0) ISNULL))) WHERE (((((vt2.c0) NOT NULL)) NOT NULL)) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT NULL)) NOT NULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON (((((vt2.c0))==((v0.c0)))) NOT BETWEEN (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END) AND (QUOTE(vt0.c0))) INNER JOIN v0 ON (- (((vt0.c0) ISNULL))) ORDER BY vt0.c0);
SELECT ALL * FROM vt0 CROSS JOIN vt2 ON (((((vt2.c0))=((v0.c0)))) NOT BETWEEN (CASE v0.c0  WHEN NULL THEN v0.c0 ELSE vt0.c0 END) AND (QUOTE(vt0.c0))) INNER JOIN v0 ON (- (((vt0.c0) ISNULL))) WHERE (((((vt2.c0) NOT NULL)) NOT NULL)) ORDER BY vt0.c0;
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE (((((((vt2.c0)GLOB(vt0.c0)))OR(rtreenode(vt2.c0, vt0.c0))))AND(v0.c0 COLLATE BINARY))) ORDER BY (((vt2.c0)) BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)GLOB(vt0.c0)))OR(rtreenode(vt2.c0, vt0.c0))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY (((vt2.c0)) BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((CAST(v0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE (((((((vt2.c0)GLOB(vt0.c0)))OR(rtreenode(vt2.c0, vt0.c0))))AND(v0.c0 COLLATE BINARY))) ORDER BY (((vt2.c0)) BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((CAST(v0.c0 AS REAL))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)GLOB(vt0.c0)))OR(rtreenode(vt2.c0, vt0.c0))))AND(v0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY (((vt2.c0)) BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((CAST(v0.c0 AS REAL)))));
SELECT ALL COUNT(*) FROM vt0, vt2, v0 WHERE (((((((vt2.c0)GLOB(vt0.c0)))OR(rtreenode(vt2.c0, vt0.c0))))AND(v0.c0 COLLATE BINARY))) ORDER BY (((vt2.c0)) BETWEEN ((((v0.c0)<(vt0.c0)))) AND ((CAST(v0.c0 AS REAL))));
SELECT * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))AND(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ()))))OR((((v0.c0))==((v0.c0)))))) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))AND(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ()))))OR((((v0.c0))=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))AND(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ()))))OR((((v0.c0))==((v0.c0)))))) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))AND(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ()))))OR((((v0.c0))=((v0.c0)))))) IS TRUE)  as count FROM v0 ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST);
SELECT * FROM v0 WHERE (((((((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))))AND(v0.c0 COLLATE BINARY)))OR(CAST(v0.c0 AS BLOB))))AND(((((((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))AND(v0.c0)))))AND((v0.c0 IN ()))))OR((((v0.c0))==((v0.c0)))))) ORDER BY v0.c0 COLLATE BINARY  NULLS FIRST;
SELECT COUNT(*) FROM v0 INNER JOIN vt2 ON vt2.c0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((vt2.c0)%(vt2.c0)))))) ORDER BY ((((((v0.c0)AND(vt2.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) DESC, CAST(((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) AS TEXT) DESC, vt2.c0;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((vt2.c0)%(vt2.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON vt2.c0 ORDER BY ((((((v0.c0)AND(vt2.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) DESC, CAST(((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) AS TEXT) DESC, vt2.c0);
SELECT COUNT(*) FROM v0 INNER JOIN vt2 ON vt2.c0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((vt2.c0)%(vt2.c0)))))) ORDER BY ((((((v0.c0)AND(vt2.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) DESC, CAST(((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) AS TEXT) DESC, vt2.c0;
SELECT SUM(count) FROM (SELECT (((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((vt2.c0)%(vt2.c0)))))) IS TRUE)  as count FROM v0 INNER JOIN vt2 ON vt2.c0 ORDER BY ((((((v0.c0)AND(vt2.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) DESC, CAST(((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) AS TEXT) DESC, vt2.c0);
SELECT COUNT(*) FROM v0 INNER JOIN vt2 ON vt2.c0 WHERE ((((v0.c0)) BETWEEN ((CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END)) AND ((((vt2.c0)%(vt2.c0)))))) ORDER BY ((((((v0.c0)AND(vt2.c0)))AND(v0.c0))) NOT BETWEEN (v0.c0) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))) DESC, CAST(((vt2.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)) AS TEXT) DESC, vt2.c0;
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))||(NULL))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))>((((vt0.c0) NOT BETWEEN (x'9879') AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))||(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))>((((vt0.c0) NOT BETWEEN (x'9879') AND (vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))||(NULL))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))>((((vt0.c0) NOT BETWEEN (x'9879') AND (vt0.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))||(NULL))) IS TRUE)  as count FROM vt0 ORDER BY (((CAST(vt0.c0 AS INTEGER)))>((((vt0.c0) NOT BETWEEN (x'9879') AND (vt0.c0))))) DESC);
SELECT COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))||(NULL))) ORDER BY (((CAST(vt0.c0 AS INTEGER)))>((((vt0.c0) NOT BETWEEN (x'9879') AND (vt0.c0))))) DESC;
SELECT * FROM vt2, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)IS NOT(NULL)))))AND((((vt2.c0, vt2.c0, vt2.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt2.c0, vt0.c0, vt2.c0)))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)IS NOT(NULL)))))AND((((vt2.c0, vt2.c0, vt2.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt2.c0, vt0.c0, vt2.c0)))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt2, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)IS NOT(NULL)))))AND((((vt2.c0, vt2.c0, vt2.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt2.c0, vt0.c0, vt2.c0)))))) ORDER BY vt0.c0 ASC;
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)IS NOT(NULL)))))AND((((vt2.c0, vt2.c0, vt2.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt2.c0, vt0.c0, vt2.c0)))))) IS TRUE)  as count FROM vt2, vt0 ORDER BY vt0.c0 ASC);
SELECT * FROM vt2, vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)OR(((vt2.c0)IS NOT(NULL)))))AND((((vt2.c0, vt2.c0, vt2.c0, vt0.c0, vt0.c0))<=((x'', vt0.c0, vt2.c0, vt0.c0, vt2.c0)))))) ORDER BY vt0.c0 ASC;
SELECT COUNT(*) FROM vt0, vt2 WHERE (vt0.c0) ORDER BY (('-1527998562') IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt2 ORDER BY (('-1527998562') IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (vt0.c0) ORDER BY (('-1527998562') IS TRUE) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, vt2 ORDER BY (('-1527998562') IS TRUE) ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (vt0.c0) ORDER BY (('-1527998562') IS TRUE) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))OR(((x'480e') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))OR(((x'480e') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))OR(((x'480e') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))OR(((x'480e') BETWEEN (vt0.c0) AND (vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(INSTR(vt0.c0, vt0.c0))))OR(((x'480e') BETWEEN (vt0.c0) AND (vt0.c0)))));
SELECT ALL * FROM v0 WHERE (x'1773e5a5') ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST, (NULL IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'1773e5a5') IS TRUE)  as count FROM v0 ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST, (NULL IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (x'1773e5a5') ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST, (NULL IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((x'1773e5a5') IS TRUE)  as count FROM v0 ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST, (NULL IN ()) ASC  NULLS LAST);
SELECT ALL * FROM v0 WHERE (x'1773e5a5') ORDER BY (+ (((((v0.c0)AND(v0.c0)))AND(v0.c0))))  NULLS LAST, (NULL IN ()) ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (ABS(DISTINCT ((x'')/(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((x'')/(vt2.c0)))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (ABS(DISTINCT ((x'')/(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((ABS(DISTINCT ((x'')/(vt2.c0)))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (ABS(DISTINCT ((x'')/(vt2.c0))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((+ (vt0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE ((+ (vt0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((((((((((v0.c0) IS FALSE))AND(v0.c0)))AND(x'' COLLATE RTRIM)))AND(((((v0.c0)AND(v0.c0)))OR(v0.c0)))))AND(((((v0.c0)OR(v0.c0)))OR(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt2.c0) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((vt2.c0) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))))) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (((vt2.c0) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))));
SELECT COUNT(*) FROM vt2, vt0 WHERE (((vt0.c0)>(vt2.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((vt0.c0)>(vt2.c0 COLLATE BINARY)));
SELECT SUM(count) FROM (SELECT ((((vt0.c0)>(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((vt0.c0)>(vt2.c0 COLLATE BINARY)));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(x'' AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(x'' AS BLOB) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(x'' AS BLOB) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(x'' AS BLOB) END) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (vt0.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN ((vt0.c0)>=(v0.c0)) THEN (~ (v0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN vt0.c0 COLLATE NOCASE ELSE CAST(x'' AS BLOB) END);
SELECT ALL * FROM vt2 WHERE (((((((0Xffffffffd549e94b)-(vt2.c0)))OR(((vt2.c0) NOT NULL))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffd549e94b)-(vt2.c0)))OR(((vt2.c0) NOT NULL))))OR(NULL))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((((0Xffffffffd549e94b)-(vt2.c0)))OR(((vt2.c0) NOT NULL))))OR(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((((((((0xffffffffd549e94b)-(vt2.c0)))OR(((vt2.c0) NOT NULL))))OR(NULL))) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (((((((0Xffffffffd549e94b)-(vt2.c0)))OR(((vt2.c0) NOT NULL))))OR(NULL)));
SELECT ALL * FROM v0, vt0, vt2 WHERE (((IFNULL(DISTINCT vt2.c0, v0.c0))<(vt0.c0))) ORDER BY (NOT (vt2.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt2.c0, v0.c0))<(vt0.c0))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (NOT (vt2.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt2 WHERE (((IFNULL(DISTINCT vt2.c0, v0.c0))<(vt0.c0))) ORDER BY (NOT (vt2.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((IFNULL(DISTINCT vt2.c0, v0.c0))<(vt0.c0))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (NOT (vt2.c0 COLLATE NOCASE))  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt2 WHERE (((IFNULL(DISTINCT vt2.c0, v0.c0))<(vt0.c0))) ORDER BY (NOT (vt2.c0 COLLATE NOCASE))  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2 WHERE (((CAST(vt2.c0 AS BLOB)) NOTNULL)) ORDER BY ((vt2.c0 IN ()) IN ((((vt2.c0))<=((vt2.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0 IN ()) IN ((((vt2.c0))<=((vt2.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (((CAST(vt2.c0 AS BLOB)) NOTNULL)) ORDER BY ((vt2.c0 IN ()) IN ((((vt2.c0))<=((vt2.c0))))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS BLOB)) NOTNULL)) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0 IN ()) IN ((((vt2.c0))<=((vt2.c0))))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (((CAST(vt2.c0 AS BLOB)) NOTNULL)) ORDER BY ((vt2.c0 IN ()) IN ((((vt2.c0))<=((vt2.c0))))) ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((v0.c0 IN ()))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (LIKELY((v0.c0 IN ())));
SELECT * FROM vt2, v0 WHERE (((CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE (((CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT SUM(count) FROM (SELECT ((((CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE (((CASE vt2.c0  WHEN v0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(((v0.c0)>>(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0)-(((v0.c0)>>(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0)-(((v0.c0)>>(v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)%('1158167905'))) ORDER BY CASE (~ (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.28758702391353697 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)>>(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)%('1158167905'))) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.28758702391353697 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)>>(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)%('1158167905'))) ORDER BY CASE (~ (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.28758702391353697 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)>>(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0 COLLATE RTRIM)%('1158167905'))) IS TRUE)  as count FROM vt0 ORDER BY CASE (~ (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.28758702391353697 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)>>(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((vt0.c0 COLLATE RTRIM)%('1158167905'))) ORDER BY CASE (~ (vt0.c0))  WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 0.28758702391353697 END THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0)&(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) WHEN ((vt0.c0)>>(vt0.c0)) THEN (NOT (vt0.c0)) ELSE (((vt0.c0))>((vt0.c0))) END ASC  NULLS LAST;
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt2.c0) ORDER BY CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt2.c0) ORDER BY CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM);
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt2.c0) ORDER BY CAST(vt2.c0 AS NUMERIC) COLLATE RTRIM;
SELECT ALL * FROM v0, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY 'n', RTRIM(((v0.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((((((((((((x'')OR(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((vt0.c0))<=((v0.c0))))))OR((~ (v0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)/(vt0.c0)))))OR((v0.c0 IN ('2063577363'))))  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY 'n', RTRIM(((v0.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((((((((((((x'')OR(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((vt0.c0))<=((v0.c0))))))OR((~ (v0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)/(vt0.c0)))))OR((v0.c0 IN ('2063577363'))))  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY 'n', RTRIM(((v0.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((((((((((((x'')OR(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((vt0.c0))<=((v0.c0))))))OR((~ (v0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)/(vt0.c0)))))OR((v0.c0 IN ('2063577363'))))  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0 ORDER BY 'n', RTRIM(((v0.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((((((((((((x'')OR(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((vt0.c0))<=((v0.c0))))))OR((~ (v0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)/(vt0.c0)))))OR((v0.c0 IN ('2063577363'))))  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST);
SELECT ALL * FROM v0, vt0 WHERE ((- (vt0.c0 COLLATE RTRIM))) ORDER BY 'n', RTRIM(((v0.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((((((((((((x'')OR(v0.c0)))AND(v0.c0 COLLATE BINARY)))OR((((vt0.c0))<=((v0.c0))))))OR((~ (v0.c0)))))OR(CAST(vt0.c0 AS BLOB))))OR(((vt0.c0)/(vt0.c0)))))OR((v0.c0 IN ('2063577363'))))  NULLS FIRST, ((CAST(v0.c0 AS TEXT)) BETWEEN (NULL) AND (CAST(vt0.c0 AS REAL))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0)) DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0)) DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0)) DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((v0.c0 IN ())))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0 COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0)) DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((v0.c0 IN ())))  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (v0.c0 COLLATE RTRIM) ORDER BY ((CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END)<<(v0.c0)) DESC  NULLS FIRST, ((v0.c0) NOT BETWEEN (((v0.c0) IS FALSE)) AND ((v0.c0 IN ())))  NULLS FIRST;
SELECT ALL * FROM vt2, v0, vt0 WHERE (NULLIF(DISTINCT ((vt2.c0)|(vt2.c0)), HEX(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt2.c0)|(vt2.c0)), HEX(NULL))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (NULLIF(DISTINCT ((vt2.c0)|(vt2.c0)), HEX(NULL)));
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT ((vt2.c0)|(vt2.c0)), HEX(NULL))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (NULLIF(DISTINCT ((vt2.c0)|(vt2.c0)), HEX(NULL)));
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0 ORDER BY (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (x'') ORDER BY (((NULL) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()) DESC;
SELECT ALL * FROM vt2, vt0, v0 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))&(IFNULL('652521281', vt2.c0)))) ORDER BY ((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE NULL END)>>(STRFTIME(x'', vt2.c0, v0.c0, vt2.c0, v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))&(IFNULL('652521281', vt2.c0)))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE NULL END)>>(STRFTIME(x'', vt2.c0, v0.c0, vt2.c0, v0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, v0 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))&(IFNULL('652521281', vt2.c0)))) ORDER BY ((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE NULL END)>>(STRFTIME(x'', vt2.c0, v0.c0, vt2.c0, v0.c0))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))&(IFNULL('652521281', vt2.c0)))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE NULL END)>>(STRFTIME(x'', vt2.c0, v0.c0, vt2.c0, v0.c0))) DESC  NULLS FIRST);
SELECT ALL * FROM vt2, vt0, v0 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))&(IFNULL('652521281', vt2.c0)))) ORDER BY ((CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 ELSE NULL END)>>(STRFTIME(x'', vt2.c0, v0.c0, vt2.c0, v0.c0))) DESC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON TYPEOF((-1797280909 IN (vt2.c0))) FULL OUTER JOIN vt2 ON (x'' IN ()) WHERE (((('1287909364'))=((((vt2.c0)OR(vt2.c0))))));
SELECT SUM(count) FROM (SELECT ((((('1287909364'))==((((vt2.c0)OR(vt2.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON TYPEOF((-1797280909 IN (vt2.c0))) FULL OUTER JOIN vt2 ON (x'' IN ()));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON TYPEOF((-1797280909 IN (vt2.c0))) FULL OUTER JOIN vt2 ON (x'' IN ()) WHERE (((('1287909364'))=((((vt2.c0)OR(vt2.c0))))));
SELECT SUM(count) FROM (SELECT ((((('1287909364'))==((((vt2.c0)OR(vt2.c0)))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON TYPEOF((-1797280909 IN (vt2.c0))) FULL OUTER JOIN vt2 ON (x'' IN ()));
SELECT * FROM v0, vt2, vt0 WHERE ((vt2.c0 IN (((v0.c0)||(v0.c0))))) ORDER BY CAST(((((((((vt2.c0)OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)) AS REAL), (- (v0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY CAST(((((((((vt2.c0)OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)) AS REAL), (- (v0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM v0, vt2, vt0 WHERE ((vt2.c0 IN (((v0.c0)||(v0.c0))))) ORDER BY CAST(((((((((vt2.c0)OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)) AS REAL), (- (v0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY CAST(((((((((vt2.c0)OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)) AS REAL), (- (v0.c0 COLLATE NOCASE))  NULLS LAST);
SELECT * FROM v0, vt2, vt0 WHERE ((vt2.c0 IN (((v0.c0)||(v0.c0))))) ORDER BY CAST(((((((((vt2.c0)OR(vt2.c0)))AND(v0.c0)))OR(v0.c0)))OR(vt0.c0)) AS REAL), (- (v0.c0 COLLATE NOCASE))  NULLS LAST;
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c0)AND(vt0.c0))));
SELECT SUM(count) FROM (SELECT ((SQLITE_COMPILEOPTION_GET(((vt0.c0)AND(vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE (SQLITE_COMPILEOPTION_GET(((vt0.c0)AND(vt0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) NOTNULL)) ORDER BY v0.c0  NULLS LAST, ((LTRIM(v0.c0)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, ((LTRIM(v0.c0)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) NOTNULL)) ORDER BY v0.c0  NULLS LAST, ((LTRIM(v0.c0)) IS FALSE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0))>((v0.c0)))) NOTNULL)) IS TRUE)  as count FROM v0 ORDER BY v0.c0  NULLS LAST, ((LTRIM(v0.c0)) IS FALSE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE ((((((v0.c0))>((v0.c0)))) NOTNULL)) ORDER BY v0.c0  NULLS LAST, ((LTRIM(v0.c0)) IS FALSE)  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((vt0.c0)<>(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)!=(vt0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((vt0.c0)<>(vt0.c0));
SELECT SUM(count) FROM (SELECT ALL ((((((((v0.c0)AND(v0.c0)))OR(vt0.c0))) ISNULL)) IS TRUE)  as count FROM v0, vt0 ORDER BY ((vt0.c0)!=(vt0.c0)));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((v0.c0)AND(v0.c0)))OR(vt0.c0))) ISNULL)) ORDER BY ((vt0.c0)<>(vt0.c0));
SELECT ALL * FROM vt2, v0 WHERE (CASE WHEN (((vt2.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))) THEN (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((v0.c0)IS NOT(x'151e')) END) ORDER BY CAST('-836802078' AS BLOB)  NULLS LAST, NULL  NULLS FIRST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt2.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))) THEN (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((v0.c0)IS NOT(x'151e')) END) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST('-836802078' AS BLOB)  NULLS LAST, NULL  NULLS FIRST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt2, v0 WHERE (CASE WHEN (((vt2.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))) THEN (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((v0.c0)IS NOT(x'151e')) END) ORDER BY CAST('-836802078' AS BLOB)  NULLS LAST, NULL  NULLS FIRST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN (((vt2.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))) THEN (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((v0.c0)IS NOT(x'151e')) END) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST('-836802078' AS BLOB)  NULLS LAST, NULL  NULLS FIRST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)  NULLS FIRST);
SELECT ALL * FROM vt2, v0 WHERE (CASE WHEN (((vt2.c0, vt2.c0, v0.c0)) BETWEEN ((vt2.c0, vt2.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))) THEN (((v0.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) ELSE ((v0.c0)IS NOT(x'151e')) END) ORDER BY CAST('-836802078' AS BLOB)  NULLS LAST, NULL  NULLS FIRST, CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) AS BLOB)  NULLS FIRST;
SELECT ALL * FROM vt0, vt2, v0 WHERE (CASE WHEN v0.c0 THEN ((0.5383364470999683) IS TRUE) WHEN x'' THEN vt0.c0 WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.5775714868790103 ELSE ((v0.c0)<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN ((0.5383364470999683) IS TRUE) WHEN x'' THEN vt0.c0 WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.5775714868790103 ELSE ((v0.c0)<(v0.c0)) END) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE (CASE WHEN v0.c0 THEN ((0.5383364470999683) IS TRUE) WHEN x'' THEN vt0.c0 WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.5775714868790103 ELSE ((v0.c0)<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 THEN ((0.5383364470999683) IS TRUE) WHEN x'' THEN vt0.c0 WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.5775714868790103 ELSE ((v0.c0)<(v0.c0)) END) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE (CASE WHEN v0.c0 THEN ((0.5383364470999683) IS TRUE) WHEN x'' THEN vt0.c0 WHEN CAST(vt2.c0 AS NUMERIC) THEN 0.5775714868790103 ELSE ((v0.c0)<(v0.c0)) END);
SELECT * FROM vt2, vt0, v0 WHERE (v0.c0) ORDER BY ((((((0X20036daf) NOT BETWEEN (vt0.c0) AND (vt2.c0)))OR(vt0.c0)))AND(CAST(vt2.c0 AS NUMERIC))), (+ (vt0.c0)) COLLATE RTRIM  NULLS LAST, vt2.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((((((0x20036daf) NOT BETWEEN (vt0.c0) AND (vt2.c0)))OR(vt0.c0)))AND(CAST(vt2.c0 AS NUMERIC))), (+ (vt0.c0)) COLLATE RTRIM  NULLS LAST, vt2.c0 DESC  NULLS FIRST);
SELECT * FROM vt2, vt0, v0 WHERE (v0.c0) ORDER BY ((((((0X20036daf) NOT BETWEEN (vt0.c0) AND (vt2.c0)))OR(vt0.c0)))AND(CAST(vt2.c0 AS NUMERIC))), (+ (vt0.c0)) COLLATE RTRIM  NULLS LAST, vt2.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((((((0x20036daf) NOT BETWEEN (vt0.c0) AND (vt2.c0)))OR(vt0.c0)))AND(CAST(vt2.c0 AS NUMERIC))), (+ (vt0.c0)) COLLATE RTRIM  NULLS LAST, vt2.c0 DESC  NULLS FIRST);
SELECT * FROM vt2, vt0, v0 WHERE (v0.c0) ORDER BY ((((((0X20036daf) NOT BETWEEN (vt0.c0) AND (vt2.c0)))OR(vt0.c0)))AND(CAST(vt2.c0 AS NUMERIC))), (+ (vt0.c0)) COLLATE RTRIM  NULLS LAST, vt2.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))>((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))>((v0.c0 IN ()))));
SELECT SUM(count) FROM (SELECT ((((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))>((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((v0.c0)OR(vt2.c0)))OR(vt2.c0)))>((v0.c0 IN ()))));
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON x'' INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))AND(((0.5410122988842407)==(vt2.c0)))))AND(LIKE(vt0.c0, vt0.c0, '1'))))AND(CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((vt0.c0))==((vt2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))==((vt2.c0))) IN ())) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON x'' INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))AND(((0.5410122988842407)=(vt2.c0)))))AND(LIKE(vt0.c0, vt0.c0, '1'))))AND(CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON x'' INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))AND(((0.5410122988842407)==(vt2.c0)))))AND(LIKE(vt0.c0, vt0.c0, '1'))))AND(CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((vt0.c0))==((vt2.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0))==((vt2.c0))) IN ())) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON x'' INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))AND(((0.5410122988842407)=(vt2.c0)))))AND(LIKE(vt0.c0, vt0.c0, '1'))))AND(CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 ELSE vt0.c0 END)));
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON x'' INNER JOIN vt0 ON ((((((((CAST(vt0.c0 AS INTEGER))OR(vt0.c0)))AND(((0.5410122988842407)==(vt2.c0)))))AND(LIKE(vt0.c0, vt0.c0, '1'))))AND(CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 ELSE vt0.c0 END)) WHERE (((((vt0.c0))==((vt2.c0))) IN ()));
SELECT ALL * FROM v0 FULL OUTER JOIN vt2 ON 'Xmhx6é/' COLLATE RTRIM WHERE (((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY (((((NOT (x'2800')))AND(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt2.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON 'Xmhx6é/' COLLATE RTRIM ORDER BY (((((NOT (x'2800')))AND(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt2.c0) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt2 ON 'Xmhx6é/' COLLATE RTRIM WHERE (((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY (((((NOT (x'2800')))AND(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt2.c0) ISNULL))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON 'Xmhx6é/' COLLATE RTRIM ORDER BY (((((NOT (x'2800')))AND(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt2.c0) ISNULL))) ASC  NULLS FIRST);
SELECT ALL * FROM v0 FULL OUTER JOIN vt2 ON 'Xmhx6é/' COLLATE RTRIM WHERE (((((vt2.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) IS FALSE)) ORDER BY (((((NOT (x'2800')))AND(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))AND(((vt2.c0) ISNULL))) ASC  NULLS FIRST;
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))AND('-388605259')))AND(v0.c0)))AND((((v0.c0, v0.c0, vt0.c0))<>((vt0.c0, v0.c0, vt0.c0))))))AND((vt0.c0 IN ()))) WHERE ((((v0.c0 IN ()))<=(LIKELIHOOD(vt0.c0, 0.8649363168898032)))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((((vt0.c0)OR(x'10b2')))AND(0.06182567289206853))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<=(LIKELIHOOD(vt0.c0, 0.8649363168898032)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))AND('-388605259')))AND(v0.c0)))AND((((v0.c0, v0.c0, vt0.c0))!=((vt0.c0, v0.c0, vt0.c0))))))AND((vt0.c0 IN ()))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((((vt0.c0)OR(x'10b2')))AND(0.06182567289206853))))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))AND('-388605259')))AND(v0.c0)))AND((((v0.c0, v0.c0, vt0.c0))<>((vt0.c0, v0.c0, vt0.c0))))))AND((vt0.c0 IN ()))) WHERE ((((v0.c0 IN ()))<=(LIKELIHOOD(vt0.c0, 0.8649363168898032)))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((((vt0.c0)OR(x'10b2')))AND(0.06182567289206853))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))<=(LIKELIHOOD(vt0.c0, 0.8649363168898032)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))AND('-388605259')))AND(v0.c0)))AND((((v0.c0, v0.c0, vt0.c0))!=((vt0.c0, v0.c0, vt0.c0))))))AND((vt0.c0 IN ()))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((((vt0.c0)OR(x'10b2')))AND(0.06182567289206853))))  NULLS LAST);
SELECT ALL * FROM vt0 FULL OUTER JOIN v0 ON (((((((((((vt0.c0, vt0.c0, NULL)) NOT BETWEEN ((v0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, NULL, vt0.c0))))AND('-388605259')))AND(v0.c0)))AND((((v0.c0, v0.c0, vt0.c0))<>((vt0.c0, v0.c0, vt0.c0))))))AND((vt0.c0 IN ()))) WHERE ((((v0.c0 IN ()))<=(LIKELIHOOD(vt0.c0, 0.8649363168898032)))) ORDER BY (((((v0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))/(((((vt0.c0)OR(x'10b2')))AND(0.06182567289206853))))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt2.c0)LIKE(vt0.c0))) NOT NULL)) ORDER BY (- (TRIM(''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY (- (TRIM(''))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt2.c0)LIKE(vt0.c0))) NOT NULL)) ORDER BY (- (TRIM(''))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)LIKE(vt0.c0))) NOT NULL)) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY (- (TRIM(''))) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt2.c0)LIKE(vt0.c0))) NOT NULL)) ORDER BY (- (TRIM(''))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0 COLLATE NOCASE);
SELECT ALL * FROM vt2, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) ELSE json(v0.c0) END) ORDER BY (('Zx^nowh')AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) ELSE json(v0.c0) END) IS TRUE)  as count FROM vt2, v0 ORDER BY (('Zx^nowh')AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt2, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) ELSE json(v0.c0) END) ORDER BY (('Zx^nowh')AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) ELSE json(v0.c0) END) IS TRUE)  as count FROM vt2, v0 ORDER BY (('Zx^nowh')AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ASC  NULLS LAST);
SELECT ALL * FROM vt2, v0 WHERE (CASE WHEN v0.c0 COLLATE BINARY THEN CAST(v0.c0 AS TEXT) ELSE json(v0.c0) END) ORDER BY (('Zx^nowh')AND(CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END)) ASC  NULLS LAST;
SELECT ALL * FROM vt0, vt2 WHERE (LIKELY((~ (vt2.c0)))) ORDER BY (((vt2.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) NOT NULL), CAST(vt0.c0 AS REAL), ((((((((vt2.c0)AND('d,')))OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)))) AND ((CAST(vt2.c0 AS BLOB), (vt0.c0 IN ()), ((vt0.c0) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((~ (vt2.c0)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((vt2.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) NOT NULL), CAST(vt0.c0 AS REAL), ((((((((vt2.c0)AND('d,')))OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)))) AND ((CAST(vt2.c0 AS BLOB), (vt0.c0 IN ()), ((vt0.c0) ISNULL)))) ASC);
SELECT ALL * FROM vt0, vt2 WHERE (LIKELY((~ (vt2.c0)))) ORDER BY (((vt2.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) NOT NULL), CAST(vt0.c0 AS REAL), ((((((((vt2.c0)AND('d,')))OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)))) AND ((CAST(vt2.c0 AS BLOB), (vt0.c0 IN ()), ((vt0.c0) ISNULL)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((LIKELY((~ (vt2.c0)))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (((vt2.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) NOT NULL), CAST(vt0.c0 AS REAL), ((((((((vt2.c0)AND('d,')))OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)))) AND ((CAST(vt2.c0 AS BLOB), (vt0.c0 IN ()), ((vt0.c0) ISNULL)))) ASC);
SELECT ALL * FROM vt0, vt2 WHERE (LIKELY((~ (vt2.c0)))) ORDER BY (((vt2.c0, vt2.c0, vt0.c0)) NOT BETWEEN ((((vt2.c0) NOT NULL), CAST(vt0.c0 AS REAL), ((((((((vt2.c0)AND('d,')))OR(vt0.c0)))OR(vt0.c0)))OR(vt2.c0)))) AND ((CAST(vt2.c0 AS BLOB), (vt0.c0 IN ()), ((vt0.c0) ISNULL)))) ASC;
SELECT * FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (HEX(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c0 ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (HEX(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((HEX(DISTINCT vt0.c0 COLLATE NOCASE)) IS TRUE)  as count FROM vt0 CROSS JOIN v0 ON vt0.c0 ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST);
SELECT * FROM vt0 CROSS JOIN v0 ON vt0.c0 WHERE (HEX(DISTINCT vt0.c0 COLLATE NOCASE)) ORDER BY CAST(CASE vt0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END AS BLOB)  NULLS LAST;
SELECT ALL * FROM vt0, vt2, v0 WHERE (MAX(((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)), ((((vt0.c0)OR(x'e41c')))OR(vt2.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)), ((((vt0.c0)OR(x'e41c')))OR(vt2.c0)))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE (MAX(((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)), ((((vt0.c0)OR(x'e41c')))OR(vt2.c0))));
SELECT SUM(count) FROM (SELECT ((MAX(((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)), ((((vt0.c0)OR(x'e41c')))OR(vt2.c0)))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT ALL * FROM vt0, vt2, v0 WHERE (MAX(((v0.c0) BETWEEN (vt2.c0) AND (v0.c0)), ((((vt0.c0)OR(x'e41c')))OR(vt2.c0))));
SELECT * FROM vt0, v0 WHERE ('-1182986916') ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (('-1182986916') IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT * FROM vt0, v0 WHERE ('-1182986916') ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT (('-1182986916') IS TRUE)  as count FROM vt0, v0 ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END))));
SELECT * FROM vt0, v0 WHERE ('-1182986916') ORDER BY (((vt0.c0)) NOT BETWEEN (((- (vt0.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM vt0, vt2 WHERE (LIKELY(NULLIF(DISTINCT vt2.c0, vt0.c0))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULLIF(DISTINCT vt2.c0, vt0.c0))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (LIKELY(NULLIF(DISTINCT vt2.c0, vt0.c0))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((LIKELY(NULLIF(DISTINCT vt2.c0, vt0.c0))) IS TRUE)  as count FROM vt0, vt2 ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (LIKELY(NULLIF(DISTINCT vt2.c0, vt0.c0))) ORDER BY (vt0.c0 IN ()) COLLATE RTRIM  NULLS LAST;
SELECT ALL * FROM vt2 WHERE (((((((vt2.c0) IS FALSE))OR(vt2.c0)))OR(((vt2.c0) BETWEEN (vt2.c0) AND (x''))))) ORDER BY ((LOWER(DISTINCT vt2.c0))>(CAST(vt2.c0 AS NUMERIC))), (((+ (vt2.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0) IS FALSE))OR(vt2.c0)))OR(((vt2.c0) BETWEEN (vt2.c0) AND (x''))))) IS TRUE)  as count FROM vt2 ORDER BY ((LOWER(DISTINCT vt2.c0))>(CAST(vt2.c0 AS NUMERIC))), (((+ (vt2.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (((((((vt2.c0) IS FALSE))OR(vt2.c0)))OR(((vt2.c0) BETWEEN (vt2.c0) AND (x''))))) ORDER BY ((LOWER(DISTINCT vt2.c0))>(CAST(vt2.c0 AS NUMERIC))), (((+ (vt2.c0))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0) IS FALSE))OR(vt2.c0)))OR(((vt2.c0) BETWEEN (vt2.c0) AND (x''))))) IS TRUE)  as count FROM vt2 ORDER BY ((LOWER(DISTINCT vt2.c0))>(CAST(vt2.c0 AS NUMERIC))), (((+ (vt2.c0))) IS FALSE)  NULLS FIRST);
SELECT ALL * FROM vt2 WHERE (((((((vt2.c0) IS FALSE))OR(vt2.c0)))OR(((vt2.c0) BETWEEN (vt2.c0) AND (x''))))) ORDER BY ((LOWER(DISTINCT vt2.c0))>(CAST(vt2.c0 AS NUMERIC))), (((+ (vt2.c0))) IS FALSE)  NULLS FIRST;
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (vt2.c0) ORDER BY (((vt2.c0) ISNULL) IN (x'f1be', (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY (((vt2.c0) ISNULL) IN (x'f1be', (vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (vt2.c0) ORDER BY (((vt2.c0) ISNULL) IN (x'f1be', (vt0.c0 IN (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 FULL OUTER JOIN vt0 ON vt0.c0 ORDER BY (((vt2.c0) ISNULL) IN (x'f1be', (vt0.c0 IN (vt0.c0)))));
SELECT COUNT(*) FROM vt2 FULL OUTER JOIN vt0 ON vt0.c0 WHERE (vt2.c0) ORDER BY (((vt2.c0) ISNULL) IN (x'f1be', (vt0.c0 IN (vt0.c0))));
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY INNER JOIN vt2 ON (vt0.c0 IN ()) COLLATE RTRIM WHERE ((((+ (vt2.c0))) NOTNULL)) ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt2.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY INNER JOIN vt2 ON (vt0.c0 IN ()) COLLATE RTRIM ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY INNER JOIN vt2 ON (vt0.c0 IN ()) COLLATE RTRIM WHERE ((((+ (vt2.c0))) NOTNULL)) ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT (((((+ (vt2.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((((((((vt0.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY INNER JOIN vt2 ON (vt0.c0 IN ()) COLLATE RTRIM ORDER BY ((v0.c0) BETWEEN (x'') AND (((vt0.c0) NOT NULL))) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNICODE((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNICODE((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNICODE((vt0.c0 IN ())));
SELECT SUM(count) FROM (SELECT ((UNICODE((vt0.c0 IN ()))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (UNICODE((vt0.c0 IN ())));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(CASE WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LOWER(CASE WHEN v0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(CASE WHEN v0.c0 THEN vt0.c0 END));
SELECT SUM(count) FROM (SELECT ((LOWER(CASE WHEN v0.c0 THEN vt0.c0 END)) IS TRUE)  as count FROM v0 NOT INDEXED, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (LOWER(CASE WHEN v0.c0 THEN vt0.c0 END));
SELECT * FROM v0, vt2, vt0 WHERE (0.15608390681735018) ORDER BY (vt2.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.15608390681735018) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (vt2.c0 IN ())  NULLS FIRST);
SELECT * FROM v0, vt2, vt0 WHERE (0.15608390681735018) ORDER BY (vt2.c0 IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((0.15608390681735018) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (vt2.c0 IN ())  NULLS FIRST);
SELECT * FROM v0, vt2, vt0 WHERE (0.15608390681735018) ORDER BY (vt2.c0 IN ())  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE ((vt0.c0)AND(vt0.c0))  WHEN NULL THEN (- (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN (0.006864123468523942 IN ()) THEN ((vt0.c0)&(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)AND(vt0.c0))  WHEN NULL THEN (- (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN (0.006864123468523942 IN ()) THEN ((vt0.c0)&(NULL)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE ((vt0.c0)AND(vt0.c0))  WHEN NULL THEN (- (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN (0.006864123468523942 IN ()) THEN ((vt0.c0)&(NULL)) END  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE ((vt0.c0)AND(vt0.c0))  WHEN NULL THEN (- (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN (0.006864123468523942 IN ()) THEN ((vt0.c0)&(NULL)) END  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((CAST(vt0.c0 AS BLOB))OR(CAST(vt0.c0 AS REAL))))OR(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) ORDER BY CASE ((vt0.c0)AND(vt0.c0))  WHEN NULL THEN (- (vt0.c0)) WHEN ((vt0.c0) IS TRUE) THEN vt0.c0 WHEN (0.006864123468523942 IN ()) THEN ((vt0.c0)&(NULL)) END  NULLS LAST;
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (v0.c0);
SELECT * FROM vt2 WHERE ('-3328325') ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (('-3328325') IS TRUE)  as count FROM vt2 ORDER BY x'');
SELECT * FROM vt2 WHERE ('-3328325') ORDER BY x'';
SELECT SUM(count) FROM (SELECT ALL (('-3328325') IS TRUE)  as count FROM vt2 ORDER BY x'');
SELECT * FROM vt2 WHERE ('-3328325') ORDER BY x'';
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON 0x453e18e8 WHERE (CASE WHEN (vt2.c0 IN (vt0.c0)) THEN '' ELSE 0.7512449707936445 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt2.c0 IN (vt0.c0)) THEN '' ELSE 0.7512449707936445 END) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON 0x453e18e8);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON 0x453e18e8 WHERE (CASE WHEN (vt2.c0 IN (vt0.c0)) THEN '' ELSE 0.7512449707936445 END);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN (vt2.c0 IN (vt0.c0)) THEN '' ELSE 0.7512449707936445 END) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON 0x453e18e8);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN vt0 ON 0x453e18e8 WHERE (CASE WHEN (vt2.c0 IN (vt0.c0)) THEN '' ELSE 0.7512449707936445 END);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))<=(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))<=(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))<=(((v0.c0) ISNULL))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))<=(((v0.c0) ISNULL)))) IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((((vt2.c0)AND(v0.c0)))OR(v0.c0)))<=(((v0.c0) ISNULL))));
SELECT * FROM vt2 WHERE (vt2.c0) ORDER BY json_patch(UPPER(DISTINCT vt2.c0), ((vt2.c0)GLOB(vt2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY json_patch(UPPER(DISTINCT vt2.c0), ((vt2.c0)GLOB(vt2.c0)))  NULLS LAST);
SELECT * FROM vt2 WHERE (vt2.c0) ORDER BY json_patch(UPPER(DISTINCT vt2.c0), ((vt2.c0)GLOB(vt2.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2 ORDER BY json_patch(UPPER(DISTINCT vt2.c0), ((vt2.c0)GLOB(vt2.c0)))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) IS FALSE)))) ORDER BY NULL DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) IS FALSE)))) ORDER BY NULL DESC, v0.c0 DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) IS FALSE)))) IS TRUE)  as count FROM vt0, v0 ORDER BY NULL DESC, v0.c0 DESC);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE ((((((v0.c0, v0.c0, v0.c0))<((v0.c0, vt0.c0, vt0.c0))))/(((vt0.c0) IS FALSE)))) ORDER BY NULL DESC, v0.c0 DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0);
SELECT * FROM vt2 WHERE (CASE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END  WHEN LIKE(vt2.c0, vt2.c0, '1') THEN '-1527998562' WHEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) ELSE (- (vt2.c0)) END) ORDER BY ((vt2.c0 COLLATE RTRIM) NOT NULL), (((-39927819)!=(vt2.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END  WHEN LIKE(vt2.c0, vt2.c0, '1') THEN '-1527998562' WHEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) ELSE (- (vt2.c0)) END) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0 COLLATE RTRIM) NOT NULL), (((-39927819)!=(vt2.c0)) IN ()));
SELECT * FROM vt2 WHERE (CASE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END  WHEN LIKE(vt2.c0, vt2.c0, '1') THEN '-1527998562' WHEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) ELSE (- (vt2.c0)) END) ORDER BY ((vt2.c0 COLLATE RTRIM) NOT NULL), (((-39927819)!=(vt2.c0)) IN ());
SELECT SUM(count) FROM (SELECT ((CASE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END  WHEN LIKE(vt2.c0, vt2.c0, '1') THEN '-1527998562' WHEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) ELSE (- (vt2.c0)) END) IS TRUE)  as count FROM vt2 ORDER BY ((vt2.c0 COLLATE RTRIM) NOT NULL), (((-39927819)!=(vt2.c0)) IN ()));
SELECT * FROM vt2 WHERE (CASE CASE WHEN vt2.c0 THEN vt2.c0 WHEN vt2.c0 THEN NULL WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END  WHEN LIKE(vt2.c0, vt2.c0, '1') THEN '-1527998562' WHEN CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END THEN vt2.c0 WHEN (NOT (vt2.c0)) THEN ((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)) ELSE (- (vt2.c0)) END) ORDER BY ((vt2.c0 COLLATE RTRIM) NOT NULL), (((-39927819)!=(vt2.c0)) IN ());
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, json_array((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))), (~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, json_array((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))), (~ (vt0.c0))));
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, json_array((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))), (~ (vt0.c0)));
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY (NOT (vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, json_array((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))), (~ (vt0.c0))));
SELECT * FROM vt0, vt2, v0 WHERE (vt2.c0) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM ASC  NULLS FIRST, json_array((((v0.c0, vt0.c0, v0.c0)) BETWEEN ((v0.c0, vt0.c0, vt2.c0)) AND ((vt2.c0, v0.c0, vt2.c0))), (~ (vt0.c0)));
SELECT * FROM v0, vt0, vt2 WHERE (CAST(CASE v0.c0  WHEN 0.10841336406895408 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) ORDER BY (((vt2.c0 IN ()))IS(0.19990416337472916)), ((((0X57503efb) NOT BETWEEN (vt2.c0) AND (v0.c0))) NOT NULL), ((x'') ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN 0.10841336406895408 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (((vt2.c0 IN ()))IS(0.19990416337472916)), ((((0X57503efb) NOT BETWEEN (vt2.c0) AND (v0.c0))) NOT NULL), ((x'') ISNULL));
SELECT * FROM v0, vt0, vt2 WHERE (CAST(CASE v0.c0  WHEN 0.10841336406895408 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) ORDER BY (((vt2.c0 IN ()))IS(0.19990416337472916)), ((((0X57503efb) NOT BETWEEN (vt2.c0) AND (v0.c0))) NOT NULL), ((x'') ISNULL);
SELECT SUM(count) FROM (SELECT ALL ((CAST(CASE v0.c0  WHEN 0.10841336406895408 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY (((vt2.c0 IN ()))IS(0.19990416337472916)), ((((0X57503efb) NOT BETWEEN (vt2.c0) AND (v0.c0))) NOT NULL), ((x'') ISNULL));
SELECT * FROM v0, vt0, vt2 WHERE (CAST(CASE v0.c0  WHEN 0.10841336406895408 THEN vt2.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END AS REAL)) ORDER BY (((vt2.c0 IN ()))IS(0.19990416337472916)), ((((0X57503efb) NOT BETWEEN (vt2.c0) AND (v0.c0))) NOT NULL), ((x'') ISNULL);
SELECT ALL * FROM vt0, v0 WHERE ('&Sbj3') ORDER BY ((CAST(v0.c0 AS TEXT))>=(((vt0.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT (('&Sbj3') IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS TEXT))>=(((vt0.c0)!=(v0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE ('&Sbj3') ORDER BY ((CAST(v0.c0 AS TEXT))>=(((vt0.c0)<>(v0.c0))));
SELECT SUM(count) FROM (SELECT (('&Sbj3') IS TRUE)  as count FROM vt0, v0 ORDER BY ((CAST(v0.c0 AS TEXT))>=(((vt0.c0)!=(v0.c0)))));
SELECT ALL * FROM vt0, v0 WHERE ('&Sbj3') ORDER BY ((CAST(v0.c0 AS TEXT))>=(((vt0.c0)<>(v0.c0))));
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (vt0.c0);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (COALESCE(DISTINCT LIKE(vt0.c0, vt2.c0), ((v0.c0)>(vt2.c0)))) ORDER BY ((((((((((vt2.c0)GLOB(vt2.c0)))AND((((vt2.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, v0.c0)) AND ((vt0.c0, -1.425588876E9, vt0.c0))))))AND(GLOB(v0.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(((v0.c0)||(vt2.c0)))) DESC  NULLS FIRST, v0.c0 ASC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT LIKE(vt0.c0, vt2.c0), ((v0.c0)>(vt2.c0)))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((((((((((vt2.c0)GLOB(vt2.c0)))AND((((vt2.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, v0.c0)) AND ((vt0.c0, -1.425588876E9, vt0.c0))))))AND(GLOB(v0.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(((v0.c0)||(vt2.c0)))) DESC  NULLS FIRST, v0.c0 ASC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (COALESCE(DISTINCT LIKE(vt0.c0, vt2.c0), ((v0.c0)>(vt2.c0)))) ORDER BY ((((((((((vt2.c0)GLOB(vt2.c0)))AND((((vt2.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, v0.c0)) AND ((vt0.c0, -1.425588876E9, vt0.c0))))))AND(GLOB(v0.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(((v0.c0)||(vt2.c0)))) DESC  NULLS FIRST, v0.c0 ASC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((COALESCE(DISTINCT LIKE(vt0.c0, vt2.c0), ((v0.c0)>(vt2.c0)))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((((((((((vt2.c0)GLOB(vt2.c0)))AND((((vt2.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, v0.c0)) AND ((vt0.c0, -1.425588876E9, vt0.c0))))))AND(GLOB(v0.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(((v0.c0)||(vt2.c0)))) DESC  NULLS FIRST, v0.c0 ASC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (COALESCE(DISTINCT LIKE(vt0.c0, vt2.c0), ((v0.c0)>(vt2.c0)))) ORDER BY ((((((((((vt2.c0)GLOB(vt2.c0)))AND((((vt2.c0, v0.c0, vt2.c0)) BETWEEN ((vt2.c0, vt2.c0, v0.c0)) AND ((vt0.c0, -1.425588876E9, vt0.c0))))))AND(GLOB(v0.c0, vt2.c0))))OR(CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt2.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END)))OR(((v0.c0)||(vt2.c0)))) DESC  NULLS FIRST, v0.c0 ASC, (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) IN ())  NULLS LAST;
SELECT ALL * FROM vt2, vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL * FROM vt2, vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 COLLATE BINARY AS BLOB)) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL * FROM vt2, vt0, v0 WHERE (CAST(v0.c0 COLLATE BINARY AS BLOB));
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND(''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND('')));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND(''))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0) ISNULL))))AND('')));
SELECT ALL * FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (vt2.c0);
SELECT ALL * FROM v0 WHERE (MAX(json_object(0.6613643437277893, v0.c0, v0.c0, v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(json_object(0.6613643437277893, v0.c0, v0.c0, v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (MAX(json_object(0.6613643437277893, v0.c0, v0.c0, v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((MAX(json_object(0.6613643437277893, v0.c0, v0.c0, v0.c0), (((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))), ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) IS TRUE)  as count FROM v0);
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt2.c0) AND (((v0.c0) IS FALSE))) FULL OUTER JOIN v0 ON CAST(((vt0.c0)||(vt2.c0)) AS REAL) WHERE ((~ ((((vt2.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt2.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt2.c0) AND (((v0.c0) IS FALSE))) FULL OUTER JOIN v0 ON CAST(((vt0.c0)||(vt2.c0)) AS REAL));
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt2.c0) AND (((v0.c0) IS FALSE))) FULL OUTER JOIN v0 ON CAST(((vt0.c0)||(vt2.c0)) AS REAL) WHERE ((~ ((((vt2.c0))==((vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((~ ((((vt2.c0))=((vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0))) BETWEEN (vt2.c0) AND (((v0.c0) IS FALSE))) FULL OUTER JOIN v0 ON CAST(((vt0.c0)||(vt2.c0)) AS REAL));
SELECT COUNT(*) FROM vt2, vt0 CROSS JOIN v0 ON (((v0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((TYPEOF(vt2.c0), ((vt2.c0)IS NOT(vt0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) IS FALSE), ((v0.c0) ISNULL), ((v0.c0)<(vt0.c0))))) WHERE (((0.31520100759825087) NOT BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((v0.c0)/(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.31520100759825087) NOT BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((v0.c0)/(vt2.c0))))) IS TRUE)  as count FROM vt2, vt0 CROSS JOIN v0 ON (((v0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((TYPEOF(vt2.c0), ((vt2.c0)IS NOT(vt0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) IS FALSE), ((v0.c0) ISNULL), ((v0.c0)<(vt0.c0))))));
SELECT COUNT(*) FROM vt2, vt0 CROSS JOIN v0 ON (((v0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((TYPEOF(vt2.c0), ((vt2.c0)IS NOT(vt0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) IS FALSE), ((v0.c0) ISNULL), ((v0.c0)<(vt0.c0))))) WHERE (((0.31520100759825087) NOT BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((v0.c0)/(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((0.31520100759825087) NOT BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((v0.c0)/(vt2.c0))))) IS TRUE)  as count FROM vt2, vt0 CROSS JOIN v0 ON (((v0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((TYPEOF(vt2.c0), ((vt2.c0)IS NOT(vt0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) IS FALSE), ((v0.c0) ISNULL), ((v0.c0)<(vt0.c0))))));
SELECT COUNT(*) FROM vt2, vt0 CROSS JOIN v0 ON (((v0.c0, vt2.c0, vt2.c0)) NOT BETWEEN ((TYPEOF(vt2.c0), ((vt2.c0)IS NOT(vt0.c0)), (vt0.c0 IN ()))) AND ((((v0.c0) IS FALSE), ((v0.c0) ISNULL), ((v0.c0)<(vt0.c0))))) WHERE (((0.31520100759825087) NOT BETWEEN (CAST(vt2.c0 AS NUMERIC)) AND (((v0.c0)/(vt2.c0)))));
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (vt0.c0);
SELECT * FROM vt2 WHERE (7.31797502E8 COLLATE RTRIM) ORDER BY (((vt2.c0 IN (vt2.c0))) NOT BETWEEN (((x'5a47')<(vt2.c0))) AND ((vt2.c0 IN (vt2.c0, vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((7.31797502E8 COLLATE RTRIM) IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0 IN (vt2.c0))) NOT BETWEEN (((x'5a47')<(vt2.c0))) AND ((vt2.c0 IN (vt2.c0, vt2.c0)))) DESC);
SELECT * FROM vt2 WHERE (7.31797502E8 COLLATE RTRIM) ORDER BY (((vt2.c0 IN (vt2.c0))) NOT BETWEEN (((x'5a47')<(vt2.c0))) AND ((vt2.c0 IN (vt2.c0, vt2.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((7.31797502E8 COLLATE RTRIM) IS TRUE)  as count FROM vt2 ORDER BY (((vt2.c0 IN (vt2.c0))) NOT BETWEEN (((x'5a47')<(vt2.c0))) AND ((vt2.c0 IN (vt2.c0, vt2.c0)))) DESC);
SELECT * FROM vt2 WHERE (7.31797502E8 COLLATE RTRIM) ORDER BY (((vt2.c0 IN (vt2.c0))) NOT BETWEEN (((x'5a47')<(vt2.c0))) AND ((vt2.c0 IN (vt2.c0, vt2.c0)))) DESC;
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 END)IS NOT((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, NULL, vt2.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) ORDER BY (((x'', vt0.c0, vt0.c0))<=((vt2.c0, vt0.c0, vt2.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN v0.c0 END)IS NOT((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, NULL, vt2.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((x'', vt0.c0, vt0.c0))<=((vt2.c0, vt0.c0, vt2.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 END)IS NOT((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, NULL, vt2.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) ORDER BY (((x'', vt0.c0, vt0.c0))<=((vt2.c0, vt0.c0, vt2.c0))) COLLATE RTRIM;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN v0.c0 END)IS NOT((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, NULL, vt2.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((x'', vt0.c0, vt0.c0))<=((vt2.c0, vt0.c0, vt2.c0))) COLLATE RTRIM);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 END)IS NOT((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, NULL, vt2.c0)) AND ((v0.c0, vt0.c0, v0.c0)))))) ORDER BY (((x'', vt0.c0, vt0.c0))<=((vt2.c0, vt0.c0, vt2.c0))) COLLATE RTRIM;
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN v0 ON UNLIKELY(CAST(v0.c0 AS BLOB)) WHERE (((((v0.c0)IS NOT(vt2.c0)))+(((vt2.c0) IS FALSE)))) ORDER BY (~ (((vt2.c0)!=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(vt2.c0)))+(((vt2.c0) IS FALSE)))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN v0 ON UNLIKELY(CAST(v0.c0 AS BLOB)) ORDER BY (~ (((vt2.c0)!=(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN v0 ON UNLIKELY(CAST(v0.c0 AS BLOB)) WHERE (((((v0.c0)IS NOT(vt2.c0)))+(((vt2.c0) IS FALSE)))) ORDER BY (~ (((vt2.c0)!=(v0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ((((((v0.c0)IS NOT(vt2.c0)))+(((vt2.c0) IS FALSE)))) IS TRUE)  as count FROM vt2 FULL OUTER JOIN v0 ON UNLIKELY(CAST(v0.c0 AS BLOB)) ORDER BY (~ (((vt2.c0)!=(v0.c0)))) DESC);
SELECT ALL COUNT(*) FROM vt2 FULL OUTER JOIN v0 ON UNLIKELY(CAST(v0.c0 AS BLOB)) WHERE (((((v0.c0)IS NOT(vt2.c0)))+(((vt2.c0) IS FALSE)))) ORDER BY (~ (((vt2.c0)!=(v0.c0)))) DESC;
SELECT * FROM v0, vt2, vt0 WHERE (HEX(((v0.c0)IS(vt2.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END) IS TRUE), v0.c0  NULLS LAST, '-1109942937' ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0)IS(vt2.c0)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END) IS TRUE), v0.c0  NULLS LAST, '-1109942937' ASC);
SELECT * FROM v0, vt2, vt0 WHERE (HEX(((v0.c0)IS(vt2.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END) IS TRUE), v0.c0  NULLS LAST, '-1109942937' ASC;
SELECT SUM(count) FROM (SELECT ((HEX(((v0.c0)IS(vt2.c0)))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END) IS TRUE), v0.c0  NULLS LAST, '-1109942937' ASC);
SELECT * FROM v0, vt2, vt0 WHERE (HEX(((v0.c0)IS(vt2.c0)))) ORDER BY ((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt0.c0 END) IS TRUE), v0.c0  NULLS LAST, '-1109942937' ASC;
SELECT * FROM vt0, v0 WHERE (((COALESCE(vt0.c0, v0.c0, vt0.c0, v0.c0))-(((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, v0.c0, vt0.c0, v0.c0))-(((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((COALESCE(vt0.c0, v0.c0, vt0.c0, v0.c0))-(((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((COALESCE(vt0.c0, v0.c0, vt0.c0, v0.c0))-(((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))))) IS TRUE)  as count FROM vt0, v0);
SELECT * FROM vt0, v0 WHERE (((COALESCE(vt0.c0, v0.c0, vt0.c0, v0.c0))-(((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))));
SELECT ALL * FROM vt2, v0 WHERE (((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))) IN ())) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (((((v0.c0)) BETWEEN ((vt2.c0)) AND ((v0.c0))) IN ()));
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT SUM(count) FROM (SELECT ALL ((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL)) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (((((v0.c0) BETWEEN (v0.c0) AND (v0.c0))) NOT NULL));
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((vt2.c0)!=(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0)))) AND ((vt2.c0 IN ())))) ORDER BY '4/fjè¼' COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)!=(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0)))) AND ((vt2.c0 IN ())))) IS TRUE)  as count FROM vt2, vt0 ORDER BY '4/fjè¼' COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((vt2.c0)!=(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0)))) AND ((vt2.c0 IN ())))) ORDER BY '4/fjè¼' COLLATE NOCASE ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)!=(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0)))) AND ((vt2.c0 IN ())))) IS TRUE)  as count FROM vt2, vt0 ORDER BY '4/fjè¼' COLLATE NOCASE ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, vt0 WHERE (((((vt2.c0)!=(vt0.c0))) BETWEEN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt2.c0)))) AND ((vt2.c0 IN ())))) ORDER BY '4/fjè¼' COLLATE NOCASE ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((v0.c0) BETWEEN (-807247704) AND (vt2.c0))) NOT NULL)) ORDER BY x'' COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (-807247704) AND (vt2.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY x'' COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((v0.c0) BETWEEN (-807247704) AND (vt2.c0))) NOT NULL)) ORDER BY x'' COLLATE BINARY ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((v0.c0) BETWEEN (-807247704) AND (vt2.c0))) NOT NULL)) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY x'' COLLATE BINARY ASC  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (((((v0.c0) BETWEEN (-807247704) AND (vt2.c0))) NOT NULL)) ORDER BY x'' COLLATE BINARY ASC  NULLS FIRST;
SELECT ALL * FROM v0 WHERE (json_array_length(TRIM(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_array_length(TRIM(DISTINCT v0.c0)));
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(TRIM(DISTINCT v0.c0))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE (json_array_length(TRIM(DISTINCT v0.c0)));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS TRUE)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS TRUE)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) IS TRUE)) IS TRUE)) IS TRUE)  as count FROM vt0 ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) IS TRUE)) IS TRUE)) ORDER BY ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) AND ((vt0.c0 IN ()))) DESC  NULLS FIRST;
SELECT * FROM vt2 WHERE ((NOT (((vt2.c0) IS TRUE)))) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt2.c0) IS TRUE)))) IS TRUE)  as count FROM vt2 ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0)))) DESC  NULLS LAST);
SELECT * FROM vt2 WHERE ((NOT (((vt2.c0) IS TRUE)))) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0)))) DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((NOT (((vt2.c0) IS TRUE)))) IS TRUE)  as count FROM vt2 ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0)))) DESC  NULLS LAST);
SELECT * FROM vt2 WHERE ((NOT (((vt2.c0) IS TRUE)))) ORDER BY ((CASE WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (((((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))OR(vt2.c0))) AND ((+ (vt2.c0)))) DESC  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ('412510415') ORDER BY ((((((v0.c0)>>(vt2.c0)))OR(vt2.c0)))AND(((v0.c0)OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('412510415') IS TRUE)  as count FROM v0, vt2 ORDER BY ((((((v0.c0)>>(vt2.c0)))OR(vt2.c0)))AND(((v0.c0)OR(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ('412510415') ORDER BY ((((((v0.c0)>>(vt2.c0)))OR(vt2.c0)))AND(((v0.c0)OR(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (('412510415') IS TRUE)  as count FROM v0, vt2 ORDER BY ((((((v0.c0)>>(vt2.c0)))OR(vt2.c0)))AND(((v0.c0)OR(v0.c0)))) ASC);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE ('412510415') ORDER BY ((((((v0.c0)>>(vt2.c0)))OR(vt2.c0)))AND(((v0.c0)OR(v0.c0)))) ASC;
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) ORDER BY (~ (((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((v0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) ORDER BY (~ (((v0.c0) NOT NULL))) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) IS TRUE)  as count FROM vt0, v0 ORDER BY (~ (((v0.c0) NOT NULL))) DESC);
SELECT COUNT(*) FROM vt0, v0 WHERE ((((v0.c0 IN (v0.c0, v0.c0))) IS TRUE)) ORDER BY (~ (((v0.c0) NOT NULL))) DESC;
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON (~ (CAST(vt0.c0 AS REAL))) WHERE (json_array_length(((vt2.c0)<=(vt2.c0)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))AND((vt2.c0 IN (vt0.c0)))), (((vt0.c0)) BETWEEN (('-245973282')) AND ((TRIM(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt2.c0)<=(vt2.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON (~ (CAST(vt0.c0 AS REAL))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))AND((vt2.c0 IN (vt0.c0)))), (((vt0.c0)) BETWEEN (('-245973282')) AND ((TRIM(vt0.c0)))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON (~ (CAST(vt0.c0 AS REAL))) WHERE (json_array_length(((vt2.c0)<=(vt2.c0)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))AND((vt2.c0 IN (vt0.c0)))), (((vt0.c0)) BETWEEN (('-245973282')) AND ((TRIM(vt0.c0)))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((json_array_length(((vt2.c0)<=(vt2.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON (~ (CAST(vt0.c0 AS REAL))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))AND((vt2.c0 IN (vt0.c0)))), (((vt0.c0)) BETWEEN (('-245973282')) AND ((TRIM(vt0.c0)))) DESC);
SELECT * FROM vt0 LEFT OUTER JOIN vt2 ON (~ (CAST(vt0.c0 AS REAL))) WHERE (json_array_length(((vt2.c0)<=(vt2.c0)))) ORDER BY ((((((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))AND(((vt0.c0)>=(vt0.c0)))))AND(((vt0.c0) IS TRUE))))OR(((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)))))AND((vt2.c0 IN (vt0.c0)))), (((vt0.c0)) BETWEEN (('-245973282')) AND ((TRIM(vt0.c0)))) DESC;
SELECT ALL COUNT(*) FROM vt2, v0 RIGHT OUTER JOIN vt0 ON (((((0.6080569678414726))>((v0.c0))))-(0.9589620214947284)) WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt2.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN ((v0.c0)==(vt0.c0)) WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN PRINTF(v0.c0, vt0.c0, vt2.c0) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt2.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN ((v0.c0)==(vt0.c0)) WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN PRINTF(v0.c0, vt0.c0, vt2.c0) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt0.c0) END) IS TRUE)  as count FROM vt2, v0 RIGHT OUTER JOIN vt0 ON (((((0.6080569678414726))>((v0.c0))))-(0.9589620214947284)));
SELECT ALL COUNT(*) FROM vt2, v0 RIGHT OUTER JOIN vt0 ON (((((0.6080569678414726))>((v0.c0))))-(0.9589620214947284)) WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt2.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN ((v0.c0)==(vt0.c0)) WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN PRINTF(v0.c0, vt0.c0, vt2.c0) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt0.c0) END);
SELECT SUM(count) FROM (SELECT ((CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt2.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN ((v0.c0)==(vt0.c0)) WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN PRINTF(v0.c0, vt0.c0, vt2.c0) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt0.c0) END) IS TRUE)  as count FROM vt2, v0 RIGHT OUTER JOIN vt0 ON (((((0.6080569678414726))>((v0.c0))))-(0.9589620214947284)));
SELECT ALL COUNT(*) FROM vt2, v0 RIGHT OUTER JOIN vt0 ON (((((0.6080569678414726))>((v0.c0))))-(0.9589620214947284)) WHERE (CASE ((v0.c0) NOT BETWEEN (vt0.c0) AND (NULL))  WHEN ((vt0.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)) THEN CASE WHEN v0.c0 THEN vt0.c0 END WHEN (- (vt2.c0)) THEN ((v0.c0)/(vt0.c0)) WHEN CASE vt0.c0  WHEN vt0.c0 THEN v0.c0 END THEN ((v0.c0)==(vt0.c0)) WHEN vt0.c0 THEN v0.c0 COLLATE NOCASE WHEN PRINTF(v0.c0, vt0.c0, vt2.c0) THEN v0.c0 COLLATE BINARY ELSE TRIM(vt0.c0) END);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (vt0.c0 COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ((vt0.c0 COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (vt0.c0 COLLATE NOCASE);
SELECT * FROM vt2 WHERE (LIKELIHOOD(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), 0.5016682325784729));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), 0.5016682325784729)) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (LIKELIHOOD(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), 0.5016682325784729));
SELECT SUM(count) FROM (SELECT ALL ((LIKELIHOOD(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), 0.5016682325784729)) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (LIKELIHOOD(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)), 0.5016682325784729));
SELECT * FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), vt0.c0)) ORDER BY ((TOTAL_CHANGES())IS NOT((vt0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((TOTAL_CHANGES())IS NOT((vt0.c0 IN (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), vt0.c0)) ORDER BY ((TOTAL_CHANGES())IS NOT((vt0.c0 IN (vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF((vt0.c0 IN ()), vt0.c0)) IS TRUE)  as count FROM vt0 ORDER BY ((TOTAL_CHANGES())IS NOT((vt0.c0 IN (vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (NULLIF((vt0.c0 IN ()), vt0.c0)) ORDER BY ((TOTAL_CHANGES())IS NOT((vt0.c0 IN (vt0.c0)))) ASC;
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON json_extract(((vt0.c0)|(v0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))) WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON json_extract(((vt0.c0)|(v0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))));
SELECT COUNT(*) FROM v0 CROSS JOIN vt0 ON json_extract(((vt0.c0)|(v0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))) WHERE ((- (v0.c0)));
SELECT SUM(count) FROM (SELECT (((- (v0.c0))) IS TRUE)  as count FROM v0 CROSS JOIN vt0 ON json_extract(((vt0.c0)|(v0.c0)), ((((vt0.c0)OR(vt0.c0)))AND(v0.c0))));
SELECT ALL COUNT(*) FROM v0 WHERE (0.1783866769248812) ORDER BY CASE NULL  WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN x'' WHEN CAST(v0.c0 AS REAL) THEN (~ (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (0.02496306456552333)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.1783866769248812) IS TRUE)  as count FROM v0 ORDER BY CASE NULL  WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN x'' WHEN CAST(v0.c0 AS REAL) THEN (~ (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (0.02496306456552333)) END ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (0.1783866769248812) ORDER BY CASE NULL  WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN x'' WHEN CAST(v0.c0 AS REAL) THEN (~ (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (0.02496306456552333)) END ASC;
SELECT SUM(count) FROM (SELECT ALL ((0.1783866769248812) IS TRUE)  as count FROM v0 ORDER BY CASE NULL  WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN x'' WHEN CAST(v0.c0 AS REAL) THEN (~ (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (0.02496306456552333)) END ASC);
SELECT ALL COUNT(*) FROM v0 WHERE (0.1783866769248812) ORDER BY CASE NULL  WHEN CAST(v0.c0 AS NUMERIC) THEN v0.c0 WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN x'' WHEN CAST(v0.c0 AS REAL) THEN (~ (v0.c0)) ELSE ((v0.c0) BETWEEN (v0.c0) AND (0.02496306456552333)) END ASC;
SELECT ALL * FROM vt2, vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0)=(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((((v0.c0)=(vt0.c0))) NOT NULL));
SELECT ALL * FROM vt2, vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0)=(vt0.c0))) NOT NULL);
SELECT SUM(count) FROM (SELECT ALL (((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((((v0.c0)=(vt0.c0))) NOT NULL));
SELECT ALL * FROM vt2, vt0, v0 WHERE ((NOT (CASE WHEN vt0.c0 THEN vt0.c0 END))) ORDER BY ((((v0.c0)=(vt0.c0))) NOT NULL);
SELECT COUNT(*) FROM vt2 WHERE (CAST(UPPER(vt2.c0) AS BLOB)) ORDER BY x'' ASC  NULLS FIRST, (((((~ (vt2.c0)))AND((~ (vt2.c0)))))OR(NULL))  NULLS LAST, vt2.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(vt2.c0) AS BLOB)) IS TRUE)  as count FROM vt2 ORDER BY x'' ASC  NULLS FIRST, (((((~ (vt2.c0)))AND((~ (vt2.c0)))))OR(NULL))  NULLS LAST, vt2.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE (CAST(UPPER(vt2.c0) AS BLOB)) ORDER BY x'' ASC  NULLS FIRST, (((((~ (vt2.c0)))AND((~ (vt2.c0)))))OR(NULL))  NULLS LAST, vt2.c0 COLLATE BINARY  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST(UPPER(vt2.c0) AS BLOB)) IS TRUE)  as count FROM vt2 ORDER BY x'' ASC  NULLS FIRST, (((((~ (vt2.c0)))AND((~ (vt2.c0)))))OR(NULL))  NULLS LAST, vt2.c0 COLLATE BINARY  NULLS LAST);
SELECT COUNT(*) FROM vt2 WHERE (CAST(UPPER(vt2.c0) AS BLOB)) ORDER BY x'' ASC  NULLS FIRST, (((((~ (vt2.c0)))AND((~ (vt2.c0)))))OR(NULL))  NULLS LAST, vt2.c0 COLLATE BINARY  NULLS LAST;
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>((('-610515867')OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>((('-610515867')OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>((('-610515867')OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (vt0.c0)))>((('-610515867')OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE ((((~ (vt0.c0)))>((('-610515867')OR(vt0.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(LIKELY(v0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(LIKELY(v0.c0) AS INTEGER));
SELECT SUM(count) FROM (SELECT ((CAST(LIKELY(v0.c0) AS INTEGER)) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CAST(LIKELY(v0.c0) AS INTEGER));
SELECT * FROM v0, vt0, vt2 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 END))));
SELECT SUM(count) FROM (SELECT ALL (((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 END)))) IS TRUE)  as count FROM v0 NOT INDEXED, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE ((((vt0.c0)) BETWEEN ((((vt0.c0) NOT BETWEEN (v0.c0) AND (vt2.c0)))) AND ((CASE WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 END))));
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE RTRIM) IS TRUE)  as count FROM v0 ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) ASC);
SELECT COUNT(*) FROM v0 WHERE (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM COLLATE RTRIM) ORDER BY CAST(((v0.c0)IS NOT(v0.c0)) AS REAL) ASC;
SELECT * FROM vt0, v0, vt2 WHERE ((- (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE ((- (CAST(v0.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((- (CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE ((- (CAST(v0.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END)));
SELECT SUM(count) FROM (SELECT ALL (((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((+ (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END)));
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.4696717659186078, v0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.4696717659186078, v0.c0)))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.4696717659186078, v0.c0)))) IS FALSE)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(v0.c0 AS INTEGER)) IS TRUE)  as count FROM v0 ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.4696717659186078, v0.c0)))) IS FALSE)  NULLS FIRST);
SELECT COUNT(*) FROM v0 WHERE (CAST(v0.c0 AS INTEGER)) ORDER BY (((((v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, 0.4696717659186078, v0.c0)))) IS FALSE)  NULLS FIRST;
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON CAST(CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END AS INTEGER) WHERE (UPPER(vt0.c0 COLLATE BINARY)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON CAST(CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END AS INTEGER) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) IS FALSE))) DESC);
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON CAST(CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END AS INTEGER) WHERE (UPPER(vt0.c0 COLLATE BINARY)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) IS FALSE))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((UPPER(vt0.c0 COLLATE BINARY)) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON CAST(CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END AS INTEGER) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) IS FALSE))) DESC);
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON CAST(CASE WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 END AS INTEGER) WHERE (UPPER(vt0.c0 COLLATE BINARY)) ORDER BY (((vt0.c0 IN ())) NOT BETWEEN ((vt2.c0 IN ())) AND (((vt2.c0) IS FALSE))) DESC;
SELECT * FROM vt2 WHERE (((CAST(vt2.c0 AS REAL))IS((+ (vt2.c0))))) ORDER BY vt2.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS REAL))IS((+ (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0);
SELECT * FROM vt2 WHERE (((CAST(vt2.c0 AS REAL))IS((+ (vt2.c0))))) ORDER BY vt2.c0;
SELECT SUM(count) FROM (SELECT ((((CAST(vt2.c0 AS REAL))IS((+ (vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0);
SELECT * FROM vt2 WHERE (((CAST(vt2.c0 AS REAL))IS((+ (vt2.c0))))) ORDER BY vt2.c0;
SELECT * FROM vt0, v0, vt2 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE (((((((vt0.c0)AND(v0.c0)))OR(v0.c0))) IS FALSE));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT ((v0.c0)<=(v0.c0)), v0.c0, NULL, ((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))) WHERE (85675255);
SELECT SUM(count) FROM (SELECT ALL ((85675255) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT ((v0.c0)<=(v0.c0)), v0.c0, NULL, ((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT ((v0.c0)<=(v0.c0)), v0.c0, NULL, ((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))) WHERE (85675255);
SELECT SUM(count) FROM (SELECT ALL ((85675255) IS TRUE)  as count FROM v0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT ((v0.c0)<=(v0.c0)), v0.c0, NULL, ((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))));
SELECT COUNT(*) FROM v0 FULL OUTER JOIN vt2 ON COALESCE(DISTINCT ((v0.c0)<=(v0.c0)), v0.c0, NULL, ((vt2.c0) NOT BETWEEN (v0.c0) AND (vt2.c0))) WHERE (85675255);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((vt0.c0 IN ()) AS BLOB)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE (CAST((vt0.c0 IN ()) AS BLOB));
SELECT ALL * FROM vt2 WHERE (((((((((vt2.c0)AND(CAST(vt2.c0 AS REAL))))OR(DATETIME(vt2.c0, 0.6854122393166522, vt2.c0))))AND(((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))))OR(CASE WHEN NULL THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY vt2.c0 COLLATE NOCASE, ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC, (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt2.c0)AND(CAST(vt2.c0 AS REAL))))OR(DATETIME(vt2.c0, 0.6854122393166522, vt2.c0))))AND(((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))))OR(CASE WHEN NULL THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0 COLLATE NOCASE, ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC, (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) DESC);
SELECT ALL * FROM vt2 WHERE (((((((((vt2.c0)AND(CAST(vt2.c0 AS REAL))))OR(DATETIME(vt2.c0, 0.6854122393166522, vt2.c0))))AND(((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))))OR(CASE WHEN NULL THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY vt2.c0 COLLATE NOCASE, ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC, (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((((((((vt2.c0)AND(CAST(vt2.c0 AS REAL))))OR(DATETIME(vt2.c0, 0.6854122393166522, vt2.c0))))AND(((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))))OR(CASE WHEN NULL THEN vt2.c0 ELSE vt2.c0 END))) IS TRUE)  as count FROM vt2 ORDER BY vt2.c0 COLLATE NOCASE, ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC, (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) DESC);
SELECT ALL * FROM vt2 WHERE (((((((((vt2.c0)AND(CAST(vt2.c0 AS REAL))))OR(DATETIME(vt2.c0, 0.6854122393166522, vt2.c0))))AND(((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))))OR(CASE WHEN NULL THEN vt2.c0 ELSE vt2.c0 END))) ORDER BY vt2.c0 COLLATE NOCASE, ((CASE vt2.c0  WHEN vt2.c0 THEN vt2.c0 ELSE vt2.c0 END) BETWEEN (vt2.c0) AND (((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))) ASC, (((vt2.c0)) NOT BETWEEN ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0)))) AND ((((((vt2.c0)OR(vt2.c0)))AND(vt2.c0))))) DESC;
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON CAST(vt2.c0 AS BLOB) CROSS JOIN v0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (((v0.c0)*(vt2.c0 COLLATE NOCASE))) ORDER BY (((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((v0.c0)*(vt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON CAST(vt2.c0 AS BLOB) CROSS JOIN v0 ON (vt0.c0 IN ()) COLLATE BINARY ORDER BY (((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON CAST(vt2.c0 AS BLOB) CROSS JOIN v0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (((v0.c0)*(vt2.c0 COLLATE NOCASE))) ORDER BY (((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0))) COLLATE NOCASE;
SELECT SUM(count) FROM (SELECT ((((v0.c0)*(vt2.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON CAST(vt2.c0 AS BLOB) CROSS JOIN v0 ON (vt0.c0 IN ()) COLLATE BINARY ORDER BY (((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0))) COLLATE NOCASE);
SELECT ALL COUNT(*) FROM vt2 LEFT OUTER JOIN vt0 ON CAST(vt2.c0 AS BLOB) CROSS JOIN v0 ON (vt0.c0 IN ()) COLLATE BINARY WHERE (((v0.c0)*(vt2.c0 COLLATE NOCASE))) ORDER BY (((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt2.c0))) COLLATE NOCASE;
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN COALESCE(vt0.c0, NULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((1158167905))!=((vt0.c0))) END) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN COALESCE(vt0.c0, NULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((1158167905))<>((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN COALESCE(vt0.c0, NULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((1158167905))!=((vt0.c0))) END) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC;
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN COALESCE(vt0.c0, NULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((1158167905))<>((vt0.c0))) END) IS TRUE)  as count FROM vt0 ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))  WHEN (- (vt0.c0)) THEN ((vt0.c0) BETWEEN ('') AND (vt0.c0)) WHEN (NOT (vt0.c0)) THEN COALESCE(vt0.c0, NULL) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN (((1158167905))!=((vt0.c0))) END) ORDER BY (CAST(vt0.c0 AS TEXT) IN ()) DESC;
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY (vt0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY (vt0.c0 COLLATE RTRIM IN ());
SELECT SUM(count) FROM (SELECT ((CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) IS TRUE)  as count FROM vt0 ORDER BY (vt0.c0 COLLATE RTRIM IN ()));
SELECT ALL COUNT(*) FROM vt0 WHERE (CAST(CAST(vt0.c0 AS TEXT) AS BLOB)) ORDER BY (vt0.c0 COLLATE RTRIM IN ());
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((- (vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt2.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt2.c0 END);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((- (vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt2.c0 END;
SELECT SUM(count) FROM (SELECT ALL (((- (vt0.c0))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt2.c0 END);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((- (vt0.c0))) ORDER BY CASE WHEN ((vt0.c0) IS FALSE) THEN vt2.c0 END;
SELECT ALL * FROM vt0, v0, vt2 WHERE (((json(vt0.c0)) NOT NULL)) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, x'5cff'))) END DESC;
SELECT SUM(count) FROM (SELECT ((((json(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, x'5cff'))) END DESC);
SELECT ALL * FROM vt0, v0, vt2 WHERE (((json(vt0.c0)) NOT NULL)) ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, x'5cff'))) END DESC;
SELECT SUM(count) FROM (SELECT ((((json(vt0.c0)) NOT NULL)) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY CASE v0.c0 COLLATE BINARY  WHEN CASE v0.c0  WHEN v0.c0 THEN vt0.c0 END THEN ((v0.c0) BETWEEN (vt0.c0) AND (vt2.c0)) ELSE (((v0.c0, v0.c0, vt0.c0)) BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((v0.c0, v0.c0, x'5cff'))) END DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(vt0.c0))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(vt0.c0))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL);
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(vt0.c0))) IS TRUE)  as count FROM vt0 ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL));
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))OR(((vt0.c0)>(vt0.c0)))))OR(vt0.c0))) ORDER BY CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL);
SELECT ALL * FROM vt0, v0, vt2 WHERE (CASE 0.457249449313216  WHEN TRIM(DISTINCT vt0.c0) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.457249449313216  WHEN TRIM(DISTINCT vt0.c0) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE (CASE 0.457249449313216  WHEN TRIM(DISTINCT vt0.c0) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT SUM(count) FROM (SELECT ((CASE 0.457249449313216  WHEN TRIM(DISTINCT vt0.c0) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) ELSE ((vt0.c0) NOT NULL) END) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE (CASE 0.457249449313216  WHEN TRIM(DISTINCT vt0.c0) THEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (vt2.c0)) ELSE ((vt0.c0) NOT NULL) END);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT SUM(count) FROM (SELECT ((x'') IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (x'');
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) ISNULL) COLLATE BINARY) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) ISNULL) COLLATE BINARY) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0) ISNULL) COLLATE BINARY) IS TRUE)  as count FROM v0 ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) ISNULL) COLLATE BINARY) ORDER BY ((((((v0.c0)OR(v0.c0)))OR(v0.c0)))AND(CAST(v0.c0 AS BLOB)))  NULLS LAST;
SELECT COUNT(*) FROM vt0, vt2 WHERE (0.09329121780384675) ORDER BY (TRIM(vt2.c0) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.09329121780384675) IS TRUE)  as count FROM vt0, vt2 ORDER BY (TRIM(vt2.c0) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (0.09329121780384675) ORDER BY (TRIM(vt2.c0) IN ()) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((0.09329121780384675) IS TRUE)  as count FROM vt0, vt2 ORDER BY (TRIM(vt2.c0) IN ()) ASC  NULLS LAST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (0.09329121780384675) ORDER BY (TRIM(vt2.c0) IN ()) ASC  NULLS LAST;
SELECT * FROM vt0, vt2 INNER JOIN v0 ON CAST(((vt0.c0)<<(vt2.c0)) AS INTEGER) WHERE ((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, vt2 INNER JOIN v0 ON CAST(((vt0.c0)<<(vt2.c0)) AS INTEGER));
SELECT * FROM vt0, vt2 INNER JOIN v0 ON CAST(((vt0.c0)<<(vt2.c0)) AS INTEGER) WHERE ((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT NULL)) IS TRUE)  as count FROM vt0, vt2 INNER JOIN v0 ON CAST(((vt0.c0)<<(vt2.c0)) AS INTEGER));
SELECT * FROM vt0, vt2 INNER JOIN v0 ON CAST(((vt0.c0)<<(vt2.c0)) AS INTEGER) WHERE ((((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt0.c0)))) NOT NULL));
SELECT * FROM vt2, v0 WHERE (CAST(((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)) AS BLOB)) ORDER BY UPPER(DISTINCT ((vt2.c0) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt2, v0 ORDER BY UPPER(DISTINCT ((vt2.c0) NOTNULL))  NULLS LAST);
SELECT * FROM vt2, v0 WHERE (CAST(((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)) AS BLOB)) ORDER BY UPPER(DISTINCT ((vt2.c0) NOTNULL))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)) AS BLOB)) IS TRUE)  as count FROM vt2, v0 ORDER BY UPPER(DISTINCT ((vt2.c0) NOTNULL))  NULLS LAST);
SELECT * FROM vt2, v0 WHERE (CAST(((vt2.c0) BETWEEN (vt2.c0) AND (v0.c0)) AS BLOB)) ORDER BY UPPER(DISTINCT ((vt2.c0) NOTNULL))  NULLS LAST;
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0) NOT NULL))==(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))=(vt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0) NOT NULL))==(vt0.c0 COLLATE BINARY)) DESC;
SELECT SUM(count) FROM (SELECT ALL ((x'') IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0) NOT NULL))=(vt0.c0 COLLATE BINARY)) DESC);
SELECT * FROM vt0 WHERE (x'') ORDER BY ((((vt0.c0) NOT NULL))==(vt0.c0 COLLATE BINARY)) DESC;
SELECT * FROM v0 WHERE (v0.c0) ORDER BY json_valid(v0.c0) COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_valid(v0.c0) COLLATE RTRIM COLLATE BINARY DESC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY json_valid(v0.c0) COLLATE RTRIM COLLATE BINARY DESC;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY json_valid(v0.c0) COLLATE RTRIM COLLATE BINARY DESC);
SELECT * FROM v0 WHERE (v0.c0) ORDER BY json_valid(v0.c0) COLLATE RTRIM COLLATE BINARY DESC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('zs');
SELECT SUM(count) FROM (SELECT (('zs') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('zs');
SELECT SUM(count) FROM (SELECT (('zs') IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE ('zs');
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (+ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) ELSE (vt0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) ELSE (vt0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (+ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) ELSE (vt0.c0 IN (v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (+ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) ELSE (vt0.c0 IN (v0.c0)) END) IS TRUE)  as count FROM vt0, v0);
SELECT COUNT(*) FROM vt0, v0 WHERE (CASE (+ (v0.c0))  WHEN vt0.c0 COLLATE BINARY THEN CAST(v0.c0 AS NUMERIC) ELSE (vt0.c0 IN (v0.c0)) END);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((- (vt0.c0)) COLLATE NOCASE) ORDER BY NULL COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2 ORDER BY NULL COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((- (vt0.c0)) COLLATE NOCASE) ORDER BY NULL COLLATE NOCASE ASC;
SELECT SUM(count) FROM (SELECT (((- (vt0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM vt0, vt2 ORDER BY NULL COLLATE NOCASE ASC);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE ((- (vt0.c0)) COLLATE NOCASE) ORDER BY NULL COLLATE NOCASE ASC;
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (0.9581890604950214)) COLLATE NOCASE) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))<<(x''))  NULLS LAST, json_array(v0.c0, CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT (((~ (0.9581890604950214)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))<<(x''))  NULLS LAST, json_array(v0.c0, CAST(v0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (0.9581890604950214)) COLLATE NOCASE) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))<<(x''))  NULLS LAST, json_array(v0.c0, CAST(v0.c0 AS TEXT));
SELECT SUM(count) FROM (SELECT (((~ (0.9581890604950214)) COLLATE NOCASE) IS TRUE)  as count FROM v0 ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))<<(x''))  NULLS LAST, json_array(v0.c0, CAST(v0.c0 AS TEXT)));
SELECT ALL COUNT(*) FROM v0 WHERE ((~ (0.9581890604950214)) COLLATE NOCASE) ORDER BY ((((((((((v0.c0)AND(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)))<<(x''))  NULLS LAST, json_array(v0.c0, CAST(v0.c0 AS TEXT));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt2 ON CASE ''  WHEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt0.c0)) END WHERE (((((vt2.c0)AND((((vt0.c0))>((vt0.c0))))))AND(IFNULL(vt2.c0, vt2.c0)))) ORDER BY (NOT (vt2.c0)) COLLATE BINARY ASC, '-1625221999' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)AND((((vt0.c0))>((vt0.c0))))))AND(IFNULL(vt2.c0, vt2.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON CASE ''  WHEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt0.c0)) END ORDER BY (NOT (vt2.c0)) COLLATE BINARY ASC, '-1625221999' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt2 ON CASE ''  WHEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt0.c0)) END WHERE (((((vt2.c0)AND((((vt0.c0))>((vt0.c0))))))AND(IFNULL(vt2.c0, vt2.c0)))) ORDER BY (NOT (vt2.c0)) COLLATE BINARY ASC, '-1625221999' DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0)AND((((vt0.c0))>((vt0.c0))))))AND(IFNULL(vt2.c0, vt2.c0)))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN vt2 ON CASE ''  WHEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt0.c0)) END ORDER BY (NOT (vt2.c0)) COLLATE BINARY ASC, '-1625221999' DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN vt2 ON CASE ''  WHEN ((vt2.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((vt0.c0)GLOB(vt0.c0)) ELSE ((((((((vt0.c0)AND(vt0.c0)))AND(vt2.c0)))AND(vt0.c0)))OR(vt0.c0)) END WHERE (((((vt2.c0)AND((((vt0.c0))>((vt0.c0))))))AND(IFNULL(vt2.c0, vt2.c0)))) ORDER BY (NOT (vt2.c0)) COLLATE BINARY ASC, '-1625221999' DESC  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN NULLIF(vt0.c0, vt0.c0) THEN ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) END) ORDER BY ((vt0.c0)<(((0.6325117063217806)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN NULLIF(vt0.c0, vt0.c0) THEN ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(((0.6325117063217806)<<(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN NULLIF(vt0.c0, vt0.c0) THEN ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) END) ORDER BY ((vt0.c0)<(((0.6325117063217806)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE (vt0.c0 IN ())  WHEN NULLIF(vt0.c0, vt0.c0) THEN ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY ((vt0.c0)<(((0.6325117063217806)<<(vt0.c0)))) ASC  NULLS LAST);
SELECT * FROM vt0 WHERE (CASE (vt0.c0 IN ())  WHEN NULLIF(vt0.c0, vt0.c0) THEN ((('')) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt0.c0)-(vt0.c0)) THEN (NULL IN ()) WHEN NULL THEN CAST(vt0.c0 AS BLOB) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 COLLATE NOCASE WHEN vt0.c0 THEN ((vt0.c0)<<(vt0.c0)) END) ORDER BY ((vt0.c0)<(((0.6325117063217806)<<(vt0.c0)))) ASC  NULLS LAST;
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) WHERE (((v0.c0 COLLATE BINARY) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY (((~ ('Nup<'))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) ORDER BY (((~ ('Nup<'))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) WHERE (((v0.c0 COLLATE BINARY) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY (((~ ('Nup<'))) NOTNULL) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((v0.c0 COLLATE BINARY) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS NUMERIC)))) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) ORDER BY (((~ ('Nup<'))) NOTNULL) ASC  NULLS LAST);
SELECT COUNT(*) FROM v0 RIGHT OUTER JOIN vt0 ON ((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))) IN ()) WHERE (((v0.c0 COLLATE BINARY) BETWEEN (CASE WHEN v0.c0 THEN v0.c0 END) AND (CAST(v0.c0 AS NUMERIC)))) ORDER BY (((~ ('Nup<'))) NOTNULL) ASC  NULLS LAST;
SELECT ALL * FROM vt0, v0 WHERE (UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (UNLIKELY(vt0.c0) COLLATE RTRIM COLLATE BINARY);
SELECT COUNT(*) FROM vt2, v0 WHERE ((- ((~ ('1294864097'))))) ORDER BY (- (CAST(vt2.c0 AS NUMERIC))), x'';
SELECT SUM(count) FROM (SELECT (((- ((~ ('1294864097'))))) IS TRUE)  as count FROM vt2, v0 ORDER BY (- (CAST(vt2.c0 AS NUMERIC))), x'');
SELECT COUNT(*) FROM vt2, v0 WHERE ((- ((~ ('1294864097'))))) ORDER BY (- (CAST(vt2.c0 AS NUMERIC))), x'';
SELECT SUM(count) FROM (SELECT (((- ((~ ('1294864097'))))) IS TRUE)  as count FROM vt2, v0 ORDER BY (- (CAST(vt2.c0 AS NUMERIC))), x'');
SELECT COUNT(*) FROM vt2, v0 WHERE ((- ((~ ('1294864097'))))) ORDER BY (- (CAST(vt2.c0 AS NUMERIC))), x'';
SELECT ALL * FROM vt0 WHERE (0.5576058679062408) ORDER BY (((~ (vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, (NOT ((vt0.c0 IN (vt0.c0)))), (((vt0.c0) NOT NULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5576058679062408) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, (NOT ((vt0.c0 IN (vt0.c0)))), (((vt0.c0) NOT NULL) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.5576058679062408) ORDER BY (((~ (vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, (NOT ((vt0.c0 IN (vt0.c0)))), (((vt0.c0) NOT NULL) IN ())  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((0.5576058679062408) IS TRUE)  as count FROM vt0 ORDER BY (((~ (vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, (NOT ((vt0.c0 IN (vt0.c0)))), (((vt0.c0) NOT NULL) IN ())  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (0.5576058679062408) ORDER BY (((~ (vt0.c0)))>>(((vt0.c0)LIKE(vt0.c0)))) ASC  NULLS FIRST, (NOT ((vt0.c0 IN (vt0.c0)))), (((vt0.c0) NOT NULL) IN ())  NULLS LAST;
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((vt2.c0))<=((vt2.c0))))/(((vt2.c0) IS TRUE)))) ORDER BY ((vt2.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0))<=((vt2.c0))))/(((vt2.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((vt2.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((vt2.c0))<=((vt2.c0))))/(((vt2.c0) IS TRUE)))) ORDER BY ((vt2.c0) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((((vt2.c0))<=((vt2.c0))))/(((vt2.c0) IS TRUE)))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((vt2.c0) NOTNULL) DESC  NULLS FIRST);
SELECT ALL * FROM v0, vt0, vt2 WHERE ((((((vt2.c0))<=((vt2.c0))))/(((vt2.c0) IS TRUE)))) ORDER BY ((vt2.c0) NOTNULL) DESC  NULLS FIRST;
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))AND(TYPEOF(DISTINCT v0.c0))) INNER JOIN v0 ON (- (((vt0.c0)>(v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))AND(TYPEOF(DISTINCT v0.c0))) INNER JOIN v0 ON (- (((vt0.c0)>(v0.c0)))));
SELECT ALL * FROM vt2 LEFT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))AND(TYPEOF(DISTINCT v0.c0))) INNER JOIN v0 ON (- (((vt0.c0)>(v0.c0)))) WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt2 LEFT OUTER JOIN vt0 ON ((CAST(vt2.c0 AS BLOB))AND(TYPEOF(DISTINCT v0.c0))) INNER JOIN v0 ON (- (((vt0.c0)>(v0.c0)))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((((v0.c0))==((vt0.c0))))/((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((vt0.c0))))/((- (v0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((((v0.c0))==((vt0.c0))))/((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((((v0.c0))=((vt0.c0))))/((- (v0.c0))))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE ((((((v0.c0))==((vt0.c0))))/((- (v0.c0)))));
SELECT ALL * FROM vt2 INNER JOIN v0 ON ((vt0.c0) NOT NULL) COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.41471207341009464 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt2.c0) NOT BETWEEN (0.7251105049716845) AND (vt2.c0)) THEN ((vt2.c0)%(vt0.c0)) WHEN CAST(-1549507503 AS BLOB) THEN CAST(vt2.c0 AS INTEGER) WHEN ((vt0.c0) NOT NULL) THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt0.c0 THEN vt2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt2.c0) NOT BETWEEN (0.7251105049716845) AND (vt2.c0)) THEN ((vt2.c0)%(vt0.c0)) WHEN CAST(-1549507503 AS BLOB) THEN CAST(vt2.c0 AS INTEGER) WHEN ((vt0.c0) NOT NULL) THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt0.c0 THEN vt2.c0 END END) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON ((vt0.c0) NOT NULL) COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.41471207341009464);
SELECT ALL * FROM vt2 INNER JOIN v0 ON ((vt0.c0) NOT NULL) COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.41471207341009464 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt2.c0) NOT BETWEEN (0.7251105049716845) AND (vt2.c0)) THEN ((vt2.c0)%(vt0.c0)) WHEN CAST(-1549507503 AS BLOB) THEN CAST(vt2.c0 AS INTEGER) WHEN ((vt0.c0) NOT NULL) THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt0.c0 THEN vt2.c0 END END);
SELECT SUM(count) FROM (SELECT ALL ((CASE (vt0.c0 IN ())  WHEN ((vt2.c0) NOT BETWEEN (0.7251105049716845) AND (vt2.c0)) THEN ((vt2.c0)%(vt0.c0)) WHEN CAST(-1549507503 AS BLOB) THEN CAST(vt2.c0 AS INTEGER) WHEN ((vt0.c0) NOT NULL) THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt0.c0 THEN vt2.c0 END END) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON ((vt0.c0) NOT NULL) COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.41471207341009464);
SELECT ALL * FROM vt2 INNER JOIN v0 ON ((vt0.c0) NOT NULL) COLLATE BINARY LEFT OUTER JOIN vt0 ON 0.41471207341009464 WHERE (CASE (vt0.c0 IN ())  WHEN ((vt2.c0) NOT BETWEEN (0.7251105049716845) AND (vt2.c0)) THEN ((vt2.c0)%(vt0.c0)) WHEN CAST(-1549507503 AS BLOB) THEN CAST(vt2.c0 AS INTEGER) WHEN ((vt0.c0) NOT NULL) THEN vt2.c0 COLLATE BINARY ELSE CASE WHEN vt0.c0 THEN vt2.c0 END END);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) IS FALSE));
SELECT * FROM vt0 CROSS JOIN vt2 ON (NOT (CAST(0.15242580468540112 AS TEXT))) CROSS JOIN v0 ON ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt2.c0)|(vt2.c0)))) WHERE (((((vt2.c0) NOT BETWEEN (0.8498322860339331) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (0.8498322860339331) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON (NOT (CAST(0.15242580468540112 AS TEXT))) CROSS JOIN v0 ON ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt2.c0)|(vt2.c0)))));
SELECT * FROM vt0 CROSS JOIN vt2 ON (NOT (CAST(0.15242580468540112 AS TEXT))) CROSS JOIN v0 ON ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt2.c0)|(vt2.c0)))) WHERE (((((vt2.c0) NOT BETWEEN (0.8498322860339331) AND (vt0.c0))) IS FALSE));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOT BETWEEN (0.8498322860339331) AND (vt0.c0))) IS FALSE)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON (NOT (CAST(0.15242580468540112 AS TEXT))) CROSS JOIN v0 ON ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt2.c0)|(vt2.c0)))));
SELECT * FROM vt0 CROSS JOIN vt2 ON (NOT (CAST(0.15242580468540112 AS TEXT))) CROSS JOIN v0 ON ((((vt2.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN (((vt2.c0)|(vt2.c0)))) WHERE (((((vt2.c0) NOT BETWEEN (0.8498322860339331) AND (vt0.c0))) IS FALSE));
SELECT ALL * FROM vt2, v0, vt0 WHERE (CASE WHEN 283440211 THEN CASE vt2.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 283440211 THEN CASE vt2.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (CASE WHEN 283440211 THEN CASE vt2.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT SUM(count) FROM (SELECT ((CASE WHEN 283440211 THEN CASE vt2.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (CASE WHEN 283440211 THEN CASE vt2.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END END);
SELECT COUNT(*) FROM vt2 WHERE (CAST((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS BLOB)) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (CAST((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS BLOB)) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (CAST((((vt2.c0)) NOT BETWEEN ((vt2.c0)) AND ((vt2.c0))) AS BLOB));
SELECT * FROM vt2, vt0 WHERE ((((vt0.c0 IN ()))-(((((((((vt2.c0)OR(-1.984217976E9)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))-(((((((((vt2.c0)OR(-1.984217976E9)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0);
SELECT * FROM vt2, vt0 WHERE ((((vt0.c0 IN ()))-(((((((((vt2.c0)OR(-1.984217976E9)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ()))-(((((((((vt2.c0)OR(-1.984217976E9)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))) IS TRUE)  as count FROM vt2, vt0);
SELECT * FROM vt2, vt0 WHERE ((((vt0.c0 IN ()))-(((((((((vt2.c0)OR(-1.984217976E9)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))));
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.9578814684242808)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.9578814684242808)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.9578814684242808)) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.9578814684242808)) AS BLOB)) IS TRUE)  as count FROM vt0);
SELECT COUNT(*) FROM vt0 WHERE (CAST(((vt0.c0) BETWEEN (vt0.c0) AND (0.9578814684242808)) AS BLOB));
SELECT * FROM v0 CROSS JOIN vt2 ON '-1130280829' WHERE (NULLIF(DISTINCT CAST(vt2.c0 AS BLOB), (((v0.c0, v0.c0, v0.c0))<=((0.5388015945095622, vt2.c0, v0.c0))))) ORDER BY (((653300045)) NOT BETWEEN ((((v0.c0)OR(vt2.c0)))) AND ((x''))) DESC, vt2.c0 COLLATE NOCASE, (CAST(vt2.c0 AS REAL) IN (CAST(0xffffffffbc6ea3c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt2.c0 AS BLOB), (((v0.c0, v0.c0, v0.c0))<=((0.5388015945095622, vt2.c0, v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON '-1130280829' ORDER BY (((653300045)) NOT BETWEEN ((((v0.c0)OR(vt2.c0)))) AND ((x''))) DESC, vt2.c0 COLLATE NOCASE, (CAST(vt2.c0 AS REAL) IN (CAST(0Xffffffffbc6ea3c0 AS NUMERIC))) DESC);
SELECT * FROM v0 CROSS JOIN vt2 ON '-1130280829' WHERE (NULLIF(DISTINCT CAST(vt2.c0 AS BLOB), (((v0.c0, v0.c0, v0.c0))<=((0.5388015945095622, vt2.c0, v0.c0))))) ORDER BY (((653300045)) NOT BETWEEN ((((v0.c0)OR(vt2.c0)))) AND ((x''))) DESC, vt2.c0 COLLATE NOCASE, (CAST(vt2.c0 AS REAL) IN (CAST(0xffffffffbc6ea3c0 AS NUMERIC))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((NULLIF(DISTINCT CAST(vt2.c0 AS BLOB), (((v0.c0, v0.c0, v0.c0))<=((0.5388015945095622, vt2.c0, v0.c0))))) IS TRUE)  as count FROM v0 CROSS JOIN vt2 ON '-1130280829' ORDER BY (((653300045)) NOT BETWEEN ((((v0.c0)OR(vt2.c0)))) AND ((x''))) DESC, vt2.c0 COLLATE NOCASE, (CAST(vt2.c0 AS REAL) IN (CAST(0Xffffffffbc6ea3c0 AS NUMERIC))) DESC);
SELECT * FROM v0 CROSS JOIN vt2 ON '-1130280829' WHERE (NULLIF(DISTINCT CAST(vt2.c0 AS BLOB), (((v0.c0, v0.c0, v0.c0))<=((0.5388015945095622, vt2.c0, v0.c0))))) ORDER BY (((653300045)) NOT BETWEEN ((((v0.c0)OR(vt2.c0)))) AND ((x''))) DESC, vt2.c0 COLLATE NOCASE, (CAST(vt2.c0 AS REAL) IN (CAST(0xffffffffbc6ea3c0 AS NUMERIC))) DESC;
SELECT ALL * FROM v0, vt2, vt0 WHERE (((((((((vt2.c0)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c0)))OR((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt2.c0)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c0)))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL * FROM v0, vt2, vt0 WHERE (((((((((vt2.c0)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c0)))OR((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((((vt2.c0)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c0)))OR((NOT (v0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL * FROM v0, vt2, vt0 WHERE (((((((((vt2.c0)OR(vt2.c0)))OR(v0.c0)))OR(vt0.c0)))OR((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT ALL ((((+ (vt0.c0)) IN ())) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (((+ (vt0.c0)) IN ()));
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) AS REAL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) AS REAL));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) AS REAL)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)) AS REAL));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (CAST((+ (v0.c0)) AS INTEGER)) ORDER BY ((((vt2.c0)<(v0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt2 ORDER BY ((((vt2.c0)<(v0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (CAST((+ (v0.c0)) AS INTEGER)) ORDER BY ((((vt2.c0)<(v0.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CAST((+ (v0.c0)) AS INTEGER)) IS TRUE)  as count FROM v0, vt2 ORDER BY ((((vt2.c0)<(v0.c0))) IS TRUE)  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (CAST((+ (v0.c0)) AS INTEGER)) ORDER BY ((((vt2.c0)<(v0.c0))) IS TRUE)  NULLS LAST;
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((CAST(vt0.c0 AS BLOB) COLLATE RTRIM) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (CAST(vt0.c0 AS BLOB) COLLATE RTRIM) ORDER BY ((CAST(v0.c0 AS NUMERIC)) NOTNULL) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((vt2.c0)>(v0.c0)))AND(((((v0.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(v0.c0 AS BLOB)))) ORDER BY TRIM(((vt2.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((vt2.c0)AND(CAST(vt2.c0 AS NUMERIC))))OR((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0)>(v0.c0)))AND(((((v0.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt2 ORDER BY TRIM(((vt2.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((vt2.c0)AND(CAST(vt2.c0 AS NUMERIC))))OR((NOT (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((vt2.c0)>(v0.c0)))AND(((((v0.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(v0.c0 AS BLOB)))) ORDER BY TRIM(((vt2.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((vt2.c0)AND(CAST(vt2.c0 AS NUMERIC))))OR((NOT (v0.c0))))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((((vt2.c0)>(v0.c0)))AND(((((v0.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(v0.c0 AS BLOB)))) IS TRUE)  as count FROM v0, vt2 ORDER BY TRIM(((vt2.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((vt2.c0)AND(CAST(vt2.c0 AS NUMERIC))))OR((NOT (v0.c0))))  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((vt2.c0)>(v0.c0)))AND(((((v0.c0)AND(vt2.c0)))AND(vt2.c0)))))OR(CAST(v0.c0 AS BLOB)))) ORDER BY TRIM(((vt2.c0)<=(v0.c0))) DESC  NULLS FIRST, ((((vt2.c0)AND(CAST(vt2.c0 AS NUMERIC))))OR((NOT (v0.c0))))  NULLS LAST;
SELECT ALL * FROM vt0, vt2 WHERE ((CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE -1000125227 END IN (CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, CAST(vt2.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE -1000125227 END IN (CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, CAST(vt2.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE ((CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE -1000125227 END IN (CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, CAST(vt2.c0 AS BLOB))));
SELECT SUM(count) FROM (SELECT ALL (((CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE -1000125227 END IN (CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, CAST(vt2.c0 AS BLOB)))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE ((CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 ELSE -1000125227 END IN (CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt2.c0 END, CAST(vt2.c0 AS BLOB))));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) WHERE (CASE IFNULL(v0.c0, v0.c0)  WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END THEN (((vt0.c0))=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(v0.c0, v0.c0)  WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END THEN (((vt0.c0))==((v0.c0))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) WHERE (CASE IFNULL(v0.c0, v0.c0)  WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END THEN (((vt0.c0))=((v0.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE IFNULL(v0.c0, v0.c0)  WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END THEN (((vt0.c0))==((v0.c0))) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END));
SELECT ALL COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON QUOTE(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END) WHERE (CASE IFNULL(v0.c0, v0.c0)  WHEN CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c0 END THEN (((vt0.c0))=((v0.c0))) END);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (vt2.c0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN (((x'a766'))<=((v0.c0))) THEN NULL ELSE CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 2.028685947E9 END END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN (((x'a766'))<=((v0.c0))) THEN NULL ELSE CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 2.028685947E9 END END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN (((x'a766'))<=((v0.c0))) THEN NULL ELSE CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 2.028685947E9 END END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN (((x'a766'))<=((v0.c0))) THEN NULL ELSE CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 2.028685947E9 END END) IS TRUE)  as count FROM v0, vt0);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN CASE NULL  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)) THEN CASE WHEN vt0.c0 THEN v0.c0 END WHEN (vt0.c0 IN ()) THEN ((vt0.c0) NOTNULL) WHEN ((vt0.c0) IS FALSE) THEN ((((vt0.c0)AND(vt0.c0)))AND(v0.c0)) WHEN (((x'a766'))<=((v0.c0))) THEN NULL ELSE CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN 2.028685947E9 END END);
SELECT ALL * FROM v0, vt2 WHERE ((vt2.c0 IN ((vt2.c0 IN ())))) ORDER BY vt2.c0 DESC;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN ((vt2.c0 IN ())))) IS TRUE)  as count FROM v0, vt2 ORDER BY vt2.c0 DESC);
SELECT ALL * FROM v0, vt2 WHERE ((vt2.c0 IN ((vt2.c0 IN ())))) ORDER BY vt2.c0 DESC;
SELECT SUM(count) FROM (SELECT (((vt2.c0 IN ((vt2.c0 IN ())))) IS TRUE)  as count FROM v0, vt2 ORDER BY vt2.c0 DESC);
SELECT ALL * FROM v0, vt2 WHERE ((vt2.c0 IN ((vt2.c0 IN ())))) ORDER BY vt2.c0 DESC;
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (NOT (vt2.c0)) THEN (~ (vt2.c0)) WHEN vt2.c0 THEN ((vt2.c0)>>(NULL)) WHEN ((v0.c0)=(vt0.c0)) THEN NULLIF('Xâ±¼', v0.c0) ELSE 'Sn' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN (NOT (vt2.c0)) THEN (~ (vt2.c0)) WHEN vt2.c0 THEN ((vt2.c0)>>(NULL)) WHEN ((v0.c0)=(vt0.c0)) THEN NULLIF('Xâ±¼', v0.c0) ELSE 'Sn' END) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (NOT (vt2.c0)) THEN (~ (vt2.c0)) WHEN vt2.c0 THEN ((vt2.c0)>>(NULL)) WHEN ((v0.c0)=(vt0.c0)) THEN NULLIF('Xâ±¼', v0.c0) ELSE 'Sn' END);
SELECT SUM(count) FROM (SELECT ALL ((CASE v0.c0 COLLATE NOCASE  WHEN (NOT (vt2.c0)) THEN (~ (vt2.c0)) WHEN vt2.c0 THEN ((vt2.c0)>>(NULL)) WHEN ((v0.c0)=(vt0.c0)) THEN NULLIF('Xâ±¼', v0.c0) ELSE 'Sn' END) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL COUNT(*) FROM v0, vt0, vt2 WHERE (CASE v0.c0 COLLATE NOCASE  WHEN (NOT (vt2.c0)) THEN (~ (vt2.c0)) WHEN vt2.c0 THEN ((vt2.c0)>>(NULL)) WHEN ((v0.c0)=(vt0.c0)) THEN NULLIF('Xâ±¼', v0.c0) ELSE 'Sn' END);
SELECT ALL * FROM vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (NULL);
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN v0 ON NULLIF(((v0.c0)<=(vt2.c0)), ((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0))) WHERE (CASE WHEN x'' THEN vt2.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt2.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON NULLIF(((v0.c0)<=(vt2.c0)), ((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0))));
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN v0 ON NULLIF(((v0.c0)<=(vt2.c0)), ((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0))) WHERE (CASE WHEN x'' THEN vt2.c0 END COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN x'' THEN vt2.c0 END COLLATE RTRIM) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON NULLIF(((v0.c0)<=(vt2.c0)), ((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0))));
SELECT COUNT(*) FROM vt2 RIGHT OUTER JOIN v0 ON NULLIF(((v0.c0)<=(vt2.c0)), ((((((((vt2.c0)AND(vt2.c0)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0))) WHERE (CASE WHEN x'' THEN vt2.c0 END COLLATE RTRIM);
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS INTEGER)) ISNULL) WHERE ((((((((vt0.c0)OR(NULL)))AND(v0.c0))))<(((v0.c0 IN (v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(NULL)))AND(v0.c0))))<(((v0.c0 IN (v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS INTEGER)) ISNULL) WHERE ((((((((vt0.c0)OR(NULL)))AND(v0.c0))))<(((v0.c0 IN (v0.c0, vt0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((((vt0.c0)OR(NULL)))AND(v0.c0))))<(((v0.c0 IN (v0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS INTEGER)) ISNULL));
SELECT ALL * FROM vt0 LEFT OUTER JOIN v0 ON ((CAST(v0.c0 AS INTEGER)) ISNULL) WHERE ((((((((vt0.c0)OR(NULL)))AND(v0.c0))))<(((v0.c0 IN (v0.c0, vt0.c0))))));
SELECT * FROM v0, vt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE (NULL);
SELECT SUM(count) FROM (SELECT ((NULL) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE (NULL);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((((vt0.c0)AND(vt2.c0)))OR(vt0.c0)) COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (((((vt0.c0)%(vt2.c0))) NOT BETWEEN (((vt2.c0)<(vt2.c0))) AND (((((vt2.c0)AND(v0.c0)))AND(vt2.c0))))) ORDER BY CAST('-411638920' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt2.c0))) NOT BETWEEN (((vt2.c0)<(vt2.c0))) AND (((((vt2.c0)AND(v0.c0)))AND(vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY CAST('-411638920' AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (((((vt0.c0)%(vt2.c0))) NOT BETWEEN (((vt2.c0)<(vt2.c0))) AND (((((vt2.c0)AND(v0.c0)))AND(vt2.c0))))) ORDER BY CAST('-411638920' AS INTEGER) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0)%(vt2.c0))) NOT BETWEEN (((vt2.c0)<(vt2.c0))) AND (((((vt2.c0)AND(v0.c0)))AND(vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2 ORDER BY CAST('-411638920' AS INTEGER) ASC);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (((((vt0.c0)%(vt2.c0))) NOT BETWEEN (((vt2.c0)<(vt2.c0))) AND (((((vt2.c0)AND(v0.c0)))AND(vt2.c0))))) ORDER BY CAST('-411638920' AS INTEGER) ASC;
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) ISNULL), v0.c0, ((v0.c0)LIKE(v0.c0))))<=(((v0.c0 IN (v0.c0)), (NOT (v0.c0)), (((0.559443009247855))<=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL), v0.c0, ((v0.c0)LIKE(v0.c0))))<=(((v0.c0 IN (v0.c0)), (NOT (v0.c0)), (((0.559443009247855))<=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) ISNULL), v0.c0, ((v0.c0)LIKE(v0.c0))))<=(((v0.c0 IN (v0.c0)), (NOT (v0.c0)), (((0.559443009247855))<=((v0.c0)))))));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0) ISNULL), v0.c0, ((v0.c0)LIKE(v0.c0))))<=(((v0.c0 IN (v0.c0)), (NOT (v0.c0)), (((0.559443009247855))<=((v0.c0))))))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((((((v0.c0) ISNULL), v0.c0, ((v0.c0)LIKE(v0.c0))))<=(((v0.c0 IN (v0.c0)), (NOT (v0.c0)), (((0.559443009247855))<=((v0.c0)))))));
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST((v0.c0 IN (0.9301549310461171)) AS BLOB) WHERE ((((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt0.c0, 0.6339007962898597, v0.c0))))/(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c0)%((v0.c0 IN (v0.c0))))  NULLS LAST, x'' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt0.c0, 0.6339007962898597, v0.c0))))/(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((v0.c0 IN (0.9301549310461171)) AS BLOB) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c0)%((v0.c0 IN (v0.c0))))  NULLS LAST, x'' COLLATE BINARY);
SELECT * FROM vt0 FULL OUTER JOIN v0 ON CAST((v0.c0 IN (0.9301549310461171)) AS BLOB) WHERE ((((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt0.c0, 0.6339007962898597, v0.c0))))/(CAST(vt0.c0 AS BLOB)))) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c0)%((v0.c0 IN (v0.c0))))  NULLS LAST, x'' COLLATE BINARY;
SELECT SUM(count) FROM (SELECT (((((((vt0.c0, v0.c0, x'')) NOT BETWEEN ((v0.c0, x'', v0.c0)) AND ((vt0.c0, 0.6339007962898597, v0.c0))))/(CAST(vt0.c0 AS BLOB)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN v0 ON CAST((v0.c0 IN (0.9301549310461171)) AS BLOB) ORDER BY ((((((v0.c0) BETWEEN (vt0.c0) AND (v0.c0)))OR(vt0.c0 COLLATE RTRIM)))AND((vt0.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c0)%((v0.c0 IN (v0.c0))))  NULLS LAST, x'' COLLATE BINARY);
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((load_extension(vt0.c0)) NOT BETWEEN (-1305956708) AND (((vt0.c0)IS NOT(vt0.c0)))) WHERE (((CAST(v0.c0 AS TEXT))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((load_extension(vt0.c0)) NOT BETWEEN (-1305956708) AND (((vt0.c0)IS NOT(vt0.c0)))));
SELECT COUNT(*) FROM vt0 INNER JOIN v0 ON ((load_extension(vt0.c0)) NOT BETWEEN (-1305956708) AND (((vt0.c0)IS NOT(vt0.c0)))) WHERE (((CAST(v0.c0 AS TEXT))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((CAST(v0.c0 AS TEXT))IS NOT(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))))) IS TRUE)  as count FROM vt0 INNER JOIN v0 ON ((load_extension(vt0.c0)) NOT BETWEEN (-1305956708) AND (((vt0.c0)IS NOT(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))OR('-765953607')))OR((- (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))AND(((x'')<>(vt0.c0))))) ORDER BY (NOT ((vt0.c0 IN ()))) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))OR('-765953607')))OR((- (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))AND(((x'')<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ()))) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))OR('-765953607')))OR((- (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))AND(((x'')<>(vt0.c0))))) ORDER BY (NOT ((vt0.c0 IN ()))) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((((((((- (vt0.c0)))OR('-765953607')))OR((- (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))AND(((x'')<>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (NOT ((vt0.c0 IN ()))) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(vt0.c0))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE ((((((((((- (vt0.c0)))OR('-765953607')))OR((- (vt0.c0)))))OR(((vt0.c0)<(vt0.c0)))))AND(((x'')<>(vt0.c0))))) ORDER BY (NOT ((vt0.c0 IN ()))) ASC, (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))||(vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0) IS FALSE) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) IS FALSE) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0) IS FALSE) IN ()) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY (((v0.c0) IS FALSE) IN ()) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY (((v0.c0) IS FALSE) IN ()) ASC  NULLS FIRST;
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN vt0 ON vt0.c0);
SELECT ALL * FROM vt2 RIGHT OUTER JOIN vt0 ON vt0.c0 WHERE (CAST(((vt0.c0)*(vt0.c0)) AS NUMERIC));
SELECT COUNT(*) FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt2.c0))>((vt2.c0)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt2.c0))>((vt2.c0)))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((((vt0.c0) IS TRUE)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt2.c0))>((vt2.c0)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt2.c0))>((vt2.c0)))) AND ((NOT (vt0.c0))))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((((vt0.c0) IS TRUE)) ISNULL)  NULLS FIRST);
SELECT COUNT(*) FROM vt0, vt2 WHERE (((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt2.c0))>((vt2.c0)))) AND ((NOT (vt0.c0))))) ORDER BY ((((vt0.c0) IS TRUE)) ISNULL)  NULLS FIRST;
SELECT * FROM vt0 WHERE (CASE WHEN ABS(vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN 0.5116340427647283 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) NOTNULL) END) ORDER BY ((((vt0.c0)OR(CAST(vt0.c0 AS TEXT))))OR(CAST(0.47348841431899813 AS NUMERIC))) DESC, ((((0xffffffffe731cc0c)AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN 0.5116340427647283 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(CAST(vt0.c0 AS TEXT))))OR(CAST(0.47348841431899813 AS NUMERIC))) DESC, ((((0xffffffffe731cc0c)AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ABS(vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN 0.5116340427647283 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) NOTNULL) END) ORDER BY ((((vt0.c0)OR(CAST(vt0.c0 AS TEXT))))OR(CAST(0.47348841431899813 AS NUMERIC))) DESC, ((((0xffffffffe731cc0c)AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ABS(vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN 0.5116340427647283 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) NOTNULL) END) IS TRUE)  as count FROM vt0 ORDER BY ((((vt0.c0)OR(CAST(vt0.c0 AS TEXT))))OR(CAST(0.47348841431899813 AS NUMERIC))) DESC, ((((0xffffffffe731cc0c)AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))) ASC);
SELECT * FROM vt0 WHERE (CASE WHEN ABS(vt0.c0) THEN UPPER(DISTINCT vt0.c0) WHEN 0.5116340427647283 THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN vt0.c0 COLLATE BINARY THEN ((vt0.c0)/(x'')) ELSE ((vt0.c0) NOTNULL) END) ORDER BY ((((vt0.c0)OR(CAST(vt0.c0 AS TEXT))))OR(CAST(0.47348841431899813 AS NUMERIC))) DESC, ((((0xffffffffe731cc0c)AND((vt0.c0 IN (vt0.c0)))))AND(((vt0.c0)+(vt0.c0)))) ASC;
SELECT ALL * FROM vt2, vt0, v0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt2.c0 END)<>(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt2.c0 END)<>(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL * FROM vt2, vt0, v0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt2.c0 END)<>(((v0.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL ((((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt2.c0 END)<>(((v0.c0) NOT NULL)))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL * FROM vt2, vt0, v0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN v0.c0 WHEN vt2.c0 THEN v0.c0 WHEN vt0.c0 THEN vt2.c0 END)<>(((v0.c0) NOT NULL))));
SELECT * FROM vt2 WHERE ((((((vt2.c0 IN ()))OR(LOWER(DISTINCT vt2.c0))))OR(vt2.c0 COLLATE BINARY))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0 IN ()))OR(LOWER(DISTINCT vt2.c0))))OR(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt2 WHERE ((((((vt2.c0 IN ()))OR(LOWER(DISTINCT vt2.c0))))OR(vt2.c0 COLLATE BINARY))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) IS TRUE)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0 IN ()))OR(LOWER(DISTINCT vt2.c0))))OR(vt2.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt2 ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) IS TRUE)  NULLS LAST);
SELECT * FROM vt2 WHERE ((((((vt2.c0 IN ()))OR(LOWER(DISTINCT vt2.c0))))OR(vt2.c0 COLLATE BINARY))) ORDER BY ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt2.c0))) IS TRUE)  NULLS LAST;
SELECT * FROM vt2, vt0, v0 WHERE (((CASE 0X6b352fb7  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN '\rC|k' THEN v0.c0 ELSE vt0.c0 END)%(0.26264455448096635 COLLATE NOCASE))) ORDER BY (((vt2.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((x'') NOTNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE 0x6b352fb7  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN '\rC|k' THEN v0.c0 ELSE vt0.c0 END)%(0.26264455448096635 COLLATE NOCASE))) IS TRUE)  as count FROM vt2 NOT INDEXED, vt0, v0 ORDER BY (((vt2.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((x'') NOTNULL)))) ASC  NULLS LAST);
SELECT * FROM vt2, vt0, v0 WHERE (((CASE 0X6b352fb7  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN '\rC|k' THEN v0.c0 ELSE vt0.c0 END)%(0.26264455448096635 COLLATE NOCASE))) ORDER BY (((vt2.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((x'') NOTNULL)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((CASE 0x6b352fb7  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN '\rC|k' THEN v0.c0 ELSE vt0.c0 END)%(0.26264455448096635 COLLATE NOCASE))) IS TRUE)  as count FROM vt2 NOT INDEXED, vt0, v0 ORDER BY (((vt2.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((x'') NOTNULL)))) ASC  NULLS LAST);
SELECT * FROM vt2, vt0, v0 WHERE (((CASE 0X6b352fb7  WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN NULL WHEN '\rC|k' THEN v0.c0 ELSE vt0.c0 END)%(0.26264455448096635 COLLATE NOCASE))) ORDER BY (((vt2.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((((x'') NOTNULL)))) ASC  NULLS LAST;
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0)<(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0)<(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (((((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)OR(TYPEOF(DISTINCT vt0.c0))))AND(((vt0.c0)<(vt0.c0)))));
SELECT ALL * FROM vt0 CROSS JOIN vt2 ON ((((((((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)OR(ABS(DISTINCT vt0.c0))))AND(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt2.c0) IS FALSE))) WHERE (((((((0.9093339798838604)AND(vt2.c0)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((0.9093339798838604)AND(vt2.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ((((((((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)OR(ABS(DISTINCT vt0.c0))))AND(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt2.c0) IS FALSE))));
SELECT ALL * FROM vt0 CROSS JOIN vt2 ON ((((((((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)OR(ABS(DISTINCT vt0.c0))))AND(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt2.c0) IS FALSE))) WHERE (((((((0.9093339798838604)AND(vt2.c0)))AND(vt0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((((0.9093339798838604)AND(vt2.c0)))AND(vt0.c0))) NOTNULL)) IS TRUE)  as count FROM vt0 CROSS JOIN vt2 ON ((((((((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)OR(ABS(DISTINCT vt0.c0))))AND(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt2.c0) IS FALSE))));
SELECT ALL * FROM vt0 CROSS JOIN vt2 ON ((((((((CASE WHEN vt0.c0 THEN vt2.c0 ELSE vt0.c0 END)OR(ABS(DISTINCT vt0.c0))))AND(((((((((vt0.c0)OR(vt2.c0)))OR(vt2.c0)))OR(vt0.c0)))AND(vt0.c0)))))AND(vt0.c0 COLLATE NOCASE)))OR(((vt2.c0) IS FALSE))) WHERE (((((((0.9093339798838604)AND(vt2.c0)))AND(vt0.c0))) NOTNULL));
SELECT COUNT(*) FROM vt2 WHERE ((((((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))<>((0.7369274325182716, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(CHANGES()))) ORDER BY CAST((((vt2.c0, vt2.c0, ''))<=((vt2.c0, NULL, vt2.c0))) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))<>((0.7369274325182716, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(CHANGES()))) IS TRUE)  as count FROM vt2 ORDER BY CAST((((vt2.c0, vt2.c0, ''))<=((vt2.c0, NULL, vt2.c0))) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((((((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))<>((0.7369274325182716, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(CHANGES()))) ORDER BY CAST((((vt2.c0, vt2.c0, ''))<=((vt2.c0, NULL, vt2.c0))) AS INTEGER)  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))<>((0.7369274325182716, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(CHANGES()))) IS TRUE)  as count FROM vt2 ORDER BY CAST((((vt2.c0, vt2.c0, ''))<=((vt2.c0, NULL, vt2.c0))) AS INTEGER)  NULLS FIRST);
SELECT COUNT(*) FROM vt2 WHERE ((((((((vt2.c0, vt2.c0, vt2.c0, vt2.c0, vt2.c0))<>((0.7369274325182716, vt2.c0, vt2.c0, vt2.c0, vt2.c0))))OR(((vt2.c0) BETWEEN (vt2.c0) AND (vt2.c0)))))AND(CHANGES()))) ORDER BY CAST((((vt2.c0, vt2.c0, ''))<=((vt2.c0, NULL, vt2.c0))) AS INTEGER)  NULLS FIRST;
SELECT * FROM vt0, v0, vt2 NOT INDEXED WHERE (((v0.c0) NOT BETWEEN (vt2.c0) AND ((~ (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt2.c0) AND ((~ (vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 NOT INDEXED WHERE (((v0.c0) NOT BETWEEN (vt2.c0) AND ((~ (vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((v0.c0) NOT BETWEEN (vt2.c0) AND ((~ (vt2.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 NOT INDEXED WHERE (((v0.c0) NOT BETWEEN (vt2.c0) AND ((~ (vt2.c0)))));
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((v0.c0)<(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((v0.c0)<(CAST(vt0.c0 AS NUMERIC))));
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)<(CAST(vt0.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT COUNT(*) FROM vt2, v0, vt0 WHERE (((v0.c0)<(CAST(vt0.c0 AS NUMERIC))));
SELECT ALL * FROM v0, vt2 WHERE ((((((vt2.c0)IS(vt2.c0)), ((((vt2.c0)AND(vt2.c0)))OR(v0.c0)), v0.c0))>((COALESCE(vt2.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0)IS(vt2.c0)), ((((vt2.c0)AND(vt2.c0)))OR(v0.c0)), v0.c0))>((COALESCE(vt2.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE ((((((vt2.c0)IS(vt2.c0)), ((((vt2.c0)AND(vt2.c0)))OR(v0.c0)), v0.c0))>((COALESCE(vt2.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0)IS(vt2.c0)), ((((vt2.c0)AND(vt2.c0)))OR(v0.c0)), v0.c0))>((COALESCE(vt2.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0)))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE ((((((vt2.c0)IS(vt2.c0)), ((((vt2.c0)AND(vt2.c0)))OR(v0.c0)), v0.c0))>((COALESCE(vt2.c0, v0.c0, v0.c0, v0.c0), ((v0.c0) NOT NULL), ((v0.c0) NOT BETWEEN (vt2.c0) AND (v0.c0))))));
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL * FROM vt2, vt0, v0 WHERE (vt0.c0);
SELECT ALL * FROM vt2, v0 WHERE ((- (vt2.c0))) ORDER BY ((((((v0.c0)OR(vt2.c0)))AND(vt2.c0))) BETWEEN (0.7610475994591211) AND (CASE WHEN vt2.c0 THEN v0.c0 END)), vt2.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt2.c0))) IS TRUE)  as count FROM vt2, v0 ORDER BY ((((((v0.c0)OR(vt2.c0)))AND(vt2.c0))) BETWEEN (0.7610475994591211) AND (CASE WHEN vt2.c0 THEN v0.c0 END)), vt2.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt2, v0 WHERE ((- (vt2.c0))) ORDER BY ((((((v0.c0)OR(vt2.c0)))AND(vt2.c0))) BETWEEN (0.7610475994591211) AND (CASE WHEN vt2.c0 THEN v0.c0 END)), vt2.c0 ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((- (vt2.c0))) IS TRUE)  as count FROM vt2, v0 ORDER BY ((((((v0.c0)OR(vt2.c0)))AND(vt2.c0))) BETWEEN (0.7610475994591211) AND (CASE WHEN vt2.c0 THEN v0.c0 END)), vt2.c0 ASC  NULLS FIRST);
SELECT ALL * FROM vt2, v0 WHERE ((- (vt2.c0))) ORDER BY ((((((v0.c0)OR(vt2.c0)))AND(vt2.c0))) BETWEEN (0.7610475994591211) AND (CASE WHEN vt2.c0 THEN v0.c0 END)), vt2.c0 ASC  NULLS FIRST;
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST, ((((+ (vt2.c0))))<=((NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST, ((((+ (vt2.c0))))<=((NULL))) DESC  NULLS FIRST);
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST, ((((+ (vt2.c0))))<=((NULL))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST, ((((+ (vt2.c0))))<=((NULL))) DESC  NULLS FIRST);
SELECT * FROM vt2 RIGHT OUTER JOIN v0 ON v0.c0 WHERE (v0.c0) ORDER BY CASE WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE NOCASE  NULLS LAST, ((((+ (vt2.c0))))<=((NULL))) DESC  NULLS FIRST;
SELECT ALL * FROM vt0, v0, vt2 WHERE (((vt2.c0) ISNULL) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt2.c0) ISNULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE (((vt2.c0) ISNULL) COLLATE NOCASE COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt2.c0) ISNULL) COLLATE NOCASE COLLATE BINARY) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL * FROM vt0, v0, vt2 WHERE (((vt2.c0) ISNULL) COLLATE NOCASE COLLATE BINARY);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))+(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))+(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))+(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((((~ (v0.c0)))+(((((v0.c0)AND(v0.c0)))AND(v0.c0))))) IS TRUE)  as count FROM v0);
SELECT ALL * FROM v0 WHERE ((((~ (v0.c0)))+(((((v0.c0)AND(v0.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((((vt0.c0, vt2.c0, NULL))>=((x'', '-320112848', '85unixepochQN'))))) INNER JOIN vt2 ON ((((LIKE(v0.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)==(v0.c0)))) WHERE (((vt0.c0)OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((((vt0.c0, vt2.c0, NULL))>=((x'', '-320112848', '85unixepochQN'))))) INNER JOIN vt2 ON ((((LIKE(v0.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)=(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((((vt0.c0, vt2.c0, NULL))>=((x'', '-320112848', '85unixepochQN'))))) INNER JOIN vt2 ON ((((LIKE(v0.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)==(v0.c0)))) WHERE (((vt0.c0)OR(v0.c0)) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((vt0.c0)OR(v0.c0)) COLLATE NOCASE) IS TRUE)  as count FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((((vt0.c0, vt2.c0, NULL))>=((x'', '-320112848', '85unixepochQN'))))) INNER JOIN vt2 ON ((((LIKE(v0.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)=(v0.c0)))));
SELECT ALL COUNT(*) FROM v0 LEFT OUTER JOIN vt0 ON ((((((vt0.c0) IS TRUE))OR(((vt2.c0) BETWEEN (v0.c0) AND (v0.c0)))))OR((((vt0.c0, vt2.c0, NULL))>=((x'', '-320112848', '85unixepochQN'))))) INNER JOIN vt2 ON ((((LIKE(v0.c0, vt0.c0))AND(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0)==(v0.c0)))) WHERE (((vt0.c0)OR(v0.c0)) COLLATE NOCASE);
SELECT * FROM vt2, vt0, v0 WHERE ((((((vt0.c0)|(v0.c0))))>((((((vt2.c0)AND(vt0.c0)))OR(vt2.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((0xffffffffcd8c2804) BETWEEN (vt2.c0) AND (NULL))) AND (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(v0.c0))))>((((((vt2.c0)AND(vt0.c0)))OR(vt2.c0)))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((0Xffffffffcd8c2804) BETWEEN (vt2.c0) AND (NULL))) AND (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))) ASC);
SELECT * FROM vt2, vt0, v0 WHERE ((((((vt0.c0)|(v0.c0))))>((((((vt2.c0)AND(vt0.c0)))OR(vt2.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((0xffffffffcd8c2804) BETWEEN (vt2.c0) AND (NULL))) AND (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))) ASC;
SELECT SUM(count) FROM (SELECT ALL (((((((vt0.c0)|(v0.c0))))>((((((vt2.c0)AND(vt0.c0)))OR(vt2.c0)))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((0Xffffffffcd8c2804) BETWEEN (vt2.c0) AND (NULL))) AND (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))) ASC);
SELECT * FROM vt2, vt0, v0 WHERE ((((((vt0.c0)|(v0.c0))))>((((((vt2.c0)AND(vt0.c0)))OR(vt2.c0)))))) ORDER BY ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((0xffffffffcd8c2804) BETWEEN (vt2.c0) AND (NULL))) AND (((((((((vt0.c0)AND(v0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(v0.c0)))) ASC;
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)-(vt0.c0)))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(vt0.c0)))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)-(vt0.c0)))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM)));
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)-(vt0.c0)))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (((((((vt0.c0)-(vt0.c0)))OR(ABS(vt0.c0))))OR(vt0.c0 COLLATE RTRIM)));
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE ((('-870080882')=(((vt2.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((('-870080882')==(((vt2.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE ((('-870080882')=(((vt2.c0) NOT NULL))));
SELECT SUM(count) FROM (SELECT ALL (((('-870080882')==(((vt2.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT ALL COUNT(*) FROM vt0, v0, vt2 WHERE ((('-870080882')=(((vt2.c0) NOT NULL))));
SELECT COUNT(*) FROM vt2 NATURAL JOIN vt0 WHERE (((-1449620361)GLOB(((vt2.c0)%(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((-1449620361)GLOB(((vt2.c0)%(vt2.c0))))) IS TRUE)  as count FROM vt2 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt2 NATURAL JOIN vt0 WHERE (((-1449620361)GLOB(((vt2.c0)%(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((-1449620361)GLOB(((vt2.c0)%(vt2.c0))))) IS TRUE)  as count FROM vt2 NATURAL JOIN vt0);
SELECT COUNT(*) FROM vt2 NATURAL JOIN vt0 WHERE (((-1449620361)GLOB(((vt2.c0)%(vt2.c0)))));
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ''))>=((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, 1317806469)))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ''))>=((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, 1317806469))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ''))>=((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, 1317806469)))))));
SELECT SUM(count) FROM (SELECT (((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ''))>=((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, 1317806469))))))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, vt0.c0, ''))>=((CAST(vt0.c0 AS TEXT), vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c0))<((vt0.c0, vt0.c0, 1317806469)))))));
SELECT * FROM vt0, v0, vt2 WHERE (CAST(((0.20873609994377784)&(vt2.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((0.20873609994377784)&(vt2.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE (CAST(((0.20873609994377784)&(vt2.c0)) AS NUMERIC));
SELECT SUM(count) FROM (SELECT ((CAST(((0.20873609994377784)&(vt2.c0)) AS NUMERIC)) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT * FROM vt0, v0, vt2 WHERE (CAST(((0.20873609994377784)&(vt2.c0)) AS NUMERIC));
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN LIKELIHOOD(v0.c0, 0.28381312783239687) THEN v0.c0 WHEN CAST(v0.c0 AS TEXT) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN (- (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN LIKELIHOOD(v0.c0, 0.28381312783239687) THEN v0.c0 WHEN CAST(v0.c0 AS TEXT) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN (- (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN LIKELIHOOD(v0.c0, 0.28381312783239687) THEN v0.c0 WHEN CAST(v0.c0 AS TEXT) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN (- (v0.c0)) END;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM v0 ORDER BY CASE WHEN LIKELIHOOD(v0.c0, 0.28381312783239687) THEN v0.c0 WHEN CAST(v0.c0 AS TEXT) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN (- (v0.c0)) END);
SELECT ALL COUNT(*) FROM v0 WHERE (v0.c0) ORDER BY CASE WHEN LIKELIHOOD(v0.c0, 0.28381312783239687) THEN v0.c0 WHEN CAST(v0.c0 AS TEXT) THEN ((((((((NULL)OR(v0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0)) WHEN v0.c0 COLLATE NOCASE THEN (- (v0.c0)) END;
SELECT * FROM vt0, vt2 WHERE (((((vt2.c0) ISNULL))-(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) ISNULL))-(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0, vt2 WHERE (((((vt2.c0) ISNULL))-(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) DESC;
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) ISNULL))-(vt0.c0 COLLATE BINARY))) IS TRUE)  as count FROM vt0, vt2 ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) DESC);
SELECT * FROM vt0, vt2 WHERE (((((vt2.c0) ISNULL))-(vt0.c0 COLLATE BINARY))) ORDER BY ((vt0.c0 COLLATE NOCASE) NOT BETWEEN (((vt0.c0) BETWEEN (vt2.c0) AND (vt0.c0))) AND (((vt0.c0) NOTNULL))) DESC;
SELECT * FROM vt0, vt2, v0 WHERE (QUOTE(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ORDER BY ((('3X')) BETWEEN ((json_array_length(vt0.c0, vt2.c0))) AND ((0X290dcae)));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((('3X')) BETWEEN ((json_array_length(vt0.c0, vt2.c0))) AND ((0X290dcae))));
SELECT * FROM vt0, vt2, v0 WHERE (QUOTE(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) ORDER BY ((('3X')) BETWEEN ((json_array_length(vt0.c0, vt2.c0))) AND ((0X290dcae)));
SELECT SUM(count) FROM (SELECT ALL ((QUOTE(((((v0.c0)AND(v0.c0)))OR(v0.c0)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((('3X')) BETWEEN ((json_array_length(vt0.c0, vt2.c0))) AND ((0X290dcae))));
SELECT ALL * FROM vt2, vt0 WHERE ('^ë§kF}');
SELECT SUM(count) FROM (SELECT ALL (('^ë§kF}') IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ('^ë§kF}');
SELECT SUM(count) FROM (SELECT ALL (('^ë§kF}') IS TRUE)  as count FROM vt2, vt0);
SELECT ALL * FROM vt2, vt0 WHERE ('^ë§kF}');
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0)&(vt2.c0)) THEN ((vt2.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0)&(vt2.c0)) THEN ((vt2.c0)<<(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0)&(vt2.c0)) THEN ((vt2.c0)<<(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0)&(vt2.c0)) THEN ((vt2.c0)<<(v0.c0)) END) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE (CASE CAST(vt0.c0 AS BLOB)  WHEN ((v0.c0)&(vt2.c0)) THEN ((vt2.c0)<<(v0.c0)) END);
SELECT * FROM vt2, v0 WHERE (CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS REAL) ELSE ((vt2.c0)%(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS REAL) ELSE ((vt2.c0)%(v0.c0)) END) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE (CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS REAL) ELSE ((vt2.c0)%(v0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS REAL) ELSE ((vt2.c0)%(v0.c0)) END) IS TRUE)  as count FROM vt2, v0);
SELECT * FROM vt2, v0 WHERE (CASE (NOT (v0.c0))  WHEN CAST(v0.c0 AS INTEGER) THEN CAST(v0.c0 AS REAL) ELSE ((vt2.c0)%(v0.c0)) END);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (0.19045768477342484);
SELECT SUM(count) FROM (SELECT ((0.19045768477342484) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (0.19045768477342484);
SELECT SUM(count) FROM (SELECT ((0.19045768477342484) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (0.19045768477342484);
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((0.08372400028396154)IS NOT(vt2.c0))) NOT NULL) WHERE (((0.981840290638767) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END) AND (((vt2.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.981840290638767) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END) AND (((vt2.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((0.08372400028396154)IS NOT(vt2.c0))) NOT NULL));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((0.08372400028396154)IS NOT(vt2.c0))) NOT NULL) WHERE (((0.981840290638767) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END) AND (((vt2.c0)<>(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ((((0.981840290638767) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END) AND (((vt2.c0)!=(vt0.c0))))) IS TRUE)  as count FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((0.08372400028396154)IS NOT(vt2.c0))) NOT NULL));
SELECT * FROM vt0, v0 RIGHT OUTER JOIN vt2 ON ((((0.08372400028396154)IS NOT(vt2.c0))) NOT NULL) WHERE (((0.981840290638767) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt2.c0 ELSE v0.c0 END) AND (((vt2.c0)<>(vt0.c0)))));
SELECT ALL * FROM vt0, vt2 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE ((NOT (x'')));
SELECT SUM(count) FROM (SELECT ALL (((NOT (x''))) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL * FROM vt0, vt2 WHERE ((NOT (x'')));
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ((vt0.c0) IS TRUE)  as count FROM vt0);
SELECT ALL * FROM vt0 WHERE (vt0.c0);
SELECT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN (((v0.c0)||(v0.c0))))) ORDER BY UNLIKELY(CAST(v0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(CAST(v0.c0 AS NUMERIC)));
SELECT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN (((v0.c0)||(v0.c0))))) ORDER BY UNLIKELY(CAST(v0.c0 AS NUMERIC));
SELECT SUM(count) FROM (SELECT ALL (((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN (((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY UNLIKELY(CAST(v0.c0 AS NUMERIC)));
SELECT * FROM v0 WHERE ((((((v0.c0)AND(v0.c0)))AND(v0.c0)) IN (((v0.c0)||(v0.c0))))) ORDER BY UNLIKELY(CAST(v0.c0 AS NUMERIC));
SELECT * FROM vt2 WHERE ((((((vt2.c0))>((vt2.c0)))) NOT BETWEEN (CHANGES()) AND (DATE(vt2.c0, vt2.c0, vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0))>((vt2.c0)))) NOT BETWEEN (CHANGES()) AND (DATE(vt2.c0, vt2.c0, vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((((vt2.c0))>((vt2.c0)))) NOT BETWEEN (CHANGES()) AND (DATE(vt2.c0, vt2.c0, vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0))>((vt2.c0)))) NOT BETWEEN (CHANGES()) AND (DATE(vt2.c0, vt2.c0, vt2.c0)))) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((((((vt2.c0))>((vt2.c0)))) NOT BETWEEN (CHANGES()) AND (DATE(vt2.c0, vt2.c0, vt2.c0))));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((CAST(v0.c0 AS REAL))&((v0.c0 IN ())))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))&((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt2 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((CAST(v0.c0 AS REAL))&((v0.c0 IN ())))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END) IS TRUE);
SELECT SUM(count) FROM (SELECT ((((CAST(v0.c0 AS REAL))&((v0.c0 IN ())))) IS TRUE)  as count FROM v0, vt2 ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END) IS TRUE));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((CAST(v0.c0 AS REAL))&((v0.c0 IN ())))) ORDER BY ((CASE v0.c0  WHEN v0.c0 THEN vt2.c0 END) IS TRUE);
SELECT * FROM v0, vt0, vt2 WHERE (((vt2.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt2.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE (((vt2.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT SUM(count) FROM (SELECT ((((vt2.c0)GLOB(vt0.c0)) COLLATE BINARY) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE (((vt2.c0)GLOB(vt0.c0)) COLLATE BINARY);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE (((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))AND(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))AND(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))AND(NULL)) DESC;
SELECT SUM(count) FROM (SELECT ((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS TEXT)))) IS TRUE)  as count FROM vt0 ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))AND(NULL)) DESC);
SELECT ALL COUNT(*) FROM vt0 WHERE (((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS TEXT)))) ORDER BY ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)OR(vt0.c0)))AND(NULL)) DESC;
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (- (x'5bab')) END  NULLS FIRST, (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (- (x'5bab')) END  NULLS FIRST, (- (vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (- (x'5bab')) END  NULLS FIRST, (- (vt0.c0))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL (((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt0 ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (- (x'5bab')) END  NULLS FIRST, (- (vt0.c0))  NULLS LAST);
SELECT ALL * FROM vt0 WHERE ((vt0.c0 IN (vt0.c0)) COLLATE RTRIM) ORDER BY CASE WHEN vt0.c0 COLLATE NOCASE THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE vt0.c0 END ELSE (- (x'5bab')) END  NULLS FIRST, (- (vt0.c0))  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE ((+ ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (v0.c0))))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE ((+ ((NOT (v0.c0)))));
SELECT SUM(count) FROM (SELECT (((+ ((NOT (v0.c0))))) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE ((+ ((NOT (v0.c0)))));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (((((vt2.c0 COLLATE BINARY)AND((~ (v0.c0)))))AND(((v0.c0) BETWEEN (NULL) AND (vt2.c0))))) ORDER BY CAST(MAX(vt2.c0, vt2.c0, vt2.c0, vt2.c0) AS TEXT), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt2.c0 AS TEXT))), CASE WHEN (+ (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0 COLLATE BINARY)AND((~ (v0.c0)))))AND(((v0.c0) BETWEEN (NULL) AND (vt2.c0))))) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST(MAX(vt2.c0, vt2.c0, vt2.c0, vt2.c0) AS TEXT), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt2.c0 AS TEXT))), CASE WHEN (+ (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (((((vt2.c0 COLLATE BINARY)AND((~ (v0.c0)))))AND(((v0.c0) BETWEEN (NULL) AND (vt2.c0))))) ORDER BY CAST(MAX(vt2.c0, vt2.c0, vt2.c0, vt2.c0) AS TEXT), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt2.c0 AS TEXT))), CASE WHEN (+ (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0 COLLATE BINARY)AND((~ (v0.c0)))))AND(((v0.c0) BETWEEN (NULL) AND (vt2.c0))))) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST(MAX(vt2.c0, vt2.c0, vt2.c0, vt2.c0) AS TEXT), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt2.c0 AS TEXT))), CASE WHEN (+ (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, v0 WHERE (((((vt2.c0 COLLATE BINARY)AND((~ (v0.c0)))))AND(((v0.c0) BETWEEN (NULL) AND (vt2.c0))))) ORDER BY CAST(MAX(vt2.c0, vt2.c0, vt2.c0, vt2.c0) AS TEXT), ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))OR(CAST(vt2.c0 AS TEXT))), CASE WHEN (+ (v0.c0)) THEN CAST(v0.c0 AS NUMERIC) END ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(x'')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(x'')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(x'')))OR(vt0.c0)))));
SELECT SUM(count) FROM (SELECT ALL ((((((((vt0.c0)<(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(x'')))OR(vt0.c0))))) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((((((vt0.c0)<(vt0.c0)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((((vt0.c0)AND(x'')))OR(vt0.c0)))));
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(LOWER(vt2.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(vt2.c0) AS BLOB)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(LOWER(vt2.c0) AS BLOB));
SELECT SUM(count) FROM (SELECT ((CAST(LOWER(vt2.c0) AS BLOB)) IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST(LOWER(vt2.c0) AS BLOB));
SELECT ALL COUNT(*) FROM vt0, vt2, v0 NOT INDEXED WHERE ((((NOT (v0.c0)))&(((vt2.c0) NOT NULL)))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))&(((vt2.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 NOT INDEXED WHERE ((((NOT (v0.c0)))&(((vt2.c0) NOT NULL)))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL (((((NOT (v0.c0)))&(((vt2.c0) NOT NULL)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY v0.c0 DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt0, vt2, v0 NOT INDEXED WHERE ((((NOT (v0.c0)))&(((vt2.c0) NOT NULL)))) ORDER BY v0.c0 DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 END))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt2.c0 THEN vt0.c0 COLLATE NOCASE ELSE (- (0xffffffffd56eafbd)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt2.c0 THEN vt0.c0 COLLATE NOCASE ELSE (- (0xffffffffd56eafbd)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 END))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt2.c0 THEN vt0.c0 COLLATE NOCASE ELSE (- (0xffffffffd56eafbd)) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN ())) NOT BETWEEN (((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 END))) IS TRUE)  as count FROM vt2, vt0 ORDER BY CASE (vt0.c0 IN ())  WHEN vt2.c0 THEN vt0.c0 COLLATE NOCASE ELSE (- (0xffffffffd56eafbd)) END DESC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE ((((vt0.c0 IN ())) NOT BETWEEN (((((vt2.c0)AND(vt0.c0)))AND(vt0.c0))) AND (CASE vt2.c0  WHEN vt2.c0 THEN vt0.c0 END))) ORDER BY CASE (vt0.c0 IN ())  WHEN vt2.c0 THEN vt0.c0 COLLATE NOCASE ELSE (- (0xffffffffd56eafbd)) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt2, v0 WHERE (CASE (((v0.c0))>=((vt2.c0)))  WHEN vt2.c0 THEN CAST(vt2.c0 AS REAL) WHEN (v0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN ((((((((vt2.c0)OR('X1DS')))OR(v0.c0)))AND('nî')))OR(vt2.c0)) THEN CAST(1521642745 AS BLOB) END) ORDER BY UNLIKELY(v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0))>=((vt2.c0)))  WHEN vt2.c0 THEN CAST(vt2.c0 AS REAL) WHEN (v0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN ((((((((vt2.c0)OR('X1DS')))OR(v0.c0)))AND('nî')))OR(vt2.c0)) THEN CAST(1521642745 AS BLOB) END) IS TRUE)  as count FROM vt2, v0 ORDER BY UNLIKELY(v0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt2, v0 WHERE (CASE (((v0.c0))>=((vt2.c0)))  WHEN vt2.c0 THEN CAST(vt2.c0 AS REAL) WHEN (v0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN ((((((((vt2.c0)OR('X1DS')))OR(v0.c0)))AND('nî')))OR(vt2.c0)) THEN CAST(1521642745 AS BLOB) END) ORDER BY UNLIKELY(v0.c0 COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((CASE (((v0.c0))>=((vt2.c0)))  WHEN vt2.c0 THEN CAST(vt2.c0 AS REAL) WHEN (v0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN ((((((((vt2.c0)OR('X1DS')))OR(v0.c0)))AND('nî')))OR(vt2.c0)) THEN CAST(1521642745 AS BLOB) END) IS TRUE)  as count FROM vt2, v0 ORDER BY UNLIKELY(v0.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt2, v0 WHERE (CASE (((v0.c0))>=((vt2.c0)))  WHEN vt2.c0 THEN CAST(vt2.c0 AS REAL) WHEN (v0.c0 IN ()) THEN (vt2.c0 IN ()) WHEN ((((((((vt2.c0)OR('X1DS')))OR(v0.c0)))AND('nî')))OR(vt2.c0)) THEN CAST(1521642745 AS BLOB) END) ORDER BY UNLIKELY(v0.c0 COLLATE RTRIM);
SELECT COUNT(*) FROM vt0, vt2 WHERE (TRIM(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (TRIM(vt0.c0) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT ((TRIM(vt0.c0) COLLATE RTRIM) IS TRUE)  as count FROM vt0, vt2);
SELECT COUNT(*) FROM vt0, vt2 WHERE (TRIM(vt0.c0) COLLATE RTRIM);
SELECT ALL * FROM vt2, v0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (vt2.c0);
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((0.8898563743817518) ISNULL) IN ()) WHERE (CAST(((((v0.c0)AND(vt0.c0)))AND('1184770106')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(vt0.c0)))AND('1184770106')) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((0.8898563743817518) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((0.8898563743817518) ISNULL) IN ()) WHERE (CAST(((((v0.c0)AND(vt0.c0)))AND('1184770106')) AS TEXT));
SELECT SUM(count) FROM (SELECT ALL ((CAST(((((v0.c0)AND(vt0.c0)))AND('1184770106')) AS TEXT)) IS TRUE)  as count FROM v0 INNER JOIN vt0 ON (((0.8898563743817518) ISNULL) IN ()));
SELECT ALL COUNT(*) FROM v0 INNER JOIN vt0 ON (((0.8898563743817518) ISNULL) IN ()) WHERE (CAST(((((v0.c0)AND(vt0.c0)))AND('1184770106')) AS TEXT));
SELECT * FROM v0, vt2 WHERE (0xffffffffbda95617) ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbda95617) IS TRUE)  as count FROM v0, vt2 ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0, vt2 WHERE (0xffffffffbda95617) ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((0Xffffffffbda95617) IS TRUE)  as count FROM v0, vt2 ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC  NULLS FIRST);
SELECT * FROM v0, vt2 WHERE (0xffffffffbda95617) ORDER BY (((v0.c0)) NOT BETWEEN ((vt2.c0)) AND ((SQLITE_COMPILEOPTION_GET(v0.c0)))) ASC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 ELSE x'' END) BETWEEN (-221111719) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt2.c0)>=(vt2.c0)))))OR(COALESCE(vt0.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN v0.c0 ELSE x'' END) BETWEEN (-221111719) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt2.c0)>=(vt2.c0)))))OR(COALESCE(vt0.c0, v0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 ELSE x'' END) BETWEEN (-221111719) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt2.c0)>=(vt2.c0)))))OR(COALESCE(vt0.c0, v0.c0))) DESC;
SELECT SUM(count) FROM (SELECT ALL ((((CASE WHEN vt2.c0 THEN v0.c0 ELSE x'' END) BETWEEN (-221111719) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) IS TRUE)  as count FROM vt2, vt0, v0 ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt2.c0)>=(vt2.c0)))))OR(COALESCE(vt0.c0, v0.c0))) DESC);
SELECT ALL COUNT(*) FROM vt2, vt0, v0 WHERE (((CASE WHEN vt2.c0 THEN v0.c0 ELSE x'' END) BETWEEN (-221111719) AND ((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0)))))) ORDER BY ((((vt0.c0 COLLATE NOCASE)OR(((vt2.c0)>=(vt2.c0)))))OR(COALESCE(vt0.c0, v0.c0))) DESC;
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ('');
SELECT SUM(count) FROM (SELECT ALL (('') IS TRUE)  as count FROM vt0, vt2, v0);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE ('');
SELECT COUNT(*) FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE)<=(CAST(vt2.c0 AS NUMERIC)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0 COLLATE NOCASE)<=(CAST(vt2.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE)<=(CAST(vt2.c0 AS NUMERIC)))) ORDER BY NULL DESC;
SELECT SUM(count) FROM (SELECT ALL ((((vt2.c0 COLLATE NOCASE)<=(CAST(vt2.c0 AS NUMERIC)))) IS TRUE)  as count FROM vt2 ORDER BY NULL DESC);
SELECT COUNT(*) FROM vt2 WHERE (((vt2.c0 COLLATE NOCASE)<=(CAST(vt2.c0 AS NUMERIC)))) ORDER BY NULL DESC;
SELECT COUNT(*) FROM v0, vt2 WHERE (((((vt2.c0) NOTNULL))IS('-320112848'))) ORDER BY ((((vt2.c0)<>(vt2.c0)))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.023463301712273066 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOTNULL))IS('-320112848'))) IS TRUE)  as count FROM v0, vt2 ORDER BY ((((vt2.c0)<>(vt2.c0)))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.023463301712273066 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0, vt2 WHERE (((((vt2.c0) NOTNULL))IS('-320112848'))) ORDER BY ((((vt2.c0)<>(vt2.c0)))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.023463301712273066 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT SUM(count) FROM (SELECT ((((((vt2.c0) NOTNULL))IS('-320112848'))) IS TRUE)  as count FROM v0, vt2 ORDER BY ((((vt2.c0)<>(vt2.c0)))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.023463301712273066 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END)));
SELECT COUNT(*) FROM v0, vt2 WHERE (((((vt2.c0) NOTNULL))IS('-320112848'))) ORDER BY ((((vt2.c0)<>(vt2.c0)))LIKE(CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN 0.023463301712273066 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END));
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN '-1464797550' END)AND(((v0.c0)IS(v0.c0)))))OR((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN '-1464797550' END)AND(((v0.c0)IS(v0.c0)))))OR((- (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN '-1464797550' END)AND(((v0.c0)IS(v0.c0)))))OR((- (v0.c0)))));
SELECT SUM(count) FROM (SELECT ((((((CASE WHEN v0.c0 THEN '-1464797550' END)AND(((v0.c0)IS(v0.c0)))))OR((- (v0.c0))))) IS TRUE)  as count FROM v0 NOT INDEXED);
SELECT ALL * FROM v0 WHERE (((((CASE WHEN v0.c0 THEN '-1464797550' END)AND(((v0.c0)IS(v0.c0)))))OR((- (v0.c0)))));
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY -0.0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY -0.0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY -0.0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0 ORDER BY -0.0 ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (vt0.c0) ORDER BY -0.0 ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST('' AS REAL)) ORDER BY (((((+ (vt2.c0)))OR(((vt2.c0) NOT NULL))))OR((+ (vt2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM vt2 ORDER BY (((((+ (vt2.c0)))OR(((vt2.c0) NOT NULL))))OR((+ (vt2.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST('' AS REAL)) ORDER BY (((((+ (vt2.c0)))OR(((vt2.c0) NOT NULL))))OR((+ (vt2.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST('' AS REAL)) IS TRUE)  as count FROM vt2 ORDER BY (((((+ (vt2.c0)))OR(((vt2.c0) NOT NULL))))OR((+ (vt2.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2 WHERE (CAST('' AS REAL)) ORDER BY (((((+ (vt2.c0)))OR(((vt2.c0) NOT NULL))))OR((+ (vt2.c0)))) DESC  NULLS FIRST;
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (vt2.c0);
SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(json_array(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(json_array(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(json_array(vt0.c0, vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(json_array(vt0.c0, vt0.c0)))) IS TRUE)  as count FROM vt0);
SELECT * FROM vt0 WHERE ((((((NOT (vt0.c0)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(json_array(vt0.c0, vt0.c0))));
SELECT * FROM v0, vt0, vt2 WHERE ((((- (vt0.c0)))*(json_array_length(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))*(json_array_length(vt0.c0)))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT * FROM v0, vt0, vt2 WHERE ((((- (vt0.c0)))*(json_array_length(vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL (((((- (vt0.c0)))*(json_array_length(vt0.c0)))) IS TRUE)  as count FROM v0, vt0, vt2);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) WHEN ((0.8525585009192127)>>(v0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (~ (vt0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) ELSE vt0.c0 END WHERE (((((vt0.c0)&('0.6058033615725222'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&('0.6058033615725222'))) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) WHEN ((0.8525585009192127)>>(v0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (~ (vt0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) ELSE vt0.c0 END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) WHEN ((0.8525585009192127)>>(v0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (~ (vt0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) ELSE vt0.c0 END WHERE (((((vt0.c0)&('0.6058033615725222'))) NOT NULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)&('0.6058033615725222'))) NOT NULL)) IS TRUE)  as count FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) WHEN ((0.8525585009192127)>>(v0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (~ (vt0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) ELSE vt0.c0 END);
SELECT ALL * FROM v0 RIGHT OUTER JOIN vt0 ON CASE WHEN ABS(v0.c0) THEN ((v0.c0) IS FALSE) WHEN ((0.8525585009192127)>>(v0.c0)) THEN (vt0.c0 IN ()) WHEN CASE v0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END THEN CAST(v0.c0 AS REAL) WHEN ((((v0.c0)AND(v0.c0)))OR(v0.c0)) THEN (~ (vt0.c0)) WHEN ((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN (vt0.c0 IN (v0.c0, vt0.c0)) ELSE vt0.c0 END WHERE (((((vt0.c0)&('0.6058033615725222'))) NOT NULL));
SELECT * FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT SUM(count) FROM (SELECT ALL ((SQLITE_SOURCE_ID()) IS TRUE)  as count FROM v0);
SELECT * FROM v0 WHERE (SQLITE_SOURCE_ID());
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0;
SELECT SUM(count) FROM (SELECT ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM))) IS TRUE)  as count FROM vt0 ORDER BY vt0.c0);
SELECT ALL * FROM vt0 WHERE (((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) BETWEEN ((vt0.c0 IN ())) AND (vt0.c0 COLLATE RTRIM))) ORDER BY vt0.c0;
SELECT * FROM vt0, v0 WHERE ((((((x'e3be')) BETWEEN ((vt0.c0)) AND ((v0.c0))))|((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('gc\n?X8(î¡³', v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0)<(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'e3be')) BETWEEN ((vt0.c0)) AND ((v0.c0))))|((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('gc\n?X8(î¡³', v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)<(v0.c0 COLLATE RTRIM)) DESC);
SELECT * FROM vt0, v0 WHERE ((((((x'e3be')) BETWEEN ((vt0.c0)) AND ((v0.c0))))|((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('gc\n?X8(î¡³', v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0)<(v0.c0 COLLATE RTRIM)) DESC;
SELECT SUM(count) FROM (SELECT ALL (((((((x'e3be')) BETWEEN ((vt0.c0)) AND ((v0.c0))))|((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('gc\n?X8(î¡³', v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) IS TRUE)  as count FROM vt0, v0 ORDER BY ((vt0.c0)<(v0.c0 COLLATE RTRIM)) DESC);
SELECT * FROM vt0, v0 WHERE ((((((x'e3be')) BETWEEN ((vt0.c0)) AND ((v0.c0))))|((((v0.c0, v0.c0, vt0.c0)) NOT BETWEEN (('gc\n?X8(î¡³', v0.c0, vt0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))))) ORDER BY ((vt0.c0)<(v0.c0 COLLATE RTRIM)) DESC;
SELECT COUNT(*) FROM vt2, v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY CAST(vt2.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST(vt2.c0 AS TEXT) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt2, v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY CAST(vt2.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT SUM(count) FROM (SELECT (((- (((v0.c0) IS FALSE)))) IS TRUE)  as count FROM vt2, v0 ORDER BY CAST(vt2.c0 AS TEXT) COLLATE NOCASE DESC);
SELECT COUNT(*) FROM vt2, v0 WHERE ((- (((v0.c0) IS FALSE)))) ORDER BY CAST(vt2.c0 AS TEXT) COLLATE NOCASE DESC;
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN SUBSTR(vt0.c0, v0.c0) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN (vt0.c0 IN (v0.c0, x'')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((v0.c0) IS TRUE) END) ORDER BY ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN SUBSTR(vt0.c0, v0.c0) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN (vt0.c0 IN (v0.c0, x'')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN SUBSTR(vt0.c0, v0.c0) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN (vt0.c0 IN (v0.c0, x'')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((v0.c0) IS TRUE) END) ORDER BY ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT SUM(count) FROM (SELECT ALL ((CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN SUBSTR(vt0.c0, v0.c0) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN (vt0.c0 IN (v0.c0, x'')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((v0.c0) IS TRUE) END) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST);
SELECT COUNT(*) FROM v0, vt0 WHERE (CASE WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN SUBSTR(vt0.c0, v0.c0) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN v0.c0 WHEN (vt0.c0 IN (v0.c0, x'')) THEN CAST(vt0.c0 AS INTEGER) ELSE ((v0.c0) IS TRUE) END) ORDER BY ((((v0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) NOTNULL)  NULLS LAST;
SELECT ALL * FROM v0, vt2 WHERE ((- (((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE ((- (((v0.c0)*(v0.c0)))));
SELECT SUM(count) FROM (SELECT (((- (((v0.c0)*(v0.c0))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL * FROM v0, vt2 WHERE ((- (((v0.c0)*(v0.c0)))));
SELECT COUNT(*) FROM vt2, v0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt2.c0) ISNULL))) WHERE ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt2, v0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt2.c0) ISNULL))));
SELECT COUNT(*) FROM vt2, v0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt2.c0) ISNULL))) WHERE ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) IN ())) IS TRUE)  as count FROM vt2, v0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt2.c0) ISNULL))));
SELECT COUNT(*) FROM vt2, v0 INNER JOIN vt0 ON (((vt0.c0 IN ())) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt2.c0) ISNULL))) WHERE ((((vt2.c0) NOT BETWEEN (vt2.c0) AND (vt0.c0)) IN ()));
SELECT ALL * FROM vt2 WHERE (CASE ((vt2.c0)<=(vt2.c0))  WHEN ((vt2.c0) NOT NULL) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt2.c0)<=(vt2.c0))  WHEN ((vt2.c0) NOT NULL) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (CASE ((vt2.c0)<=(vt2.c0))  WHEN ((vt2.c0) NOT NULL) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END);
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt2.c0)<=(vt2.c0))  WHEN ((vt2.c0) NOT NULL) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END) IS TRUE)  as count FROM vt2);
SELECT ALL * FROM vt2 WHERE (CASE ((vt2.c0)<=(vt2.c0))  WHEN ((vt2.c0) NOT NULL) THEN (((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))) END);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE ((- ((('-1109942937')IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('-1109942937')IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE ((- ((('-1109942937')IS NOT(v0.c0)))));
SELECT SUM(count) FROM (SELECT ALL (((- ((('-1109942937')IS NOT(v0.c0))))) IS TRUE)  as count FROM vt0, v0, vt2);
SELECT COUNT(*) FROM vt0, v0, vt2 WHERE ((- ((('-1109942937')IS NOT(v0.c0)))));
SELECT * FROM vt2 WHERE (UNICODE((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))) ORDER BY (((((vt2.c0) NOTNULL), ('' IN ()), ((vt2.c0) NOT NULL)))==(((vt2.c0 IN ()), SUBSTR(vt2.c0, vt2.c0), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (1365194376))))) ASC  NULLS LAST, (vt2.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((UNICODE((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.c0) NOTNULL), ('' IN ()), ((vt2.c0) NOT NULL)))=(((vt2.c0 IN ()), SUBSTR(vt2.c0, vt2.c0), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (1365194376))))) ASC  NULLS LAST, (vt2.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt2 WHERE (UNICODE((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))) ORDER BY (((((vt2.c0) NOTNULL), ('' IN ()), ((vt2.c0) NOT NULL)))==(((vt2.c0 IN ()), SUBSTR(vt2.c0, vt2.c0), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (1365194376))))) ASC  NULLS LAST, (vt2.c0 COLLATE NOCASE IN ());
SELECT SUM(count) FROM (SELECT ((UNICODE((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))) IS TRUE)  as count FROM vt2 ORDER BY (((((vt2.c0) NOTNULL), ('' IN ()), ((vt2.c0) NOT NULL)))=(((vt2.c0 IN ()), SUBSTR(vt2.c0, vt2.c0), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (1365194376))))) ASC  NULLS LAST, (vt2.c0 COLLATE NOCASE IN ()));
SELECT * FROM vt2 WHERE (UNICODE((((vt2.c0)) BETWEEN ((vt2.c0)) AND ((vt2.c0))))) ORDER BY (((((vt2.c0) NOTNULL), ('' IN ()), ((vt2.c0) NOT NULL)))==(((vt2.c0 IN ()), SUBSTR(vt2.c0, vt2.c0), ((vt2.c0) NOT BETWEEN (vt2.c0) AND (1365194376))))) ASC  NULLS LAST, (vt2.c0 COLLATE NOCASE IN ());
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((LOWER(vt2.c0))&(((v0.c0)<(vt0.c0))))) ORDER BY ((((x'')!=(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt2.c0))&(((v0.c0)<(vt0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ((((x'')<>(vt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((LOWER(vt2.c0))&(((v0.c0)<(vt0.c0))))) ORDER BY ((((x'')!=(vt0.c0))) NOT NULL) ASC;
SELECT SUM(count) FROM (SELECT ALL ((((LOWER(vt2.c0))&(((v0.c0)<(vt0.c0))))) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY ((((x'')<>(vt0.c0))) NOT NULL) ASC);
SELECT COUNT(*) FROM v0, vt2, vt0 WHERE (((LOWER(vt2.c0))&(((v0.c0)<(vt0.c0))))) ORDER BY ((((x'')!=(vt0.c0))) NOT NULL) ASC;
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (- (1.521642745E9)) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN ((~ (vt2.c0))) AND (vt0.c0))) ORDER BY NULL COLLATE NOCASE ASC  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN ((~ (vt2.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (- (1.521642745E9)) RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY NULL COLLATE NOCASE ASC  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (- (1.521642745E9)) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN ((~ (vt2.c0))) AND (vt0.c0))) ORDER BY NULL COLLATE NOCASE ASC  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)AND(vt0.c0))) NOT BETWEEN ((~ (vt2.c0))) AND (vt0.c0))) IS TRUE)  as count FROM vt2 CROSS JOIN vt0 ON (- (1.521642745E9)) RIGHT OUTER JOIN v0 ON v0.c0 ORDER BY NULL COLLATE NOCASE ASC  NULLS FIRST, v0.c0 DESC  NULLS LAST);
SELECT ALL * FROM vt2 CROSS JOIN vt0 ON (- (1.521642745E9)) RIGHT OUTER JOIN v0 ON v0.c0 WHERE (((((vt0.c0)AND(vt0.c0))) NOT BETWEEN ((~ (vt2.c0))) AND (vt0.c0))) ORDER BY NULL COLLATE NOCASE ASC  NULLS FIRST, v0.c0 DESC  NULLS LAST;
SELECT * FROM vt2 WHERE (TYPEOF(DISTINCT vt2.c0) COLLATE BINARY) ORDER BY (((((((('B4l&[[2R')AND(CAST(vt2.c0 AS NUMERIC))))OR(vt2.c0 COLLATE RTRIM)))OR((vt2.c0 IN ()))))OR((vt2.c0 IN (vt2.c0, vt2.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt2.c0) COLLATE BINARY) IS TRUE)  as count FROM vt2 ORDER BY (((((((('B4l&[[2R')AND(CAST(vt2.c0 AS NUMERIC))))OR(vt2.c0 COLLATE RTRIM)))OR((vt2.c0 IN ()))))OR((vt2.c0 IN (vt2.c0, vt2.c0)))));
SELECT * FROM vt2 WHERE (TYPEOF(DISTINCT vt2.c0) COLLATE BINARY) ORDER BY (((((((('B4l&[[2R')AND(CAST(vt2.c0 AS NUMERIC))))OR(vt2.c0 COLLATE RTRIM)))OR((vt2.c0 IN ()))))OR((vt2.c0 IN (vt2.c0, vt2.c0))));
SELECT SUM(count) FROM (SELECT ((TYPEOF(DISTINCT vt2.c0) COLLATE BINARY) IS TRUE)  as count FROM vt2 ORDER BY (((((((('B4l&[[2R')AND(CAST(vt2.c0 AS NUMERIC))))OR(vt2.c0 COLLATE RTRIM)))OR((vt2.c0 IN ()))))OR((vt2.c0 IN (vt2.c0, vt2.c0)))));
SELECT * FROM vt2 WHERE (TYPEOF(DISTINCT vt2.c0) COLLATE BINARY) ORDER BY (((((((('B4l&[[2R')AND(CAST(vt2.c0 AS NUMERIC))))OR(vt2.c0 COLLATE RTRIM)))OR((vt2.c0 IN ()))))OR((vt2.c0 IN (vt2.c0, vt2.c0))));
SELECT ALL COUNT(*) FROM vt2 WHERE ('-1504942788');
SELECT SUM(count) FROM (SELECT (('-1504942788') IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ('-1504942788');
SELECT SUM(count) FROM (SELECT (('-1504942788') IS TRUE)  as count FROM vt2);
SELECT ALL COUNT(*) FROM vt2 WHERE ('-1504942788');
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT SUM(count) FROM (SELECT (((v0.c0 COLLATE BINARY IN ())) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE ((v0.c0 COLLATE BINARY IN ()));
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt2 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(vt0.c0)))))OR((~ (vt2.c0))))) ORDER BY ((-4.1326655E8)IS NOT(vt2.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(vt0.c0)))))OR((~ (vt2.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt2 ORDER BY ((-4.1326655E8)IS NOT(vt2.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt2 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(vt0.c0)))))OR((~ (vt2.c0))))) ORDER BY ((-4.1326655E8)IS NOT(vt2.c0 COLLATE BINARY))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(vt0.c0)))))OR((~ (vt2.c0))))) IS TRUE)  as count FROM vt0 NATURAL JOIN vt2 ORDER BY ((-4.1326655E8)IS NOT(vt2.c0 COLLATE BINARY))  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 NATURAL JOIN vt2 WHERE (((((CAST(vt0.c0 AS BLOB))AND(((vt0.c0)<=(vt0.c0)))))OR((~ (vt2.c0))))) ORDER BY ((-4.1326655E8)IS NOT(vt2.c0 COLLATE BINARY))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((NOT ((~ (x'6133')))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (x'6133'))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((NOT ((~ (x'6133')))));
SELECT SUM(count) FROM (SELECT (((NOT ((~ (x'6133'))))) IS TRUE)  as count FROM v0, vt2, vt0);
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE ((NOT ((~ (x'6133')))));
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (UPPER(((((vt2.c0)OR(v0.c0)))OR(vt0.c0)))) ORDER BY CASE WHEN vt2.c0 THEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt2.c0)) THEN CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN v0.c0 END WHEN (((vt0.c0, v0.c0, vt0.c0))<((v0.c0, vt2.c0, v0.c0))) THEN (v0.c0 IN (vt2.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt2.c0)OR(v0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY CASE WHEN vt2.c0 THEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt2.c0)) THEN CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN v0.c0 END WHEN (((vt0.c0, v0.c0, vt0.c0))<((v0.c0, vt2.c0, v0.c0))) THEN (v0.c0 IN (vt2.c0)) END DESC);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (UPPER(((((vt2.c0)OR(v0.c0)))OR(vt0.c0)))) ORDER BY CASE WHEN vt2.c0 THEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt2.c0)) THEN CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN v0.c0 END WHEN (((vt0.c0, v0.c0, vt0.c0))<((v0.c0, vt2.c0, v0.c0))) THEN (v0.c0 IN (vt2.c0)) END DESC;
SELECT SUM(count) FROM (SELECT ((UPPER(((((vt2.c0)OR(v0.c0)))OR(vt0.c0)))) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY CASE WHEN vt2.c0 THEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt2.c0)) THEN CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN v0.c0 END WHEN (((vt0.c0, v0.c0, vt0.c0))<((v0.c0, vt2.c0, v0.c0))) THEN (v0.c0 IN (vt2.c0)) END DESC);
SELECT COUNT(*) FROM vt0, vt2, v0 WHERE (UPPER(((((vt2.c0)OR(v0.c0)))OR(vt0.c0)))) ORDER BY CASE WHEN vt2.c0 THEN (((vt2.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN (NOT (vt2.c0)) THEN CASE vt0.c0  WHEN vt2.c0 THEN vt0.c0 WHEN vt2.c0 THEN vt2.c0 WHEN vt0.c0 THEN v0.c0 END WHEN (((vt0.c0, v0.c0, vt0.c0))<((v0.c0, vt2.c0, v0.c0))) THEN (v0.c0 IN (vt2.c0)) END DESC;
SELECT ALL * FROM vt2, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (v0.c0);
SELECT SUM(count) FROM (SELECT ((v0.c0) IS TRUE)  as count FROM vt2, v0);
SELECT ALL * FROM vt2, v0 WHERE (v0.c0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN '2' THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY ((((vt2.c0) ISNULL)) BETWEEN ('á®lh*è¤·Z') AND (CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN '2' THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((((vt2.c0) ISNULL)) BETWEEN ('á®lh*è¤·Z') AND (CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END)));
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN '2' THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY ((((vt2.c0) ISNULL)) BETWEEN ('á®lh*è¤·Z') AND (CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END));
SELECT SUM(count) FROM (SELECT ((((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN '2' THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) IS TRUE)  as count FROM vt2, vt0 ORDER BY ((((vt2.c0) ISNULL)) BETWEEN ('á®lh*è¤·Z') AND (CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END)));
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (((CASE vt0.c0  WHEN vt2.c0 THEN vt2.c0 WHEN '2' THEN vt0.c0 WHEN x'' THEN vt0.c0 ELSE vt0.c0 END) IS TRUE)) ORDER BY ((((vt2.c0) ISNULL)) BETWEEN ('á®lh*è¤·Z') AND (CASE vt2.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt0.c0 ELSE vt2.c0 END));
SELECT COUNT(*) FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt2.c0) IS TRUE)  as count FROM vt2);
SELECT COUNT(*) FROM vt2 WHERE (vt2.c0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))>=(((('-1648230588')IS NOT(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS REAL)))>=(((('-1648230588')IS NOT(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))>=(((('-1648230588')IS NOT(v0.c0))))));
SELECT SUM(count) FROM (SELECT ALL (((((CAST(v0.c0 AS REAL)))>=(((('-1648230588')IS NOT(v0.c0)))))) IS TRUE)  as count FROM v0);
SELECT ALL COUNT(*) FROM v0 WHERE ((((CAST(v0.c0 AS REAL)))>=(((('-1648230588')IS NOT(v0.c0))))));
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (vt0.c0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1158167905')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1158167905'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1158167905')))));
SELECT SUM(count) FROM (SELECT ALL ((((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1158167905'))))) IS TRUE)  as count FROM v0, vt0);
SELECT ALL * FROM v0, vt0 WHERE (((((vt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND ('1158167905')))));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ('-1') ORDER BY (NOT (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (('-1') IS TRUE)  as count FROM vt2, v0 ORDER BY (NOT (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ('-1') ORDER BY (NOT (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(v0.c0))));
SELECT SUM(count) FROM (SELECT (('-1') IS TRUE)  as count FROM vt2, v0 ORDER BY (NOT (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(v0.c0)))));
SELECT ALL COUNT(*) FROM vt2, v0 WHERE ('-1') ORDER BY (NOT (((((((((vt2.c0)AND(vt2.c0)))AND(vt2.c0)))AND(vt2.c0)))AND(v0.c0))));
SELECT * FROM vt2 WHERE (CASE ((vt2.c0)IS(''))  WHEN ((vt2.c0)<=(vt2.c0)) THEN vt2.c0 COLLATE BINARY ELSE ((vt2.c0)<=(vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c0)IS(''))  WHEN ((vt2.c0)<=(vt2.c0)) THEN vt2.c0 COLLATE BINARY ELSE ((vt2.c0)<=(vt2.c0)) END) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (CASE ((vt2.c0)IS(''))  WHEN ((vt2.c0)<=(vt2.c0)) THEN vt2.c0 COLLATE BINARY ELSE ((vt2.c0)<=(vt2.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c0)IS(''))  WHEN ((vt2.c0)<=(vt2.c0)) THEN vt2.c0 COLLATE BINARY ELSE ((vt2.c0)<=(vt2.c0)) END) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (CASE ((vt2.c0)IS(''))  WHEN ((vt2.c0)<=(vt2.c0)) THEN vt2.c0 COLLATE BINARY ELSE ((vt2.c0)<=(vt2.c0)) END);
SELECT * FROM vt2, v0, vt0 WHERE ((((((vt2.c0 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT * FROM vt2, v0, vt0 WHERE ((((((vt2.c0 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(v0.c0 COLLATE NOCASE)));
SELECT SUM(count) FROM (SELECT ALL (((((((vt2.c0 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(v0.c0 COLLATE NOCASE))) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT * FROM vt2, v0, vt0 WHERE ((((((vt2.c0 IN (vt0.c0)))OR(CAST(vt0.c0 AS INTEGER))))OR(v0.c0 COLLATE NOCASE)));
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (CASE ((vt2.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOTNULL) END) ORDER BY ((((((v0.c0)AND(-2.062230851E9)))AND((+ (v0.c0)))))OR((vt2.c0 IN (v0.c0, vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((((v0.c0)AND(-2.062230851E9)))AND((+ (v0.c0)))))OR((vt2.c0 IN (v0.c0, vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (CASE ((vt2.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOTNULL) END) ORDER BY ((((((v0.c0)AND(-2.062230851E9)))AND((+ (v0.c0)))))OR((vt2.c0 IN (v0.c0, vt0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CASE ((vt2.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOTNULL) END) IS TRUE)  as count FROM vt2, v0, vt0 ORDER BY ((((((v0.c0)AND(-2.062230851E9)))AND((+ (v0.c0)))))OR((vt2.c0 IN (v0.c0, vt0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM vt2, v0, vt0 WHERE (CASE ((vt2.c0)+(vt0.c0))  WHEN vt0.c0 COLLATE RTRIM THEN ((v0.c0) BETWEEN (v0.c0) AND (vt2.c0)) ELSE ((v0.c0) NOTNULL) END) ORDER BY ((((((v0.c0)AND(-2.062230851E9)))AND((+ (v0.c0)))))OR((vt2.c0 IN (v0.c0, vt0.c0)))) DESC  NULLS FIRST;
SELECT * FROM v0, vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE (vt2.c0);
SELECT SUM(count) FROM (SELECT ((vt2.c0) IS TRUE)  as count FROM v0, vt2);
SELECT * FROM v0, vt2 WHERE (vt2.c0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UNLIKELY(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UNLIKELY(((vt0.c0) ISNULL)));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(((vt0.c0) ISNULL))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL COUNT(*) FROM vt0, v0 WHERE (UNLIKELY(((vt0.c0) ISNULL)));
SELECT * FROM vt0, vt2, v0 WHERE (v0.c0) ORDER BY ((((vt0.c0) ISNULL))IS(((((vt0.c0)AND(v0.c0)))AND('')))), (CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((((vt0.c0) ISNULL))IS(((((vt0.c0)AND(v0.c0)))AND('')))), (CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END IN ())  NULLS FIRST);
SELECT * FROM vt0, vt2, v0 WHERE (v0.c0) ORDER BY ((((vt0.c0) ISNULL))IS(((((vt0.c0)AND(v0.c0)))AND('')))), (CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END IN ())  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((v0.c0) IS TRUE)  as count FROM vt0, vt2, v0 ORDER BY ((((vt0.c0) ISNULL))IS(((((vt0.c0)AND(v0.c0)))AND('')))), (CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END IN ())  NULLS FIRST);
SELECT * FROM vt0, vt2, v0 WHERE (v0.c0) ORDER BY ((((vt0.c0) ISNULL))IS(((((vt0.c0)AND(v0.c0)))AND('')))), (CASE WHEN vt0.c0 THEN vt0.c0 ELSE v0.c0 END IN ())  NULLS FIRST;
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))*(((v0.c0)||(v0.c0))))) ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)GLOB('423933123'))) AND (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))*(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)GLOB('423933123'))) AND (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))*(((v0.c0)||(v0.c0))))) ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)GLOB('423933123'))) AND (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS LAST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN ()))*(((v0.c0)||(v0.c0))))) IS TRUE)  as count FROM v0 ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)GLOB('423933123'))) AND (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS LAST);
SELECT COUNT(*) FROM v0 WHERE ((((v0.c0 IN ()))*(((v0.c0)||(v0.c0))))) ORDER BY ((v0.c0) NOT BETWEEN (((v0.c0)GLOB('423933123'))) AND (TRIM(DISTINCT v0.c0, v0.c0)))  NULLS LAST;
SELECT * FROM v0, vt0 WHERE (CASE ((((((((v0.c0)AND(x'')))OR(x'')))OR(vt0.c0)))AND(v0.c0))  WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((v0.c0)AND(x'')))OR(x'')))OR(vt0.c0)))AND(v0.c0))  WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE ((((((((v0.c0)AND(x'')))OR(x'')))OR(vt0.c0)))AND(v0.c0))  WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE ((((((((v0.c0)AND(x'')))OR(x'')))OR(vt0.c0)))AND(v0.c0))  WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END) IS TRUE)  as count FROM v0, vt0);
SELECT * FROM v0, vt0 WHERE (CASE ((((((((v0.c0)AND(x'')))OR(x'')))OR(vt0.c0)))AND(v0.c0))  WHEN (- (vt0.c0)) THEN (NOT (vt0.c0)) END);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) WHEN (x'' IN (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, 0.9250401372392958)) AND ((vt0.c0, vt0.c0, x''))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) WHEN (x'' IN (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, 0.9250401372392958)) AND ((vt0.c0, vt0.c0, x''))) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) WHEN (x'' IN (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, 0.9250401372392958)) AND ((vt0.c0, vt0.c0, x''))) COLLATE RTRIM  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE vt0.c0  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) WHEN (x'' IN (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) IS TRUE)  as count FROM vt0 ORDER BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, 0.9250401372392958)) AND ((vt0.c0, vt0.c0, x''))) COLLATE RTRIM  NULLS LAST);
SELECT ALL COUNT(*) FROM vt0 WHERE (CASE vt0.c0  WHEN ((vt0.c0)%(vt0.c0)) THEN ((vt0.c0) NOT NULL) WHEN ((vt0.c0) ISNULL) THEN ((vt0.c0) ISNULL) WHEN (x'' IN (vt0.c0)) THEN ((vt0.c0)<(vt0.c0)) END) ORDER BY CASE vt0.c0  WHEN ((vt0.c0) IS FALSE) THEN ((vt0.c0)+(vt0.c0)) END DESC, (((vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((x'', vt0.c0, 0.9250401372392958)) AND ((vt0.c0, vt0.c0, x''))) COLLATE RTRIM  NULLS LAST;
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN ((v0.c0)!=(v0.c0)) WHEN NULL THEN HEX(vt2.c0) WHEN (- (v0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt2.c0 IN ()))))  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN NULL THEN HEX(vt2.c0) WHEN (- (v0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt2.c0 IN ()))))  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN ((v0.c0)!=(v0.c0)) WHEN NULL THEN HEX(vt2.c0) WHEN (- (v0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt2.c0 IN ()))))  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ());
SELECT SUM(count) FROM (SELECT ALL ((CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN ((v0.c0)<>(v0.c0)) WHEN NULL THEN HEX(vt2.c0) WHEN (- (v0.c0)) THEN vt0.c0 COLLATE NOCASE END) IS TRUE)  as count FROM v0, vt2, vt0 ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt2.c0 IN ()))))  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ()));
SELECT ALL COUNT(*) FROM v0, vt2, vt0 WHERE (CASE ((vt0.c0)-(vt0.c0))  WHEN ((v0.c0)>=(v0.c0)) THEN ((v0.c0)!=(v0.c0)) WHEN NULL THEN HEX(vt2.c0) WHEN (- (v0.c0)) THEN vt0.c0 COLLATE NOCASE END) ORDER BY (((vt2.c0)) BETWEEN ((CAST(vt0.c0 AS TEXT))) AND (((vt2.c0 IN ()))))  NULLS LAST, (CAST(vt0.c0 AS TEXT) IN ());
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE vt2.c0  WHEN ((vt0.c0)<=(x'')) THEN 0.6798478805729753 WHEN (((vt2.c0))<=((vt0.c0))) THEN NULL WHEN ((v0.c0)LIKE(vt2.c0)) THEN ((vt0.c0) IS FALSE) END RIGHT OUTER JOIN vt2 ON '-1968503025' WHERE (CASE v0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(v0.c0 AS INTEGER) WHEN 0.4202625262601265 THEN v0.c0 COLLATE RTRIM WHEN vt2.c0 COLLATE NOCASE THEN (NOT (v0.c0)) ELSE ((((((((v0.c0)OR(vt2.c0)))AND('')))AND(vt2.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(v0.c0 AS INTEGER) WHEN 0.4202625262601265 THEN v0.c0 COLLATE RTRIM WHEN vt2.c0 COLLATE NOCASE THEN (NOT (v0.c0)) ELSE ((((((((v0.c0)OR(vt2.c0)))AND('')))AND(vt2.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE vt2.c0  WHEN ((vt0.c0)<=(x'')) THEN 0.6798478805729753 WHEN (((vt2.c0))<=((vt0.c0))) THEN NULL WHEN ((v0.c0)LIKE(vt2.c0)) THEN ((vt0.c0) IS FALSE) END RIGHT OUTER JOIN vt2 ON '-1968503025');
SELECT COUNT(*) FROM vt0 LEFT OUTER JOIN v0 ON CASE vt2.c0  WHEN ((vt0.c0)<=(x'')) THEN 0.6798478805729753 WHEN (((vt2.c0))<=((vt0.c0))) THEN NULL WHEN ((v0.c0)LIKE(vt2.c0)) THEN ((vt0.c0) IS FALSE) END RIGHT OUTER JOIN vt2 ON '-1968503025' WHERE (CASE v0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(v0.c0 AS INTEGER) WHEN 0.4202625262601265 THEN v0.c0 COLLATE RTRIM WHEN vt2.c0 COLLATE NOCASE THEN (NOT (v0.c0)) ELSE ((((((((v0.c0)OR(vt2.c0)))AND('')))AND(vt2.c0)))AND(vt0.c0)) END);
SELECT SUM(count) FROM (SELECT ((CASE v0.c0  WHEN CASE vt0.c0  WHEN vt0.c0 THEN x'' WHEN vt2.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END THEN CAST(v0.c0 AS INTEGER) WHEN 0.4202625262601265 THEN v0.c0 COLLATE RTRIM WHEN vt2.c0 COLLATE NOCASE THEN (NOT (v0.c0)) ELSE ((((((((v0.c0)OR(vt2.c0)))AND('')))AND(vt2.c0)))AND(vt0.c0)) END) IS TRUE)  as count FROM vt0 LEFT OUTER JOIN v0 ON CASE vt2.c0  WHEN ((vt0.c0)<=(x'')) THEN 0.6798478805729753 WHEN (((vt2.c0))<=((vt0.c0))) THEN NULL WHEN ((v0.c0)LIKE(vt2.c0)) THEN ((vt0.c0) IS FALSE) END RIGHT OUTER JOIN vt2 ON '-1968503025');
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (vt0.c0);
SELECT SUM(count) FROM (SELECT ALL ((vt0.c0) IS TRUE)  as count FROM vt0, vt2);
SELECT ALL COUNT(*) FROM vt0, vt2 WHERE (vt0.c0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0xffffffff88893baf) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff88893baf) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0xffffffff88893baf) IS TRUE) COLLATE NOCASE);
SELECT SUM(count) FROM (SELECT ALL ((((0Xffffffff88893baf) IS TRUE) COLLATE NOCASE) IS TRUE)  as count FROM vt0);
SELECT ALL COUNT(*) FROM vt0 WHERE (((0xffffffff88893baf) IS TRUE) COLLATE NOCASE);
SELECT * FROM vt2 WHERE ((- (vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((- (vt2.c0)) COLLATE RTRIM);
SELECT SUM(count) FROM (SELECT (((- (vt2.c0)) COLLATE RTRIM) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE ((- (vt2.c0)) COLLATE RTRIM);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.35613224036096425);
SELECT SUM(count) FROM (SELECT ((0.35613224036096425) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.35613224036096425);
SELECT SUM(count) FROM (SELECT ((0.35613224036096425) IS TRUE)  as count FROM v0, vt0);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (0.35613224036096425);
SELECT * FROM v0, vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))>=((vt0.c0))) THEN v0.c0 ELSE (~ (vt2.c0)) END WHERE ((((vt0.c0 IN (vt0.c0)))>((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>((+ (vt0.c0))))) IS TRUE)  as count FROM v0, vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))>=((vt0.c0))) THEN v0.c0 ELSE (~ (vt2.c0)) END);
SELECT * FROM v0, vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))>=((vt0.c0))) THEN v0.c0 ELSE (~ (vt2.c0)) END WHERE ((((vt0.c0 IN (vt0.c0)))>((+ (vt0.c0)))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0 IN (vt0.c0)))>((+ (vt0.c0))))) IS TRUE)  as count FROM v0, vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))>=((vt0.c0))) THEN v0.c0 ELSE (~ (vt2.c0)) END);
SELECT * FROM v0, vt2 RIGHT OUTER JOIN vt0 ON CASE WHEN (((v0.c0))>=((vt0.c0))) THEN v0.c0 ELSE (~ (vt2.c0)) END WHERE ((((vt0.c0 IN (vt0.c0)))>((+ (vt0.c0)))));
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))<(((vt0.c0)%(vt0.c0))))) ORDER BY CASE UNLIKELY(vt0.c0)  WHEN '-1833642978' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))>((NULL))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))<(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE UNLIKELY(vt0.c0)  WHEN '-1833642978' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))>((NULL))) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))<(((vt0.c0)%(vt0.c0))))) ORDER BY CASE UNLIKELY(vt0.c0)  WHEN '-1833642978' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))>((NULL))) END DESC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))<(((vt0.c0)%(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY CASE UNLIKELY(vt0.c0)  WHEN '-1833642978' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))>((NULL))) END DESC  NULLS LAST);
SELECT ALL * FROM vt0 WHERE (((((vt0.c0) NOTNULL))<(((vt0.c0)%(vt0.c0))))) ORDER BY CASE UNLIKELY(vt0.c0)  WHEN '-1833642978' THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) ELSE (((vt0.c0))>((NULL))) END DESC  NULLS LAST;
SELECT COUNT(*) FROM vt2, vt0 WHERE ((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) IN ())) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE ((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) IN ()));
SELECT SUM(count) FROM (SELECT (((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) IN ())) IS TRUE)  as count FROM vt2, vt0);
SELECT COUNT(*) FROM vt2, vt0 WHERE ((((((vt2.c0)OR(vt2.c0)))OR(vt2.c0)) IN ()));
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0)))>(x'')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0)))>(x''))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0)))>(x'')));
SELECT SUM(count) FROM (SELECT ((((((v0.c0)>>(v0.c0)))>(x''))) IS TRUE)  as count FROM v0);
SELECT COUNT(*) FROM v0 WHERE (((((v0.c0)>>(v0.c0)))>(x'')));
SELECT ALL COUNT(*) FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN ((+ (v0.c0))) AND ((NOT (vt0.c0)))) WHERE ((((v0.c0 IN (v0.c0))) NOTNULL)) ORDER BY ((((vt0.c0)-(vt2.c0))) IS TRUE), ((((vt0.c0) IS FALSE)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'db1d')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN ((+ (v0.c0))) AND ((NOT (vt0.c0)))) ORDER BY ((((vt0.c0)-(vt2.c0))) IS TRUE), ((((vt0.c0) IS FALSE)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'db1d')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN ((+ (v0.c0))) AND ((NOT (vt0.c0)))) WHERE ((((v0.c0 IN (v0.c0))) NOTNULL)) ORDER BY ((((vt0.c0)-(vt2.c0))) IS TRUE), ((((vt0.c0) IS FALSE)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'db1d')) ASC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT (((((v0.c0 IN (v0.c0))) NOTNULL)) IS TRUE)  as count FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN ((+ (v0.c0))) AND ((NOT (vt0.c0)))) ORDER BY ((((vt0.c0)-(vt2.c0))) IS TRUE), ((((vt0.c0) IS FALSE)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'db1d')) ASC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0, vt2 RIGHT OUTER JOIN vt0 ON ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt2.c0 WHEN vt2.c0 THEN vt2.c0 END) NOT BETWEEN ((+ (v0.c0))) AND ((NOT (vt0.c0)))) WHERE ((((v0.c0 IN (v0.c0))) NOTNULL)) ORDER BY ((((vt0.c0)-(vt2.c0))) IS TRUE), ((((vt0.c0) IS FALSE)) BETWEEN (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))) AND (x'db1d')) ASC  NULLS FIRST;
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON ((0.7397691544577554) NOTNULL) INNER JOIN v0 ON (((v0.c0 IN ()))>('èYp&+JBhR')) WHERE ((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)*(v0.c0)), ((((((((((((v0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(NULL)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0)), ((vt0.c0) IS TRUE))) AND ((CASE WHEN vt0.c0 THEN x'5e95' END, ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)*(v0.c0)), ((((((((((((v0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(NULL)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0)), ((vt0.c0) IS TRUE))) AND ((CASE WHEN vt0.c0 THEN x'5e95' END, ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON ((0.7397691544577554) NOTNULL) INNER JOIN v0 ON (((v0.c0 IN ()))>('èYp&+JBhR')));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON ((0.7397691544577554) NOTNULL) INNER JOIN v0 ON (((v0.c0 IN ()))>('èYp&+JBhR')) WHERE ((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)*(v0.c0)), ((((((((((((v0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(NULL)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0)), ((vt0.c0) IS TRUE))) AND ((CASE WHEN vt0.c0 THEN x'5e95' END, ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM))));
SELECT SUM(count) FROM (SELECT (((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)*(v0.c0)), ((((((((((((v0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(NULL)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0)), ((vt0.c0) IS TRUE))) AND ((CASE WHEN vt0.c0 THEN x'5e95' END, ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM)))) IS TRUE)  as count FROM vt0 FULL OUTER JOIN vt2 ON ((0.7397691544577554) NOTNULL) INNER JOIN v0 ON (((v0.c0 IN ()))>('èYp&+JBhR')));
SELECT COUNT(*) FROM vt0 FULL OUTER JOIN vt2 ON ((0.7397691544577554) NOTNULL) INNER JOIN v0 ON (((v0.c0 IN ()))>('èYp&+JBhR')) WHERE ((((vt0.c0, v0.c0, v0.c0)) BETWEEN ((((v0.c0)*(v0.c0)), ((((((((((((v0.c0)AND(vt2.c0)))AND(vt0.c0)))AND(NULL)))OR(vt2.c0)))OR(v0.c0)))AND(vt2.c0)), ((vt0.c0) IS TRUE))) AND ((CASE WHEN vt0.c0 THEN x'5e95' END, ((v0.c0) NOTNULL), v0.c0 COLLATE RTRIM))));
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))IS NOT(((vt2.c0)>>(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))IS NOT(((vt2.c0)>>(vt2.c0))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))IS NOT(((vt2.c0)>>(vt2.c0)))));
SELECT SUM(count) FROM (SELECT ((((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))IS NOT(((vt2.c0)>>(vt2.c0))))) IS TRUE)  as count FROM v0, vt2);
SELECT ALL COUNT(*) FROM v0, vt2 WHERE (((((((vt2.c0)AND(vt2.c0)))AND(v0.c0)))IS NOT(((vt2.c0)>>(vt2.c0)))));
SELECT COUNT(*) FROM v0, vt0 WHERE (LOWER(((vt0.c0)AND(v0.c0)))) ORDER BY (((vt0.c0 IN ()))<(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<(((v0.c0) IS FALSE))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (LOWER(((vt0.c0)AND(v0.c0)))) ORDER BY (((vt0.c0 IN ()))<(((v0.c0) IS FALSE))) ASC;
SELECT SUM(count) FROM (SELECT ((LOWER(((vt0.c0)AND(v0.c0)))) IS TRUE)  as count FROM v0, vt0 ORDER BY (((vt0.c0 IN ()))<(((v0.c0) IS FALSE))) ASC);
SELECT COUNT(*) FROM v0, vt0 WHERE (LOWER(((vt0.c0)AND(v0.c0)))) ORDER BY (((vt0.c0 IN ()))<(((v0.c0) IS FALSE))) ASC;
SELECT * FROM vt0, vt2 WHERE (((((vt2.c0)=(vt0.c0)))>(vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)=(vt0.c0)))>(vt2.c0))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (((((vt2.c0)=(vt0.c0)))>(vt2.c0)));
SELECT SUM(count) FROM (SELECT ALL ((((((vt2.c0)=(vt0.c0)))>(vt2.c0))) IS TRUE)  as count FROM vt0, vt2);
SELECT * FROM vt0, vt2 WHERE (((((vt2.c0)=(vt0.c0)))>(vt2.c0)));
SELECT ALL * FROM vt0, v0 WHERE (load_extension(vt0.c0, ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c0, ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt0, v0 WHERE (load_extension(vt0.c0, ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0))));
SELECT SUM(count) FROM (SELECT ALL ((load_extension(vt0.c0, ((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) IS TRUE)  as count FROM vt0, v0);
SELECT ALL * FROM vt2, v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) ISNULL) WHERE ('-738641481') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-738641481') IS TRUE)  as count FROM vt2, v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) ISNULL) ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt2, v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) ISNULL) WHERE ('-738641481') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT (('-738641481') IS TRUE)  as count FROM vt2, v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) ISNULL) ORDER BY vt0.c0 ASC  NULLS LAST);
SELECT ALL * FROM vt2, v0 CROSS JOIN vt0 ON ((((((v0.c0)AND(vt0.c0)))AND(v0.c0))) ISNULL) WHERE ('-738641481') ORDER BY vt0.c0 ASC  NULLS LAST;
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((((vt0.c0)IS(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((((vt0.c0)IS(v0.c0))) NOTNULL));
SELECT SUM(count) FROM (SELECT ((((((vt0.c0)IS(v0.c0))) NOTNULL)) IS TRUE)  as count FROM vt2, vt0, v0);
SELECT COUNT(*) FROM vt2, vt0, v0 WHERE (((((vt0.c0)IS(v0.c0))) NOTNULL));
SELECT * FROM vt2 INNER JOIN v0 ON (((v0.c0)!=(vt0.c0)) IN ()) INNER JOIN vt0 ON ((((v0.c0 COLLATE RTRIM)OR(((vt2.c0)<=(v0.c0)))))OR((vt0.c0 IN ()))) WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS REAL)) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON (((v0.c0)!=(vt0.c0)) IN ()) INNER JOIN vt0 ON ((((v0.c0 COLLATE RTRIM)OR(((vt2.c0)<=(v0.c0)))))OR((vt0.c0 IN ()))));
SELECT * FROM vt2 INNER JOIN v0 ON (((v0.c0)!=(vt0.c0)) IN ()) INNER JOIN vt0 ON ((((v0.c0 COLLATE RTRIM)OR(((vt2.c0)<=(v0.c0)))))OR((vt0.c0 IN ()))) WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS REAL));
SELECT SUM(count) FROM (SELECT ((CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS REAL)) IS TRUE)  as count FROM vt2 INNER JOIN v0 ON (((v0.c0)!=(vt0.c0)) IN ()) INNER JOIN vt0 ON ((((v0.c0 COLLATE RTRIM)OR(((vt2.c0)<=(v0.c0)))))OR((vt0.c0 IN ()))));
SELECT * FROM vt2 INNER JOIN v0 ON (((v0.c0)!=(vt0.c0)) IN ()) INNER JOIN vt0 ON ((((v0.c0 COLLATE RTRIM)OR(((vt2.c0)<=(v0.c0)))))OR((vt0.c0 IN ()))) WHERE (CAST(CASE WHEN v0.c0 THEN v0.c0 ELSE vt2.c0 END AS REAL));
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY ((((v0.c0) NOT NULL))<((((0.1189319214391874, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (- (((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT NULL))<((((0.1189319214391874, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (- (((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY ((((v0.c0) NOT NULL))<((((0.1189319214391874, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (- (((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((CASE WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) IS TRUE)  as count FROM v0, vt0 ORDER BY ((((v0.c0) NOT NULL))<((((0.1189319214391874, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (- (((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST);
SELECT ALL COUNT(*) FROM v0, vt0 WHERE (CASE WHEN vt0.c0 THEN v0.c0 END COLLATE NOCASE) ORDER BY ((((v0.c0) NOT NULL))<((((0.1189319214391874, vt0.c0, v0.c0)) NOT BETWEEN ((vt0.c0, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))) ASC  NULLS LAST, (- (((vt0.c0)AND(vt0.c0)))) ASC  NULLS LAST;
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (UNLIKELY(DISTINCT vt2.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt2.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (UNLIKELY(DISTINCT vt2.c0 COLLATE RTRIM));
SELECT SUM(count) FROM (SELECT ALL ((UNLIKELY(DISTINCT vt2.c0 COLLATE RTRIM)) IS TRUE)  as count FROM vt2, vt0);
SELECT ALL COUNT(*) FROM vt2, vt0 WHERE (UNLIKELY(DISTINCT vt2.c0 COLLATE RTRIM));
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(((vt0.c0)>(vt0.c0))))) ORDER BY (('-1793612761')GLOB(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('-1793612761')GLOB(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(((vt0.c0)>(vt0.c0))))) ORDER BY (('-1793612761')GLOB(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT SUM(count) FROM (SELECT ((((((vt0.c0) NOTNULL))|(((vt0.c0)>(vt0.c0))))) IS TRUE)  as count FROM vt0 ORDER BY (('-1793612761')GLOB(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST);
SELECT COUNT(*) FROM vt0 WHERE (((((vt0.c0) NOTNULL))|(((vt0.c0)>(vt0.c0))))) ORDER BY (('-1793612761')GLOB(CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END))  NULLS LAST;
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) ORDER BY (((-688927059 IN ()))<=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((-688927059 IN ()))<=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) ORDER BY (((-688927059 IN ()))<=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ((CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) IS TRUE)  as count FROM v0 ORDER BY (((-688927059 IN ()))<=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST);
SELECT ALL COUNT(*) FROM v0 WHERE (CAST(CASE v0.c0  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END AS REAL)) ORDER BY (((-688927059 IN ()))<=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))) DESC  NULLS FIRST;
SELECT * FROM vt2 WHERE (-1.966524534E9);
SELECT SUM(count) FROM (SELECT ((-1.966524534E9) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (-1.966524534E9);
SELECT SUM(count) FROM (SELECT ((-1.966524534E9) IS TRUE)  as count FROM vt2);
SELECT * FROM vt2 WHERE (-1.966524534E9);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (((v0.c0)%(((v0.c0)-(vt0.c0))))) ORDER BY ((((vt2.c0)!=(vt2.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(((v0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((((vt2.c0)<>(vt2.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (((v0.c0)%(((v0.c0)-(vt0.c0))))) ORDER BY ((((vt2.c0)!=(vt2.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT SUM(count) FROM (SELECT ALL ((((v0.c0)%(((v0.c0)-(vt0.c0))))) IS TRUE)  as count FROM v0, vt0, vt2 ORDER BY ((((vt2.c0)<>(vt2.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST);
SELECT COUNT(*) FROM v0, vt0, vt2 WHERE (((v0.c0)%(((v0.c0)-(vt0.c0))))) ORDER BY ((((vt2.c0)!=(vt2.c0))) BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST;
SELECT ALL * FROM vt2, v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT SUM(count) FROM (SELECT ((LAST_INSERT_ROWID()) IS TRUE)  as count FROM vt2, v0, vt0);
SELECT ALL * FROM vt2, v0, vt0 WHERE (LAST_INSERT_ROWID());
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN vt2 ON (+ (((vt0.c0)/(vt0.c0)))) WHERE (LIKELY(DISTINCT ((v0.c0)GLOB(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((v0.c0)GLOB(vt2.c0)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt2 ON (+ (((vt0.c0)/(vt0.c0)))));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN vt2 ON (+ (((vt0.c0)/(vt0.c0)))) WHERE (LIKELY(DISTINCT ((v0.c0)GLOB(vt2.c0))));
SELECT SUM(count) FROM (SELECT ALL ((LIKELY(DISTINCT ((v0.c0)GLOB(vt2.c0)))) IS TRUE)  as count FROM v0, vt0 LEFT OUTER JOIN vt2 ON (+ (((vt0.c0)/(vt0.c0)))));
SELECT ALL * FROM v0, vt0 LEFT OUTER JOIN vt2 ON (+ (((vt0.c0)/(vt0.c0)))) WHERE (LIKELY(DISTINCT ((v0.c0)GLOB(vt2.c0))));
