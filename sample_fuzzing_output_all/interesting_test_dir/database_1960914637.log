-- Time: 2024/06/07 10:21:46
-- Database: database37
-- Database version: 3.40.0
-- seed value: 1960914637
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 4ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES ('~X', 0.44639818197898085); -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2024808063); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 993354801); -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 TEXT , c1 INTEGER , c2 INT ); -- 0ms;
ANALYZE; -- 0ms;
CREATE INDEX IF NOT EXISTS i33 ON t0(CAST((((c2)) NOT BETWEEN ((c1)) AND ((c2))) AS REAL),LIKELY(IFNULL(c0, c2)) COLLATE NOCASE DESC,CASE ((c2) BETWEEN (c2) AND ('yꍺC2Qq̉i'))  WHEN ((c1)>>(c1)) THEN ((c2) NOT BETWEEN (c1) AND (c1)) ELSE (('~x')>>(c0)) END COLLATE BINARY); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.10419156795865514); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c18; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt1', ' unordered noskipscan'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 1ms;
UPDATE OR ROLLBACK vt1 SET (c0, c0)=('', -2042605114); -- 0ms;
ALTER TABLE t0 ADD COLUMN c84 INTEGER; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=(0.7485024002910297, x''); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT OR FAIL INTO vt0(c1, c0) VALUES ('yꍺC2\nq̉i', x'ffad'), (x'', NULL), (0.44639818197898085, '}KeXg*'); -- 0ms;
INSERT OR FAIL INTO vt0(c1) VALUES (x'fc18'); -- 1ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt0(c2) VALUES (NULL); -- 0ms;
PRAGMA main.journal_mode = TRUNCATE; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (''), (0.532215834413242), ('0.44639818197898085'), (x''), ('444731056'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.wal_autocheckpoint = 4777847645260198945; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0x4aa5192c) WHERE ((NULLIF(DISTINCT vt0.c2, vt0.c1))IS(SQLITE_COMPILEOPTION_GET(vt0.c0))); -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=('Fh|'); -- 1ms;
PRAGMA mmap_size = -6097180990471990247; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('-1877298979'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7304741690087682); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=('1959058431') WHERE CAST(((vt1.c0) IS TRUE) AS BLOB); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ((((+ (NULL)))OR(CASE '-2126764555'  WHEN 'h	-a鑩' THEN x'3c23' END))); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (0.10419156795865514); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
VACUUM; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 1ms;
PRAGMA temp.short_column_names = true; -- 0ms;
PRAGMA incremental_vacuum(-72780107); -- 3ms;
INSERT INTO vt0(vt0) VALUES('automerge=3'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 804636057); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO t1(c18, c0, c84, c1) VALUES ('Fh|', NULL, 's\rX_()ob', NULL); -- 0ms;
PRAGMA temp.automatic_index = false; -- 1ms;
PRAGMA ignore_check_constraints; -- 0ms;
ALTER TABLE t1 ADD COLUMN c25 REAL; -- 0ms;
PRAGMA threads = -2341118334116715103; -- 0ms;
INSERT OR ROLLBACK INTO t1(c1, c0, c25, c18) VALUES (0.7485024002910297, 0.8571742065931226, 'lu', 1952222424); -- 0ms;
INSERT OR IGNORE INTO t1(c1, c18, c84) VALUES (NULL, NULL, NULL); -- 0ms;
PRAGMA temp.recursive_triggers = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '50485'); -- 0ms;
ANALYZE vt0; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'') WHERE (((vt1.c0 COLLATE NOCASE))<((0.36892434973567234))); -- 0ms;
ALTER TABLE t1 ADD COLUMN c77 INT; -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c2, c0) VALUES (0.44639818197898085, 's|', x''); -- 0ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1370842054); -- 0ms;
PRAGMA mmap_size = 7006872416436018227; -- 0ms;
INSERT OR ABORT INTO t1(c84, c0, c18) VALUES ('.m', NULL, x''); -- 0ms;
UPDATE OR FAIL vt1 SET c0='\n9S|U#'; -- 1ms;
PRAGMA temp.foreign_keys; -- 0ms;
PRAGMA optimize; -- 0ms;
PRAGMA temp.mmap_size; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.36892434973567234), (0.24713428982977825), (0.6919077904641437); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c18 TO c45; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('-393370758', '1e500', (((0X2d9e97fe)) BETWEEN ((((0.743773638295738)>>('4m')))) AND ((0.724693827276387 COLLATE RTRIM)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c77, c77)=('0.743773638295738', NULL); -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
REINDEX  vt1; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('wAOYKv\n') WHERE CASE WHEN ((t1.c25)AND(t1.c1)) THEN t1.c77 COLLATE NOCASE ELSE CASE WHEN t1.c1 THEN t1.c25 END END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE t1; -- 0ms;
INSERT OR FAIL INTO t1(c0, c84) VALUES (x'd1de', x''); -- 0ms;
ANALYZE i33; -- 0ms;
CREATE VIRTUAL TABLE vt2 USING fts4(c0 UNINDEXED, c1); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt2 SET c0=0.48050312174253407; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 14); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (NULL, NULL, x'', x'ccd9', x'cb20c2c1', NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c45, c45, c84)=(NULL, x'', 0X7e94796d) WHERE (((((t1.c1, t1.c84, t1.c0))<((t1.c77, t1.c77, t1.c77)))) ISNULL); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c1 TO c54; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (-584425127), (0x78a27ead); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'cec0') WHERE json(LTRIM(vt1.c0, vt1.c0)); -- 0ms;
UPDATE OR IGNORE t1 SET (c45)=(-584425127); -- 0ms;
DROP TABLE IF EXISTS vt2; -- 0ms;
UPDATE vt0 SET c2=-1901948983 WHERE 0xfffffffff2f29469; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=(x'f666'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 3ms;
PRAGMA main.shrink_memory; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.13776547595376876, 0.10419156795865514), (0.6803263245866968, '\UyUIN5'), ('-1322703170', ''); -- 12ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c1) VALUES (x'', 0.09429850916402926), (x'', x'2401'), (0.540116307735206, NULL); -- 2ms;
UPDATE OR IGNORE vt1 SET (c0)=(0X4f1c6b1f); -- 17ms;
INSERT OR ROLLBACK INTO vt1 VALUES ('j{'); -- 5ms;
UPDATE OR IGNORE vt0 SET (c2)=('1767776915'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO t1(c25, c45, c84, c54) VALUES (0.1246878557408192, 'I', 'JKt&', ''); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE t1 SET c45=x'50fe'; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(0.36892434973567234); -- 1ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
PRAGMA main.secure_delete = false; -- 0ms;
ANALYZE i33; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '21889'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO t1(c77, c54, c45, c84, c25, c0) VALUES ('', 'E\nFj5', '7', 2.023915181E9, NULL, '0.10419156795865514'), (x'db0d3e4c9ddf', NULL, 1901942456, x'', NULL, '-184947504'), (1.690895113E9, CASE CASE x''  WHEN '0.09429850916402926' THEN 0.7633746301011131 ELSE x'6421' END  WHEN COALESCE('564997327', '') THEN (NULL IN ()) END, 0.8583930068950332, 0.6011191514204256, 'O{3', '0.8583930068950332'); -- 0ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES ('', 0.09429850916402926); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('') WHERE 0.19703642262575816 COLLATE NOCASE; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
UPDATE OR IGNORE t0 SET c45='1952222424' WHERE t0.c54 COLLATE NOCASE; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c54 TO c46; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c0  WHEN 1.767776915E9 THEN t0.c84 END AS REAL) FROM t0, vt0, vt1 WHERE (CAST(((NULL) IS FALSE) AS BLOB)); -- 0ms;
SELECT DISTINCT COALESCE(t0.c45 COLLATE RTRIM, ((t0.c0) IS TRUE)) FROM t0, vt0, vt1 WHERE ((((NULL IN (0.784228000835839)))*((1519223037 IN ())))) LIMIT 1113174157 OFFSET -1877298979; -- 0ms;
SELECT ALL CAST(vt0.c2 COLLATE NOCASE AS BLOB) FROM vt1, vt0, t0 ORDER BY (((((t0.c25))>((t0.c46)))) ISNULL) DESC; -- 2ms;
SELECT DISTINCT (((t0.c45)IS NOT(vt0.c0)) IN ()), (((('/vqhb*hfS') IS TRUE))AND(t0.c84)), (((vt0.c1, t0.c84, '1994881631')) BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c45) AND (vt0.c2)), ((t0.c25)|(t0.c25)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) AND ((0.27620983103822516 COLLATE BINARY, ((t0.c46)|(t0.c45)), vt0.c0))) FROM vt0, t0, vt1; -- 1ms;
SELECT DISTINCT (~ (UPPER(t0.c77))) FROM t0, vt0, vt1 ORDER BY CAST(((vt0.c0) BETWEEN (t0.c45) AND (t0.c84)) AS TEXT); -- 1ms;
SELECT ALL (+ (((vt1.c0)<<(vt0.c0)))) FROM vt1, t0 WHERE ((NOT (CAST(-1877298979 AS REAL))));SELECT ((((MIN(t0.c25))OR(-218983319)))AND((((x''))>=((t0.c0))))) FROM vt0 WHERE (((CAST(-694748544 AS REAL)) NOT BETWEEN (x'50db' COLLATE NOCASE) AND ((~ ('368742538'))))) GROUP BY ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (t0.c46) AND (TRIM(vt0.c1, t0.c45))), ((((((((NULLIF(DISTINCT 0.5657840516270073, t0.c0))AND(CASE vt0.c1  WHEN NULL THEN vt0.c2 END)))OR(t0.c46)))OR(((vt0.c2) IS FALSE))))AND(0.388357870244183)), CAST(CASE WHEN t0.c84 THEN vt0.c2 ELSE vt0.c2 END AS TEXT);SELECT (((((((vt0.c2))>((t0.c45))))AND(CAST(NULL AS BLOB))))OR(((vt0.c0)LIKE(t0.c84)))) FROM t0, vt0, vt1 LIMIT -398133162 OFFSET -1397006581; -- 0ms;
SELECT DISTINCT CAST(CAST(vt0.c2 AS REAL) AS BLOB) FROM t0;SELECT ALL TOTAL(CASE t0.c0  WHEN t0.c77 THEN vt0.c0 END) OVER (), (((NOT ('{a o,	_v7'))) IS FALSE), ((CASE vt0.c2  WHEN '0.13776547595376876' THEN t0.c77 ELSE t0.c0 END) NOT NULL) FROM t0;SELECT DISTINCT (((vt0.c1 IN (x'', t0.c0))) NOTNULL) FROM t0 WHERE (UNLIKELY(CAST(0.9901916654647261 AS TEXT))) GROUP BY CASE WHEN ((((t0.c84)OR(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c1) ISNULL) WHEN (((t0.c77)) BETWEEN ((vt0.c2)) AND ((vt0.c0))) THEN (((((((('?!Yjx&')OR(t0.c46)))OR(vt0.c2)))AND(t0.c0)))AND(vt1.c0)) WHEN (((t0.c77))=((t0.c45))) THEN HEX(vt0.c1) ELSE ((t0.c45)AND('-2126764555')) END HAVING GROUP_CONCAT('?H') LIMIT 1767776915 OFFSET 36852488;SELECT ALL CASE WHEN t0.c77 THEN COUNT(*) END FROM t0 WHERE ((((('w8ະokmqp&') NOT BETWEEN (x'') AND (NULL)))OR(('-366974277' IN ())))); -- 0ms;
SELECT ALL ((TRIM(vt0.c0))!=(((t0.c46)OR(1.7976931348623157E308)))) FROM t0, vt1, vt0 WHERE ((((((NULL IN ()))OR(CAST(x'9e89' AS TEXT))))AND((((((((('')AND(NULL)))OR('387297206')))OR(NULL)))AND(-1481792923))))); -- 0ms;
SELECT DISTINCT SUM(((t0.c46) BETWEEN (t0.c0) AND (vt1.c0))) FROM vt0 WHERE (CAST(((((x'')AND(NULL)))AND(NULL)) AS TEXT));SELECT DISTINCT (((t0.c25)) BETWEEN ((t0.c0)) AND ((0.4507806197558154))) COLLATE BINARY FROM vt1, vt0 WHERE (UPPER(((NULL) NOT BETWEEN ('') AND (0.5797003735380662))));SELECT ALL CASE WHEN (((vt1.c0))<=((t0.c46))) THEN ((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) ELSE (((t0.c0, t0.c25, t0.c45)) NOT BETWEEN ((t0.c46, t0.c84, t0.c0)) AND ((t0.c45, -2.126764555E9, t0.c25))) END FROM vt1, vt0 NOT INDEXED, t0; -- 1ms;
SELECT (((t0.c84, t0.c77, t0.c84)) BETWEEN ((((vt0.c2)IS(vt1.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), SUM(t0.c84))) AND ((vt0.c1 COLLATE BINARY, (vt1.c0 IN ()), ((NULL) IS FALSE)))) FROM t0;SELECT ALL NULL, COUNT(*), t0.c45 FROM vt1, vt0, t0; -- 0ms;
SELECT LAST_VALUE('0.5797003735380662') OVER (), (+ ((NOT (t0.c84)))), GROUP_CONCAT(((((vt0.c2)AND(t0.c84)))AND(t0.c0))) FROM vt0, t0, vt1; -- 1ms;
SELECT ALL json_patch(((t0.c0)-(vt0.c0)), ((vt1.c0) NOT NULL)) FROM vt0 GROUP BY (+ ((t0.c84 IN ())));SELECT ALL LENGTH(MIN(vt0.c2)), UPPER(COUNT(vt1.c0)), (((MIN(t0.c46)))!=((((t0.c77) IS FALSE)))) FROM vt1, t0;SELECT ((CAST(t0.c45 AS BLOB)) NOT NULL) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((t0.c45 COLLATE NOCASE)OR(((vt0.c1) ISNULL))), CASE ((t0.c77)IS NOT(NULL))  WHEN CAST(vt0.c1 AS REAL) THEN (((t0.c46))==((vt0.c2))) ELSE ((vt1.c0) IS FALSE) END, vt1.c0 FROM vt1 WHERE ((+ ('1327262495')));SELECT DISTINCT (((NOT (t0.c84)))<<((('') NOT NULL))), (NOT (((vt0.c0)!=(vt0.c1)))), vt1.c0 FROM t0, vt1, vt0 ORDER BY ((0.44639818197898085) NOT NULL)  NULLS FIRST LIMIT -264894138 OFFSET -1397006581; -- 1ms;
SELECT vt0.c1, LIKELIHOOD(DISTINCT ((t0.c0)/(t0.c0)), 0.8348237477326025), (NOT ((vt0.c2 IN ()))), x'', (('-927345442' COLLATE BINARY) BETWEEN (((t0.c0)<<(t0.c46))) AND (CASE ''  WHEN vt0.c2 THEN vt0.c0 END)) FROM t0 WHERE (SQLITE_VERSION());SELECT DISTINCT ((CASE t0.c84  WHEN t0.c0 THEN vt0.c2 ELSE t0.c84 END)OR(((vt1.c0)GLOB(vt0.c1)))) FROM t0, vt1;SELECT DISTINCT AVG(((('0.5797003735380662'))<((t0.c25)))) OVER () FROM vt1, vt0;SELECT ALL TOTAL(((((((((0.34387750368927217)AND(vt0.c1)))AND('-2121164254')))AND('_V')))AND(vt0.c1))) FILTER(WHERE ((SQLITE_COMPILEOPTION_GET(0.9963159669849373)) NOT NULL)) OVER () FROM vt0, vt1, t0 WHERE (((((',evs')-(NULL))) BETWEEN (((x'd060')&('bI'))) AND (((x'c294')>(x''))))); -- 0ms;
SELECT COALESCE(((t0.c84)LIKE(vt0.c1)), t0.c45) FROM vt0, t0; -- 0ms;
SELECT ALL MAX((((t0.c84)) NOT BETWEEN ((t0.c84)) AND ((t0.c45)))) COLLATE RTRIM FROM vt1, t0, vt0; -- 1ms;
SELECT DISTINCT (NOT (COUNT(t0.c46))) FROM t0, vt1 WHERE ((((((0xffffffffe436111b IN ()))OR((+ (x'')))))AND((((''))>=((NULL)))))); -- 0ms;
SELECT DISTINCT MAX(((t0.c84) BETWEEN (t0.c45) AND (NULL))), ((((((t0.c25)AND(t0.c77)))OR(t0.c77))) BETWEEN (TIME(0.47827895839101653, t0.c25, vt0.c1)) AND (CAST(t0.c46 AS TEXT))), CAST(((x'')<<(t0.c0)) AS BLOB) FROM vt0;SELECT DISTINCT TRIM((((((((('765368318')OR(t0.c77)))AND(t0.c0)))AND(t0.c46)))OR(t0.c0)), ((((((((vt1.c0)OR(t0.c46)))OR('2123659629')))OR(t0.c25)))AND(t0.c25))) FROM t0, vt0, vt1 WHERE ((((~ (0x4cfbc6ad)))+(((NULL)OR(0.34387750368927217))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)/(t0.c25)) IN ((NOT (vt0.c2)), ((t0.c0)/(vt1.c0)))), LTRIM(t0.c84 COLLATE NOCASE, 0Xffffffffc97ed2f3 COLLATE NOCASE), (((- (t0.c0))) NOT BETWEEN (SUM(vt1.c0)) AND (x'')) FROM vt1, t0, vt0 WHERE (json_quote((x'8a0d9a51' IN ()))); -- 0ms;
SELECT DISTINCT MAX(AVG(t0.c84)) COLLATE NOCASE FROM vt0, t0, vt1 WHERE (((((((0.4487878543843038)AND(0x5df14ae7)))AND('')))>>(CASE WHEN x'' THEN 0.06700390167161052 ELSE x'af11a68f' END)));SELECT ALL ((LIKELY(t0.c84)) BETWEEN (((((t0.c77)OR('')))AND(t0.c46))) AND (((t0.c77)-(vt0.c0)))) FROM t0, vt1 WHERE (CAST(((((x'')AND(NULL)))AND(0.8147305467267514)) AS INTEGER));SELECT DISTINCT (((t0.c25)IS(t0.c46)) IN ()) FROM vt0, vt1 LIMIT -927345442 OFFSET 1519223037; -- 0ms;
SELECT ALL CAST(0.035641314341853914 AS NUMERIC) FROM vt1 WHERE (((0.6398568715084313 COLLATE RTRIM)>=(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT NULL FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT ('' IN ()), CAST(((vt1.c0)>>(t0.c77)) AS REAL), CASE ((vt1.c0)<(t0.c45))  WHEN (t0.c45 IN ()) THEN vt0.c1 ELSE (- (t0.c84)) END FROM vt0;SELECT DISTINCT (LIKE(t0.c45, vt0.c1, '5') IN ()), ((vt0.c1)<=(vt0.c0)) COLLATE BINARY, vt0.c0 FROM vt1, t0;SELECT DISTINCT (- ((t0.c45 IN (vt0.c1)))), (((~ (t0.c77)))IS NOT(LIKELIHOOD(t0.c84, 0.8380174712523382))), CAST((t0.c45 IN ()) AS TEXT) FROM vt0, t0 WHERE (CASE (+ (x''))  WHEN NULL THEN (((('-1423593369')OR('-264894138')))OR(0.6492037543483478)) ELSE (- (0.3104845773297332)) END); -- 0ms;
SELECT DISTINCT ((((t0.c45)>(x'5f10'))) BETWEEN (((t0.c45)-(t0.c84))) AND (((((((((((((t0.c46)AND(vt0.c1)))OR(t0.c46)))OR(t0.c84)))AND(0X7fffffffffffffff)))OR(vt0.c0)))OR(t0.c46)))) FROM vt0, t0 CROSS JOIN vt1 ON ((((((((((t0.c46)AND(t0.c84)))AND(t0.c25)))OR(t0.c25)))OR(t0.c77))) NOT BETWEEN (t0.c25 COLLATE BINARY) AND (CAST(vt0.c1 AS INTEGER))) WHERE (((NULL)&(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 0Xffffffff87f757bd FROM t0, vt0, vt1 WHERE (((NULL COLLATE BINARY)+(HEX('1327262495')))); -- 0ms;
SELECT ((SUM(vt0.c0)) NOT NULL) FROM vt0 WHERE ((((('-1423593369')) BETWEEN ((0.540116307735206)) AND ((573904621))) IN ((~ ('k\3'))))); -- 1ms;
SELECT t0.c84, TYPEOF(((t0.c77) IS TRUE)), ((((((NULL)OR(t0.c45)))AND(vt0.c0))) NOTNULL) FROM vt0, t0, vt1 WHERE (x''); -- 0ms;
SELECT ((((((((GLOB(vt0.c0, vt1.c0))AND((- (t0.c84)))))AND(((t0.c77) NOT BETWEEN (t0.c45) AND (vt0.c2)))))OR(((((((((t0.c46)OR(-1276197521)))AND(vt0.c0)))OR(t0.c45)))OR(vt0.c2)))))OR(TOTAL(t0.c77))) FROM t0 WHERE (CASE WHEN ((NULL)||(x'')) THEN 0.306111728612836 END);SELECT DISTINCT (NOT (((((((((t0.c84)AND(vt0.c0)))AND(t0.c46)))AND(0xffffffffd54431c7)))AND(vt0.c1)))), UPPER(vt0.c0) COLLATE NOCASE, '-366974277' FROM vt0 WHERE (CASE WHEN (- (NULL)) THEN (x'538b' IN ()) ELSE CAST(NULL AS INTEGER) END) GROUP BY ((((((t0.c25)OR(t0.c84)))OR(t0.c77)))>=(CAST(t0.c0 AS REAL))), (((t0.c77, t0.c77, vt0.c1)) NOT BETWEEN (((0x5e9caaa4 IN ()), ((t0.c0) BETWEEN (t0.c46) AND (t0.c77)), 0.13584084163978272 COLLATE RTRIM)) AND ((vt0.c2 COLLATE RTRIM, (vt1.c0 IN ()), NULL))), (((vt0.c0, '-822222385', t0.c25)) BETWEEN ((vt0.c2, TRIM(t0.c46), ((t0.c84)||(vt0.c1)))) AND ((0.8214790533502965, ((t0.c0)<(t0.c84)), TRIM(vt1.c0, t0.c46))));SELECT ((CAST(vt0.c1 AS NUMERIC))%(((vt1.c0)<<('XH쳛\n')))) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT (('T?NmB䛆>') NOTNULL) FROM vt1, vt0, t0 WHERE (((((((0.6165238350304358) NOT BETWEEN ('0.7633746301011131') AND ('144094039')))AND((('\r퀐(')=('-186360365')))))OR(((NULL) NOT BETWEEN ('G~') AND (NULL))))) ORDER BY CASE WHEN TRIM(vt0.c0, t0.c46) THEN vt1.c0 COLLATE RTRIM END ASC, (~ (((((vt1.c0)AND(t0.c77)))OR(t0.c84))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((x'9190')OR(t0.c77)) AS REAL) FROM vt1, t0, vt0 WHERE (0.14351520842123455); -- 1ms;
SELECT ((((((t0.c0)/(vt0.c1)))AND(CASE t0.c46  WHEN t0.c25 THEN t0.c46 END)))AND(TOTAL(t0.c25))) FROM t0, vt1 WHERE (((((HEX(DISTINCT '-927345442'))OR((('xG') NOT BETWEEN ('-1561601439') AND ('렍O5aY}\ru')))))AND(((0.13584084163978272)<(NULL))))) ORDER BY ((((CAST(t0.c46 AS INTEGER))OR(((((((((((((t0.c84)OR(vt0.c1)))AND(t0.c45)))OR(vt1.c0)))AND('XsBdiqh')))OR(vt1.c0)))AND(t0.c84)))))OR(CASE 0.6360299003720252  WHEN t0.c0 THEN t0.c25 END)) DESC;SELECT ALL CASE WHEN json_quote(vt0.c2) THEN CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c25 WHEN t0.c45 THEN vt0.c0 END ELSE ((vt0.c2) NOTNULL) END, ((vt0.c2)%(MIN(t0.c46))), x'' COLLATE NOCASE FROM t0, vt1, vt0 WHERE ((((((NULL)+(NULL)), (('0.540116307735206')IS NOT(0.7633746301011131)), ((0.6319487315843245) BETWEEN ('') AND (x'')), (+ ('-2042605114')), ((0.44916081978195366)&(NULL))))<>(('', ((NULL)&(x'')), 0.4165340351094349, (('vz')>=('564997327')), PRINTF(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c84 THEN vt1.c0 WHEN t0.c46 THEN t0.c46 WHEN t0.c0 THEN t0.c84 END THEN (vt1.c0 IN ()) WHEN CASE WHEN t0.c46 THEN vt0.c2 ELSE t0.c25 END THEN ((vt0.c0)AND(t0.c0)) WHEN CASE t0.c77  WHEN vt0.c1 THEN t0.c77 WHEN t0.c77 THEN t0.c45 WHEN vt0.c1 THEN t0.c25 END THEN ((vt1.c0)AND(t0.c25)) WHEN vt0.c0 COLLATE NOCASE THEN ((vt1.c0)LIKE(vt0.c0)) WHEN (vt1.c0 IN ()) THEN (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c46))) END, CASE (((vt0.c0, vt0.c0, x'3ce5')) NOT BETWEEN ((t0.c46, t0.c77, t0.c46)) AND ((vt0.c1, '', vt0.c2)))  WHEN ((vt0.c1)IS NOT(vt0.c1)) THEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN -9.14435341E8 WHEN vt1.c0 THEN t0.c84 END ELSE ((t0.c45) BETWEEN (t0.c77) AND (t0.c77)) END, LOWER(DISTINCT vt0.c0) FROM t0, vt1;SELECT DISTINCT COUNT(vt0.c1) OVER () FROM vt0 WHERE (((ROUND(NULL, '\ne2H),'))%('m#' COLLATE RTRIM))) GROUP BY '1123056553' HAVING ((HEX(DISTINCT vt0.c1))>((((t0.c0)) BETWEEN ((vt0.c0)) AND (('1740246039'))))) ORDER BY ((((((t0.c84) NOTNULL))AND(((x'513d')%('-329908116')))))AND(CHANGES()));SELECT DISTINCT CAST(((((vt0.c2)AND(vt0.c2)))AND(t0.c25)) AS TEXT), (- (0x74c4dbff)), ((CASE vt0.c2  WHEN t0.c46 THEN '-1194198018' END) NOT BETWEEN ((((t0.c46))<=((vt0.c2)))) AND (((t0.c45) NOT BETWEEN (t0.c45) AND (t0.c77)))) FROM t0, vt1;SELECT (NOT (CASE t0.c0  WHEN t0.c46 THEN t0.c25 ELSE t0.c0 END)) FROM vt1 WHERE ((('x+tc#O{8')||(PRINTF(0.7980994224724133, NULL, x''))));SELECT DISTINCT (((MAX(t0.c45)))<>((((t0.c46)LIKE(vt0.c2))))) FROM vt0 WHERE (CAST('1842809864' COLLATE BINARY AS TEXT));SELECT DISTINCT (((t0.c45 IN ())) BETWEEN (t0.c84) AND (t0.c25 COLLATE NOCASE)) FROM vt1, vt0, t0 NOT INDEXED WHERE (((((((x'')/(3.6852488E7)))OR(NULL)))AND((((NULL)) BETWEEN ((0.6939550193710459)) AND (('%>准,0XP\n')))))); -- 0ms;
SELECT DISTINCT ((((((((((((t0.c25)OR(vt0.c2)))AND(vt0.c1)))OR(t0.c77)))OR(vt0.c0)))AND(x'' COLLATE BINARY)))AND((t0.c0 IN ()))) FROM vt0, t0; -- 0ms;
SELECT ALL 0x2208cfb FROM vt1, vt0 WHERE (MIN((0.22236692367746225 IN (NULL, NULL)), CAST('879635795' AS INTEGER))); -- 0ms;
SELECT DISTINCT -1206284689 FROM vt1; -- 0ms;
SELECT DISTINCT UPPER((+ (vt0.c0))) FROM vt0 WHERE ((('na<J6Z')AND(((0.641842971286364)IS(NULL))))); -- 0ms;
SELECT GROUP_CONCAT(vt0.c0) FROM vt0, vt1 WHERE ('J4'); -- 0ms;
SELECT DISTINCT (- (((t0.c77) NOT BETWEEN (t0.c25) AND (t0.c45)))) FROM t0, vt0, vt1 WHERE (CASE WHEN (NOT (0.4935401290055629)) THEN ((x'') NOT BETWEEN (NULL) AND (x'')) ELSE (x'' IN (0Xffffffff901ab0dd)) END); -- 0ms;
SELECT DISTINCT ((((((t0.c84)) NOT BETWEEN ((t0.c45)) AND ((t0.c46)))))<((t0.c77))) FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT (((t0.c84 IN ())) IS FALSE), (((('')OR(((((vt0.c0)AND(t0.c25)))AND('')))))AND(((t0.c45) NOT BETWEEN (vt0.c2) AND (t0.c46)))), ((((((t0.c25)AND(NULL)))AND(t0.c77)))LIKE(json_array_length(t0.c25))), ((((((t0.c25) BETWEEN (0.4402643080465377) AND (t0.c25)))OR((+ (t0.c0)))))AND(CAST(t0.c46 AS NUMERIC))), ((SUM(t0.c45)) BETWEEN (CAST(vt0.c1 AS NUMERIC)) AND (NULL)) FROM t0;SELECT DISTINCT AVG((t0.c25 IN ())) FROM vt0, vt1 LIMIT -947391540; -- 0ms;
SELECT DISTINCT CAST(t0.c25 AS TEXT) FROM vt1, t0 GROUP BY vt1.c0, load_extension(((vt1.c0) NOT NULL), ((t0.c77) BETWEEN (t0.c84) AND (vt0.c2))), t0.c25;SELECT DISTINCT LEAD(((((t0.c77) IS TRUE))LIKE(x'')), t0.c77, CAST(HEX(t0.c46) AS TEXT)) OVER ( PARTITION BY NULLIF(DISTINCT CASE WHEN vt0.c0 THEN t0.c84 WHEN vt0.c2 THEN vt0.c1 WHEN t0.c45 THEN t0.c25 ELSE t0.c25 END, (+ (vt0.c1))), ((TYPEOF(t0.c0)) NOT BETWEEN (LOWER(t0.c77)) AND (vt0.c2 COLLATE RTRIM)), (((((NOT (vt0.c0)))OR(((((((((((((x'')OR(t0.c77)))AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c1)))))AND((t0.c77 IN ()))), CASE WHEN (t0.c46 IN (t0.c45, t0.c77)) THEN ((vt0.c0)||(vt0.c1)) END) FROM vt1, t0;SELECT ((TYPEOF(t0.c0))IS NOT((((vt0.c0, t0.c45, vt0.c0))<>((t0.c0, vt1.c0, t0.c77))))), (((t0.c25) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN (vt1.c0 COLLATE NOCASE)), CUME_DIST() OVER () FROM t0, vt0, vt1; -- 3ms;
SELECT DISTINCT (t0.c0 IN (t0.c25)) COLLATE RTRIM, COUNT(vt1.c0 COLLATE NOCASE COLLATE BINARY) OVER (), (t0.c46 IN ()) COLLATE RTRIM FROM t0;SELECT DISTINCT ((((((t0.c25) NOTNULL))AND(((t0.c45)-(0.019161679562131106)))))OR((((t0.c84, x'', t0.c84, vt1.c0, vt0.c2, t0.c45, t0.c77)) BETWEEN ((NULL, t0.c25, vt1.c0, t0.c45, t0.c0, vt1.c0, t0.c46)) AND ((vt0.c1, t0.c84, t0.c46, '-263014387', -8.22222385E8, vt0.c1, vt0.c2))))) FROM t0, vt0, vt1; -- 0ms;
SELECT (((((t0.c84) NOT NULL)))<=(((- (t0.c45))))) FROM vt0, t0 WHERE (LOWER(DISTINCT ((x'') NOT NULL))); -- 0ms;
SELECT ALL (((vt0.c0) IS FALSE) IN ()) FROM t0, vt1 GROUP BY CAST((((vt0.c1, t0.c77, t0.c46)) BETWEEN ((vt0.c1, t0.c45, t0.c77)) AND ((t0.c25, vt0.c1, vt0.c1))) AS BLOB);SELECT DISTINCT (~ (CAST(x'4e30' AS NUMERIC))) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt1, vt0 WHERE ((NOT (0.6360299003720252 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT SUM(0.6312616192539734) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c2)AND(t0.c25)))AND(t0.c77)))OR(vt0.c0)))OR(t0.c84))) IS TRUE) FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(HEX(DISTINCT t0.c84) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c77)LIKE('f'))))>((((((vt1.c0)AND(vt0.c2)))OR(vt0.c2))))) FROM vt0 WHERE (((x'' IN (x'')) IN ()));SELECT TOTAL(TRIM(vt0.c0)) OVER () FROM vt1, vt0; -- 1ms;
SELECT ((SQLITE_VERSION()) NOT BETWEEN (((t0.c77)IS NOT(vt0.c2))) AND (((0.6401749197798173) BETWEEN (t0.c46) AND (0.05757104886545783)))), ((vt0.c0) NOT BETWEEN (t0.c46) AND (t0.c84)) COLLATE RTRIM, ((((((vt1.c0)OR(t0.c77)))OR(t0.c77)))LIKE(1485033209)) FROM t0, vt0, vt1 WHERE (0.0536991021359885); -- 0ms;
SELECT DISTINCT COUNT(*), CASE t0.c0  WHEN COUNT(*) THEN CASE WHEN t0.c46 THEN t0.c45 WHEN t0.c25 THEN vt0.c2 WHEN t0.c84 THEN vt0.c2 ELSE NULL END ELSE GROUP_CONCAT(t0.c45) END, NULL FROM vt1, vt0 WHERE ((((((0.743773638295738))>((1e500)))) NOTNULL));SELECT CAST(((vt0.c2)/(x'')) AS INTEGER), vt0.c2, t0.c77 COLLATE RTRIM FROM t0 WHERE (CASE (0.9598838022939049 IN ())  WHEN (x'' IN ()) THEN ABS(DISTINCT NULL) ELSE (('g☳鑩LRw>R''')AND(NULL)) END);SELECT DISTINCT CAST((((t0.c46)) BETWEEN ((t0.c77)) AND ((t0.c45))) AS NUMERIC) FROM vt0, vt1, t0; -- 0ms;
SELECT ALL vt0.c2 FROM vt1;SELECT DISTINCT '-2126764555' FROM t0, vt0 WHERE ((((((x'') BETWEEN ('-1901948983') AND (0.2507936513266653))))<(((('2HgRGw7') NOT BETWEEN (x'') AND (1.485033209E9)))))) LIMIT 2123659629; -- 0ms;
SELECT ALL (NOT ((0.44916081978195366 IN (vt0.c2)))), ((t0.c0 COLLATE BINARY) ISNULL), '-398133162' FROM t0, vt1, vt0 WHERE (((CAST('879635795' AS BLOB)) IS FALSE)); -- 0ms;
SELECT DISTINCT t0.c0, (((((vt0.c2))<((vt0.c2))))OR((((t0.c77, t0.c45, ''''))<((vt0.c1, x'', vt0.c0))))), MIN(((((t0.c46)OR('0.6398568715084313')))AND(0.30795676537149175))) FROM t0, vt1 WHERE ((~ (x'')) COLLATE RTRIM);SELECT DISTINCT CAST(((t0.c25)=(t0.c84)) AS TEXT) FROM vt1, t0, vt0; -- 0ms;
SELECT ALL CAST(((vt1.c0)+(vt0.c0)) AS REAL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT TOTAL((- (t0.c45))), (((((((x''))!=((t0.c45))))AND(((((t0.c25)AND(t0.c0)))OR(t0.c25)))))OR((t0.c0 IN (x'')))), ((((CASE vt0.c1  WHEN NULL THEN vt1.c0 WHEN t0.c0 THEN vt1.c0 WHEN t0.c45 THEN x'32cd' ELSE vt0.c1 END)AND(vt1.c0)))OR(((t0.c84)OR(vt0.c2)))) FROM t0, vt0, vt1 WHERE (COALESCE(DISTINCT ((x'')GLOB(x'')), (((((((('1959058431')OR('-2121164254')))OR('1485033209')))AND(NULL)))AND('203276520')))); -- 1ms;
SELECT DISTINCT CASE t0.c25  WHEN t0.c0 THEN t0.c46 END COLLATE BINARY, TOTAL(CAST(0x99ec9d1 AS BLOB)), LIKELY(DISTINCT 0x896b357) FROM vt0 LIMIT -626210371 OFFSET -438577467;SELECT ALL 0Xfffffffff052b80d FROM t0, vt1, vt0; -- 0ms;
SELECT (x'' COLLATE RTRIM IN ()) FROM vt0, vt1 WHERE ((((x'355a990b')) NOT BETWEEN ((NULL)) AND ((UNLIKELY(x''))))); -- 0ms;
SELECT ALL UPPER(((((vt0.c2)AND(vt0.c0)))AND(vt1.c0))) FROM t0, vt0, vt1 ORDER BY ((0.11641657712654307)IS((((t0.c84)) BETWEEN ((t0.c46)) AND ((t0.c45))))) DESC; -- 4ms;
SELECT DISTINCT CASE WHEN SUM(vt0.c0) THEN ((((vt0.c0)OR(0.857381521916161)))OR(t0.c25)) ELSE MAX(vt0.c1) END FROM vt0 WHERE ((((((x'')) BETWEEN ((0.296259583165311)) AND (('-1276197521'))))&((~ (NULL)))));SELECT DISTINCT AVG(((((((((t0.c84)OR(t0.c45)))AND(t0.c84)))AND(t0.c77)))OR(t0.c25))), CASE WHEN ((((((((vt1.c0)AND(t0.c84)))OR('')))OR(t0.c45)))OR(t0.c25)) THEN (((vt1.c0, t0.c77, vt0.c0)) BETWEEN ((vt0.c0, t0.c45, vt0.c1)) AND ((t0.c0, vt0.c0, t0.c84))) ELSE CASE WHEN t0.c77 THEN vt1.c0 ELSE vt0.c0 END END, LOWER(((vt0.c2) NOT BETWEEN (vt0.c0) AND (t0.c46))) FROM vt1;SELECT (((((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((t0.c25))))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c0)))))AND(vt0.c0)) FROM vt0, vt1;SELECT DISTINCT (((((((((NOT (t0.c45)))AND(((t0.c77) BETWEEN (0.2940890896078664) AND ('0.296259583165311')))))OR(vt0.c2)))OR((vt0.c0 IN ()))))OR(((vt0.c2) BETWEEN (NULL) AND (vt0.c2)))) FROM vt1;SELECT ALL (NOT (x'')) FROM t0, vt0 LIMIT 1946454367; -- 0ms;
SELECT '', 0.2071675808950071 COLLATE BINARY, ((((((t0.c77)*(t0.c45)))AND(0.44810457881337207)))AND(0.1396989319172367)), GROUP_CONCAT((vt1.c0 IN ())), (~ ((((t0.c46, t0.c45, t0.c45))>((vt1.c0, t0.c77, vt0.c2))))) FROM t0;SELECT DISTINCT LIKELIHOOD(LIKELY('-1016346848'), 0.7307571255045423) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN t0.c45 THEN t0.c0 WHEN NULL THEN t0.c0 WHEN vt0.c1 THEN vt1.c0 END) IS FALSE) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL (((t0.c77)) BETWEEN ((((t0.c45)IS NOT(t0.c77)))) AND ((((((vt0.c1)OR(t0.c77)))AND(t0.c0))))), (+ (NULL)), LAG(((vt0.c0) BETWEEN (((((vt0.c0)OR(vt0.c0)))AND(vt0.c2))) AND (x'832c' COLLATE NOCASE)), ((CASE WHEN vt0.c2 THEN vt0.c1 END)/((vt0.c0 IN ()))), (+ (vt0.c1)) COLLATE BINARY) OVER () FROM vt0 WHERE (CAST(((0X3bf7c035)*(7939635.0)) AS TEXT)) LIMIT -1949173414 OFFSET -2026191717;SELECT DISTINCT ((((t0.c0) ISNULL)) NOT BETWEEN (CAST(x'' AS REAL)) AND ((t0.c46 IN (vt1.c0)))) FROM t0, vt1, vt0; -- 0ms;
SELECT ((((((((CASE WHEN t0.c45 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN t0.c0 THEN t0.c45 END)OR(CAST(t0.c46 AS TEXT))))OR(TOTAL(vt0.c1))))OR((NOT (vt0.c1)))))AND(COALESCE(vt0.c1, t0.c25))), CAST(CASE WHEN 0.7876977813975489 THEN vt1.c0 WHEN t0.c25 THEN vt0.c2 WHEN t0.c45 THEN x'' ELSE vt0.c2 END AS NUMERIC), ((vt0.c0)/(((vt0.c1) NOT NULL))) FROM vt0, t0 WHERE (((((-1985383204) ISNULL)) BETWEEN (CAST(0.5982415653063424 AS TEXT)) AND ((('') IS FALSE))));SELECT DISTINCT CAST(((((vt0.c0)AND(t0.c46)))AND(vt1.c0)) AS NUMERIC) FROM vt1;SELECT ((vt1.c0)OR(t0.c77)) COLLATE BINARY, t0.c46, ((x'ed30') NOT BETWEEN (AVG(vt0.c1)) AND (CAST(vt1.c0 AS BLOB))) FROM vt0;SELECT DISTINCT NULL FROM vt1, vt0, t0; -- 0ms;
SELECT ALL ((vt0.c1)|((((t0.c0))>=((vt0.c1))))), ((NULL) BETWEEN (((((vt0.c2)OR(vt1.c0)))OR(vt0.c1))) AND (((t0.c77) NOT NULL))), (((vt0.c2) NOT BETWEEN (t0.c77) AND (vt0.c1)) IN (IFNULL(vt0.c1, t0.c46))) FROM vt1, vt0, t0; -- 1ms;
SELECT DISTINCT ((CASE t0.c77  WHEN vt0.c2 THEN '-0.0' ELSE '-218983319' END) IS FALSE) FROM t0, vt1, vt0 WHERE (((CAST('' AS INTEGER))AND(((x'8b69')&(NULL))))); -- 0ms;
SELECT ALL AVG(((vt0.c0) BETWEEN (t0.c84) AND (t0.c84))) OVER ( ORDER BY load_extension((t0.c0 IN (t0.c77)))  NULLS LAST) FROM vt0, t0, vt1 WHERE (CAST(CAST(NULL AS NUMERIC) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NTILE(((vt0.c0)<<((t0.c77 IN (vt0.c1, t0.c0))))) OVER (), (t0.c46 IN (vt0.c0, t0.c25, t0.c46)) COLLATE RTRIM, LAST_VALUE(((- (vt0.c2)) IN ())) OVER () FROM t0, vt1, vt0 GROUP BY UPPER(DISTINCT ROUND(t0.c45, t0.c77)) HAVING (((vt0.c1) NOT BETWEEN (vt1.c0) AND (t0.c84)) IN ()); -- 4ms;
SELECT DISTINCT json_type(CASE WHEN vt0.c0 THEN vt0.c2 ELSE '' END) FROM vt0, vt1, t0 WHERE (CAST(((NULL) NOT NULL) AS NUMERIC)) LIMIT 1983771063 OFFSET -1296339068; -- 0ms;
SELECT ALL (((((t0.c25))<=((t0.c0)))) IS FALSE) FROM t0, vt0 WHERE (((('py')AND(NULL)) IN ())) ORDER BY CASE ((((t0.c0)OR(t0.c0)))AND(vt1.c0))  WHEN CASE t0.c25  WHEN t0.c0 THEN t0.c46 END THEN ((t0.c45)<>(vt0.c0)) ELSE (t0.c45 IN (t0.c46, t0.c25)) END, (((~ (t0.c84)))IS NOT(((t0.c45) IS TRUE))) DESC, (((t0.c45)) BETWEEN ((((t0.c25)>=(t0.c77)))) AND (((- (t0.c77))))) ASC  NULLS FIRST;SELECT FIRST_VALUE(((((vt0.c2)||(vt0.c0))) IS TRUE)) OVER () FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c1)AND(t0.c84)))OR(vt1.c0)) COLLATE BINARY FROM vt0 WHERE (x'6d05');SELECT DISTINCT ((t0.c45) BETWEEN (t0.c0) AND (t0.c25)) COLLATE NOCASE, CASE WHEN ((t0.c77) NOTNULL) THEN MIN(t0.c46) ELSE ((t0.c77) NOT BETWEEN (t0.c84) AND (vt0.c0)) END, (NOT (SUM(t0.c0))) FROM vt0 WHERE ((((NULL))>((x''))) COLLATE NOCASE);SELECT ALL CAST(t0.c45 AS INTEGER), (- ('X?')), ((((((t0.c25)AND(t0.c45)))AND(t0.c0)))>>(HEX(t0.c0))) FROM vt0 RIGHT OUTER JOIN vt1 ON (((t0.c0)) BETWEEN ((t0.c46)) AND ((t0.c84))) COLLATE NOCASE WHERE (((((0xffffffffcfea3125) NOT BETWEEN (NULL) AND ('-76474768'))) BETWEEN (((x'')>=('1522122296'))) AND (((0.46956662615396005)>>(-1817535824))))) ORDER BY (t0.c77 IN ()) COLLATE BINARY;SELECT DISTINCT NULL FROM t0 LIMIT 469897271; -- 0ms;
SELECT DISTINCT NULL, COUNT((t0.c77 IN (x''))), CHAR((t0.c46 IN (0.17858657357914376))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (+ (CAST(t0.c0 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c45)) NOT BETWEEN ((t0.c46)) AND ((vt0.c2))), ((vt1.c0) NOTNULL), AVG(vt0.c2)))!=((((vt1.c0)IS(NULL)), (vt1.c0 IN (t0.c0)), ((vt0.c0)==(t0.c77))))) FROM vt0 WHERE ((('x㕶ἰ쒛' COLLATE RTRIM)<<(((('<K')) NOT BETWEEN (('0.11641657712654307')) AND ((x''))))));SELECT DISTINCT ((vt0.c0)||(CAST(vt0.c2 AS NUMERIC))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT x'3af5', CAST((~ (t0.c25)) AS TEXT), NULL COLLATE BINARY COLLATE BINARY FROM vt0;SELECT DISTINCT ((((((x'7ade')AND(t0.c25)))AND(t0.c77)))AND(vt1.c0)) FROM t0, vt0 WHERE ((((x''))<=((CASE '-329908116'  WHEN 0Xffffffff9742d2b6 THEN 765368318 WHEN 0.36892434973567234 THEN x'ed3f' WHEN '227090319' THEN x'' WHEN NULL THEN NULL WHEN '-654043831' THEN 0.857381521916161 ELSE 0.1874857580942203 END))));SELECT (t0.c0 IN (vt0.c2, t0.c25 COLLATE NOCASE)) FROM vt1 WHERE (((((x'') NOT BETWEEN (0.5572509450495033) AND ('-620226279'))) NOT BETWEEN (((('-43929029')) NOT BETWEEN ((0.8378299897653182)) AND ((0.2161513944561826)))) AND (((NULL)*(0.7079494457457243)))));SELECT DISTINCT CASE WHEN x'' THEN NULL END, (((t0.c46)) BETWEEN ((((t0.c84) IS FALSE))) AND ((COUNT(NULL)))), ((('G~', vt0.c0 COLLATE BINARY, ((vt0.c0)==(t0.c84))))>=((((t0.c84)|(t0.c45)), (t0.c25 IN (t0.c0)), ((0.22019393509555274) NOT BETWEEN (vt0.c0) AND (t0.c77))))) FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT (t0.c46 COLLATE RTRIM IN ()), CASE ABS(t0.c84)  WHEN t0.c77 THEN TRIM(t0.c46) WHEN ((t0.c25) BETWEEN (vt1.c0) AND (t0.c84)) THEN (((vt0.c0))>((t0.c46))) WHEN (t0.c0 IN ()) THEN (vt1.c0 IN (t0.c25)) END, ((x'') BETWEEN (MAX(x'')) AND (CASE vt0.c2  WHEN vt0.c0 THEN '94QiM' END)) FROM vt0 WHERE ((((0.7938241081195551, 0.9465015271961238, x'46df', '-398133162', 'Z7H?龫몮3Fq')) NOT BETWEEN (((('_4*G#') BETWEEN (x'c4e2') AND (0.9355199773336806)), ((NULL)<<(0X514f1a88)), ((1818950742) BETWEEN ('1765423671') AND ('CV~')), ((0.9685115570193185) BETWEEN ('zt') AND (0.6320118159696055)), (('*D\&V')GLOB(x'')))) AND ((LOWER(''), (('161401297')AND(0.4829999164195896)), CASE WHEN '852883610' THEN '-329908116' ELSE '471935067' END, (('-1326120059') BETWEEN ('xJ') AND (0.6931415536593638)), ((x'')%(x'ae43'))))));SELECT ALL ((ABS(vt0.c1))||((((NULL)) BETWEEN ((t0.c77)) AND ((t0.c25))))) FROM vt0;SELECT DISTINCT CAST(((vt0.c1) NOTNULL) AS REAL) FROM t0, vt1, vt0 WHERE ((((((x'')) BETWEEN ((')᛭Ax')) AND ((-1.206284689E9))))|(((NULL) BETWEEN (NULL) AND (0.6803263245866968))))) LIMIT 267417592; -- 1ms;
SELECT DISTINCT GROUP_CONCAT((~ (t0.c77))) OVER () FROM vt1 WHERE (CAST(CAST(0.39533829649828556 AS BLOB) AS REAL));SELECT DISTINCT t0.c84 FROM t0 WHERE ((((('X?') NOT NULL)) ISNULL)) LIMIT 1163169183; -- 0ms;
SELECT CASE WHEN -435532433 THEN SUM(vt1.c0) ELSE SUM(t0.c25) END FROM t0 WHERE (((- (-670114092)) IN ((NOT (0.6320118159696055))))) ORDER BY CASE CASE WHEN t0.c77 THEN t0.c84 ELSE vt1.c0 END  WHEN (~ (vt1.c0)) THEN UNLIKELY(t0.c77) ELSE ((t0.c25) NOTNULL) END ASC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT((t0.c77 IN (vt0.c2))) FROM vt1, vt0;SELECT (((+ (t0.c0)))<=(-981845622)) FROM vt0, t0, vt1; -- 0ms;
SELECT MIN((NOT (vt1.c0))) FROM t0, vt0 WHERE (CASE CASE '0.7876977813975489'  WHEN '-181873538' THEN NULL WHEN 4.71935067E8 THEN 0.26722667538405454 WHEN 8.5288361E8 THEN '471935067' END  WHEN x'fae9' THEN ((('-1349578902', '\T	?', 0.45999150907325626))>(('+*', '814989185', '-2026191717'))) ELSE (~ (x'b3e7')) END);SELECT COUNT(vt0.c0) OVER (), ((((((((t0.c0)OR(t0.c0)))AND(t0.c77)))AND(t0.c84)))AND(vt1.c0)) COLLATE BINARY, t0.c77 FROM vt1, vt0 WHERE (CAST(((NULL) IS FALSE) AS INTEGER));SELECT ((((t0.c0)OR(vt0.c1)))OR(GROUP_CONCAT(t0.c46))) FROM t0, vt0 NOT INDEXED WHERE (((((x'')IS(NULL)))%((NULL IN (x''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('-1877298979') FROM vt1, t0 WHERE (CAST(((('', '668106203', '1576094439'))<(('2', NULL, x''))) AS NUMERIC)) GROUP BY (~ ((vt1.c0 IN ()))), ((((vt1.c0) NOTNULL))=(t0.c84)), ((((t0.c0)<(t0.c0))) BETWEEN (((((((((t0.c84)OR(vt0.c2)))OR(t0.c46)))OR(t0.c45)))AND(vt0.c1))) AND (t0.c0));SELECT ALL vt1.c0 FROM t0 LIMIT 929415103 OFFSET -2126764555;SELECT ALL NULL, ((MAX(vt0.c0))+(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c25 THEN t0.c45 WHEN t0.c0 THEN vt0.c0 END)), ((CAST(vt1.c0 AS TEXT))==(((((((((t0.c84)AND(vt0.c0)))AND(vt0.c2)))OR(vt0.c2)))OR(t0.c84)))) FROM vt1 WHERE ((((LAST_INSERT_ROWID()))!=((((0.6757642274697742) NOT BETWEEN (0.6661175976728272) AND (x''))))));SELECT DISTINCT ((((((((((t0.c77)OR(t0.c46)))AND(vt1.c0)))AND(t0.c84)))AND(vt0.c0)))==((NOT (t0.c25)))) FROM vt0;SELECT DISTINCT ((((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(x'3991')))AND(t0.c46)))>=(((0xffffffff813c25f5)OR(t0.c77)))) FROM vt0, t0, vt1 WHERE (QUOTE(CASE x''  WHEN '䌾v' THEN '' ELSE '0.47827895839101653' END)) ORDER BY ((vt0.c2 COLLATE NOCASE)IS NOT((t0.c0 IN ()))) DESC  NULLS LAST, (+ (0.44916081978195366)), CASE WHEN (t0.c46 IN ()) THEN CASE WHEN vt1.c0 THEN t0.c25 ELSE vt0.c2 END END DESC; -- 0ms;
SELECT CAST((t0.c46 IN ()) AS INTEGER) FROM vt1; -- 0ms;
SELECT DISTINCT ((((t0.c84) ISNULL))IS NOT(((vt1.c0) BETWEEN (-1.276197521E9) AND (t0.c0)))) FROM t0, vt1, vt0 LIMIT -264894138; -- 0ms;
SELECT DISTINCT AVG(((t0.c0)=(vt1.c0))) OVER ( GROUPS '' PRECEDING), ((((t0.c0 COLLATE BINARY)AND(t0.c84 COLLATE BINARY)))OR(vt0.c1)), LIKELIHOOD(((t0.c0)>(t0.c46)), 0.19900236516091097) FROM vt1, t0, vt0 INDEXED BY i33 WHERE ((((NULL, 0.9692002018934351, '')) BETWEEN (((- ('')), (0.14673351058191775 IN (x'', NULL)), CAST(0.7932218001374421 AS INTEGER))) AND (('' COLLATE RTRIM, ((NULL) NOTNULL), CAST(-1.757228362E9 AS BLOB)))));SELECT DISTINCT (((((((((((vt0.c1)OR(t0.c25)))OR(t0.c0)))AND(vt0.c2)))OR(t0.c46))))>=((((vt0.c0)<<(vt0.c0))))) FROM vt0, vt1;SELECT NULL FROM t0 WHERE (((((('\r퀐(', '-1957381458', -1.757228362E9))<>(('', NULL, '')))) NOT NULL)); -- 0ms;
SELECT ALL ((CASE 0.8946012734389533  WHEN vt0.c0 THEN '' END) IS TRUE) FROM vt1;SELECT DISTINCT (((vt0.c1 COLLATE RTRIM))==((vt0.c2 COLLATE RTRIM))) FROM t0;SELECT ALL ((t0.c45) NOT BETWEEN (t0.c45) AND (t0.c84)) COLLATE BINARY FROM vt1, t0 NOT INDEXED; -- 0ms;
SELECT CASE ((t0.c77)<(vt0.c2))  WHEN (((t0.c77))>=((t0.c25))) THEN ((NULL)<<(vt0.c0)) ELSE (- (t0.c0)) END FROM vt0, t0 WHERE (((NULL IN ()) IN ())) ORDER BY CAST('u(gqM' AS TEXT) ASC; -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_GET(t0.c46)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (UNLIKELY(vt0.c0))), ((((CAST(vt0.c1 AS REAL))OR(t0.c77)))OR(0X99ec9d1)), ((((((vt0.c2)AND(vt0.c1)))OR(t0.c0)))<(((t0.c77) NOT BETWEEN (vt0.c0) AND (vt0.c2)))), t0.c25 COLLATE RTRIM COLLATE NOCASE, (((('881853225'))>=((vt0.c1))) IN (((t0.c0)&(x'')), (vt0.c1 IN ()))) FROM vt0, t0, vt1 WHERE ((((NULL)<<(0.2954211067951763)) IN (((x'ffb0')OR(0.39533829649828556)), ((((x'')OR(2.0327652E8)))AND('681561450'))))); -- 0ms;
SELECT ((((((t0.c46)AND(vt0.c1)))OR(t0.c84)))<<(t0.c84 COLLATE RTRIM)) FROM vt1 INDEXED BY i33, t0, vt0 WHERE (((((CASE 0x587d18b0  WHEN ',t' THEN '-786717605' ELSE '-620226279' END)AND((0.9685115570193185 IN ()))))OR((NOT (x''))))) GROUP BY ((t0.c0) ISNULL), vt0.c1, 387297206 HAVING (((~ (vt0.c2)))LIKE(((vt0.c2) IS TRUE)));SELECT CAST(json_quote(vt1.c0) AS BLOB) FROM t0, vt0, vt1; -- 0ms;
SELECT ALL CAST(MAX(t0.c46) AS NUMERIC), COUNT(((((t0.c45)OR(vt0.c0)))OR(t0.c84))), CAST(0.9462584565598333 AS NUMERIC), ((((t0.c0) NOTNULL))IS NOT(x'')), (((vt0.c2)) BETWEEN (((vt0.c0 IN ()))) AND ((CASE vt0.c1  WHEN t0.c25 THEN t0.c84 WHEN vt0.c2 THEN 35687675 WHEN t0.c46 THEN t0.c45 END))) FROM vt0, t0, vt1; -- 1ms;
SELECT ALL (((((vt1.c0)) NOT BETWEEN ((t0.c46)) AND ((t0.c84)))) NOT BETWEEN (LENGTH(t0.c84)) AND (((t0.c0)||(vt0.c0)))) FROM t0, vt0 WHERE (((((x'')<<('r8 SV!￿K'))) NOT BETWEEN ('') AND (((NULL)!=(x'aff8')))));SELECT DISTINCT (((t0.c25)) NOT BETWEEN ((UPPER(DISTINCT t0.c77))) AND ((((t0.c84) NOT BETWEEN (t0.c46) AND (t0.c46))))) FROM vt0 WHERE ((((('-691553198')||('227090319')))%(((NULL) NOTNULL))));SELECT CASE ((t0.c77)/(t0.c84))  WHEN t0.c46 COLLATE NOCASE THEN (+ (0.6893304870836804)) ELSE TYPEOF(DISTINCT vt0.c0) END FROM t0 ORDER BY 'Muc', ((((t0.c45, t0.c45, vt0.c2))<>((t0.c46, vt0.c2, vt1.c0))) IN ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), json_valid(vt1.c0))) DESC  NULLS FIRST, (t0.c46 IN (vt0.c1)) COLLATE RTRIM  NULLS FIRST;SELECT DISTINCT ((((vt1.c0) ISNULL)) BETWEEN (NULL COLLATE NOCASE) AND (CAST(t0.c0 AS NUMERIC))), COALESCE(DISTINCT MAX(t0.c46), t0.c46), SUM(((((((((vt0.c0)OR(t0.c25)))OR(t0.c77)))AND(vt0.c1)))OR(vt0.c0))) FROM t0, vt0, vt1; -- 2ms;
SELECT DISTINCT (((t0.c0, t0.c0, vt0.c2, t0.c46, t0.c84)) NOT BETWEEN ((t0.c25, CAST(t0.c84 AS BLOB), (((t0.c46, vt0.c1, t0.c77, t0.c0, vt1.c0))>((t0.c46, t0.c25, 0.8946012734389533, vt0.c2, t0.c77))), vt1.c0, ((vt1.c0)<(t0.c77)))) AND ((GROUP_CONCAT(vt1.c0), TRIM(DISTINCT vt0.c2), ((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)), ((t0.c0)<=(t0.c84)), (+ (vt0.c2))))) FROM t0 WHERE (CAST((NOT ('1416851304')) AS TEXT)) GROUP BY t0.c25 HAVING GROUP_CONCAT(t0.c25);SELECT DISTINCT AVG(((vt0.c0) NOT NULL)), ((LENGTH(t0.c77)) ISNULL), CASE ((vt0.c0) NOT NULL)  WHEN (((t0.c25)) NOT BETWEEN ((0.6593883326633578)) AND ((t0.c84))) THEN ((((t0.c77)AND(t0.c45)))AND(t0.c25)) END FROM vt1, t0, vt0 LIMIT -938177947 OFFSET -1177913931; -- 2ms;
SELECT DISTINCT LAG(t0.c25, 0.2783481667877399, (CAST(t0.c0 AS NUMERIC) IN (CAST(t0.c77 AS NUMERIC)))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM t0, vt1; -- 0ms;
SELECT ((CAST(t0.c46 AS INTEGER)) BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(t0.c25))) AND (TRIM(t0.c77))), CASE CASE WHEN t0.c25 THEN vt1.c0 ELSE vt0.c0 END  WHEN (+ (vt0.c1)) THEN '1586782121' END, ((vt0.c2 COLLATE BINARY)IS(TOTAL(0.5104033150498958))), ((((vt0.c1)+(t0.c25)))&(NULL)), ((((((((t0.c0)OR(CASE x''  WHEN t0.c0 THEN t0.c46 END)))AND(json_array_length(vt1.c0, vt0.c2))))AND(t0.c45 COLLATE RTRIM)))OR(vt0.c0)) FROM t0, vt0, vt1;SELECT ((CAST(t0.c45 AS INTEGER)) IS TRUE) FROM t0, vt0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(t0.c45 AS BLOB))/(t0.c77 COLLATE BINARY)) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, t0, vt0; -- 1ms;
SELECT ALL ((((t0.c84 IN ()), ROUND(t0.c46, t0.c84), ((((((((t0.c25)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c2)))AND(t0.c84))))>=((vt1.c0, vt1.c0, (((vt1.c0))<((t0.c46)))))), ((MIN(t0.c77)) NOT BETWEEN (((t0.c84) ISNULL)) AND (((t0.c45) ISNULL))), ((t0.c77 COLLATE BINARY) NOT NULL), (((((t0.c46)) BETWEEN ((t0.c77)) AND ((vt0.c1))))%((((vt0.c1))>=((vt1.c0))))), 0.7716105829851737 COLLATE BINARY FROM t0 GROUP BY (+ (((t0.c45) BETWEEN (NULL) AND (t0.c46)))), (((t0.c84 COLLATE NOCASE, (+ (vt1.c0)), ((vt0.c1)IS(vt0.c1))))<=((json(vt0.c1), NULLIF(DISTINCT NULL, vt0.c0), (t0.c46 IN (vt0.c0))))), vt0.c1;SELECT ALL ((vt1.c0 COLLATE RTRIM)IS NOT(x'e9e7')) FROM vt1, vt0, t0 WHERE (CASE WHEN ((0X1b6ed9c5)*(x'')) THEN CAST(NULL AS REAL) ELSE ('' IN ()) END) GROUP BY UNLIKELY(CAST(t0.c0 AS BLOB)); -- 0ms;
SELECT t0.c46 FROM vt0 WHERE (((((((x'12ae')) BETWEEN ((267417592)) AND ((NULL)))))<(((x'' IN ())))));SELECT ALL (+ (t0.c0 COLLATE RTRIM)) FROM t0 WHERE ((((((((((NOT (1.946454367E9)))OR(((((NULL)OR(0.07876642656994182)))OR('-1e500')))))AND(0.9172231231830055 COLLATE BINARY)))AND(CASE WHEN NULL THEN NULL ELSE NULL END)))AND(0.6625475190703574 COLLATE RTRIM))) GROUP BY LTRIM(((vt0.c0)&('-479888435')), ((((0.20186691563921433)AND(vt0.c0)))AND(vt1.c0))), ((CASE vt1.c0  WHEN vt1.c0 THEN '' END)LIKE((((t0.c25, NULL, x'eb64'))<((vt0.c2, 0.10419156795865514, 1.946454367E9))))), CAST(CAST(t0.c0 AS TEXT) AS INTEGER);SELECT DISTINCT t0.c84, ((t0.c45) BETWEEN ((((vt1.c0))>=((t0.c25)))) AND (vt1.c0)), ((((((((t0.c84)AND(t0.c46)))OR(vt0.c1)))OR(((t0.c45)||(t0.c84)))))AND((+ (NULL)))) FROM t0 ORDER BY vt1.c0 ASC  NULLS LAST, 0.18171453181795683  NULLS FIRST;SELECT SUM(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c77 END) FROM t0, vt0, vt1 WHERE (LTRIM((+ (x'')), ((((((((0.14351520842123455)OR(NULL)))OR('sa')))OR(x'')))OR(NULL)))) GROUP BY (NOT (((vt0.c1)>=(vt1.c0)))), (((('1252333868')OR(((((((((vt0.c1)AND('0.7485024002910297')))AND(t0.c0)))AND(t0.c45)))AND(0.6602044797976895)))))AND(vt0.c1)), (+ (t0.c0 COLLATE RTRIM)); -- 0ms;
SELECT ALL (+ (((vt0.c2)*(vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS REAL))/(((t0.c84) BETWEEN (vt0.c1) AND (t0.c84)))), '-914435341', (((x'f769' IN ())) NOT NULL) FROM vt1, t0 ORDER BY ((t0.c45 IN ()) IN ()), ((((TRIM(vt0.c2))OR(t0.c25 COLLATE NOCASE)))OR(((vt0.c0)>=(vt1.c0)))) ASC;SELECT ALL LAST_INSERT_ROWID() FROM vt1, t0; -- 0ms;
SELECT ALL (((- (t0.c0)))=(CASE WHEN t0.c46 THEN vt1.c0 END)) FROM vt0;SELECT AVG((t0.c84 IN ())) OVER () FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((((t0.c25) ISNULL)) NOT NULL) FROM t0, vt1 WHERE ((+ ((~ ('s쳕CꍺTo.>'))))); -- 0ms;
SELECT DISTINCT SUBSTR(CAST(t0.c84 AS INTEGER), x'' COLLATE BINARY) FROM vt1, vt0;SELECT ALL ((CAST(t0.c46 AS REAL))|('2033333622')), (((((t0.c46, t0.c25, t0.c84)) NOT BETWEEN ((t0.c0, t0.c77, t0.c77)) AND ((t0.c25, t0.c45, vt1.c0)))) BETWEEN (vt0.c2 COLLATE NOCASE) AND (MAX(t0.c45))), (((vt0.c2)/(t0.c84)) IN (((x'') NOTNULL))) FROM t0;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t0.c84 END)GLOB(t0.c0 COLLATE RTRIM)) FROM t0 WHERE (((((NULL, 'ba', '-2042605114', '852883610', x'', 0Xffffffffd9041549, '1744663184'))<((x'd7ef', NULL, NULL, 0.2426390534059374, x'', 'dcTdJ', '-0.0'))) IN (((-2068540035)IS NOT(0.48050312174253407)), CASE WHEN 0.11034851847469607 THEN 0X47cf80dc END)));SELECT DISTINCT SUM((((x'', t0.c45, t0.c46)) BETWEEN ((t0.c45, t0.c0, vt0.c1)) AND ((t0.c46, t0.c84, t0.c46)))) FROM t0, vt0; -- 0ms;
SELECT ALL (((t0.c46, t0.c84, t0.c0, t0.c46, '-918825703')) NOT BETWEEN ((((((vt1.c0)OR(t0.c84)))AND(vt1.c0)), ((vt0.c2)>>(vt1.c0)), ((((t0.c25)AND(vt1.c0)))AND(0.9355199773336806)), ((vt0.c2) IS TRUE), vt0.c1)) AND ((((vt0.c0)|(vt0.c1)), (vt0.c2 IN (vt0.c0)), ((t0.c84)*(vt0.c1)), ((t0.c84) IS TRUE), (- (vt0.c1))))) FROM vt1 NOT INDEXED WHERE ((((~ (0.13776547595376876)))%(((x'')<<(NULL)))));SELECT DISTINCT ((LTRIM(t0.c0, t0.c0)) NOT BETWEEN (NULL) AND (vt0.c1)) FROM vt0 WHERE ((~ (((('1952222424', '1522122296', NULL, x'', '0.2940890896078664'))>=((x'', x'', 0.345404852692217, -1985117404, 1.959058431E9)))))) ORDER BY CASE WHEN (((t0.c45))<=((vt0.c2))) THEN -466218725 WHEN vt1.c0 COLLATE BINARY THEN '' WHEN (('j	0j?') BETWEEN (0xffffffffa6a6e06b) AND (vt0.c2)) THEN ((vt1.c0)>(t0.c46)) END ASC  NULLS FIRST;SELECT DISTINCT vt0.c0, 0Xffffffffe88da37a, ((((CASE -1025831049  WHEN vt0.c2 THEN t0.c46 ELSE NULL END)AND('8龡DM53ﯧC')))OR(((t0.c25) BETWEEN (t0.c77) AND (t0.c46)))), ((((((t0.c77)OR(t0.c46)))OR(t0.c45))) ISNULL), (((t0.c25 COLLATE BINARY, ((vt0.c1)OR(vt0.c2)), NULL))<=((MAX(t0.c46), ((vt1.c0) BETWEEN (vt0.c0) AND (t0.c46)), vt1.c0 COLLATE NOCASE))) FROM t0, vt0 WHERE (CAST((~ (1932320960)) AS NUMERIC));SELECT CASE WHEN TOTAL(t0.c45) THEN (t0.c84 IN ()) WHEN ((t0.c84) IS TRUE) THEN GLOB(t0.c46, t0.c45) WHEN ((((((((vt0.c1)OR(t0.c77)))AND(vt1.c0)))AND(vt0.c2)))AND(NULL)) THEN -1206284689 ELSE ((t0.c46) BETWEEN (t0.c25) AND (vt0.c2)) END FROM vt1, vt0, t0 GROUP BY (((t0.c77)IS NOT(vt0.c0)) IN (((vt0.c2)<=(t0.c0)), LIKELIHOOD(DISTINCT t0.c25, 0.12378648112130308))) HAVING CAST('-1561601439' AS INTEGER); -- 5ms;
SELECT DISTINCT NULL FROM t0 WHERE (((((('564997327', x'', 0.5276241897260863))>=((-806735579, x'', 0.04795309814551607))))LIKE(((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((('' IN ()))AND(vt1.c0)), CASE WHEN ((vt1.c0) BETWEEN (1901942456) AND (t0.c46)) THEN CASE WHEN t0.c45 THEN vt0.c2 END ELSE ((vt1.c0) NOT NULL) END, (((NOT (t0.c45))) BETWEEN (((t0.c84)%(vt0.c0))) AND (GROUP_CONCAT(t0.c0))) FROM t0 GROUP BY ((((0.8567643628411419)LIKE(t0.c46))) NOT BETWEEN (CAST(t0.c77 AS INTEGER)) AND (CASE WHEN t0.c84 THEN vt0.c0 ELSE t0.c46 END));SELECT -2.63014387E8 FROM vt1, vt0, t0 WHERE ((((NULL, x'', 'Y Guz0~f^')) BETWEEN ((IFNULL(x'', x'a0c9'), '' COLLATE BINARY, UPPER(-6.94748544E8))) AND ((0.5425176009458934, (NOT (x'5415')), 0.8611860089265816 COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT CAST(AVG(vt0.c1) AS TEXT), CASE MAX(vt0.c1, '')  WHEN (NOT (vt1.c0)) THEN COUNT(*) END, (((((('0.6661175976728272', t0.c84, t0.c84, t0.c84, vt0.c0))>=((t0.c0, vt0.c2, t0.c46, vt0.c0, t0.c46)))))>((((t0.c0)|(vt0.c0))))) FROM t0, vt0, vt1 WHERE (((((((('1440536996', NULL, 0.6230685911385133)) BETWEEN ((3.87297206E8, x'6597', -5.84425127E8)) AND ((NULL, x'bff8', 0Xffffffffecd61992))))OR(CAST(NULL AS NUMERIC))))AND((- (0Xffffffffacbb5f0b))))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) BETWEEN (AVG(t0.c0)) AND (CAST(vt0.c2 AS BLOB))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT 0.38035227551359907 FROM t0, vt0 WHERE ((((4.44731056E8 IN ()))<=(LIKE(NULL, 0.17165155734815674)))) ORDER BY t0.c25 ASC; -- 0ms;
SELECT DISTINCT ((((t0.c46) IS FALSE)) IS FALSE), (((((t0.c84)<=(t0.c77))))<((0.22373761422356442))), COUNT(*), MAX(((((((((t0.c25)AND(1.767776915E9)))OR(vt0.c1)))OR(vt0.c1)))OR(t0.c25))), FIRST_VALUE(((json_array(t0.c77, vt1.c0, t0.c25, t0.c77, t0.c45, t0.c25))/(((t0.c25)*(vt0.c1))))) OVER () FROM t0, vt0, vt1 ORDER BY 'sz' ASC LIMIT 564997327;SELECT ALL TOTAL((((t0.c25))>=((t0.c84)))) FROM t0, vt1, vt0 WHERE (((NULL)+(CAST(x'f2ca' AS BLOB)))) GROUP BY (+ (((((-425352124)OR(t0.c46)))AND(t0.c46)))) HAVING t0.c45; -- 0ms;
SELECT DISTINCT (~ (CASE WHEN t0.c0 THEN vt0.c0 END)) FROM vt1, vt0, t0; -- 0ms;
SELECT ALL ((((((((((((((vt0.c2)AND(t0.c46)))AND(t0.c0)))AND(x'')))AND(0.8456521711311104)))AND(t0.c46)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) IS TRUE)) AND (((t0.c25) ISNULL))) FROM t0, vt0 WHERE (((x'')||((('573904621') NOT BETWEEN ('Er6J#࿆> K') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((t0.c46) NOTNULL))>=(t0.c46 COLLATE NOCASE)) FROM t0 WHERE ((((CASE WHEN 1933648609 THEN '(䱏' ELSE NULL END, (+ ('nDb')), CAST(x'' AS BLOB)))==((((((x'')OR('h	-a鑩')))AND('7')), (('-748205282')<(NULL)), CASE x'77ed'  WHEN -2042605114 THEN 0.9308857960253409 ELSE x'' END)))); -- 1ms;
SELECT ALL SUM(SUM(t0.c84 COLLATE NOCASE)) FROM vt0 WHERE (((((((0.7739359738981332)AND('-1592054886')))AND(x'')))GLOB((0xffffffffc1511df9 IN (x''))))) GROUP BY (((t0.c46)IS NOT(t0.c84)) IN ()), LIKELY(((t0.c77) NOT NULL)), (~ (((t0.c46) NOT BETWEEN (t0.c84) AND (vt0.c1)))) HAVING (vt0.c2 IN (((t0.c77) BETWEEN (t0.c45) AND (vt0.c2))));SELECT DISTINCT (- ((vt1.c0 IN (t0.c46, t0.c0, vt0.c2, t0.c45)))) FROM vt0;SELECT MAX((NOT (vt0.c1))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (+ (((t0.c77)OR(vt0.c1)))) FROM vt0, t0; -- 0ms;
SELECT t0.c77 COLLATE NOCASE COLLATE BINARY FROM t0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT DISTINCT t0.c77 COLLATE BINARY FROM vt1, vt0, t0; -- 0ms;
SELECT CASE ((((((((t0.c46)OR(t0.c77)))AND(t0.c0)))OR(t0.c25)))OR(t0.c0))  WHEN GROUP_CONCAT(vt0.c0) THEN ((((t0.c84)AND(vt0.c2)))OR(t0.c46)) ELSE '-806735579' END FROM t0, vt1, vt0 WHERE ((((((0xe1b82ec)AND(0.14351520842123455)))AND(NULL)) IN ())); -- 0ms;
SELECT ALL CASE CASE WHEN t0.c25 THEN vt0.c0 END  WHEN (+ (vt0.c0)) THEN (- ('aDi')) WHEN (t0.c46 IN ()) THEN (((t0.c0)) BETWEEN ((t0.c84)) AND ((vt0.c0))) WHEN ((t0.c25) ISNULL) THEN x'' ELSE (+ (t0.c46)) END FROM vt0, t0 WHERE (''); -- 3ms;
SELECT DISTINCT NULL FROM vt1 WHERE (((x'aa2a' COLLATE RTRIM)<(x'' COLLATE RTRIM))); -- 0ms;
SELECT COUNT(((((vt0.c0)AND(NULL)))OR(t0.c84))) OVER () FROM vt0;SELECT DISTINCT ((((vt0.c2)LIKE(vt0.c2)))<<(((((((((vt0.c0)OR(t0.c25)))OR(t0.c25)))AND(vt0.c1)))OR('0.2940890896078664')))) FROM vt0, vt1 WHERE (((((((((NULL)AND('')))AND('765368318')))AND(x'337a' COLLATE BINARY)))AND((NOT (852883610)))));SELECT ALL x'' FROM vt1 WHERE (((x'07ce183c' COLLATE RTRIM)<=(CASE WHEN 0Xffffffffa9b3fda0 THEN '' WHEN x'' THEN '4m' WHEN '-1611386301' THEN NULL END))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN ('-974135062') AND (t0.c0)) THEN GROUP_CONCAT(t0.c77) END, (- ((~ (t0.c25)))), CASE WHEN ((vt0.c2) NOT BETWEEN (0.7286052275884529) AND (t0.c25)) THEN CAST(t0.c84 AS NUMERIC) ELSE ((t0.c84)&(t0.c25)) END FROM vt1, t0;SELECT DISTINCT ((vt0.c1) IS FALSE) COLLATE RTRIM FROM vt1 WHERE ((('1842809864')LIKE(CASE WHEN NULL THEN NULL WHEN x'' THEN 0xffffffffbda1da28 WHEN '槠I-敲븸\n?w6' THEN 0.7304741690087682 END))) GROUP BY CASE WHEN CASE t0.c77  WHEN vt0.c1 THEN t0.c46 WHEN 0.7288154090781362 THEN t0.c0 WHEN vt1.c0 THEN vt0.c0 ELSE t0.c84 END THEN (((NULL)) BETWEEN ((t0.c45)) AND ((t0.c46))) ELSE ((t0.c45)LIKE(vt0.c1)) END, ((((vt1.c0) IS FALSE))%(((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0)))), CAST(((vt1.c0)>=(t0.c77)) AS NUMERIC);SELECT DISTINCT ((((vt0.c1) IS TRUE)) BETWEEN ((NOT (vt0.c0))) AND (CASE WHEN t0.c0 THEN vt1.c0 ELSE vt0.c2 END)) FROM t0 WHERE (((CAST(NULL AS BLOB))%(TRIM('-108456299')))) LIMIT -489672571;SELECT DISTINCT ((((t0.c46) NOT BETWEEN (t0.c84) AND (vt0.c2))) IS TRUE), LAST_VALUE((((t0.c77 IN ()))/(NULL))) OVER ( ORDER BY (NOT ((vt0.c1 IN (t0.c25))))), vt0.c0 FROM vt0, t0, vt1 WHERE ((((~ (x''))) IS TRUE)); -- 7ms;
SELECT DISTINCT vt0.c1 FROM vt1, t0 WHERE (CAST((x'' IN ()) AS REAL));SELECT ((('1264905726') NOTNULL) IN ()), LAST_VALUE(((CAST(t0.c25 AS REAL))*(CAST(vt0.c0 AS REAL)))) OVER (), ((CAST(t0.c84 AS REAL)) IS FALSE) FROM vt0, t0 WHERE (CASE WHEN CAST(-1.206284689E9 AS REAL) THEN (0.513740282519343 IN (NULL, x'a7e6')) END); -- 0ms;
SELECT ALL (vt0.c0 IN (t0.c84)) COLLATE NOCASE, GROUP_CONCAT(t0.c77 COLLATE BINARY) OVER (), (((+ (vt0.c0))) IS TRUE) FROM vt0, vt1, t0; -- 3ms;
SELECT ALL (COUNT(x'') IN ((~ (vt0.c1)))) FROM vt1, t0, vt0; -- 0ms;
SELECT TOTAL(((t0.c45)LIKE(vt0.c1))), (((t0.c45)) BETWEEN ((0.9692002018934351)) AND ((((((t0.c0)AND(t0.c77)))AND(t0.c77))))), ((((t0.c77) NOT NULL))GLOB(((t0.c77) NOT NULL))) FROM t0 WHERE ((((+ ('0.6312616192539734')))<=(CASE ''  WHEN '	3M' THEN 'i9#TA(F' WHEN x'' THEN -1458143352 WHEN '?H' THEN NULL ELSE x'' END))) LIMIT 7939635 OFFSET -398133162;SELECT DISTINCT SUM(((t0.c77) IS TRUE)) FROM vt0, t0 WHERE (x''); -- 0ms;
SELECT ALL ((((((((((vt1.c0)AND(t0.c84)))OR(t0.c45)))AND(t0.c84)))AND(0.8413104195565833)))&(((vt1.c0) NOT BETWEEN (t0.c25) AND (vt0.c1)))), x'51ff', LAST_VALUE(((((- (vt1.c0))))<=(((vt1.c0 IN ()))))) OVER () FROM vt1 LIMIT 371221290;SELECT DISTINCT (((t0.c45)) NOT BETWEEN ((ABS(DISTINCT t0.c84))) AND ((CAST(NULL AS TEXT)))) FROM t0 INDEXED BY i33, vt0, vt1 WHERE (((((0.8397269085493604)&('_L\lV㶧-%D')))<(((x'')AND(''))))) ORDER BY SQLITE_COMPILEOPTION_GET(vt0.c1 COLLATE RTRIM)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((SUM('JKT&')) BETWEEN (json_array_length(vt0.c2, t0.c0)) AND (((((vt0.c1)OR(vt0.c2)))AND(t0.c84)))) FROM t0, vt1 WHERE (UPPER(DISTINCT ((((-791431686)OR('1632267190')))OR('|')))) GROUP BY (NOT (t0.c45)), (('57558726' COLLATE RTRIM)>('0.6757642274697742' COLLATE BINARY)), ((((t0.c45 IN ()), CAST(vt0.c1 AS INTEGER), ((((t0.c0)OR(vt0.c0)))OR(t0.c77))))!=((((vt0.c2) IS FALSE), CAST(t0.c46 AS NUMERIC), CAST(vt0.c2 AS REAL)))), (((TYPEOF(vt0.c1)))<((CASE WHEN vt0.c1 THEN t0.c25 WHEN t0.c77 THEN t0.c84 WHEN t0.c45 THEN t0.c77 ELSE 0.8247641940011018 END))), (((t0.c84 IN ()))AND(((((((((t0.c77)AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c2)))AND(t0.c0))));SELECT DISTINCT ROW_NUMBER() OVER () FROM t0 WHERE ((((('b1cd?w')OR(NULL))) BETWEEN (('-1085690184' IN ())) AND (CAST('-1296339068' AS REAL)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, vt0 WHERE (CASE WHEN 0.802586974362645 THEN (('x+tc#O{8') NOT NULL) WHEN (('ld')>>('')) THEN ((NULL)>=('1952222424')) WHEN ((0.590103329912007)|(0.2060830230088997)) THEN (+ (0x1d3bec4)) ELSE ((0X50dd4f0d)/(-1940379496)) END) LIMIT -1016346848; -- 0ms;
SELECT CASE WHEN ((t0.c45) ISNULL) THEN ((vt0.c1)+(vt0.c2)) ELSE (t0.c77 IN (vt0.c2, x'3eb5')) END, ((t0.c0)=(vt0.c0)) COLLATE RTRIM COLLATE RTRIM, (-743541781 IN (t0.c77 COLLATE RTRIM)) FROM vt0, t0, vt1 WHERE (LOWER(DISTINCT (x'58a8' IN ()))); -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c45) NOT NULL) COLLATE NOCASE) OVER () FROM vt1, t0 GROUP BY NULLIF(t0.c46 COLLATE RTRIM, CAST(t0.c77 AS BLOB)) HAVING CASE WHEN ((((vt0.c0)AND(t0.c45)))OR(vt0.c2)) THEN ((NULL) NOT BETWEEN (t0.c84) AND (t0.c84)) WHEN (+ (vt0.c1)) THEN t0.c84 COLLATE BINARY WHEN (- (t0.c0)) THEN ((((((((t0.c45)AND(NULL)))AND(t0.c25)))OR(t0.c25)))AND(t0.c84)) WHEN vt0.c2 THEN (- (vt0.c2)) WHEN LENGTH(t0.c77) THEN ((t0.c25) NOT BETWEEN (vt0.c2) AND (vt0.c1)) END;SELECT ALL ((t0.c25)>=(((t0.c45)|(vt0.c0)))) FROM vt0 WHERE (CAST((((((((('-562150301')OR(-191475358)))OR(NULL)))OR(NULL)))AND(203215297)) AS TEXT));SELECT DISTINCT SUM(SUM(((t0.c46) NOT BETWEEN (t0.c46) AND (t0.c84)))) FROM t0, vt1;SELECT DISTINCT ((((x'')<(t0.c45))) NOT NULL), (+ (CASE WHEN t0.c45 THEN t0.c84 ELSE t0.c77 END)), CAST((+ (vt0.c2)) AS BLOB) FROM vt1, vt0, t0 WHERE (((((-1660756389 IN ())))>=((((-466218725) BETWEEN (x'') AND (0.5160499944610933)))))) ORDER BY (vt0.c2 IN ()) COLLATE NOCASE, (x'' IN (vt0.c2)) COLLATE RTRIM ASC  NULLS LAST, t0.c77 COLLATE BINARY COLLATE BINARY ASC  NULLS FIRST; -- 2ms;
SELECT ABS(DISTINCT 0xffffffffe88da37a), AVG(((vt1.c0) NOTNULL)), LIKELIHOOD(((vt0.c0)IS(vt1.c0)), 0.06092682019730167), CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT), ((((((vt0.c2)AND(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt1, t0;SELECT DISTINCT NTILE((~ (((vt0.c2)<(t0.c45))))) OVER (), CAST(CASE t0.c84  WHEN t0.c45 THEN vt0.c0 WHEN t0.c25 THEN t0.c0 WHEN t0.c77 THEN vt0.c1 ELSE vt0.c0 END AS REAL), GROUP_CONCAT(NULL), (((vt0.c1 IN ())) IS FALSE), ((CASE WHEN t0.c77 THEN t0.c84 END) NOT BETWEEN ((((vt0.c1))<>((t0.c25)))) AND (0.22374757898406794 COLLATE NOCASE)) FROM t0, vt0, vt1 LIMIT -1101808227;SELECT ALL (((((vt1.c0)) BETWEEN ((t0.c45)) AND ((t0.c84)))) NOT BETWEEN (vt0.c0) AND (((vt0.c0)IS NOT(t0.c25)))) FROM t0, vt1 WHERE (NULL);SELECT (('-767959011' COLLATE NOCASE) NOT BETWEEN (t0.c25) AND (vt0.c2)) FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT CAST(((t0.c77) IS TRUE) AS NUMERIC) FROM vt0, t0, vt1 WHERE (((((0Xffffffffe88da37a)<=('\[')))!=((NOT (0.20280412801348713))))); -- 0ms;
SELECT ALL (- (CASE t0.c0  WHEN t0.c0 THEN x'' ELSE vt0.c0 END)), (((((t0.c45)) NOT BETWEEN ((t0.c25)) AND ((vt0.c2)))) BETWEEN (CASE WHEN t0.c0 THEN vt1.c0 ELSE t0.c45 END) AND ((NOT (vt0.c0)))), t0.c25 FROM vt0 WHERE (NULL);SELECT CASE WHEN t0.c46 COLLATE BINARY THEN CASE t0.c84  WHEN 0.38810227270424236 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt1.c0 END ELSE x'' END FROM vt1, t0, vt0; -- 0ms;
SELECT DISTINCT (((((vt1.c0, t0.c0, vt0.c2, t0.c77, t0.c0)) NOT BETWEEN ((vt0.c1, t0.c25, NULL, t0.c45, 0.08272258942990196)) AND ((vt0.c0, vt0.c1, t0.c25, t0.c0, vt0.c2))))*(vt0.c0 COLLATE BINARY)) FROM vt1;SELECT ALL (t0.c25 COLLATE BINARY IN ((((vt1.c0, t0.c46, t0.c0)) NOT BETWEEN ((0.27852254077881866, t0.c25, vt0.c2)) AND ((t0.c45, t0.c45, t0.c45))))) FROM t0, vt0;SELECT DISTINCT SUM(TRIM(DISTINCT t0.c77, vt0.c2)) OVER (), ((((vt0.c2)>(t0.c45))) BETWEEN (t0.c45) AND (vt0.c0 COLLATE RTRIM)), NULL, LEAD(CAST((~ (t0.c25)) AS BLOB), CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN ((t0.c77) NOTNULL) THEN CASE t0.c77  WHEN t0.c77 THEN t0.c25 END END, (- (x'3dc4'))) OVER ( RANGE  CURRENT ROW EXCLUDE GROUP), vt1.c0, ((- (vt0.c0)) IN ((((t0.c84, t0.c45, t0.c45))>=((t0.c46, vt0.c2, vt0.c0))), CAST(t0.c84 AS INTEGER))), SUM((vt0.c0 IN ()) COLLATE NOCASE) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM vt1, vt0, t0; -- 19ms;
SELECT ALL (- (((t0.c45)+(vt0.c1)))) FROM vt1 WHERE ((('1252333868')IS(((NULL)<('0.6757642274697742')))));SELECT ALL ((((((vt0.c2)AND(vt1.c0)))AND(t0.c0)))IS NOT(((((x'')AND(t0.c0)))OR(t0.c45)))) FROM t0 WHERE ((- ((('TL/纭')<(0X111d0d1b))))) GROUP BY ((vt1.c0) NOT BETWEEN (CASE WHEN t0.c84 THEN vt1.c0 WHEN t0.c0 THEN NULL WHEN t0.c25 THEN vt0.c2 WHEN t0.c46 THEN t0.c45 WHEN t0.c0 THEN t0.c46 END) AND (((t0.c45)>(NULL)))), ((((((((((((CASE t0.c84  WHEN t0.c46 THEN t0.c84 ELSE NULL END)AND(0Xfffffffff81d2370)))AND(CAST(vt0.c2 AS NUMERIC))))AND(CAST(vt0.c1 AS NUMERIC))))AND(((t0.c45)OR(t0.c77)))))AND((('')OR(t0.c25)))))AND(((((x'6dc0')OR(vt0.c2)))OR(t0.c25)))), ((((((t0.c0)AND(t0.c84)))AND(vt0.c1)))/((NOT (t0.c77))));SELECT t0.c0 FROM t0 WHERE (CASE WHEN ((((x'')AND(0.4821321122567579)))AND(x'')) THEN CAST(x'' AS NUMERIC) END) GROUP BY (((((t0.c0 IN ()))OR(CAST(t0.c0 AS REAL))))OR(((((((((vt1.c0)OR(vt0.c2)))AND(vt1.c0)))OR(t0.c46)))OR(t0.c0)))), (((((t0.c25) IS FALSE)))!=((((vt0.c1)<<(t0.c46))))), (NOT (((vt0.c0)&(0xffffffff8942425e)))), ((((t0.c45) BETWEEN (vt0.c2) AND (vt0.c1)))%(CASE vt0.c0  WHEN t0.c45 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN 'y0' THEN t0.c25 ELSE t0.c77 END)), (((~ (vt1.c0))) NOT BETWEEN ((t0.c25 IN ())) AND (NULL)) HAVING ((((vt1.c0)*(0.7166705439563139))) NOT BETWEEN (((t0.c0)-(vt0.c1))) AND (((t0.c25)|(vt0.c2))));SELECT CASE WHEN (((t0.c46))<((vt0.c2))) THEN CASE t0.c46  WHEN t0.c25 THEN t0.c0 ELSE vt0.c2 END END, ((CAST(vt0.c1 AS REAL))<(SUM(t0.c77))), x'' FROM vt1;SELECT MIN(CASE t0.c25  WHEN t0.c77 THEN t0.c45 ELSE t0.c0 END) FROM vt1 WHERE (((((-1.276197521E9) NOTNULL)) BETWEEN (UNLIKELY(NULL)) AND ((0.3190502150292628 IN (NULL)))));SELECT (- (((((((((((((t0.c45)OR('2123659629')))AND(t0.c45)))AND(t0.c46)))AND(t0.c77)))AND(vt1.c0)))AND(t0.c0)))), CASE ((((vt0.c0)AND(t0.c46)))OR(0Xffffffffe5e80ee4))  WHEN ((t0.c77) BETWEEN (NULL) AND (-1.561601439E9)) THEN t0.c0 COLLATE BINARY ELSE ((((((((t0.c84)AND(vt0.c0)))OR(t0.c25)))OR(t0.c25)))OR(t0.c0)) END, AVG(t0.c77) OVER (), ((t0.c45 COLLATE NOCASE)*(TOTAL(t0.c0))), ((((t0.c25))=((t0.c77))) IN (vt0.c1, t0.c0)) FROM t0 WHERE ((((((NULL, -1, 1.983771063E9, 0.9937179926801646, NULL))!=((x'079a', '1443727576', x'f71d', 0.6803263245866968, 'J4')))) NOT BETWEEN (((0.7423304128358565) ISNULL)) AND (CASE WHEN '1082956999' THEN NULL END)));SELECT DISTINCT ((((-8.06735579E8)AND(t0.c46)))OR(t0.c0)) COLLATE NOCASE COLLATE BINARY FROM t0, vt1 WHERE (((0.6312616192539734 COLLATE NOCASE)!=(((((-584425127)OR(0.6895951171956662)))AND(0.4298386527712683))))); -- 0ms;
SELECT ALL (((t0.c45)) NOT BETWEEN ((CASE WHEN t0.c84 THEN t0.c77 END)) AND ((((((t0.c84)OR(t0.c45)))OR(t0.c25))))) FROM t0 WHERE (((x'2b4f')-((('1306629854')>(-2.64894138E8))))); -- 0ms;
SELECT DISTINCT MIN(((x'')==(vt1.c0))), (CAST(t0.c45 AS BLOB) IN ()), t0.c45 FROM t0, vt0, vt1; -- 1ms;
SELECT UNLIKELY(DISTINCT (- (t0.c25))) FROM vt0;SELECT DISTINCT (NOT (MAX(t0.c46))) FROM vt0, vt1, t0 WHERE ((- (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((CAST(NULL AS REAL))==(((t0.c0)*(vt0.c1)))), ((vt0.c2) BETWEEN (((t0.c25) BETWEEN (t0.c84) AND (vt0.c1))) AND ('1765423671')), ((((vt0.c0, t0.c25, t0.c46)) BETWEEN ((t0.c45, NULL, '-1016227595')) AND ((t0.c46, t0.c84, t0.c84))) IN ()) FROM t0, vt0; -- 0ms;
SELECT ALL ((((((((((t0.c25)OR(t0.c25)))OR(t0.c45)))OR(t0.c46)))OR(t0.c45)))||((t0.c0 IN ()))), SQLITE_COMPILEOPTION_USED(AVG(t0.c46)), NULL FROM t0; -- 0ms;
SELECT ((((((((((((((NULL)!=(t0.c0)))AND(vt0.c0)))AND(CASE vt0.c0  WHEN t0.c77 THEN NULL ELSE t0.c0 END)))OR('.#')))OR(((vt0.c2) IS TRUE))))OR(((t0.c45) BETWEEN (t0.c0) AND (vt0.c1)))))AND(((t0.c45)LIKE(vt0.c2)))) FROM vt1 WHERE (((((NULL) IS FALSE))!=((NULL IN ())))) LIMIT 1744018339;SELECT DISTINCT (- (json_array_length(t0.c25))) FROM vt1;SELECT (+ (t0.c0)) COLLATE RTRIM, ((SQLITE_COMPILEOPTION_GET(t0.c25)) NOT NULL), (NOT (CAST(t0.c0 AS INTEGER))) FROM vt0 WHERE ((~ ('')));SELECT DISTINCT t0.c0, COUNT(t0.c77), ((MAX(t0.c0)) NOT BETWEEN (('-435532433' IN (vt0.c2))) AND ((((t0.c25))==((vt0.c1))))) FROM vt0 GROUP BY (((((((('')AND(vt0.c1)))AND(vt1.c0)))OR(vt0.c1)))AND(t0.c0)) COLLATE NOCASE COLLATE BINARY;SELECT DISTINCT ((((((((((vt0.c2)OR(t0.c77)))OR(t0.c84)))OR(vt0.c1)))OR(vt0.c0)))GLOB(((t0.c25) BETWEEN (t0.c84) AND (0.4984552671711012)))), PERCENT_RANK() OVER (), (((x'')) BETWEEN (((((vt0.c1)) NOT BETWEEN ((t0.c45)) AND ((t0.c84))))) AND (((t0.c77 IN (t0.c84, vt0.c1))))) FROM t0, vt1 WHERE ((((('-1194198018')-(''))) NOT BETWEEN ((('') NOT BETWEEN (NULL) AND (NULL))) AND (COALESCE(0x7e94796d, -7.16951097E8)))) LIMIT 36852488;SELECT DISTINCT CASE WHEN CASE vt0.c2  WHEN t0.c46 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c45 THEN t0.c84 END THEN ((t0.c46) ISNULL) WHEN GROUP_CONCAT(t0.c46) THEN 103635307 WHEN ((((vt0.c0)AND(vt0.c2)))OR(t0.c0)) THEN ((t0.c25)IS NOT(vt0.c2)) ELSE (vt0.c0 IN (vt1.c0)) END, ((((t0.c46)IS NOT(t0.c0)))>>((x'' IN ()))), ((((t0.c45)OR(t0.c25)))OR(t0.c46)) COLLATE RTRIM FROM vt0, t0 WHERE ((((((((('444731056')AND(-1893039366)))OR(0.3145067903061971)))AND(NULL)))AND(x'')) COLLATE BINARY) ORDER BY x'9967' DESC, vt0.c1 ASC  NULLS FIRST;SELECT DISTINCT CASE WHEN (t0.c25 IN (t0.c0)) THEN 't]' END FROM vt0;SELECT DISTINCT GROUP_CONCAT(TRIM(NULL)), (((vt1.c0)) NOT BETWEEN ((((vt0.c2)||(t0.c45)))) AND (((t0.c46 IN ())))), NULL, GROUP_CONCAT(((t0.c45)/(vt0.c2))), (NOT ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))) FROM vt1, vt0;SELECT DISTINCT (((((((vt0.c0)) NOT BETWEEN ((t0.c45)) AND ((t0.c77))))OR(TYPEOF(vt0.c0))))OR(t0.c84 COLLATE BINARY)) FROM vt1, t0, vt0 LIMIT -1397006581 OFFSET -1326120059; -- 1ms;
SELECT ((LIKELIHOOD(DISTINCT t0.c45, 0.5502963958413611)) NOT NULL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT AVG((+ (t0.c0))) FROM vt1 WHERE ((((0.11263440319821738)) BETWEEN ((((x'189cd40a') IS TRUE))) AND ((((((NULL)AND(0x77f58d35)))AND(-2.013833283E9))))));SELECT DISTINCT (+ (((((NULL)OR(vt0.c1)))OR(vt0.c2)))) FROM vt1;SELECT ((((t0.c77)/(vt1.c0))) IS FALSE) FROM t0, vt0, vt1 WHERE (((CAST(NULL AS NUMERIC)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((-1679846303) IS FALSE) FROM vt1, t0 LIMIT -364254344; -- 0ms;
SELECT DISTINCT (((((t0.c84)) NOT BETWEEN ((vt0.c0)) AND ((t0.c84))))!=(0.447101759653211)) FROM vt0 WHERE (1.842809864E9);SELECT ALL (('-330564275') BETWEEN (t0.c84) AND (t0.c84)) COLLATE BINARY COLLATE RTRIM, ((((((t0.c46)-(vt1.c0)))AND((vt1.c0 IN (t0.c77, t0.c0)))))OR(SUM(t0.c45))), CHANGES(), CASE UNICODE(vt0.c1)  WHEN CASE t0.c46  WHEN vt0.c2 THEN t0.c84 WHEN t0.c84 THEN t0.c45 WHEN vt0.c2 THEN t0.c77 ELSE t0.c77 END THEN ((t0.c46) ISNULL) ELSE CASE WHEN 1095777829 THEN t0.c77 ELSE vt0.c1 END END, CASE (((vt0.c0, t0.c25, t0.c77)) BETWEEN ((t0.c0, t0.c0, t0.c46)) AND ((t0.c45, vt0.c2, t0.c84)))  WHEN CAST(t0.c0 AS REAL) THEN SUM(vt0.c1) WHEN ((((vt0.c2)AND(t0.c46)))AND('1837656621')) THEN CASE WHEN t0.c45 THEN vt1.c0 END WHEN CASE WHEN t0.c0 THEN vt0.c1 WHEN t0.c46 THEN vt1.c0 WHEN vt0.c0 THEN NULL ELSE t0.c45 END THEN SUM(vt0.c2) ELSE ((((t0.c0)OR(vt0.c0)))AND(vt0.c0)) END FROM t0 WHERE (((((((((x'')OR(x'')))OR(0.14351520842123455)))AND(0.5960246801788779)))OR('368742538' COLLATE BINARY))) GROUP BY ((t0.c84)<>((((vt0.c0, 0.4829999164195896, vt0.c1)) BETWEEN ((t0.c46, t0.c0, t0.c46)) AND ((t0.c77, vt0.c1, t0.c77))))) HAVING TOTAL(((t0.c84) IS FALSE)) ORDER BY CASE ((t0.c84) BETWEEN (vt0.c1) AND (t0.c45))  WHEN ((vt1.c0)<(vt1.c0)) THEN (t0.c45 IN ()) END, CASE WHEN ((vt0.c2)%(t0.c77)) THEN ((vt0.c0)%(vt0.c2)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c25)) THEN TIME('y', t0.c84, t0.c25) WHEN -122012151 THEN 0x36e46c6 END  NULLS FIRST, LAST_INSERT_ROWID();SELECT TOTAL(t0.c84) OVER () FROM t0; -- 0ms;
SELECT ALL t0.c0 FROM t0, vt0, vt1; -- 0ms;
SELECT ALL NULL FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((vt1.c0) NOT BETWEEN ('') AND (vt1.c0)) COLLATE BINARY) OVER (), NULL, ((((((((((vt1.c0)AND(vt0.c1)))OR(vt0.c2)))AND(t0.c45)))OR(t0.c84)))>=(t0.c25 COLLATE NOCASE)) FROM vt1 WHERE (CASE WHEN ((x'd49b')!=(x'')) THEN (((-3.29908116E8, 2.67417592E8, '435878778'))<>((0.6931415536593638, x'', x''))) END);SELECT DISTINCT CAST(vt0.c2 COLLATE BINARY AS NUMERIC), ((((((t0.c0)AND(vt0.c0)))AND(t0.c25)))OR(CAST(t0.c25 AS NUMERIC))), (+ (CASE WHEN t0.c45 THEN t0.c25 WHEN vt0.c1 THEN vt1.c0 WHEN NULL THEN t0.c46 END)) FROM vt0, vt1, t0 WHERE (((NULL)LIKE(x'')) COLLATE RTRIM); -- 0ms;
SELECT (t0.c84 IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT CASE vt0.c0  WHEN t0.c46 THEN t0.c45 WHEN t0.c77 THEN t0.c25 WHEN t0.c77 THEN NULL END COLLATE RTRIM FROM vt0, vt1, t0 WHERE (CAST((0.8210748168483994 IN (0.7830337665123681)) AS NUMERIC)) GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT 0.1499983577461268 FROM vt0 WHERE (((CASE WHEN '' THEN x'' WHEN '396058810' THEN 0.0786192654600617 WHEN '267417592' THEN 0.764692059248416 ELSE -1.206284689E9 END)=(UNLIKELY(NULL)))); -- 0ms;
SELECT ALL COUNT((vt0.c0 IN ())) OVER () FROM vt1, t0 LIMIT 573904621 OFFSET -687235991; -- 0ms;
SELECT ALL (((RTRIM(vt0.c0)))>((((t0.c25) IS FALSE)))) FROM vt0, t0, vt1 WHERE (NULLIF(CHAR('yꍺC2Qq̉i'), ((((0.7300793852682284)OR(0.09575704261667317)))OR('-1958235933')))); -- 0ms;
SELECT DISTINCT CASE ((((vt0.c1)OR(vt0.c1)))OR(t0.c46))  WHEN ((vt0.c1) NOT NULL) THEN vt1.c0 ELSE ((t0.c84) NOT NULL) END FROM vt1, vt0, t0 ORDER BY (t0.c45 IN (t0.c45, CASE WHEN NULL THEN vt1.c0 ELSE vt0.c0 END)), (- ((t0.c25 IN (vt0.c2)))), ((((t0.c77 IN ())))<((((vt0.c1) BETWEEN (vt0.c1) AND (x''))))) ASC, ((t0.c25)<=(t0.c45)) ASC  NULLS FIRST; -- 2ms;
SELECT ALL (- (((t0.c0) BETWEEN (t0.c77) AND (t0.c0)))) FROM vt1, vt0, t0 WHERE (CAST(0xffffffff9ce8daff COLLATE NOCASE AS INTEGER)) GROUP BY json_array_length(((((vt0.c0)OR(vt0.c0)))OR(t0.c0)), CAST(vt0.c0 AS INTEGER)), t0.c0, (((json(vt0.c0), (((t0.c77))!=((t0.c84))), -808497678))>=((CASE WHEN '' THEN vt1.c0 ELSE t0.c25 END, CASE WHEN t0.c45 THEN t0.c45 END, ((((0.9013462728663977)OR(x'18b3')))OR(t0.c25))))) HAVING CASE WHEN CAST(t0.c84 AS TEXT) THEN COUNT(*) ELSE ((vt0.c1)IS(vt1.c0)) END;SELECT ALL CAST(((vt0.c0)>=(vt0.c2)) AS TEXT) FROM t0 LIMIT 2091562359;SELECT CASE WHEN x'fb8b' THEN ((vt1.c0) IS TRUE) END, CAST('-716951097' AS NUMERIC) COLLATE NOCASE COLLATE RTRIM, x'' FROM t0, vt0 WHERE ((NOT (CAST('-76474768' AS NUMERIC))));SELECT ALL AVG(x'acf1' COLLATE NOCASE) OVER ( ORDER BY (- (t0.c46)), ((((((t0.c45)AND(t0.c45)))OR(vt0.c2)))==((t0.c84 IN ()))) ASC GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt0, vt1 GROUP BY ((load_extension(vt0.c2, t0.c0)) NOTNULL) HAVING ((((vt0.c2) NOT BETWEEN (t0.c46) AND (vt0.c2)))<<((('g-') IS TRUE))) ORDER BY LOWER(DISTINCT ((t0.c25) NOT NULL))  NULLS FIRST, ((ABS(vt0.c2)) NOTNULL)  NULLS FIRST, CASE WHEN t0.c45 THEN ((((((((0.3994582295628223)AND(vt0.c2)))OR(t0.c77)))AND(vt0.c0)))AND(t0.c46)) END DESC  NULLS FIRST;SELECT DISTINCT CASE WHEN (+ (t0.c46)) THEN ((vt0.c0)|(t0.c45)) WHEN (((vt1.c0))>=((t0.c84))) THEN t0.c84 WHEN LOWER(t0.c25) THEN ((t0.c0)*(vt1.c0)) END FROM t0, vt1, vt0; -- 0ms;
SELECT (+ (((t0.c46)LIKE(t0.c84)))) FROM t0 WHERE ((0.29739304102303155 IN (x'', -1374814718)) COLLATE BINARY COLLATE NOCASE); -- 0ms;
SELECT ALL ((STRFTIME(vt1.c0, vt0.c0, 0.14176802873595096))/(CASE vt0.c1  WHEN t0.c45 THEN t0.c0 END)) FROM vt0, vt1 WHERE ((- (NULL)) COLLATE RTRIM);SELECT ALL HEX(((t0.c77)<(t0.c84))) FROM t0, vt1 LIMIT -1786399444; -- 0ms;
SELECT DISTINCT ((((((t0.c46)OR(t0.c46)))OR(vt0.c1)))IS NOT(((x'') NOTNULL))) FROM vt1, t0;SELECT ((((0.9411980774520937) NOT BETWEEN (t0.c84) AND (vt0.c0)))%(((t0.c84)/(t0.c45)))) FROM vt0, t0, vt1 WHERE (CASE WHEN (((x''))<=(('sxS|U#'))) THEN (NOT (x'')) ELSE ((0.49727875671513433)>(0.03408367990775485)) END); -- 0ms;
SELECT DISTINCT 0.8517197055901411 FROM t0, vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((t0.c25)AND(NULL)))OR(t0.c25)) COLLATE BINARY FROM vt1, vt0, t0 WHERE ((((((0.29185980987896354))==(('ni5h~'))))%(CASE WHEN x'' THEN 'T' ELSE x'' END))); -- 0ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((NULL) NOT NULL) AS NUMERIC), CASE t0.c84  WHEN t0.c45 COLLATE BINARY THEN (((t0.c45))<=((t0.c46))) WHEN ((vt0.c0)/(t0.c25)) THEN CASE vt0.c0  WHEN t0.c77 THEN '1901942456' END WHEN vt0.c0 COLLATE NOCASE THEN ((t0.c84) NOTNULL) ELSE (((t0.c0))==((t0.c0))) END, ((((((t0.c0) BETWEEN (t0.c0) AND (t0.c77)))OR(SQLITE_COMPILEOPTION_USED(t0.c45))))OR(t0.c0 COLLATE BINARY)) FROM vt1, t0 GROUP BY ((((((t0.c77)AND(vt0.c2)))AND(t0.c45)))>>((t0.c0 IN ())));SELECT ALL ('1191954166' IN ()), (((vt0.c0)) BETWEEN ((CAST(t0.c0 AS REAL))) AND (((((t0.c77)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1)))))), ((((vt0.c1) NOT NULL))GLOB(CAST(t0.c45 AS REAL))) FROM t0, vt1 WHERE ((((0xffffffff8d1be22a IN ()))<=(0.34387750368927217)));SELECT ALL TRIM(COUNT(t0.c0)) FROM t0, vt1 INDEXED BY i33, vt0 WHERE (((((((NULL)OR(NULL)))AND(1946454367)))<=((((('')AND(-4.3929029E7)))OR('-1024763873')))));SELECT DISTINCT (vt0.c0 IN ()) COLLATE BINARY FROM vt1 WHERE (((1272508 COLLATE NOCASE)&('' COLLATE NOCASE))); -- 0ms;
SELECT (((t0.c25 IN ()))|(MIN(vt1.c0))) FROM vt1 WHERE (((LIKELY(0xffffffffa50b9b1d)) NOTNULL)); -- 0ms;
SELECT ALL CASE WHEN (vt0.c0 IN ()) THEN vt0.c0 COLLATE RTRIM WHEN ((t0.c25)<>(vt0.c0)) THEN '1p' WHEN (~ (vt0.c1)) THEN ((t0.c45)>>(t0.c45)) END FROM vt1, vt0;SELECT ((t0.c77 COLLATE NOCASE)|(GROUP_CONCAT(t0.c77))) FROM vt1, vt0 ORDER BY ((vt0.c0) BETWEEN (vt1.c0 COLLATE RTRIM) AND (vt0.c2 COLLATE BINARY)) DESC;SELECT DISTINCT COUNT(*), ((((((0.4487878543843038)AND(t0.c45)))OR(vt1.c0)))%(TRIM(DISTINCT t0.c45, vt0.c1))), COUNT(*) FROM vt1, vt0, t0; -- 0ms;
SELECT ALL ((CAST(t0.c46 AS BLOB)) BETWEEN ((((t0.c77)) BETWEEN ((t0.c25)) AND ((t0.c45)))) AND (CASE WHEN t0.c45 THEN vt1.c0 END)) FROM vt0, vt1 WHERE ((~ (((('-46584795', '趟k', -1.397006581E9)) BETWEEN ((x'', NULL, NULL)) AND ((0Xffffffffd9d8035b, 0.33139552831566477, NULL)))))) ORDER BY ((t0.c0 COLLATE RTRIM)=((((t0.c25))!=((t0.c45)))))  NULLS LAST;SELECT DISTINCT (((vt0.c2) ISNULL) IN ()), SUM(json_array_length(vt0.c0)), (((2114607786, vt0.c0, t0.c46)) BETWEEN ((((t0.c0)<<(t0.c0)), NULL, t0.c0)) AND ((((t0.c0)-(t0.c46)), '1327262495', t0.c25 COLLATE BINARY))) FROM t0, vt1;SELECT ALL ROW_NUMBER() OVER (), TOTAL((NOT (t0.c45))), ((((((((((t0.c46)OR(t0.c25)))OR(x'')))OR(t0.c0)))AND(t0.c46))) IS TRUE) FROM vt1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c46) BETWEEN (t0.c84) AND (vt1.c0))) NOT BETWEEN (((t0.c77)GLOB(t0.c84))) AND (((t0.c0) NOT NULL))) FROM t0 WHERE (DATE((('-264894138')<>(1740246039)), (NOT (NULL)), ((3.68742538E8) NOT BETWEEN (1007805598) AND (0Xffffffffc1fe6364)))) GROUP BY CAST((x'' IN ()) AS TEXT) LIMIT 368742538 OFFSET 2128100070;SELECT COUNT(*), NULL, t0.c46 COLLATE BINARY FROM vt0 WHERE ('1587325604' COLLATE BINARY COLLATE NOCASE);SELECT ALL SUM(',5') OVER (), ((CASE vt0.c2  WHEN t0.c46 THEN t0.c25 ELSE vt0.c2 END)*(CAST(t0.c77 AS NUMERIC))), ((-2.042605114E9) IS TRUE) FROM t0 WHERE (((('1063344442' IN ()))%(((NULL)>(460858421)))));SELECT DISTINCT ((t0.c25 COLLATE RTRIM) IS FALSE), (((t0.c46) IS TRUE) IN (CHANGES(), TRIM(t0.c25))), (((vt0.c0 IN (vt0.c1))) NOTNULL), (t0.c45 IN ()) COLLATE NOCASE, (((t0.c46, t0.c45, t0.c77)) BETWEEN ((((((t0.c45)AND(t0.c46)))OR(t0.c46)), CASE WHEN vt0.c0 THEN t0.c77 ELSE vt1.c0 END, ((((NULL)AND(t0.c0)))OR(vt0.c2)))) AND ((x'', (((t0.c84))<=((t0.c77))), ((vt0.c2) BETWEEN (t0.c46) AND (t0.c45))))) FROM vt0, t0, vt1; -- 0ms;
SELECT vt0.c2, (((vt0.c1 IN ())) NOT BETWEEN (NULL COLLATE NOCASE) AND ((NOT (vt0.c1)))), SUM((((vt0.c2, t0.c84, vt1.c0)) BETWEEN ((t0.c77, vt1.c0, t0.c46)) AND ((t0.c0, x'', NULL)))) FROM vt1;SELECT DISTINCT ((((((((t0.c25)AND(0.33377636965247526)))AND(vt0.c0)))AND(vt0.c1)))AND(t0.c77)) COLLATE RTRIM, ((SUM(t0.c46))LIKE((NOT (t0.c0)))), t0.c77, ((t0.c25 IN ()) IN (((vt1.c0)AND(t0.c25)))), FIRST_VALUE(((~ (x'')) IN ())) OVER ( PARTITION BY vt0.c2, '530884793'), CAST(0.7331019911114851 AS INTEGER) COLLATE RTRIM, ((((t0.c84) ISNULL))GLOB(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt1, t0 WHERE (LOWER(DISTINCT ((NULL) NOTNULL))) ORDER BY CAST(((('1143302598')) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) AS REAL) ASC;SELECT ALL (((((vt0.c2)&(vt0.c1))))=((x'fed8'))), CAST(((vt0.c2) BETWEEN (vt1.c0) AND (t0.c84)) AS NUMERIC), (- ((((t0.c46))<((vt0.c0))))) FROM vt0, vt1;SELECT (- (t0.c25)), (- ('1306798194')), LIKELY(DISTINCT ((((t0.c77)AND(t0.c0)))OR(NULL))), (((vt0.c2)) NOT BETWEEN ((((x'')OR(t0.c45)))) AND ((CASE WHEN t0.c0 THEN vt1.c0 END))), CAST(CAST(vt0.c1 AS TEXT) AS NUMERIC) FROM t0, vt1;SELECT ALL COUNT(((vt0.c1) NOT BETWEEN (t0.c25) AND (x'a80d'))), t0.c46, (((((vt0.c2, vt0.c1, vt0.c0)) NOT BETWEEN ((t0.c25, t0.c45, vt0.c2)) AND ((t0.c0, t0.c46, t0.c0)))) BETWEEN (((t0.c45)GLOB(t0.c77))) AND (((((vt0.c0)AND(x'')))AND(t0.c45)))) FROM vt0 WHERE (((NULL COLLATE RTRIM)GLOB(-1.985383204E9 COLLATE BINARY)));SELECT DISTINCT COUNT(*) FROM t0 WHERE (CASE ((x'') NOT BETWEEN (0.2734437743204501) AND ('闇Jj>At\n0'))  WHEN (('t%Fpv\r')<=(NULL)) THEN ((x'')||(x'd5f4')) ELSE ((((NULL)AND(x'')))OR(x'99a9')) END) ORDER BY CASE WHEN ((vt1.c0)&(vt0.c0)) THEN vt0.c2 ELSE ((t0.c25)%(t0.c46)) END DESC  NULLS LAST, (((('')%(vt0.c1))) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (t0.c25)) ASC;SELECT DISTINCT ((((+ (0Xffffffffa38d999d))))<=((CASE WHEN t0.c46 THEN vt0.c0 WHEN t0.c77 THEN t0.c46 WHEN vt0.c2 THEN t0.c25 END))) FROM vt1 WHERE (CAST(CASE NULL  WHEN NULL THEN 0.22695339801985692 WHEN NULL THEN 0Xffffffffc990c19c WHEN '-1510160611' THEN '1767776915' END AS TEXT));SELECT CAST((- (vt0.c0)) AS BLOB), (((ABS(t0.c77), ((x'') NOT NULL), CAST(vt0.c1 AS REAL)))<=((CASE WHEN vt0.c0 THEN t0.c25 ELSE vt0.c0 END, ((t0.c45) NOT NULL), CAST(t0.c0 AS BLOB)))), (((- (t0.c0)))-(('1123056553' IN ()))) FROM vt1;SELECT DISTINCT ((t0.c84) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt1.c0)>>(t0.c45)))) FROM t0, vt1;SELECT ALL (((t0.c25)) BETWEEN ((t0.c46 COLLATE RTRIM)) AND ((t0.c25))) FROM t0, vt1, vt0; -- 0ms;
SELECT DISTINCT (NOT (((t0.c25) NOT BETWEEN (t0.c46) AND (t0.c25)))) FROM vt0 INDEXED BY i33, t0, vt1 WHERE (((CASE 'ik'  WHEN x'282d' THEN x'' END) BETWEEN (((NULL)>>(x'17f3'))) AND (x'')));SELECT ALL ((((vt0.c2)OR(t0.c45)))AND(vt0.c0)) COLLATE RTRIM FROM vt0;SELECT ALL ((x'0095')IS((((t0.c45, t0.c45, vt0.c0))>=((t0.c45, t0.c25, vt0.c1))))), CAST(t0.c84 AS INTEGER), CASE WHEN ((NULL) IS FALSE) THEN t0.c77 COLLATE BINARY WHEN COUNT(*) THEN ((((vt0.c0)OR(vt1.c0)))AND(t0.c0)) WHEN vt1.c0 COLLATE BINARY THEN ((t0.c0) NOT BETWEEN (t0.c25) AND (vt0.c0)) ELSE CASE x''  WHEN t0.c46 THEN vt0.c1 END END FROM vt0;SELECT ALL (((t0.c84))<>((0.9540135388997545))) COLLATE NOCASE, (t0.c77 IN ()) COLLATE BINARY, (((vt1.c0 IN ())) BETWEEN (CAST(t0.c0 AS REAL)) AND (((vt0.c2) NOT BETWEEN (0.5049351089314992) AND (vt0.c0)))) FROM t0, vt1;SELECT ALL (((vt0.c2)) NOT BETWEEN ((((vt0.c1)=(t0.c46)))) AND ((((t0.c0) BETWEEN (t0.c77) AND (t0.c0))))), CAST(vt0.c2 AS BLOB), NULL FROM t0, vt1, vt0 WHERE (((TIME(NULL, 0.9541199631414852, x''))|(x'4a3fe52b' COLLATE NOCASE))); -- 0ms;
SELECT ALL (((NULL, (~ (vt1.c0)), CASE WHEN t0.c77 THEN t0.c45 END))!=(((((t0.c84)) BETWEEN ((vt0.c0)) AND ((t0.c84))), (vt0.c0 IN (t0.c77)), (((t0.c46))>((t0.c25)))))) FROM vt1 WHERE (CAST(((NULL) NOT NULL) AS REAL));SELECT DISTINCT CASE ((t0.c84)-(t0.c25))  WHEN t0.c45 THEN GROUP_CONCAT(t0.c77) END FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)<(t0.c45)))||((vt1.c0 IN ()))) FROM t0, vt0; -- 0ms;
SELECT json(((t0.c0) IS TRUE)) FROM vt1, vt0 WHERE ((- (IFNULL(DISTINCT 0.38478326268478824, NULL))));SELECT DISTINCT ((vt0.c1)==(-9.14435341E8)) COLLATE NOCASE FROM t0 ORDER BY '' DESC;SELECT json_extract(((NULL)!=(vt0.c2)), (+ (t0.c0))) FROM vt0, t0, vt1 GROUP BY t0.c0, TRIM(DISTINCT NULL, ((t0.c45) NOT BETWEEN (t0.c25) AND ('1937982589'))), CASE (((vt0.c2))<=((t0.c46)))  WHEN ((t0.c0) BETWEEN (t0.c84) AND (vt0.c1)) THEN UPPER(DISTINCT vt0.c1) END HAVING '-512679805'; -- 5ms;
SELECT DISTINCT LAST_VALUE((((('-304886565')OR(t0.c77 COLLATE RTRIM)))AND((('TRUE') BETWEEN (vt0.c0) AND (t0.c84))))) OVER () FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c45)) NOT BETWEEN ((t0.c77)) AND ((t0.c0))) COLLATE RTRIM, ((((vt1.c0)+(t0.c84)))*('ARh鲃')), (((vt1.c0)<(t0.c46)) IN ()) FROM t0, vt0;SELECT ALL ((((t0.c77)&(t0.c46))) NOT BETWEEN (((t0.c77) IS TRUE)) AND (((t0.c25)<<(0.8011539795006246)))) FROM t0, vt1 GROUP BY ((t0.c0) NOT BETWEEN (t0.c84) AND (vt0.c0)) COLLATE BINARY;SELECT DISTINCT vt0.c1 FROM t0 WHERE ((NOT (json_extract(x'4665', 0.26955025339854055))));SELECT DISTINCT TOTAL((((0.22236692367746225))>=((vt1.c0)))) FROM vt0, t0 LIMIT 63565770 OFFSET 888196137;SELECT x'6045' FROM t0, vt0, vt1 WHERE (CAST(HEX(DISTINCT 'KhB') AS TEXT)); -- 1ms;
SELECT CASE ((t0.c0)+(t0.c45))  WHEN '-398133162' THEN x'80ac' ELSE ((t0.c46)IS(vt0.c2)) END, ((vt1.c0) BETWEEN (t0.c46 COLLATE RTRIM) AND (((vt1.c0) ISNULL))), '-1691527694', 0.2854943434832503, SUM(((t0.c45)||(x''))) FROM vt1 GROUP BY ((t0.c45) BETWEEN (t0.c46) AND (vt0.c0)) COLLATE NOCASE;SELECT DISTINCT TOTAL(((('4GgcPWIj')) NOT BETWEEN ((t0.c45)) AND ((t0.c46)))) FROM t0, vt1; -- 0ms;
SELECT DISTINCT t0.c77, (~ (((vt0.c2)-(vt0.c1)))), ((((vt0.c2)||(t0.c0)))|(((vt1.c0)<>(vt0.c1)))), (((vt1.c0)) NOT BETWEEN ((vt0.c2)) AND ((t0.c77))) COLLATE NOCASE, (+ (((((t0.c0)AND(vt0.c2)))AND(t0.c0)))), NULL, (((0.4766486049175257, ((t0.c25) NOTNULL), ((t0.c84)/(vt1.c0))))!=((((vt0.c0)>('N|j_et.')), (~ (vt0.c1)), ((t0.c46) IS FALSE)))) FROM t0;SELECT DISTINCT t0.c45 FROM vt0, vt1;SELECT ((((CASE WHEN vt0.c1 THEN t0.c25 WHEN vt0.c1 THEN t0.c0 WHEN t0.c77 THEN t0.c25 END)OR(t0.c77 COLLATE RTRIM)))OR((NOT (0.8583930068950332)))) FROM vt0, t0 WHERE ((((CAST(x'' AS INTEGER)))<>(('''N' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c2) IS TRUE) AS BLOB) FROM vt1, t0 ORDER BY ((((vt1.c0)+(vt0.c1))) BETWEEN (CASE vt0.c2  WHEN t0.c0 THEN t0.c45 WHEN t0.c46 THEN -2100445139 WHEN vt1.c0 THEN vt0.c2 END) AND (((vt1.c0) BETWEEN (t0.c0) AND (vt0.c0))))  NULLS LAST;SELECT PERCENT_RANK() OVER () FROM t0, vt0 NOT INDEXED, vt1 WHERE (((ABS(0.8408555214871443)) NOT BETWEEN (((x'c953') IS FALSE)) AND (((NULL) NOT NULL)))); -- 5ms;
SELECT DISTINCT ((vt1.c0) IS TRUE) COLLATE NOCASE, (+ (((vt1.c0) BETWEEN (t0.c0) AND (t0.c45)))), CAST(((0.9296200753160943) ISNULL) AS INTEGER), ((((t0.c77))<=((t0.c45))) IN (vt0.c2 COLLATE RTRIM)), ((((((((((((((vt0.c2)/(t0.c0)))AND('1370454910')))OR((t0.c46 IN (vt0.c2)))))OR(MIN(vt0.c2))))OR((((t0.c45))=((t0.c45))))))AND(((vt0.c2) IS TRUE))))OR(0x65c47171 COLLATE BINARY)) FROM t0 WHERE ((- (((2126510481) NOT BETWEEN ('') AND (2033333622)))));SELECT DISTINCT ((CASE WHEN t0.c25 THEN vt0.c2 ELSE vt0.c0 END)|(LOWER(vt0.c1))) FROM t0, vt1, vt0; -- 0ms;
SELECT ALL t0.c46 FROM vt0, t0, vt1 WHERE (((0.9692002018934351)LIKE(0Xffffffffa1aa41ce))); -- 0ms;
SELECT DISTINCT (((t0.c0 COLLATE NOCASE))<>(((- (vt1.c0))))), ((((((((((((CAST(t0.c0 AS NUMERIC))OR(((((((((t0.c25)OR(t0.c45)))AND(vt1.c0)))OR(t0.c0)))AND(t0.c0)))))OR(vt1.c0)))OR((~ (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt1.c0 END)))OR((NOT (vt0.c0)))))OR((((t0.c84))<=((vt1.c0))))), (((((vt0.c2))<((t0.c25))))|((((t0.c77)) NOT BETWEEN ((t0.c45)) AND ((t0.c45))))) FROM t0;SELECT ALL ((((((')t')OR(vt0.c1)))OR(t0.c84))) ISNULL), json_array_length((t0.c45 IN ())), CAST(t0.c84 COLLATE RTRIM AS BLOB), (((t0.c25) NOT BETWEEN (t0.c25) AND (vt0.c1)) IN ((vt0.c2 IN ()))), ((t0.c0 COLLATE BINARY) BETWEEN (((t0.c0)>(t0.c25))) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND ('-435532433')))) FROM vt1, t0 NOT INDEXED WHERE (((0.5099291298205187)IS(0.6933558456395356)) COLLATE RTRIM) LIMIT -1640822419 OFFSET -1901948983;SELECT DISTINCT (~ ((~ (t0.c0)))), ((- (t0.c77)) IN (((t0.c25)+(t0.c25)))), ((MIN(vt0.c1))*(vt0.c0 COLLATE NOCASE)) FROM vt1, t0 WHERE (((((NULL)%(x''))) IS TRUE));SELECT DISTINCT CAST(t0.c77 COLLATE RTRIM AS BLOB) FROM vt1, t0 WHERE (((('-466218725')) NOT BETWEEN ((((NULL)<(0.30393938381549024)))) AND (((('n*') NOTNULL))))); -- 0ms;
SELECT vt0.c2 FROM t0, vt0 ORDER BY ((((vt1.c0) NOT BETWEEN ('') AND (t0.c25)))<(SQLITE_COMPILEOPTION_GET(vt0.c1))) ASC;SELECT DISTINCT (((((t0.c45)<<(vt0.c1)), (t0.c84 IN (t0.c77, vt1.c0, t0.c45)), (((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))))<=(((((t0.c84, '皵F', vt0.c2))<=((t0.c46, t0.c46, t0.c25))), (vt0.c0 IN ()), CAST(t0.c84 AS BLOB)))) FROM t0 GROUP BY ((vt0.c1)GLOB(((-4.36297813E8)IS NOT(vt1.c0))));SELECT DISTINCT DENSE_RANK() OVER () FROM vt0, vt1 WHERE ((((x'0c898b5a1ada')) BETWEEN ((((((-27835442)OR(0X64ea9a29)))OR(NULL)))) AND ((TRIM(DISTINCT 0xffffffff8594dedd, 'P<|!zw'))))); -- 0ms;
SELECT ALL ((((t0.c0)>=(t0.c77)))%(AVG(t0.c84))), (- (((vt0.c1) BETWEEN (vt0.c1) AND (t0.c45)))), ((COUNT(*)) NOTNULL) FROM vt0 RIGHT OUTER JOIN vt1 ON ((vt0.c0)&(t0.c77)) COLLATE BINARY;SELECT 0.9462068929562892, LAG(CAST((((t0.c0, t0.c0, t0.c77, t0.c84, t0.c46)) NOT BETWEEN (('&-!7C8xn', t0.c25, t0.c0, t0.c46, 0.02867912462615063)) AND ((t0.c45, t0.c25, t0.c25, t0.c45, t0.c25))) AS TEXT), ((t0.c77) IS FALSE) COLLATE BINARY, (+ (t0.c77 COLLATE BINARY))) OVER ( ORDER BY CAST(CAST(t0.c84 AS NUMERIC) AS INTEGER) DESC  NULLS FIRST, CAST(((vt1.c0)&(t0.c45)) AS BLOB)  NULLS LAST), GROUP_CONCAT(((t0.c0)|(t0.c0))) FROM t0;SELECT ALL ((((((((CAST(vt0.c1 AS NUMERIC))OR(((vt1.c0)<<(vt1.c0)))))OR(t0.c0 COLLATE NOCASE)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN t0.c0 THEN t0.c77 WHEN 0x6806eb9a THEN x'7367' ELSE vt0.c1 END)))AND(CASE WHEN t0.c25 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c2 WHEN t0.c45 THEN t0.c45 ELSE vt0.c0 END)) FROM vt1, vt0, t0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( RANGE vt0.c1 PRECEDING EXCLUDE CURRENT ROW) FROM vt1, vt0, t0 WHERE (((CAST(NULL AS TEXT))+(((x'')IS NOT(x'd78b')))));SELECT ALL vt0.c1 FROM t0, vt0, vt1 WHERE (COALESCE(DISTINCT json_array_length('0.26722667538405454'), (('陂E')<<(NULL)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((((vt0.c2)) BETWEEN ((t0.c77)) AND ((t0.c77)))))>=(((((t0.c46)) BETWEEN ((t0.c0)) AND ((vt1.c0)))))), ((vt0.c1)LIKE(vt0.c0)) COLLATE RTRIM FROM vt1 WHERE (0.035641314341853914);SELECT DISTINCT (((NOT (t0.c45))) IS TRUE) FROM vt0, t0, vt1; -- 0ms;
SELECT ALL ((CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE '-694748544' END)<<(((t0.c46) BETWEEN (vt1.c0) AND (vt0.c2)))) FROM t0;SELECT ALL CASE CASE vt0.c2  WHEN t0.c25 THEN vt0.c1 END  WHEN MAX(t0.c84) THEN (t0.c84 IN ()) WHEN x'' THEN CASE t0.c77  WHEN x'' THEN vt0.c2 WHEN t0.c77 THEN vt0.c2 WHEN vt0.c1 THEN vt1.c0 ELSE 0X4259b08d END WHEN TYPEOF(vt0.c0) THEN MAX(vt1.c0) END, ((CAST(vt1.c0 AS BLOB))IS(UNLIKELY(DISTINCT vt0.c1))), CASE WHEN ((((((((t0.c45)OR(t0.c0)))OR(x'')))OR(t0.c45)))OR(t0.c77)) THEN (vt1.c0 IN ()) END FROM vt1, vt0 WHERE (((x'') IS TRUE) COLLATE RTRIM);SELECT ALL COUNT(((t0.c0)>=(vt0.c2))) FROM vt1, t0, vt0 WHERE (((((NOT ('kF/')), NULL COLLATE BINARY, x''))=((json_quote('y'), ((0.7049965311248287)&('0.8214790533502965')), '~')))) GROUP BY (((+ (t0.c25))) NOT BETWEEN (vt0.c2 COLLATE BINARY) AND (CAST(vt0.c1 AS BLOB))), NULL, ((((((((((vt0.c2)AND(t0.c46)))AND(((((t0.c25)OR(t0.c45)))OR(vt1.c0)))))OR(((t0.c84)GLOB(t0.c46)))))AND(x'')))OR(((vt0.c2)+(t0.c45)))) HAVING ((t0.c25 COLLATE RTRIM)+(highlight(t0.c0, t0.c84, t0.c45, t0.c84))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(0x43cf2e6d) FROM vt1, vt0 WHERE (((CASE WHEN '0.22019393509555274' THEN 0.21062030881789873 WHEN x'4bfaf6d8' THEN 655293462 WHEN 0.7716216858236313 THEN x'' WHEN x'' THEN x'aa21' WHEN 'cgg' THEN '2043565458' ELSE -4.35532433E8 END) NOT BETWEEN (((0.827689904762504)/('571744305'))) AND ((((0.49100447286074334))<(('-393370758')))))) ORDER BY (((((NULL))==((vt0.c1))))<((- (vt1.c0))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND (((~ ('-438577467'))))); -- 0ms;
SELECT (((((vt0.c1)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0)))) BETWEEN (((t0.c45)<<(t0.c0))) AND ((t0.c46 IN (t0.c84, t0.c45)))) FROM vt1, vt0 ORDER BY (((vt0.c0, t0.c84, t0.c0)) BETWEEN (((((t0.c77))=((vt0.c0))), t0.c77, vt0.c0 COLLATE BINARY)) AND ((t0.c84, vt0.c0 COLLATE NOCASE, ((t0.c45) NOT BETWEEN (x'') AND (t0.c77)))))  NULLS LAST;SELECT (((((vt0.c2))>((t0.c46)))) IS TRUE) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0, vt1, t0 WHERE (((-6.94748544E8) NOT BETWEEN ((('祩b>迉j箄')<(x''))) AND (((0Xb4664b2) IS TRUE)))) ORDER BY (((('378638589')) NOT BETWEEN ((t0.c84)) AND ((vt1.c0))) IN ()); -- 1ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((json_array_length(t0.c77, vt1.c0))) AND ((((x'') IS TRUE)))) FROM t0;SELECT DISTINCT NTH_VALUE(t0.c0, (((((~ (t0.c25)))OR(SQLITE_SOURCE_ID())))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 END))) OVER ( ROWS  CURRENT ROW) FROM vt0, t0, vt1 WHERE ('▍'); -- 0ms;
SELECT (+ ((((vt1.c0, vt0.c2, vt1.c0))<=((vt1.c0, t0.c84, t0.c45))))) FROM t0;SELECT DISTINCT CAST(((t0.c45) NOT BETWEEN (vt1.c0) AND (t0.c0)) AS NUMERIC), (((CASE t0.c25  WHEN t0.c46 THEN t0.c45 END, (~ (t0.c0)), (((t0.c0))<((t0.c25)))))<((0.008145246994493038, ((t0.c25)IS(t0.c77)), SUM(t0.c45)))), (('6{[u')&((t0.c0 IN ()))) FROM vt1 WHERE (((x'' IN ()) IN ()));SELECT DISTINCT (~ (MIN(0.07701747470085007))) FROM vt0 WHERE (((0.5781735273071261 COLLATE NOCASE)+(('M>' IN (NULL))))); -- 0ms;
SELECT (((vt0.c2, vt0.c0, t0.c84)) BETWEEN ((NULLIF(DISTINCT x'', t0.c0), ((t0.c77) NOT NULL), (t0.c77 IN ()))) AND (((vt0.c2 IN ()), DATETIME(t0.c25, t0.c45, t0.c0), ((vt0.c2) NOT BETWEEN (t0.c84) AND (t0.c46))))), LAG((UPPER(t0.c84) IN ((- (t0.c46)))), CASE WHEN t0.c25 THEN t0.c45 ELSE ((t0.c46) NOT NULL) END, TRIM(DISTINCT 0.31889636290258383, ((vt1.c0) BETWEEN (t0.c45) AND (t0.c77)))) OVER (), (((((vt0.c1) ISNULL), '', (('now') IS FALSE)))<>((((vt0.c0) NOT BETWEEN (x'') AND (vt0.c1)), NULL, CASE t0.c0  WHEN t0.c77 THEN t0.c25 END))) FROM t0, vt1 WHERE (CAST(CASE x''  WHEN 2123659629 THEN 1.485033209E9 END AS NUMERIC)) LIMIT -535624296 OFFSET -620226279;SELECT DISTINCT ((((- (t0.c45)), ((((((((t0.c0)OR(vt1.c0)))OR(t0.c0)))AND(t0.c84)))AND(t0.c0)), (((t0.c77)) BETWEEN ((vt1.c0)) AND ((t0.c46)))))<=(((vt0.c1 IN ()), CASE vt1.c0  WHEN vt0.c2 THEN t0.c46 END, ((((x'9c5a')OR(t0.c0)))OR(vt0.c0))))) FROM vt0, vt1;SELECT ((t0.c77) NOT BETWEEN (HEX(DISTINCT t0.c45)) AND (((((((((vt0.c2)AND(vt1.c0)))OR(vt0.c1)))AND(t0.c25)))AND(t0.c77)))) FROM vt1, vt0, t0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c1  WHEN t0.c77 THEN t0.c25 ELSE t0.c77 END)>(SUM(t0.c45))) FROM t0, vt1 WHERE (((CAST(x'6f961836' AS REAL))!=(NULL))) GROUP BY CASE WHEN (- (t0.c77)) THEN CAST(-7.16951097E8 AS INTEGER) END;SELECT (((MAX(vt0.c1)))<>((NULL))) FROM t0, vt1, vt0 LIMIT -822222385 OFFSET -1491854230; -- 0ms;
SELECT DISTINCT ((t0.c77 COLLATE NOCASE) NOT BETWEEN (((t0.c84) BETWEEN (0X63c65fcb) AND (t0.c45))) AND (IFNULL(DISTINCT vt0.c2, t0.c45))) FROM vt0, vt1, t0 INDEXED BY i33 WHERE (x'b7f6') GROUP BY CAST(vt1.c0 AS INTEGER) COLLATE BINARY, (((vt0.c0) BETWEEN ('垽y') AND (vt0.c0)) IN ()), ((((NULL)) BETWEEN ((vt1.c0)) AND ((vt0.c2))) IN ()); -- 0ms;
SELECT DISTINCT CASE ((((((((t0.c0)AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c1)))OR(t0.c45))  WHEN ((vt0.c1) NOT NULL) THEN (NOT (t0.c77)) END, ((CASE t0.c45  WHEN vt0.c2 THEN vt1.c0 ELSE t0.c84 END) NOT BETWEEN (((((((((((((t0.c77)AND(t0.c46)))OR(t0.c45)))AND(x'd0c2')))OR(t0.c46)))AND(t0.c0)))OR(t0.c84))) AND (LIKELIHOOD(DISTINCT t0.c25, 0.19988449058013924))), LAST_VALUE((((vt1.c0)OR(vt0.c1)) IN ())) OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM vt1, t0, vt0 WHERE (CASE WHEN 0.7943629743818511 COLLATE RTRIM THEN x'9147' COLLATE BINARY ELSE NULL COLLATE BINARY END); -- 1ms;
SELECT GROUP_CONCAT(CASE t0.c77  WHEN t0.c84 THEN vt0.c1 WHEN t0.c25 THEN t0.c84 WHEN vt0.c0 THEN x'' WHEN vt0.c1 THEN vt1.c0 WHEN t0.c84 THEN t0.c0 ELSE vt0.c0 END) OVER (), CASE WHEN t0.c0 THEN vt0.c1 END COLLATE BINARY, CAST((~ ('-264894138')) AS BLOB) FROM vt1, t0;SELECT DISTINCT LIKELIHOOD(DISTINCT TRIM(vt0.c0), 0.7730649848025213), CAST(COUNT(*) AS NUMERIC), ((vt0.c1)AND(t0.c0)) COLLATE RTRIM FROM vt1 WHERE (((((0Xffffffff8ea28fc9) BETWEEN ('1976201445') AND (0.6423199231768497)))>=(MAX('', 0.0260997695655224, '-1984235147', 0.7911131319212024))));SELECT ALL CAST(((t0.c46)*(t0.c46)) AS NUMERIC), CAST(((t0.c46) NOT BETWEEN (t0.c0) AND (vt0.c0)) AS REAL), (t0.c25 COLLATE NOCASE IN ()) FROM vt1 INDEXED BY i33, t0, vt0 WHERE ((((((x'542d'))<>((NULL))))-(NULL))) GROUP BY ((t0.c25)==(vt1.c0)) COLLATE RTRIM;SELECT DISTINCT FIRST_VALUE(((((CAST(vt0.c1 AS TEXT))AND(CAST(vt0.c2 AS TEXT))))AND(TOTAL_CHANGES()))) OVER ( PARTITION BY ((((t0.c77)-(vt0.c0))) NOTNULL), CAST(t0.c0 COLLATE NOCASE AS REAL)) FROM vt0, vt1 GROUP BY ((t0.c77)AND(t0.c46)) COLLATE BINARY, (+ (CASE WHEN t0.c84 THEN t0.c84 END)), ((((((t0.c45)AND(vt1.c0)))AND(vt1.c0))) NOTNULL);SELECT DISTINCT -1395951347 FROM vt1, t0, vt0 WHERE (((CAST(-1.276197521E9 AS REAL)) NOT BETWEEN (NULL COLLATE NOCASE) AND (((((NULL)AND(0.7728599081567638)))OR('-76474768'))))) LIMIT 1163169183; -- 0ms;
SELECT (- ((+ (t0.c45)))), ((((((t0.c77)<(t0.c77)))OR(t0.c46)))AND(CASE x''  WHEN t0.c25 THEN t0.c25 ELSE vt1.c0 END)), ((CAST(t0.c84 AS INTEGER)) IS TRUE) FROM vt0 WHERE (x'');SELECT DISTINCT ((IFNULL(DISTINCT vt0.c1, t0.c25)) NOT BETWEEN (((t0.c46)LIKE(vt1.c0))) AND ((((vt0.c1, t0.c46, vt1.c0, t0.c84, t0.c84))>((t0.c46, t0.c25, t0.c77, t0.c45, vt0.c1))))) FROM vt1 WHERE (LIKE((-1.194198018E9 IN (-1422610801, x'')), ((x'') IS FALSE)));SELECT DISTINCT SUM(CASE WHEN t0.c84 THEN t0.c45 ELSE vt1.c0 END) FROM t0;SELECT DISTINCT ((vt1.c0 IN ()) IN ()), (((t0.c0, t0.c0, t0.c46)) NOT BETWEEN ((((((t0.c0)AND(vt0.c1)))AND(t0.c46)), t0.c0 COLLATE BINARY, t0.c25)) AND (((- (t0.c84)), ((vt0.c0)/('290066136')), CAST(vt0.c1 AS REAL)))), COUNT(((t0.c84) NOTNULL)) OVER () FROM t0, vt1;SELECT DISTINCT MIN(AVG((((('ni5h~')AND(vt0.c0)))OR(t0.c84)))) FROM vt0, vt1, t0 NOT INDEXED WHERE (CASE WHEN (('')&('-1206284689')) THEN UPPER('NXYScK7f') ELSE 2.27090319E8 COLLATE BINARY END);SELECT (- (((vt0.c1) NOT BETWEEN (t0.c77) AND (vt1.c0)))) FROM vt1, vt0, t0 WHERE (CASE CASE '#'  WHEN 3.6852488E7 THEN NULL ELSE NULL END  WHEN ((733801082) NOT NULL) THEN ((x'45dc0056') NOT BETWEEN (NULL) AND (x'')) WHEN (((((((('')AND(5.7558726E7)))OR('1315986117')))OR('-1842597581')))AND('')) THEN (((('j{')OR('1p')))AND(0.27620983103822516)) WHEN NULL THEN CASE WHEN 1.163169183E9 THEN '-1985383204' WHEN x'81e0' THEN '' WHEN NULL THEN '1630370640' ELSE x'1eb41190' END ELSE ((NULL)<>(0.4165340351094349)) END); -- 0ms;
SELECT DISTINCT TOTAL(json_object(vt0.c0, t0.c84, vt0.c1, t0.c84)) FROM vt1, vt0 WHERE (((((0Xffffffff9df0e513) NOT BETWEEN (NULL) AND ('1575428078')))<=((('-1194198018') NOT BETWEEN (0.7485024002910297) AND ('647414073')))));SELECT DISTINCT (((NULL IN ())) NOT BETWEEN (((((t0.c84)AND(t0.c84)))AND(vt0.c1))) AND (t0.c25)), (((t0.c46 IN ()))||(CAST(vt0.c1 AS INTEGER))), (((t0.c0, t0.c45, vt0.c0)) NOT BETWEEN ((((t0.c45) IS FALSE), ((t0.c25) NOTNULL), t0.c0)) AND ((t0.c84, t0.c77, ((t0.c0) IS FALSE)))) FROM t0, vt1, vt0; -- 0ms;
SELECT ALL t0.c77 FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT x'4be4' FROM vt0, vt1, t0; -- 0ms;
SELECT ((((((t0.c25)<(t0.c45)))OR(((vt0.c1)>=(t0.c45)))))AND(CAST(vt1.c0 AS INTEGER))) FROM t0, vt0 WHERE (CAST((NOT ('-1298268732')) AS BLOB));SELECT ALL (+ (CASE WHEN vt0.c1 THEN t0.c46 WHEN t0.c46 THEN t0.c25 WHEN vt1.c0 THEN t0.c46 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c77 THEN vt0.c1 END)), SUM((t0.c0 IN ())), ((t0.c25)>>(((t0.c0) IS FALSE))) FROM vt0, t0 WHERE ((((((((x'bc01')) BETWEEN ((0.733561684375784)) AND ((-1.7976931348623157E308))))OR(((((NULL)AND('aSH1I')))OR(0.8250031089560266)))))AND(CASE NULL  WHEN NULL THEN -8.06735579E8 END))) ORDER BY x'' ASC;SELECT ALL ((((vt0.c2)AND(t0.c46)))AND(t0.c46)) COLLATE NOCASE FROM vt1, t0;SELECT DISTINCT ((((((((((((0xffffffffe47c8e71 COLLATE RTRIM)OR(TYPEOF(DISTINCT t0.c45))))AND(((0.4507806197558154) NOT BETWEEN (t0.c77) AND (4.78617392E8)))))AND((vt0.c2 IN (t0.c46)))))AND(CAST(t0.c77 AS REAL))))AND(CAST(t0.c25 AS INTEGER))))AND((vt0.c2 IN ()))) FROM vt0; -- 0ms;
SELECT ALL ((x'ad27')<(((t0.c25)LIKE(t0.c84)))) FROM vt0, vt1, t0; -- 0ms;
SELECT DISTINCT t0.c45, (((vt1.c0)) BETWEEN (((+ (NULL)))) AND (((((vt1.c0)) NOT BETWEEN ((t0.c45)) AND ((vt0.c2)))))), (t0.c45 IN ()) COLLATE BINARY COLLATE RTRIM FROM vt0 WHERE (((CAST(NULL AS TEXT))/(0xfffffffff69deb88)));SELECT DISTINCT CASE (t0.c45 IN (t0.c0))  WHEN ((((vt0.c1)AND(vt1.c0)))OR(vt0.c2)) THEN t0.c25 COLLATE NOCASE END FROM vt0, t0;SELECT COUNT(*) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c45, t0.c46, vt0.c2)) BETWEEN ((CAST('-774485379' AS REAL), '', CASE vt0.c2  WHEN t0.c77 THEN vt0.c1 END)) AND (((('N8')&(0.4127679814322306)), (((NULL)) BETWEEN ((t0.c0)) AND ((vt0.c2))), CAST(vt0.c2 AS NUMERIC)))), CAST(SUM(t0.c84) AS INTEGER), vt0.c0 FROM vt1;SELECT DISTINCT GROUP_CONCAT(((t0.c25)<=(t0.c46))), CASE vt0.c1 COLLATE BINARY  WHEN ((t0.c84) NOTNULL) THEN -3.66974277E8 ELSE (vt0.c1 IN ()) END, CAST((t0.c25 IN ()) AS TEXT) FROM vt1, t0, vt0 WHERE ((((('444731056') BETWEEN ('-1371932890') AND (x''))) IS FALSE)) ORDER BY ((((((t0.c25)OR(t0.c45)))OR(t0.c46))) BETWEEN ((- (t0.c0))) AND (((((t0.c84)AND(vt0.c1)))AND(t0.c77)))) DESC, (NOT (t0.c46)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c0)>>(NULL)) THEN GROUP_CONCAT(t0.c0) END FROM vt0, t0, vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c2)&(t0.c25)))<(((vt1.c0)|(vt1.c0)))) FROM vt0 WHERE (('-627636478' IN ()) COLLATE NOCASE);SELECT ALL ((((CASE vt1.c0  WHEN t0.c46 THEN t0.c25 WHEN t0.c25 THEN vt0.c0 WHEN '' THEN t0.c0 ELSE t0.c46 END)OR(((vt1.c0) NOT BETWEEN (vt0.c2) AND (0Xffffffffdb935fb5)))))OR((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((t0.c84))))) FROM vt1 NOT INDEXED WHERE (HEX(x''));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1 WHERE (((((((((((x'baee')AND(0.35690162652499335)))OR(x'')))AND(NULL)))OR(NULL)))<<((~ (0.24414625073388285))))) ORDER BY ((((t0.c25) IS TRUE))|(((vt0.c1) NOT NULL)));SELECT DISTINCT TOTAL('m#') FROM vt1 WHERE (((((('')LIKE('1695761429')), ((NULL)<>(0.8269065481748371)), CAST('xJ' AS BLOB)))>((1076660784, ((NULL)<(x'')), CASE '6x'  WHEN 0.26939398131365133 THEN 'zt''熬''*' WHEN NULL THEN '784915527' WHEN '-1757228362' THEN '' WHEN 1.123056553E9 THEN x'1bbe' WHEN NULL THEN '*Z3' END)))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((t0.c84)AND(vt0.c2)))LIKE(((t0.c46) BETWEEN (vt0.c2) AND (t0.c77)))), UNLIKELY(DISTINCT (vt1.c0 IN ()))) OVER () FROM t0, vt1, vt0 WHERE (((TRIM(DISTINCT x'')) ISNULL)); -- 0ms;
SELECT ((CASE WHEN vt1.c0 THEN t0.c84 ELSE t0.c46 END)GLOB(((t0.c0) ISNULL))) FROM t0, vt0 WHERE ((~ ((0.8254337111112733 IN ())))) LIMIT 1362024345 OFFSET 1717987136;SELECT ALL MIN(t0.c25 COLLATE BINARY) FROM vt0;SELECT CAST('-822222385' AS REAL), ((NULL) NOT BETWEEN (((vt0.c1) NOT BETWEEN (t0.c77) AND (vt0.c2))) AND (MIN(t0.c25))), FIRST_VALUE('Kau!Kn,/W') OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c84)<(vt0.c1))) NOT BETWEEN (((t0.c46) NOT BETWEEN (t0.c84) AND (vt1.c0))) AND ((((t0.c25)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM t0, vt0 ORDER BY (((((t0.c77))>((t0.c46))))*(x'')) ASC  NULLS LAST;SELECT ALL ((CAST(vt1.c0 AS REAL)) IS FALSE) FROM vt0 WHERE (((CASE 'a8}LE'  WHEN 0.2125091408478761 THEN x'' END) BETWEEN ((('') NOT NULL)) AND (CASE ''  WHEN 0X42b87ac0 THEN 0.7254638920551959 END)));SELECT ALL SUM(((((((((vt0.c1)AND(vt0.c2)))AND(vt1.c0)))OR(t0.c77)))OR(vt1.c0))) FROM vt1, vt0;SELECT DISTINCT ((((AVG(vt0.c1))AND(((vt0.c1)GLOB(t0.c45)))))AND(vt0.c2 COLLATE NOCASE)), ((((t0.c77)IS NOT(t0.c25))) ISNULL), (- (MAX(t0.c25))) FROM vt1, t0;SELECT ((CASE WHEN t0.c46 THEN t0.c45 END)OR((x'6c51' IN ()))) FROM vt0 CROSS JOIN t0 ON ((((t0.c77)*(t0.c84)))GLOB(t0.c84 COLLATE BINARY)); -- 0ms;
SELECT ALL AVG(((t0.c25)||(t0.c0))) OVER () FROM vt0 WHERE ((((0.6165238350304358 IN ()))IS(x'' COLLATE RTRIM)));SELECT ALL (+ ((((t0.c45))<=((vt1.c0))))) FROM vt0, t0, vt1 WHERE (CASE 0.7147912522771988  WHEN '-1949173414' THEN 0.2593743520151406 ELSE '4Kꪤ#Pj#v7' END COLLATE NOCASE); -- 1ms;
SELECT (((+ (t0.c45)))<<((~ (t0.c77)))) FROM vt1 ORDER BY CASE ((vt0.c1)<=(t0.c84))  WHEN CAST(t0.c84 AS INTEGER) THEN UPPER(t0.c77) ELSE ((((x'')OR(x'')))AND(t0.c0)) END;SELECT DISTINCT (('0.30795676537149175') BETWEEN (CAST('843424200' AS TEXT)) AND ((t0.c46 IN ()))), t0.c46, (((((((((t0.c25 IN ()))AND((+ (x'')))))AND((t0.c25 IN (NULL, vt1.c0)))))AND(CHANGES())))OR((t0.c77 IN ()))) FROM vt1, t0 LIMIT 471935067; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), CASE CAST(t0.c0 AS BLOB)  WHEN CASE t0.c46  WHEN t0.c0 THEN t0.c77 WHEN t0.c45 THEN t0.c45 WHEN t0.c84 THEN vt0.c2 WHEN vt1.c0 THEN t0.c0 WHEN t0.c77 THEN t0.c77 END THEN CAST(vt0.c0 AS INTEGER) ELSE MIN(vt0.c1) END, COUNT(*) FROM t0, vt1, vt0 WHERE (((('1522122296')LIKE(0.0034889809223034307)) IN ())); -- 0ms;
SELECT DISTINCT ((t0.c84 COLLATE NOCASE)IS('')) FROM vt1;SELECT (- (CASE WHEN t0.c46 THEN '0.44916081978195366' END)) FROM vt1 LIMIT -393370758 OFFSET -268022947;SELECT DISTINCT NULL, ((('1259028223' IN ())) NOT BETWEEN (t0.c77) AND (((((vt0.c2)AND(t0.c84)))OR(t0.c77)))), (NOT (((t0.c45) NOT BETWEEN (t0.c77) AND (vt1.c0)))), ((((vt0.c1) IS FALSE)) BETWEEN (COUNT(*)) AND ((vt0.c1 IN (t0.c0)))), ((((((((((t0.c45)OR(t0.c0)))AND(t0.c0)))AND(vt0.c1)))AND(t0.c46))) IS TRUE) FROM vt0, vt1 RIGHT OUTER JOIN t0 ON (((t0.c84) IS FALSE) IN ('(m!', CAST(vt0.c2 AS REAL))) WHERE (json_patch(('1223792886' IN (0.7667613156948788)), ((0.7876977813975489) NOT BETWEEN (NULL) AND ('-2013833283')))); -- 0ms;
SELECT ((((((t0.c45)AND(t0.c77)))OR(t0.c0)))>>(((vt0.c0)%(t0.c46)))), (((t0.c25 IN (vt0.c0))) ISNULL), (((((vt0.c1 IN ('0.1396989319172367')))OR((t0.c77 IN ()))))AND(((t0.c77)+(t0.c77)))) FROM vt1, vt0 WHERE (((0X1301df28 IN ()) IN (((0x12533d6c)*(x''))))) ORDER BY ((((t0.c45) IS FALSE))|(CASE t0.c46  WHEN vt0.c1 THEN vt0.c2 WHEN t0.c0 THEN t0.c84 WHEN vt0.c1 THEN t0.c46 ELSE 765368318 END)) ASC, CAST(highlight(vt1.c0, t0.c25, t0.c0, t0.c0) AS REAL)  NULLS FIRST LIMIT -1481792923 OFFSET 1291568813;SELECT ALL ((CAST(0xffffffffcefde1cf AS NUMERIC)) BETWEEN (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0.15536012905430596 END) AND (t0.c25)), CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t0.c46)AND(vt0.c1)) END, ((IFNULL(t0.c25, t0.c77)) BETWEEN (CASE WHEN t0.c77 THEN t0.c45 ELSE t0.c84 END) AND ('짉.6꾶fP弋\')) FROM vt1, vt0, t0 WHERE ((0xffffffff9e95e2e5 COLLATE RTRIM IN ())); -- 1ms;
SELECT ALL CAST(((vt1.c0) IS TRUE) AS TEXT) FROM vt0, t0, vt1 WHERE ((((('') ISNULL)) NOT NULL)) ORDER BY RTRIM(((t0.c84)>>(t0.c25))) ASC LIMIT 1268262796; -- 4ms;
SELECT ((CAST(vt0.c0 AS BLOB))&((((t0.c0))<=((vt0.c1))))) FROM t0, vt1 WHERE (x'') ORDER BY CASE WHEN (t0.c25 IN (vt0.c1)) THEN (t0.c45 IN (vt0.c0)) END  NULLS FIRST;SELECT DATETIME(((((((((t0.c25)OR(t0.c45)))OR(t0.c46)))AND(t0.c84)))AND(vt0.c0)), ((t0.c84)<=(x'')), vt1.c0 COLLATE NOCASE) FROM t0 WHERE (((230414057 COLLATE BINARY) NOT BETWEEN ((((('|')AND('1901942456')))OR(NULL))) AND (CASE 0.9051581014603063  WHEN '9/+.' THEN 0.20291780716825103 ELSE 0.3519465052290519 END)));SELECT DISTINCT NULL FROM vt1, t0, vt0 WHERE ((((NULL, 0.4993999471979871, 'Estart of month玲')) BETWEEN (('-1957381458' COLLATE NOCASE, (+ (2.67417592E8)), ((((x'')AND('Qn')))OR(NULL)))) AND ((('1123056553' IN ()), (+ (x'2c0b')), (0xfffffffff4f9ecd0 IN ()))))) GROUP BY (~ (((t0.c25) BETWEEN (vt0.c1) AND (0Xffffffffa995e1f1)))) HAVING ((((t0.c77) IS FALSE)) ISNULL); -- 0ms;
SELECT ALL 0.6669486718185281 FROM t0, vt1, vt0 WHERE (CAST((('hh') NOT BETWEEN ('') AND ('#oCV')) AS TEXT)); -- 0ms;
SELECT DISTINCT (((t0.c45)<>(t0.c25)) IN ()) FROM vt0, vt1, t0 WHERE ((((- (NULL)))<=(-1870431360))) LIMIT -13925248 OFFSET -654043831; -- 0ms;
SELECT DISTINCT t0.c25 FROM vt1, t0 ORDER BY (((vt0.c1 IN ())) ISNULL)  NULLS FIRST, ((((vt0.c2)<=(t0.c46))) NOT BETWEEN (((((t0.c25)AND(t0.c45)))OR(t0.c25))) AND (((vt0.c1) NOTNULL)))  NULLS FIRST;SELECT ALL t0.c46 FROM t0, vt1, vt0 WHERE (NULLIF(TRIM(''), (((0x79323576, 0.5351473792450981, 0.34005238790050074))>((x'5ada', NULL, '!|'))))) LIMIT -1256115620 OFFSET -1508774053; -- 0ms;
SELECT COUNT(*), ((CASE t0.c45  WHEN vt1.c0 THEN t0.c84 END) NOT BETWEEN (CASE WHEN t0.c45 THEN vt0.c1 END) AND (TOTAL(t0.c84))), t0.c25 FROM vt0, vt1, t0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c0)) NOT BETWEEN ((t0.c84)) AND ((t0.c77)))) FROM vt1, vt0 WHERE (CAST('-%' AS NUMERIC) COLLATE RTRIM);SELECT ALL ((((t0.c77)-(t0.c0)))>(((vt0.c0)AND(t0.c25)))), ((CASE WHEN t0.c84 THEN vt0.c0 WHEN t0.c77 THEN t0.c45 WHEN t0.c45 THEN t0.c45 ELSE vt0.c0 END) NOT BETWEEN (((t0.c46)<=(vt0.c2))) AND (((t0.c46) BETWEEN (t0.c77) AND (t0.c84)))), ((CASE vt0.c1  WHEN t0.c84 THEN t0.c77 ELSE t0.c77 END)*(IFNULL(t0.c84, t0.c84))) FROM vt1, vt0, t0 GROUP BY ((t0.c0)<<(t0.c84)) COLLATE NOCASE, CASE WHEN (- (t0.c77)) THEN vt0.c0 END, CASE ((x'')*(t0.c84))  WHEN CAST(t0.c25 AS BLOB) THEN t0.c84 COLLATE RTRIM END HAVING ((t0.c46) NOT BETWEEN (t0.c84) AND (t0.c84)) COLLATE NOCASE ORDER BY CASE WHEN ABS(DISTINCT t0.c0) THEN (~ (t0.c84)) WHEN ((t0.c46) IS TRUE) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE t0.c84 END WHEN ((((t0.c84)OR(t0.c45)))OR(t0.c0)) THEN ((t0.c46)&(t0.c84)) END  NULLS FIRST; -- 6ms;
SELECT LAG(CASE t0.c25  WHEN t0.c46 THEN t0.c84 ELSE t0.c77 END COLLATE RTRIM, ((CAST(vt0.c0 AS NUMERIC)) ISNULL), CAST(ROUND(vt0.c0, t0.c45) AS BLOB)) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t0, vt0 WHERE ((~ (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (json_extract(t0.c77, t0.c45) IN ()) FROM vt1, t0, vt0 WHERE ((CAST(0.38140584071325945 AS TEXT) IN ())); -- 0ms;
SELECT ALL LIKELY(vt0.c2) FROM t0 WHERE (((((x'8f93a0af')AND(((NULL) BETWEEN (-736375121) AND (x'')))))OR(((x'f9ce') BETWEEN (x'') AND (NULL)))));SELECT DISTINCT ((((t0.c0) NOT NULL)) IS FALSE) FROM vt0 WHERE ((((NULL IN (NULL, -975645652))) BETWEEN (CASE x''  WHEN '-888973724' THEN '-626210371' ELSE '' END) AND (1705174007)));SELECT ALL CAST((- (vt0.c0)) AS BLOB) FROM t0, vt0 WHERE (((((((NULL)AND(5.64997327E8)))AND(x''))) NOT NULL)); -- 0ms;
SELECT ALL CAST(TYPEOF(t0.c0) AS BLOB) FROM t0 ORDER BY t0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((NULL))>((x'298b'))) FROM vt1 WHERE (CASE WHEN ((x'b80c') IS TRUE) THEN (1e500 IN ()) ELSE ('0.6165238350304358' IN (x'')) END); -- 0ms;
SELECT ALL CAST(1151717599 AS BLOB), SUM(((t0.c0)<=(t0.c45))) COLLATE BINARY, ((MIN(t0.c25))+((('-2067552083')!=(0Xffffffffdaacc9bd)))), (~ (((t0.c25) IS FALSE))), '-1276197521' FROM vt1 WHERE (CASE ((0.12798772585894103) NOT BETWEEN (0.8214790533502965) AND (NULL))  WHEN '' COLLATE BINARY THEN CAST('' AS BLOB) ELSE (((NULL)) NOT BETWEEN ((0.7596026771320983)) AND ((x''))) END);SELECT DISTINCT ((((((((((t0.c46)AND(t0.c77)))OR(vt0.c2)))OR(t0.c0)))OR(t0.c77)))|(t0.c0)), ((((((t0.c0) NOT BETWEEN (t0.c25) AND (t0.c46)))OR(CAST(t0.c0 AS NUMERIC))))OR(((vt1.c0)IS(t0.c77)))), ((('S|')) BETWEEN ((((t0.c84)IS(t0.c77)))) AND ((((vt0.c2) IS FALSE)))) FROM vt1 WHERE ((- ((((('2123659629')OR(x'')))OR(0.19703642262575816)))));SELECT DISTINCT t0.c0, COUNT(*), '-1949173414', (('-76474768')&((((t0.c45))>((t0.c25))))), AVG('-184947504') OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c77)OR(x'')))AND(((t0.c45) NOTNULL))) FROM vt1, vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY);SELECT ((CASE t0.c77  WHEN t0.c25 THEN t0.c45 ELSE t0.c77 END)GLOB(((vt0.c1) BETWEEN (t0.c0) AND (x'')))) FROM t0, vt0, vt1 WHERE ((+ (((0.9649063332387621)>=(x''))))); -- 0ms;
SELECT DISTINCT SUM(NULL COLLATE RTRIM COLLATE BINARY) OVER () FROM vt0, vt1, t0; -- 1ms;
SELECT ALL LEAD(CAST(((vt1.c0)AND(t0.c25)) AS NUMERIC), ((((t0.c45) NOTNULL)) ISNULL), ((((((((((((t0.c46)AND(vt1.c0)))AND(t0.c0)))OR(t0.c77)))OR(t0.c45)))OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE COLLATE NOCASE) OVER () FROM t0, vt1; -- 1ms;
SELECT DISTINCT CASE x''  WHEN CAST(vt1.c0 AS INTEGER) THEN COUNT(*) END FROM t0, vt0;SELECT DISTINCT ((t0.c25 COLLATE RTRIM)&(LIKELIHOOD(DISTINCT vt0.c2, 0.9361000836261966))) FROM vt1, t0, vt0; -- 0ms;
SELECT (NULL IN ()), (~ (((t0.c77)>=(vt0.c0)))), ((vt1.c0)/(vt1.c0 COLLATE BINARY)), (((((vt0.c2, t0.c45, vt0.c0)) BETWEEN ((t0.c84, t0.c25, t0.c45)) AND ((t0.c77, NULL, t0.c0))))IS(SUM(t0.c0))), COUNT(*) FROM vt0 WHERE ((CASE ''  WHEN 0.9934109344267867 THEN 2123659629 END IN ())) LIMIT 1651235612;SELECT ALL (((((t0.c45)AND(vt0.c1)))AND(t0.c46)) IN ()) FROM vt0 WHERE ((('XD')/(((('')) BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT 'kCrSV#I+' FROM vt0, vt1, t0 WHERE ((('i9') NOTNULL) COLLATE BINARY) GROUP BY '' COLLATE RTRIM HAVING ((CASE WHEN t0.c77 THEN t0.c84 END) BETWEEN (AVG(t0.c77)) AND (((vt0.c2)<=(t0.c45)))); -- 5ms;
SELECT ALL NULL FROM vt0 INDEXED BY i33, vt1 WHERE (((((NULL) BETWEEN (0.6821004134770785) AND (x'')))GLOB(((x'6286') NOT BETWEEN ('~x') AND (x'')))));SELECT DISTINCT (- (((vt1.c0)OR(vt0.c2)))) FROM vt1;SELECT DISTINCT t0.c0 FROM vt1, vt0, t0; -- 0ms;
SELECT ((((((((((x'5347')AND(t0.c84)))AND(t0.c45)))AND(t0.c0)))OR(t0.c25))) NOTNULL), LEAD(0.9526532784469791, ((((t0.c25, vt0.c1, t0.c25)) BETWEEN ((t0.c84, t0.c0, t0.c84)) AND ((vt0.c2, t0.c0, vt0.c0))) IN (CAST(0.13776547595376876 AS INTEGER))), (('c+]\njNIꐒC') NOT BETWEEN (((t0.c84) ISNULL)) AND (vt0.c0 COLLATE NOCASE))) OVER ( GROUPS BETWEEN ((((((((((t0.c77)AND(t0.c46)))AND(vt0.c0)))AND(vt0.c0)))AND(t0.c84))) IS FALSE) FOLLOWING AND vt0.c1 FOLLOWING), ((((t0.c0)>=(vt0.c1))) IS TRUE) FROM t0, vt0; -- 0ms;
SELECT ALL (~ (1983771063)) FROM vt1 WHERE (0.5797003735380662); -- 0ms;
SELECT DISTINCT ((((t0.c46)>(vt0.c0))) NOT NULL) FROM t0, vt0, vt1 WHERE (ABS(DISTINCT '-1985383204' COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((((t0.c25) BETWEEN (vt0.c1) AND (t0.c84)))GLOB(CASE t0.c45  WHEN t0.c46 THEN 'V\rQ<' ELSE vt0.c1 END)) FROM vt0, vt1;SELECT (((vt1.c0)) BETWEEN ((CASE t0.c0  WHEN t0.c45 THEN t0.c77 WHEN t0.c46 THEN t0.c45 WHEN 0X695e2293 THEN t0.c25 END)) AND (((- (t0.c45))))) FROM vt1;SELECT (('-<Y[꽰ZS]p')/(((t0.c84)>=(vt1.c0)))), ((((((vt0.c1)AND(t0.c46)))OR(vt1.c0))) BETWEEN ((vt0.c2 IN ())) AND (((t0.c84)>(vt0.c2)))), AVG((~ (t0.c0))) OVER ( RANGE ((CASE '-1194198018'  WHEN vt1.c0 THEN t0.c46 WHEN 0.5839177886509057 THEN t0.c0 WHEN vt0.c1 THEN t0.c46 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE t0.c45 END) NOTNULL) PRECEDING EXCLUDE NO OTHERS) FROM vt1;SELECT ALL ((IFNULL(t0.c46, t0.c84))GLOB(ABS(x''))) FROM vt0 LIMIT -159331087;SELECT DISTINCT NULL FROM vt1, t0, vt0; -- 0ms;
SELECT (((+ (t0.c25)))>((t0.c25 IN ()))) FROM t0 WHERE ('Er6J#࿆> K') GROUP BY x''; -- 0ms;
SELECT ALL (((vt0.c1, vt0.c1, t0.c77, vt0.c0, vt1.c0, NULL, 0.03547774822310745)) NOT BETWEEN ((LOWER(''), COUNT(vt0.c2), ((((((((((((t0.c46)AND(t0.c25)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(t0.c0)), '852883610', (((NULL)) BETWEEN ((vt0.c1)) AND ((vt0.c0))), CAST(vt1.c0 AS INTEGER), IFNULL(vt0.c0, NULL))) AND ((t0.c0 COLLATE NOCASE, x'', NULL, (((vt0.c2, vt0.c0, t0.c84))>((vt1.c0, t0.c45, vt0.c0))), (((-470014131)) BETWEEN ((t0.c46)) AND ((t0.c0))), vt0.c2, ((t0.c77) NOT NULL)))) FROM t0, vt1;SELECT ALL LIKELY(DISTINCT LOWER(t0.c0)) FROM t0 WHERE (IFNULL(SUBSTR(NULL, 0.5090668912824631), ((0.3123824001375808) NOT NULL))) GROUP BY t0.c25, (- (((vt0.c1) BETWEEN (vt1.c0) AND (t0.c45)))), ((NULL)||((+ (t0.c45))));SELECT DISTINCT ((vt1.c0) BETWEEN (((vt1.c0)+(t0.c0))) AND ((t0.c25 IN ()))), (((vt1.c0) IS FALSE) IN (((((vt0.c1)OR(NULL)))AND(t0.c77)))), CAST(((vt0.c1)GLOB(t0.c45)) AS REAL) FROM t0, vt0 WHERE (((((x'') NOTNULL))=(((NULL) NOT BETWEEN (x'5e0b') AND (x''))))) ORDER BY MAX(t0.c45 COLLATE RTRIM, LIKE(t0.c25, vt1.c0, '0'), ((t0.c45) BETWEEN (t0.c46) AND (t0.c46)), ((t0.c25)GLOB(t0.c0))) ASC;SELECT DISTINCT ((((t0.c77) BETWEEN (t0.c45) AND (vt0.c1)))&(x'')) FROM vt1 WHERE ((((~ ('-609800582'))) BETWEEN (CASE x'6739'  WHEN 1.994881631E9 THEN 0.7782124954088583 ELSE x'' END) AND (((NULL) ISNULL))));SELECT CASE (((vt0.c0))!=((t0.c84)))  WHEN (vt1.c0 IN ()) THEN x'' END FROM vt0, vt1, t0 ORDER BY ((((NULLIF(DISTINCT t0.c0, t0.c45))AND(((t0.c77) IS FALSE))))AND((NOT (vt0.c0)))) DESC; -- 3ms;
SELECT DISTINCT (((LIKELY(vt0.c1), (+ ('k]l<QF]-n')), ((vt1.c0) BETWEEN (t0.c84) AND (t0.c45)), CAST('' AS BLOB), ((((t0.c25)OR(t0.c25)))AND(t0.c25))))<((((vt1.c0)<<(t0.c84)), MAX(t0.c45), json(t0.c84), CASE t0.c46  WHEN vt0.c0 THEN t0.c45 END, (((('-2042605114')OR(t0.c0)))AND(t0.c45))))) FROM vt1, vt0 WHERE (TYPEOF(DISTINCT TYPEOF(x'')));SELECT DISTINCT MIN(CAST(t0.c84 AS TEXT)) FROM t0, vt1 WHERE (x'b6ac9135'); -- 0ms;
SELECT DISTINCT (NOT (((t0.c25) BETWEEN (t0.c45) AND (vt1.c0)))), DENSE_RANK() OVER (), SUM(t0.c84) OVER ( ORDER BY ((((vt0.c0)>>(t0.c77)))<=(((vt1.c0)!=('.#')))), CAST(vt0.c0 AS BLOB) COLLATE RTRIM  NULLS FIRST, ((((x'') BETWEEN (vt0.c1) AND (0.743773638295738))) NOT BETWEEN ('0.6661175976728272') AND (t0.c25 COLLATE RTRIM)) DESC  NULLS FIRST), t0.c25, (NOT (((t0.c77)<(t0.c25)))) FROM t0, vt0;SELECT ALL CAST((t0.c25 IN ()) AS REAL), ((vt0.c0)>(CASE WHEN vt0.c2 THEN vt0.c1 ELSE t0.c0 END)), (t0.c84 IN ()) FROM vt1 WHERE (CASE WHEN NULL COLLATE NOCASE THEN (('') IS FALSE) ELSE ((NULL)>>(x'77db')) END);SELECT DISTINCT UNLIKELY(((vt0.c2) NOT NULL)), ((((t0.c84 COLLATE BINARY)AND(((((vt0.c1)AND(t0.c25)))AND('-1095852264')))))AND(vt0.c0)), t0.c25 FROM t0 WHERE (CAST(((0.10758334710648942) NOTNULL) AS TEXT));SELECT (((t0.c46 IN ())) NOT BETWEEN (((t0.c45)&(t0.c84))) AND (((t0.c77)&(t0.c77)))) FROM vt1, vt0;SELECT t0.c84 COLLATE RTRIM FROM vt0 WHERE (NULL COLLATE BINARY);SELECT DISTINCT ((((t0.c84)>>(t0.c25)))>=(((((((((((((t0.c77)OR(t0.c84)))OR(vt0.c1)))OR(vt0.c2)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) FROM vt1 WHERE ((('598722018') ISNULL));SELECT DISTINCT (t0.c45 IN ((- (vt0.c1)))), CAST(CAST(t0.c25 AS TEXT) AS NUMERIC), 0.15812205056605855 FROM t0 WHERE (((((LIKELIHOOD(NULL, 0.2574669778427502))OR(LIKE(x'', x''))))AND(((x'e4bd')<<('-626210371'))))) ORDER BY ((((CAST(t0.c45 AS NUMERIC))AND(((t0.c25) IS TRUE))))AND('0.641842971286364'));SELECT (~ (vt1.c0)) FROM vt1; -- 0ms;
SELECT (((t0.c45 IN ()))<=(((((vt0.c0)OR(x'f6fa')))AND(vt0.c2)))) FROM t0, vt0; -- 0ms;
SELECT ALL vt0.c1 FROM vt0, vt1, t0 WHERE (((load_extension(NULL, '-1730141878')) NOTNULL));SELECT ALL ((SUM(t0.c46))<=(((vt0.c2) IS FALSE))) FROM vt1, t0;SELECT ((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c2)))>>(CAST(x'' AS NUMERIC))), CAST('' AS TEXT), (- ((NOT (t0.c25)))) FROM vt1;SELECT DISTINCT AVG(NULL COLLATE RTRIM) FILTER(WHERE ((x'') IS FALSE)) OVER () FROM vt1, t0, vt0; -- 2ms;
SELECT DISTINCT t0.c77, (CASE WHEN t0.c0 THEN vt1.c0 WHEN vt0.c2 THEN t0.c0 WHEN vt1.c0 THEN t0.c45 ELSE vt1.c0 END IN ()), LAST_VALUE(vt0.c1) OVER () FROM t0, vt0, vt1 WHERE ((x'' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT TOTAL(((t0.c25) NOT BETWEEN (vt0.c0) AND (t0.c84))) FROM vt1;SELECT ALL LENGTH(x'') FROM t0, vt1 WHERE ((((((((x'b929')) NOT BETWEEN ((0.7170231715489512)) AND ((444731056))))AND(((x'')/('1103012744')))))OR(LIKELY('')))); -- 0ms;
SELECT ALL ((((GROUP_CONCAT(vt0.c2))AND((((t0.c77)) NOT BETWEEN ((vt1.c0)) AND ((t0.c77))))))AND((vt1.c0 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT ((vt0.c0)AND(vt0.c2)) COLLATE RTRIM, x'', NULL FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(((((((((vt0.c0)OR(t0.c77)))OR(t0.c0)))AND(vt0.c0)))OR(t0.c77)) COLLATE RTRIM, COALESCE((t0.c84 IN ()), ((t0.c45) ISNULL)), CAST((((t0.c84, vt0.c1, t0.c45))==((vt1.c0, t0.c77, vt0.c1))) AS TEXT)) OVER (), ((((t0.c0)<>(0X54fc2450)))<=(t0.c84)), TRIM(CHAR(t0.c45), TIME(vt0.c0, t0.c77, t0.c45)), '-436297813', COUNT(*) FROM vt1, vt0, t0 GROUP BY (((NOT (t0.c25))) BETWEEN (((t0.c25) BETWEEN (x'') AND (t0.c77))) AND (((t0.c25)OR(t0.c0)))); -- 4ms;
SELECT ALL (((vt1.c0, vt0.c1, t0.c25, t0.c45, vt1.c0)) BETWEEN ((((vt0.c2)&(vt0.c2)), vt1.c0, (((t0.c45))>=((t0.c0))), ((vt1.c0) NOT BETWEEN (t0.c77) AND (vt0.c1)), (NULL IN ()))) AND ((((0xffffffffea206abb) BETWEEN (0.6312616192539734) AND (t0.c84)), CAST(vt0.c2 AS BLOB), ((((((((vt0.c1)AND(vt0.c0)))AND(235154590)))OR(t0.c84)))AND(t0.c0)), (((t0.c45)) NOT BETWEEN ((vt1.c0)) AND ((t0.c45))), CASE vt1.c0  WHEN vt1.c0 THEN t0.c46 ELSE t0.c77 END))) FROM vt1, t0 WHERE ((((((((((((((((('1959058431')AND(x'fd4f')))OR(x'')))OR(0.5261956286793231)))OR(((NULL)-('')))))OR((+ (x'')))))OR((('471935067') NOT BETWEEN (NULL) AND (NULL)))))OR((('1436972965') NOT BETWEEN ('') AND ('')))))AND(' xw*')));SELECT CAST((t0.c84 IN ()) AS TEXT) FROM vt1; -- 0ms;
