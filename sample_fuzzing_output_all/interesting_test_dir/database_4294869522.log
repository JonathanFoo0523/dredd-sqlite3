-- Time: 2024/06/07 06:35:11
-- Database: database22
-- Database version: 3.40.0
-- seed value: 4294869522
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 1ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0=x'' WHERE 'a,'; -- 2ms;
UPDATE OR IGNORE t0 SET (c0, c0)=(-1766448467, 0xffffffffef9b4115) WHERE t0.c0; -- 0ms;
ANALYZE temp; -- 1ms;
UPDATE t0 SET c0=-275037931, c0=NULL, c0=x'c8f5'; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i97 ON t0((((((((((c0)AND(c0)))AND(c0)))OR(NULL)))AND(c0)) IN ()) COLLATE NOCASE DESC) WHERE MIN(c0 COLLATE BINARY, CASE c0  WHEN c0 THEN c0 END); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (1375366951); -- 1ms;
UPDATE OR IGNORE t0 SET (c0, c0, c0)=(x'de35', '', x''); -- 1ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
UPDATE OR IGNORE t1 SET c0=0.23046551684817085 WHERE CASE TYPEOF(0.23992829818998396)  WHEN LTRIM(t1.c0, t1.c0) THEN (+ (t1.c0)) ELSE (t1.c0 IN (t1.c0, t1.c0)) END; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t1', 'i97', '-275037931 sz=-1766448467'); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (1297466372); -- 0ms;
UPDATE OR ABORT t1 SET (c0, c0, c0)=(NULL, 0x4d55c404, NULL) WHERE ((((t1.c0)==(t1.c0))) NOTNULL); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c3; -- 1ms;
INSERT OR ABORT INTO t1 VALUES (0xffffffff9581360b); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''), (0.23992829818998396), (-275037931), (0Xffffffff96b622ad), (0.4245263336405646); -- 1ms;
UPDATE OR REPLACE t1 SET (c3)=(x'') WHERE (+ (((((((((t1.c3)OR(t1.c3)))AND(x'c683')))OR(t1.c3)))AND(t1.c3)))); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i32 ON t1(CASE WHEN 'DV뼵' THEN c3 ELSE c3 END COLLATE RTRIM COLLATE NOCASE); -- 1ms;
UPDATE t1 SET c3=x'1c4fa687' WHERE ((((NOT (t1.c3)), t1.c3, t1.c3 COLLATE RTRIM))=(((+ (t1.c3)), (+ (t1.c3)), ((t1.c3)&(t1.c3))))); -- 0ms;
UPDATE OR IGNORE t1 SET c3='-1586240612', c3=NULL WHERE ''; -- 0ms;
UPDATE OR IGNORE t1 SET c3=NULL, c3=x'fd51' WHERE 0.4245263336405646; -- 0ms;
UPDATE t1 SET c3=NULL WHERE (t1.c3 IN ()) COLLATE NOCASE; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM t1 WHERE (((((t1.c3)OR(t1.c3)))AND(t1.c3)) IN (((t1.c3)+(t1.c3)))); -- 1ms;
INSERT OR IGNORE INTO t1(c3) VALUES (x''), ('-275037931'), ('-1586240612'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c3=0.4725111731031151; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE t1 SET c3='' WHERE t1.c3 COLLATE NOCASE; -- 1ms;
UPDATE OR IGNORE t1 SET c3='-2047028452'; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (0.8288369705340648); -- 1ms;
UPDATE OR FAIL t1 SET (c3, c3)=(0.571983381467057, 0xffffffff85fcd31c); -- 0ms;
UPDATE OR REPLACE t1 SET c3='' WHERE ((CASE t1.c3  WHEN t1.c3 THEN t1.c3 WHEN t1.c3 THEN t1.c3 WHEN x'' THEN t1.c3 ELSE t1.c3 END)IS NOT(((t1.c3)AND(t1.c3)))); -- 1ms;
UPDATE OR ABORT t1 SET c3=''; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 REAL , +c4 INTEGER ); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS t1; -- 1ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (NULL); -- 0ms;
UPDATE OR FAIL rt0 SET (c3, c2)=(0.5514032808533671, 0.37364866059136703) WHERE CASE ((rt0.c1)AND(rt0.c0))  WHEN LOWER(rt0.c1) THEN CAST(rt0.c4 AS INTEGER) WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN 0.6107702110699885 WHEN rt0.c1 THEN CAST(rt0.c0 AS NUMERIC) WHEN ((rt0.c4)+(rt0.c4)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END WHEN (((rt0.c0))<=((rt0.c3))) THEN ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c3)) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c3, c0) VALUES (x'', '-1277052886', NULL, 1209247856); -- 0ms;
UPDATE rt0 SET (c1)=('J䡣'); -- 1ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (NULL, x'', -2.070919069E9, x'4448', 872202037); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1, c4, c2, c3) VALUES (NULL, 'Ql\rᶖFA02ꡰ', '~65-텗q', NULL, 0.7447963547120694); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0, c3) VALUES (0X33fcbf35, -108292906, 0Xfffffffff8598cff); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=('-1766448467') WHERE CASE WHEN (((''))!=((rt0.c0))) THEN CAST(rt0.c4 AS INTEGER) END; -- 1ms;
UPDATE OR IGNORE rt0 SET c0=x'9fd2' WHERE CAST(((((rt0.c2)OR(rt0.c3)))AND(rt0.c3)) AS INTEGER); -- 1ms;
UPDATE rt0 SET (c0)=(-173541931) WHERE (((rt0.c1)=(rt0.c0)) IN ()); -- 0ms;
REINDEX; -- 3ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3) VALUES ('1210634977510898152 343200494358745063T-3113515917616632103T-6544183217324758928 -3047922381598281678T611-', '~'), (NULL, 'x4*I-/㘋uH'), (0.837876771580036, NULL); -- 1ms;
INSERT OR ABORT INTO rt0(c3) VALUES (NULL), (x''), (418779700); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('pMQ'); -- 0ms;
COMMIT; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES (-1.73541931E8); -- 0ms;
UPDATE OR IGNORE rt0 SET c2='X0\nQ7Fs', c0=''; -- 1ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
END TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('124509453'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.7087994289361479, c0=0xaa9283e WHERE CAST(vt0.c0 COLLATE BINARY AS TEXT); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE (vt0.c0 IN (vt0.c0)) COLLATE NOCASE; -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 1ms;
UPDATE vt0 SET c0=x'dafc'; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL WHERE vt0.c0; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET c0=x'', c0=x''; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((rt0.c4) BETWEEN (rt0.c3) AND (x''))) ISNULL) FROM vt0, rt0 WHERE (((NULL)IS NOT(0Xffffffffb3e1b82a COLLATE BINARY))); -- 1ms;
SELECT ALL CUME_DIST() OVER (), rt0.c3, (+ (((rt0.c0)==(rt0.c4)))) FROM vt0 WHERE (((((((((((0x40bf5a68)OR(x'')))AND(x'')))AND(x'')))AND('1375366951')))=(((NULL)<<(NULL))))) EXCEPT SELECT ((CAST(1.375366951E9 AS BLOB)) NOT BETWEEN (COUNT(*)) AND ((- (rt0.c3)))), (((GROUP_CONCAT(rt0.c1)))>=(((- (x''))))), NULL FROM rt0, vt0 WHERE ((((((0.5652777508341508 IN ()))OR(CAST(0.23046551684817085 AS NUMERIC))))AND((((NULL)) BETWEEN ((NULL)) AND ((0X5bf22405))))));SELECT ALL ((rt0.c3 COLLATE BINARY) NOT BETWEEN ((~ (rt0.c2))) AND (MIN(vt0.c0))) FROM vt0, rt0 WHERE (NULL) LIMIT 394489987 OFFSET 1297466372; -- 0ms;
SELECT ALL GROUP_CONCAT(-0.0) FROM rt0, vt0; -- 0ms;
SELECT x'' FROM vt0, rt0 LIMIT -173541931 OFFSET 1624980680; -- 0ms;
SELECT ALL (NOT (((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))) FROM vt0 WHERE (((CASE x''  WHEN 0.48627223503260664 THEN 0Xffffffffccccf178 WHEN x'1f69' THEN '-Infinity' WHEN '0.5652777508341508' THEN x'' ELSE '\r}' END) NOT BETWEEN (CAST(0.814532540319177 AS REAL)) AND (CAST(-371718996 AS NUMERIC))));SELECT DISTINCT ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c2))) NOTNULL) FROM rt0 WHERE (((NULL) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)>=(rt0.c2)))AND(MAX(NULL, '-108292906'))))AND(MAX(rt0.c4))))AND(COUNT(rt0.c4))))AND(((rt0.c1)AND(vt0.c0)))), (((('-2036292319')) BETWEEN ((rt0.c2)) AND ((rt0.c3))) IN ()), ((rt0.c1) IS FALSE) FROM vt0, rt0 WHERE (TRIM(DISTINCT ((NULL) ISNULL))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0, rt0 WHERE ((NOT (((0.06214205782884896)OR(0.4230951492171767))))); -- 1ms;
SELECT ALL CUME_DIST() OVER () FROM vt0 WHERE (((((NULL)OR('a,')))AND(0.520237483464563)) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) COLLATE NOCASE FROM vt0, rt0 GROUP BY CASE WHEN ((rt0.c0)AND(rt0.c1)) THEN vt0.c0 ELSE ((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)) END, CASE WHEN (rt0.c3 IN (rt0.c2)) THEN rt0.c4 WHEN NULLIF(DISTINCT rt0.c3, rt0.c4) THEN CASE rt0.c2  WHEN rt0.c0 THEN '394489987' END WHEN CAST(rt0.c1 AS BLOB) THEN ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2)) END, (((((((((- (rt0.c1)))OR((((rt0.c0))>((rt0.c0))))))OR(((rt0.c1)+(rt0.c4)))))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END)))AND(rt0.c2)) HAVING ((rt0.c2)OR(CAST(rt0.c4 AS REAL))); -- 0ms;
SELECT ALL LAG(LIKELY(DISTINCT ((rt0.c0)>>(rt0.c2))), ((((rt0.c3) NOT NULL)) BETWEEN (((rt0.c0)==(rt0.c0))) AND ((- (rt0.c0)))), rt0.c4) OVER () FROM rt0, vt0 WHERE (LIKELIHOOD(DISTINCT ((0Xffffffff85fcd31c)%(x'')), 0.9469798630676903)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 END) NOTNULL) FROM vt0;SELECT ALL MIN(CAST(rt0.c1 AS NUMERIC)) FROM rt0, vt0 WHERE (CAST(COALESCE(DISTINCT 0.7730402274824634, 0.520237483464563) AS BLOB)) GROUP BY DATETIME(CHANGES(), 'x0\nq7fs', (((rt0.c0))<((0.20019495262430964)))) HAVING ((vt0.c0)GLOB(rt0.c2)); -- 0ms;
SELECT DISTINCT json_array_length(((rt0.c1)==(rt0.c0))), UNLIKELY(DISTINCT (rt0.c4 IN ())), (((rt0.c1, rt0.c3, rt0.c1)) NOT BETWEEN (((+ (rt0.c3)), (rt0.c1 IN ()), x'')) AND (((~ (NULL)), vt0.c0 COLLATE RTRIM, HEX(vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c4, vt0.c0, (+ (((rt0.c3) NOT BETWEEN (rt0.c4) AND (NULL)))) FROM vt0 WHERE ((~ ((- ('1542595589')))));SELECT -108292906 FROM vt0 WHERE (((((x'')GLOB(x'3f26')))=(((0.7447963547120694)<=(x''))))); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((CASE WHEN rt0.c3 THEN rt0.c2 ELSE 0.3320567197505875 END, ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LOWER(DISTINCT rt0.c3))) AND ((SQLITE_COMPILEOPTION_GET(rt0.c1), ((rt0.c0) BETWEEN (rt0.c4) AND (vt0.c0)), (((rt0.c4))>((rt0.c1)))))), TOTAL(((rt0.c2) NOT NULL)) OVER ( RANGE  UNBOUNDED PRECEDING), CASE rt0.c3  WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN 0.834518227782834 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END COLLATE BINARY FROM rt0;SELECT DISTINCT ((((rt0.c2)OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR((rt0.c1 IN ()))) FROM vt0, rt0 ORDER BY (((rt0.c4 COLLATE BINARY))>(((rt0.c3 IN (rt0.c3)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0) ISNULL))), CASE '-1225552317'  WHEN ((rt0.c3)/(rt0.c2)) THEN (((('')OR(vt0.c0)))OR(vt0.c0)) WHEN ((rt0.c0)/(rt0.c0)) THEN vt0.c0 COLLATE RTRIM WHEN (- (-1.73541931E8)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (vt0.c0)) ELSE ((rt0.c0)IS NOT(rt0.c2)) END, rt0.c0 FROM vt0, rt0 WHERE (CASE WHEN 1.24509453E8 COLLATE RTRIM THEN COALESCE(x'', '-Infinity') END); -- 0ms;
SELECT ALL (rt0.c0 IN ()) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (+ ((((rt0.c0, rt0.c2, rt0.c1))>=(('305039475', vt0.c0, x''))))), rt0.c2, RANK() OVER () FROM vt0;SELECT DISTINCT TOTAL(((rt0.c2)<=(rt0.c4))) OVER () FROM rt0 WHERE ('aY酀*'); -- 0ms;
SELECT DISTINCT CAST(((rt0.c4) IS FALSE) AS NUMERIC), (((rt0.c3)!=(rt0.c2)) IN ()), '\r}' FROM vt0 WHERE ('5t');SELECT ((((('9!uO')AND(rt0.c0)))OR(rt0.c2)) IN ()), CAST(((rt0.c0)LIKE(rt0.c4)) AS BLOB), MIN(UNICODE(rt0.c4)) FROM vt0 ORDER BY rt0.c3 DESC LIMIT 1261735242;SELECT ALL rt0.c3, (((((+ (vt0.c0)))AND((rt0.c2 IN (rt0.c4, rt0.c2)))))AND(rt0.c0 COLLATE BINARY)), (((rt0.c2)) BETWEEN ((MAX(rt0.c2))) AND ((((vt0.c0)+(vt0.c0))))) FROM rt0, vt0 WHERE (((0.5652777508341508) BETWEEN (x'') AND (1.375366951E9)) COLLATE RTRIM); -- 0ms;
SELECT (((0.5495387072680687) IS FALSE) IN ()) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT (NOT (rt0.c1)), UPPER(DISTINCT 0.15830963931773068 COLLATE NOCASE), ((((((rt0.c2)OR(rt0.c0)))OR(vt0.c0)))AND((((rt0.c2))>((rt0.c1))))), TOTAL((NULL IN ())) OVER (), (((~ (rt0.c4))) NOT BETWEEN ('퓓7') AND (((rt0.c2) IS FALSE))) FROM vt0 WHERE (((CASE NULL  WHEN '~' THEN '}V?K' ELSE 'j' END) ISNULL)) LIMIT 1955487079 OFFSET 280328086;SELECT ALL CASE WHEN rt0.c1 THEN ((((((((rt0.c4)OR(NULL)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c0)) WHEN COUNT(vt0.c0) THEN (rt0.c1 IN (rt0.c3)) WHEN rt0.c4 COLLATE RTRIM THEN SQLITE_COMPILEOPTION_GET(vt0.c0) ELSE x'' END FROM vt0, rt0 WHERE (NULL) LIMIT -1766448467 EXCEPT SELECT DISTINCT ((rt0.c3)*((rt0.c3 IN ()))) FROM rt0;SELECT ((NULL)IS NOT(vt0.c0)) FROM rt0 WHERE (((CASE 0.3320567197505875  WHEN x'23d4' THEN '280328086' END)AND(CASE '-1e500'  WHEN 411772771 THEN 0.892421013558112 ELSE '178858046' END))) LIMIT -162031858;SELECT NULL COLLATE BINARY FROM vt0 WHERE ((((x'' IN ())) BETWEEN (((NULL) BETWEEN ('872202037') AND (x''))) AND (((('pV')) BETWEEN ((NULL)) AND ((0.04051170818306293)))))); -- 0ms;
SELECT DISTINCT ((((0.007803020632246138) NOT BETWEEN (rt0.c2) AND (rt0.c0))) IS TRUE), COALESCE(DISTINCT ((rt0.c4)||(rt0.c3)), (rt0.c2 IN ()), ((rt0.c2)-(rt0.c1)), rt0.c1), (- (((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c2)))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT json_insert((~ (rt0.c2)), (vt0.c0 IN ()), (((0.16280260024616922, rt0.c4, rt0.c3))<((rt0.c3, rt0.c2, rt0.c1)))) FROM vt0 GROUP BY rt0.c3 HAVING (((((rt0.c4)) BETWEEN ((vt0.c0)) AND ((rt0.c0))))>(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c2))));SELECT DISTINCT (((vt0.c0)>=(rt0.c0)) IN ()) FROM vt0 WHERE (((((('1624980680'))<>((1.24509453E8))))==(x'' COLLATE BINARY))) GROUP BY rt0.c2 COLLATE NOCASE;SELECT ALL (((rt0.c2) IS FALSE) IN ()) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE BINARY)|('')) FROM rt0, vt0 WHERE ((('-1277052886')<(x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL 0.5750728285185838, COUNT(((rt0.c2)=(rt0.c2))), (((rt0.c0, vt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE, (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt0.c0))), ((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))) AND ((NULL, (~ (rt0.c2)), -1038812764))), FIRST_VALUE(UNLIKELY(DISTINCT (vt0.c0 IN ()))) OVER (), (HEX(rt0.c3) IN (GROUP_CONCAT(rt0.c4))) FROM vt0 WHERE (CAST(LTRIM(x'', NULL) AS TEXT));SELECT DISTINCT (((((((rt0.c2)) NOT BETWEEN ((-1623391509)) AND ((rt0.c2))))AND(((rt0.c1) ISNULL))))OR((NOT (vt0.c0)))) FROM vt0;SELECT ALL (((((rt0.c4)/(rt0.c0)), vt0.c0, ((((vt0.c0)AND(rt0.c2)))OR(rt0.c1))))>=((((rt0.c1) ISNULL), (- (vt0.c0)), ((0.8532029788660642) NOT BETWEEN (0.6107702110699885) AND (rt0.c2))))) FROM rt0, vt0 WHERE (CAST((('~铖>MW') NOT BETWEEN (0.03889887570902706) AND ('s⩐謵n}~曵iX')) AS REAL)); -- 0ms;
SELECT DISTINCT (((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))))>=((UPPER(rt0.c1)))) FROM rt0, vt0 WHERE ((((~ ('-425474606')))IS(((0.3831601999223998)>>(-260679739))))) GROUP BY (NOT (json_quote(rt0.c0))) HAVING CAST((vt0.c0 IN ()) AS TEXT); -- 1ms;
SELECT DISTINCT TOTAL(((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3))) OVER () FROM vt0 ORDER BY CAST(((((rt0.c2)OR(x'')))AND(rt0.c3)) AS NUMERIC);SELECT DISTINCT (((((rt0.c2) IS FALSE)))<=(((rt0.c4 IN ())))), ((((',2>/p%T')<<(vt0.c0))) NOTNULL), CASE TOTAL(rt0.c4)  WHEN NULL THEN COUNT(rt0.c1) END FROM rt0, vt0; -- 1ms;
SELECT ((HEX(rt0.c2))OR(((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), (((((((rt0.c1)AND(vt0.c0)))OR(rt0.c0))))<>((TYPEOF(NULL)))), CAST((rt0.c1 IN (rt0.c0)) AS TEXT) FROM vt0;SELECT ALL (((((rt0.c3, vt0.c0, 0.0))<=((rt0.c1, vt0.c0, rt0.c1)))) NOT NULL) FROM rt0;SELECT DISTINCT (+ (((rt0.c0) IS FALSE))) FROM rt0 WHERE (((CASE NULL  WHEN NULL THEN x'' END) ISNULL)); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((rt0.c2) IS TRUE)) FROM rt0 GROUP BY vt0.c0 HAVING (((rt0.c0 IN ())) IS TRUE) LIMIT -1038812764;SELECT CAST(json_object('-368408979', rt0.c3) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT ((0xffffffff99a71f6b)=(((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c1)))), '1542595589', ((CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END) NOT BETWEEN (((((vt0.c0)OR(rt0.c1)))AND(rt0.c0))) AND (UNLIKELY(rt0.c0))) FROM rt0 GROUP BY ((COALESCE(DISTINCT rt0.c2, rt0.c4)) NOT NULL) HAVING 0.14253737913769193;SELECT DISTINCT AVG(((rt0.c3)<=(rt0.c3))) OVER () FROM rt0, vt0 WHERE ((+ ((0.7730402274824634 IN ())))); -- 0ms;
SELECT ((rt0.c1 COLLATE RTRIM)GLOB(MAX(rt0.c1))), (('-1151274797')>>(LOWER(DISTINCT vt0.c0))), rt0.c4 FROM rt0;SELECT DISTINCT CASE WHEN ((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN ((vt0.c0)IS NOT(vt0.c0)) WHEN (((rt0.c1, rt0.c2, rt0.c0))<=((rt0.c3, rt0.c2, rt0.c1))) THEN (('-2036292319')IS NOT(rt0.c4)) WHEN (rt0.c1 IN ()) THEN ((rt0.c0) IS TRUE) WHEN '-336759586' THEN ((rt0.c1) NOT NULL) WHEN x'' THEN (+ (rt0.c0)) END FROM rt0 NATURAL JOIN vt0 WHERE (COALESCE(CAST(x'5a90' AS TEXT), CASE NULL  WHEN 0.02078307866027629 THEN 0.9194311361158918 END)); -- 0ms;
SELECT DISTINCT ((rt0.c4)IS(rt0.c0)) COLLATE BINARY, CAST(((vt0.c0)<<(rt0.c3)) AS INTEGER), ((((rt0.c4) NOT NULL)) BETWEEN ((((rt0.c0, rt0.c0, rt0.c4))<>((rt0.c0, rt0.c3, vt0.c0)))) AND ((vt0.c0 IN (rt0.c4)))) FROM vt0, rt0 WHERE ((((x'1690')OR(0.318130843942673)) IN ((NOT (0.03889887570902706))))) LIMIT 490743581; -- 0ms;
SELECT DISTINCT (NOT (((0xffffffffeabbba29)IS(rt0.c4)))) FROM rt0 GROUP BY ((rt0.c2 COLLATE NOCASE) NOT BETWEEN ('~駋W|jQTb') AND (((((rt0.c3)AND(rt0.c0)))AND(rt0.c2)))) HAVING CAST(((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c4)) AS BLOB);SELECT DISTINCT rt0.c0 FROM rt0; -- 1ms;
SELECT ALL COUNT(*) OVER () FROM rt0 GROUP BY ((vt0.c0) NOT BETWEEN (x'') AND (((rt0.c2) NOTNULL)));SELECT DISTINCT rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT ALL TOTAL(((rt0.c0) IS FALSE)) OVER (), ((rt0.c1) ISNULL) COLLATE NOCASE, LOWER(MIN(rt0.c0)), MIN((- (rt0.c3))), AVG(((rt0.c2)<=(rt0.c0))) FROM rt0 WHERE (((((((((1e500)OR(NULL)))OR('')))OR((NOT (1.78858046E8)))))AND('-1717100693'))); -- 0ms;
SELECT vt0.c0 COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (NOT (highlight(NULL, vt0.c0, vt0.c0, vt0.c0))) FROM vt0, rt0 WHERE ((NOT (((x'31df')>>(x'6eee')))));SELECT (((((((rt0.c2))>((rt0.c3))))OR(CASE rt0.c3  WHEN vt0.c0 THEN rt0.c0 WHEN x'' THEN vt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END)))AND(AVG(rt0.c3))) FROM rt0 LIMIT -1251323504;SELECT DISTINCT (+ (AVG(rt0.c4))) FROM vt0 WHERE (CAST(((NULL) NOTNULL) AS INTEGER));SELECT ((LIKELIHOOD(rt0.c1, 0.2084087495309015)) BETWEEN (SUBSTR(vt0.c0, rt0.c3)) AND (((rt0.c2)AND(rt0.c1)))), (+ ((((('-1105846890')AND(vt0.c0)))AND(vt0.c0)))), CAST(((rt0.c2)<(rt0.c0)) AS NUMERIC) FROM rt0 ORDER BY CAST(((((rt0.c1)OR('''mf7D')))OR(x'')) AS NUMERIC)  NULLS LAST LIMIT 106684552;SELECT ALL COUNT(*) OVER (), (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c4 ELSE '}V?K' END IN ()), CASE WHEN (~ (vt0.c0)) THEN (+ (vt0.c0)) WHEN rt0.c1 THEN (('-1326729643') IS FALSE) WHEN ((rt0.c3)*(rt0.c4)) THEN (+ (rt0.c0)) WHEN ('.o&2.jG' IN (rt0.c0, rt0.c2)) THEN ((rt0.c3)>(rt0.c3)) WHEN ((rt0.c0)<<(rt0.c0)) THEN (- (rt0.c4)) END FROM vt0 WHERE ((- (((x'') BETWEEN ('[J') AND (''))))) ORDER BY (((rt0.c3)GLOB(rt0.c1)) IN (((x'f27c5cb2') BETWEEN (rt0.c4) AND (rt0.c1))))  NULLS FIRST LIMIT 280328086 OFFSET -1586240612;SELECT DISTINCT TOTAL(((rt0.c0)GLOB(rt0.c2))) FROM vt0, rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CASE rt0.c3  WHEN NULL THEN rt0.c2 END) FROM vt0, rt0 WHERE (((((CAST(x'' AS INTEGER))OR(((((x'')AND(-2053444367)))AND(NULL)))))OR((('')!=(NULL))))) GROUP BY rt0.c1; -- 0ms;
SELECT ALL ((((rt0.c2)-(rt0.c1))) BETWEEN ((((rt0.c0))<=((vt0.c0)))) AND (NULL)) FROM vt0 WHERE ('-1658859815') ORDER BY ((CASE WHEN rt0.c1 THEN vt0.c0 END)AND(((rt0.c4) ISNULL)))  NULLS FIRST;SELECT DISTINCT CAST(((rt0.c3)<=(rt0.c0)) AS TEXT), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c4)))!=((+ (rt0.c2)))), ((((((rt0.c1)OR(rt0.c2)))OR(vt0.c0))) IS TRUE) FROM vt0, rt0 ORDER BY (NOT (((rt0.c1)-('0.03889887570902706')))), ((rt0.c0 IN ()) IN (rt0.c1, rt0.c4 COLLATE RTRIM))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)>=(rt0.c0)) AS INTEGER), NULL, x'' FROM vt0 GROUP BY rt0.c3, CASE CASE rt0.c4  WHEN rt0.c1 THEN vt0.c0 END  WHEN ((rt0.c0)LIKE(rt0.c0)) THEN (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) ELSE CASE WHEN vt0.c0 THEN '106684552' END END, CASE WHEN ((vt0.c0) IS FALSE) THEN ((rt0.c3)LIKE(rt0.c1)) END;SELECT DISTINCT ((x'')>>((~ (rt0.c4)))) FROM vt0 WHERE ((((('໭')OR(4.187797E8)))OR('')) COLLATE RTRIM);SELECT (((rt0.c3)) BETWEEN ((CAST(vt0.c0 AS BLOB))) AND (((NOT (rt0.c0))))) FROM vt0, rt0 WHERE (((((0.21405626130820576) NOT BETWEEN (-1718207020) AND (NULL)))IS((('0.16280260024616922') BETWEEN ('d?4lZ^') AND (x'6490'))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS INTEGER) FROM vt0 WHERE (CAST(json_valid('') AS BLOB)) LIMIT 982377908;SELECT DISTINCT ((((((((((rt0.c4) NOT BETWEEN ('0.5652777508341508') AND (vt0.c0)))AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c1 AS INTEGER))))AND(((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c4)))AND(vt0.c0)))))AND(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1)))), (rt0.c4 IN (rt0.c0)) COLLATE RTRIM, CASE WHEN ((rt0.c3)IS(rt0.c1)) THEN ((rt0.c4)<=(rt0.c1)) WHEN ((rt0.c1)=(rt0.c0)) THEN ((rt0.c0)IS(rt0.c0)) WHEN CASE WHEN 0.007803020632246138 THEN rt0.c4 END THEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c4)) ELSE vt0.c0 COLLATE NOCASE END FROM vt0 GROUP BY COALESCE(DISTINCT rt0.c1, rt0.c1, rt0.c1, rt0.c3) COLLATE RTRIM;SELECT ALL ((((((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c4 END)AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END)))OR(GROUP_CONCAT(rt0.c1))))OR(((((((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), rt0.c3, CAST(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)) AS TEXT), (~ (json_object(rt0.c2, vt0.c0))), (((((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3))))AND(CASE rt0.c1  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN x'' WHEN rt0.c2 THEN rt0.c0 ELSE vt0.c0 END)))AND(((((vt0.c0)OR(rt0.c2)))OR(rt0.c0)))) FROM rt0, vt0;SELECT COUNT((('-1365156968')&(rt0.c1))) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT TOTAL('1297466372') OVER ( ORDER BY highlight(rt0.c2 COLLATE NOCASE, CASE vt0.c0  WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END, rt0.c0 COLLATE BINARY, 0x17837083), ((((rt0.c4))!=((rt0.c2))) IN ()) ASC, -1326729643 ASC  NULLS LAST) FROM vt0, rt0 WHERE (((UNLIKELY(0x1ede095e)) NOT BETWEEN (((('vD'))!=(('0.7087994289361479')))) AND (CASE 687184139  WHEN 0Xffffffffb8f26d4f THEN NULL WHEN 915311413 THEN 0.7598089495347035 WHEN 0.1870371805932971 THEN 0.0 ELSE x'' END))) GROUP BY ((((rt0.c3) NOTNULL))==((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c2))))); -- 0ms;
SELECT ALL ((((((((rt0.c3)OR(vt0.c0)))AND(rt0.c2)))AND(((rt0.c2) ISNULL))))AND(CAST(rt0.c0 AS NUMERIC))), NULLIF(DISTINCT rt0.c2, rt0.c0) COLLATE NOCASE, CASE WHEN rt0.c1 THEN CAST(rt0.c2 AS NUMERIC) WHEN CAST(rt0.c4 AS REAL) THEN CASE vt0.c0  WHEN rt0.c3 THEN rt0.c0 END WHEN ((rt0.c4)AND(rt0.c0)) THEN ((rt0.c2) NOT NULL) END FROM rt0, vt0 WHERE ('[J'); -- 0ms;
SELECT ALL SUM(((vt0.c0)<=(rt0.c3))) OVER ( RANGE CAST((((rt0.c4, rt0.c2, rt0.c0, '	B', rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c4, 0.4462101702215838, vt0.c0)) AND ((rt0.c3, rt0.c3, rt0.c0, rt0.c2, rt0.c3))) AS INTEGER) PRECEDING), (vt0.c0 IN (rt0.c3)), rt0.c4, (((rt0.c3 IN ())) NOT NULL), ((((x'7f3a') IS FALSE)) NOT NULL) FROM vt0, rt0 WHERE ((((0xd71600c)>>(0.3452418532388908)) IN ()));SELECT LOWER((rt0.c0 IN (rt0.c3, rt0.c2))) FROM vt0;SELECT ALL GROUP_CONCAT(IFNULL(rt0.c3, rt0.c0)) FILTER(WHERE ((((0xfffffffff5a7f5d5) NOT BETWEEN (rt0.c2) AND (rt0.c3)))-(CAST(rt0.c4 AS TEXT)))) OVER () FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT CHANGES() FROM vt0; -- 0ms;
SELECT ((CAST(rt0.c1 AS TEXT)) NOT NULL), MAX(0.17021512990810206), (((((NOT (NULL)))OR(CAST(0.3589546652988168 AS INTEGER))))AND(rt0.c4 COLLATE BINARY)) FROM vt0, rt0 WHERE ((((0.6096401468142569 IN ()))-(0xffffffffccccf178 COLLATE RTRIM))); -- 1ms;
SELECT ALL ((((rt0.c2)IS(rt0.c2)))>>(SUBSTR(rt0.c3, rt0.c2))) FROM rt0, vt0 NOT INDEXED ORDER BY ((((-1145951261)OR(rt0.c1)))OR(rt0.c3)) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT MAX(rt0.c3) FROM rt0, vt0; -- 0ms;
SELECT ALL rt0.c1, ((rt0.c4)<<(((0xffffffffd0ec62f7) IS TRUE))), UNLIKELY(((vt0.c0)>(vt0.c0))), ('-371718996' IN (rt0.c0)), MIN(CAST(rt0.c2 AS NUMERIC)) FROM vt0, rt0 WHERE ((((((0.5998774210608245)AND(0.5508632858474258)))OR(x'75b781db')) IN ())); -- 0ms;
SELECT DISTINCT NTILE(TRIM((+ (rt0.c2)), ((rt0.c3) IS FALSE))) OVER (), (((vt0.c0) IS FALSE) IN (((rt0.c4)-(NULL)))), ((NULLIF(DISTINCT rt0.c3, vt0.c0)) NOT NULL) FROM rt0, vt0 WHERE (((((((0x5476b470))!=((NULL)))))>=((((('1428358373', 0.04051170818306293, NULL))==((NULL, NULL, 0.44141620400669446))))))) GROUP BY ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c2))) NOT NULL); -- 0ms;
SELECT ((rt0.c0)|(TRIM(0.837876771580036))) FROM vt0;SELECT ALL ((TYPEOF(DISTINCT rt0.c4))%((~ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT ((rt0.c1) NOT BETWEEN (CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END) AND ((rt0.c2 IN ()))) FROM vt0;SELECT DISTINCT ((((rt0.c1)IS NOT(rt0.c0))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c0) AND (vt0.c0))) AND (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1)))), MAX(((vt0.c0)+(rt0.c2))), ((((((((rt0.c4)OR(rt0.c3)))OR('-1928014637')))OR(rt0.c2)))AND(rt0.c4)) COLLATE BINARY FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) AND ((NULL))), (((rt0.c2, rt0.c0, rt0.c3, rt0.c0, rt0.c1, rt0.c1, vt0.c0)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt0.c0)), rt0.c4 COLLATE BINARY, ((((((((rt0.c1)OR(vt0.c0)))AND(rt0.c2)))AND(NULL)))OR(rt0.c1)), ((rt0.c4)<>(vt0.c0)), ((vt0.c0)LIKE(rt0.c3)), HEX(rt0.c2), ((0.353143717198413) ISNULL))) AND ((((rt0.c3) NOT NULL), GROUP_CONCAT(rt0.c3), ((rt0.c1)&(rt0.c3)), (rt0.c4 IN ()), ((vt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)), (~ (rt0.c1)), rt0.c2))), CAST(((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)) AS TEXT) FROM vt0 GROUP BY ((((rt0.c3) NOT BETWEEN (0.012935379498297594) AND (x'f73b')))<=(((rt0.c1) NOT NULL)));SELECT DISTINCT CAST(ABS(DISTINCT rt0.c1) AS REAL), ((x'')<=((rt0.c0 IN (rt0.c1)))), (((rt0.c4))<>((rt0.c1))) COLLATE NOCASE FROM vt0 WHERE (CASE (NOT (0Xffffffff9b71f963))  WHEN '-1998292788' THEN '517867870' WHEN '	B' COLLATE BINARY THEN ((x'')IS NOT('a,')) WHEN ((NULL)&('c7\n')) THEN IFNULL(0.3961172822217395, x'') ELSE 0.05830935063303744 END);SELECT (((rt0.c1 IN ()))AND(rt0.c4)) FROM rt0 NOT INDEXED WHERE ((CASE NULL  WHEN -1065013056 THEN x'd39d' END IN (((((((((0.18440472087849813)OR(0.870458943957646)))AND(0.23992829818998396)))AND(-1830051681)))OR(0Xffffffffdb0bab2b))))); -- 0ms;
SELECT ((((((((((((((rt0.c3)|(rt0.c1)))OR((((rt0.c2, rt0.c3, rt0.c3)) BETWEEN ((rt0.c4, rt0.c3, vt0.c0)) AND ((rt0.c3, rt0.c4, NULL))))))AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (vt0.c0)))))AND(((((rt0.c4)OR(x'')))AND(rt0.c1)))))OR(COUNT(rt0.c0))))OR(rt0.c3 COLLATE RTRIM)))AND(((443619143)GLOB(rt0.c4)))), COUNT((rt0.c2 IN (rt0.c3, rt0.c3))), '?A' FROM rt0, vt0; -- 0ms;
SELECT ALL x'' FROM vt0, rt0 WHERE (((LOWER('1903535425')) NOT BETWEEN (((0.2523785559275932)<=(x''))) AND ((('1903535425')%(x''))))); -- 0ms;
SELECT ALL ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) IN (SQLITE_COMPILEOPTION_USED(rt0.c2))) FROM rt0 ORDER BY ((((vt0.c0) NOT BETWEEN (x'') AND (rt0.c1))) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))OR(x''))) AND (rt0.c1 COLLATE BINARY)) ASC;SELECT DISTINCT CASE ((vt0.c0)<=(rt0.c1))  WHEN TRIM(DISTINCT rt0.c3) THEN TYPEOF(DISTINCT rt0.c1) WHEN 0.7216166243166978 THEN (((x'985f'))=((rt0.c3))) WHEN CAST(rt0.c3 AS REAL) THEN ((rt0.c3)/(vt0.c0)) END, (- (rt0.c0)) COLLATE NOCASE, (((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))))||(0.37778509074834343)) FROM rt0 WHERE (((json_valid('-368408979'))>=(((x'')=(NULL)))));SELECT TOTAL(x'') OVER (), (1 IN ()), CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE FROM vt0, rt0 WHERE ((((((((((((((((('305039475')OR(0xffffffff90553344)))OR(x'')))OR(IFNULL(NULL, '0.3452418532388908'))))OR(NULL)))AND(((0.6107702110699885) IS TRUE))))AND(((NULL)IS('6B')))))OR(((NULL)+('')))))AND(NULL))); -- 1ms;
SELECT UNLIKELY((rt0.c4 IN ())) FROM rt0, vt0 WHERE (((-2010942821) NOT BETWEEN (NULL) AND ('490743581')) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c1 FROM vt0;SELECT DISTINCT AVG(((rt0.c0) IS FALSE)) OVER () FROM rt0, vt0 LIMIT -1830051681 OFFSET -1334567220; -- 0ms;
SELECT DISTINCT (- (CAST(rt0.c4 AS REAL))) FROM vt0, rt0 WHERE (((IFNULL(0.10027283974160339, x''))<(CAST(x'cf47' AS NUMERIC)))) GROUP BY x'' ORDER BY (((rt0.c0)!=(rt0.c2)) IN ()) DESC, CASE WHEN ((vt0.c0)>(rt0.c0)) THEN ((0.4164469208255531)>(vt0.c0)) WHEN ((((rt0.c2)OR(rt0.c2)))AND(x'')) THEN NULLIF(DISTINCT rt0.c0, rt0.c3) WHEN rt0.c2 THEN ((NULL) BETWEEN (rt0.c3) AND (0.380801801582313)) END ASC, (+ (CASE WHEN rt0.c3 THEN rt0.c2 WHEN NULL THEN vt0.c0 WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END))  NULLS LAST; -- 0ms;
SELECT DISTINCT x'' FROM vt0, rt0 WHERE ((((('595376552')|(NULL))) NOT BETWEEN (((0.971360363554186)IS NOT(x''))) AND (((0.5043892750518026)=('687184139'))))); -- 0ms;
SELECT DISTINCT (((- (rt0.c1)))<(CASE vt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), ((MAX(vt0.c0)) NOT BETWEEN ((((rt0.c0))<((rt0.c2)))) AND (SUM(rt0.c1))), ((CAST(rt0.c0 AS REAL))>(LOWER(DISTINCT rt0.c4))) FROM rt0, vt0 WHERE ((((((x'') NOTNULL), CAST(0.3589546652988168 AS NUMERIC), ((NULL) ISNULL)))=(((('280328086')<<('[j')), ((((1157806344)AND('I')))OR(x'5b56')), ((('-1786694133'))==((NULL))))))); -- 0ms;
SELECT ((((LOWER(DISTINCT rt0.c2))AND(((rt0.c3)<=(rt0.c0)))))AND(CASE WHEN '-728868879' THEN rt0.c0 ELSE rt0.c2 END)) FROM vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c0)<=(((rt0.c1) BETWEEN (rt0.c1) AND (vt0.c0)))), ((vt0.c0) NOT BETWEEN (((((rt0.c3)AND(rt0.c2)))AND(rt0.c0))) AND (CHANGES())), json_array(rt0.c1 COLLATE NOCASE, ((vt0.c0)+(rt0.c0)), ((rt0.c4) BETWEEN (vt0.c0) AND (NULL)), (((vt0.c0)) BETWEEN ((rt0.c2)) AND ((vt0.c0)))) FROM vt0, rt0 WHERE (((((((((((NULL)OR('-2047028452')))AND(0x6c83ca12)))AND(0.38565702320288797)))OR(0.7187126557361485))) BETWEEN (NULL) AND ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT CAST(0.3245036295572554 AS BLOB) COLLATE NOCASE FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4)>(vt0.c0 COLLATE BINARY)), (((vt0.c0 IN (rt0.c4, rt0.c3))) NOT NULL), (((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ((~ (rt0.c3)))) FROM vt0, rt0 WHERE ((((((124509453 IN ()))AND('-' COLLATE NOCASE)))OR(((((((((0.43456039470771257)OR(NULL)))AND(NULL)))OR(0X10b57796)))AND(x''))))) ORDER BY NULL DESC  NULLS LAST LIMIT -368408979; -- 0ms;
SELECT DISTINCT ((rt0.c2) NOTNULL) COLLATE RTRIM FROM vt0, rt0 WHERE (((CASE WHEN x'ef2b' THEN NULL END) NOT BETWEEN ((+ (''))) AND (LIKELIHOOD('', 0.05047841061618075)))) GROUP BY (- (((rt0.c0)LIKE(rt0.c1)))) HAVING rt0.c3; -- 0ms;
SELECT ALL (- (((rt0.c3)-(vt0.c0)))) FROM vt0 WHERE (LOWER(TYPEOF(x'')));SELECT ALL 'eq' COLLATE NOCASE, 0.018388549314235725, (((rt0.c3 IN ()))*(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE (((((0.28814771621977153) BETWEEN ('-1105846890') AND (922137019)))<((~ (0.30518846464617944))))) LIMIT -1105846890; -- 0ms;
SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND(CAST(0.09262138276176846 AS NUMERIC))))OR((- (rt0.c4)))) FROM rt0, vt0 WHERE ((((x'85ac' IN (1.542595589E9, 'ء,vF2'))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c2)AND(rt0.c4)))AND(vt0.c0)))OR(rt0.c2)))AND(rt0.c2))  WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)) THEN CAST(vt0.c0 AS REAL) END FROM rt0;SELECT DISTINCT (((((((vt0.c0, rt0.c3, rt0.c2))<>((rt0.c3, rt0.c2, rt0.c1))))OR(((vt0.c0)AND(rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM rt0 GROUP BY ((((rt0.c3)!=(rt0.c0)))<(((rt0.c4)>=(rt0.c0)))) ORDER BY (~ (((((rt0.c1)OR(rt0.c2)))OR(rt0.c3)))) ASC LIMIT 1272680768 OFFSET 1679314368;SELECT NULL FROM rt0, vt0; -- 1ms;
SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))) NOT BETWEEN (((rt0.c3)OR(rt0.c4))) AND (((rt0.c1)<(rt0.c3)))) FROM rt0, vt0; -- 0ms;
SELECT (CAST(rt0.c3 AS NUMERIC) IN ()) FROM rt0 WHERE (((('-108292906') ISNULL) IN ())); -- 0ms;
SELECT DISTINCT ((LIKE(rt0.c3, rt0.c0)) NOTNULL), ((CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 ELSE vt0.c0 END) NOT BETWEEN (SUM('3h%''aL<\*')) AND (rt0.c0)), (NOT (CASE WHEN vt0.c0 THEN vt0.c0 ELSE rt0.c0 END)) FROM rt0, vt0; -- 0ms;
SELECT ALL ((IFNULL(vt0.c0, rt0.c4)) IS TRUE) FROM vt0, rt0 WHERE (((((MAX('0.520237483464563', NULL))AND((NOT (x'8799')))))OR('-2026253999'))); -- 0ms;
SELECT DISTINCT ((((((((((((((((((rt0.c1)=(rt0.c1)))OR('')))AND(x'9bda')))AND(NULL)))OR(vt0.c0 COLLATE BINARY)))AND(rt0.c0)))OR(((rt0.c2) NOT NULL))))OR(((((((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))OR(0.4476045515612058)))OR(rt0.c0)))))AND(IFNULL(rt0.c1, rt0.c0))), ((vt0.c0) NOT BETWEEN (0Xffffffffe9d804ac) AND (rt0.c4)) COLLATE BINARY, LIKELIHOOD(0.14253737913769193, 0.4592814924486449) FROM rt0 GROUP BY (CASE WHEN vt0.c0 THEN rt0.c4 ELSE x'bea6' END IN ()) HAVING (0.37076824456591995 IN ());SELECT (((GLOB(rt0.c1, rt0.c2), (((vt0.c0)) BETWEEN ((rt0.c4)) AND (('I4'))), (((rt0.c1, rt0.c1, 1.428358373E9))>((vt0.c0, rt0.c2, rt0.c2)))))>=((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3)), ((vt0.c0)<<(rt0.c3)), rt0.c1))), CAST(vt0.c0 AS NUMERIC), COUNT(*) OVER (), AVG(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0))), (~ ((vt0.c0 IN ()))) FROM vt0, rt0 WHERE (((((0.695537883715088)%('-c{}AY36H4'))) ISNULL)); -- 0ms;
SELECT DATE(rt0.c0, rt0.c1, rt0.c2, rt0.c0, rt0.c0) COLLATE BINARY COLLATE BINARY, ((((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) ISNULL), (((rt0.c1)) NOT BETWEEN (((('-1873464508')GLOB(rt0.c4)))) AND ((x''))) FROM rt0 WHERE (((((((((1.903535425E9)OR((('0.3320567197505875')GLOB('F(\r')))))OR((~ ('261200331')))))OR((((0.03262422925824304)) NOT BETWEEN (('-1873464508')) AND ((NULL))))))OR(((0.29621290746893925)||(NULL))))) GROUP BY vt0.c0, ((rt0.c0)&(((rt0.c4) BETWEEN (vt0.c0) AND (rt0.c2)))), (('') IS TRUE) COLLATE RTRIM, vt0.c0, (((vt0.c0 IN ()))||(((rt0.c4) NOT BETWEEN (vt0.c0) AND (rt0.c0)))) HAVING (((((~ (rt0.c2)))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c2))) ORDER BY (((rt0.c2 IN ()))<<(((rt0.c3)LIKE(rt0.c1)))) DESC  NULLS FIRST;SELECT rt0.c2 FROM vt0 WHERE ((((('-1334321424' COLLATE NOCASE)AND(CASE WHEN '/u<lrze' THEN '0''KWt窥' END)))AND((((('mf')OR(x'')))OR(NULL)))));SELECT DISTINCT json_valid(rt0.c1 COLLATE BINARY) FROM rt0 WHERE ((((~ (0.834518227782834)))|((NOT ('t%Jx'))))); -- 0ms;
SELECT DISTINCT SUM((rt0.c1 IN ()) COLLATE RTRIM) FROM vt0; -- 0ms;
SELECT ALL AVG((((rt0.c4))<((x'')))) OVER () FROM vt0, rt0 WHERE ((((x'')) BETWEEN (((('1637427792')OR(-792401841)))) AND ((CASE WHEN -1.326729643E9 THEN 'Q<QP^N*zӥ' ELSE 5.1786787E8 END)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)|(rt0.c2)))IS(((rt0.c3) IS TRUE))) FROM rt0, vt0 WHERE (((-4.25474606E8) NOT BETWEEN ('nwsyuf') AND (0x6698853e)) COLLATE NOCASE) GROUP BY ((vt0.c0 COLLATE RTRIM)<<((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))))), vt0.c0, x'' HAVING CAST(CAST(rt0.c3 AS TEXT) AS TEXT); -- 0ms;
SELECT ALL ((((rt0.c0)-(rt0.c1))) NOT NULL) FROM vt0 WHERE (NULL) GROUP BY ((('', ('Db~	IeY' IN (vt0.c0)), ((((((((rt0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c0)))OR(NULL))))==((CAST(vt0.c0 AS REAL), PRINTF(vt0.c0), rt0.c0 COLLATE BINARY))) HAVING QUOTE(rt0.c3) COLLATE NOCASE;SELECT DISTINCT CAST(UNLIKELY(rt0.c4) AS REAL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GLOB('-1513203488', (0Xfffffffff07657c5 IN ())) FROM rt0, vt0 GROUP BY (((~ (rt0.c2))) NOT BETWEEN (rt0.c2) AND ((((rt0.c2, rt0.c1, vt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c4, rt0.c3)) AND ((rt0.c1, vt0.c0, rt0.c4))))) HAVING ((((((((((((CAST(vt0.c0 AS NUMERIC))AND(MAX(rt0.c3, rt0.c3, vt0.c0, rt0.c3))))AND(((NULL)|(rt0.c3)))))OR(((rt0.c1) IS TRUE))))OR(((((rt0.c2)OR(vt0.c0)))AND(NULL)))))OR((vt0.c0 IN ()))))AND((rt0.c4 IN ()))); -- 1ms;
SELECT DISTINCT ((((rt0.c3)>(rt0.c3))) ISNULL) FROM rt0 WHERE ((x'' IN ())); -- 0ms;
SELECT ALL ((rt0.c4 COLLATE BINARY)>(((rt0.c4)>>(rt0.c0)))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) ISNULL))) AND (((((vt0.c0, rt0.c2, rt0.c0)) BETWEEN ((vt0.c0, rt0.c4, vt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c0)))))), CASE ((rt0.c1)IS NOT(vt0.c0))  WHEN rt0.c2 COLLATE NOCASE THEN (+ (NULL)) ELSE ((rt0.c4) ISNULL) END FROM vt0;SELECT DISTINCT MAX(((((rt0.c1)OR(rt0.c2)))AND(rt0.c3))) FROM vt0, rt0 LIMIT -404861692; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOTNULL))<=(((rt0.c1)>(rt0.c3)))) FROM vt0;SELECT SUM(vt0.c0 COLLATE BINARY COLLATE RTRIM) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c1))!=((rt0.c1)))) OVER () FROM vt0 WHERE ((- (CAST('-200089204' AS BLOB)))) ORDER BY CASE WHEN ((vt0.c0)>=(rt0.c1)) THEN (- (rt0.c4)) WHEN CAST(vt0.c0 AS BLOB) THEN 0.835699072851041 COLLATE NOCASE WHEN (rt0.c3 IN ()) THEN CAST(rt0.c2 AS NUMERIC) END ASC  NULLS LAST;SELECT ALL (((((rt0.c4))<=((rt0.c0)))) IS FALSE), ((0xffffffffe17dc88c)GLOB(x'70ad')) COLLATE NOCASE, LOWER(SUM(rt0.c4)) FROM rt0 ORDER BY ((((vt0.c0)<(rt0.c3))) NOT BETWEEN (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c1 END) AND (rt0.c1));SELECT ALL NULL FROM rt0 WHERE (((TRIM(DISTINCT NULL)) ISNULL)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN 0.46244969247559775 THEN '-1677824992' WHEN rt0.c1 THEN rt0.c4 END) BETWEEN (CAST(NULL AS INTEGER)) AND (((rt0.c1) ISNULL))) FROM rt0 WHERE ((((((0.5301151348479967)<('0.3589546652988168'))))<((NULL))));SELECT DISTINCT ((((rt0.c0) NOTNULL))|(((rt0.c1) ISNULL))) FROM vt0, rt0; -- 0ms;
SELECT rt0.c2, (((- (rt0.c0)))=((- (rt0.c3)))), rt0.c3 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT -1.873464508E9 FROM vt0, rt0 WHERE (((((('*uel\d2z9')) BETWEEN ((0.09665317014354624)) AND (('0.29621290746893925'))))IS NOT(CAST('0.007803020632246138' AS INTEGER)))) GROUP BY ((((rt0.c2)IS NOT(rt0.c3)))||(CASE WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END)) ORDER BY -1485119975 COLLATE BINARY ASC  NULLS LAST;SELECT DISTINCT HEX(((rt0.c1) ISNULL)), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE NOCASE, (CASE rt0.c4  WHEN vt0.c0 THEN rt0.c0 END IN ()) FROM vt0, rt0 WHERE ((CAST(x'' AS REAL) IN ((((0.4476045515612058)) BETWEEN (('-722199266')) AND ((NULL)))))) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()), ((((((((rt0.c3)AND(rt0.c1 COLLATE BINARY)))AND(((vt0.c0)+(rt0.c2)))))OR(CAST(rt0.c2 AS BLOB))))AND(((rt0.c0)+(vt0.c0)))) ASC, ((((((((((vt0.c0)OR(vt0.c0)))AND(rt0.c3)))OR(rt0.c3)))OR('}y夈El'))) BETWEEN (rt0.c1) AND (((rt0.c0) NOT NULL)))  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((((((((rt0.c1)||(vt0.c0)))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))))AND(0X2cdae37e)))OR((NOT (vt0.c0)))))OR(rt0.c4 COLLATE NOCASE)) FROM vt0, rt0 WHERE (CAST((- (x'8124b08b')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((0.032618875532345215) NOT BETWEEN (rt0.c2) AND (vt0.c0)) COLLATE NOCASE FROM vt0 WHERE ((((((('106684552')||(0.7730402274824634)))OR(((('-156036637', '-1145951261', 0.4951453529621145)) NOT BETWEEN (('>h', '0\wdZ8Y', NULL)) AND (('zWh]8Q%#', x'', -1895522189))))))OR(((((x'')AND(0x5f3a0f97)))OR('#&DwN35')))));SELECT DISTINCT ((MAX(rt0.c2))>=('-353657913')), (((NULL IN (rt0.c4))) NOT BETWEEN (((((rt0.c1)OR(NULL)))OR(rt0.c2))) AND (vt0.c0 COLLATE NOCASE)), RANK() OVER () FROM vt0;SELECT DISTINCT ((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c4)))<>(CAST(rt0.c0 AS INTEGER))) FROM vt0, rt0 WHERE (((((CASE x''  WHEN NULL THEN x'' ELSE x'' END)OR(((((((((0.38082955327836554)AND(x'')))OR('}oj)69M')))OR(0.4164469208255531)))AND(0.05830935063303744)))))AND(CAST('' AS INTEGER)))); -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM rt0 WHERE (CASE (((('-1786694133')OR(x'')))OR(0.9756756760125427))  WHEN CHAR(569688222) THEN (((NULL, NULL, '!*W	l}}')) NOT BETWEEN (('>h', 0.7463405258576802, x'')) AND ((NULL, x'7336', NULL))) WHEN 0.838375130814124 COLLATE RTRIM THEN ((0.47037328806077605)|(x'')) WHEN x'' THEN JULIANDAY('t%jx', NULL, '-1085702783', 0.3677007743924492, x'') END); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT NULL) FROM rt0, vt0 WHERE (CASE ((-1435056400) IS TRUE)  WHEN '㗞+F8' THEN (((NULL, '', '-965178801'))!=(('', NULL, x''))) ELSE CASE WHEN NULL THEN 0.38844851067707387 ELSE x'' END END); -- 1ms;
SELECT ALL rt0.c2 FROM rt0, vt0 WHERE ((~ (CASE WHEN '-116531925' THEN 0.566089654770653 WHEN '2[T켞,L.D4' THEN x'' WHEN '' THEN NULL END))) LIMIT 1019766039; -- 0ms;
SELECT ALL CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END COLLATE NOCASE FROM vt0;SELECT x'f0c2e584', ((((((vt0.c0) ISNULL))AND(((rt0.c3)/(vt0.c0)))))AND(((rt0.c1)LIKE(rt0.c3)))), CASE rt0.c1  WHEN UNLIKELY(1.62498068E9) THEN AVG(rt0.c1) END FROM vt0, rt0 WHERE (((((CASE ''  WHEN NULL THEN NULL ELSE '1499462004' END)AND((+ ('752542590')))))OR(((0Xffffffffd87704e3)IS(0.9609517438930051))))); -- 0ms;
SELECT DISTINCT CASE (- (rt0.c4))  WHEN (('\\r') BETWEEN (rt0.c0) AND (rt0.c2)) THEN (rt0.c1 IN (vt0.c0)) END FROM vt0, rt0 WHERE (((CASE WHEN NULL THEN -1.485119975E9 WHEN x'a315' THEN ',2>/P%T' WHEN x'' THEN 'd({+fQ' END) NOT BETWEEN (CAST(x'c086' AS NUMERIC)) AND ((NOT ('0.37076824456591995'))))); -- 1ms;
SELECT DISTINCT (0X77042e59 IN (((rt0.c2) IS TRUE), ((rt0.c3) NOT NULL))) FROM vt0, rt0 INTERSECT SELECT ALL ((((rt0.c2) ISNULL))OR(NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)>=(rt0.c2))) BETWEEN (json_patch(vt0.c0, rt0.c3)) AND (CASE WHEN rt0.c3 THEN rt0.c0 WHEN 0.8925391258090561 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE vt0.c0 END)) FROM vt0, rt0;SELECT DISTINCT CAST(((rt0.c0) NOTNULL) AS BLOB) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)|(rt0.c3)))!=((((rt0.c3))<>((vt0.c0))))), LIKELY(DISTINCT CASE WHEN rt0.c0 THEN rt0.c1 ELSE NULL END), COUNT(*) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT NULL, UNLIKELY(DISTINCT ((rt0.c4)|(rt0.c0))), COUNT(*) OVER () FROM rt0, vt0 WHERE (x'14e2'); -- 0ms;
SELECT rt0.c2 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c1)AND(rt0.c1)))OR(rt0.c2))) OVER () FROM rt0, vt0 WHERE (((UNLIKELY(NULL))IS NOT(((0.4476045515612058) NOT NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN (('MሃTW') IS TRUE) THEN NULL WHEN ((rt0.c0) NOT NULL) THEN rt0.c0 WHEN ((rt0.c0)AND('')) THEN rt0.c3 COLLATE RTRIM ELSE CASE WHEN rt0.c4 THEN rt0.c3 ELSE vt0.c0 END END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 0.8305860956725837 FROM vt0, rt0 WHERE (((((((NULL)GLOB(0.7087994289361479)))AND((('0.03262422925824304') NOTNULL))))OR(NULL COLLATE RTRIM))); -- 0ms;
SELECT AVG(((rt0.c3)>=(rt0.c0))) OVER () FROM vt0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((- (rt0.c0)))LIKE(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (((+ (vt0.c0))) NOTNULL) FROM vt0 WHERE (NULL) GROUP BY ((((((rt0.c4)AND(rt0.c1)))AND(NULL)))|((((rt0.c3))>((rt0.c4))))) HAVING COUNT(*);SELECT DISTINCT ((NOT (rt0.c4)) IN ()), CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END COLLATE NOCASE, ((((((rt0.c2)AND(NULL)))AND(''))) IS TRUE) FROM vt0, rt0 WHERE (TRIM(DISTINCT (((('*uel\d2z9')AND(0.9974751115690762)))AND('aL祀h')))); -- 0ms;
SELECT ALL ((((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 END)AND(((rt0.c2) NOT NULL))))AND(rt0.c1)), (NOT (LIKE(rt0.c0, rt0.c4))), CASE CASE rt0.c2  WHEN NULL THEN rt0.c0 END  WHEN rt0.c0 COLLATE RTRIM THEN CAST(rt0.c4 AS TEXT) ELSE (((rt0.c3, rt0.c2, vt0.c0))=((rt0.c4, rt0.c0, rt0.c3))) END, NTH_VALUE(TYPEOF(DISTINCT 0.30597040729360625), ((((((rt0.c2)<=(rt0.c1)))AND(rt0.c4)))OR(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 END))) OVER (), ((CASE rt0.c3  WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 END) BETWEEN ((NOT (rt0.c1))) AND (((rt0.c0) BETWEEN (vt0.c0) AND (NULL)))) FROM rt0 WHERE (CAST(((((1.955487079E9)AND('1609434657')))AND(0.20301167631206474)) AS BLOB)) GROUP BY (((((((((rt0.c4)AND(vt0.c0)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)) IN (LTRIM(rt0.c0, rt0.c4))) HAVING (((rt0.c4 COLLATE NOCASE, rt0.c2 COLLATE NOCASE, ((vt0.c0) ISNULL)))>((rt0.c4 COLLATE NOCASE, CAST(rt0.c0 AS BLOB), UNLIKELY(DISTINCT vt0.c0))));SELECT ALL rt0.c1 FROM vt0, rt0 WHERE (CASE WHEN IFNULL('-1717100693', 0.4951453529621145) THEN NULL COLLATE RTRIM ELSE ((0.20301167631206474) NOT NULL) END); -- 0ms;
SELECT DISTINCT LAG(((x'')-(0.3427826740479186)), ((((vt0.c0)<(rt0.c3))) BETWEEN (rt0.c1 COLLATE NOCASE) AND (((((((((vt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c0)))), CAST((- (rt0.c0)) AS INTEGER)) OVER (), GROUP_CONCAT(((rt0.c3)<=(rt0.c3)) COLLATE RTRIM), (((((rt0.c4)AND(rt0.c1)))AND(rt0.c3)) IN (-1282970991)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT AVG(0.6528318736446721) FROM rt0 GROUP BY ((((CAST(rt0.c2 AS TEXT))AND((vt0.c0 IN (rt0.c4, rt0.c2)))))AND(rt0.c0 COLLATE BINARY));SELECT ALL CASE x''  WHEN ((rt0.c1)*(0Xffffffffce7e7892)) THEN (+ (rt0.c0)) WHEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c0)) THEN ((rt0.c1) IS TRUE) WHEN CASE WHEN rt0.c4 THEN rt0.c0 END THEN ((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)) ELSE (('')*(vt0.c0)) END FROM rt0 LIMIT 2090889904;SELECT ((CASE WHEN vt0.c0 THEN 0Xffffffff90553344 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) NOTNULL), rt0.c0, ((CAST(rt0.c0 AS BLOB))>=((rt0.c2 IN ()))), rt0.c3, MAX((rt0.c4 IN ()) COLLATE NOCASE) FROM vt0 WHERE ((((('컙U+')LIKE('')))<(((0X6335331a) ISNULL))));SELECT DISTINCT ((((((((CAST(vt0.c0 AS TEXT))AND(CAST(rt0.c3 AS BLOB))))AND((((vt0.c0))<=((rt0.c1))))))OR(((rt0.c0)>(rt0.c0)))))AND(load_extension(rt0.c0))), ((((rt0.c0 IN ())))>((CAST(rt0.c3 AS BLOB)))), TRIM(DISTINCT vt0.c0) FROM rt0;SELECT (+ (((vt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))), ((((vt0.c0)>>(rt0.c0)))IS((rt0.c0 IN ()))), (+ ((vt0.c0 IN ()))) FROM vt0 WHERE ((('F(\r' IN ()) IN ((('305039475')IS NOT(NULL)), ((0.09262138276176846) BETWEEN (x'374c6976') AND ('-20176125'))))) LIMIT -1065013056 OFFSET -187516369;SELECT DISTINCT rtreenode(CAST(vt0.c0 AS REAL), CAST(vt0.c0 AS BLOB)), CUME_DIST() OVER (), ((((x'')OR(rt0.c1 COLLATE RTRIM)))OR(CAST(rt0.c3 AS INTEGER))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)), (rt0.c1 IN (rt0.c3))), NULL, (NOT ((rt0.c4 IN ()))) FROM vt0 WHERE (((0.3890181732394439) IS TRUE) COLLATE NOCASE);SELECT MAX(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c4)))OR(NULL))) FROM rt0, vt0 WHERE ('-1496941673'); -- 0ms;
SELECT ALL (((+ (rt0.c2)))AND(CASE rt0.c4  WHEN rt0.c3 THEN vt0.c0 END)) FROM rt0, vt0 GROUP BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS BLOB) HAVING QUOTE(CASE rt0.c4  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END) ORDER BY CAST(vt0.c0 AS BLOB); -- 0ms;
SELECT (((((NULL) ISNULL)))==((((NULL)IS(vt0.c0))))), ((((0.6511695527586888)GLOB(rt0.c4)))LIKE(0.7534912376731857)), ((((rt0.c2)+(rt0.c0)))>(CAST(rt0.c2 AS BLOB))) FROM rt0, vt0 WHERE (0.05377335084114654); -- 0ms;
SELECT CAST((rt0.c0 IN (rt0.c2)) AS NUMERIC) FROM vt0 WHERE (((CAST(x'' AS REAL)) NOT BETWEEN ((((((((('-1251323504')OR('982377908')))AND('-1151274797')))OR(x'')))AND(0.9743241161881295))) AND ((('') IS TRUE))));SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)))GLOB(TOTAL(rt0.c2))) FROM rt0 WHERE (json_insert(((0.8898432833757661) ISNULL), TRIM('-783887579', 0Xffffffffb3897f5c), CASE WHEN '-425474606' THEN '285745728' WHEN 0.40099998137747683 THEN 'UZi' WHEN '-1766448467' THEN -1485119975 ELSE 0Xffffffffed3e737e END)) ORDER BY '>W(i>' DESC  NULLS FIRST;SELECT DISTINCT (((HEX(rt0.c3)))>=((NULLIF(DISTINCT vt0.c0, rt0.c1)))), (((rt0.c2 IN ()))-(vt0.c0)), ((TOTAL_CHANGES()) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN -370439307 END) AND (CAST(rt0.c2 AS INTEGER))), (~ (((vt0.c0) ISNULL))), ((((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (rt0.c1) AND (CASE WHEN rt0.c4 THEN rt0.c1 END)) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT rt0.c3 FROM vt0 WHERE ((((('1542595589')%(NULL)))GLOB((+ (NULL))))) GROUP BY 800143239 ORDER BY CAST(CAST(rt0.c1 AS REAL) AS BLOB)  NULLS LAST, rt0.c0 COLLATE RTRIM LIMIT -1065013056 OFFSET -1267097393;SELECT CASE CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END  WHEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END THEN ((vt0.c0) BETWEEN (rt0.c3) AND (vt0.c0)) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN rt0.c0 COLLATE BINARY WHEN '-1928014637' THEN (+ (rt0.c1)) END FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c4 END)LIKE(((rt0.c0)>=(rt0.c3)))), MIN(rt0.c3), CAST(((rt0.c1) ISNULL) AS REAL) FROM vt0, rt0 WHERE (CAST(((1.086282344E9)<<(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT x'b4e7' FROM rt0, vt0 ORDER BY rt0.c4  NULLS LAST; -- 1ms;
SELECT ALL ((((rt0.c2 COLLATE NOCASE)AND(((rt0.c3) IS FALSE))))OR(((rt0.c1)||(rt0.c4)))) FROM rt0, vt0 INTERSECT SELECT ALL ((((((rt0.c2)AND(rt0.c0)))AND(x'')))LIKE(rt0.c4)) FROM rt0 WHERE (((CAST(0.5750728285185838 AS TEXT))%(((((((((x'1388')AND('491625703')))AND('-26368810')))AND(0.7472491203579991)))AND(NULL))))) GROUP BY ((CAST(rt0.c1 AS INTEGER))=(rt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT ALL (((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)) IN ()) FROM vt0 WHERE (((NULLIF(DISTINCT 0.9711222034574346, 0.47586700710417906))<=(x'a1c1'))) LIMIT 490743581; -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT rt0.c4))/(((vt0.c0)/(rt0.c3)))) FROM vt0 WHERE ((NOT (((x'')+('-1586240612')))));SELECT DISTINCT ((MAX(rt0.c3))+(((((rt0.c0)OR(NULL)))AND(rt0.c3)))), ((((rt0.c0)==(0x1e698235)))==(GROUP_CONCAT(rt0.c3))), (((((rt0.c1, rt0.c2, vt0.c0)) NOT BETWEEN ((rt0.c0, vt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c4, rt0.c2)))) IS TRUE) FROM rt0, vt0 WHERE (((((((((json_object('0.37778509074834343', 0.878731298467003))AND((- ('{	')))))OR(CASE x''  WHEN 2.61200331E8 THEN x'' WHEN NULL THEN NULL WHEN x'' THEN NULL WHEN 0X51fa6f27 THEN NULL WHEN '-1793919866' THEN NULL END)))AND(-1065013056 COLLATE BINARY)))OR((+ (''))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)) AS TEXT) FROM rt0; -- 0ms;
SELECT ((((((((CASE vt0.c0  WHEN rt0.c4 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END)AND(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR(CASE WHEN rt0.c2 THEN rt0.c2 WHEN 0xffffffffb56a5190 THEN rt0.c4 WHEN rt0.c0 THEN vt0.c0 END)))OR(((rt0.c2)%(rt0.c3)))))AND(((rt0.c2)==(rt0.c2)))) FROM vt0, rt0 ORDER BY rt0.c4 DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (((rt0.c3) ISNULL))) FROM vt0, rt0 WHERE ((~ (((((x'')OR(0.9155806925543671)))OR(0.7999393888079463))))) GROUP BY json_array_length(vt0.c0 COLLATE RTRIM) HAVING ((((x'' COLLATE NOCASE)OR(rt0.c3)))OR(((rt0.c3)%(rt0.c2)))) LIMIT -425474606 OFFSET 930202855;SELECT DISTINCT vt0.c0 FROM rt0 WHERE (((((x'')==(123158843))) BETWEEN (((x'')<=(0.7605204948759685))) AND ((('2071128560') NOT NULL)))) ORDER BY rtreenode(rt0.c3, ((rt0.c1)GLOB(vt0.c0)))  NULLS FIRST, x'' ASC, (((((- ('-740968558')))AND(((rt0.c3)IS(rt0.c0)))))AND(((rt0.c4) NOTNULL))) DESC;SELECT ((((((((((((CAST(x'' AS INTEGER))AND(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt0.c0)))))AND(rt0.c2 COLLATE BINARY)))OR(((rt0.c2)>=(rt0.c0)))))OR(rt0.c4 COLLATE RTRIM)))AND('oDlh')))AND((vt0.c0 IN (0.7269425238565159)))) FROM rt0 WHERE (CAST(CASE WHEN 852027419 THEN NULL WHEN '' THEN NULL WHEN -1.873464508E9 THEN NULL WHEN '' THEN 'FALSE' WHEN 0.736496591661397 THEN NULL ELSE 0X64845ef8 END AS REAL));SELECT DISTINCT MIN((('-728868879') NOT NULL)) COLLATE RTRIM, (((rt0.c4)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c4 END)) AND (((rt0.c2 IN (vt0.c0))))), (- (CAST(rt0.c4 AS NUMERIC))) FROM vt0, rt0; -- 1ms;
SELECT ALL rt0.c3 FROM rt0, vt0 WHERE (((((- ('1637427792')), (((x''))=(('-1365156968'))), STRFTIME(NULL, NULL, NULL)))==((((0.6289959683952872)>=(-1.73541931E8)), ((0.21405626130820576) IS FALSE), '277499319' COLLATE BINARY)))) ORDER BY (CAST(rt0.c0 AS NUMERIC) IN (rt0.c1 COLLATE NOCASE))  NULLS FIRST LIMIT 379095912; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c1) IS TRUE)) OVER (), CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) THEN (+ (vt0.c0)) WHEN x'' THEN NULL WHEN rt0.c2 THEN (((rt0.c4))==((rt0.c3))) END, (((((0Xffffffff918634a4, rt0.c0, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, 0xffffffffc11b9326)) AND (('-200089204', vt0.c0, x''))))<=(LIKELY(DISTINCT rt0.c4))), ((((0.8902577062276321)!=(rt0.c4)))*(((vt0.c0) ISNULL))), FIRST_VALUE(((((vt0.c0)>>(vt0.c0))) ISNULL)) OVER ( ORDER BY (((NOT (rt0.c2))) NOT BETWEEN (CASE WHEN rt0.c4 THEN 0.9496405466112005 ELSE 0X237cb9a8 END) AND (rt0.c0))  NULLS FIRST) FROM vt0 WHERE (CAST(ABS(971627143) AS BLOB));SELECT DISTINCT vt0.c0, (((vt0.c0, rt0.c3, rt0.c2)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt0.c0)), CAST(rt0.c4 AS BLOB), CAST(rt0.c4 AS TEXT))) AND (((NOT (rt0.c4)), rt0.c3, ((rt0.c1)IS NOT(rt0.c2))))), vt0.c0 FROM vt0, rt0; -- 1ms;
SELECT DISTINCT (((~ (vt0.c0)))<=(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)))) FROM vt0;SELECT DISTINCT (((x'bf59')) NOT BETWEEN (((((rt0.c0)) NOT BETWEEN (('-1072479578')) AND (('?rV'))))) AND ((CAST(rt0.c2 AS INTEGER)))), COUNT(*) OVER (), (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0, rt0 WHERE ((((x'') IS FALSE) IN ())); -- 0ms;
SELECT ALL rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT (- ((- (rt0.c1)))) FROM rt0, vt0 LIMIT 90494192 OFFSET 2083037070; -- 0ms;
SELECT CASE WHEN ((((((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)))AND(NULL)) THEN ((rt0.c4) NOT NULL) WHEN SUM(rt0.c3) THEN ABS(DISTINCT rt0.c3) WHEN ((vt0.c0) IS TRUE) THEN LIKELY(rt0.c2) END FROM rt0 WHERE ((((((0Xffffffffb1baf50c)AND(0.987601894310999))))<=(((('-162031858') NOTNULL)))));SELECT ((((((x'151d87aa') BETWEEN (rt0.c3) AND (rt0.c4)))AND(((rt0.c1)AND(rt0.c0)))))AND(CAST(rt0.c0 AS REAL))), (- ((rt0.c3 IN ()))), CAST(((rt0.c4)-(rt0.c2)) AS INTEGER) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((((((LOWER(DISTINCT rt0.c0))AND(((NULL) IS TRUE))))AND(((rt0.c0) NOTNULL))))AND(CASE WHEN '' THEN rt0.c2 END)))OR(((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c4)))) FROM rt0;SELECT COUNT(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END) COLLATE BINARY FROM vt0 WHERE (CAST(((0.953723940586215)&('0.4462101702215838')) AS INTEGER)) LIMIT -722199266 OFFSET 1375366951;SELECT UPPER(TOTAL(rt0.c2)) FROM vt0, rt0 ORDER BY (((('753405435') NOT BETWEEN (rt0.c2) AND (rt0.c2))) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT -1.065013056E9 FROM vt0, rt0 WHERE (((- (NULL)) IN ())); -- 1ms;
SELECT DISTINCT (((NOT (vt0.c0)))IS NOT(CASE WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 END)), (PRINTF(rt0.c4) IN ()), ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN ((~ (rt0.c3))) AND (vt0.c0)) FROM vt0, rt0 WHERE ((((- (0.27109155139203944))) NOT NULL)) LIMIT 517867870 OFFSET 1637427792; -- 0ms;
SELECT (~ (((vt0.c0)IS(rt0.c4)))) FROM rt0 INNER JOIN vt0 ON ((rt0.c4 COLLATE NOCASE) IS TRUE); -- 0ms;
SELECT CAST(LIKE(vt0.c0, rt0.c3, '唡') AS TEXT), ((vt0.c0) NOT BETWEEN (((rt0.c3)*(vt0.c0))) AND (((rt0.c4)GLOB(rt0.c2)))), ((((rt0.c4)=(rt0.c1)))GLOB(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) FROM vt0, rt0 WHERE (((x'' COLLATE RTRIM)|((((4.187797E8)) NOT BETWEEN (('131207472')) AND ((0.7613034461817132)))))); -- 1ms;
SELECT DISTINCT ((rt0.c2)<>(rt0.c0)) COLLATE BINARY FROM rt0 WHERE ((- ((('r9') NOTNULL)))); -- 0ms;
SELECT ALL ((0.36008396656324193)<>(GROUP_CONCAT(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c3 IN ()))AND(((rt0.c1)GLOB('4z/*z')))))OR(((rt0.c4)&(rt0.c2)))), ((CASE vt0.c0  WHEN '0''KWt窥' THEN rt0.c4 WHEN rt0.c3 THEN '欍* s⍸b~l' WHEN rt0.c3 THEN vt0.c0 END) NOTNULL), ((rt0.c3)/(rt0.c0)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE (((vt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3)))  WHEN ((vt0.c0) ISNULL) THEN GROUP_CONCAT(rt0.c4) WHEN ((rt0.c4)*(0x5dea2f93)) THEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END WHEN x'' THEN ((rt0.c4) IS FALSE) END, TOTAL(rt0.c4), TRIM(((rt0.c0) IS TRUE)) FROM vt0, rt0 WHERE (TRIM(DISTINCT ((NULL)&(-1.485119975E9)))); -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOT NULL), (+ (((rt0.c1) IS FALSE))), CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c3 END COLLATE BINARY FROM vt0 WHERE ((NOT ('Qdp' COLLATE RTRIM)));SELECT DISTINCT ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)) COLLATE BINARY FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3) ISNULL) COLLATE BINARY FROM rt0, vt0 ORDER BY ((rt0.c4 IN ()) IN ()) DESC; -- 0ms;
SELECT DISTINCT ((((((((((((CAST(rt0.c0 AS BLOB))AND(CASE WHEN rt0.c0 THEN 0.08870986123717883 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 ELSE vt0.c0 END)))AND(COUNT(*))))OR((NOT (rt0.c4)))))AND((((rt0.c2))>(('r9'))))))AND(((NULL)OR(rt0.c1)))))AND(AVG(rt0.c3))), GROUP_CONCAT((((rt0.c0, NULL, 0Xffffffffeaf07f18))<((rt0.c4, rt0.c3, rt0.c4)))) COLLATE RTRIM, CAST(CAST(rt0.c0 AS INTEGER) AS NUMERIC) FROM vt0, rt0 ORDER BY (- ((rt0.c2 IN (rt0.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((vt0.c0) NOT NULL)), ((((((((((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))OR(((rt0.c1)<(rt0.c1)))))AND(((((rt0.c2)OR(rt0.c4)))OR(rt0.c0)))))OR(((rt0.c0)OR(NULL)))))AND(((((rt0.c4)OR(rt0.c0)))AND(rt0.c4)))), ((((((((((vt0.c0)OR('1417065584')))AND(rt0.c3)))OR(rt0.c4)))OR(vt0.c0))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((vt0.c0)OR(rt0.c3)))) FROM vt0 WHERE (((((((x'caa9')OR(NULL)))OR('')))GLOB(((x'')AND('-1334321424'))))) GROUP BY ((UNICODE(rt0.c1)) IS FALSE) HAVING ((((~ (vt0.c0))))>=((rt0.c1)));SELECT DISTINCT SUM(CASE WHEN rt0.c3 THEN rt0.c2 END) FROM vt0, rt0 GROUP BY LIKELIHOOD(rt0.c0, 0.5116056424048407) HAVING CASE WHEN rt0.c1 THEN x'' ELSE rt0.c0 END LIMIT 1210648622; -- 0ms;
SELECT ALL ((((rt0.c1) NOT NULL)) NOT BETWEEN (((rt0.c4)IS(rt0.c0))) AND (ABS(DISTINCT vt0.c0))) FROM vt0;SELECT ALL (((((rt0.c2)<(vt0.c0))))>=((((rt0.c3) BETWEEN (0.9680176329925648) AND (rt0.c2))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CAST(((((rt0.c1)OR(rt0.c3)))AND(vt0.c0)) AS REAL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((+ (rt0.c3)), ((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c3)), CAST(rt0.c1 AS BLOB)))<>((CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END, LENGTH(rt0.c3), ((rt0.c3)IS NOT(rt0.c3))))), CAST(((rt0.c2)IS(rt0.c0)) AS NUMERIC), CAST(((rt0.c2)<=(rt0.c0)) AS TEXT) FROM rt0, vt0 WHERE ((((((('YsBo') NOTNULL))OR((NULL IN (0.3283461279323945)))))OR(LOWER('C7\n')))); -- 0ms;
SELECT ALL '7p' FROM rt0, vt0 WHERE (CAST(((0.9194311361158918) BETWEEN (NULL) AND (x'')) AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS BLOB) AS REAL) FROM vt0 WHERE ((((- (NULL))) NOT NULL));SELECT DISTINCT CAST(-2.036292319E9 COLLATE NOCASE AS REAL) FROM rt0; -- 0ms;
SELECT (((rt0.c1 IN (rt0.c4)))OR(CASE vt0.c0  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END)) FROM rt0 WHERE ((((('+쫺') NOTNULL)) IS FALSE));SELECT DISTINCT ((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)) COLLATE NOCASE, MIN((('nH-P+{82')*(rt0.c3))), (+ (CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt0 WHERE (CAST(((0.6381301555930077) IS FALSE) AS REAL));SELECT DISTINCT rt0.c4 FROM rt0, vt0 WHERE ('''\x#F') ORDER BY vt0.c0; -- 0ms;
SELECT NULL FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((x'') ISNULL) COLLATE RTRIM FROM rt0 WHERE ((((((NULL)AND('c7\n')))OR(x'e30a')) IN ())); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS TEXT), ((((((rt0.c4) NOT BETWEEN (vt0.c0) AND (vt0.c0)))AND(((rt0.c1)%(rt0.c2)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt0.c0)))), ((((0.5552003783229197)OR((- (vt0.c0)))))OR(COUNT(rt0.c2))) FROM rt0 GROUP BY CASE WHEN CAST(rt0.c3 AS REAL) THEN CASE WHEN rt0.c4 THEN rt0.c2 END WHEN CASE WHEN rt0.c0 THEN rt0.c2 END THEN IFNULL(rt0.c2, rt0.c1) WHEN rt0.c4 THEN ((rt0.c1)!=(rt0.c3)) WHEN x'6d38' THEN ((rt0.c1)|(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)) THEN rt0.c0 END LIMIT 411772771;SELECT DISTINCT (((+ (rt0.c4)))-(((rt0.c1)<<(vt0.c0)))) FROM vt0 WHERE ((UPPER(-1665112331) IN ())) ORDER BY ((CAST(rt0.c4 AS BLOB)) NOTNULL);SELECT DISTINCT (((vt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((((rt0.c4)AND(rt0.c4)), ((rt0.c3)GLOB(vt0.c0)), (((rt0.c1))<((-1192071857))))) AND ((rt0.c4, ((rt0.c4) IS FALSE), ((rt0.c1)-(rt0.c1))))) FROM vt0, rt0; -- 0ms;
SELECT ALL rt0.c3, rt0.c1, CASE WHEN ((((rt0.c0)OR(rt0.c3)))OR('292114700')) THEN 0.3452418532388908 ELSE ((((((((vt0.c0)AND(vt0.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)) END FROM vt0, rt0; -- 0ms;
SELECT ALL (((((rt0.c4)) BETWEEN ((0.05377335084114654)) AND ((rt0.c3))))<<(((NULL)<=(rt0.c0)))), (((+ (411772771)))||(((rt0.c3)IS(rt0.c1)))), GROUP_CONCAT(((vt0.c0)*(rt0.c0))) OVER () FROM rt0, vt0 WHERE (((- (NULL)) IN ((('1362494818')+(0.7563451058323493)), LENGTH('')))) LIMIT 1659754252 OFFSET -2010942821; -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))), ((((rt0.c2)LIKE(rt0.c2))) BETWEEN (((rt0.c1) ISNULL)) AND (CAST(rt0.c1 AS BLOB))), (~ ((((rt0.c0, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c4, vt0.c0, rt0.c3)) AND ((rt0.c1, rt0.c1, rt0.c0))))) FROM vt0 WHERE (((((NULL)OR('0.018388549314235725')))OR('/u<lrze')) COLLATE NOCASE);SELECT ALL COUNT(*) OVER (), ((rt0.c0)LIKE(vt0.c0)) COLLATE RTRIM, rt0.c3 COLLATE NOCASE FROM rt0;SELECT DISTINCT ((((rt0.c0)<=(vt0.c0))) NOTNULL) FROM rt0;SELECT DISTINCT ((IFNULL(rt0.c0, rt0.c4))+(0.12345270258851881)) FROM vt0 WHERE (((('1721271614')) NOT BETWEEN (((((NULL))>((x'e5c4'))))) AND ((CAST(0Xfffffffff05d9d4b AS TEXT)))));SELECT DISTINCT 'Hv2', rt0.c0, ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 END)<(((rt0.c2)GLOB(rt0.c1)))) FROM rt0, vt0 LIMIT 2025310666; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c4))) AND (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) FROM vt0, rt0 WHERE (((((NULL)%(-2043011299))) BETWEEN ((NOT (0.9558895957147864))) AND ((('') ISNULL)))); -- 0ms;
SELECT ALL CAST(MIN(0.3249058449399318) AS INTEGER), json_quote(rt0.c4) COLLATE RTRIM, SUM(NULL), '-371718996', CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))) THEN (- (0.32698828808158786)) END FROM vt0 WHERE ((((((((-1583609871)) BETWEEN ((x'')) AND ((x'cdb7'))))OR(CASE NULL  WHEN '-1718207020' THEN -2.010942821E9 END)))OR((('F-')<>('㺽)q䎼>xﻈyE'))))) LIMIT 1134446299 OFFSET 305039475;SELECT rt0.c0 COLLATE BINARY COLLATE RTRIM COLLATE NOCASE FROM rt0, vt0 WHERE (((((((((((((SQLITE_SOURCE_ID())AND(((((x'')OR(NULL)))AND(0.3526279099912636)))))AND(NULL)))OR('⠾gm)' COLLATE NOCASE)))AND(HEX(DISTINCT '꾫&'))))OR((((('I#')OR(0Xfffffffffc832fc1)))OR(0.23820876442081518)))))OR(LIKELY(DISTINCT '0.37778509074834343')))); -- 0ms;
SELECT ALL ((((rt0.c3)<<(rt0.c3)))-(((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))OR(vt0.c0)))) FROM rt0;SELECT CHAR((((vt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))), x'18d6', (~ (rt0.c0))), TOTAL((((vt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((')f')))) OVER (), ((((((((CAST(rt0.c3 AS BLOB))OR(rt0.c3 COLLATE RTRIM)))AND((~ (rt0.c2)))))AND(CAST(vt0.c0 AS INTEGER))))AND(GROUP_CONCAT(rt0.c4))) FROM rt0;SELECT ALL 'k+', rt0.c4, (((('1330336144')AND(((-1902399707) NOT NULL))))AND(((rt0.c1)IS NOT(rt0.c2)))) FROM rt0, vt0 WHERE (CASE WHEN 'F(\r' THEN 0.16476038078229738 WHEN 1795870301 THEN '2033115474' WHEN 0xffffffff96b622ad THEN '\r}' END COLLATE RTRIM COLLATE RTRIM); -- 1ms;
SELECT DISTINCT (((x'')) NOT BETWEEN ((((rt0.c2)<(rt0.c4)))) AND ((((vt0.c0)>=(rt0.c0))))) FROM rt0, vt0 WHERE ((((~ (NULL)))IS(NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE WHEN CAST(rt0.c3 AS INTEGER) THEN CASE vt0.c0  WHEN rt0.c1 THEN -621637200 ELSE 0.654686893200965 END ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c4)) END FROM rt0, vt0 WHERE (((CAST(-1334567220 AS REAL))<=(0.6804025779294863 COLLATE BINARY))) LIMIT -404861692 OFFSET 1631415124; -- 0ms;
SELECT CAST(CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c3 THEN 0X40bf5a68 WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c2 END AS NUMERIC), (+ (-1401315951)), ((((rt0.c2) IS FALSE))>(((rt0.c0) IS FALSE))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((CAST(-404861692 AS INTEGER)) BETWEEN (AVG(rt0.c0)) AND (vt0.c0)) FROM rt0;SELECT rt0.c2, (((vt0.c0 COLLATE NOCASE))>=((((rt0.c1) IS FALSE)))), (- (GROUP_CONCAT(rt0.c0))) FROM rt0, vt0 WHERE ((((~ (0.8305860956725837)))<(((NULL)AND(x''))))) UNION ALL SELECT ALL ((rt0.c2) BETWEEN ((((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c4)))) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))))), (x'' IN (rt0.c1, '-1437556254', rt0.c2)) COLLATE BINARY, AVG(3.05039475E8) FROM vt0 WHERE ((((0.042087450404658666))>((240588330))) COLLATE NOCASE);SELECT DISTINCT CASE WHEN ((((rt0.c3)OR(rt0.c2)))AND(vt0.c0)) THEN COUNT(*) END, ROW_NUMBER() OVER (), (((((rt0.c1))>((vt0.c0)))) IS FALSE) FROM rt0 WHERE (((((NULL) BETWEEN ('') AND (NULL)))<=(((((((((((((-1145951261)AND(NULL)))OR('-1995913196')))OR(0.6412491337758784)))OR('FALSE')))AND(-1.225552317E9)))AND('⠾gm)')))));SELECT (- ((('') NOT NULL))) FROM vt0 NOT INDEXED ORDER BY ((((NULL) IS TRUE))LIKE(((rt0.c3) IS FALSE)));SELECT CAST(((rt0.c2) NOT BETWEEN (rt0.c4) AND (vt0.c0)) AS NUMERIC) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE)!=((rt0.c3 IN ()))) FROM rt0, vt0 WHERE (UPPER(0.1870371805932971)); -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS NUMERIC), (+ (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 END)), vt0.c0 COLLATE BINARY FROM rt0;SELECT DISTINCT CAST(rt0.c2 AS TEXT), CAST(((rt0.c3)>(rt0.c2)) AS NUMERIC), (+ (((rt0.c4)<>(vt0.c0)))) FROM rt0, vt0 WHERE (((x'') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (rt0.c0) AND (0.08028814092222847)))/(1.209247856E9 COLLATE BINARY)) FROM rt0 WHERE ((((x'' IN ())) NOT BETWEEN (((0.29779164076556375) BETWEEN (0x4bdb9140) AND (''))) AND ('0.0' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT COALESCE(((rt0.c4)IS(rt0.c3)), ((((vt0.c0)OR(0.06458829488689832)))OR(vt0.c0)), ((((((((rt0.c4)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c2)), CAST(rt0.c0 AS REAL)) FROM vt0 WHERE ((- ('-1309535557')) COLLATE RTRIM);SELECT ALL ((((((((((vt0.c0)OR(rt0.c3)))OR(vt0.c0)))AND(vt0.c0)))OR(rt0.c1)))+((+ (vt0.c0)))) FROM vt0, rt0 GROUP BY (((rt0.c2)OR(3.05039475E8)) IN ()), rt0.c3, (((((((((- (rt0.c2)))AND(((((NULL)OR(-2037545823)))AND(vt0.c0)))))AND(((((((((rt0.c4)OR(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))OR(vt0.c0)))))OR(((((vt0.c0)OR(rt0.c1)))AND(rt0.c3)))))AND(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4)))); -- 0ms;
SELECT DISTINCT TOTAL(((((vt0.c0)OR(rt0.c4)))OR(rt0.c0))) FROM vt0, rt0 WHERE (ABS(DISTINCT ((x'73a6')IS(')b H5椁껴')))); -- 0ms;
SELECT DISTINCT ((((((((((((((((vt0.c0)OR(rt0.c4)))AND(rt0.c0)))AND(NULL)))AND(vt0.c0)))AND(rt0.c1)))OR('39')))AND(((rt0.c3) IS FALSE))))AND(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (- (MAX(rt0.c3))) FROM rt0, vt0; -- 0ms;
SELECT ((+ (rt0.c2)) IN (((rt0.c1)<=(rt0.c1)), COUNT(rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL UNLIKELY(DISTINCT ((((((((rt0.c2)OR(rt0.c1)))AND('h蔾E4镖X''3_')))OR(vt0.c0)))OR(rt0.c1))) FROM vt0;SELECT DISTINCT CAST(((rt0.c4)<<(rt0.c4)) AS NUMERIC), ((((NULLIF(rt0.c0, rt0.c0))AND((- (rt0.c4)))))AND(rt0.c2)), ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END)<=(x'' COLLATE NOCASE)) FROM rt0 WHERE (CASE WHEN 0.6512548359666774 THEN 1296017694 ELSE x'8e31' END COLLATE BINARY) LIMIT -368408979; -- 0ms;
SELECT DISTINCT SUM((NOT (rt0.c1))) OVER ( ORDER BY ((vt0.c0) IS TRUE), ''), CASE x'8edd'  WHEN (- (rt0.c0)) THEN CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN 0xffffffffb7ba586c WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c1 END ELSE ((rt0.c4)OR(rt0.c3)) END, ((((UNLIKELY(rt0.c3))AND(((rt0.c4) IS FALSE))))AND(vt0.c0)) FROM vt0;SELECT DISTINCT ((((vt0.c0)OR(((rt0.c0) BETWEEN (rt0.c2) AND (x'10aa')))))OR(((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))) FROM vt0;SELECT DISTINCT (NOT (CAST(vt0.c0 AS INTEGER))) FROM rt0 ORDER BY CASE (+ (rt0.c4))  WHEN (((rt0.c0)) NOT BETWEEN ((x'')) AND (('-312196994'))) THEN rt0.c4 END DESC;SELECT DISTINCT (~ (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c1 END)) FROM vt0, rt0 WHERE (CAST(0Xfffffffff7ff5b9e AS INTEGER)); -- 0ms;
SELECT ((MIN(rt0.c0)) BETWEEN (((rt0.c1)>>(rt0.c2))) AND ((rt0.c1 IN (vt0.c0)))) FROM vt0, rt0; -- 1ms;
SELECT DISTINCT ('a賶rOZ' IN ()), ((TOTAL(rt0.c4)) IS TRUE), ((((vt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ()) FROM vt0 WHERE (((('2x' IN ('490743581', 0.365501405599334))) BETWEEN (((((((((NULL)OR(x'')))OR(NULL)))AND('513785238')))OR(0.5058221494287537))) AND ((((x'', '', '', 0.05830935063303744, 0.7603682643515529))<=(('-1694321278', x'', 0.3511355126466923, x'd763', '1209247856'))))));SELECT MIN(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN -2026253999 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c2 END), ((((vt0.c0) IS FALSE))AND((rt0.c0 IN ()))), rt0.c2, CUME_DIST() OVER (), (((((((((((rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, 0.6457389727749864, vt0.c0)) AND ((rt0.c1, rt0.c1, '	*<qk^A'))))AND(CAST(NULL AS NUMERIC))))OR((+ (rt0.c3)))))OR(rt0.c4 COLLATE RTRIM)))AND(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))) FROM rt0, vt0 LIMIT 307004582 OFFSET 1161358702; -- 0ms;
SELECT COUNT(CAST(rt0.c1 AS NUMERIC)) FROM rt0 WHERE ((NOT (0xffffffff81630aaf)) COLLATE BINARY); -- 0ms;
SELECT ((CAST(rt0.c1 AS NUMERIC)) ISNULL) FROM vt0, rt0 WHERE (CASE CAST('' AS NUMERIC)  WHEN (((NULL, '1e500', '0.06214205782884896')) BETWEEN ((NULL, 0.40586615123272907, NULL)) AND ((NULL, 'D9', '3h%''aL<\*'))) THEN 0Xffffffff86a0a521 END); -- 0ms;
SELECT ALL (((rt0.c3 IN ()))<(((0.7606080438878492)-(rt0.c3)))), ((CAST(rt0.c1 AS INTEGER)) ISNULL), (~ (MAX(rt0.c4))) FROM vt0, rt0 WHERE (((((('-1326729643') ISNULL)))<((LIKELY(''))))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt0 LIMIT -1491271523;SELECT DISTINCT (((rt0.c3)) BETWEEN ((x'')) AND ((rt0.c0))) COLLATE BINARY FROM vt0 WHERE ((- (CASE NULL  WHEN '60812373' THEN 0.5339107472519486 END))) ORDER BY NULL;SELECT DISTINCT NULL FROM rt0, vt0; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE ((((~ (')(m]MH}{W')))||(0.1796839650494586 COLLATE BINARY))) GROUP BY (((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c3 COLLATE NOCASE, ((rt0.c1)AND(rt0.c4)), CASE WHEN vt0.c0 THEN rt0.c0 END, (+ (rt0.c4)), LIKELIHOOD(rt0.c4, 0.5924781711291369))) AND (((~ (rt0.c0)), STRFTIME(rt0.c2, rt0.c0, rt0.c3), TRIM(rt0.c2, rt0.c3), CASE vt0.c0  WHEN NULL THEN rt0.c4 END, NULL))), CASE WHEN CAST(rt0.c0 AS INTEGER) THEN 0.1281534375296639 END, CAST(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c1)))OR(NULL)))OR(rt0.c2)) AS TEXT) HAVING ((((((((LIKELIHOOD(DISTINCT rt0.c2, 0.9513220746566877))OR(rt0.c3 COLLATE NOCASE)))AND((rt0.c3 IN ()))))AND(CAST(vt0.c0 AS NUMERIC))))OR(CAST(rt0.c1 AS TEXT)));SELECT DISTINCT (CASE WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END IN ()) FROM vt0, rt0; -- 0ms;
SELECT ((((rt0.c4) IS TRUE))>=(((rt0.c2)AND(rt0.c0)))) FROM rt0, vt0 WHERE (((CASE WHEN NULL THEN x'893e' ELSE '' END)*((+ (NULL))))); -- 0ms;
SELECT DISTINCT ((((((((CAST(rt0.c4 AS BLOB))AND(TOTAL(rt0.c2))))OR(TRIM(rt0.c3))))AND(NULL)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))), (+ ((((NULL))<=((rt0.c4))))), ((rt0.c3 COLLATE NOCASE) ISNULL) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt0, rt0; -- 0ms;
SELECT ALL AVG(json(NULL) COLLATE BINARY) OVER (), ((LOWER(DISTINCT vt0.c0)) NOT NULL), rt0.c4 FROM rt0, vt0 WHERE (((CASE WHEN x'' THEN -1.365156968E9 WHEN '-792401841' THEN 0.5793987631922634 WHEN x'4cff' THEN NULL ELSE NULL END)LIKE(NULL COLLATE BINARY))) GROUP BY (((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) IN ()); -- 0ms;
SELECT (- (LIKELIHOOD(DISTINCT 0.05830935063303744, 0.5092822577061827))) FROM vt0, rt0; -- 0ms;
SELECT ALL (((rt0.c1)LIKE(rt0.c1)) IN ()) FROM rt0 WHERE (((((((-1.443049129E9)OR(NULL)))AND(418779700)))>>((('')LIKE(0.6099966082371545))))) ORDER BY TRIM(rt0.c4), ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c2)/('vҬ*}C'))) AND (((x'7fa8')/(rt0.c3)))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2))  WHEN (- (rt0.c1)) THEN ((rt0.c3)AND(rt0.c4)) END FROM vt0, rt0; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 LIMIT 922137019; -- 0ms;
SELECT DISTINCT CAST(ABS(DISTINCT rt0.c3) AS REAL), CAST((rt0.c0 IN ()) AS BLOB), COUNT('-1877318078') FROM vt0, rt0 WHERE (((((('-1466170998' IN ()))OR((('') ISNULL))))AND(NULL))) ORDER BY x'' DESC  NULLS FIRST; -- 0ms;
SELECT ALL (((~ (rt0.c1)))!=(((rt0.c0) IS FALSE))) FROM vt0;SELECT ALL ((MIN(rt0.c0)) ISNULL), CASE WHEN ((rt0.c3) BETWEEN (vt0.c0) AND (rt0.c1)) THEN ((vt0.c0)GLOB(rt0.c2)) ELSE CAST(vt0.c0 AS NUMERIC) END, ((CAST(NULL AS REAL)) NOT BETWEEN (NULL) AND ('' COLLATE RTRIM)) FROM rt0, vt0 WHERE (CASE (~ (NULL))  WHEN (x'' IN (0.3524073714787037, '-1928014637')) THEN ((NULL) IS FALSE) END); -- 0ms;
SELECT DISTINCT ((((rt0.c4)/(rt0.c2))) IS TRUE) FROM rt0 WHERE ((NOT ((('0.5301151348479967')IS(0x75b34bc1))))); -- 0ms;
SELECT ((((1.903535425E9)OR(198365355)))OR(x'a93b3c44')) FROM rt0, vt0 WHERE (CASE WHEN '' THEN ((((((((0.09262138276176846)OR(0.20301167631206474)))AND('O*}0')))AND('1417065584')))OR(NULL)) END) ORDER BY CAST(((vt0.c0) NOTNULL) AS NUMERIC) DESC; -- 1ms;
SELECT CASE WHEN ((vt0.c0)>(rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c4 END END, CASE (NOT (rt0.c3))  WHEN ((rt0.c0)/(rt0.c1)) THEN ((((rt0.c1)OR(NULL)))OR('')) END, ((rt0.c1 COLLATE NOCASE) NOT NULL), ((rt0.c1) ISNULL) COLLATE RTRIM, (+ (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt0 WHERE (CAST(TRIM(NULL) AS BLOB));SELECT ALL rt0.c4 FROM rt0, vt0 GROUP BY (((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1))))<((CASE rt0.c2  WHEN 0.029239735932059197 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN 1.542595589E9 END))) HAVING (NOT (x'')); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)/(rt0.c0)))AND(rt0.c0 COLLATE NOCASE)))AND('')) FROM vt0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN (rt0.c4))) IS TRUE), ((GROUP_CONCAT(rt0.c1)) NOT NULL), NTILE('915311413') OVER () FROM rt0, vt0 WHERE ('1229424389'); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((((rt0.c0)LIKE(rt0.c0)), ((((x'')AND(rt0.c0)))AND(rt0.c4)), x'79a2')) AND ((((rt0.c1) BETWEEN (vt0.c0) AND (rt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 END, ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1))))) FROM vt0 WHERE (((0.3831601999223998) NOT NULL) COLLATE BINARY);SELECT DISTINCT AVG(CAST(vt0.c0 AS TEXT)) FROM rt0 WHERE (CAST('0.05377335084114654' AS INTEGER)) GROUP BY (~ (((rt0.c3)=(rt0.c2)))), ((vt0.c0)||((~ (vt0.c0)))), LOWER(0.02292059150142356) HAVING CAST(((rt0.c0)AND(rt0.c2)) AS REAL);SELECT (((((rt0.c0, rt0.c3, rt0.c4))<=((rt0.c4, rt0.c1, rt0.c4))))!=(((rt0.c1)>>(rt0.c0)))) FROM rt0, vt0 WHERE (CASE WHEN (+ (0.44141620400669446)) THEN -371718996 ELSE 341425979 COLLATE NOCASE END) LIMIT -1354961310 OFFSET 1663762946; -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0, rt0; -- 0ms;
SELECT (((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) IN (rt0.c2 COLLATE NOCASE, MAX(rt0.c1))), CAST(rt0.c1 COLLATE RTRIM AS NUMERIC), (+ (((vt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (rt0.c1)) COLLATE RTRIM FROM vt0, rt0 WHERE (((PRINTF('1543375731'))+(((0Xaef5aea) ISNULL)))); -- 0ms;
SELECT DISTINCT rt0.c3 COLLATE BINARY, ((((((((AVG(rt0.c0))OR(CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c1 END)))OR(((vt0.c0)-(rt0.c2)))))OR((+ (rt0.c3)))))OR(((rt0.c0) IS FALSE))), ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0))) NOT NULL) FROM rt0, vt0 WHERE (CASE ((NULL) NOT BETWEEN (x'8e0b3615') AND ('m1'))  WHEN (((0.8198064189266626, '517867870', '1j⩗', NULL, 0Xffffffffd07fce9c)) NOT BETWEEN ((-485361930, NULL, '', '-1998292788', '1')) AND ((0X1387c8a4, x'f090', x'', '-722199266', ''))) THEN (((''))==((x''))) WHEN NULL THEN -1.145951261E9 COLLATE NOCASE WHEN (((NULL)) BETWEEN ((x'')) AND ((x''))) THEN ((((-758111111)OR('_jcZ|u')))OR('-1940791943')) WHEN JULIANDAY('-1431704509', 0.038143276914726854, -1606019279, 0.4198463311016982, x'07c5') THEN CAST('/u<lrze' AS INTEGER) WHEN (NULL IN ()) THEN ((('[7j')) NOT BETWEEN (('-728868879')) AND (('-506263270'))) ELSE '-1292070244' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT (- (rt0.c1)) FROM vt0;SELECT CASE WHEN ((rt0.c1)AND(rt0.c2)) THEN NULL WHEN ((0X4813a870)+(rt0.c4)) THEN x'' WHEN rt0.c3 COLLATE NOCASE THEN x'183c27f7' ELSE CASE WHEN rt0.c1 THEN rt0.c3 END END FROM rt0 WHERE (CASE WHEN '-1038812764' THEN TRIM(0.3303177246936685) ELSE ((((((((0.19856856880050877)OR(-800797849)))AND('124509453')))OR(x'')))AND(x'')) END); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) FROM vt0;SELECT DISTINCT rt0.c4 FROM rt0, vt0; -- 0ms;
SELECT (((((((('0.7187126557361485')OR(-278864318)))OR(((rt0.c2)LIKE(rt0.c0)))))AND(x'e6bd46a8')))OR(((rt0.c3) IS FALSE))), ((CAST(rt0.c3 AS TEXT))IS NOT((+ (vt0.c0)))), (NOT ((~ (vt0.c0)))), SUM(CASE WHEN rt0.c3 THEN -1.71820702E9 END) OVER (), ((((rt0.c4)OR(((rt0.c2)<<(rt0.c0)))))AND(((rt0.c2)&(rt0.c1)))) FROM vt0, rt0 WHERE (TRIM(DISTINCT (('') IS FALSE), ((NULL) NOT NULL))); -- 1ms;
SELECT ALL (((TYPEOF(DISTINCT rt0.c1)))>=((CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c1 END))), rt0.c3, SQLITE_COMPILEOPTION_USED(rt0.c4) FROM rt0, vt0; -- 0ms;
SELECT ALL vt0.c0, (((((rt0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) NOT BETWEEN ((((rt0.c3))>((vt0.c0)))) AND (((x'') IS TRUE))), vt0.c0 FROM rt0;SELECT ALL 1.542595589E9 FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) FROM rt0, vt0 WHERE ((- (((NULL)==(NULL))))); -- 0ms;
SELECT STRFTIME(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)), ((vt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN 368720170 THEN rt0.c1 END) FROM rt0;SELECT DISTINCT (DATE(rt0.c3, rt0.c0, rt0.c1) IN ()) FROM vt0, rt0 WHERE (CAST(CASE WHEN x'3902' THEN 0X1ede095e ELSE '' END AS BLOB)); -- 1ms;
SELECT (((((vt0.c0))>((rt0.c1)))) BETWEEN ((('0.6096401468142569') NOT BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c0) IS TRUE))) FROM vt0 ORDER BY ((json_array_length(0.04948509198818696, rt0.c4))|(((vt0.c0)+(vt0.c0)))) DESC, '	*' ASC;SELECT ALL HEX((~ (rt0.c0))), (~ (rt0.c0 COLLATE RTRIM)), ROW_NUMBER() OVER () FROM vt0 CROSS JOIN rt0 ON CASE WHEN (+ (rt0.c3)) THEN ((vt0.c0)>(0.18547099517958032)) WHEN ((rt0.c4) NOT NULL) THEN ((rt0.c3)*(vt0.c0)) WHEN (((rt0.c2))>=((rt0.c0))) THEN vt0.c0 COLLATE RTRIM ELSE rt0.c3 END WHERE (((0.5811578337489383) NOT BETWEEN (x'') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL (((- (vt0.c0)))IS(((rt0.c1) IS TRUE))) FROM rt0, vt0 WHERE ((((((NULL))<(('1428358373'))))&(NULL))); -- 0ms;
SELECT ((vt0.c0)=('844614338')) COLLATE RTRIM, HEX((((rt0.c0, rt0.c0, rt0.c4, rt0.c3, rt0.c2))<((rt0.c1, x'', 0.6205576438014587, rt0.c1, rt0.c1)))), ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))AND(((x'64c7')-(rt0.c4)))))OR(((vt0.c0) BETWEEN (0.520237483464563) AND (vt0.c0)))) FROM vt0 WHERE (((((('G)'))<>((NULL)))) NOTNULL));SELECT DISTINCT CAST(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN vt0.c0 WHEN 0.31325633046030643 THEN rt0.c3 END AS TEXT) FROM vt0 WHERE (((((((x'')OR(0.27435476823282745)))AND(x'')))!=('982377908')));SELECT DISTINCT MAX((+ (rt0.c0)), COUNT(rt0.c3), ((((rt0.c1)OR(rt0.c3)))OR(rt0.c1)), (((vt0.c0))<=((rt0.c2)))) FROM rt0 WHERE (((x'') BETWEEN (-1729234115) AND (0.4245263336405646)) COLLATE RTRIM);SELECT ALL 0.9290218038902022 FROM rt0, vt0 ORDER BY ((rt0.c4)=((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((vt0.c0))))), (- ('1065135506')) ASC, ((((((((((vt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(x'940d')))AND(vt0.c0))) NOT BETWEEN (((x'')IS NOT(rt0.c3))) AND (((rt0.c2)/(NULL))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((vt0.c0)OR(rt0.c2)))) AND ((((vt0.c0)IS(rt0.c4))))), (((rt0.c4)) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((json_array_length(rt0.c2, NULL)))), highlight(COALESCE(DISTINCT rt0.c1, '莏DYuS '), NULL, (((rt0.c0, rt0.c0, rt0.c4))>((rt0.c1, rt0.c2, rt0.c0))), ((rt0.c0)IS NOT(rt0.c2))), ((CASE vt0.c0  WHEN rt0.c4 THEN x'' WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 ELSE -1145951261 END) NOT NULL), NULL FROM rt0, vt0;SELECT CAST(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)) AS REAL) FROM vt0 WHERE (CAST('9223372036854775807' AS TEXT)) LIMIT -351452711;SELECT DISTINCT LAG(CAST(((vt0.c0) NOTNULL) AS NUMERIC), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), 0X6c409822) OVER ( GROUPS  CURRENT ROW) FROM vt0; -- 0ms;
SELECT DISTINCT CHAR((((vt0.c0))!=((rt0.c3)))) FROM vt0, rt0; -- 4ms;
SELECT ((((rt0.c0)>>(rt0.c0)))>=(CAST(rt0.c4 AS BLOB))), rt0.c3, (1.209247856E9 IN ()), (~ (rt0.c1)), (((rt0.c3)) BETWEEN ((IFNULL(rt0.c0, vt0.c0))) AND (((((rt0.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1)))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))IS NOT(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0, vt0 WHERE ((- (((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT '[fSQ)]g' FROM rt0, vt0 WHERE (('XC' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) ISNULL) THEN rt0.c0 COLLATE BINARY END, COUNT(*) OVER (), COUNT(*) FROM rt0, vt0 WHERE ((~ ((x'' IN ())))) ORDER BY ((vt0.c0)|((rt0.c1 IN ()))) ASC  NULLS LAST; -- 0ms;
SELECT ALL HEX(rt0.c2 COLLATE NOCASE), ((((vt0.c0) NOT NULL)) NOT BETWEEN ((((rt0.c4))>((rt0.c3)))) AND (((rt0.c4)%(rt0.c3)))), (((NULL, ((rt0.c1)<(rt0.c2)), ((rt0.c2) IS FALSE)))<=(((rt0.c4 IN ()), ((vt0.c0) NOT BETWEEN ('-1687029405') AND (rt0.c3)), (+ (rt0.c3))))) FROM rt0, vt0; -- 0ms;
SELECT CAST(UNLIKELY(DISTINCT NULL) AS REAL) FROM vt0; -- 0ms;
SELECT ALL (((x'1af7')-(rt0.c1)) IN ()) FROM rt0, vt0 WHERE ((~ (('	g{{age' IN ())))); -- 0ms;
SELECT DISTINCT AVG((rt0.c0 IN ())) OVER (), GROUP_CONCAT((((vt0.c0))!=((vt0.c0)))), LAST_VALUE(CAST(((rt0.c2)||(rt0.c0)) AS INTEGER)) OVER ( ROWS (((rt0.c4)) BETWEEN (('9i*P*&+렪*')) AND ((rt0.c3 COLLATE NOCASE))) PRECEDING), COUNT(*) FILTER(WHERE ((((((rt0.c3)OR(0.6082746469197657)))AND(vt0.c0)))-(((rt0.c3) IS FALSE)))) OVER (), CASE ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3))  WHEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c2 THEN '' END THEN ((rt0.c4)>(rt0.c0)) ELSE LOWER(rt0.c1) END FROM rt0, vt0 WHERE ((- (CASE WHEN NULL THEN 'dy29f|' WHEN 0.32735542525143113 THEN NULL WHEN 0.20019495262430964 THEN 0x7f9d546 ELSE 0.42104982297826254 END)));SELECT DISTINCT ((CAST(rt0.c3 AS TEXT)) NOTNULL) FROM rt0 WHERE (((((-1277052886) NOTNULL))>=((('Lr,N19cmd')!=(0Xffffffffe4cce5e7))))); -- 0ms;
SELECT DISTINCT '', CAST(rt0.c0 COLLATE RTRIM AS NUMERIC), CASE rt0.c4 COLLATE BINARY  WHEN rt0.c3 COLLATE NOCASE THEN ((vt0.c0)>=(rt0.c1)) ELSE AVG(rt0.c2) END FROM vt0, rt0 WHERE (LOWER(CASE ''  WHEN -1508006448 THEN x'' END)); -- 0ms;
SELECT DISTINCT ((((((rt0.c0) NOTNULL))OR(((rt0.c3)/(rt0.c3)))))OR((- (rt0.c3)))) FROM vt0 ORDER BY rt0.c3 ASC;SELECT DISTINCT RANK() OVER () FROM rt0, vt0 WHERE (((CASE 0Xfffffffff8598cff  WHEN NULL THEN NULL ELSE 0.834518227782834 END) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c4)LIKE(rt0.c4)) AS REAL), ((+ (rt0.c4)) IN ()), CAST(vt0.c0 AS REAL), ((CASE WHEN vt0.c0 THEN rt0.c3 ELSE '0.04051170818306293' END) IS TRUE), CAST(((vt0.c0) NOTNULL) AS NUMERIC) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN ((rt0.c3)==(rt0.c1)) THEN ((rt0.c2)<=(rt0.c0)) END FROM rt0, vt0; -- 0ms;
SELECT (0.1037213810441695 IN (CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 END)), '2036734311', HEX(0.31257865006744967) FROM rt0 WHERE ((((CAST('-' AS BLOB), CAST(x'48f7f873' AS INTEGER), ((((NULL)OR(x'')))OR(x'fefe')), (('-1485119975') NOT BETWEEN (0.06214205782884896) AND (NULL)), CASE x''  WHEN 0.8003591467985665 THEN NULL WHEN NULL THEN x'bbb1' WHEN x'' THEN x'8145' END))!=(('m#(u\F', CASE WHEN '-206892213' THEN 0.128465485150013 WHEN x'' THEN -1.225552317E9 WHEN 0.2644770004390836 THEN NULL END, ((x'')AND(0x79de3234)), (0xffffffff8a5cdcfd IN ()), ((x'fb7b')GLOB('-2026253999')))))); -- 0ms;
SELECT ALL ((((rt0.c4) IS FALSE))||(((vt0.c0)+(0.0361341832206733)))) FROM vt0, rt0; -- 0ms;
SELECT ALL ((CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((rt0.c0) ISNULL))) FROM vt0, rt0 WHERE (0.814532540319177); -- 0ms;
SELECT ALL ((ABS('-359276401')) IS FALSE) FROM rt0, vt0 WHERE ((((((NULL) NOT BETWEEN (x'a6d3') AND ('')), NULL, (NULL IN ('29882087'))))=(((- ('H8眽')), ((x'')<<(NULL)), ((0.7654561773622421)GLOB(NULL)))))) GROUP BY ((('餋R)d')) NOT BETWEEN ((vt0.c0)) AND (((rt0.c4 IN (rt0.c3))))), CASE WHEN (((vt0.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN ((rt0.c2) IS FALSE) WHEN rt0.c4 THEN (rt0.c2 IN (rt0.c3, rt0.c0)) WHEN ((((rt0.c2)AND(rt0.c0)))OR(vt0.c0)) THEN CAST(rt0.c3 AS NUMERIC) ELSE ((rt0.c0) IS FALSE) END, CASE WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c1) ISNULL) ELSE ((rt0.c2)+(rt0.c4)) END, ((((CAST(rt0.c2 AS NUMERIC))OR((~ (rt0.c0)))))OR(((rt0.c1)-(rt0.c1)))), NULL HAVING CASE WHEN CAST(rt0.c1 AS TEXT) THEN TRIM(DISTINCT rt0.c4, rt0.c1) ELSE ((rt0.c4) NOTNULL) END; -- 0ms;
SELECT ALL ((TRIM(vt0.c0))||(((rt0.c2)GLOB(vt0.c0)))) FROM rt0, vt0 NOT INDEXED ORDER BY ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))<>(UPPER(rt0.c2))) ASC  NULLS FIRST, -1677824992;SELECT DISTINCT (((+ (rt0.c3))) IS FALSE), NULL, (NOT ((124509453 IN ()))) FROM vt0 WHERE ((0.9560127806746562 COLLATE BINARY IN ('779378556')));SELECT AVG('0.4230951492171767') FROM rt0 GROUP BY CASE WHEN '-1656955081' THEN CASE WHEN '0.571983381467057' THEN rt0.c2 END ELSE DATETIME(rt0.c3, rt0.c2, rt0.c0) END; -- 0ms;
SELECT DISTINCT (+ (((rt0.c4)>=(rt0.c1)))) FROM rt0, vt0 WHERE ((('-833045154' COLLATE BINARY)<<(COALESCE(DISTINCT NULL, '-1277276780')))); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT vt0.c0) COLLATE NOCASE FROM rt0, vt0 WHERE (CAST(x'' AS REAL)); -- 1ms;
SELECT ALL GROUP_CONCAT(((((rt0.c0)OR(rt0.c4)))AND(rt0.c3))) FROM vt0, rt0; -- 0ms;
SELECT SUM(((rt0.c2)<=(rt0.c3))), ((vt0.c0 COLLATE NOCASE) BETWEEN (rt0.c2) AND (x'bf72')), COUNT(*), rt0.c2, CAST((('') NOT BETWEEN (rt0.c1) AND (rt0.c2)) AS BLOB) FROM vt0, rt0 GROUP BY ((~ (vt0.c0)) IN ()); -- 0ms;
SELECT DISTINCT (((((((rt0.c3)OR(rt0.c4)))AND(rt0.c0))))<((((rt0.c1) NOT NULL)))), 0.9239314885631204, ((((rt0.c0)<<(rt0.c2))) BETWEEN (((rt0.c4)<=(vt0.c0))) AND ((NOT (rt0.c4)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c1)) IS TRUE) FROM rt0 LEFT OUTER JOIN vt0 ON UNLIKELY(DISTINCT load_extension(rt0.c3, vt0.c0));SELECT ALL ((((vt0.c0)AND(rt0.c0)))LIKE(((vt0.c0) BETWEEN (rt0.c2) AND (vt0.c0)))) FROM rt0, vt0 WHERE (((((0.5620017361289328) NOT NULL))<(x''))) GROUP BY (((rt0.c4 IN ())) NOT BETWEEN ((x'9130' IN ())) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1)))), TIME((+ (NULL)), ((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3)), ((vt0.c0) BETWEEN (rt0.c4) AND (rt0.c0))), ((CAST(rt0.c1 AS INTEGER))!=(((((((((rt0.c1)OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c1)))); -- 1ms;
SELECT ALL AVG((+ (rt0.c1))) OVER (), AVG(((((rt0.c3)OR(rt0.c3)))OR(rt0.c2))), ((rt0.c3 COLLATE RTRIM) IS FALSE) FROM vt0, rt0 WHERE ((('2p?f%Uq(') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT (NULLIF(DISTINCT 0.505692486950501, rt0.c4) IN ()) FROM rt0, vt0 ORDER BY CASE rt0.c2  WHEN rt0.c3 THEN vt0.c0 ELSE rt0.c3 END COLLATE NOCASE COLLATE RTRIM DESC  NULLS LAST, CASE ((rt0.c4) ISNULL)  WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN rt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN '0.6107702110699885' THEN 0.23188127154201388 WHEN rt0.c1 THEN rt0.c0 END ELSE ((rt0.c0)>(rt0.c2)) END ASC; -- 1ms;
SELECT DISTINCT (+ (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 ELSE x'' END)), ((((rt0.c0)AND(rt0.c1))) IS TRUE), ((((rt0.c2) IS FALSE)) NOT BETWEEN (((((rt0.c3)AND(rt0.c4)))AND(rt0.c2))) AND (((rt0.c2)<(rt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((((x'0e25d33d'))!=((rt0.c4))))) FROM vt0 WHERE (CASE WHEN (~ (NULL)) THEN (('-1665112331') NOT BETWEEN (x'') AND (x'49b4')) END);SELECT ALL 0.892421013558112 FROM vt0, rt0; -- 0ms;
SELECT ALL LAST_VALUE(178858046) OVER ( ORDER BY (('1624980680')<<(((((rt0.c2)AND(rt0.c3)))AND(rt0.c0)))) ASC) FROM rt0, vt0 WHERE (CAST((+ (-1e500)) AS TEXT)); -- 0ms;
SELECT ALL CAST(((rt0.c3) BETWEEN (rt0.c4) AND (NULL)) AS REAL), ((((vt0.c0)==(rt0.c3)))>(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))), (((vt0.c0)) BETWEEN ((CASE rt0.c2  WHEN rt0.c2 THEN vt0.c0 END)) AND ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4))))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c1)>>(rt0.c4))) FROM rt0, vt0 WHERE (CAST(((x'')/(1.468094728E9)) AS INTEGER)); -- 1ms;
SELECT ALL (rt0.c1 IN ()) FROM rt0, vt0 WHERE ((((('1756719919')%('-1873464508')))<(((NULL) IS TRUE)))); -- 0ms;
SELECT COUNT(*) FROM rt0 LIMIT -1151274797 OFFSET -671308524; -- 0ms;
SELECT ALL rt0.c3, (((rt0.c1) IS TRUE) IN ()), (+ (((rt0.c3) NOTNULL))) FROM rt0; -- 0ms;
SELECT ALL CAST(((rt0.c2)-(rt0.c0)) AS REAL) FROM rt0, vt0; -- 0ms;
SELECT ((((0.9615331232354606)OR((rt0.c4 IN (rt0.c1)))))OR((rt0.c1 IN ()))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)/(rt0.c2)))/(COUNT(NULL))) FROM vt0 WHERE (((((x'b376')>>(0.012935379498297594)))IS(CASE WHEN 0x62aa9f7f THEN '-2053444367' END)));SELECT ALL ((((rt0.c4)GLOB(rt0.c4)))<=(rt0.c2)) FROM vt0, rt0 GROUP BY CAST((+ (vt0.c0)) AS NUMERIC), ((((((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN vt0.c0 THEN -2.75037931E8 WHEN vt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c4 END)OR(rt0.c3)))AND(((0.6131137375806405)>=(rt0.c3)))))AND(((rt0.c1)+(rt0.c4)))))OR(((rt0.c0)*(rt0.c3)))), rt0.c4, ((((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c1)))AND(TOTAL_CHANGES())))OR(CAST(rt0.c2 AS NUMERIC))), (((((((((('-200143123')OR(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))OR(vt0.c0)))IS NOT(rt0.c4)); -- 0ms;
SELECT ((((((((((rt0.c1) ISNULL))AND(((rt0.c1)IS NOT(rt0.c2)))))OR(rt0.c2)))OR(x'36d730f5')))OR(rt0.c4 COLLATE NOCASE)) FROM rt0 WHERE (((('-1425574356')) NOT BETWEEN ((CAST('0.5495387072680687' AS REAL))) AND ((SQLITE_COMPILEOPTION_GET(0X34ddee6))))) GROUP BY ((LIKELY(DISTINCT rt0.c2))IS NOT((rt0.c2 IN (rt0.c2)))) HAVING (((('1261735242') NOT BETWEEN (vt0.c0) AND (rt0.c0)))>>(((vt0.c0)*(rt0.c3))));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((((rt0.c2))<=((rt0.c0))))) AND ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c4))))), ((rt0.c3 IN ()) IN ()), AVG(((rt0.c0)==(rt0.c4))) FROM rt0, vt0 WHERE ((((((NULL, 0.1351303860383284, '!Q'))<=((-676388156, 0.835699072851041, 0xffffffff8ff2aa29))))||((((NULL)) BETWEEN ((0X76bdd0d)) AND (('-1830051681')))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN rt0.c2 COLLATE BINARY ELSE CAST(rt0.c4 AS INTEGER) END FROM vt0, rt0 WHERE ((((x'')) BETWEEN (((('#e') BETWEEN (x'') AND (x'')))) AND (((NOT (x'')))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((-1140350189)OR(CAST(rt0.c4 AS INTEGER))))AND(((rt0.c2) IS FALSE))))AND(((rt0.c4)==(rt0.c4)))))AND(rt0.c0 COLLATE RTRIM))) OVER () FROM rt0, vt0 WHERE (((((IFNULL('O㉀HZ8(', x'968d'))OR(((x'') NOT BETWEEN ('') AND (x'aac4')))))OR(LIKELIHOOD(x'', 0.31746951923202615)))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT rt0.c2, 0.5153723960762308))OR(rt0.c2)), (((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))=((NOT (vt0.c0)))), CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) THEN rt0.c1 WHEN ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c4)) THEN ((vt0.c0)-(vt0.c0)) WHEN (rt0.c1 IN (rt0.c4)) THEN JULIANDAY(rt0.c2, rt0.c0, rt0.c0, rt0.c1, vt0.c0) WHEN x'9f9a' THEN ((rt0.c4) ISNULL) WHEN ((((rt0.c4)OR(x'')))AND(vt0.c0)) THEN COUNT(*) END FROM vt0 WHERE ((- (x'')));SELECT DISTINCT (((rt0.c4 IN ()))<(((((((((rt0.c1)OR(rt0.c3)))AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c4)))), COUNT(*), (NOT (rt0.c1 COLLATE NOCASE)), NULL COLLATE RTRIM, ((CASE rt0.c3  WHEN rt0.c1 THEN vt0.c0 END) NOT BETWEEN (((rt0.c1)&(rt0.c4))) AND (((((((((((((vt0.c0)AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c3)))OR(vt0.c0)))OR(rt0.c3)))OR(vt0.c0)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT (((0X18e42910)) NOT BETWEEN ((AVG(rt0.c3))) AND ((UPPER(rt0.c4)))) FROM vt0 WHERE (((((0.6528318736446721)OR(x'9fd2')))OR(0x4b348d4a)) COLLATE BINARY COLLATE RTRIM) LIMIT -1441088573;SELECT DISTINCT CUME_DIST() OVER (), MAX(highlight(vt0.c0, rt0.c2, rt0.c4, rt0.c0)), CUME_DIST() OVER () FROM vt0, rt0 WHERE ((LAST_INSERT_ROWID() IN ())); -- 0ms;
SELECT DISTINCT ((((rt0.c4)GLOB(rt0.c4))) NOT NULL) FROM vt0, rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c4)<>(rt0.c1))) OVER ( ROWS ((CAST(0.0916005619754211 AS BLOB)) NOTNULL) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 WHERE (((CAST(x'' AS REAL)) IS FALSE)) GROUP BY CAST(((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)) AS TEXT);SELECT DISTINCT ((((rt0.c3)*(NULL)))OR(rt0.c0 COLLATE NOCASE)), (((- (rt0.c1))) NOT BETWEEN ((rt0.c1 IN (vt0.c0))) AND (((((((((vt0.c0)AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(vt0.c0)))), SUM(ABS(DISTINCT x'') COLLATE RTRIM), '-1390445781', (rt0.c0 IN (rt0.c4, rt0.c2)) COLLATE BINARY FROM vt0;SELECT ALL x'' FROM rt0, vt0 WHERE (((0.10027283974160339 IN ()) IN ())) ORDER BY CASE rt0.c1 COLLATE NOCASE  WHEN ((vt0.c0) IS TRUE) THEN CAST(rt0.c0 AS TEXT) ELSE ((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(vt0.c0)))AND(rt0.c0)) END DESC LIMIT -1363397390; -- 0ms;
SELECT ALL SUM((NOT (rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((((rt0.c2) NOTNULL))) AND ((rt0.c1))) FROM vt0, rt0 WHERE ((0.8767063466196546 IN ()) COLLATE NOCASE) LIMIT -1268931833; -- 1ms;
SELECT ((((rt0.c3) NOT BETWEEN ('''') AND (rt0.c3)))>>(((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c4)))), (((rt0.c4)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4)))) AND ((rt0.c4 COLLATE RTRIM))), CASE WHEN CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END THEN ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0)) END FROM rt0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER () FROM rt0; -- 0ms;
SELECT ((((((vt0.c0)OR(rt0.c2)))AND(rt0.c1)))LIKE(((rt0.c0) NOTNULL))) FROM rt0 WHERE ((((((('[I')>('-1485119975')))AND('-260679739')))OR(((x'') BETWEEN (NULL) AND (x'')))));SELECT ALL json_type(AVG(vt0.c0)) FROM vt0, rt0 WHERE (((CASE 0.34777612577089256  WHEN 'u5''cM' THEN 0.7505441414111086 END)AND(CAST(0.8463647648141909 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN (('206117086')) AND ((rt0.c4))) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(CASE rt0.c3  WHEN rt0.c0 THEN NULL END) FROM rt0; -- 0ms;
SELECT DISTINCT DATETIME((- (vt0.c0)), rt0.c1 COLLATE BINARY, ((vt0.c0)<>(rt0.c1)), LOWER(rt0.c1), COUNT(*)), ((COALESCE(rt0.c2, rt0.c3, rt0.c0, rt0.c2))&(rt0.c4 COLLATE RTRIM)), LAG(0.9715829170671233, 0.02139670882026179, (- (((vt0.c0) NOTNULL)))) OVER () FROM vt0 WHERE (CASE (('3h%''aL<\*')>('178858046'))  WHEN (~ ('⠾gm)')) THEN (x'5eb7' IN ()) END);SELECT ALL (((NULL, rt0.c0, rt0.c0)) BETWEEN ((CAST(rt0.c4 AS BLOB), ((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c1)), ((rt0.c0) IS FALSE))) AND ((rt0.c1 COLLATE RTRIM, ((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c3))))) FROM rt0, vt0 GROUP BY ((((((((rt0.c0 COLLATE NOCASE)OR(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c2)))))OR(((rt0.c2)%(rt0.c0)))))AND((NOT (rt0.c0)))))OR(CAST(0.8157454148649318 AS TEXT))); -- 0ms;
SELECT COUNT(*) FILTER(WHERE ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2))) ISNULL)) OVER ( ORDER BY (((((('-345193672')AND(rt0.c4)))AND(rt0.c2)))GLOB(CASE WHEN rt0.c4 THEN rt0.c1 WHEN x'' THEN vt0.c0 WHEN rt0.c2 THEN rt0.c4 END)) DESC), (~ (rt0.c2)) COLLATE RTRIM, ((AVG(rt0.c4)) BETWEEN (vt0.c0) AND ((+ (rt0.c4)))) FROM rt0, vt0 WHERE (((rtreenode('', 0.19284608853389218))<((('9-(+cb+*')>('1417065584'))))); -- 1ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (rt0.c4) AND (rt0.c0)) FROM rt0, vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(((rt0.c3)GLOB(rt0.c2)))), CASE WHEN ABS(DISTINCT '') THEN CAST('935441310' AS INTEGER) ELSE ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, TIME(rt0.c2, rt0.c1, rt0.c4, rt0.c0, vt0.c0) COLLATE RTRIM, (((rt0.c3, vt0.c0, rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN 0.16784120986367979 END, rt0.c4 COLLATE BINARY, ((vt0.c0)%(rt0.c0)))) AND ((((rt0.c4)IS(x'669c5de4')), ((rt0.c2)||(NULL)), CAST(rt0.c3 AS BLOB)))), (((rt0.c3)) BETWEEN ((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))) AND ((COUNT(rt0.c0)))) FROM vt0 WHERE (CASE ((0.13515619638901433) NOT BETWEEN ('') AND (x''))  WHEN ('915311413' IN ()) THEN CAST(NULL AS BLOB) ELSE (~ ('D\w\nx鴡')) END) ORDER BY '-1998292788' ASC  NULLS LAST;SELECT DISTINCT MAX(0.14253737913769193) FROM rt0; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM vt0, rt0; -- 0ms;
SELECT ALL ((COUNT(NULL)) IS FALSE) FROM rt0 WHERE ((((NOT (0.4217301574254517)))LIKE((('%2u|') NOT NULL)))); -- 0ms;
SELECT DISTINCT (NOT (MAX(vt0.c0))) FROM rt0, vt0 WHERE (((((CASE WHEN -1.71820702E9 THEN x'' ELSE '0.870458943957646' END)AND('' COLLATE NOCASE)))OR((0.20451687458056744 IN ())))); -- 0ms;
SELECT DISTINCT rt0.c3, '0.1870371805932971', CAST(CAST(rt0.c2 AS INTEGER) AS NUMERIC) FROM vt0;SELECT DISTINCT MAX(CAST(vt0.c0 AS TEXT)) FROM rt0, vt0 WHERE (((('uﶋ' IN (x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c3 AS REAL))), MIN(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END), TYPEOF(DISTINCT (rt0.c3 IN ())) FROM rt0, vt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (NULL) AND (x'649a')) THEN CASE NULL  WHEN 0.7700691178709458 THEN NULL END ELSE (NOT (x'')) END); -- 0ms;
SELECT DISTINCT NULLIF(vt0.c0 COLLATE NOCASE, ((rt0.c0) BETWEEN (vt0.c0) AND (rt0.c2))), MIN((('') NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM), ((((rt0.c2) IS FALSE))*(MAX(rt0.c0))) FROM rt0 WHERE (LIKELY(-1.62031858E8 COLLATE NOCASE));SELECT ALL ((AVG(rt0.c2)) NOTNULL) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT -1.71820702E9 FROM rt0, vt0 WHERE (CASE ((0.22085134758520197) IS FALSE)  WHEN (NOT (NULL)) THEN CASE WHEN NULL THEN 'NH-P+{82' ELSE '-740324189' END END); -- 0ms;
SELECT ALL (- (((rt0.c4)LIKE(rt0.c1)))), ((((rt0.c2) ISNULL))<(json_insert(rt0.c4, rt0.c4, vt0.c0, rt0.c2, -1677824992, rt0.c3, rt0.c2))), rt0.c2 FROM vt0, rt0 ORDER BY (((((rt0.c3)>=(rt0.c3))))!=(((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt0.c0))))))  NULLS FIRST;SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)OR(rt0.c4)) THEN (((rt0.c3))=((rt0.c3))) WHEN COUNT(rt0.c1) THEN rt0.c2 WHEN (- (0.3129821257430977)) THEN (vt0.c0 IN ()) WHEN LIKELIHOOD(rt0.c3, 0.9829287494534418) THEN '\q' WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c4) NOTNULL) ELSE (+ (rt0.c0)) END, (((ABS(DISTINCT rt0.c3)))<=((x''))), (+ (((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))) FROM vt0, rt0 WHERE (CASE WHEN ((-1786694133)==(0xffffffffc2686e56)) THEN 'S_' WHEN ((NULL)>('-1895522189')) THEN ('vnF' IN (0.5043892750518026, 0X2b2659ed)) WHEN x'906f' THEN ((((((((0.7055240318129932)OR('922137019')))OR(0x76bdd0d)))OR(0.6528318736446721)))OR('-j')) ELSE (0.06214205782884896 IN ()) END); -- 1ms;
SELECT DISTINCT ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) IS TRUE), AVG(((rt0.c1)IS NOT(vt0.c0))) OVER (), (((+ (rt0.c2)))||(((((((((rt0.c1)OR(rt0.c4)))OR(vt0.c0)))OR(rt0.c3)))OR(rt0.c2)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)<<(rt0.c1)))<=(((rt0.c0)IS(vt0.c0)))) FROM vt0, rt0 WHERE (((((((((((x'')OR(0.12269309694480646)))AND(NULL)))OR('')))OR('ء,vF2')))|(((0Xfffffffff4120eed) BETWEEN (560986373) AND (x'8276'))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt0 WHERE (LIKELIHOOD((0.5041562387005643 IN (0.5626629055379013, '|*MK')), 0.7105775166673955)); -- 0ms;
SELECT DISTINCT (((NULL IN ()))-(rt0.c3)) FROM vt0 WHERE ((+ (((0.2036590731404775)AND(NULL))))) GROUP BY rt0.c4 HAVING (((+ (rt0.c1)))AND(CASE WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN vt0.c0 END)) LIMIT 1721271614 OFFSET 1157806344;SELECT DISTINCT ((((((rt0.c0)IS(rt0.c0)))OR((((rt0.c2))<((rt0.c2))))))OR((+ (x'')))), (((0.5153770887211809, rt0.c4, rt0.c1)) NOT BETWEEN (((rt0.c1 IN ()), AVG(vt0.c0), rt0.c1)) AND (((NOT (vt0.c0)), rt0.c3, (rt0.c0 IN (vt0.c0))))), CASE rt0.c3 COLLATE RTRIM  WHEN (NOT (rt0.c1)) THEN ((vt0.c0)<>(rt0.c3)) ELSE MAX(rt0.c3) END FROM vt0;SELECT ((((rt0.c1)==(rt0.c4)))OR(((rt0.c4) IS TRUE))) FROM rt0 WHERE (((((0.016275017938160774)*(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN vt0.c0 THEN rt0.c0 END) OVER (), MAX(((rt0.c2)<>(rt0.c0)) COLLATE BINARY), ROW_NUMBER() OVER () FROM vt0 ORDER BY CASE WHEN NULL COLLATE RTRIM THEN NULL ELSE (~ (rt0.c4)) END DESC, CASE (+ (rt0.c3))  WHEN (((rt0.c4))<>((rt0.c1))) THEN CAST('' AS NUMERIC) ELSE CAST(rt0.c2 AS NUMERIC) END ASC;SELECT DISTINCT (+ (((rt0.c2)<=(rt0.c3)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c3 THEN rt0.c2 END)OR(((vt0.c0)%(rt0.c1)))))AND(COUNT(*))), MAX((rt0.c2 IN ()), rt0.c3 COLLATE RTRIM), ((((((((((x'')<(rt0.c0)))AND((NOT (rt0.c1)))))AND(((rt0.c2) NOT NULL))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 END)))AND(COUNT('YSBO'))), (~ (((rt0.c4)&(rt0.c4)))), ((rt0.c0)%(CASE WHEN rt0.c1 THEN rt0.c4 ELSE vt0.c0 END)) FROM rt0 WHERE (((((CAST('-1105846890' AS INTEGER))OR(x'1aa6')))OR('唡5'))) GROUP BY ((((((((((((vt0.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY HAVING ((TIME(rt0.c1, rt0.c2, rt0.c4))||(((0.38176691820562814) IS TRUE)));SELECT ((rt0.c1)>>((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((rt0.c0, vt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c3, NULL))))) FROM vt0 WHERE (CASE NULLIF(NULL, NULL)  WHEN 'qJ?v|t}m' THEN (('j') ISNULL) WHEN json_extract(x'd6d5', x'26a4') THEN ((NULL) IS FALSE) WHEN CAST(NULL AS TEXT) THEN ((0.3589546652988168)>(-2.070919069E9)) END) ORDER BY (NOT (vt0.c0)) COLLATE RTRIM  NULLS LAST;SELECT (((((rt0.c1)<(rt0.c1)), ((x'') NOTNULL), (((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))))>(((NOT (vt0.c0)), (NOT (rt0.c1)), CAST(rt0.c4 AS BLOB)))), UNLIKELY(TOTAL(rt0.c1)), '}F/Dwyྊ0' FROM rt0 NOT INDEXED WHERE (((((x'') NOT BETWEEN (1.820576274E9) AND ('')))&((+ (x''))))) LIMIT -1505193501;SELECT DISTINCT rt0.c2 FROM vt0, rt0 WHERE (1943382970); -- 0ms;
SELECT x'' FROM rt0, vt0 GROUP BY COALESCE(0xfffffffff5cbd6cc, ((rt0.c2)<(rt0.c0))), ((rt0.c1)||((rt0.c2 IN ()))), (((rt0.c2 IN ())) BETWEEN (((rt0.c0) ISNULL)) AND (((((rt0.c3)OR(0Xffffffffd20ed5e0)))AND(vt0.c0)))), CAST(((rt0.c4) NOT NULL) AS INTEGER), CASE CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END  WHEN (vt0.c0 IN ()) THEN 0.7711385438958697 ELSE ((((((((vt0.c0)AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)) END; -- 1ms;
SELECT (((NOT (0.9586934414254237)))LIKE(((rt0.c3) NOT BETWEEN (rt0.c0) AND (NULL)))) FROM rt0 WHERE (((0.4792028239555982) NOT NULL) COLLATE BINARY); -- 0ms;
SELECT ALL ((NULL) NOT BETWEEN (rt0.c1) AND ((- (rt0.c2)))) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT 0.4893957631460605 FROM rt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT -1658910143 OFFSET 418779700; -- 0ms;
SELECT ALL ((rt0.c0)<<(((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))), ROW_NUMBER() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC) FROM vt0, rt0 WHERE (((((NULL) NOTNULL)) NOTNULL)) GROUP BY CHANGES(); -- 0ms;
SELECT rt0.c3 FROM vt0;SELECT DISTINCT LAG((((((((((((rt0.c1))=((rt0.c4))))OR(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))AND(((vt0.c0)>=(rt0.c1)))))OR(CAST(rt0.c1 AS NUMERIC))))OR(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END)), (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) IN ()), (NOT (CAST(rt0.c1 AS NUMERIC)))) OVER () FROM rt0, vt0 WHERE (((4.187797E8) NOT BETWEEN ('Cl#9?O') AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS TRUE))<>(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))), CUME_DIST() OVER (), rt0.c0 FROM rt0, vt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)<(vt0.c0))) BETWEEN (LIKELIHOOD(rt0.c4, 0.15049649828652545)) AND ((((rt0.c1))=((rt0.c0))))) FROM rt0;SELECT '0.835699072851041', AVG(((rt0.c3)==(rt0.c3))) OVER (), CASE '-1435919247'  WHEN ((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ABS(DISTINCT vt0.c0) WHEN ((rt0.c3)>(rt0.c4)) THEN COUNT(*) WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)) WHEN MIN(vt0.c0) THEN rt0.c3 COLLATE RTRIM WHEN ((rt0.c3) NOT NULL) THEN ((rt0.c4) IS FALSE) ELSE ((((rt0.c3)AND(rt0.c1)))OR('-200143123')) END FROM vt0, rt0; -- 0ms;
SELECT ALL ((rt0.c4)IS(((vt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))) FROM vt0 WHERE ((+ (((((x'')OR(NULL)))OR(0x4b983c2c))))) LIMIT -1913227974 OFFSET -1063157053;SELECT ALL GROUP_CONCAT(vt0.c0), LAG(CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, (vt0.c0 COLLATE BINARY IN (((vt0.c0) IS FALSE), ((vt0.c0)IS NOT(vt0.c0)))), (((vt0.c0 IN (vt0.c0, x'45e9')))-((~ (vt0.c0))))) OVER ( ORDER BY (((json_insert(vt0.c0, rt0.c2, rt0.c0)))>=((((rt0.c1)-(vt0.c0))))) DESC  NULLS FIRST), CAST((vt0.c0 IN (rt0.c2)) AS REAL) FROM vt0 WHERE ((((((x'')AND(x'6ca5ead0')))OR(0.09118394445813094)) IN ())) ORDER BY 0.022259777916558532 ASC  NULLS FIRST;SELECT DISTINCT (((((vt0.c0)LIKE(rt0.c4)), CASE vt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END, ((rt0.c2) IS FALSE)))==((((vt0.c0)<>(vt0.c0)), ((vt0.c0)IS NOT(rt0.c1)), ((((rt0.c0)AND(0.057258909587968865)))AND(rt0.c1))))), (((rt0.c2, vt0.c0, rt0.c0)) BETWEEN (((- (rt0.c0)), CHANGES(), GROUP_CONCAT(rt0.c0))) AND ((CAST(rt0.c1 AS NUMERIC), (1.468094728E9 IN ()), vt0.c0))), (((LIKELIHOOD(DISTINCT rt0.c0, 0.9359775679268237)))>((0.38118118445722204))), CAST(((vt0.c0)<<(vt0.c0)) AS BLOB), CAST(CAST(rt0.c2 AS REAL) AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT MIN(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END COLLATE RTRIM) FROM vt0, rt0 WHERE (x''); -- 0ms;
SELECT (NOT (rt0.c0)) COLLATE RTRIM FROM vt0, rt0 WHERE (((((((((CASE 'c\n뤹P	r'  WHEN '-1717100693' THEN NULL END)OR('' COLLATE NOCASE)))AND(TRIM(NULL, x'f0c4'))))OR('713933895' COLLATE NOCASE)))AND(GLOB(NULL, '')))); -- 0ms;
SELECT DISTINCT TYPEOF(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) FROM rt0, vt0; -- 0ms;
SELECT CASE 0.37778509074834343  WHEN ((rt0.c4)<=(rt0.c4)) THEN (('-1784444543')/(rt0.c2)) ELSE rt0.c3 END FROM vt0, rt0 WHERE (((((('1374200014673589674T7707358843992779288T105:-994192576428087793 17--6235905631740742201:5703273139513067985T7506222629415468129 841-', 0.9578193078258954, 0xffffffffd62cefba))==((NULL, x'', x'8b2c5dc0'))))>>((((((((('')OR(NULL)))OR(x'')))OR('-1314258733')))OR(x'faf2'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((((vt0.c0)OR(vt0.c0))))<=((UNLIKELY(vt0.c0))))) OVER () FROM vt0 WHERE ((((COALESCE(0.1614570399736801, 0.37769233148431114)))==(((NULL IN (x'')))))) ORDER BY CAST((106684552 IN ()) AS BLOB) ASC  NULLS LAST LIMIT 1136682532; -- 0ms;
SELECT DISTINCT ((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c2))) IN ()), CAST(((vt0.c0)>=(rt0.c2)) AS BLOB), GROUP_CONCAT(CASE rt0.c4  WHEN rt0.c4 THEN vt0.c0 ELSE rt0.c0 END) OVER () FROM vt0 LEFT OUTER JOIN rt0 ON CAST(((rt0.c0) BETWEEN (rt0.c0) AND (vt0.c0)) AS TEXT) ORDER BY (((CAST(rt0.c3 AS NUMERIC)))<>(((rt0.c2 IN ())))) DESC; -- 1ms;
SELECT ALL ((((CAST(rt0.c3 AS TEXT))AND(((vt0.c0)IS NOT(vt0.c0)))))OR(LIKELY(DISTINCT vt0.c0))) FROM rt0, vt0 GROUP BY (((~ (rt0.c2)))OR(CASE rt0.c4  WHEN rt0.c3 THEN x'' WHEN rt0.c3 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c4 END)); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((CASE WHEN 0.9271358302776427 THEN 0.244234101468348 END)LIKE(((('|'))==(('1873957467')))))); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c3  WHEN x'' THEN NULL END AS BLOB) FROM vt0, rt0; -- 0ms;
SELECT ALL LAG(((((SQLITE_COMPILEOPTION_GET(rt0.c4))AND(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 END)))OR(((rt0.c3)>>(rt0.c0)))), TRIM(DISTINCT CASE WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 ELSE vt0.c0 END), ((((((rt0.c1)AND(rt0.c4)))AND(vt0.c0)))LIKE(((x'') NOT BETWEEN (rt0.c1) AND (rt0.c2))))) OVER ( ORDER BY NULL  NULLS LAST, NULL  NULLS FIRST), (('qdp') BETWEEN ('') AND (rt0.c3)) COLLATE RTRIM, x'' FROM rt0, vt0 WHERE (LIKELY(DISTINCT '') COLLATE BINARY) LIMIT 226785943; -- 0ms;
SELECT ALL CASE ((rt0.c4)OR(vt0.c0))  WHEN rt0.c3 THEN ((((rt0.c3)AND(rt0.c2)))OR(vt0.c0)) WHEN ((((vt0.c0)OR(rt0.c1)))AND(rt0.c4)) THEN (rt0.c4 IN ()) WHEN (((rt0.c0))<((x''))) THEN ((rt0.c3)<(rt0.c2)) ELSE TOTAL(rt0.c1) END FROM vt0 NOT INDEXED, rt0 WHERE (CAST((x'' IN ()) AS INTEGER)) GROUP BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3))) NOTNULL) HAVING CAST((rt0.c0 IN ()) AS BLOB); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((NULL)OR(rt0.c2)) AS TEXT) FROM rt0, vt0; -- 0ms;
SELECT ALL LAG(RTRIM(rt0.c2), (((NOT (rt0.c1))) NOT BETWEEN ((+ (rt0.c2))) AND (rt0.c2 COLLATE BINARY)), ((((rt0.c3)%(rt0.c1))) BETWEEN ((('1184700544')OR(rt0.c3))) AND (vt0.c0 COLLATE RTRIM))) OVER (), (((rt0.c0))>((rt0.c2))) COLLATE BINARY, ((((((((rt0.c0 COLLATE BINARY)AND(((rt0.c1)<<(rt0.c0)))))OR(rt0.c2 COLLATE NOCASE)))OR(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT CAST(NULLIF(rt0.c1, rt0.c4) AS INTEGER) FROM vt0 LIMIT -1285711641;SELECT DISTINCT (+ (LIKELY(DISTINCT rt0.c2))), (((((rt0.c3)) BETWEEN ((x'54df')) AND ((rt0.c0)))) NOT BETWEEN ((((rt0.c0))<>((rt0.c2)))) AND (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)))), ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))>=(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM vt0;SELECT (CAST(rt0.c2 AS INTEGER) IN ()) FROM vt0 LIMIT 1767222632 UNION SELECT DISTINCT COUNT(*) FROM vt0 WHERE (((((((0.566089654770653)LIKE('')))AND(LIKELY(NULL))))OR(NULL COLLATE BINARY)));SELECT ALL ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE, (rt0.c2 IN (((rt0.c4)<(rt0.c2)))), DENSE_RANK() OVER () FROM rt0 WHERE (((((x'') ISNULL))<<(((0x2ac27576) NOT BETWEEN (x'') AND (''))))); -- 0ms;
SELECT DISTINCT '휫5 9oV' FROM rt0; -- 0ms;
SELECT AVG(((((((((rt0.c1)OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4))) OVER () FROM rt0 WHERE (CASE 0.5482108409257096  WHEN (('1607032056')>>(0.6533767687315293)) THEN (((0.3831601999223998))<((x'1839'))) ELSE CAST(NULL AS REAL) END); -- 0ms;
SELECT ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c3)))|((rt0.c3 IN ()))), (+ (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN vt0.c0 WHEN rt0.c2 THEN rt0.c2 END)), HEX(rt0.c3 COLLATE BINARY) FROM vt0, rt0 WHERE (COALESCE((((x''))>=((NULL))), CAST('-1745212710' AS INTEGER), ((x'')+(NULL)), ((-2137223292) NOT BETWEEN ('1117207453') AND ('')))) ORDER BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c4)) AS INTEGER)  NULLS FIRST, ((((((((1.721271614E9)AND(rt0.c3)))OR(rt0.c1)))OR(CAST(rt0.c0 AS INTEGER))))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))), rt0.c3 DESC  NULLS LAST; -- 1ms;
SELECT (((NULL IN ())) NOT NULL) FROM vt0, rt0 ORDER BY (0.16245971922090197 IN ()), rt0.c1 DESC  NULLS LAST, (((((rt0.c0)) NOT BETWEEN ((0.353143717198413)) AND ((vt0.c0))))>=(rt0.c1)); -- 0ms;
SELECT rt0.c2, ((rt0.c0)>>(((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))), ((load_extension(rt0.c0)) ISNULL), (((vt0.c0, NULL, rt0.c4)) NOT BETWEEN ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)), ((rt0.c2)>=(rt0.c3)), ((rt0.c4)<<(rt0.c3)))) AND (((+ (rt0.c2)), (('915311413')/(vt0.c0)), rt0.c0 COLLATE BINARY))), ((LOWER(rt0.c4)) ISNULL) FROM vt0;SELECT ALL ((CAST(rt0.c0 AS REAL)) IS TRUE) FROM rt0 WHERE (CASE (0.11733604983362844 IN ('NcM', x''))  WHEN '-1665112331' THEN CAST(982377908 AS REAL) WHEN LIKE(x'', '0.16280260024616922') THEN ('563557565' IN ()) WHEN (~ (NULL)) THEN ('915311413' IN ()) ELSE NULL COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE ((((CASE x'68b0'  WHEN NULL THEN '!M_' END, GLOB(NULL, NULL), TRIM(DISTINCT NULL, NULL)))>(('', ((('1')) NOT BETWEEN ((NULL)) AND ((0.14253737913769193))), (~ (x'')))))) GROUP BY ((CAST(rt0.c0 AS BLOB))IS NOT(LOWER(rt0.c0))) LIMIT -1023300667 OFFSET 58592164; -- 0ms;
SELECT (((rt0.c3 IN (rt0.c0)))AND((~ (rt0.c4)))) FROM rt0, vt0 WHERE (((json_quote(NULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT (~ ((- (vt0.c0)))) FROM vt0, rt0 WHERE ((((((0.9523287790465635) ISNULL)))<((((0.7730402274824634)AND('z?]2E')))))); -- 0ms;
SELECT ALL CASE ''  WHEN ((rt0.c4)<<(vt0.c0)) THEN (NOT (rt0.c1)) ELSE (+ (rt0.c2)) END FROM vt0 WHERE (IFNULL((NOT (NULL)), INSTR(1820576274, x'')));SELECT DISTINCT ((('X}' IN ()))>>(rt0.c2)), ((((rt0.c3) NOTNULL))+(0.18073121443193996)), rt0.c1 FROM rt0, vt0 WHERE (((((((((((((490743581)AND(NULL)))OR('-2131061352')))OR('')))AND(-2.010942821E9)))OR(((0.8333789571482849)|(NULL)))))OR((('')|('0.4951453529621145'))))); -- 0ms;
SELECT ALL ((((rt0.c2)<(rt0.c2))) BETWEEN (((rt0.c3) NOT NULL)) AND (CHANGES())) FROM rt0; -- 0ms;
SELECT DISTINCT (- (TOTAL(rt0.c2))) FROM vt0 WHERE (((((((x'')LIKE(NULL)))AND(x'' COLLATE RTRIM)))OR((NULL IN ()))));SELECT ALL (((('0.37778509074834343')>=(0.29011960361466904)))*(CAST(vt0.c0 AS TEXT))) FROM rt0, vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(HEX(rt0.c4) AS TEXT)) OVER () FROM vt0, rt0 WHERE ('-692970942'); -- 0ms;
SELECT ((((rt0.c2) NOT NULL))-(rt0.c0)), ((((rt0.c2)>(NULL)))LIKE(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))), CAST(vt0.c0 AS NUMERIC) FROM rt0, vt0 WHERE (((CASE WHEN x'cdf9' THEN x'' WHEN -186481077 THEN '' WHEN NULL THEN '' END)>=(((x'') BETWEEN (x'2d0b') AND ('548087271'))))); -- 0ms;
SELECT ALL ((((rt0.c3) IS FALSE))+((- (rt0.c3)))) FROM vt0;SELECT ALL AVG(((x'')LIKE(vt0.c0))) OVER ( PARTITION BY (rt0.c0 IN ()) COLLATE BINARY, (((vt0.c0))>((vt0.c0)))), ((rt0.c2 COLLATE NOCASE) BETWEEN (TRIM(rt0.c1)) AND ((rt0.c0 IN ()))), ((CASE rt0.c2  WHEN 0.23299703196015265 THEN rt0.c3 ELSE rt0.c4 END)IS NOT(MAX(rt0.c3))) FROM vt0 WHERE ((((((('uxB''6x,[') NOT NULL))OR(x'4222')))OR((('-1786694133') IS TRUE))));SELECT ALL (NOT (((((((((vt0.c0)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))) FROM rt0 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN rt0.c1 END IN ()) FROM vt0, rt0 WHERE ((((((NULL)) BETWEEN ((x'1da7')) AND ((NULL)))) IS FALSE)); -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS INTEGER) COLLATE BINARY, COUNT(*), (((rt0.c4))<((rt0.c2))) COLLATE RTRIM FROM vt0, rt0 GROUP BY (- (vt0.c0)) HAVING (- ((('-2047028452')+(rt0.c2)))); -- 0ms;
SELECT ((x'') NOT BETWEEN (((rt0.c1)>(rt0.c2))) AND (0Xffffffffb51737bb)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt0, rt0; -- 0ms;
SELECT ((0Xffffffff9d1fced9) NOT BETWEEN ((((rt0.c1))=((rt0.c1)))) AND (UPPER(rt0.c0))) FROM rt0, vt0 WHERE (CAST(0.6592759918689958 AS NUMERIC)); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0 WHERE (((CAST(x'' AS BLOB)) BETWEEN (CAST(0.7534912376731857 AS NUMERIC)) AND ('1297466372' COLLATE RTRIM)));SELECT DISTINCT GROUP_CONCAT(((0.5453635116521158)+(645335443))) OVER () FROM rt0, vt0 ORDER BY (((rt0.c3 IN ())) BETWEEN (rt0.c0 COLLATE BINARY) AND (highlight(rt0.c2, rt0.c3, rt0.c4, rt0.c3)))  NULLS LAST;SELECT (((rt0.c1 IN ())) ISNULL) FROM rt0, vt0 LIMIT -1786694133 OFFSET -1225552317; -- 0ms;
SELECT ((CASE WHEN rt0.c0 THEN rt0.c0 END)LIKE(CASE x'c9b4'  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt0.c0 END)) FROM vt0, rt0; -- 0ms;
SELECT DISTINCT ((((COUNT(rt0.c1))OR((+ (rt0.c1)))))AND(((rt0.c2)>(vt0.c0)))), (((rt0.c0 IN ()))AND((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, rt0.c1, vt0.c0)) AND ((rt0.c3, vt0.c0, 'ᇣf7PVV'))))), ((((((((x'')OR(rt0.c1)))AND(rt0.c4)))AND(CASE WHEN rt0.c0 THEN vt0.c0 ELSE rt0.c3 END)))OR((~ (rt0.c3)))) FROM vt0, rt0 GROUP BY ((((((((((((vt0.c0)AND(rt0.c4)))OR(rt0.c3)))OR(CASE rt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN rt0.c1 THEN 0.9136224681240841 WHEN rt0.c0 THEN rt0.c0 ELSE vt0.c0 END)))OR(vt0.c0 COLLATE NOCASE)))OR(((rt0.c1)||(rt0.c0)))))AND(((rt0.c2)>>(NULL)))) HAVING ((((rt0.c2 IN ())))<>((CAST(vt0.c0 AS REAL)))) LIMIT -1998292788 OFFSET 752542590; -- 0ms;
SELECT (rt0.c0 IN ()) COLLATE BINARY, 0.08289202065322332, vt0.c0 FROM vt0 WHERE (((x'') NOTNULL) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c2 COLLATE RTRIM FROM rt0, vt0 WHERE (NULLIF(DISTINCT ((((722069605)AND('225533964')))OR(x'f928')), (x'' IN ()))); -- 0ms;
SELECT ((((((rt0.c3)-(rt0.c0)))OR(rt0.c1 COLLATE NOCASE)))OR(((rt0.c4) IS TRUE))), CASE (((rt0.c1))>((rt0.c2)))  WHEN CASE rt0.c2  WHEN vt0.c0 THEN rt0.c4 END THEN (rt0.c2 IN (rt0.c1)) WHEN ((rt0.c4) ISNULL) THEN CASE vt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE vt0.c0 END WHEN (NOT (rt0.c0)) THEN ((((((((rt0.c0)OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c3)) ELSE (~ (rt0.c0)) END, SUM(CAST(rt0.c1 AS REAL)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0;SELECT DISTINCT (((vt0.c0))<((LOWER(vt0.c0)))) FROM rt0;SELECT DISTINCT -2026253999 FROM vt0 LIMIT -1038812764; -- 0ms;
SELECT ALL (~ ((rt0.c3 IN (rt0.c4, rt0.c3)))), DENSE_RANK() OVER (), COUNT((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))), (~ (CAST(rt0.c3 AS BLOB))), (((((NOT (rt0.c0)))AND(((((vt0.c0)AND(rt0.c3)))AND(rt0.c4)))))OR((((rt0.c4)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))), COUNT(*) OVER ( ROWS  CURRENT ROW), CAST('1721271614' AS NUMERIC) FROM vt0;SELECT ALL ((((rt0.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c1))) IN ()), CASE WHEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c4)) THEN CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c1 WHEN '958565414' THEN rt0.c2 END END, vt0.c0 FROM rt0;SELECT DISTINCT CASE WHEN ((rt0.c3)=(rt0.c0)) THEN rt0.c1 COLLATE BINARY WHEN GROUP_CONCAT(rt0.c2) THEN '-1904121656' WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c1)) ELSE ((rt0.c3)<>(vt0.c0)) END FROM rt0;SELECT ALL (+ (rt0.c2 COLLATE RTRIM)) FROM rt0, vt0; -- 0ms;
SELECT x'', ((((NOT (vt0.c0))))<(((((vt0.c0))>=((rt0.c0)))))), (+ ((rt0.c0 IN ()))) FROM vt0, rt0; -- 0ms;
SELECT LOWER((~ (rt0.c2))) FROM vt0, rt0 WHERE (((((x'7d12' COLLATE RTRIM)AND(((NULL)&(-1065013056)))))OR((1.261735242E9 IN ())))) GROUP BY IFNULL(DISTINCT (rt0.c3 IN (rt0.c3, rt0.c0)), ((rt0.c3)<=(rt0.c0))) HAVING CAST('' AS BLOB) ORDER BY json_extract(((rt0.c4) NOT BETWEEN (x'') AND (x'')), (vt0.c0 IN ())) ASC; -- 0ms;
SELECT DISTINCT (((vt0.c0))==((CAST(rt0.c4 AS TEXT)))) FROM vt0;SELECT DISTINCT CAST(MIN(rt0.c0) AS NUMERIC) FROM vt0, rt0 WHERE ('c欷') GROUP BY ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))<>(UPPER(vt0.c0))), json_array(TRIM(1.261735242E9, rt0.c4), ((rt0.c2)AND(rt0.c2))), rt0.c4 HAVING UNLIKELY(DISTINCT AVG(rt0.c4)); -- 0ms;
SELECT DISTINCT ((UNICODE(rt0.c3))+(((rt0.c0)IS(rt0.c4)))), GROUP_CONCAT(SUM((+ (rt0.c1)))), (((rt0.c0 IN (rt0.c1, 0.6262493568801298))) NOT NULL), ((rt0.c4) NOT NULL) COLLATE BINARY, CAST(TOTAL(rt0.c2) AS TEXT) FROM vt0, rt0;SELECT DISTINCT ((((vt0.c0)>=(rt0.c0)))||((~ (rt0.c4)))), ROW_NUMBER() OVER ( PARTITION BY ((NULL) NOT BETWEEN (HEX(rt0.c4)) AND ((rt0.c1 IN ()))), (+ ((NOT (vt0.c0))))), (NOT (((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) FROM vt0, rt0 WHERE (((((((('駋)mG/^ﱔ⯭&'))>((''))))OR(IFNULL(NULL, x'dd85'))))OR(0.21374956405197376))); -- 0ms;
