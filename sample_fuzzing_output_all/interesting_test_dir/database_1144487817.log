-- Time: 2024/06/07 17:54:40
-- Database: database17
-- Database version: 3.40.0
-- seed value: 1144487817
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 1ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 1ms;
COMMIT TRANSACTION; -- 4ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.9670378489801305), (1753967102), (0.0), (0x688b69fe), (0.023837582804926316); -- 0ms;
ANALYZE; -- 1ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR ABORT rt1 SET c2=0.4903955960622075 WHERE (+ (rt1.c0 COLLATE NOCASE)); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL, c0=x''; -- 0ms;
UPDATE OR ABORT rt1 SET c1='S擝eJr', c0='}4' WHERE (((((NOT (rt1.c0)))OR(-5.51525155E8 COLLATE RTRIM)))OR((+ (rt1.c1)))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES (x''); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0, c0, c0, c0)=(NULL, 0.883324957978858, 'ロRｽr#5', 1176617756); -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
PRAGMA temp.cache_size = -1284356586920199393; -- 0ms;
REINDEX; -- 0ms;
PRAGMA automatic_index = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET c1='0.023837582804926316', c1=0.09173082268426602, c0='-1927927150'; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
UPDATE vt0 SET c0=NULL, c0=NULL, c0=0.8475268957488504; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0, c2) VALUES (0.00469251374056856, NULL, x'49ab'); -- 0ms;
REINDEX; -- 4ms;
INSERT OR REPLACE INTO vt1 VALUES ('}4'); -- 0ms;
REINDEX NOCASE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'e0e0986ae25a'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'rt1', ' sz=469250285 unordered'); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0)=('jeG') WHERE ((((((((((vt0.c0) IS FALSE))OR(CAST(vt0.c0 AS TEXT))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND((((0.9384728188395897, vt0.c0, vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt0.c0, vt0.c0, vt0.c0, vt0.c0))))))OR(vt0.c0 COLLATE NOCASE)); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
DROP TABLE vt0; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'' IN ())) ISNULL); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0x12b0f402), (-551525155), ('-1514803149'); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (0.4532077090093629, 0xffffffffa5e7303f); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR REPLACE INTO rt1 VALUES (NULL, 0.8546592345203298, '~'), (0.6364512408615115, 0.8546592345203298, NULL), ('-150764729', x'', -1.92792715E9); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', '-9223372036854775808', x''); -- 0ms;
UPDATE vt1 SET c0='-1033363654', c0=0.7896084155619426; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c1) VALUES (0.22277458499266278, x'', '-565483669'); -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0, c2) VALUES ('', x'', x'418b'); -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0, c1) VALUES ('', NULL, 0.30788896048758374), (NULL, NULL, x''), (x'22b8', 0.08536554900267701, NULL), (x'', 0xffffffff8da983ec, x''), ('', '-2128690163', 0.09871879508458903), (0.08352381867751546, NULL, x''), ('313586690', 0x2dd71947, 0.4532077090093629); -- 1ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES ('0.9670378489801305'), ('313586690'), (x'6e64'); -- 0ms;
INSERT OR REPLACE INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR FAIL INTO rt1(c2) VALUES ('抏<^닍lxix<'), ('1836409487'), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES (x'', 0.1638844551081432), (NULL, NULL), (NULL, 0.7929462840315455); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('469250285') WHERE vt1.c0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=236077738, c0=1646925910, c0='1836409487'; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (x''), (''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('ロrｽr#5'), ('-1164712491'), (0.06452653454220802), ('~ｽ'), (-5.65483669E8); -- 7ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE 0.015552839600219581; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
DELETE FROM rt1 WHERE (+ (NULL)); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('I6'), (0Xffffffff811ec40d), (x'783b'); -- 0ms;
REINDEX BINARY; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET (c1)=(NULL) WHERE ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))LIKE((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=-1.670123207E9 WHERE CAST((((rt1.c0, rt1.c2, rt1.c2, 0.8546592345203298, rt1.c0))<((rt1.c0, rt1.c0, rt1.c0, rt1.c0, rt1.c1))) AS BLOB); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=-925261306, c0=NULL WHERE (NOT (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT (((((((NULL)AND(rt1.c2)))OR(rt1.c2))))>(((vt1.c0 IN (rt1.c0, rt1.c2))))) FROM vt1 WHERE ((((('-1033363654' IN ()), (NOT ('-565483669')), (-1.514803149E9 IN ())))<>((CASE NULL  WHEN '-2032372021' THEN NULL ELSE 769071431 END, ((x'') BETWEEN (NULL) AND ('1673479100')), COALESCE(DISTINCT 0.40588965960200973, '469250285')))));SELECT DISTINCT CASE WHEN CAST(rt1.c0 AS BLOB) THEN CAST(vt1.c0 AS NUMERIC) END, (((~ (rt1.c2)))=(((rt1.c1) NOT BETWEEN (rt1.c1) AND (NULL)))), COUNT(*) FROM vt1 WHERE (((((('', -592594950, 0.6119599346921283)) NOT BETWEEN ((NULL, '嚄85jdI', 'ロrｽr#5')) AND ((0.19630675427510635, '', 'kAzH	#iQ'))))>>((((('|WE<')OR(NULL)))AND(x'')))));SELECT DISTINCT ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))) BETWEEN (((((rt1.c2)OR(rt1.c1)))OR(rt1.c2))) AND ((vt1.c0 IN ()))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((json_type(rt1.c1)) NOTNULL), (((((rt1.c1)AND(rt1.c0)))OR(rt1.c2)) IN ()), (((x'')*(rt1.c0)) IN ()), CAST(((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL), '' FROM vt1, rt1 WHERE ((NOT ((((x''))<=(('mi')))))) ORDER BY CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(rt1.c2)))OR(rt1.c2)))OR(rt1.c1)) THEN '' ELSE 'x ' END; -- 0ms;
SELECT ALL 0.4201645246938749 COLLATE NOCASE FROM rt1 WHERE ((~ ((~ ('3unixepoch|'))))) GROUP BY vt1.c0 HAVING rt1.c1;SELECT DISTINCT ((TYPEOF(DISTINCT rt1.c2)) BETWEEN (((vt1.c0)==(0.4532077090093629))) AND (((rt1.c0)>(vt1.c0)))) FROM rt1, vt1 WHERE ((((NULL IN ('-1670123207')))<>((((x'')) BETWEEN ((x'469b')) AND ((-2.032372021E9)))))) ORDER BY vt1.c0  NULLS FIRST; -- 0ms;
SELECT ((((((((CAST(rt1.c1 AS TEXT))AND(vt1.c0 COLLATE NOCASE)))AND(CAST(rt1.c0 AS NUMERIC))))AND(((rt1.c2)>>(rt1.c0)))))OR((+ (rt1.c2)))), CAST(((rt1.c1)IS NOT(NULL)) AS NUMERIC), CAST(MIN(rt1.c0) AS BLOB) FROM vt1, rt1 GROUP BY rt1.c0; -- 0ms;
SELECT DISTINCT CASE LIKELY(rt1.c1)  WHEN (((rt1.c2, rt1.c2, rt1.c0))<=((rt1.c0, vt1.c0, rt1.c1))) THEN CAST(rt1.c2 AS BLOB) WHEN CAST(rt1.c0 AS NUMERIC) THEN MIN(NULL) WHEN rt1.c1 COLLATE BINARY THEN ((rt1.c1)>>(vt1.c0)) END FROM vt1 WHERE ((((+ (0.010142223563374464)))IS NOT(CASE ''  WHEN x'' THEN 0.5506434716980885 ELSE NULL END)));SELECT ((rt1.c0 IN ()) IN ()) FROM vt1 WHERE (TRIM(DISTINCT ABS(DISTINCT -1.164712491E9))); -- 0ms;
SELECT ALL (((((rt1.c1, rt1.c0, rt1.c2))!=((rt1.c1, rt1.c1, rt1.c0)))) IS FALSE), TOTAL(CHAR(NULL)) OVER (), COUNT(*) FROM vt1, rt1; -- 0ms;
SELECT ALL (((vt1.c0, rt1.c0, rt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c0 ELSE NULL END, ((rt1.c2)!=(vt1.c0)), (NOT (rt1.c2)), CAST(rt1.c1 AS BLOB), TOTAL(rt1.c1))) AND (((rt1.c2 IN ()), TIME(vt1.c0, rt1.c0, NULL), 7.69071431E8, (vt1.c0 IN ()), rt1.c1))) FROM vt1;SELECT DISTINCT COUNT(*) FROM vt1 WHERE ((((NULL)) BETWEEN (((('ᶿQ') BETWEEN ('-1180237955') AND (x'')))) AND (((((0.2551681842887171)) NOT BETWEEN (('-1927927150')) AND ((NULL))))))); -- 0ms;
SELECT TRIM(DISTINCT '769071431', (rt1.c1 IN (rt1.c1))), ((CASE x'6b72'  WHEN vt1.c0 THEN rt1.c0 END)/(((vt1.c0)GLOB(rt1.c1)))), ((((rt1.c1)*(rt1.c1)))<>((((vt1.c0, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, vt1.c0, vt1.c0)) AND ((rt1.c0, vt1.c0, x''))))), ((vt1.c0)&(rt1.c0)) COLLATE RTRIM, CASE WHEN rt1.c0 THEN CAST(rt1.c2 AS REAL) WHEN ((vt1.c0)>(rt1.c2)) THEN rt1.c2 COLLATE BINARY WHEN ((rt1.c0)*(rt1.c1)) THEN ((rt1.c0) IS FALSE) END FROM vt1, rt1 ORDER BY ((((((((((rt1.c0)LIKE(rt1.c1)))AND((((vt1.c0))=((rt1.c2))))))OR(CASE WHEN rt1.c2 THEN rt1.c2 ELSE x'8cbccb37' END)))OR(((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c0)))AND(0.09634993006048065)))OR(rt1.c0)))))OR((rt1.c0 IN ()))), ((((rt1.c1) ISNULL))!=(((0.24577050576500792) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) DESC  NULLS FIRST; -- 1ms;
SELECT (CASE WHEN rt1.c1 THEN '-1918270484' ELSE rt1.c0 END IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c0 END, (((rt1.c0, vt1.c0, rt1.c1))>=((rt1.c1, rt1.c2, '0.4532077090093629'))))) FROM vt1 NOT INDEXED, rt1 LIMIT -801201198; -- 0ms;
SELECT DISTINCT (rt1.c1 IN ()) FROM rt1 GROUP BY ((rt1.c1) BETWEEN (NULL) AND (rt1.c2)); -- 1ms;
SELECT DISTINCT ((0.3628047159090142) BETWEEN (CAST(x'e8b6' AS TEXT)) AND (((((rt1.c1)AND(vt1.c0)))AND(rt1.c1)))), (((rt1.c1) NOT NULL) IN ()), CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS INTEGER) WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c2)AND(vt1.c0)) WHEN TRIM(vt1.c0) THEN (rt1.c1 IN (rt1.c0, x'')) END FROM vt1, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2) IS FALSE) IN ()) FROM vt1 WHERE (CAST(x'' AS TEXT)); -- 0ms;
SELECT DISTINCT ((((((((((((COUNT(rt1.c0))AND(COUNT(rt1.c2))))OR(LIKELIHOOD('-1907942401', 0.9995095086187264))))AND((rt1.c1 IN ()))))AND(rt1.c0)))AND(((rt1.c1)|(rt1.c1)))))AND(NULL)) FROM vt1, rt1; -- 0ms;
SELECT ALL ((TRIM(rt1.c0, rt1.c0))<(((((rt1.c1)OR(rt1.c1)))OR(rt1.c0)))), vt1.c0, (((rt1.c1, rt1.c2, rt1.c0)) NOT BETWEEN ((COUNT(*), TRIM(rt1.c1), (((rt1.c1, rt1.c0, rt1.c1))<=((rt1.c0, rt1.c0, rt1.c1))))) AND ((rt1.c0, ((vt1.c0)<<(vt1.c0)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (vt1.c0))))) FROM vt1, rt1 NOT INDEXED; -- 0ms;
SELECT rt1.c0 COLLATE BINARY FROM vt1 ORDER BY ((CAST(rt1.c0 AS REAL)) NOT BETWEEN ((+ (vt1.c0))) AND (-1.033363654E9)) DESC;SELECT DISTINCT COUNT(*) FROM vt1; -- 0ms;
SELECT AVG(((rt1.c2)>>(vt1.c0))) FROM vt1;SELECT DISTINCT ((rt1.c0 COLLATE NOCASE) NOT NULL) FROM rt1 WHERE ((((NULL)) BETWEEN ((x'')) AND (('#ᶿ' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT (- ('-552099400')), x'', (+ ((((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))))) FROM vt1, rt1 WHERE (((CAST('' AS INTEGER)) NOT BETWEEN ((('蘎9?L')<(NULL))) AND (0.22277458499266278 COLLATE NOCASE))) ORDER BY (NOT (((rt1.c2)IS NOT(rt1.c2)))), rt1.c2 COLLATE RTRIM, ((((((vt1.c0)OR(0.1591823131908351)))OR(vt1.c0)))>>((('')>(rt1.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT (((NOT (vt1.c0))) BETWEEN (((vt1.c0)=(x''))) AND (((((((((rt1.c0)AND(NULL)))OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c1)))) FROM rt1, vt1 WHERE ((((((x''))<=((NULL)))) NOT BETWEEN (((x'f180')-(0.7971552977751601))) AND (((((((((0.06482616278563358)OR(-412314204)))OR(2.36077738E8)))AND(-798807093)))AND(''))))) GROUP BY ((rt1.c1)IS(CASE WHEN rt1.c1 THEN NULL WHEN 0.7812192639351961 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 END)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c2))>((+ (rt1.c1)))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c2 WHEN NULL THEN NULL ELSE rt1.c0 END) IS FALSE) FROM rt1 WHERE (CAST('1509262862' AS TEXT)); -- 0ms;
SELECT (NOT (((rt1.c2)IS(rt1.c2)))) FROM vt1, rt1 WHERE ((((('2ｽ')<(x'')))LIKE('ZNlA'))); -- 1ms;
SELECT ((((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))IS((- (vt1.c0)))) FROM vt1, rt1 WHERE (((CASE WHEN NULL THEN 0.8448351211876978 WHEN -565483669 THEN '' WHEN x'f520' THEN 0.6027364023720791 ELSE '(76%' END) NOT BETWEEN (((('d!G')) BETWEEN ((-1470421920)) AND ((0xffffffff86dc76cb)))) AND ((('E\rD*')|(0.2492729203369134))))) ORDER BY CAST(rt1.c0 AS BLOB) COLLATE BINARY ASC  NULLS FIRST; -- 0ms;
SELECT CAST(UPPER(rt1.c0) AS NUMERIC), (((((rt1.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c1))))LIKE(((rt1.c2) IS TRUE))), ((NULL) NOT BETWEEN (((vt1.c0) IS FALSE)) AND (TOTAL(vt1.c0))) FROM rt1 WHERE (CASE WHEN CASE 0.4532077090093629  WHEN '3T' THEN '%(+rstart of monthMQR	' ELSE 'i鹧' END THEN CASE WHEN -731610779 THEN 'lj' ELSE '236077738' END ELSE ((('469250285')) BETWEEN ((x'07115391')) AND ((x''))) END);SELECT DISTINCT CASE WHEN 1721876859 THEN IFNULL(DISTINCT rt1.c0, rt1.c2) END FROM vt1 WHERE (x'');SELECT DISTINCT ((vt1.c0)||(rt1.c2)) COLLATE NOCASE FROM rt1 WHERE (CAST(CASE WHEN 0.9221127001245533 THEN -410111044 END AS REAL));SELECT ALL CAST(('??6MCvFj0' IN ()) AS REAL) FROM vt1; -- 0ms;
SELECT ((CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END) NOT BETWEEN (TOTAL(rt1.c0)) AND (0.8999888378403645)) FROM rt1; -- 1ms;
SELECT ALL LENGTH(rt1.c0), ((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c0 END) NOTNULL), CASE ((rt1.c2)GLOB(rt1.c2))  WHEN ((rt1.c0)|(rt1.c2)) THEN (('-1918270484') BETWEEN (rt1.c2) AND (rt1.c1)) ELSE rt1.c2 END FROM vt1 WHERE ((~ (NULL)));SELECT DISTINCT CAST(((rt1.c0) NOT BETWEEN (rt1.c1) AND (x'')) AS NUMERIC) FROM vt1, rt1 GROUP BY ('-1802335258' IN ()); -- 0ms;
SELECT DISTINCT ((vt1.c0)||(rt1.c0)) COLLATE BINARY, NTH_VALUE(CAST(DATE(rt1.c1, rt1.c0, rt1.c0) AS REAL), CAST(((((vt1.c0)AND(x'')))OR(vt1.c0)) AS NUMERIC)) OVER (), (+ (((vt1.c0)!=(vt1.c0)))) FROM vt1, rt1; -- 1ms;
SELECT ((CASE '{}'  WHEN vt1.c0 THEN NULL ELSE rt1.c0 END)IS(CAST(rt1.c1 AS NUMERIC))), ABS((((rt1.c0, rt1.c1, vt1.c0))=((rt1.c0, rt1.c2, rt1.c0)))), COUNT(*) FROM vt1;SELECT DISTINCT LTRIM(rt1.c0 COLLATE BINARY, (((rt1.c2, rt1.c2, rt1.c1, rt1.c0, vt1.c0))<((rt1.c1, rt1.c2, rt1.c0, rt1.c1, rt1.c0)))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE RTRIM)>>(CAST(rt1.c1 AS BLOB))) FROM rt1, vt1 WHERE (((((NULL)+('-1226604690')))>(0.08536554900267701))); -- 0ms;
SELECT ALL LIKELY(DISTINCT MAX(rt1.c1)) FROM vt1 WHERE (((x'') NOTNULL));SELECT DISTINCT CASE WHEN (((rt1.c2)) BETWEEN ((vt1.c0)) AND ((0.5006348281036916))) THEN CAST(rt1.c1 AS TEXT) ELSE (NOT (rt1.c1)) END FROM vt1, rt1 GROUP BY (((NULL IN ())) NOT NULL), (vt1.c0 IN ()), ((((vt1.c0)AND(rt1.c0)))%(rt1.c0)); -- 0ms;
SELECT CHAR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c0))), TYPEOF(DISTINCT x''), ((rt1.c2)=(vt1.c0))) FROM vt1 UNION ALL SELECT DISTINCT ((((rt1.c0)AND(rt1.c0))) IS FALSE) FROM rt1, vt1 WHERE ((CAST('758372440' AS TEXT) IN ()));SELECT DISTINCT NULL, json_extract(((rt1.c2)AND(rt1.c0)), (((rt1.c1))=((NULL)))), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)) ELSE (((vt1.c0, rt1.c2, rt1.c2))==((rt1.c2, rt1.c0, vt1.c0))) END FROM rt1, vt1 GROUP BY ((rt1.c2 COLLATE NOCASE) BETWEEN (((rt1.c1) NOT NULL)) AND (CASE WHEN -4.10111044E8 THEN vt1.c0 END)), ((CASE rt1.c0  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END) BETWEEN (NULL) AND (((rt1.c1) IS TRUE))), (((((rt1.c1 IN ()))OR(((rt1.c1)<<('')))))AND(((((rt1.c1)OR(rt1.c1)))AND(rt1.c1)))) LIMIT 1509262862; -- 0ms;
SELECT DISTINCT ((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) IN ('-907229168')), (((rt1.c2, rt1.c2, x''))!=((rt1.c2, 0.2353643438695413, rt1.c0))) COLLATE BINARY, CASE MAX(rt1.c1)  WHEN CAST(rt1.c1 AS NUMERIC) THEN (rt1.c0 IN ()) WHEN CAST(rt1.c0 AS INTEGER) THEN ((((rt1.c2)OR(rt1.c1)))OR(vt1.c0)) WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN (rt1.c2 IN ()) END FROM rt1, vt1; -- 0ms;
SELECT ((HEX(DISTINCT rt1.c0))/(SUM(rt1.c2))), (((rt1.c0)OR(rt1.c1)) IN ('T\n')), CAST(rt1.c0 AS REAL) FROM vt1;SELECT DISTINCT (((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)) IN ((((rt1.c0, vt1.c0, '-119664517'))==(('1093244970', rt1.c0, '-1539957313'))))), ROUND((NOT (rt1.c0)), (- (rt1.c0))), MIN(TYPEOF(rt1.c0), rt1.c1 COLLATE NOCASE, 0.9636259629824875, GROUP_CONCAT(rt1.c2)), UNLIKELY(((vt1.c0)=(rt1.c0))), '-1802335258' FROM vt1 WHERE (CAST(((-3.56737433E8) IS FALSE) AS INTEGER));SELECT DISTINCT ((MAX(rt1.c0)) IS FALSE) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((vt1.c0)OR(rt1.c2)))AND('-1907942401'))), x'', TOTAL(((rt1.c2)%(rt1.c0))) FROM rt1 WHERE (((((-412314204) ISNULL)) NOT NULL));SELECT CAST(CASE WHEN vt1.c0 THEN 0Xd69e81b WHEN rt1.c2 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END AS INTEGER) FROM rt1, vt1 WHERE (ABS(DISTINCT ((-5.520994E8)>=('-1907942401')))); -- 0ms;
SELECT CAST(CAST(rt1.c0 AS NUMERIC) AS INTEGER) FROM rt1; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM vt1; -- 1ms;
SELECT ALL ((NULL COLLATE BINARY) ISNULL), (((vt1.c0 COLLATE NOCASE))<>((SQLITE_COMPILEOPTION_USED('')))), (((rt1.c1 IN ())) IS FALSE), (NOT (COALESCE(DISTINCT vt1.c0, rt1.c0, rt1.c1, rt1.c0))), ((((rt1.c2)!=(rt1.c2))) IS TRUE) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT x'', ((((CAST(rt1.c1 AS NUMERIC))OR(((rt1.c1)<(rt1.c2)))))AND(HEX(rt1.c1))), (((rt1.c0 IN ()))<=(rt1.c1 COLLATE BINARY)) FROM rt1 ORDER BY (-886875205 IN ())  NULLS LAST; -- 0ms;
SELECT CAST(COUNT(*) AS REAL) FROM vt1; -- 0ms;
SELECT DISTINCT (((((rt1.c1))=((rt1.c1))))==(((((rt1.c1)AND(rt1.c0)))AND(rt1.c0)))), ((rt1.c1)AND(rt1.c2)) COLLATE RTRIM, vt1.c0 FROM vt1, rt1 WHERE (CASE HEX(DISTINCT x'')  WHEN (~ (NULL)) THEN (((-9.25261306E8)) BETWEEN ((NULL)) AND (('1753967102'))) END); -- 1ms;
SELECT DISTINCT (CAST('-1670123207' AS BLOB) IN (((rt1.c0)=(rt1.c2)))) FROM vt1 WHERE (CAST(((0.010142223563374464)/(0.009108501334812225)) AS REAL)) ORDER BY CASE WHEN (- ('dM8u')) THEN ((rt1.c2)+(rt1.c1)) ELSE CASE 0.00469251374056856  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END END;SELECT DISTINCT LAG(((vt1.c0 COLLATE NOCASE) IS FALSE), CAST(vt1.c0 COLLATE NOCASE AS BLOB), vt1.c0) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM rt1, vt1; -- 0ms;
SELECT ((rt1.c2 COLLATE BINARY)GLOB(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c2)))) FROM rt1 WHERE (((((236077738) NOT BETWEEN (0.9349850113489399) AND ('1023895155')))<<((((0Xffffffffb2b078e4))>=((x''))))));SELECT DISTINCT (((rt1.c0, rt1.c0, rt1.c1, rt1.c0, rt1.c1)) BETWEEN ((((((((((vt1.c0)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)))OR(rt1.c0)), UNLIKELY(rt1.c2), SUM(rt1.c2), rt1.c0, NULLIF(DISTINCT rt1.c0, rt1.c1))) AND ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)), CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 END, rt1.c2 COLLATE RTRIM, (- (rt1.c2))))), rt1.c2, CAST('H+2ﲪh	vE' COLLATE RTRIM AS BLOB) FROM rt1, vt1; -- 1ms;
SELECT CAST(CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 ELSE vt1.c0 END AS BLOB), CAST(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)) AS NUMERIC), AVG(((vt1.c0)-(rt1.c2))) FROM vt1, rt1 WHERE ((x'' IN (x'4f05')) COLLATE BINARY); -- 0ms;
SELECT ALL CASE WHEN COUNT(rt1.c0) THEN TIME(rt1.c0, rt1.c0, rt1.c1, rt1.c1, rt1.c0) WHEN 0.8546592345203298 THEN '&\r' WHEN ((rt1.c0) IS FALSE) THEN CAST(x'' AS TEXT) END FROM rt1, vt1 WHERE ((((((((((0.4240619121471435 IN ()))OR(CAST(0.19722121659948078 AS NUMERIC))))AND((+ (NULL)))))AND((('') IS TRUE))))AND('0.8546592345203298'))) GROUP BY CASE 0x4695e5f  WHEN x'' THEN rt1.c0 END COLLATE BINARY HAVING (rt1.c0 IN ()); -- 0ms;
SELECT ALL (((((rt1.c2)&(vt1.c0)), ((rt1.c2)||(rt1.c1)), x''))=((((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(vt1.c0)), highlight(rt1.c1, rt1.c0, vt1.c0, rt1.c2), 0.4599271652958272))), vt1.c0, SUM(UNICODE(rt1.c2)) FROM rt1, vt1 WHERE (CAST((NULL IN ()) AS TEXT)) LIMIT 769071431 OFFSET 1673479100; -- 0ms;
SELECT DISTINCT LAST_VALUE((((rt1.c2)) BETWEEN (((+ (rt1.c1)))) AND ((((rt1.c2) NOT NULL))))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c1)OR(rt1.c2)))AND(rt1.c1)) IN ()) FROM rt1 LIMIT 603510414; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY ((((vt1.c0)*(rt1.c1))) NOT BETWEEN (((rt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(rt1.c0 AS TEXT))) DESC), highlight('cYZ,	', ((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c1)), CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END, ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c2))), (rt1.c1 COLLATE NOCASE IN ()) FROM vt1, rt1;SELECT DISTINCT COUNT(*) FROM vt1; -- 0ms;
SELECT LAG(((INSTR(vt1.c0, vt1.c0))<<(((rt1.c1)IS NOT(rt1.c0)))), (((~ (0.08536554900267701))) NOT BETWEEN (((rt1.c0) BETWEEN (rt1.c1) AND (NULL))) AND (CAST(0.06452653454220802 AS NUMERIC))), CAST(((rt1.c1)<(rt1.c1)) AS REAL)) OVER () FROM rt1, vt1 LIMIT -1940423744; -- 1ms;
SELECT ((LIKELY(DISTINCT rt1.c2)) NOTNULL) FROM rt1 WHERE (QUOTE(CASE WHEN '-1563179278' THEN 0.920937984713496 END)); -- 0ms;
SELECT ALL (~ (rt1.c1)) COLLATE BINARY FROM rt1, vt1 WHERE ((((+ ('{}'))) NOT NULL)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(TRIM(rt1.c0)) FROM rt1 WHERE (((((0.6694594534678503)LIKE(7.4014303E7)))/((x'7709' IN ())))); -- 0ms;
SELECT DISTINCT (((((rt1.c2) ISNULL), CASE WHEN rt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END, CASE vt1.c0  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN '-1563179278' WHEN rt1.c0 THEN rt1.c0 END))=((CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END, CAST(rt1.c2 AS TEXT), CAST(rt1.c1 AS NUMERIC)))) FROM rt1, vt1 WHERE ((((((((NULL)OR(2.36077738E8)))AND(x'fc85'))))!=((((((NULL)OR(0Xffffffff8fc07a9c)))OR(x'')))))); -- 0ms;
SELECT DISTINCT ((highlight(vt1.c0, rt1.c2, rt1.c0, rt1.c2)) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (CASE rt1.c0  WHEN rt1.c2 THEN NULL END)), ((('-356737433')) BETWEEN (((vt1.c0 IN ()))) AND ((((rt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0))))), 0.8999888378403645 FROM vt1, rt1 WHERE ((((((('0.5006348281036916')OR(0.5759478944365193)))OR('-150764729'))) IS TRUE));SELECT ALL CASE ((rt1.c2) ISNULL)  WHEN ((((((((rt1.c2)OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c2)) THEN ((vt1.c0)==(vt1.c0)) WHEN (+ (rt1.c2)) THEN ((rt1.c1)LIKE(rt1.c1)) WHEN rt1.c2 THEN AVG(rt1.c1) ELSE CAST(rt1.c2 AS NUMERIC) END FROM vt1;SELECT ((((vt1.c0)<=(rt1.c0))) NOT BETWEEN ((((rt1.c2, rt1.c1, vt1.c0)) BETWEEN ((vt1.c0, rt1.c2, rt1.c0)) AND ((rt1.c0, '', rt1.c0)))) AND ((((vt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c1, vt1.c0, rt1.c0)) AND ((rt1.c2, rt1.c1, x'1814'))))), ((((((rt1.c1)>>(vt1.c0)))OR((rt1.c2 IN ()))))AND(json_valid(rt1.c2))), (((((((((rt1.c1)OR(vt1.c0)))AND(x'2f8be5d9')))OR(rt1.c1)))OR(rt1.c1)) IN ()) FROM vt1;SELECT DISTINCT ((-1514803149)AND(NULL)) FROM rt1 WHERE ('F\O'); -- 0ms;
SELECT (((x'' IN ())) NOT BETWEEN (((rt1.c1) NOTNULL)) AND (((((vt1.c0)OR(NULL)))OR(vt1.c0)))) FROM rt1 WHERE ((((-9.07229168E8)AND(0xffffffff8e471bff)) IN ()));SELECT DISTINCT (((((vt1.c0 IN ()))AND(((vt1.c0) NOTNULL))))AND(((((((((vt1.c0)OR('2141968324')))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))) FROM rt1, vt1; -- 0ms;
SELECT DATETIME(CAST(rt1.c0 AS REAL), CAST(vt1.c0 AS REAL), ((rt1.c0)!=(rt1.c0))), (((((rt1.c0))<((0.40815739384934735))))<>(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c1)))), rt1.c0 FROM vt1 WHERE (SQLITE_VERSION());SELECT DISTINCT 0.8013678066442566 FROM rt1, vt1 WHERE (((('-299346300') NOT NULL) IN ())); -- 0ms;
SELECT DISTINCT CASE ((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))  WHEN (rt1.c0 IN ()) THEN UPPER(vt1.c0) END, ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (x''))) IS TRUE), FIRST_VALUE((((NULL)) NOT BETWEEN ((json_array(rt1.c0, '1811440883'))) AND ((((rt1.c1) ISNULL))))) OVER ( ROWS BETWEEN ((NULL)+(rt1.c1)) COLLATE RTRIM PRECEDING AND (((((rt1.c1)OR(rt1.c2)))AND(0.28935328819594985)) IN ()) PRECEDING) FROM rt1 WHERE ((((('') IS TRUE)) ISNULL));SELECT ALL '469250285', rt1.c2, LIKELY(DISTINCT 0x2d33d858), COALESCE(rt1.c0, rt1.c2) COLLATE RTRIM, MAX(((('', rt1.c1, rt1.c1)) BETWEEN ((vt1.c0, rt1.c1, rt1.c1)) AND ((rt1.c2, rt1.c1, rt1.c2)))) FROM rt1;SELECT ALL COUNT(CASE vt1.c0  WHEN rt1.c0 THEN rt1.c2 END) OVER () FROM rt1, vt1 WHERE (((NULL) ISNULL)); -- 0ms;
SELECT ALL CAST(NULLIF(DISTINCT vt1.c0, vt1.c0) AS NUMERIC), COUNT(*), CAST(((((rt1.c0)OR(vt1.c0)))AND(rt1.c2)) AS REAL) FROM rt1, vt1 GROUP BY ((CAST(rt1.c2 AS REAL))LIKE(((rt1.c0)<>(vt1.c0)))); -- 1ms;
SELECT DISTINCT LIKELIHOOD(vt1.c0, 0.8388982514161777) COLLATE NOCASE, ((((- (rt1.c0))))<((((rt1.c1) IS TRUE)))), COUNT(((x'')<(vt1.c0))) FROM rt1 WHERE (MAX(CAST(NULL AS REAL), (('611481266')IS(0.6694594534678503)))) GROUP BY CASE (- (rt1.c0))  WHEN (+ (vt1.c0)) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c0)) ELSE CAST(rt1.c0 AS BLOB) END ORDER BY (~ (((vt1.c0) NOT NULL))) DESC;SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 WHERE ((~ (((x'bb55') NOT BETWEEN (0.427960011952669) AND ('-1918270484'))))); -- 0ms;
SELECT ALL (((rt1.c2 IN (vt1.c0)))>=(CAST(NULL AS NUMERIC))) FROM rt1;SELECT DISTINCT SQLITE_COMPILEOPTION_USED((((rt1.c1))<=((vt1.c0)))) FROM rt1 WHERE (((((0x70befcaa) IS TRUE))%(CASE WHEN x'' THEN NULL ELSE -655299169 END)));SELECT CHANGES() FROM rt1, vt1; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1 WHERE (((CAST('	}HgN\n' AS TEXT)) ISNULL)); -- 0ms;
SELECT DISTINCT ((((NULL, rt1.c1, 0x270d6db5)) BETWEEN ((rt1.c0, rt1.c0, vt1.c0)) AND ((rt1.c0, NULL, rt1.c0))) IN ()) FROM vt1 WHERE ((((x'' IN (x''))) BETWEEN (('UHM^5' IN (0.4528637645301947, NULL))) AND (SUBSTR(-1099889149, NULL)))); -- 0ms;
SELECT DISTINCT CAST(rt1.c1 AS NUMERIC) COLLATE NOCASE, -1.099889149E9, ((((((((NULL)AND(NULL)))AND(rt1.c2)))OR(((rt1.c1) BETWEEN (NULL) AND (vt1.c0)))))AND((((rt1.c1)) BETWEEN ((0.24395973058400588)) AND ((rt1.c2))))) FROM vt1, rt1 GROUP BY ((((rt1.c0) NOT NULL)) IS TRUE); -- 0ms;
SELECT DISTINCT ((NULL)&(x'' COLLATE RTRIM)) FROM vt1, rt1; -- 1ms;
SELECT DISTINCT (GROUP_CONCAT(rt1.c0) IN (TOTAL(rt1.c2))), MAX(rt1.c2), (((vt1.c0)) NOT BETWEEN ((NULL)) AND ((((rt1.c1)/(rt1.c1))))) FROM vt1 WHERE (((((x'')%(0.09047117251892878))) ISNULL)) ORDER BY CASE CASE rt1.c2  WHEN vt1.c0 THEN rt1.c0 ELSE vt1.c0 END  WHEN CASE rt1.c0  WHEN rt1.c2 THEN 0.896931948071746 ELSE rt1.c0 END THEN (vt1.c0 IN (rt1.c1, rt1.c0)) WHEN ((((rt1.c1)OR(vt1.c0)))AND(rt1.c2)) THEN CAST(rt1.c1 AS BLOB) WHEN NULL THEN (((rt1.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) END;SELECT ALL (('-1802335258') NOT NULL) FROM vt1 LIMIT -261584804 OFFSET -1226604690; -- 0ms;
SELECT DISTINCT ((((rt1.c1)>=(rt1.c2))) NOT NULL) FROM rt1, vt1; -- 0ms;
SELECT ALL MAX(LOWER(0.4532077090093629)) FROM vt1, rt1 WHERE (UPPER(DISTINCT (((1737901977)) NOT BETWEEN ((NULL)) AND (('UHMY5'))))); -- 0ms;
SELECT ALL (NOT ('-1907942401')) FROM rt1 WHERE (((CAST(NULL AS BLOB))AND(((x'') ISNULL)))) ORDER BY (NOT (((rt1.c2) NOT BETWEEN (NULL) AND (rt1.c2))))  NULLS LAST; -- 0ms;
SELECT (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN rt1.c1 END)) AND ((((vt1.c0)==(rt1.c1))))) FROM rt1, vt1 WHERE ((((x'') BETWEEN (0.877651833402548) AND (x'')) IN ())); -- 0ms;
SELECT ALL NULLIF(((rt1.c1)>(rt1.c1)), '') FROM rt1, vt1; -- 0ms;
SELECT MIN(rt1.c0) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT CASE ((((rt1.c0)AND(rt1.c2)))OR(vt1.c0))  WHEN ((rt1.c2) NOTNULL) THEN ((vt1.c0)<=(vt1.c0)) ELSE x'' END FROM vt1, rt1 WHERE (CASE WHEN ((((((((NULL)AND(NULL)))AND(x'')))OR(0.6027364023720791)))OR(NULL)) THEN CAST(x'' AS REAL) ELSE (NULL IN ()) END); -- 0ms;
SELECT (+ (((vt1.c0) IS TRUE))), json_array_length(ROUND(rt1.c1, rt1.c1)), ((((((rt1.c2)<(NULL)))AND((rt1.c1 IN ()))))AND(((x'') ISNULL))) FROM rt1;SELECT CASE WHEN vt1.c0 COLLATE RTRIM THEN (~ (rt1.c1)) WHEN ((vt1.c0)&(rt1.c0)) THEN ((((((((rt1.c2)AND(rt1.c0)))AND(vt1.c0)))OR(rt1.c1)))OR(rt1.c2)) WHEN ((((vt1.c0)AND(rt1.c0)))OR(rt1.c1)) THEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c2 WHEN 0x222e92e1 THEN vt1.c0 END ELSE rt1.c0 END, MIN(rt1.c1 COLLATE NOCASE COLLATE RTRIM), (((rt1.c2) IS TRUE) IN (CASE rt1.c0  WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN vt1.c0 END)), TOTAL(x'') OVER (), CAST(rt1.c2 COLLATE BINARY AS INTEGER) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT CASE WHEN json_type(vt1.c0) THEN rt1.c0 COLLATE RTRIM END FROM rt1 WHERE (((((x'be17')OR(x'baf0')))AND(x'eb78')) COLLATE NOCASE);SELECT DISTINCT GROUP_CONCAT(SUM((NOT (rt1.c2)))), json_remove('0.8475268957488504', NULL), vt1.c0 FROM vt1 CROSS JOIN rt1 ON ((rt1.c1)&((- (NULL)))) WHERE (CASE CASE WHEN 0.24252292454600222 THEN NULL WHEN x'' THEN '1674170676' WHEN x'' THEN 'E뗃' ELSE NULL END  WHEN ((('74014303'))>=((NULL))) THEN NULL COLLATE NOCASE WHEN ((0.26477470612142473)>=(0.896931948071746)) THEN (('')GLOB('1891564714')) WHEN COALESCE(DISTINCT 'v2', 'P', NULL, NULL) THEN ((x'')IS(x'421b')) WHEN (('T7y\dg') IS FALSE) THEN HEX(DISTINCT 'D唝') WHEN ABS(x'') THEN (((x''))>((NULL))) ELSE NULL END) LIMIT -1802335258 OFFSET 881433818;SELECT ALL ((((rt1.c2)==(rt1.c0)))<>(((vt1.c0)|(rt1.c0)))) FROM vt1 WHERE (((((NULL COLLATE NOCASE)AND(((-592594950) IS FALSE))))OR(CASE WHEN 0.12415184047449646 THEN '188732516' WHEN NULL THEN 0.19630675427510635 WHEN -1.511575489E9 THEN NULL ELSE 0.9202011896164887 END)));SELECT DISTINCT DATETIME(((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)), (+ ('o''')), ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2))) FROM vt1, rt1 LIMIT -1539957313 OFFSET -2032372021; -- 0ms;
SELECT rt1.c1 FROM vt1, rt1; -- 0ms;
SELECT ALL ((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))) IN ()) FROM vt1 LIMIT 1377796865; -- 0ms;
SELECT CAST(COUNT(*) AS REAL), (((MIN(vt1.c0)))>=((rt1.c0))), ((((vt1.c0) IS TRUE))<(rt1.c0 COLLATE BINARY)) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT (((((rt1.c1)IS(rt1.c0))))<=((CASE rt1.c0  WHEN x'' THEN rt1.c0 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c0 END))) FROM rt1;SELECT DISTINCT ((((rt1.c2) IS TRUE))<((~ (vt1.c0)))) FROM vt1;SELECT DISTINCT GROUP_CONCAT(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c2))), json_array_length((((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))), (rt1.c2 IN ())), NULL FROM rt1 WHERE ((((x'', NULL, x'')) BETWEEN ((((((0.30423968412233116)AND('1180503444')))OR(-1.180237955E9)), '-299346300', (0.009108501334812225 IN ()))) AND (((NULL IN ()), CASE NULL  WHEN NULL THEN NULL END, CAST('-592594950' AS BLOB))))) GROUP BY ((rt1.c1 COLLATE NOCASE)/(((vt1.c0)IS(rt1.c0)))), ((((((rt1.c2)OR(rt1.c1)))OR(rt1.c1)))AND(((((0.830837982805996)AND(rt1.c1)))AND(rt1.c0)))), (NOT (CAST(vt1.c0 AS BLOB))) HAVING (((rt1.c1)) BETWEEN ((((rt1.c2)+(NULL)))) AND ((((rt1.c1)<(x'')))));SELECT rt1.c0 FROM vt1, rt1 WHERE (NULLIF(DISTINCT ((x'')==('154781620')), CAST(NULL AS INTEGER))); -- 1ms;
SELECT ALL CASE WHEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))) THEN '' END FROM rt1 WHERE ((COALESCE(NULL, 0.25951818570549556, '', NULL, NULL, 'CNG u') IN ())) ORDER BY (((rt1.c0, rt1.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, TRIM(DISTINCT rt1.c1, 0Xffffffffb227a080), ((rt1.c1) NOT BETWEEN (rt1.c2) AND ('-299346300')))) AND (((0.6364512408615115 IN ()), (((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c0))), rt1.c1 COLLATE BINARY)))  NULLS FIRST;SELECT DISTINCT ((((rt1.c2 IN ())))<=((((rt1.c2)||(vt1.c0))))) FROM rt1;SELECT COUNT(((vt1.c0)AND(rt1.c1))) OVER (), CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END THEN rt1.c2 END, TOTAL(((x'') NOT BETWEEN (vt1.c0) AND ('749920157'))) OVER ( ORDER BY (((CASE WHEN rt1.c2 THEN rt1.c0 WHEN 1.5478162E8 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 END, ((vt1.c0)|(vt1.c0)), ((rt1.c2)||(vt1.c0))))>=((UPPER(DISTINCT rt1.c1), '2j%,', NULLIF(DISTINCT rt1.c1, rt1.c0)))) ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt1, rt1; -- 2ms;
SELECT ((UNICODE(7.4014303E7)) NOT BETWEEN ((+ (rt1.c0))) AND (x'')) FROM rt1, vt1; -- 0ms;
SELECT (((vt1.c0))>((rt1.c0))) COLLATE NOCASE, LAST_VALUE((((((((-1.802335258E9))<=((vt1.c0))))AND((('cYZ,	') NOT BETWEEN (rt1.c1) AND (rt1.c1)))))AND(((rt1.c2)>>(x'82a55f71'))))) OVER ( ORDER BY ((NOT (rt1.c0)) IN ((((rt1.c2, rt1.c2, rt1.c2)) NOT BETWEEN ((rt1.c1, rt1.c2, NULL)) AND ((rt1.c1, rt1.c2, vt1.c0)))))), ((((rt1.c0)!=(rt1.c0))) IS TRUE) FROM vt1, rt1; -- 0ms;
SELECT ALL CAST(((NULL) NOTNULL) AS REAL), ((((((((((((((vt1.c0)AND(rt1.c2)))AND(rt1.c1)))AND(vt1.c0)))OR(rt1.c0)))OR(rt1.c1)))AND(vt1.c0))) BETWEEN (((rt1.c2)GLOB(rt1.c2))) AND (UNLIKELY(rt1.c0))), TOTAL(rt1.c0) OVER ( ROWS CASE WHEN ((((rt1.c1)AND(vt1.c0)))OR(rt1.c2)) THEN rt1.c0 COLLATE NOCASE ELSE UPPER(rt1.c1) END PRECEDING EXCLUDE TIES) FROM vt1, rt1 WHERE (((0.7929462840315455 COLLATE BINARY)-(0X465d0d94 COLLATE NOCASE)));SELECT DISTINCT ((((((((-632033973)AND(((((((((((((vt1.c0)OR(rt1.c2)))AND(vt1.c0)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))))OR((x'' IN ()))))OR(CAST(183599534 AS BLOB))))AND((((x'')) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE BINARY)|(((rt1.c0)=(rt1.c1)))) FROM rt1, vt1; -- 0ms;
SELECT ALL CASE CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END  WHEN CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END THEN ((((((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c2)))AND(rt1.c1)))AND('Lo')) ELSE ((vt1.c0)=(vt1.c0)) END FROM rt1;SELECT DISTINCT (((~ (rt1.c2))) NOT BETWEEN (QUOTE(rt1.c1)) AND (((((rt1.c2)OR(rt1.c2)))AND(rt1.c2)))) FROM vt1 LIMIT 852392830;SELECT ((rt1.c2 IN (rt1.c1)) IN (rt1.c0 COLLATE RTRIM)), (((rt1.c2 IN ())) NOT BETWEEN (((NULL) NOTNULL)) AND (rt1.c1)), rt1.c2 FROM rt1, vt1 GROUP BY (((- (rt1.c2)))LIKE(rt1.c2 COLLATE RTRIM)); -- 1ms;
SELECT ((((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)))OR(((x'')AND(rt1.c2)))))OR(CASE WHEN rt1.c0 THEN 0Xffffffffe68c1c94 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c2 END)), NULL, ((rt1.c2)-((rt1.c0 IN (vt1.c0)))) FROM rt1, vt1 WHERE ((((((((((- (x'')))AND(((('-1802335258', '145062452', NULL)) BETWEEN ((x'916e', NULL, x'')) AND (('', '225044507', 'hX'))))))AND(-4.10111044E8 COLLATE NOCASE)))OR((((('')OR(x'4c60')))OR(0.3198808685705753)))))AND(CASE 'CYZ,	'  WHEN NULL THEN x'' WHEN 0x4bca6525 THEN x'9926' WHEN '1753967102' THEN '188732516' END))); -- 0ms;
SELECT DISTINCT ((+ (rt1.c0)) IN ()) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c2)OR(rt1.c1)))AND(rt1.c2))) ISNULL) FROM rt1 GROUP BY (((rt1.c1 IN ()))>=(((((((((((((vt1.c0)AND(rt1.c2)))AND(rt1.c2)))OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c0)))OR(rt1.c2)))), CAST(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2)) AS REAL), ((TYPEOF(x'')) BETWEEN ((rt1.c0 IN ())) AND (NULLIF(rt1.c2, rt1.c0))) HAVING (((((('k4jox'))>((rt1.c1)))))<=((((rt1.c2)/(NULL)))));SELECT DISTINCT (((rt1.c0 IN ())) BETWEEN ((((vt1.c0))==((0.8305199187992751)))) AND (((rt1.c2)>>(rt1.c1)))), COUNT(((((((((vt1.c0)AND(vt1.c0)))AND(rt1.c0)))OR(rt1.c2)))OR(rt1.c1)) COLLATE BINARY) OVER (), ((rt1.c2)||(vt1.c0)) COLLATE BINARY FROM vt1;SELECT ALL AVG(rt1.c2) OVER () FROM vt1;SELECT DISTINCT COALESCE(CAST(NULL AS INTEGER), (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0)))) FROM rt1, vt1 WHERE (((((-1633026103)+(NULL))) IS FALSE)) GROUP BY ((rt1.c2 COLLATE RTRIM)<<(CAST(x'' AS TEXT))); -- 0ms;
SELECT ALL CASE (((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c1)))  WHEN SUM(rt1.c2) THEN ((((((((((((vt1.c0)AND(x'')))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c1)))OR(vt1.c0)))OR(vt1.c0)) ELSE ((NULL) BETWEEN (vt1.c0) AND (rt1.c0)) END, ((rt1.c0)GLOB(rt1.c0)) COLLATE BINARY COLLATE BINARY, ((((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)))<=((NOT (vt1.c0)))) FROM vt1, rt1; -- 0ms;
SELECT ALL x'' FROM vt1, rt1 LIMIT 758372440; -- 0ms;
SELECT DISTINCT ((CASE rt1.c2  WHEN '1721876859' THEN rt1.c0 WHEN rt1.c2 THEN 0.8484019385567273 WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c2 END) NOT BETWEEN ((((vt1.c0))=((rt1.c2)))) AND (((rt1.c2)LIKE(rt1.c0)))) FROM vt1 WHERE (CASE TRIM(x'')  WHEN (0.6224025709253481 IN ()) THEN ((((x'')AND('0')))AND('Z')) WHEN (('C{') IS FALSE) THEN ((NULL)==(0.4201645246938749)) WHEN CAST(0.4963288627844832 AS BLOB) THEN (((NULL, NULL, NULL))>((NULL, 0.5618140922171015, '1086202948'))) ELSE LIKELY(DISTINCT -1940423744) END);SELECT ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)))))OR(((rt1.c2)LIKE(rt1.c2)))) FROM vt1;SELECT ALL ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((vt1.c0) NOT BETWEEN (rt1.c2) AND (vt1.c0))) AND (((rt1.c2)<=(vt1.c0)))) FROM rt1, vt1; -- 0ms;
SELECT NULLIF(((((((((rt1.c1)OR(vt1.c0)))AND(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)), ((vt1.c0)+(vt1.c0))), CAST((((rt1.c1))>=((rt1.c1))) AS REAL), ((((x'd391')+(-1670123207)))<<(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c0 END)) FROM vt1 WHERE ((((((x'e80a'))>(('1176617756'))))OR((((('1737901977')AND(x'')))AND('p.')))));SELECT (((((vt1.c0))<=((rt1.c2)))) NOT BETWEEN (CAST(rt1.c2 AS INTEGER)) AND ((NOT (vt1.c0)))) FROM vt1, rt1 WHERE (((((NULL) NOT BETWEEN ('1?GJ%?^u') AND (0Xfffffffffc8ce26e)))<=((('[O') IS FALSE)))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS NUMERIC)) NOT BETWEEN (((rt1.c1) IS TRUE)) AND (CAST(vt1.c0 AS REAL))) FROM rt1, vt1; -- 1ms;
SELECT ROW_NUMBER() OVER (), rt1.c2, ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN 'Sv%y\r' THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c2 END) NOT BETWEEN (((rt1.c1)/(rt1.c2))) AND (((((((((rt1.c0)OR(vt1.c0)))AND(rt1.c2)))AND(vt1.c0)))OR(rt1.c2)))) FROM rt1 WHERE (-1982280756);SELECT ALL SUM(((((((((rt1.c1)AND(-1306025856)))AND(rt1.c0)))OR(rt1.c1)))AND(rt1.c2))) FROM rt1, vt1 WHERE (CASE WHEN ((0.06452653454220802) ISNULL) THEN IFNULL(DISTINCT '0.9202011896164887', NULL) END); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND NULL PRECEDING) FROM rt1, vt1 GROUP BY CAST((+ (rt1.c0)) AS BLOB), ((((((((('1656643416')AND(vt1.c0)))AND(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)) IN ()), (((((rt1.c1))>((rt1.c0)))) NOT BETWEEN (((rt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND ((((rt1.c0, rt1.c1, NULL)) NOT BETWEEN ((rt1.c1, rt1.c2, x'')) AND ((rt1.c0, rt1.c2, vt1.c0))))); -- 0ms;
SELECT DISTINCT MIN(((((((((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)))AND(rt1.c0)))OR(rt1.c1)))AND(vt1.c0)))AND(vt1.c0))) FROM rt1;SELECT ALL CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE vt1.c0 END COLLATE RTRIM FROM vt1, rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT((((rt1.c0, NULL, vt1.c0))>=((rt1.c1, '6tG&Z}i', vt1.c0)))), FIRST_VALUE(CASE WHEN CASE WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END THEN ((rt1.c1) NOT NULL) ELSE (rt1.c2 IN ()) END) OVER (), ((CAST(rt1.c0 AS TEXT))-((rt1.c1 IN (NULL)))) FROM rt1 WHERE (NULL);SELECT CASE WHEN ((vt1.c0)OR(vt1.c0)) THEN (NOT (vt1.c0)) WHEN ABS(rt1.c0) THEN rt1.c0 WHEN ((rt1.c2)IS NOT(rt1.c1)) THEN GROUP_CONCAT(rt1.c0) ELSE (vt1.c0 IN ()) END FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((0.8299224883310137) NOT BETWEEN (((rt1.c1)<=(rt1.c1))) AND (rt1.c0 COLLATE BINARY)), SUM(ABS(DISTINCT rt1.c1)), 0.7314661963240738, ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END) NOT BETWEEN (COUNT(*)) AND (((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)))), (((vt1.c0 IN ()))GLOB(CAST(rt1.c1 AS BLOB))) FROM rt1, vt1 WHERE ((((((((((((((('')!=('1271555365')))OR(CASE WHEN x'd9e94c0f' THEN '-1242198039' ELSE NULL END)))AND(((x'') NOT BETWEEN ('') AND (x'')))))OR((0.08536554900267701 IN ()))))OR((NULL IN ('', x'9afd')))))OR((- (0Xffffffffe5282aa5)))))AND(NULL COLLATE BINARY))); -- 1ms;
SELECT DISTINCT ((IFNULL(DISTINCT rt1.c1, rt1.c0))<<(((((rt1.c1)AND(rt1.c0)))OR(vt1.c0)))) FROM rt1;SELECT ((CASE rt1.c0  WHEN rt1.c0 THEN NULL WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c2 END)>=(CAST(rt1.c2 AS NUMERIC))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT x'' FROM vt1 WHERE ('1280621011'); -- 0ms;
SELECT DISTINCT (+ ((- (rt1.c0)))), COALESCE(rt1.c0, rt1.c1) COLLATE BINARY, ((NULL)-(((rt1.c2) NOTNULL))) FROM rt1 GROUP BY CAST(CAST(rt1.c1 AS TEXT) AS INTEGER), LIKELIHOOD((~ (rt1.c2)), 0.9594393299348712), '' HAVING ((((((vt1.c0)OR(x'')))AND(rt1.c1))) IS FALSE);SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt1.c2) AND (NULL)))AND(((vt1.c0)-(rt1.c2)))) FROM vt1;SELECT DISTINCT ((-6.55299169E8) NOT BETWEEN ((- (rt1.c1))) AND (rt1.c0)), ((((rt1.c1) IS FALSE)) IS TRUE), CUME_DIST() OVER ( ORDER BY (((((rt1.c1, vt1.c0, rt1.c0)) BETWEEN ((rt1.c0, rt1.c1, '[O')) AND ((x'e780', vt1.c0, '\	-4X')))) IS TRUE) DESC  NULLS LAST), CASE WHEN (rt1.c1 IN ()) THEN ((((rt1.c2)AND(vt1.c0)))AND(rt1.c1)) WHEN 'vH' COLLATE NOCASE THEN ((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt1.c1)LIKE(vt1.c0)) THEN ((rt1.c0)LIKE(rt1.c1)) END, (((NOT (rt1.c2)))IS(CASE rt1.c2  WHEN 0.5510838801179975 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE vt1.c0 END)), CAST((+ (rt1.c2)) AS NUMERIC), CASE WHEN -1.297057564E9 THEN rt1.c1 COLLATE NOCASE WHEN ((rt1.c1) BETWEEN ('IuI푙.M狷') AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2)) WHEN ((rt1.c2)%(rt1.c2)) THEN INSTR(rt1.c1, x'') END FROM rt1, vt1 WHERE ((('-925261306')LIKE(NULL)) COLLATE BINARY) GROUP BY ((((rt1.c2)*(rt1.c0))) IS TRUE), (~ (rt1.c1 COLLATE RTRIM)), ((((0.5510838801179975)OR(((((((((rt1.c0)AND(rt1.c1)))OR(rt1.c2)))AND(vt1.c0)))AND(vt1.c0)))))OR(((rt1.c1)<=(rt1.c2)))) HAVING CAST(((vt1.c0)*(rt1.c0)) AS INTEGER); -- 0ms;
SELECT COUNT(*) OVER ( PARTITION BY (((rt1.c2)+(rt1.c1)) IN ()), ((((rt1.c1)<=(vt1.c0)))|(rt1.c2))) FROM rt1 WHERE (CAST(SQLITE_VERSION() AS TEXT));SELECT DISTINCT (((x'f572' IN (vt1.c0, rt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2))) AND ((rt1.c1 IN (rt1.c2)))), ((((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c2)))||(((rt1.c1)<<(rt1.c1)))), GROUP_CONCAT((((rt1.c0))<>((rt1.c2)))) OVER ( ROWS ((NULL)||(((((((((vt1.c0)AND(rt1.c1)))OR(vt1.c0)))AND(vt1.c0)))AND(rt1.c2)))) PRECEDING) FROM vt1, rt1 WHERE ((((0.3856111329598034 IN (1618572700))) BETWEEN ((NOT (NULL))) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT ALL DENSE_RANK() OVER (), '-743133272', COUNT(((rt1.c0)<=(rt1.c0))) FROM vt1, rt1 WHERE (0.5224640290442146); -- 1ms;
SELECT ALL ((COUNT(vt1.c0)) IS FALSE) FROM rt1, vt1 WHERE ((~ ((('I1B[\n/僳')OR(x'9826'))))) ORDER BY LIKELIHOOD(DISTINCT CASE vt1.c0  WHEN vt1.c0 THEN rt1.c2 END, 0.9230063988855238); -- 0ms;
SELECT DISTINCT (rt1.c0 IN ()), ((((0.09047117251892878)IS(rt1.c2))) BETWEEN (((x'')>=(rt1.c2))) AND (UPPER(vt1.c0))), ((((((1093244970) IS FALSE))OR('c/')))OR(CAST(rt1.c0 AS NUMERIC))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2)>(rt1.c1)))|(rt1.c2 COLLATE NOCASE)), ((CASE rt1.c0  WHEN 0.7824727228553193 THEN vt1.c0 END)IS(((((rt1.c0)OR(vt1.c0)))AND(rt1.c0)))), CHANGES() FROM rt1 WHERE (((((((((0.29145502756476593)OR(((x'') NOTNULL))))AND((((x''))>((0.5571514268700836))))))OR(((x'')%(',z쌊I#j6')))))OR(IFNULL(NULL, -5.65483669E8)))) LIMIT -1158668629;SELECT ((((x'cf0b')AND(((rt1.c0)<(rt1.c0)))))AND(rt1.c1)) FROM rt1 WHERE ((((((((NULL)OR(x'574c')))OR('-551525155')), (((0.24998763648876077))=((0.3710343858695323))), CAST(x'' AS REAL)))>((CAST(NULL AS TEXT), CAST(NULL AS TEXT), ((-1.511575489E9) NOT BETWEEN ('-592594950') AND (NULL)))))) EXCEPT SELECT (((-8.86875205E8, rt1.c0, 'P/!')) BETWEEN ((MAX(rt1.c2), ((rt1.c2) NOT BETWEEN (vt1.c0) AND ('-907229168')), (((rt1.c1, rt1.c1, '')) BETWEEN ((rt1.c1, rt1.c2, '[)')) AND ((rt1.c0, rt1.c0, 'cgˢ⅕\r'))))) AND (('h', ((vt1.c0)+(vt1.c0)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c1))))) FROM vt1;SELECT DISTINCT TOTAL(CASE WHEN rt1.c0 THEN rt1.c0 WHEN x'9cfd' THEN 'TsvfMbY*w' WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END) OVER () FROM rt1 LIMIT -1123709137; -- 0ms;
SELECT ALL vt1.c0 FROM vt1, rt1 WHERE (HEX((((x'6c40')) NOT BETWEEN (('')) AND (('469250285'))))); -- 0ms;
SELECT DISTINCT (((rt1.c1))!=((rt1.c1))) COLLATE RTRIM FROM vt1, rt1 WHERE (LIKELY(CASE WHEN x'' THEN x'9641' END)) GROUP BY (NOT (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))); -- 0ms;
SELECT DISTINCT ((((rt1.c2)<=(vt1.c0))) NOT BETWEEN (((x'') IS FALSE)) AND (((rt1.c2) IS FALSE))) FROM rt1 WHERE ((((655191477) BETWEEN (NULL) AND (x'')) IN (((x'') NOT BETWEEN (0.5153275580070122) AND ('1589640674')))));SELECT ALL CAST(((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)) AS NUMERIC) FROM vt1;SELECT DISTINCT ((('	<y>?zsTI')) NOT BETWEEN (((((rt1.c1))<((rt1.c2))))) AND ((((vt1.c0) IS TRUE)))) FROM vt1, rt1 WHERE ((((('-1727448732') NOTNULL)) NOT NULL)) ORDER BY ((rt1.c0) BETWEEN (vt1.c0) AND (NULL)) COLLATE BINARY DESC; -- 0ms;
SELECT ALL rt1.c0 COLLATE BINARY FROM rt1, vt1 WHERE (((0.009108501334812225 COLLATE NOCASE)>(IFNULL(x'', '0.06452653454220802')))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt1 WHERE (((((('{幟')) BETWEEN ((x'ecd3')) AND (('473342027')))) NOT BETWEEN ('65)d,y' COLLATE BINARY) AND (-1.633026103E9 COLLATE RTRIM))); -- 0ms;
SELECT ALL (((((rt1.c0))<=((vt1.c0))))>(0.9516102922100372)) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM rt1, vt1 WHERE ((NOT (CAST(0x15881f99 AS TEXT)))); -- 1ms;
SELECT ALL TOTAL('-916263180') FROM rt1; -- 0ms;
SELECT DISTINCT ((CASE 0xffffffffe5282aa5  WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 WHEN vt1.c0 THEN '1176617756' ELSE vt1.c0 END)=(COUNT(*))), vt1.c0, ((((CASE WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END)OR(CAST(rt1.c0 AS INTEGER))))OR((- (NULL)))) FROM vt1;SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((((NULL) IS TRUE))) AND ((0Xffffffffc5a7a21b))) FROM rt1, vt1; -- 0ms;
SELECT (((rt1.c1)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))) AND (('-1296979605'))) FROM rt1;SELECT ((((rt1.c0)-(rt1.c1))) NOTNULL), ((((rt1.c2)>(rt1.c2)))IS((~ (rt1.c2)))), CAST(((((x'')OR(rt1.c2)))OR(rt1.c1)) AS BLOB) FROM rt1; -- 0ms;
SELECT DISTINCT CAST('_' AS BLOB), ((((((((rt1.c1 COLLATE RTRIM)OR(((rt1.c1)==(vt1.c0)))))OR(rt1.c2 COLLATE NOCASE)))OR((NOT (rt1.c1)))))AND(vt1.c0)), (((~ (rt1.c1))) ISNULL), ((rt1.c1)AND(COUNT(rt1.c2))), TOTAL((+ (rt1.c0)) COLLATE BINARY) OVER () FROM rt1, vt1 WHERE (UNLIKELY(DISTINCT ((x'')|(x'')))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)%(rt1.c1))) NOT NULL) FROM rt1, vt1 WHERE (json_array_length((((('-1372704650')AND(NULL)))AND(0.1601376844083624)))); -- 1ms;
SELECT RANK() OVER ( ORDER BY ((x'')IS((rt1.c2 IN ()))) ASC) FROM rt1; -- 0ms;
SELECT ((rt1.c2 COLLATE BINARY) BETWEEN (((rt1.c0) BETWEEN (vt1.c0) AND ('381718539'))) AND (((rt1.c0)IS(rt1.c2)))) FROM vt1, rt1 WHERE ((((NULL)>>(NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((((('998233177')) BETWEEN ((rt1.c0)) AND ((rt1.c2)))) NOT BETWEEN (rt1.c2) AND (CASE rt1.c0  WHEN rt1.c2 THEN '1271555365' WHEN '-9223372036854775808' THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)) FROM vt1, rt1 LIMIT -786448539; -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt1, rt1 WHERE ((((0.691225513014309)) NOT BETWEEN ((((0.9962428142450306) NOT BETWEEN ('188732516') AND ('뿳!')))) AND ((((x'24489260') IS FALSE))))); -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c0)>=(rt1.c2))) FROM vt1;SELECT MIN(CAST(rt1.c2 AS BLOB) COLLATE BINARY) FROM rt1, vt1; -- 0ms;
SELECT ALL ((((rt1.c2)>(vt1.c0))) NOTNULL) FROM vt1 WHERE (CASE WHEN ((x'') BETWEEN (x'') AND (-1714625231)) THEN (('-1927927150')||(0.920937984713496)) ELSE ((0.13462147776919653)!=(0.30252072076641334)) END);SELECT (((IFNULL(DISTINCT rt1.c0, NULL), (((rt1.c1))<((rt1.c0))), ((((((((((((rt1.c1)AND('3Q4s')))AND(rt1.c1)))AND(rt1.c1)))AND(rt1.c2)))AND(x'')))OR(rt1.c2))))>((CASE WHEN vt1.c0 THEN rt1.c1 END, ((((((((rt1.c2)AND(rt1.c1)))OR(x'')))AND(vt1.c0)))OR(rt1.c2)), CAST(vt1.c0 AS TEXT)))) FROM vt1 WHERE (((((((((((0.8546592345203298)*('\r''&\')))OR(((0.9279990226658993)&(x'')))))AND((0.5317940788120403 IN ()))))OR(CASE NULL  WHEN '' THEN 0.7813394594107189 END)))AND(CAST(-2.128690163E9 AS BLOB)))) ORDER BY (((rt1.c1)) NOT BETWEEN ((-1.180237955E9)) AND ((x''))) COLLATE RTRIM;SELECT ALL (rt1.c2 COLLATE BINARY IN ()) FROM rt1, vt1 GROUP BY ((((rt1.c0) IS TRUE))IS(CASE vt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END)); -- 0ms;
SELECT DISTINCT (+ ((- (rt1.c2)))) FROM rt1, vt1; -- 0ms;
SELECT CASE ((((vt1.c0)AND(0.7896084155619426)))OR(vt1.c0))  WHEN ((rt1.c2) IS FALSE) THEN (rt1.c2 IN ()) END, AVG(0.5148559161220341), ((((rt1.c1) IS FALSE))+(((rt1.c2)>=(rt1.c0)))) FROM vt1, rt1 WHERE ((((+ (NULL))) ISNULL)) GROUP BY '-1895451955', (((rt1.c2)>=(vt1.c0)) IN ()), ((rt1.c1) BETWEEN (((NULL)IS(rt1.c2))) AND (rt1.c1)) HAVING CAST(((rt1.c1) NOTNULL) AS TEXT); -- 1ms;
SELECT DISTINCT ((((((((((((IFNULL(DISTINCT '0.40588965960200973', rt1.c0))AND(rt1.c2)))AND(TRIM(DISTINCT rt1.c0, vt1.c0))))OR(((rt1.c2)>>(rt1.c1)))))AND(((vt1.c0) NOT NULL))))OR(json_array(rt1.c0, rt1.c1, rt1.c0, x'', vt1.c0, rt1.c2))))OR(rt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (CAST(CHANGES() AS NUMERIC));SELECT DISTINCT (((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0))))<((((x'70ad') NOT NULL)))) FROM vt1;SELECT (NOT (CAST(rt1.c1 AS BLOB))) FROM vt1;SELECT (NOT (rt1.c1)) FROM vt1 WHERE (0Xffffffffd4852bfb COLLATE BINARY);SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT ALL LOWER(DISTINCT CAST(rt1.c2 AS INTEGER)) FROM vt1 WHERE ((CAST('-1242198039' AS TEXT) IN ())) GROUP BY -2.993463E8 HAVING CAST(rt1.c1 AS REAL);SELECT DISTINCT NULL FROM rt1, vt1 WHERE ((('lCM') BETWEEN ((((('+wl䞙~Q,b#')OR(x'')))OR(x'7157'))) AND (-7.31610779E8 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ())) NOT BETWEEN ((((vt1.c0, rt1.c1, rt1.c2)) BETWEEN ((rt1.c2, rt1.c2, rt1.c0)) AND ((vt1.c0, vt1.c0, rt1.c1)))) AND (vt1.c0 COLLATE RTRIM)) FROM vt1 ORDER BY ((((vt1.c0)OR(((rt1.c2)||(rt1.c2)))))AND(rt1.c1 COLLATE RTRIM))  NULLS LAST;SELECT FIRST_VALUE((((rt1.c2)) BETWEEN (((~ (rt1.c0)))) AND ((ABS(rt1.c2))))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (((NULL IN ())) IS TRUE) FROM vt1 LIMIT -1847666705; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c0) IS TRUE)) OVER (), LAG((rt1.c0 IN ()), CASE WHEN rt1.c2 COLLATE RTRIM THEN CASE WHEN rt1.c2 THEN rt1.c1 END WHEN (rt1.c1 IN (rt1.c0, rt1.c1)) THEN CAST('' AS REAL) WHEN CAST(rt1.c0 AS INTEGER) THEN rt1.c0 WHEN (rt1.c1 IN (vt1.c0)) THEN (- (rt1.c1)) WHEN rt1.c0 COLLATE BINARY THEN (((((((('-412314204')OR(rt1.c0)))OR(vt1.c0)))AND(rt1.c0)))OR(rt1.c1)) ELSE CASE rt1.c2  WHEN rt1.c1 THEN '' WHEN rt1.c2 THEN 0.3569856416592686 WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END END, ((UPPER(rt1.c2)) NOT BETWEEN ((rt1.c2 IN (rt1.c2))) AND ((rt1.c0 IN ())))) OVER (), ABS(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c1))) FROM rt1, vt1 WHERE (((NULL) BETWEEN ('oC') AND (x'')) COLLATE NOCASE); -- 1ms;
SELECT ALL ((((((rt1.c1)AND(rt1.c2)))AND(rt1.c0)))%(CAST(-1779280800 AS INTEGER))) FROM rt1; -- 0ms;
SELECT rt1.c2 FROM vt1 WHERE ((((x'' IN (NULL, x'')))*((((x''))!=((x''))))));SELECT DISTINCT TOTAL(((NULL)>=(rt1.c1))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt1, vt1 WHERE (236077738); -- 0ms;
SELECT DISTINCT LEAD((+ (((NULL)||(0Xfc27c5)))), ((CASE rt1.c2  WHEN rt1.c0 THEN -828292475 END) ISNULL), CAST((((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0))) AS TEXT)) OVER () FROM rt1 WHERE (CASE WHEN '1656643416' COLLATE RTRIM THEN (('-1800656552')*(-187627049)) ELSE (('-2100159781') IS TRUE) END); -- 0ms;
SELECT (((NULL IN ())) BETWEEN (vt1.c0) AND (COUNT(rt1.c1))), (((rt1.c1)) BETWEEN ((((vt1.c0)GLOB(rt1.c1)))) AND (((rt1.c1 IN (rt1.c1))))), (((rt1.c1 COLLATE NOCASE))<((((rt1.c2) NOT BETWEEN (-1.563179278E9) AND (rt1.c0))))) FROM vt1, rt1 WHERE (((CAST(0.3525347274090186 AS REAL)) NOT BETWEEN ((- ('Mvid|'))) AND ((('90435699')IS NOT(1.3611901E8))))); -- 1ms;
SELECT DISTINCT rt1.c2 FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((((((x'9367')OR(rt1.c0)))OR(vt1.c0))) BETWEEN ((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1)))) AND ((((rt1.c2))!=((NULL))))) FROM rt1, vt1 WHERE ((((('')>=(NULL)))<>((NOT (''))))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c0)) COLLATE BINARY COLLATE NOCASE, ((((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt1.c0)))&((rt1.c0 IN ())))) OVER () FROM rt1 WHERE (((('429358584' IN ())) NOT BETWEEN (((x'')-('-1727448732'))) AND (UPPER(DISTINCT x'')))) LIMIT -1742903154;SELECT CASE (rt1.c0 IN ())  WHEN vt1.c0 COLLATE RTRIM THEN ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1)) END, (((rt1.c1)) BETWEEN ((CASE vt1.c0  WHEN rt1.c2 THEN rt1.c0 END)) AND ((((((((((rt1.c0)AND(rt1.c0)))AND(rt1.c1)))OR(vt1.c0)))OR(rt1.c1))))), CASE CAST(rt1.c2 AS BLOB)  WHEN NULL THEN COUNT(rt1.c1) WHEN ((rt1.c0)>>(rt1.c2)) THEN CASE WHEN rt1.c0 THEN 'E' END WHEN ((rt1.c0)IS NOT(vt1.c0)) THEN ((rt1.c0)<<(NULL)) END FROM vt1, rt1 WHERE (CAST(('-731610779' IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (((((rt1.c1)AND(rt1.c2)))OR(vt1.c0))) AND (rt1.c2 COLLATE BINARY)) FROM rt1 WHERE (DATETIME(((('#l'))>((x''))), 'E' COLLATE NOCASE, HEX(DISTINCT -1788985410)));SELECT ((CASE vt1.c0  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (vt1.c0) AND (UPPER(DISTINCT rt1.c2))) FROM rt1, vt1; -- 0ms;
SELECT NULL FROM vt1, rt1; -- 0ms;
SELECT DISTINCT MIN((((rt1.c0, rt1.c0, rt1.c1, vt1.c0, rt1.c2)) NOT BETWEEN ((vt1.c0, rt1.c2, vt1.c0, vt1.c0, rt1.c1)) AND ((vt1.c0, vt1.c0, rt1.c0, rt1.c0, vt1.c0)))) FROM rt1;SELECT NULL FROM rt1 WHERE (((x'') NOT BETWEEN (0.5703257903371723) AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((vt1.c0)<=(rt1.c1)))=(vt1.c0 COLLATE BINARY)), TYPEOF(CAST(vt1.c0 AS REAL)), ABS(SQLITE_COMPILEOPTION_USED(rt1.c1)) FROM vt1;SELECT ('-1033363654' IN (CASE WHEN '665509079' THEN rt1.c0 ELSE rt1.c2 END)), (((rt1.c0)) NOT BETWEEN ((COALESCE(rt1.c2, rt1.c2))) AND ((vt1.c0 COLLATE RTRIM))), ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c0)) COLLATE RTRIM FROM vt1 WHERE ((((NOT ('19692503')))||(0.31919792865458196 COLLATE NOCASE)));SELECT DISTINCT (((((rt1.c1)) BETWEEN ((vt1.c0)) AND ((rt1.c1)))) ISNULL), (((rt1.c1, rt1.c1, 0.9876673337334404)) NOT BETWEEN ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c2)))OR(0.06013519253536703)))OR(rt1.c0)), (vt1.c0 IN ()), CAST(rt1.c2 AS INTEGER))) AND ((TYPEOF(rt1.c2), CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt1.c1 END, ((((x'')OR(rt1.c1)))OR(NULL))))), vt1.c0, (~ (((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c0)))), ((UNLIKELY(DISTINCT rt1.c1))<=(x'3aa9')) FROM vt1 WHERE (((CASE '1636214384'  WHEN ' \' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 'D' WHEN x'f038' THEN NULL WHEN NULL THEN 0.6563161294834695 END) BETWEEN ((('0.30423968412233116')|(0.478047701339259))) AND (NULL COLLATE BINARY))) GROUP BY LOWER(DISTINCT ((((rt1.c0)AND(rt1.c1)))AND(rt1.c1)));SELECT DISTINCT CAST((rt1.c2 IN (rt1.c0)) AS INTEGER) FROM rt1; -- 0ms;
SELECT LEAD(rt1.c1, CASE rt1.c1  WHEN ((rt1.c1)<(vt1.c0)) THEN ((rt1.c0)IS(rt1.c2)) END, NULL COLLATE RTRIM) OVER () FROM rt1, vt1 WHERE (((('' IN ()))%((0.835304778018556 IN (1.45062452E8, 0Xffffffffc2681f3a))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (rt1.c2) AND (vt1.c0))) BETWEEN (rt1.c0) AND (rt1.c2)) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((x''))) IN (rt1.c0, (+ (rt1.c0)))) FROM rt1, vt1 UNION ALL SELECT ALL rt1.c1 FROM vt1 WHERE (NULLIF(DISTINCT NULL, NULL));SELECT DISTINCT rt1.c0 COLLATE NOCASE, rt1.c0, rt1.c1 FROM rt1 WHERE ((('0.427960011952669' COLLATE RTRIM) BETWEEN (CAST(-622580503 AS BLOB)) AND (((x'') BETWEEN (NULL) AND (NULL))))) GROUP BY (- ('{}')) COLLATE RTRIM, CASE WHEN rt1.c0 COLLATE BINARY THEN (- (rt1.c1)) ELSE (~ (rt1.c2)) END, rt1.c0 LIMIT 2113823323; -- 1ms;
SELECT (NOT (CAST(rt1.c0 AS NUMERIC))), ((CAST(rt1.c2 AS BLOB))||(CAST(rt1.c0 AS REAL))), (NOT (rt1.c1)) FROM rt1, vt1 WHERE (((((('') BETWEEN (0.7234861531409634) AND (0.8782258071037006))))<=(((((NULL))<>((x''))))))) LIMIT 1176617756 OFFSET 818855954; -- 0ms;
SELECT LEAD((((rt1.c0)) BETWEEN ((((rt1.c0)%(rt1.c2)))) AND ((CASE vt1.c0  WHEN rt1.c0 THEN vt1.c0 ELSE vt1.c0 END))), (((((vt1.c0, rt1.c2, rt1.c1)) BETWEEN ((rt1.c0, rt1.c1, rt1.c0)) AND ((rt1.c1, vt1.c0, rt1.c1))))>=(json_quote(rt1.c0))), NULLIF(((rt1.c1) ISNULL), (- (rt1.c1)))) OVER (), COUNT(*) OVER (), CASE WHEN ((rt1.c0) NOT NULL) THEN COUNT(rt1.c0) END FROM rt1, vt1; -- 0ms;
SELECT DISTINCT (+ (((rt1.c2) NOT NULL))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1))<=((vt1.c0))) COLLATE RTRIM FROM rt1 WHERE (((+ (0x41801821)) IN ())) LIMIT 655191477 OFFSET 513423713;SELECT DISTINCT vt1.c0 FROM rt1, vt1 GROUP BY CAST('330185983' AS INTEGER), CASE ((((vt1.c0)AND(-1940423744)))OR(vt1.c0))  WHEN (((-7.98807093E8)) BETWEEN ((0x11352dad)) AND ((vt1.c0))) THEN CAST(rt1.c0 AS INTEGER) END, rt1.c0; -- 0ms;
SELECT DISTINCT CASE WHEN AVG(rt1.c1) THEN SUM(rt1.c1) ELSE rt1.c0 END FROM rt1 WHERE (CASE WHEN CASE WHEN 0.27035505135478055 THEN 0.896931948071746 ELSE x'' END THEN (NOT (x'')) WHEN ((x'')<=(0.4599271652958272)) THEN (('611091412') NOT BETWEEN ('JEG') AND (0.2919637328535095)) WHEN 0.8870385735639427 THEN (NOT (0x3e3930a8)) END); -- 1ms;
SELECT ALL ((0.9903493987998997)GLOB(x'b87b')) FROM vt1, rt1 NOT INDEXED; -- 0ms;
SELECT ALL COUNT(CAST(vt1.c0 AS BLOB)) FROM rt1 WHERE (((((((x'a7a3')<(711608159)))OR(((x'')<<('')))))OR(CAST('?ᇷ%' AS TEXT))));SELECT ALL (((CAST(rt1.c1 AS NUMERIC)))<>((((((vt1.c0)AND(rt1.c1)))AND(rt1.c2))))), json_remove(CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c0 END, SQLITE_VERSION(), ((rt1.c0)==(rt1.c1)), CAST(rt1.c1 AS BLOB)), (((((+ (rt1.c0)))AND(((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0)))))OR((rt1.c1 IN ()))), ((TRIM(rt1.c0))<>(((rt1.c2) NOT NULL))), (NOT ((rt1.c1 IN ()))) FROM vt1, rt1 WHERE (LIKELIHOOD(LIKELY(NULL), 0.22678466582104106)); -- 0ms;
SELECT ALL ((((rt1.c1)>>(rt1.c0))) NOTNULL) FROM rt1, vt1 WHERE (((((1.7976931348623157E308)>=(0xffffffffdab12532))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((vt1.c0 COLLATE RTRIM))!=((((vt1.c0) NOT NULL)))) FROM vt1 WHERE ((~ (0Xffffffffb214b450)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((-1.633026103E9)>=(rt1.c2))) BETWEEN (((vt1.c0)/(vt1.c0))) AND (json_array_length(vt1.c0, rt1.c1))), GROUP_CONCAT(((rt1.c1)LIKE(rt1.c0))), rt1.c2 FROM rt1, vt1 WHERE (''); -- 0ms;
SELECT NTILE(((((((vt1.c0)<=(vt1.c0)))OR(CAST(rt1.c1 AS TEXT))))AND(TRIM(DISTINCT vt1.c0, rt1.c1)))) OVER (), IFNULL(AVG(rt1.c0), (- (rt1.c0))), 1544671146 COLLATE RTRIM FROM vt1, rt1 WHERE ((+ (x'7062')));SELECT ALL (((TRIM(rt1.c0)))<(((+ (rt1.c0))))), CAST(rt1.c2 AS TEXT), COUNT(((vt1.c0)!=(rt1.c2))) FROM rt1 WHERE (CASE WHEN 'D唝' COLLATE RTRIM THEN ((NULL) NOTNULL) ELSE 0.3026983125381645 COLLATE NOCASE END);SELECT ALL SUM(rt1.c2) FROM rt1, vt1 WHERE (((((('-1130335497' IN ()))OR(LIKELY(x'a46e'))))OR((((0.6295728442731716, '1514978748', '-746078744')) BETWEEN (('', x'', NULL)) AND ((1e500, 0x1f3ca0a4, '')))))) GROUP BY (((((vt1.c0)<(x'ab7f3927')), ((rt1.c2)IS(0X67964799)), ((rt1.c2)OR(rt1.c1))))>=((vt1.c0, ((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)), (((0.7132474149420152)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))); -- 0ms;
SELECT DISTINCT (~ (((((rt1.c2)OR(vt1.c0)))OR(vt1.c0)))) FROM rt1 ORDER BY x'8d55' COLLATE BINARY ASC  NULLS FIRST, (CAST(vt1.c0 AS NUMERIC) IN ((rt1.c0 IN (rt1.c0, rt1.c0))));SELECT DISTINCT ((((rt1.c1)==(rt1.c1)))&(SUM(vt1.c0))) FROM rt1, vt1; -- 0ms;
SELECT ALL ((((((((vt1.c0)AND(rt1.c0)))AND(CASE WHEN rt1.c2 THEN vt1.c0 WHEN x'' THEN rt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c2 END)))AND((((vt1.c0, vt1.c0, rt1.c2)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, rt1.c2, rt1.c1))))))AND(TIME(rt1.c0, rt1.c2, vt1.c0, '-756009839', rt1.c2))) FROM vt1, rt1 WHERE (((0.9496283798083571)IS(((('-58218453')) BETWEEN ((NULL)) AND (('')))))); -- 0ms;
SELECT ALL CAST(rt1.c1 AS BLOB) FROM vt1, rt1 WHERE (2034380841); -- 0ms;
SELECT DISTINCT UNLIKELY(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c0 END), ((((((((((rt1.c2)OR(0Xffffffffdd71d653)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c0)))&(((rt1.c2) BETWEEN (rt1.c1) AND (vt1.c0)))), (((vt1.c0)) BETWEEN ((((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)))) AND ((1.753967102E9))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c0))>>(((((((((vt1.c0)OR(rt1.c0)))AND(NULL)))OR(rt1.c0)))OR(vt1.c0)))), CASE rt1.c2 COLLATE NOCASE  WHEN CAST(rt1.c2 AS BLOB) THEN CAST(rt1.c0 AS INTEGER) ELSE (rt1.c0 IN ()) END, ((((((((((rt1.c2)>>(rt1.c1)))AND(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)))OR(((rt1.c1)>(rt1.c2)))))OR(NULL COLLATE NOCASE)))OR(RTRIM(rt1.c1))) FROM vt1, rt1 WHERE ((((((NULL)OR(0.4108122376711659)))AND(1737901977)) IN (('tv[[' IN ()), (('') NOTNULL)))); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(vt1.c0)  WHEN MIN(vt1.c0) THEN '1023895155' END FROM vt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c0 AS NUMERIC) THEN UPPER(vt1.c0) WHEN (+ (vt1.c0)) THEN rt1.c2 COLLATE RTRIM WHEN ((rt1.c2) NOTNULL) THEN vt1.c0 ELSE CASE WHEN rt1.c0 THEN rt1.c2 END END FROM vt1;SELECT DISTINCT (((((((((((NULL)AND(rt1.c2)))OR('0.7813394594107189')))AND(vt1.c0)))AND(rt1.c0))))<>((CASE vt1.c0  WHEN '5' THEN rt1.c0 ELSE vt1.c0 END))) FROM rt1, vt1 WHERE (((0.2825192235656958 COLLATE RTRIM)<=(((NULL)>=(NULL))))); -- 0ms;
SELECT DISTINCT AVG((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt1.c2)))) OVER () FROM vt1;SELECT ALL x'fa65' FROM rt1, vt1 WHERE ((('cng u')>('611481266')) COLLATE NOCASE); -- 0ms;
SELECT AVG(LIKE(x'', rt1.c2, '9')) OVER () FROM vt1 WHERE (0.9221127001245533);SELECT DISTINCT (- ('-1633012991')) FROM rt1; -- 0ms;
SELECT ((vt1.c0 COLLATE RTRIM) NOTNULL) FROM rt1;SELECT DISTINCT (CAST(vt1.c0 AS NUMERIC) IN ()) FROM rt1 GROUP BY ((rt1.c1)-(vt1.c0)) COLLATE BINARY;SELECT ALL ((((NULL)|(rt1.c0)))-(((vt1.c0) NOTNULL))) FROM rt1, vt1 GROUP BY rt1.c1 HAVING (((rt1.c2)) NOT BETWEEN ((((vt1.c0)==(x'4f02')))) AND (((('^3')IS(vt1.c0))))); -- 0ms;
SELECT ALL CASE WHEN ((rt1.c0) IS FALSE) THEN ((rt1.c0)%(vt1.c0)) END FROM vt1 WHERE (CAST((('-29394184')>(-130827245)) AS REAL));SELECT ((vt1.c0)GLOB(MIN(rt1.c2))), CAST(LAST_INSERT_ROWID() AS NUMERIC), (- (((((((((rt1.c0)AND(rt1.c2)))OR(rt1.c1)))AND(vt1.c0)))AND(rt1.c0)))) FROM rt1 WHERE ((((((('-798807093')AND(0.830837982805996)))AND('8쎾/oH|M'))) IS TRUE)) ORDER BY (- (LIKELIHOOD(rt1.c2, 0.3073995225527517)));SELECT LEAD((- (((((((((vt1.c0)AND(vt1.c0)))AND(x'')))OR('')))AND(vt1.c0)))), ((+ (vt1.c0)) IN (MAX(vt1.c0, vt1.c0, vt1.c0, '5'))), CASE WHEN TRIM(DISTINCT vt1.c0, vt1.c0) THEN ((vt1.c0) NOT BETWEEN (x'b6d0410a') AND (vt1.c0)) END) OVER (), ((vt1.c0 IN ()) IN ()), ((CAST(rt1.c0 AS BLOB)) IS TRUE) FROM vt1 GROUP BY ((((((rt1.c2) NOT NULL))AND(rt1.c1)))OR(((x'')<(rt1.c1)))), (((1.6185727E9, '(Z_-J2%', rt1.c1))<>((ABS(vt1.c0), ((rt1.c1)-(rt1.c1)), CASE vt1.c0  WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 END))), (((+ (NULL)))&((~ (vt1.c0))));SELECT DISTINCT (((((rt1.c2))<=((NULL)))) IS TRUE) FROM vt1, rt1 WHERE (CASE ((((x'')OR(x'c13fa1cb')))AND(''))  WHEN (((0.8791226914861776)) BETWEEN ((0.6896385557966591)) AND (('1811440883'))) THEN CAST('-778961530' AS TEXT) WHEN (0.1315350845066111 IN ()) THEN (('1364068193')%('0.1591823131908351')) WHEN ((NULL)+('9l䔟z}')) THEN '-557426422' END); -- 1ms;
SELECT DISTINCT (((('E\rD*') BETWEEN (rt1.c0) AND (rt1.c2))) BETWEEN ((((rt1.c0, rt1.c1, rt1.c1))<>((rt1.c2, vt1.c0, rt1.c0)))) AND ((vt1.c0 IN (1070864483)))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT 0.5618140922171015 FROM vt1, rt1; -- 0ms;
SELECT ALL CASE SUM(rt1.c1)  WHEN rt1.c1 COLLATE RTRIM THEN x'' ELSE ((rt1.c1) IS FALSE) END, CASE WHEN ((rt1.c2)>(NULL)) THEN ((rt1.c2) NOT NULL) END, rt1.c2 FROM rt1, vt1; -- 0ms;
SELECT ((((rt1.c0)==(vt1.c0)))+(CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c1 END)) FROM rt1, vt1 WHERE (((0.26135806903144276 IN ()) IN ())); -- 0ms;
SELECT ALL x'' FROM vt1, rt1 WHERE (((x'')>>(0.16673979246210535)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT vt1.c0 FROM rt1, vt1 WHERE (CASE (+ (0x6e86ceab))  WHEN '-743133272' COLLATE BINARY THEN ((x'')>(NULL)) WHEN CASE WHEN x'' THEN 0.6609761162189269 WHEN '*VyoU' THEN NULL WHEN 0.30844901989518847 THEN 0Xffffffffda53ed4b ELSE NULL END THEN (- ('')) WHEN (((((((('2141968324')OR(x'')))AND(NULL)))AND(NULL)))OR('184722017')) THEN (- (-5.7875858E7)) END); -- 0ms;
SELECT DISTINCT json_array_length(((rt1.c1)>>(rt1.c2))) FROM rt1, vt1 WHERE (((((x'')IS(x'8f1b'))) BETWEEN (('-2128690163' IN ())) AND ((('T_/]th8t&')*(-1460791432))))) LIMIT 1811440883 OFFSET -1940423744; -- 0ms;
SELECT ALL ((rt1.c1)>(vt1.c0)) COLLATE BINARY, CASE rt1.c2  WHEN (((rt1.c0))<((rt1.c2))) THEN (rt1.c2 IN ()) ELSE ((((rt1.c0)OR(rt1.c0)))OR(rt1.c0)) END, ((rt1.c0)LIKE((((rt1.c1, vt1.c0, vt1.c0))>((vt1.c0, rt1.c1, rt1.c1))))) FROM vt1 WHERE (((((((((((((((0.6533717898734238)AND(0X4129982a)))OR(0.8387934158173994)))AND('曳?%01PFm')))OR(NULL)))AND('')))AND('1836409487')))%(CASE WHEN 'ꃅa~+' THEN -55189490 END)));SELECT ALL AVG(CAST(rt1.c2 AS BLOB)) OVER () FROM rt1 WHERE (LIKE(CASE '-2010069755'  WHEN 0.39193497414733636 THEN '0.8475268957488504' WHEN NULL THEN '1e500' WHEN 'o*' THEN '' END, '236077738', 'a')); -- 0ms;
SELECT ALL (((((rt1.c0)OR(rt1.c1)))OR(rt1.c0)) IN ()) FROM rt1, vt1 WHERE ((((8.5239283E8)) NOT BETWEEN ((x'1df3')) AND ((x''))) COLLATE NOCASE) ORDER BY rt1.c1 ASC  NULLS LAST; -- 0ms;
SELECT ((COUNT(rt1.c2)) NOT BETWEEN (((rt1.c0)>>(rt1.c1))) AND (GROUP_CONCAT(rt1.c0))) FROM rt1, vt1 WHERE (CAST(x'' COLLATE BINARY AS TEXT)); -- 0ms;
SELECT (((rt1.c0 IN ()))IS NOT(((((rt1.c0)OR(rt1.c1)))AND(vt1.c0)))) FROM vt1;SELECT ALL (- (CASE WHEN rt1.c0 THEN rt1.c1 ELSE vt1.c0 END)) FROM vt1;SELECT DISTINCT 0x939c7b4 FROM vt1, rt1 WHERE (CASE WHEN NULL COLLATE RTRIM THEN NULL COLLATE NOCASE END); -- 0ms;
SELECT rt1.c0, CASE WHEN ((vt1.c0)-(rt1.c2)) THEN (rt1.c1 IN ()) WHEN ((rt1.c0)>(rt1.c0)) THEN GROUP_CONCAT(rt1.c2) WHEN ((((rt1.c1)AND(rt1.c0)))OR(rt1.c1)) THEN CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE vt1.c0 END END, (((rt1.c1 IN ())) ISNULL) FROM rt1 WHERE ((((((((('1811440883' COLLATE NOCASE)OR(((('0.09173082268426602')) BETWEEN ((NULL)) AND ((0.2071252482741437))))))OR(ROUND('''u4r|?', x'34d2'))))AND((+ (NULL)))))AND(((0x4119373a)/(1.891564714E9))))) GROUP BY CAST(((rt1.c2)<<(vt1.c0)) AS REAL), ((rt1.c1)+(rt1.c2)) COLLATE NOCASE, ((((((rt1.c0)>=(rt1.c0)))OR((rt1.c0 IN ()))))OR((((rt1.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((rt1.c2, rt1.c2, vt1.c0)) AND ((rt1.c2, vt1.c0, rt1.c2))))) HAVING vt1.c0;SELECT x'' FROM vt1 WHERE (('136119010' IN ())) GROUP BY CAST(CASE WHEN rt1.c0 THEN vt1.c0 END AS NUMERIC) HAVING json_patch(((rt1.c1) IS FALSE), ((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c0)))AND(rt1.c0)))AND('gc')));SELECT DISTINCT ((((((rt1.c1) NOT BETWEEN (vt1.c0) AND (NULL)))OR(COALESCE(rt1.c1, vt1.c0))))AND(((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)))) FROM vt1, rt1; -- 1ms;
SELECT DISTINCT ((MIN(NULL)) NOT BETWEEN (MIN(rt1.c1)) AND ((((rt1.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c0))))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0)))LIKE(((((((((vt1.c0)OR(rt1.c1)))AND(-1081561701)))OR(rt1.c0)))OR(rt1.c0)))) FROM vt1 RIGHT OUTER JOIN rt1 ON ((((((((0.41436333380719403)OR(vt1.c0)))AND(((rt1.c1)>=(rt1.c0)))))OR(((((rt1.c2)AND(vt1.c0)))AND(rt1.c0)))))AND(0.5506434716980885)) WHERE (((((+ (NULL)), ((((136119010)OR(0.37328216438338946)))AND('')), (NULL IN ())))>(((((x'')) BETWEEN (('')) AND (('抏<^닍lxix<'))), CAST('Bz' AS REAL), '0.09047117251892878')))); -- 0ms;
SELECT DISTINCT COUNT(SQLITE_SOURCE_ID()) FROM rt1, vt1 WHERE ((0X5e612dc7 IN ())) UNION ALL SELECT ALL ((MAX(rt1.c2, vt1.c0, vt1.c0, rt1.c1)) NOT BETWEEN ((~ (rt1.c0))) AND (CAST(rt1.c2 AS NUMERIC))) FROM rt1;SELECT DISTINCT AVG(CASE WHEN rt1.c2 THEN rt1.c2 END) OVER () FROM rt1 NOT INDEXED WHERE (CASE WHEN ((x'')*(0.545883256776371)) THEN CASE '-1470421920'  WHEN 0x64da7f9a THEN 0.5173579928528905 END WHEN CASE 'ඔ'  WHEN '655191477' THEN '1509161916' END THEN ((0xffffffffb5f58fe9)/(x'')) WHEN CASE 805858329  WHEN x'' THEN NULL WHEN '1012250051' THEN '-1297057564' WHEN '-1775074778' THEN 1.753967102E9 END THEN ((0.38644732449489083) IS TRUE) END); -- 0ms;
SELECT ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c2 WHEN 0.11577995849286726 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 END) NOT BETWEEN (rt1.c1 COLLATE BINARY) AND (rt1.c1)) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT x'' FROM vt1 LIMIT -697708714; -- 0ms;
SELECT DISTINCT ((((rt1.c1)!=(rt1.c2)))LIKE(((vt1.c0)OR(rt1.c0)))), (~ (NULL)), GROUP_CONCAT(((rt1.c1) BETWEEN (vt1.c0) AND (''))), LAST_VALUE((((((((((+ (rt1.c2)))OR(rt1.c1 COLLATE RTRIM)))AND('-589330332')))AND(((((rt1.c0)OR(vt1.c0)))OR(vt1.c0)))))AND(((rt1.c0)<<(rt1.c2))))) OVER (), (((((rt1.c0) IS TRUE), CAST(vt1.c0 AS REAL), ((rt1.c2) NOT BETWEEN (rt1.c0) AND (vt1.c0))))<((SUM(rt1.c1), (((rt1.c1))>=((0.11937300403877915))), ((rt1.c0) IS FALSE)))) FROM rt1, vt1; -- 0ms;
SELECT ALL NTILE(CASE ((-2006922456) NOT NULL)  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 END) OVER () FROM vt1;SELECT DISTINCT (~ ((rt1.c0 IN ()))) FROM vt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(x'') FROM rt1, vt1; -- 0ms;
SELECT vt1.c0, x'', (~ (x'85f7')), ((vt1.c0 IN ()) IN (COUNT(*))), vt1.c0 FROM vt1 WHERE ((((~ (1.377796865E9))) BETWEEN (NULL) AND ((x'' IN ('1509262862'))))); -- 0ms;
SELECT DISTINCT -1099889149 FROM rt1 WHERE (((x'f267') IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (+ ((x'fda9' IN ()))), (rt1.c0 COLLATE RTRIM IN ())) FROM rt1, vt1 WHERE ((((0.9706427532531825) BETWEEN ('') AND (NULL)) IN ())); -- 0ms;
SELECT (NOT (((((rt1.c1)AND('')))OR('{#*O2t+g')))), CAST(((vt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c1)) AS REAL), CASE WHEN (~ (rt1.c2)) THEN ((((rt1.c0)OR(rt1.c1)))AND(vt1.c0)) ELSE ((rt1.c2) NOT BETWEEN (vt1.c0) AND (rt1.c1)) END FROM vt1 WHERE ((- ((('')/(-9.25261306E8)))));SELECT DISTINCT ((((rt1.c1)AND(0x3bdb69a1)))AND(rt1.c0)) COLLATE BINARY, ((((((rt1.c2)AND(vt1.c0)))AND(rt1.c2))) NOT NULL), ((((CASE rt1.c1  WHEN rt1.c2 THEN vt1.c0 END)OR(LOWER(DISTINCT vt1.c0))))AND(CAST(rt1.c0 AS REAL))), COUNT(((rt1.c0) NOT NULL)), ((((vt1.c0)<(vt1.c0)))<>(((vt1.c0)|(rt1.c0)))) FROM rt1 WHERE (((((((((((((('%*A9' IN ()))AND(((((0.49438369078108346)OR(1840054265)))OR('188732516')))))AND(NULL)))AND(((('')) NOT BETWEEN (('w刍YUu')) AND ((NULL))))))OR(CAST(x'' AS NUMERIC))))OR(CASE NULL  WHEN x'7c1e' THEN x'7f16e3c8' WHEN '' THEN 0Xffffffffb0940af0 WHEN x'' THEN -5.9259495E8 WHEN 1826865026 THEN 0.19355272890817832 WHEN NULL THEN x'' ELSE NULL END)))AND((0xfffffffffde1b8fb IN ())))) GROUP BY (((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) IN ()) HAVING ((((((((rt1.c2)AND(rt1.c1)))OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)) COLLATE RTRIM COLLATE BINARY LIMIT -565483669;SELECT DISTINCT (((((((((((((((((((('1618572700')AND(rt1.c1)))OR(vt1.c0)))AND(vt1.c0)))OR(rt1.c2)))AND(((vt1.c0)LIKE(rt1.c0)))))OR(((rt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(rt1.c1)))OR((rt1.c0 IN ()))))OR(((((((((rt1.c1)OR(rt1.c2)))OR(vt1.c0)))AND(rt1.c2)))AND(rt1.c2)))))AND(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c0)))) FROM rt1 WHERE ((+ ((('-756787011')||(1.3611901E8))))) ORDER BY (((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c0))))%(((rt1.c2) IS TRUE))) ASC  NULLS FIRST;SELECT DISTINCT SUM(CAST(rt1.c2 AS REAL)), ((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0)))LIKE((((rt1.c1, rt1.c0, rt1.c0)) BETWEEN ((rt1.c2, vt1.c0, rt1.c2)) AND ((rt1.c0, vt1.c0, rt1.c2))))), ((((rt1.c0) BETWEEN (rt1.c1) AND (rt1.c0))) NOT NULL) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((SUM(rt1.c0))) AND ((COUNT(*)))) FROM vt1;SELECT ((rt1.c2)>(vt1.c0)) COLLATE NOCASE, TYPEOF(DISTINCT (((rt1.c2, vt1.c0, 0.3142640117705382))<((rt1.c0, rt1.c1, rt1.c0)))), CASE x'6082'  WHEN rt1.c0 THEN vt1.c0 ELSE rt1.c1 END COLLATE BINARY, ((((rt1.c1)!=(rt1.c0)))AND(x'')), MIN(CAST(vt1.c0 AS BLOB)) FROM vt1 WHERE ((((NULL, NULL, '1086202948')) NOT BETWEEN (((('')==(1374302603)), (((('.[\nn')OR(0.3883829932328249)))OR(0.28905342656090005)), ((x'97c1')<('')))) AND (((+ ('0.08352381867751546')), CASE '{6둸5X'  WHEN 0Xffffffffb9a6ff7d THEN -224726622 WHEN '' THEN '' WHEN NULL THEN '&{5Ge>~|\n' END, CASE x'9933c96e'  WHEN x'' THEN x'a9df7a22' WHEN '' THEN 0.2168186446146747 WHEN -149682579 THEN 0.9057605093978564 ELSE x'' END))));SELECT DISTINCT (NOT ((rt1.c0 IN ()))) FROM vt1 WHERE ((((x'' IN ())) ISNULL)) ORDER BY (- (((((((((vt1.c0)OR(rt1.c1)))AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c0))))  NULLS LAST;SELECT (((CASE WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN vt1.c0 WHEN rt1.c1 THEN vt1.c0 ELSE x'' END))>((rt1.c0))) FROM rt1, vt1 WHERE ((NOT (CAST('-150764729' AS TEXT)))) ORDER BY (- (vt1.c0 COLLATE BINARY)), ((((((((((((CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)OR((rt1.c0 IN ()))))OR((((rt1.c2, 1344328063, vt1.c0))<>((vt1.c0, rt1.c2, rt1.c2))))))OR(((((0.8909715459858719)OR(rt1.c1)))OR(rt1.c2)))))OR(((rt1.c0)LIKE(rt1.c0)))))AND(rt1.c2)))AND((- (NULL)))) ASC  NULLS LAST, ((SQLITE_SOURCE_ID())||(CAST(rt1.c1 AS NUMERIC))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (vt1.c0 COLLATE NOCASE IN ()) FROM vt1 WHERE ((NOT (CASE 'cng u'  WHEN x'' THEN '0.0' ELSE x'' END))) GROUP BY CASE WHEN vt1.c0 COLLATE BINARY THEN ((rt1.c1)==(rt1.c1)) WHEN (+ (rt1.c2)) THEN rt1.c2 COLLATE BINARY WHEN (rt1.c1 IN ()) THEN ((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0)) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 ELSE x'' END END;SELECT (((((NOT (rt1.c0)))OR(((((rt1.c0)OR(rt1.c2)))OR(vt1.c0)))))OR((rt1.c1 IN ()))) FROM rt1 WHERE (((((((x'')>=(x'')))AND(CAST(NULL AS REAL))))AND((('1811440883') NOT BETWEEN ('L ') AND (-1.130335497E9))))) GROUP BY CASE WHEN (~ (rt1.c0)) THEN ((rt1.c1)-(rt1.c0)) ELSE '-27512848' END, (((rt1.c2)) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((((vt1.c0)<>(rt1.c1))))), CASE WHEN CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c0 END THEN (rt1.c2 IN ()) END HAVING ((((rt1.c0)*(rt1.c1)))LIKE(((((rt1.c1)OR(rt1.c1)))AND(rt1.c1))));SELECT NULL, (((((vt1.c0)<(vt1.c0)), rt1.c0, (+ (rt1.c0))))<=((((rt1.c1) NOTNULL), CAST(-1053661538 AS INTEGER), ((x'') NOT NULL)))), vt1.c0 FROM rt1 LIMIT -1635184504 OFFSET 333170746;SELECT ALL 0.7929462840315455 FROM rt1 GROUP BY CAST(CASE WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END AS REAL); -- 0ms;
SELECT ALL ((CAST(vt1.c0 AS TEXT)) NOTNULL), COUNT((+ (rt1.c0))) OVER (), rt1.c0 FROM vt1;SELECT DISTINCT ((((rt1.c0)/(x'')))==((((vt1.c0)) BETWEEN ((rt1.c0)) AND ((vt1.c0))))) FROM vt1 GROUP BY GLOB(rt1.c0 COLLATE NOCASE, CAST(rt1.c1 AS NUMERIC));SELECT DISTINCT NTH_VALUE(((((rt1.c1) NOT NULL))LIKE((('0.24577050576500792') IS TRUE))), rt1.c0) OVER () FROM vt1, rt1 WHERE (CAST((((('#n')OR(0.927550730590061)))AND(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt1, rt1 GROUP BY ((((((((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c1)))OR(vt1.c0)))>(((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), ((json_array(rt1.c0, rt1.c0, 'Sඔ2+', rt1.c1)) BETWEEN (((rt1.c1)|(0.6018046133820315))) AND ((((vt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))), rt1.c0, (((((vt1.c0, rt1.c2, '1737901977')) BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((rt1.c0, -2.032372021E9, vt1.c0)))) ISNULL), rt1.c1; -- 1ms;
SELECT ALL MAX(AVG(CASE WHEN rt1.c2 THEN rt1.c2 END)) FROM rt1 WHERE (((((LIKELIHOOD(x'', 0.9834854075253039))AND(CAST('-1542082821' AS INTEGER))))AND(((0.1246552625172237)%(x''))))) LIMIT -922995254 OFFSET -1039058620;SELECT DISTINCT CASE 0.26334972630320796  WHEN CAST(vt1.c0 AS TEXT) THEN CAST(rt1.c2 AS TEXT) ELSE vt1.c0 COLLATE NOCASE END, x'4d32', ((((rt1.c1) ISNULL))|(CASE WHEN vt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c0 END)), (+ (((rt1.c1)<(rt1.c2)))), vt1.c0 FROM vt1 WHERE ((((((((0x2ac5b9c, NULL, 1.271555365E9))<((-2.032372021E9, NULL, -5.7875858E7))))AND(CASE x'15bd'  WHEN 0X72f03749 THEN NULL END)))OR((('1673479100')==('-1982280756'))))) LIMIT 469250285 OFFSET 533552872;SELECT COUNT(*) FROM rt1, vt1; -- 0ms;
SELECT (((rt1.c1 COLLATE RTRIM))>((json_array_length(rt1.c2)))) FROM rt1; -- 1ms;
SELECT DISTINCT (((- (rt1.c1))) BETWEEN (AVG(vt1.c0)) AND (TOTAL(vt1.c0))), (NOT (((vt1.c0) NOTNULL))), ((((CAST(rt1.c0 AS INTEGER))AND(((rt1.c0)-(rt1.c2)))))OR(COUNT(*))), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))||(rt1.c0 COLLATE BINARY)), NTILE(((((vt1.c0)<>(vt1.c0)))<>(((vt1.c0) BETWEEN ('1377796865') AND (vt1.c0))))) OVER () FROM vt1;SELECT DISTINCT (+ (vt1.c0 COLLATE RTRIM)), (~ (((rt1.c0) BETWEEN (rt1.c0) AND (NULL)))), ((NULL) NOT NULL) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) NOT NULL) AS NUMERIC), UPPER(COUNT(*)), (- (CAST(x'eae8' AS TEXT))) FROM rt1 WHERE ((+ ('-348517349')) COLLATE RTRIM) ORDER BY ((((((((((((rt1.c0 COLLATE NOCASE)AND(((rt1.c1)>=(rt1.c0)))))OR(0.3198808685705753)))OR(((rt1.c1)<(rt1.c1)))))AND(((rt1.c1) BETWEEN (rt1.c0) AND (vt1.c0)))))AND(ABS(DISTINCT rt1.c1))))AND(((((rt1.c0)OR(rt1.c2)))AND(rt1.c0)))), ((('1721876859') BETWEEN (vt1.c0) AND (rt1.c0)) IN ()), 0.12959322916891058  NULLS LAST;SELECT DISTINCT ((x'') NOT BETWEEN (((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c1))) AND ((NULL IN ()))) FROM rt1, vt1 WHERE (((((CAST(-1.7976931348623157E308 AS REAL))AND(LTRIM('셻KE', ''))))AND(MAX(x'', 0.6221514663268983)))); -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt1 WHERE ((((((NULL))=((0.23415272446099922)))) NOT BETWEEN (COALESCE(NULL, '0.06452653454220802')) AND ('1552595821' COLLATE RTRIM))) ORDER BY SQLITE_COMPILEOPTION_USED(((rt1.c0) ISNULL)), CASE WHEN rt1.c1 THEN rt1.c1 END COLLATE NOCASE  NULLS LAST;SELECT ((CAST(rt1.c2 AS TEXT)) NOTNULL) FROM vt1, rt1 WHERE (((((json_patch(NULL, '1024908904'))AND(json_insert(NULL, x'', 0.47895819375191473))))OR(CAST(NULL AS BLOB)))); -- 0ms;
SELECT rt1.c1, SUM((rt1.c2 IN ())) OVER (), ((CASE rt1.c1  WHEN NULL THEN vt1.c0 END)IS NOT((~ ('')))) FROM rt1;SELECT ALL rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt1.c1 IN (rt1.c1, rt1.c0))) FROM rt1 WHERE (((((CAST(0.3817788207804874 AS NUMERIC))AND(((-1918270484) ISNULL))))OR((('1)C') BETWEEN (1.09324497E9) AND (NULL))))) ORDER BY ((((vt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))IS(rt1.c0 COLLATE RTRIM)) DESC  NULLS LAST, (('o') NOT BETWEEN (((((rt1.c1)AND(vt1.c0)))OR(rt1.c2))) AND (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN vt1.c0 END)) ASC  NULLS LAST;SELECT (((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)) IN ()) FROM rt1, vt1 WHERE (TRIM(DISTINCT ('-1883211108' IN ()), (('313586690')AND('-2032372021')))); -- 0ms;
SELECT (((rt1.c1, vt1.c0, x'592e', rt1.c1, rt1.c0, rt1.c0, vt1.c0)) BETWEEN ((((0x1c583915)>>(rt1.c0)), CAST(vt1.c0 AS REAL), ((((0.558550371702475)OR('ui')))AND(vt1.c0)), (('1646925910')*(vt1.c0)), x'', ((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (rt1.c2 IN ()))) AND ((rt1.c2, ((((rt1.c2)AND(vt1.c0)))AND(rt1.c1)), HEX(rt1.c0), (NOT ('')), ((rt1.c2) IS TRUE), ((rt1.c2) IS FALSE), ((((vt1.c0)OR(rt1.c2)))OR(rt1.c0))))), HEX(DISTINCT CAST(rt1.c2 AS INTEGER)), ((CAST(vt1.c0 AS NUMERIC))<(rt1.c0)) FROM rt1, vt1; -- 0ms;
SELECT (NOT (CAST(rt1.c0 AS INTEGER))) FROM rt1; -- 0ms;
SELECT DISTINCT '	⯋' FROM vt1 LIMIT -759664775 OFFSET -2065414755; -- 0ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))OR(AVG(vt1.c0))))OR(((rt1.c1) NOTNULL))) FROM vt1 GROUP BY ((((vt1.c0)/(vt1.c0)))*(CAST(rt1.c2 AS NUMERIC)));SELECT DISTINCT CASE -1514803149 COLLATE BINARY  WHEN (+ (rt1.c0)) THEN (('758372440')>=(rt1.c1)) END FROM vt1, rt1 WHERE (CAST((((x''))<((NULL))) AS TEXT)); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c1)) BETWEEN (CASE rt1.c1  WHEN 1988162487 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c2 THEN vt1.c0 END) AND (rt1.c2)) FROM rt1 WHERE (((((((((((NULL)|('Gr')))AND(0.7725785540755714 COLLATE BINARY)))AND((0.5532150144733206 IN ()))))OR(((NULL) NOT BETWEEN (NULL) AND (-772116937)))))OR((x'0660' IN ()))));SELECT ALL rt1.c2 FROM rt1; -- 1ms;
SELECT DISTINCT 0.7296155343544948, ((((rt1.c0) BETWEEN ('g_') AND (0.05930536842595713))) ISNULL), ((((((vt1.c0))<((vt1.c0)))))>=((HEX(rt1.c1)))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT '-1879593664' FROM vt1 WHERE ((((x'' IN ()))<(0X70befcaa COLLATE NOCASE))); -- 0ms;
SELECT CASE LIKELIHOOD(rt1.c1, 0.25367131040367785)  WHEN SUM(rt1.c1) THEN rt1.c1 COLLATE BINARY ELSE MAX(rt1.c2, rt1.c2) END FROM vt1 WHERE (load_extension(CASE WHEN 0.06441114542264192 THEN 0.010142223563374464 ELSE NULL END, '-613887622')) ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (rt1.c2 COLLATE RTRIM)) DESC  NULLS FIRST;SELECT DISTINCT rt1.c1, CAST(NULL AS BLOB) COLLATE NOCASE, (~ ((+ (rt1.c2)))) FROM vt1 WHERE (-9.25261306E8) ORDER BY (NOT ((rt1.c1 IN ()))), (~ (rt1.c1)) DESC;SELECT ((rt1.c1 COLLATE RTRIM)LIKE(((((0.13536464351329658)AND(rt1.c1)))AND(vt1.c0)))), CAST(CAST(vt1.c0 AS BLOB) AS NUMERIC), rt1.c1, PERCENT_RANK() OVER (), TOTAL((+ (rt1.c2))) OVER () FROM rt1 WHERE ((((((495699642)/(NULL))))<>((((0x1ee6854e) NOT BETWEEN (NULL) AND (''))))));SELECT DISTINCT rt1.c2 FROM rt1, vt1; -- 1ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT rt1.c2, 0.2570531166648822) FROM vt1;SELECT DISTINCT ((((((((((rt1.c1)AND(rt1.c1)))OR(rt1.c2)))AND(0.39306785646792597)))OR(x'')))==((NOT (rt1.c2)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((CASE 'x '  WHEN rt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 END)OR(((rt1.c0)!=(vt1.c0)))))OR(((vt1.c0) ISNULL))) FROM rt1, vt1 ORDER BY (((((((((rt1.c0 IN ()))OR(CASE rt1.c2  WHEN x'' THEN rt1.c0 END)))OR(NULL)))AND(((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR(((rt1.c1)!=(rt1.c2)))); -- 0ms;
SELECT ALL SUM(((x'f1ec')AND(vt1.c0))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (((0.24998763648876077))<((CAST(rt1.c2 AS REAL)))) FROM rt1; -- 0ms;
SELECT DISTINCT (+ (rt1.c2)) COLLATE NOCASE FROM rt1, vt1 WHERE (((LIKE(NULL, 0.5759478944365193, '-')) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(MIN(rt1.c0) AS REAL), ((((rt1.c0) NOTNULL))IS(1304294143)), ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c1 THEN '0.1638844551081432' WHEN NULL THEN rt1.c0 ELSE vt1.c0 END) NOT BETWEEN (((rt1.c0) NOTNULL)) AND (((rt1.c1) NOTNULL))) FROM rt1 WHERE (x'0c7b');SELECT (((((0Xffffffffc59d00c2) NOTNULL)))!=((((((rt1.c2)AND(rt1.c1)))AND(vt1.c0))))), (((rt1.c0 IN ())) IS FALSE), RANK() OVER (), ((((((rt1.c2)|(vt1.c0)))AND((((vt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))))))OR(((vt1.c0)||(rt1.c2)))), CASE ((vt1.c0)<>(rt1.c2))  WHEN rt1.c1 THEN ((rt1.c1) NOT NULL) END FROM rt1 WHERE (((CASE WHEN NULL THEN x'' ELSE '1180503444' END)%(CAST(0.8744028391165496 AS TEXT))));SELECT TYPEOF((vt1.c0 IN (x'', rt1.c1))), (- (((((((((vt1.c0)AND(rt1.c2)))OR(rt1.c0)))OR(vt1.c0)))AND(rt1.c2)))), AVG((~ (rt1.c2))) FROM rt1 ORDER BY ((((rt1.c1)OR(rt1.c0)))&((0.5153275580070122 IN ()))) DESC, ((((((rt1.c2)/(rt1.c0)))AND(CAST(vt1.c0 AS REAL))))OR((((vt1.c0))<((vt1.c0))))) ASC  NULLS FIRST, (((((vt1.c0))>((rt1.c0)))) IS TRUE) DESC;SELECT 0Xffffffff86837154 FROM rt1; -- 0ms;
SELECT ALL RANK() OVER () FROM vt1, rt1 WHERE (((0.6345502299095518 COLLATE NOCASE) NOTNULL)); -- 1ms;
SELECT DISTINCT CAST((- (vt1.c0)) AS TEXT), CASE CASE WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c2 END  WHEN ((rt1.c2) BETWEEN (rt1.c2) AND (vt1.c0)) THEN x'' ELSE CASE WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c0 END END, ((((rt1.c0) NOT NULL))IS(0Xffffffffbd058f2f)) FROM rt1 WHERE (CASE ((NULL) NOTNULL)  WHEN (NOT ('1280621011')) THEN (('d-龅s﷢,W') NOTNULL) WHEN (x'' IN ()) THEN ((0.4448574425096482) NOTNULL) WHEN ((((((((x'')AND(NULL)))OR('蘎9?L')))OR(0.7896084155619426)))OR(0.1764599171417297)) THEN CAST(NULL AS REAL) ELSE (- (x'')) END) GROUP BY (NOT (((((rt1.c2)OR(x'')))OR(rt1.c1)))), ((rt1.c1 COLLATE NOCASE)%(((vt1.c0) IS TRUE))), CAST((rt1.c2 IN ()) AS NUMERIC);SELECT DISTINCT CAST((NOT (vt1.c0)) AS NUMERIC) FROM vt1 WHERE (STRFTIME((-1916692941 IN ()), ((0.1638844551081432)AND(x'3f4d')), ((((((((0.1479168938015345)OR(0.6694594534678503)))AND(x'4932')))OR('749920157')))OR(NULL)))) GROUP BY CASE WHEN LIKELY(rt1.c2) THEN rt1.c0 COLLATE BINARY END HAVING (AVG(rt1.c1) IN ());SELECT DISTINCT (((rt1.c2 IN ()))+(((x'')AND(rt1.c1)))), rt1.c1, NULL FROM rt1; -- 0ms;
SELECT ((((vt1.c0)IS NOT(rt1.c2)))%(COALESCE(DISTINCT rt1.c2, rt1.c0, NULL, rt1.c0))) FROM rt1;SELECT (((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c1))))==((vt1.c0 COLLATE NOCASE))), ((((rt1.c1) BETWEEN (rt1.c1) AND (''))) ISNULL), ((rt1.c0)LIKE(((rt1.c1) IS TRUE))) FROM rt1, vt1 WHERE ((((x'')) BETWEEN (((NOT (x'0574')))) AND ((CASE NULL  WHEN -4.10111044E8 THEN NULL END)))); -- 0ms;
SELECT DISTINCT CASE (NOT (rt1.c0))  WHEN (((vt1.c0, vt1.c0, rt1.c1, rt1.c2, rt1.c1))==((rt1.c0, rt1.c1, vt1.c0, x'', NULL))) THEN ((rt1.c2)|(rt1.c2)) ELSE (+ (vt1.c0)) END FROM vt1;SELECT DISTINCT rt1.c0 FROM vt1, rt1 WHERE (json_object((x'' IN ()), ((NULL) IS TRUE), ((0x3aec3120) IS FALSE), (('1012250051') NOTNULL))) UNION SELECT DISTINCT CAST((((vt1.c0))<((rt1.c1))) AS TEXT) FROM rt1 WHERE (((((('0.6119599346921283')) BETWEEN (('')) AND ((0.9468813027850594))))-(x''))) GROUP BY rt1.c2, (((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt1.c1)) IN ()), CASE WHEN ((rt1.c2) BETWEEN ('') AND (rt1.c0)) THEN ((rt1.c1)*(rt1.c1)) END, ((CASE rt1.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)&(json_remove(rt1.c0, rt1.c1))), rt1.c1 COLLATE RTRIM HAVING (~ (((rt1.c2)<>(vt1.c0))));SELECT DISTINCT ((((rt1.c1)||(rt1.c0))) IS TRUE) FROM vt1;SELECT ALL ((((((rt1.c2) BETWEEN (rt1.c2) AND (vt1.c0)))OR((((vt1.c0, rt1.c1, rt1.c1))>=((vt1.c0, rt1.c2, vt1.c0))))))OR(CAST(vt1.c0 AS INTEGER))), CASE WHEN COALESCE(rt1.c2, rt1.c0) THEN COALESCE(DISTINCT rt1.c2, rt1.c2, rt1.c1, rt1.c1, rt1.c2, rt1.c1) END, MIN(rt1.c0) FROM rt1, vt1 WHERE (((('c{j%Z')<(-1.670123207E9)) IN (((x'') IS FALSE), '' COLLATE BINARY))) ORDER BY ((((CASE WHEN 6.11481266E8 THEN rt1.c1 WHEN rt1.c2 THEN NULL WHEN rt1.c0 THEN rt1.c1 END)AND(CASE rt1.c1  WHEN rt1.c0 THEN vt1.c0 END)))AND(CASE vt1.c0  WHEN vt1.c0 THEN rt1.c0 ELSE rt1.c2 END)) DESC  NULLS LAST, CASE WHEN rt1.c1 THEN CASE WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END END  NULLS FIRST; -- 1ms;
SELECT DISTINCT (~ (LOWER(rt1.c1))) FROM rt1, vt1 WHERE (x''); -- 0ms;
SELECT ((((vt1.c0)==(vt1.c0))) NOT BETWEEN (AVG(NULL)) AND ('-1980556155')), ((((((rt1.c0)AND(vt1.c0)))AND(rt1.c1))) IS TRUE), FIRST_VALUE(((((vt1.c0) NOTNULL))!=(LAST_INSERT_ROWID()))) OVER () FROM vt1 ORDER BY LIKELIHOOD(DISTINCT ((NULL)<=(vt1.c0)), 0.6682596358932422)  NULLS LAST, NULL LIMIT -1582405105;SELECT (((((rt1.c0))<((vt1.c0))))>=(((vt1.c0) NOT NULL))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((0.05925950726946205) BETWEEN (0x3b2f55ce) AND (rt1.c2)), IFNULL(CAST(rt1.c2 AS TEXT), ((rt1.c0) IS FALSE)), CASE TOTAL(rt1.c2)  WHEN (rt1.c0 IN ()) THEN vt1.c0 COLLATE NOCASE END FROM rt1, vt1 ORDER BY ((((rt1.c0) NOT NULL))<=((NOT (vt1.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((-1180237955)<(rt1.c1)) AS NUMERIC), ((((rt1.c2)>>(vt1.c0)))<=(rt1.c0)), LAST_VALUE((~ ((NOT (x''))))) OVER () FROM vt1;SELECT ALL ((CAST(rt1.c0 AS BLOB))*((vt1.c0 IN ()))) FROM rt1, vt1; -- 0ms;
SELECT ((((((((MAX(rt1.c2))AND(CASE '7086521'  WHEN rt1.c2 THEN vt1.c0 END)))AND(COALESCE(DISTINCT rt1.c0, vt1.c0))))OR(((x'') NOT BETWEEN (rt1.c0) AND (rt1.c2)))))AND(vt1.c0 COLLATE RTRIM)) FROM rt1;SELECT DISTINCT GLOB(((vt1.c0)||(rt1.c2)), ((rt1.c1)<>(vt1.c0))), ((SUM(rt1.c2)) BETWEEN ((NOT (vt1.c0))) AND (((0X4b6b4bb8)LIKE(rt1.c2)))), ((((rt1.c1) NOT NULL))-(((vt1.c0) NOT NULL))) FROM rt1, vt1 WHERE (((x'')<<(x'14d29ea0')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(ABS(rt1.c2) AS NUMERIC) FROM rt1, vt1; -- 0ms;
SELECT ALL ((((((((CAST(rt1.c1 AS TEXT))AND(((rt1.c2)<>(rt1.c0)))))OR((~ (rt1.c1)))))OR(((rt1.c2)GLOB(rt1.c0)))))OR(((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c1)))) FROM rt1;SELECT DISTINCT ((((((rt1.c1))<((rt1.c0))), (+ (vt1.c0)), rt1.c1))>((((((vt1.c0)AND(rt1.c0)))AND(vt1.c0)), ((rt1.c2) IS TRUE), (((rt1.c0))!=((rt1.c2)))))), ((COUNT(vt1.c0))IS((((rt1.c2))>=((rt1.c0))))), NULL FROM vt1, rt1 WHERE (((x'')OR(x'f902')) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT vt1.c0, (((- (rt1.c2)))%(((rt1.c0)>(rt1.c1)))), (((- (rt1.c1))) ISNULL) FROM vt1, rt1; -- 0ms;
SELECT CAST(rt1.c2 AS TEXT) FROM rt1, vt1; -- 0ms;
SELECT vt1.c0, MIN((NOT (rt1.c1))) COLLATE RTRIM, rt1.c0 FROM rt1;SELECT ALL ((rt1.c0 COLLATE BINARY) IS TRUE) FROM rt1 WHERE ((((('OႤ')<=(NULL)))*(((('-1883211108')) BETWEEN ((0.09917977748667128)) AND ((NULL)))))) ORDER BY rt1.c2 LIMIT -2074079876; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt1.c1) FROM vt1, rt1; -- 0ms;
SELECT ALL (((rt1.c0 IN (rt1.c2))) ISNULL) FROM vt1;SELECT vt1.c0 FROM vt1 WHERE (CAST(CASE WHEN 0.8073131048043204 THEN x'6012' END AS TEXT)); -- 0ms;
SELECT ((((((((((((CAST(rt1.c0 AS INTEGER))OR(x'')))AND((vt1.c0 IN ()))))OR(COUNT(rt1.c0))))AND(((rt1.c0)%(rt1.c1)))))AND(((rt1.c2) BETWEEN (rt1.c0) AND (rt1.c1)))))AND(0Xffffffff8c577bc0)) FROM vt1, rt1 WHERE ((((- (''))) BETWEEN (CASE WHEN 0.4903955960622075 THEN 0.7273335013639142 ELSE 0Xffffffff9b06db5c END) AND (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CAST((((0.2492729203369134))>=((0.6165376016619178))) AS REAL) FROM vt1, rt1 LIMIT 1803593749; -- 0ms;
SELECT (((vt1.c0, rt1.c1, rt1.c0)) BETWEEN ((0.7265397564751874, CASE rt1.c0  WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c0 END, CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c1 END)) AND ((((0.4240619121471435)<<(rt1.c1)), (((rt1.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c0))), LIKELIHOOD(rt1.c0, 0.7393547282495392)))), CAST(((rt1.c1) NOT NULL) AS NUMERIC), rt1.c0 FROM rt1;SELECT ALL (((0Xfffffffffc8ce26e IN (rt1.c1)))<<(rt1.c2 COLLATE NOCASE)) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c1) IS FALSE) AS INTEGER), PERCENT_RANK() OVER (), (((((((rt1.c1))<>((rt1.c2))))AND(((rt1.c2) ISNULL))))AND('<e' COLLATE RTRIM)), ((RTRIM(rt1.c0)) IS FALSE), SUM(CASE rt1.c2  WHEN rt1.c1 THEN rt1.c0 END) FROM vt1;SELECT ALL ((rt1.c1) IS TRUE) FROM vt1, rt1 WHERE ((0.9330043995015591 COLLATE RTRIM IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN IFNULL(DISTINCT rt1.c1, rt1.c2) THEN (vt1.c0 IN (vt1.c0)) END FROM vt1, rt1; -- 1ms;
SELECT ALL (- (((rt1.c2) NOTNULL))) FROM vt1, rt1; -- 0ms;
SELECT ALL CASE WHEN (+ (vt1.c0)) THEN (((rt1.c2))<((rt1.c2))) END FROM rt1, vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM rt1 WHERE (((CASE 0.019412817358422707  WHEN 0Xfffffffff8de107b THEN '881433818' WHEN NULL THEN NULL WHEN 0.5947257491487128 THEN 0.23593274643163242 END) IS TRUE));SELECT DISTINCT GROUP_CONCAT((rt1.c1 IN ())) OVER ( PARTITION BY CAST((rt1.c1 IN ()) AS TEXT), x'') FROM rt1, vt1 WHERE ((NOT (((NULL)>=(x''))))); -- 0ms;
SELECT ((CAST(rt1.c1 AS NUMERIC)) NOT BETWEEN (((rt1.c1)/(rt1.c0))) AND (NULL COLLATE RTRIM)), 769071431, ((((NULL)AND(TRIM(1.891564714E9))))OR(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c2)))), ((((((vt1.c0)GLOB(rt1.c1)))AND(((vt1.c0)-(rt1.c0)))))OR(CASE rt1.c0  WHEN 'o̦' THEN rt1.c1 END)), (~ ((rt1.c2 IN ()))) FROM rt1 WHERE ((- (((NULL)<>(-519085253)))));SELECT CASE WHEN ((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c0)) THEN ((rt1.c0) ISNULL) ELSE CAST(rt1.c1 AS INTEGER) END FROM rt1 ORDER BY (((+ (vt1.c0))) IS TRUE), CAST(CASE rt1.c1  WHEN '' THEN rt1.c2 ELSE vt1.c0 END AS TEXT) DESC  NULLS LAST, CASE ABS(rt1.c1)  WHEN (vt1.c0 IN ()) THEN (rt1.c0 IN ()) ELSE COALESCE(DISTINCT rt1.c1, rt1.c0) END DESC  NULLS FIRST LIMIT 2096538878 OFFSET -1121391412;SELECT DISTINCT '嚄85jdI' FROM rt1 WHERE (CAST(0x22b184e1 AS REAL) COLLATE BINARY); -- 1ms;
SELECT '宻_e8' FROM rt1; -- 0ms;
SELECT (((((- (rt1.c0)))AND(rt1.c2)))OR(0x3d994122 COLLATE RTRIM)) FROM vt1 WHERE ((0.029377469885203622 COLLATE BINARY IN ()));SELECT DISTINCT CAST(CAST(rt1.c0 AS TEXT) AS NUMERIC), UNLIKELY(((vt1.c0) IS FALSE)), AVG(((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT rt1.c0, ((((((rt1.c2))=((NULL)))))<>((LIKELY(vt1.c0)))), CAST(((vt1.c0) NOT NULL) AS INTEGER) FROM rt1;SELECT DISTINCT (+ ('1836409487')), DENSE_RANK() OVER ( GROUPS BETWEEN  CURRENT ROW AND ((((rt1.c0)>(rt1.c2))) IS FALSE) FOLLOWING), '䫝weekday+J(#pSh^' FROM vt1, rt1 WHERE (((('')>=(NULL)) IN ((((x'f936'))<=(('*N'))), CASE 'TsvfMbY*w'  WHEN -1.297057564E9 THEN 0.8722391736010422 WHEN '&\r' THEN -4.10111044E8 WHEN NULL THEN x'' ELSE x'' END))); -- 0ms;
SELECT DISTINCT (~ ((~ (vt1.c0)))) FROM vt1, rt1 WHERE (((((~ (x'3763')), ((x'')|(NULL)), CAST('>C9鏙' AS TEXT)))<=(((('-1760015145')GLOB(0.23547931545476808)), ((x'b859')%('-1982280756')), (('1674170676') IS FALSE))))) LIMIT -695439816 OFFSET -1840569917; -- 0ms;
SELECT ALL ((((AVG(rt1.c2))AND((('鏓b{	%\nz') ISNULL))))AND(((((rt1.c0)OR(rt1.c0)))OR(rt1.c2)))), json_array(((((rt1.c2)OR(rt1.c0)))OR(rt1.c2)), ((vt1.c0) IS TRUE)), (((CASE WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c1 THEN vt1.c0 ELSE rt1.c0 END))>=(((rt1.c0 IN (rt1.c0))))) FROM vt1 WHERE ((((655191477) IS TRUE) IN ()));SELECT DISTINCT ((NULLIF(vt1.c0, vt1.c0))GLOB(((rt1.c1)IS(rt1.c2)))) FROM rt1, vt1; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY CASE WHEN NULL THEN TYPEOF(DISTINCT rt1.c1) END DESC) FROM rt1, vt1 WHERE (0.046569216537933555); -- 1ms;
SELECT DISTINCT rt1.c2 FROM rt1 ORDER BY ((rt1.c1)|(CASE 0.5727179919600862  WHEN NULL THEN '-1122383590' ELSE rt1.c0 END))  NULLS LAST LIMIT 944733842; -- 0ms;
SELECT (((rt1.c2 IN ())) NOT BETWEEN (CASE rt1.c1  WHEN rt1.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN 0.7782244782453255 THEN vt1.c0 ELSE rt1.c1 END) AND (CAST(vt1.c0 AS REAL))) FROM vt1;SELECT ALL LIKE((NOT (rt1.c1)), ((rt1.c0) NOTNULL), '6') FROM vt1 WHERE (((((((0.3421515938102362) NOTNULL))AND(json_valid('u'))))OR((('0.6119599346921283')>=(x''))))) ORDER BY LIKELY(rt1.c1) ASC;SELECT DISTINCT CAST(rt1.c0 AS BLOB) COLLATE BINARY FROM vt1;SELECT DISTINCT (((- (rt1.c2))) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) AND (rt1.c1)) FROM rt1 WHERE ((((x''))>((x'4594'))) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((((((((((((((((rt1.c2)OR(vt1.c0)))OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))AND((vt1.c0 IN ()))))OR(rt1.c2)))AND(vt1.c0 COLLATE BINARY)))AND((rt1.c2 IN ()))))AND(GROUP_CONCAT(rt1.c2))))OR(('-632033973' IN (rt1.c0)))), ((rt1.c0) IS TRUE), ((rt1.c1)>>(rt1.c1)) COLLATE NOCASE FROM rt1 WHERE (((((((NULL)OR('-2128690163')))AND(x''))) NOT BETWEEN ((((((((('')AND(NULL)))OR(x'29d7')))AND(x'')))OR(NULL))) AND (CASE WHEN '1086202948' THEN NULL WHEN x'' THEN NULL WHEN 0.4708074376629352 THEN 0.8404122859805749 END))); -- 1ms;
SELECT (~ (rt1.c1)) COLLATE NOCASE, (~ (((x'') IS FALSE))), ((LIKELIHOOD(rt1.c0, 0.43109671708163533))GLOB(((vt1.c0)OR(rt1.c0)))) FROM rt1, vt1; -- 0ms;
SELECT ALL ((rt1.c2 COLLATE RTRIM)>>(CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 ELSE vt1.c0 END)) FROM vt1 WHERE ((((((NULL)) BETWEEN ((x'94c1')) AND (('-1633026103'))))IS NOT(((NULL) BETWEEN ('') AND (0.10443503734953308)))));SELECT DISTINCT (((vt1.c0 IN ())) NOTNULL), LIKELIHOOD(((rt1.c2)<(rt1.c2)), 0.5565498780867505), (((((((rt1.c0))<((rt1.c1))))AND((rt1.c0 IN ()))))OR(((rt1.c1) ISNULL))), (((rt1.c2) ISNULL) IN ()), (CAST(vt1.c0 AS INTEGER) IN ()) FROM vt1, rt1 ORDER BY ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)IS(CASE WHEN rt1.c2 THEN vt1.c0 END))  NULLS LAST; -- 0ms;
SELECT CAST(((rt1.c1)+(rt1.c0)) AS INTEGER), (((vt1.c0)) NOT BETWEEN ((((vt1.c0) NOTNULL))) AND ((CHANGES()))), COUNT((vt1.c0 IN ())) FROM vt1, rt1 WHERE (CAST(((NULL) NOT NULL) AS INTEGER)); -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c1)>(rt1.c1))) FROM vt1 WHERE ((((x'' IN (0X24e1fc36)))<>('0.12415184047449646'))) LIMIT -2039614698 OFFSET -552099400;SELECT DISTINCT ((((((rt1.c1) ISNULL))OR(((rt1.c1)-(vt1.c0)))))AND(rt1.c0 COLLATE NOCASE)) FROM vt1;SELECT DISTINCT CAST(((vt1.c0)IS NOT(rt1.c2)) AS INTEGER), ((((((((((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))OR(((rt1.c1) ISNULL))))OR((('0.5317940788120403') BETWEEN (rt1.c2) AND (vt1.c0)))))OR((rt1.c1 IN ()))))AND((~ (vt1.c0)))), ((((((((((rt1.c2) ISNULL))AND(CASE WHEN rt1.c0 THEN rt1.c1 END)))AND(((rt1.c1)>=(rt1.c0)))))OR(((rt1.c2)>(NULL)))))AND(CASE NULL  WHEN rt1.c1 THEN rt1.c1 END)) FROM rt1 WHERE (CASE WHEN ((NULL) NOTNULL) THEN ((((((((0.9202011896164887)AND(NULL)))OR(x'')))AND('-1855157720')))OR(x'')) WHEN TRIM(DISTINCT -1.306025856E9) THEN (~ (-4.2702526E8)) WHEN (('BI*w\ra{hy')>=(NULL)) THEN (((NULL)) BETWEEN ((0.09634993006048065)) AND ((-1.802335258E9))) END);SELECT ALL TOTAL(CASE WHEN rt1.c0 THEN x'5267' ELSE rt1.c0 END) FROM rt1, vt1; -- 0ms;
SELECT ALL (((rt1.c0 IN (rt1.c2)))==(((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT (((vt1.c0)>=('973766166')) IN ()) FROM vt1, rt1 WHERE (COALESCE(DISTINCT HEX(DISTINCT '573477601'), ((0.08949197623857097) ISNULL), (- (x'dadc')), (((0.4676315254020693)) BETWEEN ((NULL)) AND ((x''))), (((x'')) NOT BETWEEN ((NULL)) AND ((NULL))), ((0Xffffffffe5282aa5) NOT NULL))); -- 0ms;
SELECT ALL CASE CAST(vt1.c0 AS REAL)  WHEN rt1.c1 THEN ((((((((rt1.c1)OR(rt1.c1)))OR(vt1.c0)))OR(NULL)))OR(vt1.c0)) WHEN vt1.c0 THEN (rt1.c2 IN (rt1.c2)) WHEN (NULL IN (vt1.c0, rt1.c0)) THEN rt1.c0 COLLATE NOCASE ELSE ((((((((vt1.c0)AND(rt1.c0)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)) END, PERCENT_RANK() OVER (), CASE x'9214'  WHEN (rt1.c1 IN ()) THEN (~ (rt1.c0)) ELSE ((vt1.c0)LIKE(rt1.c0)) END FROM vt1, rt1 WHERE ((NOT ('0.5153275580070122'))); -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN ((((((rt1.c2)OR(rt1.c0)))OR(rt1.c0)))) AND ((((rt1.c0) NOTNULL)))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS TEXT)) ISNULL), UPPER(COUNT(vt1.c0)), (((((((((((((rt1.c2 IN (rt1.c0)))OR(((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)))))OR(vt1.c0 COLLATE NOCASE)))AND(((rt1.c2) BETWEEN (vt1.c0) AND (rt1.c2)))))OR((rt1.c0 IN ()))))AND(((rt1.c0)OR(rt1.c1)))))OR((NOT (rt1.c2)))) FROM vt1 WHERE (((((('0.30423968412233116') NOT BETWEEN ('998233177') AND (x''))))>((CAST(0.9315976659341577 AS INTEGER)))));SELECT NTILE((((vt1.c0)) NOT BETWEEN ((CAST(rt1.c1 AS REAL))) AND ((((vt1.c0)/(rt1.c0)))))) OVER () FROM rt1, vt1; -- 0ms;
SELECT ALL NTILE(((((((((json_array_length(rt1.c2, rt1.c0))AND(((rt1.c1) NOT NULL))))AND(((vt1.c0) BETWEEN (rt1.c1) AND (vt1.c0)))))OR(CASE WHEN '\n&%Cj' THEN '1271555365' ELSE rt1.c1 END)))OR(CASE rt1.c1  WHEN '749920157' THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 WHEN rt1.c2 THEN NULL ELSE vt1.c0 END))) OVER () FROM rt1, vt1 WHERE ((((('1721876859' IN ())))<((CASE x''  WHEN 0.30423968412233116 THEN '-1507748690' WHEN 0.01401839395964588 THEN NULL WHEN 0.6494307011304706 THEN 1589640674 END)))); -- 0ms;
SELECT ((CAST(rt1.c1 AS REAL)) IS FALSE), ('-1297057564' IN ()), COUNT(*) OVER () FROM rt1 WHERE (('~k4h\njE' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 GROUP BY CAST(rt1.c0 COLLATE BINARY AS REAL) HAVING ((CASE rt1.c0  WHEN rt1.c2 THEN 0xffffffff9a6bbb5d ELSE rt1.c2 END)IS NOT(((((rt1.c2)AND(rt1.c0)))AND(rt1.c2)))); -- 0ms;
SELECT (~ ((+ (vt1.c0)))), x'' COLLATE BINARY, (((rt1.c2 COLLATE BINARY, ((rt1.c1) BETWEEN (rt1.c1) AND ('DM8U')), ((vt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c0))))==((DATE(vt1.c0, rt1.c0, vt1.c0), rt1.c2 COLLATE BINARY, CAST(rt1.c2 AS NUMERIC)))) FROM rt1, vt1; -- 0ms;
SELECT ALL ((((rt1.c2) NOTNULL)) BETWEEN ((+ (rt1.c0))) AND (((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))), TOTAL((rt1.c2 IN ())), (- (((rt1.c2)<<(x'')))) FROM vt1, rt1 WHERE ((((- (0.9647720734737276)))>((((NULL, 0.41580515950460006, '1569607761')) NOT BETWEEN ((x'', NULL, 0.8484019385567273)) AND (('', '', '424050116')))))) LIMIT 1737901977 OFFSET -1321109890; -- 1ms;
SELECT DISTINCT CASE WHEN (~ (vt1.c0)) THEN ((vt1.c0) ISNULL) WHEN '1280621011' THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt1.c1)) WHEN ((rt1.c2) NOT NULL) THEN (~ (vt1.c0)) ELSE ((vt1.c0)|(rt1.c1)) END FROM vt1, rt1; -- 0ms;
SELECT CAST(CASE rt1.c1  WHEN vt1.c0 THEN vt1.c0 ELSE 0x521f8301 END AS REAL) FROM rt1, vt1 WHERE (NULL COLLATE BINARY) ORDER BY ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c0))) NOT BETWEEN ((((rt1.c1))=((rt1.c0)))) AND (((rt1.c0) NOT BETWEEN (vt1.c0) AND (rt1.c2)))); -- 0ms;
SELECT ((TOTAL(0X222e92e1)) NOT NULL) FROM rt1, vt1; -- 0ms;
SELECT ALL CAST(((rt1.c2)|(rt1.c0)) AS INTEGER), (- (CASE WHEN vt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c1 END)), ((NOT (rt1.c1)) IN ()) FROM vt1;SELECT ALL ((((rt1.c1) IS FALSE))<=(((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))), UPPER(DISTINCT (((rt1.c0))<=((vt1.c0)))), SUM(((vt1.c0) BETWEEN (rt1.c2) AND (rt1.c2))) OVER () FROM rt1, vt1; -- 1ms;
SELECT DISTINCT (((((rt1.c2 IN (rt1.c2)))OR((((rt1.c0, rt1.c0, 0.09616332262111837)) NOT BETWEEN ((rt1.c0, vt1.c0, rt1.c1)) AND ((rt1.c1, vt1.c0, rt1.c1))))))OR((- (rt1.c0)))) FROM vt1, rt1 LIMIT 30862505; -- 0ms;
SELECT DISTINCT ((((((((((((((rt1.c2) NOTNULL))AND(((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c2)))))AND(((((rt1.c1)AND(rt1.c1)))OR(rt1.c0)))))OR(((x'')AND(rt1.c0)))))AND((rt1.c1 IN (rt1.c0, rt1.c1)))))AND(((rt1.c2)&(vt1.c0)))))OR(NULL)), (('LF') NOT BETWEEN (((vt1.c0)+(rt1.c2))) AND (vt1.c0 COLLATE RTRIM)), ((((rt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt1.c2))) IN ()) FROM vt1;SELECT DISTINCT (NOT (((rt1.c0)IS(rt1.c1)))), (((rt1.c1 IN (rt1.c0))) BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt1.c2))) AND (((rt1.c0)<=(rt1.c1)))), rt1.c1 FROM vt1 WHERE (COALESCE(COALESCE(x'', ''), ((0.12292302970310631)AND('435695812')), ((x'')AND(x'22e2')), (((x'', 0.6638550139632025, 1029727214, ',z쌊I#j6', 0x688b69fe)) NOT BETWEEN (('TRUE', NULL, x'', x'', x'')) AND ((0x4b6f13b6, 0.7657629222730524, 'Qy', 'DxBAYCX', '	}HgN\n')))));SELECT ALL ((vt1.c0)LIKE(CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END)), ((CAST(vt1.c0 AS REAL)) BETWEEN (0x1) AND (UPPER(DISTINCT rt1.c0))), CASE WHEN ((vt1.c0)>=(rt1.c2)) THEN (NOT (rt1.c2)) WHEN rt1.c0 THEN load_extension(rt1.c1, rt1.c0) WHEN (((rt1.c2)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) THEN NULL END FROM vt1, rt1; -- 1ms;
SELECT DISTINCT (- (((x'4b7e') NOT BETWEEN (vt1.c0) AND (rt1.c2)))) FROM rt1 NOT INDEXED WHERE (((('０x⎈s|' IN ())) NOTNULL)) LIMIT 452780572 OFFSET -565483669;SELECT DISTINCT (~ (0.5618140922171015)) FROM vt1, rt1 LIMIT 154781620 OFFSET -475282296; -- 0ms;
SELECT GROUP_CONCAT(CAST(rt1.c2 AS BLOB)) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c0)==(vt1.c0))), ((rt1.c1 IN ()) IN ()), ((CASE x''  WHEN vt1.c0 THEN '0.0' END) BETWEEN (CASE 2.36077738E8  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND (0xffffffffa51e937e)) FROM vt1;SELECT ALL rt1.c0, (NOT (((((0X68a5977a)AND(rt1.c2)))AND(rt1.c0)))), (((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((rt1.c2))))LIKE(rt1.c0 COLLATE RTRIM)) FROM vt1, rt1 WHERE ((((-1e500) NOT BETWEEN ('-189311715') AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((CASE rt1.c2  WHEN rt1.c1 THEN rt1.c1 ELSE NULL END)LIKE(MAX(rt1.c0))) FROM vt1;SELECT DISTINCT (GROUP_CONCAT(rt1.c0) IN ()) FROM rt1 WHERE ((+ (((0.8485828825283974)%(0.28861965863681216))))); -- 1ms;
SELECT DISTINCT ABS(rt1.c1 COLLATE BINARY) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT CAST((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((0xffffffffad5e1d61))) AS REAL) FROM vt1 WHERE (CASE WHEN CASE WHEN '0.22277458499266278' THEN 0xffffffff941377bb ELSE 0.30378785052325386 END THEN (+ (NULL)) WHEN (('7')LIKE(0.22277458499266278)) THEN ((((x'')AND(NULL)))AND('')) WHEN TRIM(DISTINCT '724145498', 0.5878905308071568) THEN CASE WHEN 0.5571514268700836 THEN x'' END ELSE ((NULL) BETWEEN (NULL) AND (NULL)) END);SELECT DISTINCT (((NOT (vt1.c0))) NOTNULL) FROM vt1, rt1 WHERE ((((0.49419268752532863 IN (NULL))) NOT BETWEEN (TRIM(0.6515001892783537, 0.3525347274090186)) AND (CASE x'2cc0'  WHEN '-743133272' THEN 0X3bcc2d7b END))); -- 0ms;
SELECT DISTINCT rt1.c2 FROM vt1, rt1 LIMIT -1982280756; -- 0ms;
SELECT DISTINCT (((+ (rt1.c1)))||(COUNT(rt1.c1))) FROM rt1 ORDER BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1))) NOT BETWEEN (CAST(rt1.c0 AS BLOB)) AND (rt1.c2 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT CASE '911566376'  WHEN '8쎾/oH|M' THEN ((vt1.c0)%(rt1.c0)) WHEN (('174320127')*(rt1.c0)) THEN rt1.c0 WHEN rt1.c0 COLLATE RTRIM THEN ((rt1.c1)&(rt1.c0)) END FROM rt1, vt1 WHERE (((('F\O', NULL, 1591340778)) NOT BETWEEN (((NOT (x'5b04')), x'' COLLATE RTRIM, (('A	C')<('蘎9?L')))) AND ((((x'') NOTNULL), ((x'3c35dd39')<=(0.20436554042839372)), '-1967863170' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT (((((((rt1.c1, rt1.c1, rt1.c2))<=((rt1.c2, rt1.c0, rt1.c0))))OR(CASE WHEN rt1.c2 THEN rt1.c1 END)))OR(rt1.c2)) FROM vt1;SELECT DISTINCT CUME_DIST() OVER (), (CASE rt1.c1  WHEN rt1.c2 THEN 0.8172124490432077 END IN (rt1.c2 COLLATE RTRIM)), ((((- (rt1.c2))))!=((COUNT(*)))) FROM vt1 WHERE (NULL COLLATE RTRIM);SELECT ((((COUNT(vt1.c0))AND((- (rt1.c2)))))AND(((((vt1.c0)AND(rt1.c0)))AND(vt1.c0)))), CASE WHEN ((((rt1.c1)AND(rt1.c2)))OR(rt1.c2)) THEN ((rt1.c0)*(rt1.c2)) WHEN ((rt1.c0)OR(rt1.c0)) THEN ((NULL)OR(rt1.c1)) WHEN (((vt1.c0, rt1.c1, vt1.c0, rt1.c0, rt1.c2)) BETWEEN ((rt1.c0, rt1.c2, rt1.c2, NULL, vt1.c0)) AND ((1.721876859E9, rt1.c2, rt1.c2, rt1.c2, x'ca8e'))) THEN ((vt1.c0)IS(rt1.c1)) ELSE '' END, CASE 0X4bb1712b  WHEN (((vt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((vt1.c0))) THEN ((rt1.c0)<(rt1.c2)) WHEN ((rt1.c1)<<(rt1.c0)) THEN MIN(0.1811129107457673) WHEN rt1.c1 COLLATE BINARY THEN NULL END FROM rt1, vt1 WHERE (CAST(((x'') NOT BETWEEN (0.05046035529195059) AND ('|耴_d~y-_')) AS BLOB)) ORDER BY CAST(((rt1.c0)*(rt1.c1)) AS INTEGER) LIMIT 555613446; -- 0ms;
SELECT DISTINCT ((~ (rt1.c2)) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c1 WHEN 0.427960011952669 THEN rt1.c1 ELSE rt1.c0 END) NOTNULL), (((rt1.c2 IN ()))OR(CAST(rt1.c2 AS NUMERIC))), ((json_valid(rt1.c0))OR(CAST(rt1.c1 AS BLOB))) FROM vt1;SELECT DISTINCT (((rt1.c1 COLLATE RTRIM))<(((NULL IN ())))), CASE WHEN (NOT (rt1.c2)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (rt1.c2)) WHEN ((rt1.c0)/(rt1.c0)) THEN ((vt1.c0) NOT NULL) WHEN (~ (vt1.c0)) THEN ((rt1.c2) IS TRUE) ELSE (+ (rt1.c1)) END, (((rt1.c1, 0X66a1c17b, vt1.c0)) NOT BETWEEN (((NOT (vt1.c0)), CAST(rt1.c0 AS NUMERIC), CASE vt1.c0  WHEN vt1.c0 THEN rt1.c0 END)) AND ((((rt1.c1) IS TRUE), ((x'') BETWEEN (rt1.c0) AND (vt1.c0)), TRIM(DISTINCT rt1.c2)))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM vt1;SELECT ((CASE WHEN rt1.c2 THEN vt1.c0 ELSE rt1.c2 END)LIKE(((rt1.c1) NOT BETWEEN (vt1.c0) AND (rt1.c0)))) FROM vt1;SELECT rt1.c2 FROM rt1 WHERE (CASE WHEN ((0.2492729203369134) BETWEEN ('h') AND (x'')) THEN CAST('1012250051' AS BLOB) END); -- 0ms;
SELECT (((((rt1.c1)OR(0xfffffffffc55454b)))AND(rt1.c1)) IN ()) FROM rt1; -- 0ms;
SELECT MAX(((rt1.c2)*(rt1.c0))) COLLATE RTRIM FROM vt1 WHERE (0.1872775456455288) LIMIT 1012250051 OFFSET 225044507;SELECT DISTINCT ((((((rt1.c2)OR(rt1.c0)))AND(rt1.c0)))AND(((rt1.c0) NOT NULL))) FROM rt1 WHERE (QUOTE(((0.09634993006048065)+('-1730535419')))); -- 0ms;
SELECT ((((vt1.c0)LIKE(rt1.c2)))-(((rt1.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM rt1 WHERE ((((x'' IN ())) BETWEEN ((NOT (''))) AND ('')));SELECT DISTINCT (+ (LIKELIHOOD(rt1.c1, 0.8313782345571166))), CAST(COALESCE(rt1.c0, rt1.c2) AS REAL), ((highlight(rt1.c1, vt1.c0, rt1.c0, rt1.c0))IS((((rt1.c0))>((vt1.c0))))) FROM rt1, vt1 WHERE ((CASE WHEN NULL THEN '8Tx~' ELSE NULL END IN ())); -- 0ms;
SELECT ALL ((rt1.c2) IS TRUE) COLLATE BINARY FROM rt1 WHERE (CASE x'' COLLATE RTRIM  WHEN 0.9927408240299886 COLLATE NOCASE THEN (('-907229168')*(x'')) ELSE (NOT (x'97d7')) END) ORDER BY CAST((((rt1.c0))!=((rt1.c0))) AS REAL), ((((rt1.c2) NOTNULL)) IS TRUE) ASC, ((((rt1.c0) NOTNULL))&(((rt1.c0)>=(-9.25261306E8)))) ASC  NULLS LAST LIMIT -1254108716 OFFSET 2107458939; -- 0ms;
SELECT DISTINCT ((((rt1.c0)IS(rt1.c2))) BETWEEN (((vt1.c0)&(vt1.c0))) AND (((((rt1.c0)OR(rt1.c1)))OR(rt1.c1)))) FROM vt1, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN (vt1.c0 IN ()) END, rt1.c0, CAST(rt1.c0 AS INTEGER) COLLATE NOCASE, CAST(((rt1.c2)|(rt1.c1)) AS REAL), CASE (- (rt1.c0))  WHEN (((rt1.c0, vt1.c0, rt1.c1))<=((rt1.c1, rt1.c1, rt1.c0))) THEN ((((vt1.c0)AND(rt1.c0)))AND(rt1.c1)) ELSE ((vt1.c0)<<(rt1.c1)) END FROM rt1, vt1; -- 0ms;
SELECT ALL ((((+ (rt1.c0))))<((((rt1.c0) NOT NULL)))), ((CASE WHEN rt1.c2 THEN vt1.c0 END) BETWEEN (CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN vt1.c0 END) AND (((rt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), (- (-594712019)) COLLATE NOCASE FROM vt1;SELECT DISTINCT CASE WHEN CAST(NULL AS TEXT) THEN rt1.c1 COLLATE NOCASE END FROM vt1 WHERE (((((((((((((((0.13933592903858671)<=(NULL)))AND((- (0.2792484795458047)))))OR(((((1.891564714E9)OR(NULL)))OR('')))))AND((('ByBY4U') ISNULL))))AND(((x'be0a')-('')))))OR(LTRIM(NULL, x'e2d48b24'))))AND(((((((((x'83956f7c')OR(-1735100722)))OR(4.69250285E8)))AND(0.21295892146147943)))OR('')))));SELECT DISTINCT TRIM(rt1.c0 COLLATE BINARY, ((rt1.c1)|(rt1.c2))), SUM((rt1.c1 IN ())), COUNT(COUNT(((rt1.c0)>>(rt1.c2)))) FROM rt1, vt1 WHERE ((+ ((((('ed')OR('-731610779')))OR(NULL))))) ORDER BY (((rt1.c2)) NOT BETWEEN (((0.16599487080293918 IN ()))) AND (((((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c0)))))) ASC  NULLS FIRST;SELECT DISTINCT (((rt1.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) AND ((0.5638604159675483))) FROM vt1 WHERE (((((0.09052451724857236) BETWEEN ('-1331084721') AND (NULL)))||(CAST(0X5c217f4b AS INTEGER)))) ORDER BY ((CASE WHEN rt1.c2 THEN rt1.c0 ELSE vt1.c0 END)>>(rt1.c0 COLLATE BINARY))  NULLS FIRST, ((rt1.c2) NOTNULL) COLLATE RTRIM  NULLS FIRST LIMIT 188732516 OFFSET 2097937996;SELECT LOWER(DISTINCT ((rt1.c0) NOT NULL)), AVG((((rt1.c2)) NOT BETWEEN ((rt1.c0)) AND ((vt1.c0)))), NULL FROM rt1, vt1; -- 0ms;
SELECT rt1.c2 FROM rt1, vt1 GROUP BY (~ (((rt1.c2)OR(rt1.c1)))), '', (((((rt1.c0, rt1.c1, rt1.c0)) BETWEEN ((rt1.c1, rt1.c2, vt1.c0)) AND ((rt1.c2, vt1.c0, rt1.c0))))>((rt1.c2 IN ()))) HAVING IFNULL(((rt1.c1)||(5.73477601E8)), ((rt1.c0)LIKE(vt1.c0))); -- 1ms;
SELECT ALL MIN(((((rt1.c2)AND(rt1.c2)))OR(vt1.c0))) FROM rt1 WHERE (0.9234736468903391);SELECT ALL ((MAX('1086202948')) NOT BETWEEN ((vt1.c0 IN (rt1.c1))) AND (rt1.c2 COLLATE RTRIM)) FROM rt1 WHERE (((((((NULL)IS NOT(x'1323')))AND(x'')))AND('')));SELECT ALL rt1.c2 FROM rt1, vt1 WHERE (((((NULL) NOTNULL)) IS FALSE)); -- 0ms;
SELECT CAST(vt1.c0 COLLATE RTRIM AS NUMERIC), ((((((((((rt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)))AND(json(rt1.c0))))OR(((rt1.c0)>(rt1.c1)))))AND(((vt1.c0) IS TRUE))))AND((((rt1.c0, NULL, rt1.c1))>=((rt1.c2, NULL, rt1.c1))))), ((((rt1.c2)AND(x'a001')))AND(rt1.c1)) COLLATE NOCASE FROM rt1;SELECT DISTINCT (((NOT (rt1.c1))) NOT BETWEEN ((rt1.c2 IN (rt1.c1))) AND (MAX(vt1.c0))), (NOT (rt1.c0)) COLLATE BINARY, AVG(1375534525) OVER () FROM vt1, rt1 WHERE ((((((x'', NULL, NULL))<(('1551217635', '-299346300', 0.31669409380289326)))) ISNULL)); -- 1ms;
SELECT 0.2650962682374912 FROM rt1, vt1 WHERE (((HEX(NULL)) BETWEEN (((x'') IS TRUE)) AND (CAST(x'eed3a553' AS BLOB)))) GROUP BY (NOT (CASE WHEN rt1.c2 THEN '65)d,y' ELSE '' END)) HAVING (+ (rt1.c0)) COLLATE NOCASE COLLATE BINARY; -- 0ms;
SELECT ALL CAST(((((rt1.c2)AND(vt1.c0)))AND(rt1.c0)) AS NUMERIC), NTILE(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c1)) COLLATE NOCASE) OVER (), (+ (CAST(rt1.c2 AS BLOB))) FROM rt1 ORDER BY rt1.c1 ASC;SELECT ((rt1.c2 COLLATE RTRIM) ISNULL) FROM rt1 WHERE (CAST((0.7151523197490939 IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((rt1.c1)GLOB(vt1.c0)) IN ()) FROM rt1 GROUP BY TYPEOF((((rt1.c0)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2)))), CASE rt1.c0 COLLATE BINARY  WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c1 AS TEXT) END, ((((((rt1.c0)OR(rt1.c1)))OR(rt1.c0))) ISNULL) HAVING AVG(((((((((rt1.c1)AND(rt1.c2)))AND(rt1.c1)))AND(vt1.c0)))OR(NULL)));SELECT (0X7fc5956d IN ()) FROM vt1, rt1 WHERE (((CAST(x'' AS INTEGER))==((((('q\nR*]')AND(NULL)))OR(x''))))); -- 0ms;
SELECT ALL CASE CAST(rt1.c1 AS BLOB)  WHEN TRIM(rt1.c2, vt1.c0) THEN GROUP_CONCAT(vt1.c0) WHEN (rt1.c1 IN ()) THEN ((((((((x'f6a8')OR(vt1.c0)))OR(rt1.c1)))AND(rt1.c1)))AND(rt1.c1)) WHEN ((rt1.c1)&(vt1.c0)) THEN CAST(vt1.c0 AS REAL) ELSE CASE vt1.c0  WHEN rt1.c2 THEN vt1.c0 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN 0X37b88f2 END END FROM rt1 WHERE ((((((x'', 1034137140, 0.4532077090093629)) BETWEEN ((NULL, NULL, '-1123709137')) AND ((x'', x'', '-1034445315'))))*(0.12038267528326518)));SELECT ALL CASE rt1.c2 COLLATE RTRIM  WHEN rt1.c2 THEN (((vt1.c0)) BETWEEN ((x'')) AND ((vt1.c0))) END FROM vt1, rt1; -- 0ms;
SELECT ALL CASE WHEN CAST(rt1.c2 AS INTEGER) THEN ((rt1.c1) NOTNULL) WHEN ((((vt1.c0)OR(rt1.c1)))OR(vt1.c0)) THEN -1129043662 WHEN rt1.c1 COLLATE NOCASE THEN CAST(NULL AS INTEGER) END FROM vt1, rt1 WHERE (JULIANDAY(CAST(575400023 AS INTEGER), ((('', NULL, 0.06482616278563358))<=((x'', x'', x'f76b'))), ((-1.242198039E9)GLOB(NULL)))); -- 0ms;
SELECT DISTINCT ((((rt1.c1)IS NOT(vt1.c0)))<<(IFNULL(vt1.c0, rt1.c1))) FROM rt1, vt1 WHERE (CAST(0.45473764247102677 AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT TOTAL((+ (0.1601376844083624))) OVER (), CAST(((rt1.c0) IS FALSE) AS TEXT), ((((((((rt1.c1)OR(rt1.c1)))OR(rt1.c2)))AND(rt1.c0)))AND((rt1.c0 IN (rt1.c1)))) FROM rt1 WHERE (CAST(((((-798807093)OR(NULL)))AND('^oFyuF谚^')) AS NUMERIC)); -- 0ms;
SELECT (((((rt1.c2))>((vt1.c0)))) IS TRUE), ((CASE vt1.c0  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c1 END)%(COALESCE(rt1.c2, rt1.c1))), LIKELIHOOD(((rt1.c1)<(vt1.c0)), 0.9351657299516057), x'', (((((vt1.c0)||(rt1.c0))))!=(((+ (rt1.c0))))) FROM rt1, vt1 GROUP BY ((((vt1.c0) NOT NULL)) NOT BETWEEN (((rt1.c1) NOT BETWEEN (rt1.c1) AND (vt1.c0))) AND ((((vt1.c0, rt1.c0, rt1.c2)) NOT BETWEEN ((rt1.c0, rt1.c0, rt1.c0)) AND ((vt1.c0, rt1.c2, rt1.c2))))) HAVING SUM(CAST(vt1.c0 AS TEXT)); -- 0ms;
SELECT ((((((rt1.c0)AND(rt1.c1)))AND(rt1.c1))) ISNULL) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT ((((NULL)AND(((((rt1.c2)OR(rt1.c1)))AND(rt1.c2)))))AND(rt1.c0 COLLATE RTRIM)), (((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c0)) IN ()), ((((0.27520874970390274) NOT BETWEEN (rt1.c1) AND (rt1.c0)))%((rt1.c2 IN ()))) FROM rt1, vt1; -- 0ms;
SELECT ALL RANK() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)) FROM rt1, vt1 GROUP BY CAST((~ (0xffffffffdf17a1b8)) AS INTEGER), (((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c1)) IN (highlight(rt1.c1, NULL, rt1.c1, vt1.c0))), (((rt1.c2)) BETWEEN ((CASE rt1.c0  WHEN rt1.c0 THEN rt1.c1 END)) AND ((((rt1.c1)IS(vt1.c0))))) HAVING (NOT (vt1.c0));SELECT (rt1.c0 IN (rt1.c2)) COLLATE NOCASE FROM rt1, vt1 WHERE (0.21486417110351752) ORDER BY (((rt1.c2, vt1.c0, rt1.c0)) NOT BETWEEN (((NOT (rt1.c2)), CAST(rt1.c2 AS REAL), ((vt1.c0)>=(rt1.c1)))) AND ((((vt1.c0)AND(rt1.c2)), vt1.c0, ((vt1.c0) NOT NULL))))  NULLS FIRST, ((CAST(-9.07229168E8 AS INTEGER)) NOT BETWEEN (((rt1.c2) IS FALSE)) AND (((((rt1.c1)OR(rt1.c2)))OR(rt1.c2)))); -- 1ms;
SELECT ALL (((vt1.c0) IS FALSE) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT MIN(COUNT(*)) FROM rt1 ORDER BY ((TRIM(DISTINCT rt1.c1, rt1.c0))%(CASE rt1.c0  WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c1 END));SELECT CASE WHEN ((vt1.c0)<(0.7305008776777426)) THEN ((NULL) ISNULL) WHEN ((rt1.c0)<<('T{UKWmr')) THEN (- (rt1.c1)) WHEN ((((rt1.c1)OR(vt1.c0)))OR(rt1.c0)) THEN rt1.c1 END FROM vt1;SELECT CASE x''  WHEN vt1.c0 THEN rt1.c2 WHEN vt1.c0 THEN rt1.c1 WHEN vt1.c0 THEN rt1.c1 ELSE rt1.c2 END COLLATE NOCASE, SUM((vt1.c0 IN (rt1.c1))) OVER (), ((((0.0666814261173283) IS FALSE))+((NOT (vt1.c0)))) FROM rt1 WHERE (((((0.29692300419208284) NOT BETWEEN ('-565483669') AND ('9Z(&.#8擳'))) NOT BETWEEN (((1800678146)+(NULL))) AND ((((NULL, x'', NULL))<=(('1119342568', 0.486727958096159, '74014303'))))));SELECT ALL CASE (NOT (rt1.c2))  WHEN (((rt1.c0)) BETWEEN ((rt1.c1)) AND ((rt1.c1))) THEN (NOT (vt1.c0)) END, CHANGES(), TYPEOF(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c1 THEN '2019012740' END) FROM rt1;SELECT DISTINCT (((((vt1.c0))<((rt1.c0))))&(((rt1.c1)<(rt1.c0)))) FROM rt1, vt1; -- 0ms;
SELECT DISTINCT UNLIKELY(((rt1.c2)=(rt1.c1))), CASE WHEN (('469250285') NOT BETWEEN (rt1.c1) AND (rt1.c1)) THEN (~ (rt1.c0)) WHEN GROUP_CONCAT(rt1.c0) THEN ((vt1.c0) BETWEEN (rt1.c1) AND (rt1.c0)) WHEN ((rt1.c2)>>(rt1.c2)) THEN ((((rt1.c1)OR(NULL)))AND(rt1.c0)) ELSE CAST(rt1.c1 AS INTEGER) END, SUM(((vt1.c0) ISNULL)) OVER () FROM vt1 WHERE (COALESCE(DISTINCT x'' COLLATE NOCASE, ((((-1.633026103E9)OR('852392830')))OR(0xffffffffccfac30a))));SELECT DISTINCT ((0.5224640290442146) IS TRUE) FROM vt1 WHERE ((((('584044106') BETWEEN ('C彘Z+ J4J	') AND ('ch}')))<<(((((((((x'a1e8')AND('/*zz')))AND(NULL)))AND('1353830207')))AND(0.1499199772352996))))) LIMIT -1517085980 OFFSET -212078418; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c1)AND(rt1.c2)))OR(rt1.c0)))OR(x'')))AND(rt1.c0))) NOTNULL) FROM rt1; -- 0ms;
SELECT ((((SUBSTR(rt1.c1, rt1.c2))OR(rt1.c2 COLLATE NOCASE)))AND(MIN(rt1.c1))) FROM vt1, rt1; -- 0ms;
SELECT DISTINCT (('-731610779')>(rt1.c2 COLLATE NOCASE)) FROM vt1 WHERE ((+ (0.03176445445782605)));SELECT MIN(((rt1.c0)+(rt1.c2))) FROM rt1 WHERE (NULL); -- 0ms;
SELECT CAST(((rt1.c1) IS TRUE) AS NUMERIC), ((((vt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)))=((~ (rt1.c1)))), CASE NULL  WHEN GROUP_CONCAT(rt1.c0) THEN (vt1.c0 IN ()) END FROM rt1;SELECT load_extension('-', rt1.c1 COLLATE BINARY), CASE WHEN ((rt1.c2)>(rt1.c2)) THEN (vt1.c0 IN ()) END, DATE(0X34899cda, ((rt1.c1)>>(rt1.c0)), ((rt1.c0) BETWEEN (rt1.c1) AND (vt1.c0))) FROM rt1 LIMIT 170488698 OFFSET 1907162432;SELECT DISTINCT ((((((((((((TRIM(rt1.c0, rt1.c2))OR(STRFTIME(vt1.c0, rt1.c0, rt1.c0, rt1.c2, vt1.c0))))AND(CAST(vt1.c0 AS BLOB))))OR((NOT (vt1.c0)))))OR((((0.12058544455709663))>((rt1.c0))))))AND(((rt1.c0) IS TRUE))))OR((x'' IN (NULL)))), ((vt1.c0 COLLATE BINARY) IS FALSE), ((LIKE('뢶StF', rt1.c0, '轱')) NOT NULL) FROM vt1 WHERE ((((x'')) NOT BETWEEN (((((('1101141981')OR(NULL)))OR(NULL)))) AND ((CASE 0xffffffffa9e13918  WHEN '1176617756' THEN 'IR4O^<W' WHEN 'L7\{' THEN x'84b4' WHEN '' THEN 0.7107365502273882 ELSE -1895451955 END))));SELECT DISTINCT ((((TRIM(DISTINCT NULL))AND(TRIM(vt1.c0, rt1.c0))))AND(CAST(vt1.c0 AS BLOB))) FROM rt1;SELECT LAG(((UNLIKELY(DISTINCT rt1.c2)) BETWEEN (rt1.c1) AND (0.8700624677224593)), ((((- (rt1.c1))))==((((rt1.c2) IS TRUE)))), (((~ (rt1.c0))) BETWEEN (HEX(rt1.c0)) AND (CASE rt1.c0  WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c2 END))) OVER () FROM rt1 WHERE ((- (TRIM(DISTINCT 'm%Q鎣', x'')))); -- 0ms;
