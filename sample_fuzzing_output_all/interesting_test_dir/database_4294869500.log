-- Time: 2024/06/07 06:35:11
-- Database: database0
-- Database version: 3.40.0
-- seed value: 4294869500
PRAGMA cache_size = 50000; -- 5ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 8ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INT , +c6 INT ); -- 1ms;
UPDATE OR IGNORE rt0 SET c4=x'' WHERE ((((((((((((NULL)AND(((0.22002568302918768)+(rt0.c1)))))AND(((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))))AND(((rt0.c3)LIKE(rt0.c2)))))OR(((rt0.c4) BETWEEN (NULL) AND (rt0.c0)))))AND(UPPER(DISTINCT rt0.c2))))AND(rt0.c2)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.25678016339518384; -- 2ms;
REINDEX; -- 0ms;
PRAGMA optimize; -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA main.busy_timeout = 10000; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c3, c0, c1) VALUES (-1639804609, NULL, 0.22002568302918768, 0.024652161430505748), (1945382757, '0.25678016339518384', x'', x'35ab'), (x'', '', '-1639804609', 0.33508076938093423); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt1(c3, c5) VALUES (NULL, 0.22002568302918768), (-1.639804609E9, NULL), (NULL, NULL); -- 0ms;
INSERT OR FAIL INTO rt1(c3, c4, c6) VALUES (NULL, NULL, NULL); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=x'899d', c3=1.945382757E9, c5='*Wk鄿scJ#' WHERE (((~ (rt1.c2)))IS NOT(((rt1.c6)>(rt1.c1)))); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.auto_vacuum; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.automatic_index; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(0.23810969465058318) WHERE rt0.c1; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((('')*(x'')) IN ()); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4, c0, c1) VALUES (0x73f42f65, NULL, '_', 0.024652161430505748, 0xffffffffc2f9f4e4); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE temp; -- 0ms;
PRAGMA default_cache_size = 1563478107; -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x''); -- 0ms;
PRAGMA secure_delete; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES ('|fEn', NULL); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET c4=x'00f3'; -- 0ms;
REINDEX  rt1; -- 0ms;
PRAGMA secure_delete; -- 0ms;
UPDATE OR REPLACE rt1 SET (c6, c5)=(x'', 'sT') WHERE CASE ((rt1.c3) NOT BETWEEN (rt1.c2) AND (rt1.c2))  WHEN rt1.c6 THEN ((rt1.c4) IS TRUE) WHEN ((rt1.c0)IS NOT(rt1.c2)) THEN CHANGES() WHEN rt1.c1 THEN (((rt1.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c6))) ELSE '1945382757' END; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt1 SET (c3, c3)=(1.563478107E9, NULL) WHERE (((- (rt1.c2))) NOTNULL); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c2, c1)=(x'', 668917705); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES ('1563478107', 0.14779261617207007, x'cdd7', NULL, '-995795524'); -- 0ms;
UPDATE OR FAIL rt1 SET c3=NULL, c6=NULL WHERE ((rt1.c4)+(rt1.c5)) COLLATE BINARY; -- 0ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO rt1(c5, c0, c4) VALUES (x'536336c7', x'', 0xffffffff9e42913f); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c0, c3, c1) VALUES (NULL, '1090713942', x'', x''); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((+ (NULL))) NOT NULL); -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=0.5092655446798956 WHERE ((((((((((rt0.c1)>>(rt0.c3)))OR('132642715')))AND((~ (rt0.c2)))))AND(((x'73a1')<(0.5361720442045069)))))AND(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)))); -- 0ms;
INSERT OR FAIL INTO rt1(c5) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c4) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c5, c0, c3, c1) VALUES (x'', '668917705', '', x''); -- 0ms;
ANALYZE; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
UPDATE OR FAIL rt1 SET (c4)=(x'8e3b') WHERE ((x'')IS(((rt1.c3)/(rt1.c3)))); -- 0ms;
ANALYZE; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'' WHERE ((rt0.c3) NOTNULL) COLLATE NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c0, c2, c4, c5, c6, c1, c3) VALUES (0.49461393289297095, NULL, NULL, NULL, -1.023806236E9, 'D]', x'1a7d'); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c6, c3, c2, c5, c0, c1) VALUES ('\r]6D', 0.5092655446798956, NULL, NULL, 0.957910853083517, x'5001', x'976f'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, '0.23810969465058318', '132642715', NULL); -- 1ms;
INSERT OR FAIL INTO rt0(c4, c0, c3, c1) VALUES ('1090713942', x'', '-1191355840', x''), (1.945382757E9, NULL, NULL, NULL), ('', '-1628089966', 0.22002568302918768, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (x''); -- 1ms;
ANALYZE; -- 3ms;
INSERT OR IGNORE INTO rt1(c3, c5, c0) VALUES (0.1716042692355274, NULL, NULL); -- 0ms;
INSERT OR REPLACE INTO rt1(c3, c2, c0, c5) VALUES (1.090713942E9, '㍏3y䈉%(m''', '1090713942', 1.563478107E9); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (0.024652161430505748, '28306240', 0.20217705850753298, '-1023806236', 1745535687), (x'a6c3', NULL, '~Fq', NULL, 917474027), ('0.49461393289297095', NULL, x'', NULL, '0.25678016339518384'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c2, c1) VALUES (0.7593352692940706, NULL, x'1fed'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0='>X|g~&O'; -- 1ms;
INSERT OR ABORT INTO rt1(c1, c0, c6, c2) VALUES (NULL, '', 636350476, x'dc2a'), (0.0, x'bfff', NULL, x''), (NULL, 0.37369094849309836, 0.1641680578519944, x'775f'), (0X3a5669d6, x'', '-1424722342', 'X奟kNxw''N'), ('28306240', '<~', NULL, NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1) VALUES (0.1641680578519944, '650851151', x''); -- 0ms;
DROP TABLE rt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT LIKELIHOOD(DISTINCT (((rt1.c1)) BETWEEN ((NULL)) AND ((rt1.c2))), 0.011138230853635744) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c2)==(rt1.c0)))OR(((rt1.c4)IS(rt1.c3)))) FROM rt1; -- 0ms;
SELECT ALL COUNT(*), x'', x'' FROM rt1 WHERE (((('1945382757')) NOT BETWEEN ((CAST(0.957910853083517 AS BLOB))) AND ((('0.5361720442045069' IN (0.5415790104318804, 'X奟kNxw''N')))))); -- 0ms;
SELECT ALL ((rt1.c4 COLLATE NOCASE) BETWEEN (rt1.c3) AND ((((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) FROM rt1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), (((~ (rt1.c3))) NOT BETWEEN (((rt1.c2)LIKE(rt1.c1))) AND (rt1.c1)), ((((0.6232174926555799)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c1))) IN ()) FROM rt1 WHERE (((((365142266) ISNULL))IS NOT((('1090713942') NOT NULL)))); -- 0ms;
SELECT SUM(GLOB(rt1.c0, rt1.c0)) OVER (), ((((rt1.c0) BETWEEN (rt1.c5) AND (rt1.c6))) NOT NULL), (((rt1.c4)) BETWEEN ((((rt1.c1) NOT NULL))) AND ((TOTAL(rt1.c0)))) FROM rt1 WHERE (CAST((NULL IN ()) AS REAL)); -- 0ms;
SELECT DISTINCT (+ (CAST(rt1.c1 AS NUMERIC))) FROM rt1 NOT INDEXED WHERE (((((NULL) NOT BETWEEN (0.23810969465058318) AND (0Xffffffff9ef55192)))IS(('' IN (x'de7d'))))); -- 0ms;
SELECT ALL 0.8815664236445794 FROM rt1 WHERE (((CAST(0.9696908274157352 AS INTEGER)) NOTNULL)); -- 0ms;
SELECT ALL ((((rt1.c3)LIKE(rt1.c6)))!=(CASE NULL  WHEN rt1.c2 THEN x'' WHEN rt1.c1 THEN x'' WHEN rt1.c1 THEN x'' END)) FROM rt1 GROUP BY CAST((((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c1))) AS REAL), (((((rt1.c3)>=(rt1.c0))))<=((((((((((((((rt1.c4)OR(rt1.c1)))OR(rt1.c6)))OR(rt1.c2)))AND('-105447406')))AND(rt1.c1)))OR(rt1.c4))))), ((rt1.c3)%(((rt1.c6) BETWEEN (rt1.c4) AND ('-1180042702')))); -- 0ms;
SELECT DISTINCT (x'7993' IN ((~ (rt1.c6)))) FROM rt1; -- 0ms;
SELECT 245790524 COLLATE RTRIM, (UPPER(rt1.c3) IN ()), rt1.c4 FROM rt1 WHERE (CAST(-674027497 AS REAL)) GROUP BY ((CASE rt1.c3  WHEN rt1.c4 THEN rt1.c0 END)|(((rt1.c3)|(rt1.c4)))); -- 0ms;
SELECT DISTINCT ((((((rt1.c6)OR(rt1.c0)))AND(rt1.c6)))%(MAX(rt1.c3))) FROM rt1 INTERSECT SELECT DISTINCT rt1.c4 FROM rt1 GROUP BY ((rt1.c6) NOTNULL) HAVING ((((rt1.c2)/(rt1.c3)))LIKE(QUOTE(rt1.c6))); -- 0ms;
SELECT DISTINCT rt1.c6 FROM rt1; -- 0ms;
SELECT DISTINCT LAST_VALUE((+ (rt1.c4 COLLATE BINARY))) OVER (), rt1.c6, CAST((rt1.c6 IN ()) AS TEXT) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c3))) NOTNULL) FROM rt1; -- 1ms;
SELECT DISTINCT (rt1.c0 COLLATE BINARY IN ()), RANK() OVER (), CASE ((((((((rt1.c2)OR(331238914)))AND(rt1.c1)))OR(rt1.c2)))AND(rt1.c2))  WHEN CAST(rt1.c2 AS TEXT) THEN rt1.c1 WHEN SUM(rt1.c1) THEN ((1.32642715E8)<('c?6MV<')) WHEN CAST(rt1.c6 AS NUMERIC) THEN (NOT (rt1.c2)) END FROM rt1; -- 0ms;
SELECT DISTINCT (((((((rt1.c3))>((rt1.c3))))AND(0.43643811808946276)))AND(rt1.c4 COLLATE BINARY)) FROM rt1 WHERE (x''); -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE FROM rt1 WHERE (((CASE WHEN 0x548bc1c1 THEN x'' END)>(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((NULL) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c3)) IS FALSE) FROM rt1; -- 0ms;
SELECT ALL AVG((((rt1.c4))<>((rt1.c0)))) OVER (), (((((((rt1.c4, rt1.c0, rt1.c6)) BETWEEN (('', rt1.c4, rt1.c3)) AND ((rt1.c1, rt1.c3, rt1.c4))))AND(CAST(rt1.c3 AS REAL))))OR(((((((((((((rt1.c6)OR(rt1.c1)))AND(rt1.c4)))OR(rt1.c5)))AND(rt1.c5)))OR(rt1.c4)))OR(rt1.c5)))), ((0.23810969465058318)&(HEX(DISTINCT rt1.c6))) FROM rt1; -- 0ms;
SELECT rt1.c1 FROM rt1 WHERE (UNLIKELY(DISTINCT ((x'')>=(0.0813953354548167)))); -- 0ms;
SELECT ((rt1.c1 COLLATE BINARY)<<('0.37369094849309836')), ((((rt1.c6)AND(rt1.c6)))+(rt1.c1)), (((rt1.c1, rt1.c0, rt1.c4)) BETWEEN ((((rt1.c6) ISNULL), x'', '0.25678016339518384')) AND (((~ (rt1.c3)), CAST(rt1.c4 AS BLOB), '-1678315644'))) FROM rt1; -- 0ms;
SELECT DISTINCT AVG(rt1.c4) FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c5 IN ())) BETWEEN (CAST(rt1.c3 AS TEXT)) AND (rt1.c4 COLLATE BINARY)) FROM rt1; -- 0ms;
SELECT DISTINCT (((AVG(rt1.c1)))!=((CASE rt1.c0  WHEN '' THEN rt1.c6 WHEN rt1.c6 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c3 END))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0) BETWEEN (rt1.c1) AND ('-512340399')))OR((rt1.c0 IN ()))) FROM rt1 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT (CAST('' AS INTEGER) IN ()) FROM rt1 WHERE (((((((((((('')OR('-761692035')))AND(x'')))OR(NULL)))OR(NULL))))!=(('sT' COLLATE BINARY)))) ORDER BY ((rt1.c0) IS FALSE) COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT ALL (+ ((('')*(rt1.c4)))) FROM rt1 WHERE (((((JULIANDAY('㍏'']7', NULL, x''))AND(IFNULL(NULL, NULL))))AND(LIKELY(DISTINCT '')))); -- 1ms;
SELECT ALL rt1.c2 FROM rt1 LIMIT -708121489 OFFSET -1459775962; -- 0ms;
SELECT ALL ((COUNT(*))<=(json_object(rt1.c4, rt1.c4))) FROM rt1 WHERE (CASE (NOT (0.8905375928039908))  WHEN ((((0Xffffffffc85fae84)AND('1673491947')))OR(NULL)) THEN ((0.45999712829697714)AND(x'')) ELSE json_object(0.9803281746806031, -1.459775962E9) END);SELECT DISTINCT SUM(rt1.c4) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2)IS NOT(rt1.c1)))&((((rt1.c5)) BETWEEN (('ST')) AND ((rt1.c3))))) FROM rt1; -- 0ms;
SELECT ((((((((((rt1.c4)|(rt1.c1)))AND(((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c1)))))AND((rt1.c2 IN ()))))OR(IFNULL(DISTINCT rt1.c2, rt1.c1))))AND(HEX(rt1.c6))) FROM rt1 WHERE (CASE ((('꽉䈉{8')) NOT BETWEEN (('-1459775962')) AND ((x'7418')))  WHEN PRINTF('1970277177', NULL, '-1888984675') THEN 0.8614390645648455 ELSE ((917474027) BETWEEN ('-325851212') AND (132642715)) END) LIMIT -1459775962 OFFSET -1191355840; -- 0ms;
SELECT DISTINCT CAST(MAX(rt1.c4) AS BLOB) FROM rt1 WHERE (CASE WHEN x'' THEN ((0.9835567060976126) ISNULL) ELSE CAST(0.7534809762372354 AS NUMERIC) END); -- 0ms;
SELECT DISTINCT MIN((NOT (rt1.c4)), ((rt1.c3)+(rt1.c6))) FROM rt1; -- 0ms;
SELECT TOTAL(((rt1.c3)OR(rt1.c3))), x'', ((ABS(rt1.c1))!=(((((rt1.c4)OR(0.37369094849309836)))AND(rt1.c4)))) FROM rt1 WHERE ((((('0.14779261617207007')>>(0.912269899974369)))|((+ ('861736281'))))) ORDER BY x''  NULLS FIRST, CASE WHEN rt1.c1 COLLATE RTRIM THEN CAST(rt1.c4 AS BLOB) WHEN ((rt1.c3)|(rt1.c5)) THEN rt1.c6 COLLATE BINARY WHEN (+ (rt1.c3)) THEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c6)) END ASC  NULLS LAST LIMIT 28306240; -- 0ms;
SELECT ALL ((rt1.c4)<<(rt1.c3)) COLLATE NOCASE FROM rt1 WHERE (((((json_extract(x'', x''))AND(((x'')|(0.912269899974369)))))OR((~ (NULL))))) GROUP BY ((((rt1.c0)!=(rt1.c1))) BETWEEN (((rt1.c3)>=(rt1.c0))) AND ((- (rt1.c2)))) ORDER BY ((((((rt1.c2)LIKE(rt1.c2)))AND(((((((((rt1.c2)AND(rt1.c1)))AND('')))AND(rt1.c4)))AND(rt1.c2)))))OR(SQLITE_COMPILEOPTION_GET('1543801095'))) DESC;SELECT GROUP_CONCAT(STRFTIME(rt1.c5, rt1.c6, rt1.c2)) OVER () FROM rt1; -- 0ms;
SELECT ((((((rt1.c4)AND(rt1.c1)))OR(rt1.c0))) BETWEEN (((NULL)LIKE(rt1.c0))) AND (((rt1.c3) NOT BETWEEN (rt1.c5) AND (rt1.c6)))) FROM rt1 WHERE (COALESCE(NULL COLLATE BINARY, (((NULL)) BETWEEN ((x'')) AND (('-512340399'))))); -- 0ms;
SELECT ALL ((((rt1.c3) NOTNULL))>>(rt1.c3)) FROM rt1 WHERE ((NOT (NULL)) COLLATE RTRIM) GROUP BY (((rt1.c0))<((rt1.c3))) COLLATE BINARY, CASE WHEN x'' THEN ((((((((rt1.c6)AND(rt1.c3)))AND(rt1.c3)))AND(NULL)))AND(rt1.c2)) END, ((((rt1.c6) BETWEEN (0.8748224347557985) AND (rt1.c1)))/(rt1.c5)); -- 0ms;
SELECT DISTINCT AVG(((NULL)=(rt1.c4))) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT ALL ((rt1.c0) NOT NULL) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ()))IS NOT(CAST(rt1.c6 AS BLOB))), ((-121565380)/((0.20637397761943832 IN ()))), COUNT(((rt1.c0) NOT NULL)) OVER () FROM rt1; -- 0ms;
SELECT ALL -9.332535E8 FROM rt1 WHERE ((NOT (CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (NOT (((rt1.c0)>(rt1.c3)))) FROM rt1 WHERE (x'25a1'); -- 0ms;
SELECT ALL ((rt1.c2) NOT BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND (((((rt1.c6)AND(rt1.c1)))OR(rt1.c1)))), ((((rt1.c1) IS FALSE)) IS FALSE), (((((rt1.c0 IN ()))OR(((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c2)))))OR(COUNT(*))) FROM rt1 WHERE ((- ((('-,')<>(0.09473761185688367))))) ORDER BY ((((((((((rt1.c5) BETWEEN (rt1.c4) AND (rt1.c1)))OR(1418445249)))AND(((rt1.c1)-(rt1.c0)))))OR(((rt1.c3) IS FALSE))))AND('668917705'))  NULLS LAST; -- 0ms;
SELECT PERCENT_RANK() OVER ( ORDER BY x'' ASC  NULLS FIRST ROWS  CURRENT ROW) FROM rt1 WHERE (('-1678315644' COLLATE NOCASE IN ())) LIMIT -2041506356; -- 0ms;
SELECT DISTINCT ((COUNT(*))!=(((rt1.c4) NOT NULL))) FROM rt1 GROUP BY ((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c4)))!=(((rt1.c2)<>(rt1.c2)))); -- 0ms;
SELECT SUM(CASE WHEN rt1.c3 THEN 0x15bc680f END), ((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c2)))OR(((rt1.c0) ISNULL))))AND(((rt1.c1)<>(0.47665758218908005)))), (((((rt1.c3))!=((rt1.c0))))-(rt1.c3 COLLATE NOCASE)) FROM rt1 WHERE (((((((NULL, '_', 'ce/\r'))>((NULL, 0.9770495508779256, x'8ec8')))))==((x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT CASE rt1.c4 COLLATE BINARY  WHEN ((rt1.c6)OR(0.3220701375026406)) THEN (('2X*') IS FALSE) WHEN ((rt1.c4)OR(rt1.c5)) THEN CAST(rt1.c2 AS TEXT) WHEN ((rt1.c1)AND(rt1.c3)) THEN ((rt1.c0)%(0.5830529008234951)) END FROM rt1; -- 1ms;
SELECT DISTINCT CAST('1714248188' AS NUMERIC) FROM rt1; -- 0ms;
SELECT (((rt1.c6)) BETWEEN (((- (NULL)))) AND (((- (rt1.c0))))), rt1.c5, (((rt1.c5) NOT BETWEEN (rt1.c4) AND (rt1.c5)) IN ()), rt1.c1, ((rt1.c3 COLLATE NOCASE) NOT BETWEEN ((rt1.c3 IN ())) AND ((((rt1.c6)) BETWEEN ((rt1.c6)) AND ((rt1.c3))))) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3 IN (rt1.c3, rt1.c4)))LIKE(((rt1.c4) NOTNULL))), NULL, rt1.c5 FROM rt1; -- 0ms;
SELECT rt1.c1 FROM rt1 WHERE ((((('1945382757') NOTNULL))||(TRIM('2讧m', 0.7593352692940706)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt1.c4)AND(rt1.c1)))AND(rt1.c0))) FROM rt1 WHERE (CASE (('\|㍏')LIKE('-1'))  WHEN CAST(NULL AS BLOB) THEN ABS('P\n-M~') ELSE (~ (NULL)) END); -- 0ms;
SELECT (((NOT (rt1.c3)))/(CAST(rt1.c4 AS NUMERIC))), TOTAL(((rt1.c1)AND(rt1.c4))), rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT ((((MIN(rt1.c3))AND(0.6667758225445827)))OR((NOT (rt1.c1)))), ((((rt1.c6) IS TRUE))>('-105447406')), rt1.c1 FROM rt1 WHERE ((NOT ((-1943826237 IN ())))); -- 0ms;
SELECT DISTINCT (((rt1.c2)!=('')) IN ()) FROM rt1 WHERE (((0.019884506127034074)%(0.9215740032670213)) COLLATE NOCASE); -- 0ms;
SELECT ALL SUM(((rt1.c3)<<(rt1.c4)) COLLATE RTRIM) FILTER(WHERE '') OVER (), LOWER(CASE 6.50851151E8  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c6 ELSE rt1.c6 END), ((rt1.c3)*(rt1.c6 COLLATE BINARY)) FROM rt1 WHERE ((((x'')) NOT BETWEEN (((('-325851212') BETWEEN (0.43550520837640383) AND ('3?B')))) AND ((0.2572431214927352 COLLATE BINARY)))); -- 0ms;
SELECT x'', (((rt1.c0)) BETWEEN ((((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c1)))) AND ((((rt1.c4) NOT NULL)))), ((CASE WHEN rt1.c3 THEN rt1.c1 END)*(rt1.c3 COLLATE BINARY)), MAX(CASE WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c4 END), TRIM(DISTINCT x'', ((rt1.c4)||(''))) FROM rt1; -- 0ms;
SELECT SUM((((rt1.c3))<=((rt1.c5)))) FROM rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM rt1 WHERE ((- (((0.8319077738232412)OR(x''))))); -- 0ms;
SELECT ALL (((rt1.c6))<>((CAST(rt1.c1 AS REAL)))), (- (CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN '861736281' WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c6 END)), '' FROM rt1 WHERE ((- (NULL COLLATE BINARY))); -- 1ms;
SELECT ALL (((rt1.c4)|(rt1.c2)) IN ()), ((CAST(rt1.c4 AS NUMERIC)) NOTNULL), ((((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c3))) IN ((NOT (rt1.c1)))) FROM rt1 WHERE (((x'')GLOB('WLKN9eL')) COLLATE RTRIM); -- 0ms;
SELECT CAST(((rt1.c1)<>(rt1.c0)) AS TEXT) FROM rt1 GROUP BY (((NOT (rt1.c3)))LIKE(((rt1.c4)<=(rt1.c2)))); -- 0ms;
SELECT ((rt1.c0)%(rt1.c2)) COLLATE NOCASE, AVG(rt1.c2), rt1.c3 FROM rt1 WHERE (CASE '0.5415790104318804'  WHEN ((NULL) ISNULL) THEN ((1.443531687E9) BETWEEN (-828256903) AND (x'')) END) ORDER BY ((rt1.c5)/(3.65142266E8)) COLLATE RTRIM DESC  NULLS LAST; -- 0ms;
SELECT ALL ((CASE rt1.c3  WHEN rt1.c5 THEN rt1.c0 END)*((((rt1.c5)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c6))))), CAST(STRFTIME(rt1.c0, rt1.c4, NULL) AS NUMERIC), (((rt1.c6, rt1.c3, rt1.c4)) BETWEEN ((((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c0)), (rt1.c0 IN ()), NULL)) AND ((ABS(DISTINCT rt1.c5), ((rt1.c3) IS FALSE), (rt1.c2 IN ())))) FROM rt1 WHERE (((x'4485' COLLATE BINARY)IS NOT(CASE WHEN -0.0 THEN 0.308776394129592 WHEN '399354758' THEN 't-]\rdW|' WHEN 1419887669 THEN NULL WHEN '&Rul' THEN 1945382757 WHEN NULL THEN NULL ELSE 0.744328125550142 END))); -- 0ms;
SELECT ALL CAST(x'' AS INTEGER) FROM rt1; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT rt1.c5)) BETWEEN (rt1.c4) AND (((((rt1.c2)OR(rt1.c3)))AND(rt1.c6)))) FROM rt1 WHERE (CASE (((('X奟KNXW''N')AND(x'')))OR(0.4989664178942559))  WHEN ((((((((NULL)OR(x'')))AND(NULL)))AND(NULL)))AND(0.29188170390523427)) THEN ((NULL) NOT BETWEEN (0.8732518093443866) AND ('')) END) ORDER BY (((((rt1.c4)OR(rt1.c1)))OR(rt1.c2)) IN ((((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt1.c1))))) DESC; -- 0ms;
SELECT DISTINCT COUNT(((((rt1.c4)OR(rt1.c0)))AND(rt1.c4))) OVER () FROM rt1 ORDER BY rt1.c3; -- 0ms;
SELECT ((((rt1.c5, rt1.c3, rt1.c5))<((rt1.c2, NULL, rt1.c4))) IN ()), (((((((('437218281')AND(((rt1.c1)IS(rt1.c2)))))OR(TRIM(rt1.c6))))OR(HEX('1419887669'))))AND((((rt1.c6))>((rt1.c6))))), ('㍏'']7' COLLATE RTRIM IN ()), ((CAST(rt1.c1 AS NUMERIC)) NOTNULL), ((NULL)+(((rt1.c0) IS TRUE))) FROM rt1 WHERE ((((3.31238914E8)*(NULL)) IN (''))) LIMIT 1945382757 OFFSET -1761196198; -- 2ms;
SELECT rt1.c5, ((rt1.c5 COLLATE BINARY) NOT BETWEEN (((rt1.c3)>>(rt1.c2))) AND ((rt1.c2 IN (rt1.c0, rt1.c0)))), (((((~ (rt1.c3)))OR((((rt1.c3)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c6))))))OR(((rt1.c6)>=(rt1.c6)))) FROM rt1 WHERE (UNLIKELY(((-325851212) NOTNULL))) ORDER BY (((rt1.c4)GLOB(rt1.c5)) IN ())  NULLS LAST; -- 0ms;
SELECT (rt1.c3 COLLATE NOCASE IN ()) FROM rt1 WHERE ((- (0.18130667152714441)) COLLATE BINARY COLLATE NOCASE) GROUP BY ((rt1.c2) BETWEEN (((rt1.c6) NOT BETWEEN (rt1.c3) AND (rt1.c4))) AND (x'')) HAVING ((((rt1.c1)AND(rt1.c6)))AND(rt1.c5)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((((((rt1.c0) NOTNULL))AND(CASE WHEN rt1.c6 THEN rt1.c4 ELSE rt1.c2 END)))OR(load_extension(rt1.c1))), CAST(((rt1.c4) BETWEEN (0.25125676247353557) AND (rt1.c6)) AS REAL), CAST(((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c4)) AS TEXT) FROM rt1 ORDER BY ((NULL) BETWEEN (((x'')||(rt1.c2))) AND (x'5d9a')) ASC  NULLS FIRST;SELECT DISTINCT PERCENT_RANK() OVER (), ((COUNT(rt1.c6))>=(rt1.c2 COLLATE BINARY)), (- ((+ (rt1.c1)))) FROM rt1; -- 1ms;
SELECT ALL (('') BETWEEN (((rt1.c6)||(NULL))) AND (rt1.c6)), CAST(json_valid(rt1.c3) AS REAL), ((rt1.c2)<(rt1.c2)) COLLATE BINARY FROM rt1 WHERE ('-1794519928'); -- 0ms;
SELECT ALL GROUP_CONCAT(CASE WHEN rt1.c1 THEN rt1.c3 END) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c3)) THEN CAST(rt1.c6 AS BLOB) END FROM rt1 LIMIT 1472054860; -- 0ms;
SELECT ALL (((+ (rt1.c1)))-(NULL)) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2, ROUND(rt1.c3, rt1.c6 COLLATE RTRIM), (((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c0))))>(((rt1.c4) IS TRUE))) FROM rt1; -- 0ms;
SELECT TYPEOF(DISTINCT ((rt1.c5)AND(rt1.c2))), CAST(((rt1.c4) BETWEEN (rt1.c2) AND (rt1.c4)) AS REAL), SUM(CASE rt1.c5  WHEN NULL THEN rt1.c5 ELSE rt1.c6 END), ((ABS(DISTINCT rt1.c1)) NOTNULL), (((rt1.c0)=(rt1.c1)) IN ()) FROM rt1 WHERE ((((0.5949147609040191)) BETWEEN (((x'' IN ()))) AND (((('1806053296')AND(x'')))))) UNION ALL SELECT ((((((((NULL)OR(CASE rt1.c3  WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c5 THEN rt1.c5 END)))AND(LIKELIHOOD(rt1.c1, 0.34387349121136657))))AND(CASE WHEN rt1.c3 THEN '1714248188' WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c1 END)))AND((- (rt1.c1)))), (+ ((rt1.c5 IN (rt1.c0)))), (((rt1.c0)) NOT BETWEEN ((IFNULL(DISTINCT rt1.c4, rt1.c1))) AND ((((rt1.c6)LIKE(rt1.c2))))), ((((((((((rt1.c3)=(rt1.c3)))AND('940332093')))AND(((rt1.c5) NOTNULL))))AND(rt1.c1)))OR((((rt1.c2))>=((rt1.c1))))), CASE CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c0 END  WHEN (('-34238375') ISNULL) THEN rt1.c3 COLLATE BINARY END FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c4 THEN (((rt1.c3))>((rt1.c2))) END FROM rt1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1; -- 2ms;
SELECT ALL SUM(((rt1.c5)GLOB(rt1.c3))) OVER (), ((rt1.c1) BETWEEN (-428660513 COLLATE RTRIM) AND (UNLIKELY(DISTINCT rt1.c4))), 0.5462721840908632 FROM rt1 WHERE (CAST('5y?' AS TEXT)); -- 0ms;
SELECT DISTINCT (((~ (rt1.c0))) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT LAG(rt1.c6, ((rt1.c3)IS NOT(rt1.c1)) COLLATE RTRIM, LOWER(DISTINCT ((rt1.c1)AND(rt1.c4)))) OVER () FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c1) BETWEEN (rt1.c4) AND (0.8911251215982445)))/(((rt1.c1)>>(rt1.c4)))) FROM rt1; -- 0ms;
SELECT rt1.c6 FROM rt1 WHERE ((((((((('' COLLATE NOCASE)AND(HEX(x''))))AND('0.9803281746806031')))AND(x'')))OR(((NULL) NOTNULL)))); -- 0ms;
SELECT ((COUNT(rt1.c4))+(TYPEOF(DISTINCT rt1.c6))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((((((rt1.c1)OR(rt1.c5)))AND(rt1.c3)))OR(rt1.c1)))AND(NULL)))AND(rt1.c4)))OR(rt1.c1)) COLLATE RTRIM FROM rt1 WHERE (((load_extension(0.3298974145576141))GLOB(((NULL)<('1228616599')))));SELECT DISTINCT ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN (((rt1.c4))==((rt1.c3))) THEN ((rt1.c1)<>(rt1.c2)) ELSE (NOT (rt1.c5)) END, ((((rt1.c2 IN (rt1.c4)), CASE rt1.c1  WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN '-1841380180' ELSE rt1.c0 END, ((x'') NOT BETWEEN (rt1.c0) AND (rt1.c6)), rt1.c0, ((rt1.c0)LIKE(rt1.c2))))<=((((NULL)OR(rt1.c3)), LIKELY(rt1.c3), '⿯yearsA', ((((rt1.c4)OR(rt1.c5)))AND(rt1.c2)), CAST(rt1.c2 AS REAL)))), LAST_VALUE(rt1.c0) OVER () FROM rt1 WHERE (CASE WHEN ((((NULL)AND('1531467047')))OR('-1639804609')) THEN ABS(DISTINCT NULL) ELSE CASE 0.4561032291783894  WHEN 0.6232174926555799 THEN NULL ELSE '' END END) GROUP BY CAST(NULL AS INTEGER), ((((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))|(((((rt1.c5)AND(x'')))AND(rt1.c2)))), MAX('0.5092655446798956', rt1.c3), (rt1.c4 IN (rt1.c5)) COLLATE RTRIM, ((rt1.c0 COLLATE BINARY) NOT BETWEEN (CASE rt1.c0  WHEN rt1.c1 THEN rt1.c2 END) AND (rt1.c5)); -- 1ms;
SELECT ALL 0Xffffffffa8fd9626 FROM rt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(CASE CASE WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c3 END  WHEN (rt1.c1 IN (rt1.c0)) THEN ((rt1.c2)&(rt1.c0)) END, ((rt1.c6) BETWEEN (rt1.c6 COLLATE BINARY) AND (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c5 END))) OVER (), '-1415880241', NULL FROM rt1;SELECT ALL ((CAST(rt1.c4 AS TEXT))IS NOT(rt1.c0)), TOTAL((((rt1.c4)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c3)))), CASE ((rt1.c2)||(rt1.c0))  WHEN 0.11216449579699728 THEN ABS(rt1.c1) END, ((- (rt1.c0)) IN (((rt1.c1)-(rt1.c0)))), ((CAST(rt1.c1 AS INTEGER)) IS FALSE) FROM rt1; -- 1ms;
SELECT DISTINCT ((((MAX(rt1.c1))AND(CASE rt1.c4  WHEN rt1.c2 THEN rt1.c1 END)))AND(((rt1.c5)AND(rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)AND(MIN(rt1.c4))))OR((((NULL, rt1.c0, rt1.c1))>=((0.3299528931342771, rt1.c4, rt1.c4))))) FROM rt1 WHERE ((~ (((x'')<<('-1479895721'))))); -- 0ms;
SELECT DISTINCT (((((rt1.c3))=((rt1.c1))))!=(json_array_length(rt1.c3))), UPPER(DISTINCT rt1.c5) COLLATE RTRIM, CAST(((rt1.c3) IS TRUE) AS BLOB) FROM rt1 WHERE (CASE CAST(x'' AS NUMERIC)  WHEN x'' COLLATE RTRIM THEN (x'2041' IN (x'')) WHEN 0.8614390645648455 COLLATE BINARY THEN ((x'')<>('736089937')) WHEN ((0Xffffffffaf9e9301) IS FALSE) THEN (((('1531467047')AND(NULL)))AND('-144897668')) END); -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE BINARY)>>(((((rt1.c2)AND(rt1.c0)))OR(rt1.c4)))) FROM rt1 WHERE ('1e500'); -- 0ms;
SELECT DISTINCT '72091445' FROM rt1 WHERE (((CASE WHEN '' THEN x'' ELSE NULL END)>((- ('쯵J'))))) GROUP BY (((((((((((((((((((('')OR(rt1.c6)))AND(rt1.c1)))AND(((rt1.c5)+(rt1.c5)))))AND(IFNULL(DISTINCT rt1.c0, rt1.c1))))OR(rt1.c1)))OR(CAST(rt1.c5 AS TEXT))))AND((- (rt1.c6)))))AND(((rt1.c6)||(rt1.c6)))))OR(x'')))AND(((rt1.c2) NOTNULL))), CASE WHEN 'bi' THEN ((rt1.c1) BETWEEN (rt1.c2) AND (rt1.c1)) ELSE rt1.c3 COLLATE BINARY END, rt1.c2 ORDER BY UNLIKELY(rt1.c3) DESC LIMIT 8561102 OFFSET 132642715; -- 0ms;
SELECT DISTINCT (((rt1.c6, rt1.c6, rt1.c4)) BETWEEN (((- (rt1.c2)), (~ ('')), 0.744328125550142)) AND ((CAST(rt1.c6 AS INTEGER), rt1.c4 COLLATE RTRIM, '-1841380180'))) FROM rt1; -- 0ms;
SELECT ((x'' IN (rt1.c4, rt1.c0)) IN ()), (MIN(rt1.c5) IN ()), ((UNLIKELY(rt1.c0)) NOT BETWEEN (((((rt1.c3)AND(rt1.c6)))OR(rt1.c2))) AND ((~ (rt1.c3)))) FROM rt1 WHERE (UPPER(((0.16728680417826824) BETWEEN (0.9365266601278224) AND (1228616599)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c6) ISNULL) THEN rt1.c4 ELSE rt1.c4 COLLATE NOCASE END, (+ (((rt1.c5) NOTNULL))), SUM(SQLITE_SOURCE_ID()) FROM rt1 GROUP BY ((((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c3)))OR(rt1.c5)))AND(rt1.c4)))||(rt1.c5 COLLATE RTRIM)), UNICODE(((((x'')OR(rt1.c4)))AND(''))), 0X44c0735, rt1.c5, (+ (((rt1.c3) IS TRUE))) HAVING GLOB(((((x'')OR(rt1.c5)))AND(rt1.c1)), CAST(rt1.c6 AS NUMERIC));SELECT DISTINCT COALESCE((+ (rt1.c3)), (rt1.c6 IN ()), CAST(rt1.c3 AS TEXT), ((rt1.c5) NOT BETWEEN (rt1.c2) AND (rt1.c4))) FROM rt1 WHERE (ABS(DISTINCT CAST('-11808521' AS REAL))); -- 1ms;
SELECT ALL '1699299849' FROM rt1; -- 0ms;
SELECT DISTINCT CAST((((NULL))<(('I&'))) AS INTEGER) FROM rt1 WHERE (CASE WHEN (('')<<(0xffffffff920f9eb9)) THEN CAST(x'' AS INTEGER) ELSE ((((((((((((x'')OR(0.16728680417826824)))AND(0.5462721840908632)))AND(x'')))AND(0.4231177070794899)))OR(0.46234746269019145)))AND(NULL)) END); -- 0ms;
SELECT ALL (- ((('')=(rt1.c4)))) FROM rt1 WHERE ((((0x266f4c61 IN ()))%((- (NULL))))); -- 0ms;
SELECT ALL (- (((rt1.c5)GLOB(rt1.c1)))) FROM rt1 WHERE (((((('-933253500', 0X76245bad, x'e3c8f874'))<>(('-1424722342', 0.45197609061847077, 0.9843633055311223))))||(0xffffffffa46e7a62 COLLATE NOCASE))); -- 0ms;
SELECT ((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c6)) COLLATE BINARY, UPPER(CAST(rt1.c2 AS TEXT)), ((rt1.c5)<=(rt1.c5)) COLLATE BINARY, NULLIF(rt1.c0, rt1.c6) COLLATE BINARY, ((((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c6)))))>=(((rt1.c4 IN ())))) FROM rt1 WHERE ((((NOT ('N'))) BETWEEN ((((((((('-11808521')OR('sybQ罇nA+')))AND('940332093')))OR('')))AND(NULL))) AND (CAST('n' AS TEXT)))); -- 0ms;
SELECT ALL COUNT(0.9835567060976126) FILTER(WHERE ((((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c2))) BETWEEN (x'') AND (((rt1.c0) ISNULL)))) OVER () FROM rt1; -- 0ms;
SELECT ((rt1.c0)AND(rt1.c4)) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c4 THEN ((rt1.c2)!=(rt1.c5)) ELSE rt1.c3 END, (((rt1.c1))<=((CASE WHEN rt1.c4 THEN rt1.c6 ELSE rt1.c0 END))), CAST(SUM(NULL) AS INTEGER), CASE rt1.c0  WHEN rt1.c3 THEN rt1.c0 END COLLATE NOCASE, ((((rt1.c2)GLOB(rt1.c1))) ISNULL) FROM rt1; -- 1ms;
SELECT DISTINCT MIN(CAST(rt1.c0 AS INTEGER)) FROM rt1 WHERE (CASE COALESCE(DISTINCT 0.8935151248299655, '')  WHEN ((NULL) ISNULL) THEN (('Xz*x') IS FALSE) WHEN (+ (NULL)) THEN ((1.970277177E9) NOT BETWEEN ('i&') AND (x'911e')) WHEN 6.68917705E8 COLLATE BINARY THEN (((3.65142266E8, '1083634946', x''))>=(('-1046074092', '#^v0', NULL))) ELSE ((0.31542309323197093)>=('꽉䈉{8')) END); -- 0ms;
SELECT ((((((((MAX(rt1.c2))OR('-1402076813')))AND('0.37369094849309836')))AND(rt1.c2)))AND((+ (rt1.c0)))), CASE (rt1.c3 IN ())  WHEN ((((rt1.c6)AND(rt1.c2)))OR(rt1.c5)) THEN rt1.c5 ELSE ((rt1.c3)IS(rt1.c5)) END, (((((+ (rt1.c6)))OR(rt1.c6 COLLATE BINARY)))OR(CASE WHEN rt1.c6 THEN -621417451 END)) FROM rt1 WHERE ((((x'')&('l揊鄵')) IN ())); -- 0ms;
SELECT DISTINCT 0.2788428396864162 FROM rt1 WHERE (((CASE '#e>,4_0'  WHEN '-1441493173' THEN -482118772 WHEN 'p쫐RU[z-''y' THEN '0.5462721840908632' WHEN NULL THEN NULL ELSE 0.6316915904923799 END) BETWEEN ('IOwS' COLLATE RTRIM) AND (NULL))); -- 0ms;
SELECT DISTINCT ((((rt1.c3)LIKE(rt1.c1))) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c1, 0.31572076153569517, rt1.c4))<=((rt1.c5, rt1.c5, rt1.c4))))>((((NULL, rt1.c2, rt1.c1)) BETWEEN ((0.5004784565047253, rt1.c3, NULL)) AND ((rt1.c4, rt1.c6, rt1.c2))))), (((((rt1.c2, rt1.c2, rt1.c1, rt1.c5, rt1.c6))<=((rt1.c1, rt1.c2, rt1.c5, rt1.c6, rt1.c6)))) BETWEEN (CASE WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN '' ELSE rt1.c5 END) AND ((- ('xz*x')))), (((+ (rt1.c4))) NOTNULL), LOWER(CASE WHEN rt1.c4 THEN rt1.c1 END), ROW_NUMBER() OVER ( RANGE CAST((((0.308776394129592, rt1.c0, NULL)) NOT BETWEEN ((rt1.c3, rt1.c6, 0.26773553501236247)) AND ((-0.0, rt1.c5, rt1.c6))) AS REAL) PRECEDING EXCLUDE NO OTHERS) FROM rt1 WHERE (((((((((((0X964dded)AND('u9')))AND(x'')))AND(NULL)))OR('1803290603'))) NOT BETWEEN (((NULL) NOT NULL)) AND ((NULL IN ('1783474151', 0.5092655446798956)))));SELECT DISTINCT AVG((((rt1.c5)) BETWEEN ((x'')) AND ((x'692895de')))) FROM rt1; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((((((((rt1.c6)AND(rt1.c4)))OR(rt1.c0)))AND(rt1.c4)))AND(rt1.c3))) OVER () FROM rt1 WHERE (CAST(((-1039165282)IS(0.8032846300256503)) AS REAL)) ORDER BY (((((rt1.c0)OR(rt1.c1)))AND(0.45930263059134857)) IN ()) ASC  NULLS FIRST, (+ (INSTR(rt1.c3, rt1.c1)))  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((rt1.c6)*(NULL)) COLLATE RTRIM, (((rt1.c5)) NOT BETWEEN ((TRIM(NULL, rt1.c1))) AND ((((rt1.c4) IS TRUE)))), CASE WHEN ((rt1.c5)&(rt1.c4)) THEN CAST(1049602999 AS REAL) END FROM rt1 WHERE ((('\n_')-(((x'') NOT BETWEEN (0.41971373033525994) AND (NULL))))) GROUP BY (((+ (rt1.c4)))AND(CASE rt1.c5  WHEN rt1.c3 THEN rt1.c5 ELSE rt1.c4 END)), CHAR((x'' IN ())), ('-331330826' IN ()) HAVING (((rt1.c5)) NOT BETWEEN (((((rt1.c4))>=((rt1.c4))))) AND (((rt1.c2 IN ())))); -- 0ms;
SELECT DISTINCT ((rt1.c6)IS NOT(rt1.c2)) COLLATE BINARY FROM rt1; -- 0ms;
SELECT ALL rt1.c0 FROM rt1; -- 0ms;
SELECT ALL TYPEOF(0.25125676247353557), (((((rt1.c4, rt1.c4, rt1.c2)) NOT BETWEEN ((rt1.c3, rt1.c6, rt1.c3)) AND (('', rt1.c5, rt1.c5)))) NOT NULL), LAG((NOT (((rt1.c4)%(rt1.c1)))), CASE 0.8140834129438099  WHEN (((rt1.c2)) NOT BETWEEN ((NULL)) AND (('-761692035'))) THEN CASE WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c1 END END, (~ (CASE rt1.c5  WHEN rt1.c0 THEN rt1.c1 WHEN x'' THEN rt1.c4 WHEN rt1.c2 THEN rt1.c6 ELSE rt1.c0 END))) OVER () FROM rt1 WHERE (CAST(((NULL) BETWEEN (NULL) AND ('턿>|')) AS BLOB)); -- 1ms;
SELECT ALL (((rt1.c4))<=((CASE WHEN rt1.c0 THEN rt1.c5 END))), RANK() OVER (), CAST(-1965999315 AS TEXT) FROM rt1 WHERE ((((((((((((NULL)OR(NULL)))AND(NULL)))AND(0.26655476759738805)))AND(x'724f'))))=(((NOT (NULL)))))); -- 0ms;
SELECT ALL ((AVG(rt1.c5)) IS FALSE), rt1.c1, SUM(((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt1.c6))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ((MIN(rt1.c3))<<(((((((((((((rt1.c0)AND(rt1.c4)))AND(rt1.c2)))AND(rt1.c3)))AND(rt1.c0)))OR(rt1.c5)))AND(0.4220077154787516)))) FROM rt1 NOT INDEXED WHERE ((+ (CAST(NULL AS REAL)))); -- 0ms;
SELECT ALL MAX((rt1.c0 IN ())) FROM rt1; -- 0ms;
SELECT ALL TRIM(DISTINCT ((rt1.c5)AND(rt1.c4)), CASE rt1.c5  WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c0 END), ((((rt1.c4)IS(rt1.c6))) NOT BETWEEN (((rt1.c2) IS TRUE)) AND (((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c1)))), x'', json_type(CAST(rt1.c4 AS NUMERIC)), ((((((((((rt1.c2) IS TRUE))OR(MIN(rt1.c4))))AND(((((((((rt1.c1)OR(rt1.c4)))OR(rt1.c5)))OR(rt1.c3)))AND(rt1.c0)))))OR(0.3005564454523765)))AND(json_patch(rt1.c0, rt1.c0))) FROM rt1 LIMIT -674027497; -- 1ms;
SELECT ((((rt1.c5) NOT BETWEEN (rt1.c3) AND (917474027)))IS((rt1.c3 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT (IFNULL(DISTINCT rt1.c1, rt1.c1) IN ()) FROM rt1 WHERE ((NOT ((0Xffffffffab14765a IN ())))); -- 0ms;
SELECT ALL ((((CAST(rt1.c3 AS REAL))AND(((rt1.c0) NOTNULL))))AND(json_patch(rt1.c4, ''))) FROM rt1;SELECT ALL ((((rt1.c1)IS(rt1.c3)))%((((rt1.c4)) BETWEEN ((rt1.c6)) AND ((rt1.c4))))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt1.c3))OR((rt1.c6 IN (rt1.c4)))))AND(((rt1.c6) IS FALSE))) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c3 IN ()))AND(((rt1.c2)!=(rt1.c1)))))AND(((rt1.c4) IS TRUE))) FROM rt1 ORDER BY ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c4)) COLLATE RTRIM, ((((CAST(rt1.c1 AS BLOB))AND((((rt1.c0, rt1.c1, rt1.c3)) BETWEEN ((rt1.c1, rt1.c5, rt1.c0)) AND ((rt1.c3, rt1.c5, 529525852))))))OR((rt1.c6 IN ())))  NULLS LAST, ((rt1.c4) NOT NULL) COLLATE BINARY ASC  NULLS FIRST, (~ ((((rt1.c0))<((rt1.c4))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt1.c3) ISNULL)) IS TRUE), ((MAX(rt1.c5)) NOT NULL), (MAX(x'8aac', rt1.c3) IN ()) FROM rt1 WHERE ('NaN'); -- 0ms;
SELECT ALL rt1.c1, ((((rt1.c2))>=((rt1.c4))) IN ()), ((((rt1.c4)OR(rt1.c0))) NOT BETWEEN (((rt1.c5) ISNULL)) AND (0xffffffffc3402382)) FROM rt1 WHERE ((((NOT (-7.38873527E8))) IS FALSE)) GROUP BY CASE rt1.c1  WHEN CAST(rt1.c1 AS TEXT) THEN rt1.c4 END HAVING MAX(rt1.c2 COLLATE BINARY, (((rt1.c4)) BETWEEN ((0.3831063391044598)) AND ((rt1.c2))), rt1.c4 COLLATE BINARY, ABS(DISTINCT rt1.c0)); -- 0ms;
SELECT DISTINCT ((((rt1.c1)OR(rt1.c0 COLLATE BINARY)))OR(((rt1.c6) IS FALSE))) FROM rt1 WHERE ((TRIM(DISTINCT '668917705', '<e') IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c5 THEN x'' ELSE rt1.c4 END COLLATE BINARY COLLATE RTRIM FROM rt1 LIMIT -855540423; -- 0ms;
SELECT ((CASE rt1.c6  WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c6 END)&(CAST(rt1.c1 AS NUMERIC))), LIKE(((((rt1.c0)AND(rt1.c1)))OR(rt1.c3)), ((rt1.c0)>(rt1.c2))), COUNT(*) OVER () FROM rt1 WHERE (((((('1049602999')-(x'd318'))))<((('(_)x' IN (NULL)))))); -- 1ms;
SELECT rt1.c2 FROM rt1 WHERE (0.975323026430323); -- 0ms;
SELECT DISTINCT CAST((0X67a206bc IN (rt1.c3)) AS NUMERIC) FROM rt1 WHERE ((- (CAST(0xffffffff865115cc AS REAL)))); -- 0ms;
SELECT DISTINCT ((((((rt1.c3)GLOB(rt1.c6)))OR(CAST(rt1.c2 AS INTEGER))))OR(rt1.c2 COLLATE RTRIM)) FROM rt1 LIMIT -1039165282 OFFSET -851899596; -- 0ms;
SELECT DISTINCT (('') NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c1) AND (rt1.c1))) AND (CASE rt1.c3  WHEN rt1.c5 THEN rt1.c5 ELSE rt1.c2 END)) FROM rt1 GROUP BY (rt1.c6 IN (CAST(rt1.c5 AS REAL))), HEX(UNLIKELY(rt1.c3)), ((((rt1.c2) BETWEEN (rt1.c3) AND (''))) NOT BETWEEN ((((rt1.c2))<=((rt1.c4)))) AND (CAST(rt1.c6 AS INTEGER))) HAVING (((((rt1.c0, rt1.c4, rt1.c5))!=((rt1.c4, rt1.c1, rt1.c3))))|((+ (rt1.c2)))); -- 0ms;
SELECT COUNT(((rt1.c2)/(rt1.c2))) OVER () FROM rt1 GROUP BY ((CAST(rt1.c5 AS BLOB)) NOT BETWEEN (rt1.c2) AND (CASE rt1.c3  WHEN rt1.c0 THEN rt1.c5 WHEN NULL THEN rt1.c1 WHEN rt1.c3 THEN 0.3171911520942816 ELSE rt1.c1 END)), (~ (rt1.c2 COLLATE NOCASE)), CASE WHEN IFNULL(rt1.c3, rt1.c2) THEN 0x106a1e1d ELSE ((rt1.c6)<>(rt1.c6)) END; -- 1ms;
SELECT DISTINCT ((((rt1.c6 COLLATE BINARY)OR(UPPER(rt1.c5))))AND(CAST(rt1.c5 AS INTEGER))) FROM rt1 WHERE (((((('-828256903')AND('1982094253')))OR('P\n-M~')) IN (CASE WHEN '-1844470087' THEN NULL WHEN 247677785 THEN x'777dce98' WHEN '-1019206782' THEN 0.853979536292258 ELSE -4.82118772E8 END, (- (0.8333029270313109))))); -- 0ms;
SELECT ALL ((((rt1.c3)>=(rt1.c1))) BETWEEN (((rt1.c4) IS FALSE)) AND (((rt1.c0)>(rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c3) NOTNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c1 IN ()) IN (CAST(rt1.c0 AS REAL))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((rt1.c1)OR(HEX(rt1.c1))))OR(((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))))OR((rt1.c0 IN ()))))OR(((rt1.c6) IS TRUE))), ((MAX(rt1.c1))IS NOT(CAST(rt1.c5 AS INTEGER))), (~ ((((rt1.c4, rt1.c0, rt1.c2, rt1.c1, rt1.c6)) BETWEEN ((rt1.c1, rt1.c0, rt1.c4, rt1.c5, rt1.c6)) AND ((rt1.c5, rt1.c5, rt1.c3, '1090713942', rt1.c4))))) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1; -- 0ms;
SELECT DISTINCT (((((((((rt1.c0 IN ()))OR(CASE WHEN '1x' THEN rt1.c4 END)))OR(((rt1.c2)-(rt1.c3)))))AND(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c6)))))OR(CASE WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c0 END)) FROM rt1 WHERE (ABS(DISTINCT (x'' IN ()))); -- 0ms;
SELECT ALL ((COUNT(rt1.c2)) ISNULL), (NOT (((rt1.c3)>>(rt1.c5)))), GROUP_CONCAT(((rt1.c1)>(0Xffffffffb8fd5a40))) FROM rt1 WHERE ((+ ((((0X2c4d94a4, NULL, NULL)) BETWEEN ((x'', '-2123737282', NULL)) AND ((0.7211292800038956, NULL, 0.3005564454523765)))))); -- 0ms;
SELECT rt1.c6 FROM rt1; -- 0ms;
SELECT ALL CASE WHEN ((NULL)*(rt1.c1)) THEN ((((((((rt1.c5)AND('-348027288')))OR(rt1.c2)))AND(rt1.c6)))AND(rt1.c5)) END, (+ (rt1.c4)), CAST(rt1.c2 AS INTEGER) FROM rt1 WHERE (CAST(((0xffffffffab14765a) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((rt1.c5)GLOB('ꀗ_ycr')))AND(1699299849)), (+ (rt1.c4)), COUNT((rt1.c4 IN (rt1.c5, x'f771'))) COLLATE BINARY FROM rt1; -- 1ms;
SELECT DISTINCT ((((rt1.c6 COLLATE NOCASE)AND((((rt1.c4))>=((rt1.c0))))))AND(((rt1.c2) NOT NULL))) FROM rt1; -- 0ms;
SELECT DISTINCT (rt1.c4 IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT TOTAL((NULL IN ())) OVER () FROM rt1 GROUP BY ((rt1.c2) ISNULL) COLLATE NOCASE; -- 0ms;
SELECT ((CASE WHEN rt1.c6 THEN '0.308776394129592' END)>>(((rt1.c2) NOT NULL))), (((NOT (rt1.c2)))GLOB(((NULL) NOTNULL))), (((rt1.c0, rt1.c2, rt1.c5)) NOT BETWEEN ((((((((((rt1.c3)OR(rt1.c1)))AND(0.3703234344028232)))OR(rt1.c2)))OR(rt1.c0)), ((rt1.c0)-(rt1.c3)), x'99d0')) AND ((ROUND(rt1.c5, rt1.c0), (rt1.c4 IN ()), CASE rt1.c3  WHEN rt1.c5 THEN rt1.c2 END))) FROM rt1; -- 0ms;
SELECT DISTINCT ((0Xffffffffe51309c5)!=(TOTAL(rt1.c2))) FROM rt1; -- 0ms;
SELECT ALL (((NULL)>=('1608027806')) IN ()) FROM rt1 WHERE ((((((('0.46234746269019145')AND('-933253500')))AND(-1273561472))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c0 AS INTEGER))<=(1.699299849E9)) FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c6)/(rt1.c3)) FROM rt1; -- 0ms;
SELECT ALL ((((rt1.c4) NOTNULL)) BETWEEN (x'') AND (SUM(rt1.c4))) FROM rt1 WHERE ((x'' IN ())) GROUP BY ((CASE WHEN rt1.c1 THEN rt1.c0 END) ISNULL); -- 0ms;
SELECT ALL ((((((rt1.c5)*(rt1.c6)))OR(rt1.c3)))AND(rt1.c4 COLLATE BINARY)), CASE rt1.c0  WHEN rt1.c5 THEN rt1.c2 COLLATE NOCASE ELSE (('248631210')+(rt1.c2)) END, LIKE((((rt1.c3))>(('-1046074092'))), ((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c6))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt1.c0)>(rt1.c5)) THEN rt1.c2 COLLATE BINARY WHEN TOTAL(rt1.c5) THEN GROUP_CONCAT(2073735207) WHEN (((rt1.c5))>((rt1.c5))) THEN CASE NULL  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c6 END ELSE rt1.c2 END FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c5)AND(rt1.c6)))AND(rt1.c1)) IN (rt1.c0)), COUNT(*), UNLIKELY(ROUND(rt1.c5, x'')) FROM rt1; -- 0ms;
SELECT DISTINCT CASE rt1.c3 COLLATE RTRIM  WHEN rt1.c5 THEN rt1.c4 WHEN (((x''))<>((rt1.c6))) THEN x'' WHEN (rt1.c5 IN ()) THEN ((((((((rt1.c2)AND(rt1.c2)))OR(-1191355840)))AND(rt1.c2)))AND(rt1.c2)) ELSE SUM(rt1.c5) END, ((0.45197609061847077) BETWEEN ((('8561102')>>(rt1.c0))) AND (rt1.c6)), CASE rt1.c1  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END COLLATE BINARY, ((((rt1.c3)AND(rt1.c5))) NOT NULL), (+ (CASE WHEN rt1.c6 THEN rt1.c1 END)) FROM rt1 WHERE (CASE WHEN '0.3831063391044598' THEN CASE WHEN NULL THEN x'' END WHEN (('-432005027')AND(NULL)) THEN ((0Xffffffffc3402382)AND('Cx')) WHEN ((0.5877654509281144) NOT BETWEEN ('שּ⪣|[') AND (NULL)) THEN (NOT (NULL)) ELSE CAST(NULL AS TEXT) END) INTERSECT SELECT ALL MIN(((rt1.c3) BETWEEN (rt1.c4) AND (x''))), FIRST_VALUE(((((rt1.c0)IS NOT(rt1.c0)))<=((((rt1.c5)) NOT BETWEEN ((rt1.c6)) AND ((rt1.c4)))))) OVER (), CAST(rt1.c4 AS BLOB), (- ((+ (rt1.c4)))), (~ (CASE WHEN rt1.c0 THEN rt1.c1 END)) FROM rt1; -- 0ms;
SELECT DISTINCT (((+ (rt1.c0))) BETWEEN ((~ (rt1.c4))) AND (CAST(rt1.c2 AS INTEGER))) FROM rt1 WHERE (((CASE '1714248188'  WHEN NULL THEN 0X4e47cd43 WHEN 1215928700 THEN 1807273944 WHEN NULL THEN NULL ELSE 0.5416091011442588 END)OR((NOT (0.2166346740565629))))); -- 0ms;
SELECT DISTINCT ((((((((GROUP_CONCAT(rt1.c4))AND(((rt1.c2)<>(rt1.c4)))))AND(LIKELY(x''))))OR(rt1.c1)))AND('m-G')) FROM rt1 WHERE ((((('-754497734' IN ())))>((((0Xffffffff90883899)+(0.10223501234022292)))))); -- 0ms;
SELECT DISTINCT ((((((rt1.c1)<<(NULL)))OR(((rt1.c6)<>(rt1.c2)))))OR(((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c6)))) FROM rt1 LIMIT 1563478107 OFFSET 650851151; -- 0ms;
SELECT DISTINCT CAST(rt1.c1 COLLATE RTRIM AS BLOB) FROM rt1 WHERE (json_remove(CASE 0.6473284367202339  WHEN '(7EZ' THEN x'4332' ELSE 709281394 END, (NOT (NULL)))) ORDER BY ((CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c5 THEN x'' ELSE rt1.c5 END)GLOB(rt1.c6)) DESC, ((((rt1.c5 IN (rt1.c3)), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c0)), (~ (rt1.c2))))==(((- (rt1.c5)), CAST(rt1.c4 AS BLOB), LIKELIHOOD(rt1.c4, 0.29898631773240125)))) ASC  NULLS LAST, CASE CASE rt1.c6  WHEN rt1.c1 THEN rt1.c6 END  WHEN (rt1.c1 IN ()) THEN rt1.c6 COLLATE BINARY ELSE ((rt1.c6) IS FALSE) END; -- 0ms;
SELECT DISTINCT ((MAX(rt1.c6)) NOT NULL), CAST(CASE rt1.c1  WHEN rt1.c6 THEN rt1.c0 ELSE rt1.c3 END AS INTEGER), LAST_VALUE(CASE WHEN rt1.c6 THEN UPPER(rt1.c3) END) OVER () FROM rt1 WHERE ((((('P\n-M~')AND(x'')))AND(-4.28660513E8))) ORDER BY (((~ (rt1.c0)))%(rt1.c1 COLLATE RTRIM))  NULLS FIRST; -- 1ms;
SELECT ALL TRIM(DISTINCT rt1.c4) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT 589530430 FROM rt1 WHERE (CAST(((x'2158e6a5')|(x'')) AS NUMERIC)); -- 0ms;
SELECT ((CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c4 END)&(LOWER(rt1.c4))) FROM rt1; -- 0ms;
SELECT TOTAL(((rt1.c3) ISNULL)) FROM rt1; -- 0ms;
SELECT json_insert(ABS(rt1.c3), ((((rt1.c5)OR(rt1.c6)))OR(rt1.c2)), x''), (~ (CAST(rt1.c4 AS BLOB))), ((COUNT(rt1.c0))==(SUM(rt1.c4))) FROM rt1 WHERE (((LTRIM(0x85d67fd))!=(CASE NULL  WHEN NULL THEN 1472054860 END))); -- 0ms;
SELECT (((rt1.c6)) NOT BETWEEN ((CASE WHEN rt1.c0 THEN x'' WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c6 ELSE rt1.c4 END)) AND ((((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c6))))) FROM rt1 WHERE (CAST(((x'')GLOB('')) AS REAL)) GROUP BY rt1.c3; -- 0ms;
SELECT ALL (((((1))>=((rt1.c6))))LIKE(rt1.c0)) FROM rt1 WHERE (((((((((((1281837958)OR('0.16728680417826824')))AND(0xffffffffe7f62d88)))OR(NULL)))OR(x''))) NOT NULL)); -- 0ms;
SELECT x'88397615', COUNT(CASE WHEN rt1.c4 THEN rt1.c5 END), ABS(0.04993085972877942) FROM rt1; -- 0ms;
SELECT ((rt1.c6 COLLATE RTRIM) BETWEEN (CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c2 THEN NULL WHEN rt1.c5 THEN NULL END) AND (GROUP_CONCAT(rt1.c2))), 1.783474151E9, COALESCE(DISTINCT ((((rt1.c1)OR(rt1.c5)))AND(rt1.c4)), ((rt1.c0)*(rt1.c5))) FROM rt1 WHERE ((((((NULL, 0.7010860288885403, NULL)) BETWEEN (('-144897668', x'', '841596375')) AND ((x'60ab', NULL, -674027497))))OR((('1398036831')>=('0㩱'))))); -- 0ms;
SELECT DISTINCT SUM((rt1.c3 IN (rt1.c6))), (NULL IN ()), COUNT((rt1.c2 IN ()) COLLATE BINARY) FILTER(WHERE rt1.c0) OVER () FROM rt1 WHERE ((('')||(0x5b9f6d6)) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1))) OVER (), ((CASE rt1.c0  WHEN rt1.c2 THEN rt1.c6 END)>>(LOWER(rt1.c0))), '*wk鄿scj#', AVG(CAST(rt1.c5 AS INTEGER)) FILTER(WHERE (((rt1.c5)) BETWEEN ((rt1.c2)) AND ((rt1.c3))) COLLATE NOCASE) OVER ( ORDER BY (NOT ((rt1.c4 IN ()))) ASC  NULLS LAST), (((rt1.c5)<<(rt1.c1)) IN ()) FROM rt1 WHERE (x'') LIMIT -486615699; -- 0ms;
SELECT ALL TRIM(CAST(rt1.c1 AS INTEGER), ((rt1.c4)==(rt1.c3))) FROM rt1 WHERE (((((NULL) BETWEEN (0.9230830317472266) AND ('y|VNM')))|(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT ((((((((UPPER(rt1.c3))OR(NULL)))OR(CAST(rt1.c5 AS TEXT))))OR(((((((((rt1.c5)AND(rt1.c1)))OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c4)))))AND((rt1.c6 IN ()))) FROM rt1 WHERE ('''pﭹ'); -- 1ms;
SELECT (NOT (((((rt1.c2)OR(rt1.c3)))AND(rt1.c3)))) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c6 IN ())) BETWEEN (((rt1.c4) IS TRUE)) AND (CASE WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c5 END)) FROM rt1 GROUP BY (~ (rt1.c1 COLLATE NOCASE)) HAVING ((((((((((rt1.c0)OR(rt1.c4)))AND(rt1.c5)))OR('-2123737282')))AND(rt1.c3)))<(rt1.c4)); -- 0ms;
SELECT CAST(SUM(rt1.c5) AS BLOB) FROM rt1 WHERE (((((((((('L''' IN ()))OR((x'' IN ()))))OR(x'')))OR((0.3071290311472654 IN ()))))OR(0Xffffffffda2aaa03 COLLATE NOCASE))); -- 4ms;
SELECT DISTINCT CASE COUNT(*)  WHEN json_extract('', rt1.c2, rt1.c5, rt1.c0) THEN CASE rt1.c4  WHEN rt1.c1 THEN rt1.c0 END ELSE ((((rt1.c1)AND(rt1.c0)))OR(rt1.c0)) END FROM rt1 WHERE ((((('')AND(CAST(NULL AS REAL))))OR(CASE NULL  WHEN -144518849 THEN x'' END))) ORDER BY (- ((((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5)))))  NULLS FIRST;SELECT ALL json_extract(rt1.c6, rt1.c4) COLLATE BINARY FROM rt1 WHERE ((((+ (-1360927524))) NOTNULL)); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT CASE rt1.c6  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c2 END), ((((rt1.c1)%(rt1.c6))) IS FALSE), CAST(rt1.c0 AS BLOB) COLLATE NOCASE FROM rt1 WHERE ((((((((((('/痫')AND(x'')))OR(NULL)))AND(-1490353935)))OR(0.25678016339518384)))*((('ꀗ_ycr')<>('{}'))))); -- 0ms;
SELECT DISTINCT (((rt1.c4)) BETWEEN ((MIN(rt1.c0))) AND ((rt1.c1))) FROM rt1 WHERE ((+ (IFNULL(DISTINCT 927022936, NULL)))); -- 0ms;
SELECT ALL GROUP_CONCAT(LIKELY(DISTINCT rt1.c2)) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT ABS(highlight(rt1.c5, rt1.c2, rt1.c2, rt1.c3)), ((((TYPEOF(rt1.c3))AND((rt1.c1 IN ()))))AND(((rt1.c3)LIKE(rt1.c4)))), CAST(MAX(rt1.c6) AS NUMERIC), MIN(SQLITE_SOURCE_ID()), ((((rt1.c4)IS(rt1.c0)))==((rt1.c5 IN ()))) FROM rt1 WHERE (CASE WHEN HEX('-1628089966') THEN (x'' IN (x'', 0xffffffffa2ac8ea0)) ELSE ((0.9840066119468092)||('-144518849')) END);SELECT DISTINCT ((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c5)))|(MAX(rt1.c1))) FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(NULLIF(DISTINCT rt1.c6, rt1.c6)) FROM rt1 LIMIT 437218281; -- 1ms;
SELECT DISTINCT ((rt1.c0) ISNULL) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT ALL RANK() OVER (), ((CAST(rt1.c2 AS REAL)) NOTNULL), ((rt1.c0 IN ()) IN (((((rt1.c3)OR(rt1.c6)))OR(rt1.c3)))) FROM rt1 WHERE ((CASE WHEN x'' THEN '1134242210' END IN ())); -- 0ms;
SELECT DISTINCT ((((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c4))) BETWEEN ((rt1.c6 IN ())) AND (GROUP_CONCAT(rt1.c3))) FROM rt1 WHERE (((((NOT (NULL)), NULL, CASE 0.8333029270313109  WHEN '861736281' THEN '' END, ((0.24712802440723725) NOT NULL), 0X1a0f6be9 COLLATE NOCASE, (('1533802396') NOT BETWEEN (0.01182402402863103) AND ('V)f')), ((-1.479895721E9)<=('> '))))>(((- ('-512340399')), NULL, ((('28306240')) BETWEEN ((NULL)) AND ((NULL))), ((((0x4d7c4522)AND(NULL)))AND('')), x'' COLLATE NOCASE, (x'' IN ()), (NULL IN ()))))); -- 0ms;
SELECT DISTINCT ((MAX(rt1.c1)) NOT BETWEEN (x'') AND (579758360)) FROM rt1 WHERE (((((x'')==(NULL)))=((~ ('-126674491'))))) ORDER BY LIKELY(rt1.c6 COLLATE BINARY) ASC, highlight((((rt1.c5)) BETWEEN ((rt1.c3)) AND ((rt1.c3))), rt1.c3 COLLATE BINARY, CASE rt1.c3  WHEN rt1.c3 THEN ']G' ELSE rt1.c5 END, ((x'755f')/(rt1.c5)))  NULLS FIRST; -- 1ms;
SELECT GROUP_CONCAT(rt1.c1) FROM rt1; -- 0ms;
SELECT ALL CASE WHEN ((rt1.c1)+(rt1.c3)) THEN ((rt1.c6)<>(rt1.c3)) END, ((rt1.c1 COLLATE RTRIM)*(0.16728680417826824)), TYPEOF(DISTINCT rt1.c3 COLLATE NOCASE) FROM rt1 LIMIT 529525852 OFFSET -2001618306; -- 0ms;
SELECT ALL ((((rt1.c5)AND(rt1.c4))) BETWEEN (((rt1.c1)AND(rt1.c5))) AND (TRIM(DISTINCT rt1.c5, rt1.c1))) FROM rt1 ORDER BY UPPER(((rt1.c5) NOTNULL))  NULLS LAST; -- 0ms;
SELECT CAST(NULL AS REAL) FROM rt1 WHERE ((- (((((NULL)AND(1.47205486E9)))AND(NULL))))) ORDER BY (((rt1.c2)) NOT BETWEEN ((((rt1.c5) ISNULL))) AND ((rt1.c5))); -- 0ms;
SELECT rt1.c1 COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c3, rt1.c3, NULL)) NOT BETWEEN ((rt1.c2, '', rt1.c4)) AND ((rt1.c6, rt1.c6, rt1.c1))))/((NOT (NULL)))) FROM rt1; -- 0ms;
SELECT ALL ((SUM(rt1.c4)) BETWEEN (((rt1.c5) IS FALSE)) AND ((rt1.c5 IN (rt1.c6)))), (NOT (((rt1.c1) NOT NULL))), CASE ((rt1.c0) ISNULL)  WHEN ((x'2eec') BETWEEN (rt1.c2) AND (rt1.c4)) THEN ((rt1.c0)AND(rt1.c5)) END FROM rt1; -- 0ms;
SELECT (((((rt1.c2)) BETWEEN ((rt1.c5)) AND ((rt1.c4))))||(CASE WHEN rt1.c5 THEN rt1.c6 WHEN rt1.c4 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c1 END)), (AVG(rt1.c5) IN (((((rt1.c0)AND(rt1.c4)))OR(rt1.c3)), CASE rt1.c1  WHEN rt1.c0 THEN rt1.c2 END)), ((rt1.c1)*(rt1.c5)) COLLATE BINARY FROM rt1; -- 3ms;
SELECT DISTINCT (((~ (rt1.c0))) NOTNULL) FROM rt1 LIMIT -970609350 OFFSET -965108209; -- 0ms;
SELECT DISTINCT ((TOTAL(rt1.c3))>>(rt1.c5 COLLATE NOCASE)) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt1 WHERE ((+ (0.46962097172329087 COLLATE NOCASE))) INTERSECT SELECT rt1.c6 FROM rt1; -- 0ms;
SELECT ALL LTRIM(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c5 END), NULL, x'' FROM rt1 WHERE ((~ (CASE WHEN '' THEN '1982094253' ELSE x'' END))) LIMIT 490986415 OFFSET 1738671804; -- 1ms;
SELECT DISTINCT (((rt1.c4)) NOT BETWEEN ((rt1.c5 COLLATE NOCASE)) AND ((rt1.c6))), CASE ((rt1.c4)GLOB(rt1.c5))  WHEN CAST(rt1.c0 AS REAL) THEN ((rt1.c1)/(rt1.c3)) WHEN rt1.c4 COLLATE BINARY THEN rt1.c6 WHEN ((((rt1.c4)OR(rt1.c0)))OR(0.42205969995091175)) THEN 0.15038786520237268 END, (((- (NULL)))>>(rt1.c5 COLLATE RTRIM)), PERCENT_RANK() OVER ( ORDER BY CASE CASE rt1.c2  WHEN rt1.c2 THEN rt1.c2 END  WHEN ((rt1.c0)<=(rt1.c0)) THEN ((rt1.c5)AND('2085104627')) ELSE rt1.c4 END, CASE ((rt1.c1)OR(rt1.c0))  WHEN (rt1.c3 IN ()) THEN CASE rt1.c6  WHEN rt1.c6 THEN rt1.c0 WHEN 0.7174484882220267 THEN rt1.c2 WHEN NULL THEN '1982094253' END END RANGE BETWEEN  UNBOUNDED PRECEDING AND (+ (IFNULL(rt1.c6, rt1.c2))) FOLLOWING), ((SUM(rt1.c6)) ISNULL), CASE MIN(rt1.c1)  WHEN UNLIKELY(DISTINCT rt1.c6) THEN ((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c5)) ELSE ((((((((((((rt1.c1)OR(0.9041429587067699)))OR(rt1.c4)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c4)))OR(rt1.c5)) END, CAST(CAST(rt1.c0 AS BLOB) AS TEXT) FROM rt1;SELECT '-662815426' FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE BINARY)<<(NULL)), rt1.c2, rt1.c5 FROM rt1 WHERE (CASE (- (x''))  WHEN ((((((((NULL)AND(0X6e1e89b2)))OR(0.7850448360157095)))AND(x'0d9e')))AND(-105447406)) THEN (('636350476') NOT NULL) END); -- 0ms;
SELECT DISTINCT CAST(((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c1)) AS BLOB), SUM((+ (rt1.c6))) OVER ( ROWS ((CASE rt1.c3  WHEN rt1.c0 THEN rt1.c0 ELSE NULL END) BETWEEN ((((0.1788489525527066))<=((rt1.c3)))) AND (rt1.c6)) PRECEDING EXCLUDE TIES), (((CAST(rt1.c2 AS NUMERIC), rt1.c4, '-2041506356'))>((COUNT(*), rt1.c1, (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c6)))))) FROM rt1 WHERE (NULL) LIMIT 8561102 OFFSET 1662094138;SELECT DISTINCT x'' FROM rt1; -- 0ms;
SELECT DISTINCT LTRIM(CAST(rt1.c0 AS TEXT), rt1.c6) FROM rt1; -- 0ms;
SELECT CUME_DIST() OVER () FROM rt1 WHERE ((((('315632972')||('')))AND((NOT ('-1046074092'))))); -- 0ms;
SELECT DISTINCT CAST(json_type('') AS TEXT), CASE (rt1.c4 IN ())  WHEN NULL THEN ((rt1.c3) NOT BETWEEN (rt1.c4) AND (rt1.c1)) WHEN (NOT (rt1.c4)) THEN GROUP_CONCAT(rt1.c3) WHEN rt1.c6 THEN rt1.c6 ELSE rt1.c5 END, RANK() OVER () FROM rt1 WHERE (CASE WHEN (- (0.4035763302662765)) THEN LIKELY('0㩱') END);SELECT ALL (rt1.c0 IN ()), (+ (rt1.c6 COLLATE RTRIM)), (((((rt1.c5, rt1.c0, rt1.c2, rt1.c1, NULL)) NOT BETWEEN ((rt1.c4, rt1.c0, rt1.c2, NULL, rt1.c3)) AND ((rt1.c6, rt1.c2, rt1.c0, rt1.c3, rt1.c3)))) IS FALSE) FROM rt1 WHERE (((CASE WHEN x'' THEN '194981311' END)>>((((('0.33508076938093423')OR(x'')))AND(NULL))))); -- 0ms;
SELECT (((((rt1.c3))>((rt1.c1)))) ISNULL), ((CAST('M	' AS TEXT))|(CASE 'minutes'  WHEN '5771061' THEN rt1.c1 ELSE rt1.c0 END)), ((((rt1.c1) ISNULL))|(((NULL)+(rt1.c1)))) FROM rt1 WHERE (((0.024933511527814423)=(-1.424722342E9)) COLLATE RTRIM); -- 0ms;
SELECT ALL (((((((((((rt1.c2))<=((rt1.c6))))OR(CASE rt1.c5  WHEN 'P6' THEN rt1.c0 ELSE rt1.c6 END)))OR(((rt1.c2)<=(rt1.c1)))))AND(x'')))AND(((x'')+(rt1.c6)))), rt1.c1, UPPER(SUM(rt1.c1)) FROM rt1; -- 0ms;
SELECT DISTINCT CASE '0.9696908274157352' COLLATE BINARY  WHEN ((rt1.c6) NOT BETWEEN (rt1.c6) AND (rt1.c5)) THEN NULL WHEN rt1.c4 COLLATE RTRIM THEN CASE rt1.c0  WHEN '' THEN rt1.c1 WHEN rt1.c6 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c5 THEN rt1.c2 WHEN rt1.c6 THEN rt1.c5 END WHEN (- (rt1.c6)) THEN COUNT(*) ELSE CASE rt1.c6  WHEN rt1.c4 THEN rt1.c4 WHEN rt1.c4 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END END FROM rt1; -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt1; -- 0ms;
SELECT NULL FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c5) IS FALSE)) NOTNULL) FROM rt1 WHERE (((CAST(0xffffffffbf5358df AS INTEGER)) NOT NULL)); -- 0ms;
SELECT DISTINCT (~ ((((rt1.c1))>=((rt1.c2))))) FROM rt1 WHERE ((((('0.3299528931342771'))>(('sT'))) IN (((-1.2156538E8)OR(0X74942aac))))); -- 1ms;
SELECT DISTINCT COUNT(CASE WHEN rt1.c6 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c4 WHEN '%m' THEN rt1.c5 ELSE rt1.c1 END) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT x'' FROM rt1 WHERE (x'3b87'); -- 3ms;
SELECT ALL ((rt1.c6)||(((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c6)))), (((rt1.c5 IN ())) IS TRUE), (((((((rt1.c2)OR(rt1.c2)))AND(rt1.c0))))>(((((rt1.c6))!=((rt1.c6)))))) FROM rt1 ORDER BY (rt1.c6 IN (((rt1.c0) NOT NULL), (((rt1.c1)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))))) ASC  NULLS FIRST; -- 0ms;
SELECT ((GROUP_CONCAT(rt1.c5)) BETWEEN ((rt1.c4 IN ())) AND (rt1.c4 COLLATE RTRIM)) FROM rt1 WHERE ((- ((((1.32642715E8))>=((NULL)))))); -- 0ms;
SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c5 END)<=((((rt1.c6, rt1.c2, rt1.c1, rt1.c0, rt1.c4))>((rt1.c2, rt1.c5, rt1.c6, rt1.c2, rt1.c2))))), NULL, CAST(rt1.c2 AS BLOB) FROM rt1 WHERE ((((((((((1.0846023E7 IN ('')))OR(CAST(NULL AS NUMERIC))))OR((('-1e500')/(0.9600258477556599)))))AND((((x'')) BETWEEN ((x'')) AND (('/8B	<K''k'))))))OR(CASE WHEN 'Mg' THEN 0Xffffffff99fb0378 END))) LIMIT -1180042702; -- 0ms;
SELECT ALL CAST(((rt1.c6) ISNULL) AS INTEGER) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 WHERE ((NOT ('Qsn' COLLATE BINARY))) ORDER BY ((rt1.c0)GLOB(CASE rt1.c6  WHEN x'52de' THEN rt1.c6 WHEN '-1582492623' THEN rt1.c3 WHEN rt1.c5 THEN rt1.c3 ELSE rt1.c6 END)) DESC; -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN (((rt1.c5 IN ()))) AND ((CASE WHEN rt1.c2 THEN rt1.c0 END))) FROM rt1 WHERE (((-761692035)||(-2.041506356E9)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt1.c5 FROM rt1 WHERE (CASE '132642715' COLLATE NOCASE  WHEN ((0.1580525477422704)IS NOT(1.673491947E9)) THEN ((x'a2e0')>(0.2788428396864162)) WHEN NULL COLLATE RTRIM THEN (NULL IN (NULL, 0.7174484882220267)) WHEN (- ('0.26655476759738805')) THEN 'r_\ng' END); -- 0ms;
SELECT GROUP_CONCAT(((((rt1.c3)AND(rt1.c5)))AND(rt1.c1))) OVER () FROM rt1 WHERE (json_array_length(-1554670253 COLLATE NOCASE, CASE -66646843  WHEN NULL THEN NULL END)); -- 0ms;
SELECT CASE rt1.c6  WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c4 END COLLATE NOCASE, -1.459775962E9, ((COUNT(*))-(((0Xffffffffcf319e11)<<(rt1.c4)))) FROM rt1 WHERE ((((('-2123737282')<('CLjZ'))) BETWEEN (CAST('' AS INTEGER)) AND ((((x'3416')) NOT BETWEEN (('1598692951')) AND (('166831320')))))); -- 0ms;
SELECT DISTINCT ((rt1.c5) IS TRUE) COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT ((((((rt1.c5, rt1.c3, rt1.c4))=((rt1.c4, rt1.c5, NULL))), (((rt1.c6, rt1.c3, rt1.c4))=((rt1.c1, rt1.c4, rt1.c2))), (~ (rt1.c1))))>((MAX(7.43281828E8), ((rt1.c6)=(rt1.c2)), '-9223372036854775808'))) FROM rt1 WHERE (CASE WHEN NULL THEN 'r_\ng' ELSE x'5857' END COLLATE RTRIM); -- 0ms;
SELECT (+ ((rt1.c0 IN ()))) FROM rt1 WHERE ((((x'' IN (x'', 0.6254507013198664))) BETWEEN (((('i{')) BETWEEN (('-1677144234')) AND ((NULL)))) AND ((('-482118772')AND(0.16728680417826824))))) GROUP BY ((CAST(rt1.c2 AS REAL)) BETWEEN (((1783474151)/(rt1.c0))) AND (((NULL) NOT BETWEEN (rt1.c5) AND (rt1.c3)))); -- 0ms;
SELECT (x'' COLLATE NOCASE IN ()) FROM rt1 WHERE (CAST(CAST('c>' AS NUMERIC) AS TEXT)) ORDER BY TYPEOF(DISTINCT (NOT (rt1.c1))), (((rt1.c3, rt1.c4, rt1.c3)) NOT BETWEEN ((CASE rt1.c2  WHEN rt1.c4 THEN rt1.c4 END, ((rt1.c6) NOTNULL), rt1.c1 COLLATE NOCASE)) AND ((CASE 1.945382757E9  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c5 THEN '-1729390129' WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c4 END, CASE WHEN rt1.c0 THEN rt1.c5 END, ((rt1.c4) NOT BETWEEN (rt1.c0) AND ('')))))  NULLS FIRST, ((((rt1.c3)||(rt1.c0)))%(rt1.c6)) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt1.c2) NOT NULL) COLLATE BINARY COLLATE NOCASE FROM rt1 WHERE (CASE (~ (0.5986344563236022))  WHEN x'' THEN (('a흖') IS FALSE) ELSE ((NULL)<('-1023806236')) END) LIMIT 1390648795 OFFSET -1276062600; -- 0ms;
SELECT NULL FROM rt1 LIMIT -2106527849 OFFSET -738873527; -- 0ms;
SELECT ALL ((((rt1.c2)||(rt1.c2))) ISNULL) FROM rt1; -- 0ms;
SELECT DISTINCT (rt1.c3 IN (rt1.c3)) COLLATE NOCASE FROM rt1 WHERE ((CAST(x'' AS REAL) IN ())); -- 0ms;
SELECT ((0.2106087451621389)LIKE(rt1.c2)), COUNT(((((((((rt1.c4)AND(rt1.c2)))OR(rt1.c4)))AND(NULL)))OR(rt1.c1))), (((((rt1.c0)AND(rt1.c1)))AND(rt1.c3)) IN ()) FROM rt1 ORDER BY ((((NULLIF(NULL, rt1.c2))AND(((rt1.c2) ISNULL))))AND((rt1.c1 IN ()))) ASC  NULLS LAST;SELECT DISTINCT (((rt1.c2)) NOT BETWEEN (((NOT (rt1.c6)))) AND ((((rt1.c3)<(rt1.c0))))), ((((rt1.c0)IS NOT(rt1.c0)))<=(((rt1.c4) NOT BETWEEN (rt1.c0) AND (rt1.c4)))), ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE NOCASE FROM rt1 WHERE (((((x'2b36')OR(((((0.9245257929863917)AND(NULL)))AND(0.8879193998329439)))))AND((0.41637928490215903 IN ())))) ORDER BY ((((rt1.c3)OR(rt1.c1)))OR(rt1.c6)) COLLATE BINARY, CASE TYPEOF(rt1.c4)  WHEN rt1.c6 THEN IFNULL(DISTINCT '	!', rt1.c0) END ASC, ((CASE rt1.c2  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c3 END)|(((rt1.c6) BETWEEN (rt1.c0) AND (rt1.c6)))) ASC LIMIT -1275932770; -- 0ms;
SELECT DISTINCT ((((rt1.c0)<>(rt1.c1)))AND(((rt1.c3) BETWEEN (rt1.c0) AND (rt1.c0)))), rt1.c6, HEX(MIN(rt1.c2)) FROM rt1 WHERE (NULL); -- 0ms;
SELECT ALL 'FW⠩7', CAST(rt1.c0 AS REAL) COLLATE BINARY, (((x'668c'))>((rt1.c4 COLLATE BINARY))) FROM rt1; -- 0ms;
SELECT DISTINCT (x'' IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3) NOT BETWEEN (rt1.c6) AND (0.7748837824269614)))||(((rt1.c6) BETWEEN (rt1.c2) AND (rt1.c1)))) FROM rt1 LIMIT -674027497; -- 0ms;
SELECT ALL TYPEOF(CASE WHEN rt1.c4 THEN rt1.c5 ELSE rt1.c0 END) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2 FROM rt1 ORDER BY (NOT (((rt1.c1) IS FALSE))), (- ((rt1.c5 IN ()))); -- 1ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c5)) BETWEEN ((- ('-2057905755'))) AND (CASE rt1.c5  WHEN rt1.c4 THEN x'' END)), json_patch(((rt1.c2) ISNULL), ((rt1.c0) NOTNULL)), (((rt1.c4, rt1.c6, rt1.c2)) BETWEEN ((((rt1.c0) IS TRUE), (rt1.c6 IN (rt1.c3, rt1.c2)), LOWER(rt1.c6))) AND ((ABS(rt1.c2), ((rt1.c4)/(rt1.c2)), CAST(rt1.c0 AS REAL)))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE ((((rt1.c1)OR(rt1.c1)))OR(rt1.c4))  WHEN ((rt1.c2) NOT BETWEEN (-5.12340399E8) AND (x'')) THEN ((0X31bf03a0)*(rt1.c5)) END FROM rt1 ORDER BY (- (CAST(rt1.c1 AS NUMERIC))) ASC; -- 0ms;
SELECT RANK() OVER ( GROUPS  CURRENT ROW) FROM rt1 WHERE ((((x'', NULL, 0.975323026430323)) BETWEEN (((('331238914') NOT BETWEEN (x'') AND ('-144897668')), CAST(NULL AS INTEGER), 2.47677785E8)) AND ((((0.7709953173744163) NOT BETWEEN ('644828257') AND (NULL)), ((NULL) BETWEEN ('1063514048') AND ('뱶*E1')), ((0Xfffffffffb3c30f6) NOT BETWEEN (0.27506094106129564) AND (NULL)))))) GROUP BY ((((CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c3 END)AND(((rt1.c4) IS FALSE))))AND(((rt1.c4) BETWEEN (rt1.c3) AND (rt1.c1)))); -- 0ms;
SELECT DISTINCT (((((rt1.c5))<>((rt1.c3))))||((((rt1.c5, rt1.c2, rt1.c5, rt1.c3, rt1.c6))<((rt1.c1, rt1.c6, rt1.c6, 'i', ' |'))))) FROM rt1; -- 1ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((CAST(rt1.c3 AS NUMERIC))) AND ((((rt1.c5) NOT BETWEEN (rt1.c0) AND (rt1.c0))))), CAST((rt1.c6 IN ()) AS INTEGER), (CAST(rt1.c1 AS NUMERIC) IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT x'cce9' FROM rt1; -- 0ms;
SELECT (~ (json_array(rt1.c0, rt1.c5, rt1.c2, rt1.c1))), ((((rt1.c5)&(rt1.c3))) BETWEEN (CASE WHEN rt1.c6 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 END) AND (((rt1.c6)||(rt1.c1)))), ((((rt1.c1)-(rt1.c0)))*(CAST(rt1.c2 AS INTEGER))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c3) NOT NULL)) ISNULL), COUNT(*) OVER (), ((((((rt1.c3))<>((rt1.c0)))))<((MAX(rt1.c3)))) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt1.c1  WHEN rt1.c4 THEN rt1.c4 ELSE rt1.c6 END THEN json(rt1.c3) END, (~ (rt1.c0)), (rt1.c6 COLLATE RTRIM IN ()), TYPEOF(((((rt1.c3)OR(rt1.c0)))OR(rt1.c1))), CASE WHEN HEX(DISTINCT 0.12689709832544716) THEN (((rt1.c5, rt1.c1, rt1.c6)) NOT BETWEEN ((rt1.c2, rt1.c2, rt1.c2)) AND ((rt1.c6, rt1.c6, rt1.c0))) ELSE ((rt1.c6)>=(rt1.c3)) END FROM rt1 WHERE (CASE WHEN CASE WHEN 0.48810417154999863 THEN x'bd1c' WHEN 0.7524094030258346 THEN 0.1897155212212429 WHEN '1970277177' THEN '' ELSE x'' END THEN (~ (x'')) WHEN (((((((('P')OR('676082346')))AND(0.751403548513712)))OR(-8.55540423E8)))AND(NULL)) THEN ((x'')!=('-144518849')) WHEN (((NULL, -1639804609, x'99dc5345'))==((NULL, '365142266', x'6392'))) THEN ('1418445249' IN ('', 3.64668943E8)) END); -- 0ms;
SELECT DISTINCT ((- (rt1.c2)) IN ()), (NOT ((rt1.c5 IN ()))), (((COUNT('OkJ#i')))=(((~ (rt1.c4))))) FROM rt1 WHERE ((((1227192366)) NOT BETWEEN ((((x'') NOT BETWEEN ('אָI\r(TT|') AND ('-349623622')))) AND ((CAST(3.65142266E8 AS TEXT))))); -- 0ms;
SELECT DISTINCT ((rt1.c3 COLLATE NOCASE) IS FALSE) FROM rt1 WHERE (GLOB((- ('8|')), UNLIKELY('	!'))); -- 0ms;
SELECT DISTINCT LAG(((((rt1.c2, rt1.c6, rt1.c2)) NOT BETWEEN ((rt1.c6, rt1.c5, rt1.c2)) AND ((rt1.c6, rt1.c6, rt1.c3))) IN ()), ((((((((((((NULL)OR(rt1.c2)))OR(x'')))AND(((rt1.c5) NOT NULL))))AND(((rt1.c1)IS NOT(rt1.c2)))))OR(rt1.c5 COLLATE RTRIM)))OR(((((rt1.c1)AND(rt1.c2)))OR(x'')))), UPPER(rt1.c0)) OVER (), CAST((+ (rt1.c4)) AS TEXT), ((((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c6)))AND(rt1.c5)))AND(((rt1.c5)IS(rt1.c1)))) FROM rt1 WHERE ((~ ((('')GLOB(NULL))))); -- 0ms;
SELECT ALL ((rt1.c5 COLLATE NOCASE) ISNULL), ((((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))+(x'a26b')), ((((rt1.c3)AND(rt1.c5)))OR(rt1.c0)) COLLATE BINARY FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c5 COLLATE NOCASE)OR((~ (rt1.c0)))))OR(rt1.c3)) FROM rt1 WHERE (((7.43281828E8 COLLATE RTRIM)LIKE(((NULL)/(1087724317))))); -- 0ms;
SELECT DISTINCT ((((((NULL)AND(rt1.c4)))OR(rt1.c3)))!=(CASE 0.01182402402863103  WHEN rt1.c5 THEN '-1479895721' ELSE rt1.c5 END)) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1; -- 0ms;
SELECT CAST(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c6 WHEN x'98a1' THEN rt1.c6 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c6 END AS INTEGER) FROM rt1 GROUP BY ((((rt1.c6)>>(rt1.c3)))>=(TOTAL_CHANGES())); -- 0ms;
SELECT ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c0)) COLLATE NOCASE FROM rt1 WHERE (((x'2922')>(NULL)) COLLATE BINARY) GROUP BY load_extension(CASE WHEN rt1.c3 THEN rt1.c1 WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 END, rt1.c6), (((((rt1.c3))<((rt1.c2))))<>(PRINTF(rt1.c6))), (((rt1.c0) BETWEEN (rt1.c4) AND (rt1.c2)) IN (((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c5)))) HAVING MAX((~ (rt1.c6))); -- 0ms;
SELECT AVG(((rt1.c0) IS FALSE)) OVER () FROM rt1 WHERE ((((((('')OR(NULL)))OR('-9223372036854775808')))&(CASE WHEN 0.6862928408649438 THEN 0x6c1463ca ELSE '' END))); -- 0ms;
SELECT rt1.c6 FROM rt1 WHERE (CASE WHEN CASE WHEN '2031195345' THEN '1254733061' WHEN NULL THEN '908591483' WHEN 0.4013873080311563 THEN 0x6b86c4a7 ELSE NULL END THEN 0.43643811808946276 COLLATE BINARY WHEN ((0.29183271640793484)*('f쩽O[ekS')) THEN CAST('-905683304' AS TEXT) WHEN ('-1332182514' IN ()) THEN ((((NULL)AND(x'b027')))OR('-466794519')) ELSE '1398036831' END); -- 0ms;
SELECT COUNT(*) FROM rt1; -- 0ms;
SELECT CAST(rt1.c1 COLLATE RTRIM AS NUMERIC) FROM rt1 WHERE (((('> ', 0.4846441860559969, -8.28256903E8)) NOT BETWEEN ((((0.599545748751618) BETWEEN (x'') AND ('-1872891913')), (NULL IN (NULL)), 317654808 COLLATE NOCASE)) AND ((STRFTIME(x'', 0x1, 1398036831, x'', NULL, 'Q', 0.9840066119468092), ((((x'')OR(x'')))OR(0.3171911520942816)), ((0.5795683016324477)>>(x'')))))); -- 0ms;
SELECT DISTINCT ((((rt1.c3)AND((~ (rt1.c5)))))OR(CAST(rt1.c3 AS TEXT))) FROM rt1 WHERE (json_array(COALESCE(DISTINCT 0.9770495508779256, 0.3005564454523765), x'', x'0ecd' COLLATE BINARY, ((NULL) IS FALSE)));SELECT DISTINCT ((((((rt1.c3)AND('1426240403')))AND(rt1.c5)))&(((rt1.c4)||(x'')))) FROM rt1 WHERE (((((x'')OR(NULL)))OR(0.8398270903907016)) COLLATE RTRIM); -- 0ms;
SELECT (~ (((rt1.c4)<(rt1.c5)))) FROM rt1; -- 0ms;
SELECT ALL (('') ISNULL), ((rt1.c6 COLLATE NOCASE)AND(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c5)))), (((+ (rt1.c3)))LIKE(0.7666201122586053)) FROM rt1 WHERE ((- (CAST(0.16857328261040172 AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((rt1.c3 IN (rt1.c4, rt1.c0)))||(CASE rt1.c6  WHEN rt1.c5 THEN rt1.c4 END)) FROM rt1 WHERE ('-1332268708') ORDER BY ((CAST(rt1.c0 AS BLOB)) NOT NULL) DESC, CASE ((rt1.c4) NOT BETWEEN (rt1.c6) AND (rt1.c4))  WHEN (((rt1.c5)) BETWEEN ((rt1.c0)) AND ((rt1.c1))) THEN rt1.c3 COLLATE NOCASE END ASC  NULLS FIRST, CASE WHEN rt1.c1 THEN TRIM(rt1.c6) END DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c2 AS TEXT) THEN ((rt1.c6)<=(rt1.c1)) ELSE (rt1.c6 IN ()) END, CASE ((rt1.c5) NOTNULL)  WHEN ('~/' IN ()) THEN ((rt1.c5) BETWEEN (rt1.c0) AND (rt1.c4)) WHEN CAST(rt1.c0 AS REAL) THEN (((rt1.c5)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) WHEN (rt1.c5 IN ()) THEN ((rt1.c6)*(rt1.c4)) END, MIN(CASE rt1.c4  WHEN rt1.c4 THEN '' WHEN rt1.c1 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c3 END), TOTAL(0.4301425402087208) OVER (), COUNT(MIN(TRIM(rt1.c4))) FROM rt1 WHERE ((('-1723171465')|(NULL)) COLLATE RTRIM) ORDER BY ((((rt1.c3)AND(rt1.c4))) BETWEEN (LIKELIHOOD(DISTINCT rt1.c0, 0.34630853858671606)) AND (CASE rt1.c6  WHEN rt1.c6 THEN rt1.c1 END));SELECT ALL SUM(((rt1.c3)*(rt1.c6))) OVER (), ((rt1.c0 IN ()) IN ()), (- (rt1.c1)) COLLATE RTRIM FROM rt1; -- 0ms;
SELECT DISTINCT SUM((NOT (rt1.c3))) COLLATE NOCASE FROM rt1 WHERE ('%J') LIMIT 245790524; -- 0ms;
SELECT DISTINCT (((((((('0.853979536292258')OR(rt1.c1 COLLATE RTRIM)))OR((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c4))))))OR(((((rt1.c1)AND(x'')))AND(rt1.c6)))))AND(((rt1.c0) BETWEEN (rt1.c6) AND (rt1.c1)))), (((((rt1.c6) NOT NULL)))<(((('349227728') IS TRUE)))), ((rt1.c1 COLLATE RTRIM) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt1 ORDER BY ((rt1.c5 COLLATE RTRIM) BETWEEN (((((rt1.c5)AND(rt1.c3)))AND(rt1.c3))) AND (((rt1.c2)<(rt1.c3)))), (rt1.c4 COLLATE BINARY IN ()) ASC; -- 0ms;
SELECT ALL rt1.c1 FROM rt1; -- 0ms;
SELECT ALL (- (rt1.c1)) FROM rt1 WHERE ((((('') NOT BETWEEN ('1453919965') AND (NULL))) NOT BETWEEN ((((0.34085861233958425, NULL, x''))!=((NULL, 0.8502565043786648, NULL)))) AND (CASE 0.04988154985916182  WHEN NULL THEN '.CC_' WHEN 0.2096148978445359 THEN 'Gx' WHEN 0.8365413667622512 THEN 0.38231291644345466 WHEN '0.9843633055311223' THEN '834364333' WHEN 0.6966080693382716 THEN NULL END))); -- 0ms;
SELECT ALL ((((-9.332535E8)OR(((rt1.c6)GLOB(rt1.c1)))))AND(((rt1.c1)|(NULL)))) FROM rt1 WHERE ((((+ (NULL)))<>(0.7958268111028186 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (- (CAST(rt1.c3 AS INTEGER))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c5)+(rt1.c5))) NOT BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND (((rt1.c0) IS TRUE))), (((((rt1.c0)OR(rt1.c6)))OR(rt1.c2)) IN (((rt1.c3)<(rt1.c3)))), TOTAL(rt1.c2) OVER ( ORDER BY (((CAST(rt1.c0 AS NUMERIC)))>=((CASE rt1.c6  WHEN rt1.c6 THEN rt1.c6 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c4 THEN rt1.c0 END))) DESC) FROM rt1 LIMIT 2018763679; -- 0ms;
SELECT DISTINCT (((rt1.c5, rt1.c1, rt1.c0)) NOT BETWEEN (((+ (rt1.c2)), LENGTH(rt1.c5), (((rt1.c6)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c5))))) AND ((((rt1.c6) NOT BETWEEN (rt1.c2) AND (rt1.c4)), (((rt1.c0)) BETWEEN ((rt1.c5)) AND ((rt1.c5))), ((rt1.c1)>=(rt1.c5))))), UPPER((((rt1.c2, rt1.c4, rt1.c4)) NOT BETWEEN ((rt1.c6, rt1.c5, rt1.c1)) AND ((rt1.c4, rt1.c3, rt1.c4)))), (rt1.c5 IN (((rt1.c5)-('i')), '''(' COLLATE NOCASE)) FROM rt1 WHERE (CAST(0.7026753128270495 COLLATE BINARY AS TEXT)) ORDER BY (~ ((((rt1.c1, rt1.c6, rt1.c0)) BETWEEN ((rt1.c3, rt1.c0, rt1.c4)) AND ((rt1.c4, rt1.c6, rt1.c1))))) ASC; -- 0ms;
SELECT DISTINCT ((((((rt1.c1) ISNULL))OR(CASE rt1.c4  WHEN rt1.c1 THEN rt1.c3 END)))AND(((rt1.c3) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) FROM rt1 WHERE ((((('728061828') IS TRUE))*((('-1794519928') IS TRUE)))); -- 0ms;
SELECT CASE (~ (rt1.c3))  WHEN rt1.c0 COLLATE NOCASE THEN ((((rt1.c3)OR(rt1.c4)))AND(rt1.c1)) ELSE ((rt1.c5)>(rt1.c1)) END, ((rt1.c0 COLLATE RTRIM) IS TRUE), ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c1))) BETWEEN (((rt1.c0)|(rt1.c3))) AND (((rt1.c2)%(rt1.c2)))), CAST(rt1.c4 COLLATE BINARY AS NUMERIC), ((((rt1.c1)/(rt1.c3)))GLOB(((rt1.c2)>=(rt1.c6)))) FROM rt1 UNION SELECT DISTINCT (((- (rt1.c5))) BETWEEN (CAST(rt1.c1 AS TEXT)) AND (((rt1.c1) IS TRUE))), ((rt1.c4)+(json_extract(rt1.c0, rt1.c0, rt1.c4, rt1.c6))), ((rt1.c1) BETWEEN (CASE rt1.c1  WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c2 END) AND (rt1.c1)), CAST((rt1.c1 IN ()) AS BLOB), (((UNLIKELY(DISTINCT rt1.c1), ((rt1.c0)|(rt1.c1)), ((rt1.c6)IS(rt1.c0)), ((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c2)), ((rt1.c6) NOT NULL)))<=(((rt1.c5 IN ()), rt1.c3 COLLATE NOCASE, ((rt1.c2)<<(rt1.c3)), ((rt1.c1) ISNULL), ((rt1.c4) ISNULL)))) FROM rt1;SELECT DISTINCT ((SUM(rt1.c4)) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c6) NOTNULL)))<=((MIN('-1090115380')))) FROM rt1; -- 0ms;
SELECT DISTINCT AVG(x'') COLLATE RTRIM, ((((rt1.c3) NOT BETWEEN ('0.42205969995091175') AND (rt1.c2)))IS NOT(rt1.c3)), LIKELIHOOD((~ (rt1.c2)), 0.6985995360903615) FROM rt1; -- 0ms;
SELECT COUNT(*) OVER () FROM rt1 WHERE ((NOT (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT AVG(LTRIM(rt1.c3, rt1.c4)), ((((CASE WHEN rt1.c6 THEN rt1.c3 ELSE rt1.c0 END)AND((((rt1.c6, rt1.c3, rt1.c5))==((rt1.c4, rt1.c6, rt1.c3))))))OR(CASE WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c3 THEN NULL END)), CAST(x'' AS BLOB) FROM rt1 WHERE (((((+ (NULL))))>=((((0.34792922954298255)>(NULL)))))) GROUP BY ((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt1.c2)) COLLATE BINARY, ((((((((((rt1.c4)AND(rt1.c6)))OR(rt1.c5)))OR(rt1.c6)))AND(rt1.c5)))>>((+ (rt1.c1)))), ((TRIM(DISTINCT rt1.c5)) NOTNULL) HAVING (rt1.c3 IN (HEX(rt1.c1), ((rt1.c5) ISNULL))); -- 0ms;
SELECT ((((CAST(rt1.c2 AS BLOB))OR('1827920462')))OR(CASE WHEN x'' THEN rt1.c2 END)), (((~ (rt1.c2)))|(((rt1.c0) ISNULL))), ((rt1.c4) NOT NULL) FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt1.c6)) THEN rt1.c3 ELSE (rt1.c1 IN (rt1.c3)) END FROM rt1; -- 0ms;
SELECT ALL NTILE((((rt1.c6 IN (rt1.c4)))*(CASE WHEN rt1.c4 THEN x'' ELSE rt1.c1 END))) OVER () FROM rt1;SELECT ALL (~ (0.6824982757595554)) FROM rt1; -- 0ms;
SELECT DISTINCT ((NOT (rt1.c1)) IN ()), RANK() OVER (), MIN(TYPEOF(rt1.c2)) FROM rt1 WHERE ((((('')OR(NULL)))|(x'94de'))); -- 0ms;
SELECT ((((rt1.c3 IN ()), TYPEOF(rt1.c2), CASE WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c2 END))!=((((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c6)), (+ (rt1.c1)), ((((rt1.c1)AND(rt1.c1)))OR(rt1.c1))))) FROM rt1 WHERE (CASE ((x'')-('t#'))  WHEN (((NULL, NULL, 0.4188763417987229))=((1398036831, 0.5594609649482699, x''))) THEN CASE WHEN NULL THEN 0.17875510602607847 END WHEN CASE WHEN '' THEN 1211931100 ELSE NULL END THEN '1683050570' WHEN CASE WHEN x'c764' THEN '-761692035' END THEN (('fn䝚Zb<?L') ISNULL) WHEN (NOT (NULL)) THEN (~ (0.924445686149178)) WHEN ((((0Xffffffffc20f989e)AND('331238914')))OR(x'')) THEN (((x''))<=((0.15237593659336357))) ELSE CAST(NULL AS INTEGER) END); -- 0ms;
SELECT DISTINCT COUNT(((rt1.c6) ISNULL)) OVER () FROM rt1 GROUP BY rt1.c1 LIMIT 8561102; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c2 AS BLOB)) BETWEEN (((rt1.c0)=('1132414142'))) AND (rt1.c6)) FROM rt1 GROUP BY TRIM(DISTINCT CAST(rt1.c6 AS TEXT)), NULL, load_extension(DATETIME(rt1.c5, rt1.c0, rt1.c4), CASE WHEN 0.2818424134174067 THEN rt1.c5 END);SELECT ALL '-1023806236', SUM((NOT (rt1.c2))) OVER (), CAST(CAST(rt1.c0 AS INTEGER) AS BLOB), CAST(((((rt1.c5)OR(rt1.c3)))OR(rt1.c2)) AS BLOB), ((((((((((0.44648505669730876)OR(rt1.c6)))AND(rt1.c6)))OR(rt1.c1)))OR(0.8899768045547283))) NOT NULL) FROM rt1 WHERE (((UNICODE('x6k}')) ISNULL)); -- 0ms;
SELECT ALL LEAD(-1962658587, (((rt1.c0)) BETWEEN ((rt1.c3)) AND ((rt1.c3))) COLLATE NOCASE, (NOT (((rt1.c2)GLOB(rt1.c2))))) OVER () FROM rt1; -- 0ms;
SELECT rt1.c0 COLLATE RTRIM, CASE CAST(rt1.c6 AS TEXT)  WHEN ((rt1.c5) IS TRUE) THEN 'ﴵq%*9' END, ((((((((rt1.c6 COLLATE BINARY)AND((rt1.c1 IN ()))))AND(((rt1.c3)=(rt1.c5)))))OR((- (rt1.c1)))))OR((((rt1.c5)) BETWEEN ((rt1.c0)) AND ((rt1.c4))))) FROM rt1 UNION SELECT DISTINCT AVG((((rt1.c6)) BETWEEN ((rt1.c2)) AND ((rt1.c5)))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), rt1.c5, (- (rt1.c6)) COLLATE RTRIM FROM rt1 WHERE (HEX(DISTINCT CASE '-2041506356'  WHEN NULL THEN x'' WHEN x'b0f4' THEN 0.02381698956714884 WHEN NULL THEN 0.9365266601278224 ELSE 1.905799151E9 END)) GROUP BY x'' HAVING rt1.c3; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c2 END)<>(((NULL)*(rt1.c5)))), ((rt1.c3) NOTNULL) COLLATE RTRIM, rt1.c0 FROM rt1 WHERE (((((((NULL)OR('1+6')))AND('-482118772'))) BETWEEN (((x'') BETWEEN (-1965999315) AND (NULL))) AND (LIKELY(DISTINCT 0.8858672097127542)))) LIMIT -144897668 OFFSET -329186078; -- 1ms;
SELECT DISTINCT ((NULLIF(rt1.c4, rt1.c5))GLOB(rt1.c6 COLLATE NOCASE)), (((rt1.c3, rt1.c6, rt1.c3)) NOT BETWEEN ((((rt1.c4)%(rt1.c0)), CAST(rt1.c2 AS REAL), (rt1.c2 IN (rt1.c6)))) AND (((~ (0x191816b1)), CASE WHEN rt1.c4 THEN rt1.c2 END, NULL))), COUNT(((((rt1.c6)OR(rt1.c5)))OR(rt1.c6))) OVER () FROM rt1 LIMIT -1479895721; -- 0ms;
SELECT ALL CAST((~ (rt1.c3)) AS TEXT) FROM rt1 WHERE ((((((0.7457377230153701 IN ()))OR(LIKELIHOOD(0Xffffffffe9215181, 0.449412253983151))))AND(-538479801 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT rt1.c3 FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((NULL)>(rt1.c5)) AS BLOB) FROM rt1 GROUP BY ((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c0)) COLLATE NOCASE, UPPER(rt1.c1 COLLATE BINARY), rt1.c1, rt1.c6, CAST(rt1.c4 AS BLOB) COLLATE BINARY COLLATE NOCASE HAVING ((UNLIKELY(DISTINCT rt1.c1)) ISNULL); -- 0ms;
SELECT DISTINCT rt1.c2, ((((rt1.c1)<(NULL)))<>(((((rt1.c3)AND(rt1.c6)))AND(0.5496600047988315)))), SUM((+ (rt1.c4))) OVER () FROM rt1 WHERE ((((0.43643811808946276)) BETWEEN (((+ (x'')))) AND ((((NULL)!=(NULL)))))); -- 1ms;
SELECT (((x''))>((x''))) COLLATE BINARY FROM rt1 WHERE (((((0.13614571387559005)OR(CASE WHEN NULL THEN 'z' WHEN 1.738671804E9 THEN x'' WHEN 'N\珀{2.xॼ&' THEN NULL ELSE x'9b00' END)))AND((('')*(x'744e'))))); -- 0ms;
SELECT CASE WHEN ((rt1.c1)|(rt1.c4)) THEN (rt1.c4 IN (rt1.c5)) WHEN ((rt1.c4) BETWEEN (rt1.c5) AND (rt1.c0)) THEN ((rt1.c1) NOT NULL) WHEN CASE WHEN x'' THEN rt1.c0 END THEN ((rt1.c6)LIKE(rt1.c0)) END FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2)AND(rt1.c6)) IN ()) FROM rt1 ORDER BY '' ASC; -- 0ms;
SELECT ALL CAST((NOT (rt1.c2)) AS NUMERIC) FROM rt1 ORDER BY ((rt1.c4)==(rt1.c4)) COLLATE RTRIM; -- 0ms;
SELECT ALL MAX(((rt1.c1) BETWEEN (rt1.c5) AND (rt1.c3))), rt1.c4, ((((((rt1.c5)AND(0.2166346740565629)))AND(rt1.c3)))<(((rt1.c1)>>(rt1.c5)))) FROM rt1 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN (0.4545071681459508) AND (0.2747998066904951 COLLATE RTRIM))); -- 0ms;
SELECT (NOT ('189937771')), 0.9849395496254626 COLLATE RTRIM, ((((rt1.c3 COLLATE BINARY)AND(((rt1.c5) NOTNULL))))AND(((x'') IS TRUE))) FROM rt1 WHERE ((((x'afbda754')) BETWEEN (((('730610149')LIKE(0xffffffff865115cc)))) AND (((NULL IN ()))))); -- 1ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (+ ((rt1.c4 IN ())))) OVER () FROM rt1 WHERE (((((NULL) BETWEEN (x'') AND (x'63ea')))*((x'' IN (0.0813953354548167))))); -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c4)))) AND ((((rt1.c0)*(rt1.c2))))) FROM rt1; -- 0ms;
SELECT DISTINCT (- (((rt1.c1)<<(NULL)))), CASE WHEN load_extension(rt1.c6) THEN rt1.c3 END, (rt1.c3 IN ()) COLLATE BINARY FROM rt1 LIMIT -1536263582 OFFSET 1090713942;SELECT DISTINCT (NOT (((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c6)))) FROM rt1 LIMIT 173801704; -- 0ms;
SELECT DISTINCT CASE CASE rt1.c3  WHEN rt1.c5 THEN rt1.c4 ELSE x'' END  WHEN ((rt1.c2) NOT BETWEEN ('') AND ('391067356')) THEN rt1.c5 ELSE ((rt1.c6)||(rt1.c0)) END, ((CASE rt1.c4  WHEN rt1.c5 THEN x'' WHEN x'' THEN rt1.c6 WHEN rt1.c0 THEN rt1.c3 END) NOT BETWEEN (((rt1.c6)>>('P6'))) AND ((+ (x'')))), (((((rt1.c1)OR(rt1.c3)))AND(rt1.c1)) IN ()) FROM rt1 WHERE (CASE WHEN CAST(638550623 AS NUMERIC) THEN NULL WHEN (~ (-144518849)) THEN ((NULL)IS(NULL)) WHEN CASE -1.046074092E9  WHEN NULL THEN NULL WHEN 0.9396966895658875 THEN NULL WHEN 't8.*' THEN 0.47129145509583437 ELSE '*v\r_宎Sg' END THEN x'' ELSE ((0.4142537952084643) BETWEEN (x'') AND (-995795524)) END) GROUP BY ((((rt1.c5) NOT BETWEEN (rt1.c5) AND (rt1.c2))) NOT NULL); -- 0ms;
SELECT DISTINCT (- (((rt1.c0) NOT BETWEEN (rt1.c3) AND (rt1.c2)))) FROM rt1 WHERE ((((+ ('-1003267411')))AND(((((((((((((((((0.41896499793392694)OR(x'')))AND(0x3a5669d6)))AND(x'')))OR(x'56de')))OR(NULL)))AND('bh8f<')))AND('0.37369094849309836')))OR('-1402076813'))))) ORDER BY ((((- (rt1.c6)), CASE rt1.c4  WHEN NULL THEN rt1.c4 WHEN NULL THEN rt1.c3 WHEN rt1.c3 THEN rt1.c1 ELSE rt1.c2 END, (~ (rt1.c4)), ((rt1.c5) NOT NULL), ((rt1.c4) NOTNULL)))<=((((rt1.c4)OR(NULL)), ((rt1.c3) BETWEEN (rt1.c2) AND (rt1.c6)), (+ (rt1.c5)), NULL, UPPER(DISTINCT rt1.c1)))) DESC; -- 0ms;
SELECT ((((rt1.c1)>(rt1.c1)))<=(x'')) FROM rt1 WHERE ((((CAST(NULL AS REAL), (NULL IN ()), NULL))>((x'58db', ((x'') NOT BETWEEN ('~3 ') AND ('2055677229')), (('0.3298974145576141') BETWEEN (x'33554c28') AND (x'6bdf')))))); -- 0ms;
SELECT DISTINCT (((rt1.c6) NOTNULL) IN ()) FROM rt1; -- 0ms;
SELECT ALL ((((0.09743715145125642) IS FALSE)) BETWEEN (rt1.c6) AND (((rt1.c6)<>(rt1.c4)))) FROM rt1 WHERE (((((NULL) IS FALSE)) NOT BETWEEN (((x'10945db2') NOTNULL)) AND ((('1146497813') BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT ALL ((NULLIF(rt1.c6, rt1.c3))GLOB((- (rt1.c0)))), ((rt1.c3)|(rt1.c3)) COLLATE RTRIM, (NULL IN ()), (NULL IN ()), json_remove(rt1.c2, '') COLLATE BINARY FROM rt1;SELECT DISTINCT CASE (rt1.c0 IN ())  WHEN GROUP_CONCAT(rt1.c5) THEN 0.4015114167383109 WHEN (~ (rt1.c1)) THEN (((rt1.c4)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c5))) WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c2 THEN rt1.c1 WHEN rt1.c6 THEN rt1.c0 END THEN (rt1.c2 IN ()) END FROM rt1 LIMIT 50285925; -- 0ms;
SELECT ((rt1.c0) NOTNULL) FROM rt1 WHERE ((((x'bf9a896e' IN ()))=(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT (((CASE rt1.c5  WHEN rt1.c6 THEN rt1.c4 END, (NOT (rt1.c3)), ((rt1.c2)=(rt1.c5))))<((((rt1.c5)>>(rt1.c0)), rt1.c2, ((rt1.c0) BETWEEN (rt1.c6) AND (rt1.c1))))), 0.6559110981911815 COLLATE RTRIM, json_extract(((rt1.c0)>>(rt1.c0)), ((rt1.c3)&(0X70cff2af))) FROM rt1 GROUP BY (((((rt1.c4))>((rt1.c1))))=('437218281')) HAVING CAST(((((((((rt1.c1)AND(rt1.c5)))OR(x'')))AND(NULL)))OR(rt1.c3)) AS INTEGER) LIMIT 76282697; -- 0ms;
SELECT DISTINCT (NOT (((rt1.c2) NOTNULL))) FROM rt1; -- 0ms;
SELECT DISTINCT MAX(CASE WHEN rt1.c3 THEN rt1.c6 END) FROM rt1 WHERE ((((((('')AND('2䱡mCZ zf')))OR(NULL)))<<(((((0.2788428396864162)OR(NULL)))AND('Uf&'))))); -- 0ms;
SELECT ALL SUM(((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c2))) FILTER(WHERE CAST(((rt1.c5)%(rt1.c4)) AS REAL)) OVER (), DENSE_RANK() OVER (), CASE (((rt1.c3)) BETWEEN ((rt1.c4)) AND ((rt1.c5)))  WHEN ((((rt1.c5)AND(rt1.c0)))AND(rt1.c0)) THEN ((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt1.c0)) END FROM rt1 WHERE (((((json_array_length(NULL, x'5a9d'))OR(CAST('-11808521' AS TEXT))))OR('-621417451' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((rt1.c5) NOTNULL) FROM rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c4 AS REAL)) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT (COUNT(rt1.c1) IN ()) FROM rt1 WHERE (CASE WHEN CHANGES() THEN (((x'', x'', 0.44856753039665265)) BETWEEN (('1783474151', 1248213211, x'')) AND ((-2064198146, NULL, NULL))) END) GROUP BY CAST(((rt1.c5) NOTNULL) AS NUMERIC) ORDER BY (((((rt1.c3)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c3))))LIKE(((rt1.c1) NOT BETWEEN (0.33413601890886024) AND (rt1.c3)))) DESC; -- 1ms;
SELECT DISTINCT NULL FROM rt1 LIMIT 512336330; -- 0ms;
SELECT ABS(DISTINCT ((rt1.c3)IS(rt1.c1))) FROM rt1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), RANK() OVER (), rt1.c4 FROM rt1 WHERE (CASE WHEN (('1742865355')>(NULL)) THEN '1231384635' ELSE (('#^v0')||(x'2f91')) END); -- 0ms;
SELECT FIRST_VALUE(LAST_INSERT_ROWID()) OVER () FROM rt1 WHERE ((CASE x''  WHEN NULL THEN x'' ELSE NULL END IN ())) LIMIT -1677478631; -- 0ms;
SELECT ALL rt1.c6 COLLATE NOCASE COLLATE RTRIM FROM rt1 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((x''))))<=(HEX(x'')))); -- 0ms;
SELECT DISTINCT ((((rt1.c3)IS NOT(rt1.c5)))IS(((rt1.c4) BETWEEN (rt1.c4) AND (rt1.c3)))), TOTAL(CAST(rt1.c3 AS INTEGER)), ((IFNULL(DISTINCT rt1.c0, rt1.c4)) IS TRUE), CASE ((rt1.c5)OR(1789214745))  WHEN ((rt1.c2)>(rt1.c6)) THEN CASE WHEN rt1.c2 THEN rt1.c4 ELSE rt1.c3 END WHEN ((rt1.c4)<<(x'')) THEN ((rt1.c3)GLOB(rt1.c1)) WHEN ((rt1.c5)=(rt1.c2)) THEN 0.3109341919300015 COLLATE NOCASE END, SQLITE_VERSION() FROM rt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (((- (rt1.c2)))<((((rt1.c0, rt1.c6, rt1.c0))==((rt1.c4, rt1.c5, rt1.c0))))), ((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c2 ELSE rt1.c3 END)GLOB(((rt1.c3)IS NOT(rt1.c3)))), CASE WHEN UNLIKELY(rt1.c5) THEN (rt1.c6 IN ()) END, ((rt1.c2) ISNULL)) FROM rt1 WHERE (CASE WHEN LIKELIHOOD(-1.348562175E9, 0.5726250526639018) THEN (x'' IN ()) END) ORDER BY ((((0.7701889254735391) BETWEEN (rt1.c1) AND (rt1.c3)))!=(LIKE('', NULL, 't')))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST((+ (rt1.c3)) AS REAL), rt1.c5, CASE WHEN ((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c3)) THEN (- (rt1.c2)) END, (((~ (rt1.c3))) NOT NULL), MAX((rt1.c4 IN ())) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3)) NOT BETWEEN ((((rt1.c6)IS(rt1.c5)))) AND ((rt1.c3))) FROM rt1; -- 0ms;
SELECT CASE ((rt1.c2)IS(rt1.c1))  WHEN (((rt1.c1))>((0.5942689228070771))) THEN ((0.4675285887532783)-('5S')) ELSE ((rt1.c3) IS TRUE) END, CASE WHEN ((rt1.c1) NOTNULL) THEN (rt1.c5 IN (x'f990')) WHEN NULL THEN rt1.c3 COLLATE RTRIM WHEN rt1.c3 COLLATE RTRIM THEN TOTAL(rt1.c0) END, rt1.c0 FROM rt1 LIMIT -353706879 OFFSET -993233152; -- 0ms;
SELECT DISTINCT AVG(((((rt1.c1)AND(rt1.c5)))AND(rt1.c1))) OVER (), rt1.c6, COUNT(rt1.c5) FROM rt1 WHERE (CASE ((x'')LIKE(0xffffffffa36e6940))  WHEN (((('1563478107')AND(0X7fffffffffffffff)))AND(0.40676868001704647)) THEN (((('%H')AND(0.5416091011442588)))AND('1438644865')) ELSE LTRIM('1531467047', 0.9593495174058964) END); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c3) BETWEEN (rt1.c5) AND (rt1.c6)))OR((rt1.c2 IN ()))))OR(((rt1.c4) BETWEEN (rt1.c4) AND (x'4e6e')))))OR(rt1.c3 COLLATE BINARY)))AND(COUNT(*))) FROM rt1 WHERE (((((('') IS FALSE)))<>((0.9267869490719576 COLLATE NOCASE)))); -- 0ms;
SELECT ((CAST(rt1.c0 AS BLOB))OR(NULLIF(rt1.c3, rt1.c5))), x'' COLLATE RTRIM, ((((((0.7332261725375449))>((NULL))), CASE rt1.c6  WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c0 END, ((0.03845612334758142) NOT BETWEEN (0.3831063391044598) AND (rt1.c2)), (rt1.c0 IN (rt1.c6, rt1.c5)), 0xffffffffb4275396))>((((0.10538220152851296) IS FALSE), (0.751526161388887 IN ()), CAST(rt1.c4 AS REAL), LIKELIHOOD(rt1.c5, 0.28486595825023686), ((rt1.c1) IS TRUE)))) FROM rt1; -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN ((-482118772)) AND ((0.3005564454523765))) FROM rt1 WHERE (UNLIKELY(CAST('' AS NUMERIC))); -- 0ms;
SELECT DISTINCT (((x'0311')) NOT BETWEEN ((((rt1.c1)=(rt1.c6)))) AND ((x'2986'))) FROM rt1 WHERE (((TRIM(DISTINCT 0xffffffffd1ea1869, x'edbb'))>>(((((x'')OR(x'')))AND(NULL))))) GROUP BY CAST((((rt1.c3))<((rt1.c0))) AS REAL) HAVING ((CAST(rt1.c3 AS BLOB))>=(((rt1.c1) IS TRUE))); -- 1ms;
SELECT CUME_DIST() OVER () FROM rt1 WHERE ((NOT (0.5996229224296551)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ (1418445249)) FROM rt1 ORDER BY TRIM(DISTINCT (rt1.c2 IN ()), (+ (rt1.c4)))  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((((((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt1.c2)))OR((((rt1.c6)) BETWEEN ((rt1.c3)) AND ((rt1.c1))))))OR((((('uYZQ2e')AND(rt1.c4)))OR(rt1.c3)))))AND(LAST_INSERT_ROWID())))OR(CASE rt1.c1  WHEN 0.39915919187661364 THEN 0.48405050893119417 ELSE '' END)) ASC  NULLS FIRST, ((((((rt1.c0) NOT BETWEEN (rt1.c6) AND (rt1.c1)))AND(((rt1.c5)&(rt1.c5)))))AND(((((((((rt1.c0)AND(rt1.c5)))AND(rt1.c3)))OR(rt1.c3)))AND(rt1.c2)))) DESC  NULLS LAST, ((TOTAL_CHANGES()) BETWEEN (((rt1.c4)IS(rt1.c2))) AND (rt1.c2))  NULLS FIRST), rt1.c2, ((((((rt1.c4, rt1.c0, rt1.c6))>((0.5331881094722554, rt1.c1, rt1.c6)))))<(((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c5)))))), (((rt1.c5 IN ())) BETWEEN ((~ (x''))) AND (CASE rt1.c0  WHEN rt1.c1 THEN NULL WHEN rt1.c1 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c6 END)), (COUNT(*) IN (CAST(rt1.c1 AS INTEGER))), TYPEOF(CASE rt1.c2  WHEN rt1.c0 THEN rt1.c4 END), CAST(((rt1.c3)OR(rt1.c3)) AS BLOB) FROM rt1 WHERE ((((NULL)) BETWEEN (((NOT ('-1844470087')))) AND ((((NULL) NOT BETWEEN ('-762819313') AND (0Xffffffff9fd1b536)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0)))<>(NULL)) FROM rt1 WHERE (((LTRIM(NULL)) IS TRUE)); -- 0ms;
SELECT ALL CASE ((rt1.c2)IS(rt1.c4))  WHEN (((rt1.c6))<>((rt1.c4))) THEN ((rt1.c6) BETWEEN (rt1.c4) AND (rt1.c0)) WHEN COUNT(rt1.c5) THEN (rt1.c4 IN ()) WHEN CASE NULL  WHEN rt1.c4 THEN rt1.c3 ELSE rt1.c6 END THEN SUM(rt1.c2) ELSE rt1.c0 COLLATE BINARY END, TOTAL(CASE rt1.c6  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c0 END) OVER (), 0.6756878372230782 FROM rt1; -- 0ms;
SELECT ALL x'' COLLATE RTRIM, TYPEOF(DISTINCT ABS(DISTINCT rt1.c4)), (((rt1.c4, rt1.c2, rt1.c1)) NOT BETWEEN ((0.35911559228666523, rt1.c4 COLLATE NOCASE, rt1.c4)) AND (((((rt1.c5))<((rt1.c4))), (rt1.c0 IN ()), ((rt1.c0) ISNULL)))) FROM rt1; -- 0ms;
SELECT ALL (NOT (rt1.c3 COLLATE RTRIM)), AVG(((rt1.c3) NOT NULL)), ROW_NUMBER() OVER () FROM rt1 GROUP BY CASE WHEN ((rt1.c5)>(rt1.c3)) THEN CASE rt1.c1  WHEN rt1.c5 THEN rt1.c0 ELSE rt1.c0 END WHEN -1841380180 COLLATE RTRIM THEN (rt1.c0 IN ()) WHEN (rt1.c3 IN ()) THEN '0' END HAVING (((rt1.c6) BETWEEN (rt1.c1) AND (rt1.c6)) IN ()); -- 0ms;
SELECT CAST(((rt1.c0)-(rt1.c4)) AS BLOB) FROM rt1 WHERE (0xffffffffa3ab37e2); -- 0ms;
SELECT ALL ((CASE rt1.c6  WHEN rt1.c5 THEN rt1.c1 ELSE '.y' END)>>((rt1.c6 IN ()))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c4)<<(rt1.c2)))<>(CASE rt1.c4  WHEN rt1.c6 THEN rt1.c1 ELSE rt1.c4 END)) FROM rt1; -- 0ms;
SELECT DISTINCT CASE ((((0.3171911520942816)OR(rt1.c5)))AND(rt1.c2))  WHEN ((rt1.c1) IS FALSE) THEN ((rt1.c3) NOT BETWEEN (rt1.c1) AND (rt1.c5)) ELSE ((((((((rt1.c4)OR(rt1.c4)))AND(rt1.c0)))AND(rt1.c2)))OR(rt1.c1)) END FROM rt1 LIMIT 475978530 OFFSET -159286550; -- 0ms;
SELECT ALL TOTAL(0.26773553501236247), CASE WHEN ((((rt1.c3)OR('שּ⪣|[')))OR(rt1.c3)) THEN (NULL IN (rt1.c5, rt1.c1)) END, ((rt1.c1 COLLATE NOCASE)-(NULL)) FROM rt1 WHERE (((((MIN(x'', '-1541107403'))AND('Cխ' COLLATE RTRIM)))OR(((0X5354595f) NOT BETWEEN (0.9589265881701222) AND (x'2b50b95e'))))) ORDER BY MIN(x'', ((rt1.c5) ISNULL), '1537772581', ((0Xffffffffe8b3daac) NOT NULL)) ASC  NULLS FIRST; -- 3ms;
SELECT DISTINCT ((CAST(rt1.c6 AS TEXT)) IS FALSE) FROM rt1; -- 0ms;
SELECT DISTINCT (((LTRIM(rt1.c2, rt1.c0)))<=(((rt1.c5 IN ())))) FROM rt1 WHERE (((((0x2bdfd751) NOT BETWEEN (x'468a') AND (NULL)))%(CAST(NULL AS TEXT)))); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt1.c6) NOTNULL) THEN COUNT(rt1.c3) ELSE rt1.c4 END, (~ ((~ (rt1.c2)))), (((rt1.c0 IN ()))<=((0.4149068450820633 IN (rt1.c3, rt1.c0)))), ((rt1.c2 COLLATE RTRIM) NOTNULL), (((rt1.c5)>(rt1.c1)) IN (CASE rt1.c3  WHEN rt1.c1 THEN rt1.c3 ELSE rt1.c1 END)) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4) IS TRUE) IN (IFNULL(rt1.c6, 0.44233864605297035))), COUNT(*), ((((LOWER(DISTINCT rt1.c6))AND((NOT (rt1.c0)))))AND(TYPEOF(DISTINCT rt1.c0))) FROM rt1 WHERE (CASE '119305853' COLLATE RTRIM  WHEN ((NULL)%(x'')) THEN IFNULL(DISTINCT 0.3220701375026406, x'd947') END) GROUP BY CASE CASE WHEN rt1.c5 THEN rt1.c4 ELSE rt1.c6 END  WHEN CASE rt1.c1  WHEN rt1.c5 THEN ')*<R' WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c5 THEN rt1.c4 END THEN (((rt1.c2, rt1.c4, rt1.c4)) BETWEEN ((rt1.c4, rt1.c6, rt1.c0)) AND ((rt1.c4, rt1.c5, rt1.c0))) WHEN (('0')>>(rt1.c2)) THEN (((rt1.c0))=((x''))) WHEN (((rt1.c6)) BETWEEN ((rt1.c5)) AND ((rt1.c6))) THEN rt1.c4 END, (+ ((NOT (rt1.c2)))), ((((rt1.c4) ISNULL))|(CAST(rt1.c1 AS INTEGER))) HAVING ((((rt1.c0)|(rt1.c3)))AND((- (rt1.c3)))); -- 0ms;
SELECT ALL rt1.c5 FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt1.c6, rt1.c6)) BETWEEN ((CAST(rt1.c0 AS TEXT), (rt1.c3 IN ()), LTRIM(rt1.c0))) AND (((rt1.c2 IN ()), CASE WHEN rt1.c0 THEN rt1.c3 END, (rt1.c4 IN (rt1.c4))))), (- ((x'' IN ()))), SUM((- (rt1.c6))) FROM rt1; -- 0ms;
SELECT ALL ((CAST(rt1.c3 AS BLOB)) BETWEEN (rt1.c1) AND (((rt1.c6)+(rt1.c4)))) FROM rt1 WHERE ((((-1.05447406E8) NOT NULL) IN (CASE WHEN NULL THEN NULL ELSE '917474027' END, (((0.989530005989635)) NOT BETWEEN ((0.7590183176506047)) AND ((NULL)))))); -- 0ms;
SELECT ALL CAST((((rt1.c5))<((rt1.c0))) AS INTEGER) FROM rt1; -- 0ms;
SELECT (~ (((0.4135936394167873)>=(rt1.c4)))) FROM rt1 NOT INDEXED GROUP BY ((rt1.c3)IS(((((((((rt1.c2)AND(rt1.c6)))AND(rt1.c6)))AND(rt1.c2)))OR(rt1.c5)))) HAVING NULL; -- 0ms;
SELECT ALL (((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)) IN (((rt1.c0) IS FALSE))), (((rt1.c6)) BETWEEN ((((((((((rt1.c2)OR(rt1.c1)))OR(rt1.c6)))OR(rt1.c6)))AND(rt1.c6)))) AND ((rt1.c6))), (~ ('992409160')) FROM rt1; -- 0ms;
SELECT DISTINCT (NULL IN (CASE WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c6 END, 0.23301996722629825)) FROM rt1 WHERE (((((x'da39') NOT BETWEEN ('-451334368') AND ('')))||(((NULL) ISNULL)))) ORDER BY ((((rt1.c3 IN (rt1.c6))))<=((rt1.c2 COLLATE RTRIM))); -- 0ms;
SELECT ALL rt1.c5 FROM rt1 WHERE (((CASE NULL  WHEN 1734481773 THEN NULL END)|((- (''))))) ORDER BY ((CAST(rt1.c3 AS INTEGER)) IS TRUE) ASC  NULLS FIRST; -- 0ms;
SELECT ALL (((~ (NULL))) NOT BETWEEN (GROUP_CONCAT(rt1.c1)) AND (((0.9627090592321487) NOT BETWEEN (rt1.c1) AND (rt1.c0)))) FROM rt1; -- 0ms;
SELECT (+ (CAST(rt1.c3 AS REAL))) FROM rt1 WHERE (((0Xffffffff955e432c) NOTNULL) COLLATE BINARY) GROUP BY json_quote(((rt1.c2) BETWEEN (rt1.c5) AND (rt1.c2))), CAST(((((((((((((rt1.c2)OR(rt1.c6)))AND(rt1.c1)))OR(rt1.c4)))AND(rt1.c3)))OR(rt1.c4)))AND(rt1.c2)) AS BLOB), (NOT (((rt1.c0) IS TRUE))) HAVING CASE WHEN (rt1.c2 IN ()) THEN ((rt1.c1)OR(rt1.c0)) WHEN (+ (rt1.c1)) THEN (rt1.c1 IN ()) WHEN ((((0.45999712829697714)OR(rt1.c5)))OR(rt1.c6)) THEN rt1.c2 COLLATE NOCASE ELSE (NOT (0.6292819236857145)) END ORDER BY ((((rt1.c2) BETWEEN (rt1.c4) AND (rt1.c1)))<>(((rt1.c1)<=(rt1.c6)))) ASC LIMIT -543950372; -- 0ms;
SELECT NTH_VALUE(((((rt1.c0) IS TRUE))|(((rt1.c3) IS FALSE))), ((rt1.c5)!=(rt1.c2)) COLLATE NOCASE) OVER () FROM rt1; -- 0ms;
SELECT ALL (+ (rt1.c3)) FROM rt1; -- 0ms;
SELECT (('n5') NOT BETWEEN (json_remove(rt1.c5, rt1.c2)) AND ((((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c4))))) FROM rt1 WHERE (((CASE WHEN NULL THEN NULL END)|((('q_RxCv')*(0Xffffffff9e42913f))))); -- 0ms;
SELECT ALL (rt1.c4 IN ()) COLLATE NOCASE FROM rt1; -- 0ms;
SELECT DISTINCT ((((((((((NULL)IS NOT(rt1.c3)))AND(CHANGES())))AND((((rt1.c5, rt1.c3, rt1.c5))==((rt1.c6, rt1.c2, 0xffffffff9f3d53de))))))AND(rt1.c4 COLLATE BINARY)))OR((((rt1.c4))<((rt1.c1))))), (((CASE WHEN rt1.c4 THEN rt1.c5 END))==((NULL))), ((((((rt1.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c5)))))>=((rt1.c4))) FROM rt1; -- 0ms;
SELECT ((CASE WHEN rt1.c1 THEN rt1.c6 ELSE rt1.c2 END)/(rt1.c6 COLLATE RTRIM)) FROM rt1 LIMIT 2110769232 OFFSET 736089937; -- 1ms;
SELECT (((((rt1.c6, rt1.c5, rt1.c0)) NOT BETWEEN ((x'', rt1.c2, rt1.c3)) AND ((rt1.c6, rt1.c0, rt1.c3)))) NOT NULL), GROUP_CONCAT(LIKELIHOOD(DISTINCT '492196132', 0.5661835524873988)) FILTER(WHERE ((rt1.c5) NOT BETWEEN (x'') AND (rt1.c0)) COLLATE NOCASE) OVER (), (rt1.c1 IN ()) COLLATE RTRIM FROM rt1 ORDER BY (('-1415880241') NOTNULL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt1.c1)OR(rt1.c2)))AND(rt1.c0)) COLLATE BINARY, COUNT(*) OVER (), ((rt1.c5 COLLATE RTRIM)AND(IFNULL(DISTINCT rt1.c6, rt1.c0))) FROM rt1 WHERE (((x'c3da')!=(0.7477279204292775)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((rt1.c0 IN ()))AND((rt1.c1 IN (rt1.c4, rt1.c5)))))OR(((rt1.c4)*(rt1.c6)))) FROM rt1 WHERE (((((0.9135294634569242)GLOB(''))) ISNULL)); -- 0ms;
SELECT DISTINCT CAST(((rt1.c5) NOTNULL) AS INTEGER) FROM rt1; -- 0ms;
SELECT DISTINCT rt1.c2, LAG(((((((rt1.c6) NOTNULL))OR(STRFTIME(rt1.c1, rt1.c0, rt1.c0))))OR(TRIM(DISTINCT rt1.c1, rt1.c6))), CAST(((rt1.c1) BETWEEN (rt1.c6) AND (rt1.c6)) AS REAL), rt1.c5) OVER (), ((('-1536263582' COLLATE RTRIM))==((CASE rt1.c4  WHEN rt1.c5 THEN rt1.c0 WHEN NULL THEN rt1.c5 WHEN rt1.c3 THEN rt1.c3 END))) FROM rt1 WHERE ((((0.5443523397882554)) BETWEEN ((x'1253')) AND ((SQLITE_COMPILEOPTION_GET(0.6036566285394694))))) LIMIT -802484947 OFFSET -1923489806; -- 0ms;
SELECT ((GROUP_CONCAT(rt1.c6))LIKE((0xffffffff9ef55192 IN (rt1.c5)))) FROM rt1 GROUP BY ((CAST(rt1.c3 AS TEXT))&(((rt1.c6)!=(rt1.c3)))) HAVING (((~ (rt1.c4)))<=(NULL)); -- 0ms;
SELECT CAST(((((((((rt1.c3)AND(rt1.c1)))AND('-803309713')))OR(x'82b6')))OR(rt1.c0)) AS REAL) FROM rt1 WHERE ((+ (((x'')/('1951295571'))))); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS REAL))<<(((rt1.c0)%(0xffffffffd81cf434)))) FROM rt1 WHERE (((((((((-1.965999315E9 COLLATE BINARY)AND(HEX(DISTINCT '-331330826'))))OR(((0.9835567060976126) NOT NULL))))OR(CAST(NULL AS INTEGER))))OR(json_quote(3.31238914E8)))); -- 0ms;
SELECT DISTINCT CASE WHEN rt1.c1 THEN -785128053 END, ((rt1.c1) NOT NULL), ((((((NULL)OR(rt1.c5)))AND(rt1.c6))) NOT BETWEEN (NULL) AND (json_type(rt1.c5))) FROM rt1 LIMIT -1424722342 OFFSET -943976661; -- 0ms;
SELECT DISTINCT SUM(CASE x'a756'  WHEN rt1.c4 THEN rt1.c3 END) FROM rt1 WHERE (x'' COLLATE BINARY); -- 0ms;
SELECT CASE WHEN json_quote(rt1.c2) THEN ((rt1.c6)/(rt1.c1)) WHEN ((rt1.c0) IS FALSE) THEN rt1.c3 WHEN CAST(rt1.c3 AS NUMERIC) THEN (rt1.c4 IN (rt1.c3)) ELSE CASE rt1.c1  WHEN rt1.c5 THEN rt1.c5 END END, (CAST(rt1.c2 AS TEXT) IN (TRIM(rt1.c4), (rt1.c6 IN (rt1.c4)))), ((CASE WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt1.c3 END) BETWEEN (CASE NULL  WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c3 THEN 0x622fe183 WHEN rt1.c0 THEN rt1.c2 END) AND (NULLIF(DISTINCT rt1.c5, rt1.c2))) FROM rt1; -- 0ms;
SELECT ALL ((CAST(0X14b2cf76 AS BLOB)) IS FALSE), GROUP_CONCAT(((rt1.c4) IS FALSE)) OVER (), ((((rt1.c2) NOT BETWEEN (rt1.c6) AND (rt1.c0))) ISNULL) FROM rt1; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0))) OVER ( RANGE BETWEEN (- (rt1.c1 COLLATE NOCASE)) PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1;SELECT DISTINCT LAST_VALUE(rt1.c6) OVER () FROM rt1 LIMIT 1745535687; -- 0ms;
SELECT rt1.c6, 'a玌L96Mḝ', CAST(0.8140834129438099 AS INTEGER) FROM rt1 WHERE ((('1543801095')==((+ (0.5603663570478786))))); -- 0ms;
SELECT ALL GROUP_CONCAT('-144518849' COLLATE BINARY) OVER ( ORDER BY ((((rt1.c3) IS TRUE)) NOT BETWEEN (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c3))) AND (((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c5))))  NULLS FIRST) FROM rt1 WHERE (CHAR(((-180787396) BETWEEN (NULL) AND (0.4690157658801759)), (('JD'',겟)콷{') IS TRUE), (0Xffffffffa46e7a62 IN ()))) GROUP BY rt1.c1 ORDER BY CAST(0.8248128710356046 COLLATE BINARY AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (CASE rt1.c6  WHEN rt1.c1 THEN rt1.c4 END IN ()), rt1.c2, ((COALESCE(rt1.c2, rt1.c5)) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) AND (((((rt1.c1)AND(rt1.c3)))AND(rt1.c2)))) FROM rt1; -- 0ms;
SELECT HEX(((rt1.c2) ISNULL)) FROM rt1; -- 0ms;
SELECT DISTINCT (1.905799151E9 IN ()) FROM rt1; -- 0ms;
SELECT ABS(DISTINCT (('') ISNULL)), (((CAST(rt1.c3 AS INTEGER)))<((((rt1.c0) NOT NULL)))), ((((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c6))) NOT NULL) FROM rt1; -- 0ms;
SELECT ((((rt1.c3) NOT NULL))|(((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c0)))) FROM rt1 LIMIT -2089394037 OFFSET 264781091; -- 0ms;
SELECT ALL FIRST_VALUE(CASE WHEN (((rt1.c5, rt1.c0, rt1.c4))>=((rt1.c0, rt1.c1, rt1.c4))) THEN LIKELY(NULL) WHEN NULL THEN TYPEOF(DISTINCT rt1.c6) WHEN ((((rt1.c6)OR(rt1.c1)))OR('3')) THEN rt1.c3 ELSE ((rt1.c5)GLOB(rt1.c4)) END) OVER () FROM rt1; -- 0ms;
SELECT GROUP_CONCAT(((rt1.c0) ISNULL)) FROM rt1 WHERE (CASE CAST(NULL AS REAL)  WHEN ((0.10008668465509574)<>('-1863161789')) THEN ((('''pﭹ', 0.7829315646791641, x'b04246f4', '~3 ', 0.8732518093443866)) BETWEEN ((NULL, x'', NULL, NULL, x'f028')) AND ((-3.25851212E8, NULL, NULL, 0x512b1770, '903*XO'))) ELSE CASE x''  WHEN x'' THEN 0X13604bdb WHEN '' THEN 'r冒' WHEN 'ڷ' THEN NULL END END); -- 0ms;
SELECT DISTINCT (((rt1.c1)) NOT BETWEEN (((rt1.c3 IN ()))) AND ((((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c0))))) FROM rt1; -- 1ms;
SELECT DISTINCT (GROUP_CONCAT(rt1.c3) IN ((((rt1.c5)) BETWEEN ((rt1.c3)) AND ((rt1.c6))))), LAG(rt1.c4, (((rt1.c0 IN (rt1.c5))) ISNULL), (CAST(rt1.c6 AS BLOB) IN ())) OVER ( RANGE BETWEEN  CURRENT ROW AND rt1.c3 FOLLOWING), (((+ (rt1.c4)))/(NULL)) FROM rt1 WHERE (((('0.5462721840908632', x'', '2X*', NULL, NULL))=((x'', NULL, -1169044139, '-307927889', x'01e0f20d'))) COLLATE BINARY);SELECT DISTINCT ((CAST(rt1.c4 AS REAL)) NOTNULL) FROM rt1 WHERE ((((('1322699765' COLLATE BINARY)AND((('Gl') NOT NULL))))AND((+ (NULL))))) ORDER BY ((rt1.c2 COLLATE BINARY) NOT BETWEEN (json_quote(rt1.c0)) AND (rt1.c4 COLLATE RTRIM)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), ((GROUP_CONCAT(rt1.c4)) BETWEEN (IFNULL(DISTINCT rt1.c5, rt1.c4)) AND ('>r')), (- (NULLIF(0.16365099716704734, rt1.c4))) FROM rt1 WHERE ((- ((('YD') NOT NULL)))); -- 0ms;
SELECT ((((CAST(rt1.c2 AS NUMERIC))AND(COUNT(rt1.c1))))AND(CAST(rt1.c6 AS BLOB))) FROM rt1 WHERE (CASE ((x'')>=(648034087))  WHEN (+ (0xffffffff9a62d14e)) THEN (NULL IN ()) ELSE CAST(0.08360540235986835 AS INTEGER) END) GROUP BY CASE rt1.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c4 END COLLATE BINARY LIMIT 1749816723 OFFSET -1019206782; -- 0ms;
SELECT DISTINCT 0.8416742708687605, (((((~ (NULL)))OR((NOT (rt1.c1)))))AND(CAST(rt1.c6 AS TEXT))), (((+ (rt1.c2)))>(COUNT(rt1.c5))) FROM rt1 WHERE ((((((0.024652161430505748)AND(NULL)))OR('2086425147')) IN ())) GROUP BY ((((((((CAST(rt1.c6 AS REAL))OR(((rt1.c1) IS FALSE))))AND(rt1.c6 COLLATE BINARY)))AND((rt1.c5 IN (rt1.c2)))))AND(((rt1.c5)IS(rt1.c1)))); -- 0ms;
SELECT CAST(rt1.c3 COLLATE BINARY AS NUMERIC), (((rt1.c0 IN ())) IS FALSE), DENSE_RANK() OVER () FROM rt1 WHERE (((((((0.5092655446798956)OR(0Xffffffffc346f5bc)))OR('Mg'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((rt1.c3))>=((rt1.c2))) IN (((0.2147987003631051)<(rt1.c1)), ((rt1.c0) ISNULL))), CAST(CASE WHEN rt1.c5 THEN rt1.c6 END AS INTEGER), rt1.c5, 0.47921193456621736, (+ (rt1.c0)) COLLATE BINARY COLLATE NOCASE FROM rt1 WHERE ((CAST(0.46047075129289383 AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT (x'' IN (((rt1.c3)/(rt1.c0)), MAX(rt1.c5))), 1.443531687E9, rtreenode(CAST(rt1.c0 AS TEXT), ((((((((rt1.c4)OR(rt1.c6)))AND(rt1.c5)))OR(rt1.c2)))AND(rt1.c4))) FROM rt1; -- 0ms;
SELECT CAST(((rt1.c5)IS(rt1.c4)) AS BLOB) FROM rt1 ORDER BY ((CAST(rt1.c4 AS BLOB))*(CAST(rt1.c0 AS REAL))) DESC  NULLS LAST, ((CAST(rt1.c3 AS NUMERIC)) BETWEEN (CAST(rt1.c5 AS BLOB)) AND (x'6132c053ec04')) ASC; -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY, MIN(ABS(DISTINCT rt1.c1)), ((((rt1.c6 IN ('NaN')), NULL, ((rt1.c3)>=(rt1.c3)), TOTAL_CHANGES(), CASE rt1.c5  WHEN rt1.c6 THEN rt1.c5 END))!=((AVG(NULL), 594384525 COLLATE RTRIM, ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c0)), CAST(rt1.c4 AS INTEGER), SUM(rt1.c3)))) FROM rt1; -- 0ms;
SELECT ALL RANK() OVER () FROM rt1 WHERE ((NOT ('MceDUL]' COLLATE RTRIM))); -- 0ms;
SELECT CASE WHEN TOTAL(rt1.c3) THEN 0X7fffffffffffffff WHEN (((rt1.c1)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) THEN ((((rt1.c4)OR(rt1.c4)))OR(rt1.c5)) WHEN TRIM(DISTINCT x'4685', rt1.c1) THEN ((rt1.c6)>>(rt1.c5)) WHEN CASE rt1.c3  WHEN rt1.c6 THEN rt1.c5 ELSE rt1.c3 END THEN TOTAL(rt1.c2) WHEN ((x'')>>(rt1.c4)) THEN ((((((((rt1.c4)AND(rt1.c6)))OR(rt1.c6)))OR('⠗0-x0w]')))AND(rt1.c6)) END FROM rt1; -- 0ms;
SELECT CAST(((rt1.c5) IS FALSE) AS NUMERIC) FROM rt1; -- 0ms;
SELECT ALL (- (((rt1.c6)>(rt1.c6)))) FROM rt1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), GROUP_CONCAT(('N\珀{2.xॼ&' IN ())), (((rt1.c5)) NOT BETWEEN ((CAST(rt1.c4 AS BLOB))) AND ((((rt1.c2) IS FALSE)))) FROM rt1 ORDER BY TRIM('1806053296')  NULLS LAST, CAST((rt1.c3 IN ()) AS REAL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (((rt1.c2)GLOB(rt1.c0)))) FROM rt1; -- 0ms;
SELECT ALL (((((rt1.c0))<>((rt1.c1))))|(((rt1.c3)OR(rt1.c1)))) FROM rt1 WHERE ('312218333'); -- 0ms;
SELECT COUNT(*) OVER (), rt1.c3, (((NOT (rt1.c6))) NOT BETWEEN ((((rt1.c4)) BETWEEN ((rt1.c6)) AND ((rt1.c2)))) AND (json_valid(rt1.c3))) FROM rt1 WHERE (((CAST(-1362811527 AS NUMERIC))-((+ (0.5708393842115059))))); -- 1ms;
SELECT ALL '1806053296' FROM rt1 WHERE (((CASE 0.9977152735272017  WHEN 0.7174484882220267 THEN NULL WHEN '-1859534975' THEN '-1696951247431789395T641-X/' WHEN '1367146731' THEN -1.628089966E9 WHEN '' THEN '1803290603' WHEN 1543801095 THEN 0.6334747413592007 END) BETWEEN (0.28846235662276365 COLLATE BINARY) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), (((rt1.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c2))) COLLATE NOCASE, rt1.c5 FROM rt1 WHERE ((UNLIKELY(DISTINCT 0.015732251403897335) IN ())); -- 0ms;
SELECT DISTINCT ((+ (rt1.c6)) IN ()) FROM rt1 WHERE (((CAST(NULL AS NUMERIC))+(((x'')+(NULL))))) GROUP BY rt1.c3, ((rt1.c1) BETWEEN (rt1.c1) AND (rt1.c5)) COLLATE NOCASE, x'', '', ABS(((((rt1.c4)OR(rt1.c2)))AND(''))); -- 0ms;
SELECT DISTINCT ((COUNT(rt1.c4))<=(rt1.c3)) FROM rt1 WHERE (((((0.4714812717217326) IS FALSE)) ISNULL)) LIMIT -1113575615; -- 0ms;
SELECT SUM((((rt1.c0, rt1.c0, rt1.c5)) BETWEEN ((rt1.c4, rt1.c2, rt1.c3)) AND ((rt1.c2, rt1.c6, rt1.c5)))) FROM rt1; -- 0ms;
SELECT CAST(rt1.c3 COLLATE NOCASE AS INTEGER) FROM rt1 WHERE (((((('1813275594' IN ()))OR((((NULL)) BETWEEN ((x'ce63')) AND ((0.43643811808946276))))))OR(0.33922869690314894 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt1 WHERE ('1945382757'); -- 0ms;
SELECT NULL, ((((((rt1.c4)AND(rt1.c3)))OR(rt1.c1))) NOT BETWEEN (((rt1.c4)!=(rt1.c3))) AND (CAST(rt1.c0 AS TEXT))), ((SUM(rt1.c3)) NOT BETWEEN (rt1.c5 COLLATE BINARY) AND (rt1.c0 COLLATE RTRIM)) FROM rt1 WHERE ((+ (json_quote(x'5872'))));SELECT ALL ((((rt1.c0) IS FALSE))&(CAST(rt1.c4 AS INTEGER))), LAST_INSERT_ROWID(), ((((rt1.c6) BETWEEN (rt1.c3) AND (rt1.c0))) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c6)) NOT BETWEEN ((((rt1.c3)<=(rt1.c6)))) AND ((x''))) FROM rt1 WHERE ((~ ((((NULL, 0.2222770342375221, x''))==((x'', 'Z', 0.14779261617207007)))))); -- 0ms;
SELECT DISTINCT ((((rt1.c3)/(rt1.c5))) IS FALSE) FROM rt1 WHERE (((((CAST(0.8494548237794676 AS TEXT))OR(((0.4658903554798184) NOT BETWEEN (350798859) AND (x'')))))OR(((((0.9067595995095133)OR(x'')))AND(0.05858476088616571))))) GROUP BY rt1.c0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c2 END)=(CAST(rt1.c4 AS REAL))), ((((((rt1.c4)<<('⠬e2Htc')))OR((- (rt1.c4)))))OR(rt1.c1 COLLATE RTRIM)), CAST((- (rt1.c1)) AS NUMERIC), STRFTIME(json_object(rt1.c3, rt1.c6, rt1.c1, rt1.c4), ((rt1.c4)-(rt1.c0)), CAST(rt1.c6 AS TEXT), ((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c1)), rt1.c6 COLLATE RTRIM), ((x'f781') NOT BETWEEN (rt1.c3) AND (rt1.c6)) COLLATE RTRIM FROM rt1;SELECT DISTINCT 0.9365266601278224 FROM rt1 WHERE (CASE ((x'04f6') ISNULL)  WHEN (((NULL)) NOT BETWEEN ((NULL)) AND ((0X26cb334f))) THEN TRIM('-1151028112', NULL) END) GROUP BY CAST(((rt1.c1)>(rt1.c6)) AS REAL), rt1.c5, ((x'860a' COLLATE BINARY)GLOB(((rt1.c0)<<(rt1.c3)))) LIMIT 1590220320; -- 0ms;
SELECT DISTINCT (((((rt1.c5))<=((rt1.c4))))=(CASE rt1.c6  WHEN rt1.c1 THEN 634677856 ELSE rt1.c4 END)) FROM rt1 WHERE ((((0.7093128526505437)) NOT BETWEEN (((x'f35560b9' IN ()))) AND (((x'' IN ()))))); -- 0ms;
SELECT LAST_VALUE(CASE ''  WHEN ((rt1.c4) BETWEEN (rt1.c6) AND (rt1.c3)) THEN ((rt1.c1)|(rt1.c2)) WHEN IFNULL(DISTINCT rt1.c0, rt1.c2) THEN 0xffffffff924792a7 WHEN CASE rt1.c5  WHEN rt1.c3 THEN rt1.c3 ELSE '1090713942' END THEN ((rt1.c1)-(rt1.c3)) ELSE NULL END) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((('61700617') ISNULL)) OVER (), (NOT ((((rt1.c6, rt1.c1, rt1.c1)) NOT BETWEEN ((rt1.c3, 0.8352307005326379, rt1.c2)) AND ((rt1.c4, rt1.c0, rt1.c2))))), (((NOT (rt1.c0))) NOT BETWEEN (AVG(rt1.c1)) AND ((((rt1.c3))<=((rt1.c5))))) FROM rt1 LIMIT -996569681 OFFSET -1970458010; -- 0ms;
SELECT ALL (((rt1.c5))>=((CASE NULL  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c6 THEN rt1.c2 ELSE rt1.c5 END))), (((((((((- (rt1.c4)))AND(((((rt1.c1)OR(NULL)))AND(rt1.c1)))))OR((NOT (rt1.c5)))))OR(COALESCE(rt1.c3, rt1.c3))))OR(CAST(rt1.c6 AS INTEGER))), (((- (rt1.c4)))!=(MAX(rt1.c0))) FROM rt1 WHERE (((~ (0.24411034002287657)) IN ())) ORDER BY CAST(rt1.c6 COLLATE RTRIM AS NUMERIC) DESC  NULLS LAST; -- 0ms;
SELECT ((((rt1.c1) BETWEEN (rt1.c4) AND (rt1.c6)))%(((rt1.c3)AND(rt1.c4)))), CASE (('(hV.獬\ns+2')<>(rt1.c2))  WHEN rt1.c0 THEN CAST(rt1.c1 AS NUMERIC) ELSE UPPER(rt1.c6) END, (NOT (((((rt1.c1)AND(rt1.c6)))AND(rt1.c4)))) FROM rt1 WHERE ((((CAST(0.7761605901042419 AS INTEGER)))>=((CASE x'2863a076'  WHEN NULL THEN 0.34344158786977963 ELSE NULL END)))); -- 1ms;
SELECT DISTINCT CASE rt1.c0  WHEN rt1.c0 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c1 WHEN rt1.c2 THEN rt1.c6 WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c4 THEN x'002c' END COLLATE BINARY FROM rt1 WHERE (CASE ((NULL)AND(0.4937821920283233))  WHEN ((('-325851212', NULL, '')) BETWEEN ((0.7260139310828437, '(%fa', 0.08566523887571276)) AND ((0.28127628627920676, '㍏'']7', 0xffffffffb8fd5a40))) THEN (x'' IN ()) ELSE CAST(NULL AS INTEGER) END); -- 0ms;
SELECT ALL ((((TYPEOF(rt1.c6))AND(((0x4fccd279)/(rt1.c1)))))AND(((rt1.c5)/(rt1.c0)))) FROM rt1 GROUP BY (((rt1.c0, rt1.c2, rt1.c6, rt1.c4, rt1.c3)) NOT BETWEEN (((+ (rt1.c2)), CASE rt1.c5  WHEN rt1.c6 THEN rt1.c0 END, ((rt1.c0)<<(1.783474151E9)), CAST(rt1.c4 AS TEXT), ((((rt1.c0)OR(rt1.c0)))AND(rt1.c2)))) AND ((0.45999712829697714, '-331330826', (+ (rt1.c2)), ((rt1.c0)=(rt1.c1)), ((((((((NULL)OR(rt1.c6)))OR(rt1.c1)))AND(rt1.c1)))OR(rt1.c2))))); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE ('?>') GROUP BY ((rt1.c5) NOTNULL), (((rt1.c2)) NOT BETWEEN ((0.35349559280143905)) AND ((((rt1.c6)IS NOT(rt1.c4))))), x'6753'; -- 0ms;
SELECT DISTINCT MAX(((rt1.c6) ISNULL)), rt1.c6, (rt1.c0 COLLATE RTRIM IN ()) FROM rt1; -- 0ms;
SELECT DISTINCT ((0x4f0ac2ce) NOT BETWEEN (LIKE(rt1.c1, rt1.c1, 'i')) AND (((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c2)))), rt1.c5, ((rt1.c4)GLOB((((rt1.c3, rt1.c4, rt1.c1)) BETWEEN ((rt1.c0, rt1.c4, rt1.c3)) AND ((x'724d', rt1.c1, rt1.c0))))) FROM rt1 WHERE (CASE WHEN ((0xffffffffbd0c23dd) NOT BETWEEN (0xffffffffc2f9f4e4) AND (-1541107403)) THEN (('^X*RfEX1')IS NOT(NULL)) ELSE (('1755690731')+('-799205979')) END); -- 1ms;
SELECT ALL ((((rt1.c1)>>(rt1.c2)))IS NOT((rt1.c0 IN ()))) FROM rt1; -- 0ms;
SELECT ALL ((((((((rt1.c3)AND(rt1.c3)))OR('')))AND(((rt1.c4) BETWEEN (rt1.c1) AND (rt1.c5)))))OR(((rt1.c3)>=(rt1.c0)))), (((((rt1.c5)/(rt1.c1))))<((CAST(rt1.c5 AS REAL)))), CAST((+ (rt1.c2)) AS NUMERIC) FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)IS NOT(rt1.c0)) AS BLOB) FROM rt1 WHERE (((((0.5774025145785883) BETWEEN (NULL) AND ('VS'))) IS TRUE)); -- 0ms;
SELECT CASE 0.41971373033525994 COLLATE NOCASE  WHEN ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c6)) THEN (rt1.c2 IN ()) ELSE CAST(rt1.c1 AS NUMERIC) END, (rt1.c3 COLLATE BINARY IN ((NOT (rt1.c2)))), (((CASE NULL  WHEN rt1.c0 THEN rt1.c6 END))>=((CAST(-664694273 AS NUMERIC)))) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0) IS TRUE)) BETWEEN (TOTAL(rt1.c3)) AND (((rt1.c1) IS FALSE))) FROM rt1 WHERE ((NOT (IFNULL(x'', NULL)))); -- 0ms;
SELECT ALL (((NOT (rt1.c0)))+(AVG(rt1.c3))) FROM rt1; -- 0ms;
SELECT ALL CAST(rt1.c6 AS NUMERIC) FROM rt1; -- 0ms;
SELECT ALL (((rt1.c1 IN (rt1.c4))) IS TRUE) FROM rt1 GROUP BY rt1.c0 COLLATE RTRIM, ((rt1.c2 COLLATE NOCASE)*(((rt1.c5)<<(rt1.c4)))), ((((((((rt1.c5)AND(rt1.c0)))OR(rt1.c1)))OR((NOT (rt1.c0)))))AND(rt1.c0 COLLATE RTRIM)); -- 1ms;
SELECT DISTINCT 'CLjZ' FROM rt1 WHERE (CASE ((((NULL)AND(NULL)))OR('-1844470087'))  WHEN (((NULL)) NOT BETWEEN (('''pcn1%')) AND ((0.7487893374450246))) THEN (- ('0.45999712829697714')) END); -- 0ms;
SELECT ALL AVG(SUM(GROUP_CONCAT('0.42205969995091175'))) FROM rt1;SELECT ALL CAST((~ (1.531467047E9)) AS REAL) FROM rt1 ORDER BY ((((rt1.c4)>=(rt1.c3))) NOT NULL) ASC  NULLS FIRST; -- 0ms;
SELECT ALL x'' FROM rt1 WHERE (UPPER(DISTINCT CASE '263012268'  WHEN '1754045083' THEN x'' END)) LIMIT 72091445 OFFSET -1039165282; -- 0ms;
SELECT CASE ((rt1.c5)IS(rt1.c2))  WHEN CAST(rt1.c4 AS INTEGER) THEN (- (rt1.c0)) WHEN AVG(rt1.c2) THEN (rt1.c6 IN ()) WHEN ((x'') NOT BETWEEN (rt1.c5) AND (x'')) THEN CASE rt1.c4  WHEN rt1.c0 THEN rt1.c6 END END FROM rt1; -- 0ms;
SELECT ALL (('821297022')/(LIKELY(rt1.c6))) FROM rt1; -- 0ms;
SELECT ((NULL) ISNULL) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c6)) NOT BETWEEN ((((rt1.c5)>>(rt1.c4)))) AND ((CAST(rt1.c1 AS REAL)))) FROM rt1; -- 0ms;
SELECT DISTINCT (('0.4561032291783894' COLLATE NOCASE) IS TRUE), CASE WHEN rt1.c0 THEN rt1.c1 END, CAST(COUNT(rt1.c2) AS TEXT), MAX(COUNT(*) COLLATE BINARY), (NOT ((rt1.c1 IN ()))) FROM rt1 WHERE (((COALESCE(0.8702101535257, '')) BETWEEN (0x20c9df8b COLLATE RTRIM) AND (((0.6688254304587147) NOT BETWEEN (0.07708855725012798) AND (0.7777446604833713)))));SELECT DISTINCT ((((rt1.c0)AND(rt1.c6))) NOT NULL) FROM rt1 WHERE (((((((x'')==(0.8758005151662202)))AND(TRIM(DISTINCT '-1865671904'))))AND(CASE 0.45930263059134857  WHEN NULL THEN x'' WHEN -455609583 THEN '-761692035' WHEN '0.22002568302918768' THEN x'' ELSE 0.9838984069099669 END))) EXCEPT SELECT (- (((rt1.c1)LIKE(rt1.c5)))) FROM rt1 ORDER BY (rt1.c5 IN ()) COLLATE BINARY  NULLS FIRST;SELECT DISTINCT DENSE_RANK() OVER (), FIRST_VALUE(((((rt1.c0))<>((rt1.c2))) IN (((rt1.c3)AND('Da'))))) OVER (), ((((rt1.c3)>(rt1.c4)))GLOB(CASE rt1.c0  WHEN rt1.c2 THEN rt1.c2 WHEN '' THEN rt1.c3 WHEN rt1.c3 THEN rt1.c4 ELSE rt1.c2 END)), ((DATETIME(rt1.c6, NULL, rt1.c4, rt1.c2, rt1.c3, rt1.c2, rt1.c1)) NOT NULL), ((((((rt1.c6) NOTNULL))OR(CAST(rt1.c1 AS BLOB))))AND(x'' COLLATE RTRIM)) FROM rt1 WHERE (LOWER(((('*\t>i3', NULL, x''))!=(('-933253500', NULL, 'D]'))))); -- 0ms;
SELECT DISTINCT ((SUM(rt1.c6))<(rt1.c3)), ((((((((((rt1.c3)<<(rt1.c3)))AND(((rt1.c5)>(rt1.c5)))))AND((+ (rt1.c2)))))AND(rt1.c5)))OR((((x'', rt1.c3, rt1.c5))<=((rt1.c0, rt1.c4, rt1.c4))))), ((((rt1.c6)IS(rt1.c6))) NOT NULL) FROM rt1 WHERE (((((('8561102')OR(x'deeb')))AND(x'')) IN ((('')&(NULL)), '-2109940012'))); -- 0ms;
SELECT DISTINCT (((AVG(rt1.c2)))!=((((rt1.c1)*(rt1.c0))))), (((((rt1.c1))!=((rt1.c6))))AND(((rt1.c0) BETWEEN (rt1.c6) AND (rt1.c2)))), (((TRIM(rt1.c0)))>((CAST(x'' AS NUMERIC)))) FROM rt1 ORDER BY CASE ((rt1.c2) NOT NULL)  WHEN ((rt1.c6) BETWEEN (2054677610) AND (rt1.c1)) THEN CAST(rt1.c4 AS TEXT) WHEN rt1.c3 COLLATE BINARY THEN LTRIM(rt1.c3) WHEN ((rt1.c1) NOTNULL) THEN (rt1.c5 IN (rt1.c4, rt1.c4)) ELSE CASE rt1.c1  WHEN rt1.c0 THEN rt1.c1 ELSE rt1.c0 END END LIMIT 1145146664; -- 0ms;
SELECT QUOTE((~ (rt1.c3))) FROM rt1; -- 0ms;
SELECT (NOT (0.6417432860738949)), (+ (rt1.c1)) COLLATE NOCASE COLLATE RTRIM, (((((rt1.c1) NOTNULL)))<=((CHAR(1199615146)))) FROM rt1 WHERE (x''); -- 0ms;
SELECT ((CASE 0.034209896292788367  WHEN rt1.c2 THEN rt1.c1 ELSE x'' END)>(CASE WHEN rt1.c3 THEN rt1.c2 ELSE rt1.c6 END)) FROM rt1 WHERE (((((((x'68e4')AND(x'')))OR(0.8841933108326924))) NOTNULL)); -- 0ms;
SELECT DISTINCT (('-1761196198') IS TRUE) COLLATE RTRIM FROM rt1 WHERE ((((NULL)) NOT BETWEEN ((((x'') NOT BETWEEN ('') AND ('')))) AND ((((((0.2930184944152112)AND(0X365197a)))OR(-5.12340399E8)))))); -- 0ms;
SELECT DISTINCT ((0.31542309323197093) NOT NULL), ((((rt1.c5)IS(rt1.c3))) NOTNULL), LEAD((NOT (((x'') ISNULL))), TYPEOF(NULL), -1941877771) OVER ( ORDER BY rt1.c5) FROM rt1 WHERE (CAST(CAST(NULL AS BLOB) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((~ (rt1.c4))) NOT BETWEEN (((rt1.c2)%('2G1v~'))) AND (CAST(rt1.c2 AS REAL))) FROM rt1; -- 0ms;
SELECT ALL COUNT(HEX(0Xffffffffdd70f7e8)) FROM rt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1 ORDER BY CAST(((rt1.c4)LIKE(rt1.c2)) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((rt1.c6)OR(NULL)))OR(rt1.c5))) BETWEEN (rt1.c6 COLLATE BINARY) AND (CAST(rt1.c6 AS TEXT))) FROM rt1; -- 0ms;
SELECT ((('-685789079', rt1.c5, rt1.c5)) NOT BETWEEN (((- (rt1.c1)), MAX(rt1.c6), ((((rt1.c6)AND(0Xffffffffab7313b0)))AND(rt1.c5)))) AND ((rt1.c0, '3j', load_extension(NULL)))), ((rt1.c5)>(rt1.c2)) COLLATE BINARY COLLATE BINARY, ((- (rt1.c6)) IN (rt1.c5 COLLATE RTRIM)) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt1.c5 AS BLOB)) BETWEEN (rt1.c0 COLLATE NOCASE) AND ((('1114709916')AND(rt1.c0)))) FROM rt1 WHERE (CASE WHEN ((0.33070579532479194) NOT NULL) THEN ((0.8921433361764601) BETWEEN (x'') AND ('Xstart of dayo')) WHEN (('-1441493173') NOT BETWEEN (NULL) AND (0.9845482898550452)) THEN x'' WHEN ((((0.5565565140154198)OR(0Xfffffffffdf59059)))OR(x'')) THEN ((('-331330826'))==((NULL))) END); -- 0ms;
SELECT DISTINCT ((((rt1.c2)||(rt1.c6))) NOTNULL), ((CAST(rt1.c6 AS INTEGER))AND(((rt1.c5) ISNULL))), UNLIKELY(DISTINCT ((rt1.c5) BETWEEN (rt1.c3) AND (rt1.c1))), (((NOT (rt1.c0))) BETWEEN (LTRIM(rt1.c5, '0.11216449579699728')) AND (((rt1.c5)+(rt1.c1)))), NULL FROM rt1; -- 0ms;
SELECT DISTINCT ((rt1.c4) IS FALSE) COLLATE NOCASE, ((((((((((((((((rt1.c0)OR(rt1.c3)))AND(rt1.c3)))OR(rt1.c0)))AND(rt1.c2)))AND(((((rt1.c1)OR(rt1.c6)))AND(rt1.c5)))))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 END)))AND(GROUP_CONCAT(rt1.c4))))AND(((rt1.c0)IS NOT(rt1.c6)))), (((~ (rt1.c3))) NOTNULL) FROM rt1 WHERE (CAST(((((NULL)OR(x'')))OR(NULL)) AS TEXT)) GROUP BY ((((((((((rt1.c0)AND(rt1.c4)))OR(rt1.c2)))OR(rt1.c0)))AND(rt1.c5)))GLOB(CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c0 END)), CASE WHEN HEX(rt1.c2) THEN (rt1.c0 IN (rt1.c5)) WHEN ((((((((rt1.c0)OR(rt1.c6)))AND(rt1.c5)))AND(rt1.c1)))OR(rt1.c0)) THEN CASE WHEN rt1.c2 THEN rt1.c6 END WHEN GLOB(rt1.c1, rt1.c4) THEN HEX(rt1.c6) ELSE CAST(rt1.c3 AS BLOB) END, CASE WHEN (x'' IN ()) THEN CASE WHEN rt1.c5 THEN rt1.c1 WHEN rt1.c4 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c4 END WHEN ((((((((((((rt1.c3)OR(rt1.c3)))AND(0.26773553501236247)))OR(rt1.c3)))AND(rt1.c5)))AND(rt1.c4)))OR(rt1.c4)) THEN (('4)ퟷWB')>=(rt1.c2)) WHEN rt1.c4 COLLATE NOCASE THEN ((rt1.c1)||(rt1.c3)) END; -- 0ms;
SELECT CUME_DIST() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT SUM(((rt1.c4)<=('-708121489'))) OVER ( RANGE  CURRENT ROW) FROM rt1 WHERE ('-1249533755'); -- 0ms;
SELECT DISTINCT (((((NULL)OR(rt1.c5)))AND(rt1.c4)) IN ()) FROM rt1 WHERE (((((((0x7fffffffffffffff)LIKE(x'')))AND(json_quote(0xffffffffdff86357))))AND(CAST(-1.761196198E9 AS NUMERIC)))) GROUP BY CAST(STRFTIME(rt1.c3, rt1.c6, rt1.c0) AS BLOB), (NOT (((rt1.c5) NOT NULL))), ((((rt1.c4 IN ())))<=((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c3))))) HAVING (('1020279757') NOTNULL) COLLATE NOCASE; -- 0ms;
SELECT (~ (rt1.c2)) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN ())) ISNULL) FROM rt1 WHERE ((NOT ((0.2934692257603927 IN ('n', '1788737297'))))); -- 0ms;
SELECT FIRST_VALUE((((rt1.c4)) BETWEEN ((rt1.c4)) AND ((rt1.c4))) COLLATE BINARY) OVER (), TOTAL(0.0788637533594645), rt1.c5 FROM rt1 WHERE ((((0.27643655380516574 IN ()))!=(NULL))); -- 0ms;
SELECT DISTINCT AVG((rt1.c5 IN ())) FROM rt1; -- 0ms;
SELECT DISTINCT (((((('e')OR(rt1.c5)))OR(rt1.c0))) NOT NULL), AVG(((rt1.c6)%(rt1.c1))) OVER (), AVG(LOWER(rt1.c4)) OVER () FROM rt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT CASE ((rt1.c6) NOT BETWEEN (rt1.c0) AND (rt1.c0))  WHEN COUNT(*) THEN (((rt1.c5)) BETWEEN ((rt1.c5)) AND ((x'5314'))) WHEN COUNT(rt1.c2) THEN ((((rt1.c4)AND(rt1.c5)))OR(rt1.c4)) WHEN ((rt1.c1)<(rt1.c3)) THEN CAST(0X47fef211 AS REAL) WHEN (((rt1.c1, rt1.c5, rt1.c1))>((rt1.c6, rt1.c0, rt1.c3))) THEN ((rt1.c6)=(rt1.c1)) WHEN (x'' IN ()) THEN (NOT (rt1.c0)) ELSE ((rt1.c5)OR(x'')) END FROM rt1 WHERE (((NULL)%((('6-')%(0.744328125550142))))); -- 0ms;
SELECT CAST(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c6 END AS REAL), (((+ (x'b821')))GLOB(SUBSTR(rt1.c4, rt1.c0))), (((rt1.c4 IN ())) BETWEEN (CASE rt1.c3  WHEN rt1.c4 THEN rt1.c2 WHEN rt1.c0 THEN 0.20953648597104169 WHEN rt1.c6 THEN rt1.c1 WHEN rt1.c5 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c1 END) AND ((- (rt1.c6)))) FROM rt1; -- 1ms;
