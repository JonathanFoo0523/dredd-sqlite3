-- Time: 2024/06/07 17:07:31
-- Database: database55
-- Database version: 3.40.0
-- seed value: 4274257855
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB ); -- 0ms;
ANALYZE; -- 0ms;
CREATE UNIQUE INDEX i12 ON t0(CASE WHEN CASE NULL  WHEN c0 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN 0Xfffffffface9d6d3 ELSE c0 END THEN (c0 IN ()) WHEN c0 COLLATE RTRIM THEN ((c0)AND(c0)) WHEN ((c0)LIKE(c0)) THEN c0 END COLLATE RTRIM) WHERE c0; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.8976639411400462), ('-2129575826'), (0xfffffffface9d6d3); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0Xffffffffe1f4b8fd); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (-1.393961261E9); -- 0ms;
UPDATE OR IGNORE t0 SET c0=NULL, c0=-504055555; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES ('1642150034'); -- 1ms;
PRAGMA main.short_column_names = false; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (0.4494366218263498), (x''), (NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('YD&6+v'); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.29014049494019867); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c30; -- 1ms;
END; -- 0ms;
INSERT OR FAIL INTO t0 VALUES (NULL), (0.29014049494019867), (x''); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
ALTER TABLE t0 ADD COLUMN c35 TEXT; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c30 TO c65; -- 0ms;
INSERT OR REPLACE INTO t0(c35) VALUES (NULL); -- 1ms;
INSERT OR IGNORE INTO t0 VALUES (NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
UPDATE t0 SET c65=0xffffffff8c21bffa; -- 5ms;
UPDATE t0 SET c65=0X1ac8e53c, c35='0.4494366218263498'; -- 0ms;
UPDATE OR IGNORE t0 SET c65=0.2563794563017747, c65=x'' WHERE ((((CASE t0.c65  WHEN t0.c35 THEN t0.c65 WHEN t0.c35 THEN t0.c35 WHEN t0.c65 THEN 0.9548923499664127 ELSE t0.c65 END)OR('-2129575826')))OR((- (NULL)))); -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c35 TO c48; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE t0; -- 0ms;
UPDATE OR IGNORE t0 SET (c65)=(NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c48, c65) VALUES (0X17d628a7, 4.493735E8); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO t0(c65) VALUES (0.9563757238482707); -- 0ms;
INSERT OR FAIL INTO t0(c48) VALUES ('YD&6+v'); -- 0ms;
UPDATE OR IGNORE t0 SET (c65, c48, c48)=('', NULL, x'9cf1'); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.integrity_check; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ALL ((CAST(t0.c65 AS INTEGER)) BETWEEN (t0.c48 COLLATE NOCASE) AND (((((t0.c48)AND(t0.c65)))OR(t0.c48)))) FROM t0 WHERE (((((x'') NOT NULL)) NOT BETWEEN (x'' COLLATE BINARY) AND (((x'')IS(''))))); -- 0ms;
ANALYZE i12; -- 0ms;
UPDATE OR REPLACE t0 SET (c48)=(x''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c65) VALUES ('Ra'); -- 0ms;
UPDATE OR IGNORE t0 SET (c48, c48)=('-1677761337', 0.922224355224037) WHERE (((('.c/{v-')AND(x'')))AND(((((t0.c48)AND(t0.c65)))OR(t0.c48)))); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' noskipscan'); -- 0ms;
PRAGMA default_cache_size = 1869902879; -- 0ms;
PRAGMA incremental_vacuum(-1111370880); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'', NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (x'', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c48) VALUES (NULL); -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.locking_mode = NORMAL; -- 0ms;
INSERT OR IGNORE INTO t0(c48, c65) VALUES (NULL, '-200131269'); -- 0ms;
PRAGMA main.journal_size_limit = -5950228815311138392; -- 0ms;
INSERT OR IGNORE INTO t0(c65) VALUES (0.07995996283228546); -- 0ms;
INSERT OR IGNORE INTO t0(c48) VALUES (0.32879166498599866); -- 0ms;
INSERT OR ABORT INTO t0(c48) VALUES (0X78153dcd); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'null', '4 sz=867657947 noskipscan'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
ALTER TABLE t0 ADD COLUMN c5 REAL; -- 0ms;
UPDATE t0 SET c48='0.9548923499664127' WHERE ((t0.c48)/(t0.c65)) COLLATE BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c5)=('-1913301028'); -- 0ms;
DROP INDEX IF EXISTS "i12"; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t0(c5) VALUES ('TS'); -- 0ms;
PRAGMA journal_size_limit = 0; -- 0ms;
INSERT OR IGNORE INTO t0(c5, c48) VALUES (NULL, 'gkF(') ON CONFLICT DO NOTHING; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i18 ON t0(((CASE c5  WHEN c5 THEN '' END)>(CASE WHEN c48 THEN c48 WHEN c5 THEN 1843303949 WHEN c5 THEN c5 END)),((((c5)|(c65))) NOT BETWEEN (((c65)||(c5))) AND (CAST(c48 AS NUMERIC))) ASC,TRIM(c5 COLLATE NOCASE, ((c65)>>(x'6602'))) COLLATE NOCASE ASC); -- 0ms;
CREATE UNIQUE INDEX i39 ON t0((NOT (x'')) DESC,CAST(((((((((c5)AND(c5)))OR(c5)))OR(NULL)))AND(c48)) AS NUMERIC) COLLATE NOCASE DESC,c65); -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i30 ON t0(CASE WHEN CAST(x'651d' AS NUMERIC) THEN c5 COLLATE RTRIM ELSE c5 END,CAST(((c65) BETWEEN (c48) AND (c65)) AS BLOB),CAST(NULL AS REAL) ASC); -- 1ms;
UPDATE OR FAIL t0 SET c5=0.6251566604292925 WHERE ((t0.c65) ISNULL); -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
ANALYZE main; -- 0ms;
UPDATE t0 SET (c5, c5)=('Ra', '') WHERE ((((ABS(DISTINCT NULL))AND(IFNULL(t0.c65, t0.c5))))AND(CASE t0.c48  WHEN t0.c48 THEN t0.c48 END)); -- 0ms;
ALTER TABLE t0 ADD COLUMN c49 INTEGER; -- 1ms;
INSERT OR IGNORE INTO t0(c5, c65) VALUES (x'', '-1086086113'); -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR IGNORE INTO t0(c49, c5) VALUES (x'', ''), ('0.922224355224037', -835382297), (0X39b36d4a, -879437887); -- 0ms;
UPDATE t0 SET (c48)=('Mf|T{'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
CREATE TEMPORARY TABLE t1 (c0 INTEGER , c1 TEXT , c2 INT ); -- 0ms;
INSERT OR FAIL INTO t0(c49, c65) VALUES (NULL, '-597093455'); -- 0ms;
ALTER TABLE t0 RENAME TO t2; -- 0ms;
UPDATE OR ABORT t1 SET (c1)=(0.3139557211127485); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
SELECT DISTINCT (v0.c0 IN ()) COLLATE BINARY, CAST((((t2.c49)) NOT BETWEEN ((t2.c49)) AND ((t1.c2))) AS TEXT), ((TOTAL(t2.c5)) NOT BETWEEN (IFNULL(DISTINCT t1.c1, t2.c49)) AND ((t2.c48 IN ()))) FROM t1, v0 WHERE (((((-1.677761337E9)|(NULL))) NOT NULL));SELECT CASE t2.c65  WHEN ')\' THEN GROUP_CONCAT(t2.c5) ELSE GLOB(t2.c48, t1.c2) END FROM v0 WHERE ((((x'') NOT BETWEEN (0.7259131763548646) AND (-8.35382297E8)) IN (((('㛡<')) NOT BETWEEN (('1642150034')) AND (('867657947'))), CAST(x'20fa' AS NUMERIC)))) LIMIT 1504577394;SELECT ((t2.c49)<<(t1.c0)) COLLATE RTRIM, NTILE((v0.c0 IN (((v0.c0) NOTNULL)))) OVER ( RANGE CASE CASE t2.c65  WHEN t2.c48 THEN t1.c0 WHEN v0.c0 THEN t2.c49 WHEN t1.c2 THEN t2.c49 ELSE t1.c0 END  WHEN ((v0.c0) ISNULL) THEN NULL ELSE ((t1.c2) NOT BETWEEN (t2.c48) AND (t2.c49)) END PRECEDING), ((- (t1.c2)) IN ()) FROM v0 WHERE ((0.9563757238482707 IN ()));SELECT ((t1.c0)>>(((t1.c1)>(v0.c0)))) FROM t1, v0 ORDER BY ((((t1.c0)>>(t2.c49))) NOTNULL) ASC  NULLS LAST;SELECT CASE (((t2.c5))<((t2.c48)))  WHEN ((t2.c65) IS FALSE) THEN ((t2.c65) NOT BETWEEN (t2.c48) AND (t1.c0)) END, CASE (t2.c48 IN ())  WHEN (((v0.c0, t1.c1, t1.c2))<((v0.c0, t2.c48, t2.c65))) THEN ((t1.c1) BETWEEN (t2.c5) AND (t1.c1)) WHEN CASE t2.c49  WHEN t2.c5 THEN t1.c0 END THEN ((((((((t2.c5)AND(t2.c48)))OR(v0.c0)))OR(t2.c49)))OR(t2.c5)) WHEN ((0X72001950) IS TRUE) THEN (~ (t2.c5)) END, (((((t2.c5) NOT BETWEEN (t1.c1) AND (t1.c1)), AVG(t1.c0), ((-402222336)>(t1.c0))))>=((CASE t1.c0  WHEN v0.c0 THEN t1.c1 ELSE t2.c49 END, t2.c65, t2.c5 COLLATE NOCASE))) FROM t2, t1;SELECT 0.3859017006206571, t1.c0, MAX(((v0.c0)<(t1.c0))) COLLATE RTRIM FROM v0, t1, t2 WHERE ((((NOT (0X6f74741f))) NOT NULL)); -- 0ms;
SELECT t2.c5, ((0.7320950891994212)-((0xffffffffadaf8f00 IN (t2.c49)))), TOTAL((~ (t2.c49))) FROM t2, t1 WHERE ((CAST(NULL AS NUMERIC) IN ())); -- 0ms;
SELECT ((((t2.c49) NOTNULL))|(t2.c49)), LIKELIHOOD(DISTINCT ((t1.c1) NOT BETWEEN (0.5736025265385432) AND (t2.c65)), 0.3609232270099725), CASE WHEN ((((t2.c65)AND(t1.c0)))OR(t1.c1)) THEN ((NULL) NOT BETWEEN (0xffffffffce3513e7) AND (t2.c5)) WHEN CASE t2.c65  WHEN t1.c1 THEN t1.c0 END THEN (+ (v0.c0)) WHEN ((((t1.c0)OR(t2.c48)))AND(v0.c0)) THEN '' END FROM t2, v0 WHERE ((((NOT (x'')))||((('-1381003520') BETWEEN (NULL) AND (NULL)))));SELECT (((((t1.c1, t2.c49, v0.c0)) BETWEEN ((t1.c0, t2.c48, x'')) AND ((t2.c5, v0.c0, 0X17d628a7))))/(((t2.c48)*(t2.c65)))), ((CASE WHEN v0.c0 THEN t2.c65 WHEN t2.c48 THEN NULL WHEN t2.c48 THEN t2.c48 END)!=(CASE WHEN t2.c5 THEN t2.c49 ELSE t2.c48 END)), ((CASE WHEN t2.c65 THEN t1.c1 END)IS(((v0.c0)/(t1.c1)))) FROM t2 WHERE (CASE WHEN load_extension('Yz') THEN (((('968060234')OR('㛡<')))OR('')) WHEN (('') NOTNULL) THEN (('') BETWEEN (0.9420984310798924) AND (x'')) WHEN (((('')AND(0.27376172933875853)))AND(0.8656803393577851)) THEN (('-668991712') NOT NULL) ELSE ((('', '', '')) BETWEEN ((x'', x'f90c', '')) AND (('', x'1a5b', 0x3e3c9139))) END);SELECT DISTINCT UPPER(t2.c65 COLLATE RTRIM) FROM t1, v0 WHERE (((CASE NULL  WHEN '㛡<' THEN 0Xffffffffdd813ad3 END)<<(LOWER(0xffffffffdc6913b1)))) ORDER BY ((v0.c0)OR(((((0.29014049494019867)OR(t1.c1)))OR(t1.c1))))  NULLS FIRST LIMIT -505429629 OFFSET 0;SELECT DISTINCT ((((((((((((SUM(v0.c0))OR(((((v0.c0)OR(t2.c65)))OR(t2.c65)))))AND(SUM(t2.c48))))AND((((0xffffffffadaf8f00, t1.c1, t2.c49, t2.c65, t2.c5)) BETWEEN ((t1.c0, t2.c49, v0.c0, t1.c0, 0.3621551262539141)) AND ((t2.c5, t2.c65, t2.c65, t1.c1, t2.c65))))))AND(x'' COLLATE NOCASE)))OR((v0.c0 IN (t2.c48)))))AND(t1.c0 COLLATE NOCASE)), CAST(t1.c1 AS NUMERIC), MAX(1797804453) FROM t2, t1 WHERE ((((CAST(1642150034 AS REAL), CAST('-1111370880' AS TEXT), (+ (NULL)), CASE ''  WHEN x'' THEN 0.6387098576115408 ELSE NULL END, CASE '_['  WHEN x'' THEN 0.6387098576115408 ELSE '-k_i3' END))>(((((('aᏧ')OR(NULL)))AND(0.23805189795426307)), CAST(0.12389803300214364 AS NUMERIC), (0.010672246863903556 IN ('399911079')), (~ (1056250610)), ('-597093455' IN ())))));SELECT DISTINCT (- (t1.c1)) COLLATE RTRIM FROM t2, v0, t1 WHERE (DATE(0.05509988901273721, x'', 0X1ac8e53c, '1843303949', x'', x'2352', NULL) COLLATE BINARY) ORDER BY ((((((((json(t2.c49))OR(LIKELIHOOD(NULL, 0.9436901553703874))))OR(CAST('Y9\E_뿺r' AS TEXT))))OR((NOT (t2.c48)))))AND((((t2.c49))<((x'')))))  NULLS LAST, (- (((((t2.c65)OR(v0.c0)))AND(t1.c1))))  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN (NULL IN (t2.c5)) THEN (t2.c48 IN ()) ELSE (t2.c49 IN ()) END, ((((NULL)+(t2.c48)))|((((t2.c65))!=((t1.c0))))), ((t2.c48) NOTNULL) COLLATE RTRIM, (+ (((t2.c5)GLOB(x'')))), ((((t2.c49)&(0x372fa151))) BETWEEN (LIKELIHOOD(DISTINCT t2.c65, 0.3238785732226145)) AND (((t2.c65) NOT BETWEEN (t2.c65) AND (0.14401929056648477)))) FROM v0, t2;SELECT CAST(CAST(t1.c0 AS REAL) AS BLOB) FROM t1 INDEXED BY i30, t2 WHERE ((((((((' %')OR(NULL)))AND(NULL))))>((((0X2b9d9d2a)==('-943506655'))))));SELECT ALL SUM((~ (t1.c1))) OVER ( GROUPS CASE NULL  WHEN ((t2.c65)&(t2.c5)) THEN (t2.c65 IN ()) END PRECEDING) FROM t1, v0, t2 WHERE (CAST(CASE x'8c5b'  WHEN 925868369 THEN 0X139b7e35 ELSE -8.79437887E8 END AS BLOB)); -- 0ms;
SELECT DISTINCT CAST((((t2.c49, t1.c0, '-668991712')) BETWEEN ((t2.c48, t2.c48, t2.c48)) AND ((t2.c65, t1.c0, t2.c65))) AS REAL), (((t1.c0, t2.c49, t1.c0)) BETWEEN (((+ (t2.c48)), ((t2.c5)&(t2.c65)), v0.c0 COLLATE BINARY)) AND ((LOWER(DISTINCT t2.c5), (((t2.c65)) BETWEEN ((t1.c1)) AND ((t2.c5))), ((t2.c48)>>('4/'))))), ABS(DISTINCT CASE '1056250610'  WHEN t2.c49 THEN t2.c49 END), ((((t1.c0)GLOB('0.27376172933875853'))) BETWEEN (CASE WHEN t2.c5 THEN v0.c0 ELSE t2.c48 END) AND (TRIM(t2.c65, t1.c0))), (((t1.c0) NOT BETWEEN (t1.c0) AND (t1.c2)) IN ()) FROM t1, t2;SELECT (((IFNULL(t2.c49, t2.c5)))<((CASE t2.c49  WHEN t2.c5 THEN '' END))), (((t2.c5) NOT BETWEEN ('U_dxTHKjr') AND (t1.c0)) IN ((- (t1.c1)))), (NOT (((t2.c65)&(t1.c2)))) FROM t1, v0;SELECT ALL (((((t2.c65, t1.c1, t2.c65, t1.c0, t1.c2)) BETWEEN ((t2.c5, t1.c0, t2.c48, '1843303949', t1.c2)) AND ((x'53e9fc2b', t2.c48, t1.c2, t1.c0, t2.c49))))-((((t1.c1))<((v0.c0))))) FROM t2, v0 WHERE (((((NULL) NOT BETWEEN ('') AND (NULL)))<<(TYPEOF(NULL))));SELECT DISTINCT (((t2.c49 IN (t2.c5)))>=(t2.c65 COLLATE BINARY)) FROM v0, t1;SELECT DISTINCT COUNT(*) OVER () FROM t1; -- 0ms;
SELECT ALL ((((t2.c48)==(t1.c0))) NOT BETWEEN (t2.c49 COLLATE RTRIM) AND (HEX(t1.c1))) FROM t1, v0 WHERE (((((-1381003520) IS FALSE)) NOT NULL));SELECT ALL ((((t2.c65) BETWEEN (t2.c48) AND (t2.c49))) NOT BETWEEN (LOWER(t2.c5)) AND (AVG(t1.c0))), (((((557670633)&(v0.c0))))<>((NULL))), (NOT (((((((((t1.c1)OR(t1.c2)))OR(t2.c48)))AND(t2.c5)))AND(t2.c5)))) FROM v0 WHERE (CAST(CAST(0Xffffffff954f8fe9 AS BLOB) AS BLOB)) GROUP BY ((((t1.c1)IS(t1.c1))) NOT NULL);SELECT (('2014657997') IS FALSE) FROM t1 ORDER BY (NOT (((((((((t1.c1)OR(t2.c49)))AND(t1.c2)))AND(t1.c0)))AND(t2.c5)))) DESC  NULLS FIRST, '' ASC;SELECT DISTINCT (((t2.c49) IS FALSE) IN ((((t1.c1, v0.c0, t2.c48, t2.c48, t1.c2)) BETWEEN ((t1.c0, t1.c0, 0X17d628a7, t2.c49, t2.c65)) AND ((v0.c0, t2.c5, t1.c1, t2.c65, t1.c1))), ((((t2.c49)AND(0x61e13892)))OR(t2.c65)))), '/B惩UIf', (t2.c48 IN (((t1.c1)=(t1.c0)), 0.7311610358974269 COLLATE BINARY)) FROM t2, t1;SELECT DISTINCT (COUNT(t1.c1) IN (((t1.c2)==(t2.c5)))) FROM v0 WHERE (CASE WHEN NULL THEN -1121944491 END COLLATE BINARY);SELECT ALL (((t1.c0 IN ())) IS TRUE) FROM v0, t2, t1 WHERE ('') GROUP BY (((t2.c48)) NOT BETWEEN ((LIKELIHOOD(t1.c2, 0.8708985677258331))) AND ((((t2.c48)&(t1.c1))))), (((t2.c49)%(t1.c1)) IN ()), (+ (HEX(DISTINCT t2.c48))) HAVING ((((((((((((AVG(v0.c0))AND(CAST(v0.c0 AS NUMERIC))))OR(((NULL)>=(v0.c0)))))OR(((0x531dcc4f)||(t1.c1)))))AND(((((((((t2.c48)OR(v0.c0)))AND(t1.c0)))OR(t1.c0)))AND(NULL)))))AND(((t2.c49)LIKE(t1.c1)))))OR(COUNT(*))); -- 1ms;
SELECT ALL CASE ((t2.c48)>>(t1.c0))  WHEN TOTAL(t1.c1) THEN ((t2.c49)GLOB(t1.c2)) ELSE ((t2.c5)||(t1.c0)) END, LIKELIHOOD(((((((((x'')AND(t2.c49)))AND(t2.c5)))OR(t2.c65)))AND(t1.c0)), 0.3495907787393995), (((((t1.c1, t2.c5, t1.c1)) NOT BETWEEN ((t1.c1, t2.c5, t1.c2)) AND ((t2.c49, t1.c2, t2.c5)))) NOTNULL) FROM t2, t1, v0 WHERE (HEX(DISTINCT (x'' IN ()))); -- 0ms;
SELECT DISTINCT UPPER((((t2.c48, t2.c48, t2.c5)) NOT BETWEEN ((t2.c48, t2.c65, t2.c5)) AND ((t1.c0, t2.c49, t1.c0)))) FROM t2;SELECT ALL ((((((t2.c48)OR(t1.c2)))OR(t1.c0)))LIKE(t2.c5 COLLATE RTRIM)) FROM t2, t1 FULL OUTER JOIN v0 ON (((t1.c0 IN ())) IS FALSE) WHERE ('-578733357'); -- 4ms;
SELECT DISTINCT ((t2.c65 COLLATE BINARY) IS FALSE) FROM v0 WHERE (x'466f') LIMIT -1 OFFSET 348398266;SELECT ((0.5892284463823204)/(GROUP_CONCAT(t1.c2))) FROM v0, t1; -- 0ms;
SELECT NULL FROM t2; -- 0ms;
SELECT DISTINCT t2.c65 FROM t2; -- 0ms;
SELECT -743215173 FROM v0; -- 0ms;
SELECT DISTINCT ((t2.c49 COLLATE BINARY) NOT BETWEEN (COUNT(*)) AND (((t1.c1) NOT BETWEEN (t1.c1) AND (t1.c1)))) FROM v0 WHERE ((NOT (LIKELY(DISTINCT x'')))) GROUP BY ((t1.c0 COLLATE NOCASE) ISNULL) HAVING (load_extension(t1.c1, t2.c48) IN ()) LIMIT -718423657 OFFSET 471468616;SELECT DISTINCT ((((((t1.c1)OR(v0.c0)))AND(t2.c5))) NOT NULL), ((((t2.c49) BETWEEN (v0.c0) AND (t2.c49)))>=(((((t1.c0)OR(t1.c2)))AND(t1.c0)))), (((((v0.c0) NOT NULL)))==((CASE WHEN t2.c5 THEN t1.c0 WHEN t1.c1 THEN t1.c1 WHEN t2.c49 THEN t2.c5 ELSE t1.c1 END))) FROM t2 WHERE (((((x'')||(x'')))<(((NULL)OR('-1913301028')))));SELECT CAST(((v0.c0) NOT BETWEEN (x'ab90') AND (t2.c5)) AS INTEGER), ((((t2.c65, t2.c49, t2.c49))<>((t1.c2, t1.c0, t2.c49))) IN ()), (~ (CAST(t2.c48 AS NUMERIC))) FROM t2, t1 WHERE ('QZSQ') ORDER BY ((CAST(t2.c5 AS BLOB)) ISNULL) ASC;SELECT ((AVG(t1.c2))>=(((((t1.c2)OR(t2.c65)))AND(t1.c2)))) FROM v0 WHERE (UNLIKELY((('|HC') NOT BETWEEN ('328957493') AND ('1912609104'))));SELECT DISTINCT (((t1.c0 IN ()))IS(t1.c1 COLLATE RTRIM)), ((v0.c0 COLLATE NOCASE) IS TRUE), ((((t1.c1) NOTNULL)) NOT BETWEEN (((t2.c48) BETWEEN (t1.c1) AND (x''))) AND (t1.c1 COLLATE RTRIM)) FROM v0, t2;SELECT ALL ((NULL)IS NOT(t1.c2)) COLLATE NOCASE FROM t1, v0 WHERE ((LOWER(x'a4f8') IN (4.71468616E8))); -- 1ms;
SELECT DISTINCT ((((((t2.c5) NOT NULL))AND(((t1.c1) IS TRUE))))AND(CAST(t2.c5 AS TEXT))), CAST((((v0.c0))>((t2.c48))) AS REAL), ((((((((NULL)AND(HEX(DISTINCT v0.c0))))OR((+ (NULL)))))OR(((t1.c2)/(t2.c5)))))OR(t1.c2 COLLATE RTRIM)) FROM v0, t2;SELECT DISTINCT RTRIM(CAST(t2.c5 AS INTEGER)), ((((((t2.c49)AND(t2.c48)))OR(0.4077790734425796))) ISNULL), (((~ (t1.c2)))IS NOT(((t2.c49)>=(t2.c49)))) FROM v0, t2;SELECT DISTINCT t2.c49 COLLATE RTRIM FROM t1;SELECT (((CASE t1.c1  WHEN t1.c2 THEN t2.c5 ELSE t1.c0 END))=((((t2.c5) IS FALSE)))), ((((((x'4708')+(t2.c65)))AND(((v0.c0)%(t2.c5)))))OR(0.24033200364680474)), DENSE_RANK() OVER () FROM t1, t2, v0 WHERE ((((((x'', NULL, x'0d07')) NOT BETWEEN ((-1677761337, 'Ra', '2017601217')) AND (('-729283233', NULL, -167202745)))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((((((t1.c2)OR(t1.c2)))AND(t2.c65)))OR(t1.c1)))OR(NULL)) COLLATE NOCASE FROM t1, t2 LEFT OUTER JOIN v0 ON ((CAST(t1.c1 AS NUMERIC))%(TYPEOF(t1.c0))) WHERE ((('1296539056') BETWEEN (CASE ''  WHEN '' THEN '' END) AND (((0.9420984310798924) NOT BETWEEN ('') AND (0.932437559641601))))) ORDER BY ABS((NOT (t2.c48))) ASC  NULLS LAST, ((((((t1.c2)OR(t2.c65)))AND(t2.c48))) ISNULL) DESC; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN t1.c0 THEN t1.c0 WHEN t2.c5 THEN t2.c5 WHEN t1.c2 THEN t1.c2 ELSE t2.c5 END)AND((- (-2.129575826E9)))))AND(CASE NULL  WHEN t2.c49 THEN t2.c49 END)))AND(COUNT(*))))OR(((((t2.c65)OR(v0.c0)))AND(v0.c0)))) FROM v0, t1 WHERE (CAST(((x'')GLOB(-7.43215173E8)) AS REAL));SELECT DISTINCT AVG(((t2.c49) NOTNULL)), TOTAL((((t1.c0))==((t1.c2)))) OVER (), t2.c49 FROM t1, v0 WHERE (CASE ((NULL) ISNULL)  WHEN ((x'') NOT BETWEEN (0X72d6487a) AND (-6.68991712E8)) THEN ((0.174468851075273)GLOB(-2.129575826E9)) END);SELECT ALL ((t2.c5 COLLATE BINARY)IS(((t1.c0)IS(t2.c49)))) FROM t1, t2 NOT INDEXED WHERE (0.9811470710442268); -- 0ms;
SELECT ALL json_type(CAST(NULL AS INTEGER)) FROM t2 WHERE ((((((((((((((((((((0xffffffffcdb32ca7)) NOT BETWEEN ((NULL)) AND ((x''))))AND(((((((((NULL)OR(0Xee6a93e)))OR('')))OR(NULL)))OR(0.8159289332601863)))))OR(NULL)))OR(NULL)))OR(((((NULL)OR(0.42097474101233356)))OR('632230815')))))AND(0.5104790146446406)))OR((((-1608212148)) NOT BETWEEN (('1491053237')) AND (('-505429629'))))))OR(((NULL)OR(x'1e83')))))OR((- (x''))))) ORDER BY (((((t2.c49)<>(t1.c2))))=((t2.c49 COLLATE RTRIM))) ASC  NULLS FIRST, t1.c2;SELECT CASE (('x*(n8OS')OR(t2.c65))  WHEN ((((((((t1.c2)AND(t1.c0)))AND(t1.c0)))AND(t2.c48)))AND(t2.c49)) THEN ((t2.c5)<<(t1.c2)) ELSE t2.c5 END FROM t2;SELECT COUNT(*) OVER ( PARTITION BY (((+ (t1.c1))) NOT BETWEEN ((((v0.c0, 6.606643774271781E-4, v0.c0)) BETWEEN ((x'c0de', t2.c48, t1.c2)) AND ((t1.c0, '', t2.c49)))) AND (((((v0.c0)AND(t1.c2)))AND(t1.c0)))), ((LIKELIHOOD(t2.c49, 0.4306759238715303)) IS TRUE)) FROM v0, t1 WHERE (((((NULL)<(x'')))>=(NULL)));SELECT ALL CAST(GLOB(NULL, v0.c0) AS NUMERIC) FROM t2, v0, t1 WHERE ((((-668991712)) NOT BETWEEN ((((NULL) NOT BETWEEN (x'19a4') AND (0.0173356615833945)))) AND ((((4.71468616E8) BETWEEN (NULL) AND (0.6343191030679141)))))); -- 0ms;
SELECT ALL TOTAL(ABS(DISTINCT t2.c49)) FROM t1, v0 WHERE (((CAST('2095249703' AS TEXT))IS NOT(((NULL) IS FALSE))));SELECT '' FROM t1, v0 WHERE (CASE 0.4077790734425796  WHEN NULL THEN NULL END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((t1.c1) NOT NULL))AND(SUM(t2.c5))))AND((NOT (t1.c1)))), CAST(CASE WHEN t2.c48 THEN t1.c0 END AS BLOB), (('-1393961261') BETWEEN (((t2.c48) NOT BETWEEN (t1.c0) AND (t1.c1))) AND (t1.c1 COLLATE BINARY)) FROM v0, t2, t1 INDEXED BY i30 WHERE (((((0x39b36d4a) NOT BETWEEN (249997630) AND (' %')))<=(IFNULL('', NULL))));SELECT DISTINCT ((((((((((((t2.c49)AND((((t2.c48)) NOT BETWEEN ((t1.c1)) AND ((t2.c48))))))OR(((t2.c5) ISNULL))))OR(QUOTE(t2.c49))))AND(((t2.c65) BETWEEN (t2.c48) AND (t1.c1)))))OR(((((t2.c49)AND(v0.c0)))OR(t2.c49)))))OR(((((t1.c0)OR(t1.c1)))AND(t1.c0)))) FROM t1;SELECT ALL SUM((- (t1.c1))), (CASE WHEN t1.c0 THEN 0.46816411491728915 END IN ()), ((((t2.c5) NOT NULL)) NOT NULL), 0.6904568366399473, ((t2.c48)&(t2.c5)) COLLATE NOCASE FROM t1 WHERE ((CAST(-1393961261 AS NUMERIC) IN ((('988163428')IS(0.49083336126295884)))));SELECT DISTINCT x'' FROM t2; -- 0ms;
SELECT CASE ((t2.c5) NOTNULL)  WHEN 0.30384140189949216 COLLATE BINARY THEN RTRIM('_') END FROM v0, t1;SELECT DISTINCT CASE t2.c49  WHEN ((t2.c48)<('[N')) THEN TYPEOF('') END FROM v0, t1 WHERE (((((('0.2563794563017747' IN ()))AND(((((1.39867873E8)OR(x'')))AND(NULL)))))OR(CAST(-977174676 AS INTEGER))));SELECT DISTINCT GROUP_CONCAT(CAST(t2.c48 AS BLOB)) FROM v0, t2, t1; -- 0ms;
SELECT DISTINCT ((((CASE t2.c49  WHEN t1.c1 THEN t2.c48 WHEN t2.c48 THEN t2.c49 WHEN NULL THEN t1.c2 END)AND((t2.c48 IN ()))))AND((((t2.c49)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))), (((((t1.c0)AND(t2.c48)))OR(t1.c0)) IN ()), (((- (t1.c1)))OR(COUNT(v0.c0))), AVG(((t2.c5) NOT BETWEEN (t1.c2) AND (t1.c1))), ((t1.c2)OR(t1.c2)) COLLATE BINARY FROM v0;SELECT DISTINCT MAX((- (t2.c48)), ((t1.c0) BETWEEN (x'4190') AND (t2.c5))) FROM v0;SELECT ((((((((((x'4def177d')OR(t2.c49)))AND(t1.c0)))OR(v0.c0)))OR(t2.c48))) BETWEEN (t2.c5) AND ('MQ阍f')), ((((t1.c2) IS FALSE)) NOT BETWEEN ('-1677761337') AND (((t2.c48)||(t1.c1)))), ROW_NUMBER() OVER () FROM v0, t1 WHERE (CASE NULL  WHEN 968060234 THEN 0x1ac8e53c WHEN 6.606643774271781E-4 THEN x'dc3f' WHEN -1.38100352E9 THEN 0.5146149896858769 ELSE '' END COLLATE RTRIM) GROUP BY (((- (v0.c0)))GLOB((~ (t1.c2))));SELECT ALL CASE WHEN CAST(t2.c65 AS TEXT) THEN ((t2.c48) IS TRUE) END, (((~ (t2.c49)))GLOB('471033296')), ((((((((t1.c1)OR(t2.c5)))AND(t1.c2)))OR(t2.c48)))AND(t1.c2)) COLLATE RTRIM FROM t2, t1; -- 0ms;
SELECT ALL NULL, CASE (((t1.c2, v0.c0, t2.c49)) NOT BETWEEN ((t2.c5, t2.c49, v0.c0)) AND ((v0.c0, t1.c2, t1.c0)))  WHEN t1.c1 THEN ABS(t2.c5) END, (((t2.c5)) BETWEEN ((CASE t2.c49  WHEN t1.c0 THEN t1.c2 ELSE t1.c0 END)) AND ((CASE WHEN t2.c5 THEN t1.c0 END))) FROM v0, t1;SELECT DISTINCT v0.c0, CAST(t2.c48 AS REAL), (load_extension(t1.c2) IN ()) FROM v0 WHERE (CAST(')Bn7ngyo' AS TEXT)) GROUP BY ((((((t2.c5)AND(t2.c5)))AND(t1.c0)))<<(((v0.c0) ISNULL))), ((((t2.c49)AND(((t2.c65)>=(t1.c0)))))OR(CASE t2.c49  WHEN t1.c1 THEN t2.c49 ELSE t1.c1 END)), load_extension(((((t2.c65)AND(t1.c1)))AND(t2.c65)));SELECT ALL '' FROM t1, v0, t2; -- 0ms;
SELECT ALL (('*L')AND(SUM(t1.c2))) FROM v0, t1, t2 WHERE (COALESCE(((NULL)LIKE(x'')), (NOT ('0.2563794563017747')))); -- 0ms;
SELECT DISTINCT ((((('1684322183' IN (t2.c5, t2.c5)))AND(CAST(x'31c6' AS REAL))))AND(t1.c2 COLLATE NOCASE)), (NOT (t2.c5)), CAST('' COLLATE RTRIM AS REAL), ((((x'')AND(CAST(t2.c65 AS REAL))))OR(CAST(v0.c0 AS INTEGER))), ((((((v0.c0) IS TRUE))OR(((((v0.c0)OR(t2.c48)))AND(t2.c65)))))OR(CAST(v0.c0 AS NUMERIC))) FROM v0, t2 GROUP BY CAST(t1.c0 AS INTEGER) COLLATE NOCASE COLLATE NOCASE;SELECT MIN((- (t1.c2))) FROM v0, t2 LIMIT 200575447 OFFSET -505429629;SELECT ALL ((((t2.c65) IS TRUE)) NOT BETWEEN (((t1.c1)>(t2.c48))) AND ((((t2.c48)) BETWEEN ((t2.c48)) AND ((t1.c1))))), (((((((('_[')AND(t2.c49)))OR(t2.c49)))OR(v0.c0)))OR(t1.c1)) COLLATE RTRIM, GROUP_CONCAT(t2.c5) FILTER(WHERE (~ (((((t2.c49)OR(t2.c49)))OR(t1.c2))))) OVER (), LAST_VALUE((- (((t1.c0)<<(t2.c65))))) OVER (), ((((t1.c1)AND((('-701576458')LIKE(v0.c0)))))OR(((t2.c5)*(t1.c2)))) FROM v0, t1, t2 WHERE (CASE ((NULL) IS FALSE)  WHEN CASE WHEN NULL THEN '2014657997' END THEN CAST('l\3' AS INTEGER) END); -- 0ms;
SELECT ALL AVG(((t1.c1) NOT BETWEEN (t2.c5) AND (t1.c0))) FROM v0 LIMIT -1191877986 OFFSET -9223372036854775808;SELECT ALL ((((t2.c48)>(NULL)))>=(CASE t1.c1  WHEN t2.c49 THEN t1.c0 WHEN t2.c65 THEN t1.c1 WHEN t2.c65 THEN t1.c0 WHEN t2.c48 THEN t1.c0 WHEN '' THEN t1.c2 ELSE t2.c48 END)), ((((((t2.c48) BETWEEN (t2.c48) AND (t2.c48)))AND(0.43749258060646357)))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN t2.c5 THEN t1.c1 WHEN t1.c0 THEN 0.7259131763548646 WHEN v0.c0 THEN t2.c65 WHEN t1.c1 THEN t1.c2 WHEN t2.c49 THEN t1.c2 WHEN t2.c5 THEN t1.c1 END)), ((t2.c65 COLLATE BINARY) NOT NULL), COUNT(*) OVER (), LOWER(DISTINCT ((((((((t1.c1)AND(x'caf8')))OR(t2.c5)))OR(t1.c2)))AND('471033296'))) FROM t2 WHERE ((NOT (x'0282544c')) COLLATE NOCASE) GROUP BY (NOT (((((((((t1.c1)OR(130737356)))OR(0Xffffffffffe329c5)))AND(0.562101386154963)))AND(t2.c49)))), ((CASE WHEN t1.c0 THEN t1.c0 WHEN t2.c65 THEN t2.c5 WHEN t1.c0 THEN v0.c0 END)!=(((t2.c5) IS TRUE))), (~ ((NOT (t2.c48))));SELECT ALL ((((t2.c48) NOT BETWEEN (v0.c0) AND (v0.c0))) NOTNULL), ((t2.c49) IS TRUE) COLLATE NOCASE, x'' FROM v0, t2 WHERE (((((0.19149997171009858)+(x'')))||(CASE WHEN x'' THEN 'hE07' ELSE 4.493735E8 END))); -- 0ms;
SELECT ('' IN (v0.c0)), CASE WHEN ((t1.c0)<>(x'')) THEN t2.c49 END, (((((t2.c48))>=((t2.c49)))) IS TRUE) FROM t1 CROSS JOIN v0 ON ((t2.c65 COLLATE RTRIM) NOT NULL);SELECT DISTINCT COUNT((((t1.c1)) BETWEEN ((t1.c1)) AND ((t2.c48)))) OVER ( ORDER BY CASE WHEN t1.c2 COLLATE RTRIM THEN ((t1.c0) NOTNULL) END, (((((t2.c49)AND(t2.c48)))OR(t2.c48)) IN ((((t2.c49))!=((t2.c65))))), t1.c0 DESC) FROM v0, t1, t2 WHERE (CASE WHEN CASE WHEN 0.20167512380326136 THEN NULL END THEN CASE '739491013'  WHEN 0x6eead7e7 THEN x'' WHEN NULL THEN 's倫Ji' WHEN 0.8251640347120347 THEN '1281740646' ELSE '' END WHEN CAST(NULL AS TEXT) THEN (~ (x'')) WHEN (('-310363936')>>(1999531412)) THEN ((-2.129575826E9) BETWEEN (0.4429224914269412) AND (x'923b')) END) LIMIT -402222336 OFFSET -1513928556; -- 0ms;
SELECT DISTINCT ((UNLIKELY(0.9982604560070325)) BETWEEN (((t2.c5)>(t2.c5))) AND (((t1.c0)==('')))) FROM t2, v0 WHERE ((((((NULL)) BETWEEN (('-1476931767')) AND (('-k_i3'))))>(((NULL)*('\r\r'))))) GROUP BY v0.c0, ((t2.c65) NOT BETWEEN (t2.c65) AND (t1.c2)) COLLATE NOCASE, CASE WHEN (((t1.c2))==((t2.c49))) THEN IFNULL(t2.c5, t2.c49) END, 0.9548923499664127, (- (t1.c1 COLLATE BINARY)) ORDER BY ((0xffffffffa220b4b8) NOT BETWEEN (((t1.c0)|(t1.c0))) AND (t2.c49)) ASC  NULLS FIRST;SELECT ((((((t1.c1)OR(1687699038)))AND(UPPER(t1.c1))))AND(GROUP_CONCAT(t2.c65))), CAST(LIKELY(DISTINCT t2.c65) AS TEXT), CASE AVG(t2.c48)  WHEN ((((((((t1.c0)OR(t2.c49)))AND(t1.c0)))AND(t2.c48)))AND(t2.c5)) THEN (t2.c5 IN ()) WHEN RTRIM(t1.c1) THEN CAST(t2.c49 AS INTEGER) WHEN (t2.c49 IN ()) THEN LIKELY(DISTINCT t1.c0) ELSE ((t1.c0)<<(t2.c48)) END FROM v0;SELECT ALL ((((t1.c0) IS TRUE)) ISNULL), ((t1.c0 COLLATE RTRIM) NOT NULL), (((t2.c65 IN ())) NOT BETWEEN (((t2.c49)LIKE(t2.c49))) AND (((v0.c0)*(t2.c49)))) FROM t1, v0 WHERE (CASE (~ (x''))  WHEN CASE WHEN -743215173 THEN 'Ke?aWV偦#' END THEN ('Q_' IN ()) ELSE (('MG')&(0x25967794)) END);SELECT MAX(((((((((0.48255342223893005)OR(t1.c1)))OR(t2.c49)))OR(t2.c49)))AND(t2.c48))) FROM t2, v0, t1 WHERE (NULL); -- 0ms;
SELECT TOTAL(((t1.c2)OR(t2.c65))) OVER (), ((CAST(t2.c5 AS REAL)) NOTNULL), ((((t1.c1) NOT BETWEEN (t2.c49) AND (t1.c1)))%(AVG(t2.c49))), ((((((((MAX(t2.c5))OR(0.4491126361937743 COLLATE RTRIM)))OR((t1.c2 IN ()))))AND(((t2.c48) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((('1912609104')||(t1.c2)))), ((((((t1.c1)AND(t2.c49)))AND(t2.c49)))AND(((((t2.c65)AND('O{')))OR(0.9811470710442268)))) FROM t1, t2, v0; -- 0ms;
SELECT DISTINCT LAST_VALUE(t2.c48 COLLATE BINARY) OVER () FROM t2, v0; -- 0ms;
SELECT GROUP_CONCAT(((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1))) OVER () FROM t2, t1, v0; -- 0ms;
SELECT DISTINCT CAST('1394461775' AS REAL), ((MIN(t1.c0)) BETWEEN (((t1.c0) IS FALSE)) AND (TOTAL(v0.c0))), v0.c0 COLLATE NOCASE FROM t1, t2, v0; -- 0ms;
SELECT ALL COUNT(*) FROM v0 NOT INDEXED, t2, t1; -- 1ms;
SELECT DISTINCT CAST(t2.c48 AS REAL) FROM t2, v0 WHERE ((((((((((1.684322183E9 IN ()))AND(CAST(1447494356 AS REAL))))AND(CASE '-2129575826'  WHEN '-963735551' THEN '' END)))OR('')))OR(((('', '', NULL, NULL, ''))>=((0.8976639411400462, x'a80f', NULL, 0.3241798078403808, -4.02222336E8)))))); -- 0ms;
SELECT DISTINCT COUNT(((t1.c1)-(v0.c0))) FROM v0;SELECT CASE WHEN ((t2.c48)OR(t2.c5)) THEN ((t1.c0) NOT BETWEEN ('') AND (t1.c2)) ELSE t1.c1 END FROM v0, t2, t1 WHERE (CASE WHEN ('382417777' IN (0.5146149896858769, NULL)) THEN ((('1011844671', '', 'd嵞')) NOT BETWEEN (('', NULL, 0.11643145581032066)) AND ((0xffffffff8314979f, '1281740646', 988163428))) ELSE TIME('', NULL, '-1889851', '-943506655', '䋱Gs&⊺%<') END) ORDER BY (((NOT (t2.c48))) NOT BETWEEN (CAST(NULL AS REAL)) AND ((t1.c1 IN ()))) DESC; -- 0ms;
SELECT ALL json_array(t1.c2, t2.c65) COLLATE RTRIM, (((t2.c48 COLLATE NOCASE))>=((COUNT(v0.c0)))), MIN(CASE t1.c2  WHEN t2.c49 THEN v0.c0 WHEN t2.c48 THEN t2.c5 WHEN t1.c1 THEN t1.c2 ELSE x'' END) FROM t2, t1 WHERE (((((x'') ISNULL)) NOT BETWEEN (ABS(DISTINCT 0Xffffffffa1af3a5a)) AND ((('%')<=(0Xffffffffb8127a81))))) ORDER BY (((t2.c5 IN (t2.c49, t1.c1)))%((NOT (t1.c1)))) ASC, ((((((((((((t2.c65)OR(-1.393961261E9)))AND(t2.c65)))OR(((t2.c65) ISNULL))))OR(((((t1.c0)OR(t1.c0)))OR(v0.c0)))))OR(CAST(v0.c0 AS BLOB))))OR(LOWER(t1.c1)))  NULLS FIRST LIMIT 172243117 OFFSET -497209195;SELECT ((((v0.c0)AND(t1.c1)))AND(0.02180924437501275)) COLLATE RTRIM FROM v0, t1, t2 WHERE ((NOT (CASE WHEN -1111370880 THEN NULL WHEN 0.7643462314350041 THEN NULL WHEN 0.7931370199823328 THEN '' END))) ORDER BY CAST((((v0.c0))<=((t2.c5))) AS INTEGER), (+ (((t1.c1) BETWEEN (t1.c0) AND (t2.c49))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX(CASE t2.c5  WHEN v0.c0 THEN t2.c65 WHEN v0.c0 THEN t2.c5 WHEN t2.c5 THEN t1.c2 END), LIKE(NULL, (((('-1121944491')OR(0X6765be2e)))AND(t2.c5)), '1'), (t2.c48 COLLATE NOCASE IN ()) FROM t1, t2, v0 WHERE ((- (CAST(0.7497053228697745 AS REAL)))) GROUP BY ((t1.c1)>=(((t1.c1)GLOB(t1.c2)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((((((((t1.c1 COLLATE NOCASE)OR(((t2.c48)|(t2.c65)))))OR(t2.c49)))OR(CASE WHEN t2.c48 THEN t1.c1 WHEN t1.c1 THEN t2.c49 WHEN v0.c0 THEN t2.c65 END)))AND(CASE t1.c1  WHEN t2.c65 THEN t1.c2 ELSE t1.c1 END))) FROM t1 WHERE ((NOT (((x'2f3376ce') NOT NULL))));SELECT ((t2.c5) NOTNULL), CAST(((t2.c48) NOT BETWEEN (t2.c65) AND (t2.c49)) AS REAL), x'7693' FROM t1;SELECT DISTINCT (NOT (0.3624836604940115)) FROM t2, t1, v0; -- 0ms;
SELECT DISTINCT ((((t1.c2 COLLATE BINARY)AND(v0.c0)))OR((t2.c5 IN ()))), NTH_VALUE(t2.c48, (((t1.c1)) BETWEEN ((((t1.c1) IS TRUE))) AND ((((t2.c48) IS FALSE))))) OVER (), GROUP_CONCAT(CASE WHEN t2.c48 THEN t2.c65 ELSE t1.c1 END) OVER () FROM t2, v0, t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM v0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0, t2; -- 0ms;
SELECT DISTINCT ((t1.c0)IS(t2.c48)) COLLATE BINARY FROM v0, t2, t1 WHERE (CASE (NOT (0.8332930967781589))  WHEN x'bb249070' COLLATE NOCASE THEN ((NULL)*(0.8258317305505748)) ELSE (('|45>')==('2017601217')) END); -- 0ms;
SELECT CAST(((t1.c1) IS TRUE) AS NUMERIC) FROM t1, v0 WHERE ((((x'')) BETWEEN ((((x'') IS FALSE))) AND ((((((x'')AND('731749674')))AND('')))))); -- 0ms;
SELECT RANK() OVER () FROM v0, t2 WHERE ((((NULL IN ())) NOT BETWEEN (-668991712 COLLATE NOCASE) AND (((0.1467656189002332)>=(NULL))))); -- 0ms;
SELECT ALL COALESCE(DISTINCT CAST(t2.c49 AS REAL), ((t1.c0) ISNULL)), CAST((t2.c48 IN ()) AS REAL), ((((t1.c0)OR(t1.c1)))AND(t2.c65)) COLLATE NOCASE FROM v0, t2, t1 NOT INDEXED WHERE (HEX(CASE WHEN 'U	PYL&勤' THEN x'9710' WHEN x'54ea' THEN '1346346047' WHEN -183490772 THEN 'O2OP' END)); -- 0ms;
SELECT (+ (((t1.c1)%(t2.c49)))) FROM t1, v0, t2 WHERE (((CAST(x'' AS BLOB)) BETWEEN (CASE WHEN x'' THEN 0.5104790146446406 ELSE '' END) AND ('fHaozECY' COLLATE RTRIM))) ORDER BY LIKELIHOOD(IFNULL(NULL, x'a32f'), 0.37564737327291653) ASC, ((((t1.c0)-(t1.c2))) NOT BETWEEN (((t1.c1) BETWEEN (t2.c49) AND (1.0802391E8))) AND (((t2.c49) ISNULL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t2.c49)>>(t2.c48)))*(0.5104790146446406)), (((t1.c0)%(t2.c48)) IN (v0.c0 COLLATE RTRIM)), CASE WHEN (((t1.c0))<>((t2.c5))) THEN ((t2.c49) NOTNULL) END FROM t2 ORDER BY ((((t1.c0) NOT BETWEEN ('?+	uH') AND (t1.c1)))>((t1.c2 IN ()))) ASC;SELECT ((CAST(t2.c65 AS BLOB))*(t2.c48)), ((((((((MIN(v0.c0))OR(TOTAL(t1.c1))))AND((~ (t2.c48)))))AND((((t1.c2, 0.615766233722654, t2.c5)) BETWEEN ((t2.c48, t2.c48, t2.c48)) AND ((t1.c1, t2.c5, t2.c49))))))OR(CAST('-310363936' AS REAL))), (x'' IN ()) FROM t1, v0 WHERE ((((((((((('-1841505563') NOT BETWEEN (x'') AND (-1.7976931348623157E308)))OR((~ ('')))))AND(((((x'')OR(0.7518050020704844)))OR(NULL)))))AND(('^冥' IN ()))))OR((~ ('6}yC6!\Ir')))));SELECT ALL (((((v0.c0)AND(t2.c5)))OR(t1.c1)) IN (CAST(t1.c0 AS BLOB), (((t1.c2)) NOT BETWEEN ((t2.c65)) AND ((t2.c65))))), (((t2.c48 IN ()))+((((NULL))<=((t1.c2))))), ((((t1.c2)IS NOT(t2.c49))) ISNULL) FROM t1, t2, v0 WHERE (((-1888656041 COLLATE BINARY) NOT NULL)); -- 0ms;
SELECT DISTINCT (((((t2.c65))<=((v0.c0))))>('-943506655')) FROM v0, t2, t1; -- 0ms;
SELECT DISTINCT (((((('*6'))>=((t2.c49))), CASE WHEN t2.c65 THEN t2.c65 WHEN x'' THEN t2.c48 WHEN t1.c0 THEN t1.c1 WHEN t2.c49 THEN t1.c2 WHEN v0.c0 THEN t2.c5 END, (((t1.c1)) BETWEEN ((t2.c65)) AND ((t1.c0))), '{}', ((t2.c48)IS(x'672e'))))>=((((((((((x'')OR(t1.c0)))OR('80831739')))AND(t2.c48)))AND(t1.c0)), CHANGES(), CAST(t2.c5 AS BLOB), AVG(t2.c5), v0.c0))) FROM v0, t1 WHERE (CAST(0.07074263919636814 COLLATE NOCASE AS TEXT));SELECT DISTINCT SUM(GLOB(t2.c65, t2.c5) COLLATE RTRIM) OVER () FROM t2, v0, t1; -- 1ms;
SELECT DISTINCT LOWER((((t1.c2))<>((t1.c2)))), CAST(((t1.c2) NOT BETWEEN (v0.c0) AND (t1.c0)) AS BLOB), SUM(((0.6753085856270421)OR(t1.c0))) OVER () FROM t2, v0 WHERE (((((((((CASE WHEN 0.4494366218263498 THEN NULL END)AND((((0.29439316429294893))<>((756025075))))))AND(((x'') NOT BETWEEN (0.5439855317992264) AND (x'')))))AND((((NULL))!=((0xffffffffc7c33b21))))))AND(((x'7090')OR(887264824))))) ORDER BY ((((v0.c0)|(t2.c49))) NOT BETWEEN (((((t2.c48)OR(t2.c48)))AND(v0.c0))) AND (((t1.c1)!=(v0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT SUM(CASE t1.c1  WHEN t1.c0 THEN x'56b4' WHEN v0.c0 THEN t2.c48 WHEN t1.c1 THEN t2.c49 END) FROM t1 WHERE (CAST('6}YC6!\IR' AS TEXT)) GROUP BY CASE WHEN ((t1.c0)+(t2.c49)) THEN MAX(t2.c48, '') END, ((CAST(t1.c0 AS BLOB)) ISNULL), ((((NOT (t1.c0)), (((t2.c65)) NOT BETWEEN ((t2.c48)) AND ((t2.c48))), CAST(t2.c48 AS INTEGER)))>(((+ (t2.c5)), ((((((((NULL)OR(t2.c65)))OR(t1.c0)))OR(v0.c0)))AND(0.2893459176290766)), LIKELIHOOD(v0.c0, 0.045411054333336365)))), (((t1.c2)|(0.7242397318282663)) IN ()), (((''''))<((CAST(t2.c48 AS BLOB))));SELECT ALL ((((((t1.c2)IS NOT(v0.c0)))OR(((t2.c65)||(t2.c48)))))OR(json_array('?+	uH', v0.c0, NULL, t2.c48))) FROM t2, t1, v0 WHERE ((((NULL IN (NULL))) BETWEEN ((((0.7822373393938535, 0.7832890580080017, 0.15273068987564153)) NOT BETWEEN ((0.6338635375545406, NULL, 'gs')) AND ((-776904372, 0.7736214792102015, '趮c?g<')))) AND (((NULL) ISNULL)))) LIMIT 2095249703 OFFSET -1533589647; -- 0ms;
SELECT ALL NULL, ((AVG(t1.c0))LIKE((NOT (t2.c49)))), ((t2.c49)<(t1.c1 COLLATE RTRIM)) FROM t1 WHERE ((+ (NULL)) COLLATE NOCASE);SELECT (((((t2.c65))<=((t2.c5))))<=(0.4590150654110051)) FROM v0;SELECT ALL 'DV' FROM t2, v0 WHERE ((('0.7242397318282663') BETWEEN (((((0.8003368208305187)OR('0.5146149896858769')))OR(x'37e9'))) AND (''))) LIMIT -200131269 OFFSET 1657719292; -- 0ms;
SELECT ALL GROUP_CONCAT(x'') FILTER(WHERE ((t2.c5)>>(t2.c48)) COLLATE NOCASE) OVER ( PARTITION BY ((v0.c0)>>(t1.c0)) COLLATE RTRIM, CASE LOWER(t1.c0)  WHEN (((t2.c65)) NOT BETWEEN ((t2.c65)) AND ((t2.c65))) THEN LIKELY(t2.c65) END, (((((t2.c5)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))!=(HEX(t1.c0))), x'') FROM t2, t1;SELECT DISTINCT x'' FROM t2, v0 WHERE ((CASE 0.478293940525203  WHEN ')\' THEN 0Xffffffff856f7e7b END IN ())); -- 0ms;
SELECT GROUP_CONCAT(((t1.c0)=(t1.c2))) FROM t2;SELECT (~ (x'')) FROM t2, t1 WHERE (CASE (~ (x'bf9e'))  WHEN (- (']?U3>?')) THEN 0.596373281430653 ELSE CASE WHEN 0.054212650429846354 THEN x'' WHEN NULL THEN x'' WHEN 0.12974383544927015 THEN 0.6574006487175755 WHEN 0.7748243086826965 THEN x'e1db' WHEN NULL THEN '0.7822373393938535' END END); -- 0ms;
SELECT ALL CAST(CASE v0.c0  WHEN t2.c5 THEN x'e1b0' WHEN t1.c1 THEN v0.c0 WHEN t2.c65 THEN t1.c0 ELSE t2.c48 END AS REAL) FROM t1;SELECT ALL (((v0.c0, t1.c1, t2.c48, v0.c0, t2.c49)) NOT BETWEEN (((t1.c2 IN (t2.c65)), (t2.c48 IN ('Ꮷ?Jg', t1.c1)), ((((t2.c49)OR(v0.c0)))OR(t1.c0)), (((t2.c49, t2.c5, t2.c65, t2.c65, t1.c1))>((t1.c0, t1.c0, t2.c65, t2.c5, t1.c1))), ((t1.c2)|(t2.c5)))) AND ((((t1.c0)OR(t2.c48)), t2.c65, (((t1.c0)) BETWEEN ((v0.c0)) AND ((t2.c5))), ((((t1.c0)OR(t2.c5)))OR(t2.c48)), UPPER(v0.c0)))) FROM v0, t2, t1 ORDER BY '968060234'  NULLS FIRST; -- 0ms;
SELECT ALL LIKELY(((t1.c2) IS TRUE)) FROM t1, v0 ORDER BY 1763775249 ASC, ((MIN(t2.c5, t1.c1, v0.c0, v0.c0, t2.c48, t1.c1))>=(((((t2.c49)OR(t2.c5)))AND(0.7259131763548646)))) ASC  NULLS LAST, t1.c2  NULLS FIRST;SELECT DISTINCT 0.7673980023738038 FROM t1, t2, v0 WHERE (((((x'') NOT BETWEEN ('1346346047') AND ('-1086086113'))) NOT NULL)); -- 0ms;
SELECT ALL ((((((((CAST(t1.c0 AS INTEGER))OR(CASE t2.c5  WHEN t2.c48 THEN t2.c48 WHEN v0.c0 THEN t2.c48 WHEN t1.c1 THEN v0.c0 ELSE t2.c49 END)))AND(x'6b4f')))OR(((NULL) NOT NULL))))AND(COALESCE(DISTINCT t2.c48, t2.c49, t2.c49, t2.c49))), -372276042, t1.c1 COLLATE NOCASE FROM t2, v0 WHERE (((((('')AND('uzc l矖젝'))))>((((('I+'))!=((0.04833422310262525)))))));SELECT ALL ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c2)LIKE(t1.c1))) AND (((((t2.c48)AND(t2.c48)))AND(NULL)))) FROM t1, v0 ORDER BY t2.c5, t1.c2 COLLATE RTRIM ASC  NULLS LAST LIMIT 1137232348;SELECT DISTINCT (NOT (((((t2.c49)OR(t1.c1)))AND(t2.c65)))), (((t2.c5 IN ())) BETWEEN ((v0.c0 IN ())) AND ((((t2.c49)) BETWEEN ((t2.c49)) AND ((t2.c65))))), COUNT(*) OVER (), CAST(t1.c1 AS INTEGER), (((((t1.c0)) BETWEEN ((t2.c65)) AND ((t1.c0)))) NOT BETWEEN (TRIM(DISTINCT 0.6338635375545406)) AND (0)) FROM t1, t2, v0 WHERE (CASE ((2117668409) NOTNULL)  WHEN ((((((((x'')OR(NULL)))AND(NULL)))OR(0xfffffffff497a10c)))AND(0x244f5f7b)) THEN (((x'1834')) BETWEEN ((1.912609104E9)) AND (('0.3621551262539141'))) END); -- 0ms;
SELECT DISTINCT ((((((t1.c1)>>(t2.c5)))OR(rtreenode(v0.c0, t2.c49))))AND((((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))) FROM v0, t1, t2; -- 0ms;
SELECT ALL (~ (((v0.c0) IS FALSE))), ABS(((t2.c48)<<(t2.c65))), CASE ((t2.c5) IS TRUE)  WHEN ((t2.c48)-(t1.c0)) THEN ((0.9221321684253645) NOT BETWEEN (t2.c48) AND (t1.c1)) WHEN (NOT (t1.c0)) THEN ((((t1.c1)AND(t2.c65)))AND(x'3e73')) WHEN t2.c5 THEN TOTAL(t2.c65) WHEN t1.c2 COLLATE NOCASE THEN CAST(t2.c65 AS INTEGER) WHEN CAST(0.9221321684253645 AS INTEGER) THEN TOTAL('Mf|T{') END FROM v0;SELECT DISTINCT ((((((((t1.c2 COLLATE BINARY)OR(CASE WHEN t1.c2 THEN t2.c65 END)))OR(CASE t2.c5  WHEN t2.c48 THEN t1.c0 ELSE t2.c49 END)))AND(((t2.c49) NOT BETWEEN (t1.c2) AND (t1.c1)))))AND(v0.c0)) FROM t1, t2;SELECT '' FROM t1, t2, v0; -- 0ms;
SELECT ALL (CAST(v0.c0 AS INTEGER) IN ()) FROM v0, t2 WHERE (CASE WHEN '%' THEN 0.07382149367583091 ELSE '' END COLLATE NOCASE); -- 0ms;
SELECT (((t2.c49)) BETWEEN ((CAST(t1.c1 AS REAL))) AND ((((t2.c65)>(t2.c48))))), HEX(CASE t2.c49  WHEN t2.c48 THEN NULL ELSE t2.c5 END), NULL FROM t2, t1, v0 WHERE (CAST((- (-668991712)) AS BLOB)) LIMIT 1497460346; -- 0ms;
SELECT DISTINCT ((((t2.c49) BETWEEN (t2.c5) AND (t2.c65))) NOT BETWEEN (AVG(t2.c65)) AND (t2.c65 COLLATE RTRIM)) FROM t2, v0 WHERE (((CAST('X궔' AS INTEGER))%(CASE WHEN NULL THEN '' ELSE NULL END))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(t1.c2) OVER () FROM t1, v0, t2; -- 0ms;
SELECT ALL SUM(UPPER(t2.c5)) OVER () FROM v0, t2 WHERE (NULL); -- 0ms;
SELECT DISTINCT NULL FROM v0 GROUP BY ((CAST(t1.c0 AS BLOB))>=(ROUND(t1.c0, t2.c65))) HAVING ((t2.c48) IS TRUE) ORDER BY SQLITE_COMPILEOPTION_USED((t2.c65 IN ())) ASC;SELECT ALL 'x}}.0zkc' FROM t2; -- 0ms;
SELECT DISTINCT (((t2.c5, t1.c1, t2.c48)) NOT BETWEEN ((((t1.c2) NOT BETWEEN (x'') AND (t2.c5)), CAST('806057796' AS BLOB), TOTAL(t1.c0))) AND ((t2.c48 COLLATE BINARY, ((t1.c0)==(t2.c5)), ((v0.c0) NOTNULL)))) FROM t2, t1 WHERE ((NOT ((NULL IN ()))));SELECT DISTINCT ((t1.c0 COLLATE RTRIM) NOTNULL), LEAD(((t1.c1)LIKE(t1.c0)), CASE WHEN CASE t1.c2  WHEN t1.c2 THEN t1.c0 ELSE t1.c0 END THEN (~ (t1.c0)) ELSE CAST(t1.c0 AS INTEGER) END, ((((t1.c1) BETWEEN (t1.c1) AND (t1.c0)))!=(((t1.c2)*(x''))))) OVER (), CAST((t2.c65 IN (0.3859017006206571, t2.c48)) AS INTEGER) FROM t1 WHERE ((((((('756025075') BETWEEN (x'7f25') AND (NULL)))AND((('') IS FALSE))))AND(((0.5540701352447739)-(x'df4a'))))) GROUP BY ((t2.c65) NOT BETWEEN (((t2.c5) NOTNULL)) AND (t2.c65 COLLATE NOCASE)) HAVING ((((t2.c5) BETWEEN (t1.c2) AND (v0.c0)))==(((((t1.c0)AND(t1.c0)))AND(t2.c48)))) LIMIT 1023097971 OFFSET -923780219;SELECT 8.0831739E7 FROM v0 WHERE (LENGTH(((((NULL)AND('-1634103857')))OR(x'')))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM v0 WHERE (CAST(0.35802405178888597 AS BLOB) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT ((- (v0.c0)) IN ()) FROM t1, t2, v0 LIMIT -555216934; -- 0ms;
SELECT DISTINCT json_array_length(((t2.c48)>>(t1.c2))) FROM t1, v0, t2; -- 0ms;
SELECT ((v0.c0 COLLATE BINARY) BETWEEN (CASE x'f703'  WHEN v0.c0 THEN t2.c5 END) AND (CAST(t1.c1 AS NUMERIC))) FROM t2 WHERE (((GLOB(0.5832491903902933, 0.9174480999877198)) IS FALSE)) LIMIT 316952619;SELECT DISTINCT ((MIN(t2.c65))<(MIN(t2.c5))) FROM v0, t1, t2; -- 0ms;
SELECT DISTINCT -1.841505563E9, v0.c0, ((((((((((x'')-(t2.c48)))AND(CAST(t1.c1 AS NUMERIC))))OR(((t1.c1) NOTNULL))))OR(((t1.c2) BETWEEN (t2.c49) AND (t1.c0)))))OR(((t1.c1) BETWEEN (t1.c2) AND (t1.c2)))) FROM t2, t1 WHERE (((x'')AND(NULL)) COLLATE BINARY) LIMIT -1293563427;SELECT DISTINCT CASE (~ (t2.c49))  WHEN CASE WHEN 0.2955065075508361 THEN t1.c0 ELSE t1.c0 END THEN ((t2.c5) BETWEEN (t1.c2) AND (t2.c48)) END, json_array_length(((t2.c48)/(t2.c48))), (((t1.c2 IN ())) IS FALSE) FROM t1 WHERE ((+ ((((('630618004')AND(NULL)))OR(0.3465011689930313)))));SELECT DISTINCT ((((((t1.c2) IS TRUE))AND(x'b8c0')))OR(CASE WHEN t1.c1 THEN t2.c5 ELSE t1.c0 END)) FROM v0, t1 WHERE ((((((0.735952975009847, 0.02180924437501275, '-749503940', 1314704126, 0.8003368208305187))>((NULL, -2.129575826E9, NULL, '', '8sRs'))))LIKE((x'' IN (x''))))) GROUP BY (((- (t2.c49))) BETWEEN ((+ ('1905367265'))) AND (t2.c49)) HAVING UNLIKELY(((t1.c2) NOT NULL)) LIMIT -986489561;SELECT DISTINCT (((NOT (0.3320139883043298)))>=(((((v0.c0)OR(t2.c48)))AND(t2.c5)))) FROM t1, t2 WHERE ((0.30384140189949216 IN ()) COLLATE NOCASE);SELECT DISTINCT CASE WHEN NULL THEN x'3881' ELSE CASE WHEN t1.c0 THEN t1.c2 ELSE t2.c5 END END FROM t1 LIMIT 1207320669 OFFSET 1566938391;SELECT DISTINCT ((((t1.c0) BETWEEN (t2.c65) AND (t1.c1)))<(NULL)) FROM v0, t2, t1 ORDER BY (((t2.c5 IN ())) ISNULL)  NULLS LAST, ((t2.c65) BETWEEN (0.2734028640645072) AND (t2.c5)) COLLATE BINARY, load_extension((('d嵞')IS NOT(t2.c5)), (t2.c5 IN (t1.c1, t2.c65)))  NULLS FIRST; -- 0ms;
SELECT ALL (((t2.c49, t1.c2, t2.c65)) NOT BETWEEN ((((t2.c65)IS NOT(t1.c0)), ((((t2.c5)AND(t2.c48)))OR(t1.c2)), MIN(t2.c65))) AND ((t2.c5 COLLATE NOCASE, IFNULL(v0.c0, t2.c48), ((t2.c48)LIKE(v0.c0))))), (~ (t2.c65 COLLATE NOCASE)), ((x'4635c445') BETWEEN (t1.c2) AND (t2.c65)) COLLATE NOCASE FROM t2 GROUP BY (+ (((t1.c2) IS TRUE))), ((t1.c0 IN ()) IN ()), NULL, ((t1.c2 IN (t2.c5)) IN (v0.c0 COLLATE RTRIM)), ((t2.c5) BETWEEN ('#璺~5Lt7E3') AND (LIKELY(t1.c0)));SELECT ALL (- (0.6641719979465086)) FROM v0, t2; -- 0ms;
SELECT ALL (v0.c0 IN ()) COLLATE NOCASE FROM v0, t1, t2; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY ((((t2.c48) BETWEEN (t2.c5) AND (t1.c2)))%('607007739'))) FROM t1 LIMIT 652159213;SELECT ALL ((((v0.c0)GLOB(t2.c48))) BETWEEN ((((t1.c2, t1.c2, t2.c48))=((t2.c48, t1.c2, t2.c49)))) AND (((t2.c5)>(t1.c1)))) FROM t1;SELECT DISTINCT SUM(LIKELIHOOD(t2.c48, 0.17827959522998682)) FROM v0 WHERE ((- ((('-619279266') NOT NULL))));SELECT CAST(t1.c1 AS REAL) FROM v0, t1, t2 GROUP BY (((LIKELY(t2.c49), ((0.82850696721294)>>(t2.c5)), CAST(v0.c0 AS NUMERIC)))<((t1.c2 COLLATE BINARY, ((t2.c49)>>(v0.c0)), IFNULL(t1.c0, t2.c49)))) ORDER BY (((((t1.c0)||(t2.c65)), CASE t1.c1  WHEN t1.c0 THEN t1.c2 END, ((((t1.c1)OR(v0.c0)))AND(t2.c65))))>((((t1.c0) BETWEEN (t2.c49) AND (t1.c0)), CAST(t2.c48 AS REAL), t2.c5 COLLATE NOCASE))) DESC; -- 1ms;
SELECT ALL COUNT(MIN(((t1.c0) BETWEEN (t2.c49) AND (t2.c48)))), (((t2.c49)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t2.c65 END)) AND ((IFNULL('-1057299712', t2.c5)))), IFNULL((t1.c1 IN ()), ((t2.c65) BETWEEN (t2.c49) AND (2007028695))) FROM v0, t1, t2;SELECT DISTINCT CAST(CASE WHEN t2.c65 THEN v0.c0 WHEN t2.c49 THEN t1.c2 WHEN NULL THEN t1.c2 END AS NUMERIC) FROM t2 WHERE ((((0x4d479db0 IN ()))*(x'' COLLATE RTRIM)));SELECT DISTINCT ((LIKE(t1.c0, '9223372036854775807')) IS TRUE), ((((x'')OR(t2.c48)))AND(t1.c1)) COLLATE RTRIM, ((((((((((t2.c65)AND(t2.c48)))AND(t2.c48)))OR('K N	')))OR(t2.c49)))%(t2.c48 COLLATE BINARY)) FROM v0 LEFT OUTER JOIN t2 ON (x'' IN (((((t1.c1)OR(t2.c65)))OR(t2.c65)))) INNER JOIN t1 ON (((- (t1.c1)))*(((t2.c49)>(t2.c65)))); -- 0ms;
SELECT DISTINCT (((+ (t2.c49))) NOT BETWEEN (CAST(t2.c49 AS NUMERIC)) AND (((t1.c2)OR(t2.c65)))), ((((t2.c65)AND(t2.c5)))AND(t2.c48)) COLLATE RTRIM, AVG(json_type(t1.c2)), TOTAL(((((((((v0.c0)OR(t1.c0)))OR(t1.c0)))OR(t1.c1)))OR(t1.c2))) OVER (), LIKELY(DISTINCT ((v0.c0)+(t2.c48))) FROM t2, t1 WHERE ((- (CASE WHEN 0.5168408567862064 THEN 'aV\r' ELSE '' END)));SELECT CAST((((t2.c48))<=((t2.c65))) AS TEXT) FROM t1 WHERE (((CAST(NULL AS BLOB))>>(((0.8907615704706243)IS NOT(NULL)))));SELECT ALL ((t2.c5)>>(t2.c48)) COLLATE BINARY FROM t2, v0 WHERE ((((('731749674') NOTNULL))/(COALESCE(DISTINCT 1.926645882E9, NULL, NULL, 0xffffffff9f28ca7a)))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM v0, t1 WHERE (((~ (x'33c0')) IN ())) GROUP BY ((((t2.c65)OR(t1.c0)))OR(t2.c65)) COLLATE BINARY;SELECT DISTINCT (((x'a2ee') BETWEEN (t2.c65) AND (t2.c65)) IN (t1.c2, ((v0.c0)OR(t1.c1)))), PERCENT_RANK() OVER (), CAST(((t2.c48)>>(t1.c1)) AS INTEGER) FROM t2;SELECT DISTINCT ((COUNT(t2.c65)) IS TRUE), SUM(CAST(t2.c49 AS REAL)) OVER (), CASE WHEN CAST(t1.c2 AS INTEGER) THEN UNLIKELY(t1.c2) ELSE ((t2.c65)&(t2.c48)) END FROM t1, v0, t2 WHERE ((('139867873')<<(((NULL)|(0.3327526695015063))))); -- 0ms;
SELECT DISTINCT ((~ (t1.c2)) IN ()) FROM t1, v0; -- 0ms;
SELECT ALL ((t1.c1 COLLATE NOCASE) NOT BETWEEN (((t1.c2)>=(t1.c0))) AND (CAST(t1.c1 AS TEXT))) FROM v0, t2;SELECT MIN(((t1.c1) IS TRUE)) FROM t1, t2 LIMIT 80831739; -- 0ms;
SELECT DISTINCT ((- (t2.c49)) IN (t1.c2)) FROM t1 LIMIT 1560948112;SELECT ((t1.c2 COLLATE BINARY)-(((t1.c1) NOT BETWEEN (t2.c49) AND (t2.c49)))) FROM v0, t2 WHERE (TRIM(((x'')&('-1070195565')), NULL));SELECT ALL ((((((((((v0.c0)LIKE(t1.c1)))OR(0.6428259621861184)))OR(((x'09d4') NOT BETWEEN (v0.c0) AND (t2.c5)))))OR(((t2.c65)<=(t1.c2)))))OR(MIN(t1.c1))) FROM t2, t1 WHERE ((+ (((x'')OR(1447494356))))) LIMIT -497209195;SELECT DISTINCT ((((((v0.c0) ISNULL))AND(((t1.c2) IS TRUE))))OR((- (t2.c5)))), CAST(t2.c5 COLLATE RTRIM AS INTEGER), load_extension(CASE t1.c0  WHEN t2.c48 THEN t2.c5 ELSE v0.c0 END, NULL) FROM t2, v0, t1; -- 0ms;
SELECT DISTINCT (NOT (((((t2.c5)AND(t2.c49)))OR(t1.c2)))), json(t2.c65) COLLATE BINARY, ((t2.c48 COLLATE BINARY)GLOB((((t1.c1)) NOT BETWEEN ((t2.c65)) AND ((v0.c0))))) FROM v0, t1 WHERE (CASE (((NULL))!=((0.7763318431202807)))  WHEN CAST('-234090077' AS INTEGER) THEN ((('-597093455'))<=((''))) WHEN 0.48904894683733047 THEN ((x'')%(NULL)) WHEN ('' IN ('0.82850696721294')) THEN ((((x'')OR('')))OR(')Bn7ngyo')) ELSE (('') BETWEEN (0.6548210919861822) AND ('1447220386')) END);SELECT DISTINCT ('-k_i3' COLLATE RTRIM IN ()) FROM t1 WHERE (CASE '139867873'  WHEN x'' THEN '' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT x'0548d7afeb94' FROM t2 WHERE ((((0.33980080917442324 IN ())) NOT BETWEEN ((((('-1275663388')AND(NULL)))OR(1980556260))) AND (CASE WHEN '20zd' THEN '*!WE4Y7M8' END))); -- 0ms;
SELECT COUNT((((t2.c5)) BETWEEN ((t2.c5)) AND ((t2.c5)))) OVER () FROM t1 ORDER BY CAST(((v0.c0) IS TRUE) AS BLOB) ASC;SELECT ALL ((((((t1.c1)*(t2.c5)))AND(AVG(t2.c48))))OR('328957493')) FROM t2 WHERE ((- ((x'' IN ('0.48255342223893005', x'')))));SELECT DISTINCT ((x'') NOT BETWEEN (((t2.c48)<(t2.c5))) AND (t1.c2)) FROM t2, v0 WHERE ((((('491293258')AND((~ (0.033734706459994546)))))AND('v8Iu#~\rd ' COLLATE NOCASE)));SELECT (((t2.c5)) BETWEEN ((((t1.c0)<(v0.c0)))) AND ((t2.c5 COLLATE RTRIM))) FROM t2;SELECT DISTINCT LEAD(CASE WHEN CAST(t1.c0 AS REAL) THEN SQLITE_VERSION() END, ((((t2.c5)AND(t2.c65)))AND(t1.c1)) COLLATE RTRIM, TRIM(DISTINCT ((((-1148176535)OR(t2.c48)))AND(t2.c48)))) OVER (), ((NULL)IS(((t2.c48)>=(t1.c2)))), CASE (t2.c65 IN ())  WHEN t2.c48 COLLATE NOCASE THEN COALESCE(t2.c65, t1.c0, t1.c1, t1.c0) END FROM t1, t2 ORDER BY ((CASE t2.c48  WHEN t2.c48 THEN '-1086086113' WHEN t1.c1 THEN t1.c1 WHEN t2.c5 THEN x'' ELSE v0.c0 END)OR((+ ('\%D,')))) LIMIT 1850414587;SELECT DISTINCT (((((t2.c65)) NOT BETWEEN ((t2.c5)) AND ((t2.c49))))*(((t2.c49) NOT NULL))) FROM v0;SELECT ((t1.c0 COLLATE NOCASE) BETWEEN (((v0.c0) NOT NULL)) AND (((v0.c0)IS NOT(v0.c0)))) FROM t2 WHERE (CASE WHEN ((x'')==(NULL)) THEN (('') BETWEEN ('0') AND (x'3f33')) END) GROUP BY v0.c0, (((t1.c0)) BETWEEN ((((t1.c0)=(t1.c2)))) AND (((v0.c0 IN ())))), t2.c49;SELECT DISTINCT ((((((t1.c1)<(t2.c65)))AND(AVG(t1.c1))))OR(((((((((t1.c0)OR(t2.c48)))AND(1843303949)))OR(t1.c0)))OR(t2.c49)))) FROM t1 WHERE ((((((((('')AND(x'')))OR(6808274)))OR((NOT (0.938383204504153)))))OR(((0.8801152420140047) NOT BETWEEN (x'') AND (0.3842910195464325)))));SELECT ALL ((((v0.c0) NOTNULL)) NOTNULL) FROM t2, v0, t1; -- 0ms;
SELECT (((t2.c65)) NOT BETWEEN ((((t2.c5)IS NOT(t2.c48)))) AND ((((((t2.c49)AND(t2.c65)))AND(t1.c2))))) FROM t1 WHERE ((+ ((((('739491013')OR(NULL)))OR(0.7048482278826363))))) LIMIT -1789947927;SELECT DISTINCT (((((((((t2.c65)OR(t2.c48)))OR(t2.c65)))OR(t2.c48)))AND(t2.c65)) IN ()) FROM t1 LIMIT -1718152521 OFFSET 1458473000; -- 0ms;
SELECT DISTINCT NULL FROM v0 WHERE (((CAST(-1825341098 AS NUMERIC))IS((((x'')) NOT BETWEEN ((NULL)) AND (('-]')))))); -- 0ms;
SELECT ((v0.c0)<(t2.c48)) COLLATE RTRIM, ((((t2.c65) BETWEEN (t2.c48) AND (t2.c5))) NOT BETWEEN (CAST(t1.c0 AS NUMERIC)) AND (IFNULL(DISTINCT t2.c5, t2.c5))), HEX(CAST(t2.c5 AS TEXT)) FROM t1, t2;SELECT DISTINCT (((0.2661306584371744)) BETWEEN (((('')!=(t1.c1)))) AND (('?#'))), ((((t1.c1)>(v0.c0))) BETWEEN (((t1.c1) NOT BETWEEN (t1.c2) AND ('1394461775'))) AND ((('.S')<=(t2.c65)))), (((((t1.c1))==((t2.c48)))) ISNULL) FROM v0 WHERE (((CAST(0X5497b4a1 AS BLOB)) NOT BETWEEN ('101519391') AND ((+ (NULL))))) GROUP BY (~ (((t2.c65)<=(t2.c49))));SELECT ALL GROUP_CONCAT(CAST(t2.c49 AS TEXT)) FROM t1, v0 ORDER BY t1.c2 ASC  NULLS LAST;SELECT DISTINCT DENSE_RANK() OVER () FROM t2, t1 WHERE (CAST(NULL AS TEXT)); -- 0ms;
SELECT ALL ((t1.c1) BETWEEN (t1.c1) AND (t2.c48)) COLLATE BINARY, (((v0.c0)) NOT BETWEEN ((v0.c0)) AND (((t1.c2 IN ())))), CASE ((((t2.c5)AND(t1.c2)))AND(t2.c48))  WHEN t1.c1 THEN ((v0.c0) NOTNULL) END FROM t1 WHERE (((((((((x'ce81' COLLATE RTRIM)OR(CAST(x'865d' AS NUMERIC))))AND(((x'') IS TRUE))))AND((('1687699038') NOT NULL))))OR(((0.3932923289876704)|(0.4560097032919268)))));SELECT DISTINCT CASE x''  WHEN ((t2.c49) ISNULL) THEN ((t2.c49)||(t2.c49)) WHEN (('887264824') ISNULL) THEN (((t2.c65)) NOT BETWEEN ((v0.c0)) AND ((-5.04055555E8))) WHEN t1.c2 THEN ((t2.c65) NOT BETWEEN (x'') AND (x'5f4d')) END FROM t2, t1 INDEXED BY i30 WHERE (NULL);SELECT DISTINCT CASE WHEN '471033296' THEN ((t1.c0) NOT BETWEEN (t2.c48) AND (t1.c2)) END FROM v0, t1, t2; -- 0ms;
SELECT TOTAL(((t2.c65)%(v0.c0)) COLLATE NOCASE) FROM t1, t2 WHERE (CASE WHEN ((NULL)AND(0.010672246863903556)) THEN ((0.9471762723453868) NOT BETWEEN ('1955299180') AND (NULL)) WHEN x'' COLLATE BINARY THEN (+ (NULL)) WHEN (- (0.5071233035743195)) THEN (('731749674') BETWEEN ('-1714447824') AND (1.72243117E8)) END) ORDER BY ((((((v0.c0) ISNULL))AND(t1.c2)))OR(((t2.c49) IS TRUE))), '' DESC  NULLS LAST;SELECT ((((((v0.c0)>>(t2.c48)))AND(TOTAL(t2.c48))))AND(t1.c0 COLLATE RTRIM)) FROM v0, t1, t2 WHERE ((NULL IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN (((x'')) BETWEEN ((t1.c2)) AND ((t1.c0))) THEN (v0.c0 IN ()) ELSE ((t1.c2)GLOB(NULL)) END FROM v0 ORDER BY t2.c5  NULLS LAST, (((((NOT (t1.c1)))OR(((t2.c49) IS TRUE))))AND(((x'') NOT BETWEEN (t1.c2) AND (v0.c0))))  NULLS FIRST, t1.c2;SELECT 0.783119810924927, CASE (- (t2.c65))  WHEN t1.c1 COLLATE RTRIM THEN x'' END, ((((t1.c1) ISNULL)) NOT BETWEEN ((t2.c65 IN (t1.c1))) AND (t1.c2 COLLATE RTRIM)) FROM v0, t1 WHERE (((CASE '-40961486'  WHEN 0.4892731163075619 THEN NULL WHEN '' THEN 524304260 WHEN NULL THEN '732504987' ELSE NULL END)<=((('-1313450633') NOT BETWEEN (0.29439316429294893) AND (x'')))));SELECT DISTINCT t2.c49, (((v0.c0, t2.c65, v0.c0)) BETWEEN (((((t2.c65))>((v0.c0))), CAST(t2.c49 AS TEXT), x'72a7')) AND ((NULLIF(DISTINCT t1.c0, t2.c48), ((x'f97e') ISNULL), CAST(t2.c65 AS REAL)))), NULLIF(((((t1.c1)OR(t2.c49)))OR(t1.c1)), (~ (v0.c0))) FROM t2;SELECT 0.1030853495432914, ABS(DISTINCT t2.c5 COLLATE NOCASE), CAST(CASE WHEN t2.c48 THEN t2.c65 END AS TEXT) FROM t2 GROUP BY TRIM(DISTINCT t1.c2, NULL) COLLATE RTRIM;SELECT ALL t2.c65 FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT t1.c2 FROM v0 GROUP BY json_object(((t2.c49)>(t1.c1)), t2.c49 COLLATE BINARY) HAVING x'';SELECT ALL ((((((t2.c65)AND(t2.c49)))OR(t1.c0))) NOT NULL) FROM t2 INDEXED BY i30, t1 FULL OUTER JOIN v0 ON ((t2.c5) IS FALSE); -- 0ms;
SELECT UNICODE(CASE t2.c49  WHEN t2.c65 THEN t1.c0 ELSE t2.c65 END) FROM t1, v0;SELECT DISTINCT ((((t2.c65) NOT BETWEEN (t1.c1) AND (t2.c5)))!=((t1.c1 IN ()))) FROM t2, t1, v0 WHERE ((('rVda' COLLATE BINARY)+(0Xffffffffd62ecaf6 COLLATE RTRIM))); -- 0ms;
SELECT ALL NULL FROM v0; -- 0ms;
SELECT DISTINCT ((((t2.c48) NOT BETWEEN (v0.c0) AND (t2.c49))) NOT BETWEEN (((((((((t1.c1)OR(t2.c5)))AND(t1.c0)))OR(t2.c65)))OR(t2.c5))) AND (t1.c1 COLLATE NOCASE)), ((CASE WHEN t1.c2 THEN '' END) NOT BETWEEN (GROUP_CONCAT(t2.c5)) AND (t2.c48)), COUNT(*) FROM t2, v0, t1 WHERE (((CASE 0.20987882626894927  WHEN x'' THEN x'0acb' ELSE 0.5202610530832659 END) IS FALSE)); -- 3ms;
SELECT DISTINCT (((((((t2.c48, t1.c1, t2.c65)) NOT BETWEEN ((t1.c1, '-1923385272', t2.c5)) AND ((t2.c48, t2.c48, v0.c0))))AND(t2.c65 COLLATE RTRIM)))AND(t2.c65)) FROM t1, t2, v0; -- 0ms;
SELECT ALL COUNT(AVG(((v0.c0) NOT BETWEEN (t1.c2) AND (t2.c49)))) FROM v0, t2 WHERE (((CASE WHEN NULL THEN NULL WHEN '-504055555' THEN 0.41217388786734066 WHEN x'' THEN x'' ELSE x'' END) BETWEEN ((NULL IN ())) AND (((x'250f')OR('471033296')))));SELECT ALL ((((t1.c2)AND(t2.c49)))AND(CAST(t1.c1 AS REAL))) FROM t1 FULL OUTER JOIN t2 ON ((((t2.c65) NOT BETWEEN ('_[') AND (t2.c65))) BETWEEN (((t2.c65) NOT BETWEEN (t2.c49) AND (t2.c65))) AND (((((((((t2.c5)AND(t1.c2)))AND(t2.c48)))OR(t2.c5)))OR(t1.c2)))); -- 0ms;
SELECT DISTINCT ((v0.c0)|(t1.c0)) COLLATE BINARY FROM t1;SELECT DISTINCT t1.c1 FROM v0, t1, t2 ORDER BY CHAR(x'') DESC, (((((t2.c48)IS(t2.c49))))>((CAST(t2.c48 AS INTEGER))))  NULLS FIRST; -- 0ms;
SELECT SUM((((t1.c2, t2.c65, t2.c65)) BETWEEN ((t2.c5, t2.c48, t2.c48)) AND ((t2.c5, t2.c49, t1.c0)))), MIN((t1.c2 IN ())), ((((t2.c48) NOT BETWEEN (t1.c1) AND (t2.c48))) IS FALSE) FROM t1, v0, t2 WHERE (((CAST('xsw' AS TEXT)) ISNULL)) LIMIT 470407211 OFFSET 0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1 WHERE (((((0.021106375555271173)OR(((x'0b3d')LIKE(NULL)))))AND(-8.35382297E8))) LIMIT -1735848210; -- 0ms;
SELECT CAST(GROUP_CONCAT(x'') AS INTEGER) FROM t2, v0, t1 NOT INDEXED WHERE (CASE '-499696340'  WHEN '-450545090' COLLATE NOCASE THEN (- ('S')) ELSE ((x'') IS TRUE) END) ORDER BY ((((((x'')) BETWEEN ((t1.c1)) AND ((t2.c48))), ((t2.c65) BETWEEN (t1.c1) AND (t1.c0)), ((t1.c1)IS NOT(t2.c49)), t2.c5, '1855881816', (((t1.c2))>(('0.9811470710442268'))), ABS(DISTINCT t2.c65)))>=((((t1.c1) IS TRUE), t2.c65, t2.c48, ((t2.c49) IS FALSE), (((('.C/{V-')OR(t2.c5)))OR(x'7a6d')), TYPEOF(DISTINCT v0.c0), CAST(t2.c5 AS TEXT)))) LIMIT 630618004 OFFSET 2143264081; -- 0ms;
SELECT CASE WHEN v0.c0 THEN t2.c48 ELSE t2.c65 END COLLATE RTRIM FROM t2, v0 WHERE (CASE WHEN (('-943506655') NOT BETWEEN (0.8443574533492844) AND (0.0)) THEN ('-1212887319' IN ()) WHEN NULL COLLATE BINARY THEN ((NULL)AND(x'dad6')) WHEN ((x'')OR(0.094703098342659)) THEN CASE 0.2722659218303365  WHEN -1.275663388E9 THEN '' ELSE NULL END END) GROUP BY ((CAST(t1.c2 AS BLOB)) BETWEEN (CAST(t2.c65 AS NUMERIC)) AND (CAST(t2.c48 AS TEXT))) HAVING CAST(0x48f50721 COLLATE BINARY AS TEXT) ORDER BY ((((t1.c1) BETWEEN (t2.c5) AND (v0.c0))) BETWEEN ((~ (NULL))) AND (((t1.c2) BETWEEN (t1.c2) AND (t2.c5)))) DESC;SELECT ALL (((- (t2.c5)))IS(CASE WHEN t2.c49 THEN t2.c5 WHEN NULL THEN t1.c0 WHEN NULL THEN t1.c2 ELSE t1.c2 END)) FROM t1 WHERE ((+ ((('')<<(0.5565209638551444)))));SELECT DISTINCT LAST_VALUE(NULL COLLATE NOCASE COLLATE NOCASE) OVER ( ORDER BY (~ (LIKELY(DISTINCT t2.c49)))  NULLS LAST) FROM t1, v0, t2 WHERE (((((NULL) IS TRUE))IS(((x'') BETWEEN ('-566855724') AND (-1.677761337E9))))); -- 0ms;
SELECT ALL ((((t1.c1) NOTNULL))+(NULLIF(t2.c48, t1.c0))) FROM v0, t2 WHERE ((((0x139b7e35 IN (2094282619, 0.04827643070285703))) NOT BETWEEN (((NULL)<<(NULL))) AND (x'937142b6'))) LIMIT 1999531412;SELECT DISTINCT t1.c0 FROM t2, v0, t1; -- 0ms;
SELECT ALL ((NOT ('v7ꦿ[o}Bwk')) IN ()) FROM t1, v0, t2; -- 0ms;
SELECT ALL CASE WHEN ((t2.c5)AND(t2.c5)) THEN COUNT(*) END FROM t2, t1 WHERE (((((((0.7525765265683667)==(x'b0c5c5a7')))AND(CAST(-1.38100352E9 AS REAL))))OR(json_valid(NULL)))) GROUP BY CASE (((t2.c5)) NOT BETWEEN ((v0.c0)) AND ((t1.c1)))  WHEN t2.c48 COLLATE BINARY THEN ((((t1.c2)OR(t1.c2)))AND(t2.c48)) END, NULLIF(DISTINCT ((t2.c5) NOT BETWEEN (t2.c5) AND (t1.c0)), json_array_length(t2.c48)), ABS(DISTINCT t1.c0) COLLATE RTRIM HAVING (((t1.c1)) NOT BETWEEN (((t2.c48 IN ()))) AND (((t2.c65 IN (t1.c0, t2.c5)))));SELECT DISTINCT CASE WHEN t2.c65 COLLATE BINARY THEN COUNT(*) WHEN (NOT (t1.c2)) THEN ((t2.c5)>>(t2.c65)) WHEN (((t2.c5, t2.c49, t2.c48)) BETWEEN ((v0.c0, v0.c0, t2.c48)) AND ((t1.c0, t1.c1, v0.c0))) THEN ((t1.c0)*(t2.c65)) ELSE ((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c2)) END, ROW_NUMBER() OVER (), CASE WHEN t1.c0 THEN t1.c1 WHEN -1898784020 THEN t2.c5 WHEN t1.c0 THEN t2.c48 END COLLATE BINARY FROM v0, t1 WHERE (CASE WHEN CAST(x'4c37' AS INTEGER) THEN LIKELY('-1275663388') ELSE ((0.852069721459746)%('i')) END);SELECT ((t1.c0) NOT BETWEEN (ABS(x'')) AND (((v0.c0) IS TRUE))) FROM t2, v0, t1 WHERE (LENGTH((('H^&+') BETWEEN ('') AND ('-800394516')))); -- 0ms;
SELECT DISTINCT (+ (t1.c0 COLLATE RTRIM)) FROM v0, t1, t2 ORDER BY JULIANDAY(((t1.c0)IS NOT(t2.c48)), (t1.c1 IN (0.8656803393577851)), ((t2.c65) IS TRUE)) ASC  NULLS FIRST; -- 0ms;
SELECT (((((x'') BETWEEN (t1.c1) AND (t1.c1))))=((((t2.c48)<(''))))) FROM t1, v0 WHERE (((((((((((((NULL)OR('-338773004')))OR(x'')))AND('-718423657')))OR(NULL)))OR(x'293b')))AND(NULL)) COLLATE RTRIM);SELECT ALL CAST(((t2.c5)&(t2.c5)) AS REAL), (~ (json(t1.c2))), (CAST(t1.c0 AS TEXT) IN ()), HEX(t2.c5 COLLATE RTRIM), 0.23415100727743776 FROM t2;SELECT DISTINCT x'', t1.c1, MAX((~ (t1.c1))) FROM t1 WHERE ((((NULL)) NOT BETWEEN ((CAST('' AS BLOB))) AND (((~ (x'03a8')))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1 WHERE (CASE WHEN (('-1841505563') NOT NULL) THEN 0Xffffffff98ed7ba2 COLLATE BINARY WHEN x'' THEN x'' COLLATE RTRIM WHEN UPPER(DISTINCT '') THEN (('1148907706')>>(-2.129575826E9)) END) ORDER BY ((((((t1.c2)OR(t2.c65)))AND(t1.c0)))<(0.19000002284843132)) DESC  NULLS FIRST;SELECT ALL ((((((t1.c1)AND(t2.c5)))AND(v0.c0))) NOT NULL), MAX(CAST(t1.c1 AS NUMERIC)), ((((t1.c0)>(v0.c0))) BETWEEN (CASE WHEN t1.c1 THEN x'' ELSE t1.c1 END) AND (t1.c2)) FROM t2, t1, v0 WHERE ((NOT (((NULL) NOT NULL)))) LIMIT 1533936403; -- 0ms;
SELECT GROUP_CONCAT('991260391') FROM t1 WHERE ((('-1e500')/(((0.3776599978124383)<>(NULL))))); -- 0ms;
SELECT (t2.c5 IN ()) COLLATE BINARY FROM v0, t2 WHERE ((((((NULL)) BETWEEN (('')) AND ((x'6607'))))IS(((x'6cfe') NOT BETWEEN ('-1608212148') AND (x''))))); -- 0ms;
SELECT t1.c2 FROM v0, t2;SELECT ((((((t1.c2)) BETWEEN ((t1.c2)) AND ((x'9a30')))))>((CAST(t2.c5 AS TEXT)))), (((t2.c65 IN ())) BETWEEN (CAST(t1.c2 AS TEXT)) AND (((t1.c2) IS TRUE))), t2.c49 FROM v0 WHERE (LIKELY(CAST(NULL AS INTEGER)));SELECT CASE (- (t2.c5))  WHEN CASE WHEN t1.c1 THEN t1.c1 WHEN t2.c49 THEN t2.c48 WHEN t2.c65 THEN t1.c0 END THEN 'u\r' WHEN (t1.c0 IN ()) THEN ((t2.c5)AND(t2.c5)) WHEN ((t1.c1)/(t1.c0)) THEN ((((t1.c2)AND(t1.c1)))OR(t2.c48)) END FROM v0, t2, t1 GROUP BY t2.c49 COLLATE BINARY HAVING ((((((t1.c1)AND(t1.c0)))OR(t1.c0)))==(CASE t1.c1  WHEN t2.c48 THEN t1.c0 ELSE t1.c2 END)); -- 0ms;
SELECT (((t2.c48)) NOT BETWEEN ((((t1.c1)/(-668991712)))) AND ((ROUND(t2.c5, t2.c49)))), CASE ((((t2.c65)AND(t1.c2)))OR(t2.c49))  WHEN (~ (t1.c2)) THEN 'm' ELSE t1.c1 END, ('ֈ?f7	0' IN ()) FROM t1, t2 WHERE (CASE WHEN ((((x'')OR('j')))OR(0.9420984310798924)) THEN (8.0831739E7 IN (NULL, x'')) END) LIMIT 1878325664; -- 0ms;
SELECT (- (CAST(t1.c1 AS NUMERIC))) FROM t1, v0 WHERE (CASE ((0.7996541934181155) IS TRUE)  WHEN SQLITE_COMPILEOPTION_USED(-6.98156492E8) THEN load_extension(NULL, 318602117) ELSE CAST(NULL AS BLOB) END) ORDER BY (+ (((t2.c65)||(v0.c0))));SELECT ALL TOTAL((((4.70407211E8)) BETWEEN ((t2.c5)) AND ((v0.c0)))) FROM t2, v0, t1 WHERE (UNICODE(NULL) COLLATE BINARY); -- 1ms;
SELECT DISTINCT FIRST_VALUE(v0.c0) OVER ( ORDER BY v0.c0) FROM t2, v0, t1 WHERE ((x'' IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN ROUND(x'', '-1996076733') THEN ((t2.c65) NOT BETWEEN (t2.c5) AND (v0.c0)) END, (((NOT (t1.c0)))%((~ (t2.c48)))), t2.c49 FROM v0;SELECT ALL (((((t1.c0)) NOT BETWEEN ((t2.c5)) AND ((t1.c2))))%(((t2.c65)AND(t2.c5)))) FROM t1 WHERE ((((((('')OR(1860884455)))OR('4XGnC')))-(TYPEOF(DISTINCT '1958019346'))));SELECT DISTINCT t2.c48 FROM t2; -- 0ms;
SELECT ALL MIN((v0.c0 IN ())), TRIM(CASE t1.c0  WHEN v0.c0 THEN 0xffffffffbffbd6c8 END), (((((t2.c65)) BETWEEN ((t1.c2)) AND ((v0.c0))))GLOB(t2.c49)) FROM t1, t2, v0 WHERE ((+ (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT t1.c1, t1.c2 COLLATE BINARY, (((CASE t1.c1  WHEN t1.c0 THEN t2.c49 WHEN t1.c0 THEN t2.c65 WHEN t2.c48 THEN t2.c5 ELSE t1.c1 END, (((v0.c0))>((t1.c2))), x''))>((SUM(0X44d6f9e), ((((t1.c2)OR(t1.c0)))AND(t2.c49)), COALESCE(v0.c0, t1.c1)))) FROM t1, v0, t2; -- 0ms;
SELECT (((((((((~ (t1.c1)))AND(rtreenode(t1.c1, v0.c0))))OR(((t2.c49)AND(t2.c5)))))OR(((t2.c65) NOT BETWEEN (t2.c48) AND (t2.c65)))))OR(CAST(t2.c48 AS INTEGER))) FROM t2, v0, t1; -- 0ms;
SELECT (NULL COLLATE BINARY IN (CASE t2.c49  WHEN t2.c5 THEN t2.c65 ELSE t1.c1 END, '-1121944491')) FROM t1 WHERE ((((0.10728345316359444) IS FALSE) IN (((0X531dcc4f)&('-1913301028')), x'418f')));SELECT DISTINCT GLOB(((t1.c1)-(x'')), HEX(DISTINCT t1.c1)), LOWER(((0.0013132289095448835)<(t1.c2))), t1.c2 FROM t1, v0, t2 WHERE ((((((x'b963')/(424146972))))=((CASE 0Xffffffffe2983e30  WHEN NULL THEN '0.7673980023738038' END)))) ORDER BY t1.c2 COLLATE RTRIM  NULLS LAST; -- 1ms;
SELECT ALL (((UPPER(DISTINCT '')))>=(((- (x''))))) FROM t2; -- 0ms;
SELECT ALL (((((((((((t2.c5)OR(t2.c48)))AND(t2.c49)))OR(t1.c2)))AND(t1.c1))))>(((- (0.06127538370608687))))) FROM t1;SELECT DISTINCT ((((t1.c0)!=(t1.c2))) NOT BETWEEN (((((((((t2.c5)OR(t1.c1)))AND(t2.c65)))AND(t2.c48)))OR(t1.c2))) AND (((v0.c0) NOT BETWEEN (t2.c5) AND (x'352a9228')))) FROM v0 WHERE (CASE WHEN ((x'93ce1025') NOTNULL) THEN NULL COLLATE NOCASE END);SELECT DISTINCT (((((((((((t1.c2)OR(v0.c0)))AND(t1.c0)))OR(v0.c0)))OR(t2.c5))))>=(((v0.c0 IN (t1.c2))))) FROM t1, t2;SELECT DISTINCT t1.c1 FROM v0, t1, t2; -- 0ms;
SELECT DISTINCT NULLIF(SUM(t2.c48), NULL) FROM t1 WHERE (load_extension((((('VWS#Y?澻,칉')AND(x'')))AND(NULL)), '-1624716678' COLLATE RTRIM));SELECT ((v0.c0) NOT BETWEEN ((((t2.c48))<>((t2.c65)))) AND (((v0.c0)AND(t2.c5)))) FROM t1 WHERE (CAST((('') ISNULL) AS INTEGER));SELECT DISTINCT t2.c65 COLLATE BINARY FROM v0, t1, t2 WHERE (((((0X31e7b698) BETWEEN (x'eced8e1a') AND (x'')))>=(CAST('' AS INTEGER)))) GROUP BY 0.23911699290235178 HAVING t2.c49; -- 4ms;
SELECT ((t2.c49)<=(((t1.c0) NOT BETWEEN (v0.c0) AND (t2.c65)))) FROM t2, v0 WHERE ((CASE WHEN x'18b64c11' THEN x'' ELSE 'Q6' END IN ()));SELECT DISTINCT ((((t2.c49)OR(t1.c0 COLLATE RTRIM)))AND(UPPER(t1.c2))), ((((((((NULL)OR(t1.c0)))AND(t2.c49)))OR((((t1.c2, t2.c48, t2.c5)) NOT BETWEEN ((t1.c1, t1.c0, t1.c0)) AND ((v0.c0, t2.c5, v0.c0))))))AND(((t1.c0)IS NOT('-835382297')))), t1.c2 FROM t2, t1 WHERE (((((NULL)>(NULL))) NOT BETWEEN ((2113643934 IN ())) AND (((NULL) BETWEEN (0.14654707889068053) AND (-810275206))))) ORDER BY ((((((t2.c65)AND(t2.c65)))OR(t2.c65))) ISNULL) DESC  NULLS LAST;SELECT ALL ((((t1.c1)+(t1.c2))) BETWEEN (((t2.c5)IS NOT(t1.c1))) AND (TRIM(DISTINCT t2.c48, t2.c5))) FROM t2, v0 WHERE (((-1768803678)AND((('1926645882') NOT BETWEEN (NULL) AND ('1346346047')))));SELECT DISTINCT (((- (t2.c65)))!=(((t2.c48) NOT BETWEEN (t1.c1) AND (t1.c1)))) FROM t2 WHERE ((((NULL IN (0xffffffffcefa6fcf))) BETWEEN ((((NULL)) BETWEEN (('20ZD')) AND ((0.31007526434648836)))) AND ((('1090534990') NOT BETWEEN ('1011844671') AND (NULL))))) GROUP BY CASE 0X531dcc4f  WHEN v0.c0 THEN (t2.c49 IN (t1.c0, '1822514100')) ELSE ((((v0.c0)AND(t2.c48)))OR(NULL)) END;SELECT CAST((+ (t2.c5)) AS REAL) FROM t2; -- 0ms;
SELECT DISTINCT CAST(MAX(t2.c5) AS TEXT) FROM t1 LIMIT 126194322 OFFSET -1191877986;SELECT ALL RANK() OVER () FROM t1, t2 WHERE ((((0Xffffffffcffb8bf6)*('1843303949')) IN ())); -- 0ms;
SELECT DISTINCT (NOT (LOWER(t2.c49))) FROM v0 WHERE ((((((('B0o\*nJ_&', x'', 0.3666590048489271))<=((0.37982492621089325, '?a', x'291a')))))>((NULL COLLATE RTRIM))));SELECT DISTINCT COUNT(*), (~ (((t2.c49)&(t2.c5)))), COUNT(*) FROM t2, t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 WHERE (((0.9255172749546685)||('-1964012114')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t2 WHERE (('1944485928' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- ((v0.c0 IN ()))) FROM t1 WHERE (TYPEOF(((x'6620') IS TRUE))) GROUP BY ((t2.c5)|(t1.c0)) COLLATE BINARY, 0.8192875454053713, CAST(((x'')>>(t2.c49)) AS BLOB);SELECT DISTINCT (((t1.c0, t2.c49, t2.c5)) NOT BETWEEN ((CASE WHEN t2.c49 THEN v0.c0 WHEN t2.c65 THEN 'aᏧ' WHEN t2.c65 THEN t2.c49 ELSE t2.c65 END, (t1.c1 IN (t1.c0)), (NOT (t1.c0)))) AND ((((t2.c5) BETWEEN (t1.c1) AND (v0.c0)), (('1504577394') BETWEEN ('w㓛') AND (t1.c0)), COUNT(*)))) FROM t2, v0 WHERE (((((1285356229) ISNULL))IS(COALESCE(DISTINCT x'', NULL))));SELECT DISTINCT COUNT(*) OVER () FROM t1 WHERE (CASE WHEN (('-698156492') ISNULL) THEN ((((NULL)AND(x'1bae')))OR(x'e78a')) WHEN ((-505429629) NOT BETWEEN (x'') AND ('0.07382149367583091')) THEN CAST('1441402876' AS TEXT) WHEN ((0.738534099115288)IS NOT('-698156492')) THEN (('') BETWEEN ('1579193802') AND ('[UI_⢧O')) ELSE CASE x'647b'  WHEN '-504055555' THEN '-2095802465' WHEN '1744405706' THEN NULL WHEN x'' THEN 0.05256551373951446 WHEN '' THEN 0.7934238980865215 WHEN NULL THEN 0.46937730925204735 END END); -- 0ms;
SELECT DISTINCT ((CAST(t1.c0 AS BLOB)) ISNULL) FROM t1, t2; -- 1ms;
SELECT ((t2.c49) NOT NULL) COLLATE BINARY FROM t2 GROUP BY v0.c0 HAVING CASE t2.c48 COLLATE NOCASE  WHEN ((t2.c49)<<(v0.c0)) THEN 0.6663779780365481 END LIMIT 2017601217;SELECT DISTINCT '-578733357' FROM v0, t2, t1 WHERE (CAST(CASE WHEN NULL THEN 0.44969513248005155 ELSE 0.2647596228576736 END AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE t2.c65 COLLATE BINARY  WHEN t1.c1 COLLATE BINARY THEN ((v0.c0)<(t2.c65)) END FROM t2, v0 WHERE ((0.054212650429846354 COLLATE RTRIM IN ('' COLLATE RTRIM, (((0.3434637433292199, 'G7', 0.9725331155326404)) NOT BETWEEN ((x'', '-60559132', NULL)) AND ((NULL, x'', NULL))))));SELECT ALL (~ (highlight(t2.c65, t2.c5, t2.c49, '-1121944491'))) FROM t1, t2; -- 0ms;
SELECT GROUP_CONCAT(t2.c48) OVER ( GROUPS  UNBOUNDED PRECEDING), ((SUM(t2.c48))<<((~ (t2.c48)))), (t1.c0 IN ()) COLLATE NOCASE FROM v0, t1, t2 WHERE (UNLIKELY((('-1786728637') ISNULL))); -- 0ms;
SELECT ALL (v0.c0 IN ()), ((SUBSTR(t2.c49, t1.c1)) NOTNULL), ((((t1.c0) NOT BETWEEN (t1.c0) AND (v0.c0))) NOT NULL) FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT COUNT(x'') OVER () FROM t1, v0 WHERE (((('')) BETWEEN ((x'' COLLATE NOCASE)) AND ((CASE WHEN 0.3679634541724396 THEN '471468616' END)))) ORDER BY 861872377 ASC;SELECT DISTINCT LAST_VALUE(NULL) OVER () FROM v0; -- 0ms;
SELECT DISTINCT ((CAST(t2.c5 AS BLOB))>>(((((NULL)OR(t1.c0)))OR(t2.c48)))), ((((v0.c0) NOT BETWEEN (t1.c2) AND (NULL))) BETWEEN (AVG(x'')) AND (((t1.c0) NOT BETWEEN (v0.c0) AND (t2.c48)))), (((t2.c48)) BETWEEN ((SUM(t2.c48))) AND ((t1.c0))) FROM v0, t2;SELECT DISTINCT CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), GROUP_CONCAT(((t2.c5)+(t2.c65))) OVER (), (CASE t1.c0  WHEN t2.c49 THEN t2.c65 ELSE t1.c1 END IN ()) FROM v0, t1, t2 WHERE (((CAST(-1.393961261E9 AS INTEGER)) IS TRUE)); -- 0ms;
SELECT ALL json_remove(TYPEOF(DISTINCT t1.c0), (((t2.c49, v0.c0, t2.c65))==((t2.c65, t1.c0, t2.c5)))), (CAST(t2.c5 AS NUMERIC) IN ()), (- ((((t1.c1)) NOT BETWEEN ((t1.c0)) AND ((t2.c5))))) FROM v0, t1;SELECT DISTINCT (((t1.c1 IN ())) BETWEEN (((t1.c1)<=(t1.c2))) AND (t2.c48)), NULL, ((CASE WHEN t1.c2 THEN t2.c5 END)>(CAST(t2.c5 AS BLOB))) FROM v0, t2 WHERE (0Xffffffff9a8d0d93);SELECT ALL ROUND(((t2.c65) NOT BETWEEN (t2.c49) AND (t2.c5)), ((t1.c2) NOT NULL)), CASE WHEN CAST(0.6619757487144476 AS TEXT) THEN CAST(t2.c48 AS TEXT) WHEN ((t2.c48) BETWEEN (t2.c5) AND (t2.c5)) THEN t1.c0 COLLATE NOCASE WHEN NULL THEN t1.c0 COLLATE NOCASE WHEN TOTAL(v0.c0) THEN ((t1.c0) ISNULL) WHEN ((t1.c1) NOT NULL) THEN ((t2.c49) BETWEEN (t2.c48) AND (v0.c0)) ELSE SQLITE_COMPILEOPTION_GET(t1.c0) END, MIN(CASE WHEN x'd30f' THEN v0.c0 ELSE t1.c1 END) FROM v0, t2 WHERE ((CASE WHEN '' THEN 0.7823924853293839 ELSE x'' END IN ((0.4429224914269412 IN ()), (NOT ('')))));SELECT DISTINCT ((t2.c49) NOT BETWEEN (t2.c65) AND (t1.c2)) COLLATE RTRIM FROM v0, t1 WHERE (TYPEOF(DISTINCT '739491013' COLLATE RTRIM));SELECT v0.c0 FROM t1 WHERE (((NULL)-((((('-648892757')AND('n')))OR(x'')))));SELECT ALL t2.c48, (NOT (LIKE(t2.c65, t1.c2, 'I'))), (t2.c48 IN ()) FROM t1 WHERE ((+ ((+ ('470404804')))));SELECT ((((t1.c0)-(t1.c1)))<=(t2.c49)) FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT (((t2.c65))>=((x'6cf8'))) COLLATE NOCASE FROM v0, t1;SELECT DISTINCT (('S{{2[t&4A')*(NULL)) FROM t2, v0 WHERE ((~ ((('-1056090513') NOT NULL)))) LIMIT 1642150034 OFFSET -473326; -- 0ms;
SELECT ((((t2.c48) NOT NULL)) NOT BETWEEN (((t2.c49) IS FALSE)) AND ((t1.c0 IN ()))) FROM v0;SELECT MAX(CASE WHEN 0.2955065075508361 THEN t2.c49 END) FROM t1, v0, t2 WHERE (((('-892547846') IS FALSE) IN (0.7673980023738038 COLLATE NOCASE))); -- 0ms;
SELECT ALL (NOT (((((t1.c0)AND(t1.c2)))OR(t1.c0)))), '#', UPPER(DISTINCT CASE t2.c65  WHEN t1.c2 THEN '-822732510' ELSE t2.c49 END) FROM t1;SELECT 0.7752651622763841 FROM t1 WHERE ((((((x'')!=(1988847276))))<>((((x'fed2') BETWEEN ('') AND (0.05141706096982501)))))) GROUP BY load_extension(((t2.c65) NOT NULL));SELECT ALL TOTAL((- (t2.c49))) OVER ( PARTITION BY (((((t1.c1))<=((t2.c5)))) BETWEEN (t2.c5 COLLATE BINARY) AND (DATE(t1.c2, t2.c48, t2.c65))), LIKELIHOOD(DISTINCT (('')LIKE(t2.c48)), 0.7085309107725902), 0.8750410165359127, IFNULL(CASE t2.c49  WHEN t2.c65 THEN t2.c49 END, HEX(t2.c65))), TOTAL((NULL IN ())) OVER (), (((~ (t1.c2))) ISNULL), CAST(CAST(0.45315787931278173 AS INTEGER) AS REAL), CAST(NULL AS BLOB) FROM t2, v0 WHERE (((x'') NOT BETWEEN ((0.8622481491100527 IN ())) AND (x'')));SELECT DISTINCT (~ (NULL)) FROM t2, t1, v0 ORDER BY ((((t2.c5) BETWEEN (NULL) AND (t2.c5)))=('39411199')) LIMIT -396779164 OFFSET 1326152926; -- 1ms;
SELECT DISTINCT (((((t2.c5, '1011844671', t1.c1, t2.c5, t2.c49))>=((t2.c5, t2.c49, t2.c48, t2.c65, t2.c49))))GLOB(((v0.c0) IS FALSE))) FROM v0, t2 WHERE (NULL);SELECT DISTINCT NULL, ((CAST(t1.c0 AS NUMERIC)) IS TRUE), COUNT(((((((((t2.c49)AND(t2.c5)))AND(t1.c2)))OR(t1.c1)))OR(t1.c2))) FROM t2, v0;SELECT ALL (- (((t1.c2)GLOB(v0.c0)))) FROM v0, t1 LIMIT 731749674; -- 0ms;
SELECT DISTINCT (- (((t2.c5)|(t1.c0)))) FROM t2 WHERE (0.9802378967857316 COLLATE NOCASE) ORDER BY ((CAST(t1.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c0 THEN t1.c0 ELSE t2.c65 END) AND (((t2.c65)!=(t1.c1))))  NULLS LAST;SELECT (((t2.c49, t2.c5, t2.c49)) BETWEEN ((x'35a1', CAST(t2.c48 AS BLOB), AVG(t2.c49))) AND (((((t2.c5, t1.c1, t2.c5))>=((t2.c5, t2.c48, t2.c49))), t2.c5 COLLATE NOCASE, (~ (t1.c0))))) FROM t2, v0, t1 WHERE (0.0890248223867457); -- 0ms;
SELECT DISTINCT ((t2.c49 COLLATE NOCASE)IS(((t1.c1) NOT NULL))) FROM t1 GROUP BY (NOT (t2.c48)) COLLATE BINARY COLLATE BINARY ORDER BY ((v0.c0) ISNULL) COLLATE BINARY ASC;SELECT ALL AVG(((t2.c5) NOT BETWEEN (t2.c49) AND (t1.c1))) FROM t1;SELECT DISTINCT ((((((t1.c0) BETWEEN (t2.c65) AND (v0.c0)))OR(((t2.c49) BETWEEN (t1.c2) AND (t2.c5)))))AND(json_extract(t1.c0, t1.c0))), '-1624716678', LOWER(DISTINCT ((t1.c1) BETWEEN (t1.c0) AND (t2.c49))) FROM t2, t1, v0 LIMIT -1230814876 OFFSET 278906400; -- 0ms;
SELECT ALL (((t1.c2 COLLATE BINARY, CAST(t1.c2 AS REAL), ((t2.c48)%(t1.c2))))!=((AVG(0.5439855317992264), (+ (v0.c0)), CASE WHEN t2.c49 THEN t2.c5 WHEN t1.c2 THEN t2.c65 WHEN t1.c0 THEN t1.c1 END))), (((NULL)) NOT BETWEEN ((CASE WHEN t1.c1 THEN t2.c49 WHEN t2.c65 THEN t2.c48 WHEN t2.c65 THEN t2.c49 ELSE t2.c48 END)) AND ((((((t1.c2)AND(t1.c2)))OR(t2.c48))))), (((CAST(t1.c1 AS REAL), ((t2.c48) NOT BETWEEN (t1.c0) AND (t1.c2)), (t2.c5 IN ())))>((((t2.c48) BETWEEN (t2.c65) AND (t2.c65)), 0X34e29638, ((t1.c2)AND(t2.c49))))) FROM v0 NOT INDEXED;SELECT DISTINCT CASE ((NULL) NOT BETWEEN (t2.c65) AND (v0.c0))  WHEN ((t2.c5) NOT BETWEEN (t2.c48) AND (t2.c49)) THEN t1.c0 END FROM t1, v0, t2 WHERE ((NOT (x'b30b'))); -- 0ms;
SELECT (((t1.c0)) NOT BETWEEN (((('-1')<(t1.c1)))) AND ((((t1.c2) ISNULL)))) FROM t1; -- 0ms;
SELECT COUNT(*) OVER () FROM t1, t2 WHERE (CAST((('0.6904568366399473')GLOB(x'')) AS BLOB)) LIMIT -2135445937; -- 0ms;
SELECT DISTINCT ((t2.c48 COLLATE RTRIM) NOT BETWEEN (MAX(t2.c65)) AND (((((((((t2.c48)OR(t1.c0)))AND(t2.c5)))AND(t2.c5)))AND(t2.c65)))) FROM t2;SELECT ALL 0.8684946283421674 FROM v0, t2, t1; -- 0ms;
SELECT DISTINCT ((t2.c48)|((t2.c5 IN ()))), TRIM(DISTINCT NULL, ((t1.c2)/(t2.c5))), TOTAL(((((t1.c0)AND(0X372fa151)))OR(t1.c0))), (~ ((((t1.c1, 1.684322183E9, t1.c0))<>((t2.c5, t1.c0, t2.c48))))), ((((t2.c65, t2.c65, t1.c2))<=((t1.c2, t2.c65, t2.c65))) IN ((~ (t2.c65)))) FROM t1, t2 GROUP BY CAST('483212195' AS INTEGER), (+ ((((t2.c65))<((t2.c48))))), CASE CASE WHEN t1.c0 THEN t1.c0 ELSE t2.c48 END  WHEN (((t2.c5))==((t1.c0))) THEN ((t2.c48)IS NOT(t1.c0)) ELSE t2.c49 COLLATE RTRIM END; -- 0ms;
SELECT DISTINCT ((t2.c65)GLOB(t2.c49)) COLLATE NOCASE, ((((((t2.c5)AND(x'')))OR(t1.c0)))>=(AVG(t2.c65))), (((((x'')) BETWEEN ((t2.c5)) AND ((t2.c5)))) NOT NULL) FROM v0;SELECT ALL (((((((((((((((t2.c49))==((t2.c49))))OR(CASE WHEN t2.c49 THEN t1.c0 ELSE 0.9604133020343101 END)))OR(MIN(t2.c5))))AND(((('1281740646')) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))))OR(((v0.c0)||(t2.c48)))))OR('|45>')))AND(((v0.c0)+(t2.c65)))) FROM t1, t2, v0; -- 0ms;
SELECT ALL (((t2.c49)) BETWEEN ((t1.c1)) AND ((CAST(t2.c48 AS INTEGER)))), (((((v0.c0)+(t1.c1))))<(((NOT (t2.c49))))), ((((v0.c0)) NOT BETWEEN ((t2.c49)) AND ((0.9563757238482707))) IN ()), CASE ((((v0.c0)AND(t2.c48)))AND(''))  WHEN NULL THEN ((t1.c0) NOT BETWEEN (v0.c0) AND (t1.c1)) ELSE (t1.c1 IN ()) END, COUNT(GROUP_CONCAT(v0.c0)) COLLATE BINARY FROM t2 WHERE (CASE ((0.8595040669826296)<(''))  WHEN CAST('' AS NUMERIC) THEN ('{g' IN ('-1510979617')) WHEN ('-183490772' IN ()) THEN ((((NULL)OR(0.27376172933875853)))OR(x'')) WHEN TRIM(DISTINCT '887264824', NULL) THEN (+ (x'')) ELSE LIKE(NULL, '㛡MYm]b,', '-') END) LIMIT 1137768436 OFFSET 1980595999;SELECT DISTINCT ((COUNT(*))<(t1.c0)), COUNT(((t2.c48) ISNULL) COLLATE RTRIM) OVER (), (CASE t2.c5  WHEN NULL THEN NULL WHEN t1.c2 THEN t2.c5 WHEN t1.c0 THEN t1.c0 END IN ()) FROM t1, t2 LIMIT 1872122326; -- 0ms;
SELECT DISTINCT (MAX(t2.c49) IN ()), CAST(CAST(v0.c0 AS REAL) AS BLOB), (((t2.c48 IN ())) IS FALSE), (((((((((((((((t1.c0))>=((v0.c0))))AND(CAST(t2.c5 AS TEXT))))OR(CASE t1.c1  WHEN t1.c0 THEN v0.c0 ELSE t2.c48 END)))OR(MAX(t2.c49))))AND(((v0.c0) IS FALSE))))OR(t2.c5 COLLATE BINARY)))AND(((((((((t2.c65)OR(x'')))OR(t2.c49)))AND(t2.c65)))OR(t1.c0)))), t2.c5, CAST(GROUP_CONCAT(t1.c2) AS INTEGER), (('887264824') NOT BETWEEN ((((t1.c2, t1.c2, t2.c48)) BETWEEN ((t2.c48, t2.c5, t1.c0)) AND ((t2.c48, x'f463', t2.c49)))) AND (((t2.c65)-(t2.c5)))) FROM t1, v0 GROUP BY (+ (((t1.c2)IS NOT(t1.c0)))) HAVING (CAST(NULL AS TEXT) IN ());SELECT (((v0.c0 COLLATE RTRIM))<>(((('0.9811470710442268')<<(v0.c0))))) FROM t1, t2, v0 WHERE (((((CASE WHEN '^冥' THEN NULL ELSE NULL END)AND(CASE 0.8044102279960603  WHEN '' THEN '1281740646' WHEN -7.18423657E8 THEN NULL WHEN x'' THEN x'' WHEN x'35482f29' THEN x'90a4' WHEN x'b5b4' THEN '' ELSE '-96648463' END)))AND(((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT CAST(CAST(t1.c0 AS BLOB) AS NUMERIC) FROM t2, t1 ORDER BY (+ (t2.c5 COLLATE NOCASE)) ASC; -- 0ms;
SELECT DISTINCT t2.c49 COLLATE RTRIM FROM t2, t1 WHERE ('-1121944491'); -- 0ms;
SELECT CAST(((((t2.c49)AND(t2.c48)))OR(t1.c1)) AS NUMERIC) FROM t1, t2 WHERE (((IFNULL('-1824692612', NULL))<=(CASE x''  WHEN NULL THEN '' ELSE 0.6904568366399473 END))) GROUP BY ((t2.c49) NOTNULL) COLLATE NOCASE HAVING ((t1.c2 COLLATE BINARY) BETWEEN (t2.c5 COLLATE NOCASE) AND (SUM(t1.c2))); -- 0ms;
SELECT DISTINCT (((((t2.c5) ISNULL)))>((t1.c1))) FROM v0, t1, t2 WHERE (CAST(((x'fa87')IS NOT(x'dd42')) AS TEXT)); -- 0ms;
SELECT DISTINCT (('-167202745' COLLATE RTRIM) IS FALSE), COUNT(*) FILTER(WHERE ((((((((((t1.c0) ISNULL))AND((('1?G\n69') BETWEEN (t1.c1) AND (v0.c0)))))AND('')))OR(((t2.c49) NOT NULL))))OR(CASE t2.c65  WHEN NULL THEN t1.c1 ELSE -9.77174676E8 END))) OVER ( RANGE BETWEEN NULL FOLLOWING AND  CURRENT ROW EXCLUDE TIES), AVG((((t2.c49))>((t2.c65)))) FILTER(WHERE ((((t2.c48)<<(t1.c1))) IS FALSE)) OVER ( ORDER BY ((((t1.c1) NOT NULL)) BETWEEN (((t2.c65) NOT BETWEEN (t2.c48) AND (t2.c5))) AND (((NULL) NOTNULL))) DESC  NULLS LAST, ((((((t2.c65) NOT BETWEEN (t2.c65) AND (t2.c49)))OR(((t2.c48) NOTNULL))))AND(((x'') NOT BETWEEN (t1.c0) AND (v0.c0))))) FROM v0, t1 WHERE (((((('') NOTNULL), ((x'ce9c') IS TRUE), (632230815 IN ())))<(((((NULL))<>((NULL))), IFNULL(DISTINCT NULL, x'f0e40cc9'), ((0Xaa883a2) NOT NULL)))));SELECT DISTINCT ABS(DISTINCT CAST(0.288886064807361 AS INTEGER)) FROM t1; -- 0ms;
SELECT ALL CASE WHEN t2.c48 THEN t1.c0 ELSE t1.c1 END COLLATE BINARY FROM v0 NOT INDEXED;SELECT DISTINCT CAST((t1.c0 IN ()) AS INTEGER) FROM v0, t1, t2 WHERE ('-310363936'); -- 0ms;
SELECT DISTINCT CAST(((((t1.c1)AND(t1.c0)))OR(t2.c5)) AS INTEGER) FROM v0 WHERE ((+ ((('c!7ZI_wu\')==('11Lp%'))))) LIMIT -1548638387 OFFSET -1154977769;SELECT ALL CASE WHEN (- (v0.c0)) THEN TOTAL(v0.c0) WHEN ((t2.c65)>>(t2.c65)) THEN (((NULL))<=((t2.c48))) WHEN (((t2.c65))!=((t1.c1))) THEN CASE v0.c0  WHEN t1.c2 THEN v0.c0 ELSE t1.c0 END END FROM t1, t2, v0 WHERE (CASE CAST(NULL AS REAL)  WHEN (x'ed6b' IN ()) THEN ((0.6630498548809939)>>(0.6640206002411523)) END); -- 0ms;
SELECT ALL (((t1.c0)&(v0.c0)) IN (t1.c2)) FROM t1 WHERE ((((((NULL))<=((0.6041984811442712)))) NOTNULL));SELECT ALL ((((((((v0.c0 COLLATE NOCASE)AND(SQLITE_COMPILEOPTION_GET(t1.c0))))AND(CASE v0.c0  WHEN t1.c2 THEN t2.c49 WHEN t2.c48 THEN NULL WHEN t1.c2 THEN t1.c2 END)))AND(((v0.c0) NOT BETWEEN (t1.c0) AND (t2.c5)))))AND((~ (t1.c0)))), ((('<J'))>((''))), CASE SUM(t2.c49)  WHEN (((t2.c5)) NOT BETWEEN ((t1.c2)) AND ((t2.c49))) THEN 0xfffffffface9d6d3 WHEN COALESCE(t2.c5, v0.c0, t2.c49, t2.c49) THEN ((((-1513928556)AND(t1.c1)))OR(t1.c1)) WHEN CASE WHEN v0.c0 THEN t1.c2 ELSE t1.c2 END THEN x'' WHEN ((((v0.c0)AND(t1.c1)))OR(x'9264')) THEN COUNT(t1.c0) WHEN ((t2.c65) NOT NULL) THEN DATE(t1.c1, x'', t2.c5) ELSE ((t1.c1) NOT BETWEEN (t1.c1) AND (v0.c0)) END FROM t2, t1, v0 GROUP BY ((x'4df3') NOT BETWEEN (t2.c49 COLLATE RTRIM) AND (((t2.c48) NOT BETWEEN (t2.c48) AND (t1.c2)))) HAVING ((NULL) ISNULL); -- 1ms;
SELECT (+ (((t1.c0)!=(t2.c49)))) FROM v0;SELECT DISTINCT ((CASE t2.c49  WHEN t2.c48 THEN t1.c0 END) BETWEEN (GROUP_CONCAT(t1.c1)) AND ((t1.c0 IN ()))) FROM t1, v0, t2 WHERE ((CAST(0.22474267624828126 AS TEXT) IN (x'' COLLATE RTRIM))); -- 0ms;
SELECT ALL t2.c65 FROM t2; -- 0ms;
SELECT ALL CASE ((v0.c0) BETWEEN (t1.c1) AND (x''))  WHEN LIKELY(t1.c2) THEN GROUP_CONCAT(t1.c1) WHEN ((t2.c48)%(t2.c65)) THEN CASE WHEN t1.c2 THEN t2.c48 WHEN t1.c1 THEN t2.c5 WHEN t1.c2 THEN NULL END WHEN t2.c48 THEN ((t2.c65) NOT NULL) WHEN (((t1.c1))<=((t1.c0))) THEN GROUP_CONCAT(t1.c1) WHEN (t2.c5 IN ()) THEN COUNT(*) END FROM t2;SELECT GROUP_CONCAT(t2.c48 COLLATE NOCASE) OVER () FROM t2; -- 0ms;
SELECT ((t2.c48)IS NOT(CASE t1.c0  WHEN t2.c5 THEN t1.c2 END)), CASE WHEN ((t2.c5)-(t2.c65)) THEN ((t2.c5)+('1488601021')) ELSE SUM(t2.c48) END, CASE t1.c2  WHEN ((t2.c65)>>(t1.c2)) THEN ((t2.c5) NOT NULL) END, SUM(((v0.c0) ISNULL)), ((((v0.c0) NOT NULL)) BETWEEN (CASE WHEN 0.42768512938817327 THEN t2.c5 WHEN v0.c0 THEN t1.c2 WHEN t2.c48 THEN t2.c48 WHEN t1.c0 THEN t2.c48 WHEN t2.c48 THEN -552721666 ELSE t2.c65 END) AND (((t2.c65) NOT NULL))) FROM v0, t1 GROUP BY t1.c0 HAVING LIKELIHOOD(CASE WHEN t1.c1 THEN t2.c49 ELSE t2.c49 END, 0.0586041587579873);SELECT DISTINCT ((CASE t1.c0  WHEN t2.c48 THEN t1.c1 ELSE NULL END) NOT BETWEEN (((((t2.c48)AND(t1.c0)))OR(t2.c49))) AND (((t2.c65) NOT BETWEEN (t2.c65) AND (t1.c1)))) FROM t2, t1 WHERE (((NULL) BETWEEN (((NULL)GLOB('964582750'))) AND (((x'')IS(1.044156729E9))))) GROUP BY (~ (((t2.c65) BETWEEN (t2.c48) AND (t2.c49)))) HAVING ((t1.c0 IN ()) IN ()) LIMIT 348398266 OFFSET -963735551; -- 0ms;
SELECT DISTINCT (COUNT(v0.c0) IN ()) FROM t2, v0; -- 0ms;
SELECT ALL ((((t2.c49)>>(v0.c0)))+((((-96648463)) NOT BETWEEN ((t1.c2)) AND ((t1.c1))))), t2.c48, ((((t2.c65) BETWEEN (0.9996761569510813) AND (v0.c0)))*(((v0.c0) IS TRUE))) FROM v0, t2 INDEXED BY i30, t1 WHERE (((('㛡<' IN ())) NOT NULL)); -- 0ms;
SELECT ALL (((((t2.c48) ISNULL), (t1.c1 IN (t2.c49, 0.9529163929401597)), ((t2.c48)%(t2.c5))))==((((t1.c2)-(0.7350892742514564)), 1.281740646E9, (NOT (v0.c0))))), ((v0.c0)%(t2.c65)) COLLATE BINARY, ((((((((((t2.c5)AND(t1.c0)))AND(t1.c0)))OR(0Xffffffffd62ecaf6)))AND(t2.c5))) BETWEEN (((v0.c0) BETWEEN (t1.c1) AND (t1.c1))) AND (((t1.c0)<<(t1.c0)))) FROM t1, t2 WHERE (CASE CAST(0.4392333503102024 AS TEXT)  WHEN (NULL IN (NULL)) THEN 0.7216453066424784 END);SELECT MIN(AVG(CAST(t1.c2 AS BLOB))) FROM v0 NOT INDEXED, t2 WHERE (((((((NULL)OR(x'')))OR('-2129575826')))>=((0Xffffffffa8cd27bf IN ()))));SELECT DISTINCT ((((v0.c0)-(t1.c0)))&((- (t2.c49)))), '-2095802465', (((- (t1.c2)))/(MAX(t2.c49))) FROM t2, t1, v0 WHERE (((((((((((((0.5142569780046562)AND(NULL)))OR(1180070876)))AND(0.3232568057472289)))AND(NULL)))AND('1077080903')))AND((('-108898143') BETWEEN (NULL) AND (-1871467771))))); -- 0ms;
SELECT ((t2.c65 IN ()) IN (SUM(t1.c0))) FROM t2, t1; -- 0ms;
SELECT ALL ((CAST(NULL AS NUMERIC))|(NULLIF(t1.c2, t2.c65))) FROM t1, t2, v0 WHERE (((('X!d{H}')IS('E՟''I-h')) IN ())); -- 0ms;
SELECT ALL CASE WHEN ((t2.c49) IS TRUE) THEN t2.c5 COLLATE BINARY END, (+ (((t2.c5) NOTNULL))), (((NULL IN ())) IS FALSE) FROM t2, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t2.c5) FROM t2, t1; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c1)<=(t1.c2)) THEN (- (t2.c5)) END FROM t1, t2 WHERE (((((('-616947580' IN ()))OR((- (x'')))))AND((((NULL)) NOT BETWEEN ((x'')) AND (('>DJI 鴪')))))) LIMIT 1039822770; -- 0ms;
SELECT DISTINCT '', t1.c2, LIKELY(((((t2.c65)AND(t1.c2)))AND(t1.c0))) FROM t1, t2 WHERE ((~ (((-1121944491) NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t2 WHERE (((CAST(4.71468616E8 AS NUMERIC))-(NULL))); -- 0ms;
SELECT CASE ((t2.c65)AND(t2.c48))  WHEN (t2.c49 IN ()) THEN (NOT (t1.c1)) END FROM v0 WHERE (CASE WHEN NULL THEN (NOT ('YD&6+v')) END);SELECT ALL (((NOT (t1.c0))) NOT BETWEEN (((t1.c1)IS NOT(''))) AND (-6.98156492E8)), CASE NULL  WHEN x'' THEN ((((t2.c49)OR(t1.c1)))AND(t2.c49)) END, CASE WHEN t1.c2 THEN t2.c48 WHEN ((t1.c1)OR(t1.c0)) THEN (((t2.c65))<>((t1.c0))) WHEN 0.10238570320624285 THEN ((t2.c48)/(t1.c2)) END FROM t1 WHERE (((((CAST(0Xffffffffdc6913b1 AS TEXT))AND(TYPEOF(DISTINCT 0.922224355224037))))AND(((NULL)<<(0.4208496033742962)))));SELECT DISTINCT ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (CAST(t2.c48 AS TEXT)) AND (NULLIF(DISTINCT t1.c2, t1.c2))) FROM t1, t2, v0 WHERE (0.42097474101233356); -- 0ms;
SELECT NULL, ((((((t2.c48)=(v0.c0)))OR(((t2.c5)<(t2.c48)))))AND(0.9534165684174659)), (((((t2.c65, v0.c0, x''))>((t2.c48, t1.c2, t1.c0)))) NOT BETWEEN (((((((((t2.c48)AND(t2.c5)))OR(t2.c48)))OR(t1.c1)))AND(t2.c65))) AND (((t1.c2)+(t2.c65)))) FROM t2, v0 WHERE (json(CASE ''  WHEN '1340310537' THEN x'' END));SELECT DISTINCT (((t1.c2)) BETWEEN ((CAST(t2.c65 AS TEXT))) AND ((x''))) FROM t2, t1, v0; -- 0ms;
SELECT CASE (- (0.12059011587271629))  WHEN t2.c48 COLLATE BINARY THEN LOWER(t1.c2) WHEN UNLIKELY(t2.c5) THEN (- (t1.c2)) WHEN ((((t2.c48)OR(v0.c0)))AND(t1.c0)) THEN (((t2.c65)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((t2.c48)>=(t2.c5)) END, 0.5907786353328536, ((((((((((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1)))AND(NULL COLLATE BINARY)))OR(((t1.c1)<<(t1.c2)))))AND(CAST(t2.c48 AS NUMERIC))))AND((t1.c0 IN ()))) FROM v0, t1, t2 WHERE (CASE WHEN ',꾮(E\' THEN NULL END COLLATE BINARY) ORDER BY ((((t1.c1) IS FALSE)) IS FALSE) DESC; -- 0ms;
SELECT ALL (t2.c65 IN (v0.c0)) COLLATE NOCASE FROM t1, t2, v0; -- 0ms;
SELECT ALL CASE WHEN ((((((((t1.c1)AND(t2.c5)))OR(t2.c5)))AND(t2.c49)))AND(t2.c49)) THEN ((t2.c49)AND(t1.c0)) ELSE x'' END, ((CASE t1.c0  WHEN t2.c48 THEN t2.c48 ELSE t1.c1 END) NOT NULL), ((((NULL)|(t2.c48))) ISNULL), ((((t1.c0)OR(t1.c2)))OR(t1.c1)) COLLATE NOCASE, AVG((t2.c5 IN ())) FROM v0, t2;SELECT ALL ((CASE t2.c5  WHEN t2.c5 THEN v0.c0 ELSE t2.c49 END)/((t1.c2 IN ()))), ((((((v0.c0)GLOB(NULL)))AND(SUM(t2.c65))))AND(((t2.c49) NOT BETWEEN (t1.c1) AND (t1.c1)))), ((COUNT(t1.c1)) IS FALSE) FROM t1;SELECT ALL ((((((((((v0.c0) BETWEEN (0.9845089436958587) AND (t2.c65)))AND('')))AND((((v0.c0)) BETWEEN ((t1.c2)) AND ((t2.c48))))))OR((((t2.c5)) NOT BETWEEN ((t1.c1)) AND ((t2.c5))))))AND(-0.0)), t2.c49, CASE WHEN t1.c0 THEN ((((((((t2.c49)OR(t1.c1)))OR(v0.c0)))OR(t2.c49)))OR(t2.c65)) END FROM v0, t2, t1; -- 0ms;
SELECT DISTINCT ((((((t1.c2)OR(t1.c2)))AND(x'5be6'))) BETWEEN ((t2.c49 IN (t1.c2))) AND (CAST(v0.c0 AS TEXT))), (((t1.c2)) BETWEEN ((t1.c1)) AND ((((t1.c0)<<(t2.c48))))), (((t1.c2)||(x'')) IN (NULL)) FROM v0, t2;SELECT DISTINCT ((CAST(v0.c0 AS BLOB))>>((+ (v0.c0)))) FROM t1 INDEXED BY i30, t2 WHERE (((((NULL) NOT NULL)) BETWEEN ((('DZ')<('508967262'))) AND (((0.4311685254774815)%(0.7518050020704844)))));SELECT DISTINCT MAX(NULL, t1.c0), CAST(0xeefbc73 AS NUMERIC), (MIN(t2.c5) IN (((t2.c49) BETWEEN (t1.c2) AND (t2.c48)), ((t2.c49) NOTNULL))) FROM t2, v0 WHERE (((CAST(x'' AS BLOB)) IS TRUE)) LIMIT -1513928556;SELECT NTH_VALUE(((CAST(t1.c0 AS INTEGER))LIKE(((t2.c5) NOT BETWEEN (t2.c49) AND (t2.c48)))), UPPER(DISTINCT CAST(t1.c2 AS TEXT))) OVER () FROM t2 INDEXED BY i30, t1, v0 WHERE ((CASE WHEN '491438731' THEN NULL END IN (LIKELIHOOD(DISTINCT '-659700733', 0.754704604511796)))); -- 0ms;
SELECT DISTINCT (((t2.c49) IS FALSE) IN ()) FROM t2, t1 WHERE (CASE ((-1086086113) ISNULL)  WHEN NULL THEN (+ (NULL)) WHEN CAST(x'' AS REAL) THEN TYPEOF('') WHEN -578733357 COLLATE BINARY THEN '' END); -- 1ms;
SELECT ALL ((((t1.c1) NOT BETWEEN (v0.c0) AND (t1.c1)))IS(CAST(t2.c49 AS REAL))), (((~ (t2.c65)))<<(((t1.c2)IS(t2.c49)))), (~ (t2.c65)) COLLATE BINARY FROM t2, v0 WHERE (CASE WHEN (('0.3624836604940115') ISNULL) THEN CASE WHEN NULL THEN NULL END ELSE x'' END) GROUP BY ((((0.8300663425833205)OR(UPPER(DISTINCT t1.c2))))AND(((t1.c0) ISNULL))), (((t1.c2 IN ())) IS FALSE), 382417777;SELECT DISTINCT ((1.281740646E9 COLLATE BINARY) IS FALSE) FROM t2, t1, v0 WHERE (json_valid(((((x'')OR(0.5182553543282452)))AND(9223372036854775807)))) LIMIT -497209195; -- 0ms;
SELECT ALL (((t2.c5))<((t2.c48 COLLATE RTRIM))) FROM t2, t1, v0 WHERE (5.57670633E8) GROUP BY ((t1.c0 COLLATE BINARY)<=(v0.c0)), ((CAST(v0.c0 AS INTEGER))IS(CASE WHEN t2.c5 THEN t2.c5 END)), (NOT (((v0.c0)IS(t1.c0)))); -- 0ms;
SELECT DISTINCT t1.c2 FROM t2;SELECT ALL ((((((((t2.c49)OR(t1.c2)))OR(v0.c0)))AND((v0.c0 IN (0.05357170043175441)))))OR(((t2.c48)LIKE(t1.c0)))) FROM t1 WHERE (((UNLIKELY(DISTINCT '')) ISNULL));SELECT x'ecba', t2.c48, (((GROUP_CONCAT(t2.c49), ((t1.c0) IS FALSE), ((t1.c2) BETWEEN (t2.c5) AND (v0.c0))))=((((v0.c0) NOT BETWEEN (t2.c65) AND (t2.c65)), SUM(0Xffffffffa6b9c381), v0.c0 COLLATE BINARY))) FROM t1;SELECT ((((((t1.c2)OR('')))AND(v0.c0))) BETWEEN (x'') AND (((t1.c1) IS TRUE))) FROM v0 WHERE ((((((((((NULL IN ()))AND(((x'') NOT BETWEEN (0.48199490977431036) AND (NULL)))))OR(((x'063a')OR(NULL)))))OR((('4XGNC')IS('-1443914488')))))AND(((((((((x'')AND('s+sSV')))AND(0xffffffff975d9465)))OR(x'1337')))AND(0.17559417890774054)))));SELECT DISTINCT t2.c49 FROM t2, v0, t1; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY (t1.c0 IN ()) COLLATE NOCASE) FROM t1 WHERE (((((((((((0X56430ed5)!=(0.03006404687191999)))OR(0.07435579631476297)))OR((NULL IN (0.9811470710442268)))))AND(((NULL)||('H^&+')))))AND(((2058110399)|(NULL))))); -- 0ms;
SELECT (+ (t2.c48)) COLLATE BINARY, CAST((v0.c0 IN ()) AS NUMERIC), COUNT(((t1.c1)IS(t2.c5))) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), (- (CAST(t1.c2 AS REAL))), CASE CASE t2.c48  WHEN t1.c1 THEN t2.c5 ELSE t1.c0 END  WHEN CASE t1.c2  WHEN t2.c65 THEN t2.c65 WHEN x'' THEN t2.c49 WHEN t2.c49 THEN x'' END THEN SUM(t1.c1) END FROM t1;SELECT NULL, TRIM(DISTINCT NULL, (- (t1.c0))), ((((((t1.c1) NOT BETWEEN (t1.c2) AND (t2.c49)))AND(-582795637)))OR(CAST(v0.c0 AS NUMERIC))) FROM v0, t2 LIMIT -775429349;SELECT DISTINCT (((t1.c0, t1.c0, t2.c5)) NOT BETWEEN ((MAX(t1.c0), (NOT (v0.c0)), ((t2.c5)=(t2.c48)))) AND (((t2.c48 IN ()), GROUP_CONCAT(-73158479), t2.c65 COLLATE BINARY))) FROM t2;SELECT ((((t1.c1)GLOB(t2.c49))) BETWEEN ((((t2.c49))>=((t1.c1)))) AND (COUNT(*))) FROM v0;SELECT DISTINCT ((t2.c5 COLLATE BINARY) IS TRUE) FROM t1, v0;SELECT (+ (t2.c48)) COLLATE NOCASE COLLATE NOCASE FROM t1, t2, v0 WHERE ((+ (CAST(0.12389803300214364 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (- (t1.c1 COLLATE RTRIM)) FROM v0, t2, t1 LIMIT -743215173 OFFSET 2027098850; -- 0ms;
SELECT ALL t1.c1 COLLATE NOCASE FROM v0 LIMIT 1647653443 OFFSET -6145723;SELECT DISTINCT ((t1.c0) NOTNULL) FROM t2 ORDER BY ((((t1.c2)AND(t1.c0))) NOT BETWEEN ((~ (t1.c1))) AND (v0.c0)) DESC;SELECT '-943506655' FROM t1, t2 NOT INDEXED; -- 1ms;
SELECT ALL t1.c2 FROM t1 WHERE (''); -- 0ms;
SELECT DISTINCT 0.3923651762759083 FROM v0 WHERE (CASE WHEN (((NULL)) NOT BETWEEN (('?\')) AND ((x''))) THEN ((x'1ef8')OR(0.383828907449031)) ELSE ((0.3241798078403808)>(',')) END); -- 0ms;
SELECT ALL t2.c48 FROM t1, t2, v0 WHERE (((((((((CAST(NULL AS TEXT))OR((0X6f3be5a6 IN ()))))AND((('1014068563')AND(NULL)))))AND((1726093527 IN ()))))OR(CAST(x'' AS BLOB)))); -- 0ms;
SELECT DISTINCT 0xffffffffcc9f5ac2 FROM t2, t1, v0; -- 0ms;
SELECT (v0.c0 IN (t2.c65)) COLLATE NOCASE, ((((((((t1.c1)OR(v0.c0)))AND(t1.c0)))AND(((((((((x'bcb2')OR(t1.c1)))OR(t1.c0)))OR(v0.c0)))AND(NULL)))))AND(t1.c1)), CASE 1642150034  WHEN TOTAL_CHANGES() THEN ((v0.c0)LIKE(t2.c5)) WHEN x'' THEN (('D\r') BETWEEN (t2.c5) AND (t2.c5)) WHEN (('1684322183')>=(v0.c0)) THEN x'' END FROM v0 LIMIT -1274582041;SELECT ALL TOTAL(CAST(t2.c48 AS TEXT)) FROM t2, t1, v0 WHERE (((TYPEOF(DISTINCT 0Xffffffffdd813ad3)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((t2.c65) IS FALSE), 0.8761383765371815, (((COUNT(t1.c2)))<=(((+ (t2.c48))))) FROM v0 WHERE (TRIM(0.8957905848544809) COLLATE RTRIM);SELECT DISTINCT ((((NOT (t2.c5))))>=((x'a445'))) FROM t2 WHERE (((0xffffffffbdc1d380 IN ()) IN ())); -- 0ms;
SELECT ((RTRIM(v0.c0))>>(json_array_length(t2.c5, t2.c48))) FROM v0, t2 ORDER BY NULL  NULLS FIRST;SELECT ALL ((t1.c2) IS TRUE) COLLATE RTRIM FROM t2;SELECT ALL ((((NULL) IS TRUE))AND(((v0.c0) NOT BETWEEN (1926645882) AND (t1.c0)))), LAG(((json(t2.c49))>>(t2.c49)), CAST('-1121752777' AS NUMERIC), CASE WHEN TRIM(t1.c1) THEN (((0.170401207738607)) NOT BETWEEN ((t1.c0)) AND ((t2.c5))) ELSE ((t1.c0) NOTNULL) END) OVER (), ((((((((CAST(-1635136593 AS INTEGER))OR(((((t1.c1)OR(t1.c2)))OR(0x9590a22)))))OR(UPPER(t1.c1))))OR(((t1.c1)<(t2.c5)))))OR(((t2.c65) NOT BETWEEN (t1.c0) AND (t2.c48)))), ((t2.c49)!=(t2.c5)) COLLATE BINARY, ((((v0.c0) ISNULL)) IS TRUE) FROM t1, t2 WHERE ((- (((0.001360639635135441)&(x'')))));SELECT DISTINCT NULL FROM t2, v0, t1; -- 0ms;
SELECT ALL NULLIF(DISTINCT (- (t1.c2)), ((v0.c0) ISNULL)) FROM t1;SELECT DISTINCT ((((t2.c5) ISNULL)) IS FALSE) FROM v0, t1;SELECT CASE '-1394070034'  WHEN ((t2.c5) BETWEEN (t2.c5) AND (v0.c0)) THEN 0.9760684636332763 ELSE ((t1.c2)%(v0.c0)) END FROM t2 ORDER BY (t2.c48 IN ()) COLLATE NOCASE ASC  NULLS FIRST;SELECT ALL ((((((t2.c5)OR(t1.c2)))AND(v0.c0)))|(t1.c2 COLLATE BINARY)), (NOT (t2.c48 COLLATE BINARY)), ((GROUP_CONCAT(t2.c49))LIKE(((t1.c0)IS(t1.c2)))) FROM t2, v0, t1 LIMIT -943506655; -- 0ms;
SELECT DISTINCT CASE '0.9811470710442268'  WHEN UPPER(DISTINCT NULL) THEN (((v0.c0))<=((t1.c2))) ELSE (('471033296')>(t2.c49)) END, (+ (COUNT(*))), (t1.c1 IN ()), ((CAST('-835382297' AS REAL)) NOTNULL), ((MIN(t1.c2)) NOT BETWEEN (NULLIF(0Xffffffffbaed4280, t2.c48)) AND ('1549901361')) FROM t1, t2, v0; -- 0ms;
SELECT DISTINCT (((t1.c2, t2.c49, t2.c65)) BETWEEN ((t2.c49, t1.c2, t1.c0)) AND (((t2.c48 IN ()), ((-1841505563)-(v0.c0)), SUM(t2.c49)))) FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT CASE ((t1.c0)%(t2.c48))  WHEN ((((((((t1.c2)OR(t1.c2)))OR(t2.c65)))AND(t2.c5)))AND(t1.c1)) THEN t2.c49 COLLATE RTRIM END FROM t2, v0 GROUP BY (NOT (((t2.c49) NOT NULL))) HAVING ((t2.c5)<>((~ (t2.c65))));SELECT ALL CAST(((t2.c5)/(NULL)) AS TEXT) FROM v0, t2, t1 WHERE (CASE (((('!5')AND('months晁zq7L')))OR(NULL))  WHEN (('e輀') NOT NULL) THEN json(0.07746450685160222) END) LIMIT -323600042; -- 0ms;
SELECT DISTINCT (- (((t2.c5) BETWEEN (t2.c65) AND (t2.c48)))), NULLIF((((t1.c2, t2.c48, t1.c0)) BETWEEN ((t2.c65, v0.c0, v0.c0)) AND ((v0.c0, t2.c48, t1.c0))), ((t2.c5)!=(t2.c65))), t2.c5 FROM t1, t2, v0 WHERE ((+ ((('410202352') BETWEEN ('Tk') AND (NULL))))); -- 0ms;
SELECT ALL ((((CASE WHEN t2.c65 THEN t1.c1 ELSE t1.c2 END)OR(x'')))OR(AVG(t2.c5))) FROM v0, t1 LIMIT -701576458 OFFSET 2130450295;SELECT CHANGES(), GROUP_CONCAT(((t1.c0)|(t1.c1))) OVER ( ORDER BY ((((t2.c65)LIKE(t2.c5))) BETWEEN ((t2.c48 IN ())) AND (t1.c1 COLLATE NOCASE)) ASC), TRIM(DISTINCT UNICODE(t2.c48), ((t1.c1) IS FALSE)) FROM t1;SELECT DISTINCT ((0x2c13bcc5 IN (t2.c49)) IN (CASE t2.c65  WHEN t2.c65 THEN t2.c49 WHEN t1.c0 THEN t1.c2 WHEN v0.c0 THEN t1.c0 ELSE t1.c1 END)), ((NULL)IS NOT(((t2.c65)*(t1.c0)))), ((CAST(t1.c2 AS REAL)) NOTNULL) FROM v0, t1 LIMIT 887683807 OFFSET 630618004;SELECT ((CASE WHEN x'' THEN t1.c0 WHEN t2.c48 THEN v0.c0 WHEN t1.c0 THEN t2.c48 ELSE t2.c48 END) NOT BETWEEN ((~ (t1.c2))) AND (SUM(NULL))) FROM t1, v0;SELECT ((x'') NOT BETWEEN (0xffffffff8f6d6557) AND ((+ (t1.c2)))) FROM v0;SELECT ALL ('1410450120' IN ()), (t1.c2 IN ()) COLLATE RTRIM, ((((t2.c48)OR(t1.c1))) ISNULL) FROM t1, t2 WHERE (CAST(x'' AS BLOB)); -- 0ms;
SELECT DISTINCT (COALESCE(t1.c0, t1.c1, t1.c2, t1.c0) IN ()) FROM t1 WHERE (((0.8332930967781589)LIKE((NOT ('V!oq6fY'))))); -- 0ms;
SELECT ALL ((((t1.c1) NOT BETWEEN (v0.c0) AND (v0.c0)))>=(t2.c5)) FROM t2, v0 WHERE ((0Xffffffffb29d7253 COLLATE RTRIM IN ())) GROUP BY t2.c49 LIMIT -1542877861 OFFSET 172243117;SELECT DISTINCT (+ (((((((((t2.c49)AND(t1.c1)))OR(t1.c1)))AND(t2.c5)))AND('-1964012114')))) FROM t2 WHERE ((+ ((((((((('-1789947927')OR(NULL)))OR(1013163260)))OR(NULL)))AND(0.4684568971719859)))));SELECT ALL t1.c1 COLLATE RTRIM COLLATE RTRIM, (((t2.c5)) BETWEEN ((((t1.c0)AND(t2.c65)))) AND (((((t2.c65)) NOT BETWEEN ((t1.c0)) AND ((t2.c65)))))), ((t1.c2) IS FALSE) FROM t2, v0 WHERE ((+ ((((x''))>=((574733054))))));SELECT (((t1.c2)) BETWEEN ((CAST(t1.c2 AS NUMERIC))) AND (((t2.c48 IN (NULL))))) FROM t2, v0, t1 WHERE (((((('-504055555' IN ()))OR(CAST('316952619' AS BLOB))))AND((('470407211') NOTNULL)))); -- 0ms;
SELECT ((t2.c5 COLLATE BINARY)&(x'')) FROM t2, t1; -- 0ms;
SELECT ALL (CAST(t1.c0 AS REAL) IN ()), (((((NULL))==((NULL))))>>(CASE WHEN t1.c2 THEN t1.c2 ELSE t1.c0 END)), CASE WHEN CAST(t2.c49 AS REAL) THEN CASE t1.c0  WHEN t1.c0 THEN t2.c48 END ELSE t1.c0 COLLATE BINARY END, (((t1.c1 IN ()))>(CASE WHEN t2.c5 THEN t1.c0 ELSE v0.c0 END)), NULL FROM t1, t2 INDEXED BY i30, v0; -- 0ms;
SELECT DISTINCT ((CAST(t2.c5 AS BLOB))>>(AVG(t2.c49))), ((CAST(t2.c48 AS NUMERIC)) NOT NULL), ((((t1.c0) NOT BETWEEN (t1.c2) AND (t2.c5)))<>(CASE WHEN t1.c1 THEN v0.c0 WHEN t2.c65 THEN t1.c0 WHEN t1.c2 THEN t2.c49 END)) FROM t1, v0, t2 WHERE ((((((NULL)!=(0xffffffff8e8c2726))))>=(((('-73600162') BETWEEN (x'') AND (NULL)))))) ORDER BY NULL COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((((((((t1.c0)OR(t2.c48)))OR(t2.c48)))AND(t2.c65)))AND(t2.c5)) AS TEXT) FROM t2 WHERE (((IFNULL(0.07932386585192053, NULL))|(((1144741356) NOT BETWEEN (332042724) AND (0X30d24f41))))) GROUP BY json_array_length(((-835382297) BETWEEN (v0.c0) AND (t2.c65)));SELECT DISTINCT UPPER(t2.c5) COLLATE BINARY FROM v0 GROUP BY (+ (((t1.c2) NOT BETWEEN (t2.c65) AND (t2.c5)))), ((((((v0.c0) NOTNULL))OR(((t1.c2) BETWEEN (x'') AND (t2.c65)))))AND((v0.c0 IN ()))), (((((t2.c48, v0.c0, t2.c49)) BETWEEN ((t1.c0, t1.c1, t1.c1)) AND ((t1.c2, t1.c2, 0.15273068987564153)))) IS TRUE);SELECT DISTINCT (NOT (IFNULL(v0.c0, t1.c1))), (((((NULL)AND(t1.c0)))AND(0.8688141522237535)) IN ((+ (t1.c1)))), (((v0.c0 IN (t1.c1))) NOTNULL) FROM t1, t2, v0 WHERE (-1.789947927E9); -- 0ms;
SELECT DISTINCT ABS(DISTINCT CAST(t1.c2 AS NUMERIC)) FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT ((CAST(t1.c0 AS NUMERIC)) BETWEEN (((((v0.c0)AND(t2.c65)))AND(t2.c5))) AND ((t2.c5 IN ()))) FROM t2, t1 WHERE ((((NULL IN (0.1316433277498147)))!=(json_patch(x'', x'')))) GROUP BY COALESCE(DISTINCT CAST(t1.c0 AS NUMERIC), ((t1.c2)>=(t2.c48)));SELECT ALL DENSE_RANK() OVER ( ORDER BY ((v0.c0)<=(((((((((t2.c5)AND(x'')))OR(t2.c5)))AND(t2.c5)))OR(NULL)))) DESC  NULLS LAST) FROM v0, t1 LIMIT 1011844671 OFFSET 662844204;SELECT ALL ((CAST(t1.c0 AS NUMERIC))&(((t1.c2) BETWEEN (t1.c0) AND (t1.c1)))), ((MAX(t2.c48)) BETWEEN ((- (t2.c48))) AND (CAST(t2.c48 AS TEXT))), (((v0.c0)) BETWEEN (((+ (t1.c0)))) AND ((NULL))) FROM t2, v0, t1; -- 0ms;
SELECT DISTINCT ((((t2.c65)*(v0.c0))) NOT BETWEEN (HEX(DISTINCT v0.c0)) AND ((NOT (t1.c1)))) FROM t1, v0 WHERE ((- (CASE WHEN NULL THEN NULL END)));SELECT CASE ((t2.c48)*(t1.c1))  WHEN (((t1.c0))<=((t1.c1))) THEN t2.c5 ELSE ((((NULL)AND(t2.c49)))AND('632230815')) END FROM v0, t1;SELECT DISTINCT (('1011844671')<=(CASE WHEN x'' THEN t2.c48 WHEN t2.c48 THEN t1.c2 WHEN t2.c5 THEN t1.c2 ELSE t2.c48 END)), CASE (t1.c2 IN ())  WHEN ((t2.c65) IS FALSE) THEN CAST(t1.c2 AS REAL) WHEN ((t2.c5)LIKE(t1.c2)) THEN (+ ('dU{龸Yc娴')) WHEN 0.9121142169282724 THEN ((t2.c65) NOT BETWEEN (v0.c0) AND (t2.c5)) WHEN (((x'', t2.c5, 0.7591799040057574)) BETWEEN ((t2.c49, t1.c1, t1.c0)) AND ((v0.c0, t1.c1, t2.c65))) THEN (((t2.c48))!=((t2.c49))) WHEN (((t1.c1))<=((t2.c5))) THEN CAST(t2.c49 AS BLOB) ELSE SUM(t1.c2) END, (('') NOT NULL), v0.c0, MIN(GROUP_CONCAT(((((t1.c2)AND(v0.c0)))OR(t2.c49)))) FROM v0, t1, t2 WHERE ((((('')&(NULL)))%(((x'') IS FALSE)))) ORDER BY ((x'') NOTNULL), ((CAST(t2.c65 AS BLOB)) BETWEEN (((((((((t2.c65)OR(t2.c65)))AND(v0.c0)))AND(t1.c1)))AND(t1.c0))) AND (((t2.c5)/(t2.c65)))) ASC;SELECT DISTINCT ((t2.c65 IN ()) IN (((t2.c65)!=(v0.c0)))) FROM t2, t1, v0 WHERE ((((x'9427')) BETWEEN (((('1230636307')LIKE(x'')))) AND ((NULLIF(DISTINCT ',꾮(E\', '涔|-\rYPL'))))); -- 0ms;
SELECT ALL t2.c5 FROM t1, v0, t2; -- 0ms;
SELECT ALL '2095249703', (NOT (t2.c65)) COLLATE NOCASE, ((((t2.c49)<=(t2.c49))) ISNULL) FROM t1 ORDER BY CASE WHEN t2.c49 THEN t1.c2 WHEN t2.c48 THEN t2.c49 WHEN t2.c65 THEN v0.c0 WHEN t1.c0 THEN t1.c1 WHEN '-505429629' THEN t2.c48 END COLLATE NOCASE ASC  NULLS FIRST;SELECT DISTINCT 0.6904568366399473 FROM v0 WHERE (((((-2.00131269E8)IS(0X784226c1)))+(((0.4842139936839601) IS FALSE)))); -- 0ms;
SELECT ALL CAST(COUNT(*) AS BLOB) FROM v0, t1 WHERE (((((((((((')p&vU')AND('7F00＠!#L')))OR(NULL)))OR(x'')))AND(''))) NOT BETWEEN (CAST(x'f51b' AS BLOB)) AND (0.6109905742082277))) GROUP BY ((((t2.c49)/(t2.c65))) NOT BETWEEN (((v0.c0) IS TRUE)) AND (v0.c0)), t2.c49, CASE WHEN (+ (t1.c2)) THEN v0.c0 WHEN t1.c0 THEN t1.c2 COLLATE BINARY WHEN ((t1.c1) IS FALSE) THEN (NOT (t2.c5)) ELSE (t2.c5 IN ()) END;SELECT ALL UNLIKELY(DISTINCT ((t1.c1)||(t1.c0))) FROM t1 NOT INDEXED, v0; -- 0ms;
SELECT DISTINCT (t1.c1 COLLATE RTRIM IN ()) FROM v0, t1, t2; -- 0ms;
SELECT DISTINCT t1.c2 FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT CAST(NULL AS REAL), CAST((((v0.c0, t1.c1, v0.c0, t2.c49, t1.c2))<=((t2.c65, t1.c1, t2.c5, t2.c49, x''))) AS NUMERIC), AVG(t1.c1 COLLATE BINARY COLLATE BINARY) FROM v0 WHERE (((x'1137')>>('4x')) COLLATE RTRIM);SELECT DISTINCT (((NOT (t2.c5))) NOT BETWEEN (v0.c0) AND ('')) FROM v0, t2 LIMIT -1582351782; -- 0ms;
SELECT (((- (t1.c0)))<(CASE v0.c0  WHEN t2.c49 THEN t1.c2 WHEN v0.c0 THEN t2.c5 WHEN t2.c5 THEN t2.c65 ELSE t2.c48 END)) FROM t1 WHERE (((('645608760')) NOT BETWEEN ((0X25af139f)) AND ((x'107b'))) COLLATE BINARY);SELECT DISTINCT NTILE(((((((t2.c48) NOTNULL))OR(((t2.c48) BETWEEN (t2.c49) AND (t2.c48)))))OR(t2.c48 COLLATE RTRIM))) OVER () FROM t2 NOT INDEXED WHERE ((((+ (x'')))<((('') IS TRUE)))) ORDER BY (~ (CASE t2.c49  WHEN t2.c48 THEN t1.c2 END));SELECT ((((t2.c5)<(t2.c65)))>=(CAST(t2.c48 AS NUMERIC))) FROM t1, v0, t2 WHERE (((((((((((x'') IS FALSE))AND((((x'', 0.825053624392125, x''))>=(('H^&+', NULL, NULL))))))OR(CAST(NULL AS TEXT))))OR((x'' IN ()))))AND(CASE 'n'  WHEN x'' THEN 0.3885428679518702 END))) LIMIT -1065851765; -- 0ms;
SELECT DISTINCT (((~ (0.4077790734425796)))|(NULL)) FROM t2; -- 0ms;
SELECT DISTINCT t1.c0 FROM v0, t1, t2 NOT INDEXED; -- 0ms;
SELECT ALL RANK() OVER (), (((((((((((v0.c0, t2.c48, t2.c65)) BETWEEN ((t2.c5, t2.c65, t2.c48)) AND ((t2.c48, NULL, t1.c2))))OR(((t1.c1) IS TRUE))))OR(((t2.c48) BETWEEN (t1.c1) AND (t2.c65)))))AND(UNLIKELY(t2.c48))))OR((t1.c2 IN ()))), CASE ((t2.c48) BETWEEN (x'f333') AND (t1.c1))  WHEN t1.c2 THEN ((t2.c49)IS('')) END FROM t2, v0;SELECT DISTINCT GROUP_CONCAT(t2.c5) OVER (), ((t2.c65)==(((t2.c65) IS FALSE))), x'' FROM v0 WHERE (CASE ((925868369) IS FALSE)  WHEN (0.1055626659683232 IN ()) THEN ('%YHR돯' IN (0xffffffffc5c17f6c, 1.869902879E9)) END);SELECT DISTINCT (((t1.c1 IN (t2.c49)))IS(TOTAL(t1.c0))) FROM t1, t2 WHERE (((CAST(x'' AS INTEGER))*(((((((((x'')AND('-1948290665')))OR(x'')))OR(NULL)))OR('0.27376172933875853'))))); -- 0ms;
SELECT ((MIN(t2.c48)) IS TRUE) FROM t2; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM t2 WHERE (CASE WHEN (('-2082643215') NOTNULL) THEN CASE x''  WHEN NULL THEN NULL ELSE '338474571' END ELSE ((x'')||(-1067720536)) END); -- 0ms;
SELECT IFNULL(DISTINCT ((((t2.c48)AND(t1.c1)))AND(v0.c0)), 0.061226011947980497) FROM t1 LIMIT -41750561 OFFSET -1348472413;SELECT ((COUNT(*))!=(CASE t1.c0  WHEN t1.c1 THEN t2.c48 WHEN t1.c0 THEN t2.c5 WHEN t2.c5 THEN t1.c0 END)) FROM t1, t2 LIMIT -977174676 OFFSET -96648463; -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (0X47fce1dc) AND (t2.c65)))IS NOT(0Xffffffffa220b4b8)), ((x'')==(t2.c48 COLLATE NOCASE)), (((((- (t1.c0)))OR(((t2.c5) IS TRUE))))OR(CASE WHEN t1.c0 THEN t1.c1 WHEN NULL THEN t1.c1 WHEN t1.c2 THEN t2.c5 ELSE NULL END)) FROM t1, t2 GROUP BY CAST(((((x'6a480b44')AND(t1.c1)))AND(t2.c65)) AS REAL), JULIANDAY(LIKE(t1.c1, t1.c0), ((t2.c65) NOTNULL), (~ (t2.c49))), CASE v0.c0  WHEN t1.c0 THEN t2.c49 END COLLATE RTRIM;SELECT ALL NULL FROM v0, t1, t2 WHERE (CASE NULL  WHEN 'h^&+' THEN 'H' ELSE 952803984 END COLLATE RTRIM) ORDER BY ((((v0.c0)OR(t1.c0)))AND(t1.c1)) COLLATE NOCASE  NULLS LAST LIMIT -578733357; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((v0.c0, t1.c1, 0.7636692314197856))==((t1.c2, t1.c0, v0.c0)))) OVER () FROM t2, t1, v0; -- 1ms;
SELECT DISTINCT ((((t1.c0)-(t1.c1))) ISNULL), ((((t2.c5) IS TRUE)) NOT BETWEEN (((v0.c0) IS FALSE)) AND (COUNT(t1.c0))), LAG(t1.c0, x'', CAST((('''*')<(0.7970129412635849)) AS BLOB)) OVER () FROM t2, t1 WHERE (TRIM((NOT (0.9135024117709771)), ((x'0375') BETWEEN (NULL) AND (0.39499354658842867))));SELECT ALL PERCENT_RANK() OVER () FROM t1, t2, v0; -- 0ms;
SELECT ALL NTH_VALUE((NOT ((((v0.c0)) NOT BETWEEN ((t2.c49)) AND ((t2.c5))))), ((NULL) BETWEEN ((+ (t1.c1))) AND ((('')%(t2.c5))))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM t2, t1, v0; -- 0ms;
SELECT ALL MAX(((t2.c49)GLOB(0.14401929056648477))) FROM t1, v0;SELECT DISTINCT CASE WHEN NULL THEN (~ (t1.c0)) END FROM v0 WHERE ((((((((((~ ('621333977')))OR((NOT (x'')))))AND(CAST('1049164810' AS NUMERIC))))AND(((NULL) ISNULL))))OR(ABS(DISTINCT '968060234')))) GROUP BY LENGTH(CAST(v0.c0 AS INTEGER));SELECT ALL t2.c48 FROM v0 WHERE (((((((NULL) NOT BETWEEN (0.31907423112812616) AND (1.39867873E8)))AND(((2.017601217E9)GLOB('-113310806')))))AND((- ('1769377909')))));SELECT DISTINCT NULL, CAST(t2.c65 AS INTEGER) COLLATE NOCASE, (((t2.c65, NULL, t2.c5, t1.c2, t1.c1)) NOT BETWEEN (((v0.c0 IN (t1.c1)), v0.c0 COLLATE RTRIM, ((t1.c1)>(t1.c0)), (0.31985215418431756 IN ()), t1.c0)) AND ((json_insert(t1.c0, t2.c48, t2.c49, t1.c1, t2.c5), ROUND(t2.c49, t1.c1), ((t2.c65)+(t2.c65)), (((',䋱\r38&-S'))>((t2.c65))), ((t1.c0) BETWEEN (t1.c1) AND (t2.c48))))), ((t1.c1) NOT NULL) COLLATE BINARY, t1.c0 FROM t2 WHERE (((((NULL) BETWEEN ('-1212884067') AND (0.36097150284448953)))|((('-578733357')>>(-5.78733357E8)))));SELECT DISTINCT LAST_VALUE(t1.c2) OVER () FROM v0, t1, t2 WHERE ((+ (('20zd' IN ())))) GROUP BY ((((NULL) BETWEEN (t2.c5) AND (t1.c2))) BETWEEN (((((((((0.3656822396605678)AND(t1.c0)))AND('62343531')))OR(t2.c49)))AND(t1.c0))) AND (((t2.c49)OR(t2.c49)))) HAVING (~ (((((t2.c48)AND(t2.c65)))OR(t1.c2)))); -- 1ms;
SELECT ALL ((((((((COUNT(*))OR((t2.c49 IN ()))))OR(CAST(v0.c0 AS BLOB))))OR(((((t1.c1)OR(4.70407211E8)))OR(t2.c49)))))OR(CAST(t2.c65 AS REAL))) FROM v0, t2, t1 WHERE (x''); -- 0ms;
SELECT ALL ((COUNT(t2.c49)) NOTNULL), TOTAL((- (t1.c2))) OVER (), (+ (((t2.c5)IS(v0.c0)))) FROM t2 WHERE ((((0xffffffff8b42a9a9) NOT BETWEEN (0.3830323074555415) AND ('-1367614054')) IN ()));SELECT CASE WHEN ((t2.c48) IS TRUE) THEN (NOT (t1.c2)) END FROM t1, t2, v0; -- 0ms;
SELECT ALL NTILE((((((t1.c0) BETWEEN (t1.c1) AND (t1.c1)), ((((t1.c2)AND(t1.c1)))AND(t1.c2)), t1.c0))<((t1.c1 COLLATE BINARY, CAST(t1.c1 AS NUMERIC), (((v0.c0))<=((t1.c1))))))) OVER ( ORDER BY (((t1.c1 IN ())) IS TRUE)  NULLS FIRST GROUPS ((((((t2.c49) ISNULL))OR((((t1.c0)) NOT BETWEEN ((t1.c2)) AND ((t1.c2))))))OR(CAST(v0.c0 AS REAL))) PRECEDING) FROM v0, t1 NOT INDEXED; -- 0ms;
SELECT GROUP_CONCAT(((((((((t2.c48)AND(v0.c0)))AND(t1.c0)))OR(t1.c0)))AND(t2.c65))) OVER (), ((((((t2.c65) ISNULL))OR((~ (t2.c49)))))OR(((((t2.c65)OR(t1.c1)))OR(t2.c49)))), COUNT(UPPER(t1.c2)) FROM t2, t1, v0; -- 0ms;
SELECT DISTINCT ((((t2.c48)AND(t1.c1)))+((t1.c2 IN ()))) FROM t1 WHERE ((+ ((('-1497939420') BETWEEN (x'') AND (0.9684036206039405)))));SELECT DISTINCT FIRST_VALUE(x'65b5') OVER () FROM t2; -- 0ms;
SELECT DISTINCT NULL FROM v0, t1, t2 WHERE (((CAST(0Xffffffffc653184d AS NUMERIC))<<(((-1433123170) BETWEEN ('2014657997') AND ('z{'))))); -- 0ms;
SELECT DISTINCT (t2.c5 IN ('Frr4B㬡ⲧ4')) COLLATE RTRIM FROM v0 WHERE (((((NULL)OR(CAST(NULL AS BLOB))))OR(CASE WHEN NULL THEN x'ae8f' WHEN NULL THEN 450674607 WHEN 0X531dcc4f THEN NULL END)));SELECT ((((((t1.c2)|(t2.c5)))AND(LIKELIHOOD(DISTINCT v0.c0, 0.00672271218884124))))OR(((t2.c65)<=(x'')))), NULL, (((v0.c0 IN (t1.c0)))||(MAX(t1.c1))) FROM t2, v0 GROUP BY 0.3726584381238256;SELECT DISTINCT SUM(((((t1.c0)AND('2095249703')))AND(t1.c1))) FROM t2, v0;SELECT (- (CASE t1.c0  WHEN t2.c49 THEN t2.c65 END)), ((CAST(v0.c0 AS TEXT))>>((('25)cpゕ#')>=(t1.c2)))), x'' FROM t2, t1 WHERE (('' IN ()) COLLATE NOCASE);SELECT DISTINCT NULL FROM t1 ORDER BY ((((('pV')=(x'')), ((t1.c1) ISNULL), ((t1.c2)<(v0.c0))))=((((t2.c65)IS NOT(t2.c49)), (~ (v0.c0)), CAST(t2.c49 AS TEXT))))  NULLS FIRST;SELECT ALL MAX(((t1.c2)<(t1.c1))) COLLATE RTRIM FROM v0 ORDER BY ((((v0.c0) NOT BETWEEN (-1711455316) AND (t2.c5)))&(((t2.c48) IS FALSE)))  NULLS LAST;SELECT ALL v0.c0 FROM t2 LIMIT -1310284075 OFFSET -1506803334;SELECT ALL CASE WHEN (((t2.c48, t2.c48, t2.c48)) NOT BETWEEN ((t2.c49, t2.c5, t1.c0)) AND ((t1.c0, t2.c48, t2.c49))) THEN (NOT (t2.c5)) END FROM t1, t2 WHERE ('449373500'); -- 0ms;
SELECT ALL CASE WHEN ((t1.c2) NOTNULL) THEN ((t2.c48) NOT NULL) ELSE (t1.c1 IN (t2.c48, t2.c5)) END, ((ABS(t2.c49)) IS FALSE), 0.8046832203070321, (((((t2.c48)OR(t2.c48)))OR(t1.c1)) IN ()), ((NULL) IS TRUE) FROM t2 WHERE ((((('f8	a')LIKE(NULL))) NOT NULL));SELECT DISTINCT COUNT(*) OVER () FROM v0, t1, t2 WHERE (LIKE((+ (0Xffffffffffe329c5)), CASE WHEN 0.9583504850532228 THEN 0.22710051635338369 WHEN '0.7497053228697745' THEN 0.7275058867528913 WHEN 0.30384140189949216 THEN 'A&v䙛4\' END)); -- 0ms;
SELECT DISTINCT (((((((((((t2.c65, t2.c49, t1.c1))>=((t1.c1, v0.c0, '449373500'))))AND(CAST(t1.c1 AS BLOB))))AND(CAST(t2.c5 AS NUMERIC))))OR(CAST(t2.c48 AS REAL))))OR(SUM(t2.c65))), (- (CAST(t2.c48 AS TEXT))), v0.c0 FROM t1, v0, t2; -- 0ms;
SELECT DISTINCT json_quote(CAST(t2.c65 AS REAL)), ((t2.c5)*(t2.c48)) COLLATE NOCASE, (CAST(t2.c48 AS NUMERIC) IN ()) FROM t1, v0 WHERE (CASE (NULL IN ('-993316935'))  WHEN ((0.03910935540029992)==('')) THEN (+ (0Xffffffffe8069300)) ELSE ((NULL) NOTNULL) END) GROUP BY ((((t1.c0)<=(t1.c2)))IS(((((t1.c2)AND(t1.c2)))OR(0.7217378460740517))));SELECT DISTINCT (((t2.c49)) BETWEEN ((NULLIF(t2.c49, t2.c65))) AND ((((t1.c0) IS TRUE)))) FROM t2, v0 WHERE ((NOT ((((((((('')AND('F\n')))AND(0xffffffffc2770270)))OR('1786215550')))OR('1504577394')))));SELECT t2.c49, AVG(CAST(t2.c65 AS BLOB)), (((t1.c2)) NOT BETWEEN ((CAST(t2.c48 AS BLOB))) AND ((PRINTF(t2.c48)))) FROM t2 WHERE ((- (('-749692129' IN (0xffffffffc7c33b21))))) LIMIT 820791422;SELECT DISTINCT ((COUNT(*)) NOT BETWEEN ((x'' IN ())) AND (((t2.c5)>(t2.c49)))) FROM t1 WHERE ((((x'1515' IN (-1.83490772E8, NULL))) IS TRUE)) GROUP BY t1.c2;SELECT DISTINCT (('Y9\E_뿺r')IS(v0.c0)) COLLATE NOCASE FROM t1, v0 WHERE (((CAST('' AS TEXT)) ISNULL)); -- 0ms;
SELECT (((- (t2.c49))) NOT NULL), ((((((t2.c5) BETWEEN (t2.c5) AND (t1.c1)))AND(((((t1.c1)AND('{.lGXS^帞9')))AND(t2.c49)))))AND(CAST(t1.c0 AS INTEGER))), (QUOTE(t1.c1) IN ()) FROM t2, t1, v0; -- 0ms;
SELECT DISTINCT ((1447085388 COLLATE NOCASE) IS TRUE), ((MAX(t2.c5)) NOT BETWEEN ((((t1.c2))>((t2.c5)))) AND (t2.c5 COLLATE RTRIM)), t2.c49 COLLATE RTRIM FROM t2, v0, t1 GROUP BY ((((t2.c65)>=(t2.c48))) IS TRUE); -- 0ms;
SELECT TOTAL(((t1.c0) BETWEEN (t2.c48) AND (t2.c49)) COLLATE NOCASE) OVER (), (((t2.c65)%(v0.c0)) IN ()), 0Xa4438ad FROM t2, t1, v0 WHERE (((((((NULL)AND(NULL)))OR(NULL)))/(((('-578733357'))>((x'b030')))))); -- 0ms;
SELECT ALL ((((t1.c1)<(t2.c48))) BETWEEN ((~ (t1.c0))) AND (t2.c48)) FROM v0, t1 WHERE (CASE (('')*('|[5蘂]鶰*蜦8'))  WHEN (NULL IN ()) THEN ((((x'9e43')AND(x'')))OR('1797804453')) ELSE (((NULL))!=((NULL))) END);SELECT ALL (- (((t2.c5)IS(t2.c65)))), LTRIM(json_array_length(t2.c65), (~ (v0.c0))), (~ (((t2.c65)IS(v0.c0)))), PERCENT_RANK() OVER (), '1394461775' FROM v0 INDEXED BY i30, t1 NOT INDEXED WHERE (((MAX(0.10763457403994181, '1734721070')) NOT BETWEEN ((((NULL)) NOT BETWEEN ((x'')) AND ((NULL)))) AND (CAST('1799462660' AS INTEGER))));SELECT ALL (load_extension(t2.c48) IN ()) FROM t1 FULL OUTER JOIN v0 ON ((((t1.c0) NOT BETWEEN (t1.c1) AND (t1.c1)))<<(((-5.05429629E8) NOT BETWEEN (t2.c48) AND (t2.c49)))) CROSS JOIN t2 ON 0.5867137093617272 WHERE ((((NULL)) BETWEEN (('b쵇l.b{v')) AND ((NULL))) COLLATE NOCASE COLLATE RTRIM);SELECT ((CASE WHEN t1.c1 THEN t1.c1 ELSE t2.c65 END)=(UPPER(t2.c65))) FROM t1 WHERE ((('1912609104')IS NOT(630618004)) COLLATE NOCASE) LIMIT 941835792;SELECT DISTINCT FIRST_VALUE(t2.c49) OVER (), CASE (t2.c49 IN ())  WHEN CASE t2.c48  WHEN t1.c2 THEN t1.c1 END THEN (+ (t2.c65)) ELSE (((t1.c1))>((t1.c0))) END, (((- (t2.c49))) NOT BETWEEN (LOWER(t1.c1)) AND ((((t1.c2, t1.c2, t1.c0)) BETWEEN ((t1.c2, t2.c65, t2.c49)) AND ((t2.c65, t1.c2, t1.c2))))) FROM t2;SELECT CAST(((t2.c65) IS TRUE) AS NUMERIC) FROM t1, v0, t2 WHERE (CAST((NOT ('0.04833422310262525')) AS NUMERIC)) ORDER BY CHANGES()  NULLS FIRST, ((((v0.c0) IS TRUE)) NOTNULL) ASC; -- 0ms;
SELECT ((((t2.c48)+(t1.c2))) IS TRUE) FROM t1, v0, t2; -- 1ms;
SELECT ALL ((CHAR(t1.c0, t1.c0, v0.c0))OR(CASE WHEN t1.c1 THEN t1.c0 WHEN x'' THEN '' WHEN 0.8097865743030566 THEN t1.c1 ELSE t1.c1 END)) FROM t2, v0, t1; -- 0ms;
SELECT DISTINCT t2.c48, CAST(t1.c0 COLLATE RTRIM AS REAL), 0Xffffffff8419e08f FROM t2 WHERE (((NULL)AND(x'')) COLLATE BINARY);SELECT DISTINCT (((t1.c2) NOT BETWEEN (t1.c1) AND (t1.c0)) IN ()) FROM t1, t2 WHERE (((((NULL)OR('')))<>(CAST(x'ed02' AS NUMERIC)))) GROUP BY (NOT ((((v0.c0))<>((t2.c48)))));SELECT DISTINCT (((t2.c49)) NOT BETWEEN ((((((t1.c0)AND(t2.c5)))OR(t1.c0)))) AND (((t1.c2 IN ())))) FROM t1 WHERE (((x'' COLLATE BINARY)||((- (0.6733717482561075)))));SELECT ALL ROW_NUMBER() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM t1, v0, t2 WHERE (NULL); -- 0ms;
