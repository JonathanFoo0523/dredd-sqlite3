-- Time: 2024/06/07 06:37:22
-- Database: database7
-- Database version: 3.40.0
-- seed value: 1279729007
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 5ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (''), (NULL), (0.5729896001907621); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA main.busy_timeout; -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT CHAR(((vt1.c0) ISNULL)) FROM vt1, vt0 ORDER BY (((vt1.c0)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((vt0.c0)-(vt0.c0)))))  NULLS FIRST LIMIT 419081671; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='0.5729896001907621'; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'9d59'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('L䄩'); -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
REINDEX RTRIM; -- 0ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('-1248979962'), (NULL), (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (NULL), (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(x'') WHERE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) COLLATE BINARY COLLATE BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0='ᐆY2|z଍j5', c0='' WHERE '419081671'; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
DROP TABLE vt0; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-732585184), (x''), (NULL); -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(-1248979962); -- 1ms;
REINDEX; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('1764760012'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x''); -- 0ms;
UPDATE OR REPLACE vt1 SET (c0, c0, c0)=(0.10946024918135999, 0.5729896001907621, 0X2a76d95e) WHERE ((((vt1.c0) BETWEEN (0x3abaf305) AND (vt1.c0))) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (TRIM(vt1.c0))); -- 0ms;
ANALYZE vt1; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.cache_size = -2925478347299871978; -- 0ms;
REINDEX; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=(NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0Xfffffffff82c0b0d); -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x'1162'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
REINDEX; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0.9918309832176186); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('	螺'), ('FALSE'), (0.5374943799759158); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '0 noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (x''), ('1428744893'), (0.7178296073486504); -- 1ms;
ANALYZE; -- 3ms;
UPDATE OR IGNORE vt1 SET c0='128381900', c0=''; -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.2914910320774702), ('1829115433'), (NULL), (NULL), (0.662700552335595); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0x3f4b7444); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
UPDATE vt1 SET c0=x'' WHERE 0.058214115812721956 COLLATE RTRIM; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.reverse_unordered_selects = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=4'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=-1647345271,6');\n; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES (0.5374943799759158); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL), (x''), (128381900); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint = -625863711275613753; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0.505526537144777); -- 0ms;
ANALYZE main; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE vt1 SET (c0, c0)=('297909718', ''); -- 4ms;
INSERT OR IGNORE INTO vt1 VALUES (0.200573195376757); -- 0ms;
UPDATE vt1 SET c0=x'', c0='Vh' WHERE CASE WHEN ((vt1.c0)IS(vt1.c0)) THEN ((vt1.c0) NOTNULL) ELSE CASE ''  WHEN 0.5374943799759158 THEN vt1.c0 END END; -- 1ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
UPDATE vt0 SET c0='Vh', c0=x'7eac', c0=NULL; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''); -- 0ms;
INSERT OR FAIL INTO vt1(c0) VALUES ('0.662700552335595'), ('-1647345271'), (0x11c1bdd6); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(-142052800); -- 0ms;
UPDATE OR ABORT vt1 SET c0=x'' WHERE vt1.c0; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL); -- 1ms;
INSERT OR ABORT INTO vt1 VALUES (0.020839766668396265); -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (0.2859056294254626), (ROUND(CAST(NULL AS BLOB), ((('-142052800'))>=(('419081671'))))), (x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=259372592,10');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 4ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(x'8c1d') WHERE LOWER(DISTINCT ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (NULL), (x'e000'), (2.97909718E8); -- 1ms;
PRAGMA cache_size; -- 0ms;
UPDATE OR REPLACE vt0 SET c0=-1.420528E8; -- 0ms;
REINDEX; -- 0ms;
REINDEX RTRIM; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 5); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) IN ()), (CAST(vt0.c0 AS NUMERIC) IN (MAX(vt1.c0))), CASE WHEN RTRIM(vt0.c0) THEN ((vt1.c0)IS NOT(vt1.c0)) END FROM vt1, vt0 WHERE (((UNICODE(x'')) ISNULL)); -- 0ms;
SELECT (((vt1.c0)&(vt0.c0)) IN (vt1.c0)), LOWER(CAST(vt1.c0 AS REAL)), CAST(((vt0.c0) IS TRUE) AS NUMERIC), (((((0xffffffffcd0341a5) BETWEEN (vt1.c0) AND (vt0.c0))))==((SQLITE_COMPILEOPTION_GET(vt1.c0)))), CAST(vt1.c0 AS NUMERIC) FROM vt1, vt0; -- 0ms;
SELECT MIN(((((((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0))) FROM vt1 GROUP BY (((vt1.c0)+(vt1.c0)) IN (((vt0.c0)=(vt0.c0)))), ((((vt1.c0)<(vt0.c0))) NOTNULL), ((vt1.c0 COLLATE BINARY) NOT BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.28136006400645)) AND (((vt1.c0)+(vt0.c0))));SELECT ALL ')WB绿3' FROM vt1, vt0 GROUP BY ((((vt0.c0)+('-148159467'))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (CASE WHEN vt1.c0 THEN vt0.c0 END)) HAVING ((CAST(vt1.c0 AS REAL))/(MIN(x'95af'))); -- 0ms;
SELECT ((((vt1.c0)/(vt1.c0))) NOT NULL) FROM vt0, vt1 WHERE (UPPER(x'')); -- 0ms;
SELECT DISTINCT ((vt0.c0)*(((vt0.c0)<<(vt0.c0)))) FROM vt1, vt0 WHERE ((('0.2859056294254626' COLLATE RTRIM) NOT BETWEEN (((NULL) NOT BETWEEN (NULL) AND (0.020839766668396265))) AND (x'' COLLATE BINARY))) ORDER BY (((vt1.c0)) NOT BETWEEN ((1.829115433E9)) AND ((((vt1.c0)*(vt0.c0))))); -- 0ms;
SELECT (((vt0.c0 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), GROUP_CONCAT(vt0.c0)))!=((TRIM(DISTINCT vt0.c0, vt0.c0), (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0 COLLATE RTRIM))) FROM vt1 WHERE ((- (((('2\+', '1991312078', 0.7627626811367154))!=(('Dw⻟)L꿄R9', x'', '-461960127'))))));SELECT DISTINCT ((COUNT(vt0.c0)) IS TRUE), RANK() OVER (), NTILE((NOT (CAST(vt1.c0 AS BLOB)))) OVER () FROM vt1, vt0 WHERE (UPPER((((0.28959045574281406))>=((2.97909718E8)))));SELECT ALL ((vt1.c0) BETWEEN (CASE WHEN vt0.c0 THEN 0x4cbb64ef WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1 WHERE (CASE WHEN ((616643679)LIKE(1044961978)) THEN ((0.03924218083679687)/('-370800167')) WHEN (('u')>(0.6364794524053549)) THEN 0.21445080597264898 WHEN 1e500 COLLATE NOCASE THEN CAST(0.8609105988734573 AS REAL) ELSE ((0.5867332736777723) NOT BETWEEN (0.12753535553601558) AND (NULL)) END);SELECT DISTINCT (+ (CAST(vt1.c0 AS TEXT))) FROM vt1; -- 0ms;
SELECT ((vt0.c0) NOT NULL) COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE GLOB('[+]', vt1.c0) END FROM vt1 WHERE (((INSTR(0.5269762252911709, x'6cff')) NOTNULL));SELECT DISTINCT (((vt0.c0 IN ()))%(CAST(x'9b62' AS BLOB))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY)==(CAST(vt0.c0 AS BLOB))) FROM vt1, vt0 WHERE ((((0x4cbb64ef)) BETWEEN (('I~zYA' COLLATE NOCASE)) AND (((+ (x'e81a')))))) ORDER BY CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) AS REAL) DESC, (((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0))))>(((vt1.c0)||(vt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE RTRIM)>=(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), 0.946554586954814, DENSE_RANK() OVER () FROM vt0, vt1; -- 1ms;
SELECT CAST(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)) AS TEXT) FROM vt0, vt1 WHERE ((((((((('')OR(HEX(DISTINCT x''))))OR((('616643679')>>(0xffffffffb62f25c3)))))OR(('e0' IN ()))))AND(((x'') BETWEEN (-123350176) AND (2.027194298E9))))); -- 0ms;
SELECT ALL (vt1.c0 IN (vt0.c0, vt0.c0)) COLLATE RTRIM FROM vt1;SELECT ALL (((- (0.949084176734828))) NOT NULL), TOTAL(vt0.c0) FILTER(WHERE CAST(((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)) AS TEXT)) OVER (), ((CAST(vt1.c0 AS REAL))=(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))) FROM vt0, vt1 WHERE ((((0.6449994377614104, '1395817099', -789583580)) BETWEEN ((-1909489921, '0.2859056294254626', '')) AND (('436410223', NULL, 'now)'))) COLLATE BINARY); -- 1ms;
SELECT DISTINCT CASE COUNT(vt1.c0)  WHEN vt0.c0 COLLATE BINARY THEN CAST(vt0.c0 AS BLOB) END FROM vt0, vt1 WHERE ((((x'5470')) NOT BETWEEN ((('J㨴*F,\nMW' IN ()))) AND ((((x'388b')GLOB(x'')))))); -- 0ms;
SELECT SUM(((vt1.c0)=(vt0.c0))) OVER (), CASE vt0.c0  WHEN vt1.c0 THEN 0.22392460249334845 END COLLATE RTRIM, (+ ((vt0.c0 IN ()))) FROM vt0, vt1; -- 1ms;
SELECT ALL (((0.9039983887162972)) NOT BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((NULL))), CAST(((vt0.c0)<(vt0.c0)) AS INTEGER), x'542d' FROM vt1, vt0 WHERE (((NULL COLLATE NOCASE) NOTNULL)) LIMIT -370800167; -- 0ms;
SELECT ALL GROUP_CONCAT(CHANGES()) OVER () FROM vt1, vt0 WHERE (((((((((((895046331)<=(x'edb1')))OR((NULL IN ('LWKqq^n풹')))))AND(((('ᐆY2|z଍j5')) BETWEEN (('0.946554586954814')) AND ((NULL))))))OR((+ (x'')))))AND(((0.2253254483322884) NOTNULL)))); -- 0ms;
SELECT DISTINCT AVG((vt0.c0 IN (0xffffffff95491e8d))) FILTER(WHERE (~ (vt1.c0 COLLATE BINARY))) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN (((- (vt1.c0)))) AND ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) FROM vt0, vt1 WHERE (CASE HEX(NULL)  WHEN ((0x244bb58e) ISNULL) THEN (NOT ('I	zbU/L2')) END); -- 0ms;
SELECT ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(0Xffffffffa1c4df46)) COLLATE BINARY, (+ (vt1.c0)) COLLATE RTRIM, ((((((((((vt0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c0)))AND(0.29585657986992087))) ISNULL) FROM vt0 WHERE (2.97909718E8) LIMIT 59320534 OFFSET 985330437;SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((x''))))-(((vt0.c0)>>(0x3f4b7444)))) FROM vt0; -- 0ms;
SELECT DISTINCT (('')||(((vt1.c0)/(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL NTH_VALUE(((CASE vt1.c0  WHEN vt1.c0 THEN 0.5392469358382888 ELSE vt1.c0 END)<(vt1.c0 COLLATE NOCASE)), ((((((((((((((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(((vt1.c0)>(vt1.c0)))))AND(((-297621672) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(CAST(vt1.c0 AS REAL))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) OVER () FROM vt1;SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT NULL) FROM vt1, vt0 WHERE (((CAST(0.5632222145398147 AS TEXT))<=((0.9232483619843806 IN (x'76d45965'))))); -- 0ms;
SELECT DISTINCT '-1285356770' FROM vt0 WHERE (((((((NULL)AND(NULL)))AND(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT (- (((vt0.c0) NOT NULL))) FROM vt0, vt1 WHERE (CAST((((NULL))>((x'dda0f889'))) AS BLOB)); -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) NOTNULL) FROM vt0 WHERE (((((NULL)IS(1.7976931348623157E308))) BETWEEN (((((((((NULL)AND(NULL)))OR(128381900)))AND('-1220289766')))AND(NULL))) AND (CASE '-556143368'  WHEN 0Xffffffffe4770c41 THEN 'R' WHEN NULL THEN NULL WHEN NULL THEN 'Y' END)));SELECT DISTINCT (((vt1.c0 IN ())) IS FALSE) FROM vt0 WHERE ((((((x'')<(NULL)), (+ (x'')), (((5.39766495E8, 0.3327807267696915, '0.5392469358382888')) NOT BETWEEN ((-1.909489921E9, 0xffffffffd0f51077, '-1739414209')) AND ((NULL, x'', 0.19492683714801473)))))>=((LOWER('1287415020'), (('-1909489921')==(x'd1ff')), (NULL IN ('1837985307')))))); -- 0ms;
SELECT (((vt0.c0)) NOT BETWEEN ((((vt1.c0) NOT NULL))) AND (((vt0.c0 IN (vt1.c0, vt0.c0))))) FROM vt1 WHERE ((((- (0xffffffff8e2f7eff))) NOTNULL));SELECT DISTINCT DENSE_RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, vt1 GROUP BY ((vt0.c0 IN ()) IN ()) LIMIT -370800167 OFFSET 912016891; -- 0ms;
SELECT ALL LAG((vt0.c0 COLLATE RTRIM IN ()), 0.2268465340608674, (((vt1.c0) ISNULL) IN (CAST(NULL AS BLOB), CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END))) OVER () FROM vt0, vt1 WHERE ('-142052800') GROUP BY ROUND((((vt0.c0))>=((vt0.c0))), vt0.c0 COLLATE NOCASE); -- 0ms;
SELECT ((((((((((vt0.c0)||(0.020839766668396265)))AND((NOT (vt0.c0)))))OR(vt0.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(MIN(vt1.c0))), (((vt0.c0)<(vt0.c0)) IN ()), ((vt0.c0 IN ()) IN ()) FROM vt1, vt0 LIMIT 1976079004; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c0 THEN (((vt1.c0, vt0.c0, vt0.c0, vt1.c0, '1763749828'))<=(('-370800167', vt0.c0, vt0.c0, vt0.c0, vt1.c0))) END, vt1.c0, vt0.c0 FROM vt1;SELECT (~ ((+ (vt1.c0)))), NTILE((CASE vt1.c0  WHEN NULL THEN vt1.c0 ELSE vt1.c0 END IN ((+ (vt1.c0))))) OVER (), COUNT(((vt0.c0) IS TRUE)) FROM vt1 WHERE (IFNULL(DISTINCT ('1452827222' IN (x'')), ((((436410223)OR(0xffffffffaf0ea3bf)))AND(x'761f'))));SELECT DISTINCT UPPER(DISTINCT CAST(vt0.c0 AS REAL)) FROM vt0 ORDER BY (((vt0.c0))<>((vt1.c0))) COLLATE BINARY DESC;SELECT ALL CASE ((vt1.c0)<<(vt1.c0))  WHEN IFNULL(DISTINCT vt1.c0, vt1.c0) THEN ((vt0.c0) NOTNULL) WHEN CAST(vt1.c0 AS TEXT) THEN vt1.c0 WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) END FROM vt0 GROUP BY LIKELIHOOD(DISTINCT (~ (vt1.c0)), 0.02855629020310002), ((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) IN (((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))), CASE 0.47553862546307  WHEN (vt0.c0 IN (vt1.c0)) THEN (- (vt0.c0)) ELSE ((vt1.c0)&(vt0.c0)) END HAVING -1.909489921E9;SELECT DISTINCT CASE WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END THEN ((((((((vt1.c0)OR(1.837985307E9)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) ELSE vt1.c0 END FROM vt0;SELECT DISTINCT SUM(CAST(vt0.c0 AS BLOB)) OVER (), ((CAST(vt1.c0 AS TEXT))==('1428744893')), MIN(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) FROM vt0, vt1 WHERE (((CASE 0.4103743003443714  WHEN '剹Fw ' THEN x'' WHEN '{*' THEN x'' WHEN 0.5587181227998823 THEN x'' ELSE x'' END)/((~ (0.8876292622109063))))) ORDER BY ((((vt1.c0)<<(vt0.c0)))LIKE(CAST(vt0.c0 AS BLOB))), ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE 0.9039983887162972 END)&(((vt1.c0)/(vt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt1.c0)))OR(x''))) IS FALSE) FROM vt1, vt0 WHERE (CAST(((((((((0.8609105988734573)AND(x'')))AND(0.6164229354521883)))OR(x'')))AND(NULL)) AS REAL)); -- 1ms;
SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN (((vt0.c0)>=(NULL)))), NULL, 0xffffffffc27b7c21, (((((~ (vt0.c0)))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))))AND((((vt0.c0, vt0.c0, vt1.c0))<((vt0.c0, vt0.c0, vt0.c0))))), COUNT(*) OVER () FROM vt0 WHERE (((((((((CASE WHEN x'4b8b' THEN '388578849' WHEN NULL THEN '0.0' WHEN x'3de7' THEN '1287349487' END)OR(CHAR('479579644'))))OR(((((9.12016891E8)OR(NULL)))AND(NULL)))))AND(0Xfffffffff8a5d360)))OR(0.505526537144777 COLLATE BINARY)));SELECT ALL ((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)) COLLATE BINARY FROM vt1 WHERE ((((0.41318636370107076)) NOT BETWEEN ((((NULL)>>(x'')))) AND (((('+<')>('sX'))))));SELECT DISTINCT TOTAL(0.662700552335595) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((0.4029161260593318) BETWEEN ((vt0.c0 IN ())) AND ((vt1.c0 IN ()))), ((((NOT (vt1.c0))))<((-1.248979962E9))), TRIM(CASE WHEN vt0.c0 THEN '귇 ' WHEN vt0.c0 THEN -732585184 WHEN x'7e3c271b' THEN vt0.c0 END), '419081671', TOTAL(((vt0.c0)==(0xffffffffe9e609d9))) FROM vt0;SELECT DISTINCT ((ABS(vt1.c0)) BETWEEN (CASE WHEN vt0.c0 THEN 1942774054 END) AND (((((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0))  WHEN ((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) ELSE vt1.c0 END FROM vt0, vt1 WHERE ((CAST(NULL AS REAL) IN ((NULL IN (0.1134182781660944))))); -- 0ms;
SELECT CAST(vt0.c0 AS BLOB) COLLATE NOCASE COLLATE NOCASE FROM vt1;SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (RTRIM((NOT ('0.7178296073486504')))); -- 0ms;
SELECT ALL RANK() OVER ( ROWS ((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0))) BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND ((vt0.c0 IN ()))) PRECEDING EXCLUDE NO OTHERS), COUNT((((vt0.c0, vt1.c0, vt1.c0))>=((0.706574733771224, -1647345271, vt1.c0)))), (((((vt0.c0))>((vt1.c0))))%(((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))OR('')))), (((vt0.c0, vt1.c0, vt1.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE NOCASE, CAST((((vt1.c0))<>((vt0.c0))) AS REAL) FROM vt1 GROUP BY CASE WHEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'35b5fc89')) THEN CASE WHEN vt0.c0 THEN vt0.c0 END ELSE ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) END, ((((vt1.c0) IS TRUE))||((+ (vt0.c0)))), CAST(CASE WHEN vt1.c0 THEN vt0.c0 END AS REAL), (((vt1.c0 IN ()))>(CAST(vt0.c0 AS NUMERIC))), CASE ((vt0.c0)-(vt1.c0))  WHEN 0.3327807267696915 THEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END WHEN CAST(vt1.c0 AS NUMERIC) THEN (((vt1.c0))<=((vt0.c0))) WHEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) THEN ((vt1.c0) IS TRUE) ELSE CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END END HAVING (((((vt1.c0, vt0.c0, vt0.c0))!=((vt1.c0, vt1.c0, vt0.c0))))&(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))) ORDER BY CAST(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)) AS REAL)  NULLS FIRST, HEX((vt1.c0 IN (vt1.c0))) DESC  NULLS LAST, ((x'')%(((vt0.c0)>>(vt0.c0)))) ASC  NULLS LAST;SELECT vt0.c0 COLLATE RTRIM, ((((vt1.c0)GLOB(vt1.c0)))>(RTRIM(vt1.c0))), ((((((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))*(MAX(vt1.c0))) FROM vt1 WHERE ((+ ((('LFD') IS TRUE)))) LIMIT -370027996 OFFSET 1737314252;SELECT ALL ((vt0.c0)-(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (((((0.793277168744747)==('1942774054')))!=(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT x'276c' FROM vt1 WHERE (CAST(0.5729896001907621 COLLATE BINARY AS NUMERIC)); -- 0ms;
SELECT ALL (CAST(vt0.c0 AS BLOB) IN ()), AVG(json_array_length(vt1.c0)) OVER (), x'c8e2b078' FROM vt1, vt0; -- 1ms;
SELECT ALL (((vt1.c0 IN (vt1.c0)))AND(((vt0.c0)OR(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)/(vt1.c0)) AS NUMERIC) FROM vt0, vt1 WHERE ((+ (NULL)) COLLATE RTRIM) ORDER BY ((((vt0.c0) NOTNULL))<(vt0.c0))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN -189683173 THEN vt1.c0 WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0.04764614985586668)) THEN ((vt0.c0) ISNULL) WHEN CAST(vt1.c0 AS TEXT) THEN NULL END, TRIM(DISTINCT NULL COLLATE BINARY), (((vt1.c0))<=((vt0.c0))) COLLATE NOCASE FROM vt1 WHERE (CASE 0.5613665058929291 COLLATE BINARY  WHEN (+ (x'')) THEN CASE NULL  WHEN x'' THEN x'' WHEN 0.6083427347061793 THEN 0.6469465105685178 WHEN 0.8243182316850783 THEN '-1283838558' ELSE NULL END END);SELECT DISTINCT ((((x'') ISNULL)) NOT BETWEEN (COALESCE(DISTINCT vt1.c0, vt0.c0)) AND (AVG(vt0.c0))), ((vt0.c0 COLLATE BINARY) NOT NULL), vt0.c0, ((((x'')OR(vt1.c0))) ISNULL), (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0)) IN ()) FROM vt1 WHERE (-2136748446);SELECT DISTINCT ((((vt1.c0)>(vt0.c0)))<>(((vt1.c0)IS NOT(vt0.c0)))) FROM vt0, vt1 NOT INDEXED WHERE (json_quote(((NULL) NOTNULL))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)LIKE(x'')))GLOB((((vt0.c0))!=((vt0.c0))))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((COUNT(vt1.c0))==((- (NULL)))) FROM vt1; -- 0ms;
SELECT DISTINCT 0.4519821562115015 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) IN ()) FROM vt1, vt0 WHERE ((((((((((((((- (x'8975')))AND('479579644' COLLATE RTRIM)))OR(((x'28b1')|(-1832406342)))))AND((('-540674878')OR('\KqV\')))))AND('\nDu\H>B簡' COLLATE RTRIM)))AND((- (x'')))))AND(((0X4c35ed42) NOTNULL)))) GROUP BY x'' HAVING ((((vt1.c0 COLLATE RTRIM)OR(TYPEOF(DISTINCT vt0.c0))))OR(((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))); -- 0ms;
SELECT DISTINCT ((vt0.c0)IS NOT(MIN(vt1.c0))) FROM vt0;SELECT DISTINCT (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) IN ()), ((((json(vt1.c0))OR((((vt1.c0))<((vt0.c0))))))OR(((940425217) IS FALSE))), ((((vt1.c0 COLLATE RTRIM)OR(NULLIF(vt1.c0, vt1.c0))))AND((vt1.c0 IN ()))) FROM vt0 WHERE (((((((NULL)/('887117842')))OR(NULL)))AND(((((NULL)OR(x'')))AND(NULL)))));SELECT ALL (- (vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)=((((vt1.c0))==((vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(CAST(vt1.c0 AS REAL))), ((((vt1.c0)/(vt1.c0))) IS TRUE), ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))<<(((x'') ISNULL))) FROM vt0, vt1 WHERE ((- (0.3849566371551564)) COLLATE NOCASE) ORDER BY (((NOT (vt0.c0)))<(vt0.c0)), load_extension(CAST(vt1.c0 AS TEXT), x'') DESC  NULLS LAST;SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN ((vt1.c0) ISNULL) ELSE ((vt1.c0)/(vt0.c0)) END, ((vt0.c0) NOT NULL), ((GROUP_CONCAT(vt1.c0))>>(((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))) FROM vt0;SELECT DISTINCT LAST_VALUE(CASE vt1.c0  WHEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) THEN ((vt1.c0)=(vt1.c0)) WHEN ((vt1.c0)|(0.4327837196035309)) THEN (NOT (vt1.c0)) WHEN (~ (vt1.c0)) THEN ((vt1.c0)*(vt1.c0)) ELSE CASE WHEN vt1.c0 THEN vt1.c0 END END) OVER () FROM vt1 WHERE ((((('')>=(NULL))) IS TRUE)); -- 1ms;
SELECT ((((CAST(vt0.c0 AS REAL))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR(HEX(DISTINCT vt0.c0))), CAST(((vt0.c0) NOTNULL) AS BLOB), UNLIKELY(DISTINCT ((vt0.c0)IS NOT(vt0.c0))) FROM vt1;SELECT ((vt0.c0) BETWEEN (((vt1.c0) IS FALSE)) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt0 WHERE (json_array(CAST(NULL AS BLOB), NULL));SELECT ALL ((vt0.c0)<<(((vt0.c0)+(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0, vt1 GROUP BY (NOT (CASE WHEN '' THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt0.c0 END)), ((vt1.c0 COLLATE NOCASE) NOT NULL), ((((vt0.c0)IS(vt0.c0)))*(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))); -- 0ms;
SELECT COUNT(*) OVER (), CAST(((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)) AS REAL), (((vt0.c0) IS FALSE) IN ()) FROM vt0, vt1; -- 1ms;
SELECT vt0.c0, vt1.c0, ((vt1.c0) NOT NULL) COLLATE NOCASE FROM vt1, vt0 GROUP BY ((COALESCE(DISTINCT vt0.c0, vt1.c0)) NOT BETWEEN (LOWER(DISTINCT vt0.c0)) AND (((x'3adf2005')IS(vt0.c0)))), (((((vt1.c0)OR('1278602562')))OR(vt0.c0)) IN ()), (NOT (((vt1.c0)!=(vt1.c0)))) HAVING '1991312078'; -- 0ms;
SELECT ALL ((((-1473088284) BETWEEN (vt1.c0) AND (vt0.c0))) IS FALSE) FROM vt1, vt0 WHERE ('-370027996'); -- 0ms;
SELECT DISTINCT LIKELY(CAST(x'' AS TEXT)), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (COUNT(vt1.c0))), (((vt1.c0)>=(vt1.c0)) IN (TOTAL(vt0.c0))) FROM vt0, vt1 WHERE (QUOTE((((x''))>=((0.8969564397621158))))); -- 0ms;
SELECT (+ (((vt1.c0)GLOB(vt1.c0)))) FROM vt1, vt0 WHERE (((((1.395817099E9)%('-1285356770')))<=(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT CASE WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 END THEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) ELSE (vt0.c0 IN (vt1.c0, vt0.c0)) END FROM vt0;SELECT DISTINCT CAST(((vt1.c0)/(vt1.c0)) AS REAL) FROM vt0 NOT INDEXED, vt1 WHERE (LOWER(CAST(NULL AS INTEGER))); -- 0ms;
SELECT DISTINCT ((((vt1.c0 IN ())))<=((((vt0.c0) IS FALSE)))) FROM vt1, vt0 GROUP BY '<9', '', '-789245833'; -- 1ms;
SELECT ALL CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC) FROM vt1 LIMIT 297909718 OFFSET 1610028834;SELECT DISTINCT (((- ('.3'))) NOT NULL) FROM vt1, vt0 WHERE ((- (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT ((CAST(vt1.c0 AS NUMERIC))||(((vt1.c0) NOT NULL))) FROM vt0;SELECT ALL CAST(((vt1.c0) BETWEEN (x'2965') AND (vt1.c0)) AS REAL), ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND((- (vt0.c0)))))OR(STRFTIME(vt0.c0, vt0.c0, vt1.c0, vt0.c0, vt1.c0))))OR(((vt1.c0) ISNULL))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CASE WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt0.c0) IS TRUE) END FROM vt0;SELECT DISTINCT ((x'')<(LTRIM(vt0.c0, vt1.c0))) FROM vt0 WHERE (((-1728314752 COLLATE NOCASE) NOTNULL));SELECT DISTINCT AVG((vt0.c0 IN (vt1.c0))) OVER (), ((((((vt0.c0)/(vt0.c0)))AND((((vt1.c0))>((vt0.c0))))))AND(CAST(vt0.c0 AS INTEGER))), TOTAL(((vt1.c0) IS TRUE)) OVER (), ((((((vt1.c0)LIKE(x'')))OR((+ (vt1.c0)))))AND(COUNT(vt0.c0))), (+ (((vt1.c0) NOT NULL))) FROM vt0, vt1 WHERE (CAST(NULL COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( PARTITION BY ((((vt1.c0) NOT BETWEEN (1.28741502E9) AND (vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (x'')))), (~ (vt1.c0)) COLLATE NOCASE ORDER BY (((vt1.c0)) BETWEEN ((CASE WHEN vt1.c0 THEN vt0.c0 END)) AND ((CASE WHEN vt1.c0 THEN vt0.c0 END))) DESC) FROM vt0 GROUP BY INSTR(((vt0.c0)>>(vt0.c0)), CAST(vt0.c0 AS BLOB)), ((vt0.c0) BETWEEN (UPPER(vt0.c0)) AND ((vt0.c0 IN ()))), ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)) COLLATE BINARY HAVING (((+ (vt1.c0)))%(json_array(0xffffffffca1d1038, NULL)));SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '-1393702268' THEN vt1.c0 ELSE vt1.c0 END)LIKE(vt1.c0 COLLATE NOCASE)) FROM vt1, vt0 ORDER BY json(((vt0.c0)<=(vt0.c0))); -- 0ms;
SELECT ALL ((json_remove(vt1.c0, vt1.c0, x'', vt0.c0))GLOB('')) FROM vt1;SELECT DISTINCT ((((vt0.c0) NOTNULL))<=(vt1.c0)), (+ (0.6143779902622303)), ((((((vt0.c0)<(vt1.c0)))OR((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND(((-373556524)>(vt1.c0)))), ((((vt0.c0) NOT NULL)) ISNULL), CASE ((vt1.c0)IS NOT(vt0.c0))  WHEN (((vt0.c0, vt0.c0, vt1.c0))!=((vt0.c0, vt0.c0, vt0.c0))) THEN COUNT(*) WHEN ((vt1.c0) IS TRUE) THEN ((0.7160878422763172)&(vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt0.c0)&(vt1.c0)) WHEN vt0.c0 THEN NULL COLLATE BINARY WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)) THEN (vt1.c0 IN ()) END FROM vt0 WHERE (CAST(ABS(DISTINCT NULL) AS REAL));SELECT ALL ((TRIM(DISTINCT -556143368, vt1.c0))==(AVG(vt0.c0))) FROM vt1 WHERE ((((0.3964794948396123)) BETWEEN (((((NULL)) BETWEEN ((0.22392460249334845)) AND ((NULL))))) AND (('' COLLATE BINARY))));SELECT CASE WHEN ((vt0.c0) NOT NULL) THEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) WHEN COUNT(*) THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN (vt1.c0 IN ()) THEN ('' IN ()) END FROM vt1;SELECT DISTINCT ((vt1.c0 COLLATE BINARY)>('s4%*[p')), ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) COLLATE NOCASE, LOWER(vt0.c0 COLLATE RTRIM) FROM vt0 WHERE ((+ (((((((((0Xffffffff8f40e422)OR(NULL)))AND(x'')))AND('1610028834')))OR(0.9992591872838081)))));SELECT CASE WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0) NOT NULL) WHEN ((vt1.c0)*(vt1.c0)) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN (- (vt1.c0)) THEN SUM(vt1.c0) WHEN (((x'76a75c27'))>=((NULL))) THEN 0X7a30e9bc WHEN ((vt1.c0)GLOB(vt0.c0)) THEN NULL END FROM vt0;SELECT (((0.047314636713621905, vt1.c0, vt1.c0)) NOT BETWEEN ((((vt0.c0)||(vt0.c0)), (~ (vt1.c0)), vt1.c0)) AND ((vt0.c0 COLLATE RTRIM, vt1.c0 COLLATE BINARY, vt0.c0))) FROM vt0;SELECT AVG((NOT (vt0.c0)) COLLATE BINARY) FROM vt0 ORDER BY CASE WHEN (NULL IN ()) THEN ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0)) END ASC;SELECT DISTINCT (~ (vt1.c0)) FROM vt0, vt1; -- 0ms;
SELECT 0.7888058877195029 FROM vt0, vt1 WHERE (((0.7178296073486504) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)|(vt0.c0)))OR(GROUP_CONCAT(vt1.c0))))AND(vt1.c0)) FROM vt1;SELECT LAG((((vt1.c0, vt1.c0, vt1.c0)) NOT BETWEEN ((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)), (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), (vt1.c0 IN ()))) AND (((((('')AND(vt1.c0)))OR(vt1.c0)), LENGTH(vt1.c0), vt1.c0))), ((json_remove(vt1.c0, vt1.c0)) NOT NULL), json_insert(vt1.c0, vt1.c0, vt1.c0, vt1.c0, 539766495) COLLATE BINARY) OVER () FROM vt1 GROUP BY '-904064968' HAVING (((- (vt1.c0))) NOT BETWEEN ((vt1.c0 IN (0.7888058877195029))) AND (((vt0.c0)AND(NULL))));SELECT ALL vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))*(((((vt0.c0)AND(x'')))AND(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL NULL, (((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((MIN(NULL)))), (((vt0.c0)/(vt1.c0)) IN ()), ((CAST(vt0.c0 AS REAL)) BETWEEN (x'94f0c54c') AND (CAST(vt0.c0 AS INTEGER))), (NOT ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1;SELECT DISTINCT CAST(vt0.c0 AS REAL) COLLATE BINARY COLLATE BINARY FROM vt1;SELECT DISTINCT CAST(vt1.c0 AS INTEGER), ((((CAST(NULL AS INTEGER))AND(((vt0.c0)||(vt0.c0)))))AND(SUM(vt0.c0))), ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(((vt0.c0)*(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(ABS(vt1.c0)) FROM vt0, vt1 WHERE (((((CAST(0.9773829373656692 AS BLOB))OR(((x'') ISNULL))))AND(CASE 'D?'  WHEN 0xffffffff8705aa94 THEN 0.8379387947054553 WHEN '৙Vav켃f' THEN '-1032094687' WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) IS TRUE)  WHEN ((vt0.c0)==(vt1.c0)) THEN (((('1764760012')AND(vt0.c0)))OR(vt0.c0)) WHEN (((vt0.c0))=((vt1.c0))) THEN (((vt0.c0))<((vt1.c0))) WHEN CAST(vt0.c0 AS NUMERIC) THEN vt1.c0 ELSE vt1.c0 COLLATE RTRIM END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((json_quote(vt0.c0)) ISNULL) FROM vt0 WHERE (CAST(410898449 AS TEXT)); -- 4ms;
SELECT COUNT(*), TYPEOF(TYPEOF(vt1.c0)), CASE PRINTF(vt1.c0)  WHEN vt1.c0 COLLATE NOCASE THEN ((vt1.c0)GLOB(vt1.c0)) WHEN NULL THEN MIN(vt0.c0, vt0.c0) WHEN CAST(vt0.c0 AS TEXT) THEN MAX(vt0.c0) END FROM vt0;SELECT DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE ((('867995932') NOTNULL) COLLATE BINARY); -- 0ms;
SELECT COUNT(*) OVER () FROM vt1 WHERE (CASE CAST(x'' AS BLOB)  WHEN (NULL IN ()) THEN NULL COLLATE NOCASE WHEN (((('풹y&cd3k9<')OR('243470637')))AND('-1859255314')) THEN ((0.22653455304307757) ISNULL) WHEN ((0xffffffffdfc5f4c2) NOT BETWEEN (0.13260322845710626) AND (x'')) THEN (('u') NOT BETWEEN (0.8508736799005003) AND (NULL)) END); -- 1ms;
SELECT 'r}H', (~ (((vt1.c0)|(vt1.c0)))), (vt0.c0 COLLATE NOCASE IN ()), CASE WHEN ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) THEN ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)) END, (('-262426676')>>(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1 WHERE (CAST(((NULL)|(0.368076586656398)) AS INTEGER)) ORDER BY (- (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END));SELECT ALL CUME_DIST() OVER () FROM vt1, vt0 WHERE (((((((((((((((x'')AND('259372592')))AND(0.21494235882494173)))OR(x'')))AND(NULL)))AND('-126232444')))AND(0xffffffffde9ca4f2))) BETWEEN (((x'') NOTNULL)) AND (CAST(NULL AS BLOB)))); -- 0ms;
SELECT (((NOT ('D?')))/((('867995932')||(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL (vt1.c0 IN ()) COLLATE NOCASE FROM vt1 WHERE (CASE WHEN ((x'3b4a') NOT NULL) THEN 0.22441684440033882 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT 0.018064236913275633 FROM vt1 WHERE (highlight((- ('')), ((0.4709903649912952)IS('')), CAST(0.2811298479573655 AS BLOB), UNLIKELY(-1.31331315E8)));SELECT (~ (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) FROM vt1;SELECT MIN(vt1.c0) FROM vt0 NOT INDEXED, vt1 WHERE (TIME((((-1248979962))>(('-1338643055'))), x'' COLLATE NOCASE, ((NULL) NOT NULL))); -- 0ms;
SELECT DISTINCT (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), (((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) IN ()), ((vt0.c0) ISNULL) FROM vt1;SELECT ALL CAST((('1610028834')>=(vt1.c0)) AS BLOB) FROM vt0;SELECT DISTINCT (- ((- (vt1.c0)))) FROM vt1, vt0 WHERE (x'faa83f6c' COLLATE BINARY COLLATE BINARY) LIMIT -2040027242 OFFSET -1580933306; -- 0ms;
SELECT DISTINCT ((((vt1.c0)!=(vt0.c0)))IS NOT(((vt1.c0)IS(vt1.c0)))), vt1.c0, ((((vt0.c0)IS NOT(vt1.c0)))-(COUNT(*))) FROM vt1, vt0 WHERE (((UPPER(DISTINCT 1061909572))>>(CASE WHEN x'56fd' THEN ',?n!.%~' ELSE '1837985307' END))); -- 0ms;
SELECT ALL json_patch(vt1.c0 COLLATE BINARY, IFNULL(vt0.c0, vt0.c0)) FROM vt1 WHERE ((((0.2811298479573655, NULL, '-892633322')) BETWEEN ((CASE WHEN '537809804' THEN x'' END, ((((NULL)AND(0.12753535553601558)))AND('')), ROUND(NULL, 0.887375537607426))) AND (((('U*~E-e') ISNULL), ((0.25341916639610174) IS FALSE), CAST(NULL AS REAL)))));SELECT DISTINCT (((vt0.c0 COLLATE BINARY))==((((vt1.c0) NOT NULL)))) FROM vt1, vt0; -- 0ms;
SELECT (vt0.c0 IN ()), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))IS NOT(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), CAST(((vt0.c0)GLOB(vt1.c0)) AS INTEGER) FROM vt0;SELECT NULLIF(vt0.c0, ((vt1.c0)LIKE(vt0.c0))) FROM vt0 WHERE (CAST(((0.9715364408144802) IS FALSE) AS NUMERIC));SELECT DISTINCT CASE (NOT (vt0.c0))  WHEN NULL THEN vt1.c0 COLLATE BINARY ELSE ((vt1.c0)=(vt1.c0)) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT x'' FROM vt0, vt1 WHERE (0.34745423017413934); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE ((('\') BETWEEN (((-1682143888)<>('<뼬v?'))) AND (0.8321608000231129))); -- 0ms;
SELECT (((((vt1.c0))>=((vt0.c0))))>=(vt1.c0)) FROM vt0, vt1 WHERE (((((x'd0e0')<<('c<璳	T')))<<((((NULL)) BETWEEN ((x'1ea8')) AND ((NULL)))))) GROUP BY (((((vt1.c0 IN ()))OR((vt1.c0 IN (vt0.c0)))))AND(vt0.c0)), (vt0.c0 IN ((~ (vt0.c0)), ((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))AND(x'')))), (((vt1.c0 IN ()))%(vt0.c0 COLLATE BINARY)) HAVING ((LIKELIHOOD(vt1.c0, 0.2261335054748197)) NOTNULL); -- 1ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)|(((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))), CAST(vt1.c0 COLLATE BINARY AS TEXT), CASE WHEN '' THEN MIN(vt1.c0) WHEN ((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)*(vt0.c0)) THEN ((vt0.c0)&(vt1.c0)) END FROM vt0, vt1 GROUP BY vt0.c0 HAVING (vt1.c0 COLLATE RTRIM IN (((vt0.c0)>(vt1.c0)))); -- 0ms;
SELECT ALL (((- ('u')))GLOB(SUM(vt0.c0))) FROM vt0 GROUP BY ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0))) NOTNULL), json_patch((('c>!e') NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((vt1.c0) NOTNULL)), ((((((((GLOB(vt1.c0, 0.6029286407481531))AND((NOT (vt1.c0)))))AND((+ (vt1.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) HAVING x'';SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS TEXT) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN TRIM(vt0.c0, x'') THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) END, ((CASE WHEN vt0.c0 THEN NULL END) NOT BETWEEN ((~ (vt0.c0))) AND ((NOT (vt0.c0)))), UNLIKELY(CAST(vt0.c0 AS INTEGER)) FROM vt1, vt0 GROUP BY (('-833995928')<<(((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))) HAVING vt0.c0; -- 0ms;
SELECT DISTINCT (~ (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1, vt0 WHERE (((((1764760012)<('2027194298')))*((('#z')*('eRS-<쨃'))))); -- 0ms;
SELECT DISTINCT load_extension(CAST(vt0.c0 AS TEXT), vt1.c0 COLLATE BINARY), CASE ((vt0.c0)AND(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN ('182565965') AND (vt0.c0)) THEN AVG(vt1.c0) ELSE ((vt0.c0)*(x'')) END, SUM(((vt1.c0)||(vt0.c0))) FROM vt1, vt0 WHERE (((((((x'')+(-1.832406342E9)))AND((NOT ('')))))OR(((x'') IS TRUE)))) GROUP BY ((((COALESCE(x'', vt0.c0))AND(CASE WHEN vt0.c0 THEN vt1.c0 END)))AND(((vt1.c0) IS FALSE))), (((- (vt0.c0))) BETWEEN (((vt1.c0)<<(vt0.c0))) AND (NULL)), ((((vt0.c0) NOTNULL)) BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt1.c0))) AND (CAST(vt1.c0 AS NUMERIC))), CAST(vt1.c0 AS NUMERIC) COLLATE RTRIM, ((((vt0.c0)IS(vt1.c0)))GLOB(vt1.c0 COLLATE RTRIM));SELECT CASE vt0.c0  WHEN ROUND(vt1.c0, vt1.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt0.c0)<<(vt0.c0)) THEN (vt1.c0 IN ()) WHEN LAST_INSERT_ROWID() THEN (NOT (vt0.c0)) WHEN CAST(vt0.c0 AS TEXT) THEN CASE WHEN '988050143' THEN vt0.c0 WHEN NULL THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN '' END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)GLOB(vt0.c0)))OR(vt0.c0)))AND(vt1.c0 COLLATE RTRIM)), TRIM(vt1.c0) COLLATE RTRIM, FIRST_VALUE(((vt1.c0 COLLATE RTRIM)!=(0.2730467713057143))) OVER () FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((~ (vt1.c0))) NOT BETWEEN (vt1.c0) AND ((+ (vt1.c0)))), (+ (x'5d572d90')), x'' FROM vt0 WHERE ((~ (5.37809804E8 COLLATE BINARY)));SELECT ALL (vt1.c0 COLLATE NOCASE IN (GROUP_CONCAT(''), (((0X678d4fcc)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))), vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE ((+ ('')));SELECT ALL ((vt0.c0 COLLATE NOCASE)==(((vt1.c0)-(vt1.c0)))) FROM vt0, vt1 WHERE (NULL); -- 0ms;
SELECT ALL ((((vt0.c0)<(vt1.c0)))<=(vt1.c0 COLLATE RTRIM)) FROM vt1, vt0 WHERE ((0xffffffffdaf824eb IN ())) GROUP BY UNLIKELY(DISTINCT (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0)))); -- 0ms;
SELECT vt0.c0, TOTAL((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0)))), ((((COUNT(*))OR(LOWER(vt1.c0))))AND(vt0.c0)) FROM vt1, vt0 GROUP BY CAST((vt1.c0 IN ()) AS REAL), 0.25834045914535986, ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))GLOB(CAST(vt0.c0 AS REAL))); -- 1ms;
SELECT DISTINCT ((((0.13260322845710626) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE((~ (vt0.c0)))) FROM vt0, vt1 WHERE (((x'')IS('' COLLATE BINARY))); -- 0ms;
SELECT CASE WHEN ((vt0.c0) NOT NULL) THEN COUNT(*) ELSE ('' IN ()) END FROM vt1;SELECT ALL ((((((((CAST(vt0.c0 AS INTEGER))AND(((vt0.c0) NOT NULL))))AND(NULL)))AND((((vt1.c0, vt0.c0, vt0.c0))<>((vt0.c0, vt1.c0, vt1.c0))))))AND((vt0.c0 IN ()))) FROM vt0, vt1 WHERE (((0xffffffffa136a043 COLLATE NOCASE) NOT BETWEEN ((+ (0.3704012966556538))) AND ((((x''))>=(('yE*<+8q[')))))); -- 1ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0 WHERE (x'' COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt1.c0)))AND('TRUE')))) AND ((((vt1.c0) IS FALSE)))) FROM vt1, vt0 WHERE (ABS(DISTINCT LTRIM('1837985307'))); -- 0ms;
SELECT DISTINCT ((((vt1.c0) NOT NULL))>>(MIN(vt1.c0))), (((((vt1.c0 IN ()))AND((NOT (vt0.c0)))))AND(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))), ((CASE WHEN vt0.c0 THEN 'I~ZYA' END) ISNULL) FROM vt0 LIMIT -1357995073 OFFSET -1923772551;SELECT ALL LEAD(CAST(vt0.c0 COLLATE BINARY AS INTEGER), x'', ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))||(((vt0.c0)%(vt1.c0))))) OVER (), NULLIF(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)), ((vt1.c0) NOT NULL)), CAST(((0.9580272631189012)>(vt0.c0)) AS BLOB), CAST(((vt0.c0)<<(NULL)) AS INTEGER), ((((vt1.c0)|(x'')))=(NULLIF(DISTINCT vt1.c0, vt1.c0))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((vt1.c0) IS TRUE) COLLATE NOCASE, 0.34292424903929164, ((((((((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(((vt1.c0)GLOB('608941454')))))AND(((((((((((((vt1.c0)AND(vt1.c0)))OR('1994983791')))OR(NULL)))AND(vt1.c0)))OR(0xffffffffca1d1038)))AND(vt1.c0)))), CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN vt1.c0 COLLATE BINARY WHEN vt1.c0 COLLATE RTRIM THEN CAST(vt0.c0 AS NUMERIC) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((0.4019169663389671)||(vt0.c0)) ELSE '-5525195' END, ((((vt1.c0)+(x''))) ISNULL) FROM vt0;SELECT ALL COUNT(*) FROM vt0, vt1 ORDER BY ((((vt1.c0)IS(vt1.c0))) BETWEEN ((vt0.c0 IN ())) AND (x'b25c' COLLATE BINARY))  NULLS FIRST; -- 0ms;
SELECT (- (vt1.c0)) COLLATE NOCASE FROM vt0 WHERE (((((('-142052800'))>=(('1515680947')))) ISNULL)) LIMIT 1338310261 OFFSET 40721052;SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))OR(((vt0.c0)LIKE(vt1.c0)))) FROM vt1 WHERE ((- (json_remove('867995932', '0.9918309832176186', '-297621672', NULL))));SELECT (((vt1.c0)) NOT BETWEEN (((vt0.c0 IN ()))) AND ((CAST(vt0.c0 AS BLOB)))), CASE WHEN ((vt1.c0)<<(vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END, (((((x'')>(vt1.c0))))>=(((vt0.c0 IN (vt0.c0))))) FROM vt0;SELECT ((CASE WHEN vt0.c0 THEN vt0.c0 END)-(x'')) FROM vt1, vt0 UNION ALL SELECT SQLITE_COMPILEOPTION_GET(((x'') BETWEEN (vt1.c0) AND (vt1.c0))) FROM vt0 WHERE ((~ (((0.38189902701634737) NOT BETWEEN (x'dcc3') AND (0.9580272631189012)))));SELECT ALL (((((((((vt0.c0 IN (vt0.c0, vt1.c0)))AND((vt0.c0 IN ()))))OR(UNICODE(x'a3e8'))))OR(MIN(vt0.c0))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt0, vt1 WHERE (((((CASE '-0.0'  WHEN -1.790370163E9 THEN 'mJ.' WHEN '>|' THEN 0.29480899563610174 WHEN x'' THEN '' END)OR(CASE NULL  WHEN NULL THEN 0.5822581264979051 WHEN 'ᐆY2|z଍j5' THEN 0.29480899563610174 WHEN 'k|' THEN 539766495 END)))AND(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((~ (0.35043674897293786)))OR(((vt0.c0)>>(vt0.c0)))), ((AVG(vt1.c0))*((vt0.c0 IN (vt0.c0)))), ROW_NUMBER() OVER ( RANGE ((((CAST(vt1.c0 AS NUMERIC))AND(((((((((vt0.c0)OR(vt1.c0)))OR(x'070d')))AND(vt0.c0)))OR(vt0.c0)))))OR(vt1.c0 COLLATE BINARY)) PRECEDING) FROM vt0;SELECT DISTINCT vt0.c0, vt0.c0, (NOT (((vt0.c0)%(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT LEAD(CASE WHEN (NULL IN (vt0.c0, vt0.c0)) THEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END ELSE (- (vt1.c0)) END, (~ (CAST(vt0.c0 AS REAL))), ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)))*(((vt1.c0)LIKE(vt0.c0))))) OVER (), ((vt0.c0)|(((vt1.c0)IS NOT(vt0.c0)))), (((vt1.c0, vt0.c0, vt0.c0)) BETWEEN (('1764760012', vt1.c0, ((NULL)AND(vt0.c0)))) AND ((UNICODE('2022069020'), vt0.c0, ((vt1.c0)<(vt0.c0))))) FROM vt1, vt0 WHERE (SQLITE_COMPILEOPTION_GET(x'327f')); -- 1ms;
SELECT (9.12016891E8 IN ()) FROM vt0, vt1 WHERE (CAST(CAST(0.22441684440033882 AS INTEGER) AS REAL)); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END) ISNULL) FROM vt0 WHERE (CAST((x'a502' IN ()) AS NUMERIC));SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((NULL)+(NULL)) IN ())) LIMIT 2128763777 OFFSET 479579644; -- 1ms;
SELECT CAST(AVG(vt1.c0) AS INTEGER) FROM vt0, vt1 ORDER BY vt0.c0 ASC; -- 0ms;
SELECT DISTINCT ((((vt0.c0)||(vt0.c0))) NOTNULL) FROM vt0, vt1 WHERE ((((x'')) BETWEEN ((((1136324330)&(x'')))) AND (((('-1714704974') BETWEEN (0.16371667156289138) AND (NULL)))))); -- 0ms;
SELECT DISTINCT NTILE(CASE ((vt1.c0)<(vt1.c0))  WHEN ((NULL) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN vt1.c0 WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.11338601700102191 END THEN CASE WHEN vt1.c0 THEN 'ꏵ齱9N﷉9[' END WHEN CAST(vt1.c0 AS REAL) THEN ((vt1.c0) IS TRUE) END) OVER () FROM vt1 WHERE (((((((('1858886034'))==((x''))))AND((0.8590313558873893 IN (x'')))))OR((~ (x'')))));SELECT DISTINCT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT (('879452864') IS TRUE) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (- (vt0.c0))) FROM vt1, vt0 WHERE (SQLITE_SOURCE_ID()); -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0)AND(vt0.c0)) THEN ((NULL)<(vt0.c0)) ELSE ((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)) END, CASE (~ (vt1.c0))  WHEN 0.29887357348999477 THEN vt0.c0 ELSE ((vt0.c0)>(vt0.c0)) END, ((0xffffffffab5632a0) NOTNULL) FROM vt0, vt1 WHERE ((~ (CAST('-373556524' AS NUMERIC)))); -- 0ms;
SELECT ALL CAST((+ (vt1.c0)) AS TEXT), AVG(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN 0.5843864243427924 ELSE vt0.c0 END) OVER (), ((((LIKELY(vt0.c0))OR(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))AND((vt0.c0 IN ()))) FROM vt1, vt0; -- 1ms;
SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (x''))) BETWEEN (((vt1.c0) IS TRUE)) AND (((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), ((CAST(vt1.c0 AS TEXT))<=('361981686')), ((vt1.c0)|(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE (((NULL IN ()) IN ()));SELECT DISTINCT ((CAST(vt1.c0 AS BLOB))%(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM vt0, vt1 WHERE (UNICODE(CAST(x'' AS TEXT))); -- 0ms;
SELECT ALL x'e9a88a61', CASE 0.21880387358951336  WHEN ((((vt1.c0)AND(vt0.c0)))OR(-1119759969)) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt0.c0 AS REAL) END, MIN(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt1;SELECT DISTINCT (+ (COUNT(*))), ((vt1.c0 COLLATE BINARY) ISNULL), ((CASE '\nmT1'  WHEN vt1.c0 THEN vt0.c0 END) IS FALSE) FROM vt1 WHERE (((((((NULL)OR('1976079004')))AND(x''))) BETWEEN (((0.9527669670658738) BETWEEN ('7J~K!3%p') AND (x''))) AND (CAST('' AS REAL))));SELECT DISTINCT SUM(vt0.c0) FROM vt1;SELECT DISTINCT ((((-1.032094687E9)AND((NOT (vt0.c0)))))AND(vt0.c0)), ((CAST(1061909572 AS NUMERIC)) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) AND (vt1.c0 COLLATE RTRIM)), TRIM(DISTINCT IFNULL(vt0.c0, vt1.c0), ((vt1.c0) ISNULL)) FROM vt0, vt1; -- 1ms;
SELECT ((((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN 0.6424984467435357 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 END)AND(AVG(vt1.c0))))AND((+ (vt0.c0)))) FROM vt1, vt0 WHERE ((NOT (NULL))); -- 0ms;
SELECT ('' IN ()), (~ ((vt0.c0 IN (vt0.c0)))), (+ ((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) FROM vt1, vt0 ORDER BY (((((vt0.c0))>=((vt0.c0)))) NOTNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*), ((MIN(vt1.c0, 'T]QM+q1U쾽')) IS TRUE), CAST(((vt0.c0)=(vt1.c0)) AS INTEGER), vt0.c0, (((CASE vt1.c0  WHEN vt1.c0 THEN -1684625613 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE NULL END))>=((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT ALL LAST_VALUE(CAST(((vt0.c0)IS NOT(vt0.c0)) AS TEXT)) OVER (), (CAST(vt1.c0 AS REAL) IN ()), LENGTH(x'd84d') FROM vt0 WHERE (((((x'')>(0.33288351610337363)))IS NOT(((((((((0.4772925502401396)OR(NULL)))AND('1672328682')))AND('-280663476')))AND(1991312078))))); -- 1ms;
SELECT DISTINCT ((((0X5cbb35c1)OR(vt1.c0 COLLATE RTRIM)))AND(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0, vt1 WHERE ((((NULL IN ()))%(CAST(x'' AS INTEGER)))); -- 0ms;
SELECT ALL (NOT ((vt0.c0 IN (vt0.c0)))), (((('650442606')OR(((vt0.c0)LIKE(vt0.c0)))))OR((vt1.c0 IN (vt1.c0, vt1.c0)))), (- (CAST(vt0.c0 AS TEXT))) FROM vt0, vt1 ORDER BY ((((((((vt0.c0)AND(((vt0.c0) NOTNULL))))OR(0.13530627602014622)))OR((((vt1.c0))<((vt0.c0))))))OR(COALESCE(vt0.c0, x'edd0')))  NULLS FIRST; -- 0ms;
SELECT HEX(((((((((vt1.c0)AND(0.1709812274721605)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT ALL (((- (vt1.c0)))IS(vt1.c0 COLLATE RTRIM)) FROM vt0 ORDER BY CASE WHEN vt1.c0 COLLATE RTRIM THEN (~ (vt0.c0)) ELSE ((vt1.c0)&(vt1.c0)) END DESC;SELECT DISTINCT CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER) FROM vt1, vt0 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT ALL CAST(((((NULL)AND(vt1.c0)))AND(vt0.c0)) AS BLOB) FROM vt0;SELECT DISTINCT ((((vt1.c0)AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END)))OR(vt0.c0)) FROM vt0 WHERE ((((((x'', NULL, NULL)) NOT BETWEEN ((x'fad322a2', '', 'w')) AND ((-1961691600, '0.8321608000231129', '1691780446')))) BETWEEN (NULLIF(DISTINCT '388578849', 0.029588016252550364)) AND (NULL)));SELECT ALL (vt0.c0 IN ()) COLLATE BINARY FROM vt1; -- 0ms;
SELECT (((vt0.c0 IN ())) IS TRUE), vt1.c0, CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) AS BLOB) FROM vt0, vt1 WHERE (((CASE WHEN -3.70800167E8 THEN x'' WHEN NULL THEN -1060775047 WHEN NULL THEN NULL WHEN x'e719' THEN 'qC' WHEN NULL THEN NULL ELSE 30595032 END) IS TRUE)); -- 0ms;
SELECT ALL TRIM(DISTINCT CAST(vt0.c0 AS TEXT), (- (vt0.c0))), (~ (((vt1.c0) NOTNULL))), AVG((+ (vt1.c0))) FROM vt0, vt1 WHERE ((- (CAST(-365975983 AS TEXT)))); -- 0ms;
SELECT ALL vt1.c0, NTILE((((vt0.c0 IN (vt0.c0, vt0.c0)))&(CAST(vt0.c0 AS NUMERIC)))) OVER (), (vt1.c0 IN (CAST(0.7932225584516538 AS NUMERIC))) FROM vt0 WHERE (CAST('0.368076586656398' COLLATE NOCASE AS TEXT)) ORDER BY (CAST(vt1.c0 AS TEXT) IN ())  NULLS LAST, (+ ((vt1.c0 IN ()))), LOWER((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))));SELECT ((vt1.c0) IS TRUE) COLLATE NOCASE FROM vt0 WHERE ((+ ('	.')) COLLATE NOCASE) GROUP BY TRIM(DISTINCT CAST(vt0.c0 AS TEXT), ((vt1.c0)%(vt1.c0))) ORDER BY vt1.c0 ASC;SELECT DISTINCT CAST(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)) AS BLOB) FROM vt0 NATURAL JOIN vt1 WHERE (((json_valid('-1200787872'))|(x''))); -- 0ms;
SELECT DISTINCT (- ((NOT (vt0.c0)))) FROM vt1 WHERE ((((CASE '-373556524'  WHEN 0.46081187266650525 THEN x'784e' ELSE NULL END))<=((((1109244096) NOT BETWEEN ('Bp.y') AND (NULL))))));SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, vt0; -- 1ms;
SELECT ALL ((vt0.c0 COLLATE NOCASE)>>(CAST(vt1.c0 AS INTEGER))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c0)GLOB(vt1.c0))) OVER (), 0.2920419060030799, ((((vt1.c0) IS FALSE)) BETWEEN (((('985330437', vt1.c0, vt1.c0))>((vt1.c0, vt0.c0, vt1.c0)))) AND (MIN(vt1.c0))) FROM vt0, vt1 WHERE (((CASE WHEN 5.9320534E7 THEN 0xffffffff85085267 WHEN 0.11869341584999149 THEN '1610028834' WHEN 'Yn27as\n8Q' THEN 0.8040453481100911 WHEN x'' THEN '1942774054' WHEN 0.7178296073486504 THEN 0.6684430572725463 END) BETWEEN (0.7246692708700088 COLLATE BINARY) AND (((x'b74d')IS(x''))))) GROUP BY UPPER(vt1.c0 COLLATE NOCASE) HAVING ((((vt1.c0)IS(vt1.c0))) ISNULL); -- 0ms;
SELECT (+ (vt1.c0)) COLLATE BINARY FROM vt0, vt1 WHERE ((x'bf2e' IN ())) ORDER BY (((((vt1.c0 IN ()))AND((~ (vt1.c0)))))OR(((((((((vt1.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT ((((vt0.c0)<=(vt0.c0)))<=(((vt1.c0) NOT NULL))) FROM vt0;SELECT TYPEOF(DISTINCT MAX(vt1.c0)) FROM vt0 WHERE (CAST(CAST(x'' AS NUMERIC) AS REAL));SELECT TOTAL(((vt0.c0)||(vt0.c0))) OVER () FROM vt1, vt0 WHERE (((CASE '-2067532819'  WHEN x'' THEN 'now' END)=(((x'') BETWEEN (NULL) AND (765191837))))); -- 0ms;
SELECT (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN (((- (vt0.c0)), ((vt0.c0)&(vt1.c0)), (vt1.c0 IN ()))) AND ((GROUP_CONCAT(vt1.c0), (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))), (((vt1.c0))>=((vt0.c0)))))), ((vt0.c0)+('1202917344' COLLATE NOCASE)), ((((vt1.c0) IS TRUE)) NOT NULL) FROM vt0;SELECT ALL ((vt1.c0 IN ()) IN ()) FROM vt1, vt0 WHERE (((((((((((((x'4341' COLLATE NOCASE)AND(((('1287349487', x'', '0.21494235882494173'))>(('', 0.9848011836418864, ''))))))OR(CAST('546950174' AS NUMERIC))))AND(((((x'')OR(NULL)))AND(2027194298)))))OR(((2.43470637E8)<=('LWKqq^n풹')))))OR((+ (0.706574733771224)))))OR(x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (+ ((vt1.c0 IN (vt1.c0)))) FROM vt0, vt1 WHERE ((((('\r1')IS(0.01988469347758748))) ISNULL)); -- 0ms;
SELECT ALL CASE ((vt1.c0) IS FALSE)  WHEN (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) THEN CAST(vt1.c0 AS TEXT) END FROM vt0, vt1 WHERE ((- ('-189683173' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TYPEOF((((vt0.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c0, vt1.c0, vt1.c0)))), CHAR(NULLIF(DISTINCT vt1.c0, vt1.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE RTRIM, NULL, ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (CAST(vt0.c0 AS REAL))) FROM vt1, vt0; -- 0ms;
SELECT ALL (NULL IN ()) FROM vt0 WHERE (((((x'126d') NOTNULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)AND(vt1.c0)) AS NUMERIC), CAST((- (vt1.c0)) AS NUMERIC), (((vt1.c0)) BETWEEN ((LIKELY(vt0.c0))) AND ((((vt1.c0) IS TRUE)))) FROM vt0, vt1; -- 0ms;
SELECT vt0.c0, (((NOT (vt1.c0)))OR(CAST(vt1.c0 AS BLOB))), ((((((0.12753535553601558)AND(vt1.c0)))AND(vt1.c0)))>(CAST('1287415020' AS INTEGER))) FROM vt1, vt0 ORDER BY CAST((1.061909572E9 IN ()) AS REAL) DESC, ((((((vt1.c0))<((vt1.c0)))))<>((((vt1.c0)>=(vt1.c0)))))  NULLS FIRST, ((CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END)|(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))) DESC  NULLS LAST; -- 1ms;
SELECT ALL ((((((x'a9ef') BETWEEN (1.368571692E9) AND (vt0.c0)))AND(((vt0.c0) IS FALSE))))AND((('-1393308433') NOT BETWEEN ('TRUE') AND (vt1.c0)))), TRIM(((vt1.c0)/(vt1.c0))), ((((((vt0.c0)>=(vt0.c0)))OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND((- (vt0.c0)))) FROM vt1 WHERE ((((RTRIM(0.04764614985586668)))<((CASE WHEN NULL THEN NULL END))));SELECT DISTINCT (('cf') BETWEEN ((((vt0.c0, vt1.c0, NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, x'', vt0.c0, vt0.c0, vt1.c0)))) AND ((((vt0.c0))<=((vt1.c0))))), vt1.c0, (NOT (vt1.c0)) COLLATE NOCASE FROM vt0 RIGHT OUTER JOIN vt1 ON ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0))) NOT NULL); -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))AND(((vt0.c0)IS NOT(vt1.c0)))))AND(((vt0.c0)<>(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CASE vt0.c0 COLLATE BINARY  WHEN vt1.c0 THEN vt0.c0 COLLATE RTRIM WHEN (~ (vt1.c0)) THEN ((vt1.c0) NOTNULL) WHEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (vt1.c0 IN ()) END FROM vt0, vt1; -- 0ms;
SELECT ALL '1581819961' FROM vt1 WHERE (((((((NULL)OR('yfy!O}U9X')))OR(x''))) NOT BETWEEN (((0.9363842157040744) NOT BETWEEN (x'') AND ('#\'))) AND (CASE '-1338643055'  WHEN x'' THEN 0.7160878422763172 ELSE 0.39577164233680595 END))); -- 0ms;
SELECT ALL (('I	j%^j')LIKE(CAST(vt0.c0 AS BLOB))), CAST(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 END AS NUMERIC), TOTAL((('sGJy ') ISNULL)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((((vt1.c0)OR(vt1.c0)), ((vt0.c0)%(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (0.4558693245805586)))) AND (((((vt1.c0)) NOT BETWEEN ((0.7918492234459963)) AND ((vt1.c0))), ((vt1.c0)==(vt1.c0)), (~ (vt1.c0))))), ((vt1.c0)-(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE 1.044961978E9 END)) FROM vt0 WHERE (0.5981211784647218) GROUP BY (+ (vt0.c0));SELECT (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))), ((((vt1.c0)+(vt1.c0))) ISNULL), AVG((vt1.c0 IN ()) COLLATE NOCASE) OVER () FROM vt1, vt0; -- 0ms;
SELECT ROW_NUMBER() OVER (), CUME_DIST() OVER ( ROWS CASE WHEN 'Yw[' THEN CAST(vt1.c0 AS REAL) ELSE ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) END PRECEDING EXCLUDE GROUP), (NOT (vt0.c0)) FROM vt1, vt0; -- 1ms;
SELECT ((vt1.c0 COLLATE RTRIM) IS FALSE), (((vt1.c0 IN (0.9144091532513673)))-(CAST(vt0.c0 AS NUMERIC))), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((vt1.c0 IN ())))) FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT ALL RANK() OVER () FROM vt1; -- 0ms;
SELECT ALL SUM(CAST(vt0.c0 AS TEXT)) COLLATE BINARY, (~ (((((vt0.c0)AND(x'')))AND(vt0.c0)))), (((((x'c233')AND('-1063894604')))AND(vt1.c0)) IN ()) FROM vt0 WHERE ((CASE WHEN 'ᢂs' THEN 0.9892126335622935 ELSE NULL END IN ())) LIMIT 1008245200 OFFSET -1367849521; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0) ISNULL)), COUNT(((vt1.c0) BETWEEN ('-2029671788') AND (vt0.c0))) OVER (), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)*(vt1.c0)))) AND ((CAST(vt1.c0 AS TEXT)))) FROM vt1, vt0 WHERE ((((((((((((((('N.TTz')OR(x'')))AND(x'')))OR(x'ecd88078')))AND(x'0625')))OR(1737314252)))AND(x'')))>(((0.2193433433732307) IS TRUE)))) GROUP BY 0.8714482720831853 HAVING (((((((((NOT (vt0.c0)))OR((~ (vt1.c0)))))AND((vt0.c0 IN ()))))AND((vt1.c0 IN ()))))AND(vt0.c0 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT ((vt0.c0)==(vt0.c0)) COLLATE RTRIM FROM vt1 GROUP BY vt1.c0, ((((vt0.c0) IS TRUE))<(CAST(vt1.c0 AS REAL))), (vt0.c0 COLLATE BINARY IN ()), LAST_INSERT_ROWID(), (('k膉\n8qD') BETWEEN (UPPER(DISTINCT vt1.c0)) AND (((vt0.c0)*(vt1.c0)))), vt1.c0, (~ (CAST(vt1.c0 AS TEXT)));SELECT ALL (~ ((vt0.c0 IN ()))), CUME_DIST() OVER (), ((((((((vt0.c0 COLLATE NOCASE)AND(((((((((2.97909718E8)AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR((~ (vt0.c0)))))AND(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))))OR((- (0.026134199190142704)))) FROM vt1, vt0 WHERE (CASE ((NULL) NOT BETWEEN (x'') AND (0.9918309832176186))  WHEN ((0X1afcf03) NOT BETWEEN (x'') AND (NULL)) THEN (NOT ('-1100054979')) ELSE ((NULL)/(0.3084690081060608)) END) GROUP BY vt1.c0, x'' COLLATE NOCASE, CAST(vt0.c0 COLLATE NOCASE AS REAL) HAVING (((((((vt0.c0, vt0.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0))))OR('')))AND(HEX(vt0.c0))); -- 0ms;
SELECT (('-682409687' IN ()) IN ()) FROM vt0 LIMIT -2040027242 OFFSET -752562787; -- 0ms;
SELECT DISTINCT (+ (json_type(vt0.c0))), ((((vt0.c0) ISNULL)) NOT NULL), ((((vt1.c0))<>((vt1.c0))) IN (((vt1.c0)OR(vt1.c0)))) FROM vt0, vt1 LIMIT -2012350698; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((((((((vt1.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)) WHEN MAX(x'') THEN ((vt0.c0) NOT BETWEEN (NULL) AND (0.46674533528622086)) WHEN x'' THEN (vt1.c0 IN (vt0.c0)) END FROM vt0 WHERE (((('-1433254897' IN (0.667670169252744))) NOT BETWEEN (CAST('712431966' AS INTEGER)) AND (0.9828743963063317)));SELECT DISTINCT CAST((x'' IN ('', vt1.c0)) AS REAL), ((SUM(vt0.c0))<(((vt0.c0)||(vt1.c0)))), ((((vt1.c0) IS FALSE))<=(CAST(vt1.c0 AS INTEGER))) FROM vt0 WHERE (LIKE(x'71782c0c' COLLATE NOCASE, ((NULL)>>(NULL))));SELECT COUNT(*) FROM vt1 WHERE (ABS(HEX(0.368076586656398))) LIMIT 890879126; -- 0ms;
SELECT ALL ((((CAST(x'' AS INTEGER))AND(((vt1.c0) NOTNULL))))OR((vt0.c0 IN ()))) FROM vt0, vt1 WHERE ((((((x'f7a6'))>=(('-1281410995')))) NOT BETWEEN ((NULL IN ())) AND (NULL))) GROUP BY (NOT (vt1.c0)), (((NOT (vt1.c0)))AND(UNLIKELY(vt1.c0))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))GLOB(CAST(vt1.c0 AS NUMERIC))) HAVING ((((((((((((((vt1.c0) NOTNULL))OR(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)OR('-1728314752')))AND(vt0.c0)))))AND(CASE 0Xffffffffe3a2459e  WHEN vt1.c0 THEN vt0.c0 END)))OR(((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)))); -- 0ms;
SELECT ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))<=(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))) FROM vt1 WHERE ((((0.7194869654192825)) BETWEEN ((CAST(NULL AS BLOB))) AND ((0.6143779902622303))));SELECT DISTINCT '껪,Z愦z퀑擯v', (~ (((vt1.c0)+(vt0.c0)))), ((TYPEOF(vt1.c0))<<(((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(x'')))OR(vt0.c0)))) FROM vt1;SELECT ALL CASE WHEN ((vt0.c0)+(vt1.c0)) THEN (((vt1.c0))<((vt0.c0))) WHEN ((vt1.c0) NOT BETWEEN (NULL) AND (vt0.c0)) THEN ((vt0.c0)<=(vt1.c0)) WHEN TOTAL(vt1.c0) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END END, TOTAL(((vt1.c0)|(vt1.c0)) COLLATE RTRIM) FILTER(WHERE CASE WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 WHEN ((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN (- (vt1.c0)) THEN (- (vt1.c0)) ELSE vt0.c0 COLLATE RTRIM END) OVER (), vt1.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((0.5956834437236584)>=((vt1.c0 IN (vt1.c0)))), CAST(((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), TIME(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, 0.4536054719379562, ABS(DISTINCT vt0.c0), ((((vt1.c0)AND(' '']Q%H|뵠')))AND(vt1.c0)), CASE vt1.c0  WHEN vt1.c0 THEN x'd97a' ELSE NULL END) FROM vt1 WHERE ((+ (-1.590255549E9 COLLATE NOCASE))) ORDER BY ((CAST(vt0.c0 AS REAL))OR((+ (vt1.c0))))  NULLS FIRST;SELECT ((CAST(vt1.c0 AS REAL))LIKE('')), CAST((vt0.c0 IN (vt0.c0)) AS REAL), (((~ (vt1.c0))) BETWEEN (((vt1.c0)IS NOT(vt0.c0))) AND (SUM(vt1.c0))), (((((vt0.c0) IS FALSE), CASE 0.9970585445282102  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((x'41f0') IS FALSE)))<=((MIN(vt1.c0), (~ (vt1.c0)), CASE vt0.c0  WHEN x'' THEN vt0.c0 ELSE vt0.c0 END))), (((vt0.c0)) BETWEEN ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) AND ((((vt1.c0) IS FALSE)))) FROM vt0 WHERE (('' IN ()));SELECT ALL CAST(((vt1.c0) ISNULL) AS TEXT) FROM vt1, vt0 WHERE (CASE (- (0.8250089036359128))  WHEN CAST('|4' AS TEXT) THEN (((0.665811026780484)) NOT BETWEEN ((x'ecf1')) AND ((NULL))) WHEN ((NULL) NOTNULL) THEN (('1287415020')||('')) WHEN ((0Xffffffffc4607fa2) NOT BETWEEN ('[{<Hizn') AND (0.07732545040849315)) THEN ((x'9118')+('{jz%HxY')) ELSE 'Lg\nd9' END); -- 0ms;
SELECT ALL vt1.c0, (((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 END, 0xffffffffa3cd4ffc, ((vt1.c0) IS TRUE)))<=((((vt0.c0)IS(vt1.c0)), ((vt0.c0) ISNULL), vt1.c0))), (((LIKELY(vt1.c0)))<((vt1.c0))) FROM vt0 WHERE (UPPER(((0xffffffffa136a043) NOT BETWEEN (x'') AND (0.1326352575194103))));SELECT vt0.c0 FROM vt0, vt1 GROUP BY vt1.c0; -- 1ms;
SELECT ALL vt1.c0, GROUP_CONCAT(LOWER(vt1.c0)) OVER (), ((((((vt0.c0, vt1.c0, vt1.c0))<=((vt0.c0, vt0.c0, vt1.c0)))))<((CAST(vt0.c0 AS TEXT)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(TRIM(DISTINCT LOWER(DISTINCT x'd640af64'), (vt0.c0 IN ())), (((vt0.c0)IS NOT(vt0.c0)) IN ())) OVER () FROM vt0 WHERE (CAST('1675424639' AS REAL) COLLATE NOCASE) LIMIT 182565965;SELECT (((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<(((vt1.c0)IS(vt1.c0)))), vt1.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END))) FROM vt0, vt1 WHERE ((((+ ('''ZCI!_'))) IS FALSE)); -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS NUMERIC))<=((~ (vt0.c0)))), TOTAL((+ (vt0.c0))) FILTER(WHERE CASE WHEN ABS(vt1.c0) THEN vt1.c0 END) OVER (), CAST(CAST(vt0.c0 AS TEXT) AS REAL) FROM vt1 WHERE (((-1.682143888E9)IS NOT(CAST(2095465272 AS INTEGER))));SELECT ((GROUP_CONCAT(vt1.c0))>>(((((((((vt1.c0)OR(0.08692082662812883)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)))), CASE WHEN (+ (vt1.c0)) THEN (vt1.c0 IN (vt1.c0)) WHEN NULL THEN ((vt1.c0) BETWEEN (vt1.c0) AND (x'9a11')) WHEN NULLIF(DISTINCT vt1.c0, vt1.c0) THEN CAST(vt1.c0 AS NUMERIC) END, ((((((vt1.c0)-(vt0.c0)))AND(AVG(vt0.c0))))OR('!7')) FROM vt0 WHERE (0.8205655968807158);SELECT DISTINCT CAST(vt1.c0 AS NUMERIC) COLLATE NOCASE FROM vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT SUM((((vt0.c0, vt0.c0, vt0.c0))>=((vt0.c0, vt1.c0, vt1.c0)))), (((((((vt0.c0)) BETWEEN ((0X33bc911c)) AND ((vt1.c0))))OR(((((vt0.c0)AND(vt1.c0)))AND(0.662700552335595)))))AND(vt1.c0)), CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN (~ (vt0.c0)) THEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END ELSE vt1.c0 END FROM vt0 WHERE (UPPER(112605791) COLLATE RTRIM);SELECT ALL (((NOT (vt1.c0))) BETWEEN (((vt0.c0) NOTNULL)) AND (x'')) FROM vt1, vt0; -- 0ms;
SELECT ALL ((vt1.c0) ISNULL) COLLATE BINARY FROM vt0, vt1 WHERE (((CAST(0.7325345173448246 AS TEXT))<=((('0.3964794948396123') BETWEEN ('0.21445080597264898') AND ('258796949'))))) LIMIT 1396247440 OFFSET 1991312078; -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN (((vt1.c0))>=((vt1.c0))) END FROM vt1, vt0 WHERE (((0Xffffffffee0907b4) NOT NULL) COLLATE RTRIM) ORDER BY (((vt0.c0)IS NOT(vt1.c0)) IN ()) DESC  NULLS LAST, PRINTF(((((vt0.c0)AND(vt1.c0)))AND('0.505526537144777')), ((vt1.c0) ISNULL), (NOT (vt1.c0))) ASC  NULLS LAST LIMIT -262426676 OFFSET 902612226; -- 0ms;
SELECT DISTINCT (NOT (NULL)), COUNT((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, 'LFD')) AND ((vt1.c0, vt0.c0, vt0.c0)))) OVER ( ORDER BY (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) COLLATE NOCASE ASC  NULLS FIRST, LIKELY((vt1.c0 IN ())) ASC), CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) ELSE UPPER(vt1.c0) END FROM vt0;SELECT DISTINCT (((((vt0.c0))<((vt1.c0))))<=(((vt1.c0)&(vt1.c0)))) FROM vt1 WHERE ((((CAST(x'' AS NUMERIC)))>((TOTAL_CHANGES())))) LIMIT 1935558451;SELECT ALL COUNT(vt0.c0) OVER () FROM vt1 WHERE ((~ (((('L䄩')) BETWEEN ((0.5867332736777723)) AND ((NULL)))))) ORDER BY ABS(((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) DESC  NULLS FIRST;SELECT DISTINCT COUNT((~ (vt1.c0))) FROM vt0, vt1 WHERE ((((((NULL)OR(NULL)))OR(x'')) IN (((-568819769)IS NOT(2.027194298E9))))) GROUP BY NULL, ((CASE WHEN vt1.c0 THEN vt1.c0 END)IS NOT('S|>#k!')), (+ (TRIM(vt0.c0, vt0.c0))) HAVING '-1473088284' LIMIT 2085333141 OFFSET 1446278995; -- 0ms;
SELECT DISTINCT TOTAL(TRIM(DISTINCT vt1.c0)) FROM vt1; -- 0ms;
SELECT ALL COALESCE(0.6879365483306334, CAST(vt0.c0 AS BLOB)), ((CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), CAST((vt1.c0 IN ()) AS NUMERIC) FROM vt0;SELECT DISTINCT ((((SQLITE_COMPILEOPTION_GET(vt1.c0))OR(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(vt0.c0)))AND('ud')))))AND(vt0.c0)), ((((vt1.c0)<=(vt0.c0))) IS TRUE), ((((((vt0.c0))<=((vt1.c0))), LIKELY(vt0.c0), '-2130030523'))<=((CAST(vt1.c0 AS BLOB), (vt1.c0 IN (vt1.c0)), 'TmX%'))) FROM vt1 WHERE (((('-964085202') NOT BETWEEN (882536335) AND (x'5deb591a')) IN ()));SELECT CAST(((vt0.c0)==(vt0.c0)) AS TEXT), (((((vt0.c0)AND(vt1.c0)), ((vt0.c0) NOT BETWEEN (vt0.c0) AND (0X7fbc8846)), (vt0.c0 IN (vt1.c0, vt1.c0))))<=((((vt0.c0)<>(vt0.c0)), ((vt1.c0)GLOB(vt0.c0)), (((x'5527dc61'))==((vt0.c0)))))), CASE ((((vt0.c0)AND(0Xffffffffd027fd3e)))AND(vt0.c0))  WHEN ((vt0.c0) IS TRUE) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) WHEN CAST(vt0.c0 AS REAL) THEN (- (vt0.c0)) WHEN ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN CAST(NULL AS BLOB) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) END FROM vt1, vt0 GROUP BY (((CASE WHEN vt0.c0 THEN vt0.c0 END))<((CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END))) ORDER BY (((~ (vt1.c0)))=((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('308272552'))))) ASC LIMIT 97983608; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE))|((((vt1.c0))<>((0.9232483619843806))))) FROM vt1 WHERE (x'');SELECT CASE ((0.10946024918135999) IS FALSE)  WHEN '.Z W' THEN vt0.c0 COLLATE BINARY END FROM vt0 WHERE ((- ((~ (x''))))) ORDER BY x'' ASC; -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)OR(AVG(vt1.c0))))AND(((vt1.c0)GLOB(vt1.c0)))))OR(((vt1.c0)*(vt1.c0)))))AND((vt1.c0 IN (vt1.c0, vt1.c0)))) FROM vt0 WHERE (((LTRIM('624070883', '-621271829')) ISNULL));SELECT DISTINCT ((((TRIM(DISTINCT NULL))OR(0.3616206229453284 COLLATE BINARY)))OR(((vt0.c0)&(vt0.c0)))) FROM vt0 WHERE ((((((~ (x'')))OR(((((x'')OR(x'')))OR(x'7def')))))AND(x''))) GROUP BY ((((((((((((NULL)AND(vt0.c0)))AND(vt1.c0)))OR(((vt1.c0)/(x'')))))AND(vt1.c0 COLLATE NOCASE)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)))AND(((vt0.c0)>(vt1.c0)))) HAVING (((vt1.c0)) NOT BETWEEN (((~ (vt0.c0)))) AND ((COUNT(*)))) LIMIT 1099212467 OFFSET 522548588;SELECT DISTINCT ((TOTAL(vt1.c0)) IS TRUE) FROM vt1 WHERE ((- (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) NOTNULL), ((- (vt1.c0)) IN (((vt1.c0) NOT NULL))), ((0.2859056294254626)&('')) FROM vt1 WHERE (((0.7838670886002648 COLLATE BINARY) IS FALSE)) GROUP BY (((vt1.c0)) BETWEEN (((((('r}h')OR(vt0.c0)))OR(vt0.c0)))) AND ((NULL))), NULL, ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (ABS(vt0.c0)) AND ((((vt1.c0))==((vt0.c0)))));SELECT DISTINCT ((json_remove(vt1.c0, vt1.c0)) NOT BETWEEN (((vt0.c0)<<(vt1.c0))) AND (vt0.c0)) FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)LIKE((vt1.c0 IN ()))) FROM vt0 WHERE ((((- (0.2760693479083003)))&(((x'')>=(0.9555622081990158))))); -- 0ms;
SELECT ALL CAST(vt1.c0 AS INTEGER) FROM vt0, vt1 WHERE (((((((NULL) BETWEEN ('-368502523') AND ('3候weyL6')))AND((('-560159502') NOT BETWEEN ('0.5822581264979051') AND (0Xffffffffe9bbfad4)))))OR(RTRIM(NULL)))); -- 0ms;
SELECT ALL LAST_VALUE((NOT (LOWER(DISTINCT vt0.c0)))) OVER () FROM vt0, vt1 WHERE (('71tDm' IN ()) COLLATE NOCASE); -- 0ms;
SELECT vt1.c0, NTILE(0.34745423017413934 COLLATE NOCASE) OVER (), vt0.c0 FROM vt1, vt0 WHERE ((+ (load_extension(0.6449994377614104)))) ORDER BY CAST(SQLITE_COMPILEOPTION_USED(vt1.c0) AS NUMERIC)  NULLS FIRST;SELECT HEX(((NULL)|(x''))) FROM vt1, vt0 WHERE (((CHAR(NULL)) NOT BETWEEN ((('867995932')<(NULL))) AND ('362034932' COLLATE NOCASE))) LIMIT 1201674818; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)AND(vt1.c0)))OR(vt0.c0)) AS BLOB) FROM vt1 WHERE ((((x'' IN ()))<(SQLITE_COMPILEOPTION_USED('z?)/'))));SELECT (CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN NULL THEN vt1.c0 ELSE vt0.c0 END IN ()), vt0.c0, x'' FROM vt1, vt0; -- 0ms;
SELECT ((((vt1.c0)OR(0.2034187482565789)))OR(((vt1.c0)<=(vt0.c0)))) FROM vt1 LIMIT -641170872;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0 LIMIT 782319919; -- 0ms;
SELECT DISTINCT CASE (0x355952bb IN (vt0.c0))  WHEN vt1.c0 THEN LIKELY(vt0.c0) END FROM vt1 WHERE ((((('') BETWEEN (0.200573195376757) AND ('-1580933306'))) BETWEEN (0.13534618638314044 COLLATE RTRIM) AND (CAST(NULL AS NUMERIC)))) ORDER BY NULL ASC, (((- (vt1.c0)))%(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) DESC;SELECT (((((((((((('FALSE')OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))OR(vt0.c0 COLLATE BINARY)))OR(SUM(vt1.c0))))OR(((vt0.c0)IS NOT(vt1.c0)))), vt0.c0, ((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))AND('1276787252'))) AND (json_object(vt0.c0, vt0.c0))), (((vt1.c0)) NOT BETWEEN ((((vt0.c0)OR(vt1.c0)))) AND ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)))OR(vt1.c0))))), ((CASE WHEN '' THEN vt0.c0 WHEN x'' THEN 0.7300102264078292 WHEN vt1.c0 THEN 0.8096376840319239 END) NOT BETWEEN ((vt1.c0 IN ())) AND (((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))) FROM vt1 WHERE (((((0.17533470072695367)IS NOT(NULL)))<<(0X265aa867)));SELECT ((LAST_INSERT_ROWID()) NOT NULL) FROM vt1 WHERE (UNLIKELY(DISTINCT '' COLLATE NOCASE)); -- 0ms;
SELECT CASE WHEN (('N') NOTNULL) THEN ((vt0.c0) IS FALSE) WHEN CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN (~ (vt0.c0)) WHEN (NULL IN ()) THEN load_extension(vt0.c0, 'o4v%_Z깵') END, (((vt0.c0 IN ())) NOT BETWEEN (0.390831730210638) AND (((vt0.c0) NOTNULL))), ((CAST(vt1.c0 AS INTEGER)) NOT NULL) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE ((vt1.c0)OR(vt0.c0))  WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) THEN ((((vt1.c0)OR(vt1.c0)))AND(0.6047148535251463)) END, AVG(TYPEOF(DISTINCT vt0.c0)), ((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0) IS FALSE)) AND (AVG(vt1.c0))) FROM vt1 WHERE (CAST(((NULL)IS('Eq6fT5')) AS REAL));SELECT DISTINCT (NOT (CAST(vt1.c0 AS INTEGER))), vt0.c0 COLLATE RTRIM, (+ (((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)))), (((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, NULL, NULL)) AND ((vt1.c0, vt0.c0, vt0.c0)))) NOT BETWEEN (((vt0.c0)>(vt0.c0))) AND (CASE vt1.c0  WHEN vt1.c0 THEN NULL END)), (((vt0.c0)) NOT BETWEEN ((CASE WHEN 0.706574733771224 THEN vt1.c0 ELSE 0x62577285 END)) AND ((SUM(vt0.c0)))) FROM vt0, vt1 GROUP BY CAST(((NULL)/(vt0.c0)) AS REAL) HAVING (- (vt0.c0)); -- 0ms;
SELECT DISTINCT (((((vt1.c0)OR(vt1.c0)))OR(0.05884681547438486)) IN (((((x'a99d')OR(vt1.c0)))AND(vt1.c0)))) FROM vt0 WHERE (TRIM(DISTINCT ((0.5366746894611613)>(-262426676))));SELECT DISTINCT ((((vt1.c0)|(x'')))-(CASE WHEN x'3624' THEN vt1.c0 END)) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT vt1.c0, CAST((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))) AS BLOB), SQLITE_COMPILEOPTION_GET(vt1.c0) FROM vt1, vt0 WHERE (((('-117530202') IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT AVG((- (vt1.c0))) OVER () FROM vt1, vt0 GROUP BY (~ (((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT -4.61960127E8 FROM vt1; -- 0ms;
SELECT DISTINCT 0.26750737628177235 FROM vt0; -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt0 FULL OUTER JOIN vt1 ON ((vt1.c0) ISNULL) COLLATE RTRIM GROUP BY (((vt1.c0 IN ())) NOT BETWEEN (TYPEOF(vt0.c0)) AND (((vt0.c0)|(vt0.c0)))), 0.11265885146340182, (((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ()) HAVING MIN(((vt1.c0)<<(vt0.c0))); -- 0ms;
SELECT DISTINCT ((vt0.c0)!=(((NULL) BETWEEN (vt1.c0) AND (vt0.c0)))), 0xf75b630, 0Xffffffff8d558f79 FROM vt1 LIMIT 1593776786;SELECT ALL ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)GLOB((- (vt1.c0)))) FROM vt0 WHERE (('1468376870' IN ()) COLLATE NOCASE);SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT) FROM vt0 WHERE (((((('1541515732')<>(x''))))>((CAST('' AS NUMERIC))))) INTERSECT SELECT DISTINCT ((((vt1.c0) ISNULL)) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN 0.7866885495745453 ELSE vt0.c0 END) AND (((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))) FROM vt1;SELECT ALL COALESCE(((vt0.c0)-(vt0.c0)), ((vt0.c0)IS NOT(vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT '' FROM vt1; -- 0ms;
SELECT DISTINCT NULL FROM vt0, vt1 WHERE ((((((((((('&_\FI')AND('{y')))AND(x'40ba')))OR(NULL)))AND(NULL))) NOT NULL)); -- 0ms;
SELECT ((((vt1.c0)>>(vt1.c0)))==(UNLIKELY(vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((LOWER(DISTINCT -49584549)) BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND ((+ (vt1.c0)))), CASE WHEN vt1.c0 THEN (vt1.c0 IN ()) END, SQLITE_VERSION() FROM vt1 WHERE (NULL) ORDER BY (((vt1.c0 IN ())) NOT NULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((- (vt0.c0)))IS NOT(SUM(vt0.c0))), load_extension(vt0.c0, (((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND (('?ZM<')))), COUNT(*) FROM vt0, vt1 WHERE ((- (((NULL)=(x'4df23d4b')))));SELECT ((((((((vt0.c0 COLLATE NOCASE)AND(((vt0.c0)>(vt1.c0)))))AND(vt0.c0)))OR(vt0.c0)))OR((vt0.c0 IN (vt1.c0)))), (((((NOT (vt1.c0)))OR(((vt0.c0) ISNULL))))OR(LOWER(28299011))), ((((vt1.c0)/(vt1.c0))) BETWEEN (x'') AND (TYPEOF(vt0.c0))) FROM vt1 WHERE (ABS(CAST('0.7160878422763172' AS TEXT))) ORDER BY ((((((vt0.c0)OR(vt1.c0)))OR(0.3185492055832435)))>(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN NULL WHEN '4׋' THEN vt0.c0 ELSE vt1.c0 END)) LIMIT -1315735611;SELECT DISTINCT PERCENT_RANK() OVER ( PARTITION BY CAST((+ (NULL)) AS NUMERIC), ((((((((((1368571692)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0))) ISNULL) ROWS (((NULL IN ())) IS TRUE) PRECEDING EXCLUDE NO OTHERS) FROM vt1, vt0 WHERE (((((x'') ISNULL)) BETWEEN (NULL) AND (LOWER(NULL)))) GROUP BY json_remove(((vt1.c0)%(vt0.c0)), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))); -- 1ms;
SELECT ALL (~ (vt0.c0)) COLLATE NOCASE COLLATE NOCASE FROM vt1, vt0 GROUP BY CAST((vt1.c0 IN ()) AS NUMERIC) LIMIT 1037400418; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 ORDER BY ((((vt1.c0)GLOB(vt0.c0)))<<(((((vt0.c0)OR(NULL)))OR(x'')))); -- 2ms;
SELECT COUNT(*) FROM vt0; -- 0ms;
SELECT ALL ((((vt1.c0) IS FALSE)) NOT NULL), vt1.c0, (((vt1.c0 IN ()))!=(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '' END)) FROM vt1, vt0 WHERE (CASE WHEN (((NULL, 'YN27AS\n8Q', 0Xffffffffc6f295b7))<>(('Fo_', -1.28535677E9, '-805731593'))) THEN ((((NULL)OR(0x2a742829)))AND(x'')) ELSE ((0.8847240275566391) NOT BETWEEN ('1043145150') AND (0.03924218083679687)) END) GROUP BY (- ((~ (vt0.c0)))); -- 0ms;
SELECT DISTINCT (((- (vt1.c0))) NOT BETWEEN (((vt1.c0)OR(vt0.c0))) AND (CAST(vt1.c0 AS BLOB))) FROM vt0 WHERE ((~ (json_valid(x''))));SELECT ALL NTH_VALUE(vt0.c0, (('0.029588016252550364')-(vt0.c0 COLLATE BINARY))) OVER () FROM vt0;SELECT DISTINCT ((vt0.c0)>(((vt1.c0)<>(vt1.c0)))) FROM vt0, vt1 WHERE (('' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))))==((((0X374f3e6e, vt0.c0, vt0.c0))<((vt1.c0, vt1.c0, vt1.c0))))) FROM vt0 WHERE ((((('껪,z愦z퀑擯v')<=(x'7dff'))) ISNULL));SELECT ALL CASE WHEN GROUP_CONCAT(vt0.c0) THEN ((vt0.c0)%(vt1.c0)) END FROM vt1 WHERE (IFNULL(((0.500159392338666) IS TRUE), json_type(x'52f63c7a'))) GROUP BY (vt1.c0 IN ()) COLLATE BINARY;SELECT DISTINCT FIRST_VALUE((((vt1.c0)) BETWEEN ((json_array_length(vt1.c0, 0.2543279718291994))) AND (((vt1.c0 IN (vt1.c0)))))) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT (((((NOT (vt1.c0)))AND((((vt0.c0))>((vt1.c0))))))AND(COALESCE(DISTINCT vt1.c0, vt1.c0))), ((((vt0.c0)AND(((vt1.c0) IS FALSE))))OR(((vt0.c0)OR(vt1.c0)))), (((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)) IN ((x'9ec2' IN ()), (vt1.c0 IN ()))) FROM vt0, vt1 GROUP BY (((vt0.c0)>=(vt1.c0)) IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)) COLLATE NOCASE, ((vt0.c0 COLLATE NOCASE) IS FALSE); -- 1ms;
SELECT DISTINCT TOTAL((+ (vt1.c0))) OVER ( ORDER BY (- (LIKELY(vt1.c0))) ASC  NULLS LAST) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (- (vt0.c0)) COLLATE NOCASE FROM vt1;SELECT (-103401899 IN (((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)), (- (vt0.c0)))), STRFTIME(LIKELY(vt1.c0), vt1.c0 COLLATE NOCASE, vt0.c0 COLLATE NOCASE), DATETIME(NULL, ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)), CAST(vt0.c0 AS REAL), LIKELIHOOD('now', 0.13464841605115063)) FROM vt1, vt0 WHERE ('vh'); -- 0ms;
SELECT vt1.c0, (((vt0.c0 IN ()))<=(vt1.c0)), ((COALESCE(vt0.c0, vt1.c0))|((vt0.c0 IN (vt1.c0)))) FROM vt0 WHERE ((((1334443121 IN ()))||(CASE WHEN 0.8876292622109063 THEN -3.73556524E8 END)));SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT ALL vt0.c0, (DATE(x'c015', vt0.c0, 0x6ca9ff8d) IN ()), vt1.c0 FROM vt0 WHERE ('');SELECT ALL ((vt0.c0)AND(NULL)) COLLATE RTRIM COLLATE RTRIM FROM vt1, vt0 WHERE (((((NULL)<>(x''))) BETWEEN (CASE 616643679  WHEN 0xfffffffff53935d4 THEN '' END) AND (CAST('-㮨Fs}' AS NUMERIC)))); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))%(LTRIM(vt0.c0, x''))), CAST(x'' AS BLOB), (('fH?R_1/B%') NOT NULL) FROM vt1;SELECT CASE vt1.c0  WHEN NULL THEN vt1.c0 END COLLATE BINARY, CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN IFNULL(DISTINCT vt1.c0, vt0.c0) WHEN (vt0.c0 IN ()) THEN vt0.c0 WHEN (NOT (vt1.c0)) THEN CAST(x'' AS BLOB) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END, COUNT(vt0.c0 COLLATE BINARY) FROM vt0, vt1 WHERE (((((NULL)>=(NULL))) IS TRUE)) GROUP BY ((((vt0.c0) NOT NULL))<(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), (((- (vt1.c0))) NOT BETWEEN ((+ (vt0.c0))) AND (vt0.c0)), ((vt0.c0)-((((vt0.c0))<>((vt0.c0))))) HAVING ((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))LIKE('-1248979962')); -- 0ms;
SELECT ALL '0.9232483619843806' FROM vt0, vt1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1 WHERE (((((x'')OR(-1959184927)))AND('-734666252')) COLLATE NOCASE); -- 1ms;
SELECT ALL CAST(((((((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)) AS INTEGER) FROM vt0, vt1 WHERE (((((NULL IN ())))<=((CAST(x'37bd' AS NUMERIC))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) COLLATE NOCASE FROM vt0 WHERE (((((NULL)<(0Xffffffff8705aa94)))IS(CASE '/A\no|0p'  WHEN x'' THEN NULL WHEN 0.2016666817924262 THEN NULL WHEN 0.13612969454508428 THEN 0xffffffffb37a2da2 END))) ORDER BY ((((((vt1.c0)LIKE(vt1.c0)))OR(CAST(vt1.c0 AS TEXT))))OR(vt0.c0 COLLATE RTRIM)) ASC;SELECT DISTINCT LOWER(DISTINCT vt0.c0) COLLATE RTRIM FROM vt0 WHERE (CASE x''  WHEN NULL THEN NULL WHEN 0Xffffffff8f3975a3 THEN x'' WHEN x'' THEN x'144a' WHEN 0Xffffffffe98d6d58 THEN x'' WHEN '1956686860' THEN NULL ELSE x'' END COLLATE RTRIM); -- 0ms;
SELECT (((CASE WHEN 0.09507554041956057 THEN vt1.c0 END))>((vt0.c0))) FROM vt1 WHERE (((((((((CASE WHEN -330403702 THEN 0.7932225584516538 WHEN '493147321' THEN 0.7523743246937521 WHEN x'' THEN 0.6313082410029298 END)AND((+ (0.6225315960281821)))))OR(((((0.3224958020062244)OR(NULL)))AND('ꙙ2')))))OR(CAST('h3995547255017174311 980 -6238255759006517657-3374546793283854881-786 899 +' AS REAL))))AND(((((0x18faadc7)OR(x'')))OR(0Xffffffffd455a320)))));SELECT DENSE_RANK() OVER (), ((((LOWER(DISTINCT vt1.c0))OR(((vt0.c0)*(vt0.c0)))))AND(((NULL)IS(vt1.c0)))), CAST((- (vt0.c0)) AS REAL) FROM vt0, vt1 LIMIT 940425217 OFFSET -75569755; -- 1ms;
SELECT GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (NULL))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((LOWER(DISTINCT vt0.c0))OR((+ (vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))  WHEN ((vt0.c0) ISNULL) THEN vt0.c0 COLLATE NOCASE WHEN ((NULL) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c0 WHEN (+ (vt0.c0)) THEN (vt0.c0 IN (vt1.c0)) ELSE ('!CLp' IN ()) END FROM vt1 UNION ALL SELECT (((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) IN ((((vt1.c0))<((NULL))), (vt1.c0 IN ()))) FROM vt1, vt0 WHERE (((CASE 0.13211828778046697  WHEN NULL THEN '-1923772551' END)+('(' COLLATE RTRIM)));SELECT vt0.c0, vt1.c0, ((vt1.c0 COLLATE RTRIM) IS FALSE) FROM vt0, vt1 WHERE (LOWER(DISTINCT ('&,HZ	O14' IN (NULL, x'')))) ORDER BY (- ((vt0.c0 IN ()))) DESC; -- 0ms;
SELECT ALL ((STRFTIME(0.08466145658626678, vt1.c0, vt1.c0)) IS TRUE), (((NOT (vt1.c0))) NOT NULL), ('259372592' IN (CAST(vt1.c0 AS REAL))), GROUP_CONCAT((('i^(') NOT NULL)) OVER (), (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) NOT BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) AND (json_array_length(vt1.c0, vt1.c0))) FROM vt0 WHERE (((LIKELIHOOD(x'9480', 0.6108062823547419)) NOT BETWEEN (((0.6301660882595348)%(NULL))) AND (((((((((NULL)OR(NULL)))AND(0.5600502935950031)))OR(NULL)))AND(0X58b39c98)))));SELECT DISTINCT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT LAST_INSERT_ROWID() FROM vt0 WHERE ((((0.29867139603669135)) NOT BETWEEN ((((NULL) NOTNULL))) AND ((LIKELIHOOD(x'', 0.3880342142294506))))) LIMIT -259434527; -- 0ms;
SELECT TOTAL(((vt1.c0)-(vt0.c0))) OVER ( GROUPS ((IFNULL(DISTINCT vt1.c0, vt1.c0))<=(((vt1.c0)LIKE(vt0.c0)))) PRECEDING) FROM vt1, vt0 WHERE (((((NULL) NOTNULL)) BETWEEN (((x'') NOT BETWEEN ('') AND (x'6833'))) AND (((((x'')AND(0.40864577575680017)))OR(119259873))))) GROUP BY (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) LIMIT 1673795554 OFFSET 1428744893;SELECT ((((vt0.c0) IS FALSE)) NOT BETWEEN ((x'' IN (vt0.c0))) AND (HEX(vt0.c0))) FROM vt1 GROUP BY CAST((vt0.c0 IN (vt1.c0, vt1.c0)) AS TEXT), (NOT (TYPEOF(DISTINCT vt1.c0))), vt0.c0;SELECT DISTINCT CASE CASE WHEN vt1.c0 THEN vt1.c0 END  WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'423f' WHEN vt0.c0 THEN vt0.c0 END THEN vt0.c0 COLLATE NOCASE WHEN (vt0.c0 IN (vt1.c0, vt0.c0)) THEN GROUP_CONCAT(vt1.c0) WHEN ((vt0.c0) NOTNULL) THEN ((vt0.c0) NOTNULL) ELSE vt0.c0 END FROM vt1;SELECT (- (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt1 WHERE ((((0.505526537144777, '\nDu\H>B簡', '-1150778242', '0.34745423017413934', '-1427861')) NOT BETWEEN ((CASE WHEN 0X2cb96784 THEN NULL ELSE '1391677408' END, x'' COLLATE NOCASE, ((x'08f2')GLOB(NULL)), CAST('-1333529030' AS REAL), (('-628806504') NOT BETWEEN (0.4023908039858034) AND (NULL)))) AND ((CASE x''  WHEN -849236331 THEN '' ELSE '' END, ((1.368571692E9) NOT NULL), (+ (x'')), (NOT (x'')), CASE '-1361879392'  WHEN x'' THEN NULL END)))) GROUP BY (((((((((+ (vt0.c0)))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR(CAST(vt0.c0 AS INTEGER))))OR(CAST(0.6260153504325942 AS TEXT))))OR((((vt0.c0))<=((vt1.c0)))));SELECT ALL x'142c', CAST(((x'')!=(vt1.c0)) AS NUMERIC), SUM((('1321579585')AND(x''))) OVER () FROM vt1; -- 0ms;
SELECT ALL vt0.c0, COUNT(((vt1.c0)OR(vt1.c0))) OVER (), ((COALESCE(vt0.c0, vt1.c0, vt1.c0, 0X242b75d))+(MAX(vt1.c0))) FROM vt0 WHERE ((NOT (UNLIKELY(4.79579644E8))));SELECT (- (((vt0.c0) NOTNULL))) FROM vt1, vt0 ORDER BY CAST(CASE vt1.c0  WHEN x'98aa' THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( PARTITION BY ((vt1.c0 COLLATE NOCASE) IS FALSE), (vt1.c0 COLLATE BINARY IN (vt0.c0))) FROM vt0;SELECT NULL FROM vt0; -- 0ms;
SELECT CAST(vt1.c0 COLLATE BINARY AS BLOB) FROM vt1; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)OR(0.7632536119585164)))OR(vt1.c0))  WHEN (NULL IN ()) THEN (- (vt1.c0)) END, CASE CASE WHEN vt1.c0 THEN vt0.c0 END  WHEN (~ (vt0.c0)) THEN vt0.c0 WHEN NULL THEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))AND(x'ad41')) WHEN ((vt0.c0) NOT NULL) THEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END WHEN '\ni' THEN ((vt1.c0)+(vt1.c0)) WHEN NULL THEN ((vt1.c0)==(vt0.c0)) ELSE (vt0.c0 IN ()) END, ((TRIM(vt0.c0, vt0.c0))-(CASE WHEN vt1.c0 THEN vt0.c0 END)) FROM vt0, vt1 ORDER BY (- (((vt1.c0) NOT NULL))); -- 1ms;
SELECT ALL (+ (CASE WHEN vt1.c0 THEN '' END)) FROM vt0 WHERE (((((((603160405)OR(NULL)))AND(x'')))<<(((0.5613665058929291)!=(NULL))))) ORDER BY (((((vt0.c0, '䟥1T*w8KD', vt1.c0))<((vt0.c0, vt0.c0, '-1596997456')))) IS TRUE) ASC;SELECT DISTINCT COUNT((~ (vt1.c0))), ((((NULL)OR((- (x'')))))OR(((vt0.c0)LIKE(vt0.c0)))), '-461960127', (('*\r') IS FALSE), vt0.c0 FROM vt0 WHERE (((((x'610cb97c') ISNULL)) NOT NULL));SELECT ((TRIM(DISTINCT x'')) IS FALSE) FROM vt1, vt0 WHERE ((CAST(0x6cdfa9d9 AS INTEGER) IN ())) ORDER BY (+ (vt1.c0)) ASC  NULLS FIRST LIMIT -1068377801; -- 0ms;
SELECT ((-1.23350176E8) IS TRUE) COLLATE BINARY FROM vt0 ORDER BY vt1.c0 ASC LIMIT -345132319;SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0, vt1 WHERE (((NULL)AND('-522683662'))) LIMIT 1276787252; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT NULL) IN ()), (((vt1.c0)) NOT BETWEEN (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))) AND ((MIN(vt0.c0)))), x'e2a3' FROM vt1, vt0 WHERE ((NOT (0.8386714349081287)) COLLATE BINARY); -- 0ms;
SELECT ((LIKELY(vt0.c0)) BETWEEN (((vt1.c0)AND(vt0.c0))) AND (((vt1.c0)GLOB(vt1.c0)))), ((((vt1.c0)AND(vt1.c0))) NOT BETWEEN ((~ (vt0.c0))) AND ('XK\!5W')), ((vt0.c0 COLLATE NOCASE)<=(((vt1.c0) IS TRUE))), (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND('-1883469491')))AND((~ (vt0.c0)))), vt1.c0 COLLATE NOCASE FROM vt1, vt0 WHERE (((((((0.3370142639014838)OR(0.19492683714801473)))AND(NULL)))IS(((NULL)AND('-1682143888'))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS NUMERIC) FROM vt1, vt0 WHERE (((0.949084176734828)&(-22480020)) COLLATE RTRIM) GROUP BY ((((vt0.c0 IN ())))==((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0))))), ((CASE vt0.c0  WHEN -1e500 THEN vt1.c0 WHEN '-1285356770' THEN x'' WHEN vt1.c0 THEN 0x9c3c906 ELSE NULL END)OR(((vt1.c0)<(vt0.c0)))), ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(vt1.c0))) AND ((vt0.c0 IN ()))); -- 0ms;
SELECT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN vt1.c0 THEN vt0.c0 END)) FROM vt0 WHERE (NULL);SELECT DISTINCT (((vt0.c0) NOTNULL) IN ()) FROM vt0, vt1 WHERE ('0.10946024918135999'); -- 0ms;
SELECT ALL ((((((vt0.c0)|(vt1.c0)))OR((+ (0.2373659767736721)))))OR(((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))) FROM vt0 WHERE (((((('-1238424125'))>((NULL))))LIKE(((NULL) ISNULL))));SELECT DISTINCT vt0.c0, ((((vt1.c0)<<(vt1.c0))) NOTNULL), ((x'4626') NOTNULL) FROM vt1;SELECT ALL TYPEOF(DISTINCT (vt0.c0 IN ())) FROM vt0, vt1 WHERE (NULL COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) THEN ((vt1.c0)-(vt0.c0)) WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(x'1bd6')))AND(vt1.c0)) THEN (NOT (vt1.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (vt0.c0 IN ()) ELSE (((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND (('-823880255'))) END FROM vt1, vt0 WHERE ((((x'')OR(x'')) IN ())); -- 0ms;
SELECT DISTINCT ((x'')%(vt0.c0 COLLATE RTRIM)) FROM vt0 LIMIT -440412234; -- 0ms;
SELECT ALL 0.3133920789168835 FROM vt0 WHERE (CAST(((x'6a69')&(NULL)) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END COLLATE RTRIM, LIKELIHOOD(DISTINCT (((vt1.c0, vt1.c0, vt1.c0, vt1.c0, vt0.c0))>=((vt0.c0, vt0.c0, NULL, '-1477588477', vt0.c0))), 0.8588310393700217), COALESCE(DISTINCT (vt0.c0 IN ()), (vt0.c0 IN ())), LAG(CAST(CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END AS NUMERIC), ((0.7865863462187532 COLLATE NOCASE)IS NOT(((((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))), CAST(vt0.c0 AS TEXT)) OVER (), ((((vt1.c0 IN ())))>=(('243470637'))) FROM vt0, vt1 GROUP BY ((((vt0.c0 IN ())))!=((((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) HAVING ((vt0.c0) NOT BETWEEN ((+ (vt0.c0))) AND (((vt1.c0)<<(vt0.c0)))) ORDER BY (((((((((vt1.c0 IN (vt0.c0, vt1.c0)))AND(((vt0.c0)GLOB(vt0.c0)))))AND(NULL)))AND(NULL)))AND(LENGTH(vt1.c0))) ASC LIMIT 1785823604 OFFSET -2054901952; -- 0ms;
SELECT (((((1995357571))>=((vt0.c0)))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ('0.5613665058929291')) FROM vt1 WHERE ((('0.8508736799005003' COLLATE RTRIM)IS NOT(((-1617834065)LIKE(x'')))));SELECT ALL (((vt1.c0 IN ()))<>(COUNT(*))) FROM vt1, vt0 WHERE ((- ((((((((('1276787252')OR(x'')))OR(NULL)))AND(0Xfffffffff72b4415)))OR(0.00609973375322026))))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (NOT (vt1.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((load_extension(vt1.c0)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (CAST(vt1.c0 AS REAL))) FROM vt0, vt1;SELECT DISTINCT (((- (vt1.c0))) BETWEEN (vt1.c0) AND (vt0.c0 COLLATE NOCASE)) FROM vt0, vt1 WHERE ((+ (0xfffffffff393e08c))); -- 0ms;
SELECT ALL (CAST(vt1.c0 AS INTEGER) IN (((vt1.c0)AND(vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT COUNT(((((vt1.c0)AND(vt1.c0)))AND(vt0.c0))) FROM vt0, vt1 GROUP BY CASE WHEN CAST(vt1.c0 AS TEXT) THEN vt1.c0 COLLATE NOCASE ELSE vt0.c0 COLLATE BINARY END, ((((vt1.c0)AND(vt1.c0)))OR('~-')) COLLATE RTRIM, ((vt0.c0) IS TRUE) HAVING TRIM(NULL, vt1.c0 COLLATE RTRIM) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))==(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS LAST; -- 0ms;
SELECT COUNT('QH/촣/t') OVER (), ((((((((CAST(vt0.c0 AS INTEGER))OR(vt1.c0 COLLATE NOCASE)))OR(TRIM(DISTINCT vt1.c0, vt0.c0))))OR(((((((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))AND(vt1.c0)))))AND(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)), (((vt1.c0 IN ()))|(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt0 NOT INDEXED WHERE ((((0.29815169912733896)) BETWEEN ((CASE WHEN '-1341902473' THEN x'e2da' WHEN 0.5596501911186251 THEN 0.1358868376141178 WHEN -1.032094687E9 THEN 0.6197534779364029 END)) AND ((((((x'')OR('0.2859056294254626')))AND(NULL))))));SELECT DISTINCT ROW_NUMBER() OVER () FROM vt1 WHERE (CASE 0.15274619901233355  WHEN '&~zI\r~轹' THEN '' WHEN '-1891572702' THEN -2.040027242E9 WHEN 0.7642170502485153 THEN '0.4019169663389671' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((NOT (vt1.c0)))GLOB(HEX(vt1.c0))) FROM vt1 WHERE (((CAST('䔘〰UV{)SI(' AS NUMERIC)) NOT NULL)) ORDER BY NULLIF(DISTINCT (~ (vt1.c0)), vt1.c0)  NULLS LAST; -- 0ms;
SELECT ALL (((NOT (vt0.c0)))=(((((vt0.c0)AND('')))OR(vt1.c0)))), (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)) IN ()), TOTAL((((vt0.c0, '', vt0.c0))<=((0.42857884517560163, vt0.c0, vt0.c0)))) OVER () FROM vt1 LIMIT -340121340 OFFSET 1524626765;SELECT DISTINCT (x'' COLLATE BINARY IN ()), ROW_NUMBER() OVER (), CAST(vt1.c0 AS TEXT) COLLATE NOCASE COLLATE BINARY FROM vt0;SELECT CASE vt0.c0  WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END THEN ((vt1.c0)&('-888465058')) ELSE vt0.c0 END, CASE ((vt1.c0)-(vt1.c0))  WHEN ((vt0.c0)%(vt1.c0)) THEN ((x'1209')<<(vt1.c0)) END, ((vt0.c0 IN ()) IN ()) FROM vt1, vt0 WHERE ((((' (e8z#C㚛', 'ᐆS8qDI4', 0.35623968401420836)) BETWEEN (((((0.2534592135216285, '-126232444', 0.2387867967644811))<((0.25341916639610174, NULL, NULL))), ABS(x''), (329446831 IN (NULL, 0.21141808509066995)))) AND (((0.6469465105685178 IN ()), CASE x''  WHEN '1581171907' THEN '{y' ELSE '' END, 0.32390493504950757)))); -- 1ms;
SELECT DISTINCT LENGTH(((vt1.c0)AND(vt0.c0))), ((CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)IS((((vt0.c0)) BETWEEN ((0.16645393204842152)) AND ((vt0.c0))))), ((CAST(vt0.c0 AS BLOB))<(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) FROM vt0 WHERE ((~ (((x'') BETWEEN ('-1535039250') AND (x'')))));SELECT ALL CASE ((0.5978906563228085) IS FALSE)  WHEN LOWER(DISTINCT vt0.c0) THEN vt1.c0 ELSE ((vt1.c0)<<(vt1.c0)) END, CAST(LENGTH(vt0.c0) AS NUMERIC), vt0.c0 FROM vt0 LIMIT 491028230 OFFSET -964023045;SELECT ALL ((((vt1.c0) IS FALSE)) BETWEEN (((vt1.c0) NOT BETWEEN ('1605702449') AND (vt0.c0))) AND (((vt1.c0)GLOB(vt1.c0)))), ((((vt1.c0)<(vt1.c0))) NOT BETWEEN (((((vt1.c0)OR(vt1.c0)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))), ((vt0.c0) NOT BETWEEN (COALESCE(DISTINCT vt0.c0, vt0.c0)) AND (((vt0.c0) NOT NULL))) FROM vt1, vt0; -- 0ms;
SELECT ALL (((((((((- (NULL)))OR((((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, '614590399'))))))OR(((vt1.c0)<>(vt0.c0)))))AND(((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(AVG(vt1.c0))) FROM vt0, vt1 WHERE ((((((((((('0.19492683714801473')AND('')))OR(0.8590313558873893)))OR(0Xffffffffbee27abc)))OR(NULL))) BETWEEN (((291342641) ISNULL)) AND (CAST('-540674878' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN (((NOT (vt0.c0)))) AND ((ABS(vt1.c0)))), ((vt1.c0)<((((vt0.c0))<((-1739414209))))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))=(((vt1.c0)IS NOT(vt0.c0)))) FROM vt0, vt1 WHERE (CASE ((0.706574733771224)||(0.04959533644442593))  WHEN (((0.6348897893749889, 0.18345814824261408, x'')) NOT BETWEEN ((NULL, NULL, -1439167655)) AND ((NULL, x'', x'f8bb'))) THEN (+ (0.3843818696166197)) WHEN rtreenode('', '895046331') THEN HEX('') WHEN ((x'') NOTNULL) THEN ((x'') ISNULL) END) GROUP BY ((json_valid(vt0.c0))>=(((vt0.c0)<(NULL)))); -- 0ms;
SELECT ALL (((vt1.c0) IS FALSE) IN ()), ((((('-2063082787')OR(vt0.c0)), MAX(vt1.c0), (((vt1.c0))<=((NULL))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)), ((vt0.c0)IS NOT(NULL))))<((((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)), (vt0.c0 IN ()), CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END, ((vt0.c0)IS(vt0.c0)), CAST(vt1.c0 AS NUMERIC)))), ((NULL)>(CAST(vt0.c0 AS NUMERIC))) FROM vt1;SELECT CASE WHEN ((vt1.c0)||(vt1.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) ELSE CAST(vt0.c0 AS TEXT) END FROM vt1 WHERE (((((((x'd05e')OR(0.6613847896061454)))OR('54504687'))) IS TRUE)) ORDER BY (((- (NULL))) BETWEEN (CAST(vt1.c0 AS TEXT)) AND (vt0.c0))  NULLS FIRST, (((vt1.c0)) NOT BETWEEN ((LIKELIHOOD(vt0.c0, 0.3631093208463383))) AND ((((vt0.c0) ISNULL)))) ASC;SELECT DISTINCT vt1.c0, vt0.c0, ROW_NUMBER() OVER () FROM vt0, vt1 WHERE (((0Xffffffffe125e3fd)<<(x'')) COLLATE RTRIM) ORDER BY ((((vt0.c0)&(vt0.c0)))|(vt0.c0)) ASC  NULLS LAST, (TRIM(DISTINCT vt0.c0, vt1.c0) IN ()) ASC LIMIT 437695042; -- 1ms;
SELECT ((TOTAL(vt0.c0))>(TOTAL(vt0.c0))) FROM vt1, vt0 WHERE (((0.25277229468220264 IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(0.5672386061710673))*((+ (vt1.c0)))) FROM vt1 WHERE (((NULL) BETWEEN (x'') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL NULL, (((vt1.c0)) NOT BETWEEN ((CAST(vt0.c0 AS INTEGER))) AND ((CASE WHEN 0.6791088152406384 THEN vt1.c0 ELSE vt1.c0 END))), ((+ (vt1.c0)) IN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0)), (((x''))<>((vt1.c0))))) FROM vt1;SELECT SUM(((vt1.c0) NOTNULL)) OVER ( GROUPS ((((vt0.c0) NOT NULL)) BETWEEN ('Yawⶢ') AND ((vt0.c0 IN ()))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0, vt1;SELECT (((vt0.c0, '', vt0.c0)) NOT BETWEEN ((LOWER(DISTINCT '-1243753695'), ((vt1.c0)OR(vt1.c0)), (vt0.c0 IN ()))) AND (((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))), ABS(DISTINCT vt0.c0), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0))))), MIN((vt1.c0 IN (vt1.c0, vt1.c0))), ((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0))) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))AND(vt1.c0))) AND (0Xfffffffff75fcb56)) FROM vt1, vt0 WHERE (((((NULL) NOT BETWEEN (x'') AND (NULL)))/((NULL IN ())))) GROUP BY json_remove(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (~ (vt0.c0))), (((vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS NUMERIC))) AND (((vt0.c0 IN ())))), (NOT (SQLITE_COMPILEOPTION_GET(vt0.c0))); -- 1ms;
SELECT ALL ((((vt0.c0)<>(vt1.c0)))IS NOT((- (vt0.c0)))) FROM vt0, vt1 WHERE ((CAST(x'' AS NUMERIC) IN ())); -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt1.c0 COLLATE BINARY) AND (((vt0.c0) ISNULL))) FROM vt0, vt1; -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE NOCASE FROM vt1 WHERE ((((NULL) BETWEEN ('') AND (-2.62426676E8)) IN ())); -- 0ms;
SELECT DISTINCT (((((vt1.c0 IN ()))AND(vt0.c0)))AND((- (vt1.c0)))) FROM vt1 ORDER BY ((vt0.c0)LIKE(vt1.c0)) COLLATE RTRIM DESC;SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (vt1.c0 COLLATE BINARY) AND (AVG(vt0.c0))), CAST(((((vt0.c0)AND(vt1.c0)))AND(vt1.c0)) AS NUMERIC), (- (MAX('1748519290', vt0.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)) COLLATE BINARY, (+ (vt0.c0)), AVG((NOT (x'3d77'))) FROM vt0, vt1 WHERE ((((0X6be73e80)*(x'')) IN ())); -- 0ms;
SELECT ALL ((((((((((vt0.c0)AND(vt0.c0)))AND(0.2289240812872969)))AND(vt0.c0)))AND(vt1.c0))) BETWEEN (MAX(x'5a9a1574')) AND ((NOT (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 NOT INDEXED WHERE ((((0Xffffffffb58e1406, '..९', x'')) NOT BETWEEN ((LIKE(x'', 0Xffffffffd7534129), ((x'')>(1.764760012E9)), (('-1264645600') BETWEEN (-1.31331315E8) AND (-732585184)))) AND ((((x'') NOT BETWEEN (NULL) AND (NULL)), (((('\')OR('-1898267393')))OR(0.6147391444589659)), json_valid(NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END THEN ((vt0.c0)%(vt0.c0)) WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 COLLATE RTRIM THEN ((vt1.c0)||(vt0.c0)) END FROM vt0, vt1; -- 0ms;
SELECT ALL (((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((UPPER(DISTINCT vt0.c0), CASE WHEN vt1.c0 THEN -1403092121 END, NULL)) AND ((x'', CAST(vt0.c0 AS INTEGER), ((371362614) BETWEEN (vt1.c0) AND (vt1.c0))))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)))AND(SUM(vt0.c0))))AND(((vt1.c0) IS TRUE))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE), CAST((((x'd8ca'))<>((vt1.c0))) AS NUMERIC), (('f4,DU') IS TRUE) FROM vt1 WHERE (TRIM((~ (0.9554875679071185)), ((((((((x'')AND(0.29060267174674226)))AND(NULL)))AND(NULL)))OR(0.08473048811265416))));SELECT ((~ (vt1.c0)) IN (COUNT(*))) FROM vt0 WHERE (LIKELY((('OB1f') BETWEEN (NULL) AND (NULL)))) ORDER BY ((CAST(vt0.c0 AS TEXT))+(CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END))  NULLS LAST;SELECT ALL AVG((((0.35043674897293786))=((vt0.c0)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((TOTAL(vt1.c0))) AND ((AVG(vt0.c0)))) FROM vt0 WHERE (CAST(CAST(887117842 AS INTEGER) AS INTEGER));SELECT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND((((vt1.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))))AND(NULL)), SUM(CAST(vt0.c0 AS REAL)), CASE CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END  WHEN CAST(vt0.c0 AS BLOB) THEN IFNULL(DISTINCT vt1.c0, vt0.c0) END FROM vt0 WHERE (CAST(((-1132125603) BETWEEN (0X6795e1d2) AND (NULL)) AS TEXT));SELECT GROUP_CONCAT(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM) FROM vt1 WHERE (((RTRIM(0)) NOT NULL));SELECT COUNT(*) FROM vt1 WHERE (x'') GROUP BY (((vt0.c0 IN ()))LIKE(CASE WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN NULL WHEN '1669683177' THEN vt0.c0 END));SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT ALL ((((vt0.c0)IS NOT(vt0.c0))) NOTNULL) FROM vt0 WHERE (((((((0.5931634192010593) NOT BETWEEN ('') AND ('')))OR(0.6054941686337 COLLATE NOCASE)))OR((NULL IN ())))); -- 0ms;
SELECT ((vt0.c0)%(((vt0.c0)<>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT ((vt1.c0 COLLATE BINARY) NOTNULL) FROM vt0;SELECT ALL CAST(vt0.c0 AS REAL) COLLATE NOCASE FROM vt0 WHERE (((((((('c<ᐆmC%1ak'))>=((0.7799792889974005))))OR(((-1.647345271E9) BETWEEN (-1.739414209E9) AND (0x3abaf305)))))AND('xu6Woay4쨃'))) ORDER BY ((((vt1.c0)OR(((')WB绿3')LIKE(vt1.c0)))))AND(vt0.c0 COLLATE NOCASE))  NULLS LAST, ((CAST(vt0.c0 AS INTEGER)) IS FALSE)  NULLS LAST;SELECT ALL x'' COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(vt1.c0))) FROM vt1, vt0 WHERE ((((((0.6083427347061793))<((x'4f40')))) BETWEEN ((x'' IN (0Xffffffffce4a3b68))) AND (CAST(x'' AS NUMERIC)))) ORDER BY ((((vt1.c0) BETWEEN (vt1.c0) AND (''))) ISNULL) DESC  NULLS LAST; -- 1ms;
SELECT ((((((vt0.c0) ISNULL))OR(((vt1.c0)<<(vt0.c0)))))AND(((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))) FROM vt1 LIMIT 1998029768 OFFSET -2049331186;SELECT ALL (((vt1.c0 IN (vt1.c0)))/(CAST(vt1.c0 AS REAL))) FROM vt1, vt0; -- 0ms;
SELECT CASE ((vt1.c0) NOT NULL)  WHEN CAST(vt0.c0 AS TEXT) THEN ((vt1.c0) ISNULL) END, CAST((- (vt0.c0)) AS INTEGER), (((+ (vt1.c0)))+(vt1.c0 COLLATE BINARY)) FROM vt1;SELECT ALL ((vt1.c0) ISNULL) COLLATE RTRIM FROM vt1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE RTRIM) NOT NULL), LAG(((((((((CAST(vt0.c0 AS INTEGER))AND(CAST(vt0.c0 AS NUMERIC))))AND((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))OR(((vt0.c0)LIKE(vt0.c0)))))AND(vt0.c0)), NULLIF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, ((vt0.c0)IS(vt0.c0))), (CAST(vt0.c0 AS BLOB) IN ())) OVER (), vt1.c0 FROM vt0 WHERE ((((((x'' IN ()))AND((- (8.67995932E8)))))OR(((0.949084176734828) ISNULL))));SELECT DISTINCT (((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((((vt0.c0) ISNULL), ((vt0.c0)>(vt0.c0)), '388578849')) AND ((LIKELIHOOD(vt0.c0, 0.20744239220206284), ((vt1.c0) IS FALSE), (vt1.c0 IN ())))) FROM vt1, vt0; -- 0ms;
SELECT x'', (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))<>(CAST(vt0.c0 AS REAL))), ((((NULL)OR(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND((vt0.c0 IN ()))) FROM vt1;SELECT DISTINCT (((NOT (vt0.c0))) NOT BETWEEN (MAX('{}')) AND (1278602562)) FROM vt0; -- 0ms;
SELECT vt0.c0 FROM vt1;SELECT 1991312078 FROM vt1 WHERE (ABS(DISTINCT UPPER(x''))) ORDER BY CASE WHEN -1647345271 THEN (NOT (vt1.c0)) ELSE (vt0.c0 IN ('Kxa8-<3')) END ASC  NULLS FIRST, (((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, x'ccb8', vt0.c0)) AND ((vt1.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt1.c0) NOTNULL)) AND (TIME(vt0.c0, vt1.c0, vt0.c0)))  NULLS LAST;SELECT ((- (x'')) IN (CASE WHEN vt0.c0 THEN vt1.c0 END)) FROM vt0;SELECT IFNULL(0X1dfb8fa5, vt1.c0) COLLATE NOCASE FROM vt0, vt1 WHERE (CAST(CASE NULL  WHEN NULL THEN 0xffffffffd571d1ad END AS NUMERIC)); -- 0ms;
SELECT vt0.c0, (((((((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c0)))OR('1gK\nq4')) IN ()), CASE ((vt0.c0)%(vt1.c0))  WHEN CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 END THEN vt0.c0 ELSE MIN(vt1.c0) END, (('-540674878')>>(TYPEOF(DISTINCT 0.3591804102722034))), MAX(COUNT(*)) COLLATE BINARY FROM vt0, vt1;SELECT CAST(MIN(vt1.c0) AS NUMERIC), ((SUM(vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND ((((vt0.c0))>=((vt0.c0))))), CASE WHEN ((vt1.c0)OR(vt0.c0)) THEN (vt0.c0 IN ()) ELSE (((vt0.c0))<>((vt1.c0))) END FROM vt0 WHERE (CAST(((0.4200434689768916) BETWEEN (0x58d1df50) AND (0X3f4b7444)) AS NUMERIC));SELECT DISTINCT CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) AS INTEGER), ((CAST('\nDu\H>B簡' AS BLOB)) BETWEEN (((vt1.c0)>>(vt0.c0))) AND (vt1.c0)), LAG(LTRIM(((vt0.c0) NOTNULL), vt0.c0 COLLATE RTRIM), CAST(((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER), ((((vt1.c0 COLLATE BINARY)AND(((vt1.c0)>>(vt0.c0)))))OR(vt0.c0 COLLATE NOCASE))) OVER () FROM vt1, vt0; -- 0ms;
SELECT DISTINCT AVG(TRIM(vt0.c0, vt1.c0)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt1;SELECT ((((vt1.c0)&(vt0.c0)))>(vt0.c0 COLLATE RTRIM)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt1.c0) OVER ( PARTITION BY CAST((+ (vt1.c0)) AS INTEGER), ((CAST(vt1.c0 AS BLOB))IS(((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0))))), (vt1.c0 IN ()), COUNT(*) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)&(vt0.c0))) IS FALSE) FROM vt1 GROUP BY CASE json_array_length(vt1.c0, vt0.c0)  WHEN ((vt0.c0)>(vt1.c0)) THEN ((vt0.c0) IS FALSE) ELSE ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) END LIMIT 2094911753 OFFSET -241212666;SELECT DISTINCT (((vt1.c0))!=((vt1.c0))) COLLATE RTRIM, vt1.c0, ((((((((CAST(vt1.c0 AS TEXT))OR(vt0.c0 COLLATE RTRIM)))AND(CAST(vt0.c0 AS TEXT))))AND(vt1.c0 COLLATE BINARY)))OR(((vt1.c0)<=(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COALESCE(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), vt0.c0 COLLATE BINARY, ((((((((vt1.c0)OR(NULL)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)), (vt1.c0 IN ())) FROM vt0;SELECT ALL (((((vt1.c0))=((vt1.c0)))) IS TRUE) FROM vt1, vt0 WHERE ((((('౺v') NOT BETWEEN (243470637) AND (-940072593))) BETWEEN ((('J㨴*F,\nMW') NOT BETWEEN (NULL) AND (NULL))) AND (((x'a5b57898') IS TRUE)))) GROUP BY (- ((((vt0.c0, vt0.c0, vt0.c0))>((vt1.c0, vt0.c0, 'R,O&'))))), ((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))*(CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE '710857001' END)), highlight(CAST(vt1.c0 AS REAL), (~ (vt0.c0)), vt1.c0 COLLATE NOCASE, vt1.c0 COLLATE NOCASE) ORDER BY ((((((0.5347034667301834) IS FALSE))AND(((0.13104762313363139) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND(((vt1.c0) BETWEEN (-1.832406342E9) AND (vt1.c0)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 GROUP BY (CASE WHEN '' THEN vt1.c0 END IN (CAST(vt1.c0 AS BLOB))); -- 1ms;
SELECT DISTINCT LOWER(json_valid(vt1.c0)) FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT (+ ((vt0.c0 IN (vt0.c0, vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN ()))>(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT AVG(COUNT(((vt1.c0) IS FALSE))) FROM vt0 LIMIT 2116009861 OFFSET -1644427746;SELECT ((vt0.c0) IS FALSE) COLLATE RTRIM FROM vt0, vt1 WHERE (((-8.55424603E8)/(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)|(vt1.c0))  WHEN ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN SUM(vt1.c0) ELSE ((vt0.c0)||(vt1.c0)) END FROM vt1, vt0 WHERE (TRIM(DISTINCT ('1699247203' IN (0.666785233572578, '1395817099')))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((vt0.c0) NOT BETWEEN ('-1248979962') AND (vt1.c0)), 0.4123456953455258), vt0.c0, (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((((((((((((((vt1.c0)AND('1287415020')))OR(vt0.c0)))AND(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)), ((x'')AND(vt0.c0)), ((vt0.c0) NOTNULL))) AND (((((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN ((vt0.c0, x'', -981152331)) AND ((vt0.c0, vt0.c0, vt0.c0))), (vt1.c0 IN ()), (+ (vt0.c0))))) FROM vt0, vt1 WHERE (((((((0.0984873704012208)>(0.04764614985586668)))OR(((NULL)/('U3')))))OR(0.18378087841630086))); -- 1ms;
SELECT CAST(((vt1.c0)=(vt1.c0)) AS INTEGER) FROM vt0, vt1 WHERE ((NOT (((((0.41318636370107076)OR(NULL)))AND('43564651'))))); -- 0ms;
SELECT ALL ((vt0.c0 COLLATE RTRIM)GLOB((vt1.c0 IN ()))), MAX(LIKELY(DISTINCT vt1.c0)), ((RTRIM(vt1.c0))!=(NULL)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((QUOTE(vt0.c0))AND((+ (vt0.c0)))))OR(((vt1.c0) IS TRUE))) FROM vt0, vt1 ORDER BY (((vt0.c0 IN ()))IS(vt1.c0)); -- 0ms;
SELECT ALL (((((0Xffffffffb58e1406, vt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))))<<((vt0.c0 IN ()))) FROM vt0, vt1 GROUP BY (- (((vt1.c0) NOT NULL))); -- 0ms;
SELECT ((((((vt0.c0))<((vt0.c0)))))>=((MIN(vt1.c0)))) FROM vt1 WHERE ((((CAST(NULL AS BLOB)))>((LIKELIHOOD(DISTINCT 0.8484506320548929, 0.30457658807978016)))));SELECT DISTINCT CASE (((vt0.c0, vt1.c0, vt1.c0, vt0.c0, vt1.c0))<=((vt1.c0, vt0.c0, vt0.c0, vt0.c0, vt1.c0)))  WHEN (vt0.c0 IN ()) THEN (NOT (vt1.c0)) WHEN vt0.c0 COLLATE RTRIM THEN (vt0.c0 IN ()) WHEN ((vt0.c0) IS FALSE) THEN ((vt1.c0)LIKE(vt1.c0)) ELSE ((vt1.c0) IS TRUE) END FROM vt0 GROUP BY LIKE(CASE WHEN vt1.c0 THEN x'' WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) NOT NULL), '1') HAVING CASE WHEN (((''))>=((vt1.c0))) THEN ((((((((0.8962311731204486)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)) ELSE ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) END LIMIT 873691069 OFFSET -2010414223;SELECT DISTINCT CASE ((vt0.c0)AND(0Xffffffffa1c4df46))  WHEN ((vt0.c0) IS FALSE) THEN CAST(vt1.c0 AS NUMERIC) END, ((vt1.c0 IN ()) IN ()), (((vt0.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt1.c0, vt1.c0, vt1.c0))) COLLATE BINARY COLLATE NOCASE FROM vt0 WHERE ((('f')IS('油6')) COLLATE NOCASE);SELECT DISTINCT ((NULL)AND(vt1.c0)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST((vt1.c0 IN (vt1.c0)) AS BLOB), ((((vt1.c0)*(vt1.c0))) ISNULL), (((((x'')OR(vt1.c0)))AND(vt1.c0)) IN ()) FROM vt0;SELECT DISTINCT ((COUNT(*)) NOT BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (((vt1.c0)/(vt0.c0)))) FROM vt0;SELECT ALL DENSE_RANK() OVER (), SUM(LOWER(DISTINCT vt1.c0)) OVER (), MIN(vt0.c0) FROM vt1 WHERE (CASE (('-1273731177') NOT BETWEEN ('hGrEA') AND (x''))  WHEN -2.136748446E9 COLLATE BINARY THEN ((0xffffffffdfc5f4c2) ISNULL) ELSE ((x'')<>(0.6029286407481531)) END);SELECT DISTINCT IFNULL(x'' COLLATE NOCASE, vt1.c0 COLLATE RTRIM) FROM vt0, vt1; -- 0ms;
SELECT ALL CASE WHEN ((((vt1.c0)OR(vt0.c0)))OR(x'')) THEN ((vt1.c0)<=(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END FROM vt1, vt0; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))LIKE(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), vt1.c0, ((((((((((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c0)))OR(vt0.c0 COLLATE BINARY)))AND(((((vt0.c0)AND(vt1.c0)))AND(vt0.c0)))))OR(((vt1.c0)IS NOT(vt1.c0)))))AND((vt1.c0 IN ('')))) FROM vt0;SELECT DISTINCT (((vt0.c0 IN ()))GLOB((vt0.c0 IN ()))), ((('')<>(vt1.c0)) IN ()), ((((vt0.c0) IS TRUE)) NOT BETWEEN (SUM(vt1.c0)) AND ((vt0.c0 IN (vt0.c0)))) FROM vt1 WHERE (((CASE WHEN 0.25341916639610174 THEN NULL WHEN x'3dab8329f3c1' THEN '' WHEN 0.8248762718056751 THEN 0.7306136593189181 END)>=(((0.7636217309229036) BETWEEN (-1.220289766E9) AND (NULL)))));SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>=('260845734')) FROM vt1;SELECT ((CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END)<=(CAST(vt1.c0 AS INTEGER))) FROM vt0 WHERE (((((NULL IN ())))!=(((- (NULL))))));SELECT DISTINCT COUNT(vt0.c0) FROM vt0, vt1 ORDER BY ((CAST(vt1.c0 AS REAL))<=(vt1.c0 COLLATE NOCASE)) DESC; -- 1ms;
SELECT ALL ((NULL)+(vt1.c0)) COLLATE BINARY FROM vt1 WHERE (CAST(CASE x''  WHEN NULL THEN x'' ELSE 0xffffffffdd0cb6fa END AS BLOB)); -- 0ms;
SELECT DISTINCT (~ (GROUP_CONCAT(vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT ALL ((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 4.79579644E8, vt0.c0))) IN ()) FROM vt1, vt0; -- 0ms;
SELECT LIKELIHOOD(DISTINCT (vt1.c0 IN ()), 0.5634346845353465) FROM vt1, vt0 WHERE ((((((0.8728057602678915))<((NULL))))>=(((-1.790370163E9) BETWEEN ('-2136748446') AND (0.06748582903640221))))); -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (((('7L)')) BETWEEN (('')) AND ((((x'') NOT BETWEEN (0.05709945173008413) AND (-5.56143368E8)))))); -- 0ms;
SELECT HEX(DISTINCT (vt0.c0 IN ())) FROM vt0 WHERE (((((0.5910473286312496, 'G뎕n8', 'o93k'))=((259372592, '', 0.38272555983731926))) IN ())); -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) NOT BETWEEN (((vt0.c0) NOT NULL)) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)) FROM vt1;SELECT DISTINCT CASE WHEN (((vt1.c0))<((vt0.c0))) THEN (vt1.c0 IN (vt1.c0, vt1.c0)) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END FROM vt0 GROUP BY CAST(CAST(vt1.c0 AS TEXT) AS NUMERIC), ((((((((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))AND(((vt0.c0) ISNULL))))AND((~ (vt1.c0)))))OR(CASE WHEN vt1.c0 THEN vt0.c0 END)))AND((vt1.c0 IN ()))), ((((('{*') BETWEEN (vt0.c0) AND (-373556524))))<>(((vt1.c0 IN ())))) HAVING CASE WHEN ((vt1.c0) NOTNULL) THEN CAST(vt1.c0 AS REAL) ELSE '436410223' END;SELECT ALL CAST((vt1.c0 IN ()) AS NUMERIC), COUNT(*), vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT ALL ((vt1.c0 COLLATE RTRIM)-((vt0.c0 IN (vt1.c0)))) FROM vt1 WHERE (((CASE -904064968  WHEN x'fe35' THEN '0.6449994377614104' END) NOTNULL)) LIMIT -2136748446 OFFSET 10944040;SELECT ALL CHAR(vt1.c0 COLLATE NOCASE) FROM vt0;SELECT DISTINCT (((((vt0.c0, NULL, vt0.c0)) NOT BETWEEN ((0.47958312558197913, vt1.c0, vt1.c0)) AND ((vt0.c0, vt1.c0, vt0.c0)))) BETWEEN (((vt0.c0)|(vt0.c0))) AND ((vt1.c0 IN (vt0.c0)))) FROM vt1, vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE RTRIM)OR((vt1.c0 IN ()))))OR(((vt0.c0)IS NOT(NULL)))) FROM vt0, vt1 WHERE (0.22880126470140627); -- 1ms;
SELECT (((vt1.c0 IN ()))/(((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT highlight((- (vt0.c0)), ((vt1.c0)>(vt1.c0)), (vt1.c0 IN ()), ABS(DISTINCT vt1.c0)) FROM vt1, vt0;SELECT CAST(-2035205296 AS BLOB), ((vt0.c0)LIKE(((((vt1.c0)AND(vt1.c0)))OR(vt0.c0)))), vt1.c0 FROM vt0;SELECT DISTINCT SQLITE_VERSION() COLLATE NOCASE FROM vt0, vt1 WHERE (CASE (('7x') IS FALSE)  WHEN ((x'')>=('')) THEN (1.837985307E9 IN ()) END); -- 0ms;
SELECT (+ (CAST(vt0.c0 AS BLOB))), ((((((((((((((vt1.c0) ISNULL))OR(((vt1.c0)<=(vt1.c0)))))OR((~ (vt1.c0)))))AND(988050143)))AND(COUNT(vt1.c0))))AND(vt0.c0)))AND(vt0.c0)), LENGTH(((vt0.c0)<(vt1.c0))) FROM vt0;SELECT DISTINCT ((x'') IS TRUE) FROM vt0, vt1 ORDER BY ((((vt1.c0)IS NOT(vt0.c0)))%(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) DESC; -- 0ms;
SELECT '758590658', LAST_VALUE(vt1.c0) OVER (), (((((((vt1.c0)AND('ᲭxD\nI')))AND(vt0.c0)), ((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)), ((((vt0.c0)AND(vt0.c0)))OR(vt1.c0))))<((CAST(x'' AS BLOB), CASE vt1.c0  WHEN 0.43808299965992203 THEN '' WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 END, vt0.c0 COLLATE RTRIM))) FROM vt1, vt0 WHERE (((((x'18af')<=('1949208472')))>=((('*\n') IS TRUE)))) GROUP BY CAST(vt1.c0 COLLATE NOCASE AS NUMERIC); -- 0ms;
SELECT IFNULL(DISTINCT ((vt1.c0)<=(vt0.c0)), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))), (((((vt0.c0))<=((vt1.c0))))<>(DATETIME(vt0.c0, vt1.c0, vt0.c0, vt1.c0, vt0.c0))), CAST(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END AS REAL), TOTAL_CHANGES(), (((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT ALL (((vt1.c0)<<(vt1.c0)) IN ()) FROM vt0, vt1 WHERE ((CASE WHEN 0.9463402941206167 THEN 0.009155722434512459 ELSE x'' END IN ())); -- 0ms;
SELECT ALL ((NULLIF(vt0.c0, x''))/(x'')) FROM vt1 WHERE (CASE WHEN '05' THEN 1.82565965E8 END);SELECT ALL (NOT (CASE WHEN 0.6700954774438574 THEN vt1.c0 ELSE vt0.c0 END)), (((+ (vt1.c0)))LIKE(vt0.c0)), ((((vt0.c0)*(vt0.c0)))+(((vt1.c0)LIKE(vt0.c0)))) FROM vt0;SELECT ALL (NOT (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt1 WHERE ((- (CASE WHEN x'' THEN 0.738972260056587 END)));SELECT DISTINCT ((TRIM(DISTINCT vt0.c0)) IS FALSE) FROM vt1, vt0 WHERE ((((((NULL))<=((0Xffffffffaf0ea3bf)))) IS FALSE)); -- 0ms;
SELECT DISTINCT LAST_VALUE((+ (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT 'd#', (((vt1.c0)!=(-1e500)) IN (IFNULL(vt0.c0, vt0.c0), vt1.c0 COLLATE RTRIM)), RANK() OVER ( ORDER BY MAX(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)), (- (vt0.c0)))  NULLS FIRST, '') FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)%((((vt1.c0))<=(('		j5)Lm'))))) FROM vt0 GROUP BY vt0.c0, (((vt1.c0)) BETWEEN ((((((((((vt0.c0)OR(0.24404521433517956)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))) AND ((NULLIF(DISTINCT vt0.c0, vt1.c0)))), ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))>>(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0))));SELECT DISTINCT ABS(DISTINCT (((vt0.c0))!=((vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ((((((((CASE WHEN vt0.c0 THEN vt1.c0 END)AND(vt0.c0)))AND((vt0.c0 IN ()))))AND((('')!=(vt1.c0)))))OR(LIKELY(DISTINCT vt0.c0))) FROM vt0 WHERE (((((((((-1.26232444E8 COLLATE BINARY)AND(0xffffffffecd61706 COLLATE RTRIM)))OR(((x'')==(x'')))))AND(x'')))AND((('>.\rW[p[\r')>>('1697896791'))))) GROUP BY vt1.c0, CAST(((((vt0.c0)OR(vt1.c0)))OR(vt0.c0)) AS REAL), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) NOTNULL) HAVING (CAST(vt0.c0 AS INTEGER) IN (CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)) LIMIT 223319392;SELECT CAST(vt1.c0 AS BLOB) COLLATE NOCASE FROM vt0, vt1 WHERE (((((x'') IS TRUE)) ISNULL)) GROUP BY CAST(vt1.c0 COLLATE BINARY AS TEXT); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS NUMERIC) FROM vt1, vt0 WHERE ((((((x'39d6') IS FALSE)))<((NULL)))); -- 0ms;
