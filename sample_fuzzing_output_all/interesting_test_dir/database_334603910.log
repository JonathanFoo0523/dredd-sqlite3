-- Time: 2024/06/07 11:50:34
-- Database: database10
-- Database version: 3.40.0
-- seed value: 334603910
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('-569421560') WHERE ((((((rt0.c0) NOT NULL))AND((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(((rt0.c2) BETWEEN (x'') AND (rt0.c0)))); -- 1ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0) VALUES (0.9088060342298204, 'start of month'); -- 3ms;
INSERT OR ABORT INTO rt1 VALUES (x'', x'46e9', '-2041830635'), (x'', 0xffffffff864c2315, x'eed4'), (x'74f5', -1575788943, 0.9406717990538078); -- 0ms;
INSERT OR REPLACE INTO rt0(c2) VALUES (NULL); -- 3ms;
INSERT OR ROLLBACK INTO rt1 VALUES (x'b43c', NULL, x''), ('-1083368657', x'', NULL), (NULL, -1533020812, 'start of month'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('xa)E*f', x'c4b4', 'aE', NULL, 388568416); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE temp; -- 1ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x'56f7'); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO rt1(c1, c0, c2) VALUES (x'', 0.8466691951037506, '-2041830635'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c3) VALUES (NULL, 0.9406717990538078, ''); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES ('1114399886', 0.8468207742250555, 0Xffffffffa49ff574), (x'', 'Hdf\r>!㘦', 1114399886), ('%6q	a', -5.6942156E8, x''), (0.9754418735904071, NULL, 0.6749252571737193), (NULL, 0Xffffffff836a702e, 0Xffffffffcc7d3626); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-2090176466; -- 0ms;
UPDATE rt0 SET (c2, c3)=(NULL, NULL) WHERE (+ (CASE WHEN rt0.c3 THEN rt0.c1 END)); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c3, c2, c4) VALUES ('}\n ', (((((-2.041830635E9) NOT BETWEEN (0x17291560) AND (-864209370))))<((((x'367e')LIKE(NULL))))), NULL, x'', ((((2101779752)+(0X5b8d4120))) BETWEEN (NULL COLLATE NOCASE) AND (CAST(0Xffffffffbf6d1b2f AS NUMERIC)))); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES (''); -- 1ms;
INSERT OR ABORT INTO rt0 VALUES (x'aa257845', 0.6084919631586713, '1535983904', NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c2, c1, c4) VALUES ('儈9', '2101779752', NULL, NULL, x''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=(0.6491251751615963) WHERE ((CAST(rt1.c2 AS INTEGER)) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c2)))) AND (TYPEOF(DISTINCT 'UY''PL\'))); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR ABORT INTO rt0(c2) VALUES (NULL); -- 0ms;
CREATE VIRTUAL TABLE vt18 USING fts5(c0); -- 2ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt18 VALUES (0.6948469200470817); -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
REINDEX  rt1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX  vt18; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0) VALUES ('hdf\r>!㘦', NULL); -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.45629919853660705; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (x'1d3a', '諿/e', NULL), ('-2090176466', 0xffffffff836a702e, NULL), (0.384236403455263, NULL, NULL); -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE rt0 SET (c2, c2)=(0.4981427649181024, -864209370); -- 1ms;
UPDATE rt0 SET c4='388568416'; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.03525366940952934, c2=-517559042; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET (c0, c2)=('-569421560', 0.2648102218845376) WHERE ABS(DISTINCT CASE WHEN rt0.c2 THEN '-1083368657' ELSE rt0.c4 END); -- 0ms;
UPDATE rt0 SET c0='H- iKb'; -- 1ms;
UPDATE vt18 SET (c0, c0)=(NULL, x'795d') WHERE ((NULL)IS(vt18.c0)) COLLATE NOCASE; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt18 SET (c0, c0)=(1.983023871E9, '*7'); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1, c3) VALUES ('', NULL, 0.904070177026376, -2041830635); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt18', 'rt0', ' sz=-1889743819 unordered noskipscan'); -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0X5b8d4120, c2=NULL WHERE (((rt1.c0)) NOT BETWEEN ((((rt1.c1) NOT NULL))) AND ((((rt1.c0)IS NOT(rt1.c0))))); -- 1ms;
UPDATE OR IGNORE rt1 SET (c0, c1)=(0.8352681583466595, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree_i32(c0, c1, c2); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt2 SET (c2)=(x'0a40') WHERE (((rt2.c1) IS FALSE) IN (((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c2)))); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c1, c3, c4) VALUES (NULL, 0.384236403455263, 'QabK', NULL), ('%6q	a', x'b87d', x'', x''), ('', 'z*', x'bbfc', '2038570819'); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c3, c4) VALUES (' AZti.D', x'', NULL); -- 0ms;
INSERT OR ABORT INTO rt1(c0, c1) VALUES (NULL, x''); -- 1ms;
INSERT INTO vt18(vt18, rank) VALUES('crisismerge', 885776160); -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (NULL), (863877655), (''); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES ('308428633', x'', '-864209370'), (0.011246007042971407, '', 'lA鴨'), (x'', 1.535983904E9, -1.575788943E9); -- 0ms;
ANALYZE; -- 0ms;
REINDEX RTRIM; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT SUM(rt0.c1), ((rt1.c2) IS TRUE)) FROM rt2, rt1, vt18;SELECT DISTINCT ((('-215485596', rt1.c0, rt1.c0, rt0.c3, rt1.c0)) BETWEEN (((((rt1.c0)) NOT BETWEEN (('%	')) AND ((rt1.c2))), (rt2.c0 IN ()), TRIM(DISTINCT vt18.c0, rt0.c1), rt1.c1, CAST(rt0.c2 AS NUMERIC))) AND ((rt0.c0 COLLATE RTRIM, (((rt2.c2)) BETWEEN ((rt2.c2)) AND ((-1038705728))), (((rt2.c2, rt1.c1, rt2.c2)) NOT BETWEEN ((rt2.c2, rt0.c4, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c1))), vt18.c0, rt0.c3))), ((rt2.c1)*(rt1.c1)) COLLATE BINARY, CASE WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt2.c2 AS REAL) WHEN 8.63877655E8 THEN (rt1.c0 IN ()) WHEN ABS(rt0.c4) THEN CAST(rt1.c2 AS TEXT) END FROM rt2 ORDER BY CAST(((0.406297640355457)==(rt2.c1)) AS REAL)  NULLS LAST, (rt2.c1 IN ()) LIMIT 1874590122 OFFSET 1406256838;SELECT (NOT (((NULL) IS TRUE))), (((((rt0.c0)<>(rt1.c0))))>(((rt0.c4 IN ())))), (rt2.c2 COLLATE RTRIM IN (rt0.c1)) FROM rt0;SELECT DISTINCT (((NULL)) BETWEEN ((CAST(0.0960066556464354 AS TEXT))) AND ((((rt0.c3) IS TRUE)))) FROM rt0, rt1, rt2 WHERE ((((NULL)) NOT BETWEEN (('1406256838')) AND ((TYPEOF(0.6084919631586713))))); -- 0ms;
SELECT DISTINCT ((((((((((rt2.c0)OR(NULL)))AND(rt2.c1)))AND(rt2.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c4) NOTNULL)) AND (rt0.c1)) FROM vt18 WHERE (((((x'') NOT BETWEEN (x'') AND (0.5738796994952713)))||(LOWER(NULL)))) LIMIT 689196398;SELECT DISTINCT MAX(((((x'')AND(rt0.c3)))OR(rt1.c0))), ((CAST(rt1.c0 AS TEXT))AND(rt1.c1 COLLATE RTRIM)), (+ (CAST(rt2.c0 AS BLOB))) FROM rt0;SELECT DISTINCT LAG((((rt2.c2)) BETWEEN ((vt18.c0)) AND ((rt2.c0))) COLLATE NOCASE, CAST(((((rt1.c1)AND(rt0.c2)))OR(rt0.c2)) AS TEXT), (((((rt0.c3) ISNULL)))<((LOWER(rt1.c1))))) OVER () FROM rt0, rt2, vt18, rt1; -- 1ms;
SELECT ALL json_remove(((vt18.c0)/(rt0.c3)), rt0.c2) FROM rt2 WHERE (x'');SELECT ((rt0.c1 COLLATE BINARY) ISNULL), NTILE(CAST(CAST(rt1.c0 AS BLOB) AS INTEGER)) OVER (), CASE NULL  WHEN (((vt18.c0, rt1.c0, rt2.c1)) BETWEEN ((rt0.c2, '0.406297640355457', rt0.c4)) AND ((rt2.c1, rt2.c2, rt1.c2))) THEN ((rt1.c2)>=(rt1.c0)) WHEN TOTAL(rt0.c3) THEN rt1.c1 WHEN SUM(x'') THEN COUNT(rt0.c2) END FROM rt1;SELECT DISTINCT COUNT((NOT (rt0.c2))), '>[Y', ((((rt2.c0)IS NOT(rt0.c3)))IS NOT((~ (rt0.c3)))) FROM rt1, rt2, vt18, rt0 WHERE (HEX(DISTINCT ((0.5102557804697633)<<('1114399886')))) LIMIT 1874590122 OFFSET 388568416; -- 0ms;
SELECT GROUP_CONCAT((NULL IN ())) OVER (), AVG(CAST(rt1.c1 AS NUMERIC)), x'8eea3ed5', ((CASE WHEN rt2.c0 THEN rt1.c0 END)||('䝴<QI')), (((CAST(rt2.c2 AS NUMERIC)))>=((rt0.c4))) FROM rt1, vt18, rt0, rt2 WHERE (CAST('(\n' AS INTEGER)) ORDER BY CAST(UNLIKELY(rt0.c0) AS NUMERIC) DESC  NULLS LAST; -- 0ms;
SELECT (((~ (rt0.c2))) BETWEEN (rt2.c0) AND (rt0.c4 COLLATE RTRIM)) FROM rt0, rt1 INNER JOIN rt2 ON NULL INNER JOIN vt18 ON ((((rt1.c1)/(rt1.c1)))<=(((rt1.c0)!=(vt18.c0)))) LIMIT -1843592164; -- 0ms;
SELECT ALL ((((rt1.c2) NOT NULL)) BETWEEN (ABS(rt1.c1)) AND (((rt0.c0) BETWEEN ('+,') AND (rt2.c2)))), rt2.c0, NULL FROM rt0, rt1, rt2, vt18 WHERE ((((((((NULL, '-375564246', x'')) NOT BETWEEN ((NULL, NULL, 'h- ikb')) AND ((x'266a', 308428633, '櫽r2'))))OR(((0.5416987365879091) NOT NULL))))AND(((-410406459)>>(NULL))))); -- 0ms;
SELECT 0.22610382118598538, (- (((rt1.c0)>=(rt0.c4)))), (((rt1.c0)) BETWEEN ((((rt2.c1)/(vt18.c0)))) AND ((MAX(rt0.c4)))) FROM rt1, rt2, vt18 WHERE (CAST(((NULL) BETWEEN (NULL) AND (x'')) AS INTEGER));SELECT ALL COUNT(LIKELIHOOD(rt0.c0, 0.30226622244195733)) OVER ( PARTITION BY CASE (rt1.c2 IN ())  WHEN (NOT (rt0.c0)) THEN rt1.c2 COLLATE NOCASE WHEN rt0.c4 THEN (- (vt18.c0)) WHEN ((rt2.c1)IS NOT(rt0.c3)) THEN (((rt0.c3))<=((vt18.c0))) END, CASE (NOT (rt0.c0))  WHEN CAST(rt0.c1 AS INTEGER) THEN (((vt18.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) END, CAST(CAST(rt2.c2 AS INTEGER) AS REAL), ((((rt1.c0) IS FALSE))IS(HEX(rt0.c0)))), (((rt2.c0))<=(((+ (rt1.c1))))), RANK() OVER () FROM vt18 GROUP BY CASE ((((rt2.c1)AND(NULL)))OR(0x39517b29))  WHEN ((rt1.c1)&(rt1.c0)) THEN ((rt2.c0)<<(0X12623f59)) ELSE rt0.c2 COLLATE BINARY END;SELECT DISTINCT (((NOT (x'')))!=(CASE rt0.c0  WHEN rt0.c4 THEN rt1.c1 ELSE rt0.c4 END)) FROM vt18, rt0;SELECT DISTINCT ((MAX(rt0.c4)) NOT BETWEEN (((rt2.c0)IS NOT(rt1.c2))) AND ((((x''))=((vt18.c0))))) FROM rt0, rt1, rt2, vt18 WHERE (((((((0.4699724926137506)GLOB(0.32351634228919446)))AND((('-410406459')+(0.45629919853660705)))))AND(UPPER(x'')))) LIMIT -1885680349; -- 0ms;
SELECT ALL CASE vt18.c0  WHEN ((NULL) NOTNULL) THEN CASE rt2.c1  WHEN '-1889743819' THEN rt0.c2 WHEN rt0.c1 THEN rt2.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt18.c0 END ELSE CAST(rt0.c2 AS NUMERIC) END FROM rt2, vt18, rt0; -- 0ms;
SELECT ALL (NOT (((rt1.c0) IS FALSE))), (((rt2.c2 IN (rt2.c2)))-(((((((((rt0.c3)AND(rt2.c2)))OR(vt18.c0)))OR(rt0.c4)))AND(rt1.c0)))), RANK() OVER () FROM rt0 WHERE (-2041830635);SELECT COUNT(CAST(rt0.c0 AS BLOB) COLLATE BINARY) FROM rt0, rt1; -- 0ms;
SELECT (('') NOT NULL), CASE WHEN (((rt0.c3, rt0.c1, rt1.c1)) NOT BETWEEN ((rt2.c0, rt0.c0, rt1.c0)) AND ((rt1.c2, rt1.c1, rt0.c1))) THEN CAST(rt2.c2 AS BLOB) WHEN (- (rt0.c1)) THEN (((rt0.c4, rt0.c3, rt2.c1))=((rt1.c2, rt0.c2, vt18.c0))) WHEN ((rt1.c1)||(rt0.c2)) THEN ((rt1.c0) NOTNULL) END, MAX((((rt2.c0, vt18.c0, rt1.c1))>=((rt1.c0, rt1.c2, rt0.c3)))) FROM vt18, rt0, rt1, rt2 ORDER BY (((rt2.c0)) NOT BETWEEN ((((rt0.c4) ISNULL))) AND (((rt2.c1 IN ()))))  NULLS FIRST, ((((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt2.c1)))>=(rt0.c0 COLLATE RTRIM)); -- 0ms;
SELECT DISTINCT ((LIKE(rt1.c0, rt1.c0, 'U')) NOT NULL), (+ (CAST(rt2.c2 AS BLOB))), LOWER(json_object(rt1.c2, rt2.c0)), CASE ((0.7868342516869846)|(rt1.c1))  WHEN rt0.c4 THEN ((rt2.c0) BETWEEN (rt1.c2) AND (vt18.c0)) ELSE rt0.c0 END, ((UNLIKELY(-2090176466))>((((rt2.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c0))))), ((((rt1.c0)=(rt2.c2)))/(vt18.c0)), COUNT(0.12789118210517758) OVER ( ORDER BY ((rt1.c1)|(((rt2.c2) BETWEEN (rt1.c1) AND (rt1.c2))))  NULLS FIRST) FROM rt0, vt18 WHERE ((((NULL)) BETWEEN ((x'')) AND ((CAST(0xffffffffdbb2178a AS BLOB))))) GROUP BY ((0.301918686768303) NOT NULL);SELECT CASE CASE WHEN rt0.c1 THEN vt18.c0 WHEN rt0.c2 THEN vt18.c0 WHEN rt2.c0 THEN rt2.c2 ELSE rt0.c4 END  WHEN MIN('r\n呝9') THEN CAST(rt0.c4 AS TEXT) END FROM rt1, vt18;SELECT ((((rt2.c2) IS TRUE))AND(rt2.c1)) FROM rt0 WHERE (x'');SELECT DISTINCT ((((((rt0.c4)AND(rt0.c1)))OR(vt18.c0)))>((rt0.c4 IN ()))), LIKELIHOOD(CAST('0.6948469200470817' AS REAL), 0.7024345922986415), rt0.c0, CAST(rt0.c3 COLLATE RTRIM AS BLOB), CAST(((vt18.c0)<<(rt0.c0)) AS TEXT) FROM rt2;SELECT ALL (- (((rt0.c3) IS FALSE))) FROM rt0, vt18, rt1, rt2; -- 0ms;
SELECT DISTINCT CAST((rt2.c2 IN ()) AS REAL), rt2.c1, ((((((((((((x'')OR('-218222782')))OR(rt0.c1)))AND(rt1.c1)))OR(rt0.c1)))AND(GROUP_CONCAT(rt0.c3))))OR(AVG(rt0.c4))), ((NULL) BETWEEN (((rt0.c4)%(vt18.c0))) AND (1426281848)), (((('aE')AND(rt2.c1)))AND(rt1.c0)) COLLATE RTRIM FROM rt0, vt18, rt2, rt1; -- 0ms;
SELECT ALL (((((((0.7046823211988045, rt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, rt2.c2, rt0.c4)) AND ((rt1.c1, rt0.c4, rt2.c2))))OR(rt0.c2)))OR(TRIM(rt2.c0))) FROM rt0, rt2, rt1, vt18; -- 0ms;
SELECT ALL AVG((x'' IN (rt1.c2, rt0.c3))) COLLATE BINARY FROM rt2, vt18, rt1 LEFT OUTER JOIN rt0 ON json_extract(CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN NULL WHEN rt2.c0 THEN rt2.c1 ELSE 0.29629082785476235 END, rt2.c0 COLLATE RTRIM) WHERE ((((0.12789118210517758 IN ())) BETWEEN ((+ ('689196398'))) AND (0.9249783266462993 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((NOT (rt0.c0)) IN (INSTR(rt2.c1, rt0.c1), CASE WHEN rt0.c2 THEN rt2.c0 END)) FROM rt2, rt0, rt1 WHERE (CASE WHEN ('27' IN (x'')) THEN ((0.599696247203222) ISNULL) ELSE (('tjJ4냏 ᣎ') NOT NULL) END); -- 0ms;
SELECT ALL ((((rt1.c0)AND((((rt2.c1))<((0.24231199767757328))))))AND(x'')), ((((((((((rt0.c0)>=(rt2.c2)))OR(((rt2.c0) NOT NULL))))AND((((rt1.c1)) NOT BETWEEN ((vt18.c0)) AND ((rt2.c2))))))OR(((rt0.c2) ISNULL))))OR((~ (rt2.c1)))), TOTAL((0.3591122069539656 IN ())) OVER () FROM rt2, rt1, rt0, vt18 ORDER BY ((rt2.c2) ISNULL) LIMIT 447277612 OFFSET -503524825; -- 0ms;
SELECT ALL (((((rt1.c1)%(rt0.c1))))>((CASE WHEN rt1.c0 THEN rt1.c1 WHEN vt18.c0 THEN rt2.c2 WHEN rt0.c4 THEN rt0.c4 END))), ((((rt2.c1)AND(vt18.c0))) BETWEEN ((((rt1.c1))<=((rt2.c0)))) AND (LTRIM(rt0.c2))), CAST(QUOTE(rt2.c0) AS REAL) FROM rt2 WHERE (((((NULL)AND(0.4257073467018173)))<(CASE WHEN 'rrDL璵' THEN 0xffffffffe99d582a WHEN 1e500 THEN x'' WHEN x'8b95' THEN NULL ELSE NULL END))) GROUP BY (((rt1.c0) NOT BETWEEN (rt2.c2) AND (rt0.c3)) IN ()) ORDER BY x''  NULLS FIRST;SELECT DISTINCT CAST(vt18.c0 COLLATE RTRIM AS BLOB), rt0.c2, 0.591041319354034 FROM rt1, vt18, rt0, rt2; -- 0ms;
SELECT ALL (+ ((rt1.c0 IN (rt1.c1)))), ((COUNT(*)) NOT BETWEEN (((rt1.c2)/(rt1.c2))) AND (rt0.c0)), CAST((rt2.c2 IN ()) AS TEXT) FROM rt2, vt18, rt0 WHERE ((x'' IN ()));SELECT DISTINCT FIRST_VALUE((('0.22610382118598538') NOT BETWEEN ((((rt2.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt2.c0)))) AND (((rt2.c1) NOT NULL)))) OVER ( RANGE  CURRENT ROW), AVG(rt1.c2) FILTER(WHERE NULL) OVER (), '5/AV%', vt18.c0, CASE WHEN (rt1.c1 IN ()) THEN rt2.c0 ELSE (rt0.c1 IN (NULL, rt2.c0)) END FROM rt2;SELECT ((('')) BETWEEN ((CASE rt0.c1  WHEN vt18.c0 THEN rt1.c0 ELSE rt1.c2 END)) AND ((rt0.c2))) FROM rt2, vt18 WHERE (((('ZS'))=((IFNULL(DISTINCT 0.599696247203222, 0xffffffffdaf363e4)))));SELECT ALL rt2.c2, 37246045, ((((((rt0.c3)OR(rt0.c1)))AND(rt2.c1)))AND(NULL)) FROM rt2, vt18, rt1, rt0; -- 0ms;
SELECT DISTINCT (- (0.8784236099119512)) FROM rt2 WHERE (((((((((IFNULL(1.917807357E9, 'ZsNl'))AND('0.7046823211988045')))OR(x'')))AND((((('1879479242')AND(0.5134731884536602)))AND(x'8f96')))))OR(((NULL)==(x''))))) GROUP BY rt1.c1 HAVING ((COUNT(rt2.c0))LIKE('*ef^o5q]j'));SELECT DISTINCT (((rt1.c1) NOT BETWEEN (0Xffffffffcc7d3626) AND (rt0.c1)) IN ()) FROM rt1, rt2, vt18, rt0 WHERE (((((((0.7474480875782812) NOT BETWEEN (NULL) AND (NULL)))AND((('1954206724')+(NULL)))))OR(((((((((0.03437873385085788)OR(0x39517b29)))AND(NULL)))OR(0.46429577692886226)))OR('Kl'))))) ORDER BY ((((rt0.c1 IN (rt0.c4)), rt1.c2 COLLATE NOCASE, CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END))=((((rt0.c0)<(rt0.c2)), (((rt2.c2))>((rt0.c1))), ((rt1.c2)>=(rt1.c2))))), CAST(LOWER(DISTINCT rt1.c1) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT ((((AVG(rt0.c2))AND(((rt2.c0)<=(NULL)))))OR((((0.7046823211988045)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM rt0;SELECT ((CASE WHEN vt18.c0 THEN rt0.c0 WHEN rt2.c2 THEN rt0.c4 WHEN x'c9bf' THEN rt0.c0 WHEN rt1.c0 THEN rt0.c1 WHEN 0.28944994242292754 THEN NULL END) NOT BETWEEN (rt1.c0) AND ((~ (rt0.c1)))) FROM rt1, rt2 GROUP BY (rt0.c1 IN ((((rt2.c2)) BETWEEN ((rt2.c1)) AND ((rt1.c1))))) ORDER BY (~ (((((0.1826849928021439)AND(rt2.c1)))OR(rt2.c2))));SELECT ALL (((((((((rt2.c1 IN ()))AND(((((rt1.c1)AND(vt18.c0)))AND(rt0.c1)))))OR(COUNT(rt0.c2))))AND(rt0.c4 COLLATE BINARY)))OR((- (rt0.c3)))) FROM rt2, rt1, vt18, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)>(rt0.c3)) AS REAL) FROM rt1, vt18;SELECT DISTINCT DENSE_RANK() OVER (), ((((((rt1.c0)AND(rt0.c3)))OR(rt0.c2)))*('689196398')), ((rt0.c2)<=(((rt1.c0)IS NOT(rt0.c0)))) FROM rt2, vt18;SELECT rt2.c0 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM FROM rt2 NATURAL JOIN rt0 WHERE ('D\n'); -- 0ms;
SELECT ALL (((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))))>((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c1))))), NULL, rt0.c4 FROM rt2, rt1 ORDER BY ((rt1.c2)OR(CASE WHEN rt2.c0 THEN vt18.c0 END)) ASC;SELECT DISTINCT (((((NOT (vt18.c0)))OR(((rt1.c2)!=(rt0.c4)))))OR(rt0.c4)) FROM rt0, vt18 GROUP BY NULL, (((rt2.c1)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER))) AND ((((rt0.c3) ISNULL)))), ((((rt1.c2)<('1968192563'))) IS TRUE) ORDER BY 0x426c648e;SELECT DISTINCT TRIM(COUNT(rt0.c2), ((rt2.c2) NOT NULL)) FROM vt18, rt1 GROUP BY (((((((rt1.c0)AND('-363828915')))AND(rt2.c0))))>=((CASE WHEN rt2.c2 THEN '1956613128' ELSE rt1.c1 END))), rt1.c2, ((0.3143002297723084) IS FALSE);SELECT ALL x'', json_quote(rt0.c0), ((rt0.c2 COLLATE NOCASE) BETWEEN ((((vt18.c0, rt2.c2, 0.5625324519241849)) BETWEEN ((rt0.c1, rt2.c2, vt18.c0)) AND ((NULL, rt0.c3, rt1.c1)))) AND (AVG(rt1.c2))) FROM rt0, rt2, vt18;SELECT ALL rt0.c2, CASE ROUND(rt0.c0, rt1.c2)  WHEN rt0.c4 THEN SUM(vt18.c0) END, ((rt2.c0 COLLATE RTRIM) IS FALSE), ((COUNT(*)) NOT BETWEEN (rt0.c4) AND (CASE rt0.c2  WHEN rt2.c1 THEN rt2.c1 END)), SUM(CAST(rt0.c1 AS REAL)) COLLATE BINARY FROM vt18, rt1 ORDER BY ((CAST(rt1.c0 AS REAL))OR(((((rt0.c1)OR(rt1.c0)))AND(rt0.c0)))), rt0.c0 COLLATE NOCASE;SELECT COUNT(((rt1.c0) BETWEEN (x'') AND ('-947174714')) COLLATE BINARY) FROM vt18, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3)OR(rt2.c0)))OR(0x426c648e)) COLLATE NOCASE, (((TYPEOF(DISTINCT 0.5805847588103926), ((rt1.c2)GLOB(vt18.c0)), CHAR(rt2.c0)))<=((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)), ((rt2.c1)%(rt0.c4)), (('幱Y楩㦎஼')|(rt2.c0))))), CASE WHEN (~ (rt0.c1)) THEN COUNT(vt18.c0) ELSE (rt0.c0 IN ()) END FROM rt1, vt18 WHERE ((((((NULL))>=(('1245608312')))) IS FALSE));SELECT DISTINCT UNLIKELY((((rt0.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c0)))), (CAST(rt0.c2 AS BLOB) IN (((rt2.c1) ISNULL))), ((CASE rt2.c2  WHEN rt0.c4 THEN rt0.c0 END)GLOB((NOT (rt2.c2)))) FROM rt0, rt2, rt1, vt18; -- 0ms;
SELECT DISTINCT '0.5416987365879091' FROM rt2 CROSS JOIN rt1 ON CAST(((rt1.c2)>>(rt0.c4)) AS BLOB) WHERE (CAST((((NULL))<((''))) AS REAL));SELECT DISTINCT LEAD(((((((((rt0.c1)AND(((((rt0.c3)AND(rt1.c1)))AND(rt1.c0)))))OR(((rt1.c0) NOT NULL))))AND((((rt0.c4)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))OR(LIKELY(vt18.c0))), ((rt0.c3) IS TRUE), rt1.c0) OVER (), (((- (rt0.c2)))-(((rt0.c3)LIKE(rt1.c1)))), (~ ((NOT (rt2.c2)))) FROM rt0, vt18, rt1 ORDER BY NULL  NULLS LAST, (((vt18.c0)) NOT BETWEEN ((((rt2.c0)|(rt2.c2)))) AND (((NOT (vt18.c0))))), (+ (UNLIKELY(rt1.c2)))  NULLS LAST;SELECT DISTINCT MAX(((rt1.c1) NOT NULL)) COLLATE BINARY FROM rt0, rt2, rt1; -- 0ms;
SELECT (+ (((rt2.c1)&(rt2.c1)))) FROM rt2, rt1, rt0, vt18; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt2.c0))) NOT BETWEEN ((((rt2.c1, rt0.c2, rt2.c0, rt2.c0, '101242197')) NOT BETWEEN ((rt1.c2, rt1.c2, rt0.c0, '-1065740082', rt0.c0)) AND ((x'e42f', rt2.c2, rt0.c2, x'', rt1.c0)))) AND (((rt2.c0) NOTNULL))) FROM vt18, rt1, rt2;SELECT DISTINCT (((((rt2.c2))<((rt0.c0))))IS((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3))))) FROM rt1;SELECT ((- (rt1.c0)) IN ()) FROM rt0, rt1 LEFT OUTER JOIN rt2 ON ((TYPEOF(rt1.c1))IS NOT(rt2.c2)) RIGHT OUTER JOIN vt18 ON ((((((((load_extension(rt2.c2))AND(((rt1.c2)<=(rt0.c0)))))OR(((rt2.c0) NOT BETWEEN (2.038570819E9) AND (rt0.c3)))))AND(rt2.c2 COLLATE RTRIM)))OR(CASE WHEN rt0.c2 THEN rt0.c0 WHEN vt18.c0 THEN rt0.c4 WHEN rt0.c1 THEN 1.426281848E9 END)) ORDER BY (- ((rt1.c2 IN ()))) DESC  NULLS LAST;SELECT DISTINCT x'' FROM rt2, vt18, rt0 WHERE ((((('E') ISNULL))IS NOT(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT (((((rt2.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)), CAST(rt1.c2 AS INTEGER), ((((rt2.c1)AND(NULL)))AND(rt1.c2))))==((rt1.c1 COLLATE BINARY, ((vt18.c0)<>(rt0.c4)), IFNULL(DISTINCT rt2.c0, rt2.c2)))) FROM rt0 ORDER BY rt2.c1 DESC  NULLS LAST;SELECT vt18.c0, AVG(((rt0.c2) BETWEEN (vt18.c0) AND (rt0.c1))) OVER (), rt0.c2, TOTAL((('-605066189') ISNULL)), (+ (TRIM(rt1.c0))) FROM vt18 FULL OUTER JOIN rt1 ON CASE ((vt18.c0) NOTNULL)  WHEN (- (rt0.c2)) THEN ((vt18.c0) IS TRUE) END;SELECT DISTINCT (((vt18.c0)) NOT BETWEEN ((rt1.c1)) AND ((x'b91ed95487d2'))) COLLATE NOCASE, ((((- (rt2.c0))))<=((((rt1.c1)+(rt0.c0))))), (((rt0.c3)) BETWEEN ((((rt0.c3)<(rt2.c0)))) AND ((rt1.c1 COLLATE BINARY))) FROM vt18 WHERE ((- (CASE NULL  WHEN '' THEN -621583388 WHEN x'' THEN x'' WHEN 0.10845722940940006 THEN '(i' END))) LIMIT 913781198;SELECT ALL ((((((((CASE WHEN rt1.c1 THEN rt1.c2 END)OR(rt2.c1 COLLATE BINARY)))OR(TOTAL(rt0.c1))))AND(1480140167)))AND((NOT (rt0.c3)))) FROM rt1, vt18, rt0 WHERE ((CAST(NULL AS INTEGER) IN ())) LIMIT 72279051;SELECT DISTINCT GLOB(CAST(217941659 AS TEXT), CAST(rt0.c2 AS TEXT)) FROM vt18, rt1, rt2, rt0 ORDER BY 0.5651246356160358 DESC; -- 0ms;
SELECT DISTINCT (((rt2.c1)) NOT BETWEEN ((x'')) AND ((-1065057789))) FROM rt1, rt2, vt18, rt0 WHERE ((((NULL IN (NULL))) NOT BETWEEN (((NULL) IS TRUE)) AND ((+ (-4.10406459E8))))) ORDER BY (- (rt2.c0 COLLATE RTRIM)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE BINARY) NOT BETWEEN (((rt0.c3)LIKE(0.5625324519241849))) AND (0xffffffff8f9acd23)) FROM rt0, vt18; -- 0ms;
SELECT DISTINCT 0.39317263815993697 FROM rt1, vt18, rt2, rt0 WHERE (CASE WHEN (('-280218078')<<('쨠j%U,[')) THEN CASE '940930229'  WHEN 0.19927583649705205 THEN x'' WHEN '%d' THEN 'start of dayy4' WHEN 8.09349327E8 THEN x'' ELSE NULL END WHEN CAST('-1733902007' AS BLOB) THEN ((NULL)%(NULL)) WHEN 0.7371932979716213 THEN ((NULL) NOTNULL) END); -- 1ms;
SELECT CAST(((vt18.c0)||(rt0.c0)) AS INTEGER) FROM rt2, rt1 ORDER BY x'' ASC;SELECT DISTINCT CASE ((rt1.c1)||(rt0.c1))  WHEN ((rt2.c2) NOT NULL) THEN ((rt0.c0)IS(rt1.c2)) END, ((((rt1.c1)=(rt0.c1))) NOT BETWEEN (GROUP_CONCAT(rt2.c2)) AND (((rt2.c0)<<(rt0.c2)))), (((rt2.c1) BETWEEN (rt0.c1) AND (rt2.c2)) IN (CASE WHEN NULL THEN rt1.c2 WHEN vt18.c0 THEN vt18.c0 WHEN rt2.c0 THEN rt0.c2 ELSE vt18.c0 END)) FROM rt2, rt1 WHERE ((((((0x5d5b1ad8)!=('-615858279')), CASE NULL  WHEN 1877645811 THEN 'ᢱ' END, CAST(x'9235' AS INTEGER), ((-1487180821)!=(x'')), (((('nL')OR(x'')))AND(x''))))>=((((0.3613138265545768) IS FALSE), CASE WHEN '101242197' THEN 0xffffffff98a6c149 ELSE x'5c4a' END, CAST(x'' AS BLOB), (~ (0.9249783266462993)), ((((NULL)OR(0.6063801813814662)))AND(0Xffffffffdb4abf99))))));SELECT ((SQLITE_SOURCE_ID()) IS FALSE) FROM rt2, rt0, vt18, rt1 WHERE (CAST((NULL IN ('-1300782467')) AS NUMERIC)); -- 0ms;
SELECT ((rt2.c1) NOT BETWEEN (rt1.c2) AND (vt18.c0)) COLLATE RTRIM, ((CAST(rt0.c3 AS BLOB)) NOT NULL), UPPER(((vt18.c0) NOT NULL)) FROM rt1, rt2 WHERE ((((((('%᛾\뾙R4	')OR(x'')))AND(x''))) BETWEEN (((0.36692704852892233) NOT BETWEEN (NULL) AND (x''))) AND (CASE WHEN 'QabK' THEN NULL END))) ORDER BY CASE WHEN ((rt1.c1) IS FALSE) THEN LTRIM(rt0.c0, rt0.c3) END;SELECT ((0x724f6afd) IS FALSE) FROM vt18, rt0; -- 0ms;
SELECT ((CHANGES()) IS TRUE) FROM vt18, rt1; -- 0ms;
SELECT DISTINCT CAST((((NULL)) BETWEEN ((rt2.c0)) AND ((rt1.c2))) AS BLOB), ((TRIM(DISTINCT rt2.c0))LIKE(IFNULL(DISTINCT rt2.c0, rt0.c0))), ((CAST(rt1.c0 AS INTEGER)) BETWEEN (COUNT(*)) AND (8.09349327E8)) FROM rt1, vt18, rt0;SELECT ALL GROUP_CONCAT((((rt0.c4, vt18.c0, rt0.c2))==((rt0.c2, rt2.c2, rt0.c1))) COLLATE RTRIM) FROM vt18;SELECT (- (rt2.c1)) FROM vt18, rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT ((((((((rt0.c0)OR(rt1.c0)))OR(rt0.c4)))AND(rt0.c1)))AND(rt2.c1)) COLLATE RTRIM FROM rt1, vt18, rt0 ORDER BY ((((((rt1.c1)AND(rt0.c3)))OR(rt2.c2)))IS(((rt1.c0)||(rt0.c1)))) DESC  NULLS FIRST;SELECT DENSE_RANK() OVER () FROM rt2, rt1 ORDER BY ((((CASE WHEN rt0.c2 THEN vt18.c0 END)AND(vt18.c0)))OR(rt1.c2));SELECT ALL AVG(x'') FILTER(WHERE rt1.c1) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((vt18.c0 COLLATE RTRIM)*(((rt0.c4)>>(rt0.c0)))) FOLLOWING EXCLUDE NO OTHERS) FROM rt1, vt18;SELECT ALL ((CAST(rt0.c1 AS BLOB)) NOT BETWEEN (vt18.c0 COLLATE NOCASE) AND ((((rt1.c1)) NOT BETWEEN ((rt0.c4)) AND (('-621583388'))))) FROM vt18, rt1;SELECT ALL CASE WHEN MIN(rt1.c1) THEN ((rt1.c1)*(rt2.c2)) END FROM rt2, vt18;SELECT DISTINCT rt0.c2 FROM rt0, rt1 WHERE (CAST((NOT (0x55035578)) AS BLOB)); -- 0ms;
SELECT ALL ((CAST(vt18.c0 AS INTEGER))+(((rt0.c0)||(rt2.c2)))) FROM vt18, rt1, rt0, rt2 WHERE ((((((872312901))<((0.5432430090338871)))) BETWEEN (NULL) AND ((('')IS(' Tcmᚍ'))))); -- 1ms;
SELECT ALL ((json_valid(rt0.c1)) NOT BETWEEN (rt2.c0) AND (((rt2.c1) IS TRUE))), ((((rt0.c2 IN ())))<((CASE rt0.c4  WHEN rt2.c1 THEN rt0.c1 ELSE rt0.c2 END))), (((rt0.c3))<((x''))) FROM rt1, rt2, rt0; -- 0ms;
SELECT ((((rt1.c1)GLOB(rt0.c4)))<<((((rt1.c1, vt18.c0, vt18.c0))<=((rt0.c0, rt1.c1, rt0.c0))))) FROM rt2, vt18, rt0 WHERE (x'db7f');SELECT DISTINCT ((CASE WHEN rt0.c4 THEN rt2.c0 END) NOTNULL) FROM rt1, rt0, rt2, vt18 ORDER BY rt2.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN ()) FROM rt2 WHERE (((0.5862793514717396 COLLATE RTRIM) NOT NULL)) ORDER BY (((((((((((((~ (rt2.c2)))AND(((rt2.c0) IS FALSE))))AND(UPPER(DISTINCT 0.5862793514717396))))AND(rt2.c1)))OR(rt0.c4 COLLATE NOCASE)))OR(rt1.c0 COLLATE NOCASE)))AND(((vt18.c0) BETWEEN (rt2.c1) AND (rt0.c4)))) DESC  NULLS FIRST;SELECT DISTINCT x'' COLLATE BINARY FROM rt1, rt2, vt18, rt0; -- 0ms;
SELECT (((rt2.c0, rt2.c2, rt2.c0)) BETWEEN ((((rt2.c1)==(NULL)), rt1.c1 COLLATE RTRIM, (((rt0.c4))<>((rt2.c0))))) AND ((rt2.c0, ((rt2.c2)||(rt2.c1)), CAST(rt2.c0 AS REAL)))), CHANGES() COLLATE NOCASE, ((SUM(vt18.c0)) NOTNULL), (((rt2.c1 IN ()))IS(CAST(rt1.c1 AS NUMERIC))), ((AVG(rt0.c1))IS(((rt1.c0) BETWEEN (rt1.c2) AND (rt2.c1)))) FROM rt0, vt18, rt2;SELECT ALL NULL, LIKELIHOOD(rt0.c4, 0.2249900099514982), (((rt0.c2 IN ()))/((rt2.c1 IN ()))) FROM vt18, rt1, rt2, rt0; -- 0ms;
SELECT TOTAL(((rt1.c0) NOT BETWEEN (rt1.c2) AND (vt18.c0))) FROM rt1, rt2, vt18 WHERE ((- ((('榗7N_S,?i') NOT NULL)))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt18, rt1;SELECT ALL (((rt0.c3)) NOT BETWEEN (((((vt18.c0))>=((rt0.c2))))) AND ((((rt0.c2)LIKE(rt1.c0))))) FROM vt18, rt0, rt2, rt1 WHERE ((- (CASE WHEN x'' THEN 1.406256838E9 ELSE NULL END))); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c3  WHEN rt0.c4 THEN x'' END AS REAL) FROM rt2, rt0, vt18, rt1 WHERE (0.09452082630943626) GROUP BY NULL, (('-[') ISNULL), ((json_type(rt2.c1))>((+ (rt1.c0)))); -- 0ms;
SELECT DISTINCT ((AVG(0.13299629131847324))<<(((((rt0.c4)OR(rt1.c2)))AND(rt0.c4)))) FROM rt0, rt2;SELECT DISTINCT ((((rt0.c3 IN (rt0.c2, vt18.c0))))>=((CASE rt1.c0  WHEN rt2.c0 THEN rt0.c3 END))), TOTAL(CASE rt2.c1  WHEN vt18.c0 THEN rt1.c0 ELSE rt0.c0 END), NULL, 0X454791dc, (((rt0.c0, rt0.c4, rt0.c4)) NOT BETWEEN (((~ (rt1.c0)), ((rt1.c0)>(rt0.c1)), CASE WHEN rt0.c1 THEN rt1.c2 END)) AND ((((rt0.c2)&(rt1.c2)), rt0.c4 COLLATE BINARY, CASE WHEN rt0.c3 THEN x'' WHEN rt2.c2 THEN rt1.c0 WHEN rt0.c2 THEN rt2.c0 ELSE rt2.c1 END))), ROUND(((rt2.c1)/(rt0.c3)), rt1.c0 COLLATE NOCASE), TRIM(((((((((rt1.c0)OR(rt1.c0)))AND(rt0.c4)))AND(rt1.c2)))AND(rt2.c0)), rt1.c1) FROM rt2, rt0, vt18, rt1 WHERE (CASE WHEN '-205976644' THEN (NULL IN ()) ELSE ((x'')||('')) END); -- 1ms;
SELECT ((+ (rt1.c2)) IN ()) FROM rt0, vt18, rt1, rt2 WHERE (ABS(0.11842280699384267) COLLATE NOCASE) GROUP BY ((((rt0.c2)>>(rt0.c1))) BETWEEN ((rt0.c3 IN ())) AND ((- (rt0.c4)))) HAVING rt0.c3; -- 0ms;
SELECT DISTINCT (((((rt0.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt2.c1))))<<(rt1.c0)) FROM vt18, rt2;SELECT (((- (rt2.c0)))AND(((((((((rt0.c0)OR(rt1.c0)))OR(rt1.c2)))AND(vt18.c0)))AND(rt1.c1)))) FROM rt2, vt18 WHERE (json_valid(((('-''', '-1744672361', NULL))<=((0.7371932979716213, '1316402936', 0.7500255322315817))))) ORDER BY rt2.c1  NULLS FIRST;SELECT ALL (((((rt0.c4)) NOT BETWEEN ((rt2.c1)) AND ((vt18.c0)))) IS TRUE) FROM rt1 NOT INDEXED, vt18, rt2, rt0 WHERE (CAST(((0.904070177026376) NOT BETWEEN (0.9957709086262937) AND (1404383980)) AS BLOB)) LIMIT -1182343476; -- 0ms;
SELECT ((('872312901')) BETWEEN ((rt0.c0 COLLATE NOCASE)) AND (((+ (rt0.c0))))), ((((vt18.c0) IS FALSE)) ISNULL), (((- (NULL)))>=(CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt2.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) FROM rt2, vt18, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT rt0.c1, (((((- (rt1.c2)))OR(0Xffffffffcad1d562)))AND(rt0.c3 COLLATE BINARY)), ((rt0.c4 IN (rt2.c0)) IN ()) FROM rt1, rt2, vt18, rt0 WHERE (((CAST('37246045' AS NUMERIC)) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE NULLIF(DISTINCT rt0.c4, rt1.c0)  WHEN TYPEOF(rt0.c1) THEN (rt0.c4 IN ()) ELSE HEX(rt0.c0) END FROM rt0;SELECT DISTINCT CASE CAST(rt1.c1 AS TEXT)  WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt2.c2)>>(rt0.c0)) END FROM rt1, rt2, rt0, vt18 LIMIT -1806563215; -- 0ms;
SELECT DISTINCT CAST(rt2.c1 AS TEXT) COLLATE RTRIM FROM vt18 WHERE (CASE CASE WHEN NULL THEN -2018268666 ELSE 0.8352681583466595 END  WHEN '-1065057789' COLLATE BINARY THEN (+ (1556871854)) END);SELECT HEX(((((((((vt18.c0)OR(rt1.c1)))AND(rt1.c0)))OR(NULL)))AND(rt1.c2))) FROM vt18 WHERE (CAST((((x'c5ba', 0.8598620617874005, 0.9045383026164997))>=(('om哙뇻0櫽', '40187890', '.)t+'))) AS NUMERIC));SELECT DISTINCT ((TOTAL(rt2.c0)) BETWEEN (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE vt18.c0 END) AND ((((rt0.c3)) NOT BETWEEN ((rt1.c2)) AND ((rt0.c0))))), ((((rt0.c3))<>((rt1.c1))) IN ()), (((rt2.c0)) BETWEEN ((CASE WHEN 0.022151387931989674 THEN vt18.c0 ELSE rt2.c0 END)) AND (((rt0.c2 IN ('287580883'))))) FROM vt18;SELECT ALL (((rt2.c2)) NOT BETWEEN ((((((rt0.c1)AND('27')))OR(rt1.c2)))) AND ((0.24231199767757328))) FROM rt1 WHERE (0.1742359429177287);SELECT (('') ISNULL) COLLATE RTRIM FROM rt2, rt0; -- 0ms;
SELECT ALL (NULL IN (CAST('-201185412' AS INTEGER), (((x'b891', vt18.c0, rt1.c0))>((rt0.c0, rt2.c0, 0.24262945320603524))))) FROM vt18, rt2 WHERE ((((~ (NULL))) ISNULL)) ORDER BY ((rt1.c2) BETWEEN (((rt1.c1) IS TRUE)) AND (CAST(rt0.c0 AS REAL))) DESC;SELECT CASE rt1.c0  WHEN TOTAL(rt1.c0) THEN (((rt1.c0))!=((rt0.c3))) END FROM rt2;SELECT DISTINCT CASE CAST(rt0.c3 AS INTEGER)  WHEN ((rt2.c1) BETWEEN (rt1.c1) AND (x'')) THEN COUNT(*) ELSE COUNT(rt1.c1) END, (LOWER(DISTINCT rt2.c1) IN (CAST(rt0.c3 AS INTEGER))), CAST(((x'') NOT NULL) AS INTEGER) FROM vt18, rt1, rt2 WHERE ((~ (NULL)) COLLATE NOCASE) GROUP BY CASE WHEN (((rt0.c4))<((rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt1.c0 END WHEN ((rt0.c4) BETWEEN (rt0.c3) AND (rt1.c0)) THEN CASE rt0.c2  WHEN 0.7371932979716213 THEN 0x33fe7045 ELSE rt0.c3 END WHEN rt2.c0 THEN rt0.c3 END;SELECT DISTINCT CASE WHEN rt1.c1 THEN ((rt0.c0)%(rt2.c2)) END, ((rt0.c3)IS NOT(rt0.c3)) COLLATE NOCASE, (((rt0.c2)||(rt1.c2)) IN ()) FROM rt1, rt2 WHERE ((((((((((('p㋬1''')OR('1556871854')))AND(x'')))AND('_qFjTs<')))OR(x'129b')))*((- (-1.885680349E9)))));SELECT DISTINCT (((rt2.c0, rt0.c3, rt0.c2)) BETWEEN ((((1.4469221E9) NOT BETWEEN (rt0.c4) AND (rt1.c0)), CASE WHEN rt0.c2 THEN rt0.c0 WHEN 0x50288d22 THEN rt1.c0 WHEN rt2.c0 THEN rt2.c0 END, (((vt18.c0)) BETWEEN ((vt18.c0)) AND ((rt1.c0))))) AND ((AVG(x'6f17'), rt2.c2, (rt0.c3 IN ())))), ((((((('d	>_iI', rt1.c1, vt18.c0))>=((rt1.c0, rt0.c2, rt0.c2))))OR(CASE rt2.c0  WHEN rt0.c2 THEN rt0.c2 END)))OR(((rt2.c0)+(rt2.c0)))), CAST(NULL COLLATE RTRIM AS TEXT) FROM rt1, rt2, rt0;SELECT DISTINCT CAST((+ (rt1.c1)) AS INTEGER) FROM rt2, rt0, vt18, rt1; -- 0ms;
SELECT DISTINCT NULL FROM rt2, rt1, rt0, vt18; -- 0ms;
SELECT DISTINCT RANK() OVER (), COUNT(*), ((((0xffffffffef4c3622) IS FALSE))IS NOT(((((((((((((rt1.c0)OR(rt0.c4)))OR(rt0.c1)))AND(vt18.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(rt1.c2)))) FROM rt0, rt2 WHERE ('V.');SELECT ALL ((rt0.c4) NOT BETWEEN ((((rt0.c2))<=((rt0.c1)))) AND (COUNT(*))) FROM rt2;SELECT ((CAST('1114805398' AS NUMERIC)) BETWEEN (((rt0.c4)>=(rt1.c0))) AND (((vt18.c0) IS FALSE))), ((((((rt2.c2)OR(rt1.c0)))AND(vt18.c0))) BETWEEN ('-1150650314') AND ((rt2.c2 IN ()))), (((NOT (rt2.c2))) ISNULL), ((rt1.c2 COLLATE RTRIM) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 ELSE vt18.c0 END) AND (((rt0.c0)OR(rt1.c1)))), COUNT(CASE WHEN rt2.c0 THEN rt2.c2 END COLLATE NOCASE) OVER () FROM rt1, rt0 WHERE ((((NOT ('Z*'))) ISNULL));SELECT DISTINCT (((- (rt1.c2)))<<(CASE rt2.c2  WHEN rt1.c2 THEN 0.2737563750471471 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 END)), LIKELY(CAST(rt2.c2 AS INTEGER)), (NOT (((rt0.c3)AND(NULL)))) FROM rt1, vt18, rt2, rt0 WHERE (json_insert((('') NOT NULL), (NOT ('tjj4냏 ᣎ')), ((((0.5910420866207944)AND(NULL)))OR(x'a993')))) ORDER BY (((((((rt2.c0, rt1.c0, rt1.c0))<((rt2.c2, rt1.c0, rt2.c2))))OR(CASE rt0.c3  WHEN rt2.c0 THEN rt1.c1 END)))AND((rt2.c1 IN ())))  NULLS FIRST, CASE WHEN rt0.c3 THEN ((((((((0.49536937405865766)OR(rt1.c2)))OR(vt18.c0)))AND(rt1.c0)))OR(rt1.c2)) ELSE (~ (x'abd2')) END  NULLS FIRST, ((((vt18.c0)+(rt1.c2)))==(rt2.c1 COLLATE RTRIM)) DESC;SELECT (((NULL)) BETWEEN ((((rt2.c1)%(rt0.c0)))) AND ((TIME(x'', x'', rt2.c0, rt1.c0, rt0.c1)))) FROM vt18 GROUP BY ((((((((CASE rt0.c4  WHEN vt18.c0 THEN rt0.c1 ELSE rt1.c0 END)AND(NULLIF(DISTINCT x'', NULL))))OR(((rt2.c0) BETWEEN (rt0.c1) AND (rt1.c0)))))OR(((rt0.c1) IS TRUE))))OR(ABS(rt1.c0))) HAVING ((((vt18.c0)<=(rt0.c2)))>=(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c3)))) LIMIT 1719895930 OFFSET -1653169090;SELECT DISTINCT LAST_VALUE(((vt18.c0) ISNULL)) OVER ( GROUPS (((rt0.c2)) BETWEEN ((CASE vt18.c0  WHEN rt2.c1 THEN rt2.c1 END)) AND (((+ (rt2.c0))))) PRECEDING) FROM vt18, rt2, rt0; -- 0ms;
SELECT DISTINCT rt2.c2 FROM rt2, rt1 WHERE (CASE x'' COLLATE NOCASE  WHEN CAST(0.19193261938085815 AS NUMERIC) THEN ('-383411581' IN (NULL)) ELSE (~ (0.5625324519241849)) END); -- 0ms;
SELECT DISTINCT TYPEOF((((rt0.c0))<>((rt2.c2)))) FROM rt1 WHERE ((x'' IN ((+ (NULL)))));SELECT DISTINCT ((((CASE WHEN rt0.c0 THEN vt18.c0 ELSE rt1.c1 END)OR(((rt0.c4)<<(NULL)))))AND(COUNT(rt0.c3))) FROM rt0, vt18;SELECT ALL (((((rt0.c1))==((rt2.c2))))=(((vt18.c0)||(0.5984468740180393)))) FROM rt1, vt18, rt2, rt0; -- 0ms;
SELECT DISTINCT MIN(CASE rt1.c2  WHEN rt1.c2 THEN rt2.c0 WHEN rt0.c4 THEN NULL WHEN vt18.c0 THEN rt1.c1 END) COLLATE BINARY FROM rt0 WHERE ('zM') LIMIT 809349327;SELECT ALL ((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) COLLATE BINARY FROM rt0 WHERE (CASE WHEN (('0.4699724926137506')IS NOT('')) THEN ((NULL) ISNULL) ELSE ((-6.21583388E8)==(x'8ccd')) END);SELECT DISTINCT CASE TRIM(0.937752892950232, rt0.c4)  WHEN rt2.c2 THEN TYPEOF(rt0.c3) WHEN ((rt2.c1)>>(rt1.c0)) THEN rt0.c1 COLLATE NOCASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND ('-669748965')) THEN rt2.c0 COLLATE RTRIM ELSE LOWER(rt2.c2) END FROM rt0, rt1, vt18 LIMIT -410406459;SELECT NTILE(UPPER(DISTINCT (+ (rt2.c1)))) OVER () FROM rt2, vt18, rt1, rt0; -- 1ms;
SELECT ALL COUNT(rt1.c2) FROM vt18, rt0 WHERE (((((((x'')OR(0.13638943149630223)))AND(NULL)))-((NOT (0.5291390814003241)))));SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((((rt0.c3)AND(rt1.c1)))) AND (((((rt0.c2))=((rt0.c1)))))) FROM vt18;SELECT ((CAST(rt1.c2 AS INTEGER))>((((((((('(\n')OR(rt2.c1)))OR(rt0.c1)))AND(-1406949064)))AND(rt0.c3)))), COUNT((NOT (rt0.c4))) OVER (), x'' FROM rt0, vt18, rt1, rt2 WHERE (((NULL) NOT BETWEEN (x'') AND (x'')) COLLATE BINARY); -- 0ms;
SELECT ')8r櫽&\n0g' FROM rt1 WHERE (UNICODE(CAST(NULL AS INTEGER))); -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE RTRIM) NOT NULL), MAX((+ (rt0.c3))), CHAR(((rt2.c0) BETWEEN (rt0.c2) AND (rt1.c0))) FROM rt2, rt0, vt18, rt1; -- 0ms;
SELECT ALL rt0.c2 FROM rt1, rt0, vt18, rt2 WHERE (((json_extract(x'b52b', NULL))>>(HEX('')))) LIMIT 1936520112;SELECT DISTINCT (('72279051') BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c3 THEN rt0.c1 END)) FROM rt0, vt18, rt2 WHERE (((809349327)>(x'371c')) COLLATE NOCASE); -- 0ms;
SELECT ALL (CAST(rt2.c1 AS BLOB) IN ()) FROM rt1 FULL OUTER JOIN rt2 ON (((rt0.c1, rt2.c1, rt0.c4)) BETWEEN ((((('40187890'))<>((rt0.c1))), CASE WHEN rt0.c2 THEN rt2.c0 END, ((rt0.c4) NOTNULL))) AND ((CAST(rt0.c1 AS NUMERIC), rt2.c2 COLLATE RTRIM, NULL))) INNER JOIN vt18 ON (((~ (rt2.c0)))%(((rt1.c0)*(rt0.c1)))) INNER JOIN rt0 ON ((CASE rt0.c3  WHEN rt0.c4 THEN rt2.c2 ELSE rt2.c1 END)%((((x''))=((rt1.c1))))) WHERE (((x'') NOT BETWEEN ('%Aജ枻艈E') AND (',')) COLLATE RTRIM);SELECT DISTINCT ((((rt1.c1)==(rt0.c3)))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c4)))), SUM((+ (vt18.c0))), COUNT(((((((((rt2.c0)OR(rt1.c2)))OR(x'916b')))AND(rt0.c1)))AND(rt0.c2))) OVER () FROM rt1 UNION SELECT DISTINCT ((NULL)<>(CAST(rt0.c0 AS REAL))), ((CASE rt2.c0  WHEN rt0.c0 THEN rt1.c0 ELSE rt1.c0 END) NOT BETWEEN (CASE WHEN rt2.c2 THEN rt0.c0 END) AND (((rt2.c1)/(rt2.c2)))), TRIM(DISTINCT rt0.c4) COLLATE RTRIM FROM rt2, rt1 WHERE ((((((0x3d9c6969)) NOT BETWEEN ((0X4a3e7978)) AND (('-1885680349')))) ISNULL));SELECT DISTINCT ((CAST(rt1.c2 AS TEXT))/(COUNT(*))) FROM rt1, rt0 LIMIT -621583388 OFFSET -1346798696; -- 0ms;
SELECT DISTINCT (COALESCE(rt0.c3, rt1.c1, rt2.c2, rt2.c2) IN ()) FROM rt2, rt0, rt1; -- 0ms;
SELECT SQLITE_SOURCE_ID(), UPPER(TIME(rt0.c4, rt2.c0, rt1.c2)), x'9b48' COLLATE BINARY, (NOT (((-1401929210)=(rt0.c4)))), ((((rt0.c3)OR(rt0.c2)))!=(CAST(rt1.c2 AS TEXT))) FROM rt1, rt0 WHERE ((('1556871854')>=((((x'8a93')) BETWEEN ((NULL)) AND ((x''))))));SELECT ((CASE rt0.c0  WHEN rt0.c1 THEN rt1.c2 END)<(682127047)), (~ (json_patch(rt0.c4, rt2.c1))), (- (CASE rt2.c2  WHEN rt2.c0 THEN -763353722 END)) FROM rt0, rt1, rt2 NOT INDEXED, vt18; -- 0ms;
SELECT DISTINCT ((((rt1.c2)>=(rt2.c0))) BETWEEN ((((rt1.c1, rt0.c3, rt0.c2)) BETWEEN ((rt2.c1, rt0.c4, rt0.c0)) AND ((rt2.c1, rt0.c3, rt2.c0)))) AND (CASE rt0.c1  WHEN NULL THEN rt1.c0 WHEN rt2.c2 THEN rt1.c2 WHEN rt0.c3 THEN rt1.c2 ELSE rt1.c1 END)) FROM rt1, vt18, rt2, rt0 ORDER BY (NOT (((rt1.c2) ISNULL)))  NULLS FIRST, ((((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt2.c2))) NOT BETWEEN (((((rt1.c0)OR(rt1.c1)))OR(rt0.c0))) AND ('1245608312')) DESC  NULLS LAST, (((rt1.c2, x'2962', rt0.c3)) NOT BETWEEN ((rt0.c2 COLLATE NOCASE, (((x'817b', rt0.c0, rt2.c1)) NOT BETWEEN ((rt2.c0, x'', rt2.c2)) AND ((rt2.c1, 0.8263950758670736, rt0.c1))), (((rt0.c4))==((rt0.c4))))) AND ((((rt0.c3) IS FALSE), CAST(rt2.c1 AS REAL), rt1.c2 COLLATE BINARY))) ASC  NULLS LAST; -- 0ms;
SELECT ALL RANK() OVER () FROM rt0, vt18, rt2 WHERE (((((0.7097736487873263) IS TRUE))IS(-1.885680349E9))) ORDER BY ((((rt1.c1)<>(rt0.c1))) NOTNULL)  NULLS FIRST;SELECT ALL CAST(((rt0.c4)>(rt0.c4)) AS INTEGER) FROM rt2, vt18, rt0, rt1 WHERE ((((((- ('864666994')))AND(x'd272' COLLATE RTRIM)))OR((- (NULL))))); -- 0ms;
SELECT ALL CAST(((rt2.c2) NOTNULL) AS TEXT), (((((((rt0.c3)AND(rt0.c4)))AND(rt0.c1))))<>((((rt0.c2)>=(rt0.c3))))), 0x35edda93, ((rt2.c2)>>(rt0.c0)) COLLATE RTRIM, ((((rt0.c0) NOT NULL)) BETWEEN (rt1.c1 COLLATE NOCASE) AND ((((rt0.c1, rt2.c1, rt2.c0)) NOT BETWEEN ((rt2.c1, rt1.c0, vt18.c0)) AND ((rt0.c1, rt0.c3, rt2.c0))))) FROM rt1, rt0, rt2;SELECT DISTINCT (~ ('')) FROM vt18, rt1, rt0 NOT INDEXED WHERE (x'0222'); -- 0ms;
SELECT CAST(CASE vt18.c0  WHEN vt18.c0 THEN rt2.c2 ELSE vt18.c0 END AS BLOB) FROM rt1, rt2 WHERE (COALESCE(((('\n⾡|?a')) BETWEEN ((x'')) AND (('}ys櫽fb\	'))), (NULL IN ()), 0.30895598479223985, ((('')) BETWEEN ((0.31844386891374044)) AND ((x'')))));SELECT DISTINCT ((((rt0.c1) IS TRUE))IS NOT((((vt18.c0, rt2.c2, rt2.c1)) BETWEEN ((rt2.c0, rt1.c1, rt2.c0)) AND ((rt0.c0, rt2.c2, rt1.c1))))) FROM vt18;SELECT ALL CAST(rt1.c1 AS INTEGER) FROM rt2 WHERE (((0.6907738825192672 IN ()) IN ()));SELECT DISTINCT TRIM(((rt1.c1)=(rt0.c0))), (rt1.c0 IN ()), (~ (TYPEOF(rt0.c1))), GROUP_CONCAT(CAST(rt0.c3 AS INTEGER)), '' FROM rt2;SELECT DISTINCT CAST(rt1.c0 COLLATE BINARY AS REAL), NULL, ((NULL) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (((rt1.c2)>(rt0.c2)))) FROM rt1 WHERE (((((0Xffffffff94524f6e)%(NULL)))/(((x'') NOT NULL)))) LIMIT -1612707921;SELECT DISTINCT NULL FROM vt18, rt2, rt1 WHERE ((((((NULL))>((40060998))))*(((0.6086267330911087) IS TRUE)))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), 0.022151387931989674, CASE ((rt1.c0)LIKE(rt1.c1))  WHEN (~ (rt2.c1)) THEN (NOT (rt0.c0)) ELSE (NOT (rt0.c0)) END FROM vt18 WHERE (((']EiKO쓂^ji')>('fZ')) COLLATE NOCASE);SELECT ALL rt0.c2 FROM rt1, rt0, rt2 WHERE (LIKELY(DISTINCT CAST(NULL AS INTEGER))); -- 0ms;
SELECT ALL RANK() OVER () FROM vt18, rt2, rt1, rt0 WHERE (json(TRIM(DISTINCT NULL))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)>=(NULL)))>>(GROUP_CONCAT(rt0.c1))) FROM vt18, rt0 GROUP BY rt0.c0; -- 0ms;
SELECT ((((rt2.c1) NOT BETWEEN (rt2.c0) AND (rt0.c3)))OR((~ (rt0.c0)))), ((CASE WHEN rt0.c4 THEN rt2.c2 WHEN rt0.c0 THEN rt0.c0 WHEN vt18.c0 THEN rt1.c1 ELSE rt2.c0 END)>>(SUM('-1346798696'))), ((((NULL)<(rt0.c0))) NOT NULL) FROM vt18, rt1, rt0, rt2 WHERE (((((NULL)) NOT BETWEEN ((0.5605435999062354)) AND (('-1627100923'))) IN (((x'0849') BETWEEN (NULL) AND ('vL<'))))); -- 0ms;
SELECT ALL ((rt0.c1)/(CASE rt2.c0  WHEN rt0.c0 THEN rt1.c0 END)), JULIANDAY(CAST(rt0.c0 AS INTEGER), TOTAL(rt0.c2), ((rt1.c2)*(vt18.c0))), SQLITE_COMPILEOPTION_USED(((0.3391736733614088) NOT BETWEEN (rt0.c3) AND (x''))) FROM vt18, rt2;SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt2, vt18 WHERE ((~ (((0.8028955123083227) NOT BETWEEN (x'') AND (x'1a28'))))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN rt1.c0 END COLLATE BINARY, CAST(0.9476091117496173 AS NUMERIC), CAST(CASE WHEN rt0.c4 THEN rt0.c3 WHEN 0.2797694254412353 THEN rt1.c2 WHEN rt1.c2 THEN rt2.c0 END AS REAL) FROM rt1, rt2, rt0, vt18 WHERE (IFNULL(((0.06254205698781701) NOTNULL), CAST('-1419020394' AS REAL))) GROUP BY (((~ (rt0.c0)))/(CASE WHEN rt2.c1 THEN rt1.c0 ELSE rt0.c4 END)) HAVING MAX(CASE WHEN '-1065057789' THEN rt1.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 ELSE 0X62816a96 END, CAST(vt18.c0 AS TEXT)) ORDER BY rt2.c2 COLLATE RTRIM ASC  NULLS FIRST; -- 0ms;
SELECT ALL GROUP_CONCAT(TOTAL(rt0.c0) COLLATE BINARY) FROM rt2 WHERE (((0.19926965357019844 COLLATE NOCASE)||(((x'f08b')IS NOT(7.2279051E7))))) LIMIT 744316336 OFFSET 1894747221;SELECT ALL rt1.c2, CASE WHEN rt0.c4 THEN ((rt1.c0)<(rt0.c3)) WHEN rt1.c2 THEN (- (rt0.c3)) WHEN rt1.c1 THEN x'' END, 0.8680480704097 FROM rt0, vt18 WHERE (1.34483485E9);SELECT ALL ((((rt0.c1)>=(rt1.c2)))GLOB(CASE WHEN rt1.c1 THEN x'459d5380' WHEN rt2.c2 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c1 ELSE rt2.c1 END)), x'', (rt2.c2 COLLATE NOCASE IN ()) FROM rt2, rt1 WHERE (CASE ((x'') NOT BETWEEN (x'') AND (0.13551801204799063))  WHEN ((-947174714)|(872312901)) THEN CAST(x'c90646290dc5' AS NUMERIC) ELSE -1.300782467E9 COLLATE NOCASE END);SELECT ALL GROUP_CONCAT(((rt1.c2)>(rt2.c1))) FROM rt2 FULL OUTER JOIN rt1 ON ((((vt18.c0)OR(rt0.c0))) BETWEEN (NULL) AND (LOWER(DISTINCT rt0.c3)));SELECT CAST(HEX(DISTINCT rt2.c0) AS TEXT) FROM rt2; -- 0ms;
SELECT ALL (~ ((rt2.c1 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))>>(((rt0.c2) IS TRUE))) FROM vt18, rt2, rt1 WHERE ((((((0Xffffffffe99d582a, 0.9247647711498816, x'402a'))!=((0.7208463031504175, '-669748965', NULL))))<=((((610002427))>=((0.2072729229438659))))));SELECT ALL ((COUNT(rt1.c2)) NOT BETWEEN (((rt0.c1)<=(rt0.c0))) AND (((rt2.c2) ISNULL))) FROM vt18, rt2, rt1;SELECT DISTINCT CASE WHEN rt0.c2 COLLATE RTRIM THEN rt0.c4 END FROM rt2, rt1, vt18;SELECT DISTINCT ((rt1.c1) IS TRUE) COLLATE RTRIM FROM rt2, rt0, rt1, vt18; -- 0ms;
SELECT DISTINCT CAST(COUNT(vt18.c0) AS NUMERIC) FROM vt18, rt0, rt2 WHERE (SQLITE_SOURCE_ID() COLLATE NOCASE) LIMIT 713302580; -- 0ms;
SELECT DISTINCT (NOT (((((rt0.c3)AND(rt1.c0)))AND(rt2.c2)))) FROM rt1, rt0, vt18, rt2 WHERE ((((((x'e03d')LIKE(x''))))==((TOTAL_CHANGES())))); -- 0ms;
SELECT DISTINCT COUNT(((vt18.c0)/(rt1.c2))) OVER ( ORDER BY (0.15602883528946299 IN (ROUND(rt0.c3, rt2.c2))) DESC  NULLS LAST) FROM vt18, rt0 ORDER BY '287580883'  NULLS FIRST;SELECT LIKELIHOOD(((rt1.c1)GLOB(rt2.c2)), 0.41234978102758624) FROM rt0, rt2;SELECT DISTINCT ((((rt2.c1)-(rt0.c0)))-((NOT (rt0.c3)))) FROM rt2 WHERE ((((('')<=(x'ca0d')))*(((((((((-4.10406459E8)AND('626711788')))AND(NULL)))AND('){')))AND(654053512)))));SELECT DISTINCT '-0.0' FROM rt2 GROUP BY ((0.1655357716406305) NOTNULL), rt2.c0, (NOT (CAST(vt18.c0 AS INTEGER)));SELECT DISTINCT ((((((((((rt1.c1) ISNULL))AND(((rt0.c0)&(rt0.c4)))))AND(x'')))AND(LIKELIHOOD(rt0.c3, 0.7440485252310253))))OR((((rt0.c2))>=((rt2.c1))))), ((((((rt0.c1)LIKE(rt2.c2)))OR(CASE rt0.c4  WHEN rt0.c0 THEN rt2.c2 WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c0 THEN rt2.c2 END)))OR(((rt2.c0)&(rt0.c2)))), ((((vt18.c0)/(rt1.c1)))GLOB((+ (rt0.c3)))), ((rt0.c2 COLLATE BINARY) NOTNULL), SUM((~ (x'c0c3'))) FROM vt18, rt0, rt1 WHERE (('' IN (((0Xffffffffe7b49601) NOTNULL))));SELECT (TOTAL(rt2.c0) IN (CASE WHEN rt1.c1 THEN vt18.c0 ELSE rt2.c1 END, rt0.c0)) FROM rt2, rt0, vt18 WHERE (((((('nz/+?' IN ()))OR(CAST(0.8579760283386411 AS NUMERIC))))AND(((0.917192041664937) ISNULL)))) ORDER BY (((rt1.c2 IN ()))==(CASE WHEN rt0.c2 THEN rt0.c3 END)) ASC;SELECT DISTINCT LIKELIHOOD(0.04404624119497602, 0.6097669750865291) FROM rt1 WHERE (((((685581333)/(0.6396357424465234)))>=(((x'29e9')>=(296499301))))); -- 1ms;
SELECT (((+ (rt0.c3)))<=(CAST(rt2.c1 AS TEXT))) FROM rt2, rt1, rt0, vt18 WHERE (0.5432430090338871); -- 0ms;
SELECT (((0X50288d22, rt2.c0, rt0.c2)) BETWEEN ((vt18.c0, rt0.c0, (((rt0.c3)) NOT BETWEEN ((rt1.c0)) AND ((rt1.c2))))) AND ((((rt2.c2) NOT NULL), ((-319242891) NOTNULL), CASE WHEN vt18.c0 THEN 69538719 ELSE rt2.c0 END))) FROM vt18, rt0, rt2 LIMIT -1764483933;SELECT (x'c972' IN (0.1249203410173414, ((rt0.c3)IS NOT(rt1.c2)))) FROM rt0 WHERE (((NULL) BETWEEN (((NULL)-('start of month'))) AND (((0.33439129709324367) ISNULL))));SELECT CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.48115819399222015) AS TEXT) FROM rt0, rt1, vt18 WHERE (((1.71989593E9)>(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt2 WHERE (((RTRIM(NULL)) BETWEEN (x'e221') AND (x'' COLLATE NOCASE)));SELECT ALL PERCENT_RANK() OVER () FROM rt2, rt0, rt1 WHERE (UNLIKELY(CASE NULL  WHEN x'' THEN NULL ELSE '' END)) GROUP BY ((CASE rt2.c0  WHEN rt0.c1 THEN 'NaN' END)==(((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c2)))), ((((rt1.c1)<=(rt1.c1))) ISNULL), CASE WHEN (((rt1.c0, rt1.c0, NULL)) BETWEEN ((rt2.c2, rt2.c0, rt1.c1)) AND ((vt18.c0, rt0.c3, vt18.c0))) THEN NULL END;SELECT DISTINCT TOTAL(((vt18.c0) NOT NULL)) OVER () FROM rt0 WHERE ((((('mA夲gT')+('-947174714'))) BETWEEN (IFNULL(DISTINCT NULL, x'')) AND (((NULL) IS FALSE))));SELECT DISTINCT ((((vt18.c0) ISNULL)) NOT BETWEEN ((rt2.c2 IN ())) AND (((rt0.c4) NOT BETWEEN (vt18.c0) AND (rt2.c2)))) FROM rt2, rt0, rt1, vt18; -- 0ms;
SELECT DISTINCT ((rt0.c0)>(rt2.c0)) COLLATE BINARY COLLATE NOCASE FROM rt0, vt18, rt1;SELECT ((CAST(rt0.c3 AS INTEGER))=(((rt2.c0)OR(vt18.c0)))), ((((((rt0.c1) BETWEEN (rt0.c3) AND ('')))AND(CASE rt1.c1  WHEN rt0.c0 THEN 0xffffffffaa139ac9 ELSE rt0.c4 END)))AND(MAX(rt0.c4))), CASE '!&_nI'  WHEN (((vt18.c0, rt1.c1, rt0.c3)) BETWEEN ((rt0.c1, rt2.c2, rt2.c0)) AND ((rt0.c3, rt2.c0, vt18.c0))) THEN ((rt0.c4)OR(rt2.c2)) WHEN CASE WHEN rt0.c4 THEN rt2.c0 END THEN (((rt2.c0))=((rt0.c3))) WHEN x'' THEN ((rt0.c2)==(rt1.c1)) END FROM vt18, rt2, rt0, rt1 GROUP BY vt18.c0, '2137430568', CAST((NOT (rt1.c1)) AS REAL) HAVING LENGTH(((rt0.c0)<=(rt0.c3))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(rt0.c1) OVER ( ORDER BY rt1.c2 ASC  NULLS LAST), COUNT(*), GROUP_CONCAT(COALESCE(DISTINCT rt0.c2, rt0.c3)), (- (vt18.c0)), MIN(((rt2.c1)<<(rt0.c1))) COLLATE RTRIM FROM vt18, rt0, rt1, rt2; -- 0ms;
SELECT rt1.c1, (((rt1.c1 COLLATE BINARY))<=((((rt0.c2)<=(rt1.c1))))), (((rt2.c2) BETWEEN (rt0.c3) AND (rt1.c0)) IN ()), rt0.c4 COLLATE RTRIM, COUNT(((vt18.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) OVER () FROM rt2, rt1 WHERE (((97127042)IS NOT('' COLLATE NOCASE)));SELECT DISTINCT CAST((+ (x'')) AS BLOB), UNLIKELY(CASE WHEN rt1.c0 THEN 0xffffffffbfef0b98 ELSE rt0.c4 END), (((0.9088060342298204)+(rt0.c1)) IN ()) FROM vt18, rt0, rt1, rt2 WHERE (((((-1.300782467E9)&(x'34c5')))|(((x'c299') NOT NULL)))); -- 0ms;
SELECT IFNULL((((rt2.c2)) BETWEEN ((rt0.c2)) AND ((rt2.c0))), ((((rt0.c4)OR(rt0.c0)))OR(rt2.c0))) FROM rt0, vt18, rt2, rt1; -- 0ms;
SELECT (rt0.c4 COLLATE NOCASE IN ()) FROM rt1, rt0, rt2, vt18 WHERE (CAST('400683262' AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c1 THEN 0.9594838198103516 END)OR(CASE WHEN vt18.c0 THEN rt0.c4 ELSE rt2.c0 END)) FROM rt2, rt1 WHERE ((((((x'', NULL, NULL, '-1744672361', 0.15602883528946299))<((0.41436671373333755, 1306948680, '171537233', x'', NULL))))IS((- (0.0788927318113044))))) GROUP BY LIKE(((rt1.c2)==(rt2.c1)), rt1.c1 COLLATE RTRIM);SELECT ALL (rt0.c2 IN ()) COLLATE NOCASE, COUNT(CAST(vt18.c0 AS TEXT)) COLLATE BINARY, rt0.c4 FROM rt2, vt18 WHERE ((((('~0')+(0Xffffffffcd24ef09)))>(x'c4ee' COLLATE RTRIM))) ORDER BY (NOT (((rt0.c4)=(rt0.c3)))) DESC  NULLS FIRST;SELECT DISTINCT rt0.c4 FROM rt0, rt1 LIMIT -1686449310 OFFSET -705374364; -- 0ms;
SELECT ALL CAST('' AS INTEGER), ((((((vt18.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))AND(SUM(rt1.c2))))OR(((rt2.c1)+(rt1.c1)))), (((((rt0.c4 IN (rt1.c2)))AND((((rt2.c1))>=((rt0.c3))))))AND(((rt2.c1) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) FROM rt1, vt18, rt0;SELECT ALL ((((rt0.c4)) BETWEEN ((rt2.c0)) AND ((rt2.c1))) IN ()) FROM rt2 CROSS JOIN vt18 ON (('-769114177' IN ()) IN ()) FULL OUTER JOIN rt1 ON ((((rt0.c3)>(rt2.c1))) BETWEEN (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt1.c0))) AND (rt2.c2 COLLATE NOCASE)) RIGHT OUTER JOIN rt0 ON (- (((rt0.c2)-(rt1.c2)))) WHERE ((- (CAST(290197350 AS BLOB)))); -- 1ms;
SELECT DISTINCT (((((rt0.c4) ISNULL)))<((COALESCE(DISTINCT vt18.c0, rt1.c0)))), (NOT (rt0.c2 COLLATE NOCASE)), (((((rt0.c0, rt1.c1, vt18.c0))==(('⭋', rt0.c4, rt1.c2))))GLOB(CASE WHEN rt0.c2 THEN rt1.c0 ELSE rt1.c1 END)) FROM rt2 WHERE (((((-29603059)OR('-351816188')))AND(NULL)) COLLATE RTRIM);SELECT (~ (rt2.c0)) COLLATE NOCASE FROM rt1, rt2 WHERE (((((('.dC## ', 0.8599488560220865, '1601069622')) NOT BETWEEN ((0.8508502444002777, NULL, '-1735186223')) AND ((x'', x'baea', NULL)))) NOT BETWEEN ((NULL IN (x'0c77'))) AND (0.24262945320603524))); -- 0ms;
SELECT DISTINCT CASE WHEN rt2.c1 THEN rt0.c3 WHEN rt0.c4 THEN vt18.c0 WHEN rt0.c2 THEN rt2.c0 END COLLATE RTRIM FROM rt1 WHERE (x'');SELECT DISTINCT GROUP_CONCAT((((rt2.c2))==((rt2.c1)))) OVER () FROM rt1, rt0, rt2; -- 0ms;
SELECT ALL CASE ((((rt0.c1)OR(vt18.c0)))OR(rt1.c1))  WHEN CAST(vt18.c0 AS INTEGER) THEN CAST(rt0.c2 AS INTEGER) ELSE ((rt1.c1) NOT NULL) END, NTH_VALUE(((((((vt18.c0)AND(rt0.c1)))OR(rt0.c3)))IS NOT(((vt18.c0) NOT NULL))), (((((rt0.c4, rt0.c0, rt0.c1, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c4, vt18.c0, rt0.c2, rt0.c2)) AND ((vt18.c0, rt0.c0, rt0.c0, rt0.c4, rt0.c4))))IS NOT(((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c4))))) OVER (), ((x'')%(CASE rt1.c2  WHEN rt0.c3 THEN rt1.c2 END)) FROM rt0, vt18 WHERE ((((x'' IN ())) ISNULL));SELECT ALL ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c3)) COLLATE RTRIM FROM rt1, vt18, rt2, rt0; -- 0ms;
SELECT CAST(NULL AS TEXT) FROM rt1, rt0 WHERE (CASE WHEN ((('', x'b8c03d119515', '-1653169090'))<>((NULL, x'2719', 0.1826849928021439))) THEN (('2127366409') BETWEEN (x'') AND ('1983023871')) WHEN (('.o') NOTNULL) THEN 'O-' COLLATE BINARY WHEN (~ ('*\')) THEN (('-1806563215') IS FALSE) END); -- 0ms;
SELECT ((((UNLIKELY('%p2'))AND(((rt1.c1)/(rt0.c4)))))OR(CASE WHEN x'cda5' THEN rt1.c1 ELSE vt18.c0 END)) FROM rt2 WHERE (((('' IN ())) BETWEEN (((NULL) ISNULL)) AND ((('\r&K.*') BETWEEN (NULL) AND (x'5c9177a35a95')))));SELECT DISTINCT rt1.c0, ((TOTAL(rt2.c2))*(((rt0.c0)==(vt18.c0)))), vt18.c0 FROM rt0 NOT INDEXED, vt18, rt1, rt2; -- 0ms;
SELECT DISTINCT COALESCE(((rt2.c2) ISNULL), (rt2.c0 IN ())) FROM vt18 WHERE (((('1877645811' IN ()))>>(CAST(NULL AS TEXT))));SELECT (((rt0.c0)OR(rt0.c2)) IN ()) FROM vt18; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt2 NOT INDEXED, rt1 LIMIT 1871464475 OFFSET 287580883; -- 0ms;
SELECT DISTINCT rt2.c1, rt0.c0, (NOT (((rt2.c1) NOT BETWEEN (rt1.c1) AND (rt2.c0)))) FROM rt1, rt2 WHERE (TRIM(DISTINCT 0x6b604d9f COLLATE NOCASE, ((0.36993614536559116)-(0.05153509254632682))));SELECT ((((((rt1.c0)AND(rt0.c0)))OR(rt0.c1))) ISNULL) FROM rt0 ORDER BY 0.8761052172562491 DESC  NULLS FIRST;SELECT DISTINCT 0.6773981043278886 FROM vt18, rt2 WHERE ((CASE x'104b'  WHEN 'MS, HlX鄪' THEN 'x筧' WHEN 0.04594706341322574 THEN x'' WHEN NULL THEN 0.34540033946490756 WHEN 0.43358000016566645 THEN 'A{P4g(eM' WHEN '0.8680480704097' THEN 0.6578863903810307 END IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c1)-(rt0.c0)) IN (LIKELY(DISTINCT rt0.c4))) FROM rt2;SELECT ALL (+ ((NOT (rt2.c1)))) FROM vt18, rt0, rt2, rt1 WHERE (CASE ((x'') NOT NULL)  WHEN ((0.7759114536601615) NOT BETWEEN (NULL) AND (NULL)) THEN ((NULL) BETWEEN (NULL) AND (0.599696247203222)) END) GROUP BY (((- (rt2.c0))) BETWEEN (CAST(rt2.c1 AS BLOB)) AND (((((rt1.c1)AND(rt1.c1)))OR(rt2.c1)))) HAVING ((((x'')AND(((rt2.c2)IS(rt2.c0)))))OR(rt1.c1 COLLATE NOCASE)) ORDER BY CAST(rt0.c0 AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT ALL ((((TOTAL(rt2.c0))AND(((0.3927853752279218) NOT BETWEEN (rt0.c2) AND (rt0.c3)))))AND(TOTAL(x'4f9bc85b'))) FROM rt0, vt18, rt1, rt2 WHERE ((((('1640081987')OR('34170854')))AND(x'')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT AVG(((((((((rt1.c2)AND(rt1.c0)))AND(rt2.c2)))OR(vt18.c0)))AND(rt1.c1))) OVER (), CASE CASE rt0.c2  WHEN rt2.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt2.c0 WHEN rt1.c2 THEN rt0.c3 END  WHEN TOTAL(rt2.c2) THEN (NOT (rt2.c0)) END, (((((rt2.c1)) BETWEEN ((rt1.c2)) AND ((rt1.c1)))) IS TRUE), json_type(((((rt1.c1)OR(rt1.c0)))OR(rt0.c3))), NTH_VALUE((((-5.03524825E8)) NOT BETWEEN ((rt1.c1 COLLATE NOCASE)) AND (((vt18.c0 IN ())))), CASE WHEN x'' THEN ((rt2.c0)%(rt1.c0)) WHEN ((rt1.c1)OR(rt2.c1)) THEN x'' COLLATE RTRIM WHEN ((((rt2.c2)OR(rt2.c0)))OR(vt18.c0)) THEN ((rt2.c2) BETWEEN (rt2.c1) AND (rt2.c2)) END) OVER () FROM rt1, rt2, vt18 GROUP BY (- ((((rt0.c3)) BETWEEN ((vt18.c0)) AND ((rt1.c2))))) HAVING ((rt0.c4)GLOB(CASE WHEN rt1.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt2.c2 THEN rt0.c0 END));SELECT ALL CASE ((rt2.c1) BETWEEN (0.08469113933709838) AND ('-1653169090'))  WHEN CAST(vt18.c0 AS BLOB) THEN ((rt2.c1)|(0.9406717990538078)) END FROM rt0 WHERE (CAST(((NULL)>=('')) AS INTEGER));SELECT DISTINCT (((((rt0.c4)) BETWEEN ((rt2.c1)) AND ((rt1.c2)))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((+ (vt18.c0)))), (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((CAST(vt18.c0 AS BLOB)))), ((((((rt1.c0)OR(rt0.c1)))OR(rt0.c4)))==((+ (rt0.c3)))) FROM rt0, rt1, rt2 WHERE (((((0.6396357424465234)>('1535983904'))) ISNULL));SELECT DISTINCT NTILE(LIKELIHOOD(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)), 0.6287721564312879)) OVER (), rt1.c1, (((rt0.c3)>>(vt18.c0)) IN ((((vt18.c0, rt2.c1, rt2.c1)) NOT BETWEEN ((rt0.c1, rt1.c2, 0.16851775465141872)) AND ((rt0.c4, rt0.c2, NULL))))) FROM rt2, rt0, vt18;SELECT DISTINCT 0.3433380822620521, ((((rt0.c1) ISNULL)) BETWEEN (rt0.c4 COLLATE RTRIM) AND (((rt1.c0) NOT BETWEEN (rt2.c0) AND (rt2.c0)))), CAST(rt2.c0 COLLATE RTRIM AS BLOB) FROM rt0, rt2, rt1, vt18 WHERE (CASE 217941659 COLLATE BINARY  WHEN 'start of month' THEN ((NULL) NOT BETWEEN (x'') AND (x'')) WHEN ((x'7241')>(0xffffffffc59eb86e)) THEN ((NULL) NOT NULL) WHEN TRIM('-218222782', NULL) THEN 0.7879199223238624 COLLATE NOCASE ELSE ((NULL)||(0Xffffffffb302e06e)) END); -- 0ms;
SELECT DISTINCT MIN(CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c0 WHEN rt0.c3 THEN NULL ELSE rt0.c2 END), ((('-864209370')>=(rt1.c0)) IN ()), (((vt18.c0 IN (rt1.c0)))-(rt1.c2 COLLATE NOCASE)) FROM vt18, rt1;SELECT ALL IFNULL(DISTINCT SUBSTR(rt0.c4, rt0.c4), ((vt18.c0)>(1949502672))), ((((rt2.c0)%(rt2.c0)))<<((((0x3d9c6969)) BETWEEN ((rt0.c2)) AND ((rt2.c2))))), ((((x'') ISNULL))AND((rt0.c2 IN (rt1.c1)))) FROM rt1, vt18, rt0, rt2 GROUP BY ((((rt2.c1)OR('-1955974081')))-(((vt18.c0) BETWEEN (rt1.c1) AND (-2.01185412E8)))); -- 1ms;
SELECT rt1.c0, ((((((((((rt0.c3)>=(vt18.c0)))AND(((((rt1.c0)OR(rt2.c1)))OR(rt0.c3)))))AND(((rt0.c0)>=('-1404159233')))))AND((+ (rt1.c2)))))AND(PRINTF(NULL))), RANK() OVER () FROM rt1, rt2 WHERE (((0.7742496044326079)IS(1.556871854E9)) COLLATE NOCASE);SELECT DISTINCT rt0.c2 FROM vt18, rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT ((~ (0.25648458488084047)) IN (GROUP_CONCAT(rt0.c4))), (((((((((rt1.c0 IN (0.2869416973828368)))OR(((((rt2.c0)AND(rt2.c0)))OR(rt2.c0)))))OR(0.49536937405865766)))AND(((((((((vt18.c0)OR(vt18.c0)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c4)))))AND(LIKE('b', rt0.c1, '0'))), rt1.c0, ((((rt1.c1) NOT NULL))*(MIN(rt0.c3))), ((rt0.c2)&((((rt0.c4, rt0.c3, rt0.c4))<((rt1.c1, rt1.c2, rt2.c1))))) FROM rt0, vt18 LIMIT -609085558 OFFSET 961641257;SELECT DISTINCT ((((- (rt0.c0)), rt1.c2, rt0.c1 COLLATE RTRIM))!=(('1917807357', ((rt1.c1) IS FALSE), ((rt1.c1)<(rt0.c0))))) FROM rt0, rt2, vt18 LIMIT 227707156;SELECT ALL MIN(LIKELIHOOD(DISTINCT rt2.c0, 0.910233345459894), ((vt18.c0) BETWEEN (rt0.c1) AND (rt0.c0))) FROM rt2, rt0 WHERE (NULL);SELECT ALL rt2.c1 FROM rt1, rt0 WHERE (CASE 0xffffffff921d041c COLLATE RTRIM  WHEN CAST(NULL AS NUMERIC) THEN x'' END);SELECT DISTINCT (- (LIKELIHOOD(rt0.c3, 0.17848141050620103))), ((((rt1.c0)<=(rt2.c2))) IS FALSE), ((rt0.c0) IS FALSE) COLLATE NOCASE COLLATE BINARY FROM rt2, rt1, rt0, vt18 WHERE (((((1043189676) ISNULL))GLOB(json_array_length('1956613128')))) GROUP BY ((((rt1.c2)LIKE(NULL)))-(CASE WHEN rt0.c1 THEN 0X381574b5 END)) HAVING ((rt2.c1) BETWEEN (rt2.c1) AND ('So\M,O')) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((~ (rt0.c2))) NOTNULL) FROM rt2 WHERE ((((x'')) NOT BETWEEN ((LIKELY(-1150650314))) AND ((NULL))));SELECT DISTINCT ((rt0.c2)==(rt0.c1)) COLLATE RTRIM FROM vt18;SELECT TOTAL(NULLIF(DISTINCT rt1.c0, rt1.c1)) OVER ( GROUPS BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM rt2, rt1, vt18 WHERE ((((((((('-1083368657')AND(x'')))AND(NULL)))OR(0Xfffffffffeae922d)))AND(x'')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT DISTINCT UNLIKELY(CAST(NULL AS REAL)) FROM rt0, vt18, rt2; -- 0ms;
SELECT DISTINCT COUNT(CASE rt0.c2  WHEN rt2.c2 THEN rt1.c2 END) OVER () FROM vt18, rt1, rt2 LIMIT -1293773367 OFFSET 356548419;SELECT DISTINCT ((((((((((rt0.c4)AND(1.40438398E9)))AND(rt1.c0)))AND(NULL)))OR(vt18.c0))) IS FALSE) FROM rt1, vt18, rt2;SELECT DISTINCT rt2.c1 COLLATE BINARY FROM vt18, rt1, rt0, rt2 ORDER BY ((((rt2.c2)||(0.7025027227729104))) NOT BETWEEN ((((rt0.c2))<((rt2.c1)))) AND (((rt0.c0) BETWEEN (vt18.c0) AND (rt2.c0)))) ASC  NULLS FIRST LIMIT -1191600725 OFFSET 863877655; -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM rt1; -- 0ms;
SELECT ((vt18.c0) IS TRUE), json_patch(((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt0.c4)), ((rt2.c1) NOTNULL)), '' FROM rt1;SELECT DISTINCT (((vt18.c0 IN ())) NOTNULL), CASE ((((((((((((rt0.c2)OR(rt1.c0)))AND(rt2.c2)))OR(-947174714)))AND(rt2.c1)))OR(vt18.c0)))OR(rt0.c4))  WHEN COUNT(*) THEN MIN(rt0.c0) ELSE rt0.c3 END, 'DP^' FROM rt1, rt2, vt18;SELECT DISTINCT (((((rt1.c1)) NOT BETWEEN ((vt18.c0)) AND ((rt1.c0))))>(rt1.c2)) FROM rt2, rt0, vt18, rt1 WHERE (CASE WHEN NULL THEN DATETIME('-1654461006', NULL, '-2089261125') ELSE ((0.9803888708592652)<=('1406256838')) END); -- 1ms;
SELECT 1.879479242E9, (((rt0.c1) BETWEEN (x'2509') AND (rt1.c2)) IN ()), ((((CASE rt0.c4  WHEN rt1.c2 THEN 0.20391754317427213 ELSE rt0.c4 END)AND(CAST(rt0.c1 AS REAL))))OR(((rt2.c1)/('6j]6gf')))) FROM vt18 WHERE ((+ (('e''	''y' IN ())))) GROUP BY LIKELY(DISTINCT (NOT (rt0.c3))) HAVING (- (((NULL)*(rt2.c1))));SELECT DISTINCT SUM(CAST(rt1.c0 AS REAL)) FROM rt2, rt0, vt18 WHERE (CAST((x'' IN ()) AS TEXT));SELECT DISTINCT ((((rt2.c2)IS NOT(rt0.c2)))>(CAST(vt18.c0 AS INTEGER))) FROM rt2 WHERE ('288108720');SELECT DENSE_RANK() OVER () FROM rt2, rt0; -- 0ms;
SELECT ALL ((0.5984468740180393)|(rt0.c2)) FROM rt1, rt2 WHERE (((((('')) NOT BETWEEN ((NULL)) AND (('玵㘦pga'))))+(LOWER(DISTINCT -1705830771))));SELECT DISTINCT COALESCE(DISTINCT x'b098', CAST(vt18.c0 AS BLOB)), CASE WHEN CAST(NULL AS BLOB) THEN ((rt1.c2) BETWEEN (rt0.c3) AND (rt1.c0)) WHEN SUM(rt2.c1) THEN CAST(rt0.c0 AS BLOB) WHEN CAST(rt1.c0 AS REAL) THEN ((((rt1.c1)AND(rt0.c4)))AND(rt1.c2)) ELSE ((((((((0.5643066171222085)OR(rt1.c1)))OR(rt2.c2)))AND(rt1.c0)))OR(rt2.c0)) END, ((HEX(rt2.c2)) NOT BETWEEN ((((rt0.c3))>=((rt0.c3)))) AND (((rt0.c0) NOT NULL))) FROM rt1, vt18, rt2;SELECT ((rt2.c2 IN ()) IN ()) FROM rt2, vt18 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND (('1404383980'))))IS(((((0.9249783266462993)AND('XN')))OR('688326547'))))); -- 0ms;
SELECT ALL (((NOT (rt0.c4))) NOTNULL) FROM rt0, rt2 WHERE ((+ (0.22018075576397933)) COLLATE BINARY); -- 0ms;
SELECT ALL ABS(TRIM(rt1.c0)) FROM rt0, vt18, rt2, rt1; -- 0ms;
SELECT ((CAST(rt0.c4 AS TEXT))%(0.1671650664435277)) FROM vt18, rt0; -- 0ms;
SELECT DISTINCT CASE (NOT ('1983023871'))  WHEN ((rt1.c2) NOT NULL) THEN ((vt18.c0)>>(rt1.c1)) WHEN vt18.c0 THEN TRIM(rt1.c2, rt2.c2) WHEN (((rt1.c0, rt0.c3, rt2.c0))>=((rt0.c3, x'', rt0.c3))) THEN MIN(rt1.c0) ELSE rt0.c1 END FROM rt0, vt18, rt1 WHERE (CASE x'03c2'  WHEN (0.416287952330736 IN ()) THEN (NULL IN ()) END);SELECT DISTINCT COUNT(UPPER(x'2d4f')) OVER () FROM rt0, vt18 WHERE (((((x'')OR(NULL)))AND(x'')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt2.c1) ISNULL) THEN rt2.c2 WHEN (rt0.c1 IN (rt0.c3)) THEN x'418b' WHEN '櫽r2' THEN ((rt0.c4)<<(rt0.c1)) ELSE rt1.c0 END FROM rt1, rt0, vt18, rt2; -- 0ms;
SELECT CAST((~ (rt2.c2)) AS REAL) FROM rt0, rt2, rt1 WHERE ((('-556711848')||(x'0f66f3ae')) COLLATE BINARY) GROUP BY ((((rt2.c0) BETWEEN (rt2.c1) AND (rt2.c0)))*(((rt1.c1) BETWEEN (rt0.c2) AND (0.7936683253275914)))) HAVING (((CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 END))>=((((rt0.c1) ISNULL)))); -- 0ms;
SELECT ALL CAST(CASE rt1.c2  WHEN rt0.c1 THEN rt0.c1 ELSE rt2.c2 END AS TEXT), ((CAST(rt1.c2 AS REAL)) NOT NULL), (UNICODE('寧B') IN ()) FROM rt2, vt18, rt1 WHERE ((((('寧B')OR(x'')))&(((-126986682)||(NULL)))));SELECT CASE WHEN (rt1.c2 IN ()) THEN ((((rt0.c4)OR(rt2.c1)))AND(0.06254205698781701)) WHEN ((rt2.c1)||(rt1.c2)) THEN ((rt1.c2)*(NULL)) WHEN ((((rt0.c1)OR(rt2.c0)))AND(rt0.c4)) THEN (((rt2.c1)) BETWEEN ((NULL)) AND ((rt2.c2))) ELSE (- (rt0.c1)) END FROM rt0 GROUP BY rt1.c1 HAVING CASE WHEN ((rt2.c1)>>(rt2.c1)) THEN 1.917807357E9 ELSE (+ (rt0.c0)) END;SELECT DISTINCT (((''))>(((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1)))))) FROM rt1, rt2, rt0, vt18 WHERE ((((0Xffffffffc7599fdc IN (0.3322799687230973)))|(((NULL) NOT BETWEEN (x'f787') AND (x'a646'))))) LIMIT -1856476506; -- 0ms;
SELECT DISTINCT (((rt1.c1 IN (rt0.c3)))AND(NULLIF(rt2.c2, rt0.c4))) FROM rt2, vt18, rt0 WHERE (SQLITE_VERSION());SELECT DISTINCT ((((((((vt18.c0)AND(((rt2.c1) BETWEEN (rt0.c4) AND (0.08221220677156948)))))OR((((rt2.c2, rt2.c2, rt1.c2)) NOT BETWEEN ((vt18.c0, vt18.c0, rt2.c2)) AND ((rt1.c2, rt0.c1, rt2.c2))))))AND(((rt2.c2)IS NOT(rt0.c4)))))AND(NULL)), '0.0', (~ (SUM(rt0.c3))) FROM vt18, rt1, rt2 WHERE (CASE ((((x'')OR(-6.69748965E8)))AND(0.3247020210136673))  WHEN CAST(x'3d27' AS REAL) THEN LIKELY(DISTINCT x'7c37') END);SELECT ((CAST(rt1.c1 AS TEXT))/(CASE rt0.c0  WHEN rt2.c1 THEN rt2.c1 WHEN vt18.c0 THEN rt1.c2 WHEN rt1.c1 THEN 0.29782179293144906 END)) FROM rt1, vt18, rt2;SELECT ALL COUNT(0.4107653126830124) FILTER(WHERE CASE ((rt2.c0)<<(0.6348626574005902))  WHEN CASE 625875873  WHEN rt1.c1 THEN rt0.c2 END THEN rt0.c3 COLLATE BINARY WHEN ((rt0.c1) BETWEEN (rt2.c1) AND (rt0.c4)) THEN (((rt0.c4))>=((rt1.c0))) WHEN (((rt2.c2, x'', rt1.c0))>((rt1.c0, rt2.c1, rt1.c2))) THEN CAST(rt2.c0 AS NUMERIC) ELSE CAST(rt0.c3 AS REAL) END) OVER () FROM rt2, rt0, rt1, vt18 GROUP BY ((TYPEOF(rt0.c2)) IS TRUE) HAVING rt1.c2; -- 1ms;
SELECT DISTINCT ((((vt18.c0)=(rt2.c1))) IS TRUE) FROM rt2, rt1, vt18, rt0 GROUP BY CAST((~ (rt1.c1)) AS TEXT); -- 0ms;
SELECT (((rt1.c0 IN ()))<(((rt0.c3) IS TRUE))) FROM rt1 GROUP BY CASE rt0.c4 COLLATE NOCASE  WHEN (rt2.c1 IN ()) THEN ((((rt2.c1)AND('')))AND(rt2.c2)) END HAVING ((CAST(rt0.c3 AS NUMERIC)) ISNULL);SELECT DISTINCT ((((((rt2.c2)AND(rt0.c2)))AND(rt0.c3))) NOT BETWEEN (((rt2.c0)!=(rt1.c2))) AND (rt1.c1)) FROM rt2;SELECT DISTINCT vt18.c0 FROM rt1, rt2, vt18 WHERE ((((('A{P4g(eM')OR(CASE 0.42266748330838966  WHEN '-2018268666' THEN '1612463178' ELSE x'' END)))AND(LIKELIHOOD(DISTINCT 0Xffffffffc78b42c6, 0.8720523951772832)))); -- 0ms;
SELECT CASE ((NULL) BETWEEN (rt1.c1) AND (rt1.c1))  WHEN ((rt1.c0) NOTNULL) THEN LTRIM(rt0.c1, rt0.c1) END FROM vt18;SELECT AVG(CASE WHEN rt2.c0 THEN rt1.c0 ELSE NULL END) OVER () FROM rt1, rt0, vt18, rt2 WHERE (((json_insert(0.29629082785476235, 0.1742359429177287, NULL, NULL, 0.706787595445145)) NOT BETWEEN ((- (1404383980))) AND ((~ (NULL))))) GROUP BY ((((rt1.c0)<(rt1.c0)))>=(rt1.c2 COLLATE NOCASE)) LIMIT -82603285 OFFSET 1057186043;SELECT DISTINCT COUNT((- (rt0.c2))) FILTER(WHERE CAST(rt2.c2 AS BLOB) COLLATE BINARY) OVER () FROM rt2 WHERE (CAST(((0.6964551156114179) ISNULL) AS NUMERIC));SELECT DISTINCT rt0.c2 FROM vt18, rt0, rt1, rt2 WHERE (rtreenode(HEX(DISTINCT NULL), rtreenode(NULL, 0.8389566311221303))) GROUP BY CAST(rt0.c4 AS INTEGER) COLLATE NOCASE; -- 0ms;
SELECT ((CAST(rt1.c2 AS TEXT)) BETWEEN (MAX(rt0.c3)) AND (((rt1.c1)==('K|n\n\nbWL')))), TRIM(((0.5937718711508305)>=(rt0.c0)), ((((((((rt2.c2)AND(rt0.c0)))AND(NULL)))AND(rt1.c0)))AND(rt0.c0))), (((((rt2.c2, rt2.c1, rt1.c1)) NOT BETWEEN ((rt1.c1, rt1.c2, rt2.c0)) AND ((rt2.c0, rt0.c4, rt0.c3))))%(((rt0.c0) BETWEEN (vt18.c0) AND (rt1.c1)))) FROM vt18, rt1 WHERE (CAST(((0Xffffffffcb0aef03) IS TRUE) AS TEXT));SELECT COUNT(*) FILTER(WHERE ((rt0.c2) ISNULL) COLLATE NOCASE) OVER () FROM rt0, vt18, rt1 WHERE (((((NULL)) BETWEEN ((NULL)) AND ((0.13299629131847324))) IN ())); -- 0ms;
SELECT ALL CASE SQLITE_SOURCE_ID()  WHEN '0.4981427649181024' THEN x'' END FROM rt1, rt0, rt2, vt18 ORDER BY NULL, ((PRINTF(vt18.c0, rt0.c2, 874564714))GLOB(((rt1.c1)==(vt18.c0)))) DESC; -- 1ms;
SELECT rt1.c1 FROM rt1, vt18, rt2 WHERE ((('')>>(0.3591122069539656)) COLLATE NOCASE); -- 0ms;
SELECT ALL '-940829139' COLLATE RTRIM, ((AVG(0.3129565875221221))>=(CAST(rt0.c3 AS TEXT))), ((((rt1.c2)AND(rt0.c1)))/(rt1.c0)) FROM rt2, rt1, rt0; -- 0ms;
SELECT MAX(((NULL)<(rt1.c1))) FROM rt0 WHERE (CASE TRIM(0.4540107466629312)  WHEN CASE WHEN x'e264f6ad' THEN NULL ELSE ']8L3Q8+0f' END THEN (('1316402936')*(NULL)) ELSE (('X~') BETWEEN (NULL) AND (0.2136564011815265)) END);SELECT ALL (('{.)9m>o' COLLATE BINARY)>(((rt0.c0)+(rt0.c0)))), COUNT(CASE WHEN rt2.c0 THEN rt2.c1 WHEN rt1.c1 THEN NULL WHEN rt1.c0 THEN rt0.c4 END), ((((((((((rt0.c1)AND(rt2.c2)))AND(rt2.c1)))OR(rt2.c1)))AND(rt1.c0)))-(((rt1.c2) BETWEEN (rt1.c0) AND (vt18.c0)))) FROM rt1, rt0, rt2, vt18; -- 0ms;
SELECT DISTINCT TOTAL((rt0.c4 IN ())), rt2.c1, SQLITE_SOURCE_ID() FROM vt18, rt0 WHERE ((NOT ((('-1882740886') BETWEEN (0.7829964851779591) AND ('r4')))));SELECT DISTINCT NTILE((TYPEOF(DISTINCT rt0.c1) IN ((rt0.c4 IN ()), ((rt0.c2) NOTNULL)))) OVER (), CASE WHEN '' THEN (((rt2.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt1.c0))) WHEN ((rt2.c0)<<(rt1.c2)) THEN CASE rt2.c1  WHEN rt2.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN vt18.c0 ELSE rt2.c1 END WHEN CAST(rt0.c1 AS TEXT) THEN CASE 0X68da7760  WHEN rt1.c2 THEN rt2.c2 END END, ((((rt2.c2) ISNULL))==((rt0.c2 IN (rt1.c1, rt0.c0)))), ((((((NULL)OR(rt1.c2)))OR(rt0.c4)))<<(NULL)), -2.01185412E8 FROM rt1, rt0, rt2;SELECT ALL '^O' FROM vt18, rt0, rt1 WHERE ((((x'' IN ())) IS TRUE)); -- 0ms;
SELECT COUNT(AVG('863877655')) FROM rt2, vt18, rt1, rt0 GROUP BY CASE ((rt1.c2)>=(rt2.c0))  WHEN (rt2.c1 IN (rt2.c2, rt1.c0)) THEN ((((((((vt18.c0)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c2)) END, (STRFTIME(rt1.c0, rt2.c2, rt0.c2) IN ()), CAST(json_array_length(vt18.c0) AS INTEGER);SELECT DISTINCT rt0.c3, SQLITE_COMPILEOPTION_GET(MAX(rt2.c0)), CAST(CAST(rt2.c0 AS REAL) AS REAL) FROM rt0, rt2, vt18, rt1; -- 0ms;
SELECT ALL CASE (rt2.c2 IN ())  WHEN CASE rt0.c4  WHEN rt2.c1 THEN rt0.c3 WHEN rt2.c0 THEN vt18.c0 WHEN rt0.c3 THEN rt0.c4 END THEN x'' END FROM vt18, rt0 INNER JOIN rt1 ON ((((rt2.c1)IS(rt0.c0))) NOT BETWEEN (rt2.c0) AND (((((rt0.c1)OR(rt1.c1)))OR(rt0.c1)))) INNER JOIN rt2 ON x'' WHERE (((((NULL) ISNULL)) BETWEEN (NULL) AND (((0.6047324082065685) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((rt2.c0)*(rt1.c1))) NOT NULL), ((((rt2.c1) BETWEEN (vt18.c0) AND (rt0.c1))) NOT BETWEEN (((rt2.c1)>>(rt2.c1))) AND (GROUP_CONCAT(rt0.c1))), TRIM(DISTINCT (((rt2.c2))=((rt0.c4)))) FROM rt2, rt1, vt18, rt0 WHERE (CAST(CASE x''  WHEN NULL THEN 0.05703448098251018 WHEN '-1065057789' THEN 961641257 WHEN NULL THEN '1353727616' END AS BLOB)); -- 0ms;
SELECT ALL ((NULL)GLOB((- (vt18.c0)))) FROM rt1, rt2, rt0, vt18; -- 0ms;
SELECT ALL ((((vt18.c0) IS TRUE)) NOT BETWEEN (rt2.c0) AND (((rt1.c1) IS TRUE))) FROM rt2, vt18, rt0 WHERE (HEX(DISTINCT ABS(DISTINCT NULL)));SELECT DISTINCT UNLIKELY(((rt2.c0)>(rt2.c0))) FROM rt1;SELECT DISTINCT COALESCE((((rt2.c1))<=((rt2.c2))), CASE WHEN rt2.c0 THEN rt1.c1 ELSE rt2.c0 END, (((rt0.c0))<((rt2.c1))), CAST(rt1.c2 AS TEXT), rt2.c1 COLLATE RTRIM, ((rt2.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))), CAST(CAST(rt0.c1 AS INTEGER) AS NUMERIC), NTH_VALUE(((CASE rt2.c2  WHEN rt1.c0 THEN rt1.c0 ELSE rt0.c3 END)%(CAST(NULL AS TEXT))), (((('1162318300') NOTNULL)) ISNULL)) OVER () FROM rt1, rt2, vt18, rt0 WHERE ((((472276332) NOTNULL) IN (((0Xffffffffc9c313f6)+(NULL))))) LIMIT -1690746202 OFFSET -1346798696; -- 0ms;
SELECT DISTINCT (~ (((940930229)=(rt1.c2)))) FROM rt2 WHERE (((((0.18905003774786822)IS('-1194294712')))*(('-1156806477' IN ())))) GROUP BY (((CAST(rt1.c0 AS BLOB)))<>((rt1.c1))) HAVING ((0.08921799777305095 IN ()) IN ());SELECT 0.9553202797997192 FROM vt18, rt2, rt1 GROUP BY ((((rt2.c1)GLOB(-2.05976644E8))) IS FALSE) HAVING (((((((((rt1.c2 IN ()))OR(AVG(rt1.c0))))AND('682127047')))AND(TOTAL(rt2.c1))))OR(((vt18.c0) NOT NULL))) ORDER BY (((((rt1.c0 IN ()))OR(((rt2.c2)%(rt0.c1)))))AND(TRIM(rt1.c1, rt0.c0))) DESC, CHANGES() DESC  NULLS LAST;SELECT ALL ((0.9343811225716692) NOT BETWEEN (rt1.c1) AND (rt2.c1)) COLLATE RTRIM, CASE (((rt2.c0, NULL, rt0.c1))!=((rt0.c2, rt0.c1, rt1.c1)))  WHEN CASE WHEN rt0.c1 THEN rt2.c2 WHEN rt1.c1 THEN rt2.c2 WHEN rt0.c1 THEN rt2.c2 WHEN rt0.c4 THEN rt1.c0 WHEN rt2.c0 THEN rt2.c2 END THEN TOTAL(rt1.c0) WHEN rt0.c4 THEN CASE NULL  WHEN rt0.c1 THEN rt0.c1 WHEN rt1.c1 THEN vt18.c0 WHEN rt0.c2 THEN rt0.c1 ELSE vt18.c0 END WHEN (~ (vt18.c0)) THEN AVG(rt0.c2) END, ((rt1.c1) BETWEEN (rt2.c0) AND (rt0.c2)) COLLATE RTRIM, (((((rt0.c1)) NOT BETWEEN ((vt18.c0)) AND ((rt1.c2)))) BETWEEN (CAST(rt1.c1 AS NUMERIC)) AND (((((rt0.c4)OR(0x1ac32df7)))OR(rt0.c2)))), rt1.c1 FROM vt18, rt2, rt0;SELECT DISTINCT rt0.c2, ((((((((rt1.c1)AND(rt0.c3)))OR(rt2.c1)))OR(CASE rt0.c1  WHEN rt1.c1 THEN rt2.c2 ELSE '>㖃.r!' END)))OR(rtreenode('-2054979928', vt18.c0))), (MIN(0.19321542124212232) IN ()) FROM rt0, rt2 WHERE ((~ ((((('-1038705728')AND(0.8194163996451767)))OR(-234040339))))) ORDER BY ((CAST(vt18.c0 AS NUMERIC))>=(LIKELY(DISTINCT rt1.c1))) ASC  NULLS LAST, CASE ((rt2.c1) ISNULL)  WHEN CAST(vt18.c0 AS BLOB) THEN ((rt1.c1)|(rt0.c1)) ELSE rt0.c4 COLLATE RTRIM END ASC  NULLS FIRST;SELECT DISTINCT ((CAST(rt2.c2 AS NUMERIC)) IS FALSE), NULL, SUM(CASE WHEN rt0.c0 THEN rt0.c0 ELSE rt2.c1 END) OVER () FROM rt0, vt18, rt1, rt2; -- 0ms;
SELECT GROUP_CONCAT(((((((((rt0.c0)OR(NULL)))AND(rt2.c0)))OR(rt1.c0)))OR(rt1.c0))) FROM rt2, rt0, rt1, vt18; -- 0ms;
SELECT DISTINCT HEX(((NULL) BETWEEN (rt1.c0) AND (rt2.c1))) FROM rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt1.c1)>=(rt1.c2)))) AND ((((rt2.c1) IS TRUE)))) FROM rt1, rt2 WHERE ((((NOT (0.6910733044786138))) BETWEEN (CAST('Tz?E[' AS BLOB)) AND ('-1495923222' COLLATE RTRIM))) ORDER BY ((((rt0.c0)<=(rt0.c1)))LIKE(CASE rt0.c0  WHEN vt18.c0 THEN rt2.c0 WHEN rt1.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt0.c3 END));SELECT FIRST_VALUE(CAST(x'' COLLATE RTRIM AS REAL)) OVER ( ORDER BY (- ((~ (rt0.c2)))) DESC, (((rt1.c2)) NOT BETWEEN (((rt2.c0 IN (rt2.c2)))) AND ((0.08217080189439885))) RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt2;SELECT DISTINCT (((rt1.c0)) BETWEEN ((((vt18.c0) BETWEEN (vt18.c0) AND (rt0.c0)))) AND ((SQLITE_VERSION()))) FROM vt18, rt1 WHERE (((x'49bf')>>(x'751e' COLLATE NOCASE)));SELECT rt1.c0 FROM rt0, vt18 INNER JOIN rt1 ON (rt1.c0 IN ()) COLLATE NOCASE WHERE (((('.k,lc<좾Wa')GLOB(x'')) IN ((~ ('-853217527')), (('-1808515236') NOT BETWEEN ('*핕0Q') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((rt2.c2)-(rt0.c3)) COLLATE NOCASE FROM rt2, vt18, rt1 WHERE (((('')) BETWEEN (((((NULL)) BETWEEN ((0.2915618171622112)) AND ((NULL))))) AND ((CHANGES()))));SELECT TRIM(rt0.c1, ((rt0.c4)IS(rt2.c2))) FROM vt18, rt1 WHERE ((NULL COLLATE RTRIM IN (CAST('' AS BLOB))));SELECT DISTINCT (((vt18.c0, rt0.c1, '')) BETWEEN ((((NULL) IS TRUE), (rt1.c2 IN ()), ((rt1.c1)IS(NULL)))) AND ((((rt2.c0)%(rt0.c3)), ((rt1.c1)<(rt1.c2)), ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt2.c0))))) FROM rt2 WHERE (((((0.4238174649044827))>=((x'a18d6a9a'))) IN (0x14c7b122 COLLATE RTRIM, UPPER('')))) LIMIT -1723591786;SELECT ALL AVG(UPPER(DISTINCT rt0.c3)) COLLATE NOCASE FROM rt2, rt1, rt0, vt18; -- 0ms;
SELECT DISTINCT (((((((((((((((rt1.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))))OR(((((rt1.c1)OR(rt2.c2)))OR(rt1.c1)))))AND(((rt1.c1)==(rt1.c0)))))AND((((rt0.c4)) BETWEEN ((rt1.c1)) AND ((rt2.c2))))))OR('')))OR(((rt0.c4) BETWEEN (rt1.c2) AND (x'')))))OR(CASE WHEN rt0.c4 THEN rt2.c0 END)) FROM rt0;SELECT ALL (CASE rt2.c0  WHEN rt2.c0 THEN vt18.c0 WHEN rt0.c4 THEN rt1.c1 WHEN 0.450130742761913 THEN rt1.c1 ELSE rt0.c3 END IN (rt1.c1)) FROM rt1, rt0 WHERE (((CAST(0.1871236710079368 AS NUMERIC))||(CAST('' AS TEXT))));SELECT DISTINCT ((-5.17559042E8) IS TRUE) COLLATE RTRIM COLLATE BINARY, GROUP_CONCAT(MAX(CAST(rt0.c3 AS TEXT))), CASE rt0.c2  WHEN ((rt2.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN CASE WHEN rt1.c2 THEN rt2.c1 ELSE vt18.c0 END END FROM vt18 WHERE ('1252514002');SELECT ((((((x'') NOT BETWEEN (rt1.c0) AND (rt0.c2)))AND((((rt2.c1))<>(('961641257'))))))AND(((rt1.c1) NOTNULL))), ((CASE vt18.c0  WHEN rt0.c3 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt2.c0 THEN rt0.c1 END)IS(x'')), 0.06563092653767 COLLATE RTRIM, ((CAST(rt1.c2 AS NUMERIC))<=(((rt1.c2) IS FALSE))), (- (((rt2.c0)-(rt0.c4)))) FROM vt18, rt2, rt0, rt1; -- 0ms;
SELECT ALL LOWER(DISTINCT 0.8117094206299166), NULLIF(DISTINCT NULL, rt0.c4) COLLATE BINARY, (rt1.c1 IN ()) COLLATE RTRIM FROM rt1;SELECT CUME_DIST() OVER () FROM rt2, rt1 WHERE ((((NOT ('hL\rnbfpL'))) NOT BETWEEN ((((x'', NULL, 'WR'))=((x'', 'B<ꈬiJBL', x'a5cb')))) AND (((0.7178417462112159)IS NOT(0Xffffffffe373c866))))) GROUP BY ((((rt1.c0) NOT NULL))GLOB(rt2.c2 COLLATE BINARY)) HAVING CASE rt0.c4 COLLATE RTRIM  WHEN rt1.c1 COLLATE NOCASE THEN ((rt1.c0)*(rt1.c0)) ELSE 0.39317263815993697 END LIMIT 1404383980 OFFSET -8943753;SELECT DISTINCT CASE WHEN ((((((((((((rt2.c2)AND(rt0.c4)))OR(rt1.c0)))AND(rt0.c4)))OR(rt2.c1)))AND(rt2.c0)))OR(rt0.c4)) THEN rt0.c4 ELSE ((vt18.c0)<=(rt1.c0)) END FROM vt18, rt2, rt1;SELECT DISTINCT SUM(CASE WHEN '-1184850266' THEN rt1.c2 END) FROM rt0, rt1 WHERE (NULL COLLATE NOCASE) ORDER BY CAST('~1鯀\' AS NUMERIC) ASC; -- 0ms;
SELECT DISTINCT MIN(MIN(((rt2.c0) NOTNULL))) FROM rt0;SELECT DISTINCT LOWER(DISTINCT rt2.c2) COLLATE BINARY FROM vt18, rt2, rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((((((((((0.591041319354034)OR(LIKELIHOOD(DISTINCT rt2.c0, 0.37874121337539257))))AND(CAST(rt0.c1 AS INTEGER))))OR(((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c1)))))OR(((rt0.c4)>(rt0.c1)))))AND(((rt0.c1) NOTNULL))))AND(((rt2.c0)>(rt0.c4)))), rt2.c2 FROM rt2, vt18, rt1;SELECT DISTINCT ((((rt0.c3)==(rt0.c2))) NOTNULL), ((rt0.c1) NOTNULL), (- (((rt2.c2)&(rt1.c2)))) FROM rt2, rt0 WHERE (CASE ((('/31e500000*MmY'))<=((NULL)))  WHEN ((((NULL)AND(0.6503807308416031)))AND('1690758360')) THEN (('1480140167') NOT BETWEEN ('') AND (0.9051782451573152)) WHEN (NOT (NULL)) THEN (((('-1533020812')OR('-1889743819')))OR(NULL)) WHEN (NOT ('-1876979851')) THEN ((NULL)GLOB(0.496682885313657)) END);SELECT DISTINCT CAST(((rt1.c0)*(rt2.c2)) AS TEXT) FROM vt18, rt2;SELECT (((vt18.c0 IN ())) ISNULL) FROM vt18, rt2, rt0 WHERE (((IFNULL(NULL, 0.3354242463474587))AND(CAST(x'' AS REAL)))); -- 0ms;
SELECT ALL (NOT (NULL)), (((((rt2.c1, rt0.c1, rt0.c2))!=((rt0.c3, rt0.c4, rt0.c1)))) NOTNULL), COUNT(*), (((rt0.c2)) BETWEEN ((UNICODE(rt0.c3))) AND ((vt18.c0))), CASE WHEN rt0.c1 THEN rt0.c1 WHEN ((((rt2.c0)OR(rt0.c2)))OR(rt2.c1)) THEN rt1.c2 WHEN (rt2.c2 IN (rt1.c0)) THEN ((vt18.c0)/(rt1.c2)) END FROM rt2, rt1;SELECT DISTINCT (((((rt1.c1)OR(rt1.c0)))AND(rt2.c0)) IN ()), (((rt1.c1 IN (rt2.c2, rt0.c2, rt0.c4))) NOT NULL), 0.11241723247430968 FROM rt0, rt1, vt18, rt2; -- 0ms;
SELECT DISTINCT (((((rt2.c0))<((rt2.c2)))) NOTNULL), 0.5736570924461315, ((((((((((((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt1.c2)))OR((((rt0.c1, rt1.c2, rt0.c0)) NOT BETWEEN ((x'', rt0.c0, 0.1655357716406305)) AND ((rt1.c1, rt1.c0, rt0.c3))))))AND((((rt2.c0)) NOT BETWEEN ((vt18.c0)) AND ((rt0.c1))))))OR((((rt1.c1)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c3))))))OR(CAST(rt0.c3 AS NUMERIC))))OR(rt2.c2 COLLATE RTRIM)))OR(((rt2.c1) BETWEEN (rt2.c1) AND (rt1.c2)))) FROM rt1;SELECT DISTINCT (~ (rt0.c2)), CASE WHEN rt2.c1 THEN rt1.c2 END, (((((((((((rt2.c2, rt0.c2, rt0.c3)) BETWEEN ((rt2.c1, rt1.c0, vt18.c0)) AND ((rt1.c2, 0.22610382118598538, rt1.c1))))AND(((rt0.c0)OR(rt2.c0)))))AND(MAX(rt0.c0))))AND((rt0.c3 IN ()))))OR(TRIM(rt2.c2))) FROM rt2, rt1, rt0, vt18; -- 0ms;
SELECT DISTINCT ((((rt2.c1)AND(rt2.c1)))AND(rt0.c4)) COLLATE NOCASE, TOTAL(((rt0.c0)<<(rt1.c2))), ((SUM(vt18.c0)) NOT NULL) FROM vt18, rt2, rt0, rt1 ORDER BY rt2.c2  NULLS LAST, ((((rt0.c1))>=((NULL))) IN ())  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((rt2.c0) BETWEEN (rt2.c0) AND (rt2.c0)) AS BLOB), CASE SUM(rt0.c3)  WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt1.c0)) END, CAST(((rt0.c2)<=(rt0.c4)) AS REAL) FROM rt0, rt2, vt18;SELECT (((rt0.c3)) NOT BETWEEN ((x'')) AND ((TRIM(rt2.c1)))) FROM rt0, rt2, rt1, vt18; -- 0ms;
SELECT ALL (((((rt0.c1) BETWEEN (rt2.c2) AND (rt0.c4))))>((INSTR(rt0.c3, '.)t+')))), COUNT((NOT (rt0.c3))), json_array((- (rt0.c1)), (((rt0.c3, rt2.c0, rt0.c3)) BETWEEN ((rt0.c4, rt2.c0, rt1.c0)) AND ((rt0.c3, vt18.c0, rt0.c3))), ((rt0.c2) IS TRUE), CAST(rt2.c0 AS INTEGER)) FROM vt18, rt2, rt1, rt0 ORDER BY ((CASE WHEN rt2.c2 THEN '' END) NOTNULL) ASC  NULLS FIRST, (((((rt0.c4) IS FALSE)))<((((rt1.c2) IS FALSE)))); -- 0ms;
SELECT DISTINCT (((rt2.c2)) BETWEEN ((((vt18.c0)-(rt0.c3)))) AND ((((rt1.c2)>=(rt0.c0))))), MAX(((rt2.c1)>(rt2.c1))), ((rt0.c4)IS(rt1.c0)) COLLATE BINARY FROM vt18, rt0, rt2, rt1 GROUP BY (((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))) ISNULL), ((-2.027874127E9)LIKE(NULL)) COLLATE RTRIM, CAST(rt0.c0 AS INTEGER) COLLATE RTRIM HAVING ((rt0.c1)!=(rt1.c1)) LIMIT 225149766 OFFSET -1787312147; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt1.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt1.c2 THEN rt2.c0 END AS NUMERIC) FROM rt1, vt18, rt0, rt2 LIMIT -1065740082; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE TIES) FROM rt1, vt18, rt0; -- 0ms;
SELECT DISTINCT CASE CAST(rt2.c2 AS BLOB)  WHEN '2036120222' THEN ((rt1.c0)IS(rt0.c4)) WHEN CASE rt0.c2  WHEN vt18.c0 THEN rt0.c0 END THEN rt2.c1 WHEN ((rt2.c2)OR(rt1.c2)) THEN CAST(rt0.c0 AS BLOB) ELSE ((((((((x'754b2bf8')OR(rt2.c0)))OR(vt18.c0)))OR(x'')))AND(rt0.c2)) END, CAST((+ (rt2.c2)) AS REAL), (((CAST(rt1.c2 AS INTEGER), (rt0.c3 IN (rt2.c2)), CAST(rt1.c0 AS NUMERIC), LOWER(DISTINCT vt18.c0), '-1744672361'))<>((((rt1.c0)%(rt0.c1)), MIN(rt1.c0), NULL, ((vt18.c0) BETWEEN (rt2.c1) AND (rt2.c1)), rt1.c2))), CASE IFNULL(DISTINCT rt1.c2, rt0.c0)  WHEN ((rt2.c1)+(vt18.c0)) THEN (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c2))) ELSE CASE WHEN rt0.c1 THEN rt2.c1 ELSE rt1.c0 END END, (((rt0.c2, vt18.c0, rt2.c1)) BETWEEN ((CASE WHEN rt0.c1 THEN rt1.c0 END, CASE WHEN rt2.c2 THEN rt1.c1 ELSE rt1.c0 END, GROUP_CONCAT(rt1.c0))) AND ((rt1.c2 COLLATE RTRIM, CASE rt0.c2  WHEN rt0.c0 THEN rt1.c0 END, COUNT(rt1.c2)))) FROM rt1, rt0, vt18, rt2 WHERE (((CASE NULL  WHEN x'096a' THEN '0.9476091117496173' WHEN 0.35656233796231973 THEN NULL WHEN '()' THEN 0.33361921341630174 END) NOT NULL)); -- 1ms;
SELECT FIRST_VALUE(((((rt1.c0) ISNULL))!=((+ (rt1.c2))))) OVER ( RANGE (((+ (rt2.c1)))!=(IFNULL(DISTINCT rt2.c0, rt2.c1))) PRECEDING), 0.7008870203050684, ((vt18.c0) BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE NOCASE COLLATE RTRIM FROM rt1;SELECT ((0.7878729859926166)LIKE(rt2.c1 COLLATE NOCASE)) FROM rt2, rt0 NOT INDEXED, rt1 WHERE ((((((x''))>=(('37246045')))) NOT BETWEEN ((((NULL))>=(('1917807357')))) AND (CASE '1178645726'  WHEN NULL THEN x'af44' ELSE '-1315204074' END))); -- 0ms;
SELECT TOTAL(CASE rt0.c3  WHEN rt2.c2 THEN rt2.c1 ELSE rt0.c2 END) FILTER(WHERE CAST(((rt0.c0)>>(rt0.c0)) AS TEXT)) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND vt18.c0 PRECEDING) FROM rt2, vt18 LIMIT 1556871854;SELECT IFNULL(rt0.c2, rt0.c1) COLLATE BINARY FROM rt1 WHERE ((~ (((0.23094805689390108) IS FALSE))));SELECT ALL (~ (CAST(rt1.c1 AS TEXT))), ((((((((((((((rt0.c2)AND(rt0.c1)))OR(rt2.c2)))OR(vt18.c0)))AND(rt0.c1)))AND(rt1.c2)))OR(rt0.c3)))*(CAST(rt0.c1 AS NUMERIC))), ((((rt2.c1) BETWEEN (rt1.c1) AND (x'')))>('<幱4x?km')) FROM rt1, vt18, rt2 GROUP BY (CASE rt1.c1  WHEN rt0.c2 THEN NULL ELSE rt0.c0 END IN (CAST(rt2.c0 AS INTEGER)));SELECT TOTAL(CASE WHEN rt2.c1 THEN rt0.c3 WHEN rt2.c1 THEN rt1.c2 WHEN rt1.c0 THEN vt18.c0 END) OVER (), (((rt0.c0)) BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (rt1.c0)))) AND ((rt1.c2))), (((rt1.c0)) NOT BETWEEN (((~ (rt0.c0)))) AND ((((rt0.c2)&(rt1.c0))))) FROM rt2, vt18;SELECT ALL LEAD(DATE((((rt2.c0))<((rt2.c2))), (rt2.c1 IN (rt1.c0, rt0.c0)), CASE '-1746679264'  WHEN '-1234027663' THEN vt18.c0 ELSE rt0.c2 END), ROUND((rt1.c1 IN ()), ((rt2.c2) BETWEEN (vt18.c0) AND (rt0.c3))), ((((((((NULL)AND(((((rt1.c0)OR(rt2.c1)))AND(rt0.c4)))))AND(json_valid(rt0.c3))))AND(rt0.c1 COLLATE RTRIM)))OR(((((((((rt1.c0)AND(NULL)))AND(rt1.c1)))AND(rt2.c2)))AND(rt0.c3))))) OVER () FROM rt1, rt0, rt2, vt18 WHERE (0.057591831886822153); -- 1ms;
SELECT LAST_VALUE((CAST(NULL AS BLOB) IN (((vt18.c0)IS(rt2.c0))))) OVER () FROM vt18, rt2; -- 0ms;
SELECT (((((+ (rt1.c0)))OR(COUNT(*))))OR(rt2.c2)) FROM rt0 WHERE ((((NOT (x'0b5d')))AND(0.5625324519241849)));SELECT ((((rt1.c1)LIKE('-426105842')))|(rt0.c2)) FROM rt2 WHERE ((((NULL IN ()))||(('7q' IN ()))));SELECT DISTINCT ((((LIKELIHOOD(rt1.c1, 0.9615546370166491))AND(TRIM(rt0.c2, rt1.c0))))AND((((rt1.c2, rt0.c3, rt1.c0, rt1.c0, vt18.c0)) NOT BETWEEN ((rt1.c0, rt0.c0, rt2.c2, rt1.c1, rt0.c4)) AND ((rt1.c0, rt0.c1, rt2.c0, rt0.c2, x''))))) FROM rt0 WHERE ((((- (x'891a21ec')))<>(CAST(NULL AS INTEGER))));SELECT DISTINCT LAG(LAST_INSERT_ROWID(), ((((0.22111974260711909) ISNULL))AND(UPPER(DISTINCT rt0.c1))), TRIM(DISTINCT CASE rt2.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) OVER () FROM rt0, rt2, vt18; -- 4ms;
SELECT ALL json_array_length(((rt2.c0) ISNULL)) FROM vt18, rt2, rt1 WHERE ((LIKELY(DISTINCT 1.968192563E9) IN ())) ORDER BY '2\n!oM'  NULLS LAST; -- 0ms;
SELECT ALL (((~ (rt2.c0)))*(((((((((rt0.c2)OR(rt0.c1)))AND(rt1.c2)))AND(rt2.c0)))AND(rt2.c2)))) FROM vt18, rt2 WHERE (CASE WHEN IFNULL(x'', 0.5678447586561318) THEN 0.8682385791093656 COLLATE NOCASE ELSE ('' IN ()) END);SELECT x'', rt2.c2, AVG(rt2.c2) FROM rt2, rt0 WHERE (((((((1109504877)*(0Xffffffff9aacb207)))OR(((x'')||(727708094)))))AND(CAST(NULL AS NUMERIC)))) GROUP BY (+ (((rt0.c4)IS(rt2.c2)))), (((rt2.c0) IS TRUE) IN ()), ((((((vt18.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))))<>((((rt1.c1) ISNULL)))) HAVING ((rt0.c2) NOT BETWEEN (((rt1.c0) NOT NULL)) AND (CASE WHEN rt0.c4 THEN rt1.c2 ELSE vt18.c0 END));SELECT DISTINCT ((((rt2.c0)|(rt2.c2))) NOTNULL), rt2.c2, ((x'' IN ()) IN ((((rt2.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt2.c2))))) FROM rt1, rt2, vt18 WHERE (CASE WHEN (('308428633') NOT BETWEEN (NULL) AND (-1912047346)) THEN ('aN]' IN (0.739984256218997, x'dbec')) END);SELECT ((((rt2.c0) NOTNULL))IS NOT(MAX(rt1.c1))) FROM vt18, rt0, rt1 WHERE (0.4490592980082949 COLLATE RTRIM);SELECT (((((rt0.c4, rt1.c2, rt0.c2)) NOT BETWEEN ((rt0.c0, NULL, rt2.c1)) AND ((rt1.c2, rt0.c3, rt1.c2))))<=(CAST(vt18.c0 AS NUMERIC))) FROM rt1 NOT INDEXED, vt18, rt2, rt0 WHERE (0xfffffffff19e1ed6) ORDER BY ((CASE rt1.c1  WHEN rt0.c2 THEN vt18.c0 WHEN rt0.c1 THEN '' WHEN rt1.c2 THEN NULL ELSE rt0.c0 END)LIKE(rt1.c1 COLLATE RTRIM)); -- 0ms;
SELECT (((('C4j_䨓', rt1.c1, rt2.c2)) NOT BETWEEN ((rt2.c0, rt0.c2, '-2044002697')) AND ((rt0.c2, rt0.c4, rt0.c0))) IN ()) FROM vt18; -- 0ms;
SELECT DISTINCT x'' FROM rt2; -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (rt2.c2) AND (vt18.c0)))=(COUNT(x'9ee3'))) FROM rt2 WHERE ((~ (((NULL) BETWEEN ('517463489') AND ('*a')))));SELECT DISTINCT (~ ((rt2.c1 IN ()))) FROM rt2, vt18, rt1, rt0 GROUP BY CASE x'9235'  WHEN CAST(rt1.c0 AS REAL) THEN CAST(rt0.c4 AS BLOB) END, rt0.c0, (rt0.c1 COLLATE BINARY IN ()) HAVING ((rt2.c1) NOT BETWEEN (((rt2.c2)<<(rt0.c1))) AND (((rt0.c2) NOT BETWEEN (rt1.c1) AND (rt2.c1)))); -- 0ms;
SELECT CUME_DIST() OVER () FROM rt1, rt0, vt18 WHERE (NULL); -- 0ms;
SELECT LAST_INSERT_ROWID() FROM rt1, rt0, rt2, vt18 LIMIT -2041830635 OFFSET 1247636067; -- 0ms;
SELECT ((rt2.c2 COLLATE BINARY)+(COUNT(rt0.c1))) FROM rt2;SELECT json_remove('1162318300', rt0.c2), ((((((rt0.c3)AND(rt0.c1)))OR(rt2.c2)))AND((((rt0.c0))<>((rt2.c1))))), MIN(((x'') NOT NULL)) FROM vt18, rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT (((((((rt2.c2)) BETWEEN ((NULL)) AND ((rt0.c4))))AND(((rt0.c0)==(rt0.c2)))))OR(CAST(rt0.c3 AS NUMERIC))) FROM rt0, vt18;SELECT DISTINCT (((rt0.c3)OR(rt1.c2)) IN (((rt2.c0) NOT BETWEEN (0.9134665816223755) AND (rt0.c2)), (rt2.c2 IN ()))) FROM rt2;SELECT (+ ((((rt2.c0)) NOT BETWEEN ((NULL)) AND ((rt2.c0))))), ((CAST(rt2.c0 AS NUMERIC)) ISNULL), ((((rt2.c1)<(rt0.c1)))<=((((rt2.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))) FROM vt18, rt1;SELECT DISTINCT json_quote(((rt0.c3) BETWEEN (rt1.c2) AND (rt0.c2))) FROM rt0, vt18 WHERE (ABS((+ ('417890633')))) ORDER BY '-852406822' ASC  NULLS LAST LIMIT -669748965;SELECT ALL CASE WHEN ((rt0.c2) BETWEEN (x'') AND (rt0.c4)) THEN ((rt2.c1)+(vt18.c0)) END FROM vt18, rt1;SELECT DISTINCT ((SQLITE_COMPILEOPTION_GET(rt2.c1))LIKE(((vt18.c0)<=(rt0.c1)))) FROM rt0;SELECT DISTINCT ((CAST(rt1.c0 AS TEXT)) BETWEEN (((((0.9539878305467064)OR(rt0.c3)))AND(rt0.c0))) AND ((NOT (rt0.c3)))) FROM rt1 WHERE ((+ (CAST('f' AS INTEGER))));SELECT ALL TOTAL(4.018789E7) FROM rt2, rt1, vt18, rt0; -- 0ms;
SELECT DISTINCT (+ (TOTAL(rt1.c0))) FROM rt0;SELECT NTILE(((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)IS NOT((rt1.c0 IN ())))) OVER () FROM rt1, rt0, vt18 WHERE (CASE MIN(NULL, '1535983904')  WHEN 'g|' COLLATE RTRIM THEN (((('-1978760523')OR(x'4e88')))AND(x'2954')) END) GROUP BY CAST(NULL AS BLOB); -- 0ms;
SELECT DISTINCT ((rt0.c1) ISNULL) FROM rt0 WHERE ((CASE WHEN 0.6998706358636347 THEN '}{焛(R+' WHEN NULL THEN 0.9805218052423378 WHEN 0.3431247036989076 THEN x'' ELSE '' END IN ())) GROUP BY ((rt2.c0 IN ()) IN (rt2.c2 COLLATE BINARY));SELECT ((rt0.c3)==(rt2.c0)) COLLATE RTRIM FROM vt18, rt0 ORDER BY ((((rt2.c0)<<(rt0.c3)))OR(((((rt1.c1)AND(rt2.c1)))OR(rt2.c2)))) DESC, ((rt1.c1) NOT NULL)  NULLS LAST;SELECT ((((((x'd42a')<>('727608490')))OR(((((((((((((((((rt1.c0)OR(rt0.c0)))AND(rt0.c1)))AND(rt1.c1)))AND(rt0.c1)))OR(rt0.c0)))AND(rt2.c0)))AND(rt0.c3)))AND(rt0.c3)))))OR((NOT (rt0.c2)))) FROM rt1, rt2 WHERE ('1162318300') LIMIT -569421560 OFFSET 863877655;SELECT ALL (CAST(rt0.c3 AS TEXT) IN (rt1.c0 COLLATE RTRIM, rt1.c1 COLLATE RTRIM)) FROM vt18, rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT ((((rt1.c2)!=(rt2.c1))) IS TRUE) FROM rt2, rt0, rt1, vt18 WHERE ((((- (0.20181666569342704)))/((((1.114805398E9)) NOT BETWEEN ((NULL)) AND (('1954206724')))))); -- 0ms;
SELECT DISTINCT (((rt1.c0) IS TRUE) IN ()), COUNT(*), TIME(MAX(x''), CASE WHEN 1566251736 THEN rt0.c2 END, ((rt2.c2)<(rt0.c0))) FROM vt18, rt0, rt2, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c4)/(rt2.c0)) IN ()) FROM rt1, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (~ (((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))AND(rt1.c0)))AND(rt0.c2)))) FROM rt1 WHERE (((((((x'')AND(NULL)))AND(NULL)))>(UPPER(DISTINCT 0x608d555)))) LIMIT 354840356 OFFSET 1446922100;SELECT ALL MIN(CASE WHEN rt0.c2 THEN rt0.c0 END) FROM rt1;SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt2.c2) AND (rt0.c4)) AS REAL), ((((rt0.c4)<>(rt2.c2))) NOTNULL), ((((rt2.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt2.c2))) IN ()) FROM rt1, vt18, rt0, rt2 WHERE (RTRIM(x'738d') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- (LENGTH(rt1.c2))), CAST(rt1.c2 AS BLOB) COLLATE RTRIM, rt0.c1, ((((rt2.c2) ISNULL))<=(MIN(rt1.c2))), ((((rt0.c1)>>(rt0.c3))) ISNULL) FROM rt1, rt0, vt18, rt2; -- 0ms;
SELECT DISTINCT (((rt0.c0))=((vt18.c0))) COLLATE NOCASE, PERCENT_RANK() OVER ( ORDER BY CAST(((rt0.c4)GLOB(vt18.c0)) AS BLOB)), ((0.718884338381213)LIKE((rt0.c4 IN ()))) FROM rt0, rt2 NOT INDEXED, rt1 WHERE ((NOT (((0.44581078310036215) NOT BETWEEN (NULL) AND (0Xffffffff9006a490)))));SELECT CAST(rt0.c1 AS REAL) FROM vt18 WHERE (LOWER(DISTINCT ((0.6968210149127987)AND(-1536757271)))) LIMIT 655156602;SELECT DISTINCT TOTAL(((rt2.c2)IS('oee纖RmMe'))) FROM rt2, rt0 NOT INDEXED, vt18, rt1; -- 0ms;
SELECT DISTINCT (- (rt0.c4)) COLLATE NOCASE, rt0.c1 COLLATE BINARY, ((((rt0.c3)LIKE(rt0.c2))) NOT BETWEEN (rt1.c2) AND (GROUP_CONCAT(rt0.c2))) FROM rt2, vt18, rt0 WHERE ((((NULL)) BETWEEN ((LIKELY(DISTINCT ''))) AND (((- (NULL))))));SELECT DISTINCT ((((1114399886)*(rt0.c2)))GLOB(((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt18.c0)))) FROM rt1 GROUP BY ((((rt0.c2))<>((rt0.c0))) IN (((rt0.c1) NOT NULL))), (rt0.c3 IN ()), ((((((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))AND(((((rt1.c2)AND(-2041830635)))OR(rt2.c0)))))OR(CASE WHEN rt0.c2 THEN rt1.c2 ELSE rt2.c0 END)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE rt2.c0 END)))AND(((rt0.c0) BETWEEN (0.04404624119497602) AND (rt0.c4)))) HAVING (-1.533020812E9 IN ());SELECT ALL ((ABS(rt0.c2))<(rt2.c2 COLLATE NOCASE)) FROM vt18 WHERE (((('1636830492') IS FALSE) IN (('' IN (0.39221602205736217, x''))))) GROUP BY ((rt0.c0) NOT BETWEEN (vt18.c0) AND (rt0.c4)) COLLATE RTRIM ORDER BY SQLITE_COMPILEOPTION_GET(((((rt2.c1)OR(rt0.c2)))AND(rt2.c0))) ASC  NULLS FIRST;SELECT DISTINCT (((rt2.c1)) BETWEEN (((((rt1.c0)) BETWEEN ((rt0.c1)) AND ((rt2.c0))))) AND ((((rt0.c0)%(NULL))))), ((AVG(rt0.c3)) IS FALSE), rt0.c2 FROM rt0 WHERE ((('_+2') NOTNULL) COLLATE NOCASE);SELECT ALL (((rt1.c2)) BETWEEN (((('c8r8') BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((NOT (rt0.c1))))) FROM vt18, rt0 WHERE ((json_type(x'') IN (((((338816428)OR(x'')))OR(0.042952384426009904)), ((55393446) NOT BETWEEN (NULL) AND (NULL))))) GROUP BY CASE IFNULL(rt0.c2, rt0.c4)  WHEN ((rt0.c4)IS NOT(rt1.c2)) THEN ((vt18.c0)||(vt18.c0)) ELSE ((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c1)) END HAVING SUM(COUNT(*)) LIMIT 1293957039 OFFSET -377061449;SELECT DISTINCT (NOT ((+ (rt1.c2)))) FROM vt18;SELECT GROUP_CONCAT('-67431952') OVER () FROM rt2, rt1, rt0, vt18 LIMIT 975478900; -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE ((((x'2b28' IN ()))GLOB(UNLIKELY(DISTINCT NULL)))); -- 0ms;
SELECT ALL CASE WHEN CASE WHEN rt2.c1 THEN rt0.c4 ELSE rt0.c4 END THEN (rt2.c2 IN ()) ELSE (((rt0.c2, rt0.c4, NULL)) NOT BETWEEN ((x'', rt2.c2, rt1.c0)) AND ((rt0.c1, rt1.c2, rt0.c0))) END FROM rt0;SELECT DISTINCT ((((CAST(rt0.c0 AS INTEGER))OR((((((((('-1550186632')OR(rt1.c0)))OR(rt2.c0)))OR(rt2.c2)))OR(rt2.c2)))))AND(TOTAL_CHANGES())) FROM rt1, rt2 WHERE (CASE NULL  WHEN x'b327' THEN NULL END COLLATE BINARY);SELECT DISTINCT COUNT(*) OVER () FROM rt2 WHERE (CAST(CAST('-''' AS REAL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((rt2.c1))=(((rt2.c0 IN (rt0.c1, rt1.c0))))) FROM rt2;SELECT DISTINCT ((rt0.c3) NOT NULL) COLLATE NOCASE FROM rt0, rt2, rt1 LIMIT 1114805398 OFFSET 72279051; -- 0ms;
SELECT DISTINCT ((COUNT(vt18.c0))>=((- (rt0.c0)))) FROM rt0, rt2, rt1, vt18; -- 0ms;
SELECT (- (COUNT(vt18.c0))) FROM rt0, rt1, rt2, vt18 GROUP BY (+ (((rt0.c2) BETWEEN (vt18.c0) AND (rt0.c4)))) HAVING (~ (((rt0.c1)||(rt2.c1)))); -- 0ms;
SELECT DISTINCT COUNT(json_valid(rt1.c1)) OVER ( ORDER BY ((((NULL)IS(rt0.c0))) IS FALSE)) FROM rt0, rt1, vt18, rt2 WHERE (json_array_length(json_array_length(0x337dba17), ('-723077533' IN ())));SELECT CAST(((rt2.c2)|('i~')) AS INTEGER), ((CAST(rt1.c1 AS BLOB))>=((((rt0.c3, rt2.c2, rt1.c0))<((x'', rt0.c3, rt2.c0))))), (((rt0.c3 IN ())) NOT BETWEEN ((rt2.c1 IN (rt0.c2))) AND ((((rt0.c2, x'', rt0.c2)) NOT BETWEEN ((-1.182343476E9, rt1.c2, rt0.c4)) AND ((rt1.c1, rt0.c0, rt0.c0))))) FROM vt18, rt2 GROUP BY (~ (((rt0.c4)IS NOT(rt1.c0)))), COALESCE(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c0 END, (NOT ('-953569346'))), rt1.c1, ((((('-205976644') BETWEEN (rt0.c0) AND (rt0.c2)), rt1.c0, ((rt1.c1) BETWEEN (vt18.c0) AND (rt0.c3))))<>((((rt2.c0)&(rt0.c4)), ((vt18.c0)>=(rt2.c1)), (NOT (rt2.c2))))), NULLIF(((((((((vt18.c0)AND(rt2.c1)))OR(rt2.c1)))OR(rt0.c3)))AND(rt2.c0)), (+ (rt2.c1)));SELECT FIRST_VALUE((((rt2.c2))<((CASE WHEN rt2.c2 THEN rt2.c0 END)))) OVER ( RANGE json_quote(CAST(rt0.c4 AS BLOB)) PRECEDING), NULL, CAST((~ (rt0.c0)) AS INTEGER) FROM rt2 LIMIT -334211502 OFFSET -383411581;SELECT DISTINCT ((((((((CASE WHEN rt1.c1 THEN NULL WHEN rt1.c2 THEN rt1.c2 WHEN rt1.c0 THEN rt2.c1 ELSE rt0.c2 END)AND((~ (rt0.c3)))))AND(((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c2)))))OR(((rt0.c1)-(rt1.c2)))))AND(CASE WHEN vt18.c0 THEN 0.8570316498484098 WHEN rt0.c4 THEN rt0.c3 WHEN vt18.c0 THEN rt0.c3 ELSE rt2.c0 END)) FROM rt0, rt1 WHERE ((((((((((0Xffffffffc264d5bc IN ()))OR((~ ('')))))OR(((x'')/(x'b544')))))OR(((0x426c648e)IS(NULL)))))AND((('')<<(x'')))));SELECT ALL ((rt1.c0)<>(rt1.c1)) COLLATE NOCASE FROM rt0;SELECT ALL ((((rt1.c0)+(rt0.c4))) BETWEEN (rt2.c1) AND (CAST(rt2.c2 AS NUMERIC))), FIRST_VALUE(((((((((((0.45629919853660705)OR(rt2.c1)))OR(rt0.c4)))AND(0.787606338254232)))OR(rt1.c2))) NOT NULL)) OVER (), LAG(0.7086613457005346, NULL, ((CASE WHEN x'' THEN rt2.c0 END) ISNULL)) OVER () FROM rt0, vt18, rt1, rt2; -- 0ms;
SELECT DISTINCT vt18.c0, GROUP_CONCAT(rt2.c2), ((((((rt2.c1)AND(rt1.c0)))OR(rt1.c2))) NOT NULL) FROM rt1, rt2, rt0, vt18; -- 0ms;
SELECT ALL COUNT(NULL) OVER () FROM rt0, rt2; -- 0ms;
SELECT DISTINCT 'd	>_ii' FROM rt1; -- 0ms;
SELECT DISTINCT ((((CAST(rt2.c1 AS REAL))AND(((((((((((((rt1.c2)AND(rt0.c3)))AND(rt0.c4)))OR(rt2.c1)))OR(rt0.c0)))AND(rt0.c3)))OR(rt2.c1)))))AND(((rt0.c1) NOT BETWEEN (rt2.c1) AND (rt2.c1)))), (0.4643211785560625 COLLATE RTRIM IN ()), LIKELIHOOD(CAST(rt0.c4 AS TEXT), 0.2914503401579909) FROM rt0;SELECT DISTINCT (((NOT (rt1.c2)))&(rt0.c2)), ((CAST(0.9771192072278092 AS NUMERIC))OR(((rt2.c1) NOTNULL))), rt0.c2 COLLATE BINARY COLLATE BINARY COLLATE NOCASE FROM rt1 NOT INDEXED, vt18, rt0, rt2; -- 0ms;
SELECT DISTINCT (((NULL)) BETWEEN ((((vt18.c0) NOT BETWEEN (rt0.c1) AND (vt18.c0)))) AND (((rt1.c0 IN (rt2.c2))))) FROM rt1 WHERE ((((+ ('-1723427253'))) ISNULL));SELECT DISTINCT CASE ((rt1.c2) NOTNULL)  WHEN rt0.c4 THEN ((rt2.c1) BETWEEN ('0.13638943149630223') AND (rt1.c2)) WHEN CASE WHEN rt1.c1 THEN rt0.c3 END THEN (~ (rt0.c4)) WHEN rt0.c2 THEN ((rt2.c2) IS FALSE) ELSE (((rt2.c0, rt2.c1, rt1.c2))<=((rt0.c4, rt1.c2, x''))) END FROM rt0, vt18 ORDER BY ((((((((((((((((rt0.c3)AND(rt2.c2)))OR(vt18.c0)))OR(rt0.c2)))OR(rt1.c2)))OR(rt2.c1 COLLATE NOCASE)))OR(((vt18.c0)-(rt1.c0)))))AND(CAST(rt1.c2 AS NUMERIC))))OR(UNLIKELY(DISTINCT rt2.c2)))  NULLS LAST LIMIT -389590440;SELECT DISTINCT (((((rt2.c0))<((rt0.c0))))*(((rt2.c0)>(rt2.c1)))) FROM rt0, rt1;SELECT ALL COUNT(*) FROM rt2, rt0, vt18; -- 0ms;
SELECT ((((((((RTRIM(vt18.c0))OR(((rt1.c2) NOT NULL))))OR(((rt2.c0) BETWEEN ('') AND (rt2.c0)))))AND(((rt0.c0)-(NULL)))))OR((- (rt2.c0)))), TOTAL((NOT (rt1.c0))), ((0X3da7fa1b) ISNULL) FROM rt1, vt18, rt2, rt0; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN rt1.c2 THEN rt0.c0 END THEN '-1575788943' ELSE CAST(rt0.c3 AS INTEGER) END FROM vt18, rt0, rt2 GROUP BY (~ ((((rt0.c3))<=((rt1.c2))))), 0.7412980011284278, CAST(vt18.c0 AS NUMERIC), ((rt2.c0) BETWEEN (rt2.c0) AND (rt0.c3)) COLLATE BINARY, ((HEX(rt2.c1))%(((((rt0.c4)AND(rt0.c3)))OR(rt2.c1)))) ORDER BY (((((rt1.c1, rt1.c0, rt2.c1))!=((rt0.c2, rt0.c0, rt0.c3)))) NOTNULL)  NULLS FIRST;SELECT DISTINCT (((rt0.c0 IN ())) NOTNULL) FROM rt2, vt18 WHERE (((0.2072729229438659)==(((0xffffffffbf6d1b2f)AND(0.44421198693626784))))); -- 0ms;
SELECT DISTINCT (((~ (rt2.c0)))&(((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt2.c0)))), ('913781198' IN (rt0.c4, ((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c0)))), CASE WHEN CASE WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c1 THEN rt0.c4 WHEN '⭋' THEN rt0.c2 ELSE rt0.c0 END THEN '-1150650314' WHEN ((rt1.c2)<(rt0.c1)) THEN ((rt0.c0)!=(rt0.c3)) WHEN '45976041' THEN rt0.c4 END FROM rt2, rt1 NOT INDEXED WHERE (json((0.9315810765463868 IN ())));SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) COLLATE BINARY FROM vt18;SELECT AVG(CAST(rt0.c0 AS TEXT)) OVER (), x'', ((((((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c3)))AND(x'')))AND((rt2.c1 IN ()))) FROM rt2, vt18, rt1, rt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT ALL LEAD(CASE ((((rt2.c1)OR(vt18.c0)))OR(rt2.c2))  WHEN -1300782467 THEN (rt1.c0 IN ()) ELSE rt2.c1 END, ((x'') IS TRUE), ((((rt1.c0)OR(((rt1.c2) BETWEEN (rt1.c2) AND (rt1.c2)))))AND(((vt18.c0) BETWEEN (rt1.c0) AND (rt2.c1))))) OVER ( ORDER BY (('-777291134') BETWEEN (vt18.c0) AND (rt1.c1)) COLLATE NOCASE  NULLS LAST) FROM rt1, vt18, rt2 ORDER BY CASE WHEN rt2.c2 COLLATE NOCASE THEN (+ (rt1.c1)) WHEN (((rt0.c0))<=((rt0.c0))) THEN (((rt0.c2))>=((rt0.c1))) WHEN (+ (rt1.c0)) THEN SQLITE_COMPILEOPTION_GET(rt2.c2) ELSE ((rt0.c4) NOT BETWEEN (rt1.c0) AND (2014937691)) END;SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS BLOB) FROM rt1 RIGHT OUTER JOIN rt0 ON LIKELY(DISTINCT ((rt1.c1)+(rt0.c0))) FULL OUTER JOIN vt18 ON ((((('ꗽx67fX') NOT BETWEEN (vt18.c0) AND (rt2.c1)), (+ (rt1.c2)), '?#V{'))<>((((rt0.c2) IS FALSE), CAST(rt0.c1 AS INTEGER), (rt0.c4 IN ())))) WHERE (CAST((- ('-1843592164')) AS BLOB)) GROUP BY TYPEOF(CASE rt2.c1  WHEN rt0.c2 THEN rt2.c1 END) HAVING '308428633' COLLATE RTRIM;SELECT DISTINCT x'45be' FROM rt0 WHERE ((((('0.011246007042971407') NOT BETWEEN (0.09452082630943626) AND (0.7917428395051397)))%((- (0xf55e90b))))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c0) IS FALSE) AS REAL) FROM rt2, rt1, vt18, rt0; -- 0ms;
SELECT ((rt2.c0 COLLATE RTRIM) NOTNULL), ((rt1.c2)<=(rt1.c0)) COLLATE RTRIM, '6핕cm꛺#' FROM vt18 LIMIT -63145174;SELECT DISTINCT (((rt0.c1)) BETWEEN ((vt18.c0)) AND ((((rt2.c1) IS TRUE)))), COUNT(rt2.c0), COUNT(0Xffffffff969df190) FROM rt2, rt1 WHERE ((('-17204641' IN (x'')) IN ()));SELECT DISTINCT (((((rt0.c0)) BETWEEN ((vt18.c0)) AND ((rt2.c2))))>>(((((rt2.c2)OR(rt1.c0)))OR(0.2975415196691167)))) FROM rt0, vt18;SELECT DISTINCT x'1c43' FROM vt18 WHERE ((0.46429577692886226 COLLATE BINARY IN ())); -- 0ms;
SELECT 'x筧' FROM rt0, vt18, rt1, rt2; -- 0ms;
SELECT CAST(((0.44668160029621395)%(rt1.c2)) AS INTEGER) FROM rt1, rt0, vt18 GROUP BY CAST((NOT (rt2.c0)) AS NUMERIC) LIMIT -734297140 OFFSET 342132605;SELECT MIN(HEX(rt1.c0)) COLLATE RTRIM FROM rt2, rt0, rt1 WHERE (((NULL) NOT BETWEEN (x'bdff') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL rt2.c2 FROM rt0, rt2, rt1, vt18 WHERE ((NOT (CASE -1256200120  WHEN x'b8af' THEN NULL END))); -- 0ms;
SELECT DISTINCT TYPEOF((((rt2.c0))>((rt0.c3)))), GROUP_CONCAT(CASE rt1.c2  WHEN rt1.c0 THEN NULL ELSE rt1.c2 END), ((CASE NULL  WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c2 WHEN rt0.c4 THEN rt0.c4 ELSE rt2.c1 END)<(((rt1.c1)>>('-1065740082')))), ((CAST(rt1.c0 AS NUMERIC)) NOT BETWEEN ((((rt2.c1, rt0.c1, rt1.c2, vt18.c0, rt2.c2))>((rt1.c2, rt0.c4, rt1.c0, vt18.c0, rt0.c0)))) AND (HEX(rt0.c2))), ((rt0.c3)>(rt0.c1)) COLLATE BINARY FROM rt2, rt1, vt18;SELECT ALL '-1885680349' FROM vt18, rt0, rt2, rt1 WHERE (((((-1885680349)<<(0.5108005849434047))) BETWEEN (((NULL)GLOB(0Xffffffffdd8bb758))) AND (((0.31008570734643404) NOTNULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c0) ISNULL) IN (rt0.c0 COLLATE RTRIM)) FROM rt2;SELECT ALL (((vt18.c0)) BETWEEN ((((rt2.c1) IS FALSE))) AND ((((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt0.c3))))) FROM rt2, rt0, rt1 LEFT OUTER JOIN vt18 ON 0.3613138265545768 WHERE (HEX(((NULL)&(0.5862793514717396)))); -- 0ms;
SELECT DISTINCT ((x'')*((NOT (0Xffffffff8689bd49)))) FROM vt18, rt2, rt0, rt1 WHERE (((((CAST(NULL AS BLOB))AND(((('1719681425'))>((NULL))))))OR(CASE NULL  WHEN x'' THEN 0.8656806520614188 WHEN x'' THEN NULL WHEN 'E蚛' THEN x'' ELSE NULL END))); -- 0ms;
SELECT DISTINCT TRIM(((rt1.c1) NOT NULL), load_extension(rt0.c4)) FROM rt0;SELECT ALL (((((rt1.c0))=((rt1.c1)))) IS FALSE) FROM rt1, rt0, rt2, vt18 LIMIT 1650942679; -- 0ms;
SELECT DISTINCT ((((rt1.c2) ISNULL))|((+ (rt0.c2)))) FROM rt1 WHERE (((CAST('121028284' AS INTEGER)) NOTNULL)) GROUP BY 0.6948469200470817, ((((((rt2.c1)) BETWEEN (('-2090176466')) AND ((rt1.c2)))))!=(((rt1.c1 IN (x'', rt0.c4))))), CASE WHEN rt0.c4 THEN rt1.c1 WHEN vt18.c0 THEN vt18.c0 WHEN rt1.c0 THEN rt0.c1 END COLLATE RTRIM HAVING (CASE rt1.c1  WHEN rt1.c1 THEN rt2.c0 ELSE rt1.c2 END IN ());SELECT ALL (~ ('\n⾡|?a')), MIN((NOT (rt2.c0))), COUNT(*), (rt1.c2 COLLATE BINARY IN ()), (((CASE rt1.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt2.c0 END))==((((rt0.c1) BETWEEN (rt2.c2) AND (rt0.c4))))) FROM vt18, rt1;SELECT (((json_array_length('DP^', rt2.c1)))<=((((rt2.c2)<>(rt1.c1))))), -2.041830635E9, TOTAL(((rt1.c0) IS TRUE)), (- (rt0.c3 COLLATE RTRIM)), ((AVG(rt1.c2))>=(((rt0.c1) NOT BETWEEN (rt2.c1) AND (rt1.c2)))) FROM rt1, rt2, vt18, rt0;SELECT DISTINCT CAST(CASE WHEN rt2.c0 THEN rt2.c1 END AS INTEGER) FROM rt2, vt18; -- 0ms;
SELECT ALL MIN(((rt1.c0) NOT BETWEEN (vt18.c0) AND (rt0.c2))), AVG((rt2.c2 IN ())), NULLIF(rt0.c2, rt1.c0) COLLATE NOCASE FROM vt18, rt0, rt1 WHERE (LOWER(((((0.3999166813718912)OR('')))AND(0.3294420361604635)))); -- 0ms;
SELECT DISTINCT '-1733902007' FROM rt2, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt2.c0 THEN rt0.c0 END) NOT NULL) FROM rt0 WHERE ((((('-199893107') NOT BETWEEN (0.09673297707606165) AND ('')))+(x'')));SELECT (~ (ABS(DISTINCT rt2.c1))), (((NULL IN (x''))) NOT BETWEEN (((((rt0.c3)AND(vt18.c0)))OR(rt2.c1))) AND ((- (rt1.c2)))), CASE WHEN ((rt1.c1) IS TRUE) THEN CASE WHEN rt2.c2 THEN rt0.c0 ELSE rt0.c1 END ELSE json_object(rt1.c1, rt1.c1) END FROM vt18 GROUP BY (((- (rt2.c1)))<<((((vt18.c0)) NOT BETWEEN ((rt2.c2)) AND ((rt0.c1))))) HAVING ((CASE WHEN rt2.c2 THEN rt0.c1 ELSE vt18.c0 END) NOT NULL);SELECT DISTINCT ((CAST(rt2.c1 AS NUMERIC))<(((((rt1.c0)OR(3.88568416E8)))OR(rt0.c2)))), rt2.c1, (CASE WHEN rt2.c1 THEN vt18.c0 END IN ()) FROM rt1 GROUP BY 8.72312901E8, CASE WHEN ((rt1.c1)<(rt0.c4)) THEN ((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE CAST(rt0.c1 AS NUMERIC) END, ((((rt2.c1) BETWEEN (rt0.c4) AND (rt1.c2)))*(CASE rt0.c3  WHEN rt0.c0 THEN rt2.c2 ELSE '-1300782467' END));SELECT ALL COUNT(*) OVER () FROM rt2, rt1 WHERE ((((((2.87580883E8)) NOT BETWEEN ((x'')) AND (('L4d&j^YoW')))) NOTNULL)); -- 1ms;
SELECT rt2.c0, ((NULL)GLOB(rt0.c4)) COLLATE BINARY COLLATE NOCASE, ((rt2.c1) NOT NULL) FROM rt1, rt2, rt0 ORDER BY ((((rt0.c0) IS TRUE)) IS FALSE) DESC  NULLS LAST; -- 0ms;
SELECT CUME_DIST() OVER () FROM rt1, rt2 ORDER BY CAST(((rt1.c2)GLOB(rt0.c4)) AS BLOB)  NULLS FIRST;SELECT rt1.c0 COLLATE RTRIM FROM vt18, rt1, rt0, rt2 NOT INDEXED WHERE (CAST(x'' AS BLOB)); -- 0ms;
SELECT ALL ((((rt0.c0 COLLATE NOCASE)AND(x'')))AND((vt18.c0 IN (rt1.c1)))) FROM rt0, rt1;SELECT DISTINCT SUM((rt1.c2 IN (rt1.c2))) FROM rt0, rt1, rt2, vt18; -- 0ms;
SELECT DISTINCT (~ ('1391080432')) COLLATE NOCASE FROM rt1, rt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( PARTITION BY ((x'4045') IS TRUE), ((rt1.c0 COLLATE BINARY)>((rt1.c2 IN ())))) FROM rt1, rt0, vt18, rt2 GROUP BY (((~ (vt18.c0)))>>(((rt0.c4)||(rt0.c0)))) HAVING ((1.983023871E9 COLLATE NOCASE)LIKE(NULL)); -- 0ms;
SELECT AVG(SUM(COUNT(*))) FROM rt2, rt0, vt18 WHERE ((('%h~䝴' COLLATE BINARY) NOT BETWEEN (((NULL) NOT BETWEEN (x'') AND (0xffffffff8f42a3fd))) AND (UNICODE(NULL))));SELECT (+ (((((rt2.c0)AND(rt0.c0)))AND(vt18.c0)))) FROM rt2, vt18 WHERE ((+ ((('')<('-758300956'))))) GROUP BY CAST(((rt0.c0) BETWEEN (rt0.c0) AND (0x61027838)) AS NUMERIC) HAVING (((rt0.c1 IN ())) NOTNULL) ORDER BY ((((rt1.c0) IS FALSE))-(((vt18.c0) NOT BETWEEN (rt2.c1) AND (rt0.c4)))) ASC  NULLS LAST;SELECT DISTINCT vt18.c0, GROUP_CONCAT(CAST(rt0.c0 AS INTEGER)) OVER (), rt0.c1 FROM rt2;SELECT ALL ((((((((HEX(DISTINCT rt0.c1))OR(((((((((((((rt2.c1)OR(rt2.c2)))AND(rt0.c2)))OR(rt0.c3)))OR(rt2.c1)))AND(rt1.c1)))OR(rt1.c0)))))AND(UNLIKELY(DISTINCT rt2.c1))))AND(rt1.c1)))AND(NULL)) FROM rt1, rt0, rt2, vt18 WHERE ((-798804258 COLLATE NOCASE IN ())); -- 0ms;
SELECT DISTINCT (((NOT (rt0.c0)))=(((vt18.c0)*(vt18.c0)))) FROM rt2, vt18 ORDER BY ((rt2.c2) ISNULL) ASC;SELECT (((((rt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((730181600)))) BETWEEN (AVG(rt2.c2)) AND ((((rt2.c1)) BETWEEN ((rt2.c2)) AND ((rt0.c2))))) FROM rt1, vt18;SELECT DISTINCT (((vt18.c0 COLLATE RTRIM))>=((CAST(vt18.c0 AS REAL)))) FROM vt18, rt1, rt2, rt0 WHERE (((LOWER(0.24378722576919343)) BETWEEN (((x'72428aff') IS TRUE)) AND (NULL))); -- 0ms;
SELECT DISTINCT (('0.32351634228919446')<((((rt0.c3, rt0.c1, 0.8809086179611778)) NOT BETWEEN ((rt1.c0, x'', vt18.c0)) AND (('-1220446834711746382 h_BeIR>}8', rt1.c1, vt18.c0))))) FROM rt0, vt18, rt2, rt1 WHERE (CAST((((('-517559042')AND(NULL)))AND('')) AS TEXT)) LIMIT -451692238; -- 0ms;
SELECT DISTINCT (NOT (((vt18.c0) IS FALSE))), CASE WHEN CASE rt0.c0  WHEN rt2.c2 THEN x'6ab2' WHEN rt0.c1 THEN rt1.c2 WHEN rt1.c1 THEN rt2.c1 ELSE rt0.c3 END THEN CAST(rt2.c1 AS REAL) ELSE (((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt2.c2))) END, MAX((((rt1.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt2.c2)))) FROM rt2 WHERE (((('''*DbB!')) BETWEEN ((CASE WHEN '7FqVU%7' THEN x'' END)) AND ((CASE 0.5833188225339996  WHEN x'' THEN 0Xffffffffb6630c4c ELSE x'' END))));SELECT DISTINCT (((rt0.c4))=((rt1.c2))) COLLATE RTRIM FROM rt2, rt0, rt1, vt18 INTERSECT SELECT ALL GROUP_CONCAT(((rt1.c2)<(rt0.c2))) FROM rt2 WHERE (CAST(((0.384236403455263) BETWEEN (x'') AND ('72279051')) AS NUMERIC));SELECT DISTINCT (((~ (rt0.c3))) NOTNULL) FROM rt1;SELECT ALL rt0.c4, COUNT(CAST(rt2.c0 AS NUMERIC)), ((CASE rt0.c4  WHEN rt2.c2 THEN rt2.c2 ELSE rt0.c3 END)+(rt0.c0)) FROM rt0, vt18, rt2, rt1 WHERE (((((json_extract(x'', ''))AND(CAST(x'' AS REAL))))AND(((x'6d82')IS NOT('1082184760')))));SELECT DISTINCT ((vt18.c0) BETWEEN ((rt0.c0 IN ())) AND ('')) FROM rt0, rt2 WHERE (((((0.534963772474615)>=(x''))) ISNULL));SELECT DENSE_RANK() OVER () FROM vt18, rt0, rt2 WHERE ((((('2038570819') NOT BETWEEN (x'') AND (-1842397656)))%((((x'bbdb')) NOT BETWEEN (('-205976644')) AND ((x'')))))) GROUP BY (((((((rt1.c1, vt18.c0, rt2.c1))>((rt1.c1, rt0.c1, vt18.c0))))OR(CAST(vt18.c0 AS NUMERIC))))OR(rt0.c4 COLLATE RTRIM)), (- (CASE WHEN rt2.c2 THEN rt0.c1 END)), (NOT (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c0)))) HAVING CAST(rt1.c1 COLLATE BINARY AS TEXT) ORDER BY 1337453507 DESC  NULLS FIRST;SELECT ((((rt0.c3) IS TRUE)) NOT BETWEEN (CAST(rt2.c0 AS INTEGER)) AND (rt2.c0 COLLATE BINARY)) FROM rt1, vt18, rt0, rt2 WHERE (CAST(((((((((x'101d')OR('1984774889')))AND('')))AND(0.8466691951037506)))OR(0.032631981254160336)) AS INTEGER)) ORDER BY ((x'') NOT NULL), rt0.c1 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((((rt0.c2))<>((rt1.c2))))LIKE(((rt2.c0) ISNULL))) PRECEDING EXCLUDE GROUP) FROM rt1 FULL OUTER JOIN rt0 ON (- (x'')) WHERE ((~ (CASE '0.7868342516869846'  WHEN x'4957' THEN ',#x]p' END)));SELECT DISTINCT SUM(((rt2.c2)AND(rt2.c2))) FROM rt2, vt18 RIGHT OUTER JOIN rt1 ON ((+ (rt1.c1)) IN (CAST(rt1.c2 AS REAL))); -- 0ms;
SELECT DISTINCT TRIM((vt18.c0 IN ()), CAST(rt0.c4 AS REAL)), '*p.Tv' COLLATE RTRIM, LENGTH(ABS(DISTINCT rt1.c2)) FROM rt1, vt18 WHERE (CASE UNLIKELY('')  WHEN (0.2487590345363372 IN ()) THEN (+ ('287580883')) ELSE ((x'')%(x'')) END);SELECT DISTINCT ((LIKELIHOOD(rt0.c1, 0.6667211212004834)) IS TRUE) FROM rt2, rt1, rt0, vt18 WHERE (x'') ORDER BY '눦f^]' DESC, CAST(((((((((rt0.c1)AND(rt1.c1)))AND(rt2.c1)))AND(rt0.c1)))AND(rt0.c4)) AS TEXT) DESC  NULLS LAST; -- 0ms;
SELECT GROUP_CONCAT(CAST(rt0.c2 AS NUMERIC)) FROM rt1, rt2, rt0 GROUP BY UNLIKELY(0x3aa1d0a6 COLLATE NOCASE) HAVING x''; -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY) BETWEEN (CASE rt1.c0  WHEN '615145067' THEN rt1.c1 ELSE rt0.c2 END) AND (((rt0.c2) NOT NULL))), ((((rt2.c2) NOTNULL))&(rt1.c1 COLLATE BINARY)), CASE WHEN rt0.c4 THEN (- (rt0.c1)) WHEN CASE WHEN rt2.c1 THEN rt0.c4 ELSE rt0.c3 END THEN UPPER(rt2.c1) WHEN COUNT(rt0.c1) THEN rt0.c1 ELSE (rt2.c2 IN ()) END FROM rt2 WHERE ((((+ (0.5375438738237976)))<>(((x'')AND(104881577)))));SELECT DISTINCT LIKELIHOOD(DISTINCT ((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))OR(rt1.c2)), 0.5681609645765648) FROM rt0, rt2, vt18, rt1 WHERE (CASE WHEN ((((1114399886)OR('-2041830635')))AND(NULL)) THEN (((NULL)) BETWEEN ((-710248609)) AND ((NULL))) END) GROUP BY (((rt2.c0 IN ()))<=('1406256838')); -- 0ms;
SELECT DISTINCT (TRIM(vt18.c0, rt2.c0) IN ((0.8014567190662455 IN (rt0.c4)), AVG(vt18.c0))) FROM vt18, rt2, rt1, rt0 WHERE (((((-66690857)&('-2041830635'))) NOT BETWEEN (((x'') IS FALSE)) AND (0.5134731884536602 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT 0.25357903066801557 FROM vt18 WHERE ((((((('1535983904')AND(0.591041319354034)))OR('447277612'))) IS FALSE)) LIMIT 1790626316; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt0.c2, rt1.c0)) BETWEEN ((CAST(rt2.c1 AS NUMERIC), MAX(rt1.c1), (((rt1.c2)) BETWEEN ((rt0.c1)) AND ((rt2.c0))))) AND ((CASE rt0.c4  WHEN vt18.c0 THEN rt0.c0 WHEN 0X75503c33 THEN rt1.c0 WHEN rt0.c4 THEN rt2.c0 END, CAST(rt2.c2 AS NUMERIC), CAST(rt0.c1 AS NUMERIC)))) FROM rt1 GROUP BY (ABS(rt0.c1) IN (rt2.c2 COLLATE RTRIM));SELECT ALL ((((TIME(vt18.c0, rt0.c1, rt1.c0))AND(((rt2.c0)<(rt1.c2)))))OR(((rt2.c2)>(rt0.c2)))) FROM rt1 LIMIT -2036902886 OFFSET -410406459;SELECT ALL ((((((NULL)>>(rt0.c1)))OR((rt1.c2 IN ()))))AND('-947174714')) FROM vt18;SELECT DISTINCT rt0.c2 FROM rt0 WHERE ((('0.8468207742250555')>(NULL)) COLLATE NOCASE); -- 0ms;
SELECT '-1889743819' FROM vt18, rt0 WHERE ((('-2018268666') NOT NULL)); -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE NOCASE) IS FALSE) FROM rt0, rt1, rt2, vt18 WHERE ((((((NOT (x'')))OR(INSTR(x'', NULL))))OR(((((0x5145a33a)AND(x'')))AND(NULL))))) LIMIT 852787885; -- 0ms;
SELECT DISTINCT LIKELIHOOD((NULL IN ()), 0.016496388328745115), ((((rt0.c0)>>(rt1.c2)))<(AVG(rt0.c0))), x'' FROM rt1, rt0, vt18 WHERE ((((('-788253270' IN ())))>=((0.8932435423724707 COLLATE BINARY)))) GROUP BY (((rt2.c0)) BETWEEN ((((rt2.c1)&(rt1.c1)))) AND ((((rt0.c4)<=(rt0.c2)))));SELECT DISTINCT ((((((rt0.c2)OR(rt0.c2)))OR(rt1.c1))) ISNULL) FROM rt2, rt1, rt0, vt18 WHERE ((((((x'')) NOT BETWEEN ((0x3ef8a282)) AND ((x''))))>((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((rt1.c0)>=((((vt18.c0)) BETWEEN ((rt2.c1)) AND ((rt1.c1))))) FROM vt18, rt2 WHERE (((CASE WHEN NULL THEN -2.15485596E8 WHEN NULL THEN NULL WHEN 'vL<' THEN -579169567 END)IS((0.8974008938079969 IN ()))));SELECT DISTINCT ((((vt18.c0)>(rt0.c4))) ISNULL), COUNT((rt2.c1 IN ())), rt2.c0 COLLATE RTRIM FROM rt2, vt18, rt0 WHERE (CAST(((((((((695900502)OR(NULL)))OR(NULL)))OR(NULL)))AND(0Xffffffffa49ff574)) AS INTEGER)); -- 0ms;
SELECT CASE (rt1.c0 IN ())  WHEN (((rt1.c2))<((rt0.c4))) THEN 0.7097736487873263 END, rt0.c0, (rt0.c2 IN ()) FROM vt18 CROSS JOIN rt2 ON ((((rt2.c2)GLOB(rt0.c4)))AND((rt1.c2 IN ()))) LEFT OUTER JOIN rt1 ON ((CAST(rt1.c1 AS BLOB)) NOT NULL) LEFT OUTER JOIN rt0 ON '' WHERE (((((1740938987) IS FALSE)) IS FALSE)); -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT rt1.c2, 0.9082748028370219) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c2 IN ())) NOT NULL) FROM rt2, vt18, rt1, rt0 WHERE ((NOT (((((0.4821206866390395)OR(x'')))OR(0.8028955123083227))))); -- 1ms;
SELECT TRIM(((rt1.c1)AND(rt1.c1)), LOWER(vt18.c0)) FROM rt1, rt0, vt18 WHERE (('h)' IN (NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((rt2.c0)>(rt0.c1)))||(((((rt1.c1)AND(rt2.c0)))AND(rt0.c4)))) FROM rt2, vt18, rt1, rt0 WHERE (0xffffffffd1af8c45 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT LEAD((((rt1.c2, rt1.c2, rt0.c4)) NOT BETWEEN (((rt0.c2 IN ()), rt1.c2, ((rt1.c1) NOTNULL))) AND ((((((x'')OR(rt1.c2)))AND(rt1.c2)), ((rt1.c2)+(rt1.c1)), CASE WHEN rt1.c1 THEN -1495472565 WHEN rt0.c4 THEN rt0.c1 WHEN rt1.c0 THEN x'' ELSE rt0.c2 END))), ((((rt0.c2)AND(rt0.c4)))AND(NULL COLLATE NOCASE)), (((((rt1.c2))>=((0Xffffffffb986decc))))!=(((rt0.c3) NOTNULL)))) OVER (), ((CASE rt2.c2  WHEN rt0.c0 THEN rt2.c0 END) IS FALSE), (+ (rt0.c1 COLLATE NOCASE)) FROM rt1, rt0 GROUP BY '';SELECT ALL CAST((rt2.c2 IN ()) AS INTEGER) FROM vt18; -- 0ms;
SELECT ALL ((((((((((((rt0.c2)AND(rt0.c4)))AND(x'')))AND(((0.07291935639064917)>=(rt2.c2)))))OR(rt0.c3)))OR(((rt0.c3) BETWEEN (rt0.c3) AND (rt1.c1)))))AND((((((((('<q')AND(rt0.c3)))OR('308428633')))OR(vt18.c0)))AND(NULL)))) FROM vt18, rt1, rt0 WHERE (load_extension(-1.40192921E9, '') COLLATE RTRIM);SELECT DISTINCT TOTAL(((((rt2.c1)AND(vt18.c0)))AND(rt0.c2))) OVER () FROM vt18;SELECT FIRST_VALUE(((((((rt1.c1)AND(rt2.c2)))AND(rt1.c2))) NOT BETWEEN (CASE 0.3661865006732986  WHEN -1 THEN rt2.c2 END) AND (0Xffffffffba28c2d1))) OVER () FROM rt1, rt2; -- 0ms;
