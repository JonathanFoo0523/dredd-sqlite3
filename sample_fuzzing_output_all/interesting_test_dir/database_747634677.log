-- Time: 2024/06/07 17:21:51
-- Database: database77
-- Database version: 3.40.0
-- seed value: 747634677
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1 UNINDEXED); -- 1ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL, 0.6719752363885368), ('', x''), (0.21197013354384708, 0.5310567630787135); -- 0ms;
UPDATE OR ABORT vt0 SET (c1)=(0.16064274040200932); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE vt0 SET (c1)=(NULL) WHERE CASE ((vt0.c0)&(vt0.c1))  WHEN 0.5088000971579224 THEN vt0.c0 COLLATE RTRIM ELSE ((vt0.c1)>(vt0.c1)) END; -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (0.7396057413380527, '-2099723687'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, x'7258'); -- 0ms;
PRAGMA wal_checkpoint(RESTART); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0, c1)=(0.4322213922836048, '') WHERE ((((vt0.c1)<>(vt0.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (x'94b1')); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'12cdd4f6', NULL), (NULL, 0Xffffffff830772ef), ('Fu', '-2099723687'); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, tokenize = "ascii"); -- 0ms;
PRAGMA temp.journal_mode = WAL; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM temp; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt1', 'null', '4 -1980346354 sz=-1833009163 unordered'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'null', ' sz=-1368270813 unordered noskipscan'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 0ms;
UPDATE OR ROLLBACK vt1 SET c0='|~' WHERE ((CASE 'U霺pAN{'  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '-7' THEN vt1.c0 ELSE vt1.c0 END) BETWEEN (vt1.c0 COLLATE BINARY) AND (((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''), (x'aa34'), (x''); -- 7ms;
UPDATE OR REPLACE vt0 SET c0='-2135781239'; -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (0.5075254515869285, x'fff584c6'), (NULL, 'U霺pAN{'), ('|~', NULL); -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES (NULL), (x''), (0.44292034386275425); -- 1ms;
UPDATE vt1 SET (c0, c0)=(x'', x'') WHERE ((SUBSTR(vt1.c0, 0.5080891043301577)) BETWEEN (CAST(vt1.c0 AS TEXT)) AND ((~ (vt1.c0)))); -- 0ms;
INSERT OR ABORT INTO vt0(c1) VALUES (0.5431468119148202), (x''), (NULL); -- 0ms;
UPDATE OR FAIL vt1 SET c0=-2.099723687E9, c0='p	䴋C/-P4D'; -- 1ms;
UPDATE OR ABORT vt1 SET c0=x'a4caf971', c0='503608144', c0='-2135781239'; -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA busy_timeout = 0; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 1ms;
UPDATE OR IGNORE vt1 SET c0=NULL, c0=''; -- 1ms;
UPDATE vt1 SET (c0)=(865161284) WHERE ((((((((((vt1.c0) ISNULL))AND((NOT (vt1.c0)))))OR(LOWER(vt1.c0))))OR(((vt1.c0)>(vt1.c0)))))AND(CAST(vt1.c0 AS TEXT))); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES (x'1504', 341961013); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1441903349', c0=x'', c0=0Xffffffff9cbc8c0a, c0='' WHERE ((((((x'fee8')|(vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))OR(CAST(0.05582593971861438 AS NUMERIC))); -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(-1.368270813E9); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('jM#D'); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.5544887007846806), (-2.135781239E9, 'euOA_A'), (x'', 0.44292034386275425); -- 0ms;
REINDEX; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA main.optimize; -- 0ms;
COMMIT; -- 0ms;
UPDATE OR ABORT vt0 SET c0=0.009925846539160177; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 'p	䴋c/-p4d'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('-1014435426'), (x''), (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=('5HN&Vwm,') WHERE '1245460466'; -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('!|'), (x''), (0.5310567630787135); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 1ms;
PRAGMA temp.default_cache_size; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE vt1 SET c0='-1833009163'; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-1706346207), (NULL), (NULL); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('f䴋7R꘺'); -- 0ms;
PRAGMA main.busy_timeout = 3365518980347618340; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
PRAGMA main.cell_size_check = true; -- 0ms;
PRAGMA application_id; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES (NULL), ('-1833009163'), (NULL), (x''), ('1479666094'); -- 0ms;
UPDATE vt1 SET (c0)=(NULL) WHERE CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END COLLATE RTRIM; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, 0.4613739771688876); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1376721077);\n; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0X4a3c37f2), ('-1306854032'), (0.7006615285883707), ('846505530'), ('Jh'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (''); -- 0ms;
ANALYZE vt1; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.4639608870877223); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(8.4650553E8) WHERE (((((((vt0.c1))>(('-1833009163'))))AND((~ (vt0.c0)))))AND((- (vt0.c1)))); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x'ee07'), ('-400629662'), (-115441741); -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0Xffffffffe81ee062); -- 0ms;
UPDATE vt1 SET (c0)=(x'') WHERE (((- (vt1.c0))) NOT BETWEEN (((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=NULL; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'4154'); -- 0ms;
PRAGMA stats; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (~ ((NULL IN ()))); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (x''); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'838c', c1='0.21197013354384708'; -- 0ms;
UPDATE vt1 SET (c0)=(x'de42') WHERE CAST(vt1.c0 COLLATE RTRIM AS TEXT); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(x'') WHERE (~ (CASE WHEN -1469428229 THEN vt0.c1 ELSE vt0.c0 END)); -- 0ms;
PRAGMA main.threads; -- 0ms;
UPDATE OR ABORT vt1 SET c0=0xffffffffe81ee062; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE vt0 SET c0=1.245460466E9, c0='8⬁&R' WHERE ((vt0.c0) ISNULL) COLLATE BINARY; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
PRAGMA temp.automatic_index = true; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('3MsZ0V쉙'), ('-400629662'), (-1306854032); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
END; -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c0 THEN vt1.c0 END)>>(COALESCE(vt0.c1, vt0.c0))), CASE 0xffffffffc388f19e  WHEN CASE 0.830207846043906  WHEN vt0.c1 THEN vt1.c0 ELSE x'decc' END THEN ((((vt0.c0)OR(vt0.c0)))AND(vt1.c0)) WHEN ((vt0.c1)IS(vt0.c0)) THEN ((vt0.c1)!=('-1980346354')) WHEN (((vt0.c0, vt0.c0, vt0.c0))>((vt1.c0, vt0.c1, vt0.c1))) THEN vt1.c0 ELSE ((vt1.c0)IS NOT('-1441903349')) END, '-1665364982' FROM vt1, vt0 WHERE ((IFNULL(NULL, 'Cx''5') IN ())) LIMIT 1963924214 OFFSET 1230188843; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS TRUE))OR(vt0.c1 COLLATE RTRIM)) FROM vt1 WHERE ((((NULL IN ()))-(CAST(0.16064274040200932 AS TEXT))));SELECT ((CASE WHEN vt0.c1 THEN vt0.c1 END)AND(CAST(vt0.c0 AS INTEGER))), NTILE(LIKELIHOOD(DISTINCT ((vt0.c0) NOT BETWEEN (vt0.c0) AND ('-400629662')), 0.4471914130411011)) OVER (), CAST((((vt0.c0)) BETWEEN (('1588573356')) AND ((vt0.c1))) AS NUMERIC) FROM vt1, vt0; -- 2ms;
SELECT DISTINCT (((vt0.c1))=((vt0.c1))) COLLATE NOCASE FROM vt1, vt0 WHERE (((CASE 0.30225843993141954  WHEN x'' THEN '262248201' WHEN 1809420012 THEN 0.5971650795204974 WHEN x'' THEN 1.963924214E9 ELSE x'971c' END) BETWEEN ('0.7006615285883707') AND ((0.9103072879899438 IN (0.7006615285883707, x''))))); -- 0ms;
SELECT DISTINCT ((STRFTIME(vt0.c0, vt1.c0, vt0.c0)) IS TRUE) FROM vt1, vt0; -- 1ms;
SELECT DISTINCT vt0.c0, GROUP_CONCAT(0.6572169460748998) OVER (), LAG((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ()), (((((vt0.c1))>((vt0.c1)))) BETWEEN ((~ (vt1.c0))) AND (vt0.c1)), ((((vt0.c0)IS NOT(vt0.c0))) NOTNULL)) OVER () FROM vt0, vt1; -- 3ms;
SELECT DISTINCT PRINTF(vt1.c0 COLLATE RTRIM, LIKE(vt0.c0, vt1.c0, '0'), ((vt0.c1) IS FALSE), (NULL IN ()), NULLIF(vt0.c1, vt1.c0)), CAST((('ni')||(x'')) AS INTEGER), ((MIN(vt0.c0))&(TIME(vt0.c0, 0xffffffffc0329e48, vt1.c0, vt0.c0, vt0.c0))) FROM vt0 GROUP BY ((vt0.c1) ISNULL);SELECT ALL CASE WHEN ((((((((vt0.c1)AND(vt1.c0)))OR(vt0.c1)))OR(vt0.c0)))AND(vt1.c0)) THEN x'' ELSE vt1.c0 END, COALESCE(DISTINCT CAST(vt0.c1 AS TEXT), vt0.c1), ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>(UNLIKELY(vt0.c0))) FROM vt0 CROSS JOIN vt1 ON CAST((vt1.c0 IN (vt1.c0)) AS INTEGER) WHERE (CASE WHEN (('-1781937890') NOT BETWEEN (NULL) AND (NULL)) THEN (('503608144') NOT BETWEEN (NULL) AND (542714753)) ELSE CASE WHEN ')jm2F!꣯' THEN 0.19165135125046084 END END); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 END) BETWEEN (((vt0.c0) IS FALSE)) AND (CAST(vt1.c0 AS INTEGER))) FROM vt0, vt1; -- 0ms;
SELECT ((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))!=((~ (vt1.c0)))) FROM vt0 WHERE (((((((((((((x'')AND(0.706654182927464 COLLATE RTRIM)))OR(CASE WHEN NULL THEN 0Xffffffff80b29089 WHEN 0.399599208809302 THEN 0.8494584394781272 WHEN NULL THEN NULL ELSE -105779663 END)))AND((NOT (x'3e46')))))AND((-899480077 IN ()))))OR(((x'')LIKE(-1.376721077E9)))))AND(((0.6206155962389638)!=(0.23128723655205774)))));SELECT DISTINCT ((0.47688198075706134)!=(((((vt0.c0)OR(NULL)))AND(vt1.c0)))) FROM vt1, vt0 WHERE (((((((NULL)AND(8.65161284E8)))OR(0.4292307238070764))) BETWEEN (UNLIKELY(DISTINCT '0.6572169460748998')) AND ('A줞X~6i~'))); -- 0ms;
SELECT DISTINCT NULL FROM vt0, vt1; -- 0ms;
SELECT DISTINCT SUM(((('-1781937890')) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) OVER ( ORDER BY (((((vt0.c0))!=((vt0.c1))))*(CAST(vt0.c1 AS BLOB))), json_quote((+ (vt1.c0))) ASC), ((((NULL)==(vt0.c0))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) AND ((- (vt0.c0)))), (((vt0.c1 IN ()))IS NOT(LTRIM(vt0.c1))) FROM vt0, vt1 ORDER BY ((((CAST(vt0.c0 AS BLOB))OR((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))))AND((vt1.c0 IN ()))) ASC  NULLS FIRST, ((vt0.c0) NOTNULL) COLLATE NOCASE DESC;SELECT ((CASE vt0.c1  WHEN '-1376721077' THEN vt0.c0 ELSE vt1.c0 END)<=((+ (0.5834507879826966)))) FROM vt0 WHERE (((((x'') BETWEEN (x'') AND (831162654)))IS((NOT (x'041c'))))) ORDER BY ((((vt0.c1) NOT NULL)) NOT NULL) ASC;SELECT ALL (((NULL)) BETWEEN ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) AND (((((vt0.c1))>=((vt0.c0)))))), CAST('sa!' AS TEXT) COLLATE RTRIM, (((vt0.c1 IN ()))-(COUNT(*))) FROM vt1, vt0 WHERE ((~ ((+ (''))))); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c0) IS FALSE)) OVER () FROM vt0, vt1 WHERE ((((('-1368270813') NOT BETWEEN (0.17041905990784734) AND (x'')))<(STRFTIME(x'4a07', '789519080', x'')))) GROUP BY (NOT ((+ (vt0.c1)))), ((((((vt0.c1)==(vt1.c0)))OR((~ (544534133)))))AND(((((((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))), NULL COLLATE NOCASE COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((((((vt1.c0)&(vt0.c1)))OR(((vt0.c1) ISNULL))))AND((((vt1.c0))>((vt0.c1))))), ((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))OR(((((vt0.c1)AND(NULL)))AND(0.19165135125046084)))))AND((vt0.c1 IN ()))), ((((vt0.c0) IS TRUE))>=(CAST(vt0.c1 AS BLOB))) FROM vt1, vt0 WHERE (((((((((0.5929704412762048)AND(0.1654167936927221)))AND(0.6607320137446493)))AND(((('P2'))>((NULL))))))OR(((('1221869716'))>((x'ec71')))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY '1847016343'  NULLS LAST) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT CAST(vt0.c0 AS TEXT)) FROM vt1;SELECT CASE WHEN vt0.c1 THEN (NOT (vt1.c0)) END FROM vt0 WHERE (((((x'')IS NOT(0.5080891043301577)))-((('-1452954616') NOTNULL)))) GROUP BY (+ (CAST(x'' AS REAL)));SELECT DISTINCT SUM(((vt1.c0) IS FALSE)) FROM vt0, vt1 GROUP BY ((((((((((vt0.c0)OR(NULL)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))+(((vt0.c1) NOT NULL))), (- (0.911153378686286)), 0.3463354639741617; -- 2ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (-1449464388))) ISNULL) FROM vt1, vt0 LIMIT -1376721077 OFFSET 831162654; -- 0ms;
SELECT DISTINCT MAX((vt0.c1 IN ())) FROM vt0, vt1 GROUP BY ((((((vt0.c1)OR(x'')))OR(vt0.c0)))IS NOT(0.6474420505275086)); -- 1ms;
SELECT ((((vt1.c0) NOT NULL))OR(((vt1.c0)+(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT AVG((((vt0.c0))>=((vt0.c1)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE ((((x'')) NOT BETWEEN (((('1344493449')==(0.0486224607665785)))) AND ((((x'') NOTNULL))))); -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt1.c0))) BETWEEN (vt0.c1 COLLATE NOCASE) AND (0.49077580086513983)) FROM vt1, vt0 GROUP BY x'3948' HAVING (NULL IN ()); -- 4ms;
SELECT DISTINCT SUM(vt0.c1) OVER () FROM vt0, vt1 ORDER BY (- (vt1.c0)) COLLATE BINARY ASC LIMIT 1344493449 OFFSET 831162654; -- 1ms;
SELECT DISTINCT ((SQLITE_VERSION()) BETWEEN (((vt0.c1) BETWEEN (vt0.c0) AND ('DWBwJekM'))) AND (vt0.c0 COLLATE BINARY)), (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY, (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) IN ()) FROM vt0;SELECT (((vt0.c1 IN (vt1.c0))) BETWEEN (((((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(vt1.c0))) AND (vt0.c0)) FROM vt0, vt1; -- 0ms;
SELECT ALL (((((x'' IN ()))OR(NULL)))AND((((vt0.c1))<=((vt0.c0))))) FROM vt0, vt1 WHERE ((((789519080)) NOT BETWEEN (((~ ('-756609054')))) AND ((((262248201)||('Rfg⮁')))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))LIKE((NOT (vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL SUM(TOTAL(((vt0.c0)>(vt0.c1)))) FROM vt0, vt1;SELECT DISTINCT (((~ (-1832995276))) NOT BETWEEN (LAST_INSERT_ROWID()) AND (vt0.c1 COLLATE RTRIM)) FROM vt1 WHERE (((((((0.8624339978081411)AND(1.479666094E9)))OR(0.6355377150381276)))GLOB(CASE WHEN '2p^DX|' THEN '' ELSE x'7e2f' END)));SELECT ALL ((vt1.c0 COLLATE NOCASE)IS NOT((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (- (AVG(vt1.c0))), (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN (((((0xffffffff80b29089))>=((vt0.c1))), 0Xffffffffcf935e25, TRIM(vt1.c0))) AND (((vt0.c0 IN ()), CASE vt1.c0  WHEN vt0.c0 THEN x'' END, GROUP_CONCAT(vt1.c0)))), COUNT(*) FILTER(WHERE CAST(CAST(vt1.c0 AS TEXT) AS TEXT)) OVER () FROM vt1 NOT INDEXED, vt0 WHERE (CASE WHEN ((0x33915044) IS TRUE) THEN (x'f65b' IN (0Xffffffffda456e85)) ELSE (~ (NULL)) END); -- 1ms;
SELECT DISTINCT '' FROM vt1, vt0 WHERE ((((CAST(NULL AS NUMERIC)))=((CAST(-105779663 AS TEXT))))); -- 0ms;
SELECT ALL (NOT (SUM(vt1.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 COLLATE BINARY AS NUMERIC), MIN(((vt0.c1)<=(vt0.c0))), COUNT(*) OVER () FROM vt1, vt0 WHERE (((((((-771975366) BETWEEN ('.B*gr6N{') AND (x'6dd3')))OR(((('')) BETWEEN (('-1014435426')) AND (('1047175283'))))))OR(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT (((vt0.c0 IN ()))||((('1479666094')LIKE(vt1.c0)))) FROM vt0, vt1 WHERE ((~ (UNLIKELY(x'')))); -- 0ms;
SELECT (((('2䴋y>B^to<')AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))OR(CAST(vt0.c0 AS INTEGER))), ((((vt0.c1) BETWEEN ('0.6474420505275086') AND (vt0.c0))) BETWEEN (CAST('0.4639608870877223' AS NUMERIC)) AND (vt1.c0)), SUM(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ('-957659004' IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*), (+ (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN '1786292463' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END)), ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) BETWEEN ('3|') AND (CAST(vt1.c0 AS INTEGER))) FROM vt1 WHERE (CASE WHEN CHANGES() THEN (+ ('<')) WHEN ((x'1744')%(x'0cc8')) THEN ((0.9512684310240099) NOT BETWEEN ('\r/o') AND (NULL)) WHEN NULL COLLATE RTRIM THEN CASE WHEN 'IG' THEN 0xffffffffd1fc973a ELSE NULL END END);SELECT DISTINCT ((((((-1706346207)OR(vt1.c0)))AND(vt1.c0))) BETWEEN (CASE vt0.c0  WHEN -8.12425691E8 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN 0.5971650795204974 THEN vt0.c0 END) AND ('KR?Oq')) FROM vt1 WHERE ((((x'') NOT NULL) IN ()));SELECT DISTINCT CASE WHEN LIKELY(vt0.c0) THEN ((0.19387852144226903)|(vt0.c1)) ELSE ((vt1.c0)-(vt0.c1)) END FROM vt0, vt1 GROUP BY ((((vt0.c1, vt1.c0, vt1.c0)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((1497897792, vt0.c0, vt1.c0))) IN ()) HAVING vt1.c0 ORDER BY json(((vt0.c1)+(vt0.c0))) ASC; -- 4ms;
SELECT DISTINCT x'' COLLATE NOCASE FROM vt0 WHERE ((+ ('0.19387852144226903'))) ORDER BY ((((680137735)AND((- (-1240277433)))))OR(((vt1.c0)<=(vt1.c0)))) ASC  NULLS LAST LIMIT 341961013;SELECT ALL (SUM(vt0.c0) IN ()) FROM vt0, vt1; -- 0ms;
SELECT MIN((vt1.c0 IN (vt0.c1))) FROM vt1 WHERE (NULLIF(DISTINCT (((('')AND(x'50fd')))AND('0.8624339978081411')), ((((0.1654167936927221)OR(x'')))OR(NULL)))) GROUP BY ((CAST(-1340213835 AS NUMERIC))|((vt0.c1 IN (vt0.c1, vt1.c0)))), ((vt1.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) AND (((((vt0.c1)AND(vt1.c0)))OR(vt0.c0)))), CAST(vt0.c0 AS REAL) COLLATE NOCASE, ((((((((json_array_length(x'', '0.830207846043906'))OR((((vt1.c0))<>((vt1.c0))))))OR((+ (vt0.c1)))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c1 IN ()))), vt0.c1;SELECT DISTINCT ((((vt0.c1)<<(vt1.c0))) IS TRUE) FROM vt0;SELECT ALL ((TRIM(DISTINCT vt1.c0, vt0.c1)) ISNULL) FROM vt0;SELECT DISTINCT ((((vt1.c0 COLLATE NOCASE)OR(((vt0.c0)==(vt1.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN x'' WHEN vt0.c1 THEN vt0.c0 END)) FROM vt1;SELECT ALL AVG(1.047175283E9) FROM vt1, vt0; -- 0ms;
SELECT ALL NTH_VALUE((+ (((vt0.c1) ISNULL))), ((TYPEOF(vt1.c0))&((- (vt0.c1))))) OVER (), CAST(vt1.c0 AS TEXT), (- (x'6a99')) FROM vt0, vt1;SELECT DISTINCT MIN(NULL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT '' FROM vt1, vt0 WHERE ((((+ (-2.099723687E9)))IS((+ (x'2716'))))) LIMIT 518513286 OFFSET 542714753; -- 1ms;
SELECT DISTINCT MIN(json_valid(vt0.c1)), CASE LIKELIHOOD(vt0.c0, 0.9824048881887464)  WHEN ((vt0.c0) IS TRUE) THEN CAST(vt0.c1 AS NUMERIC) ELSE ((vt0.c0) ISNULL) END, ((MIN(vt1.c0)) IS TRUE) FROM vt0 WHERE (((CAST(NULL AS TEXT))OR((('n-') ISNULL))));SELECT (((((vt0.c0 IN ()))AND(((((vt1.c0)OR(vt1.c0)))OR('865161284')))))OR(((vt0.c1) IS FALSE))), x'', ((((((((((vt1.c0) NOTNULL))AND(vt1.c0 COLLATE NOCASE)))AND(x'c9ed')))OR(((vt0.c0)||(vt0.c0)))))AND(rtreenode(vt0.c0, vt0.c1))) FROM vt1, vt0 WHERE ((((((NULL)) BETWEEN (('1344493449')) AND ((-2081693014))))-((((NULL)) BETWEEN (('1252092603')) AND (('0.16064274040200932')))))) LIMIT 1963924214 OFFSET 1044805328; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)>(vt0.c1 COLLATE NOCASE)), SUM((vt0.c1 IN ())) OVER (), (('MuOA_A')-(NULLIF(vt1.c0, 0Xfffffffff9b1ee31))) FROM vt0;SELECT DISTINCT GROUP_CONCAT(CAST(vt1.c0 AS INTEGER)) OVER (), ((CAST(vt0.c0 AS BLOB)) NOT BETWEEN ((vt0.c0 IN ())) AND (vt1.c0)), (((((vt0.c0 IN ()))OR(vt0.c0 COLLATE NOCASE)))AND(CAST(vt0.c1 AS NUMERIC))) FROM vt0 WHERE (CASE ((0xffffffffef9ac94d) IS TRUE)  WHEN (('1252092603')IS NOT(x'6ade')) THEN ((NULL) ISNULL) END);SELECT DISTINCT (((vt1.c0 COLLATE NOCASE))==((0.7910540402392241))), (((NOT (vt0.c1))) IS FALSE), FIRST_VALUE(((((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))||((((vt1.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt1.c0)))))) OVER () FROM vt1 WHERE (CASE (NOT ('-1833009163'))  WHEN ((NULL) IS FALSE) THEN ((0.5544887007846806)&('1044805328')) END) LIMIT 1080213298 OFFSET -1380562377;SELECT DISTINCT (- (((x'')LIKE(vt1.c0)))) FROM vt0;SELECT DISTINCT CASE WHEN (vt0.c1 IN (vt0.c0)) THEN vt0.c0 END, vt0.c1, 1.847016343E9, ((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))!=((~ (vt1.c0)))), (vt0.c1 IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (((vt0.c0 IN ()))/(CASE vt1.c0  WHEN x'' THEN '1786292463' END)), (+ (((((((((vt0.c0)OR(0.5945516332825692)))OR(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))) FROM vt0, vt1 WHERE (((NULL)<>(((0X7a37b916) BETWEEN (0.46040826344790564) AND (0.9463863030921346))))) LIMIT 808393964 OFFSET 1846803645; -- 0ms;
SELECT (((((vt0.c0))>((vt0.c0)))) NOTNULL), CAST((((NULL))<=((vt0.c0))) AS BLOB), (((vt0.c1)IS(NULL)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(vt1.c0) OVER () FROM vt1, vt0; -- 1ms;
SELECT vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT SUM(CASE vt0.c1  WHEN vt0.c1 THEN ')jm2f!꣯' WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END COLLATE RTRIM), ((vt0.c1 IN ()) IN (((vt0.c0)>=(vt0.c0)))), ((((vt0.c1)/(vt0.c1))) BETWEEN (CASE WHEN vt0.c1 THEN vt0.c1 END) AND (((vt1.c0)LIKE(vt0.c1)))), (vt0.c0 IN (vt0.c1)), (((((('')OR(vt0.c0)))AND(vt0.c0)))>>(((('17'))<((0.4322213922836048))))) FROM vt1 WHERE ((((+ (0X51bc07b6))) BETWEEN (((x'')+(-883458321))) AND (CASE WHEN 0.3348167399556766 THEN '-437503371' WHEN 0.5515792297138283 THEN '544534133' WHEN 0.882843888862895 THEN x'' END))) GROUP BY NULL, ((0.2344620569446796) BETWEEN (vt0.c1 COLLATE BINARY) AND (((vt0.c0) ISNULL))), vt1.c0, ((((((vt0.c0)>>(vt1.c0)))OR((((('-1782911858')AND(vt1.c0)))OR(vt0.c0)))))AND((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((0.49077580086513983))))), (((- (vt1.c0)))+((+ (vt1.c0)))) HAVING ((CAST(vt0.c1 AS INTEGER))LIKE((- (vt1.c0)))) ORDER BY CAST(0.05124624117294452 AS TEXT) ASC, json_quote(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))) DESC, vt0.c0 DESC;SELECT DISTINCT 0.1506311132283028, CASE CAST(vt0.c1 AS NUMERIC)  WHEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END THEN (vt0.c0 IN (vt0.c1)) ELSE vt0.c1 END, ((((vt0.c1))==((vt0.c1))) IN ()), CAST(((vt0.c1)*(vt0.c1)) AS NUMERIC), (((((vt1.c0, vt1.c0, 451197289)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.c0, 0.5075254515869285, NULL)))) BETWEEN (CASE vt1.c0  WHEN vt1.c0 THEN 0x47429b5e END) AND (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END)) FROM vt1;SELECT ALL (+ ((((vt1.c0))>((vt0.c1))))) FROM vt0, vt1 ORDER BY ((((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<>((vt0.c0 IN ())))  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((((((((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(x'')) COLLATE NOCASE COLLATE RTRIM FROM vt0;SELECT DISTINCT COUNT(*) FROM vt1, vt0; -- 1ms;
SELECT ALL (MIN(vt0.c1) IN ()), (((((vt1.c0)<>(x''))))!=(((vt0.c1 IN ())))), vt0.c0 FROM vt1 WHERE (((((((((('oy')AND('gk')))OR(NULL)))AND(NULL)))OR(0.9649828409049253)) IN ()));SELECT DISTINCT ((NULL)<=(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)), AVG(NULL) OVER (), (((vt1.c0 COLLATE NOCASE))<=((((0.9410240211255934) ISNULL)))) FROM vt0 WHERE (((CASE WHEN NULL THEN NULL END)IS NOT(((((0.9910737624760179)OR('-1306854032')))AND(x'')))));SELECT DISTINCT CASE WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)) THEN COUNT(vt0.c1) ELSE ((vt0.c0)+(vt0.c1)) END, LAG(IFNULL((NOT (vt0.c1)), ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))), (- (CAST(vt0.c0 AS BLOB))), (- (x''))) OVER (), CASE ((vt1.c0) ISNULL)  WHEN ((vt1.c0)>=(vt0.c0)) THEN vt1.c0 WHEN (- (vt1.c0)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) THEN LTRIM(vt1.c0, vt1.c0) ELSE (NOT (vt0.c0)) END FROM vt0 WHERE (((((NULL) IS FALSE))<(0.05084400734677719 COLLATE RTRIM)));SELECT ALL vt0.c1 COLLATE RTRIM FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT ALL ((((0.5080891043301577)OR(((((vt0.c0)AND(NULL)))OR(vt0.c1)))))AND(LIKELY(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c1 IN ()) THEN vt0.c1 ELSE ((vt1.c0)>>(vt0.c1)) END FROM vt0 WHERE ((CAST(0.21904476497522296 AS BLOB) IN ()));SELECT DISTINCT CUME_DIST() OVER () FROM vt1, vt0 WHERE (load_extension((NOT ('')))) GROUP BY (((((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))))IS(-771975366)), ((((((((((vt0.c1)OR(vt0.c0)))OR(((vt0.c0)-(vt0.c0)))))OR(vt0.c1)))AND((((vt0.c1, vt0.c0, vt0.c1))==((vt0.c0, vt1.c0, NULL))))))OR(((vt0.c0) BETWEEN (vt1.c0) AND (vt1.c0)))), NULL;SELECT ((CAST(vt1.c0 AS NUMERIC))==(((((vt0.c0)AND('2p^DX|')))AND(vt0.c1)))) FROM vt0 WHERE (0.42325875015533854);SELECT DISTINCT ((COUNT(vt1.c0)) NOT BETWEEN (json_array_length(vt1.c0)) AND (((vt0.c0)<<(vt0.c0)))), ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END) IS FALSE), COUNT(*) FILTER(WHERE (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) IN ())) OVER () FROM vt1;SELECT 0.46040826344790564 FROM vt0; -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt1.c0 END)+(((vt1.c0)/(vt1.c0)))) FROM vt0 WHERE ((((((0X2f0f1ae8, NULL, 0.5301830158062812, 0.11879362788175951, '-1781937890'))<((0.05344888738072551, 'jM#D', 7.8951908E8, '4d^M', NULL))))+(((('876539316'))>((x'0a1a0569'))))));SELECT ('' IN ()), TOTAL(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))) OVER (), (((LIKELY(vt1.c0)))<>(('-592499223'))), (TYPEOF(vt1.c0) IN ()), PERCENT_RANK() OVER () FROM vt1;SELECT ((COUNT(*)) IS TRUE), (HEX(DISTINCT vt1.c0) IN ()), CAST(x'' AS INTEGER) FROM vt1, vt0 WHERE (CASE MIN(NULL, NULL)  WHEN (- ('5M	xxN뿕Y')) THEN (~ ('-1665364982')) END); -- 0ms;
SELECT ((x'')&(0.10054341556340607)), CAST(MIN(vt1.c0) AS BLOB), ((((vt0.c0) NOTNULL))<=(LIKELIHOOD(0.1624981532133637, 0.902038952224993))) FROM vt1;SELECT ((((COUNT(vt0.c1))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(x'4d7c')), ((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM, ((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))*((vt1.c0 IN ()))) FROM vt0, vt1; -- 0ms;
SELECT ((((('\nT'))>=((vt0.c1)))) BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0))) AND ((('-2096663825') IS TRUE))) FROM vt0 WHERE ((((-1546614312 IN (x'', -547332063))) IS TRUE)) ORDER BY (+ (vt0.c1)) COLLATE RTRIM;SELECT (((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)) IN (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)), (vt0.c1 IN ()))) FROM vt1, vt0 WHERE (LOWER(((0.35136225640389773)LIKE(NULL)))) ORDER BY CAST(0Xffffffffd3f4a759 AS INTEGER) LIMIT -383282265 OFFSET 1544611436; -- 0ms;
SELECT DISTINCT MIN(((vt0.c0)&(vt0.c0))), ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM, (NOT (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt0, vt1 ORDER BY (((vt0.c0)) BETWEEN ((CAST(vt1.c0 AS REAL))) AND ((CAST(vt1.c0 AS REAL))))  NULLS FIRST, (((vt0.c1 COLLATE NOCASE))==((CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)))  NULLS FIRST, (('-113609090') ISNULL); -- 0ms;
SELECT DISTINCT x'', LEAD((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))<=((((vt0.c0) NOT BETWEEN (NULL) AND (vt0.c1))))), ((vt0.c0 COLLATE NOCASE)|(CAST(vt0.c0 AS TEXT))), (((0.8629713260391064 IN (0Xffffffffbf01fab5)))>=(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1))))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP), GROUP_CONCAT((- (vt0.c1))) FILTER(WHERE ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))>=(((NULL)IS NOT(vt1.c0))))) OVER () FROM vt0 WHERE ((~ (((('-632983931')) NOT BETWEEN ((-1339487039)) AND ((x''))))));SELECT DISTINCT 'Y' FROM vt1 NATURAL JOIN vt0 WHERE (CAST(UPPER(DISTINCT NULL) AS TEXT)); -- 1ms;
SELECT DISTINCT ((CAST(vt1.c0 AS TEXT)) BETWEEN (((vt1.c0)=(vt0.c0))) AND (CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)) FROM vt1 ORDER BY ((((vt1.c0 COLLATE BINARY)AND(((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))))OR((vt0.c1 IN ()))) ASC LIMIT -1340213835;SELECT DISTINCT 0.41037873097821775 FROM vt0, vt1 WHERE (LOWER((NOT ('')))); -- 0ms;
SELECT ALL (((vt0.c0 IN ())) NOT NULL), (((vt0.c0)+(vt0.c0)) IN ()), MIN(COUNT(SUM(vt0.c1))), (((((((vt0.c0)OR(vt1.c0)))AND(vt1.c0))))>((CHANGES()))), (((vt0.c0)) BETWEEN (((vt0.c1 IN ()))) AND ((((((((((vt1.c0)AND(vt0.c0)))OR(NULL)))OR(vt0.c1)))AND(vt0.c1))))), (+ (vt0.c1 COLLATE RTRIM)), (((vt0.c1 IN ())) ISNULL) FROM vt1, vt0 WHERE ((((NULL) IS FALSE) IN (CHANGES())));SELECT ((vt1.c0)AND(CAST(vt0.c0 AS NUMERIC))) FROM vt1 WHERE ((((x'')) NOT BETWEEN ((((0.6296099899732359) BETWEEN ('.Q') AND ('-1014435426')))) AND ((('' IN (0.010801638003544944))))));SELECT (((NOT (vt0.c1))) NOT NULL) FROM vt0, vt1 WHERE ((((('' COLLATE NOCASE)OR((~ (0.5166035725987437)))))AND((x'b301' IN ())))); -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c0, vt1.c0)) BETWEEN (((vt0.c0 IN (vt1.c0)), SUM(vt1.c0), ((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))OR(vt1.c0)))OR(vt0.c0)))) AND (('', 0.5496686288393612, ((vt0.c1)<(vt0.c0))))) FROM vt0 GROUP BY vt1.c0 COLLATE RTRIM;SELECT LAST_INSERT_ROWID() FROM vt0, vt1 NOT INDEXED; -- 0ms;
SELECT CASE WHEN LOWER(vt0.c1) THEN '' ELSE vt0.c1 END FROM vt1;SELECT ALL CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 END AS INTEGER), (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))) IS TRUE), ((((CAST(vt0.c0 AS TEXT))AND(MIN(vt0.c1))))OR(GROUP_CONCAT(vt1.c0))) FROM vt1;SELECT DISTINCT -1380562377, (((vt0.c1)AND(vt0.c1)) IN ()), IFNULL(DISTINCT ((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)), ((vt1.c0) NOTNULL)) FROM vt0, vt1 WHERE (((NULLIF(NULL, NULL)) IS FALSE)); -- 0ms;
SELECT ALL SUM(((((vt0.c0)OR(vt0.c0)))OR(vt0.c0))) OVER (), ((UNICODE(vt0.c1)) ISNULL), ((NULL) IS TRUE) FROM vt1;SELECT ALL TOTAL((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) COLLATE RTRIM) OVER (), ((((((vt1.c0)AND(vt0.c0)))OR(vt0.c0)))<(((vt0.c0)%(x'')))), (((vt0.c0)) BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((((vt0.c1)>>(vt0.c1))))) FROM vt1, vt0 WHERE (((x'c3b3')-(0.35369669417894034))); -- 1ms;
SELECT DISTINCT ((((CASE x''  WHEN vt0.c1 THEN vt1.c0 END)OR(((vt1.c0)!=(vt1.c0)))))AND((vt0.c0 IN ()))) FROM vt1 WHERE ((~ (((((x'')AND(NULL)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((x'91b3')%(0.39960401794210465 COLLATE BINARY)), HEX(DISTINCT (~ (vt0.c0))), ((((((((((((NULL)OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(((vt0.c0) IS TRUE))))OR(TOTAL(vt0.c0))) FROM vt1, vt0 WHERE (CAST(((NULL)>(NULL)) AS BLOB)); -- 0ms;
SELECT ALL SUM('1663436503') OVER () FROM vt1; -- 0ms;
SELECT ALL vt1.c0 COLLATE NOCASE, vt0.c1, (((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((((0.12701814770874043)<<(vt1.c0)), ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)), LIKELIHOOD(DISTINCT NULL, 0.9229992899984819))) AND ((CAST(vt0.c1 AS INTEGER), ((vt1.c0) IS TRUE), (~ (vt0.c1))))) FROM vt1 WHERE ('ln0T');SELECT ALL MIN(CAST(vt1.c0 AS TEXT)) FROM vt1, vt0 WHERE (((CASE WHEN NULL THEN x'' ELSE 'A1' END)LIKE('1189502859' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)>>(vt1.c0))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (TOTAL(vt0.c0))) FROM vt0 WHERE ((((-1704589062 IN ())) ISNULL)) GROUP BY (((vt1.c0 IN ())) IS TRUE), CASE (- (0.6572169460748998))  WHEN (+ (vt0.c0)) THEN CASE vt1.c0  WHEN NULL THEN vt1.c0 END END, ((((vt1.c0)>>(x'7941')))+(CAST(vt0.c0 AS TEXT))), '789519080', ((((vt0.c0)GLOB(''))) IS TRUE) HAVING CASE MIN(vt0.c1)  WHEN ((vt0.c1) NOTNULL) THEN ((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1)) WHEN (x'' IN (vt1.c0, vt1.c0)) THEN (((vt1.c0))>((vt0.c1))) WHEN (+ (vt0.c1)) THEN MIN(vt0.c1) WHEN CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END THEN CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END WHEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN 1.047175283E9 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END THEN (~ (5.44534133E8)) END;SELECT (((vt0.c1 IN (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((vt0.c0)LIKE(vt0.c1)))) FROM vt0 WHERE ((((NULL))=(((((x'34a3ba98')) BETWEEN ((NULL)) AND ((NULL)))))));SELECT ((vt1.c0) BETWEEN (CASE WHEN vt0.c1 THEN vt1.c0 END) AND (((vt0.c0)-(vt1.c0)))) FROM vt0 WHERE (CASE WHEN 0.766423009063515 THEN (('') NOTNULL) ELSE ((0.19387852144226903)&('-888183582')) END);SELECT (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND (('')))) NOT NULL) FROM vt1, vt0; -- 0ms;
SELECT PRINTF(SUM(vt0.c1), ((vt0.c0) NOT BETWEEN (NULL) AND (-87732159)), ((NULL) NOT NULL), ((vt1.c0)%(vt0.c1)), ((vt1.c0) NOT NULL)) FROM vt0;SELECT DISTINCT COUNT(*) FROM vt1; -- 0ms;
SELECT DISTINCT COALESCE(SUM(vt0.c0), HEX(DISTINCT vt1.c0)) FROM vt0, vt1 WHERE (((((((NULL)OR(NULL)))AND(x'')))>(((-888183582) BETWEEN (NULL) AND (0.8629713260391064))))); -- 0ms;
SELECT DISTINCT CASE vt0.c1 COLLATE BINARY  WHEN ((vt0.c0) NOT NULL) THEN ((vt1.c0)/(vt1.c0)) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)/(0.8620026362015556))) IS TRUE) FROM vt0, vt1 WHERE ((((+ (NULL)))<<(((NULL)<(x'8422'))))); -- 0ms;
SELECT ALL ((NOT (vt0.c1)) IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT (- (MAX(vt0.c1, vt0.c0, vt0.c1, vt0.c1))) FROM vt0 WHERE ((((0.39739383426726105) ISNULL) IN ())); -- 0ms;
SELECT ((((vt1.c0) NOT BETWEEN (vt0.c0) AND (-1.704589062E9))) NOT BETWEEN (0Xffffffffc388f19e) AND (vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE (((((((NULL) NOT BETWEEN (NULL) AND (x'')))OR(((0.2632486333174823) IS TRUE))))AND('-113609090' COLLATE BINARY)));SELECT ALL GROUP_CONCAT(UPPER(DISTINCT vt0.c1)) OVER (), CASE ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))  WHEN (vt0.c1 IN ()) THEN '.Q' ELSE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END, (((((((vt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))AND((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((x''))))))OR(((vt1.c0) NOTNULL))) FROM vt0, vt1 WHERE ((((-154347798 IN (0.6355377150381276))) IS FALSE)); -- 1ms;
SELECT DISTINCT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT ALL ((((vt0.c0)<>(vt0.c0))) NOT NULL), ((((vt0.c1)AND(TOTAL(NULL))))OR(((vt1.c0)<=(0.5789711093567479)))), (COALESCE(vt0.c0, x'5136508b', vt1.c0, vt0.c0) IN (((vt0.c1)>(NULL)))) FROM vt0;SELECT vt1.c0 FROM vt1 WHERE ((((((('Bf%')OR('')))OR('-1449655154')))||(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT ((((x'')=(vt0.c0)))>>((((vt0.c0))<=((vt0.c0))))), ((CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) NOT BETWEEN (((NULL)AND(vt1.c0))) AND (AVG(vt1.c0))), (- (((vt0.c1)<<(vt0.c1)))), CHANGES(), CAST((vt0.c1 IN ()) AS TEXT) FROM vt1, vt0 WHERE (((('!O3}' IN ()))<(((((((((0.10268471480214969)AND(0.9031187929397547)))OR(471801221)))AND(0Xffffffffd9d41d7c)))OR(0.9012616688125525))))) LIMIT 680137735; -- 0ms;
SELECT ((((((((vt1.c0 COLLATE NOCASE)AND(((vt0.c0)-(vt0.c1)))))AND(CAST(vt0.c0 AS BLOB))))OR(x'')))AND(((vt1.c0) IS FALSE))) FROM vt0 NATURAL JOIN vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((PRINTF(vt0.c0, vt1.c0, vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND ((vt1.c0 IN (NULL, vt0.c1)))) FROM vt1 WHERE (((((0.10912343405077074) IS FALSE))%(((0Xffffffffa2a08642) NOT BETWEEN ('') AND (NULL))))) ORDER BY ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0))) NOTNULL), ABS(NULL);SELECT DISTINCT (NOT ((- (vt0.c1)))) FROM vt0, vt1 WHERE (NULL) ORDER BY (+ (DATE(vt0.c0, vt1.c0, vt0.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT DATETIME(((x'bfdc')+(vt0.c1)), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END, ((vt1.c0)<(vt0.c1)), (+ (vt0.c1)), CAST(vt0.c1 AS TEXT)) FROM vt0, vt1 WHERE (((CASE WHEN NULL THEN x'' WHEN x'd3bd' THEN x'42ca' WHEN NULL THEN 0.8099572889690007 ELSE '1344493449' END) BETWEEN (((x'')LIKE(0x7fffffffffffffff))) AND ((((x'')) NOT BETWEEN ((0.9031187929397547)) AND (('')))))); -- 0ms;
SELECT DISTINCT ((x'')+('\nB')) FROM vt0, vt1 WHERE (((((((((((-841884125)AND('-1627267676')))OR('d')))AND(0X6616328c)))AND(x'57177db7'))) BETWEEN (((((((((((((-1216162979)OR('-428576040')))OR(0.7396057413380527)))AND(x'c966')))OR('-1706346207')))AND(471801221)))AND(0.10363430937331841))) AND (x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT COUNT(((vt1.c0)AND(vt0.c0))), ((((vt1.c0) IS TRUE))>=(((vt1.c0)+(vt0.c1)))), (((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))))<=((vt0.c1))) FROM vt1, vt0; -- 0ms;
SELECT ALL CASE (vt1.c0 IN ())  WHEN ((vt1.c0)<<(vt1.c0)) THEN (vt0.c1 IN ()) ELSE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((x'9992') NOTNULL) IN ((vt0.c1 IN ()))) FROM vt1 WHERE (NULLIF((NULL IN ()), (((NULL, '', 'rfg⮁', '-154347798', x''))<((NULL, 0.6296099899732359, x'', NULL, 1e500))))); -- 0ms;
SELECT DISTINCT ((0Xffffffffc6282b01)==(((vt1.c0) NOT NULL))) FROM vt1, vt0; -- 0ms;
SELECT vt0.c1, ((vt0.c0)>=(vt0.c0)) COLLATE NOCASE, vt0.c1 FROM vt0, vt1 WHERE ((((('o''7a7kv')AND('-883586039'))) NOTNULL)) GROUP BY (vt0.c0 COLLATE BINARY IN (0.4613739771688876)) LIMIT -930737679; -- 1ms;
SELECT DISTINCT LAG(CAST(((vt1.c0)%(vt1.c0)) AS INTEGER), ((((((vt1.c0)LIKE(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))))AND((NOT (vt1.c0)))), ((((((vt1.c0) NOT NULL))OR(((vt1.c0) NOTNULL))))AND(-8.83586039E8))) OVER ( GROUPS (((((vt0.c1 IN (vt0.c1, vt1.c0, vt1.c0)))OR((NOT (vt0.c1)))))OR(vt0.c1)) PRECEDING EXCLUDE TIES), CASE vt1.c0 COLLATE RTRIM  WHEN ((vt0.c1)IS NOT(vt1.c0)) THEN ((((vt0.c1)AND('')))OR(vt1.c0)) ELSE ((vt0.c1) IS TRUE) END, CHANGES() FROM vt1;SELECT ALL AVG(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1))) OVER (), ((- (vt1.c0)) IN ()), ((x'')%(CASE WHEN vt1.c0 THEN NULL END)) FROM vt0 WHERE (((((('h', NULL, x'06ff', x'', NULL)) NOT BETWEEN ((NULL, '0+pa.ৌW', 0xffffffffc51aef80, '-1306854032', 0.9681809691111065)) AND (('>MHJ\N|', 0xffffffffebf2f848, x'', NULL, '-1452954616')))) BETWEEN ((('-632983931') BETWEEN ('-115441741') AND (x''))) AND (CAST(NULL AS NUMERIC))));SELECT ALL CASE WHEN CAST(vt1.c0 AS BLOB) THEN CAST('843501276' AS NUMERIC) WHEN CAST(vt0.c0 AS REAL) THEN CASE vt0.c0  WHEN vt1.c0 THEN ' +z0Pr5' ELSE vt1.c0 END WHEN CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END THEN ((vt0.c0)AND(vt0.c1)) WHEN CAST(1017029806 AS NUMERIC) THEN ((vt1.c0) IS FALSE) WHEN ((vt0.c1) NOT BETWEEN (-1979705698) AND (-6.40410244E8)) THEN ((vt1.c0)IS(vt1.c0)) ELSE vt0.c0 END FROM vt0 WHERE ((+ ((('-1449464388') BETWEEN ('-383282265') AND (0.3557920533130662)))));SELECT DISTINCT (('1963924214') ISNULL) FROM vt1 WHERE (CAST(((NULL) BETWEEN ('-771975366') AND (x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NULLIF(TOTAL(vt0.c1), (('?뉝8L^D')==(vt1.c0))), vt0.c0, ((0X5c10e66c)LIKE(CAST(vt0.c0 AS REAL))), (((((((NULL)AND(vt1.c0)))AND(vt0.c0)), (((vt1.c0, vt0.c0, vt0.c0))>=((vt0.c1, vt0.c1, vt0.c0))), CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 END, vt0.c1, vt0.c1))>((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)), (('eI[0h0') ISNULL), CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt1.c0 END, vt0.c0 COLLATE NOCASE, ((vt1.c0)LIKE(vt0.c1))))), NULL FROM vt1, vt0 WHERE ((((((x'7f38')) NOT BETWEEN ((x'')) AND ((0.46226057155424904))))<=((NOT (0xffffffffaa90de00))))); -- 0ms;
SELECT ALL (((((vt0.c1, vt0.c1, vt0.c1))<((vt1.c0, vt1.c0, vt0.c1))))AND(GROUP_CONCAT(vt0.c1))), LIKELIHOOD(DISTINCT vt0.c1, 0.7321751567863424) COLLATE NOCASE, ((((NULL) IS FALSE)) ISNULL) FROM vt1 WHERE (((((0.5544887007846806) BETWEEN ('') AND (1.734524885E9)))<=(json_array(0.12701814770874043, x''))));SELECT DISTINCT COUNT(*) FROM vt1, vt0 WHERE ((('*\')<(((0Xffffffffcf935e25) NOT NULL)))); -- 1ms;
SELECT DISTINCT 0.25313388102044565 COLLATE RTRIM, COUNT(*), TOTAL(((vt0.c1)GLOB(vt1.c0))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT NULL, LIKELIHOOD(vt0.c0, 0.7532229562622798), CUME_DIST() OVER () FROM vt0 WHERE ((((NULL)/(0.37200372842336593)) IN ())); -- 0ms;
SELECT DISTINCT RANK() OVER ( ORDER BY ((vt0.c0) IS FALSE)), MAX(((vt0.c1) IS FALSE)), ((CAST(vt0.c1 AS BLOB)) IS FALSE), MAX(CAST(vt1.c0 AS INTEGER)), CAST(NULLIF(DISTINCT vt1.c0, x'6d8edf30') AS NUMERIC), (((((vt0.c1))>=((vt0.c1))))IS((NOT (vt1.c0)))), CASE ((vt1.c0)>>(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN ((vt0.c0)=(vt0.c1)) WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c1)>>(vt0.c0)) WHEN CASE WHEN vt0.c0 THEN '0.5310567630787135' END THEN NULL ELSE json_array_length(vt0.c1) END FROM vt1;SELECT ((((((vt0.c0)AND(vt1.c0)))AND(0xffffffff81e2e28e))) NOT BETWEEN ((((x'5f35'))<((vt0.c0)))) AND ((vt0.c0 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))OR(((vt0.c1)AND(vt1.c0)))))OR(LENGTH(vt0.c0))) FROM vt0;SELECT ALL (~ ((vt1.c0 IN ()))) FROM vt0, vt1; -- 0ms;
SELECT CASE vt1.c0 COLLATE BINARY  WHEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN COUNT(vt0.c0) THEN vt0.c0 COLLATE NOCASE WHEN ((vt1.c0) ISNULL) THEN GROUP_CONCAT(vt1.c0) END, (((vt1.c0 IN ())) ISNULL), (AVG(vt0.c1) IN ()) FROM vt0, vt1 WHERE ((((NULL IN ())) ISNULL)); -- 0ms;
SELECT DISTINCT '5*' FROM vt1 WHERE (((((x'0c42')/('쥍3\Ck_')))!=('Bf%' COLLATE NOCASE))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS BLOB) COLLATE RTRIM FROM vt0 WHERE ((((NULL))<>(('] E/'))) COLLATE RTRIM); -- 0ms;
SELECT ALL vt0.c1 FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), '-592173531', ((((GROUP_CONCAT(NULL))AND(((vt1.c0)AND(vt0.c0)))))OR(vt0.c1)) FROM vt1 LIMIT 1734524885 OFFSET -771975366;SELECT DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c0) AND (0.5133922460558042)) COLLATE RTRIM FROM vt1 WHERE ((NOT (((NULL)<=(0.8711178547251515)))));SELECT ALL CASE WHEN vt0.c1 THEN ((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)) ELSE ((vt0.c0)<=(vt0.c0)) END FROM vt0, vt1 WHERE (CASE WHEN NULL THEN ((x'cdd8')<('U霺pAN{')) ELSE (0x627866fe IN ()) END); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((0.4441747705168344)) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))) FROM vt1;SELECT ALL vt0.c1, (~ (((vt1.c0)-(vt0.c0)))), MIN(((vt0.c0) IS TRUE)) FROM vt0, vt1 WHERE (((((NULL) IS FALSE))==(((0.04795560078761285)>(NULL))))); -- 0ms;
SELECT DISTINCT (+ ((NOT (vt0.c0)))), TRIM(DISTINCT vt0.c0, vt1.c0) COLLATE NOCASE, (+ (AVG(vt1.c0))) FROM vt1;SELECT DISTINCT TOTAL(((x'b07d')<=('-132444193'))) FROM vt1; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (((((NULL)LIKE(0.2429676951235764)))IS((('-1967139869')GLOB('-1306854032'))))); -- 0ms;
SELECT ((((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))/(((vt0.c1) IS FALSE))), (~ (vt1.c0)) COLLATE BINARY, TRIM(vt1.c0, ((vt0.c0) NOT NULL)) FROM vt1, vt0 WHERE (CASE NULL  WHEN COALESCE('l', '0.4322213922836048') THEN (NOT (0x620e27a5)) WHEN ((0Xffffffffcd8138f8)OR('')) THEN ((x'1016')*(x'ebc4')) WHEN ((0.6045493615974464)||(0.05344888738072551)) THEN (('eI[0h0') NOT BETWEEN (0.399599208809302) AND (0.9568698839168417)) ELSE TYPEOF(NULL) END); -- 0ms;
SELECT DISTINCT (HEX(vt1.c0) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((NULL) NOT NULL)) FROM vt0, vt1 WHERE (((x'' IN ()) IN ())); -- 0ms;
SELECT DISTINCT AVG(LTRIM(vt1.c0, vt0.c1)) OVER (), MAX(((((vt0.c0)AND(vt0.c0)))OR(vt0.c1))), ((vt1.c0) BETWEEN (TOTAL(vt0.c0)) AND (TRIM(DISTINCT vt0.c1, vt0.c1))) FROM vt0;SELECT DISTINCT ((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) FROM vt1 NOT INDEXED WHERE (((CASE WHEN NULL THEN -492670784 END) NOTNULL)); -- 1ms;
SELECT (((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((CASE vt1.c0  WHEN vt0.c1 THEN '' WHEN vt0.c0 THEN 0.6666368057570512 WHEN vt0.c1 THEN vt1.c0 END, vt0.c1, ((vt1.c0) IS FALSE))) AND (('459293018', ((vt1.c0)<=(vt0.c0)), ((vt0.c0)<<(vt1.c0))))), (~ (vt0.c1)), (((((((vt0.c0)AND(vt0.c1)))OR(vt0.c0)), (vt1.c0 IN ()), ((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0))))<=(((NOT (vt1.c0)), (- (vt0.c0)), CAST(vt0.c0 AS REAL)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1) COLLATE BINARY FROM vt0, vt1; -- 0ms;
SELECT DISTINCT x'', FIRST_VALUE(vt1.c0) OVER (), ((CASE WHEN vt0.c1 THEN vt1.c0 END) IS TRUE) FROM vt1;SELECT DISTINCT ((vt0.c1 COLLATE RTRIM)/(vt0.c1)), (GROUP_CONCAT(0.1084291725115728) IN ()), 0.2866662919535645 FROM vt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY x'' DESC) FROM vt0, vt1 WHERE ((((0x6a470913 IN ())) BETWEEN (CASE WHEN x'' THEN 'A]' END) AND (INSTR(x'', x'')))) LIMIT -885971875 OFFSET 732659661; -- 0ms;
SELECT DISTINCT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))OR(((vt1.c0) IS FALSE))) FROM vt1, vt0 WHERE ((((((x'45d1', NULL, '	Q', 0.21975074360755786, x''))>((NULL, 0.7925423704756439, '-1546614312', -1.240277433E9, NULL)))) NOT BETWEEN ((((NULL))>=((NULL)))) AND (GLOB('xs', '1786292463')))); -- 0ms;
SELECT DISTINCT CASE ((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))  WHEN ((vt0.c0) NOTNULL) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) ELSE vt0.c0 END FROM vt1, vt0 WHERE ((- ((((NULL, '-1706346207', x'', NULL, x''))<(('%my', '0.2429676951235764', x'', x'', '\r.1(c*')))))); -- 0ms;
SELECT ALL CASE WHEN (vt1.c0 IN ()) THEN CAST(vt0.c1 AS NUMERIC) END, TOTAL(((vt0.c1) NOT BETWEEN (vt0.c0) AND (-2.135781239E9))) COLLATE RTRIM, CAST(((vt1.c0) IS FALSE) AS NUMERIC), COALESCE(DISTINCT ((vt1.c0)==(vt0.c1)), vt1.c0), AVG((((vt0.c1))!=((vt0.c0)))) OVER () FROM vt1, vt0 WHERE (((x'bb41')&((('876539316') ISNULL)))); -- 0ms;
SELECT DISTINCT (vt0.c0 COLLATE NOCASE IN ()) FROM vt0, vt1 WHERE (((((x'')+('51917597'))) NOTNULL)); -- 0ms;
SELECT SUM(vt0.c1 COLLATE RTRIM) OVER () FROM vt1;SELECT (GROUP_CONCAT(vt0.c0) IN ()) FROM vt0, vt1 WHERE (ROUND(((x'')>('❲19z')), (('-1889862411') IS FALSE))); -- 0ms;
SELECT DISTINCT MAX((~ (vt0.c0)), CAST(vt0.c1 AS INTEGER)) FROM vt1, vt0 WHERE ((((NULL, NULL, NULL)) BETWEEN ((COALESCE(DISTINCT '-919947139', NULL), (('-874630143')-('1221869716')), (0.8414138716897476 IN ()))) AND (((((x'', '*''', 'Bf%')) NOT BETWEEN ((NULL, 0xffffffffadf0e74b, 0.27057021127279746)) AND ((0.14893482632836497, -336398264, x''))), TRIM(DISTINCT 5.708198276564991E-4, ''), CAST(NULL AS NUMERIC))))) GROUP BY (vt0.c1 IN ()) COLLATE NOCASE HAVING vt1.c0; -- 0ms;
SELECT DISTINCT (((NULL))==((vt0.c1))) FROM vt1 WHERE ((((((((((('-1339487039')%(NULL)))AND(((((x'91b9')OR(NULL)))AND('876539316')))))OR(((x'6d73')>=(x'')))))AND(LIKELIHOOD('ｕX>', 0.5841000819692241))))OR(CAST(0.5899202507188059 AS REAL))));SELECT DISTINCT GLOB(vt0.c0 COLLATE BINARY, x'') FROM vt0 WHERE (((((((0.7060377707797926)AND('Mp2iQJY?')))AND('1692929091')))/((+ (NULL))))); -- 0ms;
SELECT DISTINCT vt0.c0, (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN (((((vt0.c0))=((vt1.c0))), CAST(vt1.c0 AS INTEGER), (NOT (vt1.c0)))) AND (((vt0.c0 IN (vt1.c0)), TOTAL(vt0.c0), ((((vt1.c0)AND(vt0.c0)))AND(vt0.c1))))), GROUP_CONCAT(CAST(vt0.c1 AS REAL)) OVER (), ((((((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c0) NOTNULL))), ((vt0.c0)!=(vt0.c1)) COLLATE BINARY FROM vt0, vt1; -- 0ms;
SELECT ALL ((COUNT(*))|((NOT ('-1980346354')))), (+ ((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))), CASE CASE WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN x'68cb' THEN ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END FROM vt0, vt1; -- 1ms;
SELECT ALL CAST(CAST(vt0.c1 AS INTEGER) AS NUMERIC) FROM vt1 WHERE (JULIANDAY((- (NULL)), (('') BETWEEN (522299417) AND ('-2081693014')), ((((x'')OR(0Xfffffffff9eb2319)))OR(0xffffffffcdd1de23)), CASE WHEN x'443f' THEN x'e1d0' END, (NULL IN ())));SELECT CAST(((vt0.c1)=(vt0.c0)) AS NUMERIC), CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN vt0.c0 END THEN NULL ELSE CAST(vt0.c0 AS NUMERIC) END, (~ ((~ (vt0.c0)))) FROM vt1;SELECT DISTINCT LIKE(((vt0.c0) IS FALSE), ((vt0.c1)<=(vt1.c0))) FROM vt0 RIGHT OUTER JOIN vt1 ON ((((((((((vt0.c1) NOT BETWEEN (1.7976931348623157E308) AND (vt0.c1)))OR(((vt1.c0) ISNULL))))OR(CAST(vt1.c0 AS BLOB))))AND(((((vt0.c0)OR(vt1.c0)))OR(vt0.c1)))))AND(0.6074822011955131)) GROUP BY vt1.c0; -- 2ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL))>(((((((((vt0.c1)AND(vt0.c1)))OR(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)))), ((CAST(vt0.c1 AS BLOB)) BETWEEN (json(vt0.c0)) AND (((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))), CASE WHEN vt1.c0 THEN CAST(vt1.c0 AS TEXT) END, vt1.c0, (((vt1.c0 IN ()))-((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM vt1;SELECT ROW_NUMBER() OVER () FROM vt0, vt1 WHERE (((((0.9409078746036011)=(x''))) NOT NULL)) GROUP BY ((x'') IS FALSE), (((vt1.c0 IN ()))>((((vt0.c1))<((vt0.c0))))), json_patch(vt1.c0 COLLATE BINARY, CASE WHEN vt0.c1 THEN vt1.c0 WHEN 'CFDwAL0' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 END);SELECT vt0.c1 FROM vt0, vt1; -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) FROM vt0 WHERE (((x'5cf2' IN (-893540519, NULL)) IN ())) GROUP BY 0Xde3d415 COLLATE RTRIM, ((0.18579674357789044) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1)))) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))), (((vt0.c0)) NOT BETWEEN ((COALESCE('', vt0.c1))) AND (((vt0.c0 IN ())))) LIMIT -477170853;SELECT (((ABS(vt0.c1)))=((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END))), CASE WHEN (vt0.c0 IN ()) THEN vt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END, DATETIME(((vt0.c1)||(vt0.c1)), ((((vt0.c0)OR(vt0.c1)))AND(vt0.c1)), (- (vt0.c0)), ((vt0.c1) IS TRUE), ((vt0.c1)IS(vt1.c0))) FROM vt1 WHERE (((808393964 COLLATE RTRIM)OR((((('')AND(-295135463)))OR(0.6112927755754046)))));SELECT DISTINCT ((((CAST(x'' AS INTEGER))AND(STRFTIME(vt1.c0, vt1.c0, vt0.c0))))AND(vt0.c1)), (((((((((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c1))))OR(((vt0.c1)/(NULL)))))AND(HEX(vt0.c1))))AND(MIN(vt0.c1))))OR((((vt1.c0, vt0.c0, vt0.c0))<=((vt1.c0, vt0.c1, vt0.c0))))), ((((vt0.c0))=((vt0.c0))) IN ()) FROM vt1;SELECT ALL LAST_INSERT_ROWID() FROM vt1 ORDER BY vt0.c1  NULLS FIRST;SELECT COUNT(LOWER(vt0.c0)), vt0.c0, ((((((((((x'')OR('')))AND((((vt1.c0))!=((vt1.c0))))))AND(vt0.c0 COLLATE NOCASE)))OR(RTRIM(vt0.c1))))OR((NOT (vt0.c0)))) FROM vt0, vt1 WHERE ((+ (NULLIF('-275068595', ')JM2F!꣯')))); -- 0ms;
SELECT ALL ((vt0.c1) NOT NULL) FROM vt1 WHERE (COALESCE(DISTINCT MAX(0.3608429153450927, 'ni'), '{''.}j愍?㚋'));SELECT DISTINCT (- (GROUP_CONCAT(vt0.c1))) FROM vt1, vt0 WHERE (((((LIKELY(DISTINCT ''))OR((0xffffffffca0d1e7b IN ()))))AND(x'9230' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(1.044805328E9)))AND(vt0.c0))) BETWEEN (((NULL)>>(vt0.c1))) AND ((((vt0.c0))<=((vt0.c1))))) FROM vt0, vt1 WHERE (((NULL)&(NULL)) COLLATE BINARY) ORDER BY CAST(((vt0.c1)|(vt0.c1)) AS TEXT) ASC; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((vt0.c1)>=(vt1.c0)))) AND ((vt0.c0))), ((MIN(vt0.c1)) NOT BETWEEN (((vt0.c1)IS(vt0.c0))) AND (((vt0.c0)<=(vt0.c1)))), LAST_VALUE(CAST(vt0.c1 AS NUMERIC) COLLATE BINARY) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CHAR(vt1.c0) COLLATE RTRIM FROM vt0 WHERE (x'');SELECT ((((((((((vt1.c0)+(vt0.c1)))AND((vt0.c0 IN ()))))AND(((vt0.c0) IS TRUE))))AND(((vt1.c0)%(vt0.c0)))))OR(((((((((vt0.c0)AND(vt0.c1)))OR(0.8347130639694476)))AND(0X5611bae0)))OR(vt0.c1)))), (+ (vt0.c1)), ((vt0.c0 COLLATE RTRIM)GLOB(MAX(vt0.c1, vt1.c0))) FROM vt0;SELECT ALL CASE TRIM(DISTINCT vt0.c0, vt0.c1)  WHEN vt1.c0 COLLATE RTRIM THEN ((0.7442237530684193)>=(vt1.c0)) ELSE IFNULL(DISTINCT vt1.c0, vt0.c0) END FROM vt0 WHERE ((+ (((-2.75068595E8)%(''))))) LIMIT 518513286;SELECT ALL ((NULL)-(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt1 LIMIT -1832995276 OFFSET -639060108;SELECT ALL (((vt1.c0)) BETWEEN ((vt0.c1)) AND (((('711661720')>(vt0.c1))))) FROM vt0, vt1 WHERE ((((((((('-1154143238' COLLATE RTRIM)AND(((((((((NULL)OR(x'a0af')))OR('-1452954616')))AND(0Xffffffff977976a1)))OR(x'')))))OR(((NULL) IS TRUE))))OR(LIKELIHOOD('-883458321', 0.6464920042986124))))OR(((0.9339416386620262) NOT BETWEEN (0.24971242349466594) AND ('-1546614312'))))); -- 0ms;
SELECT ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (x''))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))), x'', ((((vt1.c0 COLLATE NOCASE)OR(((vt1.c0) IS FALSE))))AND(((vt0.c1)IS NOT(vt1.c0)))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((vt1.c0) NOT BETWEEN (((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) AND (((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))) FROM vt0, vt1 WHERE (((x'' COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT DISTINCT ((AVG(vt1.c0))-(vt0.c0)) FROM vt0, vt1 WHERE ((((- (0X33b5d20a))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((MAX(vt1.c0))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt1.c0 ELSE '864045240' END)))AND(((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))) FROM vt0, vt1 WHERE (((CAST('0.6206155962389638' AS TEXT)) BETWEEN ((0.3912950185511944 IN (0.6931631401054913))) AND (((x'') BETWEEN (0.3129585403975724) AND ('-1625392244'))))); -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN (('')) AND ((((vt1.c0) IS TRUE)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT 0x585397c7 FROM vt0, vt1 WHERE (((((((NULL) BETWEEN (NULL) AND (0.27899379527109414)))OR('fT')))OR(((x'')OR('eYQ,'))))); -- 0ms;
SELECT ((vt1.c0)<(vt1.c0)) COLLATE NOCASE FROM vt0;SELECT ALL ((vt1.c0) NOT BETWEEN (NULL) AND ((vt0.c0 IN ()))) FROM vt1; -- 0ms;
SELECT ((MAX(vt0.c1))%(((vt1.c0) NOT NULL))) FROM vt1, vt0 WHERE (('-1e500' IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM((vt1.c0 IN (vt1.c0))) FROM vt0 WHERE (TRIM(0.5569574347187887)) LIMIT -1862800637;SELECT DISTINCT COUNT(((((vt0.c0)AND(vt1.c0)))AND(x'862b'))) OVER () FROM vt1, vt0 WHERE (((json_extract(0.0652617028281609, -400629662, -263635208, 0.6607320137446493))+((((']I')) NOT BETWEEN ((x'cfad')) AND ((x''))))));SELECT AVG((vt1.c0 IN ())) OVER () FROM vt0, vt1 WHERE ((json_object(NULL, 1221869716, NULL, NULL) IN ((-1.090389323E9 IN ()))));SELECT DISTINCT COUNT(*) OVER () FROM vt0 ORDER BY (((vt0.c0) NOT BETWEEN (vt0.c1) AND (0.46226057155424904)) IN (vt0.c0)), 0.0067941250304968115 ASC, (((('161882336') NOT BETWEEN (0.34637273478646446) AND (vt0.c0)))+(CAST(vt0.c1 AS TEXT)))  NULLS LAST; -- 0ms;
SELECT x'4026', (((+ (vt0.c0)))IS NOT(LIKE(vt1.c0, vt0.c0, '3'))), CAST(0.9327838837323876 AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (('' COLLATE NOCASE) NOT BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 END) AND ((vt1.c0 IN ()))) FROM vt1;SELECT ALL ((CAST(vt0.c1 AS NUMERIC))*(((vt0.c0)IS NOT(vt0.c0)))) FROM vt0 WHERE ((((((((((- (0xffffffffd75dd005)))OR(((((x'9674e753')OR(x'0e82')))OR(x'')))))AND((((''))!=((NULL))))))AND('-756609054')))AND((('1629987997')>(NULL))))) GROUP BY (((vt1.c0 IN ()))LIKE(((0.8265996322729839) NOTNULL))); -- 0ms;
SELECT DISTINCT ((vt1.c0 IN (vt0.c0)) IN ()), ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)GLOB(vt1.c0 COLLATE RTRIM)), ((((vt0.c0)>>(vt0.c1))) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((+ (vt1.c0)))) FROM vt0 ORDER BY TRIM('hM1m', CASE WHEN vt0.c1 THEN vt0.c0 END)  NULLS FIRST;SELECT DISTINCT ((((vt1.c0)/(vt1.c0))) NOT BETWEEN (NULLIF(vt1.c0, vt1.c0)) AND ((vt0.c1 IN ()))) FROM vt0, vt1 WHERE ((((((NULL IN (NULL, '1786292463')))OR(((0.9681809691111065)GLOB(-1.980346354E9)))))OR(CASE WHEN 0.4138413594340915 THEN '0.10054341556340607' ELSE 'L_' END))); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, vt0.c0, vt1.c0))!=((vt1.c0, vt0.c1, vt0.c0))) AS INTEGER), (- (ABS(DISTINCT vt0.c0))), CASE ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))  WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) END FROM vt1 LIMIT -1683787521;SELECT NULL COLLATE RTRIM FROM vt0, vt1 WHERE ((((x'')) BETWEEN ((0xffffffffefbd7107 COLLATE NOCASE)) AND (((NOT (NULL)))))); -- 1ms;
SELECT ALL (- (CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE 0.31586902291951546 END)), ((((((((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))OR(vt1.c0 COLLATE NOCASE)))AND(((vt1.c0)<>(vt0.c0)))))AND(((vt0.c0) NOTNULL))))OR(vt0.c0 COLLATE NOCASE)), (CAST(vt0.c0 AS REAL) IN ()), LAG((+ ((+ (vt1.c0)))), ((((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (LIKELY(0.6731169546506439)) AND ((x'a228' IN (vt1.c0)))), LENGTH((- (vt1.c0)))) OVER ( ORDER BY (((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) BETWEEN (((((vt0.c0)AND(NULL)))OR(vt1.c0))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END)), ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) COLLATE RTRIM, vt0.c1 DESC), ((((COUNT(*))OR(((vt1.c0)||(vt0.c0)))))AND(((vt0.c0)!=(vt0.c0)))) FROM vt1;SELECT ALL ((vt0.c0)<>(vt1.c0)) COLLATE RTRIM FROM vt0 WHERE ((((NULL IN (-1.368270813E9))) IS FALSE)) ORDER BY TRIM(DISTINCT ((vt0.c0) ISNULL), UPPER(vt1.c0))  NULLS FIRST, (- (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))) DESC;SELECT ALL ((((vt0.c0)>=(vt0.c1))) NOTNULL) FROM vt1 WHERE (CASE (('8],B')||(NULL))  WHEN 0.4790242671028172 COLLATE RTRIM THEN ((NULL)<>(NULL)) END);SELECT DISTINCT ((0x4062bf32) BETWEEN (((((vt0.c1)AND(vt1.c0)))OR(vt0.c0))) AND ((vt1.c0 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c0)GLOB(vt0.c0))))<((((vt1.c0) NOT BETWEEN (NULL) AND (NULL))))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN ()) FROM vt1 WHERE ((CASE WHEN 's#' THEN x'2047' ELSE '' END IN ())) LIMIT -1041954599 OFFSET -2101007487; -- 0ms;
SELECT COUNT((~ (NULL))) OVER () FROM vt1, vt0 WHERE (((CAST(NULL AS NUMERIC))IS((~ (x''))))); -- 0ms;
SELECT DISTINCT LAG(((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))==(vt0.c1 COLLATE NOCASE)), x'', ((vt0.c0) NOT BETWEEN (((vt0.c1)LIKE(vt0.c1))) AND (NULLIF(vt0.c1, vt0.c1)))) OVER ( ORDER BY vt0.c0  NULLS FIRST) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN ((vt0.c1)>>(vt1.c0)) END FROM vt0, vt1 WHERE (TRIM((('') NOT BETWEEN (NULL) AND (x'')), ('131201793' IN ()))); -- 0ms;
SELECT DISTINCT ((~ ('-2133640439')) IN ((((vt0.c1))<((vt0.c1))))) FROM vt0; -- 0ms;
SELECT CAST(((vt0.c1)!=(vt1.c0)) AS NUMERIC) FROM vt0;SELECT 7.8951908E8 FROM vt0, vt1 NOT INDEXED WHERE (CAST(CAST(-1781937890 AS INTEGER) AS INTEGER)); -- 0ms;
SELECT CAST(((vt0.c1)AND(-8.12425691E8)) AS TEXT) FROM vt0, vt1 WHERE (((((((1252092603)OR(0Xffffffffc746198c)))AND('-275068595')))||(((NULL)%(0.4322213922836048))))) GROUP BY (((NULL, (((vt1.c0))<=((vt1.c0))), vt1.c0 COLLATE BINARY))>((((vt1.c0)-(vt0.c1)), (((vt1.c0))<((vt1.c0))), (((vt0.c0))<>((vt0.c1)))))) HAVING 0.7756840746786438; -- 0ms;
SELECT DISTINCT ((((ABS(DISTINCT vt0.c1))AND(MIN(vt0.c1))))AND(CAST(x'3edc0d17' AS NUMERIC))) FROM vt1 WHERE (((((('-54981982')<<(x'')), (- ('-1586450799')), load_extension('', 0X231f0b0f)))=((CAST(NULL AS REAL), ((((0.382941004040136)AND(x'')))OR(0.47688198075706134)), 0x59be824d COLLATE RTRIM))));SELECT ALL (+ (CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)), TOTAL(0.584257044638125), CASE WHEN CAST(vt1.c0 AS REAL) THEN CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END ELSE ((vt1.c0) ISNULL) END FROM vt0 WHERE ((((('Ws{5|cP3') IS FALSE)) NOT BETWEEN ((('') BETWEEN (NULL) AND (5.44534133E8))) AND ((NOT (0X3e4676d0)))));SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE (CAST(x'' COLLATE BINARY AS INTEGER)); -- 0ms;
SELECT (~ ((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))), (((NOT (x'')))%(CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)), LIKELIHOOD((vt0.c0 IN ()), 0.4358157475753133) FROM vt0, vt1 WHERE ((((0Xffffffff8c6bfcda)) NOT BETWEEN ((((0.1624883286514951)!=('677524905')))) AND ((x'' COLLATE BINARY)))); -- 0ms;
SELECT AVG(((((((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1))) FROM vt0, vt1; -- 1ms;
SELECT TOTAL(x''), (((vt0.c0 IN ())) BETWEEN (((vt1.c0)<(vt0.c1))) AND ((((vt0.c0))<=((vt1.c0))))), (((vt1.c0, vt0.c1, vt0.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER), SUM(vt1.c0), ((vt0.c1) BETWEEN ('<U\7KC%勤') AND (vt1.c0)))) AND (((~ (vt0.c1)), vt0.c1, AVG(vt0.c1)))) FROM vt0, vt1; -- 1ms;
SELECT (((0.26733891638888607)) NOT BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) AND ((vt1.c0 COLLATE RTRIM))) FROM vt0, vt1 WHERE ((((((((((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))))OR(((x'dafc0e47')IS('1841069956')))))OR(CHAR(NULL, -1.070424504E9, 0.9170000172221775))))OR(((0.2059595015570982) IS TRUE))))AND('' COLLATE NOCASE))) GROUP BY CAST((((vt1.c0, 0.3916343646763736, vt0.c0)) NOT BETWEEN ((vt0.c0, 866640989, vt1.c0)) AND ((vt1.c0, vt0.c0, vt1.c0))) AS TEXT) HAVING AVG((((vt0.c0, vt1.c0, vt1.c0))<>((vt1.c0, vt0.c0, vt1.c0)))); -- 0ms;
SELECT LAG(vt0.c1, vt0.c0, (((vt0.c1) BETWEEN (vt0.c1) AND (vt1.c0)) IN ())) OVER () FROM vt0, vt1 WHERE ((((1342360254, 'c38G\', NULL)) NOT BETWEEN ((((('L'))<((NULL))), ((NULL) IS FALSE), ((('㺅'')'))<((NULL))))) AND (((((x'1ae2')) BETWEEN ((0.057458337942694615)) AND ((0Xffffffffcb558c09))), ((((0.23697523265884401)AND(NULL)))OR(0Xffffffff9a6608fa)), (((((((((((('')OR(-1706346207)))AND(NULL)))OR(0.18066627314151473)))AND(0.20203862472975354)))OR('-1546614312')))OR(-1.627267676E9)))))); -- 0ms;
SELECT DISTINCT (((((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.c0))))OR((((0.27528157065603087, vt0.c1, NULL))<((vt0.c0, vt1.c0, vt0.c0))))))OR((~ (vt0.c1)))) FROM vt0 WHERE (LIKELIHOOD(DISTINCT ((NULL)IS NOT(0.3395984992646349)), 0.10793231105835144)) ORDER BY ((vt1.c0)+(((vt0.c1) IS FALSE)))  NULLS LAST;SELECT DISTINCT ((vt1.c0)OR(((((vt0.c0)OR(vt1.c0)))OR(vt1.c0)))), AVG(CAST(vt0.c1 AS NUMERIC)) FILTER(WHERE (((UPPER(DISTINCT vt1.c0)))!=((vt0.c1)))) OVER (), LIKELY(((vt0.c1)<(vt0.c1))) FROM vt0, vt1 ORDER BY (- ((vt0.c0 IN ()))) DESC; -- 2ms;
SELECT ((((vt0.c0)*(x'')))||(LOWER(vt0.c0))) FROM vt1;SELECT DISTINCT ((TOTAL(vt0.c0)) NOTNULL) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((((((((((vt0.c1))=((vt0.c1))))OR(0.6963681417127578)))OR(((vt1.c0) ISNULL))))OR(((vt0.c0)OR(vt0.c0)))))AND((vt1.c0 IN ()))), UNICODE(vt0.c0 COLLATE RTRIM), vt0.c1 FROM vt0 ORDER BY ((((((((LIKELY(vt0.c1))AND(((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt1.c0)))))AND(vt1.c0 COLLATE RTRIM)))AND((0.24092501795647547 IN ()))))OR(((((vt0.c0)AND(x'904d')))OR(vt0.c1)))) ASC  NULLS LAST, ((((vt1.c0)GLOB(vt0.c0))) NOT BETWEEN (TRIM(vt1.c0)) AND (((vt0.c1)IS NOT(vt0.c0)))) ASC;SELECT ALL ((((((((((vt1.c0)GLOB(vt0.c1)))AND(COALESCE(DISTINCT vt0.c0, vt1.c0, vt1.c0, vt0.c1))))AND(((vt0.c1)<(vt0.c1)))))AND(NULL)))AND(load_extension(vt1.c0))) FROM vt1;SELECT DISTINCT (((vt0.c0)) BETWEEN (((vt0.c0 IN (vt0.c1, vt1.c0)))) AND ((((vt0.c1)<<(vt0.c1))))), ((vt1.c0)>=(vt1.c0)) COLLATE NOCASE, (((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((((vt1.c0)!=(vt1.c0)), (((vt0.c1))>((vt1.c0))), LTRIM(vt1.c0))) AND ((CASE 0.3171768463398157  WHEN vt0.c0 THEN 0X288a1407 ELSE vt0.c1 END, CAST(NULL AS NUMERIC), CAST(vt1.c0 AS INTEGER)))), ((((LOWER(vt1.c0))OR(((vt1.c0) ISNULL))))AND(CAST(vt0.c0 AS BLOB))), ((+ (vt0.c1)) IN ()) FROM vt0 NOT INDEXED WHERE ((((('{}' IN (0.49372520196159553, NULL))))<=(((+ ('-105779663')))))) GROUP BY ((((((vt1.c0)OR(vt0.c1)))AND('-756643127')))LIKE(vt0.c0)) HAVING NULL COLLATE BINARY;SELECT ((vt1.c0)<<(vt0.c0)) COLLATE BINARY COLLATE NOCASE, ((((((((((((vt1.c0 COLLATE BINARY)OR((vt1.c0 IN ()))))AND((vt0.c1 IN (vt0.c1)))))AND(TRIM(vt0.c1, vt1.c0))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0)))))AND(((vt1.c0)/(vt0.c1)))), -4.37503371E8 COLLATE BINARY FROM vt0 WHERE ((~ ((- (x'')))));SELECT DISTINCT TIME(COUNT(*), SQLITE_VERSION(), ((vt0.c1) NOT NULL)) FROM vt0, vt1 WHERE (((((((((((NULL) BETWEEN (0X2b666c78) AND (NULL)))OR((x'a355' IN ()))))OR((('>MHJ\N|') NOTNULL))))OR((NULL IN ()))))OR(0.6208664410621227 COLLATE RTRIM))); -- 1ms;
SELECT MIN(((NULL)OR(vt0.c0))), ((0.462742048701681)OR(x'')), CAST(NULL AS TEXT), CAST(CAST(vt1.c0 AS TEXT) AS INTEGER), (((vt1.c0 IN (vt1.c0))) BETWEEN (((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0))) AND ('SXPbf04')) FROM vt0, vt1 WHERE ((0.04399516674613135 IN (NULL, '1320659094')) COLLATE RTRIM); -- 0ms;
SELECT NTILE((((vt0.c1 IN ()))&(((vt0.c0)AND(vt0.c1))))) OVER ( ORDER BY ((CAST(vt0.c0 AS TEXT)) ISNULL)  NULLS LAST, ((((vt1.c0) NOT NULL)) NOT BETWEEN ((((vt1.c0, vt0.c1, vt1.c0))>((vt0.c1, vt1.c0, vt1.c0)))) AND (((vt0.c0)>>(vt1.c0))))  NULLS FIRST, ABS(DISTINCT CAST(vt0.c1 AS INTEGER))  NULLS LAST) FROM vt0, vt1 WHERE ((((((0xffffffff8a312732))<=((NULL))))/(CAST(0.18956988099370353 AS TEXT)))); -- 0ms;
SELECT (~ (((vt0.c1)<(vt0.c0)))), COUNT((((vt0.c1))<((vt1.c0)))), ((((vt0.c1 IN (vt0.c1))))<>(((vt0.c1 IN ())))) FROM vt0, vt1 ORDER BY (NULL IN ()) DESC, 0.5929704412762048 ASC  NULLS LAST LIMIT -2064886207; -- 1ms;
SELECT ALL (((CAST(vt0.c0 AS NUMERIC), ((((vt0.c1)AND('338830579')))OR(vt0.c0)), ((vt0.c0) ISNULL)))<=((((vt1.c0) BETWEEN (vt0.c1) AND (vt0.c1)), LOWER(vt0.c0), NULL))), (((~ (vt0.c0)))=(((vt0.c1) NOT NULL))), COUNT(((((((((((((NULL)AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.c0)))AND(vt0.c0))) FROM vt1, vt0 WHERE (-284191836); -- 1ms;
SELECT DISTINCT (NOT (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))) FROM vt0;SELECT DISTINCT SUM(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))AND(vt1.c0))) FROM vt1;SELECT DISTINCT (~ (CAST(vt0.c1 AS TEXT))), vt1.c0, ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)))IS NOT(vt0.c1 COLLATE RTRIM)) FROM vt0, vt1 WHERE (((((NULL) ISNULL)) NOT BETWEEN (TRIM(0.7837084429215757)) AND (LIKELIHOOD(DISTINCT -1.1360909E8, 0.9646117877366038)))); -- 0ms;
SELECT ((0.8590233327835666)GLOB(GROUP_CONCAT(vt0.c1))) FROM vt0, vt1; -- 0ms;
SELECT HEX(vt1.c0) FROM vt0 WHERE ('	iT?\ꁳ/w');SELECT DISTINCT ((((((((CAST(vt0.c1 AS TEXT))AND((+ (vt0.c1)))))OR(((vt0.c0)<(vt0.c1)))))AND(((vt1.c0) IS FALSE))))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END)) FROM vt1, vt0 WHERE (NULLIF((~ ('P')), (x'd845' IN (-1e500, NULL)))); -- 1ms;
SELECT DISTINCT '0.6719752363885368' FROM vt1, vt0 WHERE (0.7617392328173737) GROUP BY (((vt1.c0) ISNULL) IN ()) HAVING ((((vt0.c1)>(vt0.c0)))<>(((((vt0.c0)AND(vt0.c0)))OR(vt1.c0)))); -- 0ms;
SELECT vt0.c1 FROM vt1;SELECT DISTINCT MAX(vt1.c0), TOTAL(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1))) OVER (), (~ (((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) FROM vt1;SELECT CASE IFNULL(DISTINCT vt0.c1, vt0.c1)  WHEN (~ (vt1.c0)) THEN NULL END FROM vt1, vt0 WHERE ((((0.7091564028025144)<>('0{')) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, vt1 WHERE (((((NULL) IS TRUE))LIKE(((-2091865119)>=('-105779663'))))); -- 0ms;
SELECT (NOT (NULL COLLATE NOCASE)), ((vt0.c0 COLLATE BINARY)<=(((0X46e65f8b)|(1680917552)))), vt0.c0, ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (NULL) AND (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)), (SUM('-1396713697') IN ()) FROM vt1;SELECT DISTINCT (- (LAST_INSERT_ROWID())) FROM vt1, vt0 LIMIT 1479666094; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt0.c0, vt0.c1, vt0.c1))<=((vt1.c0, vt1.c0, vt1.c0)))), ((LIKE(vt0.c0, vt0.c0))<(vt1.c0)), (vt1.c0 IN ()) FROM vt0 GROUP BY ((vt0.c1 COLLATE RTRIM) IS FALSE) HAVING LENGTH(TRIM(x''));SELECT DISTINCT ((',⿊M^oz' COLLATE NOCASE)=(0.8803615136931351)) FROM vt1 WHERE (0Xffffffffadb64a37 COLLATE BINARY); -- 0ms;
SELECT COUNT(*) OVER (), vt1.c0 COLLATE BINARY, COUNT((((vt1.c0, vt1.c0, vt0.c1))==((vt1.c0, 'V*', vt1.c0)))) FROM vt0, vt1 WHERE ((((((((NULL)AND(x'185e')))AND(x''))))<=(((NOT (NULL)))))) LIMIT 519933465 OFFSET 1558549094; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c1 THEN vt0.c1 END AS REAL), LAST_VALUE(((((0x61aa551a)OR((((vt1.c0, vt1.c0, vt1.c0))<=((vt1.c0, vt1.c0, vt1.c0))))))AND(CASE vt1.c0  WHEN vt1.c0 THEN '1230188843' ELSE vt1.c0 END))) OVER ( GROUPS  CURRENT ROW), CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER), CASE WHEN (vt1.c0 IN (NULL, NULL)) THEN ((vt0.c0)<(vt1.c0)) WHEN GROUP_CONCAT(vt0.c1) THEN (NOT (vt0.c0)) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN (((vt1.c0, vt0.c0, vt1.c0))=((vt0.c1, vt0.c0, vt1.c0))) ELSE NULL END, (((vt0.c1)) BETWEEN (((vt1.c0 IN ()))) AND ((CAST(vt0.c0 AS BLOB)))) FROM vt1 GROUP BY ((vt0.c1 COLLATE RTRIM) NOT BETWEEN (((vt0.c0)*(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))), (- (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)))), '-428576040';SELECT DISTINCT CAST((+ (vt1.c0)) AS REAL) FROM vt0;SELECT DISTINCT MAX((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))), vt1.c0, ((CAST(vt0.c1 AS NUMERIC))*(((vt0.c0)AND(0.176141031072918)))), ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))LIKE((~ (vt0.c0)))), ((((vt0.c1)-(x'032e'))) NOT BETWEEN (((vt0.c0)-(vt0.c1))) AND ('2096337886')) FROM vt0, vt1; -- 1ms;
SELECT ALL TOTAL(vt1.c0) OVER (), vt0.c1, ((((vt1.c0 COLLATE BINARY)OR((x'459c' IN ()))))OR(((vt1.c0)+(vt1.c0)))) FROM vt0, vt1 WHERE (CAST((- (x'')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((vt0.c0)>>(x'')) COLLATE NOCASE COLLATE BINARY FROM vt1 WHERE ((((((- (NULL)))AND(CAST('-105779663' AS INTEGER))))OR(((0.3244426051660031) BETWEEN ('-1824023191') AND (x''))))) ORDER BY ((x'') IS TRUE) ASC  NULLS FIRST;SELECT (~ (vt0.c1)) FROM vt1, vt0 WHERE ((- (((0.7181797487446916)%(692215827))))); -- 0ms;
SELECT DISTINCT (CAST(vt0.c1 AS INTEGER) IN (TRIM(vt1.c0))) FROM vt1, vt0 ORDER BY vt0.c1 ASC  NULLS LAST; -- 1ms;
SELECT ALL ((((vt1.c0))<=((vt1.c0))) IN ()) FROM vt1, vt0; -- 0ms;
SELECT 0.3486706001271427 FROM vt1; -- 0ms;
SELECT ((json_type(vt1.c0))IS((vt0.c1 IN (vt0.c0, vt0.c0)))) FROM vt0 NOT INDEXED;SELECT (CAST(vt0.c1 AS TEXT) IN ()) FROM vt1 LIMIT 1 OFFSET -1014435426; -- 0ms;
SELECT (((CASE WHEN vt1.c0 THEN x'' ELSE vt1.c0 END, (vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0))))>=((vt1.c0 COLLATE RTRIM, vt1.c0, CASE '-827977695'  WHEN 0.8071955547706738 THEN vt0.c1 END))), ((((vt0.c1)%(vt0.c0)))+((~ (vt0.c1)))), (((vt1.c0))=((COUNT(*)))) FROM vt1 WHERE ((((((0Xffffffffcf935e25, 2050472214, '831162654', '-1240277433', NULL, '266038274', '-1704589062')) BETWEEN ((NULL, NULL, '', NULL, x'b3f4', NULL, 0.6742896047714827)) AND ((NULL, 0.18162804112810493, NULL, x'', -820633093, 0.9803106124727966, '0.23128723655205774'))))>(('' IN ()))));SELECT ALL CASE vt0.c1  WHEN (NOT (vt1.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END, AVG(('0.8629713260391064' IN ())) OVER (), COUNT(*) OVER (), (((CASE WHEN 1118553989 THEN vt0.c1 ELSE vt0.c0 END))>((((vt1.c0)&(vt0.c1))))), (- (((vt1.c0) NOT BETWEEN (0.6165122571671685) AND (vt0.c1)))), ((((((((((x'')AND(NULL)))OR(vt1.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(((vt0.c1) NOT NULL))), 0.13626962382786378 FROM vt0 GROUP BY ((((vt0.c1 COLLATE RTRIM)OR((vt1.c0 IN ()))))OR(vt0.c0)) HAVING x'';SELECT (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) IN ()) FROM vt0, vt1 WHERE (CASE ((x'd289') NOTNULL)  WHEN (NOT ('-1690996556')) THEN ((1047175283)|('1697269737')) ELSE ((x'') BETWEEN ('') AND (NULL)) END); -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt1.c0, vt1.c0, vt0.c1, vt1.c0))<=((vt0.c1, vt0.c1, vt0.c0, 735884705, vt0.c0))))/(vt0.c1)) FROM vt1;SELECT ALL ((((vt0.c0) ISNULL)) ISNULL), NULL, (vt0.c0 IN ()) FROM vt0, vt1 WHERE (CASE CASE NULL  WHEN x'' THEN x'c457' END  WHEN (x'820a' IN ()) THEN (((('')AND(x'')))OR(NULL)) END) LIMIT -1819272912; -- 1ms;
SELECT DISTINCT (CAST(vt0.c0 AS REAL) IN ((vt1.c0 IN ()), x'')) FROM vt0, vt1 WHERE (((CASE WHEN '[' THEN '' WHEN '' THEN NULL WHEN '-1627267676' THEN x'' WHEN NULL THEN x'' WHEN NULL THEN NULL END)+(((x'b4f3c624') NOT NULL)))) GROUP BY ((((vt1.c0)%(vt0.c1)))-(((vt0.c0)*(vt0.c0)))); -- 1ms;
SELECT MAX(CAST(vt0.c1 AS INTEGER)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt1.c0 COLLATE BINARY AS TEXT) FROM vt0;SELECT ALL x'' FROM vt1, vt0 WHERE (CAST(((-1848038877) BETWEEN (0X1c30ddd3) AND (x'')) AS NUMERIC)); -- 0ms;
SELECT ALL ((vt1.c0)/(vt0.c0)) COLLATE RTRIM FROM vt1, vt0 ORDER BY (((vt0.c0)-(vt0.c0)) IN ())  NULLS LAST; -- 1ms;
SELECT DISTINCT (((~ (vt1.c0)))-(CAST(-7.38941095E8 AS INTEGER))), (+ ((((vt1.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt1.c0, '''gS	', vt1.c0))))), MAX(((vt0.c0)OR(vt0.c0))) FROM vt0 WHERE (highlight(load_extension('122504166'), CASE WHEN x'' THEN 0.05021653117754998 END, ((((((((-1367189620)OR('')))OR(0x632606d7)))AND(NULL)))AND(x'f696cbc4')), ((x'') NOT BETWEEN (x'3558') AND (0.3416988646972966))));SELECT ALL ((0.12935115910877681) BETWEEN (vt0.c0) AND (TOTAL_CHANGES())) FROM vt0, vt1 WHERE (((((((((((((x'')AND('-756609054')))AND('Z2名5t疰t\')))OR(-5.92499223E8)))AND(NULL)))OR(-1.832995276E9)))OR(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (+ (load_extension(vt1.c0, vt0.c1))) FROM vt1;SELECT ALL (UPPER(vt0.c1) IN ((NOT (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)/(vt0.c1)) AS TEXT), load_extension(((vt1.c0)AND(vt1.c0))), (((((vt0.c0) IS FALSE)))<>((vt0.c1))) FROM vt0 WHERE (((((-1.05779663E8) BETWEEN (NULL) AND ('789519080')))>=(((0X2701b0fa) BETWEEN (NULL) AND (0xffffffffe51607f8))))) ORDER BY ((((((vt0.c0) BETWEEN (vt0.c0) AND (vt1.c0)))OR(vt0.c0)))OR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt1.c0)))) ASC  NULLS LAST, (+ (vt1.c0 COLLATE RTRIM)), 0.5218310735654058 DESC  NULLS LAST;SELECT COUNT(*) OVER (), vt1.c0, (+ (((vt0.c1) ISNULL))) FROM vt0, vt1; -- 1ms;
SELECT ('!|' IN ()) FROM vt0, vt1 WHERE (CAST('876539316' COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1 GROUP BY (((vt0.c0, vt1.c0, vt0.c1, 7.8951908E8, vt0.c0)) BETWEEN ((NULL, CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (((vt1.c0))>((vt0.c0))), (vt0.c1 IN ()), (~ (0.0486224607665785)))) AND (((vt0.c0 IN ()), ((vt0.c1)>>(0Xffffffff85c374b8)), CASE WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END, vt1.c0, ((vt0.c0)<=(vt0.c0))))), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))IS NOT(((vt1.c0)<<(vt0.c0)))), vt0.c0, ((CAST(vt1.c0 AS BLOB))%((vt0.c1 IN ()))), CASE WHEN LOWER(vt0.c1) THEN (vt1.c0 IN (vt0.c1)) END ORDER BY (('!')AND(vt1.c0)) COLLATE RTRIM  NULLS FIRST;SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((('')+(-1014435426))) BETWEEN (CAST(x'' AS REAL)) AND ((')|' IN (x'97a6'))))) GROUP BY ((((((vt0.c1)AND(vt0.c0)))AND(vt1.c0 COLLATE NOCASE)))AND(vt1.c0)), ((CAST(vt0.c1 AS TEXT)) IS TRUE), json_extract((((NULL)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))), (vt1.c0 IN (vt0.c1, vt0.c0)), ((vt0.c1)||(vt0.c0)), vt0.c0 COLLATE BINARY) HAVING ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) NOT BETWEEN (CAST(vt1.c0 AS NUMERIC)) AND (x'')); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT ALL COUNT(((vt1.c0)|(vt0.c0))) OVER () FROM vt0 LIMIT -611225820 OFFSET -1070424504;SELECT 'R&', (+ (vt0.c0)), vt0.c0 FROM vt0 WHERE ((((CAST(0.40768181385552915 AS TEXT), LIKELIHOOD(0.6994452122698468, 0.8029166899133141), ((NULL)IS NOT(NULL)), (- (x'')), ((NULL) ISNULL)))!=((UPPER(NULL), UPPER(DISTINCT NULL), 0xffffffff9e880d20, (('-883586039') IS FALSE), ((0.5278363998836019) BETWEEN (0.1624981532133637) AND (x'')))))); -- 0ms;
SELECT ((CAST(vt1.c0 AS TEXT))=(vt0.c1)) FROM vt1, vt0 WHERE ((((NULL IN ()))<>(x''))) LIMIT 1252092603 OFFSET -1002861215; -- 0ms;
SELECT DISTINCT (((((vt1.c0) IS FALSE), (((vt0.c1, vt1.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt1.c0, vt0.c0))), MIN(vt0.c0)))>=((((vt0.c1)*(vt0.c1)), vt1.c0, ABS(DISTINCT vt1.c0)))) FROM vt1 GROUP BY ((vt1.c0)%(((vt0.c0) IS FALSE))) HAVING UNLIKELY(TOTAL(vt1.c0));SELECT DISTINCT (((((+ (vt0.c0)))AND(LIKELIHOOD(DISTINCT vt1.c0, 0.09153185180943046))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0 WHERE (('-1334501874' COLLATE NOCASE IN ())) ORDER BY CASE WHEN ((vt0.c0) NOTNULL) THEN vt0.c1 COLLATE BINARY ELSE CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN x'625c' ELSE vt1.c0 END END DESC;SELECT DISTINCT (((((vt0.c0))<=((vt0.c0))))IS NOT(vt1.c0 COLLATE BINARY)) FROM vt1, vt0 WHERE ((((0.46399096663197825)) NOT BETWEEN ((0xffffffff96e272a8)) AND (('285807789'))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((((((((vt1.c0)AND(vt0.c1)))OR(0.7083033545756985)))OR(vt1.c0)))AND(vt0.c1)) COLLATE BINARY FROM vt1, vt0 WHERE ((((x'')) NOT BETWEEN (((+ (x'')))) AND ((((0.5487412126064255) ISNULL))))) GROUP BY (- ((vt0.c0 IN ()))), CAST(NULL AS INTEGER), ((vt1.c0) BETWEEN (((((vt0.c1)OR(vt0.c1)))AND(vt0.c0))) AND ((vt1.c0 IN ()))), CASE CASE vt0.c0  WHEN '*S)i_' THEN vt0.c1 ELSE vt1.c0 END  WHEN (vt1.c0 IN (vt1.c0)) THEN ((vt0.c1) NOTNULL) ELSE (~ (vt0.c1)) END, (+ (vt0.c0 COLLATE RTRIM)) ORDER BY (NOT ((((vt0.c0))<=((vt0.c0))))) DESC  NULLS FIRST; -- 3ms;
SELECT ALL CASE CAST(vt0.c0 AS NUMERIC)  WHEN ((vt0.c0) BETWEEN (vt0.c1) AND (NULL)) THEN ((vt0.c1)|(vt1.c0)) ELSE (- (vt1.c0)) END FROM vt0;SELECT DISTINCT NTH_VALUE(((vt1.c0 COLLATE NOCASE)GLOB(-1274065549)), CASE WHEN vt1.c0 COLLATE RTRIM THEN UNLIKELY(DISTINCT vt0.c0) END) OVER ( ORDER BY ((((vt1.c0)OR(0.6334995828954858)))AND(vt1.c0)) COLLATE BINARY  NULLS LAST) FROM vt1, vt0;SELECT ALL vt0.c1 COLLATE BINARY FROM vt0, vt1 WHERE ((((((NOT (x'')))OR(((x'') NOT BETWEEN (NULL) AND (0X40a55bed)))))AND((2.050472214E9 IN ())))); -- 1ms;
SELECT COUNT(*) FROM vt1 WHERE (((NULL) IS FALSE)); -- 0ms;
SELECT ALL TYPEOF(CAST(vt0.c0 AS INTEGER)) FROM vt0, vt1 WHERE (TYPEOF(((1252092603)-('-1368270813')))); -- 0ms;
SELECT DISTINCT 'nNK^\nnK 7' FROM vt0; -- 3ms;
SELECT UNLIKELY(DISTINCT vt1.c0) COLLATE NOCASE, LEAD((((((vt0.c0))<((vt0.c0))))!=(((vt0.c0)+(vt0.c1)))), ((vt0.c1)+(vt0.c1)) COLLATE RTRIM, ((COALESCE(vt0.c0, vt0.c1))AND(((77811600)>=(vt0.c1))))) OVER (), ((((vt1.c0))<>((vt1.c0))) IN ()) FROM vt0;SELECT (((((((vt0.c1, vt0.c1, vt1.c0))<((vt0.c1, vt1.c0, vt0.c1))))OR(((0.39960401794210465)>>(vt1.c0)))))OR(((vt0.c1)%(vt0.c0)))) FROM vt1 ORDER BY (((vt0.c1, 0Xffffffffd96eaca6, vt1.c0)) BETWEEN ((((vt0.c0)>=(vt0.c1)), (vt1.c0 IN ()), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((+ (vt0.c0)), 0.5540454473064299, (('1047175283') NOT BETWEEN (0.13590238704036506) AND (vt1.c0))))), ((((vt0.c1))>=((NULL))) IN ())  NULLS LAST;SELECT DISTINCT 0.1437399627096252, vt1.c0, (((vt0.c0 IN ()))||(((vt1.c0)==(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT json_insert(vt1.c0 COLLATE BINARY, ((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0)), x'd08d91a1') FROM vt1 WHERE ((~ (x''))) GROUP BY (vt0.c1 IN (((vt0.c0) ISNULL), ((((((((((((vt1.c0)AND('1786292463')))OR(vt0.c1)))AND(x'')))OR(vt0.c0)))OR('-1224183410')))AND(-930737679)))), (~ ((((vt0.c1))>((vt1.c0))))), CAST((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt0.c0))) AS TEXT);SELECT DISTINCT ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) AND (((vt1.c0)|(vt1.c0)))) FROM vt1 WHERE ((((- (NULL))) IS TRUE));SELECT ALL TOTAL(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN -1903610964 THEN x'' WHEN vt1.c0 THEN vt1.c0 END) FROM vt0 UNION SELECT DISTINCT CASE WHEN '' THEN CAST(vt0.c1 AS TEXT) END FROM vt1 WHERE (((((0Xffffffffcb3e3ec5)AND(((x'3d09') IS TRUE))))OR(((NULL)OR(0.2229665164496768)))));SELECT DISTINCT ((((NULL COLLATE NOCASE)AND(CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 END)))OR('')), 'm*%Py', '-1376721077' FROM vt0 WHERE (((NULL) BETWEEN (x'766d') AND (1349045896)) COLLATE NOCASE) ORDER BY ''  NULLS LAST;SELECT DISTINCT CASE (vt1.c0 IN ())  WHEN (((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))) THEN ((vt0.c0) NOTNULL) WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN vt0.c0 WHEN (((('*1Rfe%J')AND(vt0.c0)))OR(vt1.c0)) THEN SUM(vt1.c0) ELSE (vt0.c0 IN ()) END FROM vt1 WHERE (((((('.Q' IN ()))AND(((NULL)=(NULL)))))OR(CASE 0X35087541  WHEN 0.7373399873813395 THEN 0.7578541392826136 END)));SELECT ALL vt1.c0 FROM vt0, vt1 WHERE (((COALESCE(x'fc1a', NULL, x'458b', x'')) NOT BETWEEN ((('I*83抑oB}') IS TRUE)) AND (((x'3058')%(-1126770651))))); -- 0ms;
SELECT DISTINCT (((vt0.c1))>((((vt1.c0)AND(vt0.c0))))), ((vt0.c0 COLLATE BINARY) NOT NULL), LAST_VALUE(((x'')OR('262248201'))) OVER () FROM vt1 WHERE ((('-1441903349' COLLATE RTRIM) IS TRUE)) LIMIT -154347798 OFFSET -1464225462;SELECT ((((((vt1.c0)IS NOT(vt0.c0)))AND(COALESCE(vt0.c0, vt1.c0))))AND(((vt0.c0)+(vt0.c0)))), LAST_VALUE(((((vt0.c0)GLOB(vt0.c1)))<<(((NULL)||(vt0.c0))))) OVER (), ((((((((vt0.c1)AND(vt0.c0)))AND(vt1.c0)))OR(((vt0.c1)/(vt0.c0)))))OR((~ (vt0.c1)))) FROM vt0;SELECT DISTINCT ((((((((((vt0.c1)GLOB(vt1.c0)))AND(TOTAL(vt1.c0))))AND(NULL COLLATE BINARY)))OR(((vt0.c1) IS TRUE))))AND((+ (vt0.c0)))), LEAD(vt0.c0, (((+ (vt0.c0)))IS NOT(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))), (((vt0.c1 IN ()))IS((((vt1.c0, NULL, '1497897792'))<((vt1.c0, vt0.c1, '')))))) OVER (), (((vt1.c0)) BETWEEN (((~ ('-1704589062')))) AND (((vt0.c0 IN ())))), 0Xffffffff95e688bd COLLATE RTRIM, ((((vt0.c0 IN ())))>=((((vt0.c0)=(vt0.c1))))) FROM vt0, vt1 WHERE (STRFTIME(NULL COLLATE RTRIM, (('-572552819')!=(NULL)), (- (NULL)))) GROUP BY CASE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1))  WHEN ('1862634905' IN ()) THEN '-1339487039' ELSE CAST(vt0.c0 AS REAL) END, CASE WHEN CAST(vt1.c0 AS BLOB) THEN vt1.c0 WHEN ((vt0.c0)-(vt0.c1)) THEN vt0.c1 WHEN (0.8626815595464808 IN (NULL)) THEN (NOT (vt1.c0)) ELSE CASE vt0.c1  WHEN NULL THEN vt0.c0 ELSE vt1.c0 END END, (~ (((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0)))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) BETWEEN (vt1.c0) AND (vt0.c0))) BETWEEN (vt0.c0) AND (((vt0.c1) NOT NULL))) FROM vt1, vt0 LIMIT -1361939290; -- 0ms;
SELECT LIKELY(vt1.c0) COLLATE BINARY FROM vt1 GROUP BY (((vt1.c0)) NOT BETWEEN ((HEX(vt1.c0))) AND ((vt0.c1 COLLATE NOCASE))) LIMIT -640410244;SELECT DISTINCT (((((((('-1046414731')AND(COUNT(*))))AND(((vt1.c0) NOT NULL))))OR(((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))))AND(((vt0.c1) ISNULL))) FROM vt1 WHERE ((((('2') ISNULL)) NOTNULL));SELECT DISTINCT ((COUNT(*)) IS TRUE), CASE WHEN vt1.c0 COLLATE BINARY THEN vt0.c1 END, (((((vt0.c1, NULL, vt0.c1))<((x'3813c43f', vt0.c0, vt1.c0))))<>('Vf' COLLATE NOCASE)) FROM vt0 WHERE (CAST(('VGf' IN ()) AS INTEGER));SELECT DISTINCT (((vt1.c0 IN ())) BETWEEN (CAST(vt1.c0 AS BLOB)) AND (((vt0.c1) IS TRUE))) FROM vt0 WHERE ((((~ (NULL)))AND(((x'') NOT BETWEEN (x'0f11') AND (NULL))))) ORDER BY vt0.c1 ASC  NULLS LAST;SELECT ALL (((vt1.c0 IN ()))GLOB(CAST(2110679809 AS INTEGER))) FROM vt1, vt0 WHERE (((x'')<(0.5289420025102671)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((AVG(vt1.c0)) NOTNULL), LEAD(CAST(-414212044 COLLATE RTRIM AS REAL), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) IS FALSE), (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))))) OVER (), ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1))) ISNULL), (~ (CASE WHEN vt0.c0 THEN vt1.c0 ELSE 0Xffffffffe705d06a END)), vt0.c0 FROM vt0 WHERE (((UNLIKELY(x''))>(((0.41973491747215663) BETWEEN ('-592499223') AND (0.5937428769359864))))) LIMIT 2054465269 OFFSET -393546456;SELECT ALL ((((((vt0.c0)>>(vt0.c1)))AND(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))OR(vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1, vt0.c1, vt1.c0))>=((vt1.c0, vt0.c1, vt1.c0)))) IS FALSE) FROM vt1 WHERE (CASE (('V<2') NOT BETWEEN (x'') AND (NULL))  WHEN TRIM(DISTINCT 0.4613739771688876) THEN ((-1.78193789E9)>(NULL)) END);SELECT DISTINCT vt1.c0 FROM vt1, vt0; -- 0ms;
SELECT ALL COUNT((((vt0.c0))==((vt0.c0)))) COLLATE NOCASE FROM vt1, vt0 GROUP BY vt1.c0 HAVING MAX((('-1836049473') IS FALSE)); -- 1ms;
SELECT DISTINCT ((SUM(vt1.c0))&(vt1.c0 COLLATE BINARY)), ((((vt0.c0 IN ()), CAST(vt0.c1 AS TEXT), vt1.c0))>((CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END, MAX(vt1.c0), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt1.c0 END))), CAST(vt1.c0 AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (~ (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c0 END)), GROUP_CONCAT((+ (vt0.c0)) COLLATE RTRIM), (((((0xffffffffd3f4a759)) BETWEEN ((vt0.c0)) AND ((vt1.c0)))) IS FALSE) FROM vt1, vt0 WHERE (((((0.6719752363885368 COLLATE RTRIM)OR(((0.700243838554344) NOT BETWEEN (NULL) AND (-663499081)))))AND(((0.7483191607877282)/('sa!'))))); -- 0ms;
SELECT ALL ((((((vt1.c0))>=((vt0.c1)))))<=((CASE '33112600'  WHEN '280001574' THEN vt0.c0 WHEN vt1.c0 THEN NULL WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) FROM vt0 WHERE (((((NULL IN ())))=(('OY' COLLATE BINARY))));SELECT DISTINCT (CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 END IN (NULL, (vt0.c1 IN ()))) FROM vt1 LIMIT 288060503 OFFSET -1947219560;SELECT DISTINCT GROUP_CONCAT(((((vt0.c1)AND(vt1.c0)))OR(vt0.c0))) OVER (), ((((vt0.c1) ISNULL))AND((('586589681') NOTNULL))), ((((TOTAL(vt1.c0))OR((((vt1.c0))>=((vt1.c0))))))OR(((vt1.c0)IS NOT(vt0.c1)))) FROM vt0, vt1 WHERE (SUBSTR(0.4659990314249679, '2䴋y>b^to<') COLLATE BINARY); -- 0ms;
SELECT (((vt1.c0)|(vt0.c0)) IN ()) FROM vt0 LIMIT 143052980 OFFSET 1146439932; -- 0ms;
SELECT ((vt0.c0)<=(vt0.c1)) COLLATE BINARY, (((vt0.c1)) NOT BETWEEN (('')) AND ((UNLIKELY(DISTINCT vt0.c0)))), vt1.c0 FROM vt1, vt0 WHERE (((CASE 0.5569043455209428  WHEN x'14db' THEN 'E|2>' WHEN 0.9641142210106072 THEN '4Z' WHEN ')' THEN x'' END) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST((((vt0.c1, vt0.c0, '怡1')) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt1.c0))) AS NUMERIC) FROM vt0 ORDER BY (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END IN ()), (((NOT (vt0.c1)))-(CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST;SELECT ALL ((((vt1.c0)>>(vt0.c0)))IS(CAST(vt1.c0 AS INTEGER))) FROM vt0 WHERE ((((((((((((((('-568467065') BETWEEN (-1.566538174E9) AND (x'8635a2ac')))AND(ABS('ZqdM<'))))AND(((0.06180651980692842)>(-1670022456)))))OR((('1456728695') IS FALSE))))AND((((('-1665364982')AND('^sDsW]')))OR(x'8502')))))OR(((-1.070424504E9)*(0.23043459090370366)))))AND((NULL IN ()))));SELECT ((x'b167182c' COLLATE RTRIM)>=(ABS(vt0.c0))) FROM vt0, vt1 WHERE (PRINTF(CASE WHEN '*t' THEN -1.05779663E8 END)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), CASE vt0.c1  WHEN ((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN (~ (vt1.c0)) ELSE ((((vt0.c0)OR(1.847016343E9)))OR(vt0.c1)) END, ((CAST(vt0.c1 AS BLOB))=(CASE vt0.c1  WHEN vt0.c1 THEN '' ELSE vt0.c1 END)) FROM vt1 WHERE (((CASE WHEN 0.438486594481186 THEN NULL END) NOT BETWEEN (0Xffffffff87a97a29 COLLATE RTRIM) AND (x'042b'))) ORDER BY (((((((((((((((vt1.c0)AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))OR(vt0.c1))))<((((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)))));SELECT DISTINCT CAST(TOTAL_CHANGES() AS NUMERIC), IFNULL(DISTINCT vt1.c0, vt1.c0 COLLATE NOCASE), (CAST('1847016343' AS TEXT) IN (vt0.c0 COLLATE RTRIM)) FROM vt1, vt0 WHERE (((x'd6ef') BETWEEN ('-888183582') AND ('彐#')) COLLATE RTRIM COLLATE RTRIM); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END) OVER () FROM vt1, vt0 WHERE ((((('-2116266440') ISNULL)) NOT BETWEEN (((-693829847) NOT BETWEEN (-2.75068595E8) AND ('HKo'))) AND (((0.7536617692070887)IS(''))))); -- 1ms;
SELECT DISTINCT CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS INTEGER), (((NOT (0x1ee50a92)))+(0xffffffffbec3b74e)), (((((((((+ (vt0.c0)))OR(vt0.c0)))OR(((vt0.c1) NOT BETWEEN (vt1.c0) AND (x'')))))AND('-151722494')))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND ('')))) FROM vt0, vt1 WHERE (CAST(((0x318a891e)>=('2䴋Y>B^TO<')) AS REAL)); -- 0ms;
SELECT DISTINCT ((((COUNT(vt0.c0))AND(((vt0.c1)<(vt0.c1)))))OR(MIN(vt0.c0))) FROM vt0 GROUP BY (((vt0.c1)*(vt0.c0)) IN ()), vt0.c0, ((CAST(vt0.c1 AS REAL)) IS TRUE); -- 0ms;
SELECT ALL CAST((vt0.c0 IN ()) AS NUMERIC), (((((vt0.c1))>=((vt0.c0)))) BETWEEN ((vt1.c0 IN ())) AND (((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt1.c0)))), COUNT(json_extract(vt0.c0, vt0.c1)) OVER ( PARTITION BY x'', ((CAST(vt1.c0 AS INTEGER))&(NULL COLLATE BINARY)), CASE WHEN (('*mWM')>>(vt1.c0)) THEN (vt0.c0 IN ()) WHEN ((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)) THEN ((((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)) WHEN vt1.c0 THEN CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END ELSE ((((vt0.c1)AND(vt1.c0)))AND(vt0.c0)) END, CASE ((vt0.c1)&(vt1.c0))  WHEN CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.c0 END THEN TRIM('0.6355377150381276') WHEN NULL THEN (((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((vt0.c0, vt1.c0, vt0.c0)) AND ((vt0.c1, vt0.c1, vt1.c0))) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)<<(vt0.c0)) END) FROM vt0, vt1;SELECT ALL ((rtreenode(vt1.c0, vt0.c1))|(vt0.c0)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((COUNT(*))OR(vt0.c0 COLLATE BINARY)))AND(vt0.c1)), ((COUNT(*))>(((vt1.c0) ISNULL))), CASE WHEN (((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt1.c0, NULL, vt0.c1))) THEN vt0.c0 COLLATE RTRIM ELSE ((((vt1.c0)AND(NULL)))AND(vt1.c0)) END FROM vt1 WHERE ((((((((((('䘹W+HNMX|k') NOT NULL))OR((('')|(0x5b77dd42)))))OR(((x'1e6a3681') BETWEEN (x'') AND ('-612095142')))))AND('~滂dayseᶅ' COLLATE RTRIM)))AND(CAST('-1665364982' AS BLOB))));SELECT DISTINCT CAST(((vt1.c0)<>(vt0.c1)) AS INTEGER), SUM(json_array(vt0.c1, vt0.c1)) OVER (), CAST(vt0.c0 AS INTEGER) FROM vt1;SELECT DISTINCT CASE WHEN (((vt0.c0))<=((vt0.c1))) THEN ((vt0.c0)<=(vt0.c0)) END FROM vt1 WHERE (0.07974872969386049);SELECT ALL UNICODE(GROUP_CONCAT(vt1.c0)) FROM vt1, vt0 WHERE (((451197289) IS FALSE)) GROUP BY (((NULL)) NOT BETWEEN ((((vt1.c0)IS(vt1.c0)))) AND (((vt1.c0 IN ())))), vt0.c1, ((((vt0.c0 COLLATE BINARY)AND(vt0.c0)))OR(CAST(vt1.c0 AS REAL))) LIMIT 503608144 OFFSET -1663409424; -- 0ms;
SELECT CASE ((vt0.c1)OR(vt0.c0))  WHEN ((((((((((((vt0.c0)AND(x'')))OR(vt1.c0)))AND('')))OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c0)) THEN ((x'') BETWEEN (vt0.c0) AND (vt0.c1)) END FROM vt0, vt1 WHERE ((~ ('y*'))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt1 WHERE (CAST(((((((((-1.368270813E9)AND(0.20076871968240317)))AND(x'')))OR(595114610)))OR(0.467557816966807)) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(UNICODE(vt0.c1) AS BLOB), (((vt0.c0)) NOT BETWEEN (('')) AND ((CAST(vt1.c0 AS BLOB)))), ((vt1.c0) IS TRUE) COLLATE NOCASE FROM vt1, vt0 WHERE ((((((NULL IN ()))OR(((NULL)-('680137735')))))OR((1058571049 IN ())))); -- 0ms;
SELECT x'b8d4' FROM vt1; -- 0ms;
SELECT DISTINCT (+ ((+ (vt0.c0)))) FROM vt1 LEFT OUTER JOIN vt0 ON (NULL IN ()) WHERE ((((((~ ('-1014435426')))OR(IFNULL('Ӥ~QፁNEᲇ\n', '471801221'))))OR(((((((((x'9011')OR(0.8005465056379354)))AND(x'')))OR(NULL)))AND(NULL))))); -- 0ms;
SELECT DISTINCT CASE CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END  WHEN (((0.588392526870568))<((vt0.c1))) THEN CAST(vt0.c0 AS NUMERIC) ELSE vt0.c0 END FROM vt1 WHERE ((((NULL)IS NOT(0.348118511621895)) IN ((('_{|☘~MW#')IS(0.6187722404383619))))) GROUP BY ((('1847016343', vt0.c0, vt1.c0)) BETWEEN ((CAST(vt0.c1 AS INTEGER), x'' COLLATE RTRIM, CASE WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c1 END)) AND ((((vt1.c0) IS TRUE), ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0)), vt0.c1 COLLATE RTRIM))) HAVING (NOT ((+ (vt0.c1)))) LIMIT 1047175283;SELECT DISTINCT COUNT(*), x'', (((vt0.c0)) BETWEEN ((0.6835436908370934)) AND (((((vt0.c0))>=((vt0.c0)))))) FROM vt1, vt0; -- 1ms;
SELECT (((NOT (vt1.c0))) NOT NULL) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (- (((((vt0.c1)OR(vt0.c0)))OR('')))) FROM vt1 WHERE (((((- (x'b575'))))<=((('px5?x' IN (NULL))))));SELECT DISTINCT LAST_VALUE(json_remove(((vt1.c0)%(vt1.c0)), vt1.c0 COLLATE RTRIM)) OVER ( ROWS BETWEEN  CURRENT ROW AND ((CAST(vt0.c1 AS NUMERIC)) NOT BETWEEN (((((vt1.c0)OR(vt0.c0)))AND(vt0.c0))) AND ('-1469428229')) PRECEDING EXCLUDE TIES) FROM vt1 WHERE ((((((- (x'34dd')))AND(((NULL)|(x'')))))OR(((((-1376721077)OR('Do')))AND(0.12208797781730762)))));SELECT ((CASE WHEN vt0.c0 THEN vt1.c0 END)<=((- (vt0.c0)))) FROM vt1, vt0 GROUP BY CASE ((vt0.c1) ISNULL)  WHEN ((NULL)||(vt1.c0)) THEN PRINTF(vt0.c1) WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((((vt1.c0)AND(vt0.c0)))OR(vt1.c0)) WHEN ((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)) THEN ((vt0.c0)-(vt0.c1)) ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END, CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB), ((vt0.c1)OR(0.48319601492445696)) COLLATE NOCASE HAVING ((((vt0.c0)OR((vt1.c0 IN (vt0.c0)))))OR(CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)); -- 3ms;
SELECT ALL ((CAST(vt0.c0 AS TEXT)) BETWEEN (NULL) AND ((+ (vt0.c1)))), (((('') NOT BETWEEN (vt0.c0) AND (vt0.c1)))|('77롏is')), ((vt1.c0)=(0.06587886467770931)), AVG((+ (0.12097556997100267))), (NOT ((vt1.c0 IN ()))) FROM vt0 WHERE ((~ (((0.3045917434089106)>=(x''))))) ORDER BY UPPER((~ (vt0.c1)));SELECT DISTINCT LOWER(COUNT(vt0.c1)) FROM vt1 ORDER BY (((('Kk') NOT BETWEEN (vt0.c1) AND (vt1.c0))) NOT NULL);SELECT DISTINCT MIN((- (vt0.c1))) FROM vt0 WHERE ((((+ ('AV')))<(0.1624981532133637 COLLATE RTRIM))); -- 0ms;
SELECT ALL LIKELY(vt1.c0 COLLATE NOCASE), CASE WHEN ((vt0.c1)/(vt0.c1)) THEN vt0.c0 END, ((((vt1.c0) IS TRUE))AND((vt1.c0 IN ()))) FROM vt0, vt1 WHERE ((CAST(0Xffffffff9f01dda4 AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT ((((((vt1.c0) BETWEEN ('0.009925846539160177') AND (vt1.c0)))OR(((vt0.c0) NOT BETWEEN (x'') AND (vt1.c0)))))AND(vt1.c0)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(0Xffffffffa2a08642) OVER () FROM vt0, vt1 WHERE ((((NULL)GLOB(NULL)) IN ((- (x''))))); -- 0ms;
SELECT ALL vt0.c1 COLLATE RTRIM FROM vt0 GROUP BY (NOT (((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)))AND(NULL)))OR(vt1.c0))));SELECT (0.44712967437811 IN ()) FROM vt1 WHERE ((NOT (-751094022))); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM vt0, vt1 WHERE (((CAST(NULL AS TEXT)) NOT NULL)); -- 0ms;
SELECT DISTINCT AVG((((vt0.c1, vt1.c0, vt0.c1))==((vt1.c0, x'2a63', vt1.c0)))) FROM vt0;SELECT DISTINCT ((((vt0.c0) ISNULL))-(HEX(DISTINCT vt0.c1))) FROM vt0; -- 0ms;
SELECT ((CASE WHEN vt0.c0 THEN 0.04038313577596575 END) NOT BETWEEN (((vt0.c0)OR(vt0.c0))) AND (CAST(vt0.c1 AS REAL))) FROM vt0, vt1; -- 0ms;
SELECT ((((vt0.c1) NOTNULL))||((NOT (vt0.c1)))) FROM vt1 WHERE (((CASE WHEN x'83ff' THEN 0.20790458564290026 ELSE NULL END) NOTNULL)) GROUP BY (((('0.5301830158062812')%(vt0.c0))) NOTNULL), (NOT (vt1.c0 COLLATE NOCASE)), NULL;SELECT ALL json_insert(NULL, ((vt1.c0)IS(vt0.c1)), ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt0.c1 THEN x'' ELSE vt0.c1 END) BETWEEN (((vt0.c1) NOTNULL)) AND (((vt0.c0) IS FALSE))) FROM vt0, vt1 WHERE (((NULL) BETWEEN ('-1449464388') AND (0.09753193114974601)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT (~ (((vt1.c0)<=(vt0.c1)))) FROM vt1, vt0 WHERE (((CAST(0.5301830158062812 AS NUMERIC))*(CASE WHEN -2.081693014E9 THEN NULL ELSE x'' END))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1 WHERE ((NOT (0.16668428497251264)) COLLATE BINARY) GROUP BY DATETIME(vt0.c0 COLLATE RTRIM, x'', NULL) HAVING ((((((vt1.c0)<(vt0.c0)))OR(vt1.c0 COLLATE BINARY)))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))));SELECT DISTINCT NTILE(((((vt1.c0) ISNULL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CAST(vt1.c0 AS INTEGER)))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt1 WHERE (((CASE '-1308292460'  WHEN NULL THEN NULL ELSE 0.6931864265038331 END) IS FALSE)); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((vt0.c1)<<(vt0.c0)))==(((vt0.c0)>>(0.597777009058168))))) OVER () FROM vt1, vt0 WHERE (((-1706346207) NOT NULL) COLLATE NOCASE); -- 1ms;
SELECT COUNT(*) FROM vt1 WHERE (CASE WHEN CASE WHEN 0.8494584394781272 THEN 286105457 ELSE NULL END THEN ((((0x4b4e1152)AND(0.53504352864867)))AND(x'afe5')) ELSE ((NULL)IS(0.05016729961384969)) END); -- 0ms;
SELECT (((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0))))<((LOWER(vt0.c0)))), NULL, ((((((((NULL)OR(CAST(vt0.c0 AS TEXT))))OR(vt0.c0 COLLATE BINARY)))OR(((vt0.c1)LIKE(vt0.c0)))))AND(UPPER(vt1.c0))) FROM vt1;SELECT DISTINCT (NOT (vt1.c0 COLLATE NOCASE)) FROM vt0 WHERE (((ABS('')) NOT BETWEEN ((('[') BETWEEN (0.375236228555648) AND (0.9073113388628643))) AND ((((NULL))>=((x'30e7')))))) LIMIT 1769092195;SELECT DISTINCT ((vt1.c0) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END) AND (vt0.c0 COLLATE NOCASE)) FROM vt1 WHERE (NULL);SELECT DISTINCT NULL FROM vt1, vt0 WHERE (((NULL COLLATE BINARY)<<((((-1509240190, 0.49109164452190335, '1842235424'))>=((x'024c', x'97e9', '0.9681809691111065')))))); -- 0ms;
SELECT vt1.c0 FROM vt1 WHERE ((((('1963924214')>>('1950997286')))<((((NULL)) BETWEEN ((x'3601')) AND ((x'')))))); -- 0ms;
SELECT ALL SUM(((vt1.c0) NOTNULL)) OVER () FROM vt1, vt0 NOT INDEXED; -- 1ms;
SELECT DISTINCT x'' FROM vt0, vt1 WHERE (CAST(0X54b7d34 AS REAL)); -- 0ms;
SELECT DISTINCT (NOT (((vt0.c0)|(vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((((((((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.c0))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))AND(((vt0.c0) NOT NULL))))AND(CAST(vt0.c1 AS REAL))))OR(((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))) FROM vt0;SELECT ALL (((vt0.c1, vt1.c0, vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END, vt1.c0 COLLATE RTRIM, (- (vt0.c1)))) AND ((rtreenode(vt1.c0, vt0.c0), (x'' IN ()), ((vt0.c1) NOTNULL)))) FROM vt0, vt1 WHERE (CASE WHEN COALESCE(DISTINCT 0.3631559469233212, NULL, x'aeff', 'H訕') THEN json_remove(0.21574908403013437, x'c34f1a48') END);SELECT ((((vt0.c0)==(vt0.c1))) ISNULL), ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN x'a806' THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)==(((vt0.c1) BETWEEN ('.q') AND (vt0.c0)))), (HEX(vt0.c1) IN ()) FROM vt1, vt0 WHERE (json_insert((((((((('1847016343')AND(x'ae7c')))AND('(E')))OR(NULL)))AND('*S뷥FᯛI')), CASE '-1980346354'  WHEN -1224807051 THEN NULL END, 0.988419979238522)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<(vt0.c0))) BETWEEN (vt0.c0) AND (CAST(vt0.c0 AS REAL))), NULL, LAST_VALUE((((vt0.c1)) BETWEEN (((vt0.c1 IN (vt0.c0)))) AND ((((vt0.c0) NOT NULL))))) OVER ( ORDER BY CAST(-5.92499223E8 AS NUMERIC) ASC  NULLS FIRST) FROM vt0 WHERE (CAST(LIKELIHOOD(DISTINCT 0.8123343357605578, 0.9664282630815118) AS BLOB)); -- 0ms;
SELECT DISTINCT MIN(((vt1.c0)<=(vt1.c0))) FROM vt0, vt1 WHERE ((((NOT ('0.35369669417894034')))<>(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE (((((((0.28547079633044115) NOTNULL))OR(CASE WHEN '1544611436' THEN '1497897792' ELSE 0.6355377150381276 END)))AND(((NULL)=('x'))))); -- 0ms;
SELECT (((((vt0.c0) IS FALSE)))==((((((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0))))), (((- (vt1.c0)))OR(-5.47332063E8)), CASE ((x'3bda')+(vt0.c1))  WHEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)) THEN ((vt0.c0) NOT NULL) WHEN LOWER(DISTINCT vt0.c1) THEN vt0.c0 WHEN CAST(vt0.c0 AS NUMERIC) THEN (vt0.c0 IN ()) END FROM vt0 WHERE (TRIM(DISTINCT 0.14822374404149097)) GROUP BY ((TRIM(vt0.c0)) ISNULL);SELECT DISTINCT FIRST_VALUE(((((vt1.c0) ISNULL)) ISNULL)) OVER () FROM vt1 WHERE ((((1.230188843E9) IS FALSE) IN ((((((((('1734524885')OR(x'd4da')))OR('')))OR('?o')))AND(0.5135032982634621))))) GROUP BY ((((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))|(NULL)), CASE vt0.c0  WHEN CAST(vt0.c0 AS REAL) THEN vt1.c0 COLLATE BINARY END, (vt0.c0 COLLATE BINARY IN ()) HAVING CASE SUM(vt1.c0)  WHEN (~ (vt0.c1)) THEN 0.9054600847084586 ELSE ((vt0.c1) IS TRUE) END LIMIT -537597209 OFFSET -305357906;SELECT GROUP_CONCAT(x'') COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT (-1.1360909E8 IN ()) FROM vt0; -- 0ms;
SELECT ((vt0.c1 COLLATE BINARY) NOT BETWEEN (TOTAL(vt0.c1)) AND ((((vt1.c0, 0.6399351013550071, vt1.c0))>=((vt1.c0, vt0.c1, vt0.c1))))), (((vt1.c0 IN ()))>>(CASE WHEN vt1.c0 THEN vt0.c1 END)), ((((((((((vt1.c0)OR(vt1.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))>>(((vt0.c0) IS FALSE))) FROM vt1 WHERE ((0.08199044180290083 IN (x'b8ad')) COLLATE BINARY) ORDER BY CAST(((vt0.c0) ISNULL) AS NUMERIC) DESC  NULLS LAST, UPPER(CAST(vt0.c0 AS TEXT)) DESC;SELECT (vt1.c0 IN (MIN(vt0.c0), TOTAL(vt1.c0))), (~ (((vt1.c0)LIKE(NULL)))), ((((vt0.c1)-(vt0.c0))) BETWEEN (COUNT(vt0.c1)) AND (((vt0.c0) BETWEEN ('-1070424504') AND (vt1.c0)))) FROM vt0 WHERE ((((x'', '1610981866', '')) NOT BETWEEN ((CASE 0Xffffffffa8474587  WHEN '7>HI4' THEN x'' WHEN x'f424' THEN NULL WHEN 0.3650124188865085 THEN 0Xfffffffff91e7fb3 END, ((NULL) BETWEEN (NULL) AND ('-14223388')), ('-899480077' IN ()))) AND ((CAST(0x1300e583 AS BLOB), ABS(DISTINCT NULL), json_array_length(x'')))));SELECT (- (vt1.c0)) COLLATE BINARY FROM vt1; -- 0ms;
SELECT DISTINCT CAST(SQLITE_COMPILEOPTION_USED(vt0.c1) AS TEXT), (((+ (vt0.c1)))LIKE(json_array_length(vt0.c0))), x'' FROM vt0, vt1;SELECT ((AVG(-1.566538174E9)) ISNULL) FROM vt1 WHERE ((('쥍3\Ck_')>>((((('*')AND(NULL)))OR(x''))))) GROUP BY (NULL IN ()); -- 0ms;
SELECT ALL ((((vt1.c0)=(vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 END)) FROM vt0 NATURAL JOIN vt1 WHERE ((((((x'') BETWEEN (846505530) AND (0.9914310495063305)), (((((((('-1566538174')AND(0x4078b842)))AND('')))AND(0.4639608870877223)))AND(-1833009163)), (('1663436503')&(0.7402636671643044))))>=((((x'13e200586325') NOT BETWEEN ('V]%AY') AND (NULL)), ((0.386974202963026)<=('-1403620473')), (((']''M,')) NOT BETWEEN ((0.4639608870877223)) AND ((0xffffffffe5ec3a75))))))); -- 0ms;
SELECT ((((vt0.c1) NOT NULL)) BETWEEN (vt1.c0) AND (((vt0.c1)GLOB(vt0.c1)))) FROM vt0 WHERE (CAST(UNICODE(x'2b1b') AS TEXT));SELECT DISTINCT '-115441741' FROM vt1, vt0; -- 1ms;
SELECT ALL vt0.c0 FROM vt1;SELECT ALL COUNT(CASE vt0.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN 0.5301830158062812 ELSE vt1.c0 END) OVER (), CASE ((vt1.c0)>(vt1.c0))  WHEN ((vt1.c0)>=(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (0.9716585866799216) AND (vt0.c0)) END, (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1))))<((((1415264588) NOT BETWEEN (vt0.c1) AND (vt0.c0))))) FROM vt0 LIMIT 680137735;SELECT DISTINCT LAST_VALUE(((((vt1.c0) ISNULL))>(INSTR(vt1.c0, 0Xffffffffc6282b01)))) OVER (), ((((vt1.c0)>>(vt0.c0))) BETWEEN (((vt0.c0)AND(x''))) AND (((((vt1.c0)OR(vt1.c0)))AND(vt0.c1)))), CAST((((vt0.c1, vt0.c1, vt0.c1)) BETWEEN ((vt0.c1, vt1.c0, vt0.c0)) AND ((vt0.c0, vt0.c1, 0.6813944780224036))) AS INTEGER) FROM vt1 WHERE ((((4.6569086932157777E-4) NOT BETWEEN (NULL) AND (x'')) IN ())) ORDER BY ((LIKELIHOOD(vt0.c1, 0.7609985922733833))>=(CAST(vt0.c0 AS NUMERIC))) ASC  NULLS FIRST, ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM, ((((vt1.c0)LIKE(vt1.c0)))IS(0.5971650795204974)) ASC;SELECT ALL (((~ (vt0.c0)))<(vt0.c0)) FROM vt0; -- 0ms;
SELECT DISTINCT ((NOT (vt1.c0)) IN ()) FROM vt0 ORDER BY ((((x'') NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((~ (vt0.c1))) AND (vt0.c1)) ASC  NULLS LAST; -- 0ms;
SELECT CAST(vt0.c0 AS INTEGER) FROM vt0, vt1; -- 0ms;
SELECT ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END) BETWEEN (((x'')>=(vt0.c1))) AND (((((vt1.c0)AND('!H百')))OR(vt0.c0)))) FROM vt1 WHERE ((((x'') IS FALSE) IN ()));SELECT DISTINCT (vt0.c0 IN ()) FROM vt1, vt0 WHERE (((0.5026184554321059) NOT BETWEEN ('-37710734') AND ('-1615195284')) COLLATE RTRIM) ORDER BY (((vt0.c0 IN (vt0.c0, vt0.c0, vt0.c1))) ISNULL) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((-5.47332063E8)OR(vt0.c1)))OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)) COLLATE RTRIM, CAST(0.5459142153144279 AS BLOB), CASE WHEN vt1.c0 COLLATE BINARY THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (NOT (vt0.c1)) WHEN ((vt0.c1)|(vt0.c1)) THEN (((vt0.c1, -1.782911858E9, vt0.c0)) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND (('0.47688198075706134', vt0.c1, x''))) ELSE ((vt1.c0) IS FALSE) END FROM vt0;SELECT ((((vt1.c0)/(vt0.c1))) BETWEEN ((+ (vt0.c1))) AND (LIKELY(DISTINCT vt0.c1))) FROM vt1, vt0 WHERE (CASE WHEN ((-1664569077)<(NULL)) THEN json(1256446586) WHEN (((''))>((' S'))) THEN (~ (0.8675064565186424)) WHEN (NOT (0.5075254515869285)) THEN ((NULL)!=('0.5971650795204974')) ELSE 8.4650553E8 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT 1.847016343E9, ((CASE WHEN vt0.c0 THEN vt0.c0 END)AND((vt0.c0 IN ()))), ABS(CAST(vt0.c1 AS REAL)) FROM vt0 WHERE (((((CAST(NULL AS TEXT))AND((+ ('}1')))))OR('l鹈!\폲' COLLATE BINARY))) INTERSECT SELECT DISTINCT (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 END IN ()), ((((((vt0.c0)OR(vt0.c0)))AND(vt1.c0))) BETWEEN (vt0.c0) AND (CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 END)), ((CAST(vt0.c0 AS TEXT)) IS TRUE) FROM vt0 GROUP BY CASE NULL  WHEN (((vt1.c0))<>((vt0.c0))) THEN ((((vt0.c1)AND(vt1.c0)))AND(vt0.c1)) ELSE vt0.c0 END;SELECT DISTINCT ((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR('C4ub\r*霉x|')))AND(vt1.c0)))IS NOT(((0.10054341556340607)|(0.1624981532133637)))) FROM vt0, vt1 LIMIT -96347159 OFFSET -428576040; -- 0ms;
SELECT json_array_length((vt1.c0 IN ()), 0.13318529093611908), (('1588573356')AND(((vt1.c0)&(NULL)))), (((vt0.c0))<((vt0.c0))) COLLATE RTRIM FROM vt1, vt0 WHERE ((NOT (((((((((0.6908361994604556)OR(971459839)))AND('-1606344032')))AND(NULL)))OR(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c1)-(vt0.c1)) AS BLOB) FROM vt0 WHERE (((((((x'1b8b1ac0')AND('1615393729')))OR(NULL)))/(((',') IS FALSE)))); -- 0ms;
SELECT ALL (((((vt0.c0)<(vt0.c0))))>((((((vt0.c1)AND(vt0.c0)))AND(vt0.c0))))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT ((CAST(NULL AS INTEGER)) NOTNULL) FROM vt1 WHERE (((((0.014916887422462999)OR(-1024501665)))OR('0.4441747705168344')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT '0.04795560078761285', TYPEOF(((vt0.c0)AND(vt0.c1))), (~ (((vt1.c0)GLOB('-368742395')))) FROM vt0, vt1 WHERE (((((('1080488627' IN ()))AND(COALESCE(DISTINCT '0.5166035725987437', '1044805328', 0.8279522592107139, '471801221'))))AND(x'f16e' COLLATE BINARY))); -- 0ms;
SELECT ((CASE WHEN '' THEN vt0.c0 ELSE vt0.c0 END)IS(x'')), (((+ (vt0.c1))) NOT BETWEEN (((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))) AND (CASE WHEN '-930737679' THEN vt0.c0 ELSE vt0.c1 END)), (((vt1.c0 IN ())) IS FALSE) FROM vt0, vt1 WHERE ((('쥍龠' COLLATE NOCASE)IS NOT(((0.18304087778952116)<(NULL))))); -- 0ms;
SELECT DISTINCT (((NOT (vt0.c0)))<=(((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))) FROM vt1, vt0 GROUP BY vt0.c0 HAVING (((((vt0.c1, vt0.c1, vt0.c0))!=((vt1.c0, vt0.c1, vt1.c0)))) IS TRUE); -- 1ms;
SELECT ALL SUM(CASE NULL  WHEN vt1.c0 THEN vt0.c1 END), (((((0x7ca8df8c)OR(vt0.c1)))OR(NULL)) IN ()), (+ (((((vt1.c0)OR(vt0.c1)))OR(vt0.c0)))) FROM vt1, vt0 WHERE (((((0.6572169460748998) BETWEEN (NULL) AND ('0.1624981532133637')))<=((((('-632983931')OR(NULL)))AND('w9?\r>hU%-'))))); -- 0ms;
SELECT DISTINCT ((CAST('>甉' AS TEXT)) NOTNULL) FROM vt0 WHERE (((x'' COLLATE RTRIM)>>((((('')OR(0Xffffffffb9056298)))OR(0Xffffffff86d32915))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0))) NOT BETWEEN ((- (NULL))) AND (vt1.c0 COLLATE RTRIM)) FROM vt0 ORDER BY CASE WHEN (vt0.c0 IN ()) THEN ((((vt1.c0)OR(vt0.c1)))OR(vt0.c1)) END DESC;SELECT DISTINCT CASE CASE WHEN vt1.c0 THEN vt0.c0 END  WHEN AVG(vt1.c0) THEN vt1.c0 COLLATE RTRIM WHEN (- (vt0.c0)) THEN CAST(vt1.c0 AS INTEGER) WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0)) THEN ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)) END FROM vt1, vt0 WHERE (((NULL)<<((((-4.37503371E8))<>(('MN괍#	緥貱b')))))); -- 0ms;
SELECT x'' FROM vt1 WHERE ((('-382176622') NOT BETWEEN (CASE WHEN NULL THEN 0.8973379104720273 WHEN x'' THEN -432100101 WHEN 0xffffffffdc585b18 THEN NULL ELSE x'' END) AND ((((0.7659051319616194)) BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt1, vt0 WHERE (((((NULL) IS TRUE))%(((x'e833')/(''))))); -- 0ms;
SELECT (+ (((vt0.c1)&(vt0.c0)))) FROM vt1 LEFT OUTER JOIN vt0 ON (((((((((('0.8620026362015556') NOT BETWEEN (vt0.c1) AND (vt0.c1)))AND(((vt0.c0)IS NOT(vt1.c0)))))OR((vt0.c0 IN ()))))OR(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(CAST(vt0.c0 AS NUMERIC))); -- 0ms;
SELECT NULL, CASE 0.0028452622607451072  WHEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c0 COLLATE BINARY END, 0.8490382474704413 FROM vt0, vt1 GROUP BY CAST((vt0.c0 IN ()) AS TEXT) HAVING ((((vt0.c1)AND(MAX(vt0.c1))))AND(highlight(vt0.c1, vt0.c1, vt1.c0, vt0.c1))); -- 1ms;
SELECT (+ (0.8387550509938003)), GROUP_CONCAT((((vt1.c0))=((NULL)))), ((((vt1.c0)/(vt0.c1))) NOTNULL) FROM vt1, vt0 ORDER BY (((vt1.c0, vt0.c0, vt1.c0)) NOT BETWEEN (((NOT (vt0.c0)), (((vt0.c1))>=((vt1.c0))), vt0.c1 COLLATE RTRIM)) AND ((vt1.c0 COLLATE NOCASE, vt1.c0, (NOT (vt0.c0))))) ASC; -- 0ms;
SELECT ALL ((CASE vt1.c0  WHEN 'Fjl' THEN vt1.c0 ELSE '-816698635' END)||(HEX(vt0.c0))) FROM vt1 WHERE (((((9223372036854775807) NOT BETWEEN (x'') AND ('0.8711178547251515'))) NOT BETWEEN ((~ (x'899a'))) AND (((NULL)<>(0.898240663099094)))));SELECT DISTINCT CAST(((((vt0.c1)AND(vt0.c0)))AND(vt1.c0)) AS INTEGER), (('1217996828')OR((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))), json((vt0.c0 IN ())), ((CAST(vt1.c0 AS INTEGER))*(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))), ((vt0.c0 COLLATE RTRIM)>(CASE vt0.c1  WHEN vt0.c1 THEN '0.9103072879899438' ELSE vt0.c1 END)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT MIN(ROUND(vt1.c0, vt0.c0)), ((((((((-1124185240)OR(CAST(vt0.c1 AS TEXT))))OR(vt1.c0)))AND(CAST(0x2c173a47 AS TEXT))))AND((NOT (vt0.c0)))), (((('-592499223')+(vt1.c0))) BETWEEN (((vt1.c0)&(vt1.c0))) AND (CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0 NOT INDEXED WHERE (CASE ((('518513286'))<((x'54c58edc')))  WHEN (('')+('Ax''Tu4㙰Z')) THEN ((831162654)<<(0xffffffffa99aedbc)) ELSE CAST(x'' AS REAL) END) ORDER BY json_insert(((vt0.c1)*(vt1.c0)), CASE vt0.c1  WHEN vt0.c1 THEN '-1422501517' END, CAST(vt1.c0 AS NUMERIC))  NULLS FIRST;SELECT DISTINCT vt1.c0, (((+ (vt0.c1)))==(((vt0.c1) BETWEEN (0.6274644360593395) AND (vt0.c1)))), '0.1624981532133637' COLLATE RTRIM, vt0.c0, (((((vt0.c0, vt0.c1, vt0.c1))!=((vt1.c0, vt0.c1, vt0.c1))))+(TRIM(vt0.c1, vt0.c1))) FROM vt1 WHERE ((((~ ('䢄>')))AND(((0X7289981c)<(0.45597102752711394))))) LIMIT -1546614312 OFFSET 258829799;SELECT ((vt0.c1) IS TRUE) FROM vt1 WHERE (CASE ((']}&k''%4徲')OR(789519080))  WHEN CASE 'Bf%'  WHEN 0.5772454553851557 THEN '{}' ELSE x'd47f' END THEN (('?q볯vfV뫪') NOT BETWEEN ('1344493449') AND ('-87732159')) WHEN ((((0x78b321c3)AND(-1254375583)))OR(NULL)) THEN 0Xffffffff9958b75d WHEN ((('')) BETWEEN ((x'')) AND ((0.029946833740960188))) THEN NULLIF(NULL, '1544611436') END);SELECT IFNULL((vt1.c0 IN ()), (((('')AND(vt0.c0)))AND(NULL))) FROM vt0, vt1 GROUP BY (+ (((vt0.c0)=(x'')))); -- 0ms;
SELECT (NOT ((((vt0.c1))<((vt0.c1))))), (DATETIME(0.7961614824723505, vt0.c1, vt1.c0) IN ()), ((((((((CASE WHEN 'vP>8Hc' THEN vt0.c1 ELSE vt1.c0 END)OR((vt1.c0 IN ()))))AND(x'')))OR(COUNT(vt0.c0))))OR(TRIM(DISTINCT vt0.c0, vt0.c1))), NULLIF((((vt0.c0, vt1.c0, vt1.c0))>((vt1.c0, vt1.c0, vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0))), vt0.c0 FROM vt0, vt1 ORDER BY ((CAST(vt0.c1 AS NUMERIC)) BETWEEN (vt1.c0 COLLATE RTRIM) AND (CASE WHEN NULL THEN vt1.c0 WHEN 8.4650553E8 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) ASC, (- ((~ (vt0.c0)))) DESC; -- 1ms;
SELECT ((MIN(vt0.c0))IS NOT((((vt1.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0, vt1; -- 0ms;
SELECT COUNT(*) OVER () FROM vt0, vt1; -- 1ms;
SELECT vt0.c1 FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS INTEGER))AND(COUNT(vt0.c1))))AND(((vt0.c1)||(vt0.c1)))) FROM vt0 WHERE (NULLIF(DISTINCT NULL, '1195547486') COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((vt0.c1)LIKE(vt0.c1)) IN ()) FROM vt0, vt1 WHERE ((((0.3884965690850426 IN (1560568897, x''))) NOT BETWEEN (CAST(1797331487 AS INTEGER)) AND (CASE x'32ed3868'  WHEN '1047175283' THEN NULL WHEN NULL THEN '-1240277433' WHEN 0.24530582847854077 THEN x'3af5' ELSE -1170880160 END))); -- 0ms;
SELECT LEAD(((vt1.c0)GLOB('-888183582')) COLLATE BINARY, ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c1 THEN '-1406072372' ELSE 0.1506311132283028 END)<(((vt0.c0)&(vt0.c1)))), ((vt1.c0) IS FALSE) COLLATE BINARY) OVER () FROM vt0, vt1 WHERE ((- ((('') IS FALSE)))); -- 2ms;
SELECT HEX(CAST(vt1.c0 AS NUMERIC)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS REAL) AS INTEGER), (- ((vt0.c1 IN (vt1.c0)))), LOWER(DISTINCT vt0.c0 COLLATE NOCASE) FROM vt1, vt0; -- 0ms;
SELECT (((- (vt0.c0)))<=(COUNT(*))) FROM vt1 WHERE (CASE WHEN (('-284121395') BETWEEN (x'') AND (x'')) THEN ((NULL)IS NOT('{}')) ELSE ((x'')+(1809420012)) END);SELECT DISTINCT (TOTAL(vt0.c1) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), (((vt0.c0) NOTNULL) IN ()), ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END)IS NOT((((vt0.c0))<=((vt1.c0))))) FROM vt1 ORDER BY ((0x616fb152) NOT BETWEEN (((vt0.c0)==(vt1.c0))) AND (CAST(NULL AS BLOB))) ASC, ((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0))) BETWEEN (LOWER(DISTINCT vt0.c1)) AND (((vt0.c1) NOT NULL)));SELECT DISTINCT ((((((vt0.c0)AND(vt1.c0)))OR(vt0.c1))) IS TRUE) FROM vt0;SELECT DISTINCT COUNT(((vt1.c0)LIKE(vt0.c0))) OVER () FROM vt1 NATURAL JOIN vt0 WHERE (RTRIM((((-4.2857604E8, x'', x''))==((0.761914780438124, x'', -1.339487039E9))))); -- 1ms;
SELECT ALL ((-1572131604 IN ()) IN (((((((((vt1.c0)AND(0.4861052402179863)))AND(vt0.c1)))OR(vt1.c0)))OR(vt0.c0)))), ((COUNT(*))IS(((vt1.c0)<=(vt1.c0)))), (((MIN('515759230')))<=(((vt0.c1 IN (vt0.c0))))) FROM vt1, vt0 WHERE (CAST(0.21841461002446083 COLLATE RTRIM AS BLOB)) ORDER BY (vt1.c0 COLLATE BINARY IN ()) ASC  NULLS FIRST, ((((((((((vt1.c0)!=(vt0.c1)))AND(vt0.c1)))OR((((vt0.c0, vt1.c0, vt0.c1)) BETWEEN ((vt1.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt1.c0, vt0.c1))))))AND((((vt0.c0, vt1.c0, vt0.c1))>((vt0.c1, vt0.c1, vt1.c0))))))OR((vt1.c0 IN ()))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((CAST(0.29947825000939954 AS REAL))AND(CASE '胃uQnU'  WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(CAST(vt0.c0 AS TEXT))) FROM vt0 ORDER BY vt0.c1 DESC;SELECT DISTINCT (vt0.c0 IN (vt0.c1)) COLLATE NOCASE COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE (((CAST(NULL AS REAL)) NOT BETWEEN ((('')AND(0.8953334075989822))) AND (CASE WHEN x'' THEN '-961875192' END))); -- 0ms;
SELECT ALL SUM(((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt0.c1))) OVER ( ORDER BY vt0.c0 ASC  NULLS FIRST, json_object((((vt1.c0, vt1.c0, vt0.c0)) BETWEEN ((vt0.c1, vt1.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1))), json_extract(vt1.c0, vt0.c1))  NULLS FIRST) FROM vt0;SELECT (((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((0.06849506430504937))))IS(vt0.c1)) FROM vt0, vt1 WHERE ((json_object(0.4639608870877223, 0.9539406840646376) IN (((('1022992551')) BETWEEN ((x'')) AND (('-841884125'))))));SELECT DISTINCT ((vt0.c1)OR(((vt0.c0) IS FALSE))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 ELSE vt0.c0 END)AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))OR(CASE vt0.c0  WHEN vt0.c1 THEN 'R*>>' ELSE vt0.c0 END)), GROUP_CONCAT(((vt0.c1)>(vt0.c0))), vt0.c1, vt0.c1, ((((((vt1.c0)||(vt0.c0)))OR(ABS(vt0.c0))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), 'W]HoTHPX', CASE WHEN ((((((((vt1.c0)OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0)))AND(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE ((vt0.c1)OR(vt0.c1)) END FROM vt1, vt0 WHERE (((((x'')AND('')))>(LIKELIHOOD('y\n\', 0.42343951988651707)))); -- 0ms;
SELECT DISTINCT (((((vt1.c0)*(vt0.c0))))==((((((vt0.c1)OR(vt0.c1)))AND(vt1.c0))))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt0, vt1 WHERE ((((('nowe')>=('''8zR,'))) NOT BETWEEN (json_remove(-1.449464388E9, 0.37200372842336593)) AND ((('zo3s')>(NULL)))));SELECT ALL ((((((vt1.c0)OR(vt0.c0)))OR(vt0.c0))) ISNULL) FROM vt0 UNION SELECT DISTINCT (((vt1.c0 IN ()))>>(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt1, vt0;SELECT ALL COUNT(*) OVER () FROM vt1, vt0 WHERE (((((x'') NOT BETWEEN (x'') AND (0.5692967367275883))) BETWEEN (HEX(DISTINCT '525643433')) AND (((x'') NOT BETWEEN (0.8523770780415448) AND (NULL))))) LIMIT 1874976565 OFFSET -1014435426; -- 0ms;
SELECT AVG((((vt0.c0))<((vt1.c0)))) OVER () FROM vt0, vt1 WHERE (CASE '0.5929704412762048'  WHEN NULL THEN NULL WHEN 0.6666368057570512 THEN 0.060024098718429175 WHEN NULL THEN '518513286' END COLLATE RTRIM); -- 0ms;
SELECT ALL (((NULL, vt0.c0, vt0.c1)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)), (NOT (vt0.c1)), ((vt1.c0)<=(vt1.c0)))) AND ((((((vt0.c1)AND(NULL)))AND(vt1.c0)), COUNT(vt0.c0), ((vt0.c0)==(vt0.c0))))), ((vt1.c0 COLLATE BINARY)||((- (vt1.c0)))), ((vt1.c0 COLLATE BINARY) NOTNULL) FROM vt0, vt1 ORDER BY ((((vt1.c0 IN ()), NULL, vt0.c0))=((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)), CAST(vt1.c0 AS TEXT), x''))) ASC, ABS(vt1.c0) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0; -- 0ms;
SELECT (((vt0.c0)) BETWEEN (((((vt1.c0, 0.2344620569446796, vt1.c0))<>(('Pj', vt1.c0, vt0.c1))))) AND ((vt0.c1 COLLATE RTRIM))), IFNULL(((vt0.c0)>=(vt0.c0)), ('\nB' IN ())), (((((vt1.c0)<<(vt1.c0)), (1846803645 IN ()), ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0))))<((CAST(vt0.c0 AS BLOB), (vt1.c0 IN ()), ((vt0.c0)<<(vt0.c0))))), MAX((((vt1.c0, NULL, vt0.c1))>((vt1.c0, vt0.c0, vt0.c1)))), PERCENT_RANK() OVER ( ORDER BY ((((((((((NULL)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))LIKE(((vt1.c0)>=(vt0.c1)))) ASC, (((vt0.c1)||(vt1.c0)) IN ())  NULLS FIRST, ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c0 WHEN 0.616593765023745 THEN vt0.c1 ELSE vt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((('-4781362'))<((vt1.c0))))) ASC  NULLS LAST) FROM vt0;SELECT SUM(0.9681809691111065) FROM vt1 WHERE (((((NULL COLLATE NOCASE)AND(('' IN ()))))OR(SQLITE_COMPILEOPTION_USED(-632983931)))); -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ())) ISNULL), ((vt0.c0)<<(vt1.c0)), CASE ((0.42868301698944977)IS(vt0.c0))  WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt0.c0)<=(vt0.c1)) WHEN ((vt0.c1) IS FALSE) THEN (+ (vt0.c0)) WHEN TOTAL(vt0.c1) THEN GROUP_CONCAT(vt0.c1) END FROM vt0 WHERE (CASE WHEN x'8382' THEN 0.21724757196264854 END COLLATE BINARY);SELECT DISTINCT ((vt0.c1) NOT BETWEEN (((vt1.c0)<=(vt1.c0))) AND (vt1.c0 COLLATE BINARY)) FROM vt1;SELECT PERCENT_RANK() OVER () FROM vt0 WHERE (CASE 'P'  WHEN (((x'')) NOT BETWEEN (('1205428873')) AND (('784447736'))) THEN (NULL IN ()) WHEN ((0.4399712982528462) NOT BETWEEN (NULL) AND (464053660)) THEN (- ('1195547486')) WHEN CASE 0.26736366685734325  WHEN 0.8355450386946486 THEN NULL END THEN ((0.5945516332825692) IS TRUE) ELSE ((('')) BETWEEN ((-1e500)) AND ((1371277238))) END); -- 0ms;
SELECT DISTINCT (NOT (vt1.c0)) COLLATE BINARY, ((0.3266813847110175) IS FALSE), (((((((vt1.c0)AND(vt0.c0)))AND(vt0.c1)), (((vt1.c0, vt0.c1, vt0.c1, vt0.c0, vt1.c0))==((vt0.c1, vt0.c0, vt0.c0, vt1.c0, NULL))), ((vt0.c1)LIKE(vt0.c0))))>(((x'' IN ()), (- (vt1.c0)), (vt0.c0 IN ())))) FROM vt1, vt0 WHERE (((NULL)%(((0.1654167936927221)AND('Dl?F'))))); -- 0ms;
SELECT DISTINCT ((COALESCE(vt0.c0, '-358181213', vt0.c0, vt0.c1)) NOTNULL), CAST(SUM(vt0.c0) AS INTEGER), (CAST(vt0.c0 AS REAL) IN (((vt0.c0) ISNULL), ((vt0.c0)!=(NULL)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt1.c0, CASE (+ (vt1.c0))  WHEN (NOT (vt0.c1)) THEN ((vt1.c0)>=(vt0.c0)) WHEN x'' COLLATE NOCASE THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN COUNT(vt0.c0) ELSE CAST(x'098f' AS BLOB) END, ((((((vt1.c0)AND(8.4650553E8)))OR(vt1.c0))) NOT BETWEEN (((vt0.c0)<<('-1105385006'))) AND (CASE WHEN vt0.c0 THEN 0Xffffffff90b05dbc ELSE vt0.c1 END)) FROM vt0 WHERE (((((0.1298291472076385) NOT BETWEEN ('-1017807862') AND (x''))) NOT NULL));SELECT NULLIF(SQLITE_COMPILEOPTION_USED(vt0.c0), ((vt1.c0) ISNULL)), (vt1.c0 IN ()), CASE WHEN x'9fa6' THEN vt0.c1 END COLLATE NOCASE FROM vt1 ORDER BY CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN CAST(vt0.c0 AS TEXT) THEN CASE vt0.c1  WHEN vt1.c0 THEN vt0.c1 ELSE x'de29' END WHEN CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt1.c0 END THEN CAST(vt1.c0 AS REAL) WHEN 0.40451212372372036 THEN ((vt1.c0)GLOB(vt0.c0)) ELSE vt1.c0 END ASC;SELECT ALL ((((CASE WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(NULL)))AND(NULL)) FROM vt0 WHERE ((+ (COALESCE(DISTINCT '\r/o', 0.1071901246121254))));SELECT (((COUNT(*)))<(((((vt0.c0))>((vt1.c0)))))), COUNT(*) FILTER(WHERE (((vt1.c0, vt0.c1, vt0.c1)) BETWEEN ((((vt1.c0) IS TRUE), ((vt1.c0)GLOB(vt0.c1)), TOTAL_CHANGES())) AND ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt0.c1 WHEN x'' THEN vt1.c0 END, (~ (vt0.c1)), vt1.c0 COLLATE RTRIM)))) OVER (), ((vt0.c0) IS FALSE) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((NOT (vt0.c0))))<>((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 WHEN '*a' THEN vt1.c0 ELSE vt0.c0 END))) FROM vt1 WHERE ((((((((((((('')OR('L')))OR(0.026429431606756815)))OR('')))AND(0Xffffffffa99d02a2)))OR(((NULL) ISNULL))))OR(CASE '876539316'  WHEN 0.9742413332328734 THEN '' END))) GROUP BY (CAST(vt0.c1 AS INTEGER) IN (((((vt1.c0)OR('~IN\n')))OR(x'')))), ((((TYPEOF(DISTINCT vt1.c0))OR(vt0.c0)))AND(((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))), NULL HAVING (((vt1.c0, vt0.c0, vt0.c0)) NOT BETWEEN ((MIN(0X4db89d7f), CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END, COUNT(*))) AND ((((vt1.c0)OR(0.36530061387409973)), COALESCE(vt1.c0, vt0.c0), SQLITE_COMPILEOPTION_GET(vt1.c0))));SELECT vt0.c0 COLLATE BINARY FROM vt1, vt0 GROUP BY (((CAST(vt0.c1 AS NUMERIC)))>((((((vt1.c0)OR(vt0.c1)))AND(vt0.c0))))), ((((vt0.c0) NOTNULL)) NOT BETWEEN ((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) AND (vt1.c0 COLLATE NOCASE)), CAST(CAST(vt0.c1 AS TEXT) AS TEXT) HAVING CAST(((vt0.c1)OR(vt1.c0)) AS REAL); -- 3ms;
SELECT (((((((((vt0.c0)OR(vt1.c0)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c0)) IN ()) FROM vt1, vt0 WHERE (((NULL COLLATE RTRIM)OR((x'' IN (NULL))))); -- 0ms;
SELECT ALL vt0.c0 FROM vt0, vt1 WHERE (((((NULL)OR(0X12046fff COLLATE NOCASE)))OR(((0.6987651409339435)|('}_sGR'))))) ORDER BY ((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE RTRIM DESC  NULLS FIRST LIMIT 728871267; -- 1ms;
SELECT DISTINCT 503608144 FROM vt1, vt0 WHERE (((((2.62248201E8) IS TRUE))IS NOT((('0.9910737624760179') NOT BETWEEN (NULL) AND (NULL))))); -- 0ms;
