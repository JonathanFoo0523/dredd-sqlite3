-- Time: 2024/06/07 06:35:11
-- Database: database2
-- Database version: 3.40.0
-- seed value: 4294869502
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB , c1 TEXT , c2 INTEGER CHECK ( ((c0 COLLATE BINARY)*(((((c1)OR(NULL)))AND(NULL))))) ); -- 0ms;
INSERT OR ABORT INTO t0(c1, c2) VALUES (NULL, NULL); -- 1ms;
CREATE TEMPORARY VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT CAST((((t0.c1)) BETWEEN ((t0.c1)) AND ((t0.c2))) AS INTEGER) FROM t0; -- 1ms;
PRAGMA threads = 7559373617864351416; -- 0ms;
UPDATE OR IGNORE t0 SET c2=''; -- 0ms;
DELETE FROM t0 WHERE ((x'')>(t0.c0)); -- 0ms;
INSERT OR FAIL INTO t0(c2) VALUES (x'201a'), (0.2593571156830792), (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL t0 SET (c0, c2)=(0.2593571156830792, '}D\') WHERE ((MIN(t0.c0, t0.c1, t0.c1, t0.c1)) NOTNULL); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c2 TO c87; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c87) VALUES (NULL), (0.2593571156830792), ('\('); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE t0 SET (c87)=(-136255146) WHERE ((((NULL)>=(t0.c0))) ISNULL); -- 0ms;
UPDATE t0 SET (c1, c1)=('WW\nh', '-136255146'); -- 0ms;
VACUUM; -- 1ms;
INSERT OR ROLLBACK INTO t0(c87, c1) VALUES (NULL, '219692978'); -- 0ms;
INSERT OR IGNORE INTO t0(c1) VALUES (x''); -- 1ms;
PRAGMA wal_autocheckpoint = -330923028293784619; -- 0ms;
END; -- 0ms;
ANALYZE; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
PRAGMA temp.shrink_memory; -- 1ms;
PRAGMA temp.defer_foreign_keys = false; -- 0ms;
UPDATE t0 SET (c87)=(x'') WHERE (((t0.c1 IN ()))*('-136255146')); -- 0ms;
INSERT OR ROLLBACK INTO t0(c87) VALUES (x''); -- 0ms;
PRAGMA temp.soft_heap_limit = 0; -- 0ms;
ALTER TABLE t0 ADD COLUMN c65 REAL; -- 1ms;
COMMIT TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET c0='qn⏡' WHERE (((t0.c1)) NOT BETWEEN (((t0.c1 IN ()))) AND ((t0.c87 COLLATE NOCASE))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c65) VALUES (x''); -- 0ms;
UPDATE OR IGNORE t0 SET c1=x''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((('219692978' IN ()))AND((((('-1665118461')AND(0.134089550221972)))AND(2.19692978E8)))))OR((((0.134089550221972))>=((''))))); -- 0ms;
UPDATE t0 SET c1=1022801199, c87=0.709437516092913, c65=0.06366271192109618; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'')) BETWEEN ((x'')) AND ((-1.36255146E8))) COLLATE RTRIM; -- 1ms;
BEGIN  TRANSACTION; -- 1ms;
PRAGMA main.ignore_check_constraints; -- 0ms;
ALTER TABLE t0 ADD COLUMN c80 INTEGER; -- 0ms;
UPDATE t0 SET (c80, c87)=(0Xffffffffdd604c92, '1662002145'); -- 0ms;
PRAGMA main.busy_timeout; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET (c0)=('}D\') WHERE (+ (x'')); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
UPDATE t0 SET c0=x'fc3e', c87=1662002145, c87=x'b25f' WHERE t0.c0; -- 0ms;
UPDATE OR ABORT t0 SET (c65, c65)=(NULL, 0.2593571156830792); -- 0ms;
ALTER TABLE t0 ADD COLUMN c49 TEXT; -- 1ms;
REINDEX RTRIM; -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((((CASE 1662002145  WHEN '}d\' THEN x'422e' ELSE x'' END)AND((((-771258976)) NOT BETWEEN (('-907074426')) AND ((0.9992561824600594))))))AND((('0.134089550221972')+(NULL)))); -- 0ms;
UPDATE OR IGNORE t0 SET (c0, c65, c87)=('일e14', -1.36255146E8, 1659795223) WHERE IFNULL(((t0.c0)OR(t0.c49)), ((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c87))); -- 0ms;
REINDEX NOCASE; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INTEGER  CHECK ( (((c0)%(c0)) IN ()))); -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
VACUUM main; -- 0ms;
VACUUM; -- 0ms;
VACUUM; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT LENGTH(RTRIM(t0.c87)) FROM t0, t1, v0 WHERE ((((((((((((0.134089550221972)) BETWEEN ((x'')) AND ((0.9992561824600594))))OR(((0.7988900671015801)+('-771258976')))))AND(('' IN ()))))AND(((-771258976) NOT BETWEEN (0.7999188225175591) AND ('6367910553155020080')))))OR(x''))); -- 0ms;
SELECT DISTINCT ((((CASE WHEN v0.c0 THEN t1.c0 ELSE t0.c65 END)OR(ABS(114628602))))OR(t0.c49 COLLATE BINARY)) FROM t1, v0 ORDER BY (+ (((t0.c65)||(t0.c65)))) DESC, ((((((((((t0.c87)OR(v0.c0)))OR(t1.c0)))OR(t0.c87)))AND(t0.c0))) NOT BETWEEN ((((t0.c65))>=((t0.c65)))) AND (t0.c1 COLLATE RTRIM)) ASC  NULLS FIRST;SELECT ALL CAST(((((((((((((t0.c49)OR(v0.c0)))OR(NULL)))AND(0.8001972461771606)))AND(t0.c49)))AND(0Xffffffffbf65e84a)))OR(t0.c1)) AS INTEGER) FROM v0, t0, t1; -- 0ms;
SELECT ALL CAST(CAST(t0.c49 AS TEXT) AS TEXT) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((((((((t0.c1 COLLATE BINARY)OR((t0.c0 IN ()))))OR(NULL)))AND(((t0.c1) BETWEEN (t0.c49) AND (t1.c0)))))OR(t0.c49 COLLATE BINARY)))OR(TYPEOF(DISTINCT v0.c0))))OR(((((t0.c49)OR(t0.c87)))OR(t0.c49)))) FROM t1, v0;SELECT DISTINCT (NOT (t1.c0)) COLLATE BINARY FROM t0, v0;SELECT ALL (('')||((NOT (v0.c0)))), t1.c0, ((COUNT(t0.c65))!=(TOTAL(t0.c87))) FROM t1;SELECT DISTINCT (((((t0.c87))=((t0.c65))))AND(((((t1.c0)OR(v0.c0)))OR(t1.c0)))) FROM t0, v0, t1; -- 0ms;
SELECT DISTINCT ((((- (t0.c1)), (((t0.c65)) BETWEEN ((t0.c87)) AND ((0.996418854234376))), t0.c0 COLLATE NOCASE))<(((t0.c49 IN ()), (t0.c65 IN ()), 0.709437516092913))) FROM t1 WHERE (((TIME(0x29ab761a, NULL, ''))GLOB(((NULL)>('떕M''hfT'))))) GROUP BY ((0.9873212891241847)GLOB((v0.c0 IN ()))), CAST(t0.c49 AS INTEGER), ((t0.c1)&(t0.c65)) COLLATE NOCASE HAVING x'' ORDER BY (((- (t0.c1))) ISNULL)  NULLS LAST;SELECT ALL (~ (CAST(t1.c0 AS NUMERIC))) FROM t1 WHERE ((((('>瘚伃QU')AND(((NULL) BETWEEN ('8<c8') AND (x'')))))AND(((-1425298668) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((LAST_INSERT_ROWID())LIKE(UPPER(t0.c87))), t0.c87, UPPER(ABS(DISTINCT v0.c0)) FROM t0, t1, v0 WHERE ((~ ((- ('0.996418854234376'))))) LIMIT 260012189; -- 0ms;
SELECT ((TOTAL(t0.c65))&(((t0.c49) NOTNULL))), ((((((((TOTAL(t0.c65))OR(((t0.c87)=(-5.80891502E8)))))AND(CASE t0.c1  WHEN t0.c87 THEN NULL END)))OR(t0.c65 COLLATE RTRIM)))AND(TRIM(t0.c1))), ((((t0.c0)AND(t0.c0))) BETWEEN ((((t0.c65))>((t0.c87)))) AND ((t0.c49 IN ()))) FROM t0, v0, t1 WHERE (((CAST(2.114631061E9 AS NUMERIC))<<((('1662002145') NOTNULL)))) GROUP BY (((v0.c0) BETWEEN (v0.c0) AND (t0.c65)) IN ((+ (t0.c65)))), (((t0.c87)) BETWEEN ((t0.c49)) AND ((t1.c0))), (('1022801199') IS FALSE) ORDER BY (((t0.c1)) NOT BETWEEN ((((((t0.c49)OR(v0.c0)))OR(t0.c1)))) AND ((t1.c0)))  NULLS LAST, (- (CAST(t0.c87 AS INTEGER)))  NULLS FIRST, x''; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN (((t0.c0, t0.c0, t0.c1))<>(('-525064117', t0.c65, t0.c87))) END FROM t1 WHERE (((json_type(NULL)) NOT NULL)) LIMIT 1662002145 OFFSET -960635008;SELECT (((t0.c65)) NOT BETWEEN ((CASE t0.c87  WHEN t0.c87 THEN t0.c0 END)) AND ((t0.c87))) FROM t1, t0 GROUP BY ((TYPEOF(t0.c65))IS(((t0.c87) IS TRUE))); -- 0ms;
SELECT ALL COUNT(((x'7912')IS(t1.c0))), ((((((t0.c87)>=(v0.c0)))AND(v0.c0)))AND(SUM(t0.c0))), QUOTE(MIN(t1.c0)), ((t1.c0)IS NOT(t0.c49)) COLLATE RTRIM COLLATE RTRIM, LAG(TOTAL_CHANGES(), x'', TOTAL_CHANGES()) OVER () FROM v0, t1, t0 WHERE (((((x'')+(0.7999188225175591)))*(CASE x''  WHEN NULL THEN x'' END))) ORDER BY TRIM(t1.c0 COLLATE NOCASE, ((((t1.c0)OR(t0.c65)))AND(t1.c0)))  NULLS FIRST; -- 1ms;
SELECT DISTINCT COUNT(t1.c0) OVER () FROM v0, t1, t0 GROUP BY LTRIM(t1.c0 COLLATE NOCASE, ((((((((t0.c65)AND(t1.c0)))AND(t0.c87)))OR(t0.c65)))OR(0.4760352963892033))), NULL, ((v0.c0 COLLATE NOCASE) NOT BETWEEN (json_array_length(t0.c49, t0.c49)) AND (TRIM(t0.c87))); -- 0ms;
SELECT DISTINCT ((MIN(t0.c65)) NOTNULL) FROM v0, t0, t1 WHERE (((LIKELIHOOD('1659795223', 0.5587582122817677))GLOB(((x'')<(''))))); -- 0ms;
SELECT TOTAL(CAST(t0.c87 AS INTEGER)) FROM t1, t0 WHERE (rtreenode(CAST(NULL AS TEXT), (- (0x751392e0)))); -- 0ms;
SELECT GROUP_CONCAT(((t0.c0)<=(t1.c0))), (((((t0.c0))==((t0.c1)))) NOTNULL), (((('-1150376874')<<(-580891502)))<=(t0.c87)), (+ (((NULL)%(0.06366271192109618)))), (((0X6c2dada2)) NOT BETWEEN (((- (t0.c0)))) AND ((((t1.c0) NOT BETWEEN (t0.c1) AND (v0.c0))))) FROM v0 WHERE ((((('875828438')GLOB('-1513273201')))||(CAST(-1.36255146E8 AS REAL))));SELECT ALL 0.8076896235228245, LEAD(((('0.134089550221972') NOT NULL) IN ((t0.c49 IN ()), t0.c0)), ((t0.c65 COLLATE BINARY) IS FALSE), ((+ (t0.c1)) IN (TYPEOF(t1.c0), t0.c87 COLLATE RTRIM))) OVER (), ((((((((CASE WHEN t0.c65 THEN t0.c49 WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c87 ELSE t0.c0 END)OR(CASE 0x581fe8b9  WHEN t0.c65 THEN t0.c1 END)))OR((((t0.c49, t0.c49, t0.c1)) BETWEEN ((v0.c0, t0.c1, v0.c0)) AND ((t0.c0, t0.c49, t0.c49))))))OR(((t0.c65)<<(t0.c87)))))OR((t0.c65 IN (NULL, v0.c0)))), (((((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((v0.c0))))OR(((t0.c0)*(t0.c1)))))AND(((((((((t0.c49)AND(t1.c0)))OR(v0.c0)))AND(t0.c0)))AND(NULL)))), ABS(SUM(t1.c0)) FROM v0, t0, t1 WHERE (MIN((('~') NOT BETWEEN (NULL) AND (NULL)), ((('-2060231628', '699102746', 0.12392618236939656))<=((NULL, 0.1614636839122192, 0.6213907479531942))))); -- 1ms;
SELECT DISTINCT v0.c0 FROM t0 WHERE (((((((((((x'')AND(2.60012189E8)))AND(x'')))AND(NULL)))OR(NULL)))*((((NULL))<=((NULL))))));SELECT ALL MAX((((t0.c49)) BETWEEN ((t0.c65)) AND ((t0.c1)))), CAST(MIN(t0.c1) AS BLOB), ((COUNT(*)) BETWEEN (0.134089550221972) AND (LIKELY(t1.c0))) FROM v0, t1;SELECT DISTINCT (((CAST(t0.c0 AS BLOB)))==(((~ (t0.c1))))) FROM t1, t0 WHERE ((~ (((0.852950760102733)>('-109800989'))))); -- 0ms;
SELECT DISTINCT (((t0.c65 IN (x'', t0.c65))) IS TRUE), ((LIKELY(t1.c0))>>((x'' IN (t0.c0, v0.c0)))), (((COUNT(t1.c0)))<((((((((((t0.c49)AND(NULL)))OR(t0.c87)))AND(t0.c49)))OR(t0.c0))))) FROM v0 WHERE ((CAST(0.6719413259895791 AS NUMERIC) IN ('725019390'))) LIMIT 656929249 OFFSET 656929249;SELECT DISTINCT AVG(IFNULL(DISTINCT t0.c49, t0.c0)), t0.c49, MIN(MIN(t0.c49) COLLATE BINARY) FROM t0, t1 WHERE (0x8ccf05b);SELECT ALL ((CASE WHEN v0.c0 THEN t1.c0 WHEN v0.c0 THEN t0.c65 WHEN t1.c0 THEN t0.c1 ELSE t0.c65 END) IS TRUE) FROM v0;SELECT DISTINCT CASE WHEN MAX(x'') THEN t0.c87 WHEN CASE WHEN t1.c0 THEN t0.c65 WHEN t0.c65 THEN t1.c0 WHEN t0.c49 THEN NULL END THEN (((t0.c87))>((t0.c87))) WHEN ((((t0.c0)OR(t0.c0)))OR(t0.c65)) THEN CASE WHEN t0.c0 THEN t0.c65 ELSE t0.c49 END END FROM t1 WHERE ((((((((((((((('J㯺r&vP_') NOT BETWEEN (NULL) AND ('875828438')))OR(CASE WHEN x'' THEN x'6c31' ELSE x'ae81' END)))OR(0.6822189511273236 COLLATE BINARY)))AND((('-73588767') ISNULL))))AND(CAST('-9223372036854775808' AS INTEGER))))AND((x'8c42' IN (0.06624050846181762, 'S궢x')))))AND((((1099498941))<=((x''))))));SELECT ALL x'' FROM v0; -- 0ms;
SELECT DISTINCT (((t0.c87)LIKE(t1.c0)) IN ()) FROM v0, t0, t1 WHERE ((NOT (NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL (((t1.c0)) NOT BETWEEN ((((t0.c49) BETWEEN (t1.c0) AND (t0.c65)))) AND ((CASE WHEN t0.c65 THEN t1.c0 END))), (((t0.c0) IS TRUE) IN (MAX(t0.c49), TOTAL(t0.c0))), ABS((((t0.c65)) BETWEEN ((t0.c1)) AND ((t0.c0)))) FROM t1 WHERE ((((0.8410662220267187 IN (NULL))) ISNULL));SELECT DISTINCT (CAST(t1.c0 AS TEXT) IN ()) FROM v0, t1 ORDER BY (((- (t0.c49))) BETWEEN (t0.c1 COLLATE NOCASE) AND ((((t0.c87, t1.c0, t0.c1)) BETWEEN ((t1.c0, t0.c1, t0.c65)) AND ((t0.c49, t0.c0, t0.c49)))))  NULLS LAST;SELECT DISTINCT MIN(((t0.c1)<=(t0.c49))) FROM t0, t1, v0 WHERE ((((((((((((((((('1600309116')AND(x'')))AND('F+籎')))OR(NULL)))OR(0.8802108355541673)))OR(x'')))OR('j㯺r&vp_')))OR(CASE NULL  WHEN 0.6362648060134741 THEN NULL END)))OR('1+cㆆ' COLLATE BINARY))); -- 0ms;
SELECT ((((t0.c87) BETWEEN (t0.c65) AND (t0.c49))) NOT BETWEEN ('j㯺r&vp_') AND (CASE WHEN t0.c1 THEN t0.c65 END)) FROM t0; -- 0ms;
SELECT COUNT(*) OVER () FROM t0, v0; -- 0ms;
SELECT DISTINCT CASE WHEN (- (v0.c0)) THEN GROUP_CONCAT(v0.c0) WHEN CASE v0.c0  WHEN t1.c0 THEN t1.c0 ELSE t0.c87 END THEN LOWER(DISTINCT t0.c0) WHEN SUM(t0.c49) THEN (((t0.c0))>=((t0.c0))) ELSE 'NN' END FROM t1, t0;SELECT ALL ((CASE WHEN t0.c0 THEN t0.c65 WHEN v0.c0 THEN t0.c87 WHEN '757019935' THEN v0.c0 ELSE t0.c87 END)IS(((t0.c49)>>(t1.c0)))) FROM t0, t1;SELECT TYPEOF(DISTINCT ((t0.c0)>>(t0.c65))) FROM t1, t0; -- 0ms;
SELECT ALL ((NOT (t1.c0)) IN ()), ((CASE WHEN t0.c87 THEN t0.c0 END) NOT NULL), ((t0.c87)LIKE(0.21077763390744386)) COLLATE NOCASE FROM t1 WHERE ((((((0.9062154727303726)) NOT BETWEEN ((']')) AND (('1880547580'))))!=(UNLIKELY(DISTINCT x'')))) ORDER BY (~ ('e6Q~')) ASC  NULLS FIRST;SELECT DISTINCT t0.c65 COLLATE NOCASE COLLATE BINARY, t1.c0, (((t0.c49)IS NOT(t0.c1)) IN (((v0.c0) NOTNULL))), ((t1.c0)=(t0.c65)) COLLATE BINARY, ((((t0.c1) BETWEEN (t0.c65) AND (t0.c1))) ISNULL) FROM t1, v0, t0 WHERE ((((((((((((('(rhl-d')OR('aS''w+뀒/薐f')))OR(0.44173052635915677)))AND(((x'8547c97a') BETWEEN (0.6288462521814774) AND (NULL)))))AND((((0X5dfe5fdf))<=(('219692978'))))))AND(((((0.26274379570809203)AND(x'')))AND('9N	 {乗')))))AND(UNLIKELY('757019935')))); -- 1ms;
SELECT ALL CAST(t0.c0 COLLATE RTRIM AS REAL) FROM t0 INNER JOIN v0 ON t0.c0 WHERE ((- (((0.44674981876357545)<('!.'))))); -- 0ms;
SELECT DISTINCT SUM(x'') OVER () FROM t1, v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((((((0.48111003936457597)) BETWEEN ((t0.c87)) AND ((t0.c65))))OR((((v0.c0))>((t0.c87))))))OR((~ (t0.c49)))), (- (((t0.c49) IS TRUE))), CAST((((v0.c0, t0.c65, t0.c65)) BETWEEN ((t0.c49, t0.c87, t0.c0)) AND ((t0.c49, t0.c87, NULL))) AS TEXT) FROM v0;SELECT DISTINCT COUNT(CASE t1.c0  WHEN v0.c0 THEN t0.c0 ELSE t1.c0 END) OVER () FROM v0;SELECT DISTINCT t0.c0 FROM t1, v0, t0 WHERE (((NULL COLLATE NOCASE) ISNULL)) LIMIT 451908065; -- 2ms;
SELECT ALL NULL FROM v0, t0, t1 WHERE ((((~ ('')))IS NOT(x''))); -- 1ms;
SELECT DISTINCT NULLIF(TRIM(t0.c1, t0.c1), ((t0.c1)IS(t0.c49))) FROM v0, t1;SELECT (((((t0.c0))>=((t0.c87)))) IS FALSE), (- (MAX(t0.c0))), COUNT(*) OVER () FROM v0, t1;SELECT DISTINCT x'' FROM t1, t0, v0 GROUP BY ((((t1.c0) NOT BETWEEN (t0.c1) AND (t0.c87))) BETWEEN ((t0.c1 IN ())) AND (t0.c65)); -- 0ms;
SELECT CASE WHEN (t0.c1 IN (v0.c0, t1.c0)) THEN ((t0.c49) BETWEEN (t0.c65) AND (t0.c0)) ELSE ((t0.c0)<>(t0.c65)) END, ((CAST(t1.c0 AS TEXT))<<((((v0.c0))<=((t0.c0))))), (+ ((t1.c0 IN (t1.c0)))), (NOT (((v0.c0) NOTNULL))), COUNT(((t0.c0) NOT BETWEEN (t0.c1) AND (t1.c0))) OVER ( RANGE BETWEEN ((((v0.c0)&(v0.c0))) ISNULL) PRECEDING AND t0.c0 COLLATE RTRIM PRECEDING) FROM t0 WHERE (((('1708628781')) NOT BETWEEN ((((x'4e27') ISNULL))) AND (((x'' IN ())))));SELECT DISTINCT NTH_VALUE(x'', ((json_remove(t0.c65, t0.c49))+(((t0.c49) BETWEEN (t1.c0) AND (t0.c1))))) OVER (), 'Tb', (((~ ('-960635008'))) NOTNULL) FROM t1, t0 WHERE (((('-384972401' IN ()))LIKE((-384972401 IN ())))); -- 0ms;
SELECT DISTINCT (((t0.c1)) NOT BETWEEN ((((t0.c65) BETWEEN (t0.c1) AND (t0.c0)))) AND ((((v0.c0) NOTNULL)))), CAST((t0.c65 IN (v0.c0)) AS REAL), NULL FROM t1, v0, t0 WHERE ((((x'')) BETWEEN (((+ (NULL)))) AND (((+ (0.5088120322653039)))))); -- 0ms;
SELECT DISTINCT TRIM(t0.c65 COLLATE RTRIM, AVG(t0.c1)), (t0.c65 IN ()), (((((+ (v0.c0)))AND(((t0.c87) ISNULL))))AND(((t0.c0) IS TRUE))) FROM t1, t0, v0; -- 0ms;
SELECT CAST(t0.c49 AS TEXT), (((~ (t0.c0)))LIKE(CAST(t0.c49 AS BLOB))), t0.c87 FROM t0; -- 0ms;
SELECT DISTINCT MAX((NOT (v0.c0))), ((((((t0.c87) IS TRUE))AND(((t0.c0) IS TRUE))))OR(((((((((t0.c87)OR(t1.c0)))OR(t0.c65)))AND(t0.c49)))AND(v0.c0)))), (~ (((t0.c87) BETWEEN (t0.c65) AND (960645571)))) FROM v0, t1 WHERE (LIKELY((((x'', 0x18b27c4e, NULL)) BETWEEN (('260012189', 0.23104096431678567, 'H')) AND ((0.044240492257180186, x'b5e5', x'bfc5'))))) LIMIT 1758346622;SELECT CAST(CAST(t0.c87 AS REAL) AS BLOB) FROM v0, t0 WHERE (((((0.41440188942490375) IS FALSE))+(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT t0.c0 FROM t0, v0, t1 LIMIT -384972401 OFFSET 1681328065; -- 0ms;
SELECT DISTINCT (((((NULL)&(t0.c87))))>((CASE WHEN t0.c0 THEN t0.c1 END))), CAST(((v0.c0)<<(t0.c49)) AS NUMERIC), ((((t0.c87) NOT BETWEEN (t0.c49) AND (t0.c49)))IS NOT(CAST(t0.c65 AS NUMERIC))) FROM v0;SELECT DISTINCT ((((('-943880235'))>=((t1.c0)))) BETWEEN ((t0.c1 IN (t0.c87))) AND (COUNT(v0.c0))) FROM v0, t0, t1; -- 0ms;
SELECT DISTINCT ((NULL) NOT NULL) FROM t0, t1 WHERE ((((CASE x'6415'  WHEN NULL THEN -7.3588767E7 WHEN x'' THEN 0Xfffffffffe4fb10b WHEN NULL THEN x'' ELSE NULL END))>(((('9\2F}o') ISNULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c0)<<(t0.c65))) FROM t1 WHERE (LOWER(DISTINCT '' COLLATE BINARY)) ORDER BY ((t0.c49 IN ()) IN ())  NULLS LAST, ((json_object(t0.c0, t0.c65)) NOT BETWEEN (((t0.c65) BETWEEN (0.26881757986537047) AND (t1.c0))) AND (((t1.c0)+(t0.c1)))), (~ ((t0.c1 IN ())));SELECT DISTINCT (((v0.c0 IN (t0.c49, t0.c0)))IS(((t0.c87) NOT BETWEEN (v0.c0) AND (t0.c1)))), NULL, (- (((v0.c0)%(v0.c0)))) FROM t0, v0; -- 0ms;
SELECT DISTINCT (NOT (x'')) FROM t1, v0; -- 0ms;
SELECT ALL CAST((t0.c0 IN ()) AS TEXT) FROM t0 GROUP BY ((((t1.c0) BETWEEN (t0.c49) AND (t0.c65))) IS TRUE), (((((v0.c0))<((t0.c87)))) NOT BETWEEN (((t0.c65) IS FALSE)) AND (json_insert(x'8218', t0.c0, t0.c49, t0.c87, '1215786157'))), ((((v0.c0) BETWEEN (t0.c49) AND (v0.c0))) BETWEEN (((t0.c65) IS FALSE)) AND (v0.c0)) HAVING CASE ((t1.c0) BETWEEN (t0.c1) AND (t0.c1))  WHEN (((t0.c65)) NOT BETWEEN ((t0.c87)) AND ((t1.c0))) THEN ((v0.c0)GLOB(v0.c0)) END;SELECT ALL CAST(t1.c0 AS REAL) COLLATE BINARY COLLATE NOCASE FROM t0, v0 ORDER BY CAST(CAST(t0.c0 AS TEXT) AS BLOB) LIMIT 1708628781 OFFSET -960635008;SELECT (((~ (t0.c49)))OR(t0.c87)) FROM v0 WHERE ((UNLIKELY(0Xffffffffddc9f7ec) IN ())) ORDER BY '1778622924'  NULLS FIRST, ((((((v0.c0)AND(t0.c87)))OR(t0.c65))) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN '6!U' THEN t0.c49 WHEN v0.c0 THEN t0.c65 WHEN v0.c0 THEN t0.c49 WHEN t0.c65 THEN t1.c0 END) AND (NULL)) DESC  NULLS LAST, (((t0.c49)+(t1.c0)) IN ())  NULLS FIRST;SELECT ALL (((((t0.c49, t0.c87, t0.c49))<((t0.c49, t0.c1, t0.c1))))>(((t0.c1) NOT NULL))) FROM v0, t0 GROUP BY CAST((((v0.c0))!=((v0.c0))) AS TEXT) HAVING UPPER(DISTINCT ((((t0.c87)OR(t1.c0)))OR(t0.c0))) LIMIT -28331765;SELECT DISTINCT CAST(((t0.c49)<=(v0.c0)) AS TEXT), t0.c49, GROUP_CONCAT(t0.c49) FROM t1, t0;SELECT DISTINCT FIRST_VALUE(((((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))AND(((((v0.c0)OR(v0.c0)))AND(v0.c0)))))AND(CASE WHEN v0.c0 THEN 0.8023782819553086 END))) OVER (), (((t1.c0)) NOT BETWEEN ((((((((((t0.c87)OR(NULL)))AND(t0.c87)))AND(t0.c65)))OR('-119954531')))) AND ((((((t0.c1)AND(t0.c1)))OR(t0.c1))))), ((0xffffffffbf65e84a)LIKE('')) FROM v0 WHERE (((((x'') ISNULL)) IS FALSE));SELECT (((((t0.c65, '699102746', t0.c65))>((t0.c49, v0.c0, t0.c65))))|('-1143266024')), (((2.1736393483684502E-5 IN ())) IS FALSE), COUNT(*) OVER () FROM t0 WHERE (CAST(((NULL)>=(NULL)) AS REAL));SELECT DISTINCT TYPEOF(((t0.c87) BETWEEN (t0.c1) AND (v0.c0))) FROM t1, t0;SELECT t1.c0 FROM v0, t1, t0 WHERE ((((0.18177859161851662)>(1.814932898E9)) IN ())); -- 0ms;
SELECT DISTINCT LAST_VALUE((((CAST(t0.c87 AS BLOB)))<=(('198577034')))) OVER () FROM t0, v0, t1 WHERE (((('173804332'))>((x'' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT LTRIM(COALESCE(DISTINCT t0.c1, t0.c65), CAST(t0.c1 AS BLOB)), (t0.c65 IN (t0.c87)) COLLATE NOCASE, ((GROUP_CONCAT(0.7999188225175591)) NOT NULL), (((((((((~ (t0.c49)))OR(UNICODE(t0.c1))))OR(CAST(t1.c0 AS TEXT))))AND(COUNT(*))))AND(((((v0.c0)OR(0.6213907479531942)))AND(t0.c0)))), (((((t0.c49, t1.c0, v0.c0))<=((t0.c65, v0.c0, t0.c49))))-(GROUP_CONCAT(t0.c49))) FROM t1, t0 WHERE (((0.7842590260653767)!=(CASE WHEN x'a51cf3f6' THEN -1150376874 ELSE 0.6288462521814774 END)));SELECT ((t0.c49) IS FALSE) COLLATE BINARY FROM t0, v0; -- 0ms;
SELECT DISTINCT ((((((((t0.c65 COLLATE NOCASE)OR((+ (t0.c87)))))OR(((((t0.c49)AND(t0.c87)))AND(t1.c0)))))OR(t1.c0)))OR(t0.c87 COLLATE NOCASE)), (((((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c1))))<=((AVG(t0.c0)))), ((((COUNT(t1.c0))AND(HEX(v0.c0))))OR(LOWER(t0.c65))), (json_patch('0.26881757986537047', t0.c49) IN (t0.c49 COLLATE NOCASE)), (((~ (t0.c65))) NOT NULL) FROM t1 WHERE (CAST((~ (x'')) AS INTEGER));SELECT ALL ((LIKELIHOOD(t0.c87, 0.23748835733183904))GLOB((((t0.c87, t1.c0, t1.c0))<((t0.c0, t0.c87, t0.c1))))) FROM t1, t0, v0; -- 1ms;
SELECT ABS(DISTINCT ((NULL)<=(t0.c49))) FROM v0 WHERE (((rtreenode(NULL, 0.986875415400001))||((((0.9560620958657957)) BETWEEN (('S궢x')) AND ((''))))));SELECT DISTINCT CASE '-960635008'  WHEN ('' IN ()) THEN ((t1.c0) NOT BETWEEN (t0.c65) AND (t0.c87)) WHEN ((t0.c49)IS(v0.c0)) THEN (NOT (t0.c0)) WHEN ABS(t0.c87) THEN ((v0.c0)/(t0.c49)) ELSE t0.c1 END FROM t1, v0, t0 WHERE (json(((((((((x'')AND('-1083840438')))OR(0X15a84daf)))AND('C-y碝乗^]')))AND('|F')))); -- 0ms;
SELECT SUM(((t0.c0) BETWEEN ('703085102') AND (t0.c49))) OVER () FROM t0 ORDER BY ((((((((CAST(x'cb7d' AS REAL))AND((((x'd833')) NOT BETWEEN ((t1.c0)) AND ((v0.c0))))))AND(((t0.c0) BETWEEN (t0.c1) AND (t0.c49)))))AND(((((t0.c1)AND(v0.c0)))OR(t0.c1)))))AND(((((t0.c1)OR(NULL)))AND(x'')))), CASE WHEN ((0X631023e1)|(t0.c65)) THEN CASE t0.c1  WHEN 8.75828438E8 THEN t0.c49 ELSE t0.c87 END ELSE (~ (t0.c65)) END ASC;SELECT ((((t1.c0)-(t0.c1))) BETWEEN (MAX(t0.c87)) AND (SUM(t1.c0))) FROM t1, v0 WHERE (((((0.6261703874181215)<>(x'')))!=(((((((((x'')AND(0X48776cad)))AND(NULL)))AND(NULL)))AND(x''))))) ORDER BY CASE (- (t0.c0))  WHEN CAST(t0.c1 AS INTEGER) THEN ((((v0.c0)AND(t1.c0)))OR(t0.c87)) WHEN ((t0.c0) IS FALSE) THEN ((t1.c0) IS TRUE) WHEN t0.c49 COLLATE RTRIM THEN (t1.c0 IN ()) END, ((((t0.c0) ISNULL)) BETWEEN (((t1.c0) NOT BETWEEN (t0.c87) AND (0x4de03a3f))) AND ((~ (t0.c0)))) DESC  NULLS FIRST, CASE t0.c0  WHEN ((t0.c0) NOT NULL) THEN (((t0.c87)) BETWEEN ((t1.c0)) AND ((t0.c0))) WHEN ((t0.c49) NOT BETWEEN (t0.c1) AND (t0.c65)) THEN ((((v0.c0)OR(t1.c0)))AND(t1.c0)) WHEN TYPEOF(t0.c49) THEN ((((t0.c65)OR(t0.c1)))AND(t0.c1)) END DESC  NULLS FIRST LIMIT 703085102;SELECT DISTINCT ((((t0.c0) ISNULL))==(((t0.c87)IS NOT(t0.c1)))) FROM t0 INNER JOIN v0 ON (((NULL))>((((t0.c87) BETWEEN (t0.c87) AND (t0.c1))))) WHERE (CASE ((('1814932898', '-1665118461', NULL, NULL, NULL)) BETWEEN ((x'', 1.47648603E8, 0.7705805630687446, 0Xffffffffba40f34f, x'')) AND ((x'655a', x'25e4', 'Y9', ']o%', 0.8038593849211747)))  WHEN (('')OR('68777580')) THEN CAST(NULL AS REAL) ELSE ('1659795223' IN ()) END) LIMIT 198577034 OFFSET 657850067; -- 0ms;
SELECT DISTINCT (((((~ (t0.c87)))AND((t1.c0 IN ()))))AND(((((((((v0.c0)AND(t0.c1)))OR(t0.c87)))AND(t0.c65)))AND(t0.c1)))) FROM v0, t1, t0; -- 0ms;
SELECT DISTINCT (~ (v0.c0)) COLLATE RTRIM, LIKE((t0.c87 IN (t0.c49)), ((((((((v0.c0)AND(v0.c0)))AND(x'')))AND(v0.c0)))AND(0.8604953134584499)), '6'), CAST((~ (t0.c65)) AS NUMERIC) FROM t0, t1 WHERE ((((('7L')LIKE(0.7933859137924869))) NOTNULL));SELECT DISTINCT CASE ((((((((t0.c49)OR(t1.c0)))AND(t0.c49)))AND(t0.c65)))AND(t1.c0))  WHEN ((t0.c0) NOT BETWEEN ('-1170148529') AND (t0.c49)) THEN t0.c65 END, ((((t1.c0) NOT BETWEEN (t0.c49) AND (t0.c65))) BETWEEN (t0.c0 COLLATE NOCASE) AND (((t0.c49) BETWEEN (t0.c87) AND (v0.c0)))), 0.023590821530235728 COLLATE BINARY FROM t0 WHERE (CAST(LIKELY(0.4147561260264383) AS BLOB));SELECT ALL t0.c0 FROM t1, t0, v0 WHERE (COALESCE(6367910553155020080, CASE 0.06366271192109618  WHEN '}' THEN '' END)) GROUP BY (((t0.c1)) NOT BETWEEN ((json_extract(t1.c0, v0.c0))) AND ((CASE WHEN v0.c0 THEN t1.c0 END))) HAVING (((t1.c0)) NOT BETWEEN (((((t0.c65))<>((t0.c65))))) AND (((0Xfffffffff8d9a39d IN ())))); -- 0ms;
SELECT (CAST(t0.c65 AS TEXT) IN (CASE WHEN t0.c49 THEN t0.c49 END)) FROM v0, t1 WHERE (((((((x'') BETWEEN (0xffffffffffffffff) AND (0.9120269007975751)))AND(NULL COLLATE NOCASE)))OR(CAST('' AS BLOB)))) ORDER BY CAST(((v0.c0) IS FALSE) AS REAL);SELECT DISTINCT ((((x'28b5')-(t1.c0))) NOT BETWEEN (((v0.c0)GLOB(t0.c49))) AND (x'')) FROM t1, t0, v0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT t0.c0, t0.c87), (NOT (CASE t0.c0  WHEN t0.c1 THEN v0.c0 WHEN t0.c49 THEN t0.c65 WHEN x'' THEN t1.c0 ELSE v0.c0 END)), CAST(x'1460' AS INTEGER) FROM v0 WHERE (CAST(((7.57019935E8) NOTNULL) AS INTEGER));SELECT DISTINCT COUNT((((t0.c65)) NOT BETWEEN ((t0.c1)) AND ((v0.c0)))) OVER () FROM v0, t0 WHERE (((((0.734376990075767)) BETWEEN ((x'')) AND ((NULL))) IN ((- (0.09612919228359218)), ((NULL) BETWEEN (-9.07074426E8) AND (''))))) ORDER BY CAST(COALESCE(x'', v0.c0) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN NULL THEN t0.c65 END), CASE (t0.c49 IN (t0.c87, t0.c1))  WHEN ((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c65)) THEN ((t0.c1)<=(t0.c49)) WHEN ((t1.c0) NOTNULL) THEN ((t0.c65)>=(t1.c0)) WHEN CASE WHEN x'56ca' THEN x'' ELSE t0.c65 END THEN (((t0.c87, x'', t1.c0))>=((v0.c0, NULL, t0.c87))) END, '-1753637331' FROM t0, v0 WHERE ((((('-1405939695') BETWEEN (x'') AND (NULL)))IS NOT(x'' COLLATE BINARY)));SELECT ALL ((((t0.c0)<=(NULL)))IS NOT((NOT (t0.c49)))), CAST((((t0.c87))==((t1.c0))) AS TEXT), ((((t0.c49)&(t0.c87))) NOTNULL) FROM t0, t1 WHERE (((((((-1.425298668E9)GLOB('?{%YJ')))OR(CASE WHEN 'RgIC[' THEN NULL WHEN -1646040222 THEN '1821824869' WHEN x'0579' THEN '}n\p(ga.D' ELSE x'' END)))OR(COALESCE(DISTINCT '875828438', 0.9875918122599064)))); -- 0ms;
SELECT DISTINCT CAST(((t1.c0)IS(t0.c1)) AS NUMERIC) FROM v0 LIMIT -1825736356;SELECT DISTINCT NULL, ((SUM(NULL)) BETWEEN ((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((t0.c87)))) AND (t0.c65 COLLATE NOCASE)), ((CASE WHEN t0.c65 THEN t0.c65 WHEN t0.c87 THEN t0.c87 WHEN t0.c1 THEN v0.c0 END) IS FALSE) FROM t0;SELECT ALL ((NULL) NOT BETWEEN (((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c1))) AND ((((t0.c1, t0.c87, t0.c0)) NOT BETWEEN ((t0.c1, t0.c49, t1.c0)) AND ((v0.c0, t0.c49, t0.c87))))) FROM t1, t0, v0 WHERE (((((NULL COLLATE RTRIM)OR(((NULL) IS TRUE))))AND(-1646040222 COLLATE NOCASE))) LIMIT 1820095818 OFFSET 1793931021; -- 0ms;
SELECT ((MIN(t0.c65))-((- (t0.c0)))) FROM v0;SELECT DISTINCT AVG(((t0.c1) IS FALSE)) OVER () FROM v0, t0 WHERE (CASE (('-1726730436') IS TRUE)  WHEN ((0.17008856945654172) NOTNULL) THEN NULL ELSE ((x'3cc3')LIKE('-2077359160')) END); -- 1ms;
SELECT ALL ((((t0.c49) NOT BETWEEN (t0.c1) AND (t0.c65))) IS FALSE) FROM t0, t1 WHERE (CASE WHEN (('_m') BETWEEN (0.5081107567821748) AND ('198577034')) THEN LIKELY('S') WHEN CAST(0.9413701131046527 AS NUMERIC) THEN ((0.6709480176514153)<<('y{EZi9')) WHEN CAST(NULL AS REAL) THEN json_object('441424011', 'H&\nC9p') ELSE (('') ISNULL) END); -- 0ms;
SELECT DISTINCT (~ (((t1.c0)|(0.9873212891241847)))) FROM t1, v0, t0 WHERE (((((((x'b45a')OR('')))OR(1708628781 COLLATE RTRIM)))OR('' COLLATE RTRIM))); -- 1ms;
SELECT 'I}' FROM t1; -- 0ms;
SELECT ((((t0.c49) NOTNULL))<((((v0.c0)) BETWEEN ((v0.c0)) AND ((t1.c0))))) FROM v0, t0, t1 WHERE (CASE WHEN CAST(NULL AS REAL) THEN ((0.7934617978404007) ISNULL) END); -- 0ms;
SELECT DISTINCT (~ (((t0.c87)OR(t1.c0)))) FROM t0 WHERE ((((((x'f86f68eb')) BETWEEN ((x'')) AND ((x'')))) IS TRUE));SELECT DISTINCT t0.c87, (((NOT (t0.c49)))=(((((t0.c65)AND(t0.c1)))OR(t0.c87)))), CASE WHEN t0.c1 THEN t0.c49 WHEN t0.c49 THEN t0.c49 WHEN v0.c0 THEN v0.c0 END COLLATE NOCASE, (((((x'', v0.c0, t0.c65))<=((t0.c0, t0.c49, t1.c0))))IS NOT((((t0.c1, t0.c0, v0.c0))>=((v0.c0, 'w&', t0.c65))))), RANK() OVER () FROM v0, t1, t0; -- 1ms;
SELECT DISTINCT (((((NOT (t1.c0)))OR(((t0.c87)IS NOT(t0.c0)))))OR(COUNT(*))) FROM t1, t0, v0 ORDER BY t0.c1 DESC  NULLS FIRST, ((((((x'', t1.c0, t0.c1))<((t0.c1, t0.c1, t0.c65)))))>(((~ (t0.c1))))) ASC  NULLS LAST, (CAST(v0.c0 AS NUMERIC) IN ()) ASC; -- 2ms;
SELECT ALL AVG((t0.c87 IN ())) FROM t0, t1 WHERE (((((0.2543900868684933)OR((- ('-690008178')))))AND(((0.2887591286871155)+(x'004e'))))); -- 0ms;
SELECT COUNT(*) FROM t0, v0, t1; -- 0ms;
SELECT DISTINCT ((((((v0.c0) ISNULL))OR(CASE t0.c1  WHEN t0.c0 THEN v0.c0 ELSE t0.c0 END)))OR(((v0.c0)*(t0.c0)))) FROM v0 WHERE ((+ (x'')) COLLATE RTRIM COLLATE NOCASE);SELECT (~ (((t1.c0)<=(v0.c0)))), CAST(((((t0.c65)AND(t0.c49)))AND(t0.c65)) AS BLOB), CASE ((v0.c0) ISNULL)  WHEN MIN(t0.c1) THEN ((((t0.c87)AND(t1.c0)))AND(t0.c1)) WHEN ((t0.c49) BETWEEN (v0.c0) AND (t0.c0)) THEN CASE WHEN 0.41440188942490375 THEN v0.c0 END WHEN TIME(t0.c0, v0.c0, t0.c0) THEN t0.c0 COLLATE NOCASE END, (((t0.c87)) BETWEEN ((AVG(t1.c0))) AND ((CAST(t0.c0 AS REAL)))), ((t0.c0 COLLATE RTRIM) NOT NULL), ((((((t0.c87)) BETWEEN ((t0.c0)) AND ((t0.c49))), t0.c1, ((((((((x'dc2c')OR(NULL)))OR(t0.c1)))AND(t0.c65)))OR(t0.c65)), ((((t0.c1)AND(t0.c1)))OR(t0.c49)), v0.c0 COLLATE RTRIM))==((t1.c0 COLLATE RTRIM, ((((((((t1.c0)AND(t0.c65)))OR(v0.c0)))AND(t0.c49)))OR(t0.c1)), 0.8604953134584499 COLLATE NOCASE, COUNT(x''), ((v0.c0)LIKE(t0.c1))))), (((t0.c49)==(t0.c65)) IN ()) FROM t1, t0, v0 WHERE (((((- (NULL))))=((x'60283acc' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT CAST(((x'')GLOB(t0.c0)) AS NUMERIC), UNLIKELY(t0.c49), ((((((v0.c0)OR(t0.c1)))AND(t1.c0))) NOT BETWEEN (LIKELIHOOD(t0.c0, 0.7193417703880344)) AND ((t1.c0 IN ()))) FROM t0, v0, t1; -- 1ms;
SELECT ALL ((((((((((((CASE WHEN t0.c49 THEN v0.c0 ELSE v0.c0 END)OR(CASE t0.c1  WHEN t0.c49 THEN t0.c65 END)))AND((((t1.c0))<((t0.c0))))))AND(((((t1.c0)OR(t0.c65)))OR('')))))AND(((((t1.c0)AND(t0.c65)))OR(t0.c1)))))AND((((t0.c65)) NOT BETWEEN ((t0.c49)) AND ((t0.c0))))))AND(((t0.c0) NOT NULL))), (NOT (((0.12888589617536972)>(t0.c65)))), (((t0.c1) IS TRUE) IN (((x'b452') IS FALSE))) FROM v0, t1, t0 GROUP BY (((((NULL, t0.c87, NULL)) BETWEEN ((t1.c0, t0.c1, v0.c0)) AND ((0.6551145007435908, 1719056685, t0.c49))))LIKE(t0.c87 COLLATE BINARY)), t0.c49, UNLIKELY(((t0.c49)<=(t0.c1))); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t0, t1 ORDER BY (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c65 COLLATE NOCASE))), (((((t0.c1, t0.c0, t0.c1)) BETWEEN ((t0.c49, NULL, t0.c65)) AND ((t0.c65, t0.c1, t0.c49)))) NOT BETWEEN (v0.c0) AND (LIKELY(DISTINCT t0.c1)));SELECT ALL MAX(t1.c0, v0.c0) COLLATE RTRIM FROM v0;SELECT DISTINCT ((HEX(DISTINCT t1.c0)) BETWEEN (CAST(t0.c49 AS BLOB)) AND ((((t0.c49))>((t0.c49))))), (((((((t0.c65)OR(t1.c0)))OR(t0.c49)), ((((t0.c1)AND(t0.c87)))OR(t0.c0)), t0.c65))<(((((t1.c0, t0.c0, t0.c87)) NOT BETWEEN ((t0.c65, t0.c1, t0.c1)) AND ((t0.c87, v0.c0, v0.c0))), INSTR(t0.c1, ''), t0.c65))), ((t0.c1) BETWEEN (TRIM(t0.c0, t0.c0)) AND ((NOT (t0.c49)))) FROM v0 WHERE (((CASE 0.6288462521814774  WHEN NULL THEN 1662002145 END) IS FALSE));SELECT ALL NTILE((((t0.c49) NOT BETWEEN (v0.c0) AND (t0.c49)) IN ())) OVER ( PARTITION BY t1.c0, CAST(((t0.c49) BETWEEN (t0.c49) AND (NULL)) AS BLOB)), x'', ((SQLITE_COMPILEOPTION_USED(t0.c1))>=(((((((((t0.c65)OR(t0.c49)))OR(t0.c49)))OR(t0.c0)))AND(t0.c1)))), x'9bee', NULL FROM t0, t1, v0 WHERE ((('(!jH')IS('1832988541')) COLLATE RTRIM) ORDER BY ((((((t1.c0)*(t1.c0)))OR(CASE t1.c0  WHEN t0.c0 THEN v0.c0 END)))AND(CASE t0.c65  WHEN t0.c87 THEN t0.c65 ELSE v0.c0 END)); -- 0ms;
SELECT ALL json_extract(0.9543183266325037, CAST(t0.c49 AS BLOB)) FROM t0, v0 WHERE (((((NULL) NOT BETWEEN (NULL) AND (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((((t1.c0)OR(t0.c65)))OR(t0.c87))) NOTNULL) FROM v0, t0 GROUP BY (- (((v0.c0)&(t0.c1)))), (((t0.c65 IN ('%j')))LIKE((~ (t0.c1)))), NULL, CASE t0.c1  WHEN t0.c49 THEN t0.c0 WHEN t0.c49 THEN t0.c0 WHEN 0.7076777457055402 THEN t0.c0 ELSE t0.c49 END COLLATE BINARY, CAST(((t0.c49) IS FALSE) AS NUMERIC) HAVING COALESCE(DISTINCT CASE WHEN t0.c49 THEN t0.c49 WHEN t1.c0 THEN t0.c65 WHEN t1.c0 THEN t0.c0 END, CAST(t0.c87 AS REAL), ((((t0.c65)AND(t0.c65)))OR(t0.c1)), ((t0.c49) ISNULL), TOTAL(t0.c1), GROUP_CONCAT('')) ORDER BY TYPEOF((- (x''))) DESC;SELECT DISTINCT TOTAL(x'') FROM t0 WHERE (((NULL)||(0.4085586793431064))) ORDER BY 0.7842590260653767 DESC, ((NULL) NOTNULL) COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT (~ ((t0.c49 IN ()))), NULLIF(DISTINCT CAST(t0.c87 AS INTEGER), (t0.c49 IN ())), TOTAL((('Yg&N%풋|>1') IS TRUE)) FILTER(WHERE t0.c0) OVER ( ROWS NULL PRECEDING) FROM v0, t0, t1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), MAX(((t1.c0)*(0x585f5ce8d2442530))), ((((CAST(t0.c87 AS INTEGER))AND((t0.c49 IN ()))))AND('')) FROM t0, v0, t1 ORDER BY ((((LOWER(DISTINCT t1.c0))AND(((t0.c65) IS TRUE))))AND(((((v0.c0)OR('')))AND(t0.c1))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((((((((t0.c1)AND(t1.c0)))OR(t0.c49)))OR(((((t0.c0)AND(t1.c0)))AND(t0.c49)))))OR(((t0.c49) NOT BETWEEN (t0.c65) AND (t0.c1)))))OR(t0.c87 COLLATE RTRIM)))OR(NULL)))AND(((t1.c0) NOTNULL))))OR(CAST(t1.c0 AS BLOB))) FROM v0, t1 WHERE (NULL);SELECT DISTINCT 0.8183348426678899, ((NULLIF(t1.c0, t0.c0)) IS TRUE), (+ ((((t0.c49))<((t0.c1))))) FROM t1, v0, t0 WHERE ((NOT (CASE NULL  WHEN NULL THEN 47875913 ELSE '' END))); -- 1ms;
SELECT DISTINCT ((((((((MAX(t0.c1))AND(t1.c0)))AND(((t0.c1) ISNULL))))AND((t0.c0 IN ()))))AND((t1.c0 IN (t0.c87)))) FROM t1 INNER JOIN v0 ON (~ ((v0.c0 IN ()))) WHERE (CAST((('8A&+')<<(x'')) AS NUMERIC)) GROUP BY CASE WHEN ((v0.c0) NOT BETWEEN (t0.c87) AND (t1.c0)) THEN ((t0.c1) NOTNULL) WHEN ((t0.c1)/(t0.c65)) THEN ((t0.c0)AND('1128323447')) WHEN (((('0.6213907479531942')OR(t1.c0)))AND(t0.c0)) THEN t0.c1 COLLATE RTRIM END, t0.c1, (~ (((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c65))));SELECT DISTINCT TOTAL(((t0.c0)=(t0.c0))) OVER (), CAST(((t0.c65)>>(t1.c0)) AS INTEGER), CASE WHEN CASE WHEN t0.c65 THEN t0.c87 ELSE v0.c0 END THEN (t0.c49 IN ()) WHEN (t0.c1 IN ()) THEN t0.c87 COLLATE BINARY WHEN ((((((((t0.c65)OR(t0.c1)))OR(t1.c0)))AND(v0.c0)))OR(t0.c0)) THEN ((t0.c1) NOTNULL) ELSE ((t0.c87) BETWEEN (t0.c1) AND (t0.c65)) END FROM t1, t0, v0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((t0.c49)!=(0.18738523460859102))) FROM v0, t0; -- 1ms;
SELECT (- (x'')) FROM t1, v0, t0; -- 1ms;
SELECT DISTINCT ((((t1.c0) NOT BETWEEN (v0.c0) AND (t0.c87)))<(AVG(t1.c0))) FROM t0 WHERE ((((((((((((x'eaaa'))>((0.8410662220267187))))AND(CAST('' AS NUMERIC))))OR(UNLIKELY(DISTINCT 0.21949185634278956))))AND(((('t#NUb'))>(('710205841'))))))AND(0.8360607367752833 COLLATE NOCASE)));SELECT PERCENT_RANK() OVER () FROM t0, t1 WHERE ((((((((('pG1Ma|K')OR(NULL)))OR(x'a0ea')))OR((((x'd42b', '1246847113', '1773422935')) NOT BETWEEN ((NULL, '', x'')) AND (('H', '', x''))))))AND(((x'7b51') IS TRUE)))); -- 0ms;
SELECT COUNT(t0.c49 COLLATE NOCASE) FROM t0, v0 WHERE (((((((0.6607995090444673)AND('yt')))OR('-1143266024')))*(UPPER(1.022801199E9)))); -- 3ms;
SELECT ALL COUNT(*) FROM v0, t1 NOT INDEXED, t0 WHERE (CASE (('-573966356') IS FALSE)  WHEN 0.8943874008465795 THEN NULL COLLATE BINARY END) ORDER BY SQLITE_SOURCE_ID() ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX(((t0.c49)/(t0.c49))) FROM t0 WHERE (((((x'2bb4')OR(0.5328046206772717)))OR('-1170148529')) COLLATE BINARY) ORDER BY ((CASE WHEN t0.c87 THEN t0.c49 ELSE t0.c49 END)IS NOT('\%qX/o')), ((CAST(t0.c49 AS TEXT))AND(CAST(t0.c49 AS NUMERIC))) ASC; -- 0ms;
SELECT DISTINCT SUM(INSTR(t1.c0, t0.c49)) OVER () FROM v0, t1, t0 GROUP BY (((((t0.c1)>(t0.c87)), ((t0.c49) NOT BETWEEN (NULL) AND (t0.c1)), t0.c49 COLLATE BINARY))=((x'', ((t0.c87)/(t1.c0)), CAST(t0.c1 AS REAL)))); -- 0ms;
SELECT LAST_VALUE((t1.c0 IN ()) COLLATE RTRIM) OVER () FROM t0, v0, t1 WHERE (((('-804133165' IN ()))-(x''))); -- 0ms;
SELECT DISTINCT ((((v0.c0)IS NOT(t1.c0)))IS(t1.c0 COLLATE BINARY)), ((((t0.c1) NOT BETWEEN (v0.c0) AND (t0.c49))) ISNULL), CAST((((t0.c49, t0.c65, t1.c0))>=((v0.c0, t0.c49, v0.c0))) AS NUMERIC) FROM t0, v0, t1; -- 0ms;
SELECT DISTINCT (t1.c0 IN ()) COLLATE BINARY, ('-119954531' IN ()), TIME(0.934559877576634, t0.c65 COLLATE NOCASE, (((t0.c49)) BETWEEN ((t0.c1)) AND ((t0.c65)))) FROM t1, v0, t0 WHERE ((((('<~')GLOB(164423687))) BETWEEN (CASE WHEN x'' THEN '' WHEN '1355649842' THEN x'' WHEN 0.19484165708230483 THEN '' WHEN NULL THEN x'41e4' WHEN x'6506' THEN 0.2868482505617693 END) AND (((x'')GLOB(0.6426959043130862))))) GROUP BY (((('') IS FALSE)) IS FALSE); -- 0ms;
SELECT DISTINCT FIRST_VALUE(v0.c0) OVER () FROM t1, v0 GROUP BY ((((t0.c1) BETWEEN (t1.c0) AND (t0.c49)))>(0.1666521558945181 COLLATE NOCASE));SELECT COUNT(CAST(t0.c65 AS TEXT)) OVER (), NTILE(TRIM(DISTINCT CAST(t0.c65 AS BLOB), ((t0.c49) NOT BETWEEN (t0.c0) AND (t0.c1)))) OVER (), (((CAST(t1.c0 AS TEXT), SQLITE_SOURCE_ID(), ((t1.c0)/(t1.c0)), (((0.7487936868681849, t0.c87, x'7eb9')) BETWEEN ((0.6213907479531942, v0.c0, t0.c87)) AND ((t0.c87, t0.c87, t0.c0))), ((t0.c0) NOT NULL)))<>((((t0.c0)>>(t0.c1)), CAST(t0.c65 AS NUMERIC), (t0.c87 IN ()), t1.c0, ((v0.c0) ISNULL)))), COUNT(*), NTILE(CASE WHEN CAST(t0.c0 AS TEXT) THEN (t0.c65 IN ()) WHEN 0.16155450736018429 THEN ((((t0.c49)AND(t0.c0)))AND(x'')) WHEN 0.22441746542108898 COLLATE BINARY THEN CAST(t0.c1 AS INTEGER) END) OVER () FROM t1, t0 WHERE (x'') GROUP BY x'27cb', ((((t0.c0 COLLATE BINARY)AND(t0.c87 COLLATE NOCASE)))OR(((NULL)||(t0.c65)))), -1469312430;SELECT DISTINCT COUNT(*) OVER (), ((((x'9942')<<(t0.c49)))LIKE(MAX(t0.c1, t1.c0))), (~ (((t0.c87)%(t0.c65)))) FROM t0, v0;SELECT DISTINCT t1.c0 FROM t0 WHERE ((((NOT (x'')))OR(((x'')GLOB(x'')))));SELECT ALL CAST(t0.c65 COLLATE NOCASE AS INTEGER) FROM t0 WHERE (((LIKELIHOOD(NULL, 0.022682030310230195)) IS FALSE)); -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS NUMERIC)) IS FALSE), CAST(AVG(t0.c0) AS REAL), COUNT(*) FILTER(WHERE ((((t0.c49) BETWEEN (t0.c87) AND (t0.c49)))>>(t0.c0))) OVER () FROM v0, t1, t0 WHERE (((CAST(0.9880106197543441 AS INTEGER))<=(0.5496603523618258))); -- 0ms;
SELECT DISTINCT (((((t0.c65, t0.c65, t0.c49, t0.c0, t0.c87)) NOT BETWEEN ((t1.c0, x'', 0.8604953134584499, t0.c1, t1.c0)) AND ((t0.c65, t0.c1, 1821824869, t0.c87, t0.c49))))OR(((t0.c1) BETWEEN (t0.c87) AND (t0.c65)))), CAST(CAST(t0.c87 AS BLOB) AS REAL), CAST(((t0.c1)==(t0.c1)) AS NUMERIC) FROM t0;SELECT DISTINCT ((LTRIM(t1.c0, t0.c65)) IS FALSE), (NOT (((t0.c1) NOTNULL))), ((CASE t0.c0  WHEN t0.c49 THEN t0.c65 ELSE t0.c49 END)IS NOT(GROUP_CONCAT(t0.c49))) FROM v0 GROUP BY QUOTE((NOT (t0.c0))) HAVING ((CAST(t0.c49 AS NUMERIC))GLOB(CAST(t0.c65 AS REAL)));SELECT ALL PRINTF(((((v0.c0)AND(t0.c65)))OR(t0.c1))), t0.c65, ((((((((NULL)AND(t0.c87)))OR(CAST(t0.c49 AS TEXT))))AND((v0.c0 IN (t0.c0)))))OR(t0.c87)) FROM v0, t1, t0 WHERE (LTRIM(((0xffffffff82084b6a)<=('')))) GROUP BY (NOT (CAST(v0.c0 AS BLOB))) HAVING (((t0.c0 IN ())) NOTNULL) LIMIT -979575820; -- 1ms;
SELECT DISTINCT AVG('I}') FROM t0, v0 WHERE (IFNULL(((1.724286352E9)AND('-100501123')), (NOT (0.46663395271426)))); -- 0ms;
SELECT (+ (t0.c65 COLLATE RTRIM)), ((0.18177859161851662)<(((t0.c1)IS(t1.c0)))), ((t0.c65 COLLATE BINARY)<=((t0.c49 IN ()))), rtreenode(((t0.c49) BETWEEN (t0.c1) AND (0.18894153882028975)), ((t0.c49) NOT NULL)), (((((t1.c0)) NOT BETWEEN ((x'02e9')) AND ((v0.c0))))IS NOT(RTRIM(v0.c0))) FROM v0;SELECT ALL ((((t0.c87)*(t0.c65))) BETWEEN ((((t0.c87))<=((t0.c0)))) AND (-1.46931243E9)), (((('1821824869')AND(t0.c49))) NOT BETWEEN (CAST(t0.c65 AS BLOB)) AND ((t0.c0 IN ()))), ((NOT (t0.c65)) IN (t0.c1 COLLATE BINARY)) FROM t1 GROUP BY CAST(((t0.c1)&(t0.c49)) AS BLOB) HAVING (((((t0.c1)>>(t0.c65)), CASE WHEN t0.c0 THEN t0.c1 END, ((t0.c87) NOT BETWEEN (t0.c1) AND (t0.c49))))<((((t1.c0)%(t0.c65)), ((t1.c0) NOT BETWEEN (v0.c0) AND (v0.c0)), CAST(t0.c1 AS REAL))));SELECT (~ (((t0.c65)IS NOT(t0.c49)))), (((((t0.c0)) BETWEEN ((t0.c65)) AND ((t0.c49))))IS(SUM('6[*f2'))), (((v0.c0)) BETWEEN (((('0.1666521558945181')%(t1.c0)))) AND ((0.12888589617536972))) FROM t0, t1, v0; -- 0ms;
SELECT ALL ((NOT (t1.c0)) IN ()) FROM t0; -- 0ms;
SELECT ALL CASE t0.c87  WHEN (((t0.c0, t0.c1, 0.22441746542108898, v0.c0, x'143f808a')) BETWEEN ((t0.c1, t0.c87, t0.c0, t0.c65, t1.c0)) AND ((t1.c0, t0.c87, v0.c0, t0.c87, t0.c1))) THEN ((t0.c87)%(t0.c1)) WHEN MIN(t0.c49) THEN ((((((((v0.c0)AND(v0.c0)))OR(t0.c49)))OR(t1.c0)))OR(t0.c87)) WHEN CASE WHEN t0.c1 THEN t0.c1 END THEN (+ (t0.c49)) END FROM v0, t0 GROUP BY CAST((- (v0.c0)) AS INTEGER) HAVING json_patch(t0.c1 COLLATE RTRIM, 'Rn');SELECT ALL ((((t0.c65) IS TRUE))>(((v0.c0)<>(t0.c49)))) FROM t0 WHERE (CAST((0.8634899307454159 IN ('1306540607')) AS NUMERIC));SELECT DISTINCT (t0.c0 COLLATE BINARY IN (((t0.c65)+(t0.c0)))), 0.0 COLLATE RTRIM, GROUP_CONCAT(((t1.c0)|(t0.c49))) FILTER(WHERE ((((v0.c0)OR(CASE WHEN t0.c0 THEN t0.c1 END)))AND(TRIM(DISTINCT t0.c65, v0.c0)))) OVER () FROM v0, t0, t1 WHERE (((('-910473431')IS NOT('-46121669')) IN ())); -- 0ms;
SELECT MAX(CAST(v0.c0 AS NUMERIC)), t0.c87, ((t0.c0)>(HEX(t0.c0))) FROM t0 NOT INDEXED, t1 WHERE ((((('1821824869', '0.6607995090444673', '-960635008')) BETWEEN ((NULL, '1880547580', 0x6a03a1cc)) AND ((NULL, 0.9615265003896659, x''))) IN ())) LIMIT 1586327892 OFFSET -1323017623;SELECT DISTINCT CAST(((t0.c1)AND(t0.c87)) AS BLOB) FROM v0, t1, t0; -- 0ms;
SELECT (CAST('-1557630478' AS REAL) IN ()) FROM t1, v0, t0 WHERE (x'aa31') GROUP BY (((~ (t0.c49))) BETWEEN ((('1793931021')==(NULL))) AND (((((((((t1.c0)AND(v0.c0)))AND(t0.c1)))AND(t0.c49)))OR(t0.c0)))) HAVING CHANGES(); -- 0ms;
SELECT DISTINCT x'' FROM v0, t1, t0; -- 0ms;
SELECT DISTINCT ((((v0.c0)==(t0.c1))) IS TRUE), t0.c0, CAST((t0.c49 IN (t0.c1)) AS TEXT) FROM v0 WHERE ((((('-100501123') NOTNULL)) IS FALSE));SELECT DISTINCT ((CASE WHEN t0.c87 THEN t0.c65 WHEN v0.c0 THEN t0.c87 WHEN 0.944101221567617 THEN t1.c0 END) NOT BETWEEN (((((((((x'')AND(t0.c0)))OR(NULL)))AND(t0.c1)))AND(t0.c65))) AND (t0.c87 COLLATE RTRIM)) FROM v0, t0 WHERE (CASE COALESCE(NULL, 0x18b27c4e, NULL, '')  WHEN UNICODE(x'') THEN (~ (0.9234522287286416)) WHEN ((NULL)IS NOT(x'')) THEN ((690315052)AND(0x581fe8b9)) WHEN CASE 0.199926619384582  WHEN NULL THEN x'' ELSE NULL END THEN '2.1736393483684502E-5' END);SELECT DISTINCT (NOT (CASE v0.c0  WHEN t0.c87 THEN t0.c87 END)) FROM t1, v0, t0 WHERE (((0.5954487545357035 COLLATE RTRIM)+((- (NULL))))) ORDER BY ((((HEX(t1.c0))AND(((((t0.c87)AND(t0.c65)))AND(t0.c49)))))OR(v0.c0)) LIMIT 862193922; -- 0ms;
SELECT ALL ((NULL)>(((((t0.c65)OR(t0.c87)))OR(t0.c1)))) FROM t1, v0, t0 WHERE ((((('|m沭䤋''>') NOTNULL)) NOTNULL)); -- 0ms;
SELECT ALL MIN(t0.c87, t1.c0) COLLATE RTRIM FROM t1;SELECT DISTINCT CAST(x'' AS NUMERIC) FROM t0, t1, v0 WHERE (((((((NULL, '-2121229467', x'')) NOT BETWEEN ((x'', 164423687, NULL)) AND (('WW\nH', NULL, ''))), ((x'') NOTNULL), '451908065', 0.04142898384241167, ((116969352)/(x''))))<=((CAST(NULL AS NUMERIC), CAST('-960635008' AS REAL), CASE WHEN '143997946' THEN '-0.0' WHEN NULL THEN x'' WHEN 0.42665836187011497 THEN NULL END, CASE WHEN 's-' THEN '1208296198' END, (('')IS NOT(0.8559519427132374)))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM v0, t1 WHERE ((((0.17008856945654172)) NOT BETWEEN (('-58982389')) AND (('7\no7*\n 4u'))) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((((t1.c0)IS NOT(t0.c49)))|(((t0.c87) NOT BETWEEN (t0.c65) AND (t0.c0)))) FROM v0, t0, t1; -- 0ms;
SELECT (((- (v0.c0)))|(CAST(0.2593571156830792 AS NUMERIC))) FROM v0, t1; -- 0ms;
SELECT ALL t1.c0 FROM v0, t1, t0 WHERE ((('juc!9㹨' COLLATE RTRIM)>(LAST_INSERT_ROWID()))); -- 0ms;
SELECT ALL (((- (t0.c87)))=(CASE t1.c0  WHEN x'bbf8f3253fcb' THEN t0.c65 WHEN t0.c87 THEN t0.c49 WHEN t0.c87 THEN t0.c87 WHEN v0.c0 THEN v0.c0 WHEN t0.c49 THEN t0.c1 ELSE t0.c49 END)), ((((t0.c65) NOT BETWEEN (t0.c0) AND (t0.c1))) ISNULL), CAST(((((((((t0.c49)AND(t0.c0)))AND(t0.c65)))OR(t0.c65)))OR(t0.c87)) AS BLOB) FROM t1 WHERE ((((NULL))>((0.9992561824600594))) COLLATE RTRIM);SELECT DISTINCT 0.6145063387601938 FROM v0, t1 GROUP BY ((((((t0.c49)AND(t1.c0)))AND(t0.c49))) NOTNULL);SELECT DISTINCT (((t0.c87)) BETWEEN ((CASE t1.c0  WHEN t0.c0 THEN t0.c0 END)) AND (((NOT (t0.c49))))) FROM t1, t0, v0; -- 0ms;
SELECT DISTINCT MAX(((t0.c65) IS FALSE)), COUNT(((t0.c65) BETWEEN (t0.c0) AND (t0.c0))), (NOT ((+ (t0.c0)))) FROM v0;SELECT ALL TOTAL((t1.c0 IN ())) OVER () FROM v0, t0; -- 1ms;
SELECT ((((t1.c0)LIKE(t0.c1))) NOT BETWEEN (((v0.c0) BETWEEN (t0.c49) AND (t0.c87))) AND (COUNT(t0.c0))), ((((((t1.c0))==((v0.c0))), (((t0.c49, -2.07735916E9, t0.c1, t0.c49, v0.c0)) BETWEEN ((t0.c0, t0.c1, t1.c0, t1.c0, t0.c49)) AND ((t1.c0, t1.c0, t0.c0, v0.c0, t0.c49))), CHANGES()))==((LIKELIHOOD(t0.c49, 0.2373242998436057), ((((t0.c49)OR(t1.c0)))AND(t0.c65)), ((t0.c49)IS(t0.c1))))), t1.c0, ((((((((((t0.c1)AND(t0.c49)))AND('&L')))OR(t0.c1)))AND(t0.c49))) NOT BETWEEN ((+ (t0.c65))) AND (CAST(t0.c0 AS INTEGER))), ((0Xffffffff8a143a51) BETWEEN (CASE WHEN t1.c0 THEN t0.c65 WHEN t1.c0 THEN NULL WHEN t0.c1 THEN v0.c0 END) AND (((t0.c87) IS TRUE))) FROM t0, t1;SELECT DISTINCT ((t0.c87)IS NOT(t0.c87)) COLLATE NOCASE FROM v0, t1, t0 WHERE ((((0xfffffffff14c8aeb IN ()))<<((('0')AND(NULL))))) ORDER BY (((~ (v0.c0))) ISNULL); -- 0ms;
SELECT (((t0.c49 IN ()))>(((t0.c49) BETWEEN (t0.c65) AND (t0.c87)))) FROM t0, t1 WHERE (((((0.7209339917941849) NOT NULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(CASE v0.c0  WHEN '\Jlccf,''9' THEN t1.c0 ELSE t0.c87 END AS BLOB) FROM v0, t1;SELECT DISTINCT CASE t0.c49  WHEN CASE t0.c87  WHEN t0.c1 THEN v0.c0 END THEN CASE WHEN t0.c87 THEN v0.c0 ELSE t0.c0 END ELSE NULL END FROM v0, t1, t0; -- 1ms;
SELECT DISTINCT ((t0.c87 COLLATE BINARY) ISNULL) FROM t0, v0, t1 WHERE (((x'' COLLATE NOCASE) NOTNULL)); -- 0ms;
SELECT DISTINCT t0.c1, MAX((((t0.c65)) NOT BETWEEN ((v0.c0)) AND ((0.9039369169531883)))), t0.c0 FROM t0, t1, v0; -- 0ms;
SELECT ALL ((((t0.c0 COLLATE RTRIM)OR(x'')))AND(-2.113385622E9)) FROM t1, v0;SELECT ALL ((NULL)<=(TRIM(t0.c1))) FROM v0, t0, t1 GROUP BY CAST((('-104187651') BETWEEN (t0.c49) AND (t0.c49)) AS REAL), ((((((((((t0.c0)/(t0.c49)))OR((t1.c0 IN ()))))AND(x'')))OR(CAST(t0.c87 AS REAL))))AND(((t1.c0)LIKE(t0.c65)))), t0.c65 HAVING (((t1.c0, t0.c0, t0.c65)) BETWEEN ((((((t0.c0)AND(t0.c65)))AND(v0.c0)), t0.c65, GROUP_CONCAT(t0.c65))) AND ((COUNT(t0.c87), (t0.c65 IN (t0.c65, t0.c1)), ((t0.c87)/(t0.c49))))); -- 0ms;
SELECT DISTINCT COUNT(NULL) OVER () FROM v0, t1, t0; -- 0ms;
SELECT LOWER((((t0.c49, v0.c0, t0.c1, t0.c65, '')) BETWEEN ((t1.c0, t0.c65, t1.c0, v0.c0, t0.c87)) AND ((t0.c49, t0.c65, t0.c65, t0.c0, t0.c87)))), CASE WHEN LIKE(t0.c1, t0.c1) THEN CASE WHEN t0.c65 THEN t0.c1 ELSE t0.c49 END WHEN CAST(t1.c0 AS REAL) THEN t0.c1 WHEN (+ (t0.c87)) THEN t0.c1 WHEN t0.c87 THEN ((t0.c0)AND(t0.c1)) WHEN CASE t0.c65  WHEN v0.c0 THEN t0.c87 END THEN (v0.c0 IN ()) END, (- (((t0.c65) BETWEEN (t0.c65) AND (t0.c1)))) FROM t0, v0 WHERE ((x'0f95' COLLATE NOCASE IN (TYPEOF(-834442945))));SELECT DISTINCT (~ (CAST(t1.c0 AS INTEGER))) FROM v0, t1 CROSS JOIN t0 ON TIME(((t0.c0) BETWEEN (t0.c0) AND ('<~')), json_array_length(v0.c0), ((t0.c1) IS FALSE), CASE WHEN '-907074426' THEN t0.c65 WHEN t1.c0 THEN t0.c0 WHEN 757019935 THEN t0.c87 ELSE t0.c65 END, ((NULL) NOT NULL), NULL, ((((v0.c0)AND(t0.c65)))AND(v0.c0))) LIMIT -1210099739 OFFSET 1939077869; -- 0ms;
SELECT DISTINCT CAST(TRIM(DISTINCT t1.c0, t1.c0) AS REAL), GROUP_CONCAT(CAST(t0.c1 AS REAL) COLLATE RTRIM) OVER (), (((t0.c65)) NOT BETWEEN ((COUNT(v0.c0))) AND ((t0.c65))) FROM t0 WHERE ((x'7971' IN (((NULL)||(x'')))));SELECT 0X695b127d COLLATE BINARY, 1.47648603E8, (((t0.c49) ISNULL) IN ()) FROM t1, t0, v0 WHERE (((LIKELIHOOD('-46121669', 0.37321764972178884)) NOT BETWEEN ((((-5.73966356E8))<((x'')))) AND ('-2037598481' COLLATE RTRIM))) LIMIT 1880547580 OFFSET 1418778705; -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(t0.c0)))OR('875828438')))-(((((t0.c49)AND(t0.c87)))OR('-815868789')))) FROM v0, t0 WHERE ((((((('Tw') IS FALSE))AND((('9N	 {乗') IS FALSE))))OR(TYPEOF(DISTINCT NULL)))); -- 4ms;
SELECT DISTINCT ((CASE WHEN t0.c65 THEN v0.c0 ELSE t1.c0 END) IS FALSE) FROM t1;SELECT ALL CAST(ROUND(t0.c1, t0.c49) AS TEXT) FROM t1, v0 GROUP BY '633773754', t0.c87, '}n\p(ga.D';SELECT DISTINCT CASE ((((NULL)OR(t0.c1)))AND(t0.c65))  WHEN CAST(t0.c65 AS BLOB) THEN COUNT(t0.c49) END FROM t0; -- 0ms;
SELECT (COUNT(t1.c0) IN ()) FROM t1, v0, t0 WHERE (CASE x''  WHEN (('3Shh') ISNULL) THEN (((''))==((0xffffffff875708ed))) WHEN NULL COLLATE NOCASE THEN ABS(x'0bb18068') WHEN ((((-1.536937594E9)OR(0x3970ab20)))AND('(rhl-d')) THEN (x'' IN ()) END); -- 0ms;
SELECT DISTINCT CAST(t0.c1 AS INTEGER) FROM v0, t1, t0; -- 0ms;
SELECT ((t0.c1) BETWEEN (((t0.c1)/(t0.c0))) AND (1964217056)), CASE CAST(t0.c1 AS INTEGER)  WHEN CAST(t1.c0 AS INTEGER) THEN '-2077359160' ELSE CASE t0.c65  WHEN t0.c1 THEN t0.c49 ELSE t0.c0 END END, (((v0.c0) ISNULL) IN ()) FROM t0, v0;SELECT DISTINCT CASE WHEN (((v0.c0)) BETWEEN ((t1.c0)) AND ((t0.c65))) THEN (t1.c0 IN ()) ELSE CASE v0.c0  WHEN v0.c0 THEN v0.c0 END END FROM t0, v0, t1; -- 0ms;
SELECT ((((+ (''))))<((SUBSTR(0.08594247368931074, t0.c87)))) FROM v0, t1;SELECT (((~ (t0.c65)))IS(CAST('{}' AS REAL))) FROM t0, t1, v0; -- 0ms;
SELECT DISTINCT UPPER(((((t0.c65)AND(NULL)))OR(t0.c0))), ((t0.c0)*(t0.c49)) COLLATE RTRIM, (- (((t0.c49) BETWEEN (v0.c0) AND (t0.c65)))) FROM t1, t0 WHERE (((CASE WHEN 0.9062154727303726 THEN x'' WHEN '.⒆<+&}' THEN '1422065059' WHEN x'' THEN 'X-%y' ELSE 0xfffffffff93544c9 END) NOT BETWEEN ('-2136900995' COLLATE BINARY) AND (NULL)));SELECT DISTINCT COUNT(*) FROM t1, v0, t0 WHERE (HEX(DISTINCT ('725019390' IN (x'', 'y{EZi9')))); -- 0ms;
SELECT t0.c49, (((((t0.c65))>=((t0.c87)))) NOT BETWEEN (CASE t0.c0  WHEN t0.c49 THEN t0.c0 WHEN t0.c87 THEN v0.c0 WHEN t0.c0 THEN t0.c65 WHEN t0.c0 THEN t0.c65 WHEN t0.c87 THEN t0.c87 END) AND (CASE t0.c87  WHEN t0.c65 THEN '' ELSE t0.c0 END)), v0.c0 FROM t1 ORDER BY (((t0.c1) BETWEEN (t0.c87) AND (v0.c0)) IN ()) ASC;SELECT DISTINCT COUNT(t0.c65), LAST_VALUE(((((t0.c65) IS TRUE))>>(CASE t0.c87  WHEN t1.c0 THEN t0.c49 WHEN t0.c65 THEN t1.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c65 THEN t0.c49 WHEN v0.c0 THEN t0.c65 END))) OVER ( ORDER BY ((((t0.c1)IS(t0.c87))) NOT NULL)), t0.c65 FROM t0, t1, v0; -- 0ms;
SELECT CASE WHEN SQLITE_VERSION() THEN GROUP_CONCAT(t0.c87) END FROM t1;SELECT DISTINCT ((((NOT (t0.c65)), HEX(t0.c87), ((v0.c0)LIKE(t0.c1))))>=((LIKELY(DISTINCT t0.c1), CAST(t0.c65 AS TEXT), (~ (t0.c1))))) FROM t1, t0;SELECT DISTINCT ((CAST(t0.c87 AS REAL))*(CASE t0.c0  WHEN t0.c65 THEN t0.c0 ELSE t1.c0 END)), ((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c49)) COLLATE BINARY, ((((t0.c0) BETWEEN (t0.c0) AND (NULL)))OR(x'')) FROM t0, t1, v0; -- 0ms;
SELECT ALL (((t1.c0, t0.c49, t0.c0)) NOT BETWEEN ((((((t0.c49)OR(t0.c1)))OR(t0.c1)), CAST(t0.c49 AS BLOB), (- (t0.c49)))) AND (((0x60da6c8a IN ()), x'' COLLATE BINARY, t0.c65))), AVG(((t0.c65) NOT BETWEEN (t0.c49) AND (t0.c87))) OVER (), ((((((((NULL)AND(t1.c0)))AND(t0.c87)))AND(v0.c0)))OR(t0.c1)) COLLATE RTRIM FROM t0 WHERE (CASE x''  WHEN (+ (441424011)) THEN LIKELY(DISTINCT 'c5Ws8&c') ELSE (('|F')||('-0.0')) END);SELECT DISTINCT (((CASE t0.c65  WHEN t1.c0 THEN t0.c65 END))>((((t0.c1) NOT NULL)))) FROM t0 ORDER BY (((t0.c87)IS(t0.c65)) IN ()) ASC;SELECT DISTINCT CAST('S' AS NUMERIC) FROM t1, v0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c1)) BETWEEN ((t1.c0)) AND ((t0.c87))) THEN UPPER(t0.c87) ELSE t0.c65 COLLATE BINARY END FROM v0 WHERE (((((TRIM(DISTINCT 'Rn'))OR(CAST('fyhj!ZW\n' AS REAL))))OR((((0.4252789980225984)) BETWEEN (('1115858973')) AND ((198577034))))));SELECT DISTINCT CASE CAST(t0.c1 AS NUMERIC)  WHEN ((t0.c0)|(t0.c0)) THEN x'' END, ((t0.c65 COLLATE RTRIM)<((t0.c65 IN ()))), ((((LOWER(DISTINCT v0.c0))AND(t1.c0 COLLATE BINARY)))AND(t0.c65 COLLATE RTRIM)) FROM t0, v0 WHERE (((((NULL) NOT BETWEEN (x'') AND (x'')))<<(('a8' IN ())))) ORDER BY ((t0.c49)<<(t1.c0)) COLLATE RTRIM;SELECT ALL t0.c1 FROM v0, t0; -- 0ms;
SELECT DISTINCT (- (t0.c49)) COLLATE BINARY FROM t1 WHERE ((((NULL)) BETWEEN ((((NULL) BETWEEN (NULL) AND (0.41440188942490375)))) AND ((NULL COLLATE BINARY)))) GROUP BY (((((t0.c87)OR(t0.c49)))AND('-162671680')) IN (t0.c49));SELECT DISTINCT (((((((t1.c0)AND(t0.c0)))AND(NULL))))<((t0.c0))) FROM t0, t1, v0; -- 0ms;
SELECT (~ (t0.c49 COLLATE NOCASE)) FROM v0, t0 WHERE (((((ABS('-2077359160'))AND(CHAR(NULL))))OR(((0.2835681420700128) BETWEEN (0.7961029519089482) AND ('-943880235'))))) LIMIT -341612827 OFFSET -442129815; -- 1ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM) IS FALSE) FROM t1 WHERE ((~ (((NULL)OR('-1224592435')))));SELECT t0.c49 FROM t1, t0, v0; -- 0ms;
SELECT ALL SUM(COALESCE(t0.c0, t0.c1, t0.c65, t1.c0)), MAX(((((((((((((((((t0.c87)OR(v0.c0)))AND(v0.c0)))OR(t0.c49)))AND(v0.c0)))OR(NULL)))AND(t1.c0)))AND(t1.c0)))AND(t0.c49))), (+ (((t0.c1)=(t1.c0)))) FROM v0, t0 LIMIT 1758346622;SELECT DISTINCT LIKELIHOOD(((t0.c87) NOT BETWEEN (t0.c0) AND (1.88054758E9)), 0.6939701859059616), t1.c0, CAST(((((((((((((t0.c65)AND(t0.c0)))AND(t0.c1)))AND(v0.c0)))OR(t0.c49)))OR(t1.c0)))AND(t0.c87)) AS NUMERIC) FROM v0;SELECT ALL 0xffffffff81909b65 FROM v0 WHERE (((0.2354736884311578 COLLATE NOCASE) IS TRUE)); -- 0ms;
SELECT DISTINCT (((TYPEOF(t0.c87), ((t0.c65) NOTNULL), ((t0.c0) NOT BETWEEN (t0.c65) AND (t0.c49))))<((((t1.c0) IS FALSE), '1470309974', ((t1.c0)<=(t1.c0))))) FROM t0 WHERE (NULL);SELECT DISTINCT (('875828438')*(t0.c1 COLLATE NOCASE)) FROM t0, v0, t1; -- 0ms;
SELECT DISTINCT CAST('-0.0' AS TEXT) COLLATE BINARY COLLATE RTRIM FROM t0, t1 GROUP BY ((((t0.c0)/(t0.c49))) BETWEEN (((0Xffffffffbb829a93) NOT NULL)) AND (((NULL)GLOB(t0.c65)))); -- 0ms;
SELECT ALL t0.c1, COUNT(*), UPPER(DISTINCT NULL) FROM t0, t1, v0; -- 0ms;
SELECT DISTINCT ((((t1.c0) BETWEEN (t1.c0) AND (t0.c65))) BETWEEN ((((t0.c49))==((t0.c0)))) AND (((v0.c0) BETWEEN (t0.c0) AND (t0.c1)))) FROM t0, v0 ORDER BY v0.c0, CAST(((t0.c0)&(t0.c87)) AS NUMERIC) ASC, ((((t0.c1) NOTNULL))/(CASE WHEN t0.c87 THEN t0.c65 ELSE t1.c0 END)) DESC;SELECT ((((((v0.c0))>=((t1.c0)))))==((((((((((t0.c87)OR(v0.c0)))AND(t0.c49)))OR(t0.c65)))OR(v0.c0))))) FROM t1, t0, v0 WHERE ((((NOT (1.246847113E9))) IS FALSE)) ORDER BY CASE WHEN ((t0.c65) BETWEEN (t0.c65) AND (t1.c0)) THEN (+ (t0.c87)) ELSE CASE t1.c0  WHEN '875828438' THEN t0.c87 ELSE t0.c87 END END ASC  NULLS LAST, ((((((((t0.c49)OR(0.47092584424830175)))OR(t0.c65)))AND(((t0.c49)|(t0.c87)))))AND(CAST(t0.c0 AS REAL))) ASC  NULLS LAST, ((CASE t0.c49  WHEN t0.c1 THEN t0.c49 ELSE t0.c0 END) NOT NULL)  NULLS FIRST; -- 1ms;
SELECT DISTINCT x'', '&IHY#Q', (((t0.c65)<(v0.c0)) IN ((NOT (t0.c87)))) FROM t1 WHERE ((((0.42665836187011497)) NOT BETWEEN ((((0.7518341427863875)<=(NULL)))) AND ((((x'')<('-1706257149'))))));SELECT DISTINCT MIN(((t0.c65) NOT BETWEEN (t0.c87) AND (t0.c1))), GROUP_CONCAT(((v0.c0)||(t0.c1))), ((t0.c65) IS FALSE) FROM v0 WHERE ((((0.2570456159810883)) NOT BETWEEN ((((((x'640c')AND('699102746')))AND(0x76b54d64)))) AND (((('')GLOB(NULL))))));SELECT DISTINCT COUNT(((((((((t0.c65)AND(v0.c0)))AND(t1.c0)))OR(v0.c0)))OR(t0.c49))) OVER ( PARTITION BY ((t0.c0)-('-280489071')), NULL, ((t0.c49 IN (t0.c49)) IN ()), NULLIF(((((((((((((t1.c0)OR(v0.c0)))OR(t0.c65)))AND(t0.c0)))AND(t0.c49)))AND(t0.c0)))AND(t0.c87)), ((v0.c0) IS FALSE))) FROM t0, t1 WHERE (((LIKELY(DISTINCT -9.7957582E8)) ISNULL));SELECT DISTINCT (t0.c1 COLLATE BINARY IN ((t1.c0 IN ()), TOTAL(t0.c0))) FROM t1 WHERE (((NULLIF(x'', 0.7000630299892446))||(JULIANDAY(NULL, x'', x'', 0.006018503790416907, '766098810')))) ORDER BY CASE ((v0.c0)IS NOT(t1.c0))  WHEN (((v0.c0))<((t0.c49))) THEN 0.7842590260653767 COLLATE RTRIM END, ((('0.8559519427132374', t1.c0, t0.c65)) BETWEEN ((t0.c0 COLLATE RTRIM, t0.c65 COLLATE NOCASE, t0.c1)) AND ((((t0.c65)LIKE(t0.c49)), '0.7933859137924869', t0.c49))) DESC  NULLS FIRST;SELECT ((((t0.c65) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE t0.c1  WHEN t0.c49 THEN '' WHEN t0.c87 THEN 0Xffffffff9a863b5c WHEN t0.c0 THEN t0.c65 ELSE t0.c65 END) AND ((((t0.c65))=((t0.c1))))) FROM v0 WHERE ((((NULL)) NOT BETWEEN (((NOT (x'')))) AND ((((0.17224365392647367)-(NULL))))));SELECT ((t1.c0)OR(CASE WHEN t0.c87 THEN t0.c0 WHEN t1.c0 THEN t0.c49 WHEN t1.c0 THEN t0.c49 ELSE '' END)) FROM t0, v0 LIMIT 656929249 OFFSET -662514787;SELECT DISTINCT ((((((t0.c65) NOT BETWEEN (t0.c0) AND (t0.c1)))AND((+ (t0.c65)))))AND(((t0.c65) ISNULL))) FROM t0 WHERE (((((NULL)<('116969352'))) BETWEEN (((((((((NULL)OR(x'')))OR('')))AND(0.7380515198634675)))AND('1964217056'))) AND (('1121091286' IN ())))); -- 1ms;
SELECT ALL (((((t0.c87))<((t0.c49)))) BETWEEN (COUNT(t0.c1)) AND (((0.34634972104055173) BETWEEN (t0.c65) AND (v0.c0)))) FROM t1 ORDER BY (((t0.c0) ISNULL) IN (json_remove(v0.c0, t0.c65)))  NULLS LAST, ((((((((((t0.c87) NOT BETWEEN (t0.c1) AND (t0.c49)))AND((t0.c65 IN ()))))OR(((((t0.c65)OR(t0.c1)))OR(t0.c49)))))AND(NULL COLLATE RTRIM)))OR((']' IN ()))) ASC;SELECT ((CAST(t0.c1 AS TEXT)) NOT NULL) FROM t0, t1, v0 WHERE ('-558805409'); -- 0ms;
SELECT ((((t0.c0)AND(t0.c65)))&((((v0.c0))!=((t0.c49))))) FROM t0 WHERE ((((((((((((((((('441424011')AND(1835062860)))AND(x'')))OR(0Xffffffffc7bd87d5)))AND(NULL)))OR(0X324851e5 COLLATE RTRIM)))OR((((('1e500')AND('')))AND(NULL)))))AND(x'bee0' COLLATE BINARY)))AND(0.25252163787587956 COLLATE RTRIM)));SELECT ALL ((CASE t0.c1  WHEN t0.c65 THEN t0.c87 ELSE t0.c1 END) ISNULL), ((((t1.c0)>>(t0.c1)))IS NOT((((((((('-1035102037')OR(t0.c0)))AND(t1.c0)))AND('T8Y ህpR>X')))OR(t0.c87)))), ((((((((t0.c87)AND(v0.c0)))AND(t0.c49)))OR(v0.c0)))AND(t0.c65)) COLLATE NOCASE, ((COUNT(t0.c1))<=((('1949781506') IS FALSE))), COUNT(*) FROM t1 WHERE ((+ ((0X43c7e0bb IN ()))));SELECT (((t0.c0)) NOT BETWEEN ((t0.c0 COLLATE RTRIM)) AND ((((t0.c0) NOT BETWEEN (t1.c0) AND (x''))))) FROM t1, t0 WHERE (((NULL COLLATE RTRIM) BETWEEN ((x'' IN ())) AND (((-2.060231628E9) BETWEEN (']⦥b\r') AND (NULL))))); -- 0ms;
SELECT ALL CAST((~ (t0.c0)) AS NUMERIC), (((t0.c65 IN ())) BETWEEN (MAX(t0.c1)) AND (UNLIKELY(t0.c87))), CASE WHEN t0.c1 THEN ((t0.c1)OR(t0.c87)) WHEN ((((t0.c49)OR(0.17219831170329603)))AND(t0.c1)) THEN ((t1.c0)>=(t0.c65)) WHEN t0.c0 THEN CAST(t0.c87 AS NUMERIC) WHEN t0.c1 THEN (NOT (t0.c65)) WHEN MAX(t0.c49) THEN ((t0.c87) ISNULL) ELSE CAST(t0.c65 AS NUMERIC) END FROM v0, t0 WHERE (CASE (('|F')<(NULL))  WHEN ((x'') ISNULL) THEN ((-6.90008178E8)&(x'')) WHEN (((x''))>((1409660097))) THEN '딯Ip鸭' WHEN 0.7494791228764638 COLLATE RTRIM THEN (((('')AND(625251528)))OR(NULL)) ELSE TRIM('') END) LIMIT -57153045 OFFSET -1126137800;SELECT DISTINCT t0.c65 FROM v0;SELECT DISTINCT (((CASE WHEN t0.c65 THEN t0.c49 END))<>((t0.c87 COLLATE RTRIM))) FROM t0, t1, v0 ORDER BY (((x'')) NOT BETWEEN (((t0.c87 IN ()))) AND ((((t0.c49) NOTNULL)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ ((((t0.c49)) BETWEEN ((v0.c0)) AND ((t0.c87))))) FROM t0 WHERE ((('0.852950760102733')OR(((477808548)OR(0.7444500756571254)))));SELECT DISTINCT ((t0.c0)AND(NULL COLLATE BINARY)) FROM t1, v0, t0 WHERE ((((((((((x'')OR(x'4bfb')))AND(x'')))AND('B|')))OR('>e')) IN ())); -- 0ms;
SELECT ALL CAST(((0.3846333947676889)IS(0.9019731164440673)) AS REAL) FROM t0 ORDER BY 0.8978196871433428; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS BLOB) FROM t1; -- 1ms;
SELECT DISTINCT (((((t0.c0 IN ()))AND(t0.c87)))OR(CAST(t0.c0 AS NUMERIC))) FROM v0, t1 WHERE (((0.40373489902483095)&(UPPER(0.6505551790268629))));SELECT DISTINCT 'T#NUB' COLLATE NOCASE FROM t1, v0 WHERE (((((CAST(x'' AS NUMERIC))OR(((((x'')OR('S6')))AND(x'')))))OR(NULL))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c65) BETWEEN (t0.c87) AND (t0.c87)))OR(((t1.c0) NOT NULL))))AND(TRIM(x''))))AND((((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((v0.c0))))))AND(CASE WHEN 0.11353176953082078 THEN t0.c1 ELSE t0.c87 END)) FROM t1, t0, v0 WHERE ((('0.199926619384582' COLLATE NOCASE) NOT BETWEEN (((x'') IS TRUE)) AND (json_remove(0.7066926341764987, ''))));SELECT ALL TOTAL((- (t0.c87))) OVER ( ORDER BY ((((t0.c0)<<(t0.c65))) NOT NULL) DESC  NULLS LAST, HEX(DISTINCT QUOTE(t1.c0)) DESC), CASE WHEN ((t0.c87)>=(t0.c87)) THEN ((t0.c0)>=(t0.c87)) WHEN GLOB(t1.c0, t0.c49) THEN CASE t0.c87  WHEN v0.c0 THEN v0.c0 WHEN t0.c1 THEN t0.c1 WHEN t1.c0 THEN t0.c65 END WHEN ((('p6nA㔖?'))>=((t0.c0))) THEN ((t0.c0) NOTNULL) WHEN CAST('1022801199' AS REAL) THEN ((t0.c1)GLOB(x'')) WHEN (t0.c65 IN ()) THEN CAST(t1.c0 AS NUMERIC) END, (((((t1.c0)IS(t1.c0))))<((TRIM(t0.c0, t0.c49)))) FROM t0, t1;SELECT x'' FROM t1, v0 WHERE ((((((1.814932898E9) BETWEEN (-44651233) AND (NULL)), ((x'') NOT BETWEEN (NULL) AND ('716631829')), (x'' IN ())))>((TRIM(NULL), (0.3398116946989018 IN ()), (((NULL, NULL, 'pmj+aa')) NOT BETWEEN ((NULL, x'', 147648603)) AND ((0.26881757986537047, 0.9880106197543441, 0.126019365113208))))))); -- 0ms;
SELECT ALL CAST('-109800989' AS TEXT) FROM t0, v0, t1 LIMIT -625697407 OFFSET -1200847622; -- 0ms;
SELECT ALL (((((t0.c65)AND(t0.c87)), (t1.c0 IN ()), (t0.c1 IN (t0.c87, t0.c87))))>=((((t0.c0)<<(t0.c87)), ((t0.c65) NOT BETWEEN (t0.c65) AND (t0.c65)), (((t0.c49, v0.c0, '\r5'))>=((t0.c0, t0.c87, t0.c0)))))) FROM t1;SELECT ALL ((CASE t0.c87  WHEN t0.c1 THEN t1.c0 ELSE v0.c0 END) BETWEEN (t1.c0 COLLATE NOCASE) AND ((t0.c65 IN ()))) FROM t0 WHERE (HEX(NULL COLLATE BINARY)) LIMIT -1090768816 OFFSET 1778622924;SELECT DISTINCT ((((((t0.c87) NOT NULL))OR(CAST(t0.c65 AS NUMERIC))))OR(TOTAL(v0.c0))), ((t0.c65 COLLATE NOCASE)AND(((t0.c1) BETWEEN (t0.c0) AND (t0.c1)))), CAST((((t0.c65))>((t1.c0))) AS REAL), ((t0.c65) NOTNULL) COLLATE RTRIM, SUBSTR(((t1.c0) NOT NULL), LOWER(t0.c87)) FROM t1;SELECT (((''))<>((((t0.c87) BETWEEN (t0.c0) AND (v0.c0))))) FROM t1, v0, t0 WHERE (((((((NULL)AND(NULL)))OR('0.04142898384241167')))<<(((x'')&(x''))))); -- 0ms;
SELECT DISTINCT (- (((t1.c0)!=(t0.c1)))) FROM v0 LIMIT -2081282188 OFFSET 532556392;SELECT ALL (+ ((((t0.c65))>=((t0.c1))))), CASE WHEN (t0.c65 IN ()) THEN (((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((NULL))) END, ((('')) NOT BETWEEN ((((t1.c0)<<(t1.c0)))) AND ((((t0.c0)>(t0.c0))))) FROM t1, t0; -- 0ms;
SELECT DISTINCT t1.c0 FROM t0, v0, t1 LIMIT -525064117; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c65)) ISNULL) FROM v0, t1, t0; -- 0ms;
SELECT DISTINCT t0.c65 FROM t1 NOT INDEXED, v0, t0; -- 0ms;
SELECT (CASE WHEN t0.c49 THEN t0.c0 END IN ()) FROM t1, v0; -- 0ms;
SELECT DISTINCT AVG((t0.c1 IN ())) OVER (), (((((t1.c0 IN ()))AND(t0.c65 COLLATE BINARY)))AND(((t1.c0)|(t1.c0)))), (((~ (0.24454727617747296))) BETWEEN (t0.c0) AND (((t0.c65)AND(t0.c65)))), TRIM(((((t0.c87)AND(NULL)))AND(t0.c87)), t0.c65), ((((t0.c65)+(t0.c65)))AND(MAX(t0.c87))) FROM v0 WHERE (IFNULL(DISTINCT (~ (0.20824492016063223)), (('') BETWEEN ('-2121229467') AND (0.17036459656754088)))) GROUP BY CAST(CAST('㢞z' AS INTEGER) AS REAL);SELECT '-580891502' FROM t0 WHERE ((((NOT (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT '0.9413701131046527' FROM t0, v0 LIMIT 173514366 OFFSET 1529977483; -- 0ms;
SELECT DISTINCT (((0.9543183266325037 COLLATE RTRIM))<>((SUM(NULL)))) FROM t0, v0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c0 THEN COALESCE(t0.c49, t0.c1, t0.c0, t0.c49) WHEN ((t0.c65)&(t1.c0)) THEN ((t0.c0) IS TRUE) WHEN TOTAL(t1.c0) THEN CAST(t0.c49 AS BLOB) ELSE ((t0.c1) IS FALSE) END FROM t1;SELECT DISTINCT CAST(((t0.c1)<(t1.c0)) AS NUMERIC) FROM t0, v0, t1; -- 0ms;
SELECT ((SUBSTR(t0.c49, t0.c87))%(UNLIKELY(v0.c0))) FROM t0 WHERE (((((((((x'26ab' COLLATE BINARY)AND(CASE WHEN x'' THEN 'vd' END)))AND(CAST(x'' AS BLOB))))AND(CASE '-421389126'  WHEN x'' THEN x'' END)))OR(((('699102746'))<=((1.128323447E9))))));SELECT ((((GROUP_CONCAT(t0.c65))OR(((t0.c1) BETWEEN (t0.c65) AND (v0.c0)))))AND(((((t0.c87)AND(t0.c65)))AND(t0.c65)))), ((((((((((((COUNT(v0.c0))AND(CAST(t0.c0 AS TEXT))))OR(x'')))OR(x'' COLLATE RTRIM)))OR(((t0.c1) BETWEEN (t1.c0) AND (t1.c0)))))OR(-899886255)))OR((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))), ((v0.c0 COLLATE BINARY)<>((((0.12245324620988784))==((t1.c0))))) FROM v0, t1, t0; -- 0ms;
SELECT DISTINCT (((((v0.c0)/(t0.c65))))>=((v0.c0))), TIME(((x'') BETWEEN (t0.c0) AND (t0.c87)), ((t0.c87)*(t1.c0)), ((t0.c65) NOT BETWEEN (t0.c87) AND (t1.c0)), ((t0.c65)>>(t0.c65)), -943880235), ((((((((((v0.c0)+(t0.c65)))AND((t0.c0 IN ()))))OR(((t0.c0)!=(t0.c65)))))OR(((((((((t0.c1)AND(0.3943927548507704)))OR(v0.c0)))OR(t0.c65)))OR(t0.c87)))))AND(t0.c87)) FROM t0, t1 WHERE ((NOT ((- (NULL)))));SELECT ((t0.c87 COLLATE NOCASE) IS TRUE) FROM v0, t1, t0; -- 0ms;
SELECT DISTINCT ((((t0.c1)<(t0.c87))) IS TRUE) FROM t1 WHERE (((((((1457120414)OR(0.9598281264944493)))OR('')))<<(((((0.8421444266307817)AND(1175775016)))AND(NULL))))) GROUP BY ((v0.c0 COLLATE RTRIM) NOT BETWEEN (((t0.c65)>(t0.c1))) AND ((- (t1.c0))));SELECT DISTINCT (+ (COALESCE(t0.c49, t0.c65, NULL, v0.c0))), '260012189', t0.c87 FROM t0, t1, v0 WHERE (((NULL IN ('Do\CﻓW38', 0.003497599499874382)) IN ())); -- 0ms;
SELECT ALL TOTAL(-28331765) OVER () FROM t0, t1; -- 1ms;
SELECT DISTINCT CAST(1694755681 AS TEXT) COLLATE NOCASE FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((t0.c65)!=(t0.c0))) NOT BETWEEN (CAST(t0.c49 AS TEXT)) AND (((t0.c87) NOT BETWEEN (x'f32bca7b') AND (NULL)))) FROM t1;SELECT DISTINCT ((((t1.c0)|(v0.c0))) NOT BETWEEN ((+ (v0.c0))) AND (v0.c0)) FROM v0 NATURAL JOIN t1 WHERE (TRIM(DISTINCT CASE WHEN NULL THEN x'' END, CASE WHEN x'' THEN 0.45426244899690293 ELSE '960645571' END)); -- 0ms;
SELECT ALL CASE WHEN '1820095818' THEN CASE 6.90315052E8  WHEN t0.c0 THEN NULL WHEN t0.c65 THEN v0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c1 THEN t1.c0 WHEN x'3870c220' THEN NULL END END, LOWER(DISTINCT ((v0.c0) NOT NULL)), '' FROM t1, v0 WHERE ((~ ((((NULL)) BETWEEN ((x'')) AND ((0.6292166609682346))))));SELECT ALL PERCENT_RANK() OVER () FROM t0, v0, t1 WHERE (CAST('-1726730436' AS INTEGER)); -- 1ms;
SELECT CASE (- (t0.c0))  WHEN ((t0.c0)IS(t0.c1)) THEN (t0.c0 IN ()) END FROM t0, t1, v0 WHERE (NULL) GROUP BY ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c1)))<=(((t0.c1)<=(t0.c1)))); -- 0ms;
SELECT ((NULL)GLOB((('143997946') NOT BETWEEN (t1.c0) AND (t0.c0)))), (((COUNT(*)))<>((COUNT(t0.c49)))), ROW_NUMBER() OVER () FROM t0 WHERE (((CASE WHEN '0.6145063387601938' THEN '-544437233' END)-(((NULL)=('-198200327')))));SELECT ALL NULL FROM t0, t1 LIMIT 1419392201 OFFSET -1274321459; -- 0ms;
SELECT (NOT (((t0.c87)||(t0.c65)))) FROM v0, t1;SELECT TOTAL(NULLIF(t0.c65, v0.c0)) OVER () FROM t1, t0, v0 WHERE (CAST(0.20474719577021128 AS REAL) COLLATE BINARY); -- 0ms;
SELECT (((((t0.c87))>((t0.c65))))<>(CASE WHEN t1.c0 THEN t1.c0 END)) FROM t0;SELECT CAST(CAST(t0.c0 AS REAL) AS NUMERIC) FROM t0 WHERE ((((x'', NULL, 0xffffffff858f398c)) NOT BETWEEN ((CASE x'cb69'  WHEN NULL THEN 0.8353320955131315 END, ABS(DISTINCT 0.7353392202311587), 960645571)) AND ((((('0.4147561260264383'))>=((NULL))), CASE WHEN -1.46931243E9 THEN x'' ELSE 0.6346631960353256 END, (((NULL, '126540138', 0.48830743617473027)) NOT BETWEEN (('', '', 0.7121330498845337)) AND ((0.1393648616663027, 0.42296085354697976, 0.6321699045068409))))))); -- 1ms;
SELECT ALL SUM(((t0.c49)<<(v0.c0))) FILTER(WHERE ((t0.c1) IS TRUE) COLLATE NOCASE) OVER () FROM t1 WHERE (((((NULL)OR(((NULL) NOT NULL))))AND(((0.8183348426678899)&('')))));SELECT DISTINCT t0.c87, ((CASE v0.c0  WHEN t0.c65 THEN t0.c0 ELSE t0.c87 END) NOT BETWEEN (CAST(t0.c1 AS BLOB)) AND ((((t0.c0, t0.c0, t0.c65)) NOT BETWEEN ((t0.c87, t0.c65, 0.49085063907087056)) AND ((t0.c49, t0.c0, 249600825))))), HEX(DISTINCT x'') FROM t0 WHERE (json_array(CASE WHEN -1918069617 THEN x'9bc6bf9e' ELSE 0.6261703874181215 END, NULL COLLATE BINARY, ((((x'aff3')AND(NULL)))OR('2009932713')), CASE WHEN x'' THEN 0.8076896235228245 WHEN 2016500850 THEN '699102746' WHEN x'' THEN 0x631023e1 WHEN 0.45324964988546224 THEN NULL WHEN NULL THEN NULL END));SELECT COUNT(*) FROM v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((t0.c65)IS(t0.c65)) THEN ((t0.c87) NOT BETWEEN (t0.c49) AND (t1.c0)) WHEN (NOT (t0.c87)) THEN (t1.c0 IN (t0.c87)) WHEN CAST(t1.c0 AS TEXT) THEN ((t0.c1)+(t0.c87)) ELSE ((t0.c87) NOT NULL) END FROM t0;SELECT (+ (t0.c65 COLLATE RTRIM)) FROM t1, v0, t0 WHERE (((((((((x'')OR((('6367910553155020080') NOT NULL))))OR(((x'') NOTNULL))))AND('-690008178')))AND(((x'')>(-9.7957582E8))))) LIMIT -538791163 OFFSET -1164562783; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), (- (1588986461 COLLATE RTRIM)), MIN(((t0.c65)-(t0.c87))) FROM t1, t0; -- 0ms;
SELECT (- (t0.c1)) COLLATE NOCASE FROM t1;SELECT ALL t0.c49 FROM t1, v0;SELECT SUM(((t0.c1) NOT BETWEEN (t0.c49) AND (x''))) OVER ( ORDER BY (((t0.c87)) BETWEEN ((CAST(t0.c0 AS TEXT))) AND ((v0.c0 COLLATE RTRIM)))  NULLS FIRST, NULL DESC) FROM t1, t0, v0 WHERE (((x'9af8' COLLATE NOCASE) NOT BETWEEN ((('-58982389')>>('QN⏡'))) AND (((((NULL)AND(0X6c96d765)))OR(NULL))))) LIMIT -109800989; -- 1ms;
SELECT ALL (+ (((t0.c49)<<(-1.150376874E9)))), (((((('A-')>=(t0.c1)))AND((+ (t0.c1)))))AND(((t0.c49) BETWEEN ('%\r') AND (t0.c0)))), ((((((((((t1.c0)AND(t0.c1)))OR(t0.c87)))AND(t0.c0)))OR(t0.c49)))>=(t0.c0)) FROM t1, v0, t0; -- 0ms;
SELECT DISTINCT ((t0.c0)AND(DATE(t0.c1, t0.c49, '6!u'))) FROM t0, v0, t1; -- 0ms;
SELECT (- ((t0.c87 IN (t0.c87)))), (NOT ((t0.c49 IN ()))), ((t0.c65 COLLATE BINARY)|(COALESCE(DISTINCT t0.c0, t0.c65))) FROM v0, t0 CROSS JOIN t1 ON ((CAST(t0.c49 AS TEXT))>=(COALESCE(DISTINCT v0.c0, v0.c0))) WHERE (((((('- ''d~')AND('Zx')))AND(0xfffffffff914f45f)) IN (load_extension(0.31608570006797654))));SELECT ALL ((((t0.c87)||(NULL)))-(((t0.c65) IS TRUE))) FROM v0, t1, t0 WHERE (UPPER(DISTINCT CAST(0x453d4039 AS NUMERIC))); -- 0ms;
SELECT ((SQLITE_SOURCE_ID()) ISNULL) FROM t1, t0; -- 0ms;
SELECT ((((t0.c87)>=(t0.c87))) BETWEEN (v0.c0 COLLATE NOCASE) AND (t0.c65)) FROM t0 WHERE ((((NULL))!=(('vd'))) COLLATE RTRIM);SELECT DISTINCT LIKELIHOOD(DISTINCT (t0.c65 IN ()), 0.6163449769780589) FROM t0, t1, v0 LIMIT -2113385622; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM v0 WHERE ('c&'); -- 0ms;
SELECT DISTINCT (NOT (t0.c87)) FROM t0 WHERE (((((NULL) BETWEEN ('2013874087') AND (']Fu')))*((x'058f' IN ())))); -- 1ms;
SELECT DISTINCT MIN(((t0.c0)LIKE(t0.c0))) FROM t1, t0, v0 WHERE (((((NULL) BETWEEN (0.011292474507639927) AND (1.208296198E9)))<((~ (x''))))); -- 0ms;
SELECT DISTINCT (v0.c0 IN ((~ (t0.c1)), MAX(t1.c0))), (NOT ((((t1.c0)) BETWEEN ((v0.c0)) AND ((0.7857863568489871))))), TOTAL(((t1.c0) BETWEEN (v0.c0) AND (t0.c0))) OVER () FROM t1, t0 WHERE (((((0.7633254634009455)|(0.8188340048678683)))=(((((x'')AND(0.9161240377643788)))AND(0.7449204871778206)))));SELECT DISTINCT MIN(t0.c0) FROM v0, t0; -- 0ms;
SELECT SUM(((((((((t0.c87)OR(t0.c0)))AND(v0.c0)))AND(t0.c49)))OR(t0.c1))) OVER ( PARTITION BY (NOT (t0.c49)), ((((t0.c65 IN (v0.c0))))!=((((v0.c0)IS(t0.c0)))))), v0.c0 COLLATE RTRIM, ((((t0.c1)>=(t0.c49)))=(t0.c49)), ((v0.c0)*(t0.c49)) COLLATE RTRIM, (((NULL, v0.c0, t0.c0)) NOT BETWEEN ((('0.06624050846181762' IN ()), json_extract(t1.c0, t0.c49), (~ (t0.c0)))) AND ((CASE t0.c65  WHEN v0.c0 THEN t0.c65 END, (- (t0.c1)), t0.c1))) FROM t0, t1, v0; -- 1ms;
SELECT DISTINCT (LIKELIHOOD(DISTINCT t0.c0, 0.2773548465650635) IN ()), CASE 0.6822189511273236  WHEN DATETIME(t0.c87, v0.c0, t0.c87) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN CASE v0.c0  WHEN t0.c1 THEN t0.c1 WHEN t0.c49 THEN x'' WHEN t0.c0 THEN t0.c65 ELSE t0.c0 END THEN ((t0.c49)LIKE('-615938546')) WHEN ((((t0.c1)AND(t0.c1)))OR(t1.c0)) THEN GROUP_CONCAT(t0.c49) ELSE t1.c0 COLLATE NOCASE END, ((NOT (t0.c1)) IN ()) FROM t1, v0 WHERE ((('' COLLATE BINARY) IS FALSE)) GROUP BY (((((- (v0.c0)))AND(((v0.c0) NOT BETWEEN (t1.c0) AND (t0.c87)))))OR(v0.c0)), LIKELY(DISTINCT HEX(DISTINCT t0.c1)), (((t0.c1 IN (t0.c65)))/(NULLIF(DISTINCT t0.c0, t0.c87)));SELECT ALL (((- (t1.c0))) NOTNULL) FROM v0 WHERE (CAST(LIKE('', x'') AS INTEGER));SELECT ALL (NOT (0.18031303052972802)) FROM v0 WHERE (CAST((((('6!U')OR('-459590865')))AND('\r弬^颤.B%B')) AS NUMERIC)); -- 1ms;
SELECT ALL (((((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c1))))AND((((t1.c0, t0.c49, v0.c0)) BETWEEN ((t0.c0, t0.c49, t0.c0)) AND ((t0.c0, t0.c0, t1.c0))))))AND(((t0.c49) NOT BETWEEN (t0.c87) AND (t0.c49)))) FROM v0, t1, t0 LIMIT -690008178; -- 0ms;
SELECT ALL CASE CAST(v0.c0 AS REAL)  WHEN (~ (t0.c65)) THEN t0.c0 COLLATE RTRIM WHEN CASE t0.c0  WHEN t0.c0 THEN t1.c0 END THEN ((((((((t0.c87)OR(t1.c0)))OR(v0.c0)))OR(t0.c0)))OR(t0.c87)) WHEN ((t0.c1) BETWEEN (t0.c65) AND (t0.c0)) THEN (- (t0.c87)) WHEN t1.c0 COLLATE BINARY THEN (t0.c0 IN ()) WHEN (NOT (t0.c87)) THEN ((t0.c1)<<(t1.c0)) END FROM v0 WHERE (CAST(((0xffffffff8286e622) NOT BETWEEN ('-46121669') AND ('-1490221287')) AS NUMERIC));SELECT ALL t0.c49 FROM t0 WHERE ((+ (0X502c74ca))) GROUP BY t0.c0, ((((x'') NOT BETWEEN (t0.c0) AND (t0.c1)))GLOB(((t1.c0)*(t0.c49)))), ((0Xffffffffde2dd9aa)GLOB(t0.c49)) COLLATE RTRIM HAVING (((t0.c87 IN ()))-(json_object('-46121669', t0.c49)));SELECT DISTINCT HEX(((t0.c87) BETWEEN (t0.c1) AND (t0.c65))) FROM t1, t0, v0 LIMIT 6367910553155020080; -- 0ms;
SELECT (- (t0.c65)) FROM v0 ORDER BY ((CASE WHEN t0.c1 THEN t0.c49 ELSE t0.c1 END) NOT BETWEEN ((((t0.c0))<((t0.c0)))) AND (((t0.c49)/(t0.c0))))  NULLS FIRST, CASE (((t0.c87)) NOT BETWEEN ((t0.c1)) AND ((t1.c0)))  WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c65)) THEN ((t0.c1)+(0xffffffffa0c36bb2)) WHEN CAST(t0.c87 AS INTEGER) THEN t1.c0 COLLATE RTRIM WHEN ((t1.c0) BETWEEN (t0.c65) AND (v0.c0)) THEN ((t0.c1) IS FALSE) END  NULLS FIRST;SELECT DISTINCT TOTAL(((t0.c87)*(t1.c0))) OVER (), (NOT (((v0.c0) NOT NULL))), (UPPER(DISTINCT t0.c0) IN (((t0.c49) BETWEEN (t1.c0) AND (t1.c0)))) FROM t1, v0, t0 WHERE ((((((((x'8282c62a21ce', ' 6', NULL, 0.03666702318311088, '1576951775'))==(('1554503135', NULL, '-405656766', '219692978', 'yg&n%풋|>1'))))OR(((0.43881239283400075)<('771991704')))))OR(x'1c82'))); -- 1ms;
SELECT ALL (((((((t0.c1)OR(t0.c65)))AND(t0.c87))))>((0xffffffffd6e856c3))), MAX(t0.c65), ((((CAST('bT\' AS INTEGER))OR(MAX(t1.c0))))AND(v0.c0)) FROM v0, t0;SELECT (((t0.c65)) NOT BETWEEN ((t1.c0 COLLATE RTRIM)) AND ((((((t0.c49)OR(v0.c0)))OR(t0.c1))))) FROM t1, t0 WHERE ((((NULL IN ())) NOT BETWEEN ((- ('-1972627616'))) AND (CASE ''  WHEN '%+' THEN NULL ELSE x'' END))) ORDER BY ((((v0.c0)AND(t0.c1))) NOT NULL) ASC  NULLS FIRST LIMIT 147648603;SELECT v0.c0, t0.c87, t0.c1 FROM t0, t1, v0 WHERE (CAST((0.20140766818123046 IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(v0.c0) AS INTEGER) FROM t1, t0, v0; -- 0ms;
SELECT CAST(CASE WHEN v0.c0 THEN t0.c49 ELSE t0.c65 END AS INTEGER), (((t0.c87) IS TRUE) IN ()), NULL FROM t1, v0;SELECT DISTINCT (((((((((((t0.c87)) NOT BETWEEN ((t0.c87)) AND ((t1.c0))))OR(t0.c65)))OR(((t0.c87) NOT NULL))))OR(CASE WHEN t0.c49 THEN x'' WHEN t0.c49 THEN t0.c49 WHEN t0.c87 THEN t0.c87 ELSE t0.c0 END)))OR(CASE WHEN t0.c49 THEN t0.c1 END)), x'', ((t0.c0) NOT BETWEEN (t0.c49) AND (t1.c0)) COLLATE RTRIM FROM t1 LIMIT -1008022832;SELECT SUBSTR(CAST(t1.c0 AS INTEGER), ((t0.c0) IS TRUE)) FROM t0 NOT INDEXED, v0, t1; -- 0ms;
SELECT DISTINCT (0.10512081202399914 IN ()) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((t0.c49)AND(t0.c65)))OR(t0.c87)))%(((-1.170148529E9) IS TRUE))) FROM t0, t1 WHERE (((((NULL) NOT BETWEEN (NULL) AND (')v')))/((('')=(0X568fe583))))); -- 0ms;
SELECT ALL ((CAST(t1.c0 AS REAL)) NOTNULL) FROM v0 WHERE (((((('1402052499', NULL, NULL, '<~', 260012189)) BETWEEN ((0.2868482505617693, 0.6288462521814774, '', '1586327892', -7.71258976E8)) AND (('e/,CX-U!ࢫ', '0.26881757986537047', NULL, -1699794521, x'')))) NOT NULL));SELECT ALL NULL FROM t1, t0, v0 WHERE (((0.9880106197543441 COLLATE NOCASE) IS FALSE)); -- 0ms;
SELECT ALL NTILE(0.9239403099638597) OVER () FROM t1 WHERE (((0.2887591286871155)>=(0.6633816877305567)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(LAST_INSERT_ROWID()), CASE WHEN t0.c65 THEN t0.c1 END COLLATE BINARY, ((CAST(t0.c87 AS BLOB)) NOT NULL), COUNT(*) COLLATE NOCASE, '-2029323255' FROM t0 GROUP BY (((0.3841081900848681 COLLATE BINARY))<((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c49))))), (((((t0.c87, t0.c49, t0.c87, t0.c0, t0.c49)) BETWEEN ((t0.c49, t0.c87, t0.c87, t0.c65, t0.c0)) AND ((t0.c0, t0.c49, t0.c0, t1.c0, t1.c0)))) ISNULL), ((((((t0.c65)OR(NULL)))AND(t1.c0)))|(((((v0.c0)OR(t0.c65)))AND(t0.c1)))) HAVING (((- (t0.c1)))>(((t0.c1)/(t0.c0))));SELECT DISTINCT (NOT (((((((((v0.c0)AND(t1.c0)))AND(t0.c87)))AND(t0.c1)))AND(v0.c0)))) FROM t0, v0, t1; -- 0ms;
SELECT CUME_DIST() OVER () FROM t1, t0; -- 1ms;
SELECT ((UNLIKELY(t0.c1))>=((('1q')&(t0.c1)))) FROM t1, v0, t0 WHERE (CAST((((NULL)) BETWEEN ((68777580)) AND ((NULL))) AS REAL)); -- 0ms;
SELECT CASE WHEN ABS(DISTINCT t0.c1) THEN (0.2625463256160696 IN (t0.c49)) END, (((((t0.c49, t0.c0, '1013965497'))>=((t0.c49, NULL, v0.c0)))) NOT BETWEEN ((- (t0.c1))) AND (t1.c0)), ((LOWER(t0.c49)) ISNULL), IFNULL(DISTINCT CAST(t0.c87 AS NUMERIC), ((t0.c65) ISNULL)), (t1.c0 IN (((v0.c0)==(t0.c1)))) FROM v0, t0, t1 WHERE ((((('2114631061')&('-1802048141')))-((((0.24234804199724924, NULL, x'', 0.2876910405150176, -2.8331765E7))<>((x'8daf', '', '', NULL, NULL)))))) ORDER BY CAST(CAST(t0.c87 AS TEXT) AS NUMERIC); -- 0ms;
SELECT DISTINCT CASE WHEN (((v0.c0, v0.c0, t0.c65, t1.c0, t0.c65))<((t0.c65, t1.c0, 0.6261703874181215, t0.c0, t0.c87))) THEN ((t0.c1)GLOB(t0.c1)) WHEN t1.c0 COLLATE BINARY THEN ((t0.c65)OR('1617182326')) WHEN ((v0.c0) NOTNULL) THEN LIKE(NULL, t0.c65) ELSE (~ (t1.c0)) END FROM v0, t1, t0 WHERE (LTRIM(-2113385622 COLLATE RTRIM, (('1821824869') NOT BETWEEN (NULL) AND (x'ca62')))) ORDER BY ((x'' COLLATE BINARY)/(t0.c1)) DESC  NULLS LAST; -- 0ms;
SELECT ALL json_insert((((t0.c0))<((NULL))), NULL, LAST_INSERT_ROWID()) FROM t0, v0 WHERE ((((('-58982389') NOT BETWEEN ('-1535759406') AND (x''))) ISNULL)) ORDER BY (((CHAR(t0.c65, t0.c49, t0.c87)))==((CASE WHEN t0.c0 THEN t1.c0 WHEN v0.c0 THEN 'J1^* *Y' WHEN x'' THEN t0.c1 ELSE t0.c0 END))) ASC, '' DESC  NULLS FIRST LIMIT 1724286352;SELECT DISTINCT -7.3588767E7, (~ (MAX(t1.c0))), (((- (t0.c0))) BETWEEN ((((v0.c0))<((t0.c49)))) AND ((((t0.c0, t0.c1, t0.c0)) BETWEEN ((t1.c0, v0.c0, '쨽G')) AND ((t1.c0, v0.c0, t0.c1))))) FROM t1, t0;SELECT DISTINCT CASE WHEN ((t1.c0)>=(t0.c0)) THEN ((((t0.c49)AND(t0.c87)))OR(t0.c0)) WHEN ((NULL)>=(t0.c65)) THEN (~ (t0.c1)) WHEN ((t0.c49) IS FALSE) THEN ((((((((t0.c0)AND(t0.c49)))OR(t0.c0)))OR(t0.c49)))AND(t0.c49)) END FROM t0, v0, t1 WHERE (((0.386621040738507)LIKE('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0, v0, t1; -- 0ms;
SELECT ALL ((LIKELY(DISTINCT t0.c49))<>(0Xffffffffe06328f5)), (((t0.c65, v0.c0, t0.c87)) NOT BETWEEN ((((t0.c65) NOT NULL), ((584117434) NOT NULL), t0.c1 COLLATE BINARY)) AND ((CAST(t1.c0 AS INTEGER), ((((v0.c0)OR(t0.c65)))OR(t0.c49)), (((t0.c0)) BETWEEN ((t0.c49)) AND ((t0.c0)))))), (((~ (0.2098974235299772))) NOT BETWEEN (CASE WHEN t0.c49 THEN '690315052' END) AND (((t0.c0) NOT BETWEEN (NULL) AND (v0.c0)))), (t0.c49 COLLATE NOCASE IN ()), ((CAST(x'' AS TEXT)) NOT BETWEEN (((t0.c1) BETWEEN (t0.c87) AND (t0.c1))) AND (((v0.c0) NOTNULL))) FROM v0;SELECT ((((NULL)AND(COUNT(*))))OR(0Xffffffff976c95d4)) FROM t1, t0, v0; -- 1ms;
SELECT ((CAST(t0.c87 AS NUMERIC)) NOT BETWEEN (((NULL) IS TRUE)) AND (((((((((t0.c0)OR(v0.c0)))OR(t0.c49)))OR(t0.c0)))AND(t0.c65)))) FROM t0 WHERE (CASE WHEN -815868789 COLLATE RTRIM THEN CAST('' AS NUMERIC) ELSE NULL END);SELECT DISTINCT ((v0.c0) IS FALSE) FROM v0 WHERE ((((+ (0.7564398654758647))) NOTNULL)) GROUP BY (- (((v0.c0)+(t0.c1))));SELECT DISTINCT CHANGES(), RANK() OVER (), COALESCE(((t0.c49)<<(t0.c1)), AVG(t0.c1), CASE t0.c65  WHEN t1.c0 THEN t1.c0 END, CAST(t0.c49 AS REAL)), ((t1.c0)LIKE((('-1313941956') NOT BETWEEN (t0.c1) AND (t0.c49)))), CASE WHEN 'X-%y' THEN (((v0.c0)) BETWEEN ((t0.c1)) AND ((v0.c0))) ELSE 1.662002145E9 END FROM t1, v0;SELECT DISTINCT MAX(CAST(v0.c0 AS BLOB)), (+ (t1.c0 COLLATE NOCASE)), (v0.c0 COLLATE BINARY IN ()) FROM t1, v0 GROUP BY (((t0.c0 IN (x'5e06b7f4052a'))) NOTNULL), v0.c0, CASE WHEN IFNULL(DISTINCT t0.c0, t0.c1) THEN UPPER(DISTINCT t0.c49) WHEN CAST(t0.c1 AS REAL) THEN CAST(x'' AS NUMERIC) WHEN CAST(0Xffffffffab161f25 AS BLOB) THEN (t0.c0 IN ()) END HAVING CAST(CAST(t0.c49 AS NUMERIC) AS TEXT);SELECT ALL t0.c1 FROM v0;SELECT ALL GROUP_CONCAT(TOTAL(((((v0.c0)AND(t1.c0)))OR(t0.c87)))) FROM t0, t1, v0;SELECT DISTINCT ((t0.c0) NOT BETWEEN (NULL) AND (t0.c87)) COLLATE BINARY FROM t0, t1; -- 0ms;
SELECT DISTINCT CASE (+ (t0.c87))  WHEN ((t0.c49)/(t0.c49)) THEN ((v0.c0)*(t0.c87)) END, (t0.c49 IN ()) COLLATE RTRIM, ((((t0.c49) NOTNULL))*((+ (t0.c0)))) FROM v0, t1;SELECT DISTINCT GROUP_CONCAT(((-1536937594) BETWEEN (t0.c49) AND (t0.c0))) OVER () FROM v0, t1 WHERE (CAST((- (0X2afa681)) AS TEXT));SELECT SUM((((t1.c0))<=((t0.c0)))) OVER () FROM v0 WHERE (((x'de9c')GLOB('0.734376990075767')) COLLATE BINARY) ORDER BY (+ (CAST(t1.c0 AS BLOB)))  NULLS LAST;SELECT DISTINCT (((t0.c65)) NOT BETWEEN ((((t1.c0) BETWEEN (x'10e4') AND (t0.c65)))) AND ((TYPEOF(t0.c49)))) FROM t1, v0;SELECT MAX(((t0.c0) NOTNULL)) FROM v0 WHERE ((((('-524382797') BETWEEN (x'6856') AND ('J')))GLOB(CAST(0.39335072678461624 AS BLOB))));SELECT (((((t1.c0)%(t0.c1))))>((t0.c65))) FROM t0, t1, v0 WHERE (CAST((((x'', x'0e9b', 'tt 薐j<䥗M4', '', '-73588767')) BETWEEN (('1586150982', 0.19698151981158873, '', '0.2593571156830792', 0.1219349263787175)) AND ((0.9981628873119263, '1773422935', x'', NULL, '33984854'))) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((t1.c0) NOT BETWEEN (((v0.c0)-(t0.c49))) AND (t0.c1)) FROM t1, t0, v0 WHERE (((2070832881) IS FALSE)); -- 1ms;
SELECT DISTINCT '-1513273201' FROM t0, t1 WHERE (CASE ((x'') IS TRUE)  WHEN TYPEOF('[[\/l') THEN ((0.6351158580470717) IS TRUE) END); -- 0ms;
SELECT x'' FROM t0, v0; -- 0ms;
SELECT DISTINCT COUNT(((v0.c0) ISNULL)) OVER ( RANGE ((CASE t0.c87  WHEN t0.c1 THEN t0.c1 END)>(CASE t0.c1  WHEN t1.c0 THEN t0.c0 WHEN t0.c1 THEN t0.c87 WHEN t0.c65 THEN t0.c49 ELSE t0.c1 END)) PRECEDING EXCLUDE NO OTHERS), COUNT(*) OVER (), (('G') NOT BETWEEN (((v0.c0)IS NOT(-545860673))) AND ((NULL IN ()))), COALESCE(NULLIF(DISTINCT t0.c49, t1.c0), (t0.c65 IN ())), PERCENT_RANK() OVER () FROM t1 WHERE (CASE ((((NULL)OR(-729105878)))AND(')}'))  WHEN ((('BW\nd4}聤y\n')) BETWEEN ((x'')) AND ((x''))) THEN '' COLLATE RTRIM END) GROUP BY (((((t0.c0) NOT NULL)))>((((('-73588767')) BETWEEN ((t0.c1)) AND ((t1.c0)))))) HAVING CAST(((t0.c87) NOT NULL) AS REAL);SELECT ALL t0.c1, ((((((x'')AND(v0.c0)))AND(t1.c0))) ISNULL), v0.c0 FROM t0, t1 WHERE ((((0.6652881339262319)) NOT BETWEEN ((TOTAL_CHANGES())) AND (((('\n.CZ')GLOB(NULL)))))) GROUP BY '7L', 0.21645866230112187, ((CAST(t0.c1 AS REAL)) NOT BETWEEN (((t0.c87) NOT BETWEEN (1.708628781E9) AND (t0.c1))) AND (((t1.c0) NOTNULL)));SELECT ALL (((((((t0.c87))<=((0.19972676661368893))))OR(CASE WHEN NULL THEN t0.c49 ELSE t0.c65 END)))AND(v0.c0 COLLATE NOCASE)) FROM t0 WHERE (((('1355649842')GLOB('')) IN ()));SELECT DISTINCT ((((((((RTRIM(t0.c49))AND(((t0.c65) ISNULL))))OR(NULL)))OR((((v0.c0))>((v0.c0))))))OR(t0.c1)) FROM t0, v0 WHERE ((((((NULL, x'f866', '-2113385622')) BETWEEN ((NULL, 'E\nwyf', x'')) AND ((0.35393426918900783, -1658601420, 0xffffffff92f80c9a))))&(((((x'8ae4')AND(0Xffffffffbf65e84a)))AND(0.9492457624112177))))); -- 0ms;
SELECT DISTINCT ((((t1.c0) NOTNULL)) NOT NULL) FROM t0;SELECT DISTINCT (((t0.c49 IN ())) NOT BETWEEN (((t0.c49)>(t0.c65))) AND (((((t0.c87)OR(t0.c87)))OR(0.6616432897297887)))) FROM v0 WHERE ((NOT (NULLIF(0x69b44957, ''))));SELECT CAST((+ (t0.c65)) AS TEXT) FROM t0 WHERE (x'a57b'); -- 0ms;
SELECT CASE ((t0.c65)%(t0.c1))  WHEN ((t0.c65) IS FALSE) THEN ((t0.c49) NOT BETWEEN (v0.c0) AND (t1.c0)) WHEN 0.6692054724974514 THEN t0.c87 COLLATE NOCASE WHEN (1 IN (t0.c49)) THEN LIKELIHOOD(DISTINCT t0.c65, 0.9523539855808172) WHEN (((t0.c65))<=((t0.c1))) THEN ((((((((t0.c49)AND(t1.c0)))OR(v0.c0)))AND(v0.c0)))AND(t1.c0)) WHEN ((t1.c0) NOTNULL) THEN ((v0.c0)%(t0.c0)) END, CAST((~ (t0.c65)) AS BLOB), ((v0.c0) BETWEEN (((((NULL)AND('')))OR(t0.c0))) AND (CAST(t0.c1 AS TEXT))), SUM(((v0.c0)<=(t1.c0))) OVER ( ROWS  UNBOUNDED PRECEDING), PERCENT_RANK() OVER () FROM t1, t0;SELECT ALL GROUP_CONCAT((- (t0.c87)) COLLATE NOCASE) OVER (), CASE ((t0.c87)<(t0.c65))  WHEN ((((((((t0.c0)OR(t0.c65)))OR(v0.c0)))OR(t1.c0)))OR(t0.c87)) THEN ((t0.c65)%(t0.c1)) ELSE (t0.c87 IN ()) END, CAST(1.022801199E9 AS INTEGER) FROM t0, v0;SELECT DISTINCT (NOT ((((v0.c0, t0.c87, t0.c65)) NOT BETWEEN ((v0.c0, t0.c65, t0.c0)) AND ((t0.c49, t0.c0, NULL))))), ((SUM(t0.c49)) IS FALSE), ((PRINTF(t0.c65, v0.c0, t1.c0)) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c1)&(t1.c0)))) FROM t0;SELECT DISTINCT RANK() OVER () FROM t0, v0, t1; -- 1ms;
SELECT (((((t0.c1, t0.c1, t0.c1))<((t0.c1, '772640685', v0.c0))))>>(((t0.c65) NOT BETWEEN (t0.c49) AND (t0.c87)))) FROM v0, t0 LIMIT -904764313; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0 WHERE (((('5E,N㵾OG' IN (0.39811200280668))) NOT BETWEEN ((('')OR(NULL))) AND (((0.5239532900939587)<<('6!U'))))); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (((t0.c49, t1.c0, t0.c0)) BETWEEN ((t0.c1, v0.c0, v0.c0)) AND ((t0.c1, t0.c87, t0.c0))), ((v0.c0) NOT BETWEEN (t0.c49) AND (t0.c49))), CASE SUM(t0.c87)  WHEN CASE WHEN t0.c0 THEN t0.c49 END THEN LIKE(t1.c0, t0.c49) ELSE v0.c0 END, ((v0.c0 COLLATE BINARY) NOT NULL) FROM t0, v0;SELECT DISTINCT ((COALESCE(DISTINCT t0.c0, t0.c49, t0.c1, v0.c0))OR(t0.c1 COLLATE RTRIM)), AVG((((t0.c1, t0.c65, t0.c87, t0.c0, t1.c0))>((t0.c0, t0.c0, t0.c87, t0.c87, v0.c0)))) OVER ( PARTITION BY TRIM(DISTINCT (((('-815868789')OR(t0.c65)))AND(t1.c0))), ((((NULL) IS TRUE))&(((((((((t0.c1)OR(v0.c0)))OR(t0.c49)))OR(t0.c49)))AND(t0.c49))))), ((CAST(t0.c1 AS REAL)) NOT BETWEEN (CAST(t0.c49 AS BLOB)) AND (((t1.c0)>=(t0.c1)))) FROM t1, v0;SELECT DISTINCT ((((((((((((t1.c0)AND(t0.c87)))AND(t0.c87)))OR('')))OR(CASE t0.c65  WHEN t0.c0 THEN v0.c0 END)))OR(((x'') IS TRUE))))OR(MAX(t0.c87))) FROM t1, v0, t0 WHERE ((((- ('')))>=(LOWER('&L')))); -- 0ms;
SELECT GROUP_CONCAT(((t1.c0) IS TRUE)) OVER ( ROWS CAST('G>)oBgAV' AS TEXT) PRECEDING EXCLUDE GROUP) FROM v0, t1, t0 WHERE (''); -- 0ms;
SELECT ALL (((CAST(t0.c65 AS BLOB)))<=((t0.c1 COLLATE NOCASE))), CASE WHEN (('-1150376874') BETWEEN ('uq') AND (t1.c0)) THEN ((t0.c65)||(NULL)) END, t0.c49 FROM t1, t0, v0; -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN ((CAST(t1.c0 AS NUMERIC))) AND ((COUNT(t1.c0)))) FROM v0, t1 GROUP BY (((t0.c65, v0.c0, 0.867899009853534, t0.c49, t0.c49)) BETWEEN ((((NULL) NOT BETWEEN (t0.c65) AND (t0.c87)), (((t0.c0))<((t1.c0))), (~ (v0.c0)), ((t0.c0) BETWEEN (t0.c49) AND (t0.c87)), x'')) AND ((((x'') NOTNULL), t0.c1 COLLATE BINARY, ((((t0.c87)AND(t0.c65)))OR(t1.c0)), ((((t0.c49)OR(t0.c87)))AND(t1.c0)), (t0.c65 IN ())))) HAVING ((((t1.c0)>=(t0.c1)))!=(((((((((t0.c87)AND(t0.c1)))AND(t0.c87)))OR('-1167191266')))AND(t0.c0))));SELECT ('920449139' IN ()), CAST(t0.c65 AS TEXT), CASE WHEN (NOT (v0.c0)) THEN t0.c87 ELSE CASE WHEN t0.c65 THEN t1.c0 END END FROM t0, t1, v0 WHERE (json_quote(((((x'')OR(NULL)))OR('-2089643039')))); -- 2ms;
SELECT ALL TYPEOF(t1.c0) FROM v0, t0, t1 WHERE ((NOT (ABS(DISTINCT x'd214')))); -- 0ms;
SELECT ((t0.c87 COLLATE RTRIM)GLOB(((t0.c65) ISNULL))) FROM t1, t0 WHERE (((('147648603', 0.7241208589669171, '?t')) NOT BETWEEN (((((('~')AND(NULL)))OR(x'1c92')), CAST('[[\/l' AS NUMERIC), (-9.7957582E8 IN (x'd09b4b53', x'')))) AND (((NOT (0X58e47173)), '705500501', (NULL IN ()))))) GROUP BY ((t0.c65) IS FALSE) COLLATE BINARY, 717267872, ((t0.c65 COLLATE NOCASE)-(((t0.c0)<(v0.c0)))), ((t0.c0)IS NOT(((t0.c49) ISNULL))), (((((t1.c0)GLOB(t1.c0))))!=(((~ (t0.c65))))) HAVING CASE WHEN (~ (t0.c1)) THEN CAST(t1.c0 AS INTEGER) END;SELECT DISTINCT (+ (CAST(x'' AS BLOB))) FROM v0, t0; -- 0ms;
SELECT CASE t0.c0 COLLATE RTRIM  WHEN (t1.c0 IN ()) THEN CASE t1.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN t0.c65 THEN t0.c87 ELSE t0.c1 END ELSE CAST(t0.c49 AS TEXT) END FROM t1, t0, v0 WHERE (CAST((((x''))!=((x''))) AS NUMERIC)); -- 0ms;
SELECT ALL ((((json_array(v0.c0, t0.c0, t0.c49, v0.c0, t0.c0, t1.c0))OR(((t0.c87)-(t0.c87)))))AND(SUM(t1.c0))), x'', ((((((((NULL)AND(t0.c87)))AND(t0.c87)))AND(t0.c1)))AND(t1.c0)) COLLATE NOCASE FROM v0, t1 WHERE ((((~ ('(!jh'))) NOT BETWEEN ((((x'389d', 0x6c2dada2, '䤁', 0.24502696832701265, 0.6858456986142976))<=((0.7073056390664687, '147648603', x'', -1.665118461E9, '?}')))) AND ((((x''))==((0.2779218942359859))))));SELECT DISTINCT (((v0.c0)) BETWEEN ((t0.c1)) AND ((t0.c87))) COLLATE RTRIM FROM v0 WHERE (((('') BETWEEN ('q+') AND (1215786157)) IN ())) ORDER BY load_extension(((t0.c87)&(t0.c49)), (NOT (t0.c87))) LIMIT -136255146;SELECT DISTINCT CASE WHEN (NOT (t0.c0)) THEN (~ (0.8596219416222768)) WHEN TOTAL(t0.c1) THEN ((t0.c49) BETWEEN (t0.c1) AND (t0.c49)) WHEN (t0.c49 IN ()) THEN ((t0.c1) BETWEEN (t0.c65) AND (t0.c49)) ELSE rtreenode(t0.c65, t0.c1) END FROM v0 WHERE (((((NULL) IS TRUE)) NOT NULL));SELECT ALL CAST(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c49)) AS REAL) FROM t1, t0 WHERE (x'7e7ac07f3457'); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM t0 WHERE ((~ ((('') NOTNULL)))); -- 0ms;
SELECT DISTINCT ((CAST(t0.c49 AS TEXT)) IS FALSE) FROM t0, t1 WHERE ((((('\rq')IS('85.f煔G'))) NOT BETWEEN ((~ (x''))) AND (((NULL)IS NOT('0.8001972461771606'))))) GROUP BY UPPER((((v0.c0, t0.c49, t1.c0)) BETWEEN ((t0.c87, t1.c0, x'')) AND ((v0.c0, t0.c0, t1.c0)))) HAVING SUM(t0.c65) ORDER BY ((((t0.c1)-(v0.c0))) BETWEEN (((t0.c87) IS FALSE)) AND ((t0.c49 IN (t0.c0))));SELECT DISTINCT (((~ (t0.c49)))LIKE(((v0.c0) IS FALSE))), (+ ((((t0.c65))<=((v0.c0))))), (((t0.c49 IN ())) IS TRUE) FROM t1, t0, v0; -- 0ms;
SELECT DISTINCT CASE t0.c87  WHEN COUNT(t0.c0) THEN t0.c65 COLLATE NOCASE END FROM v0;SELECT DISTINCT (NOT (((t0.c0)OR(t0.c87)))) FROM t0 WHERE ((((x'', 0Xffffffff877ba960, 0.7671715569777339, x'f709', 0.020279857978203975)) NOT BETWEEN ((((0.8061644422218442) NOT NULL), (((x'2ac6'))>=(('1128323447'))), (('') NOT BETWEEN (-501083852) AND (x'')), '' COLLATE RTRIM, (x'' IN ()))) AND ((-187768091, ((x'')LIKE(NULL)), ((NULL)-(-82123420)), ((0.5227805491139772) NOT NULL), ((0.10265624062260315) NOT BETWEEN (x'') AND (0.49800200408828055)))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM v0, t0 WHERE ((('VQ8Ej| ')|((((x'', 0x2b614602, 's-7d'))>((x'', 0x5e6e012f, NULL)))))) GROUP BY (((((0.3202015193157173)GLOB(''))))==((t0.c49))), ((((t0.c0)-(v0.c0)))>=(((NULL) BETWEEN (t0.c65) AND (t0.c49)))), ((((((((CAST(t0.c65 AS INTEGER))AND((NOT (t0.c49)))))OR(ABS(t0.c0))))AND((~ (t0.c65)))))AND(CAST(t0.c1 AS REAL))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c87)<<(t0.c49)))OR((((t0.c0)) NOT BETWEEN ((t1.c0)) AND ((t0.c49))))))OR(CASE t1.c0  WHEN -771258976 THEN '*4' END)))AND((t0.c1 IN (v0.c0)))))AND(INSTR(NULL, t0.c87))) FROM v0 WHERE (load_extension(((((NULL)AND('')))AND(NULL)), ('M|' IN ())));SELECT DISTINCT NULL FROM t1; -- 0ms;
SELECT SQLITE_COMPILEOPTION_GET(((t0.c49) NOTNULL)), TOTAL(((v0.c0) BETWEEN (t0.c0) AND (t0.c49))) OVER (), (((t0.c49)) NOT BETWEEN ((CAST(t0.c49 AS NUMERIC))) AND ((((t0.c87) NOT BETWEEN (t0.c49) AND (t0.c1))))), SUM(((t0.c0) NOT BETWEEN ('-384972401') AND (v0.c0))) OVER (), 0.06664548173347118 FROM v0, t1, t0 WHERE ((((('')OR(((((((((x'')OR('-839076601')))AND(0.25770979602658095)))AND(x'dc9f')))AND(NULL)))))AND('1820095818'))); -- 0ms;
SELECT DISTINCT AVG(((((NULL)AND(t0.c0)))AND(t0.c87))) OVER () FROM t0, t1; -- 1ms;
SELECT ALL CAST(SUM(t0.c87) AS INTEGER), AVG((((0.9550310819640752)) NOT BETWEEN ((t0.c49)) AND ((t0.c49)))) OVER (), (+ (((t0.c87) BETWEEN (t0.c87) AND (t0.c87)))) FROM v0, t0, t1 NOT INDEXED LIMIT 1681328065 OFFSET 1840917628; -- 0ms;
SELECT DISTINCT load_extension(((t0.c65)GLOB(v0.c0))) FROM v0 WHERE (CAST(NULL COLLATE BINARY AS INTEGER));SELECT ALL t0.c49 FROM v0;SELECT DISTINCT ((((t0.c87) NOT BETWEEN (t0.c1) AND (t0.c0))) BETWEEN (1.022801199E9) AND ((((t0.c49, v0.c0, t1.c0)) NOT BETWEEN ((t1.c0, t0.c65, t0.c65)) AND ((t0.c49, t0.c49, t1.c0))))) FROM t0, t1 WHERE ((('Qo䥁uGe용' COLLATE BINARY) NOTNULL));SELECT DISTINCT COUNT(*) OVER (), (t0.c49 IN ()), (~ ((((t1.c0))=((v0.c0))))) FROM t1 WHERE (((((x'')/(0X760b6d79))) BETWEEN (((x'') IS TRUE)) AND ((('鬭6')%(NULL))))) GROUP BY (NOT (t0.c87)) COLLATE NOCASE, ((((t0.c49)<(t0.c87))) NOT BETWEEN (TYPEOF(v0.c0)) AND (CASE '|(q'  WHEN t0.c0 THEN t1.c0 END)), ((((((((((t0.c0)AND(v0.c0)))AND(t0.c0)))AND(t0.c0)))OR(t1.c0))) BETWEEN ((((t0.c49, t0.c87, v0.c0, t0.c87, t1.c0)) BETWEEN ((t0.c1, t0.c49, v0.c0, t0.c1, '**Xtቒ')) AND ((t0.c0, t0.c49, t1.c0, t0.c1, t0.c1)))) AND ((((v0.c0))<>((t0.c87))))) HAVING ((SUM(t0.c65))LIKE(CASE t0.c0  WHEN t0.c1 THEN t0.c87 ELSE v0.c0 END));SELECT DISTINCT (((((NULL)&(t0.c65))))>=((CASE WHEN t0.c49 THEN t0.c65 ELSE t0.c49 END))) FROM t1 WHERE (((((NULL)/('c5Ws8&c')))GLOB(IFNULL(NULL, 0.03532139690235114)))) ORDER BY (((t0.c65 IN ()))<(ROUND(t0.c49, t0.c0))) ASC;SELECT ALL CASE (- (t1.c0))  WHEN CAST(t0.c1 AS INTEGER) THEN ((((((((t0.c65)AND(t0.c65)))AND(t0.c0)))OR(t0.c87)))AND(t0.c0)) ELSE json_extract(v0.c0, v0.c0) END FROM t1, v0, t0 WHERE ((~ (((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT ((((((t0.c87) NOT BETWEEN (t0.c65) AND (t0.c49)))AND(CASE t0.c0  WHEN t0.c1 THEN t0.c0 WHEN t0.c65 THEN t0.c1 WHEN v0.c0 THEN t0.c1 END)))AND(((((((((t0.c1)OR(v0.c0)))OR(t0.c65)))AND(v0.c0)))AND(t0.c0)))) FROM t1, t0 WHERE ((((((((((('')IS NOT(NULL)))OR((x'' IN (x'')))))AND(((0.4022783150983601)IS NOT(0.40479618730643063)))))AND((((0.709437516092913))>((-5.8982389E7))))))OR(((' I')|(0x9cce807)))));SELECT ALL (NOT (t1.c0)) COLLATE RTRIM, ((TOTAL_CHANGES())-(t0.c1)), t0.c1 FROM v0 WHERE ((((('-804133165') IS TRUE)) BETWEEN (((0X33640902) BETWEEN ('1000350825') AND (NULL))) AND (x'd4d8'))) GROUP BY (((v0.c0)&(t1.c0)) IN ());SELECT ALL CUME_DIST() OVER () FROM v0, t0, t1; -- 0ms;
SELECT ((((((((((t0.c0)OR(t1.c0)))AND(t0.c65)))OR(t0.c0)))OR(t0.c1)))|(t0.c87)) FROM t1 WHERE (((('177875000')==(x'')) IN ()));SELECT DISTINCT COUNT(*) FROM v0, t1; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c1 THEN t0.c87 END)IS((~ (t0.c1)))) FROM t0, t1 WHERE (((CAST(NULL AS INTEGER))LIKE(((x'') NOT BETWEEN (0.21557870660314005) AND (''))))); -- 0ms;
SELECT (((x''))==((t0.c1))) COLLATE NOCASE FROM t0 CROSS JOIN v0 ON (((NULL)IS(t0.c87)) IN (t0.c1 COLLATE NOCASE)) WHERE ((((('-1765431741')||(0.8740246447947275)))LIKE(((NULL)<(0.9100852920561388))))); -- 1ms;
SELECT DISTINCT ((t0.c65) NOT NULL) FROM t1, t0 ORDER BY ((((((NULL)AND(t0.c65)))OR(t0.c1))) IS FALSE) DESC  NULLS LAST, -1.405939695E9; -- 0ms;
SELECT DISTINCT CAST(t0.c49 AS NUMERIC) FROM v0, t0, t1; -- 0ms;
SELECT DISTINCT ((UNLIKELY(t1.c0))<((v0.c0 IN (v0.c0)))), NTH_VALUE(CAST(((t0.c0) ISNULL) AS BLOB), t0.c87) OVER ( ORDER BY t0.c65  NULLS FIRST), (- (MAX(v0.c0))) FROM t0;SELECT DISTINCT CAST(GROUP_CONCAT(v0.c0) AS BLOB) FROM v0, t0, t1; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT v0.c0))GLOB(((x'') ISNULL))), ((CASE WHEN t1.c0 THEN t0.c65 END) NOTNULL), COUNT(((t0.c87) IS FALSE)) FROM t0;SELECT DISTINCT CAST(CAST(0Xffffffff987cc172 AS TEXT) AS NUMERIC) FROM t1, t0; -- 0ms;
SELECT ALL (((t0.c49, t0.c65, t0.c87)) BETWEEN (((t0.c87 IN ()), COUNT(t0.c87), 0.31416766806855645)) AND ((SUM(t0.c65), (t1.c0 IN ()), ((t1.c0)<(t0.c1))))), ((t1.c0)IS NOT(t0.c65)) COLLATE NOCASE, ((t0.c87) BETWEEN ((t0.c1 IN (t0.c49))) AND ((((v0.c0))>=((t0.c0))))) FROM t0;SELECT DISTINCT LIKELIHOOD((NOT (t1.c0)), 0.48518486896580115) FROM t0 LIMIT -1825736356;SELECT ((TOTAL(v0.c0)) NOT BETWEEN (t0.c65) AND (t0.c49 COLLATE RTRIM)) FROM t0 WHERE (CAST(LIKELY(x'c11d') AS BLOB));SELECT x'a210', CASE TRIM(t0.c0, t0.c65)  WHEN (t0.c87 IN ()) THEN SUM(t0.c65) WHEN LOWER(DISTINCT t1.c0) THEN ((0.6163574465777649) ISNULL) WHEN ((t0.c1) IS FALSE) THEN (- (t0.c87)) ELSE ((t0.c1) IS TRUE) END, AVG(((NULL)||(t0.c1)) COLLATE NOCASE) FROM v0 WHERE ((~ (CASE x''  WHEN '' THEN NULL ELSE '0.2354736884311578' END))) LIMIT 1783298306 OFFSET 1831736434;SELECT ALL CAST(((v0.c0)>(t0.c49)) AS TEXT), ((((((NULL)OR(t0.c0)))OR(t0.c0)))AND(v0.c0)), ((t0.c1) NOT NULL) COLLATE BINARY FROM t0, t1 NOT INDEXED WHERE ((((x'') BETWEEN (NULL) AND ('2091789856')) IN ()));SELECT DISTINCT CASE t0.c87 COLLATE NOCASE  WHEN ((t0.c49)+(t1.c0)) THEN (~ (t1.c0)) ELSE ((t0.c65)%(t0.c1)) END FROM t0, t1, v0 WHERE (TRIM(((((1306540607)OR('-844762095')))OR('-58982389')), ABS(DISTINCT '-979575820'))); -- 1ms;
SELECT DISTINCT 0.0563175162998063, ((t0.c65 COLLATE BINARY)>((((v0.c0))>=((t0.c87))))), ((((t0.c87)-(t0.c0))) NOT BETWEEN ((t0.c0 IN ())) AND (((v0.c0) ISNULL))) FROM t1, t0, v0 WHERE (JULIANDAY(IFNULL(0.8038593849211747, NULL), CASE NULL  WHEN '-109800989' THEN 'd' END, ((x'') IS FALSE))); -- 0ms;
SELECT ALL (((+ (t0.c0))) IS TRUE), CASE t0.c0  WHEN ((t0.c65) IS TRUE) THEN ((((t0.c0)AND(t0.c49)))OR(t0.c87)) ELSE t0.c0 COLLATE RTRIM END, (((+ (t0.c1)))==(t0.c65)) FROM v0 WHERE ((((0.19996238098079733)) BETWEEN (((- (x'')))) AND (((((('䘠O')OR(0xffffffffe7add453)))AND(NULL))))));SELECT (((t0.c49)) BETWEEN ((CASE WHEN t0.c87 THEN t0.c65 END)) AND ((((t0.c0)>=(''))))) FROM v0, t1, t0 ORDER BY ((CASE 'Lf-qD'  WHEN t0.c0 THEN v0.c0 END)<(CAST('-1193610085' AS NUMERIC))) DESC, ((CASE WHEN v0.c0 THEN t0.c49 ELSE t0.c49 END) IS TRUE) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((CASE v0.c0  WHEN v0.c0 THEN t0.c0 ELSE v0.c0 END)>(((t0.c87)+(t0.c65)))) FROM t1, v0, t0 WHERE (((NULL)>('-1418901696')) COLLATE NOCASE); -- 1ms;
SELECT ALL CASE WHEN ((t0.c1) ISNULL) THEN CAST(t0.c65 AS REAL) ELSE CASE WHEN t1.c0 THEN v0.c0 END END, (((NOT (t0.c87)))<>((~ (t1.c0)))), CAST((((('s^')AND(t0.c1)))AND(t1.c0)) AS INTEGER) FROM t1 WHERE (((((x'1ac5') NOT BETWEEN (757019935) AND (0x50cd9332))) BETWEEN (x'') AND (7.03085102E8)));SELECT DISTINCT x'fe9b', (t0.c49 IN ()) COLLATE NOCASE, (((t0.c49) NOT NULL) IN (((t0.c49) NOTNULL))) FROM t0, v0, t1 WHERE (((('}', 0.7793112190122204, -1.143266024E9)) NOT BETWEEN (('' COLLATE BINARY, (NULL IN ()), (- (x'')))) AND ((((0Xffffffffc6bddf80)-(NULL)), ((NULL)IS(219692978)), ((NULL) BETWEEN ('Kl1') AND (NULL)))))); -- 0ms;
SELECT ((t0.c0) NOTNULL) COLLATE RTRIM FROM t0, t1, v0 WHERE (CAST((('T8Y ህpR>X')>=('}')) AS REAL)) GROUP BY CASE WHEN t0.c87 THEN t0.c87 COLLATE NOCASE WHEN (('')OR(v0.c0)) THEN CASE v0.c0  WHEN t0.c65 THEN v0.c0 WHEN t0.c49 THEN v0.c0 WHEN t0.c49 THEN t0.c87 ELSE t1.c0 END WHEN (((t0.c49, t0.c87, t1.c0)) BETWEEN ((t1.c0, t0.c0, v0.c0)) AND ((t0.c0, t0.c87, t0.c1))) THEN (~ (t0.c0)) ELSE ((t0.c49) ISNULL) END HAVING ((((t0.c0)IS(t0.c49)))=((((t0.c0))>=((v0.c0))))); -- 0ms;
SELECT DISTINCT ((((((t0.c1)) NOT BETWEEN ((t1.c0)) AND ((t1.c0)))))>=((CASE WHEN x'dbd2' THEN t0.c1 WHEN v0.c0 THEN t0.c65 WHEN t0.c0 THEN t0.c65 ELSE t0.c0 END))) FROM t0, t1, v0 WHERE ((((NOT ('1758346622')))||((('198577034') NOT NULL)))); -- 0ms;
SELECT ALL x'c00fa7cb', CUME_DIST() OVER (), ((2.1736393483684502E-5) BETWEEN (UNLIKELY(DISTINCT t0.c49)) AND (((v0.c0)<(t0.c0)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((COALESCE(t0.c87, t0.c1))) AND (((+ (NULL))))), '', TYPEOF(((t0.c0) IS FALSE)), ((((((t0.c65)/(t0.c1)))OR((NOT (t0.c0)))))OR((~ (t0.c87)))), HEX(DISTINCT ((v0.c0) BETWEEN (t0.c49) AND (t1.c0))) FROM t0, v0, t1 WHERE ((((('E	.b')=('+߈-!('))) NOT BETWEEN ('173804332' COLLATE RTRIM) AND (((0xffffffffb89822a9) NOT NULL)))) GROUP BY ((((((((CAST(t0.c49 AS TEXT))OR((((NULL))!=((t1.c0))))))AND((t0.c87 IN ()))))AND((((t0.c0))>((t0.c65))))))OR(CAST(t1.c0 AS BLOB))); -- 0ms;
SELECT DISTINCT (t0.c87 COLLATE RTRIM IN ()) FROM v0, t1, t0 LIMIT 949157904 OFFSET -563087527; -- 0ms;
SELECT DISTINCT CASE ((t0.c1)IS(t0.c65))  WHEN ((t0.c87)>(t0.c0)) THEN 'FsMZZ\nO' ELSE UNLIKELY(v0.c0) END FROM t1 NATURAL JOIN t0 WHERE (((('0.2593571156830792')) NOT BETWEEN ((0.13041056759983927)) AND ((x'6eb8'))) COLLATE NOCASE);SELECT MAX(((t0.c87)>>(v0.c0))), (('0.6362648060134741') IS FALSE), MAX(CAST(t0.c1 AS INTEGER)) FROM v0, t0 WHERE (0.2630353902109649 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((v0.c0 IN (t1.c0)))!=(t0.c49 COLLATE RTRIM)) FROM t1, v0 LIMIT 1288196862 OFFSET 1594388259;SELECT SUM(((t0.c0) BETWEEN (t0.c87) AND (v0.c0))) OVER () FROM t0 ORDER BY ((((((((CAST(t0.c65 AS TEXT))OR(((NULL)=(t0.c1)))))OR(0X418905bd)))OR(t0.c0)))AND((((t0.c87, t0.c1, t1.c0)) BETWEEN ((t0.c49, t0.c49, t0.c87)) AND ((t1.c0, 'xf딯+ ', t0.c87)))))  NULLS FIRST;SELECT CAST(((t0.c65) BETWEEN (x'') AND (t0.c1)) AS TEXT) FROM v0, t0, t1; -- 0ms;
SELECT DISTINCT t0.c49, CAST((v0.c0 IN ()) AS BLOB), ((((t0.c49)OR(t1.c0)))AND('')) COLLATE BINARY FROM v0;SELECT DISTINCT ((v0.c0) NOT BETWEEN (json(t0.c1)) AND (t0.c87)) FROM v0, t1;SELECT DISTINCT ((((NOT (t0.c1))))<=((((v0.c0)GLOB(t0.c0))))), (((NOT (t0.c1)))LIKE(GROUP_CONCAT(x'b1a1'))), CAST(CASE WHEN t0.c1 THEN t0.c0 WHEN t0.c87 THEN t0.c87 WHEN t0.c65 THEN t0.c1 END AS BLOB) FROM t0 WHERE (CASE (0.08957626905380256 IN ())  WHEN ((0.41440188942490375) BETWEEN ('') AND ('842762384')) THEN (- (NULL)) END);SELECT DISTINCT (NOT (t0.c1)) FROM v0, t1, t0 WHERE (CAST(((0.4845162344036128)>=('n[>]')) AS REAL)); -- 1ms;
SELECT '' FROM t0; -- 0ms;
SELECT x'6a02', CHANGES(), ABS((t0.c65 IN ())) FROM t1, v0; -- 0ms;
SELECT DISTINCT (((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))>((0.6426959043130862))) FROM v0 WHERE ((('-1557630478' COLLATE BINARY)OR(((x'207c')>=(NULL))))) GROUP BY CASE UNLIKELY(t0.c1)  WHEN (t0.c1 IN (v0.c0)) THEN (t0.c1 IN ()) ELSE CAST(t0.c1 AS REAL) END;SELECT DISTINCT CASE ((t0.c1)IS NOT(t0.c49))  WHEN CAST(t1.c0 AS INTEGER) THEN GROUP_CONCAT(t0.c87) ELSE CASE WHEN t1.c0 THEN t0.c49 ELSE t0.c0 END END, ((((((((t0.c87)OR('-22017253')))AND(t0.c1)))OR((((t0.c0)) BETWEEN ((v0.c0)) AND ((t0.c65))))))OR(((t0.c49) NOT NULL))), ((((((((((((t1.c0 COLLATE RTRIM)AND('9r')))OR((+ (t0.c49)))))AND(t0.c65 COLLATE RTRIM)))OR((- (t0.c1)))))AND(CASE t0.c87  WHEN t0.c65 THEN t0.c1 END)))OR(((t0.c87)/(v0.c0)))) FROM t1, t0 WHERE (x'');SELECT DISTINCT ((t0.c1) NOTNULL) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c49)=(v0.c0)))<(SQLITE_COMPILEOPTION_USED(t0.c0))) FROM v0, t1, t0; -- 0ms;
SELECT (LIKELY(t0.c1) IN ()) FROM v0, t0 WHERE ((((('-384972401') BETWEEN ('畊KK ]tlຸ') AND (0x29255f2c)))>>((~ ('7,>)g'))))) LIMIT -771258976 OFFSET 2206100; -- 0ms;
SELECT ALL '/f', RANK() OVER ( PARTITION BY CASE WHEN LIKELY('1522100384') THEN CAST(t0.c49 AS REAL) END, x''), t0.c65 FROM t0, v0, t1 WHERE ((NOT (x'21f1' COLLATE BINARY))); -- 0ms;
SELECT x'' FROM t1 WHERE ((((((NOT (1.47648603E8)))AND(((((x'')OR('tMN0p%E')))OR(NULL)))))AND(((x'')>>(0.10912290531809066))))); -- 0ms;
SELECT ALL ((((t0.c87 IN ())))<(((~ (v0.c0))))) FROM t1;SELECT CAST((((t1.c0))=((v0.c0))) AS NUMERIC) FROM v0 WHERE (CAST(CAST(x'' AS INTEGER) AS REAL));SELECT DISTINCT CAST((NULL IN ()) AS BLOB), t0.c49, COUNT(*) OVER () FROM t0 NOT INDEXED, t1, v0; -- 1ms;
SELECT DISTINCT (((AVG(t0.c65)))<>((((t0.c0) ISNULL)))), DENSE_RANK() OVER (), CASE WHEN ((t0.c87) ISNULL) THEN ((NULL)%(t0.c0)) WHEN (((v0.c0))<((t0.c1))) THEN ((((t0.c65)OR(t0.c0)))AND(t0.c49)) WHEN ((((((((t0.c49)OR(t0.c65)))AND(t0.c0)))AND(t0.c0)))OR(t0.c65)) THEN t0.c87 WHEN ((t0.c0)&(t0.c1)) THEN t0.c65 WHEN CAST(NULL AS NUMERIC) THEN x'ded8' END FROM v0;SELECT DISTINCT CAST(x'' AS INTEGER) FROM v0, t1, t0 GROUP BY ((1.47648603E8) NOT NULL) HAVING 0.45077550312499903; -- 0ms;
SELECT (('305058362') BETWEEN (((t1.c0) NOT NULL)) AND (((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c49)))) FROM v0, t0, t1 WHERE (CAST(CASE WHEN '-2113385622' THEN NULL WHEN x'e1c8' THEN '309874263' WHEN 8.62193922E8 THEN '1311682578' WHEN x'' THEN x'' WHEN x'' THEN '-1918890873' END AS TEXT)) GROUP BY (((t1.c0 IN ()))>>(TRIM(t1.c0))); -- 0ms;
SELECT DISTINCT ((CAST(0.47807728617257184 AS NUMERIC)) BETWEEN (AVG(t0.c0)) AND ((((t0.c65)) NOT BETWEEN ((t0.c49)) AND ((t0.c0))))) FROM t1;SELECT ((t0.c1 IN ()) IN ()) FROM t1, t0 WHERE (((('E__n㒵A%r{')+('-1170148529')) IN ())); -- 0ms;
SELECT TOTAL(((((((((v0.c0)OR(v0.c0)))OR(0.26274379570809203)))OR(t0.c65)))AND(v0.c0)) COLLATE RTRIM) OVER () FROM t1, t0 WHERE ((~ (x'')) COLLATE BINARY);SELECT ALL SUM(((t0.c87)AND(t0.c0))) FROM t0, v0 ORDER BY (((CAST(1221098570 AS REAL)))>((t0.c65)))  NULLS LAST; -- 0ms;
SELECT ALL COUNT((t0.c87 IN ()) COLLATE RTRIM) FILTER(WHERE t1.c0) OVER () FROM t0;SELECT ALL (((t0.c65 IN ())) NOT NULL) FROM v0, t1; -- 0ms;
SELECT CAST(ABS(t0.c65) AS TEXT), v0.c0, (NOT ((t0.c49 IN ()))) FROM t1, v0 WHERE (CASE (- (x'6e0b'))  WHEN rtreenode(x'', -4.6121669E7) THEN (x'' IN ()) WHEN 'J1^* *Y' COLLATE BINARY THEN (('-1143266024') BETWEEN (x'0b68') AND ('1769625128')) WHEN (((0X50cd9332)) BETWEEN ((0.9875918122599064)) AND ((0.0425374395311684))) THEN (0.13863418341812928 IN ()) ELSE (+ ('181617110')) END);SELECT DISTINCT ((t0.c87)==(t1.c0)) COLLATE RTRIM FROM t0, t1 ORDER BY ((((t0.c87 COLLATE NOCASE)AND(t0.c49)))AND(NULL)), (((t0.c65) BETWEEN (t0.c87) AND (v0.c0)) IN ((((t0.c1, t1.c0, t0.c1)) BETWEEN ((t0.c87, t0.c65, v0.c0)) AND ((NULL, t0.c49, t0.c0)))))  NULLS FIRST;SELECT DISTINCT (((- (t0.c1)))OR(((v0.c0) NOT NULL))) FROM v0 WHERE ((((((((0.9873212891241847)OR(NULL)))OR(0.8968897017129976)), CASE 'XI'  WHEN NULL THEN NULL WHEN 0Xffffffffca660948 THEN -5.8982389E7 WHEN 0.6156814871189624 THEN x'20e6' END, (('') NOTNULL)))>(((- ('-409070348')), (0Xffffffffe5498c29 IN ()), ((x'') BETWEEN (NULL) AND (x''))))));SELECT DISTINCT highlight((((t0.c0)) NOT BETWEEN ((t0.c49)) AND ((NULL))), ((t0.c65) BETWEEN ('1764648509') AND (v0.c0)), v0.c0 COLLATE BINARY, (0X7e0ab595 IN ())) FROM t0 WHERE ((- (((NULL) NOT BETWEEN (NULL) AND (1029656091)))));SELECT DISTINCT (((CAST(t0.c1 AS BLOB)))<((((t0.c87) NOT BETWEEN (t0.c87) AND (t0.c49))))) FROM t0 GROUP BY ((((((v0.c0)AND(t0.c87)))AND(t0.c87)))GLOB(((t1.c0)>=(v0.c0)))) ORDER BY t1.c0 ASC  NULLS FIRST LIMIT 473396200;SELECT ((((v0.c0)AND(t0.c87)))>=(((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c49)))) FROM t0 WHERE ((- (0.12888589617536972)) COLLATE BINARY);SELECT DISTINCT v0.c0, (((((t0.c0) NOT NULL)))>=((t0.c1 COLLATE NOCASE))), CASE WHEN ((t0.c65)LIKE(t0.c49)) THEN ((t0.c49) IS TRUE) WHEN CAST(t0.c1 AS REAL) THEN MAX(t0.c87, NULL) WHEN ((v0.c0)<>(t0.c49)) THEN (((t0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))) WHEN ((v0.c0) IS TRUE) THEN (((t0.c49))<((v0.c0))) WHEN ((t0.c49) IS TRUE) THEN ((((((((t0.c49)OR(t0.c0)))OR(t0.c1)))AND(t0.c1)))OR(t0.c87)) ELSE t0.c0 COLLATE RTRIM END, GLOB(CASE WHEN t0.c87 THEN t0.c1 END, ((t0.c65)=(t0.c87))), AVG((((t0.c49, t0.c49, t0.c87))=((t0.c0, t1.c0, t0.c1)))) FILTER(WHERE 0.4065122131399812) OVER () FROM t0, t1;SELECT DISTINCT (((NOT (v0.c0)))<<(((((t0.c65)AND(0.12005398122902766)))OR(t0.c65)))) FROM v0, t0, t1 GROUP BY (((+ (t0.c0)))<(t0.c87)); -- 0ms;
SELECT FIRST_VALUE(((((((((((t0.c49)>>(t0.c65)))AND(((((t0.c49)OR(t0.c87)))OR(t0.c87)))))OR(((v0.c0) BETWEEN (t0.c1) AND (t0.c1)))))OR(CASE t0.c65  WHEN t0.c87 THEN t0.c49 END)))AND(((v0.c0)IS NOT(t0.c65))))) OVER (), 0.6513482202389188, MIN(((t1.c0) ISNULL)) FROM t0, v0;SELECT (+ (TOTAL(t0.c49))) FROM t1, t0 WHERE ((('gL')<=(((x'8c26') BETWEEN (NULL) AND ('ꃃlO%'))))); -- 0ms;
SELECT ALL GROUP_CONCAT(RTRIM(NULL)) FROM v0, t0, t1 WHERE (UNICODE((((((((('-573966356')OR(0.9106416443582531)))AND(x'')))OR('￿?+3a_6')))AND(0.29847124893747656)))) GROUP BY (((t0.c1 IN ())) NOT NULL); -- 0ms;
SELECT DISTINCT NULL COLLATE BINARY, t0.c1, NULLIF(DISTINCT CASE t0.c1  WHEN t0.c49 THEN t0.c0 ELSE t0.c65 END, MAX(t0.c1)) FROM v0, t0; -- 0ms;
SELECT ((((t0.c87)-(t1.c0))) IS FALSE) FROM t0 WHERE ((- (CAST('' AS INTEGER)))) GROUP BY CAST((((t0.c49))<>((x''))) AS TEXT);SELECT CAST(x'' AS TEXT) FROM t0, v0 WHERE (json_extract(NULL COLLATE RTRIM, ((NULL)>('-100501123')))) LIMIT 2083297232; -- 0ms;
SELECT (((('-573966356')AND(LOWER(DISTINCT v0.c0))))OR(CASE WHEN t0.c1 THEN t0.c87 WHEN '|-' THEN v0.c0 WHEN t0.c1 THEN t1.c0 WHEN t0.c1 THEN t0.c49 WHEN t0.c1 THEN t1.c0 ELSE t1.c0 END)), (((CAST(t0.c87 AS REAL), SQLITE_SOURCE_ID(), (('6[*F2') NOT NULL), ((t0.c0)>=(t0.c1)), ((t1.c0) ISNULL)))<>((((t0.c65)>=(t0.c49)), x'', ((t0.c0) BETWEEN ('B┘') AND (v0.c0)), COUNT(NULL), ((t0.c49)<<(t0.c65))))), x'cc62' FROM t0, t1, v0 WHERE (((('!-v}P')) NOT BETWEEN (((+ (0.20732746030840932)))) AND ((CAST(NULL AS INTEGER))))) GROUP BY ((((t0.c87) IS FALSE))>>(CAST(t0.c87 AS BLOB))) LIMIT 890312060; -- 0ms;
SELECT ALL (((t0.c65 IN (t0.c0)))|(CAST(t0.c0 AS NUMERIC))) FROM t1 INNER JOIN t0 ON ((((t0.c49)LIKE(t0.c65)))<((v0.c0 IN ()))) WHERE ((((('1355649842' COLLATE BINARY)AND(CASE 'b'  WHEN '\r弬^颤.B%B' THEN 0.16155450736018429 ELSE 0Xffffffffd8f9984e END)))OR((x'' IN ())))); -- 0ms;
SELECT ALL RANK() OVER () FROM v0, t0, t1 LIMIT -1827144809 OFFSET 227662980; -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS BLOB) COLLATE BINARY FROM t0, t1, v0 WHERE (CAST(CASE WHEN '' THEN 0X62ee7717 WHEN 0.781514322629535 THEN '0.2887591286871155' WHEN '0.26881757986537047' THEN '1773422935' ELSE x'' END AS INTEGER)); -- 0ms;
SELECT ALL ((json_array(t0.c87, t1.c0)) NOT NULL) FROM t1, t0 WHERE ((+ (NULL)) COLLATE BINARY) LIMIT 807074575 OFFSET 1759714139; -- 0ms;
SELECT DISTINCT ((t0.c87 COLLATE RTRIM) NOT BETWEEN (CASE t0.c49  WHEN t0.c49 THEN t0.c65 END) AND (((v0.c0)<(v0.c0)))) FROM t0, t1, v0; -- 0ms;
SELECT ALL ((((((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c1)))OR(((t0.c87) NOT BETWEEN (t0.c0) AND (t0.c0)))))AND(((t0.c87)<(0.11949605856791923)))), ((((((((((t1.c0) BETWEEN (t1.c0) AND (t0.c49)))OR(AVG(t0.c87))))AND(NULL)))AND(MAX(v0.c0))))AND(0.41833250586836024)), LIKELIHOOD((((t0.c49)) BETWEEN ((v0.c0)) AND ((t0.c87))), 0.6036703087719888) FROM t1;SELECT DISTINCT ((((t0.c65)AND((t0.c87 IN (t0.c49)))))AND(CAST(t0.c87 AS REAL))) FROM t0, t1, v0 WHERE (UNLIKELY(DISTINCT (NOT (-5.25064117E8)))) GROUP BY ((((CASE t0.c1  WHEN t0.c1 THEN 0.6510440770018127 ELSE t1.c0 END)OR(((t0.c1)%(v0.c0)))))AND(((v0.c0) NOT BETWEEN (t0.c49) AND (173804332)))) ORDER BY '-1431676496'; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT SUM(t1.c0)), CASE WHEN ((((t0.c49)AND(t0.c1)))OR(v0.c0)) THEN ((t0.c0)IS NOT(NULL)) ELSE (NOT (t0.c1)) END, ((((t0.c65) BETWEEN (t0.c49) AND (t0.c1))) IS TRUE) FROM t0 LIMIT 1586327892 OFFSET -1659158327;SELECT t0.c0, CASE (t0.c65 IN ())  WHEN x'' THEN CAST(x'' AS REAL) WHEN ((((((((t0.c49)OR(t0.c49)))OR(t0.c49)))AND(t0.c87)))AND(t0.c0)) THEN (('	') NOT BETWEEN (t0.c87) AND (v0.c0)) WHEN (((t0.c65, t1.c0, t0.c65, t0.c1, t0.c0))<>((t1.c0, v0.c0, t0.c0, t0.c0, v0.c0))) THEN json_insert(t0.c87, 1306540607, t0.c49, t0.c1, t0.c0) WHEN x'' THEN (t1.c0 IN ()) WHEN TRIM(v0.c0, t0.c1) THEN ((((t1.c0)AND(t0.c87)))AND(t0.c65)) END, ((((t1.c0)=(v0.c0))) IS TRUE) FROM v0 WHERE (((((((((((NULL)%('')))OR(((x'2ac3')+(0.8016194452164763)))))OR(((x'') NOT BETWEEN (NULL) AND (NULL)))))OR(((((((((1778622924)OR('1940034702')))OR(NULL)))AND(x'166e')))OR(x'')))))AND((~ ('3q1j䢏j'))))) ORDER BY ((LOWER(v0.c0))+(((((((((t0.c0)AND(t0.c49)))AND(t0.c87)))AND(t0.c1)))OR(x'')))) ASC  NULLS FIRST;SELECT DISTINCT ((((t0.c49)IS(v0.c0)))/(((t0.c0) BETWEEN (t0.c65) AND (v0.c0)))) FROM v0, t1, t0 WHERE (((('2024253421') NOT BETWEEN (0Xffffffffb1245a69) AND (0.853993627366479)) IN ())) GROUP BY CAST(t0.c1 COLLATE NOCASE AS TEXT); -- 0ms;
SELECT ((JULIANDAY(t0.c65, t0.c65, t0.c0))<((t1.c0 IN ()))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c87 COLLATE RTRIM))<=(((+ (t0.c65))))) FROM t1, v0, t0 WHERE (((NULL) BETWEEN ((((NULL)) BETWEEN ((1.398688011E9)) AND ((NULL)))) AND (NULL COLLATE NOCASE))); -- 1ms;
SELECT ALL json_type(TOTAL(t0.c0)), AVG(CASE WHEN t1.c0 THEN t1.c0 WHEN t0.c0 THEN t0.c49 WHEN t0.c65 THEN t0.c0 WHEN v0.c0 THEN t0.c49 WHEN t0.c0 THEN t0.c65 ELSE t0.c49 END) OVER (), ((SQLITE_COMPILEOPTION_USED(t0.c87)) NOT BETWEEN (((t0.c0)IS('[[\/L'))) AND (((v0.c0) NOT BETWEEN (t0.c0) AND (t0.c87)))) FROM v0, t1 WHERE (((((4.14350414E8)=('*wm*^kXO'))) IS FALSE));SELECT ALL COUNT(*) FROM v0 WHERE ((TIME(x'', '725019390', ']⦥b\r') IN ())); -- 0ms;
SELECT ALL json_insert(t1.c0, ((t0.c1)==(0X73b1fcaf)), ((t0.c65)|(t0.c65))), CAST(NULL COLLATE BINARY AS BLOB), json_insert(((t1.c0) NOT NULL), ((t1.c0) IS TRUE), CAST(t0.c65 AS INTEGER)) FROM t1;SELECT DISTINCT (+ (CASE t0.c87  WHEN t0.c49 THEN t0.c49 END)) FROM t1;SELECT ALL CASE CASE WHEN t0.c49 THEN t0.c65 WHEN t0.c65 THEN x'' WHEN t0.c1 THEN t0.c87 WHEN t0.c1 THEN t0.c49 WHEN v0.c0 THEN t0.c87 ELSE t0.c87 END  WHEN ((((((((t1.c0)AND(v0.c0)))AND(t0.c65)))OR(t0.c0)))OR(t0.c0)) THEN IFNULL(t0.c1, v0.c0) WHEN ((((t0.c65)AND(t0.c0)))OR(t0.c49)) THEN ((v0.c0)>=(-1500563132)) WHEN COUNT(*) THEN ((t0.c1)-(t0.c87)) END, json_insert(CASE WHEN t0.c0 THEN t1.c0 WHEN 0.6261703874181215 THEN 0.15757509459622976 WHEN t1.c0 THEN t0.c1 END, ((t0.c0) NOT NULL), ((t0.c87)>=(v0.c0))), ((((((v0.c0)AND(t0.c0)))AND(t0.c0))) BETWEEN (CAST(t0.c65 AS TEXT)) AND (((t0.c0)AND(t0.c87)))) FROM v0, t1, t0;SELECT ALL CASE ((t1.c0)<(t0.c65))  WHEN (NOT (t0.c0)) THEN (~ ('0.709437516092913')) ELSE v0.c0 END FROM t1 GROUP BY (((t0.c65)) BETWEEN ((((t0.c49) NOTNULL))) AND (((((t0.c49, 0.199926619384582, t1.c0))<=((t0.c65, t0.c65, t1.c0)))))) HAVING (((((((t0.c65)OR(t0.c87)))OR(t0.c0))))<=(((+ (t0.c87)))));SELECT ALL ((COALESCE(t0.c49, t1.c0))OR(((t0.c65) IS FALSE))), '', MAX(((x'9dee')==(t1.c0))) FROM v0;SELECT DISTINCT ((((((((((t0.c0) IS FALSE))AND(((t0.c0)<(t0.c1)))))OR((t0.c0 IN ()))))OR(CASE WHEN t0.c65 THEN t0.c1 END)))OR(((t0.c65)-(t0.c49)))) FROM t0, v0 WHERE (CAST(CASE WHEN 1.719056685E9 THEN NULL WHEN '1032459759' THEN x'' WHEN x'' THEN NULL ELSE NULL END AS INTEGER)) GROUP BY ((((((((6.57850067E8)AND(t0.c0)))OR(t0.c87)))OR(t0.c0)))AND(t0.c1)) COLLATE RTRIM; -- 0ms;
SELECT ALL ((((((((t1.c0 COLLATE RTRIM)OR(((t0.c87)GLOB(v0.c0)))))AND(x'')))AND(((((t0.c65)OR(t1.c0)))OR(t0.c87)))))AND(t0.c0)) FROM t1, v0, t0 WHERE (((((((((((((CAST(NULL AS REAL))OR(((0.6709480176514153) NOT BETWEEN (x'') AND (NULL)))))AND(((x'32d6') NOT BETWEEN ('-28331765') AND (0.18177859161851662)))))AND(((NULL)IS NOT(x'')))))OR(CAST('''Z' AS REAL))))AND((('{}') NOTNULL))))AND((NOT (152505640))))); -- 0ms;
SELECT DISTINCT t1.c0, ((((CAST(t0.c65 AS REAL))OR(((('')) BETWEEN ((t0.c0)) AND ((x'3bb0'))))))OR(json_remove(t0.c49, t0.c1))), UPPER(((t0.c65)+(t0.c0))) FROM t0, t1, v0; -- 0ms;
SELECT ALL ((IFNULL(t0.c0, t0.c1)) NOT BETWEEN (CASE 1.246847113E9  WHEN t0.c0 THEN v0.c0 ELSE t0.c1 END) AND (t0.c87 COLLATE RTRIM)) FROM t0, t1 WHERE (0.8001685518589239);SELECT DISTINCT ((MAX(t1.c0)) IS FALSE) FROM t1, t0, v0 WHERE (NULLIF(DISTINCT 0.26274379570809203, 0.29041551622680795) COLLATE BINARY); -- 0ms;
SELECT DISTINCT COUNT((((t0.c49)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))) OVER () FROM t1 WHERE ((CAST(x'f354' AS INTEGER) IN ()));SELECT DISTINCT (~ ((t0.c0 IN ()))), CAST(MIN(t1.c0) AS NUMERIC), CAST((NOT (t1.c0)) AS NUMERIC) FROM t1 LIMIT 1022801199; -- 0ms;
SELECT DISTINCT ((NULL COLLATE NOCASE)LIKE(((t0.c1)>=(t0.c1)))), NTILE((((~ (v0.c0)))>((0.2868482505617693 IN (v0.c0, NULL))))) OVER (), (((v0.c0)) NOT BETWEEN (((0.6256476296295366 IN ()))) AND ((LIKELY(t0.c1)))) FROM t1, v0 ORDER BY LIKELY(DISTINCT TYPEOF(t0.c0)) DESC  NULLS LAST;SELECT DISTINCT COUNT(*) FROM t1, t0 NOT INDEXED WHERE ((('xpW') NOTNULL)); -- 1ms;
SELECT DISTINCT ((((t0.c65) IS TRUE)) NOT BETWEEN (((t0.c0)>(t0.c65))) AND (t0.c87 COLLATE BINARY)) FROM t1 NOT INDEXED WHERE (((x'e149' COLLATE BINARY) NOT BETWEEN ((1844618404 IN ())) AND (CASE WHEN NULL THEN x'' ELSE 0.7505501823075438 END))) LIMIT 688805969;