-- Time: 2024/06/07 00:31:56
-- Database: database8
-- Database version: 3.40.0
-- seed value: 3804346608
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMP TABLE t0 (c0 BLOB ); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c19; -- 0ms;
INSERT OR REPLACE INTO t0(c19) VALUES (NULL); -- 1ms;
ANALYZE; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (x'942e'); -- 0ms;
INSERT OR FAIL INTO t0(c19) VALUES ('D'); -- 0ms;
INSERT OR IGNORE INTO t0(c19) VALUES (NULL); -- 0ms;
INSERT OR ROLLBACK INTO t0 VALUES (x''); -- 0ms;
ALTER TABLE t0 RENAME COLUMN c19 TO c32; -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO t0(c32) VALUES (0.4120109368254653), (NULL), ('0.4120109368254653'); -- 1ms;
CREATE TEMP TRIGGER IF NOT EXISTS tr0 AFTER DELETE ON t0 BEGIN DELETE FROM t0;UPDATE OR ROLLBACK t0 SET c32=0Xffffffff98de31c5 WHERE ((CAST(t0.c32 AS REAL))>(t0.c32 COLLATE BINARY));END; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE OR IGNORE t1 SET (c32)=(0.4120109368254653) WHERE CAST(((((t1.c32)OR(t1.c32)))AND(NULL)) AS REAL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 20620358); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1791621949); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '3016'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 6ms;
INSERT OR IGNORE INTO t1(c32) VALUES (CAST(((((((((x'')OR('0.4120109368254653')))OR(-899543471)))OR(0Xffffffffefe9d475)))OR('D')) AS INTEGER)), (0.4120109368254653), (NULL); -- 0ms;
PRAGMA temp.short_column_names; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1730268731);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
PRAGMA temp.busy_timeout = 10000; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26980'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=5'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.3400642592231965); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA application_id; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 337904163); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
ROLLBACK TRANSACTION; -- 2ms;
PRAGMA cache_spill = 2731164097279057591; -- 0ms;
PRAGMA incremental_vacuum(-1730268731); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-1952399282'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 922603367); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -14508740);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -14508740);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (((((0.19497539351866378) IS FALSE)) BETWEEN ((('-700567860') NOT NULL)) AND (((x'63f5b3c40642')<>(0.8205164055556824))))); -- 1ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
ANALYZE temp; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 396477897); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
UPDATE OR ABORT t0 SET (c32)=(''); -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('0.4120109368254653'); -- 6ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -810306405);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50047'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1059720010); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c32 TO c7; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c32 TO c54; -- 0ms;
ALTER TABLE t0 ADD COLUMN c55 INTEGER; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '18168'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -263169164);\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -700567860);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1264917533,8');\n; -- 1ms;
PRAGMA journal_mode; -- 0ms;
REINDEX; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c55 TO c91; -- 0ms;
DROP TABLE IF EXISTS t1; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE main; -- 1ms;
INSERT OR ABORT INTO vt0(c0) VALUES (NULL), ('D'), (609041727), (NULL), (0x39ecaa91); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
VACUUM; -- 1ms;
PRAGMA temp.recursive_triggers; -- 0ms;
DELETE FROM t1 WHERE CASE WHEN t1.c55 THEN ((t1.c55) IS TRUE) WHEN (NOT (t1.c32)) THEN 0.09223713400070599 WHEN t1.c32 THEN NULL END; -- 0ms;
UPDATE OR IGNORE t1 SET (c55)=('0.19497539351866378') WHERE ((((((t1.c32)OR(t1.c32)))AND(-1.730268731E9)))+(((t1.c55)/(t1.c55)))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0xffffffff8ba0c04e); -- 2ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((t1.c32)<>('-1730268731')))) AND ((((t1.c55) ISNULL)))) FROM vt0, t1 WHERE (((HEX('609041727'))OR(((x'') NOT BETWEEN (-433894321) AND (NULL))))); -- 0ms;
SELECT ALL AVG(((t1.c32) BETWEEN (t1.c55) AND (vt0.c0))) FROM vt0, t1; -- 0ms;
SELECT ALL CASE WHEN ((((vt0.c0)OR(t1.c32)))OR(t1.c55)) THEN ((((vt0.c0)OR(t1.c55)))AND(t1.c32)) ELSE (~ (vt0.c0)) END FROM t1 GROUP BY CASE WHEN TYPEOF(DISTINCT t1.c55) THEN ABS(t1.c32) ELSE ((t1.c32) IS FALSE) END HAVING ABS((t1.c32 IN ()));SELECT ALL NTH_VALUE((((- (t1.c32))) NOT NULL), (NOT (((t1.c55) IS FALSE)))) OVER () FROM vt0, t1 WHERE (((0.3497057403247791) IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ALL (((NOT (t1.c55))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND (AVG(t1.c32))) FROM t1, vt0; -- 0ms;
SELECT (t1.c32 COLLATE BINARY IN (CAST(t1.c32 AS NUMERIC))), (t1.c55 IN (t1.c32, t1.c32)) COLLATE BINARY, (NOT (SUM(t1.c55))) FROM vt0 WHERE ((((('-1915959290')OR(x'')))AND('0.8205164055556824')) COLLATE NOCASE);SELECT CASE NULL  WHEN (((vt0.c0)) NOT BETWEEN ((t1.c55)) AND ((vt0.c0))) THEN CAST(vt0.c0 AS REAL) END FROM t1;SELECT ALL ((((((t1.c32)>>(vt0.c0)))AND(t1.c32)))OR(((t1.c32) BETWEEN ('') AND (t1.c55)))) FROM vt0, t1 WHERE ((+ ((((0.5115148428794406))!=(('0.09223713400070599')))))); -- 0ms;
SELECT DISTINCT (((~ ('.zy&{o}')))>>(((t1.c32) BETWEEN (vt0.c0) AND (t1.c32)))) FROM vt0, t1 NOT INDEXED; -- 0ms;
SELECT CASE ((0x336eda02)-(t1.c32))  WHEN CASE x''  WHEN t1.c32 THEN vt0.c0 END THEN (- (t1.c55)) WHEN ((t1.c55)>=(vt0.c0)) THEN ((t1.c55)*(t1.c55)) WHEN LOWER(DISTINCT t1.c32) THEN (~ (t1.c55)) ELSE MIN(t1.c32, t1.c32, t1.c55, x'') END FROM vt0, t1 WHERE ((((('1991860958')AND(NULL)))LIKE(((('828964320', 1.264917533E9, -685958975))<=(('0.09223713400070599', 8.548821943742402E-4, '1412070766')))))); -- 2ms;
SELECT ((TRIM(vt0.c0))IS NOT(((vt0.c0)%(t1.c55)))) FROM t1, vt0 WHERE (x'4b8e'); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)|(vt0.c0)))AND(((t1.c55)>>(vt0.c0)))))AND(CASE WHEN t1.c32 THEN t1.c55 ELSE t1.c55 END)) FROM t1;SELECT vt0.c0, (((NOT (t1.c55)))!=(vt0.c0)), (((((t1.c32, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, t1.c55, vt0.c0)) AND (('D', t1.c32, t1.c32)))) NOT BETWEEN (AVG(x'8dd1')) AND (TYPEOF(DISTINCT t1.c55))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((((t1.c55, vt0.c0, t1.c55)) BETWEEN ((t1.c55, vt0.c0, t1.c55)) AND ((t1.c32, vt0.c0, x'')))) IS TRUE), ((((t1.c32)AND(x'')))OR(t1.c55)) COLLATE NOCASE, (((t1.c32) ISNULL) IN ()) FROM t1;SELECT ALL (((((t1.c55)|(t1.c55))))<((vt0.c0 COLLATE RTRIM))) FROM vt0, t1 WHERE (((NULL) BETWEEN (-0.0) AND (614943740)) COLLATE BINARY) GROUP BY (((((0.328312827426416))=((t1.c32)))) NOTNULL), ((((((((((((((t1.c32) IS FALSE))AND(((((t1.c32)AND(t1.c32)))OR(t1.c32)))))AND((- (t1.c32)))))AND(TRIM(DISTINCT t1.c32, vt0.c0))))AND(((vt0.c0) IS FALSE))))AND(((vt0.c0) ISNULL))))OR((t1.c55 IN ()))), (((((t1.c32)<(t1.c55)), (NOT (t1.c32)), (t1.c55 IN (vt0.c0, t1.c55))))<(((NOT (vt0.c0)), 0.39971940965260555, LIKE(t1.c32, t1.c55)))); -- 0ms;
SELECT ALL (NULL IN ((t1.c32 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT (+ (LIKELY(vt0.c0))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*), (((((t1.c55)%(t1.c32)), (vt0.c0 IN (vt0.c0, t1.c55)), (- (t1.c32))))<((((t1.c55)LIKE(t1.c32)), (t1.c55 IN (t1.c32, NULL)), 'ua'))), TOTAL(((t1.c55) IS FALSE)) FROM vt0, t1 WHERE (((0.11395590613081341 COLLATE RTRIM) IS TRUE)) ORDER BY vt0.c0 COLLATE BINARY; -- 0ms;
SELECT ((MAX(t1.c32)) IS FALSE), ((((((((t1.c32)AND(NULL COLLATE BINARY)))OR('o')))AND(TRIM(t1.c32, vt0.c0))))AND(((((vt0.c0)OR(t1.c32)))AND(t1.c32)))), ((((MIN(x'3d7f'))OR(((t1.c32)||('-810306405')))))OR(IFNULL(DISTINCT x'', vt0.c0))) FROM vt0, t1 WHERE (((('Ujx')) BETWEEN ((((-269888395)<(NULL)))) AND (((((('')AND('Xe+}쭂Oy')))OR('531582227')))))) LIMIT 1412070766 OFFSET 41041862; -- 0ms;
SELECT DISTINCT ((t1.c55)LIKE(NULL)) COLLATE BINARY FROM t1, vt0; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM t1, vt0 WHERE ((((0.4210874611094537, x'', 0.4992073347367908)) NOT BETWEEN (((('~jV')>=(x'')), CAST(0.5115148428794406 AS BLOB), NULL COLLATE BINARY)) AND ((((NULL) NOT NULL), ((x'') BETWEEN (0.1929474762611154) AND ('')), '1e500')))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS BLOB) FROM t1 WHERE ((- (CAST('-1740913977' AS NUMERIC))));SELECT DISTINCT (~ (vt0.c0)) FROM t1;SELECT ALL ((((((((((vt0.c0) NOTNULL))OR((~ (t1.c32)))))AND((~ (t1.c32)))))AND((((t1.c55, t1.c55, t1.c32)) BETWEEN (('-949478208', vt0.c0, t1.c55)) AND ((t1.c55, t1.c55, t1.c32))))))AND(((t1.c32) NOT BETWEEN (vt0.c0) AND (t1.c32)))), ((((vt0.c0)<=(t1.c55))) NOTNULL), t1.c55 FROM vt0, t1 WHERE (('-1192992262' IN ()) COLLATE RTRIM) GROUP BY (((PRINTF(vt0.c0)))>=((LOWER(DISTINCT t1.c55)))) HAVING ''''; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT NULL)) BETWEEN (t1.c32) AND (CASE t1.c32  WHEN vt0.c0 THEN t1.c55 END)) FROM vt0, t1 WHERE ((~ (((x'89a6')>(0.46468666225511446))))); -- 0ms;
SELECT DISTINCT (((TYPEOF(t1.c32)))<=((((NULL) NOT BETWEEN (t1.c55) AND (t1.c55))))) FROM vt0 WHERE (IFNULL(DISTINCT (0.6923499916438884 IN ()), ABS(DISTINCT '')));SELECT ALL AVG(((vt0.c0)&(t1.c32))) OVER () FROM vt0 LIMIT 697522688;SELECT DISTINCT CASE WHEN ((((((((t1.c32)AND(t1.c55)))OR(t1.c55)))AND(0.11395590613081341)))OR(t1.c55)) THEN TRIM(DISTINCT vt0.c0, x'') END, COUNT(*) OVER (), CAST(((t1.c55)GLOB(x'f75c')) AS REAL), LEAD(CAST(((t1.c32) IS FALSE) AS INTEGER), (('-1192992262' COLLATE RTRIM)AND(((t1.c55)GLOB(t1.c32)))), ((t1.c32)+(t1.c32)) COLLATE NOCASE) OVER (), CASE (- (t1.c55))  WHEN LOWER(0.7451439359604767) THEN (((t1.c32)) BETWEEN ((t1.c32)) AND ((t1.c32))) ELSE vt0.c0 COLLATE RTRIM END FROM t1 CROSS JOIN vt0 ON CASE 'wl|䨶m摑d'  WHEN 'ua' THEN ((t1.c55) ISNULL) END WHERE (HEX(DISTINCT 'b4}f摑I\}G') COLLATE NOCASE COLLATE RTRIM) GROUP BY (CAST(vt0.c0 AS REAL) IN ()), t1.c32, (((((t1.c32, t1.c32, vt0.c0, t1.c55, t1.c55))=((t1.c32, t1.c32, '', t1.c55, vt0.c0)))) BETWEEN (CASE vt0.c0  WHEN t1.c32 THEN vt0.c0 ELSE vt0.c0 END) AND (((t1.c55)GLOB(vt0.c0)))) HAVING MIN(((vt0.c0)LIKE(t1.c32))) ORDER BY rtreenode(0.6923499916438884, (('-1540591406') BETWEEN (t1.c32) AND (vt0.c0))), ((json_extract(NULL, 'TRUE')) IS FALSE), (+ (0.7077027584951967 COLLATE BINARY))  NULLS LAST, 'fU6\n' DESC; -- 0ms;
SELECT DISTINCT ((((vt0.c0)) BETWEEN ((t1.c32)) AND ((t1.c32))) IN (((0.7933389042477857) NOT BETWEEN (t1.c32) AND (t1.c55)))), ((CASE t1.c55  WHEN t1.c32 THEN '0.7451439359604767' END)>(SUM(t1.c32))), (((t1.c55)) NOT BETWEEN ((((vt0.c0)/(t1.c55)))) AND (((((t1.c55, vt0.c0, vt0.c0))=((t1.c55, vt0.c0, t1.c32)))))), (((NOT (t1.c55))) ISNULL), t1.c55 FROM t1, vt0 WHERE (((((NULL)-('B4}F摑I\}G')))OR(((x'') BETWEEN (0.9302705060480513) AND (NULL))))); -- 0ms;
SELECT DISTINCT CASE CAST(vt0.c0 AS REAL)  WHEN COUNT(*) THEN x'' END FROM t1 WHERE (((('BEj' IN ()))+((0.4421237583972977 IN (x'')))));SELECT ALL (((vt0.c0)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((CAST(NULL AS REAL)))) FROM t1;SELECT DISTINCT CASE WHEN ((((t1.c55)OR(t1.c32)))AND('0.4210874611094537')) THEN ((((t1.c32)AND(t1.c55)))AND(vt0.c0)) WHEN MIN(vt0.c0) THEN t1.c55 WHEN CAST(vt0.c0 AS INTEGER) THEN (((t1.c32)) NOT BETWEEN ((t1.c55)) AND ((t1.c55))) END FROM t1 GROUP BY ((CAST(vt0.c0 AS REAL)) BETWEEN (x'05a3') AND (((5.91022646E8) NOT BETWEEN (t1.c55) AND (t1.c55)))) HAVING NULLIF(((((vt0.c0)OR(NULL)))OR(t1.c55)), ((t1.c32) NOT NULL));SELECT ALL t1.c55, MAX(((((t1.c55)AND(0.44666431915719107)))AND(t1.c32))), ((t1.c55)%(((vt0.c0)<(t1.c32)))) FROM t1 WHERE ((((((('')OR(0.4114012612190707)))AND(x''))) IS TRUE));SELECT DISTINCT '5.m⋎' FROM t1, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1, vt0 WHERE (((CAST(x'75d9' AS NUMERIC)) IS TRUE)) LIMIT 573820849; -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) BETWEEN (0.5866524720627495) AND (-1176663368))) OVER (), NULL, t1.c55 FROM t1, vt0 WHERE (CASE WHEN (NOT (x'6eeb')) THEN ((NULL)GLOB('')) WHEN '-1149167002' THEN 'xg' WHEN ((1937225099) IS FALSE) THEN ((x'') NOTNULL) ELSE (('697522688')<<(0.8470348624510475)) END); -- 1ms;
SELECT ALL CAST(0X3168fde0 AS BLOB) FROM vt0, t1 WHERE (((-14508740) NOT BETWEEN (0.11576977499558672) AND (NULL)) COLLATE BINARY) ORDER BY CASE (t1.c32 IN (x'bd97b330', vt0.c0))  WHEN CASE vt0.c0  WHEN t1.c55 THEN t1.c55 ELSE t1.c55 END THEN t1.c32 COLLATE BINARY ELSE (t1.c55 IN ()) END ASC  NULLS FIRST; -- 0ms;
SELECT ALL UPPER(DISTINCT TOTAL(t1.c32)), (((t1.c32)GLOB(vt0.c0)) IN ()), DENSE_RANK() OVER () FROM vt0, t1; -- 0ms;
SELECT ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (HEX(t1.c32)) AND (CASE '573820849'  WHEN vt0.c0 THEN t1.c32 ELSE '' END)), (((0.44666431915719107)) BETWEEN ((MIN(vt0.c0))) AND ((''))), CASE NULL  WHEN (((NULL, t1.c32, vt0.c0))>((t1.c55, vt0.c0, t1.c55))) THEN (((t1.c55)) NOT BETWEEN ((t1.c32)) AND ((t1.c32))) END FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c55 COLLATE RTRIM)/((vt0.c0 IN ()))), TRIM(CASE WHEN t1.c32 THEN t1.c32 WHEN t1.c32 THEN t1.c32 WHEN 697522688 THEN t1.c55 ELSE t1.c55 END), (((t1.c55, x'', t1.c55)) NOT BETWEEN ((AVG(t1.c32), CAST(t1.c32 AS NUMERIC), AVG(vt0.c0))) AND (((t1.c55 IN ()), ((NULL) NOT NULL), ((((vt0.c0)AND(t1.c55)))AND(vt0.c0))))) FROM t1, vt0; -- 0ms;
SELECT ((((SUM(t1.c55))AND(TYPEOF(DISTINCT vt0.c0))))AND((- (t1.c55)))) FROM vt0, t1 WHERE (UPPER(DISTINCT CASE WHEN '!' THEN NULL WHEN NULL THEN '-821060470' WHEN x'fd88' THEN 0x131e284e END)) GROUP BY (t1.c32 IN ()) HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c55)))+(((vt0.c0) NOTNULL))); -- 0ms;
SELECT AVG(((((((((t1.c32)OR(vt0.c0)))OR(vt0.c0)))OR(t1.c55)))AND(t1.c55))) OVER ( ROWS BETWEEN NULLIF((+ (x'')), 0.9123764567168156) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS), '0.8205164055556824', ((((((t1.c55)AND(vt0.c0)))AND(t1.c32))) NOT BETWEEN ((+ (t1.c55))) AND (x'a34a')) FROM vt0;SELECT t1.c32, t1.c32, ((CAST(t1.c55 AS NUMERIC))|(0X30492451)) FROM vt0 WHERE ((((((('')) NOT BETWEEN (('-1335868044')) AND (('')))))<>((''))));SELECT ALL (((((((('0.8470348624510475')AND('	g秓')))AND((((t1.c32))!=((vt0.c0))))))OR((x'' IN ()))))OR(COUNT(t1.c55))) FROM vt0;SELECT TOTAL(TOTAL('1182942852')), CASE (NOT (t1.c55))  WHEN ((t1.c32)&(vt0.c0)) THEN ((((t1.c55)OR(t1.c32)))AND('1311272140')) ELSE ((vt0.c0)IS NOT(vt0.c0)) END, CASE 0.7376258205641482  WHEN vt0.c0 COLLATE BINARY THEN CASE t1.c32  WHEN t1.c55 THEN t1.c32 ELSE vt0.c0 END ELSE ((t1.c55) ISNULL) END FROM vt0, t1 WHERE ('');SELECT ALL ((((((((((t1.c32)OR(t1.c55)))OR(t1.c32)))OR(t1.c32)))OR(t1.c32)))GLOB((t1.c32 IN ()))) FROM t1, vt0; -- 1ms;
SELECT ((vt0.c0) BETWEEN (t1.c32 COLLATE NOCASE) AND (((vt0.c0)||(t1.c55)))) FROM t1 LIMIT 828964320;SELECT ALL ((t1.c32 COLLATE NOCASE)>>(json_array_length(t1.c32, t1.c32))) FROM t1, vt0 GROUP BY ((CASE WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)<(t1.c55)), ((((t1.c32) BETWEEN (vt0.c0) AND (t1.c32))) BETWEEN (((t1.c32)*(t1.c55))) AND (LOWER(t1.c55))), ((((vt0.c0) IS TRUE)) IS TRUE) LIMIT -2034872621 OFFSET 2129874542; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 WHERE (-8.2106047E8); -- 0ms;
SELECT DISTINCT (- ((vt0.c0 IN ()))), vt0.c0 COLLATE NOCASE COLLATE BINARY COLLATE NOCASE, CASE t1.c55  WHEN SQLITE_COMPILEOPTION_GET(t1.c55) THEN t1.c55 WHEN CASE t1.c55  WHEN t1.c55 THEN t1.c55 END THEN COUNT(*) WHEN (('-1740913977')>=(t1.c55)) THEN vt0.c0 ELSE ((((vt0.c0)OR(t1.c55)))OR(t1.c32)) END FROM vt0 WHERE (((((0Xffffffff8ba0c04e COLLATE NOCASE)OR((-2.96629438E8 IN ()))))OR((('3)밭O)')&(x'05e3'))))) LIMIT -899543471;SELECT DISTINCT UNICODE(((((((((vt0.c0)AND(t1.c32)))OR(t1.c32)))OR(vt0.c0)))AND(t1.c32))) FROM t1;SELECT ALL LIKELY(DISTINCT ((vt0.c0) BETWEEN (t1.c32) AND (t1.c55))) FROM vt0, t1 GROUP BY t1.c32; -- 0ms;
SELECT (((x'')) BETWEEN ((MAX(vt0.c0))) AND (((t1.c32 IN ())))) FROM t1, vt0 LIMIT 1845035736 OFFSET -1993697409; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((t1.c32)IS NOT(vt0.c0))), CAST(((t1.c55) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB), COUNT(load_extension(vt0.c0, t1.c55)) FROM vt0 WHERE ((((NULL)) BETWEEN ((CASE 0xffffffffed3de496  WHEN NULL THEN 0.5878516199077511 ELSE '-118753225' END)) AND ((('-1915959290' IN ())))));SELECT DISTINCT (((vt0.c0)<>(vt0.c0)) IN ()) FROM vt0, t1 WHERE (CASE WHEN (x'' IN ()) THEN NULL END); -- 0ms;
SELECT (vt0.c0 IN (((((vt0.c0)OR(t1.c55)))OR(t1.c55)))) FROM t1 GROUP BY ((((t1.c32)&(vt0.c0)))==(((t1.c55) BETWEEN (vt0.c0) AND (t1.c55))));SELECT ALL LAG((- (((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)))), ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (CAST(t1.c32 AS TEXT)) AND (t1.c32 COLLATE BINARY)), CAST(LOWER(DISTINCT t1.c32) AS NUMERIC)) OVER () FROM t1, vt0 WHERE (CASE ((NULL) NOT NULL)  WHEN (('-1952399282') NOT BETWEEN (x'') AND ('')) THEN CAST('-213457887' AS NUMERIC) WHEN ((x'723f') ISNULL) THEN (((((((((((('1412070766')AND(NULL)))AND(NULL)))OR(NULL)))OR('k7O')))OR(NULL)))OR(-616636828)) WHEN ((0.3024516527587767) NOT BETWEEN (0x3c70d3e7) AND (0.0701089477055431)) THEN (- (NULL)) END) LIMIT 828964320; -- 0ms;
SELECT ALL ((CASE t1.c32  WHEN vt0.c0 THEN t1.c55 ELSE t1.c55 END) ISNULL) FROM t1, vt0 WHERE ((((('-1192992262') NOT NULL))IS((~ (-610483154))))) ORDER BY UNLIKELY(t1.c32) ASC; -- 0ms;
SELECT ALL (- ((NOT (t1.c55)))) FROM t1, vt0; -- 0ms;
SELECT ALL ((t1.c32) IS FALSE) COLLATE RTRIM FROM t1 WHERE ('810099793'); -- 0ms;
SELECT ALL t1.c55, ((CAST(NULL AS TEXT)) IS TRUE), '-1952399282' COLLATE NOCASE, CASE ((t1.c55)IS NOT(t1.c55))  WHEN CASE vt0.c0  WHEN t1.c32 THEN t1.c55 ELSE t1.c32 END THEN LIKELIHOOD(t1.c55, 0.428391994611821) WHEN ((vt0.c0) NOT NULL) THEN ((t1.c55)>(t1.c55)) WHEN COALESCE(DISTINCT t1.c55, t1.c32) THEN ((t1.c32) BETWEEN (t1.c55) AND (vt0.c0)) ELSE CASE WHEN vt0.c0 THEN t1.c32 WHEN t1.c55 THEN 609041727 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN t1.c55 WHEN t1.c32 THEN t1.c32 END END, CASE WHEN ((t1.c32)%(vt0.c0)) THEN CASE WHEN vt0.c0 THEN t1.c55 ELSE t1.c55 END WHEN (0.4062580777273358 IN ()) THEN vt0.c0 WHEN t1.c32 THEN t1.c32 END FROM vt0, t1; -- 0ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((CASE WHEN NULL THEN 0.3505360633614514 WHEN 0.5359358585407057 THEN 0x71fb054e WHEN 0.4210874611094537 THEN NULL ELSE 0.06300108697147833 END)OR((((0.2822327971452253))=(('0[Lh1L'))))))AND((((NULL))<((416508502)))))) ORDER BY ((((PRINTF(x'', t1.c32, t1.c32))AND(0.9260062817386403)))AND((NOT (t1.c32)))) ASC  NULLS LAST;SELECT ALL (((((vt0.c0 IN (t1.c32)))AND(((vt0.c0) BETWEEN (t1.c32) AND (t1.c55)))))AND(t1.c32)), TRIM(SQLITE_VERSION(), RTRIM(vt0.c0)), NTILE(((0.4913593165246465) NOT BETWEEN (((t1.c55)<=(vt0.c0))) AND (((((((((t1.c55)OR(vt0.c0)))AND(vt0.c0)))AND(t1.c32)))AND(vt0.c0))))) OVER () FROM vt0, t1; -- 0ms;
SELECT ALL 5.31582227E8, SUM(NULL) OVER ( PARTITION BY ((((t1.c55)*(t1.c55))) BETWEEN (CAST(vt0.c0 AS INTEGER)) AND (((t1.c32)IS NOT(t1.c32)))), CASE CASE x''  WHEN t1.c32 THEN t1.c32 ELSE t1.c32 END  WHEN ((((t1.c32)OR(t1.c32)))AND(t1.c32)) THEN ((t1.c55) BETWEEN (t1.c32) AND (vt0.c0)) ELSE ((t1.c55)&(t1.c55)) END, CASE WHEN t1.c32 THEN t1.c32 END COLLATE BINARY, CASE (t1.c32 IN (t1.c55, t1.c55))  WHEN CASE vt0.c0  WHEN t1.c32 THEN t1.c55 ELSE x'' END THEN ((vt0.c0) BETWEEN (t1.c32) AND (t1.c32)) END ORDER BY ((t1.c32)LIKE(0.5655778511489143)) COLLATE NOCASE  NULLS FIRST, 1582318008  NULLS FIRST), COUNT(*) FROM vt0;SELECT IFNULL(((((vt0.c0)OR(t1.c32)))AND(vt0.c0)), MAX(vt0.c0)) FROM vt0, t1; -- 0ms;
SELECT ((UNLIKELY(DISTINCT t1.c55)) BETWEEN (((vt0.c0) IS TRUE)) AND (t1.c55)) FROM t1, vt0 WHERE ('-616636828'); -- 0ms;
SELECT ALL (((((+ (vt0.c0)))AND(((vt0.c0)|(vt0.c0)))))OR(((t1.c55) NOT BETWEEN (t1.c32) AND (t1.c32)))) FROM vt0;SELECT ALL NTILE(vt0.c0) OVER ( GROUPS  UNBOUNDED PRECEDING), ((CAST(t1.c55 AS NUMERIC))==(((vt0.c0)LIKE(t1.c32)))), ((t1.c32) IS TRUE) FROM vt0 GROUP BY CAST(t1.c32 AS TEXT) HAVING MAX((t1.c55 IN ()));SELECT COUNT(((((t1.c55)OR(-1164596086)))AND(t1.c32))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((t1.c32 COLLATE BINARY)GLOB((((t1.c55, t1.c32, t1.c32)) BETWEEN ((t1.c32, t1.c32, t1.c55)) AND ((t1.c55, t1.c55, 'xg'))))) FROM vt0, t1 WHERE (((((+ ('1264917533')), (('') NOT BETWEEN (0X30492451) AND (NULL)), ((-8.99543471E8)IS('V5'))))>((((x'')<>(NULL)), (('-70835556')==(x'9f80')), CAST(0.7959868506533377 AS NUMERIC))))) GROUP BY ((((((NULL) BETWEEN (NULL) AND (vt0.c0)))OR(CASE WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))OR(((vt0.c0)GLOB(t1.c32)))) HAVING t1.c55 ORDER BY (((vt0.c0)) BETWEEN ((((t1.c32) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) AND ((vt0.c0)))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t1.c32)) BETWEEN ((t1.c55 COLLATE BINARY)) AND ((CAST(0.06591982283074282 AS REAL)))) FROM vt0 GROUP BY ((vt0.c0)&(NULLIF(DISTINCT vt0.c0, t1.c32))) HAVING (((t1.c32 IN ()))=(CHAR(vt0.c0)));SELECT ((CAST(t1.c55 AS REAL))>>(CAST(t1.c55 AS BLOB))) FROM vt0;SELECT MIN((((vt0.c0, vt0.c0, 0.6372961154714522, -1636556482, 'Rh')) NOT BETWEEN ((vt0.c0, t1.c32, '-949478208', t1.c55, t1.c32)) AND ((t1.c32, t1.c55, vt0.c0, t1.c32, vt0.c0)))), ((((((((UNLIKELY(vt0.c0))OR(ABS(DISTINCT t1.c55))))AND(TOTAL(vt0.c0))))OR(((vt0.c0) NOTNULL))))OR((('1993369530') IS FALSE))), MIN(CAST(vt0.c0 AS TEXT)) FROM vt0 WHERE (NULL) ORDER BY (((- (vt0.c0)))IS(((t1.c32) BETWEEN (t1.c32) AND (t1.c55)))) ASC;SELECT 0.08524128166787892 FROM vt0, t1 WHERE ((~ ((+ ('Scv홞K*3y'))))); -- 1ms;
SELECT DISTINCT CAST(t1.c55 AS REAL) FROM vt0, t1 WHERE (((NULL) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT ((((t1.c55) NOT BETWEEN (vt0.c0) AND (vt0.c0))) ISNULL) FROM vt0 WHERE (((((0x3e71b2a)LIKE('Bp4A{}')))<=(((((0xffffffff8cc7a243)OR(x'8d22')))AND(603927831)))));SELECT DISTINCT (((((x'') IS TRUE)))<=((UPPER(vt0.c0)))) FROM vt0, t1 UNION ALL SELECT DISTINCT (NOT (vt0.c0)) COLLATE NOCASE FROM t1 WHERE (((((NULL COLLATE BINARY)AND(x'0cd9')))OR((NOT (0.044094900257715786))))) LIMIT 1198184112 OFFSET 749065881;SELECT DISTINCT AVG((~ (vt0.c0))), (~ (CASE t1.c32  WHEN vt0.c0 THEN t1.c55 END)), (((')l/l.L'))>((t1.c32 COLLATE RTRIM))) FROM t1, vt0; -- 0ms;
SELECT DENSE_RANK() OVER (), CASE t1.c32  WHEN vt0.c0 THEN '-2003577663' ELSE vt0.c0 END COLLATE BINARY, 4.1041862E7 FROM vt0;SELECT ALL 0.44666431915719107 FROM t1, vt0 WHERE (((((((((((x'')OR(x'')))OR(NULL)))OR('riii켪GՎ^')))OR(x'')))||(json_array_length(0.8601239061177249, 0.49692038237082325))));SELECT DISTINCT NULLIF(t1.c32, t1.c55) COLLATE BINARY FROM vt0, t1 WHERE (((NULL COLLATE RTRIM)>>((x'' IN ())))); -- 0ms;
SELECT DISTINCT NULL FROM vt0 LIMIT -810306405 OFFSET -2034872621; -- 0ms;
SELECT CASE CAST(t1.c32 AS INTEGER)  WHEN 0.8192504526566599 THEN ((t1.c55)>(vt0.c0)) END FROM vt0, t1; -- 0ms;
SELECT ALL (((((0.11241185127282494, vt0.c0, t1.c55))!=((vt0.c0, t1.c32, t1.c55))))<(CAST(vt0.c0 AS REAL))) FROM vt0 LIMIT -810481371;SELECT DISTINCT ((CAST(t1.c32 AS NUMERIC)) NOT BETWEEN ((~ (vt0.c0))) AND (t1.c32)) FROM vt0, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE t1.c55 COLLATE BINARY  WHEN ((t1.c55)LIKE(t1.c32)) THEN x'' ELSE ((t1.c55)>(t1.c55)) END, NULLIF(((((t1.c32)OR(vt0.c0)))OR(t1.c55)), (t1.c32 IN ())), (- (((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))) FROM t1, vt0 WHERE (json_extract(((-810481371) ISNULL), (((('-1143118403')AND(NULL)))AND(0.908435999251781)), ((((NULL)OR('65477418')))AND('9B')), ((NULL)||(0.2547852916928305))));SELECT DISTINCT t1.c55 FROM t1 WHERE (CAST('695031125' AS TEXT) COLLATE BINARY); -- 0ms;
SELECT ALL (+ (CASE WHEN t1.c32 THEN t1.c32 END)) FROM t1, vt0; -- 0ms;
SELECT (t1.c55 IN ()), ((vt0.c0)||(t1.c55)) COLLATE BINARY, (t1.c32 IN ()) FROM t1, vt0 WHERE (CAST(CAST(-2.13457887E8 AS INTEGER) AS BLOB)); -- 0ms;
SELECT DISTINCT (+ (UPPER(t1.c55))), AVG(QUOTE(t1.c55)), (((((((((t1.c32 IN ()))AND(0.5655778511489143)))OR((- (t1.c32)))))OR(HEX(DISTINCT t1.c55))))OR(t1.c55 COLLATE BINARY)) FROM vt0, t1 WHERE (((((x'add6') NOT NULL)) NOT BETWEEN ((((0.5115148428794406)) NOT BETWEEN (('')) AND ((NULL)))) AND ((('-1951931009')!=('-2007556946'))))); -- 0ms;
SELECT ALL GROUP_CONCAT(UNLIKELY(vt0.c0)) FROM vt0 WHERE (((((UNLIKELY(0.43564013889075914))AND(JULIANDAY(NULL, '#N♲䯼mO', NULL, NULL, x''))))OR((+ (0.21689457179187277))))); -- 0ms;
SELECT DISTINCT ((t1.c55)LIKE(((t1.c32) NOT BETWEEN (t1.c32) AND (t1.c55)))), RTRIM(((((vt0.c0)OR(t1.c32)))OR(vt0.c0))), 0.6127484645392786 FROM vt0, t1 WHERE ((((0.8744579646459623)) BETWEEN (('iq' COLLATE BINARY)) AND ((IFNULL('Up', x''))))); -- 0ms;
SELECT DISTINCT ((((t1.c55)/(t1.c32))) NOTNULL) FROM vt0 WHERE ((((-810306405 COLLATE NOCASE))=((UNLIKELY(NULL)))));SELECT DISTINCT '' FROM t1; -- 0ms;
SELECT DISTINCT CAST(TRIM(t1.c55, vt0.c0) AS TEXT), TOTAL('-70835556'), vt0.c0 COLLATE RTRIM FROM vt0 WHERE (((0.09102727961766699 IN (229053013)) IN ((((x'')) BETWEEN ((NULL)) AND ((NULL)))))) ORDER BY (((t1.c55 COLLATE RTRIM))!=(((((t1.c55)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))))  NULLS FIRST;SELECT ALL vt0.c0 FROM t1;SELECT DISTINCT ABS(DISTINCT ((t1.c32) NOTNULL)) FROM vt0 WHERE (((5.73820849E8 COLLATE NOCASE) BETWEEN ((+ (NULL))) AND (x'5c4c' COLLATE RTRIM))) GROUP BY HEX(CAST(t1.c55 AS NUMERIC));SELECT DISTINCT ((t1.c32) IS FALSE) COLLATE BINARY, TOTAL(((t1.c55)*(t1.c32))) OVER ( PARTITION BY ((((x'0a9c1040')&(vt0.c0))) NOT BETWEEN (((t1.c55) BETWEEN (t1.c55) AND (t1.c55))) AND (CAST(vt0.c0 AS INTEGER))), ((((((((STRFTIME(t1.c32, t1.c55, t1.c55))AND(vt0.c0 COLLATE RTRIM)))AND(CASE t1.c32  WHEN t1.c32 THEN vt0.c0 WHEN t1.c55 THEN vt0.c0 WHEN t1.c55 THEN '-1522162934' ELSE t1.c55 END)))AND(vt0.c0)))AND(((t1.c32) BETWEEN (t1.c32) AND ('')))), (((t1.c55)) BETWEEN (((+ (t1.c55)))) AND ((CAST(vt0.c0 AS NUMERIC)))), CASE WHEN (vt0.c0 IN ()) THEN ((t1.c32) BETWEEN (t1.c32) AND (t1.c55)) ELSE (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) END, ((CASE t1.c55  WHEN t1.c55 THEN 0.443155825947389 WHEN t1.c55 THEN t1.c32 WHEN t1.c32 THEN t1.c55 END) ISNULL), (('-855645544') BETWEEN ((vt0.c0 IN ())) AND ((+ (NULL)))) ORDER BY ((t1.c32) BETWEEN (t1.c32) AND (t1.c32)) COLLATE BINARY ASC GROUPS  UNBOUNDED PRECEDING EXCLUDE GROUP), ((((JULIANDAY(t1.c55, vt0.c0, t1.c32))AND(t1.c55)))AND(t1.c32)) FROM t1 WHERE (((('' IN ())) NOT BETWEEN (((((x'')AND('')))AND('2zwJ?'))) AND (NULL COLLATE RTRIM)));SELECT ((((t1.c32)-(vt0.c0))) IS TRUE), LOWER(MIN(vt0.c0)), (NOT (MAX(vt0.c0))) FROM t1, vt0 LIMIT -421829551; -- 0ms;
SELECT (((t1.c32)) BETWEEN ((CASE t1.c32  WHEN t1.c32 THEN t1.c55 END)) AND (((- ('-1830619873'))))), t1.c55, t1.c55 FROM t1, vt0; -- 0ms;
SELECT ((((((((((t1.c32)OR(t1.c32)))AND(x'')))AND(t1.c32)))AND(vt0.c0)))&(((t1.c32)IS(vt0.c0)))), CASE WHEN ((t1.c55)-(t1.c32)) THEN SUM(t1.c32) WHEN ((((((((vt0.c0)AND(vt0.c0)))AND('뀇x}S+H8')))OR(t1.c55)))AND(t1.c55)) THEN '' WHEN CAST(t1.c32 AS REAL) THEN ((vt0.c0) NOT NULL) END, ((((((((t1.c32 COLLATE RTRIM)AND(t1.c32 COLLATE BINARY)))AND((t1.c55 IN (vt0.c0, t1.c32)))))AND(COALESCE(t1.c55, t1.c32))))AND(((vt0.c0)IS NOT(t1.c55)))) FROM vt0, t1 WHERE ((((x'd072' IN ()))<(LOWER(0.05604858165344573)))); -- 0ms;
SELECT DISTINCT x'' FROM vt0, t1 WHERE ((((NOT (x'db46')))>>(((-206249025)||(NULL))))); -- 0ms;
SELECT ((CASE t1.c55  WHEN t1.c32 THEN vt0.c0 WHEN t1.c32 THEN t1.c55 WHEN t1.c55 THEN 0.8193470522800378 END)AND(((t1.c55)*(NULL)))), 0.9649511146256418 COLLATE RTRIM, CAST((((t1.c32)) BETWEEN ((t1.c55)) AND ((t1.c32))) AS BLOB), (((x'')||(t1.c32)) IN (((((t1.c32)OR(vt0.c0)))AND(t1.c55)))), CAST(CAST(t1.c32 AS NUMERIC) AS INTEGER) FROM t1, vt0 WHERE (((0X7d7bbd93)*(x'1bf2')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(((t1.c32)|(t1.c32)) AS REAL), ((json_array_length(vt0.c0)) NOT BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)>>(vt0.c0)))), ((((((t1.c32)LIKE(t1.c55)))OR('wኯ')))AND(((vt0.c0)==(t1.c55)))) FROM t1 GROUP BY ((CAST(t1.c55 AS REAL))LIKE(((t1.c55) IS TRUE))), CAST(x'' AS INTEGER), (~ ((((t1.c32, 'ex45n', t1.c32))>=((t1.c55, t1.c55, vt0.c0)))));SELECT DISTINCT ((((t1.c55 COLLATE BINARY)AND(((((t1.c32)OR(t1.c55)))OR(vt0.c0)))))OR((+ (t1.c55)))) FROM t1, vt0 WHERE (CASE LOWER(DISTINCT '[>g2MR')  WHEN CAST(x'' AS NUMERIC) THEN (NULL IN ()) WHEN ((x'f24c')>=('810099793')) THEN ((x'')>>(NULL)) WHEN ABS(DISTINCT NULL) THEN (('') BETWEEN ('K1HAw蒐ワ\n') AND (0.39971940965260555)) END); -- 0ms;
SELECT ((CAST(t1.c32 AS NUMERIC))LIKE(((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)))), 0x4e286ccc, MAX(CAST(t1.c55 AS TEXT)) FROM t1;SELECT DATETIME((+ (t1.c32)), ((vt0.c0) BETWEEN (t1.c32) AND (x'')), (NOT (vt0.c0))) FROM vt0 WHERE (CASE WHEN (('1845035736')==('-1647394200')) THEN (792416622 IN ()) ELSE ((x'') NOT NULL) END);SELECT DISTINCT ((((t1.c32) NOTNULL)) IS FALSE) FROM vt0, t1 WHERE (((CASE 0.2238052186942343  WHEN NULL THEN 5.91022646E8 END) NOT BETWEEN (NULL COLLATE NOCASE) AND ((('#t')GLOB(x''))))); -- 0ms;
SELECT (((t1.c55)) NOT BETWEEN (((+ (t1.c55)))) AND ((((((vt0.c0)AND(t1.c55)))AND(vt0.c0))))), (((t1.c32 IN ()))+(((vt0.c0)<>(t1.c55)))), ((((t1.c32) NOTNULL)) BETWEEN (((t1.c55)OR(t1.c55))) AND ((((t1.c55)) BETWEEN ((NULL)) AND ((0Xffffffffbbeed263))))) FROM vt0, t1 WHERE ((((('\rq')IS(x'')))>(((0.2238052186942343) NOT NULL)))); -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE RTRIM FROM t1, vt0; -- 0ms;
SELECT CAST((((t1.c55))<((t1.c32))) AS BLOB) FROM vt0;SELECT DISTINCT ((0.7899791586476765) ISNULL), ((t1.c55)>=(CAST(-7.0056786E8 AS BLOB))), NULL FROM t1 WHERE (((0.29949058039138243)AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT (((((t1.c32) NOT BETWEEN ('1293443687') AND (t1.c55)), ((((((((t1.c55)AND(t1.c32)))OR(t1.c55)))OR(t1.c32)))OR(vt0.c0)), (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))))>(((vt0.c0 IN ()), COUNT(*), -700567860))), (((t1.c32)|(vt0.c0)) IN ()), (((((t1.c32, -280181370, t1.c55))<=((t1.c55, vt0.c0, NULL))))=((((t1.c32)) BETWEEN ((vt0.c0)) AND ((t1.c32))))), SUM(((t1.c55) IS TRUE)) COLLATE NOCASE, ((((((((((((((vt0.c0)<<(t1.c32)))OR(((t1.c32)>(t1.c55)))))AND(vt0.c0)))AND(((vt0.c0)>>(NULL)))))AND(x'' COLLATE RTRIM)))AND(((((t1.c32)AND(t1.c55)))OR(0.1994240473662935)))))AND(CASE t1.c55  WHEN t1.c32 THEN t1.c32 ELSE 'Tl<*9C1UC' END)) FROM t1;SELECT ALL IFNULL(DISTINCT t1.c32, vt0.c0) COLLATE BINARY, ((((((t1.c55)=(t1.c55)))AND(ABS(''))))OR(t1.c55 COLLATE BINARY)), t1.c32 FROM t1, vt0 WHERE (((x'') BETWEEN (TRIM(x'40f3')) AND (((x'72fa') IS TRUE)))); -- 0ms;
SELECT DISTINCT NULLIF(((vt0.c0)>>(t1.c55)), ((vt0.c0)IS(t1.c32))), (NOT (CAST(t1.c55 AS NUMERIC))), CASE WHEN COUNT(*) THEN LIKELIHOOD(vt0.c0, 0.9664707710607155) END FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT vt0.c0))=(((t1.c55)GLOB(t1.c55)))) FROM t1;SELECT ALL (((t1.c55)) NOT BETWEEN ((0.03043565276805904)) AND ((((t1.c55) NOT NULL)))) FROM vt0;SELECT DISTINCT ((vt0.c0) NOTNULL) FROM vt0 FULL OUTER JOIN t1 ON ((((vt0.c0)GLOB(t1.c32)))%('&W\mZ鲐?NJ' COLLATE RTRIM)) WHERE (CAST((~ (862902786)) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((t1.c32)>=(t1.c32))) IS TRUE) FROM t1 WHERE (8.548821943742402E-4); -- 0ms;
SELECT DISTINCT (((((t1.c55 IN ()))OR((('2089739720')<=(vt0.c0)))))AND(((vt0.c0)<<(t1.c55)))), TYPEOF(((vt0.c0)<>(t1.c55))), (((t1.c55)) BETWEEN (((((t1.c55, vt0.c0, t1.c55)) NOT BETWEEN ((vt0.c0, '-994740659', t1.c55)) AND ((vt0.c0, vt0.c0, t1.c32))))) AND ((SQLITE_COMPILEOPTION_USED(x'')))) FROM vt0, t1 WHERE ((('') NOT NULL)); -- 1ms;
SELECT ALL ((CASE t1.c55  WHEN vt0.c0 THEN vt0.c0 END)<(NULLIF(DISTINCT t1.c32, NULL))) FROM vt0 WHERE (CAST(LOWER('-1462589512') AS INTEGER)) ORDER BY '-2136756407';SELECT DISTINCT (((t1.c32) NOT NULL) IN ()) FROM t1, vt0; -- 0ms;
SELECT ALL AVG((((vt0.c0))==((t1.c32)))) OVER () FROM t1 WHERE (((((((-2.034872621E9)-(0.18018664245241434)))OR(LOWER(-810481371))))OR(CAST(0.6164503252834248 AS TEXT))));SELECT (((t1.c55 IN ()))GLOB(((t1.c32)-(t1.c55)))) FROM t1 EXCEPT SELECT DISTINCT CASE TOTAL(t1.c32)  WHEN t1.c32 COLLATE RTRIM THEN CASE t1.c32  WHEN t1.c32 THEN vt0.c0 WHEN vt0.c0 THEN '787780812' WHEN t1.c32 THEN vt0.c0 ELSE t1.c32 END ELSE CAST(NULL AS BLOB) END FROM vt0, t1 WHERE (((((('9'))>((NULL))))>(-1.522162934E9))); -- 0ms;
SELECT DISTINCT json_array_length(((t1.c32) ISNULL)), t1.c32, (((t1.c55, t1.c32, t1.c32)) NOT BETWEEN (((+ ('591022646')), (+ (t1.c32)), ((t1.c32)IS NOT(t1.c55)))) AND ((CAST(t1.c32 AS NUMERIC), x'', CASE t1.c32  WHEN t1.c55 THEN t1.c55 ELSE t1.c55 END))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN ())) BETWEEN (CASE t1.c32  WHEN vt0.c0 THEN vt0.c0 WHEN t1.c55 THEN t1.c32 WHEN vt0.c0 THEN t1.c55 ELSE t1.c55 END) AND (IFNULL(vt0.c0, t1.c32))) FROM t1, vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((t1.c55 COLLATE BINARY))!=((t1.c55))) FROM t1; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c0))>=(TYPEOF(t1.c55))) FROM vt0, t1 WHERE (CASE WHEN MIN(1.736953642E9, NULL) THEN ((((0xffffffff902c1073)AND(x'')))AND(0.252517132333959)) WHEN ((0X397e79d3)<=('874572000')) THEN (((x'')) BETWEEN ((0.010902394740045174)) AND (('0.3505360633614514'))) WHEN (('0.8744579646459623') BETWEEN (x'') AND (x'')) THEN ((x'') NOTNULL) ELSE (('-1082076385')<>(0.34714357797028417)) END); -- 0ms;
SELECT DISTINCT ((MAX(t1.c55)) BETWEEN (CASE vt0.c0  WHEN t1.c32 THEN t1.c32 ELSE t1.c55 END) AND (((t1.c32) IS FALSE))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ((- (t1.c32)))) FROM t1, vt0 WHERE ((((NULL IN ()))>>(0X61bfaf0c))); -- 0ms;
SELECT CAST(NULLIF(t1.c55, vt0.c0) AS TEXT) FROM t1, vt0; -- 0ms;
SELECT ALL vt0.c0 FROM vt0 WHERE ((((-9.49478208E8)) BETWEEN (('')) AND ((x''))) COLLATE RTRIM); -- 0ms;
SELECT (+ (GROUP_CONCAT(0.853751020902358))), NULL, ((((((t1.c32)AND(t1.c55)))OR(vt0.c0))) BETWEEN (((0.6207664417765784) ISNULL)) AND (t1.c55)) FROM vt0, t1 WHERE ((((((((((165862382)OR(-2.007556946E9)))AND(NULL)))OR(x'')))AND('c紶102--367191777351314384:1131-1478T271T184178437672512058:412 1128:D')) IN (((NULL) NOT NULL)))); -- 0ms;
SELECT GROUP_CONCAT(vt0.c0), ((((t1.c32)GLOB('cU'))) NOT BETWEEN (t1.c32) AND (((t1.c55)GLOB(t1.c32)))), (((('1243250872') ISNULL))OR(LIKE(t1.c32, t1.c55))), ((((((((t1.c32)OR(CAST(t1.c55 AS INTEGER))))OR(t1.c32 COLLATE RTRIM)))AND(((t1.c32) ISNULL))))AND(vt0.c0 COLLATE BINARY)), ((((((((((t1.c32)OR(t1.c55)))OR(t1.c32)))OR('gMD	')))AND(x'')))OR(NULL)) FROM t1 WHERE (((((756801018) ISNULL)) NOT BETWEEN (((0.7138664512847548) NOT BETWEEN (-1702037368) AND (0.49910786809884333))) AND (((('XS-~o[6')) NOT BETWEEN ((x'')) AND ((NULL))))));SELECT DISTINCT (((t1.c55 IN (NULL, t1.c32)))*(MIN(0.7937076447319786))), UNICODE(vt0.c0 COLLATE BINARY), CUME_DIST() OVER () FROM vt0, t1; -- 0ms;
SELECT ALL (((t1.c55 IN ())) IS FALSE), NULL, GROUP_CONCAT(((vt0.c0) IS FALSE)) FROM t1, vt0 GROUP BY ((((vt0.c0) NOT BETWEEN ('-1915959290') AND (t1.c32))) IS FALSE); -- 0ms;
SELECT ALL (~ ((vt0.c0 IN (t1.c32)))) FROM t1, vt0 WHERE (CASE ((NULL) ISNULL)  WHEN (((',{Eql~Iq'))<(('1804924638'))) THEN ((NULL)IS(0.13136376092953184)) WHEN (('(u~Y쿳L	O') NOT BETWEEN (0.2563534364540957) AND (0.9312330330406668)) THEN CASE '165862382'  WHEN x'' THEN -1.141976477E9 WHEN -23145745 THEN NULL WHEN NULL THEN NULL WHEN x'b000' THEN 0.5491853974767646 WHEN '1182942852' THEN 0.6006513947963996 END WHEN CASE 0.5251510448213259  WHEN NULL THEN NULL ELSE NULL END THEN 4.1041862E7 COLLATE BINARY END); -- 2ms;
SELECT DISTINCT CAST(((((((((t1.c32)OR(t1.c55)))OR(vt0.c0)))OR(t1.c32)))OR(vt0.c0)) AS INTEGER) FROM vt0 WHERE ((((((9.64590035E8)IS('-433894321')), ((NULL)>('0.5115148428794406')), CASE WHEN -1.876160397E9 THEN 0.6207664417765784 ELSE 0X2b9db365 END))<((((x'')<(-1743633440)), ((NULL) NOTNULL), (('1991860958') BETWEEN ('r]>9') AND (NULL)))))) GROUP BY '-1082076385' HAVING t1.c55;SELECT DISTINCT COUNT((('2121368912')<(vt0.c0))) OVER (), CAST(CASE t1.c32  WHEN t1.c55 THEN t1.c32 END AS BLOB), CAST(((((((((vt0.c0)AND(t1.c32)))AND(vt0.c0)))AND(vt0.c0)))AND(t1.c55)) AS REAL) FROM t1 WHERE (((ABS(DISTINCT x'')) NOT BETWEEN (LENGTH(NULL)) AND (TYPEOF(DISTINCT '-1540591406'))));SELECT ALL ((((t1.c55)<=(vt0.c0)))%(((vt0.c0)=(t1.c55)))) FROM t1, vt0; -- 0ms;
SELECT ALL ((((((((((((0.5655778511489143 COLLATE BINARY)AND(((t1.c55) IS TRUE))))AND(((vt0.c0) NOT BETWEEN (t1.c32) AND (t1.c55)))))OR(COALESCE(DISTINCT t1.c32, t1.c32))))OR(((t1.c55)>=(vt0.c0)))))AND(CASE t1.c55  WHEN t1.c32 THEN t1.c55 ELSE vt0.c0 END)))AND(CAST(t1.c55 AS BLOB))) FROM vt0;SELECT 'W%' FROM vt0, t1; -- 0ms;
SELECT DISTINCT MAX((vt0.c0 IN (t1.c32))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(json_quote((t1.c55 IN ())), ((((t1.c55)AND(t1.c32)))AND(t1.c32)) COLLATE NOCASE) OVER () FROM t1 LIMIT -469888449; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN (((((vt0.c0))>((t1.c32))))) AND ((CASE t1.c55  WHEN t1.c32 THEN vt0.c0 ELSE '-610483154' END))), SUM(CAST(t1.c55 AS TEXT)) OVER (), ((t1.c55)>>((~ (vt0.c0)))), SUM((t1.c55 IN ())), LOWER(DISTINCT (NULL IN ())) FROM vt0, t1 WHERE (((highlight(-1164596086, 0.9109544078796806, x'', x'0e28'))GLOB(((((x'')AND(0.22185085569409468)))OR('bo\n*~?.g%')))));SELECT DISTINCT CASE WHEN ((t1.c55) NOT BETWEEN (t1.c55) AND (vt0.c0)) THEN (((t1.c55)) NOT BETWEEN ((t1.c55)) AND ((0.6127484645392786))) END FROM vt0 WHERE ((NULL IN ()) COLLATE RTRIM);SELECT DISTINCT AVG((((vt0.c0))==((t1.c55)))), ((((t1.c55)|(t1.c55))) BETWEEN (((((t1.c32)AND(vt0.c0)))AND(t1.c55))) AND (-2041040003)), ((((((0.021644777819465943)AND(0.5836653325485067)))OR(vt0.c0)))IS NOT(vt0.c0 COLLATE BINARY)) FROM t1, vt0; -- 1ms;
SELECT DISTINCT json_patch(NULLIF(DISTINCT NULL, t1.c32), ((((t1.c55)OR(t1.c55)))AND(t1.c55))) FROM vt0;SELECT DISTINCT TOTAL(0.6998449147699732) FROM t1, vt0 WHERE (((((CASE x''  WHEN '-1011133235' THEN NULL END)AND((NULL IN ()))))AND(((NULL)%(x''))))) ORDER BY ((((((((UPPER('-1610454611'))OR(((((vt0.c0)OR(t1.c55)))AND(t1.c32)))))OR(CAST(t1.c32 AS BLOB))))AND(((t1.c55) NOT NULL))))AND((t1.c32 IN (vt0.c0, t1.c32))))  NULLS LAST, 'EGK([/z'  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN (t1.c55 IN (t1.c32)) END FROM t1, vt0 WHERE (((CASE '0.3505360633614514'  WHEN '810099793' THEN NULL END) NOT NULL)); -- 0ms;
SELECT DISTINCT SUM(CAST(t1.c55 AS REAL)) OVER () FROM vt0, t1; -- 0ms;
SELECT ALL TOTAL(((x'2d9068cf') NOT BETWEEN (vt0.c0) AND (t1.c55))) OVER () FROM vt0 NOT INDEXED, t1 WHERE (((('') NOTNULL) IN (CASE WHEN NULL THEN x'' WHEN '697522688' THEN x'1ba4' WHEN 0.01571831248053357 THEN 0Xffffffff87083301 ELSE '1966127695' END))) ORDER BY CASE ((((vt0.c0)OR(t1.c55)))AND(0.9312330330406668))  WHEN ((vt0.c0)>(t1.c55)) THEN ((NULL)<=(t1.c32)) WHEN NULL THEN t1.c32 COLLATE BINARY WHEN NULLIF(t1.c32, t1.c55) THEN (NOT (vt0.c0)) ELSE ((((t1.c32)AND(t1.c55)))OR(t1.c55)) END DESC  NULLS FIRST LIMIT -1397407520 OFFSET 1682288693; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT (~ (t1.c55))) FROM vt0, t1 ORDER BY (((+ (vt0.c0))) NOTNULL)  NULLS FIRST, (NOT (t1.c32)) COLLATE RTRIM ASC  NULLS LAST, (((((vt0.c0)OR(t1.c55)))AND(t1.c55)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((((CAST(vt0.c0 AS TEXT))AND(((vt0.c0) BETWEEN (t1.c32) AND (1.182942852E9)))))OR(COUNT(t1.c55))) FROM vt0 WHERE ((((NULL)) BETWEEN ((((5.91022646E8)-(0.7920128060557655)))) AND ((((x'') BETWEEN ('\nHi') AND (0.8193470522800378))))));SELECT DISTINCT CASE WHEN ((vt0.c0) NOT BETWEEN (t1.c55) AND (vt0.c0)) THEN ((t1.c32) ISNULL) ELSE CAST(t1.c55 AS BLOB) END FROM t1, vt0; -- 0ms;
SELECT t1.c55, (((((t1.c55, t1.c32, t1.c32))=((vt0.c0, t1.c32, t1.c32))))<(TRIM(t1.c32))), t1.c32 FROM t1;SELECT DISTINCT LAST_VALUE(CASE WHEN ((vt0.c0)*(NULL)) THEN ((t1.c55)-(vt0.c0)) ELSE (~ (t1.c55)) END) OVER (), ((COALESCE(t1.c55, vt0.c0, vt0.c0, t1.c55))/(MAX(t1.c55))), (((((((t1.c55)AND(t1.c55)))OR(t1.c55))))=((x'3dd54d3c'))) FROM vt0, t1; -- 2ms;
SELECT (((t1.c32 IN ())) NOT NULL) FROM vt0, t1 GROUP BY ((((t1.c32) BETWEEN (t1.c55) AND (vt0.c0)))>>(((t1.c32) BETWEEN (vt0.c0) AND (vt0.c0)))) HAVING CAST(vt0.c0 AS TEXT) COLLATE NOCASE; -- 0ms;
SELECT ((((((('Jm'))<((t1.c32))))AND(((t1.c55) IS TRUE))))OR(x'2d20')), CASE WHEN ((t1.c32)=(t1.c55)) THEN (- (t1.c55)) END, (t1.c55 IN ()) COLLATE BINARY FROM vt0, t1 WHERE (((((NULL, '-1164596086', NULL)) BETWEEN ((NULL, '䆸0얆\rQXBtB', 4.16508502E8)) AND ((0.08967225737197204, 'k7O', 0.08501453083010024))) IN ())); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))!=((t1.c55))) AS INTEGER) FROM vt0 WHERE (CAST((-2136756407 IN ()) AS NUMERIC));SELECT DISTINCT 193779527 FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((t1.c55, t1.c55, vt0.c0, t1.c55, vt0.c0)) BETWEEN ((((((t1.c55)AND(vt0.c0)))AND(0.5224398580862202)), CASE WHEN t1.c55 THEN vt0.c0 ELSE vt0.c0 END, 0.6918872797816422, ((t1.c32)<(t1.c32)), (((t1.c55)) NOT BETWEEN ((x'')) AND ((t1.c32))))) AND ((NULL, MAX(vt0.c0), LIKELIHOOD('wA', 0.34578038296437685), CAST(t1.c55 AS BLOB), (((vt0.c0, vt0.c0, t1.c32)) NOT BETWEEN ((t1.c55, t1.c32, vt0.c0)) AND ((0.39993832146848807, vt0.c0, t1.c32)))))) FROM vt0;SELECT DISTINCT CASE (~ (t1.c55))  WHEN CAST(t1.c55 AS INTEGER) THEN CAST(t1.c32 AS TEXT) ELSE ((((((((t1.c32)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(t1.c55)) END FROM vt0, t1 LIMIT -1142310572; -- 1ms;
SELECT ALL CAST(((t1.c55) IS TRUE) AS BLOB) FROM vt0 WHERE (HEX(DISTINCT (- ('\r'))));SELECT ALL t1.c32, t1.c32, NULL FROM t1, vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c32)) COLLATE RTRIM, vt0.c0, ((MIN(t1.c32))<((- (t1.c55)))) FROM vt0;SELECT DISTINCT ((((CASE vt0.c0  WHEN t1.c32 THEN t1.c55 END)AND(CAST(vt0.c0 AS REAL))))OR(t1.c32)) FROM t1 WHERE (CASE WHEN ((0.42451394547087296) BETWEEN (-2.06249025E8) AND ('165862382')) THEN ((0.8868911606254088)>>(x'3d06')) ELSE ((x'e3a6') BETWEEN (0.5251510448213259) AND (0.07156318538521877)) END);SELECT DISTINCT (~ (((t1.c32)<=(96089476)))), CASE WHEN '12539029' THEN (((t1.c32))==((vt0.c0))) ELSE t1.c55 COLLATE NOCASE END, (((+ (vt0.c0))) IS TRUE) FROM t1 WHERE (LTRIM(''));SELECT ALL t1.c32 FROM vt0 WHERE (CAST(((((0.9166674864358938)AND(0.6266339025109164)))OR('-1236979473')) AS REAL)) LIMIT 446976262;SELECT DISTINCT t1.c55 FROM vt0 ORDER BY ((((((((t1.c32)OR(0.10402756804557145)))AND(t1.c32)))AND(vt0.c0)))OR(t1.c32)) COLLATE BINARY DESC, vt0.c0 DESC;SELECT ALL CAST(((t1.c55) NOT BETWEEN ('1933823489') AND (t1.c55)) AS BLOB), t1.c32 COLLATE BINARY, 'V9' FROM vt0;SELECT DISTINCT (((((t1.c32))<((vt0.c0)))) BETWEEN (SQLITE_VERSION()) AND (CAST(0.2941551651137305 AS NUMERIC))), LAG(((((vt0.c0)AND(0.4992073347367908)))AND(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), vt0.c0, ((CAST(vt0.c0 AS REAL))|(CAST(vt0.c0 AS INTEGER)))) OVER ( ORDER BY t1.c55  NULLS FIRST), ((((t1.c55) IS TRUE))<>(INSTR(vt0.c0, NULL))) FROM vt0 WHERE (((((751168486)>(NULL)))<=(SQLITE_VERSION())));SELECT DISTINCT ((CAST(t1.c55 AS INTEGER))*(((t1.c55) IS FALSE))) FROM t1, vt0 WHERE (CASE WHEN (((('-1458910024')OR('')))AND(x'')) THEN ((((0x3e71b2a)AND(x'')))OR(0.2947314606000724)) WHEN ((0x41fab5e8)IS(NULL)) THEN CASE 0.5102800904853007  WHEN 1.937225099E9 THEN 0xffffffff99fa8543 WHEN x'1b9d' THEN '' WHEN x'da17' THEN '-1002065913' ELSE 0.8479000746680226 END WHEN ((0.5917023728792409)<(0.4120109368254653)) THEN ((0.03667130323529677) NOT NULL) END); -- 0ms;
SELECT ((vt0.c0)>(t1.c32)) COLLATE RTRIM, MAX(COUNT(*)), CAST(0.6455483809503078 AS TEXT) FROM t1 WHERE (((((((0.13013621215241622)OR(x'2090')))AND('1264917533'))) BETWEEN ((((0.794157599828501)) NOT BETWEEN ((x'e383')) AND ((x'ec87')))) AND (((('', 'XM,}', NULL)) NOT BETWEEN ((0.7980497763567753, NULL, 0x2d35f2a7)) AND ((x'', '', 0.149251332275945)))))) ORDER BY t1.c32 ASC;SELECT DISTINCT CAST(CAST(vt0.c0 AS NUMERIC) AS TEXT) FROM vt0, t1; -- 0ms;
SELECT NTH_VALUE(((((((((vt0.c0 COLLATE BINARY)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))AND(CAST(vt0.c0 AS TEXT))))AND(CAST(NULL AS INTEGER))))OR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), CAST(((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS REAL)) OVER (), ((((- (t1.c32)), ((vt0.c0)<=(t1.c32)), vt0.c0 COLLATE NOCASE))<=((t1.c55, HEX(t1.c55), vt0.c0 COLLATE NOCASE))), ((((((vt0.c0) IS FALSE))OR(((t1.c32) IS TRUE))))AND(((((t1.c55)AND(vt0.c0)))AND(vt0.c0)))) FROM vt0;SELECT DISTINCT NTH_VALUE(LIKELY(((t1.c55)<>(t1.c55))), (- (((vt0.c0)>(t1.c55))))) OVER () FROM t1, vt0 WHERE (LIKELIHOOD(((NULL)==('')), 0.9406331654106699)); -- 0ms;
SELECT ALL CASE WHEN CAST(t1.c32 AS BLOB) THEN LOWER(t1.c55) WHEN ((t1.c32) IS TRUE) THEN ((t1.c55) NOT NULL) WHEN ((t1.c32)=(t1.c32)) THEN SUM(vt0.c0) WHEN (+ (t1.c32)) THEN '-610483154' WHEN ((t1.c32) NOT NULL) THEN t1.c32 COLLATE NOCASE ELSE MAX(t1.c55) END, (((((((688317475)OR(t1.c32)))OR(t1.c32))))>(((t1.c55 IN ())))), ((((((t1.c55)OR(t1.c32)))OR(t1.c55)))|(COUNT(*))) FROM vt0 LIMIT 2113221778 OFFSET 1177241272;SELECT DISTINCT 0xffffffffbb811a66, t1.c32, GROUP_CONCAT((((vt0.c0, t1.c55, vt0.c0)) BETWEEN ((t1.c32, vt0.c0, t1.c55)) AND ((t1.c55, x'', t1.c32)))) FROM t1, vt0 WHERE ('749065881') ORDER BY (~ (((((t1.c32)AND(t1.c55)))OR(vt0.c0)))), CASE WHEN 0xffffffff80a3af49 THEN 0.35591660787156987 WHEN vt0.c0 COLLATE RTRIM THEN (((t1.c32))>=(('-816701195'))) WHEN ((t1.c32) BETWEEN (t1.c55) AND (t1.c55)) THEN ((t1.c55)LIKE(t1.c32)) END DESC; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) IS TRUE) FROM vt0 NOT INDEXED; -- 0ms;
SELECT CASE WHEN CAST(vt0.c0 AS NUMERIC) THEN ((((vt0.c0)AND(t1.c32)))AND(t1.c55)) ELSE ((t1.c55)!=(vt0.c0)) END, (('-1280695806')IS NOT(t1.c32 COLLATE RTRIM)), GROUP_CONCAT(((t1.c32)>>(t1.c32))) OVER (), ((CAST(t1.c32 AS BLOB)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((((((((((((t1.c55)AND(vt0.c0)))AND(t1.c55)))AND(vt0.c0)))AND(vt0.c0)))AND(3.20743502E8)))AND(vt0.c0)))), (((CASE vt0.c0  WHEN t1.c55 THEN vt0.c0 ELSE vt0.c0 END))<>((SUM(x'')))) FROM vt0 ORDER BY LIKELY(DISTINCT CAST(t1.c55 AS REAL));SELECT DISTINCT UPPER(DISTINCT (((t1.c55)) BETWEEN ((1991860958)) AND ((vt0.c0)))) FROM t1, vt0; -- 0ms;
SELECT ALL (((((t1.c55)<>(t1.c32)), ((t1.c32) BETWEEN (t1.c55) AND (t1.c55)), CASE t1.c32  WHEN vt0.c0 THEN t1.c55 WHEN t1.c32 THEN vt0.c0 WHEN vt0.c0 THEN t1.c32 ELSE t1.c55 END))<=((vt0.c0, CASE t1.c55  WHEN t1.c55 THEN t1.c32 END, ((0.7436450284346048) NOT BETWEEN (vt0.c0) AND (t1.c55))))), 'Kv', CAST(TOTAL(vt0.c0) AS INTEGER), CASE ((((t1.c32)OR(t1.c55)))OR(vt0.c0))  WHEN ((t1.c32)IS(vt0.c0)) THEN NULL ELSE ((((((((t1.c55)OR(vt0.c0)))OR(t1.c32)))AND(vt0.c0)))OR(t1.c32)) END, ((vt0.c0) ISNULL) COLLATE BINARY COLLATE RTRIM FROM vt0, t1 WHERE ((NOT (((0.912317494314064)||('d>o'))))); -- 0ms;
SELECT ALL COUNT(*) FROM t1, vt0 WHERE (((((((((((0.6714143593807587)AND(NULL)))OR('')))OR(NULL)))OR(NULL)))|(x'8058' COLLATE NOCASE))) LIMIT 1827236401; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0; -- 1ms;
SELECT ALL (((((NULL)AND(vt0.c0)))OR(t1.c32)) IN ()) FROM t1, vt0; -- 0ms;
SELECT ((COUNT(vt0.c0)) NOT BETWEEN (MIN(vt0.c0)) AND ((((',<'))<>((t1.c55))))) FROM t1, vt0; -- 0ms;
SELECT ((t1.c32 COLLATE BINARY)>((t1.c55 IN ()))) FROM t1, vt0; -- 0ms;
SELECT NTILE(CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t1.c32 END THEN CAST(t1.c55 AS TEXT) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) END) OVER () FROM vt0, t1; -- 0ms;
SELECT x'', ((CASE t1.c32  WHEN t1.c55 THEN x'a74c' END) BETWEEN (((t1.c32)>(vt0.c0))) AND (((t1.c55) BETWEEN (NULL) AND ('41041862')))), ((vt0.c0 COLLATE NOCASE) BETWEEN (MAX(t1.c32)) AND ((t1.c55 IN (t1.c55)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c55)|(t1.c55)))|(((t1.c32)-(t1.c55)))), ((((vt0.c0) ISNULL)) BETWEEN (CAST(t1.c55 AS REAL)) AND (((t1.c55) IS FALSE))), ((t1.c32) NOT BETWEEN ((NOT (t1.c55))) AND (GROUP_CONCAT(vt0.c0))) FROM t1, vt0 WHERE (0.26467885898373256) GROUP BY (((~ (vt0.c0)))||('1014027239')) HAVING ((((t1.c32)*(vt0.c0))) NOT NULL); -- 3ms;
SELECT DISTINCT ((((((NULL) NOT BETWEEN (t1.c55) AND (t1.c32)))OR((((t1.c32))>((t1.c32))))))AND((((t1.c32)) BETWEEN ((0.7959868506533377)) AND ((t1.c32))))) FROM vt0, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((NULL)<<(vt0.c0)))==(TOTAL(t1.c55))), (((~ (t1.c32)))&(((vt0.c0) NOT NULL))), COUNT(*) OVER (), IFNULL(CAST(NULL AS REAL), QUOTE(vt0.c0)), (((t1.c55) IS TRUE) IN ()) FROM t1 WHERE (((((((NULL)OR(0X78c030c6)))OR(0.25020785301033166)))*(((((0.34550858164483633)OR('-58704473')))AND(0x4f59f9a4)))));SELECT ALL ((t1.c32 COLLATE NOCASE)LIKE(t1.c55)), CAST(((t1.c55) NOT BETWEEN (vt0.c0) AND (vt0.c0)) AS TEXT), ((((((((((vt0.c0)GLOB(NULL)))OR(((vt0.c0) BETWEEN (vt0.c0) AND (t1.c55)))))AND(vt0.c0)))AND((t1.c55 IN ()))))OR(CASE t1.c32  WHEN t1.c55 THEN t1.c32 WHEN vt0.c0 THEN t1.c55 WHEN t1.c55 THEN vt0.c0 ELSE t1.c32 END)), json_array(TRIM(DISTINCT t1.c32, vt0.c0), MIN(t1.c55)), x'', CASE WHEN (~ (t1.c32)) THEN json_type(t1.c32) END, (NOT (t1.c32 COLLATE NOCASE)) FROM t1;SELECT DISTINCT ((CAST(t1.c55 AS TEXT)) NOTNULL), (((((t1.c55)AND(t1.c32))))>((t1.c55))), t1.c55 FROM vt0 WHERE (((CASE WHEN x'' THEN x'' WHEN '' THEN -447057261 WHEN NULL THEN '' ELSE NULL END) IS TRUE));SELECT -1138808531, ((AVG(vt0.c0)) NOT NULL), (((vt0.c0 IN ())) ISNULL), ((((CAST(t1.c32 AS TEXT))AND((t1.c32 IN ()))))AND(CAST(vt0.c0 AS TEXT))), CASE AVG(t1.c55)  WHEN t1.c32 COLLATE RTRIM THEN (NOT (t1.c55)) WHEN MIN(vt0.c0) THEN (~ (229053013)) WHEN (NOT (t1.c55)) THEN ((x'') NOT BETWEEN (t1.c55) AND (vt0.c0)) END FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((t1.c55) IS FALSE)) BETWEEN (((vt0.c0)>(t1.c32))) AND ((('-221322002') IS FALSE))) FROM vt0, t1; -- 0ms;
SELECT ALL SUM(LIKELY(t1.c55)) FROM vt0 WHERE (CAST(((862902786) NOT BETWEEN (x'') AND (NULL)) AS TEXT)) GROUP BY ((((((t1.c32)|(t1.c55)))AND(t1.c55)))OR(LIKELY(DISTINCT 0.9991116301191932))) LIMIT -1231715127 OFFSET -1475839692;SELECT ALL COUNT(MIN(TRIM(t1.c55))) FROM t1, vt0;SELECT ALL CAST(((t1.c32)|(t1.c55)) AS BLOB) FROM t1 WHERE ((NOT (0xffffffffdc8546dc))); -- 0ms;
SELECT ((CAST(vt0.c0 AS NUMERIC))-(AVG(t1.c32))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)AND(t1.c55)))OR(t1.c32)))AND(t1.c32)))AND(t1.c32))) ISNULL) FROM vt0, t1 WHERE ((- ((('K啕])')%(1.937225099E9))))) LIMIT -269888395; -- 0ms;
SELECT ((((+ (t1.c55))))>=((vt0.c0 COLLATE RTRIM))), NULL, CASE WHEN t1.c55 THEN COALESCE(t1.c32, vt0.c0) END FROM vt0, t1; -- 0ms;
SELECT ((((vt0.c0) BETWEEN (t1.c32) AND (vt0.c0)))<(LIKELY(DISTINCT vt0.c0))) FROM vt0, t1; -- 0ms;
SELECT (((t1.c32)>(t1.c32)) IN ((vt0.c0 IN (vt0.c0)), (NOT (vt0.c0)))) FROM vt0 WHERE (((((((((((0.8368342769287306)AND('-675113713')))OR(x'8c143af5')))AND(x'')))OR(NULL)))%(((0x187336f7) IS FALSE))));SELECT ((((vt0.c0) IS TRUE))-(CAST(vt0.c0 AS REAL))) FROM vt0, t1 WHERE ((- (((x'7568') BETWEEN ('{P萱P') AND (8.2896432E8))))); -- 1ms;
SELECT DISTINCT '-63103770' FROM vt0, t1; -- 0ms;
SELECT ((t1.c55 COLLATE BINARY)IS NOT(CASE vt0.c0  WHEN t1.c55 THEN vt0.c0 ELSE t1.c32 END)) FROM vt0 WHERE (PRINTF(((NULL)GLOB('8 Y,3*b'))));SELECT (((t1.c32)) BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((''))) FROM vt0, t1 WHERE (HEX(DISTINCT ((((NULL)AND('sG')))AND(0Xfffffffff46d6760)))) GROUP BY 495247181;SELECT (((((('1429808822') IS FALSE))AND(CAST(t1.c32 AS BLOB))))AND(t1.c55)), CASE CASE WHEN vt0.c0 THEN t1.c32 ELSE '2067899558' END  WHEN ((vt0.c0)==(vt0.c0)) THEN (0.471049492920513 IN (t1.c32)) ELSE t1.c55 END, AVG(x'03eb') FROM t1, vt0 WHERE ((NOT (''))); -- 0ms;
SELECT ALL CASE WHEN ((((((((vt0.c0)AND(t1.c32)))OR(vt0.c0)))AND(vt0.c0)))OR(0.9397614544849913)) THEN t1.c55 COLLATE BINARY END FROM vt0 WHERE ('1908002372' COLLATE RTRIM) ORDER BY CAST(CAST(vt0.c0 AS TEXT) AS BLOB)  NULLS LAST;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 ORDER BY ((((t1.c55) BETWEEN (t1.c55) AND (vt0.c0)))||(CAST(t1.c32 AS INTEGER)))  NULLS FIRST;SELECT COUNT(((t1.c32)>(t1.c32))) FROM t1 WHERE ((((((')w꼌拞<S') IS TRUE), (((('-574481015')AND(0.9191094097387512)))OR(0.3465606714308409)), 0.2862980777110702 COLLATE BINARY))=((-1143118403 COLLATE BINARY, (((0.9085262049822234, '0.9302705060480513', 8.10099793E8)) NOT BETWEEN ((0.8176986893323537, '^T5^퉣ꠙ觕', x'')) AND ((0.19497539351866378, '603927831', x''))), CASE NULL  WHEN x'' THEN 0.0403656231580084 ELSE x'' END)))); -- 0ms;
SELECT ((((t1.c55)<(vt0.c0))) NOT NULL) FROM t1, vt0 WHERE (((((((((CAST(x'' AS INTEGER))AND(IFNULL(NULL, NULL))))AND(CAST(x'' AS REAL))))OR(((NULL) NOTNULL))))AND((((-3.1471089E8)) NOT BETWEEN ((x'')) AND ((NULL)))))) LIMIT -40492523; -- 1ms;
SELECT ALL CASE WHEN ((t1.c55) BETWEEN (t1.c32) AND (vt0.c0)) THEN MIN(vt0.c0) WHEN t1.c32 COLLATE BINARY THEN ((t1.c32) NOT BETWEEN (t1.c55) AND (t1.c55)) WHEN vt0.c0 THEN CAST(vt0.c0 AS INTEGER) ELSE (('1800641448') IS FALSE) END FROM t1 WHERE (CASE CASE WHEN 'k8|e' THEN x'' ELSE NULL END  WHEN ((((x'f28f')OR(0.7455856028435085)))OR(NULL)) THEN CAST(NULL AS TEXT) WHEN NULL THEN LTRIM(x'', NULL) WHEN CASE ''  WHEN '-296629438' THEN 0Xffffffff80a3af49 WHEN 0.35048438262614257 THEN '495247181' WHEN '<퓁o' THEN '' END THEN (0.21689457179187277 IN ('-1664021476', '0.21689457179187277')) ELSE (x'' IN ()) END);SELECT DISTINCT RANK() OVER (), ((vt0.c0) ISNULL), ((MAX(t1.c32, x''))>((((t1.c55))!=((t1.c32))))) FROM t1 WHERE (((((NULL)OR('-57763047' COLLATE BINARY)))AND((NOT (x'')))));SELECT ((((((((0.6099569782018193)AND(((t1.c55) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((t1.c55)>(t1.c55)))))AND(-2.69888395E8)))OR(CAST(t1.c32 AS NUMERIC))) FROM vt0;SELECT GROUP_CONCAT(CAST(vt0.c0 AS NUMERIC)) OVER () FROM vt0 WHERE (((NULL)LIKE((((x'', 0.09380935749684471, 'b4}f摑I\}G'))>=((x'', '-269888395', NULL)))))) LIMIT -1636556482 OFFSET 778025804; -- 0ms;
SELECT DISTINCT ((((TRIM('~G	y', vt0.c0))AND(CAST(t1.c32 AS NUMERIC))))AND(x'')) FROM t1;SELECT ALL ((MAX(vt0.c0))>(((((((((vt0.c0)OR(t1.c32)))OR(t1.c55)))OR(t1.c55)))OR(t1.c32)))) FROM t1;SELECT (((t1.c32)) NOT BETWEEN ((NULL)) AND ((((t1.c55)IS(t1.c55))))) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c55) BETWEEN (vt0.c0) AND (t1.c55)))OR(((((vt0.c0)OR(t1.c55)))AND(t1.c32)))) FROM t1, vt0 WHERE ((((('-933652685')!=(4.1041862E7)))==(CASE 2.129874542E9  WHEN x'' THEN '0.6372961154714522' ELSE x'' END))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t1; -- 0ms;
SELECT ALL (vt0.c0 IN ()) FROM vt0; -- 1ms;
SELECT ALL ((t1.c55) NOT BETWEEN (vt0.c0) AND (t1.c55)) COLLATE BINARY FROM t1, vt0 WHERE (NULL); -- 0ms;
SELECT ALL MAX(((t1.c55)&(t1.c55)), IFNULL(DISTINCT t1.c55, t1.c32)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, t1; -- 1ms;
SELECT DISTINCT CAST((- (t1.c32)) AS BLOB) FROM t1, vt0; -- 0ms;
SELECT (CAST(t1.c55 AS BLOB) IN ()) FROM vt0, t1 WHERE (((CASE WHEN '' THEN NULL END)IS(TYPEOF(DISTINCT '')))) GROUP BY t1.c32 COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((COUNT(t1.c55))/((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c55))))) FROM t1, vt0 GROUP BY CASE WHEN UNLIKELY(DISTINCT t1.c55) THEN t1.c32 COLLATE NOCASE WHEN x'' THEN ((vt0.c0) NOT BETWEEN (t1.c55) AND (t1.c32)) WHEN ((t1.c55)*(t1.c32)) THEN CASE WHEN 0.9755137306531477 THEN t1.c32 END ELSE load_extension(vt0.c0, t1.c32) END, ((((t1.c55)-(t1.c55)))*((((t1.c32))!=((vt0.c0))))), UPPER(DISTINCT ((vt0.c0) BETWEEN (t1.c55) AND (t1.c32))) HAVING LOWER(DISTINCT (~ (t1.c55))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c0 AS INTEGER) THEN ((vt0.c0) NOTNULL) END FROM t1 WHERE (LIKELY(((x'199e531c')<=(1.582318008E9)))) ORDER BY ((((CAST(vt0.c0 AS TEXT))OR(CASE WHEN t1.c55 THEN t1.c55 END)))AND(((((t1.c32)OR(t1.c32)))OR(t1.c32))));SELECT DISTINCT CHAR(((((t1.c55)AND(t1.c32)))AND(t1.c32)), ((t1.c55) BETWEEN (vt0.c0) AND (t1.c55)), ((t1.c55)||(t1.c55))) FROM t1, vt0 WHERE (((CAST('pԥ(\n' AS NUMERIC)) BETWEEN (((0x48fa0e92) NOT NULL)) AND (NULL))); -- 1ms;
SELECT ((vt0.c0) NOT BETWEEN (AVG(0.6625863416676862)) AND (((t1.c32)>=(t1.c32)))), (NOT (((((t1.c32)OR(t1.c32)))AND(vt0.c0)))), (+ ((('810099793')IS(t1.c55)))) FROM vt0, t1 WHERE ((+ ((- (x''))))) GROUP BY ((((NULL)AND(((0x2561915c) BETWEEN (t1.c32) AND (x'')))))OR(((vt0.c0)&(vt0.c0)))), ((t1.c32) IS FALSE), ((((x'5df5')AND(x'61e5')))OR(((t1.c55) BETWEEN (vt0.c0) AND (t1.c32)))) HAVING GROUP_CONCAT((t1.c32 IN ())); -- 0ms;
SELECT DISTINCT (~ (CASE WHEN vt0.c0 THEN t1.c32 END)) FROM vt0, t1 WHERE (CASE WHEN '1657050320' COLLATE NOCASE THEN (((NULL))==((x'5124'))) ELSE 0.15686837610341076 END); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (((t1.c55, 0.8566089313559473, vt0.c0)) BETWEEN ((vt0.c0, NULL, vt0.c0)) AND ((t1.c55, t1.c32, t1.c55)))) FROM t1, vt0; -- 0ms;
SELECT (((t1.c32, t1.c55, t1.c55)) BETWEEN ((COUNT(t1.c55), t1.c32 COLLATE RTRIM, IFNULL(vt0.c0, vt0.c0))) AND ((((((t1.c32)OR(vt0.c0)))AND(t1.c55)), t1.c32 COLLATE NOCASE, (((t1.c32, t1.c32, t1.c55, vt0.c0, vt0.c0)) NOT BETWEEN ((t1.c55, 'l+', t1.c32, t1.c32, t1.c55)) AND ((t1.c55, x'fbf9', t1.c55, t1.c32, t1.c55)))))), (+ (((t1.c55) NOT BETWEEN (0.252517132333959) AND (vt0.c0)))), CAST(((((t1.c55)OR(t1.c55)))OR(vt0.c0)) AS INTEGER) FROM t1 WHERE ((((((NULL IN (x'3af3', 0.4511623493254705)))OR(CAST(0Xda71255 AS INTEGER))))OR(((0.334125083566018) ISNULL))));SELECT DISTINCT t1.c32 FROM t1 WHERE ((((NULL) NOT BETWEEN (0Xffffffffe6db6451) AND (x'')) IN ())) GROUP BY (((((t1.c32)) NOT BETWEEN ((t1.c32)) AND ((x''))))>>((t1.c55 IN (t1.c55, t1.c55)))); -- 1ms;
SELECT DISTINCT (((((vt0.c0))<((t1.c55))))-(CASE vt0.c0  WHEN vt0.c0 THEN t1.c55 ELSE t1.c32 END)) FROM vt0 WHERE (((((0X7ef34e6e)%(NULL))) NOT BETWEEN ((NOT (0x27890f64))) AND (((x'd3f77e09') BETWEEN (x'') AND ('&\r')))));SELECT ALL (~ (LIKELIHOOD(vt0.c0, 0.06317230550194153))) FROM vt0; -- 0ms;
SELECT DISTINCT (((t1.c55, t1.c55, t1.c32)) BETWEEN (((t1.c55 IN ()), ((vt0.c0)|(t1.c55)), ((vt0.c0)OR(NULL)))) AND (((NOT (vt0.c0)), TOTAL(t1.c55), (t1.c32 IN (t1.c32, t1.c32))))) FROM vt0, t1 WHERE (NULL); -- 0ms;
SELECT ALL NULL, CASE WHEN t1.c55 THEN ((t1.c32) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN COUNT(*) THEN ((((t1.c55)AND(vt0.c0)))AND(t1.c32)) WHEN ((t1.c55)>>(t1.c32)) THEN (t1.c32 IN (t1.c55)) WHEN COALESCE(t1.c32, vt0.c0, t1.c55, t1.c55, t1.c32, t1.c32) THEN 0.1751219041795361 WHEN CASE WHEN vt0.c0 THEN vt0.c0 WHEN t1.c55 THEN t1.c55 WHEN t1.c55 THEN t1.c32 ELSE vt0.c0 END THEN ((vt0.c0)=(t1.c32)) ELSE (('\r!|NsX')<=(vt0.c0)) END, CASE (- (vt0.c0))  WHEN ((t1.c55) BETWEEN (t1.c32) AND (t1.c32)) THEN (t1.c32 IN ()) END FROM vt0 WHERE ((((('' COLLATE NOCASE)AND((0.0 IN ()))))AND(x'f3eb' COLLATE RTRIM)));SELECT ALL ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c55))) NOT BETWEEN (((((((((t1.c55)OR(t1.c55)))OR(t1.c55)))AND(NULL)))AND(t1.c32))) AND (0.9721032232729161)) FROM t1 WHERE ((((('466497858')IS NOT(x'')))&(0xffffffffba95ac8a COLLATE RTRIM))) LIMIT -1730268731 OFFSET -616636828;SELECT ALL (+ (((vt0.c0) IS TRUE))) FROM t1 LIMIT 1606101233 OFFSET -1921245633;SELECT ALL MIN(x'22f9e315') COLLATE RTRIM, ('-1730268731' COLLATE NOCASE IN (((t1.c32)>(t1.c32)))), (((t1.c55)) NOT BETWEEN ((COUNT(t1.c55))) AND (((~ (t1.c55))))), GROUP_CONCAT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c55))) OVER (), ((((t1.c55 COLLATE BINARY)OR(AVG(t1.c55))))AND(CASE t1.c32  WHEN t1.c32 THEN vt0.c0 WHEN 'so!OA|C12' THEN t1.c55 WHEN t1.c55 THEN t1.c55 END)) FROM t1, vt0 WHERE ((NULL IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((((t1.c55, t1.c32, vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((t1.c55, t1.c32, t1.c32, t1.c55, vt0.c0)) AND ((NULL, t1.c32, t1.c55, vt0.c0, t1.c32)))) NOT NULL), json_remove(((t1.c32)<(vt0.c0)), json_array_length(t1.c32, vt0.c0)), MAX(CAST(vt0.c0 AS REAL)) FROM t1 WHERE (CASE ((('2673077'))>(('EV^鲐K3r')))  WHEN ((NULL)-(0xffffffff9bd7de75)) THEN '2.?''Ocg,' COLLATE NOCASE WHEN (('-421829551')*('-685958975')) THEN (NULL IN ()) WHEN (('1818744010')>(x'')) THEN NULLIF(DISTINCT 0.014780505208407346, '-700567860') END);SELECT DISTINCT (((((t1.c32)) NOT BETWEEN (('q0Cx')) AND ((vt0.c0))))IS NOT((((t1.c55))=((t1.c32))))), (- (((t1.c32) NOTNULL))), (((vt0.c0)) BETWEEN ((CASE WHEN t1.c32 THEN t1.c32 ELSE vt0.c0 END)) AND ((t1.c55 COLLATE NOCASE))) FROM t1 WHERE (0.04869914543851339) GROUP BY ((t1.c55)+(vt0.c0)) COLLATE BINARY, CAST((((vt0.c0)) BETWEEN ((t1.c32)) AND ((t1.c55))) AS BLOB), ((- (vt0.c0)) IN (CASE WHEN vt0.c0 THEN t1.c55 WHEN 0.9506612658959502 THEN vt0.c0 WHEN vt0.c0 THEN t1.c32 ELSE t1.c55 END));SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((t1.c55)) AND ((CASE t1.c32  WHEN '-165166548' THEN t1.c55 ELSE x'' END))) FROM vt0;SELECT DISTINCT ((t1.c55) NOT BETWEEN ((t1.c32 IN ())) AND (MIN(t1.c32))) FROM t1 GROUP BY t1.c32, (- (0.9235779084710297)), t1.c55, -810306405 COLLATE RTRIM, (((t1.c32, '', vt0.c0)) BETWEEN (('560161431', ((vt0.c0)|(t1.c55)), t1.c55)) AND ((((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)), CAST(t1.c55 AS BLOB), CASE vt0.c0  WHEN t1.c55 THEN t1.c32 ELSE t1.c55 END)));SELECT TOTAL(CASE vt0.c0  WHEN t1.c55 THEN t1.c55 ELSE t1.c32 END) OVER (), CAST((NOT (t1.c32)) AS TEXT), CAST(((vt0.c0) IS FALSE) AS INTEGER) FROM t1;SELECT DISTINCT CASE CASE t1.c55  WHEN t1.c32 THEN t1.c32 ELSE vt0.c0 END  WHEN t1.c55 COLLATE BINARY THEN ((vt0.c0)>>(vt0.c0)) END FROM t1 INNER JOIN vt0 ON ((CAST(vt0.c0 AS TEXT))GLOB(((((t1.c55)AND(t1.c32)))OR(t1.c32)))) WHERE ((NOT (x'b301' COLLATE RTRIM))) GROUP BY 0.9857427958551713, NULL, CAST(ABS(t1.c55) AS BLOB) HAVING (((t1.c32 IN ()))>(COUNT(*))); -- 0ms;
SELECT ALL 0xffffffffc445b007 FROM t1, vt0 WHERE (((CAST(NULL AS TEXT)) NOTNULL)); -- 0ms;
SELECT (~ ((vt0.c0 IN (vt0.c0, t1.c32)))), json_array_length(t1.c55, SUM(t1.c32)), -1.951931009E9 FROM vt0 WHERE (((((('ogZi_'))>=((NULL)))) BETWEEN (((((NULL)OR(-5.7096029E8)))AND(x'0df01114'))) AND (CASE x'e342'  WHEN 'Y6180080913165490925T1255 -1083817979059461983T-1957884985429488878:*d*' THEN 0.6264789312182457 ELSE 0.18018664245241434 END)));SELECT DISTINCT (t1.c32 COLLATE NOCASE IN (((t1.c55) IS FALSE), (21223091 IN ()))), CASE (((t1.c55)) BETWEEN ((vt0.c0)) AND ((t1.c55)))  WHEN TOTAL(vt0.c0) THEN (((vt0.c0)) BETWEEN ((t1.c55)) AND ((vt0.c0))) END, MIN(((vt0.c0)|(t1.c32))) FROM vt0, t1; -- 1ms;
SELECT x'', IFNULL(DISTINCT ((((t1.c32)AND(vt0.c0)))OR(vt0.c0)), ((((((((t1.c32)AND(t1.c55)))AND(vt0.c0)))AND(t1.c32)))OR(t1.c32))), 0.5103230196868086 FROM vt0 WHERE ((CASE WHEN NULL THEN 0.13459401809583316 WHEN '810099793' THEN x'0bcf' WHEN '-79890840' THEN NULL END IN ())) LIMIT -1993697409;SELECT t1.c32 FROM t1, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN t1.c55 THEN vt0.c0 WHEN vt0.c0 THEN t1.c55 WHEN t1.c32 THEN 0X7d7bbd93 WHEN t1.c55 THEN t1.c32 WHEN vt0.c0 THEN t1.c55 ELSE t1.c55 END COLLATE BINARY FROM t1 WHERE (((-296629438) NOT NULL));SELECT ((((((((NULL)AND(CAST(vt0.c0 AS TEXT))))OR(((((t1.c32)OR(vt0.c0)))AND(vt0.c0)))))OR(AVG(vt0.c0))))OR((((t1.c32))<=((t1.c32))))) FROM t1;SELECT DISTINCT ((t1.c32) ISNULL) COLLATE RTRIM FROM vt0, t1 WHERE (((CASE ' ,m*{*㇅Z'  WHEN 0Xffffffffe6234c4f THEN '' WHEN 0.8490819982116025 THEN -1.933073853E9 WHEN NULL THEN x'87d5' END)%(json_insert('\nqc', NULL, '-94537264'))));SELECT DISTINCT ((CASE vt0.c0  WHEN t1.c32 THEN t1.c32 ELSE t1.c32 END)GLOB(COUNT(*))) FROM t1 WHERE ((((x'', x'fe87ed8c', x'')) BETWEEN ((('' IN ()), (('')<=(NULL)), (('fU6\n')=(4.16508502E8)))) AND ((CASE WHEN 0.9210939422659548 THEN 2025279998 END, MAX('RO?,', 0.38760628375910366), CASE 0Xffffffff8dccc806  WHEN 0.9234777602629871 THEN x'' END))));SELECT ALL ((TOTAL(t1.c32))IS NOT(((((vt0.c0)OR(t1.c55)))OR(t1.c32)))) FROM t1, vt0 WHERE (((((x'5862')OR(0.7911624340792465)))OR(-1522561347)) COLLATE RTRIM) GROUP BY ((((vt0.c0) NOT BETWEEN (t1.c55) AND (t1.c55))) IS TRUE), t1.c55, ((t1.c32 IN ()) IN ()) HAVING (CAST(t1.c55 AS REAL) IN ()); -- 0ms;
SELECT ((((t1.c55) NOT BETWEEN (t1.c32) AND ('0)g-'))) NOT NULL) FROM vt0 WHERE (UNLIKELY(((5.31582227E8)IS NOT(NULL))));SELECT ALL CAST(x'' AS BLOB) COLLATE NOCASE, (('2089739720') NOT BETWEEN ((t1.c55 IN ())) AND (-1770111897)), ((((((((t1.c32)OR(TRIM(DISTINCT t1.c32))))OR((((t1.c55)) BETWEEN ((t1.c32)) AND ((t1.c32))))))AND((- (t1.c55)))))AND(((vt0.c0)-(0.5491853974767646)))) FROM vt0;SELECT DISTINCT PRINTF(CASE t1.c32  WHEN vt0.c0 THEN NULL ELSE t1.c32 END) FROM vt0;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, t1 WHERE ((((+ ('paf'))) NOT BETWEEN ((('-994740659')>=(-1.462589512E9))) AND (0.6377006912155013 COLLATE NOCASE))); -- 0ms;
SELECT (((x'')%(t1.c55)) IN (CAST(t1.c32 AS INTEGER), (- ('229053013')))), NULLIF(DISTINCT ABS(x'24f4'), HEX(t1.c55)), t1.c55 FROM vt0, t1 LIMIT -700567860; -- 0ms;
SELECT DISTINCT ((((x'')AND(CASE t1.c55  WHEN NULL THEN t1.c55 END)))AND((((NULL))<((vt0.c0))))), (((((t1.c32, t1.c32, vt0.c0))<((t1.c55, t1.c32, t1.c32))))&(t1.c55 COLLATE RTRIM)), NTH_VALUE(vt0.c0, ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) COLLATE BINARY) OVER () FROM vt0;SELECT DISTINCT t1.c32 FROM vt0 WHERE (((((((1894800976)/(0X244d3d3f)))AND(((x'23a4aad7')OR('L')))))OR(CAST(0Xffffffffdb9cc42e AS BLOB)))) ORDER BY (t1.c32 IN (1264917533))  NULLS FIRST;SELECT ALL CASE WHEN CAST(t1.c32 AS REAL) THEN ((t1.c32)GLOB(vt0.c0)) ELSE TOTAL(t1.c55) END, CAST((((vt0.c0)) NOT BETWEEN ((t1.c32)) AND ((t1.c55))) AS INTEGER), (((((((((('}u>r] N2')OR(t1.c32)))AND(t1.c32)))AND(vt0.c0)))AND(NULL)))IS(CAST(t1.c32 AS REAL))) FROM vt0, t1 WHERE ((((NULL, 0.10402756804557145, NULL)) NOT BETWEEN ((((((0.575152201133561)OR(0.2304631019452057)))OR('')), CASE WHEN NULL THEN NULL END, (1991860958 IN ()))) AND (('MJ0㴿l', CASE 324984230  WHEN 0.4421237583972977 THEN '' END, (+ (NULL)))))) ORDER BY IFNULL(DISTINCT vt0.c0, json_insert(t1.c32, '', t1.c32)); -- 0ms;
SELECT ALL (((t1.c55 IN ()))<((NOT (t1.c55)))) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c55)) BETWEEN ((t1.c32)) AND ((t1.c55))) THEN t1.c32 COLLATE RTRIM WHEN ((((((((vt0.c0)OR(vt0.c0)))OR(t1.c55)))OR(t1.c55)))OR(vt0.c0)) THEN ((t1.c55) NOTNULL) WHEN CASE WHEN t1.c32 THEN t1.c32 END THEN ((vt0.c0) NOT BETWEEN (t1.c32) AND (t1.c55)) END FROM t1, vt0; -- 0ms;
SELECT ((((t1.c55)*(t1.c55)))<<(((t1.c32) NOT BETWEEN (vt0.c0) AND (t1.c55)))) FROM t1, vt0; -- 1ms;
SELECT DISTINCT ((t1.c55) BETWEEN (CASE WHEN t1.c32 THEN t1.c55 END) AND (((((t1.c32)AND(vt0.c0)))AND(t1.c32)))) FROM vt0 NOT INDEXED, t1 ORDER BY ((((t1.c32)>=(t1.c55))) BETWEEN (LAST_INSERT_ROWID()) AND (((t1.c55) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) ASC; -- 0ms;
SELECT ALL '', ((CAST(t1.c32 AS INTEGER))||(LIKE(t1.c32, t1.c32))), (+ ((+ ('#3Ζ3P~EJ/')))) FROM vt0, t1; -- 0ms;
SELECT ALL '1559924505', CASE WHEN ((t1.c55) NOTNULL) THEN t1.c32 END, ((((((((((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)))AND(COUNT(*))))OR(CAST(vt0.c0 AS NUMERIC))))AND(((t1.c32)%(t1.c32)))))OR((t1.c55 IN ()))) FROM t1, vt0 GROUP BY CASE WHEN LIKELY(DISTINCT t1.c55) THEN ABS(t1.c32) END, ((((vt0.c0) NOT BETWEEN (t1.c55) AND (t1.c55))) BETWEEN (NULL) AND (t1.c32)), vt0.c0; -- 0ms;
SELECT DISTINCT ((((0.39773251155950473)OR(COUNT(*))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), TYPEOF(NULL), t1.c32 FROM vt0 UNION SELECT DISTINCT (((t1.c32, t1.c55, t1.c32)) NOT BETWEEN ((vt0.c0, t1.c32, '')) AND ((t1.c55, t1.c55, vt0.c0))) COLLATE BINARY, COUNT(CAST(0X20e7e01a AS INTEGER)) OVER (), CAST((t1.c32 IN (t1.c55, vt0.c0)) AS REAL) FROM vt0, t1 WHERE (CAST(((x'd046') NOT NULL) AS BLOB));SELECT DISTINCT ((x'') NOT NULL) FROM t1 GROUP BY ((((t1.c32)GLOB(t1.c55)))IS NOT(((t1.c55)/(t1.c32)))), CASE t1.c32 COLLATE BINARY  WHEN t1.c55 COLLATE RTRIM THEN ((((t1.c32)AND(vt0.c0)))AND(t1.c32)) WHEN 6.95031125E8 THEN COALESCE(t1.c55, t1.c32, t1.c55, t1.c55) WHEN CAST(x'' AS BLOB) THEN LOWER(DISTINCT t1.c55) END, vt0.c0;SELECT DISTINCT CAST(((vt0.c0)>>(vt0.c0)) AS BLOB), ((CASE t1.c55  WHEN t1.c55 THEN vt0.c0 END) BETWEEN (x'') AND (CASE WHEN t1.c55 THEN t1.c55 END)), (((t1.c55))<((t1.c32))) COLLATE NOCASE FROM t1 WHERE ('-1522162934') GROUP BY vt0.c0;SELECT ALL (+ (IFNULL(t1.c32, t1.c32))), AVG(((0xffffffffeba575c5) BETWEEN (vt0.c0) AND (NULL))) OVER (), (((((NULL)&(t1.c32))))=((((NULL) ISNULL)))) FROM vt0;SELECT (((((t1.c55)) NOT BETWEEN ((vt0.c0)) AND (('dh')))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c32))) AND (0x1eee4030)), AVG(((t1.c32) BETWEEN (vt0.c0) AND (t1.c32))) OVER ( RANGE (- (((((vt0.c0)AND('1946577912')))OR(0Xffffffffccffe298)))) PRECEDING), ((SUM(t1.c55))&(((t1.c32) BETWEEN (t1.c32) AND (t1.c55)))) FROM vt0, t1 WHERE (((('*#')-('0.8868911606254088')) IN ()));SELECT DISTINCT ((vt0.c0)*(t1.c55)) COLLATE BINARY, (((((((((vt0.c0 IN (vt0.c0)))AND(((t1.c32)%(t1.c55)))))AND(((((((((t1.c55)AND(vt0.c0)))AND(0.2941551651137305)))OR(t1.c32)))AND(vt0.c0)))))AND(((t1.c55) NOTNULL))))OR(((t1.c32) IS TRUE))), TOTAL((((x''))=((vt0.c0)))) OVER () FROM vt0, t1 ORDER BY (~ (((t1.c32)*(t1.c55)))); -- 0ms;
SELECT DISTINCT (((NOT (NULL))) IS TRUE) FROM vt0, t1; -- 0ms;
SELECT ALL ('-118753225' IN (-1146168863)) FROM t1; -- 1ms;
SELECT DISTINCT CASE WHEN x'' THEN -9.94740659E8 ELSE COUNT(t1.c32) END FROM t1 WHERE (-3.1471089E8); -- 0ms;
SELECT DISTINCT CASE ((t1.c32)OR(vt0.c0))  WHEN UPPER(t1.c32) THEN (vt0.c0 IN ()) ELSE (- (t1.c32)) END FROM t1 WHERE ((('c\n' COLLATE RTRIM)<=(((((x'a640')OR(-195910629)))AND(NULL)))));SELECT DISTINCT 1.991860958E9 COLLATE BINARY, ((((t1.c32)+(t1.c55)))<=(((t1.c32) NOTNULL))), CAST(CAST(t1.c55 AS TEXT) AS REAL) FROM vt0;SELECT DISTINCT MAX('') FROM vt0, t1 WHERE (json_quote(('|bu붓!PQ' IN (NULL)))); -- 0ms;
SELECT ALL MAX(CASE t1.c55  WHEN 0.5650033824638585 THEN 0.2822327971452253 END) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((t1.c55)LIKE(CASE WHEN t1.c55 THEN t1.c32 WHEN t1.c55 THEN t1.c55 WHEN t1.c32 THEN vt0.c0 ELSE t1.c55 END)) FROM t1 WHERE (CAST(x'' AS INTEGER) COLLATE NOCASE);SELECT ALL (((vt0.c0)LIKE(vt0.c0)) IN ()) FROM vt0, t1 WHERE (((((-1172278553)IS('[*yUw2Zg')))||(json_remove(NULL, 'l', NULL, -1390281137)))); -- 1ms;
SELECT ALL COUNT(((t1.c55)<<(t1.c32))) FROM vt0 GROUP BY ((((CASE vt0.c0  WHEN t1.c55 THEN t1.c32 ELSE t1.c32 END)OR(t1.c32 COLLATE BINARY)))AND('')) HAVING ((t1.c55) NOT BETWEEN (t1.c32) AND (t1.c32)) COLLATE RTRIM;SELECT DISTINCT ((CASE t1.c32  WHEN vt0.c0 THEN t1.c32 END)<<(CAST(t1.c55 AS BLOB))) FROM vt0 WHERE ((((((NULL)) BETWEEN ((x'')) AND ((NULL)))) BETWEEN ('rG)*' COLLATE NOCASE) AND (((((NULL)OR(x'b237')))AND(NULL)))));SELECT DISTINCT (((- (t1.c55))) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (((((t1.c32)AND(vt0.c0)))OR(t1.c55)))) FROM t1;SELECT x'', ((((t1.c32)LIKE(vt0.c0)))*(NULL)), CASE TYPEOF(vt0.c0)  WHEN ((vt0.c0)-(t1.c55)) THEN ((t1.c32) NOT BETWEEN (t1.c32) AND (t1.c32)) ELSE vt0.c0 COLLATE NOCASE END FROM t1 FULL OUTER JOIN vt0 ON ((CAST(t1.c55 AS NUMERIC)) NOTNULL) WHERE ((CAST(NULL AS REAL) IN (LOWER(DISTINCT '9223372036854775807')))); -- 0ms;
SELECT DISTINCT NULL, (~ (CASE WHEN NULL THEN vt0.c0 WHEN t1.c55 THEN vt0.c0 WHEN t1.c55 THEN t1.c55 END)), ((JULIANDAY(t1.c55, vt0.c0, t1.c55))%(vt0.c0)) FROM t1, vt0 WHERE (((x'' COLLATE NOCASE)&(((x'') BETWEEN (NULL) AND (0.10522528807010478))))); -- 0ms;
SELECT COUNT(CASE WHEN t1.c55 THEN t1.c55 END) OVER () FROM vt0 WHERE (0xffffffff80c0035d);SELECT DISTINCT ((((vt0.c0)-(t1.c32))) NOT BETWEEN ((NOT (t1.c55))) AND (CASE t1.c55  WHEN t1.c32 THEN vt0.c0 WHEN x'16aa' THEN t1.c32 WHEN t1.c32 THEN t1.c55 END)) FROM t1 WHERE ((((CASE '+थnW]5Q?橖'  WHEN 0X23ff3517 THEN '1014027239' END, ((((x'49dd82e4')AND(NULL)))AND(x'82a4')), ((((((((NULL)AND('dF')))AND('0.2563534364540957')))OR('Ls_wMcNaNZw팵')))AND(x''))))<(((- (x'd9c9')), (((('653176098')AND(NULL)))AND('-1663707885')), CASE '-762527560'  WHEN x'' THEN x'' ELSE NULL END)))) ORDER BY (NOT ((t1.c55 IN ()))) ASC;SELECT ALL ((CAST(t1.c32 AS REAL))GLOB((t1.c32 IN ()))), t1.c55, (((((t1.c55)) NOT BETWEEN ((t1.c32)) AND ((vt0.c0)))) IS FALSE) FROM vt0, t1 ORDER BY (((((t1.c32, '&6', t1.c55))>((vt0.c0, t1.c55, vt0.c0)))) ISNULL) ASC  NULLS LAST, ((x'') BETWEEN ((NOT (t1.c32))) AND (CAST(t1.c55 AS INTEGER))) ASC  NULLS FIRST; -- 0ms;
SELECT UPPER(((t1.c32)IS NOT(t1.c32))), (((t1.c32) BETWEEN (t1.c32) AND (t1.c55)) IN ()), ((t1.c55) BETWEEN (((t1.c55)||(t1.c55))) AND (x'44a3')), TOTAL(UNLIKELY(vt0.c0)), ((TRIM(t1.c55)) NOT BETWEEN (COUNT(*)) AND ((- (0.5875143252909986)))) FROM t1 NOT INDEXED, vt0 WHERE (CASE ((NULL)>(x'0c86'))  WHEN ((0.1439046010655307) NOTNULL) THEN ((NULL)<>(NULL)) ELSE ((((0x3fe77ff4)OR(NULL)))AND(0.8020197156963114)) END); -- 0ms;
SELECT 0.08276409868624024 FROM vt0, t1 WHERE (''); -- 1ms;
SELECT ALL ((((vt0.c0)OR(((NULL)IS(t1.c32)))))AND(CASE WHEN t1.c55 THEN t1.c55 WHEN vt0.c0 THEN t1.c32 WHEN t1.c55 THEN vt0.c0 ELSE '' END)), ((vt0.c0)/(0.7693258837613997)), (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c55)))) NOT BETWEEN (((t1.c32) ISNULL)) AND (((t1.c55) NOTNULL))), (((vt0.c0)-(vt0.c0)) IN ()), IFNULL(DISTINCT COUNT(t1.c32), ((NULL) BETWEEN (t1.c55) AND (t1.c55))) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((((((((NULL)<>(vt0.c0)))AND(t1.c55)))AND(((t1.c32)LIKE(t1.c32)))))AND(t1.c55 COLLATE RTRIM)))AND(((((t1.c32)AND(t1.c32)))OR(t1.c32)))) FROM t1;SELECT DISTINCT (((NOT (t1.c32))) BETWEEN (UPPER(t1.c55)) AND (CASE t1.c32  WHEN vt0.c0 THEN t1.c55 ELSE t1.c32 END)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT LIKELY((+ (vt0.c0))), TOTAL(((t1.c55)+(t1.c32))) OVER (), (IFNULL(t1.c55, '') IN ()) FROM t1, vt0 WHERE ((- ((('()i/') NOT BETWEEN (NULL) AND ('687697184'))))) GROUP BY (((vt0.c0 IN (t1.c32)))IS NOT(NULL)); -- 0ms;
SELECT ALL CASE WHEN ((t1.c32) IS FALSE) THEN ((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)) WHEN (~ (t1.c55)) THEN ((t1.c32)OR(t1.c32)) WHEN vt0.c0 THEN CASE t1.c32  WHEN t1.c55 THEN NULL END END FROM vt0, t1; -- 0ms;
SELECT ALL t1.c55, SUM(((vt0.c0) NOTNULL)), ((((t1.c55) IS FALSE))%(json_array_length(t1.c55))) FROM vt0 WHERE ((((CAST(x'' AS BLOB)))==(((('0.8744579646459623')<=(x''))))));SELECT DISTINCT LIKELIHOOD(CAST(t1.c32 AS BLOB), 0.4335086165666221) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((vt0.c0)&(((x'')=(vt0.c0)))), CASE ((vt0.c0)%(x'1186cddb'))  WHEN (('1912276302')LIKE(vt0.c0)) THEN (t1.c55 IN ()) WHEN (t1.c32 IN (t1.c55, t1.c55)) THEN (+ (vt0.c0)) WHEN (((t1.c32))=((0.5368605140419236))) THEN ((t1.c32) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (NOT (t1.c55)) THEN NULLIF(DISTINCT vt0.c0, vt0.c0) WHEN AVG(t1.c55) THEN MAX(vt0.c0) ELSE (0.06371480770716076 IN ()) END, (('-1236979473') IS FALSE) COLLATE RTRIM, TOTAL(((t1.c32)IS(t1.c55))), (NOT (((t1.c32) NOT NULL))) FROM t1;SELECT DISTINCT (+ (CASE vt0.c0  WHEN t1.c55 THEN vt0.c0 ELSE t1.c32 END)), LEAD(((ABS(DISTINCT vt0.c0))||((((vt0.c0))=((vt0.c0))))), load_extension(((vt0.c0) ISNULL), 0.049366761985600416), CAST('1197467226' AS REAL)) OVER (), ABS(vt0.c0) FROM vt0;SELECT DISTINCT CASE t1.c32  WHEN ((t1.c32)<<(x'')) THEN ((t1.c32) BETWEEN (t1.c32) AND (t1.c55)) END FROM vt0 NOT INDEXED WHERE (((x'8c0a' COLLATE NOCASE)=('424723024' COLLATE RTRIM)));SELECT ALL SUM('') OVER () FROM t1, vt0 ORDER BY (((((+ (vt0.c0)))AND(((vt0.c0)<(t1.c55)))))AND(CAST(t1.c32 AS TEXT)))  NULLS FIRST, (('-1993697409')GLOB(((t1.c55) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT (((t1.c55)) NOT BETWEEN (((~ (x'')))) AND ((((vt0.c0)IS NOT(vt0.c0))))) FROM vt0 WHERE (((CAST('EV^鲐K3r' AS INTEGER)) IS TRUE));SELECT ((((t1.c55 IN (vt0.c0))))=((((vt0.c0)%(vt0.c0))))), MIN(((t1.c55) NOT BETWEEN (vt0.c0) AND (t1.c55)) COLLATE BINARY), AVG(((x'') NOTNULL)) FROM vt0, t1; -- 0ms;
SELECT DISTINCT AVG(((vt0.c0) ISNULL)) OVER ( PARTITION BY x'', CASE WHEN CAST(t1.c55 AS NUMERIC) THEN t1.c55 ELSE ((vt0.c0) NOT BETWEEN (t1.c55) AND (vt0.c0)) END), '-1830619873', ((t1.c55)%(((t1.c32) BETWEEN (t1.c32) AND (0.5962101562865141)))) FROM t1;SELECT t1.c32 FROM vt0, t1 WHERE ((((0.5168964875026509)/(NULL)) IN ())); -- 0ms;
SELECT ALL t1.c32, AVG((((vt0.c0, t1.c55, vt0.c0, t1.c55, t1.c32))<=((vt0.c0, t1.c32, vt0.c0, vt0.c0, t1.c55)))), ROW_NUMBER() OVER () FROM t1 LIMIT -686721668 OFFSET 88620017;SELECT AVG(((((t1.c32)AND(vt0.c0)))OR('810099793')) COLLATE RTRIM) OVER () FROM vt0;SELECT ALL ((((CAST(t1.c55 AS TEXT))OR(t1.c32 COLLATE NOCASE)))AND(((((t1.c32)OR(vt0.c0)))OR(t1.c32)))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT LAG(CASE t1.c55  WHEN ((t1.c55) IS TRUE) THEN NULL WHEN t1.c32 COLLATE RTRIM THEN CAST(NULL AS INTEGER) WHEN ((((((((t1.c32)AND(t1.c32)))OR(t1.c55)))AND(t1.c55)))OR(t1.c32)) THEN CAST(t1.c55 AS NUMERIC) END, (((((((t1.c55))==(('0.7077027584951967'))))OR(((t1.c32)<(0.49910786809884333)))))OR(((t1.c55) BETWEEN (t1.c32) AND (t1.c55)))), (~ (t1.c32 COLLATE BINARY))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT SUM(CASE WHEN t1.c55 THEN t1.c32 ELSE -949478208 END) OVER ( PARTITION BY TRIM(DISTINCT ((t1.c32) NOT NULL), NULL), ((t1.c32 COLLATE RTRIM)OR(NULL))) FROM t1, vt0 WHERE (('' COLLATE RTRIM IN ((('') IS TRUE)))) GROUP BY ((((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)))||(CASE t1.c32  WHEN t1.c32 THEN t1.c32 END)); -- 0ms;
SELECT DISTINCT ((ABS(t1.c32))|(MIN(t1.c32))), (('0.8470348624510475')*(t1.c55 COLLATE RTRIM)), (~ (((((((((vt0.c0)OR(t1.c32)))OR(t1.c55)))OR(t1.c32)))AND(vt0.c0)))) FROM t1 GROUP BY (((vt0.c0)) BETWEEN (('-314710890')) AND ((((t1.c32) NOT BETWEEN (t1.c32) AND (t1.c32))))) HAVING TYPEOF((((t1.c32, vt0.c0, t1.c32))<=((t1.c55, vt0.c0, t1.c32))));SELECT DISTINCT (((t1.c55)IS(vt0.c0)) IN ()) FROM vt0 NOT INDEXED, t1 WHERE ((((NULL)) BETWEEN ((CASE ''  WHEN NULL THEN NULL END)) AND ((((NULL)<=(0.7453529116502653)))))); -- 0ms;
SELECT DISTINCT (((x'')||(vt0.c0)) IN ()) FROM t1, vt0; -- 0ms;
SELECT DISTINCT '' FROM t1, vt0; -- 0ms;
SELECT ((t1.c55) NOT NULL) COLLATE RTRIM, (((((t1.c55)) NOT BETWEEN ((t1.c55)) AND ((vt0.c0)))) BETWEEN ((t1.c55 IN ())) AND (MIN(vt0.c0))), (NOT (vt0.c0 COLLATE RTRIM)) FROM vt0 ORDER BY (CAST(t1.c55 AS NUMERIC) IN (((((t1.c32)OR(t1.c32)))AND(t1.c55)), (('0.5836653325485067') BETWEEN (vt0.c0) AND (vt0.c0))));SELECT DISTINCT CAST(NULL AS BLOB), ((vt0.c0)||(t1.c32)) COLLATE RTRIM, ((((((t1.c32)AND(t1.c55)))OR(t1.c32)))&(CASE t1.c55  WHEN t1.c32 THEN t1.c32 WHEN vt0.c0 THEN t1.c55 WHEN -2.06249025E8 THEN t1.c32 END)), (NOT (t1.c32 COLLATE RTRIM)), TRIM(((t1.c32) BETWEEN (vt0.c0) AND (t1.c32)), ((t1.c32) NOTNULL)) FROM t1, vt0 LIMIT 614943740 OFFSET -685958975; -- 0ms;
SELECT DISTINCT ((((t1.c32)OR(NULL)))OR(CAST(vt0.c0 AS TEXT))) FROM vt0, t1; -- 0ms;
SELECT (t1.c32 COLLATE RTRIM IN ()), ((t1.c55 COLLATE RTRIM) IS TRUE), ((((t1.c55) NOT BETWEEN (t1.c32) AND (t1.c32))) NOT BETWEEN (vt0.c0) AND (((t1.c55)>>(vt0.c0)))), (NOT (((t1.c55) NOT NULL))), 'ClQey' FROM vt0 WHERE ((((0.5036583218806978)) BETWEEN (((NULL IN ()))) AND (((- (x'4a99')))))) GROUP BY CAST(vt0.c0 COLLATE RTRIM AS TEXT) HAVING ((((t1.c32)!=(t1.c55)))<<(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c55))));SELECT DISTINCT COUNT(((0Xffffffffb9abd523)<<(t1.c55)) COLLATE NOCASE) OVER (), (((t1.c32)) NOT BETWEEN ((CASE WHEN vt0.c0 THEN t1.c55 ELSE t1.c32 END)) AND ((vt0.c0 COLLATE RTRIM))), CAST((vt0.c0 IN (t1.c55, '1871209793', vt0.c0)) AS INTEGER) FROM t1;SELECT DISTINCT (((LOWER(vt0.c0)))>((HEX(t1.c32)))), ((x'')<=(((t1.c32) IS TRUE))), CAST((((t1.c32, t1.c55, t1.c32))>=((t1.c55, t1.c32, 0.9184840538326936))) AS NUMERIC) FROM t1, vt0 WHERE (((COALESCE(x'ea0f', 2129874542)) BETWEEN (((NULL) IS TRUE)) AND (('-1739719294' IN ())))); -- 0ms;
SELECT ALL json_quote(((t1.c32) NOT BETWEEN (0.8868911606254088) AND (vt0.c0))), 0.20265080342620745, AVG(((vt0.c0)IS(t1.c32))) OVER (), x'', TOTAL((((t1.c32, '0.46468666225511446', t1.c55))>=(('-616636828', t1.c55, t1.c32)))) OVER () FROM vt0, t1 ORDER BY (((t1.c32 IN (t1.c32))) NOT NULL)  NULLS LAST, (~ ((t1.c55 IN ()))) ASC  NULLS FIRST; -- 0ms;
SELECT (((((vt0.c0) IS FALSE), NULL, ((('900448896'))=((t1.c55)))))>(((- (vt0.c0)), ((-263169164)LIKE(t1.c55)), ((t1.c55)<(t1.c55))))) FROM vt0 WHERE (TRIM(DISTINCT (('﷖Q')>=(x'')), ((x'') NOTNULL)));SELECT ((((t1.c32) BETWEEN (t1.c55) AND (t1.c32)))LIKE(vt0.c0)) FROM vt0, t1; -- 0ms;
SELECT ALL (('rG?*') BETWEEN (vt0.c0) AND (((t1.c32) ISNULL))), ((((t1.c32 COLLATE RTRIM)OR(((((t1.c32)AND(t1.c55)))AND(t1.c32)))))OR(((t1.c55) BETWEEN (vt0.c0) AND (t1.c32)))), (((((t1.c55)) NOT BETWEEN ((t1.c55)) AND ((t1.c32))))<=(COALESCE(t1.c55, t1.c55, vt0.c0, vt0.c0))) FROM t1 WHERE (((IFNULL(NULL, ''))LIKE(((((NULL)AND('ChR')))OR(x'77a3')))));SELECT DISTINCT CASE CASE t1.c32  WHEN t1.c32 THEN vt0.c0 END  WHEN (((t1.c55))=((vt0.c0))) THEN ((((t1.c32)OR(t1.c55)))OR(vt0.c0)) WHEN ((((t1.c55)AND(t1.c32)))AND(vt0.c0)) THEN CASE t1.c32  WHEN x'' THEN t1.c32 WHEN t1.c32 THEN t1.c32 WHEN t1.c32 THEN t1.c55 WHEN vt0.c0 THEN t1.c32 WHEN t1.c55 THEN t1.c32 ELSE t1.c32 END WHEN vt0.c0 COLLATE RTRIM THEN vt0.c0 ELSE ((t1.c32) BETWEEN (t1.c55) AND (vt0.c0)) END FROM t1 WHERE ((((x'bb4191bc')) NOT BETWEEN (((('-1611362661')>>(x'a9ba')))) AND (((NOT (NULL))))));SELECT (+ ('-1013437076')), ((MIN(vt0.c0, t1.c55))>=(CHAR(t1.c55))), t1.c32 FROM t1, vt0; -- 0ms;
SELECT TYPEOF(DISTINCT CASE NULL  WHEN t1.c55 THEN 0.6127484645392786 ELSE t1.c32 END), t1.c55, vt0.c0 FROM t1;SELECT CAST((NULL IN ()) AS REAL) FROM t1 WHERE ((+ ((x'103c' IN ('1513710297'))))) LIMIT 1547912891; -- 0ms;
SELECT DISTINCT LOWER(((t1.c32) IS TRUE)), CASE WHEN t1.c32 THEN ((NULL) BETWEEN (t1.c32) AND (t1.c55)) ELSE CAST(t1.c55 AS TEXT) END, t1.c55, TOTAL((vt0.c0 IN ())) OVER (), CASE SUBSTR(t1.c32, vt0.c0)  WHEN t1.c32 THEN ((((t1.c55)OR(t1.c32)))AND(t1.c55)) ELSE HEX(vt0.c0) END FROM t1, vt0 WHERE (((((((((((((NULL)AND('Yes|,|\nC')))AND(0.7138664512847548)))OR(('-888855160' IN (x'', -401975775)))))OR((('paf')|('1366654698')))))AND(CASE WHEN x'' THEN '' WHEN 's/캐HLVYy' THEN x'' WHEN NULL THEN 0.9870766920415492 WHEN '-1657180249' THEN NULL WHEN x'' THEN '!' END)))OR((('') NOT BETWEEN (x'') AND ('165862382'))))) ORDER BY (((+ (t1.c55)))IS((((t1.c55, t1.c55, ','))=((t1.c55, vt0.c0, t1.c55)))))  NULLS LAST, CASE WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t1.c32))) THEN ((((((((((((vt0.c0)AND(t1.c32)))AND(vt0.c0)))AND(t1.c32)))AND('1449984607')))AND(t1.c55)))AND(vt0.c0)) END  NULLS FIRST, ((HEX(DISTINCT t1.c55)) BETWEEN (LIKE(t1.c32, t1.c32)) AND (UNLIKELY(t1.c55)))  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((t1.c55))=((t1.c32))) IN ()) FROM t1, vt0 WHERE (((((0.7586082815624449))<((-1.91595929E9))) IN ())); -- 0ms;
SELECT DISTINCT CAST(((t1.c55)%(t1.c32)) AS TEXT) FROM vt0;SELECT ALL LEAD(LENGTH(t1.c55), CAST((((t1.c55)) BETWEEN ((t1.c55)) AND ((t1.c55))) AS TEXT), LOWER(DISTINCT (~ (t1.c55)))) OVER () FROM vt0, t1 WHERE (CAST((((''))=((x'69e8'))) AS INTEGER)); -- 0ms;
SELECT DISTINCT (+ (AVG(t1.c32))) FROM t1, vt0 WHERE (((CAST('1153126240' AS NUMERIC)) NOT BETWEEN (CAST(x'4ee2' AS INTEGER)) AND (((NULL)|(0.5760295575618676))))); -- 0ms;
SELECT COUNT(*) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (((NOT (t1.c55))) NOT BETWEEN (((t1.c32)>=(vt0.c0))) AND (x'')) FROM t1, vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) IS TRUE) AS BLOB) FROM t1, vt0 WHERE ((((x'')) NOT BETWEEN ((('-1515632840' IN ()))) AND ((0xffffffffff5204a0 COLLATE RTRIM)))); -- 0ms;
SELECT ALL (((vt0.c0)) BETWEEN ((((vt0.c0)IS(t1.c32)))) AND ((0.7359994017210059))) FROM t1, vt0 WHERE (MAX(((NULL) NOT BETWEEN (0.7080342540544527) AND ('2')), CAST(x'' AS TEXT), (('1246693004') NOT BETWEEN (NULL) AND (x'')), (('fadaS')IS NOT(x'')))); -- 0ms;
SELECT CASE (((t1.c55)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN (((vt0.c0))>=((t1.c55))) THEN ((vt0.c0)||(t1.c32)) ELSE JULIANDAY(vt0.c0, vt0.c0, t1.c32) END, CASE WHEN CAST(t1.c55 AS TEXT) THEN (~ (vt0.c0)) END, LAST_VALUE(CASE WHEN CAST('.XCD' AS TEXT) THEN x'' WHEN CASE t1.c55  WHEN vt0.c0 THEN t1.c32 ELSE vt0.c0 END THEN t1.c32 WHEN ((((((((((((t1.c32)AND(t1.c32)))AND(t1.c55)))AND(NULL)))AND(t1.c55)))AND(t1.c55)))OR(vt0.c0)) THEN CASE t1.c32  WHEN vt0.c0 THEN vt0.c0 END END) OVER () FROM t1, vt0 WHERE (CASE -4.33894321E8 COLLATE BINARY  WHEN SUBSTR(x'', 0.9808596931802124) THEN ((NULL) BETWEEN (x'') AND (0.4595789962978516)) END) ORDER BY ((((-964198017)OR(((((t1.c32)AND(vt0.c0)))AND('')))))AND((t1.c55 IN ()))) DESC, ((((t1.c32) NOT BETWEEN (t1.c32) AND (t1.c55)))IS(((t1.c55)LIKE(t1.c55)))), ((((((vt0.c0)AND(t1.c55)))AND(t1.c32))) BETWEEN ((NOT (t1.c55))) AND (CASE vt0.c0  WHEN '1000625073' THEN t1.c55 ELSE vt0.c0 END))  NULLS FIRST;SELECT DISTINCT ((((t1.c32)-(t1.c32)))<<((~ (t1.c55)))), json_array_length(t1.c55 COLLATE BINARY, ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c32))), TOTAL(((vt0.c0)GLOB(vt0.c0))), MIN(t1.c55), t1.c32 FROM t1;SELECT ((((json_type(x''))OR((~ (t1.c32)))))OR((t1.c32 IN (vt0.c0, t1.c32)))), CASE WHEN CASE WHEN t1.c55 THEN t1.c55 WHEN '0.5115148428794406' THEN 'r_9' WHEN vt0.c0 THEN vt0.c0 END THEN LIKELY(DISTINCT t1.c32) ELSE vt0.c0 END, FIRST_VALUE(((t1.c32 IN ()) IN ())) OVER () FROM vt0, t1 WHERE (((((1.736953642E9)<=(0.4756127110227091))) BETWEEN (NULL) AND (((x'a328')%(''))))); -- 0ms;
SELECT '0.6207664417765784', t1.c55 COLLATE RTRIM COLLATE RTRIM, SUM((((t1.c32))<((t1.c55)))) COLLATE BINARY FROM t1, vt0; -- 0ms;
SELECT DISTINCT (NOT (((t1.c32) NOTNULL))), (vt0.c0 IN ((NOT (t1.c32)))), GROUP_CONCAT(json(t1.c55) COLLATE RTRIM) OVER () FROM vt0, t1 ORDER BY ((t1.c32) NOT BETWEEN (((((vt0.c0)OR(vt0.c0)))OR(t1.c32))) AND (LOWER(DISTINCT t1.c55))), (((((t1.c55)|(t1.c32)), (+ (t1.c55)), ((t1.c55)LIKE(vt0.c0))))==((((t1.c32)>>(t1.c55)), CAST(vt0.c0 AS TEXT), ((t1.c32) NOT BETWEEN (vt0.c0) AND (t1.c55)))))  NULLS FIRST LIMIT 697522688; -- 0ms;
SELECT DISTINCT ((PRINTF(t1.c32, t1.c55, vt0.c0)) BETWEEN ((t1.c55 IN ())) AND ((- (vt0.c0)))), DATETIME(1993369530, t1.c55, '815521786') COLLATE RTRIM, ((CAST(vt0.c0 AS REAL)) NOT BETWEEN ((NOT (t1.c32))) AND (((t1.c55)/('')))) FROM t1, vt0 WHERE ((((((((0.568786393850098))<((NULL))))AND(CAST(', B}h' AS BLOB))))OR(UNLIKELY(DISTINCT 0x2c665662)))) LIMIT -1082076385; -- 0ms;
SELECT ALL MAX(((t1.c55) ISNULL), CAST(t1.c32 AS BLOB), CASE WHEN vt0.c0 THEN x'' WHEN NULL THEN t1.c32 WHEN vt0.c0 THEN t1.c32 ELSE t1.c32 END, vt0.c0) FROM t1, vt0; -- 1ms;
SELECT DISTINCT CASE CASE t1.c32  WHEN 0.9430712990504654 THEN t1.c32 WHEN t1.c32 THEN vt0.c0 WHEN t1.c32 THEN t1.c32 ELSE vt0.c0 END  WHEN t1.c32 THEN ((t1.c55)AND(vt0.c0)) END FROM t1, vt0 WHERE (CASE (((''))>=((x'')))  WHEN (((NULL)) BETWEEN (('!y')) AND ((0X5e733f73))) THEN (NULL IN ()) ELSE (+ ('792416622')) END) ORDER BY CAST(((t1.c55) NOT BETWEEN (vt0.c0) AND (t1.c32)) AS TEXT); -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT t1.c32))>(((t1.c32) BETWEEN (vt0.c0) AND (t1.c55)))) FROM vt0, t1 WHERE ((((('0F') IS TRUE)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((('-304193380'))<((CAST(t1.c32 AS REAL)))) FROM vt0 WHERE (CAST(('433790822' IN (NULL, '614943740')) AS REAL)) LIMIT 209863156;SELECT t1.c55, 0.5224398580862202, t1.c32 COLLATE NOCASE FROM vt0, t1; -- 0ms;
SELECT CASE WHEN (((t1.c32, 1280996981, vt0.c0, t1.c55, t1.c32)) BETWEEN (('', vt0.c0, t1.c55, t1.c55, vt0.c0)) AND ((vt0.c0, vt0.c0, t1.c32, t1.c55, t1.c32))) THEN (('?now[<') BETWEEN (t1.c32) AND (vt0.c0)) END, CAST(((vt0.c0) NOT NULL) AS BLOB), (((((t1.c32, t1.c32, t1.c55)) BETWEEN ((vt0.c0, vt0.c0, t1.c55)) AND ((vt0.c0, t1.c55, t1.c55)))) NOT BETWEEN ((((vt0.c0, vt0.c0, t1.c32)) BETWEEN ((t1.c55, t1.c32, vt0.c0)) AND ((t1.c32, t1.c55, 0.7077027584951967)))) AND (((t1.c55) IS FALSE))) FROM t1, vt0 WHERE (((((NOT (-7.0835556E7)), ((-1755672013)==(-6.10483154E8)), ((x'')=(0X46844e98))))>((CASE WHEN x'' THEN 0.7092938102642614 WHEN '-421829551' THEN NULL WHEN -1370675168 THEN '0.5251510448213259' END, ((NULL) BETWEEN ('1882077026') AND (0.252517132333959)), (1834978275 IN ()))))); -- 0ms;
SELECT ALL UNLIKELY(((((t1.c55)AND(vt0.c0)))AND(t1.c55))) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((('') NOTNULL)) BETWEEN (((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) AND (((t1.c55)<=(0.8119493756078485)))), CASE WHEN (NOT (t1.c55)) THEN ((((((((t1.c55)OR(t1.c32)))OR(vt0.c0)))OR(t1.c32)))OR(t1.c55)) ELSE TRIM(DISTINCT t1.c55, vt0.c0) END, ((((vt0.c0) ISNULL)) NOT BETWEEN (CAST(-1176663368 AS BLOB)) AND (((vt0.c0)=(vt0.c0)))) FROM vt0 WHERE (((CAST('-*pbIm' AS TEXT)) NOT NULL)) LIMIT 810099793;SELECT DISTINCT SUM(((t1.c32) NOT NULL) COLLATE NOCASE) OVER () FROM t1 NOT INDEXED, vt0; -- 0ms;
SELECT ALL AVG(((((vt0.c0)OR(vt0.c0)))AND(x'69938a08'))) OVER () FROM t1, vt0 WHERE (CASE WHEN CASE '1996401907'  WHEN '1014027239' THEN NULL WHEN x'' THEN '695031125' WHEN x'' THEN NULL END THEN CAST(0.18637487389304885 AS BLOB) WHEN IFNULL(NULL, 971811473) THEN (('-1392999280') NOT BETWEEN ('') AND ('-1647394200')) WHEN (('-1739890131')%(NULL)) THEN ((x'')GLOB('1336349359')) END); -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t1; -- 1ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN NULL END)IS NOT(COUNT(t1.c55))) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((((0.32364526354788925) BETWEEN ('-1176663368') AND (x'f577')))) AND (((((('-1525209525')OR('kr!*{엚')))AND(NULL))))));SELECT ALL ROUND(((t1.c32) IS TRUE), vt0.c0) FROM t1 WHERE ((NOT ((('0)G-')LIKE(x'')))));SELECT ALL vt0.c0 COLLATE RTRIM FROM t1, vt0 WHERE (SUBSTR((('0.021644777819465943') BETWEEN (x'') AND (554923757)), ((NULL)LIKE('	Njx#')))); -- 0ms;
SELECT DISTINCT ((t1.c32) NOTNULL) COLLATE NOCASE, FIRST_VALUE(((((vt0.c0) NOT NULL))+(CASE t1.c55  WHEN t1.c55 THEN vt0.c0 WHEN t1.c32 THEN '>)' WHEN t1.c55 THEN t1.c32 ELSE 0.5840799082597359 END))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((t1.c32 IN ()))>(NULL)) FOLLOWING), CASE ((vt0.c0) BETWEEN (t1.c55) AND ('-213457887'))  WHEN ((vt0.c0)<=(vt0.c0)) THEN t1.c55 WHEN (+ (t1.c55)) THEN ((t1.c55)LIKE(t1.c32)) WHEN ((0.9334611956720524)<(vt0.c0)) THEN (+ (vt0.c0)) WHEN ((t1.c32)<=(t1.c55)) THEN ((t1.c55)||(x'1ed3')) WHEN ((t1.c32) BETWEEN (t1.c55) AND (t1.c55)) THEN json_insert(t1.c32, t1.c55, t1.c32) ELSE load_extension(t1.c55, vt0.c0) END FROM vt0, t1 WHERE ((NOT (CASE WHEN '1695326234' THEN NULL ELSE '641985764' END)));SELECT ALL TOTAL(NULLIF(t1.c32, t1.c32)) FILTER(WHERE (x'500b' IN ())) OVER (), t1.c55, (((CAST(t1.c32 AS INTEGER), (((t1.c55))<>(('790630537'))), ((t1.c55)LIKE(t1.c55))))>((-1143118403, ((1828489511) IS FALSE), 0.15283072301448297))) FROM vt0, t1 WHERE (CASE '-263169164'  WHEN 0Xffffffffd413660c THEN 'Y&ME' WHEN '1264917533' THEN 0x76b962de WHEN x'b4e7' THEN NULL END COLLATE BINARY); -- 0ms;
SELECT ALL (((t1.c55) NOT BETWEEN (t1.c32) AND (x'')) IN ()) FROM vt0 WHERE (CASE WHEN (('%Iy03lR')LIKE(x'')) THEN ((x'a4d1') NOT BETWEEN (x'38b8') AND (0.10057894763122222)) ELSE (((-997103516))=(('NχuwmC''W'))) END) LIMIT -90675586; -- 0ms;
SELECT ((CAST(vt0.c0 AS REAL)) BETWEEN (SUM(t1.c32)) AND (CASE t1.c55  WHEN x'' THEN vt0.c0 ELSE t1.c32 END)) FROM vt0 WHERE ((- ((+ (2105261459)))));SELECT DISTINCT ((vt0.c0)*((((t1.c55)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))), LAST_INSERT_ROWID(), ((AVG(vt0.c0))LIKE((((vt0.c0, vt0.c0, t1.c32))<>((vt0.c0, t1.c32, 0.09102727961766699))))) FROM t1, vt0 GROUP BY (((((t1.c55)<(vt0.c0))))<=((CASE WHEN t1.c32 THEN t1.c55 END))), ((((vt0.c0) IS FALSE)) NOTNULL), (((((t1.c32 IN ()))AND(((vt0.c0) IS TRUE))))OR((((t1.c32)) BETWEEN ((t1.c32)) AND ((t1.c32))))); -- 0ms;
SELECT DISTINCT (- (CAST(t1.c32 AS BLOB))) FROM vt0 WHERE (DATE(((('-2089002489', x'', 0.7218050659383687, 0.9631053095274149, '83826929'))<=((x'8851', '0.7376258205641482', '-269888395', 0.4062580777273358, x''))), x'' COLLATE RTRIM, ((NULL)<=('2105261459')), (('612729421')=(x'')), ((((((((0.7376258205641482)AND('!w_')))AND('~F9qK랪M')))AND('-2006171543')))OR(0.10345094400591281)))) GROUP BY TIME(((((t1.c32)AND(vt0.c0)))AND(t1.c32)), (+ (vt0.c0)), ((((t1.c55)AND(vt0.c0)))AND(t1.c55)), (((t1.c32))<>((vt0.c0))), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)));SELECT ((t1.c55)IS NOT(t1.c32)) COLLATE RTRIM COLLATE NOCASE FROM t1, vt0 UNION ALL SELECT DISTINCT (('') NOT BETWEEN (CASE t1.c32  WHEN t1.c55 THEN vt0.c0 END) AND (NULL COLLATE RTRIM)) FROM vt0 WHERE (((((((((((x'')AND(0x6e2f51b9)))AND(6.97522688E8)))OR(NULL)))OR(NULL))) NOT NULL)) LIMIT 314879224 OFFSET 1552591979;SELECT DISTINCT ((CAST(t1.c32 AS REAL)) IS TRUE), COUNT(CAST(t1.c32 AS NUMERIC)), (NOT (TOTAL(t1.c55))) FROM t1, vt0 WHERE (((NULL)|(0.4285888962052059)) COLLATE RTRIM COLLATE RTRIM) LIMIT 1363305357 OFFSET 937114385; -- 0ms;
SELECT DISTINCT LAST_VALUE(TOTAL_CHANGES() COLLATE NOCASE) OVER (), CASE ROUND(t1.c55, t1.c32)  WHEN 4.1041862E7 THEN LOWER(DISTINCT vt0.c0) END, IFNULL(t1.c32, t1.c55) COLLATE BINARY FROM t1 WHERE (LTRIM(CAST('0.43564013889075914' AS INTEGER)));SELECT DISTINCT vt0.c0 FROM vt0, t1; -- 0ms;
SELECT DISTINCT (+ ((t1.c32 IN ()))) FROM vt0 WHERE ((((((x'', '', '-610483154', x'', x'')) NOT BETWEEN ((0.46592148177577986, 'lB䲾syOH6A', x'', 0.9443515612112334, '읠\rOaJ쌖3}')) AND ((0.09478417704728848, NULL, NULL, '1061911572', NULL)))) NOT NULL)); -- 1ms;
SELECT DISTINCT ((t1.c32 COLLATE RTRIM)<<((NOT (t1.c55)))) FROM vt0, t1 WHERE (LIKE(((NULL)/(-1310243904)), ((NULL)<(-8.2106047E8)))); -- 0ms;
SELECT DISTINCT -6.85958975E8, ((((t1.c55)>(vt0.c0))) ISNULL), CAST(AVG(t1.c32) AS INTEGER) FROM vt0, t1 WHERE ((((((('-415753484') BETWEEN (0.12551556763158045) AND (-1.450874E7)))AND(CASE 0.6998449147699732  WHEN x'' THEN NULL ELSE 0.44666431915719107 END)))AND(((-7.0835556E7)*(''))))); -- 0ms;
SELECT NTILE((+ (((t1.c32) BETWEEN (t1.c55) AND (t1.c32))))) OVER () FROM t1 WHERE ((((NULL IN (1725301880, 1293443687)))>((((('695031125')AND(0.42005379669165355)))OR(-302413946))))); -- 0ms;
SELECT DISTINCT ((COUNT(*)) NOTNULL) FROM vt0; -- 0ms;
SELECT t1.c55, UPPER(CASE t1.c32  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN '' WHEN t1.c32 THEN vt0.c0 END), AVG(((((((((t1.c32)OR(vt0.c0)))OR(NULL)))OR('-506999466')))AND(vt0.c0))) FROM vt0 WHERE ((- ((~ ('')))));SELECT t1.c55 FROM t1, vt0 WHERE ((((x'2d8893d9' IN ())) NOT NULL)); -- 0ms;
SELECT (((vt0.c0 IN (t1.c32))) IS TRUE), 0.018048385597667194, (((CAST(vt0.c0 AS TEXT)))=((x''))) FROM vt0 WHERE (((CASE WHEN 0.6428875332854366 THEN 0.7505022928039792 WHEN NULL THEN 7.87780812E8 WHEN 0.5251510448213259 THEN 0X5104c53b WHEN -1819263765 THEN 0Xffffffffbbdd65bd WHEN NULL THEN NULL END) ISNULL)) GROUP BY ((t1.c32) ISNULL);SELECT ((t1.c55 COLLATE RTRIM) NOT NULL) FROM vt0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c32) NOT BETWEEN (x'') AND (t1.c55)))>=(COUNT(*))) FROM t1 WHERE (CAST((((0X49e607a)) BETWEEN ((x'')) AND ((0.5787684301162365))) AS BLOB)); -- 0ms;
SELECT (((t1.c32)) NOT BETWEEN ((vt0.c0)) AND ((t1.c55))) COLLATE RTRIM FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((UPPER(t1.c32)) NOT BETWEEN ((t1.c55 IN ())) AND (((vt0.c0)LIKE(t1.c32)))), LEAD((((('+4psKWF\r?')IS NOT(vt0.c0)))>(CAST(t1.c55 AS BLOB))), ((((((t1.c32)OR(t1.c55)))AND(vt0.c0))) NOTNULL), COALESCE(CASE t1.c55  WHEN t1.c32 THEN t1.c32 WHEN vt0.c0 THEN t1.c55 WHEN vt0.c0 THEN t1.c32 ELSE vt0.c0 END, ((vt0.c0)>>(t1.c32)))) OVER ( ORDER BY CASE (t1.c32 IN ())  WHEN ((t1.c55) BETWEEN (0.5326963347549643) AND (vt0.c0)) THEN t1.c55 COLLATE NOCASE END DESC), NTH_VALUE(CASE WHEN t1.c32 THEN t1.c32 WHEN CAST(t1.c32 AS INTEGER) THEN (((t1.c55)) NOT BETWEEN ((t1.c55)) AND ((t1.c55))) WHEN TRIM(t1.c32) THEN 0.6716097249469706 WHEN ((vt0.c0)OR(t1.c55)) THEN (+ (t1.c55)) WHEN CASE WHEN t1.c32 THEN vt0.c0 END THEN ((t1.c32) IS FALSE) ELSE (- (0.44265236615881987)) END, CASE ((t1.c55)/(t1.c32))  WHEN ((((t1.c32)AND(t1.c55)))AND('cB3㻁B-*j5')) THEN vt0.c0 END) OVER ( RANGE  UNBOUNDED PRECEDING) FROM t1, vt0 WHERE ((x'' IN ()) COLLATE NOCASE) GROUP BY (((~ ('2x')))%(NULL)) LIMIT -509123257 OFFSET 1582318008; -- 1ms;
SELECT DISTINCT CASE WHEN ((t1.c32) NOT NULL) THEN (((t1.c55)) NOT BETWEEN ((0.9419623541689681)) AND ((t1.c32))) WHEN CAST(t1.c55 AS NUMERIC) THEN NULL WHEN t1.c55 COLLATE BINARY THEN ((vt0.c0)IS(t1.c32)) END, MAX(((t1.c32)<(t1.c55))), '0.853751020902358', PRINTF(((t1.c32) ISNULL), ((vt0.c0) NOT NULL), MAX(t1.c55)), t1.c32 FROM vt0, t1 WHERE ((((NULL)) NOT BETWEEN ((('1937225099' IN ('-433894321')))) AND ((CAST('k8|e' AS BLOB))))); -- 0ms;
SELECT ALL ((((vt0.c0)!=(t1.c32))) NOTNULL), (((t1.c32) IS FALSE) IN ()), SUM(((vt0.c0)>>(t1.c32)) COLLATE NOCASE) OVER () FROM t1;SELECT DISTINCT ((t1.c55)&((NOT (t1.c55)))) FROM t1, vt0; -- 0ms;
SELECT ALL (0.631135424929008 IN ()) FROM vt0, t1 WHERE (((0.15951569583377379 COLLATE RTRIM) NOT BETWEEN ((+ (NULL))) AND (GLOB(x'', 0.34714357797028417)))); -- 0ms;
SELECT DISTINCT ((0.25396519615912594) NOT NULL) COLLATE BINARY, NULL, SUM(CAST(t1.c32 AS INTEGER)) FILTER(WHERE (((t1.c32 IN ())) ISNULL)) OVER (), (- ((vt0.c0 IN (t1.c55, t1.c55)))), TOTAL(NULLIF(DISTINCT t1.c32, t1.c32)) COLLATE BINARY, ((((vt0.c0)AND('쾱_'))) NOT NULL), (((((('')=(vt0.c0)))AND(((t1.c32)<=(t1.c55)))))OR(((t1.c55) NOT NULL))) FROM vt0, t1 WHERE (CASE WHEN '-810481371' THEN 925954585 WHEN NULL THEN '0.9166674864358938' WHEN NULL THEN NULL ELSE 0.9745303387021169 END COLLATE RTRIM); -- 0ms;
SELECT CASE WHEN '-1082076385' THEN x'70e7' ELSE (+ (t1.c55)) END FROM vt0 ORDER BY CAST(CAST(t1.c32 AS NUMERIC) AS INTEGER);SELECT DISTINCT ((((vt0.c0)%(t1.c55))) ISNULL) FROM vt0, t1; -- 0ms;
SELECT DISTINCT (~ (COUNT(*))) FROM t1, vt0 WHERE (((json_valid(x'')) IS FALSE)) GROUP BY ((ABS(vt0.c0))%(((t1.c32)GLOB(t1.c32)))); -- 0ms;
SELECT DISTINCT SUM(x'') FROM vt0, t1 WHERE (((CAST(x'' AS REAL))LIKE((('') BETWEEN (NULL) AND (-1149167002))))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((x'') ISNULL) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, NULL))) OVER () FROM vt0 WHERE (CASE WHEN (~ ('-1933073853')) THEN (0X721f2480 IN ()) WHEN CAST('964590035' AS NUMERIC) THEN ((0.566205372897159) NOTNULL) WHEN ((NULL) NOTNULL) THEN (((-283852043, NULL, NULL)) NOT BETWEEN ((0.1903708462916215, x'1b5a', '')) AND (('-118753225', '-899543471', '591022646'))) WHEN ((NULL) NOT BETWEEN (x'3184') AND (0.905125449353662)) THEN (((NULL, x'0554', x''))==((0.5866524720627495, x'', NULL))) WHEN 0.019854923871774344 COLLATE NOCASE THEN ((x'f05a')IS NOT(1567662778)) END); -- 0ms;
SELECT DISTINCT CAST((((t1.c55, vt0.c0, t1.c32)) BETWEEN ((t1.c32, vt0.c0, t1.c32)) AND ((vt0.c0, vt0.c0, t1.c55))) AS BLOB) FROM vt0, t1 LIMIT 1937225099 OFFSET 828964320; -- 0ms;
SELECT (- (t1.c32)) COLLATE RTRIM, ((+ (vt0.c0)) IN ()), COUNT(*) OVER () FROM vt0 ORDER BY TYPEOF(DISTINCT CAST(t1.c32 AS NUMERIC))  NULLS FIRST, (NOT (HEX(vt0.c0)))  NULLS FIRST, vt0.c0;SELECT MAX(((vt0.c0)>(t1.c32))) FROM vt0 WHERE ((((1.991860958E9, '-1730268731', 0.4695698520012216)) BETWEEN ((CAST(NULL AS TEXT), ('paf' IN ()), NULL COLLATE RTRIM)) AND ((((']>7~^a') BETWEEN (0.8966957696751635) AND ('-728448900')), CASE WHEN 'df' THEN '-2136756407' END, ((x'')GLOB(x''))))));SELECT IFNULL(DISTINCT CAST(t1.c32 AS REAL), SQLITE_SOURCE_ID()) FROM t1, vt0; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) ISNULL))OR(CASE WHEN t1.c32 THEN vt0.c0 END)))AND(MIN(vt0.c0))))AND(((x'8b2d039b') NOT NULL))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t1.c32 WHEN vt0.c0 THEN t1.c32 WHEN vt0.c0 THEN '2057500884' END)) FROM t1 WHERE ((((NULL, 0.675357221735703, NULL)) BETWEEN ((json_extract(0xffffffff90fb6338, 'v', '%s', '9J	.,腪S>'), CAST(0X2ef494cc AS INTEGER), ('-2024080062' IN ()))) AND ((((0.951473159366255)-(x'')), ((x'') NOTNULL), (x'' IN ()))))) GROUP BY CASE CAST(t1.c32 AS TEXT)  WHEN ((vt0.c0) NOT BETWEEN (t1.c32) AND (vt0.c0)) THEN ((((t1.c55)AND(vt0.c0)))OR(vt0.c0)) END, 'X)', LAST_INSERT_ROWID();SELECT DISTINCT x'7b06' FROM vt0, t1 WHERE ((((NULL)<<(NULL)) IN ((('sO擔d''T\nR') NOT BETWEEN ('-1141976477') AND (0x21a717f5)), (+ (0.043580454981392514)), (((((((('1547043849')OR(x'bd5854ca')))OR(x'')))OR(0.9596339440796594)))AND(0X6504ce68))))); -- 0ms;
SELECT DISTINCT (((((vt0.c0, t1.c55, t1.c32))<=((t1.c32, t1.c55, t1.c55))))/(CASE vt0.c0  WHEN t1.c55 THEN vt0.c0 ELSE t1.c32 END)) FROM t1 GROUP BY (('-463859765') NOT NULL) HAVING MIN(((t1.c55) BETWEEN (t1.c55) AND (t1.c32))) ORDER BY (((t1.c55)) NOT BETWEEN ((RTRIM(vt0.c0))) AND ((NULL))) ASC, ((((t1.c32) NOT NULL))IS(((vt0.c0)<<(t1.c55)))) ASC LIMIT -1933073853;SELECT DISTINCT t1.c32, CASE ((t1.c32)<(t1.c32))  WHEN ((t1.c32)-(t1.c32)) THEN ((vt0.c0)GLOB(t1.c32)) ELSE ((((((((vt0.c0)AND(t1.c32)))AND(t1.c32)))AND(vt0.c0)))AND(t1.c32)) END, vt0.c0 FROM t1 LEFT OUTER JOIN vt0 ON CAST((+ (t1.c55)) AS BLOB) WHERE ((NOT (((x'9d9d') NOT NULL)))) ORDER BY t1.c32 COLLATE NOCASE; -- 0ms;
SELECT ((((t1.c55)<(t1.c32))) IS TRUE), RANK() OVER (), json_patch(t1.c32, t1.c55) COLLATE NOCASE, ((TOTAL(t1.c55)) IS FALSE), COALESCE(t1.c55, ((t1.c55) NOTNULL)) FROM t1; -- 0ms;
SELECT DISTINCT ((TOTAL(vt0.c0)) ISNULL) FROM vt0, t1 WHERE (((((x'')LIKE(0.021800607494453672))) NOT BETWEEN (((0.2563534364540957)*(0.38364889418222303))) AND ((((0.8393118476742044))>(('')))))); -- 0ms;
SELECT ALL COUNT((((vt0.c0, t1.c32, t1.c55)) NOT BETWEEN ((vt0.c0, vt0.c0, t1.c32)) AND (('-700557620', t1.c55, t1.c32)))) OVER () FROM vt0;SELECT (~ (CAST(t1.c55 AS TEXT))) FROM vt0;SELECT x'', (+ ((vt0.c0 IN ()))), GROUP_CONCAT(ABS(vt0.c0)) OVER (), ((((t1.c32)OR(t1.c55 COLLATE BINARY)))AND((((vt0.c0)) NOT BETWEEN ((t1.c32)) AND ((vt0.c0))))), ((((((((((((t1.c55)OR(((((t1.c55)AND(t1.c55)))AND(vt0.c0)))))OR(t1.c55)))OR(GROUP_CONCAT(t1.c32))))OR(UPPER(DISTINCT t1.c32))))AND(HEX(t1.c55))))OR(t1.c55)) FROM t1;SELECT ((t1.c32 COLLATE NOCASE) BETWEEN (((t1.c32)IS(t1.c32))) AND (COUNT(*))) FROM t1; -- 0ms;
SELECT ALL GROUP_CONCAT(NULLIF(DISTINCT t1.c55, vt0.c0)) FROM vt0 WHERE (IFNULL(DISTINCT CAST(x'49fa' AS BLOB), ((0.853751020902358) BETWEEN ('2129874542') AND (0X336eda02))));SELECT DISTINCT t1.c55, CASE (- (t1.c32))  WHEN MIN(t1.c55) THEN COALESCE(DISTINCT t1.c32, t1.c55) ELSE AVG(t1.c55) END, ((CAST(vt0.c0 AS NUMERIC))>=('9[ACua I')) FROM vt0, t1 WHERE (CAST((~ ('-1141976477')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((('-1192992262') IS TRUE) IN ()), CASE WHEN ((vt0.c0)>=(t1.c55)) THEN UPPER(vt0.c0) ELSE t1.c55 COLLATE RTRIM END, ((((CAST(t1.c32 AS TEXT))OR((((t1.c32, t1.c55, t1.c32))<>((vt0.c0, t1.c32, t1.c55))))))AND((+ (-1.522162934E9)))) FROM vt0 WHERE (((((0.3497057403247791)>(0.5903872534005948))) NOTNULL)) GROUP BY (LIKELY(0.5339840888660795) IN ());SELECT DISTINCT (((t1.c55 IN ())) BETWEEN (CASE WHEN t1.c55 THEN vt0.c0 END) AND (t1.c55)) FROM t1, vt0 WHERE (CAST('Er' AS TEXT) COLLATE NOCASE) ORDER BY (((t1.c32, t1.c32, t1.c32)) BETWEEN ((((t1.c55) NOTNULL), CAST(vt0.c0 AS NUMERIC), ((t1.c55)OR(vt0.c0)))) AND ((ABS(DISTINCT t1.c55), ((t1.c32)*(t1.c55)), t1.c55 COLLATE BINARY))) DESC  NULLS FIRST; -- 1ms;
SELECT t1.c55 FROM vt0, t1 WHERE (((((((1557471950)OR(NULL)))OR('0.6207664417765784'))) IS TRUE)) LIMIT 206373463; -- 0ms;
SELECT DISTINCT CASE (((t1.c55, t1.c32, t1.c55))>=((t1.c32, t1.c55, vt0.c0)))  WHEN CAST(t1.c55 AS INTEGER) THEN ((t1.c55)>(x'9147')) WHEN ((t1.c55) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN ((t1.c55)OR(vt0.c0)) WHEN vt0.c0 THEN CASE WHEN '' THEN vt0.c0 ELSE -51049075 END ELSE ((((t1.c55)AND(t1.c55)))AND(vt0.c0)) END, NULL, TYPEOF(TRIM(t1.c32)) FROM t1, vt0 WHERE (IFNULL(DISTINCT (((1572695003))<=(('+_'))), (('l|]G') IS TRUE))) GROUP BY ((CAST(t1.c32 AS INTEGER)) BETWEEN (CASE vt0.c0  WHEN t1.c55 THEN vt0.c0 ELSE t1.c55 END) AND (((((vt0.c0)OR(t1.c32)))OR(vt0.c0)))), ((0.5251510448213259 COLLATE RTRIM)<(vt0.c0)), ((json(t1.c55))||(((t1.c55) BETWEEN (t1.c32) AND (vt0.c0)))), (((t1.c55)) NOT BETWEEN (('' COLLATE BINARY)) AND ((('-1275704540' IN ())))), CAST(((vt0.c0)IS(t1.c32)) AS BLOB) ORDER BY (((((vt0.c0))>((vt0.c0)))) NOT NULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT LAG(CAST(t1.c32 AS NUMERIC) COLLATE BINARY, CASE WHEN CAST(t1.c55 AS REAL) THEN (t1.c32 IN ()) ELSE (('RO?,')+(t1.c55)) END, (((t1.c55)) NOT BETWEEN ((((t1.c55)+(t1.c55)))) AND ((vt0.c0)))) OVER () FROM t1, vt0 WHERE ((+ (TRIM(DISTINCT '', '[>g2MR')))); -- 1ms;
SELECT DISTINCT (NOT (((t1.c55) BETWEEN (t1.c32) AND (NULL)))), ((((x'')+(t1.c32)))*(CAST(t1.c32 AS REAL))), ((((vt0.c0)+(t1.c32))) ISNULL) FROM t1, vt0 WHERE (((LIKELY('65477418')) ISNULL)); -- 0ms;
SELECT GROUP_CONCAT((t1.c32 IN (t1.c32))) FROM t1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 LIMIT 1707536097; -- 0ms;
SELECT DISTINCT (((t1.c55 IN (t1.c55, t1.c55))) BETWEEN (((vt0.c0)*(vt0.c0))) AND (((t1.c55)|(vt0.c0)))) FROM t1, vt0 WHERE (((CASE WHEN NULL THEN '-433894321' ELSE x'' END)LIKE(((('x^/Q'))<=(('-1184910569')))))); -- 0ms;
SELECT ALL TOTAL(-589950936) FROM vt0, t1; -- 0ms;
SELECT DISTINCT -1.462589512E9 FROM vt0 WHERE (IFNULL(((x'5cd29f65')/('-739181760')), CASE '-712589895'  WHEN '-1540591406' THEN NULL END)); -- 0ms;
SELECT ALL CAST(t1.c55 AS REAL) COLLATE RTRIM FROM t1, vt0; -- 0ms;
SELECT DISTINCT (((CAST(t1.c32 AS BLOB)))<=(((((t1.c32))<((vt0.c0)))))) FROM t1;SELECT DISTINCT ((((t1.c55)AND(x'')))AND(t1.c32)) COLLATE BINARY FROM vt0 INNER JOIN t1 ON CAST(t1.c32 AS BLOB); -- 0ms;
SELECT DISTINCT (((~ (t1.c32))) BETWEEN (t1.c32 COLLATE RTRIM) AND (CAST(t1.c32 AS REAL))) FROM t1 WHERE (((((-2024244817)!=('2083308080'))) NOT BETWEEN ((((('vev[[6')OR('1937225099')))OR(0.48003096374790355))) AND ((- (NULL))))); -- 0ms;
SELECT DISTINCT CAST(((t1.c32) ISNULL) AS BLOB) FROM t1 GROUP BY SUBSTR(vt0.c0 COLLATE BINARY, COALESCE(DISTINCT NULL, x'', t1.c55, vt0.c0)), ((SQLITE_COMPILEOPTION_GET(t1.c32)) IS TRUE), (~ ((((t1.c32)) NOT BETWEEN ((-821060470)) AND ((t1.c55))))), ((((t1.c55)) BETWEEN ((t1.c32)) AND (('t'))) IN ()), t1.c32 COLLATE NOCASE HAVING (- (0X698ce42a));SELECT DISTINCT (((vt0.c0 IN ()))<((((t1.c32))<((vt0.c0))))) FROM vt0, t1; -- 0ms;
SELECT ALL ((((((((((vt0.c0)OR(t1.c55)))OR(t1.c32)))AND(t1.c32)))OR(vt0.c0)))<=(t1.c32)) FROM vt0;SELECT DENSE_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE GROUP), (- ((vt0.c0 IN ()))), ((((((vt0.c0)<(t1.c55)))AND((t1.c32 IN ()))))OR(((NULL)&(t1.c32)))) FROM t1; -- 0ms;
SELECT DISTINCT (~ (((((NULL)AND(vt0.c0)))AND(t1.c55)))) FROM vt0, t1; -- 1ms;
SELECT (+ (((vt0.c0)IS NOT(t1.c32)))), ((COUNT(*)) IS FALSE), CAST((t1.c55 IN ()) AS BLOB) FROM vt0, t1 WHERE (-1055154622 COLLATE RTRIM); -- 0ms;
SELECT ALL ((((t1.c32)-(vt0.c0)))||(CAST(t1.c32 AS BLOB))) FROM vt0 WHERE (UPPER((((x'', 1242865223, 0.6566742172027368)) NOT BETWEEN (('', 1.63995214E9, x'4cb4')) AND (('lkBN	\{d5', '1582318008', 0.7750861349318217)))));SELECT ALL (((- (vt0.c0)))IS(CAST(t1.c55 AS INTEGER))), NULL, (((('9')AND(json_object(t1.c32, NULL))))OR(((((t1.c32)OR(t1.c55)))OR(t1.c32)))) FROM t1;SELECT ALL (((((~ (t1.c32)))AND(((vt0.c0) IS FALSE))))AND((('1912276302') NOTNULL))) FROM vt0 WHERE (CAST((((x'0d2e', NULL, '')) BETWEEN (('', 0.6974370846250526, x'')) AND (('IQ', '702028522', '-1640544271'))) AS INTEGER));SELECT DISTINCT (CAST(vt0.c0 AS NUMERIC) IN ((((vt0.c0))>=((vt0.c0))))) FROM t1;SELECT DISTINCT ((((((((CASE t1.c55  WHEN t1.c32 THEN t1.c32 WHEN t1.c55 THEN t1.c32 WHEN NULL THEN t1.c55 ELSE vt0.c0 END)AND(((t1.c55) NOTNULL))))OR(((t1.c55) BETWEEN (t1.c55) AND (t1.c55)))))OR('' COLLATE RTRIM)))OR(((t1.c55)&('V((qG')))) FROM vt0, t1 WHERE ((- ((NOT ('964590035'))))) GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) NOT NULL), ((((t1.c55)||(vt0.c0)))<=(CAST(vt0.c0 AS TEXT))), CAST(0Xffffffff902c1073 AS REAL) HAVING ((((((((((vt0.c0)OR(t1.c55)))AND(vt0.c0)))OR(t1.c32)))AND(t1.c55)))IS NOT((0.2557710365768152 IN ()))); -- 0ms;
SELECT SUM(((t1.c32) IS FALSE)) FROM vt0 WHERE ((NOT (CAST(NULL AS REAL))));SELECT DISTINCT COUNT(*) OVER () FROM t1, vt0; -- 0ms;
SELECT DISTINCT CAST((~ (vt0.c0)) AS REAL), ((AVG(t1.c55)) BETWEEN (CASE WHEN t1.c55 THEN vt0.c0 ELSE t1.c55 END) AND (CAST(vt0.c0 AS INTEGER))), CASE WHEN vt0.c0 THEN '-186081015' COLLATE RTRIM END FROM vt0 WHERE (IFNULL(((((((((0.4724271341918037)AND('٩0')))AND(x'ba9e')))OR(0X27d41f1d)))OR(NULL)), x'8492'));SELECT DISTINCT (((t1.c32)>('976647505')) IN ()), ((((vt0.c0) IS TRUE)) BETWEEN (t1.c55 COLLATE NOCASE) AND (((vt0.c0) ISNULL))), (CAST(NULL AS INTEGER) IN ((t1.c32 IN ()))) FROM vt0 WHERE ((CAST(0.023481403270429135 AS REAL) IN ()));SELECT ALL (((((((((('7458849') ISNULL))AND(vt0.c0 COLLATE NOCASE)))AND(((x'fe02') NOT BETWEEN (t1.c55) AND (t1.c32)))))OR(CASE t1.c55  WHEN t1.c32 THEN t1.c32 END)))OR(NULL)) FROM vt0 WHERE ((((x'')|('-1082076385')) IN ((((('4i[z]^M孴')AND('grazGkiI!')))AND(-1132869843)))));SELECT DISTINCT NULL FROM vt0 ORDER BY (((((t1.c32, t1.c55, t1.c32, t1.c55, vt0.c0)) BETWEEN ((t1.c55, vt0.c0, t1.c32, 0.8566845718919955, t1.c55)) AND ((t1.c55, vt0.c0, vt0.c0, vt0.c0, NULL))))IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c32))))  NULLS LAST;SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) IS FALSE) FROM vt0, t1 ORDER BY ((0.48407211630858515) NOTNULL) LIMIT 2133973133 OFFSET 0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) BETWEEN (t1.c55 COLLATE BINARY) AND (((((t1.c32)AND(t1.c32)))OR(vt0.c0)))), (((vt0.c0)) BETWEEN ((((((((((((((vt0.c0)OR(t1.c55)))OR('-263169164')))OR(x'')))OR(vt0.c0)))OR(t1.c55)))OR(vt0.c0)))) AND ((NULLIF(t1.c55, vt0.c0)))), t1.c55 FROM t1;SELECT (((t1.c32, t1.c55, t1.c32)) NOT BETWEEN ((((vt0.c0) IS TRUE), COUNT(vt0.c0), CAST(vt0.c0 AS TEXT))) AND ((vt0.c0, MAX(vt0.c0), ''))) FROM vt0;SELECT ALL (((CASE WHEN vt0.c0 THEN t1.c32 END, ((0.39993832146848807) IS TRUE), CAST(vt0.c0 AS NUMERIC)))==((vt0.c0, CAST(t1.c55 AS REAL), ((t1.c32) BETWEEN (vt0.c0) AND (t1.c32))))) FROM vt0, t1; -- 1ms;
SELECT DISTINCT ((((t1.c32 COLLATE RTRIM)OR(NULL)))OR(1854054742)), (~ (COALESCE(t1.c55, t1.c55))), CASE '!G좁\n9Kd	)'  WHEN UNICODE(vt0.c0) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0)>=(vt0.c0)) THEN CASE WHEN t1.c32 THEN vt0.c0 WHEN NULL THEN t1.c32 WHEN t1.c55 THEN vt0.c0 ELSE t1.c32 END WHEN 0.15202123586794647 THEN t1.c32 COLLATE RTRIM ELSE COUNT(*) END FROM t1 WHERE ((LIKELY('9.\X') IN ((('') NOT NULL)))) GROUP BY (((~ (t1.c55))) NOT NULL), ((((vt0.c0) NOTNULL)) BETWEEN (((t1.c55)IS(t1.c55))) AND ((t1.c55 IN ()))), ((((0.5918467525052644)OR(CASE t1.c55  WHEN t1.c55 THEN t1.c32 WHEN vt0.c0 THEN t1.c32 WHEN 0xffffffff8ba0c04e THEN vt0.c0 WHEN t1.c55 THEN vt0.c0 WHEN vt0.c0 THEN 0.24280143207673677 ELSE vt0.c0 END)))AND(((t1.c32)/('GIDRC'))));SELECT CASE ((t1.c55)OR(t1.c32))  WHEN NULL THEN -1943537395 END FROM t1 WHERE ((((x'')) NOT BETWEEN ((CAST(NULL AS INTEGER))) AND ((LENGTH('-308167927'))))); -- 0ms;
SELECT DISTINCT CASE 0.3130595714682144  WHEN CAST(t1.c32 AS TEXT) THEN ((((((((t1.c55)AND(vt0.c0)))OR('-1450184105')))OR(vt0.c0)))AND(vt0.c0)) ELSE ((vt0.c0)<(t1.c32)) END, t1.c55, AVG(((((t1.c32)AND(vt0.c0)))AND(t1.c32))), ((CASE WHEN '2046139536' THEN t1.c55 END)IS NOT(CAST(vt0.c0 AS TEXT))), TIME((t1.c55 IN ()), (x'6033' IN (vt0.c0)), ((t1.c55) NOT NULL)), NTH_VALUE(CASE '-616636828'  WHEN ((vt0.c0)>=(vt0.c0)) THEN ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) ELSE vt0.c0 END, NULL) OVER (), CAST(AVG(vt0.c0) AS BLOB) FROM vt0 WHERE ((((0.0 IN ())) BETWEEN ((('l') BETWEEN ('0.6164503252834248') AND (x''))) AND (CASE WHEN NULL THEN -804338250 ELSE x'' END)));SELECT DISTINCT (- (((t1.c55)>>(t1.c32)))) FROM t1, vt0; -- 0ms;
SELECT CASE WHEN '\rtE?PY' THEN (t1.c55 IN ()) END FROM t1, vt0 WHERE (CASE WHEN (NULL IN ()) THEN ((x'')IS(x'')) END); -- 0ms;
SELECT ABS(((t1.c32) NOT BETWEEN (t1.c55) AND (vt0.c0))) FROM t1, vt0 WHERE (((x'beef' COLLATE NOCASE)>(CASE WHEN NULL THEN NULL END))); -- 0ms;
SELECT DISTINCT CAST(TOTAL_CHANGES() AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT t1.c55 FROM vt0, t1 WHERE (CASE 5.73820849E8 COLLATE RTRIM  WHEN ((x'') BETWEEN ('') AND (x'')) THEN (- ('')) WHEN (NOT (0x412381fa)) THEN ((x'e198') NOT NULL) WHEN ((-3.1471089E8) IS FALSE) THEN (('-1164596086') BETWEEN (NULL) AND (0.19888114592795758)) ELSE UNLIKELY(NULL) END); -- 0ms;
SELECT DISTINCT (((0.9724074281011911 COLLATE NOCASE))<=((((vt0.c0)+(vt0.c0))))), COUNT(CASE WHEN x'b988' THEN t1.c55 ELSE vt0.c0 END) OVER (), SUM(CASE t1.c55  WHEN t1.c32 THEN vt0.c0 WHEN t1.c32 THEN t1.c32 WHEN vt0.c0 THEN t1.c32 END) OVER () FROM vt0, t1; -- 0ms;
SELECT ALL (((((vt0.c0) BETWEEN (t1.c32) AND (t1.c32)), TYPEOF(t1.c55), (('0.43564013889075914')/(t1.c32))))>((CASE vt0.c0  WHEN t1.c55 THEN vt0.c0 END, CAST(t1.c32 AS TEXT), t1.c32 COLLATE BINARY))) FROM vt0;SELECT CAST(((t1.c55)>(t1.c32)) AS REAL) FROM t1, vt0; -- 0ms;
SELECT ALL ((TOTAL('PfOwz[')) IS FALSE) FROM vt0 WHERE ((((0X4fab5b25)) NOT BETWEEN (((0.4259619173032526 IN ()))) AND ((JULIANDAY(1.198184112E9, x'', NULL))))); -- 0ms;
SELECT DISTINCT CAST((t1.c55 IN (t1.c32)) AS BLOB) FROM t1, vt0; -- 0ms;
SELECT DISTINCT (- (t1.c55)) FROM t1, vt0; -- 0ms;
SELECT DISTINCT t1.c32 FROM vt0, t1; -- 0ms;
SELECT ALL CAST((((t1.c32)) NOT BETWEEN ((t1.c32)) AND ((vt0.c0))) AS BLOB), ((((((((((((CASE vt0.c0  WHEN vt0.c0 THEN t1.c32 ELSE vt0.c0 END)AND(((t1.c32) IS FALSE))))AND(((t1.c32) BETWEEN (t1.c32) AND (t1.c32)))))AND((t1.c32 IN ()))))AND(LIKELY(t1.c32))))AND(vt0.c0 COLLATE RTRIM)))AND('2089358595809143823T712 ' COLLATE RTRIM)), t1.c55 FROM t1, vt0 WHERE ((NOT (((x'') NOTNULL)))) GROUP BY (((vt0.c0 IN ())) IS FALSE); -- 0ms;
SELECT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))%(NULLIF(DISTINCT '', vt0.c0))), SUM((t1.c32 IN ())) OVER (), ((((vt0.c0) BETWEEN (vt0.c0) AND (t1.c32)))IS((((t1.c55, vt0.c0, t1.c55)) NOT BETWEEN ((t1.c55, vt0.c0, t1.c32)) AND ((t1.c32, vt0.c0, vt0.c0))))) FROM t1, vt0; -- 1ms;
SELECT DISTINCT MAX(((t1.c32) NOTNULL)) FROM t1 WHERE ('VMYnX' COLLATE NOCASE) ORDER BY (((vt0.c0, t1.c32, t1.c32, t1.c32, t1.c32)) BETWEEN ((COALESCE(DISTINCT 828964320, t1.c32), '-1236979473', (NULL IN ()), (t1.c55 IN ()), (t1.c32 IN ()))) AND ((((t1.c55) BETWEEN (t1.c55) AND (t1.c32)), (((t1.c32))<=((vt0.c0))), (+ (t1.c32)), ((t1.c55) NOTNULL), ((t1.c32)||(t1.c55))))) DESC  NULLS LAST;SELECT (((vt0.c0)) NOT BETWEEN ((((t1.c55) NOT BETWEEN (t1.c55) AND (t1.c55)))) AND ((CAST(t1.c55 AS INTEGER)))) FROM vt0, t1 WHERE (((CAST('' AS INTEGER)) IS TRUE)); -- 0ms;
SELECT DISTINCT '' FROM t1 ORDER BY TYPEOF(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t1.c55 WHEN t1.c55 THEN vt0.c0 END) ASC  NULLS LAST;SELECT ALL ((((t1.c32)IS(t1.c55))) NOTNULL) FROM t1 WHERE ((((x'6b1d')) BETWEEN ((CASE WHEN 'bw' THEN NULL WHEN '0.853751020902358' THEN 0.5878516199077511 WHEN NULL THEN x'' END)) AND ((('' IN ()))))); -- 0ms;
SELECT DISTINCT NTILE((((('(')AND((t1.c55 IN (t1.c32)))))OR(t1.c55))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (((((vt0.c0, t1.c32, vt0.c0)) BETWEEN ((t1.c32, t1.c32, t1.c55)) AND ((0Xffffffffed3de496, vt0.c0, NULL))))||(NULL)), COUNT(*), ((NULL)IS(((t1.c55)!=(vt0.c0)))), (NOT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))) FROM t1 WHERE (((json_quote(NULL))-((((x'2a4bc6c9'))>=((' 6Nu|1'))))));SELECT DISTINCT CUME_DIST() OVER ( GROUPS ((t1.c32) BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (t1.c55))) AND (vt0.c0 COLLATE RTRIM)) PRECEDING), CASE WHEN vt0.c0 COLLATE RTRIM THEN LENGTH(-1007851638) WHEN ((t1.c32)LIKE(t1.c55)) THEN AVG(t1.c32) WHEN ((((((((vt0.c0)AND(t1.c55)))OR(x'')))OR(t1.c32)))OR(t1.c55)) THEN (t1.c55 IN ()) END, CAST('41041862' AS TEXT) FROM vt0, t1 LIMIT -1176663368; -- 0ms;
SELECT COUNT(*) OVER (), vt0.c0, (+ ((NOT (t1.c55)))) FROM vt0, t1 WHERE ((((((('-243566317', '2046139536', '1264917533'))>((0.7926205440901368, NULL, 0.0701089477055431)))))>((CAST('r]>9' AS REAL))))); -- 0ms;
SELECT '' FROM t1, vt0 WHERE ((+ ((('B708&)x') NOT BETWEEN (x'') AND (0.44666431915719107))))) ORDER BY ((((('0.7899791586476765')) NOT BETWEEN (('WA-k%aEG')) AND ((t1.c55)))) NOT BETWEEN (TYPEOF(t1.c55)) AND (SUBSTR(t1.c32, vt0.c0)))  NULLS LAST LIMIT 65477418 OFFSET -1947306839; -- 1ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)>>(CAST(t1.c32 AS REAL))), (~ (GROUP_CONCAT(t1.c55))), RANK() OVER () FROM vt0, t1 WHERE (UNICODE(-9851837 COLLATE RTRIM)) GROUP BY (((x'') BETWEEN (vt0.c0) AND (t1.c32)) IN ()); -- 0ms;
SELECT (((vt0.c0))>=(((0.8004901745913159 IN ())))) FROM vt0 WHERE (((CAST(NULL AS REAL))LIKE(((((NULL)OR(0x187bd1e1)))AND(NULL))))); -- 0ms;
SELECT DISTINCT COUNT(CAST(t1.c55 AS BLOB)) OVER ( ORDER BY (((~ (vt0.c0)))>=((((vt0.c0, t1.c55, '0.2563534364540957')) BETWEEN ((vt0.c0, t1.c32, vt0.c0)) AND ((t1.c32, vt0.c0, t1.c32)))))  NULLS FIRST) FROM vt0, t1 GROUP BY t1.c55 HAVING CASE WHEN (+ (t1.c32)) THEN CAST(t1.c32 AS TEXT) ELSE '' END; -- 0ms;
SELECT (t1.c55 IN (((((t1.c32)AND(vt0.c0)))AND(0.42828814989754316)))), CASE (vt0.c0 IN (t1.c32))  WHEN ((t1.c55)>>(NULL)) THEN ((t1.c55)IS NOT(t1.c55)) END, ((((t1.c55)AND(x'ba05')))OR(vt0.c0)) COLLATE NOCASE FROM vt0, t1 WHERE (((('1004213101'))=((NULL))) COLLATE BINARY) ORDER BY '-1933073853', CASE WHEN vt0.c0 COLLATE RTRIM THEN ((vt0.c0) BETWEEN (vt0.c0) AND (t1.c55)) ELSE CASE WHEN t1.c55 THEN t1.c32 END END, ((((vt0.c0)-(t1.c55)))<=(t1.c32)); -- 0ms;
SELECT ALL (((t1.c32)) NOT BETWEEN ((TRIM(vt0.c0, t1.c55))) AND ((((((t1.c55)AND(x'')))OR(t1.c55))))), CAST(CAST(vt0.c0 AS INTEGER) AS INTEGER), ((((t1.c32)<(t1.c55)))!=((('-463757421') IS FALSE))) FROM t1, vt0 WHERE ((+ (((x'') NOT BETWEEN (x'') AND (-2003577663))))) GROUP BY CAST(((t1.c32) ISNULL) AS BLOB), ('-1392999280' IN ()), HEX(UNICODE(t1.c55)) ORDER BY CASE ((vt0.c0)>>(t1.c55))  WHEN (NOT (t1.c32)) THEN (('823506391')*(t1.c32)) WHEN ((t1.c55)*(t1.c55)) THEN ((0.5251510448213259)<=(t1.c32)) WHEN CASE WHEN vt0.c0 THEN t1.c55 ELSE t1.c32 END THEN json_type(t1.c55) WHEN (t1.c55 IN (vt0.c0)) THEN ((t1.c32)*(0xffffffffe6db6451)) WHEN ((vt0.c0)||(t1.c32)) THEN CAST(t1.c55 AS NUMERIC) WHEN SQLITE_VERSION() THEN ((t1.c55) IS TRUE) WHEN '584134403' THEN ((NULL)*(t1.c32)) ELSE (- (t1.c55)) END DESC  NULLS FIRST, (((((t1.c55) NOT NULL)))>=(((((t1.c55)) NOT BETWEEN ((t1.c32)) AND ((t1.c55)))))), (- ((vt0.c0 IN ()))); -- 0ms;
SELECT DISTINCT (((CAST(t1.c55 AS REAL)))==((CAST(t1.c32 AS REAL)))) FROM t1 WHERE ('>HM''!9'); -- 0ms;
SELECT DISTINCT ((((((((CASE t1.c32  WHEN t1.c32 THEN t1.c32 WHEN t1.c55 THEN t1.c32 WHEN vt0.c0 THEN t1.c55 WHEN t1.c32 THEN t1.c55 WHEN t1.c55 THEN vt0.c0 ELSE t1.c55 END)OR((vt0.c0 IN ()))))OR('')))OR(CASE t1.c32  WHEN t1.c32 THEN vt0.c0 ELSE t1.c32 END)))AND('vVsuF-')) FROM vt0;SELECT DISTINCT ((vt0.c0) NOT BETWEEN (t1.c55) AND (-565172122)) COLLATE RTRIM FROM vt0, t1 WHERE (LTRIM((NOT (-2.007556946E9)), ((0x2748401)LIKE('wl|䨶m摑d')))); -- 0ms;
SELECT DISTINCT (((- (t1.c55))) NOT NULL), NTILE(CAST(vt0.c0 AS INTEGER) COLLATE RTRIM) OVER ( ORDER BY 1.65862382E8), CAST(TYPEOF(vt0.c0) AS TEXT) FROM vt0;SELECT DISTINCT NULL, ((CASE WHEN vt0.c0 THEN x'' END)-(UPPER(0.81341361664379))), MAX(MAX(t1.c55, t1.c32)) FROM t1, vt0; -- 2ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT)) NOT BETWEEN (((t1.c32)>>(0xffffffffe31fe344))) AND (((t1.c55)==(t1.c32)))), (((((t1.c32 IN ()))AND((t1.c32 IN ()))))OR(((vt0.c0)OR(t1.c32)))), ((UPPER(t1.c32))IS NOT((vt0.c0 IN ()))) FROM t1;SELECT DISTINCT ((((0.3765118774711016) IS TRUE)) NOT NULL), ((t1.c32 COLLATE RTRIM)||(vt0.c0 COLLATE NOCASE)), NTH_VALUE(NULL, ((vt0.c0)>=(t1.c55)) COLLATE NOCASE) OVER ( GROUPS (('') NOT BETWEEN (((t1.c32)<=(t1.c32))) AND (((((t1.c32)OR(vt0.c0)))OR(vt0.c0)))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 NOT INDEXED, t1 NOT INDEXED WHERE (TYPEOF((('-685958975')IS NOT('-2034872621')))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t1 NOT INDEXED; -- 0ms;
SELECT AVG(((vt0.c0)IS(t1.c55))) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM t1 WHERE (UPPER(LOWER(NULL)));SELECT DISTINCT (t1.c55 IN ()) FROM vt0 LIMIT 2004251365; -- 0ms;
SELECT DISTINCT CAST(((t1.c32)||(t1.c32)) AS REAL), ((t1.c32 IN ()) IN (0.044094900257715786)), MIN((((t1.c32, t1.c32, t1.c55))>=((vt0.c0, x'', t1.c32)))) FROM t1, vt0 WHERE (((((((((((0Xdae679a)IS NOT('6Bu)|%')))AND(((('0.6127484645392786'))>=(('1293443687'))))))OR(((-1849188912)/('-1730268731')))))OR(((('~'))<=((NULL))))))OR((x'' IN ())))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), PERCENT_RANK() OVER (), ((CASE vt0.c0  WHEN t1.c32 THEN vt0.c0 WHEN t1.c32 THEN 0.020238724383048745 WHEN vt0.c0 THEN vt0.c0 END) ISNULL), ((LIKELIHOOD(DISTINCT '-213457887', 0.4065674106663364))-(((NULL)&(t1.c55)))), AVG(((((vt0.c0)AND(vt0.c0)))OR(t1.c55))) FROM vt0, t1 WHERE (NULL) ORDER BY ((t1.c32) ISNULL), CAST((((vt0.c0)) NOT BETWEEN ((t1.c55)) AND ((vt0.c0))) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t1.c32, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, '-680175313', t1.c55)) AND ((t1.c55, vt0.c0, t1.c55))) COLLATE NOCASE, ROUND(((((t1.c32)OR(vt0.c0)))AND(t1.c55)), CAST(t1.c55 AS REAL)), ((((t1.c55) NOTNULL)) ISNULL) FROM vt0 WHERE ((((NULL) ISNULL) IN ()));SELECT ((CAST(t1.c55 AS INTEGER))/((((t1.c32))>((vt0.c0))))), ((((((((((vt0.c0)AND(vt0.c0)))OR(((((820667151)AND(t1.c32)))AND(vt0.c0)))))AND(load_extension(vt0.c0))))OR(COALESCE(vt0.c0, vt0.c0, vt0.c0, t1.c55))))OR(((t1.c32) NOT NULL))), SUM(CASE vt0.c0  WHEN t1.c32 THEN t1.c55 WHEN t1.c32 THEN t1.c55 WHEN vt0.c0 THEN t1.c32 ELSE vt0.c0 END) FROM t1, vt0;SELECT ALL (- (((NULL)IS(NULL)))), t1.c55, (((vt0.c0 IN ())) ISNULL) FROM vt0 WHERE (LIKE(-7.0056786E8, 'k>FjBi', 'g') COLLATE BINARY);SELECT (~ ((NOT ('')))) FROM t1, vt0 LIMIT -1546551758 OFFSET -118753225; -- 0ms;
SELECT ALL ((CASE WHEN t1.c32 THEN t1.c32 WHEN t1.c32 THEN vt0.c0 WHEN t1.c55 THEN vt0.c0 WHEN t1.c32 THEN vt0.c0 WHEN vt0.c0 THEN t1.c32 ELSE t1.c55 END)IS((~ (t1.c55)))) FROM t1, vt0; -- 0ms;
SELECT ALL ((CAST(t1.c55 AS INTEGER))>>(COUNT(vt0.c0))), json_object((((t1.c55, t1.c55, vt0.c0))>=((t1.c32, vt0.c0, vt0.c0))), (((vt0.c0))>=((vt0.c0))), ((vt0.c0)LIKE(vt0.c0)), ((((t1.c32)AND(vt0.c0)))AND(vt0.c0))), (+ ((((((((('-26976913')OR(x'')))OR('964590035')))OR(t1.c32)))AND(0.4913593165246465)))) FROM vt0, t1 WHERE (((((0.7228170989707263)OR(NULL)))AND(0.021644777819465943)) COLLATE RTRIM) ORDER BY t1.c55;SELECT ((((vt0.c0) NOT BETWEEN (t1.c55) AND (vt0.c0))) ISNULL), ((((COALESCE(DISTINCT vt0.c0, t1.c55))OR(((((vt0.c0)OR(t1.c32)))OR(t1.c32)))))AND(SUM(vt0.c0))), (((t1.c32)) BETWEEN ((t1.c55)) AND ((('0.6266339025109164' IN ())))) FROM t1, vt0 ORDER BY CAST(t1.c32 AS INTEGER) ASC; -- 1ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN -1.876160397E9 WHEN vt0.c0 THEN vt0.c0 WHEN NULL THEN t1.c32 END) NOT BETWEEN (((((vt0.c0)OR(t1.c55)))AND(t1.c32))) AND (GROUP_CONCAT(vt0.c0))) FROM t1 WHERE ((((('-1852818966') NOTNULL))*((~ (NULL)))));