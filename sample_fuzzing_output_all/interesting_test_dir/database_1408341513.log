-- Time: 2024/06/07 02:42:55
-- Database: database13
-- Database version: 3.40.0
-- seed value: 1408341513
PRAGMA cache_size = 50000; -- 6ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED, c1, c2, c3, order=DESC, languageid="lid"); -- 0ms;
ANALYZE temp; -- 0ms;
INSERT OR REPLACE INTO vt1(lid) VALUES (x''), (''), (''), (0.8377492112151568), (0x6f180156); -- 0ms;
INSERT OR ROLLBACK INTO vt1(c2, lid, c0, c1, c3) VALUES ('1863844182', NULL, x'0969', '-1462237948', 0Xffffffffe67fd462); -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
ANALYZE vt1; -- 0ms;
UPDATE rt0 SET c1='1795390001'; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c1, c0) VALUES (x'', NULL, x'9ac0'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0, c2, c3, c1) VALUES (NULL, '', 0.6370875431928006, x''); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c2, c0) VALUES ('', x'', NULL), ('uSP	Q/tnv', '93731211', x'4fb3'), ('1863844182', '-1462237948', 1829860031); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, 460953355, '658730263'), ('', '', '0.6370875431928006'), (x'', NULL, '#R8}eI95'), (0.6370875431928006, -1374150801, x''), ('0.6370875431928006', NULL, -427830174); -- 0ms;
INSERT OR IGNORE INTO vt1(c1, lid, c2, c0) VALUES (0.34471656246369753, NULL, 0x5a57f551, x'703b'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt1(lid, c1, c3, c2) VALUES (-8575565, '', 0.2232445765578981, 0.7695311662011998); -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES (0.4257640330333722, '1515713873'); -- 0ms;
INSERT OR ABORT INTO vt1 VALUES ('C1yr(', NULL, 0.8408334242278633, '', 0.6370875431928006); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES (9.3731211E7, x'', NULL); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
INSERT OR FAIL INTO rt0(c1) VALUES (0xffffffffffbd9e01); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA journal_mode = DELETE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO vt1(lid) VALUES (NULL); -- 0ms;
UPDATE rt0 SET (c0)=(0.09720482924330598) WHERE (((((rt0.c0))>((rt0.c2)))) NOT NULL); -- 1ms;
UPDATE OR FAIL vt1 SET c1=x'7a9c'; -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (((((((((((NULL) NOT NULL))OR(((x'')<<(x'')))))OR('635095834')))AND(('-1211536364' IN ()))))OR(CASE x''  WHEN 0.7078155268509358 THEN '0.34471656246369753' END))); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA temp.journal_mode = PERSIST; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
INSERT OR ABORT INTO rt1 VALUES (-503014750, x'0c17', NULL); -- 0ms;
COMMIT; -- 1ms;
UPDATE OR REPLACE vt1 SET (c3)=('uSP	Q/tnv'); -- 1ms;
PRAGMA temp.default_cache_size; -- 0ms;
INSERT OR FAIL INTO rt0(c0, c1) VALUES (NULL, '1863844182'), (NULL, 0.8377492112151568), ('0.34471656246369753', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0) VALUES ('-427830174'), (NULL), (93731211); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c0) VALUES ((((((('487337832') BETWEEN (NULL) AND ('302253840')))AND(('-4350463' IN ()))))OR((NULL IN (311602028)))), NULL), (0.2232445765578981, x''), (x'8ead', 0xffffffffb4da616f); -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'1784', x'', '1742099015'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES ('', '-1733267759', 'qﺪKC'), (0.6054320043427416, '', 0.16796505796736272), (0.09720482924330598, NULL, x''); -- 0ms;
INSERT OR IGNORE INTO vt1(lid, c0, c1, c2) VALUES (0.08335940494395133, 0.9481166142908717, 0.6184338714216769, 0.8004691090473322), (x'', x'', 0Xebe1f34, x'6f16'), (x'cf8c', '-1614580271', 487337832, 0.6184338714216769); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2) VALUES ('1563882296', 0.2232445765578981), (0.18685217957975442, '-1717668910'), (0.18614172576629118, x''); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=NULL; -- 0ms;
COMMIT; -- 1ms;
INSERT OR IGNORE INTO vt1(c1, c2, c3) VALUES ('-729848543', NULL, '-1121930432'), (-1983589842, 0.18346286497942565, NULL), (x'', 0.8843075503091495, 0.09720482924330598), (x'50e2', '-1598881456', x'ed81'), ('', 0.5165262304177116, 0.20309579637333264); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE rt1 SET (c1)=(x'ea36'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1(c2, c3, c1, c0, lid) VALUES (x'', (((NOT ('usp	q/tnv'))) IS FALSE), '', NULL, NULL); -- 0ms;
ANALYZE; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'sqlite_autoindex_vt1_segdir_1', '0 sz=-503014750 noskipscan'); -- 0ms;
PRAGMA temp.legacy_file_format = true; -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1, c3, lid, c2) VALUES (x'', 0.9852096731245903, '()', NULL); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c1) VALUES ('247340852', -1.374150801E9), ('Y0X)xu', x''), (0.9982739083407507, x'd7c1'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt1 SET (c3)=(0Xffffffff839aa0e7); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c0, c1) VALUES ('iVwkZA', 0.16440454366101875, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c1) VALUES ('\Kx'), (-731743140), ('0.6370875431928006'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c2)=(''); -- 0ms;
ANALYZE; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (-4.27830174E8), ((((x'' IN (x''))) BETWEEN (((x'30b7')>(0.12242146827025102))) AND ((('-846506582')==(0.28824935635461013))))), (NULL); -- 1ms;
INSERT OR REPLACE INTO vt1(c3, c1, c0) VALUES (x'', x'', 0.16622103228713803); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(''); -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c2, c0) VALUES (x'', NULL, '-1121930432'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
CREATE TABLE t0 (c0 INT  CHECK ( (((((c0)|(c0))))<=((((((c0)OR(c0)))OR(c0))))))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES ('1742099015', 0.2400839083061752); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX NOCASE; -- 0ms;
UPDATE OR IGNORE vt1 SET (lid)=(NULL); -- 5ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 3); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c50; -- 1ms;
UPDATE OR REPLACE vt1 SET (c1, c3)=(x'', '屛x') WHERE ((((vt1.c3)||('458283954')))GLOB(((((vt1.c0)OR(vt1.c1)))OR(vt1.c1)))); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CASE WHEN ((vt1.c2) BETWEEN (rt1.c0) AND (vt1.c0)) THEN ((t0.c50) IS FALSE) END FROM rt0, vt1, rt1, t0; -- 1ms;
SELECT ALL ((((rt1.c2)!=(rt0.c2))) NOT NULL) FROM t0 WHERE (NULL);SELECT rt0.c2 FROM t0, vt1, rt1, rt0 WHERE ((((((0x22dc623f)>('br'))))!=((CASE WHEN NULL THEN 'lHVp!4k''' ELSE NULL END)))) ORDER BY '#R80eI95'  NULLS LAST; -- 0ms;
SELECT DISTINCT SUM(rt0.c2) FROM rt1, rt0 WHERE (((x'') ISNULL)); -- 0ms;
SELECT DISTINCT (('-1759723345')&(((vt1.c1)|(vt1.lid)))) FROM t0, rt0, vt1, rt1 WHERE ((((((NULL IN (0.9375844436847847)))AND(CAST(-563356819 AS BLOB))))OR(CAST(x'' AS REAL)))); -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((vt1.c3 COLLATE BINARY)) AND ((((((((((((((vt1.c1)OR(rt1.c1)))AND(vt1.c3)))OR(vt1.c0)))AND(rt1.c2)))OR(vt1.c3)))OR(vt1.c1))))) FROM rt1, t0, vt1 WHERE (((('' IN ()))<<(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT MAX(t0.c50 COLLATE NOCASE) COLLATE NOCASE FROM t0, vt1, rt0, rt1; -- 0ms;
SELECT DISTINCT ((vt1.c0) ISNULL) FROM vt1, t0 WHERE (CASE ((('1563882296', NULL, '-1598881456'))!=((NULL, x'', '736136637')))  WHEN ((x'ce40') IS TRUE) THEN (NULL IN ()) END); -- 0ms;
SELECT DISTINCT rt1.c2 FROM vt1, t0;SELECT DISTINCT CASE WHEN TRIM(DISTINCT '741757910') THEN CAST(vt1.lid AS TEXT) ELSE CASE WHEN vt1.lid THEN NULL ELSE 0.31751041519878387 END END, (((t0.c50)) NOT BETWEEN (((NOT (vt1.c3)))) AND ((CAST(rt1.c1 AS REAL)))), ((((vt1.c2) ISNULL)) NOT BETWEEN (((vt1.c2) ISNULL)) AND (((vt1.c3) NOT BETWEEN (vt1.c1) AND (vt1.c0)))), vt1.c3, LAST_INSERT_ROWID() FROM t0, vt1;SELECT '-1719310575' FROM rt1 LEFT OUTER JOIN vt1 ON LOWER(((vt1.c3)<=(rt1.c2))) WHERE (NULLIF(DISTINCT ((x'') BETWEEN (-1.682547621E9) AND (NULL)), CASE NULL  WHEN '635095834' THEN '.f\nB' END)); -- 0ms;
SELECT ALL CASE WHEN (- ('n')) THEN (rt1.c1 IN (vt1.c1, rt1.c2)) END FROM t0;SELECT DISTINCT 0.9701490264343635, HEX(CAST(rt1.c2 AS BLOB)), CASE WHEN CAST(rt0.c0 AS BLOB) THEN NULLIF(vt1.c1, '0.28824935635461013') END FROM vt1;SELECT ((((((rt1.c2) NOT NULL))AND(MAX(rt1.c2))))OR(((((vt1.c0)OR(vt1.c2)))OR(vt1.c0)))) FROM vt1;SELECT DISTINCT 0.7235058607398447 FROM rt1, vt1, rt0 WHERE (CAST((((('1515713873')AND('()')))OR('u[')) AS BLOB)); -- 0ms;
SELECT DISTINCT -7.6762351E8 FROM rt1, t0, vt1 GROUP BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND (((vt1.c2 IN ()))));SELECT DISTINCT ((((vt1.c1) ISNULL)) IS FALSE), GROUP_CONCAT((NOT (rt1.c1))) OVER (), AVG((+ (rt0.c1))) OVER () FROM vt1;SELECT ((ABS(DISTINCT x''))%(NULL)) FROM t0, rt0; -- 0ms;
SELECT CAST(((((rt1.c1)AND(vt1.c0)))OR(0.7695311662011998)) AS INTEGER) FROM rt1 GROUP BY ((((rt1.c2, rt1.c1, x'c8b3'))!=(('1495050058', rt1.c2, rt1.c1))) IN (CASE rt1.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c2 END));SELECT DISTINCT AVG(((((vt1.c3)AND(rt1.c1)))OR(vt1.lid))) FROM vt1, rt1 WHERE ((NOT ('' COLLATE BINARY))) GROUP BY TYPEOF(DISTINCT (rt0.c1 IN ())), CASE WHEN json_extract(vt1.c0, rt1.c0, t0.c50, rt1.c1) THEN rt0.c1 COLLATE NOCASE WHEN ((rt1.c2)%(rt0.c1)) THEN rt0.c1 WHEN x'' COLLATE NOCASE THEN HEX(vt1.lid) END, (CAST(vt1.c3 AS REAL) IN ()) HAVING (((vt1.c2)) BETWEEN ((((t0.c50) BETWEEN ('w댞') AND (rt1.c2)))) AND ((CASE WHEN vt1.c1 THEN rt0.c0 WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt1.c0 ELSE rt0.c0 END)));SELECT DISTINCT ((vt1.c3)<(t0.c50)), json_array_length(rt0.c1) COLLATE NOCASE, CAST(((vt1.c2) NOT NULL) AS BLOB), ((((rt1.c2)|(rt1.c1)))AND((~ (vt1.c2)))), x'' FROM rt1, vt1, rt0, t0; -- 1ms;
SELECT CAST(vt1.c1 AS REAL) COLLATE BINARY FROM rt0;SELECT DISTINCT ((((vt1.c0)<<(rt1.c1))) IS FALSE), CASE rt0.c0 COLLATE NOCASE  WHEN rt1.c0 COLLATE BINARY THEN ((rt1.c1)>(vt1.lid)) ELSE ((t0.c50) NOTNULL) END, COUNT(*) FROM rt0, rt1 WHERE ((((NOT (0x22dc623f))) NOTNULL)) ORDER BY 0Xffffffffbb7de2c3;SELECT DISTINCT ((((rt1.c0)==(vt1.c1)))<((vt1.c3 IN ()))) FROM rt1, vt1, t0 WHERE (((x'8ec001a2' COLLATE BINARY)||((('!wD*H-[]1208:117 1009 -7692895216733435811 1542:574: ~') BETWEEN ('93731211') AND (-1733267759))))); -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt1.c0)) THEN (((rt1.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c3))) ELSE (((vt1.c0))<((rt0.c1))) END FROM rt1 WHERE (((((((((((NULL)OR(1.795390001E9)))AND(x'')))OR(NULL)))OR(0.4092836961712738)))||(CAST(NULL AS TEXT))));SELECT DISTINCT TRIM(CAST(rt0.c1 AS REAL)), COUNT((NOT (rt1.c0))) OVER (), (NOT (COUNT(vt1.lid))) FROM rt1, vt1;SELECT DISTINCT ((((rt0.c1) BETWEEN (0.3037669298323453) AND (vt1.lid)))<<(((t0.c50)/(rt1.c1)))) FROM rt0, t0, vt1, rt1 WHERE (((CASE WHEN '' THEN x'5be0' WHEN x'' THEN 0.18614172576629118 WHEN '619218213' THEN '' ELSE 0Xffffffffffbd9e01 END)IS NOT(((x'') NOT BETWEEN (NULL) AND (NULL))))); -- 1ms;
SELECT AVG(((rt0.c2)>=(rt1.c2))) OVER (), CAST(CAST(rt0.c2 AS TEXT) AS BLOB), GROUP_CONCAT(((((vt1.c0)AND(rt0.c2)))OR(rt0.c1))) FROM rt0, t0;SELECT ALL AVG(((vt1.c0) BETWEEN (rt0.c2) AND (1742099015))) OVER () FROM rt0, rt1;SELECT ((((((t0.c50)AND(vt1.c2)))AND(NULL))) NOT BETWEEN (TYPEOF(rt0.c1)) AND (0.48314921571821556 COLLATE NOCASE)) FROM rt1, vt1, t0 WHERE (NULL COLLATE BINARY);SELECT DISTINCT ((((6.35095834E8) IS FALSE))+(((x'') NOT NULL))), json_valid((vt1.c3 IN (t0.c50))), ((((((((((rt1.c1)OR(vt1.c1)))OR(NULL)))OR(vt1.c0)))OR(rt0.c0))) BETWEEN ((((('-731743140')OR(rt1.c1)))AND(rt0.c1))) AND (((rt0.c1)%(t0.c50)))) FROM vt1, rt0, t0, rt1 WHERE (((NULL)GLOB(NULL)) COLLATE NOCASE) LIMIT -1717668910; -- 0ms;
SELECT ((((((vt1.c0) IS TRUE))OR(((((((((((((rt1.c0)AND(rt1.c0)))OR(vt1.lid)))OR(x'')))OR(vt1.c1)))AND(vt1.c1)))OR(NULL)))))OR(((((((((rt1.c1)AND(t0.c50)))OR('')))OR(rt0.c1)))AND(rt1.c1)))) FROM t0, rt1, vt1 WHERE (0.20309579637333264);SELECT CAST(((vt1.c0)<=(vt1.c2)) AS INTEGER) FROM vt1, t0, rt0 WHERE ((0x4443355d COLLATE BINARY IN ((-5.0301475E8 IN ())))) LIMIT 93455450; -- 0ms;
SELECT DISTINCT (((MAX(rt0.c1)))<=((CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))) FROM rt0, rt1 WHERE (((((('{[', NULL, 'nVZY3llК'))<=((x'6f67', x'', '-729848543')))) BETWEEN (CASE NULL  WHEN x'1057' THEN 788354039 END) AND ((NULL IN ())))); -- 0ms;
SELECT ALL MAX((~ (vt1.lid))) FROM rt0 WHERE (CAST(((x'b374') NOT BETWEEN ('ziJ 朑BI\nB') AND (NULL)) AS REAL));SELECT DISTINCT CAST(CASE WHEN 0.5165262304177116 THEN rt0.c1 ELSE rt1.c1 END AS BLOB) FROM rt1, rt0, vt1, t0; -- 1ms;
SELECT ALL '-729848543' COLLATE RTRIM, ((rt0.c0 COLLATE BINARY)AND((- (rt1.c0)))), ((TYPEOF(DISTINCT rt0.c0)) BETWEEN (rt1.c0 COLLATE RTRIM) AND (((((rt1.c0)AND(rt1.c2)))OR(vt1.lid)))) FROM t0, rt0;SELECT DISTINCT '-1121930432' FROM rt1, t0, rt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT COUNT(TOTAL(((((rt1.c2)AND(vt1.c1)))OR(rt1.c0)))), TOTAL(COUNT(*)), (+ ((((rt0.c0, rt0.c2, vt1.lid, vt1.c0, t0.c50))<>((vt1.c3, rt0.c1, rt1.c1, rt0.c2, vt1.c3))))) FROM rt0, rt1, t0, vt1 WHERE (UPPER(DISTINCT x'd755'));SELECT (((~ (vt1.c1))) BETWEEN ((vt1.lid IN ())) AND (((((vt1.c1)OR(rt1.c1)))AND(vt1.lid)))), CASE CAST(vt1.lid AS TEXT)  WHEN CAST(t0.c50 AS INTEGER) THEN (- (vt1.lid)) ELSE CAST(vt1.lid AS REAL) END, ((((vt1.c2)OR(vt1.c2 COLLATE NOCASE)))OR(MIN(t0.c50))) FROM rt0, t0, rt1, vt1; -- 1ms;
SELECT ALL ((((rt0.c0)<(rt0.c1))) BETWEEN (((((((((rt0.c1)AND(vt1.c2)))OR(rt1.c2)))AND(vt1.c3)))OR(vt1.c2))) AND (CAST(rt0.c2 AS NUMERIC))), (((0.06492728538214654, vt1.c3, vt1.c2)) BETWEEN ((rt0.c2, ((((t0.c50)AND(vt1.lid)))AND(vt1.c1)), CAST(vt1.c0 AS TEXT))) AND ((vt1.c2 COLLATE BINARY, CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 ELSE vt1.c1 END, CASE WHEN rt0.c2 THEN vt1.lid ELSE vt1.c1 END))), CAST((~ (vt1.c0)) AS BLOB) FROM t0, rt0;SELECT ALL NULLIF(t0.c50, vt1.c2) COLLATE NOCASE COLLATE BINARY FROM rt0, t0, rt1;SELECT ((((((rt0.c2)IS NOT(vt1.c3)))OR((rt0.c0 IN ()))))AND(((rt0.c0)>=(vt1.c0)))) FROM vt1, rt0, rt1, t0 WHERE (((('-427830174')) BETWEEN (((~ (NULL)))) AND (((('151394646') IS TRUE))))); -- 0ms;
SELECT DISTINCT COUNT((+ (vt1.c2))) OVER (), ((json(rt1.c2)) NOTNULL), ((((t0.c50)/(rt1.c2)))IS NOT(json_remove(t0.c50, vt1.c1, t0.c50, rt1.c2))) FROM vt1, rt1, t0, rt0; -- 0ms;
SELECT CASE WHEN 0.2856792856525274 THEN rt1.c0 END FROM rt0, rt1, t0, vt1; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(LOWER(rt1.c1)) FROM rt0, vt1, t0;SELECT UNLIKELY(DISTINCT (((rt1.c1, vt1.c1, vt1.c0)) BETWEEN ((vt1.c0, rt1.c0, rt0.c0)) AND ((vt1.c1, vt1.c0, rt0.c2)))) FROM t0, rt1, vt1 WHERE (NULL) GROUP BY CAST((((vt1.c3))>=((vt1.lid))) AS BLOB), NULLIF(DISTINCT rt0.c2 COLLATE NOCASE, ((0Xffffffff999e73d2) ISNULL)), rtreenode((rt0.c2 IN (vt1.c2, rt1.c0, vt1.c0)), ((rt1.c0)||(vt1.c2)));SELECT ALL CAST(GROUP_CONCAT(rt0.c0) AS REAL) FROM rt1 WHERE (CASE 0.7096666501166407  WHEN 've' THEN x'c9f2' WHEN '0+*' THEN '-1733267759' WHEN 0xfffffffff872dd51 THEN 0.3497143844454973 END COLLATE RTRIM);SELECT DISTINCT ABS('1905111369' COLLATE NOCASE) FROM rt1, t0 GROUP BY (((rt0.c1)>=(rt0.c1)) IN ()) ORDER BY LIKELIHOOD((vt1.c0 IN ()), 0.3432926576884576) ASC, CAST(((((((((((((rt0.c0)AND(vt1.c0)))AND(vt1.c0)))AND(-1168042258)))OR(rt1.c0)))OR(rt1.c1)))AND(rt1.c1)) AS NUMERIC)  NULLS LAST, NULL  NULLS FIRST;SELECT DISTINCT (((((1.51394646E8)+(rt0.c1))))<=(((vt1.c2 IN (vt1.c3))))), UNICODE(NULLIF(DISTINCT rt0.c1, rt1.c2)), vt1.lid, (~ (rt0.c2)), ((LIKELIHOOD(t0.c50, 0.32619713172759035))<=(x'')) FROM vt1 WHERE ((+ (CASE 0Xffffffff8dc3c001  WHEN NULL THEN 0.9691391343538442 ELSE '-441321555' END)));SELECT vt1.c0 FROM t0, vt1 WHERE (CAST(CASE 0.9137358397795924  WHEN NULL THEN NULL WHEN '-1717668910' THEN 0.18614172576629118 WHEN NULL THEN x'1b57401e' ELSE 0.32506842062427455 END AS NUMERIC)); -- 0ms;
SELECT ALL ((COUNT(*)) IS TRUE), (((((rt0.c1) NOT NULL)))<=((((((vt1.c2)OR(rt0.c1)))AND(vt1.lid))))), AVG(((vt1.c0)IS NOT(rt0.c2))) OVER ( ORDER BY rt1.c1 COLLATE BINARY, CASE WHEN CASE vt1.c1  WHEN vt1.c2 THEN rt1.c0 ELSE rt1.c1 END THEN ((t0.c50) NOT BETWEEN (t0.c50) AND (rt0.c0)) ELSE 0.9069564685589283 END DESC RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt1, t0 WHERE (((((0.0) ISNULL)) NOT BETWEEN ((('_\r7F~Z5꜑U') NOT BETWEEN (1e500) AND (-266761401))) AND ((0.09720482924330598 IN ())))) GROUP BY ((((NULLIF(DISTINCT rt0.c0, rt0.c1))OR(CASE vt1.lid  WHEN rt0.c2 THEN vt1.c0 ELSE vt1.c1 END)))AND(((rt0.c2) IS FALSE))) HAVING (~ (((rt0.c0) NOTNULL)));SELECT DISTINCT GROUP_CONCAT(CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c2 WHEN vt1.lid THEN vt1.c3 END) OVER (), LIKELY(DISTINCT CAST(rt0.c0 AS REAL)), 0.5425074309394987 FROM rt1, vt1 WHERE ((((((((((NOT (NULL)))OR(((('')) NOT BETWEEN ((0.956514059931589)) AND ((0.5783002760462929))))))AND('-1682547621' COLLATE NOCASE)))AND((NULL IN (x'')))))AND((('ZJ') NOT BETWEEN ('') AND (1515713873)))));SELECT ((rt1.c0) BETWEEN (NULL) AND (rt1.c1)) COLLATE BINARY FROM t0 WHERE (((((((0xffffffffb4da616f)AND(x'')))AND('h['))) IS FALSE));SELECT DISTINCT ((((((vt1.c0))>=((rt1.c0))), (x'4398' IN (t0.c50)), LIKELIHOOD(rt0.c1, 0.31195351307695185), SUM(rt1.c2), rt0.c0))=((((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c0)), 'Q和', (rt0.c0 IN (vt1.c1, rt1.c0)), CAST(vt1.lid AS BLOB), rt0.c2))), SQLITE_COMPILEOPTION_USED(((((vt1.c3)OR(vt1.c3)))OR(vt1.c3))), (((0.36827923045288113 IN ()))&((- (t0.c50)))) FROM rt0 WHERE (TRIM(DISTINCT (('0.5425074309394987') NOT BETWEEN ('-1149377853') AND (NULL)), ((x'3ba6') NOTNULL)));SELECT ALL NULL FROM vt1; -- 0ms;
SELECT DISTINCT (rt1.c2 IN (((NULL)=(vt1.lid)))), ((LENGTH(NULL)) NOT BETWEEN (((((((((rt0.c0)OR(vt1.c1)))AND(vt1.c1)))AND(vt1.c3)))OR(rt0.c1))) AND (((vt1.c2)AND(x'')))), (- ((- (vt1.c2)))) FROM rt0;SELECT DISTINCT SUM((((NULL))>=((vt1.c1)))) OVER ( ORDER BY ABS(DISTINCT rt1.c0)), RANK() OVER (), PERCENT_RANK() OVER () FROM vt1 WHERE (((((((196034869)OR('*dr[')))AND((NULL IN (x'4668', 0X643e49fd)))))AND(UNLIKELY(DISTINCT -1.910593775E9)))) GROUP BY (((((vt1.c3 IN ()))OR((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c2))))))OR(TYPEOF(DISTINCT vt1.c0))) HAVING CAST(((0X6f772fd0)<(vt1.c0)) AS INTEGER);SELECT DISTINCT CASE ''  WHEN ((x'')||(rt0.c1)) THEN ((rt0.c0)>>(x'')) END FROM t0, vt1, rt0 GROUP BY (((rt1.c0 IN ())) NOTNULL), ((((((t0.c50)OR(vt1.lid)))OR(rt1.c1)))>(((vt1.c0) IS TRUE))), (((((((((((vt1.c1, rt0.c0, rt1.c0))>((vt1.c0, rt1.c1, rt1.c0))))OR((NOT (vt1.c2)))))AND(((rt1.c0)<=(vt1.c1)))))AND(CASE WHEN vt1.lid THEN t0.c50 WHEN NULL THEN rt1.c2 WHEN '-1386200877' THEN vt1.lid END)))OR(((rt0.c1)AND(vt1.lid))));SELECT CAST(((vt1.c1) NOTNULL) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT ALL COUNT(((rt1.c0)<(vt1.lid)) COLLATE NOCASE) OVER (), ((('쿃')) NOT BETWEEN ((((rt1.c1) NOT BETWEEN ('1515713873') AND (rt0.c2)))) AND ((TYPEOF(vt1.lid)))), '0.18685217957975442' FROM rt1;SELECT TYPEOF(DISTINCT NULLIF(rt1.c1, rt1.c2)) FROM vt1, t0, rt0 GROUP BY (((rt1.c1 COLLATE BINARY, ((rt0.c1)*(t0.c50)), (rt1.c1 IN (vt1.c0))))>((((((vt1.lid)OR(vt1.lid)))OR(vt1.lid)), LIKELIHOOD(vt1.c0, 0.05722030468390715), (x'b540' IN ()))));SELECT DISTINCT ((((vt1.lid IN (rt0.c0))))<=((AVG(rt1.c1)))) FROM t0, vt1, rt1 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (CASE 0xffffffffcc81afba  WHEN '1934771591' THEN x'' WHEN '-1983589842' THEN -487815392 WHEN 'Geh4X̒T' THEN 0.6791540828225366 ELSE x'0ead' END) AND (CAST(NULL AS TEXT)))) LIMIT 2119616306 OFFSET 794922029;SELECT COUNT(NULLIF(DISTINCT rt0.c2, rt1.c2)) FROM rt0, rt1, t0, vt1 WHERE (NULL); -- 0ms;
SELECT (((((rt1.c0, vt1.lid, rt0.c2)) NOT BETWEEN ((vt1.c3, vt1.lid, rt0.c1)) AND ((t0.c50, vt1.c0, rt1.c2)))) IS FALSE) FROM t0 LIMIT 488190009 OFFSET -419632720;SELECT ALL json_patch(((rt0.c2)IS(rt1.c1)), ((rt1.c2) IS TRUE)) FROM t0, rt1, rt0, vt1 EXCEPT SELECT DISTINCT ((rt1.c1)&(vt1.c2)) COLLATE NOCASE FROM rt1, t0, vt1; -- 1ms;
SELECT NULL FROM t0, rt1, rt0 WHERE (((((0.6184338714216769) ISNULL))==((~ (0.7371069664618064))))); -- 0ms;
SELECT ALL (((((rt0.c0) BETWEEN (vt1.lid) AND (rt1.c2)), 0.19614540110114953, 0.7469256051655765))>=((rt0.c2 COLLATE BINARY, SQLITE_VERSION(), ((((((((vt1.c2)OR(vt1.c2)))OR(rt0.c1)))AND(rt1.c1)))AND(vt1.c1))))) FROM t0, rt0, rt1, vt1 WHERE (((0.6240443066114935) BETWEEN (0Xffffffffe2ec8720) AND (759379075)) COLLATE BINARY); -- 0ms;
SELECT NTH_VALUE(CASE WHEN rt0.c1 THEN CAST(x'' AS TEXT) END, '-742215387') OVER (), vt1.c1 COLLATE NOCASE, CASE WHEN ((vt1.c0)&(vt1.c3)) THEN CASE WHEN vt1.c0 THEN x'66c4' ELSE vt1.c3 END WHEN vt1.c0 THEN (((t0.c50)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c2))) WHEN vt1.lid COLLATE BINARY THEN (('1320851033') NOT BETWEEN (vt1.c3) AND (t0.c50)) ELSE x'' END FROM t0, rt1, rt0, vt1; -- 1ms;
SELECT vt1.c1 FROM rt0, rt1, vt1 WHERE (CAST(CHAR(0.07309207593728206) AS INTEGER)) ORDER BY CASE WHEN vt1.c1 THEN vt1.c0 END COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))) IS FALSE)) OVER () FROM rt1 WHERE ((CAST(NULL AS REAL) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(json_insert(vt1.c1, vt1.c2, NULL, vt1.lid, vt1.lid)) FROM rt0 WHERE (((458283954 IN ()) IN ((((0.08335940494395133)) BETWEEN (('w댞')) AND ((0x41dadb5))), ((NULL) BETWEEN (0.9777922163820831) AND (0Xfffffffff872dd51)))));SELECT DISTINCT '-1260756625' FROM rt0, rt1, vt1, t0; -- 0ms;
SELECT FIRST_VALUE(CASE WHEN CASE vt1.c1  WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN '302253840' WHEN vt1.c0 THEN vt1.c2 ELSE vt1.c0 END THEN (~ (vt1.c3)) WHEN CAST(vt1.c0 AS NUMERIC) THEN ((vt1.c1)AND(vt1.c3)) WHEN ((rt0.c1) NOT NULL) THEN ((vt1.c0) NOT BETWEEN (vt1.c2) AND (rt0.c2)) END) OVER () FROM vt1, rt0 GROUP BY ((0.08020329161965956) NOT NULL); -- 1ms;
SELECT DISTINCT (('-1386469917') NOT BETWEEN (CASE vt1.c1  WHEN rt0.c0 THEN rt1.c0 ELSE vt1.lid END) AND ((rt1.c1 IN ()))) FROM rt1, rt0, t0 WHERE (0.47664605142703886) LIMIT 1111868526 OFFSET 1470625466;SELECT ALL t0.c50, (TYPEOF(DISTINCT rt1.c1) IN ()), MAX(vt1.c0 COLLATE RTRIM) FROM rt1, vt1, rt0, t0; -- 0ms;
SELECT DISTINCT TOTAL('' COLLATE NOCASE) FILTER(WHERE ((CASE WHEN vt1.c1 THEN vt1.c2 ELSE vt1.c3 END) IS FALSE)) OVER () FROM rt1, vt1 WHERE (x'6a4bacc4'); -- 0ms;
SELECT ALL ((1863844182) ISNULL), LAST_VALUE(rt1.c1) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), (((vt1.c1, rt0.c1, rt1.c2)) NOT BETWEEN ((((((((((vt1.c0)OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c2)))OR(rt1.c1)), ((rt1.c0) NOT BETWEEN (vt1.c1) AND (t0.c50)), ((rt0.c0) NOT NULL))) AND ((CASE vt1.c1  WHEN x'' THEN vt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 WHEN t0.c50 THEN rt1.c1 WHEN NULL THEN rt1.c1 ELSE vt1.c1 END, vt1.c2, (rt0.c0 IN ())))) FROM rt0, rt1;SELECT ALL ((CASE vt1.lid  WHEN t0.c50 THEN vt1.c1 END)LIKE(MIN(rt0.c0))) FROM t0, rt1 WHERE (TRIM((NULL IN ())));SELECT DISTINCT CAST((rt1.c0 IN ()) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((vt1.lid) BETWEEN (t0.c50) AND (rt1.c2)))AND(((rt0.c1)OR(rt0.c2)))) FROM rt0, rt1, vt1 WHERE (TIME((x'b252' IN ()), (~ (0.7102381472145385)), ('' IN (0.7371069664618064))));SELECT ALL (~ (json_insert(vt1.c1, vt1.lid, x'', rt0.c1, vt1.c2))) FROM rt0, rt1, t0, vt1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, rt1 WHERE ((((NOT ('761009482'))) NOT BETWEEN ((('⽨f>o㫪GgQn')GLOB(0.40716959324940816))) AND (STRFTIME('', 0.4329916357874073, x'9392')))) GROUP BY NULL; -- 0ms;
SELECT CAST('0.9137358397795924' AS INTEGER), ((CASE rt0.c0  WHEN vt1.lid THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN vt1.c1 WHEN rt0.c0 THEN rt1.c2 END) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt1.c0)<=(vt1.c3)))), rt1.c0 FROM t0, vt1, rt0, rt1 GROUP BY (NOT (rt0.c1)) HAVING ((((vt1.c0) BETWEEN (rt0.c2) AND (rt1.c2)))>=(((rt1.c0)&(vt1.c1)))) ORDER BY ((((vt1.lid)AND(rt0.c0)))AND(rt0.c2)) COLLATE NOCASE ASC  NULLS FIRST, (((rt0.c2)<=('s<')) IN ())  NULLS LAST LIMIT -407390941 OFFSET 1014858311; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS INTEGER) COLLATE RTRIM, CAST(((t0.c50)||(vt1.c0)) AS BLOB), TYPEOF(DISTINCT MIN(vt1.c3)) FROM rt0, vt1 INNER JOIN rt1 ON '718486299';SELECT ALL SUM(0.32811702792088704) OVER () FROM rt0, rt1, t0, vt1; -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT BETWEEN ((~ (x''))) AND (vt1.lid)) FROM rt0, rt1, t0;SELECT ALL 0.20217850426349704 FROM t0, rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((NULL)))) NOTNULL), ((((((((rt0.c1 COLLATE NOCASE)OR(COUNT(*))))OR((NOT (vt1.c0)))))OR(COUNT(*))))AND(((t0.c50)|(vt1.lid)))), MAX(SUBSTR(vt1.c0, rt0.c1)) COLLATE RTRIM FROM t0, rt0 ORDER BY ((vt1.c3) NOT NULL) COLLATE BINARY COLLATE RTRIM ASC  NULLS LAST;SELECT ALL HEX(DISTINCT ((((vt1.c0)OR(vt1.c0)))OR(t0.c50))), (((rt1.c2, t0.c50, vt1.c0)) BETWEEN ((((((rt1.c0)AND(t0.c50)))AND(rt0.c0)), ((vt1.c1) IS TRUE), ((0.08123140857638256)LIKE(vt1.c1)))) AND ((NULL, CAST(rt0.c0 AS TEXT), ((((vt1.lid)AND(t0.c50)))AND(vt1.c2))))), COUNT(*) OVER () FROM vt1, t0;SELECT ((CASE WHEN rt0.c2 THEN vt1.c1 END) ISNULL), COUNT(x'') OVER (), ((((((((((vt1.c0) BETWEEN (vt1.c0) AND (rt0.c2)))OR(0.9777922163820831)))OR(CAST(rt0.c1 AS REAL))))OR(TRIM(rt1.c1))))AND(t0.c50 COLLATE RTRIM)) FROM rt1, t0, vt1, rt0 WHERE (((0Xffffffff971cc0af IN (NULL)) IN ())) GROUP BY 2144056094;SELECT DISTINCT CAST(vt1.c1 AS TEXT) COLLATE BINARY FROM t0, rt0, vt1, rt1; -- 0ms;
SELECT ((((rt0.c0 IN (rt0.c1))))>=((rt1.c2))), (('-1702524121')IS NOT(CASE WHEN rt1.c2 THEN x'2d69' WHEN rt0.c1 THEN t0.c50 WHEN rt0.c1 THEN vt1.c0 END)), ((TOTAL(vt1.c3)) IS FALSE) FROM rt1, t0, vt1, rt0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN ((NOT (x''))) AND (((0.16497069225760397) IS FALSE)))); -- 0ms;
SELECT ((rt0.c2)>>(vt1.c0 COLLATE NOCASE)), ((LTRIM(rt0.c1))GLOB(vt1.c3)), vt1.c0 FROM rt1, vt1, t0 WHERE ('');SELECT ALL NULLIF(DISTINCT CASE vt1.lid  WHEN vt1.lid THEN vt1.c1 END, (('') NOT BETWEEN (rt0.c0) AND (rt0.c0))) FROM rt0, t0;SELECT DISTINCT RANK() OVER (), CASE WHEN ((rt1.c1)AND(rt1.c0)) THEN t0.c50 END, (((vt1.c3, rt0.c0, rt0.c2)) NOT BETWEEN ((((((((((vt1.lid)OR(rt0.c2)))OR(rt1.c1)))AND(t0.c50)))OR(t0.c50)), ((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)), (NOT (vt1.lid)))) AND (((((vt1.c0, vt1.c0, x'b5f6')) BETWEEN ((t0.c50, '邲/*LG*덀', rt1.c0)) AND ((vt1.c3, rt0.c2, vt1.c1))), GROUP_CONCAT(x''), MIN(rt1.c1)))), CASE ((0X13bf58b0)&(vt1.lid))  WHEN ((rt0.c1)||(vt1.c2)) THEN 1017253339 ELSE 0.31751041519878387 END, 115178855 FROM vt1, t0;SELECT DISTINCT COUNT(*) OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND ((((((((((vt1.c0)>=(rt1.c1)))AND(x'713b')))AND(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN vt1.c0 THEN rt0.c0 ELSE 1.145255261E9 END)))OR(CASE rt1.c2  WHEN t0.c50 THEN vt1.c3 END)) FOLLOWING EXCLUDE GROUP), vt1.c1, SUM(((((x'5c1a')AND(vt1.c2)))AND(t0.c50))) FROM rt1;SELECT ((CASE WHEN vt1.lid THEN t0.c50 ELSE vt1.c0 END) BETWEEN (CASE WHEN x'21e7' THEN x'' END) AND (rt0.c2)) FROM rt0, vt1 WHERE ((((((49207326)OR(x'')))OR(0.6965348731473001)) IN ())) LIMIT 2146128657 OFFSET -1598881456;SELECT (((- (t0.c50))) NOT BETWEEN ((((vt1.lid))<=((rt1.c0)))) AND (((vt1.c2)IS(vt1.lid)))) FROM t0, rt1, vt1 WHERE ((('-1759723345') NOT BETWEEN (CAST(x'' AS REAL)) AND (CAST(NULL AS INTEGER)))); -- 1ms;
SELECT ALL ((((rt0.c0 COLLATE BINARY)OR(((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)))))AND(((rt0.c0)%(vt1.lid)))) FROM rt1, vt1, rt0 WHERE ((((((('-376016967') NOTNULL))OR('1829860031')))AND(CAST(x'6e78' AS TEXT)))); -- 0ms;
SELECT DISTINCT TOTAL_CHANGES() FROM rt1 LIMIT 1563192160; -- 0ms;
SELECT ALL CASE 0.8270006469455298  WHEN CAST(vt1.c2 AS BLOB) THEN CASE vt1.c3  WHEN rt0.c1 THEN rt1.c0 WHEN '741757910' THEN vt1.c3 WHEN t0.c50 THEN vt1.lid END ELSE TYPEOF(vt1.c2) END, COUNT(SQLITE_COMPILEOPTION_USED(t0.c50)), CAST(((rt1.c2)||(x'')) AS REAL) FROM vt1 GROUP BY ((((UPPER(rt1.c0))AND(((-0.0) NOT BETWEEN (vt1.c3) AND (vt1.c1)))))AND(NULL)) HAVING (((((+ (vt1.c3)))OR(((((vt1.lid)AND(vt1.c0)))AND(vt1.c3)))))OR((('*V?Zf뫥') BETWEEN (rt0.c1) AND (rt1.c2)))) ORDER BY ((x'8d3b') BETWEEN (((vt1.c1)<=(rt0.c0))) AND (''))  NULLS LAST;SELECT ALL ((CAST(vt1.c3 AS BLOB)) NOTNULL) FROM vt1 NOT INDEXED WHERE (((((((0.5777548229253304)AND(x'')))OR(0.3497143844454973))) NOTNULL)); -- 1ms;
SELECT DISTINCT ((CAST(vt1.c2 AS BLOB))IS((- (vt1.c2)))), LOWER(DISTINCT DATE(rt1.c2, rt0.c0, vt1.c3, rt0.c1, vt1.c1)), ((CASE WHEN t0.c50 THEN rt0.c2 END) IS FALSE) FROM vt1 WHERE (CAST(x'' AS NUMERIC) COLLATE BINARY);SELECT SUM(((vt1.c3)GLOB(rt0.c0))) FILTER(WHERE UNLIKELY((t0.c50 IN ()))) OVER (), TOTAL(((rt0.c2)<(vt1.c0))) OVER (), (((NULL))<>((CAST(vt1.c3 AS TEXT)))) FROM rt1;SELECT ((((rt1.c0) NOTNULL)) BETWEEN (vt1.c2 COLLATE RTRIM) AND (NULL)) FROM vt1, rt1, rt0 NOT INDEXED; -- 0ms;
SELECT (~ (CASE rt0.c2  WHEN -6.56604398E8 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN vt1.c0 THEN x'' ELSE vt1.c3 END)), CASE rt1.c2  WHEN CASE WHEN 0.09720482924330598 THEN t0.c50 ELSE vt1.c1 END THEN MAX(vt1.c2) ELSE (((vt1.lid))<=((rt1.c2))) END, ABS(DISTINCT CAST(vt1.c0 AS BLOB)) FROM rt1, t0 WHERE (CAST(((((((((((((x'')OR('琅zMS\,')))AND(x'')))OR(x'4a68')))AND(x'')))OR(3.0225384E8)))OR(0.8301327543501408)) AS NUMERIC)) ORDER BY CASE WHEN CASE WHEN vt1.c0 THEN vt1.c2 END THEN ((((rt1.c1)OR(NULL)))OR(vt1.c2)) WHEN rt0.c2 THEN (NOT (vt1.c0)) WHEN ((rt1.c2)/(rt0.c2)) THEN (rt0.c0 IN (t0.c50, t0.c50)) END  NULLS FIRST;SELECT json_array_length(vt1.lid COLLATE RTRIM), ((LTRIM(vt1.c3))||(HEX(vt1.lid))), '0.6054320043427416' FROM t0, vt1, rt0, rt1 WHERE ((- (CASE WHEN NULL THEN -1089540767 ELSE 0.06040777801215924 END))); -- 0ms;
SELECT ((CASE rt1.c1  WHEN vt1.c3 THEN vt1.c2 WHEN rt1.c2 THEN 0.9701490264343635 WHEN rt0.c1 THEN 'w댞' END)OR(((rt0.c1)AND(rt0.c1)))) FROM t0, rt1 WHERE (((LIKELY(DISTINCT 0.47664605142703886)) ISNULL));SELECT DISTINCT HEX(rt1.c0) FROM rt0, vt1, t0 GROUP BY CAST(((rt0.c2) NOT BETWEEN (vt1.c0) AND (vt1.c0)) AS INTEGER) HAVING ((((t0.c50)/(vt1.c3))) BETWEEN ((NOT (rt1.c2))) AND (((t0.c50) IS TRUE)));SELECT CASE WHEN rt0.c0 COLLATE RTRIM THEN (+ (vt1.lid)) WHEN (NOT (rt1.c0)) THEN (((rt1.c1))!=((vt1.c1))) WHEN (vt1.c0 IN (t0.c50)) THEN ((rt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c3)) END FROM vt1, t0, rt0, rt1; -- 3ms;
SELECT '*D', CASE t0.c50  WHEN CAST(t0.c50 AS REAL) THEN (NOT (vt1.c1)) END, CHAR(vt1.c2) FROM vt1 UNION SELECT rt0.c0 COLLATE BINARY, (((- (rt1.c1)))<>(((vt1.lid) IS FALSE))), (((~ (vt1.c3)))<<(vt1.c0)) FROM rt1, vt1, rt0, t0;SELECT DISTINCT NULL FROM vt1, rt1, t0, rt0 WHERE (((NULL) IS TRUE)); -- 0ms;
SELECT 0.9852096731245903 FROM vt1, rt1 LIMIT 238910495; -- 0ms;
SELECT DISTINCT CASE WHEN vt1.c3 COLLATE NOCASE THEN rt0.c1 COLLATE RTRIM ELSE CAST(vt1.c2 AS REAL) END, vt1.c0, rt1.c0 FROM vt1, t0 WHERE ('-232453844');SELECT ALL 'UɗꝊir얟[' FROM rt1, vt1 WHERE ((((((('-1638512165')AND('1182175513')))AND(-1847467459)))>(CAST(0.7566099772838595 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT COUNT(((t0.c50) NOT BETWEEN (t0.c50) AND (rt0.c0)) COLLATE BINARY) FROM rt1 WHERE ((+ (CASE 0.7695773309088785  WHEN 0Xd795d13 THEN 0xe3d7c1f ELSE 'ꄯ+' END)));SELECT ALL ((((CASE rt0.c2  WHEN rt0.c1 THEN vt1.c3 END)AND((((rt1.c1)) NOT BETWEEN ((vt1.lid)) AND ((rt1.c0))))))OR(((vt1.c0)AND(rt1.c2)))) FROM t0, rt1;SELECT DISTINCT CAST((((rt0.c0))==((rt0.c0))) AS TEXT) FROM rt1, rt0, t0, vt1 NOT INDEXED WHERE (((((x'99b4f7be')<('S\r* ')))IS(0X42c30632))); -- 0ms;
SELECT DISTINCT ((((ROUND(rt1.c0, rt1.c2))AND(CAST(rt1.c0 AS TEXT))))OR((vt1.c3 IN ()))), ((vt1.c2 COLLATE BINARY) NOT BETWEEN (x'1e2f') AND (CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c2 THEN vt1.c3 END)), ((((rt1.c1)<(rt1.c0)))%(x'')) FROM rt0, rt1, t0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN HEX(NULL) WHEN (('b-V8Fgeb|') BETWEEN (0.47428209736029014) AND ('P霋UA[ꂭ')) THEN (310070401 IN ()) WHEN ((NULL)LIKE('-342997385')) THEN (+ ('-846506582')) ELSE ((NULL) BETWEEN (-5.0301475E8) AND ('-1759723345')) END);SELECT DISTINCT CAST(rt1.c2 AS BLOB) COLLATE NOCASE FROM rt0, vt1;SELECT DISTINCT ((((vt1.c0)-(vt1.c1)))>>(((vt1.c2)>(0.3511911982075533)))) FROM vt1, rt0 WHERE (CAST((((0X6b11c4e1))<>((x''))) AS REAL)); -- 0ms;
SELECT DISTINCT NULL FROM vt1, rt1 GROUP BY (NOT (((vt1.c0)>(vt1.c1)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN x'90a9' THEN rt1.c1 ELSE rt1.c0 END) NOTNULL), GROUP_CONCAT(((vt1.c0) ISNULL)) FILTER(WHERE rt0.c0) OVER (), ((((rt1.c1)>=(rt1.c2)))>(((vt1.c2)/(rt1.c2)))) FROM rt0, vt1, t0, rt1 WHERE (CAST((~ (0.31949505634734754)) AS REAL)) ORDER BY (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c3))) COLLATE NOCASE; -- 0ms;
SELECT ALL ((((vt1.c1) ISNULL))>=(CAST(t0.c50 AS TEXT))), (CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c0 END IN (((0.6536064702185985)IS NOT(rt1.c2)))), (((rt1.c2 IN ()))>>(rt0.c2)), ((vt1.c2)>>(vt1.lid)) COLLATE RTRIM, (((((rt0.c1)) BETWEEN ((NULL)) AND ((rt0.c1))))>(((rt1.c0) BETWEEN (vt1.c3) AND (vt1.c2)))) FROM rt0 WHERE (((CASE WHEN 0Xffffffffb7c96c14 THEN x'' END) BETWEEN ((((('1617219977')AND(0.7463236482475911)))OR(x''))) AND ((('-243996135')+(NULL))))) ORDER BY (((vt1.c0, vt1.c3, '')) NOT BETWEEN (((0.9137358397795924 IN (rt0.c1, rt1.c2)), (+ (rt0.c0)), ((-391563124)-(vt1.c1)))) AND ((ABS(DISTINCT vt1.c2), CAST(rt0.c2 AS NUMERIC), rt1.c1)))  NULLS LAST;SELECT '' FROM vt1, rt1, rt0, t0 WHERE (CASE x''  WHEN 115178855 THEN 0.9620512307385792 WHEN '*o\7' THEN 0xffffffff8ab16b32 WHEN x'' THEN 451695954 END COLLATE BINARY); -- 0ms;
SELECT ((CASE rt1.c0  WHEN rt1.c1 THEN rt0.c2 ELSE rt0.c1 END) BETWEEN (((vt1.c1)&(rt1.c0))) AND (((rt0.c1) BETWEEN (vt1.c2) AND (x'')))) FROM vt1, rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt1.c3 AS BLOB)) OVER () FROM t0;SELECT DISTINCT CASE LIKELY(0.2400839083061752)  WHEN (+ (vt1.c2)) THEN ((rt0.c0)>>('2119616306')) ELSE ((vt1.c0) NOT NULL) END FROM rt0, rt1, t0;SELECT CAST(((rt0.c0)<<(vt1.c0)) AS INTEGER) FROM t0, rt0, vt1; -- 1ms;
SELECT DISTINCT (((((rt1.c2))<((vt1.c2))))/(vt1.c3)), rt1.c0, ((TOTAL(x'')) IS TRUE), ABS(DISTINCT x''), COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES) FROM t0 WHERE (((((~ (0Xffffffff879cbc91))))<((-913311038))));SELECT DISTINCT ((((((((((((((vt1.c1)OR(rt0.c2)))OR(rt1.c1)))AND(rt1.c2)))AND(vt1.lid)))AND(vt1.c0)))OR(rt0.c1))) ISNULL) FROM rt0 WHERE (((x'625d') BETWEEN (NULL) AND (NULL)) COLLATE BINARY);SELECT ALL (((0Xfffffffffce54a48, vt1.c3, t0.c50)) BETWEEN ((rt1.c0, vt1.c0 COLLATE BINARY, CASE vt1.c1  WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c2 WHEN rt0.c1 THEN -1898957794 END)) AND ((((rt0.c2)>>(vt1.c3)), ((((((((rt0.c0)AND(rt1.c1)))AND(rt1.c1)))AND(t0.c50)))AND(vt1.lid)), ((rt1.c1)OR(rt0.c1))))) FROM rt0 WHERE (CASE WHEN ABS(DISTINCT x'') THEN (((('K䈋Tk')AND('-863916102')))AND(x'')) END);SELECT DISTINCT ((((rt0.c2)>=(vt1.c1)))>=(0.8085729200567914)) FROM rt0, t0, vt1 LIMIT -579824864; -- 0ms;
SELECT ALL ((CASE WHEN rt1.c1 THEN rt0.c2 ELSE rt1.c2 END) BETWEEN ((rt1.c1 IN ())) AND (((vt1.c1)<=(NULL)))) FROM t0, vt1 WHERE (TRIM(DISTINCT NULL COLLATE RTRIM, ((0.6676347739397283)&(NULL))));SELECT ALL LOWER((NOT (vt1.lid))), AVG((vt1.c0 IN ())) FILTER(WHERE CASE WHEN ((((((((rt0.c2)OR(t0.c50)))OR(t0.c50)))AND(t0.c50)))AND(rt1.c2)) THEN (vt1.c2 IN (t0.c50)) WHEN ((rt0.c2) IS TRUE) THEN ((((((((vt1.lid)OR(vt1.c1)))OR(rt0.c0)))OR('n)2dt(?*+')))AND(rt1.c2)) WHEN (+ (rt1.c0)) THEN IFNULL(vt1.lid, rt1.c1) WHEN CASE rt0.c1  WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN rt1.c1 WHEN t0.c50 THEN x'' WHEN vt1.lid THEN vt1.c3 END THEN (- (rt0.c0)) WHEN (('#u}') IS FALSE) THEN ((vt1.c1) NOT NULL) END) OVER (), (+ (((vt1.lid) BETWEEN (rt0.c0) AND (vt1.c0)))) FROM rt1, rt0, vt1 WHERE (x'') ORDER BY (((NOT (0.3532528893744963))) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (CAST(vt1.c0 AS INTEGER))) DESC  NULLS LAST, ((((vt1.lid)<=(vt1.c0)))IS(((vt1.c2) BETWEEN (vt1.c1) AND (rt1.c1))));SELECT ALL (~ (0.31949505634734754)) FROM rt1, t0, rt0 ORDER BY (((((vt1.c0)<<(rt0.c2))))>=(((((vt1.c2))<>((rt1.c0)))))) DESC, CAST(((0xffffffffbb342c84)LIKE(rt1.c0)) AS BLOB) DESC;SELECT (((NOT (rt0.c0)))>=(CAST(rt0.c1 AS TEXT))) FROM rt1, rt0, t0 ORDER BY t0.c50  NULLS FIRST, CAST(((((vt1.lid)OR(t0.c50)))AND(vt1.lid)) AS REAL)  NULLS FIRST, (ROUND(rt1.c2, vt1.c1) IN ()) LIMIT -987681691 OFFSET -1282609522;SELECT ((('' IN ()))<=((((rt1.c0)) NOT BETWEEN ((0.9657713863590734)) AND ((vt1.c1))))) FROM rt0, t0, vt1 WHERE (((((((((((x'')AND('-1260756625')))AND(NULL)))AND('.*7LFe/ᦃ2')))AND(NULL)))+(((0.7865845774105475)-(7.61009482E8)))));SELECT DISTINCT (((rt0.c1 IN (t0.c50)))|(AVG(vt1.c0))), vt1.c3, (((((vt1.c1))>=((x'53fd'))))||(((vt1.c3) BETWEEN (vt1.c3) AND (rt1.c2)))) FROM rt1, vt1, rt0;SELECT DISTINCT TOTAL(CAST(rt0.c0 AS INTEGER)) FROM vt1, t0, rt0 LIMIT -1378682018; -- 1ms;
SELECT ALL CASE WHEN CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c3 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 END THEN (x'4140e45a' IN (rt0.c0, vt1.c3)) WHEN rt0.c1 THEN ((vt1.c1)>>(rt1.c2)) WHEN ((vt1.c0)AND(vt1.c0)) THEN CAST(0.3497143844454973 AS TEXT) END FROM t0, vt1, rt0 WHERE (((('0.8085729200567914' IN ()))>((+ ('-440266975')))));SELECT DISTINCT CAST(187334423 AS BLOB), (((((rt0.c0) IS TRUE)))<>((((((((((vt1.lid)OR(rt1.c2)))AND(rt0.c2)))OR(rt1.c2)))AND(rt0.c2))))), ((NULL) NOT BETWEEN (((vt1.lid) IS FALSE)) AND (rt1.c1 COLLATE RTRIM)) FROM rt0;SELECT CAST(rt1.c0 AS INTEGER) COLLATE BINARY FROM t0, rt0 GROUP BY CASE '-1462237948'  WHEN CASE WHEN vt1.c3 THEN vt1.c3 WHEN rt0.c2 THEN t0.c50 WHEN '2!' THEN rt0.c1 END THEN t0.c50 ELSE ((rt0.c0) ISNULL) END HAVING ((((((rt1.c1)AND(vt1.lid)))AND(rt0.c2)))AND((~ (vt1.lid))));SELECT DISTINCT NULL, FIRST_VALUE(CASE rt1.c2 COLLATE NOCASE  WHEN (~ (rt0.c1)) THEN (((rt0.c1)) BETWEEN ((vt1.c3)) AND ((vt1.c3))) ELSE ((vt1.c0) BETWEEN (rt0.c0) AND (NULL)) END) OVER (), (- ((+ (rt1.c2)))) FROM rt0, vt1, t0, rt1 WHERE ('-1719310575'); -- 1ms;
SELECT ALL json_array(CASE WHEN vt1.c0 THEN x'' ELSE rt1.c2 END, vt1.c2, (rt1.c1 IN ()), COUNT(t0.c50)) FROM vt1 WHERE (((((((0.5852851024333973)||(x'')))AND((~ (NULL)))))AND(CASE 0.9620512307385792  WHEN 0.7615489143113302 THEN NULL END)));SELECT DISTINCT ((((rt1.c1)<<(''))) NOTNULL), NULL, CAST(((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt1.c2)) AS REAL) FROM rt0, rt1 NOT INDEXED, vt1 WHERE ((((('-1967765820') BETWEEN (NULL) AND (NULL)))<((('6}/뮪')%(x'32483acb573e'))))); -- 0ms;
SELECT DISTINCT CASE rt0.c2 COLLATE RTRIM  WHEN (+ (vt1.c2)) THEN (vt1.c2 IN ()) END FROM t0 WHERE (json_patch((+ ('1692078955')), ((0.2657528411252912)AND(0.06040777801215924))));SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c2))) NOT BETWEEN (COUNT(*)) AND ((((vt1.c3))=((vt1.c2))))) FROM rt0, vt1, t0 WHERE (IFNULL((('1149095875')-(NULL)), 'c	' COLLATE RTRIM));SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS TEXT) THEN (vt1.c2 IN ()) WHEN 0.36251587229923476 THEN ((rt1.c0) BETWEEN (rt1.c1) AND (rt0.c0)) WHEN CAST(vt1.c0 AS NUMERIC) THEN (+ (vt1.c0)) END, GROUP_CONCAT(CHAR(t0.c50, rt0.c0, rt0.c2, vt1.c3, rt0.c2)) OVER (), ((0.7257566452796883)>>(vt1.c2)) COLLATE BINARY FROM rt0, vt1, t0, rt1; -- 0ms;
SELECT DISTINCT t0.c50, (- (((vt1.lid)GLOB(vt1.c0)))), TOTAL((rt0.c1 IN (vt1.c1))) OVER () FROM rt0, t0, vt1, rt1 WHERE ((- ((-1080242468 IN ())))); -- 0ms;
SELECT DISTINCT CAST(MIN(rt0.c1) AS TEXT) FROM vt1, t0;SELECT ALL 0xffffffff89c4d22e, ((((vt1.c0)>=(t0.c50)))|(COUNT(*))), (((+ (rt1.c2))) NOT BETWEEN (ABS(rt1.c0)) AND (NULLIF(rt1.c1, rt0.c1))) FROM t0, vt1, rt1 LIMIT 460953355;SELECT CASE AVG(NULL)  WHEN (vt1.c1 IN ()) THEN CAST(vt1.lid AS TEXT) WHEN (vt1.c0 IN (rt0.c0)) THEN (~ (rt0.c0)) WHEN ((rt1.c2)AND(rt1.c0)) THEN ((rt1.c1)OR(NULL)) ELSE ((x'')LIKE(rt1.c1)) END FROM t0, vt1, rt0;SELECT DISTINCT ((rt0.c0 COLLATE BINARY)+(CAST(vt1.c0 AS BLOB))) FROM rt0, vt1, rt1 GROUP BY ((((((((((vt1.c1) ISNULL))OR(((rt1.c2) NOT BETWEEN (x'a301') AND (rt0.c2)))))AND(((((((((rt0.c2)OR(vt1.c2)))AND('-1374150801')))AND(rt1.c2)))OR(vt1.lid)))))OR(((vt1.c3) BETWEEN (t0.c50) AND (rt1.c1)))))AND((((vt1.c1)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))))) HAVING (((((((((rt1.c1)OR(vt1.c2)))AND(rt0.c2)))AND(rt0.c0)))AND(rt1.c2)) IN ()) ORDER BY CAST(((rt1.c0)OR(vt1.c3)) AS NUMERIC) ASC  NULLS LAST, 0Xffffffffa8d80504 COLLATE BINARY  NULLS FIRST;SELECT DISTINCT x'' FROM t0; -- 0ms;
SELECT ALL (((vt1.c1 IN ()))OR(LIKELIHOOD(vt1.c0, 0.9688132670787049))) FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT NULL, ((((rt1.c0) NOT NULL))|(((rt1.c0)*(vt1.c2)))), (((vt1.c0 IN (0x447dcfc3, vt1.c0))) BETWEEN (((vt1.c3) NOT BETWEEN (t0.c50) AND (vt1.c2))) AND ((+ (vt1.c1)))), (CAST(t0.c50 AS NUMERIC) IN (((vt1.c3)<<(rt1.c1)))), ((((CAST(vt1.c3 AS NUMERIC))AND(rt1.c1)))OR((+ (x'20d7')))) FROM vt1, t0 WHERE (CAST((x'' IN (0.5838912191939011, x'')) AS NUMERIC)) LIMIT -1835998372 OFFSET 2112197320;SELECT '_06&]2R^' FROM vt1, rt0, t0, rt1 WHERE (CAST(CASE WHEN 0xffffffff971cc0af THEN NULL WHEN '782911439' THEN '-940433994' WHEN '1164795521' THEN x'' ELSE NULL END AS BLOB)) ORDER BY ((rt0.c1)||(((vt1.lid) NOT NULL))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT UPPER(NULL) FROM vt1 LIMIT -1694078447; -- 0ms;
SELECT LAST_VALUE(TRIM((((rt0.c1, rt1.c2, vt1.c3))>((rt1.c0, 0.6676347739397283, rt1.c2))))) OVER (), AVG(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.lid))) OVER (), vt1.c3 FROM rt0, t0, rt1, vt1 WHERE (NULLIF(((((((((((((0.47428209736029014)AND(0.02021245805841765)))AND('2!')))AND('59546849')))AND(0.5575655039283491)))OR(NULL)))AND(x'')), ((0X7fffffffffffffff) BETWEEN (x'') AND (0.7695311662011998)))); -- 1ms;
SELECT DISTINCT rt0.c1 FROM rt1, rt0 WHERE (CAST(CASE WHEN 0.7723338009970385 THEN '584868415' ELSE 0.6593446583546707 END AS INTEGER)); -- 0ms;
SELECT TRIM(MIN(vt1.c2)) FROM t0, rt1 WHERE (CASE WHEN (~ (0.06492728538214654)) THEN x'' END);SELECT ((((t0.c50)OR(x'')))OR(rt1.c2)) COLLATE RTRIM FROM t0, rt1, rt0 WHERE (PRINTF((0.7763740616799205 IN ()), JULIANDAY(0.9892925086621879, 0x4d07951f, -923493392, NULL, x''), ((1.15178855E8) NOT BETWEEN ('Id') AND ('1e500')))); -- 0ms;
SELECT AVG(CAST(rt0.c1 AS BLOB)), ((((((((vt1.c1)OR(rt1.c0)))AND(rt0.c2)))OR(CAST(rt1.c1 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (1413938374)))), (((((((((('(') NOT NULL))OR(0.7944537061093112)))OR(rt1.c2 COLLATE BINARY)))OR(AVG(rt1.c1))))AND(((((((((rt1.c0)AND(vt1.c1)))OR(rt0.c1)))OR(rt1.c1)))AND(vt1.c3)))) FROM rt0, vt1 WHERE (((CAST('-656604398' AS NUMERIC))IS((('	z\]''u')<('a(7')))));SELECT DISTINCT MIN(0x591ca74a) FROM t0, rt0, vt1, rt1 WHERE (CASE ((0X1fbfdf88)%(0.16706111376934873))  WHEN (('{篲e]歠') NOT NULL) THEN ((0.4364416648015229) NOT BETWEEN (x'') AND ('')) ELSE (((0.744116460422749, 0.7252806833921978, '615920407')) BETWEEN ((-7.29848543E8, 0.8301327543501408, 'r')) AND (('1818886743', NULL, 'csBEV8蝇'))) END) GROUP BY ((vt1.lid COLLATE NOCASE)OR((rt1.c1 IN ()))), (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((vt1.c0))))>('-1211536364')), (~ (rt0.c2 COLLATE NOCASE)) HAVING ((((((((((((((((rt1.c0)OR(vt1.lid)))OR(vt1.c2)))AND(t0.c50)))OR(vt1.c2)))AND(((vt1.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))))OR(MAX(rt1.c1))))AND(((((vt1.lid)OR(t0.c50)))OR(vt1.c2)))))AND((((t0.c50))<((vt1.c1))))) LIMIT 1563882296; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1, t0, rt0, rt1 WHERE (((((x'')||(x'448a'))) ISNULL)); -- 0ms;
SELECT ((((rt0.c1)&(vt1.c1)))GLOB(COALESCE(vt1.c2, vt1.lid, rt0.c0, t0.c50))) FROM rt0, vt1 ORDER BY ((vt1.lid)|(((rt1.c2)==(rt1.c1)))) DESC  NULLS LAST;SELECT DISTINCT (~ (((vt1.c3) NOT BETWEEN (0.40041231973081104) AND (x'')))), ((MAX(rt1.c1)) BETWEEN ((((rt1.c1))!=((rt1.c1)))) AND ((((x'', NULL, vt1.c1)) BETWEEN ((vt1.c3, rt1.c1, vt1.c3)) AND ((vt1.lid, vt1.lid, vt1.c1))))), (((- (vt1.c1)))||(SUM(rt1.c1))) FROM rt0;SELECT DISTINCT ((CAST(vt1.c3 AS NUMERIC))>=(vt1.c2 COLLATE BINARY)), '741757910', ((vt1.c3) NOTNULL) FROM rt0;SELECT ALL CAST((((rt1.c2))<((vt1.c3))) AS NUMERIC), json_type(vt1.c1), (HEX(vt1.c1) IN ()) FROM rt0, rt1, t0;SELECT x'0b16' FROM t0, vt1, rt0, rt1 WHERE (((CAST(NULL AS INTEGER))OR(((('-1572195101'))>=((x'fb21ed2e')))))); -- 0ms;
SELECT (- ((((rt1.c0, vt1.lid, vt1.c3, vt1.c1, rt0.c2))<>((rt1.c0, rt1.c0, vt1.c3, rt0.c2, rt1.c1))))) FROM t0, rt1, vt1, rt0 WHERE (((+ (0.6046439945253782)) IN ())); -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY (((NULL) NOT BETWEEN (vt1.c0) AND ('{篲e]歠')) IN ()) ASC) FROM vt1, t0, rt0; -- 1ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt1.c0 THEN rt0.c0 WHEN vt1.c2 THEN vt1.c1 WHEN t0.c50 THEN rt0.c0 ELSE vt1.c3 END THEN (NOT (vt1.lid)) END FROM rt1 WHERE (((x'7949') BETWEEN (x'230b') AND (NULL)) COLLATE RTRIM) GROUP BY ((((rt0.c2)<<(vt1.c2))) NOT NULL), ((CASE rt0.c0  WHEN vt1.c1 THEN rt1.c1 WHEN rt0.c2 THEN t0.c50 WHEN vt1.c0 THEN rt1.c0 END)<>((((vt1.c3)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c3))))), (NOT (rt0.c0)) COLLATE NOCASE;SELECT DISTINCT (((rt1.c2)) BETWEEN (((t0.c50 IN ()))) AND (((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c3)))))) FROM rt0, rt1, vt1, t0 LIMIT -767623510; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN x'' THEN rt1.c1 WHEN '-563356819' THEN vt1.c3 WHEN vt1.c1 THEN vt1.c1 ELSE vt1.c3 END THEN (((vt1.c1))>=((rt1.c1))) END FROM t0;SELECT ((NOT (vt1.c3)) IN (((rt0.c0) ISNULL))) FROM rt1, t0, vt1, rt0 WHERE (((((((((x'')AND(7.4175791E8)))AND('-1462237948')))OR((- ('-232453844')))))AND(CAST(x'' AS INTEGER)))); -- 0ms;
SELECT ALL (((((((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)))AND(t0.c50)))OR(vt1.c3)) IN ()) FROM rt1, rt0, t0, vt1 WHERE (json_quote(((1961417587)+(NULL)))) LIMIT -1402714062; -- 0ms;
SELECT (~ ('{Ő')) FROM t0, vt1, rt0, rt1 WHERE ((((~ (1041271805))) NOT BETWEEN (ABS(DISTINCT NULL)) AND (CASE WHEN x'30a8' THEN '+?' WHEN 63772942 THEN '-768547185' WHEN 0X7da2af9b THEN 1.681803773E9 END))) ORDER BY vt1.c1 DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(rt0.c0) OVER () FROM t0, rt0, rt1 WHERE ((((((x''))<=((0.79979769983195))))+(CASE WHEN 0.15744930711073024 THEN '' ELSE x'' END))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt1.c1 THEN rt1.c1 END AS NUMERIC) FROM vt1, t0 WHERE (((CASE WHEN 0.30208196614788674 THEN 7.36136637E8 WHEN x'' THEN -1536708123 WHEN x'' THEN x'928d' ELSE NULL END) NOT BETWEEN (((((x'')OR('qMhn/elm')))AND(0.42570486900905946))) AND (((NULL) IS TRUE))));SELECT ALL (+ (IFNULL(rt1.c1, 0Xffffffff84b82532))) FROM vt1, rt0;SELECT ALL COUNT(*) OVER (), vt1.lid, UNLIKELY(vt1.c3 COLLATE RTRIM) FROM rt0, vt1, rt1, t0 WHERE ((((NULL) NOT BETWEEN ('C1YR(') AND (0.6536064702185985)) IN ())); -- 0ms;
SELECT ((((vt1.c1) NOT BETWEEN (rt0.c0) AND (NULL))) IS FALSE) FROM t0;SELECT json_insert(((rt1.c0) IS FALSE), ((rt0.c2)AND(rt0.c2)), vt1.lid COLLATE BINARY), (+ (GROUP_CONCAT(rt1.c2))), GROUP_CONCAT((~ (rt0.c1))) FROM vt1, rt0;SELECT ALL ((GROUP_CONCAT(vt1.c1))IS((((('619218213')OR(t0.c50)))AND(vt1.c1)))) FROM rt1, t0 WHERE ((~ (CAST(x'' AS BLOB)))) LIMIT 202847207 OFFSET 1017253339;SELECT DISTINCT LAG((('#R8}eI95') BETWEEN (CAST(vt1.c1 AS BLOB)) AND ((('')==(rt1.c1)))), ((((((rt1.c2)AND(vt1.c2)))AND(rt1.c1)))IS NOT((((NULL))>=((vt1.c1))))), SQLITE_COMPILEOPTION_USED(rt1.c2 COLLATE NOCASE)) OVER () FROM t0, vt1, rt1; -- 0ms;
SELECT DISTINCT ((((((t0.c50)AND(rt0.c1)))OR(t0.c50))) IS TRUE), (((((vt1.c3) BETWEEN (vt1.c3) AND (rt0.c0))))>(((('Ev') BETWEEN (vt1.c2) AND (t0.c50))))), vt1.c2 FROM t0, rt1, rt0 WHERE (ABS(DISTINCT '') COLLATE NOCASE);SELECT ALL ((((vt1.c1)>(rt0.c0)))&(CASE rt1.c2  WHEN vt1.c0 THEN vt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN rt0.c1 THEN vt1.c0 ELSE vt1.c3 END)), NTH_VALUE(((vt1.c2 IN ()) IN (CASE WHEN t0.c50 THEN rt1.c0 ELSE vt1.c3 END, vt1.c0)), CASE WHEN rt1.c1 THEN vt1.c0 ELSE CASE WHEN rt0.c1 THEN rt1.c1 END END) OVER (), 'W㦀!S1x覱_n', ROW_NUMBER() OVER (), vt1.c1 FROM rt1, vt1, rt0, t0; -- 0ms;
SELECT CASE CAST(t0.c50 AS INTEGER)  WHEN ((vt1.lid) NOT BETWEEN (vt1.c2) AND (rt0.c0)) THEN (rt1.c1 IN ()) WHEN (((rt0.c2))!=((rt1.c0))) THEN ((((0.8270006469455298)OR(rt0.c1)))AND(vt1.lid)) WHEN rt0.c2 THEN CAST(vt1.lid AS BLOB) ELSE CAST('' AS NUMERIC) END FROM rt0, vt1, t0, rt1 ORDER BY (~ (CASE vt1.c0  WHEN t0.c50 THEN vt1.c1 WHEN vt1.c1 THEN t0.c50 WHEN x'' THEN rt0.c1 ELSE rt1.c2 END)) ASC  NULLS LAST, ((SQLITE_COMPILEOPTION_GET(t0.c50))-(CAST(rt0.c1 AS TEXT))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((AVG('K}'))LIKE(((((((((rt1.c1)OR(vt1.c1)))OR(rt1.c2)))AND(vt1.c2)))OR(t0.c50)))) FROM rt0, rt1, vt1 WHERE (CASE WHEN CASE WHEN 0.22648021785484895 THEN NULL ELSE '-1386469917' END THEN (('') ISNULL) ELSE x'' COLLATE RTRIM END) LIMIT -1973485796;SELECT PERCENT_RANK() OVER ( ORDER BY (~ ((('') NOT BETWEEN ('ea') AND (t0.c50)))), ((((vt1.c1)|(rt1.c1)))>((((vt1.lid)) NOT BETWEEN ((vt1.c2)) AND ((rt0.c2))))) DESC), ((vt1.c3 COLLATE RTRIM)IS(((((rt1.c0)OR(rt1.c2)))AND(rt1.c1)))), ((((((rt0.c0) NOTNULL))OR(((rt0.c2) NOT NULL))))AND('1631948978')), CAST('' AS BLOB), (((CAST(vt1.c2 AS NUMERIC), ((((((((vt1.c2)AND(rt1.c0)))AND(rt1.c2)))OR(vt1.c2)))AND(NULL)), CASE vt1.c1  WHEN vt1.c1 THEN t0.c50 ELSE rt0.c1 END))<>((AVG(rt1.c2), (((vt1.lid))>=((t0.c50))), MAX(vt1.c3)))) FROM rt1;SELECT DISTINCT TOTAL(((((((((vt1.c2)OR(rt1.c2)))AND(rt0.c2)))OR(vt1.c1)))OR(vt1.lid))) FROM rt1, t0, vt1 LIMIT -660733952;SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ((((vt1.lid) BETWEEN (vt1.lid) AND (x'8a3a'))) ISNULL) FROM vt1, rt0, t0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT INSTR(((((rt0.c2)OR(rt0.c0)))OR(vt1.c0)), ((vt1.lid)IS NOT(vt1.c0))) FROM rt1, t0;SELECT DISTINCT ((((rt0.c0)<=(vt1.c2)))*(((vt1.c1)<=(vt1.c3)))) FROM rt0 WHERE ((('') BETWEEN ((~ (x'e57a1408'))) AND (((((NULL)OR(-7.3174314E8)))OR(0.7503108628508013)))));SELECT SQLITE_COMPILEOPTION_GET('') COLLATE NOCASE FROM rt1 WHERE ((JULIANDAY(0.579917079336796, '5', NULL) IN ())); -- 0ms;
SELECT COUNT(*) OVER ( ORDER BY (((CASE vt1.c2  WHEN rt0.c0 THEN rt0.c0 END, vt1.c2, ((vt1.lid)<<(vt1.lid))))!=((((vt1.lid) NOT BETWEEN (rt0.c0) AND (vt1.c1)), (+ (vt1.c2)), (((vt1.c3)) NOT BETWEEN ((t0.c50)) AND ((vt1.c0))))))  NULLS FIRST) FROM rt0;SELECT DISTINCT LAST_VALUE(json_insert(rt0.c0, (((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))))) OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM rt0 WHERE (((CAST(0Xffffffffbb5e790a AS TEXT)) NOT BETWEEN ((0.015971750371461257 IN (x''))) AND (('-4350463' IN ('', x'c872')))));SELECT COUNT(*) FROM rt0, rt1, t0 WHERE ((((NULL IN (0xffffffffd7077c34)))|(LIKELIHOOD(DISTINCT x'', 0.49379832510901933)))); -- 0ms;
SELECT DISTINCT (((((((vt1.c2)AND(vt1.c1)))AND(rt0.c2))))=(((((rt1.c1, vt1.c3, rt1.c1))<=((rt0.c2, rt1.c0, rt1.c1)))))) FROM rt1, vt1, rt0, t0 WHERE (CAST((('Y0X)XU') ISNULL) AS NUMERIC)); -- 0ms;
SELECT SUM(NULL), ((((rt1.c2) NOTNULL)) IS TRUE), COUNT((rt0.c2 IN ())) OVER () FROM rt0, t0, vt1;SELECT ((((rt0.c2) BETWEEN (t0.c50) AND (vt1.lid)))AND(t0.c50 COLLATE BINARY)) FROM t0, rt1, rt0 WHERE (IFNULL(DISTINCT ((0x7ec0ad99)AND(x'')), -6.56604398E8)) LIMIT -1205099279 OFFSET 1509229594;SELECT DISTINCT ((COUNT(*)) IS FALSE), ((CASE NULL  WHEN '1457525900' THEN vt1.c2 WHEN vt1.c2 THEN t0.c50 WHEN rt0.c2 THEN vt1.c3 ELSE t0.c50 END) IS FALSE), TYPEOF(DISTINCT ((vt1.c0)<=(rt0.c2))) FROM rt1, vt1, t0, rt0 WHERE (((((x'5de5')-(-846506582)))=((((x''))!=(('-731743140')))))); -- 0ms;
SELECT (rt1.c2 IN ()), ((((vt1.c0))>=((rt1.c0))) IN ()), NULL FROM t0, vt1, rt0, rt1 WHERE (((((x'c28c')AND(NULL)))!=(((x'') NOT BETWEEN (0.43071671306663595) AND (x''))))); -- 0ms;
SELECT DISTINCT ((CASE rt1.c0  WHEN vt1.lid THEN rt0.c2 ELSE rt0.c0 END) BETWEEN (AVG('-8575565')) AND ('-282848956')), LEAD(((rt0.c0)IS NOT(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)), NULL, ((CAST(rt0.c2 AS TEXT))>(((rt0.c2)|(rt0.c0))))) OVER (), ((COUNT(*))|(((((((((((((rt0.c0)OR(vt1.c1)))AND('-1360386843')))OR(rt0.c2)))OR(rt1.c0)))OR(NULL)))AND(rt1.c1)))) FROM rt0 WHERE ((((CASE WHEN x'511b' THEN NULL END))<(((('k}') NOT NULL)))));SELECT DISTINCT ((((((((((rt1.c2)GLOB(rt1.c1)))OR(((0.10183059146635032) IS TRUE))))OR((vt1.lid IN (0.6018059936466048)))))AND(((rt0.c0) NOTNULL))))OR(x'')) FROM rt1 WHERE (CAST('' AS NUMERIC) COLLATE RTRIM);SELECT CUME_DIST() OVER ( ORDER BY CASE WHEN rt0.c0 THEN ((vt1.c1)<(vt1.c2)) ELSE ((rt0.c1)AND(rt0.c0)) END) FROM rt1, t0, vt1 WHERE ((((x'', NULL, 'W.')) BETWEEN ((((x'')IS('')), ((NULL)<=('(DJV''8')), 0.1929713053854436)) AND ((CASE '-427830174'  WHEN x'' THEN '2083224191' END, (((NULL)) NOT BETWEEN ((0.21171805927684362)) AND ((NULL))), (('615635080')<(']5'))))));SELECT DISTINCT (((LIKELY(vt1.c1)))=((rt0.c0))) FROM rt0, rt1 WHERE (CASE (('DK') BETWEEN ('0.6593446583546707') AND (NULL))  WHEN 0.2856792856525274 THEN ((x'')>(x'')) ELSE CASE x''  WHEN 0.6796178089233775 THEN 'b〹75q' ELSE x'' END END) UNION ALL SELECT DISTINCT (((+ (rt0.c0)))<=((vt1.c1 IN ()))) FROM rt1 WHERE (NULL);SELECT t0.c50 FROM rt1;SELECT ((vt1.c0) ISNULL) FROM rt0 WHERE (((('' IN ())) NOT BETWEEN (CAST(x'6ddf28ff' AS REAL)) AND ('488190009')));SELECT ((((((vt1.c3)AND(rt0.c0)))AND(vt1.c1)))>=(((vt1.lid) NOT BETWEEN ('zij 朑bi\nb') AND (t0.c50)))) FROM rt1, t0, vt1;SELECT DISTINCT CASE ((vt1.lid)*(rt0.c0))  WHEN json_object(rt0.c0, vt1.c0) THEN TOTAL(rt0.c2) END FROM vt1, t0, rt0;SELECT DISTINCT (((((t0.c50, vt1.c3, rt0.c1)) BETWEEN ((vt1.c3, rt0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, NULL))))LIKE(((rt1.c2) ISNULL))), rt0.c1, (rt1.c0 IN ()) COLLATE NOCASE FROM vt1;SELECT DISTINCT ROUND((((t0.c50)) NOT BETWEEN ((vt1.c2)) AND ((0.40098719679491335))), vt1.c2 COLLATE BINARY) FROM t0;SELECT DISTINCT ((((vt1.c1)OR(rt1.c2))) NOT NULL) FROM rt0, vt1, t0, rt1; -- 0ms;
SELECT CAST((+ (')3')) AS REAL), LIKELY(CAST(vt1.c1 AS NUMERIC)), x'4703' FROM vt1, rt0, rt1; -- 1ms;
SELECT ALL (CAST(rt1.c0 AS TEXT) IN ()) FROM rt0, vt1, rt1, t0; -- 0ms;
SELECT 0.3412901847091434 FROM rt1, rt0, t0; -- 0ms;
SELECT CAST('301743634' AS INTEGER), (('q0')>=(vt1.c1)), CASE ((rt1.c0)&(rt0.c1))  WHEN CASE WHEN t0.c50 THEN rt1.c1 WHEN x'' THEN vt1.c2 WHEN rt0.c1 THEN vt1.c2 WHEN t0.c50 THEN rt0.c2 WHEN vt1.c3 THEN vt1.c3 END THEN rt0.c1 COLLATE BINARY END FROM t0 WHERE ((((0.22424205244880413)) NOT BETWEEN ((('!wD*H-[]1208:117 1009 -7692895216733435811 1542:574: ~' IN ()))) AND ((CAST(1681803773 AS NUMERIC)))));SELECT (((((vt1.c1)) BETWEEN ((rt1.c1)) AND ((vt1.c2)))) BETWEEN (((1472066414) ISNULL)) AND (rt0.c1 COLLATE NOCASE)), IFNULL(SUM(x''), ((vt1.lid) BETWEEN ('658730263') AND (t0.c50))), ((rt0.c2) IS FALSE) COLLATE NOCASE FROM rt0, t0, rt1 LIMIT 826633951;SELECT DISTINCT ((((((((INSTR(NULL, -8575565))AND(((rt1.c2)IS(vt1.c0)))))AND(((((rt0.c1)OR(vt1.c1)))AND(rt1.c2)))))OR(vt1.lid COLLATE RTRIM)))AND(((rt1.c0) ISNULL))) FROM rt1, vt1, t0 ORDER BY ((CASE WHEN vt1.c2 THEN rt0.c1 ELSE rt1.c0 END) IS TRUE)  NULLS LAST;SELECT ALL 0xffffffffbf0eed61 COLLATE BINARY FROM vt1, rt0, rt1, t0 WHERE (((CASE ''  WHEN 0X12040710 THEN '1479482096' ELSE NULL END) IS FALSE)) ORDER BY (((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c3))))/((((rt0.c0)) BETWEEN ((rt1.c1)) AND ((rt0.c2))))), CASE WHEN x'11e4' THEN ((vt1.c1)<(rt1.c2)) WHEN ((vt1.lid)GLOB(vt1.lid)) THEN (NOT (rt1.c1)) WHEN ((((rt1.c0)OR(t0.c50)))AND(rt0.c1)) THEN (vt1.lid IN ()) ELSE CAST(rt0.c1 AS REAL) END ASC; -- 3ms;
SELECT ((TOTAL(vt1.c0)) IS TRUE), ((rt0.c0) IS FALSE), (~ (vt1.c3)), (+ (CAST(rt1.c2 AS REAL))), (+ (((((rt0.c1)AND(NULL)))OR(x'')))) FROM t0, rt1, rt0, vt1 WHERE (CAST((NULL IN ()) AS NUMERIC)) ORDER BY ((((rt0.c0)) BETWEEN ((x'')) AND ((rt1.c0))) IN (rt0.c1)) ASC  NULLS FIRST; -- 0ms;
SELECT ((((((x'')>>(rt0.c2)))AND((NOT (vt1.c1)))))OR((((vt1.c3))=((vt1.c3))))) FROM rt0, t0, rt1, vt1 WHERE (((((SUBSTR('Q-~t', '0.0'))AND((('-563356819') BETWEEN (NULL) AND (x'3feba1f4')))))AND(CASE -376016967  WHEN 0.2988228035228474 THEN 'b' ELSE 16652496 END))); -- 0ms;
SELECT DISTINCT ((((1.905111369E9)OR(TOTAL(vt1.lid))))OR(TRIM(DISTINCT rt1.c0))), (- (vt1.c1)) COLLATE NOCASE, (~ (((vt1.c1) NOT BETWEEN (vt1.c2) AND (NULL)))) FROM t0, rt0, rt1 ORDER BY IFNULL(rt1.c0, rt1.c2) COLLATE BINARY ASC;SELECT ALL (~ (((((NULL)AND(rt0.c0)))OR(vt1.c3)))), ((CAST(vt1.c1 AS NUMERIC)) BETWEEN (vt1.lid) AND (rt1.c2)), rt1.c1 FROM rt0 INTERSECT SELECT ALL (NOT ((((('xspZy8')OR(rt0.c0)))OR(rt0.c1)))), ROUND(((rt0.c1) IS FALSE), x''), ((((LIKELY(vt1.lid))AND(CASE rt1.c2  WHEN rt0.c2 THEN vt1.c3 ELSE rt0.c2 END)))OR(rt0.c0 COLLATE NOCASE)) FROM t0, rt0, rt1 ORDER BY ((rt1.c1) BETWEEN (vt1.c2) AND (vt1.c2)) COLLATE RTRIM;SELECT ALL CASE JULIANDAY(NULL, vt1.c1, rt1.c0)  WHEN ((rt1.c0) BETWEEN (rt0.c1) AND (rt1.c0)) THEN (vt1.c2 IN ()) WHEN LENGTH(rt1.c0) THEN ((rt0.c0)GLOB(rt0.c2)) WHEN rt1.c1 COLLATE RTRIM THEN vt1.c2 COLLATE RTRIM END, ((CASE vt1.c2  WHEN vt1.c2 THEN rt0.c2 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN x'd103' WHEN rt0.c1 THEN rt0.c1 END) BETWEEN (((((t0.c50)AND(vt1.c1)))AND(vt1.c1))) AND (((rt1.c2) BETWEEN (vt1.c3) AND (rt0.c0)))), DENSE_RANK() OVER () FROM rt1, vt1, rt0, t0; -- 0ms;
SELECT DISTINCT (((rt1.c0)) NOT BETWEEN ((UNLIKELY(vt1.c2))) AND ((CASE WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.lid WHEN rt1.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END))) FROM t0, rt0;SELECT ALL (GROUP_CONCAT(vt1.c3) IN ()), x'', ((((((rt1.c0)AND(vt1.c0)))OR(rt0.c2))) IS TRUE) FROM t0, vt1, rt0, rt1 WHERE ((~ ((((0.538164191610524)) NOT BETWEEN ((0X6584bf9f)) AND ((NULL)))))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE NOCASE)!=(GROUP_CONCAT(t0.c50))) FROM rt1, vt1, t0, rt0 WHERE (((((x'') IS TRUE))>(((x'48fc')<>('1681835710'))))) ORDER BY t0.c50 DESC  NULLS LAST LIMIT 458283954 OFFSET -487815392; -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(vt1.c0)  WHEN CAST(vt1.c0 AS TEXT) THEN TRIM(DISTINCT vt1.lid, rt0.c0) END FROM t0, vt1 WHERE (((TRIM(DISTINCT '', NULL))<=(((NULL)LIKE(NULL)))));SELECT DISTINCT x'' FROM t0, rt1; -- 0ms;
SELECT ALL (((vt1.c3 IN ()))<((((rt0.c0, rt1.c1, t0.c50))=((rt0.c2, rt1.c0, vt1.lid))))), ((CAST(vt1.c3 AS REAL)) BETWEEN ((((vt1.c2, vt1.c3, rt0.c0))<=((rt1.c0, vt1.c1, vt1.c2)))) AND ((~ (rt0.c0)))), ((((rt0.c1)&('!|X/_'))) IS TRUE) FROM t0, rt0 ORDER BY ((((PRINTF(rt0.c1))AND((('196034869') NOT BETWEEN (vt1.c1) AND (rt0.c2)))))AND(rt0.c0)) DESC;SELECT DISTINCT vt1.c1, NTH_VALUE(((((0X6b037a31) NOT BETWEEN (vt1.c3) AND (vt1.c0))) ISNULL), ((((vt1.lid)LIKE(vt1.c1))) ISNULL)) OVER (), (CASE 0xffffffffb0bc224d  WHEN rt0.c1 THEN vt1.c2 END IN (((vt1.c1) NOT NULL))) FROM vt1 WHERE (((((0.6184338714216769)=(0.7185288577958554))) BETWEEN (0X1292ab6c COLLATE NOCASE) AND (CASE 1017253339  WHEN '-1897846163' THEN '' END))) LIMIT 1681803773 OFFSET -676610418;SELECT CASE WHEN COUNT(rt1.c1) THEN (- (NULL)) END, ((vt1.c3) NOT BETWEEN (rt1.c1) AND (vt1.c0)) COLLATE BINARY, NULL FROM t0, vt1, rt0 WHERE (TRIM(x'1400'));SELECT DISTINCT 0.7196008968761883 FROM vt1, rt1 WHERE ((((('1149095875') IS FALSE)) BETWEEN (CASE WHEN NULL THEN 0.7529986089536508 WHEN 0.36827923045288113 THEN '+Z' WHEN 0X4245c46e THEN '' ELSE '1174233150' END) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM rt0, rt1, vt1 WHERE (LIKELY(x'')) GROUP BY ((((vt1.c3)) BETWEEN ((rt0.c0)) AND ((rt1.c0))) IN ('r~7(-ch\n')), CASE ((('ow%5耏K', rt0.c1, rt1.c1)) NOT BETWEEN ((vt1.lid, rt1.c2, vt1.c1)) AND ((rt0.c0, t0.c50, t0.c50)))  WHEN TRIM(DISTINCT t0.c50, vt1.c0) THEN ((rt0.c0) IS FALSE) WHEN ((vt1.c3) IS FALSE) THEN ((((((((vt1.lid)AND(rt1.c1)))OR(-1967020230)))AND(t0.c50)))OR(t0.c50)) WHEN rt1.c2 THEN x'' WHEN ((((t0.c50)AND(NULL)))AND(1.870082E9)) THEN ((vt1.lid) NOT BETWEEN (0X21a8a49a) AND (rt0.c0)) WHEN vt1.c3 THEN ((rt0.c1) NOTNULL) ELSE ((x'') NOT NULL) END, LOWER(vt1.c1 COLLATE RTRIM) HAVING (((rt0.c2)) BETWEEN ((((rt0.c0)AND(vt1.c2)))) AND (((((vt1.c3)) BETWEEN ((rt1.c2)) AND ((vt1.c3))))));SELECT DISTINCT ((CAST(rt1.c0 AS REAL))&((((vt1.c1))>((rt0.c1))))) FROM t0, rt0, rt1 GROUP BY TYPEOF(DISTINCT (('x Yl!<*') NOT BETWEEN (x'') AND (NULL)));SELECT DISTINCT TRIM((((x'')) NOT BETWEEN ((rt0.c1)) AND ((vt1.lid))), CASE WHEN vt1.lid THEN rt1.c1 WHEN vt1.lid THEN t0.c50 WHEN rt0.c0 THEN rt0.c0 ELSE rt1.c1 END) FROM rt1, t0, vt1 WHERE (((((x'') ISNULL)) BETWEEN ('r\n') AND (((((x'cf22')OR('-232453844')))AND(NULL)))));SELECT ALL CAST((NOT (NULL)) AS REAL) FROM t0, rt0 WHERE ((((NULL, NULL, '-1076027900')) NOT BETWEEN ((0.9503659999029223, '1197160609', x'')) AND ((x'43b29f78', x'', '-729848543'))) COLLATE NOCASE) LIMIT -1733267759; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0, vt1, rt0 WHERE ((ABS(0x5f2e76cb) IN ((0.07178653468619134 IN ())))) ORDER BY ((CAST(vt1.c3 AS BLOB)) ISNULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((vt1.c1)>=(rt0.c2)))>>((- (vt1.c2)))) FROM rt0, t0, vt1 WHERE ((0.35779576185777373 IN ())); -- 0ms;
SELECT ((0xffffffffd85967ed) IS FALSE) FROM t0 WHERE (((('-1719310575')) NOT BETWEEN ((((((-1.462237948E9)OR(NULL)))AND('567135190')))) AND ((((NULL) NOT BETWEEN ('9223372036854775807') AND (0.15946602698140855)))))); -- 0ms;
SELECT TOTAL(((rt0.c2)AND(rt1.c1))) FROM rt1, rt0 WHERE (LIKELIHOOD(DISTINCT ((NULL)&(0.22024328553589823)), 0.9280810929954126)); -- 0ms;
SELECT (((rt0.c0)) BETWEEN (((rt0.c1 IN (vt1.lid)))) AND ((NULL))) FROM t0, rt1 WHERE ((((NULL COLLATE NOCASE))>((json(x'7cdd170b'))))) ORDER BY ((((vt1.c3) NOTNULL)) BETWEEN (((0x34f5c83f) IS FALSE)) AND (rt0.c1)) DESC LIMIT 1791277642;SELECT ((((((((CAST(rt1.c2 AS NUMERIC))AND(CASE WHEN vt1.c1 THEN vt1.c3 END)))OR((rt1.c1 IN ()))))AND(rt1.c0)))OR('')), '-563356819', COUNT(*) FROM t0;SELECT DISTINCT 0.1707894823920092 FROM t0, vt1 WHERE (((0.07121314436881732)IS NOT(((NULL) NOT BETWEEN (0.7463236482475911) AND ('1180152139'))))); -- 0ms;
SELECT CHANGES(), ((((vt1.c3 COLLATE BINARY)AND('0.8843075503091495')))OR(CAST(rt0.c1 AS NUMERIC))), (((rt0.c1)||(vt1.c1)) IN ()) FROM vt1, t0, rt1, rt0 WHERE (LOWER(DISTINCT HEX(DISTINCT '788354039'))) ORDER BY (NOT (((rt0.c2)>>(rt0.c1))))  NULLS LAST; -- 0ms;
SELECT DISTINCT 0x362f2a5e, SUM((vt1.c1 IN (rt0.c1, vt1.c3))), COUNT((rt1.c2 IN ()) COLLATE RTRIM) FROM rt1, rt0 WHERE (CASE WHEN ((255129218)IS NOT(NULL)) THEN '788354039' COLLATE BINARY END);SELECT (~ (((x'')IS(rt0.c0)))), (- ((rt0.c0 IN (t0.c50)))), '-266761401', LOWER(((rt0.c1) IS TRUE)), ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((((vt1.c0))>=((vt1.c3)))) AND ((rt0.c1 IN ()))) FROM rt0, vt1 WHERE (CASE (0x1d0c2f68 IN ())  WHEN (((('-266761401')OR(-1.7976931348623157E308)))OR(NULL)) THEN (- (NULL)) ELSE LIKELY(DISTINCT 0.8439850212411651) END);SELECT DISTINCT (~ (SUM(rt1.c0))) FROM vt1, rt1, t0, rt0 WHERE (((((GLOB(0.16497069225760397, x''))AND(CASE x''  WHEN x'' THEN 0X653e5056 ELSE 0.39327879918899844 END)))OR(((((((((NULL)AND(NULL)))AND(NULL)))OR(NULL)))OR(x''))))) GROUP BY (((((((((vt1.c0)AND(vt1.c2)))AND(vt1.c0)))OR(-1943511508)))OR(vt1.c0)) IN ()), (~ (CASE WHEN rt1.c0 THEN 'AM' ELSE vt1.c1 END)), (((t0.c50)) NOT BETWEEN ((((((t0.c50)AND(rt1.c2)))AND(vt1.c3)))) AND ((TRIM(vt1.c3, vt1.c0)))) HAVING (NOT (CASE WHEN rt1.c0 THEN x'' END)) LIMIT -1; -- 0ms;
SELECT ALL rt0.c0, ((UNLIKELY(DISTINCT rt1.c2))>(((rt0.c2)IS NOT(rt1.c0)))), '-441321555' FROM rt0;SELECT ALL GROUP_CONCAT(CAST(t0.c50 AS BLOB)) OVER () FROM rt1, vt1;SELECT ((((((((CAST(t0.c50 AS TEXT))OR(rt0.c2 COLLATE RTRIM)))OR((~ (rt0.c0)))))AND((((rt1.c1)) NOT BETWEEN ((vt1.c3)) AND ((vt1.c2))))))OR(LOWER(vt1.c2))), ((((vt1.c3) BETWEEN (0.2501181286806907) AND (0.9770957571145853))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c2))) AND (rt0.c0 COLLATE NOCASE)), ((((vt1.c1) NOTNULL))|(0.9775909515634896)) FROM t0;SELECT ALL ((((((((((((((((rt0.c1)OR(-1797042366)))AND(rt1.c1)))AND(vt1.c2)))AND(vt1.c1)))OR(t0.c50)))OR(rt0.c1)))OR(((rt1.c1) NOT BETWEEN (t0.c50) AND (vt1.c2)))))OR(rt0.c2 COLLATE NOCASE)), ((((vt1.c2)/(rt1.c1))) NOT BETWEEN (((vt1.c0)-(vt1.c1))) AND (((vt1.lid)/(vt1.c2)))), vt1.c0 FROM rt0, t0, vt1, rt1 WHERE ((~ (x''))) ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c2))))+(((((vt1.c2)AND(rt0.c2)))AND(rt1.c0))))  NULLS LAST; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1 WHERE ('-1759723345'); -- 0ms;
SELECT ((ABS(rt1.c2)) IS TRUE), vt1.c0, json_type(CASE vt1.c2  WHEN vt1.c3 THEN rt1.c1 WHEN vt1.c3 THEN 0.7615489143113302 WHEN vt1.lid THEN vt1.c2 ELSE vt1.c1 END) FROM t0, vt1, rt0 WHERE (((((((x'93e0') ISNULL))AND((0.049210543640023974 IN ()))))OR(((NULL)>=('529210987'))))) ORDER BY LIKELIHOOD(DISTINCT ((((vt1.c2)OR(vt1.c2)))AND(vt1.c1)), 0.26947316341821004) ASC  NULLS LAST, rt0.c0, (((((~ (NULL)))AND((((vt1.c0))>((rt1.c0))))))OR((((vt1.c3))=((rt1.c1)))))  NULLS LAST;SELECT DISTINCT SUM(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 END) OVER () FROM rt0, t0 WHERE ((((('1631948978')>=(0.16440454366101875))) ISNULL));SELECT DISTINCT (((rt0.c1))>=(('-989274067'))) COLLATE NOCASE FROM t0;SELECT DISTINCT '0.7723338009970385' FROM rt0, t0, rt1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY (- ((vt1.c3 IN ())))  NULLS LAST) FROM rt1, t0, vt1, rt0 UNION ALL SELECT DISTINCT CASE (((vt1.c3)) BETWEEN ((rt0.c2)) AND ((vt1.c1)))  WHEN CASE vt1.c1  WHEN t0.c50 THEN vt1.c2 END THEN (rt0.c0 IN (rt0.c0)) WHEN MAX(vt1.c1) THEN ((((t0.c50)AND(vt1.lid)))OR(rt1.c0)) WHEN ((rt0.c0)<(vt1.c2)) THEN ((((rt1.c0)AND(rt1.c1)))OR(rt1.c1)) ELSE AVG(rt1.c2) END FROM vt1, t0, rt1, rt0 WHERE (CASE ((((((((0.3132873988141476)OR(NULL)))AND(NULL)))AND(0.7252806833921978)))OR(0X7bd807ce))  WHEN ((0.3395595475497881)LIKE(-1)) THEN ((NULL) NOT BETWEEN (NULL) AND ('1592035492')) ELSE ((NULL) NOT NULL) END); -- 0ms;
SELECT DISTINCT x'' FROM vt1; -- 0ms;
SELECT DISTINCT (((((((((rt1.c2 IN ()))AND(((rt1.c0)<=(rt0.c1)))))AND(rt0.c1 COLLATE NOCASE)))AND(((((rt0.c0)AND(vt1.c1)))OR('')))))OR(((vt1.c2)GLOB(vt1.lid)))) FROM rt1;SELECT DISTINCT COALESCE(DISTINCT ((vt1.c1) BETWEEN (vt1.c1) AND (rt1.c2)), ((0.7283041326929528)||(vt1.c1))) FROM t0, rt1, rt0, vt1; -- 0ms;
SELECT DISTINCT ((((CAST(vt1.c0 AS INTEGER))AND(((rt1.c0) BETWEEN (rt1.c2) AND (NULL)))))AND(((rt0.c1)==(vt1.c1)))) FROM rt1;SELECT DISTINCT (+ (0.23807644454719146)) COLLATE RTRIM, LAST_VALUE((((('Y0X)xu')IS NOT(rt0.c2)))GLOB(((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c50))))) OVER (), UPPER((vt1.lid IN ())) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (rt1.c0 IN ()) COLLATE NOCASE FROM vt1, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c0)=(vt1.c2)))IS(CASE WHEN vt1.c0 THEN vt1.c3 END)) FROM rt0, vt1; -- 0ms;
SELECT ALL '2yHW', ((((((vt1.c3, rt1.c1, vt1.lid)) NOT BETWEEN ((vt1.c0, vt1.c3, 'Xoe~Fcx㩨3')) AND ((vt1.c0, rt0.c0, rt1.c1))), (vt1.c1 IN (rt1.c2, vt1.c1)), ((rt1.c2) IS TRUE)))<>(((((rt1.c0)) BETWEEN ((vt1.c2)) AND ((rt0.c1))), '881222718', vt1.c1 COLLATE RTRIM))), LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt1.c2 THEN vt1.lid END, 0.49004203306410987) FROM rt0, vt1, t0;SELECT GROUP_CONCAT(rt0.c1 COLLATE RTRIM COLLATE BINARY) FROM rt1, rt0 LIMIT 141520916; -- 1ms;
SELECT (((vt1.c3)) NOT BETWEEN ((((rt1.c2) BETWEEN (vt1.c2) AND (vt1.c2)))) AND ((((vt1.c0) NOT NULL)))), (((vt1.c0)) BETWEEN ((-1360630147)) AND ((((rt1.c2)||(rt0.c0))))), TRIM('-407390941', UNLIKELY(DISTINCT rt1.c2)), (((((rt0.c0)AND(rt1.c1)))OR(vt1.c3)) IN (CASE rt1.c2  WHEN x'' THEN rt1.c2 ELSE '-2087018265' END, ((rt0.c1)=(NULL)))), ((((NOT (rt0.c0))))==((QUOTE(rt1.c1)))) FROM vt1;SELECT ALL (((''))>(((~ (vt1.c0))))) FROM t0, rt1, rt0, vt1 WHERE ((((('', '1153268707', 0xb63f6f5)) BETWEEN (('458283954', NULL, ']房')) AND ((NULL, 0.3918966221209831, '4)'))) IN ())) LIMIT -978973365 OFFSET 1145255261; -- 0ms;
SELECT ALL ('骢S' IN ()), ((vt1.c1 COLLATE NOCASE) IS TRUE), (((((((((vt1.c1)OR('0.4257640330333722')))AND(vt1.lid)))AND(rt1.c0)))AND(vt1.c1)) IN (0.519105259865797)) FROM vt1, rt0, t0, rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c0)|(rt1.c0))) IS TRUE) FROM rt1, t0, rt0, vt1; -- 0ms;
SELECT CASE WHEN ((((rt0.c1)OR(vt1.c1)))OR(rt0.c0)) THEN CASE vt1.lid  WHEN vt1.c1 THEN t0.c50 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c2 THEN rt0.c1 END WHEN ((t0.c50)!=(vt1.c0)) THEN x'' WHEN ((vt1.c2)=(vt1.c1)) THEN (((vt1.c3, t0.c50, vt1.lid, rt1.c1, '525174728', rt1.c2, vt1.c1)) BETWEEN ((vt1.lid, vt1.c3, vt1.c2, 0.2685962424213807, vt1.c0, rt1.c2, vt1.c0)) AND ((rt1.c2, vt1.c3, t0.c50, rt0.c1, 0.0847690938761968, vt1.c1, rt1.c1))) ELSE rt1.c0 COLLATE RTRIM END FROM rt0;SELECT (((GROUP_CONCAT(vt1.lid)))<((x'5a36'))), ((((rt1.c1 COLLATE BINARY)AND((NOT (rt1.c0)))))OR(((rt0.c2) IS TRUE))), LIKELIHOOD(DISTINCT (rt0.c1 IN ()), 0.27199446167050123), (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) COLLATE BINARY, (((((((((((rt1.c2))!=((rt1.c0))))AND(((vt1.c2) IS TRUE))))AND(LIKELY(DISTINCT t0.c50))))OR(vt1.c0 COLLATE NOCASE)))OR(((rt1.c1) NOT BETWEEN (vt1.c1) AND (vt1.c3)))) FROM rt0;SELECT HEX(DISTINCT ((vt1.c3)/(rt1.c0))) FROM rt0, t0, rt1, vt1 WHERE (COALESCE(DISTINCT x'' COLLATE BINARY, ((NULL) NOT BETWEEN (NULL) AND (0.15493823286810438)))) GROUP BY CASE (~ (0.3682683022232355))  WHEN '-1929896780' THEN NULL WHEN (+ (NULL)) THEN TRIM(rt1.c0, rt0.c1) WHEN ((rt1.c0)LIKE(rt1.c0)) THEN IFNULL(DISTINCT rt0.c0, rt1.c2) END ORDER BY ((t0.c50) BETWEEN (rt0.c2 COLLATE RTRIM) AND (((vt1.c0)>=(rt1.c0)))) LIMIT -1347105720; -- 0ms;
SELECT (((rt1.c1)) BETWEEN ((LTRIM(0.31007205977304775))) AND ((((rt1.c0) NOT BETWEEN (rt0.c2) AND (rt1.c0))))) FROM rt0, vt1 WHERE ((('' IN (0.14969049174634474)) IN ()));SELECT ALL (CASE WHEN vt1.c3 THEN '' ELSE vt1.c1 END IN ()) FROM t0 WHERE ((((((((((((NULL))!=((0.8533871320025649))))OR(((('oⴒf^?敬')) BETWEEN ((0.9983972081514829)) AND ((0.7865845774105475))))))OR((('-126689967')<=(0.20217850426349704)))))OR('-328331949' COLLATE NOCASE)))OR(CASE ''  WHEN '' THEN 0.5624395325008291 END))) LIMIT -1770304723; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (+ (rt1.c2))), ((rt1.c2)<<(CASE WHEN vt1.c3 THEN rt0.c0 ELSE t0.c50 END)), ((MAX(rt1.c0))>(((rt1.c0) NOT BETWEEN ('-1384363224') AND (rt1.c2)))) FROM rt0, t0, vt1, rt1 WHERE ((((NOT ('637686309')))&(0.18904865889430134))); -- 0ms;
SELECT ALL (~ (((t0.c50)/(rt0.c2)))), ((rt1.c1 IN ()) IN ()), ((UNLIKELY(DISTINCT t0.c50)) IS TRUE) FROM vt1;SELECT DISTINCT ((((vt1.c2)/(t0.c50)))%(GROUP_CONCAT(vt1.c3))), (CAST(vt1.c2 AS BLOB) IN ()), (((CASE WHEN vt1.lid THEN vt1.lid ELSE rt1.c1 END, (- (rt0.c0)), UPPER(vt1.c2), ((rt1.c1)AND(vt1.lid)), ((rt0.c1) BETWEEN (vt1.c2) AND (rt1.c2))))<=(((- (vt1.c1)), ((t0.c50)>>(vt1.lid)), GROUP_CONCAT(vt1.lid), vt1.c0 COLLATE NOCASE, vt1.lid COLLATE NOCASE))) FROM t0, rt1, vt1, rt0 LIMIT -1168042258 OFFSET 735948030; -- 1ms;
SELECT ((CASE WHEN rt0.c2 THEN rt0.c2 END)IS(((rt1.c1)LIKE(vt1.c0)))) FROM t0, vt1, rt0, rt1; -- 0ms;
SELECT ((CASE WHEN NULL THEN vt1.c1 END)<<(((rt1.c1) IS TRUE))), vt1.c2, ((((vt1.c0)<=(rt1.c2)))!=(CAST(vt1.lid AS INTEGER))) FROM rt0 WHERE (CAST(-1892157101 COLLATE NOCASE AS TEXT)) GROUP BY CAST(((rt0.c1)!=(-4.41321555E8)) AS TEXT) HAVING 0xffffffff999e73d2;SELECT ALL (((vt1.lid) IS TRUE) IN ()), (((((~ (x'')))OR(t0.c50)))AND(rt0.c2 COLLATE RTRIM)), (((~ (rt0.c0))) NOT BETWEEN (((vt1.c1) NOTNULL)) AND (((((rt0.c0)OR(vt1.c1)))OR(rt1.c1)))), ((((CASE rt1.c1  WHEN rt1.c1 THEN 0.5206733858138856 END)AND(CASE vt1.c3  WHEN rt0.c2 THEN vt1.c2 ELSE vt1.lid END)))OR((((vt1.lid, rt1.c0, 0.08623603358786347)) NOT BETWEEN ((vt1.lid, vt1.c1, '-1837488696')) AND ((vt1.c3, rt0.c1, vt1.c1))))), CASE ((t0.c50) NOT BETWEEN (rt1.c0) AND (vt1.c0))  WHEN TOTAL(vt1.c2) THEN CAST(rt0.c2 AS BLOB) ELSE CASE WHEN vt1.c3 THEN rt1.c2 ELSE rt0.c1 END END FROM rt0, rt1, vt1, t0 WHERE (CAST((+ (1905111369)) AS REAL)); -- 0ms;
SELECT DISTINCT (((rt1.c2)) NOT BETWEEN ((((((((((((((vt1.c1)OR(vt1.c2)))AND(rt1.c2)))AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c1)))AND(rt1.c0)))) AND ((((rt1.c0)>(vt1.lid))))) FROM t0 ORDER BY CAST(CAST(vt1.c1 AS INTEGER) AS INTEGER) DESC;SELECT ALL (((rt1.c1)) NOT BETWEEN (((NOT (rt1.c1)))) AND ((((rt1.c1) ISNULL)))) FROM rt0, vt1 LIMIT -1121930432;SELECT DISTINCT vt1.c2 FROM rt1 ORDER BY CASE ((((vt1.lid)OR(rt1.c1)))OR(vt1.c1))  WHEN ((t0.c50) IS FALSE) THEN CASE WHEN rt0.c0 THEN rt1.c2 END ELSE ((((vt1.c2)AND(rt1.c0)))AND(rt0.c2)) END  NULLS LAST;SELECT (+ (((((((((vt1.c2)AND(rt0.c1)))AND(rt1.c2)))OR(vt1.c2)))OR(vt1.c0)))) FROM rt1, rt0, t0;SELECT DISTINCT TOTAL(((vt1.c3) BETWEEN (vt1.c2) AND (vt1.c1))) FROM rt1, rt0, vt1 ORDER BY ((NULL)LIKE(((((vt1.c3)AND(vt1.lid)))AND(rt1.c0)))), ((CAST(vt1.c3 AS REAL))<=(0.7535899196376759 COLLATE NOCASE)) DESC  NULLS FIRST; -- 1ms;
SELECT ALL ((rt0.c0)LIKE(rt1.c2)) COLLATE NOCASE COLLATE BINARY FROM vt1 WHERE (CAST((+ (NULL)) AS TEXT));SELECT ((rt0.c1 COLLATE NOCASE)<=(((rt0.c0)LIKE(rt1.c0)))), CASE ((rt0.c1) IS TRUE)  WHEN (rt0.c0 IN ()) THEN (NOT (vt1.c0)) WHEN LTRIM(rt1.c1, vt1.c2) THEN CASE rt1.c2  WHEN rt1.c0 THEN rt0.c0 WHEN t0.c50 THEN vt1.c0 WHEN vt1.c3 THEN vt1.c0 ELSE t0.c50 END WHEN COUNT(rt0.c0) THEN GROUP_CONCAT(vt1.c2) END, CAST(((rt0.c1) BETWEEN (rt1.c0) AND (vt1.c0)) AS TEXT) FROM rt0 INNER JOIN t0 ON json_array_length(((rt1.c1)|(vt1.c3))) WHERE ((('' COLLATE RTRIM)IS NOT((((x''))=((NULL))))));SELECT ((((((vt1.c0)+(rt1.c1)))OR(SUM(t0.c50))))AND(0.03280052743165873)) FROM vt1;SELECT ALL vt1.c0 FROM rt1, t0, rt0 ORDER BY ((((rt1.c1) NOTNULL))<(CASE rt1.c1  WHEN rt1.c2 THEN rt0.c1 ELSE vt1.c1 END)) ASC;SELECT CAST(COALESCE(rt1.c2, NULL) AS NUMERIC) FROM rt1; -- 0ms;
SELECT CAST(TOTAL(vt1.lid) AS REAL), ((vt1.lid)IS NOT('3.Oit?蘝')) COLLATE NOCASE, (((x'')>=(vt1.c3)) IN (vt1.c3 COLLATE NOCASE)) FROM vt1, rt1, rt0 NOT INDEXED, t0; -- 0ms;
SELECT (((vt1.c0)) NOT BETWEEN ((((vt1.lid)AND(vt1.c3)))) AND ((((t0.c50)<=(''))))), COUNT('130585436'), ((CAST(rt0.c2 AS INTEGER)) NOTNULL) FROM rt1, t0, vt1, rt0 WHERE ((NOT ((((1.863844182E9, -4.87815392E8, -1.7976931348623157E308)) NOT BETWEEN ((0.6745549431358564, '1509229594', '-503014750')) AND ((x'fbf5', 0.8165919697616901, NULL)))))); -- 0ms;
SELECT ALL GROUP_CONCAT(JULIANDAY(rt1.c1, rt0.c0, vt1.lid)) OVER () FROM rt1;SELECT DISTINCT 0.7078155268509358, CAST(CAST(rt1.c0 AS TEXT) AS INTEGER), AVG(((((t0.c50)AND(vt1.c3)))AND(x''))) OVER () FROM t0, vt1, rt1 WHERE (((((('S', '', 1)) BETWEEN (('', '', 'q*')) AND ((0.7371069664618064, NULL, NULL))))IS NOT(('-1962951441' IN ())))) ORDER BY (- ((((rt0.c0)) BETWEEN ((vt1.c3)) AND ((rt1.c1))))) ASC  NULLS LAST;SELECT ALL CASE WHEN TOTAL(rt0.c2) THEN ((((rt1.c2)AND(vt1.c0)))AND(t0.c50)) END FROM vt1, rt0, t0, rt1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c1)) AS BLOB) FROM vt1, rt1, rt0, t0 WHERE (((((' Q''[NvQ\n') ISNULL))IS(('1520762885' IN ())))); -- 0ms;
SELECT (((rt1.c0)) NOT BETWEEN ((CAST(vt1.c2 AS INTEGER))) AND ((((rt0.c2) NOT BETWEEN (rt1.c1) AND (vt1.lid))))) FROM t0, vt1, rt0 WHERE (CAST(x'4622' AS NUMERIC));SELECT rt1.c2, CASE CAST(rt0.c0 AS REAL)  WHEN (NOT (rt1.c2)) THEN LIKELY(DISTINCT vt1.c2) END, ((((vt1.lid) IS FALSE))<(((rt0.c0) BETWEEN (vt1.c1) AND (vt1.c3)))), 0x328ce0db, rt0.c2 FROM vt1, t0;SELECT ALL rt1.c0 FROM rt0 WHERE ((-1089540767 IN ()) COLLATE RTRIM) GROUP BY ((((((((((((((((NULL)AND(rt1.c0)))AND(t0.c50)))AND(vt1.lid)))AND(vt1.c1)))AND(vt1.lid)))AND(rt0.c0)))OR(vt1.c1 COLLATE BINARY)))AND(((((((((vt1.c3)AND(vt1.lid)))AND(rt0.c2)))AND(vt1.c1)))AND(vt1.c3)))) HAVING ((vt1.c2 COLLATE BINARY) BETWEEN ((vt1.c0 IN ())) AND (rt0.c0));SELECT DISTINCT ((((((rt0.c1)OR(vt1.c0)))AND(vt1.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND ('?㙅' COLLATE RTRIM)), (NULL IN ()), LAST_VALUE(CAST(CAST(rt0.c1 AS BLOB) AS TEXT)) OVER () FROM t0, rt1, rt0;SELECT DISTINCT AVG((- (t0.c50))) OVER () FROM rt0, rt1, t0, vt1; -- 0ms;
SELECT DISTINCT CASE rt1.c2  WHEN (((rt0.c0, rt1.c0, rt0.c2)) BETWEEN ((vt1.lid, rt1.c1, rt1.c1)) AND ((vt1.c0, rt0.c2, vt1.c0))) THEN rt0.c2 COLLATE NOCASE ELSE COUNT(*) END, (((rt0.c2)OR(rt1.c1)) IN (((rt1.c1)<=(vt1.c3)))), CASE (0.322547192174351 IN ())  WHEN (vt1.c2 IN ()) THEN CAST(rt0.c1 AS TEXT) WHEN CASE rt1.c0  WHEN vt1.c2 THEN rt1.c2 ELSE -1592119644 END THEN ((rt1.c0)+(vt1.lid)) WHEN (rt0.c2 IN ()) THEN (((rt0.c2, rt1.c1, vt1.c2)) NOT BETWEEN ((rt0.c1, rt1.c1, t0.c50)) AND ((rt0.c0, rt0.c0, rt0.c0))) END FROM rt0, rt1, t0, vt1; -- 1ms;
SELECT DISTINCT SUM(CASE vt1.lid  WHEN x'' THEN t0.c50 END) OVER () FROM rt1, t0, vt1, rt0 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (NOT (((rt1.c2)<>(rt1.c2)))) FROM rt1; -- 0ms;
SELECT ALL (NOT ('')) COLLATE NOCASE, ((rt1.c2 IN ()) IN (((((0.1530479632490056)AND(vt1.lid)))OR(rt0.c2)))), CASE WHEN (NOT (rt0.c1)) THEN (NOT (0.5636469641284036)) ELSE (+ ('-1702524121')) END, COUNT(CAST('' AS NUMERIC)), ((rt0.c1) NOT BETWEEN ((NOT (rt0.c1))) AND (((rt0.c0)-(rt1.c2)))) FROM vt1;SELECT ALL (((((vt1.c1) BETWEEN (vt1.c3) AND (x''))))>((vt1.c2))) FROM t0, rt0, rt1, vt1 WHERE (CASE (((x'314c'))>((NULL)))  WHEN ((NULL) NOT NULL) THEN CAST(NULL AS REAL) END) UNION SELECT ALL COALESCE('1563192160', ((rt1.c1)LIKE(rt1.c2)), vt1.c3 COLLATE RTRIM, (((vt1.c2)) BETWEEN ((vt1.c3)) AND ((rt0.c1)))) FROM rt1, vt1, rt0; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER (), json_remove(x'', TOTAL(rt1.c1)), (+ (HEX(vt1.lid))) FROM rt0, rt1, vt1 WHERE (((('-1717668910'))>=(('0.8301327543501408'))) COLLATE RTRIM);SELECT DISTINCT ((((vt1.c2)GLOB(vt1.c2)))!=((rt0.c0 IN ()))), ((((rt1.c0) NOT BETWEEN (t0.c50) AND (rt1.c1)))<<('1099506735')), (((rt1.c2) BETWEEN (rt0.c1) AND (248278789)) IN ()) FROM rt1, t0, vt1, rt0 WHERE (CASE ((NULL)/(NULL))  WHEN (('460953355')=(x'')) THEN ((NULL)<=(NULL)) END); -- 0ms;
SELECT ALL ((((((((rt1.c2)AND(vt1.c0)))OR(rt1.c2)))AND(rt0.c0)))OR(rt1.c1)) COLLATE NOCASE FROM t0, vt1;SELECT DISTINCT (- (((vt1.c0) BETWEEN (rt1.c0) AND (vt1.c0)))) FROM rt1 LIMIT 949245445 OFFSET 1934771591;SELECT DISTINCT LAG(CASE (((rt0.c2, rt0.c0, rt0.c2)) BETWEEN ((t0.c50, rt0.c1, t0.c50)) AND ((t0.c50, '1551967885', rt0.c0)))  WHEN (+ (rt0.c1)) THEN ((rt0.c0)%(rt0.c2)) END, ((- (rt0.c0)) IN ()), (NOT ((((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((t0.c50, rt0.c0, rt0.c2)))))) OVER () FROM t0, rt0 LIMIT 741757910; -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c0)*(rt0.c2))) OVER () FROM rt1, t0 WHERE ((('.YpX16') BETWEEN (((((((((0.5262952368272813)OR(NULL)))OR(NULL)))AND(1875467558)))OR(0x6c1c1507))) AND ((NULL IN ()))));SELECT ALL (((0.5366938133099447))<=((rt1.c2))) COLLATE RTRIM, GROUP_CONCAT((x'5287' IN ())) COLLATE BINARY, ((((((((((((rt0.c0)AND(vt1.c1)))AND(rt1.c2)))AND(rt1.c2)))AND(vt1.c1)))AND(CASE rt0.c2  WHEN vt1.lid THEN vt1.c0 ELSE rt0.c2 END)))AND((vt1.c1 IN ()))) FROM vt1 WHERE (json_extract(((((((((((((NULL)OR(1712496167)))AND(x'')))OR(0.019184389179943806)))AND(NULL)))OR(NULL)))OR('*M')), CASE WHEN '1934014946' THEN x'' WHEN x'81f5' THEN 0.5425261253727854 WHEN 0.32506842062427455 THEN 773119717 ELSE 0.549462534433923 END));SELECT CHAR((rt1.c1 IN ()), ((((t0.c50)OR(vt1.c3)))OR(rt1.c1)), (rt0.c2 IN (vt1.c3, rt1.c2))) FROM rt1 WHERE (SUBSTR(CASE WHEN '584868415' THEN NULL ELSE 0xffffffffffbd9e01 END, ((NULL) NOTNULL)));SELECT ((((CAST(vt1.c1 AS NUMERIC))AND(CAST(vt1.c3 AS REAL))))AND('736136637')) FROM t0, vt1, rt0 GROUP BY (((((vt1.c2)AND(vt1.c1)))OR(rt1.c1)) IN ()); -- 0ms;
SELECT DISTINCT SUM(((vt1.c2) NOT NULL)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c0))) IN ()), (((vt1.c2 IN ()))<=(((rt1.c1) IS TRUE))) FROM vt1, t0, rt0 ORDER BY TYPEOF(DISTINCT rt1.c0) DESC;SELECT ALL rt1.c2 FROM rt1, t0; -- 0ms;
SELECT ALL SQLITE_VERSION() FROM vt1; -- 0ms;
SELECT DISTINCT ((vt1.lid) NOT BETWEEN ((- (vt1.c3))) AND ((~ (rt1.c1)))) FROM rt1, t0, rt0 WHERE (((((('0.06492728538214654' IN ()))AND((((0xffffffffd3c2b125))=((NULL))))))OR(CAST(NULL AS TEXT))));SELECT ALL ((json_array_length(vt1.c2, vt1.c1)) IS FALSE) FROM rt0, t0, rt1 WHERE (CAST((((-1.211536364E9)) BETWEEN ((0.36827923045288113)) AND ((0.06026844270404319))) AS INTEGER)) LIMIT -79264711 OFFSET 584868415;SELECT DISTINCT CAST(((rt1.c1)>=(rt0.c2)) AS BLOB) FROM vt1, t0, rt0, rt1 ORDER BY UPPER(DISTINCT (((rt1.c2, rt0.c0, vt1.c0))==(('_\r7F~Z5꜑U', rt1.c1, vt1.lid))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(t0.c50)))OR((rt1.c1 IN ()))) FROM rt1, t0, rt0, vt1 WHERE (LIKELIHOOD(((4.88190009E8)LIKE(0.5701921153770587)), 0.4353182955804987)); -- 0ms;
SELECT DISTINCT (((x'')<<(rt1.c1)) IN ((- (rt1.c1)))) FROM t0, rt1, rt0 NOT INDEXED, vt1; -- 0ms;
SELECT ALL (((vt1.c2) BETWEEN (vt1.c2) AND (rt1.c2)) IN ()), (((~ (vt1.c2))) IS FALSE), ((((rt0.c2)<=(rt0.c1))) IS FALSE) FROM rt1, t0, vt1 WHERE ((json_quote(0.9615676301452701) IN ())) GROUP BY CAST('0.08123140857638256' AS REAL) ORDER BY ((((((rt0.c1)OR(rt0.c1)))OR(vt1.c2))) ISNULL) ASC  NULLS LAST;SELECT DISTINCT (((rt0.c0) BETWEEN (vt1.c2) AND (rt0.c1)) IN ()), rt1.c1, ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((+ (rt1.c0))) AND (((rt1.c2)>>(vt1.c3)))) FROM vt1, rt1, rt0 WHERE (CAST(((1.56319216E9)GLOB('U_\nꍓ맻')) AS TEXT)) GROUP BY ((CAST(0xffffffffad6040d3 AS REAL)) NOT BETWEEN (CASE rt1.c2  WHEN vt1.lid THEN t0.c50 ELSE vt1.c1 END) AND (((rt1.c0) NOTNULL))) HAVING CAST(CAST(vt1.c0 AS INTEGER) AS REAL);SELECT ((((vt1.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1))) IN ((+ (x'ba78')))) FROM rt1;SELECT DISTINCT GROUP_CONCAT(((t0.c50) ISNULL)) FROM t0, rt1, rt0; -- 0ms;
SELECT ALL COUNT(*) FROM t0, rt1, vt1 WHERE ((((((((((('-1390879021')<=(NULL)))AND((- (3.0225384E8)))))AND((NOT (-1665599136)))))AND(((0xffffffff9243e287) IS FALSE))))OR((x'' IN ())))); -- 0ms;
SELECT DISTINCT ((((((((((rt1.c0) BETWEEN (vt1.lid) AND (rt1.c1)))OR(rt0.c2)))OR(COUNT(*))))OR(((vt1.c1)LIKE(rt1.c1)))))OR(CASE WHEN t0.c50 THEN rt1.c0 END)) FROM vt1 RIGHT OUTER JOIN rt0 ON json_array(((x'') BETWEEN (rt0.c0) AND (rt0.c2)), '-813753196') GROUP BY NULL ORDER BY (vt1.c3 COLLATE BINARY IN ()) DESC;SELECT DISTINCT vt1.c1 FROM rt1, t0;SELECT DISTINCT '1791897857' FROM rt0; -- 0ms;
SELECT DISTINCT (((vt1.c0, vt1.c2, vt1.lid, vt1.c3, vt1.c3)) NOT BETWEEN ((((rt0.c2)IS NOT(rt0.c2)), '0.47664605142703886', ((rt1.c2) ISNULL), (((vt1.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), ((rt0.c0) NOT BETWEEN (rt1.c1) AND (vt1.c0)))) AND (((((rt0.c0, 1.742099015E9, t0.c50)) BETWEEN ((vt1.lid, x'', rt0.c1)) AND ((vt1.c0, vt1.c1, vt1.c1))), ((rt1.c0) IS TRUE), CASE rt1.c2  WHEN rt1.c0 THEN rt0.c2 END, rt1.c2, CASE 0.7469256051655765  WHEN rt0.c1 THEN rt0.c2 ELSE vt1.lid END))) FROM rt0, rt1, t0;SELECT DISTINCT CAST(SUM(rt0.c1) AS REAL) FROM vt1, t0 NOT INDEXED, rt1 WHERE (((CAST(0X1b50dbb2 AS TEXT)) NOTNULL));SELECT rt0.c1, RANK() OVER ( ORDER BY ((((((rt0.c1) NOTNULL))AND(((vt1.lid)LIKE(rt0.c2)))))AND(((vt1.c3)>=(rt0.c0)))) ASC  NULLS FIRST, CASE (NOT (t0.c50))  WHEN rt1.c2 COLLATE BINARY THEN (((rt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c3))) ELSE rt0.c1 COLLATE NOCASE END), (((((t0.c50) ISNULL)))==((NULL))) FROM vt1;SELECT DISTINCT TOTAL(((((((((vt1.lid)OR(rt0.c2)))AND(rt1.c0)))AND(rt1.c0)))AND(vt1.c2))) FROM t0, rt0, vt1 RIGHT OUTER JOIN rt1 ON ((vt1.c2)==(rt1.c1)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT vt1.lid FROM vt1, t0 WHERE (x'c8d5'); -- 0ms;
SELECT ALL TOTAL(((vt1.c0)|(vt1.c0))) FROM vt1 INNER JOIN rt0 ON vt1.c1 FULL OUTER JOIN t0 ON TRIM(rt1.c1) COLLATE RTRIM LEFT OUTER JOIN rt1 ON ((((TYPEOF(DISTINCT rt0.c2))AND((- (rt0.c1)))))AND(NULL)) WHERE (((NULL COLLATE BINARY) NOT BETWEEN (0x5f12361 COLLATE RTRIM) AND ('0.08335940494395133' COLLATE NOCASE)));SELECT ALL TOTAL(((rt0.c2) NOT NULL)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT vt1.c3 FROM rt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(((rt1.c1)||(rt1.c1))) OVER () FROM rt1, t0, vt1; -- 0ms;
SELECT ALL ((UPPER(rt1.c0))||((vt1.c3 IN (rt0.c2, 0Xffffffffb158f733)))) FROM vt1, rt0, rt1 WHERE (0.4162545441645482); -- 0ms;
SELECT ALL (+ (((vt1.c1) BETWEEN (rt1.c0) AND (rt0.c1)))), TOTAL_CHANGES(), NULL FROM rt0, rt1;SELECT DISTINCT ((INSTR(rt0.c2, vt1.lid))GLOB(CASE t0.c50  WHEN vt1.c2 THEN vt1.c3 WHEN vt1.c3 THEN rt0.c0 WHEN rt1.c1 THEN vt1.c0 END)), ((COUNT(0.9137358397795924))IS NOT(MAX(0.7345259639371563))), 'UɗꝊi5얟[' FROM t0;SELECT ((vt1.c3 COLLATE BINARY)-(GROUP_CONCAT(vt1.c3))) FROM vt1, rt0, rt1 LIMIT -56054087; -- 0ms;
SELECT ALL (((- (vt1.c3))) NOT BETWEEN ((NOT (rt0.c1))) AND (((((rt0.c1)AND(vt1.c3)))OR(rt0.c1)))) FROM t0, vt1;SELECT UNLIKELY(LIKELIHOOD(rt1.c2, 0.9230651232792701)), CASE WHEN (+ (vt1.c1)) THEN LIKELY(DISTINCT x'') END, CASE WHEN ((0.20040804613546537)IS NOT(rt0.c2)) THEN ((rt1.c1) IS FALSE) WHEN 0.28181851018839443 THEN rt0.c2 COLLATE NOCASE WHEN rt0.c0 THEN ((rt0.c1) BETWEEN ('789359527') AND (vt1.c0)) ELSE vt1.c3 END FROM rt0, vt1, t0, rt1 ORDER BY ((((((vt1.c3)AND(vt1.c0)))AND(CAST(vt1.c2 AS TEXT))))AND(((('[]', rt0.c2, rt1.c0)) BETWEEN ((rt0.c0, vt1.lid, rt0.c1)) AND ((vt1.c2, t0.c50, rt1.c1))))); -- 1ms;
SELECT DISTINCT COUNT(*), ((((rt1.c2) NOT BETWEEN ('W}') AND (rt0.c1))) ISNULL), ((NULL)%(vt1.c3)) COLLATE BINARY FROM vt1, t0, rt1, rt0 WHERE ((((('')=(0.11445786433147831))) NOT NULL)) UNION ALL SELECT DISTINCT ((((rt0.c0) NOT BETWEEN ('1648240438') AND (rt0.c2)))LIKE((- (vt1.c2)))), CASE (((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((rt0.c1)))  WHEN ((((((((rt1.c2)OR(rt1.c1)))OR(rt0.c0)))AND(rt0.c0)))AND(vt1.c3)) THEN (vt1.c2 IN ()) ELSE (((0.005007125967505077, vt1.c2, vt1.c3, vt1.c1, vt1.c2)) NOT BETWEEN ((vt1.lid, t0.c50, -5.0301475E8, 0.4364416648015229, vt1.lid)) AND ((vt1.lid, vt1.c0, rt0.c0, rt1.c0, 0Xffffffff8e10608f))) END, ((((rt1.c0)<=(rt1.c0)))OR(CASE WHEN vt1.c2 THEN rt0.c2 END)) FROM rt1, rt0, vt1, t0; -- 0ms;
SELECT ((((x'')OR((+ (vt1.c3)))))AND((NOT (rt0.c2)))) FROM t0, rt1, rt0;SELECT DISTINCT CASE ((rt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN ((rt1.c1) IS TRUE) THEN ((rt1.c1)|(rt1.c1)) END FROM t0, vt1, rt0 WHERE ((((CASE WHEN '138534357' THEN x'df07' ELSE '-1338331364' END))>(('736136637' COLLATE NOCASE)))) GROUP BY (rt1.c1 IN ()), ((rt0.c2 IN ()) IN ()), CAST((((rt1.c2)) NOT BETWEEN ((0.34555456978643817)) AND ((0.8783060986181813))) AS NUMERIC);SELECT DISTINCT (((rt0.c2) BETWEEN (rt1.c1) AND (rt0.c2)) IN ()) FROM t0, rt1, rt0, vt1 WHERE ((((NULL IN ())) NOT BETWEEN (((((((((998368755)OR(NULL)))AND('.luＵZ猁b')))OR('1145255261')))AND('938212755'))) AND (((NULL) BETWEEN (x'a188') AND ('1111868526'))))); -- 0ms;
SELECT DISTINCT (((vt1.c1) BETWEEN ('Jr0(*Q[94') AND (vt1.lid)) IN (((((vt1.c2)AND(rt0.c1)))OR('Gl()GD')))) FROM t0, vt1, rt1, rt0; -- 0ms;
SELECT (((((t0.c50))<>((vt1.c0)))) BETWEEN (MAX(rt0.c2)) AND (rtreenode(rt0.c1, rt1.c1))) FROM rt1, t0, rt0, vt1; -- 0ms;
SELECT ALL TRIM(DISTINCT ((rt0.c1)IS NOT(rt0.c2)), x'') FROM vt1, t0;SELECT DISTINCT (((((vt1.c3)*(t0.c50)), ((rt0.c2) NOTNULL), LIKELIHOOD(DISTINCT vt1.lid, 0.49085437004549715)))<((((t0.c50) BETWEEN (NULL) AND (rt1.c0)), CAST(rt1.c0 AS TEXT), (rt0.c2 IN ())))), 0.9497131025251341, (((((+ (rt0.c1)))OR((((vt1.c2, t0.c50, NULL, rt1.c1, rt1.c2)) BETWEEN ((vt1.lid, vt1.c2, vt1.c0, rt0.c1, 0.848792760425968)) AND ((rt0.c2, vt1.c2, vt1.c1, rt0.c0, vt1.c0))))))OR((((rt1.c2)) BETWEEN ((rt1.c0)) AND ((vt1.c1))))) FROM rt1, vt1, t0, rt0; -- 0ms;
SELECT DISTINCT x'', TRIM(CAST(rt0.c0 AS TEXT), ((t0.c50)IS NOT(x''))), ((-1.149377853E9)<<(((rt0.c2)<(rt0.c0)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (~ (CASE t0.c50  WHEN vt1.c0 THEN vt1.c3 END)) FROM vt1, rt0 WHERE ((((NULL)) BETWEEN (((0x784cfd65 IN ()))) AND ((((((((((0.5783002760462929)OR(0x44ca4379)))OR(x'3528')))AND(NULL)))AND(NULL))))));SELECT LEAD(((((((rt0.c2)OR(rt0.c2)))AND(NULL)))>=(t0.c50 COLLATE BINARY)), ((HEX(rt0.c0))AND(((rt0.c1)GLOB(rt0.c2)))), 834800223) OVER (), (((NOT (vt1.lid))) BETWEEN (CASE rt1.c2  WHEN x'' THEN 0.25726141396327906 WHEN t0.c50 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c1 END) AND (CAST('0.19614540110114953' AS REAL))), AVG(CASE rt0.c0  WHEN rt1.c1 THEN t0.c50 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE rt1.c1 END) OVER ( ORDER BY CASE t0.c50  WHEN rt0.c0 THEN rt0.c0 END COLLATE BINARY DESC) FROM t0, rt0 WHERE ((((NULL, 1.017253339E9, x'')) NOT BETWEEN ((CASE WHEN 0.9444268000646004 THEN 0x60678649 WHEN '635095834' THEN 0.0795763505550845 WHEN x'6047' THEN NULL END, ('Ei' IN ()), CASE 0.5783002760462929  WHEN 1e500 THEN 0.5127856525579944 ELSE '-1689024478' END)) AND ((((((NULL)OR(0.4301559975253302)))OR('+?')), QUOTE('[PP3Soli'), x''))));SELECT (GROUP_CONCAT(rt1.c0) IN ((vt1.c2 IN (vt1.c3)))) FROM vt1, t0 WHERE (CAST((- ('-1910593775')) AS TEXT));SELECT 0.8119515211251316, CAST('-1168042258' AS NUMERIC), (rt0.c0 COLLATE BINARY IN ()) FROM t0 WHERE (((CASE WHEN x'' THEN -1733267759 ELSE 'rk''\n' END)<(((x'99ad') NOTNULL)))) GROUP BY rt1.c1, '1829860031', ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c2)))|(((vt1.c0)|(vt1.c1)))) HAVING rt0.c1 LIMIT 2104278749 OFFSET -1916551167;SELECT DISTINCT ((CAST(vt1.c2 AS NUMERIC))||(rt1.c2 COLLATE NOCASE)) FROM vt1, rt0, t0;SELECT ALL (~ (CAST(vt1.c2 AS NUMERIC))) FROM vt1 NOT INDEXED, t0, rt0 WHERE (((CASE WHEN 0.9982739083407507 THEN 'M1‑l>' WHEN '' THEN NULL WHEN '' THEN '' ELSE NULL END) IS FALSE)); -- 0ms;
SELECT DISTINCT LEAD(((CAST(rt0.c0 AS TEXT))<=((rt1.c0 IN (vt1.c0)))), (((NOT (vt1.c0))) NOT BETWEEN (CAST(rt1.c0 AS NUMERIC)) AND (json_object(rt1.c1, rt1.c0, vt1.lid, vt1.lid))), ((vt1.c0 COLLATE RTRIM) IS FALSE)) OVER () FROM vt1, rt1, t0, rt0 ORDER BY ((vt1.c3)!=((vt1.c2 IN ())))  NULLS LAST, (NOT (CAST('1681803773' AS REAL))); -- 0ms;
SELECT ALL vt1.c2 FROM vt1, t0 WHERE (((((0.8639235560676013))<=(('-203331088'))) IN (CASE '-656604398'  WHEN -1.374150801E9 THEN '247340852' END))); -- 0ms;
SELECT ALL AVG((rt0.c2 IN (rt0.c2))) OVER ( RANGE (~ (((((rt1.c0)AND(vt1.c0)))AND(vt1.c2)))) PRECEDING) FROM rt0, vt1, t0 LIMIT 619218213;SELECT ((vt1.c2 COLLATE BINARY)LIKE(rt1.c1 COLLATE RTRIM)), ((rt1.c2 COLLATE BINARY) IS FALSE), UPPER(DISTINCT rt0.c2) FROM rt0, rt1 NOT INDEXED, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT (- (((vt1.c2)+(vt1.c2)))) FROM rt1 WHERE ((((NULL)) NOT BETWEEN ((x'' COLLATE RTRIM)) AND (((NULL IN ())))));SELECT DISTINCT (- ((vt1.c1 IN (vt1.lid)))), MAX(((rt0.c2) BETWEEN (vt1.c1) AND (vt1.lid))), rt1.c2 FROM vt1, t0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1) IS TRUE))<(((vt1.lid) BETWEEN (vt1.c3) AND (rt0.c1)))) FROM rt0, rt1, t0, vt1; -- 0ms;
SELECT ALL AVG((((rt1.c1))<=((vt1.c0)))) FROM vt1, rt1 WHERE ((((('788354039', NULL, '-1682547621', 0.6272361213991584, 0.8080128019485929))>((NULL, 'csBEV8蝇', x'', NULL, 0.02067566557478362))) IN ())); -- 1ms;
SELECT GROUP_CONCAT(TRIM(rt1.c1, vt1.lid)) FROM vt1, rt1, t0; -- 0ms;
SELECT DISTINCT x'3e08' FROM t0; -- 0ms;
SELECT DISTINCT (~ ((vt1.c2 IN (t0.c50)))) FROM t0 WHERE (LIKELIHOOD(CASE WHEN '-66181633' THEN -7.3174314E8 END, 0.5216616409886331)) LIMIT -1979095899;SELECT ALL ((((((((json_array_length(NULL))OR(((rt1.c0) NOT BETWEEN (t0.c50) AND (rt1.c2)))))AND((+ (vt1.lid)))))AND(vt1.c1 COLLATE BINARY)))AND((((vt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c2))))) FROM rt1, t0, rt0, vt1; -- 0ms;
SELECT ALL (NOT (((vt1.c3) BETWEEN (x'c4d5') AND (t0.c50)))), (((t0.c50, rt0.c0, rt0.c1)) BETWEEN ((rt1.c0, x'', vt1.lid)) AND ((rt0.c1, rt0.c1, rt0.c2))) COLLATE RTRIM, UNLIKELY(DISTINCT CAST(vt1.c1 AS BLOB)) FROM t0, rt1;SELECT (((vt1.c3, vt1.c2, t0.c50)) BETWEEN ((((((rt1.c1)AND(vt1.c1)))AND(rt0.c0)), CAST(vt1.c1 AS BLOB), (((NULL)) BETWEEN ((vt1.lid)) AND ((vt1.c2))))) AND ((((rt0.c0)=(rt0.c0)), COUNT(*), vt1.c3))), COUNT(*) OVER (), TOTAL(((rt1.c0)GLOB(rt0.c2))) OVER () FROM t0, vt1 WHERE (((CAST(6.19218213E8 AS TEXT))GLOB((('')|(NULL)))));SELECT DISTINCT ((LIKELY(rt0.c2))==(((t0.c50) BETWEEN (rt0.c0) AND (NULL)))) FROM rt0 WHERE (((CASE x''  WHEN x'' THEN NULL WHEN 0.031171484269024607 THEN 6.9053877E7 WHEN x'' THEN 1563192160 END)/(((x'') NOT NULL))));SELECT COUNT(*), LIKE((~ (rt1.c1)), rt0.c2 COLLATE NOCASE, '-'), (((((rt1.c2))==((vt1.c1)))) NOTNULL) FROM rt0 WHERE (CASE ((('Geh4X̒T')) NOT BETWEEN ((NULL)) AND (('倎匑)~5')))  WHEN ((x'')!=(0Xffffffff9a858b27)) THEN ((('6Q', x'5114', 0.8537093033714998)) BETWEEN ((x'', '-1719310575', x'977a')) AND (('\r[Pu', 0.748383505695895, x''))) ELSE (x'' IN ('635095834')) END);SELECT DISTINCT ((((((((((vt1.c3)OR(vt1.c0)))OR(rt0.c1)))OR(vt1.c0)))OR(vt1.c3)))>((((rt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c3))))), LTRIM((('') IS FALSE), x''), (((((vt1.c1))==((vt1.c2)))) NOTNULL) FROM rt1, rt0 ORDER BY ((((vt1.c2)>>(vt1.c1))) BETWEEN (rt0.c2 COLLATE RTRIM) AND ((~ (t0.c50))));SELECT DISTINCT (((~ (vt1.c0))) NOTNULL) FROM rt1, t0, vt1 WHERE ((((((0.8843075503091495) BETWEEN (x'') AND (0.9705882431208114)), (('')<<(1523966508)), ((x'0df2') NOT BETWEEN (0.8377492112151568) AND ('0.02021245805841765')), NULL COLLATE NOCASE, json_array_length(0.09358812944841466)))=(((((((((('247340852')OR('1563192160')))AND(NULL)))OR(NULL)))AND(NULL)), (NULL IN ()), '-579708511', ('' IN ()), CASE x'c9b5'  WHEN '' THEN x'' END)))) GROUP BY CASE (t0.c50 IN ())  WHEN (')*a㷏' IN (rt1.c1, vt1.c1)) THEN CASE WHEN vt1.c1 THEN vt1.c2 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 ELSE rt0.c0 END END, ((((rt0.c1) IS TRUE)) NOT NULL), CAST('-1089540767' AS NUMERIC), (~ (CAST(vt1.c2 AS BLOB))), CASE ((rt1.c0) IS TRUE)  WHEN ((((((((rt1.c2)OR(rt0.c0)))AND(rt1.c1)))OR(rt1.c0)))OR(rt1.c2)) THEN rt1.c2 ELSE ((rt0.c1) BETWEEN (vt1.lid) AND (vt1.c1)) END HAVING ((((vt1.c1)-(rt1.c1)))<=((~ (''))));SELECT DISTINCT ((CASE vt1.c2  WHEN vt1.c0 THEN rt0.c0 END) NOTNULL) FROM vt1, rt0, t0, rt1 WHERE ((((('-630091948') BETWEEN ('-767623510') AND (NULL))) BETWEEN (CASE NULL  WHEN '2䇡-JS~G.w' THEN x'67cd2440' ELSE x'' END) AND ((('0.47428209736029014') BETWEEN (x'df93') AND ('-826636932'))))); -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((CAST(rt1.c2 AS BLOB))) AND ((vt1.c0 COLLATE RTRIM))) FROM vt1, t0, rt1, rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt1; -- 0ms;
SELECT DISTINCT COUNT((rt1.c2 IN ())) OVER () FROM rt0, rt1, t0, vt1 ORDER BY rt0.c0 ASC  NULLS LAST; -- 0ms;
SELECT ALL (((rt0.c2 IN ()))IS((((t0.c50, rt0.c2, rt0.c0)) NOT BETWEEN ((vt1.c2, vt1.lid, rt1.c2)) AND ((rt1.c2, rt0.c2, NULL))))) FROM rt1;SELECT DISTINCT ((CASE vt1.c0  WHEN rt1.c2 THEN vt1.c3 ELSE vt1.lid END) NOT BETWEEN (rt1.c0) AND (AVG(vt1.c1))), AVG(SUM(LENGTH(rt1.c0))), CAST(rt1.c1 AS TEXT) FROM t0 WHERE (CASE WHEN ABS(x'7459') THEN (('읯V-a')||('-656604398')) WHEN CAST(-4.1963272E8 AS NUMERIC) THEN (0.9930618877281857 IN ()) WHEN TRIM(DISTINCT '#/R4', NULL) THEN ((('761009482'))>=(('9>6{N'))) END);SELECT DISTINCT (CASE WHEN rt1.c2 THEN vt1.c2 ELSE t0.c50 END IN ()) FROM vt1, rt0, rt1; -- 1ms;
SELECT ALL (('cY\nx')AND(vt1.c3)) COLLATE RTRIM FROM t0, rt1 GROUP BY ((t0.c50) IS FALSE), ((((rt0.c0) NOT NULL)) NOT NULL), ABS(CASE vt1.c2  WHEN '619218213' THEN rt0.c1 WHEN rt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt1.c1 END);SELECT DISTINCT CAST(LOWER(DISTINCT 0.09084358086338917) AS BLOB) FROM t0 ORDER BY rt1.c1  NULLS LAST;SELECT rt0.c1, COUNT(*) FILTER(WHERE ((((((rt1.c2) NOTNULL))OR(((vt1.lid) BETWEEN (rt1.c2) AND (NULL)))))AND(vt1.c1))) OVER ( ORDER BY rt1.c0 DESC, ((((t0.c50) BETWEEN (464837646) AND (vt1.c3))) NOT BETWEEN (((rt0.c0) BETWEEN (0.8288779956858888) AND (rt1.c2))) AND ((~ (vt1.c3)))), ((rt0.c0 COLLATE NOCASE)%((((rt1.c1))>=((vt1.c1)))))), ((TRIM(DISTINCT rt1.c2, NULL))AND((- (vt1.c2)))) FROM vt1, t0;SELECT DISTINCT CAST((((NULL, rt0.c0, rt0.c1))<>((rt1.c1, rt0.c1, rt1.c0))) AS TEXT) FROM rt1, t0, rt0, vt1; -- 0ms;
SELECT ALL rt0.c0 FROM vt1, rt1, t0;SELECT DISTINCT COUNT(CAST(rt1.c1 AS INTEGER)) OVER (), DENSE_RANK() OVER (), ((((((rt1.c0)>(vt1.c3)))AND(TRIM(rt1.c1))))AND((vt1.c0 IN ()))) FROM rt1, t0, rt0 WHERE ((+ (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT (((+ (rt1.c2))) BETWEEN (((((x'')OR(vt1.lid)))OR(t0.c50))) AND (rt0.c1)) FROM rt1;SELECT DISTINCT (+ (load_extension(vt1.c3))), ((((((((((((((rt1.c2)AND(0.6676347739397283)))OR(rt0.c2)))AND(rt1.c1)))AND(rt0.c2)))AND(rt1.c2)))OR(rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE BINARY) AND ((NOT (rt1.c0)))), CAST(vt1.c0 AS INTEGER) COLLATE BINARY FROM rt1, vt1, rt0 WHERE ((((~ (x'ffbc'))) NOTNULL));SELECT rt0.c0, (((vt1.c3)) NOT BETWEEN (((vt1.c3 IN ()))) AND (((NOT (vt1.c0))))), LEAD('-745026043', CASE COALESCE(DISTINCT rt0.c2, vt1.c2)  WHEN rt0.c1 COLLATE BINARY THEN ((rt1.c2) IS TRUE) WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c0 END THEN x'' WHEN ((rt0.c0)*(vt1.lid)) THEN (rt1.c2 IN ()) ELSE CASE NULL  WHEN rt0.c2 THEN rt0.c2 END END, ((((vt1.lid) NOT BETWEEN (vt1.c0) AND (rt0.c2))) IS TRUE)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0, t0, vt1, rt1 WHERE (((CASE 'zij 朑bi\nb'  WHEN '-1462237948' THEN NULL ELSE '718486299' END)OR((0.8843075503091495 IN ())))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT CASE WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c2 THEN -4.07390941E8 WHEN 0.26520486993786585 THEN rt0.c1 END) FROM t0 WHERE (CAST(((NULL)IS NOT(x'')) AS INTEGER));SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) ISNULL) FROM rt0, t0 LIMIT -896491080 OFFSET -1490235284; -- 0ms;
SELECT DISTINCT CAST(((rt1.c2)==(vt1.c0)) AS INTEGER) FROM rt1, rt0;SELECT DISTINCT (TRIM(DISTINCT vt1.lid, vt1.c1) IN (TOTAL(rt0.c1))) FROM rt0, t0, vt1; -- 0ms;
SELECT NULL FROM vt1, rt1, rt0, t0; -- 1ms;
SELECT rt1.c2 FROM rt0, rt1, t0, vt1 WHERE (((((0.20777342973514745)&(0.5159379722859478)))AND((+ (x''))))); -- 0ms;
SELECT ALL 1795390001, (((((vt1.c3)) NOT BETWEEN ((t0.c50)) AND ((vt1.lid)))) BETWEEN (vt1.c2) AND (COALESCE(DISTINCT rt1.c1, rt0.c1))), (- (vt1.c2)), LIKELY(DISTINCT ((rt0.c2) ISNULL)), 0.18614172576629118 FROM vt1, rt1, t0, rt0; -- 0ms;
SELECT ALL LIKELY(CAST(rt1.c1 AS REAL)) FROM t0, rt0, rt1, vt1; -- 0ms;
SELECT CASE rt0.c1  WHEN (vt1.c1 IN (rt1.c0)) THEN ((rt0.c2) IS TRUE) END FROM rt1;SELECT DISTINCT CASE WHEN (((x''))<((vt1.c1))) THEN ((((rt0.c1)OR(rt0.c0)))OR(vt1.c0)) ELSE rt0.c2 COLLATE NOCASE END FROM vt1, t0 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC));SELECT 0.20309579637333264 FROM rt0, t0; -- 1ms;
SELECT ALL COUNT(CAST(rt1.c0 AS INTEGER)) OVER () FROM rt1, rt0 NOT INDEXED WHERE (((TYPEOF('%Zl+v()>叿')) BETWEEN (CAST(NULL AS INTEGER)) AND ((((0.6536064702185985))==(('A?sA')))))); -- 0ms;
SELECT DISTINCT ((vt1.c0)OR((+ (rt1.c2)))) FROM t0, vt1, rt1, rt0 LIMIT -691200258; -- 0ms;
SELECT '.luＵZ猁b' FROM t0, rt0, vt1, rt1; -- 0ms;
SELECT CAST(((rt1.c2) BETWEEN (vt1.c1) AND (rt1.c2)) AS NUMERIC), ((((CAST(vt1.c0 AS TEXT))AND(((((vt1.c2)AND(vt1.c3)))AND(rt0.c2)))))AND(((x'') NOT BETWEEN (vt1.c3) AND (vt1.lid)))), ((RTRIM(vt1.c3)) NOT BETWEEN ((- (vt1.c0))) AND (MIN(rt0.c0, rt1.c2))) FROM t0, rt1 RIGHT OUTER JOIN rt0 ON ((((t0.c50)AND(vt1.c3)))&(rt0.c1)) CROSS JOIN vt1 ON (CASE rt1.c2  WHEN 0.2741559699235214 THEN rt1.c1 WHEN x'' THEN t0.c50 WHEN t0.c50 THEN rt1.c0 END IN ((t0.c50 IN ()), (vt1.c3 IN ())));SELECT DISTINCT COALESCE(DISTINCT (((vt1.c0))<>((rt0.c2))), (- (rt0.c0)), t0.c50 COLLATE NOCASE, json_array_length(vt1.c1, rt0.c1)) FROM rt1, vt1 WHERE ((((~ ('2144056094')))>((- (x''))))) LIMIT -1910593775 OFFSET 247340852;SELECT AVG(json_type(rt1.c0)) FILTER(WHERE (((0x5d64462c IN ())) NOT BETWEEN (vt1.c0) AND ((((vt1.c2))<=((t0.c50)))))) OVER () FROM rt1, vt1, t0 WHERE ((- (((((((((NULL)OR(NULL)))AND(x'')))AND(0X40cb0476)))AND('+D#_푃.~N'))))) GROUP BY PRINTF(((t0.c50) BETWEEN (rt0.c2) AND (vt1.lid))) HAVING (~ (rt0.c2 COLLATE RTRIM));SELECT ALL CAST(((rt0.c0) BETWEEN (rt0.c0) AND (t0.c50)) AS TEXT) FROM vt1, rt1, t0, rt0 WHERE ((NOT (((212014590)!=(x''))))) LIMIT -4350463; -- 1ms;
SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC)) IS TRUE), rt0.c2 COLLATE RTRIM, CAST(rt0.c1 AS TEXT) FROM rt0 WHERE ('-1614580271') ORDER BY ((rt0.c0) NOT NULL) COLLATE NOCASE COLLATE RTRIM  NULLS FIRST, highlight((((rt1.c0, rt0.c1, vt1.c1)) BETWEEN ((rt0.c0, vt1.c0, rt1.c1)) AND ((vt1.lid, '', vt1.c1))), (vt1.c0 IN ()), rt1.c0 COLLATE BINARY, ((vt1.c0) NOT NULL))  NULLS FIRST;SELECT CAST(CAST(vt1.lid AS BLOB) AS NUMERIC) FROM vt1 WHERE (((((((((((((((0xe3d7c1f) NOTNULL))OR(CASE WHEN 0.2742757484391225 THEN NULL ELSE NULL END)))OR(CAST(NULL AS REAL))))AND(NULL)))OR(((x'')!=('')))))OR((('-1211536364') BETWEEN (NULL) AND (0Xffffffffc44d249f)))))AND((NOT (x''))))); -- 0ms;
SELECT DISTINCT COUNT(((NULL)IS NOT(rt0.c2))), LAST_INSERT_ROWID(), ((((((rt1.c0)%(t0.c50)))AND(((rt1.c1)+(rt0.c2)))))AND(((((vt1.c0)OR(vt1.c3)))OR(rt1.c1)))) FROM t0, rt1, vt1 ORDER BY NULLIF(json_extract(rt1.c2, vt1.c0), (~ (t0.c50))) ASC  NULLS FIRST, CAST(((rt1.c1)IS NOT(rt1.c2)) AS BLOB)  NULLS FIRST LIMIT -1986577686;SELECT TOTAL(LOWER(rt1.c2)) OVER () FROM vt1 WHERE (((NULL COLLATE RTRIM) ISNULL)) GROUP BY (vt1.lid COLLATE BINARY IN ()) HAVING ((vt1.c2)IS NOT(t0.c50)) COLLATE RTRIM;SELECT ALL ((((CASE t0.c50  WHEN rt1.c1 THEN x'' ELSE vt1.c1 END)AND(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt0.c1 THEN '230602845' WHEN vt1.c3 THEN NULL ELSE rt0.c2 END)))OR((~ (vt1.lid)))) FROM rt0, vt1, rt1, t0 ORDER BY vt1.c1 ASC; -- 1ms;
SELECT ((0.838725085853274) NOT NULL) COLLATE NOCASE FROM rt1 WHERE ((((NULL) NOT NULL) IN (LOWER(DISTINCT x'28da')))) LIMIT -9223372036854775808; -- 0ms;
SELECT DISTINCT vt1.c3 FROM rt1, rt0, vt1, t0 WHERE ((('0.6240443066114935' COLLATE RTRIM)*(CASE 0.26653735035441695  WHEN x'' THEN NULL ELSE '' END))) LIMIT 1435215217 OFFSET 891440939; -- 0ms;
SELECT ALL ((vt1.c2 COLLATE BINARY) IS FALSE) FROM t0, rt1 ORDER BY 0.9840233896992766  NULLS LAST, UNLIKELY(DISTINCT ((rt0.c2)-(vt1.c3))) ASC;SELECT COUNT(*), load_extension(rt0.c1, (NOT (vt1.lid))), ((((CASE rt0.c1  WHEN t0.c50 THEN rt0.c2 END)AND(CASE vt1.c3  WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c0 END)))AND(rt1.c0 COLLATE RTRIM)) FROM vt1, rt1, t0;SELECT ALL (NOT ((+ (rt0.c1)))), (NOT (AVG(vt1.c3))), rt0.c1, CAST(rt1.c1 COLLATE RTRIM AS REAL), ((((((((CASE WHEN t0.c50 THEN vt1.c1 WHEN vt1.c2 THEN rt1.c1 WHEN vt1.c0 THEN rt0.c2 ELSE rt1.c2 END)OR(rt0.c2 COLLATE RTRIM)))OR(((((vt1.c0)OR(rt1.c1)))AND(rt0.c2)))))AND(NULLIF(vt1.lid, t0.c50))))OR((NOT (x'')))) FROM t0, vt1, rt1, rt0; -- 0ms;
SELECT (vt1.c2 IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((vt1.c3)) NOT BETWEEN (((NOT (x'')))) AND (((vt1.c0 IN ())))), ((((rt1.c2)OR(CAST(rt1.c2 AS NUMERIC))))OR(GROUP_CONCAT(vt1.c2))), (NOT (MAX(rt0.c0))) FROM t0, vt1, rt1;SELECT DISTINCT CAST(((rt1.c1)%(rt0.c2)) AS BLOB) FROM rt1, t0, rt0; -- 0ms;
SELECT ALL (((rt1.c2 IN ())) IS TRUE) FROM t0, vt1; -- 0ms;
SELECT COUNT((((rt1.c1)) BETWEEN ((vt1.c3)) AND ((NULL)))) OVER (), ((CAST(vt1.c2 AS NUMERIC))<<(((rt0.c2)IS NOT(rt0.c1)))), (((rt1.c2 IN ())) NOT BETWEEN (((vt1.c1) BETWEEN (rt1.c0) AND (rt0.c0))) AND (rt1.c1)) FROM rt1, rt0 WHERE (CASE NULL  WHEN 0.4431576697634949 THEN 0.1568477804332189 ELSE '-880414057' END COLLATE BINARY);SELECT ALL ((CAST(rt1.c0 AS TEXT)) IS TRUE) FROM vt1, t0 WHERE (((- (0.40800694622343314)) IN ()));SELECT DISTINCT CASE TOTAL(rt0.c1)  WHEN ((rt0.c2) IS TRUE) THEN ((((((((rt1.c1)OR(vt1.c3)))AND(rt0.c1)))AND(0.5345999157402315)))AND(rt1.c2)) END, NULLIF(((rt0.c0)=(rt0.c0)), rt1.c1 COLLATE BINARY), CASE WHEN CASE WHEN rt1.c0 THEN vt1.c2 WHEN rt0.c1 THEN x'' WHEN vt1.c2 THEN vt1.c3 ELSE rt0.c2 END THEN 'e攡' END, ((((((vt1.lid) IS TRUE))OR(vt1.lid)))OR(((((((((rt0.c0)OR(rt1.c2)))OR(vt1.c1)))AND(rt0.c2)))AND(4.87337832E8)))), (((t0.c50, rt1.c1, vt1.c3)) NOT BETWEEN ((LIKELY(DISTINCT vt1.c0), rt1.c0 COLLATE BINARY, (((t0.c50)) BETWEEN ((rt1.c0)) AND ((vt1.c1))))) AND (((('182013558')<<(rt0.c0)), ((rt1.c2)|(rt0.c0)), ((vt1.lid)+(vt1.c1))))) FROM t0, rt0;SELECT DISTINCT ((((((rt1.c1)AND(rt0.c1)))AND(vt1.lid))) IS FALSE) FROM t0, vt1 WHERE ((((NULL)) BETWEEN ((((((((((((((x'')OR(NULL)))AND('519889413')))OR(0X240e720f)))AND('U]YAA7')))OR(x'')))OR('0.6054320043427416')))) AND ((((0xffffffff996d4296)LIKE(0.9851617433225062))))));SELECT DISTINCT CAST(CASE WHEN rt0.c2 THEN t0.c50 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c2 THEN vt1.c0 ELSE rt0.c1 END AS NUMERIC) FROM rt0, t0;SELECT DISTINCT CASE WHEN ((0.6853772597134002) NOTNULL) THEN ((rt1.c0) NOTNULL) WHEN LTRIM(rt0.c2, rt0.c2) THEN COUNT(rt0.c0) WHEN ((t0.c50) NOT BETWEEN (vt1.c3) AND (t0.c50)) THEN ((rt1.c1) NOT BETWEEN (rt1.c0) AND (vt1.c0)) ELSE vt1.c0 COLLATE BINARY END FROM rt1, rt0, vt1, t0; -- 1ms;
SELECT COUNT(*) OVER ( ORDER BY CAST(((vt1.c3)*(rt1.c1)) AS REAL), ((((rt0.c2)=(rt1.c1))) IS TRUE), NULL) FROM rt0 GROUP BY (vt1.c1 IN ()), 'v䧛	' COLLATE BINARY, ('1631948978' IN ());SELECT ALL ((((((NULL)%(vt1.c2)))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))OR(((vt1.c0) NOT BETWEEN (vt1.c2) AND (t0.c50)))), SUM(((t0.c50)%(t0.c50))) OVER (), ((vt1.c1)+(((((x'145b')AND(t0.c50)))OR(rt0.c1)))) FROM rt0, rt1, vt1;SELECT DISTINCT COUNT(((rt1.c0) NOT BETWEEN (vt1.lid) AND (rt0.c2)) COLLATE BINARY) OVER () FROM t0, vt1 WHERE (((((x'') NOT BETWEEN (x'b460') AND ('115178855'))) NOT BETWEEN ((('3eW')*(x''))) AND (NULL COLLATE NOCASE)));SELECT DISTINCT (((((rt1.c1 IN ()))OR(((((((((rt1.c2)AND(rt1.c1)))OR(rt0.c1)))AND(rt0.c1)))OR(rt1.c2)))))OR(TRIM(vt1.c2))), (rt1.c0 IN ()), COUNT(*) FROM t0, rt0, rt1 ORDER BY ((((vt1.c1) ISNULL)) IS FALSE);SELECT -1717668910 FROM rt1 WHERE ((((((((((~ (NULL)))AND((('1495050058') NOT BETWEEN (0x591ca74a) AND ('IXuB')))))AND((((('-1321263677')AND(1901403159)))AND('-441321555')))))AND(1.7976931348623157E308 COLLATE BINARY)))AND(CAST('-1560991526' AS TEXT)))); -- 0ms;
SELECT DISTINCT '1303193368' FROM t0, rt1, rt0, vt1 WHERE (((((x'd692')AND('')))|((('[zDQy4 ϟ慓') IS TRUE)))); -- 0ms;
SELECT DISTINCT 'yt_⌑~W' FROM vt1, rt0, rt1, t0; -- 0ms;
SELECT DISTINCT NTILE(json_array(0.5712723092723482, ((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)))) OVER (), SUM(((-126689967) IS TRUE)) OVER (), (((rt0.c1, vt1.lid, '529005129')) NOT BETWEEN ((CASE WHEN rt0.c0 THEN t0.c50 ELSE t0.c50 END, vt1.c3, CAST(rt0.c2 AS INTEGER))) AND ((0.35929305430880243, (~ (vt1.c0)), COUNT(rt0.c2)))) FROM t0, rt0, vt1 WHERE ((CASE WHEN x'' THEN NULL WHEN '-1089540767' THEN '' WHEN NULL THEN x'ca839bd6' ELSE x'' END IN ()));SELECT DISTINCT ((((rt0.c0) BETWEEN (rt1.c0) AND (rt1.c0))) BETWEEN (((vt1.c3)>(rt1.c1))) AND ('R_' COLLATE RTRIM)), ((((vt1.c1) ISNULL))<=((rt0.c1 IN ()))), CAST((rt1.c2 IN ()) AS TEXT) FROM rt1, rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((TYPEOF(DISTINCT rt0.c0)) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c0) BETWEEN (vt1.c0) AND (rt1.c1)))), COUNT(*), ((COUNT(*)) NOT NULL) FROM vt1, t0 WHERE ((((((('247340852')AND('-1051499698')))AND(NULL))) NOT BETWEEN (((((((((x'176d')OR(0.6071810690859318)))OR(x'')))OR(NULL)))AND(NULL))) AND (((x'') IS FALSE)))) GROUP BY TYPEOF((vt1.c3 IN ())), CASE vt1.c3  WHEN NULL THEN rt0.c1 ELSE rt1.c1 END COLLATE BINARY, '0.9852096731245903';SELECT DISTINCT CASE MAX(rt1.c2)  WHEN CAST(rt1.c2 AS TEXT) THEN (vt1.lid IN (rt0.c2)) END FROM rt1, rt0, vt1 WHERE ((('R{\n' COLLATE NOCASE) NOTNULL)); -- 0ms;
SELECT ((CAST(t0.c50 AS BLOB))IS NOT(NULL)) FROM rt0 WHERE (((CASE WHEN x'' THEN -1563838472 WHEN 0.14724417042752436 THEN 0.5348234882930218 WHEN NULL THEN x'' END) NOT BETWEEN (UPPER(0x7e56c732)) AND (((x'')/(0.03140546740390959)))));SELECT DISTINCT (((rt0.c0) ISNULL) IN ()) FROM rt1 WHERE (CAST(((((0.9536824539813566)AND('쿃')))AND(NULL)) AS REAL)); -- 0ms;
SELECT DISTINCT (rtreenode(rt0.c1, rt1.c1) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ((rt0.c1)>>(rt0.c0 COLLATE BINARY)), NTILE(((((rt0.c2)%(vt1.lid))) NOT BETWEEN (((0.4028753329234891) IS FALSE)) AND (((vt1.c0)AND(vt1.c0))))) OVER (), ((((vt1.lid, vt1.c1, t0.c50)) BETWEEN ((vt1.c1, vt1.c1, rt0.c0)) AND ((vt1.c2, rt0.c1, rt1.c2))) IN ()), CASE WHEN (vt1.lid IN (NULL)) THEN json_quote(rt0.c0) END, ((~ (rt0.c2)) IN ()), ((MIN(rt1.c1))|(x'1872')), FIRST_VALUE((('+Dm-' COLLATE BINARY) BETWEEN ((rt1.c0 IN ())) AND (((rt0.c2) BETWEEN (0.6184338714216769) AND (t0.c50))))) OVER ( ORDER BY (((vt1.c2) NOT BETWEEN (-503014750) AND (rt0.c2)) IN ()) ASC) FROM vt1, t0, rt0, rt1;SELECT DISTINCT (~ ((((vt1.c1))<>((0.5705644257698502))))) FROM rt0;SELECT ALL AVG((NOT (rt1.c1))) FROM rt0, vt1;SELECT CASE ((((vt1.c1)AND(vt1.c3)))OR(t0.c50))  WHEN (2.144056094E9 IN ()) THEN ((rt1.c2)>>(t0.c50)) ELSE ((0.7235058607398447)||(rt1.c2)) END FROM t0, rt1, vt1, rt0; -- 0ms;
SELECT DISTINCT AVG(CASE rt0.c1  WHEN vt1.lid THEN vt1.c0 END) OVER (), (((rt0.c1))<((TYPEOF(DISTINCT vt1.c1)))), CASE WHEN vt1.c3 THEN CASE vt1.c0  WHEN vt1.c2 THEN rt1.c2 ELSE rt0.c1 END ELSE ((rt0.c1) ISNULL) END FROM rt1 LEFT OUTER JOIN t0 ON ((((((((((vt1.c0)OR(vt1.c3)))AND(x'')))OR(t0.c50)))OR(vt1.c1)))IS(((rt0.c1)GLOB(rt0.c0)))) CROSS JOIN vt1 ON HEX(DISTINCT (NOT (vt1.c1))) WHERE ((((x'')) NOT BETWEEN ((((('0.47428209736029014'))>((NULL))))) AND ((((x'')LIKE('kk'))))));SELECT DISTINCT AVG(TYPEOF(vt1.c1)) FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt0; -- 0ms;
SELECT ((((rt0.c2)IS NOT(x'64fb0f4e')))>(((rt1.c1)+(vt1.c0)))), (- (rt0.c2 COLLATE NOCASE)), NTILE((~ (x''))) OVER () FROM vt1, rt1, rt0, t0 WHERE ((+ (CAST(x'' AS REAL)))); -- 0ms;
SELECT (~ (((x'') IS TRUE))) FROM rt0, rt1 WHERE ((((0.7763740616799205)) NOT BETWEEN (((~ (0.9953634109064395)))) AND (((((x'')) BETWEEN (('1934771591')) AND ((x''))))))); -- 0ms;
SELECT ALL x'' FROM rt0, rt1, vt1, t0 WHERE ((CAST(0.8408334242278633 AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT (((vt1.c1))>(('LjH'))), (- (((x'')%(rt0.c0)))), TRIM(DISTINCT TYPEOF('bs'), CASE WHEN rt1.c2 THEN vt1.c3 ELSE rt0.c1 END) FROM vt1, rt0 WHERE (((((718486299)<<('-242437015'))) IS FALSE)) LIMIT -1467843491;SELECT DISTINCT (((AVG(rt0.c1), ((((((((vt1.c0)AND(t0.c50)))OR('761009482')))OR(rt1.c1)))AND(vt1.c2)), rt1.c1 COLLATE NOCASE))>=((vt1.c0 COLLATE RTRIM, rt0.c1, COUNT(*)))) FROM t0 WHERE ((+ ((((((((('墰o23낎k*')OR(0.9684340978891252)))OR(0.4710414998872411)))AND(NULL)))AND('0.31751041519878387'))))) LIMIT 1563192160 OFFSET 710386736;SELECT DISTINCT UPPER(DISTINCT rt0.c2 COLLATE NOCASE), SUM(((rt0.c2)OR(rt1.c1))) OVER ( GROUPS BETWEEN rt1.c2 FOLLOWING AND NULL FOLLOWING EXCLUDE GROUP), ((CASE rt0.c0  WHEN rt0.c2 THEN rt1.c0 ELSE vt1.lid END) IS FALSE) FROM rt0, t0;SELECT ALL ((((vt1.c0)*('1072139418'))) IS TRUE) FROM rt1, rt0, t0, vt1 LIMIT 561142827; -- 0ms;
SELECT DISTINCT (- (t0.c50)) COLLATE RTRIM FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((- (rt1.c0)))IS NOT((vt1.c3 IN ()))) FROM t0, rt0 WHERE (((x'')=((('1320851033') NOT NULL))));SELECT ((((rt1.c2) BETWEEN (vt1.c1) AND (rt1.c2)))||(((rt0.c1) IS FALSE))) FROM t0 GROUP BY LENGTH('761009482') HAVING ((COALESCE(rt0.c0, vt1.c1))&(rt0.c1 COLLATE RTRIM));SELECT ALL ((vt1.lid) ISNULL) COLLATE RTRIM FROM rt0, vt1 WHERE (((CAST(NULL AS NUMERIC))LIKE((((((((('')OR(NULL)))AND(x'')))AND('-1798229851')))OR(NULL))))); -- 0ms;
SELECT DISTINCT 0.3758077340615358 FROM rt1, rt0, t0, vt1 WHERE (((('7,', 0X7ed763dd, -124636063)) BETWEEN ((0.9387088561250073, (((0.7884193499662031, x'', 1563192160))<>((0.629318923413262, NULL, '-1089540767'))), NULL)) AND ((TRIM(0X1591fe02), (('635095834')GLOB('.k')), ((x'') NOTNULL))))); -- 1ms;
SELECT ALL rt1.c1 FROM t0;SELECT DISTINCT (- (((rt1.c1) IS TRUE))) FROM rt0, vt1, t0, rt1 WHERE (((x'' IN ()) IN ())) GROUP BY ((((x'24e9')%(rt0.c0)))>(((((vt1.c1)OR(t0.c50)))AND(vt1.lid)))), (('n') NOT BETWEEN ((('-1301122381') BETWEEN (rt0.c2) AND (rt1.c0))) AND (((NULL) NOT BETWEEN (rt0.c0) AND (rt1.c0)))), ((((vt1.c3) BETWEEN (vt1.c0) AND (t0.c50))) NOT NULL) HAVING ((('' COLLATE NOCASE))>=(((x'' IN ())))); -- 0ms;
SELECT DISTINCT 0X3cac0d0b FROM rt1, rt0, vt1 WHERE (((0.7387334149738493 IN ()) IN ())); -- 0ms;
SELECT DISTINCT (((MAX(vt1.c2)))>((t0.c50))) FROM vt1, rt0, rt1 WHERE (((((((NULL)AND('29912588')))OR(NULL)))|(x'' COLLATE NOCASE)));SELECT CAST(((rt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS NUMERIC), LEAD((((rt1.c0) ISNULL) IN ()), UNLIKELY(((0Xffffffffd5d53312)*(rt1.c2))), ((((((((CAST(NULL AS NUMERIC))AND((NOT (rt1.c2)))))AND(x'')))OR(rt1.c2)))OR(((rt1.c2)IS(rt1.c0))))) OVER (), ((((rt1.c2))<((rt1.c0))) IN ((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c3))), UNLIKELY(DISTINCT '151394646'))) FROM rt1 WHERE (((((NULL)<(0.9161649429420169))) IS TRUE));SELECT DISTINCT COUNT((((rt0.c1))=((vt1.c2)))) FROM t0, vt1, rt0; -- 0ms;
SELECT (((~ (rt1.c1))) IS FALSE), TOTAL(((rt1.c1) BETWEEN (vt1.c3) AND (rt1.c1))) FILTER(WHERE (((NOT (vt1.c3)))>(((((((((rt0.c1)OR(vt1.c0)))OR(t0.c50)))AND(vt1.c3)))OR(rt0.c2))))) OVER (), (~ (((((rt0.c0)OR(rt1.c0)))OR(vt1.c0)))) FROM t0 WHERE (CASE WHEN 2.38910495E8 THEN ((((((((NULL)OR(NULL)))OR(x'')))OR(0.6714998165311006)))OR(x'cf27')) END);SELECT DISTINCT (((vt1.c2)) NOT BETWEEN (((((t0.c50))>((rt0.c2))))) AND ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c0))))), (((vt1.lid)) BETWEEN ((LIKE(rt1.c2, 0x513dca68, '	'))) AND ((((vt1.lid) NOT NULL)))), GROUP_CONCAT(((vt1.c1) NOT NULL)) FROM vt1, rt0 WHERE ((((('5NHY9js') IS FALSE)) NOT BETWEEN ((('-')OR(0.5629572158883643))) AND (CASE WHEN x'de18' THEN 992310275 WHEN '458283954' THEN '-1386469917' WHEN 0.9375844436847847 THEN NULL WHEN NULL THEN x'be61' WHEN 0.06916005052951557 THEN NULL WHEN NULL THEN 0X7c566f1b WHEN 588513296 THEN 6.19218213E8 END)));SELECT DISTINCT 0Xffffffffd0c46c06 FROM rt0, rt1, t0; -- 0ms;
SELECT DISTINCT ((((vt1.c1)!=(rt1.c0))) NOTNULL) FROM vt1;SELECT ALL ((0x1671f67d) ISNULL) FROM rt0, t0, rt1 WHERE (((CASE x''  WHEN -1.682547621E9 THEN '3+gvI l' WHEN NULL THEN '1511123947' WHEN x'' THEN x'' WHEN NULL THEN NULL WHEN x'abf4' THEN NULL ELSE NULL END)>=(CASE NULL  WHEN '-573158767' THEN 0x22dc623f END))); -- 0ms;
SELECT DISTINCT vt1.lid FROM rt0, rt1, t0 WHERE (((('로Nz' IN ()))IS(CAST(0.3532528893744963 AS NUMERIC))));SELECT DISTINCT ((((((vt1.lid) IS TRUE))AND(((((vt1.c1)OR(vt1.c1)))OR(vt1.c0)))))AND(((rt1.c2)<=(rt1.c2)))) FROM t0, rt1, rt0;SELECT (TRIM(DISTINCT rt0.c2) IN ()), CAST(rt1.c2 AS TEXT), LEAD('-261497656', CASE WHEN (rt0.c1 IN (vt1.c1, vt1.c0, vt1.c0)) THEN UPPER('635095834') ELSE vt1.c0 END, ((IFNULL(vt1.c2, rt0.c1)) IS FALSE)) OVER () FROM rt0 INNER JOIN vt1 ON CAST(rt1.c0 AS BLOB) COLLATE RTRIM COLLATE NOCASE LIMIT -487815392 OFFSET -1767321189;SELECT ALL ((CAST(rt1.c1 AS NUMERIC))<(((0.4780041334269971)==(vt1.c1)))) FROM rt1, t0;SELECT ALL ((rt0.c1) NOT NULL) COLLATE BINARY FROM rt1, vt1 WHERE ((((0.45944455294069164) BETWEEN (1863844182) AND (0X3b82ffcd)) IN (((((x'')OR(0.3103232593964167)))AND(''))))) GROUP BY COALESCE(NULL, ((rt1.c1)/(rt0.c1))) ORDER BY (~ (rt0.c1));SELECT DISTINCT (((rt0.c0)) BETWEEN (('g<' COLLATE BINARY)) AND (((+ (t0.c50))))) FROM t0, rt0, rt1 LIMIT 1789598846; -- 0ms;
SELECT DISTINCT ((rt1.c1) NOT NULL) FROM rt1, vt1, t0 WHERE (((CASE WHEN '772829815' THEN 0.8408334242278633 ELSE 'Sd' END) IS FALSE)); -- 0ms;
SELECT DISTINCT t0.c50 FROM vt1, rt1, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (x'') AND (vt1.c0))) IS FALSE) FROM t0, rt0, rt1, vt1; -- 1ms;
SELECT COUNT(*) OVER (), ((((((rt1.c2)OR(vt1.c2)))AND(vt1.c2)))/((((rt1.c1, rt1.c1, vt1.c0))>((vt1.c0, rt0.c2, vt1.c0))))), (((vt1.c1))==((CAST(rt0.c2 AS TEXT)))) FROM rt1, t0;SELECT ALL ((vt1.c0) BETWEEN (vt1.c1) AND (rt0.c2)) COLLATE RTRIM FROM vt1, t0, rt0 ORDER BY ((rt1.c0)GLOB(CAST(rt0.c1 AS REAL)));SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c0)))AND(vt1.lid)))OR(vt1.c1)))OR(rt1.c2))) IS FALSE) FROM t0, rt0, vt1;SELECT DISTINCT (((CAST(vt1.c0 AS INTEGER)))<=((CASE rt0.c0  WHEN rt0.c2 THEN 0.5777548229253304 ELSE rt0.c0 END))) FROM vt1, rt1 WHERE ((- ('5lkx')) COLLATE NOCASE);SELECT DISTINCT (- (rt1.c1)) FROM vt1 LIMIT -1374150801 OFFSET -1575327884;SELECT (- (CAST(rt1.c1 AS BLOB))), CASE WHEN ((rt1.c2) NOT NULL) THEN (~ (rt0.c2)) WHEN '-1386469917' THEN ((vt1.c0) ISNULL) WHEN AVG(')0''d\t(') THEN ((rt1.c1)IS(vt1.c2)) ELSE ((rt0.c2) NOT BETWEEN (vt1.lid) AND (vt1.c3)) END, COUNT((+ (rt0.c0))) COLLATE BINARY FROM vt1, t0, rt0;