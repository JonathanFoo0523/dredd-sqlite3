-- Time: 2024/06/07 06:29:43
-- Database: database48
-- Database version: 3.40.0
-- seed value: 1382912848
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, c1 UNINDEXED); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0='', c0=1085600393 WHERE (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) IN (vt0.c1 COLLATE RTRIM)); -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
UPDATE OR REPLACE vt0 SET c0=NULL WHERE ((((vt0.c1) IS TRUE))-(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))); -- 1ms;
END TRANSACTION; -- 0ms;
PRAGMA temp.default_cache_size; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7622'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=1085600393,6');\n; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0.7023205545720599 WHERE (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS FALSE); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('', 1.085600393E9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 1085600393; -- 0ms;
UPDATE vt0 SET (c0, c0)=(x'', NULL); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 5846711570544465619; -- 0ms;
UPDATE OR ABORT vt0 SET (c1, c0)=(0xffffffffc5a45de9, '') WHERE (NOT ((('0.7023205545720599')/(vt0.c0)))); -- 0ms;
END; -- 0ms;
PRAGMA integrity_check; -- 0ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0, c1) VALUES (0.20162897693724857, 'C D'); -- 11ms;
INSERT INTO vt0(vt0) VALUES('merge=1085600393,2');\n; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '7839'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES (x'86ad'), (0.3340209062018089), (0.11561582891159639); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 3ms;
UPDATE vt0 SET c0=x'537758fd' WHERE SQLITE_COMPILEOPTION_GET(((vt0.c0)IS(''))); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1998304736); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR FAIL vt0 SET (c1)=(0.12585161578863746); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (x'', x''), (x'1504', 0.125698900205098), (NULL, NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 11); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 14); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 539293680); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19286'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-979083799,4');\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR FAIL vt0 SET (c1)=(-437323233); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 1ms;
DELETE FROM vt0 WHERE ((((vt0.c1)IS(vt0.c0))) IS FALSE); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '26592'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1550077301); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1017437692,14');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '19787'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 7); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=569593426,3');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '15985'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 8); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1017091492); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0, c1) VALUES ('', -1e500), (0.3964017813029779, ''), ('569593426', 1e500); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('', x''); -- 1ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt0_segdir_1', ' sz=695972648 unordered'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 1); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x'960c', NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(0.06676220048492953); -- 1ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 2); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
ANALYZE vt0; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2030455923); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2079704211); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '1521'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1493580764); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
INSERT OR REPLACE INTO vt0(c0, c1) VALUES (0.9241570628659573, NULL), (x'880fdec7', 0.3234674569059435), (0x297bb328, x''), (((json_extract('', '-979083799')) NOT BETWEEN (((NULL) NOTNULL)) AND (((0.7676000611535879) NOT BETWEEN (NULL) AND ('u,')))), '1085600393'), (0x297bb328, '903513550'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES ('-979083799', NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 712980673); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 582317115);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('695972648'), (NULL), (0x21f34e52); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE vt0 SET (c1)=(''); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c1) VALUES (0.04320606605949007); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
UPDATE vt0 SET c0=0.37300399750403646, c1='u,', c1=-979083799 WHERE ((((vt0.c0)>>(vt0.c1))) BETWEEN (((vt0.c1)LIKE(vt0.c0))) AND (vt0.c1 COLLATE NOCASE)); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8853'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=NULL; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('695972648', '0.3964017813029779'), ('M', 9.0351355E8), ('-846405582', NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0Xb6a504f, c0='-1470182534', c0=-31967905; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('U'), (NULL), (x''); -- 1ms;
REINDEX  vt0; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0Xb6a504f, x'f4eb'), (x'b3fd', NULL), ('1085600393', x''); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (0.7023205545720599); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c1='' WHERE CAST(((((vt0.c0)OR(vt0.c1)))AND(vt0.c0)) AS REAL); -- 1ms;
UPDATE OR ROLLBACK vt0 SET (c1)=(NULL) WHERE (((NULL)) BETWEEN ((((vt0.c0)>>(x'')))) AND ((CAST(vt0.c1 AS TEXT)))); -- 0ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (0.1997464673947793, x'4c4b'), ('>j*?', 0.737920920307995), ('B乒uⳡ{⫼', '191516751'), (NULL, 0Xffffffffc35b2204), ('0.3340209062018089', '2042908776'); -- 9ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=('ioQdg<lv\', x'') WHERE (((((vt0.c0 IN ()))OR(((0xffffffffc5a45de9)>(vt0.c0)))))AND(COALESCE(vt0.c0, vt0.c0))); -- 1ms;
UPDATE vt0 SET c1='-369192961', c1='U'; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL); -- 1ms;
UPDATE OR IGNORE vt0 SET c1=x'' WHERE (((((NOT (vt0.c0)))AND(CAST(vt0.c0 AS REAL))))AND(vt0.c0 COLLATE RTRIM)); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=8'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c1=0x297bb328; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c1)=(NULL); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, notindexed=c0, languageid="lid"); -- 6ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c1, c0)=(2032082415, 'g!') WHERE ((vt0.c1)/(vt0.c1)) COLLATE BINARY; -- 0ms;
UPDATE OR ABORT vt1 SET (c0)=('') WHERE CASE WHEN ((vt1.lid)&(vt1.lid)) THEN '2032082415' WHEN ((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0)) THEN ((vt1.lid)-(vt1.c0)) WHEN 0.3593152676430177 THEN PRINTF('582317115') WHEN ((0.1589868583329911) NOTNULL) THEN ((vt1.lid)<>(vt1.c0)) WHEN ((vt1.c0) ISNULL) THEN (vt1.lid IN ()) ELSE ((0.8619311295943441)GLOB(vt1.lid)) END; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'sqlite_autoindex_vt1_segdir_1', ' unordered'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(NULL); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (0.9610375115259404, NULL); -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('0.20162897693724857'); -- 0ms;
PRAGMA incremental_vacuum(-1100034461); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (NULL); -- 0ms;
COMMIT; -- 8ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT SUM(((((vt0.c1)AND(vt0.c1)))AND(vt1.lid))) OVER () FROM vt1, vt0 WHERE (((NULL)IS((('g!')>>('0.1589868583329911'))))); -- 0ms;
SELECT DISTINCT (((((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt1.c0))))<>((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END))), json_insert(((vt1.lid)&(vt0.c0)), COALESCE(vt0.c1, vt1.lid), NULL, -369192961, (vt0.c0 IN (vt0.c1, vt1.lid))), (((vt0.c1)>=(vt1.lid)) IN ()) FROM vt0 WHERE ((((('1085600393' COLLATE RTRIM)AND(((-626747627) IS TRUE))))OR(CASE 0.9018508767826375  WHEN '-1651234052' THEN 0Xffffffffdaa49715 END)));SELECT vt1.lid FROM vt0, vt1 GROUP BY (~ ((((vt1.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt1.c0, vt0.c0, vt1.c0)) AND ((vt0.c0, vt1.lid, vt0.c1))))); -- 1ms;
SELECT DISTINCT (NOT (NULLIF(vt1.c0, vt0.c0))), ((MIN(vt0.c0, vt1.c0))<<(((vt1.lid) IS FALSE))), ((LIKELY(DISTINCT vt1.c0))<>((((vt0.c0, vt1.c0, vt0.c0)) NOT BETWEEN ((NULL, 0Xffffffffafe2fe72, vt1.lid)) AND ((vt0.c1, vt0.c0, '-1837656773'))))) FROM vt0 WHERE (((((NULL IN ('191516751', NULL))))<(((((x'573d')) BETWEEN (('m')) AND (('582317115')))))));SELECT ((vt0.c1 COLLATE BINARY)<>(((vt1.c0) BETWEEN (vt1.c0) AND ('')))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt1.c0, -1.837656773E9, vt0.c0))<((vt1.c0, vt0.c0, vt1.lid))))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM vt1 WHERE ((((((x'')) BETWEEN ((x'')) AND (('')))) NOT BETWEEN ((((((((('s-')OR(x'')))AND(0X2ce11748)))OR(NULL)))OR(NULL))) AND (CAST(NULL AS TEXT))));SELECT ALL vt0.c0, ((MAX(vt1.lid)) IS FALSE), ((LIKE(vt1.c0, vt1.c0))IS(((((vt0.c1)OR(vt0.c1)))AND(vt1.c0)))) FROM vt0;SELECT ALL (((- (vt0.c1))) IS FALSE) FROM vt1;SELECT DISTINCT vt1.lid FROM vt0 WHERE (((((NULL) NOT BETWEEN (0.6519962702842119) AND (''))) IS TRUE));SELECT DISTINCT AVG(vt1.c0) FILTER(WHERE ((((((NULL)OR(vt1.c0)))OR(vt0.c1)))%(((vt0.c0)*(vt1.lid))))) OVER () FROM vt1, vt0; -- 0ms;
SELECT ((((((((((vt0.c0)OR(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))OR(vt1.lid)))IS(GROUP_CONCAT(vt1.lid))), CAST(((((vt1.c0)AND(vt0.c1)))OR(vt0.c1)) AS REAL), CASE WHEN (- (vt1.c0)) THEN CASE WHEN vt1.c0 THEN vt1.c0 WHEN NULL THEN vt0.c0 WHEN '-626747627' THEN vt1.lid ELSE vt0.c1 END END FROM vt0;SELECT ALL vt0.c0 FROM vt0, vt1 WHERE ((CASE NULL  WHEN 0.529527064377354 THEN x'18a7' END IN ())); -- 0ms;
SELECT ALL CAST(((vt1.lid)>>(vt0.c0)) AS BLOB) FROM vt1, vt0 WHERE (((((((-8.46405582E8)AND('G*')))AND(NULL))) BETWEEN ((('1142935854')-('ẓ	vi'))) AND ((((NULL))<>(('P2')))))); -- 0ms;
SELECT DISTINCT '-2075636088' FROM vt1 GROUP BY ((((vt1.c0 COLLATE RTRIM)AND(CAST(vt1.c0 AS TEXT))))AND(vt1.lid)); -- 2ms;
SELECT TOTAL(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0))), (((vt0.c1 IN (vt1.c0))) BETWEEN (((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c0)))OR(vt1.lid))) AND ((((vt1.c0))!=((vt1.c0))))), (((('546053779') NOTNULL))GLOB(0.19034607545238513)) FROM vt0;SELECT DISTINCT CASE WHEN CASE WHEN vt0.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt0.c0 THEN vt0.c1 END THEN (vt1.c0 IN (vt1.c0, vt0.c0)) ELSE ((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) END FROM vt0, vt1 WHERE ((+ ((~ (0x7ff879a))))); -- 0ms;
SELECT -344000529, ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (((vt1.c0)*(NULL))) AND (CASE WHEN x'' THEN vt0.c1 WHEN vt1.lid THEN vt1.c0 WHEN vt0.c1 THEN 0.3082523669035736 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt1.lid END)), ((((((((vt0.c1)AND(vt0.c0)))OR(CASE WHEN vt0.c1 THEN vt0.c1 END)))AND(((vt1.c0)IS NOT(vt1.c0)))))OR(((vt1.lid)GLOB(vt1.c0)))) FROM vt1;SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (CAST((NULL IN ()) AS INTEGER)) LIMIT 763683531 OFFSET -2112645802; -- 0ms;
SELECT DISTINCT CASE MIN(vt1.c0)  WHEN vt0.c1 THEN ((vt1.c0)LIKE(vt1.lid)) END FROM vt1, vt0 WHERE (((((0.125698900205098)||('695972648'))) BETWEEN (((0.04320606605949007) ISNULL)) AND ('' COLLATE BINARY))) GROUP BY ((((vt1.c0)/(vt1.c0)))>(x'')), ((((((vt1.c0)) NOT BETWEEN ((0.13148385378822525)) AND ((vt1.c0)))))>(((NOT (vt1.c0))))), (((vt1.c0, vt1.c0, vt0.c1)) BETWEEN ((569593426, vt1.lid, vt1.lid)) AND ((vt0.c1, vt0.c0, vt0.c0))) COLLATE BINARY, (((NOT (vt0.c0))) BETWEEN ((((vt0.c0))>((vt1.lid)))) AND (CAST(vt0.c1 AS NUMERIC))), (CAST(vt1.lid AS TEXT) IN ()); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(vt0.c1) FROM vt0 WHERE (((((((NULL)&(-1096662490)))AND((('-1188401463') IS FALSE))))OR('1976891152' COLLATE RTRIM))); -- 0ms;
SELECT ALL ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END)OR(vt0.c1 COLLATE NOCASE)))AND(CAST(vt1.lid AS REAL))) FROM vt1, vt0 WHERE (IFNULL(((((0Xffffffffe7ad34a7)AND(x'')))OR(-408079193)), ((x'') NOT BETWEEN ('-1212296988') AND (x'b14669af')))); -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS NUMERIC) COLLATE NOCASE FROM vt0, vt1; -- 0ms;
SELECT DISTINCT '婒' FROM vt1 WHERE ((((((' ', 0x4d53b212, 'U'))!=((x'', 0.7270763715374213, x''))))>(((((NULL)OR('1108874212')))OR(NULL))))); -- 0ms;
SELECT DISTINCT (('%e䈦SU[') NOTNULL) FROM vt0 ORDER BY ((CAST(vt0.c0 AS INTEGER)) NOT BETWEEN (NULL COLLATE RTRIM) AND (vt1.lid COLLATE BINARY));SELECT DISTINCT CASE CAST(vt0.c0 AS INTEGER)  WHEN TOTAL(x'') THEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1)) WHEN ((vt1.lid)GLOB(vt1.c0)) THEN vt1.c0 WHEN CAST(vt1.lid AS REAL) THEN vt1.c0 COLLATE RTRIM ELSE ((vt0.c1) NOT NULL) END FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, 0.6296824658505368, ((CASE WHEN vt0.c0 THEN '' END)|(vt0.c0 COLLATE BINARY)), (((('-26413738') NOT BETWEEN (vt0.c0) AND (vt1.c0)))IS(((vt1.lid) ISNULL))), 0X7fffffffffffffff FROM vt1;SELECT DISTINCT ((CAST(NULL AS BLOB)) BETWEEN (HEX(vt0.c0)) AND (((vt0.c1)LIKE(vt1.lid)))) FROM vt0, vt1 LIMIT -1250874811; -- 0ms;
SELECT MAX(((vt1.c0)|(vt1.lid))) FROM vt0, vt1 WHERE (((x'c403' COLLATE BINARY) NOT NULL)) ORDER BY INSTR(((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), vt1.lid); -- 0ms;
SELECT DISTINCT (~ (CASE vt0.c0  WHEN vt1.lid THEN vt0.c1 ELSE vt1.c0 END)) FROM vt0 WHERE (IFNULL(DISTINCT '9?' COLLATE RTRIM, ((NULL)>=(x'3e49'))));SELECT ALL CAST(CASE vt1.c0  WHEN vt1.lid THEN vt0.c0 END AS BLOB) FROM vt0 WHERE ((x'29bc' IN ()));SELECT (((vt0.c0)) BETWEEN ((((vt1.c0)GLOB(vt0.c1)))) AND ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 END))) FROM vt0, vt1 UNION SELECT DISTINCT (((NOT (vt0.c0)))+(((vt0.c1) ISNULL))) FROM vt1, vt0; -- 0ms;
SELECT ALL vt1.c0 FROM vt1 WHERE (((((((0.06765707838300639)AND(0x14c98650)))OR(NULL)))/(CASE WHEN '-218574550' THEN x'' WHEN x'ff91' THEN '0.7023205545720599' WHEN x'' THEN '-1344078222' WHEN '-437323233' THEN NULL WHEN 1350243350 THEN NULL END))); -- 0ms;
SELECT DISTINCT (AVG(0Xffffffffb06f2093) IN ()) FROM vt0 WHERE (CASE WHEN MAX(x'', NULL, x'2661', 1621175521) THEN ((NULL) IS TRUE) END); -- 0ms;
SELECT DISTINCT (((((vt1.lid))<>((vt1.c0))))>=(NULL)) FROM vt1, vt0 WHERE (((((NULL)<('-1344078222')))-((('-2112645802') NOT BETWEEN ('-2075636088') AND (0.987110131474324))))); -- 0ms;
SELECT (((('TfAG''') IS TRUE)) NOT BETWEEN (vt0.c1) AND (vt0.c1 COLLATE NOCASE)), ((1794996262) BETWEEN (0.9805981892046217) AND (((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)))), ((CASE WHEN vt1.lid THEN vt1.lid END) ISNULL) FROM vt1, vt0 WHERE (((0.6731340686723044)/(-594469073)) COLLATE NOCASE); -- 0ms;
SELECT (('579982082')<<(vt1.lid COLLATE RTRIM)) FROM vt0;SELECT NULL, (((- (vt1.c0)))<=(json_type(vt1.lid))), ABS(DISTINCT ((vt1.lid) BETWEEN (vt0.c0) AND ('w匒'))) FROM vt1;SELECT ALL ((0x2ce11748)AND(((vt0.c0)|(vt0.c0)))) FROM vt0; -- 1ms;
SELECT DISTINCT MAX((vt1.lid IN (vt1.c0, vt0.c0))), CAST(vt0.c1 AS REAL) COLLATE BINARY, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE NOCASE FROM vt1, vt0 LIMIT 1226867598 OFFSET 1108874212; -- 0ms;
SELECT DISTINCT PRINTF(((vt1.lid)&(vt1.c0))) FROM vt1; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT 0.7584786245856056, ((((vt0.c1)OR(x'')))OR(vt1.lid))) FROM vt1;SELECT ((CAST(vt1.lid AS BLOB))%(0.41449231133488473 COLLATE BINARY)) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt0.c0)AND(vt1.c0))) NOT BETWEEN (-1.100034461E9) AND ((vt1.lid IN ()))) FROM vt1;SELECT DISTINCT COALESCE(DISTINCT vt1.lid COLLATE BINARY, CAST(vt0.c0 AS NUMERIC)) FROM vt1 WHERE ((((0.19034607545238513)GLOB(NULL)) IN (CAST(NULL AS INTEGER)))) ORDER BY ((((((((((vt0.c1) NOT BETWEEN ('缸MYwGQRq') AND (vt1.c0)))OR(((vt0.c1) NOTNULL))))AND(vt1.lid)))OR('')))OR('463628680'))  NULLS FIRST;SELECT ((((vt1.lid) BETWEEN ('') AND (NULL)))*(((vt0.c1) BETWEEN (vt1.c0) AND (vt1.lid)))) FROM vt1 FULL OUTER JOIN vt0 ON COALESCE(DISTINCT ((vt0.c0)-(vt1.c0)), NULL) WHERE (((((-654804878)AND(LIKELY(DISTINCT 1.72912309E9))))AND(((0Xffffffffc31be800)GLOB('-31967905'))))) ORDER BY (((NULL)+(vt1.c0)) IN (((vt0.c0)IS(vt1.c0)))) ASC; -- 0ms;
SELECT DISTINCT ((COUNT(vt0.c1))IS NOT(0.37300399750403646)) FROM vt0, vt1 LIMIT -1758604499 OFFSET 455027322; -- 0ms;
SELECT DISTINCT MAX(((vt0.c0)==(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, vt1 WHERE (PRINTF(CASE WHEN 0.40799394672833145 THEN '-1334894445' END)) ORDER BY CAST(((vt0.c0) NOT NULL) AS TEXT) ASC, (((x'')==(vt1.lid)) IN ()); -- 0ms;
SELECT DISTINCT (((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END))<((((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))))) FROM vt1 WHERE (((((((((((((0.17850245326662306)OR(0.6386301452790586)))AND(x'')))AND('弾z')))OR('267264970')))OR(((9.0351355E8)>=('1e500')))))OR(x'1ffe')));SELECT DISTINCT vt1.c0, (vt0.c0 IN ()), CASE GROUP_CONCAT(vt0.c1)  WHEN CAST(vt1.c0 AS NUMERIC) THEN CASE vt1.lid  WHEN vt0.c1 THEN vt1.c0 END ELSE (((vt0.c1))>=((vt1.c0))) END FROM vt0 NOT INDEXED;SELECT DISTINCT TRIM(DISTINCT ((((((((((((vt1.c0)AND(vt1.c0)))OR(vt0.c1)))OR(vt1.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)), CAST(vt1.c0 AS INTEGER)), (+ (AVG(vt0.c0))), ((RTRIM(vt1.lid)) IS TRUE) FROM vt0, vt1 WHERE ((('886745506')AND('-1897674593'))); -- 1ms;
SELECT CAST(vt0.c0 AS INTEGER) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CAST(vt0.c1 COLLATE RTRIM AS BLOB), CAST(GROUP_CONCAT(vt1.lid) AS NUMERIC) FROM vt1;SELECT DISTINCT (NOT (HEX(DISTINCT vt1.lid))), MAX((vt0.c0 IN ())), (((((((vt1.lid))>((vt1.lid))))AND((~ (vt0.c1)))))OR((((x''))>=(('-979083799'))))) FROM vt1, vt0 ORDER BY (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid)))) NOT BETWEEN (vt0.c1) AND (((vt1.c0)<=(vt0.c0)))) ASC; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0 WHERE ((((('0.9610375115259404')LIKE(1.621175521E9))) BETWEEN ((('t!M팂9Y?5r')LIKE('fs'))) AND (x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt0.c1)))<<(COUNT(vt0.c0))) FROM vt1;SELECT ((vt1.lid COLLATE BINARY) BETWEEN (((vt0.c1)GLOB(vt0.c0))) AND (SUBSTR('i-og', vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT MAX(NULL) FROM vt0 WHERE (CAST((+ ('OK')) AS INTEGER)); -- 0ms;
SELECT FIRST_VALUE((((((vt0.c1 IN ()))OR((+ (vt0.c0)))))OR(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))))) OVER () FROM vt0; -- 0ms;
SELECT ((((vt0.c0) ISNULL)) NOT BETWEEN (vt1.c0) AND ((vt1.lid IN ()))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((json_array_length(vt1.c0, vt1.c0))) AND (((NULL IN (vt0.c1, vt0.c0))))) FROM vt1;SELECT DISTINCT vt1.c0 FROM vt0;SELECT ALL (- ((vt0.c0 IN ()))), DATE(((vt1.c0) NOTNULL), COUNT(vt0.c1), ((vt1.c0)<<('2滉')), (((vt0.c0, vt1.lid, vt0.c1)) BETWEEN ((vt1.lid, vt1.c0, vt0.c0)) AND ((vt1.lid, vt1.c0, vt0.c1))), COUNT(*), vt0.c1, COUNT(*)), (NOT (((vt0.c0)<=(vt0.c0)))) FROM vt0, vt1 ORDER BY ((((vt1.lid)AND(CAST(vt1.c0 AS REAL))))AND(((vt0.c0) BETWEEN (vt1.lid) AND (vt1.c0))))  NULLS LAST; -- 0ms;
SELECT ALL PRINTF(vt0.c0 COLLATE BINARY, (~ (vt1.c0)), CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END) FROM vt1;SELECT ((0.1997464673947793) ISNULL) FROM vt0; -- 0ms;
SELECT ((vt1.lid COLLATE NOCASE) BETWEEN (((vt0.c0)!=(vt1.c0))) AND (((vt1.c0)+(vt0.c1)))) FROM vt1, vt0 WHERE (COALESCE(((0Xffffffffc5a45de9) ISNULL), (((NULL))>=((NULL))))); -- 0ms;
SELECT ((AVG(vt0.c0))>=(((vt0.c0)%(vt0.c1)))), (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))AND(((vt1.c0) BETWEEN (vt1.lid) AND (vt0.c0)))))OR(CAST(vt0.c0 AS NUMERIC))), (((vt1.c0) NOT NULL) IN ((- (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL 0.2833971469808746, ((((vt1.lid)GLOB(vt0.c1)))<=(vt1.c0 COLLATE BINARY)), AVG(CAST(vt0.c1 AS INTEGER)) FROM vt0, vt1; -- 0ms;
SELECT ALL CAST((+ (vt0.c0)) AS TEXT), CAST(TYPEOF(DISTINCT 0X441fd12e) AS INTEGER), TYPEOF(DISTINCT (((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))), ('' IN (((0.6397000046968309) NOT BETWEEN (vt1.lid) AND (vt1.c0)))), (- (((vt0.c1)=(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (vt0.c1 IN ()) COLLATE RTRIM, (((((+ (NULL)))AND((vt1.lid IN ()))))AND(vt1.lid COLLATE NOCASE)), (CAST(vt1.c0 AS REAL) IN ()), ((UPPER(vt1.c0)) NOTNULL), ((MAX('-2112645802')) NOT BETWEEN (vt0.c1 COLLATE RTRIM) AND ((((x'', vt1.c0, vt0.c0)) BETWEEN ((vt1.c0, vt1.lid, vt1.lid)) AND ((vt0.c0, vt1.c0, vt1.lid))))) FROM vt1, vt0 WHERE (IFNULL(DISTINCT ((x'1de6')>(x'00ff')), NULLIF(DISTINCT NULL, 1.794996262E9))) GROUP BY ((((vt1.lid) ISNULL)) BETWEEN (((vt0.c0)+(vt0.c0))) AND (((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c1)))); -- 0ms;
SELECT ALL DENSE_RANK() OVER ( GROUPS ((CASE WHEN vt0.c0 THEN NULL END)>(((vt0.c0) IS TRUE))) PRECEDING EXCLUDE CURRENT ROW) FROM vt1 WHERE ((~ ((('') BETWEEN (1.976891152E9) AND (x'b774'))))) LIMIT -1216955668; -- 0ms;
SELECT COUNT('') OVER (), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)) IN (json_remove(vt0.c1, vt1.lid, vt1.lid, 'lr'), ((vt0.c1) NOT NULL))), (('U,') BETWEEN ((vt1.c0 IN (0.06676220048492953))) AND (vt0.c1 COLLATE NOCASE)) FROM vt0 WHERE (CAST(CASE 0.4997044095621245  WHEN ' kj᪱EJMzb' THEN 1.226867598E9 END AS TEXT));SELECT TOTAL(((vt0.c1)!=(vt0.c1)) COLLATE RTRIM) FROM vt0, vt1 ORDER BY (+ (x''))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (((vt0.c0) IS FALSE))), -326283387, ((RTRIM(vt0.c0)) NOT BETWEEN (CAST(vt0.c0 AS BLOB)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0, vt1 WHERE ((((((((((('u5+gkj')&('1794996262')))OR((NULL IN ()))))OR('B乒uⳡ{⫼' COLLATE BINARY)))AND((NULL IN ()))))AND((((x'', x'560d', ''))<=(('', x'', x'')))))); -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt1.lid)))OR(vt0.c1)))%(((vt1.lid) NOT NULL))) FROM vt0, vt1 WHERE (TOTAL_CHANGES()) GROUP BY (vt0.c0 IN ()) COLLATE BINARY LIMIT 788700966; -- 1ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, vt1 WHERE ((0.17850245326662306 IN (x'b602')) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT DISTINCT AVG(vt0.c1) FROM vt1, vt0; -- 0ms;
SELECT ((LTRIM(vt0.c1, vt0.c0))&((vt1.lid IN (vt1.lid, vt0.c0)))) FROM vt1;SELECT ((vt1.lid COLLATE BINARY) BETWEEN (vt0.c1 COLLATE NOCASE) AND (vt0.c1)) FROM vt0 WHERE (((((x'cac7') NOT BETWEEN (x'') AND (''))) NOT BETWEEN (((',o')%(x''))) AND ((('mL}L') NOT NULL)))) LIMIT 846704086 OFFSET 730759530;SELECT DISTINCT ((SQLITE_COMPILEOPTION_GET(vt0.c1)) IS FALSE) FROM vt0, vt1; -- 0ms;
SELECT COUNT(*) OVER (), ((CAST(x'' AS NUMERIC))>>(((((vt0.c0)OR(vt1.c0)))AND(vt0.c1)))), CASE WHEN (vt1.lid IN ()) THEN CAST(vt1.lid AS TEXT) WHEN (vt0.c0 IN (vt0.c0)) THEN vt0.c1 WHEN vt0.c1 THEN CAST(vt0.c1 AS NUMERIC) WHEN (vt0.c0 IN ('-326283387')) THEN (~ (vt0.c0)) WHEN ((vt0.c0)<<(vt1.lid)) THEN ((x'') BETWEEN (vt1.lid) AND (vt1.lid)) ELSE ((vt0.c1) NOT NULL) END FROM vt1, vt0 WHERE (LOWER(CASE WHEN NULL THEN 8.46704086E8 END)) GROUP BY ((vt1.lid) ISNULL) COLLATE NOCASE COLLATE NOCASE; -- 1ms;
SELECT AVG(CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.lid THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 END) FILTER(WHERE vt1.lid) OVER (), CASE WHEN ((vt1.lid)<>(vt0.c0)) THEN ((NULL)>>(vt0.c0)) ELSE SUM(vt1.c0) END, UNLIKELY(DISTINCT vt0.c0 COLLATE BINARY), ((((vt1.lid)>(vt1.lid))) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((vt1.lid IN ()))), LIKELY(SUM(vt1.c0)) FROM vt1 WHERE ((((0.9241570628659573 IN ()))GLOB(((0x4c0cf0ab)!=(-5.94469073E8)))));SELECT DISTINCT CAST('1350243350' AS NUMERIC), PERCENT_RANK() OVER ( ORDER BY x'' ASC), (((vt0.c0)) BETWEEN ((SUBSTR(vt0.c0, NULL))) AND ((((vt0.c0) IS TRUE)))), (((vt1.lid IN ())) IS TRUE), CAST(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT ALL (((vt1.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))) COLLATE RTRIM, ((('858595470', vt0.c1, vt1.c0)) NOT BETWEEN ((CAST(vt1.c0 AS REAL), (vt1.lid IN ()), ((('-26413738')) BETWEEN ((vt1.lid)) AND ((vt0.c0))))) AND ((((vt0.c0) NOT NULL), vt1.c0, ((vt1.c0)<=(vt0.c1))))), (((('5''i') IS FALSE))||(CAST(vt0.c1 AS BLOB))) FROM vt1;SELECT DISTINCT COUNT((((vt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0)))) OVER () FROM vt1, vt0 WHERE (CAST((('&\rO巩')/(0xffffffffeaa65a52)) AS INTEGER)); -- 2ms;
SELECT (((vt1.c0 IN ())) IS FALSE) FROM vt0 WHERE ((((0.46582896194490486, NULL, ')QŏŏD{Vb|')) BETWEEN ((CAST(x'5a72' AS REAL), '-1e500' COLLATE NOCASE, CASE NULL  WHEN NULL THEN 280311426 WHEN 'eN' THEN x'' WHEN 0.9732342402481488 THEN 0X52e9ee5e WHEN '434922078' THEN 5.82317115E8 WHEN x'' THEN -218574550 ELSE '6372632173921563433 1533T' END)) AND ((CASE 0.8004287395431356  WHEN '' THEN 0.06676220048492953 WHEN 0.23511064459555775 THEN x'' WHEN NULL THEN NULL END, CAST('NX&滲Jq.AK' AS TEXT), (NULL IN (NULL)))))) ORDER BY ((((vt1.c0)>(vt0.c1))) NOTNULL)  NULLS FIRST;SELECT ALL ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END)OR((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))))))OR(CAST(vt0.c0 AS BLOB))), (+ (vt0.c1)), ((vt0.c0) NOT NULL) FROM vt0, vt1 WHERE (((((NULL) BETWEEN (0.815321797445123) AND (''))) NOT BETWEEN (CAST('590967647' AS BLOB)) AND ((((('-543526186')OR('-0.0')))AND(0.5285724175877742))))); -- 0ms;
SELECT DISTINCT ((vt1.lid COLLATE NOCASE)<=(((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c1)))) FROM vt1;SELECT CASE WHEN (((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt0.c0))) THEN x'1938' END FROM vt0 WHERE ((((NOT (0.42310738957426863))) BETWEEN (('-31967905' IN ('\N) ', NULL))) AND (x'' COLLATE RTRIM)));SELECT ALL (+ (CASE vt1.c0  WHEN vt1.c0 THEN vt0.c1 WHEN vt1.lid THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt1.lid END)), DATETIME((((vt0.c1))<((vt0.c0))), ((vt1.lid)||(vt1.c0)), (('1772406771')+(vt0.c0))), ((json(vt1.c0)) IS TRUE) FROM vt0;SELECT (((vt0.c0)) BETWEEN ((vt1.c0)) AND ((NULL COLLATE RTRIM))), AVG((((('0.9805981892046217')AND(vt1.lid)))OR('-1250874811'))), (NULLIF(DISTINCT vt0.c1, vt0.c1) IN ()), SUM(((vt0.c0) IS TRUE)) OVER (), 8.46704086E8, GROUP_CONCAT(vt1.lid COLLATE RTRIM) COLLATE RTRIM, (((vt0.c0)+(vt0.c0)) IN ()) FROM vt1, vt0 WHERE (LOWER(DISTINCT (((('')OR(x'')))AND('oᐖM')))); -- 0ms;
SELECT ((CASE WHEN vt1.c0 THEN vt0.c0 END) NOT NULL) FROM vt0 WHERE ((((((~ (x'')))OR((+ (NULL)))))AND(x'' COLLATE NOCASE))) LIMIT 1029473113;SELECT DISTINCT NTILE(vt1.lid) OVER (), (((~ ('-1206898241'))) IS FALSE), ((vt0.c1 COLLATE RTRIM)<=((0.987110131474324 IN (vt1.c0, vt0.c0, vt0.c1)))) FROM vt1 WHERE ((((((+ (x'')))AND(CASE 0xffffffffb18f8cca  WHEN 0xffffffffbfbecca3 THEN x'd509' END)))AND((0.3234674569059435 IN ()))));SELECT AVG(((vt1.lid)*(vt1.c0))) FROM vt1, vt0 WHERE (CASE WHEN ((((x'')AND(0Xffffffff9d942afc)))AND(0.17020751376192522)) THEN ('0.19034607545238513' IN (0.16307639465961998)) WHEN CAST(x'8656' AS REAL) THEN (((0.5763311290875273)) NOT BETWEEN ((NULL)) AND (('0b匊F'))) WHEN ((((0.6519962702842119)OR(0Xffffffff958a075c)))OR('1794996262')) THEN (((0.06082402380474228, x'', '1722033888'))>=((0.2830868030479621, '', '0.2830868030479621'))) ELSE ((((((((NULL)AND('x_')))OR('S-')))OR('^''')))AND(x'')) END) GROUP BY CAST(ROUND(vt1.lid, vt0.c1) AS TEXT) HAVING (((+ (0.04320606605949007)))AND(((NULL)IS(vt0.c1)))) ORDER BY ((((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))==((('⩺0P') ISNULL)))  NULLS LAST LIMIT -369192961 OFFSET 237036405; -- 0ms;
SELECT ALL CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0))) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0)*(vt0.c0)) THEN ((NULL) IS TRUE) WHEN (((vt0.c0, vt1.lid, vt1.c0))==(('-1212296988', vt1.c0, vt0.c1))) THEN TYPEOF(DISTINCT vt1.c0) ELSE ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END FROM vt0;SELECT ALL (('134186906')-(((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c1)))) FROM vt0, vt1; -- 0ms;
SELECT (((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0))))=((CAST(vt1.c0 AS REAL)))) FROM vt0, vt1 WHERE (CASE WHEN 0.9888951884760451 THEN ((0.9068805696850213) BETWEEN (x'd839') AND ('2072643167')) END) UNION ALL SELECT DISTINCT CASE WHEN (((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0))) THEN vt0.c1 COLLATE RTRIM ELSE vt0.c0 END FROM vt1, vt0; -- 0ms;
SELECT ((vt0.c0) ISNULL) FROM vt1 WHERE (x'');SELECT DISTINCT TYPEOF(DISTINCT ((vt1.c0)AND(vt1.c0))), CUME_DIST() OVER (), ((((vt0.c0) NOT NULL)) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.lid)))) AND (vt1.c0 COLLATE NOCASE)) FROM vt0 LIMIT -1437012228 OFFSET -1504725676;SELECT DISTINCT (((vt1.c0 IN (vt1.lid)))*(CASE WHEN vt0.c1 THEN '~B3(hU1' ELSE vt0.c1 END)) FROM vt1 WHERE (CAST(CASE NULL  WHEN 0.8914682911175124 THEN NULL ELSE 'q[Ec?-a}' END AS BLOB)) ORDER BY CASE WHEN ((vt0.c1)&(vt1.c0)) THEN (((vt1.c0, vt0.c0, vt1.c0))>((vt0.c0, NULL, vt1.c0))) WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) THEN vt1.lid COLLATE NOCASE WHEN ((((((((NULL)OR(vt0.c0)))OR('1621175521')))AND(vt1.lid)))OR(vt0.c1)) THEN 1.35024335E9 ELSE (+ (vt1.lid)) END DESC;SELECT DISTINCT vt1.c0, (((((((((vt0.c0 IN ()))OR(((x'b766')/(vt0.c1)))))AND(vt1.c0 COLLATE NOCASE)))OR(((vt0.c1) NOT NULL))))AND(1.028477706E9)), (((('-686303237')AND(((vt1.lid)>>(vt1.c0)))))OR(COUNT(vt0.c0))) FROM vt1, vt0 WHERE (TRIM(DISTINCT 0.370344798051111 COLLATE BINARY, (((('r3zdu ')AND(NULL)))AND(-218574550)))); -- 1ms;
SELECT DISTINCT '0.6731340686723044' FROM vt0 LIMIT 1355379965 OFFSET 198293374; -- 0ms;
SELECT ALL RANK() OVER (), MAX(TOTAL((((vt1.c0))<>((-218574550))))), ((SQLITE_VERSION())<((~ (vt1.lid)))) FROM vt1 NOT INDEXED WHERE (CAST(((0.813792471733018)|('Z㒧')) AS TEXT)) UNION SELECT DISTINCT CASE ((((vt0.c1)OR(vt1.c0)))OR(vt0.c0))  WHEN LENGTH(vt0.c0) THEN vt1.lid COLLATE RTRIM ELSE (((vt1.lid, vt0.c0, vt1.c0))>=((vt0.c0, vt1.c0, vt1.lid))) END, LAST_VALUE(0.8662506392878744) OVER (), vt0.c0 FROM vt0 WHERE (((CAST(x'' AS REAL)) NOT NULL));SELECT (~ (IFNULL(vt1.c0, vt0.c0))) FROM vt1, vt0 ORDER BY ((((0.20162897693724857)<=(vt0.c0)))<=(NULLIF(DISTINCT vt1.lid, vt1.lid))), ((CAST(vt0.c0 AS REAL))==(((((vt0.c0)AND(vt0.c1)))AND(NULL)))) ASC, 0.5718417951226913 DESC  NULLS FIRST LIMIT 867622639 OFFSET -1947697352; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1;SELECT ALL ((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt0.c0 END) BETWEEN (763683531) AND (NULL)) FROM vt0, vt1 WHERE ((- (-1.206898241E9)) COLLATE BINARY) GROUP BY CAST(HEX(vt1.lid) AS REAL); -- 1ms;
SELECT ALL ((NULL)GLOB(NULL)) FROM vt0; -- 0ms;
SELECT ALL ((((((vt1.c0)AND('')))OR(vt0.c0))) NOT BETWEEN ((- ('^Yq7bB匒ON'))) AND (vt1.c0)), (((vt1.c0 COLLATE NOCASE))<=((((((((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)))OR(vt1.c0)))AND(vt0.c0))))), CASE ((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0))  WHEN CAST(vt1.lid AS REAL) THEN (('0.8619311295943441') BETWEEN (vt0.c1) AND (vt1.c0)) ELSE SUM(vt0.c1) END FROM vt0 WHERE ((((((((x'e37a', NULL, x''))<>((NULL, 0.9299755436549875, ''))))OR((- ('䘮y')))))OR((0x35da85ce IN ()))));SELECT ((((vt1.lid) BETWEEN (vt0.c0) AND (vt1.lid))) IS TRUE) FROM vt0;SELECT AVG((vt1.c0 IN ())) COLLATE NOCASE, (((vt1.c0) NOT NULL) IN (((vt1.lid) IS TRUE))), COALESCE(DISTINCT ((vt1.lid)IS(vt0.c1)), ((x'') IS TRUE)), ((((((((vt1.c0)AND(vt1.c0)))AND(vt1.lid)))AND((((vt1.lid))<((vt1.lid))))))OR(((-26413738)<=(vt1.c0)))), ((((vt1.c0)AND(vt1.lid COLLATE NOCASE)))AND(((vt1.c0)=(vt0.c1)))) FROM vt0 LIMIT -1651234052;SELECT (~ (NULL)) COLLATE RTRIM, (vt0.c1 IN ()), (((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1)))) IS TRUE) FROM vt0 LEFT OUTER JOIN vt1 ON (((vt0.c0)LIKE(vt1.c0)) IN ()); -- 0ms;
SELECT ALL MIN((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0, vt1 WHERE (CAST(1127242163 COLLATE RTRIM AS BLOB)) LIMIT -1119596025 OFFSET 2145580048; -- 1ms;
SELECT ALL ((((vt1.c0)GLOB(vt0.c1)))%(vt1.c0)), vt0.c0, TIME((vt0.c0 IN ()), ((vt1.c0) NOT NULL), CASE vt1.c0  WHEN 'w匒' THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt1.c0 THEN vt0.c1 END) FROM vt1 WHERE ((((NOT (-1.315992374E9)))-((((x'0aafac8e', NULL, 0Xffffffffc4a80366))<>((x'', '0.2833971469808746', 0.2421447210676152)))))) ORDER BY vt0.c0 ASC  NULLS LAST;SELECT DISTINCT COUNT(*) FILTER(WHERE (((((vt1.lid))<((vt0.c1)))) IS FALSE)) OVER () FROM vt0, vt1 WHERE (CASE WHEN 0.13595843072539848 THEN '0.2833971469808746' WHEN 0.34317605541714813 THEN x'' WHEN x'' THEN '4. *' WHEN -1078014813 THEN x'5114' WHEN NULL THEN NULL ELSE 0xffffffff906c7fe0 END COLLATE NOCASE COLLATE NOCASE); -- 4ms;
SELECT ALL UPPER(0.8423076964667237), MAX(CAST(vt0.c0 AS REAL), vt0.c0 COLLATE RTRIM), TRIM(CAST(vt1.c0 AS INTEGER)) FROM vt0 WHERE (CAST(((NULL) BETWEEN (-2.075636088E9) AND (1.101295346E9)) AS BLOB)) ORDER BY ((vt1.c0 IN ()) IN ());SELECT MIN(('2032082415' IN ())) FROM vt1, vt0 WHERE (PRINTF(((x'5392')OR(-1.212296988E9)))); -- 0ms;
SELECT RANK() OVER () FROM vt1 WHERE ((((((''))<=((x''))))IS NOT('0.9805981892046217'))); -- 1ms;
SELECT ALL CASE vt0.c1 COLLATE BINARY  WHEN UPPER(vt1.lid) THEN ((((vt0.c0)AND(vt1.c0)))OR(vt1.c0)) END FROM vt0, vt1; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt1, vt0 WHERE (((0.5763311290875273 IN ()) IN (CASE WHEN 'lI#TSR8' THEN '1014265079' WHEN '' THEN NULL WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT (- (((vt1.c0) IS TRUE))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE NOCASE)>(MAX(vt0.c0))), ((vt1.lid)+(vt1.c0)) COLLATE NOCASE, (((vt1.lid)<('APhnYN1\S')) IN ()) FROM vt1, vt0 WHERE (((((-437323233) ISNULL))==(((2.6726497E8)%('2ZoV6'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0)<>(vt0.c0)))>((~ (vt1.c0)))) FROM vt1, vt0 WHERE (((CAST('-1543743551' AS NUMERIC))*((('1297330706') ISNULL)))) LIMIT 1333260677 OFFSET -1881941799; -- 0ms;
SELECT DISTINCT ((vt1.lid IN ()) IN (CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN x'5bde' THEN vt1.c0 WHEN vt1.c0 THEN x'' ELSE vt0.c1 END)) FROM vt0, vt1; -- 0ms;
SELECT ALL (+ (vt1.lid COLLATE NOCASE)), COUNT(*), 0.370070786007058 FROM vt1; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt1 NOT INDEXED, vt0 WHERE (LIKELIHOOD(DISTINCT ((((((((x'')OR(0.9805981892046217)))AND(-1216955668)))OR(x'7f35')))AND('2E''%(砦h')), 0.36934497837440317)); -- 0ms;
SELECT vt0.c0 FROM vt0, vt1 WHERE ((((x'', NULL, '*g')) NOT BETWEEN (((NOT ('ₘ[')), (((x'6cf1', 0.17194728677758275, x''))<=((NULL, x'', x'f5fe'))), ((x'e567') NOT NULL))) AND (((0xffffffff829d48e4 IN ()), CASE WHEN x'1fb5' THEN '1729123090' END, ((x'')+(NULL)))))); -- 0ms;
SELECT DISTINCT UNLIKELY(0.9508514476276924 COLLATE BINARY), ((((((vt1.lid) BETWEEN (vt0.c1) AND (vt1.c0)))OR(CAST(vt1.lid AS REAL))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN 0.7270763715374213 THEN vt1.lid WHEN vt0.c1 THEN vt1.c0 END)), (+ (-1e500)) FROM vt0, vt1 WHERE ('!nH,'); -- 0ms;
SELECT (((vt0.c0)<=(0X7814b45a)) IN (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt1.lid)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CAST(0x2c205591 AS REAL))<(json_quote(vt1.lid))) FROM vt0, vt1; -- 0ms;
SELECT CUME_DIST() OVER ( ORDER BY (x'' IN ()) DESC) FROM vt0 WHERE ((((x'a03e'))==((-396193054))) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (((('z\r') BETWEEN ('286635746') AND (vt1.lid))) ISNULL) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT CASE WHEN (vt0.c1 IN ()) THEN (vt0.c0 IN ()) WHEN ((vt1.c0)>(vt0.c1)) THEN 0.11872006392730972 WHEN vt0.c0 COLLATE RTRIM THEN CAST(vt1.lid AS REAL) END FROM vt0 LIMIT -227318060;SELECT DISTINCT (CAST(vt1.c0 AS NUMERIC) IN ()) FROM vt0, vt1 WHERE (CHAR(CASE '\rV'  WHEN '-1758604499' THEN '-268141300' ELSE -2108142832 END, ((0.7758600216050799) NOT NULL), ((x'd9da')AND(0.9966432268536292)), ('0.5763311290875273' IN (NULL)), CAST(NULL AS BLOB))) ORDER BY ((CAST('x_' AS TEXT))GLOB(HEX(DISTINCT vt1.c0)))  NULLS LAST, ((vt1.c0)<<((vt0.c1 IN ()))) ASC; -- 0ms;
SELECT ((vt1.lid)>=(vt0.c0)) COLLATE RTRIM, (((((vt0.c1, vt1.lid, vt0.c0, vt1.lid, 0.7843119110951358))<=((vt1.lid, vt0.c1, vt0.c0, vt0.c1, vt1.c0))))!=(((vt1.lid)+(vt1.c0)))), ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c1 END)|((((vt1.lid, vt0.c0, vt0.c1)) BETWEEN (('463628680', vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))))) FROM vt1, vt0 WHERE ((((((x'', x'ba73', -1206898241, 134234640, NULL)) BETWEEN ((x'ea85', x'', -1659612543, 886383007, '438382907')) AND ((0x7be4054a, '1391062622', -1.09666249E9, -369192961, x'49b4')))) NOT BETWEEN ((0X6cad47a1 IN ())) AND (CASE NULL  WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL NTILE((((vt1.c0 COLLATE NOCASE))<((((vt1.c0)IS(vt1.c0)))))) OVER (), CAST((vt0.c0 IN (vt0.c0)) AS BLOB), '-1062678246', AVG((((vt0.c0))>=((vt0.c0)))) OVER (), CAST(vt1.lid COLLATE BINARY AS BLOB) FROM vt1 WHERE (0.8177536112014872) LIMIT -1451048931 OFFSET 1068972500;SELECT ALL ((((x'7913') BETWEEN (vt0.c1) AND (vt1.lid))) IS FALSE) FROM vt0, vt1; -- 0ms;
SELECT FIRST_VALUE(((((vt0.c0)>(vt1.lid)))%((((vt0.c0))>((vt1.c0)))))) OVER () FROM vt1, vt0 WHERE (CAST(CAST(x'' AS BLOB) AS BLOB)) GROUP BY CAST('-2075636088' AS INTEGER) HAVING vt1.lid; -- 1ms;
SELECT DISTINCT ((((((((((vt1.lid)OR(vt1.lid)))OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c1)))AND((((vt1.c0)) BETWEEN ((vt0.c1)) AND ((vt1.lid))))), TRIM(DISTINCT AVG(vt1.lid), vt1.lid), LIKELIHOOD(DISTINCT ((vt0.c1)|(vt1.lid)), 0.7500627245743331) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT -6.86303237E8 COLLATE BINARY, AVG(((vt1.lid) NOT NULL)) OVER (), ((CASE vt1.c0  WHEN vt0.c1 THEN vt0.c1 END)<(((vt0.c0) ISNULL))) FROM vt0 LIMIT -783148149 OFFSET -358196654;SELECT DISTINCT vt1.lid COLLATE NOCASE FROM vt0, vt1 WHERE (((('455027322')) BETWEEN ((424208260)) AND (((((x'3b99'))>=(('j?p'))))))); -- 0ms;
SELECT DISTINCT (+ (NULLIF(DISTINCT vt1.c0, vt0.c1))) FROM vt1;SELECT DISTINCT (((((vt0.c1)>>(vt0.c0))))==((vt0.c1))) FROM vt0, vt1 WHERE ((((('1722033888')LIKE('867622639'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt1.lid THEN vt1.lid ELSE vt0.c1 END)*(vt0.c0 COLLATE BINARY)) FROM vt1;SELECT DISTINCT ((ABS(vt0.c1))>>(MAX(vt0.c1))) FROM vt0 ORDER BY NULL ASC; -- 0ms;
SELECT DISTINCT ((vt0.c1) NOT BETWEEN (((((vt1.lid)OR(vt1.lid)))AND(vt0.c0))) AND (CASE vt1.lid  WHEN vt0.c0 THEN vt1.lid ELSE vt1.c0 END)) FROM vt1;SELECT DISTINCT ((CASE NULL  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.c0 END) NOT NULL) FROM vt1 WHERE (((((0.6392799121051576)AND(CAST(NULL AS BLOB))))OR(((-42014380)==('U')))));SELECT DISTINCT ((((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c1))) BETWEEN (0.19034607545238513 COLLATE RTRIM) AND (((vt1.lid)>>(vt1.c0)))) FROM vt0, vt1 ORDER BY ((((((((((vt1.c0)==(vt0.c1)))OR(LAST_INSERT_ROWID())))AND((NOT (vt0.c1)))))OR(((vt1.lid) NOT BETWEEN (0Xffffffff849502c9) AND (vt1.lid)))))AND(((vt0.c0)-('788700966'))))  NULLS LAST LIMIT -1059466803; -- 0ms;
SELECT DISTINCT ((((((vt0.c0) NOT BETWEEN (vt1.lid) AND ('-547914551')))AND((- (vt1.c0)))))AND(CAST(x'b03d' AS BLOB))) FROM vt0 WHERE (((CASE '2145580048'  WHEN 0X3bae168d THEN -6.54804878E8 ELSE NULL END)LIKE(CAST(NULL AS BLOB))));SELECT DISTINCT (((vt1.lid)) BETWEEN ((LIKE(vt0.c0, vt1.lid))) AND ((CASE WHEN vt1.c0 THEN vt0.c1 END))), (((vt1.lid IN (vt0.c0, vt0.c1))) NOT BETWEEN (vt0.c1) AND (((vt0.c0) NOTNULL))), CAST(vt1.c0 COLLATE NOCASE AS TEXT) FROM vt1, vt0 WHERE (x'c699'); -- 0ms;
SELECT DISTINCT ABS(AVG(vt0.c0)) FROM vt1, vt0 WHERE (((((0.20774085106681017) IS FALSE)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(TOTAL(vt0.c1))))OR(GROUP_CONCAT(vt1.c0))) FROM vt0 WHERE (((((NULL) NOT BETWEEN (x'43dc') AND (0.29970295701607985))) NOTNULL));SELECT DISTINCT (((vt1.lid)OR(0.2482069642318342)) IN ()) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT(((((vt1.lid)OR(vt0.c1)))OR(vt1.lid))) FROM vt1 WHERE ((((('1275916459')OR('1187989927')))OR(0.6211792867199157)) COLLATE RTRIM COLLATE BINARY);SELECT ALL ((NULL) IS TRUE) FROM vt0, vt1 LIMIT -273109773 OFFSET 1527705529; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN vt0.c1 THEN vt1.lid ELSE vt1.lid END) ISNULL) FROM vt0, vt1 WHERE (-346914470) ORDER BY CAST((+ (vt0.c1)) AS REAL)  NULLS FIRST; -- 1ms;
SELECT ALL ((((vt0.c0)LIKE(vt1.lid)))<=(CASE WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 END)) FROM vt0, vt1; -- 0ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN 'ẓ	vi' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) NOT NULL) FROM vt1, vt0 WHERE ((+ ((0.20485131252789468 IN ())))); -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM vt1 ORDER BY ((((vt0.c1 IN (vt1.c0))))=((((vt0.c0)<=(vt0.c1)))))  NULLS FIRST, vt0.c0  NULLS LAST;SELECT ALL ((NULLIF(vt0.c0, -5.43526186E8))IS(((vt1.c0) BETWEEN (vt0.c1) AND (vt1.lid)))) FROM vt1;SELECT DISTINCT TRIM(((0.5345617714588604)IS NOT(vt1.lid))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))OR(CAST(NULL AS REAL))), CASE ((vt0.c0)=(vt1.lid))  WHEN (- (vt0.c0)) THEN '106006241' END, CAST(((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)) AS TEXT) FROM vt1;SELECT (((vt0.c0))>((vt0.c0 COLLATE NOCASE))), CAST(vt1.c0 AS REAL), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))IS(((('1865329189'))<=((vt1.lid))))) FROM vt1 INTERSECT SELECT DISTINCT x'c68aab17', ((((0Xffffffffc1830f33) NOTNULL))AND(((vt0.c1)|(vt0.c1)))), (((0.5718417951226913)) BETWEEN ((((x'') IS FALSE))) AND ((MIN(NULL)))) FROM vt0;SELECT DISTINCT (((((vt1.c0)IS(vt1.lid))))<=((vt0.c1 COLLATE BINARY))) FROM vt0, vt1 WHERE (TRIM(DISTINCT x'4e1f', x'') COLLATE NOCASE); -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c1)%(vt1.c0))) OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL SUM(((vt0.c0)GLOB(vt1.c0))) OVER () FROM vt0 NOT INDEXED LEFT OUTER JOIN vt1 ON CAST(((vt1.c0) ISNULL) AS NUMERIC) LIMIT 1347313494; -- 0ms;
SELECT ALL ((((CAST(vt0.c1 AS NUMERIC))OR(COUNT(569593426))))OR((~ (vt0.c0)))) FROM vt0, vt1 WHERE ((((0.6836026486169329, '\n) ', ''))<((x'1d3d', NULL, ''))) COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((GROUP_CONCAT(vt1.c0)) IS TRUE) FROM vt1 WHERE (',/VP.ꦗ|'); -- 0ms;
SELECT ALL SUM(((vt0.c0)AND(vt0.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((vt1.c0) ISNULL) IN ()) FROM vt1 WHERE (CAST(((0.5731746297506514)%(NULL)) AS INTEGER)); -- 0ms;
SELECT ALL COUNT(((vt1.c0) BETWEEN (x'') AND (vt1.c0))) OVER () FROM vt0;SELECT LOWER(DISTINCT ((vt1.lid)&(vt1.c0))) FROM vt0 ORDER BY CAST(x'0835' AS BLOB) DESC  NULLS FIRST;SELECT DISTINCT ((((vt0.c1) BETWEEN (vt1.c0) AND (vt1.c0))) IS FALSE) FROM vt0 WHERE ('776322734');SELECT DISTINCT CAST(CAST(vt0.c0 AS TEXT) AS BLOB), rtreenode(((vt0.c1) NOTNULL), GROUP_CONCAT(vt0.c1)), TOTAL(((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0))) COLLATE BINARY FROM vt1, vt0 WHERE ('\H혳\G6E') LIMIT -1549747085 OFFSET -1017437692; -- 0ms;
SELECT ALL ((((CASE WHEN vt1.c0 THEN 'R*Ec^I' END)OR(vt1.lid)))OR(('zඍr6?2' IN ()))) FROM vt0;SELECT DISTINCT (GROUP_CONCAT('-1055400930') IN ()) FROM vt0, vt1 LIMIT 2110055430 OFFSET 1749659025; -- 0ms;
SELECT DISTINCT NULL FROM vt0, vt1; -- 0ms;
SELECT DISTINCT SUM(((vt0.c1) IS FALSE)) FROM vt0 WHERE (((x'' COLLATE NOCASE)>((NULL IN (x''))))); -- 0ms;
SELECT ALL COUNT(((x'463a') NOT BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE BINARY) OVER (), (('1101295346') NOT BETWEEN ((+ (vt1.c0))) AND (vt0.c1)), TOTAL(((((((((vt1.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt0.c0)))OR(vt0.c0))) OVER () FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (~ (CASE 0.5050152135652443  WHEN vt0.c0 THEN vt1.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT CAST(CAST(vt0.c0 AS BLOB) AS REAL) FROM vt1;SELECT DISTINCT vt0.c1, CASE '-1078014813'  WHEN vt1.lid COLLATE BINARY THEN vt0.c0 WHEN CAST(-1.021581312E9 AS TEXT) THEN (((vt1.lid))<=(('-29933864'))) WHEN CASE vt0.c1  WHEN x'baf1' THEN vt1.lid ELSE vt0.c1 END THEN ((vt1.lid) BETWEEN (vt0.c1) AND (vt1.c0)) END, CAST(((((vt0.c1)AND(vt1.lid)))OR(vt1.c0)) AS INTEGER) FROM vt1, vt0 WHERE (((((NULL)IS(0.12059758784446928)))OR((((('0.7676000611535879')AND(x'')))AND('582317115'))))) GROUP BY CASE WHEN ((x'')OR(vt1.c0)) THEN 'b乒uⳡ{⫼' ELSE ((vt0.c0) ISNULL) END, ((x'') IS TRUE), ((((((((((vt1.lid)<<(x'')))OR(CAST(vt1.lid AS REAL))))OR(((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0)))))OR((vt1.lid IN ()))))AND((NOT (vt1.lid)))) HAVING ((vt1.c0)LIKE(vt1.c0)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT CASE ((((((((vt1.c0)OR(vt0.c0)))AND(vt1.lid)))OR(vt1.lid)))AND(vt1.c0))  WHEN GROUP_CONCAT(vt1.c0) THEN vt0.c0 END, vt1.lid, ((NULL) BETWEEN (vt1.c0 COLLATE RTRIM) AND ('')) FROM vt0;SELECT ALL (CASE WHEN NULL THEN vt0.c0 ELSE vt1.lid END IN (((vt0.c1) IS FALSE), x'49ce')), TRIM((+ (vt1.lid))), (((vt1.c0, vt1.c0 COLLATE RTRIM, 'Ui', ((vt1.lid) IS FALSE), (~ (''))))==((NULL, ((((vt0.c1)OR(vt0.c1)))OR(vt0.c0)), (NOT ('﷞8K<3Q')), CASE x''  WHEN NULL THEN vt1.c0 WHEN vt0.c1 THEN vt1.c0 WHEN x'' THEN vt1.c0 END, (vt0.c1 IN (x'1436', vt0.c0))))) FROM vt1, vt0; -- 0ms;
SELECT ((vt1.c0)%(vt1.lid COLLATE RTRIM)) FROM vt1, vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN (vt0.c1, vt0.c1))) NOT BETWEEN (((vt1.c0) BETWEEN (vt0.c1) AND (vt1.c0))) AND (TRIM(vt1.lid, vt0.c1))) FROM vt1;SELECT ALL (((CAST(vt1.lid AS NUMERIC)))<((((((((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))OR(vt1.lid)))AND(vt0.c1))))) FROM vt1;SELECT DISTINCT (('-903778721') NOTNULL), (((((('-686808635')AND(vt1.lid)))OR(vt1.lid)))<>((vt0.c0 IN ()))), UPPER(DISTINCT vt0.c1) FROM vt1 WHERE (((CASE x''  WHEN x'' THEN 0.24644751314114988 WHEN x'12b0' THEN 0.8679019571888366 WHEN 0.11872006392730972 THEN x'' END)-(NULL COLLATE NOCASE)));SELECT DISTINCT ((vt0.c0 COLLATE RTRIM)LIKE(LIKE(vt0.c0, vt0.c0))) FROM vt0 NOT INDEXED WHERE ('0.4997044095621245') ORDER BY ((((((((-6.54804878E8)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)) COLLATE NOCASE DESC  NULLS FIRST, (((+ (vt0.c0))) NOTNULL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((vt1.c0)<<((- (vt1.lid)))), (((~ (vt1.c0)))=(vt1.c0 COLLATE BINARY)), ((((('1253186980')OR(vt1.c0)))OR(vt0.c1)) IN ()) FROM vt0 WHERE (((CAST(0.19541220464048892 AS REAL))OR(x'' COLLATE NOCASE)));SELECT ALL ((NOT (vt0.c0)) IN ()), UNLIKELY(CAST(vt1.c0 AS TEXT)), ((vt1.c0)<=(((vt0.c1) IS FALSE))) FROM vt1 WHERE ((((((((((('')AND(NULL)))OR(0.0018328899015936928)))AND('2?j例4616')))AND('LL>7hu'))) BETWEEN (CASE NULL  WHEN 0.8514139338618856 THEN '208714112' END) AND ((('')<('-240574226'))))) LIMIT -74752086 OFFSET -1149997352;SELECT ALL CAST((+ (vt1.lid)) AS TEXT) FROM vt0 WHERE (DATETIME(0.1673333605288131, 'Ҹ', NULL, 'lN', x'') COLLATE NOCASE);SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0)*(vt1.c0)))) AND ((x'' COLLATE NOCASE))) FROM vt0, vt1 WHERE ((((x'') IS FALSE) IN (((('*1錬2a_l', 0.3082523669035736, NULL)) NOT BETWEEN ((827784196, 6.95972648E8, '')) AND ((-1.837656773E9, x'73b9', -1871937568)))))); -- 1ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((NULL)) AND ((x''))), CAST(GLOB(vt1.lid, '') AS TEXT), NULL FROM vt1; -- 0ms;
SELECT ALL (((vt1.c0))>(((('-1881941799')<<(vt1.c0))))), (CAST(x'9ed8' AS NUMERIC) IN ()), (((((vt0.c0))>=((vt1.c0))))IS NOT((vt0.c0 IN ()))) FROM vt0 WHERE (((CAST('EE' AS INTEGER)) NOT NULL));SELECT ALL MAX(((vt1.lid) IS FALSE)) FROM vt1 GROUP BY (((0.5127902310031512)) NOT BETWEEN ((((vt1.lid)+(vt0.c1)))) AND ((vt1.lid))), 0.9018508767826375, (((vt0.c0)) BETWEEN ((((vt0.c0)<=(vt0.c1)))) AND ((('0.5731746297506514' IN ())))) HAVING CAST((+ (vt1.c0)) AS TEXT) ORDER BY CAST((~ (vt0.c0)) AS BLOB) ASC  NULLS FIRST, IFNULL(((((vt1.c0)OR(vt0.c0)))AND(vt1.lid)), CAST(vt0.c0 AS TEXT)) ASC  NULLS FIRST;SELECT LIKE(CAST(vt1.c0 AS INTEGER), vt1.lid, 'x') FROM vt1 WHERE (((((('扐3') NOT BETWEEN ('9?') AND ('^. ')), (('y\n6D-') NOTNULL), -1.344078222E9 COLLATE RTRIM, (((0.11146546859616413)) BETWEEN ((NULL)) AND ((''))), ((7.88700966E8) BETWEEN (251475963) AND (x'3c6a'))))=(((((NULL, 0.9568655608027531, x'144034ad'))>=((0.3271348828704488, '1722033888', '-1376678023'))), CASE WHEN '-67794508' THEN 0.6460851160414856 WHEN 0.4587540761537511 THEN '' WHEN 0.13817722449000847 THEN NULL END, CAST('' AS NUMERIC), '0.8914682911175124' COLLATE BINARY, PRINTF(0xc7059db, NULL, NULL))))); -- 0ms;
SELECT DISTINCT (((- (vt0.c0))) NOT BETWEEN (((((((((vt0.c0)OR(vt0.c1)))AND(vt1.c0)))AND(vt1.lid)))AND(vt0.c1))) AND ((('1333260677')&(vt0.c0)))) FROM vt0, vt1 WHERE (((((x'68ce') NOT BETWEEN (0.17194728677758275) AND (x''))) BETWEEN ((('b9') NOT NULL)) AND (((((x'')AND(NULL)))OR(NULL))))) GROUP BY ((((((vt1.c0)AND(vt0.c1)))AND(vt0.c1))) BETWEEN (CAST(vt0.c1 AS REAL)) AND (((vt1.c0) ISNULL))); -- 0ms;
SELECT ALL ((((((((vt0.c0)AND(vt1.c0)))OR(vt1.lid)))OR(vt1.c0)))OR(x'')) COLLATE RTRIM FROM vt1;SELECT (NOT ((+ (vt1.lid)))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0)==(vt0.c0)))LIKE(vt0.c0)) FROM vt1;SELECT DISTINCT (((((- (vt1.c0)))OR((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt1.c0))))))AND(vt0.c1)), ((((((((((vt1.lid) IS TRUE))OR(TOTAL(vt0.c0))))OR(vt1.lid)))AND((NULL IN ()))))OR((- (vt0.c1)))), (vt1.c0 IN ()) FROM vt1, vt0; -- 0ms;
SELECT (((vt1.c0 IN ())) NOT BETWEEN (((vt1.lid) NOTNULL)) AND (x'' COLLATE BINARY)), TOTAL(MIN(((vt1.c0)IS NOT(vt1.c0)))), (((((vt1.c0))<=((vt0.c0))))+(CAST(vt0.c1 AS NUMERIC))), ((((((((((vt1.c0)AND(vt1.lid)))OR(vt1.c0)))AND('hYK*^},')))OR(vt0.c0))) NOT NULL), vt1.lid FROM vt0 WHERE (((((0.49773627275248444) NOT BETWEEN ('9223372036854775807') AND (0.686443856531739)))-((~ (x'b1a6')))));SELECT IFNULL(DISTINCT GROUP_CONCAT(vt1.c0), ((((vt1.lid)OR(vt1.lid)))OR(vt1.c0))), CAST(CASE vt0.c1  WHEN vt0.c0 THEN vt1.lid WHEN vt0.c0 THEN vt1.lid WHEN vt0.c1 THEN vt1.lid END AS BLOB), ((CAST('1197301566' AS NUMERIC))<('722255221')) FROM vt0 NOT INDEXED, vt1; -- 1ms;
SELECT ((CASE vt1.lid  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END) BETWEEN (((((((((vt0.c1)OR(vt1.lid)))AND(vt0.c1)))AND(vt1.lid)))OR(vt1.c0))) AND (((vt0.c0) NOTNULL))) FROM vt1;SELECT ALL NULL FROM vt0 GROUP BY ((CAST(vt0.c1 AS REAL))|(TRIM(vt0.c1))), ((((vt0.c0) NOT BETWEEN ('N') AND (vt0.c0))) NOT BETWEEN (((0.6280174162689608) NOT BETWEEN (vt0.c0) AND (vt1.c0))) AND (((vt0.c0)/(vt1.c0)))), vt1.c0, ((PRINTF(vt1.lid)) ISNULL), ((vt0.c1)|(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt0.c1))));SELECT ALL CASE (vt1.lid IN ())  WHEN LIKELY(DISTINCT vt0.c1) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) WHEN ((vt1.lid)>(vt0.c0)) THEN ((vt1.c0) NOT NULL) WHEN TRIM(vt1.lid, vt1.c0) THEN CASE WHEN '1867296998' THEN NULL END ELSE vt1.lid END FROM vt0;SELECT DISTINCT (((vt0.c0 IN (vt1.c0)))||(LIKELY(0.6994203993354621))), ((vt1.lid COLLATE RTRIM)GLOB(vt1.lid COLLATE NOCASE)), COUNT(*) COLLATE BINARY, ((((((vt0.c1) NOTNULL))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((NOT (vt0.c1)))), (((vt0.c1, vt1.c0, vt1.lid))<>((vt0.c1, vt0.c1, vt0.c1))) COLLATE RTRIM FROM vt1, vt0; -- 0ms;
SELECT DISTINCT LEAD(JULIANDAY(((((((((vt0.c1)OR(vt1.lid)))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)), (((x'ac13')) NOT BETWEEN ((vt1.c0)) AND ((vt0.c1))), ((vt0.c0)&(1350243350)), ((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)), (~ (vt1.lid))), (((((vt1.c0)||(vt1.c0))))<((CAST(vt1.lid AS NUMERIC)))), (CAST(vt1.lid AS NUMERIC) IN ())) OVER ( RANGE TOTAL_CHANGES() PRECEDING EXCLUDE NO OTHERS) FROM vt1 CROSS JOIN vt0 ON vt0.c0;SELECT vt1.lid FROM vt0 LIMIT -941980122 OFFSET 585684363;SELECT DISTINCT AVG(json_array(vt1.lid, vt1.c0)) FROM vt1, vt0 WHERE (json_array_length((((NULL, x'', NULL)) NOT BETWEEN ((0.4383236030379344, 'VCC6-*E6', x'')) AND ((0Xffffffff9fa5eab6, NULL, 0.6790419008014725))))); -- 0ms;
SELECT LIKELIHOOD(DISTINCT (vt1.lid IN ()), 0.8391982283843656), vt1.lid, ((((vt1.c0)>(vt0.c0))) BETWEEN ((vt1.c0 IN ())) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt1, vt0 WHERE (CAST(((x'')IS NOT(x'')) AS BLOB)); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ()) COLLATE RTRIM FROM vt1 WHERE (((((1.621175521E9)%(''))) NOTNULL)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt1, vt0 GROUP BY (((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((NULL))))&((~ (vt0.c1)))) HAVING CASE WHEN ((vt1.c0) NOT BETWEEN (vt1.lid) AND (785848522)) THEN (vt1.lid IN ()) END; -- 0ms;
SELECT ((((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c0))) IS FALSE), ((vt0.c0 IN ()) IN ((NOT ('oᐖm')))), COUNT(*) FROM vt1;SELECT DISTINCT UPPER(((vt1.lid)OR(vt1.lid))) FROM vt1; -- 0ms;
SELECT (((CAST(vt1.lid AS REAL)))<=((rtreenode(vt0.c1, vt0.c1)))) FROM vt1 GROUP BY ((((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid))) NOT BETWEEN (((vt0.c1)%(x'74ad'))) AND (vt1.c0)) LIMIT -326283387;SELECT DISTINCT ((SUM(vt0.c0))%(CAST(vt1.c0 AS NUMERIC))), ((LOWER(vt0.c1))-(((vt1.lid)<(vt1.c0)))), LAG(CASE (+ (vt0.c0))  WHEN ((vt0.c1) ISNULL) THEN (((vt0.c1))>=((vt0.c1))) ELSE ((vt1.c0)+(vt1.lid)) END, (((0.28104071099535244)) BETWEEN ((((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt1.lid)))OR('')))) AND ((((((((((vt1.lid)OR(NULL)))OR(vt1.lid)))OR(vt1.lid)))OR(vt1.lid))))), (((vt0.c1)) BETWEEN ((NULL COLLATE RTRIM)) AND (((((vt1.c0))>=((vt0.c0))))))) OVER () FROM vt1, vt0 WHERE ((((x'' COLLATE BINARY, ((((x'')OR(x'')))OR(0.6662258326927135)), (x'' IN (x'c84e'))))>((((((((((0Xffffffffdc57ddbd)AND('-1344078222')))AND(x'')))AND(NULL)))OR('')), (0.652726566898824 IN ()), HEX(0.9359674912780266))))); -- 1ms;
SELECT (- (vt0.c1)) FROM vt1 WHERE ((~ (CAST(NULL AS INTEGER)))) GROUP BY CAST(CASE vt1.lid  WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) HAVING CASE WHEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt0.c0))) THEN NULL ELSE (+ (vt1.lid)) END;SELECT DISTINCT CAST(0Xffffffff8d33a2a3 AS INTEGER), CAST(TOTAL(vt1.c0) AS BLOB), CAST(CAST(vt1.c0 AS TEXT) AS TEXT) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT (((vt1.lid IN ()))<=(GROUP_CONCAT(vt1.lid))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS BLOB), (CAST(vt0.c0 AS INTEGER) IN ()), vt1.lid FROM vt0 LIMIT -977055683 OFFSET -1315992374;SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)>('-1846549241')) FROM vt0, vt1 WHERE (621223264 COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (- (9.0351355E8)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1, vt0 WHERE (CAST(0.5247606246844223 COLLATE NOCASE AS REAL)) ORDER BY ((((vt0.c0)LIKE(vt0.c0)))<=(((vt0.c1)+(vt1.c0))))  NULLS LAST; -- 0ms;
SELECT (+ (vt1.c0)) FROM vt1 GROUP BY ((('-1947697352', vt1.lid, vt0.c0)) BETWEEN (((((vt1.c0))<=((vt0.c0))), PRINTF(vt1.c0, vt1.c0, vt1.lid), ((vt0.c0) BETWEEN (vt1.lid) AND (vt1.lid)))) AND (((vt1.lid IN ()), LOWER(DISTINCT vt0.c1), vt1.lid)));SELECT DISTINCT ((((TRIM(DISTINCT vt1.c0, vt0.c0))AND(COUNT(vt1.lid))))AND((vt0.c0 IN ()))), CAST(MAX(vt1.lid) AS REAL), ((NULL)<<(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0, vt1 NOT INDEXED GROUP BY x'' HAVING COUNT(vt0.c0); -- 0ms;
SELECT ((vt1.c0 COLLATE BINARY) BETWEEN (vt1.c0 COLLATE RTRIM) AND (((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c0)))) FROM vt1;SELECT DISTINCT (((json_array(vt1.lid, vt1.lid), NULLIF(vt1.lid, -1.250874811E9), vt0.c0 COLLATE BINARY))<>((MAX(vt1.c0), ((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c1)), ((vt1.lid)>>(vt0.c1))))) FROM vt1, vt0 WHERE (''); -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS INTEGER), ABS(DISTINCT x''), x''))>(((((vt0.c0, vt1.lid, vt0.c1))<((vt1.c0, vt1.c0, vt1.lid))), ((((((((vt1.lid)OR(0xffffffffc658a520)))AND(vt1.lid)))AND(vt0.c1)))AND(vt0.c1)), ((vt0.c1)||(NULL))))), '-1435201481', (NOT ((vt1.lid IN ()))) FROM vt0 WHERE ((((x'', x'', 0X40b4f289)) NOT BETWEEN ((0.39116798784756457, -645186109 COLLATE NOCASE, ('cZ!~缊83' IN (x'')))) AND (((((x'59b2'))<((NULL))), (91383877 IN ()), ((x'')AND('0.987110131474324')))))) GROUP BY ((COALESCE(vt1.lid, vt1.lid))*('1037251084' COLLATE BINARY));SELECT DISTINCT ((((((((vt0.c1)AND((~ (0.9898248627582228)))))OR(CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END)))AND((((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt1.c0))))))OR(vt1.c0)) FROM vt0, vt1 WHERE (IFNULL(DISTINCT (x'c4c1' IN ()), ((NULL)IS NOT('1726208760')))); -- 1ms;
SELECT vt0.c1 FROM vt0, vt1; -- 0ms;
SELECT CASE WHEN (+ (vt1.lid)) THEN ((vt1.c0)IS(vt0.c0)) WHEN ((vt0.c1)<=(vt1.lid)) THEN ((vt0.c0)|(vt1.lid)) WHEN (+ (vt0.c0)) THEN (((vt0.c1, vt0.c1, '腪!*OB')) NOT BETWEEN ((vt1.c0, vt0.c0, vt0.c1)) AND ((vt1.lid, vt0.c0, vt0.c1))) ELSE ((((((((vt0.c0)AND(x'')))OR(vt0.c0)))OR(vt0.c1)))OR(vt1.lid)) END FROM vt1 WHERE ((((NULL)) BETWEEN ((((NULL) NOT BETWEEN (-548791631) AND (x'ac1e')))) AND ((((0.8700706636528487)/('0.5050152135652443'))))));SELECT DISTINCT (((((vt0.c1, vt0.c0, vt1.lid))>=((vt0.c0, vt1.c0, vt0.c1)))) BETWEEN ((vt1.lid IN ())) AND ((- ('-369192961')))) FROM vt0 WHERE (((CASE WHEN 'M3J|?Xo' THEN NULL WHEN 0.815321797445123 THEN -1500461483 WHEN x'f5ad' THEN 0.19607593934522316 END)OR((((NULL)) BETWEEN ((NULL)) AND ((0.021374486005044657)))))) LIMIT 1508492937 OFFSET 1368423039;SELECT DISTINCT ((((vt1.lid)>(vt1.lid))) NOT BETWEEN ((vt1.lid IN ())) AND (CASE WHEN vt1.lid THEN vt1.lid END)) FROM vt0 GROUP BY ((TYPEOF(DISTINCT vt0.c0))-((((vt1.c0, '-1059718067', vt0.c0, vt1.c0, vt1.c0))<((vt1.c0, vt0.c1, vt0.c1, vt1.lid, vt1.c0))))) HAVING ((vt0.c0)>=(0X5e53d567)) LIMIT 1085815241 OFFSET -332219710;SELECT DISTINCT (- (vt1.lid COLLATE RTRIM)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))IS(CASE vt0.c1  WHEN vt1.lid THEN vt1.lid ELSE vt0.c0 END)) FROM vt0, vt1; -- 0ms;
SELECT ALL CAST(CAST(vt1.lid AS REAL) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT ALL AVG(((((vt0.c1)OR(vt1.c0)))AND(vt0.c1))), COUNT(*), ((+ (vt1.c0)) IN ()), TRIM((NOT (vt1.lid))), vt0.c0 FROM vt1, vt0; -- 1ms;
SELECT RANK() OVER (), CAST(((vt0.c1) IS FALSE) AS TEXT), LAG(((((vt1.c0) NOTNULL))&(((vt1.c0)<<(vt0.c1)))), (((((vt1.lid IN ()))OR(vt0.c1)))OR(((((vt1.c0)AND(vt1.c0)))AND(vt0.c1)))), ((vt1.lid)IS(vt1.lid)) COLLATE RTRIM) OVER () FROM vt1, vt0; -- 0ms;
SELECT ALL 0.6296824658505368 FROM vt1; -- 0ms;
SELECT ALL ((((vt0.c1) NOT NULL)) ISNULL), SUM(CASE -2.6413738E7  WHEN vt1.c0 THEN vt1.lid END) OVER ( ORDER BY CAST(vt1.c0 AS REAL)  NULLS FIRST), GROUP_CONCAT(((((((((vt1.c0)OR(x'')))AND(vt0.c0)))OR(vt0.c0)))AND(vt1.c0))) FROM vt1 WHERE (LIKELIHOOD(DISTINCT CASE '悢'  WHEN '-1566314831' THEN NULL ELSE x'' END, 0.6640484638361356)) ORDER BY ((json_quote(vt0.c1)) BETWEEN (CAST(vt0.c1 AS REAL)) AND (0Xffffffffe7ad34a7))  NULLS FIRST;SELECT DISTINCT ((((x'')>>(vt0.c1)))&(x'')) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((UNICODE(vt1.lid)) NOT BETWEEN (vt1.lid COLLATE BINARY) AND (vt0.c1 COLLATE RTRIM)), CAST(NULL AS NUMERIC), ((((vt0.c0) NOT BETWEEN (vt1.c0) AND (vt0.c0)))IS(x'd3e7')) FROM vt1;SELECT ALL (+ (vt1.c0)) COLLATE NOCASE FROM vt0 GROUP BY ((((vt0.c0)=(vt1.lid)))<>(x''));SELECT LOWER(((vt1.lid) BETWEEN (vt0.c0) AND (vt0.c0))) FROM vt1 WHERE (((((0.9018508767826375)/(0.6677114755241977)))<(((NULL) IS TRUE))));SELECT ALL FIRST_VALUE(vt1.lid) OVER () FROM vt0, vt1; -- 0ms;
SELECT (NOT (0.7909297950481899)) FROM vt1, vt0 WHERE ((((~ (x'')))IS((('-1308120746') NOT NULL)))); -- 0ms;
SELECT vt0.c0 FROM vt0 GROUP BY (((~ (vt0.c1))) NOT BETWEEN ((((vt1.c0)) BETWEEN ((vt1.lid)) AND ((vt1.c0)))) AND (((vt0.c0)%(vt1.lid)))), ((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(vt1.lid)))OR(vt1.c0))) NOTNULL), ('-1524081415' IN ()) COLLATE NOCASE;SELECT DISTINCT ((CASE WHEN vt0.c1 THEN 0xffffffffbd46abd6 WHEN vt1.lid THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.c0 THEN vt0.c1 ELSE vt1.c0 END) BETWEEN (((vt0.c1)AND(vt0.c0))) AND (((vt0.c1)>>(vt0.c0)))), SUM(CASE vt0.c1  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END) OVER (), ((((((vt0.c1)OR(vt0.c1)))OR(vt0.c0))) ISNULL) FROM vt0 WHERE ((0X7aae757a IN ()) COLLATE NOCASE);SELECT DISTINCT COUNT(CAST(vt1.c0 AS INTEGER)) OVER () FROM vt1 GROUP BY '', ((((((((vt1.lid)OR(vt0.c0)))AND(x'')))OR(vt0.c1)))AND(vt0.c1)) COLLATE NOCASE, ((0.49773627275248444) NOT NULL) HAVING (CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.c0 WHEN '1976891152' THEN vt0.c1 END IN (((((vt1.c0)OR(vt0.c1)))AND(vt0.c1))));SELECT ALL ((vt1.c0) NOTNULL) FROM vt1, vt0 WHERE ((+ ('-940957358')) COLLATE RTRIM) GROUP BY ((((((((((((vt0.c0)OR(((vt1.lid) ISNULL))))OR(json_quote('-2099661049'))))OR(((vt0.c0) NOT NULL))))AND(((vt0.c1)IS(vt0.c1)))))OR(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR((vt1.lid IN ()))), vt1.lid, ((vt1.c0)=((('ya') IS FALSE))); -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((LTRIM(NULL, vt1.lid))) AND ((((vt0.c1) NOTNULL)))) FROM vt1, vt0 WHERE (((((x'a0d8')%('')))>>((NOT (0.6731340686723044))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) NOTNULL), 0.20162897693724857, CAST(CASE WHEN vt0.c0 THEN vt1.c0 ELSE vt0.c0 END AS BLOB) FROM vt1, vt0 WHERE ((x'd824' IN ())); -- 0ms;
SELECT DISTINCT (((((vt0.c0)OR(x'bdc8')))AND(vt0.c1)) IN ()) FROM vt0, vt1 WHERE (UPPER(DISTINCT CASE 0Xffffffffc4191693  WHEN 0.8679019571888366 THEN x'2730883d' END)); -- 0ms;
SELECT DISTINCT ((((vt0.c1)<(vt0.c0)))!=(json_object(vt0.c1, vt1.c0))) FROM vt1, vt0 WHERE (((((-2.075636088E9) NOT BETWEEN (-1711052054) AND ('roqyYL4'))) IS FALSE)); -- 0ms;
SELECT (((((x'') BETWEEN (vt1.lid) AND (vt0.c1)), ((NULL) NOT NULL), (((vt1.lid)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))))!=((((vt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.lid)), ((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)), NULL))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0) NOTNULL)) NOT BETWEEN (x'') AND (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 ELSE vt1.lid END)), CASE WHEN '695972648' THEN (x'' IN ()) WHEN CAST(vt0.c0 AS BLOB) THEN ((vt1.c0) ISNULL) WHEN CASE vt1.c0  WHEN vt0.c1 THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.lid END THEN MAX(vt0.c1) END, COALESCE((((NULL))>=((vt0.c1))), ((((((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)))OR(vt1.c0)))OR('1014265079'))) FROM vt1 WHERE ((((((0.028493667637948916)/(206941586)), (((0.0)) NOT BETWEEN ((0.43177188418236234)) AND (('1670588372'))), ((x'4bfb')IS NOT(0.41418987827211295)), (NULL IN (0.5527675477334525)), CASE WHEN NULL THEN '-692015933' WHEN NULL THEN NULL WHEN '' THEN 0.005284055239374252 ELSE NULL END))=(((((('695972648')OR(-1703240587)))OR(NULL)), (NULL IN ()), ((x'') ISNULL), CASE -980304414  WHEN NULL THEN '-Infinity' ELSE x'9ad6' END, CAST(x'' AS TEXT)))));SELECT ALL (((((vt1.lid) ISNULL)))>=((((vt0.c0) NOTNULL)))), ((vt0.c1)|(1391062622)) COLLATE NOCASE, vt1.c0 FROM vt1, vt0 WHERE (IFNULL(UNLIKELY(DISTINCT '#z'), (((0.20734633345535392)) BETWEEN ((7.90775342E8)) AND ((x'a8c2'))))) GROUP BY (((((('1029473113')=(vt1.c0)))AND(vt1.c0)))AND(COALESCE(vt0.c0, vt0.c1))), (((vt1.c0))<=((vt0.c1))) COLLATE NOCASE, CAST(((vt1.lid)IS(vt0.c1)) AS TEXT) HAVING ((NULL)GLOB(((vt1.lid)=(vt0.c0)))) LIMIT -433266579; -- 1ms;
SELECT DISTINCT ((((('-2120745135')) NOT BETWEEN (('1014265079')) AND ((vt1.c0)))) NOT BETWEEN ((((vt0.c1, NULL, x''))<=((vt1.lid, vt0.c0, vt0.c1)))) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (CAST((((NULL, 0.4516817203413087, NULL))>=((x'', '0.9018508767826375', -1.881941799E9))) AS TEXT));SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c0)+(vt0.c1)) THEN CASE vt1.c0  WHEN x'' THEN vt1.lid ELSE vt1.c0 END ELSE vt0.c0 COLLATE RTRIM END FROM vt0, vt1 WHERE (CAST(TRIM(0.13451170125180523) AS NUMERIC)); -- 0ms;
SELECT LIKELIHOOD(DISTINCT ((NULL)%(0.5101264797635656)), 0.05123186441044225), SQLITE_COMPILEOPTION_GET(CAST(vt1.c0 AS REAL)), (((((vt1.lid) ISNULL), vt1.c0, vt0.c1 COLLATE BINARY))>=((((0.20294723918301938) NOTNULL), CAST(vt0.c1 AS NUMERIC), ((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c0))))) FROM vt0, vt1 WHERE (SQLITE_COMPILEOPTION_USED((+ (x'8cbd')))) ORDER BY (((- (vt1.lid)))>(CHAR(-47983735))) DESC  NULLS FIRST LIMIT 531519224 OFFSET 1919780697; -- 0ms;
SELECT (((~ (vt1.c0)))AND(((vt0.c0)&(vt0.c0)))) FROM vt1, vt0 ORDER BY CASE WHEN UNLIKELY(vt0.c1) THEN UNLIKELY(vt1.lid) ELSE CAST(vt1.c0 AS BLOB) END, ((((x'8c15' COLLATE RTRIM)OR((((x''))>((''))))))AND(((vt0.c0)%(vt0.c0)))) DESC  NULLS LAST, (((- (vt0.c0)))<<((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt1.lid)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((NULL)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((vt1.lid) NOT BETWEEN (vt1.lid) AND (x''))))) FROM vt0 UNION SELECT ALL TOTAL(((vt1.lid)OR(vt0.c0)) COLLATE NOCASE) OVER () FROM vt0, vt1 WHERE (((((0xffffffffa49df79a)OR(CASE '~B3(hU1'  WHEN NULL THEN '-369192961' ELSE '-2112645802' END)))AND((('') NOTNULL))));SELECT DISTINCT MAX(((((vt1.lid)OR(NULL)))OR(vt1.lid))), vt0.c1, (((((x'a8f7', '-1392562627', vt0.c1)) BETWEEN ((vt1.lid, vt0.c1, '')) AND (('1976891152', vt0.c0, vt0.c1)))) NOT BETWEEN ((+ (0xffffffffab133fa0))) AND (((vt1.c0)IS(vt1.c0)))) FROM vt1 NOT INDEXED, vt0 WHERE (x''); -- 1ms;
SELECT DISTINCT SUM(CAST(vt1.lid AS INTEGER)) OVER ( ORDER BY CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt1.lid)))AND(vt0.c1)) AS NUMERIC) ASC  NULLS FIRST), RANK() OVER (), CAST((- (vt1.lid)) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT ALL GROUP_CONCAT((- (vt0.c1))) FROM vt1, vt0; -- 1ms;
SELECT ((vt1.c0 COLLATE RTRIM)+(json_extract(vt1.c0, vt0.c1, vt1.lid, vt0.c0))) FROM vt1, vt0 WHERE ((CASE 0xffffffff999c4ff1  WHEN '0.2830868030479621' THEN 0.14519506595481035 END IN ())) GROUP BY (((((vt1.lid)) BETWEEN ((vt1.c0)) AND ((vt0.c0))))=((~ (vt1.lid)))); -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS INTEGER))IS(((vt0.c0)OR(vt1.c0)))) FROM vt1, vt0 WHERE ((- (0.7345277255079353))); -- 0ms;
SELECT DISTINCT ((UNLIKELY(vt1.lid)) NOT BETWEEN (((vt1.c0) NOT NULL)) AND (((((vt1.c0)OR(vt1.lid)))OR(vt0.c1)))) FROM vt1, vt0 GROUP BY ((((vt0.c1)AND(CASE vt0.c1  WHEN vt1.lid THEN vt0.c1 ELSE vt0.c0 END)))OR(TOTAL_CHANGES())); -- 0ms;
SELECT ALL CAST(CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 END AS NUMERIC), x'', ((vt0.c1 IN ()) IN ()) FROM vt1, vt0 WHERE (((((NULL) BETWEEN ('-26413738') AND (NULL))) BETWEEN (('' IN (x''))) AND ((('rBqWX!qg') ISNULL)))); -- 0ms;
SELECT ALL CASE WHEN COUNT(*) THEN (NOT (vt1.c0)) ELSE MAX(vt0.c0) END FROM vt0, vt1 WHERE ((((x'')) BETWEEN ((NULL)) AND (('-1216955668'))) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (+ (((((vt0.c0)OR(vt1.lid)))OR(vt1.c0)))), ((((vt0.c0)>=(vt0.c1)))%(CASE 0.6836026486169329  WHEN vt1.c0 THEN vt0.c0 END)), GROUP_CONCAT(((x'd9b3')IS NOT(vt1.c0))) OVER (), GROUP_CONCAT(((vt0.c0) IS TRUE)), SUM(vt0.c1) FROM vt0 GROUP BY (- (((vt0.c0)<=(vt0.c1))));SELECT ALL (((NOT (vt0.c0))) ISNULL) FROM vt0, vt1 LIMIT 720109534 OFFSET -2089758910; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt1.c0) BETWEEN (vt0.c1) AND (NULL)) THEN CAST(vt1.c0 AS TEXT) END, TYPEOF(vt1.lid COLLATE NOCASE), (((vt0.c0)) NOT BETWEEN ((((((vt0.c1)OR(vt1.c0)))OR(vt1.lid)))) AND ((((vt0.c1)==(vt0.c1))))) FROM vt1 WHERE ((((((((((-1.206898241E9)AND('2145580048')))AND(-1543743551)))OR(579982082)))AND(x'')) IN ())) ORDER BY json_extract(((vt0.c1)GLOB(vt0.c1)), vt0.c1 COLLATE NOCASE);SELECT DISTINCT CAST(((vt1.lid)<(vt1.c0)) AS REAL) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(HEX(DISTINCT vt1.c0) AS REAL), ((((((((((vt0.c1)OR(vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.lid))))))OR(((vt1.lid) BETWEEN (vt0.c0) AND (vt1.c0)))))AND('0v')))AND(COUNT(*))), CAST((~ (x'')) AS BLOB) FROM vt0, vt1 WHERE (CASE x''  WHEN x'45350460' THEN '-1065641024' END COLLATE BINARY); -- 0ms;
SELECT ((((vt1.lid) IS TRUE))>(UPPER(DISTINCT vt1.lid))) FROM vt0;SELECT ALL TRIM(((vt0.c0) ISNULL), CAST(0.10673863849447707 AS NUMERIC)) FROM vt0 NOT INDEXED WHERE (x'163c') GROUP BY CAST(vt0.c0 AS TEXT); -- 0ms;
SELECT CASE MIN(vt0.c0, vt1.lid)  WHEN ((((vt1.lid)AND(vt0.c0)))OR(vt1.lid)) THEN (((vt0.c0, vt0.c0, vt1.c0))<>((vt1.c0, vt0.c0, vt1.c0))) END, GROUP_CONCAT((((vt1.lid)) NOT BETWEEN ((0.7378493120309778)) AND ((vt0.c0)))), vt0.c1, CAST(TYPEOF(DISTINCT vt0.c0) AS REAL), CASE COUNT(*)  WHEN ((vt1.lid)=(vt0.c0)) THEN x'' ELSE ((vt0.c0)-(vt1.c0)) END FROM vt1, vt0; -- 0ms;
SELECT ALL (+ (((vt0.c1)*(x'')))) FROM vt1 LIMIT 1794996262 OFFSET 1934787088;SELECT AVG((vt0.c0 IN ())) OVER (), COUNT(*), (((0.5345617714588604)) BETWEEN ((((vt1.lid)-(vt1.c0)))) AND ((CASE vt1.c0  WHEN 2.37036405E8 THEN vt1.lid ELSE vt1.c0 END))) FROM vt1 WHERE (((((('-1', '-408079193', '0.8662506392878744', x'', NULL)) BETWEEN (('-790656397', 886745506, NULL, 0.5134316919693113, 'Y-')) AND ((NULL, x'5e8a', '531558668', 0.8914682911175124, x'')))) NOT BETWEEN (x'' COLLATE RTRIM) AND (CAST('476596913' AS BLOB)))) GROUP BY (((vt1.c0)) NOT BETWEEN ((((vt0.c0) BETWEEN (vt1.lid) AND (vt0.c1)))) AND ((CAST(vt0.c0 AS BLOB)))) HAVING (((vt0.c1)) BETWEEN (((((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))))) AND ((((vt0.c0)>=(vt0.c1)))));SELECT ALL CASE ((vt0.c1)/(vt1.c0))  WHEN COUNT(vt1.lid) THEN vt0.c1 ELSE vt0.c1 COLLATE BINARY END, ((((vt1.lid)OR((((vt1.lid))>=((vt0.c1))))))OR(((vt0.c0)&(vt0.c1)))), (((vt0.c0)) BETWEEN (((((vt1.lid)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0))))) AND (('468555592'))) FROM vt0, vt1; -- 1ms;
SELECT ((((CAST(vt0.c1 AS REAL))AND(((vt1.lid) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(TOTAL('0.9508514476276924'))) FROM vt0, vt1 WHERE ((((('a.f\') BETWEEN (x'1acf') AND (0.9966432268536292))) NOT NULL)); -- 0ms;
SELECT DISTINCT (((x'15fe' IN ())) NOTNULL), ((((x'')AND((vt0.c0 IN ()))))AND(vt1.lid COLLATE RTRIM)), TOTAL((((vt0.c0))>((vt1.lid)))) OVER (), ((((((((((vt0.c1)OR(vt1.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(vt0.c1))) BETWEEN (vt1.lid) AND (((((vt1.c0)AND(vt1.lid)))OR(vt0.c0)))), GROUP_CONCAT((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt1.c0)))) FROM vt1;SELECT DISTINCT vt0.c1 FROM vt1, vt0 WHERE (((((((((((('-686303237', '*o', 0.11536130621611185))>((-9.95622042E8, NULL, x''))))AND(((((0.32316265658309595)AND(0.9731713776160562)))OR('-1122475509')))))AND((('')==('1590546180')))))OR(((NULL)IS NOT(0.9642988544755828)))))AND((('-708240981')+(']2FI''z㼀Mt'))))) LIMIT 2023571655 OFFSET 122043772; -- 1ms;
SELECT ALL CAST(((vt0.c0)/(vt1.c0)) AS BLOB) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((((vt0.c0)AND('Me)')))OR(vt0.c0)) IN ()), LIKELIHOOD(DISTINCT vt1.c0 COLLATE BINARY, 0.06709085789417368), (((- (vt0.c0))) NOT BETWEEN (vt0.c0) AND ((~ (vt0.c0)))) FROM vt0;SELECT CASE WHEN ((('')) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid))) THEN CAST(vt1.lid AS INTEGER) ELSE (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt0.c0))) END FROM vt1 WHERE ((((((0.18839631711688032 IN ()))AND(CAST(903513550 AS INTEGER))))OR(CAST('606707587' AS INTEGER))));SELECT DISTINCT (UNLIKELY(vt0.c1) IN ()) FROM vt0; -- 0ms;
SELECT ALL (((0.38601918838715155)) NOT BETWEEN ((CAST(NULL AS TEXT))) AND (((((vt0.c1, 0Xffffffffa878b84c, '-1189156403')) BETWEEN ((vt1.c0, vt1.c0, vt1.c0)) AND ((vt1.lid, '-1881941799', x'')))))), ((((vt1.c0) BETWEEN (vt0.c0) AND (vt1.c0)))<=(vt1.c0 COLLATE BINARY)), CAST(((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)) AS NUMERIC), NULL, ((((((((TOTAL(vt0.c0))AND(vt0.c0)))AND((((vt1.c0, vt0.c0, vt0.c1))>((vt0.c1, vt0.c0, vt1.c0))))))OR(CASE WHEN vt0.c0 THEN vt0.c0 END)))AND(COALESCE(DISTINCT vt1.c0, vt1.lid))) FROM vt0 WHERE (((0.9975060173889797 COLLATE RTRIM)&((((x'')) NOT BETWEEN ((x'')) AND ((NULL)))))) GROUP BY CASE WHEN (vt1.lid IN (vt1.c0)) THEN (((vt0.c1)) BETWEEN ((vt1.lid)) AND ((vt1.lid))) WHEN ((vt0.c0)+(vt0.c1)) THEN (+ (vt0.c0)) WHEN vt1.c0 THEN (((vt1.lid)) BETWEEN ((vt1.lid)) AND ((vt0.c0))) ELSE vt0.c1 COLLATE BINARY END HAVING (vt1.lid IN ());SELECT ALL (- (vt1.c0 COLLATE RTRIM)) FROM vt0;SELECT (vt0.c1 COLLATE NOCASE IN ()) FROM vt0 GROUP BY x'', ((0.284549439557059) NOTNULL), CAST((vt0.c1 IN ()) AS BLOB); -- 0ms;
SELECT CASE (- (vt0.c0))  WHEN (((vt1.c0))>((vt0.c0))) THEN GROUP_CONCAT(vt0.c1) WHEN TRIM(vt0.c1, vt0.c1) THEN vt0.c0 COLLATE RTRIM WHEN ((vt1.c0) IS FALSE) THEN COALESCE(vt1.c0, vt0.c1) END, (((vt1.lid)) BETWEEN ((((((vt0.c1)OR(-1786116260)))OR(vt1.c0)))) AND ((((vt0.c0)%(vt0.c1))))), ((AVG(vt1.c0))<>(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((LIKELIHOOD(vt0.c1, 0.872168088803757)) BETWEEN (vt1.c0 COLLATE NOCASE) AND (NULL)) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE BINARY)=(CAST(vt1.c0 AS REAL))) FROM vt1, vt0 GROUP BY ((((((((vt1.lid)OR(vt1.lid)))AND(vt1.lid)))AND(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1, vt0 ORDER BY (((((vt0.c1, vt0.c1, vt0.c0, vt1.c0, vt0.c1))<=((vt1.lid, vt1.lid, vt0.c1, vt1.c0, vt0.c1))))<>(((vt1.lid)<<(vt0.c0)))) DESC, json_insert(vt1.c0, vt0.c0, vt1.c0) COLLATE NOCASE  NULLS FIRST; -- 0ms;
SELECT (NOT ((((vt0.c1, vt1.c0, vt0.c0)) BETWEEN ((vt0.c0, vt1.c0, vt0.c1)) AND ((vt0.c0, vt1.c0, vt1.c0))))), (((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) BETWEEN (vt1.c0 COLLATE NOCASE) AND ((vt1.lid IN ()))), CASE vt0.c1 COLLATE NOCASE  WHEN COALESCE(x'', vt0.c1) THEN x'afeb' ELSE ((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)) END FROM vt0, vt1 WHERE ((((+ (NULL)))<=((+ (0.8180247710557486))))); -- 0ms;
SELECT ALL vt1.c0 FROM vt0;SELECT DISTINCT ((((((vt0.c1)OR(vt0.c1)))OR(vt1.c0))) IS TRUE) FROM vt1, vt0 ORDER BY ABS(((vt0.c0) IS FALSE)), ((((((((((vt0.c0)GLOB(vt1.lid)))AND('1蔅')))OR(0.2830868030479621)))AND((+ (x'1b0e')))))AND(vt1.lid)) ASC  NULLS FIRST, ((((((((vt0.c1)AND(vt1.c0)))AND(136615464)))OR((('752932915')GLOB(vt0.c0)))))OR(((-2.6413738E7)&(vt1.c0)))); -- 0ms;
SELECT DISTINCT SUM(((vt1.lid) BETWEEN (vt0.c1) AND (''))) OVER ( ORDER BY x'7dcf' ASC  NULLS LAST, CAST(TRIM(vt1.c0, x'') AS NUMERIC)), CASE WHEN CASE WHEN vt0.c1 THEN vt1.c0 WHEN x'fad3' THEN vt1.c0 WHEN vt0.c1 THEN 'b腪' ELSE vt1.lid END THEN (((vt1.c0))>((vt1.c0))) ELSE ((((((((vt1.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))AND(vt1.c0)) END, vt1.c0 FROM vt1;SELECT DISTINCT x'', ((((((((vt0.c0 COLLATE NOCASE)AND((((vt0.c1))<((NULL))))))AND(0xfffffffff31e4e73)))AND(CAST(vt1.c0 AS NUMERIC))))OR(((vt1.c0)GLOB(vt1.c0)))), ((((((vt1.lid)OR(vt1.c0)))OR(vt1.c0))) IS FALSE), vt1.c0, ((((vt1.c0)>=(vt1.lid)))<((vt1.c0 IN ()))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT CAST(TRIM(vt1.lid, vt1.lid) AS TEXT), ((vt1.lid COLLATE NOCASE)<<(CASE WHEN vt0.c0 THEN vt0.c0 END)), (- ((vt1.c0 IN (vt1.lid)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt1.lid)))OR(vt1.c0)))%(SUM(vt0.c0))) FROM vt0, vt1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((SQLITE_VERSION())>((((vt0.c1))>=((vt0.c0))))) FROM vt0, vt1 WHERE ((('-1100034461' COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c1) NOT BETWEEN (0xffffffffb5712a45) AND (vt1.lid))) IS TRUE), UNICODE(vt1.lid COLLATE NOCASE), ((NULL)>(vt0.c0 COLLATE BINARY)) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT AVG(GROUP_CONCAT(vt1.c0)) COLLATE NOCASE FROM vt1, vt0 WHERE ('0.0' COLLATE BINARY);SELECT ALL (((vt1.c0 IN (vt0.c1)))<=(CASE WHEN x'' THEN vt0.c1 ELSE vt1.lid END)) FROM vt1, vt0; -- 0ms;
SELECT (((vt0.c0))<>((vt1.lid))) COLLATE RTRIM FROM vt1 WHERE ((((NULL IN ()))>(x'3b3f366f' COLLATE BINARY))) ORDER BY ((vt1.lid) IS FALSE) COLLATE RTRIM  NULLS LAST;SELECT DISTINCT (~ ((NOT (vt1.c0)))), PERCENT_RANK() OVER (), CASE vt1.c0  WHEN vt0.c0 THEN vt1.lid ELSE vt0.c0 END COLLATE BINARY FROM vt1 WHERE (((('-807127694' IN ()))!=((('-1504725676') NOT NULL))));SELECT DISTINCT NTILE(((vt0.c0)<>(vt0.c0)) COLLATE NOCASE) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM vt0;SELECT DISTINCT ((((MAX(vt1.lid))AND(CAST(vt0.c1 AS INTEGER))))OR((+ (vt0.c0)))) FROM vt0;SELECT ALL ((LOWER(vt1.c0)) BETWEEN (CASE WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c0 WHEN NULL THEN vt0.c0 END) AND (((vt1.c0)+(vt0.c1)))) FROM vt0, vt1 WHERE ('D䘮') LIMIT 0 OFFSET 1014265079; -- 0ms;
SELECT CASE WHEN CAST(vt0.c0 AS REAL) THEN CASE WHEN vt1.c0 THEN NULL WHEN vt0.c0 THEN '-1109130647' WHEN vt1.c0 THEN vt0.c0 END ELSE AVG('⥋]*䊭') END FROM vt0, vt1 WHERE (STRFTIME(CAST(x'' AS TEXT), x'3e86' COLLATE NOCASE, CASE -6.26747627E8  WHEN 0.8676543754546993 THEN 1.197301566E9 END)) LIMIT 250505774 OFFSET 1426759000; -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (vt0.c0) AND (vt1.lid)))||(TYPEOF(vt0.c0))), ((CASE vt0.c1  WHEN vt0.c0 THEN vt1.lid END)OR(AVG(NULL))), ((NULL)||(vt1.c0 COLLATE RTRIM)) FROM vt1, vt0 WHERE ((((+ (NULL))) NOT BETWEEN (TOTAL_CHANGES()) AND ((NULL IN ())))); -- 1ms;
SELECT ALL CASE WHEN (vt0.c1 IN ()) THEN ((vt0.c0) BETWEEN (vt1.c0) AND (NULL)) END FROM vt0 WHERE (CAST((', ''땓\r' IN (0xffffffffc2be539d)) AS INTEGER));SELECT ALL ((((vt0.c1 IN ('-1687900988', vt0.c1)), '411987392', (((vt1.lid)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))))<=((((vt1.c0)OR(vt0.c0)), ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), GROUP_CONCAT(vt0.c1)))) FROM vt1 FULL OUTER JOIN vt0 ON (NOT (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)) WHERE (CAST(0Xffffffffe68df590 AS REAL)) ORDER BY vt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(vt1.lid AS REAL))OR(CASE WHEN vt0.c1 THEN vt1.c0 END)) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((('Q[&pC', vt0.c0, vt1.lid)) NOT BETWEEN ((((((((((vt0.c1)AND(vt1.c0)))AND(x'e6bdf1f5')))OR(vt0.c0)))OR(vt0.c0)), CASE vt1.c0  WHEN vt0.c1 THEN vt0.c0 END, UPPER(DISTINCT vt1.c0))) AND ((CAST(vt1.c0 AS INTEGER), (+ (vt1.c0)), CAST('#Mk|POD᪱q' AS INTEGER)))), GROUP_CONCAT(vt1.c0 COLLATE RTRIM) COLLATE BINARY, ((NULL)<=(vt1.lid)) COLLATE BINARY FROM vt1, vt0 ORDER BY (((- (''))) BETWEEN ((vt0.c1 IN ())) AND (CAST(vt0.c0 AS NUMERIC)))  NULLS FIRST; -- 0ms;
SELECT (((vt1.lid, NULL, vt1.c0)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END, vt1.lid, ((vt1.lid) BETWEEN (vt1.c0) AND (0.7030671772363456)))) AND ((LIKELIHOOD(DISTINCT 2.072643167E9, 0.24116567188926818), ((((vt0.c0)AND(vt1.c0)))OR(vt0.c1)), (vt0.c1 IN ())))) FROM vt1, vt0 WHERE (((('sk' IN ())) NOTNULL)) GROUP BY CAST(CAST(vt0.c0 AS TEXT) AS INTEGER) HAVING ((((((((((vt0.c1)OR(vt1.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.c0))) NOT BETWEEN ((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0)))) AND (((vt0.c1)GLOB(vt0.c1)))); -- 1ms;
SELECT ((((CAST(vt1.c0 AS TEXT))AND(CAST(vt0.c0 AS INTEGER))))OR('1336068590')), json_object((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid))), CAST('535931595' AS TEXT)), SUM(CAST(vt1.c0 AS REAL)) FROM vt0;SELECT ALL (((x'', vt1.lid, vt0.c0)) BETWEEN ((((((vt1.c0)AND(vt0.c1)))AND(vt1.c0)), ('bp7芋U!' IN ()), vt0.c0)) AND ((NULL, CASE vt0.c1  WHEN NULL THEN vt1.c0 END, ((vt1.lid)!=(vt1.c0))))) FROM vt0 WHERE ((('348751440')<<((+ (NULL)))));SELECT ALL ((((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)))||(CASE WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c0 THEN vt1.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt1.c0 END)) FROM vt1;SELECT DISTINCT (NOT (((vt1.c0)!=(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT ALL ((((((((GROUP_CONCAT(vt1.c0))AND(((vt1.c0)IS NOT(vt0.c1)))))AND((- (vt1.lid)))))OR(vt1.c0 COLLATE BINARY)))OR(vt1.c0)) FROM vt1;SELECT ALL ((vt0.c0) NOT NULL) COLLATE RTRIM FROM vt1 GROUP BY ((CASE WHEN 0.9585152130686062 THEN '886745506' END)=((vt0.c1 IN ()))), CAST(vt1.lid AS NUMERIC) COLLATE BINARY, (((vt0.c1)) BETWEEN (((('')<<(0xffffffff8e79731e)))) AND (('')));SELECT DISTINCT 0.8858771343165055 FROM vt1, vt0 WHERE ((((NOT (0.490877741536074))) BETWEEN ((NULL IN ())) AND (CASE WHEN '2112118838' THEN 0.10935395045380125 END))); -- 0ms;
SELECT ALL CASE WHEN (NOT (vt0.c1)) THEN (vt0.c1 IN ()) END FROM vt1 WHERE (((('', NULL, 'sR')) BETWEEN (((((((((('-1947697352')AND('')))OR(0.6233757078140958)))AND(x'')))OR('')), CAST(NULL AS INTEGER), x'9938e1e0')) AND ((('OK' IN ()), ((((x'')AND(x'9a28cb54')))OR(0.514550998795421)), (~ (NULL)))))) ORDER BY (CAST(vt1.c0 AS REAL) IN ())  NULLS FIRST;SELECT json_valid(CASE WHEN '-1060647614' THEN vt0.c1 END) FROM vt0, vt1 LIMIT -1334894445 OFFSET 1297330706; -- 0ms;
SELECT ALL ((- (vt0.c0)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (x'') AND (vt1.lid)) FROM vt1 WHERE (CASE (('1722033888') ISNULL)  WHEN CAST(NULL AS BLOB) THEN ((702775896)-(NULL)) END) GROUP BY (((((((NULL))!=(('-1843449763'))))OR(((vt1.c0)<<(vt1.lid)))))AND(((vt0.c0)+(vt1.lid)))), (~ (vt0.c0)), ((vt0.c1) BETWEEN (((vt1.lid) ISNULL)) AND (vt1.c0)) LIMIT -1431982604;SELECT DISTINCT LTRIM(COUNT(*)), (((vt0.c1 IN ()))>=(((((vt1.lid)AND(NULL)))OR(vt0.c0)))), (((CAST(vt0.c1 AS BLOB)))<=(((((vt1.c0)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0)))))) FROM vt1 ORDER BY ((vt1.c0 COLLATE RTRIM)%((vt1.lid IN ()))), 0.7316538477544051 ASC  NULLS FIRST, ((CASE vt0.c0  WHEN vt1.lid THEN vt1.c0 END)<<(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))));SELECT 0x33b6deef, (((vt1.c0)) BETWEEN (((vt0.c0 IN (NULL)))) AND ((CAST(vt1.c0 AS TEXT)))), '.㟀' FROM vt0, vt1 WHERE ((((NULL))<((((((((((NULL)AND(x'a171')))OR(0.5081026792654788)))OR(NULL)))AND('348751440')))))); -- 0ms;
SELECT ALL (- (((vt0.c0) BETWEEN (vt1.c0) AND ('516668878')))) FROM vt1, vt0 WHERE (CASE WHEN ((x'')%('')) THEN ('' IN ('835850790')) ELSE ((NULL)>=(0.2482069642318342)) END); -- 0ms;
SELECT DISTINCT PRINTF(AVG(vt1.lid)) FROM vt0, vt1 WHERE (CAST(CAST(1.029473113E9 AS NUMERIC) AS BLOB)) GROUP BY '0!uo' HAVING NULL; -- 1ms;
SELECT DISTINCT AVG((vt1.lid IN ())) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY)>(vt1.c0 COLLATE BINARY)), COUNT((vt0.c0 IN ())) OVER (), CASE vt1.lid  WHEN ((((vt1.lid)OR(NULL)))AND(vt1.c0)) THEN ((vt0.c1) ISNULL) END FROM vt0, vt1; -- 0ms;
SELECT MAX(CASE WHEN '1223693810' THEN vt0.c0 END) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))AND(vt1.c0)))GLOB(AVG(vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((((vt1.lid)GLOB(vt1.c0))) BETWEEN (x'') AND (SUM(vt0.c1))), FIRST_VALUE(((CASE vt0.c1  WHEN '198293374' THEN vt0.c1 END) NOT NULL)) OVER (), GROUP_CONCAT(0X92e8938) FROM vt1, vt0 WHERE (((((((((((((0Xffffffffa46bb411)OR(x'')))AND(0.2830868030479621)))AND(954304832)))AND('0.12059758784446928')))OR(((0.6462071620251465) NOT BETWEEN ('') AND ('')))))OR('-626747627'))) LIMIT 894791355 OFFSET 1596250471; -- 1ms;
SELECT DISTINCT ((CAST(vt1.lid AS NUMERIC))>(GROUP_CONCAT(vt0.c0))), LAST_VALUE(((((((((((((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))AND((((vt0.c1)) NOT BETWEEN ((0.18889257503428558)) AND ((vt0.c0))))))AND(((vt0.c0)OR(vt0.c1)))))OR(((vt0.c0) NOT BETWEEN (x'd0d5') AND (vt0.c1)))))OR(((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))))OR(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)))))OR((vt0.c0 IN ())))) OVER ( ORDER BY COALESCE(vt0.c1 COLLATE NOCASE, CASE vt1.c0  WHEN vt1.lid THEN '' END), 0.11146546859616413 ASC), ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt1.c0 WHEN vt0.c1 THEN 763683531 WHEN vt1.lid THEN 0.2800016374582187 WHEN vt0.c0 THEN vt0.c1 END)GLOB(PRINTF(vt0.c0))) FROM vt0;SELECT NULL, (((- (vt1.lid)))!=(CASE vt1.lid  WHEN vt0.c0 THEN vt1.c0 WHEN vt1.lid THEN vt1.lid WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)), CAST((+ (vt0.c1)) AS BLOB) FROM vt0;SELECT ALL ((vt1.c0 COLLATE NOCASE)!=(CASE vt0.c0  WHEN vt0.c0 THEN vt1.c0 END)), (NOT (CAST(vt1.lid AS TEXT))), ((vt0.c1) IS FALSE) COLLATE NOCASE FROM vt0, vt1 WHERE (((((((NULL)AND('')))AND(1742046296))) NOT BETWEEN (0.7676000611535879) AND (IFNULL(NULL, NULL)))); -- 0ms;
SELECT ALL (((vt1.lid)=(vt0.c1)) IN ((vt1.lid IN ()))) FROM vt0, vt1 NOT INDEXED ORDER BY ((((vt0.c1) IS FALSE)) BETWEEN (((((0.2570541198745052)AND(vt0.c0)))OR(vt0.c0))) AND (NULL)) ASC; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 1ms;
SELECT x'' FROM vt1; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c0)) BETWEEN (vt0.c0 COLLATE NOCASE) AND (((vt0.c1)!=(vt0.c0)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (- (AVG(vt1.lid))) FROM vt0, vt1 WHERE ((((0xffffffff8c75ca4f) NOT BETWEEN (x'5da3') AND ('')) IN ((+ (1.35024335E9))))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(TOTAL(vt0.c0))))AND(vt1.c0)) FROM vt1;SELECT ALL ((TOTAL(vt1.lid))<<(CAST(vt0.c0 AS NUMERIC))), ((((((vt0.c0) IS FALSE))AND(vt1.c0 COLLATE RTRIM)))AND((vt0.c1 IN ()))), (((vt0.c1))<((vt0.c0))) COLLATE RTRIM FROM vt0;SELECT ((((((vt1.c0)%(vt1.c0)))AND(LIKELY(DISTINCT vt1.lid))))AND(((vt1.lid)*(vt1.c0)))) FROM vt0, vt1 WHERE (ABS(DISTINCT (('-358196654')LIKE('-1265056375')))); -- 0ms;
SELECT ALL (((vt1.c0) IS FALSE) IN ()) FROM vt0 WHERE ((((((x'ecf068b8'))!=(('1722033888'))))GLOB(((((NULL)AND('M	RA{x')))OR('0.3271348828704488'))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.lid) BETWEEN (vt1.lid) AND (vt1.c0)) AS INTEGER) FROM vt0 WHERE (((CASE NULL  WHEN 'W&vC' THEN 1101295346 END) NOT BETWEEN (CAST(-548791631 AS NUMERIC)) AND (((0.6442980154772666) NOT BETWEEN (0.5055416505166871) AND ('886745506')))));SELECT DISTINCT ((AVG(vt1.lid)) BETWEEN (((vt0.c0) NOT NULL)) AND ((vt0.c0 IN ()))) FROM vt1, vt0 WHERE (HEX('348751440')); -- 0ms;
SELECT vt0.c1, 'k3gQ2', SUM(((vt1.c0)/(vt0.c1))) OVER () FROM vt1, vt0 WHERE (0.1336945769511262) LIMIT 790775342; -- 0ms;
SELECT DISTINCT (((0.5857635378331947 IN (vt1.lid))) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt1.lid) AND (vt0.c0))) AND (LIKELIHOOD(vt1.lid, 0.708972678232433))), (((((vt0.c1)LIKE(vt1.c0))))>=((vt1.lid COLLATE NOCASE))), ((((0.937744964876309) BETWEEN (vt0.c0) AND ('{t'))) BETWEEN ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid)))) AND (((vt0.c0)OR(vt0.c1)))) FROM vt1, vt0; -- 0ms;
SELECT json_insert(((x'')AND(vt1.lid)), (+ (vt0.c0)), ((((((((((((vt0.c1)AND(vt1.lid)))OR(vt0.c0)))OR('TRUE')))AND(vt0.c1)))AND(0.4754803931448086)))OR(vt1.lid))) FROM vt1;SELECT ((('0.9299755436549875')) BETWEEN ((COUNT(*))) AND ((x''))), x'', COUNT(*) OVER () FROM vt0 WHERE ((((((NULL, '-789126080', 0.9122014918273733))>=((NULL, 'ٟ\n	V', 'ye{G5')))) NOT BETWEEN ((~ ('1355379965'))) AND ('''<'))); -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt1.lid END IN ()) FROM vt0 WHERE (ABS((('2145580048') NOT BETWEEN (2074622389) AND (x'')))) GROUP BY LIKELY(((vt1.lid) ISNULL)), ((GLOB(vt1.lid, vt1.lid))LIKE((NOT (vt0.c0)))), (((vt0.c0)) BETWEEN ((LIKELIHOOD(vt1.lid, 0.41106032318959773))) AND (((NOT (vt1.c0)))));SELECT DISTINCT (((((- (vt1.lid)))AND(vt1.lid)))OR((((vt0.c0))>=((''))))) FROM vt1 WHERE ((((((+ (x'264610e7')))OR((((1297330706)) NOT BETWEEN ((x'')) AND ((-31967905))))))AND(CAST(0.42310738957426863 AS REAL))));SELECT ALL CASE WHEN ((vt1.c0) IS TRUE) THEN (- (vt0.c1)) WHEN vt0.c0 THEN x'' WHEN CAST(NULL AS NUMERIC) THEN '/1_E,*w,f' END FROM vt0 GROUP BY 'R3ZDU ' HAVING (~ (MAX(vt0.c1))) LIMIT 788700966 OFFSET 697081369;SELECT ALL ((TRIM(DISTINCT vt1.lid, vt1.c0)) IS TRUE) FROM vt1, vt0 GROUP BY NULLIF(DISTINCT TRIM(vt1.lid), HEX(DISTINCT vt0.c1)); -- 0ms;
SELECT vt0.c1 FROM vt1, vt0 WHERE (NULLIF(x'', (('688786006')<=('x+ㆿL#pL')))) LIMIT -1540363530; -- 0ms;
SELECT DISTINCT (SUM(vt0.c1) IN ()), FIRST_VALUE((((vt0.c0)) BETWEEN (((vt1.lid IN ()))) AND ((NULL)))) OVER (), vt0.c0 FROM vt1, vt0 WHERE (((((x'') IS FALSE))AND(((NULL)LIKE('1-500000D>'))))); -- 0ms;
SELECT DISTINCT NTILE((+ ((+ (NULL))))) OVER ( ORDER BY ((((((vt0.c1)AND(vt0.c1)))OR(vt0.c0))) IS FALSE) ASC), CASE (((vt1.c0))>((vt0.c0)))  WHEN ((vt0.c0)GLOB(vt1.lid)) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt1.lid END WHEN ((vt0.c1)>>(vt0.c1)) THEN CAST(vt1.lid AS TEXT) WHEN ((((vt1.lid)OR(vt1.lid)))AND(vt0.c1)) THEN ((vt1.lid) NOT NULL) END, (- (((vt0.c0)<(x'')))) FROM vt1, vt0;SELECT DISTINCT AVG(((vt0.c1)-(vt0.c1))) OVER () FROM vt1, vt0; -- 1ms;
SELECT ALL ((((GROUP_CONCAT(vt1.c0))AND(vt1.c0 COLLATE RTRIM)))OR(vt0.c0 COLLATE RTRIM)) FROM vt1;SELECT ALL COUNT(*) OVER (), COUNT(*), ((CAST(vt1.c0 AS REAL)) NOT BETWEEN ((~ (vt1.c0))) AND (((((vt1.lid)OR(vt0.c0)))AND(vt1.c0)))) FROM vt1 WHERE (CAST(((0x4b8005e3) NOT BETWEEN ('-1458930060') AND (NULL)) AS BLOB)) ORDER BY COALESCE('cC_*w', ((vt0.c0)OR(vt0.c1)))  NULLS LAST;SELECT DISTINCT IFNULL(-2112645802, (vt1.c0 IN ())) FROM vt0; -- 0ms;
SELECT DISTINCT ((((NULL)AND(NULL)))AND(((vt0.c0)==(vt1.c0)))) FROM vt0 CROSS JOIN vt1 ON vt0.c1 WHERE (((((974824650)>=(0.07555578543380947))) NOTNULL)); -- 0ms;
SELECT ((NULL)*((- (vt1.c0)))) FROM vt1; -- 0ms;
SELECT ALL ((SUBSTR(vt1.lid, vt0.c1))-(COUNT(vt0.c0))) FROM vt0 WHERE ((((((((((((((NULL IN ()))OR((- (NULL)))))OR(((x'') IS FALSE))))AND(((2.6726497E8)<=(-1.543743551E9)))))OR(CASE NULL  WHEN 0.6118885203100051 THEN x'' WHEN -6.86303237E8 THEN 0.9269998678140013 WHEN 0.30710177878092115 THEN '' WHEN 0.8679019571888366 THEN -2093461828 WHEN x'' THEN '\nd\n' END)))AND((((''))<((0.213003330014511))))))OR(((348751440)||(0.4447902684117483)))));SELECT DISTINCT MIN(NULL) FROM vt0 ORDER BY CAST(((vt0.c1)>(vt0.c1)) AS TEXT); -- 0ms;
SELECT ALL ((((vt1.lid) BETWEEN (vt1.c0) AND (vt0.c1))) NOT BETWEEN (((vt1.lid)AND(vt1.lid))) AND (vt0.c1 COLLATE NOCASE)), (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)) IN ((((vt0.c0)) BETWEEN ((vt1.c0)) AND ((x'82ba6b1a'))))), ((vt1.lid) NOTNULL) COLLATE BINARY, (((x'2288')) NOT BETWEEN (((vt1.lid IN ()))) AND ((((vt1.c0) NOTNULL)))), load_extension(((vt0.c1) BETWEEN (vt1.lid) AND (vt0.c1))) FROM vt1, vt0 WHERE ((((('1341126880') NOT NULL)) NOT BETWEEN ((((1174532894)) BETWEEN (('515968310')) AND ((x'')))) AND ((('3liqOy') ISNULL))));SELECT DISTINCT ((((NOT (vt1.lid)), NULL, NULL))>=((CAST(vt0.c0 AS NUMERIC), ((vt0.c0)|(vt0.c1)), vt1.lid))) FROM vt0 LIMIT -1470182534;SELECT (((vt1.lid IN ())) BETWEEN ((((vt1.lid)) NOT BETWEEN ((vt1.lid)) AND ((vt0.c0)))) AND ((vt1.c0 IN ()))), SUM(json_patch(-543526186, vt1.lid)) OVER (), AVG(((vt0.c1) IS TRUE)) FILTER(WHERE ((((((((((((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))OR(vt1.lid)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.lid)))&(json_array(vt1.c0, vt1.c0)))) OVER () FROM vt0;SELECT DISTINCT ((((vt1.c0))<=((vt1.lid))) IN ()) FROM vt1 WHERE ((~ (('?M_' IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN ABS(vt1.lid) THEN (((vt1.c0, vt1.lid, vt0.c1))>=((vt0.c1, vt0.c0, vt1.c0))) WHEN ((vt0.c1)<<(x'')) THEN ((vt0.c0) NOT NULL) WHEN CAST(vt1.c0 AS BLOB) THEN SQLITE_SOURCE_ID() WHEN rtreenode(vt1.lid, vt1.lid) THEN CASE vt1.c0  WHEN vt1.lid THEN vt0.c1 ELSE vt1.lid END WHEN COUNT(vt1.lid) THEN ((vt1.c0)IS NOT(vt1.lid)) ELSE (+ (vt1.lid)) END FROM vt1, vt0; -- 0ms;
SELECT CASE WHEN (((vt1.lid))<=((0.8093492275903996))) THEN CAST(vt0.c1 AS TEXT) ELSE (('c{t') NOT BETWEEN (vt0.c1) AND (vt0.c1)) END FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN NULL THEN 0x232fd4ae WHEN '2*|n,*ᛝC' THEN '-1630586174' WHEN 0.6703831408935261 THEN '' ELSE x'' END THEN ((NULL) ISNULL) WHEN '891672784' THEN CASE x''  WHEN '^y!nmz' THEN 2.37036405E8 END WHEN CASE x''  WHEN NULL THEN '' WHEN -1e500 THEN '-9223372036854775808' WHEN NULL THEN 0.660206615689995 ELSE x'' END THEN ((((x'')OR(-233924106)))AND('%xe{')) END);SELECT DISTINCT MAX(((vt1.lid)||(vt1.lid))), CAST(((((((((vt1.c0)OR(vt0.c0)))AND(vt1.c0)))AND(vt0.c1)))AND(0Xffffffffc1cec9a1)) AS INTEGER), COUNT((~ (vt0.c1))) FILTER(WHERE (CASE vt1.c0  WHEN '1854342871' THEN vt1.c0 ELSE vt1.c0 END IN (CAST(vt0.c1 AS INTEGER)))) OVER () FROM vt0, vt1 WHERE (((CASE WHEN 8.46704086E8 THEN -1.504725676E9 ELSE 'n' END) NOTNULL)); -- 1ms;
SELECT COUNT(((((((((vt1.c0)AND(vt1.lid)))AND(0xfffffffff6c17dd8)))OR(vt1.c0)))OR(vt1.c0))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT x'' FROM vt1, vt0 WHERE ((((NOT (x'8c27'))) BETWEEN ((NULL IN ())) AND ((('-892779369')>>(NULL))))); -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE ((((((((((('1677924795') NOTNULL))OR(json_insert('1913783058', NULL, 'x|d/㨎'))))AND(x'')))AND(((((0xffffffff9d942afc)AND(x'')))OR(0.11561582891159639)))))OR(((((x'')AND(x'69ab')))AND(NULL))))); -- 0ms;
SELECT MAX(vt0.c1) FROM vt0, vt1 WHERE (CAST((('841482575')/('EE')) AS NUMERIC)) GROUP BY (((('LGPQl')GLOB(vt0.c1))) BETWEEN (((((vt0.c1)AND(0x12d3af7b)))OR(vt0.c1))) AND (((((((((vt0.c1)OR(vt0.c0)))OR(vt1.c0)))AND(vt0.c0)))OR(vt1.c0)))), JULIANDAY(vt0.c1, ((((vt1.lid)AND('_<➅b풰f(p{')))AND(vt1.lid)), ((((vt0.c0)AND(vt0.c1)))OR(vt1.c0))), (((CAST(vt0.c0 AS INTEGER)))>=((((vt0.c1)!=(vt1.lid))))); -- 0ms;
SELECT ((((vt0.c0 COLLATE BINARY)AND(COALESCE(vt1.c0, vt1.lid))))AND(CASE vt1.c0  WHEN vt0.c1 THEN vt1.lid END)) FROM vt1 WHERE (((((0.9748647513605977)AND(((-1758604499) BETWEEN (x'') AND (0.4579791748217874)))))OR(LAST_INSERT_ROWID())));SELECT DISTINCT ((TYPEOF(DISTINCT vt1.c0)) IS FALSE), 0.7326907903532168, ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 END)-(((((((((x'')AND(vt1.c0)))AND(vt0.c0)))OR(vt1.lid)))AND(0.02748901341202592)))) FROM vt1;SELECT DISTINCT (((((vt0.c0))==((vt1.c0)))) BETWEEN (TYPEOF(vt0.c1)) AND (TOTAL(-1.206898241E9))) FROM vt0 WHERE (((((((((0X7710c6cf)OR('1333260677')))AND(0.4392866377093394)))OR(0.986308418866229)))AND(NULL)) COLLATE BINARY);SELECT ALL (('')||(((vt0.c0) BETWEEN ('1231050609') AND ('-1206898241')))) FROM vt0 NATURAL JOIN vt1; -- 0ms;
SELECT ((((NULL) BETWEEN (vt1.lid) AND (vt0.c1))) BETWEEN (vt1.lid COLLATE NOCASE) AND (NULL)), ((((((vt1.lid)OR(vt1.c0)))OR(vt1.lid))) IS FALSE), ((CASE x''  WHEN '-1377667917' THEN vt1.c0 END) NOT BETWEEN (CAST(')og⩫|YS' AS REAL)) AND (CAST(vt0.c1 AS TEXT))) FROM vt0;SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) NOT NULL) FROM vt1 WHERE (NULLIF(DISTINCT '191516751', CASE WHEN 0.5422892578533647 THEN NULL WHEN -2028549919 THEN x'6eea' WHEN x'' THEN 2001351758 ELSE x'' END));SELECT TOTAL(((vt1.c0) NOT BETWEEN ('953389415') AND (vt1.c0))) OVER (), CAST(UNICODE(vt0.c1) AS TEXT), MAX(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) FROM vt1, vt0 WHERE (((((~ (0.3340209062018089))))!=(((x'' IN ()))))) ORDER BY ((((vt1.c0) IS FALSE)) BETWEEN (LIKELY('')) AND (CASE vt1.lid  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN x'' WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END)) ASC; -- 0ms;
SELECT CASE WHEN x'' THEN CAST(vt0.c0 AS NUMERIC) ELSE (((vt1.c0, vt1.lid, vt0.c1)) BETWEEN ((vt1.lid, vt1.c0, vt1.c0)) AND ((vt0.c1, vt0.c1, vt0.c1))) END, vt0.c0, ((AVG(vt0.c1)) BETWEEN (LOWER(DISTINCT vt1.c0)) AND ('267264970')) FROM vt0, vt1 WHERE (((HEX(DISTINCT NULL)) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt1.lid)))|(AVG(vt0.c0))) FROM vt1, vt0 ORDER BY vt0.c0 ASC, (((~ (vt0.c0))) BETWEEN (CASE vt0.c0  WHEN vt1.c0 THEN vt0.c1 ELSE vt0.c1 END) AND (((vt0.c0) NOT NULL))); -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt1.c0)) AS NUMERIC) FROM vt0 WHERE (((CASE x''  WHEN 'c4h2J' THEN 348751440 WHEN '2?j例4616' THEN NULL WHEN '752949064' THEN NULL END)<>((((0.7970796874703233))>=(('-358196654')))))) GROUP BY ((((vt0.c0) NOTNULL)) BETWEEN (TYPEOF(vt1.lid)) AND (vt0.c0)), ((((vt0.c0) NOT BETWEEN (0x1a2867ab) AND (vt0.c0)))<=((vt0.c0 IN ()))), (NOT (vt1.c0)) HAVING x'';SELECT DISTINCT vt1.c0 COLLATE NOCASE FROM vt0, vt1 GROUP BY x''; -- 0ms;
SELECT ALL AVG(((vt0.c0) IS FALSE)) OVER (), ((((vt1.lid) IS TRUE))LIKE(vt1.c0)), (((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt1.lid)))) NOT BETWEEN ((vt1.c0 IN ())) AND ((vt1.lid IN ()))) FROM vt1;SELECT (((vt1.c0 IN ())) BETWEEN (ABS(vt1.c0)) AND (((vt1.c0) ISNULL))), CAST('扐3' AS TEXT), ((((vt1.c0)IS NOT(vt0.c1)))<>(SUM(vt1.c0))) FROM vt1 ORDER BY UPPER(vt1.lid COLLATE BINARY) DESC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT((((vt0.c0)) BETWEEN ((NULL)) AND ((vt0.c1)))) FILTER(WHERE LOWER(DISTINCT vt1.lid COLLATE NOCASE)) OVER ( ORDER BY (x'391f' IN ())  NULLS LAST) FROM vt0 WHERE ((((('m5')<>('313903747')))||((x'' IN (0.7525106471781008, NULL)))));SELECT DISTINCT SUM(((vt0.c1)||(vt1.c0))) FROM vt0, vt1; -- 1ms;
SELECT DISTINCT (((('2015273949')AND(vt1.lid)))AND(CASE WHEN vt1.c0 THEN vt1.c0 WHEN -1.78611626E9 THEN vt0.c0 WHEN vt1.lid THEN vt1.lid END)) FROM vt1;SELECT CASE WHEN (vt0.c1 IN ()) THEN (((x'', vt0.c1, vt0.c0))==((vt1.lid, vt1.lid, vt0.c1))) END FROM vt1;SELECT NULL FROM vt0 NOT INDEXED WHERE (((0xffffffff8fd3d8d9) NOT BETWEEN (x'1752') AND (0.9831152760500281)) COLLATE NOCASE); -- 0ms;
SELECT NULLIF(DISTINCT (+ (vt1.lid)), (('FALSE')>(vt0.c0))) FROM vt0 WHERE (CASE WHEN (- (x'008d')) THEN ((x'')>(NULL)) ELSE ((x'') ISNULL) END) GROUP BY ((CASE WHEN vt0.c0 THEN vt1.lid ELSE vt0.c1 END)>((((vt1.c0))<=((vt1.c0))))) LIMIT 2089614631;SELECT ALL '7ꆜemKgyىi' FROM vt0, vt1 LIMIT 1297330706 OFFSET -326283387; -- 0ms;
SELECT ALL CAST(CAST(vt0.c1 AS REAL) AS REAL) FROM vt1;SELECT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT x'' FROM vt1; -- 0ms;
SELECT DISTINCT ((CAST(x'' AS INTEGER))/(((vt1.c0) BETWEEN (x'') AND (vt0.c0)))) FROM vt0, vt1 WHERE ((((((('2013927770')) BETWEEN ((0.697614214213203)) AND ((x'')))))<(('B3\A,>顁~*' COLLATE NOCASE)))); -- 0ms;
SELECT ALL CAST(vt0.c1 AS INTEGER) FROM vt0, vt1; -- 1ms;
SELECT AVG(NULL), TOTAL(CAST(2.6726497E8 AS BLOB)), (((vt1.lid)) NOT BETWEEN ((((vt0.c0)IS NOT(vt1.lid)))) AND ((AVG(vt0.c0)))) FROM vt1 WHERE (((CAST(x'' AS TEXT)) NOT NULL));SELECT DISTINCT CASE CASE WHEN vt0.c1 THEN vt0.c0 END  WHEN vt0.c1 THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) END FROM vt0; -- 0ms;
SELECT (((vt0.c0 IN (vt0.c1)))-(((((vt1.c0)AND('')))OR(vt0.c0)))) FROM vt1;SELECT ALL vt1.c0, (- ((((vt1.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c1))))), (((vt1.c0) BETWEEN ('1|{]Rr9賊/') AND (vt0.c1)) IN ()) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT ((((vt1.c0) BETWEEN (vt1.lid) AND (vt1.lid))) ISNULL), (((vt1.lid) NOT NULL) IN (x'', ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))), AVG((- (vt1.lid))) OVER () FROM vt1 WHERE (NULL) ORDER BY CASE CAST(vt0.c0 AS NUMERIC)  WHEN TRIM(vt1.c0) THEN vt1.c0 ELSE ((vt1.lid)<=(vt1.lid)) END ASC, ((CAST(vt1.lid AS BLOB))<>(((vt0.c1)|(vt1.c0)))) ASC, (((vt1.lid)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND (((NOT (vt0.c1)))));SELECT DISTINCT UNLIKELY(DISTINCT CAST(vt1.lid AS INTEGER)), (((vt1.lid)) BETWEEN ((vt1.c0 COLLATE BINARY)) AND (((vt1.c0 IN (vt0.c0))))), LENGTH(0.6468289103372693) FROM vt0 WHERE (UNLIKELY(DISTINCT ((x'') ISNULL)));SELECT DISTINCT (('1733823971') NOT BETWEEN (NULL) AND ((NOT (vt0.c0)))), ((((((((vt0.c0)OR((vt0.c1 IN ()))))OR(0.5718417951226913)))AND(CAST(vt1.c0 AS NUMERIC))))AND((vt0.c0 IN ()))), ((vt0.c1)GLOB((('b9')>=(vt0.c0)))), TRIM(CAST(vt0.c1 AS TEXT), MAX(x'')), ((NOT ('滲xY*J!qp')) IN (CAST(vt0.c1 AS REAL))) FROM vt0, vt1 WHERE ((((0.7262172407936834 IN (-1295290536)))>(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT COUNT((NOT (NULL))) OVER (), ((((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt0.c1)))IS NOT(COUNT(*))), CAST((~ (vt0.c0)) AS REAL) FROM vt0, vt1 LIMIT -158758785 OFFSET 272290562; -- 0ms;
SELECT DISTINCT (((TRIM(DISTINCT vt1.c0)))<((vt0.c0))), (0.5543274347229699 IN ()), COUNT(*) OVER () FROM vt1, vt0; -- 1ms;
SELECT DISTINCT AVG(CASE WHEN vt1.lid THEN 'kgv99OpP' WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END), LENGTH(COALESCE(vt0.c0, vt1.c0, vt0.c1, vt0.c1)), LEAD('w*', (((vt1.c0)) NOT BETWEEN ((((((((((vt1.c0)AND(-1074530192)))OR(vt1.lid)))OR(vt1.lid)))AND(vt1.lid)))) AND ((CAST(vt1.c0 AS REAL)))), ((((((((CAST(0.3662795362683561 AS NUMERIC))OR((((vt1.lid, vt1.lid, vt1.c0, vt1.c0, vt1.lid)) NOT BETWEEN ((vt1.lid, vt1.lid, vt1.c0, vt1.lid, vt1.c0)) AND ((vt1.c0, NULL, vt1.lid, vt1.c0, x''))))))OR((vt1.lid IN ()))))OR(vt1.lid)))OR(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt1.c0))))) OVER () FROM vt1;SELECT ALL (('-1100228852')>=((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT (((vt0.c1)<<(vt0.c0)) IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT (+ (((0.017908458424547358) IS FALSE))) FROM vt0, vt1 GROUP BY (vt0.c0 IN (((vt1.c0)LIKE(vt1.c0)))) HAVING ((COUNT(vt1.c0)) IS FALSE); -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt1 WHERE ((((((('434922078')AND(0Xffffffff8fd3d8d9)))OR('1621175521'))) BETWEEN (NULL) AND (('-208998928' IN ()))));SELECT DISTINCT NULL, ((vt0.c0) BETWEEN (x'') AND (-1333831290)), LEAD(((vt1.lid)+(vt1.c0)), (((vt0.c0 IN ()))<=(vt1.c0 COLLATE RTRIM)), vt1.c0) OVER () FROM vt0, vt1; -- 1ms;
SELECT ALL vt0.c0, (((CAST(vt1.lid AS TEXT)))<=(((((vt0.c1)) NOT BETWEEN ((vt1.lid)) AND ((vt1.c0)))))), HEX((~ (vt1.lid))) FROM vt1 WHERE (((CAST('' AS NUMERIC))OR((+ (-1835604370)))));SELECT ABS(DISTINCT (((vt0.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))), ((vt1.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)) COLLATE NOCASE, (NOT ((NOT (x'e8a8')))) FROM vt1 WHERE (x'9991') LIMIT -2087708139;SELECT vt0.c0 FROM vt1 WHERE (((('<''cR**[]p')) BETWEEN ((CAST('-741875673' AS INTEGER))) AND ((CASE WHEN 0.7473321334777474 THEN x'3547' END))));SELECT ALL SUM(((vt1.c0)>=(vt0.c0))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT COUNT((~ (vt0.c0)) COLLATE BINARY) FROM vt0 WHERE (((((('0.0', NULL, NULL, '0.4997044095621245', 'dN'))!=((NULL, '', 0.6138899350595748, NULL, x'')))) NOT NULL)); -- 0ms;
SELECT (((- (vt1.lid))) ISNULL), vt1.lid, ((((vt1.lid)AND(CASE vt0.c1  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND(((vt1.lid) NOT BETWEEN (vt1.c0) AND (NULL)))) FROM vt1, vt0 WHERE ((- (((0.24414546454446573) BETWEEN (0.9118625201614359) AND (x''))))); -- 0ms;
SELECT ((((vt1.c0)OR(vt1.c0)))AND(vt0.c0)) COLLATE RTRIM FROM vt1 WHERE ((((((NOT ('|d(_xN')))OR((((('ᐖ')AND(0.7042823714182296)))AND(x'ff35d35d')))))OR('503663551' COLLATE NOCASE)));SELECT LENGTH(x''), CAST(CAST(vt1.c0 AS INTEGER) AS INTEGER), HEX(((0.23511064459555775)>=(vt0.c1))), (((+ (vt0.c0))) IS TRUE), ((vt0.c0) BETWEEN (vt1.c0) AND (vt0.c1)) COLLATE BINARY FROM vt1, vt0; -- 0ms;
SELECT DISTINCT '1381124845' FROM vt0; -- 0ms;
SELECT ((vt0.c0) BETWEEN (vt0.c1 COLLATE NOCASE) AND (((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))AND(vt1.c0)))) FROM vt1, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE NOCASE FROM vt1 WHERE ((('-1837656773' COLLATE NOCASE) NOTNULL));SELECT DISTINCT (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.lid)))) BETWEEN (vt0.c0 COLLATE RTRIM) AND (MIN(vt1.c0))) FROM vt1 WHERE (((ABS(NULL)) BETWEEN (NULL) AND ('752949064' COLLATE RTRIM)));SELECT ALL CAST(((vt0.c1)-(vt1.lid)) AS NUMERIC), vt0.c1, ((((((((((vt1.lid)<=(vt0.c0)))OR(vt0.c0 COLLATE BINARY)))OR(CHAR('0.20162897693724857', vt1.c0, vt1.c0))))AND((((vt1.c0, vt0.c1, vt1.c0)) NOT BETWEEN ((vt0.c1, vt1.lid, vt0.c1)) AND ((vt1.c0, vt1.c0, vt1.lid))))))OR(COUNT(*))), vt1.lid, FIRST_VALUE((vt1.lid IN ()) COLLATE NOCASE) OVER ( ROWS BETWEEN CAST(CAST(vt0.c1 AS INTEGER) AS INTEGER) FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM vt1 ORDER BY CAST(HEX(vt1.lid) AS INTEGER) ASC  NULLS FIRST;SELECT ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt1.c0)))IS(((vt1.lid)-(vt1.c0)))), vt0.c0, CASE ((0x1e643446)&(vt0.c1))  WHEN NULLIF(vt0.c0, vt0.c0) THEN (NOT (vt0.c1)) END FROM vt1, vt0 WHERE ((+ (((0.06676220048492953)>=(NULL))))); -- 0ms;
SELECT (((NOT (vt0.c0)))OR((vt1.c0 IN ()))), ((((CAST(vt0.c0 AS BLOB))AND(x'6adf')))OR((((vt1.lid, vt1.lid, vt0.c1))==((vt1.c0, vt0.c1, vt0.c0))))), AVG(CASE vt1.c0  WHEN vt0.c1 THEN vt1.c0 ELSE vt1.lid END) FROM vt1, vt0 WHERE ((((~ (0.8461133928729568)))||(CASE -251619760  WHEN '0.11146546859616413' THEN '-1021581312' WHEN -1792663201 THEN 'm' WHEN 0.34746848508101635 THEN '.gZsX~2' END))) ORDER BY ((((('')!=(vt0.c1))))>((vt1.lid)))  NULLS FIRST, ((((NULL)OR(((vt0.c0)IS(NULL)))))OR((+ (vt1.c0)))) ASC LIMIT 136882196; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c1)))OR(vt1.lid))) NOT BETWEEN (CASE WHEN vt1.c0 THEN vt1.lid ELSE vt0.c0 END) AND (((vt1.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (CASE WHEN vt1.lid THEN vt0.c1 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN '' ELSE vt1.lid END IN (CAST(vt0.c0 AS REAL), CAST(vt1.lid AS REAL))) FROM vt1;SELECT DISTINCT CASE WHEN vt0.c0 COLLATE RTRIM THEN AVG(vt1.c0) ELSE vt0.c1 COLLATE NOCASE END FROM vt0 ORDER BY ((UPPER(vt0.c0))<>((((vt1.lid)) BETWEEN ((0.7900876057188607)) AND ((vt0.c0))))) DESC, NULL ASC, (((vt1.c0 IN ()))||(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c0))));SELECT DISTINCT 0.7152488743285155 FROM vt0, vt1 LIMIT 1729123090 OFFSET -2130737325; -- 0ms;
SELECT ((((vt0.c1)|(vt0.c1)))|(((vt0.c1) NOT NULL))) FROM vt1 GROUP BY vt1.c0 ORDER BY ((vt1.lid COLLATE RTRIM)>((('s5Cx#GaO')/(vt0.c1))))  NULLS LAST, (((vt0.c0)) NOT BETWEEN ((CAST(vt1.lid AS NUMERIC))) AND ((((((vt1.c0)AND(vt1.lid)))OR(vt0.c1)))));SELECT DISTINCT '952420286' FROM vt0, vt1 WHERE (CAST('''K' AS BLOB) COLLATE RTRIM COLLATE NOCASE) GROUP BY ((((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)AND(TYPEOF(vt1.c0))))OR(((vt0.c1)>(vt0.c0)))); -- 0ms;
SELECT (ABS(vt0.c0) IN ()), (((vt1.c0)) NOT BETWEEN ((((vt1.c0) IS TRUE))) AND ((CASE WHEN vt1.c0 THEN vt1.lid END))), ((((vt0.c0)||(vt0.c1)))||(vt1.lid COLLATE BINARY)) FROM vt1, vt0 WHERE (json_extract(((0.5736935807788583)>>(NULL)), ((x'196e')+('\y᪱(KK')))); -- 0ms;
SELECT DISTINCT ((vt0.c1) NOTNULL) COLLATE NOCASE COLLATE BINARY FROM vt1, vt0 WHERE (CAST(8.46704086E8 AS NUMERIC) COLLATE RTRIM) GROUP BY CAST(vt1.lid COLLATE BINARY AS BLOB), CASE WHEN (((vt0.c1, vt1.c0, vt1.lid)) BETWEEN ((vt1.lid, vt0.c1, vt1.lid)) AND ((vt1.c0, vt1.lid, vt1.c0))) THEN vt1.lid WHEN 0.4033257871392325 THEN CAST(vt0.c0 AS INTEGER) WHEN ((vt0.c0) ISNULL) THEN CAST(vt0.c1 AS INTEGER) END, SUBSTR(((((vt0.c1)OR(vt0.c1)))AND(vt1.lid)), LIKELY(vt0.c0)), ((((vt1.lid)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) IN ()), ((vt0.c1 COLLATE NOCASE)AND(CASE vt0.c1  WHEN vt1.lid THEN vt0.c1 ELSE vt1.lid END)); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c1 THEN vt0.c1 END COLLATE RTRIM, ((((vt0.c1) BETWEEN (vt0.c0) AND (vt1.c0))) NOT BETWEEN (vt0.c0 COLLATE BINARY) AND ((vt0.c1 IN ()))), ((((NULL)<=(vt1.lid)))<=(CASE vt0.c0  WHEN vt1.c0 THEN vt0.c0 END)) FROM vt0;SELECT DISTINCT (((vt1.c0)) BETWEEN ((0.29970295701607985)) AND ((MIN(vt1.c0)))) FROM vt0 WHERE (((TYPEOF(DISTINCT '-1838828704'))AND(((0.8928915029824778)GLOB(0.8751099827263387)))));SELECT CASE ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN load_extension(vt1.lid, vt0.c1) THEN vt0.c0 WHEN (+ (vt1.c0)) THEN 0Xffffffffc5a45de9 WHEN LIKELIHOOD(vt0.c1, 0.5512800761794626) THEN CASE WHEN vt0.c1 THEN vt0.c0 END END FROM vt0 WHERE (x'1f6f0716');SELECT DISTINCT vt0.c1 COLLATE RTRIM FROM vt0, vt1; -- 0ms;
SELECT vt1.lid FROM vt0;SELECT ALL ((((((vt1.lid)>>(vt1.c0)))AND(((vt1.lid)==(vt0.c0)))))OR(vt0.c0 COLLATE BINARY)), SUM(((((vt0.c0)AND(vt0.c0)))OR(vt1.lid))) OVER ( PARTITION BY (('0.0') NOT NULL), CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt1.lid WHEN vt1.c0 THEN vt0.c0 WHEN vt1.c0 THEN -1.437012228E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt1.lid ELSE vt1.c0 END AS TEXT), (+ ((- (vt0.c1)))), ((((UNLIKELY(vt1.c0))AND((((vt0.c1))=((vt1.c0))))))AND(1.355379965E9 COLLATE BINARY))), FIRST_VALUE((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1)))) NOT BETWEEN (((vt0.c0)>>(vt0.c1))) AND ((((vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, 0.025365355216043994)) AND ((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)))))) OVER () FROM vt0;SELECT ALL (((CASE WHEN '?锰Sg' THEN vt0.c1 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt0.c1 ELSE vt0.c0 END, (((vt0.c0))==((vt1.lid))), ((((((((vt1.c0)OR(vt0.c0)))AND(vt0.c1)))AND(vt1.lid)))AND(vt1.lid))))<=((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt1.c0)), ((((((((vt1.lid)AND(vt0.c1)))AND(vt0.c0)))AND(vt1.lid)))AND(0xffffffffa6a6ec09)), ((vt1.c0)/(vt1.c0))))) FROM vt1;SELECT CAST((((vt1.c0))<>((vt1.lid))) AS NUMERIC), (((((x'')) BETWEEN ((vt1.c0)) AND ((vt0.c1))))&((vt0.c0 IN (vt1.c0, vt0.c0)))), (vt1.c0 IN ()) COLLATE NOCASE FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT vt1.c0))AND(vt0.c1)) FROM vt0 WHERE (CAST(((((NULL)AND('h!s4')))AND(0.42845461330992063)) AS NUMERIC));SELECT DISTINCT ((CASE WHEN vt1.lid THEN vt0.c1 END) NOTNULL), RANK() OVER (), CASE WHEN vt1.lid THEN vt0.c0 ELSE vt1.c0 END COLLATE BINARY, (((vt0.c1) BETWEEN (vt1.lid) AND (vt1.c0)) IN ()), (((vt0.c0)) BETWEEN ((LIKELY(DISTINCT vt1.lid))) AND ((x''))) FROM vt1, vt0 GROUP BY CAST(((((0.1352581604710813)OR(vt1.lid)))OR(vt1.c0)) AS TEXT) HAVING ((RTRIM(x'ddf8')) NOT BETWEEN (CASE vt1.c0  WHEN vt0.c0 THEN vt1.c0 ELSE vt1.lid END) AND (((((((((vt0.c0)OR(vt0.c1)))AND(vt1.lid)))OR(vt0.c0)))AND(vt0.c1)))) ORDER BY CASE ((vt0.c0)||(vt0.c0))  WHEN x'' COLLATE NOCASE THEN vt1.c0 WHEN (('?O⛠q')|(vt0.c0)) THEN vt1.lid WHEN ((vt0.c1)-(vt0.c0)) THEN ((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt1.c0)))AND(vt1.lid)) ELSE vt1.lid END DESC, CAST(HEX(vt0.c1) AS BLOB) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((((vt1.c0)GLOB(vt1.c0))) NOT BETWEEN (LIKELY(DISTINCT vt0.c1)) AND (vt0.c1 COLLATE BINARY)) FROM vt1;SELECT ALL 0.9018508767826375 FROM vt0 ORDER BY (((~ (vt1.lid)))|(((vt1.lid) BETWEEN (vt0.c1) AND (vt1.lid)))) DESC  NULLS LAST;SELECT ALL ((((((((CASE vt1.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt1.c0 END)OR(((vt1.c0) NOT NULL))))AND(SQLITE_VERSION())))OR(vt0.c1)))AND(((vt0.c0)<=(vt1.c0)))) FROM vt1, vt0 WHERE (((((('-1119596025')) BETWEEN ((NULL)) AND (('-1557713913')))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((vt1.lid)<<(vt0.c0)) COLLATE RTRIM FROM vt0 WHERE ((((~ ('579982082')))GLOB(((0.5050152135652443)<>(NULL))))) LIMIT 1108874212;SELECT COUNT(*), -1.758604499E9, ((((((vt1.c0)GLOB(vt1.c0)))AND(vt0.c1)))AND(((vt0.c1)LIKE(NULL)))) FROM vt0 WHERE (((('1318848832' COLLATE BINARY))>=(((('-1881941799') NOT NULL)))));SELECT DISTINCT ('1172302660' IN ()), CASE CASE WHEN vt0.c1 THEN vt1.c0 ELSE vt0.c0 END  WHEN ((vt1.lid)AND(vt0.c0)) THEN ((vt0.c1)+(vt1.lid)) ELSE CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END END, ((((CAST(vt0.c0 AS INTEGER))OR(((vt1.c0)<<(vt0.c1)))))OR(CAST(vt0.c1 AS BLOB))) FROM vt0;SELECT (vt0.c0 IN ()) COLLATE RTRIM, 0.9508514476276924, 0x4920838e FROM vt0, vt1; -- 0ms;
SELECT vt1.lid FROM vt1, vt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN vt1.lid THEN vt1.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt0.c0 WHEN vt1.lid THEN vt1.lid WHEN vt1.lid THEN vt1.lid END) BETWEEN ((vt0.c0 IN (vt0.c0))) AND (((vt0.c1)!=(vt1.lid)))), MAX((vt1.lid IN ())), MIN(CASE WHEN vt1.lid THEN vt0.c0 END) FROM vt0 CROSS JOIN vt1 ON NULL; -- 1ms;
SELECT (((vt1.c0, vt1.lid, vt1.lid)) NOT BETWEEN (((vt0.c1 IN ()), ((((vt1.lid)OR(vt0.c0)))AND(vt0.c0)), ((((((((vt1.lid)OR(vt0.c0)))OR(vt0.c1)))AND(vt1.lid)))AND(vt0.c1)))) AND ((MAX(vt0.c0), ((vt0.c1)||(vt1.lid)), ((0x1e5145d1) NOTNULL)))), (vt0.c0 IN (((vt1.lid) IS TRUE), (vt0.c1 IN ()))), (+ (vt0.c1)) COLLATE RTRIM FROM vt1 WHERE (((((('1729609076')AND(-626747627)))OR(0.6895989225321391)) IN (COALESCE(DISTINCT '-369192961', '788700966')))) GROUP BY (((((((((NOT (vt0.c1)))AND(((((vt1.c0)OR(vt1.lid)))OR(vt0.c0)))))AND(CASE vt1.lid  WHEN vt0.c1 THEN vt0.c1 WHEN vt1.c0 THEN vt0.c1 WHEN vt1.c0 THEN vt1.lid WHEN '-1947697352' THEN vt1.lid WHEN vt0.c0 THEN 'I₎E' ELSE vt1.lid END)))OR(vt1.lid)))AND(((vt1.lid)LIKE(vt1.c0)))) HAVING ((vt0.c1)>((NOT (vt0.c1)))) ORDER BY (~ (0.04042783075974332))  NULLS LAST;SELECT DISTINCT (((((~ (vt0.c1)))AND(((vt1.lid) NOT BETWEEN (vt1.c0) AND (vt0.c0)))))AND((+ ('1297330706')))) FROM vt0, vt1; -- 0ms;
SELECT DISTINCT (((- (vt1.c0))) NOTNULL) FROM vt0, vt1 WHERE ((((NULL, 'U', x'4df2')) NOT BETWEEN ((((((0.27854432674355256)OR(x'a38d')))OR('')), NULL COLLATE NOCASE, ((0.13148385378822525)||(0X75d4f710)))) AND (((+ ('-2063692234')), ((((((((((((x'')AND(-354977274)))OR(NULL)))OR('Wp')))AND(0.6983287888223877)))OR(NULL)))AND('-1862996313')), CAST(-1387583616 AS TEXT))))); -- 0ms;
SELECT ALL (((((vt1.c0, vt0.c1, vt0.c1))<((vt0.c1, vt1.lid, vt0.c0)))) NOT BETWEEN ((((vt1.lid, vt1.c0, vt0.c0))<=((x'', x'', vt1.lid)))) AND ((- (vt0.c0)))), RANK() OVER (), LIKELIHOOD(vt0.c1 COLLATE NOCASE, 0.9681121810617056) FROM vt1;SELECT DISTINCT ((CASE WHEN vt1.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt1.lid THEN vt0.c1 ELSE vt0.c0 END)<<(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (((('0f,')) BETWEEN ((((0.9068805696850213) BETWEEN (-1.074530192E9) AND ('')))) AND ((CASE '0.13148385378822525'  WHEN x'' THEN NULL END))));SELECT ALL ((CASE vt0.c1  WHEN vt1.c0 THEN vt1.c0 END)&(((vt0.c1)-('-1539483025')))) FROM vt0;SELECT DISTINCT CASE WHEN CAST(vt1.c0 AS NUMERIC) THEN ('0.9018508767826375' IN (vt1.lid, 0x10b53682)) ELSE LOWER(DISTINCT vt1.c0) END, json_object(((((vt1.lid)OR(x'')))OR(vt0.c0)), (((vt0.c0, vt1.lid, vt1.c0))<((-1.315992374E9, vt0.c0, '-1096662490')))), (((vt0.c1)) BETWEEN ((((((((((vt0.c1)AND(x'')))AND(vt0.c0)))AND(vt1.c0)))OR(vt0.c1)))) AND ((((vt1.c0) IS TRUE)))) FROM vt1;SELECT ALL (((((NOT (0xffffffffcd729420)))AND((NOT (vt0.c0)))))OR((~ (vt0.c1)))) FROM vt1 GROUP BY CASE WHEN (- (vt1.c0)) THEN (- (vt0.c0)) ELSE (NOT (vt0.c1)) END HAVING CASE WHEN MIN(vt1.c0) THEN ((((vt1.c0)OR(vt0.c1)))AND(vt0.c1)) END;SELECT ALL AVG(SUM(MAX(vt0.c0))) FROM vt0, vt1 WHERE (((((1621175521)<=(''))) NOT NULL));SELECT DISTINCT ((((((vt1.lid)IS NOT(vt0.c0)))AND(CASE vt0.c1  WHEN vt0.c1 THEN vt1.lid ELSE vt0.c1 END)))OR((vt0.c0 IN ()))) FROM vt1 WHERE (((x'')-(TYPEOF(DISTINCT NULL))));SELECT DISTINCT (((+ (vt1.c0)))|(((vt1.c0)<(vt0.c0)))) FROM vt0, vt1 WHERE ((((NULL)) BETWEEN (((('Eᝈ0r7')IS(x'71cc')))) AND ((((((x'61e2')AND('')))AND(0.7644806877262535)))))); -- 0ms;
SELECT ALL 0.38175809587272713 FROM vt0, vt1 GROUP BY NULLIF(vt1.c0, NULL) COLLATE BINARY; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT vt0.c0))LIKE((vt1.c0 IN ()))) FROM vt0 ORDER BY ((vt1.lid)>(((vt1.lid) NOT BETWEEN (vt0.c0) AND (vt0.c0))))  NULLS FIRST, STRFTIME((vt1.lid IN (vt1.c0)), INSTR(vt0.c1, vt1.c0), ((0.11146546859616413) IS FALSE)) DESC  NULLS FIRST LIMIT -10017377 OFFSET -795679441;SELECT DISTINCT vt1.lid, FIRST_VALUE(COALESCE(DISTINCT (vt0.c1 IN ()), (~ (vt0.c1)))) OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS), (((((((vt0.c0)OR(vt1.lid)))OR(vt0.c0))))>=(((vt0.c0 IN ())))) FROM vt0 WHERE (CAST(0.799353545001889 AS BLOB) COLLATE NOCASE);SELECT DISTINCT SUM(CASE vt0.c0  WHEN '-995622042' THEN vt1.lid WHEN vt0.c0 THEN ' ' WHEN vt1.c0 THEN vt0.c0 WHEN x'' THEN vt1.c0 WHEN vt0.c0 THEN vt0.c0 ELSE 0.8423686272868662 END) OVER () FROM vt0, vt1 WHERE ((+ ((x'e7f1' IN ())))); -- 0ms;
SELECT DISTINCT ((SUM(vt1.lid)) IS TRUE), (('95236749') NOT BETWEEN ((('134186906')*(vt1.lid))) AND (CASE 0.7270763715374213  WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt1.c0 THEN vt1.lid END)), ((vt0.c0)IS NOT(vt0.c0 COLLATE RTRIM)) FROM vt0;SELECT DISTINCT '0.6386301452790586' FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1)||(vt1.c0)) AS BLOB) FROM vt0, vt1 WHERE (((SUBSTR('', NULL)) NOT NULL)); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT vt1.c0 COLLATE NOCASE) FROM vt1, vt0 WHERE ((((('-1936498908') NOT BETWEEN ('1050170175') AND (x''))) BETWEEN (HEX(0.14030515483853867)) AND (CASE WHEN x'' THEN NULL END))); -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(vt1.lid))OR(COUNT(vt1.lid))))AND(MAX(vt1.c0))) FROM vt0 WHERE ('1333260677');SELECT DISTINCT CASE ((vt1.c0)/(vt1.c0))  WHEN ((vt1.lid) BETWEEN (vt0.c1) AND (vt0.c1)) THEN ((vt1.lid) NOTNULL) ELSE ((((((((vt0.c1)AND(vt0.c0)))AND(vt1.c0)))OR(vt1.c0)))OR(vt0.c0)) END, ((((((vt0.c0) IS FALSE))AND(TYPEOF(vt1.c0))))AND(((((vt1.c0)OR(vt0.c1)))OR(vt1.c0)))), CAST(x'' AS TEXT) FROM vt1 WHERE ((((((((((NULL)OR(0.501958682793115)))AND(x'')))OR(NULL)))AND(x'57237825')) IN ()));SELECT (((vt1.lid IN (vt0.c1))) NOT BETWEEN (((vt1.c0)-(vt0.c0))) AND (((vt1.c0) BETWEEN (vt0.c0) AND (vt0.c1)))), (((NOT (vt1.c0))) IS TRUE), vt1.lid FROM vt1 ORDER BY ((((vt0.c0))<((vt1.c0))) IN (vt1.lid))  NULLS LAST;SELECT DISTINCT (((((((vt0.c0))>(('0.9732342402481488'))))AND(vt0.c1)))OR(((((((((vt1.c0)OR(vt1.c0)))OR(vt1.lid)))AND(vt0.c0)))OR(vt1.c0)))), COUNT(*) FILTER(WHERE vt0.c1) OVER ( ORDER BY MAX(((((vt0.c1)OR(vt0.c1)))AND(vt1.lid)), json_insert('-1786116260', vt1.lid, vt1.c0))  NULLS LAST, SQLITE_VERSION() ASC), CASE vt1.c0  WHEN vt0.c1 THEN 0.7216524096261738 END COLLATE BINARY, (((vt1.c0, vt0.c0, vt1.lid)) BETWEEN (((NOT (vt0.c1)), vt1.lid, 'Z\r谅9')) AND ((((((vt1.c0)AND(vt0.c0)))AND(vt1.c0)), ((vt0.c1)IS(vt1.c0)), COUNT(*)))), SUM(((((vt1.lid)OR(vt0.c1)))OR(vt0.c1))) OVER () FROM vt1;SELECT DISTINCT (vt0.c1 COLLATE BINARY IN (UNLIKELY(vt1.lid))) FROM vt1;SELECT DISTINCT CAST(((vt1.lid) NOT BETWEEN (vt1.lid) AND ('1197301566')) AS BLOB) FROM vt1, vt0 WHERE (((0.6979890063552656 COLLATE BINARY)AND((('-1786116260')|(''))))); -- 0ms;
SELECT ALL CAST(vt0.c0 AS INTEGER) FROM vt0 WHERE ('') ORDER BY ((((vt1.c0 COLLATE RTRIM)OR(((vt0.c1) NOTNULL))))AND(((vt1.c0) NOT BETWEEN (vt1.lid) AND (vt0.c1))))  NULLS LAST, vt1.c0;SELECT ALL FIRST_VALUE(((((vt0.c0)AND(vt0.c0)))||(CAST(vt0.c0 AS BLOB)))) OVER () FROM vt0; -- 0ms;
SELECT ((((vt1.lid)!=(vt0.c0)))IS NOT(((vt0.c0) NOT BETWEEN (vt1.lid) AND (vt0.c0)))) FROM vt1, vt0; -- 0ms;
SELECT ALL CAST(((vt1.c0) BETWEEN (vt1.c0) AND (vt0.c1)) AS BLOB), ((((- (vt1.c0)), (~ (vt1.c0)), CASE WHEN vt0.c1 THEN '' ELSE vt1.c0 END))==((((vt0.c0) IS TRUE), x'' COLLATE BINARY, ((vt0.c1) IS FALSE)))), (((vt1.lid)-(vt0.c1)) IN (vt1.c0 COLLATE RTRIM, ((vt0.c1)-(NULL)))) FROM vt0 WHERE (((((x'0584')/('1226867598'))) IS FALSE)) LIMIT 392335556;SELECT DISTINCT vt1.c0, ((((vt1.c0)+(vt1.lid))) NOT BETWEEN (load_extension(vt0.c1, 'zͦ?10/')) AND ((NULL IN (vt1.c0)))), (+ (((((((((vt1.c0)OR(vt1.lid)))AND(vt0.c0)))AND(vt0.c0)))OR(vt1.lid)))) FROM vt0, vt1;SELECT ALL vt1.c0 FROM vt1, vt0 LIMIT -1666286553; -- 0ms;
SELECT ALL (((vt0.c1, vt1.lid, vt0.c0)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT), ((vt1.lid) BETWEEN (vt1.lid) AND (vt0.c1)), (((vt0.c1))<>((vt0.c1))))) AND ((MAX(vt1.lid), ((vt0.c0) ISNULL), ((0x41a46ef2)<(vt0.c0))))) FROM vt0, vt1; -- 0ms;
