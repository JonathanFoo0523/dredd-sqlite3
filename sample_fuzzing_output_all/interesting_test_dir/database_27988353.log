-- Time: 2024/06/07 06:34:36
-- Database: database53
-- Database version: 3.40.0
-- seed value: 27988353
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, +c3 INTEGER , +c4 TEXT ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX; -- 0ms;
DELETE FROM vt1; -- 0ms;
UPDATE OR ABORT vt1 SET c0=x'' WHERE (NOT ((vt1.c0 IN (vt1.c0)))); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 931786427); -- 0ms;
INSERT OR IGNORE INTO rt0(c3) VALUES (x'c9f2'); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c3, c1) VALUES (NULL, '0,径q', x''); -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(NULL, 'Ix-鸡') WHERE CASE WHEN (+ (rt0.c0)) THEN CAST(rt0.c2 AS NUMERIC) END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4) VALUES (-3.45465311E8, x''), (0.67259755179986, 'Ix-鸡'), ('0.67259755179986', NULL); -- 0ms;
PRAGMA temp.cache_size; -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.18437358096798284), (NULL), (0xffffffffef135f84); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE vt1 SET c0=-3.45465311E8; -- 0ms;
REINDEX; -- 0ms;
UPDATE vt1 SET c0=0.9550230103219836; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO vt1 VALUES (0x4b5af4e2); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=('0,径Q') WHERE ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))>>((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))); -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
VACUUM; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES ('0.67259755179986'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0, prefix=988, tokenize=unicode61); -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
REINDEX NOCASE; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '9751'); -- 0ms;
INSERT INTO vt1(vt1) VALUES('automerge=6'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '22069'); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
REINDEX  rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
COMMIT; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=x''; -- 0ms;
DROP TABLE vt0; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 11); -- 0ms;
UPDATE OR ABORT vt1 SET c0=x''; -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA optimize; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((x'648e')|(0.8949881925554763)), ((0.18437358096798284)OR(x'')), ((x'') BETWEEN (0.18437358096798284) AND (0xffffffff95fa10bb))))>=((((((x'6e82')OR('t쓫')))AND('1773175403')), ('358275235' IN ()), ((0.008433021863602064) NOTNULL)))); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 702308188); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 218070067); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c3) VALUES (1.773175403E9, NULL, 'zJ抗]'), (-920412935, x'', 0.49600887847559993), ('-345465311', 0.34972453588882335, x''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0.0235908906297575), (0.4502822732337922), ('-2038669530'); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((CASE WHEN 0.30365071135891397 THEN rt0.c2 ELSE rt0.c1 END)GLOB(((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))), (CASE rt0.c1  WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN '-920412935' THEN rt0.c0 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN NULL WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END IN ()), CASE WHEN NULL COLLATE NOCASE THEN CAST(rt0.c1 AS TEXT) WHEN NULL THEN CHANGES() WHEN json_array(rt0.c1, rt0.c0) THEN ((rt0.c0)||(rt0.c4)) ELSE CAST(rt0.c0 AS TEXT) END FROM vt1 ORDER BY (((rt0.c0)OR(rt0.c1)) IN ()) LIMIT 1264252130 OFFSET -858758505;SELECT ALL 0.547734281194765 FROM rt0 WHERE (0.5672381279269902); -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((NOT ((0.24991921860711763 IN ())))); -- 0ms;
SELECT DISTINCT ((rt0.c0)GLOB(rt0.c4)) COLLATE RTRIM FROM rt0 WHERE ((UNLIKELY('1396637446') IN ())) ORDER BY (~ (rt0.c0 COLLATE RTRIM)) DESC  NULLS FIRST; -- 0ms;
SELECT ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c2 WHEN x'c1ed' THEN rt0.c3 ELSE rt0.c3 END)>=((((rt0.c1, '-696374869', rt0.c4))>((rt0.c4, rt0.c3, vt1.c0))))) FROM vt1, rt0 WHERE ((((0X69b0826b)) BETWEEN ((((0xffffffff8ef9c4eb)AND(NULL)))) AND ((((x'7dc9') ISNULL))))) GROUP BY 0.13514891133776785; -- 0ms;
SELECT CAST(((rt0.c2) IS TRUE) AS BLOB), (((x'cfbc')) BETWEEN (((((0.4008907907247664))>=((rt0.c0))))) AND ((vt1.c0 COLLATE NOCASE))), vt1.c0 FROM rt0;SELECT ALL 0.806915719816601 FROM rt0 ORDER BY ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)>(rt0.c4 COLLATE NOCASE))  NULLS LAST; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, vt1 WHERE (CAST(NULL COLLATE NOCASE AS INTEGER)); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c4)) IN (((rt0.c2)IS(rt0.c4)), ((rt0.c1)LIKE(rt0.c1)))) FROM vt1 WHERE (TYPEOF(DISTINCT x'' COLLATE BINARY)) ORDER BY (+ (((rt0.c4) BETWEEN (rt0.c4) AND (vt1.c0)))) ASC;SELECT ALL ((TOTAL('-247237508')) IS FALSE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(UNLIKELY(vt1.c0) AS REAL), (CASE WHEN vt1.c0 THEN vt1.c0 END IN (((vt1.c0) ISNULL)))) OVER () FROM vt1 LIMIT 358275235;SELECT DISTINCT rt0.c2 FROM vt1 WHERE (((((NULL)GLOB(NULL)))<=(((('358275235'))>(('0,径q'))))));SELECT DISTINCT ((((((rt0.c1))>((rt0.c2)))))>((rt0.c1))) FROM vt1, rt0 WHERE (((load_extension(NULL)) BETWEEN (((NULL) IS TRUE)) AND (((('1396637446')) NOT BETWEEN (('ix-鸡')) AND ((-3.45465311E8))))));SELECT DISTINCT (((rt0.c4 IN ()))>=(CASE WHEN rt0.c3 THEN rt0.c4 END)) FROM rt0, vt1 WHERE (NULLIF(DISTINCT ((NULL)-(x'')), (- ('#')))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)<<(rt0.c3)) AS TEXT) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2) BETWEEN (rt0.c2) AND (vt1.c0))), ((((rt0.c4)AND(rt0.c0)))OR(CAST(vt1.c0 AS INTEGER))), ((((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c2))) IS TRUE), ((CASE rt0.c3  WHEN vt1.c0 THEN rt0.c1 END)IS NOT((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))))), NTILE(CASE vt1.c0  WHEN ((vt1.c0) IS TRUE) THEN ((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)) END) OVER () FROM vt1;SELECT ALL CASE CAST(vt1.c0 AS BLOB)  WHEN ((rt0.c3)<=(rt0.c2)) THEN (((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c4))) WHEN ((0.1069049958968642)>=(rt0.c1)) THEN rt0.c1 WHEN ((rt0.c0) IS FALSE) THEN ((((rt0.c2)AND(rt0.c1)))OR(rt0.c0)) END FROM vt1 WHERE (((((CASE WHEN '' THEN 0.7904019328193179 ELSE '-696374869' END)OR(((NULL) NOTNULL))))AND(CAST(NULL AS TEXT))));SELECT (((rt0.c1 IN ())) ISNULL), TOTAL((((rt0.c4, '1001859970', rt0.c2))=((rt0.c3, rt0.c0, rt0.c1))) COLLATE NOCASE), CAST((((vt1.c0))<((x'9faa'))) AS REAL) FROM vt1, rt0 WHERE (((((x'26b9')==(0.053932354258615534))) NOTNULL)); -- 0ms;
SELECT ALL CAST(vt1.c0 COLLATE NOCASE AS BLOB) FROM rt0;SELECT DISTINCT COALESCE(DISTINCT LAST_INSERT_ROWID(), LOWER(rt0.c1)), (((rt0.c3 IN ()))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c2))))), TRIM(DISTINCT 5.470303319616843E-4, AVG(vt1.c0)) FROM vt1 WHERE ((((0.18872016084167997 IN ())) IS FALSE));SELECT DISTINCT LIKE(rt0.c1 COLLATE NOCASE, (('-696374869')LIKE(vt1.c0)), '1'), -1896233749, ('-1349604748' IN ()), rt0.c4, ((rt0.c4) NOT BETWEEN (((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))) AND (rt0.c2)) FROM rt0 WHERE (NULL) GROUP BY LIKELY(DISTINCT rt0.c1 COLLATE BINARY), ((NULL) NOTNULL), vt1.c0;SELECT DISTINCT (((((rt0.c0, rt0.c3, rt0.c2, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c3, vt1.c0, rt0.c3, vt1.c0, rt0.c3)) AND ((x'90af9083', rt0.c1, rt0.c0, rt0.c2, vt1.c0))))>>((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))) FROM vt1 LIMIT -920412935;SELECT ALL (NOT ((((('-1963346623')OR(rt0.c2)))OR(rt0.c0)))) FROM vt1;SELECT DISTINCT (((((~ (rt0.c4)))AND(rt0.c1 COLLATE NOCASE)))AND(CASE WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c2 END)) FROM vt1, rt0 WHERE (((NULL COLLATE BINARY) IS TRUE)); -- 1ms;
SELECT ALL ((vt1.c0) IS FALSE) COLLATE BINARY, ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c3)))<<(((((rt0.c1)AND(NULL)))AND(rt0.c3)))), ((rt0.c0)IS(((rt0.c4)AND(vt1.c0)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((((NOT (vt1.c0)))AND(NULL)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END)) FROM rt0 WHERE (((((x'7ea6') NOTNULL))LIKE(x'')));SELECT DISTINCT ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)) COLLATE BINARY FROM vt1, rt0 LIMIT 358275235; -- 0ms;
SELECT DISTINCT NULL FROM vt1 WHERE (CAST(((0.9477872771881396) NOTNULL) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((~ (NULL)), SUM(rt0.c3), ((rt0.c4)/(rt0.c3))))<((CAST(rt0.c3 AS INTEGER), ((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)), AVG(rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) ISNULL)) NOTNULL) FROM vt1, rt0 WHERE ((NOT (CAST('' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((SUM(rt0.c4))&((((rt0.c1, rt0.c0, vt1.c0))>=((rt0.c0, rt0.c4, rt0.c1))))), CAST((('-283943036') BETWEEN (rt0.c1) AND (rt0.c2)) AS NUMERIC), (((rt0.c2)) BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN '#' THEN vt1.c0 ELSE rt0.c2 END)) AND (((+ (rt0.c3))))) FROM rt0, vt1 WHERE (CASE (+ (-1.349604748E9))  WHEN CASE NULL  WHEN '-345465311' THEN 'Q?' END THEN (('') ISNULL) ELSE CASE -1.778773829E9  WHEN 0Xffffffffeb689e21 THEN '-1778773829' END END); -- 1ms;
SELECT DISTINCT COUNT(*) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((((rt0.c3)OR(rt0.c3))))<=((MAX(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))) FROM rt0, vt1; -- 0ms;
SELECT ALL (((((vt1.c0)-(vt1.c0))))>((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4))))), (NULL IN ()), '' FROM vt1, rt0; -- 0ms;
SELECT ((CAST(vt1.c0 AS TEXT))%('-920412935')), '-1613659763', ((TOTAL(rt0.c4)) ISNULL) FROM vt1 WHERE ((((CAST(NULL AS INTEGER)))!=((CASE x''  WHEN -82306236 THEN 0X6da688 ELSE x'f7e4' END))));SELECT DISTINCT (+ (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE 'Vk' END)), ((TOTAL('-2051276427'))>>((vt1.c0 IN ()))), COUNT(((vt1.c0) BETWEEN (rt0.c2) AND (rt0.c4))), UPPER(((rt0.c0)OR(rt0.c3))), (((STRFTIME(rt0.c1, rt0.c1, rt0.c3, rt0.c3, rt0.c1)))=(((~ (x'2d3b'))))) FROM rt0, vt1; -- 0ms;
SELECT ALL (~ (((((((((vt1.c0)OR(vt1.c0)))AND(rt0.c3)))AND(vt1.c0)))OR('-1613659763')))), ((CAST(rt0.c3 AS INTEGER)) NOT NULL), x'2f09' FROM rt0;SELECT ALL rt0.c4, rt0.c1 COLLATE NOCASE, (('1125058773')OR(((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))), ((CAST(rt0.c0 AS REAL)) NOT BETWEEN ((((rt0.c2))=((NULL)))) AND ((NOT (vt1.c0)))), rt0.c1 FROM vt1;SELECT ((((((((IFNULL(rt0.c4, vt1.c0))AND((+ (rt0.c0)))))OR(CAST(rt0.c1 AS TEXT))))OR((rt0.c2 IN ()))))AND(CASE rt0.c1  WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c0 END)) FROM vt1, rt0 WHERE (((((NULL)&(1866535014))) NOT BETWEEN ((0.08164716311431697 IN (x'', x''))) AND (CAST(0.7904019328193179 AS TEXT)))) ORDER BY rt0.c3  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c0 AS INTEGER) THEN (rt0.c2 IN ()) END, UNLIKELY((((rt0.c3))>=((rt0.c2)))), ((((((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c0)))OR(((rt0.c2) ISNULL))))AND(rt0.c3)) FROM rt0 WHERE ((((NULL IN ()))IS NOT((~ (0.7543751031938727)))));SELECT DISTINCT CASE WHEN MIN(rt0.c2) THEN rt0.c0 ELSE SUM(rt0.c1) END FROM vt1;SELECT DISTINCT '?Z', ((((vt1.c0)<(rt0.c3)))&(rt0.c4 COLLATE NOCASE)), PERCENT_RANK() OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT vt1.c0 FROM rt0;SELECT ALL SQLITE_VERSION() FROM rt0, vt1 WHERE (CASE (0.1587724491951913 IN ())  WHEN ((('1791978815')) BETWEEN ((-1.896233749E9)) AND ((0.2799911659439822))) THEN SQLITE_COMPILEOPTION_USED(0xffffffffa18f350c) ELSE (('706115466')>(NULL)) END) GROUP BY 1866535014 HAVING MAX((- (vt1.c0)));SELECT ((((((vt1.c0) NOT NULL))OR(CAST(rt0.c3 AS NUMERIC))))AND(rt0.c0 COLLATE RTRIM)) FROM vt1 WHERE (CAST('\nJ抗i' COLLATE NOCASE AS BLOB)) INTERSECT SELECT ALL (((rt0.c1)) NOT BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c0 END)) AND (((~ (rt0.c1))))) FROM vt1 WHERE (((((((x'')<('-247237508')))OR((('I꩖YŵA.N<')GLOB(-2.03866953E9)))))OR(LTRIM(1612788480))));SELECT ALL ((((vt1.c0)>=(vt1.c0))) IS TRUE) FROM vt1; -- 0ms;
SELECT ALL ((((rt0.c2)OR(CAST(rt0.c2 AS TEXT))))OR(((((rt0.c0)OR(rt0.c0)))OR(rt0.c1)))) FROM vt1 WHERE ((~ ((- (NULL)))));SELECT LIKELY((((rt0.c2))=((rt0.c2)))) FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3))) ISNULL) FROM vt1;SELECT (+ (((rt0.c3) NOTNULL))) FROM rt0; -- 0ms;
SELECT x'' FROM rt0 GROUP BY (((NOT (rt0.c0)))IS(CASE NULL  WHEN vt1.c0 THEN rt0.c0 ELSE '' END)), x'', (('1OTꚈm')LIKE(CAST(vt1.c0 AS TEXT)));SELECT CASE WHEN x'62d5' THEN (vt1.c0 IN ()) WHEN CAST(rt0.c0 AS TEXT) THEN ((rt0.c3)LIKE(rt0.c4)) WHEN rt0.c0 COLLATE BINARY THEN rt0.c2 COLLATE RTRIM END FROM vt1, rt0 LIMIT -1812726892; -- 0ms;
SELECT DISTINCT (- (rt0.c2)) COLLATE RTRIM, '75905994', (- (UNLIKELY(DISTINCT rt0.c3))) FROM vt1 GROUP BY ((((rt0.c1 COLLATE NOCASE)AND(((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))))AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END)) HAVING 1738248588;SELECT ALL (CASE WHEN rt0.c3 THEN '-1972696361' WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 END IN (rt0.c2, GROUP_CONCAT(rt0.c4))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT '', CASE ((rt0.c4)%(vt1.c0))  WHEN rt0.c1 COLLATE NOCASE THEN COUNT(*) ELSE (((('*e,0Qqz')OR(rt0.c2)))AND(vt1.c0)) END, (~ (((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt0 WHERE (((('1994401308' IN ()))/(((0xffffffff95fa10bb) NOTNULL))));SELECT DISTINCT ((((0.045483614644067694)%(vt1.c0))) NOT BETWEEN (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0))) AND (((vt1.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)))) FROM vt1, rt0 WHERE (((CAST(-1.57877086E9 AS INTEGER)) BETWEEN (UPPER(DISTINCT '-719599734')) AND ((0.9495032540383469 IN (x''))))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM vt1 WHERE (((x'' COLLATE RTRIM) ISNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c4)>>(rt0.c0)))OR(rt0.c1 COLLATE BINARY)) FROM vt1 WHERE (CAST((('-1435036236')AND('9pB὏p')) AS NUMERIC));SELECT ALL json_patch((- (0.14483005390627202)), ((rt0.c2)OR(rt0.c3))), (((((NULL))=((rt0.c1))))+(((rt0.c4)&(rt0.c1)))), MIN((('e㌀''j?[c/t')AND(vt1.c0))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((- (vt1.c0))) NOT BETWEEN (vt1.c0 COLLATE NOCASE) AND (((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1)))), ((vt1.c0) BETWEEN (rt0.c4) AND ('')) COLLATE RTRIM, MIN(((rt0.c2)>(rt0.c1))) FROM vt1;SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt1; -- 0ms;
SELECT LAG(COALESCE(DISTINCT rt0.c1, rt0.c0) COLLATE RTRIM, CAST(CAST(rt0.c3 AS TEXT) AS NUMERIC), CASE ((rt0.c0)||(rt0.c3))  WHEN ((-2051276427) NOTNULL) THEN ((rt0.c3)/(rt0.c2)) END) OVER (), (+ ((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), (((((x'')>>(rt0.c3)), CAST(vt1.c0 AS INTEGER), CAST(vt1.c0 AS INTEGER)))>=(((rt0.c1 IN ()), CASE WHEN rt0.c2 THEN rt0.c2 END, (~ (rt0.c0))))) FROM rt0 WHERE (((((((x'be33')AND('-902517364')))AND(x'd48f')))IS NOT('')));SELECT SUM((- ('-1758662160'))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c3)IS(rt0.c2))) AND (((rt0.c0) IS FALSE))) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT LIKELY(CASE vt1.c0  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) FROM vt1, rt0 WHERE ((((~ (']첷^3tL93勩')))+((0X32c1bc9b IN ())))); -- 0ms;
SELECT NULL FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c1))=((vt1.c0)))) NOT BETWEEN (((-1.584450292E9)<<(rt0.c4))) AND ((vt1.c0 IN (rt0.c2, rt0.c1)))) FROM vt1, rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt1 GROUP BY ((((vt1.c0)<>(rt0.c1)))&((~ (rt0.c3))));SELECT DISTINCT rt0.c4 FROM rt0, vt1 WHERE ((((CASE WHEN '-1758662160' THEN '1353756944' WHEN 0Xffffffff867c5f26 THEN x'' WHEN 'F' THEN 'ge' ELSE NULL END))<((CASE WHEN '' THEN 0.4352298391751136 WHEN 1805992935 THEN '' WHEN x'' THEN '-696374869' ELSE x'' END)))); -- 0ms;
SELECT (((rt0.c2)) BETWEEN ((vt1.c0 COLLATE NOCASE)) AND ((CAST(rt0.c2 AS INTEGER)))) FROM vt1 WHERE (((((0.3760418135018391)%(0.0916585314897499)))<(((-2038669530)LIKE(0.9797462497422127)))));SELECT DISTINCT CAST(((((((((rt0.c4)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c3)) AS TEXT) FROM rt0, vt1 WHERE (NULL) LIMIT 424885226; -- 0ms;
SELECT DISTINCT (- (((rt0.c2)+(rt0.c1)))) FROM rt0 WHERE (((((((((((('-920412935')AND('-82306236')))AND(0.008539190383786699)))AND('835879666')))AND(x'')), ((((-1.57877086E9)OR('-2038669530')))AND('-1613659763')), 'Vk' COLLATE RTRIM))>(((('8⦫oo6') BETWEEN ('a⦫V?\n') AND (x'c748')), CAST(0X18d7dc10 AS REAL), CAST(0.4502822732337922 AS REAL))))); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 END IN ()) FROM rt0 GROUP BY NULLIF((rt0.c1 IN ()), rt0.c3 COLLATE NOCASE) HAVING TRIM(DISTINCT ((rt0.c0) NOT NULL), rt0.c3 COLLATE RTRIM) ORDER BY (NOT (-1993265490)) DESC; -- 0ms;
SELECT CAST(((rt0.c1) NOT NULL) AS BLOB), ((rt0.c1 COLLATE BINARY)==(UNICODE(rt0.c3))), MAX(RTRIM(vt1.c0) COLLATE NOCASE) FROM vt1;SELECT (((~ (NULL))) NOT BETWEEN ('-796765463') AND (0.5939663856835478)) FROM rt0 GROUP BY x'' HAVING NULLIF(CASE WHEN rt0.c2 THEN rt0.c2 END, CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 END);SELECT ALL CUME_DIST() OVER () FROM vt1; -- 0ms;
SELECT DISTINCT TOTAL(x'') FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c2 ELSE vt1.c0 END) BETWEEN (((vt1.c0)==(vt1.c0))) AND (rt0.c1)) FROM rt0, vt1 WHERE (CAST(((NULL) ISNULL) AS BLOB)) LIMIT -1023695699 OFFSET -919753192; -- 0ms;
SELECT DISTINCT (CAST(rt0.c0 AS REAL) IN ()) FROM vt1; -- 1ms;
SELECT ALL CASE (+ (rt0.c0))  WHEN rt0.c1 THEN ((((rt0.c0)AND(x'')))AND(rt0.c1)) END FROM rt0 LIMIT 1353756944 OFFSET -1728721737; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (CASE WHEN ((x'') BETWEEN (x'') AND (x'2bcc')) THEN 0.9554130784272401 COLLATE NOCASE WHEN CASE WHEN '	햴' THEN -1758662160 ELSE NULL END THEN (+ ('-1761690261')) WHEN x'' THEN ((0X5108a6ba)-(0.9895978346075842)) WHEN ((577985415) NOT BETWEEN ('r ') AND ('1368532667')) THEN ((x'') BETWEEN (x'') AND (0.5271525863206898)) WHEN ((((NULL)AND('280989101')))OR(-1761690261)) THEN ((0x533eff06)>(NULL)) ELSE ((1.866535014E9)<=(NULL)) END) LIMIT -1973848697 OFFSET -326041103; -- 0ms;
SELECT UPPER(vt1.c0), (((rt0.c4 IN ()))LIKE(rt0.c4 COLLATE BINARY)), CAST(((((rt0.c1)AND(rt0.c2)))OR(rt0.c3)) AS REAL) FROM rt0, vt1 LIMIT 1339852962 OFFSET 1791978815; -- 0ms;
SELECT DISTINCT CAST((vt1.c0 IN ()) AS NUMERIC), (~ ((rt0.c1 IN ()))), CAST((rt0.c2 IN (rt0.c0)) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM vt1 WHERE (((((x'cbcf' COLLATE RTRIM)AND((+ (NULL)))))AND(x'ffb2')));SELECT DISTINCT DENSE_RANK() OVER () FROM rt0 WHERE ((((((0.9316425462941993))>=((NULL))))!=(((8.35879666E8)%(0.03765815915010662))))) GROUP BY PRINTF(rt0.c3 COLLATE NOCASE) HAVING ((((((((rt0.c3)AND(CASE WHEN rt0.c1 THEN vt1.c0 END)))OR((+ (rt0.c2)))))OR(((NULL)%(rt0.c4)))))OR(((((NULL)AND(rt0.c2)))AND(rt0.c0))));SELECT DISTINCT ((((rt0.c0 COLLATE NOCASE)AND(((rt0.c3)IS(rt0.c3)))))OR(rt0.c1 COLLATE BINARY)) FROM vt1, rt0 WHERE (CASE (('-1728721737')OR(x'a727'))  WHEN ((((x'')AND(x'')))AND(NULL)) THEN ((0.5487220034736495)<<(NULL)) ELSE CAST(NULL AS INTEGER) END); -- 0ms;
SELECT ALL IFNULL(DISTINCT rt0.c2 COLLATE BINARY, rt0.c1 COLLATE BINARY), ((((rt0.c2) IS FALSE)) BETWEEN (rt0.c1) AND (((rt0.c0) NOT BETWEEN (rt0.c4) AND (vt1.c0)))), 0.04633473681425471, ((rt0.c2) NOT NULL) COLLATE NOCASE, (- ((((rt0.c2, vt1.c0, rt0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3, x'', rt0.c1)) AND ((rt0.c2, rt0.c0, vt1.c0, rt0.c1, rt0.c4))))) FROM vt1, rt0; -- 3ms;
SELECT DISTINCT rt0.c2 COLLATE RTRIM, CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) THEN ((vt1.c0)-(rt0.c3)) ELSE rt0.c2 END, AVG(CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) OVER () FROM rt0 WHERE (CAST((NOT (x'')) AS REAL));SELECT DISTINCT (- ('')) COLLATE BINARY FROM vt1, rt0 WHERE (CASE (('V8')IS NOT(0Xffffffffd9c5bfeb))  WHEN ABS('-130165150') THEN CAST(0.1729984892660772 AS INTEGER) WHEN CASE WHEN 0.44882762805316867 THEN '-0.0' ELSE '' END THEN CAST('1856451629' AS BLOB) WHEN ((0.2031381180335987)IS(-785553826)) THEN 0.24619138199574264 END); -- 0ms;
SELECT DISTINCT vt1.c0, (+ ((- (rt0.c2)))), vt1.c0 FROM rt0 WHERE (((NULL COLLATE RTRIM)OR(((0.5216974375064425) NOT BETWEEN (0.9495032540383469) AND (x''))))) GROUP BY ((((COALESCE(rt0.c3, rt0.c1))OR((NOT ('m&')))))OR(((1.994401308E9) NOT BETWEEN (vt1.c0) AND (rt0.c2)))), ((((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))AND((((rt0.c4)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))))OR((rt0.c1 IN ()))), (0.7189974012577224 IN ()) HAVING (((((((rt0.c4))<((rt0.c2))))AND(((rt0.c3)+(rt0.c3)))))AND((vt1.c0 IN ())));SELECT ALL RANK() OVER () FROM rt0, vt1 NOT INDEXED WHERE ((NOT (((x'') BETWEEN ('pQL႟Z鿊') AND (x'6bb94408'))))); -- 0ms;
SELECT DISTINCT (0.5971124146062741 IN (LIKELY(rt0.c2))) FROM rt0; -- 1ms;
SELECT DISTINCT NULL FROM vt1; -- 0ms;
SELECT DISTINCT -1.778773829E9, ((rt0.c4)<(CAST(rt0.c0 AS REAL))), ((((((vt1.c0)OR(rt0.c3)))AND(rt0.c4))) NOT BETWEEN (((((rt0.c2)OR(1.856451629E9)))OR(vt1.c0))) AND ((rt0.c0 IN (vt1.c0)))) FROM rt0, vt1 NOT INDEXED WHERE ((x'' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((0X7f658773, ((vt1.c0)<=(x'')), (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))) AND ((x'', ((((((((rt0.c3)OR(vt1.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c4)), (rt0.c1 IN (rt0.c4))))) FROM vt1;SELECT ALL PERCENT_RANK() OVER (), COUNT(CAST(vt1.c0 AS BLOB)) OVER (), ((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c0)))AND(x'')))AND(rt0.c0)))!=(((((rt0.c0)OR(vt1.c0)))OR(NULL)))) FROM rt0;SELECT ALL ((((('' IN (rt0.c4)))AND((((rt0.c4))>=((rt0.c2))))))OR((('1348434255') NOT BETWEEN (rt0.c2) AND (rt0.c0)))), ((CAST(rt0.c0 AS TEXT))%((rt0.c3 IN ()))), FIRST_VALUE(CAST(((((rt0.c2)OR(vt1.c0)))OR(rt0.c0)) AS REAL)) OVER () FROM rt0, vt1 WHERE (((((-1.3016515E8)OR(0.6804400135687513)))OR(416799760)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT PRINTF(rt0.c3 COLLATE RTRIM), CASE -1.2666251E9  WHEN ((rt0.c3)<(rt0.c2)) THEN (~ (rt0.c2)) WHEN rt0.c4 THEN SQLITE_COMPILEOPTION_GET(rt0.c3) WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0)) THEN (('1368532667') BETWEEN (rt0.c4) AND (rt0.c2)) ELSE ((vt1.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)) END, ((((((((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c4)))OR(rt0.c4 COLLATE BINARY)))AND(MIN(rt0.c3))))OR((((vt1.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))OR(CAST(vt1.c0 AS NUMERIC))), (~ (((rt0.c2) ISNULL))), rt0.c4, ((((LIKELIHOOD(rt0.c4, 0.5479180457578924))AND(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c4 END)))OR(x'')), DENSE_RANK() OVER ( ROWS  CURRENT ROW) FROM rt0, vt1 WHERE ((((((x'')LIKE(''))))>((TRIM(x'', NULL))))); -- 1ms;
SELECT ALL (+ ((((rt0.c4))>=((rt0.c2))))) FROM vt1, rt0 WHERE (((((-1.972696361E9 COLLATE BINARY)OR(CASE '0.7904019328193179'  WHEN 'X1U9%dV,N' THEN 0.938179366619171 ELSE NULL END)))OR(((x'')>(x'a118ba32'))))); -- 0ms;
SELECT SUM(((((vt1.c0)AND(rt0.c3)))OR(vt1.c0))), CASE WHEN rt0.c3 THEN ((('424885226'))<=((rt0.c1))) END, (((rt0.c4 IN ()))&((+ (rt0.c3)))) FROM vt1, rt0 WHERE (((((((((((0.806915719816601)OR('')))OR(0.7404235570606421)))AND('-1758662160')))AND(NULL))) BETWEEN (((x'') ISNULL)) AND ((NULL IN ())))); -- 0ms;
SELECT DISTINCT (((((rt0.c3 IN ()))OR((~ (rt0.c2)))))AND(((((rt0.c4)AND(rt0.c4)))OR(rt0.c2)))), (((- (rt0.c4)))<(rt0.c3 COLLATE BINARY)), (((vt1.c0, rt0.c3, rt0.c2)) NOT BETWEEN (((NOT (x'4e65')), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)), CASE NULL  WHEN vt1.c0 THEN rt0.c3 END)) AND ((rt0.c1 COLLATE RTRIM, TYPEOF(DISTINCT 0.49394343669116314), CASE 0.1587724491951913  WHEN rt0.c4 THEN rt0.c0 ELSE vt1.c0 END))) FROM rt0;SELECT ALL (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END IN ()), ((CASE rt0.c2  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c0 END) NOTNULL), ((rt0.c0)>(((NULL) IS TRUE))), (~ ('-1993265490')), AVG(((vt1.c0) NOT NULL)) OVER (), '-1328683847' COLLATE NOCASE COLLATE BINARY, rt0.c4 FROM vt1 NOT INDEXED, rt0 GROUP BY CAST(rt0.c3 AS INTEGER) COLLATE RTRIM, (((NOT (rt0.c0))) BETWEEN ((rt0.c1 IN (rt0.c2))) AND (((rt0.c1)+(vt1.c0)))), CASE TRIM(DISTINCT vt1.c0)  WHEN (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN ((rt0.c2)<>(rt0.c4)) WHEN ((rt0.c3) ISNULL) THEN (rt0.c0 IN ()) WHEN ((rt0.c2)IS(rt0.c2)) THEN CAST(rt0.c0 AS BLOB) ELSE rt0.c0 END HAVING UPPER(IFNULL(DISTINCT '', rt0.c1)); -- 0ms;
SELECT ALL CAST(((vt1.c0)<(vt1.c0)) AS BLOB), CAST((+ (rt0.c1)) AS NUMERIC), ((((((rt0.c4)OR(vt1.c0)))AND(rt0.c1))) NOTNULL) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (+ (rt0.c0 COLLATE BINARY)) FROM rt0 GROUP BY CASE WHEN NULL THEN rt0.c4 ELSE rt0.c3 END COLLATE BINARY COLLATE NOCASE HAVING ((rt0.c0) BETWEEN ((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c4, rt0.c0, rt0.c2)) AND (('-1728721737', rt0.c1, rt0.c3)))) AND (((rt0.c2)>=(rt0.c4)))); -- 0ms;
SELECT DISTINCT ((vt1.c0) ISNULL), rt0.c1, ((((rt0.c1)LIKE(rt0.c0)))&(((((((((vt1.c0)OR(rt0.c4)))AND(rt0.c1)))AND(vt1.c0)))OR(rt0.c0)))) FROM rt0;SELECT DISTINCT COUNT(((vt1.c0)>=(vt1.c0))) OVER () FROM rt0;SELECT DISTINCT ((rt0.c3)LIKE(((rt0.c3) NOTNULL))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)-((((rt0.c2))>((rt0.c0))))) FROM vt1;SELECT ALL NULL FROM rt0, vt1 WHERE (CAST(((NULL)LIKE(x'7fe6')) AS NUMERIC)); -- 0ms;
SELECT CASE TOTAL_CHANGES()  WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c2)) THEN LIKELY(rt0.c0) END FROM rt0, vt1 WHERE (((((NOT (x'')), 0Xffffffffcd478d59 COLLATE RTRIM, SQLITE_COMPILEOPTION_GET(NULL), (('413772450')<(x'd77b')), (('0.44882762805316867') NOT NULL)))<=((-1.896233749E9, -1755919978, CASE NULL  WHEN NULL THEN 0.29519151204228977 WHEN -1263402353 THEN x'' WHEN x'' THEN 0.9082460785178277 END, ((NULL)GLOB('87258995')), 0.01924656301773031 COLLATE BINARY)))) ORDER BY (((((rt0.c4)-(vt1.c0))))<((((x'') IS TRUE)))) ASC, ((((rt0.c2)IS(rt0.c2)))GLOB((~ (rt0.c2)))); -- 0ms;
SELECT ALL CAST((rt0.c1 IN (x'dd07', rt0.c4)) AS TEXT) FROM vt1;SELECT DISTINCT 0.7847049792417155 FROM rt0, vt1 ORDER BY (((vt1.c0))>((vt1.c0))) COLLATE BINARY; -- 0ms;
SELECT DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c1 COLLATE NOCASE)) AND ((MIN(rt0.c2)))), '.0', ((((rt0.c4)<(rt0.c0))) ISNULL), PERCENT_RANK() OVER ( ORDER BY CAST((rt0.c3 IN ()) AS NUMERIC) DESC  NULLS LAST), ((((669480676)|(rt0.c0))) BETWEEN (rt0.c4) AND (rt0.c1)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (~ (HEX(DISTINCT rt0.c2))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END COLLATE RTRIM FROM vt1, rt0 WHERE ((((('0.49600887847559993')%(0.2031381180335987)))<((((NULL, x'4ed4f320', x'', NULL, '1348434255')) NOT BETWEEN ((x'', '1264252130', 0.3194381910242512, x'c10b', '')) AND (('K.', NULL, x'', 1459999282, NULL)))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END AS NUMERIC), ((NOT (rt0.c0)) IN (IFNULL(rt0.c1, vt1.c0))), CASE WHEN CAST(rt0.c4 AS BLOB) THEN CAST(rt0.c2 AS NUMERIC) ELSE rt0.c2 END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))AND(0.12841809113413916)))OR(((rt0.c3)<=(rt0.c2)))) FROM rt0, vt1 WHERE (((NULL COLLATE NOCASE)/(((((x'')AND('-719599734')))OR(x'1308'))))); -- 0ms;
SELECT ALL (rt0.c3 IN ()), ((((((vt1.c0)AND(rt0.c4)))AND(rt0.c0)))GLOB(((((((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(rt0.c4)))AND(vt1.c0)))AND(rt0.c1)))OR(rt0.c2)))), CAST(MIN(rt0.c3) AS REAL) FROM rt0;SELECT ALL CAST((+ (0xffffffffd08252e9)) AS TEXT) FROM vt1 WHERE ((((((((((NOT (0.37882729167943174)))OR(CASE WHEN 0.517906355405621 THEN x'' WHEN '1OTꚈm' THEN '-171883913' WHEN '?9' THEN NULL ELSE 0.2031381180335987 END)))AND(((-396576857) NOTNULL))))OR(CAST('' AS NUMERIC))))OR((((0.8949881925554763)) BETWEEN ((0.2566310157928483)) AND (('f3f\\')))))); -- 0ms;
SELECT (((vt1.c0, rt0.c0, rt0.c2)) BETWEEN ((rt0.c0 COLLATE RTRIM, ((x'')<<(rt0.c2)), rt0.c4)) AND ((((rt0.c4) IS TRUE), TOTAL_CHANGES(), rt0.c1))), TYPEOF(rt0.c1) COLLATE NOCASE, (((((rt0.c2))<((rt0.c1))))<=(((((rt0.c2)OR(vt1.c0)))AND(vt1.c0)))) FROM rt0;SELECT ((((NOT (rt0.c1)), ((((rt0.c0)AND(rt0.c3)))OR(rt0.c4)), MIN(rt0.c4)))<=((ABS(rt0.c0), rt0.c2 COLLATE RTRIM, (rt0.c4 IN ())))), (((~ (rt0.c1))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((vt1.c0)OR(rt0.c2)))), DENSE_RANK() OVER ( PARTITION BY -1369578463, (+ (((('\rp6\r'))<((vt1.c0)))))) FROM vt1, rt0 WHERE ((((((0X5933641a)/(x'7665'))))<=(((('e㌀''j?[c/t') NOTNULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0 COLLATE NOCASE), ((((('+o3}', rt0.c1, rt0.c3)) BETWEEN ((rt0.c3, rt0.c1, vt1.c0)) AND ((NULL, rt0.c0, rt0.c4))))||(AVG(rt0.c2))), (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c3))))!=(((- (rt0.c1))))) FROM vt1 ORDER BY TYPEOF(((rt0.c1) IS TRUE)) DESC;SELECT ALL CAST((((vt1.c0))<((rt0.c1))) AS BLOB) FROM rt0;SELECT ALL ((rt0.c3) BETWEEN (((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2))) AND (((rt0.c2)/(rt0.c0)))), ((MIN(1368532667)) BETWEEN ('F[g칊') AND (TYPEOF(rt0.c1))), GROUP_CONCAT(((rt0.c4)<>(rt0.c2))) FROM rt0, vt1 ORDER BY (((rt0.c0 IN ()))IS NOT(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END))  NULLS FIRST; -- 0ms;
SELECT DISTINCT MAX((~ (rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)%(rt0.c4)))AND(rt0.c1)))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0 WHERE ((((((((('-920412935' COLLATE RTRIM)AND(((NULL)GLOB('2137360243')))))AND((x'' IN ()))))OR(x'a80c')))OR(((((0xfffffffffb181b44)AND('-858758505')))OR(0Xffffffffb5ce0fc5))))); -- 0ms;
SELECT ((CAST(rt0.c4 AS TEXT))<(((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)))) FROM vt1;SELECT DISTINCT CAST((rt0.c0 IN ()) AS BLOB), (NOT (SUM(rt0.c1))), ((rt0.c1 IN ()) IN ()) FROM rt0; -- 0ms;
SELECT (((NOT (rt0.c0))) NOT NULL), ((((rt0.c4)==(NULL)))<>(((rt0.c3)||(rt0.c3)))), ((CASE 'ge'  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END)GLOB(CASE WHEN rt0.c3 THEN rt0.c0 END)) FROM vt1;SELECT DISTINCT CASE WHEN (((((((('-920412935')AND(rt0.c1)))AND(rt0.c4)))AND(vt1.c0)))OR(rt0.c1)) THEN rt0.c1 END, ((((0.14971393654937915)AND(((rt0.c2) NOT NULL))))AND(UNLIKELY(vt1.c0))), (~ (((rt0.c2)<<(rt0.c2)))) FROM rt0;SELECT ALL vt1.c0 COLLATE RTRIM FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4)=(rt0.c3))) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) AND (rt0.c3 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ((vt1.c0 COLLATE BINARY) NOT NULL), (CAST(NULL AS TEXT) IN (CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END, LOWER(DISTINCT rt0.c4))), RANK() OVER (), (((('1599361704')<=(0Xffffffffc92dae18)))AND(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), COUNT((rt0.c0 IN (rt0.c3)) COLLATE BINARY) OVER () FROM rt0, vt1 WHERE (DATETIME((NULL IN ()), (((x'4171')) NOT BETWEEN (('y')) AND ((0.3530342485693876))), (NULL IN ()))) LIMIT 1368532667; -- 0ms;
SELECT DISTINCT CAST((0Xffffffff87ff9621 IN ()) AS NUMERIC) FROM vt1, rt0 WHERE (((0.845942806928087 COLLATE RTRIM)LIKE(((x'a04a') NOTNULL)))) LIMIT 81379162; -- 3ms;
SELECT ALL rt0.c4 FROM rt0, vt1; -- 0ms;
SELECT ((((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c4)))OR('1791978815'))) BETWEEN (COUNT(*)) AND (0.726284129038614)) FROM vt1, rt0; -- 0ms;
SELECT (vt1.c0 IN ()) COLLATE NOCASE FROM vt1 GROUP BY ((rt0.c0)||(rt0.c4)) COLLATE NOCASE HAVING rt0.c3;SELECT ALL CASE WHEN ((rt0.c2) ISNULL) THEN COUNT(*) END, (((NOT (rt0.c1))) ISNULL), ((((rt0.c0) ISNULL))-(TRIM(DISTINCT rt0.c4, rt0.c4))) FROM rt0 WHERE (((((0.7927418087830065) NOTNULL)) BETWEEN (((0.7728977910321676)<<(0.7961277990450111))) AND ((+ (-902517364))))) LIMIT 1178212798 OFFSET 1740724438; -- 0ms;
SELECT DISTINCT NTH_VALUE((((rt0.c1)) NOT BETWEEN ((((vt1.c0)GLOB(rt0.c4)))) AND ((((((rt0.c4)AND(rt0.c2)))AND(rt0.c2))))), ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)IS NOT((vt1.c0 IN ())))) OVER () FROM rt0, vt1 WHERE (CAST(((NULL) NOT BETWEEN (7.06115466E8) AND ('^o#J')) AS REAL)); -- 0ms;
SELECT ALL TOTAL(json_extract(rt0.c3, rt0.c3, rt0.c1, rt0.c3)) FROM vt1 WHERE (UNLIKELY(NULL COLLATE BINARY));SELECT DISTINCT ((((((rt0.c1)>=(rt0.c4)))OR((- (rt0.c4)))))OR(json_object(rt0.c1, rt0.c1, rt0.c4, rt0.c2))) FROM vt1 LIMIT -1328683847 OFFSET -1328184201;SELECT ALL CAST((x'1842' IN ()) AS BLOB) FROM rt0 WHERE (CASE ((NULL) NOT BETWEEN ('-941009194') AND (NULL))  WHEN (((x'', '-1266625100', '5-m /s䅛G')) NOT BETWEEN (('9pB὏p', '', '1339852962')) AND ((x'', 0.4956664036744025, 0Xffffffffc2a265fb))) THEN CASE x''  WHEN 1515713963 THEN 'y4_e)' END END); -- 0ms;
SELECT ALL CASE WHEN rt0.c0 THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c3) NOT BETWEEN (0.1317362536047899) AND (rt0.c0)) END, TRIM(DISTINCT ((((vt1.c0)AND(rt0.c0)))AND(rt0.c0))), (((+ ('1791978815'))) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (CAST(x'' AS NUMERIC))) FROM rt0 WHERE ((- ((+ ('639713981')))));SELECT ((((((rt0.c2)IS(rt0.c2)))AND(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))AND(rt0.c1)), ((((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END)AND(((((rt0.c3)OR(NULL)))AND(rt0.c3)))))OR(((((rt0.c4)AND(rt0.c0)))OR(rt0.c3)))), (NOT (NULL)) FROM vt1, rt0 GROUP BY ((vt1.c0)<<(((rt0.c0)/(rt0.c1)))), ((rt0.c4 COLLATE BINARY)OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c3)))), HEX(DISTINCT rt0.c0), rt0.c4, ((((((((rt0.c2)AND(rt0.c2)))AND(0.29519151204228977)))OR(rt0.c4)))OR(rt0.c2)) COLLATE NOCASE HAVING rt0.c2; -- 0ms;
SELECT DISTINCT ((((((((rt0.c3)OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c4)))OR(vt1.c0)) COLLATE BINARY FROM vt1, rt0; -- 0ms;
SELECT ALL ((((((((vt1.c0)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c2)) COLLATE RTRIM, x'', ((json_quote(rt0.c4)) ISNULL) FROM rt0, vt1 WHERE ((NOT (UPPER(0.6660998923253952)))); -- 0ms;
SELECT ALL AVG(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))) OVER () FROM vt1, rt0; -- 0ms;
SELECT ((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)) COLLATE RTRIM, LIKELIHOOD(vt1.c0, 0.42281492558646927) COLLATE RTRIM, NULL FROM vt1 WHERE (((((((((((x'') BETWEEN ('SOpJ') AND ('-1979543921')))OR((NOT (NULL)))))AND((- (x'')))))OR(('쁟daysY' IN (0.6804400135687513)))))AND((NOT (NULL)))));SELECT ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)))>=(((vt1.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))), AVG(COUNT((((rt0.c4))>=((rt0.c1))))), ((((((((rt0.c2 COLLATE BINARY)AND(rt0.c1 COLLATE NOCASE)))OR(LIKE('y4_e)', vt1.c0))))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c4)>(0Xfad2de6)))) FROM vt1 WHERE ((((('1396637446')>=(0.6964952519454412))) BETWEEN (((NULL)-(0.40320240006970764))) AND ((~ (0.5940388308080732)))));SELECT DISTINCT ((((((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))OR(((rt0.c2)LIKE('?W\rz*iKc')))))AND(SQLITE_SOURCE_ID())))AND(((((rt0.c4)AND(vt1.c0)))OR(rt0.c2)))))OR(((rt0.c3)LIKE(x'a412')))) FROM rt0, vt1; -- 0ms;
SELECT (- (CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN 0.44613686370636396 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 ELSE NULL END)) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c4) OVER () FROM vt1, rt0 GROUP BY (((+ (rt0.c3)))>=(((rt0.c4) IS FALSE))) HAVING (NOT (((rt0.c2)>=(rt0.c3)))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0))) AS REAL) FROM vt1;SELECT ALL NULLIF(DISTINCT NULL, CASE WHEN rt0.c3 THEN rt0.c2 ELSE 7.5905994E7 END) FROM rt0; -- 0ms;
SELECT (NOT (((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))), ((((rt0.c4) IS FALSE))-(((rt0.c4)IS NOT(rt0.c4)))), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c0 END COLLATE RTRIM FROM rt0, vt1; -- 0ms;
SELECT ALL CAST(CASE WHEN rt0.c1 THEN rt0.c4 ELSE 'T.F~1' END AS BLOB), ((((rt0.c2) NOTNULL)) NOT NULL), CAST((((rt0.c2, rt0.c4, vt1.c0, vt1.c0, rt0.c4))<=((rt0.c1, rt0.c3, rt0.c2, rt0.c2, rt0.c3))) AS INTEGER) FROM rt0 WHERE ((((NOT (0X2486013d))) NOTNULL));SELECT (((((((rt0.c4, vt1.c0, rt0.c1)) BETWEEN ((rt0.c0, rt0.c3, vt1.c0)) AND ((rt0.c0, rt0.c1, rt0.c4))))OR(((vt1.c0)<(rt0.c1)))))OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (vt1.c0)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (- (TRIM(rt0.c0))) FROM vt1, rt0 WHERE (((((NULL IN (x'1fea'))))<>((highlight('-1500418246', x'', '-1556477816', '0.806915719816601')))));SELECT DISTINCT (((((rt0.c2))<>((vt1.c0)))) ISNULL), SUM((~ (rt0.c2))) OVER (), (((+ (rt0.c2))) NOT BETWEEN (CASE rt0.c0  WHEN 5.77985415E8 THEN rt0.c2 END) AND (MIN(vt1.c0))) FROM rt0;SELECT ABS(((rt0.c1) NOTNULL)), CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM, 0x3fdce4a FROM vt1, rt0 WHERE (((('Ce*_')) NOT BETWEEN ((CASE x'108a'  WHEN 0.8341125965028452 THEN 0.24035883058978658 END)) AND ((((0.6521116149507189)IS('-1023695699')))))) LIMIT -1; -- 0ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE NOCASE)AND(((vt1.c0)%(rt0.c3)))))AND((~ (rt0.c2)))))OR((((rt0.c1))<>(('0z2~샚'))))))OR((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM vt1, rt0 GROUP BY ((rt0.c0 IN (rt0.c1)) IN ()) HAVING (CASE WHEN x'' THEN rt0.c1 ELSE rt0.c2 END IN ()); -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1; -- 1ms;
SELECT ALL ((((((rt0.c3) NOT BETWEEN (rt0.c4) AND (0xffffffff8e92ee4b)))AND(json_quote(rt0.c2))))AND((rt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT FIRST_VALUE(((vt1.c0) NOTNULL)) OVER () FROM rt0, vt1 ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((vt1.c0)))) IS TRUE)  NULLS FIRST, (((rt0.c1 IN ()))OR((+ (rt0.c3)))), CAST(((rt0.c1) IS FALSE) AS NUMERIC); -- 0ms;
SELECT ALL (~ (NULL)) COLLATE NOCASE FROM vt1, rt0; -- 0ms;
SELECT ((((((((vt1.c0 COLLATE RTRIM)OR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c3 ELSE rt0.c2 END)))AND(MIN(''))))OR(rt0.c2)))AND(((rt0.c0)*(vt1.c0)))) FROM vt1;SELECT ALL ((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c1 ELSE x'' END)+(rt0.c3)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT AVG(rt0.c3) OVER () FROM vt1 WHERE (CAST(']벛P䊽>XB%*' AS INTEGER) COLLATE NOCASE);SELECT DISTINCT json_remove((+ (rt0.c0)), ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)), rt0.c0 COLLATE NOCASE, '-D覜)Ot'), ((((((rt0.c4))>((rt0.c2)))))<((rt0.c1 COLLATE NOCASE))), ((0.1527831035979932)|(((rt0.c2)IS(rt0.c0)))), ((((rt0.c1))>((vt1.c0))) IN (((((vt1.c0)AND(rt0.c3)))AND(rt0.c4)), ((x'8083')&(vt1.c0)))), ((CAST(rt0.c4 AS INTEGER)) NOTNULL) FROM vt1, rt0 GROUP BY ((rt0.c3 COLLATE RTRIM)LIKE(CASE WHEN vt1.c0 THEN x'' END)), json_extract(rt0.c1, ((((vt1.c0)OR(rt0.c1)))AND(vt1.c0)), CAST(rt0.c2 AS NUMERIC), (((rt0.c3)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))), NULL HAVING CASE ((rt0.c3)OR(rt0.c3))  WHEN (~ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE WHEN TOTAL(vt1.c0) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN COALESCE(DISTINCT rt0.c2, rt0.c3) THEN ((((rt0.c3)AND(rt0.c3)))OR(rt0.c1)) WHEN ((rt0.c3) ISNULL) THEN (+ (rt0.c1)) WHEN CASE rt0.c2  WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 END THEN ((rt0.c3) NOTNULL) ELSE ((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c4)) END;SELECT DISTINCT SUM(rt0.c0) FROM rt0, vt1 WHERE ((-1.755919978E9 IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT MIN(vt1.c0)) FROM rt0, vt1 WHERE (CAST((((0xffffffff9a527c65)) BETWEEN ((x'')) AND ((x''))) AS TEXT)); -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((SQLITE_SOURCE_ID())) AND ((SUM(rt0.c1)))), '-2146840489', (rt0.c1 IN ()) FROM vt1, rt0; -- 0ms;
SELECT ALL CAST(CAST(rt0.c3 AS REAL) AS TEXT), (((rt0.c3 IN (rt0.c3, rt0.c2))) BETWEEN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))) AND (AVG(rt0.c2))), COUNT((rt0.c2 IN (vt1.c0, rt0.c1))) OVER () FROM rt0, vt1 LIMIT 908271006; -- 0ms;
SELECT DISTINCT ((('-1129852481')>(rt0.c3)) IN ()) FROM rt0 NOT INDEXED, vt1 WHERE ((CAST(1.740724438E9 AS INTEGER) IN ())); -- 1ms;
SELECT DISTINCT ((((vt1.c0)AND(rt0.c3)))OR(rt0.c4)) COLLATE BINARY FROM rt0, vt1 GROUP BY (((rt0.c1, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c2, CAST(rt0.c4 AS NUMERIC), '0.806915719816601')) AND ((((((rt0.c3)AND(vt1.c0)))OR(rt0.c3)), (rt0.c1 IN (rt0.c0)), TRIM(DISTINCT rt0.c4, rt0.c4)))) HAVING ((((rt0.c1)LIKE(rt0.c3)))!=(DATE(vt1.c0, rt0.c3, rt0.c0, 0.2190593628417512, rt0.c2))) LIMIT -1993265490; -- 0ms;
SELECT rt0.c2, CASE UPPER(rt0.c0)  WHEN NULL THEN COUNT(rt0.c2) WHEN (((vt1.c0, rt0.c3, rt0.c3, rt0.c2, rt0.c1))>((rt0.c3, rt0.c3, rt0.c1, rt0.c4, rt0.c4))) THEN AVG(rt0.c0) WHEN (rt0.c0 IN (rt0.c4)) THEN ((((rt0.c3)AND(rt0.c4)))OR(rt0.c2)) ELSE ((((rt0.c1)AND(vt1.c0)))OR(rt0.c2)) END, DENSE_RANK() OVER () FROM vt1;SELECT DISTINCT json_object(((vt1.c0)>=(rt0.c1)), (rt0.c2 IN (vt1.c0))) FROM vt1;SELECT ALL ((CAST(rt0.c2 AS BLOB))<=(((rt0.c0)!=(rt0.c1)))), LIKELY(DISTINCT (((rt0.c2))<=((rt0.c0)))), ((AVG(rt0.c4)) BETWEEN ((rt0.c2 IN ())) AND (rt0.c3 COLLATE BINARY)) FROM vt1, rt0; -- 3ms;
SELECT 0x16f35ed0, ((TYPEOF(rt0.c2))=((rt0.c2 IN ()))), ((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4))) IS TRUE) FROM rt0, vt1 WHERE (LIKELIHOOD((('F') NOT BETWEEN ('-1928285184') AND (x'')), 0.6111316363798798)); -- 0ms;
SELECT (COUNT(rt0.c4) IN (((((((((867869928)AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(NULL)))) FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN ((0x5e177670 IN ())) AND ((x'6b1f95ee' IN ())))); -- 0ms;
SELECT ALL LAG(((('3U)YDS')) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((((vt1.c0, vt1.c0, vt1.c0))<((vt1.c0, x'6e08', vt1.c0)))))), ((vt1.c0 COLLATE BINARY)>(vt1.c0)), ((((TRIM(DISTINCT vt1.c0))AND(vt1.c0)))OR(UNLIKELY(DISTINCT '-850948775')))) OVER () FROM vt1 WHERE (PRINTF((NULL IN ()))); -- 1ms;
SELECT ((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c4)) COLLATE BINARY FROM vt1 WHERE ((((((NULL)*(x'')), (('-785553826')IS('s<,HHrRy')), (('') NOT BETWEEN (NULL) AND (0X3e4e6804)), ((x'')GLOB(NULL)), ('' IN ())))>((((NULL) NOTNULL), (- (x'63b4')), (('0.49394343669116314')>=('1159414107')), '(' COLLATE BINARY, (x'' IN ()))))) GROUP BY ((((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c2))) NOT BETWEEN (NULL) AND (((rt0.c0)-(rt0.c0)))), '-453476065', ((CAST('' AS REAL)) BETWEEN (((rt0.c2)%(rt0.c2))) AND ((rt0.c4 IN ()))) ORDER BY (((((NOT (rt0.c3)))AND(((((((((0.9317086807846019)AND(rt0.c1)))AND(vt1.c0)))AND(0.24035883058978658)))OR(rt0.c4)))))OR(rt0.c0 COLLATE BINARY)) ASC  NULLS FIRST;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1))) BETWEEN (((rt0.c3)>(rt0.c0))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))), ((rt0.c1 COLLATE NOCASE)&(vt1.c0 COLLATE BINARY)), CAST(NULL AS TEXT), ((((rt0.c4)-(rt0.c4))) BETWEEN (CASE 0Xffffffff828700de  WHEN rt0.c0 THEN rt0.c4 WHEN NULL THEN vt1.c0 WHEN vt1.c0 THEN x'' END) AND (CAST(rt0.c1 AS TEXT))), CAST(((rt0.c3)&(rt0.c3)) AS TEXT) FROM vt1;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND ((rt0.c0 COLLATE RTRIM))) FROM rt0, vt1 GROUP BY CAST(((x'') IS FALSE) AS BLOB); -- 0ms;
SELECT ((CAST(vt1.c0 AS INTEGER))+(CAST(rt0.c4 AS INTEGER))) FROM rt0, vt1 WHERE ((- ((((x'2190', '', 0xffffffffa7dc0825))<(('7b', 0x29061b7e, x'')))))); -- 0ms;
SELECT ALL LAST_VALUE((((+ (vt1.c0))) NOT BETWEEN ((((rt0.c3, rt0.c0, rt0.c3))>((rt0.c3, rt0.c2, rt0.c1)))) AND (((rt0.c3)%(vt1.c0))))) OVER () FROM vt1, rt0; -- 1ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN (x'333f') AND (rt0.c3)))IS NOT(((rt0.c2) BETWEEN ('') AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT MIN((vt1.c0 IN ())), CAST(((rt0.c4)<(vt1.c0)) AS BLOB), (load_extension(rt0.c0, rt0.c2) IN (((rt0.c4)|(vt1.c0)))) FROM rt0, vt1 WHERE (LIKELY((((NULL, x'', '-1023695699'))>(('-1578770860', 343285583, x'')))));SELECT MAX(((rt0.c3)||(rt0.c3))) FROM vt1;SELECT (((+ (vt1.c0)))&(('S*Qrm?lJZ' IN (rt0.c3)))) FROM rt0;SELECT DISTINCT (~ ((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))), rt0.c3, (NOT (CHANGES())) FROM vt1, rt0; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c4)<(x'b307')) THEN rt0.c4 END FROM rt0; -- 0ms;
SELECT ALL TRIM(rt0.c2), (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))<>(((rt0.c4)*(rt0.c2)))), (+ (((rt0.c4) NOTNULL))) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT ((((rt0.c4) IS TRUE)) IS TRUE) FROM rt0, vt1 WHERE (263007718); -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c3 END) IS TRUE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT -641351701 FROM vt1, rt0 WHERE ((((((('-1428000233')AND(x'')))AND(x'1259')))>>((((('1135774108')OR(0.8910509261640969)))AND('_CfF'))))); -- 0ms;
SELECT ALL rt0.c3 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c4)))AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c4)))IS NOT(rt0.c3)) FROM rt0, vt1; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))) AND ((((((rt0.c1)AND(vt1.c0)))AND(rt0.c0))))), CAST(((rt0.c0)<=(x'')) AS REAL), (+ (((rt0.c0) ISNULL))) FROM rt0 WHERE (CAST((- (-847651085)) AS BLOB));SELECT ((((rt0.c2) NOT NULL))GLOB(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, vt1; -- 0ms;
SELECT ALL (NOT (COUNT(x''))) FROM vt1 WHERE (((CAST(-1455257755 AS NUMERIC))-(IFNULL(NULL, x'')))); -- 0ms;
SELECT DISTINCT '343285583' FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0))<=((rt0.c3))) IN (((((x'ec15')AND(rt0.c0)))OR(rt0.c2)))) FROM rt0 WHERE (0Xffffffffa1e5de54); -- 0ms;
SELECT DISTINCT (NOT (((vt1.c0)<>(vt1.c0)))) FROM rt0, vt1 WHERE (CAST(UPPER(DISTINCT x'') AS REAL)) GROUP BY ((0.23483069190536754 COLLATE NOCASE) NOTNULL); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0, vt1 WHERE (CAST(CAST(x'' AS NUMERIC) AS INTEGER)) UNION SELECT DISTINCT ((0X76ece17) IS TRUE) FROM rt0 WHERE (ABS('') COLLATE NOCASE); -- 0ms;
SELECT ((((((rt0.c2)OR(rt0.c4)))AND(rt0.c1))) ISNULL) FROM vt1 WHERE ((NOT (x'' COLLATE NOCASE))) ORDER BY ((CAST(rt0.c0 AS TEXT))IS NOT(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c3))));SELECT ALL vt1.c0 FROM vt1; -- 0ms;
SELECT DISTINCT CASE (((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c4)))  WHEN CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END THEN (~ (rt0.c2)) WHEN ((rt0.c0)*(rt0.c3)) THEN ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)) WHEN (NOT (vt1.c0)) THEN (rt0.c3 IN ()) ELSE ((rt0.c2)IS NOT(rt0.c1)) END, CAST(CAST(rt0.c1 AS REAL) AS NUMERIC), COUNT(*) OVER ( PARTITION BY ((rt0.c0 COLLATE BINARY) BETWEEN (((rt0.c3) IS TRUE)) AND (((((rt0.c3)OR(rt0.c2)))AND(rt0.c3)))), CASE WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM) FROM rt0;SELECT ALL ((rt0.c1 IN (rt0.c4)) IN ()), (((CAST(x'19952157' AS INTEGER)))<=((TOTAL(rt0.c3)))), (((((rt0.c4))<=((vt1.c0)))) BETWEEN ((rt0.c2 IN (rt0.c2))) AND (IFNULL(rt0.c1, rt0.c0))) FROM rt0, vt1 LIMIT -1263402353 OFFSET -1342690709; -- 0ms;
SELECT TRIM(CAST(-1.963346623E9 AS INTEGER)), '', x'd8b92145' FROM vt1 NOT INDEXED LIMIT -1328184201; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c3) IS TRUE) THEN ((NULL) BETWEEN (rt0.c3) AND (rt0.c1)) ELSE NULL COLLATE RTRIM END FROM vt1 WHERE ((+ (CASE 0.7739408596458134  WHEN '851557531' THEN NULL END)));SELECT ALL COUNT(((rt0.c1)&(rt0.c1))) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(rt0.c4)))OR(((rt0.c3)>(rt0.c3)))) FROM vt1 WHERE (((((NULL)*(''))) NOT BETWEEN (0.4008907907247664) AND ((((((((('na0)r')OR(0.8475651091623991)))OR(x'')))OR(NULL)))AND(NULL)))));SELECT DISTINCT ((((CASE WHEN rt0.c2 THEN rt0.c4 END)AND(rt0.c1 COLLATE RTRIM)))AND(TOTAL(rt0.c1))), (NOT ((- (rt0.c2)))), rt0.c4 FROM rt0, vt1 WHERE (((((NOT (0.4425365941272861))))<=(('-972957874' COLLATE RTRIM)))); -- 0ms;
SELECT ALL ((((rt0.c3)&(vt1.c0)))>('gxL(	qkk')) FROM rt0 WHERE ((0xfffffffffa3d7e05 COLLATE RTRIM IN ()));SELECT -1.902973365E9, CAST(vt1.c0 AS BLOB) COLLATE NOCASE, (- ('_,LT!gb9w' COLLATE BINARY)) FROM vt1; -- 1ms;
SELECT (((((((((((((vt1.c0 IN ()))AND(rt0.c3 COLLATE NOCASE)))OR('-617866278' COLLATE BINARY)))AND((rt0.c4 IN ()))))OR(((vt1.c0)||(rt0.c1)))))AND(((x'')AND(rt0.c4)))))OR(((rt0.c0) IS FALSE))) FROM rt0, vt1 WHERE ((((x'6e0e' COLLATE NOCASE))>((NULL)))); -- 0ms;
SELECT ((((rt0.c0)<(rt0.c0))) IS TRUE), (((0.6804400135687513))>=(((- (0.4329684517493919))))), TOTAL(GROUP_CONCAT(((((vt1.c0)OR(rt0.c3)))OR(vt1.c0)))) FROM vt1, rt0 LIMIT -657473318 OFFSET 131944733;SELECT ALL ((CAST(x'e99c' AS BLOB))%((rt0.c2 IN ()))), (((vt1.c0)) NOT BETWEEN ((vt1.c0 COLLATE RTRIM)) AND ((((rt0.c0)>(rt0.c4))))), (vt1.c0 COLLATE RTRIM IN ()) FROM rt0, vt1 WHERE (LIKELY(DISTINCT ((0.8904976467351524)>(NULL)))); -- 0ms;
SELECT rt0.c0 FROM rt0 WHERE (CAST(((']d')!=(x'5b07')) AS INTEGER)); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (NULL COLLATE NOCASE) AND (rt0.c1)) FROM vt1, rt0 ORDER BY ((((((((((rt0.c3) IS FALSE))OR(CASE rt0.c2  WHEN rt0.c2 THEN x'' WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN vt1.c0 END)))AND(((((rt0.c4)OR(vt1.c0)))AND(rt0.c1)))))AND((((rt0.c0))<((rt0.c3))))))AND(((rt0.c2)/(rt0.c3)))) DESC, (rt0.c2 IN ()); -- 0ms;
SELECT (((~ (vt1.c0)))>>((rt0.c4 IN ()))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))<(0.691657930266523)), -6.96374869E8, (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN 0.9719150372212341 ELSE rt0.c2 END, CAST(rt0.c1 AS TEXT), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 END))>=((GROUP_CONCAT(vt1.c0), CASE vt1.c0  WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c0 END, rt0.c4 COLLATE RTRIM))), CASE WHEN (((rt0.c4, rt0.c0, vt1.c0)) NOT BETWEEN ((vt1.c0, vt1.c0, rt0.c1)) AND (('-1094076955', rt0.c3, rt0.c4))) THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)) END, ((vt1.c0)||(rt0.c1)) FROM vt1 WHERE ((((CAST(0.0047675025520558245 AS TEXT), ((NULL)==(-2.051276427E9)), ((0X1e8e473a)-(x'')), 0.9104508579952103 COLLATE RTRIM, ((((((((((((1.00185997E9)OR(NULL)))OR(x'')))AND(-396576857)))AND('1171575123')))OR(0.30207331279426186)))OR('{㡯'))))>=(((~ (x'')), CAST('-1911406444' AS INTEGER), IFNULL(DISTINCT NULL, '2062524660'), ((((((((0.1218981329218699)OR('0.7847049792417155')))OR(x'')))AND(-3.45465311E8)))AND('0.23483069190536754')), ((x'')IS NOT(x'c715'))))));SELECT ALL CASE WHEN ((')C')==(rt0.c3)) THEN ((rt0.c4)GLOB(rt0.c3)) END FROM rt0, vt1 WHERE ((((0.3374367715648485)*(0.04633473681425471)) IN (json_valid(1745636640)))) LIMIT -1240657387 OFFSET -1578770860; -- 0ms;
SELECT DISTINCT (((rt0.c3)) NOT BETWEEN ((rt0.c0 COLLATE NOCASE)) AND ((((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c2))))) FROM rt0, vt1; -- 0ms;
SELECT ((rt0.c4) ISNULL) FROM vt1 WHERE (((LOWER(x'3324')) IS FALSE)) LIMIT 1404661869;SELECT DISTINCT (NOT (CASE WHEN vt1.c0 THEN rt0.c1 END)), ((vt1.c0)>=(x'020e')), ((CAST(rt0.c4 AS TEXT)) NOT BETWEEN (((rt0.c2)>>(vt1.c0))) AND (TRIM(DISTINCT rt0.c2))), LIKELIHOOD((rt0.c0 IN ()), 0.8316271343009605), rt0.c2, '-1166272592' COLLATE BINARY, ((('' IN (rt0.c2))) IS FALSE) FROM rt0, vt1 WHERE ((((('-657473318') IS TRUE))LIKE((('-1e500') NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c4)%(rt0.c1)))/(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) FROM vt1 WHERE ((~ (((('-1266625100')) BETWEEN ((NULL)) AND ((NULL)))))) ORDER BY rt0.c0  NULLS FIRST;SELECT ALL (rt0.c3 IN ()), rt0.c0, NULL FROM vt1, rt0; -- 0ms;
SELECT ALL (NOT (((vt1.c0) NOTNULL))) FROM rt0;SELECT ALL (((rt0.c0, rt0.c2, '0Z2~샚', '36331944', rt0.c3)) NOT BETWEEN (((vt1.c0 IN ()), SUM('-1500418246'), (+ (vt1.c0)), COUNT(*), ((rt0.c2)|(rt0.c3)))) AND (((NULL IN ('', vt1.c0)), CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END, '1475898529', ((vt1.c0)*(vt1.c0)), TIME(rt0.c0, rt0.c3, NULL)))), LAST_VALUE('1856451629') OVER (), ('' IN ()), (- (COUNT(rt0.c0))), (CAST(rt0.c0 AS INTEGER) IN ()) FROM vt1, rt0 WHERE ((~ (NULL)) COLLATE NOCASE); -- 0ms;
SELECT CAST(NULL AS INTEGER) FROM rt0, vt1; -- 0ms;
SELECT 0.9495032540383469, ((((rt0.c0)+(rt0.c3)))>=(((rt0.c0) ISNULL))), (((((((((vt1.c0)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)) IN ()) FROM vt1, rt0 ORDER BY DATETIME(((rt0.c1) IS FALSE), (~ (rt0.c2)), ((rt0.c0)>>(rt0.c4))), CASE WHEN (((rt0.c2, rt0.c4, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, vt1.c0)) AND ((rt0.c4, rt0.c4, rt0.c2))) THEN ((rt0.c0)>>(rt0.c4)) END; -- 0ms;
SELECT ALL ((((rt0.c4) NOTNULL))|(((((((((rt0.c0)AND(-71025572)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c2)))) FROM rt0 WHERE (0.2566310157928483) ORDER BY ((((rt0.c2 IN (0.12125609427721473))))>=((0x11a097de)))  NULLS FIRST, ((-1.761690261E9)/(((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))) ASC  NULLS LAST, (((((rt0.c4)OR(NULL)))OR(0.6454106954924127)) IN ()); -- 1ms;
SELECT GROUP_CONCAT(((((rt0.c0)AND(rt0.c4)))OR(rt0.c4))) OVER () FROM vt1 ORDER BY (+ (COALESCE(DISTINCT rt0.c1, rt0.c0, rt0.c4, rt0.c3)));SELECT ALL rt0.c3, (NOT (rt0.c1)) COLLATE NOCASE COLLATE NOCASE, CASE CAST(rt0.c3 AS INTEGER)  WHEN ((((rt0.c0)AND(rt0.c1)))OR(vt1.c0)) THEN ((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)) ELSE rt0.c1 COLLATE BINARY END FROM rt0, vt1 WHERE (((json_valid(x'')) NOT BETWEEN ('M2H' COLLATE RTRIM) AND ((((0.8517762742933273, 0Xffffffff8fdd4eb5, x'')) NOT BETWEEN ((0xffffffffbfc61719, 5.470303319616843E-4, NULL)) AND ((0.9854783204822888, '?9', 1784837383)))))); -- 0ms;
SELECT ALL ((MIN(rt0.c3)) NOT NULL), NULL COLLATE BINARY, COUNT(((rt0.c3)<=(rt0.c0))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM vt1, rt0 WHERE (CASE ((('1586982995')) NOT BETWEEN ((0Xffffffffe29baf9d)) AND (('-810278486')))  WHEN (('-1578770860') BETWEEN (-9.20412935E8) AND (x'0c87ff51')) THEN ((NULL) IS FALSE) END) ORDER BY ((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)))AND(((rt0.c1) ISNULL))))AND((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c3)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c0 THEN rt0.c1 END IN ()) FROM rt0, vt1 WHERE (1994401308); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN (UPPER(vt1.c0)) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)))), 0xffffffff98f5ccb7, (((rt0.c4, rt0.c2, 0.15901234187796343)) NOT BETWEEN ((-8.50948775E8, CASE rt0.c3  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END, ((rt0.c4)|(rt0.c2)))) AND (((vt1.c0 IN ()), ((vt1.c0) IS FALSE), (((rt0.c0, vt1.c0, 0.5750518265495297))>=((rt0.c2, rt0.c0, rt0.c1)))))) FROM vt1 WHERE (LIKELIHOOD(CAST('1496540186' AS NUMERIC), 0.9275860285247112)) ORDER BY ((((rt0.c4)IS NOT(rt0.c2)))LIKE(CAST(rt0.c0 AS NUMERIC)))  NULLS LAST;SELECT (('-597968941')/(CASE '75905994'  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END)) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT CASE WHEN (('-1972696361') ISNULL) THEN rt0.c4 END FROM rt0, vt1 WHERE ('1515145396') GROUP BY (NOT (((((rt0.c4)AND(NULL)))AND(rt0.c0)))) HAVING (((- (rt0.c0)))*(((((rt0.c1)OR(8.35879666E8)))AND(rt0.c4)))); -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c0)) AS NUMERIC), CAST(((vt1.c0) NOT BETWEEN (rt0.c4) AND (NULL)) AS BLOB), SQLITE_SOURCE_ID() FROM rt0 ORDER BY CAST(rt0.c1 AS BLOB) ASC;SELECT ALL MIN(((NULL)&(rt0.c4))) COLLATE NOCASE, CAST(TYPEOF(vt1.c0) AS BLOB), (NOT (((rt0.c2)<<(rt0.c4)))) FROM rt0;SELECT rt0.c3 FROM rt0 ORDER BY (~ (((((vt1.c0)OR(rt0.c1)))OR(rt0.c0)))) ASC, ((rt0.c1 COLLATE NOCASE)>=('-920412935' COLLATE BINARY)) DESC  NULLS LAST LIMIT 1983155112 OFFSET -1328184201;SELECT DISTINCT CASE WHEN ((rt0.c0)<=(rt0.c0)) THEN (vt1.c0 IN ()) WHEN (- (rt0.c4)) THEN ((vt1.c0)OR(rt0.c3)) WHEN (((''))<((rt0.c1))) THEN ((rt0.c1)&(vt1.c0)) WHEN ((vt1.c0)%(rt0.c4)) THEN ((rt0.c0)*('KV')) WHEN TRIM(vt1.c0, rt0.c1) THEN rt0.c1 COLLATE RTRIM END FROM vt1, rt0 WHERE ((~ (((x'd0d3') ISNULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT NULL))|(vt1.c0)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c4)>(rt0.c2)))>=('-1435036236')) FROM vt1;SELECT ((rt0.c2 COLLATE NOCASE)&(((rt0.c2)+(rt0.c0)))), ((((((rt0.c1) NOT NULL))OR(CAST(rt0.c3 AS BLOB))))OR((NULL IN (rt0.c4)))), ((((((((((((UNLIKELY(DISTINCT rt0.c0))AND(load_extension(rt0.c2, rt0.c0))))AND(CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c2 END)))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))))OR((rt0.c0 IN (rt0.c3)))))AND(((rt0.c1)AND(rt0.c2)))))OR((rt0.c4 IN ()))), (((6.6965066E7)) BETWEEN ((((rt0.c1)/(rt0.c3)))) AND ((LOWER(rt0.c3)))), ((CAST(rt0.c2 AS BLOB)) IS TRUE) FROM vt1 ORDER BY ((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c4)))AND(x''))) ISNULL) DESC LIMIT 343285583 OFFSET 413772450;SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt0.c1)OR(rt0.c2)), 0.6028819085427528) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (0.27633412357709386 IN ()) FROM vt1 WHERE ('긘\n.o'); -- 0ms;
SELECT ALL NULLIF(((rt0.c0)&(rt0.c0)), ((((rt0.c4)AND(rt0.c4)))AND(rt0.c1))) FROM rt0, vt1 WHERE (((((0.517906355405621 COLLATE NOCASE)AND(((((0X253e926e)AND('')))OR(NULL)))))AND((('Q{ABZ')|(0.6454106954924127))))); -- 0ms;
SELECT ALL ((load_extension(rt0.c0, rt0.c0)) NOTNULL) FROM vt1;SELECT DISTINCT ((((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0))) NOT BETWEEN (((rt0.c2)!=(rt0.c2))) AND (QUOTE(rt0.c0))), ((((rt0.c1 IN ())))>=(((- (vt1.c0))))), ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c0 END) NOTNULL) FROM rt0 ORDER BY x'' DESC;SELECT ALL ((((rt0.c1) ISNULL)) NOT BETWEEN (CAST(rt0.c3 AS REAL)) AND (IFNULL(rt0.c3, rt0.c2))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT x'1ad8', COUNT(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END) OVER ( PARTITION BY ((((((rt0.c3) IS FALSE))AND((rt0.c0 IN ()))))OR((NOT (rt0.c3)))), CAST(json_extract(rt0.c2, rt0.c2, rt0.c2, rt0.c2) AS TEXT)), LAG(((rt0.c4 IN ()) IN ()), (((NOT (rt0.c2))) NOT NULL), (((rt0.c3)) BETWEEN ((((((rt0.c2)AND(rt0.c3)))OR(1.994401308E9)))) AND ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c0)))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0, vt1 ORDER BY CASE WHEN ((rt0.c3)%(rt0.c0)) THEN rt0.c3 COLLATE NOCASE ELSE CASE rt0.c1  WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c4 END END ASC  NULLS FIRST;SELECT vt1.c0, SUM(((((rt0.c3)AND(rt0.c0)))AND(rt0.c3))) OVER ( PARTITION BY ((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1)))||(((rt0.c2) NOTNULL))), (((((rt0.c2, rt0.c1, rt0.c1))<=((rt0.c2, vt1.c0, rt0.c2)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c1))))), (~ ((NOT (rt0.c2)))) FROM rt0 GROUP BY x'' HAVING (+ (GROUP_CONCAT(rt0.c3)));SELECT DISTINCT GROUP_CONCAT((+ (rt0.c1))) OVER (), SUM(CAST(vt1.c0 AS NUMERIC)), MIN((((rt0.c4))>=((rt0.c2)))), (NOT (((((((((rt0.c2)AND(rt0.c4)))OR(vt1.c0)))AND(rt0.c3)))AND(rt0.c3)))), (NOT (0.037700697698204944)) COLLATE BINARY FROM vt1 ORDER BY ((vt1.c0)!=('-1638007914')) COLLATE NOCASE ASC, JULIANDAY(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)), COALESCE(rt0.c0, rt0.c0, rt0.c0, rt0.c3), x'' COLLATE BINARY)  NULLS LAST LIMIT -1688234232 OFFSET -327543717;SELECT ALL SUM(((rt0.c2)>('')) COLLATE BINARY), COALESCE(DISTINCT ((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c2)), MAX(rt0.c1)), ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0)>=(vt1.c0))) AND (CAST(vt1.c0 AS INTEGER))) FROM rt0, vt1 WHERE (((HEX(-1962788907)) ISNULL)); -- 0ms;
SELECT DISTINCT (((1791978815) NOT BETWEEN (rt0.c1) AND (rt0.c1)) IN ()) FROM vt1 WHERE (((((x'')==(NULL)))<(((((((((NULL)OR(NULL)))AND(x'9d615f69')))AND(x'')))OR(NULL))))); -- 1ms;
SELECT DISTINCT PERCENT_RANK() OVER (), rt0.c0, GROUP_CONCAT(CAST(rt0.c4 AS REAL)) OVER () FROM vt1 WHERE (((((NULL)*(1264252130)))AND(x'd498')));SELECT ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))>>(0.963930224308478)) FROM rt0, vt1 WHERE ((((0xffffffff978ea2ee)) NOT BETWEEN (((('') IS FALSE))) AND ((-1613659763)))); -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(vt1.c0) IN ()) FROM vt1, rt0 WHERE ((((CASE WHEN NULL THEN x'' END))<>(((NOT (-7.96765463E8)))))); -- 0ms;
SELECT ALL (((rt0.c4))<=((rt0.c2))) COLLATE BINARY FROM vt1, rt0 WHERE (((('\rmOw')) BETWEEN (((('1678898320')||(NULL)))) AND (((x'5790' IN ()))))) ORDER BY vt1.c0  NULLS FIRST; -- 0ms;
SELECT (((rt0.c4) NOTNULL) IN ()) FROM rt0, vt1 WHERE (((((x'505b36e4')>(x'f43f')))LIKE(json_remove(-839699292, '', NULL, NULL))));SELECT PERCENT_RANK() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), (((((vt1.c0 IN (rt0.c1, vt1.c0)))AND(AVG(-941009194))))OR(((rt0.c4) NOT BETWEEN (rt0.c1) AND (0.1587724491951913)))), ((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))+((rt0.c2 IN ()))) FROM vt1, rt0; -- 0ms;
SELECT rt0.c0, MIN(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))), ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE FROM rt0, vt1 WHERE (((((x'')<=(NULL))) ISNULL)) ORDER BY CAST((- (rt0.c1)) AS REAL) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)>>(rt0.c3)) AS INTEGER) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 COLLATE RTRIM THEN STRFTIME(rt0.c0, vt1.c0, rt0.c1) ELSE x'' END, (NOT (((rt0.c4)AND(rt0.c1)))), ((rt0.c2 IN ()) IN ()) FROM rt0, vt1 WHERE (((((((x'')) BETWEEN (('')) AND ((-2.013293023E9))), (('')|(x'')), ((-940464416) NOTNULL)))<((((0.24411227055580464)!=(0.377426295416465)), 0.7847049792417155, (NOT ('-396576857')))))); -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (rt0.c2) AND ('&5Y3{')), (((rt0.c4)) BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((LOWER(vt1.c0)))), COUNT((((rt0.c3, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c3)) AND ((rt0.c0, rt0.c1, rt0.c4)))) OVER () FROM rt0 WHERE ((((NOT ('-1467664810'))) BETWEEN (x'') AND ('n2	|M-RRB' COLLATE BINARY)));SELECT ((((((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c4)))OR((NOT (vt1.c0)))))AND(TOTAL(rt0.c4))))AND(rt0.c4 COLLATE RTRIM)))AND(COUNT(rt0.c1))), NULL, MIN(((rt0.c0) IS TRUE)) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), ((((vt1.c0)*(rt0.c3)))>(1116822780)), (((((x'', rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, rt0.c3)) AND ((rt0.c4, x'fd00', vt1.c0))))<>(CAST(rt0.c3 AS REAL))) FROM rt0, vt1 WHERE (((CASE 0.3963313531565601  WHEN NULL THEN x'' ELSE 6.6965066E7 END)IS NOT(((NULL)AND(x'56e3'))))) LIMIT -384351614; -- 1ms;
SELECT DISTINCT CAST(0xffffffffed162a4a AS TEXT) COLLATE RTRIM FROM rt0 WHERE ('\}'); -- 0ms;
SELECT DISTINCT (((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) IN (rt0.c1 COLLATE NOCASE)) FROM vt1 WHERE ((((('81379162')IS(0.7506620456091493))) BETWEEN ((+ (NULL))) AND ((+ (NULL)))));SELECT ((((CASE WHEN rt0.c2 THEN NULL WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c4 END)AND((rt0.c1 IN ()))))OR(((vt1.c0) IS TRUE))) FROM vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c4)<=(rt0.c0))) ISNULL) FROM rt0, vt1; -- 0ms;
SELECT ALL CAST(((rt0.c2)>(rt0.c3)) AS TEXT), ((vt1.c0 COLLATE NOCASE) BETWEEN ((~ (rt0.c1))) AND (((((((((((((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c4)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c3)))AND(vt1.c0)))AND(rt0.c2)))AND(rt0.c1)))), x'' FROM rt0 WHERE (((('', x'0bf5', 'k19-')) BETWEEN ((('1159414107' IN ()), NULL COLLATE BINARY, NULL COLLATE RTRIM)) AND ((LIKE(0.10516470439117698, NULL, '-'), ((']d')<=('\nKIxv')), CAST('' AS REAL)))));SELECT ALL rt0.c1 FROM vt1, rt0 WHERE (TIME((+ (0.3191876999570231)), (('k19-')LIKE('-1972696361')), INSTR(0.5266304165004624, 0.4425365941272861), ((NULL)IS(NULL)), (('706115466')<(0.4352298391751136)))); -- 0ms;
SELECT COUNT(rt0.c1) OVER () FROM vt1, rt0 WHERE ((((((('')AND(x'f846')))OR('t쓫'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (rt0.c3 COLLATE BINARY IN ()) FROM vt1 WHERE ((~ (((((0.6208824010716145)OR(x'')))AND(x''))))) LIMIT -94619254 OFFSET 2026652255; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))OR(PRINTF(rt0.c3, rt0.c3, rt0.c4))))AND(CAST(rt0.c0 AS INTEGER))))AND(rt0.c0 COLLATE RTRIM)))AND(vt1.c0)) FROM vt1, rt0 WHERE ((+ (((((0.845942806928087)AND(NULL)))OR(''''))))); -- 0ms;
SELECT ALL (rt0.c1 IN ()), ((((QUOTE(rt0.c4))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)), COUNT(((((NULL)OR('1231982449')))OR(rt0.c4))) OVER () FROM vt1, rt0 WHERE ((~ (-1078413816))); -- 0ms;
SELECT (((rt0.c1 IN ())) IS FALSE), ((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR((~ (rt0.c2)))))OR(rt0.c4)), (((((rt0.c2, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND ((vt1.c0, rt0.c3, rt0.c0)))) NOT NULL) FROM rt0, vt1 WHERE ((~ ((((x'')) BETWEEN ((0.10453730702614994)) AND ((NULL)))))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN (((~ (rt0.c2)))) AND ((TRIM(vt1.c0)))), GROUP_CONCAT(rt0.c1), CASE CASE rt0.c0  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c3 END  WHEN rt0.c0 COLLATE NOCASE THEN ((((rt0.c4)AND(x'')))OR(vt1.c0)) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c4))!=((rt0.c2))) WHEN NULL THEN (((x'89a2'))<=((rt0.c1))) END FROM rt0, vt1 GROUP BY (vt1.c0 COLLATE RTRIM IN (CAST(rt0.c1 AS BLOB), CASE WHEN rt0.c2 THEN rt0.c4 ELSE 0.8255733161665539 END)); -- 0ms;
SELECT DISTINCT (MIN(rt0.c4, vt1.c0) IN ()), (((((rt0.c3))>=((rt0.c0))))AND(((rt0.c0)GLOB(rt0.c2)))), json_valid(rt0.c0) COLLATE BINARY FROM vt1, rt0; -- 0ms;
SELECT DISTINCT RANK() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) IS FALSE) FROM vt1;SELECT DISTINCT ((rt0.c0)<=((NOT (rt0.c3)))), HEX(CAST(vt1.c0 AS REAL)), COUNT(*) OVER () FROM vt1;SELECT DISTINCT (- (x'' COLLATE RTRIM)) FROM vt1 WHERE (CAST(CASE x''  WHEN 'Q?' THEN 0x6e3bdec8 ELSE '' END AS INTEGER)); -- 0ms;
SELECT CAST(((((((((((((rt0.c4)OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c1)) AS TEXT) FROM vt1 LIMIT -829466776 OFFSET -400411930;SELECT ALL ((CAST(rt0.c3 AS INTEGER))/((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((x'', rt0.c1, rt0.c1)) AND ((rt0.c1, 0.2506338556259379, rt0.c0))))), '882480191', json_array_length(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c4 END) FROM rt0 WHERE (CASE (NULL IN (NULL, NULL))  WHEN (- (NULL)) THEN TIME(NULL, x'623b', NULL, '669480676', x'') WHEN (+ ('-177902831')) THEN (0.33209945334596036 IN ()) WHEN LOWER(x'5727') THEN ((((NULL)OR(NULL)))AND(NULL)) WHEN ABS(DISTINCT 'b㹕') THEN (('') NOT NULL) WHEN ((((((((NULL)AND('')))AND(0.12731225295717008)))OR(-2110284089)))OR(0.30207331279426186)) THEN (+ (NULL)) ELSE (+ ('m*>{૗脫Fj迮')) END) GROUP BY (('-1165145799') IS TRUE) ORDER BY (((vt1.c0 IN (rt0.c0))) NOT NULL), ((vt1.c0 COLLATE NOCASE)|((~ (vt1.c0)))) DESC  NULLS FIRST;SELECT DISTINCT UPPER(TOTAL(vt1.c0)), INSTR(CASE '-948885040'  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN NULL ELSE rt0.c4 END, rt0.c2), ((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c4)))AND(vt1.c0)))OR(rt0.c3)))LIKE((- (rt0.c2)))), (+ (MIN(rt0.c3))), (((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3)))) AND ((((0.23107426764877592)*(rt0.c1))))) FROM rt0 WHERE (CASE CAST('-1778773829' AS TEXT)  WHEN ((('-1066918308'))=((''))) THEN ((x'') IS FALSE) ELSE x'' COLLATE RTRIM END);SELECT ALL ((- (rt0.c0)) IN ()) FROM vt1 WHERE (((+ (0.11610341183007777)) IN ((((x'', NULL, 0.7404235570606421)) BETWEEN (('-1248659967', 'oፁ_2YXQ譆K', '-785553826')) AND ((0.2755317383880882, 0xffffffffc3560999, 'T.F~1'))), json_object('-494996920', 0X593fdf4e, 1.359521466E9, 48720664))));SELECT AVG(LIKELY(rt0.c2)) OVER () FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT COUNT((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))), vt1.c0, CAST((rt0.c0 IN ()) AS INTEGER) FROM vt1 WHERE (((((x'') BETWEEN ('Eꮄ') AND (x'69f0'))) IS FALSE)) ORDER BY (((0.766710406694782)) BETWEEN ((((rt0.c3)+(rt0.c0)))) AND ((((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c1)))))  NULLS FIRST;SELECT DISTINCT (((+ (rt0.c1)))GLOB((((vt1.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))), MAX(COUNT(*)), 0x31d282f2 FROM vt1;SELECT ALL rt0.c3, (((rt0.c1)) BETWEEN ((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)) AND ((rt0.c2))), CAST(NULL COLLATE NOCASE AS BLOB) FROM rt0; -- 1ms;
SELECT (NOT (rt0.c2 COLLATE RTRIM)) FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((vt1.c0)) AND ((0X7fffffffffffffff)))) NOT BETWEEN (rt0.c4) AND (((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c2))));SELECT (((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)) IN ()) FROM vt1; -- 0ms;
SELECT ALL ('' IN ((- (rt0.c3)))) FROM vt1, rt0 WHERE (((NULL) ISNULL) COLLATE BINARY); -- 0ms;
SELECT ALL json_array(((rt0.c3) ISNULL), ((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)), CAST(rt0.c0 AS INTEGER), MAX(rt0.c0)) FROM rt0 WHERE (0Xffffffffc88cfd54) ORDER BY rt0.c4  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((CAST(1703529300 AS INTEGER))OR(((rt0.c3)<(rt0.c4)))))OR(((rt0.c3)!=(rt0.c0)))), ((((rt0.c3)>=(rt0.c0)))AND(TOTAL(-1455388136))), ROW_NUMBER() OVER () FROM vt1 GROUP BY HEX((rt0.c2 IN ('', vt1.c0)));SELECT DISTINCT (((vt1.c0 IN ()))>=(COUNT(*))), IFNULL(((rt0.c1) IS TRUE), UNLIKELY(0.1815892059777654)), ((((NULLIF(rt0.c0, vt1.c0))OR(((rt0.c3)AND(rt0.c2)))))OR(rt0.c4)), ((((rt0.c4) IS TRUE)) BETWEEN (((((rt0.c2)AND(rt0.c4)))OR(rt0.c1))) AND (MIN(x''))), CASE WHEN ((rt0.c4)<=(rt0.c4)) THEN vt1.c0 COLLATE RTRIM END, NTH_VALUE(ABS((~ (vt1.c0))), vt1.c0) OVER (), NTILE(json_object('0.8904976467351524', ((vt1.c0)|(vt1.c0)))) OVER () FROM vt1 WHERE (((x'') BETWEEN ('^') AND (0.29342474919327133)) COLLATE NOCASE);SELECT DISTINCT (((vt1.c0)>(rt0.c3)) IN (((0.1982128642628137) NOT NULL))), ((vt1.c0 COLLATE BINARY) ISNULL), (rt0.c0 IN ()) COLLATE RTRIM FROM vt1, rt0; -- 2ms;
SELECT DISTINCT TOTAL((- (vt1.c0))) FROM rt0;SELECT ALL DENSE_RANK() OVER (), COUNT(((rt0.c3) BETWEEN (vt1.c0) AND (rt0.c2))), ((((vt1.c0)AND(NULL)))/(((rt0.c3) ISNULL))) FROM rt0, vt1 WHERE ((((x'')) NOT BETWEEN ((STRFTIME(-902517364, x'', 0.11006282997196537, -575922770, '-941009194'))) AND ((0x67eed350 COLLATE RTRIM)))); -- 0ms;
SELECT (('-730750037') BETWEEN ('1159414107') AND (CAST(rt0.c4 AS TEXT))) FROM rt0 WHERE ((((0xffffffff95491268)) BETWEEN ((((NULL)||('0.6454106954924127')))) AND ((CAST('' AS REAL))))) ORDER BY ((((((vt1.c0)OR(rt0.c1)))AND(CASE WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN '-1450665456' THEN rt0.c0 WHEN rt0.c0 THEN rt0.c3 END)))AND(x''));SELECT ALL SUM((((rt0.c0))<=((rt0.c0)))) FROM vt1 WHERE (((-0.0)|(MIN(0.08453879083292337, -1013623816, '', '1791978815', '', '-1029544453'))));SELECT ((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) NOT BETWEEN (((rt0.c1)||(rt0.c3))) AND ((rt0.c2 IN ()))) FROM vt1, rt0 WHERE (CASE WHEN (((((((('hj὏')OR('1712420620')))OR(0.9316425462941993)))AND(0.6897386899358016)))AND(0.3404219823220742)) THEN '1001859970' COLLATE NOCASE ELSE COALESCE(NULL, '-2103786745') END) ORDER BY (((rt0.c1))>=((rt0.c1))) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((rt0.c4)OR(rt0.c0)))OR(MIN(vt1.c0))))AND((((vt1.c0)) NOT BETWEEN ((0x619fac28)) AND ((rt0.c1))))) FROM rt0, vt1 WHERE (CASE CASE 0.7257503191225103  WHEN '-941009194' THEN 706115466 WHEN NULL THEN '-396576857' WHEN '' THEN NULL END  WHEN (0.947180377003567 IN ('0.44882762805316867')) THEN (0xffffffff93f3fb94 IN ()) ELSE (x'' IN (x'')) END); -- 0ms;
SELECT ALL (((((((((((rt0.c4)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c3)))OR(rt0.c0))))<>((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE rt0.c0 END))), (~ ((('幛le#kt')>>(rt0.c1)))), (~ (rt0.c0)) COLLATE RTRIM FROM rt0, vt1 WHERE (((x'4f9f') NOT BETWEEN ('971921571') AND ('1994401308')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM((NOT (rt0.c3))) OVER () FROM vt1, rt0 WHERE (((((0.9095752745519333)==(1.368532667E9)))-((~ (x''))))) GROUP BY CASE (((rt0.c1))<((rt0.c1)))  WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) THEN ((0.4863000128193046)/(rt0.c0)) WHEN (NOT (rt0.c4)) THEN (((rt0.c2, rt0.c0, vt1.c0)) NOT BETWEEN ((rt0.c4, rt0.c0, vt1.c0)) AND ((vt1.c0, rt0.c0, vt1.c0))) WHEN (- (rt0.c2)) THEN ((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c2)) END; -- 0ms;
SELECT ALL ((NULLIF(DISTINCT rt0.c4, rt0.c2))>(UPPER(DISTINCT rt0.c3))), COUNT(*) OVER (), PERCENT_RANK() OVER () FROM rt0 WHERE (CAST(0x2b5fdfb6 COLLATE BINARY AS NUMERIC)) GROUP BY rt0.c3; -- 0ms;
SELECT ((rt0.c2)>(((rt0.c2) ISNULL))) FROM vt1;SELECT (((~ (vt1.c0)))||(((((rt0.c3)OR(rt0.c0)))AND(vt1.c0)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((x'') NOTNULL) FROM rt0, vt1 WHERE ((x'' IN ())) GROUP BY 0.9152841534655317 LIMIT 178226556 OFFSET 547387533; -- 0ms;
SELECT DISTINCT (((~ (rt0.c3)))/(((rt0.c4)|(rt0.c3)))), CASE rt0.c4  WHEN ((vt1.c0)IS NOT(rt0.c2)) THEN NULL WHEN CASE rt0.c3  WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c4 END THEN (+ (rt0.c3)) WHEN (NOT (rt0.c1)) THEN rt0.c3 COLLATE BINARY WHEN rt0.c4 COLLATE NOCASE THEN CAST(rt0.c1 AS INTEGER) WHEN 0.9797462497422127 THEN (~ (rt0.c2)) END, rt0.c2 FROM vt1, rt0; -- 0ms;
SELECT (((rt0.c2) NOT NULL) IN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (NULL)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM vt1;SELECT DISTINCT (('?4N') NOT NULL), COUNT(*) COLLATE RTRIM, ((((((vt1.c0)*(rt0.c0)))AND((~ (x'')))))OR((~ (rt0.c4)))) FROM rt0, vt1; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_USED((~ (rt0.c1))), GROUP_CONCAT(json_insert(rt0.c1, NULL, rt0.c4, rt0.c3, rt0.c2)) OVER ( ORDER BY (((rt0.c2 IN ())) NOT BETWEEN (IFNULL(rt0.c0, rt0.c2)) AND (INSTR(rt0.c1, rt0.c3))) ASC  NULLS FIRST GROUPS  UNBOUNDED PRECEDING), ((((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)))AND(STRFTIME(rt0.c4, rt0.c4, rt0.c2, rt0.c4, rt0.c2))))AND((~ (rt0.c3)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c4)) AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c2)AND(rt0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((x'') NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0, vt1 WHERE ((((NULL IN ())) BETWEEN (((NULL) NOT BETWEEN ('1264252130') AND (x''))) AND (((0.8902699234748378) NOT BETWEEN (0Xffffffffb029b411) AND (0.6660998923253952))))); -- 0ms;
SELECT ((rt0.c4)OR(rt0.c3)) COLLATE BINARY FROM rt0 LIMIT -745808935; -- 0ms;
SELECT DISTINCT NTILE((((((vt1.c0 IN (vt1.c0)))AND((vt1.c0 IN ('66965066')))))AND(QUOTE(0.16279190590620873)))) OVER () FROM vt1 ORDER BY (((rt0.c2, vt1.c0, rt0.c1)) NOT BETWEEN ((rt0.c4, IFNULL(rt0.c4, 0x614fad22), rt0.c0 COLLATE RTRIM)) AND ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 END, ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)), (+ (rt0.c1)))))  NULLS LAST, ((rt0.c0 COLLATE BINARY)&(((((rt0.c1)AND(rt0.c2)))AND(rt0.c0))));SELECT ALL ((((rt0.c2) BETWEEN (rt0.c0) AND (vt1.c0))) IS FALSE) FROM rt0, vt1 WHERE (((CASE NULL  WHEN NULL THEN 0.9209649034584438 END) NOT BETWEEN (x'' COLLATE NOCASE) AND (((1.61278848E9) BETWEEN (x'') AND (''))))); -- 0ms;
SELECT CASE WHEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c0)) THEN ((rt0.c2)||(rt0.c0)) ELSE (((rt0.c1, vt1.c0, rt0.c0))!=((rt0.c1, rt0.c4, rt0.c1))) END FROM vt1, rt0 GROUP BY ((((rt0.c3)<<(x'')))!=((vt1.c0 IN ()))), rt0.c4, (CASE WHEN rt0.c0 THEN NULL ELSE rt0.c1 END IN ()), (((rt0.c3)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c4) AND ('1599361704')))) AND ((CAST(rt0.c1 AS REAL)))), ((((((((rt0.c2 COLLATE NOCASE)AND(rt0.c4 COLLATE RTRIM)))OR(CAST(vt1.c0 AS TEXT))))AND(rt0.c0)))OR(((rt0.c2)==(rt0.c0)))); -- 1ms;
SELECT DISTINCT (((TRIM(DISTINCT rt0.c1)))>((SQLITE_COMPILEOPTION_GET(rt0.c4)))), ((((rt0.c1) IS TRUE)) IS FALSE), ((COUNT(*))+(rt0.c2)) FROM rt0, vt1; -- 0ms;
SELECT ALL rt0.c3 FROM vt1, rt0; -- 0ms;
SELECT ALL ((((x'' IN ())))=((((rt0.c2)IS NOT(rt0.c1))))), vt1.c0, ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE BINARY FROM rt0 WHERE (((CASE WHEN 0.5054407759612835 THEN NULL ELSE '' END)<<(json_type(x'')))) LIMIT -588357583;SELECT ALL 577985415 FROM rt0, vt1 ORDER BY (((rt0.c0)+(vt1.c0)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c3 FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 COLLATE NOCASE))>((((vt1.c0)OR(rt0.c3))))), NTILE(CAST(CAST(rt0.c3 AS NUMERIC) AS NUMERIC)) OVER (), (((CAST(NULL AS INTEGER)))<(((((rt0.c3, rt0.c2, rt0.c1))<((rt0.c0, rt0.c3, vt1.c0)))))) FROM rt0 WHERE (((((LENGTH(NULL))AND(UNLIKELY(x''))))AND((((((((('{*b')AND(-2038669530)))OR(x'')))OR(x'')))OR(NULL))))) GROUP BY ((((rt0.c1)<<(rt0.c4)))%(((rt0.c4) IS FALSE))) HAVING (- ((rt0.c1 IN ())));SELECT DISTINCT TOTAL((NOT (vt1.c0))) FROM rt0, vt1 NOT INDEXED WHERE ((((('-920412935') IS TRUE)) IS TRUE)); -- 0ms;
SELECT ALL vt1.c0, (NOT ((NOT (rt0.c3)))), (- ((((rt0.c1, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c4, vt1.c0, vt1.c0)) AND ((rt0.c3, rt0.c4, vt1.c0))))) FROM rt0, vt1; -- 0ms;
SELECT ((0Xffffffff98a4cb38)>=(TRIM(rt0.c0))) FROM vt1, rt0; -- 0ms;
SELECT ALL ((highlight(rt0.c1, rt0.c3, rt0.c4, rt0.c4))&(((rt0.c0) NOTNULL))), CASE NULL COLLATE BINARY  WHEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN (~ (rt0.c2)) END, ((LOWER(rt0.c3)) BETWEEN (((rt0.c0)OR(rt0.c4))) AND (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) FROM rt0, vt1 WHERE (STRFTIME((('-941009194')<('aeJ_')), (x'' IN (0.9549442108427287, 'C')), CAST(x'8cf9' AS INTEGER), (('')LIKE(0.23907476520433757)), ((NULL) NOT NULL))); -- 1ms;
SELECT ALL ((CASE WHEN vt1.c0 THEN vt1.c0 ELSE rt0.c3 END)>=(MIN(NULL, rt0.c3))) FROM vt1;SELECT ALL NULL, DENSE_RANK() OVER ( GROUPS (((~ (rt0.c2)))OR(-941009194)) PRECEDING), ((rt0.c4) NOT BETWEEN ((~ (rt0.c4))) AND (((vt1.c0)<>(rt0.c3)))) FROM rt0 GROUP BY (((((rt0.c4)OR(rt0.c1)))AND(vt1.c0)) IN ()) HAVING JULIANDAY(((rt0.c3) IS TRUE), (+ (rt0.c4)), vt1.c0);SELECT DISTINCT (+ (CASE vt1.c0  WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN x'' WHEN rt0.c4 THEN rt0.c0 END)), (((rt0.c0)) BETWEEN ((((rt0.c2) ISNULL))) AND ((GROUP_CONCAT(rt0.c1)))), CAST(TRIM(rt0.c0) AS TEXT), '0.9104508579952103' COLLATE NOCASE, (((((rt0.c1, rt0.c3, rt0.c1)) BETWEEN ((rt0.c3, rt0.c0, rt0.c3)) AND ((rt0.c1, x'a332ffee', rt0.c0))))||(((((rt0.c0)AND(rt0.c1)))AND('')))) FROM vt1 INTERSECT SELECT DISTINCT ((((rt0.c0)AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE 0.8433694524989588 END)))OR(CAST(rt0.c4 AS NUMERIC))), rt0.c4, (((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) BETWEEN (((vt1.c0)+(vt1.c0))) AND (CAST(vt1.c0 AS BLOB))), ((((rt0.c4) NOT NULL)) ISNULL), rt0.c2 FROM vt1 WHERE ((((('') BETWEEN ('-1758662160') AND (NULL)))-('-1263402353'))) GROUP BY (- (LIKELY(DISTINCT rt0.c3))) HAVING json_quote((~ (vt1.c0))) LIMIT -1500418246;SELECT DISTINCT COUNT(*) OVER () FROM rt0 NOT INDEXED WHERE ((((2097913802)) NOT BETWEEN ((((NULL)>=('1001859970')))) AND ((((0.20612710713736226) BETWEEN (NULL) AND (0.06629967112923252)))))); -- 0ms;
SELECT DISTINCT (((rt0.c4, rt0.c4, rt0.c2)) NOT BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c2 END, MIN(rt0.c3), rt0.c4)) AND (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (~ (rt0.c1)), ('' IN (rt0.c1, NULL))))), ((((rt0.c4)||(rt0.c3)))|(rt0.c4 COLLATE BINARY)), SUM('-2036725267'), rt0.c4, vt1.c0 FROM rt0, vt1; -- 0ms;
SELECT ALL json_object(rt0.c3, rt0.c0) COLLATE NOCASE, CASE rt0.c3  WHEN (((rt0.c2))<=((rt0.c0))) THEN ((((((((((((((((((((vt1.c0)AND(rt0.c4)))OR(rt0.c1)))OR(x'41ae')))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c3)) ELSE (- (vt1.c0)) END, ((((rt0.c1)LIKE('몠+')))>((rt0.c4 IN ()))) FROM rt0, vt1 WHERE (ROUND('u|5', CASE 0.41301981896103435  WHEN NULL THEN -920412935 ELSE 0.26997206406510665 END)) ORDER BY (((vt1.c0)) NOT BETWEEN ((((vt1.c0)GLOB(vt1.c0)))) AND ((IFNULL(rt0.c1, rt0.c0))))  NULLS LAST, (json_type(vt1.c0) IN ()) ASC  NULLS LAST, '?9' DESC; -- 1ms;
SELECT ALL ((CAST(rt0.c1 AS NUMERIC))GLOB(((rt0.c4)<(rt0.c3)))), ((((((((((rt0.c4)%(rt0.c1)))AND(COUNT(*))))AND(((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0)))))AND(json_quote('1126834015'))))OR(((((rt0.c2)OR(vt1.c0)))AND(rt0.c4)))), CAST(((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT FIRST_VALUE(CASE ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c2))  WHEN (((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((NULL))) THEN CAST(vt1.c0 AS BLOB) WHEN (~ (rt0.c2)) THEN '0.7847049792417155' WHEN rt0.c1 THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN rt0.c3 COLLATE RTRIM THEN ((rt0.c3)>=(rt0.c3)) WHEN ((rt0.c4)>=(238262443)) THEN ((rt0.c0)GLOB(vt1.c0)) END) OVER (), 0.6077081189959429, GROUP_CONCAT(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END) FROM rt0, vt1; -- 0ms;
SELECT ((IFNULL(rt0.c4, rt0.c3))%(x'70ed')) FROM vt1, rt0 WHERE ((NOT (((NULL)%(0.3120383399315574))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((((((rt0.c4)AND(rt0.c4)))AND(vt1.c0)))AND(rt0.c2)))OR(vt1.c0)) THEN ((((rt0.c4)AND(rt0.c4)))AND(rt0.c1)) ELSE AVG(rt0.c3) END, ((CASE WHEN x'769d' THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c3 END) NOT NULL), (((((rt0.c1, vt1.c0, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c0, 540000351)) AND ((rt0.c1, rt0.c4, vt1.c0)))) IS FALSE) FROM vt1, rt0 WHERE ((((('669480676')||(NULL)))>=(CASE NULL  WHEN NULL THEN 0Xffffffffdc563805 ELSE NULL END))) GROUP BY (+ (((((((((rt0.c2)AND(rt0.c2)))OR(1.791978815E9)))OR(NULL)))OR(rt0.c2)))) HAVING ((((NULL) NOT BETWEEN (rt0.c1) AND (rt0.c0)))|(((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))) LIMIT -840014965 OFFSET -104337327; -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c0 AS INTEGER))AND(((rt0.c2) ISNULL))))AND((+ (rt0.c0)))) FROM rt0, vt1 WHERE ((((NULL) ISNULL) IN ())); -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY)>(((((rt0.c1)OR(rt0.c3)))OR(rt0.c2)))), rt0.c0, (((rt0.c4)) BETWEEN ((CAST(rt0.c3 AS BLOB))) AND ((rt0.c0 COLLATE NOCASE))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c1 AS INTEGER) THEN NULL ELSE ((rt0.c4)>=(rt0.c4)) END FROM vt1;SELECT DISTINCT SUM(((rt0.c4)IS NOT(rt0.c3))) OVER (), (- ((((rt0.c4))<((rt0.c2))))), ((((TOTAL(0xffffffffc8c0f79d))AND((((((((((((('0.40320240006970764')OR(rt0.c0)))OR(rt0.c3)))AND('')))OR(rt0.c1)))OR(vt1.c0)))OR(rt0.c2)))))OR((((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((rt0.c3, vt1.c0, rt0.c0)) AND ((vt1.c0, rt0.c1, rt0.c4))))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c3)AND(x''))  WHEN rt0.c0 COLLATE BINARY THEN ((rt0.c2) BETWEEN (rt0.c4) AND (0.03721158513087597)) ELSE ((rt0.c1)%(rt0.c2)) END FROM rt0; -- 0ms;
SELECT ALL (+ ((('1599361704')IS(rt0.c4)))) FROM vt1;SELECT CAST(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c0)) AS BLOB) FROM vt1 WHERE ((~ (x'' COLLATE BINARY)));SELECT DISTINCT (((rt0.c2, vt1.c0, rt0.c4)) BETWEEN (((- (rt0.c2)), ((vt1.c0)<>(rt0.c3)), ((rt0.c4)LIKE('1095185834')))) AND ((((rt0.c0) IS FALSE), ((rt0.c0) NOT NULL), (0.06643076298511752 IN (rt0.c2))))), ((rt0.c0)IS(rt0.c2 COLLATE NOCASE)), (rt0.c2 IN ()) COLLATE NOCASE FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)=(rt0.c2)) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT ALL (((- (-1553980160))) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (rt0.c1)) FROM rt0 WHERE (LENGTH(((-21644571)>(NULL)))) ORDER BY vt1.c0 ASC;SELECT DISTINCT rt0.c2 FROM rt0, vt1 WHERE ((CASE 0Xffffffff89312eae  WHEN x'' THEN '' END IN ())); -- 0ms;
SELECT ALL x'2dcf' FROM rt0 WHERE (((((((x'')AND(NULL)))AND(1.740724438E9)))GLOB((- (''))))); -- 0ms;
SELECT ALL ((TOTAL(vt1.c0)) IS FALSE) FROM rt0 GROUP BY (((((((((((rt0.c2))!=((vt1.c0))))OR(rt0.c3 COLLATE NOCASE)))OR(((rt0.c3) ISNULL))))AND(((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c2)))OR(vt1.c0)))OR(vt1.c0)))))OR((((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c0))))) HAVING CASE WHEN COUNT(rt0.c2) THEN x'' END;SELECT DISTINCT (+ (rt0.c1)) COLLATE NOCASE FROM rt0, vt1 WHERE ((((((NOT ('21')))OR((((2106751027, -1656664818, 0.9762413039774718))<=((NULL, NULL, '851557531'))))))AND(TRIM(x'')))); -- 0ms;
SELECT ALL ((AVG(rt0.c2))&(((((rt0.c3)AND(vt1.c0)))OR(rt0.c0)))), ((rt0.c3)IS(((rt0.c4)<>(rt0.c2)))), ((rt0.c1) NOTNULL) FROM vt1, rt0 LIMIT 638696317; -- 7ms;
SELECT ALL NULL COLLATE RTRIM, rt0.c2, MAX('E') FROM vt1;SELECT ALL ((MIN(rt0.c0)) ISNULL) FROM rt0 ORDER BY (((0X16fad7c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) IN ()) DESC; -- 0ms;
SELECT ALL ((((rt0.c1) NOT NULL))==(COALESCE(DISTINCT rt0.c1, rt0.c0))) FROM rt0, vt1 WHERE (0.5849157770158648); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c0 ELSE vt1.c0 END)<<(rt0.c4 COLLATE BINARY)) FROM rt0, vt1 UNION SELECT ALL ((CASE rt0.c1  WHEN rt0.c3 THEN vt1.c0 ELSE x'' END) ISNULL) FROM vt1 ORDER BY ((((((rt0.c1)OR(vt1.c0)))OR(rt0.c4)))%(CAST(rt0.c3 AS NUMERIC))) DESC;SELECT DISTINCT LIKELIHOOD((rt0.c4 IN (rt0.c2, rt0.c1)), 0.5047517501872083), AVG(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c0 END), (~ (((rt0.c1) ISNULL))) FROM vt1, rt0 ORDER BY ((vt1.c0) IS FALSE) COLLATE NOCASE DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT '0.9550230103219836', CAST(rt0.c3 AS REAL)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt0.c0))OR(('0.9854783204822888' IN ()))))OR(CAST(rt0.c3 AS INTEGER))) FROM vt1 ORDER BY ((CAST(rt0.c2 AS INTEGER))+(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c0))))  NULLS FIRST, (- ((~ (rt0.c4))))  NULLS LAST;SELECT CASE ((rt0.c3) BETWEEN (rt0.c3) AND (NULL))  WHEN ((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CAST(rt0.c4 AS BLOB) END FROM vt1 WHERE ((((((-2.47237508E8) BETWEEN ('YD') AND (x'2848')), (('|0Ev^晞.') BETWEEN (0.21472315692041055) AND (-1.755919978E9)), COALESCE(DISTINCT -9.41009194E8, '1773175403', 1.740724438E9, x'')))!=((TRIM(x'd4b1', 0.1656554495441146), JULIANDAY(0.5291889451136956, NULL, 0X2bfe668e), ((NULL) BETWEEN (x'') AND ('-1477564247')))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (CAST(rt0.c3 AS NUMERIC)) AND ((rt0.c1 IN (rt0.c4))))  NULLS FIRST, ((('-1349604748' COLLATE BINARY))>=(((NOT (rt0.c0)))));SELECT ALL '0.938179366619171' FROM rt0 WHERE (((((((3.94046038E8) BETWEEN ('1612788480') AND (0.02201059463310784)))OR((((NULL, 8.35879666E8, NULL))<=((x'', NULL, 0X30276701))))))OR('762991488'))); -- 0ms;
SELECT (((((((((('2132926033') NOT NULL))AND((NOT (rt0.c1)))))AND(vt1.c0)))AND(((vt1.c0)<=(rt0.c3)))))AND((('-846149064')IS(rt0.c3)))), rt0.c0, ((((CAST(rt0.c0 AS BLOB))OR(CASE WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 END)))OR((((rt0.c3)) BETWEEN ((0.8615269736219929)) AND ((rt0.c1))))), (((((((rt0.c2))<((']벛P䊽>XB%*'))))AND(MAX(rt0.c1, vt1.c0, rt0.c2, x'', 1929161191, rt0.c0))))AND(rt0.c4 COLLATE BINARY)), (+ ('h	ꪢuEI')) FROM vt1, rt0 WHERE ((((-1.263402353E9 IN ())) BETWEEN (UNLIKELY(DISTINCT x'')) AND (CAST(823897581 AS REAL)))); -- 0ms;
SELECT ALL ((ROUND(rt0.c0, rt0.c3)) BETWEEN (((((rt0.c0)AND(rt0.c4)))AND(rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) FROM rt0, vt1; -- 1ms;
SELECT ALL GROUP_CONCAT('}D') FROM rt0; -- 0ms;
SELECT ALL rt0.c4 FROM vt1 WHERE (CAST('' AS NUMERIC));SELECT ALL (((((rt0.c2) IS FALSE)))!=(((NOT (rt0.c3))))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((CASE WHEN vt1.c0 THEN NULL WHEN x'3df9' THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 END)&(((((vt1.c0)OR(rt0.c3)))OR(rt0.c3)))), 0xfffffffff83dd662, MIN(rt0.c2 COLLATE BINARY COLLATE NOCASE) FROM vt1, rt0 GROUP BY (~ (rt0.c2)) HAVING MAX(((rt0.c3) NOT BETWEEN (rt0.c4) AND (vt1.c0))); -- 0ms;
SELECT ALL LAST_VALUE(((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (rt0.c1))) OVER () FROM rt0 WHERE (((((((1994401308)-('')))AND(LIKELIHOOD('ir䏧(p/)', 0.35344930578135647))))AND(CASE x''  WHEN '*' THEN x'' END))); -- 0ms;
SELECT TOTAL_CHANGES() FROM vt1 WHERE ((((-1294426643 IN ()))>>(CASE WHEN 'GI' THEN 0.25005915647376276 ELSE '' END))); -- 0ms;
SELECT DISTINCT rt0.c2, ((((NOT (rt0.c1))))>(((rt0.c3 IN ())))), NULL, (CAST(vt1.c0 AS REAL) IN ()), ((x'') BETWEEN ((((rt0.c0, rt0.c4, rt0.c4))==((NULL, rt0.c1, rt0.c2)))) AND (CASE rt0.c2  WHEN vt1.c0 THEN '-1362151394' END)) FROM vt1;SELECT DISTINCT CAST((~ (rt0.c2)) AS REAL) FROM rt0, vt1 WHERE ((+ (((-1496155452)%(x''))))); -- 1ms;
SELECT (((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c3))))||(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0, vt1 WHERE (((x'' COLLATE RTRIM)%(((NULL) ISNULL)))) ORDER BY x'' ASC; -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c3 END) OVER (), ((((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))AND('-1029544453')))AND(CAST(rt0.c2 AS TEXT))), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (vt1.c0)) COLLATE NOCASE FROM vt1, rt0 GROUP BY '' HAVING ((((((rt0.c4) NOTNULL))OR((~ (rt0.c3)))))AND(rt0.c3)); -- 0ms;
SELECT DISTINCT (NOT ((('K%Sp&') BETWEEN (vt1.c0) AND (vt1.c0)))), (((((rt0.c1))>=((rt0.c3)))) NOT BETWEEN (((rt0.c1)LIKE(rt0.c0))) AND (rt0.c1 COLLATE NOCASE)), (- (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0;SELECT ((((424848858) BETWEEN (rt0.c4) AND (vt1.c0))) NOT BETWEEN (MIN(vt1.c0)) AND (rt0.c4 COLLATE RTRIM)), (NOT (((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))), (x'252e' IN ()), CAST(rt0.c2 AS NUMERIC) COLLATE BINARY, GROUP_CONCAT(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) OVER () FROM vt1, rt0 WHERE (CAST(((((((((')wSP\r XC<')AND(NULL)))AND(NULL)))AND(NULL)))AND(0xfffffffffa91a3a6)) AS NUMERIC)); -- 0ms;
SELECT ((json_insert(rt0.c1, vt1.c0, rt0.c4))LIKE(CAST(rt0.c2 AS REAL))) FROM rt0, vt1;SELECT DISTINCT CASE WHEN (~ ('-785553826')) THEN ((rt0.c4)<=(rt0.c1)) WHEN CAST(rt0.c1 AS INTEGER) THEN ((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c0)) WHEN (((rt0.c1))>=((vt1.c0))) THEN TOTAL(vt1.c0) END FROM rt0 WHERE ((~ (((NULL) NOT NULL))));SELECT CAST(x'' AS TEXT) FROM vt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT UNLIKELY((((((((('0')OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))), CAST(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL), CASE ((rt0.c2)=(vt1.c0))  WHEN CAST(vt1.c0 AS TEXT) THEN ((rt0.c2)LIKE(rt0.c2)) WHEN LOWER(DISTINCT rt0.c0) THEN COUNT(*) WHEN ((rt0.c3) IS FALSE) THEN CASE WHEN rt0.c1 THEN rt0.c1 END END FROM rt0;SELECT ((((0.9337372592065238) IS TRUE)) NOT BETWEEN (((rt0.c4) ISNULL)) AND (((((rt0.c1)AND(rt0.c2)))AND(rt0.c2)))) FROM vt1;SELECT DISTINCT TOTAL(CAST(rt0.c1 AS INTEGER)), json_type(0.6586949781352015), ((CAST(rt0.c1 AS TEXT)) IS TRUE) FROM rt0 WHERE ((((x'', x'', NULL)) BETWEEN ((LIKELIHOOD(NULL, 0.563447926200806), ((('1031031354')) NOT BETWEEN ((x'')) AND (('2032459762'))), -1963346623 COLLATE NOCASE)) AND ((CAST(0.6703520752867401 AS NUMERIC), (((('1991287119')AND('L')))OR(-1772534334)), QUOTE(-692934946))))); -- 4ms;
SELECT DISTINCT (((0.14971393654937915))>((TRIM(rt0.c0)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT LOWER(rt0.c4) COLLATE BINARY FROM vt1, rt0 WHERE (((x'' IN (x'c0b7', x'')) IN ())); -- 0ms;
SELECT ALL TOTAL(TRIM(rt0.c0, rt0.c0)) FROM rt0, vt1 WHERE (0.5529493285700826); -- 0ms;
SELECT ALL GROUP_CONCAT(ABS(rt0.c1)) OVER () FROM vt1, rt0 WHERE ((((NULL IN ()))IS(x''))) GROUP BY CAST(NULL AS BLOB) LIMIT -1369578463; -- 0ms;
SELECT DISTINCT rt0.c2, ((MAX(rt0.c3))/((('')IS NOT(rt0.c3)))), GROUP_CONCAT(((((((((0.12841809113413916)OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c4))) OVER ( ORDER BY (~ (0.8603912698011682))) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT NULL, (((((rt0.c2)) BETWEEN ((rt0.c3)) AND ((vt1.c0)))) BETWEEN (((rt0.c0)AND(rt0.c0))) AND (rt0.c3 COLLATE NOCASE)), CASE ((NULL)OR(rt0.c3))  WHEN 0.045483614644067694 THEN ((vt1.c0)==(rt0.c4)) WHEN vt1.c0 THEN (NOT (vt1.c0)) WHEN ((rt0.c1)LIKE(rt0.c0)) THEN (vt1.c0 IN ()) ELSE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c4)) END FROM vt1, rt0 WHERE (CASE WHEN CASE '1773175403'  WHEN NULL THEN NULL WHEN 0X6acf6d3f THEN '⚃Y' WHEN 'jQ' THEN '*,RN< t袢O' ELSE -1727760415 END THEN (1430762057 IN ()) ELSE NULL END); -- 0ms;
SELECT ALL ((json_array_length('-422009143')) BETWEEN ((((rt0.c4, vt1.c0, rt0.c2)) NOT BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((rt0.c0, rt0.c3, rt0.c0)))) AND (LOWER(rt0.c3))), ((CAST(vt1.c0 AS NUMERIC)) NOT BETWEEN ((rt0.c3 IN ())) AND (CAST(x'4049' AS TEXT))), ((((rt0.c3) NOT NULL)) ISNULL) FROM vt1;SELECT DISTINCT TOTAL(((vt1.c0)&(rt0.c1))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (~ (((0.32890142298530967) NOTNULL))), ((rt0.c0)+(((vt1.c0) ISNULL))), 'GqⷅQ_' FROM vt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt1, rt0 WHERE ((((~ (x''))) NOT BETWEEN ((~ (x'defa8791'))) AND (((0.6924574348250856) IS FALSE)))); -- 0ms;
SELECT ALL (((((vt1.c0) NOTNULL)))>=(((rt0.c0 IN ())))) FROM vt1 CROSS JOIN rt0 ON ((((((rt0.c0) ISNULL))AND(((rt0.c3) NOT NULL))))AND(((rt0.c1)>(rt0.c3)))); -- 0ms;
SELECT DISTINCT (+ (CAST(vt1.c0 AS TEXT))) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT ((TOTAL_CHANGES())OR(CASE WHEN rt0.c1 THEN rt0.c1 END)) FROM rt0 GROUP BY (((vt1.c0, rt0.c4, rt0.c0)) NOT BETWEEN ((NULL, vt1.c0, rt0.c4)) AND ((rt0.c0, rt0.c2, rt0.c4))) COLLATE RTRIM;SELECT DISTINCT (((rt0.c4 IN (rt0.c2, rt0.c3)))<=('(B')) FROM rt0 LIMIT 1521868586; -- 0ms;
SELECT DISTINCT 3.58275235E8 FROM vt1 LIMIT -1220030220 OFFSET -4105325; -- 0ms;
SELECT CAST(CAST(rt0.c4 AS TEXT) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (TOTAL(vt1.c0))) FROM rt0 WHERE (((((NULL)IS(0x14761f4f)))GLOB(IFNULL('', NULL))));SELECT (((rt0.c1) NOTNULL) IN ()) FROM rt0, vt1 WHERE ((CAST('\n0lo?Ycz' AS NUMERIC) IN ())); -- 0ms;
SELECT ALL CASE ((((rt0.c0)OR(rt0.c3)))AND(rt0.c0))  WHEN HEX(DISTINCT rt0.c3) THEN ((x'') BETWEEN (vt1.c0) AND (0.29004835056398415)) ELSE ((rt0.c4)*(rt0.c1)) END FROM rt0;SELECT DISTINCT (((- (vt1.c0)))||((NOT (rt0.c3)))) FROM rt0;SELECT ALL ((1368532667)GLOB(rt0.c2 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE (~ (((((vt1.c0)OR(rt0.c3)))AND(rt0.c4))))) OVER () FROM vt1, rt0 WHERE (CASE NULL  WHEN (((x'8e1a'))==((0x4fdc88a2))) THEN CAST(NULL AS TEXT) WHEN ((x'1b52') IS TRUE) THEN CASE WHEN x'' THEN '-1244786747' WHEN x'8587' THEN '-1296007390' WHEN x'' THEN 0X2cade39e ELSE x'' END WHEN '1856451629' COLLATE BINARY THEN (('835879666')>(0.8475651091623991)) END) LIMIT -1682845948 OFFSET -27850461; -- 1ms;
SELECT DISTINCT ((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c1)))OR(NULL)))AND(0.5939663856835478)), x'', ((((rt0.c4)==(rt0.c3)))<<(COUNT(rt0.c2))) FROM rt0 WHERE (((NULL)<(NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL ((((((((((((HEX(rt0.c3))AND(CAST('J*A5' AS REAL))))AND(((vt1.c0) BETWEEN (rt0.c0) AND (vt1.c0)))))OR(rt0.c3)))AND(COUNT(*))))OR(0.02330552088934157)))OR(NULL)) FROM rt0 WHERE ((('8' COLLATE BINARY) BETWEEN ((((0.12082016704132426)) NOT BETWEEN ((x'84b7')) AND ((NULL)))) AND (CAST(0.02523605539368523 AS TEXT))));SELECT COUNT(*), TOTAL(SUM((((('-1613659763')OR(rt0.c1)))OR(rt0.c0)))), AVG(CASE WHEN '0.045483614644067694' THEN rt0.c2 ELSE rt0.c3 END) FILTER(WHERE ((rt0.c4) BETWEEN (((rt0.c3)<(rt0.c1))) AND (CAST(rt0.c4 AS BLOB)))) OVER () FROM vt1 LIMIT -1231651015;SELECT DISTINCT TOTAL(((((rt0.c2)AND(rt0.c1)))OR(rt0.c4))) FROM rt0 WHERE ((((((-7.96765463E8)|(-574953836))))<((((0.26043825197619874)LIKE(0.9413683086880844)))))) GROUP BY (((((rt0.c2) IS FALSE)))>((rt0.c0 COLLATE NOCASE))), NULL, '1763853133'; -- 0ms;
SELECT ALL TOTAL((rt0.c0 IN ())) OVER () FROM rt0 WHERE (((('' IN ()))<=(((0.9341638566463266) BETWEEN (x'') AND (-1077716677))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)>=(vt1.c0)))!=(CASE 'af'  WHEN vt1.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 END)) FROM vt1 WHERE (((CHAR(0.02873676939848746, '|3#!^CI9', '', 0xfffffffff0c16fca, 0Xffffffffc7e956d6)) BETWEEN (PRINTF(0.8945433008053467)) AND (CASE -120992068  WHEN 0.3231173766361447 THEN NULL WHEN 0.05832552707605887 THEN x'' WHEN NULL THEN '1866535014' ELSE -1.328683847E9 END)));SELECT DISTINCT (NOT (rt0.c0)) FROM rt0, vt1 WHERE (STRFTIME((0.16401332941669888 IN ()), CASE 0X7fa7961a  WHEN 0.09220031071358892 THEN 0.010525734549848842 WHEN 'x' THEN x'' WHEN 0.9629027652782112 THEN -7.96765463E8 ELSE 0.2440354531912523 END, x'')); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS BLOB)) IS TRUE), (NOT ((('639713981')IS(rt0.c4)))), ((vt1.c0 IN (rt0.c1)) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c0)OR(vt1.c0)))OR(rt0.c1)))|((~ (rt0.c1)))) FROM rt0, vt1 WHERE (0.9397866574630274 COLLATE NOCASE); -- 0ms;
SELECT ALL (x'' IN ()), rt0.c3, NULL FROM rt0, vt1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, vt1 WHERE (UPPER(((x'') IS TRUE))); -- 0ms;
SELECT (rt0.c0 COLLATE RTRIM IN ()) FROM vt1; -- 0ms;
SELECT DISTINCT ('1791978815' IN ()), SUM(rt0.c4) FILTER(WHERE (NOT ((vt1.c0 IN ())))) OVER (), (((((rt0.c2)!=(''))))!=((TIME(rt0.c4, rt0.c0, rt0.c3)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT LEAD(((((rt0.c1)&(rt0.c4)))<<(rt0.c4 COLLATE RTRIM)), ((rt0.c4 COLLATE BINARY) IS FALSE), (NOT ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))) OVER (), -1.2666251E9, (INSTR(rt0.c3, vt1.c0) IN ((rt0.c0 IN (rt0.c0)))) FROM rt0;SELECT ALL MIN((((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0)))) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT MAX(NULL) FROM vt1, rt0 WHERE (-1.761690261E9); -- 0ms;
SELECT DISTINCT ((((NULL)|(vt1.c0)))!=(((rt0.c2)<=(rt0.c4)))), ((rt0.c3)<<(rt0.c1)) COLLATE NOCASE, ((NULL) ISNULL) FROM rt0, vt1; -- 0ms;
SELECT (((- (vt1.c0))) BETWEEN (((rt0.c1) NOTNULL)) AND ((0Xffffffffe8d853eb IN ()))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((PRINTF(x'')) BETWEEN (rt0.c4 COLLATE BINARY) AND (((rt0.c3) BETWEEN ('-1728721737') AND (vt1.c0)))) FROM rt0, vt1 WHERE (((((CAST(x'' AS BLOB))AND((((0.7170986507196256))<>((x''))))))OR(((0.8394617362857414)=(7186056))))); -- 0ms;
SELECT (CAST(vt1.c0 AS NUMERIC) IN ()) FROM rt0 WHERE (((+ (0Xffffffff9fd1818d)) IN ())); -- 0ms;
SELECT ALL FIRST_VALUE((((((vt1.c0)-(rt0.c2))))>=((UNLIKELY(rt0.c2))))) OVER () FROM vt1, rt0; -- 0ms;
SELECT '1612788480' FROM rt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c2 COLLATE BINARY COLLATE RTRIM COLLATE RTRIM, LIKELIHOOD(DISTINCT ((rt0.c4)>>(rt0.c3)), 0.577294117941608), (((+ (rt0.c1)))OR(rt0.c4 COLLATE NOCASE)) FROM rt0 WHERE (((((0.7859580641346207)AND(NULL)))LIKE(((((((((NULL)AND(NULL)))AND('an.&p')))AND(0x1)))AND(0x505f794f))))) LIMIT 989375245; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(1308081190)) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4)))) AND ((NOT ('w}')))) FROM rt0 ORDER BY NULL ASC; -- 0ms;
SELECT COUNT(*), LAST_VALUE((((+ (rt0.c3))) ISNULL)) OVER (), ((((rt0.c0) NOTNULL))>('416799760')) FROM rt0, vt1; -- 0ms;
SELECT ((vt1.c0 IN (rt0.c0, rt0.c2, vt1.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE NOCASE) IS TRUE) FROM vt1, rt0; -- 0ms;
SELECT ALL CASE ((vt1.c0) ISNULL)  WHEN ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c2)) THEN (NOT (rt0.c1)) ELSE TOTAL(rt0.c0) END, '-1993265490' COLLATE NOCASE, GROUP_CONCAT(((rt0.c3)%(rt0.c0))) FROM vt1, rt0; -- 0ms;
SELECT ALL SUM(x'fe6f') OVER (), ((((rt0.c1) BETWEEN (rt0.c1) AND (0xffffffffb6fbba1f)))==((('7\z\nz/')IS NOT(rt0.c0)))), ((rt0.c2)GLOB(rt0.c3)) COLLATE BINARY FROM vt1, rt0 WHERE (((0.3704907900515041)AND(((NULL) IS FALSE)))) ORDER BY ((rt0.c1)||(((((((((((((rt0.c0)AND(rt0.c4)))OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c0)))) DESC; -- 0ms;
SELECT DISTINCT (+ (NULL)) FROM rt0; -- 1ms;
SELECT DISTINCT ((((vt1.c0) NOT NULL)) NOT NULL), COUNT(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c0))) OVER (), (((rt0.c0 IN ())) NOT NULL) FROM rt0, vt1 WHERE (CASE WHEN x'' THEN (('416799760') NOT BETWEEN ('0.14971393654937915') AND (NULL)) END) GROUP BY '권s1(U\a' HAVING (+ (((((rt0.c1)AND('-~i\rY')))OR(rt0.c1)))); -- 0ms;
SELECT DISTINCT '706115466', GROUP_CONCAT('1950901700'), SUM(((rt0.c4) IS FALSE)) OVER () FROM vt1, rt0 WHERE (((NULL)>=(((0.9332349209722287)%(x'8ff4'))))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0, vt1 WHERE ((((~ ('-921718213'))) NOTNULL)) GROUP BY rt0.c2, (((CASE rt0.c3  WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END, CASE rt0.c2  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END, rt0.c3))==((((rt0.c4)=(rt0.c3)), (('-326041103') NOT BETWEEN (rt0.c1) AND (x'')), CASE WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 ELSE vt1.c0 END))), (((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) NOTNULL); -- 0ms;
SELECT DISTINCT json_patch((rt0.c2 IN ()), rt0.c2) FROM vt1, rt0 WHERE ((((x'b53f', NULL, 0.1729984892660772)) BETWEEN ((NULL, 0.008433021863602064, x'e8ff')) AND ((1.159414107E9, '-1023695699', x''))) COLLATE RTRIM); -- 0ms;
SELECT NTH_VALUE(NULL, ((((((((CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN '|4(' ELSE vt1.c0 END)OR((vt1.c0 IN ('qgLhYpᦾ^')))))OR(LAST_INSERT_ROWID())))AND((vt1.c0 IN ()))))AND(vt1.c0 COLLATE RTRIM))) OVER ( ORDER BY (((rt0.c0)) NOT BETWEEN ((CAST(NULL AS REAL))) AND ((rt0.c4)))  NULLS FIRST), CAST(vt1.c0 AS INTEGER) COLLATE BINARY, '' FROM vt1 WHERE ((((0.5807007248382362))==((('{#\rd' IN (-1263402353))))));SELECT DISTINCT NULL FROM vt1, rt0 WHERE ((((NULL)) BETWEEN ((CAST(NULL AS TEXT))) AND (('nU<D')))); -- 1ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT NULL) FROM rt0;SELECT DISTINCT COUNT(((rt0.c1) IS FALSE)) OVER (), rt0.c4, COUNT(*) OVER (), AVG(CASE x''  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END) OVER (), ((((rt0.c2) NOTNULL)) ISNULL) FROM rt0, vt1 WHERE ((NOT (('358275235' IN ())))) ORDER BY ((x'')IS NOT(((((((((rt0.c3)AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))AND(vt1.c0)))) DESC  NULLS FIRST, x'' COLLATE BINARY; -- 2ms;
SELECT ALL (((NOT (rt0.c2)))==(CAST(vt1.c0 AS NUMERIC))) FROM vt1 WHERE (((((((x'')AND(NULL)))OR('540000351')))>(CASE 0.03259511964322337  WHEN '-286537456' THEN 0.9131112860531588 ELSE '1339852962' END)));SELECT DISTINCT '䄋]?' FROM vt1 WHERE (((MAX(0.13497068598272588, 0.8585179633617308)) NOTNULL)); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (~ (rt0.c2)), ((rt0.c2)&(rt0.c0))) FROM vt1;SELECT DISTINCT (((((rt0.c4, rt0.c0, rt0.c2))<((rt0.c0, rt0.c3, rt0.c3))))!=(CAST(rt0.c1 AS INTEGER))), CAST(CASE WHEN rt0.c3 THEN rt0.c3 END AS BLOB), CAST(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c0 END AS REAL) FROM vt1, rt0 WHERE (((((((NULL)>>(-366690648)))OR(CAST(0x1db41b78 AS BLOB))))OR(INSTR(x'', '')))); -- 0ms;
SELECT DISTINCT (- (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) FROM rt0 WHERE (((((((((CAST(x'' AS TEXT))OR((NULL IN ()))))OR((((0x4b5af4e2))<((')'))))))AND((((87258995)) BETWEEN (('-2117873518')) AND ((1159414107))))))AND(ABS(DISTINCT 0.00543089573571609)))) ORDER BY (((+ (rt0.c1))) IS TRUE) ASC  NULLS LAST; -- 1ms;
SELECT ALL CAST((rt0.c1 IN (NULL)) AS TEXT) FROM vt1;SELECT ((rt0.c0)OR(SUM(rt0.c4))) FROM rt0, vt1 WHERE (CASE CASE x''  WHEN x'' THEN x'' ELSE -1217375599 END  WHEN x'5bd9' THEN ((((0.7219610265758468)AND('')))AND('0.5216974375064425')) WHEN (0x5a346986 IN ()) THEN ((x'') BETWEEN ('-326041103') AND (x'1acb')) WHEN TRIM('-1758662160', NULL) THEN (((0.5237205977652725, 1.396637446E9, NULL)) NOT BETWEEN (('6a*6	~si', x'', 0xffffffff867c5f26)) AND ((0xffffffffbace93a5, '-1902973365', ''))) END); -- 0ms;
SELECT CAST(SUM(rt0.c0) AS REAL) FROM rt0 WHERE (CASE (('X1U9%dV,N')AND(x''))  WHEN SUBSTR(0.85771702083699, x'9c8e') THEN ((((((((x'')AND(0.7006894837390119)))AND(0.19190852103582856)))OR(0xffffffffe927a3bb)))OR(x'93e1')) END); -- 0ms;
SELECT DISTINCT '-901148920' FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((ABS(DISTINCT rt0.c2)))>=(('l棰qK'))), LAG((rt0.c1 IN ()) COLLATE NOCASE, '', rt0.c3) OVER (), SUM(CASE rt0.c1  WHEN rt0.c2 THEN NULL ELSE rt0.c1 END) OVER () FROM rt0; -- 0ms;
SELECT AVG(((rt0.c4) NOT BETWEEN (0.806915719816601) AND (rt0.c3))) OVER ( ORDER BY ((((rt0.c0) NOT BETWEEN (rt0.c4) AND (0.6245866441217444)))IS(vt1.c0 COLLATE BINARY))), LOWER((~ (rt0.c2))), rt0.c0 FROM vt1 WHERE ((((x'')) NOT BETWEEN (('X?s[cK')) AND ((x'' COLLATE NOCASE))));SELECT DISTINCT (('0.67259755179986')|(TRIM(rt0.c2))) FROM rt0 WHERE ((((((x'', x'd6cc', NULL)) BETWEEN (('.\rd⻉9zDu^', '280989101', '1423737145')) AND ((x'', '358275235', x''))))>=((('1') NOTNULL)))) LIMIT -1688043285 OFFSET 1729329800; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE x'3519'  WHEN vt1.c0 THEN vt1.c0 END COLLATE BINARY) OVER () FROM vt1 WHERE (0.9072812480266015); -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((rt0.c1) IS TRUE)), SUM(CAST(rt0.c2 AS NUMERIC)), ((SUM(rt0.c1))%((- (rt0.c1)))) FROM vt1;SELECT ALL (rt0.c4 IN ()), json_object(((rt0.c2) ISNULL), CASE WHEN rt0.c4 THEN rt0.c0 END), ((((rt0.c1) IS TRUE))=(CAST(rt0.c3 AS TEXT))), ((CASE vt1.c0  WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (NULL) AND (CASE WHEN rt0.c2 THEN vt1.c0 END)), rt0.c1 FROM vt1 GROUP BY (((((('1368532667')AND(rt0.c4)))OR(rt0.c0)))GLOB(((rt0.c3)&(rt0.c3)))), rt0.c1, ((SQLITE_VERSION())<<(rt0.c4)), (((- (rt0.c1))) NOTNULL), (+ (0.17874314375255596)), json_object(((((vt1.c0)AND(rt0.c2)))AND(rt0.c3)), ((rt0.c3) BETWEEN (0Xffffffffca5193a7) AND (vt1.c0)), (((rt0.c4))>=((rt0.c0))), LOWER(rt0.c2)), CASE (vt1.c0 IN ())  WHEN (((rt0.c4))<=((vt1.c0))) THEN (rt0.c4 IN ()) WHEN (rt0.c4 IN ()) THEN 0.24553359500722172 WHEN (((rt0.c4))>((rt0.c2))) THEN 'IXey-' ELSE x'' END;SELECT DISTINCT rt0.c1 FROM vt1 WHERE (0.3530342485693876) GROUP BY COALESCE(DISTINCT (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c3))), CASE WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c3 THEN '' END) HAVING CASE ((rt0.c2)IS('-781493998'))  WHEN ((vt1.c0)<>(vt1.c0)) THEN vt1.c0 WHEN (((rt0.c0))>((vt1.c0))) THEN CASE WHEN vt1.c0 THEN rt0.c2 END WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))) THEN (~ (rt0.c1)) WHEN CASE WHEN rt0.c4 THEN x'' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 END THEN CAST(rt0.c0 AS REAL) WHEN x'a571' THEN (+ (rt0.c0)) END;SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c0 AS REAL)) OVER () FROM vt1 NOT INDEXED;SELECT ALL ((((rt0.c4)LIKE(rt0.c3))) NOT BETWEEN (((rt0.c0)<<(0.3649325066035517))) AND (rt0.c2)), DENSE_RANK() OVER ( ORDER BY (- ((rt0.c3 IN ())))  NULLS FIRST, (~ (((rt0.c3) ISNULL))) DESC  NULLS FIRST RANGE ((((vt1.c0)IS(rt0.c0)))<=(CAST(rt0.c3 AS REAL))) PRECEDING), rt0.c3 FROM rt0, vt1 GROUP BY rt0.c3 COLLATE RTRIM, CASE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))  WHEN vt1.c0 COLLATE RTRIM THEN ((rt0.c4)IS(rt0.c1)) ELSE (~ (rt0.c1)) END, ((((rt0.c2)IS(rt0.c1))) BETWEEN (((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c0)))AND(6.69480676E8)))OR(vt1.c0))) AND (((rt0.c0) ISNULL))) HAVING (('1994401308')AND(COUNT(rt0.c1)));SELECT ALL (((rt0.c3)) BETWEEN ((AVG(NULL))) AND ((CASE rt0.c1  WHEN NULL THEN rt0.c1 WHEN vt1.c0 THEN rt0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c0 ELSE vt1.c0 END))) FROM rt0 WHERE (NULL);SELECT DISTINCT (((('rQtN')*(rt0.c2))) NOT NULL) FROM vt1 WHERE ((~ (((((((((0Xffffffffdda79b90)OR('-1973848697')))AND(1388765197)))AND(NULL)))OR(-7.96765463E8))))) GROUP BY COALESCE(((rt0.c3) IS FALSE), (((rt0.c0, vt1.c0, rt0.c2))!=((vt1.c0, rt0.c0, rt0.c0))), LIKELY(rt0.c0), ((rt0.c2)<(rt0.c2)));SELECT CAST((rt0.c3 IN (vt1.c0, rt0.c0)) AS REAL) FROM vt1;SELECT DISTINCT ((CAST(rt0.c2 AS REAL)) BETWEEN (SUM(rt0.c0)) AND (COUNT(*))), ((GROUP_CONCAT(rt0.c2)) NOT NULL), (((x'')>=(rt0.c0)) IN ((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4))))), CASE WHEN rt0.c0 THEN json_remove(rt0.c4, rt0.c0) END, rt0.c3 FROM rt0 WHERE (((((0.3530342485693876 COLLATE BINARY)OR(((x'c834')IS NOT(NULL)))))OR(((NULL)||(0xffffffffe8847bfc))))); -- 0ms;
SELECT DISTINCT ')wsp\r xc<' FROM vt1, rt0 WHERE ((+ (NULL)) COLLATE BINARY) ORDER BY (~ (((vt1.c0)<<(rt0.c0)))) ASC  NULLS LAST, ((vt1.c0) ISNULL)  NULLS LAST, CASE (NOT (rt0.c4))  WHEN ABS(rt0.c0) THEN vt1.c0 COLLATE BINARY WHEN (- (rt0.c0)) THEN CAST(vt1.c0 AS TEXT) WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END THEN (~ (rt0.c1)) ELSE ((rt0.c1)-(rt0.c0)) END; -- 0ms;
SELECT ((((rt0.c3) NOT BETWEEN ('') AND (rt0.c2)))%(CASE WHEN rt0.c2 THEN vt1.c0 END)) FROM rt0, vt1 WHERE (CASE WHEN ((x'c455') NOT NULL) THEN CASE WHEN x'' THEN '{}' WHEN -1678731467 THEN 0.7160307945081932 WHEN 'k.' THEN NULL WHEN 1.61278848E9 THEN '-752792726' WHEN NULL THEN NULL END ELSE 0.7724307304821584 COLLATE RTRIM END); -- 0ms;
SELECT ALL (((CAST(rt0.c2 AS NUMERIC)))<((CAST(NULL AS NUMERIC)))) FROM vt1, rt0; -- 1ms;
SELECT ALL HEX(DISTINCT ((rt0.c1) IS TRUE)), rt0.c0, ((rt0.c1) NOT NULL) COLLATE NOCASE FROM rt0, vt1 NOT INDEXED WHERE ('568202381') INTERSECT SELECT ALL PERCENT_RANK() OVER (), ((((rt0.c3) NOTNULL)) BETWEEN (((((((((-2.013293023E9)OR(rt0.c3)))OR(rt0.c1)))AND('-1973848697')))AND(rt0.c3))) AND (SQLITE_COMPILEOPTION_GET(rt0.c3))), GROUP_CONCAT((~ (rt0.c1))) FROM vt1 ORDER BY ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c1)))OR(rt0.c3)))OR(rt0.c4))) BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2)))) AND ((rt0.c3 IN (vt1.c0, vt1.c0)))) ASC  NULLS FIRST LIMIT 424885226 OFFSET -589027583;SELECT ALL COUNT(((((rt0.c1)OR(vt1.c0)))OR(rt0.c4))) FROM vt1;SELECT ((((rt0.c4)==(rt0.c0)))*((+ (rt0.c0)))) FROM rt0 WHERE (TYPEOF(((x'')<=(1.348434255E9)))) LIMIT -1595181589; -- 0ms;
SELECT NULL, (NOT (CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN x'ef66' WHEN rt0.c2 THEN rt0.c1 END)), (RTRIM(rt0.c2) IN ()) FROM vt1, rt0 LIMIT -1681467092; -- 0ms;
SELECT DISTINCT ((((HEX(rt0.c2))AND(CAST(rt0.c4 AS INTEGER))))AND('1359521466')) FROM vt1 WHERE ((NOT ('-345465311')) COLLATE NOCASE);SELECT ((rt0.c0)>(rt0.c1)) FROM vt1, rt0 WHERE (CAST(CAST(0.49600887847559993 AS BLOB) AS BLOB)); -- 0ms;
SELECT LIKE((((-385580372))<((rt0.c3))), ((((rt0.c1)OR(rt0.c4)))AND(rt0.c0))) FROM rt0 WHERE (CAST(CASE NULL  WHEN NULL THEN NULL ELSE NULL END AS REAL)); -- 0ms;
SELECT ALL NULL FROM vt1, rt0; -- 0ms;
SELECT ((rt0.c2 IN ()) IN ((rt0.c2 IN (rt0.c2)))) FROM vt1 WHERE ((((~ (x'3e91'))) NOTNULL));SELECT (((json(vt1.c0)))==((CAST(rt0.c3 AS INTEGER)))), COUNT(*) FILTER(WHERE x'') OVER ( ORDER BY ((((rt0.c3) IS TRUE)) IS TRUE)  NULLS FIRST, (~ (x'')) DESC  NULLS LAST), ((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c4 COLLATE BINARY)))AND(((rt0.c1) IS FALSE))) FROM vt1 WHERE ((+ (((5.77985415E8)<=(x''))))) GROUP BY ((0.1069049958968642) BETWEEN (CAST(vt1.c0 AS REAL)) AND ((NOT (rt0.c2)))) HAVING (((rt0.c4)) NOT BETWEEN ((((((((((((((1477136725)OR(0.9306216556468528)))OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))) AND ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c2)))));SELECT ALL CAST(((rt0.c2)AND(rt0.c2)) AS NUMERIC) FROM vt1, rt0 WHERE (CAST((('#\r{')AND(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT IFNULL(((vt1.c0) NOT NULL), COUNT(rt0.c4)) FROM vt1 WHERE (((((((x'')&(0.7839657169951921)))OR(CASE WHEN x'' THEN x'5e2a' ELSE '1348434255' END)))OR(((NULL) IS FALSE))));SELECT DISTINCT 0.8369270295726388 FROM vt1; -- 0ms;
SELECT ALL SUM(rt0.c3) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((NULL) NOTNULL)  WHEN '#C' THEN ((rt0.c0) ISNULL) ELSE (rt0.c0 IN ()) END FROM vt1 WHERE (((((((NULL)OR(0.2909389182238763)))OR(NULL))) BETWEEN ('1159414107') AND ((('') NOT BETWEEN (1.359521466E9) AND (0.9317086807846019)))));SELECT (((('R\nyy')=(vt1.c0))) BETWEEN (((vt1.c0) ISNULL)) AND ((rt0.c1 IN (rt0.c3)))) FROM vt1 NOT INDEXED;SELECT DISTINCT AVG((- (rt0.c1))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((CAST(rt0.c0 AS TEXT), (rt0.c3 IN ()), LOWER(rt0.c4)))>((((rt0.c3)<<(rt0.c3)), (((rt0.c3))<>((vt1.c0))), (rt0.c3 IN ())))) FROM rt0, vt1; -- 0ms;
SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) BETWEEN (rt0.c2 COLLATE NOCASE) AND (UPPER(rt0.c3))) FROM rt0 WHERE (IFNULL((- (0.513536411408265)), ((0xffffffffafa52b89)*('\n0lo?Ycz')))); -- 1ms;
SELECT DISTINCT load_extension(rt0.c0) FROM rt0 WHERE (TYPEOF(NULLIF(0Xffffffffa9a01eb1, '1847820588'))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c1)AND(rt0.c3)))OR(rt0.c3)) COLLATE RTRIM) FROM rt0, vt1 WHERE ((((((x'')) BETWEEN ((1515030638)) AND (('5D')))) NOT BETWEEN (((('Zf 5j(k'))>=((x'')))) AND (TYPEOF(0.12444843779903514)))); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN (vt1.c0))) IS TRUE) FROM rt0;SELECT ALL (~ (rt0.c4)) FROM rt0 WHERE ((((0.2087629196648254) BETWEEN (0.11934204642153856) AND (458107198)) IN ())); -- 0ms;
SELECT DISTINCT LTRIM(rt0.c2 COLLATE NOCASE) FROM rt0, vt1 WHERE ((- (((('o/', NULL, 'f', x'd88f', 'T嘽'))>=((0.9988587926862457, x'', NULL, 0.7572990571816071, NULL)))))); -- 0ms;
SELECT UPPER(((rt0.c0) NOT NULL)) FROM rt0, vt1 WHERE ((((x'c62379a9')) BETWEEN (((('-606907401')+(-91938767)))) AND ((TYPEOF(x''))))); -- 0ms;
