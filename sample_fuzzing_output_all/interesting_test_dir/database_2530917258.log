-- Time: 2024/06/07 18:35:30
-- Database: database58
-- Database version: 3.40.0
-- seed value: 2530917258
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3, c1) VALUES (0.23755657140675301, 0.23755657140675301, '990318825', x''), (x'', NULL, '-20588143', 0.41239340754246867), (NULL, NULL, '}ჩ', -32049008); -- 1ms;
DELETE FROM rt0; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0, c2, c1) VALUES ('-20588143', NULL, NULL, '5Q%'); -- 0ms;
PRAGMA secure_delete; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c4) VALUES ('', NULL), ('', NULL), ('0.41239340754246867', ''), (-32049008, x''), (((CASE WHEN -1 THEN '-1383154445' END)-((('E밄d') NOT BETWEEN (x'') AND (x'')))), NULL); -- 11ms;
INSERT OR REPLACE INTO rt0(c4, c3, c2) VALUES (0.6616105381615106, '-1383154445', ',IGJ創'), ('-884321675', x'', NULL), (0.41239340754246867, 0.27604933373698604, 0.3853671440380685); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c4, c3, c0) VALUES ('kOV', CAST(NULL AS NUMERIC), 0.2984047307165847, 0.09615444278420271, x'71f6'), (x'9dcc', x'', x'', '-2115126268', ''), (9.90318825E8, NULL, -2.115126268E9, NULL, '1987793142'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4) VALUES (0.7494972362015712); -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2, c4) VALUES (x'', NULL, 1293637129); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3, c2, c4, c0) VALUES (0.5594884955167644, NULL, 0.6381688645627678, 0.2088106843836398); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3) VALUES (2090982976, '-884321675'); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c0, c1) VALUES (0.2704049103367494, '', x'1d6f', x''); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=249175976 noskipscan'); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INTEGER ); -- 0ms;
PRAGMA threads = -1894683366736624244; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA temp.recursive_triggers; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.default_cache_size; -- 3ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c3, c4, c0) VALUES (x'54dd', '_?I(', '-1415213050', '', 0.09615444278420271); -- 0ms;
PRAGMA temp.cell_size_check = true; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c1, c2) VALUES (1.293637129E9, x'8ec6', 0.9313667275801648), ('', 1987793142, -1516486420), (NULL, NULL, x''); -- 0ms;
INSERT OR FAIL INTO rt1(c0) VALUES (x''), (x'e6a6'), (x''); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (((2.49175976E8 IN ()) IN ()), '-2115126268', 0x61b788dd, 'K', '-1415213050', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c0, c2, c4) VALUES (0.2704049103367494, '-1415213050', 0.22092364031278766, '-32049008'), (x'', x'3fd3', 0.740367335112097, '320534390'), ('-Bj', x'', 'u	', 0.77630756070077); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c4, c3) VALUES (0.8886530336359165, -332211586, '-332211586'), ('aq-tT', 0xffffffff9b1fcfd5, (((((0X3b0710e9)) BETWEEN ((0.8217655384095235)) AND (('-1862829259'))))<>(((x'') NOTNULL)))), (x'', '-1083430631', 0X6b5e5924); -- 21ms;
INSERT OR ROLLBACK INTO rt1(c0, c2, c5, c3, c1) VALUES (0.7935167754527146, 0.09615444278420271, '-1383154445', 0.2787073943937539, 0.7824510769263724); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0, c1) VALUES ('', NULL, (((((0.37908395335159584, 0.8727712099841528, NULL))<=((NULL, '0.41239340754246867', NULL))))>=(((((NULL)OR(0Xffffffffcb25fcca)))AND('')))), NULL); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0) VALUES (-1935077217, '-657260529'); -- 0ms;
INSERT OR IGNORE INTO rt1(c4, c1) VALUES (x'', NULL), (-1.51648642E9, NULL), ('320534390', 0.390650618920829); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', ' sz=1801345316 unordered noskipscan'); -- 1ms;
INSERT OR IGNORE INTO rt1(c2, c1, c3, c4) VALUES (0.5183806355507942, x'', '990318825', 0.27604933373698604), ('1181692467', '', x'', '-886702902'), (NULL, x'', '-32049008', -1.862829259E9); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c3, c0, c2) VALUES (0X61b788dd, '1293637129', NULL, -884321675), ('1010564957', -20588143, -500176724, NULL), (x'', 'ᾨ', '-367398391', NULL); -- 0ms;
INSERT OR REPLACE INTO rt1(c0, c5, c3, c2, c4) VALUES (0x7bfb50a2, x'', NULL, NULL, 0.46634983756237935); -- 0ms;
INSERT OR ABORT INTO rt0(c1, c3) VALUES (0.17819889407838152, x''), (x'', 'n裝E''<vn,'), (-523696626, 0.1557488897640339), ('諱2%tS', NULL), (-32049008, x''); -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (x''), (484789530), (x'5122'); -- 1ms;
INSERT OR REPLACE INTO rt0(c0, c2, c1) VALUES (x'', 0.28799846543042906, '-32049008'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0) VALUES ('320534390', NULL), (-523696626, NULL), (x'532eb9c2', '1861598681'); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (x''); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c2, c4) VALUES ('-232800589', '', 0xfffffffff21fbeb3), (NULL, 0.4694485517807666, x''), ('1', x'10e1e6df', NULL); -- 0ms;
ANALYZE; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 5ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt1(c3, c1, c2, c0, c4) VALUES (0.2939844151659685, 'ὨΙ', x'', -1.692413995E9, 0.9945602516686016), ('1024986167', x'', 0.1124249599738043, -3.32211586E8, 0.2787073943937539), ('', '-1845692888', NULL, '-bj', x'3079'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c3, c0, c4, c2) VALUES ('', NULL, x'd7af', '1987793142', ''), ('-1261297884', 0.8414318670984169, x'6a2d', NULL, CAST(-1.845692888E9 AS TEXT)), (x'', 0.005738028781015703, 0.96699123533111, NULL, 0.2711919858364237); -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c4, c1, c2) VALUES (NULL, 0.25315626684915926, 0.3853671440380685, ''); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
PRAGMA main.application_id = -1215936608677232158; -- 1ms;
ANALYZE rt0; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c3, c1, c2) VALUES (2134071419, -1e500, x'8c23', '-32049008'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(664353127); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c3, c1) VALUES (NULL, NULL, x''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c3) VALUES (NULL, 0.17819889407838152, 0.5093520255397418); -- 1ms;
REINDEX  rt0; -- 2ms;
INSERT OR IGNORE INTO rt1(c5, c2, c4, c0) VALUES (0.8217655384095235, 0.46634983756237935, '_?I(', '-20588143'); -- 8ms;
END; -- 2ms;
PRAGMA application_id; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
INSERT OR ABORT INTO rt1(c5, c0) VALUES ('', x'705a'); -- 0ms;
INSERT OR ABORT INTO rt0(c4) VALUES ('-1516486420'); -- 1ms;
INSERT OR IGNORE INTO rt0(c4, c1, c2) VALUES ('', '-640625991', 0.9251165586834126), ('-367398391', x'', -1966895551), ('1765023898', NULL, NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (0.0); -- 0ms;
PRAGMA main.automatic_index = true; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL ((TOTAL(rt1.c5))GLOB((NULL IN ()))) FROM rt0;SELECT ((((rt1.c4) IS FALSE)) IS TRUE) FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c4)) BETWEEN ((COUNT(*))) AND ((((rt1.c0)+(rt0.c2))))) FROM rt1 LEFT OUTER JOIN rt0 ON ((((((rt1.c4) NOTNULL))AND(TRIM(x''))))OR(x'd706')); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt1.c3 END)<(((((rt0.c3)AND(rt1.c3)))OR(rt0.c4)))), CASE rt0.c4 COLLATE RTRIM  WHEN rt1.c1 THEN 0.4758820827593484 ELSE (((rt1.c4, rt1.c1, rt1.c1))>(('', rt0.c0, rt1.c5))) END, CASE WHEN ((rt0.c2)AND(rt0.c0)) THEN (rt1.c5 IN ()) WHEN ((rt1.c1)-(rt1.c0)) THEN CASE WHEN rt0.c2 THEN rt1.c1 END WHEN CAST(rt0.c3 AS INTEGER) THEN rt1.c1 ELSE CAST(rt1.c1 AS NUMERIC) END, (rt1.c4 IN ()) COLLATE BINARY, rt0.c4 FROM rt0, rt1 WHERE (CAST(0.08937592928492788 AS INTEGER) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT CAST((~ (rt1.c2)) AS INTEGER), ((CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c5 END) IS FALSE), GROUP_CONCAT(CASE WHEN rt1.c5 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c5 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c5 WHEN rt1.c0 THEN rt1.c0 END) OVER () FROM rt1;SELECT ALL ((((((((rt1.c2)AND(rt0.c4)))OR(rt1.c2)))AND(((rt0.c1)IS(rt1.c2)))))OR(((((rt0.c1)AND(rt1.c1)))AND(rt1.c4)))) FROM rt0, rt1 WHERE ((((0.2247194881052209 IN (x'6d5e'))) NOT BETWEEN (0.8414318670984169) AND (x''))); -- 0ms;
SELECT DISTINCT (json_patch(rt1.c5, rt1.c2) IN ()) FROM rt0, rt1 LIMIT -161191649; -- 0ms;
SELECT DISTINCT AVG(((((rt1.c3)AND(rt1.c1)))OR(rt1.c2))) FROM rt0, rt1 WHERE (((((0.10407618829428422)==(0.2844366012381927)))>>((('CW') BETWEEN ('1274693273') AND ('-1415213050'))))); -- 0ms;
SELECT DISTINCT ((((rt1.c0)OR(CAST(rt0.c3 AS NUMERIC))))AND(((rt1.c0)OR(rt0.c1)))), (CASE rt1.c5  WHEN rt1.c5 THEN rt1.c0 ELSE rt0.c4 END IN (CAST(rt0.c2 AS TEXT), ((rt0.c2)>=(NULL)))), rt1.c3 FROM rt0, rt1 WHERE (CAST(CAST('' AS BLOB) AS NUMERIC)); -- 0ms;
SELECT ALL COUNT(*) OVER (), ((CASE WHEN rt1.c2 THEN rt0.c4 END)/((((rt0.c1, x'7d97', rt1.c4))>((rt1.c3, rt1.c1, rt0.c2))))), (((((- (rt1.c2)))OR(TRIM('1765023898', rt0.c2))))OR(CAST(rt0.c1 AS NUMERIC))) FROM rt1, rt0 WHERE (CAST(((NULL) BETWEEN (x'56f8') AND ('519648533')) AS REAL)); -- 0ms;
SELECT DISTINCT CAST(CAST(rt1.c3 AS TEXT) AS REAL) FROM rt1 WHERE (CASE WHEN LIKELY(0.019802093750991623) THEN (((x'', NULL, -252886138))!=((x'689f', 0x51300a4c, 0X466f3233))) WHEN CASE WHEN '-523696626' THEN NULL ELSE 0.5594884955167644 END THEN CAST('1522173297' AS INTEGER) WHEN ((0X6b5e5924) BETWEEN (x'343e') AND (0.8309217094583299)) THEN 0.5791489432802636 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT (~ (((((((((((((rt1.c5)AND('1넋yh')))OR(rt0.c0)))AND(rt1.c3)))AND(rt0.c2)))AND(rt0.c4)))OR(rt1.c0)))) FROM rt0, rt1 WHERE (((COALESCE(x'', NULL)) NOTNULL)); -- 0ms;
SELECT ALL '664353127' FROM rt1, rt0 WHERE (CASE ('XboȢ' IN ())  WHEN (('-657260529') IS FALSE) THEN TYPEOF(x'') ELSE x'' END); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt1.c5))>=((('1넋yh')|(0.9288903785268364)))), rt1.c1, ((TRIM(DISTINCT rt1.c4, rt1.c3))/(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c1)))) FROM rt1 WHERE (x'');SELECT (((0.35860592542813063)%(rt1.c2)) IN ()) FROM rt1 INNER JOIN rt0 ON (((((rt0.c4, rt1.c4, rt1.c0)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((rt0.c3, rt0.c0, rt1.c1)))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((((rt0.c2))=((rt0.c3))))) WHERE (((0x3d8679ce)-(x'')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((((rt1.c1)<=(rt1.c5))) NOT NULL) FROM rt1, rt0 ORDER BY (((rt0.c1, (rt1.c3 IN (rt0.c0, rt0.c2)), '-21737957'))>=(((((rt0.c3, rt0.c0, NULL, rt0.c1, rt0.c1)) NOT BETWEEN ((rt1.c4, rt0.c0, rt0.c3, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c0, rt1.c4, rt0.c0, rt0.c1))), CASE WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END, (rt0.c3 IN (rt1.c2, rt1.c0)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((rt1.c4, rt1.c0, rt1.c0)) BETWEEN ((MAX(rt0.c1), ((rt1.c5)<(rt0.c2)), ((rt1.c0)GLOB(rt0.c4)))) AND ((((rt1.c5) NOTNULL), (rt0.c1 IN (rt0.c1, rt0.c2)), ((NULL)<<(rt1.c0))))) FROM rt0, rt1 WHERE ((NOT ((~ ('38379054'))))); -- 0ms;
SELECT ((((rt1.c0)AND(rt1.c0)))OR(rt1.c0)) COLLATE BINARY, CASE WHEN CASE WHEN rt1.c5 THEN rt0.c0 END THEN rt0.c4 ELSE ((rt1.c5) BETWEEN (rt1.c2) AND (0.2718134424173345)) END, COUNT(*) FROM rt0, rt1 WHERE ((CAST(NULL AS NUMERIC) IN ())) LIMIT 1349868902 OFFSET 2049559583; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1 WHERE (TRIM(DISTINCT (NULL IN ()))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0, rt1 WHERE (CASE ((x'bd3e')%('-0.0'))  WHEN ((x'') NOTNULL) THEN LIKELY('-1966895551') WHEN ('~\r' IN ()) THEN ((x'') NOT NULL) WHEN ((((((((NULL)AND(1.274693273E9)))AND(-638765456)))AND('-638765456')))AND('')) THEN ('-Bj' IN ()) WHEN (((0.9945602516686016)) NOT BETWEEN ((0.2844366012381927)) AND ((2.049559583E9))) THEN x'' WHEN ((('-605922969', '-929975201', x''))==(('0.4694485517807666', '1221260621', '651459821'))) THEN ((x'')IS NOT(0.2462636799822311)) ELSE CAST('3a' AS NUMERIC) END); -- 0ms;
SELECT (((~ (rt0.c2)))*((- (rt1.c0)))) FROM rt0, rt1 WHERE ((CAST(NULL AS INTEGER) IN ())); -- 0ms;
SELECT DISTINCT ((((rt1.c2)GLOB(rt0.c4))) NOTNULL) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT ((0.13956500631056623)GLOB(rt0.c3))), CAST(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c5 END AS NUMERIC), ((((CASE rt1.c0  WHEN rt1.c1 THEN '-1490865557' ELSE rt1.c4 END)OR(rt0.c0 COLLATE BINARY)))AND(((rt1.c3)/(rt0.c2)))) FROM rt0 WHERE (QUOTE((((0.29111878681984615))==((NULL)))));SELECT ALL CAST(rt1.c0 COLLATE NOCASE AS BLOB) FROM rt0, rt1 WHERE ((+ (((0.4436873199443174)IS NOT(0.9668500290303491))))); -- 0ms;
SELECT ALL GROUP_CONCAT(MIN(((((rt0.c1)AND(rt0.c2)))OR(rt1.c2)))) FROM rt1, rt0;SELECT ALL (NOT (CASE rt1.c1  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c0 THEN rt1.c3 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) FROM rt1, rt0 WHERE ((((((-1516486420) NOT BETWEEN (NULL) AND (0.42584684272388873))))<=((((('8%1tZFGZ')) NOT BETWEEN ((0.5080118458093422)) AND (('0.005738028781015703'))))))); -- 0ms;
SELECT DISTINCT (TYPEOF(DISTINCT rt0.c1) IN ()) FROM rt0, rt1; -- 0ms;
SELECT '~5', (NOT ((((x'')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c0))))), rt0.c3 FROM rt0 WHERE ((~ (CASE 0.19975295124725667  WHEN 0.23736701220976275 THEN NULL WHEN 0.6429075094952037 THEN x'' WHEN '' THEN NULL ELSE x'' END))); -- 0ms;
SELECT ALL UPPER(DISTINCT ((rt1.c5)LIKE(rt1.c3))) FROM rt0 LIMIT -1865020129;SELECT DISTINCT ((LIKELIHOOD(rt1.c3, 0.43218252229376064))|(((rt1.c3) IS FALSE))) FROM rt0 GROUP BY (- (((rt1.c3)!=(rt1.c5)))), ((((rt1.c4) BETWEEN ('-1865020129') AND (rt1.c0))) IS FALSE), COALESCE(((((rt0.c3)OR('1554507035')))OR(rt1.c0)), rt0.c2 COLLATE RTRIM);SELECT DISTINCT ((CAST(rt1.c1 AS REAL))%((NOT (1.987793142E9)))) FROM rt1; -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c2 AS TEXT)) FROM rt1 ORDER BY CASE WHEN ((((rt1.c3)AND(rt0.c0)))OR(rt0.c3)) THEN ((rt0.c4)&(rt0.c0)) END  NULLS LAST;SELECT (+ (rt1.c3)) COLLATE RTRIM FROM rt0, rt1 GROUP BY ((rt1.c1 COLLATE NOCASE)GLOB(CAST(rt0.c2 AS TEXT))) HAVING ((((rt1.c0)||(rt1.c4)))+((((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c1))))) ORDER BY ((((NOT (rt0.c1))))<>((x''))) DESC  NULLS FIRST; -- 1ms;
SELECT ALL 0.1375235105395518 FROM rt0; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c2))-((rt0.c3 IN ()))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (MIN(rt1.c3) IN ()), 0.9200438000755825, (((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt1.c3)) IN (((rt0.c0) IS FALSE))) FROM rt0, rt1 WHERE ((((x'')) BETWEEN ((0.030018721095370626 COLLATE RTRIM)) AND (((((NULL, x'', NULL)) NOT BETWEEN ((1.36210286E9, x'', x'')) AND (('Co\rfAg', -1.966895551E9, x''))))))) LIMIT 0 OFFSET -1902509534; -- 0ms;
SELECT DISTINCT (((((rt1.c1)) BETWEEN ((rt0.c2)) AND ((rt1.c4))))&(CASE WHEN rt0.c3 THEN rt1.c0 END)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), (rt0.c1 IN ()) COLLATE RTRIM, COUNT(((rt1.c2)||(rt0.c2))) OVER () FROM rt1, rt0 GROUP BY ((-797467266) BETWEEN (rt1.c1 COLLATE NOCASE) AND (CAST(rt0.c4 AS INTEGER))) HAVING TOTAL(rt1.c4 COLLATE RTRIM); -- 0ms;
SELECT ALL TYPEOF((rt0.c3 IN (rt1.c2, rt0.c3))) FROM rt0, rt1 WHERE ((('1842128163' IN (x'')) IN ())) ORDER BY ((CAST(rt1.c4 AS NUMERIC)) BETWEEN (((rt1.c2) ISNULL)) AND (((((rt0.c1)OR(rt1.c2)))OR(rt0.c3))))  NULLS FIRST, CASE ((x'') BETWEEN (NULL) AND (-8.84321675E8))  WHEN rt1.c1 THEN CASE WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c1 END END  NULLS FIRST; -- 0ms;
SELECT CASE rt0.c3  WHEN CAST(rt1.c0 AS NUMERIC) THEN TOTAL(rt0.c2) WHEN ((rt0.c1)AND(rt0.c4)) THEN ((rt1.c0)/(rt1.c2)) WHEN (~ (rt1.c4)) THEN ((((rt1.c2)OR(rt0.c4)))OR(rt0.c2)) END FROM rt0 WHERE (TRIM('oॶ', 0X0) COLLATE NOCASE);SELECT ALL UPPER(DISTINCT ((rt1.c3)>=(rt0.c3))) FROM rt1 WHERE ((((NOT (''))) BETWEEN ((('d~{}') NOTNULL)) AND ('-1356880442'))) GROUP BY x'b36e', ((rt1.c2) ISNULL) COLLATE RTRIM, (((~ (rt1.c5))) ISNULL), NULL, ((((rt0.c0)OR((~ (rt1.c3)))))AND(((rt0.c1) NOT NULL))) HAVING ((((rt0.c0)IS NOT(rt1.c3)))*(((rt0.c1) NOT BETWEEN (rt1.c4) AND (rt0.c2))));SELECT ALL ((((rt1.c4) IS FALSE))*(((rt0.c4)IS NOT(rt0.c4)))) FROM rt0;SELECT ALL 0.2783575702326031 COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ((json_array(rt1.c2, rt1.c3))IS NOT(((NULL) ISNULL))) FROM rt0;SELECT DISTINCT SUM(((rt1.c0)AND(rt1.c5))) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((CASE 'up'  WHEN rt1.c0 THEN rt1.c4 ELSE rt1.c2 END)AND((rt1.c4 IN ()))))AND((~ (rt1.c0))))) OVER () FROM rt1; -- 0ms;
SELECT ALL (~ (UNLIKELY(DISTINCT rt0.c1))) FROM rt1 WHERE (0X76b69f3d) GROUP BY (((((0.2088106843836398))>=((rt1.c2))))<>(rt0.c2 COLLATE BINARY));SELECT ALL (((- (rt0.c2)))%(((rt1.c0)>=(rt1.c0)))), (((MIN(rt1.c1), 0.3875634790864123, NULL, ((((((((rt0.c1)OR(0.41989750836208595)))OR(rt0.c4)))OR(-2115126268)))AND(rt0.c1)), ((rt1.c0)<(rt0.c4))))<>(((+ (rt1.c3)), CASE 'Znowqd	'  WHEN rt1.c0 THEN rt0.c1 ELSE rt1.c0 END, rt0.c4 COLLATE NOCASE, CASE WHEN 'EUx,' THEN rt0.c2 ELSE rt0.c4 END, (((rt1.c3, rt0.c2, rt1.c3, rt1.c4, rt1.c1)) NOT BETWEEN ((rt1.c5, rt0.c0, rt0.c2, rt1.c4, rt1.c5)) AND ((rt0.c4, rt0.c2, rt1.c5, rt0.c4, rt0.c1)))))), TOTAL(rt1.c1) OVER ( RANGE x'' PRECEDING EXCLUDE GROUP) FROM rt0, rt1;SELECT ALL COUNT(*) OVER (), HEX(rt0.c3 COLLATE NOCASE), (((rt1.c4)) BETWEEN (((NOT (rt0.c3)))) AND (((~ ('8^dh3%hE{'))))) FROM rt0, rt1 LIMIT 1032223182 OFFSET 406786919; -- 1ms;
SELECT DISTINCT ((json_object(rt0.c2, rt1.c5))/((NOT (rt1.c2)))) FROM rt1;SELECT ALL ((rt1.c1) NOTNULL) COLLATE RTRIM FROM rt1, rt0 WHERE (SQLITE_COMPILEOPTION_USED(0.44065021383830427 COLLATE NOCASE)); -- 0ms;
SELECT CAST((rt1.c2 IN ()) AS BLOB), (~ (((rt1.c3)<(rt0.c4)))), ((((((((((rt1.c3)*(rt1.c3)))OR((+ (rt1.c3)))))OR(NULL)))OR(CASE WHEN rt0.c0 THEN 9.90318825E8 ELSE rt1.c3 END)))AND(CAST('-886702902' AS REAL))) FROM rt0, rt1 ORDER BY (((rt0.c0 IN ()))IS NOT(((rt1.c2)<<(rt0.c4)))) ASC, CASE WHEN CASE rt1.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c5 THEN rt0.c4 WHEN rt0.c2 THEN rt1.c5 ELSE rt1.c0 END THEN CAST(rt1.c5 AS TEXT) WHEN ((rt0.c1) ISNULL) THEN ((rt1.c1) ISNULL) WHEN (('-1548362498') NOT BETWEEN (rt0.c1) AND (rt0.c2)) THEN CASE WHEN rt1.c0 THEN rt0.c3 WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END WHEN ((rt1.c3)>(rt0.c2)) THEN (rt1.c5 IN (rt0.c4, rt1.c5)) WHEN 'Znowqd	' THEN rt0.c1 END; -- 0ms;
SELECT ALL ((-2098665023)OR(rt1.c3)) COLLATE NOCASE FROM rt1 WHERE (((((x'')<(NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((rt1.c0 IN (0.34683984028334935))))>((((rt1.c4)<=(rt0.c3))))), (((((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt1.c1)))) IS TRUE), CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM FROM rt1, rt0 WHERE (CASE WHEN (((x'', '-1261297884', 'ZG悋FW'))!=(('1010564957', '1362102860', x'49a2'))) THEN (((((((('F?琏u#[Fxt')OR('-1896638293')))OR(NULL)))AND(0.39260524035375455)))AND(NULL)) END); -- 0ms;
SELECT ALL RANK() OVER () FROM rt0; -- 0ms;
SELECT (((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.04259016895048706)) IN (((rt0.c4)+(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt1.c4, ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (rt1.c3)))<=(rt1.c4 COLLATE RTRIM)), (((rt1.c5)) BETWEEN ((NULL)) AND ((json_object(rt1.c3, rt0.c4)))) FROM rt1, rt0;SELECT (('0.4694485517807666')>>((NOT (rt0.c3)))) FROM rt0, rt1 WHERE (((x'')AND((((0.1394620241537904, 'B>', 0X7fffffffffffffff))>=(('-1668512947', NULL, NULL)))))) LIMIT -1907735765; -- 0ms;
SELECT ALL CAST(MIN(rt1.c3) AS REAL) FROM rt1 WHERE (((((('-1261297884')) NOT BETWEEN ((NULL)) AND ((x'c9e9'))))IS NOT(((0.0028989791252092)<>('iC篴''_.J.'))))) LIMIT -523696626; -- 0ms;
SELECT DISTINCT ((rt1.c5 COLLATE NOCASE) IS TRUE) FROM rt0, rt1 LIMIT 2134071419 OFFSET -177966110; -- 2ms;
SELECT DISTINCT ((((((rt1.c5)OR(rt0.c2)))OR(rt0.c0))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (((rt1.c1) IS TRUE))) FROM rt1;SELECT ALL SUM(((-1907735765) ISNULL)) OVER () FROM rt1 WHERE (((((UPPER(0.8414318670984169))AND(NULL COLLATE BINARY)))OR(CASE WHEN 'QK' THEN 0.9618247466779303 END))) UNION ALL SELECT rt1.c4 FROM rt1, rt0 GROUP BY -1.548362498E9 HAVING (- (rt1.c5 COLLATE BINARY)); -- 1ms;
SELECT ALL ((rt1.c1 COLLATE NOCASE)*('-332211586' COLLATE NOCASE)) FROM rt0;SELECT DISTINCT rt0.c0, ((((COALESCE(rt0.c4, 0.5594884955167644, rt0.c1, rt1.c2))AND(x'' COLLATE NOCASE)))AND(((rt0.c3)>=(rt0.c1)))), TOTAL((~ (rt0.c3))) FROM rt1, rt0 WHERE (((0.2647167080614916) IS FALSE)) LIMIT -1007271769 OFFSET -281461675; -- 0ms;
SELECT ALL ' h' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0 WHERE ((((x'')) NOT BETWEEN ((CASE WHEN 0.9503475586900246 THEN NULL WHEN 0.1394620241537904 THEN 1.032223182E9 WHEN '527267064' THEN 0xffffffffa723326b ELSE 0.8421841470940693 END)) AND (((~ (0.32635910213025476)))))) ORDER BY (~ (rt0.c1)) COLLATE RTRIM DESC  NULLS FIRST;SELECT DISTINCT CASE ((rt1.c3) NOTNULL)  WHEN ((rt0.c1)>(rt1.c5)) THEN (- (rt0.c4)) END FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt1.c0) AND (rt0.c4)) IN ()), ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN NULL THEN rt0.c3 ELSE rt1.c3 END)IS NOT(rt0.c0 COLLATE RTRIM)), SUM(((((rt0.c0)OR(rt1.c1)))OR(rt0.c0))) FROM rt0;SELECT DISTINCT CASE ((rt1.c1) NOTNULL)  WHEN CAST(rt1.c1 AS NUMERIC) THEN UNICODE(rt1.c3) ELSE (((((((('z}')OR(rt1.c0)))AND(rt1.c1)))OR(rt1.c2)))OR(rt1.c5)) END, ((IFNULL(DISTINCT rt1.c3, rt1.c4)) NOT BETWEEN (((((rt1.c5)OR(rt1.c4)))AND(rt1.c2))) AND (((rt1.c3) NOTNULL))), ((((rt0.c3 IN ())))<=((((0Xffffffffef393c55)/(rt1.c4))))) FROM rt1 WHERE (rtreenode(NULL COLLATE RTRIM, CAST('' AS BLOB))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt1.c0 AS REAL) THEN (- (rt1.c4)) WHEN '38379054' COLLATE BINARY THEN COUNT(*) WHEN rt0.c0 COLLATE NOCASE THEN (rt1.c5 IN ()) END FROM rt0, rt1 WHERE (CAST(((x'efe0')&(-1.356880442E9)) AS BLOB)) LIMIT 11260797; -- 0ms;
SELECT TYPEOF(DISTINCT CAST(x'' AS NUMERIC)) FROM rt1 LIMIT -974742029 OFFSET 1533187718; -- 1ms;
SELECT ALL COUNT(CAST(rt0.c1 AS TEXT)) OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((HEX(rt1.c5))/((((rt1.c1))<((rt1.c1))))) FROM rt0 INNER JOIN rt1 ON LOWER(rt1.c1) EXCEPT SELECT DISTINCT RANK() OVER () FROM rt1, rt0 WHERE ((((((('2049559583')OR(0.8734469047809292)))AND('蕱c^S'))) NOT BETWEEN (CHAR('')) AND (((NULL) NOTNULL)))) LIMIT 1765023898; -- 0ms;
SELECT ALL (((rt1.c0 IN (rt1.c0))) ISNULL) FROM rt1 WHERE (CASE WHEN (('')GLOB(0.09615444278420271)) THEN ((NULL)>(NULL)) END); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT rt1.c2, rt1.c5, rt1.c4, rt1.c2) COLLATE NOCASE, COUNT(0.5678393049260048) OVER ( ORDER BY (((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0))))<=((rt0.c3 COLLATE NOCASE))) DESC, CASE CAST(rt1.c3 AS NUMERIC)  WHEN rt0.c3 THEN 0xffffffffb42a9e17 WHEN 0.6659204756716635 THEN x'' WHEN ((((rt1.c3)OR(rt0.c1)))AND(rt0.c4)) THEN -6.40625991E8 ELSE (((rt0.c1))<(('J]?'))) END DESC  NULLS LAST), (-1.883075855E9 IN (rt0.c0, CAST(rt1.c0 AS TEXT))), ((CAST(rt1.c2 AS INTEGER))>>(rt0.c3 COLLATE RTRIM)), rt1.c0, ((((rt1.c4)>(rt1.c3)))<=(((rt0.c1)-(rt1.c5)))), (((((((((((x'bf5a'))>((rt1.c5))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))))OR(1490570341)))AND(rt0.c4)))AND((1010564957 IN ()))) FROM rt0 WHERE (((NULL) NOT BETWEEN ('-1668512947') AND ('1639418077')) COLLATE BINARY);SELECT ALL (- (((rt1.c1)GLOB(rt0.c0)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c0)LIKE(rt0.c2)) COLLATE BINARY) OVER () FROM rt0 GROUP BY ((0.8406693728230507) IS FALSE), (((('nN易lVww\n')<<(rt0.c3))) NOT BETWEEN ((((rt1.c3)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c3)))) AND (CAST(rt1.c1 AS TEXT))), (((((rt1.c2, rt0.c4, rt1.c3)) NOT BETWEEN ((rt1.c4, rt1.c4, x'')) AND ((rt1.c4, rt1.c1, rt0.c0))))LIKE((((rt0.c2)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c2))))) HAVING ((((rt0.c2)LIKE(rt0.c3))) NOT BETWEEN ((rt1.c1 IN (rt0.c0))) AND (((rt0.c2)||(rt0.c1))));SELECT DISTINCT CAST(RTRIM(rt0.c2) AS INTEGER), SUM(CAST(rt0.c0 AS BLOB)) COLLATE BINARY, GROUP_CONCAT((((rt1.c0, rt1.c1, rt0.c4)) NOT BETWEEN (('1490570341', rt0.c0, rt0.c2)) AND ((rt1.c0, rt1.c4, rt1.c3)))) FROM rt1, rt0 WHERE ((~ ((((0.05155522140101865))<=((1.349868902E9)))))); -- 0ms;
SELECT DISTINCT (938893244 IN ()), (((((+ (rt1.c5)))AND(((rt0.c0)/(x'')))))AND((rt1.c4 IN (rt1.c2)))), GROUP_CONCAT(LOWER(rt1.c4)) OVER ( ROWS BETWEEN ((rt0.c3)<=(rt1.c5)) COLLATE NOCASE PRECEDING AND ((((rt1.c3) BETWEEN (rt1.c4) AND (rt1.c4))) ISNULL) FOLLOWING EXCLUDE TIES) FROM rt1, rt0;SELECT DISTINCT CASE SUM(rt0.c1)  WHEN (+ (rt0.c4)) THEN '' END FROM rt0, rt1 ORDER BY rt1.c0 LIMIT 1801345316 OFFSET -232391641; -- 0ms;
SELECT ((((((((((rt1.c1) BETWEEN (rt1.c4) AND (rt0.c4)))AND(rt0.c3 COLLATE RTRIM)))OR(CAST(rt1.c5 AS BLOB))))AND(AVG(rt1.c2))))AND(TIME(x'72fa', rt1.c3, rt1.c3))) FROM rt1 WHERE (0.8727712099841528) ORDER BY (- ('1991679805'))  NULLS FIRST;SELECT DISTINCT (+ (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))) FROM rt0 WHERE (((CAST(2.49175976E8 AS BLOB))+(((0.6246812449821754) BETWEEN (x'7097') AND (NULL))))) GROUP BY ((rt1.c4 COLLATE NOCASE) ISNULL) HAVING (((rt1.c1)<(NULL)) IN ());SELECT ALL (((rt1.c2, NULL, rt1.c1)) NOT BETWEEN ((((rt0.c0)AND(rt1.c1)), CAST(rt0.c1 AS NUMERIC), LOWER(rt0.c0))) AND ((CAST(rt1.c2 AS REAL), (((NULL))>=((rt0.c3))), ((rt1.c5)-(rt0.c4))))), ((((rt1.c2) BETWEEN (rt0.c1) AND (0.011401876980435377))) BETWEEN (((((rt0.c2)OR(rt0.c2)))OR(rt1.c3))) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))), ((((((rt0.c3))>((rt1.c0)))))<((0.498186579850865))) FROM rt1, rt0 WHERE ((((('-640625991')OR('j丛'))) BETWEEN (((x'')|('FS俗,W/~炂뵓'))) AND (CASE WHEN 0.5029020103187395 THEN 0.49436463051874024 END))) LIMIT 1506502603 OFFSET 484789530; -- 0ms;
SELECT DISTINCT NTILE(((((1535027999 IN (rt1.c3, rt0.c1))))==((rt1.c0)))) OVER () FROM rt0, rt1 WHERE (CAST((- (0xffffffffe00cd5ec)) AS INTEGER)); -- 0ms;
SELECT CAST((((rt0.c3, rt1.c1, ''))=((rt1.c0, rt0.c1, rt0.c0))) AS TEXT) FROM rt0 WHERE ((- (SQLITE_SOURCE_ID()))) ORDER BY NULL  NULLS FIRST;SELECT ALL GROUP_CONCAT(CAST(rt1.c1 AS TEXT)) OVER (), MIN((NOT (rt1.c0))), ((rt0.c3 COLLATE RTRIM)IS(CASE rt1.c5  WHEN rt1.c4 THEN rt1.c1 WHEN x'e47d' THEN rt1.c3 WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((rt1.c1, ((NULL)<=(rt0.c2)), (((x''))<((rt1.c1)))))=((((rt1.c3) ISNULL), ((rt1.c1)>(rt0.c1)), (((rt1.c3, rt0.c0, rt1.c3)) BETWEEN ((rt1.c0, rt1.c0, rt1.c2)) AND ((rt0.c1, rt1.c5, rt1.c5)))))) FROM rt0 WHERE ((CASE '<a'  WHEN '~5' THEN NULL WHEN 0.9457107772887141 THEN NULL WHEN NULL THEN 0.29455180617846 ELSE NULL END IN ()));SELECT DISTINCT ((rt0.c2)<(rt0.c4)) COLLATE BINARY, ((((rt0.c1) NOT BETWEEN (rt1.c1) AND (rt0.c0))) NOTNULL), CASE CAST(rt1.c2 AS REAL)  WHEN (rt0.c2 IN (rt1.c3)) THEN CASE WHEN rt1.c3 THEN rt1.c4 END WHEN CASE WHEN rt0.c1 THEN rt1.c3 ELSE rt0.c4 END THEN TOTAL(rt1.c5) WHEN (+ (rt0.c4)) THEN SUM(rt1.c0) WHEN ((rt1.c1)-(x'e101')) THEN rt0.c3 WHEN (rt0.c4 IN (0.64010342392917)) THEN (- (rt1.c2)) ELSE rt1.c3 COLLATE NOCASE END FROM rt0 WHERE (((0Xffffffffacb080ff COLLATE RTRIM)>>((('饨 D') IS FALSE))));SELECT DISTINCT (((rt0.c1, rt1.c0, rt0.c0)) BETWEEN ((((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c0)))AND(rt1.c1)))AND(rt1.c0)), CAST(rt1.c3 AS NUMERIC), ((rt0.c3)<=(rt0.c4)))) AND ((((rt1.c2) NOTNULL), rt1.c0 COLLATE RTRIM, ((rt1.c5)IS NOT(rt0.c3))))), (- (rt1.c0)) COLLATE NOCASE COLLATE RTRIM, (rt1.c0 COLLATE RTRIM IN ()) FROM rt1 WHERE (((((NULL)GLOB(x'de8993d5')))<(NULL))) LIMIT 1010564957;SELECT IFNULL((((rt0.c1, rt1.c3, rt1.c0)) BETWEEN ((rt1.c2, rt0.c1, rt0.c2)) AND ((rt1.c0, rt1.c3, rt1.c2))), ((rt0.c2) NOTNULL)), CAST(((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt0.c4)) AS TEXT), CASE WHEN ((rt1.c0) BETWEEN (rt1.c5) AND (rt0.c4)) THEN ((((rt1.c0)AND(rt0.c2)))AND(rt0.c4)) WHEN (((rt0.c2, rt1.c5, rt0.c3))>=((rt1.c1, rt0.c1, rt0.c2))) THEN CAST(rt0.c3 AS INTEGER) WHEN json_array_length(rt0.c1, rt0.c3) THEN (- (rt0.c0)) WHEN ((rt0.c2)||(rt1.c1)) THEN ((rt1.c3)IS NOT(rt0.c3)) WHEN ((rt1.c5) BETWEEN (rt1.c5) AND (rt0.c2)) THEN ((((rt0.c2)AND(rt0.c0)))OR(rt1.c5)) ELSE LTRIM(rt1.c2) END FROM rt1 WHERE ((((0.4694485517807666 IN ('1넋yh'))) NOT NULL)) LIMIT -571700042;SELECT ALL (((((rt1.c0) BETWEEN (0.41513299822864413) AND (rt0.c4))))<=((rt0.c2))) FROM rt0 WHERE (((((((-1.7796611E8)AND('-640625991')))OR(x'297c')))GLOB((~ (NULL)))));SELECT DISTINCT (((rt0.c4 IN ()))<(((rt1.c0)-(rt1.c2)))) FROM rt0 WHERE ((+ (0.8619536482023219))) GROUP BY ((((rt0.c2)AND(rt0.c1))) NOT NULL), ((rt0.c1) NOT BETWEEN ((~ (rt1.c0))) AND ((((rt1.c0, rt0.c0, rt1.c4, rt1.c0, rt1.c0)) NOT BETWEEN ((rt1.c0, rt1.c4, rt1.c2, rt1.c0, rt1.c5)) AND ((rt1.c2, rt1.c0, rt0.c4, rt1.c5, rt0.c4))))), ((((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c4)))/(((rt0.c2)*(rt1.c1))));SELECT ALL ((((((rt1.c4)OR('')))AND(rt0.c1))) IS TRUE) FROM rt1;SELECT DISTINCT 0.37086734740782334 COLLATE RTRIM, LIKELIHOOD(CAST(rt1.c2 AS NUMERIC), 0.9368566610878543), (((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c4)))) NOT BETWEEN (IFNULL(DISTINCT rt1.c1, rt1.c3)) AND (((rt1.c3)<=(rt0.c2)))) FROM rt1, rt0 WHERE ((((((((((('665163730')AND('0')))OR(-2127211858)))AND(x'')))OR(x'')))<>(((-1615578593)>>(NULL))))); -- 0ms;
SELECT ALL (TOTAL(rt1.c2) IN (((((rt1.c3)OR(rt0.c2)))OR(rt1.c5)), (-886036418 IN ()))), (((((~ (rt1.c5)))AND(((rt0.c1)GLOB(rt0.c1)))))OR(IFNULL(DISTINCT rt1.c5, rt0.c3))), ((((0X2499e2e) BETWEEN (rt1.c0) AND (rt0.c3))) NOT BETWEEN (((rt1.c5) BETWEEN (rt0.c2) AND (rt1.c5))) AND (((((rt0.c0)OR('+8*><\r!')))AND(rt1.c3)))) FROM rt1;SELECT UNLIKELY((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))) FROM rt0 WHERE (CAST(((((1890408230)AND(x'')))AND(x'')) AS NUMERIC)) ORDER BY NULL LIMIT -36322762; -- 0ms;
SELECT ALL rt0.c1 FROM rt1, rt0 WHERE ('U'); -- 0ms;
SELECT ALL ((((rt0.c0) ISNULL)) ISNULL) FROM rt1, rt0 WHERE ((((('1349868902')AND('NZhsG(')))AND(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((((((rt1.c0 COLLATE RTRIM)AND((NOT (rt1.c3)))))AND(((rt0.c2) BETWEEN (rt1.c5) AND (rt0.c0)))))AND((rt0.c0 IN ()))))AND((((rt0.c3))<=((rt0.c3))))) FROM rt1; -- 0ms;
SELECT NULL FROM rt1; -- 0ms;
SELECT (((((rt1.c5 IN ()))OR(rt0.c2)))AND(((((((((rt0.c3)AND(rt0.c1)))AND(rt1.c2)))AND(rt1.c3)))OR(rt0.c4)))) FROM rt0, rt1 WHERE (((HEX('-886036418'))<=((((NULL))<((-1845692888)))))); -- 0ms;
SELECT DISTINCT MAX(CASE WHEN NULL THEN rt1.c2 END), ((rt1.c5)OR(rt0.c4)) COLLATE BINARY, ((((rt0.c4)-(rt1.c4))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c0)))) AND ((rt0.c3 IN ()))) FROM rt0, rt1; -- 1ms;
SELECT DISTINCT (~ ((NOT (rt1.c4)))) FROM rt1; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c4 THEN rt1.c1 END IN ()), MAX(((rt1.c5) NOTNULL)), rt0.c2 FROM rt0, rt1; -- 0ms;
SELECT NULLIF(DISTINCT ((rt1.c2)GLOB(rt1.c2)), MAX(rt1.c2)) FROM rt0;SELECT DISTINCT (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND (((((rt1.c4)) BETWEEN ((rt0.c3)) AND ((0.9586547076857721)))))) FROM rt0 WHERE ((((UPPER(DISTINCT NULL), (((('')AND(x'122e')))AND('-411445785')), ((NULL)GLOB(x'ee9c8a7b'))))=((((NULL)AND(x'7ca6')), ((0.6067419928960692) IS FALSE), (((1275653636))<((''))))))) GROUP BY ((CAST(rt0.c4 AS BLOB)) BETWEEN ('-1091509224') AND (((((rt1.c5)AND(rt0.c0)))OR(rt0.c0))));SELECT DISTINCT CASE rt1.c1  WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c2 END COLLATE BINARY COLLATE RTRIM, ((((x'9eda') NOTNULL)) ISNULL), ((((rt0.c4) NOTNULL)) ISNULL) FROM rt0;SELECT DISTINCT ((((rt0.c3)>=(NULL))) NOT NULL) FROM rt0 WHERE ((((NULL IN ()))>(1861598681 COLLATE BINARY))); -- 0ms;
SELECT '1861598681' FROM rt1 WHERE ((- (NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL (((((NULL))=((rt0.c2))))IS NOT((('-1692413995') NOT BETWEEN (rt1.c4) AND (rt1.c5)))), (((IFNULL(DISTINCT rt1.c2, rt0.c1), rt0.c0 COLLATE NOCASE, ((rt0.c2) NOTNULL)))>((CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt1.c5 WHEN rt0.c4 THEN rt1.c2 ELSE rt0.c0 END, ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt0.c3)), CAST(rt1.c4 AS BLOB)))), ((((rt1.c4 IN ())))!=(((NOT (rt0.c1))))) FROM rt1 WHERE (((((NULL)IS NOT(NULL))) IS TRUE));SELECT DISTINCT (CASE WHEN rt1.c3 THEN rt1.c0 END IN ()) FROM rt0 WHERE (TRIM((((('kg1\nDoRC')OR('-755631886')))AND(-1692413995)))) GROUP BY ((CAST(x'ab2b' AS NUMERIC)) BETWEEN (rt1.c5) AND (((rt1.c5) NOT NULL))) HAVING CASE WHEN (~ (rt0.c0)) THEN ((rt1.c1)LIKE(rt0.c3)) ELSE TOTAL(rt0.c4) END;SELECT ALL NULL FROM rt0 ORDER BY CASE rt0.c2  WHEN (((rt0.c3, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt1.c5, NULL)) AND ((rt1.c4, rt1.c1, rt0.c3))) THEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE ((rt0.c4) BETWEEN (rt0.c1) AND (rt1.c0)) END;SELECT ((CASE rt0.c1  WHEN rt1.c0 THEN rt0.c2 END)+(rt0.c3)) FROM rt1, rt0 GROUP BY rt0.c3 HAVING (((((((((rt1.c5)AND(rt1.c2)))OR(rt1.c2)))AND(rt1.c1)))OR(rt0.c0)) IN ()); -- 3ms;
SELECT ALL CASE WHEN ((rt1.c1)GLOB(rt0.c1)) THEN ((rt0.c3)>=(rt0.c0)) WHEN (~ (x'2b2c')) THEN (((rt1.c4))>=((rt0.c1))) WHEN ((((((((((((rt1.c5)AND(rt1.c5)))OR(rt1.c4)))AND(rt1.c3)))OR(rt1.c3)))OR(rt1.c5)))AND(rt1.c3)) THEN (+ (rt0.c0)) ELSE LOWER(DISTINCT rt1.c5) END, ((((rt1.c0) BETWEEN (rt1.c0) AND (rt0.c3))) NOT BETWEEN ((rt0.c2 IN ())) AND (((((rt1.c3)OR(rt1.c0)))AND(rt1.c1)))), rt1.c4 FROM rt0 WHERE ((('') BETWEEN (((0.47069293017471137)==(x'f5ec'))) AND ((((x''))<=((0.9586547076857721))))));SELECT ((((CAST(rt1.c5 AS BLOB))OR(CAST(rt1.c4 AS TEXT))))AND(GROUP_CONCAT(rt0.c1))), CAST(((((rt1.c0)AND(rt0.c4)))AND(x'')) AS BLOB), MAX(((rt1.c5) BETWEEN (rt1.c0) AND ('ᾨ'))) FROM rt1;SELECT DISTINCT ((((((rt1.c3)<>(rt0.c1)))AND(((x'ad08')%(rt1.c4)))))OR(((rt1.c3)OR(rt1.c3)))), COUNT(CASE WHEN rt0.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c4 WHEN rt1.c4 THEN rt0.c2 END), x'' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT TYPEOF(((rt1.c1)>('1989325232'))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT '422942018' FROM rt1, rt0 WHERE (((((((x'')AND(NULL)))OR(0.7170579266089683)))<<(((0Xffffffff8b56bcbe) BETWEEN ('') AND (-588863746))))); -- 0ms;
SELECT TOTAL(((rt1.c4) NOT NULL)) COLLATE NOCASE, RANK() OVER (), ((((rt0.c2) NOT BETWEEN (rt1.c4) AND (rt1.c3)))LIKE(((((0.9044584235737797)AND(rt0.c2)))AND(rt0.c0)))) FROM rt1 WHERE (CASE 'Xw'  WHEN '133995647' THEN -742717066 WHEN NULL THEN '-1668512947' WHEN '0.96699123533111' THEN 0.8571783767239369 END COLLATE BINARY COLLATE RTRIM);SELECT ALL CASE (+ (rt0.c4))  WHEN CAST(rt1.c0 AS BLOB) THEN rt0.c3 ELSE rt1.c4 END, ((-328680109 COLLATE RTRIM)/(((rt1.c3)IS(rt1.c2)))), ((((((((((((rt1.c0)OR(rt0.c0)))OR(rt1.c1)))OR(rt0.c3)))AND(MIN(rt0.c2))))OR((((rt0.c2))>=((rt1.c0))))))AND(CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt1.c5 END)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (- ((((rt1.c5)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt1;SELECT DISTINCT COUNT(CASE 0.7493390989964938  WHEN 0.4566604987553122 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c4 THEN rt1.c0 ELSE rt0.c2 END) OVER () FROM rt1 WHERE (CAST((('''_R') NOT BETWEEN (x'9695') AND ('-930197127')) AS TEXT));SELECT ALL ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0, rt1 GROUP BY ((NULL)*(CAST(rt1.c2 AS REAL))), LIKE(rt0.c1, (((rt1.c5, rt0.c0, rt1.c5))!=((rt1.c1, rt1.c2, x'26b4'))), 'R'), ((((rt0.c0) NOTNULL))*(rt1.c3)); -- 5ms;
SELECT DISTINCT CAST(rt1.c1 COLLATE NOCASE AS TEXT) FROM rt0;SELECT COUNT(rt1.c0) OVER ( PARTITION BY ((((rt0.c1)<=(rt1.c4)))|((+ (rt1.c1)))), CASE CASE rt1.c2  WHEN rt0.c3 THEN rt1.c5 WHEN rt1.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c0 THEN rt1.c3 ELSE rt1.c3 END  WHEN ((rt1.c1)<(rt0.c4)) THEN rt1.c5 COLLATE RTRIM WHEN 0.2298240482787416 THEN rt0.c1 WHEN (x'1817' IN ()) THEN rt0.c0 END) FROM rt1, rt0 WHERE (CASE (NULL IN ())  WHEN x'' THEN CASE x'c648'  WHEN '' THEN '0.5080118458093422' END WHEN ((((((((-1907735765)OR(NULL)))AND(NULL)))OR(x'')))OR(NULL)) THEN (((x''))>((-886702902))) WHEN '0J' THEN (((('-974742029')AND(0.26053654020708084)))AND(NULL)) END); -- 1ms;
SELECT ((rt1.c0 COLLATE NOCASE) NOTNULL), MIN((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))), '-1073994176', CASE WHEN CASE rt0.c2  WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c1 END THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c3 WHEN rt1.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt1.c4 END WHEN CASE rt1.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c5 THEN rt0.c3 ELSE rt1.c1 END THEN ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c1)) WHEN CAST(rt0.c3 AS REAL) THEN AVG(rt1.c2) WHEN IFNULL(rt1.c5, rt0.c0) THEN UPPER(DISTINCT rt1.c4) WHEN '1349868902' THEN MAX(rt0.c0) END, CASE WHEN ((rt1.c5)IS NOT(rt1.c1)) THEN rt1.c0 WHEN rt0.c4 THEN CAST(rt1.c0 AS REAL) WHEN 0.057767289286159706 THEN CAST('t-2Q''o' AS INTEGER) ELSE HEX(DISTINCT rt1.c3) END FROM rt1, rt0; -- 0ms;
SELECT (((((rt0.c3, rt0.c1, rt1.c0))>((rt0.c3, NULL, rt0.c1)))) ISNULL) FROM rt1, rt0 WHERE (((((NULL) BETWEEN (NULL) AND (NULL)))-(((0.23354583986757693) NOT BETWEEN ('-367398391') AND (0.3289725932837073))))) LIMIT 1034944410; -- 0ms;
SELECT CASE WHEN rt1.c0 THEN CASE rt1.c5  WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c1 THEN rt1.c1 END WHEN CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 END THEN CASE WHEN rt1.c1 THEN x'' END WHEN (((rt1.c4, '0.28799846543042906', rt0.c2))>=((rt1.c4, rt1.c3, rt0.c0))) THEN CASE WHEN NULL THEN -1613539286 WHEN rt1.c1 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c1 ELSE rt1.c0 END WHEN CASE rt1.c1  WHEN rt0.c0 THEN rt1.c3 ELSE -1295457761 END THEN CASE rt0.c4  WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c4 THEN rt0.c3 WHEN rt1.c2 THEN rt1.c5 ELSE rt1.c0 END WHEN HEX(rt1.c5) THEN CAST(rt0.c1 AS INTEGER) END FROM rt1 WHERE (((('1533187718')>=('')) IN ()));SELECT ((((((((((rt0.c0)AND(rt0.c0)))AND(rt1.c3)))OR(rt0.c3)))OR(rt1.c4)))*(rt1.c1)), ((((((rt1.c1)OR(rt1.c4)))OR(rt1.c0))) NOT BETWEEN ((((rt0.c4, x'', rt1.c3, rt1.c5, rt1.c3)) BETWEEN ((rt0.c3, rt1.c2, rt1.c0, rt1.c0, rt1.c3)) AND ((rt1.c4, x'cc96', rt1.c2, -3.28680109E8, rt0.c2)))) AND (rt0.c4 COLLATE RTRIM)), (((rt1.c1)/(rt1.c4)) IN ()) FROM rt1;SELECT DISTINCT (((((rt1.c1 IN (rt1.c0)))OR((((rt1.c4)) BETWEEN ((rt0.c4)) AND ((rt1.c0))))))OR((rt0.c4 IN (rt0.c4)))) FROM rt1, rt0 WHERE (((((-1.807191025E9) BETWEEN (x'') AND (NULL))) NOT BETWEEN (0xffffffff96fc6c69 COLLATE BINARY) AND (CASE NULL  WHEN -884321675 THEN x'' WHEN '' THEN '' WHEN 0Xffffffffedbe6582 THEN '-20588143' ELSE x'' END))); -- 0ms;
SELECT CASE CAST('-2115126268' AS BLOB)  WHEN (rt0.c1 IN ()) THEN CASE rt0.c0  WHEN rt0.c1 THEN 1756486503 END WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c4))) THEN ((NULL)GLOB(rt1.c2)) WHEN (((rt1.c1))>=((rt1.c2))) THEN ((rt0.c1)<(rt1.c1)) END FROM rt0, rt1 WHERE ((((((6.6516373E8)AND(NULL)))AND(0.2704049103367494)) IN (((x'') IS FALSE), NULL))) GROUP BY json_type(rt0.c2) COLLATE RTRIM; -- 0ms;
SELECT LAST_VALUE(((((((rt1.c3))<((rt0.c2)))))==((((rt0.c0) NOT BETWEEN (rt1.c5) AND (NULL)))))) OVER () FROM rt0, rt1; -- 1ms;
SELECT DISTINCT (NOT (((rt0.c3)+(rt0.c3)))) FROM rt0 ORDER BY CASE WHEN rt0.c3 THEN rt1.c3 WHEN rt1.c2 THEN rt0.c1 WHEN rt1.c2 THEN rt1.c0 ELSE rt1.c0 END COLLATE RTRIM DESC  NULLS FIRST;SELECT ((((0x131af776) ISNULL))AND(((((rt1.c3)OR(rt0.c4)))AND(0Xffffffffcdf1b036)))) FROM rt0 ORDER BY CAST((rt1.c4 IN ()) AS BLOB) DESC  NULLS LAST;SELECT (x'' IN ()), (CASE rt1.c2  WHEN rt0.c3 THEN 0.5690619007030158 ELSE rt1.c0 END IN ()), CASE ((rt0.c4) ISNULL)  WHEN CASE rt0.c4  WHEN rt1.c5 THEN rt1.c1 WHEN rt0.c0 THEN rt1.c3 WHEN rt1.c0 THEN rt1.c5 ELSE rt1.c1 END THEN COUNT(0.9703796453958901) END, HEX((~ (rt1.c3))), 0.6201842777979276 FROM rt1, rt0; -- 0ms;
SELECT ALL DENSE_RANK() OVER ( GROUPS  CURRENT ROW EXCLUDE NO OTHERS) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 END) OVER ( GROUPS CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE COLLATE RTRIM PRECEDING EXCLUDE TIES) FROM rt0, rt1 WHERE (((LIKELIHOOD(-1.692413995E9, 0.07992679828176019)) BETWEEN (((x'') IS TRUE)) AND (0.9414757836871341))); -- 2ms;
SELECT DISTINCT SUM((x'55dd69da' IN ())) OVER () FROM rt0, rt1 WHERE ((NOT ((('0.8217655384095235') NOT BETWEEN ('IMl') AND (''))))) GROUP BY ((LIKELIHOOD(rt1.c5, 0.5886484175488531))IS(((0.13956500631056623) BETWEEN (rt0.c4) AND (rt1.c0)))), ((((((rt1.c5) IS TRUE))AND(CASE rt1.c3  WHEN rt1.c1 THEN rt1.c1 ELSE rt1.c0 END)))AND(rt1.c3 COLLATE BINARY)), rt1.c1 HAVING (~ (((((((((rt0.c2)OR(rt0.c3)))OR(rt1.c0)))OR(rt1.c0)))AND(rt0.c3)))); -- 1ms;
SELECT 0.39508952224121185 FROM rt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((rt1.c0 COLLATE BINARY) IS FALSE), ((TOTAL_CHANGES()) IS TRUE)) OVER () FROM rt1, rt0 LIMIT -810255574; -- 0ms;
SELECT ALL (((rt0.c2, x'', rt0.c2)) NOT BETWEEN ((rt0.c4, rt0.c1, rt1.c4)) AND ((rt1.c5, 0.21312473516173058, rt1.c4))) COLLATE RTRIM, rt0.c1, (- (CAST(rt0.c1 AS TEXT))) FROM rt0 WHERE (((x'') ISNULL));SELECT ALL AVG((rt0.c0 IN ())) OVER () FROM rt0; -- 0ms;
SELECT ALL ((json_array_length(rt0.c2, rt0.c4))%('92802213')) FROM rt0;SELECT DISTINCT CASE WHEN rt1.c2 COLLATE NOCASE THEN (rt1.c4 IN (rt0.c3)) END FROM rt0;SELECT DISTINCT CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c2 WHEN x'' THEN rt0.c1 END COLLATE RTRIM FROM rt1;SELECT ALL (+ (((rt1.c1)*(rt1.c5)))) FROM rt0, rt1 WHERE ((((((NULL IN ()))AND(HEX('FS俗,W/~炂뵓'))))AND(TYPEOF(DISTINCT 0.7296393597216254)))); -- 0ms;
SELECT ALL AVG(((rt0.c0) NOTNULL)) FROM rt1 WHERE ((x'3a83' IN ()) COLLATE BINARY);SELECT DISTINCT (((rt1.c0 IN (rt0.c1))) ISNULL), UNLIKELY(((rt0.c0)OR(rt1.c4))), ((CAST(rt0.c3 AS BLOB)) NOT NULL) FROM rt1;SELECT ALL rt1.c4 FROM rt0;SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c4) AS REAL), (((((((rt0.c1)AND(rt1.c2)))OR(rt0.c2)), (rt1.c1 IN ()), ((rt1.c4)AND(rt1.c5)), ((rt1.c2) NOT BETWEEN (rt1.c3) AND (rt1.c1)), CAST('0.9503475586900246' AS BLOB)))>((ABS(DISTINCT rt0.c1), rt0.c3, ((((rt1.c0)AND(rt1.c0)))AND(rt0.c1)), rt0.c1, ((rt1.c4) IS TRUE)))), ((((((rt1.c2) NOT NULL))OR((NOT (rt0.c0)))))AND(rt0.c3 COLLATE BINARY)) FROM rt0;SELECT ALL CAST((- (rt1.c3)) AS TEXT) FROM rt0 GROUP BY (rt0.c2 IN ()) COLLATE RTRIM HAVING ((CAST('' AS NUMERIC)) NOT BETWEEN (((rt0.c1)%(rt1.c0))) AND (CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c0 END));SELECT ((rt1.c4 COLLATE RTRIM) IS FALSE) FROM rt0, rt1 WHERE (((CASE WHEN x'35bbbdad' THEN '-1536841936' END) ISNULL)) LIMIT -2024310385 OFFSET 1271715811; -- 0ms;
SELECT DISTINCT LTRIM(((rt0.c2)<<(rt1.c4)), (NOT (rt1.c5))), UNLIKELY((rt0.c4 IN ())), COUNT((((rt1.c4)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1)))) FROM rt1 WHERE (UNLIKELY(DISTINCT ((((((((x'')OR(NULL)))AND(x'')))AND('-344241974')))AND(''))));SELECT ALL ((((((((LAST_INSERT_ROWID())OR((~ (rt1.c2)))))OR(((rt1.c1) ISNULL))))AND((((rt0.c2)) BETWEEN ((rt1.c1)) AND ((rt0.c0))))))AND(MAX(rt0.c4))) FROM rt1, rt0; -- 3ms;
SELECT DISTINCT AVG(CASE WHEN rt1.c2 THEN rt0.c3 END) FILTER(WHERE ((((((rt1.c3)AND(rt1.c0)))AND(rt1.c4))) NOT BETWEEN ((((rt1.c4, rt0.c1, rt1.c4)) NOT BETWEEN ((rt1.c0, rt1.c3, rt0.c4)) AND ((rt1.c2, rt1.c0, rt1.c5)))) AND (((x'409c') IS FALSE)))) OVER (), (((CAST(rt0.c3 AS TEXT)))<>((((rt0.c1)+(rt0.c1))))), CASE WHEN rt0.c4 THEN ((rt1.c1) NOT NULL) END FROM rt1, rt0; -- 0ms;
SELECT ALL ((((((rt0.c4)OR(rt1.c3)))AND(rt0.c4))) BETWEEN ((0.7817202870686456 IN ())) AND ((rt0.c0 IN ()))), '519648533', rt0.c2 FROM rt1 WHERE (((((NULL)OR((('0.29111878681984615') NOT BETWEEN ('') AND (NULL)))))OR(((('0i砩R', -124532030, 0.9618247466779303))>=(('0.22092364031278766', 0x4b87010, ''))))));SELECT ALL 0.8212573202111159 FROM rt0, rt1; -- 0ms;
SELECT ((COUNT(*))||(CASE WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END)) FROM rt0, rt1; -- 0ms;
SELECT GROUP_CONCAT((rt0.c1 IN ())) FROM rt0 WHERE ((+ ((NOT (x''))))) GROUP BY CAST(((rt1.c5) ISNULL) AS REAL) HAVING (~ (((((((((rt1.c3)AND(rt1.c5)))OR(rt1.c1)))OR(x'')))AND(rt1.c4))));SELECT ALL (- ((((rt1.c3, rt1.c2, rt1.c4))=((rt0.c1, rt1.c5, rt1.c4))))) FROM rt0, rt1 WHERE ((((((NULL, '-806716819', NULL))>((NULL, -1836505476, NULL))))||((((300542974))<=((x'')))))); -- 0ms;
SELECT ALL (~ (json_extract(rt1.c2, rt1.c4, rt1.c0, rt0.c2))), PERCENT_RANK() OVER (), ((rt0.c0 IN ()) IN (COALESCE(rt1.c5, rt0.c0))) FROM rt0, rt1 WHERE ((((- (NULL)))<(((0.45871243205111345)*(NULL))))); -- 0ms;
SELECT ((rt0.c0)>(rt1.c5)) COLLATE NOCASE FROM rt0, rt1 WHERE ((((((0.12426191665469832)OR(x'')))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (NULL IN ()), ((((rt1.c2) NOTNULL))||(((rt0.c3)%(rt1.c5)))), (((rt1.c1))<=((((((rt0.c1)OR(rt1.c2)))OR(rt0.c0))))) FROM rt1, rt0 WHERE (((('-2127211858' IN (x'c609')))|(CASE WHEN '-742717066' THEN x'013e' END))); -- 0ms;
SELECT ALL CASE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (rt0.c2))  WHEN TOTAL(rt1.c1) THEN UNLIKELY(DISTINCT rt1.c2) ELSE ((rt0.c4) ISNULL) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt1.c1) IS TRUE))!=(rt0.c4)) FROM rt1 WHERE (UPPER(DISTINCT NULL) COLLATE BINARY COLLATE BINARY);SELECT ALL ((((UNLIKELY(rt1.c3))AND(((rt1.c2)<<(rt0.c1)))))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)), (((NOT (rt0.c4))) BETWEEN (AVG(rt1.c3)) AND (((rt1.c2)==('W?cﰧ!蕱>')))), CASE ((rt0.c4) NOTNULL)  WHEN CASE rt1.c4  WHEN rt0.c1 THEN rt1.c4 END THEN rt1.c5 COLLATE BINARY ELSE (~ (rt1.c4)) END FROM rt0, rt1 WHERE (CASE (((1.506502603E9, NULL, '-1007271769')) NOT BETWEEN ((0.4168579462489542, x'f397', x'')) AND ((0.22092364031278766, x'48d6', '-797467266')))  WHEN (('Te')<<(0.1892240111300314)) THEN ((0.32884945350976447) BETWEEN (x'') AND (0.23281565493394785)) END); -- 1ms;
SELECT DISTINCT LIKELIHOOD((('527267064')+(rt0.c1)), 0.3476883533145214), rt1.c1, TOTAL(rt1.c3) FILTER(WHERE (((rt1.c4, SQLITE_SOURCE_ID(), rt0.c0))<((rt0.c3 COLLATE NOCASE, rt1.c0 COLLATE BINARY, ((rt1.c1)+(rt1.c0)))))) OVER ( PARTITION BY COALESCE(DISTINCT rt0.c3 COLLATE BINARY, PRINTF(rt1.c4), ((rt1.c5) NOT NULL), CAST(rt0.c0 AS INTEGER)), rt1.c2 ORDER BY (- ((- (rt1.c2))))) FROM rt0, rt1 LIMIT -1745637257; -- 0ms;
SELECT DISTINCT (('')<((((rt0.c3)) NOT BETWEEN (('-451220556')) AND ((rt0.c3))))), 0x3237bc67, TOTAL(CASE rt1.c4  WHEN rt1.c3 THEN rt0.c4 END), ((SUM(rt1.c0)) NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt1.c5) AND (rt1.c4))) AND (rt1.c2 COLLATE BINARY)), COUNT(*) FROM rt1, rt0 GROUP BY (- (rt1.c3 COLLATE RTRIM)) HAVING (((~ (rt1.c3))) BETWEEN ((NOT (rt0.c2))) AND (((rt1.c5)<>(rt1.c0)))); -- 3ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE BINARY FROM rt0 WHERE ((((('D''') ISNULL)) BETWEEN (NULL COLLATE NOCASE) AND (((x'5987') BETWEEN (NULL) AND (x''))))); -- 1ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt1 RIGHT OUTER JOIN rt0 ON ((((((rt1.c4)AND(rt1.c1)))AND(rt1.c5))) NOTNULL) WHERE ((((((('664353127')AND(x'')))AND(NULL)))IS(CASE WHEN x'717f' THEN x'e887' WHEN '' THEN NULL WHEN 0.16258096834089364 THEN x'' END))); -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT NULL) COLLATE NOCASE FROM rt1 WHERE (((((('' IN ()))AND(((x'9f109a8dae2f') NOT BETWEEN (NULL) AND (NULL)))))OR(('' IN ())))) LIMIT 446570439;SELECT DISTINCT LEAD((((((((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))OR(((rt0.c3)<(rt1.c5)))))AND(((rt1.c5) IS FALSE))), rt0.c4, CASE ((rt0.c1)<>(rt1.c3))  WHEN rt0.c1 COLLATE NOCASE THEN 0xffffffffc5e69df3 COLLATE BINARY END) OVER () FROM rt1 RIGHT OUTER JOIN rt0 ON (((rt0.c3)IS(rt1.c2)) IN ()) WHERE (CAST(((((((((0xffffffffee96b58c)AND(0.18225661324800235)))OR('0.740367335112097')))OR(0.9066679265399137)))OR('NF&R搃,''O')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((0.7772502958860912 COLLATE RTRIM) ISNULL), '1785451171', FIRST_VALUE((((~ (rt1.c5)))/(CAST(rt0.c1 AS TEXT)))) OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c4)||(rt1.c3)) AS TEXT) FROM rt1 WHERE (((((CAST(0.5839773134626195 AS TEXT))OR(0.8414318670984169)))OR(((0.8865896166471415) NOT BETWEEN (x'') AND (x''))))) GROUP BY ((CASE WHEN rt1.c3 THEN rt1.c4 END) NOT NULL);SELECT (CAST(rt1.c0 AS BLOB) IN ()) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 IN ()) COLLATE RTRIM COLLATE RTRIM, (~ (COUNT(*))), (((+ (rt0.c2))) NOT NULL) FROM rt1;SELECT DISTINCT (((((rt0.c1 IN ()))OR('0.0')))OR(CASE rt1.c3  WHEN NULL THEN rt1.c1 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c0 END)) FROM rt0;SELECT ALL (((rt1.c2 IN ()))LIKE(SQLITE_COMPILEOPTION_USED(rt1.c1))), CASE WHEN ((((((((rt0.c3)OR(x'')))AND(rt0.c0)))OR(rt1.c3)))AND(x'64f7')) THEN (+ (rt1.c4)) WHEN CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN rt1.c0 WHEN rt0.c2 THEN rt0.c2 END THEN (rt0.c2 IN (rt0.c1)) WHEN '-577155113' THEN ((rt0.c4) BETWEEN ('AnHY') AND (rt1.c2)) END, ((rt0.c0)OR(rt0.c3)), ((((rt1.c4)OR((- (rt1.c4)))))OR((((rt0.c0, 'n!+', rt1.c1))!=((rt0.c4, rt0.c1, rt1.c2))))), CAST(rt0.c3 AS NUMERIC) COLLATE NOCASE FROM rt0, rt1; -- 0ms;
SELECT ALL ((rt0.c0 COLLATE NOCASE) BETWEEN ((((rt1.c1)) BETWEEN ((rt1.c4)) AND ((rt1.c1)))) AND (((rt0.c4)LIKE(rt0.c0)))) FROM rt1, rt0 WHERE (CAST(RTRIM(0.1930969496768351) AS INTEGER)); -- 0ms;
SELECT (((rt1.c5) BETWEEN (rt1.c1) AND (rt1.c1)) IN (((rt0.c1) IS FALSE))) FROM rt1, rt0 WHERE (CHANGES()); -- 0ms;
SELECT ((-2.32391641E8)>(ABS(DISTINCT rt1.c4))), ((((rt1.c5)/(rt1.c2))) BETWEEN ((- (rt1.c5))) AND (rt1.c1 COLLATE NOCASE)), ((CAST(rt1.c3 AS INTEGER)) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt1.c2 END) AND (CASE WHEN rt1.c0 THEN rt0.c3 ELSE rt0.c2 END)) FROM rt0 WHERE (CASE x''  WHEN ((0.6067419928960692) IS TRUE) THEN CASE x''  WHEN NULL THEN 0.27604933373698604 WHEN 0Xffffffffbb9fc785 THEN NULL WHEN 'ꆸSe%' THEN x'' ELSE 0.7093857452285955 END ELSE ((-1485440544)>(NULL)) END);SELECT ALL LIKE(rt0.c2, 0.4062245558763319, '-') COLLATE BINARY FROM rt1;SELECT ALL UPPER(CAST(rt0.c4 AS TEXT)), TOTAL(COUNT(((rt0.c3) NOT BETWEEN (rt1.c0) AND (rt1.c0)))), rt1.c4 FROM rt0, rt1 WHERE ((((load_extension(638473788), ((x'')>>('1121670723')), (('-1356880442')GLOB(0x64957084))))<=(((NULL IN ()), x'' COLLATE BINARY, TRIM(DISTINCT 0.939187896862483, x'063d')))));SELECT DISTINCT (((CASE rt0.c4  WHEN rt1.c5 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt1.c3 WHEN rt0.c3 THEN rt1.c3 WHEN rt1.c0 THEN rt0.c3 END))>=(((((rt1.c0))!=((rt1.c3)))))), MIN((rt1.c1 IN ())), CAST(rt0.c2 AS TEXT) FROM rt0;SELECT LAG(((((((((rt0.c2)OR(((((rt0.c3)OR(rt1.c2)))OR(rt0.c4)))))AND((rt0.c1 IN ()))))AND(CAST(rt1.c3 AS INTEGER))))AND((((rt0.c2, rt0.c0, rt0.c0))==((rt0.c1, rt1.c4, rt0.c2))))), ABS(rt1.c5) COLLATE RTRIM, ((HEX(x'cf787bf9'))-(rt0.c3))) OVER (), LIKELY(((rt1.c5)AND(rt1.c5))), (rt1.c4 IN (rt1.c3)) COLLATE RTRIM FROM rt1, rt0 WHERE (CAST(CAST(x'e4f4ac24' AS TEXT) AS TEXT)) GROUP BY (((((rt1.c4)) NOT BETWEEN ((rt0.c4)) AND ((rt1.c2))))+(TYPEOF(DISTINCT rt1.c2))), ((((rt1.c0))<((rt0.c2))) IN ((- (rt0.c4)), CAST(rt0.c4 AS TEXT))), (((((((((NOT (rt1.c5)))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c4)IS NOT('箕cc]')))))OR(CASE WHEN rt0.c1 THEN rt0.c3 ELSE rt1.c3 END)))OR(rt0.c1)), ((((rt1.c5 IN (NULL, rt1.c3))))<>((((rt0.c2) NOTNULL)))), CAST((- (rt0.c3)) AS REAL); -- 0ms;
SELECT ((((rt0.c4)*(rt0.c3)))GLOB(((((rt1.c4)AND(rt0.c4)))OR(rt0.c4)))) FROM rt1, rt0 WHERE (CAST(CASE NULL  WHEN x'' THEN 0.3775328611598041 WHEN x'96ea' THEN 0.3537364978401458 WHEN x'' THEN '-1458683486' WHEN '' THEN 'ns' WHEN 0.011776799177365183 THEN '' ELSE '1012943275' END AS INTEGER)) LIMIT 1032497371 OFFSET 2030959959; -- 0ms;
SELECT DISTINCT ((((NULLIF(DISTINCT rt0.c0, rt0.c0))AND((((rt1.c0))<((rt0.c1))))))AND(((rt1.c1) IS FALSE))) FROM rt0, rt1 LIMIT -454112594 OFFSET -431354883; -- 1ms;
SELECT ((((((rt1.c4)AND(rt0.c3)))OR(rt0.c4)))+(LIKELIHOOD(rt1.c5, 0.9752032535613699))) FROM rt1;SELECT DISTINCT LOWER(((rt0.c2)>(rt1.c1))) FROM rt1, rt0; -- 0ms;
SELECT ALL 0.9200438000755825, ((COUNT(*)) NOT NULL), SUM(json_remove(rt0.c0, rt0.c1)) FROM rt0, rt1;SELECT ALL CASE WHEN (- (rt0.c3)) THEN SUM(rt0.c2) WHEN (rt1.c1 IN ()) THEN ((rt1.c5)<>(rt0.c4)) WHEN COUNT(*) THEN (rt0.c2 IN ()) ELSE rt1.c4 COLLATE RTRIM END FROM rt0 NOT INDEXED, rt1 ORDER BY ABS(DISTINCT 'dD]8k'); -- 0ms;
SELECT ALL (- (CAST(rt0.c3 AS TEXT))) FROM rt0 WHERE (CAST(JULIANDAY(x'4d02', 0.5582932168679947, 'ic篴''_.j.') AS NUMERIC)); -- 0ms;
SELECT DISTINCT MIN(STRFTIME(rt0.c0, rt1.c4, rt1.c3)) FROM rt0 WHERE (PRINTF('W?cﰧ!蕱>' COLLATE NOCASE));SELECT ALL ((rt0.c0) NOTNULL) COLLATE BINARY, (CAST(rt0.c2 AS INTEGER) IN ()), '', SUM((((rt1.c0))<((rt0.c2)))), ((((rt1.c2)<<(rt0.c3)))>=(((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT (((((((((((rt1.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt1.c5))))OR((((rt1.c5))>=((rt0.c4))))))OR(rt0.c4 COLLATE BINARY)))AND((rt1.c1 IN ()))))OR(MAX(rt1.c5))) FROM rt0, rt1 WHERE (CAST(((0.22975792270227569)+('')) AS REAL)); -- 1ms;
SELECT DISTINCT (CASE rt1.c0  WHEN rt1.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c4 WHEN rt1.c2 THEN rt0.c0 END IN (CAST(rt0.c1 AS REAL))) FROM rt0, rt1 WHERE (x'5c06'); -- 0ms;
SELECT ((TOTAL(rt1.c3))OR(CAST('' AS TEXT))), MIN(((rt1.c1)||(rt0.c4))), AVG(rt0.c1 COLLATE NOCASE COLLATE NOCASE) OVER () FROM rt0;SELECT DISTINCT (((((+ (x'')))OR(((((rt1.c1)OR(rt1.c0)))OR(rt0.c2)))))AND((rt0.c3 IN ()))) FROM rt0, rt1; -- 0ms;
SELECT (((((0.9389413112930554)>(rt1.c5))))<=((((rt0.c4)&(rt0.c0))))) FROM rt0 WHERE (((CASE WHEN NULL THEN 0.15823597592458094 ELSE 0.8862607003328764 END)GLOB(CAST(0.8007174912621453 AS NUMERIC))));SELECT DISTINCT ((((((rt1.c1) IS FALSE))OR(rt1.c5)))OR(((((((((((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c2)))AND(rt1.c2)))AND(rt0.c4)))OR(rt1.c5)))OR(rt1.c4)))AND(rt1.c5)))AND(rt1.c5)))) FROM rt1 WHERE ((- (CAST('-1170209967' AS TEXT))));SELECT DISTINCT NULL FROM rt0, rt1 GROUP BY rt1.c5 HAVING ((COUNT(rt0.c3))GLOB((rt0.c0 IN (rt1.c5, rt1.c5)))) LIMIT -1383154445 OFFSET 1461293196; -- 1ms;
SELECT DISTINCT ('87784008' IN (rt1.c2)) FROM rt0 WHERE (((-1548362498)&('-142434045')) COLLATE NOCASE);SELECT CASE rtreenode(rt1.c4, rt1.c0)  WHEN 'CW' THEN x'' END FROM rt1, rt0 WHERE (0X7ffdb53b) ORDER BY (((rt1.c1)) BETWEEN (((rt0.c0 IN (rt1.c4, rt1.c4)))) AND ((((rt1.c2)AND(0.35860592542813063))))) ASC, rt0.c0  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN NULL THEN ((rt0.c3) NOTNULL) END FROM rt1;SELECT DISTINCT CASE WHEN ((rt0.c2)|(rt0.c0)) THEN rt0.c3 COLLATE NOCASE END FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL (((rt0.c3) NOTNULL) IN ()), ((CASE rt1.c3  WHEN rt0.c3 THEN rt0.c3 END) NOT BETWEEN (((((rt0.c4)OR(rt1.c3)))AND(rt1.c3))) AND (((rt1.c3)<<(rt1.c4)))), (((~ (rt0.c0))) IS TRUE) FROM rt1, rt0; -- 0ms;
SELECT ((((~ (rt0.c2))))>=(((NOT (rt1.c4))))) FROM rt0, rt1 WHERE ((((0xffffffff90f77b35) NOTNULL) IN (((NULL) NOT BETWEEN ('0.7170579266089683') AND (''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0 COLLATE BINARY COLLATE RTRIM) OVER (), CASE ((rt1.c5)|(rt1.c3))  WHEN (rt1.c1 IN (0.8959967722655886, NULL)) THEN rt1.c3 END, ((CAST(rt1.c2 AS BLOB))<=(((rt1.c1)GLOB(rt0.c3)))) FROM rt1;SELECT ALL CASE WHEN ((rt0.c4)%(rt0.c0)) THEN GROUP_CONCAT(rt0.c0) WHEN rt0.c1 THEN (rt0.c2 IN ()) WHEN rt0.c4 THEN rt1.c4 COLLATE NOCASE WHEN CAST(rt1.c4 AS INTEGER) THEN ((rt1.c2) IS TRUE) WHEN rt1.c5 THEN COALESCE(rt0.c4, rt0.c0) END FROM rt0 WHERE ((((- ('')))GLOB((((NULL)) BETWEEN (('-523696626')) AND ((0.5357180878445325))))));SELECT DISTINCT rt0.c1 COLLATE RTRIM FROM rt1, rt0; -- 0ms;
SELECT ALL (((NULLIF(0Xffffffffaba59006, rt1.c2), rt1.c0 COLLATE RTRIM, (rt1.c5 IN ()), NULL, ABS(rt1.c4)))<((((rt1.c0)IS(rt1.c1)), ((((rt0.c1)AND(rt1.c1)))AND(rt1.c5)), CASE rt1.c1  WHEN rt0.c4 THEN '\rI\sn7/' END, ((rt1.c4) IS TRUE), (NOT (rt1.c2))))) FROM rt0, rt1 WHERE ((x'' IN ())); -- 0ms;
SELECT DISTINCT json_valid(GROUP_CONCAT(rt1.c5)), (((((rt1.c1)OR(rt0.c1)))AND(rt1.c1)) IN (rt0.c1 COLLATE RTRIM, COUNT(rt1.c2))), CASE WHEN (~ (rt1.c0)) THEN (rt0.c2 IN ()) END FROM rt1, rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((((rt1.c5)OR(rt1.c1)))OR(rt0.c0)))>=(((rt0.c4)GLOB(rt1.c5)))) FROM rt0, rt1 GROUP BY 0xffffffffc3f640a7, (x'' IN (((rt1.c2)>=(rt1.c5)))), rt1.c5; -- 1ms;
SELECT ALL UPPER(((rt1.c0)AND(rt0.c1))), CASE WHEN 0.7494972362015712 THEN CAST(rt1.c3 AS REAL) WHEN CAST(rt1.c2 AS BLOB) THEN CASE WHEN rt1.c0 THEN rt0.c4 END WHEN rt0.c2 COLLATE RTRIM THEN ((((rt1.c1)OR(NULL)))OR(rt0.c3)) ELSE (+ (rt1.c1)) END, (((rt0.c1)) NOT BETWEEN (((rt1.c2 IN ()))) AND ((''))) FROM rt1, rt0 WHERE ((((((NOT (NULL)))OR(((0.27284274177767354)+(NULL)))))OR(CAST(0.8414318670984169 AS INTEGER)))); -- 0ms;
SELECT ALL (((rt0.c2)IS(x'f74a')) IN (((rt0.c2)>>(rt0.c1)), (+ (rt0.c1)))) FROM rt1 WHERE ('639520242');SELECT DISTINCT COUNT('') OVER () FROM rt1, rt0 WHERE (((((((((((0.3354620904402398)AND(0.09188044676110385)))AND(0.8333070225119044)))AND('j丛')))AND(0.19975295124725667)))*(CAST('f' AS TEXT)))) LIMIT -332211586 OFFSET -476871150; -- 0ms;
SELECT ALL HEX('2W') FROM rt0, rt1; -- 0ms;
SELECT CAST(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)) AS INTEGER) FROM rt0, rt1 WHERE (((('-1883075855')==(NULL)) IN ())); -- 0ms;
SELECT DISTINCT NTILE(CASE CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt1.c1 END  WHEN (rt1.c2 IN ()) THEN ((rt1.c3)GLOB(rt1.c4)) END) OVER () FROM rt1 WHERE ((((0.36717824503602503))<(((('''_r')!=('5?')))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, rt1 WHERE ((((((0.8648860804774069)) NOT BETWEEN ((NULL)) AND ((NULL))))|(((x'')>(NULL))))); -- 0ms;
SELECT ALL CASE x'2066'  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c0 END COLLATE RTRIM FROM rt0, rt1 LIMIT -1026046524 OFFSET 650010764; -- 0ms;
SELECT DISTINCT ((((rt1.c2) IS TRUE))&(NULL)) FROM rt1, rt0 WHERE (CASE (((('1024986167')AND(0.44065021383830427)))OR('箕cc]'))  WHEN CASE 0x5d18730d  WHEN NULL THEN 0.1901032656027013 WHEN '0.41513299822864413' THEN -5.36029716E8 WHEN x'934c' THEN '-949320500' ELSE 0.8421841470940693 END THEN '' WHEN ((x'') IS FALSE) THEN NULL WHEN ((352612338) IS FALSE) THEN ((-1272275433)-(NULL)) END); -- 0ms;
SELECT CASE WHEN rt0.c1 COLLATE NOCASE THEN rt1.c4 WHEN (+ (rt0.c1)) THEN (+ (rt1.c5)) WHEN (((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt1.c2))) THEN (rt0.c3 IN ()) WHEN ((rt0.c0)<(rt0.c2)) THEN ((rt0.c0)>>(rt0.c2)) WHEN x'' COLLATE RTRIM THEN CAST(rt1.c4 AS NUMERIC) END FROM rt1, rt0; -- 0ms;
SELECT ALL ((COALESCE(DISTINCT rt1.c2, rt1.c0))>>(MAX(rt1.c2))) FROM rt1, rt0; -- 0ms;
SELECT ALL rt0.c3 FROM rt1;SELECT ALL '' FROM rt1, rt0 WHERE (CAST(NULL COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT ALL (COUNT(*) IN (0.2088106843836398)) FROM rt1; -- 0ms;
SELECT COUNT((+ ('(6\r+')) COLLATE NOCASE), rt0.c0, ((((rt1.c5))<((0.43577401315577147))) IN ()), rt1.c3, DENSE_RANK() OVER () FROM rt0 GROUP BY CAST(((((rt1.c0)AND(rt1.c3)))AND(rt1.c0)) AS NUMERIC), (((((rt1.c5)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c3)))) BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt1.c2)AND(rt1.c4)))), ((((('-1272275433'))<=((rt0.c0)))) NOT BETWEEN (NULLIF(DISTINCT rt0.c0, rt0.c1)) AND (CASE 'BV\.z'  WHEN rt1.c4 THEN rt0.c1 ELSE rt0.c0 END)), UPPER(DISTINCT ((rt0.c2)!=(rt0.c4))), (((((rt1.c0 IN ()))OR(rt0.c1 COLLATE RTRIM)))OR(CAST(rt0.c2 AS REAL)));SELECT DISTINCT QUOTE(CAST(rt1.c4 AS NUMERIC)) FROM rt1 WHERE (CASE WHEN ('+' IN ()) THEN x'cd25' COLLATE BINARY WHEN ((x'')LIKE(-1896638293)) THEN x'' COLLATE RTRIM WHEN (0.25327516416588636 IN ()) THEN 0.4961492468850598 COLLATE RTRIM END) ORDER BY (+ (((rt0.c1) NOT BETWEEN (rt1.c3) AND (rt1.c5)))) DESC, (~ (((((((((x'')AND(rt1.c4)))AND(rt1.c3)))AND(rt1.c2)))AND(rt1.c3)))) ASC;SELECT DISTINCT (((('-361461847')LIKE(rt1.c4))) NOT BETWEEN (COUNT(*)) AND (((rt0.c0) NOT BETWEEN (rt1.c5) AND (rt1.c5)))) FROM rt0 LIMIT 350243272 OFFSET 920550209;SELECT CAST((- (rt1.c3)) AS REAL) FROM rt1, rt0 LIMIT -1907735765; -- 1ms;
SELECT DISTINCT (NOT ('')) FROM rt1; -- 0ms;
SELECT DISTINCT (((((rt0.c4, rt1.c3, rt0.c3))=((rt0.c0, rt1.c4, '.⇒r%w]')))) ISNULL) FROM rt1, rt0; -- 0ms;
SELECT ALL COUNT(*), (((((rt1.c4)AND(rt1.c2)))OR(rt1.c1)) IN ()), ((0.3395552834226152 COLLATE NOCASE) IS TRUE), CHAR(((rt0.c1)<=(rt0.c4))), TRIM(rt1.c5 COLLATE RTRIM) FROM rt0 WHERE (0.5605649153469192 COLLATE BINARY) GROUP BY (0.13525172823356402 IN ()) COLLATE NOCASE, (- (NULL)), (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 END IN ());SELECT DISTINCT rt1.c0 FROM rt0, rt1 WHERE (((CAST(0Xffffffffb4d21f24 AS INTEGER)) NOT BETWEEN (((NULL)<('-1954733402'))) AND (CAST('1883358356' AS REAL)))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((0.1375235105395518)) BETWEEN ((NULL)) AND ((x'a088')))) NOT BETWEEN (((1.639418077E9)!=(x''))) AND (CAST(0.11765208570879304 AS INTEGER)))); -- 0ms;
SELECT DISTINCT CAST(rt1.c0 AS REAL), TRIM((rt0.c2 IN ())), ((((((x'') BETWEEN (rt1.c2) AND (rt0.c3)))OR(x'')))OR(((rt0.c2) ISNULL))), (((- (rt0.c1)))IS((('') BETWEEN (rt1.c3) AND (rt1.c5)))), ((((((rt0.c0)<(rt0.c3)))OR(CAST('0.9618247466779303' AS NUMERIC))))AND(rt0.c2)) FROM rt0 ORDER BY INSTR(CASE rt0.c0  WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c4 THEN rt0.c4 WHEN rt0.c2 THEN '-538778749' WHEN rt0.c2 THEN '' WHEN rt1.c1 THEN rt1.c5 END, rt0.c3 COLLATE BINARY) DESC  NULLS FIRST, ((((((rt1.c2)OR(NULL)))AND('11260797'))) IS TRUE) DESC  NULLS LAST;SELECT ALL AVG((~ (rt1.c1))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0 WHERE (((((((x'3f6c')OR(x'ea0a')))AND(x'')))>(((NULL)GLOB(0.2647167080614916))))) GROUP BY ((rt0.c3)>=(TRIM(DISTINCT rt0.c2))), ((((((((((rt1.c5)OR(rt1.c2)))AND(rt0.c2)))OR(rt1.c3)))AND(rt0.c3)))|(CASE WHEN rt0.c3 THEN rt1.c4 END)), ((LIKELY(DISTINCT rt1.c5))LIKE(rt0.c4 COLLATE NOCASE)), (((+ (rt1.c3))) NOT BETWEEN (((rt1.c1)<(rt1.c5))) AND (((rt0.c2)OR(rt0.c0)))), STRFTIME(rt1.c5, ((((rt0.c3)AND(rt1.c3)))AND(rt1.c3)), CASE WHEN rt1.c1 THEN rt1.c4 ELSE x'' END, rt1.c3, rt0.c0);SELECT (((((rt0.c2 IN ()))AND(((((rt1.c5)AND(rt1.c3)))AND(rt1.c0)))))AND(((rt0.c1)<=(rt1.c4)))), (((((rt1.c1))<((rt0.c2))))>(((rt1.c3) NOTNULL))), ((((rt1.c2)|(rt1.c1)))+(rt1.c4 COLLATE RTRIM)) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c2) FROM rt1;SELECT DISTINCT (+ ('665163730')) FROM rt1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))|(CASE x''  WHEN rt1.c3 THEN rt0.c2 END)), MIN(((((rt1.c0)OR(rt0.c3)))OR(rt1.c1))), LEAD(CAST(rt1.c5 COLLATE BINARY AS REAL), ((rt1.c3)<<('r)/*hpfG^')) COLLATE NOCASE, ((((rt0.c4) IS TRUE))AND(((rt0.c0) BETWEEN (rt1.c5) AND (rt1.c5))))) OVER () FROM rt0, rt1 WHERE (CAST('i)x,' AS BLOB)); -- 0ms;
SELECT rt1.c0, LTRIM((((rt0.c3))<=((rt1.c3)))), (- (((rt0.c3) IS FALSE))) FROM rt1, rt0 LIMIT -281461675 OFFSET -2528217; -- 0ms;
SELECT ALL ((((rt0.c0)-(rt1.c2)))<=(STRFTIME(rt1.c3, rt1.c1, NULL))), (((rt1.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((rt1.c5))), '0.37086734740782334' FROM rt0, rt1; -- 0ms;
SELECT DISTINCT CAST((rt0.c4 IN ()) AS INTEGER) FROM rt0, rt1 WHERE (CASE WHEN (NULL IN ()) THEN ('㥧' IN ()) WHEN (('406786919') NOT BETWEEN (NULL) AND ('')) THEN (NULL IN ('880691576', x'57254b12')) WHEN ('w>P' IN ()) THEN CAST(NULL AS NUMERIC) ELSE CASE WHEN 0.15552356194705452 THEN x'' END END); -- 0ms;
SELECT (~ (((rt1.c3)%(rt0.c4)))), (((CASE WHEN rt0.c3 THEN rt0.c2 END))<((((rt1.c1) BETWEEN (rt1.c3) AND (rt0.c0))))), CASE WHEN CASE WHEN rt1.c3 THEN rt1.c4 ELSE rt0.c0 END THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c5 ELSE rt0.c2 END ELSE ((rt1.c4)*(rt0.c3)) END FROM rt0;SELECT ALL (((SUM(rt1.c4), rt0.c4 COLLATE NOCASE, DATE(rt1.c4, 0.5073237894416175, rt1.c5)))>=((rt1.c5 COLLATE NOCASE, (((rt0.c4)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c0))), QUOTE(rt0.c0)))) FROM rt0, rt1 WHERE (CASE WHEN '-501919920' COLLATE BINARY THEN ((x'c751')<<('')) ELSE (('Xw')IS NOT('-500176724')) END); -- 0ms;
SELECT DISTINCT (((rt1.c1 IN (rt1.c5)))>>((- (rt0.c1)))), ((((CAST('-1807191025' AS TEXT))AND(((rt0.c1)%(rt1.c3)))))AND(AVG(rt1.c1))), ((rt0.c4)<(rt0.c0)) COLLATE BINARY FROM rt1 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt1.c3 THEN rt1.c3 END)AND(CAST(rt0.c0 AS INTEGER))))OR(COALESCE(DISTINCT rt1.c0, rt0.c2, rt0.c4, rt1.c3))) FROM rt0 WHERE (((('iW2ď୲')) NOT BETWEEN ((x'ae29')) AND ((0.07169424354394616))) COLLATE BINARY);SELECT (~ ((rt1.c2 IN (rt1.c5)))), LEAD(CASE ((((rt1.c2)AND(rt0.c2)))AND(rt1.c2))  WHEN CASE rt1.c2  WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c1 END THEN (- (rt0.c4)) ELSE ((rt1.c2)>>(rt1.c1)) END, ((((((rt1.c4)OR(x'')))OR(rt1.c4)))>(rt1.c5 COLLATE BINARY)), CASE ((rt1.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0))  WHEN '1533187718' THEN ((((rt1.c0)AND(rt0.c1)))AND(rt1.c1)) END) OVER (), (((rt1.c5)+('')) IN ()) FROM rt0, rt1 WHERE ((+ ((NULL IN (0x183f1367, '990318825', 1777737126))))) LIMIT -1516341122; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c3) NOTNULL) THEN ((rt0.c1) IS TRUE) ELSE (~ (rt1.c3)) END FROM rt0 WHERE (INSTR(json_quote(0.3700554102281792), (('-672931550') NOTNULL))) GROUP BY rt1.c3;SELECT DISTINCT ((((((rt0.c3) IS TRUE))AND(rt0.c3 COLLATE NOCASE)))AND(rt1.c4)), ((rt0.c4) NOTNULL), CASE WHEN rt1.c2 COLLATE NOCASE THEN CAST(rt1.c0 AS INTEGER) END FROM rt0, rt1 WHERE ((((NOT (-2.32800589E8)))/(((((((((0.2711919858364237)OR(NULL)))AND(-1807191025)))OR(1433988411)))AND(0.3167057835075858))))); -- 0ms;
SELECT DISTINCT ((UPPER(rt0.c3)) NOT BETWEEN (rt1.c4 COLLATE BINARY) AND (CASE WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c4 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c0 END)) FROM rt1, rt0 ORDER BY ((NOT (rt0.c3)) IN (-6.05922969E8, CAST(rt1.c5 AS BLOB))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt1 WHERE (CASE x'41c5'  WHEN CAST('' AS BLOB) THEN 0.6494534914707257 END); -- 0ms;
SELECT DISTINCT ((((((rt1.c4)AND(rt0.c4)))AND(rt1.c3))) ISNULL) FROM rt0, rt1 WHERE (((((CAST(0xffffffffd5b116b0 AS BLOB))AND(((1.535027999E9)>>(x'fd2a')))))OR(((0.4127903278015067) BETWEEN (NULL) AND (x''))))); -- 0ms;
SELECT DISTINCT (rt1.c3 COLLATE NOCASE IN ()) FROM rt0, rt1; -- 0ms;
SELECT 'Mnk%de1lz' FROM rt1; -- 0ms;
SELECT DISTINCT MAX(AVG((NOT (rt0.c4)))), CAST(((rt0.c3)<(rt1.c3)) AS TEXT), ((((rt0.c2)/(rt1.c4)))IS(((rt1.c3)>>(rt0.c2)))) FROM rt1 WHERE (((UNLIKELY(0.957302008983809)) BETWEEN (((0xabd37d) ISNULL)) AND (((NULL)|(NULL)))));SELECT DISTINCT (rt1.c1 IN ()), ((((rt0.c0) NOTNULL)) NOT NULL), CAST(((((0.47451153426995396)AND(rt1.c3)))OR('')) AS NUMERIC) FROM rt0, rt1 WHERE (CAST((0Xffffffffdb7ef974 IN (0.2647167080614916)) AS NUMERIC)) GROUP BY (+ (((((((((rt0.c4)OR(rt1.c5)))OR('''_R')))OR(rt0.c4)))OR(rt0.c2)))) HAVING ((rt0.c3) BETWEEN (rt0.c0) AND (rt1.c1)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT (((rt1.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c1)>>(rt1.c2)), rt0.c1, ((((rt1.c3)OR(rt1.c4)))OR(rt1.c0)))) AND ((rt1.c5 COLLATE NOCASE, ((rt0.c0) NOT BETWEEN (rt1.c3) AND (rt1.c0)), ''))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT AVG(((((x'')AND(rt0.c4)))AND(0.30339114680512536))) OVER (), rt1.c2, AVG((rt1.c5 IN ())) OVER () FROM rt0;SELECT DISTINCT 0x36f97a09, (((rt0.c4 IN ())) NOT BETWEEN ((~ (rt1.c3))) AND ('-2127211858')), DENSE_RANK() OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL (((rt1.c5))>((((rt1.c2)-(rt0.c2))))), CAST(x'' AS INTEGER), ((((rt1.c1)OR(rt0.c2))) IS FALSE), ((((((rt0.c3)AND(rt0.c0)))OR(rt1.c2)))<=(((rt1.c5) BETWEEN (rt1.c5) AND (rt1.c0)))), ((((rt1.c1) NOTNULL)) BETWEEN (((rt0.c0)>(rt1.c4))) AND (LIKE(rt1.c2, rt0.c2, 'T'))) FROM rt1 WHERE (CASE WHEN (('') IS TRUE) THEN CASE '997166102'  WHEN NULL THEN '-1883075855' WHEN 0.6998379424248631 THEN NULL WHEN x'7667' THEN 249175976 ELSE NULL END ELSE ((NULL)-('1032223182')) END);SELECT CASE WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE FROM rt1;SELECT DISTINCT CAST(MAX(rt0.c3) AS INTEGER) FROM rt0, rt1 WHERE ((((('')/('I#'))) NOT BETWEEN (CASE WHEN NULL THEN x'391d' WHEN '^n' THEN 0.6995142526496003 WHEN 'YrX-創O#uz' THEN NULL END) AND ((('ZG悋FW') NOT NULL)))); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((((NULL)AND(rt1.c3)))OR(rt1.c3))) FROM rt1, rt0 WHERE (CAST((x'' IN (x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((((rt1.c0, rt1.c3, rt0.c4))<((rt1.c0, rt0.c0, rt1.c1))))IS(TRIM(rt0.c0))), ((rt1.c1) BETWEEN (LIKELIHOOD(rt1.c4, 0.796109052987984)) AND (rt0.c3)), 0.41636604804202715 COLLATE BINARY FROM rt1;SELECT ALL (- ((NOT (rt1.c3)))) FROM rt0, rt1 WHERE (((((('^n') IS TRUE), (('-232391641')IS NOT(0xffffffffbf50575a)), CAST(NULL AS REAL)))<(((((NULL, '', 0.5176609529957688))=(('k蛋\n[', 0.46461739996552576, NULL))), (('')AND(-1716945371)), (('-252886138')-(NULL)))))); -- 0ms;
SELECT ALL CASE ((rt1.c4)OR(rt0.c2))  WHEN rt1.c5 COLLATE NOCASE THEN MIN(rt1.c0) ELSE CAST(rt1.c3 AS INTEGER) END FROM rt1 GROUP BY (((((rt1.c2))==(('-1759183843'))))>=(((((((((rt0.c0)OR(rt0.c0)))OR(rt1.c3)))AND(rt1.c2)))AND(rt0.c4)))) HAVING json(load_extension(rt0.c2, rt1.c5)) ORDER BY ((((((rt0.c3)<=('0.011401876980435377')))AND(((rt0.c0) IS TRUE))))OR(((rt1.c5) NOT BETWEEN (rt1.c3) AND (rt1.c5))))  NULLS LAST;SELECT DISTINCT (('-1800339509')==(json_insert(rt1.c3, 0.060232808019866524, rt0.c3))) FROM rt1 WHERE (CAST(((NULL) IS TRUE) AS INTEGER));SELECT DISTINCT CAST(1.801345316E9 COLLATE BINARY AS BLOB) FROM rt1, rt0 WHERE ((((x'' COLLATE BINARY))>(('665163730' COLLATE NOCASE)))); -- 0ms;
SELECT ((((((((((rt0.c2)%(rt0.c0)))OR((((rt0.c0))>((rt0.c2))))))OR(((rt0.c0) IS FALSE))))AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c3)))))OR(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt1.c0)))) FROM rt1, rt0 GROUP BY ((((rt0.c3)>(rt0.c3))) NOT BETWEEN (((((rt1.c5)AND(0.5942217084270803)))OR(rt0.c0))) AND (((rt0.c4) NOTNULL))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) IS FALSE) COLLATE RTRIM) OVER (), AVG(COUNT(*)), (((rt1.c3 IN ()))<=(((rt1.c0)>=(rt0.c2)))) FROM rt0 WHERE (CAST((- ('Te')) AS NUMERIC));SELECT DISTINCT (((rt1.c2 COLLATE RTRIM, CASE rt1.c2  WHEN x'' THEN rt0.c4 WHEN rt1.c0 THEN rt0.c2 WHEN rt1.c2 THEN x'' WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c2 END, (rt1.c2 IN (rt1.c2, rt0.c0))))==(((((rt1.c1, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c4, 0.8217655384095235, rt1.c5)) AND ((rt0.c0, rt1.c2, rt1.c5))), ((rt0.c0)IS(rt1.c4)), ((rt0.c0) NOTNULL)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c5, (((~ (rt1.c1)))GLOB(((rt0.c1) BETWEEN (rt1.c4) AND (rt1.c0)))), ((rt0.c0 COLLATE NOCASE)==(((rt1.c0)AND(rt0.c3)))) FROM rt0, rt1 GROUP BY CHANGES() LIMIT 664353127 OFFSET 1535027999; -- 0ms;
SELECT AVG('') OVER (), CAST(CASE ''  WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c4 THEN rt1.c3 END AS NUMERIC), CAST(CAST(rt1.c4 AS NUMERIC) AS NUMERIC) FROM rt1, rt0 WHERE (CAST(CAST(x'' AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT ALL rt0.c2, 'kRᾨ', CAST(CASE WHEN rt0.c4 THEN rt1.c3 ELSE rt1.c0 END AS BLOB) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE rt1.c4  WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN rt1.c5 WHEN rt0.c0 THEN rt1.c3 ELSE rt0.c4 END)<=(((rt0.c0) ISNULL))) FROM rt0 WHERE ((((1576296465) NOT NULL) IN ()));SELECT ALL (((((rt1.c4) NOT BETWEEN (rt1.c3) AND (0xffffffff922436ed))))>((SUM(rt1.c0)))), (((((rt1.c2)GLOB(rt0.c2)), ((rt0.c2)==(rt1.c3)), ((rt1.c1) BETWEEN (rt1.c5) AND (rt0.c0))))<((AVG(rt1.c4), ((NULL) NOTNULL), 1894081107))), CAST((rt1.c1 IN ()) AS BLOB) FROM rt0;SELECT ALL (((rt0.c4))==(((((rt0.c0, rt1.c3, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt1.c2)) AND ((rt0.c1, rt0.c4, rt0.c2)))))), CASE WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN rt1.c1 COLLATE BINARY END, (((NULLIF(DISTINCT rt0.c1, rt0.c1)))>=((((rt0.c3) IS TRUE)))) FROM rt0 WHERE (TOTAL_CHANGES());SELECT DISTINCT LEAD(((((SUBSTR(rt0.c0, rt0.c1))OR(((rt0.c1)!=(rt0.c4)))))AND(CASE WHEN rt0.c3 THEN rt0.c0 END)), ((((((((rt0.c3)AND((~ (rt0.c2)))))OR((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c1))))))AND((((rt0.c1))>=((rt0.c0))))))AND((((rt0.c1))<((rt0.c1))))), ((((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c0)))AND(LIKE(rt0.c2, rt0.c0, '傢'))))AND(((rt0.c0)+(NULL))))) OVER () FROM rt0; -- 0ms;
SELECT ((((((((CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)OR(TOTAL(rt1.c3))))OR(((rt1.c2)>(NULL)))))AND((rt1.c5 IN ()))))AND(((rt0.c1) BETWEEN (rt1.c4) AND (rt0.c1)))) FROM rt1, rt0 GROUP BY (((rt0.c2 IN ()))-(rt1.c2 COLLATE RTRIM)) HAVING ((MIN(rt1.c3, rt1.c3))<=(rt1.c1)); -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)<>((('_ᬘ3+') ISNULL))), rt0.c4, rt0.c0 FROM rt0, rt1 WHERE ((((- (0.5967064081251735)))IS(CAST(0X4654844b AS INTEGER)))); -- 0ms;
SELECT DISTINCT AVG((- (rt1.c4))) FILTER(WHERE (~ (CASE WHEN rt1.c0 THEN rt1.c2 WHEN rt1.c4 THEN rt1.c4 WHEN x'' THEN rt0.c3 ELSE rt1.c3 END))) OVER () FROM rt1 WHERE ((((x'e6bb')) BETWEEN (((+ (NULL)))) AND ((CAST('1987793142' AS TEXT)))));SELECT DISTINCT CAST(((((rt0.c1)AND(rt1.c5)))OR(rt1.c2)) AS REAL) FROM rt0, rt1 WHERE (((((((((('|iY䴇\隸' IN ()))AND(((x'')/(x'e530')))))AND(((0.20614665722158532) NOT NULL))))OR(((0.40924202893235484) IS FALSE))))AND(CAST(NULL AS BLOB)))); -- 0ms;
SELECT ALL (('0.39260524035375455')<>(rt0.c4)), GROUP_CONCAT(((rt1.c1) NOT BETWEEN (rt1.c5) AND (rt1.c5))), ((((rt1.c2) NOT NULL))>=(((((((((rt1.c2)OR(rt1.c1)))AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))), ((rt1.c4)IS NOT(rt0.c4)) COLLATE RTRIM, FIRST_VALUE(((rt0.c2) NOT NULL)) OVER () FROM rt0, rt1 WHERE ((((CASE NULL  WHEN '664353127' THEN -199866870 ELSE x'' END))<=(('' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c2) IS TRUE))) FROM rt1 WHERE (('n&[*o' IN ()) COLLATE RTRIM);SELECT DISTINCT (((((((((((rt0.c0)AND(2.049559583E9)))OR(rt1.c0)))OR(rt0.c3)))OR(rt1.c5))))<>((((((rt1.c0)OR(rt1.c1)))OR(rt1.c4))))) FROM rt1;SELECT ALL rt0.c0 FROM rt1, rt0 WHERE ((((json_array(x'', 0.6784383029376039)))<=(((((('-1553161448')AND(0.39260524035375455)))OR(NULL)))))) LIMIT 2135090792;SELECT DISTINCT (((((rt1.c1)IS(rt0.c1))))<=((rt1.c1))) FROM rt0, rt1 WHERE (CASE 'WKT#KTi窠'  WHEN 0.5093520255397418 THEN x'1465' ELSE NULL END COLLATE NOCASE) ORDER BY ((IFNULL(rt0.c4, rt1.c1))&(NULL)) DESC, ((((rt0.c4)+(rt1.c3)))IS NOT('')); -- 0ms;
SELECT ALL COUNT(*) FILTER(WHERE (rt1.c5 COLLATE RTRIM IN ())) OVER (), CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt1.c4))  WHEN NULL COLLATE RTRIM THEN (((rt1.c0, rt0.c4, rt1.c2)) NOT BETWEEN ((rt0.c0, rt1.c0, rt0.c4)) AND ((rt0.c3, rt0.c4, rt1.c0))) END, TOTAL(rt1.c3 COLLATE NOCASE) COLLATE BINARY FROM rt0 WHERE ((((((((NULL))>((''))))OR((('651459821')OR(-2.52886138E8)))))AND(((NULL) NOT BETWEEN (x'8c89') AND (0.3054059377571159)))));SELECT DISTINCT CAST(((rt0.c3)>>(rt0.c1)) AS NUMERIC), rt0.c4, ((json_array_length(rt1.c0))>=((NULL IN (rt1.c4, x'')))) FROM rt1, rt0 WHERE (LTRIM(((((0.9927513231450332)AND(x'')))AND('{6*#ᯆ}gJD')), ((x'') NOTNULL))); -- 0ms;
SELECT DISTINCT (- (((NULL)!=(rt0.c2)))) FROM rt1 WHERE ((- (x'e1fd3f612288')));SELECT DISTINCT ((rt0.c0 COLLATE BINARY) IS TRUE) FROM rt1, rt0 WHERE ((((6.51459821E8 IN ())) NOT BETWEEN (((0.5995470696149525) NOT NULL)) AND (CAST(2034394411 AS TEXT)))); -- 0ms;
SELECT (rt1.c0 IN ()) COLLATE NOCASE FROM rt1, rt0 LIMIT -1272275433 OFFSET -1692413995; -- 0ms;
SELECT 2.090982976E9 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt1 WHERE (((((NULL)<=(NULL))) NOT BETWEEN ((~ (0.10407618829428422))) AND (((NULL)+(0.5128677176147285))))); -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt0.c1 THEN rt1.c4 ELSE rt0.c4 END)OR((rt0.c3 IN (rt0.c0)))), ((((rt1.c4) NOT NULL))IS NOT(((((rt1.c2)OR(rt1.c3)))AND(rt0.c1)))), ((((((((((((((((rt1.c2)OR(rt0.c0)))OR(rt0.c0)))OR(x'')))AND(rt1.c4)))AND((rt1.c5 IN (rt1.c5)))))OR(TOTAL(NULL))))OR(0.3851617255858526)))AND(rt1.c2 COLLATE NOCASE)), ((rt1.c5)OR((((rt0.c3)) BETWEEN ((-1.350455029E9)) AND ((rt0.c2))))), (((0.04619810976488892)) NOT BETWEEN ((((rt1.c3) BETWEEN (-1882247236) AND (rt0.c0)))) AND ((((rt1.c0)IS(rt1.c0))))) FROM rt0, rt1 WHERE ((((((NOT ('-1253371916')))AND(NULL)))AND(((0.04285424337523103)LIKE('s8'))))); -- 0ms;
SELECT ALL COUNT(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2))) OVER ( ORDER BY (((rt0.c2 COLLATE BINARY))<((rt0.c0 COLLATE BINARY)))), ((rt1.c3) BETWEEN (rt0.c3) AND (rt1.c1)) COLLATE NOCASE, ((MIN(rt0.c0)) BETWEEN (((rt0.c3)>>(rt0.c2))) AND (rt1.c5 COLLATE BINARY)) FROM rt1, rt0 LIMIT -612518703 OFFSET -605922969; -- 0ms;
SELECT DISTINCT TRIM(LIKELY(rt1.c3)) FROM rt1 WHERE ((~ (CASE WHEN 0Xffffffffc3660a12 THEN 0.7696340092912406 WHEN '&' THEN '<' WHEN '1235466335' THEN 0.3649119893339371 END))); -- 0ms;
SELECT DISTINCT '' COLLATE BINARY FROM rt1 LIMIT 1991679805 OFFSET 357147141; -- 0ms;
SELECT DISTINCT ((((((((rt0.c0)AND(rt0.c4)))AND(rt1.c5)))OR(rt1.c2)))AND(rt0.c1)) COLLATE BINARY FROM rt1;SELECT DISTINCT (- (rt1.c4)) COLLATE BINARY COLLATE NOCASE FROM rt0, rt1 WHERE (CAST(((((((((x'')OR(x'')))OR(x'')))OR(-1.935077217E9)))AND(x'7a9a')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c2)) BETWEEN (COALESCE(DISTINCT rt0.c3, rt0.c3, rt0.c2, rt0.c2)) AND (MAX(rt1.c5))), IFNULL(DISTINCT ((rt0.c0) NOTNULL), (~ (rt1.c2))), ((((((rt1.c1)<(rt0.c3)))OR(rt1.c5 COLLATE RTRIM)))OR('0.08937592928492788')) FROM rt0;SELECT DISTINCT ((rt1.c2) NOT NULL) FROM rt0, rt1; -- 0ms;
SELECT ALL (((rt1.c0 IN (rt1.c2))) BETWEEN ((- (rt0.c3))) AND (((rt1.c4)<>(rt1.c4)))) FROM rt1 FULL OUTER JOIN rt0 ON ((((rt1.c5) ISNULL)) IS TRUE); -- 0ms;
SELECT ALL CASE WHEN rt1.c4 THEN '' COLLATE NOCASE END FROM rt0, rt1 WHERE (CASE ((-1.383154445E9)-(9.90318825E8))  WHEN (((0.08507188260753262)) NOT BETWEEN (('1108275502')) AND (('ऩd'))) THEN '0.64010342392917' WHEN ((x'') IS FALSE) THEN ((0Xfffffffff8aa3dea)<=(' axF?')) WHEN '1804148830' COLLATE NOCASE THEN (('z}')IS(0.6355644515586805)) END) GROUP BY LOWER(rt1.c3) COLLATE BINARY, (((~ (rt1.c1))) NOT BETWEEN (rt1.c2) AND ((rt1.c1 IN ()))), json(rt1.c0) COLLATE BINARY; -- 0ms;
SELECT ALL ((CAST(rt1.c4 AS INTEGER))OR(CAST(rt0.c2 AS NUMERIC))) FROM rt1, rt0; -- 0ms;
SELECT ((CAST(rt1.c0 AS NUMERIC)) NOT NULL) FROM rt0 WHERE (((CASE WHEN 0.17327128386222068 THEN x'' ELSE 0X7a29cc1f END) BETWEEN (((NULL) ISNULL)) AND ((('')AND(NULL)))));SELECT DISTINCT ((((rt0.c1)|(rt1.c3)))GLOB(CAST(rt0.c4 AS INTEGER))) FROM rt0, rt1 WHERE (0.7867450058557327); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL ((GROUP_CONCAT(rt1.c3)) NOT NULL), ((x'')>>(((((rt1.c5)AND(rt0.c2)))AND(rt0.c3)))), ((CAST(rt1.c1 AS TEXT))IS(DATETIME(rt1.c1, rt1.c0, rt0.c2))) FROM rt0, rt1 INTERSECT SELECT ALL COUNT(*), LIKELIHOOD(((((0.29455180617846)AND(rt1.c5)))OR(rt1.c0)), 0.47978269971640464), (((((((rt1.c5)AND(rt1.c0)))OR(x''))))<=((((((((((rt1.c4)AND(rt0.c0)))OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c3))))) FROM rt1 ORDER BY ((CASE rt1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c5 THEN rt0.c1 WHEN rt1.c4 THEN rt0.c3 END)<<((rt1.c4 IN ()))) ASC  NULLS FIRST;SELECT DISTINCT (NOT (IFNULL(DISTINCT rt0.c3, rt1.c3))) FROM rt0, rt1; -- 0ms;
SELECT ALL CASE WHEN CAST(rt1.c1 AS BLOB) THEN (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) END FROM rt1 WHERE (json_quote((+ ('-2098665023'))));SELECT COUNT((rt1.c0 IN ()) COLLATE NOCASE) FROM rt1 GROUP BY (((((((rt1.c4, rt0.c4, rt1.c5)) NOT BETWEEN ((rt1.c4, rt1.c3, rt1.c3)) AND (('-1692413995', rt0.c3, rt0.c0))))AND((rt0.c2 IN ()))))OR(((rt1.c5) IS FALSE))), (((((rt0.c1)<(rt0.c1))))>((NULL))), (((((rt1.c3, rt1.c5, rt0.c4)) BETWEEN ((rt1.c4, rt1.c5, rt1.c0)) AND ((rt0.c0, -2.52886138E8, rt1.c1)))) NOT NULL);SELECT DISTINCT (NOT (x'f200')) FROM rt1, rt0 WHERE (((((((((json_patch('^n', -1948741338))OR(((((NULL)OR('ECk^U')))AND(NULL)))))AND(CAST(-9.74742029E8 AS REAL))))AND((('1298024309') IS FALSE))))OR('^1' COLLATE NOCASE)));SELECT DISTINCT ((((rt0.c0)<<(rt0.c3))) NOTNULL) FROM rt0 ORDER BY 0xabd37d ASC  NULLS FIRST, (NOT (rt1.c0)) COLLATE BINARY  NULLS LAST;SELECT COUNT(CAST(rt0.c4 AS REAL) COLLATE RTRIM) OVER (), (((rt0.c2)) BETWEEN ((((rt0.c0)||(rt1.c1)))) AND ((rt0.c4 COLLATE NOCASE))), ((((rt0.c1)OR(rt1.c3)))/(CAST('0.740367335112097' AS REAL))) FROM rt0;SELECT ALL rt1.c2 FROM rt0 WHERE ((((x'' IN (0x234bbc39))) NOT NULL)) ORDER BY CASE WHEN rt1.c0 THEN CASE WHEN rt1.c4 THEN 0.4620705597820457 END WHEN 'jX6Dqk蕱.' COLLATE BINARY THEN -1.862829259E9 WHEN rt1.c2 THEN (+ (rt0.c3)) END;SELECT DISTINCT (~ ((((rt0.c0, rt0.c1, rt0.c1))<>((rt1.c5, rt1.c0, rt1.c5))))), AVG(rt0.c3 COLLATE NOCASE), ((((rt1.c1) BETWEEN (rt1.c2) AND (rt0.c2))) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c1))) AND ((+ (rt0.c0)))), (NULL IN ()), ((((rt0.c2)*(rt1.c3))) IS FALSE) FROM rt0, rt1 WHERE (CAST((((('')AND(1057226283)))AND('L-lj46~TO')) AS REAL)); -- 0ms;
SELECT DISTINCT (((rt1.c0)-(rt0.c3)) IN ()) FROM rt1 WHERE (MIN((('3a')*('')), ((0.13416842178345068) NOT BETWEEN ('S') AND ('P\.	28q\r(')))) GROUP BY '6LP4㈳9' ORDER BY (((rt1.c4) BETWEEN (rt0.c0) AND (rt1.c1)) IN ())  NULLS FIRST; -- 0ms;
SELECT ALL (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((CAST(rt1.c4 AS TEXT))AND((NOT (rt0.c4)))))AND(((rt1.c5) NOT BETWEEN (rt1.c1) AND (rt0.c4)))))AND(MIN(rt0.c0))))OR(SUM(rt1.c1))) FROM rt1 WHERE (UNLIKELY((((NULL, 'rᾨ', '1506502603', NULL, NULL)) BETWEEN ((724937361, 0.754938908399788, 0.5601447184363827, x'', '')) AND ((NULL, -332211586, -1.668512947E9, 1805854699, '1h')))));SELECT DISTINCT ROW_NUMBER() OVER ( RANGE ((x'89b1')|(((rt0.c1)>(rt0.c2)))) PRECEDING EXCLUDE CURRENT ROW) FROM rt0, rt1;SELECT rt1.c4 FROM rt0;SELECT DISTINCT UNLIKELY(DISTINCT MAX(rt0.c0)) FROM rt0 WHERE ((+ (NULL))); -- 0ms;
SELECT DISTINCT NULL FROM rt1 LEFT OUTER JOIN rt0 ON ((((CASE WHEN rt0.c1 THEN rt1.c3 END)AND((((rt1.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))))))AND(CASE WHEN rt0.c0 THEN rt1.c0 END)) WHERE (((('') NOT BETWEEN ('_') AND (0X166bb010)) IN (x'b5bc' COLLATE RTRIM))); -- 0ms;
SELECT (CAST(rt1.c0 AS NUMERIC) IN (AVG(rt0.c4), ((rt1.c0)<=(rt0.c2)))) FROM rt1;SELECT DISTINCT ((((rt0.c4) BETWEEN (rt1.c0) AND (rt1.c1))) BETWEEN (rt0.c1) AND (rt1.c2 COLLATE NOCASE)) FROM rt1, rt0 LIMIT 586830779; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c0)%(1.765023898E9)) THEN (((rt1.c0, rt0.c2, rt1.c1)) BETWEEN ((rt1.c3, rt0.c3, rt1.c4)) AND ((rt1.c4, rt1.c2, rt0.c2))) ELSE (rt1.c5 IN ()) END, (LOWER(rt1.c4) IN (x'8746', ((rt0.c1)>=(rt0.c0)))), NULLIF(DISTINCT CASE WHEN rt0.c0 THEN rt1.c1 END, CAST(rt0.c4 AS NUMERIC)) FROM rt0;SELECT ALL (NOT ('l ')) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt1.c2, ((- (rt0.c1)) IN ()), (((((rt0.c4, rt1.c0, rt1.c2)) BETWEEN ((rt0.c0, rt1.c4, rt0.c1)) AND ((rt0.c3, rt1.c1, rt0.c2)))) NOT NULL) FROM rt0 WHERE (((((((NULL)<<(-1204430361)))AND(((0.5796936116913948) NOTNULL))))AND(TRIM(0.6709569618026661, 'n!+'))));SELECT DISTINCT NULL FROM rt0, rt1 GROUP BY CAST((rt0.c3 IN ()) AS NUMERIC); -- 0ms;
SELECT ALL CASE (rt0.c1 IN ())  WHEN MIN(rt0.c0) THEN ((rt1.c0) NOT BETWEEN (rt1.c5) AND (rt0.c3)) ELSE (+ (rt1.c3)) END FROM rt1 WHERE ((((~ (x'0139'))) IS FALSE)) LIMIT 1480479372 OFFSET -1126392105 UNION ALL SELECT ALL ((rt0.c3 COLLATE BINARY)|(CAST(rt1.c1 AS TEXT))) FROM rt0 WHERE (ROUND((('UVx')>=(0.6260296023158594)), CAST('⸩L' AS INTEGER))) ORDER BY (+ ((rt0.c2 IN ())))  NULLS LAST;SELECT DISTINCT ((((rt0.c2) IS TRUE))>=(((rt1.c4) BETWEEN (rt1.c2) AND (rt0.c1)))) FROM rt1 WHERE (((((NULL)IS NOT(NULL)))*(CAST('M75꬟j' AS BLOB))));SELECT DISTINCT (+ ((((rt1.c4)) NOT BETWEEN ((rt0.c0)) AND (('38379054'))))), LEAD((((rt0.c4)||(NULL)) IN ()), (((((rt0.c3, rt0.c2, rt0.c4))>=((x'', rt0.c3, rt0.c3)))) NOT BETWEEN (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1))) AND ((NOT (rt0.c0)))), ((((rt0.c4) IS FALSE))AND(((rt0.c1)AND(rt0.c2))))) OVER ( RANGE BETWEEN (- (-2.127211858E9)) PRECEDING AND  CURRENT ROW EXCLUDE TIES), NTILE(rt0.c2) OVER () FROM rt0 WHERE ((('gdr\rxあM>' COLLATE RTRIM)||(-1261297884)));SELECT DISTINCT TOTAL((((rt1.c1))>=((rt0.c4)))) FROM rt1 WHERE (LENGTH(CASE WHEN '651459821' THEN '' WHEN -1.615578593E9 THEN 0.2035562007472097 WHEN -657260529 THEN NULL END));SELECT DISTINCT NTILE(((((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c0)))!=(rt1.c3))) OVER () FROM rt0, rt1 WHERE (''); -- 0ms;
SELECT ALL rt0.c1 FROM rt1 GROUP BY json_extract(((rt1.c5) IS FALSE), CAST(rt1.c2 AS INTEGER));SELECT (NOT ((rt0.c3 IN ()))) FROM rt1 WHERE (TRIM(DISTINCT ('1684463270' IN ()))) GROUP BY ((((RTRIM(0.018433015149697973))AND((rt0.c3 IN ()))))OR((((rt1.c5))!=((rt0.c1)))));SELECT DISTINCT SQLITE_COMPILEOPTION_GET((rt1.c0 IN ())), '', ((((0.5783997438704787)|(rt1.c0)))IS(x'8ea7')) FROM rt1, rt0 WHERE (((((x'')AND(NULL)))OR(0Xffffffffb477608b)) COLLATE BINARY) ORDER BY rt0.c2  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c2 COLLATE BINARY)AND((+ (rt0.c1)))))OR(rt0.c0)) FROM rt0 WHERE (((((0.36503980234369193)=('')))<=(((x'')<<(''))))); -- 0ms;
SELECT DISTINCT 0.8930741725019715 FROM rt1 WHERE (((IFNULL(DISTINCT 'g#i1饨x\Z', -1.548362498E9))-(((0xffffffffafc26f43) BETWEEN (0.059931059754236626) AND (x'd305f245'))))); -- 0ms;
SELECT DISTINCT CASE WHEN (NULL IN (rt0.c1)) THEN CASE rt1.c3  WHEN rt0.c4 THEN rt1.c2 END ELSE TRIM(rt1.c1) END, CASE ((((rt1.c4)OR(rt0.c0)))AND(rt0.c0))  WHEN ((rt1.c3)<>(rt1.c0)) THEN ((rt0.c2) NOT BETWEEN (rt1.c5) AND (rt1.c3)) ELSE ((((rt1.c3)AND(rt1.c4)))AND(rt0.c2)) END, TOTAL(LIKELIHOOD(rt0.c1, 0.4188145104776836)) OVER () FROM rt0, rt1 LIMIT 1833319761 OFFSET 864495676; -- 0ms;
SELECT ALL CASE CAST(rt0.c4 AS TEXT)  WHEN ((rt0.c2) ISNULL) THEN (((rt0.c0, rt1.c2, 'b')) NOT BETWEEN ((rt1.c1, rt1.c2, rt1.c1)) AND ((rt1.c4, rt1.c5, rt1.c2))) ELSE ((rt1.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)) END FROM rt1, rt0 WHERE (((((x'4692')LIKE(1.024986167E9))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c0) NOT NULL) IN ()) FROM rt0 WHERE ((((~ ('AA'))) NOT NULL)) ORDER BY (((rt1.c4 COLLATE NOCASE, ((rt0.c0) IS TRUE), ((rt1.c2)AND(rt1.c5)), CAST(rt1.c1 AS REAL), NULLIF(x'', rt0.c2)))>(((((rt1.c3))>((rt1.c5))), CAST(rt0.c4 AS NUMERIC), ((rt1.c5)-(rt1.c5)), ((rt0.c2) IS TRUE), CASE rt0.c2  WHEN rt0.c0 THEN rt1.c2 END)));SELECT (((0.2718134424173345, rt0.c2, rt0.c3)) BETWEEN ((rt1.c2, rt0.c2, rt1.c4)) AND ((rt1.c2, rt0.c4, rt1.c2))) COLLATE RTRIM FROM rt0 WHERE (x'') GROUP BY 0.6356580196614547 HAVING ((rt1.c1 COLLATE RTRIM)IS((('Pﳀ') IS FALSE)));SELECT ALL TRIM(((((rt0.c4)AND(rt0.c0)))OR(rt0.c1))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CAST(rt1.c3 AS BLOB), NULL), (((rt0.c2)) NOT BETWEEN ((rt1.c1)) AND ((CASE WHEN rt0.c3 THEN rt1.c2 ELSE rt0.c0 END))), ((((((((rt1.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c4)))OR(rt1.c4)) COLLATE BINARY FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c3, (((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt1.c2)))AND(rt0.c3)), CASE WHEN NULL THEN rt1.c5 END, ((rt0.c2) IS FALSE)))>((((x'')%(rt1.c3)), (rt1.c1 IN ()), rt0.c2))), (((NOT (rt0.c3))) NOT NULL) FROM rt1 WHERE (CASE ((0.7062779995753891) NOT BETWEEN (NULL) AND (NULL))  WHEN x'' THEN ('-1468288069' IN ()) END);SELECT ((rt1.c3)>=(rt1.c2 COLLATE BINARY)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c5) NOT BETWEEN (rt0.c3) AND (x'')), ((rt1.c0)/(rt1.c4)), rt0.c0, ((rt0.c2)|(rt1.c1)), (NOT (rt0.c2))))<>(((NOT (rt0.c1)), ((rt0.c4) BETWEEN (rt0.c2) AND (rt1.c0)), ((rt0.c4) BETWEEN (rt0.c1) AND (rt1.c3)), CASE WHEN rt0.c4 THEN rt1.c4 WHEN rt0.c4 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c3 END, NULLIF(DISTINCT rt0.c2, rt1.c5)))) FROM rt1, rt0 WHERE (UNLIKELY(DISTINCT (NULL IN ()))) GROUP BY NULL, (((((rt1.c5))>=((rt0.c2)))) IS FALSE), rt1.c0; -- 0ms;
SELECT ALL rt0.c4 FROM rt1;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt0.c3)))IS(TOTAL(rt1.c4))), CAST(((rt1.c5)>=(rt1.c1)) AS INTEGER), (NOT (rt1.c5 COLLATE RTRIM)) FROM rt0 GROUP BY (~ (TYPEOF(rt1.c0))) HAVING ((COUNT(*)) BETWEEN (((rt1.c2)IS NOT(rt0.c1))) AND (((rt1.c2) NOT BETWEEN (rt0.c4) AND (rt1.c0))));SELECT ALL CASE rt0.c0  WHEN NULL THEN CASE WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c2 THEN '-2098665023' WHEN rt0.c2 THEN rt0.c2 ELSE rt1.c0 END WHEN ((((((((rt0.c0)OR(rt1.c0)))OR(rt0.c3)))OR(rt0.c0)))AND(rt1.c1)) THEN ((rt0.c0) ISNULL) WHEN rt0.c1 THEN ((rt0.c2)&(rt1.c4)) END FROM rt1 WHERE ((((NULL, 0.7824510769263724, -1.902509534E9)) NOT BETWEEN ((GLOB(0.3903745771444421, -1.966895551E9), (0Xffffffff9fb43a1f IN ()), (((((((('188077627')OR(x'')))OR(0.37086734740782334)))OR(x'')))OR(0Xffffffffcb4a5275)))) AND ((CASE WHEN -886036418 THEN x'' WHEN x'60bc' THEN NULL WHEN '-1907735765' THEN '' END, ((x'') IS TRUE), CAST(0.9067129092617856 AS INTEGER))))) LIMIT -1807191025;SELECT DISTINCT CHAR(((rt1.c3)<(rt0.c2)), LIKELY(DISTINCT rt0.c3), (NULL IN ())) FROM rt1, rt0 WHERE (((((((NULL)AND(x'')))AND(NULL)))*((x'' IN ())))); -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c1, rt1.c1, rt1.c0, rt0.c3, rt1.c2)) BETWEEN ((rt1.c1, 'u	', rt1.c4, rt0.c0, rt1.c4)) AND ((rt1.c4, rt0.c4, rt1.c1, rt1.c4, rt1.c0)))) OVER () FROM rt1, rt0; -- 1ms;
SELECT ALL (NULL IN ()) FROM rt1, rt0; -- 0ms;
SELECT ALL LIKE(CAST(rt0.c2 AS NUMERIC), CAST(rt0.c1 AS NUMERIC)), (((((rt1.c2)&(rt0.c2)), CAST('-1490865557' AS REAL), CASE rt0.c4  WHEN rt0.c4 THEN rt1.c4 WHEN rt0.c0 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c4 END, ((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c4)), CAST(rt0.c4 AS TEXT)))>((CASE rt0.c0  WHEN rt1.c2 THEN rt1.c3 ELSE rt1.c5 END, rt0.c3 COLLATE RTRIM, x'', ((((rt0.c2)OR(rt1.c5)))OR(rt1.c0)), CAST(rt0.c3 AS REAL)))), ((((rt0.c3) IS TRUE))LIKE(CAST(rt0.c3 AS TEXT))) FROM rt1 WHERE (CAST(x'6ed7' AS REAL) COLLATE RTRIM);SELECT DISTINCT x'' FROM rt1, rt0 WHERE (((CAST('%G\&' AS TEXT))|((((NULL)) NOT BETWEEN ((0.08197491675097068)) AND (('')))))) GROUP BY '	d\r<4J', json_array_length(((rt0.c4)==(rt1.c1)), ((rt1.c2) BETWEEN (rt1.c4) AND (rt0.c4))), (((CASE 0.2787073943937539  WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END))<=((LIKELY(DISTINCT rt0.c1)))) HAVING ((((rt0.c1)IS(rt0.c4))) NOTNULL); -- 2ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c1 THEN rt1.c1 ELSE x'59350c5e' END)>=(rt1.c1)) FROM rt0 CROSS JOIN rt1 ON SQLITE_COMPILEOPTION_GET(x'' COLLATE RTRIM) ORDER BY ((0.7010343891609487) IS TRUE) DESC, ((((((((CASE rt1.c1  WHEN rt0.c4 THEN rt0.c0 ELSE rt1.c4 END)AND((((rt0.c0))<=((rt0.c4))))))OR(((rt1.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))))AND('1735772884')))AND(((rt0.c0)|(rt0.c3)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), COUNT(*), CASE WHEN AVG(rt1.c1) THEN CAST(rt1.c0 AS NUMERIC) ELSE (((rt1.c3))>((rt0.c2))) END FROM rt0, rt1 WHERE ((- ((1241044351 IN (NULL))))); -- 0ms;
SELECT DISTINCT 0Xfffffffffa5229bf FROM rt1, rt0; -- 1ms;
SELECT ALL 0.76951135978406, ((x'') NOTNULL), ((((rt0.c3)&(rt0.c2)))<<(((rt0.c3) IS TRUE))), '-929975201', (rt1.c0 IN ()) COLLATE NOCASE FROM rt1, rt0 WHERE (CAST(((1789516216)AND('-1668512947')) AS BLOB)); -- 0ms;
SELECT ALL COUNT(*) OVER (), (((((6.64353127E8))<((rt1.c3))))>(((rt0.c4)|(rt0.c3)))), ((((rt0.c0 IN ())))<((((rt0.c0) IS TRUE)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT ((INSTR(rt0.c3, rt1.c5)) BETWEEN (CAST(rt1.c5 AS NUMERIC)) AND (((((rt1.c5)OR(rt0.c2)))AND(rt1.c1)))) FROM rt0 ORDER BY ((((rt1.c3) NOTNULL)) IS TRUE);SELECT DISTINCT CAST(((rt1.c4)IS(rt1.c3)) AS INTEGER) FROM rt1 WHERE (CASE WHEN (('5A9G')OR(NULL)) THEN ((((x'')OR(NULL)))OR(NULL)) ELSE (('') NOT NULL) END); -- 0ms;
SELECT CAST(MAX(x'') AS TEXT) FROM rt1; -- 0ms;
SELECT (((((((((rt1.c1 IN ()))OR(CASE WHEN rt1.c1 THEN rt0.c1 WHEN rt0.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c0 ELSE rt0.c0 END)))AND(CAST(rt0.c3 AS TEXT))))AND(rt0.c3 COLLATE BINARY)))OR(((rt1.c1)>(rt0.c4)))) FROM rt1, rt0; -- 0ms;
SELECT CAST(CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt1.c2 END AS BLOB) FROM rt1, rt0 WHERE (((('si<m')) BETWEEN (('IMl' COLLATE RTRIM)) AND ((CASE x''  WHEN NULL THEN '4j' WHEN 0.30156461527813105 THEN NULL WHEN '478528658' THEN NULL END)))); -- 0ms;
SELECT ALL (((rt0.c4)) BETWEEN ((CAST(rt1.c4 AS BLOB))) AND ((rt0.c0))) FROM rt0, rt1 WHERE ((('(t83	5')AND(0.9200438000755825)) COLLATE BINARY); -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY ((((((rt0.c0)OR(rt1.c3)))OR((('T9鼛R')/(rt1.c2)))))OR(rt1.c4))) FROM rt0, rt1 WHERE (((0.6659204756716635 COLLATE BINARY) BETWEEN ((((NULL, 0xffffffffcf62905a, '-1966895551')) BETWEEN ((NULL, '1801345316', x'')) AND (('518172941', '1293637129', 0.5805954270124387)))) AND (((0.9461078860658407)<('e'))))); -- 0ms;
SELECT DISTINCT ((((((((CAST('|K>}wC*' AS BLOB))AND(((rt1.c5) NOT BETWEEN (rt1.c5) AND ('|8wux\r_m(')))))AND(COUNT(rt1.c5))))OR(AVG(rt0.c2))))OR(rt1.c3 COLLATE RTRIM)) FROM rt0 WHERE (((((json_extract(0.9344468630798977, x''))AND(NULL COLLATE NOCASE)))OR(('s.' IN ('9a<xKTq', 0X51300a4c))))) GROUP BY ((ABS(rt1.c4)) ISNULL);SELECT DISTINCT COALESCE(DISTINCT rt0.c3, ((rt1.c5)<<(rt1.c4)), (+ (rt0.c0)), x'b09a') FROM rt0 WHERE ((((((((((('') IS FALSE))OR('\n㎚BipD/y+' COLLATE BINARY)))OR((((('-29716763')AND(NULL)))AND(NULL)))))OR(((x'') NOT BETWEEN (0.5867857752037661) AND (0.5112326678172315)))))OR((((((((('-327275393')OR(x'')))OR(0.912982841726157)))OR(x'')))AND('-358913090')))));SELECT ALL ((('-1272275433') NOT NULL) IN ()) FROM rt1 WHERE (''); -- 0ms;
SELECT (rt0.c2 IN ()) COLLATE RTRIM FROM rt1, rt0; -- 0ms;
SELECT (((rt0.c3)) NOT BETWEEN ((rt1.c5 COLLATE BINARY)) AND ((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c2))))) FROM rt1 WHERE (CASE WHEN (((0Xffffffffd78198d8)) NOT BETWEEN ((0.41239340754246867)) AND (('⃫︈j	,]yK+'))) THEN ((('-392038631')) BETWEEN ((0.8200910405323265)) AND ((x''))) END);SELECT DISTINCT ((((('\n,')OR(rt0.c1)))AND(rt0.c0)) IN (json_extract(rt1.c0, rt1.c0))) FROM rt0;SELECT CASE WHEN ((rt1.c4)LIKE('')) THEN (((rt0.c3))<((rt1.c0))) ELSE ((((rt1.c0)AND(rt1.c4)))AND(rt1.c0)) END FROM rt0, rt1 WHERE (((('v鼽' IN ())) BETWEEN (CASE WHEN '1554507035' THEN -0.0 ELSE x'' END) AND ('4ꜭip傢QY'))); -- 0ms;
SELECT ((((rt1.c5)*(rt0.c2)))OR(((((rt0.c1)AND(rt1.c1)))AND(rt1.c3)))) FROM rt1;SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c4))) NOT BETWEEN (((rt1.c1) BETWEEN (rt0.c0) AND (rt0.c4))) AND (0.28619046197987597)) FROM rt0 WHERE (((rtreenode(NULL, x'')) BETWEEN (CASE NULL  WHEN x'' THEN NULL WHEN x'' THEN 0X3d8679ce WHEN x'' THEN 0.7070570249087083 END) AND (CAST('엢gH<cvyiY' AS BLOB))));SELECT ((('-886702902'))!=((IFNULL(rt0.c0, rt0.c0)))) FROM rt1, rt0 WHERE (CHANGES()); -- 0ms;
SELECT DISTINCT (((rt0.c0, rt1.c2, rt1.c0)) BETWEEN (((NOT (x'')), COUNT(*), ((rt1.c5) NOTNULL))) AND ((CASE rt0.c2  WHEN rt1.c0 THEN '484789530' WHEN rt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END, ((rt1.c4)AND(rt0.c4)), rt0.c2 COLLATE NOCASE))), '-1462675520', RANK() OVER () FROM rt1;SELECT DISTINCT (('-571700042')*((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) FROM rt1 WHERE (CAST((NOT (x'')) AS TEXT)) ORDER BY ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt1.c4)))GLOB((rt1.c3 IN ())))  NULLS LAST;SELECT (((rt0.c4)) BETWEEN ((((rt0.c4)+(rt1.c3)))) AND (((- (rt1.c3))))) FROM rt1, rt0 WHERE ((((x'') NOT NULL) IN ())); -- 1ms;
SELECT DISTINCT (((rt0.c2) IS TRUE) IN ()) FROM rt0, rt1 WHERE (1521446095) GROUP BY ((rt1.c1 COLLATE BINARY)*(rt1.c0 COLLATE RTRIM)) HAVING ((((CAST(rt1.c5 AS REAL))AND(CAST(rt0.c1 AS REAL))))AND(rt0.c3)); -- 0ms;
SELECT DISTINCT ((((rt1.c5)<<('1345379673'))) NOT BETWEEN (((rt0.c3) ISNULL)) AND ((rt1.c1 IN ()))), GROUP_CONCAT(GROUP_CONCAT(((rt0.c4)|(rt1.c3)))), ((((rt0.c1)|(rt1.c0))) IS FALSE) FROM rt0 WHERE (CASE WHEN 0.08622412400476631 THEN '-1474932550' COLLATE RTRIM ELSE UNLIKELY(0.647467882299686) END) LIMIT 1671109407 EXCEPT SELECT DISTINCT (((0.1975406512821425))>=((NULL))), ((((rt0.c3)IS(rt0.c1)))OR(((((((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)))AND(rt1.c5)))OR(rt0.c4)))), COUNT(*) FROM rt0 WHERE ((((x'2b99ee70')) NOT BETWEEN (((- (0x7c1afa5f)))) AND ((x'' COLLATE NOCASE))));SELECT DISTINCT 0.9220386520941586 FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3, rt1.c2, rt0.c3)) BETWEEN (((rt0.c3 IN ()), ((((rt1.c2)AND(rt0.c4)))OR(rt1.c1)), rt0.c2)) AND ((((rt1.c0)AND(rt1.c0)), ((((((((rt1.c5)AND(rt0.c0)))AND(rt0.c0)))AND(rt1.c3)))OR(0.25315626684915926)), (((rt1.c3)) NOT BETWEEN ((rt0.c2)) AND (('1307575720')))))), PERCENT_RANK() OVER (), ABS(rt1.c1 COLLATE RTRIM) FROM rt0;SELECT ALL CAST(rt0.c2 COLLATE BINARY AS REAL), rt1.c3, MIN(rt1.c2) FROM rt1 WHERE (((((x'')*(NULL))) BETWEEN (((x'') BETWEEN (0X4d1b5609) AND ('-1397718785'))) AND (x'' COLLATE RTRIM))) GROUP BY (rt0.c2 IN (rt0.c2)) COLLATE NOCASE LIMIT 1138242102;SELECT DISTINCT MIN(((rt1.c5)%(rt1.c4))) FROM rt1 ORDER BY (((~ (rt0.c4)))=((rt1.c0 IN ())));SELECT ALL CASE WHEN rt1.c3 COLLATE RTRIM THEN ((rt1.c0)<(rt0.c3)) WHEN ((0.8604744387547428) ISNULL) THEN TRIM(DISTINCT rt1.c0, rt1.c0) WHEN ((rt0.c0)-(rt0.c3)) THEN rt0.c2 COLLATE NOCASE WHEN ((((((((rt0.c1)OR(rt1.c5)))AND(rt1.c2)))OR(rt0.c2)))AND(rt1.c5)) THEN rt1.c0 COLLATE RTRIM WHEN CAST(rt1.c1 AS REAL) THEN ((rt1.c0)IS(rt1.c5)) ELSE ((((rt0.c3)AND(rt0.c4)))OR(NULL)) END FROM rt1 WHERE (((((0.10030315749228802)%('-1415213050'))) BETWEEN ((('1522173297')OR(0.43964749386244173))) AND (x'd539')));SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt1, rt0; -- 0ms;
SELECT ((MAX(rt1.c1)) IS TRUE) FROM rt1, rt0 WHERE (((CAST(NULL AS TEXT)) BETWEEN (UNLIKELY(0.8217655384095235)) AND ((((('-2050865071')AND(x'')))AND(x''))))); -- 0ms;
SELECT ALL ((rt0.c4) IS TRUE), CASE WHEN (rt1.c3 IN (rt0.c4)) THEN ((rt1.c2) IS TRUE) ELSE ((x'') IS TRUE) END, ((rt1.c5)OR(0.06607106691267806)) COLLATE RTRIM, ((NULL)&(0.9200438000755825)), (((rt0.c1)-(rt0.c1)) IN (((rt0.c3) ISNULL))) FROM rt1;SELECT ((((MAX(rt1.c2, rt1.c1, rt1.c2, rt1.c5, rt1.c0, rt1.c3))OR(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 END)))AND(((rt0.c3)>>(rt0.c1)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT AVG(((((rt1.c5)AND(rt1.c4)))AND(rt0.c3))) OVER () FROM rt0, rt1 WHERE (STRFTIME((x'' IN ()), ('' IN ()), ((0.33957504154104234)IS(0.17388030761884277)), TRIM(DISTINCT '', 0.19684839432689638), CAST(0.12605822737220385 AS BLOB))); -- 0ms;
SELECT ((((((rt0.c3)>=(rt1.c3)))OR(rt1.c5 COLLATE NOCASE)))OR((- (rt0.c4)))) FROM rt1;SELECT (rt1.c1 IN (rt0.c1)) COLLATE RTRIM FROM rt1, rt0; -- 0ms;
SELECT ALL (~ ((rt1.c2 IN (rt0.c4, 0.6000900202244737)))) FROM rt1 WHERE (CAST(UNLIKELY('jH0v?''}]') AS BLOB));SELECT DISTINCT UPPER(MIN(rt1.c4)), rt1.c2, ((((((770706607)<>(rt1.c1)))AND((+ (rt1.c1)))))OR(rt0.c1 COLLATE RTRIM)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT((rt0.c1 IN ()) COLLATE BINARY) OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt1 ORDER BY ((((rt0.c3) NOT BETWEEN (rt1.c2) AND (6.51459821E8)))>>((+ (rt1.c5)))) DESC  NULLS LAST;SELECT DISTINCT ((rt1.c4 IN ()) IN ()), ((rt1.c0) IS TRUE) COLLATE NOCASE COLLATE RTRIM, CASE WHEN ((((((((rt0.c0)OR(rt1.c4)))AND(rt0.c2)))AND(rt0.c0)))AND(rt1.c3)) THEN (- (rt0.c2)) ELSE ((rt1.c1)LIKE(rt1.c4)) END FROM rt1, rt0; -- 0ms;
SELECT ALL ((rt1.c1) NOTNULL), ((LOWER(DISTINCT rt1.c4))>=(((rt0.c3) NOT BETWEEN (0.2984047307165847) AND (rt1.c2)))), json_quote('-913568657') COLLATE NOCASE FROM rt1, rt0 WHERE (((((((x'15e6') ISNULL))OR(((((x'dbeb')AND('[]')))OR('-1974179896')))))OR(((0.1473517600140274)*(-1807880694))))) GROUP BY (rt0.c2 IN (((rt0.c3)||(rt0.c1)))) HAVING (TRIM(DISTINCT rt0.c0) IN ((- (rt1.c2)))); -- 0ms;
SELECT ALL ((AVG(rt1.c5))=(((rt0.c0) IS FALSE))) FROM rt0;SELECT ALL CAST(((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c4)) AS INTEGER) FROM rt0;SELECT ALL ABS(load_extension(rt0.c3)), DENSE_RANK() OVER (), ((rt0.c4)IS((+ (rt0.c2)))) FROM rt0, rt1 WHERE (STRFTIME('}rU6' COLLATE RTRIM, ((x'0a56') IS TRUE), (((('')AND('1024986167')))OR(0.12973342019574674)))); -- 0ms;
SELECT ALL LAST_INSERT_ROWID() FROM rt0 GROUP BY x'', rt1.c0, ((NULLIF(DISTINCT rt1.c5, rt1.c5))<=(LIKELY(rt1.c2))) HAVING ((((AVG(rt1.c0))OR(((rt0.c1)<(rt0.c2)))))AND(LOWER(rt0.c1)));SELECT ((((+ ('0.5594884955167644'))))<>((CASE WHEN rt1.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt1.c1 WHEN rt1.c4 THEN rt0.c1 END))) FROM rt1, rt0 WHERE (((((NULL)<=(0.9165365664985649)))/(((NULL) NOTNULL)))) LIMIT 406786919; -- 0ms;
SELECT DISTINCT TOTAL(((rt1.c3)|(rt1.c2))) FROM rt1; -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN rt1.c5 END IN (((((rt0.c1)OR(rt1.c5)))AND(-32049008)))) FROM rt1, rt0 WHERE (CAST(0.11172007575853438 AS REAL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((((rt1.c2)OR(rt1.c3)))OR(rt1.c0)), '1801345316', ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))))>=((rt1.c0 COLLATE BINARY, (((rt0.c4))<((rt1.c5))), UPPER(rt0.c4)))) FROM rt1 WHERE ((((((+ (x'')))AND((((NULL, '(,W|#', 0Xffffffffca7e7664)) NOT BETWEEN ((x'', x'757f', x'')) AND (('0.46634983756237935', 'S[pD', '-138504377'))))))AND((~ ('qB^\nLx'))))) LIMIT -1047926744 OFFSET 1809441112 UNION SELECT DISTINCT (((('34480289') BETWEEN (rt1.c5) AND (rt0.c3))) ISNULL) FROM rt0, rt1 WHERE (NULLIF((NOT ('391412747')), ((0.5843751751428535) NOT BETWEEN (NULL) AND (x'')))) LIMIT -161191649 OFFSET 1861598681;SELECT CAST(COUNT(*) AS BLOB) FROM rt1 WHERE ((((0.8233139339702913)GLOB('n#')) IN (0xffffffff8e4a432b))); -- 0ms;
SELECT DISTINCT CAST(((rt1.c1)>=(rt0.c1)) AS TEXT), NTILE((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c4)) IN ())) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), CASE rt0.c4 COLLATE BINARY  WHEN NULLIF(DISTINCT rt0.c2, rt1.c4) THEN (rt0.c3 IN ()) ELSE (('')<>('')) END FROM rt0 WHERE ((- (CAST(x'' AS BLOB))));SELECT DISTINCT ((((NULL)OR(((rt0.c2)<=(rt0.c4)))))OR(((-1.966895551E9)LIKE(rt0.c0)))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0, rt1 WHERE (CASE WHEN UNLIKELY(DISTINCT 1.293637129E9) THEN (((((((('1882351846')AND(0xffffffff90f77b35)))OR(NULL)))AND(x'')))OR(x'')) WHEN ((0x67e62771) ISNULL) THEN TRIM(DISTINCT 'h5!Ⱇ_IW') WHEN (~ (0X45af8914)) THEN ((''')e齘') NOT NULL) WHEN '-1285300446' THEN ((('MP')) NOT BETWEEN ((x'')) AND ((0.6173727379893784))) WHEN (('-361856454')==(NULL)) THEN ((0.37952714864812653)&('')) ELSE (~ ('0.0')) END); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt1.c0 ELSE rt0.c0 END)LIKE(((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c3)))AND(rt0.c2)))OR(rt0.c4)))) FROM rt0 WHERE (((('-1594571938'))==((CAST('0.5029020103187395' AS INTEGER))))) GROUP BY (~ (((((rt1.c3)OR(rt1.c5)))AND(rt0.c4))));SELECT ALL rt0.c4, ((((rt1.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))AND(((rt1.c0)!=(rt1.c2)))), (('K\qX	Ft|S') NOT BETWEEN ((((rt0.c1, rt1.c2, NULL))<((rt0.c2, rt0.c3, rt1.c2)))) AND ((((rt1.c1))!=((rt1.c0))))) FROM rt1, rt0; -- 0ms;
SELECT ((COUNT(rt1.c4)) NOT BETWEEN (json_insert(rt1.c0, rt0.c0, rt1.c5)) AND ((- (rt1.c2)))) FROM rt1, rt0;SELECT DISTINCT rt1.c1 FROM rt0 ORDER BY (((rt1.c0)) BETWEEN ((((rt1.c0) BETWEEN (rt1.c2) AND (rt1.c4)))) AND ((NULL))) ASC;SELECT DISTINCT CHAR(0.3474482051106912) FROM rt0; -- 1ms;
SELECT DISTINCT (COALESCE(x'', rt1.c0) IN ()) FROM rt1, rt0; -- 0ms;
SELECT (+ (rt0.c2)) COLLATE RTRIM FROM rt1 WHERE ((('' IN ('?L')) IN ((NULL IN ()))));SELECT DISTINCT ((((((rt1.c3)OR(rt0.c3)))AND(rt0.c2)))GLOB(x'')) FROM rt1;SELECT ALL ((((rt0.c4)AND(rt1.c4 COLLATE BINARY)))AND((+ (rt1.c0)))), (NOT (CASE WHEN rt1.c3 THEN rt1.c5 ELSE rt0.c4 END)), '-1668512947' FROM rt1 WHERE (((('')>>('')) IN ()));SELECT DISTINCT (- ('484789530')), ((rt1.c3) IS TRUE), ((((((rt0.c1)OR(rt0.c3)))OR(rt1.c5)))<((rt1.c5 IN ()))) FROM rt0, rt1; -- 1ms;
SELECT (~ (CAST(rt1.c4 AS BLOB))) FROM rt1, rt0 WHERE (json_extract(CASE '4wuK'  WHEN 0.6716612270172557 THEN 0.6297442730900158 END, '-797467266' COLLATE RTRIM, (x'' IN ()), ((NULL)=(x'')), CAST(x'' AS INTEGER), ((x'') NOTNULL))); -- 0ms;
SELECT ALL (((rt1.c5 IN ())) IS FALSE) FROM rt1, rt0; -- 0ms;
SELECT ((((((((((rt1.c3)OR(rt1.c2)))OR(rt1.c0)))OR(x'')))AND(rt1.c3))) IS TRUE) FROM rt0, rt1 WHERE (CHANGES()) GROUP BY CASE (((rt1.c5)) NOT BETWEEN ((rt1.c5)) AND ((rt0.c1)))  WHEN CAST(rt0.c0 AS NUMERIC) THEN NULL WHEN rt1.c4 THEN '0.5183806355507942' WHEN ((rt0.c0) BETWEEN (rt1.c5) AND (rt1.c3)) THEN ((((((((rt0.c4)OR(rt1.c4)))AND(rt1.c5)))OR(rt0.c3)))OR(rt1.c5)) ELSE ((NULL) ISNULL) END; -- 1ms;
SELECT ALL ((((rt0.c0) BETWEEN (rt0.c4) AND (rt1.c3))) NOT BETWEEN ((~ (rt1.c0))) AND (((rt1.c2) IS TRUE))) FROM rt0;SELECT ((rt0.c4)*(rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE ((((((('-1261297884')AND(1987793142)))AND(0.8162671749172539)))>=(((('-2125059665'))==(('1512270342')))))); -- 0ms;
SELECT ALL rt1.c3, '0i砩r', (((rt0.c2))>=((rt0.c3))) COLLATE NOCASE, TRIM(DISTINCT TRIM(DISTINCT rt1.c1, rt0.c1), x''), CAST((rt0.c2 IN ()) AS BLOB) FROM rt1 WHERE (((((~ (0.46839121524009464)), ((x'') NOTNULL), (('KWV|NJ\n') ISNULL), x'' COLLATE NOCASE, ((((0.5512286211443265)AND(x'')))OR('1010564957'))))>=(((+ (0Xffffffffa723326b)), ((',u|S悋_') BETWEEN (x'') AND (x'7f57')), (((('-1e500')OR(NULL)))AND(NULL)), CASE WHEN '1293637129' THEN '箕cc]' WHEN '-1383154445' THEN 5.19648533E8 WHEN '' THEN x'' ELSE NULL END, 0.42811584487916765 COLLATE BINARY)))) GROUP BY '<2' HAVING ((GROUP_CONCAT(NULL))/(((rt1.c3)<=(rt1.c4))));SELECT ALL ((0Xe89813) IS TRUE) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0)*(rt1.c3))) FROM rt1, rt0 WHERE (CAST(CASE -6.05922969E8  WHEN NULL THEN NULL WHEN NULL THEN 'r(^' WHEN 0.21025869273082642 THEN x'' END AS BLOB)); -- 0ms;
SELECT ALL rt0.c4 FROM rt0, rt1 WHERE (((+ (x'')) IN ())); -- 0ms;
SELECT DISTINCT CASE AVG(rt1.c1)  WHEN CASE rt1.c3  WHEN rt1.c0 THEN rt0.c4 WHEN rt1.c2 THEN rt1.c3 WHEN NULL THEN rt1.c4 ELSE '-1668512947' END THEN rt1.c1 END FROM rt1, rt0; -- 0ms;
SELECT ALL CASE WHEN (+ (rt0.c4)) THEN MIN(rt1.c1) WHEN (((rt0.c3)) BETWEEN ((rt1.c0)) AND ((rt0.c1))) THEN ((rt0.c1)+(rt1.c5)) WHEN ((0.7026161463963589) BETWEEN (rt0.c0) AND (rt1.c1)) THEN CASE rt0.c0  WHEN x'' THEN rt1.c0 END ELSE (rt0.c1 IN ()) END, (+ (CAST(rt1.c1 AS BLOB))), (NOT (((rt0.c3) NOT BETWEEN (rt1.c4) AND (rt1.c3)))) FROM rt1 LIMIT -1652493612 OFFSET 811202898;SELECT ALL ((((rt1.c1)OR(TOTAL_CHANGES())))AND((rt1.c1 IN (rt1.c5)))) FROM rt0;SELECT AVG('-2115126268') FILTER(WHERE ((CAST(0.0965742193690472 AS REAL)) BETWEEN (((rt1.c2) ISNULL)) AND (rt1.c2 COLLATE BINARY))) OVER () FROM rt0 WHERE (((((((0.6659204756716635)IS(NULL)))AND(((0.3882322488511232) ISNULL))))OR((~ (0X61b788dd)))));SELECT ALL rt1.c3 FROM rt1, rt0; -- 0ms;
SELECT DISTINCT rt1.c4 FROM rt1, rt0 WHERE (JULIANDAY(((NULL) BETWEEN (0.4798333757151878) AND (0.0338448659041779)), 0.45398626671362396 COLLATE BINARY, ((((0.34346697085730915)AND(-6.05922969E8)))OR(x'')))); -- 2ms;
SELECT ALL CASE WHEN ((((rt1.c4)AND(rt1.c1)))AND(rt1.c4)) THEN ((((rt1.c2)OR(rt1.c1)))AND(rt1.c4)) END FROM rt1, rt0; -- 0ms;
SELECT DISTINCT '1241454168' FROM rt0; -- 0ms;
SELECT ALL rt0.c2, (((((rt1.c0)%(rt0.c3))))>=(('1349868902'))), ROW_NUMBER() OVER () FROM rt0 LEFT OUTER JOIN rt1 ON ((NOT (rt1.c3)) IN ()) WHERE (((((((-1.490865557E9)GLOB(0.3950293553500023)))OR(0.5286334066097585 COLLATE RTRIM)))AND(((((((((NULL)OR('-1865020129')))OR('PV\nLn')))OR(0.7824510769263724)))OR('zg悋fw'))))) LIMIT 2017523750; -- 0ms;
SELECT ((((rt1.c3) ISNULL)) NOT BETWEEN (((rt1.c4) NOT BETWEEN (rt1.c3) AND (rt0.c0))) AND ((+ (rt1.c4)))) FROM rt1;SELECT ALL ((CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c2 WHEN rt1.c5 THEN rt1.c4 ELSE x'f619' END) NOT BETWEEN (COUNT(rt1.c3)) AND (rt1.c4)), (((((((((((rt0.c0))>=((rt1.c1))))OR((((rt0.c0))<>((rt0.c4))))))AND(1431065433 COLLATE BINARY)))AND(((rt0.c1)<>(rt0.c3)))))AND(((((rt1.c4)AND(rt0.c0)))OR('2f')))), NULL FROM rt0, rt1 WHERE ((((~ ('㡪G01')))>>(((0.29302550505740765)==(-3.28680109E8))))) LIMIT -756882748 OFFSET 971239455; -- 0ms;
SELECT ALL GROUP_CONCAT((rt1.c3 IN (rt1.c1))) FROM rt1, rt0 LIMIT -1902509534; -- 0ms;
SELECT ALL ((((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3)))))<((((((rt1.c3)OR(rt1.c5)))AND(rt1.c2))))), CAST(CAST(rt1.c0 AS INTEGER) AS INTEGER), MIN((+ (rt1.c1)), json_object(rt1.c2, rt0.c0, rt1.c5, rt0.c2)) FROM rt1;SELECT ALL (((rt1.c2)) BETWEEN ((((rt1.c3) IS TRUE))) AND ((COUNT(rt1.c2)))) FROM rt1 WHERE (((x'') NOT BETWEEN (((NULL)IS NOT(x'7190'))) AND (((0.09561857928409079) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (NULL) AND (rt1.c1)))*(CASE WHEN rt1.c4 THEN rt1.c1 ELSE rt1.c4 END)) FROM rt1, rt0 WHERE ((~ (CAST(0.1451068091650647 AS INTEGER)))); -- 0ms;
SELECT ALL (((rt0.c3)) BETWEEN (((- (x'')))) AND (((((rt1.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FROM rt0;SELECT DISTINCT RANK() OVER () FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (NULL IN ((rt1.c3 IN (rt0.c0)), SQLITE_VERSION())) FROM rt0, rt1 WHERE (CASE WHEN (NULL IN ()) THEN (+ (NULL)) WHEN CAST(x'bd55' AS TEXT) THEN CASE WHEN x'' THEN NULL WHEN NULL THEN 0xffffffff982758a6 WHEN -5.23696626E8 THEN NULL WHEN x'ea81' THEN '' WHEN 0.10407618829428422 THEN x'' END WHEN CAST('''ː㛦sᴱ?_' AS NUMERIC) THEN ((((((((NULL)AND(NULL)))OR(0X75d0cee6)))OR('1033870530')))OR('1991679805')) ELSE CAST(NULL AS BLOB) END) LIMIT -61795771; -- 0ms;
SELECT DISTINCT (rt1.c3 IN (rt0.c3)) COLLATE NOCASE, ((rt1.c1) NOTNULL), SUBSTR(((rt1.c2)>=(rt0.c2)), TRIM(rt0.c0, rt1.c3)), CAST(rt1.c0 AS BLOB) COLLATE NOCASE, (((NULL IN ()))GLOB(IFNULL(rt0.c1, rt0.c4))) FROM rt1 WHERE (CASE '651459821' COLLATE NOCASE  WHEN ('-1356880442' IN (0.2684187708612905)) THEN (((('0i砩R')AND(x'')))OR(NULL)) ELSE CASE 0.43793050437331027  WHEN -884321675 THEN -1236430587 ELSE 1522173297 END END);SELECT ((rt0.c3 COLLATE NOCASE)<((NULL IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0)IS NOT(rt0.c1))) OVER ( ORDER BY (((rt0.c1)) NOT BETWEEN ((json_array_length(rt1.c3, rt1.c5))) AND ((-487073713)))  NULLS LAST) FROM rt0;SELECT DISTINCT (((('-1820364670')*(rt0.c3))) BETWEEN (MAX(rt0.c3)) AND (((((((((((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c3)))AND(rt1.c3)))AND(rt0.c3)))AND(rt1.c4)))AND(rt0.c2)))OR(rt0.c4)))) FROM rt0 WHERE ((('1533187718')%(x'88d4')) COLLATE BINARY);SELECT ALL CUME_DIST() OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt1 ORDER BY rt0.c1  NULLS LAST, ((CAST(rt1.c5 AS REAL)) IS FALSE)  NULLS LAST;SELECT DISTINCT (((((((((((rt1.c2, rt0.c0, rt0.c1)) BETWEEN ((rt1.c4, NULL, rt1.c4)) AND ((rt0.c3, rt0.c3, x''))))AND((- (rt1.c2)))))AND((NOT (rt0.c2)))))OR(((rt0.c1) IS FALSE))))AND(((((rt1.c1)AND(rt1.c1)))AND(rt1.c1)))) FROM rt1, rt0 WHERE (((0x3e8d3258) BETWEEN (NULL) AND ('t-F2''yn')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT MAX(CASE WHEN rt0.c2 THEN rt0.c2 END) FROM rt1, rt0 WHERE (((((x'') NOT BETWEEN ('-32049008') AND (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE RTRIM)GLOB(HEX(rt1.c0))) FROM rt1 WHERE (TRIM(((x'') IS TRUE), ((((-2.32391641E8)OR(NULL)))AND('^Sd1r')))); -- 0ms;
SELECT DISTINCT TOTAL((NOT (rt1.c5))) FROM rt1 WHERE (' rGb㙰' COLLATE BINARY COLLATE NOCASE) GROUP BY rt0.c4 HAVING ((((rt1.c5) NOTNULL))&(((((rt1.c0)AND(rt1.c1)))AND(rt0.c1))));SELECT DISTINCT (((- (rt0.c1))) ISNULL) FROM rt1, rt0 WHERE (CASE WHEN (0X1a40a19f IN ()) THEN (NULL IN ()) END) LIMIT 366754194 OFFSET -252886138; -- 0ms;
SELECT (((NOT (rt0.c0))) NOTNULL) FROM rt0, rt1 GROUP BY (+ ((+ (rt0.c0)))), ((((rt1.c3 COLLATE BINARY)AND('')))OR(CAST(rt1.c5 AS BLOB))), rt1.c1, ((CASE WHEN rt1.c4 THEN rt0.c0 ELSE rt1.c0 END)<(rt1.c1 COLLATE BINARY)), TYPEOF(DISTINCT ((rt1.c1)<=(rt0.c2))) HAVING (((+ (rt1.c5))) NOT BETWEEN ((+ (rt0.c3))) AND (((rt1.c4)/(rt1.c4)))); -- 0ms;
SELECT ALL (((NOT (rt0.c1)))=(rt0.c4 COLLATE NOCASE)) FROM rt1 ORDER BY rt1.c2 ASC;SELECT DISTINCT STRFTIME(((rt1.c3) NOTNULL), CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt1.c1 END, LTRIM(rt1.c0, rt0.c2)) FROM rt1;SELECT ALL (((rt1.c2)IS(rt1.c3)) IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT ((1996671394)<('')) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 IN ()) IN ()) FROM rt1; -- 0ms;
SELECT ('890774856' IN ()) FROM rt1, rt0 WHERE (((NULL) NOT BETWEEN (CASE x''  WHEN 38379054 THEN '-1953723801' ELSE 0.5362493359184096 END) AND (((1.506502603E9)OR('-504528865'))))); -- 0ms;
SELECT ALL rt0.c0 FROM rt1 WHERE (0.795057922458182);SELECT DISTINCT (((((rt0.c0))=((rt1.c2))))AND((+ (rt0.c4)))) FROM rt0, rt1 WHERE (TRIM(CASE WHEN NULL THEN NULL ELSE NULL END, TRIM(NULL))); -- 0ms;
SELECT DISTINCT ((x'7524' COLLATE BINARY)IS NOT(rt0.c1)), (((((rt0.c1)AND(rt1.c2)))AND(rt1.c1)) IN ()), COUNT(*) FILTER(WHERE (((rt0.c1 IN (rt0.c3)))==(LTRIM(rt1.c2)))) OVER () FROM rt0, rt1 WHERE (((((('m-')) BETWEEN (('')) AND ((NULL)))) NOT BETWEEN (LOWER(DISTINCT x'')) AND (((x'')OR(x'dda2'))))); -- 2ms;
SELECT DISTINCT ((((rt0.c4) NOTNULL)) NOT NULL) FROM rt0 WHERE (((TYPEOF(x'aeea'))>(CASE WHEN '320534390' THEN 'r2' ELSE '972750679' END))); -- 0ms;
SELECT DISTINCT CASE WHEN LTRIM(rt1.c0, rt1.c2) THEN ((rt1.c2) IS TRUE) ELSE ((x'')LIKE(rt0.c0)) END, CAST(TIME(rt1.c1, rt0.c3, rt0.c2) AS INTEGER), (- (rt1.c4)) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt1.c1) BETWEEN (rt1.c5) AND (rt0.c3))) OVER (), (0.6077772148849788 IN (rt1.c3)), ('960180762' COLLATE RTRIM IN ()) FROM rt1, rt0 WHERE (((((x'') ISNULL))-(CASE NULL  WHEN x'' THEN NULL WHEN x'aac4' THEN 0.3232678974938984 WHEN 1.221260621E9 THEN NULL ELSE 0.6214448445650785 END))); -- 0ms;
SELECT DISTINCT x'3be4' FROM rt0, rt1 WHERE (((((((((((NULL) NOT BETWEEN ('0.9288903785268364') AND ('320534390')))OR(('^4_.9' IN (0.5217571706477186, NULL)))))AND(UPPER(0.4081648102926435))))AND((('87')>>('>36Trt1g')))))AND((((('eux,')AND('')))AND('eP鞀0⾠'))))); -- 1ms;
SELECT DISTINCT rt1.c5 FROM rt0;SELECT ((rt1.c2)IS NOT(((rt1.c1) NOT NULL))) FROM rt0 WHERE ((((x'', x'd681', 0Xffffffffc891b45f)) BETWEEN (((((0.5641922754052306))>=(('C뚕i%'))), 0.6734493896985309, ((0xffffffffaf4f6bbb)GLOB(x'')))) AND ((((NULL)AND(NULL)), ((0.740367335112097)<>(NULL)), ((((((((NULL)AND('0.6246812449821754')))OR('V*w')))AND('559409469')))OR(409637727))))));SELECT ALL CAST(((rt1.c3) NOT NULL) AS TEXT) FROM rt0;SELECT (((~ ('-1485440544')))<>(((((((((rt0.c3)OR(rt1.c5)))OR('-649766927')))OR(rt0.c2)))AND(rt0.c4)))) FROM rt0 FULL OUTER JOIN rt1 ON CASE CASE WHEN rt1.c2 THEN rt0.c4 WHEN rt1.c4 THEN rt0.c1 WHEN rt1.c5 THEN rt0.c4 ELSE rt0.c1 END  WHEN ((rt1.c1)==(rt0.c2)) THEN CAST(rt1.c3 AS REAL) WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt1.c3 WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt1.c5 THEN rt1.c3 WHEN rt0.c4 THEN rt1.c0 ELSE rt0.c4 END THEN ((rt1.c4) NOT BETWEEN (rt1.c5) AND (rt0.c4)) WHEN CASE rt1.c5  WHEN NULL THEN rt1.c4 WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c3 THEN rt0.c0 END THEN (((rt1.c2)) NOT BETWEEN ((rt1.c4)) AND ((rt1.c0))) END WHERE (((((((-8.86702902E8)OR('q\r')))OR('819185544'))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((((highlight(rt1.c1, rt1.c0, rt0.c0, 0.9557600991208842))OR(rt1.c5 COLLATE BINARY)))OR(COUNT(rt1.c3))))OR(CASE rt1.c2  WHEN rt1.c3 THEN rt0.c2 ELSE rt1.c5 END)))OR(((rt1.c3)-(rt1.c4)))) FROM rt0;SELECT ALL (((rt0.c3 IN (rt0.c1, rt0.c1))) NOT BETWEEN (((rt0.c0) BETWEEN (rt1.c4) AND (rt0.c3))) AND ((rt1.c0 IN ()))) FROM rt1, rt0 WHERE (CAST(((0.31964640475634687) ISNULL) AS INTEGER)); -- 0ms;
SELECT ALL CAST(((((rt1.c2)AND(rt0.c4)))AND(rt0.c2)) AS INTEGER), ((CAST(rt1.c5 AS REAL)) NOTNULL), (+ (((rt1.c5) NOT BETWEEN (rt0.c4) AND (rt1.c4)))) FROM rt1;SELECT DISTINCT rt1.c2 FROM rt1, rt0 WHERE (CASE WHEN ((']鸗') NOT BETWEEN ('-839413138') AND (-1187244512)) THEN ((NULL) NOT BETWEEN (0Xffffffff90f77b35) AND (0.12833205661046632)) ELSE CAST(NULL AS INTEGER) END) LIMIT 360396153 OFFSET 1020221359; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt0 LIMIT -1279433290; -- 0ms;
SELECT DISTINCT MAX(((rt1.c2)AND(rt0.c4))), LEAD(((((rt1.c1)<<(rt1.c3))) NOT BETWEEN (rt1.c5 COLLATE RTRIM) AND (NULLIF(DISTINCT rt1.c4, rt1.c4))), ((((((rt1.c2)AND(rt1.c2)))AND(rt1.c2)))*(x'')), UPPER(rt1.c0 COLLATE NOCASE)) OVER (), CAST((rt1.c1 IN ()) AS NUMERIC) FROM rt1 GROUP BY (PRINTF(rt0.c3) IN (((rt1.c0)/(rt0.c1)))), TRIM(0.5180234001441402, NULL), (- (((rt1.c5) IS TRUE)));SELECT (((- (rt0.c1)))/(((rt1.c3)>=(rt0.c1)))) FROM rt1;SELECT MAX(x''), (((NOT (0.9186397723128342)))<(rt1.c4)), ((0.3546873539732577 COLLATE RTRIM)<=(((rt0.c2) IS TRUE))) FROM rt0;SELECT DISTINCT ((((((rt0.c2)==(rt1.c1)))OR(NULL)))AND(CAST(rt0.c4 AS INTEGER))) FROM rt1, rt0; -- 0ms;
SELECT ((((rt1.c5)AND(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt1.c3)))))OR(CASE '655830485'  WHEN rt0.c2 THEN rt0.c1 ELSE 0.7905643068678564 END)), CAST('i⒵\(L' COLLATE BINARY AS INTEGER), ((((rt1.c0)<(rt0.c3)))-(((rt1.c5) NOT NULL))) FROM rt0 GROUP BY ((rt1.c5)OR(rt1.c2)) COLLATE RTRIM, ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c1 THEN rt1.c4 WHEN rt0.c3 THEN rt1.c0 ELSE rt0.c3 END) BETWEEN (((rt1.c5) IS FALSE)) AND (CASE rt0.c2  WHEN '-232391641' THEN rt0.c3 WHEN rt1.c5 THEN rt0.c3 WHEN rt0.c2 THEN rt1.c1 ELSE rt1.c3 END)), CASE ((((rt1.c1)AND(rt1.c4)))OR(rt1.c5))  WHEN 6.51459821E8 THEN ((rt1.c3)|(rt0.c2)) END, x'', CAST((((rt1.c1))<((rt1.c0))) AS INTEGER) HAVING ((((((rt0.c1)==(rt0.c3)))AND(((rt0.c3)>=(rt0.c2)))))OR(rt0.c2 COLLATE RTRIM));SELECT DISTINCT ((GROUP_CONCAT(rt1.c5)) ISNULL) FROM rt1, rt0 WHERE (CAST('1639418077' AS INTEGER)) ORDER BY ((((((((rt1.c4)OR(rt1.c5)))OR(rt0.c1)))OR(CAST(rt1.c5 AS TEXT))))AND(CAST(rt1.c5 AS INTEGER)))  NULLS FIRST, (((((rt1.c0)AND(rt1.c3)))AND('')) IN (rt1.c3, ((rt1.c2)<<(rt1.c4)))) ASC; -- 0ms;
SELECT DISTINCT UPPER(TRIM(DISTINCT rt1.c5)), ((((GROUP_CONCAT(x''))OR('-1873616564' COLLATE BINARY)))AND(((rt1.c2) NOT NULL))), ((CAST(rt1.c3 AS NUMERIC)) BETWEEN (CASE WHEN rt1.c2 THEN rt0.c4 END) AND (rt1.c4)), ((((rt0.c4) ISNULL)) BETWEEN ((~ (rt0.c0))) AND (COUNT(rt0.c4))), ((((((rt0.c2)OR(rt1.c5)))OR(''))) NOTNULL) FROM rt1, rt0; -- 0ms;
SELECT (((((rt0.c3)AND(rt1.c3)))AND(rt0.c1)) IN ()) FROM rt1 WHERE ((-9.74742029E8 IN ())) ORDER BY (((CASE rt1.c5  WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c1 THEN rt0.c4 WHEN rt1.c3 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c3 WHEN rt1.c5 THEN rt1.c0 END))>=((((rt1.c3) IS FALSE)))) DESC  NULLS FIRST, (((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c0 AS BLOB)) AND (((NULL) BETWEEN (rt1.c3) AND (rt0.c3))))  NULLS FIRST;SELECT DISTINCT (((((rt1.c1)OR(rt1.c3)))AND(NULL)) IN ()) FROM rt1 WHERE ((((~ ('CW')))OR(((((NULL)OR(0xffffffff9c92a0e7)))AND(0.5344974722060795))))) ORDER BY ((CAST(rt0.c3 AS TEXT)) BETWEEN (rt1.c1) AND (CASE ''  WHEN rt1.c4 THEN rt1.c1 END)) ASC  NULLS FIRST;SELECT ALL ((CASE WHEN '-2098665023' THEN rt1.c4 ELSE rt1.c3 END) NOT NULL) FROM rt1; -- 0ms;
SELECT ((((((rt0.c1) NOTNULL))AND(((((((((((((rt0.c3)OR(rt0.c0)))AND(rt1.c5)))OR(rt0.c1)))AND(rt0.c2)))OR(rt1.c5)))AND(rt1.c2)))))OR(SUM(rt1.c2))) FROM rt1, rt0 WHERE (CASE (- (0.5791489432802636))  WHEN TRIM(DISTINCT '') THEN ((x'bab6')<(5.19648533E8)) END); -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(rt0.c4)))<((((((rt1.c0)AND(rt0.c0)))AND(rt0.c3))))) FROM rt1 GROUP BY CASE ((rt1.c0)OR(0.463532565745262))  WHEN rt1.c4 THEN (+ (rt1.c4)) END HAVING (rt0.c4 COLLATE NOCASE IN ((NOT (rt1.c1))));SELECT ALL ((((((((((((rt1.c4)AND(rt1.c3)))AND(rt1.c4)))AND(CAST(rt1.c3 AS NUMERIC))))AND(((rt0.c0) IS FALSE))))OR(SUBSTR(x'', rt1.c1))))OR((rt0.c4 IN ()))), IFNULL(DISTINCT UNLIKELY('GqLp6(j+k'), ((rt0.c4)%(rt1.c0))), ((rt1.c5 COLLATE NOCASE)<=(((rt1.c2) NOT NULL))) FROM rt0;