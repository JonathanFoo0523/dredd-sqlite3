-- Time: 2024/06/07 06:37:22
-- Database: database28
-- Database version: 3.40.0
-- seed value: 1279729028
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree_i32(c0, c1, c2, +c3 INTEGER ); -- 0ms;
ANALYZE sqlite_master; -- 1ms;
UPDATE OR ABORT vt0 SET (c0)=('157918832'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('-322226349'); -- 1ms;
INSERT OR FAIL INTO vt0(c0) VALUES (157918832); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c0, c2) VALUES (0.4456239614614623, -3.22226349E8, 0.8298702688316615); -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt1', 'vt0', ' unordered'); -- 0ms;
REINDEX RTRIM; -- 0ms;
INSERT OR FAIL INTO rt1(c2, c0) VALUES ('157918832', NULL); -- 7ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA application_id = -6196710594160768964; -- 1ms;
PRAGMA temp.application_id = -4676064701941964704; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c3, c2) VALUES (0.6606431721117559, NULL, NULL); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (NULL); -- 0ms;
ANALYZE; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.application_id = -7658788365948719027; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(',瞡WU9,B꙰', NULL); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
DROP TABLE rt1; -- 1ms;
PRAGMA main.default_cache_size = 823566991; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt1(c2) VALUES (x'40e5'); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0x718b77a1 WHERE NULL; -- 0ms;
PRAGMA temp.secure_delete = false; -- 1ms;
INSERT OR ROLLBACK INTO vt0 VALUES ('823566991'), (x'c794'), (0.37812895046585426), (x''), (x''); -- 0ms;
UPDATE OR IGNORE rt1 SET c1=x''; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (0.9440507976349913); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES ('E>藹{!Wad'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
COMMIT; -- 1ms;
REINDEX; -- 0ms;
INSERT OR ABORT INTO rt1(c1, c0, c3) VALUES (NULL, 0.04774003141144789, x'6fdf'); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (1.904965537E9), ('._'), (0.21873208412023726), (530220537); -- 0ms;
INSERT OR FAIL INTO rt1(c1, c3) VALUES (0.696741170246362, x''); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE rt1 SET (c0)=(0.8204919152719289) WHERE ((((rt1.c1)IS NOT(rt1.c2))) IS FALSE); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x''; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES ('0'); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 0ms;
UPDATE rt1 SET c1='^' WHERE rt1.c1 COLLATE RTRIM COLLATE BINARY COLLATE BINARY; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
INSERT OR ABORT INTO rt1 VALUES (NULL, 0.44159108422880655, 'Hr', x''); -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (x''), (NULL), (NULL); -- 0ms;
PRAGMA optimize; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR REPLACE rt1 SET (c0)=(NULL); -- 0ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (x''); -- 0ms;
INSERT OR ABORT INTO vt0(c0) VALUES ('D'), ('-866572872'), (0Xffffffff8f95fb04), (0.5277259797872575), (1744045187); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '8656'); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c1, c2) VALUES (0.37812895046585426, NULL, x''), (0.8298702688316615, x'8961', NULL), (NULL, '0.04774003141144789', 0.04774003141144789); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('vt0', 'vt0', ''); -- 0ms;
INSERT OR REPLACE INTO rt1(c2, c3, c0) VALUES ('ﬄ&RxT(', 1904965537, '0.8298702688316615'), ('2084955467', NULL, 0.6484354295319074), (0.2750834568739654, '46513969', NULL); -- 1ms;
REINDEX  rt1; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR IGNORE INTO rt1(c0) VALUES (NULL), ('J~qGt'), (''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES ('1318851264'); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES (NULL, 0.696741170246362, x''), (0.754821376294961, x'', NULL), (NULL, x'', 'DH?g'); -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES (0.7225041048756029); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''), ('2017317131'), (0Xffffffffb658dc95), (0.04774003141144789), ('0.8298702688316615'); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c3) VALUES (x'', 0.9630944726870053); -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA temp.defer_foreign_keys; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT x'' FROM vt0 LIMIT 2017317131 OFFSET 530220537; -- 0ms;
SELECT ALL COUNT(CASE WHEN rt0.c2 THEN rt1.c2 END) FROM rt1, vt0, rt0 WHERE (((CASE WHEN 0.2350146325114736 THEN 'OT}8+' END) NOTNULL)); -- 1ms;
SELECT DISTINCT ((MIN(rt1.c3, rt1.c1, rt1.c3, 0.6006810940607034)) IS TRUE), CAST((((vt0.c0)) BETWEEN ((rt1.c2)) AND ((rt0.c2))) AS BLOB), (((((rt1.c0)OR(rt0.c1)))AND(rt0.c2)) IN ()) FROM rt0, rt1 WHERE (TRIM(CASE WHEN 0.2750834568739654 THEN 0.696741170246362 WHEN 0.9440507976349913 THEN -1.235690347E9 WHEN x'' THEN x'' ELSE x'' END, (0X4ebf05de IN (x'')))) LIMIT 1543794292 OFFSET -205974291;SELECT DISTINCT CASE (rt0.c2 IN (rt1.c2))  WHEN ABS(rt0.c2) THEN CAST('' AS INTEGER) END FROM rt1, rt0 ORDER BY INSTR(((vt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)), rt0.c1 COLLATE BINARY);SELECT ALL (((((rt1.c1)>(rt1.c1)), ((vt0.c0) BETWEEN (rt0.c1) AND (vt0.c0)), CASE WHEN rt1.c2 THEN rt1.c2 END))>=(((((rt1.c2)) BETWEEN ((rt0.c2)) AND ((NULL))), vt0.c0 COLLATE NOCASE, (~ (rt0.c1))))) FROM vt0, rt1 ORDER BY CAST(((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c2)) AS INTEGER) ASC  NULLS LAST;SELECT DISTINCT NULL FROM rt0, vt0, rt1 WHERE ((((+ ('1574731826'))) NOT BETWEEN (CAST('-1980181193' AS REAL)) AND (((x'dc88') IS TRUE)))) UNION ALL SELECT DISTINCT (+ ((rt1.c0 IN ()))) FROM rt1, rt0 GROUP BY ((((((rt1.c3)-(rt0.c2)))AND(((rt0.c2)<<(rt0.c0)))))AND((rt1.c3 IN (rt1.c0)))); -- 0ms;
SELECT DISTINCT (vt0.c0 IN ((rt1.c3 IN (rt1.c1, rt0.c0)), rt1.c1 COLLATE RTRIM)), ((((rt0.c2)AND(vt0.c0)))OR(vt0.c0)) COLLATE NOCASE, (NOT (((rt1.c3) BETWEEN (rt1.c2) AND (rt0.c0)))) FROM rt0, vt0, rt1 WHERE ((('1543794292')!=(CASE NULL  WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL vt0.c0 FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT MAX(((rt0.c1)<=(rt1.c1))), PERCENT_RANK() OVER (), CASE WHEN UPPER(vt0.c0) THEN ((((rt1.c1)OR(rt0.c1)))OR(rt1.c3)) ELSE rt1.c3 COLLATE NOCASE END FROM rt0, vt0 WHERE ((((((((((((('*.zEc?藹l|')AND((NOT ('2084955467')))))OR(x'' COLLATE NOCASE)))OR(((((((((((((NULL)AND(x'4700')))AND('2017317131')))AND('0.37812895046585426')))OR(NULL)))OR(0.24121388337616956)))AND(x'b6dd0673')))))AND('^')))OR(SQLITE_COMPILEOPTION_USED(NULL))))OR(LIKELY(DISTINCT x'594f'))));SELECT (((rt0.c0 IN ())) NOT BETWEEN ((rt0.c1 IN (rt1.c1))) AND (MIN(rt0.c0))) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER (), CAST(((rt0.c1)<=('')) AS INTEGER), CASE (NOT (rt1.c3))  WHEN MAX(rt0.c2) THEN ((((vt0.c0)OR(0.9327726141338788)))AND(rt1.c1)) ELSE LIKELY(vt0.c0) END FROM vt0, rt0;SELECT DISTINCT TOTAL(((vt0.c0) NOT BETWEEN (rt1.c1) AND (rt0.c0))) OVER () FROM rt1, rt0 WHERE (CASE WHEN 0.7687909782245465 COLLATE RTRIM THEN (- (0.549437576828438)) ELSE ((0.8747980732977456)IS('._')) END);SELECT DISTINCT (((vt0.c0 IN (rt1.c1))) ISNULL) FROM rt1;SELECT ALL ((TYPEOF(rt1.c3)) IS FALSE) FROM rt1 WHERE ((~ (((((((((x'')OR(x'')))AND(NULL)))OR('zua')))AND(NULL))))); -- 0ms;
SELECT DISTINCT MAX((rt0.c0 IN ())) FROM rt1; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt1, vt0 WHERE (0.3666891246368915);SELECT DISTINCT (CAST(rt1.c2 AS REAL) IN ()) FROM rt1, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT x'0770', ((MAX(rt1.c3))&(((rt0.c2)!=(rt1.c0)))), ((rt0.c0 COLLATE BINARY)IS NOT(COUNT(*))) FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT rt1.c3 FROM rt0 WHERE (((((- (0.17362436411363602)), '	.M>kDp3v', 'D' COLLATE BINARY))<=((json_valid(-2.05974291E8), CAST('-1023016861' AS REAL), (('-701526587') NOT BETWEEN (NULL) AND ('QC*0N5PM')))))) GROUP BY rt1.c0;SELECT DISTINCT NULL FROM vt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c0, rt0.c2, COUNT(SUM(((rt1.c1)>=(rt0.c0)))) FROM rt1, rt0, vt0 WHERE (((NULL)*(((NULL)==(0.6206554493961202)))));SELECT DISTINCT CASE WHEN ((vt0.c0) BETWEEN (rt1.c0) AND (rt0.c0)) THEN ((x'4549')>=(rt0.c0)) ELSE vt0.c0 COLLATE NOCASE END, IFNULL(((rt0.c1)*(rt0.c1)), ((rt1.c1) ISNULL)), ((0.5745387136012106) ISNULL) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL ((((CAST(rt1.c1 AS NUMERIC))AND(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt0.c2)))))OR(rt0.c1 COLLATE RTRIM)) FROM rt1 WHERE (UNLIKELY((((-460817092))>=((0X783dd10b)))));SELECT ((((rt1.c0) ISNULL)) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((((vt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c2))))) FROM rt0;SELECT ((((rt0.c2)%('()')))OR((((rt0.c2))=((vt0.c0))))), ((rt1.c1) ISNULL) COLLATE RTRIM, ((TRIM(DISTINCT rt1.c1, vt0.c0)) NOT NULL) FROM rt0;SELECT DISTINCT (+ (MAX(vt0.c0))), TOTAL(((rt0.c2) IS FALSE)) OVER (), CAST(rt0.c1 AS TEXT) COLLATE RTRIM FROM rt1;SELECT DISTINCT CASE WHEN ((rt1.c3) IS TRUE) THEN ((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) END FROM rt0, vt0, rt1 WHERE ((~ (CASE 'ot}8+'  WHEN 0.1661287678107951 THEN '' WHEN 'J~qG0' THEN x'' WHEN '' THEN 0.6872532462473848 WHEN 'ꊏ5' THEN NULL WHEN 0xffffffffd50ac817 THEN NULL END))); -- 0ms;
SELECT ((NULL)==(rt1.c3)) COLLATE BINARY FROM rt0 WHERE ((((-8.66572872E8) BETWEEN (x'') AND (1.744045187E9)) IN ())) LIMIT -460817092;SELECT ALL '', '1904965537', (~ (CASE WHEN rt1.c2 THEN rt0.c0 ELSE rt1.c2 END)) FROM rt0, rt1 WHERE (((LIKELY(x''))LIKE(((NULL)||('-1235690347'))))); -- 0ms;
SELECT ALL rt1.c1 FROM rt0, rt1 WHERE ((0.006445663565794568 IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt1.c2)>(rt0.c0))) NOT NULL) FROM vt0, rt0 WHERE ((((0Xffffffff85afcf63) ISNULL) IN ()));SELECT ALL ((LTRIM('1321141726'))<<('-205974291')) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT (~ ('931879940')) FROM rt1, vt0 NOT INDEXED WHERE ((CASE WHEN x'' THEN '1744045187' ELSE 1830512589 END IN ((((((((('1904965537')OR('453505436')))OR('-1885996284')))OR(NULL)))AND(0.48013951465771454))))) LIMIT 1561429459; -- 0ms;
SELECT UPPER(DISTINCT CAST(rt1.c0 AS NUMERIC)) FROM rt1; -- 0ms;
SELECT ALL ((((('-322226349')) NOT BETWEEN ((rt1.c0)) AND ((rt1.c1))))LIKE(((rt0.c1)/(vt0.c0)))), (((((rt0.c2, rt0.c1, rt0.c0, NULL, x''))=((rt1.c3, rt0.c1, rt1.c3, rt0.c0, rt1.c3))))IS NOT((NOT (rt1.c2)))), (((('-1953459409')AND((+ (rt1.c2)))))OR('-624072562')) FROM rt1, rt0, vt0 WHERE (((((((((('' IN ()))AND(0x6d1b67cd)))AND(CASE WHEN 0.7251833354376449 THEN 0X15fbfd73 ELSE x'' END)))AND(HEX(x'b4558ce0'))))AND(((x'') ISNULL)))); -- 0ms;
SELECT ALL ((((((((((((rt1.c1)AND(((rt0.c2)=(rt0.c0)))))OR(CASE rt1.c3  WHEN rt0.c2 THEN rt0.c0 ELSE rt1.c0 END)))AND(rt1.c3 COLLATE BINARY)))AND(((rt1.c2) IS TRUE))))OR(LOWER(rt0.c2))))AND((+ (vt0.c0)))), (rt1.c2 IN ()) COLLATE RTRIM, ((((rt1.c0) IS TRUE))IS NOT((- (rt1.c1)))) FROM vt0, rt0 WHERE (((NULL) ISNULL));SELECT ((SUM(vt0.c0))GLOB((+ (rt1.c0)))) FROM rt0;SELECT DISTINCT CAST(GROUP_CONCAT(rt1.c2) AS REAL) FROM rt1, vt0, rt0 WHERE ((+ ((('-1412619965') IS FALSE)))) LIMIT -1051339832; -- 0ms;
SELECT QUOTE(((rt1.c3)GLOB(vt0.c0))) FROM vt0, rt1 WHERE (((((((x'1508')LIKE('629230661')))AND(((0.4456239614614623)*(x'')))))OR((('GE')-('Y'))))); -- 0ms;
SELECT ALL x'3532' COLLATE BINARY, (- (MIN(rt1.c2))), CAST((rt0.c1 IN ()) AS INTEGER) FROM vt0, rt0 WHERE ((((0.3672042047863736)) NOT BETWEEN ((((NULL)&('cmIG,')))) AND ((((NULL) IS FALSE)))));SELECT SQLITE_SOURCE_ID(), ((((((rt0.c0)OR(rt1.c2)))AND(rt0.c0))) ISNULL), DATETIME(((0.9352608158943281)<=(rt1.c0)), CAST('h''' AS BLOB), vt0.c0 COLLATE NOCASE) FROM rt0, rt1, vt0 GROUP BY (((rt0.c0)&(rt0.c2)) IN (CASE WHEN rt1.c2 THEN rt1.c2 ELSE rt1.c1 END)), ((((LIKELIHOOD(DISTINCT rt0.c2, 0.17421268329092776))AND(CAST(rt0.c2 AS BLOB))))OR(((vt0.c0) NOT BETWEEN (rt0.c0) AND (rt1.c2)))), rt1.c0 HAVING (NOT (rt1.c2 COLLATE NOCASE)); -- 2ms;
SELECT ((CAST(rt0.c2 AS BLOB))>>((vt0.c0 IN ()))) FROM rt0, vt0, rt1 WHERE (CAST((('')AND(x'3db8')) AS TEXT)); -- 0ms;
SELECT DISTINCT (((CASE WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c3 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c2 ELSE rt1.c2 END))<=((((rt1.c1)||(rt1.c2))))) FROM vt0 WHERE (((('-2143569312')<(x'84ff')) IN ()));SELECT ALL rt1.c0 FROM vt0, rt0;SELECT ALL CAST(((vt0.c0)IS(-1023016861)) AS INTEGER), COUNT(CAST(rt1.c1 AS BLOB)) OVER (), (((((rt1.c2 IN ()))AND(((((0.7687909782245465)AND(rt1.c2)))OR(rt1.c1)))))AND(CAST(rt1.c2 AS REAL))) FROM rt1, rt0 WHERE (((((0.4764535101605968) IS TRUE))/(((NULL)AND('328641217')))));SELECT DISTINCT (((rt0.c2)|(rt1.c3)) IN ()) FROM rt1 WHERE (((('-1098511786' IN (']wW')))>>(CASE '6	'  WHEN x'e1ec' THEN 0.6206554493961202 WHEN 0.7273176328644307 THEN -1.235690347E9 WHEN -1486963778 THEN '59735875' ELSE 0x1dfcdc32 END))); -- 0ms;
SELECT DISTINCT ((CASE rt1.c1  WHEN rt0.c2 THEN rt1.c2 END)>(rt1.c3 COLLATE NOCASE)), CAST(NULL AS REAL) COLLATE BINARY, ((CAST(rt1.c0 AS REAL))IS(('' IN ()))) FROM rt1, vt0, rt0 ORDER BY rt1.c0 ASC; -- 1ms;
SELECT DISTINCT AVG(((((rt0.c2)OR(rt0.c1)))OR(vt0.c0))) FROM vt0, rt0, rt1; -- 1ms;
SELECT DISTINCT (NOT (vt0.c0)) FROM vt0, rt0 WHERE ((((((x'18b9'))>=((x''))))*(x'3e59d7cf'))); -- 0ms;
SELECT ((rt1.c1) NOTNULL) COLLATE RTRIM, ((((((rt1.c2)) BETWEEN (('1949322160')) AND ((rt0.c2))), (NOT (rt0.c0)), ((((rt1.c3)AND(1.904965537E9)))AND(rt1.c2))))==((rt1.c3, ((rt1.c0)<<(vt0.c0)), -924677753))), CASE (NOT (rt0.c0))  WHEN (rt1.c1 IN ()) THEN ((vt0.c0) NOT NULL) ELSE ((((rt1.c2)OR(x'fab9')))OR(rt0.c1)) END, (((~ (rt0.c1))) NOT BETWEEN (rt1.c0) AND ((- (rt1.c2)))), rt0.c1 FROM vt0, rt0, rt1; -- 0ms;
SELECT rt0.c1 FROM rt0, rt1 WHERE (((CASE WHEN '瞅6v!' THEN 0.44159108422880655 END)OR(x'cd70'))); -- 0ms;
SELECT DISTINCT (- (CASE rt0.c0  WHEN NULL THEN rt1.c3 END)) FROM rt1 WHERE (((CAST(0.22557913159953813 AS TEXT))<=((- ('0.22557913159953813')))));SELECT DISTINCT x'', (((((rt0.c0)|(rt0.c0))))<>((rt1.c3))), (((('-322226349')OR(((rt1.c0) NOT BETWEEN (rt1.c1) AND (vt0.c0)))))OR(((rt0.c2) IS FALSE))) FROM rt1, vt0, rt0 WHERE ((((((((('' COLLATE NOCASE)OR(((NULL)/(0.7614687308067405)))))AND(((NULL) IS TRUE))))AND(((((0xffffffff9791aa02)AND(921246106)))AND(0.23240392568399304)))))OR(CASE NULL  WHEN 0.33867598307823155 THEN 0.9912240348664146 END))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS FALSE) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL (~ (rt1.c3)), ((((((rt1.c2)AND(rt1.c3)))OR(rt1.c1)))<>(((rt0.c2)GLOB(rt1.c1)))), rt0.c2 FROM rt1 LIMIT 86793852 OFFSET 1519141362;SELECT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))<=(((vt0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM rt1, vt0 WHERE ((((0.906173771084607 IN ()))AND(LOWER(DISTINCT NULL))));SELECT rt0.c0, 1.830512589E9, ((MIN(rt1.c0))GLOB(SUM(rt0.c1))) FROM vt0, rt1 LIMIT -205974291 OFFSET -83033232;SELECT DISTINCT (NOT (SUM(rt1.c0))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT MAX((((rt1.c1)) BETWEEN ((rt1.c0)) AND ((rt0.c2)))) FROM vt0 GROUP BY rt1.c0, CAST(((vt0.c0)||(rt1.c0)) AS BLOB), (((rt1.c2, ((rt1.c1)/(rt1.c2)), json_array_length(rt1.c1)))>=((((vt0.c0)|(rt1.c2)), ((((((((rt0.c0)OR(rt1.c1)))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)), ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c2))))) HAVING (rt1.c3 COLLATE RTRIM IN ());SELECT LAG((((rt1.c1)) BETWEEN ((CAST(rt1.c3 AS INTEGER))) AND ((((rt1.c2) BETWEEN (rt1.c3) AND (rt1.c1))))), (((((NULL)LIKE(rt1.c0)), (('1395554181') NOT BETWEEN (rt1.c1) AND (rt1.c2)), ((rt1.c2)|('w9]3蜶J'))))>=((CAST(rt1.c3 AS NUMERIC), (((rt1.c0, rt1.c1, rt1.c3))==(('_OM8t', 0.8590765924611026, rt1.c1))), ((-2067586297) IS TRUE)))), ((rt1.c0) NOT NULL)) OVER ( PARTITION BY (((NULLIF(rt0.c0, rt1.c0)))==((((rt0.c1) NOTNULL)))), (NOT (rt1.c1))) FROM rt1 WHERE (((LOWER(DISTINCT x'390e')) NOTNULL)) ORDER BY ((rt0.c2) NOTNULL) DESC  NULLS FIRST, ((((((((COALESCE(rt1.c0, 'h'''))AND(((((((((rt1.c3)OR(rt1.c3)))AND(rt1.c2)))AND(vt0.c0)))OR(rt1.c2)))))AND((+ (rt1.c3)))))OR(((rt1.c1) BETWEEN (rt0.c0) AND (rt1.c1)))))OR(rt1.c1)) DESC  NULLS FIRST, (((rt0.c1, rt1.c2, rt0.c0, rt1.c2, rt0.c1)) BETWEEN ((0.9157744875569878, rt1.c3 COLLATE BINARY, ((vt0.c0)/(rt0.c0)), JULIANDAY(rt1.c1, rt1.c0, rt0.c2), ((rt1.c1)<(rt0.c0)))) AND ((((rt0.c0)<=(vt0.c0)), ((rt0.c1)+(rt0.c2)), 0Xffffffffcccf3708, ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)), TYPEOF(rt0.c1)))) ASC;SELECT ALL SUM(((vt0.c0)IS NOT(rt0.c1))) FROM vt0, rt0 WHERE ((~ (((0.41927681861177224) IS FALSE)))); -- 0ms;
SELECT rt1.c0 FROM rt1, rt0, vt0 WHERE (((CASE WHEN 'ﬄ&rxt(' THEN '' ELSE 'R,8R,' END)<((x'' IN (NULL))))); -- 0ms;
SELECT DISTINCT ((0.6107320736459223) ISNULL) FROM rt0, rt1 LIMIT -1660825633; -- 0ms;
SELECT 0.3500957908912915, ((CAST(rt1.c3 AS REAL)) NOTNULL), ((rt1.c1 COLLATE BINARY) NOT BETWEEN (CAST(rt1.c1 AS INTEGER)) AND ((+ (rt1.c0)))) FROM rt0, rt1, vt0 ORDER BY ((((rt0.c2 COLLATE NOCASE)OR((- (rt1.c3)))))OR(((vt0.c0) NOTNULL))) DESC, CAST((0Xffffffffcd6def44 IN (rt1.c1)) AS INTEGER)  NULLS FIRST, TOTAL_CHANGES()  NULLS LAST; -- 7ms;
SELECT DISTINCT x'd1ed' FROM rt1 WHERE (((('-1399831024')) BETWEEN (((((x''))<=(('0.6206554493961202'))))) AND ((-2088465)))); -- 0ms;
SELECT ALL (((((((((((rt0.c0))>=((rt1.c3))))AND(((((((((vt0.c0)AND(rt0.c2)))AND(rt1.c1)))AND(rt0.c0)))OR(rt0.c2)))))AND(vt0.c0)))AND(((((((((rt0.c1)AND(rt1.c2)))AND(0Xffffffffe3b6de12)))OR(rt1.c1)))OR(rt1.c2)))))OR(NULL)) FROM rt0 WHERE ((((((((((('()')>('594332173')))AND(((((x'')OR('530220537')))AND(NULL)))))AND(((('-210565135'))<((NULL))))))OR(-1253341851 COLLATE NOCASE)))AND((((('-2123744334')OR(0.33189568225863886)))OR(0.27359329771826213)))));SELECT TOTAL((rt0.c0 IN ())) OVER ( ORDER BY x'' DESC  NULLS FIRST), SUM(((((0.6872532462473848)OR(rt0.c1)))AND(rt0.c0))) OVER (), ((CAST(rt0.c1 AS REAL)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (MIN(rt1.c3))) FROM rt0 WHERE ((('Xh')>=(x'0f56')) COLLATE BINARY) ORDER BY ((CAST('' AS INTEGER))GLOB(((rt0.c0)IS(rt0.c0))))  NULLS FIRST;SELECT ALL ((((((((SUM(rt1.c1))AND(((rt0.c2)-(x'')))))AND(MIN(rt1.c1))))OR((rt1.c1 IN (rt1.c1)))))AND(vt0.c0)), ((CAST(rt1.c0 AS TEXT)) NOT BETWEEN (ABS(rt1.c1)) AND ((rt1.c2 IN ()))), ((MIN(rt1.c2))/(x'')) FROM vt0, rt0, rt1 WHERE ((+ (CAST('0.24121388337616956' AS BLOB)))); -- 1ms;
SELECT DISTINCT rt1.c0 FROM vt0 WHERE ((((((0.8434347846327016)OR(0X25814c45)), CAST(0.5897576177121671 AS INTEGER), CAST(x'' AS NUMERIC)))>=((x'', ((('m9'))>(('956246653'))), 'IibK'))));SELECT CAST(CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c1 END AS INTEGER) FROM vt0;SELECT DISTINCT CASE WHEN rt1.c2 THEN 1395554181 END COLLATE BINARY, (rt0.c1 COLLATE NOCASE IN ()), 'DH?g' FROM rt0 WHERE (((((0.5876936477935085)) NOT BETWEEN ((0x1dae6543)) AND (('8Oc3Hn8E'))) IN ()));SELECT ALL ((((((rt0.c2)<<(rt1.c0)))OR(CASE WHEN rt0.c2 THEN vt0.c0 ELSE rt1.c3 END)))AND(rt1.c3)), rt0.c0, ((GROUP_CONCAT(0.5277490884922841)) NOT BETWEEN ((vt0.c0 IN ())) AND ((((rt1.c1))<((rt1.c3))))) FROM rt0, rt1, vt0; -- 1ms;
SELECT DISTINCT (('956246653')*(LENGTH(rt0.c0))), ((((~ ('0.33867598307823155'))))==((((vt0.c0)LIKE(rt1.c0))))), CAST(x'' AS TEXT) COLLATE BINARY FROM rt1;SELECT DISTINCT ((((CAST(rt0.c1 AS INTEGER))AND((((rt1.c0))!=((rt0.c0))))))AND(SQLITE_SOURCE_ID())) FROM rt1, vt0 WHERE (((((('956246653')) BETWEEN ((NULL)) AND ((''))))IS NOT(((NULL) IS TRUE))));SELECT DISTINCT TRIM(DISTINCT ((rt0.c1)+(rt1.c1)), (+ (rt0.c0))) FROM rt0, vt0;SELECT GROUP_CONCAT(((rt1.c1) ISNULL)) FROM rt0 NOT INDEXED INNER JOIN rt1 ON NULL; -- 0ms;
SELECT DISTINCT FIRST_VALUE(-2088465.0) OVER () FROM vt0, rt1 WHERE (((GLOB(x'', NULL)) BETWEEN (((((0.7937659870935097)AND('1561429459')))OR(1.57918832E8))) AND ((+ (5.9735875E7))))) GROUP BY rt1.c0, (NOT (((rt0.c2) NOT BETWEEN (NULL) AND ('')))), CASE x''  WHEN rt0.c1 THEN '2142696112' WHEN ((0)<(rt1.c1)) THEN (('/h') NOTNULL) WHEN CAST(NULL AS NUMERIC) THEN CAST(vt0.c0 AS TEXT) END, ((CAST(vt0.c0 AS NUMERIC)) NOTNULL), CASE WHEN '䞰,3c' THEN ((rt1.c3)LIKE(rt0.c1)) ELSE (((rt1.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END;SELECT DISTINCT ((rt1.c3)<=(rt1.c3)) COLLATE BINARY, (((x'' IN ()))AND(((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c2)))), TOTAL(rt0.c1) FROM vt0 WHERE (((((x'2fa9')>(NULL)))AND(((-2.10565135E8) NOT NULL)))) ORDER BY (CASE vt0.c0  WHEN 0.45600891848210023 THEN '-1523430826' END IN ())  NULLS LAST, '	>' ASC;SELECT DISTINCT TYPEOF(DISTINCT JULIANDAY(rt1.c3, rt1.c1, rt1.c0)) FROM vt0, rt0 UNION ALL SELECT ((CASE rt0.c2  WHEN rt1.c2 THEN rt1.c1 END) BETWEEN (rt0.c2) AND ('v֜G8eRPR')) FROM rt1, vt0, rt0 WHERE ((((NULL)) BETWEEN ((((NULL)>>('-2123744334')))) AND (((NULL IN ())))));SELECT DISTINCT ((LIKELIHOOD(rt0.c0, 0.9312924491824012))<=(MIN(vt0.c0))) FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT 0.6206554493961202, CAST(rt1.c3 AS INTEGER), TRIM(rt1.c1 COLLATE RTRIM) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT DATETIME((rt1.c1 IN (0.33867598307823155)), ((vt0.c0)==(rt1.c1)), rt1.c2 COLLATE BINARY) FROM rt0 NOT INDEXED;SELECT ALL (+ (0.7966676827732165)) FROM rt0, rt1, vt0; -- 0ms;
SELECT CAST(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)) AS NUMERIC), CASE WHEN STRFTIME(rt1.c1, rt0.c0, rt1.c2) THEN (rt0.c2 IN ()) WHEN GROUP_CONCAT(rt0.c1) THEN ((((((((rt1.c3)OR(rt1.c0)))AND(rt1.c2)))AND(vt0.c0)))OR(0.627029827117501)) WHEN ((rt1.c2)GLOB(rt0.c1)) THEN x'' COLLATE RTRIM ELSE ((rt1.c2)-(rt1.c2)) END, CAST(((rt0.c0) NOT NULL) AS INTEGER) FROM rt1;SELECT rt0.c1 FROM rt1, rt0 WHERE ((((0.41923898894502387 IN ()))&((0.6435774591013323 IN (-2.052075677E9))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt1, vt0 ORDER BY (((rt1.c3, rt0.c1, rt0.c0)) BETWEEN ((HEX(DISTINCT rt1.c2), NULLIF(DISTINCT rt1.c0, rt0.c2), ((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c1)))) AND (((((vt0.c0))>=((rt1.c0))), CAST(x'2cc6' AS REAL), 0xffffffffeddac564))) ASC;SELECT DISTINCT x'' FROM vt0, rt1 WHERE ((((NULL))>(((- (x'')))))); -- 0ms;
SELECT DISTINCT x'' COLLATE NOCASE FROM rt1 WHERE ((((('0.8298702688316615'))>((NULL))) IN ())) UNION ALL SELECT ALL UNLIKELY((rt0.c1 IN ())) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL TOTAL(CASE 0X75326ac2  WHEN 'pU39O]≩X*' THEN rt1.c3 ELSE NULL END), (rt1.c3 IN ()) COLLATE RTRIM, (((NULL, rt0.c0, rt1.c1)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt1.c2))), rt1.c2)) AND (('', -1358568629, vt0.c0))) FROM rt1, vt0;SELECT DISTINCT json_array_length((rt1.c2 IN ())) FROM vt0 WHERE (''); -- 0ms;
SELECT DISTINCT NULL FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0, rt0.c1, rt0.c0)) NOT BETWEEN ((x'', rt1.c2, rt1.c2)) AND ((rt1.c1, rt1.c3, rt0.c1)))) BETWEEN (AVG(rt0.c1)) AND (((rt0.c0)<=(rt0.c0)))) FROM rt0, vt0 WHERE (INSTR(((x'') BETWEEN ('') AND (NULL)), NULL)) ORDER BY rt1.c3 DESC  NULLS FIRST;SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)AND(rt0.c0)))AND('-322226349')))/((~ (rt1.c2)))) FROM vt0, rt1 WHERE (x'');SELECT (((((((((rt1.c2)AND(vt0.c0)))OR(vt0.c0)))OR(rt0.c1)))AND(rt1.c0)) IN ()), 'rO҃', ((((CAST(rt0.c0 AS REAL))AND(AVG(rt0.c2))))AND(CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c0 WHEN NULL THEN rt1.c0 ELSE rt0.c2 END)) FROM vt0, rt1 WHERE ((NULL COLLATE BINARY IN ()));SELECT (((((((((vt0.c0 IN ()))OR(1.574731826E9)))AND((rt0.c1 IN (rt1.c3)))))OR(CASE rt1.c2  WHEN vt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN vt0.c0 WHEN rt1.c1 THEN rt0.c0 END)))OR('-1412619965')) FROM rt0, vt0 GROUP BY (((vt0.c0) NOTNULL) IN ((- (rt1.c0))));SELECT DISTINCT SUM(((('[', rt1.c0, rt1.c3)) NOT BETWEEN ((rt1.c2, rt1.c3, rt1.c3)) AND ((rt1.c3, rt1.c0, rt1.c2)))) OVER () FROM rt0, rt1, vt0 WHERE ((- ((+ ('931879940'))))) ORDER BY ((rt0.c0) BETWEEN (rt1.c2 COLLATE NOCASE) AND (NULLIF(DISTINCT rt0.c0, rt0.c0))) DESC, ((((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c3))) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND ((((rt0.c1))<=((0x5c046e74))))) ASC  NULLS FIRST; -- 3ms;
SELECT (((rt1.c3)) BETWEEN ((vt0.c0 COLLATE BINARY)) AND ((((((rt1.c3)AND(vt0.c0)))AND(rt1.c3))))), (((~ (vt0.c0)))*(MIN(rt1.c2))), (NOT (rt0.c1 COLLATE BINARY)) FROM rt0, vt0, rt1; -- 0ms;
SELECT vt0.c0, CAST((((0.2271075818102537, rt0.c2, rt0.c0)) BETWEEN ((x'0a42', rt0.c2, rt1.c0)) AND ((vt0.c0, rt0.c1, 0Xffffffffc91a8302))) AS TEXT), ((((CASE WHEN '0.9352608158943281' THEN rt1.c1 ELSE rt1.c1 END)OR(TRIM(DISTINCT rt1.c1, rt0.c0))))AND(((((((((rt1.c2)OR(NULL)))AND(vt0.c0)))AND(rt1.c3)))OR(vt0.c0)))), ((((((((((((((vt0.c0)<=(rt0.c2)))OR(x'2310')))OR(((((rt1.c2)AND(rt0.c2)))AND(rt1.c3)))))OR(CASE rt0.c2  WHEN vt0.c0 THEN rt0.c2 END)))OR('')))OR(((rt0.c0) ISNULL))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), CASE WHEN CASE vt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c3 WHEN '594332173' THEN rt1.c2 END THEN (+ (rt0.c1)) END FROM rt0 WHERE (CAST(0.37812895046585426 COLLATE BINARY AS NUMERIC)) LIMIT -1564476298;SELECT ALL CASE WHEN (rt1.c0 IN ()) THEN ((rt1.c2) NOTNULL) END, TOTAL('.)4A㮲(*\'), '' FROM rt0 WHERE (rtreenode((NOT (x'70f8')), ((x'')/(x''))));SELECT DISTINCT 5.9735875E7 COLLATE RTRIM, CASE WHEN rt1.c1 THEN ((rt1.c1)GLOB(rt0.c1)) WHEN 0.5360626904629038 THEN rt0.c0 COLLATE NOCASE WHEN '1363833961' THEN ((((rt1.c3)AND(rt1.c1)))OR(rt0.c2)) ELSE TOTAL(rt0.c2) END, LEAD(((((((vt0.c0, rt1.c0, rt0.c1)) BETWEEN ((rt1.c3, rt1.c2, 1.94932216E9)) AND ((rt1.c0, rt1.c2, rt1.c0)))))<((rt1.c0))), ((((((rt0.c2)AND(rt1.c3)))OR(rt1.c2))) NOTNULL), ((((rt1.c0)&(rt1.c2))) BETWEEN (((rt1.c0) ISNULL)) AND (((rt1.c0)LIKE(rt0.c0))))) OVER () FROM vt0, rt0, rt1 WHERE (CASE WHEN TRIM(DISTINCT 0.9596542311258336, -2123744334) THEN (('6	')||('-1253341851')) ELSE CASE x'0b7b'  WHEN NULL THEN -3.27225338E8 WHEN 0.7919650150946153 THEN x'' WHEN NULL THEN '1519141362' END END) UNION ALL SELECT DISTINCT (NOT (((rt1.c1)*(rt0.c0)))), (((rt0.c0 IN ())) NOT BETWEEN ('REﭳ') AND (((vt0.c0)||(rt0.c0)))), CAST(SUM(vt0.c0) AS NUMERIC) FROM rt1, rt0, vt0 WHERE (((-924677753 COLLATE RTRIM)>=((('636409628')+(0x1b655fd8))))) ORDER BY rt0.c1 COLLATE BINARY DESC;SELECT CASE WHEN rt1.c3 THEN ((vt0.c0)==(rt1.c0)) ELSE ((rt1.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)) END, ((rt1.c1)-((((rt1.c1))<>((rt0.c1))))), ((x'') BETWEEN (0.40523441324040455) AND (((rt1.c1) NOT BETWEEN (rt1.c0) AND (rt1.c1)))) FROM vt0;SELECT DISTINCT ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (CAST(rt1.c3 AS BLOB)) AND (SQLITE_SOURCE_ID())) FROM rt0, rt1 WHERE ((((((((((('8fWc!f') NOT NULL))OR(x'')))AND((((x''))!=((''))))))OR(((-1519071108) NOTNULL))))AND((((NULL, 0.7435442978889691, '-1430177069'))<>((-1.358568629E9, 0.5670242684368304, 0.7885506310754598)))))) ORDER BY (((~ (rt0.c0)))GLOB(rt0.c0)) DESC; -- 0ms;
SELECT ALL (~ (rt0.c0)) COLLATE RTRIM COLLATE BINARY FROM rt1 FULL OUTER JOIN vt0 ON CASE CAST(rt1.c0 AS REAL)  WHEN (rt0.c1 IN (rt1.c0, rt0.c2)) THEN (((NULL)) BETWEEN ((rt0.c2)) AND ((rt1.c1))) END;SELECT COUNT(((rt1.c3) BETWEEN (0Xfc50df3) AND (rt0.c2))) FROM rt1, rt0, vt0 WHERE (CASE CASE x''  WHEN NULL THEN 0.422608179061984 ELSE '-1660825633' END  WHEN CAST('1830512589' AS BLOB) THEN ((NULL) ISNULL) WHEN CASE WHEN NULL THEN x'' ELSE x'' END THEN ((NULL) NOT BETWEEN (0.760864890556281) AND (NULL)) WHEN ((('-1544225933'))<>(('0.22557913159953813'))) THEN x'' END); -- 0ms;
SELECT ALL TRIM(0Xffffffffb284f68b, rt0.c2) COLLATE BINARY, ((vt0.c0 COLLATE BINARY) NOTNULL), ((IFNULL(rt1.c1, rt0.c1)) NOT BETWEEN (CASE rt1.c1  WHEN rt0.c0 THEN rt1.c1 END) AND ((+ (NULL)))) FROM rt1, rt0 WHERE (((LIKE(0.44767549382496097, NULL))>>(x'')));SELECT DISTINCT ((((rt0.c2)-(rt1.c0))) NOT BETWEEN (COALESCE(rt0.c1, NULL, rt0.c1, rt0.c1)) AND ((rt1.c0 IN (rt0.c0, vt0.c0, vt0.c0)))) FROM vt0, rt0 WHERE (((((((((SQLITE_COMPILEOPTION_GET(0x2c5bf31))AND(CASE 0x6cb63660  WHEN 'g' THEN x'' END)))OR((((('~|(E')AND(-1015237587)))AND(2.64572403E8)))))AND(((0.894082650945138) NOT BETWEEN (x'') AND (-237697982)))))OR((('494338845')IS NOT(0x1b07f19c)))));SELECT ((LIKELIHOOD(rt1.c3, 0.8293909316577938))+(rt1.c1)) FROM rt0, rt1 WHERE ((+ (((0.975458041621939) BETWEEN (x'a631') AND (0.6712818302701866))))); -- 0ms;
SELECT ALL CASE WHEN (rt0.c0 IN ()) THEN CASE rt0.c1  WHEN rt0.c0 THEN rt1.c3 END END, LTRIM(rt0.c1, json_array(vt0.c0, rt1.c1)), (((vt0.c0 IN (rt1.c1, rt1.c2))) IS FALSE) FROM rt1, vt0, rt0 WHERE ((((('')GLOB('-286533037')))|(((x'')*(NULL))))) GROUP BY (((rt1.c3))>=((((NULL) BETWEEN (rt1.c1) AND (x''))))) HAVING NULL; -- 0ms;
SELECT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0)-(rt1.c0)) THEN (rt0.c0 IN (x'2eb8c161')) END FROM rt1 LIMIT -92908543 OFFSET 823566991;SELECT ALL CAST(rt1.c1 AS REAL) COLLATE NOCASE FROM rt0 WHERE ((((((- ('-1601936430')))AND('ZV' COLLATE RTRIM)))OR(LIKE(NULL, NULL, 'N'))));SELECT ALL ((((((((((((((rt1.c3)OR(rt1.c2)))AND(((1845423821) NOT NULL))))OR((~ (rt1.c0)))))OR((((rt1.c1, rt1.c0, rt0.c1)) BETWEEN ((rt1.c3, rt1.c3, rt1.c3)) AND ((rt0.c0, rt0.c0, rt1.c0))))))AND((rt1.c1 IN ()))))OR(((((((((((((rt0.c1)OR(rt1.c0)))AND(rt1.c2)))AND(rt0.c1)))AND(rt1.c0)))AND(rt0.c0)))OR(rt1.c1)))))AND((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt1.c1))))) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_USED('aW_I'))&(((0Xffffffffd3080324) NOTNULL))));SELECT DISTINCT CAST(((rt0.c0)+(vt0.c0)) AS NUMERIC) FROM rt1, rt0, vt0; -- 0ms;
SELECT 0Xffffffff94e2af03, ((((rt0.c0)%(x''))) NOT BETWEEN ((+ (4.97968451E8))) AND (((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)))), NULLIF(vt0.c0, rt1.c1) COLLATE RTRIM FROM rt0;SELECT ALL NTH_VALUE(CAST(((rt0.c2)+(rt1.c0)) AS INTEGER), ABS(0.9423621283558162)) OVER (), CAST(CASE WHEN rt1.c1 THEN rt1.c2 END AS NUMERIC), '^픷gC_c[' FROM rt0, rt1 WHERE (NULL); -- 0ms;
SELECT rt1.c2 FROM rt0, vt0 WHERE (CAST(TYPEOF(DISTINCT NULL) AS TEXT));SELECT DISTINCT TOTAL(('?' IN ())) OVER (), (+ (CASE WHEN rt0.c0 THEN rt1.c3 ELSE '636409628' END)), ((TYPEOF(vt0.c0)) IS TRUE) FROM vt0, rt0 GROUP BY ((((((rt1.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt1.c0)))))==(((('start of year')AND(rt1.c0))))) HAVING UNLIKELY((rt0.c1 IN (rt1.c0)));SELECT ALL (((((NOT (rt1.c0)))AND((rt1.c1 IN (rt1.c2, rt0.c0)))))OR(LIKELIHOOD(DISTINCT vt0.c0, 0.4940724367374285))) FROM rt1 WHERE ((((x'' IN ()))+(((((x'')OR(0.591536740545379)))OR(0.6006810940607034)))));SELECT ALL x'4484fbf0' FROM rt1, vt0, rt0 ORDER BY ((TYPEOF(DISTINCT rt1.c0))IS(((((rt0.c1)OR(vt0.c0)))AND(vt0.c0)))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt1, rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt0, rt0 WHERE ((((+ (''))) BETWEEN (((((((((0.7435442978889691)AND(0.6334102543394963)))AND(0.5493624363930238)))OR(0.5867061905068099)))OR(x''))) AND ((((('ZG쨍#Je')OR(-1015237587)))OR(x'7a76'))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)!=(vt0.c0)))OR(rt1.c3)))AND(((rt1.c1) IS TRUE))))OR(((rt0.c2)>=(rt1.c3)))))AND(CASE rt1.c1  WHEN rt0.c2 THEN rt0.c1 END)), '1904965537', NTILE(((rt0.c0)<=(rt1.c1)) COLLATE BINARY) OVER ( PARTITION BY 'nJཕ_b+*A', ((((1318851264)OR(CAST(rt1.c0 AS REAL))))AND(CAST(rt1.c1 AS INTEGER)))) FROM rt1, rt0, vt0 GROUP BY ((CAST(rt0.c2 AS NUMERIC))LIKE((NOT (rt1.c0)))), (+ (((((((((rt0.c2)OR(rt0.c1)))OR(NULL)))OR(rt0.c1)))OR(rt1.c0)))), CAST((rt1.c1 IN (-790037187)) AS REAL) HAVING ((GROUP_CONCAT(rt1.c0))>(((rt1.c0)GLOB(rt0.c1))));SELECT DISTINCT TOTAL(rt1.c2) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP), (((NOT (rt0.c0))) NOT NULL), (~ (((rt1.c3)/(x'')))) FROM rt1, rt0, vt0; -- 1ms;
SELECT CAST('-170107442' AS BLOB) FROM vt0, rt1, rt0 ORDER BY CASE (('-1143020737')LIKE(rt1.c3))  WHEN ((((((((rt1.c1)OR(rt0.c1)))OR(vt0.c0)))AND(rt1.c1)))OR(vt0.c0)) THEN ((rt1.c0) ISNULL) ELSE ABS(vt0.c0) END  NULLS LAST; -- 2ms;
SELECT AVG(CAST(vt0.c0 AS TEXT)) OVER (), AVG(((((rt0.c0)OR(rt1.c3)))AND(rt1.c0))) OVER (), ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c3)))-(((0.12411186790371642) BETWEEN (x'71ba') AND (rt1.c2)))) FROM vt0 WHERE (NULL);SELECT DISTINCT TOTAL('-924677753') OVER (), ((CAST(rt1.c0 AS TEXT))<<((NOT (vt0.c0)))), ((((rt0.c1)OR(((NULL) BETWEEN (rt0.c2) AND (0.591536740545379)))))OR(NULLIF(vt0.c0, rt1.c2))) FROM vt0;SELECT DISTINCT json_insert(((rt1.c1)LIKE('')), CAST(rt1.c0 AS BLOB), CASE WHEN rt1.c0 THEN rt1.c0 END, (((rt1.c0))!=((x''))), (+ (rt1.c3))), ((json_type(0.711174196809042)) NOTNULL), CASE WHEN CAST(vt0.c0 AS TEXT) THEN ((rt1.c1) NOT NULL) END FROM rt1 WHERE (CASE LIKELIHOOD(NULL, 0.37565406646401645)  WHEN ((x'') IS FALSE) THEN (((x'88cd')) BETWEEN ((-1649308657)) AND ((0.8298702688316615))) ELSE (((('')AND(x'')))AND('[*l[e6xO')) END);SELECT CAST(x'' AS BLOB) COLLATE BINARY COLLATE BINARY, PERCENT_RANK() OVER ( ORDER BY (((rt0.c2, rt1.c1, '()')) NOT BETWEEN (('*\^', (+ (vt0.c0)), ((rt0.c1) NOTNULL))) AND ((rt0.c1 COLLATE NOCASE, CASE WHEN rt1.c2 THEN 0Xffffffff9b5d96f8 ELSE rt0.c0 END, rt1.c3))) DESC, (0.11870610890097621 IN (((rt1.c2)>(rt0.c2)))) ASC), ((((((rt1.c0)AND(vt0.c0)))AND(vt0.c0)))<=(rt1.c1)) FROM rt1 WHERE (TRIM(DISTINCT (('⁅+9w瑩\') BETWEEN (NULL) AND ('z89ij{V>3')))) LIMIT 1395554181 OFFSET -807927813;SELECT ALL CAST((NOT (rt0.c1)) AS BLOB), (((((vt0.c0))>=((rt1.c0))))IS(((vt0.c0) NOTNULL))), (~ (rt0.c0)), 'dh?g', ((((((((rt1.c1)OR(rt1.c0)))AND(rt0.c1)))OR(((rt1.c1)GLOB(rt1.c0)))))AND(CAST(rt1.c2 AS INTEGER))) FROM vt0, rt0 WHERE (((((NULL)) BETWEEN ((8.860701193003084E-4)) AND ((0.49069299713883063))) IN ()));SELECT ALL ((rt1.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE BINARY, IFNULL(DISTINCT (((rt1.c1, rt0.c1, rt0.c2)) BETWEEN ((vt0.c0, rt0.c2, rt1.c0)) AND ((rt0.c1, NULL, vt0.c0))), (((vt0.c0, '-357162391', rt0.c1))>=((rt1.c1, rt1.c1, rt1.c1)))), RANK() OVER () FROM rt0, rt1;SELECT CASE WHEN LOWER(vt0.c0) THEN MAX(rt0.c2) ELSE ((rt1.c0)*(vt0.c0)) END FROM rt1 WHERE (((x'b2af') NOT BETWEEN ((('1331708743') IS FALSE)) AND (((NULL) NOT BETWEEN (-1.399831024E9) AND (2142696112)))));SELECT ALL ABS(DISTINCT LOWER(rt0.c1)), (((0.5901424326443546)|(rt1.c1)) IN ()), ((((((rt1.c0)OR(rt0.c2)))OR(vt0.c0)))>=((((vt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c2, x'', rt0.c2)) AND ((rt0.c0, 0.9063411204958048, rt1.c0))))) FROM rt1, rt0 WHERE (((x'f0ecc2e6') BETWEEN ('743917861') AND (NULL)) COLLATE RTRIM);SELECT ALL ((((vt0.c0)IS(rt0.c2))) BETWEEN (rt1.c1) AND (AVG(rt0.c2))), COUNT((((rt1.c2))<=((rt1.c1)))) OVER (), (~ (((rt1.c0)LIKE(rt0.c2)))) FROM rt0 WHERE (((((0.732484690185605) IS TRUE)) BETWEEN ((((x'', 0.49069299713883063, NULL)) BETWEEN ((x'', x'', '-910802014')) AND ((x'a1c6', NULL, NULL)))) AND (((0.09066941660702132)||(x'f3a4')))));SELECT DISTINCT CASE WHEN LIKELY(DISTINCT rt1.c0) THEN ((rt1.c2) IS FALSE) END FROM rt1, vt0 WHERE (QUOTE((((NULL))<=((0.9918496029629987))))); -- 0ms;
SELECT ALL TOTAL((vt0.c0 IN (rt1.c3, rt1.c3))) FROM rt0, rt1;SELECT (((CASE NULL  WHEN rt1.c3 THEN rt0.c0 END))<=((((rt0.c2)>(rt0.c1))))) FROM rt0, rt1 LEFT OUTER JOIN vt0 ON TRIM(DISTINCT (((rt0.c0, rt0.c1, rt1.c3))==((rt1.c0, '0.4456239614614623', rt1.c2)))); -- 0ms;
SELECT (+ (SUM(rt0.c0))), ((((((((rt0.c2)OR(rt0.c1)))OR(rt1.c1)))AND(COUNT(*))))AND(((rt1.c1)OR(vt0.c0)))), (((NOT (rt0.c1))) BETWEEN ((((rt1.c1))>((rt0.c2)))) AND ((rt0.c2 IN ()))) FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((((((rt0.c1)AND(rt1.c0)))OR(rt1.c0)))OR(rt0.c0)))OR(0.5361907897435833)))AND(((((((((rt1.c2)OR('264572403')))AND(rt1.c3)))OR(rt0.c1)))AND(rt0.c0)))))OR(CASE rt1.c1  WHEN rt1.c1 THEN rt1.c0 ELSE rt1.c1 END))) OVER ( RANGE (((vt0.c0)) NOT BETWEEN (((NOT (x'')))) AND ((((((rt1.c0)AND(NULL)))AND(rt1.c2))))) PRECEDING EXCLUDE GROUP) FROM rt0, vt0, rt1 GROUP BY (((CAST(rt0.c0 AS TEXT)))>=((rt1.c2)));SELECT DISTINCT (((((rt0.c0, rt1.c3, rt1.c2))>=((vt0.c0, rt0.c0, rt0.c2)))) NOT BETWEEN (((((((((rt1.c1)OR(rt0.c2)))OR(vt0.c0)))AND(rt0.c1)))AND(rt1.c2))) AND (COUNT(rt1.c3))) FROM rt1, vt0;SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY ((rt1.c2)=(rt0.c0))), (NOT (((rt0.c2) NOT NULL))), (HEX(vt0.c0) IN ()) FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT (((((rt0.c2))<((rt1.c1)))) ISNULL) FROM rt1 WHERE (CASE WHEN TRIM(DISTINCT NULL) THEN json_type(NULL) ELSE ((NULL) BETWEEN (NULL) AND ('130391440')) END);SELECT ALL ((TRIM(rt0.c0)) BETWEEN (((rt0.c2) NOT NULL)) AND (CAST(rt1.c3 AS TEXT))) FROM rt0;SELECT MIN(rt0.c2 COLLATE BINARY, rt1.c1 COLLATE NOCASE, QUOTE(rt0.c0), ((rt0.c1) BETWEEN (rt1.c1) AND (rt0.c0)), NULL, NULL) FROM rt0, rt1; -- 0ms;
SELECT ((((rt1.c1)=(rt1.c2)))<>(((rt1.c0)<=(rt1.c3)))) FROM rt0, vt0 NOT INDEXED;SELECT DISTINCT ABS(DISTINCT 0.3761306657074761) FROM vt0, rt1, rt0 GROUP BY rt0.c0, (((((((((rt1.c2 IN (rt1.c2, rt1.c2)))AND(((rt0.c2)GLOB(rt1.c1)))))AND(CAST(rt1.c2 AS BLOB))))OR(IFNULL(rt1.c0, rt1.c3))))OR(((rt1.c3)IS(rt1.c0)))), (vt0.c0 IN (((((((((rt0.c2)AND(rt1.c2)))AND(vt0.c0)))OR(NULL)))AND(rt1.c2)))), CASE ((vt0.c0)||(rt1.c0))  WHEN ((((rt0.c0)OR(rt1.c1)))AND(rt0.c0)) THEN ((rt1.c3) NOT NULL) END, (((((rt1.c1))<>((rt0.c0))))|((rt1.c0 IN ()))); -- 3ms;
SELECT DISTINCT LIKELY(CAST(rt1.c1 AS NUMERIC)), ((((((((((rt1.c3) BETWEEN (rt1.c1) AND (rt0.c1)))AND(rt1.c3)))OR(TRIM(DISTINCT rt0.c1, rt0.c1))))AND(0.33112899207271496)))OR(((rt0.c0) BETWEEN (rt1.c2) AND (rt1.c3)))), json_array_length(rt0.c0) COLLATE NOCASE FROM rt1, vt0, rt0 WHERE (CAST(((NULL)<(0.3646923090279115)) AS TEXT)); -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c1)) THEN CAST(rt1.c2 AS REAL) END FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt1.c0)<<((((rt1.c3)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))) FROM vt0 WHERE (LTRIM((((x''))==(('-170107442'))), CASE -988021153  WHEN NULL THEN 0.5360626904629038 WHEN 0.28546834605974836 THEN x'c42d' WHEN '-286533037' THEN 0.743695573973198 WHEN x'' THEN x'0a18' WHEN x'' THEN NULL END));SELECT ALL x'0886', (((((rt1.c0)AND(rt1.c1)))OR(rt0.c2)) IN ()), ROW_NUMBER() OVER (), ((((((vt0.c0)OR(rt1.c0)))OR(vt0.c0)))+(rt0.c0)), (((rt0.c1)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt1.c3)))) AND ((((((rt1.c3)AND(rt0.c0)))OR(vt0.c0))))) FROM rt1, rt0, vt0; -- 0ms;
SELECT AVG(vt0.c0) OVER () FROM rt1, rt0;SELECT ALL ((vt0.c0)LIKE(COUNT(*))) FROM rt0, vt0, rt1; -- 0ms;
SELECT x'38ec' FROM vt0, rt1 WHERE (CAST((NULL IN ('-1797083389', x'')) AS TEXT)); -- 0ms;
SELECT ALL COUNT(CASE WHEN rt0.c0 THEN rt0.c0 END), rt1.c0, x'afb7', LIKELY(((rt1.c3) ISNULL)), ((x'') BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND ('oayP'))) AND (CAST(rt0.c1 AS TEXT))) FROM rt1, vt0, rt0 WHERE ((((NULL)<(1.363833961E9)) IN ((((NULL))<(('')))))); -- 0ms;
SELECT DISTINCT (((rt1.c2)) BETWEEN ((((((((((vt0.c0)AND('220141173')))AND(vt0.c0)))AND(rt0.c0)))OR(rt1.c0)))) AND (('1853945572' COLLATE BINARY))) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL ((((rt0.c2))>((vt0.c0))) IN (((rt0.c2)>(rt1.c2)))) FROM vt0 WHERE ((~ (NULLIF(0.6954292203560871, 0.9797804462226886))));SELECT DISTINCT (((AVG(rt1.c1)))!=(((rt1.c1 IN (vt0.c0))))), ((((((((((rt1.c1)OR(rt1.c2)))OR(rt1.c3)))OR(x'')))AND(rt0.c2))) NOT BETWEEN (CASE WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt1.c2 WHEN rt0.c0 THEN rt1.c2 END) AND (((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))), (((((vt0.c0)AND(rt0.c0)))OR(rt0.c2)) IN ()), (NOT (CASE WHEN rt1.c2 THEN rt1.c1 END)), ((rt1.c1) ISNULL) FROM vt0 GROUP BY rt1.c2 HAVING SUM(((((rt1.c2)AND(rt0.c0)))AND(rt1.c3)));SELECT DISTINCT ((((rt0.c2) BETWEEN (0.7912427880599585) AND (rt0.c1))) NOT NULL) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT -263033903 COLLATE BINARY FROM rt1, vt0 GROUP BY CAST((- (rt1.c3)) AS TEXT) HAVING ((((((rt0.c0)AND(vt0.c0)))OR(rt1.c0)))OR(COUNT(rt0.c0)));SELECT DISTINCT CUME_DIST() OVER ( ORDER BY -746452286 COLLATE NOCASE ASC  NULLS LAST), LEAD(-1.023016861E9 COLLATE NOCASE, rtreenode(((rt1.c3) BETWEEN (x'') AND (rt0.c2)), rt0.c1), (((vt0.c0 IN (rt0.c0))) ISNULL)) OVER ( ORDER BY CAST(rt0.c2 AS NUMERIC) DESC), FIRST_VALUE(((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))/(((rt0.c2) BETWEEN (rt0.c0) AND (NULL))))) OVER () FROM rt0, vt0, rt1 WHERE (LIKELIHOOD('-1023016861', 0.5605704499915443)); -- 9ms;
SELECT CAST(rt1.c1 AS TEXT) FROM rt0, rt1, vt0 WHERE (highlight(TRIM(DISTINCT -1051339832), (- ('1543794292')), 371356879, (('516253956')GLOB(x''))));SELECT DISTINCT ((((rt1.c0) NOTNULL))OR(((rt0.c1) BETWEEN (NULL) AND (rt1.c3)))) FROM vt0 WHERE ((((((-1.412619965E9) NOT BETWEEN (0xffffffffac904610) AND (x'3520')), NULL COLLATE RTRIM, ((NULL) NOT BETWEEN (x'fb421aa8') AND (0.9741629336894977))))!=(((((NULL)) NOT BETWEEN ((NULL)) AND ((''))), -1.235690347E9, LIKELIHOOD(x'd35e', 0.6426334403424748)))));SELECT DISTINCT (((((rt0.c2)<<(rt0.c1)), CAST(0.8448941563175311 AS INTEGER), ((rt1.c2)OR(vt0.c0))))<((CASE rt1.c2  WHEN rt1.c1 THEN vt0.c0 END, (~ (rt1.c0)), NULL))) FROM vt0 WHERE ((~ ('-866572872' COLLATE BINARY)));SELECT DISTINCT ((CAST(rt1.c1 AS BLOB)) IS TRUE) FROM rt1, rt0, vt0 WHERE (-9.24677753E8 COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c2  WHEN rt1.c1 THEN rt1.c3 END AS INTEGER) FROM rt0, vt0, rt1 WHERE (((CASE WHEN x'' THEN '-1486963778' WHEN NULL THEN NULL WHEN 0.3437075998720972 THEN '584652778' ELSE NULL END) NOT BETWEEN ((NOT (NULL))) AND (CASE WHEN x'86d6' THEN 0.08768013809938768 ELSE '-170107442' END))) ORDER BY (((rt1.c3, rt1.c0, rt1.c2)) BETWEEN ((((((((((vt0.c0)AND(rt1.c0)))AND(rt0.c0)))AND(rt1.c2)))OR(rt1.c0)), IFNULL(DISTINCT rt0.c2, rt1.c3), CASE WHEN rt0.c0 THEN rt1.c3 WHEN vt0.c0 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c0 END)) AND (((NOT (rt0.c0)), x'4ffd', rt0.c0 COLLATE BINARY)))  NULLS FIRST; -- 2ms;
SELECT DISTINCT ((((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c3)))>(COUNT(rt0.c1))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((~ (rt1.c3))))>=((AVG(rt0.c0)))), ((COALESCE(vt0.c0, rt1.c1)) NOT NULL), ((CASE WHEN rt1.c2 THEN rt0.c2 WHEN ']ww' THEN rt1.c0 WHEN 0.7876787938176423 THEN rt0.c2 ELSE rt0.c1 END) NOT NULL) FROM rt0 WHERE (0Xffffffffe4a6a418);SELECT ALL (+ (((rt1.c3)LIKE(rt1.c3)))) FROM rt0 WHERE (((((((((((x'')OR(0x348a4a92)))OR('-924677753')))AND('u')))AND(0x1c689882)))<(594332173))) GROUP BY (- (((rt1.c2)<=(rt1.c0)))) HAVING ((((vt0.c0)IS(rt1.c0)))<=(GROUP_CONCAT(rt0.c0)));SELECT DISTINCT (((((NOT (rt0.c2)))AND((vt0.c0 IN ()))))AND(CAST(vt0.c0 AS INTEGER))) FROM vt0, rt0; -- 1ms;
SELECT ALL json_array_length((rt0.c2 IN ())), rt1.c0 COLLATE RTRIM COLLATE BINARY COLLATE BINARY, FIRST_VALUE(CAST((((vt0.c0, vt0.c0, 0X12ad8187)) BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))) AS BLOB)) OVER () FROM vt0;SELECT DISTINCT CASE WHEN ((rt1.c2) NOT NULL) THEN (rt1.c1 IN ()) WHEN ((rt0.c0) IS TRUE) THEN ((((rt1.c2)OR(rt0.c0)))AND(rt1.c3)) WHEN ABS(rt0.c1) THEN rt1.c1 ELSE SUM('') END FROM vt0, rt0, rt1 WHERE (UNLIKELY(DISTINCT NULL)); -- 0ms;
SELECT ALL rt0.c2 FROM vt0, rt0; -- 0ms;
SELECT DISTINCT SUM(((((rt0.c2)OR(x'')))AND(rt1.c0))) OVER () FROM rt1, rt0, vt0 WHERE (UNLIKELY(DISTINCT LIKELY(0.28145362283084474))) LIMIT 501229587; -- 1ms;
SELECT DISTINCT (((0.5733420725539028))<=(((NOT (rt1.c3))))), (('8''')LIKE(((rt0.c0)*(rt0.c0)))), LEAD((((- (rt1.c2)))<=(((((rt1.c0)AND(rt1.c0)))AND(rt1.c0)))), ((rt1.c2 COLLATE RTRIM) BETWEEN (rt1.c1) AND ((((rt1.c0, rt1.c1, rt1.c2))>((rt1.c0, rt1.c0, rt1.c0))))), UNLIKELY(DISTINCT ((rt1.c3)OR(rt1.c1)))) OVER () FROM rt1 WHERE ((('-1189209573')||(((NULL) NOT BETWEEN (0x67f40483) AND (x'')))));SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)&(rt1.c3)), ((((((((((rt0.c2)AND(rt1.c3)))OR(rt0.c2)))AND(rt1.c1)))OR(rt1.c2)))GLOB(((rt0.c0) BETWEEN (rt0.c2) AND (rt1.c1)))), ((((rt0.c1) NOT BETWEEN ('563413345') AND (rt0.c2)))OR(rt1.c3 COLLATE NOCASE)) FROM vt0, rt1 WHERE (CAST((NOT (NULL)) AS BLOB));SELECT DISTINCT ((rt1.c3)/(((rt1.c0) ISNULL))) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT (((((rt1.c0)) BETWEEN ((vt0.c0)) AND ((rt0.c1))))>>(rt1.c1)), (NOT (((rt1.c3)!=(rt1.c0)))), (CAST(rt1.c1 AS REAL) IN (rt1.c2)) FROM vt0 WHERE ((((-1358568629)) BETWEEN ((CAST(1395554181 AS BLOB))) AND ((0.29829192144951966 COLLATE BINARY))));SELECT DISTINCT ((((vt0.c0) NOTNULL))IS NOT(((rt0.c2) BETWEEN (0.08982514018845844) AND (rt1.c0)))), x'' COLLATE BINARY, (+ ('0.3646923090279115')) FROM rt1, rt0 WHERE ((~ (x'')) COLLATE NOCASE);SELECT DISTINCT ((('-1235690347')) BETWEEN ((rt1.c2 COLLATE NOCASE)) AND ((rt1.c2 COLLATE RTRIM))) FROM vt0, rt1 WHERE ((NOT (((x'')%('-210565135'))))); -- 0ms;
SELECT DISTINCT CASE ((rt1.c1) IS TRUE)  WHEN (rt0.c0 IN ()) THEN ((rt0.c1)>>(x'')) WHEN GROUP_CONCAT(rt1.c2) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((((((((rt0.c2)AND(rt0.c1)))OR(rt1.c0)))OR(rt0.c1)))AND(vt0.c0)) THEN ((rt0.c1)IS NOT(NULL)) END FROM vt0, rt0, rt1 WHERE (CAST(((NULL)==(NULL)) AS REAL)) LIMIT -1235690347 OFFSET -327978930; -- 0ms;
SELECT ((((vt0.c0)||(vt0.c0))) NOT BETWEEN ((rt0.c1 IN ())) AND (((((((((rt1.c3)AND(rt0.c0)))AND(rt1.c0)))OR(rt1.c3)))OR(rt0.c2)))) FROM rt1, vt0, rt0 ORDER BY ((rt1.c0 IN ()) IN ()); -- 2ms;
SELECT DISTINCT rt1.c3, SUM(CAST(rt1.c2 AS INTEGER)), TRIM(DISTINCT ((rt1.c0) IS TRUE), x''), (((0.44159108422880655 IN ())) IS FALSE), CASE ((NULL)<(vt0.c0))  WHEN ((((NULL)OR(rt0.c0)))OR(rt1.c3)) THEN (rt1.c2 IN ()) END FROM vt0;SELECT DISTINCT CAST(((rt0.c2) NOTNULL) AS TEXT), (((((rt0.c1, vt0.c0, rt1.c0))>((rt0.c1, rt0.c1, rt1.c1))))=((((rt0.c0, rt0.c1, vt0.c0)) NOT BETWEEN ((rt1.c1, rt1.c1, rt1.c1)) AND ((rt1.c3, rt1.c3, rt1.c0))))), ((((rt0.c1) IS FALSE)) IS FALSE) FROM rt1 WHERE ((((((x'', 0.48550469716114575, NULL)) BETWEEN ((x'bd862253', 0.3472598085695898, '1574731826')) AND ((0.231996393088179, -1.051339832E9, 0.3900871636202864))))|((x'3b50' IN ()))));SELECT DISTINCT (CAST(rt1.c2 AS NUMERIC) IN ((rt1.c2 IN ()))), ((TYPEOF(DISTINCT rt1.c1))IS(rt1.c0 COLLATE NOCASE)), COUNT(*) COLLATE RTRIM FROM vt0, rt0, rt1 ORDER BY ((rt0.c2)*(CASE rt0.c2  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c0 END)) DESC; -- 0ms;
SELECT DISTINCT (((((rt1.c0))>=((rt1.c0)))) BETWEEN (rt1.c1) AND (COUNT(*))) FROM vt0;SELECT DISTINCT NTH_VALUE(CASE x'29ad'  WHEN vt0.c0 THEN ((rt0.c1)OR(rt0.c0)) END, rt0.c0) OVER (), ((UNLIKELY(vt0.c0))||(((rt0.c2) NOT BETWEEN (vt0.c0) AND (rt0.c2)))), rt1.c2 COLLATE NOCASE FROM rt0, vt0 WHERE (0.4153174654435804) GROUP BY (rt0.c0 IN (TYPEOF(DISTINCT rt1.c0))), CASE WHEN (rt0.c1 IN (rt1.c3)) THEN CASE rt1.c1  WHEN rt1.c0 THEN vt0.c0 END ELSE ((rt0.c1)-(rt1.c3)) END, (CASE WHEN rt0.c2 THEN rt0.c0 END IN (((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c1)), rt0.c0)) HAVING (vt0.c0 IN (rt1.c0, vt0.c0)) COLLATE RTRIM;SELECT DISTINCT ((((((rt1.c1)AND(vt0.c0)))OR('878397792')))>>((((rt1.c3, rt1.c0, rt0.c0))<((vt0.c0, vt0.c0, rt1.c2))))), CAST(((rt0.c0)<<(rt0.c2)) AS BLOB), NULL FROM vt0, rt1 WHERE ((((((0xffffffff96b21bc4, '', x'')) BETWEEN ((x'', 0xffffffffadf83bfb, NULL)) AND ((636409628, NULL, NULL))))OR((((0xffffffffa764a8e9))==((x''))))));SELECT ALL rt1.c1 FROM rt1, vt0, rt0 WHERE (NULL); -- 0ms;
SELECT (+ (CAST(rt1.c0 AS REAL))), ((rt1.c0)LIKE(((rt1.c1)IS NOT(x'')))), CAST(rt1.c0 COLLATE RTRIM AS NUMERIC) FROM rt1, vt0, rt0 WHERE (((((((-2092154143)OR('ot}8+')))OR(NULL)))GLOB(((('䢑	Q㫓8g!'))==(('0.22557913159953813')))))); -- 0ms;
SELECT ALL rt0.c1 FROM rt1, rt0, vt0 GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt1.c0)))>(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 WHEN vt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN vt0.c0 END)) HAVING 0x767b39d5; -- 2ms;
SELECT DISTINCT 0.4622093991729974 COLLATE BINARY, GROUP_CONCAT((NOT (rt0.c0))) OVER (), LAST_VALUE((((((((((rt1.c2 IN ()))AND(0xffffffff80a26aec)))OR(((rt1.c2)>(rt1.c1)))))OR((rt1.c1 IN ()))))AND(((rt1.c2) NOT BETWEEN (x'257b') AND (rt1.c1))))) OVER () FROM rt1;SELECT DISTINCT (((rt1.c0)) BETWEEN ((x'9823')) AND ((((rt1.c0) BETWEEN (rt1.c0) AND (rt1.c0))))) FROM vt0, rt0;SELECT (((8.860701193003084E-4))>=((((rt0.c2)&(rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c0)LIKE(vt0.c0)))), ((vt0.c0)*(CASE rt1.c1  WHEN rt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt1.c2 ELSE rt1.c2 END)), (NOT (((rt1.c0)IS(rt1.c1)))) FROM rt1, vt0 ORDER BY ((vt0.c0 IN ()) IN (('夓#JwMdE' IN ()))) LIMIT -486349500;SELECT DISTINCT NTILE(((((rt0.c2)/(NULL)))<(((rt0.c1)==(rt0.c0))))) OVER ( ORDER BY CAST(((rt1.c1)IS NOT(rt0.c0)) AS REAL)) FROM rt1, rt0, vt0 WHERE (HEX(DISTINCT ((0.6425139698315459)%('')))) ORDER BY ((((((((((x'')<(rt1.c1)))AND((NOT (rt0.c0)))))OR((rt1.c0 IN ()))))AND(CASE vt0.c0  WHEN rt1.c2 THEN rt1.c1 WHEN vt0.c0 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c0 ELSE rt1.c1 END)))AND(rt0.c0)) ASC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN ((((rt1.c2)AND(vt0.c0)))OR(rt1.c0)) THEN ((((((((rt1.c3)OR(rt0.c1)))OR(NULL)))AND(vt0.c0)))OR(rt1.c2)) WHEN ((vt0.c0)/(rt1.c1)) THEN ((rt0.c1) BETWEEN (vt0.c0) AND (rt1.c0)) WHEN (rt0.c0 IN ()) THEN rt0.c1 COLLATE NOCASE ELSE '' END, (MAX(vt0.c0) IN ()), (rt0.c0 IN ()) COLLATE RTRIM FROM rt1 WHERE ((((((('')<=(5.9735875E7)))AND((('z89ij{v>3')|(NULL)))))AND(((0.6006810940607034)<('')))));SELECT ALL (+ (((((rt0.c2)AND(rt1.c0)))AND(rt1.c0)))) FROM rt0 FULL OUTER JOIN rt1 ON (rt1.c0 IN ()) COLLATE RTRIM RIGHT OUTER JOIN vt0 ON CAST(rt1.c0 AS INTEGER) COLLATE RTRIM GROUP BY rt1.c3 HAVING rt1.c1; -- 0ms;
SELECT ALL (((CASE WHEN rt0.c0 THEN rt1.c0 END))!=(('*\^'))) FROM vt0 LIMIT -118368011 OFFSET 956246653;SELECT DISTINCT ((NOT ('0.006445663565794568')) IN ()) FROM rt1 INNER JOIN rt0 ON (((rt1.c0)<<(rt0.c1)) IN (rt1.c0 COLLATE NOCASE, CAST(rt1.c3 AS REAL))) ORDER BY (+ ((((rt1.c3)) BETWEEN ((rt1.c1)) AND ((rt1.c2)))))  NULLS LAST; -- 0ms;
SELECT ALL TYPEOF(DISTINCT rt1.c2) FROM vt0, rt1, rt0 WHERE (((((NULL) BETWEEN ('') AND ('1026118963')))||((- (x'd9b4'))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (-2.37697982E8)))>>(NULL)) FROM rt1, rt0;SELECT DISTINCT (((rt1.c2 IN ()))<>(CAST(rt1.c1 AS TEXT))) FROM rt0, vt0;SELECT CASE (rt1.c3 IN (rt0.c0, rt1.c3))  WHEN rt1.c3 THEN CAST(rt0.c2 AS BLOB) END, (~ (((rt0.c2)OR(rt0.c2)))), (- (CAST(rt0.c1 AS REAL))) FROM rt0 WHERE (CAST(CAST(x'' AS NUMERIC) AS TEXT));SELECT ((((((((COUNT(*))AND(((rt1.c2)<=(rt0.c0)))))OR((((x'')) BETWEEN (('	y')) AND ((rt0.c0))))))AND(TOTAL(rt1.c0))))OR(CASE WHEN NULL THEN rt1.c0 END)) FROM vt0, rt1 WHERE (NULL);SELECT ALL CASE WHEN rt1.c3 THEN (((vt0.c0)) NOT BETWEEN ((rt1.c2)) AND ((rt1.c1))) END FROM rt0, vt0, rt1 WHERE ((((CAST('Y0}涺sGQ2G' AS REAL), ((((NULL)AND('-1343289956')))AND(NULL)), NULL, TOTAL_CHANGES(), (((0.4159887863300631, NULL, 0.6556714705056804, NULL, NULL)) BETWEEN ((0.5038983450737013, NULL, 0x4ef0f008, 4.97968451E8, 0Xffffffff93e8f4c1)) AND ((0.5237205448591855, x'', -1835070551, NULL, NULL)))))!=((((NULL) NOT BETWEEN (NULL) AND (x'')), (('_~Q?') ISNULL), ((NULL)-('-806086117')), TRIM(DISTINCT '1321141726', '1949322160'), CAST('d!A[''ﵴQ	' AS BLOB))))); -- 1ms;
SELECT ALL ((((((((CASE WHEN rt0.c2 THEN rt0.c0 END)OR((((rt1.c1))>=((rt0.c0))))))OR(rt0.c1 COLLATE BINARY)))AND(IFNULL(DISTINCT rt0.c2, '-2123744334'))))OR(((rt1.c3)IS(vt0.c0)))), '-613800342', CAST(LOWER('\n6PXI!') AS NUMERIC) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(((rt1.c0)IS NOT(rt0.c0))), rt1.c2, MIN((((rt0.c1, rt0.c2, rt1.c0)) NOT BETWEEN ((rt0.c2, rt1.c0, rt0.c2)) AND ((rt1.c2, rt1.c2, rt1.c0)))) FROM rt1 GROUP BY ((CAST(rt1.c2 AS REAL)) NOT BETWEEN (((((((((0X67f40483)AND(vt0.c0)))OR(rt0.c1)))AND(rt1.c0)))OR(vt0.c0))) AND (rt1.c0 COLLATE RTRIM)), ((((rt0.c2)>>(vt0.c0))) NOT NULL), NULLIF(DISTINCT ((rt1.c0)>>('-2128640604')), (((rt1.c1))>=((rt0.c2))));SELECT DISTINCT LAST_VALUE(vt0.c0 COLLATE RTRIM) OVER () FROM vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER (), (((0.5588501475030397)) NOT BETWEEN (((((rt1.c1))<=((rt0.c1))))) AND ((rt0.c0))), CASE WHEN ((rt1.c2) BETWEEN (rt1.c1) AND (rt0.c2)) THEN CASE 0xffffffffb128db99  WHEN vt0.c0 THEN vt0.c0 END WHEN vt0.c0 THEN ((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c0)) WHEN (rt0.c2 IN (rt1.c3)) THEN CASE rt1.c1  WHEN rt0.c1 THEN rt0.c0 END END FROM rt0, rt1, vt0 WHERE ((NOT ((((x''))!=((459628504)))))) GROUP BY ((((((0.12411186790371642)AND(vt0.c0)))AND(rt0.c2)))>(CAST(rt0.c1 AS NUMERIC))), ((((NULL)AND(((rt1.c1) NOT NULL))))OR(((x'fa29') NOTNULL))), (TIME(rt0.c0, rt1.c0, rt0.c1) IN ()); -- 0ms;
SELECT DISTINCT '-286533037' FROM rt1, rt0, vt0 GROUP BY ((CASE rt1.c3  WHEN vt0.c0 THEN 'IlU3+\r' ELSE NULL END) NOTNULL), ((((vt0.c0))>=((rt1.c1))) IN ()), CASE WHEN LTRIM(vt0.c0) THEN (rt1.c3 IN ()) WHEN (rt0.c2 IN (rt1.c0)) THEN (((vt0.c0))<=((rt1.c3))) WHEN CHANGES() THEN (((vt0.c0)) BETWEEN ((rt1.c0)) AND ((rt1.c0))) ELSE (+ (rt0.c1)) END; -- 1ms;
SELECT ALL ((((rt0.c0)+(rt0.c1))) IS FALSE), ((((~ (rt0.c0))))<((CAST(rt1.c1 AS INTEGER)))), CAST(rt1.c0 AS NUMERIC) COLLATE BINARY FROM rt0;SELECT LIKELIHOOD(DISTINCT x'', 0.7521245061597213) FROM vt0, rt1, rt0 GROUP BY ((((rt1.c1)||(rt1.c3))) NOT NULL) HAVING (((rt1.c3)%(rt1.c3)) IN ()); -- 1ms;
SELECT DISTINCT CASE ((rt0.c1) BETWEEN (rt1.c3) AND (rt1.c3))  WHEN ((((((((rt0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))AND(rt1.c3)) THEN CASE rt1.c0  WHEN rt1.c0 THEN rt1.c3 ELSE rt0.c0 END WHEN CAST(rt0.c1 AS INTEGER) THEN GROUP_CONCAT(rt0.c0) WHEN ((((rt1.c2)AND(rt0.c2)))OR(rt1.c1)) THEN (((rt0.c2, rt0.c2, rt1.c0)) NOT BETWEEN ((vt0.c0, rt0.c0, rt0.c1)) AND ((rt1.c2, vt0.c0, rt1.c1))) ELSE ABS(DISTINCT rt1.c0) END FROM rt1, rt0, vt0 WHERE (CAST(NULL AS INTEGER)); -- 1ms;
SELECT DISTINCT COUNT((((rt1.c1, vt0.c0, rt0.c0))<=((rt1.c0, x'', rt1.c3)))) OVER () FROM rt1, vt0;SELECT ALL ((CAST(rt0.c2 AS BLOB))OR(rt0.c1)) FROM rt1 WHERE (TRIM(DISTINCT NULL) COLLATE RTRIM) LIMIT -1942350959;SELECT ((rt0.c0)&(((rt0.c1)LIKE(NULL)))), ((((rt1.c2) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL), (TOTAL(rt1.c3) IN ()) FROM rt1, vt0, rt0 WHERE (((CAST(x'' AS INTEGER))%(0.14882454457948335))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN NULL THEN rt1.c3 WHEN rt0.c0 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c1 ELSE rt1.c2 END AS INTEGER), CAST(((rt1.c1)IS(rt1.c2)) AS INTEGER), CASE WHEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))) THEN ((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)) ELSE ((((rt1.c3)AND(rt0.c0)))AND(rt1.c3)) END FROM rt1, vt0, rt0 WHERE (0Xffffffffc6a56430); -- 0ms;
SELECT DISTINCT ((((rt1.c3)OR(vt0.c0))) IS TRUE) FROM vt0, rt0;SELECT (- (((rt0.c2) NOT NULL))) FROM vt0, rt1 WHERE ((((((NULL IN ()))AND(0.816179403697994)))OR(CASE '494338845'  WHEN NULL THEN 1037085241 WHEN 594332173 THEN 0X8b4d7b8 WHEN '' THEN -831277101 WHEN '' THEN 0.2631894591212064 WHEN NULL THEN NULL END)));SELECT ((rt1.c2) BETWEEN (rt0.c0) AND (rt1.c3)) COLLATE BINARY, CASE WHEN (rt0.c2 IN ()) THEN CASE WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt1.c3 ELSE rt0.c0 END WHEN rt1.c2 COLLATE BINARY THEN ((rt1.c3) IS TRUE) WHEN (NOT (rt1.c3)) THEN ((NULL)>(rt0.c2)) END, (((x'5b55f53c'))!=((((rt0.c1) NOT BETWEEN (rt1.c2) AND (0.49469226238855535))))) FROM rt1 GROUP BY CAST((- (rt1.c1)) AS REAL) HAVING (- (((rt0.c2)=(rt1.c3))));SELECT DISTINCT LAG((((5.30220537E8))==((((rt1.c3)<<(NULL))))), CASE rt1.c2  WHEN rt0.c1 THEN rt0.c0 END COLLATE BINARY, ((0.2957329648701392) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c0) BETWEEN (rt1.c0) AND (rt0.c2))))) OVER () FROM rt1, vt0, rt0; -- 0ms;
SELECT (((rt0.c0 IN (vt0.c0, rt0.c2))) NOT BETWEEN ((rt1.c2 IN (rt0.c1, rt0.c1))) AND (x'')) FROM vt0 LIMIT -473384437 OFFSET -322226349;SELECT ALL ((((rt0.c1) IS FALSE)) IS TRUE) FROM rt0, rt1 WHERE ((NOT (((('', x'', '-1486963778')) NOT BETWEEN ((x'', 0.1661287678107951, '-2143569312')) AND ((2077509552, NULL, NULL)))))); -- 1ms;
SELECT ((((vt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)))/(CAST(rt1.c0 AS BLOB))) FROM vt0 WHERE (((+ (0.462827191769146)) IN ((+ (-796493802)), (((0xffffffff9b0dee91, x'', -1.430177069E9)) NOT BETWEEN (('-32374715', x'', '-170107442')) AND ((0.4239877705336481, NULL, '1495799522'))))));SELECT DISTINCT rt0.c1 FROM rt0, vt0, rt1 WHERE ((- (0.04193514132802112)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0;SELECT ((rt1.c2 COLLATE BINARY) BETWEEN (NULL COLLATE NOCASE) AND ((rt1.c2 IN ()))) FROM rt0 LIMIT 1830512589;SELECT (((rt0.c1)) BETWEEN ((((rt0.c0) NOT BETWEEN (rt1.c0) AND (vt0.c0)))) AND ((CAST(rt1.c2 AS NUMERIC)))), (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c2 WHEN '-1638678354' THEN rt0.c1 WHEN x'' THEN rt0.c1 WHEN rt1.c1 THEN rt1.c2 END IN ()), ((((((rt0.c2, '', rt1.c2, rt1.c3, rt0.c2)) NOT BETWEEN ((rt0.c1, vt0.c0, vt0.c0, x'', rt1.c3)) AND ((rt0.c0, rt1.c3, rt0.c2, rt1.c3, rt1.c0)))))<(((- (rt1.c2))))) FROM rt1;SELECT GROUP_CONCAT(((((((((rt1.c0)AND(rt0.c1)))OR(rt0.c0)))OR(NULL)))OR(rt0.c2)) COLLATE NOCASE) FROM rt1, vt0, rt0; -- 1ms;
SELECT ALL MIN(((1891633530) BETWEEN (vt0.c0) AND (rt1.c1))), CAST(rt0.c0 COLLATE RTRIM AS BLOB), CASE WHEN (vt0.c0 IN (rt0.c2)) THEN (rt0.c1 IN ()) END FROM rt1, rt0;SELECT DISTINCT (NOT ((rt0.c0 IN (rt0.c1)))) FROM rt0, vt0, rt1 WHERE (0.9277134819880082); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt1 WHERE (((HEX('-460817092'))>(((-2.123744334E9)/('1352111155'))))); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c1))<>(rt0.c1 COLLATE RTRIM)) FROM rt0, rt1; -- 0ms;
SELECT (NOT (((((rt1.c1)AND(rt0.c1)))OR(rt1.c3)))) FROM rt0 WHERE ((('t	') ISNULL));SELECT DISTINCT CASE WHEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt1.c3)) THEN (((rt1.c0)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0))) ELSE CAST(rt1.c3 AS TEXT) END FROM rt0, rt1, vt0 WHERE (((((0.8993637464180989)-(x''))) BETWEEN (((0x27348852) IS FALSE)) AND (-563424994 COLLATE RTRIM))); -- 0ms;
SELECT ((rt1.c0) IS FALSE) FROM rt1; -- 0ms;
SELECT CASE WHEN (((rt1.c1, vt0.c0, rt0.c0)) BETWEEN ((rt1.c3, vt0.c0, rt1.c3)) AND ((rt1.c3, rt0.c1, rt0.c2))) THEN MAX(rt1.c0) END FROM rt1, vt0, rt0; -- 0ms;
SELECT DISTINCT UNICODE(CASE rt0.c0  WHEN rt0.c2 THEN rt1.c2 END) FROM rt0, rt1, vt0 WHERE (((CASE WHEN '1395554181' THEN NULL END)>>(CAST('-2123744334' AS TEXT)))); -- 0ms;
SELECT (rt1.c0 IN ()), ((GROUP_CONCAT(vt0.c0))<<(((rt1.c1) NOT NULL))), ((((rt1.c3)=(rt1.c2)))OR((((rt0.c0))==((vt0.c0))))) FROM rt0, rt1;SELECT ((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))>=(rt1.c1 COLLATE NOCASE)) FROM vt0;SELECT ALL GROUP_CONCAT(((((((((NULL)OR(rt0.c1)))AND(rt1.c2)))OR(NULL)))OR(rt1.c2)) COLLATE NOCASE) OVER (), CAST((((rt0.c2))=((rt0.c0))) AS BLOB), ((TYPEOF(DISTINCT rt1.c1))=((rt0.c0 IN ()))) FROM rt0, rt1, vt0 WHERE (((((NULL)OR((('& cS[{z') BETWEEN ('') AND (NULL)))))OR(('D7' IN ())))); -- 0ms;
SELECT DISTINCT ((((rt0.c1))<=((rt0.c1))) IN (((rt0.c0)-(rt1.c1)))), '', SUM(CASE 0.7734631187592175  WHEN rt1.c1 THEN rt1.c2 ELSE rt1.c3 END) COLLATE NOCASE FROM rt1 WHERE (CAST(CASE 'u1e|Ia.yO'  WHEN '' THEN x'' WHEN 0.6837583326415944 THEN -1056730676 WHEN '-51017393' THEN '0.5867061905068099' ELSE 0.366732941044178 END AS TEXT));SELECT ((rt0.c1 COLLATE NOCASE)LIKE(CASE rt1.c0  WHEN rt1.c1 THEN rt1.c1 ELSE NULL END)) FROM rt1, rt0, vt0 WHERE ((('{S9\') NOTNULL) COLLATE RTRIM) GROUP BY (((((rt0.c1)<<('u2z'))))>=((vt0.c0 COLLATE NOCASE))); -- 1ms;
SELECT rt0.c1, ((((rt1.c3)<(rt1.c3)))>=((rt1.c2 IN (rt0.c0)))), x'3361', rt0.c2, rt1.c1 FROM vt0, rt0;SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (((((((((rt1.c3)OR(rt1.c2)))AND(rt1.c0)))OR(rt1.c2)))OR(vt0.c0))) AND (((x'')<>(rt1.c3)))) FROM rt1, rt0 CROSS JOIN vt0 ON rt1.c3 WHERE ((('1oS3I6i#' COLLATE NOCASE) BETWEEN ((((0.4709296931304474))>((NULL)))) AND ((((NULL))>((x'')))))); -- 0ms;
SELECT (NOT (LOWER(416816075))), COALESCE(((x'')/(rt0.c0)), rt1.c2 COLLATE BINARY), NULL, x'5f62' COLLATE BINARY, (((((rt1.c3)>(rt1.c3))))==(((((rt0.c1, rt1.c3, rt1.c2)) BETWEEN ((0X5c5e3b87, rt1.c0, rt1.c0)) AND ((rt1.c1, rt0.c2, rt1.c2)))))) FROM vt0, rt0, rt1 WHERE ((((-3.57162391E8, -2.143569312E9, '')) NOT BETWEEN ((((NULL)<(NULL)), CASE '2140162848'  WHEN x'' THEN '-549234041' ELSE '-1228818977' END, ABS(DISTINCT x'c73c'))) AND (((('-1051339832')!=(1.321141726E9)), (358158453 IN ()), (((0.11121477241054856, '', '-1399831024')) NOT BETWEEN ((0.10185230601549022, NULL, '-474554862')) AND (('K-㍑X-cHB', 0.9327726141338788, -404520438))))))); -- 0ms;
SELECT NULLIF(((rt1.c0)-(rt0.c2)), rt1.c1) FROM rt0, vt0;SELECT DISTINCT (((NOT (vt0.c0))) NOT NULL), (CAST(rt1.c0 AS REAL) IN ()), ((rt0.c0) IS FALSE) COLLATE NOCASE, LTRIM((+ (rt0.c0)), GROUP_CONCAT(rt1.c0)), (((COUNT(*), ((((((((rt1.c2)AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)), (('-86276866') IS TRUE), ((((rt1.c0)AND('')))AND(rt0.c0)), CAST(rt1.c2 AS TEXT)))>=((((rt1.c0)==(rt1.c1)), rt1.c1 COLLATE NOCASE, (((rt0.c2))<((rt0.c2))), (((('')OR(NULL)))OR(rt1.c2)), (((''))<((rt1.c3)))))) FROM rt1, vt0 WHERE (((('-94871844')OR('-EfTdy')) IN ((((0.7450808427103263)) NOT BETWEEN ((x'1293')) AND ((''))))));SELECT ((((((((((x'')AND(rt1.c1)))OR(rt1.c0)))AND(rt0.c0)))OR(rt0.c2)))AND(((rt1.c0)>=(rt0.c2)))), (((((+ (rt0.c1)))OR(((vt0.c0)&(rt1.c1)))))AND(COUNT(rt1.c1))), CASE (((rt0.c2, 'bQ', rt1.c2, rt1.c2, rt0.c0))==((rt0.c2, NULL, vt0.c0, rt1.c2, rt1.c2)))  WHEN CAST(rt1.c3 AS NUMERIC) THEN ((vt0.c0)AND(rt0.c0)) WHEN (+ (rt1.c3)) THEN CAST('1875850021' AS TEXT) WHEN TRIM(rt0.c2, rt0.c1) THEN rt1.c1 END FROM vt0 WHERE ((- (json_extract(-555735357, NULL))));SELECT DISTINCT ((((TOTAL(0Xffffffff8f95fb04))AND(((((rt0.c0)AND(rt1.c0)))AND(rt0.c0)))))AND(((rt0.c2) IS FALSE))) FROM rt1, vt0 WHERE (((((((((json_array_length(x'', 0.12977116103672182))AND((('') NOT BETWEEN (0.34277870421222467) AND (NULL)))))AND((x'65ac' IN ()))))AND(CAST(x'f690' AS NUMERIC))))AND(((((0.20786506047593767)AND(0.7695767300495692)))OR(NULL))))) ORDER BY x'' ASC;SELECT (NOT ((rt1.c0 IN (rt1.c0)))), (((((rt1.c1 IN (vt0.c0)))OR((~ (rt1.c2)))))AND(json_valid(rt0.c2))), LIKELIHOOD(LIKELY(rt1.c3), 0.9857944794241649) FROM vt0, rt0, rt1; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c0) BETWEEN (rt1.c2) AND (rt0.c2))) OVER (), ((AVG(rt1.c1))IS NOT(((rt1.c0) NOT NULL))), (- ((rt1.c2 IN ()))) FROM vt0, rt1, rt0 GROUP BY 0X1b655fd8 HAVING CASE (~ (rt1.c3))  WHEN x'' THEN rt1.c2 COLLATE BINARY WHEN json_extract(rt0.c2, vt0.c0, rt0.c0, vt0.c0, rt0.c0, rt1.c2) THEN MIN(NULL) WHEN ((rt0.c1) NOT NULL) THEN (((rt1.c2))!=((rt0.c1))) END;SELECT ((TOTAL('42346505'))LIKE(CAST(x'f9a6' AS NUMERIC))) FROM rt1, rt0 WHERE (CASE WHEN ((NULL)==(0Xffffffffc4fb018b)) THEN (((0.7071810543548556))>=((252687101))) WHEN (('0.6954292203560871')LIKE(x'7261')) THEN ((0Xffffffffe8a57459) NOT BETWEEN ('FALSE') AND (x'')) WHEN CAST(x'5181' AS TEXT) THEN HEX(DISTINCT NULL) ELSE CAST('F|HBNsNZ' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT 'ꨂj', 0.7027093301420714, rt1.c2 FROM rt1, vt0 WHERE (ABS(DISTINCT RTRIM('497968451'))) ORDER BY CASE CAST(rt1.c1 AS TEXT)  WHEN ((rt1.c0)<(vt0.c0)) THEN ((((rt1.c1)OR(rt0.c0)))AND(rt0.c0)) ELSE CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c2 WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c1 THEN vt0.c0 WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c3 THEN rt1.c2 END END DESC LIMIT 297824224;SELECT ((COUNT(rt0.c2)) NOT BETWEEN (0.31163458845247716 COLLATE BINARY) AND (rt1.c0)), (~ (((rt1.c2)>>(rt0.c2)))), ((NOT (rt1.c3)) IN ()) FROM rt1, vt0 WHERE ((('')LIKE(IFNULL('ot}8+', ' \xPA')))) LIMIT 123172988 OFFSET 139361057;SELECT CASE WHEN rt0.c2 COLLATE RTRIM THEN ((rt1.c3) NOTNULL) ELSE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt1.c2)) END FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((((rt1.c2) NOT BETWEEN (rt0.c2) AND (rt1.c2)))=((+ (rt0.c2)))) FROM rt1 WHERE ((((((x'c4a4'))>(('')))) BETWEEN (CASE x''  WHEN 'Uo' THEN '1505156462' ELSE '%2Pwy*' END) AND ('1721526335')));SELECT ALL ((rt0.c2) BETWEEN (MIN(rt0.c0)) AND (((rt1.c2)<=(rt1.c3)))) FROM rt1, vt0, rt0 LIMIT 1; -- 1ms;
SELECT DISTINCT CASE CASE WHEN x'' THEN vt0.c0 ELSE x'' END  WHEN rt1.c0 COLLATE BINARY THEN (('-1564476298') NOT BETWEEN (rt1.c1) AND (vt0.c0)) WHEN rt1.c0 COLLATE NOCASE THEN ((((rt1.c1)AND(rt0.c0)))OR(rt1.c0)) WHEN ((rt1.c3)AND(rt1.c3)) THEN (- ('&]){}*')) ELSE CAST(rt1.c0 AS REAL) END FROM rt0, rt1 WHERE ((((('+o') BETWEEN ('-1e500') AND (''))) NOTNULL));SELECT ALL ((CASE rt1.c0  WHEN x'7966d64d' THEN rt0.c2 END)IS(((rt1.c3)<<(rt1.c2)))), ((((rt0.c2)LIKE(vt0.c0))) NOT NULL), (rt1.c0 COLLATE RTRIM IN ()) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL rt0.c0 FROM rt1, rt0, vt0; -- 0ms;
SELECT ALL (NOT ((NOT (vt0.c0)))) FROM vt0, rt1, rt0 ORDER BY rt0.c1  NULLS LAST LIMIT -1847303230; -- 2ms;
SELECT ALL (((('x	J*J') IS TRUE))IS NOT((x'' IN (rt0.c0, rt0.c1)))), UPPER(DISTINCT MAX(rt0.c0)), ((((((((((((((vt0.c0)/(vt0.c0)))OR(CASE WHEN rt1.c2 THEN rt1.c3 ELSE x'' END)))AND(TRIM(rt1.c1))))OR((- (rt1.c3)))))OR(((rt0.c1)IS NOT(rt1.c3)))))OR(CAST(rt1.c2 AS REAL))))AND(rt1.c2)), CUME_DIST() OVER ( GROUPS (((rt1.c0 IN ())) NOT BETWEEN (0x1927038b) AND (CAST(rt1.c3 AS NUMERIC))) PRECEDING EXCLUDE GROUP), ((((0.11901033290373586)OR(rt1.c3))) NOT BETWEEN (((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))) AND (((rt1.c2)/(rt1.c1)))), ((((((rt0.c2)AND('')))AND(rt0.c2)))AND((- (rt1.c0)))), (((((rt1.c0) NOT NULL)))<((CAST(rt1.c2 AS TEXT)))) FROM vt0, rt1, rt0; -- 1ms;
SELECT DISTINCT (rt1.c2 IN (rt0.c0, TRIM(rt1.c3, rt1.c0))), CASE WHEN rt0.c2 COLLATE BINARY THEN CAST(vt0.c0 AS NUMERIC) END, (((rt1.c0)+(rt0.c1)) IN ((NULL IN ()))) FROM rt0, vt0 INNER JOIN rt1 ON CAST(NULL AS TEXT); -- 0ms;
SELECT ALL CASE WHEN ((rt1.c1) NOTNULL) THEN ((((rt1.c2)AND(rt0.c1)))AND(rt0.c0)) ELSE ((rt0.c2)=(rt1.c2)) END FROM rt1, rt0; -- 0ms;
SELECT ALL ('*nꍡ	/5	' IN ()) FROM vt0, rt1 LIMIT 708709005; -- 1ms;
SELECT DISTINCT (((+ (rt0.c0))) NOT BETWEEN (((((((((vt0.c0)AND(vt0.c0)))AND(rt1.c0)))OR(rt0.c1)))AND(rt1.c2))) AND ((rt1.c3 IN (rt1.c3)))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL ((((x'70e1')%(rt1.c1))) IS TRUE), rt0.c0, ((vt0.c0)-(rt0.c2)) COLLATE RTRIM FROM rt1, vt0 WHERE (0Xffffffff94e2af03);SELECT DISTINCT vt0.c0 FROM vt0 WHERE (((((NULL) IS FALSE))!=(ABS(x'')))); -- 0ms;
SELECT ((NOT (rt0.c1)) IN ()) FROM rt0, rt1, vt0 WHERE (TRIM(((('-170107442')) NOT BETWEEN ((NULL)) AND ((0.9994779978711653))))); -- 0ms;
SELECT DISTINCT ((((((x'')OR(rt1.c0)))OR(rt1.c1))) NOT BETWEEN ((((vt0.c0))=((vt0.c0)))) AND ((479545424 IN ()))) FROM vt0, rt1 WHERE ((CASE ''  WHEN x'11bb' THEN '\n(貓D讝R\ [' ELSE x'3cec' END IN ())); -- 0ms;
SELECT DISTINCT (- (rt0.c1 COLLATE BINARY)) FROM rt0, rt1, vt0 WHERE (x''); -- 0ms;
SELECT CASE WHEN MIN(rt1.c0) THEN CASE rt1.c0  WHEN rt1.c3 THEN rt1.c2 END WHEN vt0.c0 COLLATE NOCASE THEN (~ (vt0.c0)) WHEN ((rt1.c0) NOT BETWEEN (vt0.c0) AND (rt0.c2)) THEN rt1.c0 ELSE (~ (vt0.c0)) END FROM rt1, vt0;SELECT ALL LOWER(DISTINCT CAST(vt0.c0 AS REAL)), ((((((rt0.c2)|(rt1.c3)))AND(((rt1.c3)||(rt0.c2)))))OR(x'6a7d')), ((CASE rt0.c1  WHEN NULL THEN vt0.c0 ELSE '-1051339832' END)-(CASE rt1.c2  WHEN rt1.c0 THEN rt0.c2 END)) FROM rt0;SELECT vt0.c0 FROM rt1 LIMIT -1220011198 OFFSET -1771887034;SELECT DISTINCT ((('-460817092'))>=(('Uo旊#4M'))), CASE (((rt0.c1))>((rt1.c0)))  WHEN COUNT(*) THEN COUNT(rt0.c0) WHEN CAST(rt0.c1 AS INTEGER) THEN ((rt0.c2)GLOB(rt0.c0)) WHEN CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt1.c0 END THEN (~ (rt1.c0)) END, ((CASE WHEN rt0.c1 THEN rt0.c1 END)<=(vt0.c0)) FROM rt1 WHERE (TRIM(DISTINCT '9(K', 0.44141916102693146) COLLATE BINARY) GROUP BY (((rt0.c2 IN (vt0.c0, 'gͫ*xnk', rt0.c1))) NOT BETWEEN (((rt0.c2)OR(vt0.c0))) AND (((rt1.c2)IS NOT(rt1.c0)))) HAVING SUM((((rt1.c1)) BETWEEN ((rt0.c0)) AND ((rt1.c3))));SELECT DISTINCT ((rt0.c2)<=(rt1.c2)) COLLATE NOCASE FROM rt1;SELECT ALL rt1.c3 FROM vt0, rt0 WHERE (((json_quote(NULL)) IS FALSE));SELECT DISTINCT CAST((- (rt1.c2)) AS REAL) FROM vt0, rt0 WHERE (json_array((((-1519071108))>((x'93c6'))), 0.15487069015217658)) ORDER BY -2.067586297E9 ASC  NULLS LAST, (((rt0.c2) IS FALSE) IN ());SELECT DISTINCT COUNT(((((vt0.c0)AND(rt0.c2)))AND(rt0.c1))) OVER () FROM rt1;SELECT (NOT (rt1.c0 COLLATE BINARY)) FROM rt1, rt0, vt0; -- 0ms;
SELECT SUM(rt0.c2) FROM rt0, vt0; -- 1ms;
SELECT DISTINCT (~ ((((rt1.c2)) NOT BETWEEN ((rt1.c3)) AND ((vt0.c0))))) FROM vt0, rt1 WHERE (CAST(CAST(NULL AS INTEGER) AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(TRIM(rt1.c1, vt0.c0)), GROUP_CONCAT((rt0.c2 IN ())) OVER (), (+ (CASE WHEN rt1.c0 THEN NULL END)) FROM vt0 WHERE (CAST(((x'') IS FALSE) AS BLOB));SELECT DISTINCT SUM((((rt1.c3))<>((vt0.c0)))) OVER (), GROUP_CONCAT((rt1.c0 IN ())) OVER ( PARTITION BY ((((((((-8.07927813E8)OR(vt0.c0)))OR(rt0.c2)))OR(rt1.c2 COLLATE RTRIM)))AND(((rt1.c2)==(rt0.c0)))), NULL), MIN(AVG(CASE WHEN rt0.c2 THEN rt1.c1 END)) FROM rt1, rt0, vt0 WHERE ((((-210565135) IS FALSE) IN ()));SELECT DISTINCT COUNT(CAST(rt1.c2 AS BLOB)) FROM vt0 WHERE (CAST((((NULL, 0.5459474231611524, NULL))=((x'', 0.01662463005790893, NULL))) AS INTEGER));SELECT DISTINCT UNLIKELY(((rt0.c0) IS FALSE)), (((rt1.c2) ISNULL) IN ()), LEAD(((((rt1.c3)AND(TRIM(rt0.c1, rt1.c0))))AND(((rt1.c0)%(rt0.c2)))), MAX(CAST(x'4934' AS NUMERIC), CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt0.c0 END), ((((rt0.c0)>(rt1.c3)))&('1633912630'))) OVER (), (((+ (rt0.c2))) BETWEEN (((rt0.c2) NOT BETWEEN (vt0.c0) AND ('0.22557913159953813'))) AND (IFNULL(DISTINCT rt0.c1, rt1.c2))), ((CAST(rt0.c2 AS BLOB))<<(UNLIKELY(x''))) FROM rt1, rt0 WHERE (CASE ''  WHEN ((((((((0.8932683412832897)AND(5.30220537E8)))OR(0.7422454076724662)))AND(NULL)))OR('')) THEN 0.6334102543394963 COLLATE BINARY WHEN CASE 0.7885506310754598  WHEN 2.017317131E9 THEN NULL WHEN 'FALSE' THEN '1926180155' WHEN 2142696112 THEN x'' END THEN 0.5493624363930238 COLLATE BINARY WHEN (- (x'1f16')) THEN CASE WHEN NULL THEN 'ZG쨍#Je' END END);SELECT ALL ((((((((((rt1.c1) NOT NULL))AND(AVG(''))))OR(((rt1.c2)==(rt1.c3)))))OR(((vt0.c0)<=(rt1.c0)))))AND(CASE rt1.c3  WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END)), CASE CAST(rt1.c3 AS INTEGER)  WHEN SUM(rt0.c0) THEN ((rt1.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END, LAG(((((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))OR(x'c1a4')))OR(rt1.c2)), rt1.c2, ((((((rt1.c1)AND(rt1.c3)))OR(rt1.c0)))<((rt1.c3 IN (rt1.c0, rt1.c0))))) OVER () FROM vt0 FULL OUTER JOIN rt1 ON CASE WHEN ((rt0.c2)|(rt1.c1)) THEN CAST(rt0.c2 AS INTEGER) ELSE CAST(rt0.c1 AS REAL) END;SELECT ALL NULLIF(CASE WHEN rt0.c2 THEN rt0.c0 END, rt1.c3) FROM rt1, rt0, vt0 WHERE ((+ (((x'91ce') NOT BETWEEN ('-304429724') AND (0.4909128065178451))))); -- 1ms;
SELECT 0.9352608158943281 FROM rt0, vt0; -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY)+(UNLIKELY(rt1.c0))) FROM rt1, rt0, vt0 GROUP BY ((((rt1.c0) NOT BETWEEN (rt1.c1) AND (rt1.c1)))+(IFNULL(rt0.c2, rt1.c1))) HAVING ((('-1015237587') BETWEEN (0.6950643590591817) AND (rt0.c0)) IN ()); -- 1ms;
SELECT ALL MAX((((rt1.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt1.c0)))) FROM rt0, vt0;SELECT ALL 'g''', CASE (rt1.c0 IN ())  WHEN (rt0.c2 IN (rt1.c0)) THEN ((rt1.c0)IS NOT(rt1.c1)) ELSE (((rt1.c0, rt1.c2, rt0.c1))<((vt0.c0, rt1.c2, rt0.c1))) END, (((vt0.c0 IN ()))GLOB(CASE WHEN rt1.c3 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c0 WHEN rt0.c0 THEN rt0.c0 END)), IFNULL(DISTINCT NULLIF(DISTINCT rt0.c1, rt1.c0), ((rt1.c3) NOT NULL)), CAST(NULL AS BLOB) FROM rt0, rt1, vt0; -- 0ms;
SELECT ALL NULL, CASE 0X59e6dba1 COLLATE RTRIM  WHEN vt0.c0 COLLATE NOCASE THEN COUNT(rt1.c1) WHEN ((vt0.c0)LIKE(rt1.c1)) THEN CASE WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c2 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 WHEN NULL THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 END WHEN ((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c1)) THEN (rt0.c0 IN (vt0.c0)) END, ((rt0.c1) NOTNULL) COLLATE RTRIM FROM rt0 WHERE ((((((0x36e9199a)OR('_~Q?')))OR(-1.523430826E9)) IN ())) LIMIT 524089967;SELECT DISTINCT RANK() OVER ( PARTITION BY LIKELY(DISTINCT ((rt0.c1)<<(rt1.c1))), ((((rt1.c1)>>(rt0.c1))) NOT BETWEEN (((rt1.c3)/(rt0.c0))) AND ((~ (rt0.c1)))), (((((vt0.c0))>((rt0.c1))))-(((((rt1.c0)OR(0.7290289593254473)))OR('7<h/mc,')))), ((CAST(rt0.c0 AS TEXT))>(load_extension(vt0.c0, rt1.c1)))) FROM vt0, rt0, rt1 WHERE (((((NULL)>=(NULL))) NOTNULL)); -- 0ms;
SELECT TOTAL(CASE rt1.c3  WHEN rt0.c0 THEN rt1.c2 ELSE rt1.c0 END) FROM rt1;SELECT ALL ((vt0.c0) IS TRUE) COLLATE RTRIM, NULLIF(((rt1.c2)>(rt0.c2)), ((rt1.c0)&(rt1.c1))), rt1.c2 FROM vt0 WHERE (((((('-1684827141')OR(0xfffffffff9b1e336))))<(((((('-1649308657')AND(x'')))AND('-1412619965'))))));SELECT DISTINCT ((((rt1.c2)&(rt1.c2))) IS TRUE), SUM(((rt0.c2) NOT BETWEEN (NULL) AND (rt1.c3))) OVER ( ORDER BY ((rt1.c1)|(rt0.c0)) COLLATE RTRIM ASC, IFNULL(DISTINCT rt1.c0 COLLATE NOCASE, CASE rt1.c1  WHEN rt1.c3 THEN 0.9153942103638442 WHEN rt0.c2 THEN rt0.c1 WHEN vt0.c0 THEN x'' ELSE rt0.c2 END) ASC  NULLS FIRST), (NOT (((vt0.c0)IS(rt1.c3)))) FROM rt0, rt1, vt0 GROUP BY (((rt1.c0)AND(vt0.c0)) IN (CASE WHEN rt0.c2 THEN rt1.c2 END)); -- 2ms;
SELECT ALL CASE WHEN ((rt0.c2)<=('-807927813')) THEN rt0.c0 COLLATE BINARY ELSE (((rt0.c0, vt0.c0, rt1.c3))<=((vt0.c0, rt1.c3, x''))) END FROM rt0, vt0, rt1 WHERE (((CAST(x'' AS NUMERIC)) NOT NULL)) LIMIT 211202060; -- 1ms;
SELECT DISTINCT ((((rt1.c3 IN ())))<((((rt0.c0)IS(vt0.c0))))), (((rt1.c2) NOTNULL) IN ()), COUNT(((rt1.c3)IS(rt0.c2))) OVER ( ROWS BETWEEN ((((((rt1.c0)||(vt0.c0)))AND((+ (rt1.c2)))))OR(rt0.c1 COLLATE BINARY)) PRECEDING AND (((TRIM(rt0.c0, vt0.c0)))!=((((rt0.c1) NOT NULL)))) FOLLOWING) FROM vt0 WHERE ((+ ((((-1072169033))>=((0.08134374573184311))))));SELECT ALL ((((((rt0.c2)AND(rt1.c0)))OR(rt1.c1))) ISNULL) FROM vt0, rt0, rt1 WHERE ((((((NULL) NOTNULL)))!=((CAST(0.772148657797897 AS BLOB))))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT (~ (vt0.c0))) FROM rt0, rt1 ORDER BY (((((('~|(E')OR(rt1.c0)))OR(rt1.c3)))GLOB(LIKELY(DISTINCT rt1.c2))) ASC  NULLS FIRST;SELECT DISTINCT CAST((rt1.c0 IN (rt0.c2)) AS REAL), LIKELIHOOD(CAST(rt1.c3 AS TEXT), 0.10441855634820685), ((rt0.c2)=((((x'')) NOT BETWEEN ((x'')) AND ((rt1.c3))))) FROM vt0 GROUP BY CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt1.c3 END THEN NULL COLLATE RTRIM END LIMIT 1298312155;SELECT rt1.c1 FROM rt1; -- 0ms;
SELECT DISTINCT (((rt1.c3 IN ())) NOT NULL), TOTAL(161022386), SUM(IFNULL(DISTINCT rt1.c2, 0.42311037777629934)) OVER () FROM rt0 LIMIT 1363833961 OFFSET -720713705;SELECT DISTINCT ((SUBSTR(rt1.c3, rt1.c3))AND(UPPER(rt0.c2))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (((rt1.c3) BETWEEN (rt0.c0) AND (rt0.c0)) IN (((vt0.c0)+(rt0.c0)))), CASE ((rt1.c0)<>(rt0.c1))  WHEN ((((((((rt1.c1)AND(rt1.c1)))AND(vt0.c0)))OR(NULL)))OR(vt0.c0)) THEN ((((rt1.c3)OR(rt0.c1)))AND(rt1.c1)) ELSE (rt1.c3 IN (rt1.c1)) END, (+ ((rt0.c1 IN ()))) FROM vt0 NOT INDEXED, rt1 WHERE (((IFNULL(x'a665', 0.906173771084607))%((('-1051339832') ISNULL))));SELECT DISTINCT (CAST(rt1.c2 AS INTEGER) IN ((rt0.c2 IN ()), 0.36670905861880976)) FROM rt0, rt1; -- 0ms;
SELECT ALL rt1.c0, ((((rt1.c0) ISNULL))=(rt1.c1)), CAST(((rt1.c1) BETWEEN (vt0.c0) AND (rt1.c0)) AS NUMERIC) FROM rt0, vt0;SELECT rt0.c1, ((((NULL) NOT BETWEEN (vt0.c0) AND (rt1.c1))) BETWEEN (rt1.c3 COLLATE BINARY) AND ((rt0.c1 IN ()))), CAST((vt0.c0 IN ()) AS REAL) FROM vt0 ORDER BY ((((((((((((rt0.c1)OR(rt1.c2)))OR(rt0.c2)))AND(rt0.c2)))OR(rt1.c1)))AND(rt0.c1)))AND(rt0.c1)) COLLATE RTRIM DESC, x'' COLLATE RTRIM DESC  NULLS LAST, rt0.c0;SELECT DISTINCT rt0.c0 FROM rt1;SELECT DISTINCT (((rt1.c3, rt0.c1, rt1.c0)) NOT BETWEEN ((((rt1.c2)+(rt0.c1)), (rt0.c2 IN ()), (rt1.c0 IN ()))) AND ((rt1.c0 COLLATE NOCASE, rt0.c1 COLLATE BINARY, rt0.c0 COLLATE NOCASE))) FROM rt1 ORDER BY CASE WHEN rt0.c2 THEN ((((((((((((rt1.c1)AND(rt1.c0)))OR(rt0.c2)))OR(rt1.c1)))AND(x'ef64')))OR(vt0.c0)))OR(rt1.c1)) END  NULLS LAST;SELECT ((((vt0.c0 COLLATE BINARY)AND(rt0.c1)))OR(rt0.c0)) FROM vt0, rt1 WHERE (CASE (((0.16264386055123148))>((x'')))  WHEN (('931879940')&(0.8298979294358017)) THEN '' END);SELECT NULL FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt1.c0 COLLATE NOCASE) IS FALSE) FROM vt0, rt1, rt0 WHERE (((((x'')|('-617679276')))&((('J~qGt')AND(0.5289697972865004))))); -- 0ms;
SELECT DISTINCT AVG(rt1.c3) OVER () FROM rt0, rt1, vt0; -- 1ms;
SELECT DISTINCT (((((vt0.c0, 0.42140477961851175, rt1.c2)) BETWEEN ((rt1.c0, rt0.c0, rt1.c3)) AND ((rt0.c1, rt1.c2, rt1.c0))))AND(((rt1.c3) NOT NULL))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL (NOT (rt0.c0)) COLLATE NOCASE FROM rt1, rt0, vt0 GROUP BY ((LIKELIHOOD(DISTINCT rt1.c3, 0.7367763486240474)) NOT NULL), ((((rt1.c2)LIKE(rt1.c3))) NOT BETWEEN (TRIM(rt0.c2)) AND (CAST(rt0.c0 AS BLOB))), '-1343289956', (((rt0.c1 IN ())) NOTNULL), (((rt0.c0 IN ())) BETWEEN ((NOT (rt0.c0))) AND (vt0.c0 COLLATE RTRIM)); -- 2ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, rt1 WHERE (((((-447928615) BETWEEN (0.1364000334219957) AND (0.37061621751446394)))+(((0Xffffffffbbdee33f)IS NOT(NULL))))) ORDER BY ((HEX(rt1.c2))||(rt1.c0))  NULLS FIRST, CAST(CASE rt1.c3  WHEN x'' THEN rt1.c3 ELSE rt0.c1 END AS TEXT) ASC;SELECT DISTINCT (((rt1.c2, rt1.c3, rt1.c2)) NOT BETWEEN ((((rt1.c2) NOT NULL), (~ (rt0.c2)), ((rt0.c2)<=(rt1.c1)))) AND ((0.8885416775952817, x'', ((rt1.c3)OR(rt1.c0))))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (~ ('OwlTo{/5')), (((((rt1.c1)) NOT BETWEEN ((vt0.c0)) AND ((rt0.c0))))*((rt0.c1 IN ()))), (NOT ((((rt1.c2))<((rt0.c1))))) FROM rt0, rt1, vt0 WHERE (((CAST(NULL AS TEXT))||(0.24036334383914293))) LIMIT 1929522784 OFFSET -1673142544; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT TOTAL(rt1.c2), ((rt0.c0) IS FALSE)) FROM vt0, rt0 WHERE (-1.523430826E9 COLLATE BINARY COLLATE NOCASE COLLATE RTRIM);SELECT DISTINCT ((((rt1.c1) NOT BETWEEN ('<wwq+dGq') AND (rt0.c1))) NOT BETWEEN (rt1.c3 COLLATE NOCASE) AND (CAST(rt1.c2 AS TEXT))), LEAD(vt0.c0, CASE CASE vt0.c0  WHEN 'YZ[꙰&僻' THEN vt0.c0 END  WHEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)) THEN CAST(vt0.c0 AS NUMERIC) ELSE x'9a26' END, (((vt0.c0) NOT NULL) IN ())) OVER (), (((x'')) BETWEEN (((((NULL))>=((rt1.c0))))) AND ((((rt0.c2) IS FALSE)))) FROM vt0;SELECT DISTINCT ((rt1.c1) BETWEEN (((rt0.c1) NOT NULL)) AND (((rt1.c1) NOT BETWEEN (rt0.c2) AND (vt0.c0)))) FROM vt0, rt1, rt0 WHERE (((((('-413166358') BETWEEN (NULL) AND (NULL))))<(((((NULL))!=((x''))))))); -- 0ms;
SELECT ALL ((rt1.c1)>>(rt0.c1)) COLLATE NOCASE, CASE WHEN MAX(rt1.c1) THEN ((rt1.c2)>=(rt0.c2)) END, LTRIM(load_extension(rt0.c0), rt1.c3) FROM rt1, vt0 WHERE (LIKELIHOOD((((('-1833075927')AND(0.15675353494033695)))OR(0.5277490884922841)), 0.6981825337136937));SELECT ALL '1597628670', COUNT(((x'')=(rt0.c0))), AVG(((vt0.c0) NOTNULL)) OVER () FROM vt0, rt1;SELECT GROUP_CONCAT(rt1.c1) FROM rt0, rt1, vt0; -- 1ms;
SELECT ALL ((CAST(rt1.c1 AS INTEGER))|(MIN(rt1.c1))), ((((((((((rt0.c1)OR('-1247983780')))AND(rt1.c2)))AND(rt0.c1)))AND(rt1.c0))) IS FALSE), CAST(GROUP_CONCAT(0.08869232049977727) AS INTEGER) FROM rt1, rt0 WHERE (((((((((((-7.80263355E8) NOT BETWEEN (x'0791') AND (NULL)))AND(UNLIKELY(x''))))OR(LENGTH(NULL))))AND((- (0.4109620434660325)))))AND(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT ((json(rt1.c3)) IS FALSE) FROM vt0, rt0, rt1 WHERE (((((NULL)<<('&ﱶc>k2'))) BETWEEN ((NULL IN ('1845423821', 0Xffffffff9746e622))) AND (CAST(0.8936371510131409 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (- (rt1.c2)) FROM rt1, vt0, rt0; -- 0ms;
SELECT DENSE_RANK() OVER (), ((((((((CAST(rt0.c0 AS REAL))OR((rt0.c1 IN ()))))OR(rt0.c1)))AND(0.7647673213879415)))OR(CAST(rt0.c0 AS NUMERIC))), ROW_NUMBER() OVER ( GROUPS ((rt0.c2 IN ()) IN ()) PRECEDING EXCLUDE CURRENT ROW), ((vt0.c0) NOT NULL) COLLATE BINARY, ((rt1.c1)%(((rt0.c0) BETWEEN (rt0.c1) AND (NULL)))) FROM vt0, rt0, rt1; -- 2ms;
SELECT ALL (((rt1.c1)>(rt0.c0)) IN ()) FROM rt1 WHERE (LIKELIHOOD((((x'', x'', x''))=((-1.253341851E9, NULL, 0.23196868224862555))), 0.9347146732434974)); -- 0ms;
SELECT DISTINCT ((rt1.c1) NOTNULL), 0.20585800638470053, ((x'') BETWEEN (((rt1.c2)IS NOT(rt0.c0))) AND ((rt1.c1 IN ()))) FROM vt0, rt0 GROUP BY CASE WHEN CASE WHEN vt0.c0 THEN rt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN rt0.c2 END THEN (+ (rt1.c1)) ELSE ((vt0.c0) NOT BETWEEN (rt0.c2) AND (rt1.c2)) END;SELECT DISTINCT -4.74554862E8 FROM vt0, rt0, rt1 WHERE (CASE -754449628  WHEN '䞰,3c' THEN '' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((vt0.c0)IS(rt0.c0)) COLLATE RTRIM, CAST(((vt0.c0) NOT NULL) AS REAL), CUME_DIST() OVER () FROM vt0, rt1, rt0 WHERE (((CAST(0.9306713460749974 AS TEXT))>(LOWER(DISTINCT 0.33112899207271496)))); -- 1ms;
SELECT ALL (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) FROM vt0, rt0 WHERE ((((('>%&D쿟x') BETWEEN (NULL) AND (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE ((rt0.c0)|(rt1.c0))  WHEN CASE rt1.c1  WHEN rt0.c2 THEN rt0.c0 WHEN rt1.c1 THEN vt0.c0 WHEN 'ꨂj' THEN vt0.c0 END THEN (((rt1.c2))<=((rt1.c3))) ELSE ((rt1.c0) NOT BETWEEN (rt0.c1) AND (rt1.c0)) END FROM rt1 WHERE ('0.4456239614614623' COLLATE RTRIM);SELECT DISTINCT ((load_extension(rt1.c3, rt1.c2))||(vt0.c0)), COUNT(*) OVER (), TOTAL(IFNULL(rt1.c3, rt0.c0)) FROM vt0, rt1 WHERE ('PU39O]≩X*' COLLATE BINARY) ORDER BY (CAST(rt0.c1 AS NUMERIC) IN ()) ASC  NULLS LAST, ((rt1.c3)/('0.28546834605974836')) COLLATE NOCASE DESC;SELECT ALL GROUP_CONCAT(CAST(rt0.c1 AS TEXT)), NULL, '-710233408' FROM vt0, rt1;SELECT DISTINCT ((('<wwq+dGq')) BETWEEN ((((((rt1.c1)AND(rt0.c1)))AND(rt1.c1)))) AND ((((rt0.c0) IS FALSE)))) FROM vt0;SELECT DISTINCT x'' FROM vt0, rt1, rt0 ORDER BY (((rt0.c2)OR(vt0.c0)) IN (((rt1.c0) NOTNULL), (((rt0.c2)) BETWEEN ((rt1.c3)) AND ((rt1.c0))))); -- 1ms;
SELECT DISTINCT HEX(((((rt0.c0)OR(rt1.c0)))OR(rt0.c0))) FROM vt0, rt0 WHERE ((((x'')) BETWEEN ((json_patch('<FWED戇', NULL))) AND ((0.9436962702459573)))) LIMIT -29324909;SELECT CASE ((NULL) BETWEEN (vt0.c0) AND (rt0.c2))  WHEN (~ (rt0.c2)) THEN TOTAL(rt0.c1) END, SUM(rt1.c0), COALESCE(((vt0.c0) BETWEEN (vt0.c0) AND (rt0.c0)), TOTAL(rt0.c1)), (((NOT (rt1.c2)))<(((vt0.c0) NOTNULL))), rt0.c0 FROM rt0 GROUP BY CAST(((((((((rt0.c2)OR(rt1.c0)))OR(rt1.c1)))OR(rt0.c1)))OR(rt0.c2)) AS TEXT);SELECT DISTINCT COUNT(*) OVER (), COUNT(CAST(vt0.c0 AS BLOB)) OVER ( GROUPS ((ABS(vt0.c0)) IS TRUE) PRECEDING EXCLUDE TIES), PERCENT_RANK() OVER () FROM rt1, rt0;SELECT rt1.c3 FROM rt1; -- 0ms;
SELECT DISTINCT CAST(((rt1.c0)*(rt0.c1)) AS INTEGER), (((-1980181193)) NOT BETWEEN ((((rt1.c3) NOT BETWEEN (rt0.c1) AND (vt0.c0)))) AND ((rt1.c1 COLLATE RTRIM))), (- ((rt1.c3 IN (vt0.c0)))) FROM rt1 WHERE ('_K-5x몫/<9');SELECT DISTINCT NULL FROM rt1, vt0, rt0 ORDER BY ((((((((CASE WHEN ',瞡WU9,B꙰' THEN rt1.c3 END)AND(((((rt1.c1)AND(rt1.c0)))AND(rt1.c1)))))AND(((((((((rt1.c1)OR(rt0.c0)))OR(rt1.c1)))OR(vt0.c0)))AND(rt0.c1)))))AND(((rt1.c3) IS FALSE))))AND(TRIM(rt1.c2, rt1.c2))) ASC  NULLS LAST; -- 0ms;
SELECT ((rt1.c3 COLLATE BINARY) NOT BETWEEN (((NULL) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt1.c3)-(rt1.c0)))), ((NULL)>=(((rt1.c1) ISNULL))), ((((((((((rt0.c1)AND(rt0.c0)))AND(rt1.c3)))AND(rt0.c0)))AND(rt0.c1)))||(((rt1.c2) BETWEEN ('6	') AND (vt0.c0)))) FROM rt0, vt0, rt1 WHERE (CASE WHEN (- ('닯NaP㌈凲\rhU')) THEN CAST(NULL AS BLOB) ELSE NULL END); -- 4ms;
SELECT rt0.c0, COUNT(((((((((rt1.c0)AND(rt1.c2)))AND(rt1.c0)))AND(rt0.c1)))OR(vt0.c0))) OVER (), ((SQLITE_COMPILEOPTION_USED(rt1.c1))/(rt1.c3 COLLATE NOCASE)) FROM vt0 WHERE (0.17362436411363602);SELECT DISTINCT MAX(CAST(vt0.c0 AS INTEGER)) FROM rt1;SELECT ALL SUM((((vt0.c0, rt1.c3, rt1.c2))>((rt1.c1, rt0.c0, rt1.c3)))) OVER () FROM rt1, vt0, rt0 WHERE ((((0.44767549382496097))!=((NULL))) COLLATE NOCASE) GROUP BY ((rt1.c2)>=(vt0.c0)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CHAR((NOT (rt0.c2))) FROM rt1, rt0; -- 0ms;
SELECT DISTINCT '-720713705', (- ((((NULL, vt0.c0, rt1.c3)) BETWEEN ((rt0.c0, vt0.c0, rt1.c2)) AND ((rt0.c1, rt1.c1, rt1.c1))))), (LIKELIHOOD(rt1.c2, 0.12503020863400505) IN ()) FROM rt1, vt0, rt0 LIMIT -729156168; -- 0ms;
SELECT ALL (((vt0.c0)<(vt0.c0)) IN (TOTAL(rt0.c2), ((rt0.c0) BETWEEN (rt1.c0) AND (vt0.c0)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt1, rt0, vt0 WHERE (CASE DATE('-1969498190', 0.549437576828438, '-921009406', 0.8815599848972534, 'Po', 0Xffffffffa1c9ebe8, 0.19465862114977062)  WHEN NULL COLLATE BINARY THEN (((('')OR(x'')))AND('-1023016861')) WHEN CASE 'mLrcK>L'  WHEN NULL THEN x'5a20' WHEN 'I2' THEN -147844235 WHEN '1558137538' THEN x'663b487d' WHEN 0.6477686344057502 THEN '㍄[fQk' WHEN '&zv' THEN '1524737162' END THEN (+ ('0.8448941563175311')) WHEN (((('Fs')OR('	)N\n\r4S㝓⺆')))OR('-304429724')) THEN ((x'')OR(x'')) WHEN (x'' IN ()) THEN CASE x''  WHEN '' THEN 0.5220998544812655 END WHEN (((('^蕥bj')AND('224422717')))OR(NULL)) THEN (((('494338845')AND(0.7687909782245465)))OR(NULL)) END); -- 1ms;
SELECT ALL SUM(AVG(CAST(rt1.c1 AS INTEGER))) FROM vt0, rt1;SELECT x'' FROM rt0 WHERE (((((('')) NOT BETWEEN ((x'')) AND ((x'')))) NOT BETWEEN ((((('')AND(NULL)))AND(0X969a670))) AND (('%V' IN ())))); -- 0ms;
SELECT DISTINCT CASE ((((((((((((rt1.c2)AND(rt1.c3)))OR(rt0.c2)))AND(rt0.c1)))AND(rt1.c2)))OR(rt0.c0)))AND(rt1.c2))  WHEN ((vt0.c0) NOTNULL) THEN LOWER(rt0.c0) WHEN ((x'')*(rt0.c2)) THEN rt1.c2 COLLATE BINARY WHEN rt0.c0 COLLATE RTRIM THEN CASE rt0.c1  WHEN rt1.c2 THEN rt0.c2 END END FROM vt0 WHERE (((((((NULL)*(-1370791679)))AND((0xffffffff89f8d537 IN ()))))AND(((0.23591102712819767)==(NULL)))));SELECT ALL (((rt1.c1)) NOT BETWEEN (((rt1.c2 IN ()))) AND (((+ (rt0.c2))))), (((((rt1.c3) NOT BETWEEN (0X553d0a6) AND (rt0.c2))))>(((rt0.c2 IN (rt1.c2, rt0.c2))))), (UNLIKELY(rt1.c0) IN ((rt0.c1 IN ()))) FROM rt1;SELECT DISTINCT CASE ((0.5215670253080554) NOTNULL)  WHEN (~ (rt1.c3)) THEN vt0.c0 COLLATE BINARY ELSE rt0.c1 COLLATE NOCASE END FROM vt0, rt1 WHERE ((- (LOWER(DISTINCT '-790037187'))));SELECT ALL MIN(CASE WHEN rt0.c2 THEN rt0.c2 END), ((CASE WHEN rt1.c2 THEN rt1.c0 END) NOT BETWEEN (vt0.c0 COLLATE NOCASE) AND (rt0.c2 COLLATE NOCASE)), ((((((((((rt1.c0)/(rt1.c3)))OR(GROUP_CONCAT(rt0.c0))))OR((rt0.c2 IN ()))))OR(((rt0.c2) ISNULL))))OR(((rt1.c2) BETWEEN ('2084955467') AND (rt0.c0)))) FROM rt1 WHERE (((((((0.2750834568739654)OR('1519141362')))AND(NULL))) IS FALSE));SELECT (((rt1.c1)*(rt0.c2)) IN ()) FROM rt0, rt1 WHERE (((((-1399831024) NOT BETWEEN (NULL) AND (-270365108))) NOTNULL)) ORDER BY ((rt1.c3 COLLATE BINARY) NOTNULL)  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((NOT (rt0.c0))) ISNULL) FROM vt0, rt0, rt1 WHERE ((((~ ('-1367269333'))) IS TRUE)); -- 0ms;
SELECT DISTINCT SUM(rt0.c2) FROM vt0, rt0, rt1 WHERE ((((((264572403)) NOT BETWEEN ((0X511b3783)) AND ((0.6107320736459223))))>('-250242859'))); -- 0ms;
SELECT ((((rt0.c1)<(rt1.c3)))*(CAST(rt1.c1 AS BLOB))) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS REAL) AS BLOB) FROM rt0 ORDER BY ((NULL)||(((rt0.c1)>=(rt0.c1))))  NULLS FIRST, (NULLIF(DISTINCT rt1.c1, x'') IN (0.0)) DESC;SELECT DISTINCT CAST(CASE WHEN rt1.c3 THEN rt0.c1 ELSE x'' END AS TEXT), ((rt0.c0) NOT NULL) COLLATE BINARY, COUNT(*) OVER (), MIN((((rt1.c3)) NOT BETWEEN ((rt1.c3)) AND ((rt0.c0)))), CAST(NULL AS REAL) FROM rt0, rt1 WHERE (('' IN (CAST('0.37812895046585426' AS INTEGER), LIKELIHOOD(0.727787657063471, 0.06306919389729226), ((('1543794292'))<=(('')))))); -- 0ms;
SELECT DISTINCT (((rt1.c0)) BETWEEN ((vt0.c0 COLLATE RTRIM)) AND ((CASE rt1.c3  WHEN rt1.c2 THEN vt0.c0 WHEN vt0.c0 THEN rt1.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt1.c1 THEN rt1.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt1.c0 END))) FROM vt0, rt0, rt1 WHERE ((((('x	J*J') IS TRUE)) ISNULL)); -- 0ms;
SELECT (((- (rt1.c0))) BETWEEN ((((rt0.c2))=((rt1.c3)))) AND (((((((((vt0.c0)AND(rt0.c0)))OR(rt1.c3)))AND(x'')))OR(rt1.c1)))) FROM rt1 WHERE (CASE WHEN ((((x'b7d7')AND(0.8078896012846656)))AND(NULL)) THEN ((('')) NOT BETWEEN ((x'')) AND ((x'413e'))) ELSE IFNULL(DISTINCT 0.9870986505442568, -1048490885) END) ORDER BY ((rt1.c1) BETWEEN ((((rt1.c1))<=((rt0.c0)))) AND ((rt0.c0 IN (rt1.c2))));SELECT GROUP_CONCAT(rt1.c1) OVER () FROM rt0, vt0;SELECT ALL (((rt0.c0)) NOT BETWEEN ((SQLITE_SOURCE_ID())) AND ((rt0.c2))) FROM rt1, rt0, vt0 WHERE (((((x'')<(0.5499615510572093)))-(((0.4718121377045058) NOTNULL)))) LIMIT 1830512589 OFFSET -958252090; -- 4ms;
SELECT DISTINCT ((MIN(rt0.c2))-(DATETIME(rt1.c3, rt0.c0, rt0.c2))) FROM vt0, rt0, rt1 WHERE (NULL); -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT vt0.c0, 0.898955910703499)) NOT BETWEEN (rt0.c1 COLLATE NOCASE) AND (((rt1.c0)/(rt1.c2)))) FROM vt0, rt0;SELECT CAST((- (x'')) AS REAL) FROM vt0, rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((CAST(rt1.c3 AS REAL))&(rt0.c2)) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT ((+ (0.2597657175101812)) IN ()) FROM vt0, rt1, rt0 WHERE (CAST(LIKELIHOOD(0xffffffffecc7f992, 0.595481012907646) AS NUMERIC)) LIMIT 1684091199 OFFSET 149523188; -- 1ms;
SELECT '-231680592' FROM rt1, vt0 WHERE ((~ ((0.04940956333811741 IN ())))) GROUP BY (((((rt0.c1) NOTNULL), ((('|_', NULL, rt1.c1)) NOT BETWEEN ((rt0.c0, rt1.c3, rt1.c1)) AND ((0.6334102543394963, rt1.c0, rt0.c0))), CHANGES(), (rt0.c1 IN ()), ((((rt1.c1)OR(rt0.c0)))OR(0x350ef1f9))))<>(((~ (vt0.c0)), (rt1.c2 IN ()), vt0.c0 COLLATE RTRIM, CAST(rt1.c3 AS REAL), (((rt0.c2))<((rt1.c0))))));SELECT DISTINCT ((CAST(rt1.c2 AS BLOB)) IS FALSE) FROM rt0 WHERE (CASE WHEN (('K)a')<(NULL)) THEN (((NULL))=((x'5775'))) WHEN ((NULL) BETWEEN ('') AND ('1519141362')) THEN ((0.12726144031178843) BETWEEN (x'') AND (0X19d7894a)) WHEN (NOT ('es')) THEN ((NULL) BETWEEN (0.9912240348664146) AND (2051769441)) END);SELECT DISTINCT ROW_NUMBER() OVER ( RANGE ((((rt1.c1)*('1013216057')))<(x'1a34' COLLATE RTRIM)) PRECEDING) FROM rt0, vt0;SELECT ALL LIKELY(((((rt1.c0)AND(vt0.c0)))OR(rt1.c3))), ((MAX(rt1.c0)) BETWEEN (NULL) AND ((rt0.c2 IN ()))), ((CAST(rt1.c1 AS INTEGER))-(x'')) FROM rt1 INNER JOIN rt0 ON 0.8380904939350022;SELECT DISTINCT NULL FROM rt1 WHERE ((((+ (NULL)))+(((x'3a2b867f') BETWEEN (0.9628672408033363) AND ('956246653'))))); -- 0ms;
SELECT DISTINCT CASE (+ (rt1.c1))  WHEN (+ (rt1.c3)) THEN rt1.c3 COLLATE BINARY ELSE rt1.c2 COLLATE NOCASE END, CAST(rt1.c0 COLLATE RTRIM AS TEXT), (((vt0.c0 IN ()))%(((((((((rt0.c1)OR(rt1.c1)))AND(rt1.c1)))OR(rt0.c2)))AND(rt0.c2)))) FROM vt0 WHERE (NULLIF(ABS(NULL), NULLIF(NULL, 'fu')));SELECT ((((rt0.c0 COLLATE RTRIM)OR(CAST(rt1.c1 AS INTEGER))))AND('P')), CUME_DIST() OVER (), MIN(AVG(((rt0.c2)IS(rt1.c3)))) FROM rt1, rt0, vt0 WHERE (((CAST(6.36409628E8 AS REAL)) IS TRUE));SELECT ALL ((0.6657601471707033)-(rt0.c0)) COLLATE RTRIM FROM vt0, rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c1) BETWEEN (rt1.c0) AND (rt0.c2))  WHEN (NOT (rt0.c0)) THEN NULLIF(rt0.c1, rt0.c1) END, (NOT ((rt1.c0 IN ()))), CASE WHEN ((rt1.c1)>=(rt1.c0)) THEN (((rt1.c0))<((x''))) END FROM rt1;SELECT DISTINCT ((CAST(rt1.c1 AS TEXT)) IS TRUE), ((((((((vt0.c0)OR((((rt0.c0))>=((rt0.c1))))))AND(0xffffffffd544405d)))OR(rt1.c0 COLLATE NOCASE)))AND(0.7727026265119695)), rt1.c3 FROM vt0, rt1;SELECT DISTINCT ((vt0.c0 IN ()) IN ()) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT NTH_VALUE(((rt1.c2) NOT BETWEEN (rt1.c2) AND (rt1.c0)) COLLATE NOCASE, rt1.c1) OVER () FROM rt1;SELECT DISTINCT (((((rt0.c2))!=((rt0.c2)))) BETWEEN (MAX(rt1.c1)) AND (CASE WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c3 THEN rt0.c2 WHEN rt0.c2 THEN rt1.c0 WHEN rt0.c1 THEN vt0.c0 WHEN rt0.c2 THEN rt1.c3 END)) FROM rt1, vt0 GROUP BY LIKELY(DISTINCT ((((((((rt0.c2)AND(rt1.c2)))OR(rt0.c0)))OR(rt0.c0)))OR(vt0.c0))) ORDER BY ((((((rt0.c1)&(rt1.c3)))OR((((rt1.c2, rt1.c1, rt0.c2)) NOT BETWEEN ((NULL, rt1.c1, rt0.c1)) AND ((rt0.c0, rt1.c0, rt1.c3))))))OR(rt0.c2)) ASC  NULLS LAST, CAST(((((vt0.c0)OR(rt0.c0)))OR(rt0.c1)) AS NUMERIC)  NULLS LAST, ((((((((((rt1.c3)AND(0X1b07f19c)))OR(vt0.c0)))AND(rt0.c2)))OR(rt1.c3))) NOT BETWEEN ((((rt1.c3)) NOT BETWEEN ((NULL)) AND ((rt0.c1)))) AND (CASE WHEN '86793852' THEN rt1.c1 ELSE rt0.c2 END));SELECT DISTINCT ((((rt1.c3) BETWEEN (rt0.c1) AND ('')))!=(((rt1.c2) IS TRUE))) FROM rt0;SELECT ((CASE rt1.c0  WHEN vt0.c0 THEN '' ELSE rt1.c2 END)IS(((rt1.c0)GLOB('')))), ((rt1.c3)=(rt0.c2)) COLLATE RTRIM, json_insert(((((rt0.c2)AND(rt1.c1)))AND(0xfffffffff357190b)), CAST(rt1.c1 AS REAL), COUNT(*), ((rt1.c2) NOT BETWEEN ('-M]DRዀ&') AND (rt1.c2)), CAST(rt0.c1 AS NUMERIC), (rt1.c3 IN (rt0.c1)), MAX(rt0.c0), rt1.c3, CASE rt0.c0  WHEN rt1.c3 THEN rt1.c2 WHEN rt1.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt1.c3 END) FROM rt1 LIMIT -1179933353;SELECT ALL CAST(x'' AS NUMERIC) COLLATE RTRIM FROM rt1 WHERE (((CASE WHEN 0.6764747969831392 THEN 2062346168 ELSE NULL END) IS FALSE)); -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt0, rt1, rt0 WHERE ((CASE x''  WHEN '1966238402' THEN '' WHEN 'I_5UrzO' THEN '-149934400' WHEN '' THEN 'V(' END IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c2)>>(rt0.c2)) IN (x'8494')) FROM rt0, rt1 WHERE (((UPPER(DISTINCT NULL)) IS TRUE)); -- 0ms;
SELECT ((((CASE rt0.c2  WHEN rt1.c1 THEN rt0.c1 WHEN rt1.c3 THEN rt0.c0 WHEN rt1.c3 THEN rt1.c1 WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c1 THEN '1077083010' ELSE rt0.c2 END)OR(vt0.c0 COLLATE RTRIM)))AND('8D')), (((((rt1.c0)<>(rt1.c2))))<((((rt1.c1) NOTNULL)))), CAST((((rt1.c3, rt1.c0, rt1.c2)) NOT BETWEEN ((NULL, rt1.c2, rt0.c1)) AND ((x'', rt1.c2, rt1.c3))) AS INTEGER) FROM rt1, vt0;SELECT DISTINCT SUM((NOT (rt0.c2))) FROM vt0, rt1, rt0; -- 0ms;
SELECT ((((rt0.c0)<>(rt1.c0))) IS TRUE) FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0, rt0; -- 0ms;
SELECT DISTINCT (('-92908543') BETWEEN (((0x7c45e54b)+(rt1.c3))) AND (((((rt1.c2)AND(vt0.c0)))AND(rt1.c3)))) FROM rt1, vt0, rt0 LIMIT 651661368 OFFSET -1299908981; -- 0ms;
SELECT DISTINCT CASE ((((rt1.c2)AND(rt1.c0)))AND(rt1.c3))  WHEN (rt1.c2 IN ()) THEN COUNT(rt0.c1) END FROM rt1, rt0, vt0; -- 1ms;
SELECT ALL rt1.c0 FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c1 COLLATE RTRIM  WHEN ((rt1.c1)>(rt0.c2)) THEN CASE WHEN rt1.c1 THEN vt0.c0 END ELSE rt1.c1 END FROM rt0, vt0, rt1 WHERE (('264572403' IN ('31521177', 'o')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT SUM((rt0.c2 IN ())) OVER () FROM rt1 WHERE ((((((((((((NULL)AND(NULL)))AND(x'')))OR(NULL)))AND(0.5708925343551805)), UNICODE(NULL), ((NULL) NOT NULL)))!=((CASE 0.5013113902877391  WHEN NULL THEN '1830512589' WHEN '330853606' THEN '-360011953' WHEN NULL THEN 0xffffffffff7f8e04 END, ((x'f46c')%(NULL)), CASE x''  WHEN NULL THEN '530220537' END)))) ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((((rt0.c2)OR(rt1.c3)))OR(vt0.c0))) AND (x'')) ASC  NULLS LAST;SELECT ALL GROUP_CONCAT(((rt1.c1) NOT BETWEEN (rt0.c2) AND (rt1.c3))) OVER () FROM rt0, vt0;SELECT DISTINCT COUNT(*) OVER ( ROWS  CURRENT ROW), COUNT(CAST(rt1.c1 AS TEXT)) OVER (), ((CAST(rt0.c0 AS BLOB))>(((((vt0.c0)OR(rt1.c0)))AND(rt1.c3)))) FROM rt1 WHERE (((((('-1979687174'))<>(('157918832'))))-(((x'')%('')))));SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER () FROM vt0 WHERE ((+ (x''))) GROUP BY ((((((rt0.c2) BETWEEN (rt1.c2) AND (rt1.c1)))OR(((rt1.c1)*(rt0.c0)))))OR(rt1.c3));SELECT DISTINCT COUNT(CASE WHEN x'' THEN rt0.c2 END) OVER () FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT 0.006445663565794568, ((((vt0.c0) BETWEEN (rt1.c2) AND (rt0.c2))) NOT BETWEEN (((rt1.c1)OR(vt0.c0))) AND (((rt1.c1)IS(rt1.c3)))), TOTAL(((((NULL)OR('y')))OR(rt1.c1))), CASE WHEN x'db66' THEN COUNT(rt0.c1) WHEN ((rt0.c1)|(rt0.c2)) THEN ((rt0.c2)&(rt0.c2)) WHEN ((rt0.c0)IS NOT(rt0.c2)) THEN ((x'') IS FALSE) ELSE '-701526587' END, GROUP_CONCAT(CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY) FROM rt1, vt0 WHERE (((0Xffffffffa86d351a)||('2櫂E.')) COLLATE NOCASE);SELECT SUM((((rt0.c1)) BETWEEN ((rt1.c1)) AND ((rt0.c2))) COLLATE NOCASE) OVER () FROM rt0, rt1; -- 1ms;
SELECT (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt1.c2 THEN NULL END IN ()) FROM rt0, vt0; -- 0ms;
SELECT ALL (rt1.c0 IN ()) COLLATE NOCASE, (((rt0.c2)<=(rt1.c2)) IN ()), ((rt0.c1 COLLATE NOCASE)>=(GROUP_CONCAT(rt1.c0))) FROM rt1 NOT INDEXED;SELECT ((((rt0.c2)*(rt1.c1))) NOT BETWEEN (rt1.c2 COLLATE RTRIM) AND (((rt1.c0) ISNULL))) FROM rt1 FULL OUTER JOIN rt0 ON (+ (CAST(rt1.c3 AS REAL))) WHERE ((NULL IN ('j&', 627328717)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT COUNT((((rt0.c2))>=((rt1.c2)))) OVER () FROM rt0, rt1 WHERE (((CAST(0.9907567825380754 AS NUMERIC)) NOT NULL)) LIMIT -1772028276 OFFSET 1119382209; -- 0ms;
SELECT DISTINCT rt1.c1 FROM rt0, rt1 WHERE ((NULL IN (x'', 1.63391263E9)) COLLATE NOCASE); -- 0ms;
SELECT ALL NTILE(((CASE WHEN rt1.c0 THEN rt1.c0 WHEN NULL THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 END)OR(CAST(rt1.c2 AS NUMERIC)))) OVER () FROM rt1 WHERE (('459628504' IN ())) GROUP BY ((((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c2))) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt1.c1 WHEN rt0.c2 THEN rt1.c1 WHEN rt1.c3 THEN rt0.c0 ELSE rt0.c2 END) AND (((((rt0.c1)AND(rt1.c1)))AND(rt0.c1))));SELECT (((rt1.c3, 2037210885, rt1.c1, rt1.c1, rt1.c2)) NOT BETWEEN ((((rt1.c1)>(rt1.c1)), (((vt0.c0))<=((0.43369680325549664))), TRIM(DISTINCT rt1.c3), NULLIF(rt0.c2, vt0.c0), ((vt0.c0) NOTNULL))) AND (('' COLLATE RTRIM, ((((rt0.c0)AND(rt0.c2)))AND(rt1.c2)), ((rt0.c2) BETWEEN (vt0.c0) AND (rt0.c1)), LIKELY(DISTINCT rt1.c2), (~ (rt1.c2))))), (1543794292 IN ()), CAST(NULL AS TEXT) FROM rt1 FULL OUTER JOIN rt0 ON rt1.c1 COLLATE RTRIM RIGHT OUTER JOIN vt0 ON (CASE rt1.c1  WHEN rt0.c2 THEN rt1.c2 ELSE rt0.c0 END IN ()) LIMIT 162916237; -- 1ms;
SELECT ALL (('0.6435774591013323')>(rt0.c2)) COLLATE NOCASE, ((((((((rt1.c1)OR(rt1.c3)))AND(rt1.c0)))OR(rt1.c1 COLLATE NOCASE)))AND((- (rt0.c0)))), TRIM(((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c0)), rt0.c1) FROM vt0, rt1, rt0; -- 0ms;
SELECT ALL vt0.c0, ((((rt1.c3)<(rt0.c0))) IS TRUE), GROUP_CONCAT((((rt1.c2))<>((rt1.c1)))) FROM rt1, rt0;SELECT CASE ((vt0.c0) NOT BETWEEN (rt1.c0) AND (rt1.c2))  WHEN MIN(rt0.c0) THEN CAST(rt1.c1 AS BLOB) ELSE 2077509552 END, '', CASE WHEN CASE WHEN 0.9887284998589733 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN rt1.c2 THEN rt1.c1 ELSE rt1.c1 END THEN ((((rt1.c2)AND(rt0.c2)))OR(rt0.c0)) END FROM rt0;SELECT DISTINCT (~ (CASE rt0.c0  WHEN rt1.c0 THEN rt0.c2 ELSE rt1.c0 END)) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (NOT ((rt1.c3 IN (rt1.c2, rt1.c1)))) FROM rt1, rt0 WHERE ((((((NULL)) BETWEEN ((-4.60817092E8)) AND (('1715596115')))) IS FALSE)) ORDER BY CAST(((rt0.c2)*(vt0.c0)) AS TEXT) ASC  NULLS FIRST;SELECT ALL 9.3187994E8, ((TOTAL(rt0.c1)) ISNULL), (((vt0.c0))<((CAST(rt0.c0 AS INTEGER)))), ((((((rt0.c2)AND(rt1.c0)))OR(rt1.c2))) NOT NULL), UPPER(DISTINCT ((vt0.c0) IS TRUE)) FROM rt1 WHERE (TRIM(('W3#<8J}q ' IN ()), (('8''')LIKE(''))));SELECT DISTINCT NULL FROM rt1 CROSS JOIN rt0 ON (NOT (CASE WHEN rt1.c0 THEN rt0.c0 WHEN rt1.c3 THEN NULL WHEN rt1.c1 THEN rt0.c2 END)) CROSS JOIN vt0 ON ((((((((((rt1.c0)<=(4.59628504E8)))OR(CASE rt1.c2  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)))OR((- (vt0.c0)))))OR(((rt1.c0)!=(rt1.c0)))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt1.c3)))) WHERE ((json('.#') IN ())); -- 0ms;
SELECT ALL ((CAST(rt1.c2 AS NUMERIC)) ISNULL) FROM rt1, rt0 WHERE ((((('') IS FALSE))!=((('FG') NOT BETWEEN ('Dzb''%ekS^') AND (0.801900356734056))))); -- 0ms;
SELECT DISTINCT -1.023016861E9 FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)) COLLATE BINARY, MAX(((rt1.c2)AND(rt0.c0)), ((rt1.c0) IS TRUE)), CUME_DIST() OVER () FROM rt1;SELECT ALL rt0.c2 FROM rt1, rt0, vt0 WHERE (((('328641217' IN ()))*(0.9912240348664146 COLLATE RTRIM))); -- 0ms;
SELECT MAX(CASE WHEN vt0.c0 THEN rt1.c1 END COLLATE NOCASE) FROM rt0, rt1, vt0 WHERE (CAST(json_array(NULL, NULL, x'', NULL) AS NUMERIC));SELECT DISTINCT ((rt0.c2 COLLATE RTRIM) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt1.c1)=(NULL)))) FROM vt0, rt0;SELECT DISTINCT (((((((((((rt0.c0)) BETWEEN ((rt1.c3)) AND ((rt0.c0))))AND(((rt0.c1)!=(vt0.c0)))))OR(((rt1.c0) BETWEEN (rt1.c3) AND (rt0.c1)))))OR(TRIM(vt0.c0))))AND(NULL)), ((CASE x''  WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c1 THEN 0.5300910499012877 WHEN rt1.c1 THEN rt1.c3 END) BETWEEN (((rt1.c2)|(rt1.c3))) AND (rt1.c1 COLLATE BINARY)), rt0.c0, (((((rt0.c1) BETWEEN (rt1.c0) AND (rt1.c3))))<>((((((rt0.c2)OR('-1358568629')))OR(rt1.c2))))), (('-2123744334') NOTNULL) COLLATE BINARY FROM vt0 WHERE (((((((x'', NULL, '_OM8t')) NOT BETWEEN ((NULL, '494338845', -1.70107442E8)) AND ((0.1737492687606741, 0.17617280765561327, NULL)))))>(((('2002571268') IS TRUE))))) LIMIT -284998210;SELECT CAST(rt0.c0 AS INTEGER) FROM vt0, rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt1.c0)%(2.142696112E9))) AND (((rt1.c2) NOT NULL))) FROM rt0, rt1 GROUP BY CAST(rt1.c0 AS REAL), ((((((rt0.c2)>>(rt1.c0)))OR(x'258b')))OR((+ (NULL)))), json_array_length(CASE WHEN '|5<jjEB' THEN '' ELSE rt1.c0 END) HAVING (CASE WHEN rt1.c0 THEN rt1.c3 ELSE rt1.c1 END IN ()) LIMIT -720713705; -- 0ms;
SELECT DISTINCT (((CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt1.c2 WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c2 END))>=((CAST(vt0.c0 AS NUMERIC)))) FROM rt0, rt1 WHERE ((+ (HEX(x'')))) ORDER BY (~ (((rt0.c0)>=(rt1.c3)))) ASC  NULLS FIRST;SELECT DISTINCT ((((rt1.c2)OR((((rt1.c2)) BETWEEN ((vt0.c0)) AND ((rt1.c1))))))OR(CASE vt0.c0  WHEN NULL THEN rt0.c0 END)) FROM rt1, vt0, rt0; -- 0ms;
SELECT ALL NULL, (TOTAL(rt0.c2) IN ()), CASE CASE WHEN '' THEN rt1.c2 ELSE rt0.c2 END  WHEN (+ (rt1.c0)) THEN (rt0.c2 IN ()) WHEN (((rt0.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c2))) THEN ((((rt1.c2)OR(rt0.c0)))OR(rt0.c2)) WHEN ((rt0.c2)OR(rt0.c0)) THEN SUM(rt0.c1) ELSE rt1.c2 COLLATE RTRIM END FROM rt1, rt0, vt0; -- 1ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((NULL)>=(x''))) FROM vt0, rt0 WHERE (UNLIKELY(CAST(x'1519' AS REAL))); -- 0ms;
SELECT ALL (((((((rt1.c0))==((rt1.c1))))OR(rt1.c3 COLLATE BINARY)))OR(CAST(rt1.c1 AS BLOB))) FROM vt0, rt0;SELECT DISTINCT ((((rt0.c1) NOT NULL)) BETWEEN ((((x''))!=((rt0.c0)))) AND ('0.44767549382496097')) FROM rt0, vt0 WHERE ((((((NULL, 'lSX', '-472736379'))<((x'8bee', 0.6654329434762676, NULL)))) BETWEEN (CASE WHEN NULL THEN NULL WHEN '391769051' THEN 0.8850236603515054 WHEN 2.084955467E9 THEN NULL END) AND (((0.2499403632685716) NOTNULL)))); -- 0ms;
SELECT DISTINCT (- (((((((((0.06444591723754656)OR(rt1.c3)))OR(rt1.c3)))OR(rt0.c1)))AND(rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT ALL ((rt0.c0 COLLATE RTRIM) BETWEEN ((rt1.c0 IN ())) AND (((rt0.c1) NOT BETWEEN (vt0.c0) AND (rt0.c2)))) FROM rt1, rt0, vt0; -- 0ms;
SELECT (+ (rt0.c1 COLLATE NOCASE)) FROM vt0, rt0 WHERE (CASE (4.97968451E8 IN ())  WHEN (('1394692206') IS TRUE) THEN CAST(NULL AS INTEGER) END); -- 0ms;
SELECT '883463590' FROM rt0, rt1, vt0 WHERE ((('-768430876') NOT NULL)); -- 0ms;
SELECT (((vt0.c0 IN (rt0.c0)))||(CAST(rt1.c1 AS TEXT))), LIKELY(DISTINCT ((rt0.c1)+(NULL))), CAST(((rt1.c1)IS(rt0.c0)) AS BLOB) FROM rt0, rt1, vt0 WHERE (CASE WHEN ((((-7.20713705E8)OR('')))AND(x'1d97')) THEN (NULL IN (-1587747891)) END); -- 0ms;
SELECT DISTINCT ((((rt1.c2) BETWEEN (rt1.c1) AND (vt0.c0)))|(((rt1.c0)LIKE(rt1.c2)))) FROM rt1 WHERE (TRIM(DISTINCT ((0Xffffffffb230915e) IS TRUE))) GROUP BY (- (rt0.c0)), LIKELIHOOD(CAST(0.6872532462473848 AS BLOB), 0.21414286589837028), CAST((((rt1.c1)) NOT BETWEEN ((NULL)) AND ((rt1.c2))) AS NUMERIC) HAVING CAST(((x'706a66d6')%(rt1.c0)) AS NUMERIC) ORDER BY 0.019106119434153634 ASC  NULLS LAST;SELECT DISTINCT TOTAL(((rt1.c1)IS(rt0.c1))) OVER ( PARTITION BY CASE WHEN ((rt1.c3) NOT NULL) THEN ((((((((NULL)OR(rt0.c1)))AND(rt0.c1)))AND(vt0.c0)))AND(rt1.c0)) WHEN rt0.c2 THEN ((rt1.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))<=((rt1.c3))) ELSE ((((rt1.c2)OR(rt0.c2)))OR(rt1.c2)) END, ((((rt0.c1)LIKE(rt1.c0))) NOT NULL)), TOTAL(CASE rt0.c1  WHEN rt0.c1 THEN rt1.c3 END) OVER (), PERCENT_RANK() OVER ( ORDER BY (((((('&ﱶc>k2') NOT BETWEEN (vt0.c0) AND (rt1.c0)))AND(((vt0.c0) ISNULL))))AND(CASE WHEN '-858835192' THEN rt0.c1 END))  NULLS FIRST) FROM rt1, vt0;SELECT DISTINCT CASE ((rt0.c0)/(rt1.c1))  WHEN CASE WHEN rt0.c1 THEN rt1.c1 WHEN rt1.c3 THEN NULL WHEN rt0.c0 THEN x'' ELSE rt0.c1 END THEN CASE -2.37697982E8  WHEN rt1.c0 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt1.c1 ELSE rt1.c2 END WHEN (((rt1.c3))<>((NULL))) THEN (vt0.c0 IN ()) WHEN (rt0.c1 IN ()) THEN CASE rt1.c0  WHEN rt1.c3 THEN rt1.c3 WHEN rt1.c0 THEN vt0.c0 WHEN rt0.c1 THEN x'' WHEN rt0.c1 THEN rt1.c2 WHEN vt0.c0 THEN rt0.c2 END ELSE (+ (rt0.c1)) END FROM vt0 CROSS JOIN rt1 ON rt1.c0 WHERE (((('^픷gc_c[')) NOT BETWEEN ((CAST('0.04774003141144789' AS NUMERIC))) AND (((('') BETWEEN ('947746669') AND (NULL))))));SELECT DISTINCT ((((NULL) NOT BETWEEN (0x79f03c21) AND ('')))/(((rt1.c0)AND(rt1.c1)))) FROM vt0;SELECT vt0.c0, PERCENT_RANK() OVER (), (rt1.c3 IN ()) COLLATE RTRIM FROM rt1 NOT INDEXED WHERE ((((x'ede22fcf', NULL, NULL)) BETWEEN (((0xffffffff9c318294 IN (x'')), ((NULL)<=(0.9157744875569878)), TYPEOF(0.090267745606881))) AND (((('0.8448941563175311')>(x'f5a29de1')), ((NULL)*('1800523178')), NULL COLLATE BINARY))));SELECT ((((vt0.c0) NOTNULL))IS((rt1.c1 IN (rt0.c0)))) FROM vt0 WHERE (((((('KV') IS TRUE)))==((-1634541810))));SELECT ALL 0x6237a420 FROM vt0, rt0, rt1; -- 0ms;
SELECT DISTINCT ((highlight(rt1.c0, rt0.c1, vt0.c0, rt0.c0))<=(TOTAL(''))) FROM rt0;SELECT DISTINCT rt0.c2 FROM rt1 LIMIT -207226963 OFFSET -515559778;SELECT 'd!A[''ﵴQ	' FROM rt1 WHERE (((((x''))<>(('1831618063'))) IN ())) ORDER BY (CASE NULL  WHEN vt0.c0 THEN rt1.c1 ELSE 0.20920303943753193 END IN ())  NULLS LAST, ((((rt1.c1) IS TRUE)) NOT BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (rt1.c0))) AND (rt1.c1)), ((((vt0.c0) NOT NULL)) NOTNULL) ASC LIMIT -903600921 OFFSET -1412619965;SELECT ALL CAST(SUM(rt1.c1) AS TEXT), ROUND(CASE rt0.c1  WHEN rt1.c1 THEN rt0.c1 ELSE vt0.c0 END, rt1.c0 COLLATE NOCASE), ((((rt1.c0)<<(rt0.c0))) IS FALSE), CAST(CASE WHEN x'' THEN vt0.c0 END AS TEXT), CASE WHEN (((rt1.c3))<=((vt0.c0))) THEN ((rt0.c2)AND(rt0.c2)) END FROM rt0, rt1, vt0; -- 0ms;
SELECT DISTINCT (NOT (rt0.c2)) COLLATE BINARY FROM vt0;SELECT DISTINCT (NOT (rt0.c2 COLLATE RTRIM)) FROM rt1 WHERE ((((('S8')<>(NULL))) BETWEEN (NULL COLLATE NOCASE) AND (((((((((((((0.2537326088534041)AND(NULL)))OR(NULL)))AND(x'')))OR('(')))OR('-545552304')))AND(0.6822193942735832)))));SELECT ((CAST(rt1.c1 AS BLOB)) NOT BETWEEN (CASE rt1.c2  WHEN rt0.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt1.c3 ELSE rt1.c1 END) AND (NULL)) FROM rt1, rt0 GROUP BY rt0.c0, (((((((((((((((rt1.c0)) NOT BETWEEN (('')) AND ((vt0.c0))))AND(((((vt0.c0)OR(NULL)))OR(rt1.c1)))))AND(((rt1.c1)LIKE(vt0.c0)))))OR(rt0.c1 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN NULL END)))OR(json_array(vt0.c0, rt0.c1, rt1.c0, rt1.c0))))OR(((((vt0.c0)OR(rt1.c3)))OR(rt1.c3)))), ((rt0.c0) BETWEEN (rt0.c1) AND (rt1.c0)) COLLATE BINARY COLLATE NOCASE HAVING (((('')AND(((rt1.c1)=(rt1.c3)))))OR(rt0.c1 COLLATE NOCASE));SELECT DISTINCT COUNT(((rt0.c2) NOT BETWEEN (0.627029827117501) AND (rt1.c2))) FROM rt1, rt0 WHERE ((((x'')) BETWEEN ((((((((((((((((((((((x'7c29')AND('1593409849')))AND(x'')))OR(x'')))OR(x'')))OR('')))OR(0.5948934529730591)))AND('-2143569312')))AND(-9.24677753E8)))OR('~mW\r*_rKw')))AND('-858835192')))) AND ((highlight(x'a8c8', 0.23122828113725702, 'oⵙ5睌mN6', '-780263355')))));SELECT ((((rt0.c0)>=(rt0.c2)))=(((((rt0.c1)OR(rt1.c1)))AND(NULL)))) FROM vt0, rt0, rt1; -- 0ms;
SELECT ALL ((((((vt0.c0)GLOB(vt0.c0)))OR(((rt0.c0)>(rt1.c1)))))OR(vt0.c0 COLLATE RTRIM)), (((- (rt1.c3))) NOT BETWEEN ((rt1.c1 IN ())) AND (((vt0.c0) IS TRUE))), NULL FROM vt0 WHERE ((((((x'', x'', NULL)) NOT BETWEEN (('1Xu''W+WZo', '1318851264', '1949322160')) AND ((x'1aef', '', -1601936430)))) ISNULL));SELECT DISTINCT COUNT(*) FROM rt1 WHERE (((((NULL) NOTNULL)) NOT BETWEEN (((x'cfc4')>=('G^'))) AND (0.4205522969395351 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt0, rt0 WHERE (CASE x''  WHEN 1.830512589E9 THEN '0.7919650150946153' ELSE x'91dc' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ (((0x7941f969)<>(rt0.c2)))) FROM rt0, rt1; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), SUM(rt0.c1), (((((vt0.c0, rt1.c1, rt1.c2, rt1.c2, rt0.c0)) BETWEEN ((rt1.c1, rt1.c1, rt0.c2, rt1.c0, rt1.c2)) AND ((rt1.c0, rt0.c2, rt0.c0, rt0.c1, rt1.c2)))) IS FALSE) FROM rt1;SELECT DISTINCT (((((rt0.c1)AND(vt0.c0)))OR(rt1.c0)) IN ()) FROM rt0 WHERE (CASE ((((((((x'')OR(0.1382602366423169)))AND(x'')))OR(-561713064)))AND('-1228818977'))  WHEN (((-1.60193643E9)) BETWEEN ((x'3ae1')) AND (('-327225338'))) THEN ((x'f8af') NOT NULL) END); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN vt0.c0 THEN rt1.c1 WHEN rt1.c1 THEN rt1.c2 WHEN rt1.c1 THEN x'' END AS BLOB) FROM rt0;SELECT DISTINCT ((rt1.c1)GLOB(SUM(rt1.c3))), LOWER(((rt1.c0) NOT BETWEEN (NULL) AND (0x1454f7a0))), CUME_DIST() OVER () FROM rt1, rt0, vt0 WHERE (NULL) GROUP BY ((((vt0.c0)IS(0.7484479031737512)))|((('86793852') NOTNULL))) HAVING CAST((vt0.c0 IN ()) AS INTEGER); -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE RTRIM IN ('')) FROM rt0, vt0 WHERE (((('')) BETWEEN ((((0Xffffffffed4685b1) NOTNULL))) AND (((((NULL, 0x4d45def6, 0.029656328655760733))<=(('', 0.7912427880599585, NULL))))))); -- 0ms;
SELECT DISTINCT (NOT (((NULL)IS(rt0.c1)))) FROM vt0 GROUP BY (rt0.c0 IN ()) COLLATE RTRIM;SELECT DISTINCT AVG(((rt1.c0) IS TRUE)) OVER () FROM rt1; -- 0ms;
SELECT DISTINCT LAST_VALUE((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY) OVER () FROM vt0 WHERE (((('-963486181') BETWEEN ('-2123744334') AND (x'')) IN ())) ORDER BY (((vt0.c0)IS NOT(rt1.c2)) IN (rt1.c3))  NULLS FIRST, CHANGES();SELECT CAST(NULL AS TEXT) FROM vt0 ORDER BY ((((rt0.c0) NOT BETWEEN (vt0.c0) AND (rt1.c0)))>>((((rt0.c0))<=((rt1.c0))))) ASC  NULLS LAST, ((((+ (rt1.c2))))>=(((((rt1.c3)) BETWEEN ((rt0.c1)) AND ((rt1.c3))))));SELECT AVG(((rt1.c0)+(rt1.c1))) FROM rt1 NATURAL JOIN rt0 WHERE (CAST(x'' AS BLOB) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE BINARY, ((UNICODE(rt0.c2)) NOT BETWEEN ((((('-474554862')OR(vt0.c0)))AND(rt1.c2))) AND (((((vt0.c0)OR(rt1.c3)))OR(rt1.c2)))), CAST(((vt0.c0)+(rt0.c0)) AS TEXT) FROM rt1, vt0, rt0 WHERE ((((('-83033232') ISNULL)) NOT BETWEEN ((NOT (0.9584276049342647))) AND ((NOT (x'73a45884'))))); -- 0ms;
SELECT DISTINCT NTILE(CASE 0.4347517038077606  WHEN (rt1.c3 IN (rt1.c2)) THEN (- (rt1.c2)) ELSE CASE WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c2 THEN rt1.c1 WHEN -1.399831024E9 THEN NULL WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c1 END END) OVER () FROM rt1;SELECT '0.906173771084607' FROM rt1 WHERE (SQLITE_COMPILEOPTION_USED(((((NULL)AND(0.1541786365803116)))OR('0.5897576177121671')))); -- 0ms;
SELECT COUNT(CASE rt1.c0  WHEN rt1.c3 THEN rt1.c1 ELSE rt0.c2 END), (((((- (rt1.c0)))AND(CAST(rt0.c0 AS INTEGER))))OR((rt1.c1 IN (rt1.c2)))), CAST(((0.3761306657074761)==(rt0.c0)) AS REAL), LIKE(((((rt1.c3)AND(vt0.c0)))AND(rt0.c1)), (- (rt0.c1)), '-'), (((rt1.c2 IN (x'', rt0.c1))) IS FALSE) FROM rt1 WHERE ((~ ((('328641217')<<(0.4934587917946157)))));SELECT ALL ((((rt0.c1) BETWEEN (rt1.c1) AND (0.8508636158548026)))<(((rt1.c1)%(x'')))) FROM rt0, rt1, vt0 WHERE (((((x'4cd0')<(NULL)))-(json_remove('1487287958', -357083255, NULL, -1953459409))));SELECT DISTINCT AVG(IFNULL(rt1.c3, rt1.c2)) FROM rt1 LIMIT 636409628 OFFSET -1051339832; -- 1ms;
SELECT DISTINCT (((+ (vt0.c0)))<=(0xb8eb8db)) FROM rt1 WHERE (((0.16145634654185093)>(((x'3e27') BETWEEN (0.1775798755491046) AND (0x1d77031d)))));SELECT GROUP_CONCAT(((rt0.c1) BETWEEN (rt1.c2) AND (rt0.c1))) OVER () FROM vt0, rt1 WHERE ((((((((((('')OR(x'')))AND(0.30808995652659277)))AND(-3.04429724E8)))AND(0.1356881610032208)))=(json_valid(NULL))));SELECT DISTINCT ((((rt0.c1) BETWEEN (rt1.c3) AND (rt0.c2))) NOT BETWEEN (rt1.c3) AND (TOTAL(rt0.c0))), COUNT(CAST(rt0.c0 AS INTEGER)) OVER (), (((((rt0.c2)<<(rt0.c2))))=((NULLIF(rt0.c0, rt1.c3)))), rt0.c0, LIKELIHOOD((rt1.c2 IN ()), 0.7998096010026536) FROM rt1 ORDER BY 0.6365367547944288  NULLS LAST;SELECT ALL ((rt1.c2 COLLATE RTRIM)*(rt1.c2)), (((rt1.c2 IN (0.3332357914346552, rt0.c0))) IS FALSE), (((((vt0.c0))=((rt1.c0))))|(rt0.c1)) FROM rt1 WHERE ((+ (0.03439575479257695)) COLLATE RTRIM);SELECT DISTINCT ((0.531089863091305)<<(NULLIF('-1496417560', '-780263355'))), GROUP_CONCAT(((rt0.c0)+(rt1.c3))), (UNICODE(rt0.c0) IN ()) FROM rt0, rt1 WHERE ((((387555035)) NOT BETWEEN ((('0.2750834568739654' IN (0.39615298315142633)))) AND (((((NULL, NULL, NULL, x'eb35', NULL))>=((x'', NULL, 0xffffffffcd2534ee, 'ⓓXqv(TRc!', 'Tw'))))))); -- 0ms;
SELECT DISTINCT SUM(CAST(vt0.c0 AS TEXT)) OVER (), (rt1.c2 COLLATE BINARY IN ()), '' FROM rt0, vt0; -- 1ms;
SELECT DISTINCT CAST(((vt0.c0)IS(rt0.c0)) AS NUMERIC) FROM rt1, rt0;SELECT ALL CAST((((('?')AND(rt0.c0)))AND(vt0.c0)) AS TEXT) FROM rt0, rt1 WHERE (CAST(((((NULL)OR(0.4483734428796565)))AND('-548167389')) AS TEXT));SELECT ALL CASE ((rt0.c2) BETWEEN (rt0.c2) AND (rt1.c1))  WHEN CAST(vt0.c0 AS INTEGER) THEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) WHEN ((rt1.c3) NOT BETWEEN (rt1.c3) AND (rt1.c3)) THEN rt1.c0 COLLATE RTRIM WHEN SUM(rt1.c3) THEN '0.9423621283558162' ELSE CAST(vt0.c0 AS REAL) END, (+ (MIN(vt0.c0))), ((((((((0.40431675142463475)OR(CAST(rt0.c0 AS INTEGER))))OR((+ (vt0.c0)))))AND(rt1.c2)))AND(((rt0.c0)GLOB(rt1.c3)))) FROM vt0 WHERE (IFNULL(((x'6e8d') BETWEEN (NULL) AND ('Ta')), '' COLLATE RTRIM)) UNION ALL SELECT SUM((((rt1.c0))<((rt0.c1)))), ((((rt0.c1) IS TRUE)) IS FALSE), COUNT(*) FILTER(WHERE x'') OVER ( ORDER BY (((vt0.c0))==(((((rt0.c1))<((x''))))))  NULLS LAST, ((((ROUND(rt1.c2, 'l'))AND(CAST(rt1.c1 AS NUMERIC))))OR(NULL)) ASC  NULLS FIRST, CAST(((rt1.c0)OR(rt1.c2)) AS BLOB) ASC  NULLS FIRST) FROM vt0, rt1 ORDER BY (~ (((rt0.c2)|(rt1.c2)))) ASC  NULLS FIRST;SELECT DISTINCT (- ((NOT (rt0.c2)))) FROM rt0 GROUP BY ((rt0.c1) BETWEEN (rt1.c1) AND (rt1.c2)) COLLATE RTRIM ORDER BY ((0.46997951024396634)%(((rt0.c2) IS FALSE))) ASC;SELECT ALL AVG(rt1.c0) FROM rt1 WHERE ((((((((((((x'')) BETWEEN ((0Xfffffffffdac559a)) AND ((x'7c21'))))AND(x'85a8' COLLATE RTRIM)))OR(x'c03c')))AND(((NULL) NOT BETWEEN (NULL) AND (NULL)))))OR((('qf') IS TRUE)))); -- 1ms;
SELECT DISTINCT NULLIF(DISTINCT ((rt1.c3) IS TRUE), rt0.c2 COLLATE BINARY), ((CAST(rt1.c0 AS BLOB)) NOTNULL), CASE rt1.c0 COLLATE RTRIM  WHEN (- (rt1.c2)) THEN ((((rt0.c0)OR(vt0.c0)))AND(rt1.c3)) ELSE AVG(rt1.c0) END FROM vt0, rt0;SELECT DISTINCT SUM((((rt1.c2)) NOT BETWEEN ((rt1.c2)) AND ((x'')))) FROM vt0, rt0;SELECT COUNT((NOT (rt0.c1))) FROM rt0, vt0, rt1; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c0  WHEN rt1.c2 THEN rt1.c3 END  WHEN rt1.c0 COLLATE NOCASE THEN (vt0.c0 IN ()) ELSE COUNT(rt0.c1) END, (((((vt0.c0) BETWEEN (rt1.c1) AND (rt1.c2))))>=((CAST(rt1.c0 AS INTEGER)))), ((rt0.c2)%(rt1.c1)) COLLATE BINARY FROM vt0;SELECT ALL (LOWER(DISTINCT rt1.c2) IN ()) FROM rt1, rt0 GROUP BY (0.917969490200133 COLLATE BINARY IN (((rt0.c2) IS TRUE), ((rt0.c2) NOT BETWEEN (rt1.c0) AND (rt1.c3)))) ORDER BY (+ (rt1.c1)) COLLATE NOCASE, ((CAST(rt1.c3 AS BLOB)) NOT BETWEEN (GLOB(rt0.c0, rt1.c1)) AND (((rt0.c0)%(rt0.c2)))); -- 1ms;
SELECT ((((((rt0.c1)AND(rt0.c1)))OR('9j+\npdL')))|(CASE rt0.c1  WHEN rt1.c2 THEN rt1.c1 ELSE vt0.c0 END)) FROM rt0, vt0, rt1; -- 0ms;
SELECT (+ (TOTAL(rt1.c3))), STRFTIME(CAST(rt1.c1 AS REAL), ((rt0.c2)-(rt0.c2)), ((rt0.c0) NOT NULL)), ((((+ (rt1.c3)), (('')|(rt0.c0)), ((rt1.c1) BETWEEN (rt1.c0) AND (rt1.c1)), rt1.c3, CAST(vt0.c0 AS INTEGER)))>(((+ (vt0.c0)), MIN(rt0.c1, rt1.c3), (rt1.c2 IN ()), rt1.c2, ((((((((((((rt0.c0)OR(vt0.c0)))OR(NULL)))AND(rt1.c1)))AND(rt0.c1)))AND(vt0.c0)))OR(rt0.c2))))) FROM vt0 WHERE ((((((NULL) ISNULL)))>((((NULL)IS NOT(x''))))));SELECT DISTINCT ((((('') NOT BETWEEN (rt1.c2) AND (NULL)), (rt1.c3 IN (rt0.c0)), ((rt1.c3)/(rt0.c1))))>((((rt1.c3) NOTNULL), ((rt1.c3)GLOB(rt1.c0)), (((rt1.c3)) BETWEEN ((rt1.c2)) AND ((rt0.c2)))))) FROM rt0;