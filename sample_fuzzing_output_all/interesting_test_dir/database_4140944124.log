-- Time: 2024/06/07 10:52:48
-- Database: database24
-- Database version: 3.40.0
-- seed value: 4140944124
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4); -- 1ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0, c1); -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=('-1758374542'); -- 0ms;
DELETE FROM rt0 WHERE 0.7372058069246764; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(x'bb45'); -- 0ms;
UPDATE rt0 SET (c2)=('㭊,啲XC') WHERE ((((((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c1)<(rt0.c2)))))OR((+ (rt0.c3)))); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('㭊,啲XC') WHERE (((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))) BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c4))) AND (((rt0.c2)LIKE(rt0.c0)))); -- 1ms;
ANALYZE rt0; -- 0ms;
PRAGMA recursive_triggers = true; -- 0ms;
PRAGMA incremental_vacuum(-1758374542); -- 0ms;
UPDATE OR REPLACE vt1 SET (c1, c1, c0)=('1915435850', x'', 1.91543585E9); -- 0ms;
UPDATE OR IGNORE vt1 SET c1=0.3546934727632449; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA foreign_keys; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1, c1)=(NULL, 0.7886330143946214) WHERE (((NOT (vt1.c0)))%(vt1.c1)); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
VACUUM main; -- 1ms;
UPDATE OR REPLACE rt0 SET (c2)=(NULL) WHERE (((((rt0.c4, rt0.c1, rt0.c3)) NOT BETWEEN ((1.91543585E9, 0.6759104497322564, rt0.c1)) AND ((rt0.c2, rt0.c3, rt0.c3))))GLOB(((rt0.c2)>(-623194421)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 1ms;
UPDATE OR IGNORE vt1 SET c1='-1758374542'; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1, c0) VALUES (NULL, NULL), (NULL, x''), (0.8365865725317424, -1.758374542E9); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c0) VALUES ('j4T,by U', -623194421); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('2vcg'); -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(1.91543585E9) WHERE (CAST(vt1.c0 AS INTEGER) IN (((((vt1.c0)OR(vt1.c0)))AND(vt1.c1)), ((vt1.c1) NOT BETWEEN (NULL) AND (vt1.c0)))); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2='-{P縁}' WHERE (((rt0.c4, 0.2613418261605339, rt0.c2)) NOT BETWEEN ((CASE -598654809  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END, rt0.c3, LIKELIHOOD(rt0.c1, 0.6430805080487058))) AND ((((rt0.c2)LIKE('1915435850')), (((rt0.c4, rt0.c4, rt0.c4, rt0.c2, rt0.c3)) NOT BETWEEN ((rt0.c3, rt0.c1, rt0.c4, rt0.c3, rt0.c1)) AND ((rt0.c2, rt0.c4, rt0.c4, rt0.c3, rt0.c1))), ((rt0.c4)<=(rt0.c1))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4) VALUES (0.09306402912874667); -- 1ms;
UPDATE OR IGNORE rt0 SET c2='-442139135'; -- 0ms;
UPDATE OR ROLLBACK vt1 SET (c1)=('Mz3') WHERE ((((vt1.c0)<(vt1.c1))) BETWEEN (((vt1.c0) NOT NULL)) AND (('HQ4' IN (vt1.c1)))); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c1) VALUES (0.020683525387732882), (NULL), ('-1758374542'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c4)=(0.01498197470162077, x'') WHERE load_extension(rt0.c2, rt0.c2) COLLATE BINARY; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-2004116059; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0, c1) VALUES ('969618806', NULL); -- 0ms;
REINDEX; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES ('-565195246'); -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
PRAGMA integrity_check; -- 0ms;
INSERT OR ABORT INTO vt1 VALUES (NULL, -442139135); -- 0ms;
PRAGMA main.soft_heap_limit = 6435121320971908586; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='5SR㭊t軲k2', c4='1441019848'; -- 0ms;
UPDATE rt0 SET c0=0.09306402912874667 WHERE CASE (((rt0.c4))=((rt0.c1)))  WHEN (- (rt0.c4)) THEN rt0.c1 COLLATE BINARY ELSE ((rt0.c0) ISNULL) END; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE vt1 SET (c1)=(x''); -- 1ms;
INSERT OR IGNORE INTO vt1(c0, c1) VALUES ('	BDbớXᇥ', NULL); -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA cache_spill; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL) WHERE CASE WHEN CAST(vt1.c1 AS REAL) THEN vt1.c0 COLLATE BINARY WHEN (((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) THEN ((((vt1.c0)AND(vt1.c1)))AND(vt1.c1)) WHEN (vt1.c0 IN ()) THEN ((((vt1.c0)OR(vt1.c0)))AND(vt1.c0)) ELSE (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c1))) END; -- 0ms;
INSERT OR FAIL INTO rt0(c3) VALUES (1087708891); -- 0ms;
INSERT OR ABORT INTO rt0(c4, c0, c3) VALUES (NULL, '-1347546651', 0.7886330143946214); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4)=(x'') WHERE (NOT (CAST(rt0.c2 AS INTEGER))); -- 0ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR FAIL vt1 SET (c0)=(x''); -- 0ms;
PRAGMA main.checkpoint_fullfsync = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE rt0; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=(NULL); -- 1ms;
PRAGMA foreign_keys = false; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(NULL); -- 1ms;
INSERT OR IGNORE INTO vt1(c1) VALUES ('6435121320971908586'); -- 0ms;
PRAGMA temp.secure_delete = false; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c1, c1)=(x'', NULL, x'6a5a'); -- 0ms;
INSERT OR ABORT INTO vt1(c1, c0) VALUES ('-1860525649', x''), ('', 1.57001701E9), (NULL, '?ZrpIpx'); -- 1ms;
UPDATE OR IGNORE vt1 SET c1=6.435121320971908E18, c1=x'' WHERE x''; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA main.stats; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET (c4, c0)=(0xffffffffdc5140a7, x''); -- 0ms;
END; -- 0ms;
PRAGMA foreign_keys = true; -- 0ms;
UPDATE rt0 SET c0=0.8365865725317424; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x'' WHERE ((((CAST(rt0.c1 AS NUMERIC))OR(rt0.c1 COLLATE RTRIM)))OR(NULL)); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=-1.347546651E9 WHERE rt0.c2; -- 0ms;
PRAGMA mmap_size = -3093724538249446135; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((0xfffffffff9a2f1ad) IS FALSE), 0.24759018845315406), ((NOT (rt0.c2)) IN ()), ((vt1.c0)+(rt0.c2)) COLLATE RTRIM FROM rt0 WHERE (((CAST(0.3287281809139416 AS INTEGER))/(x'')));SELECT DISTINCT (rt0.c1 IN ()) COLLATE NOCASE FROM vt1; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT rt0.c3, rt0.c3) COLLATE BINARY FROM vt1, rt0 WHERE ((('')|(CASE 0Xffffffffc6e64f68  WHEN 'pY2,9꫖pR䢌' THEN 'kx' END))); -- 0ms;
SELECT (((rt0.c3 IN ()))>>(LOWER(DISTINCT rt0.c2))) FROM vt1, rt0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( RANGE (rt0.c1 COLLATE NOCASE IN ()) PRECEDING), (- (((vt1.c0) NOTNULL))), CUME_DIST() OVER ( ROWS BETWEEN ((vt1.c1 COLLATE BINARY)<('-848956147')) PRECEDING AND  UNBOUNDED FOLLOWING) FROM rt0, vt1 GROUP BY ((((NULL, vt1.c1, rt0.c4)) BETWEEN ((rt0.c1, rt0.c3, rt0.c2)) AND ((rt0.c2, NULL, vt1.c1))) IN (((rt0.c0) IS TRUE)));SELECT ALL ((vt1.c0 COLLATE NOCASE)>(COALESCE(DISTINCT vt1.c0, rt0.c3, 0.7479621292495546, vt1.c0))), (((((rt0.c4, vt1.c0, rt0.c4))>((rt0.c3, vt1.c0, 2011623860)))) NOT BETWEEN (x'') AND ((('8SE')<<(vt1.c0)))), json_array(SUM(rt0.c0), CAST(0.28981498286599294 AS REAL)) FROM rt0 LIMIT -598654809 OFFSET -211463273;SELECT DISTINCT ((((vt1.c0) IS TRUE)) IS FALSE) FROM vt1; -- 0ms;
SELECT (((- (rt0.c1))) NOT NULL), GROUP_CONCAT(((rt0.c2)|(rt0.c3))), vt1.c1 COLLATE RTRIM FROM rt0, vt1 WHERE ((((+ (''))) NOTNULL)) ORDER BY ((((((rt0.c2)OR(vt1.c0)))AND(rt0.c2))) IS FALSE) DESC  NULLS LAST, ((((rt0.c2)!=(rt0.c0))) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT JULIANDAY((vt1.c0 IN ()), ((((((((NULL)OR(vt1.c1)))AND(rt0.c0)))AND(rt0.c3)))AND(rt0.c1)), CHANGES()) FROM vt1, rt0 WHERE (CASE CAST(x'dba5' AS REAL)  WHEN CASE 1850522893  WHEN 'xds7_휌gO' THEN '-9[ ^w' WHEN x'2c49' THEN NULL WHEN NULL THEN 2.01162386E9 END THEN (- ('')) WHEN (0xffffffffcd65f50d IN ()) THEN ((0.6313963269955055) NOT BETWEEN (0.005642784410317514) AND ('x6')) WHEN NULL THEN (('0.09306402912874667') BETWEEN (NULL) AND (0.38214120923796835)) END) ORDER BY HEX(TYPEOF(rt0.c3))  NULLS FIRST; -- 0ms;
SELECT ALL (((((rt0.c0, vt1.c0, vt1.c1))==((vt1.c0, rt0.c2, rt0.c4)))) BETWEEN (((((rt0.c2)OR(rt0.c2)))AND(rt0.c4))) AND (((rt0.c4)GLOB(rt0.c0)))) FROM vt1;SELECT rt0.c3, TYPEOF(LOWER(DISTINCT vt1.c1)), (((((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1)))) NOT BETWEEN ('6h??!	') AND ((((rt0.c3, rt0.c4, rt0.c0))>((rt0.c2, rt0.c0, rt0.c0))))) FROM rt0 GROUP BY CASE ((((vt1.c0)OR(rt0.c0)))OR(vt1.c1))  WHEN ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)) THEN vt1.c1 COLLATE BINARY END LIMIT 4859651486881674598;SELECT ALL ((CASE rt0.c4  WHEN rt0.c0 THEN vt1.c0 END)<<(CAST(rt0.c1 AS TEXT))) FROM vt1;SELECT LIKELY('-1375162065'), CUME_DIST() OVER (), (rt0.c2 IN ()) FROM vt1, rt0 WHERE (((((('2011623860')OR('uir䂧''j')))AND(0.495605556140841)) IN (((((x'')AND('-1005869913')))AND('-2097508042'))))); -- 0ms;
SELECT DISTINCT (- (rt0.c4)) COLLATE NOCASE FROM rt0, vt1 WHERE (CAST('-2097508042' AS TEXT)); -- 0ms;
SELECT CAST(((vt1.c1)GLOB(908860469)) AS NUMERIC) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)/(((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3)))) FROM rt0, vt1 WHERE (CASE WHEN 0.8787595129865832 THEN NULL COLLATE NOCASE END); -- 1ms;
SELECT DISTINCT (((((vt1.c1) NOTNULL)))=(((((rt0.c2))!=((0xffffffffe3a5fef6)))))), ((CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c4 THEN rt0.c4 END)<<(0x7fffffffffffffff)), ((((json_patch(9.08860469E8, vt1.c1))OR(rt0.c4 COLLATE BINARY)))AND(CAST(rt0.c1 AS REAL))) FROM vt1 ORDER BY vt1.c1 DESC  NULLS LAST;SELECT ALL (rt0.c0 IN ()) COLLATE RTRIM FROM rt0 WHERE ((CAST(x'' AS TEXT) IN ('' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((((CASE rt0.c3  WHEN rt0.c2 THEN rt0.c0 END)AND(TRIM(DISTINCT rt0.c4, rt0.c3))))AND(CASE WHEN x'' THEN rt0.c4 ELSE rt0.c2 END)))AND(vt1.c1)))AND(vt1.c1 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT NTILE((+ (CASE vt1.c1  WHEN rt0.c3 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 ELSE vt1.c1 END))) OVER () FROM vt1, rt0 GROUP BY ((((x'dd0e') NOT BETWEEN (vt1.c0) AND (rt0.c1)))<>(rt0.c2)) HAVING (rt0.c1 COLLATE RTRIM IN (((rt0.c3)||(rt0.c0)), (+ (rt0.c1))));SELECT DISTINCT ((((((((((vt1.c1)&(vt1.c0)))OR(SUM(vt1.c0))))AND(GROUP_CONCAT(vt1.c1))))OR(((rt0.c1) IS TRUE))))AND(CASE WHEN rt0.c1 THEN vt1.c0 END)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c2 WHEN vt1.c0 THEN x'55785db7' WHEN rt0.c3 THEN vt1.c0 ELSE -789861674 END)>=((+ (0.5949626772083606)))) FROM rt0;SELECT DISTINCT ((CAST(vt1.c0 AS BLOB)) NOT BETWEEN ((NULL IN ())) AND (((rt0.c1) IS TRUE))) FROM vt1, rt0 WHERE (CASE WHEN 272541500 THEN '-598654809' END COLLATE BINARY) GROUP BY (+ (rt0.c3 COLLATE RTRIM)), ((vt1.c1 IN ()) IN ()), (((- (-848956147))) NOT NULL); -- 1ms;
SELECT DISTINCT AVG(((rt0.c1) IS FALSE)), COUNT(*) OVER ( PARTITION BY ((((CAST(vt1.c0 AS TEXT))OR(NULLIF(DISTINCT rt0.c0, rt0.c1))))AND(NULL)), (((((rt0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)), 0.3287281809139416, (vt1.c1 IN ())))=((vt1.c1 COLLATE NOCASE, vt1.c0, NULL)))), (((((vt1.c0, rt0.c1, rt0.c2))<((rt0.c0, rt0.c4, vt1.c1))))>(rt0.c4 COLLATE NOCASE)) FROM vt1, rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt1 WHERE (((((NULL) BETWEEN (x'b827') AND (NULL)))<((~ (']&'))))) GROUP BY ((((x'')<(vt1.c1)))*(((vt1.c0) NOT BETWEEN (rt0.c2) AND ('-1758374542')))), (CASE rt0.c3  WHEN rt0.c1 THEN vt1.c0 END IN (((rt0.c0)<=(rt0.c1)), rt0.c4)), ((((CAST(vt1.c0 AS INTEGER))OR(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c0 WHEN 'l>' THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c1 THEN vt1.c1 END)))OR(rt0.c4 COLLATE NOCASE));SELECT SUM(CAST(rt0.c3 AS INTEGER)) FROM vt1;SELECT DISTINCT LAST_VALUE(((((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) IN ((rt0.c3 IN ())))) OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CASE (rt0.c3 IN ())  WHEN 0.01498197470162077 THEN CAST(rt0.c1 AS TEXT) WHEN CASE vt1.c0  WHEN rt0.c4 THEN rt0.c4 END THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END WHEN ((rt0.c3)IS NOT(rt0.c0)) THEN ((-7.89861674E8)>=(vt1.c1)) ELSE ((rt0.c2)>=(rt0.c4)) END, (((vt1.c1 IN ('', vt1.c0))) ISNULL), rt0.c2 FROM rt0 WHERE (((0.23741064298381298) NOT BETWEEN (0.6409032812851387) AND (0.8787595129865832)) COLLATE NOCASE COLLATE RTRIM);SELECT CAST(vt1.c0 AS REAL) COLLATE RTRIM FROM vt1; -- 0ms;
SELECT ALL TOTAL((rt0.c1 IN ())) OVER (), LOWER(0.9063976180414743), ((((((((rt0.c2)OR('-1860525649')))OR(rt0.c0 COLLATE RTRIM)))OR((+ (rt0.c4)))))OR(((rt0.c1)&(rt0.c3)))) FROM vt1;SELECT DISTINCT (((x'', MAX(rt0.c3), CASE WHEN rt0.c2 THEN 0.8809349530997757 END))<(((NOT (rt0.c3)), SUM(vt1.c1), (- (vt1.c1))))), DATETIME(((x'e950418a') IS FALSE), vt1.c0 COLLATE BINARY, (rt0.c0 IN (NULL, 0.4269114378836242))), ((rt0.c2) BETWEEN (vt1.c1) AND (rt0.c1)) COLLATE RTRIM, ((((((((((((((x'')AND(rt0.c0)))AND(vt1.c1)))OR(vt1.c1)))AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c1)))+(((rt0.c3) NOT BETWEEN (0.22388274216364124) AND (vt1.c0)))), (((rt0.c2 IN ()))*(((((rt0.c4)AND(vt1.c1)))AND(rt0.c2)))) FROM rt0, vt1 WHERE (((((x'') NOT BETWEEN (NULL) AND ('0.9063976180414743')))>>((('-106761811') NOT NULL)))); -- 1ms;
SELECT MIN((((NULL, rt0.c4, rt0.c3)) NOT BETWEEN ((rt0.c1, vt1.c0, rt0.c1)) AND ((vt1.c1, vt1.c0, vt1.c1)))) FROM vt1, rt0 WHERE (((((((NULL)=(x'6cb9')))AND((x'' IN ()))))AND(((NULL)LIKE(x''))))); -- 0ms;
SELECT ALL (((((('AT)ﲄ')OR(rt0.c1)))OR(rt0.c2))) NOT NULL) FROM rt0 WHERE (CASE (- ('6435121320971908586'))  WHEN LIKELIHOOD(x'', 0.42100768083284135) THEN ((NULL)==(NULL)) WHEN ((NULL)*('l>')) THEN ((x'')GLOB('')) WHEN ((NULL)>(0.9526975758592098)) THEN ((x'8b20')>=(x'95de')) ELSE (('I_U}HKdN(')IS('-219169871')) END); -- 1ms;
SELECT DISTINCT ((LOWER(DISTINCT rt0.c2)) NOT NULL) FROM rt0, vt1 WHERE (CAST((('UW') NOT BETWEEN ('ZFq!O	') AND (x'906d')) AS BLOB)); -- 0ms;
SELECT ALL ((MIN(rt0.c4))IS(((rt0.c4)>(rt0.c3)))), ((rt0.c4 IN ()) IN ()), AVG(CASE WHEN rt0.c0 THEN rt0.c1 END) FROM vt1, rt0 WHERE ((((((((((((((((('231886627')OR(x'')))OR(-4.42139135E8)))AND(0.6136217255103964)))AND(0x433b95fa)))AND(x'' COLLATE RTRIM)))OR(((((0.7212801951323936)OR(0.7204027245413207)))AND('BG')))))OR(CASE x''  WHEN 'MF' THEN 0xfffffffff9ae7dad ELSE '' END)))OR(x''))); -- 0ms;
SELECT ALL vt1.c1 FROM vt1, rt0 WHERE (CAST(NULL AS TEXT) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (+ (AVG(rt0.c2))) FROM rt0 WHERE ((((('-957984920')IS NOT(0.8348342631786946)))<=(-1514003948 COLLATE RTRIM))) LIMIT 1243183680 OFFSET -565195246; -- 0ms;
SELECT ALL ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)))/('1103140038')) FROM rt0, vt1 GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (TYPEOF(vt1.c0)) AND (vt1.c0)); -- 0ms;
SELECT UNICODE(((rt0.c2)/(rt0.c0))), rt0.c2, (NOT (((rt0.c4)/(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((vt1.c0)) BETWEEN ((((rt0.c0) NOTNULL))) AND ((((rt0.c4)OR(vt1.c0))))) FROM rt0, vt1 WHERE ((((((((NULL, NULL, 0.9722564872615749))=(('', NULL, x'3dd6'))))OR(((((0.7345742829590535)OR('0.28981498286599294')))AND(NULL)))))OR((((('-1347546651')OR(NULL)))AND(''))))); -- 0ms;
SELECT DISTINCT COALESCE(rt0.c0, vt1.c1) COLLATE RTRIM FROM rt0 WHERE (((NULL) NOTNULL) COLLATE BINARY) GROUP BY (+ (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN (CASE rt0.c2  WHEN vt1.c1 THEN rt0.c3 WHEN '-1353037684' THEN rt0.c4 WHEN -96666918 THEN rt0.c0 ELSE rt0.c3 END) AND (((rt0.c4)/(rt0.c4)))), ((((((((CAST(rt0.c0 AS TEXT))OR(vt1.c1 COLLATE BINARY)))OR(CASE rt0.c0  WHEN rt0.c4 THEN 'kx' END)))OR((((vt1.c1))<((vt1.c1))))))OR(CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)) LIMIT -2079203561;SELECT DISTINCT (('-1e500') BETWEEN (vt1.c0) AND (rt0.c0)) COLLATE RTRIM FROM vt1 WHERE (CASE (+ (0.23741064298381298))  WHEN ((0x31494af9)&(x'3572')) THEN (0x2dba1246 IN (0.5951636840468775)) ELSE (((((((('0.005642784410317514')AND('')))AND(0.8847895883090271)))AND('235397665')))OR(x'')) END);SELECT ALL ((((~ (vt1.c1))))<((MIN(rt0.c1)))) FROM vt1, rt0 GROUP BY vt1.c1; -- 1ms;
SELECT DISTINCT ((TOTAL_CHANGES()) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND (x'')) FROM rt0, vt1 WHERE (CASE WHEN 2076874315 THEN (+ (x'')) END) GROUP BY CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END AS TEXT); -- 0ms;
SELECT ((((rt0.c3)GLOB(vt1.c0)))<(rt0.c2 COLLATE NOCASE)) FROM vt1, rt0 ORDER BY ((vt1.c1) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE RTRIM, CAST(CASE WHEN rt0.c4 THEN 0.13911363919089703 ELSE vt1.c0 END AS TEXT), (((UPPER(rt0.c3), TRIM(DISTINCT vt1.c0), ((vt1.c0) IS TRUE)))<=(((((rt0.c4, rt0.c4, rt0.c2))==((vt1.c1, vt1.c0, rt0.c0))), ((rt0.c1) NOT NULL), (((vt1.c1, rt0.c1, vt1.c0)) NOT BETWEEN ((vt1.c0, rt0.c2, rt0.c4)) AND ((vt1.c1, rt0.c0, rt0.c4))))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL) FROM rt0 WHERE (CASE CAST('꫖WsL[C).' AS TEXT)  WHEN ((NULL)<=('8Qw}r')) THEN 0.09306402912874667 COLLATE BINARY WHEN ((x'') ISNULL) THEN CAST(NULL AS NUMERIC) WHEN CASE NULL  WHEN NULL THEN NULL ELSE -4.42139135E8 END THEN ((NULL)>('Mi\r,')) WHEN (NULL IN (0.6886863551965856, 0.7699742521417687)) THEN x'' WHEN CASE NULL  WHEN 0X55ce23a4 THEN 0xffffffffc8220256 ELSE '-1569165952' END THEN NULL END); -- 1ms;
SELECT ((json_object(rt0.c4, vt1.c1, rt0.c4, x'', rt0.c2, rt0.c0))&(CASE rt0.c1  WHEN rt0.c1 THEN x'' WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c1 END)) FROM vt1, rt0;SELECT DISTINCT (TIME(rt0.c4, rt0.c2, rt0.c0) IN ()) FROM rt0, vt1 WHERE ((- (((('6435121320971908586'))<((-219169871)))))); -- 0ms;
SELECT ALL (vt1.c1 IN (vt1.c0)) COLLATE RTRIM, '767169094', 0.22567337058670334 FROM vt1, rt0 WHERE ((CASE WHEN '' THEN ')w' ELSE '-789861674' END IN ())); -- 0ms;
SELECT CASE ((vt1.c0) BETWEEN (rt0.c1) AND (rt0.c3))  WHEN (((vt1.c1)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c4))) THEN ((((rt0.c3)OR(rt0.c4)))AND(x'')) END, CAST(((rt0.c1)||(vt1.c1)) AS BLOB), (+ ((NOT (rt0.c0)))) FROM vt1;SELECT DISTINCT vt1.c1 FROM rt0, vt1 WHERE (0.8250086939563718); -- 0ms;
SELECT ALL (((rt0.c0, rt0.c0, rt0.c4)) BETWEEN (((+ (rt0.c1)), (('L>') BETWEEN (rt0.c4) AND (rt0.c2)), ((vt1.c0)IS(0Xffffffff8b417584)))) AND ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)), CAST(rt0.c3 AS NUMERIC), NULL))), (((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))*(x'')), CAST(((rt0.c2) IS TRUE) AS REAL) FROM rt0 RIGHT OUTER JOIN vt1 ON ((IFNULL(DISTINCT rt0.c2, '-1616527271'))==(CAST(vt1.c1 AS BLOB))) GROUP BY ((((((rt0.c1) NOT BETWEEN (rt0.c4) AND (vt1.c1)))OR(vt1.c0 COLLATE RTRIM)))OR(CAST(x'' AS TEXT))), ((((UNLIKELY(vt1.c1))AND(PRINTF(rt0.c3, vt1.c0, rt0.c0))))OR(CASE x''  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END)), (NOT (((rt0.c4) NOT BETWEEN (rt0.c1) AND (vt1.c0)))); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c0) NOTNULL)) FROM vt1 GROUP BY -2004116059 HAVING LIKELY(DISTINCT CAST(rt0.c3 AS TEXT));SELECT DISTINCT (((vt1.c0)) BETWEEN ((MIN(rt0.c2))) AND ((((rt0.c1) NOT NULL)))) FROM rt0 LIMIT -106761811 OFFSET 2098852000;SELECT ALL ((((rt0.c4) BETWEEN (rt0.c1) AND (vt1.c1)))LIKE(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)))), (((vt1.c0)LIKE(rt0.c4)) IN ()), CASE WHEN CAST(rt0.c4 AS NUMERIC) THEN CASE WHEN rt0.c2 THEN rt0.c1 END ELSE load_extension(rt0.c4) END, ((((((((((rt0.c2)AND(vt1.c1)))AND(vt1.c0)))AND(rt0.c3)))OR(rt0.c2)))!=(rt0.c1)), CAST(vt1.c0 AS BLOB) FROM rt0;SELECT ALL COUNT(rt0.c4) OVER ( PARTITION BY CAST(((rt0.c2)-(rt0.c4)) AS BLOB), ((TRIM(DISTINCT rt0.c1, rt0.c4)) BETWEEN (((vt1.c1)<(vt1.c1))) AND ((NOT (rt0.c1))))), rt0.c3, (((vt1.c0 IN ())) NOT BETWEEN (rt0.c0) AND (CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c4 END)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (+ (DATE(rt0.c3, rt0.c4, rt0.c3))) FROM vt1, rt0; -- 0ms;
SELECT ALL ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c3 WHEN rt0.c0 THEN vt1.c1 ELSE vt1.c0 END) NOT BETWEEN (((rt0.c0)!=(rt0.c0))) AND ((rt0.c0 IN ()))) FROM vt1 WHERE (LIKELY(MIN(NULL, x'fe5c', 0.2732821405635347, NULL)));SELECT (((rt0.c3)) NOT BETWEEN ((LIKELIHOOD(DISTINCT rt0.c3, 0.4509942537135344))) AND ((CAST(rt0.c2 AS BLOB)))) FROM rt0, vt1 WHERE (json_object(CAST(NULL AS REAL), ((NULL)LIKE(x'')))) LIMIT 1199296334 OFFSET -983321900;SELECT DISTINCT CAST(((rt0.c1)*(rt0.c0)) AS TEXT) FROM vt1 LIMIT 931186376 OFFSET -344768580;SELECT ALL ((((rt0.c4)IS(rt0.c4)))+(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN NULL END)), NULL, COUNT(*) OVER ( PARTITION BY (((~ (rt0.c2)))<=((((vt1.c1))<((rt0.c1))))), (rt0.c4 COLLATE BINARY IN ())) FROM vt1 LIMIT 9223372036854775807;SELECT DISTINCT ((((x'')<=(vt1.c1))) NOT BETWEEN (((vt1.c0)+(rt0.c2))) AND ((- (vt1.c0)))) FROM vt1 WHERE (CAST((((x'', 0xffffffffafae11e5, 0X32d5b7d8))<((0.1559315942362718, x'', '1199296334'))) AS TEXT)) ORDER BY ((rt0.c0) ISNULL) DESC;SELECT DISTINCT (((rt0.c3)) BETWEEN ((((vt1.c1) NOT BETWEEN (vt1.c1) AND (rt0.c4)))) AND ((vt1.c0))) FROM vt1 WHERE (CAST(CASE NULL  WHEN 0.6644882758119721 THEN x'' ELSE NULL END AS REAL));SELECT DISTINCT CASE WHEN CAST(rt0.c3 AS NUMERIC) THEN ((rt0.c3)IS(rt0.c1)) ELSE rt0.c3 END FROM vt1, rt0 WHERE (CAST('ihJ)gP' AS INTEGER)) LIMIT 1995731236; -- 0ms;
SELECT DISTINCT (+ ((rt0.c4 IN (rt0.c4)))) FROM vt1, rt0 WHERE (CAST('(' COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT (((((rt0.c3))<=((rt0.c0)))) NOTNULL) FROM rt0, vt1 GROUP BY CASE WHEN rt0.c3 THEN (+ (vt1.c1)) END, CAST('-1308893469' AS NUMERIC), ((((((((((0xffffffffdb774891)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c3))) IS FALSE) HAVING (((rt0.c3) BETWEEN (rt0.c2) AND (vt1.c1)) IN ()); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( GROUPS CAST(CASE WHEN rt0.c4 THEN rt0.c0 END AS REAL) PRECEDING EXCLUDE CURRENT ROW), TOTAL((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) OVER (), COUNT(*) OVER () FROM vt1;SELECT MIN(((rt0.c4) NOT BETWEEN (vt1.c0) AND (rt0.c2))) FROM rt0;SELECT DISTINCT (('1103140038') NOT BETWEEN (((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))) AND ('-848956147')) FROM vt1 WHERE (CASE (0.9073945710373726 IN ())  WHEN ('-822410756' IN ()) THEN (+ ('8g!\r oR*꒧')) WHEN ((NULL)>(x'')) THEN ((0.5076389939878624) IS FALSE) WHEN ((0.20618569599011705) BETWEEN ('0.5949626772083606') AND (x'')) THEN (((NULL)) BETWEEN (('1732466560')) AND ((x''))) END);SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((('E'))>=((rt0.c3))))) AND ((CAST(rt0.c0 AS REAL)))) FROM rt0 WHERE ((((('eD]rxlUTp') ISNULL))=(((0X6e27487f)>(0.24779304365677768))))); -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)<=(rt0.c4)) AS NUMERIC) FROM rt0, vt1; -- 0ms;
SELECT TRIM(x'') COLLATE NOCASE FROM rt0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*), ((((rt0.c4) BETWEEN (rt0.c3) AND (0.9254055152177308))) NOT BETWEEN (rt0.c0) AND (((vt1.c0)==(rt0.c2)))), COUNT(*) FROM rt0 WHERE (CASE x'a312'  WHEN x'' THEN 1497545666 ELSE '-595381899' END COLLATE BINARY) ORDER BY rt0.c3 ASC  NULLS FIRST;SELECT ALL CASE (((vt1.c1))>=(('(')))  WHEN CASE vt1.c0  WHEN rt0.c4 THEN vt1.c0 END THEN (((vt1.c0, rt0.c4, rt0.c1)) BETWEEN ((x'', rt0.c1, rt0.c3)) AND ((rt0.c4, rt0.c3, 272541500))) END FROM rt0, vt1; -- 0ms;
SELECT ALL x'feea' FROM rt0, vt1 GROUP BY ((((((rt0.c0)OR(rt0.c3)))AND(vt1.c0))) IS FALSE) HAVING (((rt0.c1))<>((rt0.c3))) COLLATE BINARY; -- 0ms;
SELECT (((vt1.c1, rt0.c4, rt0.c1)) NOT BETWEEN ((vt1.c0, rt0.c4, rt0.c2)) AND ((rt0.c1, 'ihJ)gP', rt0.c2))) COLLATE NOCASE FROM rt0, vt1 NOT INDEXED; -- 0ms;
SELECT ALL (((((NOT (rt0.c2)))AND(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(CAST(rt0.c3 AS TEXT))) FROM vt1 ORDER BY (((rt0.c2 IN ())) BETWEEN (CASE vt1.c1  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END) AND (rt0.c4 COLLATE NOCASE));SELECT ALL rt0.c2, MAX(COUNT(CAST(rt0.c3 AS NUMERIC))), ROW_NUMBER() OVER () FROM rt0 WHERE (CAST(NULL AS TEXT));SELECT DISTINCT COALESCE(DISTINCT rt0.c4, ((rt0.c4) NOT NULL)) FROM vt1;SELECT DISTINCT CAST(CASE WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN NULL WHEN rt0.c3 THEN 0x44d05f40 WHEN rt0.c3 THEN NULL ELSE rt0.c3 END AS INTEGER) FROM rt0 WHERE (((('/G')) NOT BETWEEN ((NULL COLLATE RTRIM)) AND (((((('1848068223')AND('~]')))AND(NULL))))));SELECT ALL MIN(((rt0.c3)GLOB(rt0.c1))) FROM vt1;SELECT ALL ((vt1.c1 IN ()) IN ()) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c4, COUNT(*) OVER (), COUNT((~ (rt0.c0))) FROM vt1;SELECT DISTINCT ((CASE WHEN vt1.c1 THEN vt1.c1 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN vt1.c1 ELSE vt1.c1 END)||(MAX(rt0.c1))) FROM vt1, rt0 WHERE (TYPEOF(((('-983321900')) BETWEEN ((NULL)) AND ((0X7e3f35e1))))); -- 0ms;
SELECT ALL (((('-1758374542')AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE vt1.c1 END)))OR(((rt0.c2)<<(rt0.c4)))), (((((vt1.c1, vt1.c0, vt1.c0)) BETWEEN ((rt0.c1, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c4, rt0.c1))))%(CAST(rt0.c2 AS NUMERIC))), (+ (CASE WHEN vt1.c0 THEN rt0.c0 END)) FROM vt1 INTERSECT SELECT DISTINCT ((vt1.c0 COLLATE NOCASE) IS TRUE), CAST((((vt1.c1, rt0.c1, rt0.c4))=((rt0.c4, rt0.c3, vt1.c0))) AS NUMERIC), ((rt0.c3 COLLATE BINARY) IS FALSE) FROM vt1;SELECT AVG((((rt0.c3))>=((rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT (CAST(rt0.c1 AS INTEGER) IN ()), ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c2)))%((rt0.c2 IN ()))), FIRST_VALUE((((- (rt0.c1))) NOT NULL)) OVER () FROM rt0 WHERE (((((- (x''))))<=((0.7212801951323936)))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c3)) COLLATE BINARY, ((vt1.c0) NOT NULL), LOWER(((((rt0.c3)AND(rt0.c3)))AND(rt0.c1))) FROM rt0, vt1 WHERE (((0xffffffffd5a2e165 COLLATE BINARY)>>((0.3534643730135809 IN ())))) LIMIT 1127978490; -- 0ms;
SELECT DISTINCT (- (LIKELY(vt1.c0))), (NOT (x'')), rt0.c2, x'', GROUP_CONCAT((((vt1.c0))>((rt0.c2)))) OVER () FROM rt0, vt1 WHERE (CASE WHEN (+ ('-475660554')) THEN ((((0Xffffffffe0c963a2)AND(x'')))OR(0.8208657266373672)) ELSE ((NULL) IS FALSE) END); -- 0ms;
SELECT DISTINCT LOWER(DISTINCT '-1860525649'), MIN(NULL), SUM(TIME(NULL, rt0.c4, vt1.c0, rt0.c2, rt0.c1)) FROM rt0;SELECT CASE ((((vt1.c0)AND(rt0.c4)))OR(rt0.c1))  WHEN CAST(vt1.c0 AS BLOB) THEN COUNT(*) ELSE rt0.c1 END FROM rt0, vt1 WHERE (((((((x'233a')OR(0.8340483866098732)))AND(1.497545666E9)))GLOB(x'f1eb9437'))); -- 0ms;
SELECT DISTINCT ((((vt1.c0)AND(rt0.c2))) IS FALSE) FROM rt0, vt1 ORDER BY ((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c0)) COLLATE BINARY  NULLS FIRST, COALESCE(DISTINCT (+ (-1.7976931348623157E308)), rt0.c1) LIMIT -599158865; -- 0ms;
SELECT 732250332 FROM vt1 WHERE (((((x'')!=(0.3534643730135809)))<=(-1.468344564E9))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1) NOT BETWEEN ('ZuQ~Ey!Q') AND (vt1.c0)) THEN MAX(rt0.c3) ELSE TYPEOF(vt1.c1) END, NTH_VALUE((((((((((vt1.c1)AND(vt1.c1)))OR(-8.48956147E8)))OR(vt1.c1)))OR(vt1.c0)) IN ()), UNLIKELY(DISTINCT ((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)))) OVER (), LAST_VALUE(((vt1.c0 COLLATE NOCASE) IS FALSE)) OVER () FROM vt1;SELECT (- ((- (0.8310129549806444)))) FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c1 FROM vt1; -- 0ms;
SELECT ALL NTILE(json_patch(CASE WHEN x'' THEN rt0.c3 WHEN rt0.c0 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c1 END, ((vt1.c0)IS(rt0.c4)))) OVER (), ((('')=(rt0.c0)) IN ()), CASE WHEN rt0.c2 THEN ((rt0.c0) IS TRUE) ELSE vt1.c0 END FROM rt0 NOT INDEXED, vt1 WHERE ((((x'' IN ('mi0i', x'')))IS((('''}') NOT BETWEEN (x'') AND (0.29838084007079513)))));SELECT ((((rt0.c0) BETWEEN (rt0.c3) AND (vt1.c1)))OR(x'2ede')), LEAD((CASE vt1.c0  WHEN vt1.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c1 THEN vt1.c0 END IN (((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), vt1.c0 COLLATE BINARY)), (((vt1.c1) BETWEEN (vt1.c1) AND (x'')) IN ()), ((vt1.c0)OR(vt1.c1)) COLLATE RTRIM) OVER (), COUNT((rt0.c1 IN ())) FROM vt1 WHERE (((x'' IN ()) IN ()));SELECT COUNT(((rt0.c0)%(rt0.c0))) OVER () FROM vt1 WHERE (json_patch(((NULL) BETWEEN (NULL) AND (NULL)), (((((((('-1616527271')OR(x'')))OR(0.5225452521982447)))OR(-1.375162065E9)))AND(NULL))));SELECT DISTINCT (~ ((((rt0.c1, vt1.c1, rt0.c0)) BETWEEN ((rt0.c2, '', rt0.c3)) AND ((rt0.c2, rt0.c4, vt1.c1))))) FROM vt1, rt0 WHERE ((- ((('826886905')+(NULL))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((+ (vt1.c0))) FROM vt1, rt0 WHERE (((((((((((((CAST(1081217229 AS REAL))AND(x'' COLLATE NOCASE)))OR(TOTAL_CHANGES())))AND(NULL)))AND((NULL IN (0x312e517a)))))AND(((0.6409032812851387) NOT BETWEEN (0.7640006043437104) AND (0.8787595129865832)))))OR(CHANGES()))) GROUP BY (((((vt1.c1, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, 0x60d06ed4, rt0.c0)) AND (('', vt1.c1, rt0.c1)))) NOT BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c2))>((rt0.c1))))) ORDER BY ((((CAST(rt0.c3 AS NUMERIC))OR(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c3)))))AND(((vt1.c0) BETWEEN (rt0.c3) AND (rt0.c1)))) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((('1915435850')) BETWEEN ((CAST(rt0.c4 AS INTEGER))) AND (((((rt0.c1))<>((rt0.c0)))))), (NOT (rt0.c3 COLLATE BINARY)), ((NULL) NOT BETWEEN (-1.06005075E8) AND (((vt1.c0) ISNULL))) FROM rt0;SELECT DISTINCT CAST(((0.3534643730135809) NOT BETWEEN (vt1.c0) AND (x'')) AS BLOB) FROM vt1, rt0; -- 0ms;
SELECT ALL COUNT(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN rt0.c2 ELSE 0.9744240916593395 END COLLATE RTRIM) FILTER(WHERE ((((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c4)))OR(TRIM(rt0.c1, rt0.c2))))AND(vt1.c0))) OVER () FROM rt0 WHERE (((((('{b1*LQ*')OR(0X45ea13)))OR('HQ4')) IN ()));SELECT ALL CAST(CASE rt0.c3  WHEN rt0.c1 THEN vt1.c1 END AS TEXT), (~ (((rt0.c2)>=(vt1.c0)))), '-710745755', LIKELY(DISTINCT AVG(vt1.c1)), SUM(NULL) OVER () FROM vt1 WHERE (((CAST('56' AS REAL))IS NOT(CAST('0.3546934727632449' AS BLOB)))) GROUP BY ((((((0.0637047273523067, vt1.c0, rt0.c0)) BETWEEN ((rt0.c2, '1423024295', rt0.c4)) AND ((1307273513, rt0.c3, rt0.c0)))))<(((rt0.c0 IN (NULL, rt0.c1))))) HAVING LIKELY(DISTINCT (~ (rt0.c4))) LIMIT 901954113;SELECT NTILE(CAST(((rt0.c0)&(rt0.c1)) AS NUMERIC)) OVER (), CAST(CASE WHEN rt0.c1 THEN '-599158865' END AS INTEGER), ((CAST(rt0.c1 AS REAL))+(CASE WHEN NULL THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN vt1.c1 THEN '565549885' WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c4 END)) FROM rt0, vt1 WHERE (((((852867032 COLLATE BINARY)AND(CASE NULL  WHEN NULL THEN -786986945 WHEN 386483390 THEN 0x5d8342c6 WHEN x'a0bc' THEN NULL ELSE 0.01591803778407841 END)))AND(((NULL) NOT NULL)))) GROUP BY (((((vt1.c0) NOTNULL)))==(((rt0.c3 IN (vt1.c0))))); -- 0ms;
SELECT CAST(((rt0.c4)IS(vt1.c0)) AS INTEGER) FROM rt0 ORDER BY rt0.c0;SELECT DISTINCT ((rt0.c0)<=(CAST(rt0.c4 AS TEXT))) FROM rt0 GROUP BY (((((vt1.c1))!=((vt1.c1)))) ISNULL) HAVING ((NULLIF(DISTINCT vt1.c1, rt0.c3)) ISNULL);SELECT DISTINCT ((UPPER(rt0.c3)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (((rt0.c4)!=(rt0.c4)))) FROM rt0 WHERE (LTRIM(2.725415E8 COLLATE NOCASE, (((0Xffffffff8411392a, 0Xffffffffdc833175, 0.35579632696321806)) NOT BETWEEN ((NULL, 0.14556773510312426, '862173103')) AND (('', 0.35579632696321806, '*pG_Q눦wb'))))) LIMIT 1850522893; -- 0ms;
SELECT ((vt1.c0) NOT NULL) FROM vt1, rt0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))>>(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) ASC; -- 0ms;
SELECT DISTINCT AVG(((((rt0.c0)OR(rt0.c1)))OR(vt1.c0))) OVER ( ORDER BY (((NOT (vt1.c0))) NOT BETWEEN ((~ (vt1.c0))) AND ((vt1.c0 IN ()))) ASC  NULLS FIRST), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((((rt0.c4) NOT BETWEEN (vt1.c1) AND (rt0.c0))))), LAG((((((vt1.c1)<<(vt1.c0)), LOWER(vt1.c0), LOWER(vt1.c1)))<=((((vt1.c1) NOT BETWEEN (vt1.c0) AND (vt1.c1)), ((vt1.c1)>>(vt1.c0)), ((vt1.c0)%(vt1.c0))))), CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END COLLATE NOCASE, ((((vt1.c0)OR(vt1.c0))) NOTNULL)) OVER () FROM vt1 GROUP BY ((((0.6644882758119721)OR(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)))))OR((+ (rt0.c3))));SELECT DISTINCT GROUP_CONCAT(SUM(((rt0.c2)<(rt0.c3)))) FROM rt0 LIMIT -2091147516;SELECT DISTINCT ((GROUP_CONCAT(vt1.c1)) NOT BETWEEN (rt0.c3) AND (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)))) FROM rt0 NOT INDEXED, vt1 WHERE (((((x'e0b5')>(0.763060011803457)))IS NOT(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((+ (rt0.c0)))/(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE NULL END))) OVER () FROM vt1, rt0 WHERE (((((((NULL)OR('961946696')))OR(852867032))) NOT BETWEEN ('-1958644348') AND (x''))); -- 0ms;
SELECT SUBSTR((- (vt1.c1)), ((rt0.c4)IS(0.6823281485240463))) FROM vt1, rt0; -- 0ms;
SELECT ALL ((0.49185811172492133 COLLATE RTRIM) NOT BETWEEN (vt1.c1 COLLATE NOCASE) AND (((vt1.c0) ISNULL))) FROM rt0, vt1 WHERE (((NOT ('1497545666')) IN ())); -- 0ms;
SELECT ((((vt1.c1)IS(rt0.c2)))<<(NULL)) FROM rt0;SELECT DISTINCT ((rt0.c4) NOT BETWEEN (GROUP_CONCAT(rt0.c4)) AND (x'')), AVG(CAST(rt0.c1 AS BLOB)) FILTER(WHERE ((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 ELSE rt0.c2 END) NOT BETWEEN ((rt0.c0 IN ())) AND (((vt1.c1)>>(rt0.c2))))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), ((rt0.c2) NOTNULL) FROM vt1 GROUP BY ((((rt0.c1)==(rt0.c1))) NOT BETWEEN (((rt0.c0)IS(vt1.c1))) AND (vt1.c0 COLLATE RTRIM)) HAVING (MIN(rt0.c4) IN ());SELECT DISTINCT ((rt0.c4)>(rt0.c3)) COLLATE RTRIM, ((COUNT(rt0.c4))*(((((rt0.c4)OR(vt1.c1)))OR(x'030f')))), ((((rt0.c1) BETWEEN (rt0.c4) AND (x''))) NOT BETWEEN (rt0.c4 COLLATE NOCASE) AND ((((vt1.c1)) BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM rt0, vt1 WHERE ((NOT ((- (x''))))); -- 1ms;
SELECT ALL (((rt0.c0 IN ())) BETWEEN ((((rt0.c1))>((rt0.c2)))) AND (((rt0.c1) BETWEEN (rt0.c2) AND (vt1.c0)))) FROM vt1 WHERE (x'') GROUP BY 0X248fbe3a HAVING (rt0.c3 COLLATE RTRIM IN ());SELECT DISTINCT CAST(((rt0.c2)<<(rt0.c3)) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL CAST((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))) AS BLOB), ((ABS(DISTINCT rt0.c1))<<(rt0.c3)), ((((rt0.c0)IS NOT(vt1.c0))) ISNULL) FROM vt1, rt0 WHERE (LOWER((('')AND(0.054808112317808244)))); -- 0ms;
SELECT DISTINCT (((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c1)))) IS FALSE) FROM vt1, rt0 WHERE ((((0xffffffff9e89b226) NOT BETWEEN ('1423024295') AND ('-606423446')) IN (((0.6136217255103964) NOT BETWEEN (0.14209370528176346) AND (NULL)), (('EW{㺃W') ISNULL)))); -- 0ms;
SELECT ALL ((((vt1.c0)==(rt0.c0))) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c3)))OR(vt1.c1)))AND(rt0.c2))) AND ((NOT (rt0.c1)))) FROM rt0, vt1 ORDER BY (((x'')) NOT BETWEEN (('613400122')) AND (((vt1.c1 IN ())))) DESC; -- 1ms;
SELECT DISTINCT (((rt0.c3) NOTNULL) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS NUMERIC) COLLATE RTRIM FROM rt0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT (((rt0.c3) BETWEEN (vt1.c1) AND (rt0.c3)) IN (vt1.c1)), ((((((((vt1.c0 COLLATE RTRIM)AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 WHEN vt1.c0 THEN rt0.c1 END)))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 END)))OR(LOWER(rt0.c0))))OR((- (rt0.c0)))), CASE COUNT(*)  WHEN ((vt1.c1)OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END WHEN json_array_length(rt0.c3) THEN (((vt1.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1))) WHEN NULL THEN rt0.c2 ELSE CAST(vt1.c0 AS INTEGER) END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ABS(CAST(vt1.c0 AS INTEGER)) FROM vt1, rt0 WHERE (CAST(0.5875269766716184 COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT DISTINCT CAST((((rt0.c3, rt0.c4, vt1.c1))==((x'dcad490a5a30', rt0.c1, rt0.c3))) AS NUMERIC) FROM vt1, rt0; -- 0ms;
SELECT ((0.27122354306477525)=(vt1.c0)) COLLATE RTRIM, (- (((rt0.c3) NOT BETWEEN (vt1.c1) AND (x'')))), ((((rt0.c1)OR(COUNT(*))))AND(((((rt0.c0)OR(rt0.c3)))AND(vt1.c1)))) FROM rt0 WHERE (0Xffffffffaae27f6c);SELECT ALL (NULLIF(DISTINCT rt0.c2, vt1.c1) IN ()) FROM vt1, rt0 ORDER BY ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM DESC  NULLS FIRST LIMIT -475635569 OFFSET 405261775; -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1 WHERE ((((('77507859')<<('P]')))-(((((-6.23194421E8)AND('')))AND(x'')))));SELECT ALL CASE WHEN ((((rt0.c1)OR(vt1.c0)))OR(rt0.c2)) THEN ((rt0.c4) ISNULL) END, ((CAST(rt0.c2 AS BLOB))|(SUM(vt1.c1))), CASE COUNT(vt1.c0)  WHEN CAST(vt1.c0 AS REAL) THEN ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c0)) END FROM rt0, vt1; -- 0ms;
SELECT ALL ((-860238510)!=((((vt1.c0, vt1.c0, rt0.c0)) NOT BETWEEN ((vt1.c1, rt0.c3, vt1.c0)) AND ((vt1.c1, vt1.c1, vt1.c0))))) FROM vt1 WHERE (((0x248fbe3a) NOTNULL) COLLATE NOCASE) ORDER BY 1.12797849E9 ASC  NULLS FIRST;SELECT DISTINCT ((NULLIF(rt0.c0, rt0.c4)) BETWEEN (((vt1.c1) ISNULL)) AND (rt0.c4 COLLATE NOCASE)) FROM rt0;SELECT ALL (((rt0.c2 IN ()))<((((rt0.c1))<((rt0.c1))))) FROM rt0 GROUP BY CAST((+ (rt0.c3)) AS REAL); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1)<=(vt1.c0)) COLLATE BINARY) OVER () FROM rt0 LIMIT 17283987 OFFSET 817062094;SELECT SUM(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3))) OVER (), ((TRIM('	TB%PF\T'))<=(rt0.c1)), (((rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((('-946527795' IN ()), ((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)), ((rt0.c1)IS NOT(rt0.c0)))) AND ((rt0.c2 COLLATE BINARY, ((rt0.c3)IS NOT(rt0.c0)), vt1.c0 COLLATE BINARY))) FROM vt1, rt0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CAST(-2.091147516E9 AS REAL) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((- (rt0.c1))) NOT NULL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE vt1.c0 COLLATE RTRIM  WHEN COALESCE(DISTINCT rt0.c4, rt0.c3) THEN CAST(rt0.c2 AS TEXT) WHEN ((rt0.c3) IS TRUE) THEN ((rt0.c2)==(rt0.c2)) WHEN (rt0.c3 IN (vt1.c0, rt0.c0)) THEN ((rt0.c2) NOT NULL) ELSE (((rt0.c2, vt1.c0, vt1.c0))=((rt0.c1, rt0.c0, x'1d11'))) END, ((((((((((rt0.c3)IS(rt0.c1)))AND((NOT ('-595381899')))))AND((((vt1.c0, rt0.c0, 615919713)) NOT BETWEEN ((rt0.c0, vt1.c0, rt0.c1)) AND (('-1635143130', vt1.c1, rt0.c2))))))OR(((((rt0.c1)OR(rt0.c4)))AND(1.671488118E9)))))AND(((rt0.c4)OR(rt0.c3)))), RANK() OVER () FROM vt1, rt0 LIMIT 1850522893; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN vt1.c1 THEN rt0.c0 ELSE vt1.c1 END)<(rt0.c2)), ((((vt1.c0) IS TRUE))<<(((rt0.c2)%(vt1.c1)))), (((((((rt0.c1))<=((vt1.c1))))AND((rt0.c1 IN (rt0.c4, rt0.c2)))))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c1)))) FROM rt0 WHERE (((x'6002' COLLATE RTRIM)&(((-4.75635569E8) NOT BETWEEN (NULL) AND (x'')))));SELECT DISTINCT CASE WHEN COUNT(*) THEN (- (rt0.c2)) WHEN rt0.c4 THEN ((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c0)) WHEN vt1.c1 COLLATE BINARY THEN ((rt0.c1) IS TRUE) ELSE (rt0.c0 IN ()) END FROM rt0 WHERE ((((('0.8208657266373672') NOT BETWEEN (x'') AND (0.7016720781816802)))&(((NULL) BETWEEN (NULL) AND (0.7330436004706072)))));SELECT ALL (((rt0.c1)) BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((rt0.c3 IN ())))) FROM rt0, vt1 WHERE (((((('0.054808112317808244')) BETWEEN ((0X5644eb98)) AND ((0.3997058036762102))))>=(((x'')IS('g8bI&\r6S~'))))); -- 0ms;
SELECT ALL GROUP_CONCAT((((('1441019848')AND(rt0.c2)))AND(vt1.c1))), ((rt0.c0)*((((rt0.c0, x'', rt0.c2))>=((rt0.c3, 'W䒾ub', rt0.c4))))), (CAST(rt0.c0 AS INTEGER) IN (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)) FROM vt1, rt0 WHERE ((~ ((('-392145306')+(0X8a37e73))))); -- 0ms;
SELECT (((rt0.c0) ISNULL) IN ()) FROM vt1, rt0 WHERE ((((((- (NULL)))OR(((0X71e633df)GLOB(x'')))))AND(((x'')IS(0.00801817625950485))))); -- 0ms;
SELECT ALL CASE ((rt0.c2) NOT NULL)  WHEN ((rt0.c4)<(vt1.c0)) THEN ((x'5404')<>(rt0.c1)) WHEN NULL COLLATE NOCASE THEN vt1.c1 WHEN ((rt0.c3) BETWEEN (vt1.c1) AND (vt1.c0)) THEN x'045e' END FROM vt1, rt0 WHERE ((~ (((1132814924)&(0.6422848391672618))))); -- 0ms;
SELECT DISTINCT (NOT (((0.3831897066560198) BETWEEN (rt0.c1) AND (vt1.c0)))), ((rt0.c4 COLLATE NOCASE)||((((vt1.c0)) NOT BETWEEN ((vt1.c1)) AND ((rt0.c0))))), ((rt0.c2)>(rt0.c1)) COLLATE NOCASE FROM rt0;SELECT DISTINCT CAST(rt0.c2 AS TEXT), (vt1.c1 IN ()) COLLATE RTRIM, (((((rt0.c3))<((rt0.c2))))AND((((rt0.c3))>=((NULL))))) FROM rt0; -- 0ms;
SELECT ALL UPPER(((vt1.c1)<=(rt0.c0))) FROM vt1;SELECT DISTINCT UNLIKELY(((rt0.c2) BETWEEN (vt1.c1) AND (rt0.c0))) FROM rt0, vt1; -- 0ms;
SELECT ALL (((((rt0.c4, rt0.c3, rt0.c4, rt0.c3, rt0.c0))<((rt0.c2, rt0.c1, rt0.c4, rt0.c3, vt1.c1)))) NOT BETWEEN (((rt0.c2) IS FALSE)) AND (((rt0.c0)AND(rt0.c4)))), (- (LIKELY(DISTINCT rt0.c3))), AVG((((rt0.c1)) BETWEEN ((NULL)) AND (('')))) FROM vt1, rt0 WHERE (((((x'fcfc')*(0.8305508904265089))) ISNULL)); -- 0ms;
SELECT ALL CAST(rt0.c1 COLLATE NOCASE AS TEXT), ((((ROUND(vt1.c0, rt0.c2))OR(((rt0.c0)<>(vt1.c1)))))AND(vt1.c0 COLLATE BINARY)), INSTR((((rt0.c4, rt0.c1, rt0.c1))<((rt0.c0, rt0.c3, vt1.c1))), rt0.c0) FROM vt1, rt0 WHERE ('-2076677038' COLLATE RTRIM); -- 0ms;
SELECT (((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) FROM rt0 GROUP BY ((((rt0.c1)<<(vt1.c0)))!=(((rt0.c3)-(rt0.c4)))) HAVING (- (((((((((rt0.c0)OR(rt0.c1)))OR(x'')))AND(rt0.c1)))OR(x'')))) LIMIT -978405161 OFFSET -1436123501;SELECT ALL (((rt0.c1 IN ()))>((rt0.c3 IN ()))), RANK() OVER ( GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE CURRENT ROW), ((((CASE rt0.c3  WHEN '17283987' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN vt1.c1 THEN vt1.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END)OR(0xffffffff91b402d9 COLLATE RTRIM)))AND(x'')), MAX(((vt1.c1) ISNULL)), ((((vt1.c1)=(rt0.c2)))<=(rt0.c0 COLLATE BINARY)) FROM rt0, vt1 WHERE ((((((('-1569165952') IS TRUE))AND((('0.6313963269955055') NOTNULL))))OR(LIKELIHOOD(NULL, 0.10342685663627038)))); -- 0ms;
SELECT ALL RTRIM(rt0.c1 COLLATE RTRIM), ((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)))||(x'')), (((((rt0.c2)>=(rt0.c0))))<((((vt1.c0)-(vt1.c0))))) FROM rt0, vt1 WHERE (CAST((NOT (NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT (NULL IN ()) FROM rt0, vt1 WHERE ((((0.542689352432993, ((x'')>=('-1787139928')), ((-219169871)>=(NULL))))>=(((('') NOT BETWEEN (x'782b') AND ('HfY揭YU%IX')), NULL COLLATE BINARY, (((x''))=((''))))))) GROUP BY ((vt1.c0) BETWEEN (vt1.c0) AND (0.6863263446938527)) COLLATE BINARY HAVING vt1.c0; -- 1ms;
SELECT DISTINCT ((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE NOCASE FROM rt0 WHERE (CAST(((0.07737874785172705)-(NULL)) AS NUMERIC));SELECT DISTINCT ((((x'1376')AND(CASE WHEN rt0.c3 THEN rt0.c3 END)))AND(((0.859972715081789)*(rt0.c1)))) FROM rt0, vt1; -- 0ms;
SELECT ((rt0.c1) IS FALSE) COLLATE BINARY, (((- (rt0.c2)))-(((vt1.c1)<(rt0.c3)))), ((vt1.c0)||(rt0.c3)) COLLATE RTRIM FROM rt0, vt1 GROUP BY CAST(rt0.c1 AS REAL); -- 0ms;
SELECT DISTINCT ((('1051141644'))>((((0.7312326132396082)*(rt0.c3))))) FROM vt1;SELECT ((((+ (rt0.c2))))>((((vt1.c0) BETWEEN (rt0.c0) AND (rt0.c1))))) FROM rt0 WHERE ((+ (CASE WHEN -281702669 THEN 0.644161083681156 ELSE 'ꥫ/3 /쵒' END))) GROUP BY ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c3)))LIKE((((rt0.c0))<>((rt0.c2)))));SELECT DISTINCT (rt0.c2 IN ()) COLLATE NOCASE FROM vt1, rt0 WHERE ((- ('L4' COLLATE BINARY))) GROUP BY (+ (rt0.c2 COLLATE BINARY)) HAVING COALESCE(ROUND(rt0.c4, vt1.c1), CAST(rt0.c2 AS BLOB)); -- 0ms;
SELECT DISTINCT (+ (((rt0.c3)*(rt0.c2)))) FROM rt0 GROUP BY ((((((NULL)AND(vt1.c0)))OR(rt0.c4)))LIKE(UPPER(rt0.c3))), ((rt0.c4) IS TRUE), CASE (rt0.c0 IN (rt0.c0))  WHEN ((rt0.c2)LIKE(rt0.c2)) THEN (((rt0.c4))>=((rt0.c2))) ELSE ((rt0.c3) ISNULL) END HAVING ((rt0.c1 IN (rt0.c0)) IN (((vt1.c0)OR(rt0.c0))));SELECT DISTINCT CAST(((rt0.c3)>>(vt1.c1)) AS INTEGER), (- (((rt0.c2) IS TRUE))), ((vt1.c1) BETWEEN ('䡿!p') AND (vt1.c0 COLLATE NOCASE)) FROM rt0;SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((x'')) AND ((json_quote(vt1.c1)))) FROM vt1, rt0;SELECT DISTINCT vt1.c0, (- (((((((((0.7180334270522155)OR(rt0.c1)))OR('')))OR(rt0.c2)))AND(0.7204027245413207)))), (((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) IN (((vt1.c1) BETWEEN (vt1.c1) AND (0.7259709920476063)))), ((((((((((((GROUP_CONCAT(rt0.c2))OR(load_extension(NULL, rt0.c4))))AND(((vt1.c0) NOTNULL))))OR(((x'') NOTNULL))))AND(LIKELIHOOD(DISTINCT rt0.c3, 0.7450941207068066))))AND(vt1.c1)))AND(((rt0.c2) BETWEEN (vt1.c1) AND (rt0.c4)))), (((CAST(rt0.c1 AS INTEGER)))>(((NOT (rt0.c2))))) FROM rt0, vt1 WHERE (((NULL COLLATE NOCASE)%(((((((((x'')OR(NULL)))OR(0xffffffffaaec3310)))AND('1497545666')))OR('彀p')))));SELECT DISTINCT rt0.c3 FROM vt1 WHERE ((- (((-1.06005075E8)IS(NULL)))));SELECT (((vt1.c1, vt1.c1, 0.6184657575568461)) BETWEEN (((+ (rt0.c2)), ((((vt1.c1)AND(rt0.c0)))AND(rt0.c1)), ((rt0.c4)&(vt1.c1)))) AND ((CASE WHEN NULL THEN vt1.c0 END, NULL, AVG(rt0.c0)))), (((((NULL) NOT BETWEEN (rt0.c4) AND (vt1.c0))))==((CAST(rt0.c3 AS TEXT)))), (((((rt0.c4))>=((rt0.c1))))>((rt0.c3 IN (rt0.c3)))) FROM vt1 WHERE (((((((x'') NOT BETWEEN (NULL) AND (NULL)))AND((+ ('')))))AND((((('ri iF\r]')AND(0.04245049185646188)))OR('MnoQew')))));SELECT DISTINCT ((((((((((((MIN(rt0.c2))AND((('') BETWEEN (vt1.c1) AND (vt1.c0)))))OR((rt0.c1 IN (rt0.c2)))))AND(((((vt1.c1)AND(rt0.c0)))AND(rt0.c2)))))OR(('732250332' IN ()))))AND((+ (rt0.c2)))))AND(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE ((((0.7944816578214212)IS(NULL)) IN ()));SELECT (- (rt0.c1)) COLLATE BINARY, ((((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c0)))OR(9.31186376E8)), ((((((((MAX(rt0.c4))AND(CASE rt0.c1  WHEN rt0.c1 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END)))OR(((rt0.c4) IS TRUE))))AND(((vt1.c0)LIKE(vt1.c1)))))AND(CAST(vt1.c1 AS TEXT))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT SUM(CAST(vt1.c0 AS INTEGER)) FROM rt0 WHERE (((('(3㟈G?쁙H')) BETWEEN (((('XdS^') NOT BETWEEN ('-625705155') AND (x'')))) AND (((('-627785637') NOT BETWEEN (-1041994149) AND (0Xffffffffb7aefb4d))))));SELECT ((HEX(rt0.c3))-(CAST(vt1.c1 AS INTEGER))) FROM vt1 WHERE (((((((((']K')AND(x'')))AND(x'')))AND(-612939631)))OR(x'756a' COLLATE NOCASE))) LIMIT 1017154041 OFFSET 683998578;SELECT CASE WHEN 0.3287281809139416 THEN CASE WHEN vt1.c1 THEN vt1.c0 ELSE rt0.c0 END END FROM rt0, vt1 WHERE (((x'')<(NULL)) COLLATE BINARY) GROUP BY ((((rt0.c1 COLLATE RTRIM)OR(vt1.c0)))AND((((rt0.c1, '-599158865', NULL)) BETWEEN ((vt1.c0, vt1.c0, rt0.c3)) AND ((rt0.c4, vt1.c1, vt1.c0))))), (((((((('')OR(((((((((vt1.c0)OR(vt1.c1)))OR(rt0.c0)))OR(rt0.c1)))AND(vt1.c1)))))OR(NULL)))OR(rt0.c1 COLLATE BINARY)))OR((vt1.c0 IN (rt0.c2, vt1.c0)))), (((((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1))))<=((rt0.c0 COLLATE BINARY))) HAVING (('d⯢qqgP') BETWEEN (DATETIME(rt0.c1, vt1.c1, NULL, rt0.c3, rt0.c3)) AND ((vt1.c0 IN ()))); -- 0ms;
SELECT ALL NTH_VALUE(((((rt0.c4))>((rt0.c2))) IN (((rt0.c1)>>(rt0.c3)))), CASE WHEN ((rt0.c3)IS NOT(0.00848805224968563)) THEN ((rt0.c1)*(rt0.c2)) END) OVER () FROM rt0;SELECT DISTINCT CASE WHEN CASE WHEN vt1.c0 THEN rt0.c1 ELSE vt1.c0 END THEN GROUP_CONCAT(vt1.c1) ELSE CAST(vt1.c0 AS INTEGER) END FROM vt1, rt0; -- 0ms;
SELECT CAST((- (rt0.c1)) AS BLOB) FROM rt0 WHERE (((((((((((((NULL)AND(x'')))OR(x'')))AND((('919371994')>>('')))))AND(CAST(NULL AS BLOB))))AND(((0.9279111918051056) IS TRUE))))AND('613400122' COLLATE BINARY))); -- 0ms;
SELECT ALL HEX(DISTINCT 0x64e6f94f), ((((CAST(vt1.c1 AS TEXT))OR(((0.75539758818985)!=(NULL)))))AND(((vt1.c0) NOT BETWEEN (vt1.c1) AND (vt1.c1)))), ((~ (rt0.c0)) IN (((')^UL6<') NOT BETWEEN (vt1.c1) AND (vt1.c0)))) FROM rt0 GROUP BY (((CAST(vt1.c0 AS BLOB)))==((((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))AND(0.19029206138246035))))) HAVING '1763942672';SELECT ((((rt0.c2)/(rt0.c2))) IS TRUE) FROM rt0 WHERE (LIKELIHOOD(DISTINCT NULL, 0.6660219043385028)) LIMIT 1129392870 OFFSET 235397665; -- 0ms;
SELECT ALL ((((((((((0.3498039060495327)OR(rt0.c2)))OR(rt0.c3)))OR(x'e623')))AND(rt0.c1))) BETWEEN (CASE WHEN vt1.c1 THEN vt1.c0 ELSE vt1.c0 END) AND (CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END)), ((((((((((((((((IFNULL(DISTINCT rt0.c0, rt0.c4))OR(CAST(rt0.c2 AS NUMERIC))))OR(((rt0.c3)IS(rt0.c4)))))OR(vt1.c0)))AND(CAST(rt0.c3 AS REAL))))OR(vt1.c1)))AND(CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c1 END)))AND(CAST(0.5537543003013278 AS INTEGER))))AND((('1850522893') NOT BETWEEN (vt1.c0) AND (rt0.c1)))), (NOT (MIN(rt0.c0))) FROM vt1;SELECT (((TOTAL(vt1.c1), CASE rt0.c3  WHEN rt0.c3 THEN vt1.c1 ELSE rt0.c4 END, (rt0.c4 IN ()), (NOT (rt0.c0)), (rt0.c1 IN ())))=(((rt0.c2 IN ()), LIKELY(DISTINCT rt0.c2), CAST(rt0.c3 AS INTEGER), ((rt0.c3)<=(0.6702910807094824)), CAST(vt1.c0 AS NUMERIC)))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c1) NOTNULL)) NOT BETWEEN (CASE x''  WHEN rt0.c2 THEN rt0.c3 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END) AND (((vt1.c1) NOTNULL))) FROM rt0 WHERE ((NOT (CASE WHEN 'X' THEN 0.9876766000488141 WHEN NULL THEN 1.199296334E9 WHEN -805712216 THEN '949752989' ELSE x'' END)));SELECT DISTINCT ((((rt0.c3)>=(rt0.c3)))>(CASE NULL  WHEN rt0.c3 THEN vt1.c1 END)) FROM rt0, vt1 WHERE (CASE WHEN CASE WHEN x'' THEN '' END THEN CASE NULL  WHEN x'' THEN x'4dd1' ELSE x'' END WHEN (- (x'')) THEN (((0.4046552491432005, '', '-1561473837'))=((x'', x'', 0x588233be))) WHEN (('') BETWEEN (0Xffffffffdf7aeecf) AND (0Xffffffff99867776)) THEN ((NULL) ISNULL) END); -- 0ms;
SELECT DISTINCT AVG('-344768580'), LTRIM((rt0.c4 IN ())), LIKELIHOOD(DISTINCT ((rt0.c3)<(rt0.c0)), 0.6462005693151914) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)*(vt1.c0)) AS REAL) FROM vt1, rt0; -- 1ms;
SELECT (0.6604549394821533 IN (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c4)) COLLATE BINARY COLLATE BINARY FROM vt1;SELECT DISTINCT CASE WHEN ((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c3)) THEN ((((NULL)OR(vt1.c1)))AND(rt0.c1)) WHEN (((rt0.c0, rt0.c1, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c3)) AND ((0.3241699246434979, vt1.c0, rt0.c3))) THEN ((rt0.c2)IS NOT(vt1.c0)) WHEN rt0.c3 THEN CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 ELSE vt1.c1 END ELSE CAST(rt0.c3 AS TEXT) END FROM rt0;SELECT ((TOTAL(rt0.c2))<((NOT (vt1.c1)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE((((((((((((((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR(CAST(vt1.c0 AS REAL))))AND(CASE WHEN vt1.c1 THEN vt1.c0 END)))OR((rt0.c1 IN ()))))AND(IFNULL(DISTINCT rt0.c4, rt0.c4))))AND((- (vt1.c1)))))OR(rt0.c4 COLLATE BINARY)), (- ((((rt0.c4))>((vt1.c1)))))) OVER ( PARTITION BY ((((((((((rt0.c3)>(vt1.c0)))OR((((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, rt0.c4, vt1.c1)) AND ((rt0.c2, rt0.c2, rt0.c3))))))OR(LIKELIHOOD(rt0.c3, 0.6780252927296659))))OR(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN x'' THEN vt1.c1 WHEN rt0.c2 THEN rt0.c2 END)))OR(rt0.c0 COLLATE BINARY)), CAST((((1.73246656E9)) BETWEEN ((NULL)) AND ((vt1.c1))) AS TEXT) ORDER BY (((((((vt1.c0)OR(rt0.c1)))AND(rt0.c2)), NULL, rt0.c0 COLLATE BINARY))==(((('')!=(vt1.c0)), (vt1.c0 IN ()), (+ (rt0.c3))))) DESC  NULLS FIRST) FROM rt0, vt1;SELECT DISTINCT ((((rt0.c4)>>(rt0.c4)))||(((((rt0.c4)OR(rt0.c2)))AND(vt1.c1)))) FROM vt1 GROUP BY LIKELIHOOD(TRIM(DISTINCT rt0.c3), 0.746142259873148) HAVING (((rt0.c2)) BETWEEN ((rt0.c1 COLLATE BINARY)) AND ((((rt0.c2) BETWEEN (rt0.c1) AND (vt1.c0)))));SELECT ALL GROUP_CONCAT(((((rt0.c2)AND(vt1.c1)))AND(rt0.c2))) FROM vt1;SELECT COUNT(*) OVER (), ((((((((rt0.c4)OR(rt0.c4)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)) COLLATE RTRIM, LEAD(CASE WHEN CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c2 THEN vt1.c1 WHEN vt1.c0 THEN rt0.c1 END THEN (~ (vt1.c0)) WHEN rt0.c4 COLLATE BINARY THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)) WHEN rt0.c3 THEN (- (rt0.c0)) ELSE CASE WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END END, (((((rt0.c0, 0.48012979186434623, rt0.c3)) BETWEEN ((vt1.c1, rt0.c3, rt0.c4)) AND ((rt0.c2, 0.9212943523695314, rt0.c3))))/(rt0.c2 COLLATE BINARY)), CAST(((vt1.c1) ISNULL) AS REAL)) OVER () FROM rt0, vt1 WHERE ((((((''))>((x''))))<<(CASE x''  WHEN 'ihj)gp' THEN 0.04245049185646188 END))); -- 0ms;
SELECT DISTINCT '跖o' FROM vt1 EXCEPT SELECT DISTINCT ((((rt0.c4 COLLATE BINARY)OR(((rt0.c0)*(rt0.c4)))))AND(rt0.c2 COLLATE NOCASE)) FROM vt1, rt0; -- 1ms;
SELECT ALL CAST((~ (vt1.c0)) AS REAL) FROM rt0;SELECT (x'' IN ()) FROM rt0, vt1 WHERE (CAST(-40968345 AS BLOB)); -- 0ms;
SELECT TOTAL(((rt0.c0)>>(rt0.c4))) OVER (), CASE json_array(rt0.c3, vt1.c1)  WHEN TOTAL(0.19681330770332195) THEN ((((rt0.c3)OR(rt0.c2)))AND(vt1.c0)) END, ROW_NUMBER() OVER ( ORDER BY ((((((rt0.c0)OR(rt0.c2)))AND(vt1.c1)))AND(rt0.c0))) FROM vt1 ORDER BY UPPER(DISTINCT NULL) COLLATE RTRIM COLLATE RTRIM  NULLS FIRST;SELECT ALL 0.8908490947831811 FROM rt0, vt1 LIMIT 4859651486881674598; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) FROM vt1, rt0 WHERE ((((('0.6136217255103964')) NOT BETWEEN ((NULL)) AND ((NULL))) IN ())) LIMIT 222475950 OFFSET -1860525649; -- 0ms;
SELECT ((CAST(rt0.c3 AS NUMERIC)) NOT NULL) FROM vt1, rt0; -- 0ms;
SELECT rt0.c3 FROM vt1;SELECT DISTINCT (((vt1.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(0.8469693926801901) OVER () FROM vt1 WHERE ((((0.7488367361964503 IN ())) BETWEEN ((('-535481274')IS(x''))) AND ('''}'))); -- 0ms;
SELECT DISTINCT ((((rt0.c3) IS TRUE)) IS TRUE), ((rt0.c2)|((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((vt1.c0))))), (((((~ (rt0.c2)))AND(UNLIKELY(DISTINCT rt0.c2))))AND(((vt1.c1)*(rt0.c0)))) FROM vt1, rt0 GROUP BY ((rt0.c1) IS FALSE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT NTILE((((rt0.c3)) BETWEEN (((~ (vt1.c0)))) AND ((((vt1.c1) NOT BETWEEN (rt0.c1) AND (vt1.c0)))))) OVER (), ((COALESCE(DISTINCT rt0.c1, rt0.c2))>(CAST(NULL AS INTEGER))), (((rt0.c3 IN ()))%(MAX(vt1.c0))) FROM rt0, vt1 WHERE (CASE ((0.7640006043437104)=(x'162f'))  WHEN JULIANDAY(NULL, NULL, NULL) THEN ((0.7185884358748084) BETWEEN (NULL) AND (NULL)) ELSE (x'' IN ()) END);SELECT MAX((+ (rt0.c3))), (((vt1.c1) BETWEEN (vt1.c0) AND (vt1.c0)) IN ()), vt1.c0 FROM rt0, vt1; -- 0ms;
SELECT CASE WHEN rt0.c3 COLLATE NOCASE THEN 'C' ELSE rt0.c0 COLLATE NOCASE END FROM vt1, rt0 WHERE (UNLIKELY((('1824716375')-(NULL)))); -- 0ms;
SELECT DISTINCT (((NULL) BETWEEN (rt0.c4) AND (rt0.c1)) IN ()) FROM vt1, rt0 WHERE (CASE NULL  WHEN 0.6418971382487164 COLLATE RTRIM THEN '0.9212943523695314' WHEN ((0.847359806299969)>>(x'')) THEN highlight(x'', '1594633825', '-1477922899', 1497545666) WHEN ('' IN (x'5515')) THEN (- ('1103140038')) ELSE ((x'3774') BETWEEN (0.9347744215034252) AND ('a0JPq')) END) ORDER BY ((((0.9082760961366534)-(rt0.c3))) BETWEEN (((rt0.c3)GLOB(']&'))) AND (HEX(DISTINCT rt0.c1)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS REAL))-(((rt0.c3)<(rt0.c1)))), (((vt1.c1) IS TRUE) IN ()), CAST(HEX(rt0.c3) AS TEXT) FROM vt1, rt0 WHERE (((('34CU ', 0.602913526014034, x'b182')) BETWEEN ((CAST(NULL AS REAL), CAST(0X3808ba93 AS TEXT), CAST(NULL AS REAL))) AND ((NULL, LOWER(DISTINCT 0.08995560280009207), CAST(NULL AS NUMERIC))))) GROUP BY CASE WHEN ((vt1.c1)&(rt0.c1)) THEN (rt0.c4 IN ()) END, NULL COLLATE RTRIM, vt1.c0; -- 0ms;
SELECT DISTINCT (((rt0.c0)|('272541500')) IN (((rt0.c3)-(rt0.c4)), (rt0.c1 IN (0.2752523837136147)))), ((((vt1.c0 COLLATE RTRIM)OR(((rt0.c4) NOT NULL))))AND(((rt0.c3) BETWEEN (vt1.c0) AND (vt1.c0)))), COUNT(*) FILTER(WHERE rt0.c0) OVER () FROM rt0 WHERE (JULIANDAY((('')%(NULL)), ('' IN ()), load_extension(0.9850613585495345)));SELECT ((((vt1.c1)-(vt1.c1))) IS TRUE), ((((((((MIN(rt0.c2))OR(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((vt1.c0) NOT NULL))))OR((- (rt0.c2)))))OR(CHAR(vt1.c0))), ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END)/(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3)))), (((rt0.c0 COLLATE RTRIM))>=(((rt0.c1 IN ())))), CAST(CAST(rt0.c0 AS BLOB) AS TEXT) FROM vt1, rt0; -- 0ms;
SELECT ALL ((vt1.c0)<((+ (416966386)))) FROM vt1 WHERE (''); -- 0ms;
SELECT DISTINCT ((((rt0.c3 IN (rt0.c3))))>((rt0.c2))), CAST((vt1.c0 IN ()) AS TEXT), NTILE((((vt1.c0 IN ())) NOT NULL)) OVER () FROM vt1 WHERE (0.36044047790715306);SELECT ALL rt0.c2 FROM rt0 WHERE (JULIANDAY(((x'3b20')=(-811717770)), ((0.9496327229520424) BETWEEN (NULL) AND (-5.95381899E8)), CASE -1203064076  WHEN 0.32567059749576066 THEN x'92af' END)); -- 0ms;
SELECT DISTINCT (((vt1.c1) NOT NULL) IN ()), ((vt1.c0)>=(vt1.c1)) COLLATE NOCASE, COUNT(*) FROM rt0;SELECT ALL CASE ((vt1.c0)||(NULL))  WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2))) THEN (('-392145306') NOT BETWEEN (rt0.c1) AND (vt1.c0)) END FROM rt0 WHERE ((((NULL COLLATE BINARY))=((((((((((NULL)AND(NULL)))AND(NULL)))AND(0.00848805224968563)))OR('2024827134'))))));SELECT ((-570564913)&(CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c1 END)), ((((rt0.c4)<(rt0.c3)))==(CASE rt0.c4  WHEN vt1.c0 THEN rt0.c2 END)), ((((((((((((rt0.c1 COLLATE NOCASE)OR(CASE rt0.c2  WHEN x'2814' THEN rt0.c1 WHEN vt1.c1 THEN x'' WHEN rt0.c1 THEN rt0.c2 ELSE '-606423446' END)))AND(rt0.c3 COLLATE BINARY)))AND(((rt0.c2)<(rt0.c0)))))AND(((rt0.c3)IS(vt1.c0)))))OR(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)))))OR((rt0.c1 IN ()))) FROM vt1, rt0; -- 0ms;
SELECT ((((rt0.c4) NOT BETWEEN (rt0.c4) AND (vt1.c1)))+(rt0.c0)) FROM rt0 WHERE (CASE (0.09336952468112514 IN ('1127978490'))  WHEN ((NULL) NOT BETWEEN ('>') AND (NULL)) THEN ((((((((((((1.568883398E9)OR('416669840')))AND(NULL)))AND(NULL)))OR(x'')))OR(x'')))OR(x'0eee')) END);SELECT DISTINCT ((CAST('-623194421' AS REAL)) NOT BETWEEN (((rt0.c1)/(rt0.c4))) AND (((0x6e27487f)OR(rt0.c3)))) FROM rt0, vt1 WHERE ((((NULL IN ())) IS TRUE)); -- 0ms;
SELECT TYPEOF(DISTINCT (- (rt0.c1))) FROM vt1, rt0 WHERE ((~ (((']k') NOT NULL)))); -- 0ms;
SELECT ALL ((x'') BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE BINARY FROM vt1;SELECT COALESCE(CAST(rt0.c1 AS INTEGER), CAST(rt0.c0 AS INTEGER), vt1.c0, (((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE RTRIM) NOT NULL), (((~ (rt0.c4)))AND(((vt1.c1) IS FALSE))), CAST(((rt0.c1)=(rt0.c0)) AS TEXT) FROM rt0 ORDER BY TYPEOF((rt0.c2 IN (rt0.c1))) DESC, rt0.c3  NULLS FIRST;SELECT DISTINCT CASE rt0.c4  WHEN rt0.c3 THEN 0.13983491643755297 ELSE vt1.c1 END COLLATE BINARY FROM vt1;SELECT DISTINCT ROUND(rt0.c0 COLLATE RTRIM, (rt0.c0 IN ())) FROM rt0, vt1 WHERE ((((NULL, '', 636922458)) NOT BETWEEN ((((x'') IS FALSE), '-659350620', (('204824794')<(0.18270635286674952)))) AND ((CAST('' AS NUMERIC), NULL, CASE WHEN 0.9648657740598683 THEN -1170097607 ELSE 0.8348342631786946 END)))); -- 0ms;
SELECT ALL CASE ((((((((vt1.c0)OR(x'b851dba6')))OR(rt0.c3)))AND(rt0.c3)))OR(x''))  WHEN ((rt0.c4)>(rt0.c2)) THEN CAST(rt0.c4 AS REAL) WHEN (((rt0.c0)) BETWEEN ((vt1.c1)) AND ((rt0.c1))) THEN TOTAL(rt0.c1) WHEN TRIM(rt0.c2) THEN LIKELIHOOD(vt1.c0, 0.5534210590761931) WHEN (- (rt0.c1)) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c0)) THEN ((rt0.c3)*(rt0.c0)) ELSE GROUP_CONCAT(rt0.c3) END, (((((rt0.c1 IN (vt1.c1)))AND(rt0.c2)))OR(((NULL)%(vt1.c0)))), ((LTRIM(rt0.c1)) NOT NULL) FROM rt0 WHERE (((((x'7305') BETWEEN ('') AND ('-960133213'))) IS TRUE)) ORDER BY rt0.c3 DESC;SELECT DISTINCT (((((((((((((vt1.c1 IN (vt1.c1)))AND((rt0.c0 IN ()))))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)))))OR((((vt1.c1, rt0.c4, rt0.c2)) BETWEEN ((vt1.c1, vt1.c1, rt0.c2)) AND ((vt1.c0, rt0.c0, vt1.c1))))))OR(((rt0.c3)==(x'')))))AND(rt0.c0)))OR(rt0.c4 COLLATE NOCASE)), ((UPPER('-1758374542')) IS FALSE), ((UPPER(DISTINCT rt0.c4))&(SUM(rt0.c4))) FROM vt1, rt0 WHERE (0.23314030138742436); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c0)-(0X362c1c35))) BETWEEN (((rt0.c0)GLOB(vt1.c0))) AND (((((rt0.c1)AND(rt0.c1)))AND(rt0.c2)))) FROM rt0;SELECT DISTINCT (((x'')AND(rt0.c4)) IN ()), ((GROUP_CONCAT(rt0.c0))>=((((rt0.c2))>=((rt0.c3))))), (((rt0.c1)) NOT BETWEEN ((((rt0.c0) IS TRUE))) AND ((GLOB(rt0.c4, vt1.c0)))) FROM vt1 WHERE (LTRIM((((NULL, 0xffffffffe5a57e01, x''))<>(('l]O_u', x'', 0.274566125069733)))));SELECT ALL (HEX(rt0.c3) IN (CASE rt0.c3  WHEN rt0.c2 THEN rt0.c2 END)), ((UPPER(vt1.c1))AND(vt1.c1 COLLATE BINARY)), ((('-1830843176')) NOT BETWEEN ((CAST(rt0.c1 AS REAL))) AND ((((rt0.c3)IS NOT(rt0.c3))))) FROM rt0;SELECT DISTINCT IFNULL((('F''bPk*6')IS NOT(rt0.c1)), (((rt0.c2, vt1.c1, vt1.c0))==((rt0.c1, rt0.c2, rt0.c0)))) FROM rt0, vt1; -- 1ms;
SELECT CAST(((((((((rt0.c1)AND(vt1.c1)))AND(1.7976931348623157E308)))OR(rt0.c1)))OR(vt1.c1)) AS NUMERIC) FROM rt0, vt1 LIMIT 1619599041 OFFSET -957984920; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2) BETWEEN (0.6422848391672618) AND (vt1.c0))  WHEN ((rt0.c2)||(rt0.c1)) THEN MAX(vt1.c1) WHEN ((rt0.c0)-(rt0.c0)) THEN (- (rt0.c1)) WHEN ('0.7016720781816802' IN (rt0.c1)) THEN 0.8340483866098732 END, CASE WHEN CASE vt1.c1  WHEN rt0.c4 THEN 'AoRTcc' WHEN rt0.c3 THEN rt0.c3 WHEN '0.3534643730135809' THEN vt1.c0 END THEN vt1.c1 WHEN (((NULL))>((rt0.c2))) THEN (rt0.c2 IN (vt1.c1, rt0.c4)) WHEN rt0.c4 THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 END ELSE ((rt0.c4)<=(rt0.c0)) END, ((vt1.c1) BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE BINARY, ((rt0.c3 COLLATE NOCASE) ISNULL), (+ ((((('-606423446')AND(vt1.c1)))AND(rt0.c2)))) FROM vt1;SELECT ALL (((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)) IN ()), GROUP_CONCAT(((vt1.c1) BETWEEN (rt0.c4) AND (rt0.c2))), COUNT(*) COLLATE NOCASE FROM rt0, vt1 GROUP BY ((UPPER(DISTINCT '')) IS TRUE) HAVING ((((((rt0.c0)OR(rt0.c1)))AND(TRIM(rt0.c1))))OR(((rt0.c0) NOT NULL))); -- 0ms;
SELECT (rt0.c1 COLLATE BINARY IN ()) FROM vt1, rt0 ORDER BY (- (CAST(vt1.c1 AS REAL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((0.47136804096298246, vt1.c1, rt0.c4)) BETWEEN (((((rt0.c1, rt0.c2, rt0.c4)) NOT BETWEEN ((rt0.c1, vt1.c0, vt1.c0)) AND ((vt1.c1, vt1.c0, rt0.c0))), CAST(rt0.c1 AS NUMERIC), ((rt0.c2)>(rt0.c0)))) AND ((CAST(vt1.c0 AS TEXT), x'' COLLATE NOCASE, (((vt1.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))))), (((rt0.c3 IN (rt0.c1))) ISNULL), NULL FROM vt1, rt0 WHERE ((((+ (x'')))<<(CAST(NULL AS REAL)))); -- 0ms;
SELECT ALL ((NULL)<(rt0.c4)) FROM rt0 GROUP BY ((CAST(rt0.c3 AS INTEGER))>(rt0.c2)), vt1.c1, x'8b97' HAVING ((RTRIM(rt0.c1)) NOT NULL);SELECT ALL ((((rt0.c3)<=('')))GLOB(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c3))  WHEN CAST(vt1.c0 AS INTEGER) THEN (((rt0.c0, rt0.c2, rt0.c4)) BETWEEN ((rt0.c2, '-1578438472', rt0.c0)) AND ((rt0.c2, vt1.c1, rt0.c4))) ELSE ((rt0.c3) NOT BETWEEN (vt1.c1) AND (vt1.c1)) END FROM rt0 WHERE (CAST('1497545666' AS NUMERIC) COLLATE RTRIM);SELECT TRIM(DISTINCT CASE vt1.c1  WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END) FROM vt1 FULL OUTER JOIN rt0 ON DATE(rt0.c3 COLLATE BINARY, ((vt1.c1)&(rt0.c2)), ((((rt0.c0)OR(rt0.c2)))OR(vt1.c1))); -- 0ms;
SELECT DISTINCT CASE WHEN PRINTF(vt1.c0) THEN ((rt0.c4)GLOB(rt0.c1)) ELSE x'' END, ((((x'')OR(GROUP_CONCAT(rt0.c1))))OR(((((rt0.c1)AND(rt0.c4)))AND(x'1bcc')))), ((COALESCE(vt1.c0, vt1.c1, rt0.c0, rt0.c2))<=(((vt1.c1)IS NOT(rt0.c3)))) FROM vt1 WHERE (NULL);SELECT LEAD((~ (rt0.c1 COLLATE RTRIM)), (((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c4)))) ISNULL), ((rt0.c3 COLLATE NOCASE) BETWEEN (rt0.c3 COLLATE NOCASE) AND (((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c0))))) OVER () FROM rt0, vt1 LIMIT -1691777972 OFFSET -1427996820; -- 0ms;
SELECT DISTINCT ((((NULL)OR(rt0.c4)))>(TRIM(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT (('')-((rt0.c1 IN (vt1.c1)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CAST((((rt0.c4))<((rt0.c2))) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT NTILE(CHANGES()) OVER (), MIN(CASE rt0.c1  WHEN vt1.c0 THEN 0.3725016362011905 END), (((MAX(rt0.c0), (rt0.c0 IN ()), GROUP_CONCAT(rt0.c0)))>=((AVG(rt0.c3), TOTAL(vt1.c0), CAST(rt0.c1 AS TEXT)))) FROM rt0 WHERE ((~ ((NULL IN ())))) LIMIT -1772805685;SELECT ALL CAST(((((vt1.c0)AND(rt0.c1)))AND(vt1.c0)) AS TEXT) FROM rt0, vt1 WHERE (((((0.7488367361964503) NOT NULL))AND((0.8616546522077675 IN ('0.8847895883090271'))))); -- 0ms;
SELECT (((((((((~ (rt0.c0)))OR(NULLIF(DISTINCT rt0.c3, rt0.c0))))OR(((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END)))AND((((vt1.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))), ROW_NUMBER() OVER (), CASE (~ (rt0.c0))  WHEN ((rt0.c4)&(rt0.c3)) THEN ((rt0.c1) IS FALSE) END FROM vt1;SELECT DISTINCT ((COUNT(*))==(SUM(rt0.c4))) FROM rt0, vt1 WHERE (((0.859972715081789 IN ()) IN ())) GROUP BY (NOT (((vt1.c1) BETWEEN (vt1.c1) AND ('')))) ORDER BY TYPEOF(DISTINCT CASE vt1.c1  WHEN vt1.c0 THEN rt0.c0 ELSE vt1.c0 END)  NULLS LAST; -- 0ms;
SELECT DISTINCT ((0.9292191906889748)>>(vt1.c1)) COLLATE NOCASE, x'c4f9', SUM(((vt1.c1) NOTNULL)) OVER () FROM rt0, vt1 WHERE (((((((((((x'')>(NULL)))AND((('짲Md5')*(NULL)))))OR((((NULL)) BETWEEN ((x'')) AND ((0.28981498286599294))))))AND(HEX(x'd661'))))OR(((NULL)||('732250332'))))); -- 0ms;
SELECT DISTINCT COUNT((rt0.c0 IN ())) FROM vt1, rt0 ORDER BY ((((vt1.c0) NOTNULL))GLOB(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c0)))OR(vt1.c1)))), (rt0.c0 IN (CAST(vt1.c1 AS TEXT), rt0.c2 COLLATE RTRIM)) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((rt0.c1 COLLATE NOCASE) NOTNULL) FROM rt0, vt1 WHERE ((~ (ROUND(NULL, -4.42139135E8)))); -- 0ms;
SELECT AVG(CASE WHEN vt1.c0 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c3 WHEN rt0.c3 THEN vt1.c1 ELSE rt0.c4 END), (((rt0.c4)GLOB(rt0.c2)) IN ()), GROUP_CONCAT(TOTAL(((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))AND(vt1.c0)))) FROM rt0 WHERE (((((('^}阗췏]~r|q') BETWEEN (x'989b') AND ('S#'))))==(((~ (0.3540267520340088)))))) LIMIT -1109490571;SELECT DISTINCT (((rt0.c4)) BETWEEN ((((((rt0.c2)AND(NULL)))AND(rt0.c1)))) AND ((((vt1.c1) ISNULL)))) FROM rt0;SELECT DISTINCT ((vt1.c1 COLLATE RTRIM)IS NOT(CAST(rt0.c3 AS NUMERIC))), ((((rt0.c0)*(vt1.c0)))&(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))), 0.577338567265734 FROM vt1, rt0 WHERE (((CASE WHEN 77507859 THEN 'Mz3' WHEN x'' THEN 0.7488367361964503 WHEN NULL THEN 0.8034256236560737 ELSE x'' END) BETWEEN (((((NULL)AND('-1835571573')))OR(-1.569165952E9))) AND ((- ('MF'))))); -- 0ms;
SELECT ALL (((rt0.c4)) NOT BETWEEN (((((vt1.c0, vt1.c1, rt0.c1))<=((rt0.c2, rt0.c2, rt0.c2))))) AND ((((NULL)>(vt1.c1))))) FROM rt0, vt1 WHERE ((((((((('-388858501')OR(NULL)))AND(((NULL) BETWEEN ('\rx#AET5ꖃ') AND ('')))))OR(((((((((1742803078)AND(x'')))OR(NULL)))AND(NULL)))AND(0.05763324704072481)))))AND(UNLIKELY('YaIT')))); -- 0ms;
SELECT ((((((rt0.c0)AND(0.5438729811564826)))OR(vt1.c1))) IS TRUE) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 IN ()) IN ()) FROM vt1; -- 0ms;
SELECT LAST_VALUE((+ ((- (rt0.c2))))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((vt1.c0)>(rt0.c2)) AS REAL), CASE WHEN vt1.c0 THEN rt0.c1 END COLLATE BINARY, ((((vt1.c1) ISNULL)) IS FALSE) FROM rt0, vt1 WHERE (LIKELIHOOD(DISTINCT '-442139135', 0.9575778648227241) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c3, COUNT(((vt1.c0) IS TRUE)) OVER (), COUNT(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1))) FROM rt0, vt1 ORDER BY (((NULL IN ())) NOT BETWEEN (rt0.c4) AND ('''\n^')) ASC  NULLS FIRST; -- 0ms;
SELECT ALL COALESCE(DISTINCT -1.569165952E9, rt0.c2, vt1.c1 COLLATE BINARY, ((((((((rt0.c1)OR(rt0.c3)))AND(vt1.c0)))AND(NULL)))AND(rt0.c3)), ((vt1.c1) BETWEEN (rt0.c0) AND (rt0.c1)), ((0.0955319104529877)<(rt0.c2))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((x'')LIKE(x'')) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c4)=(rt0.c1))) OVER () FROM rt0, vt1 WHERE ((((-786986945)=('')) IN ((('P\l騆wAZ]') NOTNULL), ((x'') BETWEEN ('') AND (1.4395729E9))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), COUNT(*), ((((((((((vt1.c0)OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c4)))&(TRIM(DISTINCT vt1.c0))) FROM rt0 WHERE (((((((((x'f45f')OR('1290389599')))AND(NULL)))OR(NULL COLLATE NOCASE)))AND((~ ('-446454868'))))) GROUP BY (((((rt0.c0) IS TRUE)))>((rt0.c0 COLLATE RTRIM)));SELECT DISTINCT AVG(vt1.c1) OVER () FROM vt1; -- 0ms;
SELECT DISTINCT vt1.c0, UNLIKELY(CAST(vt1.c1 AS INTEGER)), (((rt0.c4) NOTNULL) IN ()) FROM vt1, rt0 WHERE (((CAST(NULL AS REAL)) BETWEEN (CAST('1103140038' AS TEXT)) AND (CAST(0.4046552491432005 AS INTEGER)))) GROUP BY NULL HAVING CAST(rt0.c3 AS NUMERIC) COLLATE NOCASE LIMIT -1909571965; -- 0ms;
SELECT ((((((((json_insert(vt1.c0, vt1.c0, rt0.c1))OR(((vt1.c1)<<(rt0.c1)))))AND(rt0.c0)))OR(LIKELY(rt0.c3))))OR(((vt1.c0)-(rt0.c2)))), ((((rt0.c0) ISNULL)) NOTNULL), CASE LIKE(vt1.c0, '', '2')  WHEN ((rt0.c3) ISNULL) THEN (rt0.c1 IN ()) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c1 END THEN vt1.c0 WHEN ((rt0.c0)*(rt0.c1)) THEN (((rt0.c4, rt0.c0, rt0.c0))<=((rt0.c4, vt1.c1, rt0.c0))) END, x'', SUM(((rt0.c2) IS FALSE)) FROM vt1, rt0 WHERE (((UNLIKELY(NULL)) BETWEEN (CASE 0.1231741736341796  WHEN NULL THEN x'f3f2' ELSE '-848956147' END) AND (x'0533243d' COLLATE BINARY))) LIMIT 141614184 OFFSET -1498347244; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(LIKELY(DISTINCT rt0.c3)) FROM vt1;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) BETWEEN ((((('')AND(rt0.c3)))OR(vt1.c1))) AND (((((vt1.c1)AND(rt0.c1)))OR(rt0.c4)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN (rt0.c0, rt0.c2)))|(((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))), ((((vt1.c1) BETWEEN (vt1.c1) AND (rt0.c2))) NOT BETWEEN (((rt0.c2) BETWEEN (1860144764) AND (rt0.c3))) AND ((((0.811383967506177))>=((rt0.c0))))), ((0.3839094755852035) IS TRUE) FROM rt0 WHERE ((- (((x'') NOT BETWEEN (NULL) AND (NULL)))));SELECT CAST(vt1.c1 COLLATE BINARY AS REAL) FROM rt0 WHERE (CAST((((NULL))<(('-661638794'))) AS BLOB)) LIMIT 1095320186;SELECT ALL (QUOTE(rt0.c2) IN (COUNT(rt0.c4))), LOWER((rt0.c0 IN ())), ((((rt0.c1)OR((((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))))AND((rt0.c4 IN ()))) FROM rt0, vt1 WHERE (((((((-1120875522)AND(x'')))OR('?LO%1aCz')))>>('b'))); -- 0ms;
SELECT ALL CAST(rt0.c3 COLLATE RTRIM AS REAL), COUNT(((x'')GLOB(rt0.c2))) OVER (), (((- (rt0.c3))) NOT BETWEEN ((((rt0.c1, vt1.c1, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c2, vt1.c1)) AND ((rt0.c1, rt0.c3, rt0.c0)))) AND (((((rt0.c1)AND(rt0.c4)))OR(rt0.c4)))), ((rt0.c3)>=(AVG(rt0.c4))), (((rt0.c3 IN ()))GLOB(COUNT(*))) FROM rt0, vt1 WHERE (((-8.6023851E8)!=(((((0.07737874785172705)OR(x'')))AND(NULL))))); -- 3ms;
SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND ('pn')) AS REAL), vt1.c1, CASE WHEN LOWER(vt1.c0) THEN vt1.c1 COLLATE NOCASE ELSE ((rt0.c1) BETWEEN (rt0.c0) AND (vt1.c0)) END, ((((x'f0ee')GLOB(vt1.c1)))||(NULLIF(rt0.c1, rt0.c3))), ((((((((((rt0.c0) NOT NULL))AND(((rt0.c0)*(rt0.c0)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))))OR(((vt1.c1)LIKE(0.5574544440876091)))))AND((NOT (vt1.c0)))), '1087708891', AVG(CAST(vt1.c0 AS INTEGER)) OVER ( RANGE (- (((vt1.c1)IS(rt0.c0)))) PRECEDING) FROM vt1 GROUP BY rt0.c1, (((('鮓R 0Tt'))<((vt1.c1))) IN ()), (~ ((vt1.c1 IN (rt0.c3, rt0.c0)))) HAVING CASE WHEN (rt0.c2 IN ()) THEN rt0.c0 ELSE UNLIKELY(rt0.c4) END;SELECT DISTINCT ((((((((GROUP_CONCAT(rt0.c2))OR(((rt0.c4)>(rt0.c1)))))OR(CAST(rt0.c2 AS REAL))))OR(((vt1.c1)*(vt1.c1)))))OR(((rt0.c0)LIKE(rt0.c3)))), ((((vt1.c1) BETWEEN (rt0.c3) AND (rt0.c1)))IS(CASE WHEN rt0.c0 THEN vt1.c0 END)), ((x'') BETWEEN (x'') AND (((((rt0.c2)OR(vt1.c1)))AND(rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT ALL ((rt0.c1)<>(((rt0.c0)|(rt0.c1)))) FROM vt1, rt0; -- 0ms;
SELECT TOTAL(((vt1.c0)IS NOT(rt0.c4))) FROM rt0 NOT INDEXED, vt1 ORDER BY NULL ASC  NULLS FIRST, ((CASE WHEN rt0.c2 THEN vt1.c1 WHEN rt0.c3 THEN '8HY+M' WHEN rt0.c4 THEN rt0.c0 END) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ((rt0.c0 IN ())))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((vt1.c0)GLOB(MIN(vt1.c0))), ((MIN(rt0.c2))*(x'')), json_object(CAST(rt0.c1 AS INTEGER), (((rt0.c0))>=((x'')))) FROM vt1, rt0 WHERE (((((NULL) ISNULL)) BETWEEN (TIME(0.7793328756127309, NULL, -860238510)) AND ((((('-')OR(0Xffffffffaf5a488c)))OR(0.9254055152177308)))));SELECT DISTINCT ((((((((CAST('-1635143130' AS REAL))OR(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE vt1.c0 END)))OR(COALESCE(rt0.c1, vt1.c0, rt0.c2, rt0.c0))))AND(GROUP_CONCAT(rt0.c4))))AND(rt0.c0 COLLATE BINARY)) FROM rt0, vt1 WHERE ((((0x3d1afe7f) BETWEEN (0.6328251997765107) AND (NULL)) IN (CASE 0.4046552491432005  WHEN NULL THEN x'1e43' WHEN '1199296334' THEN -523672670 WHEN 'AoRTcc' THEN 0X7b49caac END))); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS TEXT) COLLATE NOCASE, ((((rt0.c1) IS FALSE)) NOTNULL), ((((((rt0.c1)OR(rt0.c4)))AND(vt1.c1))) ISNULL) FROM rt0;SELECT DISTINCT rt0.c4 FROM vt1, rt0 ORDER BY rt0.c0  NULLS LAST, CASE WHEN CASE rt0.c3  WHEN rt0.c0 THEN rt0.c0 END THEN ((rt0.c0) IS TRUE) WHEN vt1.c1 COLLATE RTRIM THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c1) IS TRUE) THEN ((((rt0.c0)OR(rt0.c0)))AND(vt1.c1)) END; -- 0ms;
SELECT ((((((rt0.c2)AND(vt1.c0)))OR(rt0.c1))) ISNULL) FROM vt1, rt0; -- 0ms;
SELECT ALL ((TOTAL(rt0.c1)) NOTNULL) FROM vt1, rt0 GROUP BY ((rt0.c0)>=(rt0.c3)) COLLATE NOCASE HAVING CAST((NOT (rt0.c3)) AS TEXT); -- 0ms;
SELECT CAST(rtreenode(vt1.c0, rt0.c0) AS NUMERIC) FROM vt1;SELECT ALL (((rt0.c2)) NOT BETWEEN (((vt1.c0 IN ()))) AND ((((x'83f6')|(vt1.c0))))), CASE ((rt0.c1) BETWEEN (vt1.c0) AND (rt0.c3))  WHEN NULL THEN rt0.c1 END, vt1.c1 FROM rt0, vt1 WHERE (CASE WHEN ((NULL) NOT BETWEEN (NULL) AND ('^mo\')) THEN ((1116216317) ISNULL) ELSE UPPER(x'') END); -- 0ms;
SELECT DISTINCT ((COUNT(vt1.c0)) NOT NULL) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((((CASE rt0.c2  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)OR(CAST(rt0.c0 AS NUMERIC))))OR(x'' COLLATE RTRIM)))OR(x'')))OR(-733151675)) FROM rt0 WHERE ((~ (SQLITE_VERSION()))) GROUP BY ((rt0.c2 COLLATE NOCASE)<=(CAST('0.8787595129865832' AS NUMERIC))), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END) BETWEEN (CAST(rt0.c0 AS INTEGER)) AND (rt0.c4)), CASE WHEN '1328086941' THEN ((('817062094', vt1.c1, vt1.c1)) NOT BETWEEN ((vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c1))) ELSE (- ('{''#bc!_\')) END, NULL, '0.8809349530997757' HAVING CAST(vt1.c0 COLLATE NOCASE AS INTEGER) ORDER BY CAST(COALESCE(vt1.c1, rt0.c4) AS TEXT) DESC  NULLS FIRST, (('1095288531') BETWEEN ((- (rt0.c2))) AND (((vt1.c1) ISNULL))) DESC, ROUND(CASE WHEN rt0.c0 THEN rt0.c0 END, CASE WHEN vt1.c1 THEN rt0.c2 ELSE rt0.c0 END);SELECT DISTINCT ((((')]涀!')<=(NULL))) BETWEEN (((((vt1.c0)AND(rt0.c1)))AND(rt0.c3))) AND (((rt0.c1) NOTNULL))), (((((((((rt0.c2)OR(rt0.c4)))OR(rt0.c2)))AND(rt0.c2)))OR(vt1.c0)) IN ()), (((rt0.c2)) NOT BETWEEN (((vt1.c1 IN ()))) AND ((((rt0.c3) NOT BETWEEN (vt1.c1) AND (vt1.c0))))) FROM rt0 WHERE ((((('0.9526975758592098') IS FALSE))IS(((('1067777156'))==((''))))));SELECT ALL 0.5097013453669906, (- (CASE WHEN rt0.c3 THEN rt0.c1 WHEN x'' THEN rt0.c4 WHEN rt0.c1 THEN rt0.c1 END)), rt0.c3 FROM rt0 WHERE ((((((((0.4297186456108091, 'Jnk&q''My', '-819502018'))<((2011623860, NULL, 1094242975))))AND(((NULL) NOT BETWEEN (0.05916319965420169) AND (NULL)))))AND((+ ('-860238510'))))); -- 4ms;
SELECT DISTINCT (((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)))OR(vt1.c0)) IN ()) FROM vt1 LIMIT -889915513; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c1)OR(x'')))OR(rt0.c1)))AND((- (rt0.c3)))))OR(((rt0.c2) IS FALSE))))OR(((vt1.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)))))AND((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c1))))), COUNT(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c4 ELSE vt1.c0 END) OVER (), (~ (json_valid(rt0.c3))) FROM vt1, rt0 WHERE (CAST(CASE x''  WHEN 0.9184831345611043 THEN NULL ELSE x'' END AS INTEGER)); -- 0ms;
SELECT DISTINCT rt0.c2, ((CASE WHEN 'Tu蟜*ꆄfP%' THEN vt1.c1 ELSE rt0.c0 END) IS FALSE), x'' FROM vt1 WHERE ((CAST(0.4882426202558342 AS INTEGER) IN ()));SELECT ALL ((((CASE WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 END)OR(((x'f2c3') NOTNULL))))OR((rt0.c2 IN ()))), '7R/>', (((((((((('1243183680')AND(rt0.c1)))AND(vt1.c0)))AND(rt0.c2)))OR(rt0.c0)))>(LIKE(vt1.c0, rt0.c1))) FROM rt0 UNION SELECT DISTINCT vt1.c0, ((((((rt0.c2)OR('1547031561')))OR(x'')))OR(MIN(rt0.c1))), CASE ((NULL)%(rt0.c3))  WHEN '-1455910764' THEN ((vt1.c0)<(vt1.c0)) END FROM rt0 WHERE (((CASE NULL  WHEN -957984920 THEN '' ELSE x'632a' END) BETWEEN ((('46928177') IS TRUE)) AND (((1045518654)||(-1.616527271E9)))));SELECT ALL ((((vt1.c1) BETWEEN (rt0.c1) AND (rt0.c4))) BETWEEN (((vt1.c1) IS TRUE)) AND (x'')), (((- (vt1.c1)))IS NOT((((rt0.c0))<=((rt0.c1))))), CAST(rt0.c1 AS TEXT) COLLATE RTRIM, ROW_NUMBER() OVER (), ((((((((NULL)OR(GROUP_CONCAT(rt0.c4))))OR(((vt1.c0)||(rt0.c2)))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c4)))))OR(CASE rt0.c1  WHEN vt1.c1 THEN rt0.c1 WHEN 0.9557523821709792 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) FROM rt0, vt1 WHERE (((CAST(x'' AS TEXT))IS NOT(NULL COLLATE BINARY))) GROUP BY 0.380588361842932 HAVING ((GROUP_CONCAT(rt0.c4))IS(rt0.c1)); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((rt0.c0 COLLATE NOCASE) ISNULL)) OVER (), CASE ((0.495605556140841)/(vt1.c0))  WHEN GROUP_CONCAT(rt0.c0) THEN (vt1.c0 IN ()) WHEN CAST(rt0.c4 AS REAL) THEN CAST(rt0.c4 AS BLOB) WHEN ((vt1.c0) NOTNULL) THEN ((((rt0.c3)OR(rt0.c0)))OR(rt0.c0)) WHEN rt0.c4 COLLATE NOCASE THEN rt0.c4 COLLATE NOCASE WHEN NULL THEN ((x'')GLOB(0.5991651288050152)) END, vt1.c1 FROM rt0, vt1; -- 0ms;
SELECT ALL ((0.1764589067114788)&(ABS(vt1.c1))), COUNT(*), (+ (vt1.c1 COLLATE RTRIM)) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)-(vt1.c0)) AS TEXT), (((rt0.c1)) NOT BETWEEN ((CAST(vt1.c0 AS BLOB))) AND (((rt0.c0 IN ())))), ((vt1.c1)+(vt1.c0)) COLLATE BINARY COLLATE NOCASE, CAST((((rt0.c4, vt1.c0, vt1.c1)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c1)) AND ((rt0.c3, vt1.c0, vt1.c0))) AS NUMERIC), (((((vt1.c1) NOT NULL)))==((x'9753' COLLATE RTRIM))) FROM rt0;SELECT DISTINCT CASE WHEN MIN(vt1.c0, rt0.c1) THEN CASE WHEN rt0.c2 THEN vt1.c0 END WHEN (((NULL)) BETWEEN ((rt0.c3)) AND ((rt0.c0))) THEN CASE vt1.c1  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c1 THEN rt0.c0 END WHEN x'' THEN TRIM(rt0.c0, rt0.c1) ELSE ((rt0.c1)IS NOT(rt0.c4)) END FROM vt1 WHERE (CAST('' COLLATE RTRIM AS NUMERIC));SELECT ALL ((NULL) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))) FROM vt1;SELECT ALL CASE CASE rt0.c0  WHEN vt1.c1 THEN rt0.c0 END  WHEN ((vt1.c0)==(rt0.c4)) THEN ((((NULL)OR(rt0.c1)))OR(vt1.c1)) END, ((rt0.c4 COLLATE BINARY) IS TRUE), AVG(((((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(vt1.c1))) OVER () FROM vt1, rt0; -- 4ms;
SELECT TOTAL(((((vt1.c1)AND(rt0.c2)))OR(vt1.c1))) FROM rt0 WHERE ((((('e>[^Tfu')-(0xffffffffaa33e9ef)))>>(CASE WHEN x'ee33' THEN NULL WHEN NULL THEN 1.91543585E9 WHEN '' THEN x'' END))) LIMIT 77507859;SELECT COUNT(*) OVER ( ORDER BY CASE '-1264354416'  WHEN ((vt1.c0) NOTNULL) THEN CAST(rt0.c1 AS BLOB) ELSE rt0.c4 END DESC  NULLS FIRST, (NOT (((rt0.c1)*(rt0.c4)))) ASC  NULLS FIRST, (((UPPER(DISTINCT rt0.c0)))<((NULL COLLATE NOCASE))) ASC  NULLS FIRST) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT JULIANDAY((((rt0.c1)) BETWEEN ((vt1.c1)) AND ((rt0.c0))), (rt0.c3 IN ()), ((rt0.c3)*(rt0.c3))) FROM rt0;SELECT LIKELY((((x'', rt0.c4, rt0.c2)) BETWEEN ((vt1.c1, rt0.c0, rt0.c4)) AND ((rt0.c1, rt0.c0, rt0.c2)))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT (((((rt0.c0) IS TRUE)))<((((rt0.c4)&(rt0.c1))))), (((((('')LIKE(rt0.c4)))OR(MAX(rt0.c1))))OR(vt1.c0 COLLATE BINARY)), CASE WHEN CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c2 END THEN ((rt0.c4) BETWEEN (rt0.c0) AND (1497545666)) WHEN rt0.c4 COLLATE NOCASE THEN ((rt0.c0) BETWEEN (vt1.c1) AND (rt0.c1)) WHEN (('') NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((0Xfffffffff2efbbb1) NOT BETWEEN (rt0.c1) AND (rt0.c3)) ELSE NULLIF(DISTINCT vt1.c0, rt0.c1) END FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)<<(rt0.c0)) AS TEXT) FROM rt0, vt1 GROUP BY (NOT (CAST(vt1.c1 AS INTEGER))); -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (rt0.c0))) IS FALSE) FROM vt1 WHERE (((('1038317463' IN ())) NOT BETWEEN (((x'') IS TRUE)) AND (0.6984286393384327 COLLATE BINARY)));SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c2 AS INTEGER)) OVER ( ORDER BY (('-926472103' COLLATE RTRIM)>=(((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'7bcb')))) DESC  NULLS FIRST) FROM vt1, rt0 WHERE ((((((-1.909571965E9)OR(x'')))AND(1199296334)) IN ())); -- 0ms;
SELECT CAST(TOTAL(NULL) AS TEXT) FROM vt1, rt0 WHERE (highlight(((969618806)IS(NULL)), ((1.671488118E9)!=(x'955a')), '', x'f1ef'));SELECT ALL ((((rt0.c2)<=(rt0.c3))) NOT BETWEEN ((('') BETWEEN (rt0.c4) AND (rt0.c1))) AND ((NOT (rt0.c1)))) FROM vt1, rt0 WHERE ((NULL IN ())) ORDER BY CASE ((rt0.c3) NOT NULL)  WHEN (+ (vt1.c1)) THEN rt0.c0 COLLATE RTRIM ELSE (rt0.c4 IN (rt0.c4, 'Me')) END DESC  NULLS FIRST, CASE ((vt1.c0)-(rt0.c0))  WHEN (((rt0.c1))<((rt0.c2))) THEN CAST(vt1.c0 AS NUMERIC) WHEN ((vt1.c0) IS TRUE) THEN -848956147 COLLATE RTRIM WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c3)))AND(vt1.c1)))OR(rt0.c4)) THEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE ((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)) END DESC  NULLS FIRST, '-523672670'; -- 0ms;
SELECT DISTINCT CHANGES() FROM vt1 GROUP BY ((('-967063678', 0.6492884156706196, rt0.c4)) BETWEEN ((LTRIM(rt0.c1, rt0.c4), ABS(rt0.c0), (NOT (rt0.c1)))) AND ((((NULL) NOTNULL), rt0.c0, vt1.c1))) HAVING CASE rt0.c1 COLLATE RTRIM  WHEN COUNT(*) THEN (~ (rt0.c4)) ELSE ((rt0.c2)IS NOT(rt0.c4)) END;SELECT DISTINCT (((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR(CAST(vt1.c1 AS REAL))))AND((rt0.c4 IN ()))), (((((x'72d8', rt0.c1, rt0.c3))>((vt1.c1, vt1.c1, rt0.c2))))GLOB(((((vt1.c0)AND(vt1.c0)))AND(rt0.c1)))), LIKELY(CAST(rt0.c0 AS BLOB)) FROM vt1 WHERE (json_array(-872531726, 0.6474628355235099, '-772360385', 694928710) COLLATE RTRIM);SELECT DISTINCT LOWER(rt0.c1), ((((rt0.c3) IS TRUE))<(((rt0.c0)IS(vt1.c1)))), COUNT(((vt1.c0)||(rt0.c1))) COLLATE BINARY FROM vt1, rt0 WHERE ((((-623194421 IN (NULL, x''))) IS FALSE)) GROUP BY ((CASE WHEN rt0.c4 THEN vt1.c1 END)<=(highlight(rt0.c0, rt0.c1, rt0.c3, rt0.c3))), CASE rt0.c0  WHEN rt0.c4 COLLATE NOCASE THEN vt1.c0 WHEN CASE rt0.c4  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END THEN (((rt0.c3)) NOT BETWEEN ((x'')) AND ((rt0.c0))) WHEN ((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)) THEN ((rt0.c4)-(rt0.c4)) END, ((CAST(rt0.c0 AS TEXT)) NOT NULL) HAVING (((vt1.c1, vt1.c0, rt0.c2, rt0.c1, 0X7f53fc23)) NOT BETWEEN (((~ (rt0.c3)), CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END, '-1028382320', CAST('' AS TEXT), ((rt0.c4) ISNULL))) AND ((SUM(rt0.c0), CAST('' AS REAL), rt0.c3, NULL, ((rt0.c3) NOT BETWEEN (rt0.c2) AND (0.04245049185646188))))); -- 0ms;
SELECT (((((rt0.c1, rt0.c0, rt0.c2))>((rt0.c3, 0.19194311961189603, rt0.c0)))) NOT BETWEEN (MIN(rt0.c3)) AND (x'' COLLATE NOCASE)) FROM vt1, rt0 GROUP BY (UPPER(DISTINCT vt1.c1) IN ()) HAVING (- (((rt0.c3)*(rt0.c4)))); -- 0ms;
SELECT DISTINCT SUM(x'679f') OVER ( ORDER BY (- ((((vt1.c1, x'32b8', vt1.c0, rt0.c1, vt1.c0))=((rt0.c2, vt1.c0, rt0.c4, rt0.c4, vt1.c1))))) ASC), LOWER(((NULL) BETWEEN (rt0.c3) AND (rt0.c3))), DATE(((rt0.c4) NOT NULL), ((rt0.c0) ISNULL), rt0.c1) FROM vt1;SELECT DISTINCT TOTAL(COUNT(*)) FROM rt0, vt1;SELECT DISTINCT ((NULL) IS TRUE), '615919713', LOWER(DISTINCT rt0.c3) COLLATE NOCASE FROM vt1 WHERE (NULL);SELECT DISTINCT 0X16b29bc2 FROM vt1 GROUP BY x'4e1a' LIMIT -1980474717; -- 0ms;
SELECT DISTINCT ((rt0.c2 IN (x'')) IN (((vt1.c0)OR(rt0.c0)), rt0.c4)), ((rt0.c0)||((((vt1.c0))!=(('-598654809'))))), LIKELY((((rt0.c4, vt1.c1, rt0.c4))<((rt0.c1, rt0.c2, vt1.c0)))), rt0.c4, ((((rt0.c3)&(rt0.c3)))>=(rt0.c4 COLLATE RTRIM)) FROM vt1, rt0 WHERE (NULL) GROUP BY CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 END COLLATE RTRIM HAVING (((rt0.c1)) NOT BETWEEN ((((rt0.c3) ISNULL))) AND ((LIKE(vt1.c0, rt0.c0, '	')))); -- 1ms;
SELECT DISTINCT rt0.c3, PERCENT_RANK() OVER (), IFNULL((+ (rt0.c4)), rt0.c4) FROM rt0 WHERE (((((((('t2P''lT~/&'))<((-1.860525649E9))))OR(0.351381584181335 COLLATE RTRIM)))AND(0Xffffffffe3a6608f))) GROUP BY (+ (((rt0.c2)&(rt0.c0)))); -- 0ms;
SELECT AVG(rt0.c0) FROM rt0, vt1 WHERE ((~ ((NOT (0x3cf2f3c4))))); -- 0ms;
SELECT SUM(0Xffffffffecdb8390) OVER (), CASE (- ('-323822758'))  WHEN '' COLLATE RTRIM THEN CAST(rt0.c2 AS REAL) END, MIN(((rt0.c3)=(x''))) FROM rt0 WHERE (((CAST(0xffffffffeb733fbc AS BLOB))|(((0Xffffffffd0ebaad6)=(6.435121320971908E18))))); -- 0ms;
SELECT ALL ((NULL)GLOB((rt0.c4 IN (rt0.c0, vt1.c1)))), CASE WHEN ((0.5271453693347006) NOTNULL) THEN CAST(vt1.c0 AS REAL) ELSE ((vt1.c0)<=(rt0.c0)) END, (NOT (COUNT(*))), CAST((rt0.c4 IN ()) AS BLOB), (CASE x''  WHEN vt1.c1 THEN vt1.c0 END IN ()) FROM rt0 GROUP BY ((vt1.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)) COLLATE RTRIM LIMIT -1616527271;SELECT DISTINCT COUNT(*) FROM vt1, rt0 WHERE (TYPEOF((+ (0.005642784410317514)))); -- 1ms;
SELECT DISTINCT ((rt0.c3) BETWEEN (x'') AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM vt1;SELECT CAST('eD]rxlVTp' AS NUMERIC) FROM vt1; -- 0ms;
SELECT x'' FROM vt1 WHERE ((('56' COLLATE NOCASE)/(((((x'')OR(x'')))OR(x''))))) GROUP BY (((((((rt0.c0)OR(vt1.c0)))AND(rt0.c0))))<((((((rt0.c4)AND(rt0.c4)))AND(rt0.c1))))), (((rt0.c2 IN ()))%(x'6a06')), ((((((((((rt0.c3)AND(rt0.c3)))AND(rt0.c4)))AND(vt1.c0)))OR(rt0.c4)))>=(((rt0.c2)>=(-1.308893469E9))));SELECT DISTINCT (((vt1.c0 IN ())) NOT BETWEEN ((+ (rt0.c1))) AND (rt0.c1)) FROM rt0, vt1 WHERE (((TRIM('', x''))<=(((('727826941')) NOT BETWEEN ((919586254)) AND ((0.29838084007079513)))))); -- 0ms;
SELECT DISTINCT ((((NULL COLLATE RTRIM)AND((- (rt0.c2)))))AND(((rt0.c1) NOT NULL))), rt0.c2, json_array_length(x'f4cf') FROM vt1, rt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT ALL SUM(((rt0.c2)&(rt0.c2))) FILTER(WHERE ((((((rt0.c3) NOT BETWEEN (0X55ce23a4) AND (vt1.c1)))AND(((rt0.c2) NOT NULL))))OR(QUOTE(rt0.c2)))) OVER (), ((~ (vt1.c1)) IN ()), CASE (~ (rt0.c0))  WHEN UPPER('a0JPq') THEN rt0.c2 ELSE (((vt1.c1))<((rt0.c2))) END FROM rt0 WHERE (((((('231886627')) NOT BETWEEN ((8.26886905E8)) AND (('231886627')))) NOT BETWEEN ((~ (1634183834))) AND ('303272783' COLLATE RTRIM)));SELECT DISTINCT ((((CASE WHEN rt0.c0 THEN rt0.c1 END)AND(CAST(rt0.c0 AS REAL))))OR(CAST(rt0.c3 AS BLOB))) FROM vt1, rt0; -- 3ms;
SELECT DISTINCT ABS(DISTINCT 0.23689505511141706), AVG(((rt0.c0)*(rt0.c4)) COLLATE NOCASE) OVER ( RANGE  CURRENT ROW), ((((((((((vt1.c1)/(NULL)))OR(rt0.c3 COLLATE NOCASE)))AND(vt1.c1)))OR('C[VR ')))AND(CAST(vt1.c1 AS REAL))) FROM vt1, rt0 LIMIT 471528524 OFFSET 1067777156; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) AND ((0.7204027245413207))) FROM vt1, rt0; -- 0ms;
SELECT (((rt0.c2 IN (rt0.c0, rt0.c4)))<<(COUNT(*))) FROM rt0 WHERE (((((('3xgERt4' IN ()))AND(json_insert(0xffffffffd3a413be, NULL, NULL))))AND(((-598654809)LIKE(NULL))))) GROUP BY CASE WHEN rt0.c0 COLLATE NOCASE THEN (((0.5312194250089498)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) ELSE (((rt0.c4))>=((rt0.c0))) END, (((- (rt0.c4)))OR(((rt0.c4)>(rt0.c4)))), (((((rt0.c3)) BETWEEN ((vt1.c0)) AND ((vt1.c1)))) NOT NULL) HAVING (NOT ((('X_~㌦l\n.') BETWEEN (rt0.c2) AND ('HfY揭YU%IX'))));SELECT DISTINCT GROUP_CONCAT((((rt0.c1))<((rt0.c2)))), MIN(rt0.c0), ((((vt1.c0)OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(0.09179627091443565)) FROM vt1;SELECT DISTINCT ((vt1.c1 COLLATE BINARY) NOT BETWEEN ((rt0.c2 IN ())) AND (IFNULL(DISTINCT vt1.c0, rt0.c2))), ((((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c0)))<=((+ (rt0.c0)))), ((rt0.c1 COLLATE NOCASE) BETWEEN (((rt0.c0) BETWEEN (rt0.c3) AND (x''))) AND (IFNULL(DISTINCT rt0.c1, rt0.c0))) FROM rt0;SELECT ALL ((((rt0.c3) NOT BETWEEN (vt1.c0) AND (rt0.c4))) NOT BETWEEN ((((rt0.c0))!=((rt0.c1)))) AND (CAST(vt1.c1 AS TEXT))) FROM vt1 GROUP BY ((x'')IS NOT(TRIM(DISTINCT rt0.c0, rt0.c1)));SELECT DISTINCT CAST(((0.1699589320902345)=(rt0.c0)) AS INTEGER) FROM rt0 WHERE (((0.8250086939563718)GLOB((('')*('2011623860'))))); -- 0ms;
SELECT DISTINCT ((((((vt1.c0)OR(vt1.c1)))AND(rt0.c3)))!=((('-599158865') IS FALSE))) FROM rt0, vt1; -- 1ms;
SELECT ((CASE vt1.c1  WHEN rt0.c3 THEN rt0.c3 END)>>(NULLIF(rt0.c0, '-1960505627'))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1, rt0 WHERE (CAST((- (NULL)) AS BLOB)); -- 0ms;
SELECT ALL (- (((((0.9639657081304919)AND(rt0.c2)))OR(rt0.c3)))), (+ (rt0.c2)) COLLATE BINARY, CASE WHEN rt0.c0 COLLATE NOCASE THEN NULL ELSE ((vt1.c1)||(rt0.c0)) END FROM vt1 WHERE (((CAST(x'8e91' AS TEXT)) NOT NULL));SELECT DISTINCT COUNT(*), ((vt1.c1) BETWEEN (rt0.c3) AND (vt1.c1)) COLLATE NOCASE, ((((rt0.c1)OR(CAST(rt0.c4 AS INTEGER))))OR(779156592)) FROM rt0, vt1 WHERE (CAST(CAST(x'' AS TEXT) AS BLOB)); -- 0ms;
SELECT DISTINCT SUM(rt0.c4) FROM rt0 LEFT OUTER JOIN vt1 ON (((((vt1.c1))<=((rt0.c1))))<<((((rt0.c3))<=((rt0.c3))))) GROUP BY ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (vt1.c0) AND (((rt0.c0) NOTNULL))), TYPEOF(TRIM(vt1.c0)), (json_patch(vt1.c0, x'2f4a') IN ()) HAVING ((CASE WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)OR(((vt1.c1)IS(1447651980)))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c1)LIKE(rt0.c1)))) FROM rt0 WHERE ((((((0.9063976180414743) NOT NULL)))<((UPPER('723939680'))))) LIMIT -1616527271 OFFSET 115593634; -- 0ms;
SELECT DISTINCT ((('' IN ())) IS FALSE) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(((vt1.c0) IS FALSE)) OVER () FROM rt0;SELECT DISTINCT SUM(CAST(rt0.c0 AS BLOB)) OVER () FROM vt1, rt0 WHERE (((((NULL COLLATE BINARY)AND((('-1909571965')<=(NULL)))))OR(((0.3287281809139416)>=('-860238510'))))) ORDER BY ((((892959306) NOT BETWEEN (vt1.c1) AND (vt1.c1))) NOTNULL) DESC, UNLIKELY(x''); -- 0ms;
SELECT (+ (TOTAL(rt0.c4))), (NOT ((((vt1.c1)) BETWEEN ((rt0.c3)) AND ((vt1.c1))))), COUNT(rtreenode(rt0.c1, rt0.c4)) FILTER(WHERE (+ (NULL))) OVER () FROM rt0 ORDER BY '!?'  NULLS FIRST, ((CASE vt1.c1  WHEN 2.725415E8 THEN rt0.c1 WHEN rt0.c0 THEN vt1.c1 WHEN rt0.c2 THEN NULL END)<<((('즘mB')IS(vt1.c0))))  NULLS LAST;SELECT DISTINCT ((rt0.c1) BETWEEN (CAST(x'' AS TEXT)) AND ((((x'4205'))>=((rt0.c1))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT CAST(CAST(vt1.c1 AS BLOB) AS BLOB), ((rt0.c3 COLLATE BINARY) BETWEEN (CASE vt1.c0  WHEN vt1.c1 THEN rt0.c4 WHEN rt0.c2 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c0 END) AND (((rt0.c4)GLOB(vt1.c1)))), GROUP_CONCAT(((((((((rt0.c1)OR(vt1.c0)))AND(rt0.c0)))OR(rt0.c1)))OR(rt0.c3))) OVER (), ((MAX(vt1.c1)) IS FALSE), PERCENT_RANK() OVER () FROM vt1 WHERE (((CHAR('405261775'))<>(((x'') BETWEEN (1.067777156E9) AND ('1423024295')))));SELECT ALL MIN(COUNT(((((rt0.c1)OR(rt0.c4)))OR(x'2e12')))), ((rt0.c1) ISNULL), (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))) COLLATE BINARY FROM vt1;SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt1 ORDER BY CAST(NULL AS TEXT) COLLATE RTRIM DESC; -- 0ms;
SELECT DISTINCT AVG((((vt1.c0)) BETWEEN ((vt1.c1)) AND ((vt1.c1)))) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN 0.7390042536933004 THEN vt1.c0 END)AND(((vt1.c0)LIKE(rt0.c1)))))AND(0X4deb6929)) FROM vt1, rt0 WHERE (CAST(TYPEOF(x'') AS BLOB)); -- 1ms;
SELECT ALL GROUP_CONCAT(CAST(vt1.c1 AS INTEGER)) OVER ( ORDER BY CAST(CASE WHEN rt0.c2 THEN rt0.c0 ELSE 0.23640991949809398 END AS BLOB) ASC, (((((((((~ (vt1.c0)))OR((((rt0.c3)) BETWEEN ((rt0.c0)) AND ((0.9342421599427561))))))AND((vt1.c0 IN ()))))AND(((rt0.c4)||(0.765654810264037)))))OR((((rt0.c4)) NOT BETWEEN ((0xfffffffffa3cfada)) AND ((rt0.c0))))) ASC  NULLS LAST, (((((rt0.c1, rt0.c3, rt0.c4)) NOT BETWEEN ((rt0.c0, vt1.c1, rt0.c3)) AND ((rt0.c2, vt1.c1, rt0.c2)))) BETWEEN (x'') AND (CAST(rt0.c1 AS REAL)))  NULLS LAST) FROM rt0;SELECT DISTINCT CAST((rt0.c2 IN ()) AS INTEGER) FROM rt0 WHERE ((((('kv')OR(NULL)))AND(NULL)) COLLATE NOCASE COLLATE NOCASE); -- 0ms;
SELECT ALL ((((CASE WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END)OR((rt0.c4 IN ()))))OR(LOWER(DISTINCT vt1.c0))) FROM rt0 WHERE ((((CAST(0.5998665849561219 AS TEXT)))>((CASE WHEN 'YaIT' THEN 0X1827cdcf END))));SELECT (((rt0.c4)) NOT BETWEEN ((((rt0.c1)>(rt0.c1)))) AND (((((0.27122354306477525, rt0.c0, rt0.c3)) NOT BETWEEN ((rt0.c4, rt0.c4, rt0.c2)) AND ((rt0.c0, rt0.c0, rt0.c2)))))) FROM vt1 ORDER BY ((rt0.c4)IS(((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))), ((NULL)/(rt0.c1)) COLLATE NOCASE DESC  NULLS FIRST, ((((((rt0.c0))==((rt0.c4))), (+ (rt0.c2)), vt1.c1 COLLATE NOCASE, ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)), (rt0.c4 IN ())))>=((((rt0.c1)GLOB(vt1.c1)), ((rt0.c3)*('-64541670')), ((((rt0.c0)AND(vt1.c0)))OR(rt0.c0)), vt1.c0 COLLATE RTRIM, (((rt0.c3, vt1.c1, vt1.c1)) NOT BETWEEN ((rt0.c4, vt1.c1, rt0.c0)) AND ((rt0.c0, rt0.c0, vt1.c0)))))), vt1.c1 DESC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(CASE rt0.c2  WHEN rt0.c3 THEN vt1.c0 END) FILTER(WHERE (((((0.9298350612607559)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))) NOT NULL)) OVER ( ORDER BY ((((CAST(rt0.c0 AS INTEGER))OR(((rt0.c0)<<(rt0.c1)))))OR((((rt0.c3))!=((rt0.c2)))))  NULLS FIRST) FROM rt0, vt1 WHERE (((((0.20107334905111152) BETWEEN (x'') AND (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((x'fc93'))))OR(((rt0.c4)OR(vt1.c1)))))AND(((rt0.c0) NOT NULL))), (NOT (vt1.c0)), NTH_VALUE((((rt0.c2, ((rt0.c0)>(rt0.c4)), ((rt0.c1) NOTNULL)))<((CAST(x'' AS REAL), -1569165952, LOWER(rt0.c3)))), (((rt0.c0 COLLATE BINARY))<=(((((((((('qK9]%㽵**Q')AND(rt0.c3)))AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))))) OVER ( ORDER BY ((rt0.c3)GLOB(x'')) COLLATE BINARY COLLATE RTRIM  NULLS LAST RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 WHERE (IFNULL((('R{')+(NULL)), (((((((((((('-1779985172')OR(NULL)))OR(0.3826501641591218)))OR('-390672026')))AND('698899238')))AND(NULL)))OR(0.8576260116273757))));SELECT DISTINCT ((((rt0.c4) IS FALSE))%(CASE rt0.c3  WHEN rt0.c2 THEN x'' ELSE rt0.c3 END)), ((CAST(vt1.c1 AS REAL)) BETWEEN (vt1.c0 COLLATE RTRIM) AND ((((rt0.c4))!=((rt0.c1))))), ((((((((((((rt0.c2)AND(vt1.c0)))AND(rt0.c0)))AND(vt1.c1)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)) COLLATE BINARY FROM rt0, vt1 ORDER BY ((((vt1.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))) IN ()); -- 0ms;
SELECT ALL CASE WHEN ((vt1.c1)IS NOT(vt1.c1)) THEN '1860925106' ELSE ((rt0.c1)||(rt0.c0)) END FROM rt0, vt1 WHERE ((((+ (x''))) IS TRUE)); -- 0ms;
SELECT ALL rt0.c0 FROM vt1 WHERE ((~ ((x'' IN ())))) GROUP BY CAST(x'' COLLATE BINARY AS NUMERIC), CASE ((vt1.c0)<=(vt1.c1))  WHEN ((rt0.c2)&(vt1.c1)) THEN x'4b6faa24' ELSE ((vt1.c1)IS NOT(rt0.c3)) END, CASE CAST(vt1.c1 AS BLOB)  WHEN ((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)) THEN 7.67169094E8 ELSE ((vt1.c0) NOT NULL) END;SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((((((((vt1.c0)OR('')))AND(vt1.c0)))AND(rt0.c3)))OR(vt1.c0)))) AND ((rt0.c4))) FROM vt1 WHERE (((((((((0.6481850439180894)OR(NULL)))AND(x'')))AND(((x'')!=('&%fN')))))AND(((('3cd^]32s')) BETWEEN ((0.4891302319461047)) AND (('IpG')))))) LIMIT 664874368;SELECT DISTINCT CAST(((rt0.c4)AND(rt0.c2)) AS NUMERIC), NULL, NULL FROM vt1, rt0 WHERE (((((x'e101')LIKE(NULL)))<('4859651486881674598'))); -- 0ms;
SELECT DISTINCT json(rt0.c3) COLLATE BINARY FROM rt0 WHERE ((((((('&')GLOB(NULL)))AND(((0Xffffffffb6bf5a72) IS FALSE))))OR(CAST(0x27d0ec98 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((rt0.c3) NOT NULL) IN (rt0.c0)), rt0.c4, CAST((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c3))) AS BLOB) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT NTILE((- ((((rt0.c3, vt1.c1, rt0.c3))<((rt0.c3, rt0.c4, vt1.c1)))))) OVER ( ORDER BY 'X('  NULLS FIRST) FROM vt1, rt0;SELECT DISTINCT (((+ (vt1.c1))) NOT BETWEEN (vt1.c1 COLLATE RTRIM) AND (CAST(vt1.c0 AS REAL))) FROM rt0, vt1; -- 0ms;
SELECT vt1.c1 COLLATE BINARY FROM vt1, rt0; -- 0ms;
SELECT ALL NULL FROM vt1, rt0 WHERE (((LIKELY(NULL))+(x'' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT ((((((((((rt0.c0) ISNULL))AND(GROUP_CONCAT(rt0.c1))))OR(CASE WHEN rt0.c0 THEN rt0.c3 ELSE NULL END)))AND(rt0.c4 COLLATE NOCASE)))OR(IFNULL(0.4243306207345354, vt1.c0))) FROM rt0 GROUP BY (((rt0.c1 IN ()))<>(0X47fa4ecf)) LIMIT -937295274 OFFSET 265761288;SELECT DISTINCT ((((rt0.c2)+(rt0.c3)))<=(vt1.c0)), ((((((rt0.c4)>=(rt0.c3)))AND(((rt0.c2)GLOB(vt1.c0)))))AND(SUM(NULL))), (((((rt0.c1)IS(vt1.c1))))!=((rt0.c1))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3, rt0.c4, vt1.c1)) NOT BETWEEN ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)), vt1.c0, rt0.c2)) AND ((ABS(rt0.c1), 0.7267923864180077, CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN vt1.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END))) FROM vt1;SELECT DISTINCT (((((((((((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c1))))AND((((rt0.c4))!=((rt0.c4))))))AND(((rt0.c3)/(0.34036584485133103)))))OR(((rt0.c0)<=(rt0.c0)))))OR(TOTAL(rt0.c1))), ((rt0.c3) NOT BETWEEN ((rt0.c1 IN ())) AND (((rt0.c3) BETWEEN (rt0.c3) AND (vt1.c0)))), ((((vt1.c1) ISNULL)) NOT BETWEEN (CASE 0x6b37fa06  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) AND ((((rt0.c4))>((vt1.c0))))) FROM rt0 WHERE ('425614423');SELECT DISTINCT TOTAL(((((rt0.c1)OR(rt0.c0)))OR('-1308893469'))) OVER () FROM rt0 WHERE ((((')探	얾F(&%') BETWEEN (x'') AND (NULL)) IN ((((('2118071777')AND('HQ4')))AND(NULL)), x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET((((rt0.c4, vt1.c1, vt1.c1))<=((rt0.c3, rt0.c1, rt0.c4)))) FROM rt0 WHERE ((CASE WHEN 'Cn' THEN NULL WHEN 0.7605849582037529 THEN '619516968' WHEN 6.435121320971908E18 THEN 0.35449882157716384 END IN ()));SELECT vt1.c0 COLLATE BINARY, CASE WHEN NULL THEN (~ (vt1.c1)) ELSE UPPER(DISTINCT rt0.c1) END, ((((rt0.c1) IS FALSE))>=(((rt0.c3)OR(rt0.c0)))) FROM rt0, vt1 WHERE ((CASE 601572851  WHEN '-447027991' THEN NULL ELSE x'' END IN ())) LIMIT -1331948071 UNION ALL SELECT DISTINCT LAG(0.7184260192329336, '' COLLATE NOCASE, (- (((vt1.c1) ISNULL)))) OVER (), ((json_array_length(rt0.c2, vt1.c0)) NOTNULL), ((((CAST('0.6863263446938527' AS INTEGER))AND(COUNT(rt0.c3))))OR(json_patch(rt0.c2, rt0.c2))) FROM vt1 WHERE (CASE GLOB('-843105093', NULL)  WHEN ((x'81be')OR(NULL)) THEN (((-2097508042)) BETWEEN (('')) AND ((x''))) ELSE (- ('-211463273')) END) GROUP BY vt1.c0;SELECT ALL 0.9212943523695314, rt0.c0, LAST_VALUE((((vt1.c0, rt0.c3, 0.5224584502163483)) NOT BETWEEN ((('' IN (vt1.c1, rt0.c3)), ((vt1.c1)==(rt0.c3)), ((rt0.c2) NOTNULL))) AND ((CAST(vt1.c0 AS TEXT), (rt0.c3 IN (rt0.c0)), ((rt0.c0)IS(vt1.c1)))))) OVER ( ORDER BY CAST(CASE WHEN x'' THEN rt0.c2 ELSE rt0.c1 END AS INTEGER) DESC  NULLS LAST, ((rt0.c4 COLLATE RTRIM)AND((rt0.c2 IN ())))  NULLS LAST) FROM rt0, vt1 LIMIT 2129416835 OFFSET 1971049785; -- 1ms;
SELECT CASE WHEN vt1.c0 THEN (~ (vt1.c1)) ELSE (rt0.c1 IN (rt0.c4)) END, ((((((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c1)))OR(((((rt0.c1)OR(vt1.c1)))OR(rt0.c4)))))OR(rt0.c1)), (+ (CAST(rt0.c3 AS NUMERIC))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)AND(CAST(rt0.c1 AS TEXT))))OR((NOT (vt1.c1)))))OR((vt1.c0 IN (rt0.c0)))))OR(MAX(rt0.c2))), (((((((((rt0.c0 IN (rt0.c2, rt0.c1)))OR(((rt0.c4)IS(vt1.c1)))))AND(CASE vt1.c1  WHEN rt0.c0 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c3 WHEN x'' THEN rt0.c1 END)))OR(((NULL)>=(x'')))))OR(((rt0.c4)=(vt1.c0)))), CASE WHEN ABS(rt0.c0) THEN CAST(rt0.c3 AS BLOB) END FROM rt0, vt1 WHERE (CAST(0Xffffffff87aaa26d COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT ALL (+ (((vt1.c0) IS FALSE))), 0.7640006043437104, CAST(rt0.c4 AS REAL) COLLATE NOCASE FROM rt0, vt1 LIMIT -277590250 OFFSET 235397665; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN vt1.c1 END)<('-1781603296')) FROM rt0, vt1 WHERE ((('') BETWEEN ('1113273110') AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c0 AS BLOB))), CASE WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)) THEN vt1.c0 END, ((GROUP_CONCAT(rt0.c2)) IS TRUE) FROM vt1;SELECT ALL COUNT(*) OVER () FROM rt0, vt1; -- 0ms;
SELECT ALL ((CAST(rt0.c3 AS BLOB)) IS TRUE) FROM vt1 WHERE (CAST(-1933609481 AS TEXT)) ORDER BY CAST((((rt0.c1, vt1.c1, NULL))==((rt0.c3, vt1.c1, rt0.c1))) AS REAL);SELECT ALL rt0.c3 FROM rt0 WHERE ((~ ((((0.8434732623409377)) NOT BETWEEN ((0.27559268814559)) AND ((0.5076389939878624)))))); -- 0ms;
SELECT ((0x5fa1de69) NOT BETWEEN (TYPEOF(DISTINCT NULL)) AND (TOTAL(rt0.c2))) FROM vt1;SELECT DISTINCT x'' FROM rt0, vt1 WHERE ((NULL IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL vt1.c1 FROM vt1 WHERE (((((((1.4395729E9))>(('8''')))))>=((TYPEOF(x''))))) GROUP BY ((((((vt1.c0) NOT BETWEEN (vt1.c1) AND (rt0.c0)))AND(((rt0.c1)+(rt0.c0)))))AND(((((rt0.c3)AND(vt1.c0)))OR(rt0.c3)))) HAVING ((vt1.c0 COLLATE BINARY)==(((vt1.c1) BETWEEN (rt0.c1) AND (vt1.c1))));SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (vt1.c1) AND (rt0.c3)) AS REAL) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT 0.7521449346109756, SUM(((((vt1.c1)AND(rt0.c4)))AND(0.8611533468003502))), rt0.c0 FROM rt0;SELECT (NULL IN ()) FROM rt0, vt1 GROUP BY (- (STRFTIME(rt0.c3, '-1707641472', vt1.c1))) HAVING CASE CAST(rt0.c1 AS BLOB)  WHEN (((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c4))) THEN ((rt0.c1) IS TRUE) WHEN ((((rt0.c3)OR(rt0.c3)))OR(rt0.c4)) THEN COUNT(*) WHEN rt0.c1 THEN ((vt1.c0)-(rt0.c4)) END; -- 0ms;
SELECT DISTINCT ((((rt0.c2)*(rt0.c3)))==(CASE rt0.c0  WHEN rt0.c4 THEN rt0.c3 WHEN 0.3241699246434979 THEN rt0.c2 WHEN vt1.c1 THEN rt0.c4 END)) FROM vt1 WHERE ((IFNULL(DISTINCT 653277090, '琪clA 촜eR') IN ()));SELECT ALL vt1.c0, CASE WHEN (((rt0.c0))>=(('-1375162065'))) THEN vt1.c0 COLLATE BINARY ELSE ((((((((NULL)AND(vt1.c0)))OR(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)) END, SUM(rt0.c3) FROM rt0 WHERE (((((((((((((((NULL) ISNULL))AND((('0.8340483866098732') ISNULL))))OR(((((x'49e2')OR('')))OR(0X737585e8)))))AND(x'')))OR(CASE WHEN 0.9412584510846811 THEN '0.6136217255103964' END)))OR(((NULL)AND('')))))OR((((('WC')OR('^l1w悏f+')))OR(NULL)))));SELECT DISTINCT rt0.c1, (((((x'5543')OR(rt0.c1))))>=((rt0.c2 COLLATE BINARY))), (NOT (CAST(vt1.c1 AS NUMERIC))) FROM vt1 WHERE ((+ (CAST(NULL AS REAL))));SELECT DISTINCT ((CAST(rt0.c0 AS REAL))||((rt0.c4 IN (rt0.c0)))), ((rt0.c2 IN ()) IN ()), ((SUM(rt0.c1))LIKE(((rt0.c2)<(rt0.c4)))) FROM rt0, vt1 WHERE ((((x'' IN ()))IS(((0.2869695168443066) NOT BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c3) AS TEXT) FROM vt1 RIGHT OUTER JOIN rt0 ON ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (vt1.c1)))<=((((rt0.c4))<=((vt1.c1))))); -- 1ms;
SELECT ALL ((((rt0.c2) IS TRUE))&(((x'')<>(rt0.c3)))), CAST(((NULL)<('-1427996820')) AS INTEGER), NULL FROM rt0, vt1 ORDER BY (((rt0.c4, rt0.c1, vt1.c1, rt0.c4, rt0.c4)) BETWEEN (((((rt0.c3)) BETWEEN ((vt1.c1)) AND ((vt1.c1))), CASE rt0.c4  WHEN vt1.c1 THEN rt0.c0 END, rt0.c1 COLLATE RTRIM, ((rt0.c0)AND('-1005869913')), CAST(rt0.c3 AS NUMERIC))) AND ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END, ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)), CASE WHEN vt1.c1 THEN rt0.c4 ELSE rt0.c0 END, ((rt0.c1) NOTNULL), NULL))) DESC  NULLS LAST; -- 0ms;
SELECT ALL NULL FROM rt0 WHERE (0Xffffffffeb733fbc) ORDER BY rt0.c2 ASC  NULLS LAST; -- 0ms;
SELECT ((vt1.c0)*(((rt0.c3)<(vt1.c1)))) FROM rt0;SELECT DISTINCT ((((rt0.c2)<<(0.20489226104032154)))-((rt0.c4 IN ()))) FROM vt1, rt0 WHERE (NULL) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1))) BETWEEN ((~ (vt1.c1))) AND (0.9371098920609057)); -- 0ms;
SELECT '⇍&' FROM vt1 WHERE ((- (((826886905) BETWEEN ('邐gꚋ	雾)C') AND (0.054808112317808244))))); -- 0ms;
SELECT ALL CAST(NULL AS TEXT), NULL, NULL FROM rt0, vt1 WHERE (((IFNULL(NULL, NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM vt1 WHERE (CAST(TYPEOF('-1340338240') AS TEXT)) ORDER BY ((((x'')!=(rt0.c0)))LIKE(0.1804829405216416))  NULLS FIRST;SELECT DISTINCT COUNT(*), (((rt0.c2)) BETWEEN ((TRIM(rt0.c2, rt0.c0))) AND ((NULL))), COUNT(((rt0.c0)IS NOT(vt1.c0))) OVER () FROM rt0 WHERE ((0.7315035822468845 COLLATE BINARY IN (((0.7316678066616497) ISNULL))));SELECT DISTINCT CAST(((((vt1.c1)AND(rt0.c0)))OR(rt0.c3)) AS INTEGER) FROM rt0, vt1 LIMIT -1860525649; -- 0ms;
SELECT DISTINCT rt0.c4, (- ((((rt0.c0, '-848956147', rt0.c3))>((vt1.c1, rt0.c2, rt0.c0))))), ((((vt1.c0)==(rt0.c1)))%(((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))) FROM vt1, rt0 WHERE ((((x'')) BETWEEN ((NULL COLLATE NOCASE)) AND ((CAST(NULL AS TEXT))))) LIMIT -1133917356; -- 0ms;
SELECT DISTINCT (((CAST(vt1.c1 AS BLOB)))=((vt1.c1 COLLATE BINARY))) FROM rt0, vt1 WHERE (LIKE(((x'') BETWEEN ('-597853554') AND ('BB#S䃜p牸D''')), 0.6973851299793852, 'L')); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1)*(rt0.c3))) OVER () FROM vt1 WHERE ((((x'' IN (x'cb06', ''))) NOT BETWEEN (((((1753543543)AND('iy')))OR(0.49185811172492133))) AND ('272260528' COLLATE NOCASE))) LIMIT 1307273513 OFFSET 732250332;SELECT ALL CASE WHEN ((rt0.c4)||(rt0.c1)) THEN (~ (rt0.c3)) END FROM rt0, vt1 ORDER BY ((((rt0.c4)|(rt0.c0)))!=(((rt0.c1) IS FALSE))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c2)|(vt1.c0)))|(((rt0.c3) ISNULL))), CASE (rt0.c3 IN ())  WHEN ((rt0.c0)==(vt1.c0)) THEN (rt0.c4 IN ()) ELSE ((rt0.c0)|(vt1.c1)) END, (((rt0.c3)) NOT BETWEEN ((((((rt0.c4)OR(rt0.c4)))AND(rt0.c4)))) AND ((CAST(rt0.c0 AS TEXT)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN MIN(-9.5798492E8) THEN ((rt0.c4)IS NOT(vt1.c1)) END, GROUP_CONCAT('1013327378') OVER (), (((~ (0.7070036298147144)))>(json_object(vt1.c1, rt0.c3, vt1.c1, vt1.c1))) FROM rt0, vt1 WHERE (((LIKE(0.3241699246434979, 'fAꜼ'))>>(((('')) NOT BETWEEN (('1067777156')) AND (('-392145306'))))));SELECT ALL ((((vt1.c0) IS FALSE)) NOTNULL) FROM rt0, vt1 WHERE ((((('2011623860')-('405261775'))) BETWEEN (((x'') NOT BETWEEN (0.880373815396534) AND (0.274461182037257))) AND ((('-1744856275') IS TRUE)))) LIMIT 9223372036854775807; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) FROM rt0 WHERE (CASE WHEN ((((((((0xffffffff87548f30)OR('u')))OR('*E')))OR(NULL)))OR(x'')) THEN x'' COLLATE NOCASE WHEN 1425025481 COLLATE NOCASE THEN '' COLLATE BINARY WHEN ((((x'4ba6')AND(NULL)))OR('861939723')) THEN ((x'') IS TRUE) END); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), NULL, (('*p')<(CAST(vt1.c0 AS TEXT))) FROM vt1 WHERE ((((NULLIF(DISTINCT '', '1118094443')))<=((((((x'd477')AND(x'')))OR(NULL)))))); -- 0ms;
SELECT (CASE WHEN 0.32282569131239225 THEN vt1.c1 ELSE vt1.c1 END IN ()), '뇴בֿL//K', ((rt0.c1) NOTNULL) COLLATE NOCASE, ((((((((CHANGES())AND(((((((((rt0.c2)OR(rt0.c1)))OR(vt1.c0)))AND(vt1.c0)))OR('eD]rxlUTp')))))OR(vt1.c1 COLLATE BINARY)))AND(((rt0.c4)&(rt0.c3)))))OR((rt0.c0 IN ()))), CASE WHEN CHANGES() THEN MAX(vt1.c0) WHEN CASE WHEN rt0.c1 THEN rt0.c2 END THEN ((vt1.c1)=(vt1.c1)) WHEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN (vt1.c0 IN (rt0.c4)) WHEN (((((((('1995731236')AND(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(x'6f10016b')) THEN CASE vt1.c0  WHEN rt0.c3 THEN rt0.c2 END WHEN ((x'38ec')<<(rt0.c2)) THEN GROUP_CONCAT(0.24779304365677768) ELSE ((vt1.c0)GLOB(0x7ca26e54)) END FROM rt0 WHERE ((('' COLLATE RTRIM)/(CAST(x'' AS BLOB)))) ORDER BY CAST((~ (rt0.c2)) AS NUMERIC) ASC, rt0.c2  NULLS LAST;SELECT NULL FROM vt1 WHERE ((((('1345530585')-(-975637896))) NOT BETWEEN (CASE 0.17145810794839267  WHEN NULL THEN '732250332' ELSE '-606423446' END) AND (LIKELIHOOD(x'1e43', 0.7306868756503312)))); -- 0ms;
SELECT DISTINCT ((rt0.c2)||(rt0.c2)) FROM vt1, rt0 WHERE (UNLIKELY(DISTINCT GLOB(-1919550242, 0.024940348105163435))); -- 0ms;
SELECT CASE ((x'')GLOB(rt0.c4))  WHEN ((((((((((((vt1.c0)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c3)))OR(rt0.c1)))AND(rt0.c1)) THEN ((rt0.c2)=(rt0.c4)) END, ((((CAST(vt1.c1 AS INTEGER))OR(vt1.c1 COLLATE RTRIM)))AND(CASE WHEN rt0.c3 THEN rt0.c2 END)), SUM(((((rt0.c2)OR(rt0.c1)))AND(vt1.c1))) OVER () FROM vt1 WHERE (CASE (- ('-1679740745'))  WHEN ((((x'')OR('࿪9괓MM-㇏1')))AND('1197242072')) THEN '-604697532' END);SELECT DISTINCT LAG((- (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))), ((((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c0 END)OR(((rt0.c1)*(rt0.c4)))))AND(UNICODE(rt0.c3))), (((((rt0.c3))>=((rt0.c4)))) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c0))) AND (((((((((rt0.c4)AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4))))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0; -- 1ms;
SELECT ALL (((rt0.c4)) NOT BETWEEN ((TYPEOF(rt0.c0))) AND (((NOT (rt0.c2))))) FROM rt0 ORDER BY CASE WHEN ((vt1.c0)+(rt0.c2)) THEN ((rt0.c1)|(rt0.c2)) END DESC  NULLS LAST;SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE ((('-442139135' COLLATE RTRIM)GLOB(((NULL) NOTNULL)))); -- 0ms;
SELECT COUNT(((rt0.c4)LIKE(vt1.c0))) FILTER(WHERE ((CASE rt0.c1  WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c1 THEN vt1.c1 WHEN rt0.c0 THEN vt1.c0 END) ISNULL)) OVER () FROM vt1 WHERE (((((((0.7016720781816802)OR(NULL)))AND(NULL)))OR((~ (1.7283987E7)))));SELECT rt0.c1 COLLATE NOCASE FROM rt0 WHERE (CAST('s<T9jy&CP' AS BLOB)); -- 0ms;
SELECT MIN(CAST(rt0.c2 AS NUMERIC)) FROM vt1 WHERE (((NULL) NOT BETWEEN (((x'29e877f1') NOT BETWEEN (NULL) AND (-918977501))) AND ((('-860238510')*('-1758374542'))))) GROUP BY ']m';SELECT DISTINCT PERCENT_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING) FROM vt1, rt0 GROUP BY ((((((((((rt0.c3) BETWEEN (rt0.c0) AND (vt1.c0)))OR(((((((((NULL)OR(x'8086')))OR(rt0.c3)))OR(vt1.c0)))AND(rt0.c1)))))AND(rt0.c0)))OR(HEX(DISTINCT rt0.c3))))AND(((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)))), (rt0.c4 IN ()), ((((rt0.c0)IS NOT(rt0.c2))) ISNULL) HAVING ((CASE WHEN rt0.c4 THEN x'' END) NOTNULL); -- 0ms;
SELECT ALL LIKELIHOOD(CASE vt1.c0  WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 END, 0.9932960344037101), COUNT(*), ((CASE rt0.c2  WHEN vt1.c1 THEN rt0.c1 ELSE rt0.c3 END) IS FALSE) FROM vt1;SELECT DISTINCT CASE WHEN (rt0.c0 IN ()) THEN rt0.c0 COLLATE BINARY END FROM vt1, rt0 WHERE (((((240044252)AND('0.3241699246434979')))AND(NULL COLLATE BINARY))); -- 0ms;
SELECT ((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))<(((vt1.c1)<<(rt0.c3)))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT CAST(NULL AS REAL) FROM vt1 WHERE (((x'1fd7' COLLATE RTRIM)||((((0.8061917427173696, NULL, '-1005869913', '-780898326', NULL)) NOT BETWEEN ((NULL, 386483390, 153042101, NULL, 0.054808112317808244)) AND ((861967286, 0.5177990084091136, NULL, x'', -8.48956147E8)))))); -- 0ms;
SELECT (((rt0.c4)) NOT BETWEEN ((((vt1.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((- (rt0.c0))))) FROM vt1, rt0 WHERE ((((x'')||(NULL)) IN ())) LIMIT -599158865; -- 0ms;
SELECT DISTINCT ((((vt1.c1)AND(((rt0.c2) NOT NULL))))AND(((vt1.c1) IS TRUE))), ((NOT (rt0.c4)) IN ()), ((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c0 ELSE vt1.c1 END)AND(rt0.c1 COLLATE RTRIM)))OR(((rt0.c2)AND(rt0.c3)))), (((((+ (rt0.c2)))AND(CAST(rt0.c0 AS REAL))))AND(((('{8AAg'))<>((rt0.c1))))), ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((NOT (vt1.c1))) AND (((rt0.c1) NOTNULL))) FROM vt1 WHERE (((load_extension(NULL, 'Xl'))>>(TRIM(1856292733))));SELECT (((+ (rt0.c0))) BETWEEN (COUNT(*)) AND ((vt1.c1 IN ()))), ((((((((((rt0.c0) BETWEEN (vt1.c0) AND (rt0.c4)))AND(((x'')|(x'')))))AND(((vt1.c0)%(vt1.c0)))))AND(CAST(rt0.c3 AS INTEGER))))AND(((((((((((((rt0.c1)OR(x'8a62')))OR(rt0.c3)))OR(rt0.c3)))OR(rt0.c2)))OR(vt1.c0)))AND(rt0.c4)))), 1439024172 FROM vt1, rt0 WHERE (CAST('' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT ALL (((- (rt0.c4))) ISNULL), CAST(((rt0.c2)|(rt0.c2)) AS NUMERIC), (- (((vt1.c0) IS TRUE))) FROM rt0, vt1 GROUP BY (0Xffffffff835b9f04 IN ()); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((vt1.c0))==((vt1.c0)))), CASE rt0.c1 COLLATE BINARY  WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.7267296413251234) THEN ((vt1.c0) NOT NULL) END, CAST((((rt0.c0))>((rt0.c2))) AS INTEGER) FROM rt0, vt1; -- 1ms;
SELECT ((((rt0.c1) NOT NULL)) NOTNULL) FROM vt1;SELECT DISTINCT ((((((((rt0.c0)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c3)))AND(rt0.c4)) COLLATE RTRIM, ((NULL)AND(CAST(NULL AS BLOB))), CASE WHEN ((((vt1.c1)AND(rt0.c4)))AND(NULL)) THEN ((vt1.c1)IS NOT(rt0.c2)) ELSE IFNULL(rt0.c1, rt0.c0) END FROM vt1, rt0; -- 0ms;
SELECT DISTINCT ((((vt1.c1)>=(vt1.c1)))==((rt0.c3 IN (vt1.c0, vt1.c1)))) FROM vt1 WHERE (((((((('', 0.495605556140841, '!KT6BF')) BETWEEN ((NULL, NULL, '-1005869913')) AND ((NULL, 'Jf', NULL))))AND(((NULL)*(0X4753fb1d)))))OR(0Xffffffffdc8f7236 COLLATE BINARY)));SELECT COUNT(((((rt0.c3)AND(vt1.c1)))AND(rt0.c2))), NULLIF(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (NULL)), ((rt0.c4) IS TRUE)), TOTAL(((rt0.c0) IS TRUE)) OVER () FROM vt1 ORDER BY ((((((rt0.c1)AND(rt0.c3)))OR(rt0.c0))) BETWEEN (((rt0.c1) IS FALSE)) AND ((- (vt1.c1))))  NULLS LAST;SELECT ALL (~ (0.02351283140573668)) COLLATE BINARY, rt0.c1, (((((vt1.c1)OR(rt0.c0)))OR(vt1.c1)) IN (((((((((vt1.c0)AND(rt0.c3)))OR(vt1.c1)))OR(rt0.c3)))AND(rt0.c1)))) FROM vt1 WHERE (((TRIM(-1.308893469E9, '')) BETWEEN ((('-519992059') BETWEEN (NULL) AND (x''))) AND (852867032 COLLATE RTRIM)));SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c0 END) NOT BETWEEN ((('6435121320971908586') NOT BETWEEN (vt1.c1) AND (rt0.c1))) AND (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c1)))), (~ (((rt0.c2)<(vt1.c1)))), NULL COLLATE RTRIM, (((rt0.c3)) BETWEEN ((((rt0.c3) ISNULL))) AND (((NOT (rt0.c1))))), ((((rt0.c3)AND((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c2))))))OR(CAST(rt0.c4 AS BLOB))) FROM rt0 WHERE (SUBSTR(((('ihJ)gP')) BETWEEN ((-1482583907)) AND ((NULL))), 405261775 COLLATE NOCASE));SELECT ALL ((((((((rt0.c1 COLLATE BINARY)AND(vt1.c1)))AND(((vt1.c0)!=(rt0.c2)))))OR((((rt0.c3, rt0.c1, rt0.c1))>=((vt1.c1, rt0.c3, '0.8348342631786946'))))))OR(CAST(rt0.c0 AS REAL))) FROM vt1 WHERE ((- (NULL COLLATE RTRIM)));SELECT DISTINCT ((((vt1.c1) IS TRUE)) NOT NULL), CAST(((rt0.c4) IS FALSE) AS NUMERIC), RTRIM(((rt0.c3) BETWEEN (vt1.c1) AND (rt0.c4))) FROM rt0, vt1; -- 1ms;
SELECT DISTINCT rt0.c3 FROM vt1, rt0 GROUP BY ((rt0.c4) NOT BETWEEN (CAST(rt0.c2 AS INTEGER)) AND (rt0.c1)); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c2))>>('F9')) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS(rt0.c1))) NOT BETWEEN ((((rt0.c0))<=((rt0.c3)))) AND (CAST(rt0.c2 AS INTEGER))) FROM vt1 WHERE (CAST(0.48012979186434623 AS REAL));SELECT DISTINCT (((vt1.c1)AND(rt0.c2)) IN (MAX(rt0.c3))) FROM vt1, rt0; -- 0ms;
SELECT CASE ((rt0.c3) NOT BETWEEN (rt0.c3) AND (vt1.c0))  WHEN ((rt0.c1)LIKE(rt0.c0)) THEN (((rt0.c0))<=((rt0.c1))) ELSE NULL END, LAST_VALUE((+ ((vt1.c1 IN ())))) OVER (), (((rt0.c4 IN ())) BETWEEN ((NOT (vt1.c0))) AND (((rt0.c0) IS FALSE))), ((((((vt1.c1) NOTNULL))OR(((0.7349888211004206)|(0Xffffffffefd5f06a)))))OR(((rt0.c1)GLOB(x'145a5b52')))), ((((rt0.c2) IS FALSE))GLOB(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c1 WHEN vt1.c0 THEN vt1.c1 WHEN rt0.c2 THEN rt0.c2 END)) FROM vt1;SELECT MIN(CAST(rt0.c0 AS NUMERIC)) FROM vt1 WHERE ((((('DNF8|%')>>('^gw+*?(')))!=(((0.45451548761455374)*('^N'))))) ORDER BY ((((vt1.c1) IS TRUE))%((NOT (vt1.c1)))) ASC, (~ (((rt0.c4)-(rt0.c4)))) ASC  NULLS FIRST;SELECT ALL 0.6293422739293169 FROM rt0 WHERE ((((((NULL, x'', '')) BETWEEN (('-1958644348', NULL, 0Xffffffffe560d654)) AND (('', 0.09904308364282932, 0.8199146477585645))))>(CAST('272541500' AS BLOB)))) ORDER BY (((((((((+ (rt0.c2)))AND((+ (NULL)))))OR(((vt1.c1)IS NOT(rt0.c2)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('1451933642'))))))AND(((((rt0.c0)OR(vt1.c0)))AND('767169094')))) DESC  NULLS LAST;SELECT DISTINCT ((((((((((0.7270532942674045)>>(vt1.c0)))AND(((vt1.c0) BETWEEN (NULL) AND (vt1.c1)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c1)))))AND((- (rt0.c1)))))AND(LOWER(DISTINCT rt0.c3))) FROM vt1, rt0 WHERE ((+ (0xffffffff82b3d5f2))); -- 0ms;
SELECT DISTINCT CASE x''  WHEN SUM(vt1.c1) THEN (('692971589')LIKE(vt1.c0)) END FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((SUM(vt1.c0))IS NOT(((0.8059326163671757) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM vt1 WHERE ((((NULL IN ())) IS TRUE));SELECT DISTINCT AVG(((rt0.c4) NOT BETWEEN (rt0.c2) AND (vt1.c1))) OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT '-475635569' FROM vt1, rt0 WHERE ((CAST(0Xffffffffae08b12f AS REAL) IN ())); -- 0ms;
SELECT COUNT(*) FROM rt0, vt1 WHERE (((((((0.24975287428463722)AND('-565195246')))OR(0.5687367476353081)))*(DATETIME(x'83c9', 0.03824027530169094, x'')))); -- 0ms;
SELECT DISTINCT json_insert((rt0.c2 IN (NULL)), ((rt0.c2)==(vt1.c0)), (NULL IN ())), json_remove(((rt0.c3)AND(rt0.c2)), AVG(rt0.c4), CAST(rt0.c2 AS NUMERIC), ((rt0.c2)-(NULL))), vt1.c0 FROM rt0, vt1;SELECT ((vt1.c1) NOTNULL) FROM vt1, rt0 WHERE (((CASE WHEN x'' THEN 0.23077906637631518 END) BETWEEN (((NULL) BETWEEN (NULL) AND ('}(/T'))) AND (x'' COLLATE NOCASE))) LIMIT 2074591993 OFFSET 1798205856; -- 0ms;
SELECT ALL ((((vt1.c0) ISNULL))-(0.7160786060854816)) FROM rt0;SELECT ALL ('⿌^g1X' IN ()) FROM vt1, rt0 WHERE ((NOT (((x'91d8')<=(x''))))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)|(rt0.c3)) AS BLOB) FROM vt1, rt0; -- 0ms;
SELECT ALL IFNULL(DISTINCT ((rt0.c4) BETWEEN (rt0.c2) AND (vt1.c0)), (~ (vt1.c1))) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c0)IS NOT(rt0.c4)))>=(rt0.c0 COLLATE BINARY)) FROM rt0, vt1 WHERE ((~ (CASE WHEN 0Xfffffffff9ae7dad THEN -626505413 ELSE 0X1ed082e2 END))) ORDER BY ((x'')>=(((rt0.c1) ISNULL))) DESC; -- 0ms;
SELECT DISTINCT x'' FROM rt0 GROUP BY (((- (rt0.c1)))IS(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))), 0.8225493323468984, (((rt0.c0)>=(vt1.c0)) IN ()); -- 0ms;
SELECT ALL CAST(CAST(rt0.c1 AS TEXT) AS REAL) FROM vt1, rt0 WHERE (CAST((NULL IN ()) AS REAL)); -- 0ms;
SELECT CAST(0.12077553808215258 AS BLOB) FROM vt1; -- 0ms;
SELECT DISTINCT ((((((rt0.c2) BETWEEN (vt1.c1) AND (NULL)))OR(MIN(rt0.c0))))OR('873284059')) FROM rt0;SELECT (- (CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END)) FROM vt1, rt0 WHERE (((((((((CAST('-1219295752' AS BLOB))OR((((NULL)) BETWEEN ((NULL)) AND (('1995731236'))))))OR(CAST(-1.06005075E8 AS INTEGER))))OR((- ('-1353487660')))))OR(((NULL) NOT BETWEEN ('0.9722564872615749') AND (0xffffffffa8f59c0c))))); -- 0ms;
SELECT HEX(DISTINCT (rt0.c2 IN ())), (((rt0.c2)) BETWEEN ((x'')) AND ((((vt1.c1)%(rt0.c2))))), COUNT(*) OVER () FROM vt1 WHERE ((((((((((((((((x'')OR(0X44d05f40)))AND('1496804178')))OR(NULL)))AND(']R%')))OR(NULL)))OR(0.020683525387732882))))>((((NULL)>(NULL)))))) GROUP BY (((rt0.c4)||(rt0.c0)) IN ()) HAVING rt0.c1 ORDER BY (((((((((((vt1.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))AND(((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c2)))))OR(((((vt1.c1)OR(rt0.c2)))OR(vt1.c1)))))OR(((rt0.c0) ISNULL))))OR((~ (vt1.c0)))) ASC, rt0.c0;SELECT DISTINCT LAST_VALUE((((((rt0.c1) BETWEEN ('rH#33k-u') AND (rt0.c1)), CAST(rt0.c0 AS TEXT), ((rt0.c4) BETWEEN (vt1.c0) AND (rt0.c1))))>((((vt1.c0)LIKE(vt1.c1)), json_quote(vt1.c0), (- (rt0.c2)))))) OVER () FROM vt1, rt0;SELECT DISTINCT ((((rt0.c3)IS NOT(rt0.c4)))&(LIKELIHOOD(DISTINCT rt0.c4, 0.048730697390483746))) FROM vt1 INTERSECT SELECT ALL NTILE(((((((((((('1箸')AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c3))))>((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)))) OVER () FROM rt0 ORDER BY ((((((((rt0.c1)OR(((vt1.c1) IS FALSE))))OR(vt1.c1 COLLATE NOCASE)))OR((((rt0.c3)) BETWEEN ((vt1.c1)) AND ((rt0.c1))))))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c4)))) ASC  NULLS LAST;SELECT DISTINCT UPPER(DISTINCT x''), (+ (((rt0.c4)%(rt0.c0)))), ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))) NOTNULL) FROM vt1, rt0 WHERE ((((NOT (x'fb09'))) NOT NULL)); -- 0ms;
SELECT CASE WHEN (+ (rt0.c4)) THEN ((((((((rt0.c1)AND(vt1.c0)))AND('t2P''lT~/&')))OR(vt1.c0)))OR(rt0.c4)) ELSE (vt1.c1 IN (rt0.c0)) END, ((((((((rt0.c3)AND(((-1372912933)LIKE(rt0.c0)))))OR(NULLIF(DISTINCT rt0.c4, rt0.c4))))AND((((vt1.c0))<=((rt0.c3))))))AND(((rt0.c3) NOT BETWEEN (0.9357545829454362) AND (rt0.c4)))), (- ((- (rt0.c4)))) FROM vt1, rt0 WHERE (((IFNULL(0.6107821628838758, 0X407210cd)) NOT BETWEEN (CAST(175469165 AS NUMERIC)) AND ((((('352369753')AND(0.01591803778407841)))OR(-1.616527271E9))))); -- 0ms;
SELECT DISTINCT (vt1.c0 COLLATE NOCASE IN (((x'')/(rt0.c0)))) FROM vt1, rt0 EXCEPT SELECT CASE WHEN 0.8404192305152784 THEN (((rt0.c0)) NOT BETWEEN ((vt1.c1)) AND ((vt1.c0))) WHEN ((rt0.c3)IS(x'')) THEN (- ('')) WHEN ((vt1.c0) ISNULL) THEN x'' ELSE ((rt0.c3)>>(rt0.c2)) END FROM vt1, rt0 WHERE (CASE NULL  WHEN CAST(NULL AS NUMERIC) THEN LOWER('386483390') END) GROUP BY ((((TRIM(rt0.c2, rt0.c2))OR(LIKELY(rt0.c2))))OR((~ (vt1.c1)))) ORDER BY ((0.9279111918051056)%(((((rt0.c2)AND(rt0.c0)))AND(rt0.c1))))  NULLS LAST;SELECT ALL CAST(((vt1.c1) BETWEEN ('0.6886863551965856') AND (rt0.c4)) AS NUMERIC) FROM vt1;SELECT DISTINCT CASE (NOT (rt0.c4))  WHEN ((rt0.c1)!=(vt1.c1)) THEN ((vt1.c1)>=(rt0.c3)) END, CASE WHEN ((rt0.c0) BETWEEN (0X49ead13) AND (vt1.c0)) THEN (NOT (rt0.c4)) ELSE TOTAL('') END, ((CASE '!ZR^gJ'  WHEN NULL THEN vt1.c0 END)GLOB('')), CASE ((rt0.c1)LIKE(rt0.c4))  WHEN ((rt0.c0)-(NULL)) THEN '矙U+\n_b]B,' END, ((((rt0.c3)AND(COUNT(NULL))))AND(x'')) FROM vt1, rt0 WHERE (((CASE WHEN 'UQnp<<' THEN 1127688502 END)OR((('')>>(''))))); -- 0ms;
SELECT ALL (SUM(rt0.c4) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM vt1;SELECT ALL ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c3)))AND((rt0.c1 IN (x'', rt0.c0)))))AND(rt0.c4 COLLATE BINARY)) FROM vt1 WHERE (CASE WHEN (NOT ('')) THEN (- (NULL)) WHEN (~ (NULL)) THEN (((1248104874, -2.19169871E8, '')) BETWEEN ((x'd1e8', 0.34957246780936524, x'')) AND ((x'', x'2086', 0X724ce1d))) WHEN ((((-860238510)OR(x'')))OR('-1954893428')) THEN '138792258' COLLATE NOCASE ELSE ((x'') BETWEEN ('xB\n5y') AND (x'123fd21c')) END) LIMIT -1550330146 OFFSET -974392311;SELECT LEAD(((((-26814200)*(rt0.c1))) IS FALSE), x'b252', (((rt0.c4 COLLATE NOCASE))=((1932435840)))) OVER () FROM vt1, rt0 WHERE (CASE WHEN ((('0.7479621292495546'))<>(('-392145306'))) THEN CASE x'bd81'  WHEN -1054494663 THEN 0X433b95fa ELSE 0Xffffffffd2aa27ec END WHEN (- (0.00848805224968563)) THEN 991960355 COLLATE RTRIM WHEN ((NULL) ISNULL) THEN CASE WHEN '0.495605556140841' THEN x'db34' END ELSE (('1127978490') IS FALSE) END); -- 1ms;
SELECT DISTINCT (((rt0.c2 IN ()))GLOB(rt0.c3)) FROM vt1 NOT INDEXED, rt0 LIMIT -213262436; -- 0ms;
SELECT ALL vt1.c1, (vt1.c0 IN ()), ((IFNULL(rt0.c0, vt1.c0))*(TRIM(rt0.c2))) FROM rt0 WHERE ((((CAST(NULL AS INTEGER), TYPEOF('-861947400'), x'' COLLATE BINARY))<>((((-1586595802)|(NULL)), ((NULL) NOT NULL), ((5.65549885E8) NOT NULL)))));SELECT x'' FROM rt0, vt1 WHERE (((IFNULL(x'', 0.5225452521982447)) NOT NULL)); -- 0ms;
SELECT (rt0.c2 IN (TYPEOF(rt0.c0))) FROM vt1 LIMIT 1549422126 OFFSET 565549885;SELECT (((((((rt0.c4)) BETWEEN ((0.5584154780183179)) AND ((rt0.c3))))AND(((rt0.c3)GLOB(vt1.c0)))))OR(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3)))) FROM rt0, vt1 WHERE ((((x'' IN ()))LIKE((((('0.6823281485240463')AND(x'2f9a')))AND(NULL))))); -- 0ms;
SELECT ALL FIRST_VALUE(vt1.c1) OVER () FROM vt1 WHERE (((COALESCE(0.013557363201502914, '-392145306'))-(((x'') ISNULL)))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c2)&(rt0.c3))), rt0.c4, TRIM(DISTINCT vt1.c0 COLLATE RTRIM) FROM vt1;SELECT DISTINCT (+ (CASE WHEN vt1.c0 THEN rt0.c0 END)), COUNT(CASE WHEN rt0.c4 THEN vt1.c0 END), SUM(CAST('-1308893469' AS INTEGER)) FROM vt1;SELECT (~ ((((rt0.c4))!=((rt0.c3))))) FROM vt1;SELECT ALL (((((vt1.c0)AND(vt1.c1)))AND('gj')) IN ()) FROM rt0, vt1 WHERE (CAST(((x'') IS TRUE) AS INTEGER)) ORDER BY CAST(0.28981498286599294 AS TEXT) ASC  NULLS LAST, (((rt0.c2 IN ()))AND(((vt1.c0)>>(rt0.c2))))  NULLS FIRST, ((vt1.c1)<<(rt0.c3)) COLLATE BINARY DESC  NULLS FIRST;SELECT DISTINCT json_remove(vt1.c1, vt1.c0) COLLATE BINARY FROM vt1, rt0 WHERE (rtreenode(((0.1559315942362718) IS FALSE), ((NULL)LIKE(NULL)))); -- 0ms;
SELECT rt0.c4 FROM rt0 WHERE ((((-954249264)/(x'')) IN (0.1130408667740761))); -- 0ms;
SELECT ALL COUNT(0.05614824058427348) FILTER(WHERE CASE rt0.c0  WHEN rt0.c4 THEN rt0.c4 END COLLATE BINARY) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND (((((vt1.c1))<((rt0.c3)))))) FROM vt1 WHERE (((0.35082799916109153 COLLATE NOCASE)>((((1603108443, 0.8039488930522013, 'I	[D')) NOT BETWEEN ((0x7fffffffffffffff, ' 5', NULL)) AND ((NULL, 'ڟ{v0搬GvT', NULL)))))) GROUP BY ((((CASE WHEN rt0.c3 THEN vt1.c0 ELSE rt0.c3 END)AND(CAST(rt0.c1 AS NUMERIC))))AND(((rt0.c3)!=(rt0.c4)))) ORDER BY 0Xffffffffd56fb6b8;SELECT DISTINCT CASE CASE 0.2074673363134225  WHEN vt1.c1 THEN rt0.c1 END  WHEN x'' THEN ((((((((((((rt0.c3)AND(vt1.c0)))OR(rt0.c0)))AND(vt1.c1)))AND(rt0.c0)))AND(rt0.c2)))AND(rt0.c1)) WHEN vt1.c1 THEN DATETIME(rt0.c4, vt1.c0, rt0.c4, rt0.c0, rt0.c1) WHEN ((rt0.c1)IS(rt0.c4)) THEN SUM(rt0.c0) END, ((rt0.c4 IN ()) IN (((((vt1.c1)OR(vt1.c0)))OR(rt0.c2)))), ((CAST(rt0.c2 AS TEXT)) NOT NULL) FROM rt0, vt1 WHERE ((((NOT ('Aqa겥}&w'))) ISNULL)); -- 0ms;
