-- Time: 2024/06/07 21:51:54
-- Database: database47
-- Database version: 3.40.0
-- seed value: 4184852147
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, tokenize = "unicode61 tokenchars '{V0b9%r#' separators 'x#⢘yl	9F'"); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0Xffffffffbd972898; -- 0ms;
PRAGMA temp.threads = -2856218876770673273; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0); -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 14ms;
UPDATE OR IGNORE vt0 SET c0='{V0b9%r#', c0='p⢘?~b?d' WHERE (((vt0.c0)) BETWEEN ((((((((((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND('⢘u')))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c0)))) AND ((((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c0)))OR(vt0.c0))))); -- 1ms;
UPDATE vt0 SET (c0)=(0.9163445908623956); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.5825265083751242), (3.78596062E8), (3.78596062E8), ('?e7{Sv'), (x''); -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0=NULL; -- 0ms;
UPDATE OR ABORT vt0 SET (c0)=(NULL) WHERE vt0.c0; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.15255033113791772, c0=x'', c0='/G' WHERE (((vt0.c0)<=(vt0.c0)) IN (x'')); -- 0ms;
ANALYZE main; -- 6ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 12); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES (x'5db9'); -- 1ms;
ANALYZE main; -- 1ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (0.5825265083751242); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2124510544); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
CREATE TEMP VIEW v0(c0, c1, c2) AS SELECT DISTINCT x'3307', vt0.c0, ((vt0.c0)OR(vt0.c0)) COLLATE RTRIM FROM vt0 GROUP BY vt0.c0 HAVING ((vt0.c0)%(vt0.c0)) COLLATE RTRIM; -- 0ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES ('462567098'); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '63574'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO vt0 VALUES (NULL), (NULL), ('oQq\'); -- 1ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL); -- 0ms;
UPDATE vt0 SET c0=0.2413870814334197, c0=x'' WHERE x''; -- 0ms;
UPDATE OR FAIL vt0 SET c0='1898233081' WHERE ((~ (vt0.c0)) IN ()); -- 0ms;
UPDATE OR REPLACE vt0 SET (c0)=('462567098') WHERE ((((vt0.c0)IS NOT(vt0.c0)))+(((vt0.c0) NOT NULL))); -- 0ms;
ANALYZE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 8ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
ANALYZE; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 529970637); -- 0ms;
ANALYZE main; -- 6ms;
PRAGMA temp.ignore_check_constraints; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x''); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (((CASE '462567098'  WHEN NULL THEN x'' ELSE 473973307 END) NOT BETWEEN ((((('&s㚺\rp')AND('-2109540988')))OR('\W3/[u*'))) AND (x'' COLLATE RTRIM))), ('x#⢘yl	9F'), (-1922380066); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '50020'); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('䈻'); -- 1ms;
ANALYZE; -- 1ms;
ANALYZE main; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 INSTEAD OF DELETE ON v0 FOR EACH ROW  WHEN v0.c0 BEGIN UPDATE OR REPLACE vt0 SET c0='' WHERE CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END COLLATE BINARY;END; -- 1ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.15255033113791772; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'140c', c0=x'4cf6', c0=0X1c40423b WHERE ABS(DISTINCT ((((vt0.c0)AND(vt0.c0)))AND(vt0.c0))); -- 1ms;
UPDATE OR IGNORE vt0 SET c0=0xffffffff9b615103, c0='sgFO)!Nn' WHERE TRIM(((x'') NOTNULL)); -- 8ms;
DELETE FROM vt0; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 14ms;
UPDATE OR IGNORE vt0 SET (c0)=('-25923900'); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 148324786); -- 12ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=13'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 13); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE rt0 SET (c1)=('-1688121085') WHERE (((rt0.c0 IN ()))>(rt0.c1 COLLATE NOCASE)); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (x''), (-1745118285), (0.28398292038547346), (0.6889770170054847), (NULL); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', 1076123208);\n; -- 1ms;
INSERT OR IGNORE INTO vt0 VALUES ('534817150'); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=('', '	2') WHERE (((x'')) BETWEEN ((((vt0.c0)IS NOT(vt0.c0)))) AND ((((vt0.c0)<>(x''))))); -- 0ms;
PRAGMA main.default_cache_size; -- 0ms;
PRAGMA main.journal_mode = DELETE; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('''㚺<\r뛨V') WHERE ((json_type(vt0.c0)) NOT NULL); -- 0ms;
UPDATE vt0 SET c0=x'fc0b', c0=667880206, c0=NULL; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ANALYZE main; -- 1ms;
UPDATE rt0 SET c1='-1688121085'; -- 0ms;
PRAGMA incremental_vacuum(-2097609745); -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (0.15255033113791772), (0xfffffffffc06df28), ('-2044415691'); -- 0ms;
INSERT OR REPLACE INTO vt0 VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA main.default_cache_size = 218994481; -- 0ms;
PRAGMA temp.cache_size = -955454061154653179; -- 0ms;
INSERT OR REPLACE INTO vt0(c0) VALUES ('帡m#\n'); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
UPDATE vt0 SET c0=NULL WHERE ((((vt0.c0)AND(((0.5993714164893154)%(vt0.c0)))))AND(vt0.c0 COLLATE BINARY)); -- 0ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 15); -- 0ms;
ROLLBACK TRANSACTION; -- 17ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (''); -- 8ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '32870'); -- 0ms;
PRAGMA checkpoint_fullfsync = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 319703335); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES ('	uWhn&pF/'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-1114167144,8');\n; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 420817388); -- 0ms;
ANALYZE; -- 0ms;
VACUUM main; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(x'', x'') WHERE IFNULL(DISTINCT vt0.c0, (((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c0, -25923900)) AND ((vt0.c0, vt0.c0, vt0.c0)))); -- 8ms;
UPDATE OR IGNORE vt0 SET c0=0.479092272969763; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT CAST(UNLIKELY(v0.c1) AS REAL), ((((0.17608029717488716)AND(vt0.c0)))AND(((x'e4ae2e3e') NOT BETWEEN (v0.c2) AND (v0.c2)))), CASE WHEN v0.c2 THEN v0.c1 END COLLATE RTRIM, MIN(((((v0.c1)AND(vt0.c0)))OR(v0.c1))), x'' FROM v0, vt0 WHERE (((((((((((NULL)AND(0.5825265083751242)))AND(0Xffffffff9b615103)))OR(NULL)))OR('-1114167144')))+(CASE WHEN '-314842707' THEN '-1688121085' ELSE 1628000019 END))); -- 0ms;
SELECT DISTINCT (((v0.c2 IN ())) NOT BETWEEN (vt0.c0 COLLATE RTRIM) AND (SUM(v0.c1))) FROM v0, vt0 ORDER BY (+ ((v0.c2 IN ()))) DESC  NULLS FIRST LIMIT 534817150 OFFSET -1114167144; -- 7ms;
SELECT ALL -679559237 FROM vt0, v0; -- 0ms;
SELECT (+ (((((v0.c0)OR(v0.c0)))OR('462567098')))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0, vt0; -- 1ms;
SELECT DISTINCT HEX((((v0.c0, v0.c2, v0.c1)) NOT BETWEEN ((vt0.c0, v0.c0, v0.c1)) AND ((v0.c0, v0.c1, v0.c1)))), v0.c0, (((MAX(v0.c0)))<=((((((v0.c0)OR(v0.c0)))AND(v0.c0))))), CASE WHEN CAST(v0.c1 AS TEXT) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c1 END ELSE '/G' END, ((((v0.c2)%(v0.c1)))>=(LIKELIHOOD(v0.c0, 0.5240016852175489))) FROM v0, vt0 GROUP BY ((v0.c2) NOTNULL) COLLATE RTRIM, ((CASE v0.c0  WHEN vt0.c0 THEN ' 垂-.Ty' WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c1 ELSE NULL END) NOT BETWEEN (((v0.c0) NOT BETWEEN (v0.c1) AND ('Mo'))) AND ((('138757221') BETWEEN (v0.c1) AND (v0.c1)))), ((((((v0.c0, '25139977', vt0.c0)) BETWEEN ((v0.c1, v0.c2, v0.c0)) AND ((v0.c0, v0.c0, '0.17608029717488716'))), (- (NULL)), (vt0.c0 IN (v0.c1))))>((((((v0.c0)OR(v0.c1)))OR(vt0.c0)), (vt0.c0 IN ()), v0.c1))), CASE v0.c2 COLLATE NOCASE  WHEN 0x40245648 THEN ((v0.c1)IS(v0.c2)) ELSE CAST(v0.c2 AS REAL) END, (((v0.c1, v0.c0, 4.73973307E8)) BETWEEN ((((v0.c1)==(v0.c1)), (((v0.c1)) BETWEEN ((v0.c2)) AND ((v0.c1))), ((v0.c1)|(v0.c1)))) AND (((((x'3430', v0.c0, v0.c1))>((v0.c2, v0.c1, v0.c0))), v0.c1, ((v0.c1)IS(vt0.c0))))) HAVING CAST(CASE WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END AS REAL); -- 0ms;
SELECT v0.c1 FROM v0, vt0 LIMIT -679559237; -- 0ms;
SELECT (((v0.c0)OR(v0.c1)) IN ()), CAST(v0.c2 AS TEXT) COLLATE BINARY, ((0.8671568984538661) BETWEEN ((x'' IN (v0.c0))) AND (((v0.c2)>>(v0.c0)))), v0.c2, 0Xffffffffb0df8b2b FROM v0, vt0 WHERE (((((UNLIKELY(x''))AND(((0.39430711531705553)OR(x'')))))OR(CASE WHEN 0.06242630347021638 THEN 0.06242630347021638 WHEN x'' THEN '1622041066' WHEN '' THEN '350709010' ELSE NULL END))); -- 0ms;
SELECT DISTINCT ((vt0.c0)AND(v0.c0)) COLLATE NOCASE, (((((('0#\') IS FALSE))AND(COUNT(*))))AND(((v0.c1) NOT NULL))), (((vt0.c0, vt0.c0, v0.c0)) BETWEEN (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))), TIME(v0.c2, vt0.c0, v0.c0), CASE WHEN vt0.c0 THEN v0.c2 END)) AND ((COUNT(*), (- (v0.c2)), CASE v0.c0  WHEN '378596062' THEN '75' ELSE v0.c0 END))) FROM v0 WHERE (((((GLOB('!龨', 'a%'))AND((+ (0.6033439545110014)))))OR('b1N]')));SELECT CAST(GROUP_CONCAT(vt0.c0) AS NUMERIC) FROM vt0 GROUP BY CASE WHEN SQLITE_VERSION() THEN ((v0.c0)>=(v0.c0)) END HAVING v0.c1 ORDER BY (~ (v0.c1)) ASC  NULLS FIRST;SELECT MIN(v0.c1), COUNT(CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END), ((CAST(v0.c2 AS BLOB)) NOT NULL) FROM v0, vt0 GROUP BY SUBSTR(vt0.c0, ((v0.c2) NOT NULL)), (((NOT (v0.c1))) BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((- (v0.c1)))), ((((((((((v0.c2)AND(vt0.c0)))AND(NULL)))OR(v0.c2)))OR(v0.c1))) NOT BETWEEN (((v0.c0)>>(v0.c2))) AND (((vt0.c0) IS FALSE))) HAVING HEX(CAST('-1730948072' AS BLOB)); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0))>=((v0.c2))) AS TEXT) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((v0.c2 COLLATE NOCASE)LIKE((~ (vt0.c0)))) FROM vt0, v0 WHERE ((((((NULL)) NOT BETWEEN ((0Xffffffffac15b30a)) AND ((0.9673380515542377))))<(CASE WHEN 0.555543614521267 THEN NULL WHEN '' THEN '' WHEN 0.03631326918731537 THEN '' END))); -- 0ms;
SELECT DISTINCT (((((v0.c1)|(v0.c2)), ((x'') NOT BETWEEN (v0.c1) AND (vt0.c0)), ((-464748432)=(v0.c1))))<((NULL, x'', (vt0.c0 IN ())))), ((((((((COUNT(*))OR(CASE WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END)))AND(v0.c1)))OR('1880923169')))OR('138757221')), (((v0.c2)) BETWEEN ((((((vt0.c0)AND(v0.c2)))AND(v0.c1)))) AND ((NULL))) FROM v0, vt0; -- 0ms;
SELECT ALL ((((COUNT(*))AND((~ (0.04226871065954896)))))AND(((v0.c1)LIKE(v0.c1)))), ((((v0.c2 IN ())))<=(((+ (v0.c1))))), CAST(((((v0.c0)AND(v0.c0)))AND(v0.c0)) AS NUMERIC) FROM v0, vt0 WHERE (CASE x'c554'  WHEN LIKELY(DISTINCT x'') THEN CASE WHEN 0.28398292038547346 THEN x'' WHEN x'da28' THEN '' WHEN x'' THEN NULL WHEN '1628000019' THEN NULL WHEN '778347586' THEN x'' END ELSE CAST(-1.407864054E9 AS NUMERIC) END); -- 1ms;
SELECT ALL (CASE v0.c0  WHEN v0.c0 THEN v0.c1 END IN ()), ((CAST(v0.c1 AS REAL))>(CAST('669466556' AS NUMERIC))), ((((((vt0.c0)-(vt0.c0)))OR((((v0.c0))!=((v0.c1))))))AND(((vt0.c0) BETWEEN (vt0.c0) AND (0.03631326918731537)))) FROM vt0;SELECT DISTINCT (((vt0.c0, v0.c0 COLLATE NOCASE, GROUP_CONCAT(vt0.c0)))>((((v0.c0) IS TRUE), ((((((((((((v0.c0)OR(v0.c0)))OR(v0.c2)))AND(v0.c2)))OR(v0.c1)))OR(v0.c2)))AND('0.6033439545110014')), ((v0.c0)+(v0.c0))))) FROM v0 WHERE (CASE WHEN ((x'') BETWEEN (0.6342737516911353) AND (x'')) THEN (- (NULL)) ELSE ((-332818261) BETWEEN (0Xffffffffec2998ab) AND (0.6654469131992168)) END) LIMIT 37651451 OFFSET -1607023193;SELECT DISTINCT (+ (MAX(v0.c0))) FROM vt0;SELECT DISTINCT CASE WHEN ((v0.c2) ISNULL) THEN (((v0.c1, v0.c1, v0.c1)) NOT BETWEEN ((v0.c2, v0.c0, vt0.c0)) AND ((vt0.c0, v0.c1, v0.c0))) ELSE ((vt0.c0)==(v0.c2)) END, ((((((v0.c0))<((v0.c2)))))>(((v0.c0 IN ())))), (((((vt0.c0))!=((v0.c1)))) NOTNULL) FROM vt0, v0 WHERE (((((NULL)>=('-1448628715'))) NOT NULL)) ORDER BY (vt0.c0 COLLATE NOCASE IN ()); -- 0ms;
SELECT DISTINCT ('twp1' IN ((((vt0.c0))>((''))))) FROM v0, vt0 GROUP BY CAST((((v0.c2))=(('1#x'))) AS REAL); -- 0ms;
SELECT DISTINCT ((((v0.c0 COLLATE NOCASE)AND(CAST(vt0.c0 AS TEXT))))OR(RTRIM(NULL))) FROM vt0, v0 WHERE ((((0.5047788311764811, 0Xd0d9731, '1628000019')) NOT BETWEEN ((IFNULL('', '1133111027'), ((NULL)IS('mo')), CAST(-415580487 AS TEXT))) AND (((0.6033439545110014 IN ('50293')), x'' COLLATE RTRIM, ((((x'')AND(x'')))AND(NULL)))))) LIMIT -2109540988 OFFSET 537614472; -- 0ms;
SELECT ALL IFNULL(v0.c1 COLLATE BINARY, CASE WHEN 0.7894617845827744 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END) FROM vt0;SELECT DISTINCT (v0.c0 COLLATE NOCASE IN ()) FROM vt0 WHERE (((((~ (0.555543614521267))))<>((((0x734ed93a) NOT BETWEEN (NULL) AND ('')))))); -- 0ms;
SELECT v0.c2 FROM vt0 WHERE (CASE (('667880206')==(NULL))  WHEN ((('䈻')) BETWEEN ((NULL)) AND (('-872495835'))) THEN ((NULL)OR(NULL)) END);SELECT '*w^' FROM vt0, v0; -- 0ms;
SELECT ((GROUP_CONCAT(vt0.c0))/(v0.c1)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT x'', (((GROUP_CONCAT(v0.c2)))!=((v0.c0 COLLATE BINARY))), (((v0.c1) BETWEEN (v0.c0) AND (v0.c1)) IN ()) FROM v0 ORDER BY ((x'') BETWEEN (((v0.c1)LIKE(vt0.c0))) AND (((v0.c2)|(v0.c0)))), x'' DESC;SELECT ALL DENSE_RANK() OVER ( PARTITION BY v0.c1, v0.c1), ((((vt0.c0)+(v0.c1)))IS(((vt0.c0)%(v0.c1)))), v0.c2 FROM vt0, v0; -- 0ms;
SELECT AVG(((v0.c0) NOTNULL)) OVER () FROM v0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0, ((-696288752)=(CASE WHEN v0.c1 THEN v0.c2 END)), ((((((((((v0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(219967748)))OR(v0.c2)))GLOB((vt0.c0 IN ()))) FROM vt0;SELECT ALL (((COALESCE(v0.c0, v0.c1, v0.c1, v0.c0), CAST(v0.c1 AS REAL), 0.6380121955673655))<((CAST(v0.c2 AS BLOB), CASE WHEN v0.c2 THEN v0.c0 END, 0.6380121955673655))), (((vt0.c0)+(v0.c2)) IN ()), SUM((NOT (v0.c2))) OVER () FROM v0, vt0 WHERE (((((((((((NULL) NOTNULL))OR(((0.961683278881016)<(0.4333879271218424)))))AND((((x'')) BETWEEN ((NULL)) AND ((350709010))))))AND(CASE 0.5297198617498406  WHEN 'C3' THEN 0.24427398550704038 WHEN 0.2413870814334197 THEN 0.6080618714764395 WHEN 0.7182958587100269 THEN '-1e500' END)))OR(CASE WHEN NULL THEN '1833275376' ELSE ']嚈' END))); -- 0ms;
SELECT ALL (((((' 垂-.ty', vt0.c0, v0.c2))>((v0.c0, v0.c2, v0.c0))))/(((v0.c1)>>(v0.c1)))) FROM v0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((v0.c1, vt0.c0, v0.c2)) NOT BETWEEN ((((v0.c2)OR(vt0.c0)), GROUP_CONCAT(NULL), QUOTE(v0.c0))) AND ((AVG(v0.c0), v0.c1 COLLATE RTRIM, (v0.c0 IN ('350709010'))))) FROM v0 WHERE (CASE WHEN (x'' IN (x'', NULL)) THEN (~ (0.6380121955673655)) WHEN COALESCE(DISTINCT 0.08404371894056273, '-1394377992') THEN CAST(0.7407368051718696 AS REAL) WHEN 0.8061468796246387 COLLATE NOCASE THEN (+ ('76024611')) END);SELECT DISTINCT ((CAST(x'' AS TEXT)) BETWEEN (((v0.c1)>(v0.c1))) AND ((NOT (v0.c1)))), ((((((((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c1)))OR(CAST(v0.c0 AS TEXT))))AND(((v0.c0) IS FALSE))))AND((+ (v0.c1)))))AND(0.9972619933055115)), (-1607023193 COLLATE RTRIM IN ()), (((vt0.c0, v0.c1, v0.c0))>((vt0.c0, v0.c0, v0.c1))) COLLATE BINARY, CASE ('' IN (v0.c0))  WHEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((v0.c2))) THEN CHANGES() END FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((1.898233081E9)) NOT BETWEEN ((MAX(v0.c2))) AND ((((v0.c1)|(v0.c0))))) FROM vt0, v0 WHERE ((~ (((-8.72495835E8)<=('0.7182958587100269'))))) ORDER BY ((((((((((v0.c1)IS(v0.c1)))AND((v0.c2 IN (v0.c0)))))AND(((((((((vt0.c0)AND(x'8972')))AND(v0.c2)))AND(v0.c1)))OR(v0.c0)))))AND((((v0.c2))<((vt0.c0))))))OR(((0.20730012489894023) NOT NULL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((v0.c1, v0.c1, v0.c0)) BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c2, v0.c0, v0.c1))))IS(CAST(vt0.c0 AS INTEGER))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT TRIM(((v0.c2) NOT NULL)) FROM v0, vt0 GROUP BY (((vt0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)) IN ()), CASE WHEN ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) THEN CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 ELSE v0.c2 END END, (((NULL)) NOT BETWEEN (((((v0.c2)) BETWEEN ((v0.c2)) AND ((v0.c1))))) AND ((vt0.c0 COLLATE NOCASE))) HAVING (((~ (v0.c1)))&(TOTAL(v0.c1))) LIMIT -742065523; -- 0ms;
SELECT CASE COUNT(*)  WHEN ((v0.c0) NOTNULL) THEN 0.15940416566998827 END FROM vt0;SELECT DISTINCT '669466556' FROM vt0, v0 WHERE (((CAST(0.4553109160191747 AS TEXT))LIKE(UPPER(DISTINCT x'cc6a')))); -- 0ms;
SELECT AVG(NULL) OVER () FROM vt0 LIMIT 2068454870 OFFSET -415580487; -- 0ms;
SELECT ALL highlight(((vt0.c0)/(v0.c1)), ((0.2695067161692577)&(v0.c2)), ((((v0.c2)OR(0.42028762351827087)))AND(v0.c0)), 0.3798044232569996), (NOT (v0.c1)) COLLATE BINARY, ((((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND (('')))))>((((vt0.c0)<(v0.c0))))) FROM vt0 WHERE (('zu' IN ()) COLLATE NOCASE COLLATE BINARY);SELECT ALL CAST(ABS(vt0.c0) AS TEXT), NTILE(((v0.c0 COLLATE BINARY) BETWEEN (((v0.c0) BETWEEN (v0.c1) AND (v0.c2))) AND (UPPER(v0.c2)))) OVER ( PARTITION BY (NOT (v0.c2 COLLATE RTRIM)), CASE CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c1 END  WHEN ((v0.c1)-(v0.c2)) THEN ((v0.c1) IS TRUE) ELSE ((vt0.c0) IS TRUE) END, v0.c2, (((((v0.c0))<((v0.c2))))<=(CAST(0xffffffffe44c8070 AS INTEGER)))), v0.c0 FROM v0 WHERE (((LENGTH(NULL)) BETWEEN (((NULL) NOTNULL)) AND (((('-1349899552')) NOT BETWEEN ((x'')) AND ((NULL))))));SELECT DISTINCT COUNT(*), (((NOT (v0.c0)))+(IFNULL(v0.c0, v0.c0))), SUM(((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c1))) FROM vt0, v0; -- 0ms;
SELECT ALL (~ (CASE WHEN v0.c1 THEN v0.c1 END)), ((COUNT(vt0.c0)) BETWEEN ('W') AND (MAX(v0.c1))), (+ (0.6907152884701186)) FROM vt0 WHERE (CAST(0.6327376335027688 AS NUMERIC));SELECT DISTINCT rtreenode(('' IN ()), AVG(v0.c0)) FROM v0 WHERE (((CAST('127925165' AS BLOB)) NOT BETWEEN ((((x'')) NOT BETWEEN ((-308082360)) AND (('-801498634')))) AND (MIN('1133111027', '', '732957245', x'', 0.025872837391142767, x'')))); -- 0ms;
SELECT ALL ((((((((vt0.c0 COLLATE BINARY)AND(NULLIF(vt0.c0, v0.c1))))AND((((x'')) BETWEEN ((vt0.c0)) AND ((vt0.c0))))))AND('uw[Xq0')))AND((v0.c1 IN ()))) FROM v0, vt0 WHERE (((+ ('0.3798044232569996')) IN ())) ORDER BY NULL DESC; -- 0ms;
SELECT ALL '219967748' FROM vt0 WHERE (CAST((('0.3798044232569996') IS TRUE) AS TEXT)) GROUP BY (v0.c1 IN ()) HAVING (- (((v0.c2)>=(vt0.c0))));SELECT ((((UNLIKELY(vt0.c0))AND(((v0.c1)+(v0.c2)))))AND(v0.c2)) FROM vt0, v0 WHERE (((0.7894617845827744) IS FALSE)); -- 0ms;
SELECT ((((v0.c2) IS FALSE)) NOT NULL) FROM vt0 FULL OUTER JOIN v0 ON ((v0.c0)<=((v0.c2 IN ()))); -- 7ms;
SELECT ALL ((TYPEOF(DISTINCT v0.c2)) ISNULL) FROM v0, vt0 WHERE (CAST((('1622041066') BETWEEN (x'afd3') AND (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL (- (GROUP_CONCAT(v0.c2))), (((v0.c1 IN ())) BETWEEN ((v0.c0 IN ())) AND (CASE v0.c1  WHEN 0.5993714164893154 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN vt0.c0 END)), ((((v0.c0)*(v0.c1))) NOT BETWEEN (CASE WHEN v0.c1 THEN v0.c0 END) AND (NULL)), ((AVG(v0.c2)) IS FALSE), ((load_extension(x'5119', v0.c0))>('&j''<''')) FROM v0 WHERE ('1855674242');SELECT DISTINCT (((((v0.c1)) BETWEEN ((v0.c1)) AND ((vt0.c0))))IS NOT(((-8.72495835E8) NOTNULL))) FROM v0, vt0 WHERE ((('25139977') IS FALSE) COLLATE RTRIM) ORDER BY ((((v0.c1) NOT BETWEEN (vt0.c0) AND (0.32767440411289406))) NOT BETWEEN ((+ (v0.c1))) AND (CASE v0.c2  WHEN '' THEN vt0.c0 ELSE v0.c1 END)) ASC LIMIT 1339175380; -- 0ms;
SELECT ALL (((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c1)) IN ()) FROM v0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(json_quote(v0.c2)) FROM v0 WHERE ((('') IS TRUE)) GROUP BY CASE vt0.c0  WHEN ((v0.c2)AND(vt0.c0)) THEN v0.c2 END HAVING ((((vt0.c0)!=(v0.c1))) NOT BETWEEN (load_extension(v0.c1, vt0.c0)) AND ((((v0.c2, v0.c0, v0.c1))>((vt0.c0, v0.c0, v0.c0))))) ORDER BY NULLIF(DISTINCT (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c2)) AND ((v0.c0, v0.c0, v0.c2))), (((v0.c2))!=((1427210581))))  NULLS FIRST;SELECT (- (x'fe6e')) FROM vt0; -- 0ms;
SELECT DISTINCT UPPER(CAST(v0.c2 AS TEXT)) FROM v0, vt0 WHERE (((((('-2044415691')) BETWEEN ((NULL)) AND ((0.7489016160411387)))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS NUMERIC))AND(((v0.c2) BETWEEN (vt0.c0) AND (v0.c1)))))AND(0.867352995745219 COLLATE NOCASE)) FROM v0, vt0 WHERE (((('-332818261' IN ())) BETWEEN (((0Xffffffffba818814)>=(x'8fcf'))) AND ((('')<<(NULL))))) ORDER BY (((('-997881766')<<(v0.c2)))IS(TRIM(DISTINCT v0.c1, v0.c0))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0, vt0.c0, 0.4226838651828526, v0.c2, vt0.c0)) BETWEEN ((1052946058, v0.c0, v0.c0, vt0.c0, v0.c1)) AND ((v0.c0, v0.c0, v0.c1, v0.c2, NULL))))OR(COUNT('0.555543614521267'))))AND(((v0.c2)||(vt0.c0)))))OR((v0.c0 IN ()))))OR(x'e1ce')), ((((v0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOT NULL), ((v0.c2) BETWEEN (((((v0.c1)AND(v0.c2)))AND(vt0.c0))) AND ((+ ('-830056824')))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (- (LOWER(v0.c0))) FROM v0 GROUP BY ((((v0.c2)|(v0.c0)))<((((v0.c1, v0.c1, v0.c1, v0.c0, vt0.c0))<=((v0.c1, v0.c1, vt0.c0, '', v0.c1)))));SELECT ALL (((+ (v0.c1)))%((- ('410097409')))) FROM v0, vt0 WHERE (('' COLLATE RTRIM IN ())); -- 0ms;
SELECT ALL ((((v0.c1) IS TRUE))/(CASE '37651451'  WHEN v0.c0 THEN v0.c0 WHEN x'' THEN vt0.c0 WHEN v0.c1 THEN vt0.c0 END)) FROM vt0, v0 WHERE (CAST((- (x'')) AS REAL)) ORDER BY ((((((v0.c0) NOT BETWEEN (x'') AND (v0.c2)))AND(x'')))OR((- (v0.c2)))); -- 0ms;
SELECT ALL COUNT((vt0.c0 IN (v0.c2, vt0.c0, v0.c0))) OVER () FROM vt0, v0 WHERE ((((((4.62567098E8)) BETWEEN (('')) AND ((x''))))-((0.867352995745219 IN (7.32957245E8))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY (((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))) BETWEEN (((((v0.c1)OR(vt0.c0)))OR(-6.79559237E8))) AND (CAST(v0.c0 AS NUMERIC))), ((v0.c0)-((- (v0.c2))))) FROM vt0, v0 WHERE (((CASE -7.42065523E8  WHEN NULL THEN 0xffffffffed3be1ad WHEN 0.7165732808148306 THEN x'' WHEN '-200683262' THEN -838912777 END)+(CASE WHEN '_Eo' THEN '0.9673380515542377' ELSE x'' END))); -- 0ms;
SELECT ALL FIRST_VALUE(((v0.c2)>>(((v0.c1)>(v0.c1))))) OVER () FROM vt0, v0 WHERE (CAST(NULL AS REAL) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((vt0.c0) IS FALSE)) IS FALSE) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((CASE v0.c2  WHEN v0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN x'21036805' THEN vt0.c0 ELSE v0.c2 END) BETWEEN (UPPER(DISTINCT v0.c1)) AND (CASE vt0.c0  WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) FROM vt0, v0 WHERE (CASE (x'' IN ())  WHEN (- ('1904282999')) THEN (('-1349899552')<(0.4956479710504763)) WHEN ((NULL)AND(NULL)) THEN ((x'923a')&(x'')) WHEN PRINTF(x'') THEN ((0.974017336472578)&(NULL)) ELSE ((NULL)+('')) END); -- 1ms;
SELECT ALL ((CASE v0.c2  WHEN v0.c0 THEN NULL END) NOT BETWEEN ((~ (v0.c0))) AND (MAX(vt0.c0))) FROM vt0;SELECT DISTINCT ((((v0.c1)&(v0.c0))) NOT BETWEEN (((-847850305) IS TRUE)) AND (((vt0.c0) NOTNULL))), (((((+ (vt0.c0)))OR(v0.c2)))OR(((v0.c1) IS TRUE))), CASE WHEN TRIM(DISTINCT v0.c0, v0.c0) THEN (v0.c1 IN (v0.c2)) END FROM vt0 LIMIT 762758416 OFFSET 1535658463;SELECT DISTINCT (((v0.c2)) NOT BETWEEN (('xjRutj2')) AND ((v0.c0))) COLLATE BINARY FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((CASE v0.c2  WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c2 END)OR((((v0.c2)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(((((v0.c1)OR(v0.c2)))AND(v0.c2)))) FROM v0;SELECT TOTAL(vt0.c0), CAST(CAST(vt0.c0 AS BLOB) AS TEXT), (((((v0.c0, vt0.c0, v0.c0))>((vt0.c0, v0.c2, v0.c0)))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) AND (GROUP_CONCAT(vt0.c0))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c0))) NOT NULL) FROM v0 WHERE (CAST(x'' COLLATE NOCASE AS NUMERIC)) LIMIT 1904282999 OFFSET 1558078429;SELECT ((((v0.c2) BETWEEN (v0.c2) AND (v0.c2))) IS TRUE) FROM v0; -- 0ms;
SELECT CASE CAST(vt0.c0 AS INTEGER)  WHEN CAST(v0.c2 AS TEXT) THEN v0.c1 ELSE (v0.c2 IN ()) END FROM vt0 WHERE ((((+ ('-314842707')))<=((('') NOT BETWEEN ('') AND (NULL)))));SELECT ALL COUNT((v0.c1 IN ())), UPPER(json_array_length(vt0.c0)), AVG(((v0.c1)<<(x''))), ((TYPEOF(DISTINCT v0.c1))&(((vt0.c0) ISNULL))), NULL FROM v0, vt0; -- 1ms;
SELECT '-200683262', v0.c2, ((x'fa54') IS TRUE) FROM v0, vt0 WHERE (((((x'') NOT NULL)) BETWEEN (((x'')>>(NULL))) AND (((0.08404371894056273)<=(x'8c2b'))))); -- 0ms;
SELECT ALL 0.47417940869539343 FROM v0 WHERE ((((((NULL)+(0x1e1a0e2f))))==((((NULL) NOT BETWEEN ('p.') AND (NULL)))))); -- 0ms;
SELECT DISTINCT (((vt0.c0)+(v0.c2)) IN (v0.c0)) FROM v0;SELECT ALL 'f3!}C?h', json(vt0.c0), (((- ('-1688121085'))) NOTNULL) FROM v0;SELECT v0.c1, CASE WHEN (v0.c2 IN ()) THEN ((NULL) NOT BETWEEN (v0.c0) AND (v0.c0)) ELSE v0.c0 END, COUNT('1855674242') FILTER(WHERE CASE WHEN vt0.c0 THEN v0.c1 COLLATE NOCASE ELSE (v0.c0 IN (NULL)) END) OVER () FROM vt0, v0; -- 6ms;
SELECT (NOT ((v0.c1 IN (v0.c2, vt0.c0)))) FROM vt0 WHERE (CAST(x'' AS NUMERIC));SELECT ALL ((((v0.c0 IN ())))>=((((v0.c1)=(v0.c2))))) FROM v0, vt0 WHERE ((~ ('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT NTH_VALUE(((0x13e050f9 COLLATE BINARY)<=(((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))), ((v0.c1 COLLATE RTRIM) IS TRUE)) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW EXCLUDE CURRENT ROW) FROM v0, vt0 WHERE ((('1239977959') NOT NULL) COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((load_extension(v0.c2))IS((- (vt0.c0)))) FROM vt0 WHERE (((((NULL) NOT BETWEEN (1833275376) AND ('aP R'))) BETWEEN (x'0147') AND (((0.431998060509188) NOT NULL))));SELECT ALL ((((((((((vt0.c0)AND(v0.c2)))OR(v0.c2)))AND(v0.c1)))OR(v0.c0))) IS TRUE), COALESCE(v0.c1, (((v0.c2, vt0.c0, v0.c2))<((vt0.c0, vt0.c0, v0.c2)))), NULLIF(((((v0.c0)OR(v0.c1)))AND(v0.c2)), (((v0.c2, v0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c1, vt0.c0)) AND ((v0.c1, v0.c0, vt0.c0)))) FROM vt0, v0 LIMIT 641478739 OFFSET 669466556; -- 0ms;
SELECT DISTINCT v0.c2 FROM v0, vt0; -- 0ms;
SELECT (+ (GROUP_CONCAT(vt0.c0))) FROM vt0 WHERE (0.34343233563627484) LIMIT -656564708 OFFSET -450419028; -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE BINARY) NOT BETWEEN (0xe57f003) AND ((vt0.c0 IN ()))) FROM vt0 WHERE (x'');SELECT CUME_DIST() OVER ( ORDER BY ((((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c0)))<=(CAST(vt0.c0 AS NUMERIC))) DESC  NULLS LAST, (((- (v0.c1)))<=((v0.c1 IN ())))) FROM vt0;SELECT FIRST_VALUE(v0.c0) OVER (), ((((v0.c1)<(0.6504695162357924)))-(vt0.c0)), LAST_VALUE(((((vt0.c0)<=(v0.c1)))=(((v0.c2)!=(v0.c2))))) OVER () FROM vt0, v0 WHERE ('6dc%v/'); -- 0ms;
SELECT DISTINCT vt0.c0, ((((((vt0.c0)AND(7.6024611E7)))AND(v0.c1))) NOTNULL), ((('778347586')) NOT BETWEEN ((((v0.c2) IS FALSE))) AND (((v0.c2 IN ())))) FROM vt0, v0 WHERE ((((((534817150, 0.4220623930895123, '', '1855674242', '-1349899552', 0.18868780804086527, 732957245))==((NULL, 0.6551307344845714, x'd73d', x'', 0x83c956f, NULL, 0.4570377155917805))))||(NULL))) LIMIT 1855674242 OFFSET -1162368657; -- 1ms;
SELECT DISTINCT (((((('') IS TRUE))OR((- (v0.c1)))))AND(((v0.c2)<(v0.c2)))) FROM v0, vt0; -- 0ms;
SELECT v0.c2 FROM v0, vt0; -- 0ms;
SELECT ((COUNT(*))IS(LOWER(v0.c2))), CHAR(HEX(DISTINCT vt0.c0), ((((((((vt0.c0)OR(vt0.c0)))OR(v0.c1)))OR(v0.c0)))OR(v0.c2)), v0.c2 COLLATE BINARY), (((v0.c2))>((v0.c1))) COLLATE BINARY FROM v0 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((vt0.c0)>(v0.c1))) IS FALSE), (NOT (((((((((vt0.c0)AND(v0.c2)))OR(v0.c1)))AND(v0.c1)))AND(v0.c2)))), (((v0.c1)|(x'')) IN ()) FROM vt0, v0; -- 0ms;
SELECT DISTINCT NTH_VALUE((~ ((- (v0.c1)))), (vt0.c0 IN ())) OVER () FROM v0, vt0; -- 0ms;
SELECT DISTINCT AVG(((((v0.c0)OR(v0.c0)))AND(v0.c1))) OVER (), QUOTE(MAX(v0.c2)), ((((vt0.c0 IN (0xffffffffc3d8fc7e))))>=((CASE v0.c2  WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END))) FROM vt0, v0 WHERE (0.3830365033849238); -- 1ms;
SELECT ((vt0.c0)!=(((x'') ISNULL))) FROM vt0, v0 WHERE ((+ (((0.7909279288988714) ISNULL)))) ORDER BY load_extension((v0.c2 IN (v0.c0))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((v0.c2)=(v0.c1)))*(vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (LIKELIHOOD(0X4038926c, 0.48367613369633267));SELECT ALL ((v0.c1)>(COUNT(*))), (COUNT(vt0.c0) IN ()), ((CAST(v0.c1 AS TEXT)) ISNULL) FROM v0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*), ((CAST(v0.c0 AS INTEGER))==(UNLIKELY(vt0.c0))), (v0.c1 IN ()), (((((vt0.c0))==((v0.c2)))) NOT BETWEEN (((((((((v0.c2)AND(vt0.c0)))OR(v0.c0)))AND(vt0.c0)))AND(v0.c0))) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c2 END)), TYPEOF(DISTINCT CASE WHEN vt0.c0 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c0 END) FROM v0;SELECT ALL ((((v0.c0) NOTNULL)) NOT BETWEEN (((v0.c2)<=(vt0.c0))) AND (TOTAL(v0.c1))) FROM vt0 WHERE (((CAST(0.20730012489894023 AS BLOB)) BETWEEN (NULLIF(x'070e', x'32f921a1')) AND (CASE WHEN 0.9450639967508659 THEN '0.0' END))) GROUP BY (((vt0.c0 IN (NULL)))>=((+ (0.3140417192963927)))) HAVING COUNT(MIN((((v0.c1, v0.c1, v0.c2)) NOT BETWEEN ((v0.c1, v0.c1, v0.c0)) AND ((v0.c0, vt0.c0, vt0.c0)))));SELECT DISTINCT ((CASE vt0.c0  WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c2 THEN vt0.c0 WHEN '-450419028' THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 ELSE x'9605' END) NOT BETWEEN (NULL) AND ((((vt0.c0))<=((v0.c1))))) FROM v0 WHERE (((x'')>>(0.7389251099014743)) COLLATE RTRIM);SELECT DISTINCT CAST((v0.c0 IN ()) AS BLOB), ((vt0.c0 COLLATE RTRIM) NOTNULL), TOTAL(CASE WHEN vt0.c0 THEN v0.c2 END) FROM vt0, v0 NOT INDEXED WHERE (((((x'')AND(0.9567102341227706)))OR(0.05662182029827001)) COLLATE NOCASE); -- 0ms;
SELECT ALL (((v0.c0 IN ()))>=(NULL)), (+ (AVG(v0.c0))), AVG('Kr*2)\r.') OVER ( RANGE ((x'0909' COLLATE RTRIM)IS NOT((((0.3569318954567533)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))))) PRECEDING EXCLUDE CURRENT ROW) FROM vt0 WHERE (((((DATE(x'', 1.33917538E9, NULL))OR((('p.')==(-2108765799)))))AND(x'')));SELECT x'' FROM v0, vt0 WHERE ((((('-1165916140') NOTNULL))/(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT ((((v0.c2, v0.c1, v0.c1))>((vt0.c0, vt0.c0, x'0ec0'))) IN ()) FROM v0 WHERE ((+ (NULLIF(DISTINCT NULL, NULL)))) LIMIT -411648929; -- 0ms;
SELECT ALL CAST((v0.c2 IN ()) AS INTEGER) FROM vt0, v0 WHERE (0.867352995745219) ORDER BY CASE vt0.c0 COLLATE NOCASE  WHEN ((v0.c1)!=(v0.c1)) THEN (('*') BETWEEN (v0.c0) AND (v0.c2)) WHEN (((v0.c1, vt0.c0, v0.c2)) BETWEEN (('-2113954416', v0.c1, v0.c0)) AND ((v0.c2, v0.c2, v0.c0))) THEN NULLIF(v0.c0, v0.c2) WHEN (- (vt0.c0)) THEN (+ (vt0.c0)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(AVG(v0.c0) AS INTEGER) FROM vt0 WHERE ((+ (((0.3741929183227257) IS TRUE)))) ORDER BY LIKELY(((v0.c2)<(vt0.c0))), LIKELIHOOD(DISTINCT (~ (v0.c2)), 0.04495843305069225) ASC, ((v0.c0) BETWEEN (((vt0.c0) NOTNULL)) AND (v0.c1 COLLATE BINARY)) ASC  NULLS FIRST;SELECT DISTINCT (((- (v0.c1)))OR(NULL COLLATE NOCASE)) FROM v0; -- 0ms;
SELECT ALL ((x'') IS TRUE) FROM v0, vt0; -- 0ms;
SELECT ALL vt0.c0, (((((- (vt0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(v0.c1 COLLATE BINARY)), (+ (((vt0.c0)-(v0.c0)))) FROM v0 WHERE ((((('1073180827') IS TRUE))LIKE((((-1405349150, NULL, 0.06242630347021638))<=((-997881766, x'', 0.28996855419096446))))));SELECT ALL v0.c0, ((NULL)%('ꙫz')), '' FROM vt0 LIMIT -1867986590 OFFSET -1158105787;SELECT DISTINCT MIN(((((((((v0.c0)OR('-2000188232')))AND(v0.c1)))AND(vt0.c0)))OR(vt0.c0))), PERCENT_RANK() OVER (), ((((v0.c0) NOT BETWEEN ('76024611') AND (v0.c2))) IS FALSE) FROM v0, vt0; -- 0ms;
SELECT DISTINCT '0.7407368051718696' FROM v0, vt0 WHERE ((((0Xffffffffa6154f63)) NOT BETWEEN ((((NULL) BETWEEN (1.558078429E9) AND (x'')))) AND ((((x'8f4b') NOT BETWEEN (NULL) AND (x'')))))) ORDER BY x'' ASC; -- 0ms;
SELECT DISTINCT (+ (LOWER(v0.c0))), ((v0.c0) ISNULL), (TOTAL(v0.c2) IN ()) FROM vt0, v0 LIMIT 1052946058 UNION SELECT CASE ABS(v0.c0)  WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c2)) THEN '' WHEN ((v0.c1) BETWEEN ('O') AND (v0.c1)) THEN (('1414802819') NOT BETWEEN ('1246648149') AND (v0.c0)) WHEN CAST(vt0.c0 AS INTEGER) THEN (v0.c2 IN ()) ELSE CAST('1622041066' AS NUMERIC) END, ((((COUNT(*))AND(((v0.c0) BETWEEN (0.9655232426610216) AND (v0.c2)))))AND(((vt0.c0)>(vt0.c0)))), ((((((v0.c1)AND(v0.c2)))AND('\n'))) NOTNULL) FROM vt0, v0 ORDER BY 'A{[v*', ((NULL) IS FALSE) ASC, CAST(((vt0.c0) BETWEEN (v0.c2) AND ('-583921146')) AS BLOB)  NULLS LAST;SELECT NULL FROM v0, vt0 LIMIT -411648929; -- 0ms;
SELECT ALL GROUP_CONCAT((((v0.c2)) NOT BETWEEN ((v0.c2)) AND ((v0.c1)))), ((((((v0.c1)&(v0.c0)))OR(((v0.c0) NOTNULL))))OR(vt0.c0)), ((TOTAL(v0.c2)) NOT BETWEEN (UPPER(DISTINCT v0.c1)) AND (((v0.c1)==(v0.c2)))) FROM v0, vt0 WHERE ((((x'')) BETWEEN ((NULL)) AND ((x'')))); -- 0ms;
SELECT DISTINCT 7.6024611E7, ((vt0.c0)IS NOT(((v0.c2)GLOB(vt0.c0)))), vt0.c0 FROM vt0 WHERE ((+ (0.6534414097828751)) COLLATE RTRIM);SELECT CAST(((((v0.c1)OR(vt0.c0)))AND(v0.c2)) AS NUMERIC) FROM v0 WHERE (((((((NULL)OR(NULL)))OR('574374853'))) ISNULL)) LIMIT 1133111027;SELECT DISTINCT (+ (MAX(vt0.c0))), TOTAL((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c0)))) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP), (((((('U垂')OR(v0.c2)))AND(vt0.c0)))/(v0.c1)) FROM vt0, v0 NOT INDEXED WHERE (CAST((+ (0.13511160850218196)) AS REAL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN ((v0.c1)-(v0.c2)) END FROM v0, vt0; -- 0ms;
SELECT DISTINCT (((v0.c2 IN ())) BETWEEN ('115875368') AND (TOTAL(v0.c2))) FROM v0; -- 0ms;
SELECT ALL ((((TRIM(v0.c2, vt0.c0))OR(v0.c1 COLLATE RTRIM)))OR((- (v0.c2)))) FROM v0, vt0 WHERE (((('333467897'))<>(((NOT (155451977)))))) LIMIT -798722156 OFFSET -2004523771; -- 0ms;
SELECT DISTINCT ((v0.c0)OR(vt0.c0)) COLLATE RTRIM FROM vt0, v0 ORDER BY LIKELIHOOD(DISTINCT ((v0.c0) BETWEEN (v0.c2) AND (v0.c1)), 0.9656881351783682) LIMIT -2109540988; -- 0ms;
SELECT DISTINCT ((((((((((((v0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(NULL)))AND(vt0.c0)))OR(v0.c0)))OR(vt0.c0)) COLLATE BINARY FROM vt0 WHERE (0.8729776893740493);SELECT DISTINCT ((((v0.c2) NOTNULL)) ISNULL) FROM v0; -- 0ms;
SELECT DISTINCT ((CASE v0.c1  WHEN v0.c2 THEN x'' END) NOTNULL), v0.c1, COUNT(NULL) OVER () FROM v0 WHERE (CASE WHEN (('1456812333') BETWEEN (NULL) AND (0.5229366173775261)) THEN CAST('974020001' AS NUMERIC) ELSE ((0Xffffffffaa1bf43c)==(NULL)) END) ORDER BY (- ((((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((vt0.c0))))) ASC, -2.097609745E9 DESC  NULLS FIRST;SELECT DISTINCT CASE WHEN ((v0.c0)GLOB(v0.c1)) THEN vt0.c0 COLLATE RTRIM WHEN ((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)) THEN CAST(v0.c0 AS NUMERIC) WHEN ((v0.c0)IS(vt0.c0)) THEN ((((v0.c2)OR(v0.c1)))AND(v0.c1)) END FROM vt0, v0; -- 0ms;
SELECT ALL CAST(v0.c1 AS REAL) COLLATE RTRIM, LAG(((CASE WHEN '-2094402370' THEN vt0.c0 END)>((vt0.c0 IN ()))), CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))  WHEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN (~ (0xffffffff81f803cb)) ELSE ((vt0.c0)IS NOT(vt0.c0)) END, ((LIKELY(DISTINCT vt0.c0))|(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))) OVER (), v0.c0 FROM vt0 WHERE (CASE WHEN CASE NULL  WHEN '-798722156' THEN -6.665852E7 ELSE NULL END THEN (('452973743') NOT BETWEEN (x'2932') AND (0.4226838651828526)) WHEN CAST(451386460 AS TEXT) THEN ((NULL) IS TRUE) WHEN ((('-411648929', '-1158105787', NULL))<>((0xd1c7104, x'30e4', NULL))) THEN ((x'')>>(505024047)) END) ORDER BY ((((((((((v0.c0) NOT NULL))AND((- (vt0.c0)))))OR(v0.c0)))AND((((v0.c0))>((v0.c0))))))AND(((((v0.c1)AND(vt0.c0)))OR(v0.c1)))) ASC LIMIT 138188143;SELECT DISTINCT ((((vt0.c0) NOTNULL))<>(CAST(v0.c0 AS TEXT))) FROM vt0 WHERE (((CAST(-2097304413 AS NUMERIC)) ISNULL));SELECT DISTINCT ((((v0.c1) BETWEEN (v0.c0) AND (x'')))OR(CASE WHEN v0.c0 THEN v0.c2 ELSE v0.c2 END)) FROM vt0;SELECT ALL (COUNT(v0.c1) IN (((v0.c2) NOTNULL))) FROM vt0, v0 ORDER BY CASE WHEN v0.c1 THEN (v0.c2 IN (vt0.c0)) ELSE (v0.c2 IN ()) END  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE WHEN ((0.8470786416024998)IS NOT(v0.c2)) THEN MIN(v0.c1) END FROM vt0, v0 WHERE (('*lZ(f' COLLATE BINARY IN (x'' COLLATE RTRIM))) GROUP BY CASE ((v0.c2) NOT BETWEEN (v0.c2) AND (v0.c2))  WHEN CAST(v0.c1 AS BLOB) THEN vt0.c0 WHEN HEX(v0.c2) THEN v0.c0 WHEN ((0.19460616057205904)<<(v0.c1)) THEN ((vt0.c0)&(vt0.c0)) END ORDER BY ((v0.c1) IS FALSE) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT ((((v0.c0 COLLATE BINARY)OR(CASE WHEN v0.c0 THEN vt0.c0 END)))AND(((((((((v0.c1)AND(v0.c2)))OR(vt0.c0)))OR(v0.c1)))OR(v0.c0)))), CASE ((v0.c2)LIKE(vt0.c0))  WHEN ((v0.c2)LIKE(x'')) THEN ((((((((vt0.c0)OR(vt0.c0)))AND('')))AND(v0.c1)))AND(v0.c2)) END, (NOT (((v0.c2) BETWEEN (v0.c2) AND (vt0.c0)))) FROM v0;SELECT ALL LAST_INSERT_ROWID() FROM v0, vt0 WHERE (SUBSTR((((('0#\')OR(NULL)))OR(NULL)), ((0.5360864673049014) NOT BETWEEN (NULL) AND (NULL)))) LIMIT -2027309336; -- 0ms;
SELECT ALL MAX(NULL COLLATE NOCASE) COLLATE BINARY, (- ((((vt0.c0)) NOT BETWEEN ((v0.c0)) AND ((v0.c1))))), COUNT(*) OVER () FROM vt0, v0 WHERE ((- ((x'0020373f' IN ())))); -- 0ms;
SELECT ALL ((((v0.c2)>(v0.c1))) BETWEEN (((v0.c1)<(v0.c2))) AND ((((v0.c0))=((v0.c1))))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT LENGTH(((v0.c0) NOT NULL)), (((((v0.c1)) NOT BETWEEN ((v0.c2)) AND ((v0.c2))))+(((v0.c0) ISNULL))), ((((v0.c0)AND(vt0.c0))) ISNULL) FROM v0 WHERE ((((('762899758')+(x''))) NOTNULL));SELECT ALL FIRST_VALUE(NULL) OVER (), (+ (((v0.c2) BETWEEN (v0.c0) AND (NULL)))), (v0.c2 IN (SUM(v0.c0))) FROM vt0 WHERE ((- (NULL COLLATE RTRIM))) ORDER BY (((v0.c2) NOT BETWEEN (vt0.c0) AND (v0.c0)) IN ()) DESC;SELECT ALL (~ (CASE v0.c1  WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN 0.22927948733468184 WHEN v0.c0 THEN vt0.c0 END)) FROM v0, vt0; -- 0ms;
SELECT ALL ((((0.7349087286289845) ISNULL)) NOT BETWEEN (((v0.c2) IS FALSE)) AND (v0.c2)), (((v0.c0) NOTNULL) IN ('505024047' COLLATE NOCASE, ((v0.c0)||(v0.c0)))), ((CAST(v0.c2 AS BLOB)) NOTNULL) FROM v0, vt0; -- 0ms;
SELECT ALL TOTAL(rtreenode(vt0.c0, vt0.c0)) FROM vt0, v0 WHERE (((NOT (x'')) IN ())) LIMIT 1575337194 OFFSET -1763978176; -- 1ms;
SELECT ALL (NOT (v0.c2 COLLATE RTRIM)), ((((vt0.c0)<<(vt0.c0)))||(CASE v0.c2  WHEN '639029419' THEN vt0.c0 ELSE v0.c0 END)), CAST(((v0.c0)<>(v0.c1)) AS BLOB) FROM v0 WHERE ((+ (CAST(x'4e54' AS NUMERIC))));SELECT ALL MAX(CAST(v0.c0 AS REAL)) FROM v0, vt0 GROUP BY v0.c2 HAVING vt0.c0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN vt0.c0 THEN 0.5493259775602658 ELSE vt0.c0 END AS BLOB), CAST(x'fad9' AS INTEGER), ((((vt0.c0)<<(v0.c0))) IS TRUE) FROM v0, vt0; -- 0ms;
SELECT DISTINCT v0.c2 FROM vt0;SELECT ((~ (v0.c0)) IN ((((vt0.c0))<=((v0.c0))))), (- (CAST(v0.c1 AS INTEGER))), SQLITE_COMPILEOPTION_GET((((v0.c1)) NOT BETWEEN ((x'')) AND ((v0.c2)))) FROM v0 WHERE (LIKELIHOOD(((((x'')OR(0.7649542087362365)))OR(x'')), 0.16515514551596466));SELECT DISTINCT SUM(CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END), '-1922380066', ((CHANGES()) NOT BETWEEN (MIN(v0.c2)) AND ((NOT (v0.c0)))) FROM vt0, v0 WHERE (((((((((((0.8872801269848696)OR(0xffffffffc7229325)))AND(x'8e20')))OR('')))OR(x'423c')))||(NULL COLLATE RTRIM))) LIMIT 1110134396 OFFSET -1314804214; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM v0 WHERE (((((((NULL)=('1414802819')))AND(((x'2a86') NOT BETWEEN (NULL) AND (0.0)))))AND((('X')|(NULL))))) INTERSECT SELECT DISTINCT ((((((x'')OR(vt0.c0)))OR(v0.c1)))=(CASE v0.c0  WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)) FROM v0 WHERE (NULL COLLATE NOCASE COLLATE RTRIM) GROUP BY CAST((vt0.c0 IN ()) AS TEXT);SELECT ALL LTRIM(load_extension(v0.c2, v0.c2)) FROM vt0;SELECT ALL (((v0.c0 IN (v0.c1))) NOT BETWEEN (CAST(v0.c1 AS REAL)) AND (vt0.c0)), ((UPPER(vt0.c0))<<((~ (v0.c0)))), '1246648149', (+ (((((v0.c0)AND(v0.c2)))OR(v0.c0)))), json_insert(((v0.c1) BETWEEN ('-332818261') AND (v0.c1)), (v0.c0 IN ()), (+ (v0.c0)), ((((((((v0.c0)AND(v0.c1)))AND(v0.c2)))AND(v0.c1)))AND(v0.c1)), (NULL IN (v0.c0))) FROM vt0;SELECT CASE v0.c2 COLLATE RTRIM  WHEN '7/BZ' THEN (((vt0.c0, v0.c0, v0.c1)) NOT BETWEEN (('-914470103', x'', v0.c0)) AND ((vt0.c0, v0.c2, v0.c1))) ELSE CASE v0.c2  WHEN 0xffffffff8729b6e8 THEN v0.c1 END END FROM vt0, v0 WHERE (TRIM(x'' COLLATE BINARY)); -- 0ms;
SELECT AVG(974394605) FROM vt0 WHERE (CAST(x'' COLLATE RTRIM AS REAL)); -- 0ms;
SELECT CAST((0Xffffffff953f58c4 IN (v0.c2, v0.c2)) AS BLOB), (- ((NOT (NULL)))), (~ (v0.c2 COLLATE BINARY)) FROM v0, vt0; -- 0ms;
SELECT ALL ((CASE v0.c2  WHEN v0.c0 THEN v0.c1 END) NOT NULL) FROM v0; -- 0ms;
SELECT ALL ((IFNULL(vt0.c0, v0.c2))+(((0.42835970459778594)-(v0.c2)))), GROUP_CONCAT(((((v0.c1)OR(v0.c0)))AND(v0.c1))) OVER (), COUNT(MIN(TOTAL(v0.c2))) FROM v0, vt0;SELECT DISTINCT (+ (((((v0.c2)AND(vt0.c0)))AND(v0.c0)))), (TOTAL(v0.c1) IN (((v0.c0)AND(-1792712)))), CASE ((v0.c1)%(vt0.c0))  WHEN v0.c2 THEN ((v0.c1)|(vt0.c0)) END FROM vt0, v0 WHERE (CASE CAST(NULL AS BLOB)  WHEN 37651451 THEN CASE WHEN -8.30056824E8 THEN '-742065523' WHEN 0.41220297317059196 THEN x'aea6' WHEN -1683934638 THEN x'' END WHEN CASE WHEN x'' THEN 0.13695642122957996 END THEN ((',/')IS(NULL)) WHEN load_extension('1246648149') THEN (+ (0.10090776205000762)) END);SELECT DISTINCT x'', 'g\' COLLATE NOCASE, json_extract((- (v0.c0)), ((v0.c0) NOT NULL)) FROM vt0, v0 WHERE (((((x'e5de') IS FALSE)) NOT BETWEEN (CAST(x'e36d' AS NUMERIC)) AND ((1606975158 IN (NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((v0.c2)LIKE(v0.c0)))OR(CAST(v0.c0 AS BLOB))))OR(((vt0.c0) BETWEEN (vt0.c0) AND (v0.c1)))))OR(ABS(v0.c1))))AND(CAST(v0.c0 AS NUMERIC))), CASE WHEN ((NULL)>(0.7294899795182425)) THEN (vt0.c0 IN ()) END, 0xffffffffbab7a96f FROM v0 WHERE (((((((((x'')AND('-25923900')))OR(0.6649898717106342)))AND((x'' IN ()))))AND((('-66658520')LIKE('pX㧾''U'))))) LIMIT 1339175380;SELECT DISTINCT ((TYPEOF(v0.c0))+((v0.c0 IN ()))), COUNT(*), CAST(vt0.c0 AS INTEGER) COLLATE BINARY FROM vt0, v0; -- 0ms;
SELECT ALL ((((NOT (v0.c2))))<((CAST(v0.c2 AS INTEGER)))) FROM v0, vt0; -- 0ms;
SELECT (((v0.c2)) BETWEEN ((((v0.c1) NOT BETWEEN (v0.c0) AND (vt0.c0)))) AND ((v0.c0))), (((v0.c2)) NOT BETWEEN ((v0.c1)) AND (('kr*2)\r.'))) COLLATE BINARY, TYPEOF(IFNULL(v0.c2, v0.c0)), COUNT((v0.c1 IN ())) OVER ( PARTITION BY CAST(CAST(v0.c2 AS NUMERIC) AS REAL), ((((ABS(DISTINCT v0.c1))OR(v0.c0)))AND(((v0.c0) IS TRUE)))), ((((((v0.c1, v0.c0, v0.c0))==((v0.c1, v0.c0, v0.c1))), v0.c0, ((((v0.c2)OR(vt0.c0)))OR(NULL))))==(('', (+ (vt0.c0)), ((((v0.c2)AND(vt0.c0)))OR(v0.c1))))) FROM vt0;SELECT DISTINCT (+ (GROUP_CONCAT(NULL))) FROM v0, vt0 WHERE (CAST(((NULL) NOTNULL) AS REAL)); -- 0ms;
SELECT CUME_DIST() OVER () FROM vt0 WHERE (COALESCE(NULL, CAST('' AS REAL))); -- 0ms;
SELECT DISTINCT ((v0.c0)>=(v0.c1)) COLLATE BINARY FROM v0, vt0 WHERE (CASE WHEN CAST(x'' AS NUMERIC) THEN ((x'')>=('抖佣')) WHEN CASE WHEN 333467897 THEN NULL WHEN x'' THEN NULL WHEN -430738756 THEN '' WHEN '' THEN x'' WHEN 0.3546547791507336 THEN '-864544355' ELSE -1688121085 END THEN (((('378596062')AND('240644099')))OR('X')) WHEN (('\m>lY') IS TRUE) THEN 'yz' END) LIMIT -415580487; -- 0ms;
SELECT DISTINCT ((('0.479092272969763', NULL, vt0.c0)) NOT BETWEEN ((((v0.c0)<=(v0.c0)), 0.9301204625229936, x'')) AND (((((v0.c0))>=((vt0.c0))), x'', (vt0.c0 IN ())))) FROM v0, vt0 WHERE (CASE WHEN (('-411648929')%(NULL)) THEN (((0.17608029717488716, NULL, '-1295918359'))<=((NULL, 0xffffffffd0647794, 0.5596924985109196))) END); -- 0ms;
SELECT DISTINCT UNLIKELY(((0.10590930465846415)>(v0.c0))), ((((v0.c1) NOT NULL)) NOT BETWEEN (((v0.c2) ISNULL)) AND (v0.c1 COLLATE RTRIM)), SQLITE_VERSION() FROM v0 WHERE (((((((x'')AND('')))AND(-356823237))) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(v0.c0 AS INTEGER) THEN NULL END FROM v0, vt0 WHERE (UNLIKELY(0.10090776205000762 COLLATE RTRIM)) GROUP BY CASE (((vt0.c0)) BETWEEN ((v0.c1)) AND ((x'')))  WHEN ((((v0.c0)AND(vt0.c0)))OR(v0.c2)) THEN ((v0.c1)>(vt0.c0)) ELSE (((v0.c0, v0.c2, v0.c1, vt0.c0, vt0.c0, v0.c2, v0.c1)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c1, vt0.c0, vt0.c0, 0.4553109160191747, vt0.c0)) AND ((v0.c0, 5.05024047E8, vt0.c0, '1934547258', vt0.c0, v0.c0, v0.c0))) END; -- 7ms;
SELECT ALL ((((0.9355914922783602) BETWEEN (vt0.c0) AND (0.3140417192963927)))<<((+ (vt0.c0)))) FROM vt0 WHERE (((((((((NULL COLLATE BINARY)OR(((x'')<=('Q[')))))AND(TOTAL_CHANGES())))AND((((('')OR(0.5798460180828542)))AND(x'2a5e')))))AND(CAST(x'' AS INTEGER)))) GROUP BY ((((((0.7876848951585965)AND(v0.c2)))OR(v0.c2)))OR((((v0.c2)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))));SELECT ALL v0.c2 FROM v0 WHERE ((~ (((-1236619834)<>(NULL))))); -- 0ms;
SELECT DISTINCT CAST(((v0.c1) NOTNULL) AS TEXT) FROM v0, vt0 WHERE ((- (((x'4c68')<(0.7182039588844181))))); -- 0ms;
SELECT ALL (NOT (COUNT(vt0.c0))) FROM v0, vt0 WHERE (0X7124bcf9); -- 0ms;
SELECT DISTINCT (((~ (v0.c0))) NOT NULL), (((v0.c2 COLLATE NOCASE))!=((((vt0.c0)<<(vt0.c0))))), (((v0.c1)<(vt0.c0)) IN ()) FROM v0;SELECT DISTINCT ROW_NUMBER() OVER () FROM v0 WHERE (((CAST(x'2a25' AS NUMERIC)) NOTNULL)) GROUP BY ((vt0.c0)<<(v0.c2)) COLLATE RTRIM COLLATE NOCASE;SELECT DISTINCT ((((NULL) IS TRUE))<=(NULL)), CASE WHEN x'' THEN CAST(vt0.c0 AS BLOB) WHEN (((v0.c1, v0.c2, '1176790552'))<((v0.c2, x'', v0.c2))) THEN ((v0.c0) NOT BETWEEN ('-1341056139') AND (v0.c2)) WHEN vt0.c0 COLLATE NOCASE THEN ((v0.c2) NOTNULL) END, (((NOT (v0.c2))) IS FALSE) FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((NOT (v0.c2)))AND(((v0.c0) NOTNULL))) FROM v0, vt0; -- 0ms;
SELECT ALL 0.5360864673049014 FROM vt0, v0; -- 0ms;
SELECT v0.c2, (- (CASE WHEN v0.c1 THEN v0.c1 END)), SUM(((vt0.c0) NOTNULL)) OVER () FROM vt0 WHERE (((0.4537783955606878) NOT BETWEEN (LIKELY(0.19107652545126663)) AND (UPPER('0.5493259775602658'))));SELECT ((v0.c0 COLLATE NOCASE)|((((vt0.c0)) NOT BETWEEN ((v0.c2)) AND ((0.34387637426579665))))) FROM v0 GROUP BY CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 ELSE v0.c0 END COLLATE NOCASE HAVING (~ (v0.c2 COLLATE RTRIM)) ORDER BY (((+ (vt0.c0)))==(TRIM(v0.c1))) ASC, (CAST(v0.c1 AS NUMERIC) IN ())  NULLS LAST;SELECT DISTINCT (+ ((NULL IN ()))) FROM vt0, v0 WHERE ('S{Vz5	Ys\r'); -- 0ms;
SELECT vt0.c0, (((v0.c2)) BETWEEN ((NULL)) AND ((v0.c1))), ((((((((CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE v0.c0 END)OR(vt0.c0)))AND(((v0.c0)>>(NULL)))))OR(((v0.c1) ISNULL))))OR(v0.c1 COLLATE RTRIM)), TOTAL((- (NULL))), (+ (((v0.c2) IS FALSE))) FROM vt0, v0 WHERE (((('6dc%v/')) BETWEEN ((TRIM(DISTINCT NULL, 'I蛖'))) AND ((((NULL)-('')))))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM v0 WHERE (CASE WHEN 0X75e0708b THEN '2140207437' WHEN 0X5d2d369c THEN NULL WHEN NULL THEN NULL ELSE '-155420989' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))=(((((v0.c0)AND(v0.c2)))OR(v0.c2)))), (((((v0.c2)<(v0.c2))))<=((((NULL)<=(v0.c2))))), ((((('Ml'))<>((v0.c2))))*(((vt0.c0) IS FALSE))) FROM v0;SELECT DISTINCT ((((vt0.c0)IS NOT(v0.c2))) ISNULL), (+ (TRIM(v0.c1))), ((((((v0.c0)OR(v0.c1)))AND(1930286616)))&(UPPER(v0.c0))) FROM vt0, v0 WHERE ((((x'ef5d')>>(0xffffffffbf810961)) IN (((0.4045643039473583)|(NULL))))); -- 0ms;
SELECT ALL v0.c2 FROM v0; -- 0ms;
SELECT ALL ((vt0.c0 COLLATE BINARY)|(((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c1)))), ((IFNULL(DISTINCT v0.c2, v0.c2))=((v0.c0 IN ()))), (((((((((((v0.c0))<>((v0.c2))))OR(v0.c0)))AND(((v0.c2) NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND((- (v0.c2)))))AND(v0.c0)) FROM vt0 WHERE (((NULL COLLATE BINARY)GLOB(('-1527753028' IN ()))));SELECT CAST((v0.c2 IN (v0.c2)) AS TEXT) FROM v0, vt0; -- 0ms;
SELECT '0.15255033113791772' FROM vt0, v0 WHERE ((+ ((('-2141903688') IS TRUE)))); -- 0ms;
SELECT ALL ((((((((((((((vt0.c0)>=(x'')))OR(CAST(v0.c0 AS NUMERIC))))AND(v0.c0 COLLATE RTRIM)))OR((- (vt0.c0)))))AND(UNLIKELY(v0.c1))))AND((~ (v0.c2)))))AND(NULL)) FROM vt0 WHERE ((((NULL) BETWEEN (0Xffffffff9d0f7a6a) AND (x'c762')) IN (((0.4537783955606878) IS TRUE), (x'' IN (591670776, 0.7691610335713106))))) LIMIT -1607023193 OFFSET 1936053833;SELECT DISTINCT TRIM(DISTINCT (v0.c2 IN (v0.c1))) FROM v0, vt0 WHERE (x'') ORDER BY ((vt0.c0 IN ()) IN (((v0.c2) IS TRUE), v0.c1 COLLATE RTRIM))  NULLS FIRST LIMIT -1190301052 OFFSET 2032402447; -- 0ms;
SELECT ALL ((((v0.c1)IS NOT(v0.c0)))/(((((((((v0.c0)OR(v0.c2)))AND('')))OR(vt0.c0)))OR(v0.c0)))), GROUP_CONCAT(((vt0.c0)>>(v0.c0))) OVER (), CAST(-2.044415691E9 AS TEXT) FROM v0, vt0 WHERE (CASE WHEN (('-411648929') IS TRUE) THEN CASE WHEN NULL THEN x'aa29' ELSE '' END WHEN LIKELY(0.6323722535344815) THEN ROUND(0X7b4a1dd6, '-1063828706') WHEN CAST(x'0ba5' AS REAL) THEN 1073180827 COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((((CAST(v0.c0 AS BLOB))OR((- (v0.c2)))))AND(v0.c1)) FROM v0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c0)OR(vt0.c0)))OR(0.6649898717106342)) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT (((((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((x''))))AND(((vt0.c0)<>(0.11956549131589733)))))AND((vt0.c0 IN ()))) FROM v0; -- 0ms;
SELECT DISTINCT NULL, ((((v0.c0)IS NOT(v0.c2))) ISNULL), ((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)) COLLATE RTRIM FROM vt0, v0; -- 0ms;
SELECT DISTINCT (((((((vt0.c0)OR(0.943400267944793)))AND(v0.c1)), (v0.c1 IN ()), (vt0.c0 IN ())))!=((v0.c2 COLLATE BINARY, ((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)), CAST(v0.c0 AS REAL)))), ((v0.c2) ISNULL), ((((((v0.c0)*(v0.c0)))OR(((((((((v0.c0)OR('x#⢘yl	9f')))AND(v0.c0)))AND(v0.c1)))OR(v0.c1)))))OR(v0.c2 COLLATE RTRIM)) FROM v0;SELECT DISTINCT ((((x'')AND(v0.c0)))OR(NULL)) FROM v0, vt0 ORDER BY (((v0.c2)) NOT BETWEEN ((((v0.c2)>>(vt0.c0)))) AND ((((vt0.c0) NOTNULL))))  NULLS FIRST, ((((vt0.c0, v0.c0, v0.c2)) NOT BETWEEN ((v0.c0, v0.c2, vt0.c0)) AND ((vt0.c0, v0.c0, vt0.c0))) IN ())  NULLS FIRST; -- 0ms;
SELECT HEX(NULL) FROM v0, vt0 WHERE (CAST((('1558078429') BETWEEN (NULL) AND ('y蠔{Wm4m|鉣')) AS BLOB)) GROUP BY ((CASE v0.c1  WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END) NOTNULL) HAVING CASE WHEN v0.c1 THEN ((NULL)==(v0.c2)) END LIMIT -679559237 OFFSET 1320715539; -- 0ms;
SELECT DISTINCT ((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END) ISNULL) FROM vt0, v0 WHERE (((((((0.27752313388282)OR(0x38d41d9f)))OR(0.9673380515542377)))>>(CASE WHEN 0.17608029717488716 THEN NULL ELSE '1904282999' END))); -- 0ms;
SELECT ALL (vt0.c0 IN ()) COLLATE BINARY FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((v0.c0 IN ()) IN ()), CASE WHEN CASE NULL  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c2 WHEN v0.c1 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 ELSE '357832994' END THEN (((v0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))) ELSE ((v0.c0) NOT BETWEEN (v0.c0) AND (vt0.c0)) END, ((CAST(vt0.c0 AS REAL))%(v0.c1)), ((((((((LOWER(DISTINCT -1867986590))AND((vt0.c0 IN ()))))OR((~ (v0.c2)))))OR((((v0.c0)) BETWEEN ((v0.c0)) AND ((vt0.c0))))))OR(json_patch(v0.c2, vt0.c0))), v0.c0 FROM vt0, v0 WHERE ((((('')AND((('L#o') BETWEEN (NULL) AND ('76024611')))))AND((((0.9113803398252772))>((x'')))))) GROUP BY v0.c2; -- 0ms;
SELECT ALL ABS((v0.c1 IN ())) FROM v0 WHERE ((((((0.23943245794396706)) BETWEEN ((x'5981')) AND ((NULL))))IS((0.5535249728528162 IN ())))); -- 0ms;
SELECT ((((vt0.c0)>=(vt0.c0))) ISNULL) FROM v0;SELECT v0.c0 FROM v0, vt0 WHERE (CAST(x'' COLLATE BINARY AS NUMERIC)) ORDER BY (~ (CAST(v0.c0 AS TEXT))), ((((UNLIKELY(vt0.c0))AND(CASE WHEN v0.c2 THEN vt0.c0 END)))OR('I蛖'))  NULLS FIRST; -- 0ms;
SELECT DISTINCT v0.c2 FROM vt0 WHERE (((((((((((0.29457807668908065) BETWEEN (NULL) AND (0.06916775930316932)))OR(((797244609) BETWEEN (x'b93d') AND ('-679559237')))))AND(((0x1fa4db96) NOT BETWEEN (NULL) AND ('0.3140417192963927')))))AND((('1474784390') NOT NULL))))OR(((NULL)AND(1.880923169E9)))));SELECT ALL ((0.4007650432249492) BETWEEN ('-597795307') AND (((vt0.c0)||(v0.c0)))) FROM vt0;SELECT DISTINCT ((((v0.c2)OR(v0.c2)))AND(NULL)) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((v0.c1, v0.c1, v0.c2)) BETWEEN ((v0.c1, v0.c2, v0.c2)) AND ((vt0.c0, 0.8226242215789972, x'')))))<((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c2 END))), (((v0.c2)) BETWEEN ((CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 WHEN v0.c1 THEN v0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END)) AND ((CAST(v0.c1 AS REAL)))), 0.29739306256572795 FROM vt0, v0 WHERE (CASE NULL  WHEN JULIANDAY(x'4fd0', NULL, 0x1c40423b) THEN ((('VoC^+', NULL, x'ff0b'))<>((-1815474542, 'λ\rPB', ''))) ELSE CAST(x'c083' AS REAL) END); -- 0ms;
SELECT ALL (CAST(vt0.c0 AS INTEGER) IN (v0.c2)) FROM vt0, v0 GROUP BY CAST(((((v0.c0)OR(vt0.c0)))OR('1144146004')) AS INTEGER), (~ (((vt0.c0)OR(v0.c0)))), TRIM(DISTINCT (vt0.c0 IN (v0.c0))) HAVING COALESCE(DISTINCT (NOT (v0.c2)), '极l+G'); -- 3ms;
SELECT CASE WHEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) THEN (~ (v0.c1)) WHEN ((v0.c2)OR(v0.c0)) THEN (vt0.c0 IN ()) WHEN GROUP_CONCAT(v0.c1) THEN x'' WHEN ((((v0.c0)AND(v0.c1)))AND(vt0.c0)) THEN '-1407864054' WHEN v0.c0 THEN COUNT(v0.c2) ELSE ((v0.c1)AND(vt0.c0)) END, (v0.c1 IN ()), ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) COLLATE NOCASE FROM v0;SELECT DISTINCT CASE WHEN '-1158105787' THEN ((((vt0.c0)AND(0.651726447201391)))AND(vt0.c0)) ELSE ((v0.c0) IS FALSE) END FROM v0;SELECT (GROUP_CONCAT(v0.c2) IN ()) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT v0.c1 FROM v0, vt0; -- 0ms;
SELECT MAX(((v0.c0)+(vt0.c0))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT CAST(CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c1 END AS BLOB) FROM v0, vt0 WHERE (CAST('3LGR%Q' AS NUMERIC) COLLATE NOCASE) LIMIT 1345833978; -- 0ms;
SELECT ((((v0.c2) NOT BETWEEN (v0.c1) AND (vt0.c0))) NOT NULL) FROM v0;SELECT CAST(((v0.c1) IS FALSE) AS REAL) FROM vt0, v0 ORDER BY CASE WHEN 0.21538777133518983 COLLATE RTRIM THEN (((v0.c2)) BETWEEN ((v0.c0)) AND ((vt0.c0))) END; -- 0ms;
SELECT DISTINCT (- ((~ (x'43d37e78')))), v0.c1, v0.c2 FROM v0 WHERE (((('VQ2L,' IN ()))<((((((((('-918301525')OR(x'2218')))AND(NULL)))OR('1742624815')))AND(0Xffffffff8729b6e8))))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT v0.c1) FROM v0, vt0 WHERE ((+ (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT '762758416', (+ (((v0.c1) BETWEEN (vt0.c0) AND (v0.c0)))), (((vt0.c0)GLOB(x'')) IN ()) FROM v0;SELECT DISTINCT UPPER(DISTINCT vt0.c0) COLLATE RTRIM FROM vt0, v0; -- 0ms;
SELECT ((((vt0.c0)/(v0.c0)))IS NOT(((v0.c0)+(v0.c0)))) FROM v0, vt0 WHERE (((x'') ISNULL) COLLATE NOCASE); -- 0ms;
SELECT (((((v0.c0)AND(v0.c1)))AND(v0.c2)) IN ()) FROM vt0 WHERE (CAST(NULL AS INTEGER)); -- 0ms;
SELECT DISTINCT v0.c1 FROM v0, vt0; -- 0ms;
SELECT DISTINCT (json_type(vt0.c0) IN ()), ((('oQ', NULL, v0.c2)) BETWEEN ((CAST(v0.c0 AS BLOB), ((((v0.c1)OR(vt0.c0)))OR(v0.c1)), (- (vt0.c0)))) AND ((((v0.c0) ISNULL), v0.c1 COLLATE NOCASE, ((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))))), (((((((v0.c1, v0.c0, v0.c0))<>((v0.c2, vt0.c0, v0.c0))))AND(CAST(v0.c0 AS BLOB))))AND(((v0.c1) IS FALSE))) FROM vt0;SELECT ((MIN(v0.c2)) BETWEEN ((~ (vt0.c0))) AND (CASE v0.c1  WHEN v0.c2 THEN v0.c2 WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN vt0.c0 END)), ((v0.c0 COLLATE BINARY)=(((NULL) NOT BETWEEN (v0.c2) AND (x'')))), GROUP_CONCAT(CAST(v0.c2 AS BLOB)) FROM v0 WHERE (CAST((NULL IN ()) AS INTEGER)) LIMIT -1861529836;SELECT DISTINCT (((((vt0.c0)OR(v0.c0)))OR(v0.c1)) IN ()) FROM v0 WHERE ((((x'51b2' IN ())) BETWEEN (CAST(x'' AS REAL)) AND (((NULL)>>('zu'))))); -- 0ms;
SELECT ALL (v0.c0 COLLATE BINARY IN ()) FROM v0; -- 0ms;
SELECT ((((vt0.c0) NOTNULL))<<(CASE WHEN v0.c2 THEN vt0.c0 END)) FROM v0, vt0 WHERE ((((((NULL)) BETWEEN ((0.4956479710504763)) AND ((NULL))))<=(0.6909074465551416 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((MIN(v0.c0)) NOTNULL) FROM v0 WHERE (((((NULL)<<('1146218744')))||((((''))=((NULL)))))) GROUP BY (((vt0.c0, v0.c0, v0.c1)) NOT BETWEEN ((v0.c1 COLLATE NOCASE, ((vt0.c0)+(v0.c0)), CAST(v0.c1 AS REAL))) AND ((0.9972619933055115 COLLATE RTRIM, ((((v0.c2)OR(v0.c0)))AND(0x5504085e)), NULL))), ((((((v0.c1)/(v0.c0)))AND(IFNULL(vt0.c0, vt0.c0))))AND(NULL)), vt0.c0 HAVING (COUNT(v0.c0) IN (((v0.c2)>>(v0.c2))));SELECT DISTINCT (((v0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((+ (v0.c1)), CASE WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN -3.0808236E8 WHEN v0.c1 THEN v0.c2 ELSE v0.c2 END, ((v0.c2)|(v0.c0)))) AND ((CAST(v0.c0 AS INTEGER), (- (v0.c2)), CASE v0.c0  WHEN v0.c0 THEN v0.c2 ELSE v0.c0 END))) FROM v0 WHERE (CAST(((((NULL)AND('')))AND(0.672810769512572)) AS BLOB));SELECT DISTINCT (((v0.c1 IN (vt0.c0)))/((v0.c2 IN (v0.c0, v0.c0)))), (((((v0.c0) NOT BETWEEN ('') AND (v0.c0)), ((((((((v0.c1)AND(v0.c2)))AND(v0.c0)))OR('')))AND(v0.c1)), v0.c0 COLLATE BINARY, (v0.c1 IN ()), v0.c0))>=(((v0.c2 IN ()), v0.c0 COLLATE NOCASE, ((v0.c1) BETWEEN ('鉬x}\r') AND ('b')), CASE WHEN vt0.c0 THEN v0.c0 WHEN v0.c1 THEN 0.5218814635027509 WHEN v0.c1 THEN v0.c1 ELSE v0.c1 END, (v0.c2 IN ())))), ((~ (v0.c0)) IN ()) FROM vt0, v0; -- 1ms;
SELECT DISTINCT '', (((v0.c0)) BETWEEN (((v0.c0 IN ()))) AND ((((v0.c1)-(v0.c1))))), CAST(((((((((vt0.c0)AND(v0.c1)))OR(v0.c0)))AND(v0.c2)))OR(v0.c2)) AS TEXT), ((v0.c0)GLOB(v0.c2)) COLLATE NOCASE, ((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)) COLLATE BINARY FROM v0 WHERE ((('-1745751334')>>(NULL)) COLLATE BINARY);SELECT DISTINCT (1880923169 IN ()), ((((MAX(v0.c0))AND(((v0.c2)IS NOT(vt0.c0)))))OR(((v0.c0) BETWEEN (v0.c0) AND (0.7649542087362365)))), CAST(((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)) AS TEXT) FROM vt0 GROUP BY STRFTIME((((vt0.c0, v0.c1, v0.c1, -1.607023193E9, v0.c0))==((vt0.c0, v0.c0, vt0.c0, v0.c0, v0.c0))), (vt0.c0 IN (v0.c1)), NULL, (~ (vt0.c0)), (NOT (v0.c1))) HAVING CASE GROUP_CONCAT(vt0.c0)  WHEN (('')=(vt0.c0)) THEN TOTAL(0.5302648153159866) END;SELECT DISTINCT (((vt0.c0, vt0.c0, v0.c2)) NOT BETWEEN ((x'' COLLATE RTRIM, (v0.c1 IN (vt0.c0)), ((v0.c2)&(v0.c2)))) AND ((x'9b93', 0.39133347990913636, ((v0.c0)LIKE(NULL))))), ((((((v0.c2)GLOB(v0.c0)))AND(0.6654469131992168)))AND(((((((((vt0.c0)OR(vt0.c0)))AND(v0.c1)))OR(v0.c0)))OR(v0.c2)))), (((((v0.c1))>=((v0.c1))))*(((NULL) IS FALSE))) FROM v0, vt0 GROUP BY CAST(((vt0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0)) AS REAL); -- 0ms;
SELECT ALL CASE WHEN x'b7b5' THEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN v0.c0 END END FROM vt0 ORDER BY ((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c1 END)-(((((v0.c0)AND(vt0.c0)))AND(v0.c2))))  NULLS LAST, ((vt0.c0 COLLATE NOCASE)OR(((v0.c2) NOT NULL)))  NULLS LAST;SELECT ALL (SUM(v0.c2) IN ((((v0.c2, v0.c2, NULL)) NOT BETWEEN ((v0.c1, v0.c2, v0.c1)) AND ((v0.c1, vt0.c0, x'233e'))))), (~ ((NOT (v0.c0)))), ((v0.c1)<<(v0.c1)) COLLATE BINARY FROM v0, vt0 WHERE (TRIM(DISTINCT ((0.8392501166638722)IS NOT(0Xffffffffba818814)))); -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN (((('')%(v0.c2)))) AND (((('1531566287')GLOB(v0.c0))))), ((CASE WHEN v0.c2 THEN v0.c0 END)%((v0.c0 IN ()))), (- (CAST(v0.c0 AS BLOB))) FROM v0 LEFT OUTER JOIN vt0 ON ((((v0.c2) NOTNULL)) ISNULL); -- 0ms;
SELECT DISTINCT LIKELIHOOD(-583921146, 0.29168969807049605) FROM vt0 ORDER BY ((((CASE WHEN vt0.c0 THEN v0.c0 END)AND(((((v0.c0)AND(v0.c0)))OR(x'')))))OR(CASE v0.c0  WHEN 0.28398292038547346 THEN v0.c2 ELSE vt0.c0 END))  NULLS LAST;SELECT ALL LENGTH(MAX(v0.c1, v0.c0)) FROM vt0, v0 LIMIT -246903034 OFFSET 1621318418; -- 1ms;
SELECT (((- (v0.c0))) BETWEEN ((v0.c1 IN (v0.c1, v0.c1))) AND (v0.c2 COLLATE NOCASE)) FROM v0 WHERE ((((0.07983137556293163 IN ()))OR('fV&G' COLLATE NOCASE))); -- 0ms;
SELECT LOWER(CAST(vt0.c0 AS BLOB)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((0x3c920edd) BETWEEN (v0.c1) AND (0.16087014745722283)) AS INTEGER), ((TRIM(DISTINCT v0.c2))*((('155451977')/(vt0.c0)))), ((((((v0.c2)AND(vt0.c0)))AND(v0.c1)))IS NOT(((vt0.c0) NOT BETWEEN (v0.c1) AND (vt0.c0)))), ((((((v0.c2)AND(vt0.c0)))AND(v0.c0))) IS FALSE), ((((0xffffffffe8499198)%(vt0.c0)))=(((v0.c0)>>(v0.c0)))) FROM vt0 WHERE ((((((((((+ (NULL)))OR('')))AND(TYPEOF(DISTINCT x'6b9b'))))AND((('1685151238') NOT BETWEEN ('') AND (0xffffffffb2055495)))))OR((((-2097609745))>((0.8375161936374899))))));SELECT (NOT ((((NULL, vt0.c0, vt0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c2)) AND ((v0.c0, v0.c1, vt0.c0))))), NULLIF(v0.c1, ((((v0.c1)AND(v0.c1)))AND(v0.c0))), ((((vt0.c0) BETWEEN (v0.c2) AND (vt0.c0)))>=(((((v0.c1)AND('&j''<''')))AND(v0.c1)))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((v0.c0)AND(vt0.c0)))OR(v0.c2))) NOT BETWEEN (SUM(v0.c1)) AND (((v0.c2)>=(v0.c0)))) FROM v0;SELECT ALL ((CAST(v0.c2 AS BLOB)) NOT NULL), CASE WHEN ((v0.c1)IS NOT(v0.c0)) THEN (('-464748432') BETWEEN (NULL) AND (vt0.c0)) END, CAST(((v0.c2)+(v0.c1)) AS TEXT), ((v0.c0 COLLATE NOCASE)*(((0xffffffffcb9e1f4c) ISNULL))), (((((v0.c2)<(vt0.c0)), (v0.c1 IN (v0.c0)), ((v0.c1)>>(v0.c2))))<((CASE '&U#'  WHEN vt0.c0 THEN v0.c0 END, ((v0.c2)*(vt0.c0)), '-1508552861'))) FROM v0;SELECT ((((+ (v0.c0))))<=(((v0.c2 IN (v0.c1))))) FROM vt0, v0 GROUP BY vt0.c0 HAVING COUNT(*); -- 0ms;
SELECT ((((v0.c1)GLOB(v0.c2)))GLOB(((v0.c0)>(0xffffffffb0df8b2b)))), 0Xffffffffa618d585 COLLATE RTRIM, (~ (load_extension(v0.c1, v0.c0))) FROM v0; -- 1ms;
SELECT NTH_VALUE(((v0.c2) NOT NULL) COLLATE RTRIM, (NOT (((((vt0.c0)OR(v0.c0)))OR(v0.c0))))) OVER () FROM v0, vt0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c0))) BETWEEN (CAST(v0.c1 AS INTEGER)) AND (0.6907152884701186)) FROM vt0, v0 GROUP BY CASE WHEN ((v0.c1) NOT NULL) THEN x'b9eb' WHEN 'L,}' THEN (v0.c0 IN ()) WHEN ((vt0.c0)=(v0.c1)) THEN (((NULL))<>((v0.c0))) ELSE (((v0.c2))<((v0.c2))) END HAVING CAST(CASE 'y>_<'  WHEN NULL THEN vt0.c0 ELSE v0.c0 END AS TEXT); -- 0ms;
SELECT ALL (+ ((v0.c0 IN ()))), (((v0.c2 IN (v0.c1))) NOT BETWEEN (json_array_length(v0.c2, vt0.c0)) AND (CAST(v0.c0 AS NUMERIC))), ((v0.c1)>>(0.6615041033018177)) FROM v0, vt0 WHERE (CAST((~ ('%')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((((v0.c1) BETWEEN (v0.c1) AND ('xjRutj2')))<(CASE v0.c0  WHEN v0.c1 THEN '**' ELSE v0.c1 END)), 1.898233081E9 COLLATE RTRIM, '-762073641' FROM vt0;SELECT DISTINCT ((0X13e050f9) IS FALSE) COLLATE BINARY, (((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)) IN ()), (((v0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS REAL))) AND ((CAST(v0.c1 AS TEXT)))) FROM vt0 WHERE ((((NOT ('')))&(((((NULL)AND(1.833275376E9)))AND('-798722156')))));SELECT DISTINCT ((((v0.c2) BETWEEN (v0.c0) AND (v0.c2)))>>(COALESCE(DISTINCT v0.c1, 0.2063282357296159))) FROM vt0 WHERE (((((((0.004711368131923632)<<('0.9163445908623956')))AND(CASE WHEN x'' THEN 'v	11' WHEN '-1923064965' THEN x'9690' WHEN -997881766 THEN 0.7577125279147963 ELSE '8s\r2J' END)))OR(((0.7912243460880691)-(''))))) GROUP BY CASE ((((v0.c0)AND(v0.c1)))OR(v0.c2))  WHEN ((v0.c2) IS TRUE) THEN ((vt0.c0)AND(vt0.c0)) WHEN v0.c2 COLLATE RTRIM THEN CAST(v0.c0 AS BLOB) WHEN v0.c0 THEN 505024047 ELSE ((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END;SELECT DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE FROM vt0, v0 WHERE ((((((((((('ጥoGK')AND(x'')))OR(NULL)))OR(x'')))OR(x'')))IS NOT(CASE x'9dd9'  WHEN NULL THEN 'Z)>{[*' END))); -- 0ms;
SELECT DISTINCT (('-404998355')*(v0.c1 COLLATE BINARY)) FROM vt0, v0; -- 1ms;
SELECT DISTINCT TOTAL(CAST(v0.c2 AS BLOB)) FROM vt0, v0 WHERE (CASE '*w^'  WHEN '-1481789045' THEN 0.3733487451603893 ELSE '' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NULL FROM v0, vt0; -- 0ms;
SELECT ALL ((((vt0.c0) IS FALSE)) NOT NULL), COALESCE(DISTINCT LIKE(v0.c2, v0.c1, '1'), ((v0.c0) BETWEEN (x'2ed5') AND (v0.c1)), v0.c0 COLLATE NOCASE, ((((((((v0.c0)AND(vt0.c0)))OR(vt0.c0)))AND(v0.c1)))AND(vt0.c0))), ((SUM(v0.c1)) NOT BETWEEN (((v0.c2) IS FALSE)) AND ('-1009189762')) FROM v0;SELECT ALL ((COUNT(v0.c0))IS((((v0.c1))>((v0.c0))))) FROM v0 WHERE ((((('*') IS FALSE))<<(TRIM(DISTINCT 0.4579085506314555)))) LIMIT 592335103 OFFSET -2092133359; -- 0ms;
SELECT DISTINCT CAST(v0.c1 AS BLOB) COLLATE RTRIM FROM v0 WHERE ((((('Ml')||(NULL))) BETWEEN (0.25027422365374796) AND ((NULL IN ())))) GROUP BY (((((v0.c0, x'', vt0.c0))<>((v0.c0, v0.c2, v0.c2)))) IS FALSE);SELECT ALL (((COUNT(vt0.c0)))<>((LTRIM(vt0.c0, v0.c0)))) FROM vt0, v0 WHERE (ABS(DISTINCT ((NULL) IS FALSE))) GROUP BY CASE ((v0.c1)IS NOT(v0.c0))  WHEN (~ (v0.c0)) THEN CASE WHEN v0.c1 THEN x'' WHEN v0.c2 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END WHEN ((NULL) NOTNULL) THEN CAST(v0.c1 AS TEXT) WHEN ((0.7691610335713106)<=(v0.c2)) THEN ((vt0.c0)>=(v0.c0)) ELSE ((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2)) END, ((((v0.c1) NOTNULL)) NOT NULL), (1.880923169E9 IN ()) HAVING ((((vt0.c0)>=(vt0.c0))) NOT BETWEEN (((((((((v0.c2)OR(v0.c1)))AND(v0.c2)))OR(vt0.c0)))AND(vt0.c0))) AND ((NULL IN ()))); -- 0ms;
SELECT DISTINCT x'822d', ((((LTRIM(v0.c2))AND((NOT (v0.c0)))))AND(CAST(v0.c0 AS REAL))), ((((v0.c1)OR(v0.c2)))IS(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)))) FROM v0 WHERE ((((NULL IN (NULL, 0Xffffffffaf8a2ae0))) ISNULL)) GROUP BY v0.c2 HAVING ((v0.c0)|((v0.c2 IN (v0.c1)))); -- 0ms;
SELECT ((x'4fd9')-(CAST(v0.c1 AS BLOB))) FROM v0, vt0 WHERE (CAST((((x'', NULL, x''))>(('r-/', NULL, 0.762098485932474))) AS TEXT)); -- 0ms;
SELECT DISTINCT json_array_length(QUOTE(x''), AVG(v0.c1)) FROM vt0, v0 WHERE ((((((((('x6')OR('DbI')))AND(NULL)))OR((('-2108765799')*('')))))AND(CAST(0.7867856311963649 AS NUMERIC)))) ORDER BY CASE CASE WHEN v0.c0 THEN x'' WHEN x'' THEN v0.c2 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN LIKELY(v0.c2) THEN CASE WHEN x'0205' THEN v0.c1 END ELSE (NOT (vt0.c0)) END  NULLS FIRST;SELECT DISTINCT AVG(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT '-9223372036854775808' FROM vt0, v0; -- 0ms;
SELECT ALL CASE CASE WHEN v0.c0 THEN v0.c2 END  WHEN '951308750' THEN v0.c2 COLLATE BINARY ELSE ((v0.c0)>>('1-500000')) END FROM vt0, v0 WHERE (CASE x''  WHEN -2.097609745E9 THEN x'' WHEN '-1180872800' THEN '0.9972619933055115' WHEN -1453588875 THEN 0X26f566f END COLLATE RTRIM) LIMIT -667181144 OFFSET -146285418; -- 0ms;
SELECT DISTINCT FIRST_VALUE((NOT (((v0.c1) BETWEEN (v0.c2) AND (v0.c0))))) OVER ( ORDER BY ((vt0.c0) IS TRUE) COLLATE NOCASE  NULLS LAST, (((((((vt0.c0)AND(v0.c2)))AND(v0.c2))))<=((CASE WHEN 0.8061468796246387 THEN v0.c0 WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c1 END))) ASC  NULLS FIRST, UPPER(DISTINCT (vt0.c0 IN ()))  NULLS FIRST) FROM v0;SELECT (((((((vt0.c0, v0.c0, vt0.c0))>=((v0.c0, v0.c2, v0.c1))))OR((NOT (v0.c0)))))AND(CAST(v0.c2 AS INTEGER))) FROM vt0 WHERE ((((- ('-696288752'))) IS TRUE));SELECT DISTINCT ((+ (vt0.c0)) IN ()), ((((v0.c2 IN (v0.c2))))!=(((+ (v0.c1))))), ((((((v0.c1)OR(v0.c1)))AND(vt0.c0)))>>(CAST(v0.c0 AS NUMERIC))) FROM v0 WHERE (((((x'') NOT BETWEEN (0.4460161419187003) AND ('##c#FX/'''))) NOT BETWEEN (CASE WHEN x'' THEN NULL END) AND (((1880923169)<>(NULL)))));SELECT ALL ((((v0.c1) NOTNULL)) NOT NULL), ((v0.c0) NOTNULL), ((CASE WHEN v0.c2 THEN NULL WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 END) NOTNULL) FROM vt0, v0; -- 1ms;
SELECT ((((x'ee4f') IS FALSE))<<(CASE WHEN 0X8454465 THEN v0.c0 ELSE v0.c2 END)) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((LIKELY(DISTINCT ''))) AND ((('-696288752' IN ())))));SELECT DISTINCT (CASE vt0.c0  WHEN v0.c2 THEN 'HN' WHEN vt0.c0 THEN vt0.c0 WHEN 0.00688443892533841 THEN v0.c2 END IN ()) FROM v0, vt0 WHERE ('/2K+''' COLLATE NOCASE); -- 0ms;
SELECT ALL (TOTAL(v0.c0) IN ()), GROUP_CONCAT(CASE WHEN 0.5596924985109196 THEN v0.c1 WHEN '631897233' THEN x'c171' WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 END), (- ('h/%,')) FROM vt0 WHERE ((- ((('dc')!=(NULL))))) GROUP BY (NOT (v0.c0)), (((v0.c1, v0.c0, v0.c0, v0.c0, 0.41360936000648385)) BETWEEN ((v0.c0, v0.c2, v0.c1, v0.c0, NULL)) AND ((v0.c1, '1904282999', vt0.c0, vt0.c0, v0.c1))) COLLATE RTRIM, ((((((v0.c2)AND(v0.c0)))OR(v0.c0))) NOT NULL), v0.c2, (((CASE vt0.c0  WHEN vt0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c2 THEN vt0.c0 END))<(((- (vt0.c0)))));SELECT DISTINCT (+ (v0.c1 COLLATE RTRIM)) FROM vt0, v0 WHERE ((CAST('U垂' AS TEXT) IN ())); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((((v0.c0)AND(v0.c0)))OR(v0.c1))) FROM v0; -- 6ms;
SELECT DISTINCT CAST(IFNULL(v0.c1, vt0.c0) AS REAL) FROM v0, vt0 WHERE (CAST('' COLLATE NOCASE AS TEXT)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((v0.c0 IN ())), (((v0.c0 IN (v0.c2)))/(CAST(v0.c1 AS REAL))), (((NULL)) BETWEEN ((CAST(0xffffffffd83b9fa8 AS NUMERIC))) AND ((('' IN ())))) FROM v0, vt0; -- 0ms;
SELECT ALL (((((- (0.28255742993576094)))OR(((v0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))))OR(CAST(vt0.c0 AS INTEGER))) FROM vt0, v0; -- 1ms;
SELECT ALL -656564708, COUNT(*) OVER (), ((((vt0.c0) IS FALSE)) BETWEEN (((v0.c0)-(v0.c0))) AND (((((((((v0.c0)AND(v0.c2)))OR(vt0.c0)))AND(v0.c0)))OR(v0.c0)))) FROM vt0 WHERE (((CAST(x'' AS BLOB))IS(((0.7349087286289845)/(0x4fd231d4)))));SELECT DISTINCT v0.c0 FROM vt0, v0 WHERE (((CAST(NULL AS BLOB)) NOTNULL)) ORDER BY ((((v0.c0) NOT BETWEEN (-1027667508) AND (v0.c0)))%(((v0.c2) ISNULL))) ASC  NULLS FIRST; -- 0ms;
SELECT ((((NULL COLLATE RTRIM)OR((v0.c0 IN ()))))AND((vt0.c0 IN ()))), ((TOTAL(vt0.c0)) BETWEEN (v0.c2) AND (LIKELY(v0.c2))), (((vt0.c0 IN ()))&(ABS(v0.c0))) FROM vt0;SELECT ALL ((v0.c2)LIKE(((v0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))), UPPER(DISTINCT ((NULL) NOT BETWEEN (v0.c2) AND (vt0.c0))), (((+ (v0.c0))) NOT BETWEEN (((vt0.c0)*(v0.c1))) AND ((v0.c2 IN (v0.c2)))) FROM vt0, v0 WHERE ((((('') IS FALSE))+(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT ((((((((((v0.c1)OR(v0.c0)))OR(v0.c2)))AND(vt0.c0)))OR(v0.c2)))>=(((v0.c0) BETWEEN (v0.c1) AND ('0.41220297317059196')))) FROM vt0 WHERE ((((-1984403413, 0.09805301817524592, 0.6117676079450031)) BETWEEN ((0.2345286252484644, 'BwRDb?', -7.98722156E8)) AND ((NULL, 0.13769757367487667, ''))) COLLATE RTRIM) ORDER BY ((v0.c0 COLLATE NOCASE) NOT BETWEEN ((((0.6907152884701186, v0.c2, v0.c1))<=((v0.c2, v0.c0, v0.c0)))) AND (((v0.c1)+(v0.c1)))) ASC  NULLS FIRST;SELECT DISTINCT (ABS(0.5624925306807859) IN (((NULL) ISNULL), ((((v0.c0)AND(v0.c0)))OR(v0.c1)), (v0.c0 IN ()))) FROM vt0, v0 GROUP BY 0.5175024517689237 HAVING ((CASE v0.c2  WHEN v0.c1 THEN v0.c1 WHEN v0.c1 THEN v0.c1 WHEN vt0.c0 THEN v0.c2 ELSE v0.c1 END) IS TRUE); -- 0ms;
SELECT ALL CAST(((((vt0.c0)OR(v0.c1)))AND(v0.c0)) AS TEXT) FROM v0, vt0 WHERE ((~ (x''))); -- 0ms;
SELECT DISTINCT (((v0.c1 IN ()))IS(((vt0.c0) NOT BETWEEN (v0.c2) AND (NULL)))) FROM vt0 ORDER BY ((LOWER(v0.c0))<<(v0.c2)) DESC  NULLS FIRST, ((((v0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))/(TRIM(DISTINCT v0.c2))) ASC LIMIT -1896192763;SELECT ALL json_type(CAST(v0.c2 AS TEXT)), vt0.c0, CAST(((vt0.c0)==(v0.c1)) AS NUMERIC) FROM vt0 WHERE (((0.3402689053433312) ISNULL));SELECT DISTINCT NULL FROM v0 WHERE (((((x'') NOT BETWEEN (NULL) AND ('')))||('-1922380066'))) ORDER BY ((((vt0.c0) NOTNULL)) BETWEEN (((v0.c1)>(vt0.c0))) AND ((+ (vt0.c0)))) DESC  NULLS LAST, ((((vt0.c0) ISNULL)) NOT NULL);SELECT DISTINCT (((v0.c0 COLLATE RTRIM, ((v0.c0)IS(v0.c1)), (+ (v0.c0))))<=((x'', SUM(v0.c1), ((v0.c2)==(v0.c1))))) FROM vt0, v0 WHERE (((((CAST(x'e563' AS BLOB))OR(x'')))AND(CASE WHEN x'e8d7' THEN x'20e8' END))); -- 0ms;
SELECT DISTINCT NTILE('877150271') OVER () FROM v0 WHERE (((NULL)LIKE(0.7364293064907061)) COLLATE NOCASE) LIMIT 610973204; -- 0ms;
SELECT ALL v0.c1, ((CAST(v0.c1 AS REAL))<(((((v0.c0)AND(v0.c1)))AND(v0.c0)))), (((CAST(v0.c1 AS INTEGER)))>((v0.c2))) FROM v0, vt0; -- 0ms;
SELECT '-366499132' FROM vt0 WHERE (((((0.6568405696343587)*(NULL)))<<(((0Xffffffffa3efba88)LIKE(x''))))) LIMIT 4153627; -- 0ms;
SELECT CAST((NOT (NULL)) AS REAL) FROM vt0; -- 0ms;
SELECT ALL ((((x'7c5c') ISNULL)) ISNULL) FROM v0, vt0 ORDER BY CAST(((v0.c1)|(v0.c1)) AS INTEGER)  NULLS FIRST; -- 0ms;
SELECT ALL NULL FROM vt0, v0; -- 0ms;
SELECT (+ (CASE v0.c1  WHEN v0.c0 THEN v0.c2 WHEN v0.c2 THEN v0.c1 WHEN v0.c1 THEN v0.c0 ELSE v0.c1 END)), (((((1.628000019E9))<>((v0.c0)))) NOT BETWEEN (((v0.c2)&(vt0.c0))) AND (CAST(v0.c0 AS INTEGER))), COUNT(*) OVER () FROM vt0;SELECT DISTINCT (~ (((v0.c2) NOT BETWEEN (v0.c1) AND (x'c0dc')))) FROM v0, vt0 WHERE ((((NULLIF('1934547258', x'')))>=(((('-2097914986') IS FALSE))))); -- 0ms;
SELECT (((+ (v0.c1))) BETWEEN (x'') AND (((v0.c0) IS TRUE))) FROM v0, vt0 WHERE (((((('208303993')&(NULL))))!=((CASE WHEN NULL THEN 0.730945242443426 WHEN x'' THEN x'' WHEN x'93ca' THEN '-894590294' ELSE 'fbPu9ꯋ' END)))); -- 0ms;
SELECT DISTINCT x'', CAST(((v0.c0)<>(v0.c1)) AS NUMERIC), highlight(((vt0.c0) NOT NULL), 1.27925165E8, CASE WHEN vt0.c0 THEN v0.c1 END, ((v0.c2)-(v0.c0))) FROM v0, vt0; -- 0ms;
SELECT DISTINCT '' FROM vt0, v0 WHERE (((((((NULL)IS(0xfffffffff4811710)))OR(((((NULL)OR('LUIX)w|eB')))OR(x'')))))OR(((0.711028131408362) NOTNULL)))); -- 0ms;
SELECT (+ (((v0.c1) IS TRUE))) FROM vt0 WHERE (0X7d778b69) GROUP BY (((v0.c0) BETWEEN (v0.c2) AND (0xffffffffb3fd836d)) IN ());SELECT ALL FIRST_VALUE((NULL COLLATE BINARY IN ())) OVER () FROM v0 WHERE ((('930310466') NOT BETWEEN (NULL) AND ('669466556')) COLLATE BINARY); -- 10ms;
SELECT DISTINCT (((+ (vt0.c0))) NOT BETWEEN ((vt0.c0 IN ())) AND (CAST(v0.c1 AS REAL))) FROM v0, vt0 WHERE (CASE ((NULL) BETWEEN ('') AND (0.6203243816536488))  WHEN (x'' IN ()) THEN ((NULL) NOT BETWEEN ('>Q?8_') AND ('')) WHEN ((')᧶') NOT NULL) THEN ((((0xffffffffd7aee545)OR(NULL)))OR(x'5bbb')) WHEN ((NULL)OR(NULL)) THEN (- ('I*C.p洰_')) ELSE CHANGES() END) LIMIT -206408349 OFFSET -1918205195; -- 0ms;
SELECT ((((vt0.c0, vt0.c0, v0.c2, v0.c2, v0.c0))=((vt0.c0, vt0.c0, v0.c0, vt0.c0, v0.c1))) IN (((((v0.c0)AND(vt0.c0)))AND(v0.c0)))) FROM v0, vt0; -- 0ms;
SELECT ALL ((((((((v0.c1 COLLATE NOCASE)OR(json_array(v0.c2, vt0.c0, v0.c2, v0.c1))))OR(((((v0.c1)OR('[SUJ[')))OR(vt0.c0)))))OR(CASE WHEN v0.c2 THEN vt0.c0 ELSE vt0.c0 END)))OR(((((((((vt0.c0)AND('0.8729776893740493')))AND(v0.c2)))AND(vt0.c0)))AND(v0.c1)))) FROM v0;SELECT (NOT (UPPER(v0.c2))) FROM v0; -- 0ms;
SELECT DISTINCT CAST(v0.c2 AS INTEGER) FROM v0 WHERE (CAST(((('-1149781573')) NOT BETWEEN ((NULL)) AND (('609382459'))) AS BLOB)); -- 0ms;
SELECT (+ (COUNT(vt0.c0))), ((v0.c1 COLLATE BINARY)-(((((((((((((v0.c2)OR(vt0.c0)))OR(v0.c0)))OR(v0.c1)))AND(v0.c0)))OR(v0.c1)))AND(v0.c0)))), (~ (MIN(v0.c2))) FROM vt0, v0 WHERE (((((0xffffffff8624b135)OR('1677991917')))OR(0.5798460180828542)) COLLATE RTRIM) GROUP BY 0X3642b886 HAVING (((v0.c2, (((v0.c1, v0.c1, v0.c2)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c0)) AND ((vt0.c0, vt0.c0, v0.c2))), ((v0.c2)!=(vt0.c0))))=(((- (vt0.c0)), ((((((((v0.c2)OR(0.5750395611717188)))OR(v0.c1)))OR(v0.c0)))AND(vt0.c0)), ((v0.c2)||(v0.c1))))) ORDER BY ((v0.c2)<<(v0.c1)) COLLATE NOCASE DESC  NULLS FIRST;SELECT DISTINCT UNLIKELY((~ (v0.c0))), ((CAST(v0.c0 AS REAL)) BETWEEN (LOWER(v0.c1)) AND (CASE vt0.c0  WHEN v0.c0 THEN NULL ELSE vt0.c0 END)), ((((v0.c1)|(v0.c1))) NOT BETWEEN (((vt0.c0) NOTNULL)) AND ((v0.c0 IN ()))) FROM vt0, v0 ORDER BY ((((v0.c0)|(v0.c2)))OR(((v0.c0)!=(v0.c1)))) DESC LIMIT -1494694362; -- 0ms;
SELECT TOTAL((((v0.c0)) BETWEEN ((v0.c1)) AND ((v0.c1)))) FROM v0 WHERE ((((((((((((((+ (0.04226871065954896)))OR('0.5360864673049014' COLLATE NOCASE)))AND(CASE WHEN '-2108765799' THEN 0X4b055fb1 ELSE 0.30777200343919164 END)))OR(CAST('489250337' AS REAL))))OR(x'')))AND((('0v') ISNULL))))AND(COALESCE(DISTINCT 1.898233081E9, NULL)))); -- 0ms;
SELECT DISTINCT CASE v0.c0  WHEN v0.c2 THEN v0.c0 END COLLATE NOCASE, (CASE v0.c1  WHEN vt0.c0 THEN x'4670' ELSE vt0.c0 END IN ()), v0.c2 FROM v0 WHERE (((((((NULL)AND('p慎DP~H7')))AND('''O-\!'))) ISNULL)); -- 0ms;
SELECT DISTINCT AVG((((0.0474267116091428)) BETWEEN ((v0.c1)) AND ((vt0.c0)))) FROM v0;SELECT DISTINCT 0.772591908966374 FROM vt0 WHERE ((((- ('oS')))&('0.7876848951585965' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT AVG(((((((((((((v0.c2)OR(x'd10b')))AND(1133111027)))OR(v0.c2)))OR(v0.c1)))OR(vt0.c0)))AND(vt0.c0)) COLLATE RTRIM) OVER (), ((((CASE WHEN v0.c1 THEN vt0.c0 ELSE v0.c1 END)OR((- (vt0.c0)))))OR((('-1607023193')OR(v0.c0)))), ((((((v0.c0)-(v0.c1)))AND((~ (0.13781336590248172)))))AND(UNLIKELY(DISTINCT v0.c0))) FROM vt0, v0 WHERE (CAST('9U#' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT (('180510526')>=(CAST(v0.c2 AS NUMERIC))) FROM vt0;SELECT DISTINCT ((((1.55451977E8)OR(((vt0.c0)+(vt0.c0)))))AND((vt0.c0 IN (v0.c0)))) FROM vt0 LEFT OUTER JOIN v0 ON v0.c1 WHERE (((0.4431450738591315)-(0.20727339698671554)) COLLATE BINARY); -- 0ms;
SELECT ((v0.c1)>>(v0.c2)) COLLATE NOCASE, ((CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 WHEN v0.c1 THEN vt0.c0 WHEN v0.c0 THEN v0.c0 END) BETWEEN (((((v0.c2)AND(v0.c0)))AND(v0.c1))) AND ((((v0.c1, v0.c1, v0.c2)) NOT BETWEEN ((v0.c0, -6.96288752E8, vt0.c0)) AND ((v0.c1, v0.c0, vt0.c0))))), ((((v0.c1) NOT BETWEEN (v0.c1) AND (v0.c0))) IS TRUE) FROM v0 WHERE (((0.8645027416542835 IN ()) IN (((x'')==(x''))))) GROUP BY ((('' IN ())) NOT NULL) HAVING (((v0.c0)) NOT BETWEEN ((((((v0.c0)AND(v0.c0)))AND(vt0.c0)))) AND ((v0.c2 COLLATE NOCASE)));SELECT ((v0.c2) ISNULL) FROM v0 WHERE ((((+ ('1551547461')))&(((x'bcb7feab')||(''))))) ORDER BY IFNULL(DISTINCT (vt0.c0 IN ()), 0X1d295e21 COLLATE NOCASE)  NULLS FIRST, (- (((vt0.c0) BETWEEN (v0.c1) AND (vt0.c0))))  NULLS FIRST, (+ (((((((((v0.c0)OR(v0.c2)))OR(v0.c0)))AND(vt0.c0)))AND(vt0.c0)))) ASC  NULLS FIRST;SELECT DISTINCT ((+ (v0.c1)) IN ()), ((((v0.c2)%(vt0.c0))) NOT NULL), FIRST_VALUE(((NULLIF(DISTINCT vt0.c0, NULL)) IS FALSE)) OVER () FROM vt0 WHERE ((((('Wh*')AND(NULL)))%(CASE '/B'  WHEN x'd959' THEN 0.3610603019072577 ELSE '' END)));SELECT DISTINCT NTILE(CASE vt0.c0 COLLATE RTRIM  WHEN ' 1e?V] ' THEN ((vt0.c0) NOTNULL) ELSE (vt0.c0 IN ()) END) OVER () FROM vt0;SELECT DISTINCT NTH_VALUE(CAST((v0.c0 IN (x'')) AS BLOB), (((v0.c2, v0.c0, v0.c1, NULL, v0.c2))=((v0.c1, v0.c2, v0.c2, v0.c2, v0.c1))) COLLATE NOCASE COLLATE BINARY) OVER () FROM v0 LIMIT -970498932 OFFSET -1816443122; -- 0ms;
SELECT DISTINCT CAST(((v0.c2) NOT NULL) AS REAL) FROM vt0, v0 WHERE ((((('''7')<>(7.32957245E8)))LIKE((((('-1508552861')AND(NULL)))OR(0.12003297226668708))))); -- 0ms;
SELECT ALL ((vt0.c0)<((v0.c2 IN ()))) FROM v0 LIMIT 1926912336 OFFSET 944147241;SELECT ALL (((v0.c0)<(vt0.c0)) IN ()) FROM v0, vt0 WHERE ((((x'e694') NOT NULL) IN ())); -- 0ms;
SELECT (CAST(v0.c2 AS TEXT) IN ()) FROM v0, vt0 WHERE (((((((((((((((-1.394377992E9)AND(x'')))AND(x'' COLLATE RTRIM)))AND((NULL IN ()))))AND(CASE 0.06242630347021638  WHEN '-2028752925' THEN '326006799' ELSE NULL END)))OR((+ ('')))))AND((((NULL)) BETWEEN ((NULL)) AND ((0.6822485427323448))))))OR(((((((((0.5993714164893154)OR('-847850305')))OR('Y	fǵ>S匿')))OR(NULL)))AND(NULL))))) LIMIT -959121323 OFFSET 775218593; -- 0ms;
SELECT DISTINCT (((((vt0.c0) BETWEEN (vt0.c0) AND (v0.c2)), ((v0.c0)<<(v0.c1)), ((vt0.c0)+(v0.c1))))=((STRFTIME(vt0.c0, '', vt0.c0), (NOT (v0.c1)), 0.572416937372482))) FROM vt0 WHERE (CAST(('OP' IN ()) AS REAL)) LIMIT 564623221 OFFSET -711734891;SELECT CAST(TRIM(DISTINCT v0.c0) AS BLOB) FROM v0 WHERE (CAST(((0.1498067048297167) NOTNULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT NULL FROM v0, vt0 WHERE (((((0.47748709657722577) NOTNULL)) NOT BETWEEN ('1428550663' COLLATE RTRIM) AND (UNLIKELY(DISTINCT '664544250')))); -- 0ms;
SELECT DISTINCT (((- (v0.c2)))=(((vt0.c0)<<(v0.c0)))) FROM v0, vt0 WHERE (((NULL) NOT BETWEEN (0.19226308627977817) AND (5382186)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT NTILE(CAST(((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)) AS BLOB)) OVER () FROM vt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0; -- 3ms;
SELECT DISTINCT NULL FROM v0, vt0 WHERE (CAST((('714459623')==(NULL)) AS INTEGER)); -- 0ms;
SELECT ((CASE vt0.c0  WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END) NOT NULL) FROM v0, vt0; -- 0ms;
SELECT DISTINCT (('') NOT BETWEEN (json_remove(v0.c2, v0.c0)) AND (CASE v0.c0  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)) FROM vt0, v0 WHERE (((json_extract(-37843810, 0.12772262723108663)) NOT BETWEEN ((0.691808572621389 IN ())) AND ((((((((('1568920859')AND('-450419028')))OR(NULL)))AND(NULL)))OR(x''))))) ORDER BY NULLIF(DISTINCT ((v0.c0) NOT NULL), v0.c2 COLLATE BINARY)  NULLS FIRST;SELECT DISTINCT (NOT (CAST(v0.c2 AS REAL))) FROM vt0 LIMIT 490296650 OFFSET -181016226;SELECT ALL ((('K1'))>((0.9296678601230721))) FROM vt0, v0 WHERE (((('#]')) NOT BETWEEN (((((NULL)) BETWEEN ((x'')) AND ((1.628000019E9))))) AND (((('Ml')>(0.5647321301479907)))))); -- 0ms;
SELECT DISTINCT CASE TOTAL(v0.c2)  WHEN ((v0.c0) IS FALSE) THEN ((v0.c0)-(0.9802749076546511)) WHEN vt0.c0 COLLATE NOCASE THEN (v0.c1 IN (x'')) WHEN ((v0.c0) NOT BETWEEN ('now\r') AND (vt0.c0)) THEN v0.c2 END, AVG(SQLITE_VERSION()), (((((v0.c0)AND('-1685623548')))OR(v0.c2)) IN ()) FROM v0, vt0 WHERE (((('-471914692')>>('c꺊~!')) IN ())); -- 0ms;
SELECT DISTINCT ((NOT (v0.c2)) IN ()), COUNT(LOWER(v0.c2) COLLATE RTRIM), CAST(((v0.c0)IS(v0.c0)) AS BLOB) FROM vt0;SELECT DISTINCT LIKELY(DISTINCT CAST(v0.c1 AS INTEGER)) FROM v0, vt0 WHERE (LIKELY(DISTINCT ('fmmN{TT' IN ()))) GROUP BY LIKELY(DISTINCT ((v0.c1) IS TRUE)), ((((((v0.c2)AND(NULL)))OR(v0.c0)))>>(COALESCE(DISTINCT v0.c2, v0.c2))), ((((((0.17608029717488716)<<(v0.c1)))OR(((v0.c1)>=(v0.c1)))))OR(((v0.c1)=(v0.c2)))) HAVING SQLITE_COMPILEOPTION_USED((NOT (v0.c1))) ORDER BY ((CASE WHEN v0.c2 THEN v0.c0 ELSE vt0.c0 END) NOTNULL) ASC  NULLS LAST; -- 0ms;
SELECT ((v0.c2 COLLATE RTRIM) NOT NULL) FROM v0, vt0 WHERE (((('1283264223' IN ())) IS FALSE)) LIMIT -696288752; -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOTNULL)) NOT BETWEEN (COUNT(*)) AND ((vt0.c0 IN ()))) FROM vt0 WHERE ((((-154605836) IS FALSE) IN ())) ORDER BY v0.c1  NULLS FIRST;SELECT DISTINCT COALESCE(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)), MAX(vt0.c0, vt0.c0)), ABS(x'ab8b'), ((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 END) BETWEEN ((v0.c0 IN ())) AND (((v0.c2) IS TRUE))) FROM v0, vt0; -- 0ms;
SELECT ALL NTILE(v0.c0) OVER () FROM v0 ORDER BY ((((((((0.9301204625229936 COLLATE RTRIM)OR(((x'6fbf') NOT BETWEEN (v0.c0) AND (vt0.c0)))))AND(CASE WHEN 0.44920831021485996 THEN NULL ELSE NULL END)))AND(v0.c1 COLLATE RTRIM)))OR(vt0.c0))  NULLS FIRST;SELECT DISTINCT vt0.c0, ((v0.c1 COLLATE BINARY)*(HEX(DISTINCT v0.c0))), v0.c1 FROM vt0, v0 WHERE (('?<' IN ())); -- 0ms;
SELECT DISTINCT ((v0.c2)-(v0.c2)) COLLATE RTRIM FROM v0, vt0 WHERE ('2091564458'); -- 0ms;
SELECT DISTINCT 1.535658463E9, TYPEOF((v0.c2 IN ())), ((0.7294899795182425) BETWEEN (((v0.c2)|(v0.c2))) AND ((0.32767440411289406 IN ()))), ((((CAST(v0.c0 AS REAL))OR(v0.c2 COLLATE BINARY)))OR(NULL)), (((- (v0.c2)))<=(CAST(v0.c0 AS INTEGER))) FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((((((((((((CAST(v0.c1 AS NUMERIC))OR((((v0.c0))>((v0.c0))))))AND(((((v0.c2)AND(vt0.c0)))AND(v0.c1)))))OR(v0.c0)))AND(((vt0.c0)%(1.934547258E9)))))AND(((vt0.c0)&(x'')))))AND(((v0.c2)*(v0.c1)))))AND(TRIM(x'be1d', x''))))OR(v0.c0 COLLATE NOCASE)) FROM v0, vt0; -- 0ms;
SELECT DISTINCT CAST(NULL AS INTEGER) FROM vt0 WHERE (LOWER(0.21018456490083737 COLLATE NOCASE)) LIMIT -898210164; -- 0ms;
SELECT v0.c0 COLLATE BINARY COLLATE BINARY COLLATE RTRIM, ((v0.c1 IN ()) IN ()), '' FROM vt0 WHERE (0.39146596517617827) GROUP BY (((vt0.c0) NOT BETWEEN ('nX') AND (v0.c0)) IN ());SELECT DISTINCT -4.64748432E8 FROM vt0 WHERE ((NOT (NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL v0.c1 FROM v0; -- 0ms;
SELECT (v0.c0 COLLATE RTRIM IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT (((((v0.c2, vt0.c0, v0.c1)) NOT BETWEEN ((v0.c0, v0.c0, '-200683262')) AND ((v0.c1, v0.c0, v0.c0))))<=(CAST(v0.c0 AS INTEGER))) FROM v0 LIMIT -1448628715;SELECT DISTINCT LAG(CAST(CAST(vt0.c0 AS TEXT) AS REAL), HEX(DISTINCT CASE WHEN vt0.c0 THEN vt0.c0 END), ABS(DISTINCT IFNULL(vt0.c0, vt0.c0))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(vt0.c0) AS BLOB), LIKELIHOOD(DISTINCT ABS(v0.c1), 0.8820507709008986), MAX((((((((('-1162368657')AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))OR(1929654974))), json_patch((+ (v0.c2)), (vt0.c0 IN ())), x'' FROM v0, vt0 WHERE (IFNULL(((0.33958977596303375)OR(0x6558d81f)), (('623980647')<(0.6458911304234193)))); -- 0ms;
SELECT ALL DATE(NULL, v0.c0, ((((v0.c2)AND(v0.c1)))AND(v0.c2)), SUM(v0.c1), CASE v0.c2  WHEN v0.c1 THEN 0xa0a4a98 END) FROM v0 ORDER BY v0.c2 ASC  NULLS LAST; -- 0ms;
SELECT 0xffffffffa7b55632 FROM v0, vt0 WHERE (((((CAST('-192916446' AS TEXT))OR(CAST('-1401975681' AS BLOB))))OR((NOT ('1427210581'))))); -- 1ms;
SELECT ((+ (v0.c2)) IN (NULLIF(-1473469178, v0.c2), RTRIM(v0.c0))) FROM vt0 GROUP BY '1076123208';SELECT ALL (((v0.c1 IN ())) ISNULL) FROM vt0 WHERE (((LENGTH(0.7280459091378002)) NOT BETWEEN (CASE WHEN '49455735' THEN -9.97881766E8 END) AND (CAST(1833275376 AS INTEGER)))); -- 0ms;
SELECT ALL ((((((v0.c0)OR(v0.c0)))AND(v0.c2))) BETWEEN (UNLIKELY(v0.c1)) AND ((((vt0.c0))<=((vt0.c0))))), CAST((((v0.c2)) BETWEEN ((v0.c1)) AND ((v0.c0))) AS BLOB), (((v0.c2))=((((((v0.c1)OR(vt0.c0)))OR(vt0.c0))))) FROM v0;SELECT DISTINCT ((CASE WHEN vt0.c0 THEN v0.c1 ELSE v0.c2 END)LIKE(('' IN (vt0.c0)))), ((v0.c2 COLLATE RTRIM) ISNULL), ((TRIM(v0.c0))IS NOT(0.7702200973520972)) FROM vt0;SELECT DISTINCT (((((x'') BETWEEN (x'ba60') AND (v0.c1))))>=((SUBSTR(v0.c1, vt0.c0)))), FIRST_VALUE((((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) IS TRUE)) OVER (), CASE WHEN ((v0.c0)GLOB(v0.c0)) THEN ((0xfffffffffd2eeac4) BETWEEN (v0.c1) AND (vt0.c0)) ELSE v0.c0 END FROM vt0 WHERE (NULL) GROUP BY (((x'11a0'))>=(((vt0.c0 IN ()))));SELECT DISTINCT 0.20730012489894023 FROM v0, vt0 WHERE (x'd1e8'); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM v0; -- 0ms;
SELECT ALL CAST(((v0.c1) BETWEEN (v0.c1) AND (v0.c2)) AS NUMERIC) FROM v0 WHERE ((- (0.2950688335014795)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CAST(v0.c1 AS NUMERIC))&(((v0.c1)<>('-308082360')))) FROM v0 WHERE ((- (NULL)) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT '1904282999' FROM vt0; -- 0ms;
SELECT MAX(GROUP_CONCAT(vt0.c0), ((vt0.c0)&(x'7d988dd5')), (((vt0.c0, v0.c0, v0.c2)) NOT BETWEEN ((vt0.c0, vt0.c0, v0.c1)) AND ((v0.c1, v0.c1, vt0.c0))), COUNT(v0.c0)) FROM v0, vt0 LIMIT 120991078 OFFSET -1027370989; -- 0ms;
SELECT ALL AVG(((v0.c2)<>(vt0.c0))) OVER () FROM v0, vt0; -- 0ms;
SELECT (~ ((NOT (NULL)))), highlight(((((v0.c2)OR(vt0.c0)))OR(v0.c1)), v0.c2, v0.c1 COLLATE RTRIM, vt0.c0 COLLATE BINARY), '0.3741929183227257' FROM vt0, v0 WHERE (CASE ((x'581b')-(x''))  WHEN (('(d9v뀯9')>(x'8baa')) THEN ((-318202779) NOTNULL) END) ORDER BY ((vt0.c0)<=((((v0.c1))>=((x'')))))  NULLS LAST, vt0.c0; -- 0ms;
SELECT DISTINCT (- ((- (v0.c2)))), 'K	' COLLATE NOCASE, ((vt0.c0 COLLATE RTRIM)IS(GROUP_CONCAT(v0.c0))) FROM v0;SELECT DISTINCT CASE WHEN ABS(DISTINCT vt0.c0) THEN TOTAL(vt0.c0) END FROM vt0; -- 0ms;
SELECT (NOT (MIN(v0.c0))), LIKE((- (v0.c0)), ((vt0.c0) NOT NULL)), ((((v0.c0) ISNULL)) NOT BETWEEN (((((v0.c1)OR(v0.c0)))OR(vt0.c0))) AND ((~ (vt0.c0)))) FROM vt0, v0 WHERE (UPPER(CASE -2044415691  WHEN '<1}jRE' THEN -2027309336 ELSE '1023493442' END)); -- 1ms;
SELECT DISTINCT NULL FROM vt0 WHERE (((((-1.745118285E9) BETWEEN ('0.15255033113791772') AND (0xffffffffbd972898)))/(((NULL)AND(0.6703634797879715))))); -- 0ms;
SELECT ALL AVG(((v0.c2)IS(vt0.c0))) FILTER(WHERE v0.c0) OVER () FROM vt0, v0 WHERE (((CASE WHEN NULL THEN 0.7386763394663381 ELSE '' END)GLOB((+ (0X7fffffffffffffff))))); -- 0ms;
SELECT DISTINCT TOTAL(x'0105'), (((vt0.c0)) BETWEEN (((v0.c2 IN ()))) AND ((((0.12414156914765484)||(NULL))))), v0.c0 COLLATE BINARY FROM v0, vt0 WHERE ((((((x''))<=((x'')))) ISNULL)) ORDER BY (((((((((((v0.c0)OR(vt0.c0)))OR('LY')))OR(vt0.c0)))OR(v0.c1))))<>(((NOT (vt0.c0)))))  NULLS LAST, (((((vt0.c0)||(v0.c0))))>=(((~ (vt0.c0))))) DESC; -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((((v0.c1) NOT BETWEEN (v0.c0) AND (v0.c0))))), CASE ((v0.c1) ISNULL)  WHEN v0.c0 THEN (((NULL))!=((vt0.c0))) WHEN '-929284018' THEN ((((v0.c1)AND(v0.c0)))AND(v0.c0)) WHEN ((v0.c2)IS NOT(v0.c0)) THEN (((vt0.c0)) BETWEEN ((vt0.c0)) AND ((v0.c2))) WHEN CAST(NULL AS INTEGER) THEN ((v0.c0) ISNULL) WHEN ((v0.c2) BETWEEN (v0.c1) AND (v0.c1)) THEN MIN(v0.c0) ELSE ((((((((v0.c0)AND(v0.c1)))AND(v0.c0)))OR(v0.c1)))OR(vt0.c0)) END, (((v0.c2 IN ()))<(CASE v0.c2  WHEN v0.c2 THEN v0.c2 ELSE vt0.c0 END)) FROM v0, vt0 WHERE (ABS(CAST(x'36af' AS NUMERIC))) GROUP BY (((vt0.c0 IN ())) NOTNULL) HAVING (~ ((((v0.c0, v0.c2, v0.c2, v0.c2, v0.c2))<((vt0.c0, v0.c1, v0.c2, v0.c2, vt0.c0))))); -- 0ms;
SELECT CASE WHEN v0.c1 COLLATE NOCASE THEN vt0.c0 COLLATE NOCASE END FROM vt0, v0 WHERE (((('##c#FX/''' IN ()))<(CAST(0.09926742521345666 AS REAL)))) GROUP BY (((+ (vt0.c0))) NOT BETWEEN (CASE WHEN v0.c2 THEN x'' ELSE v0.c0 END) AND ((- (x'0509')))), (- (v0.c2)) COLLATE NOCASE, v0.c1 HAVING 0Xffffffffd0647794; -- 0ms;
SELECT DISTINCT ((NOT (vt0.c0)) IN ()) FROM vt0, v0 LIMIT 462567098 OFFSET 1707518645; -- 1ms;
SELECT DISTINCT ((CASE v0.c1  WHEN v0.c0 THEN v0.c2 END) NOT BETWEEN (((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0))) AND (MIN(v0.c1))) FROM vt0, v0 WHERE ((- (NULL COLLATE RTRIM))) ORDER BY CASE v0.c2  WHEN (((v0.c1))<((vt0.c0))) THEN ((0.9574979834435082)|(v0.c1)) WHEN ((v0.c2) IS TRUE) THEN '' WHEN (((vt0.c0))<>((v0.c1))) THEN LTRIM(v0.c2, v0.c1) END ASC; -- 0ms;
SELECT AVG((NOT (v0.c0))) OVER (), CAST(LTRIM(v0.c0, v0.c2) AS TEXT), (CAST(vt0.c0 AS TEXT) IN ()) FROM vt0, v0; -- 0ms;
SELECT v0.c0 FROM v0, vt0; -- 0ms;
SELECT DISTINCT TOTAL(COUNT(*)), CASE WHEN ROUND(vt0.c0, v0.c2) THEN v0.c0 COLLATE RTRIM END, LAG(((((CASE WHEN v0.c0 THEN v0.c2 END)OR(CAST(v0.c1 AS REAL))))OR(CASE vt0.c0  WHEN v0.c0 THEN '' END)), (((v0.c0)-(v0.c2)) IN ()), CAST(LIKE(v0.c1, v0.c2) AS NUMERIC)) OVER () FROM v0, vt0 WHERE ((((((((((+ (x'')))AND((NOT (NULL)))))OR(CASE 0x14e76512  WHEN '-2084120792' THEN 76024611 ELSE 0x59d6a66b END)))AND((('-2108765799')>(0.17411352370488276)))))OR((((NULL, x'', 0.21359670895310068)) NOT BETWEEN (('-711653752', 0.9469096788912252, 0.5657897708576177)) AND ((NULL, NULL, 0.33013775197760875)))))) LIMIT -801498634 OFFSET -469621656;SELECT DISTINCT CASE v0.c2 COLLATE RTRIM  WHEN ((v0.c1) BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(vt0.c0)))AND(vt0.c0)) WHEN ((v0.c2)>('368036649')) THEN ABS(v0.c2) WHEN MAX(v0.c1) THEN ((v0.c2)AND(v0.c2)) END FROM v0, vt0; -- 0ms;
SELECT ALL ((((((v0.c0)OR(vt0.c0)))OR(v0.c0))) IS TRUE) FROM vt0 WHERE ((NOT (x'79a3' COLLATE NOCASE))) GROUP BY (~ (v0.c2)) HAVING (((v0.c1)) BETWEEN ((CAST(v0.c2 AS NUMERIC))) AND ((((v0.c1)<(v0.c0)))));SELECT DISTINCT ((CASE WHEN v0.c0 THEN v0.c0 ELSE 0.5042688565724016 END) BETWEEN (MAX(v0.c1)) AND (CAST(v0.c2 AS BLOB))) FROM vt0 NOT INDEXED, v0 LIMIT -1965782119 OFFSET -164006414; -- 1ms;
SELECT ALL (((~ (v0.c0))) ISNULL), COUNT(((v0.c0) ISNULL)) OVER (), MAX(((v0.c2) IS TRUE)) FROM v0 WHERE (('0.5798460180828542' IN ('')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT IFNULL(CAST(NULL AS BLOB), ((((vt0.c0)OR(vt0.c0)))OR(v0.c1))), (NOT (v0.c2 COLLATE NOCASE)), (NOT (GROUP_CONCAT(v0.c0))) FROM vt0 WHERE ((('dc')<(((x'')-('1864298749'))))) ORDER BY ((CAST(x'' AS BLOB))<<(((((v0.c1)OR(v0.c1)))AND(v0.c1))))  NULLS FIRST;SELECT CAST(CAST(v0.c0 AS TEXT) AS INTEGER), CASE CAST(v0.c2 AS TEXT)  WHEN CASE v0.c2  WHEN v0.c0 THEN x'' END THEN CAST(v0.c2 AS NUMERIC) WHEN ((v0.c0) NOT BETWEEN (v0.c2) AND (v0.c2)) THEN ((v0.c2)GLOB(vt0.c0)) WHEN ((v0.c1)=(v0.c2)) THEN CAST(vt0.c0 AS REAL) WHEN v0.c1 THEN ((v0.c1) IS FALSE) WHEN GROUP_CONCAT(v0.c2) THEN v0.c1 COLLATE RTRIM END, ((((load_extension(v0.c2))AND((v0.c0 IN (x'')))))AND(v0.c2 COLLATE RTRIM)) FROM v0;SELECT ALL ((((v0.c2)=('''O-\!')))<(x'')), CAST(v0.c0 AS BLOB) COLLATE BINARY, COUNT(((v0.c2)AND(-2.109540988E9))) FROM vt0 GROUP BY CAST(LIKELY(v0.c1) AS INTEGER);SELECT LAST_VALUE(vt0.c0) OVER () FROM vt0 WHERE (4.73973307E8) LIMIT 1507239531 OFFSET -667181144; -- 0ms;
SELECT v0.c1 FROM vt0 WHERE (NULL COLLATE NOCASE COLLATE BINARY COLLATE NOCASE);SELECT DISTINCT ((v0.c1 COLLATE BINARY)AND((+ (vt0.c0)))) FROM v0;SELECT DISTINCT LEAD(CASE (((NULL)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN TRIM(vt0.c0, vt0.c0) THEN CAST(vt0.c0 AS NUMERIC) END, CAST(vt0.c0 COLLATE NOCASE AS NUMERIC), ((((vt0.c0) NOT NULL))|(TRIM(DISTINCT vt0.c0, vt0.c0)))) OVER () FROM vt0; -- 1ms;
SELECT ALL ((((0.8664097420281851)!=(vt0.c0)))!=(highlight(v0.c0, v0.c1, v0.c2, v0.c0))), ((((vt0.c0, vt0.c0, v0.c0)) NOT BETWEEN ((v0.c0, vt0.c0, v0.c0)) AND ((v0.c0, v0.c1, v0.c0))) IN ()), CASE (v0.c1 IN ())  WHEN CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c2 END THEN ((vt0.c0)/(v0.c1)) WHEN ((v0.c1)*(v0.c1)) THEN CAST(',7' AS REAL) WHEN v0.c2 THEN (v0.c0 IN (v0.c1, vt0.c0)) END FROM vt0 GROUP BY LOWER(x'');SELECT ALL CAST(v0.c1 COLLATE RTRIM AS INTEGER) FROM v0, vt0; -- 0ms;
SELECT ALL ((((v0.c1)IS NOT(v0.c1))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (CAST(v0.c1 AS TEXT))) FROM v0 WHERE (((((('669466556'))=((1.628000019E9)))) NOT BETWEEN (0.2744749390318483) AND ((NULL IN ())))); -- 0ms;
SELECT '' FROM vt0; -- 0ms;
SELECT DENSE_RANK() OVER ( ORDER BY ((CASE vt0.c0  WHEN v0.c1 THEN v0.c2 END)<>(CHAR(v0.c0, vt0.c0, v0.c2)))  NULLS LAST), CASE WHEN GROUP_CONCAT(vt0.c0) THEN ((v0.c0)<=(v0.c2)) END, NTH_VALUE((((UNLIKELY(vt0.c0), ((v0.c0)IS(v0.c2)), vt0.c0))>((((x'c68f')<(v0.c1)), (((vt0.c0))<=((v0.c2))), ((vt0.c0)GLOB(v0.c0))))), ((v0.c2) NOTNULL)) OVER (), LAG(0X428cbbbc, ((((v0.c2) BETWEEN (v0.c2) AND (vt0.c0))) NOT BETWEEN (((v0.c1)*(vt0.c0))) AND ((NOT (vt0.c0)))), (((vt0.c0) NOTNULL) IN ())) OVER (), (- (CAST(v0.c2 AS NUMERIC))) FROM v0, vt0 WHERE (LOWER(DISTINCT ('/o' IN ()))) ORDER BY ((vt0.c0)/(vt0.c0)) COLLATE RTRIM;SELECT ALL ((((((v0.c0)AND(v0.c1)))AND(v0.c1)))<>(COUNT(*))) FROM v0 WHERE ((0.4537783955606878 IN ()) COLLATE RTRIM) GROUP BY ((x'') NOT NULL) HAVING ((NOT (v0.c2)) IN ()); -- 1ms;
SELECT DISTINCT ((((((((((((((v0.c1)<>(v0.c0)))OR((v0.c0 IN ()))))OR(((v0.c0)|(v0.c0)))))OR((('-605748047') NOT BETWEEN (v0.c2) AND (v0.c0)))))OR(IFNULL(vt0.c0, v0.c2))))AND(((((x'')AND('-464748432')))OR(v0.c2)))))OR(((v0.c1)+(-1646020708)))) FROM vt0 WHERE (CAST(((NULL)&(0.7101733299812989)) AS TEXT));SELECT DISTINCT ((v0.c1 COLLATE NOCASE)>>(((((v0.c0)AND(v0.c2)))AND(v0.c1)))), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE), (((v0.c1)<<(v0.c0)) IN ()) FROM vt0 WHERE ('1650341568');SELECT ALL TOTAL(DATE(v0.c2, v0.c1, v0.c0)) OVER (), GROUP_CONCAT(NULL) OVER (), ((((+ (v0.c0))))!=((COUNT(vt0.c0)))) FROM vt0, v0 WHERE (((- (NULL)) IN ())); -- 0ms;
SELECT ALL load_extension(CASE v0.c0  WHEN vt0.c0 THEN v0.c0 ELSE vt0.c0 END, ((v0.c1)OR(vt0.c0))) FROM vt0, v0 WHERE ((NOT (('0.4333879271218424' IN ())))); -- 0ms;
SELECT ((((vt0.c0)-(v0.c1))) BETWEEN (((v0.c0)<=(x'bc2c'))) AND (CASE WHEN v0.c0 THEN v0.c1 END)), CASE ((((v0.c0)OR(v0.c0)))OR(v0.c1))  WHEN x'' THEN CAST(v0.c0 AS NUMERIC) WHEN CASE WHEN v0.c0 THEN v0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN x'' ELSE -679559237 END THEN CAST(v0.c0 AS BLOB) WHEN TOTAL(v0.c0) THEN v0.c1 COLLATE RTRIM WHEN v0.c2 COLLATE BINARY THEN MAX(vt0.c0) WHEN ((((((((v0.c1)AND(vt0.c0)))AND(v0.c1)))OR(x'b566')))OR(v0.c0)) THEN ((v0.c0)OR(vt0.c0)) END, ((CAST(x'' AS TEXT)) ISNULL) FROM vt0 LIMIT 1613397314;SELECT ALL (((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))) ISNULL) FROM vt0 WHERE (((((0.1419005220359404)<('[?(')))AND(CAST('537614472' AS REAL)))) ORDER BY ((((v0.c2) IS FALSE)) BETWEEN ((v0.c0 IN ())) AND ((+ (v0.c0)))) DESC;SELECT DISTINCT AVG(CAST(v0.c2 AS BLOB)) OVER (), (v0.c1 COLLATE BINARY IN ()), TOTAL((+ (v0.c1))) FILTER(WHERE (((v0.c0, v0.c1, v0.c1)) BETWEEN ((v0.c1, v0.c2, v0.c0)) AND (('-1579965921', v0.c0, v0.c1))) COLLATE NOCASE) OVER (), RANK() OVER (), CASE ((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))  WHEN ((v0.c1)-(vt0.c0)) THEN (NOT (v0.c0)) WHEN v0.c2 THEN CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c2 END WHEN CASE vt0.c0  WHEN v0.c2 THEN vt0.c0 WHEN '' THEN v0.c1 WHEN v0.c0 THEN v0.c0 END THEN (((v0.c0, v0.c1, v0.c2))<=((v0.c1, v0.c1, '7/BZ'))) WHEN v0.c0 COLLATE RTRIM THEN (((vt0.c0, v0.c0, vt0.c0))<((vt0.c0, v0.c0, NULL))) WHEN ((((v0.c0)AND(vt0.c0)))AND(v0.c0)) THEN CASE v0.c2  WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c0 WHEN v0.c2 THEN v0.c2 WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 END END FROM vt0 WHERE (CAST(((0.1499884986411808) IS FALSE) AS NUMERIC));SELECT ((((((v0.c0) IS TRUE))AND(CAST(v0.c1 AS REAL))))AND(v0.c0)), CASE WHEN v0.c1 THEN v0.c2 END COLLATE NOCASE, v0.c1 FROM v0, vt0 WHERE (NULLIF(DISTINCT CASE 0.09690702407397789  WHEN x'48e1a25d' THEN '<ฯ' WHEN x'b660' THEN '0.4333879271218424' WHEN x'a36c' THEN x'' ELSE '732957245' END, (((NULL)) NOT BETWEEN ((0.9972896503129628)) AND (('59'))))) LIMIT -1922380066 OFFSET 82365574; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( GROUPS ((((((((v0.c1)OR(v0.c2 COLLATE RTRIM)))OR((- (vt0.c0)))))AND((((v0.c0, v0.c0, NULL)) BETWEEN ((v0.c0, '|', v0.c1)) AND ((vt0.c0, vt0.c0, vt0.c0))))))AND(((v0.c1)&(v0.c2)))) PRECEDING) FROM vt0, v0 WHERE (((CASE 1.7976931348623157E308  WHEN NULL THEN x'' WHEN '0.05662182029827001' THEN NULL WHEN '|눹FC*wz' THEN 0Xffffffffab41af30 END)-((0.1712541939577722 IN ())))) LIMIT -750835322 OFFSET -1118755696; -- 3ms;
SELECT ((((v0.c0)<(vt0.c0))) BETWEEN (v0.c0) AND (((v0.c0) ISNULL))) FROM v0;SELECT DISTINCT ((0.7407368051718696)IS(x'e934')), NULL, ((('1246648149' IN (v0.c0))) NOT NULL), SUM(((((vt0.c0)AND(v0.c1)))OR(vt0.c0))) OVER (), CAST(((v0.c2) IS TRUE) AS NUMERIC) FROM v0, vt0; -- 0ms;
SELECT x'', CAST(v0.c1 COLLATE BINARY AS TEXT), TOTAL(((v0.c2) NOTNULL)) FROM vt0, v0; -- 1ms;
SELECT DISTINCT ((((+ (vt0.c0)), ((v0.c1) BETWEEN (vt0.c0) AND (0.03474488848057089)), GROUP_CONCAT(v0.c0)))<=((COUNT(v0.c2), ((v0.c0) NOT NULL), GROUP_CONCAT(v0.c1)))) FROM vt0, v0 WHERE (((((((x'')LIKE(0xfffffffff85ff45a)))AND((x'' IN ()))))OR(((((((((0xffffffffac023e54)AND(NULL)))AND(-1.327527125E9)))OR(0.836664933965211)))OR('1471990046'))))); -- 0ms;
SELECT ALL 0.9797016507927788 FROM v0, vt0 WHERE ((((~ (NULL)))|(0.555543614521267 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM v0, vt0 WHERE ('1500894493') LIMIT -1544832536; -- 0ms;
SELECT SUM((vt0.c0 IN (vt0.c0))) COLLATE BINARY FROM v0, vt0 GROUP BY (+ (((vt0.c0)GLOB(v0.c2)))) HAVING v0.c1; -- 0ms;
SELECT ALL ((+ (v0.c1)) IN (((vt0.c0) BETWEEN (v0.c0) AND (vt0.c0)))) FROM v0 WHERE (((((NULL)<>(0.08039864875697156)))GLOB(CAST(x'' AS BLOB))));SELECT DISTINCT (SUM('0.42835970459778594') IN ()) FROM v0; -- 0ms;
SELECT DISTINCT CASE ((v0.c1) ISNULL)  WHEN (- (v0.c0)) THEN ((vt0.c0)+(vt0.c0)) WHEN ((vt0.c0)*(v0.c0)) THEN MIN(v0.c0) WHEN COALESCE(v0.c1, v0.c1, v0.c2, vt0.c0) THEN UNLIKELY(DISTINCT vt0.c0) END FROM vt0, v0 WHERE (((((0.32415735027023096) BETWEEN ('AG') AND (x'1018')))<<(((-314842707)*(NULL))))); -- 0ms;
SELECT COUNT(*) OVER (), ((((((v0.c1) BETWEEN (v0.c1) AND (v0.c1)))AND(1.855674242E9)))AND(TRIM(DISTINCT vt0.c0, v0.c2))), GROUP_CONCAT(((((v0.c0)OR(vt0.c0)))OR(v0.c1))) FROM v0;SELECT DISTINCT ((((((v0.c0) NOT BETWEEN (vt0.c0) AND (v0.c0)))OR((v0.c0 IN ('-1545104782')))))OR(937566148)) FROM vt0 WHERE ((((x'')>(0.9135901510164597)) IN ((- (0.8671568984538661)), ''))) GROUP BY (~ (((vt0.c0)&(v0.c2)))), ((((v0.c2)>>(v0.c2)))IS NOT(CAST(v0.c2 AS NUMERIC))), ((CASE WHEN vt0.c0 THEN '1862764323' END)LIKE(((0X4c59c5b6)GLOB(v0.c0))));SELECT DISTINCT v0.c1 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM, ((v0.c1 COLLATE RTRIM) NOT BETWEEN (((((v0.c2)AND(v0.c0)))OR(v0.c0))) AND (((v0.c2) NOT BETWEEN (v0.c0) AND (NULL)))), (NOT (TOTAL(v0.c1))) FROM v0 WHERE (((0.7977187697660573 COLLATE NOCASE) BETWEEN (CASE NULL  WHEN NULL THEN '' WHEN -1688121085 THEN '' WHEN 0.28029370935714903 THEN '-695351973' END) AND ((((x'')) BETWEEN ((x'')) AND ((0X8b30d87)))))) ORDER BY (1.904282999E9 IN (((x'')<(v0.c0)), (v0.c1 IN ()))); -- 0ms;
SELECT ALL (((('2097066544')&(vt0.c0)))|('t2')) FROM v0;SELECT ALL ((0X599cce2) IS FALSE), CASE WHEN (((vt0.c0))<=((vt0.c0))) THEN CAST(v0.c2 AS INTEGER) WHEN ((v0.c0) IS FALSE) THEN ('1191397544' IN ()) WHEN (((v0.c1))==((v0.c0))) THEN x'' ELSE ((v0.c2)/(vt0.c0)) END, MIN((('-1075058210') NOT NULL)) FROM v0, vt0; -- 0ms;
SELECT ((((v0.c1)||(v0.c2))) NOT BETWEEN (GLOB(0.1340694258452617, v0.c2)) AND ((vt0.c0 IN ()))), CAST(((((((((v0.c2)OR(v0.c2)))OR(v0.c1)))AND(v0.c1)))AND(v0.c1)) AS BLOB), ((ABS(DISTINCT vt0.c0))<<(((vt0.c0)%(v0.c0)))) FROM vt0, v0; -- 1ms;
SELECT DISTINCT (- (v0.c1)) FROM v0 LIMIT -603002898; -- 0ms;
SELECT ((v0.c1 COLLATE NOCASE) IS FALSE) FROM v0, vt0 WHERE (((TYPEOF(DISTINCT NULL)) BETWEEN (((NULL)LIKE(x'ebd3b8b6'))) AND (load_extension(NULL, 0.625733128730548)))) LIMIT 669466556 OFFSET 1239977959; -- 0ms;
SELECT ALL (((((v0.c2) NOT BETWEEN (v0.c0) AND (v0.c2))))=(((- (vt0.c0))))), (((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c2)) IN ()), MAX(((vt0.c0) ISNULL)), LEAD(CASE WHEN (~ (v0.c1)) THEN (((v0.c1)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))) END, (CAST(v0.c1 AS NUMERIC) IN ()), (((NULL, ((v0.c2) IS FALSE), x''))==((v0.c2, v0.c1 COLLATE RTRIM, CAST(v0.c0 AS NUMERIC))))) OVER (), vt0.c0, ((LIKELIHOOD(v0.c1, 0.16849707434186256)) BETWEEN (((vt0.c0) IS TRUE)) AND (((((((((NULL)AND(v0.c0)))AND(v0.c0)))AND(v0.c2)))AND(v0.c2)))), CASE WHEN ((v0.c2) BETWEEN (vt0.c0) AND (v0.c2)) THEN CAST(v0.c1 AS INTEGER) END FROM v0 GROUP BY v0.c0, (((((vt0.c0)OR(vt0.c0)))AND(v0.c1)) IN (CAST('' AS BLOB), vt0.c0 COLLATE RTRIM)), (CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END IN ());SELECT ALL (CAST(v0.c0 AS TEXT) IN ()) FROM v0; -- 0ms;
SELECT ((((CAST(v0.c1 AS REAL))AND(((vt0.c0) NOT BETWEEN (vt0.c0) AND (v0.c1)))))OR(v0.c2)), (((- (v0.c0))) NOTNULL), RANK() OVER () FROM v0, vt0 ORDER BY v0.c0 ASC  NULLS FIRST LIMIT -314842707; -- 0ms;
SELECT DISTINCT CASE WHEN v0.c2 COLLATE BINARY THEN ((((v0.c1)OR(v0.c2)))OR(v0.c2)) ELSE v0.c0 COLLATE BINARY END, AVG(CASE v0.c1  WHEN v0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c2 WHEN vt0.c0 THEN v0.c2 END), vt0.c0 FROM v0 WHERE (((x'' COLLATE NOCASE)!=(((x'')<<('-561732331')))));SELECT ALL CASE CASE WHEN v0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c2 WHEN v0.c0 THEN v0.c2 END  WHEN v0.c2 COLLATE NOCASE THEN (vt0.c0 IN ()) ELSE v0.c2 COLLATE BINARY END FROM v0, vt0; -- 1ms;
SELECT DISTINCT ((MAX(v0.c1)) BETWEEN (v0.c1 COLLATE RTRIM) AND (((v0.c0) IS FALSE))), ((COUNT(x'')) IS TRUE), AVG(((((v0.c2)AND(v0.c0)))AND(vt0.c0))) OVER () FROM vt0, v0; -- 0ms;
SELECT ((TOTAL(v0.c1))<=((((vt0.c0))>((v0.c0))))) FROM vt0 WHERE (CAST(CAST('-1349899552' AS REAL) AS INTEGER)) ORDER BY CASE NULL  WHEN ((v0.c0) BETWEEN (v0.c1) AND (v0.c2)) THEN LOWER(v0.c2) END;SELECT DISTINCT (v0.c2 IN ()), NULL, ((((GROUP_CONCAT(v0.c0))AND(((v0.c1) ISNULL))))AND(LIKE(v0.c0, v0.c1, 'g'))) FROM vt0;SELECT DISTINCT ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))*((v0.c0 IN ()))) FROM vt0 WHERE ((((((('-135687294')LIKE('1246648149')))OR(((0.9899989091293426)<(0.23866157445834868)))))OR((NOT (-1.40534915E9)))));SELECT DISTINCT vt0.c0, ((((((((((vt0.c0)OR(v0.c0)))OR(v0.c0)))AND(v0.c0)))OR(v0.c1))) NOT BETWEEN (((v0.c1)OR(v0.c2))) AND (SUM(v0.c2))), ((((((v0.c2)<<(v0.c1)))OR((NOT (vt0.c0)))))AND(json_type(v0.c0))) FROM vt0 GROUP BY v0.c0, (((CASE WHEN v0.c1 THEN v0.c2 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN v0.c1 ELSE vt0.c0 END))<((v0.c2))), v0.c1;SELECT DISTINCT (+ (((v0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM v0, vt0 WHERE (((0X27cf0b0e) NOT BETWEEN ('HkLW/[3/>' COLLATE NOCASE) AND (('-2062750902' IN ())))); -- 1ms;
SELECT ALL ((((((((NULL)AND(v0.c2)))AND((('-1730948072')!=(v0.c1)))))OR(AVG(v0.c0))))AND(v0.c0 COLLATE BINARY)) FROM vt0 WHERE (((NULL)<>(x'')) COLLATE NOCASE);SELECT DISTINCT (load_extension(v0.c1) IN ()) FROM vt0 WHERE ((((('1051855105') NOT BETWEEN (0.5681399022992584) AND ('1757317391')))!=(DATETIME('', 0.36725747932286024, NULL)))); -- 0ms;
SELECT ALL 0.21079508212005404 FROM vt0, v0; -- 0ms;
SELECT ALL COUNT(*) FROM vt0, v0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((vt0.c0) IS TRUE)) NOT BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c0))) OVER ( GROUPS (CAST(v0.c2 AS BLOB) IN (((((v0.c1)OR(v0.c2)))AND(v0.c0)))) PRECEDING) FROM vt0;SELECT ALL (NOT (v0.c0)) COLLATE NOCASE FROM v0; -- 0ms;
SELECT ABS(CAST(vt0.c0 AS REAL)) FROM vt0 WHERE ((((NULL IN (0Xffffffff85e67b32))) NOT BETWEEN (CASE 0.7594708144930116  WHEN '/g' THEN NULL ELSE '-450419028' END) AND (((-211161698) NOT BETWEEN (0.8671568984538661) AND (x''))))); -- 0ms;
SELECT DISTINCT ((((((((((((CASE v0.c2  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN vt0.c0 END)OR(v0.c0 COLLATE NOCASE)))AND((v0.c1 IN ()))))AND(((v0.c1)/(v0.c1)))))AND(((v0.c0) IS TRUE))))AND((v0.c1 IN (v0.c1, v0.c2)))))OR(CASE v0.c1  WHEN v0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN '' THEN v0.c0 END)), (((((((((v0.c0 IN (vt0.c0)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (0.12612406503849938)))))AND(((v0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))))OR(((v0.c0) NOT NULL))))AND((((v0.c1))>((v0.c1))))), v0.c0, PERCENT_RANK() OVER (), (((((((((v0.c1)OR(v0.c1)))OR(vt0.c0)))OR(v0.c0)))AND(v0.c1)) IN ()) FROM vt0 GROUP BY SQLITE_SOURCE_ID() COLLATE NOCASE;SELECT ALL CASE v0.c1  WHEN v0.c0 THEN v0.c1 ELSE NULL END COLLATE BINARY, ((((v0.c2)/(v0.c2))) BETWEEN (v0.c1) AND (COUNT(v0.c0))), ((((6.41478739E8) NOT BETWEEN (v0.c2) AND (vt0.c0)))%((v0.c2 IN ()))) FROM vt0, v0 WHERE (((IFNULL(DISTINCT ']H', -971842079))GLOB((- (x''))))) LIMIT -644455382; -- 0ms;
SELECT ALL (((((((-997881766)AND(vt0.c0)))OR(vt0.c0))))>(((+ ('Zg67婍Gu?'))))), ((((v0.c0)<(vt0.c0))) BETWEEN (v0.c2 COLLATE RTRIM) AND (CAST(v0.c1 AS NUMERIC))), x'16e6' FROM v0, vt0 ORDER BY ((((v0.c0)>(v0.c2))) NOT NULL) DESC  NULLS FIRST, (((((v0.c2)) BETWEEN ((v0.c1)) AND (('138757221'))))*(((v0.c2) BETWEEN (vt0.c0) AND (v0.c0)))), CAST(0Xffffffffb84c83c2 AS NUMERIC)  NULLS LAST; -- 0ms;
SELECT ((vt0.c0)*((((vt0.c0, v0.c0, v0.c2)) BETWEEN ((NULL, vt0.c0, v0.c1)) AND ((v0.c2, v0.c0, v0.c0))))) FROM vt0, v0 WHERE (((((0.7477373986407987)+(NULL))) BETWEEN (CAST(x'312a' AS NUMERIC)) AND (((x'') NOT BETWEEN ('q9C\rK') AND (0.9785757721228746))))) UNION ALL SELECT DISTINCT (+ (vt0.c0)) COLLATE BINARY FROM v0;SELECT CAST(v0.c2 AS NUMERIC) COLLATE BINARY, (- (((vt0.c0) BETWEEN (v0.c0) AND (v0.c1)))), ((vt0.c0 COLLATE RTRIM)+((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((v0.c2))))) FROM vt0, v0 WHERE ((~ ((((NULL, '0.10590930465846415', NULL))==((x'', '8s\r2J', x'')))))); -- 0ms;
SELECT DISTINCT CAST(CASE vt0.c0  WHEN v0.c2 THEN v0.c0 END AS INTEGER), CASE CASE WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END  WHEN ((((((((vt0.c0)OR(v0.c1)))AND(v0.c1)))OR(v0.c2)))AND(vt0.c0)) THEN (((v0.c2, v0.c0, v0.c0)) NOT BETWEEN ((v0.c2, vt0.c0, -115080604)) AND ((vt0.c0, vt0.c0, NULL))) END, AVG(TRIM(DISTINCT v0.c1, 0.28398292038547346) COLLATE BINARY) OVER () FROM vt0, v0 WHERE (CAST((('762758416')LIKE(x'')) AS BLOB)) ORDER BY (+ ('*')) COLLATE BINARY ASC; -- 0ms;
SELECT DISTINCT HEX(DISTINCT (((v0.c0))>=((vt0.c0)))) FROM v0 WHERE (LIKELIHOOD(DISTINCT ((x'')OR('1768082241')), 0.5455134404752447)) LIMIT 1283109831 OFFSET 748690489;SELECT ((v0.c0) IS FALSE) COLLATE RTRIM FROM vt0 WHERE (ABS(CAST(3.33467897E8 AS NUMERIC)));SELECT DISTINCT CAST((+ (v0.c0)) AS NUMERIC) FROM vt0 WHERE (((CASE 0xfffffffff52230b8  WHEN 7.78347586E8 THEN 0.8671568984538661 WHEN NULL THEN '霁\r' WHEN NULL THEN x'' ELSE NULL END) IS TRUE)) ORDER BY ((((v0.c1)||(v0.c2))) NOT BETWEEN (CAST(vt0.c0 AS TEXT)) AND ((+ (v0.c1)))) ASC  NULLS FIRST;SELECT AVG((v0.c1 IN (v0.c0))) FROM vt0;SELECT DISTINCT v0.c1 FROM vt0, v0 WHERE ((((((x'')) BETWEEN ((0.8647234681273681)) AND ((NULL))))<=((NULL IN ('\rk*[f]'))))); -- 0ms;
SELECT ((((v0.c1)OR(((v0.c1)=(v0.c0)))))AND(HEX(DISTINCT v0.c0))) FROM v0 WHERE ((((+ ('Et*r<DW7H')))|((((0.009214352135797133))>((189955023)))))); -- 0ms;
SELECT ((((v0.c0) NOT BETWEEN (v0.c2) AND (vt0.c0))) BETWEEN ((((('uoQG')OR(v0.c2)))AND(v0.c0))) AND (TRIM('537614472'))) FROM v0;SELECT ((v0.c0)<(v0.c0)) COLLATE BINARY, ((MAX(vt0.c0))OR((~ (v0.c2)))), CASE WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN vt0.c0 WHEN 1934547258 THEN v0.c1 WHEN v0.c2 THEN v0.c2 WHEN v0.c1 THEN x'' END COLLATE RTRIM FROM v0;SELECT DISTINCT (((((NOT (v0.c2)))OR((v0.c1 IN ()))))OR(((v0.c0)>>(vt0.c0)))) FROM v0, vt0; -- 0ms;
SELECT ALL (((v0.c2)) NOT BETWEEN ((vt0.c0 COLLATE NOCASE)) AND ((((v0.c0) NOTNULL)))) FROM v0;SELECT ALL (((((v0.c2)) NOT BETWEEN ((0.8947054478378804)) AND ((v0.c1))))<>(CAST(v0.c0 AS TEXT))) FROM vt0, v0 GROUP BY ((CASE WHEN 'mq' THEN v0.c2 WHEN v0.c2 THEN vt0.c0 WHEN v0.c2 THEN v0.c0 ELSE x'' END) BETWEEN (ABS(v0.c1)) AND (CAST(vt0.c0 AS REAL))) HAVING ((((v0.c2) IS FALSE)) NOT BETWEEN (AVG(x'')) AND (CASE v0.c2  WHEN v0.c1 THEN v0.c1 ELSE v0.c0 END)); -- 3ms;
SELECT DISTINCT ((((CASE WHEN v0.c2 THEN v0.c1 ELSE v0.c0 END)OR(vt0.c0)))AND(((v0.c1) BETWEEN (v0.c2) AND (v0.c1)))) FROM v0, vt0; -- 0ms;
SELECT ALL ((vt0.c0) BETWEEN (((((v0.c1)OR(v0.c0)))AND(v0.c1))) AND (((vt0.c0)OR(vt0.c0)))), LAST_VALUE((((v0.c0)!=('641478739')) IN ('~8鮇*' COLLATE BINARY))) OVER (), (((205881837 IN ()))<<(json_array_length(v0.c0, v0.c1))) FROM vt0, v0 WHERE ((((0.7087725104221471)IS NOT(NULL)) IN ())) GROUP BY ((((((v0.c1)-(v0.c1)))OR(vt0.c0)))OR(v0.c2)), NULLIF(DISTINCT ((vt0.c0)IS(v0.c2)), TRIM(DISTINCT v0.c2)), ((vt0.c0 COLLATE RTRIM) IS TRUE); -- 0ms;
SELECT AVG(((((((((vt0.c0)OR(x'')))OR('m#kO')))AND(v0.c1)))OR(vt0.c0))) FROM v0 WHERE (CAST(((((((((x'7394')AND(0.16598931729605693)))OR(x'1445')))OR('')))OR(0.799777602793379)) AS BLOB));SELECT DISTINCT ABS(DISTINCT v0.c0) FROM vt0, v0; -- 0ms;
SELECT ALL TRIM(((vt0.c0)IS NOT('Q%'))) FROM vt0 WHERE ((((0X65e07c82) IS FALSE) IN ())) ORDER BY (x'' IN ()) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT ((v0.c0) NOTNULL) COLLATE BINARY FROM vt0, v0; -- 0ms;
SELECT ALL CASE (v0.c1 IN (vt0.c0))  WHEN (v0.c2 IN ()) THEN (v0.c2 IN ()) END FROM v0 WHERE (CAST('o칕শi' AS NUMERIC) COLLATE BINARY) LIMIT 489250337 OFFSET 1915629346;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0, v0 WHERE (LIKELY(DISTINCT (0xffffffffbbfa78cf IN ()))) GROUP BY ((x'')<=(CASE v0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE v0.c1 END)) HAVING LIKE(x'', ((vt0.c0) ISNULL)) LIMIT -1508552861 OFFSET -638482218; -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) NOT NULL) FROM v0, vt0 WHERE (('1628000019' IN ()) COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(v0.c1 AS TEXT) COLLATE NOCASE FROM vt0 WHERE ((+ (((((0.6380121955673655)AND('0.13511160850218196')))AND(x'ebff'))))) GROUP BY (+ (((v0.c2) NOT NULL))), ((((vt0.c0)GLOB(v0.c2)))<<(((v0.c0) IS FALSE))), ((json_array(v0.c2, v0.c0, v0.c2, v0.c0))LIKE((+ (v0.c1)))) HAVING CAST(((v0.c1)>>(v0.c0)) AS NUMERIC) LIMIT 1018656987;SELECT DISTINCT (CAST(0.9927567652624439 AS INTEGER) IN ('*Q', NULLIF(v0.c1, vt0.c0))), COUNT(vt0.c0) OVER ( ORDER BY CASE 0.530230638430634  WHEN TRIM(vt0.c0, v0.c2) THEN ((((v0.c2)OR(v0.c2)))AND(v0.c0)) WHEN ((v0.c1) NOT NULL) THEN (((vt0.c0, '0.5596924985109196', v0.c2, v0.c0, v0.c1)) BETWEEN ((v0.c2, vt0.c0, vt0.c0, ']j', v0.c2)) AND ((0.9739703361737108, v0.c2, vt0.c0, v0.c1, v0.c0))) WHEN CASE vt0.c0  WHEN v0.c0 THEN vt0.c0 ELSE v0.c2 END THEN CASE v0.c2  WHEN v0.c2 THEN vt0.c0 ELSE v0.c1 END ELSE ((v0.c2) NOT NULL) END  NULLS LAST, ((vt0.c0)-(CASE WHEN vt0.c0 THEN v0.c1 WHEN v0.c0 THEN v0.c0 WHEN v0.c2 THEN v0.c1 ELSE v0.c2 END)) ASC GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP), ((v0.c1 COLLATE RTRIM) NOT NULL) FROM v0, vt0 WHERE ((~ (CAST(0.5866579416963611 AS TEXT)))); -- 0ms;
SELECT DISTINCT (v0.c0 IN (((vt0.c0)IS(v0.c2)))) FROM vt0 WHERE (((((('')OR(NULL))))!=((((NULL)/(NULL))))));SELECT ALL ((((v0.c0) BETWEEN (v0.c1) AND (v0.c2)))OR(CHANGES())) FROM vt0, v0; -- 0ms;
SELECT (((- (vt0.c0))) NOT NULL) FROM vt0; -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT ((v0.c0)-(v0.c2)), ((v0.c2) BETWEEN (vt0.c0) AND (0.957893997050521)), NULLIF(v0.c0, v0.c2), (v0.c1 IN ())), (((CASE v0.c0  WHEN vt0.c0 THEN v0.c1 WHEN vt0.c0 THEN v0.c0 WHEN v0.c0 THEN vt0.c0 ELSE v0.c1 END))<>((vt0.c0))), (((vt0.c0, vt0.c0, '抖佣', v0.c0, v0.c1)) BETWEEN (((NOT (v0.c2)), COUNT(vt0.c0), (NOT (v0.c2)), v0.c0, v0.c0 COLLATE NOCASE)) AND ((ABS(v0.c0), ((v0.c0)+(vt0.c0)), (((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))), CAST(v0.c1 AS NUMERIC), CASE WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN v0.c0 WHEN v0.c0 THEN v0.c0 END))) FROM v0 WHERE (CAST(1453926369 COLLATE NOCASE AS NUMERIC));SELECT DISTINCT PRINTF(((v0.c1) BETWEEN (vt0.c0) AND (v0.c0)), SQLITE_COMPILEOPTION_GET(v0.c2), CAST(v0.c0 AS REAL)) FROM vt0 WHERE (((((((('Y|뿛lvTV')AND(NULL)))AND(NULL)), ((('')) BETWEEN ((0.5193188213802215)) AND ((0.4747140398317584))), ((((((((x'')AND(0.31554843809075095)))OR('')))AND(0.28398292038547346)))OR(0X125fd8ad))))<((LIKELIHOOD(DISTINCT NULL, 0.6071780278506543), CASE WHEN x'' THEN '1858907144' ELSE 0.19752294596952347 END, ('L' IN ())))));SELECT DISTINCT load_extension(v0.c2, json_object(vt0.c0, v0.c1, vt0.c0, v0.c1)) FROM v0;SELECT DISTINCT (NOT (MAX(v0.c1))) FROM v0, vt0 WHERE ((CASE WHEN x'b4e3' THEN x'ae79' WHEN '-2136331363' THEN NULL WHEN 0xffffffff9e2c667a THEN x'de6d' WHEN x'45bf' THEN 0.17654441807190469 WHEN 0.7165732808148306 THEN '' END IN ())); -- 0ms;
SELECT DISTINCT LAG(LIKELY((('抖佣') NOT NULL)), ((v0.c0)AND(v0.c0)) COLLATE RTRIM, vt0.c0) OVER () FROM vt0, v0; -- 0ms;
SELECT DISTINCT ((((((v0.c1)==(v0.c2)))OR(((((v0.c1)AND(v0.c1)))AND(v0.c1)))))OR((vt0.c0 IN (v0.c0)))) FROM vt0;SELECT DISTINCT NULL FROM vt0 WHERE (((((0x79638168 IN ('0.13511160850218196'))))>=(((- (0.7429941715160643)))))); -- 0ms;
SELECT DISTINCT v0.c0, (v0.c0 COLLATE BINARY IN ((((v0.c2))<>((vt0.c0))), v0.c1 COLLATE RTRIM)), (((((((v0.c1, v0.c2, v0.c2, v0.c2, vt0.c0, v0.c1, vt0.c0)) NOT BETWEEN ((v0.c1, vt0.c0, v0.c2, v0.c1, NULL, vt0.c0, v0.c0)) AND ((v0.c1, v0.c1, vt0.c0, v0.c1, v0.c2, vt0.c0, v0.c2))))AND((((vt0.c0, v0.c1, v0.c2)) BETWEEN ((v0.c1, v0.c0, vt0.c0)) AND ((vt0.c0, vt0.c0, v0.c0))))))AND(((v0.c2) ISNULL))) FROM vt0 WHERE ((((0.059809034581997156, CAST(0.14716361659938648 AS BLOB), ('-66658520' IN ())))>=((((0.7649542087362365)IS NOT(0.38111744922493007)), CASE WHEN '0(' THEN 7.6024611E7 WHEN '-1961360121' THEN x'' WHEN 'oQq\' THEN x'' ELSE '%뺹5NJEK睂' END, ((x'')/(NULL))))));SELECT v0.c0, ((v0.c2)<<(json_remove(v0.c0, v0.c1))), ((((vt0.c0)) BETWEEN ((v0.c2)) AND ((v0.c2))) IN ()) FROM vt0 WHERE ((((((x'')) BETWEEN ((0.47403283288148235)) AND ((2.40644099E8)))) NOT NULL)) LIMIT -576520654 OFFSET -943893607;SELECT ALL x'' FROM v0, vt0 WHERE ((((('_\n\⫠*' IN ())))>((((-3.0808236E8) NOT BETWEEN (NULL) AND (934550233)))))) GROUP BY ((v0.c2 COLLATE RTRIM)-(CAST(v0.c1 AS NUMERIC))) HAVING (- (((vt0.c0) ISNULL))); -- 0ms;
SELECT ALL (NOT ((vt0.c0 IN (0.9909051903017382)))) FROM v0, vt0 WHERE ((((0Xffffffffd8dd9e1c, 0.9648626156285096, 0.1644924527177426)) NOT BETWEEN (((NULL IN ()), (0.07551186839113389 IN (NULL, 0.2695067161692577)), (0.5666156368373537 IN ()))) AND (((((-0.0))!=((x''))), CASE x'c1b5'  WHEN 0.7453751080038695 THEN 1138352422 END, x'' COLLATE RTRIM)))); -- 1ms;
SELECT ALL RANK() OVER () FROM v0; -- 0ms;
SELECT DISTINCT ((((((0.06242630347021638) IS FALSE))OR(v0.c1 COLLATE NOCASE)))AND(json_insert(v0.c1, v0.c1, 0.5360864673049014, vt0.c0, '-822092662'))) FROM vt0 WHERE ((CASE NULL  WHEN '-58030925' THEN NULL END IN ((((NULL, x'', NULL)) NOT BETWEEN ((980866129, '', 0xffffffffd8dd9e1c)) AND ((NULL, NULL, NULL))))));SELECT ALL ((NOT (v0.c0)) IN ()) FROM vt0, v0 WHERE (LIKELIHOOD(DISTINCT ((x'')||('-1737150679')), 0.7571147153135116)) ORDER BY (((- (v0.c2))) NOT NULL) ASC  NULLS LAST, v0.c2 ASC; -- 0ms;
SELECT ((v0.c2) NOTNULL) COLLATE BINARY, ((v0.c1) IS TRUE), (((v0.c2 IN ()))<(((vt0.c0)>=(v0.c0)))) FROM vt0 LIMIT 1507239531 OFFSET 883884478;SELECT (v0.c2 IN ()) COLLATE RTRIM, x'', (((AVG(v0.c0), ((v0.c1)%('787437174')), ((((((((v0.c2)AND(v0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(v0.c2))))>((((((((((v0.c0)OR(v0.c0)))OR(vt0.c0)))AND(v0.c1)))OR(vt0.c0)), -1857248650, ((v0.c1)GLOB(vt0.c0))))), (((('z	t')>>(v0.c1)))&(v0.c1)), NTH_VALUE(((((((((((v0.c1) ISNULL))AND(v0.c2)))AND(NULL)))OR(((v0.c2) IS FALSE))))AND(v0.c2)), ((((v0.c1)&(v0.c1)))*(NULL))) OVER ( RANGE  CURRENT ROW) FROM v0;SELECT DISTINCT (CAST(v0.c0 AS REAL) IN ()) FROM vt0, v0; -- 1ms;
SELECT DISTINCT (((((v0.c0 IN ()))AND(CASE WHEN v0.c1 THEN v0.c2 ELSE v0.c1 END)))OR(((vt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), CAST(((v0.c1) BETWEEN (v0.c2) AND ('?t')) AS TEXT), v0.c1 FROM vt0 WHERE ((((-472489557) IS FALSE) IN ((((1055224546))<((''))))));SELECT DISTINCT COUNT(*) OVER ( ORDER BY ((((((((((((SQLITE_COMPILEOPTION_GET(v0.c2))AND(v0.c0)))OR(UPPER(v0.c1))))AND((NOT (v0.c0)))))AND(v0.c0)))AND(((vt0.c0)/(v0.c0)))))OR((v0.c2 IN (v0.c2, v0.c2)))) ASC), NTH_VALUE(CASE WHEN CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE 5.05024047E8 END THEN vt0.c0 ELSE ((vt0.c0) NOTNULL) END, ((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0))) NOT NULL)) OVER (), (((v0.c1, v0.c0, v0.c2)) BETWEEN ((vt0.c0 COLLATE NOCASE, ((v0.c2)>>(v0.c2)), CASE v0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN v0.c0 THEN v0.c1 WHEN '' THEN v0.c0 ELSE v0.c1 END)) AND ((((v0.c1)IS(vt0.c0)), ((vt0.c0) IS FALSE), ((vt0.c0)<<(v0.c2))))) FROM vt0;SELECT DISTINCT (NOT (CAST(v0.c1 AS NUMERIC))) FROM v0 ORDER BY ((((vt0.c0) NOT NULL))%(((((v0.c0)OR(vt0.c0)))OR(x'd9d6'))));