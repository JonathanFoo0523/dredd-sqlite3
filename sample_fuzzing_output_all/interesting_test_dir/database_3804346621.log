-- Time: 2024/06/07 00:31:56
-- Database: database21
-- Database version: 3.40.0
-- seed value: 3804346621
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0, c1); -- 8ms;
PRAGMA temp.stats; -- 0ms;
COMMIT TRANSACTION; -- 4ms;
INSERT OR IGNORE INTO vt0(c1, c0) VALUES (NULL, '765316928'), ('765316928', 0.9692730770687071), ('\rObhvf', NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2) VALUES (7.65316928E8); -- 4ms;
PRAGMA optimize; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=-1157401312; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='\rObhvf' WHERE x'1d30'; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c2) VALUES (7.65316928E8, '483626290'); -- 6ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (NULL), (NULL), (x''), (NULL), ('-1157401312'); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES ('0.9692730770687071'), (NULL), (NULL); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES ('-1157401312', '754401146'); -- 1ms;
INSERT OR ABORT INTO rt0(c0, c1) VALUES (-204243710, -1894991862), (NULL, 4.8362629E8), (x'', NULL), (833587544, 0.9692730770687071), ('QRuk)!', NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (x''); -- 1ms;
PRAGMA temp.default_cache_size; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0, c2) VALUES (NULL, x'', x''), (0xfffffffff3d37d02, NULL, x''), (x'', x'a499', x''); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES (NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('{}', x''), ('', 'QRuk)!'), (0.061407255728010535, NULL); -- 4ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES (-581995501, 0.43618783881270573); -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 2ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (x''); -- 1ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0x1f6179c), ('-204243710'), (-1894991862); -- 0ms;
REINDEX  rt0; -- 3ms;
UPDATE rt0 SET c0='(.#k', c1='0.9692730770687071', c2='\n*ITp)襘' WHERE (((rt0.c0 IN (rt0.c1)))+(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN x'' END)); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '54737'); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (3.2905116E7); -- 2ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1520934662); -- 6ms;
PRAGMA journal_mode; -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('M?', '-1242053898'); -- 0ms;
COMMIT TRANSACTION; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c2) VALUES (x''), (NULL), (NULL); -- 0ms;
PRAGMA optimize; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=('-1157401312'); -- 1ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (0.43618783881270573); -- 4ms;
PRAGMA main.busy_timeout; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
PRAGMA temp.mmap_size = -8783451087771475127; -- 1ms;
PRAGMA temp.shrink_memory; -- 0ms;
UPDATE OR FAIL vt0 SET c1=x''; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=6'); -- 1ms;
INSERT INTO vt0(vt0) VALUES('automerge=10'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.9692730770687071 WHERE ((rt0.c2)<(((rt0.c1) IS TRUE))); -- 0ms;
PRAGMA cell_size_check; -- 0ms;
REINDEX; -- 1ms;
PRAGMA main.shrink_memory; -- 1ms;
REINDEX; -- 2ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
REINDEX; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('pgsz', '35335'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 10); -- 0ms;
PRAGMA short_column_names = true; -- 0ms;
INSERT OR IGNORE INTO vt0(c1) VALUES (0.061407255728010535); -- 1ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''); -- 3ms;
INSERT OR REPLACE INTO rt0(c2, c1) VALUES ('EIhg&\nsij', 0.8701990363462158); -- 1ms;
DROP TABLE rt0; -- 0ms;
ANALYZE main; -- 2ms;
COMMIT; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR FAIL INTO t0 VALUES (0.13045284722059614); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr0 BEFORE DELETE ON t0 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);DELETE FROM vt0;END; -- 2ms;
ANALYZE; -- 1ms;
INSERT OR ROLLBACK INTO t0 VALUES ('EIhg&\nsij'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0.14318139772722793, c0=0.5649810127209266 WHERE CASE ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))  WHEN vt0.c0 THEN STRFTIME(vt0.c1, vt0.c0, vt0.c0) ELSE (vt0.c0 IN ()) END; -- 0ms;
UPDATE vt0 SET (c1)=('754401146') WHERE (- (NULL)) COLLATE NOCASE; -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (199111367), (0X2cf73f7a), (NULL); -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (483626290), (NULL), (x''); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1227529185); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
COMMIT; -- 0ms;
PRAGMA main.reverse_unordered_selects = true; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (x'90fca5f24f1b'), ('483626290'), ('0.13045284722059614'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('pC<Quｗd[J'); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (0.2558789768243692); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (''); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.short_column_names; -- 0ms;
PRAGMA main.defer_foreign_keys = true; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 487413276); -- 1ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CASE WHEN CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c0 END THEN t0.c0 COLLATE BINARY END FROM vt0, t0 WHERE (((((0.4509194340625269, x'50bc', 968290648))<=((x'', 'yZ', 0.3563623165884173))) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*), (((+ (t0.c0))) ISNULL), LTRIM(((((0.6188874646709271)AND(vt0.c1)))OR(vt0.c1)), 0xffffffffbb037520) FROM vt0, t0 ORDER BY (NOT (vt0.c0 COLLATE NOCASE)) DESC  NULLS LAST, CASE WHEN ((NULL)-(vt0.c1)) THEN CAST(vt0.c1 AS REAL) END; -- 0ms;
SELECT ALL (UNLIKELY(vt0.c1) IN (((vt0.c1)LIKE('45')), CASE vt0.c1  WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN '|A콀?& ICi' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)), AVG(x'471b3b69' COLLATE NOCASE), CASE WHEN ((vt0.c0) ISNULL) THEN CAST(t0.c0 AS TEXT) ELSE (('199111367')<<(vt0.c1)) END FROM vt0 WHERE ((((((NULL))==(('G{}'))))<(((0.30333412424893647)%(7.65316928E8)))));SELECT ALL ((((t0.c0, t0.c0, vt0.c1)) NOT BETWEEN ((t0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, t0.c0, vt0.c0))) IN ()) FROM t0 WHERE (((((32905116)/(0.061407255728010535))) NOT BETWEEN ('-204243710') AND ((((x''))>=((-2.0424371E8)))))) ORDER BY ((((((((((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))OR((((vt0.c1))>=((vt0.c1))))))AND((- ('+Fb08l')))))AND((NOT (vt0.c1)))))OR(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END)) DESC;SELECT ALL CAST(((vt0.c0)<=(NULL)) AS BLOB) FROM vt0 WHERE ((- ((('2㽺	')%(NULL))))); -- 1ms;
SELECT DISTINCT x'd437' FROM t0; -- 0ms;
SELECT ALL (((vt0.c1 COLLATE RTRIM, CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END, CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))<((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END, (~ (vt0.c1)), CAST(vt0.c0 AS BLOB)))) FROM vt0, t0 WHERE (json(CAST(0.44422565766025846 AS TEXT))); -- 0ms;
SELECT 0Xffffffff9cab0371, ((((vt0.c0) ISNULL)) NOTNULL), ((CAST(vt0.c0 AS NUMERIC)) IS FALSE) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((x'') IS FALSE)) IS TRUE), 0Xfffffffffa567ba6, ((vt0.c1)|(((((vt0.c0)AND(t0.c0)))AND(vt0.c1)))), CASE WHEN ((t0.c0)>=(x'0b84')) THEN (vt0.c1 IN (vt0.c0)) ELSE ((t0.c0) IS TRUE) END, (((CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE 0x72583159 END))>((GROUP_CONCAT(vt0.c0)))) FROM vt0 WHERE (CAST((('EIhg&\nsij')&(NULL)) AS NUMERIC));SELECT ALL ((((((((vt0.c1)OR(TRIM(vt0.c1))))OR(t0.c0 COLLATE RTRIM)))AND(((t0.c0)=(vt0.c1)))))AND(vt0.c1 COLLATE RTRIM)) FROM t0 LIMIT 453903908 OFFSET 1766590203;SELECT (('833587544')<=(t0.c0)) FROM t0, vt0 WHERE (((((x'') NOT BETWEEN (NULL) AND (NULL))) BETWEEN (((((((((0.7255848587417971)OR(NULL)))AND('-686445285')))OR(0xffffffff9cab0371)))AND('+Fb08l'))) AND ((('a~')GLOB(-527457843))))); -- 1ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 END AS NUMERIC) FROM vt0, t0; -- 0ms;
SELECT ALL RANK() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW) FROM vt0, t0 WHERE (((TRIM(DISTINCT x'a53a', 0.9897775545048557)) NOT BETWEEN (((-2056654921) NOT NULL)) AND (((1273623660) ISNULL)))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(vt0.c1) AS TEXT), (- (((vt0.c0) ISNULL))), PERCENT_RANK() OVER ( PARTITION BY 0.06282094683503237 COLLATE NOCASE, ((CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END) NOTNULL)) FROM vt0 NATURAL JOIN t0 WHERE (((((((NULL)OR('eihg&\nsij')))AND(x''))) NOT NULL)); -- 0ms;
SELECT PERCENT_RANK() OVER ( PARTITION BY t0.c0, (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((CASE WHEN 'G{}' THEN vt0.c0 END))) ORDER BY (((x''))<((((vt0.c0)AND(vt0.c0))))) ASC, ((((((((((x'')OR(vt0.c0)))OR(t0.c0)))OR(t0.c0)))AND(vt0.c1)))<>(((vt0.c0)-('zia\n)')))) ASC  NULLS FIRST) FROM vt0;SELECT ALL TOTAL(vt0.c0) OVER () FROM vt0; -- 0ms;
SELECT AVG(TYPEOF(t0.c0)) FROM t0, vt0 GROUP BY CASE CAST(vt0.c0 AS BLOB)  WHEN ((((((((t0.c0)OR(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)) THEN ((((t0.c0)OR(vt0.c0)))OR(t0.c0)) WHEN ((x'')OR(vt0.c0)) THEN CAST(t0.c0 AS BLOB) WHEN 0.6381579308204315 THEN COALESCE(DISTINCT vt0.c0, vt0.c1) ELSE x'8a69' END HAVING ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))%(((vt0.c1) NOT NULL))) LIMIT 380618676; -- 0ms;
SELECT DISTINCT FIRST_VALUE(LENGTH(t0.c0)) OVER () FROM t0 WHERE (((('-1894991862') BETWEEN ('a䢤G&N#Nz') AND (1.766590203E9)) IN ())) LIMIT 1398438463 OFFSET 152579120; -- 0ms;
SELECT GROUP_CONCAT((~ (vt0.c1))) OVER ( ORDER BY (((+ (t0.c0))) ISNULL), (((vt0.c1, vt0.c0, t0.c0, vt0.c1, vt0.c0)) NOT BETWEEN (((((vt0.c1, vt0.c1, t0.c0))<=((0.4931568138073503, vt0.c1, t0.c0))), (1.918382425E9 IN ()), t0.c0 COLLATE BINARY, '', IFNULL(vt0.c0, t0.c0))) AND ((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END, (((vt0.c1))<((vt0.c0))), ((vt0.c1)+(vt0.c1)), 506074986, json_array_length(vt0.c0, vt0.c0))))) FROM t0 WHERE (((((x'')+(NULL)))==(((0.6622661386760738)%(x'40a7')))));SELECT (((('1766590203') BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CASE WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END) AND (vt0.c1)) FROM t0, vt0; -- 0ms;
SELECT '0箦&', (MAX(t0.c0) IN ()), ((LTRIM(vt0.c0, vt0.c0))OR(MIN(vt0.c0))) FROM t0, vt0; -- 0ms;
SELECT ((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)) COLLATE RTRIM, ((('1022369729', t0.c0, vt0.c0)) NOT BETWEEN ((GROUP_CONCAT(vt0.c0), vt0.c1, CAST(vt0.c0 AS BLOB))) AND ((((vt0.c1) NOTNULL), 'by', vt0.c0 COLLATE NOCASE))), t0.c0 FROM t0 WHERE (CAST('>(阍]*' AS NUMERIC) COLLATE RTRIM COLLATE NOCASE);SELECT DISTINCT ((((NULL) NOT NULL)) ISNULL) FROM vt0 ORDER BY LIKELIHOOD('', 0.8885448317277284) DESC  NULLS FIRST; -- 0ms;
SELECT NTILE(((((t0.c0) ISNULL))|(x'08c2'))) OVER ( ORDER BY (((t0.c0, 0X74fb11a1, vt0.c0)) BETWEEN ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c0)), vt0.c1 COLLATE RTRIM, vt0.c1)) AND ((((t0.c0)>>(vt0.c1)), ((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c0)), ((vt0.c0)>(vt0.c1))))) ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING) FROM t0;SELECT DISTINCT ((NULL IN ()) IN (((vt0.c1) NOT BETWEEN (x'b3e0') AND (t0.c0)), (NOT (vt0.c0)))), (NOT ((vt0.c1 IN ()))), 0x74fb11a1, COUNT(*), CAST(((vt0.c1)<=(t0.c0)) AS REAL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT 812168965 FROM vt0, t0 ORDER BY CASE WHEN '' THEN vt0.c1 WHEN COALESCE(t0.c0, vt0.c0, vt0.c1, t0.c0) THEN ((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(vt0.c1)) WHEN (vt0.c0 IN (x'ab11', t0.c0)) THEN CASE WHEN t0.c0 THEN t0.c0 END ELSE ((t0.c0)>(NULL)) END ASC; -- 0ms;
SELECT COUNT(*) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((+ (t0.c0)) IN ()) FROM vt0, t0 WHERE ((((('FALSE') NOT BETWEEN (873687190) AND (NULL))) NOTNULL)); -- 0ms;
SELECT ALL ((TIME(t0.c0, vt0.c0, t0.c0, vt0.c0, '{}')) ISNULL) FROM t0 WHERE (NULL) LIMIT -1301930416 OFFSET 955727143;SELECT ((((((vt0.c0)LIKE(vt0.c0)))OR((((t0.c0, vt0.c1, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c1))))))OR(((vt0.c0) NOT BETWEEN (0.9205750817854279) AND (t0.c0)))) FROM vt0;SELECT GROUP_CONCAT(IFNULL(DISTINCT vt0.c1, '1086087142')) FROM t0;SELECT (((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((0X14441a26, ((x'') BETWEEN (vt0.c0) AND (vt0.c1)), CASE vt0.c0  WHEN t0.c0 THEN vt0.c1 ELSE t0.c0 END)) AND ((t0.c0 COLLATE RTRIM, ((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)), CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END))), ((CAST(vt0.c0 AS REAL))*(((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))), CAST(((((((((vt0.c0)AND(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c1)) AS NUMERIC) FROM vt0 ORDER BY CAST(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS REAL) DESC  NULLS FIRST;SELECT ((SQLITE_SOURCE_ID())+(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM t0;SELECT (((((((((((t0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))))AND(((t0.c0)&(vt0.c1)))))OR(t0.c0)))AND((~ (vt0.c1)))))AND(((((((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))AND(vt0.c0)))OR(t0.c0)))), ((vt0.c0)&(t0.c0)) COLLATE NOCASE, (((+ ('x_\rLZf')))IS((((vt0.c1)) BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0, vt0 WHERE ((((CASE WHEN -960363259 THEN x'' WHEN NULL THEN 0.8893813775803627 WHEN NULL THEN '' WHEN '-94995546' THEN NULL WHEN -777028644 THEN NULL ELSE x'ab2f' END, ((0.08114750635341705)LIKE(0.2351425671932973)), RTRIM('')))=((CASE '>(阍]*'  WHEN x'' THEN x'4a21' END, ((625084250) BETWEEN (x'') AND (NULL)), ((x'87ee')LIKE(0.2351425671932973)))))); -- 1ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c1 THEN t0.c0 ELSE '-957557727' END AS INTEGER) FROM vt0, t0; -- 0ms;
SELECT ALL HEX((- (vt0.c1))) FROM vt0 LIMIT -816121623 OFFSET -810026093; -- 0ms;
SELECT ((TRIM(DISTINCT vt0.c0, t0.c0))!=((NULL IN ()))), ((CASE WHEN vt0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) BETWEEN (CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END) AND (((t0.c0) BETWEEN (t0.c0) AND ('-717837876')))), '>M8M-n' FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((NOT (vt0.c1))) NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))) AND (((t0.c0)||(t0.c0)))), (((vt0.c1 IN (vt0.c0, vt0.c0)))<(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), CASE WHEN vt0.c1 COLLATE RTRIM THEN ((t0.c0)AND(t0.c0)) ELSE vt0.c1 END, t0.c0 COLLATE BINARY, (NOT ((((t0.c0))>((t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((t0.c0) ISNULL))%(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))) FROM vt0 ORDER BY ((((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))!=(UPPER(vt0.c0)));SELECT GROUP_CONCAT(COUNT(*)), (((NOT (t0.c0)))&((((vt0.c1))>((vt0.c1))))), SUM(INSTR(vt0.c1, t0.c0)) FROM vt0 WHERE (((((NULL) BETWEEN (x'') AND (x''))) IS FALSE));SELECT DISTINCT COUNT(*) FROM t0, vt0 WHERE (LIKELY((('+Fb08l')OR('6582583')))); -- 0ms;
SELECT DISTINCT t0.c0, (((CAST(t0.c0 AS BLOB), vt0.c1, ((vt0.c1) IS FALSE)))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END, NULL))), vt0.c1 FROM t0;SELECT DISTINCT DENSE_RANK() OVER () FROM vt0 LIMIT 1509795249 OFFSET 812168965; -- 1ms;
SELECT CAST(CAST(vt0.c0 AS TEXT) AS REAL) FROM t0, vt0 ORDER BY vt0.c1 ASC  NULLS FIRST, ((~ (vt0.c0)) IN ()); -- 0ms;
SELECT (((t0.c0) NOTNULL) IN (vt0.c0 COLLATE NOCASE, ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)))), CAST(t0.c0 AS INTEGER) COLLATE NOCASE, (NOT (CAST(t0.c0 AS TEXT))), ((((CAST(vt0.c1 AS BLOB))OR(CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)))OR(vt0.c1 COLLATE RTRIM)), (NOT (SUM(vt0.c1))) FROM t0 WHERE ((((+ (-8.10026093E8))) NOT BETWEEN (CAST('aಅ	*MQJlq' AS INTEGER)) AND ((('2135654675') IS TRUE)))) LIMIT 4393139;SELECT DISTINCT COUNT(HEX(vt0.c1)), ((LTRIM(vt0.c1, t0.c0)) NOT BETWEEN (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0))) AND (TRIM(DISTINCT t0.c0))), (((CAST(vt0.c0 AS BLOB), ((t0.c0) NOT NULL), ((vt0.c0)||(t0.c0))))<(((NOT (vt0.c0)), ((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0)OR(t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT ALL (load_extension(t0.c0, t0.c0) IN ()) FROM vt0 WHERE (((((+ (0.4931568138073503))))>=((((0.20083299450537595)<(x'')))))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) IS FALSE), ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c0))) IS TRUE), GLOB(((vt0.c0) IS FALSE), CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c0 END) FROM t0, vt0 WHERE ((('|A콀?& ICi')>>('6582583')) COLLATE NOCASE) LIMIT -1225538575; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN (((((vt0.c1, t0.c0, vt0.c0, vt0.c0, t0.c0))<=((vt0.c0, vt0.c0, vt0.c1, t0.c0, vt0.c0))))) AND ((((((t0.c0)OR(t0.c0)))OR(vt0.c0))))) FROM t0, vt0 WHERE ((((0.20083299450537595 IN (0.6541557041447186)))OR(CASE WHEN x'' THEN '' END))); -- 0ms;
SELECT ALL NTH_VALUE(((vt0.c1)&(vt0.c1)) COLLATE BINARY, vt0.c1) OVER () FROM vt0;SELECT DISTINCT CASE WHEN CAST(vt0.c1 AS BLOB) THEN (vt0.c0 IN ()) ELSE (vt0.c1 IN ()) END FROM vt0 WHERE (LTRIM(((x'')>=('')), ((NULL) IS TRUE))) ORDER BY ((x'')AND((vt0.c1 IN (vt0.c1, vt0.c1, vt0.c0)))); -- 0ms;
SELECT DISTINCT MIN(((((vt0.c1)OR(-5.27457843E8)))AND(t0.c0))) FROM vt0, t0 WHERE (TRIM(CAST(NULL AS NUMERIC))); -- 0ms;
SELECT (((~ (t0.c0)))>(CASE WHEN 0.4320022631930108 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END)) FROM vt0, t0; -- 0ms;
SELECT ((((vt0.c1)AND(vt0.c0)))/(CAST(vt0.c1 AS TEXT))) FROM t0;SELECT DISTINCT ((vt0.c0) NOT NULL), NTH_VALUE(UNLIKELY((t0.c0 IN (t0.c0, vt0.c0))), ((highlight(vt0.c0, t0.c0, t0.c0, vt0.c0))<<(TRIM(vt0.c0, vt0.c1)))) OVER ( RANGE  UNBOUNDED PRECEDING), CASE (((t0.c0, '{AD|.', vt0.c1))!=((vt0.c0, vt0.c0, t0.c0)))  WHEN (NOT (t0.c0)) THEN CASE x'f379'  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN 930922800 WHEN x'' THEN t0.c0 ELSE vt0.c1 END END FROM vt0, t0;SELECT DISTINCT (((vt0.c1 IN (t0.c0)))AND(TOTAL(vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN LIKELIHOOD(DISTINCT t0.c0, 0.2308002809950801) THEN ((0.6188874646709271)=(t0.c0)) ELSE NULL END, (((+ (t0.c0)))+('c')), ((((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) ISNULL) FROM vt0;SELECT DISTINCT vt0.c0 FROM t0 WHERE (x'');SELECT DISTINCT COUNT(((vt0.c0)LIKE(vt0.c0))) OVER ( ORDER BY ((vt0.c1 COLLATE NOCASE)IS NOT(((vt0.c1) NOT BETWEEN (x'') AND (NULL)))) DESC, (((((t0.c0)>=(t0.c0)), ((t0.c0)<<(vt0.c1)), CAST(vt0.c1 AS TEXT)))!=(((((vt0.c0))>((t0.c0))), vt0.c1, '-370480928')))) FROM vt0;SELECT ALL (vt0.c0 IN ()) COLLATE RTRIM, (((((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))OR(COUNT(t0.c0))))OR(((t0.c0) NOT BETWEEN (NULL) AND (vt0.c0)))), CASE WHEN LAST_INSERT_ROWID() THEN CASE WHEN NULL THEN vt0.c1 ELSE vt0.c0 END WHEN AVG(vt0.c1) THEN (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) WHEN NULL THEN ((((((((t0.c0)AND(vt0.c0)))OR(vt0.c0)))OR('380618676')))AND(t0.c0)) ELSE ((vt0.c0)IS NOT(vt0.c0)) END FROM vt0 WHERE (((LOWER(DISTINCT x''))>('-486187170' COLLATE RTRIM)));SELECT ALL ((CAST(vt0.c1 AS TEXT))*((~ (vt0.c1)))) FROM t0;SELECT DISTINCT x'1551a277' FROM t0, vt0 WHERE ((((('E.n櫁yL')IS NOT(''))) NOT BETWEEN ((('-1242053898')*(7.54401146E8))) AND (((NULL) BETWEEN ('-2056654921') AND ('?CI*'))))); -- 0ms;
SELECT ALL (COALESCE(DISTINCT vt0.c0, t0.c0) IN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END, ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0)))), ((((0.44422565766025846)%(vt0.c1))) IS TRUE), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END) NOT NULL) FROM vt0, t0; -- 0ms;
SELECT (- (((((((((t0.c0)OR(t0.c0)))OR(vt0.c1)))AND(NULL)))OR(vt0.c0)))) FROM t0;SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN (((vt0.c1))=((t0.c0))) THEN CAST(t0.c0 AS NUMERIC) WHEN (((('0.20083299450537595')OR(vt0.c1)))AND(vt0.c1)) THEN ((vt0.c0)AND(0.08114750635341705)) WHEN t0.c0 COLLATE RTRIM THEN t0.c0 ELSE ((vt0.c0) NOTNULL) END FROM t0 WHERE (CAST(NULLIF(9.68290648E8, 0.928330071883297) AS REAL));SELECT (((((vt0.c1, t0.c0, t0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, t0.c0, vt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, t0.c0, t0.c0, vt0.c1, vt0.c1))))OR('2135654675')) FROM vt0 WHERE ((((((0Xffffffffb2661e50 IN (-1412792637)))OR(((-1671018332)IS(0.8821770251474024)))))OR(NULL)));SELECT (((vt0.c0 IN ()))|(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))), (vt0.c0 IN ()), (x'' IN ()) FROM t0;SELECT 0.6541557041447186 FROM vt0, t0; -- 0ms;
SELECT ALL QUOTE(vt0.c1 COLLATE NOCASE) FROM vt0, t0 GROUP BY NULL; -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS INTEGER) FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE (CAST((((0.7055074978321983, 0.7055074978321983, '2064801731'))<((1.086087142E9, 'D})璩,忦iI', '1158181920'))) AS BLOB)); -- 0ms;
SELECT ALL 'HW䔒mYfe', (((('')OR(((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))))AND((+ (x'6aee')))), UNLIKELY(DISTINCT LIKELIHOOD(DISTINCT t0.c0, 0.6177165584135159)) FROM t0 WHERE ((((-370480928))>(('dfFM+锛'))) COLLATE BINARY);SELECT ALL CASE WHEN MAX(vt0.c0) THEN GROUP_CONCAT(t0.c0) WHEN (vt0.c1 IN ()) THEN ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) WHEN ((t0.c0)==(vt0.c0)) THEN ((vt0.c1)GLOB(vt0.c0)) ELSE TOTAL(vt0.c1) END, (NOT (UNLIKELY(x''))), ((((((((TRIM(t0.c0))OR((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0))))))AND(((((t0.c0)OR(vt0.c0)))AND(vt0.c1)))))OR(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))OR(((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c0)))) FROM t0;SELECT ALL (+ (((t0.c0)>(t0.c0)))) FROM t0, vt0 WHERE (((x'32a6')&('aಅ	*mqjlq')) COLLATE NOCASE) ORDER BY x'2807' DESC  NULLS LAST LIMIT -225067603 OFFSET -777028644; -- 0ms;
SELECT ALL ((SUM(vt0.c1)) NOT BETWEEN ('d') AND (CAST(vt0.c1 AS TEXT))), CAST((+ (vt0.c1)) AS BLOB), '-1450946408' FROM t0, vt0 WHERE (CASE LTRIM('U\', '1-')  WHEN ((NULL)<<(0.04441969384843769)) THEN CASE ''  WHEN x'' THEN NULL END ELSE (~ (0.29031798665705266)) END) LIMIT -1931246605 OFFSET 264560581; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c0)))>=(TOTAL('128740316'))) FROM t0, vt0 WHERE (CAST(LIKELY(NULL) AS NUMERIC)); -- 0ms;
SELECT ALL ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) BETWEEN (MAX('jq')) AND (((t0.c0)-(vt0.c1)))) FROM t0 LEFT OUTER JOIN vt0 ON (((((+ (vt0.c0)))OR(DATETIME(vt0.c0, t0.c0, t0.c0))))AND((+ (vt0.c0)))) WHERE ((((x'b1cc' IN ())) BETWEEN ((NOT (2.064801731E9))) AND ((~ (x'aefa'))))) GROUP BY CASE (+ (vt0.c0))  WHEN (vt0.c0 IN ()) THEN ABS(DISTINCT vt0.c1) WHEN (('Z_樢?') NOT NULL) THEN ((((vt0.c0)AND(t0.c0)))OR('')) WHEN (('-1941050964') NOTNULL) THEN ((vt0.c0)>(vt0.c1)) WHEN ((vt0.c0) NOTNULL) THEN (((vt0.c0))<=((vt0.c1))) WHEN (NOT (t0.c0)) THEN (- (vt0.c0)) ELSE CAST(vt0.c1 AS BLOB) END HAVING CAST(CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c1 END AS BLOB); -- 0ms;
SELECT ALL CUME_DIST() OVER (), IFNULL((((vt0.c1))<((t0.c0))), (vt0.c1 IN ())), COUNT(((t0.c0)|(vt0.c0)) COLLATE RTRIM) FROM t0, vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (((0.20083299450537595)<(NULL))) AND (((-1136949376)|(0.8821770251474024))))); -- 0ms;
SELECT DISTINCT SUM(((t0.c0) ISNULL)) OVER () FROM vt0, t0 WHERE (CAST(CAST(x'' AS INTEGER) AS NUMERIC)); -- 0ms;
SELECT ALL (NOT (t0.c0 COLLATE BINARY)) FROM vt0 WHERE (CASE WHEN ((x'')LIKE('')) THEN LIKELIHOOD('[h', 0.34014418619779363) END) LIMIT -1308549528 OFFSET -574253362;SELECT DISTINCT (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((''))) COLLATE BINARY FROM vt0, t0 WHERE ((((('')==(x''))) IS TRUE)); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0, t0 WHERE (CASE WHEN CAST(NULL AS BLOB) THEN x'' END); -- 0ms;
SELECT DISTINCT (((vt0.c1)!=('661098265')) IN (vt0.c0 COLLATE NOCASE, ((vt0.c0)>=(t0.c0)))) FROM vt0;SELECT ALL COUNT(((t0.c0)GLOB(t0.c0))), NTH_VALUE(((((((((((vt0.c1) NOT NULL))OR((t0.c0 IN (vt0.c1, vt0.c0)))))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))))OR(((vt0.c1)*(t0.c0)))))OR(((t0.c0) BETWEEN (vt0.c1) AND (t0.c0)))), CASE CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END  WHEN '-581995501' THEN NULL COLLATE RTRIM ELSE ((vt0.c0) ISNULL) END) OVER (), ((LOWER(vt0.c1))OR('955727143')) FROM t0, vt0;SELECT ALL ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY FROM vt0, t0 GROUP BY ((((vt0.c1)<=('')))|(vt0.c1 COLLATE BINARY)), CAST(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1)) AS INTEGER), (((+ (vt0.c1)))||((vt0.c0 IN ()))) HAVING ((t0.c0) IS FALSE) COLLATE BINARY COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CASE ((((vt0.c0)OR(t0.c0)))OR(vt0.c0))  WHEN NULL COLLATE NOCASE THEN ((((vt0.c0)AND(x'247e')))OR(vt0.c1)) ELSE (vt0.c0 IN (vt0.c1, vt0.c0)) END, CASE ((((vt0.c0)OR(t0.c0)))OR(vt0.c1))  WHEN ((vt0.c1)||(NULL)) THEN CAST(vt0.c1 AS INTEGER) ELSE t0.c0 COLLATE NOCASE END, -998979696 FROM vt0, t0 WHERE (((x'')&(0.5649810127209266)) COLLATE NOCASE) ORDER BY 0.4542781765086502; -- 0ms;
SELECT DISTINCT NTH_VALUE(CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) AS BLOB), ((((vt0.c0)OR(x'')))AND('0.6381579308204315' COLLATE NOCASE))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((((x'7a26' COLLATE NOCASE)OR(((t0.c0)IS(vt0.c1)))))AND((vt0.c1 IN ()))) FROM t0 WHERE (CAST(0.5448110875640579 AS NUMERIC) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT x'' FROM vt0 WHERE ((('L|N岠tOK')-((- (NULL))))) EXCEPT SELECT DISTINCT CAST(vt0.c0 AS REAL) COLLATE RTRIM FROM t0;SELECT DISTINCT LTRIM(((vt0.c0)*(vt0.c0)), ((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0))), (((((((('308316760')AND(NULL)))AND(((t0.c0)AND(vt0.c1)))))OR(CASE vt0.c0  WHEN vt0.c0 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))OR(CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END)), CASE ((t0.c0) NOT NULL)  WHEN vt0.c0 THEN ((vt0.c0) BETWEEN (t0.c0) AND ('4CYkq>y➨')) END FROM t0;SELECT DISTINCT CASE ((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN (~ (vt0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)) WHEN (vt0.c1 IN ()) THEN vt0.c0 COLLATE BINARY WHEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE 128740316 END END FROM t0 NOT INDEXED, vt0 WHERE ((((((((((NOT (x'')))OR(((('og騨#5', '0.13045284722059614', 0.15413534480837887)) NOT BETWEEN (('', 0.4509194340625269, 0xffffffffc63f66dd)) AND (('c6~z', x'', x''))))))AND((- (x'')))))AND(((0.1742488122940945) IS FALSE))))AND((((NULL, 0X377cc130, '{AD|.')) BETWEEN ((0.7336884050088345, 0Xfffffffffee5ee9e, x'')) AND (('!l', 0.20020540452044933, NULL)))))) LIMIT 1086087142 OFFSET 1086087142; -- 0ms;
SELECT DISTINCT NTH_VALUE(((x'') NOT BETWEEN (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) AND (vt0.c0)), vt0.c0) OVER ( PARTITION BY (~ (((vt0.c1)!=(vt0.c0)))), CAST(((vt0.c0)>=(vt0.c1)) AS INTEGER), '-1580785593', ((vt0.c1 COLLATE RTRIM)<<((((t0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0)) AND ((NULL, vt0.c1, vt0.c1)))))) FROM vt0;SELECT NTILE(t0.c0) OVER () FROM t0 GROUP BY ((CASE vt0.c1  WHEN t0.c0 THEN vt0.c1 END) BETWEEN ((((t0.c0)) NOT BETWEEN (('-1644668087')) AND ((NULL)))) AND (((vt0.c1)*(t0.c0)))), CHANGES(), LOWER(vt0.c0 COLLATE NOCASE), 0.061407255728010535, CASE WHEN (vt0.c0 IN (vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c1)) END HAVING (~ (((vt0.c0)>(vt0.c1))));SELECT (+ (CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT (NOT (vt0.c1 COLLATE RTRIM)), x'f6db', ((((((((ABS(vt0.c1))AND(x'db83')))OR(((t0.c0)=(NULL)))))AND(TRIM(t0.c0))))AND(vt0.c0)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((-1511386721)) AND ((((vt0.c1)<(vt0.c1))))), CAST((vt0.c1 IN ()) AS NUMERIC), ((((vt0.c0) NOTNULL))|(TOTAL(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT 0.935801859279387, CASE WHEN ((vt0.c0)>(vt0.c0)) THEN ((vt0.c1) NOT NULL) END, TYPEOF(DISTINCT x'f72c') FROM t0 WHERE (IFNULL((((NULL, '1022369729', 0.676915067970075)) BETWEEN ((-1943435150, '340007462', -515528597)) AND ((NULL, 'C-', 0.43618783881270573))), ((((0.7917852424140683)OR('ಅnua~c')))AND(x''))));SELECT DISTINCT ((((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(x'')))AND(CASE WHEN vt0.c0 THEN vt0.c1 END)))AND(((t0.c0)AND(vt0.c1)))) FROM t0;SELECT ((~ (vt0.c1)) IN (LOWER(0x647137))) FROM vt0, t0 WHERE ((((((((((('1918382425') NOTNULL))AND((+ (5.06074986E8)))))OR(0.7471467661503433)))AND(((((((((-816121623)AND('0/')))AND('oo4\n	')))AND(x'')))OR(0.47911855746836196)))))OR(CASE WHEN 'S῁' THEN 0.19609938297457796 WHEN '-1759051402' THEN '-1517955188' WHEN 0x7da80c0 THEN x'' END))); -- 0ms;
SELECT ALL ((((~ (vt0.c1))))>=((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) FROM t0 LIMIT 930922800;SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE (x'a983'); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((-1744081238) IS TRUE)))<(((((NULL)) NOT BETWEEN ((1158181920)) AND ((NULL))))))) ORDER BY ((((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c0)))<((t0.c0 IN ()))) DESC  NULLS LAST; -- 0ms;
SELECT ALL ABS(DISTINCT ((vt0.c1)/(vt0.c0))), (((t0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c0))) COLLATE BINARY COLLATE RTRIM, ((((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ('') AND ((t0.c0 IN ()))) FROM t0, vt0 WHERE (CAST(((('0.5254537749884939', '\8锛', '-889947471')) NOT BETWEEN ((0.5254537749884939, NULL, x'')) AND ((NULL, NULL, 0.9824003064454375))) AS BLOB)) GROUP BY t0.c0, vt0.c1, (((vt0.c1, vt0.c1, vt0.c0)) BETWEEN ((((t0.c0) IS FALSE), ((vt0.c1)AND('661098265')), (((t0.c0))<((vt0.c1))))) AND (((((t0.c0, vt0.c1, vt0.c1, vt0.c0, 0.676915067970075)) NOT BETWEEN ((vt0.c0, t0.c0, vt0.c0, vt0.c0, x'')) AND ((vt0.c0, vt0.c0, vt0.c1, t0.c0, vt0.c0))), ((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0)), ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0))))), CAST(CAST(vt0.c0 AS BLOB) AS INTEGER), (~ ((+ (vt0.c0)))), (NOT ((+ (vt0.c1)))), (CAST(t0.c0 AS BLOB) IN (CAST(vt0.c1 AS BLOB))) HAVING ((((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END)OR(AVG(vt0.c1))))OR(t0.c0 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(CAST(vt0.c0 AS TEXT)), json_valid(((x'') NOT BETWEEN (t0.c0) AND (vt0.c0))), (((t0.c0, vt0.c1, vt0.c0)) NOT BETWEEN ((CASE WHEN t0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END, (+ (vt0.c1)), '-1759051402')) AND ((AVG(t0.c0), CAST(vt0.c1 AS INTEGER), CASE 5.06074986E8  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c1 AS BLOB))>=(((vt0.c1)%(vt0.c0)))), CASE WHEN IFNULL(DISTINCT vt0.c0, vt0.c0) THEN (vt0.c1 IN (vt0.c0, vt0.c1)) WHEN ((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)) THEN (- (vt0.c0)) WHEN (NOT (t0.c0)) THEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)) ELSE ((vt0.c1) BETWEEN (vt0.c1) AND ('-1517955188')) END, (vt0.c0 COLLATE BINARY IN (AVG(vt0.c1))) FROM t0 WHERE (((((-1.894991862E9)-(NULL))) NOTNULL));SELECT ALL (+ (vt0.c1 COLLATE RTRIM)) FROM t0;SELECT DISTINCT ('-512974349' IN (((x'')IS NOT(vt0.c1)), ((vt0.c0) IS FALSE))) FROM vt0, t0 WHERE (((SUBSTR(x'0884', 0x5be5f5fb)) ISNULL)); -- 0ms;
SELECT ((t0.c0 COLLATE BINARY)>=(CAST(vt0.c0 AS REAL))), t0.c0, (- (((t0.c0) NOT NULL))) FROM vt0 WHERE (DATE(UNICODE(0xffffffffaedf98f9), ((NULL)IS(x'')), (('h	{')+(NULL)))) LIMIT -515528597;SELECT 0.1489689380087874 COLLATE RTRIM FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (((((vt0.c0)AND(t0.c0)))AND(t0.c0)))) FROM vt0, t0 WHERE (CAST(((NULL) NOTNULL) AS REAL)); -- 1ms;
SELECT ALL CAST(vt0.c1 AS BLOB) COLLATE NOCASE FROM vt0 WHERE (CASE CASE ''  WHEN x'' THEN '0.41354851153473005' ELSE x'' END  WHEN ((0.08114750635341705) NOT NULL) THEN ((((((((-673795920)OR('-1517955188')))OR(NULL)))AND(0.7702137740678204)))AND(0.41354851153473005)) ELSE ((((NULL)OR(5.06074986E8)))AND(1.15818192E9)) END) GROUP BY (((vt0.c0) NOT NULL) IN ()), (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) IN ((t0.c0 IN ()))), (+ (((t0.c0)>=(vt0.c1)))) HAVING (((- (vt0.c1)))AND(((vt0.c0)AND(vt0.c0))));SELECT DISTINCT ((((((t0.c0)OR(vt0.c1)))OR(vt0.c0)))OR(((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))) FROM t0;SELECT DISTINCT ((((UNLIKELY(vt0.c1))OR(SUM(vt0.c1))))AND((((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c0))))), ((vt0.c0) IS FALSE) COLLATE RTRIM, ABS(t0.c0) FROM t0 WHERE (((((COALESCE(DISTINCT 'ಅNUA~C', x'0ed3'))OR(json_remove(-1176144724, 0.6892675806768992, x'', x''))))AND(CAST(0.17713437859660608 AS BLOB))));SELECT DISTINCT AVG(((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT CASE vt0.c1 COLLATE BINARY  WHEN vt0.c0 THEN MIN(vt0.c0) WHEN (vt0.c0 IN ()) THEN MAX(vt0.c0) WHEN t0.c0 COLLATE NOCASE THEN ((0.19068115388084217)<(vt0.c0)) ELSE ((vt0.c1)>(t0.c0)) END FROM t0, vt0 LIMIT -1580785593 OFFSET -486187170; -- 0ms;
SELECT ALL CASE vt0.c1  WHEN ((vt0.c1) ISNULL) THEN ((((((((t0.c0)AND(vt0.c0)))AND(vt0.c0)))AND(t0.c0)))OR(vt0.c1)) ELSE CASE vt0.c1  WHEN NULL THEN t0.c0 END END, ((('曝b') ISNULL) IN ()), ((vt0.c1 COLLATE NOCASE)AND((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))) FROM vt0, t0 LIMIT -1865752273 OFFSET -1671018332; -- 0ms;
SELECT DISTINCT COUNT(((((vt0.c1)AND(vt0.c1)))AND(vt0.c1))), (((((vt0.c1)==(vt0.c0))))<((t0.c0))), COUNT(SQLITE_SOURCE_ID()) OVER () FROM vt0, t0 WHERE ((~ (TYPEOF(NULL)))); -- 0ms;
SELECT DISTINCT SUM(((((t0.c0)OR(vt0.c1)))AND(vt0.c1))) OVER (), PERCENT_RANK() OVER (), ((- (vt0.c1)) IN ()) FROM vt0;SELECT DISTINCT ((((vt0.c1)AND(t0.c0)))AND(x'')) COLLATE NOCASE FROM t0, vt0 WHERE ((((NOT (x''))) NOT BETWEEN (CASE WHEN x'' THEN x'' WHEN '-960363259' THEN '1273623660' WHEN 0.22194465282418063 THEN x'd8222110' END) AND ((- (NULL))))) GROUP BY (((((vt0.c0, vt0.c0, vt0.c1))!=((vt0.c0, t0.c0, vt0.c0))))GLOB(CASE WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)) HAVING (((json_array(vt0.c1, vt0.c1)))==((((vt0.c1) NOT BETWEEN ('G') AND (t0.c0)))));SELECT ALL (vt0.c0 IN ()) FROM vt0 ORDER BY ((((((NULL)>=(vt0.c1)))AND(CAST(vt0.c0 AS TEXT))))OR(UPPER('')))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END, (vt0.c0 IN ()), UPPER(t0.c0)))>=((((vt0.c1) NOT BETWEEN (t0.c0) AND (t0.c0)), ((0.43618783881270573) BETWEEN (vt0.c0) AND (vt0.c0)), ((t0.c0) NOT BETWEEN (x'c2b9') AND (vt0.c1))))) FROM vt0, t0; -- 1ms;
SELECT DISTINCT ((NOT (vt0.c0)) IN ()) FROM vt0 WHERE (CASE WHEN x'1cb9' THEN UPPER(DISTINCT '821097057') END); -- 0ms;
SELECT ALL SUM(((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) OVER ( ORDER BY ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (CAST(vt0.c1 AS INTEGER)) AND ((('휬now<.វM') BETWEEN (vt0.c1) AND (vt0.c0)))) DESC, CASE WHEN (~ (t0.c0)) THEN CAST(vt0.c0 AS REAL) WHEN (~ (vt0.c0)) THEN ((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)||(vt0.c1)) ELSE ((t0.c0) NOT NULL) END DESC), NTH_VALUE(CASE CAST(0.9005467090983234 AS BLOB)  WHEN UNLIKELY(t0.c0) THEN (((t0.c0))<((t0.c0))) END, ((- (t0.c0)) IN (t0.c0))) OVER ( ORDER BY (((- (t0.c0)))>=((vt0.c0 IN ()))) ASC  NULLS FIRST), (CAST(vt0.c0 AS REAL) IN (((((((((t0.c0)AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)))) FROM t0 WHERE ((((x''))<>((0.6892675806768992 COLLATE BINARY))));SELECT '-370480928' FROM vt0, t0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0, t0 WHERE (CAST(CAST('1158181920' AS BLOB) AS NUMERIC)); -- 0ms;
SELECT DISTINCT json_array(((vt0.c0) NOTNULL), ((t0.c0)OR(vt0.c0)), ((0.11056387932005851) NOT NULL), ((vt0.c1)OR(vt0.c1))) FROM vt0 WHERE (CASE (('D})璩,riI')IS NOT(NULL))  WHEN LIKELIHOOD(x'', 0.6488669440598809) THEN CASE -1368926516  WHEN NULL THEN x'' ELSE NULL END WHEN ((x'') BETWEEN ('-515528597') AND ('CMwn᳇^.')) THEN ((NULL) NOTNULL) WHEN 0.5500114800418746 COLLATE BINARY THEN (- (0.4692744258771605)) ELSE ((NULL)<>(x'')) END);SELECT DISTINCT (LOWER(vt0.c0) IN (((vt0.c0) NOT NULL))), AVG(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1))), ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)<<(ABS(DISTINCT t0.c0))) FROM t0, vt0; -- 1ms;
SELECT DISTINCT NULL, LIKELIHOOD(CASE WHEN vt0.c1 THEN vt0.c0 END, 0.4575941789368879), GROUP_CONCAT(vt0.c1) FROM t0;SELECT ALL LAG(t0.c0, '!9]wEN\nN炤', ((t0.c0)>(CAST(t0.c0 AS INTEGER)))) OVER () FROM t0; -- 0ms;
SELECT ALL ((((vt0.c0)IS NOT(t0.c0)))%(NULL)) FROM vt0, t0 WHERE ((((((('')AND(x'6c6e')))OR(0.47523572377082))) NOT BETWEEN (((('0.7336884050088345', '', '_nv'))<=((NULL, x'd27e', '-336584520')))) AND (COALESCE(0Xffffffffd91240a8, ',O')))) GROUP BY ((LIKELY(0.12307440814103465)) ISNULL) HAVING TOTAL(((vt0.c0)LIKE(vt0.c1))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, t0 WHERE (((((0.11181804481191449)OR((((0.3995325598159415, x'', NULL)) NOT BETWEEN ((NULL, x'', 0.2864956706201992)) AND (('4z', '', 0.11968318227006003))))))OR(CASE WHEN x'' THEN -1176144724 ELSE '' END))); -- 4ms;
SELECT ALL (((NOT (vt0.c1)))<<(((vt0.c1)/(vt0.c0)))) FROM vt0 LIMIT 32905116 OFFSET 932198272; -- 0ms;
SELECT DISTINCT ((((((((((vt0.c1)AND(vt0.c1)))AND(0.32812371269107155)))OR(t0.c0)))AND(vt0.c1))) NOT NULL) FROM t0;SELECT DISTINCT CAST(json_quote(t0.c0) AS REAL) FROM t0, vt0 WHERE ((((((1962611105)) BETWEEN ((x'8f19')) AND ((0xffffffffd1af7bdc))))>(TRIM(DISTINCT '-1671018332', x'ffd7')))); -- 0ms;
SELECT ((((vt0.c0)*(t0.c0)))LIKE(((vt0.c0)IS NOT(t0.c0)))) FROM vt0 WHERE (NULL);SELECT ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (COUNT(*)) AND (vt0.c0)), LAG((((NOT (vt0.c0)))<=(((t0.c0) IS FALSE))), ((((vt0.c1)/(x'82a6')))+(((((((((vt0.c1)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(vt0.c1)))), ((- (vt0.c1)) IN ())) OVER (), CUME_DIST() OVER ( ORDER BY ((CASE 0.47523572377082  WHEN vt0.c0 THEN t0.c0 WHEN NULL THEN vt0.c0 WHEN t0.c0 THEN '쨜B' ELSE vt0.c0 END)/(vt0.c0)) DESC, (((t0.c0 IN ()))AND(((t0.c0)>>(vt0.c0)))) ASC) FROM t0, vt0 WHERE ((((('-1865752273')OR('-957557727'))) NOTNULL)); -- 0ms;
SELECT ALL ((((vt0.c0)=(vt0.c0))) BETWEEN (t0.c0 COLLATE BINARY) AND (SUM('2㽺	'))) FROM vt0 WHERE (CAST(((x'')GLOB('1918382425')) AS NUMERIC)) ORDER BY ((vt0.c1 COLLATE BINARY)*((vt0.c1 IN ()))) ASC;SELECT CAST(CAST('7T*k>1∽pA' AS TEXT) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c1))<=((t0.c0))))<<(CAST(vt0.c1 AS INTEGER))) FROM t0;SELECT DISTINCT COUNT(*) FROM t0 WHERE (((('-1450946408' IN ()))=((0.6892675806768992 IN ())))); -- 0ms;
SELECT vt0.c1, CAST(0.6118914078265599 AS INTEGER), CASE t0.c0 COLLATE NOCASE  WHEN ((vt0.c1)LIKE(vt0.c1)) THEN MAX(t0.c0) END FROM t0, vt0 GROUP BY ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))||(UNLIKELY(t0.c0))), (((((((((NOT (vt0.c0)))AND((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))))))AND(((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))))OR(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)))))AND(x'' COLLATE NOCASE)), json_array_length(((((t0.c0)AND(vt0.c1)))AND('1445606654')), (((vt0.c1, t0.c0, x'', vt0.c0, vt0.c0))==((vt0.c1, vt0.c0, t0.c0, vt0.c1, NULL)))) HAVING ((MIN(vt0.c1)) BETWEEN ((((vt0.c0, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, -1.580785593E9, vt0.c0)))) AND ((~ (vt0.c1))));SELECT (~ (MIN(t0.c0))), ((((vt0.c1) BETWEEN (vt0.c1) AND (t0.c0)))>=(vt0.c0 COLLATE BINARY)), (((0.8701990363462158))<>((CAST(vt0.c1 AS INTEGER)))) FROM vt0, t0; -- 0ms;
SELECT ALL (vt0.c1 IN ('-332376614', (vt0.c0 IN (vt0.c0)))) FROM t0, vt0 WHERE (CASE WHEN ((0.06548865777518198) IS FALSE) THEN ((0.4931568138073503) IS FALSE) WHEN ((0.4974954451637347) BETWEEN ('-577238044') AND (0.47679488015377414)) THEN ABS('1086087142') WHEN x'' COLLATE BINARY THEN ((('WQ', x'391d', NULL)) NOT BETWEEN ((NULL, NULL, '')) AND ((x'875a', '!5', '-458724830'))) END); -- 0ms;
SELECT DISTINCT UPPER(LOWER(t0.c0)) FROM vt0, t0 WHERE (((((('0.6541557041447186')) BETWEEN ((0.20085663664937536)) AND ((x'8c2d'))))IS NOT((((((((('0.7917852424140683')OR(x'')))AND(0x4651ebd9)))AND('-1368926516')))OR(0X26c74702))))) GROUP BY ((((((vt0.c1)OR(t0.c0)))OR(vt0.c1)))||((('799613877')IS NOT(vt0.c0)))); -- 0ms;
SELECT DISTINCT t0.c0 FROM vt0 WHERE (COALESCE(DISTINCT NULL, json_array_length(0.9840939490700921))) GROUP BY ((TOTAL_CHANGES()) BETWEEN (((vt0.c0)AND(vt0.c1))) AND ((- (vt0.c0)))), (((t0.c0 IN ()))*(t0.c0)), ((((((vt0.c1, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c0, vt0.c0)))))<=((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))))), (((((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c0, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c1))))!=(((vt0.c0) IS TRUE))), (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) AND (((- (t0.c0)))));SELECT DISTINCT COUNT(*), AVG(CAST(t0.c0 AS BLOB)), (((- (vt0.c0))) NOT BETWEEN ((((vt0.c0)) BETWEEN ((x'12d7')) AND ((vt0.c0)))) AND (NULLIF(t0.c0, vt0.c0))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT SUM((- ('-1943435150'))) FROM vt0, t0 WHERE (',/'); -- 0ms;
SELECT DISTINCT SQLITE_VERSION() FROM t0, vt0; -- 0ms;
SELECT ABS((vt0.c0 IN (vt0.c0))), LIKELY(CAST(vt0.c1 AS TEXT)), ((((((vt0.c1)IS(vt0.c1)))AND((((vt0.c1, vt0.c0, vt0.c1)) NOT BETWEEN ((0.3109656603022044, vt0.c1, t0.c0)) AND ((vt0.c0, t0.c0, t0.c0))))))OR(((((t0.c0)AND(vt0.c1)))OR(vt0.c1)))) FROM t0 WHERE (((((((x'')OR('-205557447')))OR(x''))) NOTNULL));SELECT DISTINCT json_extract(CASE WHEN vt0.c0 THEN t0.c0 END, (+ (vt0.c0)), (t0.c0 IN (vt0.c0)), TRIM(DISTINCT t0.c0)) FROM vt0, t0 WHERE ((('-605855175' COLLATE RTRIM) NOT BETWEEN (((x'')|(NULL))) AND ((((((((('?CI*')AND(NULL)))AND('-1455113384')))AND(NULL)))AND('-2126790816')))));SELECT DISTINCT CASE vt0.c0 COLLATE BINARY  WHEN ((t0.c0)>(vt0.c0)) THEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) ELSE (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))) END FROM t0 WHERE (((('') NOTNULL) IN ()));SELECT DISTINCT ((CAST(t0.c0 AS NUMERIC))GLOB(vt0.c1)) FROM t0 WHERE (((((TRIM(''))OR(((0.2864956706201992) NOT BETWEEN (0x10859828) AND (x'')))))OR(CAST(-1.48343639E8 AS BLOB))));SELECT DISTINCT AVG(ABS(t0.c0) COLLATE NOCASE) OVER () FROM t0 WHERE (CAST((((((((('0.47679488015377414')OR('')))AND(-975436573)))AND(NULL)))OR('0.5254537749884939')) AS REAL)); -- 0ms;
SELECT ALL ((TOTAL(t0.c0))*((((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((0.9455522688975301, vt0.c1, vt0.c0)) AND ((t0.c0, vt0.c0, t0.c0))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))) BETWEEN (((vt0.c0) IS TRUE)) AND (TOTAL(t0.c0))) FROM t0 NOT INDEXED, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT -289269764; -- 0ms;
SELECT DISTINCT 0.5817960673071374 FROM t0 NATURAL JOIN vt0; -- 0ms;
SELECT ALL (- (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c0)<>(vt0.c0)) IN ()) FROM vt0, t0 ORDER BY ((t0.c0 COLLATE RTRIM) IS FALSE), ((((t0.c0)<>(t0.c0))) NOTNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (~ (((vt0.c1) ISNULL))), MAX(CAST(vt0.c0 AS BLOB)), MIN((vt0.c1 IN ())) FROM t0;SELECT DISTINCT 0.3738762431179401 FROM vt0, t0 WHERE ((((((NULL)) BETWEEN (('忦3')) AND ((0.9174954040058935)))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))<(((vt0.c0)AND(t0.c0)))) FROM vt0, t0 WHERE (x''); -- 0ms;
SELECT (((t0.c0)) BETWEEN (((((vt0.c1, vt0.c0, vt0.c0))>((x'', vt0.c1, vt0.c0))))) AND ((vt0.c1 COLLATE BINARY))) FROM t0, vt0 WHERE (json(((NULL)&(NULL)))); -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((t0.c0)AND(vt0.c0)))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))))) FROM t0 WHERE (((NULL IN ()) IN ()));SELECT DISTINCT CAST(CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END AS BLOB) FROM vt0 NOT INDEXED LIMIT 968290648;SELECT DISTINCT (- ('')) FROM vt0, t0 WHERE (0.2795518616002298); -- 0ms;
SELECT vt0.c0, SUM(((vt0.c1)=(vt0.c0)) COLLATE BINARY), SUM(((t0.c0)+(t0.c0))) COLLATE BINARY FROM t0 WHERE (((((((((((1560797594)OR(-6.7379592E8)))OR(0.7296988707060251)))AND('')))OR('')))<(x'' COLLATE BINARY))) GROUP BY ((vt0.c1) NOT BETWEEN (((0xffffffffcaf47ab1) NOT NULL)) AND (vt0.c0 COLLATE BINARY)), (- (((vt0.c0)>>(t0.c0)))), CAST((((vt0.c0, vt0.c1, vt0.c0))>((vt0.c1, t0.c0, t0.c0))) AS NUMERIC), UNLIKELY(DISTINCT DATETIME(vt0.c1, vt0.c0, t0.c0, vt0.c0, t0.c0)), vt0.c0;SELECT ALL (((- (vt0.c0))) NOTNULL), (~ ((((vt0.c1, vt0.c0, vt0.c0))<=((vt0.c1, vt0.c0, '-889947471'))))), ((CAST(vt0.c0 AS INTEGER))*(CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) FROM t0, vt0; -- 0ms;
SELECT ALL ((vt0.c1)/('')) COLLATE BINARY, ((NULLIF(vt0.c0, vt0.c0)) BETWEEN (COUNT(*)) AND (CASE WHEN x'65c1' THEN vt0.c1 END)), ((((CASE t0.c0  WHEN 0.8946432641064379 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE vt0.c0 END)AND(((t0.c0) ISNULL))))OR(((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)))) FROM vt0 ORDER BY (((t0.c0 IN (vt0.c1)))/(CAST(vt0.c1 AS BLOB))) ASC, CASE WHEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)) THEN vt0.c0 ELSE CASE 0X7da80c0  WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN x'714d' THEN t0.c0 ELSE vt0.c1 END END ASC  NULLS FIRST, (+ (vt0.c1)) COLLATE BINARY  NULLS FIRST;SELECT (((AVG(vt0.c0), x'', MAX(t0.c0)))>=((((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)), vt0.c1, highlight(t0.c0, vt0.c1, t0.c0, vt0.c1)))) FROM vt0, t0 WHERE ((((x'') IS TRUE) IN (DATETIME(NULL, '', '1088393649')))); -- 0ms;
SELECT ALL ((x'' COLLATE NOCASE) NOT BETWEEN (x'af49' COLLATE BINARY) AND (MAX(t0.c0))) FROM t0, vt0 WHERE (CASE (694814184 IN ())  WHEN ((((NULL)OR(x'b3e1')))AND(0xffffffff9c6648a4)) THEN json_quote(NULL) WHEN -542359560 COLLATE NOCASE THEN ('0.19068115388084217' IN ()) WHEN ((0.448839441919886) ISNULL) THEN ((((0x7a734c4d)AND(x'')))AND(NULL)) ELSE LTRIM(x'', 0.5326423852162798) END); -- 1ms;
SELECT ((((vt0.c0)LIKE(t0.c0))) IS TRUE) FROM vt0 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (((NULL)<=(0.9430358916722366))) AND (('' IN ()))));SELECT DISTINCT (((((t0.c0))>=((vt0.c0))))*(LOWER(DISTINCT t0.c0))) FROM vt0, t0 WHERE ((NULL IN (0.7473869237223955)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (NOT (CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (CAST(((NULL)OR(x'1421')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((((((((((t0.c0)OR(vt0.c0)))OR(NULL)))OR(vt0.c1)))AND(t0.c0))))>=(((~ (t0.c0))))) FROM vt0 WHERE ((((NOT (NULL)))*((NOT ('')))));SELECT ALL SUM((NOT (vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((AVG(t0.c0)) ISNULL) FROM vt0, t0; -- 0ms;
SELECT DISTINCT vt0.c0, vt0.c1, COUNT(*) FROM t0, vt0 GROUP BY ((((t0.c0 COLLATE RTRIM)OR(t0.c0)))AND(((((((((t0.c0)AND(vt0.c1)))OR(t0.c0)))AND(t0.c0)))OR(vt0.c1)))); -- 1ms;
SELECT (json_extract(x'e51f2179', t0.c0) IN ()) FROM t0 WHERE ((('쨜B')&(782874383)) COLLATE RTRIM); -- 0ms;
SELECT CAST(NULLIF(DISTINCT vt0.c1, NULL) AS TEXT), (vt0.c0 IN ()) COLLATE RTRIM, ((TRIM(DISTINCT t0.c0))+(vt0.c1 COLLATE BINARY)) FROM t0;SELECT DISTINCT (((vt0.c1 IN ())) IS TRUE) FROM t0 ORDER BY CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END  WHEN NULL THEN TRIM(DISTINCT t0.c0) END;SELECT ALL NULL FROM vt0, t0 WHERE ((~ (x'6f1c'))); -- 0ms;
SELECT ALL CUME_DIST() OVER ( PARTITION BY 0xffffffffd7d6b0b0, ((NULL) BETWEEN (x'') AND ((~ (vt0.c0))))) FROM t0, vt0 WHERE ((((('1560797594')*('s曾pr#'))) BETWEEN ((('b0ꇳ') NOT BETWEEN ('V') AND ('-1221180703'))) AND (((((NULL)AND(x'')))AND(0.6882954794207123))))); -- 0ms;
SELECT ALL ((((((((((vt0.c0)OR(vt0.c1)))AND(NULL)))OR(vt0.c0)))OR('-43809990'))) BETWEEN (NULL) AND (((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID(), CASE WHEN vt0.c1 COLLATE NOCASE THEN COUNT(t0.c0) ELSE ((vt0.c1)AND(t0.c0)) END, (NOT ((- (vt0.c1)))) FROM vt0 WHERE (-39417617);SELECT ((((vt0.c0)<(vt0.c0)))>>(((((((((vt0.c1)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))OR(vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) THEN (NOT (vt0.c1)) WHEN CASE WHEN t0.c0 THEN t0.c0 ELSE vt0.c0 END THEN AVG(vt0.c1) WHEN ABS(DISTINCT t0.c0) THEN vt0.c1 COLLATE RTRIM WHEN ((vt0.c0)>(vt0.c1)) THEN ((vt0.c0) IS FALSE) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) THEN vt0.c0 COLLATE BINARY ELSE CAST(vt0.c0 AS TEXT) END, CAST((t0.c0 IN ()) AS INTEGER), GROUP_CONCAT(json_insert(vt0.c0, t0.c0, vt0.c1)) OVER () FROM t0, vt0 WHERE ((((((((((NOT (0.6449165739559102)))AND(CASE x''  WHEN '-1356465602' THEN 0xffffffffe79dcdfa WHEN NULL THEN x'' WHEN 0.06476774981598465 THEN x'' ELSE '' END)))OR(((('-1753351168', NULL, 'ｗ}e()h hk')) NOT BETWEEN ((0.8110705477173795, NULL, -527602412)) AND (('1259444776', '55h%z!h(V', 0.34466401285231696))))))OR(0xffffffff86493885 COLLATE RTRIM)))OR(((((((((x'')OR(x'')))AND('X*WY')))OR(NULL)))OR(NULL)))));SELECT DISTINCT ((t0.c0)OR(t0.c0 COLLATE RTRIM)) FROM vt0 NATURAL JOIN t0 WHERE (CASE (- (0xfffffffff1eb97b7))  WHEN ((((0.5046362775053116)OR('')))AND('1847033406')) THEN CASE WHEN '' THEN NULL END END); -- 2ms;
SELECT (('}B') BETWEEN (CAST(vt0.c0 AS TEXT)) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0, vt0 WHERE (((((((((((((((NULL)>(x'')))OR(LIKELIHOOD(DISTINCT NULL, 0.32252568424412875))))AND(((x'') NOT NULL))))OR(((((x'720311a5')OR('0.43618783881270573')))OR('765316928')))))AND(((('1440277689')) NOT BETWEEN ((0.6505560234524788)) AND (('1398438463'))))))OR(CAST(164583961 AS TEXT))))OR(MIN(0Xffffffff924562b0, NULL, '-777028644', x'')))); -- 0ms;
SELECT DISTINCT (((~ (t0.c0)))LIKE(((t0.c0)IS(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (+ (t0.c0)) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (vt0.c1)) COLLATE NOCASE FROM t0, vt0 WHERE ((((0Xffffffff8c298872)) NOT BETWEEN ((COALESCE(NULL, NULL))) AND ((CASE 0.7173642247727211  WHEN '-1759051402' THEN 0xd59cdc0 END)))); -- 0ms;
SELECT DISTINCT ((((((((t0.c0 COLLATE RTRIM)OR(((((((((vt0.c0)AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))AND(vt0.c0)))))OR((NOT (vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)))))AND(x'')), GROUP_CONCAT(NULLIF(t0.c0, vt0.c0)), ((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END)+(((((t0.c0)OR(t0.c0)))AND(0xffffffffa54ab519)))), vt0.c1 COLLATE RTRIM, ((((x'')*(t0.c0)))OR(((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(vt0.c1)))) FROM t0 WHERE (CAST(((NULL) NOTNULL) AS TEXT));SELECT ((((((((-1.759051402E9)OR(vt0.c1 COLLATE BINARY)))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c1)))))OR(x'e5ac')))AND((- (vt0.c0)))) FROM t0 WHERE (IFNULL(DISTINCT CAST(-1067865921 AS INTEGER), 'A~' COLLATE RTRIM)) ORDER BY ((((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 END)AND(vt0.c0 COLLATE BINARY)))AND(((vt0.c1) NOT NULL)));SELECT ALL CASE CAST(vt0.c0 AS INTEGER)  WHEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)) THEN (('xㅙi')>=(t0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END, (- (((t0.c0) NOT BETWEEN ('Kt') AND (t0.c0)))), (~ (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) FROM t0;SELECT ALL ((((CAST(t0.c0 AS REAL))AND(COUNT(*))))AND((vt0.c1 IN ()))) FROM t0 WHERE (((x'') NOTNULL) COLLATE RTRIM COLLATE BINARY) LIMIT 1731732955 OFFSET 992314968; -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END))==((((0.22709675208330504) NOT BETWEEN (vt0.c0) AND (vt0.c1))))) FROM t0;SELECT DISTINCT ((x'59ba')IS NOT(((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))), (((vt0.c1))<=((vt0.c1))) COLLATE NOCASE, (- ((((vt0.c1, t0.c0, vt0.c0))=((vt0.c0, 0.20085663664937536, vt0.c0))))) FROM vt0 WHERE ((+ (CASE NULL  WHEN NULL THEN 'oKw' ELSE 0.42008778908236877 END)));SELECT DISTINCT ((t0.c0)<=(t0.c0)) COLLATE BINARY FROM vt0 ORDER BY (- (x''))  NULLS LAST;SELECT ALL CASE MIN(0.44391957711429486)  WHEN (~ (t0.c0)) THEN SUM(t0.c0) ELSE (+ (vt0.c0)) END FROM vt0;SELECT ((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))OR(t0.c0))) BETWEEN ((vt0.c0 IN ())) AND ((vt0.c0 IN (t0.c0, vt0.c1)))) FROM t0, vt0 WHERE (CASE ((x'') NOT BETWEEN (0.8341984400820118) AND (''))  WHEN 0.7695515341239222 THEN (((((((((((('?i')AND(0.4509194340625269)))OR(NULL)))OR('0.47911855746836196')))OR(0.19068115388084217)))AND('')))OR(0X18ddf54d)) WHEN ((NULL) IS FALSE) THEN ((('')) BETWEEN ((0.6969393310472961)) AND ((0.5598641814553246))) WHEN (+ (NULL)) THEN CAST(NULL AS INTEGER) END); -- 0ms;
SELECT ALL ((((t0.c0)||(vt0.c1))) BETWEEN (0xfffffffff2e9516c) AND ((((t0.c0))<=((t0.c0))))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1)<<(vt0.c1)) AS INTEGER) FROM t0, vt0; -- 0ms;
SELECT DISTINCT (- ((~ (vt0.c1)))), (((((vt0.c1))>((vt0.c1)))) ISNULL), SUM(MAX((x'' IN ()))) FROM vt0, t0;SELECT ALL ((SUM(t0.c0))GLOB(x'')) FROM t0 WHERE ((('504589162' IN ()) IN ())); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT GROUP_CONCAT(((vt0.c1)AND(vt0.c1))), (((((vt0.c0)) NOT BETWEEN ((x'5970')) AND ((t0.c0)))) BETWEEN (((((((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0))) AND (NULL)), (((((((((vt0.c0 IN ()))OR(vt0.c0)))AND(t0.c0 COLLATE RTRIM)))AND(CAST(t0.c0 AS NUMERIC))))OR(CAST(vt0.c1 AS TEXT))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c1))<=((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN vt0.c1 ELSE NULL END))) FROM vt0, t0 GROUP BY ((((((t0.c0)OR(t0.c0)))AND(t0.c0))) BETWEEN ((((vt0.c0))==((vt0.c1)))) AND ((vt0.c0 IN ()))), vt0.c1, (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((((t0.c0)!=(vt0.c1))))); -- 1ms;
SELECT ALL (((((t0.c0 IN (vt0.c0)))OR(((t0.c0)GLOB(t0.c0)))))AND(t0.c0 COLLATE BINARY)) FROM vt0, t0 WHERE (UNICODE((~ ('889780969')))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0) ISNULL)  WHEN CASE t0.c0  WHEN vt0.c1 THEN vt0.c1 ELSE NULL END THEN CAST(t0.c0 AS REAL) END, ((vt0.c1 COLLATE RTRIM)<<((NOT (vt0.c1)))), ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END)IS NOT(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))) FROM t0 CROSS JOIN vt0 ON 'fb[[]\l]&h{' WHERE (0.8327063532365349); -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((MIN(vt0.c0))) AND (((((vt0.c0))==((t0.c0)))))), ((0.03429478427868149) BETWEEN ('955727143') AND ((((vt0.c1))==((vt0.c1))))), ((NULLIF(DISTINCT vt0.c0, vt0.c0))>(((x'') NOT BETWEEN (vt0.c1) AND (vt0.c0)))), CASE ((((vt0.c0)OR(vt0.c1)))OR(vt0.c0))  WHEN CAST(vt0.c1 AS TEXT) THEN (((vt0.c0, vt0.c0, t0.c0)) BETWEEN ((vt0.c1, vt0.c1, t0.c0)) AND ((vt0.c0, vt0.c0, t0.c0))) END, CAST(((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) AS BLOB) FROM vt0, t0 WHERE ((NOT (((((((((((((x'b557')AND(NULL)))AND(0xffffffffdf462469)))AND(NULL)))AND(NULL)))OR(NULL)))OR(x'e4d7'))))) ORDER BY ((((((((((vt0.c0) NOT NULL))AND(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))))OR(UPPER(vt0.c0))))AND(CASE WHEN vt0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((vt0.c0 IN (NULL)))) ASC, (- (t0.c0 COLLATE BINARY)) LIMIT 586612567; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE BINARY) NOT BETWEEN (ABS(vt0.c1)) AND (((vt0.c0)>=(t0.c0)))) FROM t0 WHERE ((CASE '-789663346'  WHEN NULL THEN NULL END IN ())) GROUP BY vt0.c1 COLLATE BINARY;SELECT DISTINCT CUME_DIST() OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM t0, vt0 WHERE (((LTRIM(NULL, -1272292901)) NOT BETWEEN (((((((((0Xffffffff8ce383f3)OR('-1361078023')))OR(NULL)))OR(NULL)))OR(0.6253015054763066))) AND (CASE WHEN '-759566320' THEN '' END))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)>(vt0.c0)))|((- (vt0.c0)))) FROM t0 WHERE (((((((((((x'') BETWEEN (NULL) AND (0.41354851153473005)))OR(CASE NULL  WHEN 0.8180056751149706 THEN 0.5286046105291526 WHEN NULL THEN '-230731178' WHEN 0Xffffffff82c9a149 THEN '31415906' WHEN 0x67f1d3bb THEN '586612567' WHEN NULL THEN 0Xffffffffee0b2c81 END)))AND((('K*()')IS NOT(x'45f4')))))OR((~ (x'')))))OR(CAST(x'9623' AS NUMERIC))));SELECT DISTINCT vt0.c0, ((((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1)))AND(((vt0.c1) ISNULL))))AND(((vt0.c1) NOTNULL))), t0.c0 FROM t0 WHERE (((CAST('IfPUdt\F%' AS INTEGER)) BETWEEN ((('') NOTNULL)) AND (x'a1c8' COLLATE NOCASE)));SELECT DISTINCT 0.3306948106331097, CASE WHEN HEX(DISTINCT vt0.c1) THEN t0.c0 WHEN vt0.c0 THEN (~ (vt0.c0)) WHEN ((('6[綥'))<>((NULL))) THEN (NOT (vt0.c1)) ELSE AVG(vt0.c1) END, ((MAX(vt0.c1))|(vt0.c0 COLLATE BINARY)) FROM vt0;SELECT (((vt0.c0) IS FALSE) IN ()) FROM t0, vt0 WHERE ((((((x''))>(('')))) NOT BETWEEN (CAST('0.03429478427868149' AS INTEGER)) AND (CASE '458381281'  WHEN '-79490484' THEN '1534339917' END))); -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c1)>=(vt0.c1))) COLLATE RTRIM FROM vt0 WHERE (((((x'')<('754979648'))) NOT BETWEEN ((x'' IN ())) AND ((('me(<닡F+)')!=('690653422'))))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT ((t0.c0) NOTNULL)) FROM vt0;SELECT (NOT (CAST(vt0.c0 AS REAL))) FROM t0 WHERE ((((((0.14559584558055705)AND(NULL)))AND('kXwM[\rWg')) IN ()));SELECT DISTINCT ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END)!=(((vt0.c0)OR(vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ORDER BY NULLIF(DISTINCT vt0.c1 COLLATE NOCASE, (((vt0.c1, t0.c0, t0.c0))<((t0.c0, vt0.c0, vt0.c0))))), ((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN t0.c0 END)IS(((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c0)))), (((((vt0.c0))>=((vt0.c1)))) NOTNULL) FROM vt0 WHERE (LIKELIHOOD(DISTINCT CAST(NULL AS INTEGER), 0.8633736102609278));SELECT ((LOWER(vt0.c0))LIKE(((((NULL)OR(vt0.c0)))AND(vt0.c0)))) FROM t0, vt0 WHERE (((NULL COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT DISTINCT (((vt0.c0) BETWEEN (t0.c0) AND (vt0.c0)) IN ()) FROM t0, vt0 WHERE (('' IN ()) COLLATE RTRIM) LIMIT 1140636281; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (~ (((t0.c0) NOT NULL))), LOWER((~ (vt0.c1))) FROM t0 WHERE (UPPER(DISTINCT ((((((((NULL)OR('zia\n)')))OR('1291157821')))OR(244237768)))OR('-1982496628')))) LIMIT 1918382425;SELECT ALL CASE LENGTH(t0.c0)  WHEN '-2077500000' THEN CAST(t0.c0 AS INTEGER) ELSE ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) END FROM t0;SELECT (~ (-611157087)) FROM vt0 WHERE ((((x'' COLLATE BINARY))!=((((0.9425199973910184)&(754401146)))))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) BETWEEN ((vt0.c0 IN (t0.c0))) AND (((vt0.c0) IS FALSE))), CASE vt0.c0  WHEN (('306377785')*(t0.c0)) THEN vt0.c1 COLLATE RTRIM END, ((TOTAL(vt0.c1)) NOT BETWEEN (t0.c0) AND (COUNT(*))) FROM vt0, t0; -- 0ms;
SELECT ALL x'' COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT (((x'')) NOT BETWEEN ((t0.c0)) AND ((TOTAL(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c1) BETWEEN ('0.6969393310472961') AND (vt0.c0))) OVER ( ORDER BY t0.c0  NULLS LAST, ((CAST(t0.c0 AS INTEGER))<(((vt0.c1)<<(vt0.c0))))  NULLS FIRST) FROM t0, vt0 LIMIT -1225538575; -- 0ms;
SELECT TOTAL(CASE vt0.c1  WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN t0.c0 ELSE '453903908' END) OVER () FROM t0 WHERE (((((NULL) NOT BETWEEN (0.9354621062331102) AND (x'8278'))) ISNULL)) ORDER BY HEX(((x'')&(t0.c0)))  NULLS FIRST, TRIM(DISTINCT (('-1136949376')>>(vt0.c1)))  NULLS LAST;SELECT DISTINCT ((((0.23500287899490035)OR(CASE t0.c0  WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))AND(vt0.c1)) FROM vt0, t0 WHERE ((UNLIKELY(0xffffffffe996703c) IN ())) LIMIT 240019992 OFFSET 776946647; -- 0ms;
SELECT ALL ((((((vt0.c0) ISNULL))OR(((t0.c0)<(vt0.c0)))))OR(((0X6423ed5a) BETWEEN (t0.c0) AND ('-686445285')))) FROM t0;SELECT DISTINCT (((- (t0.c0))) NOT NULL), ((vt0.c0 COLLATE RTRIM)OR(0.9596656146029496)), ((((((((vt0.c0)AND((- (vt0.c0)))))AND(CAST(vt0.c1 AS NUMERIC))))OR((t0.c0 IN ()))))OR(vt0.c0 COLLATE NOCASE)) FROM t0 WHERE ((((x'')) BETWEEN ((((NULL) IS FALSE))) AND ((CAST(0.7305539210997399 AS REAL)))));SELECT CAST(((((((((vt0.c1)AND(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)) AS BLOB) FROM t0, vt0 ORDER BY ((((vt0.c1)LIKE(vt0.c0))) IS FALSE) ASC  NULLS LAST, vt0.c1 ASC; -- 0ms;
SELECT ((x'') NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE NOCASE, (+ ((('K7狾Y') ISNULL))), (NOT (GROUP_CONCAT(vt0.c1))) FROM vt0 NOT INDEXED, t0 WHERE (((((('aZ\rPT๐-')==(NULL))))>=((CASE '930922800'  WHEN 0X3d908093 THEN NULL END)))); -- 1ms;
SELECT DISTINCT ((0.6613401388031294)+(NULL)) FROM t0 WHERE (((((((((0.9347628764100904)AND(0.8483550659945835)))OR(NULL)))AND(((x'c94f')>>('1832980906')))))OR((NOT (0.19068115388084217))))); -- 0ms;
SELECT DISTINCT (((TYPEOF(''), t0.c0 COLLATE NOCASE, ((((x'')OR(vt0.c0)))OR(t0.c0))))>((t0.c0 COLLATE NOCASE, (~ (vt0.c1)), UNLIKELY(DISTINCT vt0.c1)))), (((vt0.c1, -2049264460, 'fb[[]\l]&h{')) NOT BETWEEN (((NOT (vt0.c0)), x'', NULL)) AND ((TRIM(NULL), ((((vt0.c0)AND(vt0.c1)))OR(t0.c0)), UNLIKELY(t0.c0)))), GROUP_CONCAT(((vt0.c1)|(vt0.c1))) FROM vt0 LIMIT 812168965 OFFSET -818088791;SELECT DISTINCT CUME_DIST() OVER ( RANGE  CURRENT ROW) FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL COUNT((+ (vt0.c0))) FROM vt0 WHERE (((((((((((('0.8821770251474024'))>((''))))OR(((0.6304442109824765) NOT NULL))))OR(CAST('-1268192516' AS REAL))))AND(CASE x'd56d'  WHEN NULL THEN x'' ELSE '-2019765280' END)))OR(((NULL)|('754401146'))))); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)%(t0.c0)))AND((+ (vt0.c1)))))OR('EIhg&\nsij' COLLATE RTRIM)))OR(((((0.8509887347666782)AND(t0.c0)))AND(vt0.c1)))))AND((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))) FROM t0;SELECT AVG((((t0.c0))<>((t0.c0)))), ((((vt0.c0) BETWEEN (t0.c0) AND (vt0.c1)))<=(CASE WHEN NULL THEN vt0.c0 END)), CUME_DIST() OVER ( RANGE  CURRENT ROW) FROM vt0 WHERE (((CAST(0.18582748525965842 AS TEXT)) IS FALSE));SELECT DISTINCT ((((((((vt0.c1 COLLATE BINARY)OR(CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 END)))AND(((((t0.c0)OR(t0.c0)))AND(vt0.c0)))))AND((t0.c0 IN ()))))AND(((vt0.c0)/(vt0.c1)))) FROM vt0 WHERE ((((('')IS NOT(0.06626353168185661))) IS TRUE)); -- 0ms;
SELECT DISTINCT LEAD(json_array_length(((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1))), (x'' IN ()), (json_type(t0.c0) IN ())) OVER ( PARTITION BY CAST(CAST(NULL AS BLOB) AS BLOB), CASE (((t0.c0, vt0.c1, vt0.c0))!=((vt0.c1, vt0.c0, vt0.c0)))  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN t0.c0 COLLATE BINARY WHEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c0 ELSE 0.6938409432512862 END THEN (- ('-1467943063')) WHEN vt0.c0 THEN CAST(NULL AS REAL) ELSE t0.c0 END RANGE ((t0.c0) IS FALSE) PRECEDING), NTILE(((((x'f34d') BETWEEN (1104584238) AND (vt0.c1))) NOT NULL)) OVER (), (json_patch(vt0.c0, vt0.c1) IN (((t0.c0)!=(vt0.c1)))), ((((t0.c0)+(vt0.c0)))=(((vt0.c1) NOT BETWEEN (vt0.c0) AND ('Egh\n')))), (- (((vt0.c0)IS NOT(t0.c0)))) FROM t0, vt0;SELECT DISTINCT SUM(((vt0.c0)LIKE(0.7213152691176533)) COLLATE RTRIM) FROM t0;SELECT ALL CAST(((vt0.c0)%(vt0.c0)) AS INTEGER) FROM t0 WHERE (CASE ((NULL)<(x''))  WHEN ((((x'410a')AND(NULL)))OR(x'4639')) THEN ((((NULL)AND(NULL)))AND(0.6153710916379641)) WHEN ((1674686450) NOT BETWEEN (x'dce0') AND (x'')) THEN ((((((((0.2865899249609105)AND(NULL)))AND(NULL)))OR('-1672147835')))OR('*{')) WHEN (- (NULL)) THEN json_insert('-1517955188', x'd6a4', NULL, NULL, 0.95316478905819) END) ORDER BY ((((((((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))OR(vt0.c1)))OR(0.7172429774729796)))AND(((((t0.c0)AND(t0.c0)))AND(t0.c0)))) DESC, ((((t0.c0)OR(vt0.c1)))LIKE(TYPEOF(DISTINCT vt0.c0)))  NULLS LAST;SELECT (((x'' IN ())) NOT NULL) FROM vt0, t0 WHERE ((((((((((((0.873630648610475, '^n', '1174496160')) BETWEEN ((NULL, 0.17487021214353848, x'2ec7')) AND ((x'', NULL, 0.8781705118811713))))OR('-1124393142' COLLATE BINARY)))AND(((((6.2508425E8)OR(NULL)))OR('0.6882954794207123')))))OR((~ ('')))))OR(('>m8m-n' IN ())))) ORDER BY ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)LIKE((((vt0.c0)) NOT BETWEEN ((t0.c0)) AND ((''))))) DESC, (+ (((t0.c0) IS TRUE))); -- 1ms;
SELECT ALL ((COALESCE(vt0.c1, vt0.c0, vt0.c0, vt0.c0, x'', 0.7702137740678204))*(CAST(t0.c0 AS INTEGER))) FROM vt0 WHERE (CAST(((('h{X1lCeE')) BETWEEN (('-1931246605')) AND ((x'873e'))) AS BLOB));SELECT ALL PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT (~ ((vt0.c0 IN ()))) FROM t0, vt0 WHERE ((NOT ('-2093876119'))); -- 0ms;
SELECT ALL LAG(LTRIM(t0.c0 COLLATE BINARY), (NULL IN ()), ((CAST(t0.c0 AS INTEGER))*(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END))) OVER ( ROWS  CURRENT ROW EXCLUDE CURRENT ROW), ((NULLIF(vt0.c0, vt0.c0)) BETWEEN ((vt0.c0 IN ())) AND (t0.c0)), ((((vt0.c1)IS NOT(vt0.c0))) ISNULL) FROM t0 WHERE (NULL);SELECT DISTINCT (((((vt0.c1)AND(vt0.c0)))AND(vt0.c0)) IN (0.6601880124427905)) FROM t0 ORDER BY (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((((t0.c0)/(vt0.c0)))))  NULLS LAST;SELECT CASE ((0.8946432641064379) ISNULL)  WHEN (NOT (t0.c0)) THEN ((t0.c0)IS(vt0.c1)) END, load_extension(TOTAL(vt0.c1)), vt0.c0 FROM vt0 WHERE (((((']KX읉趰s>㥓')GLOB(x'1dc5'))) NOT BETWEEN (CAST(x'' AS INTEGER)) AND ((('1e500') IS TRUE))));SELECT (((((vt0.c1))=((vt0.c0))))GLOB(vt0.c1)) FROM t0 WHERE ((((0.47118401051244674)<('1923791718')) IN ()));SELECT ALL ((UPPER(vt0.c0))IS NOT((+ (vt0.c0)))) FROM vt0, t0 WHERE (json_quote((('u,_/')|(NULL)))) LIMIT -1177654988 OFFSET 1766590203; -- 0ms;
SELECT DISTINCT TOTAL(t0.c0) FROM vt0, t0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0, vt0 WHERE ((((((0.6221892499978665))>=((NULL))))<(CASE WHEN 0.7630280595631647 THEN x'' END))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt0, t0 ORDER BY ((((((t0.c0)AND(t0.c0)))AND(vt0.c1))) IS FALSE) DESC  NULLS LAST, CASE WHEN ((((((((t0.c0)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c1)) THEN ((vt0.c1) ISNULL) END ASC LIMIT 1086087142 OFFSET -1450946408; -- 1ms;
SELECT ALL CASE (0X7f4b8113 IN ())  WHEN CAST(0.47611446159996884 AS BLOB) THEN COUNT(*) WHEN (((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN CAST(x'' AS TEXT) WHEN (t0.c0 IN ()) THEN ((((vt0.c1)OR(t0.c0)))OR(vt0.c1)) ELSE CAST(t0.c0 AS BLOB) END FROM t0 WHERE (((((((NULL) ISNULL))AND(((((x'')OR(-1361078023)))AND('')))))AND((- (NULL)))));SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((((((vt0.c1)AND(vt0.c0)))OR(t0.c0)))) AND ((CASE WHEN vt0.c0 THEN t0.c0 ELSE vt0.c1 END))) FROM vt0;SELECT DISTINCT ((((COUNT(vt0.c0))OR(((vt0.c0)AND(t0.c0)))))OR(((t0.c0) NOT NULL))) FROM vt0, t0; -- 0ms;
SELECT CAST(vt0.c1 AS BLOB) COLLATE RTRIM, NULL, ((t0.c0 COLLATE BINARY)<((- (t0.c0)))), ((((((t0.c0)OR(vt0.c1)))AND(vt0.c1)))<(((vt0.c0) BETWEEN ('_)ef_^顄Y') AND (vt0.c0)))), (~ (GROUP_CONCAT(vt0.c1))) FROM t0;SELECT ALL (COUNT(*) IN (x'')), t0.c0, ((vt0.c0 COLLATE RTRIM)|(((vt0.c0)*(t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT COUNT(((t0.c0) BETWEEN (t0.c0) AND (vt0.c0)) COLLATE BINARY) OVER () FROM t0, vt0 GROUP BY ((((t0.c0)||(t0.c0)))<<('EgA^' COLLATE BINARY)), ((vt0.c1) BETWEEN ((t0.c0 IN ())) AND ((((t0.c0))<((vt0.c0))))), ((((t0.c0 COLLATE BINARY)OR(vt0.c0 COLLATE NOCASE)))AND(vt0.c0 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT (NOT (((vt0.c1)*(t0.c0)))) FROM t0 WHERE (0X504d2384) GROUP BY ((((((((vt0.c1)AND(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE x'' END)))AND(NULL)))OR(LTRIM(t0.c0))))AND(COALESCE(vt0.c0, t0.c0, vt0.c0, t0.c0))) HAVING ((vt0.c1)-(vt0.c0)) COLLATE NOCASE;SELECT (((((((((vt0.c1)AND(vt0.c1)))AND(t0.c0)))AND(vt0.c0)))AND(vt0.c1)) IN ()), ((CAST(vt0.c1 AS TEXT))+(((vt0.c1)!=(t0.c0)))), UNLIKELY(DISTINCT CAST(0x1765f729 AS REAL)) FROM t0, vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0)OR('')))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0))) NOT BETWEEN (vt0.c0) AND ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))))) FROM t0;SELECT ALL AVG(CASE WHEN vt0.c1 THEN vt0.c0 END) OVER () FROM t0, vt0 WHERE ((((((('')AND(x'dc16')))AND(0.32812371269107155)))>(CAST(NULL AS TEXT)))) ORDER BY (- ((((('80775720')OR(vt0.c0)))AND(vt0.c0)))) DESC; -- 1ms;
SELECT DISTINCT LAG(CASE x'11a2'  WHEN '1115750315' THEN t0.c0 END COLLATE RTRIM, '-922877179', LIKE(t0.c0, (t0.c0 IN ()))) OVER () FROM t0 GROUP BY (~ (vt0.c0 COLLATE BINARY)), CASE WHEN ((0.4048235303722577)<<(vt0.c1)) THEN ((vt0.c1) NOTNULL) END, vt0.c1;SELECT ALL (MAX(vt0.c0) IN ()), ((((CASE WHEN vt0.c1 THEN t0.c0 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)OR(CAST(t0.c0 AS BLOB))))OR(LOWER(vt0.c1))), LEAD((NOT (((vt0.c0)&(t0.c0)))), ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) COLLATE RTRIM, 0.05259693923422393) OVER () FROM t0, vt0; -- 0ms;
SELECT AVG('-578586635'), (((+ (vt0.c0))) NOT BETWEEN (GLOB(vt0.c0, vt0.c1)) AND (CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)), NTH_VALUE((((NOT (vt0.c1))) ISNULL), (vt0.c1 COLLATE NOCASE IN (CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END))) OVER (), CAST(CAST(vt0.c0 AS NUMERIC) AS BLOB), ((((((((INSTR(t0.c0, x''))OR(TOTAL_CHANGES())))AND(AVG(t0.c0))))OR(vt0.c1 COLLATE RTRIM)))AND(SUM(t0.c0))) FROM vt0, t0 WHERE ((((('1138596332') NOT BETWEEN (NULL) AND (0.46043245986503223)))GLOB(CAST('!Ne' AS TEXT))));SELECT DISTINCT ABS(DISTINCT vt0.c0) FROM vt0 WHERE (((((((((CAST('cF3HR櫁x' AS REAL))OR((x'' IN ()))))AND((NOT (0x3d2ba78a)))))OR(((-1.941050964E9)AND('}pZ#x{Bj')))))OR((((NULL))>=((x'')))))) ORDER BY NULL ASC  NULLS FIRST; -- 0ms;
SELECT ALL ((((vt0.c0)<(vt0.c0)))|(CAST(vt0.c0 AS INTEGER))) FROM t0, vt0 NOT INDEXED; -- 0ms;
SELECT ALL COALESCE(DISTINCT COALESCE(vt0.c0, t0.c0), ((((t0.c0)AND(0.38267972818430385)))OR(t0.c0))) FROM vt0, t0; -- 0ms;
SELECT ALL (((((vt0.c1))==((t0.c0)))) BETWEEN (GROUP_CONCAT(t0.c0)) AND ((- (0x49de3308)))) FROM vt0, t0 WHERE (((NULL) NOT BETWEEN (x'') AND ('-8103768')) COLLATE NOCASE) GROUP BY ((((((t0.c0)LIKE(vt0.c0)))OR(t0.c0 COLLATE NOCASE)))OR(((((t0.c0)AND(vt0.c0)))OR(t0.c0)))) HAVING t0.c0; -- 0ms;
SELECT DISTINCT CASE MIN(t0.c0)  WHEN vt0.c0 THEN vt0.c0 ELSE ((vt0.c1)*(vt0.c1)) END FROM vt0 WHERE ((((('-1176144724'))<=((128740316))) IN ((0x55b669e3 IN ()), (~ (6582583.0)))));SELECT DISTINCT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END)AND(((vt0.c1)%(vt0.c0)))))AND(((('833587544'))>((x'4e9f'))))) FROM vt0, t0 WHERE (((+ (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((vt0.c0) IS TRUE))AND((vt0.c0 IN (vt0.c1)))))AND(((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))AND((NOT (vt0.c0)))))AND(CAST(vt0.c0 AS NUMERIC))), ((((((((((((vt0.c1)AND(vt0.c1)))OR(t0.c0)))OR(vt0.c0)))AND(t0.c0)))OR(NULLIF(vt0.c1, t0.c0))))AND(CAST(vt0.c1 AS TEXT))), HEX((0.08635690801325535 IN (t0.c0))), LAG(((t0.c0)GLOB('2064801731')), CAST(((vt0.c0)*(t0.c0)) AS REAL), ((CAST(vt0.c1 AS BLOB)) IS TRUE)) OVER (), ((CAST(t0.c0 AS INTEGER)) IS TRUE) FROM vt0, t0 WHERE ('431855661'); -- 1ms;
SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE (((((0xffffffffd536a9cc)IS NOT(NULL)))%(((x'')>>(NULL))))) GROUP BY vt0.c1; -- 0ms;
SELECT DISTINCT ((MAX(vt0.c1)) IS FALSE), ((((vt0.c0) IS FALSE))%(((t0.c0)*(vt0.c0)))), CAST(((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c1)))AND(0.9773387086956226)))OR(vt0.c1)) AS INTEGER) FROM vt0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE NOCASE)GLOB(MIN(vt0.c0))) FROM t0 FULL OUTER JOIN vt0 ON 'pKASCQ}O'; -- 0ms;
SELECT NULL FROM vt0 WHERE (((CASE NULL  WHEN '-225067603' THEN x'' WHEN '0.1742488122940945' THEN '	h)1,?AGU' WHEN NULL THEN 0.14507543384761568 END)<(((('}䃎', x'a880', NULL))<=((-1.225538575E9, NULL, '')))))); -- 1ms;
SELECT ALL 0.20085663664937536 COLLATE RTRIM, (t0.c0 IN ()) COLLATE NOCASE, RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT NTH_VALUE('?_%U|Yg', '1719184761') OVER (), (- ((t0.c0 IN ()))), ((((vt0.c1) NOT NULL))OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 ELSE 974646212 END)) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((0.8371232545621122)=(UNLIKELY(0Xffffffffd4502ab8))) FROM vt0; -- 0ms;
SELECT ALL vt0.c1 FROM t0 LIMIT -1923367985;SELECT DISTINCT 632318527 FROM t0; -- 0ms;
SELECT DISTINCT (- (CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)), t0.c0, ((((((((vt0.c0)OR(t0.c0)))AND(t0.c0)))OR(((((t0.c0)AND(t0.c0)))AND(vt0.c1)))))AND(highlight(t0.c0, vt0.c1, 0xfffffffffb357bbb, vt0.c0))) FROM t0 ORDER BY CAST((vt0.c1 IN ()) AS NUMERIC) ASC  NULLS LAST;SELECT DISTINCT (((8.33587544E8, ((t0.c0)%(NULL)), ((0x5e3065e8)>=(vt0.c1)), ((((t0.c0)AND(vt0.c0)))OR(vt0.c1)), (+ (vt0.c0))))<((((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)), NULL, vt0.c0, t0.c0 COLLATE RTRIM, '' COLLATE RTRIM))) FROM t0;SELECT IFNULL(DISTINCT t0.c0, t0.c0) COLLATE BINARY FROM t0, vt0 WHERE (MAX(CASE 0.47112735871636424  WHEN 0xffffffffe4a86a22 THEN '-553609612' END, CAST(x'0570' AS TEXT), CAST('-486187170' AS TEXT), ((0.3995325598159415) NOT NULL))); -- 0ms;
SELECT DISTINCT vt0.c0 FROM t0;SELECT SUM(((vt0.c1) IS TRUE)) OVER ( ORDER BY ((((t0.c0)<>(vt0.c0))) ISNULL) ASC) FROM vt0 LIMIT -92345796;SELECT ((COUNT(*)) NOT BETWEEN (vt0.c0) AND (CAST(0.7887064242072095 AS NUMERIC))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT rtreenode(((((((((vt0.c1)AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)))AND(t0.c0)), COALESCE(DISTINCT NULL, vt0.c0, vt0.c1, t0.c0)) FROM t0, vt0 WHERE (CASE ((((0.8022119527276815)OR('-148343639')))AND(''))  WHEN (((('&')OR(NULL)))OR('-225067603')) THEN CAST('' AS TEXT) ELSE 0.5685523978757377 END); -- 0ms;
SELECT (((vt0.c0, vt0.c1, vt0.c1)) BETWEEN (((((t0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c0))), (((vt0.c0, t0.c0, t0.c0))=((vt0.c0, vt0.c0, vt0.c0))), vt0.c1)) AND (((((vt0.c0)) BETWEEN ((t0.c0)) AND ((vt0.c1))), CAST(vt0.c1 AS INTEGER), vt0.c0 COLLATE NOCASE))) FROM t0, vt0 WHERE (-4.5872483E8); -- 1ms;
SELECT ALL (- (vt0.c0)) FROM t0 ORDER BY vt0.c0;SELECT DISTINCT ABS(((vt0.c0)AND(vt0.c1))) FROM vt0 WHERE (((((0.21517965586483911) NOT BETWEEN (0Xffffffffa98ad369) AND (x''))) ISNULL)); -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c1)) BETWEEN (('s섰64')) AND ((0.8368650790254949))))), NULLIF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)), ((vt0.c0)>>(vt0.c0))), ((AVG('')) NOT BETWEEN (((((vt0.c1)AND(vt0.c0)))OR(vt0.c0))) AND ((((t0.c0, vt0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((t0.c0, vt0.c1, vt0.c1))))) FROM t0 WHERE (CAST((((x'', x'', 0.9202762003114734)) NOT BETWEEN ((NULL, 'wzJO2', '')) AND ((NULL, x'', x''))) AS INTEGER));SELECT DISTINCT (((((t0.c0)) BETWEEN ((vt0.c0)) AND ((t0.c0)))) BETWEEN (((vt0.c0) NOTNULL)) AND (vt0.c1 COLLATE BINARY)) FROM vt0, t0; -- 0ms;
SELECT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) NOT BETWEEN (((t0.c0) BETWEEN (vt0.c0) AND (t0.c0))) AND (((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))) FROM vt0 GROUP BY CAST((t0.c0 IN ()) AS INTEGER) HAVING ((t0.c0 COLLATE RTRIM) NOT BETWEEN (t0.c0) AND (((t0.c0) BETWEEN (t0.c0) AND (''))));SELECT DISTINCT ((TRIM(vt0.c0)) IS TRUE) FROM t0, vt0; -- 1ms;
SELECT DISTINCT ((CASE t0.c0  WHEN vt0.c1 THEN t0.c0 ELSE vt0.c0 END)>=(((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))), ((SUM(vt0.c0)) BETWEEN (vt0.c1) AND (((t0.c0)*(vt0.c1)))), CAST(CASE t0.c0  WHEN NULL THEN t0.c0 END AS REAL) FROM vt0, t0 WHERE (IFNULL((x'' IN ()), ((x'')IS('1158181920')))); -- 0ms;
SELECT DISTINCT (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c0 END IN ()), RTRIM((~ (vt0.c0))), GROUP_CONCAT((((NULL, x'', vt0.c0))>=((vt0.c1, vt0.c1, t0.c0)))) FROM t0, vt0 WHERE (CAST((x'' IN ()) AS TEXT)) GROUP BY ((((t0.c0) IS FALSE))LIKE(((vt0.c0) BETWEEN (t0.c0) AND (t0.c0)))) HAVING (~ ((((vt0.c0, 0.4643678724040795, vt0.c0)) BETWEEN ((NULL, t0.c0, vt0.c1)) AND (('gC橏貱', t0.c0, vt0.c0))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)) COLLATE RTRIM FROM vt0, t0 LIMIT -1308549528; -- 0ms;
SELECT DISTINCT SUM((vt0.c0 IN (vt0.c0, t0.c0))), (((t0.c0 IN ()))=(vt0.c1)), t0.c0, (((vt0.c0)) NOT BETWEEN ((((((((((0Xffffffffa817d0ef)OR(t0.c0)))OR(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))) AND ((vt0.c0 COLLATE RTRIM))), (((CAST(t0.c0 AS REAL)))<=((((vt0.c0) IS FALSE)))) FROM vt0 WHERE (CASE WHEN CAST(x'a9ef' AS REAL) THEN 0X5079a3c6 ELSE ((((((((x'ab52')OR(0.5730366066926809)))OR('yZ')))OR(0.06548865777518198)))AND(-777028644)) END) LIMIT -2095455736;SELECT DISTINCT ((((((vt0.c1)AND(vt0.c1)))AND('(42-axG'))) IS FALSE) FROM vt0, t0; -- 0ms;
SELECT DISTINCT MAX(((vt0.c1)IS(t0.c0))) FROM t0 WHERE ((NOT ((+ (0.25251777424127986))))) ORDER BY TYPEOF(DISTINCT ((vt0.c0) ISNULL)), ((vt0.c0 COLLATE NOCASE) BETWEEN (HEX(vt0.c1)) AND ((((vt0.c0, t0.c0, vt0.c1))>=((t0.c0, vt0.c1, t0.c0))))), ((((((((((((t0.c0)OR(t0.c0)))AND(vt0.c1)))OR(vt0.c1)))AND(380618676)))AND(t0.c0)))OR(vt0.c1)) COLLATE BINARY LIMIT 35320330;SELECT DISTINCT ((COUNT(t0.c0))GLOB(((t0.c0) NOTNULL))) FROM t0, vt0 WHERE ((920770706 IN ())); -- 0ms;
SELECT COUNT(*), ((vt0.c1)*(vt0.c1)) COLLATE BINARY, ((t0.c0) ISNULL), (- (((((t0.c0)OR(vt0.c1)))AND(t0.c0)))), t0.c0 FROM t0 GROUP BY ((vt0.c0) NOT NULL) COLLATE NOCASE, CASE WHEN CAST(vt0.c1 AS NUMERIC) THEN (~ (vt0.c1)) ELSE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1)) END, (((t0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((CASE WHEN 'E.n櫁yL' THEN vt0.c0 ELSE vt0.c0 END, LTRIM(vt0.c0, vt0.c1), ((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0)))OR(t0.c0)))AND(vt0.c1)))) AND ((CAST(t0.c0 AS TEXT), CAST(vt0.c1 AS BLOB), ((vt0.c0) IS FALSE)))), (((t0.c0, t0.c0, vt0.c1)) BETWEEN ((NULL, '496073952', ((t0.c0)<(t0.c0)))) AND ((t0.c0, vt0.c0, (t0.c0 IN ())))), (((vt0.c1, t0.c0, vt0.c0)) NOT BETWEEN (('0.6541557041447186', CAST(t0.c0 AS TEXT), CAST(vt0.c1 AS INTEGER))) AND (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((t0.c0))), CAST(vt0.c1 AS TEXT), ((0.9628376421703657) IS TRUE))));SELECT t0.c0 FROM vt0 GROUP BY CASE (((vt0.c0)) NOT BETWEEN (('-481443778')) AND ((vt0.c0)))  WHEN ((((t0.c0)AND(vt0.c1)))OR(vt0.c1)) THEN ((vt0.c1) NOTNULL) END;SELECT DISTINCT (((vt0.c0))>((CAST(vt0.c0 AS TEXT)))), CAST((t0.c0 IN ()) AS BLOB), SUM(((vt0.c1) ISNULL)) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT CAST(SQLITE_SOURCE_ID() AS REAL), (vt0.c1 COLLATE NOCASE IN ()), ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)<=(MIN(vt0.c1))) FROM vt0; -- 0ms;
SELECT NTH_VALUE(CASE ((vt0.c0) IS FALSE)  WHEN (vt0.c0 IN (vt0.c0, t0.c0)) THEN ((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)) WHEN ((vt0.c1)<(0X67398ada)) THEN t0.c0 WHEN vt0.c0 THEN TRIM(DISTINCT vt0.c0) WHEN (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN t0.c0 WHEN ((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c1)) THEN x'' ELSE ((vt0.c1)-(vt0.c1)) END, ((((vt0.c1)OR(NULL)))AND(CAST(vt0.c0 AS INTEGER)))) OVER ( ROWS BETWEEN ((((~ (0x277c82af))))>((((((((((vt0.c1)OR(0x1fc0a30)))AND(vt0.c0)))AND(t0.c0)))OR(t0.c0))))) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW) FROM t0, vt0 WHERE (((((('oo4\n	')<<(NULL))))>((CAST('' AS INTEGER))))); -- 0ms;
SELECT ALL vt0.c0, (((vt0.c1, vt0.c0, vt0.c1))!=((vt0.c1, t0.c0, t0.c0))) COLLATE BINARY, COUNT(*) COLLATE NOCASE, ((((SUM(vt0.c0))AND(CAST(vt0.c0 AS NUMERIC))))OR(MIN('0.7471467661503433'))), ((((((t0.c0)AND(t0.c0)))AND(t0.c0)))%((+ ('1259444776')))) FROM vt0, t0 ORDER BY CAST('(.#K' AS TEXT) COLLATE NOCASE  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE AVG(vt0.c0)  WHEN (- (t0.c0)) THEN ((vt0.c0) NOTNULL) ELSE ((t0.c0)<<(vt0.c1)) END, (+ ((((vt0.c0)) BETWEEN ((3.40007462E8)) AND ((t0.c0))))), ((HEX(vt0.c0))<<(NULL)) FROM vt0, t0 WHERE (HEX(DISTINCT ((((x'')OR(NULL)))AND('-1509456787')))); -- 0ms;
SELECT CASE ((vt0.c0) BETWEEN (vt0.c0) AND (vt0.c1))  WHEN ((((vt0.c0)OR(t0.c0)))OR(vt0.c0)) THEN CAST(vt0.c0 AS TEXT) ELSE ((vt0.c1) IS FALSE) END, TOTAL(CASE WHEN t0.c0 THEN 0.9294733786611965 WHEN NULL THEN vt0.c0 WHEN vt0.c0 THEN NULL ELSE x'' END), (NOT (((((t0.c0)AND(vt0.c1)))OR(vt0.c0)))) FROM t0, vt0 ORDER BY ((vt0.c1 IN ()) IN ()); -- 0ms;
SELECT ALL (((((t0.c0, vt0.c1, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0, 0.8327063532365349, vt0.c1)) AND ((vt0.c1, t0.c0, t0.c0, vt0.c0, '')))) NOT NULL), t0.c0, (+ (vt0.c1)) COLLATE RTRIM FROM t0, vt0 WHERE ((((('tq')AND('.䦨阍v')))OR('-960363259')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((('4393139' IN ()))<(t0.c0)), LOWER(vt0.c1) COLLATE NOCASE, (((('z.	p_paj{')LIKE(vt0.c0)))<>((~ (t0.c0)))) FROM vt0 WHERE (((((x'' COLLATE BINARY)OR(CASE WHEN NULL THEN NULL WHEN 0.6878133290995796 THEN x'' WHEN '' THEN x'8016' ELSE '661098265' END)))OR((('d[')LIKE(x'')))));SELECT t0.c0 FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((((vt0.c0) NOT BETWEEN (t0.c0) AND (vt0.c1)))) AND ((CAST(t0.c0 AS INTEGER)))), ((((CAST(vt0.c0 AS REAL))AND(COALESCE(DISTINCT vt0.c1, NULL, t0.c0, vt0.c0))))OR(((((vt0.c1)OR(t0.c0)))OR(vt0.c0)))), (((CAST(t0.c0 AS TEXT)))>=(((vt0.c0 IN ())))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT '|LꅘlY15' FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0 LIMIT 0 OFFSET 968290648; -- 0ms;
SELECT DISTINCT CASE WHEN 0Xffffffffb449de34 THEN vt0.c1 ELSE vt0.c0 END COLLATE BINARY FROM t0 ORDER BY (((vt0.c1) NOT NULL) IN ()) DESC;SELECT DISTINCT ((((((vt0.c1)%(NULL)))AND((vt0.c0 IN ()))))AND(CAST(t0.c0 AS TEXT))), (UPPER(vt0.c1) IN (((vt0.c0)!=(t0.c0)), 0xffffffffb5bfe514)), CUME_DIST() OVER () FROM vt0, t0 WHERE (LIKELIHOOD(DISTINCT (((('')AND(0.7809481542330527)))AND(NULL)), 0.7935741680959028)); -- 2ms;
SELECT ALL t0.c0 FROM vt0, t0 WHERE (((((NULL)%(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c1)) COLLATE BINARY, CAST(1504448699 AS INTEGER) COLLATE NOCASE, CAST(((((((((vt0.c1)AND(t0.c0)))AND(t0.c0)))AND(vt0.c0)))AND(t0.c0)) AS INTEGER) FROM t0 GROUP BY TRIM(DISTINCT 0X24332d47, NULL), (((((vt0.c0)==(vt0.c1))))<((CAST(t0.c0 AS REAL)))), ((((((((t0.c0)AND(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR(t0.c0)) COLLATE NOCASE;SELECT ALL '' FROM t0 LIMIT -1476023338; -- 0ms;
SELECT CAST(((t0.c0)>=(vt0.c0)) AS TEXT), NULL, ((((vt0.c0)%(vt0.c0)))>((vt0.c0 IN ()))) FROM vt0, t0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0, vt0 WHERE (((CAST(x'' AS NUMERIC)) NOT BETWEEN ((('.]S') NOT BETWEEN ('0.19068115388084217') AND (0.8256731715595038))) AND (CASE 0xffffffffa5ea119f  WHEN 'rO鴳' THEN '0.2351425671932973' ELSE 'b0ꇳ' END))) GROUP BY (((((t0.c0))>((vt0.c0)))) NOT BETWEEN (((vt0.c1)>>(vt0.c0))) AND (((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)))) HAVING (COUNT('-1940315179') IN ()); -- 0ms;
SELECT DISTINCT (+ (((((((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))AND(t0.c0)))AND(vt0.c0)))OR(t0.c0)))AND(vt0.c1)))) FROM t0 LIMIT 1789569018 OFFSET -593297106;SELECT DISTINCT (((((vt0.c1, t0.c0, '552435472')) BETWEEN ((t0.c0, vt0.c1, t0.c0)) AND ((vt0.c1, vt0.c1, t0.c0))))>((t0.c0 IN ()))) FROM t0;SELECT DISTINCT x'' COLLATE NOCASE COLLATE NOCASE, ((t0.c0) BETWEEN (vt0.c0) AND (t0.c0)) COLLATE BINARY, ROW_NUMBER() OVER () FROM vt0, t0 WHERE ((NOT (CAST('-673795920' AS REAL)))); -- 0ms;
SELECT DISTINCT x'', (SQLITE_VERSION() IN (vt0.c0 COLLATE NOCASE)), (((t0.c0)>>(vt0.c0)) IN (x'26af0ac0', vt0.c0 COLLATE NOCASE)) FROM vt0 WHERE (((NULL COLLATE NOCASE) IS TRUE));SELECT TRIM(DISTINCT ((vt0.c0) NOT BETWEEN ('-148343639') AND (t0.c0)), ((((((((t0.c0)OR(vt0.c1)))OR('1400965485')))AND(vt0.c0)))OR(vt0.c0))), ((vt0.c0)<=(vt0.c1)) COLLATE RTRIM, CAST(vt0.c0 AS TEXT) FROM vt0 WHERE (CASE WHEN CAST(NULL AS NUMERIC) THEN ((0.5545624984115646) IS FALSE) ELSE (~ ('-1941050964')) END) LIMIT -1714933883;SELECT DISTINCT ((((((((vt0.c0)OR('iv1*f')))AND(vt0.c1)))AND(vt0.c1)))AND(t0.c0)) COLLATE NOCASE FROM vt0 WHERE (((x'c131' COLLATE NOCASE) IS FALSE));SELECT ALL (((CAST(t0.c0 AS BLOB)))<>((((((t0.c0)AND(vt0.c0)))AND(t0.c0))))), PERCENT_RANK() OVER (), ((((+ (vt0.c0))))>=((CAST(vt0.c0 AS NUMERIC)))), 0x24797a06, ((((vt0.c1)&(vt0.c1))) ISNULL) FROM t0;SELECT DISTINCT (((+ (vt0.c1)))LIKE(CAST(vt0.c1 AS TEXT))), CAST(AVG('c*] *{ꓵOv') AS NUMERIC), COUNT(*) FROM t0 WHERE ((((json_quote('-768378413')))>=((((x'') ISNULL))))) ORDER BY ((((vt0.c0)!=(vt0.c1)))>>((((vt0.c1))<=((t0.c0)))));SELECT ((+ (t0.c0)) IN ()) FROM t0 WHERE ((- (((NULL) NOT BETWEEN (0.8205141506379692) AND (x''))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(vt0.c0) OVER () FROM t0, vt0; -- 0ms;
SELECT DISTINCT (((LTRIM(t0.c0)))<>(((((t0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))))), (((t0.c0) NOTNULL) IN (CASE WHEN t0.c0 THEN vt0.c0 ELSE vt0.c1 END, vt0.c1 COLLATE RTRIM)), SQLITE_COMPILEOPTION_GET(CAST(x'' AS NUMERIC)) FROM vt0;SELECT ALL (((vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((GROUP_CONCAT(vt0.c0), (- (x'')), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)) AND (((((0.41354851153473005))>=((vt0.c1))), ((((((((0.4931568138073503)OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0)))OR(vt0.c0)), CASE WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END))) FROM t0, vt0 WHERE ((((('-18485602')AND(0.9304008260105324)))%(((x'') IS FALSE)))) LIMIT 355093900; -- 0ms;
SELECT ALL CAST(TOTAL(vt0.c1) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT AVG((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((t0.c0)))) OVER (), (((SUM(vt0.c0), CAST(vt0.c0 AS NUMERIC), MAX(vt0.c1)))<((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, (((vt0.c1, t0.c0, vt0.c1)) BETWEEN ((t0.c0, vt0.c1, vt0.c0)) AND ((vt0.c1, vt0.c1, '0.9174954040058935'))), SUM(t0.c0)))), GROUP_CONCAT(SUM(((((t0.c0)OR(t0.c0)))OR('-18485602')))), (((~ (t0.c0))) BETWEEN (COUNT(*)) AND (((vt0.c1) ISNULL))), (- (t0.c0 COLLATE NOCASE)) FROM vt0 LIMIT -1308549528 OFFSET -957557727 UNION SELECT DISTINCT SUM(CAST(t0.c0 AS INTEGER)), CAST(((((vt0.c1)AND(t0.c0)))AND(vt0.c0)) AS REAL), ((((((((((t0.c0)/(x'')))OR(vt0.c1 COLLATE NOCASE)))AND(SUM('-716241512'))))OR(vt0.c0 COLLATE NOCASE)))AND(CASE WHEN vt0.c1 THEN vt0.c1 END)), t0.c0, x'' FROM t0 GROUP BY (vt0.c1 IN ()) COLLATE RTRIM;SELECT DISTINCT TYPEOF(CASE vt0.c1  WHEN 0.06282094683503237 THEN t0.c0 END) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1)<(t0.c0))) NOTNULL), ((IFNULL(t0.c0, vt0.c0)) BETWEEN (AVG(t0.c0)) AND ((t0.c0 IN ()))), (((((x'58ee' IN ()))OR(((t0.c0)<>(vt0.c1)))))AND(SUM(t0.c0))) FROM t0, vt0 ORDER BY vt0.c0  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN t0.c0 END)/(((t0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM t0;SELECT ALL COUNT(*) OVER (), (t0.c0 IN ()), ((((t0.c0)/(t0.c0)))!=(((t0.c0)/(vt0.c0)))) FROM vt0, t0 WHERE (((('tO', 'jX', x'')) BETWEEN ((CASE x''  WHEN 0X4aa3ead4 THEN ')?RT' WHEN 0.3296002149332805 THEN x'' WHEN x'' THEN 6582583.0 END, (((NULL)) BETWEEN (('152579120')) AND (('1599661253'))), (((('0.7473869237223955')AND(NULL)))OR(NULL)))) AND ((((x'339ddfd1')<<('')), ((x'') NOT BETWEEN (NULL) AND (0.1470825075279909)), (((('0.7336884050088345')OR('{AD|.')))OR('-1103378928')))))); -- 0ms;
SELECT (((~ (vt0.c1)))-(((t0.c0)IS NOT(t0.c0)))) FROM t0, vt0 WHERE (NULL) GROUP BY (+ ((((vt0.c1)) NOT BETWEEN ((0.24518814126793442)) AND ((vt0.c1))))) HAVING ((((CAST(t0.c0 AS REAL))OR(t0.c0 COLLATE BINARY)))OR(((t0.c0)>('bvj~^y')))); -- 0ms;
SELECT DISTINCT vt0.c1, (((((vt0.c0))>((t0.c0)))) ISNULL), ((((ABS(vt0.c1))AND(TOTAL(vt0.c1))))OR(load_extension(vt0.c1, t0.c0))) FROM t0, vt0 LIMIT -1394525826 OFFSET -889947471;SELECT DISTINCT 0.25496606419123713, t0.c0, (~ ('1378258070')) COLLATE BINARY FROM t0, vt0 ORDER BY ((TRIM(DISTINCT vt0.c0, vt0.c0))LIKE(((t0.c0) NOT NULL)))  NULLS FIRST; -- 0ms;
SELECT ALL ((CAST(t0.c0 AS TEXT))>(((vt0.c0) IS TRUE))) FROM t0;SELECT ALL AVG(((vt0.c0)+(t0.c0))), ((vt0.c0) BETWEEN (CASE vt0.c0  WHEN t0.c0 THEN t0.c0 ELSE vt0.c1 END) AND ((+ (t0.c0)))), TOTAL((vt0.c1 IN ())) FROM t0 WHERE ((((((('bj4RT')OR(204400839)))AND(NULL)))<=(0.45603700242223555 COLLATE NOCASE)));SELECT ALL AVG(CASE t0.c0  WHEN vt0.c0 THEN t0.c0 ELSE vt0.c0 END) OVER (), NTH_VALUE(((NULL)IS(vt0.c1 COLLATE NOCASE)), (NOT (CAST(vt0.c0 AS REAL)))) OVER (), t0.c0 FROM t0, vt0 WHERE ((((-796259524 IN ('605234470')))AND(((((((((((((NULL)AND(0.03973041023857837)))OR('놚N')))OR(x'72a5')))AND(0.7695515341239222)))OR('-370480928')))AND(x''))))); -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 COLLATE RTRIM THEN CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END END FROM t0;SELECT DISTINCT vt0.c1, ((UNLIKELY(DISTINCT vt0.c0))-(((t0.c0) IS TRUE))), LEAD((+ (CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)), GLOB((vt0.c0 IN (t0.c0)), t0.c0 COLLATE RTRIM), ((((vt0.c0)<<(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((t0.c0)OR(vt0.c1)))AND(x'')))AND(t0.c0)))OR('q4㘣'))))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0, t0 WHERE ((((NULL IN (x''))) NOT BETWEEN (((('wrA㽺/쏇')) BETWEEN ((x'')) AND ((0.9430358916722366)))) AND ((((('')AND(NULL)))AND(x''))))); -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS REAL))OR((vt0.c0 IN ()))), (NULL IN ()), ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c1))) NOT BETWEEN (CASE NULL  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 END) AND (COUNT(vt0.c0))) FROM vt0 WHERE ((((((0.4081600176416069, '', NULL))>((x'', '-1157401312', 'KOVfb1D'))))OR(CASE x''  WHEN x'dffd' THEN NULL END)));SELECT DISTINCT CAST(-835464692 AS BLOB) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (+ (((vt0.c1) BETWEEN (t0.c0) AND (t0.c0)))), ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||(vt0.c0)), LAG(((t0.c0)==(((vt0.c1) ISNULL))), (((t0.c0, vt0.c1, NULL))!=((vt0.c1, '1198601532', t0.c0))) COLLATE RTRIM, (('-148343639' COLLATE BINARY)!=(vt0.c0))) OVER ( ORDER BY (((vt0.c1)) BETWEEN ((NULL)) AND ((vt0.c1))) COLLATE RTRIM ASC  NULLS FIRST, GLOB(CAST(vt0.c1 AS INTEGER), ((t0.c0)/(vt0.c1))), ((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1))) IS TRUE) DESC RANGE  UNBOUNDED PRECEDING) FROM vt0 CROSS JOIN t0 ON IFNULL(t0.c0 COLLATE RTRIM, ((((vt0.c0)OR(vt0.c1)))OR(t0.c0))) WHERE ((((('199111367')<<(1.560797594E9)))<('-1977852368'))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)))AND(CAST(vt0.c1 AS INTEGER))), CASE WHEN (((t0.c0, -8.10026093E8, t0.c0))<=((t0.c0, t0.c0, vt0.c1))) THEN (((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((vt0.c0))) ELSE -9223372036854775808 END ASC  NULLS LAST; -- 1ms;
SELECT TOTAL((NOT (vt0.c1))) OVER () FROM vt0, t0 WHERE ((NOT (0X74fb11a1))); -- 0ms;
SELECT ALL (+ (vt0.c1 COLLATE NOCASE)) FROM t0 WHERE (CAST(CASE WHEN NULL THEN '152579120' END AS TEXT));SELECT ALL CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN 0.46154897170906073 THEN t0.c0 WHEN 0.011999671099821696 THEN vt0.c0 ELSE vt0.c0 END COLLATE RTRIM FROM t0 WHERE (CAST((~ (-1967717954)) AS NUMERIC));SELECT DISTINCT ((vt0.c1) IS TRUE) COLLATE NOCASE, (((vt0.c0, t0.c0, vt0.c0)) NOT BETWEEN ((((((((((vt0.c0)OR(t0.c0)))AND(vt0.c0)))OR(vt0.c0)))AND(t0.c0)), vt0.c1, ((('1918382425')) BETWEEN ((vt0.c1)) AND ((vt0.c1))))) AND ((CASE vt0.c0  WHEN vt0.c1 THEN t0.c0 ELSE t0.c0 END, ((((vt0.c0)AND(t0.c0)))AND(vt0.c0)), ((t0.c0) BETWEEN (vt0.c0) AND (vt0.c0))))), COUNT((+ (NULL))) FROM vt0, t0; -- 0ms;
SELECT ABS(DISTINCT (+ (vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c0 THEN ((((((((((((vt0.c1)OR('1929602786')))OR(t0.c0)))AND(t0.c0)))AND(vt0.c1)))AND(vt0.c0)))AND(t0.c0)) WHEN STRFTIME(vt0.c1, vt0.c0, t0.c0) THEN CASE t0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN t0.c0 ELSE vt0.c1 END WHEN ((((t0.c0)OR(t0.c0)))AND(t0.c0)) THEN (vt0.c1 IN (t0.c0, vt0.c0)) END FROM vt0 WHERE (((LIKELIHOOD(0.7044482469593949, 0.4799400954630456))&(((((596732816)OR('1917307329')))AND('955727143'))))) GROUP BY vt0.c1 HAVING TRIM(t0.c0) COLLATE BINARY;SELECT ALL LTRIM(0.0061485097855621396) FROM t0 CROSS JOIN vt0 ON ((((vt0.c1)-(vt0.c0))) NOT BETWEEN ((((vt0.c0))<=((vt0.c1)))) AND ((- (vt0.c1)))); -- 0ms;
SELECT DISTINCT ((DATE(vt0.c0, t0.c0, vt0.c0))&(((t0.c0)|(x'')))) FROM t0;SELECT ALL COUNT(DATETIME(vt0.c0, vt0.c0, vt0.c1)) OVER (), '-204243710', (NOT ((t0.c0 IN ()))) FROM t0 WHERE (CASE WHEN NULL THEN CASE ''  WHEN NULL THEN '0.5046362775053116' ELSE 0.7702137740678204 END WHEN (('-1644668087') BETWEEN (x'') AND (x'')) THEN NULL WHEN x'' THEN (((('?')AND('')))OR(x'bfd1')) END);SELECT DISTINCT TYPEOF(DISTINCT (NOT (x'c059'))) FROM vt0 WHERE (((((x'')OR(NULL)))AND('')) COLLATE BINARY); -- 0ms;
SELECT ALL ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END)AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0)))))OR(CAST(vt0.c1 AS REAL))), (((COUNT(*)))<=((TOTAL(vt0.c1)))), ((((((vt0.c1)OR(t0.c0)))OR(vt0.c1))) IS FALSE), GROUP_CONCAT(((t0.c0)<>(t0.c0))), vt0.c1 FROM vt0, t0 GROUP BY CAST(CASE t0.c0  WHEN '' THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END AS BLOB) HAVING (((((((((((vt0.c1, vt0.c1, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c0)) AND ((t0.c0, 233992256, vt0.c1))))AND(CAST(vt0.c0 AS INTEGER))))AND(CASE vt0.c0  WHEN t0.c0 THEN vt0.c0 WHEN 0.8295046901636504 THEN x'' WHEN vt0.c0 THEN vt0.c1 ELSE '' END)))AND(CAST(t0.c0 AS BLOB))))OR(vt0.c0 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT ((((t0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) IN (((vt0.c0)GLOB(t0.c0)), CASE WHEN vt0.c1 THEN t0.c0 END)) FROM t0 WHERE (PRINTF((('-798070580') ISNULL))) LIMIT -1384091603;SELECT DISTINCT TRIM(DISTINCT vt0.c0) COLLATE RTRIM FROM t0, vt0 WHERE (CAST('-515528597' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((0.21485518978717866) NOTNULL) COLLATE NOCASE FROM t0, vt0 WHERE (x'' COLLATE NOCASE); -- 1ms;
SELECT ALL (('-1026866937')||(CASE WHEN t0.c0 THEN vt0.c0 ELSE t0.c0 END)) FROM t0, vt0 LIMIT 2064801731; -- 0ms;
SELECT AVG(((((vt0.c0)AND(vt0.c1)))OR(vt0.c0))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN vt0.c0 END) NOT BETWEEN ((((vt0.c1))<=((vt0.c0)))) AND (((t0.c0)+(vt0.c1)))) FROM vt0 WHERE (CAST((('') IS TRUE) AS INTEGER));SELECT DISTINCT TOTAL(((vt0.c0) NOT NULL) COLLATE BINARY), ((((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0)))AND((((0.8626939606276584, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, t0.c0, vt0.c1)) AND ((vt0.c1, t0.c0, t0.c0))))))OR(CASE WHEN t0.c0 THEN vt0.c0 END)), ((json_array_length(vt0.c1))-(vt0.c0 COLLATE RTRIM)) FROM vt0, t0 WHERE (((((((0xffffffffd3f55f44)OR(NULL)))AND(x'')))IS NOT(CAST(0.06476774981598465 AS REAL))));SELECT ALL COUNT(((((vt0.c1)AND(vt0.c0)))OR(t0.c0))) FILTER(WHERE t0.c0) OVER (), ((vt0.c0)|(vt0.c1)), ((((vt0.c0)OR(vt0.c0))) NOT BETWEEN (CAST(vt0.c1 AS TEXT)) AND ((vt0.c1 IN ()))) FROM t0 WHERE ('f');SELECT ALL ((ABS(vt0.c0)) IS FALSE), NULL, CAST((t0.c0 IN (vt0.c1)) AS INTEGER) FROM vt0 GROUP BY (((((((((((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))OR(((((t0.c0)OR(t0.c0)))AND(t0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 ELSE 0.21353326974843723 END)))AND(((t0.c0)%(t0.c0)))))OR(((((vt0.c0)AND(vt0.c1)))AND(vt0.c1)))), '-1656517999', ((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((vt0.c1) NOTNULL)) AND (NULL)), (((t0.c0)<<(t0.c0)) IN ()), (((- (-1.8485602E7))) IS TRUE);SELECT ALL (((vt0.c0 IN ()))LIKE((vt0.c1 IN (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT RANK() OVER (), ((((vt0.c1)AND(t0.c0)))OR(vt0.c1)) COLLATE BINARY, (((t0.c0))>((vt0.c1))) COLLATE RTRIM, ((((t0.c0 IN ())))<((((vt0.c0) NOT NULL)))), vt0.c1 FROM t0 WHERE ((((((0.3995325598159415))<((0.4822593320080172)))) BETWEEN ((((0.537454397270678, NULL, NULL)) NOT BETWEEN ((NULL, 0.22239993922442347, '毜B!낰wsVny()')) AND (('', NULL, x'')))) AND (((NULL)==(0.9139982369151908)))));SELECT ALL ((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) BETWEEN (x'ae6a') AND (((((vt0.c0)AND(t0.c0)))AND(t0.c0)))), (- (LIKE(vt0.c1, vt0.c1))), AVG(CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN '-1688610692' WHEN x'' THEN vt0.c0 ELSE t0.c0 END) FROM vt0;SELECT ALL (((((t0.c0))>((vt0.c0))))&(((t0.c0)LIKE(vt0.c0)))), (((('3yZ')OR(vt0.c1)))OR(t0.c0)) COLLATE BINARY, ((vt0.c1 COLLATE RTRIM) NOTNULL) FROM vt0, t0 WHERE ((((('', x'65689e90', '955727143', '떎', NULL))==((0.2863574869609887, x'', NULL, 0.4320022631930108, '1218325887'))) IN ())); -- 0ms;
SELECT DISTINCT ((((((((SUM(t0.c0))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))))OR(json_patch(t0.c0, t0.c0))))OR(((vt0.c0) BETWEEN (vt0.c0) AND ('')))))OR(SUM(vt0.c0))) FROM vt0 WHERE ((- (((NULL) IS FALSE))));SELECT DISTINCT MIN((((vt0.c0))<((vt0.c1)))), ((((t0.c0 COLLATE BINARY)OR(CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN t0.c0 WHEN 0Xffffffffcd5f4ba8 THEN vt0.c1 END)))AND(((x'')/(vt0.c1)))), RANK() OVER ( ROWS  UNBOUNDED PRECEDING) FROM vt0, t0 WHERE (((CASE WHEN '661098265' THEN x'' WHEN '>''<). EH' THEN 0.5354779687635192 WHEN NULL THEN NULL END) BETWEEN ((('')IS(NULL))) AND (x'' COLLATE NOCASE))); -- 1ms;
SELECT ALL '0.43618783881270573' FROM t0, vt0 ORDER BY ((((NULL)<>(vt0.c0))) BETWEEN ((NOT (vt0.c0))) AND (((vt0.c0)<=(0.5630834831130362)))) ASC, t0.c0  NULLS FIRST, ((((((vt0.c1)AND('')))OR(t0.c0)))LIKE(((x'')<>(t0.c0)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0)LIKE(t0.c0)) AS BLOB), ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c0))) IS TRUE), x'' FROM t0 WHERE (((json_extract(0xffffffffe7e2255d, x'2056')) NOT NULL)) ORDER BY (NOT (((t0.c0) ISNULL))), ((('y9紐4''g4)'))>=((CAST(t0.c0 AS INTEGER))))  NULLS FIRST;SELECT ALL (-1136949376 IN ()) FROM vt0 WHERE (((((((((((NULL)AND('xMRd,wyڙ')))OR(NULL)))AND('-890277499')))AND('')))LIKE((((('-1225538575')AND('Tb')))OR(0.1996373296729238))))) ORDER BY x''  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((- (vt0.c1))) BETWEEN (((vt0.c0)<(t0.c0))) AND ((((t0.c0, vt0.c1, t0.c0))!=((vt0.c0, vt0.c1, t0.c0))))) FROM vt0, t0 WHERE (((0.9645465530898559 COLLATE NOCASE) NOT NULL)); -- 1ms;
SELECT DISTINCT (vt0.c1 IN ((~ (vt0.c0)))) FROM vt0 WHERE (((-1359899252) BETWEEN ('-586592075') AND (x'')) COLLATE BINARY) LIMIT -1624464686 OFFSET -1301930416; -- 0ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT ALL (((t0.c0 IN ())) IS FALSE) FROM vt0, t0 LIMIT 1622144804 OFFSET 2057915719; -- 0ms;
SELECT vt0.c1 FROM t0, vt0; -- 0ms;
SELECT TYPEOF(((x'a0d9d1b8') BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt0.c1)>=(vt0.c1)))GLOB(t0.c0 COLLATE NOCASE)), CASE CAST(vt0.c1 AS TEXT)  WHEN (vt0.c0 IN ()) THEN ((((((((vt0.c0)OR(0.6322388905006842)))AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)) WHEN ((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) THEN (- (t0.c0)) WHEN json_type(vt0.c1) THEN ((vt0.c0)LIKE(vt0.c1)) ELSE vt0.c1 END) OVER () FROM vt0, t0 WHERE ((('230724157') BETWEEN (0x1f98229b) AND (x'')) COLLATE BINARY);SELECT (+ (MIN(vt0.c1))), (((vt0.c0) BETWEEN (vt0.c0) AND (t0.c0)) IN ()), AVG(((((vt0.c0)OR(t0.c0)))OR(t0.c0))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (NOT ((t0.c0 IN (t0.c0)))), CAST((~ (t0.c0)) AS INTEGER) FROM vt0, t0 EXCEPT SELECT MIN((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))), (NOT (CASE t0.c0  WHEN t0.c0 THEN vt0.c0 ELSE vt0.c1 END)), x'', ((CASE WHEN vt0.c1 THEN t0.c0 END) NOT BETWEEN (CAST(vt0.c0 AS NUMERIC)) AND (COUNT(*))), ((((t0.c0) BETWEEN (t0.c0) AND (vt0.c0))) ISNULL) FROM vt0 WHERE ((((0.1552331073156753) BETWEEN ('1354405147') AND ('1308006428')) IN ()));SELECT ALL CAST(vt0.c0 COLLATE BINARY AS REAL), vt0.c0, (((t0.c0 IN (vt0.c1, vt0.c1))) BETWEEN ((t0.c0 IN (t0.c0))) AND (((t0.c0) NOTNULL))) FROM t0 WHERE ((NOT ((('') NOT NULL))));SELECT ALL ((((vt0.c1) NOT NULL)) BETWEEN (CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 END) AND ((+ (vt0.c1)))) FROM vt0;SELECT (AVG(t0.c0) IN (((((t0.c0)AND(vt0.c0)))AND(t0.c0)))) FROM t0 WHERE (((x'' IN ()) IN ('-686445285' COLLATE NOCASE)));SELECT DISTINCT (((CASE WHEN vt0.c1 THEN vt0.c1 END))<((((('┐p<')) NOT BETWEEN ((vt0.c1)) AND ((t0.c0)))))), COUNT(*), ((((vt0.c1)<=(vt0.c1))) BETWEEN (('i~G' IN (vt0.c1))) AND (LIKELY(DISTINCT vt0.c0))) FROM t0 WHERE (((x'3fa0' COLLATE BINARY)>>((('VE[M')<<(0.14318139772722793))))) ORDER BY vt0.c1  NULLS LAST, CASE WHEN ((vt0.c1)>=(t0.c0)) THEN LOWER(DISTINCT t0.c0) WHEN ((t0.c0) NOT NULL) THEN vt0.c1 COLLATE RTRIM WHEN (((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((t0.c0))) THEN (NOT (t0.c0)) WHEN ((vt0.c0)%(0.6565821844963725)) THEN ((t0.c0) NOT NULL) WHEN ((vt0.c1) NOTNULL) THEN UPPER(t0.c0) ELSE CASE vt0.c1  WHEN vt0.c0 THEN t0.c0 END END  NULLS FIRST;SELECT ALL GROUP_CONCAT(((((((((t0.c0)AND(t0.c0)))OR(vt0.c0)))AND(vt0.c0)))OR(t0.c0))), GROUP_CONCAT('-1433865133' COLLATE BINARY) FILTER(WHERE NULLIF(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), ((vt0.c1) BETWEEN (0.9005467090983234) AND (vt0.c1)))) OVER (), (NOT (((vt0.c1) IS TRUE))) FROM t0 WHERE ((((0.4526574226700333)) NOT BETWEEN ((-1894991862)) AND ((('1114168090' IN ()))))) LIMIT -1679629710;SELECT DISTINCT (((-1333745102, NULL, COUNT(*)))=((vt0.c0, ((((t0.c0)AND(t0.c0)))AND(vt0.c0)), CAST(t0.c0 AS TEXT)))) FROM t0, vt0 LIMIT -784506843 OFFSET -1779423320; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('') OVER (), ((SQLITE_COMPILEOPTION_USED(vt0.c1)) ISNULL), (((((vt0.c0, vt0.c0, t0.c0, vt0.c0, vt0.c0)) BETWEEN ((x'', t0.c0, vt0.c0, vt0.c1, x'')) AND ((vt0.c0, t0.c0, t0.c0, t0.c0, vt0.c1)))) NOT NULL) FROM t0 WHERE (((((0.5765888240771048)LIKE(x'29e0'))) BETWEEN (x'' COLLATE RTRIM) AND (((NULL)IS(x'')))));SELECT DISTINCT ((COALESCE(t0.c0, vt0.c1)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) AND ((- (vt0.c0)))) FROM vt0, t0 WHERE (((TYPEOF(DISTINCT x''))<>(-996152643 COLLATE RTRIM))) GROUP BY CASE (('508383080') BETWEEN (vt0.c1) AND (vt0.c1))  WHEN (NOT (vt0.c1)) THEN (((vt0.c0, vt0.c0, t0.c0))!=((t0.c0, vt0.c0, t0.c0))) END, (HEX(DISTINCT vt0.c1) IN (ABS(vt0.c0))), (((NOT (vt0.c0)))*(((vt0.c1) NOTNULL))); -- 0ms;
SELECT DISTINCT (((((t0.c0, t0.c0, vt0.c1))>(('1923504723', t0.c0, t0.c0)))) NOT NULL), ((((t0.c0) IS TRUE))+(UPPER(DISTINCT t0.c0))), (- (((vt0.c0)=(0.4024577992383742)))) FROM vt0 WHERE (((((((1531975901) IS TRUE))AND((('!9]wen\nn炤') NOT NULL))))AND(((('-165359660')) BETWEEN ((0.8875847775936111)) AND ((0.1184984774772393))))));SELECT DISTINCT t0.c0 FROM vt0 GROUP BY '>TLr#G2Id', TRIM((- (t0.c0))), CAST(CAST(' f' AS TEXT) AS TEXT) HAVING ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))*(t0.c0 COLLATE RTRIM));SELECT DISTINCT ((vt0.c0 COLLATE NOCASE)OR(CAST(t0.c0 AS TEXT))) FROM t0, vt0; -- 0ms;
SELECT ALL ((((vt0.c0)AND((+ (vt0.c0)))))AND(((vt0.c0) ISNULL))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) OVER ( PARTITION BY vt0.c0, (((vt0.c0)) BETWEEN ((((t0.c0)<=(t0.c0)))) AND ((CASE '-1740439483'  WHEN '-14430308' THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN t0.c0 END))) GROUPS  CURRENT ROW) FROM t0;SELECT CAST(x'04a9' COLLATE NOCASE AS BLOB) FROM vt0 WHERE ((((((NULL IN ()))AND(((((x'')AND(1523471914)))OR('I쳀v')))))AND((('\/') BETWEEN ('-1301930416') AND (x''))))); -- 0ms;
SELECT ALL (- (x'')) FROM t0 LIMIT -228442785; -- 0ms;
SELECT t0.c0, COUNT(*) OVER (), 0.12411687117693526 FROM t0 WHERE ((((((((((('-1818210632')AND(NULL)))AND((((0.06372973070849797))>=((-1644668087))))))AND('uM扶a')))OR(((NULL)-('Y4m꓇4N1S')))))AND('0.9174954040058935'))) GROUP BY x'c8ad', (((t0.c0 IN ())) IS TRUE), '1704199705' COLLATE BINARY HAVING ((vt0.c0) ISNULL);SELECT DISTINCT -1651197060 FROM vt0; -- 1ms;
SELECT vt0.c1 FROM t0;SELECT DISTINCT vt0.c1 FROM t0 WHERE (CAST(CASE WHEN '' THEN 'Tvavh料[N' ELSE x'' END AS NUMERIC));SELECT DISTINCT RANK() OVER (), vt0.c0, ((((((vt0.c0)OR(vt0.c0)))AND(NULL)))%(SUM(vt0.c0))) FROM t0, vt0 WHERE (((((((((((((x'')OR(0.08711851243599966)))OR(x'')))AND('')))AND('-1644668087')))OR((('ZO') NOTNULL))))AND(CAST('-2115525085' AS NUMERIC)))); -- 0ms;
SELECT ALL t0.c0 FROM t0 WHERE (CASE WHEN (+ ('TRUE')) THEN (((((((('1849029669')AND(0x5e29676e)))AND('g6ÃLjy4')))OR(x'')))OR(x'')) WHEN ((0.1357047122991063)IS NOT(NULL)) THEN (- ('	_uM')) WHEN ((((((((-1091567613)AND(0.8148456001678299)))OR('')))OR(NULL)))OR(0.584397332957455)) THEN SQLITE_COMPILEOPTION_GET('') ELSE (x'' IN ()) END); -- 0ms;
SELECT ALL ((vt0.c1)%((vt0.c0 IN ('Au^', vt0.c1)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((vt0.c0 COLLATE NOCASE) NOTNULL), (((((vt0.c0 IN ()))OR(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))))OR(json_array_length(t0.c0))), (((((0.6431644985695137)*(vt0.c0))))>=((CAST(vt0.c0 AS BLOB)))) FROM vt0, t0 WHERE (CAST(((x'') NOT BETWEEN ('661098265') AND (514377510)) AS TEXT)) LIMIT -1225538575;SELECT ((vt0.c1 COLLATE RTRIM)/(((t0.c0)|(vt0.c1)))), ((((vt0.c0) NOT NULL)) IS TRUE), CASE ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))  WHEN vt0.c1 THEN ((t0.c0)>=(t0.c0)) WHEN (vt0.c0 IN ()) THEN ((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)) WHEN CAST(vt0.c1 AS REAL) THEN (- (0.6040983847317888)) ELSE ((((((((((((x'')AND(vt0.c1)))OR(vt0.c1)))AND(0.9840939490700921)))AND(vt0.c1)))OR(vt0.c1)))AND(t0.c0)) END FROM vt0 WHERE (0.6721001942345689);SELECT DISTINCT GROUP_CONCAT('586612567'), (- (t0.c0)) COLLATE BINARY, 0Xfffffffff8a304c8 FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, CASE WHEN TYPEOF(DISTINCT vt0.c1) THEN ((((((((vt0.c1)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))OR(t0.c0)) ELSE AVG(vt0.c1) END, (((- (t0.c0))) BETWEEN (t0.c0 COLLATE RTRIM) AND (COUNT(0xffffffff90cae12f))) FROM vt0;SELECT t0.c0, (((vt0.c0, t0.c0, t0.c0)) BETWEEN ((vt0.c0 COLLATE BINARY, (((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt0.c1, vt0.c0, vt0.c1))), LOWER(DISTINCT x''))) AND ((((((x'')OR(vt0.c1)))OR(t0.c0)), vt0.c0 COLLATE BINARY, vt0.c0 COLLATE RTRIM))), COUNT(*) OVER () FROM t0 WHERE ('lDp9');SELECT (((((((vt0.c1))>=((t0.c0))))AND((((vt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))))OR(((((vt0.c0)AND(0.20085663664937536)))OR(vt0.c0)))) FROM vt0, t0; -- 0ms;
SELECT ALL ((COUNT(vt0.c0))<>('EFhc.X')) FROM vt0, t0; -- 0ms;
SELECT ALL (((vt0.c0)) NOT BETWEEN ((((vt0.c1)>>(t0.c0)))) AND ((((vt0.c0) NOTNULL)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((vt0.c0) NOT NULL)) BETWEEN (((vt0.c0)>>(t0.c0))) AND (((((vt0.c1)OR(t0.c0)))AND(t0.c0)))), CASE vt0.c0 COLLATE BINARY  WHEN ((((t0.c0)OR(t0.c0)))AND(vt0.c0)) THEN json_array_length(t0.c0) ELSE ((vt0.c0)AND(vt0.c1)) END) OVER (), (((t0.c0 IN ()))<=(CASE WHEN t0.c0 THEN vt0.c0 END)), RANK() OVER ( RANGE  CURRENT ROW EXCLUDE TIES) FROM t0, vt0;SELECT (((((NOT (vt0.c0)))OR((((vt0.c1))>=((t0.c0))))))AND(NULL)) FROM t0;SELECT DISTINCT NTILE(0.8038421371802288) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW) FROM t0, vt0 WHERE (((x'' COLLATE RTRIM) NOT NULL));SELECT ALL ((((t0.c0)GLOB(t0.c0))) NOT BETWEEN (((0Xffffffff95f027a8) NOT BETWEEN (vt0.c0) AND (vt0.c0))) AND (((t0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0, t0 WHERE ((CASE NULL  WHEN NULL THEN NULL ELSE x'' END IN ())); -- 0ms;
SELECT DISTINCT CAST((((vt0.c0, vt0.c0, vt0.c0)) BETWEEN ((vt0.c0, vt0.c1, t0.c0)) AND ((0.5707720523178708, vt0.c1, vt0.c0))) AS BLOB) FROM t0 WHERE (CAST(CASE '754401146'  WHEN 0.4935686522893463 THEN NULL ELSE 0.494284916473116 END AS NUMERIC));SELECT DISTINCT ((vt0.c0) ISNULL) COLLATE RTRIM FROM t0, vt0; -- 0ms;
SELECT ALL (~ (TYPEOF(t0.c0))), CAST(((vt0.c0) IS FALSE) AS NUMERIC), CASE WHEN (((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0)+(t0.c0)) ELSE ((((vt0.c0)OR(t0.c0)))OR(vt0.c1)) END FROM vt0, t0 WHERE (((((0xfffffffffa76a36e)LIKE(x''))) BETWEEN (0.1578042212211337 COLLATE RTRIM) AND (('' IN ())))); -- 0ms;
SELECT (~ (((vt0.c1) NOT BETWEEN (t0.c0) AND (vt0.c0)))) FROM vt0, t0; -- 0ms;
SELECT ALL ((vt0.c1)<=(vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL)>=(NULLIF(DISTINCT t0.c0, t0.c0))) FROM t0, vt0 WHERE ((((NOT (0Xffffffffabca7ec3)))>(CASE NULL  WHEN 0x7b8379b THEN 0.6711978537173129 WHEN 6.61098265E8 THEN 0.07849286235915875 WHEN NULL THEN 0.9819693867351418 END))); -- 0ms;
SELECT MAX('-527457843') FROM vt0; -- 0ms;
SELECT GROUP_CONCAT((((vt0.c0, vt0.c0, t0.c0))<((NULL, t0.c0, vt0.c0)))) OVER ( RANGE (((vt0.c0, NULL, vt0.c1)) NOT BETWEEN ((t0.c0 COLLATE NOCASE, ((vt0.c0) IS FALSE), ((t0.c0)OR(vt0.c1)))) AND ((CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN -2.25067603E8 WHEN '1227375890' THEN t0.c0 ELSE t0.c0 END, t0.c0, ((t0.c0)<(x''))))) PRECEDING EXCLUDE NO OTHERS) FROM t0 LIMIT -18485602;SELECT (((((((t0.c0))>=(('gT'))))OR(CASE WHEN t0.c0 THEN vt0.c0 END)))OR(t0.c0)) FROM t0;SELECT ((NULL)<>(2040744437)) COLLATE NOCASE FROM vt0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(vt0.c1) FROM t0, vt0; -- 0ms;
SELECT ALL CASE WHEN CASE WHEN vt0.c1 THEN vt0.c1 END THEN CASE t0.c0  WHEN t0.c0 THEN t0.c0 END WHEN (((vt0.c0))<((t0.c0))) THEN ((vt0.c0)AND(vt0.c1)) WHEN (- (vt0.c1)) THEN CAST(vt0.c1 AS TEXT) WHEN ']|5j' THEN 0.287759849677389 WHEN CASE WHEN vt0.c0 THEN t0.c0 END THEN vt0.c1 COLLATE RTRIM ELSE (vt0.c1 IN ()) END FROM t0, vt0; -- 0ms;
SELECT (((vt0.c1) IS FALSE) IN ()) FROM t0, vt0 ORDER BY ((('' COLLATE RTRIM))<>((ABS(vt0.c1))))  NULLS LAST, (~ (vt0.c1)) COLLATE BINARY ASC  NULLS FIRST, ((((t0.c0) ISNULL))<=(0.25203572109530925)) DESC; -- 0ms;
SELECT DISTINCT (- ('-1744081238')) COLLATE NOCASE FROM t0, vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM t0, vt0 WHERE (CAST(x'' AS NUMERIC) COLLATE RTRIM) ORDER BY UNLIKELY(CAST(x'' AS TEXT)) ASC; -- 0ms;
SELECT DISTINCT CASE vt0.c1  WHEN 0.5775554316233512 THEN COUNT(*) ELSE (vt0.c1 IN (vt0.c0)) END FROM t0, vt0 WHERE (CASE ((x'2fc4')OR(0.891635787776379))  WHEN ((0.20085663664937536)IS NOT(NULL)) THEN ((x'') NOT NULL) WHEN ((((0.7969856162734563)AND(0.928330071883297)))AND(NULL)) THEN MAX(1551111122, 0.2795518616002298) WHEN ((((0.9148073923667168)OR(NULL)))OR('1562953386')) THEN ((0.7991454539727584)=('O梖''>GKp^B')) ELSE (0.4445648086467181 IN ()) END); -- 1ms;
SELECT DISTINCT COUNT(*) FROM vt0, t0 WHERE ((LIKELIHOOD(DISTINCT '-1918845837', 0.3684520429820827) IN ())); -- 0ms;
SELECT DISTINCT (((t0.c0)) NOT BETWEEN ((COUNT(*))) AND ((CAST(vt0.c0 AS BLOB)))) FROM t0, vt0; -- 0ms;
SELECT CASE t0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE t0.c0 END COLLATE NOCASE FROM t0 WHERE (((((((x'3589'))>((x'')))))!=((CASE 'O1U璬'  WHEN -889947471 THEN 'ij1觕#w' END))));SELECT (((vt0.c1 IN ()))IS NOT(CAST(t0.c0 AS REAL))), (((t0.c0 IN (0xffffffffd89ee161, vt0.c0)))<=(vt0.c0 COLLATE BINARY)), COALESCE(x'', ((((t0.c0)OR(t0.c0)))AND(vt0.c0))) FROM vt0 WHERE (',(uR');SELECT ALL ((vt0.c1)AND(((vt0.c1)>>(t0.c0)))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0, vt0.c1, vt0.c1))>=((vt0.c1, vt0.c0, vt0.c0))) IN (((vt0.c1)*(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM t0 GROUP BY DATETIME(((x'2b0e')||(vt0.c0)), SQLITE_SOURCE_ID(), ((x'') NOT BETWEEN (t0.c0) AND (vt0.c0))), SQLITE_COMPILEOPTION_GET((t0.c0 IN (t0.c0))), ((((CASE t0.c0  WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)AND((- (t0.c0)))))AND(((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0))));SELECT CASE t0.c0  WHEN (((vt0.c1)) BETWEEN ((t0.c0)) AND ((vt0.c1))) THEN vt0.c0 COLLATE BINARY END FROM vt0, t0 WHERE ((((((- (x'')))OR(((0.9846977935772318)<('-1931246605')))))OR(HEX(NULL)))); -- 0ms;
SELECT ALL ABS(t0.c0) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT (((~ (vt0.c1))) ISNULL) FROM vt0, t0; -- 0ms;
SELECT ALL x'', (- (CASE WHEN t0.c0 THEN vt0.c0 END)), (((vt0.c0)) NOT BETWEEN ((((vt0.c0)-(t0.c0)))) AND ((((vt0.c1) BETWEEN (t0.c0) AND (vt0.c1))))) FROM vt0 LIMIT 372662609 OFFSET -440735070;SELECT DISTINCT ((((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)AND('bnzeTW(*D')))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 END)), TOTAL(CASE t0.c0  WHEN t0.c0 THEN vt0.c1 WHEN t0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE t0.c0 END) OVER (), TOTAL((~ (vt0.c1))) FROM t0 WHERE (CAST(((0.7241594783125683) ISNULL) AS TEXT));SELECT DISTINCT COALESCE(DISTINCT ((((t0.c0)AND(x'081e')))AND('0.8821770251474024')), COUNT(*)), ((((t0.c0) ISNULL))+((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c1))))), NULL FROM t0 WHERE ((((HEX(DISTINCT -9.60363259E8)))>((x'')))) GROUP BY '0.9692730770687071' HAVING ((((vt0.c0) NOTNULL))>=(((t0.c0)IS(t0.c0)))) ORDER BY ((((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0))) BETWEEN ((((vt0.c1, vt0.c0, vt0.c1))<((vt0.c0, t0.c0, vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)) DESC;SELECT DISTINCT x'' FROM t0, vt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))*(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c0)))), '0.11056387932005851', (t0.c0 IN ()) FROM vt0, t0 WHERE (CAST(((x'')/('䔒B')) AS BLOB)); -- 0ms;
SELECT DISTINCT (((t0.c0, vt0.c0, vt0.c0, t0.c0, t0.c0)) BETWEEN ((CAST(t0.c0 AS INTEGER), ((((NULL)AND(t0.c0)))AND(vt0.c1)), CAST(vt0.c0 AS REAL), (+ (vt0.c0)), ((t0.c0)>=(vt0.c0)))) AND ((vt0.c1, '-85610538', LIKELY(vt0.c1), (vt0.c1 IN (vt0.c0)), CASE t0.c0  WHEN vt0.c0 THEN t0.c0 END))) FROM vt0;SELECT ((ABS(vt0.c0)) NOT BETWEEN (CAST(vt0.c1 AS BLOB)) AND (((vt0.c1)|(NULL)))) FROM vt0, t0; -- 0ms;
SELECT t0.c0 FROM vt0, t0; -- 0ms;
SELECT ALL CAST(0.6493372597941756 AS REAL), ((LAST_INSERT_ROWID()) IS FALSE), ((((vt0.c0) NOT NULL)) NOT NULL) FROM t0, vt0; -- 1ms;
SELECT vt0.c0 FROM vt0 WHERE (((((((((((x'')OR(NULL)))OR(x'')))AND(0xbde32c7)))OR(x'2d3b'))) ISNULL)); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0 WHERE (((((((NULL) ISNULL))AND((('ef')&(x'2615')))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((((((CAST(t0.c0 AS BLOB))OR(CAST(vt0.c1 AS NUMERIC))))AND(x'')))AND(((((vt0.c0)OR(t0.c0)))AND(t0.c0)))))AND(((vt0.c0) NOTNULL))) FROM t0;SELECT ALL (((((vt0.c0, vt0.c0, vt0.c1)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c0, vt0.c0))))GLOB(((vt0.c1)/(x'f60c')))), CAST(((t0.c0)>>(vt0.c1)) AS BLOB), vt0.c1 FROM vt0 WHERE (((CASE WHEN x'c485' THEN 0.6505560234524788 END)-(CAST(NULL AS TEXT))));SELECT SUM(((vt0.c0)=(vt0.c1))) OVER () FROM t0, vt0 ORDER BY ((vt0.c0 IN ()) IN ()); -- 0ms;
SELECT DISTINCT (((vt0.c0, 0.04004421854485385, t0.c0)) NOT BETWEEN (('-1759051402', vt0.c0, vt0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))) COLLATE NOCASE FROM vt0 WHERE (((CASE NULL  WHEN '' THEN 'ch谻H*㋇' ELSE x'' END)-(NULL)));SELECT COUNT(*), ((0.9330698888388829)=(((t0.c0) BETWEEN (t0.c0) AND (vt0.c1)))), MAX(((((t0.c0)AND(t0.c0)))OR(vt0.c1))) FROM t0 WHERE (json_valid(((((((((0.8528624416783925)AND(NULL)))OR(0.4766009092018323)))AND(NULL)))OR(x'')))) LIMIT 304967525;SELECT DISTINCT CAST(((vt0.c0) IS TRUE) AS INTEGER), MIN(CASE vt0.c1  WHEN t0.c0 THEN vt0.c0 END, '625084250', CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 WHEN t0.c0 THEN t0.c0 WHEN vt0.c0 THEN vt0.c0 END, (- (vt0.c1))), (((vt0.c0)<(vt0.c1)) IN ((((0.6946498614478791, t0.c0, t0.c0)) BETWEEN ((t0.c0, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, t0.c0))))) FROM t0;SELECT DISTINCT PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT LTRIM(((vt0.c0)>>('-1889646102')), ((('1567389613', vt0.c1, vt0.c0))>((NULL, t0.c0, vt0.c0)))), ((('0.935801859279387'))==((((t0.c0)OR(vt0.c1))))), ((((((vt0.c0)AND(t0.c0)))AND(t0.c0)))AND(t0.c0)) FROM vt0, t0 WHERE (((('0.7055074978321983', 0.26982233477359674, '726248830')) NOT BETWEEN ((CAST('' AS REAL), (((((((('')OR('')))OR('')))AND(NULL)))AND(NULL)), CASE WHEN NULL THEN '骾o蘰翵g~NIz' ELSE 0X364dec51 END)) AND (((+ ('873687190')), CASE NULL  WHEN x'' THEN x'' ELSE x'' END, ((0Xffffffffac3f8378) IS FALSE))))); -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (((t0.c0)<=(t0.c0))) AND (vt0.c1)), ((((t0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))-((((vt0.c0, t0.c0, vt0.c1)) BETWEEN ((vt0.c1, t0.c0, vt0.c0)) AND ((vt0.c1, t0.c0, vt0.c1))))), ((((NULL) NOT BETWEEN (t0.c0) AND (vt0.c0))) IS FALSE) FROM vt0 WHERE (CASE ((((x'')OR('?\n')))OR('Nx'))  WHEN json_array_length(-2008847679) THEN ((434133670)-(NULL)) ELSE (0.644608406983317 IN ('833587544', x'ce22', '._%H	XB*	iQ')) END);SELECT DISTINCT (((((vt0.c0) ISNULL), ((0.11968318227006003)<(vt0.c0)), RTRIM(vt0.c1)))<>(((vt0.c0 IN (vt0.c1)), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END, vt0.c0))) FROM t0, vt0 GROUP BY ((((vt0.c1)<=(t0.c0)))GLOB(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c0)))), ABS(vt0.c1) COLLATE RTRIM, load_extension(CAST(vt0.c1 AS INTEGER), (((vt0.c1, vt0.c1, 0.6378806656615491)) NOT BETWEEN ((t0.c0, t0.c0, t0.c0)) AND ((vt0.c1, vt0.c1, t0.c0))));SELECT DISTINCT ((SQLITE_VERSION()) NOT BETWEEN (((t0.c0)*(t0.c0))) AND (MAX(t0.c0))) FROM t0, vt0 WHERE (ROUND(((((((((((((1.086087142E9)OR(NULL)))AND('-343988293')))AND(0.1920911305884766)))OR('')))AND(NULL)))AND(NULL)), NULL)); -- 0ms;
SELECT DISTINCT ((((vt0.c0)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))) IN ()) FROM vt0 WHERE (0.03429478427868149) ORDER BY (t0.c0 COLLATE RTRIM IN ()); -- 0ms;
SELECT ALL CAST(LIKELIHOOD(DISTINCT vt0.c0, 0.4678717124012406) AS TEXT) FROM vt0, t0; -- 0ms;
SELECT DISTINCT (((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)) IN ()), CAST(((((0.16135564315746498)OR(t0.c0)))OR(vt0.c1)) AS INTEGER), vt0.c0 FROM t0 WHERE (((NOT ('0.19609938297457796')) IN ((-9.68923427E8 IN (0.2970542894767637)), ((((((((x'')AND(x'bc66')))OR(NULL)))AND(NULL)))OR('1962611105')))));SELECT DISTINCT CASE WHEN ((((((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c0)) THEN (vt0.c0 IN ()) ELSE (((t0.c0, vt0.c0, vt0.c1))<((vt0.c1, vt0.c1, vt0.c1))) END FROM vt0, t0 WHERE ((+ (0.6381579308204315)) COLLATE NOCASE) GROUP BY ((x'') NOT BETWEEN (NULL) AND ((- ('')))) HAVING vt0.c1; -- 0ms;
SELECT ((CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c1 END) BETWEEN (((vt0.c1)||(vt0.c0))) AND (((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c1)))) FROM vt0, t0 WHERE (CASE (0.11962435732324195 IN ())  WHEN ((0.4097037188865522) NOTNULL) THEN ((x'9168eee3')<>(x'aa8656bb')) END); -- 0ms;
SELECT DISTINCT 'o[{WQ4oN8}' FROM t0; -- 0ms;
SELECT DISTINCT LAG(((t0.c0) NOT NULL), ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))AND('-1779423320')))OR(t0.c0))) NOT NULL), ((((t0.c0) ISNULL)) BETWEEN (CAST(t0.c0 AS BLOB)) AND (CAST(t0.c0 AS NUMERIC)))) OVER () FROM t0 GROUP BY ((NULL)|(vt0.c1)) COLLATE BINARY, ((((((((vt0.c1 COLLATE NOCASE)OR(CASE WHEN 0.9225205653316314 THEN vt0.c1 ELSE vt0.c1 END)))AND(CASE t0.c0  WHEN t0.c0 THEN vt0.c1 ELSE vt0.c1 END)))AND((vt0.c0 IN (t0.c0, vt0.c0)))))OR(((t0.c0)&(t0.c0)))), ((x'8a91b68e') NOT BETWEEN (CASE t0.c0  WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN t0.c0 THEN vt0.c0 END) AND (((((vt0.c1)AND(t0.c0)))AND(t0.c0)))) HAVING CAST(((vt0.c0) ISNULL) AS TEXT);SELECT ((((t0.c0) ISNULL))&(((vt0.c0)-(t0.c0)))) FROM t0 WHERE (((NULL)+(((('-1854438470')) BETWEEN ((0.9222799125369116)) AND ((x'bb90'))))));SELECT DISTINCT ((((vt0.c1)OR(vt0.c1)))/(((vt0.c1)=(vt0.c1)))), (((((vt0.c1, vt0.c1, vt0.c0))<>((t0.c0, vt0.c1, vt0.c1)))) BETWEEN (vt0.c1 COLLATE RTRIM) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c1 END)), TOTAL(NULL) COLLATE NOCASE FROM t0;SELECT DISTINCT (NOT (((t0.c0)/(t0.c0)))) FROM vt0, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c0 THEN vt0.c0 END)==(((vt0.c0)GLOB(t0.c0)))), CAST(CAST(vt0.c1 AS NUMERIC) AS TEXT), ((((t0.c0)OR(MIN(t0.c0))))OR(t0.c0)) FROM vt0, t0 WHERE ((~ (CAST('152579120' AS INTEGER)))); -- 0ms;
SELECT DISTINCT AVG(((NULL)<<(x''))) OVER (), (((+ (vt0.c0)))>>(CASE WHEN vt0.c1 THEN t0.c0 WHEN vt0.c1 THEN t0.c0 WHEN vt0.c0 THEN vt0.c1 END)), CASE CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE 0xffffffffa36ad266 END  WHEN UPPER(NULL) THEN ((vt0.c1)LIKE(vt0.c0)) WHEN ((t0.c0) ISNULL) THEN vt0.c0 COLLATE BINARY WHEN CAST(vt0.c1 AS TEXT) THEN ((t0.c0) NOT BETWEEN (t0.c0) AND (vt0.c0)) WHEN ((((((((vt0.c1)OR(t0.c0)))AND(vt0.c1)))OR(t0.c0)))AND(vt0.c1)) THEN vt0.c0 WHEN vt0.c1 THEN ((vt0.c1)&(t0.c0)) ELSE 'E1' END FROM vt0, t0 LIMIT 1538287091; -- 0ms;
SELECT DISTINCT TRIM(CAST(vt0.c0 AS TEXT), ((vt0.c1)IS(vt0.c0))) FROM t0;SELECT DISTINCT (((vt0.c0)) BETWEEN (((+ (0.7995937823189807)))) AND ((((vt0.c1)+(t0.c0))))) FROM vt0 WHERE (CAST(((('-1779423320', x'5b5a', '')) BETWEEN (('-1048382910', NULL, 0xffffffff8a1fbae0)) AND (('', NULL, x'adb3'))) AS BLOB));SELECT ALL (+ (((vt0.c0) BETWEEN (vt0.c1) AND (t0.c0)))), ((((t0.c0)>(vt0.c1)))>(((((((((t0.c0)OR(t0.c0)))OR(t0.c0)))OR(vt0.c0)))OR(vt0.c1)))), CASE ((vt0.c1) BETWEEN (NULL) AND (vt0.c1))  WHEN (~ ('')) THEN ((t0.c0) NOT BETWEEN (vt0.c0) AND (t0.c0)) END FROM vt0, t0; -- 1ms;
SELECT DISTINCT CASE WHEN ((vt0.c1) NOT NULL) THEN 0.6159153357857292 COLLATE NOCASE ELSE ((t0.c0)<(t0.c0)) END, vt0.c1 COLLATE BINARY, SUM(TYPEOF(vt0.c0)) FROM t0 WHERE (((NULL) ISNULL) COLLATE NOCASE COLLATE BINARY);SELECT DISTINCT vt0.c1 FROM t0;SELECT ALL t0.c0 FROM t0, vt0; -- 0ms;
SELECT ((TIME(vt0.c1, vt0.c1, vt0.c0))OR(t0.c0 COLLATE NOCASE)) FROM t0, vt0 WHERE ((((('*.') NOT BETWEEN (x'') AND (x''))) IS FALSE)); -- 0ms;
SELECT (((vt0.c1)) NOT BETWEEN ((CASE WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c1 THEN NULL WHEN '128740316' THEN t0.c0 ELSE t0.c0 END)) AND ((((vt0.c1) BETWEEN (vt0.c0) AND (t0.c0))))) FROM t0, vt0; -- 0ms;
SELECT DISTINCT ABS(t0.c0) FROM vt0, t0 WHERE ((((+ (1.3176032E8)))*(((NULL)>=('47080324'))))); -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) NOT BETWEEN (vt0.c1) AND (t0.c0)))), COUNT(*), ((vt0.c1)>>(vt0.c1)) COLLATE BINARY, ((vt0.c1)%(vt0.c1)), CASE WHEN ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (t0.c0)) WHEN CAST(t0.c0 AS REAL) THEN vt0.c0 WHEN t0.c0 COLLATE RTRIM THEN ((vt0.c1) NOT BETWEEN (vt0.c1) AND (t0.c0)) ELSE CASE WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN t0.c0 THEN vt0.c0 END END FROM t0 RIGHT OUTER JOIN vt0 ON COALESCE(((t0.c0) BETWEEN (vt0.c1) AND (vt0.c0)), (((vt0.c0))<((vt0.c0))), CASE WHEN 0.33063257073176844 THEN t0.c0 END, ((vt0.c1)AND(t0.c0))) GROUP BY ((((t0.c0 IN ())))<=((((((vt0.c1)OR(t0.c0)))AND(vt0.c0))))) HAVING ((TOTAL('c6~z')) IS TRUE); -- 1ms;
