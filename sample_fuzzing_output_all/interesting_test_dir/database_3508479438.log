-- Time: 2024/06/07 13:37:55
-- Database: database38
-- Database version: 3.40.0
-- seed value: 3508479438
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 BLOB , +c6 INT ); -- 1ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2, c3, c4, +c5 REAL ); -- 1ms;
END; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=x'', c5=x'3508'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(')y') WHERE UNLIKELY(DISTINCT ((rt0.c3) ISNULL)); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.027845189815818405); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt1', ' sz=432951792 noskipscan'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c0) VALUES ('1719880164', 1829672570); -- 0ms;
UPDATE rt0 SET c5='1719880164' WHERE ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c6))) NOT NULL); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c2='0.027845189815818405' WHERE 'zjPT5Q_wZ'; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c6, c0, c1, c2, c3) VALUES ('', NULL, NULL, x'', '1829672570', x''); -- 0ms;
PRAGMA temp.busy_timeout; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
UPDATE rt1 SET c0=NULL WHERE (((rt1.c4 IN ()))>=(NULL)); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c6) VALUES (x'dccc'); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c6) VALUES (NULL, NULL); -- 0ms;
END; -- 0ms;
UPDATE rt1 SET (c1, c2, c4)=(NULL, NULL, '-981417580'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'null', '0'); -- 0ms;
INSERT OR REPLACE INTO rt0(c4, c6, c5, c3) VALUES (0.7005741140264801, NULL, '1672644949', x''), (NULL, 'P襕', 0.31965867545558435, 'w]),(}ia'), (x'', x'5ece', '~K', 1719880164); -- 0ms;
INSERT OR ABORT INTO rt1(c2) VALUES (0.9417220780207239), (x''), (NULL); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c6, c1) VALUES (0Xffffffff8a7ae962, 0.7005741140264801, 0.31965867545558435); -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c5, c1, c3, c4, c0) VALUES (CASE ((0X4d30852e)GLOB(-292370797))  WHEN (('0.9417220780207239') BETWEEN (x'') AND ('\t룴')) THEN 0.4858532444151815 WHEN ((0.7815783920788245)>>(NULL)) THEN (NULL IN ()) WHEN CAST('1939734837' AS NUMERIC) THEN (~ (NULL)) ELSE CAST('P' AS INTEGER) END, x'dc11', '0.31965867545558435', 'p襕', NULL, -2.92370797E8); -- 0ms;
UPDATE rt0 SET c2=0.01764669154052667, c0='-333259660'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c2, c1, c4, c5, c0) VALUES ('0.7005741140264801', x'', 0.4774325357326795, '-687539952', '^y'); -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ABORT rt1 SET (c4, c1, c3)=(0x4d30852e, x'', x'df4a') WHERE (((rt1.c5)) NOT BETWEEN ((CAST(x'' AS REAL))) AND ((x''))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt1 VALUES (x'', NULL, NULL, '-875287879', x'', -981417580); -- 0ms;
REINDEX; -- 0ms;
UPDATE rt1 SET c3=x''; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt1 SET (c0)=('2063702380') WHERE (NOT ((rt1.c4 IN ()))); -- 1ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=NULL WHERE ((CASE rt1.c1  WHEN rt1.c3 THEN 0.31965867545558435 WHEN rt1.c0 THEN rt1.c3 WHEN rt1.c0 THEN 'QxAzs,' ELSE rt1.c3 END)LIKE((+ (rt1.c4)))); -- 0ms;
PRAGMA cell_size_check = true; -- 0ms;
UPDATE OR IGNORE rt0 SET (c6, c6, c3, c5, c2)=(NULL, -981417580, x'', NULL, -292370797) WHERE ((rt0.c1 COLLATE BINARY) ISNULL); -- 1ms;
PRAGMA journal_mode = TRUNCATE; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (0x6d0e967a), (x'bc08'), ('1687694692'); -- 0ms;
UPDATE OR IGNORE rt1 SET (c5)=(0.3936323229755525) WHERE rt1.c3; -- 0ms;
INSERT OR IGNORE INTO rt1(c0, c2, c4, c3, c5) VALUES ('1672644949', x'', NULL, x'', NULL); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c4) VALUES (-875287879, 0.9764130455547035, '432951792'), ('>2', -119293708, '1086173461'), ('룴P', 0.4774325357326795, x''); -- 1ms;
INSERT OR IGNORE INTO rt1(c4) VALUES (NULL), (x''), (NULL); -- 0ms;
SELECT rtreecheck('rt1'); -- 0ms;
UPDATE rt1 SET c2=' 2*\n(', c2=x'0233', c5=0.4858532444151815; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt1(c1, c4) VALUES (NULL, 0.899993243991572); -- 0ms;
PRAGMA main.wal_autocheckpoint = 5727091435663232342; -- 0ms;
UPDATE rt0 SET c2=NULL; -- 1ms;
INSERT OR IGNORE INTO rt1(c1, c0, c2, c3, c4) VALUES (0.8682900914056978, '(箢', 0.324388546836497, 0.21246589946163075, 0xffffffffd5dffe17), (x'', 0.21246589946163075, 0.3005177350609122, NULL, ' 2*\n('), ('7楘 m,)fTA', 1.82967257E9, '174479913', x'', 0.899993243991572); -- 0ms;
UPDATE rt1 SET c4='0.7815783920788245'; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c0) VALUES (x'', x''); -- 1ms;
UPDATE OR IGNORE rt1 SET (c3)=('B넕Aꅀk'); -- 0ms;
UPDATE rt0 SET c4=NULL, c3=1.295025454E9 WHERE (((NULL)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((rt0.c4))); -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO rt1(c5, c2, c3, c4) VALUES (NULL, 1797288845, 'Ug}sE*', NULL); -- 0ms;
UPDATE OR ABORT rt1 SET c1='-1971656350', c1=0xffffffffee92c693, c3=x''; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE rt0 SET c5='볽G|1-500000娩' WHERE (0x6240b917 IN ((rt0.c3 IN (rt0.c0, rt0.c4)), rt0.c6)); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c5, c0, c3, c4) VALUES ('67', 0.324388546836497, '0.9764130455547035', ((((((NULL)AND(NULL)))AND('1626213455'))) NOT NULL)); -- 0ms;
UPDATE OR IGNORE rt1 SET (c5)=(0x8558e53) WHERE (('-1407147351') NOT BETWEEN (((((((((rt1.c1)OR(rt1.c0)))AND(rt1.c2)))OR(rt1.c4)))AND(rt1.c1))) AND ((~ (x'')))); -- 1ms;
UPDATE rt1 SET c4=x''; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE TEMPORARY TABLE t0 (c0 BLOB ); -- 0ms;
REINDEX; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR REPLACE rt1 SET c3=x''; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c6, c3, c0, c2) VALUES ('\QRiJoan', 0.6149127556040943, 0.6538293784910411, NULL, '0.6149127556040943'); -- 0ms;
UPDATE OR IGNORE rt0 SET c0='1318352600'; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c3, c1, c2, c4) VALUES (NULL, 0.9764130455547035, 'q5VdOO8', x''); -- 0ms;
INSERT OR IGNORE INTO rt1(c3, c5, c0) VALUES ('-687539952', 0.20883753910393166, 0.6638743636968543), (x'', x'2916', 0.9417220780207239), ('2K7oz}V', 0.15735109342854714, ''); -- 0ms;
UPDATE OR IGNORE rt1 SET (c3)=('1797288845') WHERE 0.4774325357326795; -- 0ms;
INSERT OR ABORT INTO rt1(c5, c3) VALUES (0xffffffffd704f910, '-292370797'); -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0.7325839609052354; -- 0ms;
UPDATE OR ABORT rt1 SET (c0, c5)=(0.7679212687743195, -1120013126) WHERE ((((((((((((UNLIKELY(DISTINCT rt1.c3))OR(((rt1.c0)+(rt1.c1)))))AND('1410853394')))OR((((rt1.c5)) BETWEEN ((rt1.c1)) AND ((rt1.c0))))))OR(((rt1.c2)||(rt1.c0)))))AND(rt1.c0 COLLATE RTRIM)))AND(((rt1.c1)&(rt1.c0)))); -- 1ms;
UPDATE rt0 SET c4='-1044718931'; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(-707524802) WHERE 0.06942502611350887; -- 1ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1 WHERE CAST(' H\㫧' AS TEXT) COLLATE BINARY; -- 0ms;
PRAGMA main.stats; -- 0ms;
PRAGMA soft_heap_limit; -- 0ms;
INSERT OR ROLLBACK INTO rt1(c1, c4, c2, c5) VALUES ('-1120013126', 0.5425617984666028, x'', 0.06942502611350887); -- 0ms;
REINDEX; -- 0ms;
PRAGMA threads = 5522736729178113006; -- 0ms;
UPDATE OR IGNORE rt1 SET c3=0.3353744907401509; -- 0ms;
UPDATE OR REPLACE rt1 SET c2=1939734837, c0=NULL, c0='kCb&P' WHERE ((((rt1.c5 IN ())))!=((((rt1.c5)>=(rt1.c5))))); -- 0ms;
CREATE VIRTUAL TABLE rt2 USING rtree(c0, c1, c2, c3, c4, c5, c6); -- 0ms;
INSERT OR ROLLBACK INTO rt2(c3, c4, c0, c6) VALUES (NULL, 0.5873378004666784, 0.5632518918573944, NULL), (x'', 0.6805508798881433, 0Xffffffffbd3df4ba, '-706740713'), (1.687694692E9, '-292370797', x'', 0.3592597615498617); -- 0ms;
INSERT OR REPLACE INTO rt1(c4, c5, c0, c3, c1, c2) VALUES (x'', '191556457', NULL, '', '-1978823484', 0.5761146701997311), (NULL, '-687539952', NULL, x'', 0.48448993797844087, '0.01764669154052667'), (NULL, 0.2520993558359943, x'b97d', ')8', 0.39320896684135465, NULL); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, x'', 1.410853394E9, x'', -1.97165635E9, '!20{逖Wvn', NULL), (x'', '-1120013126', 0.0325694462514583, x'c5d2d7b0', ')8', NULL, '-977148703'), (NULL, 0.6539351760285407, '', 0.5320919811145098, NULL, 0Xffffffffff32520c, NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((rt1.c4)<=(CASE rt2.c5  WHEN rt2.c1 THEN rt1.c5 ELSE rt2.c5 END)) FROM rt1, rt2 ORDER BY ((((rt2.c3)|(rt1.c1))) ISNULL)  NULLS FIRST; -- 0ms;
SELECT DISTINCT SUM((- (rt0.c2))) FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)))OR(rt0.c4)))OR(rt0.c1)))>(CASE rt1.c2  WHEN rt1.c5 THEN rt1.c0 WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c3 END)), ((((((rt2.c5) NOT NULL))AND(((rt1.c3) IS TRUE))))AND(rt1.c4)), (((((((((rt1.c5 IN (rt1.c1)))OR(((rt2.c4)>>(rt1.c5)))))OR(highlight(rt1.c0, rt0.c1, rt2.c4, rt0.c4))))OR((('y]Dfgj')/(rt0.c1)))))AND(rt2.c0 COLLATE BINARY)) FROM rt2, rt1, rt0 WHERE (((((x'') NOTNULL))LIKE((x'' IN ())))); -- 1ms;
SELECT ALL (((MAX(rt1.c3), IFNULL(rt0.c0, '0'), (((rt1.c0)) NOT BETWEEN ((rt1.c1)) AND ((rt0.c6))), ('0.48448993797844087' IN ()), CASE WHEN rt0.c3 THEN rt2.c2 ELSE rt2.c4 END))>=((x'', CAST(0.5789333336872318 AS TEXT), ((rt0.c5)|(rt1.c5)), 432951792 COLLATE BINARY, ((rt0.c1) NOT NULL)))) FROM rt0, rt1, rt2 WHERE ((((('') NOT BETWEEN ('2063702380') AND (NULL))) NOT NULL)); -- 0ms;
SELECT ALL (CASE rt1.c4  WHEN rt1.c1 THEN x'' END IN ((~ (rt1.c5)))) FROM rt2 WHERE ((((('7%' COLLATE NOCASE)OR(CASE WHEN x'' THEN NULL WHEN 0.12890081305764567 THEN 1829672570 WHEN 0.9464574581200516 THEN 0xffffffffff32520c END)))OR(((((x'8499')OR('')))AND('361380583')))));SELECT DISTINCT ((((rt0.c4)) NOT BETWEEN ((rt1.c1)) AND ((rt2.c2))) IN (((((rt0.c2)AND(rt0.c0)))OR('1430519821')), ((rt2.c5)LIKE(rt1.c3)))) FROM rt1 WHERE ((((((((('-977148703')AND(x'')))OR(NULL)))AND(CASE NULL  WHEN NULL THEN 1.82967257E9 WHEN 0Xffffffffd6f276f1 THEN 1430519821 WHEN NULL THEN '7i' ELSE NULL END)))OR((((x'cbac'))=(('5 ')))))) LIMIT 1554533385;SELECT DISTINCT COUNT(CAST(rt1.c2 AS REAL)), (((((rt1.c3)<(rt1.c1))))>(((~ (rt1.c0))))), rt2.c3 FROM rt2, rt0 WHERE (x'');SELECT DISTINCT CAST((((rt1.c3))>=((rt2.c0))) AS NUMERIC) FROM rt0, rt2 WHERE (((CASE ''  WHEN '-1480517070' THEN x'' WHEN '>2' THEN NULL WHEN 0.932476516771467 THEN x'' ELSE x'' END) NOT NULL)) ORDER BY (rt2.c6 IN ()), ((rt0.c5)|(((rt2.c1) IS TRUE)));SELECT MIN(HEX(DISTINCT rt1.c2)), CAST(COUNT('zjPT5Q_wZ') AS BLOB), rt1.c1 COLLATE NOCASE FROM rt2, rt0, rt1 WHERE (NULL); -- 0ms;
SELECT ALL ((CASE rt1.c2  WHEN rt2.c0 THEN rt2.c6 END) NOT BETWEEN (x'') AND (((rt0.c5) BETWEEN (rt1.c4) AND (rt2.c4)))), NTILE(((((rt1.c1))<((rt1.c1))) IN ((((rt1.c2))==((rt1.c3)))))) OVER (), rt1.c0 FROM rt1 ORDER BY json_object(((((rt0.c5)AND(rt0.c5)))AND(rt1.c1)), HEX(DISTINCT rt2.c2), ((rt2.c1) NOT BETWEEN (rt1.c5) AND (rt0.c1)), (((0.01764669154052667, rt2.c5, rt2.c4))<>((rt0.c5, rt0.c1, rt1.c0)))) ASC, ((rt0.c1) IS FALSE) DESC  NULLS FIRST, CAST(ABS(DISTINCT rt1.c4) AS INTEGER) DESC  NULLS LAST;SELECT (((rt0.c3))>((CASE rt0.c6  WHEN rt0.c0 THEN rt1.c3 END))), CAST(rt2.c5 AS BLOB), (rt2.c4 COLLATE BINARY IN ((NOT (rt1.c1)))), ((((((((((rt0.c2)!=(rt1.c0)))OR(CASE rt0.c4  WHEN rt0.c3 THEN rt2.c5 WHEN rt0.c6 THEN rt1.c5 WHEN rt0.c0 THEN rt2.c6 END)))AND(((rt0.c2)<=(rt0.c3)))))OR(((rt1.c5)GLOB(rt0.c1)))))OR(rt2.c4)), (AVG(rt2.c5) IN ()) FROM rt2 LIMIT -2129780974;SELECT ALL (((CASE rt0.c6  WHEN rt1.c3 THEN rt0.c4 WHEN rt1.c3 THEN rt2.c4 WHEN rt2.c4 THEN rt2.c1 ELSE NULL END))>=((rt0.c6))) FROM rt2 WHERE (CASE WHEN (0.23023972146770688 IN ('1041536428')) THEN (((('191556457')AND(x'')))AND('')) END) LIMIT 1447984034;SELECT ALL ((((rt1.c0) NOT NULL))<>(((((rt1.c5)AND(rt2.c5)))AND(rt0.c5)))), ((CASE rt1.c5  WHEN rt2.c2 THEN rt1.c4 ELSE rt1.c1 END) BETWEEN (((((rt1.c3)OR(rt0.c3)))AND(rt0.c4))) AND (rt0.c3)), LAG(((((rt2.c1)AND(rt2.c5)))AND('129964489')) COLLATE NOCASE COLLATE RTRIM, NULL COLLATE NOCASE, ((rt0.c4)AND(((((rt0.c4)OR(rt0.c5)))AND(rt2.c0))))) OVER () FROM rt0, rt2 WHERE (TYPEOF((- (NULL))));SELECT ((((rt2.c1) NOT BETWEEN (rt0.c6) AND (rt1.c4)))IS(((rt2.c6)<<(rt2.c6)))) FROM rt1, rt0 WHERE (((((1947449603)&(-687539952)))AND((((((((('<v')OR(NULL)))OR('')))AND(NULL)))OR(0.556243399643115)))));SELECT ALL (GROUP_CONCAT(rt0.c1) IN (json_remove(rt0.c3, rt2.c1))) FROM rt1, rt2 WHERE ((((NULL IN ()))IS NOT(x'b67a')));SELECT DISTINCT ((((0.18534639652799478)LIKE(rt1.c4))) BETWEEN (rt0.c0) AND (((rt1.c3)<(rt2.c3)))) FROM rt1, rt0, rt2 WHERE (CAST(((x'') NOT BETWEEN ('') AND (x'')) AS REAL)); -- 0ms;
SELECT ALL CASE ((rt0.c5)IS NOT(rt1.c0))  WHEN '0.4774325357326795' THEN ((rt1.c4)%(rt0.c2)) WHEN rt2.c0 COLLATE NOCASE THEN (rt2.c4 IN (rt1.c5)) WHEN rt2.c5 THEN ((rt2.c6)AND(rt2.c0)) END, LTRIM(rt0.c6, ((rt2.c5) IS FALSE)), (((((((((((rt1.c0)AND(rt1.c5)))AND(rt2.c4)))AND(rt0.c5)))OR(rt1.c0)), ((rt0.c6) NOT BETWEEN ('-1584241741') AND (rt0.c6)), ((rt1.c5)%(rt2.c1))))>(((rt2.c1 IN (0.9797791984629856)), rt0.c4, (((rt1.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt2.c6)))))), rt1.c3, LIKELY(DISTINCT rt0.c2) FROM rt1 WHERE (CAST(CAST(0.5320919811145098 AS NUMERIC) AS INTEGER));SELECT ALL COUNT(*) OVER () FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT ((((rt2.c0) NOT BETWEEN (rt1.c1) AND (rt2.c0)))&(((rt0.c5)<<(rt2.c5)))), ((((((rt0.c4) BETWEEN ('B5c') AND (rt2.c5)))OR(((rt1.c3)-(rt2.c3)))))OR(rt0.c5)), (rt0.c5 IN ()) COLLATE BINARY FROM rt1, rt0 WHERE (((NULL) IS TRUE)) GROUP BY ((x'') IS FALSE), (((((((((((((~ (rt0.c2)))AND(LIKELY(rt2.c3))))AND(CAST(x'' AS REAL))))OR(((((rt0.c1)OR(rt1.c5)))OR(rt2.c3)))))OR(((rt2.c4) IS TRUE))))AND(0.2547720113456077)))AND((+ (rt0.c5)))), json_array_length(CAST(rt0.c1 AS BLOB), 'eS');SELECT ALL ((SQLITE_VERSION())LIKE((((rt2.c6))>=((0Xffffffffe1720d2e))))) FROM rt1, rt2; -- 0ms;
SELECT DISTINCT ((CASE rt1.c1  WHEN rt1.c5 THEN rt1.c4 WHEN rt2.c0 THEN rt1.c0 WHEN rt1.c5 THEN rt0.c2 END)+((rt0.c3 IN (x'', rt0.c0)))), 'B2', (- (CASE rt1.c2  WHEN rt2.c1 THEN rt1.c2 END)) FROM rt1, rt0, rt2 GROUP BY ((rt2.c5)OR((rt2.c0 IN ()))), ((((rt1.c3) IS TRUE))<<(rt1.c3 COLLATE NOCASE)), CASE WHEN rt0.c1 THEN 0xffffffffc89cbaa5 ELSE rt0.c0 END COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ((COUNT(rt1.c5)) BETWEEN (((NULL) BETWEEN (rt2.c3) AND (''))) AND (((rt2.c1) NOT BETWEEN (rt0.c6) AND (rt1.c2)))) FROM rt2, rt1;SELECT CAST(0.899993243991572 AS BLOB) COLLATE BINARY, NULL, COUNT(*) FROM rt2 WHERE ((((NULL)) BETWEEN ((CASE WHEN '{YE%YXZ?d' THEN 0.24697844529983126 END)) AND (('-353021104')))); -- 0ms;
SELECT ALL AVG(CASE WHEN rt1.c2 THEN rt0.c1 ELSE rt1.c4 END), SUM(UPPER(rt0.c4)), (NOT (rt0.c1)) COLLATE RTRIM FROM rt0, rt1; -- 0ms;
SELECT CASE WHEN (rt0.c1 IN (NULL)) THEN (((rt2.c0, x'', NULL)) BETWEEN ((rt1.c2, rt2.c0, 0Xffffffffba3f94f4)) AND ((rt0.c2, rt2.c3, rt1.c0))) ELSE (((rt0.c0))=((rt0.c3))) END FROM rt2, rt0;SELECT DISTINCT CAST(rt0.c4 COLLATE RTRIM AS NUMERIC) FROM rt0, rt1, rt2; -- 0ms;
SELECT ALL GROUP_CONCAT(UNICODE(rt0.c6)) FROM rt0, rt1 NOT INDEXED; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c5 THEN rt1.c2 WHEN rt1.c1 THEN rt2.c2 WHEN rt2.c2 THEN rt1.c4 ELSE rt0.c3 END)>('')), ((rt0.c5)-(rt1.c0)) COLLATE BINARY, CAST(CAST(rt0.c4 AS INTEGER) AS REAL), ((((rt1.c4) BETWEEN (rt2.c2) AND (rt1.c3)))<=(MAX(rt0.c3))), CAST(rt0.c1 COLLATE RTRIM AS NUMERIC) FROM rt1, rt2, rt0 WHERE (((((((NULL)>=(1748246465)))OR(0.2848371987383794)))OR(CASE WHEN NULL THEN NULL END))) GROUP BY TYPEOF(DISTINCT ((rt0.c2)<<(rt0.c1))) HAVING HEX(NULL) LIMIT -366891584 OFFSET 1403215051; -- 0ms;
SELECT CAST(rt1.c2 COLLATE NOCASE AS REAL) FROM rt1; -- 0ms;
SELECT DISTINCT ((((rt1.c1)OR(((((rt0.c2)OR(rt1.c0)))OR(rt2.c5)))))AND(GROUP_CONCAT(rt1.c0))) FROM rt2, rt1, rt0 WHERE ((((1.648408855E9 IN ('')))||(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((- (rt1.c0))) NOT BETWEEN (((0.3682269687892752) ISNULL)) AND ((((NULL))=((rt1.c2))))) FROM rt1, rt2, rt0; -- 0ms;
SELECT ((((rt2.c3)+(rt0.c5)))>(((rt0.c5) NOTNULL))) FROM rt0 WHERE ((((0x739e0135 IN ())) BETWEEN ((x'6a5e' IN ())) AND (((0.23023972146770688)<<(x'')))));SELECT ((rt2.c6 COLLATE BINARY) BETWEEN (((rt2.c4) BETWEEN (rt0.c4) AND (rt1.c1))) AND ((~ (rt2.c1)))) FROM rt1, rt0;SELECT 0.8021597640974778 FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT CAST(((rt0.c3)>>('~*')) AS INTEGER) FROM rt0 WHERE ((((load_extension(0Xffffffffa3c98a54)))<((1.447984034E9))));SELECT ALL (((~ (rt2.c2)))<=(((((((((rt1.c0)AND(rt0.c4)))AND(rt0.c4)))OR(rt2.c1)))OR(rt0.c1)))) FROM rt0, rt2, rt1 WHERE (TRIM((((NULL)) NOT BETWEEN ((x'c49f')) AND ((x''))), ('102206435' IN ()))); -- 0ms;
SELECT TRIM(DISTINCT ((((rt1.c1)OR('')))OR(rt2.c3)), ((rt2.c6) BETWEEN ('w\R[FJ&T?') AND (rt0.c1))) FROM rt1, rt2, rt0; -- 0ms;
SELECT ((((rt2.c6) ISNULL)) NOT NULL), ABS(DISTINCT ((rt1.c5)&(rt0.c6))), LEAD(COALESCE(((((rt2.c0)AND(rt2.c0)))OR(rt2.c1)), (0X6b6ef285 IN (rt2.c1, rt2.c2))), (+ ((NOT (rt2.c0)))), rt2.c3 COLLATE BINARY) OVER () FROM rt2 GROUP BY ((rt2.c1)OR(NULL)), x'', CAST(((((rt0.c5)OR(rt2.c3)))AND(rt1.c1)) AS REAL) HAVING rt1.c0 LIMIT -2071453002;SELECT TRIM(rt0.c5 COLLATE NOCASE) FROM rt2, rt1;SELECT DISTINCT (- (CASE WHEN rt2.c3 THEN rt1.c4 END)) FROM rt1 WHERE (((((((((((x'')AND(0.5973337242381864)))AND(x'')))AND(0.700440909334893)))AND(1.82967257E9)))>>(((('1231633644', '229197332', '-1044718931', 'HR', '-1206768318'))<(('1648408855', '-1551130304', x'', -119293708, x''))))));SELECT ALL CASE x''  WHEN IFNULL(DISTINCT rt0.c2, rt1.c1) THEN rt2.c4 WHEN CAST(rt2.c1 AS INTEGER) THEN CASE rt0.c4  WHEN '0.5320919811145098' THEN rt1.c2 END WHEN rt1.c4 COLLATE BINARY THEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c6))) ELSE x'16fe' END FROM rt2 NOT INDEXED, rt1 WHERE (((((((-1400829059)IS NOT(0.20771515741399282)))AND(x'')))AND(x'')));SELECT ((json_insert(rt2.c0, rt2.c3, rt2.c2)) NOTNULL) FROM rt1, rt2 WHERE (((((NULL)>>(0X55de3b32)))<((NULL IN ())))) EXCEPT SELECT ALL ((((((((((rt1.c3) BETWEEN (rt1.c3) AND (rt0.c2)))OR(CAST(x'' AS NUMERIC))))OR(HEX(rt0.c6))))AND(((rt2.c0) NOTNULL))))OR(rt1.c1 COLLATE BINARY)) FROM rt2, rt1, rt0 WHERE (((CAST('1430519821' AS TEXT)) BETWEEN ((('139824723')!=(0.262149636490435))) AND (HEX('837482987')))) GROUP BY CAST((((rt2.c0, rt2.c1, rt1.c5))>((rt2.c6, rt2.c0, rt2.c5))) AS BLOB) HAVING (((rt2.c3, rt1.c2, rt0.c1)) NOT BETWEEN ((COUNT(*), ((rt2.c6)+(rt1.c4)), (- ('191556457')))) AND ((rt0.c4 COLLATE NOCASE, (NOT (rt0.c0)), ((rt1.c0)&(rt1.c2))))); -- 0ms;
SELECT (~ ((~ (rt2.c5)))), ((MIN(rt2.c3, rt1.c3))>((((rt0.c4))>((rt0.c1))))), ((+ (rt1.c4)) IN ()), ((SUM(rt2.c3)) BETWEEN (rt2.c6) AND (RTRIM(rt0.c0))), ((((rt1.c5)OR(rt2.c3)))OR(((rt1.c3)*(rt2.c3)))) FROM rt2;SELECT ALL (((rt0.c6 IN ()))/(((rt2.c6) IS TRUE))) FROM rt1, rt2, rt0; -- 0ms;
SELECT ALL 1406523560, json_patch(((((rt2.c1)OR(rt2.c0)))AND(rt1.c5)), ((rt0.c5)>>(0.523089270255388))), ((((rt1.c5)/(rt2.c1)))<=(((rt1.c0)!=(rt0.c3)))) FROM rt2, rt1, rt0 WHERE (CAST((+ (-2068314784)) AS BLOB)) ORDER BY x''; -- 1ms;
SELECT DISTINCT CAST(json_array_length(rt1.c4, rt2.c0) AS REAL) FROM rt0 INNER JOIN rt1 ON ((x'') IS TRUE) WHERE (((((((NULL)OR(NULL)))AND(610683341))) NOT BETWEEN (('-2008327783' IN ())) AND ('0w''' COLLATE RTRIM))) LIMIT -251698082;SELECT DISTINCT (((0x3b9b0350)) BETWEEN ((((rt0.c1) NOT BETWEEN (rt1.c2) AND (rt1.c0)))) AND ((((rt0.c3)||(rt1.c1))))), GROUP_CONCAT((- (rt2.c6))) OVER (), (+ ((- (rt1.c1)))) FROM rt0;SELECT DISTINCT (((rt0.c6 IN (rt0.c3, rt2.c0))) NOT BETWEEN (IFNULL(DISTINCT rt0.c2, rt0.c6)) AND (rt2.c1)) FROM rt0, rt1, rt2 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN ((((x'')) NOT BETWEEN ((0x70c314ac)) AND ((NULL)))) AND (((((NULL)AND('VQ\nI')))AND(''))))); -- 0ms;
SELECT DISTINCT ((((rt1.c4) IS TRUE)) NOT NULL), GROUP_CONCAT(CAST(rt0.c4 AS NUMERIC)) OVER (), CUME_DIST() OVER ( ROWS (((rt0.c6 IN (rt0.c3))) NOT NULL) PRECEDING EXCLUDE GROUP) FROM rt2, rt0, rt1 LIMIT -1468601771; -- 0ms;
SELECT ALL rt0.c1 FROM rt2, rt0 WHERE ((((((NULL IN ()))OR(((-925344118)OR(NULL)))))OR(((((0.5861678623383997)OR('')))OR('D'))))); -- 0ms;
SELECT DISTINCT COUNT(*), AVG(((rt2.c1) ISNULL)) COLLATE BINARY, rt0.c1, NULLIF(1939734837, (rt0.c1 IN ())), CAST(rt1.c4 AS BLOB) COLLATE RTRIM, (((rt0.c4, rt0.c6, rt1.c4)) BETWEEN ((((rt2.c3) NOTNULL), LIKELY(DISTINCT rt2.c6), '-333259660')) AND ((((rt0.c0) IS TRUE), ((rt2.c2)==(rt0.c3)), CASE rt2.c3  WHEN rt0.c1 THEN rt0.c6 ELSE rt1.c2 END))), NTH_VALUE(CAST(LOWER(rt1.c2) AS BLOB), (- ((((rt0.c5))>=((0.6149127556040943)))))) OVER ( ORDER BY ((rt0.c0) BETWEEN (rt1.c4) AND (rt1.c5)) COLLATE RTRIM ASC  NULLS LAST) FROM rt1, rt0, rt2 WHERE (((LIKELIHOOD(DISTINCT NULL, 0.5113572942716437))>>(0.4679571220786446)));SELECT (('')%(((rt2.c2)<(rt1.c1)))) FROM rt1;SELECT DISTINCT ((rt2.c0)GLOB((- (rt1.c5)))) FROM rt1 WHERE (((UNLIKELY(0Xffffffffb83dd6a9))|(((NULL) ISNULL)))) LIMIT 205545304;SELECT DISTINCT (~ (AVG(''))), LEAD(((rt0.c2) NOT BETWEEN ((rt1.c4 IN ())) AND (x'1254')), (((((((rt0.c2)AND(rt0.c4)))AND(rt1.c4))))<>(((- (rt0.c5))))), CAST(CAST(rt1.c2 AS INTEGER) AS REAL)) OVER ( ORDER BY ((((((((((rt2.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt1.c5)))AND(rt1.c2))) NOT BETWEEN (NULLIF(rt2.c3, rt1.c4)) AND ((((rt1.c4, rt0.c5, 0.431205045951366, rt2.c5, rt0.c3)) BETWEEN ((rt0.c5, rt1.c5, x'', rt1.c5, rt0.c4)) AND ((rt2.c4, rt2.c3, rt1.c2, rt0.c1, rt2.c3))))), ((CAST(rt1.c3 AS INTEGER))<((NOT ('jytU'))))  NULLS LAST, ((((((((rt0.c2)OR(rt2.c4)))OR(rt2.c3)))OR(CASE WHEN rt1.c3 THEN rt0.c6 WHEN rt2.c5 THEN rt2.c5 WHEN rt2.c3 THEN NULL ELSE rt1.c0 END)))OR(x'4d84'))), ((SUM(rt2.c6))OR((((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))))) FROM rt0, rt1;SELECT DISTINCT ((((rt1.c3) NOT NULL))||(((rt1.c2) NOT BETWEEN (rt1.c0) AND (rt1.c5)))) FROM rt1, rt0 WHERE ((((((x'', NULL, ' H\㫧'))!=(('1440627506', 0.090564570587091, '(箢'))))>=(CAST(0.7880219544461298 AS INTEGER)))) GROUP BY CAST(x'' AS REAL) HAVING '-1551130304'; -- 1ms;
SELECT TOTAL(((((((((0.3642873165707692)AND(rt1.c1)))OR(rt0.c1)))OR(rt0.c5)))OR(rt2.c0))) OVER (), rt1.c2, CASE rt0.c5 COLLATE BINARY  WHEN ((rt2.c2) BETWEEN (rt2.c3) AND (rt1.c2)) THEN TRIM(rt0.c3) ELSE ((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END FROM rt1, rt0;SELECT DISTINCT ((0.4774325357326795) NOT BETWEEN ((((rt2.c0, rt2.c0, rt1.c4)) NOT BETWEEN ((rt2.c1, rt0.c6, rt2.c0)) AND ((rt0.c1, rt2.c3, rt1.c2)))) AND (rt2.c5)), CASE WHEN json_extract(rt1.c4, 0X6240b917) THEN (NOT (rt0.c2)) WHEN ((((rt2.c1)OR(rt1.c3)))AND(rt0.c3)) THEN (rt1.c5 IN ()) WHEN 0.5761146701997311 THEN (((rt0.c0, x'a54f', rt1.c4)) BETWEEN ((rt1.c3, rt0.c2, rt2.c5)) AND ((0.30926103656907855, rt1.c3, rt1.c3))) END, (((rt1.c0 IN (rt1.c5)))|(rt0.c4)), TOTAL((((rt1.c5))<>((rt0.c1)))), COUNT(CAST(rt2.c0 AS INTEGER)) FROM rt2;SELECT DISTINCT ((((rt0.c2) BETWEEN (rt1.c0) AND ('1233042319'))) NOT BETWEEN (2.06370238E9) AND (CASE WHEN rt0.c6 THEN x'' ELSE rt2.c2 END)) FROM rt2 WHERE (((0.26663851179211984 COLLATE RTRIM)=(((NULL) BETWEEN ('0.5861678623383997') AND (x'')))));SELECT DISTINCT rt2.c3, json_object(CAST(rt0.c4 AS NUMERIC), (- (rt1.c4))), ((((rt2.c0) ISNULL)) NOTNULL) FROM rt2 WHERE (CASE (~ ('432951792'))  WHEN load_extension('hN()YUc', 0.01975969980928205) THEN (((('')AND(x'')))AND(x'f21a')) END);SELECT DISTINCT ((((NULL) NOT BETWEEN (rt0.c3) AND (rt1.c5))) IS FALSE) FROM rt2 WHERE (CASE (NULL IN ('', 0.727662483869915))  WHEN '9&~)d]' COLLATE BINARY THEN (('') NOT NULL) WHEN CAST('-1083721158' AS INTEGER) THEN (((-497970828)) NOT BETWEEN ((x'')) AND ((-9.29252699E8))) WHEN (((('-390228348')AND(x'')))OR(-1.206768318E9)) THEN CASE WHEN '-251698082' THEN x'' ELSE 1057749492 END WHEN 0.6313788419340794 THEN CASE WHEN '-' THEN 'b/oW' WHEN NULL THEN NULL WHEN 0.4063840506292117 THEN -366891584 END WHEN ((NULL) NOTNULL) THEN (- (0.08199546031392169)) END);SELECT DISTINCT NULL FROM rt2, rt1 WHERE ((((-1.551130304E9)) NOT BETWEEN (((((0.305638324854685)) BETWEEN (('')) AND ((837482987))))) AND ((((((0.6951961110992539)OR(0Xfffffffffc4e4030)))OR('{YE%YXZ?d')))))) ORDER BY ((rt2.c3) BETWEEN (CASE WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c1 END) AND ((((rt2.c6)) BETWEEN ((rt1.c1)) AND ((rt2.c6))))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c6, SUM(rt1.c1), CAST(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))AND(rt1.c1)))AND(rt0.c4)) AS INTEGER) FROM rt2 CROSS JOIN rt0 ON (((((rt0.c2))<=((x'567f'))))!=((rt1.c0 IN ()))) INNER JOIN rt1 ON (((rt2.c4)) NOT BETWEEN (((rt0.c6 IN ()))) AND (((rt1.c2 IN ())))); -- 0ms;
SELECT ALL rt1.c1, (((rt2.c5 IN (rt2.c6, rt0.c2))) NOT BETWEEN (CAST('-1196535856' AS INTEGER)) AND (((((rt1.c0)AND(0.3682269687892752)))AND(rt1.c4)))), ((((CAST(rt0.c5 AS INTEGER))AND(rt2.c5 COLLATE BINARY)))OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt2, rt0, rt1 WHERE (CASE ((((((((']S︗')AND(NULL)))OR('2014012940')))AND(-1678751179)))OR(102206435))  WHEN (((('QU50h}M')OR(x'')))OR(1.7976931348623157E308)) THEN ('-1097886266' IN ()) WHEN ((NULL) NOTNULL) THEN json_valid('-291442190') WHEN TYPEOF(DISTINCT 'HR') THEN ((((493646214)OR(x'64c8')))AND(0X60ee0c4f)) END); -- 0ms;
SELECT DISTINCT (((((rt2.c2, rt0.c4, rt0.c1)) BETWEEN ((rt0.c2, rt1.c5, rt1.c4)) AND ((rt1.c2, rt1.c0, rt2.c2)))) BETWEEN (NULL) AND (CAST(rt0.c6 AS TEXT))) FROM rt2 INNER JOIN rt0 ON rt0.c3 WHERE (((('Bo'))<((0.3510401631617045))) COLLATE BINARY);SELECT DISTINCT GROUP_CONCAT(((rt2.c0) ISNULL)) FROM rt0, rt2, rt1; -- 0ms;
SELECT ALL ((((((rt2.c3) NOT BETWEEN (rt0.c5) AND (rt2.c0)))OR((rt0.c2 IN ()))))AND(CASE WHEN rt2.c1 THEN rt0.c0 ELSE rt0.c5 END)) FROM rt0, rt1, rt2 WHERE (CAST(CAST(NULL AS NUMERIC) AS INTEGER)); -- 0ms;
SELECT (rt2.c3 IN ()) COLLATE NOCASE, CAST(((0.5861678623383997) ISNULL) AS INTEGER), (((((rt2.c3))<>((rt0.c3)))) NOT BETWEEN (CASE rt2.c2  WHEN rt0.c5 THEN rt1.c2 END) AND (((((rt2.c3)OR(rt0.c1)))AND(rt1.c1)))) FROM rt0, rt1, rt2; -- 0ms;
SELECT ALL ((('B넕Aꅀk')) BETWEEN ((((rt2.c6) BETWEEN ('-2068314784') AND (-286183890)))) AND (((+ (rt1.c1))))), ((('1672644949')<<(rt1.c4)) IN (COUNT(rt2.c0), ((rt1.c1) IS TRUE))), ((((rt2.c3) NOT BETWEEN (rt0.c3) AND (rt1.c2)))>((rt2.c1 IN (rt1.c5)))), COUNT(((rt0.c2) IS TRUE)), ((((rt1.c2) NOT BETWEEN (rt2.c0) AND (0.7533673542103501))) BETWEEN (CASE rt1.c5  WHEN rt2.c1 THEN 1672644949 END) AND (TOTAL(rt1.c1))) FROM rt2 WHERE ((((~ (NULL)))>>(CAST(NULL AS REAL))));SELECT (((+ (rt0.c6))) BETWEEN (((((((((rt0.c4)OR(rt0.c4)))OR(rt2.c0)))OR(rt1.c2)))AND(rt2.c2))) AND (((x'')AND(rt0.c1)))), (rt0.c0 COLLATE BINARY IN ()), rt2.c1 FROM rt2, rt1, rt0 WHERE ((((('610683341') BETWEEN (0.3353744907401509) AND ('-1670609907')))||(''))); -- 0ms;
SELECT DISTINCT (((((rt1.c0) IS FALSE)))>((rt2.c5))) FROM rt1 WHERE ((((x'', '339703367', -1033614535)) NOT BETWEEN ((((NULL)||('546985872')), CASE WHEN x'' THEN '' WHEN NULL THEN '0.3353744907401509' WHEN 0.8537151836866762 THEN NULL END, x'3310')) AND ((((NULL)LIKE('648347310')), (+ (x'')), ((('-1373042955', NULL, 0Xffffffffeaf55350)) NOT BETWEEN ((0.8520109010106476, '', x'')) AND ((NULL, 0.4713111943159931, '-1033614535')))))));SELECT DISTINCT TYPEOF((((rt0.c6))>=((rt0.c3)))) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((x'')=('(	M6F\r-*'))) OVER () FROM rt2, rt0 WHERE ((((((((((((((((0.6083323580432667))<((0.37509877324971475))))AND(((x'0580')OR(NULL)))))OR(CAST(x'' AS REAL))))OR(((('273713868')) NOT BETWEEN ((x'1f00')) AND ((0.02730822268910882))))))OR(('134308104' IN (0.39382529823777856, '')))))OR(((x'')GLOB(0xffffffff8fc4bcfd)))))OR(((-1.400829059E9)<<(NULL))))); -- 0ms;
SELECT DISTINCT (~ (((rt1.c4)||(rt0.c1)))) FROM rt1, rt2 WHERE (((((((NULL) BETWEEN (x'') AND (0.7925227174353796)))OR((NOT ('2145739173')))))AND(((('i'))!=((x''))))));SELECT DISTINCT CASE ((rt0.c3)AND(rt1.c1))  WHEN (~ (rt0.c4)) THEN 0Xffffffffbd3a6998 ELSE CASE WHEN rt2.c1 THEN rt1.c0 WHEN rt2.c0 THEN rt0.c4 WHEN x'b1ac' THEN rt1.c0 END END FROM rt1 WHERE (CAST((0.5105875170010721 IN ()) AS NUMERIC));SELECT DISTINCT rt0.c0, ((((0.26354991826355)OR(CASE WHEN rt2.c5 THEN rt2.c6 ELSE rt0.c1 END)))AND(CAST(rt0.c6 AS BLOB))), COUNT(0.9288662089659908) OVER () FROM rt0, rt2, rt1 WHERE (((x'') NOT BETWEEN (0Xffffffff9b462822) AND (NULL)) COLLATE RTRIM); -- 0ms;
SELECT ALL AVG(((rt0.c4)+(rt2.c6))), NULLIF((rt0.c1 IN (rt2.c5, rt1.c2)), (((rt2.c0)) NOT BETWEEN ((rt1.c5)) AND ((rt1.c3)))), AVG(CASE WHEN rt2.c0 THEN rt1.c0 WHEN rt2.c3 THEN rt2.c4 WHEN rt2.c2 THEN rt1.c2 ELSE rt1.c1 END) OVER () FROM rt1, rt2, rt0; -- 1ms;
SELECT DISTINCT (+ (LIKELY(rt0.c1))), CAST(0x37acbe73 AS REAL), rt0.c4 FROM rt2 WHERE ((((((((((((((('h5nE%3UeL')|('B]Jg')))OR((- (-1644659652)))))AND(CASE WHEN -1.196535856E9 THEN 0.7982230392484858 ELSE '0.2547720113456077' END)))OR(((x'')IS(0.8237993116997079)))))AND(CASE '1936063761'  WHEN 0x4ad56958 THEN 'b3LnV' ELSE x'' END)))AND((('hz''SCV~S_')GLOB('-K')))))AND(CASE WHEN 0.24697844529983126 THEN x'' END)));SELECT DISTINCT json_array_length(rt1.c5, rt0.c3) COLLATE RTRIM FROM rt0, rt2;SELECT (((((rt0.c3, rt2.c4, rt2.c5)) NOT BETWEEN ((rt2.c1, rt2.c3, rt2.c2)) AND (('<X', rt2.c4, rt0.c0))))GLOB(GROUP_CONCAT(rt0.c0))), rt1.c2, rt0.c6 FROM rt0 WHERE (CAST(CASE NULL  WHEN -2.008327783E9 THEN 0x415240ed END AS TEXT));SELECT DISTINCT ((((rt1.c5 COLLATE BINARY)AND(((rt2.c0) BETWEEN (rt1.c4) AND (rt0.c2)))))AND(rt1.c3)), CASE CAST(rt2.c2 AS REAL)  WHEN rt0.c2 THEN ((rt2.c5)>(rt0.c2)) END, (+ ((rt1.c4 IN ()))) FROM rt2, rt1 LIMIT -125894554;SELECT PERCENT_RANK() OVER ( PARTITION BY (((rt1.c0, rt1.c4, rt0.c6))>((rt2.c6, rt0.c0, rt2.c0))) COLLATE NOCASE, ((rt1.c4) IS FALSE) COLLATE BINARY) FROM rt2, rt1, rt0; -- 0ms;
SELECT ALL AVG(CASE rt0.c0  WHEN rt2.c5 THEN rt2.c2 END) OVER () FROM rt2 WHERE (((('1233042319')IS NOT('-39645689')) IN ()));SELECT DISTINCT MIN((NOT (rt0.c1))), PERCENT_RANK() OVER (), rt0.c3, (((((rt0.c5))=((rt0.c4))))<(((((((((((((((((rt1.c2)OR(0xffffffffc4c3abf9)))OR(rt2.c3)))OR(rt2.c6)))OR(rt2.c3)))OR(rt1.c1)))OR(rt1.c5)))AND(rt2.c1)))OR(rt2.c5)))), (((rt1.c0, rt0.c2, rt2.c1)) BETWEEN ((rt2.c1 COLLATE NOCASE, (- (NULL)), rt2.c0 COLLATE BINARY)) AND ((CASE WHEN rt0.c3 THEN rt2.c6 END, (rt1.c0 IN (rt1.c5)), CASE WHEN rt0.c1 THEN rt1.c2 ELSE rt1.c5 END))) FROM rt1;SELECT DISTINCT ((CAST(rt1.c2 AS BLOB))<=((((rt0.c1))>=((rt1.c4))))) FROM rt2, rt1;SELECT COUNT(*) FROM rt1 LIMIT 1895269039; -- 0ms;
SELECT ALL ((((((((((rt2.c5) IS TRUE))AND(x'b22b')))AND(COALESCE(DISTINCT rt0.c5, rt1.c5))))AND(((rt2.c2)>(rt2.c4)))))OR(rt2.c3)) FROM rt2, rt1;SELECT ALL -13479412, ((((rt0.c1 IN ())))==((x''))), (((rt2.c1, rt2.c4, rt2.c3)) BETWEEN ((rt1.c0, (- (rt2.c4)), CASE rt0.c4  WHEN rt2.c3 THEN 0.08247585174562799 WHEN rt2.c3 THEN rt0.c5 WHEN rt0.c2 THEN rt1.c2 END)) AND ((rt0.c4 COLLATE RTRIM, ((rt1.c3)&(rt1.c2)), ((rt0.c3)>(rt2.c2))))) FROM rt0, rt2 WHERE (CASE ((NULL)LIKE(x''))  WHEN CASE 'vd'  WHEN NULL THEN 'B5c' WHEN NULL THEN x'' WHEN 0.8773814383248139 THEN NULL ELSE -13479412 END THEN CAST(x'c0eb6f62' AS INTEGER) WHEN ('TH' IN ('1041536428')) THEN (((0.9860791390925047, '174479913', x''))<((x'', '', NULL))) WHEN ((1.719880164E9)|(NULL)) THEN COALESCE(DISTINCT NULL, '-488200679') ELSE ROUND(0Xffffffffeef12e2e, x'7db2') END) GROUP BY ((((((rt1.c3)OR(rt1.c4)))OR(rt1.c0)))>=((x'3388' IN ()))) HAVING (('-1442220038') NOT NULL);SELECT DISTINCT (((((rt0.c3))==((rt2.c6))))<(((rt0.c5) ISNULL))) FROM rt0 WHERE (((GLOB(NULL, '1406523560'))>>(((x'') NOTNULL))));SELECT ALL ((CAST(NULL AS INTEGER))<>(((rt1.c1) IS FALSE))) FROM rt2 WHERE ((((((('')OR('-707252332')))OR(NULL))) BETWEEN (((NULL)GLOB(x''))) AND (((((((((x'')AND(-1.978823484E9)))OR(x'')))OR(1635848327)))OR(x''))))) GROUP BY CASE WHEN ((((rt2.c2)AND(rt2.c4)))AND(rt0.c4)) THEN ((rt1.c0) IS TRUE) END, rt1.c5, rt0.c1;SELECT ALL rt1.c0 COLLATE NOCASE COLLATE BINARY COLLATE RTRIM FROM rt2 WHERE (CAST(CAST('' AS NUMERIC) AS BLOB));SELECT DISTINCT AVG(HEX(rt2.c6)), ((((((rt0.c3))>=((rt2.c0)))))>=(((((rt1.c1))>((rt1.c3)))))), ((CAST(rt0.c6 AS TEXT)) BETWEEN (((rt1.c2) NOT BETWEEN (rt0.c0) AND (x''))) AND ((((rt1.c0)) BETWEEN ((rt1.c4)) AND ((rt2.c3))))) FROM rt2, rt0 RIGHT OUTER JOIN rt1 ON ((((rt0.c6)<>(rt2.c5)))>>((- (rt0.c5)))); -- 0ms;
SELECT ALL (- (((rt1.c2) ISNULL))) FROM rt1 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((((rt0.c3 IN ())))=((-1500706241))), rt2.c5, CAST(rt2.c2 AS REAL) COLLATE NOCASE FROM rt1, rt0, rt2 LIMIT 1295025454 OFFSET -1978823484; -- 0ms;
SELECT DISTINCT rt2.c3, ((rt2.c1 COLLATE RTRIM)IS(((rt1.c0) IS FALSE))), ((NULL) NOT BETWEEN (CAST(rt2.c0 AS NUMERIC)) AND (CAST(rt2.c2 AS REAL))) FROM rt2, rt1 WHERE ('0.431205045951366'); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER (), 0.8486173658384838 COLLATE BINARY, (NOT ((- (rt2.c1)))) FROM rt1, rt2, rt0 WHERE (((((NULL)||(0.2860865403443089)))LIKE((- (NULL))))); -- 0ms;
SELECT DISTINCT SUM(rt2.c4), ((rt1.c2 COLLATE BINARY) BETWEEN (rt1.c5) AND ((~ (rt2.c5)))), '1295025454', CAST(CASE rt0.c0  WHEN rt2.c6 THEN rt2.c6 END AS REAL), rt0.c0 FROM rt0 NATURAL JOIN rt1 LIMIT -591560700 OFFSET -1061639969;SELECT DISTINCT (rt1.c1 IN ()) FROM rt2; -- 0ms;
SELECT ALL AVG((+ (rt1.c1)) COLLATE NOCASE) OVER () FROM rt2, rt1 WHERE (((x'074e') NOT BETWEEN (x'') AND (NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL CASE WHEN CASE WHEN rt1.c1 THEN rt1.c0 WHEN rt1.c2 THEN rt2.c0 WHEN rt2.c3 THEN rt2.c1 ELSE NULL END THEN CASE rt2.c5  WHEN rt2.c1 THEN rt2.c6 WHEN rt0.c0 THEN rt2.c6 WHEN 0xffffffffe35bbba6 THEN rt2.c0 END END FROM rt1 WHERE (CASE ('1687694692' IN ())  WHEN (NOT ('-740952956')) THEN ((((1440627506)OR(-1.740919292E9)))AND(NULL)) ELSE ((NULL) IS TRUE) END) LIMIT 191374419 OFFSET -1393602503;SELECT DISTINCT '-1206768318' FROM rt1, rt2; -- 0ms;
SELECT DISTINCT NULL FROM rt1, rt0; -- 0ms;
SELECT DISTINCT (~ (((((rt0.c0)OR(rt0.c3)))AND(rt0.c1)))) FROM rt1 GROUP BY CAST(((((rt0.c4)OR(rt2.c6)))OR(rt0.c4)) AS INTEGER), ((rt0.c6)IS(x'')), (((((rt0.c2)OR(NULL)))OR(rt0.c5)) IN ()) ORDER BY (((((((rt1.c5)) BETWEEN (('187147800')) AND ((rt0.c2))))AND(((rt1.c2)/(rt1.c5)))))OR(((rt2.c5)IS(rt0.c6))))  NULLS LAST, ((((x'')OR(NULL COLLATE RTRIM)))OR((((rt0.c5, rt2.c4, x'41734ffa'))>=((rt2.c4, rt1.c0, rt0.c5)))));SELECT DISTINCT rt2.c6 COLLATE BINARY COLLATE BINARY COLLATE NOCASE FROM rt1 GROUP BY ((((rt0.c4)IS NOT(rt1.c2))) BETWEEN ((((rt1.c2, rt1.c5, rt0.c4)) BETWEEN ((rt1.c1, rt2.c0, rt1.c3)) AND ((rt2.c5, x'', rt1.c2)))) AND (((((((((rt0.c1)AND('-747438313')))OR(rt2.c1)))OR(rt2.c3)))OR(rt0.c4)))), (((rt0.c3 COLLATE RTRIM, (rt2.c1 IN ()), rt2.c1))==(((rt2.c1 IN (rt2.c4)), rt2.c4, CAST(rt2.c4 AS BLOB)))), CASE WHEN ((rt2.c0) NOT BETWEEN (rt0.c4) AND (rt0.c1)) THEN '-272799844' END, (('0.431205045951366')OR(rt0.c6 COLLATE RTRIM)), ((((((rt0.c0)OR(rt1.c1)))AND(rt2.c5)))<(rt1.c2 COLLATE BINARY)) HAVING rtreenode(GROUP_CONCAT(rt0.c1), rt0.c2);SELECT (((rt0.c6) NOT NULL) IN ()), ((CASE rt0.c1  WHEN NULL THEN rt1.c4 ELSE rt2.c5 END)AND((((rt2.c3, rt1.c3, rt1.c4)) NOT BETWEEN ((rt1.c0, rt2.c3, 0.348824622688491)) AND ((rt2.c5, rt0.c0, rt2.c0))))), x'' FROM rt0, rt1;SELECT DISTINCT (rt1.c2 COLLATE BINARY IN (rt2.c5)) FROM rt0, rt1 WHERE ((+ ((NULL IN (NULL, '1440627506')))));SELECT MAX((rt2.c5 IN (rt0.c4))), rt1.c1, CHANGES() FROM rt0 WHERE ((~ (CASE WHEN '1687694692' THEN 'z>' WHEN NULL THEN x'' WHEN x'2d14' THEN '205545304' ELSE '1447984034' END)));SELECT DISTINCT (CAST(rt0.c1 AS BLOB) IN ()) FROM rt0, rt1 LIMIT 181103605; -- 0ms;
SELECT LAST_VALUE((CASE WHEN rt0.c5 THEN rt0.c0 WHEN '0.6313788419340794' THEN x'' WHEN rt2.c6 THEN rt2.c2 END IN (((((rt0.c6)OR(rt0.c6)))AND(rt0.c1)), CAST(rt2.c4 AS NUMERIC)))) OVER () FROM rt0, rt2 WHERE (((CASE 2.145739173E9  WHEN '2020610112' THEN x'' ELSE NULL END)%((~ (0.5144265859888347))))) LIMIT -1335554532; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c3 IN (rt1.c3)) COLLATE RTRIM) FROM rt1, rt0; -- 0ms;
SELECT ALL (((rt2.c0)*(rt2.c1)) IN (x'')) FROM rt0 WHERE ((((((((((((0.5545905138060315))<((NULL))))AND(((0X6549078f)&(0.4838217184887078)))))OR(((NULL) IS TRUE))))OR(CAST('0.5861678623383997' AS BLOB))))OR(((x'0826') NOT BETWEEN (x'') AND ('C摞y')))));SELECT DISTINCT json_array('-1719246232', 0.912129857253118 COLLATE NOCASE) FROM rt0, rt2 NOT INDEXED, rt1 WHERE ((('7i' COLLATE BINARY)LIKE(((NULL) BETWEEN ('1086173461') AND ('5'))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0, rt1 WHERE (CAST((((('\r5')AND('si')))OR(0.9889351769372816)) AS TEXT)); -- 1ms;
SELECT DISTINCT ((((rt1.c1)<(rt0.c5))) BETWEEN ((+ (rt0.c1))) AND ((((rt2.c6))=((rt1.c5))))), (((rt2.c4))=((-9223372036854775808 COLLATE BINARY))), ((((rt0.c2)<=(rt0.c3))) NOT BETWEEN (((((((((rt0.c2)AND(rt1.c2)))AND(NULL)))AND(rt0.c5)))OR(rt1.c2))) AND (CAST(rt1.c2 AS TEXT))) FROM rt2 WHERE (CASE (+ ('-977148703'))  WHEN x'3904' THEN CAST(NULL AS INTEGER) WHEN ((x'3180') NOTNULL) THEN ((NULL) NOT BETWEEN (x'') AND (0Xffffffffb1b3d8e9)) WHEN (NULL IN ()) THEN (('-933644813')<('h_')) WHEN (('ҍH')+('9223372036854775807')) THEN ((0.8846291320958056) ISNULL) WHEN (((0X5b5ea027))<=(('-1882931971'))) THEN (0.8081525219195442 IN ()) ELSE ((299987150)&(NULL)) END);SELECT (NOT (rt0.c3)), GROUP_CONCAT(((((((((((((rt0.c4)OR(rt0.c6)))AND(rt2.c4)))OR(rt2.c3)))AND(rt0.c2)))AND(NULL)))AND(rt0.c4)) COLLATE RTRIM) FILTER(WHERE '-1923875554' COLLATE NOCASE) OVER ( ORDER BY ''  NULLS FIRST), (((x'e186')|(rt2.c2)) IN ()), rt1.c4, (((- (rt1.c2)))>=((rt2.c5 IN (rt0.c3)))) FROM rt0, rt2;SELECT DISTINCT LAG((((((0.7746190999496005, rt1.c4, rt0.c4, rt1.c5, rt0.c2))!=((rt1.c5, rt0.c6, rt0.c4, rt1.c1, rt2.c4)))) NOT BETWEEN (CASE WHEN rt2.c5 THEN rt0.c1 WHEN rt2.c0 THEN rt1.c4 WHEN rt2.c0 THEN rt0.c6 END) AND (((rt2.c5) NOT BETWEEN (rt0.c0) AND (rt2.c6)))), (rt2.c3 COLLATE NOCASE IN ()), (CASE 2145739173  WHEN NULL THEN rt0.c4 ELSE rt0.c3 END IN (CAST(rt0.c4 AS NUMERIC)))) OVER ( GROUPS BETWEEN ((((rt0.c1) BETWEEN (rt2.c5) AND (NULL)))%(rt2.c3 COLLATE RTRIM)) PRECEDING AND (((- (x'')))%('0.7679212687743195')) PRECEDING EXCLUDE NO OTHERS), CASE WHEN ((rt1.c1)IS(rt1.c2)) THEN rt2.c6 COLLATE BINARY WHEN ((rt1.c4) BETWEEN (rt2.c0) AND (rt0.c5)) THEN (- (rt0.c4)) WHEN 0.7595398266209585 THEN CAST(rt1.c4 AS INTEGER) ELSE CAST(rt0.c6 AS REAL) END, (((CAST(rt1.c3 AS NUMERIC), ((((((((NULL)AND(rt1.c2)))OR(rt2.c6)))AND(rt2.c5)))AND(rt2.c5)), (((rt2.c4, rt2.c1, rt2.c1))=((rt2.c1, rt2.c4, rt0.c1)))))<=((rt2.c5, rt2.c2 COLLATE RTRIM, ((rt0.c3)>>(rt0.c5))))) FROM rt0, rt1, rt2 WHERE (CAST(x'' COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT (1939734837 IN ()) COLLATE RTRIM FROM rt2, rt0, rt1 WHERE ((-1.17023822E9 COLLATE BINARY IN (CAST(NULL AS REAL), NULL))) ORDER BY x'ae5c'  NULLS LAST, ((CASE rt2.c1  WHEN rt0.c1 THEN rt2.c5 WHEN rt2.c2 THEN rt1.c5 WHEN rt1.c4 THEN rt2.c4 END)>>(((rt1.c3)|(rt1.c3)))) DESC  NULLS FIRST; -- 0ms;
SELECT (((((((((NOT (rt2.c6)))AND((rt2.c1 IN (rt1.c4)))))AND(('-0.0' IN (rt2.c1)))))AND(((((rt0.c2)AND(rt1.c5)))AND(rt0.c0)))))AND(MIN(rt2.c5))) FROM rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT ((rt1.c1 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt2.c0)))) AND (GROUP_CONCAT(rt2.c4))) FROM rt2;SELECT DISTINCT UNLIKELY(rt0.c2) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt2.c4)<(rt0.c2))  WHEN ((rt1.c3)+(rt2.c0)) THEN (rt0.c1 IN (rt0.c3, rt1.c4)) WHEN ((rt1.c2)||(rt2.c0)) THEN ((rt0.c5)AND(rt2.c0)) WHEN x'' THEN rt1.c4 COLLATE BINARY END, (- ((rt1.c1 IN ()))), UPPER(DISTINCT (((rt0.c6)) BETWEEN ((rt2.c0)) AND ((rt1.c2)))) FROM rt0, rt1 WHERE ('EG%|');SELECT ALL (((rt2.c6 IN ())) BETWEEN (((rt2.c1) IS TRUE)) AND ((((rt2.c4, rt0.c0, rt1.c5))<=((rt2.c3, rt1.c0, 0.17795183875969556))))) FROM rt2;SELECT DISTINCT ((((0.3353744907401509)AND(rt0.c0)))OR((((rt2.c6, rt0.c1, rt0.c3))<=((rt0.c4, rt0.c3, rt2.c5))))), (+ (NULLIF(rt2.c3, rt0.c0))), (((((rt0.c5, rt0.c1, rt1.c0)) BETWEEN ((rt0.c4, rt0.c0, rt2.c6)) AND ((rt2.c0, rt0.c3, rt1.c5)))) BETWEEN (x'380d') AND (((rt0.c3) NOT NULL))) FROM rt1, rt2;SELECT DISTINCT CASE WHEN CASE WHEN -92686797 THEN rt2.c4 ELSE rt0.c5 END THEN ((rt2.c3) NOT BETWEEN (NULL) AND (rt0.c5)) END FROM rt0, rt2 WHERE (0.18532264879349636); -- 0ms;
SELECT ALL rt0.c3 FROM rt1, rt2, rt0 WHERE ((((x'')AND(x'a72d')) IN ())); -- 1ms;
SELECT ALL GROUP_CONCAT(CASE WHEN rt1.c2 THEN rt2.c2 ELSE rt1.c0 END COLLATE RTRIM) FILTER(WHERE (((((((((rt1.c0 IN ()))OR(((rt0.c0)AND(rt1.c0)))))AND(((rt1.c2)!=(0.6168815548428471)))))OR(((rt0.c0)!=(rt1.c5)))))OR((+ (x'110b'))))) OVER (), ((CASE WHEN rt1.c4 THEN rt0.c0 ELSE rt2.c0 END) BETWEEN ((((rt2.c4)) BETWEEN ((rt1.c2)) AND ((rt2.c4)))) AND (((rt2.c3)IS(rt0.c1)))), (+ ((- (rt1.c5)))) FROM rt0 LIMIT -1971656350 OFFSET 134308104;SELECT DISTINCT rt2.c3 FROM rt0 WHERE (CAST(x'cef9' AS BLOB));SELECT DISTINCT FIRST_VALUE(CAST(((rt0.c6)*(rt2.c6)) AS NUMERIC)) OVER (), GROUP_CONCAT((rt0.c2 IN ())) OVER (), CAST(COUNT(*) AS TEXT) FROM rt0, rt2, rt1 LIMIT 361380583 OFFSET -879316156; -- 0ms;
SELECT DISTINCT rt2.c1, COUNT(*) OVER ( ORDER BY (+ ('-291442190')) DESC  NULLS LAST), rt0.c3 FROM rt0, rt1;SELECT DISTINCT ((0Xffffffffa19263b3)==(CASE 'c}VwRy^'  WHEN rt0.c1 THEN '-1044718931' WHEN rt1.c0 THEN rt1.c5 WHEN rt0.c1 THEN rt0.c3 WHEN -2.129780974E9 THEN rt2.c2 WHEN rt0.c1 THEN rt0.c1 END)) FROM rt2, rt0;SELECT ALL x'b365', '', (((+ (rt0.c3))) NOTNULL) FROM rt0 NOT INDEXED, rt2 GROUP BY (((rt1.c0)) BETWEEN ((((rt2.c0) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) AND ((rt0.c4 COLLATE RTRIM)));SELECT DISTINCT COUNT((rt1.c1 IN ())) FROM rt1; -- 0ms;
SELECT ALL json_insert(((((((((rt2.c0)AND(x'')))OR(rt1.c3)))OR(rt0.c3)))OR(rt2.c2)), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c6)), (rt0.c0 IN ())) FROM rt1, rt0 WHERE ((((('-')>>(0.5748907074607825))) NOT NULL));SELECT (((rt0.c3 IN (rt1.c1, rt2.c5)))AND(GLOB(rt2.c5, rt2.c3))) FROM rt0, rt1 WHERE (TRIM(DISTINCT (('0.0')*(x''))));SELECT NULL, ((rt1.c0)IS(rt1.c3 COLLATE RTRIM)), ((((((rt1.c1) NOT BETWEEN (x'0ee5') AND (rt2.c1)))OR(((((NULL)AND(rt2.c6)))OR(rt0.c5)))))OR(((((rt2.c0)OR(rt2.c0)))AND(rt1.c2)))), (((((NULL IN ()))OR(rt0.c4 COLLATE RTRIM)))AND(rt0.c5)), ((((TOTAL(rt0.c4))OR(((rt2.c5)==(rt1.c4)))))AND(NULL)) FROM rt2, rt1, rt0 WHERE ((CAST(x'' AS REAL) IN (((0x44797a25)GLOB(0.21518511752507408)), (((((((('-1517139335')OR(x'6684')))OR(x'47e3')))AND(-251287461)))OR(NULL))))) ORDER BY NULL LIMIT -1259184479; -- 0ms;
SELECT ALL 0Xffffffffc582cb58, ((((((x'')OR(rt2.c6)))AND(rt2.c6))) BETWEEN ((rt0.c4 IN (NULL))) AND (TOTAL(rt0.c2))), (((rt2.c2)) NOT BETWEEN ((((rt2.c6)OR(rt2.c6)))) AND (((((rt1.c2, rt1.c0, rt0.c3)) NOT BETWEEN ((rt0.c6, rt2.c5, rt0.c1)) AND ((rt1.c4, rt2.c5, rt1.c5)))))) FROM rt1, rt2 WHERE ((+ (((0.7697382188708378)+('0.727662483869915')))));SELECT DISTINCT rt1.c2 FROM rt0 GROUP BY rt2.c3 HAVING '' ORDER BY (((+ (rt1.c1))) NOT BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((((((rt2.c0)AND(rt1.c1)))AND(rt2.c3)))OR(rt2.c3)))OR(rt0.c2))))  NULLS FIRST, (~ (((rt2.c3)*(rt0.c4))))  NULLS LAST;SELECT CASE WHEN ((rt1.c5) NOT NULL) THEN ((((rt0.c0)AND(rt1.c3)))OR(rt0.c1)) WHEN ((rt0.c1) BETWEEN (rt2.c1) AND (rt0.c6)) THEN rt2.c1 COLLATE RTRIM WHEN (((rt2.c5)) BETWEEN ((rt1.c3)) AND ((rt0.c4))) THEN 0xffffffffbe8f95c6 END, LIKELIHOOD(CASE rt2.c0  WHEN rt2.c5 THEN rt1.c2 WHEN rt2.c5 THEN rt0.c3 WHEN rt2.c2 THEN rt1.c2 END, 0.25044550862936654), HEX(((((((((rt0.c5)OR(rt2.c1)))OR(rt1.c4)))OR(rt0.c4)))OR(rt2.c5))) FROM rt2 WHERE (((CASE -1.17023822E9  WHEN NULL THEN '607110110' WHEN '1829977919' THEN NULL WHEN '0.4679571220786446' THEN NULL ELSE 0.8061987543425646 END)IS(NULL COLLATE RTRIM)));SELECT (((rt2.c0 IN ()))%(x'6c4b')) FROM rt1, rt0; -- 1ms;
SELECT DISTINCT (rt2.c6 IN (((rt0.c6)IS(rt1.c0)))), (((rt0.c5)<(-9.77148703E8)) IN ()), ((((((((((rt0.c1)AND(rt2.c6)))OR(rt1.c5)))AND(NULL)))AND(rt1.c4)))||(SQLITE_SOURCE_ID())) FROM rt0, rt2 WHERE (CAST((+ (x'')) AS BLOB));SELECT DISTINCT 0.23236419650068163, ((((rt1.c1 COLLATE RTRIM)OR((NOT ('TH')))))OR(((rt1.c5) IS TRUE))), CAST(CAST(rt2.c4 AS TEXT) AS NUMERIC) FROM rt2, rt1 GROUP BY ((rt0.c4 COLLATE RTRIM)|(rt2.c6 COLLATE BINARY));SELECT DISTINCT CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER), ((rt0.c0 COLLATE NOCASE) ISNULL), ((rt1.c2 COLLATE RTRIM) IS TRUE) FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt2.c3 AS REAL))<(((((rt2.c0)OR(rt2.c2)))AND(rt1.c4)))) FROM rt2 WHERE (((((0x7649b463) NOT BETWEEN ('-1831831215') AND (x''))) NOT NULL));SELECT ALL ((GROUP_CONCAT(rt0.c4)) NOT BETWEEN (((rt2.c3)||(rt0.c4))) AND ((~ (rt2.c3)))), rt2.c6, LAG(x'', ((((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c2)))*(((x'6c32')IS(x'520e')))), ((rt0.c0 COLLATE BINARY) BETWEEN ((- (rt0.c1))) AND (((((rt0.c4)OR(rt0.c1)))OR('\n玍'))))) OVER () FROM rt0 WHERE ((((('')&(x'15048318'))) IS FALSE));SELECT ALL (((((rt2.c6) NOT BETWEEN (rt0.c4) AND (rt1.c3))))=((rt0.c0 COLLATE NOCASE))), COUNT((((rt2.c1, rt1.c4, rt0.c1))>(('(箢', rt0.c2, rt0.c4)))) OVER (), GROUP_CONCAT(((rt1.c3) BETWEEN (rt2.c3) AND (rt0.c4))) OVER () FROM rt2, rt1 WHERE (x'');SELECT DISTINCT -1.407147351E9 FROM rt1, rt2 LIMIT 1938766851 OFFSET 674285924; -- 0ms;
SELECT ALL SUM(CAST(rt2.c5 AS BLOB)) FROM rt2, rt0; -- 0ms;
SELECT ALL ((CASE WHEN rt1.c0 THEN rt1.c2 END)IS NOT((rt2.c4 IN ()))), ((rt0.c4)||((+ (rt2.c4)))), ((-1)>=(((rt2.c6) ISNULL))) FROM rt1, rt2, rt0; -- 0ms;
SELECT CASE ((rt0.c4) ISNULL)  WHEN ((((((((rt0.c3)OR(rt2.c1)))AND(rt2.c3)))OR(rt0.c2)))OR(rt1.c5)) THEN (+ (rt1.c4)) WHEN ((((rt2.c6)AND(rt0.c3)))AND(x'ba1f')) THEN ((((rt0.c5)OR(rt2.c6)))OR(rt2.c0)) WHEN x'' THEN CASE WHEN rt2.c1 THEN rt2.c0 ELSE rt1.c1 END ELSE ((rt2.c3) BETWEEN (rt1.c5) AND (rt0.c6)) END FROM rt1, rt0, rt2 WHERE (LIKELY(810466466 COLLATE BINARY)) GROUP BY INSTR(LENGTH(0xffffffff81aa67cc), (rt0.c0 IN ())); -- 0ms;
SELECT DISTINCT ((((rt2.c1)AND((((rt2.c5)) NOT BETWEEN ((rt1.c4)) AND ((rt2.c2))))))AND(((rt1.c4)LIKE(rt0.c1)))), ((CAST(rt0.c6 AS INTEGER)) IS FALSE), (((- (rt2.c2))) NOT BETWEEN (((rt0.c1) IS FALSE)) AND (((rt0.c3)<(rt1.c3)))) FROM rt0;SELECT DISTINCT (((((rt2.c2))<>((rt2.c4))))*(((((rt1.c0)AND(rt0.c6)))AND(rt2.c1)))), ((rt2.c6 COLLATE NOCASE) BETWEEN (((x'') NOT NULL)) AND (CAST(rt0.c5 AS TEXT))), CASE WHEN rt1.c0 THEN ((rt1.c4) IS FALSE) WHEN rt2.c1 COLLATE RTRIM THEN (((rt2.c1, rt2.c0, rt2.c2))<((rt2.c2, rt0.c0, rt1.c5))) WHEN (+ (rt2.c4)) THEN ((rt1.c3) NOT NULL) ELSE ((rt2.c0) IS FALSE) END FROM rt1, rt0;SELECT (NOT ((('191556457')<=(rt2.c4)))) FROM rt1;SELECT ((x'') NOTNULL) FROM rt0; -- 0ms;
SELECT ALL ((rt1.c3)+(((rt1.c2) NOT BETWEEN ('?h5%IT%J{') AND (rt0.c6)))) FROM rt0, rt1; -- 0ms;
SELECT DISTINCT (+ (((rt1.c2)OR(rt2.c6)))) FROM rt2, rt0 WHERE (((((NULL) IS FALSE))|(((('-981417580', x'', 0x43840293, x'', -1.882931971E9)) NOT BETWEEN ((x'', '뮏T', '0.0', NULL, -688752911)) AND (('fhTh| avR', NULL, '', NULL, 0.8630533941484131)))))) ORDER BY (+ ((- (rt2.c6))))  NULLS LAST, CAST(rt2.c2 AS TEXT) COLLATE RTRIM ASC  NULLS FIRST, (+ ((((rt0.c6, rt1.c5, rt0.c3))!=((rt1.c1, rt0.c3, 'M]S*⊶Mp'))))) ASC;SELECT DISTINCT ((((((rt2.c0)OR(rt1.c3)))AND(rt2.c1)))+(rt0.c5)), CAST((((rt0.c0))!=((rt2.c4))) AS REAL), MAX(rt1.c5 COLLATE NOCASE COLLATE RTRIM) FROM rt2;SELECT DISTINCT ((((MIN(rt1.c0))AND(((((rt0.c0)AND(rt0.c4)))AND(0.1948577148193883)))))OR(CASE rt0.c5  WHEN rt1.c1 THEN rt0.c4 WHEN rt0.c1 THEN rt2.c6 WHEN rt0.c1 THEN rt2.c4 ELSE rt0.c6 END)) FROM rt2, rt0, rt1; -- 0ms;
SELECT ALL (((rt0.c5 IN (rt0.c6)))/(rt2.c5)) FROM rt0 WHERE ((NULL COLLATE BINARY IN ()));SELECT DISTINCT ((rt2.c4) NOT BETWEEN (rt2.c2) AND (((rt2.c0) NOT BETWEEN (rt1.c0) AND (rt2.c2)))) FROM rt1, rt2, rt0; -- 0ms;
SELECT CAST(rt1.c0 AS REAL) COLLATE NOCASE COLLATE BINARY FROM rt0, rt2;SELECT ((x'')!=(((NULL)<=(rt2.c0)))) FROM rt0, rt2; -- 0ms;
SELECT DISTINCT (+ (rt0.c1)) FROM rt2, rt1;SELECT ((((((rt1.c4)||(rt2.c3)))AND(CAST(rt2.c2 AS NUMERIC))))AND(GROUP_CONCAT(rt1.c2))) FROM rt2, rt1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (~ (CASE rt0.c3  WHEN rt0.c2 THEN rt2.c1 WHEN rt0.c2 THEN rt1.c0 WHEN rt2.c3 THEN '-1120013126' ELSE rt2.c4 END)), (NOT (rt2.c5)) COLLATE BINARY, rt0.c2, ((((rt2.c4)GLOB(rt1.c1)))IS NOT((~ (rt0.c4)))), (((rt2.c4)) BETWEEN ((CASE WHEN rt0.c0 THEN rt2.c3 ELSE rt2.c3 END)) AND (((rt1.c3 IN ())))) FROM rt2;SELECT DISTINCT '205545304' FROM rt1, rt0 WHERE (((((NOT (NULL))))<((CASE WHEN x'' THEN 0.4484207713033337 END)))) LIMIT 339703367; -- 0ms;
SELECT ((rt0.c5) IS FALSE) COLLATE BINARY FROM rt1, rt2, rt0 WHERE ((('' COLLATE BINARY) NOT BETWEEN (((((NULL)OR(-2071453002)))OR('-1100214454'))) AND (1318352600))) GROUP BY (- (((((rt1.c5)OR(rt0.c0)))OR(rt1.c5)))), rt0.c6, '䇋뮏!t憢,{^W'; -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c5)AND(rt2.c1)))OR(NULL)))OR(rt2.c6)))OR(x'0e84'))  WHEN json_extract(rt0.c2, rt1.c2) THEN ((rt1.c5) BETWEEN (0.9464574581200516) AND (rt1.c0)) ELSE PRINTF(rt2.c3, rt0.c1, rt1.c5) END FROM rt1, rt0, rt2 WHERE (CASE WHEN ((0.08545023754015724) BETWEEN ('V4/') AND (NULL)) THEN ((0.4679571220786446) NOT BETWEEN ('-981417580') AND (NULL)) ELSE ((0.8857967801725959) IS TRUE) END); -- 0ms;
SELECT CAST(GROUP_CONCAT(rt2.c6) AS REAL), LOWER(((rt1.c2)*(rt1.c1))), ((NULL)GLOB(SUM(rt1.c2))) FROM rt0, rt1 ORDER BY rt1.c5 COLLATE NOCASE ASC, rt2.c4  NULLS LAST;SELECT DISTINCT (CAST(rt1.c0 AS REAL) IN ()) FROM rt0, rt1, rt2; -- 0ms;
SELECT ALL (((rt0.c6, rt1.c0, rt0.c6)) BETWEEN ((((rt2.c4)||(rt1.c3)), CASE WHEN rt1.c4 THEN rt1.c0 WHEN rt0.c1 THEN rt1.c3 WHEN rt1.c4 THEN 0.28036171772720575 END, CASE WHEN rt0.c6 THEN rt1.c5 ELSE x'' END)) AND ((((rt1.c1)GLOB(rt1.c2)), rt2.c4, NULL))) FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT MAX(TOTAL(((rt2.c4) NOT NULL))) FROM rt1;SELECT DISTINCT ((CAST(rt2.c1 AS NUMERIC))OR(((rt2.c5) BETWEEN (rt0.c0) AND (rt0.c4)))), (((rt1.c1) NOTNULL) IN ()), COUNT(*) FROM rt2 WHERE (LIKE(((((x'')OR(-165120461)))AND(1.233042319E9)), ((NULL)IS NOT('1410853394')), '0')) GROUP BY ((rt0.c3 COLLATE NOCASE) NOT NULL) HAVING LENGTH((- (rt2.c1)));SELECT ('' IN ()), ((((((((rt1.c0)AND(rt1.c3)))AND(rt1.c2)))OR(rt2.c2)))AND(rt2.c0)) COLLATE NOCASE, DENSE_RANK() OVER (), COUNT(((((-1.120245352E9)AND(rt0.c5)))OR(0xffffffffbf937496))) OVER (), ((((((((((((((rt0.c5)>(rt2.c5)))OR((+ (rt1.c1)))))AND(((rt1.c0)!=(rt0.c5)))))AND(rt2.c3)))OR(((x'')!=(rt1.c3)))))AND(((rt1.c4)%(rt1.c3)))))OR(((((rt0.c6)AND(rt2.c0)))AND(rt2.c5)))) FROM rt0, rt1, rt2; -- 0ms;
SELECT NULLIF(x'', rt1.c0 COLLATE NOCASE) FROM rt2 WHERE ((DATE(0.3218454633946627, NULL, x'') IN (('-1232331552' IN ()))));SELECT DISTINCT ((rt2.c3) NOT BETWEEN (CAST(rt2.c2 AS BLOB)) AND (((rt1.c3)OR(rt1.c4)))) FROM rt1 GROUP BY rt2.c3, CAST(CAST(rt2.c5 AS REAL) AS TEXT), ((((rt0.c0) NOT NULL))GLOB((- (rt2.c5)))) HAVING ((((((rt2.c3)OR(rt2.c4)))OR(rt0.c4))) BETWEEN ((rt2.c0 IN ())) AND ('191556457'));SELECT ALL COUNT(((rt0.c6) IS TRUE)), ((CAST(rt2.c5 AS INTEGER))<>(rt0.c0)), ((343089674) NOT BETWEEN (CASE WHEN rt1.c0 THEN rt0.c4 ELSE 'PC	' END) AND (((((rt2.c6)AND(rt2.c3)))AND(rt2.c5)))) FROM rt0, rt1;SELECT ALL '9A,㢜ty9)', CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt1.c3 THEN rt2.c2 WHEN rt0.c2 THEN 0X78ffdd7 WHEN rt0.c3 THEN rt0.c1 WHEN rt1.c5 THEN rt0.c5 END COLLATE NOCASE, ('nKOB' IN (highlight(rt0.c2, rt0.c3, rt2.c3, rt0.c3))) FROM rt0;SELECT 185023534 FROM rt2; -- 1ms;
SELECT DISTINCT COUNT(NULL COLLATE NOCASE) OVER () FROM rt2; -- 0ms;
SELECT (~ ((rt0.c3 IN (rt0.c5, rt1.c5)))) FROM rt1 WHERE (CAST(x'' COLLATE BINARY AS REAL)) ORDER BY 437853372  NULLS FIRST;SELECT ALL CAST(rt1.c0 AS NUMERIC) COLLATE BINARY, MAX(MAX(((rt1.c1)=(NULL)))), ((rt0.c0)>=(rt0.c3)) COLLATE BINARY FROM rt1, rt2 WHERE (x'36b2') ORDER BY (NOT (TIME(rt2.c5, x'425c33f0', rt1.c0)));SELECT (((rt1.c4 COLLATE BINARY, HEX(rt0.c2), COALESCE(DISTINCT rt2.c1, rt0.c6)))<>((CAST(rt0.c0 AS BLOB), COUNT(*), rt1.c2))) FROM rt1 WHERE (((('1057749492')<('0.8846291320958056')) IN ()));SELECT DISTINCT ((CAST(rt1.c1 AS NUMERIC))==((('-331876767') IS FALSE))) FROM rt2 WHERE (((IFNULL(0.8502810497870752, x'')) NOT BETWEEN (x'6998b72e' COLLATE BINARY) AND (((-1.097886266E9) NOT BETWEEN (x'') AND (1041536428)))));SELECT (((rt1.c1 IN (0xffffffff829e6233, rt2.c6)))>>(('R>*_Ay' IN (rt1.c4, rt2.c4)))) FROM rt0, rt2 WHERE (((CASE WHEN '-1485128762' THEN 0.7375575866828262 WHEN NULL THEN '%J' WHEN x'' THEN 0xffffffffb8ae4fd0 ELSE -1686609142 END)<(((x'')=(0X6633863)))));SELECT ALL (((rt2.c6) IS TRUE) IN (((rt0.c4)>=(rt1.c3)))) FROM rt1, rt2 GROUP BY CAST(((NULL)>(rt0.c0)) AS INTEGER);SELECT ((((0.9464574581200516) NOT BETWEEN (rt2.c5) AND (rt1.c2)))%(COUNT(*))), TRIM(DISTINCT CASE 'MNʷCDE2\*'  WHEN rt2.c3 THEN rt1.c2 WHEN rt0.c1 THEN rt2.c6 WHEN rt1.c0 THEN rt1.c4 END, CASE WHEN rt2.c6 THEN rt2.c0 ELSE rt2.c4 END), ((((rt0.c4 COLLATE RTRIM)OR((rt1.c0 IN (rt0.c4)))))AND(LAST_INSERT_ROWID())) FROM rt0, rt1 WHERE ('kNA5箂');SELECT DISTINCT (- ('\t룴' COLLATE BINARY)), (((rt1.c5)) NOT BETWEEN (((('Uz7') NOTNULL))) AND (((rt1.c1 IN ())))), (((((((((rt2.c0)AND(rt0.c0)))OR(rt1.c4)))OR(rt2.c5)))AND(rt2.c5)) IN ()) FROM rt0;SELECT ((CAST(rt0.c3 AS BLOB)) IS TRUE) FROM rt0, rt1, rt2 WHERE (CAST(x'' COLLATE BINARY AS BLOB)); -- 0ms;
SELECT DISTINCT ((((((rt2.c1)OR('')))OR(rt2.c6)))<=((rt1.c4 IN (rt2.c2, rt2.c2)))) FROM rt1, rt2, rt0 WHERE (((((TRIM(DISTINCT -304194128))AND(((x'') BETWEEN (0x6cacd131) AND (NULL)))))OR(((x'9b117135') BETWEEN (-1279432912) AND (x'8a61'))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((('' COLLATE RTRIM))>((((rt0.c6) IS FALSE))))) OVER ( ORDER BY ((((rt0.c6) IS TRUE)) BETWEEN (((rt1.c1)-(rt2.c3))) AND (CASE WHEN rt2.c3 THEN rt0.c6 WHEN rt0.c2 THEN rt1.c4 WHEN rt2.c6 THEN rt2.c5 WHEN rt0.c0 THEN rt2.c2 WHEN rt0.c2 THEN rt0.c5 END)) DESC, (((rt0.c4 IN ()))!=((((x'')) NOT BETWEEN ((rt1.c2)) AND ((rt2.c3))))) ASC  NULLS LAST, (((((rt2.c6) IS FALSE)))<((rt1.c2 COLLATE RTRIM)))  NULLS LAST, ((rt0.c6 COLLATE NOCASE)%(((rt2.c6)IS NOT(rt1.c5)))) DESC) FROM rt0, rt1, rt2; -- 0ms;
SELECT ABS((~ (rt1.c1))), CASE WHEN x'' THEN CASE WHEN rt0.c4 THEN rt2.c6 ELSE rt1.c2 END WHEN (((rt1.c0))<>((rt0.c5))) THEN NULL WHEN ((rt0.c6) BETWEEN (rt1.c4) AND (rt2.c1)) THEN (((rt2.c5))<((x''))) ELSE ((rt2.c3) NOT BETWEEN (rt0.c5) AND (rt0.c4)) END, (((((NOT (rt1.c2)))AND(AVG(-3.31876767E8))))OR((((rt1.c1)) BETWEEN ((rt0.c6)) AND ((rt2.c4))))) FROM rt0 WHERE ((((((x'')IS NOT('L')), (('ZM')<<(NULL)), ((0X6b6ef285) NOT NULL)))>(((('Un')<(0.48639884247375587)), ((((((((NULL)AND(0.03802844571153963)))AND(x'')))OR('')))AND(0.14684102664914633)), (((((((('-1033614535')AND(x'')))AND(x'')))OR(NULL)))OR(0Xffffffffa3c98a54))))));SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (rt2.c4) AND (rt0.c6))) NOT BETWEEN ((~ (rt0.c5))) AND (((rt2.c4)|(rt2.c6)))), CASE (+ (rt2.c2))  WHEN (- (rt1.c3)) THEN rt0.c3 COLLATE BINARY WHEN ((((rt2.c4)OR(rt1.c1)))OR(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((x'') NOT BETWEEN (rt2.c0) AND (rt0.c2)) THEN rt0.c3 END, ((((rt1.c2)<=(rt0.c0))) NOTNULL) FROM rt2, rt0, rt1; -- 0ms;
SELECT (((rt1.c2)) NOT BETWEEN ((((rt1.c5)OR(rt1.c0)))) AND ((CAST(rt2.c4 AS NUMERIC)))) FROM rt0;SELECT ALL (((NOT (rt1.c5))) NOT NULL), CAST(((rt1.c0) NOT BETWEEN (rt2.c5) AND (rt2.c6)) AS REAL), CASE ((rt0.c4) ISNULL)  WHEN ((rt1.c2)<<(rt2.c1)) THEN (rt1.c1 IN ()) END FROM rt1 INNER JOIN rt2 ON ((((rt2.c4) BETWEEN (rt0.c2) AND (rt0.c5))) BETWEEN (((rt0.c3)=(rt2.c1))) AND ((((rt2.c0, rt0.c5, rt0.c3))==((rt1.c4, rt2.c0, rt1.c5))))) INNER JOIN rt0 ON rt1.c3; -- 0ms;
SELECT CASE (rt2.c3 IN ())  WHEN TRIM(DISTINCT rt2.c0, rt2.c4) THEN NULL WHEN rt1.c3 COLLATE NOCASE THEN ((rt2.c3)*(rt2.c3)) WHEN CASE rt0.c0  WHEN rt2.c5 THEN rt2.c4 WHEN rt0.c6 THEN rt1.c2 WHEN rt1.c5 THEN rt0.c0 END THEN ((((rt2.c5)OR(rt2.c2)))AND(rt2.c1)) END FROM rt2, rt0 LIMIT 494627687 OFFSET -238412716;SELECT DISTINCT ((((rt0.c1)<(rt2.c1)))IS(rt0.c3)), HEX(((rt2.c6) BETWEEN (rt0.c4) AND (rt1.c3))), ((((((rt1.c0)OR(rt0.c2)))OR(rt1.c4))) BETWEEN (CASE WHEN rt1.c3 THEN '' WHEN rt1.c2 THEN rt2.c3 WHEN rt1.c4 THEN rt0.c6 ELSE x'' END) AND ((~ ('-707524802')))) FROM rt0 GROUP BY CASE WHEN rt0.c6 THEN ((rt1.c2) IS TRUE) END, CAST(TOTAL_CHANGES() AS NUMERIC), ((-1594561818) NOTNULL) LIMIT -687539952;SELECT DISTINCT ((((((((rt1.c5 COLLATE RTRIM)OR(HEX(rt2.c2))))AND(rt2.c0 COLLATE BINARY)))AND(CASE WHEN rt1.c0 THEN rt1.c4 END)))OR(rt0.c1)), ((CASE rt0.c0  WHEN rt1.c5 THEN rt1.c3 END)>(rt2.c2 COLLATE NOCASE)), ((((rt0.c1)AND(rt0.c5))) IS TRUE), CASE CASE WHEN rt0.c1 THEN rt2.c1 END  WHEN rt1.c4 THEN x'' WHEN CASE rt1.c5  WHEN rt2.c1 THEN rt1.c0 WHEN rt1.c4 THEN rt1.c1 WHEN rt2.c4 THEN rt0.c0 END THEN ((rt1.c0) NOT BETWEEN (rt1.c2) AND (rt1.c2)) WHEN ((rt2.c2) NOT BETWEEN (NULL) AND (rt0.c5)) THEN CASE 0X2e99414f  WHEN rt0.c5 THEN rt0.c1 WHEN -1546956843 THEN rt0.c5 WHEN rt1.c1 THEN rt1.c2 END END, ((CAST(rt2.c6 AS INTEGER))IS NOT((~ (rt0.c5)))) FROM rt2 WHERE ((((((NULL, '-1487099863', 'd-__', 0.5445280276333695, x'')) NOT BETWEEN ((x'', NULL, 1.447984034E9, 0.6468052478134826, NULL)) AND ((0.8081235238494783, NULL, 0.9441434705612578, NULL, 0.9968463826136221)))) BETWEEN (NULL COLLATE RTRIM) AND ((1.440627506E9 IN ()))));SELECT DISTINCT NTH_VALUE(((((0.6596265966273606)OR(CAST(rt0.c0 AS BLOB))))OR(((rt0.c1) BETWEEN (rt0.c3) AND (rt2.c6)))), rt2.c4) OVER () FROM rt2, rt0; -- 0ms;
SELECT ALL x'' FROM rt0, rt2, rt1; -- 0ms;
SELECT DISTINCT rt0.c3, (- (((rt2.c3) NOT BETWEEN (NULL) AND (rt1.c3)))), rt2.c3 FROM rt0 WHERE ((((NULL) NOT BETWEEN ('pX*￿I') AND (NULL)) IN ()));SELECT ALL rt0.c1, SUM((((rt2.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) OVER ( ORDER BY CASE TRIM(rt1.c4, rt2.c2)  WHEN (NOT (rt1.c5)) THEN ((rt2.c2)<=(rt2.c3)) WHEN (+ (rt0.c4)) THEN (NOT (rt0.c4)) WHEN ((rt1.c3)/(rt1.c0)) THEN json_quote(rt1.c3) ELSE (rt1.c5 IN ()) END ASC), COUNT(((rt2.c3)<=(rt1.c2))) FROM rt2, rt0 WHERE (((NULL COLLATE RTRIM) BETWEEN (x'') AND ((((0X9d36550, 0.3515264167397103, NULL)) NOT BETWEEN (('寲{', 0.6488484395263086, NULL)) AND ((0.6083323580432667, '', ''))))));SELECT DISTINCT (((rt1.c4)) NOT BETWEEN (((- (rt0.c1)))) AND ((STRFTIME(rt0.c5, rt0.c1, rt2.c1)))) FROM rt1 CROSS JOIN rt0 ON ((((rt0.c2) BETWEEN (rt1.c0) AND (rt1.c1)))AND(((rt2.c3) BETWEEN (rt2.c1) AND (rt0.c5)))) CROSS JOIN rt2 ON ((rt2.c0)||(rt0.c4)) COLLATE NOCASE; -- 0ms;
SELECT ALL x'' FROM rt1 WHERE ((((('610683341')LIKE(0.6581625774410579)))GLOB(CASE WHEN NULL THEN 0.5369252740646615 END))); -- 1ms;
SELECT ALL ((SUBSTR(rt2.c6, rt0.c5)) NOT BETWEEN ((((rt2.c0)) NOT BETWEEN ((0.22563188830619152)) AND ((rt2.c4)))) AND (CASE rt1.c2  WHEN rt2.c4 THEN -706740713 WHEN rt0.c4 THEN 0.44787248309354666 WHEN rt0.c4 THEN rt1.c2 END)) FROM rt1, rt2, rt0; -- 0ms;
SELECT STRFTIME(CAST(rt2.c4 AS BLOB), ((rt0.c6)LIKE(rt0.c5)), (((rt1.c0)) NOT BETWEEN ((rt0.c5)) AND ((rt2.c2)))), COUNT(((rt0.c0) IS FALSE)), ((rt1.c2)<<(((rt2.c6) NOT BETWEEN (rt2.c2) AND (rt0.c3)))), (((rt1.c0, rt1.c2 COLLATE NOCASE, ((rt1.c5) IS TRUE)))>=((((rt1.c5)-(rt0.c0)), (NOT (rt0.c3)), (- (rt1.c0))))), TRIM((((rt2.c5, rt2.c5, rt0.c0)) NOT BETWEEN (('', rt2.c3, rt2.c6)) AND (('-1740919292', rt0.c5, rt1.c0))), rt1.c1 COLLATE BINARY) FROM rt0, rt2 WHERE ('k#b&P') ORDER BY (- (((rt2.c2)<>(rt2.c3)))) DESC  NULLS FIRST, CASE WHEN ((0.45764802425439555) IS FALSE) THEN (+ (rt2.c4)) WHEN rt1.c1 THEN rt0.c2 WHEN 0.6180516626589292 COLLATE NOCASE THEN (((rt2.c6))<((rt2.c2))) END  NULLS FIRST;SELECT ((NOT ('')) IN (rt1.c5)) FROM rt2;SELECT DISTINCT (((rt2.c2)) NOT BETWEEN ((LIKELY(DISTINCT rt2.c2))) AND (((((('')OR(rt1.c4)))OR(rt1.c4))))) FROM rt2, rt1 WHERE (CAST(CASE WHEN '6*A>t' THEN x'' WHEN x'' THEN '' WHEN 0.8701731328183632 THEN 0x27cc7a87 ELSE NULL END AS REAL)); -- 0ms;
SELECT ALL CAST(x'8935' AS TEXT), rt1.c4, (~ (((((((((rt0.c1)AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c0)))AND(rt2.c6)))) FROM rt2 WHERE (((CAST(NULL AS TEXT))AND(x'08e5')));SELECT ALL (((rt0.c3)) BETWEEN ((((rt2.c2) NOT BETWEEN (rt1.c1) AND (x'')))) AND (((((rt1.c4))<=((rt1.c5)))))) FROM rt0, rt2 WHERE ((((0.6785084592808938, x'', 0.7982230392484858)) NOT BETWEEN (((('-61980624') NOT BETWEEN (0.9739095324503975) AND (0.3289574591290989)), json_remove(NULL, '-1376608211'), ((x'')<=(0.9472068506589372)))) AND ((((x'')IS NOT(x'')), CAST(NULL AS REAL), COALESCE(NULL, '-1687732484', 0.7058859293490709, '1057749492', NULL, NULL)))));SELECT ALL rt1.c1, (('0.027845189815818405')||(((((rt2.c2)AND(rt1.c5)))AND(rt0.c6)))), (LIKELY(rt1.c1) IN (((rt2.c4)==(rt2.c4)))), ((((rt0.c4) ISNULL))>=(json_extract(rt0.c4, rt1.c4, rt2.c3, rt2.c6))), ((rt2.c3)-(((rt2.c6) NOT BETWEEN (rt0.c4) AND (rt1.c5)))) FROM rt2, rt0 WHERE ((((((((((((NULL)OR(x'')))AND('q>uke)Ru')))OR('-2129780974')))OR(0x6240b917))))=((DATE('', -1953440512, x'')))));SELECT x'' FROM rt1, rt0 WHERE (((CAST(0x1d6c7186 AS INTEGER)) NOT BETWEEN (((((x'f4cd')OR(0Xffffffffb83dd6a9)))AND(NULL))) AND (((-4.97970828E8) NOT BETWEEN (x'9337') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((SQLITE_VERSION())||((NOT (rt1.c5)))) FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)IS(rt2.c2)))OR(CASE rt2.c4  WHEN rt2.c6 THEN rt0.c6 END)))OR(CASE WHEN rt1.c2 THEN rt2.c3 ELSE '0.5861678623383997' END)))AND(CASE rt2.c0  WHEN rt1.c4 THEN rt2.c2 ELSE rt2.c1 END)))OR(CAST(rt0.c3 AS TEXT))) FROM rt2, rt1, rt0; -- 2ms;
SELECT ALL (((((rt1.c3, x'', rt2.c6)) BETWEEN ((rt1.c5, rt1.c3, rt1.c2)) AND ((rt1.c0, NULL, rt2.c2)))) IS TRUE) FROM rt0;SELECT DISTINCT COALESCE(((rt2.c5) IS FALSE), IFNULL(DISTINCT rt1.c0, '9u')) FROM rt2, rt1 WHERE ((((('129964489') NOT BETWEEN (0.7051960188809147) AND (x''))) NOT BETWEEN (CAST('-929252699' AS REAL)) AND ((-2.9144219E8 IN ())))); -- 0ms;
SELECT ALL (+ ((((rt1.c4))==((rt1.c5))))) FROM rt0, rt2 WHERE ((((NULL IN ())) BETWEEN ('283663413') AND (((NULL)GLOB(''))))) GROUP BY ((((((((((rt0.c6)>=(rt2.c1)))OR(((rt0.c4)IS NOT(rt1.c5)))))OR(rt0.c0 COLLATE NOCASE)))OR((rt1.c3 IN (rt1.c1)))))AND(rt1.c5));SELECT ((((rt1.c1)==(rt0.c4)))GLOB((rt1.c3 IN (rt1.c1)))) FROM rt0, rt2 WHERE (((~ (x'')) IN ()));SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt1.c2)) AND ((rt1.c5))))OR(((rt2.c3) NOT BETWEEN (rt0.c2) AND (rt2.c5)))) FROM rt0 WHERE ((- (CASE WHEN x'' THEN NULL WHEN 0.3369012429167788 THEN 0.4962680695268318 WHEN NULL THEN NULL WHEN 0.8160298704250489 THEN 0xffffffffea21adc0 WHEN -3.90228348E8 THEN 1369926834 END))) LIMIT -331876767;SELECT ((((((rt2.c1)>(0.1979435077101087)))OR(((((rt2.c0)AND(rt0.c6)))OR(rt2.c4)))))AND(((rt1.c2) ISNULL))) FROM rt2;SELECT (~ (CASE WHEN rt0.c1 THEN rt2.c6 END)), ((((((rt1.c4)AND(rt1.c1)))OR(rt0.c4)))>=(CAST(rt1.c5 AS BLOB))), IFNULL(DISTINCT ((rt2.c3)*(rt0.c0)), CAST(rt1.c2 AS NUMERIC)) FROM rt0 WHERE (CASE WHEN ((((-4.97970828E8)OR(-216516899)))OR(x'')) THEN ((NULL)>>(NULL)) ELSE ('%\r#K*I' IN (NULL)) END);SELECT DISTINCT rt0.c5 FROM rt2, rt0 ORDER BY GLOB(((rt2.c4) IS TRUE), rt2.c2)  NULLS FIRST; -- 0ms;
SELECT ALL (((rt0.c4)*(rt2.c5)) IN ()) FROM rt2 FULL OUTER JOIN rt1 ON CAST(DATETIME(rt2.c2, rt1.c4, rt1.c3) AS TEXT); -- 0ms;
SELECT ((((rt1.c4) IS TRUE)) IS TRUE), IFNULL(rt1.c4, rt0.c4) COLLATE BINARY, -3.53021104E8 FROM rt2 ORDER BY CAST(rt0.c4 COLLATE NOCASE AS BLOB)  NULLS LAST;SELECT (- (rt2.c3)), '۵a\r^2[ᴩx{', '1802433157' FROM rt1 WHERE (CAST(((0.9864464235171998)LIKE('7%')) AS REAL));SELECT DISTINCT x'', ((((rt1.c3)AND(x'')))OR(rt1.c4)) COLLATE RTRIM, ((rt2.c4)<=(0.5609990025595915)) FROM rt0, rt1, rt2 WHERE (((((('1086173461') NOT BETWEEN (0xffffffffda0b01c8) AND ('754258287'))))<((NULLIF(0x11c39d52, x''))))) GROUP BY (('fQa''cᚱ0C') ISNULL), (CAST(rt1.c1 AS TEXT) IN ((0X64982d64 IN ()))), ((rt2.c1 COLLATE BINARY)<<(((rt2.c5) BETWEEN (rt0.c2) AND (rt1.c5)))); -- 0ms;
SELECT DISTINCT COUNT(MAX(rt0.c0, rt1.c2, rt2.c6, rt2.c1, rt0.c0, rt1.c0)) OVER () FROM rt1;SELECT DISTINCT (((rt1.c3 COLLATE BINARY, (- (rt2.c3)), ((rt2.c2)LIKE(rt2.c3))))=((((rt0.c1)==(rt0.c6)), (0.17755135500281405 IN (rt2.c6, rt0.c1)), ((rt1.c0) IS FALSE)))), rt2.c5, ((((0.31965867545558435)AND(TOTAL(rt2.c5))))OR(rt2.c5 COLLATE BINARY)) FROM rt2;SELECT ALL (((rt0.c2)) BETWEEN (((rt1.c3 IN (rt1.c4, rt2.c3)))) AND (((((rt2.c6))>=((rt2.c0)))))), 0.7683165743145288, ((rt1.c1)|(CAST(rt2.c5 AS INTEGER))), (~ (rt0.c6)), ((((rt2.c5)/(rt2.c4)))IS NOT(GROUP_CONCAT(rt0.c4))) FROM rt1, rt2, rt0 WHERE ((((+ (NULL))) BETWEEN (((2.06370238E9) IS FALSE)) AND (CAST(0.885662943650921 AS TEXT)))); -- 0ms;
SELECT GROUP_CONCAT(0.2886862885371223) OVER (), MAX((((rt2.c5)) BETWEEN ((rt1.c5)) AND ((rt0.c6))) COLLATE BINARY), ((((((((CAST(rt2.c2 AS TEXT))OR((rt2.c0 IN ('B2')))))OR(((rt1.c0) NOT BETWEEN (rt1.c4) AND (rt0.c0)))))AND(((rt0.c0)>=(rt0.c5)))))OR(((rt1.c0)-(rt0.c4)))) FROM rt0 LIMIT 205545304 OFFSET -2050844594;SELECT DISTINCT 0.727662483869915 FROM rt2 WHERE (CASE CAST('' AS NUMERIC)  WHEN LIKELY(x'') THEN (('-246944863') BETWEEN (NULL) AND ('Oq6(m*')) WHEN CAST(x'' AS REAL) THEN (('')/('oE垐POj駃')) WHEN ((((0.7564697031359237)OR(x'e835')))AND('')) THEN CAST(0.4858532444151815 AS INTEGER) ELSE (- ('273713868')) END); -- 0ms;
SELECT ALL ((rt0.c6) NOT BETWEEN (rt0.c0) AND (rt1.c1)) COLLATE RTRIM, 0xffffffffa5d6f5a7, ((((rt1.c3)&(rt0.c4))) NOT NULL), ((NULLIF(rt1.c4, rt1.c4))<=(rt0.c1 COLLATE BINARY)), (~ (rt0.c2)) FROM rt2;SELECT ALL CAST(((rt0.c0) BETWEEN (rt1.c1) AND (rt0.c3)) AS REAL) FROM rt0, rt1, rt2 WHERE (CASE WHEN x'94b5' THEN '-1480517070' END COLLATE RTRIM) LIMIT 174479913; -- 0ms;
SELECT DISTINCT rt1.c0 FROM rt0, rt1, rt2 WHERE ((('-1667718019' COLLATE NOCASE)GLOB(((((((((NULL)OR(0.43520588358301227)))AND(NULL)))AND(x'')))OR(1410853394))))); -- 0ms;
SELECT ALL rt2.c1 FROM rt0, rt1 WHERE ((((('(<DC7')GLOB(NULL))) ISNULL));SELECT DISTINCT CASE (rt2.c1 IN (rt1.c3, rt0.c3))  WHEN rt0.c3 COLLATE BINARY THEN 'FALSE' END, ((CASE rt2.c1  WHEN NULL THEN rt0.c3 WHEN rt2.c4 THEN rt2.c6 WHEN rt1.c5 THEN rt0.c5 WHEN rt2.c2 THEN NULL WHEN rt0.c6 THEN rt1.c2 WHEN NULL THEN -512619218 WHEN rt2.c4 THEN rt0.c1 ELSE rt1.c4 END) IS FALSE), ((rt1.c0) NOTNULL) COLLATE RTRIM FROM rt2, rt1, rt0 WHERE ((~ ((~ (x''))))); -- 0ms;
SELECT ALL 0Xffffffffd775a79c, (((((((rt0.c0))=((rt0.c1))))AND(((((rt0.c1)OR(rt2.c5)))AND('䬹')))))AND(rt0.c5 COLLATE RTRIM)), ((CASE rt0.c6  WHEN rt0.c3 THEN rt2.c4 ELSE rt2.c3 END)-(((rt0.c6) NOT BETWEEN (rt2.c6) AND (rt0.c2)))) FROM rt0 WHERE ((CASE '읶*'  WHEN '-1987458719' THEN -981417580 WHEN NULL THEN x'' WHEN 'Y8毼䀰~DmTx' THEN 0.5671250650068383 END IN ())) ORDER BY CASE WHEN ((rt0.c3)||(rt0.c6)) THEN ((rt2.c6) NOT BETWEEN (rt0.c2) AND (rt0.c1)) ELSE CASE WHEN rt2.c2 THEN rt0.c6 ELSE rt0.c3 END END ASC;SELECT ALL CASE '-1311280719'  WHEN ((rt0.c4)*(rt2.c4)) THEN rt2.c0 COLLATE NOCASE END FROM rt0, rt2; -- 0ms;
SELECT DISTINCT ((rt2.c4)<<(rt0.c5)) COLLATE BINARY FROM rt2, rt1, rt0; -- 0ms;
SELECT ALL (((rt0.c4)) NOT BETWEEN ((rt1.c3 COLLATE RTRIM)) AND ((CASE rt0.c3  WHEN rt1.c1 THEN rt0.c5 WHEN rt0.c6 THEN rt2.c6 WHEN rt1.c1 THEN rt0.c4 ELSE rt0.c1 END))) FROM rt0, rt1, rt2 WHERE ((UNLIKELY(x'cc23') IN ((('&A_') BETWEEN (0.2520993558359943) AND (765318623))))) ORDER BY (((rt0.c6)) BETWEEN ((((rt1.c4)-(rt0.c6)))) AND ((rt2.c3 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((rt2.c6, rt1.c3, NULL)) NOT BETWEEN (((~ (rt1.c4)), ((rt0.c1) NOT NULL), TOTAL(rt0.c1))) AND ((TOTAL(rt2.c1), ((rt0.c3)IS NOT(rt1.c5)), ((((((((rt2.c3)AND(rt2.c4)))AND(rt0.c4)))AND(rt0.c2)))OR(rt2.c5))))) FROM rt0, rt2, rt1 GROUP BY rt1.c0, ((((((rt2.c6)AND(rt1.c4)))AND(rt2.c1)))&(CASE WHEN rt0.c5 THEN rt1.c3 WHEN '1066195807' THEN rt2.c4 WHEN rt0.c3 THEN rt0.c0 ELSE rt1.c2 END)), (CAST(rt0.c5 AS NUMERIC) IN ()); -- 0ms;
SELECT ALL ((LIKE(rt2.c2, 0.5122840054540428))<=(LIKELIHOOD(rt0.c2, 0.5145495564965736))), (COUNT(*) IN ()), ((((rt0.c5, rt1.c3, rt2.c0))>((rt1.c4, rt1.c1, rt1.c1))) IN (((0.68674266318986) BETWEEN (rt1.c5) AND (rt2.c6)))), (((rt2.c2 COLLATE BINARY))>((GLOB(rt2.c4, rt1.c1)))), TRIM(DISTINCT ((0.3503544287727075)||(rt2.c1))) FROM rt2, rt1;SELECT ALL CASE ((rt1.c4)&(rt2.c2))  WHEN 0.26354991826355 THEN ((rt2.c6) NOT BETWEEN (rt1.c5) AND (rt2.c6)) END FROM rt0, rt2 WHERE (TYPEOF(LIKELIHOOD(NULL, 0.44747863387415365)));SELECT '-1682797391' FROM rt2, rt1; -- 0ms;
SELECT ((CAST(x'' AS REAL))/((- (NULL)))), rt1.c0, CAST((- (rt2.c3)) AS REAL) FROM rt1, rt2 WHERE ((((x'')) BETWEEN (((x'' IN ()))) AND (((~ (x'4b54')))))); -- 0ms;
SELECT rt1.c2, (((rt2.c3)) NOT BETWEEN ((rt0.c6)) AND ((rt2.c4))) COLLATE BINARY, ((CAST(NULL AS BLOB))LIKE(((rt2.c1) NOT BETWEEN (rt2.c3) AND (rt1.c3)))) FROM rt2 WHERE (LIKELIHOOD(DISTINCT (+ (NULL)), 0.5410422222981631)) LIMIT 240981128 OFFSET 1396889785;SELECT ALL (TOTAL(rt1.c4) IN ()) FROM rt2, rt1, rt0 WHERE ('0.39320896684135465'); -- 0ms;
SELECT DISTINCT ((MAX(''))IS(((((0x158a3ae7)AND(rt2.c0)))AND(rt1.c3)))), ((rt0.c6) IS FALSE), CAST(CASE WHEN rt2.c1 THEN rt0.c4 WHEN rt2.c4 THEN rt1.c5 WHEN rt0.c4 THEN rt2.c1 END AS NUMERIC) FROM rt0;SELECT CAST((rt0.c4 IN ('2058434768')) AS TEXT) FROM rt1, rt2;SELECT DISTINCT ROW_NUMBER() OVER () FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT '1626213455' FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt2, rt1;SELECT DISTINCT ((GROUP_CONCAT(rt2.c2))AND((((rt2.c4))<((NULL))))), NULL, ((((x'')IS(rt0.c0))) NOT BETWEEN (rt2.c3 COLLATE BINARY) AND (((rt2.c3)IS NOT(rt2.c2)))) FROM rt0, rt1, rt2 WHERE ((((('x') ISNULL)) BETWEEN (x'' COLLATE NOCASE) AND (CAST(x'dcaf' AS REAL)))); -- 0ms;
SELECT DISTINCT (CAST(rt0.c5 AS NUMERIC) IN ()), (((((((((((rt0.c3, rt2.c5, rt1.c4, rt1.c0, rt1.c1)) BETWEEN ((rt0.c0, rt2.c2, rt2.c3, rt1.c5, rt0.c3)) AND ((rt0.c2, rt0.c3, rt2.c0, NULL, rt2.c4))))AND(((rt2.c2) NOT BETWEEN (rt2.c1) AND (rt2.c1)))))AND(CASE WHEN rt2.c4 THEN rt1.c5 WHEN rt1.c1 THEN rt1.c3 WHEN rt1.c2 THEN rt2.c6 END)))OR(((rt1.c1)LIKE(rt1.c2)))))AND(((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)))), ABS(MAX(rt2.c0)), rt2.c5, ABS(((((rt0.c6)OR(rt2.c2)))AND(rt2.c1))) FROM rt2, rt0, rt1; -- 1ms;
SELECT DISTINCT IFNULL(DISTINCT ((rt0.c6) NOT NULL), rt0.c3 COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT (((((((rt1.c2)AND(rt1.c5)))AND(rt0.c6))))>=((rt1.c2 COLLATE NOCASE))) FROM rt1 WHERE (((CASE WHEN NULL THEN '0.23023972146770688' WHEN x'' THEN '-333259660' WHEN NULL THEN 0.4679571220786446 END)==('221336119' COLLATE RTRIM)));SELECT DISTINCT ((((CAST('m]s*⊶mp' AS NUMERIC))OR((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))))AND(((rt2.c6)+(rt1.c1)))), (((~ (NULL)))OR(x'c31d')), rt0.c6 FROM rt1 WHERE (((((0.01753419133854528 IN (x'')), ((x'')<(0.3980711749600817)), (((('I~J璵컺씵q}T')OR('-2018639909')))AND(x''))))==((CAST(NULL AS NUMERIC), NULL COLLATE BINARY, (((0.3300559211403322))<((NULL)))))));SELECT DISTINCT ((((rt1.c1) NOT BETWEEN (rt0.c0) AND (0.257558833027999))) BETWEEN ('OzORꂳ*') AND (COUNT(rt1.c4))) FROM rt1, rt0, rt2 WHERE ((NOT ((- (0Xffffffffb7187c24))))) GROUP BY (NOT (JULIANDAY(rt2.c3, rt0.c2, rt1.c3))); -- 0ms;
SELECT DISTINCT ((((rt0.c6)|(0X0)))IS(AVG(rt2.c3))) FROM rt2;SELECT ((CASE rt1.c0  WHEN rt0.c2 THEN rt0.c4 WHEN -1.740919292E9 THEN rt1.c1 WHEN rt0.c4 THEN rt0.c2 ELSE rt1.c2 END)OR('v9!E[c\r' COLLATE NOCASE)) FROM rt0 WHERE ((('191556457') IS FALSE)) ORDER BY ((((rt1.c5)IS(rt2.c5)))>=(CAST(rt2.c0 AS TEXT))) ASC  NULLS LAST;SELECT DISTINCT CASE rt0.c5 COLLATE RTRIM  WHEN TOTAL(rt0.c4) THEN ((rt0.c4)|(rt2.c0)) END FROM rt1 WHERE (((CHANGES())IS(CAST('-' AS NUMERIC))));SELECT DISTINCT (((+ (rt0.c6)))/('0.3005177350609122')) FROM rt2, rt0 WHERE (((((((((((NULL)OR(x'')))OR(NULL)))AND(NULL)))OR(x''))) IS TRUE)) ORDER BY CAST(((rt1.c1) IS TRUE) AS TEXT), ((rt1.c4 COLLATE BINARY)>=(rt1.c5)) DESC  NULLS FIRST;SELECT ALL ((((rt1.c3) NOT BETWEEN (rt0.c5) AND (NULL))) NOT BETWEEN ((((0.8558392048934349, rt1.c4, rt0.c0))<>((rt1.c2, rt0.c3, NULL)))) AND ((rt2.c2 IN ()))) FROM rt1, rt2 WHERE (((-1.400829059E9) IS TRUE) COLLATE BINARY);SELECT (NOT (UNLIKELY(DISTINCT rt1.c1))) FROM rt1, rt0 LIMIT 432951792 OFFSET 339703367; -- 0ms;
SELECT DISTINCT ((json_array_length(rt1.c4, NULL))OR(CAST(rt1.c0 AS BLOB))) FROM rt2, rt0;SELECT ALL ((0xffffffffb3dac237) NOT BETWEEN (LIKELIHOOD(DISTINCT rt0.c3, 0.20985438967081393)) AND ('-1971656350')) FROM rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT 'L?' FROM rt0, rt2 LEFT OUTER JOIN rt1 ON CAST(IFNULL(rt2.c0, rt2.c6) AS REAL); -- 0ms;
SELECT DISTINCT ((((((rt0.c1)*(rt0.c0)))OR(((rt0.c1)>(rt2.c4)))))OR(rt0.c5 COLLATE RTRIM)) FROM rt0 WHERE (((x'062c') NOT BETWEEN ((('') ISNULL)) AND ((('1740086243') BETWEEN (x'') AND (0xffffffffc8d85e8a)))));SELECT DISTINCT (NOT ((((rt0.c2, rt0.c6, rt2.c5)) NOT BETWEEN ((rt2.c0, rt1.c5, rt1.c5)) AND ((NULL, rt0.c0, rt0.c0))))) FROM rt2 WHERE (CASE WHEN ((0.8033706275149916) BETWEEN (1.403215051E9) AND (x'')) THEN (x'' IN ()) END);SELECT DISTINCT rt0.c1, COUNT((((rt1.c4, rt1.c4, '-1242551808'))<((rt1.c1, rt2.c6, rt2.c5)))) OVER (), rt2.c5 FROM rt1;SELECT DISTINCT (~ (((rt2.c6) IS TRUE))), CAST(((rt0.c0)>>(0xffffffffc1badaad)) AS TEXT), ((((rt2.c0)GLOB(rt2.c0)))AND(((rt0.c1)&(rt1.c1)))), LAST_INSERT_ROWID(), ((((('0.6149127556040943', rt0.c5, rt1.c5)) NOT BETWEEN ((rt1.c0, rt2.c4, rt0.c5)) AND ((rt1.c0, rt0.c2, rt0.c3))))<>(TRIM(DISTINCT rt2.c1, rt2.c1))) FROM rt2, rt1, rt0 WHERE (((((((((((0.177887993450206)AND(x'')))OR(x'')))AND('0.12890081305764567')))AND('-199034376')))&(((((x'')OR('919389435')))AND(x''))))) GROUP BY (json_object(rt0.c5, rt2.c6, rt0.c2, rt0.c5, rt2.c6, rt0.c6) IN (CAST(rt1.c0 AS BLOB), CASE rt0.c6  WHEN rt0.c5 THEN rt0.c6 WHEN rt1.c3 THEN '-771643767' WHEN NULL THEN rt1.c1 END)) HAVING rt1.c1; -- 0ms;
SELECT DISTINCT rt2.c4 FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT ((rt2.c1 COLLATE NOCASE)==(AVG(rt2.c0))) FROM rt0, rt2 WHERE ((((x'', '0䖭', 0.38077558786667476)) BETWEEN (((NULL IN ('', NULL)), (('-122184809') NOT BETWEEN ('1032189804') AND ('')), ((NULL)|(x'7140')))) AND (((((('-977148703')AND(NULL)))OR(177370061)), ('-1666935074' IN (1027028452, '1061499948')), ((NULL)%(x'')))))); -- 0ms;
SELECT DISTINCT (((((rt2.c6) NOT BETWEEN (rt0.c4) AND (rt1.c4)), (+ (rt0.c2)), (NOT ('7x('))))!=(('\r(?q}', GROUP_CONCAT(rt0.c1), CAST(rt0.c3 AS BLOB)))) FROM rt1;SELECT highlight(MAX(rt0.c0), ((rt2.c5)|(rt2.c0)), rt0.c2, (~ (rt1.c5))) FROM rt0 WHERE (((((NULL) BETWEEN (x'') AND ('1440627506')))+('1430519821')));SELECT 0.21528510123068056 FROM rt1 WHERE (((((((NULL) NOT BETWEEN (0.566074953623225) AND (x'')))OR(((x'')<=(1604321181)))))OR((((NULL))<((0.01286075400880815)))))); -- 0ms;
SELECT ((ABS(rt1.c2)) NOTNULL) FROM rt0, rt1 WHERE (((((NULL) BETWEEN (NULL) AND (0.07313707855889251))) NOT BETWEEN (((('U{}')) BETWEEN ((0.6678157585099151)) AND ((2.29197332E8)))) AND (((((NULL)OR('kxJ迶VN 䜮r')))AND(1.447984034E9))))); -- 0ms;
SELECT DISTINCT ((CAST('-430898394' AS REAL))!=((rt0.c6 IN ()))), rt0.c4, CAST(CAST(rt2.c2 AS BLOB) AS TEXT) FROM rt1, rt2 WHERE (((((NULL)<<(0.8458235198710519)))/((('1348470315')>(')X5')))));SELECT DISTINCT CASE WHEN (((rt1.c1)) BETWEEN ((rt0.c6)) AND ((rt0.c1))) THEN rt2.c0 ELSE SQLITE_COMPILEOPTION_USED(rt2.c2) END FROM rt0, rt2, rt1 WHERE (DATE(((NULL) BETWEEN (x'c48edfc3') AND (0.5370904181761164)), CAST(NULL AS NUMERIC), (('xF') NOT NULL), CASE 0.5861678623383997  WHEN '-1971656350' THEN '-1882931971' END, (('191556457') BETWEEN ('*	JM{E}q') AND (0Xffffffff88e6ddd5)))); -- 0ms;
SELECT DISTINCT rt1.c3 COLLATE RTRIM FROM rt0;SELECT ALL (((~ (rt0.c2))) NOTNULL) FROM rt0 WHERE (((4.32951792E8 COLLATE RTRIM)LIKE(((NULL)%('-5186715'))))); -- 0ms;
SELECT ALL CASE rt1.c2  WHEN rt1.c2 THEN x'' ELSE rt2.c0 END COLLATE BINARY, (((rt2.c4)) NOT BETWEEN ((TOTAL(rt2.c1))) AND ((((rt0.c0)%(rt0.c2))))), CAST(((rt0.c3)GLOB(rt2.c2)) AS TEXT) FROM rt2;SELECT CUME_DIST() OVER ( PARTITION BY CAST((((rt2.c1)) BETWEEN ((rt2.c4)) AND ((NULL))) AS TEXT), CASE WHEN (((rt2.c4, rt2.c3, '-1251964211')) BETWEEN ((rt2.c0, rt2.c3, rt2.c6)) AND ((rt0.c0, rt1.c4, rt2.c1))) THEN (NOT (rt0.c4)) WHEN 0Xffffffffea21adc0 THEN x'' WHEN 0.6973284972879169 THEN x'86c2' END) FROM rt0, rt1 WHERE (CAST((((-1.740919292E9))!=((''))) AS BLOB));SELECT ((COUNT(rt0.c1)) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT HEX(rt0.c0) COLLATE RTRIM FROM rt0, rt2; -- 1ms;
SELECT DISTINCT ((rt1.c4) BETWEEN (rt1.c3) AND (rt0.c1)) COLLATE BINARY FROM rt2, rt0, rt1 WHERE ((((((((0.8683420683788432, NULL, 'b/oW'))<((x'', 0.446369349076021, x''))))OR(((((0x77f43fe9)OR(x'')))AND(339703367)))))AND(((0.739014477556653)+(x'f02b'))))); -- 0ms;
SELECT (- (rt0.c6)) FROM rt0, rt2, rt1 WHERE ((((x'dc4210af', NULL, -2.068314784E9)) BETWEEN ((((('	N~K0F'))<>((NULL))), 0.41122866258127855 COLLATE RTRIM, '-949406232')) AND (((('')!=(0.08335041104757246)), ((((((((1.02206435E8)OR(x'')))AND(0.9303088725476856)))OR(NULL)))OR(-1.54707294E9)), (0.4864052626890112 IN (0Xffffffffac20a2a9)))))) ORDER BY DATE(((rt0.c3)+(rt0.c5)), ((rt2.c6) ISNULL), NULL, CAST(rt0.c1 AS INTEGER), ((rt1.c3)<=(rt0.c3)))  NULLS LAST, rt0.c0 ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NTH_VALUE((NOT (((((rt1.c0)AND(rt1.c3)))OR(rt2.c0)))), '-1547072940') OVER () FROM rt0, rt1, rt2 WHERE ((NULL IN ())); -- 0ms;
SELECT DISTINCT json_array_length((rt2.c3 IN ()), (((rt2.c0))<=((rt2.c2)))), rt2.c0, (((('-1203906903')|(rt2.c2)))-(((rt0.c6) IS FALSE))) FROM rt0 FULL OUTER JOIN rt2 ON (CASE rt2.c1  WHEN rt2.c1 THEN rt0.c3 WHEN rt1.c0 THEN rt1.c3 WHEN rt2.c1 THEN rt1.c2 WHEN rt0.c3 THEN rt2.c6 WHEN rt2.c3 THEN rt0.c5 END IN ()) WHERE ((((((0.7009435510219393)AND(0.9617666712661557)))AND(x'68aeb8b3')) IN ())); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0 WHERE (IFNULL((((x'9dfa')) NOT BETWEEN ((0.12799745712594512)) AND ((0.018559652203562038))), CASE 2.01401294E9  WHEN '134308104' THEN '108927424' WHEN 0.7268479511483388 THEN 1.554533385E9 WHEN x'' THEN 0.5789333336872318 ELSE NULL END)); -- 0ms;
SELECT DISTINCT ((((rt1.c1) NOT NULL)) IS FALSE) FROM rt2;SELECT (((COUNT(rt2.c0), ((rt2.c3) BETWEEN (rt0.c1) AND (rt2.c0)), TOTAL(rt2.c2), (rt2.c4 IN (rt1.c1)), ((((((((rt1.c0)AND(rt0.c3)))OR(rt0.c1)))AND(x'06f3')))AND(rt2.c0))))>(((+ (NULL)), ((rt1.c1) NOT BETWEEN (rt1.c1) AND (rt0.c1)), ((((rt0.c1)AND(rt0.c5)))AND(rt0.c4)), rt2.c2 COLLATE NOCASE, UNLIKELY(DISTINCT rt0.c2)))) FROM rt2, rt1, rt0; -- 0ms;
SELECT ((rt2.c4)=(rt0.c3)) FROM rt0 LIMIT -1740919292 OFFSET 1719880164;SELECT ALL CASE WHEN GROUP_CONCAT(rt2.c0) THEN COUNT(*) ELSE ((rt0.c6)-(rt1.c1)) END FROM rt2, rt1, rt0 WHERE (CASE 0.7497578296684811  WHEN '0.15735109342854714' THEN NULL WHEN NULL THEN NULL WHEN 0.15735109342854714 THEN '1748246465' END COLLATE NOCASE) GROUP BY 0.8773814383248139 HAVING x'3c6f'; -- 0ms;
SELECT ((+ (rt1.c1)) IN ((((rt1.c0))=((rt0.c3))), ((((rt2.c1)OR(rt2.c4)))AND(rt0.c0)))), GROUP_CONCAT(((((((((rt1.c1)OR(rt1.c5)))AND('1336498312')))AND(rt1.c3)))AND(rt1.c1))) OVER (), rt2.c6 COLLATE RTRIM FROM rt2, rt1, rt0 WHERE (((x'27f3') BETWEEN ('em') AND (0.24143078880584512)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt2.c3))IS NOT(x'')) FROM rt1, rt2, rt0 GROUP BY ((- (rt0.c5)) IN ()); -- 0ms;
SELECT DISTINCT 0.6979843245249794 FROM rt1, rt0 WHERE ((((('1292712191')&('-1681102830'))) BETWEEN ((((NULL))=((NULL)))) AND (x''))); -- 0ms;
SELECT DISTINCT ((((CAST(rt0.c4 AS BLOB))AND(((rt2.c1)+(rt2.c5)))))OR((((rt0.c3)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c3))))), ((-4.97970828E8) NOT NULL), ((((rt2.c1)*(-1.551130304E9)))&(CASE rt0.c5  WHEN rt0.c3 THEN rt0.c6 ELSE rt0.c5 END)) FROM rt0, rt1, rt2 WHERE ((((((((((('129964489') NOT BETWEEN (-977148703) AND (0x1d6c7186)))OR(CAST('0.6313788419340794' AS INTEGER))))AND((('860808461')+(x'182e')))))AND(TRIM(DISTINCT 0x0, 1.891833004E9))))AND((('339703367') ISNULL)))) LIMIT -455146060; -- 0ms;
SELECT DISTINCT CAST(((rt2.c0)%(rt1.c2)) AS TEXT), (~ (rt1.c0 COLLATE NOCASE)), ((MIN(rt1.c1))==(((rt1.c5)IS NOT(rt0.c4)))) FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT UPPER(CASE WHEN rt2.c1 THEN rt1.c2 ELSE rt1.c5 END), ((((NULL)>>(x'')))AND(rt2.c6)), ((((((rt2.c1)OR(rt2.c6)))AND(((((rt1.c4)AND(rt0.c2)))OR(rt2.c6)))))OR(SUM(rt1.c4))) FROM rt0, rt2, rt1; -- 0ms;
SELECT DISTINCT rt2.c2 FROM rt1, rt2 WHERE ((~ (0.1023336654461463))) GROUP BY ((((rt1.c3) NOT NULL))&((((rt0.c0))==((rt1.c0))))) HAVING ((((((rt0.c0)GLOB(rt1.c2)))OR(CASE WHEN rt1.c2 THEN rt2.c2 END)))AND(((rt2.c1) BETWEEN (rt2.c1) AND (rt1.c2))));SELECT ALL PRINTF((((rt2.c2, rt0.c3, rt0.c2))>=((rt0.c3, rt2.c6, rt1.c0)))) FROM rt2, rt1 WHERE ((((NULL)) NOT BETWEEN ((((0.7746190999496005)*('241602582')))) AND (((0Xffffffff884b5999 IN ('[]'))))));SELECT ALL (((~ (rt1.c3))) NOTNULL), ((x'') NOT NULL) COLLATE BINARY, (- (((rt0.c1) NOT BETWEEN (rt2.c0) AND (rt0.c3)))) FROM rt2, rt0, rt1 GROUP BY ABS(DISTINCT ((rt0.c2) NOTNULL)), CAST(rt1.c3 AS NUMERIC), -1223352488;SELECT DISTINCT (CAST(rt0.c1 AS BLOB) IN (COUNT(*), rt0.c2)) FROM rt1, rt0, rt2; -- 0ms;
SELECT ALL ABS(((NULL)IS NOT(rt0.c4))), ((CASE WHEN x'' THEN rt2.c2 END)<<((NOT (0.525850410508591)))), '' FROM rt1, rt0;SELECT ALL NULL, ((((((rt2.c4)%(rt1.c2)))OR(CASE rt2.c0  WHEN rt0.c1 THEN rt2.c1 END)))AND(((rt0.c4) BETWEEN (rt1.c3) AND (rt2.c0)))), ((TYPEOF(rt0.c1)) NOTNULL) FROM rt0, rt2, rt1 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (CASE 0xffffffffcbc827e7  WHEN x'12c1' THEN 'Ma</w{' ELSE NULL END) AND ((('-981417580') IS FALSE)))); -- 1ms;
SELECT SUM((NOT (rt1.c3))), (+ (rt0.c2)), (~ (rt0.c6)) COLLATE BINARY FROM rt0 WHERE (CAST(CASE WHEN x'' THEN 395196756 WHEN x'' THEN 0.36665129724914647 WHEN NULL THEN 0.1559928954172496 END AS NUMERIC)) ORDER BY (+ (((rt2.c0)<(rt2.c3)))) ASC  NULLS FIRST;SELECT DISTINCT (+ (TRIM(x'8a8331ac', rt0.c6))) FROM rt2, rt0 GROUP BY rt1.c1;SELECT GROUP_CONCAT(json_extract(rt1.c1, rt2.c6)) FROM rt0, rt2 WHERE (x'3692') GROUP BY CAST(0.6457953408684187 AS INTEGER), ((']3')*(((rt2.c6)!=(rt2.c0)))), rt0.c5 HAVING ((rt1.c2)<>(rt0.c3)) COLLATE NOCASE;SELECT ALL (((rt2.c4))>=((CASE rt2.c0  WHEN rt2.c0 THEN rt1.c4 WHEN rt0.c6 THEN rt1.c4 WHEN rt0.c3 THEN rt0.c0 END))), ((CAST(rt0.c2 AS INTEGER)) ISNULL), (((rt2.c4)-(rt0.c6)) IN ()) FROM rt1, rt2;SELECT DISTINCT MIN(rt1.c1), (+ (MIN(rt2.c5))), ((CAST('1086160613' AS NUMERIC))<(LIKELIHOOD('', 0.033562915540181315))) FROM rt1 WHERE (CASE WHEN LOWER(0.2080718251170901) THEN ((x'') BETWEEN (0.08645906531903502) AND ('~')) ELSE ((((((((NULL)OR('mJy 	ZZ')))OR(NULL)))AND(NULL)))AND(x'')) END) ORDER BY ((CHANGES()) IS TRUE), CAST(rt2.c1 AS BLOB) DESC;SELECT DISTINCT CAST(COUNT(rt2.c4) AS TEXT) FROM rt2; -- 0ms;
SELECT LIKELY((((rt1.c5))<((NULL)))) FROM rt0, rt2 WHERE ((('-13326072')>>('hb')) COLLATE BINARY);SELECT DISTINCT ((((TYPEOF(rt1.c5))AND(((rt1.c4)<=(rt0.c4)))))AND(CASE rt0.c4  WHEN rt2.c3 THEN rt2.c2 END)) FROM rt0 WHERE ((((NULL)) BETWEEN ((((NULL) IS FALSE))) AND ((((((NULL)AND(NULL)))OR(x''))))));SELECT DISTINCT (SQLITE_SOURCE_ID() IN ()), ((('' IN ()))+((((rt2.c3))=((rt0.c3))))), (NOT (((rt0.c2) ISNULL))) FROM rt2, rt0, rt1 WHERE ((((1.648408855E9)) BETWEEN ((CAST(0.899993243991572 AS TEXT))) AND ((((('-714788982', x'', NULL, '', 0.24697844529983126))<(('', '-420842265', 0.4838217184887078, NULL, 0.146355506148104))))))) LIMIT -1879033075 OFFSET 1086173461; -- 0ms;
SELECT (((rt2.c0 IN ()))||(((((rt0.c2)OR(rt1.c4)))OR(rt2.c4)))), ((((((rt2.c5)) NOT BETWEEN ((rt2.c0)) AND ((rt1.c5)))))!=((rt2.c6 COLLATE BINARY))), rt0.c1 FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT CAST(rtreenode(rt1.c4, rt0.c5) AS NUMERIC) FROM rt0, rt1 WHERE ((+ (x'5d7a')) COLLATE BINARY COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))*(CASE WHEN rt2.c5 THEN x'' END)) FROM rt2, rt0 WHERE ((('-1203906903' IN (x'')) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt2, rt1; -- 0ms;
SELECT ALL CASE (rt0.c4 IN ())  WHEN COALESCE(rt0.c0, rt1.c4) THEN CAST(rt0.c5 AS NUMERIC) END, 'fiQb5>', (((+ (rt2.c6)))<=((rt0.c6 IN (rt2.c2, rt1.c0)))) FROM rt2 ORDER BY (CAST(rt0.c2 AS NUMERIC) IN ());SELECT DISTINCT ((((rt1.c5) ISNULL)) ISNULL) FROM rt1, rt0 GROUP BY TIME((+ (rt0.c2)), ((rt0.c6)+(rt2.c4)), (((rt2.c3)) BETWEEN ((rt2.c6)) AND ((rt1.c4)))) HAVING ((rt2.c2) NOT BETWEEN ((((rt1.c2)) BETWEEN ((rt0.c3)) AND ((rt1.c3)))) AND (((rt0.c3) NOT BETWEEN (rt2.c0) AND (rt1.c4)))) ORDER BY CAST(CASE rt2.c6  WHEN rt1.c5 THEN rt1.c1 WHEN rt2.c0 THEN rt2.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt1.c1 WHEN rt2.c4 THEN rt0.c0 ELSE rt1.c3 END AS TEXT) DESC  NULLS LAST;SELECT DISTINCT COUNT(*) OVER () FROM rt2 WHERE (CAST(CASE WHEN NULL THEN NULL ELSE 'UAⵂT' END AS TEXT)) GROUP BY (NOT (((rt0.c3)>>(rt2.c1)))), (((('I3')>=(rt1.c5))) NOT BETWEEN (((rt0.c1)GLOB(rt0.c5))) AND (((((rt2.c5)AND(rt2.c2)))AND(rt0.c0)))), 'H6*I{Zh' HAVING ((rt0.c0)AND(rt1.c3)) COLLATE NOCASE;SELECT DISTINCT (((rt2.c4) BETWEEN (rt2.c6) AND (rt0.c2)) IN ((+ (rt0.c0)))) FROM rt2, rt1;SELECT SUM(x'') OVER () FROM rt1, rt2, rt0 WHERE (CAST(x'' AS TEXT) COLLATE BINARY) ORDER BY ((NULL) IS TRUE) DESC; -- 0ms;
SELECT ALL (((((((rt2.c2)AND(0.23023972146770688)))OR(rt1.c1))))>((rt2.c6))) FROM rt2, rt0, rt1 WHERE (CASE WHEN NULL THEN x'' END COLLATE BINARY) GROUP BY CASE (rt0.c2 IN ())  WHEN ((rt2.c3)*(rt2.c1)) THEN (+ (rt1.c5)) END HAVING ((((((((COUNT(*))AND(CASE WHEN rt1.c5 THEN rt1.c3 WHEN rt2.c3 THEN rt1.c5 WHEN rt2.c4 THEN rt2.c0 END)))OR((rt2.c4 IN (rt2.c2)))))OR(((rt2.c3) NOT BETWEEN (rt0.c5) AND (rt1.c5)))))AND(rt1.c5)); -- 0ms;
SELECT ((CAST(rt2.c4 AS INTEGER))|(TYPEOF(rt0.c4))) FROM rt1 WHERE (CASE WHEN (('')LIKE(0.6149127556040943)) THEN NULL COLLATE NOCASE END);SELECT LOWER(DISTINCT (~ (rt0.c2))), SUM(((0.4838217184887078)AND(NULL))) OVER (), CUME_DIST() OVER (), SUM(((((rt2.c6)AND(rt2.c0)))OR(NULL))), ((SUM(rt2.c2))||(((rt1.c3)GLOB(rt2.c5)))), ((SQLITE_COMPILEOPTION_USED(rt0.c3))&(CASE WHEN rt0.c1 THEN rt2.c2 WHEN rt1.c5 THEN rt2.c5 WHEN rt0.c3 THEN x'd025' END)), ((((((rt0.c0)OR(rt2.c1)))OR(rt0.c5))) BETWEEN ((('-687539952')%(rt2.c0))) AND (CAST(rt0.c4 AS REAL))) FROM rt1, rt0;SELECT DISTINCT ((((NULL)<<(rt0.c6))) IS TRUE) FROM rt2, rt0 WHERE (((CASE WHEN '-292370797' THEN 0.2848371987383794 WHEN x'' THEN x'' WHEN x'' THEN '361380583' ELSE NULL END) NOT BETWEEN (((x'')IS NOT(0.3223658094972657))) AND ((('985957031')<<(NULL))))); -- 0ms;
SELECT ALL ((rt1.c1 COLLATE BINARY) NOTNULL), ((x'' COLLATE NOCASE) BETWEEN (NULL) AND (CASE rt2.c5  WHEN rt2.c3 THEN rt1.c1 END)), (+ (UPPER(rt1.c2))) FROM rt2;SELECT DISTINCT ((((rt0.c2) BETWEEN (rt1.c0) AND (rt0.c4)))LIKE(SUM(rt1.c0))) FROM rt1, rt2 LIMIT 472142645 OFFSET -1465481347;SELECT DISTINCT ((((((rt0.c4)AND(rt1.c0)))AND(rt1.c4))) NOTNULL), ((((rt0.c2) BETWEEN (rt2.c5) AND (rt0.c4))) ISNULL), ((((rt2.c4)IS(rt2.c0)))+(((rt2.c4)>=(rt0.c5)))) FROM rt1, rt2, rt0 WHERE (((CAST('' AS REAL)) NOT BETWEEN (x'') AND (((('1597628664')) NOT BETWEEN ((1040785455)) AND (('RY7v/B(%')))))) ORDER BY 'sP]_' COLLATE NOCASE; -- 0ms;
SELECT ALL '229197332' COLLATE NOCASE, ((AVG(rt2.c3)) IS FALSE), CAST(rt1.c0 COLLATE BINARY AS INTEGER) FROM rt0, rt1 WHERE ((((CASE x''  WHEN '1440627506' THEN 0.7533673542103501 END))<(((+ (0.262149636490435))))));SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((CASE rt0.c3  WHEN rt2.c3 THEN rt1.c4 WHEN rt0.c2 THEN rt1.c1 WHEN rt2.c1 THEN rt0.c4 END)) AND (('-1196535856'))), ((((rt0.c3))>((rt1.c5))) IN (((('癦y197j'))>(('Gr'))))), (((LIKELY(DISTINCT rt2.c2)))<(((rt1.c2 IN (rt1.c0, rt2.c3))))) FROM rt0, rt2 WHERE (LAST_INSERT_ROWID()) ORDER BY ((rt0.c1)>=(rt1.c3)) COLLATE NOCASE;SELECT ((UNLIKELY(DISTINCT '908211386')) IS FALSE), ABS(DISTINCT (~ (rt2.c4))), (((CAST(rt2.c6 AS REAL)))>=((((rt0.c1)>(rt0.c5))))) FROM rt1 ORDER BY (- (LIKELY(DISTINCT rt0.c1))), rt0.c4 DESC;SELECT ALL CAST(rt1.c4 COLLATE RTRIM AS BLOB), (~ (CASE rt0.c0  WHEN rt0.c4 THEN rt1.c0 END)), ((((((rt1.c1)OR(rt2.c5)))AND('-1333518846')))>(((((rt2.c2)AND(rt0.c6)))AND(rt2.c5)))) FROM rt0, rt1, rt2; -- 1ms;
SELECT ALL ((((((((0.6760956308377086)OR(rt0.c4)))AND(rt2.c1)))OR(rt0.c3 COLLATE RTRIM)))AND((NOT (rt0.c1)))) FROM rt1;SELECT DISTINCT SUM(MAX(DATETIME(0Xfffffffff8e3b8f4, rt2.c4, rt2.c5, rt0.c5, rt0.c6))) FROM rt0, rt2 WHERE ((+ (NULL)) COLLATE RTRIM) ORDER BY (- (rt2.c1)) ASC  NULLS LAST;SELECT rt0.c2 FROM rt2, rt1, rt0; -- 0ms;
SELECT GROUP_CONCAT(((((((((rt1.c3)AND(rt0.c5)))OR(rt2.c4)))AND(rt2.c6)))OR(rt0.c4))) FILTER(WHERE CAST(CAST(rt2.c1 AS REAL) AS TEXT)) OVER () FROM rt2, rt1;SELECT DISTINCT UPPER(((rt1.c5) NOT NULL)), CASE CASE WHEN rt1.c3 THEN rt0.c0 ELSE rt1.c0 END  WHEN rt1.c2 THEN ((((rt0.c1)OR(rt0.c0)))AND(rt1.c1)) ELSE '-331385079' END, (((rt2.c3) NOT NULL) IN ()) FROM rt2;SELECT DISTINCT CAST(rt1.c2 AS NUMERIC) COLLATE NOCASE, GROUP_CONCAT(((rt1.c4) NOT BETWEEN (rt0.c4) AND (rt2.c4))) OVER (), NTILE(((((rt2.c4)+(rt1.c2))) ISNULL)) OVER ( ORDER BY CASE WHEN '&' COLLATE RTRIM THEN (((rt1.c5)) NOT BETWEEN ((rt1.c1)) AND ((rt2.c1))) END ASC  NULLS FIRST, rt0.c0 DESC  NULLS LAST), (- (((((rt1.c0)OR(rt0.c3)))OR(rt2.c6)))), GROUP_CONCAT((~ (rt2.c1))) FROM rt1, rt2;SELECT DISTINCT ((((((((((rt2.c4)>=(0.9843462136647249)))AND(rt0.c3)))OR(((((rt2.c1)AND(rt1.c0)))AND(rt0.c3)))))OR((((rt0.c4))>=((rt0.c4))))))OR(((rt2.c1) BETWEEN (rt1.c3) AND (rt1.c4)))) FROM rt0, rt1, rt2 WHERE (CAST((('/4J		ꜦZ~b')*(NULL)) AS BLOB)); -- 0ms;
SELECT DISTINCT x'', rt2.c3, (((rt2.c1)!=(rt1.c4)) IN (rt0.c4 COLLATE NOCASE)) FROM rt1;SELECT (((rt0.c3)) NOT BETWEEN ((((((rt2.c3)AND(rt2.c4)))OR(rt0.c4)))) AND ((GROUP_CONCAT(rt1.c2)))) FROM rt1 WHERE ((((((0.12716389306299503))<=((x'')))) NOTNULL));SELECT ((((((((CASE WHEN rt2.c4 THEN rt0.c1 ELSE rt0.c5 END)OR((((rt2.c6))>=((rt1.c4))))))OR(rt1.c5)))OR((((rt1.c2))!=((rt2.c3))))))OR(CASE WHEN rt0.c3 THEN '1891833004' WHEN rt1.c0 THEN rt1.c5 WHEN rt0.c5 THEN rt0.c5 WHEN -768688242 THEN 0.9402568620868773 WHEN rt0.c5 THEN rt0.c3 END)) FROM rt0, rt2 WHERE (CAST(TYPEOF(1086173461) AS NUMERIC));SELECT DISTINCT UPPER(CASE WHEN NULL THEN rt0.c5 END) FROM rt1 WHERE ((((((0.08098450454402606, NULL, 0.8535966196168124))!=((NULL, NULL, -1445471369)))) NOT BETWEEN ('9B /' COLLATE NOCASE) AND (SUBSTR('-1480517070', x''))));SELECT DISTINCT ((((rt2.c5)LIKE(rt0.c4)))||('eS')) FROM rt0 WHERE ((((((~ (0x1272791d)))OR((~ ('-977148703')))))AND(CAST(x'' AS INTEGER))));SELECT ALL ((894156880) NOT BETWEEN (json_extract(rt0.c0, 0.19484428636571094, rt2.c6, rt1.c5)) AND (((((rt2.c3)AND('-1125512644')))AND(rt2.c3)))), ((((((((((rt1.c4) IS FALSE))AND(((rt0.c0) ISNULL))))AND(rt2.c5 COLLATE RTRIM)))AND(CAST(-1474883387 AS INTEGER))))OR(((rt1.c5) BETWEEN (rt0.c6) AND (rt0.c0)))), COUNT(*) FROM rt0, rt2, rt1 WHERE ((((- ('-1683153414'))) ISNULL)) LIMIT 1447984034; -- 0ms;
SELECT CAST(CASE WHEN rt0.c5 THEN rt2.c5 ELSE rt0.c0 END AS TEXT), (((- (rt2.c3)))AND(((rt1.c1) BETWEEN (rt0.c2) AND (rt0.c5)))), CAST('uFEdxuS' AS REAL) COLLATE NOCASE FROM rt2, rt1, rt0 WHERE (1.231633644E9 COLLATE NOCASE); -- 0ms;
SELECT ALL CAST(rt1.c1 AS REAL) COLLATE BINARY FROM rt2, rt0 WHERE (CASE WHEN ((0.8232728485337923)<>(0.06843617156051707)) THEN (('102206435')AND(NULL)) END);SELECT DISTINCT CASE WHEN ((rt2.c2) IS TRUE) THEN rt1.c1 WHEN MIN(rt2.c3, rt2.c0) THEN LIKELIHOOD(rt2.c4, 0.6215410838748839) WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c5 IN ()) WHEN (NOT (rt2.c1)) THEN (+ (rt1.c0)) WHEN ((rt1.c5) NOT BETWEEN (rt2.c4) AND (rt1.c3)) THEN ((((((((rt2.c1)AND(rt2.c3)))OR(rt1.c1)))OR(rt1.c2)))AND(rt2.c0)) END FROM rt0, rt1;SELECT 0x7b01996c FROM rt2; -- 0ms;
SELECT DISTINCT (((rt1.c1))<>((rt2.c5))) COLLATE NOCASE FROM rt1, rt2; -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt0.c6)) THEN json_remove(rt0.c3, rt2.c3, rt0.c2, rt0.c2) END, ((((rt0.c5 IN ()), ((rt2.c6)GLOB(rt1.c4)), ((((((((rt1.c2)AND(rt0.c6)))OR(0.21429734148141888)))OR(rt0.c1)))AND(rt2.c0))))=(((rt1.c2 IN ()), CAST(rt0.c3 AS REAL), CAST(rt2.c0 AS INTEGER)))), (~ (AVG(rt2.c2))) FROM rt0 NOT INDEXED;SELECT ALL (((((rt0.c2)AND(rt2.c2)))AND(rt1.c3)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt1 WHERE ((0xffffffff90277fcc COLLATE BINARY IN ())) ORDER BY (((((rt1.c3, rt0.c0, rt0.c2)) BETWEEN ((rt1.c1, rt1.c0, 0.37509877324971475)) AND ((rt2.c4, NULL, 'u/')))) BETWEEN (CASE rt1.c5  WHEN rt0.c0 THEN rt2.c6 ELSE rt2.c3 END) AND (CAST(rt0.c4 AS REAL))) DESC  NULLS FIRST;SELECT DISTINCT GROUP_CONCAT(((((rt2.c0)OR(rt2.c5)))OR(rt0.c6))) OVER (), (((rt2.c6)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c5)+(rt2.c2))))), (~ (AVG(rt2.c3))) FROM rt2 WHERE (((0.806563051207613)-(CAST('-903259146' AS INTEGER))));SELECT DISTINCT ((CAST(rt0.c6 AS BLOB))IS NOT(((((rt0.c2)OR(NULL)))AND(NULL)))) FROM rt1, rt2, rt0 WHERE (CAST(((1891833004) NOT BETWEEN (x'') AND (NULL)) AS NUMERIC)); -- 0ms;
SELECT CASE WHEN CAST(rt2.c1 AS TEXT) THEN rt1.c0 WHEN CAST(rt1.c4 AS REAL) THEN IFNULL(rt2.c4, rt2.c0) WHEN ((rt2.c1) ISNULL) THEN (rt0.c1 IN ()) ELSE rt0.c1 COLLATE BINARY END FROM rt1, rt0, rt2 WHERE (((CAST('Infinity' AS BLOB))LIKE(((-885535827) BETWEEN (0xffffffffae2906f5) AND (-1.97165635E9))))); -- 1ms;
SELECT DISTINCT NULL FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt1.c4 THEN rt2.c6 END) NOT NULL), GROUP_CONCAT(((rt1.c5)OR(rt1.c4))), TOTAL((~ (NULL))) FROM rt2, rt1, rt0 WHERE ((((~ ('')))&(((0xffffffffdf62910e)/(0.4806617694548164))))); -- 0ms;
SELECT DISTINCT rt1.c5 FROM rt0 NOT INDEXED;SELECT ALL rt0.c2, (+ ((rt0.c6 IN ()))), ((rt2.c5)OR(rt2.c0)) FROM rt1, rt2;SELECT DISTINCT CAST(((rt2.c3)>=(rt2.c4)) AS NUMERIC) FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt1.c0  WHEN rt0.c6 THEN rt2.c3 WHEN rt0.c5 THEN rt1.c5 WHEN rt0.c6 THEN 'z3C!8' ELSE rt0.c5 END THEN ((rt1.c2) BETWEEN (rt1.c5) AND (rt2.c4)) END FROM rt1;SELECT ALL COUNT(*) OVER () FROM rt1, rt2, rt0 WHERE (((0xfffffffff2fdb06c COLLATE BINARY) ISNULL)) LIMIT 830506203; -- 0ms;
SELECT ALL LAG(CAST(HEX(rt0.c0) AS REAL), (((((rt1.c1, rt0.c0, rt0.c3))<((rt0.c3, rt1.c4, '769672332')))) NOT BETWEEN (CAST(rt0.c4 AS TEXT)) AND ((+ (rt0.c2)))), HEX(((((rt1.c1)OR(rt1.c3)))OR(rt1.c2)))) OVER () FROM rt1, rt0 WHERE ((NOT (x''))) GROUP BY (((rt1.c4 IN (rt1.c1))) ISNULL); -- 0ms;
SELECT CAST(((rt2.c3) IS TRUE) AS NUMERIC) FROM rt0;SELECT DISTINCT AVG(CAST(rt2.c3 AS NUMERIC)) OVER ( ORDER BY CASE rt2.c5  WHEN rt2.c0 THEN rt0.c0 ELSE rt1.c2 END COLLATE RTRIM DESC, ((((rt0.c6)IS NOT(rt2.c6)))||(rt0.c2))  NULLS FIRST), CASE WHEN CASE WHEN rt1.c0 THEN rt2.c1 WHEN rt1.c4 THEN rt2.c3 WHEN rt1.c0 THEN rt2.c5 END THEN CASE rt1.c5  WHEN rt1.c0 THEN rt0.c4 ELSE 1.086173461E9 END END, CASE (~ (rt0.c1))  WHEN CAST(rt1.c3 AS BLOB) THEN CAST(rt1.c2 AS REAL) END FROM rt0 ORDER BY TYPEOF(((rt1.c4) BETWEEN (rt2.c5) AND (rt2.c5)))  NULLS LAST, ((json_object(rt2.c5, rt0.c6)) BETWEEN (NULL) AND ((~ (rt1.c4)))) DESC;SELECT DISTINCT ((((CASE rt0.c0  WHEN rt2.c5 THEN '-1083721158' WHEN rt2.c4 THEN rt2.c6 WHEN rt0.c0 THEN rt1.c1 WHEN rt1.c0 THEN '' WHEN rt1.c3 THEN rt1.c4 END)AND(rt2.c5)))AND(((2.41602582E8) ISNULL))) FROM rt0, rt2 WHERE (CASE WHEN CAST(1295025454 AS NUMERIC) THEN ((NULL)|(x'')) ELSE GLOB(NULL, 0Xffffffffbbab951d) END);SELECT DISTINCT CASE WHEN ((((rt1.c2)AND('-1882931971')))OR(rt0.c3)) THEN CAST(rt1.c4 AS BLOB) WHEN ((rt0.c5) BETWEEN (rt0.c4) AND (rt1.c5)) THEN (rt1.c3 IN ()) WHEN CASE rt0.c4  WHEN rt2.c3 THEN rt1.c1 END THEN ((rt0.c6) NOT BETWEEN (rt1.c0) AND (rt0.c3)) ELSE CASE rt1.c5  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END END FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT CASE AVG(rt2.c5)  WHEN ((rt1.c4) NOTNULL) THEN SUM(rt0.c3) END FROM rt0, rt2;SELECT ALL ROW_NUMBER() OVER () FROM rt2, rt0, rt1 LIMIT -1747466913; -- 0ms;
SELECT ALL (((rt1.c5 IN ())) BETWEEN (((rt2.c1) IS TRUE)) AND ((NOT (x'')))) FROM rt1, rt2 WHERE ((((NULLIF(0.48268904680432334, 'Z')))<((((x'')*(x'')))))); -- 0ms;
SELECT CAST(TYPEOF(DISTINCT rt0.c5) AS REAL), (((CAST(rt2.c2 AS TEXT), CAST(rt0.c1 AS NUMERIC), CASE rt2.c0  WHEN rt2.c2 THEN rt1.c0 END, 'PrdbM曾摞Xz', CASE rt2.c1  WHEN rt2.c5 THEN rt2.c5 ELSE rt1.c3 END))>(((('-353021104') NOT NULL), (((NULL)) BETWEEN ((rt2.c1)) AND ((rt0.c5))), ((rt2.c0)GLOB(rt0.c5)), x'', ((rt1.c3) IS FALSE)))), COUNT(*) OVER ( ORDER BY CASE WHEN (- (rt1.c2)) THEN ((rt0.c0)IS(rt2.c0)) END ASC  NULLS LAST) FROM rt2 WHERE ((((+ (NULL))) NOT BETWEEN (((0xffffffffb6d48456) ISNULL)) AND ((('0.8486173658384838') NOT NULL)))) ORDER BY ((('fhTh| avR' IN ())) NOT BETWEEN ((rt0.c2 IN ())) AND (NULL)) ASC;SELECT ALL CASE ((rt1.c0) IS TRUE)  WHEN ((rt0.c0) ISNULL) THEN ((rt2.c4) BETWEEN (rt2.c1) AND (rt2.c1)) ELSE CAST(rt1.c2 AS TEXT) END FROM rt2 ORDER BY (NOT (rt0.c2 COLLATE BINARY)) ASC  NULLS FIRST;SELECT ((CASE rt2.c5  WHEN rt0.c0 THEN rt0.c5 ELSE rt2.c3 END) ISNULL) FROM rt0, rt2; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN '-196269152' END AS INTEGER)) OVER () FROM rt0 WHERE (CAST(CAST(NULL AS TEXT) AS BLOB)); -- 0ms;
SELECT ALL (((((('(eMy')IS NOT(rt1.c5)))OR((NOT (rt2.c5)))))AND(((rt1.c4) NOT BETWEEN (rt1.c4) AND (rt2.c0)))) FROM rt0;SELECT DISTINCT json_object((x'' IN ()), x'') FROM rt1 GROUP BY ((((rt0.c1)GLOB(rt0.c6)))>>(((x'') NOTNULL))) HAVING COALESCE(((rt0.c1)LIKE(rt2.c4)), rt2.c3, NULL, x'acea');SELECT ALL ((CAST(rt0.c6 AS INTEGER)) BETWEEN ((- (rt0.c5))) AND ((~ (rt2.c3)))) FROM rt2 WHERE (((CASE WHEN '/7' THEN NULL END)>(((((0xffffffffcfced4d1)OR(NULL)))AND(NULL)))));SELECT ALL ((rt0.c6)&(rt1.c0)) COLLATE RTRIM, ((((0.9057914928085536) IS TRUE)) NOT BETWEEN (((rt1.c5)<(-1810922026))) AND (((rt2.c4)OR(rt2.c4)))), CAST(rt2.c4 COLLATE NOCASE AS NUMERIC) FROM rt2 WHERE (TRIM(DISTINCT ((432661489) NOT BETWEEN ('-512973401') AND (0.6298052509721168)), 0.5789333336872318 COLLATE RTRIM));SELECT rt2.c0 FROM rt0, rt2 WHERE (CAST((((((((('1967530504')OR('')))AND(x'')))OR(NULL)))OR('1447984034')) AS NUMERIC)) LIMIT 812395243 OFFSET 1677141231; -- 1ms;
SELECT ALL CAST(rt0.c5 COLLATE BINARY AS REAL), ((AVG(rt2.c2))>>(rt1.c4 COLLATE NOCASE)), rt0.c0 FROM rt2, rt1;SELECT ALL CASE rt2.c5  WHEN rt0.c1 THEN rt1.c2 WHEN rt2.c5 THEN rt1.c0 WHEN rt1.c3 THEN rt1.c5 END COLLATE NOCASE FROM rt2;SELECT ((TOTAL(rt0.c0)) NOTNULL) FROM rt1, rt0, rt2 WHERE ((('1003794959')&(0.6490809051506556)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt0.c6 COLLATE NOCASE FROM rt1, rt0, rt2 WHERE ((((((420457649)OR(4.93646214E8)))OR('>㩊*4N脹')) IN (((((0.13745477668430928)OR(x'')))OR('-512619218')), CAST(0.6313788419340794 AS BLOB), CASE x''  WHEN 'Wd' THEN 273713868 WHEN NULL THEN '1947449603' WHEN x'' THEN '860691914' ELSE -438826652 END))) ORDER BY ((((((rt2.c5)GLOB(rt2.c1)))OR(((0.7902767201331443) NOTNULL))))OR(((rt0.c3)IS NOT(rt0.c1)))) DESC; -- 0ms;
SELECT DISTINCT '', x'a119', ((SQLITE_COMPILEOPTION_GET(rt1.c0))||('-')), ((rt1.c0) NOT BETWEEN (rt2.c1) AND (rt0.c1)) COLLATE NOCASE, ((((rt2.c6)>>(rt2.c1)))>>(((rt1.c3)IS(rt0.c5)))) FROM rt0, rt1, rt2; -- 0ms;
SELECT DISTINCT ((((((((((((CAST(rt1.c0 AS INTEGER))OR(((rt2.c5)<=(rt0.c6)))))AND((~ (rt1.c3)))))OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt1.c1)))))AND(rt1.c1)))OR(((((((((((((rt0.c2)OR(rt0.c2)))OR(rt1.c5)))OR(rt2.c4)))OR(rt1.c2)))AND(rt2.c2)))OR(rt0.c2)))))AND(((rt2.c0)-(rt2.c2)))) FROM rt0, rt1 WHERE (CASE ((((((((NULL)OR(x'')))AND('-1767155150')))AND(NULL)))AND(x''))  WHEN (+ (0.46790114267135063)) THEN ((NULL)IS(0.5064795437832108)) WHEN LIKELIHOOD('-1528977482', 0.9737289265915775) THEN (('1164558913')&(0.7790344077643286)) WHEN CAST('' AS INTEGER) THEN CAST(x'' AS NUMERIC) END) LIMIT -9223372036854775808;SELECT ALL 'k|d', (('Cy') IS FALSE) COLLATE NOCASE, (((x'' IN ()))*((((rt2.c4)) BETWEEN ((rt0.c5)) AND ((rt0.c0))))) FROM rt1 WHERE (((NULL IN ()) IN ((0.8845545100699913 IN ()), ((NULL)&(x'9606')))));SELECT (~ (((rt0.c3)<(rt2.c6)))), LOWER((NOT (rt2.c5))), (((((rt2.c3)) NOT BETWEEN (('229197332')) AND ((rt0.c1)))) NOTNULL) FROM rt0, rt2 WHERE (((((CAST(x'' AS TEXT))OR(0.899993243991572 COLLATE RTRIM)))OR((((x'ba3a')) BETWEEN ((0.4345440055818117)) AND (('&U')))))); -- 0ms;
SELECT DISTINCT (NOT (CAST(rt2.c3 AS TEXT))) FROM rt2, rt0 WHERE (((((0.045124914062131816)OR(x''))) BETWEEN (TRIM(DISTINCT 0.9567263562040081)) AND ((- (NULL))))); -- 0ms;
SELECT COUNT(NULL) OVER () FROM rt2 WHERE ((~ ('癡<od.G7' COLLATE BINARY))) ORDER BY ((((('-1187558253')&(rt0.c0))))<((((((rt2.c1)AND(rt0.c2)))AND(rt1.c5))))) ASC, ((((rt1.c3)IS(rt1.c4)))||(((((NULL)OR(rt2.c2)))AND(rt2.c2))))  NULLS FIRST;SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((CASE rt0.c6  WHEN rt2.c3 THEN rt0.c5 END)) AND ((((rt2.c6)<(rt0.c2))))) FROM rt0, rt1 WHERE ((((((0.12280606525612592)=(x'')), TOTAL_CHANGES(), 0.5038678545683826 COLLATE NOCASE))>((((x'')IS NOT(NULL)), (((NULL))<=(('769637869'))), 0.47561457496394277))));SELECT ALL (((('840220713')OR(CAST(rt0.c4 AS BLOB))))OR((~ (rt0.c3)))), LAG(UPPER(TRIM(rt2.c1)), ((((rt2.c2)%(rt2.c2)))IS NOT(rt2.c3 COLLATE NOCASE)), ((((0.30688088122970125 IN ())))=((IFNULL(DISTINCT rt2.c2, rt2.c6))))) OVER ( PARTITION BY ((((rt0.c6)GLOB(0.7242792052263474)))<((rt2.c4 IN (rt0.c1, rt1.c5)))), (((rt1.c1 IN ())) IS TRUE) GROUPS  CURRENT ROW EXCLUDE NO OTHERS), ((((rt1.c2) IS FALSE))*(((rt0.c2) NOTNULL))) FROM rt2 WHERE (((((('-1468601771')AND('#eu⃩h')))OR(NULL)) IN ())) LIMIT 642749196 OFFSET -161067814;SELECT DISTINCT rt1.c3 FROM rt0, rt2 WHERE ((+ (NULL)));SELECT DISTINCT ((((rt1.c2) NOT BETWEEN (rt2.c2) AND (rt2.c2)))LIKE((rt0.c4 IN ()))), AVG(rt2.c4), CAST((((rt0.c6))>=((x'910b'))) AS REAL) FROM rt1 LIMIT 817216785;SELECT DISTINCT ((((rt1.c3)>(rt0.c2)))<<(rt2.c1)), ((SUBSTR(rt2.c5, 0.3759796978966551)) ISNULL), CASE MIN(rt0.c0)  WHEN ((rt2.c1)/(rt0.c2)) THEN (- (rt2.c2)) END FROM rt2 WHERE ((((((('0.3592597615498617')>(0.011717841794977923)))AND(0.39943187001058633 COLLATE RTRIM)))OR((x'2ed7' IN ()))));SELECT (~ (((((rt2.c6)AND(rt0.c6)))OR(rt0.c6)))) FROM rt2 ORDER BY (((CASE rt2.c3  WHEN rt0.c4 THEN rt2.c4 WHEN rt2.c1 THEN rt2.c0 WHEN rt0.c1 THEN rt1.c2 ELSE rt2.c6 END, (rt1.c3 IN (rt0.c0)), ((rt0.c0)>=(rt0.c5))))=((((rt2.c2)GLOB(rt0.c5)), ((((rt0.c3)AND(rt1.c0)))AND(rt2.c4)), rt0.c0))) DESC  NULLS FIRST;SELECT SUM(((rt0.c6) IS TRUE)) OVER () FROM rt1 NOT INDEXED, rt2 GROUP BY ((load_extension(rt0.c1, rt1.c1)) NOT BETWEEN ('2145797044') AND (LOWER(DISTINCT rt1.c0))) ORDER BY CASE rt0.c1  WHEN rt2.c0 THEN rt1.c4 WHEN rt2.c5 THEN rt2.c4 WHEN rt0.c5 THEN rt2.c0 ELSE rt0.c0 END COLLATE RTRIM;SELECT ALL ((ABS(rt2.c4))||(MAX(rt1.c1))) FROM rt0 WHERE (((x'')>>(0.17516219742192807)) COLLATE NOCASE);SELECT ((rt1.c2 COLLATE RTRIM) ISNULL), ((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)) COLLATE BINARY, 0.008121884816540859 FROM rt1, rt2, rt0; -- 0ms;
SELECT DISTINCT TOTAL((rt0.c4 IN (rt0.c5, ''))) OVER () FROM rt2 WHERE ((((x'' IN (''))) NOT BETWEEN (x'' COLLATE BINARY) AND (CASE WHEN NULL THEN 651664624 ELSE 0.23595225818046806 END)));SELECT ALL (AVG('j揆_m{w~') IN ()), CAST(((rt0.c1) NOT BETWEEN ('') AND (rt1.c5)) AS NUMERIC), ((CASE WHEN rt0.c4 THEN rt0.c1 END) BETWEEN (LIKELIHOOD(DISTINCT rt0.c1, 0.7072686040453684)) AND ((rt1.c0 IN ()))) FROM rt1, rt2, rt0 WHERE ('361380583'); -- 1ms;
SELECT DISTINCT ((CAST(rt2.c3 AS TEXT)) BETWEEN ((+ (rt2.c5))) AND (rt0.c2 COLLATE BINARY)) FROM rt2, rt1 WHERE (CAST(((x'') NOTNULL) AS TEXT));SELECT DISTINCT (((rt0.c4 IN ()))<<(((((rt1.c3)OR(rt2.c2)))AND(rt2.c1)))) FROM rt2 WHERE ((('{z]8墵' IN ()) IN ()));SELECT (((rt2.c1 IN ()))%(x'323ebf4f')), (((NOT (rt1.c4)))>>(((rt2.c1)IS(rt2.c3)))), (((rt0.c0, rt2.c2, rt2.c1)) NOT BETWEEN ((CASE WHEN rt1.c1 THEN rt0.c3 ELSE rt1.c5 END, (rt1.c2 IN ()), TOTAL(rt1.c0))) AND ((CASE rt0.c5  WHEN rt2.c0 THEN rt2.c3 ELSE rt1.c1 END, ((((((((rt2.c0)AND(rt2.c0)))AND(rt1.c0)))AND(rt0.c5)))AND(rt0.c6)), CAST(rt0.c5 AS REAL)))) FROM rt0;SELECT '1074802348', CAST(((rt1.c3)LIKE(rt2.c0)) AS TEXT), AVG(((rt2.c2) BETWEEN (rt2.c6) AND (rt1.c0))) OVER () FROM rt2, rt1, rt0; -- 0ms;
SELECT DISTINCT ((rt1.c1)%(rt1.c3)) COLLATE NOCASE, 0.6620830966134043, ((((rt1.c4)==(rt1.c5)))IS(TIME(rt1.c1, '', rt2.c4))) FROM rt2, rt0, rt1 WHERE ((((((0.3104459340088116 IN ()))OR(CASE WHEN NULL THEN x'' WHEN NULL THEN x'ef24' WHEN x'5fb4755a' THEN '-977148703' ELSE NULL END)))AND(NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((rt2.c3 COLLATE NOCASE) NOT NULL) FROM rt2, rt0; -- 0ms;
SELECT DISTINCT (((((rt1.c5)) BETWEEN ((rt0.c3)) AND ((rt0.c0)))) IS FALSE), TOTAL(((rt2.c5)IS NOT(rt2.c1))), ((rt1.c4 COLLATE BINARY)IS(SUM(0.6210416593282871))) FROM rt1 WHERE ((NULL IN ()));SELECT ALL SUM(CAST(rt1.c2 AS TEXT)) FROM rt1, rt0, rt2 GROUP BY (CAST(rt0.c2 AS BLOB) IN ()) HAVING ((((((rt2.c1)AND(rt0.c2)))AND(rt1.c2)))OR(((rt2.c0) NOT NULL))) ORDER BY (((((rt2.c6)<(rt0.c1)), ((rt2.c6) IS TRUE), (((rt0.c6))<>((rt2.c4)))))==(((((rt2.c5, rt0.c1, rt1.c0)) BETWEEN ((rt1.c5, rt1.c2, rt1.c4)) AND ((rt1.c1, rt1.c5, rt2.c3))), ((x'') NOT NULL), (((rt0.c4, rt0.c6, rt2.c2))>=((rt0.c6, rt2.c0, rt1.c5)))))), ((rt2.c6 COLLATE BINARY) ISNULL) ASC  NULLS FIRST, (NOT (((rt1.c0) BETWEEN (rt2.c0) AND (-1547072940))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) COLLATE BINARY FROM rt1; -- 0ms;
SELECT ALL (((rt0.c1 IN ()))==(TRIM(rt1.c2))), COUNT(*) FILTER(WHERE (((NOT (rt1.c4))) ISNULL)) OVER (), RTRIM(((((rt0.c0)AND(rt1.c4)))OR(rt2.c1))) FROM rt0, rt1 WHERE (CAST(LIKELY(0.9180094507958406) AS BLOB));SELECT DISTINCT NULL FROM rt0, rt1 WHERE (((((((1230757864) IS FALSE))OR(((x'') BETWEEN (NULL) AND (0.17663550674666173)))))OR((+ (x''))))); -- 0ms;
SELECT ALL ((((rt0.c2)*(rt1.c0))) NOT BETWEEN (TOTAL(rt2.c2)) AND ((((rt2.c1)) NOT BETWEEN ((rt2.c6)) AND ((rt2.c2))))) FROM rt1 WHERE ((NOT ((('mt* i.yHw') BETWEEN (NULL) AND ('Jb*&賄-')))));SELECT ALL x'' FROM rt2, rt0, rt1 WHERE (NULL) LIMIT -1032513426; -- 0ms;
SELECT DISTINCT ((((((rt2.c4)OR('-688752911')))OR(rt0.c3)))OR(rt1.c3 COLLATE RTRIM)), NULL, NTH_VALUE(CASE WHEN rt2.c6 COLLATE NOCASE THEN ((rt2.c5) NOTNULL) ELSE 0.47724162575432416 END, NULL) OVER () FROM rt2, rt0;SELECT ALL RANK() OVER () FROM rt2, rt0; -- 0ms;
SELECT DISTINCT NTH_VALUE(((((rt2.c6)%(rt2.c0))) BETWEEN (CAST(rt2.c1 AS NUMERIC)) AND (CAST(rt2.c4 AS REAL))), (((rt2.c1)) BETWEEN ((rt2.c4)) AND ((rt2.c1))) COLLATE NOCASE) OVER () FROM rt2; -- 1ms;
SELECT ((rt0.c2)!=(rt2.c2)) COLLATE NOCASE COLLATE BINARY, HEX(rt1.c2), MAX((((rt0.c5))<((NULL)))) FROM rt2, rt1 WHERE (0.7918064627596738);SELECT (((((rt2.c3 IN ()))OR(rt0.c5)))AND(((rt2.c0)OR(rt2.c6)))), ((((rt1.c1, x'', rt1.c0)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c4)) AND ((rt2.c5, rt2.c5, rt0.c4))) IN (((rt1.c1)=(rt2.c2)))), (((rt1.c5 IN (rt1.c1))) NOT NULL), (((rt0.c1)) NOT BETWEEN ((TRIM(DISTINCT rt1.c0, rt2.c4))) AND ((rt0.c2))), NULLIF(((rt0.c4)*(rt2.c2)), rt1.c2) FROM rt0, rt2 WHERE ((((('-13479412')AND(NULL))) IS FALSE));SELECT ((AVG(rt1.c0))GLOB(COUNT(*))) FROM rt1, rt2, rt0 WHERE (((LIKELIHOOD(NULL, 0.41140074548260896)) BETWEEN (CAST('' AS TEXT)) AND (CAST('B5c' AS BLOB)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt2.c6)+(rt1.c2))) FROM rt0, rt1, rt2 ORDER BY CAST((+ (rt0.c3)) AS INTEGER) ASC; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CAST(rt1.c3 AS TEXT), 0.16586503311249579), (- (GROUP_CONCAT(rt0.c5))), NULL FROM rt2, rt1;SELECT DISTINCT (((rt2.c3)) NOT BETWEEN ((((rt1.c1)<=(rt1.c1)))) AND ((((((rt0.c6)OR(rt0.c4)))AND(rt2.c6))))) FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT LIKELIHOOD((rt2.c1 IN ()), 0.48947807388707576), 'F-Rn?A', CASE WHEN ROUND(rt2.c1, rt0.c2) THEN ((rt2.c6)&(rt0.c6)) END FROM rt1, rt2, rt0; -- 0ms;
SELECT (~ ((((rt2.c4, rt1.c3, rt0.c2))>=((rt2.c5, NULL, rt2.c3))))) FROM rt1 WHERE ((((((((x'')) BETWEEN (('4V\r,meM[h')) AND ((x'f2e4'))))OR(((x'') NOTNULL))))OR(((0X5c9811c7)==('-1067469652')))));SELECT CASE WHEN ((rt2.c1) BETWEEN (rt2.c5) AND (rt1.c5)) THEN (((rt1.c5)) NOT BETWEEN ((0.3708070045489479)) AND ((rt0.c2))) WHEN TYPEOF(rt1.c1) THEN rt2.c2 COLLATE NOCASE WHEN (~ (rt0.c6)) THEN rt1.c2 COLLATE NOCASE END FROM rt2, rt1, rt0; -- 1ms;
SELECT DISTINCT (~ (CASE WHEN rt2.c0 THEN rt1.c2 END)), AVG((~ (rt2.c4))) COLLATE BINARY, ((CASE rt1.c5  WHEN rt0.c4 THEN rt1.c3 END)|(((rt0.c2) IS TRUE))) FROM rt0 WHERE ((((((((((((((~ (NULL)))AND((('1719880164') NOTNULL))))OR(((NULL)>('-408614417')))))OR((+ ('')))))AND(((('', '0.5789333336872318', NULL)) BETWEEN ((-1172333304, x'', '')) AND ((NULL, '899371656', NULL))))))OR(((('264777824')) BETWEEN ((x'')) AND (('0K'))))))OR('-688359262' COLLATE RTRIM)));SELECT ALL ((((rt1.c2)-(rt0.c5))) NOT BETWEEN (CASE WHEN rt0.c5 THEN x'' ELSE rt1.c2 END) AND (((rt1.c2)-(rt0.c6)))) FROM rt2;SELECT DISTINCT ((rt1.c4 COLLATE NOCASE)||((rt1.c5 IN ()))) FROM rt0, rt2 INNER JOIN rt1 ON (((rt0.c2)) BETWEEN ((((rt0.c5) NOT BETWEEN (rt2.c3) AND (x'd80c')))) AND (((rt1.c4 IN (rt0.c0))))) GROUP BY ((rt2.c6) ISNULL) COLLATE RTRIM; -- 0ms;
SELECT ((((((((((rt0.c6)OR(rt0.c6)))AND(x'')))AND(rt0.c2)))AND('-1862635088')))IS(rt1.c4)) FROM rt0, rt2 WHERE ((((('-2094025986' IN ())))<>((CASE '-1400829059'  WHEN -2090819936 THEN x'e641faf5' ELSE ']0' END))));SELECT ALL 0.780754515270158 FROM rt1, rt0, rt2 WHERE (((-1746384882)>>(LIKELY(DISTINCT NULL)))); -- 0ms;
SELECT LAST_VALUE(TRIM(DISTINCT ((rt1.c4)<<(rt0.c3)), 'ε覧3&X8')) OVER ( ROWS CAST('2129156960' AS INTEGER) PRECEDING) FROM rt1, rt0; -- 1ms;
SELECT ALL -542120268 FROM rt2, rt1 LIMIT -1551130304; -- 0ms;
SELECT DISTINCT (((('-497970828')LIKE(rt1.c4))) NOTNULL) FROM rt1, rt0, rt2; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt2.c4)) AND ((((rt2.c3) NOT BETWEEN (rt2.c4) AND (rt2.c3))))) FROM rt1 ORDER BY CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN '449656103' WHEN ((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c5)) THEN x'' WHEN CAST(0.46400801614464693 AS TEXT) THEN ((rt0.c5) BETWEEN (rt1.c5) AND (NULL)) END;SELECT DISTINCT ((((rt0.c4 IN (rt1.c1)), MAX(rt0.c1), ((((rt1.c4)OR(rt2.c3)))AND(rt0.c6))))>(((NOT ('')), ((NULL)%(rt1.c1)), ((rt1.c4) IS FALSE)))) FROM rt1 WHERE ((NOT ((('I7m') BETWEEN ('''Bz)ZPl') AND (0xffffffffd23bc1c8))))) ORDER BY (rtreenode(NULL, rt2.c0) IN ())  NULLS LAST;SELECT ALL COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING) FROM rt2 WHERE ((~ (CASE WHEN 'k#' THEN NULL END))) GROUP BY CASE WHEN (rt0.c1 IN ()) THEN ((rt2.c6)/(rt0.c5)) ELSE CASE WHEN rt2.c5 THEN rt1.c0 END END, ((((rt0.c6)IS(rt0.c3)))|(0.7733570160081459)), CASE WHEN (rt2.c6 IN ()) THEN ((rt0.c1)<<(rt2.c2)) ELSE LOWER(rt0.c5) END HAVING (NOT (rt2.c1)) COLLATE RTRIM;SELECT DISTINCT NULL FROM rt1 WHERE (COALESCE((((((((('~R&bG')OR(x'93c2')))AND(0x638da5b1)))AND(546985872)))OR(x'')), ((((((((0x17891722)OR(0.266405479837888)))OR(NULL)))AND(x'82de')))AND(x'')))); -- 1ms;
SELECT ALL rt0.c1 FROM rt1, rt2;SELECT ALL ((((((((((rt0.c4)OR(')8')))OR(NULL)))OR(rt0.c0)))OR(rt2.c0))) BETWEEN ((rt0.c2 IN ())) AND (((rt2.c6) ISNULL))) FROM rt2, rt1, rt0 WHERE (CASE (-4.97970828E8 IN (NULL, 0.7213565999405835))  WHEN CAST(493646214 AS BLOB) THEN ((232658471)<(x'')) END); -- 0ms;
SELECT rt2.c3 FROM rt1, rt0, rt2; -- 0ms;
SELECT ALL ((MIN(rt2.c1)) ISNULL) FROM rt2 WHERE (CAST(((1.947449603E9)||(NULL)) AS REAL)); -- 0ms;
SELECT ALL CAST((rt2.c6 IN ()) AS INTEGER) FROM rt0, rt1, rt2 LIMIT 0 OFFSET -460427380; -- 0ms;
SELECT CAST(SQLITE_SOURCE_ID() AS REAL) FROM rt2; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG(0X7de119be)) FROM rt2, rt1;SELECT (((- (rt1.c3)))<((rt0.c5 IN (rt1.c5, '-1400829059')))), rt1.c1 COLLATE NOCASE, (((rt2.c4)) BETWEEN ((rt0.c3)) AND ((0.08361211872377916))) COLLATE NOCASE FROM rt2, rt0 GROUP BY x'';SELECT (COUNT(*) IN ()), ((CAST(rt1.c1 AS REAL))>=(((rt2.c6) BETWEEN ('') AND (rt0.c5)))), (((rt0.c6)) BETWEEN ((((rt0.c5)GLOB(rt0.c4)))) AND (((((0.6564786656975078))<>((rt2.c5)))))), (((rt2.c4)) BETWEEN ((((0Xe669016)/(0.5609915070384512)))) AND (((NOT (rt1.c3))))), (((rt0.c2 IN ())) BETWEEN ((+ (rt1.c0))) AND (rt0.c3)) FROM rt1 WHERE ('468555560') LIMIT 1156412635 OFFSET -177405930;SELECT (((((rt1.c3, rt2.c1, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, rt1.c4)) AND ((rt1.c1, rt0.c4, rt2.c4))))==(((rt2.c6) NOT BETWEEN (rt2.c1) AND (rt2.c1)))) FROM rt2, rt0, rt1; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((((NOT ('-1019874140')))AND(CAST(x'' AS INTEGER))))AND(CAST('' AS NUMERIC)))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (CASE rt2.c3  WHEN rt1.c4 THEN rt1.c0 END)) FROM rt0, rt1, rt2 LIMIT 636796904; -- 1ms;
SELECT ALL (((('i]')|(rt2.c6)))>=(((rt2.c6) BETWEEN (rt1.c1) AND (rt2.c1)))) FROM rt2, rt1, rt0 WHERE ((((-471749504 IN (x'', '-1142385719')))>((NULL IN (NULL))))); -- 0ms;
SELECT DISTINCT ((- (rt2.c4)) IN ()) FROM rt0, rt2, rt1 WHERE (CASE WHEN (('1802433157') IS FALSE) THEN ((('-416823152', 1.626213455E9, x''))!=((NULL, 0.48448993797844087, NULL))) END); -- 0ms;
SELECT DISTINCT (((((rt2.c4)<>(rt2.c6)), ((((((((rt1.c4)AND(rt0.c5)))OR(rt0.c5)))OR(rt0.c6)))OR(rt0.c1)), 0.33050826402736566))<=((rt0.c6, ((x'') NOT BETWEEN (rt1.c5) AND (rt0.c6)), (rt1.c5 IN ())))), ROW_NUMBER() OVER (), MIN(((((rt2.c2)OR(NULL)))AND(rt1.c3))) FROM rt0 WHERE (((((((NULL)OR(0x971f691)))OR('3⛢gI'))) NOT NULL));SELECT DISTINCT (~ (rt2.c1 COLLATE BINARY)) FROM rt0;SELECT ((((((rt2.c5) NOT BETWEEN (rt0.c2) AND (rt1.c1)))OR(CASE WHEN rt1.c0 THEN rt2.c2 WHEN rt1.c4 THEN rt1.c2 WHEN rt2.c1 THEN '' END)))AND((('339703367') IS FALSE))) FROM rt0, rt1 WHERE (((('-251698082')LIKE(x'1b55')) IN ())) GROUP BY ((x'' IN (rt0.c2)) IN ());SELECT DISTINCT MIN(UNICODE(rt2.c4)), NULL, AVG((((rt2.c2, rt2.c4, rt0.c0))>((rt2.c1, rt1.c4, rt1.c5)))) OVER (), (- (((rt1.c2)<<(rt1.c3)))), (((rt1.c5, rt2.c0, ((((rt0.c6)OR(rt2.c4)))OR(rt2.c3))))=((json_array(rt1.c0, rt2.c6), GLOB(rt0.c5, rt1.c0), ((1086173461)>(rt0.c4))))) FROM rt0 WHERE (((0.4774686611948268)<(0xfffffffff84c23a8)));SELECT DISTINCT CUME_DIST() OVER () FROM rt0; -- 1ms;
SELECT ((((GLOB(rt0.c4, rt2.c3))AND(((rt0.c4) BETWEEN (rt2.c4) AND (rt2.c3)))))AND(NULL)) FROM rt1, rt2, rt0; -- 0ms;
SELECT ALL ((json_insert(rt0.c1, rt2.c5, rt2.c6))IS(IFNULL(rt1.c2, rt2.c6))), ABS((- (rt0.c4))), CAST(1.086173461E9 AS BLOB), (('yrg!%?')IS NOT(SUM(rt0.c2))), rt1.c2 FROM rt0 WHERE (CAST(CASE WHEN '-51177669' THEN NULL ELSE NULL END AS BLOB));SELECT (((rt0.c5, rt0.c5, rt1.c1)) BETWEEN ((((rt1.c1)=(rt2.c6)), ((((rt1.c0)AND('1873284953')))AND(rt0.c5)), ((x'e43d') NOT BETWEEN (rt2.c1) AND (rt2.c3)))) AND ((((((((((rt1.c4)AND(NULL)))OR(rt2.c1)))AND(rt1.c3)))AND(rt2.c5)), AVG(rt1.c2), CAST(rt2.c4 AS BLOB)))), CAST((~ (rt0.c3)) AS NUMERIC), CAST(MAX(rt1.c1) AS NUMERIC) FROM rt0, rt2;SELECT DISTINCT LAG(rt0.c3, rt0.c1, CASE json_valid(NULL)  WHEN PRINTF(rt0.c1) THEN ((((rt1.c5)AND(rt1.c0)))OR(rt0.c2)) ELSE ((rt1.c2) NOT NULL) END) OVER (), ((('-497970828' IN ()))<>(((((((((rt0.c2)AND(rt1.c1)))OR(rt0.c5)))AND(rt1.c5)))OR(rt2.c6)))), CAST(MIN(rt0.c5) AS REAL) FROM rt1, rt0;SELECT ALL LEAD((((((~ (rt1.c1)))AND(((((((((NULL)OR(rt1.c3)))OR(rt1.c3)))OR(x'')))OR(NULL)))))OR(rt1.c4)), CASE ((rt1.c2) IS FALSE)  WHEN CASE WHEN rt1.c0 THEN rt1.c0 WHEN rt1.c0 THEN NULL WHEN rt1.c0 THEN rt1.c0 ELSE rt1.c5 END THEN ((-2.51698082E8)!=(rt1.c3)) WHEN rt1.c0 THEN (- (rt1.c3)) WHEN rt1.c2 THEN CASE WHEN rt1.c3 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c4 WHEN rt1.c5 THEN rt1.c3 END END, (((NOT (rt1.c5))) ISNULL)) OVER () FROM rt1 GROUP BY (((rt2.c1)) NOT BETWEEN ((((((rt2.c5)AND('-883134307')))AND(rt2.c0)))) AND ((CASE '9HιjdP'  WHEN rt1.c2 THEN rt0.c6 ELSE rt0.c1 END)));SELECT (((rt0.c4)) BETWEEN ((((rt0.c6) BETWEEN (rt1.c5) AND (rt1.c5)))) AND (((NOT (rt1.c2))))), CASE COALESCE(rt0.c3, rt0.c2, rt2.c0, rt0.c0)  WHEN CAST(rt0.c1 AS NUMERIC) THEN (rt0.c4 IN (rt2.c5, rt0.c2)) END, COUNT(*), (((((rt2.c1, rt0.c0, rt1.c4)) NOT BETWEEN ((rt1.c0, rt1.c1, NULL)) AND ((rt0.c6, rt2.c4, rt2.c0))))<=(0.8073180196504446)), (((~ (rt0.c6))) NOT BETWEEN ((rt0.c6 IN (rt0.c4))) AND (((rt2.c1) IS FALSE))) FROM rt1, rt0 WHERE ((NULL IN ()) COLLATE RTRIM) LIMIT 991014593 OFFSET -358230338;SELECT ALL (((((rt0.c3)*(rt1.c0))))<=((rt0.c3))) FROM rt2, rt1, rt0 WHERE (0.8585373422874265); -- 1ms;
SELECT ((rt0.c6)%(rt1.c2)) COLLATE BINARY, (((((rt2.c6)) BETWEEN (('%Hnow')) AND ((rt0.c5)))) NOT BETWEEN (((((rt1.c3)OR(rt2.c1)))OR(rt0.c5))) AND (STRFTIME(rt2.c5, rt2.c5, rt0.c6))), UPPER(DISTINCT CAST(rt0.c2 AS TEXT)), ((TOTAL(rt2.c4))-(COUNT(*))), ((((((rt0.c2)AND(rt0.c0)))AND(rt2.c1)))*(((rt1.c0) BETWEEN (rt0.c5) AND (rt1.c5)))) FROM rt0, rt2, rt1; -- 0ms;
SELECT ((rt1.c2) BETWEEN (rt0.c4) AND (rt2.c0)) COLLATE RTRIM COLLATE BINARY FROM rt1 WHERE (x'7366');SELECT DISTINCT 0.26334770252854034, (CASE WHEN rt0.c4 THEN rt1.c3 ELSE rt1.c1 END IN ()), (- (rt0.c5)) COLLATE NOCASE FROM rt2 GROUP BY rt0.c1 HAVING (NOT ('1554533385'));SELECT DISTINCT (('-1170238220') NOT NULL) FROM rt2, rt0, rt1 WHERE ('F)xE'); -- 0ms;
SELECT ALL ((((rt2.c2)IS NOT(rt1.c0))) NOT BETWEEN (((NULL)*(rt2.c1))) AND (((rt0.c1)GLOB(rt1.c4)))), MIN((- (rt2.c2))), NTILE((((rt2.c4)) BETWEEN ((CASE rt2.c4  WHEN rt2.c0 THEN rt2.c5 ELSE rt2.c2 END)) AND ((CASE WHEN rt2.c2 THEN rt2.c5 WHEN rt2.c5 THEN rt2.c2 WHEN rt2.c3 THEN rt2.c4 END)))) OVER () FROM rt2;SELECT ((((SUM(rt1.c3))OR((((rt1.c0))!=((x''))))))OR((rt2.c5 IN ()))), ((((((rt1.c5)AND(rt1.c4)))AND(rt1.c0)))|(COUNT(*))), CAST(CASE rt2.c5  WHEN rt0.c5 THEN 0Xffffffffe2628ea5 ELSE rt2.c5 END AS REAL) FROM rt0 WHERE ((((CAST(x'ef68' AS REAL), CAST('()' AS INTEGER), ((((x'f102c875')OR('')))OR(1.7976931348623157E308))))=(((~ (x'')), x'', CAST(NULL AS INTEGER)))));SELECT DISTINCT ((((TOTAL(rt0.c0))OR(rt2.c3)))AND(SUM(rt2.c2))) FROM rt0 WHERE (((((((((((0Xffffffffe1720d2e)IS NOT(0.9230019131845985)))OR((('1447984034')IS(x'')))))OR((0.4147212359564463 IN ()))))AND((+ ('')))))OR(NULL)));SELECT DISTINCT ((((HEX(rt1.c0))OR(CAST(rt2.c4 AS BLOB))))AND(0.9801571706075134)), (x'' IN (x'')), (((((rt2.c0)) NOT BETWEEN ((rt2.c4)) AND ((rt1.c0)))) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((rt1.c1)<<(rt2.c5)))) FROM rt0, rt1 WHERE (((((NULL) NOT NULL)) NOT BETWEEN (((0.8978908642415643)%('u&'))) AND (CAST(NULL AS REAL)))) ORDER BY ((((((((((rt2.c4)AND(rt2.c6)))AND(rt0.c3)))AND(rt2.c2)))OR(rt2.c4))) NOT NULL);SELECT DISTINCT 0.061854284396596904, TRIM(DISTINCT rt2.c2 COLLATE NOCASE, rt2.c1), ((((((rt1.c1)OR(rt2.c5)))AND(rt2.c5))) NOT BETWEEN (((rt0.c5)>=(x'8ba9'))) AND ((~ (rt1.c0)))) FROM rt2, rt0, rt1 WHERE (((x'f7d8' COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((rt0.c3)) BETWEEN ((rt1.c0)) AND ((rt0.c4))))IS('2052313503')) FROM rt1, rt0 WHERE (((+ ('1554533385')) IN (0.5008504921125608 COLLATE NOCASE))); -- 0ms;
SELECT (((- (rt1.c5))) BETWEEN (rt1.c5 COLLATE NOCASE) AND (rt0.c2 COLLATE NOCASE)) FROM rt2, rt0 WHERE (((((((-452165731)-(-1773764170)))AND(((((NULL)AND(x'')))AND(0.22612218070125378)))))AND((((x''))<=((NULL)))))) GROUP BY ((rt0.c2)>>(rt1.c4)) COLLATE NOCASE HAVING ((((rt2.c1)LIKE(rt1.c1)))|(CASE WHEN 0.9103267397844581 THEN rt0.c2 ELSE rt1.c5 END));SELECT ALL (((((NULL)) BETWEEN ((rt2.c0)) AND ((rt0.c2))))IS NOT('1430519821')) FROM rt0;SELECT DISTINCT ROW_NUMBER() OVER (), GROUP_CONCAT(((((0Xffffffff884b5999)OR(rt0.c1)))OR(rt0.c1))) OVER (), rt1.c0 FROM rt2;SELECT ALL ((MAX(rt0.c5, rt2.c1, rt0.c0, rt2.c1)) NOT BETWEEN ((((0.8749595684150546)) BETWEEN ((rt2.c2)) AND ((rt2.c3)))) AND ((~ (rt0.c5)))), rt0.c1, COALESCE(PRINTF(rt2.c6), ((((rt1.c4)OR(rt0.c6)))AND(rt1.c4))), (((+ (rt0.c0))) BETWEEN (((rt1.c0) BETWEEN (NULL) AND (rt2.c4))) AND (CAST(rt0.c4 AS TEXT))), PERCENT_RANK() OVER () FROM rt0, rt2, rt1; -- 0ms;
SELECT DISTINCT MAX(((((rt2.c6)AND(rt2.c1)))OR('Xri隄!?P'))) FROM rt0, rt2, rt1 WHERE (CAST(((((0xffffffffeef12e2e)OR(0.7171951664046794)))AND(NULL)) AS NUMERIC)); -- 0ms;
SELECT ALL RANK() OVER (), CUME_DIST() OVER (), ((CASE rt2.c2  WHEN rt1.c5 THEN rt0.c0 ELSE rt2.c4 END) ISNULL) FROM rt1;SELECT DISTINCT ((((rt1.c5)<(rt1.c0)))==(LIKELIHOOD(rt0.c2, 0.03478557406155425))), (~ (CASE WHEN rt1.c2 THEN NULL WHEN rt1.c5 THEN rt0.c4 WHEN rt1.c2 THEN rt0.c4 ELSE rt1.c3 END)), SUBSTR(((rt1.c1)AND(rt0.c5)), COUNT(*)) FROM rt2, rt1 WHERE (CAST(('0.8773814383248139' IN ()) AS BLOB)) LIMIT -353021104 OFFSET 335330736;SELECT DISTINCT (('1372427981') IS TRUE) FROM rt0, rt2 GROUP BY (((rt1.c0) IS FALSE) IN ()), LOWER(((((NULL)OR(rt0.c5)))AND(rt1.c3))), (- ((((rt2.c1)) NOT BETWEEN ((rt1.c0)) AND ((rt0.c3)))));SELECT DISTINCT ((((((((((rt1.c4)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c1)))OR(rt1.c5)))LIKE(rt2.c2 COLLATE BINARY)) FROM rt0, rt1;SELECT DISTINCT CAST((- (rt2.c6)) AS TEXT) FROM rt0, rt2, rt1 WHERE (((((((NULL)AND(NULL)))OR(0.8486173658384838))) BETWEEN (NULL COLLATE NOCASE) AND (CASE 0.8590494711230049  WHEN '%V>䉆3CgR' THEN NULL ELSE '-1324941106' END))); -- 0ms;
SELECT ((CAST(rt2.c4 AS NUMERIC))<=((NOT (rt0.c0)))) FROM rt2, rt1, rt0; -- 0ms;
SELECT ALL (((- (rt0.c4)))|(0.4800741614415268)) FROM rt2, rt0, rt1 WHERE (((((x'')OR((((0.688610881236808))>((0.49176993233540633))))))AND((+ (0.8277793653216117))))) GROUP BY CAST(((NULL) NOT BETWEEN (rt1.c2) AND (rt1.c4)) AS BLOB); -- 0ms;
SELECT DISTINCT ((rt1.c2 COLLATE NOCASE)AND(json_object(rt0.c0, rt2.c6))) FROM rt2, rt1, rt0 ORDER BY (~ (((rt0.c0)>>(rt1.c0)))); -- 1ms;
SELECT (((((rt0.c4) BETWEEN (rt2.c2) AND (rt2.c6))))=((rt2.c0))) FROM rt1 WHERE ((~ (CAST(0.46089969984552037 AS NUMERIC))));SELECT 'G.<㴜cZg', SUM(((((rt2.c4)AND('ⵂM')))OR(rt2.c4))) OVER (), COUNT(*), (((NOT (rt2.c6))) NOTNULL), ((((((((NULL)AND((((rt1.c5)) BETWEEN ((rt0.c1)) AND ((rt1.c2))))))AND(((((rt2.c2)AND(rt1.c4)))AND(NULL)))))AND(((rt2.c0)<(rt0.c1)))))OR(COUNT(rt1.c5))), ((rt1.c0)<=((rt1.c2 IN ()))), ((GLOB(rt1.c4, rt2.c4)) BETWEEN (rt2.c1) AND (CASE WHEN rt2.c4 THEN rt0.c6 ELSE rt2.c1 END)) FROM rt2, rt0 WHERE (CASE ((x'')>=(NULL))  WHEN ((((x'')AND(NULL)))AND(NULL)) THEN (0.12890081305764567 IN (x'')) ELSE (((x'')) BETWEEN (('-1697818691')) AND ((x'6206'))) END) UNION ALL SELECT CASE WHEN ((rt1.c2) NOTNULL) THEN json_quote(rt0.c1) WHEN NULL THEN (NOT (rt1.c3)) WHEN (((rt2.c6, rt0.c4, rt1.c2, rt1.c3, rt2.c0)) BETWEEN ((rt2.c2, 0.7595398266209585, rt1.c4, rt0.c3, rt0.c1)) AND ((rt0.c1, rt0.c1, rt0.c1, rt0.c3, rt2.c5))) THEN ((rt0.c5)=(rt0.c5)) ELSE ((rt1.c3)<=(rt1.c4)) END, ((((((rt1.c1)OR(rt0.c3)))OR(rt0.c0))) NOT BETWEEN (0.933652250984946) AND ('''綠pu7x&&')), ((COUNT(rt1.c2)) IS TRUE), '1829672570', '-2068314784', DENSE_RANK() OVER (), CAST(AVG(rt1.c1) AS TEXT) FROM rt1, rt0, rt2 WHERE (((((((']u')OR(0.638510414046789)))OR('129964489')))*((+ (1.554533385E9))))) LIMIT 108435283;SELECT ((((rt1.c0)>>(rt2.c0)))-(((rt0.c4) IS TRUE))), rt1.c5, (NOT ((NOT (rt0.c5)))) FROM rt1, rt0 WHERE (((((0.1382829644465915)=(0.5457992025914252)))<>(((x'') NOT BETWEEN (0.24792430515958452) AND (x'')))));SELECT ALL ((GROUP_CONCAT(rt0.c0))>>((((rt2.c5))>=((rt2.c4))))) FROM rt2, rt1, rt0; -- 0ms;
SELECT rt1.c0 FROM rt1 LIMIT 1263216610; -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c3))<<((~ (rt1.c0)))), ((((((((((rt2.c3)OR(rt1.c4)))AND(rt2.c4)))AND(rt1.c1)))AND(rt1.c2)))IS(rt2.c0 COLLATE BINARY)), (((rt2.c6 IN (rt2.c1))) NOT NULL) FROM rt2, rt0 WHERE ((- (((((1719880164)AND(-1.740919292E9)))OR(''))))) LIMIT 1066817896 OFFSET 581145986;SELECT ALL (NULL IN (((rt0.c3) ISNULL), rt0.c5)), (((((rt1.c3 IN ()))AND(CAST(rt0.c5 AS INTEGER))))OR(((rt0.c0)+(rt0.c3)))), (((CASE WHEN rt1.c2 THEN rt2.c0 ELSE rt1.c1 END))<(((rt2.c0 IN ())))) FROM rt2, rt0, rt1 WHERE (((((NULL, NULL, x'')) NOT BETWEEN (('1719880164', 0xffffffff826a4de7, x'6c97e8c2')) AND (('-13479412', '0.6539351760285407', 0.2648025701101232))) IN ())); -- 0ms;
SELECT COUNT(CAST(rt2.c4 AS REAL)) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 WHERE (CASE WHEN ((NULL)LIKE('TRUE')) THEN (+ (0xffffffffea21adc0)) END);SELECT DISTINCT ((rt0.c4)/((+ (rt0.c3)))) FROM rt0, rt2 ORDER BY (((((rt1.c2))>((rt2.c5))))<<(rt1.c3)) DESC  NULLS FIRST;SELECT DISTINCT TYPEOF(0.6020051865462562) FROM rt2, rt0, rt1 WHERE ((((0.6632055690018593) IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN SUM(rt2.c2) THEN (~ (rt2.c3)) ELSE ((rt1.c0) NOT NULL) END FROM rt2;