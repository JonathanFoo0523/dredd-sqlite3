-- Time: 2024/06/07 06:35:11
-- Database: database15
-- Database version: 3.40.0
-- seed value: 4294869515
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
PRAGMA encoding = 'UTF-16'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 8ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0 UNINDEXED, tokenize = "ascii"); -- 1ms;
ANALYZE sqlite_master; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 7); -- 1ms;
PRAGMA main.mmap_size = 4835522715595007461; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO rt0(c1, c0) VALUES ('-1329255573', x''); -- 0ms;
INSERT INTO vt1(vt1) VALUES('merge=392039329,2');\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
PRAGMA main.ignore_check_constraints = false; -- 0ms;
UPDATE vt1 SET c0='392039329', c0='1211528488'; -- 0ms;
DROP TABLE vt1; -- 5ms;
BEGIN EXCLUSIVE TRANSACTION; -- 2ms;
PRAGMA temp.shrink_memory; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=-372316986; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
PRAGMA main.mmap_size; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.threads = 7522361231332039797; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
PRAGMA main.application_id; -- 0ms;
CREATE VIEW v0(c0) AS SELECT ALL FIRST_VALUE(NULL) OVER () FROM rt0 WHERE ((+ (((x'') NOT BETWEEN (NULL) AND (828092327))))); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA application_id; -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
VACUUM; -- 1ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('v0', 'v0', ' noskipscan'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR REPLACE INTO rt0 VALUES (0.8822762117485585, NULL, x''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA stats; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
DELETE FROM rt0; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c0) VALUES ('-698370038', ''), (x'10d3', 0.8822762117485585), (x'd06f', '1054391274'); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (NULL); -- 0ms;
PRAGMA recursive_triggers = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CAST(CAST(rt0.c1 AS BLOB) AS BLOB), CASE WHEN CAST(v0.c0 AS INTEGER) THEN ((rt0.c2) IS FALSE) END, CASE WHEN AVG(rt0.c0) THEN ((v0.c0) NOT BETWEEN (rt0.c0) AND ('-1516844141')) ELSE ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END FROM rt0, v0 WHERE (((CAST(x'b387' AS INTEGER))!=(((('1211528488')) NOT BETWEEN ((NULL)) AND (('')))))) GROUP BY (LOWER(rt0.c0) IN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c1)))) HAVING TRIM(DISTINCT NULL); -- 1ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY (((rt0.c2 COLLATE BINARY, CASE WHEN v0.c0 THEN NULL ELSE rt0.c0 END, ((v0.c0) NOT NULL)))<=(((+ (rt0.c1)), CAST(rt0.c2 AS NUMERIC), CAST(rt0.c2 AS NUMERIC)))) DESC  NULLS LAST, ((((rt0.c0) ISNULL))%(((rt0.c2)*(rt0.c1)))) ASC  NULLS FIRST), NTH_VALUE(CASE WHEN v0.c0 THEN NULL ELSE v0.c0 END, ((TRIM(v0.c0))LIKE(json_insert(v0.c0, -1329255573, v0.c0, v0.c0, 0.4191690641533833)))) OVER (), (CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 END IN ()) FROM v0 WHERE (((((0.4191690641533833 COLLATE NOCASE)OR(((-6.98370038E8) NOT BETWEEN (0X175e0ba1) AND (x'fd29')))))OR(((((((((NULL)AND('')))AND(0Xffffffffa596cb93)))OR(0.8105475209018559)))AND(NULL)))));SELECT ALL rtreenode(828092327, (((rt0.c0)) NOT BETWEEN ((v0.c0)) AND (('0.8105475209018559')))), CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM, ((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c0 END) NOT BETWEEN (v0.c0) AND ('Ip')) FROM rt0, v0; -- 0ms;
SELECT DISTINCT x'' FROM v0 INNER JOIN rt0 ON CAST((((rt0.c2, rt0.c0, rt0.c0))>=((v0.c0, rt0.c0, rt0.c0))) AS REAL) ORDER BY ((x'')&(((v0.c0)&(v0.c0)))), ((((rt0.c2)AND(rt0.c0)))OR(v0.c0)) COLLATE RTRIM, (((rt0.c2)/(rt0.c1)) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM rt0, v0 WHERE (((((x'4080')<=('-1516844141'))) NOT NULL)) GROUP BY ((((rt0.c2) NOT NULL)) BETWEEN (v0.c0) AND ((v0.c0 IN ()))) HAVING (- (NULL)) LIMIT -1808529653 OFFSET 837096804; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)GLOB(CAST(1.054391274E9 AS REAL))), CAST(((((((((rt0.c2)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)) AS REAL), CUME_DIST() OVER () FROM v0, rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE BINARY AS REAL) FROM rt0, v0 GROUP BY ((((((rt0.c0)IS NOT(rt0.c1)))AND(((rt0.c1) IS TRUE))))AND(((rt0.c2) IS FALSE))), ((((rt0.c1)*(rt0.c1)))-(rt0.c2)), ((rt0.c2 COLLATE RTRIM)-(rt0.c1)); -- 0ms;
SELECT ALL (((rt0.c2, rt0.c0, v0.c0))<((rt0.c0, rt0.c1, rt0.c0))) COLLATE BINARY FROM v0;SELECT DISTINCT ((((v0.c0)/(rt0.c1)))!=(((rt0.c1)OR(rt0.c2)))), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (((rt0.c2)GLOB(rt0.c1)))), TOTAL(((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)) COLLATE BINARY) FILTER(WHERE (((((rt0.c1))<=((v0.c0)))) NOTNULL)) OVER () FROM rt0 WHERE ((((((-698370038, x'', -6.98370038E8))=((NULL, '-1329255573', NULL)))) NOT BETWEEN (CAST(0.8105475209018559 AS REAL)) AND (((x'')%(''))))) LIMIT 1054391274 OFFSET 837237021;SELECT DISTINCT (~ (((rt0.c1)-(rt0.c1)))), COUNT(((0.6579116783984712)|(rt0.c1))), TRIM(DISTINCT NULL) FROM rt0 WHERE ((((((0.3781103927929389))>((x'9f10'))))IS('' COLLATE BINARY))); -- 1ms;
SELECT DISTINCT NTH_VALUE(rt0.c0, (NOT (rt0.c0)) COLLATE RTRIM) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((IFNULL('-524412654', rt0.c1))<=((x'' IN ()))), (~ (rt0.c2)) COLLATE NOCASE, TOTAL(rt0.c1 COLLATE RTRIM) OVER () FROM v0, rt0 WHERE (CAST((NULL IN ()) AS NUMERIC)); -- 0ms;
SELECT DISTINCT x'' COLLATE NOCASE COLLATE BINARY FROM v0; -- 0ms;
SELECT DISTINCT (((v0.c0)==(rt0.c2)) IN (x'')), ((((rt0.c0) IS TRUE))>=(0.27296033920960594)), ((((((rt0.c2)!=(rt0.c1)))OR((~ (v0.c0)))))OR(CAST(rt0.c2 AS NUMERIC))), SUM(CASE rt0.c2  WHEN 0.3781103927929389 THEN '1211528488' WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 ELSE rt0.c0 END), (((((x'462175e9')) BETWEEN ((v0.c0)) AND ((rt0.c1)))) NOT NULL) FROM rt0 WHERE (0xffffffffe9cee4c6);SELECT CAST(rt0.c2 COLLATE RTRIM AS NUMERIC) FROM v0, rt0 GROUP BY (+ (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))), ((((rt0.c0) IS TRUE))-(v0.c0)), ((((((((rt0.c2)AND(v0.c0)))AND(x'c7f2')))OR((('3t')*(rt0.c1)))))OR(ABS(rt0.c1))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((- (rt0.c0)))) AND ((v0.c0))), GROUP_CONCAT(x'') OVER ( ORDER BY CAST(CAST('' AS NUMERIC) AS TEXT) DESC  NULLS LAST), ((((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(((x'') NOTNULL))))OR(CASE -1672032640  WHEN rt0.c2 THEN v0.c0 END)) FROM v0;SELECT ((ROUND(rt0.c2, rt0.c1))GLOB((rt0.c0 IN ('837237021')))) FROM rt0, v0 WHERE (((((((((0.8805886215408757)AND(CAST(0.28413346024777564 AS TEXT))))OR((0.057195957922319574 IN ()))))OR(((0.10679647378744606)>>(0.5381253271498027)))))AND(((((NULL)AND('1054391274')))OR('-1516844141'))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))))<<(((((((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(v0.c0)))), TOTAL((v0.c0 IN ())), PERCENT_RANK() OVER () FROM v0 WHERE (((((x'7cc4') NOT NULL)) NOT BETWEEN (x'') AND (LTRIM(0.057195957922319574)))) ORDER BY NULL ASC  NULLS LAST LIMIT 1830889502 OFFSET 1054391274;SELECT CASE WHEN AVG(rt0.c2) THEN (~ (rt0.c0)) END FROM rt0; -- 0ms;
SELECT (((rt0.c0 IN ())) NOTNULL) FROM v0, rt0 WHERE (((0xffffffffe0be1912 COLLATE RTRIM)IS((~ ('''Ek'))))); -- 0ms;
SELECT ALL CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS REAL) FROM rt0 ORDER BY 0.8805886215408757, ((CAST(rt0.c2 AS TEXT)) NOT NULL) DESC  NULLS FIRST LIMIT -283921259 OFFSET 1979299085; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT COUNT(*)) FROM v0 LIMIT -1676867487 OFFSET 1; -- 0ms;
SELECT (- (MAX(v0.c0))), AVG(COUNT(*)), rt0.c1 FROM v0;SELECT MIN(((rt0.c1)=(rt0.c2))), CASE WHEN SUM(rt0.c2) THEN ((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)) WHEN '828092327' THEN UPPER(v0.c0) WHEN rt0.c2 THEN CASE WHEN rt0.c0 THEN rt0.c2 END ELSE (('') BETWEEN (rt0.c1) AND (v0.c0)) END, COUNT(*), ((((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))OR(v0.c0 COLLATE NOCASE)))OR(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN 0.8822762117485585 ELSE rt0.c1 END)), MIN(((rt0.c2) BETWEEN (v0.c0) AND (v0.c0))) COLLATE NOCASE FROM rt0 WHERE ((((((('392039329')OR(NULL)))AND(x'')))>(CAST(NULL AS NUMERIC))));SELECT DISTINCT (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN (0.6579116783984712)) FROM rt0, v0 WHERE ((((0.4947779796597854 IN (0.1573425710838522, -9223372036854775808))) NOT NULL)) GROUP BY (~ (((((((((v0.c0)OR(rt0.c1)))OR(v0.c0)))OR(rt0.c1)))OR(')2_>Im')))) HAVING ((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) COLLATE BINARY; -- 0ms;
SELECT AVG(((v0.c0)IS NOT(rt0.c0))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) IS TRUE) FROM v0 WHERE (((('' IN ()))%(x'2828')));SELECT ALL ((SQLITE_SOURCE_ID()) NOT NULL), (((v0.c0)) BETWEEN (((((v0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0))))) AND ((((((rt0.c1)AND(x'')))OR(v0.c0))))), CASE WHEN (NOT (rt0.c2)) THEN ((v0.c0)+(rt0.c1)) WHEN CASE WHEN x'' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 END THEN ((rt0.c1) IS TRUE) WHEN (rt0.c2 IN ()) THEN CAST(rt0.c1 AS NUMERIC) END FROM v0, rt0; -- 0ms;
SELECT ALL (((((rt0.c0) BETWEEN (rt0.c1) AND (v0.c0))))>((COUNT(v0.c0)))) FROM v0, rt0 WHERE (LIKELIHOOD(733729398, 0.3285010983965577)); -- 0ms;
SELECT (((v0.c0)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)) AND ((rt0.c0 COLLATE NOCASE))), GROUP_CONCAT(CAST(v0.c0 AS BLOB)), CASE HEX(DISTINCT NULL)  WHEN (((rt0.c0))<=((rt0.c0))) THEN CASE WHEN rt0.c0 THEN v0.c0 END END FROM rt0, v0 WHERE ((((((('餣[')LIKE(-5.24412654E8)))AND((8.28092327E8 IN ()))))AND(((-1.808529653E9) IS TRUE)))) ORDER BY ABS((~ (v0.c0))) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND ((((((x'')OR('-195345767')))OR(rt0.c2))))) FROM v0, rt0; -- 0ms;
SELECT ALL ((UNLIKELY(DISTINCT rt0.c1)) BETWEEN (((rt0.c1)-(rt0.c0))) AND ((~ (rt0.c1)))) FROM rt0, v0 WHERE ((+ ((((('')AND(8.37096804E8)))AND(NULL))))) GROUP BY (((rt0.c0)<=(v0.c0)) IN ()); -- 0ms;
SELECT DISTINCT CAST(v0.c0 AS BLOB), x'', ((x'') IS TRUE), (- (rt0.c1)) COLLATE RTRIM, json_remove(((((v0.c0)AND(v0.c0)))AND(v0.c0)), (((rt0.c0, rt0.c0, rt0.c2, NULL, x'')) BETWEEN ((rt0.c2, rt0.c1, NULL, rt0.c1, v0.c0)) AND ((rt0.c2, rt0.c1, rt0.c1, v0.c0, rt0.c2)))) FROM v0, rt0 WHERE (((CAST('1733588673' AS REAL)) IS FALSE)) LIMIT -524453343 OFFSET 1614183441; -- 1ms;
SELECT DISTINCT ((CASE v0.c0  WHEN v0.c0 THEN rt0.c2 END) NOTNULL) FROM v0, rt0; -- 0ms;
SELECT ALL ((('cp', (((rt0.c1, v0.c0, NULL))<=((rt0.c0, rt0.c1, rt0.c1))), ((((v0.c0)OR(rt0.c1)))OR(rt0.c2))))=(((+ (rt0.c2)), ((((((((((((rt0.c0)OR(x'')))AND(rt0.c2)))OR(NULL)))OR(-3.72316986E8)))OR(rt0.c0)))AND(rt0.c2)), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1))))) FROM v0 WHERE (((('')<=(x'aef3')) IN ('16'))) GROUP BY CAST(NULL AS BLOB), 1.614183441E9, CASE WHEN rt0.c2 THEN (('''Ek') NOT BETWEEN (rt0.c1) AND (rt0.c0)) ELSE (- (rt0.c2)) END;SELECT DISTINCT ((((((rt0.c2)AND(rt0.c1)))AND(v0.c0))) NOTNULL) FROM rt0, v0 ORDER BY ((((rt0.c1 COLLATE NOCASE)OR(TRIM(DISTINCT rt0.c2))))AND(v0.c0)) ASC; -- 0ms;
SELECT DISTINCT SUM(((((rt0.c2)AND(rt0.c2)))AND(rt0.c1))) OVER (), COUNT(((((rt0.c2)OR(v0.c0)))AND(NULL))), TOTAL(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(v0.c0)))AND(v0.c0))) FROM v0, rt0 WHERE ((NOT (0.02204288532477816 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS REAL) IN (CAST(rt0.c1 AS TEXT))), (((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))) COLLATE NOCASE, (CAST(rt0.c2 AS NUMERIC) IN ()) FROM v0, rt0 WHERE (((((NULL, 0Xffffffffc254c623, '624922969'))<>((0X315bafa7, ')2_>im', ''))) IN ())) LIMIT 136068518; -- 0ms;
SELECT TOTAL((rt0.c1 IN ())) FROM v0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) OVER ( PARTITION BY (((rt0.c0)) NOT BETWEEN ((v0.c0 COLLATE BINARY)) AND (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))))), ((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (CASE rt0.c0  WHEN rt0.c1 THEN v0.c0 END))) FROM rt0 WHERE ((+ (((9223372036854775807)&('917817985')))));SELECT DISTINCT ((((json_patch(v0.c0, v0.c0))AND((- (rt0.c1)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (v0.c0)))) FROM rt0;SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))) IS TRUE), AVG(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0))), ((((rt0.c2)<(v0.c0)))*(CAST(rt0.c2 AS INTEGER))) FROM rt0 WHERE (((((x''))==((0.8822762117485585))) IN ()));SELECT DISTINCT (NOT (LIKELIHOOD(rt0.c2, 0.39464615359829147))), (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((v0.c0))))!=(((rt0.c1)>=(v0.c0)))), HEX(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) FROM v0 LIMIT 1989708349 OFFSET 371781968;SELECT ALL ((((rt0.c1) NOT NULL)) NOT NULL) FROM rt0, v0; -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))OR(rt0.c2))  WHEN CASE rt0.c0  WHEN v0.c0 THEN x'' WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 ELSE v0.c0 END THEN ((rt0.c2)!=('')) END, CASE WHEN ((rt0.c2)>(rt0.c2)) THEN CAST(v0.c0 AS BLOB) ELSE ((rt0.c2)!=(rt0.c0)) END, ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (0.5769944584804728))) BETWEEN (LIKELIHOOD(DISTINCT rt0.c2, 0.06349872817149171)) AND (rt0.c2 COLLATE RTRIM)) FROM rt0;SELECT DISTINCT (((v0.c0 IN ()))IS('')) FROM v0 NATURAL JOIN rt0; -- 0ms;
SELECT ((((rt0.c1 COLLATE NOCASE)AND(((NULL) IS TRUE))))OR(1054391274)), (((NOT (rt0.c1))) ISNULL), (NOT ((~ (v0.c0)))), 0.16077511769800235, NULL FROM rt0;SELECT ALL CASE CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN '-2052923333' WHEN -5.24453343E8 THEN rt0.c2 ELSE rt0.c0 END  WHEN CAST(rt0.c1 AS REAL) THEN (rt0.c1 IN ()) END, ((((((((UNLIKELY(DISTINCT rt0.c0))OR((((rt0.c2))>=((rt0.c2))))))OR('3(7+')))OR(NULL COLLATE BINARY)))OR(((0.617492773366032)>>(rt0.c0)))), ((rt0.c2) BETWEEN (SUM(rt0.c0)) AND (CASE WHEN v0.c0 THEN x'' END)) FROM v0, rt0; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT ((NULL)-(rt0.c2)), 0.5828204993726996), MIN(NULL), CAST(((x'')IS(rt0.c0)) AS NUMERIC), CAST(rt0.c1 COLLATE NOCASE AS REAL), FIRST_VALUE(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE NOCASE COLLATE NOCASE) OVER ( ORDER BY (((rt0.c2) IS FALSE) IN ()) ASC, CHANGES() ASC  NULLS LAST, 'S' ASC  NULLS FIRST, CASE rt0.c0 COLLATE BINARY  WHEN CAST(rt0.c1 AS NUMERIC) THEN (((rt0.c0))==((rt0.c1))) WHEN ((v0.c0)<(rt0.c2)) THEN (rt0.c2 IN (rt0.c2)) WHEN v0.c0 COLLATE BINARY THEN ((((v0.c0)AND(rt0.c1)))AND(-1.7976931348623157E308)) ELSE (((rt0.c2, v0.c0, rt0.c0)) BETWEEN ((rt0.c1, rt0.c2, v0.c0)) AND ((v0.c0, rt0.c0, v0.c0))) END), ((CASE WHEN v0.c0 THEN v0.c0 ELSE NULL END)>=(rt0.c0 COLLATE NOCASE)), ((CAST(rt0.c2 AS REAL)) NOT BETWEEN ((v0.c0 IN ())) AND (TYPEOF(DISTINCT rt0.c0))) FROM rt0, v0 WHERE ((('1989708349')||(CASE WHEN x'' THEN '-524412654' ELSE 0.19659493300462882 END))) GROUP BY ((((8.37096804E8) NOTNULL))|(CAST(v0.c0 AS INTEGER))), ((CASE rt0.c1  WHEN v0.c0 THEN rt0.c2 ELSE v0.c0 END) NOT BETWEEN (((((rt0.c0)OR(rt0.c2)))AND(rt0.c2))) AND (v0.c0 COLLATE BINARY)), ((rt0.c2 IN (rt0.c0)) IN (v0.c0)) HAVING CASE WHEN CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END THEN rtreenode(rt0.c0, v0.c0) ELSE (((rt0.c0))<((rt0.c0))) END; -- 3ms;
SELECT ALL DENSE_RANK() OVER () FROM v0, rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c2) OVER () FROM rt0 WHERE (((((((('828092327')OR(x'')))OR(0X35b642c7))))>=((((x'')<(x'171b')))))); -- 0ms;
SELECT AVG(CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 END) FROM v0 WHERE ((('s') ISNULL) COLLATE NOCASE);SELECT ALL 0.27296033920960594 FROM v0, rt0; -- 0ms;
SELECT DISTINCT (- (((v0.c0)+('-1034631645')))) FROM rt0, v0; -- 1ms;
SELECT ALL ((((v0.c0 COLLATE RTRIM)AND(NULLIF(rt0.c2, 'xb!_(R'))))OR(((rt0.c1)+(rt0.c2)))) FROM v0 WHERE (((NULL) ISNULL)) LIMIT 828092327;SELECT (((((0Xffffffffc4cd4581))<((v0.c0)))) IS FALSE) FROM rt0 WHERE (((CHAR('MEJK'))-(CASE '1875611696'  WHEN '{}' THEN x'3ca2' WHEN 's' THEN 0.048243754718089504 WHEN 8.37096804E8 THEN '1e500' ELSE NULL END))) GROUP BY ((((((rt0.c1) NOT BETWEEN (x'c27b3dde') AND ('0.16077511769800235')))AND(rt0.c1)))AND('-1516844141')) HAVING TOTAL(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)));SELECT DISTINCT (((v0.c0)) BETWEEN ((AVG(rt0.c0))) AND ((CAST(rt0.c1 AS NUMERIC)))), ((v0.c0)OR(rt0.c2)), (((rt0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((v0.c0))))) AND ((((((rt0.c2)OR(rt0.c2)))OR(x'c499'))))) FROM v0 LIMIT 1989708349;SELECT (rt0.c2 IN (rt0.c1, v0.c0)) COLLATE BINARY FROM rt0 GROUP BY (((rt0.c1)) BETWEEN ((((rt0.c2) NOTNULL))) AND (((rt0.c2 IN ())))), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END) NOT NULL), LAST_INSERT_ROWID();SELECT DISTINCT x'' FROM v0; -- 0ms;
SELECT DISTINCT ((((NULL) BETWEEN (v0.c0) AND (rt0.c0)))AND('-195345767' COLLATE BINARY)), ((MIN(rt0.c1))>>((- (rt0.c1)))), GROUP_CONCAT(((((rt0.c2)AND(rt0.c2)))OR(rt0.c1))) OVER (), CASE WHEN GROUP_CONCAT(rt0.c0) THEN (~ (v0.c0)) ELSE TOTAL(rt0.c0) END, ((((((v0.c0)OR(v0.c0)))AND(NULL)))>(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0, v0 GROUP BY ((CAST(v0.c0 AS INTEGER))!=(CASE WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c2 THEN -372316986 END)); -- 0ms;
SELECT ALL (~ (rt0.c0)) COLLATE NOCASE FROM rt0, v0; -- 0ms;
SELECT DISTINCT CAST(HEX(0.08828565232819263) AS REAL) FROM v0, rt0 WHERE ((((0x7712d9b0 IN (0.3441013834916906, x'')))>>((~ (NULL))))); -- 0ms;
SELECT ((rt0.c0 IN ()) IN ()) FROM v0 GROUP BY (NOT (STRFTIME(rt0.c0, rt0.c0, rt0.c0)));SELECT DISTINCT MAX(HEX(v0.c0)) FROM v0, rt0 WHERE (((NOT (x'')) IN ())); -- 0ms;
SELECT CASE SQLITE_SOURCE_ID()  WHEN ((v0.c0)<=(rt0.c1)) THEN v0.c0 WHEN (((rt0.c2, rt0.c1, rt0.c0))>((v0.c0, rt0.c2, rt0.c1))) THEN ((v0.c0)<<(v0.c0)) WHEN (((rt0.c0))==((rt0.c2))) THEN (rt0.c2 IN (rt0.c0)) WHEN (rt0.c0 IN ()) THEN (rt0.c0 IN ()) WHEN UNLIKELY(rt0.c2) THEN TOTAL(v0.c0) END FROM v0, rt0 WHERE (((((((((CASE WHEN '1211528488' THEN '-1833870371' END)OR(NULL)))AND(((x'') IS TRUE))))OR((NULL IN ('.i')))))OR((('-1034631645')|(x''))))); -- 0ms;
SELECT DISTINCT (x'a380' IN ()) FROM rt0, v0 WHERE (CAST('1761552795' AS BLOB)); -- 0ms;
SELECT DISTINCT '828092327', (- (rt0.c2)) COLLATE BINARY, ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND('<,wr}t8')))OR(v0.c0)) COLLATE RTRIM FROM v0, rt0 WHERE (CAST(x'' AS BLOB) COLLATE NOCASE) ORDER BY ((((rt0.c2)>>(rt0.c1)))/(0.7571031605107269)) ASC, CASE WHEN CASE rt0.c0  WHEN '0.0' THEN v0.c0 ELSE rt0.c0 END THEN v0.c0 WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c1 AS INTEGER) THEN CASE rt0.c1  WHEN '' THEN v0.c0 ELSE v0.c0 END WHEN (rt0.c1 IN (NULL, v0.c0)) THEN v0.c0 COLLATE BINARY WHEN ((rt0.c2)%(v0.c0)) THEN (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) END DESC  NULLS LAST, CASE WHEN ((NULL) BETWEEN (v0.c0) AND (v0.c0)) THEN rt0.c0 COLLATE RTRIM ELSE ((rt0.c0) ISNULL) END DESC; -- 1ms;
SELECT DISTINCT '꾧' COLLATE BINARY FROM rt0, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(highlight(rt0.c1, rt0.c1, rt0.c2, rt0.c2)) OVER () FROM rt0 GROUP BY (((((rt0.c2, rt0.c1, v0.c0)) NOT BETWEEN ((v0.c0, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c1))))>>(((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0))));SELECT DISTINCT CAST(SQLITE_COMPILEOPTION_GET('') AS REAL) FROM rt0, v0 WHERE (((((7.33729398E8 COLLATE BINARY)OR(x'')))AND((+ (NULL))))); -- 0ms;
SELECT CAST((((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((v0.c0, rt0.c0, x''))) AS NUMERIC) FROM v0 WHERE (((x'') IS TRUE));SELECT rt0.c0, ((LIKELIHOOD(DISTINCT v0.c0, 0.005214990057172297)) IS FALSE), (GROUP_CONCAT(v0.c0) IN (CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0, v0; -- 0ms;
SELECT DISTINCT MIN(CAST(rt0.c2 AS BLOB)), rt0.c0, 480863532 FROM rt0, v0 WHERE (CAST(((((((((NULL)OR('<,wr}t8')))AND(NULL)))AND(x'f61f')))OR(x'a44d')) AS REAL)) ORDER BY ((CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)+((((rt0.c1, rt0.c2, rt0.c0))>((rt0.c1, rt0.c0, v0.c0))))) DESC  NULLS LAST; -- 1ms;
SELECT ALL ((((v0.c0) IS TRUE)) ISNULL), SUM((rt0.c1 IN ())) OVER (), rt0.c0 FROM v0;SELECT DISTINCT TOTAL(MIN(LIKE(rt0.c0, rt0.c2))) FROM rt0 ORDER BY x'055d' DESC  NULLS FIRST;SELECT ALL 0.4062920542872438 COLLATE NOCASE FROM v0, rt0 WHERE (((((((((0Xffffffff92b15bdd)AND('-1808529653')))AND('')))AND('-1767335645')))AND(TYPEOF(0X1e1ee1f6)))); -- 0ms;
SELECT (((v0.c0, v0.c0, rt0.c0)) NOT BETWEEN ((((rt0.c0)/(rt0.c0)), 0X1ca9652c, (~ (rt0.c1)))) AND ((CAST(rt0.c2 AS REAL), ((((v0.c0)AND('-488124472')))OR(rt0.c1)), (rt0.c0 IN ())))) FROM rt0, v0 WHERE (((LOWER(NULL))AND((((''))>(('')))))); -- 0ms;
SELECT DISTINCT (+ (((rt0.c0)%(rt0.c0)))) FROM v0 ORDER BY ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) NOT BETWEEN (rtreenode(rt0.c2, rt0.c0)) AND ((~ (rt0.c1)))) DESC;SELECT TOTAL(((('698730993', rt0.c2, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c0, rt0.c1)))) FROM rt0, v0 WHERE (((UNICODE(0.7210341854771557)) NOTNULL)); -- 0ms;
SELECT DISTINCT TOTAL(UNICODE(rt0.c2)) OVER () FROM rt0 WHERE (CASE WHEN '828092327' THEN 0.6116456595627746 ELSE '[v' END COLLATE RTRIM); -- 0ms;
SELECT ALL (+ ((('828092327') NOTNULL))), ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)))<>(v0.c0 COLLATE RTRIM)), (((rt0.c2) IS TRUE) IN ()) FROM v0, rt0 WHERE (CASE (((x'')) BETWEEN (('8.bF')) AND (('')))  WHEN (+ ('xb!_(r')) THEN UPPER(NULL) END); -- 0ms;
SELECT ALL (((v0.c0)) NOT BETWEEN (((- (v0.c0)))) AND ((MIN(0Xffffffff86c603f1)))) FROM rt0, v0 WHERE (((LIKELIHOOD(x'4a05', 0.37891435536655993)) NOT NULL)); -- 0ms;
SELECT LIKELIHOOD(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)), 0.23530836514893616) FROM rt0 NATURAL JOIN v0 WHERE (((-2.052923333E9)-(NULL)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT LAG(((((NULL) BETWEEN (v0.c0) AND (v0.c0))) IS TRUE), (((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))))>=((v0.c0 COLLATE NOCASE))), (((v0.c0)) BETWEEN ((CAST(v0.c0 AS NUMERIC))) AND ((((v0.c0)>=(v0.c0)))))) OVER () FROM v0 WHERE ((((((('1028751429') NOT BETWEEN ('') AND (x'')))OR((~ (NULL)))))OR((x'' IN ())))) GROUP BY ((TYPEOF(rt0.c2)) IS TRUE) LIMIT 837096804 OFFSET -604397360;SELECT ALL ((rt0.c0) NOTNULL) COLLATE NOCASE FROM rt0 WHERE (((((((0.608022982509439)OR(x'')))AND(0.8382607226673864))) ISNULL)) GROUP BY CASE 828092327  WHEN ABS(DISTINCT 0.11440148083856772) THEN (v0.c0 IN ()) WHEN ((rt0.c2)>(v0.c0)) THEN ((rt0.c2)>(-524412654)) WHEN (((rt0.c0, v0.c0, v0.c0)) NOT BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND ((rt0.c0, rt0.c0, v0.c0))) THEN ((rt0.c2)LIKE(v0.c0)) END, (((rt0.c0)IS(rt0.c0)) IN ()), ((rt0.c1)=(v0.c0)) COLLATE BINARY, JULIANDAY(((rt0.c2)!=(v0.c0)), rt0.c2 COLLATE RTRIM, rt0.c2), (((((((rt0.c0, v0.c0, rt0.c1))!=((v0.c0, rt0.c0, rt0.c0))))AND((NOT (rt0.c1)))))AND(CASE v0.c0  WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN 'jyN盁' END)) HAVING ((CAST(rt0.c2 AS NUMERIC))*(((rt0.c0)||(v0.c0))));SELECT ALL CAST(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END AS NUMERIC), NTILE((((((NOT (v0.c0)))OR(((((v0.c0)OR('-2052923333')))AND(v0.c0)))))OR(x''))) OVER (), IFNULL((v0.c0 IN (v0.c0)), TOTAL(rt0.c2)) FROM v0 WHERE (SQLITE_VERSION());SELECT NULL FROM v0 WHERE (((((('1733588673'))>=((NULL)))) NOT NULL)); -- 0ms;
SELECT ALL v0.c0 FROM v0, rt0 LIMIT -211054087; -- 1ms;
SELECT CAST(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER), (((('SEv\vT^d-')AND(((rt0.c1) NOT NULL))))OR(TYPEOF(rt0.c0))), (('964226499') BETWEEN (((rt0.c2) IS TRUE)) AND (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))), TOTAL(MAX(CAST(rt0.c1 AS BLOB))), ((((CAST(rt0.c2 AS INTEGER))AND((rt0.c2 IN (v0.c0)))))AND((NOT (rt0.c0)))) FROM rt0 RIGHT OUTER JOIN v0 ON ((v0.c0 COLLATE BINARY)/(((NULL) BETWEEN ('2073408701') AND (NULL)))) WHERE (json_remove((+ (NULL)), ((0.8622416623555408) NOT BETWEEN ('!9''xD') AND ('1271488370'))));SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((0.5185147486020438)OR(rt0.c2)))OR(rt0.c2))) OVER () FROM rt0 GROUP BY (+ ('*')), v0.c0, ABS(DISTINCT (v0.c0 IN (0.6579116783984712, rt0.c2))) ORDER BY NULL ASC  NULLS LAST;SELECT DISTINCT (NOT (((rt0.c1)/(v0.c0)))) FROM v0 WHERE ('-1417127226');SELECT CASE rt0.c1  WHEN ((((rt0.c2)OR(v0.c0)))AND(rt0.c0)) THEN ((rt0.c1)=(v0.c0)) WHEN ((rt0.c1) NOTNULL) THEN CASE rt0.c0  WHEN 0.9001526223614406 THEN NULL ELSE rt0.c1 END WHEN (rt0.c2 IN (rt0.c0, rt0.c0)) THEN SUM(rt0.c0) ELSE 0.517966092620118 END FROM rt0, v0; -- 0ms;
SELECT (~ (CAST('%M*[>\r' AS REAL))) FROM v0; -- 0ms;
SELECT DISTINCT UNICODE(CASE '-1879356423'  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c0 END), AVG(((((rt0.c2)OR(rt0.c2)))AND(rt0.c0))), SUM((~ (x'ea44'))) COLLATE RTRIM FROM rt0 WHERE (((((((((TRIM(-884242566))OR(((NULL)+('933405286')))))OR(0xffffffffe2e7cfc8 COLLATE NOCASE)))OR(CASE WHEN x'' THEN '0.08828565232819263' ELSE '1830889502' END)))OR((0.16899562709906446 IN ())))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0)>>(rt0.c0))) FROM rt0 ORDER BY CAST('8.BF' AS INTEGER) DESC  NULLS LAST, ((rt0.c2)+(v0.c0 COLLATE NOCASE)) DESC;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN x'' ELSE rt0.c2 END) NOT BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) AND (MIN(v0.c0))), INSTR(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)), (- (rt0.c1))), ((TRIM(DISTINCT NULL))<<(COALESCE(rt0.c2, rt0.c0, NULL, rt0.c2))) FROM v0, rt0 WHERE (LOWER(DISTINCT 0.212386798298286 COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT (~ (((rt0.c2) NOT BETWEEN (v0.c0) AND (rt0.c0)))) FROM v0;SELECT DISTINCT rt0.c0 FROM v0 LIMIT -327430862;SELECT DISTINCT MIN((+ (rt0.c2))), GROUP_CONCAT(((rt0.c2)OR(NULL)) COLLATE RTRIM) OVER (), (((((((((rt0.c2 IN ()))OR(CAST(rt0.c1 AS NUMERIC))))OR(((rt0.c2) NOT BETWEEN (v0.c0) AND (v0.c0)))))OR(((v0.c0)IS(v0.c0)))))AND(SUM(rt0.c0))) FROM rt0, v0 LIMIT 1267120104 OFFSET 901137095; -- 0ms;
SELECT NTH_VALUE(((rt0.c2)>=(v0.c0)) COLLATE RTRIM, rt0.c0) OVER () FROM v0 NATURAL JOIN rt0; -- 0ms;
SELECT ALL TRIM((- (rt0.c1))), (~ (NULLIF(rt0.c1, rt0.c2))), DENSE_RANK() OVER () FROM v0 WHERE (CAST(NULL AS REAL) COLLATE BINARY);SELECT (NOT ((- (0x2f8b3495)))) FROM v0, rt0 WHERE (CASE WHEN 0Xffffffffc254c623 THEN '⻎t9' WHEN (('-884242566') IS TRUE) THEN (- (NULL)) WHEN CASE NULL  WHEN NULL THEN '' WHEN NULL THEN 0.7210341854771557 WHEN 0.5341177071642268 THEN '-283921259' END THEN (NOT (NULL)) END); -- 1ms;
SELECT DISTINCT NULL FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((v0.c0)*(rt0.c1)) COLLATE NOCASE COLLATE RTRIM, ((((((rt0.c2)|(rt0.c2)))OR(SUM(v0.c0))))AND(AVG(rt0.c2))), (((((+ (rt0.c0)))AND(((rt0.c0)<=(rt0.c2)))))OR(CASE WHEN v0.c0 THEN v0.c0 ELSE 624922969 END)) FROM v0, rt0 ORDER BY 1618514293 DESC  NULLS FIRST;SELECT DISTINCT LAST_VALUE(CASE CAST(v0.c0 AS REAL)  WHEN (- (rt0.c2)) THEN CAST(rt0.c2 AS REAL) WHEN (v0.c0 IN (rt0.c0, rt0.c1)) THEN rt0.c0 COLLATE RTRIM WHEN CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c0 END THEN ((rt0.c0)IS NOT(rt0.c0)) END) OVER () FROM v0, rt0; -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS REAL) FROM v0; -- 1ms;
SELECT ALL (((((rt0.c0)+(rt0.c1))))!=((SQLITE_VERSION()))) FROM v0;SELECT (~ ((~ (rt0.c2)))) FROM rt0 WHERE (((CAST(x'' AS NUMERIC))<=(((((NULL)OR('FALSE')))AND('-1704842086'))))) ORDER BY json(rt0.c2) LIMIT 1271488370; -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(((v0.c0)IS(rt0.c0)))))OR(((rt0.c1)<=(rt0.c1)))), NTH_VALUE(CASE CASE WHEN rt0.c1 THEN rt0.c2 END  WHEN ((v0.c0)IS('')) THEN CAST(v0.c0 AS REAL) ELSE (((rt0.c2)) BETWEEN ((v0.c0)) AND ((rt0.c1))) END, NULL) OVER (), CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE FROM v0, rt0 WHERE ((((((('733729398')IS NOT(x'')))OR(json('ue4#K嫆9h'))))OR((~ (NULL)))));SELECT ALL ((((rt0.c2)AND(UNICODE('1618514293'))))OR(0.8353329454626391)), (((((((((((((~ (0.212386798298286)))OR(((rt0.c0)<>(rt0.c0)))))OR(CAST(rt0.c0 AS NUMERIC))))OR(((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))))AND((v0.c0 IN (rt0.c0, x'')))))OR(CAST(v0.c0 AS INTEGER))))OR((((rt0.c0, rt0.c0, v0.c0))=(('677916366', -1579323922, v0.c0))))), NTH_VALUE((v0.c0 COLLATE RTRIM IN ()), ((((rt0.c2)<<(rt0.c0))) NOT NULL)) OVER ( ORDER BY ((+ (0xffffffffa1762db1)) IN (CAST(rt0.c1 AS INTEGER))) DESC  NULLS FIRST) FROM rt0 INNER JOIN v0 ON (NOT ((rt0.c2 IN ()))) WHERE (0x1b79b21d); -- 0ms;
SELECT ALL NULL FROM rt0 WHERE ((((('')GLOB(NULL))) NOT BETWEEN (((('9PwZ75엵0')) BETWEEN ((x'')) AND ((x'')))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((x'')-(x'9ed9'))) BETWEEN (((0.2808358410502583)>(0.8210587919022154))) AND (CAST(0Xffffffffe2e7cfc8 AS REAL)))); -- 1ms;
SELECT DISTINCT (+ (0Xffffffffd206051c)) COLLATE BINARY FROM rt0 GROUP BY ((((NULL)LIKE(rt0.c2)))>>((v0.c0 IN ()))), CAST('+' AS NUMERIC), CAST(((NULL)&(v0.c0)) AS INTEGER) HAVING ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c1 WHEN '0.28413346024777564' THEN rt0.c0 END)>((+ (rt0.c2))));SELECT ALL ((0.21202058072810537)+(0.9724423061921553)), CASE ((rt0.c1)GLOB(v0.c0))  WHEN v0.c0 THEN ((('')) BETWEEN ((v0.c0)) AND ((rt0.c2))) END, v0.c0 FROM v0;SELECT DISTINCT (((('1271488370')AND(((v0.c0) IS TRUE))))OR(rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (CASE WHEN ((0.20630537127364468) NOT NULL) THEN (NULL IN ()) END);SELECT DISTINCT (((MIN(rt0.c1)))<>(((rt0.c1 IN ())))) FROM rt0; -- 0ms;
SELECT ALL (((v0.c0))<=(((~ (rt0.c0))))) FROM rt0 WHERE (CASE WHEN CASE '-524412654'  WHEN '797652117' THEN NULL ELSE -570094405 END THEN ((((((((NULL)OR('1187737880')))OR(x'')))OR(0.7660397725722283)))OR(797652117)) ELSE NULL END) GROUP BY CASE CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END  WHEN ((rt0.c1)>=(rt0.c2)) THEN CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END WHEN NULL THEN rt0.c2 WHEN LENGTH(rt0.c1) THEN ((((rt0.c2)OR(rt0.c0)))OR('-1879356423')) ELSE ((NULL)&(rt0.c1)) END;SELECT DISTINCT TOTAL(DATETIME(v0.c0, '', NULL)) OVER () FROM rt0 WHERE ((((('0.517966092620118')OR(0X175e0ba1)))==('-1676867487')));SELECT ALL rt0.c1 FROM v0, rt0; -- 0ms;
SELECT ALL v0.c0 FROM rt0 WHERE ((LIKELY(NULL) IN ()));SELECT v0.c0 FROM rt0 WHERE ((- (CASE WHEN '298630826' THEN '' ELSE x'afb6' END)));SELECT ALL (((((((((- (rt0.c1)))OR((~ (rt0.c0)))))OR((((v0.c0, rt0.c2, v0.c0)) BETWEEN ((rt0.c0, v0.c0, rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c0))))))OR((+ (rt0.c2)))))OR(((rt0.c1)OR(rt0.c1)))), (((v0.c0)&(rt0.c1)) IN ((((v0.c0))<=((v0.c0))))), (+ (rt0.c1)) COLLATE BINARY FROM rt0 WHERE ((((LIKELY(x'')))=(((('1564070598')IS(0xffffffff9c56ce80)))))) LIMIT -554228935;SELECT DISTINCT CASE rt0.c0  WHEN v0.c0 THEN rt0.c2 END COLLATE BINARY FROM v0, rt0 WHERE ((((('1312994980')+(0Xffffffffc89299ba))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST((((rt0.c1))<=((v0.c0))) AS TEXT) FROM v0, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) IS TRUE) FROM v0, rt0 WHERE (CASE WHEN (- (NULL)) THEN (('L')>(-1.329255573E9)) END); -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (JULIANDAY(rt0.c1, '-732128230', v0.c0, rt0.c2, rt0.c1)) AND (CASE WHEN v0.c0 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c2 THEN v0.c0 END)) FROM rt0 WHERE ((- ((NOT (NULL)))));SELECT DISTINCT rt0.c2, ((((rt0.c2)|(v0.c0)))GLOB(((rt0.c1)<>(rt0.c0)))), HEX(DISTINCT v0.c0) COLLATE NOCASE, LIKE(MAX(rt0.c1), '', 'M'), ((CASE rt0.c0  WHEN '-1417127226' THEN rt0.c0 ELSE rt0.c1 END) ISNULL) FROM v0;SELECT DISTINCT TOTAL(387743462) OVER () FROM rt0, v0 WHERE ((((~ (0.4062920542872438)))>(NULLIF(DISTINCT '00&wk', 0.394558227807825)))) LIMIT -222417456 OFFSET -1596580465; -- 0ms;
SELECT CAST(rt0.c0 AS NUMERIC), ((((rt0.c1)GLOB(rt0.c1)))||(SUM(rt0.c0))), CAST(((v0.c0)|(rt0.c0)) AS TEXT) FROM rt0 WHERE (HEX((x'' IN ()))) ORDER BY (((((((v0.c0)OR(rt0.c2)))OR(rt0.c0)), rt0.c1 COLLATE NOCASE, ((rt0.c1) NOT NULL)))<((CAST(rt0.c1 AS REAL), ((rt0.c0) BETWEEN (rt0.c0) AND (v0.c0)), ((rt0.c2) NOTNULL))));SELECT DISTINCT ((rt0.c1)+((NOT (rt0.c1)))) FROM v0;SELECT DISTINCT rt0.c0, '6&\rXs(', ((v0.c0) NOTNULL) FROM v0, rt0; -- 0ms;
SELECT CASE WHEN rt0.c0 COLLATE RTRIM THEN CAST(v0.c0 AS TEXT) ELSE x'' END FROM v0, rt0; -- 0ms;
SELECT DISTINCT (- (UPPER(DISTINCT rt0.c0))), ((GROUP_CONCAT(rt0.c2))>>((rt0.c1 IN ()))), (((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)) IN (COUNT(rt0.c2))) FROM v0 WHERE ((((((x'') NOT BETWEEN (x'49c9') AND ('-185920222'))))<(((('') IS FALSE)))));SELECT DISTINCT CAST(((((((((((((v0.c0)AND(rt0.c2)))AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(v0.c0)) AS NUMERIC), ((UNLIKELY(DISTINCT v0.c0)) NOT BETWEEN (v0.c0 COLLATE BINARY) AND (((0xffffffffa1dd6dee) BETWEEN (rt0.c0) AND (rt0.c2)))), LAST_INSERT_ROWID() FROM rt0, v0; -- 0ms;
SELECT ALL TRIM((((0.4557381600906718))!=((rt0.c0)))) FROM v0;SELECT DISTINCT ((((((rt0.c1)OR(v0.c0)))AND(rt0.c0))) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND (((rt0.c0) ISNULL))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0)+(rt0.c2)) THEN x'' COLLATE BINARY WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 WHEN json_array(rt0.c0, rt0.c0) THEN rt0.c2 COLLATE BINARY END, rt0.c1, AVG((~ (rt0.c0))) FROM v0 WHERE ((NOT ((('K3Q3cV>No')<(NULL)))));SELECT rt0.c2 FROM v0 WHERE (UNLIKELY(DISTINCT LIKELIHOOD(DISTINCT '-0.0', 0.17072739012615046))) ORDER BY (NOT (((rt0.c2)<=('-884890017'))))  NULLS LAST;SELECT DISTINCT ((((((rt0.c0) IS FALSE))OR(UNLIKELY(DISTINCT NULL))))AND('935982606' COLLATE RTRIM)), TOTAL(TOTAL(rt0.c2 COLLATE RTRIM)), ((((((((rt0.c1)OR(rt0.c1)))OR(COUNT(rt0.c1))))AND((NOT (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2)))) FROM v0 WHERE ((('-1676867487') BETWEEN ('1555767470') AND ('186671379')) COLLATE BINARY);SELECT DISTINCT COUNT(((rt0.c2)GLOB('0.2808358410502583'))) OVER (), (((((((('0.7210341854771557')AND(((rt0.c0)>>(v0.c0)))))AND((('bx') IS TRUE))))OR(x'15b7')))AND(TOTAL(rt0.c2))), SUM(((rt0.c0) IS FALSE)) FROM v0 WHERE ((((('-884242566')>('1187737880')))IS(CASE x''  WHEN 'cp' THEN '1187737880' WHEN '-591136074' THEN x'' WHEN x'df19' THEN NULL ELSE x'' END)));SELECT DISTINCT ((rt0.c2) NOT NULL) FROM rt0 WHERE ((((- ('}e|sc')))<=(('-1172352218' IN ())))); -- 0ms;
SELECT DISTINCT v0.c0, NULLIF(DISTINCT (rt0.c0 IN ()), (+ (v0.c0))), CASE WHEN ((rt0.c2)+(rt0.c1)) THEN STRFTIME(rt0.c2, rt0.c2, rt0.c0, rt0.c2, 'HU') END FROM v0 WHERE (((((('733729398', 0.8822762117485585, '-732128230')) NOT BETWEEN ((0.9785033744363146, x'2010', NULL)) AND ((x'', NULL, x'')))) BETWEEN (((((x'')OR('S.\DElHb')))OR('2100132172'))) AND ((('l㤝')AND(0.6559614941755091)))));SELECT DISTINCT FIRST_VALUE(CASE CASE '-252703040'  WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END  WHEN MIN(v0.c0, v0.c0, v0.c0, v0.c0) THEN ((v0.c0)>>(v0.c0)) END) OVER ( RANGE  CURRENT ROW) FROM v0 WHERE (COALESCE((NULL IN (1.618514293E9, x'ed1c9296')), CASE WHEN '-589326347' THEN x'' END)); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM v0 WHERE ((((((525665443, x'', 1.614183441E9, -1664751840, NULL)) BETWEEN (('聅', NULL, NULL, x'', '-804893782')) AND (('-2033843215', NULL, x'', x'', '')))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((rt0.c1)) AND (((~ (rt0.c0))))) FROM rt0 WHERE (((((NULL IN ())))>((((('1753385639')) NOT BETWEEN ((x'5ad2')) AND ((x'19517696'))))))); -- 0ms;
SELECT ALL (((((v0.c0)AND(rt0.c2)))OR(rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL))AND(0.8284113765604016)), COUNT(((rt0.c1)&(rt0.c0))), HEX(DISTINCT CAST(rt0.c2 AS INTEGER)) FROM rt0, v0; -- 0ms;
SELECT ALL (((rt0.c1, rt0.c0, v0.c0)) NOT BETWEEN ((((rt0.c2)>=(rt0.c1)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), ((rt0.c1)LIKE(rt0.c1)))) AND ((CASE v0.c0  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE v0.c0 END, NULL, CASE rt0.c0  WHEN rt0.c0 THEN v0.c0 END))), (((rt0.c0 IN (rt0.c2)))OR(((rt0.c0)==(rt0.c2)))), rt0.c2 FROM v0, rt0 WHERE (((((4.80863532E8)/(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET((((rt0.c0, v0.c0, rt0.c1, rt0.c2, v0.c0)) BETWEEN (('E阶rZ%캀', rt0.c1, rt0.c1, x'', rt0.c1)) AND ((v0.c0, rt0.c1, NULL, '-732128230', rt0.c0)))), ((((((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))AND((NOT (x'')))))OR(((((((((rt0.c0)OR(rt0.c0)))AND('✇r\n*\')))OR(v0.c0)))AND(v0.c0)))), (((rt0.c0 IN ())) BETWEEN (LIKELY(rt0.c2)) AND (((rt0.c0) NOTNULL))) FROM v0, rt0 NOT INDEXED ORDER BY ((~ (v0.c0)) IN ((~ (rt0.c2)))); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN load_extension(rt0.c1) THEN (((rt0.c0))<((rt0.c1))) ELSE CAST(v0.c0 AS NUMERIC) END FROM rt0 LIMIT -1717660441;SELECT DISTINCT rt0.c0 FROM v0, rt0; -- 0ms;
SELECT ALL v0.c0, (NOT (('505340406' IN ()))), ((((v0.c0) IS FALSE))>((((rt0.c0))==((NULL))))) FROM v0, rt0 WHERE (((((NULL)>(''))) NOT BETWEEN (0.27375685941075645) AND ((('-1330527859')AND('딍(ZY6'))))); -- 0ms;
SELECT ALL COALESCE(CAST(rt0.c2 AS NUMERIC), (~ (rt0.c0))) FROM v0 WHERE (((((('Z1y#寝')) NOT BETWEEN ((0.8353329454626391)) AND ((901303886)))) IS TRUE));SELECT DISTINCT ((((((rt0.c1)AND(rt0.c2)))AND(rt0.c2))) NOTNULL) FROM rt0 ORDER BY (((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0)))) NOT BETWEEN (rt0.c0) AND (rt0.c0 COLLATE RTRIM)) ASC  NULLS LAST, v0.c0 ASC  NULLS FIRST, ((((CASE WHEN 6.24922969E8 THEN rt0.c2 END)OR(CAST('-1417127226' AS REAL))))OR(rt0.c1));SELECT ALL ((((((rt0.c2) IS TRUE))AND((((rt0.c0, rt0.c1, v0.c0))=((rt0.c2, v0.c0, v0.c0))))))AND(CAST(rt0.c1 AS NUMERIC))), TOTAL(((rt0.c0)>=(rt0.c1))), SUM(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END) OVER () FROM v0 NOT INDEXED, rt0 WHERE ((((- ('0.08828565232819263')))IS((x'' IN ())))); -- 2ms;
SELECT DISTINCT ((rt0.c0)+(v0.c0)) COLLATE NOCASE FROM v0, rt0 WHERE (UNLIKELY((- ('-808048889')))); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END AS TEXT), ((((rt0.c0 IN ())))>=(((('*A') ISNULL)))), (((rt0.c1) IS FALSE) IN ()) FROM v0 WHERE ((((x'', '-', 0X5d39d2c6, 0.39701937378771257, 0Xffffffffd3def2b7)) NOT BETWEEN (((((x'56af', NULL, 0.6215469021968366))<((NULL, 0.007489324100347083, x''))), CASE WHEN 0.22185787464362894 THEN x'' ELSE 1.55576747E9 END, ((0.24794170739046928)<=(0.9465384530564735)), LAST_INSERT_ROWID(), ((x'')>(x'')))) AND (((((NULL)) NOT BETWEEN ((NULL)) AND (('bs'))), ('ເ9#N䐆p' IN (NULL)), x'c0a6', ((x'')IS NOT('0.19659493300462882')), (x'' IN ())))));SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2))) NOT BETWEEN (((((((((rt0.c1)OR(rt0.c0)))AND(v0.c0)))AND(v0.c0)))OR(v0.c0))) AND (-333069605)) FROM v0;SELECT ALL '-1077566141' FROM v0 WHERE (COALESCE(DISTINCT 'ID}z^1Ld' COLLATE BINARY, ((((7.97652117E8)AND('-1690109261')))AND(NULL)), (((x''))>((NULL))), ((((0.07385050898336776)OR(0.9001526223614406)))AND(0.6215469021968366)))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)&(v0.c0)) FROM rt0, v0 WHERE (((((((x'7efa0872')) BETWEEN ((0.41165392490388897)) AND ((NULL)))))=((x'')))); -- 1ms;
SELECT ALL ((SUM(rt0.c0)) BETWEEN ((NOT (rt0.c0))) AND (rt0.c1)) FROM v0;SELECT ALL rt0.c1 FROM rt0 LIMIT -557580346 OFFSET 594528658; -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))) BETWEEN (rt0.c2) AND (((v0.c0)/(v0.c0)))) FROM rt0, v0; -- 0ms;
SELECT ALL CAST(rt0.c1 AS TEXT) FROM rt0, v0 WHERE ((+ (CASE 0.9059155920101165  WHEN 0.007489324100347083 THEN 0.18562404642669417 ELSE '507668858' END))) ORDER BY (((((rt0.c2))<=((rt0.c2))))/(CASE WHEN rt0.c2 THEN '' END)), rt0.c2; -- 0ms;
SELECT DISTINCT (~ (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))) FROM v0, rt0 GROUP BY ((((((((v0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(NULL)), CAST(((rt0.c2) ISNULL) AS TEXT), ((TRIM(v0.c0, rt0.c1)) IS FALSE), rt0.c1, ((json_array('-1596580465', v0.c0, v0.c0, NULL)) IS TRUE) HAVING ((((((rt0.c1)OR(rt0.c1)))AND(rt0.c2)))%(((-48844569) NOT NULL))); -- 0ms;
SELECT DISTINCT ((((v0.c0 IN ()), ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), '1168675372'))>((COUNT(v0.c0), (+ (rt0.c0)), ((rt0.c2) IS FALSE)))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (+ (((v0.c0)>=(rt0.c2)))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE (CASE (+ (x''))  WHEN x'3477' THEN ((-6.0439736E8) NOT BETWEEN (0.6910540469402998) AND (0.209138833607191)) WHEN (+ (NULL)) THEN ((x'') ISNULL) WHEN ((0.9418936573407984)==(x'b40b2d84c139')) THEN ((x'') BETWEEN ('-804893782') AND ('*')) ELSE CAST(0.17153671470386211 AS REAL) END); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((((rt0.c1)OR(rt0.c2)))) AND ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c2)))OR(0.212386798298286))))) FROM v0, rt0 WHERE (((0xffffffffd03b76a6 COLLATE BINARY) NOTNULL)) LIMIT -1751265733 OFFSET -329158491; -- 0ms;
SELECT DISTINCT (+ (((((rt0.c0)AND(0Xffffffffb0b1c18d)))OR(v0.c0)))), MAX((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2)))), (~ (rt0.c2 COLLATE RTRIM)) FROM v0 WHERE ((~ (((7.97652117E8) NOT NULL))));SELECT ALL v0.c0, CASE (+ (rt0.c2))  WHEN ((0X6b43371b)||(rt0.c1)) THEN ((((rt0.c2)AND(rt0.c0)))AND(0x315bafa7)) END, ((((v0.c0 IN ())))=((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0))))) FROM v0 WHERE ((((- (0.8822762117485585)))LIKE(('1026886784' IN ()))));SELECT DISTINCT CAST((+ (x'')) AS INTEGER) FROM rt0 NATURAL JOIN v0; -- 0ms;
SELECT ALL ((((v0.c0)AND(rt0.c0)))-((v0.c0 IN ()))), (rt0.c0 COLLATE BINARY IN (((((rt0.c1)AND(0.27375685941075645)))AND(rt0.c0)))), NULLIF(DISTINCT rt0.c1 COLLATE BINARY, x'') FROM rt0, v0 ORDER BY CASE ((((rt0.c0)OR(rt0.c2)))AND(v0.c0))  WHEN CAST(rt0.c0 AS BLOB) THEN (~ (rt0.c1)) WHEN (rt0.c2 IN ()) THEN ((((rt0.c2)OR(rt0.c0)))AND(rt0.c1)) WHEN (((rt0.c1, rt0.c1, rt0.c0)) BETWEEN ((rt0.c1, 0Xffffffffed25cbcf, x'')) AND (('*g', 'z[뜂r', v0.c0))) THEN CAST('bs' AS NUMERIC) END, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)) COLLATE BINARY ASC  NULLS FIRST; -- 1ms;
SELECT (((rt0.c2, rt0.c0, rt0.c1)) NOT BETWEEN ((((v0.c0) NOT BETWEEN (NULL) AND (rt0.c1)), ((rt0.c1)AND(rt0.c2)), rt0.c0)) AND ((((rt0.c0)-(rt0.c1)), '-1471160936', MIN(rt0.c0)))) FROM v0, rt0 WHERE ((((((('-1490747853')AND(NULL)))OR(0.6897437554290764))) NOT BETWEEN ((((x''))<(('')))) AND (CAST('Yᓑ' AS BLOB)))); -- 0ms;
SELECT ALL NTILE((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))OR(NULL)) IN ())) OVER () FROM v0, rt0 WHERE (NULL) LIMIT 186671379; -- 0ms;
SELECT DISTINCT rt0.c1, (((rt0.c2 IN (rt0.c0))) IS FALSE), CASE CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END  WHEN (- ('638703983')) THEN (NOT (v0.c0)) END FROM v0, rt0 WHERE (CAST(((((((((x'')AND(x'')))OR(0xffffffffb5454112)))OR('1184220661')))OR(NULL)) AS NUMERIC)) GROUP BY v0.c0, CASE (((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((rt0.c0)))  WHEN (~ (rt0.c1)) THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c2))>=((rt0.c0))) THEN CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 ELSE v0.c0 END WHEN CHAR(rt0.c1) THEN (+ (rt0.c0)) END, ((NULL) NOTNULL) HAVING ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c2 AS NUMERIC)) OVER ( ORDER BY ((((rt0.c2) ISNULL))+(0Xffffffffa1762db1)) DESC  NULLS LAST), CAST((rt0.c2 IN ()) AS BLOB), (CASE WHEN rt0.c1 THEN v0.c0 ELSE '298630826' END IN ()), ((rt0.c0) ISNULL), x'' FROM rt0, v0 LIMIT -2073086230; -- 0ms;
SELECT DISTINCT CASE v0.c0  WHEN 'ZBBt' THEN rt0.c0 END COLLATE NOCASE FROM rt0 WHERE (1826369124);SELECT (((rt0.c2 IN ())) NOT NULL) FROM rt0; -- 0ms;
SELECT ((rt0.c2) NOTNULL) FROM v0;SELECT ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (((rt0.c0) NOTNULL)) AND (((((0.47364360299421393)OR(NULL)))AND(rt0.c1)))) FROM v0 WHERE (CAST(((x'')%(NULL)) AS REAL));SELECT ALL (- (rt0.c0)) COLLATE RTRIM FROM rt0 WHERE (((x'' IN (x'')) IN ())) LIMIT -1767335645 OFFSET -768526184; -- 0ms;
SELECT ((CAST(rt0.c1 AS BLOB)) ISNULL) FROM rt0, v0 GROUP BY ((((+ (v0.c0))))!=(((NOT (rt0.c1))))); -- 0ms;
SELECT RANK() OVER ( GROUPS BETWEEN (CASE rt0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END IN (CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 ELSE rt0.c2 END)) PRECEDING AND  CURRENT ROW EXCLUDE GROUP) FROM v0 ORDER BY ((((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))/(((rt0.c0)>>(rt0.c1)))) ASC  NULLS FIRST, (((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)) IN (v0.c0)), CASE ((rt0.c1)==(rt0.c0))  WHEN (+ (rt0.c2)) THEN CAST(v0.c0 AS REAL) WHEN v0.c0 THEN ((rt0.c0)<=(rt0.c0)) WHEN ((rt0.c1)/(rt0.c1)) THEN CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END END  NULLS LAST;SELECT ALL rt0.c2 FROM rt0 WHERE ((((NOT (x'7f6a')))<>(((x'') NOT BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((CAST(v0.c0 AS REAL))AND(NULL)))OR(((NULL) BETWEEN (v0.c0) AND (rt0.c0)))), ROW_NUMBER() OVER (), CASE ((v0.c0) BETWEEN (rt0.c2) AND (v0.c0))  WHEN ((rt0.c1)=(rt0.c0)) THEN CAST(rt0.c0 AS REAL) END FROM rt0;SELECT DISTINCT MAX((((rt0.c0)) BETWEEN ((v0.c0)) AND ((rt0.c0)))) COLLATE NOCASE, ((((0.10679647378744606)LIKE(NULL))) BETWEEN (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))) AND (rt0.c1 COLLATE RTRIM)), (((CAST(rt0.c2 AS REAL)))<((COUNT(*)))) FROM rt0, v0; -- 0ms;
SELECT ALL v0.c0 FROM rt0, v0; -- 1ms;
SELECT 'z[뜂r' COLLATE NOCASE, x'', ((((v0.c0) NOT BETWEEN (v0.c0) AND ('0.22185787464362894'))) ISNULL), x'', COUNT(*) FROM rt0, v0 WHERE ((+ (CAST(-1823909815 AS NUMERIC)))) GROUP BY CAST((('486678221') ISNULL) AS BLOB) HAVING ((((v0.c0)OR(v0.c0)))OR(-1596580465)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CAST(((v0.c0)OR(rt0.c0)) AS BLOB) FROM v0, rt0 GROUP BY rt0.c0, v0.c0, v0.c0; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)<<(1.564070598E9)))OR(CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM v0 ORDER BY ABS(CAST(rt0.c0 AS REAL)) ASC  NULLS FIRST;SELECT DISTINCT CUME_DIST() OVER () FROM v0 WHERE ((NOT (x'')) COLLATE NOCASE) GROUP BY x'', CASE WHEN (+ (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)) ELSE (v0.c0 IN ()) END, CASE WHEN ((rt0.c2)*(v0.c0)) THEN (rt0.c2 IN ()) ELSE x'' END HAVING ((NULL)%(COUNT(rt0.c1)));SELECT DISTINCT CASE WHEN AVG(rt0.c0) THEN '-884242566' WHEN (rt0.c0 IN ()) THEN (NOT (v0.c0)) WHEN (rt0.c2 IN ()) THEN NULL END FROM rt0 WHERE ((CASE NULL  WHEN x'f584' THEN '' END IN ()));SELECT ALL ((rt0.c0 COLLATE NOCASE)-(((rt0.c1) NOTNULL))), GROUP_CONCAT(((rt0.c1)<(rt0.c2))), (((CAST(v0.c0 AS REAL)))=((COUNT(rt0.c2)))) FROM v0, rt0 WHERE ((NOT (('387743462' IN (NULL))))) ORDER BY CAST(0.8353329454626391 AS TEXT) COLLATE RTRIM COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*), ((((SQLITE_COMPILEOPTION_USED(rt0.c1))AND(rt0.c1 COLLATE BINARY)))OR(rt0.c2)), 'k*[+S' FROM rt0 WHERE (((((((0.6306916007312277)OR(0.4344518831086981)))OR(0.09822918776622902)))||('594528658' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE WHEN LIKELIHOOD(DISTINCT rt0.c2, 0.23956337495048474) THEN ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) ELSE 'q\n5p' END FROM rt0 UNION SELECT NTILE(LIKELY(DISTINCT ((v0.c0)IS(0Xfffffffffbf90533)))) OVER () FROM v0, rt0;SELECT DISTINCT ((((v0.c0)-(v0.c0)))<<(v0.c0)) FROM v0 WHERE ((('' COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT CASE WHEN SUM(rt0.c1) THEN (- (rt0.c2)) ELSE CAST(rt0.c2 AS INTEGER) END, v0.c0 COLLATE RTRIM, (- ((rt0.c2 IN (rt0.c2, rt0.c1)))) FROM v0, rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT v0.c0 FROM rt0;SELECT ALL CASE (((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c1)))  WHEN ((rt0.c1) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN load_extension(v0.c0) END, CAST(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER), (((+ (rt0.c1)))+(AVG(rt0.c2))) FROM rt0, v0 WHERE ((((~ (NULL))) IS TRUE)); -- 1ms;
SELECT DISTINCT CASE ((rt0.c1) ISNULL)  WHEN CAST(v0.c0 AS NUMERIC) THEN ((rt0.c2) NOTNULL) ELSE ((rt0.c0)IS(rt0.c2)) END, (((NOT (rt0.c2))) ISNULL), 0.05309542220925767 FROM v0, rt0 ORDER BY rt0.c0 ASC; -- 0ms;
SELECT DISTINCT (((((((rt0.c0)AND(rt0.c0)))OR(v0.c0)), x'', ((v0.c0) NOT BETWEEN (rt0.c0) AND (v0.c0))))<((CAST(v0.c0 AS NUMERIC), ((((rt0.c1)AND(v0.c0)))AND(rt0.c2)), rt0.c2 COLLATE BINARY))) FROM v0, rt0 WHERE (CASE WHEN ((((x'')AND('ᤒzgkmPtd')))AND(0.11440148083856772)) THEN (- ('-1586090575')) ELSE CAST(-5.24453343E8 AS TEXT) END); -- 0ms;
SELECT ALL ((((CAST(rt0.c2 AS INTEGER))OR(HEX(DISTINCT rt0.c2))))OR((v0.c0 IN (rt0.c2)))) FROM v0 WHERE (((((NULL) NOT BETWEEN (x'e4dc') AND ('-732128230')))<=((+ (x''))))) LIMIT -1808529653;SELECT CAST(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) AS INTEGER) FROM rt0, v0 WHERE ((~ ((((NULL))<(('zj')))))); -- 0ms;
SELECT CAST((+ ('-524453343')) AS INTEGER), ((((rt0.c0) NOT NULL))<=(((((v0.c0)AND(rt0.c2)))AND(rt0.c2)))), (((rt0.c2) ISNULL) IN ()), ((NULL) IS FALSE), CASE WHEN (rt0.c0 IN (v0.c0)) THEN v0.c0 WHEN ((rt0.c1) BETWEEN (rt0.c1) AND (v0.c0)) THEN GROUP_CONCAT(v0.c0) WHEN rt0.c0 THEN CAST(rt0.c1 AS BLOB) END, (((((v0.c0)%(v0.c0))))!=(((NOT (v0.c0))))), ((((((rt0.c2)AND(rt0.c2)))AND(rt0.c0))) ISNULL) FROM v0, rt0 WHERE (((((('-1034631645'))<>(('[]!')))) NOTNULL)); -- 0ms;
SELECT ((TOTAL(rt0.c0)) IS FALSE) FROM rt0, v0 WHERE ((~ (CASE WHEN NULL THEN '-366743591' ELSE 0.2736177371742333 END))); -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT NULL)) BETWEEN (rt0.c1 COLLATE BINARY) AND (TRIM(DISTINCT rt0.c0, rt0.c1))), ROW_NUMBER() OVER (), CASE rt0.c1  WHEN ((v0.c0)>(v0.c0)) THEN json_array_length(rt0.c2, v0.c0) WHEN MIN(rt0.c2) THEN ((rt0.c0)IS(rt0.c1)) WHEN json_array_length(rt0.c2) THEN CASE v0.c0  WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c1 END ELSE (rt0.c0 IN (rt0.c2)) END FROM rt0, v0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (0.3679738909149022) AND (-1e500)) THEN ((((NULL)AND(x'')))OR(964226499)) ELSE CAST(1761552795 AS INTEGER) END); -- 0ms;
SELECT DISTINCT CAST(((((rt0.c1)OR(rt0.c0)))OR(rt0.c0)) AS NUMERIC) FROM v0, rt0 WHERE ((((NULL IN (0xffffffffef13b495))) BETWEEN (CAST(x'6e88' AS BLOB)) AND (((((-1.329255573E9)AND(0.5777782010209795)))OR(''))))); -- 0ms;
SELECT DISTINCT rt0.c1, TOTAL(((v0.c0) NOTNULL)) OVER ( RANGE  CURRENT ROW), CAST((- (v0.c0)) AS NUMERIC) FROM rt0 NOT INDEXED WHERE (json_valid(((x'') IS TRUE))) ORDER BY rt0.c1, ((((rt0.c2, rt0.c0, rt0.c1)) BETWEEN ((0X2dd8f7df, v0.c0, rt0.c1)) AND ((0xffffffff81b52bb3, v0.c0, rt0.c0))) IN ());SELECT RANK() OVER () FROM v0; -- 0ms;
SELECT ALL CAST(((v0.c0)=(rt0.c0)) AS NUMERIC), ((((rt0.c2)>(rt0.c1)))<(((rt0.c1) IS FALSE))), ((MAX(v0.c0)) BETWEEN (((rt0.c0)|(rt0.c1))) AND (rt0.c2 COLLATE RTRIM)) FROM rt0, v0 WHERE ((~ (CASE x'3410'  WHEN NULL THEN NULL WHEN '댖UTM	LSM' THEN NULL WHEN 0xffffffffe0bd7a21 THEN x'0321' ELSE x'' END))); -- 0ms;
SELECT ALL COALESCE(DISTINCT (~ (rt0.c0)), ((v0.c0)>(v0.c0))) FROM rt0 NOT INDEXED, v0; -- 0ms;
SELECT ((((((((v0.c0)OR(((rt0.c2)<(rt0.c0)))))OR('\|	m')))AND(AVG(rt0.c2))))AND(NULLIF(rt0.c2, v0.c0))), ((NULLIF(rt0.c0, rt0.c0))OR(((v0.c0) NOT NULL))), '	0' COLLATE RTRIM FROM rt0 WHERE ((((((x'') BETWEEN (-1.596580465E9) AND (x'')), ((0.5697631919562072)<=('-554228935')), ((-1234840286)IS NOT(x'd626'))))>=(((NOT ('2121350630')), ((NULL) NOT BETWEEN ('-1677221429') AND (x'')), ((NULL) BETWEEN (x'') AND (0.3679738909149022)))))) GROUP BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 ELSE v0.c0 END AS NUMERIC) HAVING (((rt0.c1 IN (v0.c0, rt0.c0)))LIKE((rt0.c0 IN (rt0.c2, rt0.c0)))) ORDER BY (NOT (((rt0.c1) NOT BETWEEN (v0.c0) AND (NULL)))) DESC  NULLS LAST, (((v0.c0 IN (rt0.c0))) NOT BETWEEN (x'e37f') AND (HEX(DISTINCT v0.c0))) ASC;SELECT DISTINCT CASE ((rt0.c0)|(v0.c0))  WHEN ((rt0.c1) NOTNULL) THEN ((v0.c0) IS FALSE) ELSE CAST('-1833870371' AS INTEGER) END FROM rt0;SELECT rt0.c2 FROM v0 WHERE (((CASE '0.4344518831086981'  WHEN '0.8822762117485585' THEN 0.7246921635932847 ELSE NULL END)>(CAST('1001217002' AS REAL))));SELECT (((((rt0.c2, rt0.c0, v0.c0))>((rt0.c2, rt0.c1, rt0.c1)))) ISNULL) FROM rt0 GROUP BY ((((rt0.c2)AND(rt0.c0)))OR(rt0.c2)) COLLATE BINARY, CAST(((((v0.c0)AND('/e7T*Z')))OR(v0.c0)) AS NUMERIC), (((CASE WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN v0.c0 WHEN v0.c0 THEN rt0.c0 ELSE rt0.c0 END))<((((((((((v0.c0)AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c2))))) HAVING rt0.c1;SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END)<>(((rt0.c1) ISNULL))), (NOT (rt0.c2 COLLATE RTRIM)), LIKE(x'', ((rt0.c0) ISNULL)) FROM v0 WHERE ((((((0.7568083861426619)) BETWEEN ((NULL)) AND ((742033791))))|(((-1016671430)&(0.06633581457759474)))));SELECT CAST(rt0.c2 AS BLOB) COLLATE BINARY FROM rt0, v0 WHERE (((CASE WHEN x'' THEN 0.9983800583422836 WHEN 'h	''{粤X''z' THEN x'' WHEN -1e500 THEN NULL ELSE 0xca82538 END)IS(CAST(0.8869044345696007 AS NUMERIC)))); -- 1ms;
SELECT rt0.c1, 0.28413346024777564, '1184220661' FROM rt0, v0 LIMIT 2073408701; -- 0ms;
SELECT DISTINCT ((((rt0.c1)IS(rt0.c2)))<<(((rt0.c2)GLOB(rt0.c2)))) FROM rt0, v0 GROUP BY x''; -- 0ms;
SELECT DISTINCT rt0.c2, CASE ((((rt0.c0)AND(v0.c0)))AND(v0.c0))  WHEN ((rt0.c2)<<(v0.c0)) THEN (('hꊂ0g\a2') ISNULL) END, rt0.c1 FROM v0, rt0; -- 0ms;
SELECT ALL (((SUM(v0.c0)))<(((v0.c0 IN ())))), CASE WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN 0xffffffffec7bcd32 THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 WHEN NULL THEN v0.c0 WHEN v0.c0 THEN rt0.c2 END THEN rt0.c0 ELSE '1312994980' END, '-1172352218' FROM rt0;SELECT ALL (NOT ((((rt0.c1))<>((rt0.c1))))) FROM v0, rt0 GROUP BY ((- (x'')) IN ()) HAVING TYPEOF(DISTINCT ((rt0.c1) NOT BETWEEN (v0.c0) AND (rt0.c2))); -- 0ms;
SELECT ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)||(rt0.c0)) FROM rt0 LIMIT 630304729 OFFSET 1459924167; -- 0ms;
SELECT DISTINCT ((TOTAL(rt0.c2)) BETWEEN (rt0.c1) AND ((+ (v0.c0)))) FROM rt0, v0; -- 0ms;
SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((v0.c0)))) IS FALSE), (~ (((rt0.c0)OR(v0.c0)))), LAG(((0.5695224703722185)>(v0.c0 COLLATE RTRIM)), ABS(((v0.c0)IS NOT(v0.c0))), (LIKELIHOOD(DISTINCT v0.c0, 0.874501345008941) IN ())) OVER () FROM v0;SELECT LAG(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 END COLLATE RTRIM, ((rt0.c1)LIKE(rt0.c0)) COLLATE RTRIM, ((CAST(rt0.c0 AS NUMERIC))IS(CAST(rt0.c0 AS INTEGER)))) OVER () FROM rt0 WHERE ('\n旃%>?3' COLLATE NOCASE); -- 0ms;
SELECT ((((COALESCE(rt0.c1, rt0.c1))OR(((((rt0.c0)OR(rt0.c1)))OR(v0.c0)))))OR((~ (rt0.c1)))) FROM rt0 ORDER BY ((rt0.c0) BETWEEN (COALESCE(rt0.c1, rt0.c1)) AND ((((rt0.c2)) BETWEEN ((0.6069049234735613)) AND ((rt0.c1))))) ASC;SELECT (- (CAST(NULL AS NUMERIC))) FROM rt0, v0 ORDER BY CASE ((rt0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))  WHEN (rt0.c1 IN ()) THEN ((((rt0.c0)AND(rt0.c1)))AND(rt0.c1)) ELSE '' COLLATE NOCASE END  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((v0.c0))) IN ()) FROM rt0; -- 0ms;
SELECT ALL TOTAL(((rt0.c1)<>(rt0.c0))) OVER () FROM v0 WHERE ((+ ((('-557580346')IS(NULL)))));SELECT (rt0.c1 COLLATE NOCASE IN ()) FROM v0 WHERE (((0.5927188397373715 IN ()) IN ())); -- 0ms;
SELECT DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE BINARY FROM rt0, v0 LIMIT -1034631645 OFFSET 603293748; -- 0ms;
SELECT DISTINCT (NOT (v0.c0 COLLATE NOCASE)) FROM v0; -- 1ms;
SELECT (((rt0.c1)) BETWEEN ((SUM(rt0.c1))) AND (('828092327'))) FROM rt0, v0 ORDER BY 0.5697631919562072, ((((NULL COLLATE NOCASE)AND((v0.c0 IN (rt0.c2)))))OR(((rt0.c0)|('901303886')))); -- 0ms;
SELECT DISTINCT ((~ (x'')) IN ()) FROM rt0, v0; -- 0ms;
SELECT DISTINCT v0.c0 FROM rt0, v0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) IS TRUE) COLLATE RTRIM) FROM rt0 WHERE ((- ((NOT (NULL))))); -- 0ms;
SELECT DISTINCT '-1684090581', CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END COLLATE NOCASE, ((rt0.c2 COLLATE RTRIM) NOTNULL) FROM rt0 WHERE (((((0.16072141620347102)AND(0Xffffffffdbf9a0d0)))+(((NULL) BETWEEN (NULL) AND (NULL))))) LIMIT 964226499 OFFSET -442655216;SELECT ((((x'')OR(rt0.c1 COLLATE BINARY)))AND('yc*h/c')), ((rt0.c2) BETWEEN (UPPER(rt0.c1)) AND (((rt0.c2) ISNULL))), ((((((rt0.c1)OR(rt0.c1)))OR(rt0.c0))) NOT NULL) FROM rt0, v0; -- 0ms;
SELECT DISTINCT ((v0.c0) IS FALSE) COLLATE NOCASE FROM v0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS BLOB))<((((x'c92a'))<=((rt0.c0))))), CASE WHEN MIN(v0.c0) THEN ((rt0.c1)||(NULL)) END, x'' FROM rt0 LIMIT -557580346;SELECT DISTINCT ((((((((((((((((((rt0.c2) IS FALSE))AND((NOT (rt0.c2)))))OR(CASE v0.c0  WHEN v0.c0 THEN rt0.c2 END)))AND(((rt0.c0)<(rt0.c0)))))AND(GROUP_CONCAT(v0.c0))))AND(TOTAL(rt0.c2))))AND((NOT (rt0.c2)))))OR(CAST(rt0.c2 AS REAL))))AND(rt0.c2)) FROM rt0, v0 WHERE (((0.07042982893050165) NOT BETWEEN ('B2''糑W T') AND (1679634591)) COLLATE BINARY); -- 0ms;
SELECT ((((((('|.', v0.c0, rt0.c2, x'', v0.c0, rt0.c0, rt0.c0))<((rt0.c2, v0.c0, v0.c0, rt0.c1, rt0.c2, rt0.c2, rt0.c0))))AND(((rt0.c0)>=(v0.c0)))))AND(((rt0.c0) NOT NULL))) FROM v0, rt0 WHERE (((CAST(0Xffffffffdf8be99b AS TEXT)) NOT BETWEEN ('' COLLATE RTRIM) AND (((((((((0xffffffffe9cee4c6)OR(0.4494652675730808)))OR(NULL)))AND('')))AND(''))))); -- 0ms;
SELECT v0.c0, (((((v0.c0)AND(rt0.c0)))OR(rt0.c1)) IN (v0.c0 COLLATE NOCASE)), json_type(GROUP_CONCAT(rt0.c0)) FROM v0 WHERE ((((NULL)) BETWEEN ((((NULL)-(0.11440148083856772)))) AND ((((0.16077511769800235) IS TRUE)))));SELECT DISTINCT SUM(CAST('1863824917' AS INTEGER)) FROM rt0 WHERE ((NOT ((('2073408701') BETWEEN ('837237021') AND (''))))) ORDER BY CAST((rt0.c0 IN ()) AS BLOB) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (((rt0.c0 IN (rt0.c1, '-604397360')))IS NOT(3.87743462E8)) FROM rt0 WHERE ('437163574'); -- 0ms;
SELECT DISTINCT (((((v0.c0))<((rt0.c2)))) IS TRUE), (((rt0.c2)) BETWEEN ((SUM(rt0.c2))) AND ((CAST(rt0.c1 AS BLOB)))), (((rt0.c2)) BETWEEN (((((v0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c2))))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))) FROM v0, rt0 WHERE (CAST((~ ('837237021')) AS INTEGER)) GROUP BY (((rt0.c0 IN (rt0.c2)))>=(UNICODE(v0.c0))), CAST((((rt0.c2, v0.c0, rt0.c1)) BETWEEN ((v0.c0, v0.c0, rt0.c1)) AND (('', NULL, rt0.c1))) AS REAL), (((v0.c0, rt0.c0, rt0.c2)) BETWEEN ((((((((((rt0.c0)OR(rt0.c0)))AND(v0.c0)))AND(v0.c0)))AND(0.17171504755745792)), ((((rt0.c1)OR('-1452340806')))OR(v0.c0)), (rt0.c1 IN (v0.c0)))) AND (((((v0.c0, v0.c0, v0.c0))<=((v0.c0, rt0.c0, v0.c0))), ((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)), ((((rt0.c2)AND(rt0.c1)))AND(rt0.c1))))), ((((((rt0.c0, rt0.c2, rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c0, rt0.c0)) AND ((v0.c0, rt0.c1, rt0.c0)))))>=((CASE WHEN rt0.c0 THEN v0.c0 END))), (((rt0.c2)) NOT BETWEEN (((rt0.c0 IN ()))) AND ((((rt0.c0)%(v0.c0))))), CAST(((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)) AS INTEGER), ((ABS(DISTINCT rt0.c0))<(((((rt0.c2)AND(v0.c0)))OR(rt0.c2)))) HAVING CASE NULL  WHEN (((v0.c0, rt0.c1, rt0.c2)) BETWEEN ((0xffffffffbb204f0f, rt0.c0, rt0.c1)) AND ((v0.c0, rt0.c0, rt0.c1))) THEN ((rt0.c1)<(v0.c0)) WHEN (v0.c0 IN ()) THEN ((v0.c0) NOTNULL) WHEN ((rt0.c1)OR(v0.c0)) THEN (~ (rt0.c0)) ELSE LIKELY(rt0.c0) END; -- 0ms;
SELECT ((((((((((((((rt0.c2)<=(rt0.c1)))OR(((rt0.c2) IS FALSE))))OR(-1655925620)))OR(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)))AND(((((((((rt0.c2)OR(rt0.c1)))AND(0.6683681633558526)))OR(0.436981006402983)))AND(v0.c0)))))OR((((v0.c0))<((v0.c0))))))OR(CASE WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END)) FROM rt0, v0; -- 0ms;
SELECT ALL CASE CAST(rt0.c2 AS BLOB)  WHEN ((v0.c0)OR(rt0.c2)) THEN ((rt0.c0)&(rt0.c0)) END FROM rt0;SELECT DISTINCT rt0.c1 FROM v0, rt0 WHERE (CAST((('Etpy')%(0.03901970400392918)) AS NUMERIC)); -- 0ms;
SELECT MIN(CASE rt0.c0  WHEN v0.c0 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '' WHEN rt0.c0 THEN rt0.c2 END) FROM rt0, v0 ORDER BY ((((((rt0.c2)OR(NULL)))OR(rt0.c2))) ISNULL) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT MAX(((rt0.c2) NOTNULL)), CASE 7.33729398E8  WHEN rt0.c1 COLLATE NOCASE THEN (- (rt0.c2)) ELSE ((NULL)AND(rt0.c1)) END, MIN((- (rt0.c1))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT (((((((rt0.c0)OR(rt0.c2)))AND(x'7802'))))>((((rt0.c2)OR(rt0.c2))))) FROM v0;SELECT DISTINCT (((v0.c0)) BETWEEN ((((rt0.c0)GLOB(rt0.c0)))) AND ((COUNT(v0.c0)))), 7.97652117E8, (~ (CAST(rt0.c2 AS TEXT))) FROM v0 WHERE (((((NULL COLLATE BINARY)OR(((NULL)>('-1034631645')))))OR(((0.39699764275134364)GLOB('0.6559614941755091')))));SELECT ALL SUBSTR(rt0.c2 COLLATE BINARY, JULIANDAY(rt0.c1, v0.c0, rt0.c0)) FROM rt0, v0 WHERE (((('1979299085') BETWEEN (0X11ccbeaa) AND ('z	')) IN ())); -- 0ms;
SELECT ((TRIM(DISTINCT v0.c0, rt0.c0))|(NULLIF(DISTINCT rt0.c2, '250374468'))) FROM rt0, v0 WHERE ((((((0.6312582706567 IN ()))AND((~ ('')))))OR(CASE x'650b'  WHEN 0.9490941303438751 THEN NULL ELSE -1097651193 END))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) ISNULL)) NOT NULL) FROM rt0, v0 WHERE (((CASE WHEN '()' THEN 0.057348284826892804 ELSE '' END) IS FALSE)); -- 0ms;
SELECT DISTINCT (('zj')%(((v0.c0)>=(rt0.c1)))) FROM v0, rt0 WHERE (UPPER(UNLIKELY(x''))); -- 1ms;
SELECT DISTINCT PRINTF(rt0.c0) COLLATE BINARY, (~ ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))), CUME_DIST() OVER () FROM rt0, v0 WHERE (((TRIM(DISTINCT '0}⠽l<', 661439636)) NOT NULL)) GROUP BY -1177924736;SELECT DISTINCT (~ (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0, v0 WHERE ((NOT (((x'f502') NOT BETWEEN ('0.22185787464362894') AND (NULL))))) GROUP BY ((((~ (rt0.c0))))<>((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c2 END))) ORDER BY NULL ASC  NULLS LAST, CASE WHEN (+ (rt0.c2)) THEN rt0.c0 ELSE ((v0.c0) IS TRUE) END  NULLS LAST; -- 0ms;
SELECT DISTINCT (NULL COLLATE BINARY IN (((rt0.c0)<(rt0.c1)), (+ (rt0.c2)))) FROM rt0, v0 WHERE ((((('1386760738') NOT NULL)) BETWEEN (-1.67203264E9) AND (NULL))); -- 0ms;
SELECT (+ (-3.33069605E8)) FROM rt0, v0 WHERE (((x'ee44' COLLATE RTRIM) BETWEEN (('' IN ())) AND ((('C gAU尘') NOT BETWEEN ('^7z') AND ('186671379'))))); -- 0ms;
SELECT DISTINCT (((((v0.c0))>=((rt0.c1)))) BETWEEN (LOWER('C gAU尘')) AND ((+ (v0.c0)))) FROM rt0 WHERE ((json_object(0.8247965234602879, NULL) IN ())) GROUP BY CASE ((rt0.c0)/(rt0.c0))  WHEN (NOT (v0.c0)) THEN CAST(v0.c0 AS TEXT) END, json_extract(rt0.c2, (~ (rt0.c0))), ((rt0.c1)>(rt0.c0)) COLLATE NOCASE;SELECT DISTINCT (+ (CASE rt0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0, v0 WHERE ((NOT (('-1767335645' IN ())))); -- 0ms;
SELECT DISTINCT ((rt0.c2) IS FALSE) FROM rt0 WHERE ((((0X22765bb9 IN (0.2656756579507331)))<<(CASE NULL  WHEN 'z!' THEN x'' ELSE x'' END))); -- 1ms;
SELECT DISTINCT rt0.c0, ((((((((v0.c0 COLLATE RTRIM)OR((((v0.c0, '1898871554', rt0.c1)) BETWEEN ((rt0.c2, v0.c0, v0.c0)) AND ((rt0.c0, rt0.c1, rt0.c0))))))OR(((v0.c0)AND(rt0.c1)))))AND((rt0.c0 IN ()))))OR((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((v0.c0))))), (((SUM(v0.c0)))!=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))), ((COUNT('')) NOT BETWEEN (load_extension(rt0.c0)) AND (((rt0.c2)<=(rt0.c0)))), MIN(((rt0.c0) NOT BETWEEN (rt0.c1) AND (v0.c0))) FROM rt0, v0 WHERE ((((x'' IN (NULL, 0.6312582706567)))<(((((((((NULL)OR('16492343')))OR(x'')))OR(0.436981006402983)))OR(x''))))) GROUP BY ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)) COLLATE RTRIM ORDER BY CAST(((((x'')AND(rt0.c2)))OR(NULL)) AS INTEGER)  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST((+ (rt0.c1)) AS INTEGER) FROM rt0; -- 0ms;
SELECT ((((((v0.c0)>=(rt0.c1)))AND(rt0.c1)))OR(CASE rt0.c2  WHEN -541154102 THEN rt0.c1 END)) FROM v0;SELECT DISTINCT ((1586779932)IS NOT(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))) FROM v0 NOT INDEXED ORDER BY (- (v0.c0)) COLLATE RTRIM, CAST(((rt0.c2)AND(rt0.c2)) AS BLOB)  NULLS LAST;SELECT TRIM(((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN v0.c0 ELSE rt0.c2 END) FROM rt0, v0; -- 0ms;
SELECT DISTINCT ((((((((((((GROUP_CONCAT(v0.c0))AND(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 END)))AND((((v0.c0, rt0.c0, 0.6920938083935322)) NOT BETWEEN ((rt0.c0, NULL, v0.c0)) AND ((v0.c0, v0.c0, rt0.c0))))))OR(SUM(rt0.c2))))AND(CAST(rt0.c0 AS BLOB))))AND(AVG(rt0.c2))))OR(COUNT(*))), (NOT (CASE WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END)), (((((('-465458389')OR(v0.c0)))OR(rt0.c2)))<<(((rt0.c1)||(rt0.c0)))) FROM rt0 GROUP BY UPPER(rt0.c2);SELECT DISTINCT ABS(((((rt0.c2)AND(v0.c0)))OR(rt0.c1))) FROM v0 WHERE (((('-185920222', NULL, '0.1569288177833854')) NOT BETWEEN (((((NULL, 0.466246801926939, NULL))==((1330079366, NULL, NULL))), ((((129296998)AND('797652117')))OR(0.1569288177833854)), NULL COLLATE BINARY)) AND ((((0.8100253870962425) BETWEEN (0.5927176421862134) AND (0Xfffffffffa9e2356)), ((0.8851003491178197) BETWEEN ('O1952:3259805369073247746-r') AND (x'')), (((x'', x'', '641884161'))=((220430498, x'c222', -657492961))))))) ORDER BY CAST(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS REAL), ((((rt0.c1)GLOB(rt0.c2))) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))OR(v0.c0))) AND (rt0.c1 COLLATE RTRIM)) DESC;SELECT DISTINCT (((('+?.uH') BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (x'')), CAST(GROUP_CONCAT(v0.c0) AS NUMERIC), CASE NULL  WHEN x'553a' THEN ((v0.c0)!=(rt0.c2)) WHEN GROUP_CONCAT(rt0.c0) THEN v0.c0 COLLATE BINARY WHEN 'E阶rZ%캀' THEN rt0.c0 COLLATE RTRIM END FROM rt0 GROUP BY ((v0.c0) NOT NULL);SELECT v0.c0 FROM v0, rt0 WHERE (TYPEOF((((((((('-554228935')AND('-1172352218')))AND(x'69c6')))AND(NULL)))OR(x'')))); -- 1ms;
SELECT DISTINCT (((((~ (rt0.c1)))OR(rt0.c0)))AND(v0.c0 COLLATE RTRIM)) FROM v0, rt0; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c1) NOTNULL) THEN ((rt0.c2)>(rt0.c2)) WHEN rt0.c1 COLLATE RTRIM THEN NULLIF(v0.c0, v0.c0) WHEN rt0.c1 THEN (((rt0.c0))<>((v0.c0))) ELSE ((rt0.c2)<=(rt0.c0)) END, (((rt0.c2 IN (rt0.c0)))AND(rt0.c1)), CAST(0xffffffffa0967587 AS REAL), (((((((((((v0.c0))<=((rt0.c0))))OR(((rt0.c2)LIKE(v0.c0)))))OR(((v0.c0)GLOB(rt0.c0)))))AND(SUM(v0.c0))))OR(((0.4947779796597854) NOT NULL))), (~ ((- (rt0.c2)))) FROM rt0 WHERE (((CASE WHEN '2073408701' THEN NULL ELSE NULL END)>>(CAST(x'' AS NUMERIC))));SELECT DISTINCT (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) IN ()), ((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN ((((rt0.c0, v0.c0, v0.c0))==((rt0.c0, rt0.c0, rt0.c1)))) AND (('ef]꣛j_\n' IN ()))), ((((v0.c0 IN ())))=((MIN(v0.c0)))) FROM v0 LIMIT -1515317201 OFFSET 591713297;SELECT ALL (NOT (AVG(rt0.c0))), TRIM(DISTINCT ((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), LIKELIHOOD('0.7210341854771557', 0.5258745978966296)), 'iuA5Ed' FROM rt0 WHERE (((((x'' IN ()), ((NULL) BETWEEN (x'3a6ef883') AND (NULL)), NULL, 0.8025322117384632, ((NULL) BETWEEN (-2088462865) AND (NULL))))=((CAST(x'' AS REAL), ('' IN (NULL)), ((x'd7b6') NOT NULL), json_extract(NULL, x'7376bf9e'), ((((((((0xffffffff8a17e856)OR(0.44380039321714615)))OR(0.28094755190127896)))OR(0.7479863775208504)))OR(0Xffffffffc254c623))))));SELECT DISTINCT (CAST(rt0.c0 AS REAL) IN ()) FROM v0 WHERE (LIKELIHOOD((NULL IN ()), 0.1391580187124295)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)*(v0.c0)))OR(CASE rt0.c2  WHEN rt0.c2 THEN 0.3120240012668781 ELSE v0.c0 END)))OR(COUNT(*))))AND(((v0.c0) NOT BETWEEN (rt0.c2) AND (v0.c0)))))AND(rt0.c0)), ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1))) NOTNULL), CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END COLLATE RTRIM FROM rt0 WHERE (((CAST('1568398591' AS BLOB))OR(((0.32578823289123404)IS NOT('rg')))));SELECT ALL CASE WHEN (~ (x'')) THEN ((rt0.c1)>>(rt0.c0)) WHEN (~ (rt0.c2)) THEN ((rt0.c2)IS NOT(0.2480306226521206)) WHEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2)) THEN COALESCE(DISTINCT rt0.c2, rt0.c2) ELSE CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c2 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END END, CAST(CAST(v0.c0 AS REAL) AS TEXT), highlight(CAST(NULL AS BLOB), (rt0.c2 IN (rt0.c2)), (NOT (rt0.c2)), ((rt0.c2) IS FALSE)), ((((((((v0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))OR('')) COLLATE BINARY COLLATE NOCASE, CASE (rt0.c2 IN ())  WHEN (+ (rt0.c2)) THEN rt0.c0 COLLATE NOCASE END FROM rt0, v0;SELECT DISTINCT AVG('-372316986'), DENSE_RANK() OVER (), CASE WHEN ((((rt0.c0)AND(rt0.c0)))OR(rt0.c0)) THEN CAST(rt0.c0 AS NUMERIC) WHEN GROUP_CONCAT(rt0.c1) THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) WHEN SUM(rt0.c0) THEN ((rt0.c1)|(v0.c0)) END FROM rt0, v0 WHERE (CASE WHEN (NULL IN ()) THEN CASE NULL  WHEN '797652117' THEN NULL ELSE NULL END WHEN ((('866901918'))>((0.3781103927929389))) THEN ((((0.4062920542872438)AND(1.564070598E9)))OR(837096804)) WHEN ((0.453473402408771)%(NULL)) THEN CASE x''  WHEN 'N!N}Qa1^V' THEN 0.9724423061921553 WHEN ' <E' THEN NULL WHEN NULL THEN -204293562 WHEN 0.6618053071869683 THEN '-442568512' WHEN '-604397360' THEN NULL ELSE NULL END ELSE (NOT (x'')) END); -- 0ms;
SELECT DISTINCT LAST_VALUE((((rt0.c2)) BETWEEN ((HEX(rt0.c2))) AND ((CAST(rt0.c0 AS TEXT))))) OVER (), 0.7504625915145839, (('-865841726') NOT BETWEEN ('') AND ((~ (rt0.c2)))), CASE WHEN rt0.c0 COLLATE NOCASE THEN GROUP_CONCAT(v0.c0) WHEN LIKELIHOOD(DISTINCT v0.c0, 0.2241542954437472) THEN rt0.c1 COLLATE BINARY WHEN x'' THEN LIKELY(rt0.c1) ELSE '+?.uH' END, CAST((+ (rt0.c0)) AS TEXT) FROM rt0 WHERE (((((x'c0a6'))=((0.6726270080926038))) IN ())) ORDER BY (NOT (rt0.c1)), 0.5950724335034335, CASE (rt0.c2 IN ())  WHEN '' THEN CAST(v0.c0 AS NUMERIC) WHEN rt0.c1 THEN ((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c1)%('')) ELSE ((v0.c0) BETWEEN (x'') AND (rt0.c0)) END;SELECT DISTINCT TOTAL(CASE WHEN rt0.c0 THEN rt0.c1 WHEN v0.c0 THEN NULL WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END) FROM rt0 WHERE (((((x'') BETWEEN (0.379874116577113) AND (NULL)))|((((('wKZ,~_')OR(NULL)))AND(NULL)))));SELECT ALL ('1989708349' IN (MAX(rt0.c0))), MIN((NOT (rt0.c0))), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE v0.c0 END)|(((((((((0.20300078107366426)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))AND(v0.c0)))) FROM rt0;SELECT COUNT((~ (rt0.c1))) FROM v0, rt0 WHERE (CAST(IFNULL(DISTINCT '', 0.71624787965065) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((' <e' COLLATE NOCASE)>=((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))) FROM v0;SELECT DISTINCT UPPER(COALESCE(DISTINCT rt0.c0, rt0.c1, x'', rt0.c1)), (((NOT (rt0.c2))) NOT BETWEEN (((rt0.c0)<=('-1330527859'))) AND (COUNT(*))), CAST(MAX(rt0.c1) AS INTEGER) FROM v0 WHERE (((0.328207120919919)-(((x'') IS FALSE))));SELECT v0.c0 FROM rt0 WHERE (((CAST(0.675816172285527 AS REAL))GLOB(((NULL)-('1989708349')))));SELECT DISTINCT (((NOT (rt0.c0)))%('m')) FROM rt0; -- 0ms;
SELECT DISTINCT (((((v0.c0)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) NOT NULL), (((0.6943377294578125 IN (v0.c0)))OR(0x58a91a9a)), '' FROM rt0;SELECT ALL COUNT(*) OVER (), ((CAST(v0.c0 AS INTEGER))!=((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))), (((x'119c' IN ()))IS NOT(((v0.c0) IS TRUE))) FROM v0 ORDER BY (((rt0.c2)) BETWEEN ((COALESCE(DISTINCT 1614183441, rt0.c1))) AND (((~ (rt0.c1)))))  NULLS FIRST;SELECT rt0.c0 FROM rt0, v0 WHERE (((TRIM(DISTINCT NULL, x'46f60f1d')) NOT NULL)); -- 0ms;
SELECT DISTINCT SUM((rt0.c1 IN (v0.c0, ''))) FROM v0 WHERE ('') ORDER BY rt0.c2, (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))<(rt0.c0)) ASC  NULLS LAST;SELECT DISTINCT (NOT (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), AVG((~ (rt0.c0))), CASE UNLIKELY(v0.c0)  WHEN ((rt0.c0) NOT NULL) THEN (v0.c0 IN ()) END, ((TRIM(rt0.c1)) ISNULL), CASE WHEN json_array_length(rt0.c2) THEN CAST(v0.c0 AS NUMERIC) END, (((((rt0.c0)AND(v0.c0)))AND(rt0.c2)) IN ()), ((((((((((rt0.c2)*(v0.c0)))OR(x'')))OR((- (rt0.c2)))))AND(0.18933081955749775)))OR(MIN(v0.c0))) FROM v0 WHERE (((((NULL)=(x''))) ISNULL));SELECT ALL CAST(MIN(rt0.c2, rt0.c0) AS BLOB) FROM rt0 WHERE (CASE (- (NULL))  WHEN CAST('⟬s' AS TEXT) THEN ((((-211054087)AND(x'')))AND(1088621308)) END); -- 0ms;
SELECT rt0.c0, x'', CASE (((v0.c0))<=((rt0.c0)))  WHEN (rt0.c0 IN ()) THEN v0.c0 COLLATE NOCASE ELSE (~ (rt0.c1)) END, (((((((((rt0.c1)AND(rt0.c1)))OR(v0.c0)))OR(v0.c0)))AND(rt0.c2)) IN ()), ((((rt0.c1) IS TRUE))+(((v0.c0)>>(v0.c0)))) FROM rt0 WHERE ((('\r ᩀOuyDM}')<>(x'')) COLLATE NOCASE) ORDER BY (- ((+ (rt0.c0))));SELECT DISTINCT x'' FROM rt0, v0; -- 0ms;
SELECT DISTINCT MAX(CASE v0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) FROM v0 WHERE (((CASE '%M*[>\r'  WHEN '-604397360' THEN 0.7376120098373874 END) ISNULL));SELECT DISTINCT CASE WHEN COUNT(*) THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)) END, NULL, (NOT (0.7210341854771557)) FROM v0 WHERE (((((NULL) ISNULL))GLOB(((((1625032593)AND(-1.67203264E9)))AND(x'')))));SELECT DISTINCT (((rt0.c0, rt0.c2, v0.c0, rt0.c0, rt0.c2)) BETWEEN (('136068518', rt0.c0, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c2, x'', rt0.c2, v0.c0, v0.c0))) COLLATE NOCASE COLLATE RTRIM, (((rt0.c1 IN ())) IS FALSE), GROUP_CONCAT((((20761950))>((rt0.c1))) COLLATE BINARY) FROM rt0, v0; -- 1ms;
SELECT DISTINCT ((((((rt0.c0) NOTNULL))AND(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)))))OR((((rt0.c0, 0x1fcc1867, rt0.c1))>((x'f086', rt0.c1, rt0.c1))))) FROM rt0; -- 0ms;
SELECT (((- (rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c2)))OR(v0.c0))) AND ((('ㅟ49O<b') NOT NULL))), ((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)) COLLATE NOCASE, (+ (CAST(rt0.c0 AS BLOB))) FROM rt0 LIMIT 1656700183 OFFSET -993180287;SELECT ALL v0.c0 FROM rt0, v0 LIMIT -185920222; -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS FALSE)) NOTNULL) FROM v0, rt0 GROUP BY ((CHANGES())-(0xffffffffc6b47088)); -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c0 IN (rt0.c0, rt0.c2)) THEN (((rt0.c0, rt0.c0, rt0.c0))<>((rt0.c2, rt0.c1, rt0.c2))) ELSE (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))) END, (((rt0.c2)) NOT BETWEEN ((((rt0.c1)LIKE(rt0.c0)))) AND (((~ (NULL))))), ((((0.03538970039620126)<<(rt0.c2)))>(AVG(rt0.c1))), ((((rt0.c0) IS TRUE))||((rt0.c0 IN (rt0.c1)))), ((((rt0.c0)LIKE(rt0.c2))) NOT BETWEEN (((rt0.c0) IS TRUE)) AND (CASE WHEN rt0.c2 THEN 0.6897437554290764 END)) FROM v0, rt0 WHERE (((CAST(-1616252597 AS NUMERIC))OR(((((0.9716110892501456)AND('Z1y#寝')))OR(NULL))))) ORDER BY CASE ((rt0.c2) ISNULL)  WHEN ((((((((rt0.c0)AND(v0.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(v0.c0)) THEN ((rt0.c0)>=(rt0.c1)) WHEN HEX(v0.c0) THEN ((((((((rt0.c2)OR(v0.c0)))OR(rt0.c0)))AND(-2.033843215E9)))OR(v0.c0)) WHEN (rt0.c0 IN (rt0.c2)) THEN CAST(rt0.c2 AS REAL) ELSE '-1922332688' END ASC  NULLS FIRST, CASE WHEN (rt0.c1 IN (rt0.c2, rt0.c2)) THEN ((rt0.c2)<=(rt0.c2)) WHEN CASE WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN ((rt0.c1)>=(rt0.c0)) WHEN ((v0.c0)+(rt0.c1)) THEN CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END WHEN '-185920222' THEN CASE v0.c0  WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END WHEN ((v0.c0)LIKE(rt0.c1)) THEN ((rt0.c2) ISNULL) ELSE ((rt0.c2)-(rt0.c0)) END DESC; -- 1ms;
SELECT DISTINCT (((rt0.c2 IN (v0.c0, rt0.c0)))=(CASE rt0.c0  WHEN '0.8851003491178197' THEN rt0.c2 END)), (rt0.c2 IN (rt0.c0)) COLLATE BINARY, (((rt0.c1)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((x''))))) AND (((NOT (rt0.c0))))), ((rt0.c0) ISNULL), (((CASE rt0.c1  WHEN rt0.c1 THEN v0.c0 END))!=((x''))) FROM v0, rt0 WHERE ((x'4563' COLLATE BINARY IN ())); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c0 END)-((NOT (v0.c0)))) FROM rt0, v0 WHERE (NULL); -- 0ms;
SELECT DENSE_RANK() OVER () FROM v0 LIMIT 186671379; -- 0ms;
SELECT DISTINCT ((((NULL) NOT BETWEEN (rt0.c2) AND (rt0.c2)))<<((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c0))))) FROM v0 ORDER BY rt0.c2 ASC  NULLS LAST, (((~ (v0.c0)))*(((0.777256256552095)>(rt0.c2)))) DESC;SELECT (rt0.c2 IN ()) FROM rt0 WHERE (((((NULL)GLOB('MC 4n~')))GLOB((((x'', NULL, NULL))==((NULL, 0xffffffffe1663841, -940854056)))))); -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))OR(v0.c0)))AND(rt0.c2)))AND(v0.c0)))/(((rt0.c2)>>(rt0.c1)))), ((((CASE WHEN rt0.c2 THEN rt0.c1 WHEN '' THEN rt0.c2 WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END)AND((v0.c0 IN ()))))OR(x'588d')), TOTAL(((0x2931c06)<(rt0.c2))), CAST(SUM(rt0.c0) AS BLOB), COUNT(*) COLLATE RTRIM FROM rt0, v0 WHERE (((CAST(0.5595690858768556 AS NUMERIC)) IS FALSE)); -- 0ms;
SELECT ((rt0.c1)%(((rt0.c1)*(rt0.c1)))), (((((rt0.c2)||(v0.c0)), rt0.c2, rt0.c1 COLLATE RTRIM))!=((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)), ((('e{-/'))<((rt0.c0))), IFNULL(rt0.c2, rt0.c2)))), (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 END IN (((rt0.c0) NOT NULL))) FROM v0 WHERE ((('480863532')||((~ (0.06633581457759474))))) INTERSECT SELECT ALL ((MAX(rt0.c0)) NOT NULL), 0x61f5b76c, (((((rt0.c0) ISNULL)))=((((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))))) FROM rt0;SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c0 AS BLOB)) FROM rt0 ORDER BY (((((rt0.c1)/(x''))))<((((v0.c0)<(rt0.c0))))) ASC  NULLS LAST, (((((rt0.c2)OR(2.100132172E9)))OR(v0.c0)) IN (v0.c0))  NULLS FIRST;SELECT ALL ((TOTAL(v0.c0)) IS FALSE) FROM rt0;SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ALL 0.02770065605956684 FROM rt0; -- 0ms;
SELECT DISTINCT AVG(rt0.c1) OVER ( PARTITION BY ((CASE WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (v0.c0) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c0)))), (((((((((((rt0.c1))>((rt0.c2))))OR(((v0.c0) BETWEEN (NULL) AND (rt0.c0)))))OR(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c2)))))AND(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))OR(v0.c0)))AND(v0.c0)))))OR('-1676867487')) ROWS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0 GROUP BY ((v0.c0)<((((x''))=((rt0.c2)))));SELECT ((rt0.c0 COLLATE RTRIM)LIKE(v0.c0 COLLATE BINARY)) FROM v0 WHERE (-8.84242566E8 COLLATE RTRIM);SELECT DISTINCT (~ (rt0.c1)) FROM rt0, v0; -- 0ms;
SELECT ((rt0.c2 IN ()) IN ()) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (+ (((v0.c0) IS FALSE))) FROM v0; -- 0ms;
SELECT ALL (NOT (SQLITE_COMPILEOPTION_USED(rt0.c2))) FROM v0, rt0 WHERE ((((JULIANDAY(480664652, '2079657551', 'Wx')))<(((('bs')IS(x'')))))) GROUP BY (((((rt0.c2)>>(v0.c0))))>=((v0.c0 COLLATE BINARY))) HAVING AVG(((x'')||(0xffffffffdcdf97f5))); -- 0ms;
SELECT ALL ((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0))) IS TRUE) FROM v0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((rt0.c0)AND(rt0.c0)))OR(v0.c0))) OVER () FROM rt0, v0; -- 0ms;
SELECT DISTINCT ((((NULL)OR(GROUP_CONCAT(rt0.c1))))OR(((v0.c0) IS TRUE))) FROM v0 WHERE ((((((~ ('-524453343')))AND(((x'')!=(0.7749070114731862)))))OR((0x79599ffc IN ()))));SELECT ALL (((CAST(rt0.c2 AS TEXT)))>(((rt0.c0 IN ())))), (((((((((((rt0.c2))<((rt0.c1))))AND(AVG(v0.c0))))AND(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)))))OR(COUNT(*))))OR((- (v0.c0)))), ((v0.c0 COLLATE BINARY) IS FALSE), ((rt0.c1 COLLATE RTRIM) BETWEEN (rt0.c1 COLLATE NOCASE) AND (rt0.c2)), (NOT (CAST(v0.c0 AS TEXT))) FROM rt0 WHERE (((((((((CAST(x'' AS INTEGER))AND(NULLIF(0.5914700676144528, x''))))OR(((NULL) BETWEEN (0Xffffffff805a69b3) AND (0.6683681633558526)))))AND(((NULL)|('')))))OR(((NULL) NOT BETWEEN ('1028751429') AND ('Infinityv|W7'))))) GROUP BY ((((rt0.c2) NOT NULL))>>(((v0.c0)|(rt0.c0))));SELECT ALL rt0.c1 FROM rt0 WHERE (CASE CASE WHEN NULL THEN x'' WHEN '1213431909' THEN 'vw{7a' WHEN -2.052923333E9 THEN NULL END  WHEN (0.5293449057621776 IN ()) THEN '-1218259510' WHEN ((1028751429) NOTNULL) THEN x'9f8e' WHEN ((NULL)-(NULL)) THEN ((NULL) BETWEEN ('XFY꾧X') AND ('455301428')) END) GROUP BY ((((v0.c0)||(v0.c0))) BETWEEN (0.39701937378771257) AND ((~ (rt0.c0))));SELECT ALL INSTR(AVG(v0.c0), ((v0.c0) BETWEEN (rt0.c0) AND (NULL))) FROM rt0;SELECT ((((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1))) IS TRUE) FROM rt0;SELECT ALL '' FROM v0; -- 0ms;
SELECT QUOTE(((rt0.c0)*(v0.c0))) FROM rt0 WHERE ((- ((('1271488370') NOT BETWEEN (0.9552369747005292) AND (0.46525818661454))))) GROUP BY ((((rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c1, '-1846229511', v0.c0)) AND ((rt0.c1, v0.c0, rt0.c0))) IN (rt0.c1 COLLATE RTRIM));SELECT ALL (((('1857075553')>=(0.02316081589324992))) NOT BETWEEN (TOTAL(rt0.c2)) AND ('1062939318')), TOTAL(CASE v0.c0  WHEN rt0.c0 THEN 'L3i.{}' END), ((('<A,', rt0.c0, v0.c0)) BETWEEN ((((((v0.c0)AND(rt0.c1)))AND(v0.c0)), CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN v0.c0 ELSE rt0.c1 END, MAX(v0.c0))) AND ((((rt0.c1)<(rt0.c0)), ((rt0.c2) NOTNULL), CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 END))) FROM rt0 WHERE (((((((((CAST(x'8027481b' AS REAL))AND((('')<=(NULL)))))OR(0xffffffffa1762db1)))AND(-7.3212823E8)))OR((((x'd9f8')) BETWEEN ((0.7228370129064922)) AND ((''))))));SELECT (((((((((rt0.c1 IN (rt0.c2)))AND((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))))AND(MAX(rt0.c2))))OR(rt0.c2)))OR(CASE WHEN 0.5697631919562072 THEN v0.c0 ELSE '136068518' END)) FROM rt0, v0; -- 0ms;
SELECT (- (CASE WHEN v0.c0 THEN rt0.c2 END)) FROM rt0 NOT INDEXED CROSS JOIN v0 ON CASE WHEN '260509976' THEN rt0.c1 END COLLATE NOCASE WHERE ((NOT (NULL COLLATE RTRIM))); -- 0ms;
SELECT NULL, AVG(((0X687d3a97)|(v0.c0))) FILTER(WHERE ((rt0.c1) IS TRUE)) OVER (), ((((rt0.c2)LIKE(rt0.c0)))!=(CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN 0.29879668665248293 WHEN v0.c0 THEN x'' END)) FROM rt0 WHERE (('' IN ())) GROUP BY (((v0.c0 IN ()))%(((v0.c0)>>(rt0.c1)))), ((rt0.c1) IS TRUE) COLLATE RTRIM, TRIM(DISTINCT (+ (rt0.c0))), ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)<>(CAST(NULL AS REAL))), CASE ((v0.c0)/(v0.c0))  WHEN ((rt0.c0)IS(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (460960285) AND (rt0.c2)) END, (((((v0.c0)=(rt0.c1))))<=((((NULL) NOTNULL)))), CASE WHEN CAST(rt0.c0 AS REAL) THEN ((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)) END ORDER BY -8.84890017E8  NULLS FIRST;SELECT DISTINCT CASE CAST(v0.c0 AS BLOB)  WHEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)) THEN -1.879356423E9 END FROM rt0, v0 NOT INDEXED WHERE (((((((((((((-984656150)OR(NULL)))OR(x'2503')))OR(NULL)))AND(1346471560)))OR(((195950437)||('')))))OR(x'' COLLATE BINARY))); -- 0ms;
SELECT CAST(rt0.c1 AS BLOB) FROM v0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((MIN(rt0.c2))!=(CASE '꾧'  WHEN rt0.c1 THEN v0.c0 END)) FROM v0, rt0; -- 1ms;
SELECT ((((rt0.c2)<(v0.c0))) NOT BETWEEN (((((rt0.c1)AND('꺒Cn27!2氒')))OR(0Xffffffffdf350dcd))) AND (((rt0.c1) ISNULL))) FROM rt0, v0; -- 0ms;
SELECT (NOT (CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)) FROM v0;SELECT DISTINCT rt0.c2, (((TIME(rt0.c1, v0.c0, rt0.c1), ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)), load_extension(v0.c0)))=((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END, (~ (rt0.c0)), ((rt0.c2)+(rt0.c2))))), (((rt0.c2)) BETWEEN ((((rt0.c2)GLOB(rt0.c0)))) AND ((((rt0.c2)IS NOT(v0.c0))))) FROM rt0, v0 WHERE (CASE WHEN '-804893782' THEN (('nWWzJsu}')>=(-1598242367)) END); -- 0ms;
SELECT DISTINCT rt0.c2, AVG((rt0.c1 IN ())) OVER ( PARTITION BY ((((v0.c0) NOTNULL)) ISNULL), TOTAL_CHANGES()), NTH_VALUE((NOT (STRFTIME(v0.c0, v0.c0, NULL))), 0.13925895964241897) OVER (), CASE (+ (rt0.c2))  WHEN ((rt0.c1)IS(v0.c0)) THEN ((rt0.c0)IS(v0.c0)) END, GROUP_CONCAT((rt0.c0 IN ())) OVER ( ORDER BY (((rt0.c1, UPPER(rt0.c1), (rt0.c2 IN ())))<((((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c0)), ((rt0.c1)>(v0.c0)), LIKELY(rt0.c0)))) DESC, UPPER(CAST(rt0.c2 AS BLOB)) ASC, ((((((v0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))AND(((v0.c0) ISNULL))))OR(0.07385050898336776 COLLATE RTRIM)) DESC) FROM v0 LIMIT 1618514293;SELECT MIN(((rt0.c0)AND(v0.c0))) FROM rt0 WHERE (CAST(((((x'')OR(x'')))OR(NULL)) AS NUMERIC));SELECT DISTINCT ((((rt0.c2)<(v0.c0)))/(rt0.c0)) FROM rt0, v0; -- 0ms;
SELECT ALL (('-87464195') BETWEEN (((v0.c0) NOT NULL)) AND (CAST(rt0.c2 AS NUMERIC))) FROM rt0;SELECT LIKE((((v0.c0, rt0.c0, rt0.c2)) BETWEEN ((v0.c0, rt0.c2, rt0.c0)) AND ((v0.c0, rt0.c1, '-758974068'))), '-884890017'), (~ (((rt0.c1) BETWEEN (rt0.c0) AND (v0.c0)))), ((CASE WHEN v0.c0 THEN 1168788687 WHEN rt0.c1 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END) NOT BETWEEN (MAX(v0.c0)) AND ((+ (rt0.c2)))), NULL, (((((v0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1)))) IS FALSE) FROM v0 WHERE ((NOT (((('-2112258908'))=((x'1de1'))))));SELECT DISTINCT ((rt0.c1) IS FALSE), CUME_DIST() OVER (), FIRST_VALUE((((rt0.c0 IN (rt0.c1)))GLOB(((rt0.c1)IS NOT(v0.c0))))) OVER () FROM rt0, v0 WHERE (json_valid(((0.0017984326629800762) NOT NULL))); -- 0ms;
SELECT DISTINCT (((((rt0.c2))<>((rt0.c2)))) NOT BETWEEN (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((- (v0.c0)))), 0.4380862291218788 COLLATE NOCASE, ((v0.c0) ISNULL) FROM v0, rt0; -- 0ms;
SELECT ALL (((~ (v0.c0))) NOT BETWEEN (((rt0.c2)<>(rt0.c2))) AND (GROUP_CONCAT(v0.c0))) FROM rt0 WHERE (((('' IN (NULL)))GLOB(CASE WHEN 0.49347021687144177 THEN 0.8540511255614625 ELSE '-1355774696' END))) LIMIT -2042805150;SELECT DISTINCT (((((rt0.c1, x'', rt0.c0)) NOT BETWEEN ((v0.c0, rt0.c2, v0.c0)) AND ((rt0.c2, rt0.c2, rt0.c0))))<<(((0Xffffffffe0be1912)<(rt0.c1)))) FROM rt0 WHERE (CAST(((0.4202591876989711) NOT BETWEEN ('7N') AND (NULL)) AS INTEGER));SELECT DISTINCT (CAST(rt0.c1 AS INTEGER) IN ()), x'' COLLATE BINARY, rt0.c1 COLLATE NOCASE FROM v0 WHERE (CAST((x'e5e6' IN ()) AS NUMERIC)) ORDER BY CASE (- (v0.c0))  WHEN ((rt0.c1)||(rt0.c1)) THEN ((rt0.c2) ISNULL) END  NULLS FIRST;SELECT ALL v0.c0 FROM rt0 WHERE (CAST(CASE WHEN NULL THEN 901137095 WHEN NULL THEN 'T淮F_Hc y' WHEN 'Q4to+ң>Ya' THEN 0xffffffff984fb174 WHEN '9l*1Bo' THEN NULL WHEN NULL THEN NULL ELSE x'' END AS REAL));SELECT DISTINCT (((rt0.c2, 0x3137559f, rt0.c1)) BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)), ((v0.c0)AND(v0.c0)), ((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))) AND ((CASE WHEN rt0.c0 THEN 0.35247134385248824 END, -1738132614, 1.875611696E9))), ((((0.0017087188588158497)OR((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((v0.c0))))))AND(((rt0.c0)<>(rt0.c2)))), (+ (((rt0.c2)=(rt0.c2)))), ((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)==(CASE rt0.c1  WHEN v0.c0 THEN '-929916486' END)), ((((rt0.c0))>=((v0.c0))) IN (UNLIKELY(rt0.c2))) FROM rt0, v0 LIMIT 1271488370; -- 1ms;
SELECT DISTINCT v0.c0 FROM rt0, v0 LIMIT 1086566656 OFFSET -1798666133; -- 0ms;
SELECT DISTINCT ((v0.c0) ISNULL) COLLATE BINARY, load_extension(((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0))), (CAST(rt0.c0 AS NUMERIC) IN (MIN(v0.c0), ((rt0.c2)+(rt0.c2)))), COUNT((rt0.c1 IN (rt0.c0))) OVER (), 0Xffffffffdf3a1a15 FROM rt0 NATURAL JOIN v0;SELECT ((((((v0.c0)IS('*f(HB3')))OR(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))))OR(((rt0.c2) IS TRUE))) FROM v0, rt0 WHERE (CAST((((0.992360000028235)) NOT BETWEEN ((0.47978383505218736)) AND ((x''))) AS BLOB)); -- 0ms;
SELECT '480863532' FROM rt0 WHERE (((0.6198483540218515) ISNULL)) LIMIT 1211528488; -- 0ms;
SELECT DISTINCT MIN(v0.c0) FROM rt0, v0; -- 1ms;
SELECT CAST((v0.c0 IN ()) AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL v0.c0, ((((((((((rt0.c2)OR(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))AND(rt0.c1)))%(rt0.c0 COLLATE NOCASE)), CAST((rt0.c0 IN ()) AS NUMERIC) FROM rt0 NOT INDEXED, v0; -- 0ms;
SELECT ALL MAX(GROUP_CONCAT(((NULL)>(rt0.c1)))) FROM rt0, v0 NOT INDEXED;SELECT ((((('' IN ()))AND(rt0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0 CROSS JOIN v0 ON x''; -- 0ms;
SELECT DISTINCT (((((NOT (rt0.c1)))AND(x'')))AND(CAST(x'' AS TEXT))), (((CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END, ((((rt0.c0)OR(v0.c0)))OR(v0.c0)), HEX(rt0.c2)))>=((CAST(rt0.c1 AS NUMERIC), rt0.c2, '-372316986'))), (+ (((rt0.c0)OR(0.7822417092063899)))) FROM v0;SELECT (- ((+ ('YkB2IJbf')))) FROM rt0, v0; -- 0ms;
SELECT ALL v0.c0, (NOT (rt0.c1)) COLLATE RTRIM, rt0.c1 FROM rt0;SELECT ((((rt0.c0)/(rt0.c0))) ISNULL) FROM v0 WHERE (((((((1.36068518E8)<=(0.6920938083935322)))OR(CASE WHEN NULL THEN '?' END)))OR(CASE WHEN 0.2784287328125361 THEN '' WHEN NULL THEN 0.5736661010318003 WHEN 113063716 THEN NULL END)));SELECT ((v0.c0 COLLATE NOCASE) BETWEEN (json_insert(v0.c0, 0.38923058057180326, rt0.c0)) AND (((rt0.c1)-(rt0.c1)))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0))<=((rt0.c2))) IN ()), (- (((rt0.c2)-(rt0.c2)))), ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (v0.c0)))=(((rt0.c1) BETWEEN (v0.c0) AND (rt0.c0)))) FROM v0, rt0 WHERE (COALESCE(DISTINCT (((('<^OR')AND('-1405795197')))AND(x'')), (((-1990599378)) NOT BETWEEN ((0.9121931728604655)) AND ((x'6271'))))); -- 0ms;
SELECT DISTINCT (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1)) IN ((+ (NULL)))) FROM v0, rt0 WHERE ((((((('') NOT BETWEEN (x'88af') AND (0.7416484968511188)))OR((((('1267120104')AND(x'')))AND(0.7236804900415283)))))AND(UPPER(DISTINCT 1985657897)))); -- 1ms;
SELECT DISTINCT ((((SUM(rt0.c0))AND(((((v0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR((('-589326347')>(rt0.c0)))) FROM rt0 WHERE (((0.24860137520025472)>>((('Cs') NOTNULL)))) ORDER BY (- (((v0.c0) ISNULL))) DESC  NULLS FIRST;SELECT ((((CASE v0.c0  WHEN rt0.c1 THEN 'L傹XJ' END)AND('fe')))OR((v0.c0 IN ()))) FROM v0;SELECT DISTINCT (~ (MAX(rt0.c0, rt0.c0))) FROM v0, rt0 LIMIT -1884488711 OFFSET 899832140; -- 0ms;
SELECT DISTINCT (((((rt0.c0) IS FALSE)))>((COUNT(v0.c0)))), CAST(TOTAL(rt0.c2) AS BLOB), CAST(rt0.c1 AS TEXT) COLLATE RTRIM FROM v0, rt0 LIMIT -929916486; -- 0ms;
SELECT ((((rt0.c0 COLLATE RTRIM)AND(((rt0.c0)>(rt0.c0)))))OR((((x''))>=((rt0.c1))))), GROUP_CONCAT('-1626557600'), SQLITE_COMPILEOPTION_GET(((((v0.c0)AND(v0.c0)))AND(rt0.c2))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT COUNT('901303886'), CAST(CASE WHEN rt0.c2 THEN rt0.c1 END AS NUMERIC), SUM(NULL) FROM v0;SELECT ALL SUM(((rt0.c2) NOTNULL)) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (NOT (SUM(rt0.c2))) FROM v0;SELECT DISTINCT ((v0.c0 COLLATE RTRIM)!=(((rt0.c2) IS TRUE))) FROM rt0, v0 GROUP BY (((rt0.c1)>(v0.c0)) IN ()) HAVING (NOT (CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN '0.3441013834916906' WHEN rt0.c2 THEN rt0.c1 WHEN x'446d' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) ORDER BY (+ ('828092327')) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c2  WHEN NULL THEN rt0.c2 END)OR(MAX(0.7854917074048915))))AND(((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c2)))OR(rt0.c2)))AND(v0.c0)))) FROM rt0;SELECT ALL (0Xffffffffe20db876 IN ()) FROM v0 ORDER BY (((rt0.c0))<((rt0.c2))) COLLATE BINARY  NULLS LAST;SELECT ((((((rt0.c0)IS NOT(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND ('1618514293')))))OR(CASE WHEN v0.c0 THEN rt0.c1 END)) FROM v0, rt0 GROUP BY ((NULL)OR(((rt0.c0)*(v0.c0)))), (- (rt0.c2)), rt0.c2; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0; -- 0ms;
SELECT -1.704842086E9, '', CAST(rt0.c0 COLLATE NOCASE AS INTEGER) FROM v0, rt0 WHERE (UPPER(DISTINCT '901137095')) ORDER BY (((('-570094405')OR((rt0.c0 IN ()))))OR(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))))  NULLS LAST, (((rt0.c0)) BETWEEN (((~ (rt0.c2)))) AND ((IFNULL(rt0.c2, rt0.c1)))) DESC  NULLS LAST, ((rt0.c2) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c2 END) AND (((rt0.c2)IS NOT(rt0.c0))))  NULLS LAST; -- 0ms;
SELECT DISTINCT x'69e1' FROM v0 WHERE (CAST((((x'd4af'))>((x''))) AS REAL)) GROUP BY rt0.c1 COLLATE RTRIM HAVING (((+ (0.6798060668502481))) NOT BETWEEN (TYPEOF(rt0.c2)) AND (CAST(rt0.c1 AS BLOB)));SELECT DISTINCT TOTAL((rt0.c2 IN (rt0.c1, v0.c0))) OVER ( PARTITION BY (((('0.27296033920960594')AND(rt0.c1)))AND((((rt0.c0, v0.c0, x'0bd0'))<=((rt0.c0, rt0.c2, rt0.c2))))), CASE WHEN (((rt0.c0))<=((v0.c0))) THEN SUBSTR(rt0.c1, rt0.c0) END) FROM rt0;SELECT DISTINCT ((v0.c0 COLLATE RTRIM) BETWEEN (v0.c0 COLLATE BINARY) AND (((v0.c0)>=(v0.c0)))) FROM rt0 WHERE (((x'' IN ()) IN (((NULL)<>('-415875884')), (((x'', 0Xffffffffc12e8059, x'')) NOT BETWEEN (('Rxⶵ', 0.4832324903495526, 'y>')) AND ((NULL, '-1728875350', x'e4a6'))))));SELECT SUM(((v0.c0) BETWEEN (rt0.c1) AND (rt0.c0))) OVER (), (CAST(v0.c0 AS NUMERIC) IN ()), ((CAST(rt0.c2 AS REAL))+(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)) FROM rt0, v0 NOT INDEXED; -- 0ms;
SELECT (+ (rt0.c1 COLLATE RTRIM)) FROM v0, rt0; -- 1ms;
SELECT DISTINCT (((rt0.c1, v0.c0, rt0.c1)) NOT BETWEEN (('])', ((((rt0.c1)OR(rt0.c0)))OR(0.4720663643809082)), (rt0.c1 IN (v0.c0)))) AND ((CASE WHEN rt0.c1 THEN rt0.c1 END, CASE v0.c0  WHEN rt0.c0 THEN v0.c0 END, ((rt0.c0) BETWEEN (v0.c0) AND (v0.c0))))) FROM v0 WHERE (CAST(CASE WHEN x'' THEN NULL ELSE -1335177085 END AS INTEGER));SELECT ALL (~ (COUNT('n}5dϱ{'))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT ((((v0.c0 COLLATE NOCASE)OR(CAST(rt0.c0 AS TEXT))))AND(((rt0.c2) IS FALSE))) FROM rt0;SELECT DISTINCT COUNT(*) FILTER(WHERE 0.22185787464362894) OVER ( PARTITION BY ((((((rt0.c1)AND(NULL)))OR('1564070598'))) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (((((rt0.c1)AND(rt0.c1)))OR(rt0.c2)))), ((((rt0.c0) BETWEEN (rt0.c1) AND (x'')))<<(rt0.c0)) GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL COLLATE NOCASE)=(CAST(rt0.c2 AS BLOB))), (~ ((((rt0.c0)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))), COUNT(*) OVER () FROM v0, rt0 WHERE (((NULL IN ()) IN ())); -- 1ms;
SELECT CASE COUNT(*)  WHEN UPPER(DISTINCT v0.c0) THEN rt0.c1 COLLATE NOCASE END FROM rt0 WHERE (((('') ISNULL) IN ())) ORDER BY (((- ('2396799')))IS(((v0.c0) NOT NULL))) DESC;SELECT ((CAST(v0.c0 AS INTEGER)) NOT BETWEEN (((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))) AND (NULL)) FROM rt0, v0; -- 0ms;
SELECT DISTINCT '1875611696' FROM v0; -- 0ms;
SELECT ALL rt0.c2, ((CASE WHEN 3.87743462E8 THEN rt0.c2 END)-((NOT (rt0.c0)))), ((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2))) IS TRUE), CASE v0.c0  WHEN v0.c0 THEN rt0.c2 WHEN v0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE NULL END COLLATE BINARY, ((((((((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))AND(rt0.c2)))AND(v0.c0)))<<(rt0.c0)), PERCENT_RANK() OVER (), RANK() OVER () FROM rt0, v0 WHERE (((CASE NULL  WHEN 0.04146451815419627 THEN NULL END)|((('hꊂ0g\a2')<<(NULL))))) LIMIT 2113635699 OFFSET -710669596; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS BLOB) AS NUMERIC) FROM rt0, v0; -- 0ms;
SELECT ALL ((((((rt0.c2)OR(rt0.c0)))OR(v0.c0)))IS(((v0.c0)%(rt0.c2)))) FROM rt0 WHERE ((+ ((9.64226499E8 IN ()))));SELECT DISTINCT (((((rt0.c1 IN (rt0.c0)))OR((rt0.c0 IN ()))))AND(0X12d7d59a)) FROM rt0, v0 WHERE (((((((3.87743462E8)AND(NULL)))AND(x'34dc'))) BETWEEN (((x'b61df33d')<=(0.22185787464362894))) AND ((((0.47571128758166015)) NOT BETWEEN ((x'')) AND ((0.45364424300239925)))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c1) IS FALSE))OR(rt0.c2 COLLATE RTRIM)))OR(((rt0.c0) NOT NULL))), IFNULL(DISTINCT CASE v0.c0  WHEN v0.c0 THEN rt0.c1 ELSE rt0.c0 END, COUNT(rt0.c0)), ((((((((((('')) BETWEEN (('!I')) AND ((v0.c0))))OR(0.8247965234602879)))OR(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(CAST(rt0.c2 AS INTEGER))))OR(CAST(0xffffffffd5844de4 AS TEXT))) FROM rt0, v0; -- 0ms;
SELECT DISTINCT (CAST(v0.c0 AS NUMERIC) IN ()) FROM rt0, v0 WHERE (((((0.5136591849880001)IS(NULL))) ISNULL)) LIMIT -1256171311; -- 0ms;
SELECT (((((rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((v0.c0, v0.c0, v0.c0)) AND ((0.4947355925388931, rt0.c1, '')))) NOT NULL), AVG(0.6718910615663414), SUM(((v0.c0)/(rt0.c2))) FILTER(WHERE v0.c0) OVER () FROM v0;SELECT DISTINCT CAST((v0.c0 IN (rt0.c2)) AS REAL) FROM rt0 NOT INDEXED, v0 WHERE (((((NULL)|('392039329'))) NOT BETWEEN (((NULL) NOT NULL)) AND (((x'') NOT BETWEEN (x'') AND (0.6306916007312277))))); -- 0ms;
SELECT ((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c2)<=(rt0.c2)))))AND(((rt0.c2)<(v0.c0)))))AND(IFNULL(v0.c0, rt0.c1))))OR(((rt0.c2)+(rt0.c0)))) FROM rt0;SELECT (ABS(v0.c0) IN ()) FROM v0, rt0 WHERE (((CAST('m{BH?q쬥F' AS INTEGER)) ISNULL)) GROUP BY ((((((rt0.c1)OR(v0.c0)))AND(rt0.c1)))>(CAST(rt0.c1 AS INTEGER))) HAVING (~ (((((rt0.c1)AND(rt0.c0)))AND(rt0.c2)))); -- 0ms;
SELECT DISTINCT ((x'')|(((rt0.c1) BETWEEN (v0.c0) AND (v0.c0)))), ((rt0.c1 COLLATE RTRIM)/(UNLIKELY(rt0.c2))), ((((rt0.c0)OR(v0.c0))) IS TRUE) FROM v0;SELECT DISTINCT ((((((rt0.c1)=(rt0.c2)))OR(((rt0.c0)-(rt0.c1)))))OR(((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(v0.c0)))) FROM rt0, v0 WHERE (((((NULLIF(DISTINCT 3.71781968E8, NULL))OR(('' IN ()))))OR((0xffffffffb9b91720 IN ())))) LIMIT 72680978; -- 0ms;
SELECT ALL '1614183441' FROM v0, rt0 LIMIT 134548134 OFFSET 94210814; -- 0ms;
SELECT ALL DENSE_RANK() OVER (), LAG((((((v0.c0))<((v0.c0))))>(v0.c0 COLLATE BINARY)), (+ (v0.c0)), ((CAST(v0.c0 AS INTEGER))AND((+ (v0.c0))))) OVER (), CASE WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 END FROM v0;SELECT DISTINCT (~ (((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))) FROM rt0, v0; -- 0ms;
SELECT ALL ((CAST(v0.c0 AS REAL)) NOTNULL) FROM rt0;SELECT ALL CASE WHEN v0.c0 THEN rt0.c1 COLLATE BINARY ELSE ((rt0.c0)||(v0.c0)) END FROM v0 WHERE (((((NULL)>=(NULL))) NOTNULL));SELECT ALL SUM((NULL IN (rt0.c2))) FROM v0;SELECT ALL rt0.c0, ((v0.c0)<(COALESCE(rt0.c2, v0.c0))), AVG(CAST(rt0.c1 AS NUMERIC)) OVER (), ((((rt0.c1)||(rt0.c0))) BETWEEN (((x'3905')&(v0.c0))) AND (((rt0.c1)&(rt0.c0)))), 1.618514293E9 FROM rt0 WHERE (((-1347003589)<=(CAST(0.3791575766927129 AS INTEGER))));SELECT DISTINCT v0.c0, ((rt0.c2) BETWEEN (CAST(rt0.c2 AS REAL)) AND (UPPER(rt0.c2))), (((rt0.c1)) NOT BETWEEN ((CAST(rt0.c1 AS NUMERIC))) AND (((v0.c0 IN ())))) FROM v0 WHERE ((+ (((1.979299085E9)||(0.4557381600906718)))));SELECT ALL (NULL IN ()) COLLATE NOCASE FROM v0, rt0 WHERE (LIKELIHOOD(DISTINCT '-1474748244', 0.6206782620015626) COLLATE BINARY) ORDER BY CHANGES() ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN GROUP_CONCAT(0.9309636835182641) THEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END WHEN ((rt0.c1) NOTNULL) THEN PRINTF(0.9168757127513129, v0.c0, x'') WHEN rtreenode(rt0.c0, rt0.c2) THEN '' ELSE ((rt0.c1) NOT BETWEEN (rt0.c1) AND ('-1712940267')) END FROM v0, rt0 WHERE (((x'') NOT NULL)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END) NOT BETWEEN (rt0.c2) AND (COUNT(rt0.c2))), COUNT((~ (rt0.c0))), ((0X597825b0)<>(((v0.c0)IS(NULL)))) FROM v0, rt0 WHERE (((json_extract(0.9362701214285588, 0.8923447146554283, NULL, '-372316986', x'', NULL)) ISNULL)) ORDER BY ((CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN 0.10407441264805051 WHEN rt0.c2 THEN rt0.c2 END) BETWEEN (((rt0.c0)-(v0.c0))) AND (-3.72316986E8));SELECT DISTINCT (+ ((((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((''))))) FROM v0, rt0 WHERE (json_array_length((('371781968')IS('-1645141132')))) LIMIT -642833302 OFFSET -92017046; -- 0ms;
SELECT (NOT (rt0.c1 COLLATE BINARY)) FROM rt0, v0; -- 0ms;
SELECT ALL ((((COUNT(rt0.c1))OR((~ (v0.c0)))))AND((((v0.c0, rt0.c0, v0.c0))<=((rt0.c2, rt0.c2, NULL))))) FROM v0, rt0 WHERE (((x'' COLLATE RTRIM) NOT NULL)); -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN rt0.c1 COLLATE RTRIM ELSE TOTAL(rt0.c0) END FROM rt0, v0; -- 0ms;
SELECT RANK() OVER () FROM rt0, v0 ORDER BY (((rt0.c2 IN (v0.c0, v0.c0))) BETWEEN (((rt0.c0)>(rt0.c2))) AND (((((rt0.c1)OR(v0.c0)))AND(v0.c0)))) DESC, ABS(DISTINCT rt0.c1 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT((~ (x'473e'))) OVER (), v0.c0, ((rt0.c0)*(CAST(rt0.c0 AS INTEGER))) FROM rt0, v0 WHERE (0.7499107167244238); -- 0ms;
SELECT ALL ((((((((CAST(rt0.c1 AS NUMERIC))OR(((rt0.c2)>>(rt0.c2)))))OR(((((v0.c0)OR(rt0.c0)))AND(rt0.c2)))))OR(v0.c0)))AND(((rt0.c2) NOT BETWEEN (v0.c0) AND (0X3a33280b)))) FROM v0, rt0 WHERE (CASE WHEN NULL THEN CASE WHEN NULL THEN x'' WHEN x'' THEN '' WHEN '' THEN 0.7400512433770283 ELSE x'' END END); -- 0ms;
SELECT ALL ((x'') NOTNULL) FROM v0 GROUP BY ((((((((((rt0.c2) IS FALSE))AND(x'')))AND(NULL)))OR(rt0.c2)))OR(((rt0.c0) IS FALSE))) HAVING ((((((x'')OR(rt0.c1)))OR(rt0.c0)))<((rt0.c0 IN (v0.c0))));SELECT DISTINCT CAST(((v0.c0) NOT NULL) AS NUMERIC) FROM rt0, v0 WHERE (((((-641982334)<(x'')))<=(0.24621698044352514 COLLATE BINARY))); -- 0ms;
SELECT ((((rt0.c1)-(rt0.c1)))==((rt0.c2 IN ()))) FROM rt0, v0; -- 0ms;
SELECT ALL AVG(CAST(rt0.c1 AS INTEGER)), (+ (LIKE('*#54', rt0.c0))), RANK() OVER () FROM rt0, v0; -- 1ms;
SELECT ALL GROUP_CONCAT(rt0.c2) FROM v0 WHERE ((CASE 0X3795c2bb  WHEN 0.8752027851551647 THEN x'b7a0' WHEN 'f-j*쵳' THEN x'' WHEN '!~Hgia' THEN NULL END IN (TYPEOF('-929916486'))));SELECT DISTINCT x'76803869' FROM v0, rt0 WHERE ((+ (9.01137095E8 COLLATE BINARY))) GROUP BY (- (((rt0.c1)|(rt0.c2)))); -- 0ms;
SELECT DISTINCT CAST(COUNT(rt0.c0) AS NUMERIC) FROM rt0 WHERE ((((((((((('-4474698022206926106T-5673940779732810490 1373433536650658975-337 ') IS TRUE))AND(CASE 0X7712d9b0  WHEN x'2114624e' THEN -2035197188 ELSE 'lY' END)))OR(((NULL)%(x'')))))OR(2.073408701E9 COLLATE BINARY)))OR(x'19bd'))) GROUP BY ((((rt0.c2)<>(rt0.c1))) IS FALSE); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(NULL)))AND(rt0.c2)))>>(NULL)), ((rt0.c1 COLLATE NOCASE) NOT BETWEEN (COUNT(v0.c0)) AND (v0.c0)), rt0.c1 FROM v0, rt0 ORDER BY (NOT (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) ASC LIMIT 1411228433 OFFSET 901303886; -- 0ms;
SELECT ALL ((((((((COUNT(v0.c0))AND(((((0.1011287978064137)AND(rt0.c0)))OR(rt0.c0)))))AND(((-123405402)IS NOT(rt0.c0)))))AND((('698730993') ISNULL))))AND(((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))), CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC), ((SUM('0.7246921635932847')) NOT NULL), RANK() OVER ( ORDER BY ((((v0.c0) IS TRUE)) NOT BETWEEN (((x'')|(rt0.c1))) AND (TYPEOF(v0.c0))) DESC), ((((- (rt0.c1)), (((rt0.c0))!=((rt0.c2))), ((((rt0.c2)OR(v0.c0)))AND(rt0.c0)), ((v0.c0) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c1)<=(rt0.c0))))>((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)), (v0.c0 IN ()), (rt0.c0 IN (rt0.c0, v0.c0)), TRIM(DISTINCT rt0.c0, rt0.c2), CAST(x'' AS NUMERIC)))) FROM rt0, v0; -- 0ms;
SELECT NTILE((((+ (rt0.c2))) IS TRUE)) OVER () FROM v0, rt0 WHERE (RTRIM((('댖UTM	LSM')GLOB('0.6559614941755091')))) LIMIT -396159299 OFFSET 592220258; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ())) ISNULL) FROM v0 WHERE (LIKELY(((x'') NOT BETWEEN ('1614183441') AND (1917745089)))) LIMIT -895873041; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS TEXT) COLLATE BINARY FROM v0;SELECT DISTINCT (((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1))))<=((CAST(rt0.c2 AS BLOB)))), ((((((((rt0.c0)AND(v0.c0)))OR(v0.c0)))AND(((rt0.c0) BETWEEN (v0.c0) AND (rt0.c0)))))AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (v0.c0)))), (CASE rt0.c2  WHEN rt0.c0 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END IN ()) FROM v0 WHERE ('-1879356423');SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY ((((rt0.c1)<=(rt0.c2))) NOT BETWEEN (((rt0.c1)/(rt0.c1))) AND (v0.c0)) ASC  NULLS FIRST) FROM rt0, v0 WHERE (TRIM(NULL) COLLATE NOCASE); -- 0ms;
SELECT ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOTNULL) FROM rt0 WHERE (UPPER(DISTINCT (((('')AND(0xffffffff9757dc83)))OR(NULL)))); -- 0ms;
SELECT DISTINCT ((((x'4ada') NOTNULL)) BETWEEN (QUOTE(rt0.c1)) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (((NOT (''))) NOTNULL), (((((rt0.c0)AND(rt0.c0)))OR(rt0.c1)) IN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0)))), AVG(v0.c0), (((v0.c0)/(rt0.c1)) IN ()), (((((((((((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE v0.c0 END)))AND((((v0.c0))<>((v0.c0))))))OR(((rt0.c2)GLOB(rt0.c0)))))AND((+ (rt0.c0)))))AND(((((v0.c0)OR(rt0.c2)))OR(rt0.c0)))))AND(((rt0.c0) IS TRUE))))AND(TYPEOF(DISTINCT rt0.c0))))AND(CAST(rt0.c0 AS BLOB))) FROM rt0, v0 LIMIT -211054087 OFFSET -599791959; -- 0ms;
SELECT DISTINCT CAST(v0.c0 AS INTEGER) COLLATE NOCASE FROM v0 WHERE (x'6cd0') UNION SELECT UNLIKELY(((rt0.c0)-(rt0.c0))) FROM v0 LIMIT -32487892 OFFSET -1129838024;SELECT DISTINCT (TOTAL(rt0.c0) IN ()) FROM v0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0, v0; -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS NUMERIC) AS TEXT) FROM rt0; -- 0ms;
SELECT (+ (LIKELIHOOD(DISTINCT rt0.c1, 0.07261555819949106))) FROM v0, rt0; -- 0ms;
SELECT ((((v0.c0)<=(rt0.c0))) IS FALSE) FROM rt0, v0 WHERE (CAST((- (NULL)) AS NUMERIC)) LIMIT 938410169; -- 0ms;
SELECT DISTINCT (('-1579323922')/(((((rt0.c2)AND(rt0.c1)))AND(v0.c0)))) FROM rt0;SELECT DISTINCT GROUP_CONCAT((- (rt0.c2))), rt0.c0, NULLIF(((rt0.c2)IS(rt0.c2)), (+ (rt0.c2))) FROM rt0 WHERE ((CAST(0x171c7ee6 AS NUMERIC) IN ((NULL IN ())))); -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 END) AND (CAST(rt0.c2 AS INTEGER))) FROM rt0, v0; -- 0ms;
SELECT ALL TRIM(DISTINCT v0.c0) COLLATE NOCASE FROM v0, rt0 WHERE (((((NULL)AND(('-1879356423' IN ()))))OR(((0.2592054942357057) NOT BETWEEN (0.6224048998010964) AND (NULL))))); -- 0ms;
SELECT ALL ((CASE NULL  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) ISNULL) FROM rt0; -- 0ms;
SELECT AVG(rt0.c1 COLLATE RTRIM COLLATE NOCASE) OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0, v0 WHERE (CASE WHEN (x'' IN (0xffffffffd2de2c83)) THEN (1761552795 IN ()) ELSE ((x'') IS TRUE) END) GROUP BY ((x'aefe')|(((rt0.c0) NOT NULL))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(v0.c0)) BETWEEN (((rt0.c1)IS NOT(rt0.c0))) AND (rt0.c1)) FROM rt0, v0 WHERE (((('31007536' IN ('/F', '()')))IS NOT(CASE '1753385639'  WHEN '' THEN -8.84890017E8 WHEN '343275758' THEN NULL WHEN 0.6837562426055936 THEN '828303748' ELSE 0xffffffffe9d7be3a END))); -- 0ms;
SELECT DISTINCT CASE CASE 0Xffffffff918ab57d  WHEN rt0.c1 THEN '0.09822918776622902' ELSE v0.c0 END  WHEN ((v0.c0) BETWEEN (rt0.c0) AND (v0.c0)) THEN AVG(rt0.c1) END FROM rt0;SELECT DISTINCT LTRIM(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)), CASE WHEN rt0.c2 THEN v0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 END) FROM rt0;SELECT ((((((((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))AND((((rt0.c2))>=((v0.c0))))))AND(CAST(v0.c0 AS NUMERIC))))AND(CAST(v0.c0 AS NUMERIC))))OR(((v0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((((((rt0.c0)AND(v0.c0)))OR(rt0.c0)), ((((((((rt0.c1)AND('-1e500')))AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)), ((rt0.c0) NOT NULL)))>((CASE v0.c0  WHEN rt0.c2 THEN NULL WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 END, 0.5761605376634714, ((((v0.c0)AND(v0.c0)))AND(rt0.c2))))), ((rt0.c0) NOTNULL) COLLATE RTRIM, (CAST(v0.c0 AS BLOB) IN (((rt0.c1)-(v0.c0)))), ((v0.c0) NOTNULL) FROM v0, rt0; -- 1ms;
SELECT RANK() OVER () FROM v0, rt0; -- 0ms;
SELECT (- (rt0.c2)) FROM rt0 LIMIT -1198572667 OFFSET -1425065971; -- 0ms;
SELECT DISTINCT '⭫Fl莓''p' FROM v0, rt0; -- 0ms;
SELECT ALL ((((((((((((((((((((rt0.c2)OR(v0.c0)))OR(v0.c0)))OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(v0.c0)))OR(v0.c0)))AND('302565590')))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN '0.2736177371742333' THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 END)), 0.7504528224841891, (rt0.c0 IN (rt0.c1)) COLLATE BINARY FROM rt0 WHERE (((~ (-1.329255573E9)) IN (('1243170875' IN (0.2698977859405216)), (0.772493779476806 IN (1522220533, 0.2651668753605749))))) LIMIT 733729398 OFFSET 567325425;SELECT DISTINCT v0.c0, ((rt0.c1)-(v0.c0)) COLLATE RTRIM, (+ (AVG(rt0.c2))) FROM rt0, v0 WHERE (CASE WHEN (('-1054020174') NOT BETWEEN (-266792951) AND ('-1579323922')) THEN LIKE(0.33212777178727826, 0.4506800125551129, '9') ELSE NULL COLLATE BINARY END) GROUP BY ((((rt0.c2) NOT NULL)) NOT BETWEEN ((v0.c0 IN ())) AND (((rt0.c1)%(rt0.c1)))), (((rt0.c2)) BETWEEN ((((0x1ca9652c)&(v0.c0)))) AND ((INSTR(rt0.c0, rt0.c2)))), ((((((((rt0.c1)OR(rt0.c1)))OR(rt0.c1)))AND(MAX(rt0.c1, rt0.c2))))AND(((((rt0.c0)AND(v0.c0)))OR(rt0.c0)))) HAVING ((((rt0.c2)>(rt0.c1))) NOTNULL); -- 1ms;
SELECT COUNT(((((rt0.c1)AND(rt0.c1)))OR(rt0.c1))) FROM rt0, v0 WHERE (CAST((0.6351297474030893 IN ()) AS INTEGER)); -- 0ms;
SELECT (((rt0.c2)<=(rt0.c1)) IN ()) FROM rt0, v0 WHERE (0.7449183362211962); -- 0ms;
SELECT DISTINCT ((CAST(v0.c0 AS BLOB)) ISNULL) FROM rt0 WHERE (((((((0X54e5fbc6)AND('<A,')))OR('G?~HJ5J'))) NOT BETWEEN (((((-1417127226)AND(0.09973705989423787)))OR('-279101741'))) AND (((x'') ISNULL))));SELECT DISTINCT CASE WHEN (~ (rt0.c2)) THEN 'Qz}' END FROM v0;SELECT LEAD(CASE WHEN (((rt0.c2, v0.c0, v0.c0))<=((x'', rt0.c0, v0.c0))) THEN ((rt0.c2)GLOB(rt0.c2)) ELSE ((((((((rt0.c1)AND(rt0.c2)))AND(0.3738588657032361)))OR(rt0.c0)))AND(rt0.c2)) END, (((PRINTF(rt0.c2), CAST(rt0.c1 AS TEXT), ((rt0.c1)|(0.7097664150270094))))<=((((v0.c0) NOT BETWEEN (rt0.c1) AND ('2139493439')), CASE WHEN rt0.c1 THEN rt0.c2 END, (v0.c0 IN (NULL))))), ((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c2)))OR((('')+(rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))))) OVER () FROM rt0 NATURAL JOIN v0 WHERE ((((((NULL IN ()))AND((('ls]CS싛V') IS FALSE))))AND(NULL COLLATE RTRIM))) ORDER BY (((rt0.c0)) NOT BETWEEN (((- (rt0.c0)))) AND ((((((x'')OR(rt0.c0)))OR(v0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((v0.c0)IS(v0.c0)))) AND ((CASE v0.c0  WHEN rt0.c1 THEN v0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c2 END))), (((((rt0.c1 IN (v0.c0)))OR(((rt0.c1) NOTNULL))))AND(LENGTH(v0.c0))), (- (CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END)) FROM v0, rt0 INTERSECT SELECT DISTINCT CASE rt0.c0 COLLATE NOCASE  WHEN CAST(rt0.c0 AS REAL) THEN rt0.c1 COLLATE RTRIM ELSE (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((x''))) END, ((SUM(v0.c0)) BETWEEN (rt0.c2 COLLATE NOCASE) AND (((rt0.c2)-(rt0.c0)))), CAST((rt0.c1 IN ()) AS NUMERIC) FROM v0, rt0 WHERE (((- (698730993)) IN ((NOT ('1YZszV')), (((x'')) BETWEEN ((3.92039329E8)) AND ((NULL)))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((0.8069949688153124)||(v0.c0)) COLLATE NOCASE) OVER () FROM rt0, v0 WHERE (((+ ('')) IN ((((((((('}7R')AND('')))OR(0.48905448549702124)))AND('-837642826')))AND('!M0crv'))))); -- 0ms;
SELECT DISTINCT NULL FROM rt0, v0; -- 0ms;
SELECT TRIM((rt0.c1 IN ()), (x'' IN ())) FROM v0, rt0 WHERE ((((NOT (x''))) BETWEEN (((NULL) ISNULL)) AND ((('') IS FALSE)))) GROUP BY CAST(((v0.c0) IS FALSE) AS TEXT); -- 0ms;
SELECT ((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c2))) IS TRUE) FROM v0 GROUP BY (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)>(rt0.c0)), ((rt0.c1)>>(rt0.c0)), ((rt0.c2)<=(rt0.c1)))) AND (((~ (rt0.c2)), ((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)), ((rt0.c2)<=(0.4844105446468403))))), rt0.c2, ((((((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))AND(((rt0.c2)||(rt0.c1)))))AND(CAST(rt0.c0 AS REAL))) HAVING MIN(MIN(((rt0.c1)*(rt0.c2)))) ORDER BY CASE ((0.10165239476820764)=(v0.c0))  WHEN x'' COLLATE BINARY THEN x'' COLLATE NOCASE ELSE ((((((((rt0.c2)AND('ࡌL\n꒯Z')))AND(rt0.c1)))AND(rt0.c0)))OR(v0.c0)) END DESC  NULLS FIRST;SELECT ALL COUNT(*) FROM v0 WHERE (((CASE 0.0482656667098611  WHEN -7.3212823E8 THEN 0.5428442422605327 ELSE NULL END)<>(((((((((((((x'f93c')AND(1211528488)))AND('')))OR('450880885')))OR(NULL)))AND(-2.11054087E8)))AND(x'5089'))))); -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(rt0.c1) THEN (((v0.c0))>((v0.c0))) ELSE (v0.c0 IN ()) END FROM v0 WHERE ((- ((643112630 IN ()))));SELECT DISTINCT SUM(CAST(rt0.c0 AS TEXT)) COLLATE NOCASE FROM v0;SELECT ALL 0.7429390731894547 FROM rt0 GROUP BY ((NULL IN (v0.c0, rt0.c0)) IN ()), ((((rt0.c0) IS TRUE))|(((rt0.c2)>(rt0.c2)))), (('0.2808358410502583') IS FALSE); -- 0ms;
SELECT ALL CAST((rt0.c2 IN ()) AS BLOB) FROM rt0, v0 NOT INDEXED WHERE ((('' COLLATE NOCASE) BETWEEN (((NULL) BETWEEN ('1786192133') AND (x''))) AND (((0x6fcb9030)&(x''))))); -- 0ms;
SELECT ALL ('-0.0' IN ()), (((rt0.c2)) NOT BETWEEN ((((rt0.c1)IS NOT(rt0.c0)))) AND (((NOT (rt0.c1))))), (((+ (rt0.c2))) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT v0.c0, (+ ('1606077135')), (- (v0.c0)) COLLATE RTRIM, MAX(TOTAL((rt0.c2 IN ()))), rt0.c1 FROM rt0 WHERE (CASE 1139669452  WHEN -492862599 THEN -1563991939 WHEN x'0a57' THEN 1.36068518E8 WHEN x'' THEN NULL ELSE 371781968 END COLLATE NOCASE) ORDER BY (((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))AND(CAST(v0.c0 AS REAL))))AND(rt0.c1)) ASC;SELECT ALL CAST(((NULL) IS FALSE) AS BLOB) FROM v0 WHERE ((((525665443 IN (0.8869044345696007))) BETWEEN (('586362356' IN (x'', x''))) AND (0.0))); -- 0ms;
SELECT DISTINCT CASE (v0.c0 IN ())  WHEN (rt0.c1 IN ()) THEN ((v0.c0) IS TRUE) WHEN (rt0.c1 IN (rt0.c0)) THEN (rt0.c1 IN ()) WHEN ((((((((rt0.c2)AND('h]5P')))AND(rt0.c1)))OR(0.872581027308689)))OR(v0.c0)) THEN ((rt0.c2)LIKE(rt0.c2)) END FROM v0 WHERE ('속5&!K)~eE');SELECT ALL NTILE(0xffffffffec25c2db) OVER (), ((v0.c0 IN ()) IN ()), load_extension(COUNT(*), -1377342148) FROM v0 ORDER BY ((-1630186670) NOT BETWEEN (((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))) AND (((rt0.c1)<=(rt0.c2)))) ASC;SELECT ALL ((rt0.c2)<=((rt0.c1 IN (rt0.c1)))) FROM v0, rt0 LIMIT 236944681; -- 0ms;
SELECT ((((((((1e500)AND(rt0.c1)))OR(0.3560260894140026)))OR(((rt0.c1)*(rt0.c0)))))AND(TIME(rt0.c2, v0.c0, v0.c0, rt0.c2, v0.c0))), (((v0.c0, v0.c0, v0.c0)) NOT BETWEEN ((CAST(rt0.c1 AS INTEGER), ((v0.c0) IS TRUE), CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)) AND ((((rt0.c0)>(rt0.c0)), LOWER(rt0.c2), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (NULL))))), (- (AVG(rt0.c1))) FROM v0;SELECT DISTINCT CASE COUNT(*)  WHEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (x'')) THEN SUM(v0.c0) WHEN 0.10555509066720536 THEN ((rt0.c1)>(rt0.c1)) WHEN ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)) THEN (rt0.c2 IN ()) END FROM rt0 ORDER BY LOWER(DISTINCT (((rt0.c0)) BETWEEN ((NULL)) AND ((v0.c0))));SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((((((v0.c0)OR(v0.c0)))AND(v0.c0)))) AND ((((((v0.c0)AND(rt0.c2)))AND(rt0.c1))))), (((- (v0.c0))) BETWEEN ((((rt0.c2))<((rt0.c2)))) AND (((x'02c9') IS FALSE))), ((CAST(rt0.c2 AS REAL))-((((NULL)) NOT BETWEEN ((v0.c0)) AND ((rt0.c1))))), x'', LAG(((((v0.c0)>=(v0.c0)))/(v0.c0)), (+ (json_array_length(v0.c0, -1192674437))), 0x48367528) OVER () FROM v0 WHERE (CASE ((('', NULL, '1738296373')) BETWEEN ((-1.586090575E9, '', x'')) AND ((0.5571520909424506, 1271488370, NULL)))  WHEN (~ (0.5346878504623331)) THEN (NOT (0.0)) WHEN (((x'44a7', x'd926', 'f''')) NOT BETWEEN ((NULL, 'r\\nA\rJn(', 0.30003069168816454)) AND ((0.8456789914957493, NULL, NULL))) THEN (((x'336d')) BETWEEN ((x'')) AND ((x'1eeb'))) WHEN ((((0.7568083861426619)OR('-327430862')))AND(x'1911')) THEN 0.4932411593616337 COLLATE BINARY ELSE (((((((((((('Y帏VKcm蝺C')OR('ZWf*A77')))AND('-96508425')))OR('-1172352218')))AND('-1837620617')))OR('964226499')))OR('-1967953592')) END) LIMIT 1972448204 OFFSET 505340406;SELECT ALL CAST(rt0.c1 AS NUMERIC) COLLATE RTRIM, ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c2))) IS FALSE), ((v0.c0 COLLATE RTRIM)AND(((rt0.c0) IS FALSE))), 0.0, ((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1))) IS FALSE), ((((rt0.c2)*(v0.c0)))>((rt0.c2 IN ()))), COUNT(((rt0.c0)*('1733588673'))) OVER () FROM v0, rt0 WHERE (((((('Jm&,8', 0.4062920542872438, 0.8789117671587617)) NOT BETWEEN ((x'', 0.3468707237944876, -7.71357412E8)) AND ((0.16899562709906446, 0.19406723197126852, '-1586090575')))) BETWEEN (json_object(NULL, 0X7a358599)) AND ((((('')AND('-2133240378')))OR(NULL))))) LIMIT 640292493;SELECT ALL (((rt0.c1)) NOT BETWEEN ((((((v0.c0)AND(rt0.c2)))OR(rt0.c1)))) AND ((((v0.c0)IS(rt0.c1))))), AVG(NULL) OVER (), ((rt0.c0)>>(((v0.c0)-(rt0.c0)))) FROM rt0, v0 ORDER BY (((rt0.c1)>>(rt0.c1)) IN ()) DESC; -- 0ms;
SELECT DISTINCT AVG(rt0.c0) FROM v0, rt0 WHERE ((NOT (((((x'')OR(x'')))AND('-92017046'))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c1 END) IS TRUE) FROM rt0; -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c0)%(rt0.c1)) THEN ((rt0.c2) NOT NULL) WHEN ((((((((((((v0.c0)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c2)))AND(rt0.c1)) THEN AVG(rt0.c1) WHEN (~ (v0.c0)) THEN CAST(v0.c0 AS BLOB) ELSE rt0.c1 END, ((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c0)))<=(GROUP_CONCAT('hours'))), TYPEOF(DISTINCT ((rt0.c2)%(rt0.c2))) FROM v0, rt0 WHERE ((- (x'47807353'))); -- 0ms;
SELECT ((CAST(rt0.c2 AS INTEGER)) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c2 ELSE rt0.c0 END) AND (CASE WHEN '' THEN v0.c0 END)) FROM rt0 NOT INDEXED, v0 WHERE (CAST((((1.86671379E8)) BETWEEN ((0.1717035670009177)) AND (('8\r'))) AS REAL)) GROUP BY (v0.c0 IN ()); -- 0ms;
SELECT DISTINCT (SQLITE_VERSION() IN ()) FROM rt0 WHERE (((('82rk{][\r\r' IN ())) IS FALSE)) GROUP BY (~ ((NOT (v0.c0))));