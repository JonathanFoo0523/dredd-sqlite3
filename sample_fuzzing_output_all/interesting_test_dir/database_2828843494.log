-- Time: 2024/06/07 06:30:06
-- Database: database94
-- Database version: 3.40.0
-- seed value: 2828843494
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 1ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE vt0; -- 0ms;
UPDATE vt0 SET c0=0.822308663602707; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
PRAGMA threads = -3017054302986600952; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 1327307286); -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 9); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE vt0 SET c0=0X6c35c756; -- 0ms;
PRAGMA main.optimize; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR FAIL vt0 SET c0=x'' WHERE ((((vt0.c0)||(vt0.c0))) ISNULL); -- 0ms;
REINDEX; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET c0=x'' WHERE ((((vt0.c0)AND(vt0.c0)))*(vt0.c0)); -- 0ms;
UPDATE OR ROLLBACK vt0 SET (c0)=(0.14140418152701106) WHERE ((((x'')AND(((vt0.c0)<(vt0.c0)))))OR(vt0.c0)); -- 0ms;
INSERT OR IGNORE INTO vt0 VALUES ('623487802'); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0, c0, c0)=(NULL, 623487802, NULL); -- 12ms;
PRAGMA temp.automatic_index; -- 0ms;
UPDATE OR ABORT vt0 SET c0=-694304282; -- 1ms;
REINDEX  vt0; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
INSERT OR ROLLBACK INTO vt0 VALUES (NULL); -- 1ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
REINDEX  vt0; -- 0ms;
REINDEX; -- 0ms;
PRAGMA main.short_column_names; -- 0ms;
UPDATE OR IGNORE vt0 SET c0='0.14140418152701106'; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (6.23487802E8); -- 8ms;
END TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 4ms;
PRAGMA temp.reverse_unordered_selects = false; -- 0ms;
UPDATE OR FAIL vt0 SET (c0)=(0.822308663602707); -- 0ms;
INSERT INTO vt0(vt0) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('merge=-2059136665,7');\n; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('crisismerge', 2096928043); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-916838990'; -- 0ms;
UPDATE vt0 SET (c0)=(0.9612664030885794) WHERE (- ((((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))))); -- 1ms;
REINDEX BINARY; -- 3ms;
END; -- 3ms;
COMMIT TRANSACTION; -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('merge', -1267863114);\n; -- 0ms;
INSERT INTO vt0(vt0) VALUES('optimize'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=('1528551322') WHERE IFNULL((vt0.c0 IN ()), ((vt0.c0) NOT NULL)); -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt0(c0) VALUES (NULL), (0.7813151408568837), (x''); -- 1ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 1ms;
PRAGMA main.cell_size_check = true; -- 0ms;
REINDEX BINARY; -- 0ms;
UPDATE OR REPLACE rt0 SET c4=NULL; -- 0ms;
VACUUM; -- 13ms;
UPDATE OR FAIL rt0 SET (c2)=(1.815463766E9) WHERE (((rt0.c2, '-916838990', rt0.c1)) BETWEEN ((((rt0.c2) IS FALSE), 1.528551322E9, rt0.c2)) AND ((((rt0.c1)!=(rt0.c1)), ((rt0.c2)GLOB(rt0.c1)), ((rt0.c0)%(rt0.c2))))); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0.959935999725512, c2=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.legacy_file_format = false; -- 1ms;
UPDATE rt0 SET c0=0.7813151408568837 WHERE CAST(rt0.c4 COLLATE BINARY AS INTEGER); -- 0ms;
PRAGMA journal_mode = WAL; -- 2ms;
INSERT OR REPLACE INTO rt0(c0, c2, c3) VALUES (NULL, 0Xffffffffd309340b, '1921969764'); -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0, c1, c3) VALUES (x'5a79', NULL, NULL, x''); -- 0ms;
PRAGMA main.journal_mode; -- 1ms;
UPDATE OR FAIL rt0 SET c4='', c2=''; -- 0ms;
REINDEX BINARY; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
PRAGMA temp.reverse_unordered_selects; -- 0ms;
PRAGMA main.stats; -- 0ms;
PRAGMA journal_mode = WAL; -- 0ms;
VACUUM temp; -- 0ms;
UPDATE rt0 SET (c4, c2)=(0.13630630056611714, '습 zA'); -- 0ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c1)=(x'', '-754371573'); -- 0ms;
UPDATE rt0 SET c1=NULL, c4=x''; -- 1ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE rt0 SET c3=NULL; -- 0ms;
PRAGMA mmap_size = 2919178057995365662; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET c1='709552680', c4=x'' WHERE (((rt0.c4)) NOT BETWEEN (((- (rt0.c4)))) AND ((NULL))); -- 0ms;
PRAGMA defer_foreign_keys = true; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA main.integrity_check; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((((('429048501'))=((rt0.c1))))AND(rt0.c0 COLLATE RTRIM)))AND(rt0.c3)) FROM rt0 WHERE (CAST((((((((('')OR('X)h')))AND(NULL)))OR(0.13630630056611714)))OR(1815463766)) AS BLOB)); -- 0ms;
SELECT RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c4  WHEN rt0.c0 THEN 6.23487802E8 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)*(rt0.c4))) ISNULL) FROM rt0 WHERE ((((0xffffffffd2e9113c IN (NULL, '6jLhS*ce0')))==((NULL IN ())))); -- 0ms;
SELECT (((CASE WHEN rt0.c1 THEN rt0.c4 END))<>((CASE WHEN rt0.c4 THEN rt0.c0 END))) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT('1526297951') OVER () FROM rt0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN (((-916838990)&(0.465181375092244))) AND (((x'1aaa') BETWEEN (NULL) AND ('623487802'))))) ORDER BY ((((((((CASE WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)AND(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))))OR(NULLIF('D3l℃', rt0.c1))))OR(HEX(rt0.c2))))OR(CAST(rt0.c4 AS REAL)))  NULLS LAST; -- 0ms;
SELECT rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)<(rt0.c0)) IN ()), MIN(((rt0.c4)LIKE(rt0.c2))), ((((rt0.c0) IS FALSE)) ISNULL) FROM rt0 WHERE (json_array_length((((((((((((('읖*KF螦l')OR(1.921969764E9)))OR(1526297951)))AND(NULL)))AND(x'')))AND(NULL)))AND('1528551322')), (('-754371573') IS FALSE)));SELECT DISTINCT (NOT (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 GROUP BY ((('24')) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))) COLLATE NOCASE, ((((rt0.c4 IN ()), (NOT (rt0.c2)), SQLITE_SOURCE_ID()))>((rt0.c1, CAST(rt0.c4 AS REAL), CAST(rt0.c3 AS NUMERIC)))), (((((-466502121, rt0.c0, rt0.c4)) NOT BETWEEN ((rt0.c0, rt0.c4, rt0.c4)) AND ((rt0.c0, x'', 'yE')))) NOTNULL) HAVING (((CAST(rt0.c4 AS BLOB), COUNT(*), (NOT (rt0.c4))))<=(((x'' IN ()), CASE WHEN rt0.c2 THEN x'' ELSE rt0.c3 END, rt0.c4))); -- 0ms;
SELECT DISTINCT (~ (((((rt0.c2)AND(rt0.c2)))AND(rt0.c4)))) FROM rt0 WHERE (HEX(DISTINCT (- (x'059d')))); -- 0ms;
SELECT DISTINCT ((((json_patch(rt0.c1, rt0.c2))AND(CASE ''  WHEN -4.66502121E8 THEN rt0.c4 ELSE rt0.c1 END)))AND(((rt0.c4)%(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT LOWER(((rt0.c4)<=(-1.267863114E9))) FROM rt0 WHERE (IFNULL((('808628339')AND(NULL)), (- (0.206148745291585)))) LIMIT -1280082196; -- 0ms;
SELECT DISTINCT ((((rt0.c3)<(rt0.c3)))IS((rt0.c0 IN ()))) FROM rt0 NOT INDEXED LIMIT -277903450 OFFSET 1199919507; -- 1ms;
SELECT DISTINCT ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((rt0.c2 IN ())) AND ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c0 IN (rt0.c4))) OVER (), CAST((rt0.c1 IN ()) AS BLOB), ABS(DISTINCT CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 END) FROM rt0; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM rt0 WHERE (('n\~/S' IN ()) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c3 IN (rt0.c4))) NOT BETWEEN (((rt0.c3)||(rt0.c4))) AND ((~ (rt0.c1)))) FROM rt0 WHERE ((((+ (0.28894462359895434)))>(CASE WHEN '918124834' THEN NULL WHEN '*8\*~n' THEN '1199919507' WHEN 0.822308663602707 THEN NULL ELSE x'' END))) GROUP BY (((((((((~ (rt0.c0)))OR(NULLIF(rt0.c0, rt0.c0))))OR(((rt0.c0) IS FALSE))))AND((((rt0.c1, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c1, rt0.c2)) AND ((rt0.c3, NULL, rt0.c3))))))AND(((rt0.c2)>>(rt0.c3)))); -- 0ms;
SELECT ALL LOWER(DISTINCT ((((((((rt0.c3)OR(rt0.c0)))OR(rt0.c1)))AND(rt0.c1)))OR(rt0.c1))) FROM rt0 LIMIT 1637510165; -- 0ms;
SELECT ((CASE rt0.c1  WHEN '-1863543957' THEN rt0.c4 ELSE rt0.c0 END) NOT BETWEEN (CAST(rt0.c2 AS TEXT)) AND ((((((((('429048501')AND(rt0.c4)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))), rt0.c4 COLLATE RTRIM, CAST(COALESCE(rt0.c1, rt0.c1) AS INTEGER) FROM rt0 GROUP BY (((rt0.c1, rt0.c3, rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, rt0.c4)) AND ((rt0.c0, rt0.c1, rt0.c3))) COLLATE RTRIM HAVING SUM(rt0.c1 COLLATE NOCASE) COLLATE BINARY; -- 0ms;
SELECT DISTINCT ((((rt0.c4)>=(rt0.c0))) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (CASE WHEN rt0.c3 THEN -701095681 ELSE rt0.c4 END)) FROM rt0 WHERE (CAST((('MᅧCꬺ%i') BETWEEN ('0.9612664030885794') AND ('')) AS INTEGER)) ORDER BY (NOT (rt0.c1 COLLATE RTRIM)) DESC, (((0.6087186950657234) NOTNULL) IN ()), '' DESC  NULLS FIRST LIMIT -1280082196 OFFSET -1879061796; -- 0ms;
SELECT ((rt0.c4) NOTNULL) FROM rt0 WHERE (CASE WHEN CAST(x'' AS BLOB) THEN (('1\n')IS NOT('0.13630630056611714')) WHEN (~ (NULL)) THEN (NOT (x'')) WHEN (+ (x'')) THEN 0.6087186950657234 COLLATE NOCASE ELSE CAST(0.6517319178483802 AS NUMERIC) END); -- 1ms;
SELECT ALL 'ᡕDDkA믳R' FROM rt0; -- 0ms;
SELECT RANK() OVER (), AVG((((rt0.c1, 0.28894462359895434, 0x5af9755f)) NOT BETWEEN (('MᅧCꬺ%i', rt0.c4, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c4)))), ((((rt0.c2)/('1815463766')))*(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END)), ((rt0.c1) IS TRUE), ((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))+(rt0.c0 COLLATE BINARY)), (((rt0.c4)) NOT BETWEEN ((CAST(rt0.c4 AS INTEGER))) AND ((MAX(rt0.c1)))), COUNT(*) FROM rt0 WHERE (CAST(CAST(NULL AS INTEGER) AS TEXT)) GROUP BY CAST('uU\v' AS TEXT), (NOT (((rt0.c4)GLOB(rt0.c3)))), CASE WHEN CASE WHEN rt0.c1 THEN rt0.c4 END THEN ((0.21851237205626883)<(NULL)) END HAVING 'ꮊ['; -- 0ms;
SELECT ((rt0.c2)GLOB(rt0.c4)) COLLATE NOCASE, (((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c0))))!=(((rt0.c1 IN (rt0.c0, rt0.c0))))), ((1653490487) BETWEEN (rt0.c4 COLLATE RTRIM) AND (rt0.c1)), ((rt0.c2 IN (rt0.c4, rt0.c4)) IN ()), ((CASE rt0.c2  WHEN 1.528551322E9 THEN rt0.c0 ELSE rt0.c4 END)<=(((rt0.c1)>=('1917529431')))) FROM rt0 WHERE (((LIKELIHOOD(x'', 0.15176243734690198)) NOTNULL)); -- 0ms;
SELECT ALL ((((((((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END)OR(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))))AND(CAST(rt0.c4 AS TEXT))))OR((((rt0.c1, rt0.c1, rt0.c0))<=((rt0.c2, 0x9acbbf3, rt0.c0))))))OR((((rt0.c4, rt0.c3, rt0.c3, NULL, rt0.c2))<((rt0.c3, rt0.c2, rt0.c2, rt0.c0, x'2730'))))), '-1066854315', AVG(TYPEOF(rt0.c3)) OVER () FROM rt0 WHERE ((((((((((('-754371573')>>('')))AND(CASE 0xffffffffc6b8f6e3  WHEN x'' THEN 'UX' WHEN 0.5683993737441028 THEN '' WHEN '/	G3\n0' THEN 1.526297951E9 END)))OR(CAST(-782235817 AS INTEGER))))OR(0.8990078977334919)))OR(((NULL) BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT DISTINCT LAG(CAST(rt0.c2 AS NUMERIC) COLLATE RTRIM, ((((rt0.c2)<<(rt0.c4))) NOTNULL), LTRIM(rt0.c1, rt0.c0) COLLATE BINARY) OVER () FROM rt0 WHERE (((json_quote('429048501')) ISNULL)); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ())) IS TRUE), CAST((+ (0.9358888308320155)) AS REAL), CAST(CAST(rt0.c0 AS INTEGER) AS REAL) FROM rt0 WHERE (CAST((('1090461961')||(x'')) AS REAL)); -- 0ms;
SELECT ((((((rt0.c0) IS TRUE))OR((~ (rt0.c1)))))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)) FROM rt0 WHERE ('-118606807') GROUP BY ((((rt0.c4) IS FALSE)) NOT NULL), ((((rt0.c4)>=(rt0.c3))) BETWEEN (((rt0.c3)AND(rt0.c1))) AND (((((rt0.c4)OR(rt0.c4)))OR(rt0.c2)))), CAST((rt0.c2 IN ()) AS TEXT) HAVING ((x'')IS((('-519645701')>>(rt0.c3)))); -- 1ms;
SELECT (((rt0.c3)LIKE(rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(NULL), ((TOTAL(rt0.c2)) ISNULL), '162315251' FROM rt0 WHERE (ABS(COALESCE(DISTINCT '%f', 0X367abad4, 0.04328468669107466, x''))); -- 0ms;
SELECT DISTINCT ((rt0.c0) BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))) AND (((rt0.c0)|(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((rt0.c0 COLLATE RTRIM) IS TRUE)) OVER () FROM rt0; -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT json_array(rt0.c3, rt0.c2), 0.972595658159523), (((((rt0.c0) IS FALSE), CAST(rt0.c2 AS INTEGER), NULL))<>((CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END, ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c1)), ((rt0.c2)<(rt0.c3))))), (('') BETWEEN ('rq') AND (0.36907404510693687)), CAST((((rt0.c2, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c3, rt0.c3)) AND ((rt0.c1, rt0.c3, rt0.c4))) AS NUMERIC), CAST(rt0.c1 AS INTEGER) COLLATE NOCASE FROM rt0 WHERE ((((-1062430839)) NOT BETWEEN (((0xffffffffc318fe19 IN (x'')))) AND (('1876978899' COLLATE NOCASE)))) ORDER BY (TRIM(rt0.c3, NULL) IN (((rt0.c4) IS FALSE), ((rt0.c1)!=(rt0.c4))))  NULLS FIRST; -- 0ms;
SELECT ALL (((rt0.c3)) NOT BETWEEN ((((rt0.c4) ISNULL))) AND ((((-7.82235817E8)<<(rt0.c2))))), (((TOTAL(rt0.c4)))==((CAST(rt0.c1 AS REAL)))), ((rt0.c0 COLLATE BINARY)/(0.7857767035747824)) FROM rt0 WHERE (((json_extract('v&', '-713437272'))AND(CASE WHEN NULL THEN '' WHEN NULL THEN '1917529431' WHEN 0.8448418952392551 THEN '-1956235825' ELSE x'' END))) GROUP BY (- (((rt0.c1)>=(rt0.c1)))), rtreenode(UPPER(DISTINCT rt0.c1), COALESCE('', rt0.c4)), (((~ (rt0.c2))) IS FALSE) HAVING SUM(((rt0.c1)IS NOT(rt0.c3)));SELECT CUME_DIST() OVER (), rt0.c4, x'' FROM rt0 WHERE ((+ ((((x''))>(('')))))); -- 0ms;
SELECT CAST(((rt0.c0) NOT BETWEEN (rt0.c0) AND ('')) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1 COLLATE NOCASE, CASE rt0.c4  WHEN rt0.c2 THEN rt0.c2 ELSE '' END, ((rt0.c1) IS FALSE)))>((((rt0.c2)AND(rt0.c0)), MAX(rt0.c1), LIKELY(DISTINCT rt0.c4)))) FROM rt0 WHERE (((((((((((((((0xffffffffd579cfa8)IS NOT('}&')))OR(x'' COLLATE NOCASE)))AND(((NULL)<=('tQQ\r')))))OR(HEX(DISTINCT 0xfffffffffa877305))))AND((- (0.7799439592811578)))))OR((0.01684200675548886 IN ()))))AND((((NULL)) NOT BETWEEN (('1876978899')) AND (('-480669707')))))) ORDER BY json_array(((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)), ((rt0.c1) NOT NULL), CAST(rt0.c2 AS INTEGER), rt0.c1 COLLATE NOCASE)  NULLS LAST, ((load_extension(rt0.c3))==(CAST(rt0.c4 AS TEXT))) ASC LIMIT 1138740143; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE (CAST(((x'')IS NOT('2')) AS BLOB)); -- 0ms;
SELECT ALL (((CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 END))>=((rt0.c1 COLLATE RTRIM))) FROM rt0 GROUP BY ((((rt0.c3)LIKE(rt0.c2)))+('-91786491')); -- 0ms;
SELECT DISTINCT LAG(CAST(rt0.c0 COLLATE BINARY AS TEXT), ((((rt0.c1)<<(rt0.c4))) ISNULL), (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))GLOB(json_valid(rt0.c4)))) OVER () FROM rt0 WHERE ((('-1613151352' COLLATE RTRIM)*(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL)) ISNULL) FROM rt0 WHERE (((((((0.0029869354397011882) NOT BETWEEN (x'') AND ('-1066854315')))AND((x'' IN ()))))AND((((0.8448418952392551, '98G[X_f', NULL))>((x'a21d93d6', x'', -1.021772263E9)))))); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c4 THEN rt0.c2 END THEN x'' END, CASE WHEN rt0.c3 COLLATE NOCASE THEN rt0.c0 WHEN UPPER(NULL) THEN (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((''))) WHEN ((((rt0.c2)OR('#}0pᅧ')))AND(rt0.c4)) THEN CASE rt0.c2  WHEN rt0.c4 THEN rt0.c1 END ELSE (rt0.c2 IN ()) END, LEAD(CAST(CAST(rt0.c1 AS TEXT) AS INTEGER), UPPER(CAST(rt0.c4 AS INTEGER)), ((((((rt0.c0) ISNULL))AND((- (rt0.c2)))))AND(CAST(rt0.c3 AS TEXT)))) OVER () FROM rt0 WHERE (IFNULL(DISTINCT -1.18606807E8 COLLATE BINARY, (0Xffffffffb042f039 IN ()))) ORDER BY ((('' IN ())) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4) IS FALSE)))  NULLS FIRST; -- 0ms;
SELECT ALL GROUP_CONCAT(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))) FROM rt0; -- 0ms;
SELECT ((rt0.c4) ISNULL) COLLATE RTRIM FROM rt0 WHERE (CAST(((0.2089455089838168) BETWEEN (0.8356641635236428) AND (0X4026c14f)) AS NUMERIC)) ORDER BY rt0.c1 DESC  NULLS LAST, CASE CASE WHEN 0xffffffffea1f2103 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN x'0251' THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END  WHEN ((rt0.c0)IS NOT(rt0.c3)) THEN CAST(rt0.c3 AS TEXT) ELSE rt0.c1 COLLATE RTRIM END ASC; -- 0ms;
SELECT CHANGES() FROM rt0 WHERE (((('-1261198502' IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))) NOTNULL), COUNT(*), ((rt0.c1 COLLATE RTRIM) NOT BETWEEN (((NULL) NOTNULL)) AND ((((rt0.c3, rt0.c4, 0x2a4aea28)) NOT BETWEEN ((rt0.c4, rt0.c3, rt0.c4)) AND ((rt0.c4, rt0.c1, x'd480'))))) FROM rt0 ORDER BY -7.13437272E8  NULLS FIRST, ((rt0.c3) BETWEEN (HEX(DISTINCT rt0.c0)) AND (CAST(rt0.c2 AS BLOB))) ASC, '-1879061796'  NULLS FIRST; -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)>=(rt0.c1)) THEN MAX(rt0.c1) ELSE ((((rt0.c3)AND(rt0.c4)))AND(rt0.c0)) END FROM rt0 WHERE (((((((((('?86z<n')AND('1675000431')))AND(0.5288401098786356)))AND(x'')))AND(NULL)) IN ())); -- 0ms;
SELECT DISTINCT (NOT (rt0.c4 COLLATE NOCASE)) FROM rt0 WHERE (CASE '94305035'  WHEN 0Xffffffffd761dce9 COLLATE RTRIM THEN (('1653490487') NOTNULL) WHEN (~ (NULL)) THEN ((x'65f1') BETWEEN (0x619a6c15) AND (0x7941821e)) WHEN ((x'') NOT BETWEEN (0.7857767035747824) AND (0.5414438878811214)) THEN ((NULL) NOT NULL) END) GROUP BY (CAST(-681452311 AS NUMERIC) IN ()); -- 0ms;
SELECT DISTINCT LIKELIHOOD(CAST(rt0.c1 AS BLOB), 0.5943829350896315), ROW_NUMBER() OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), (((rt0.c0)) BETWEEN ((NULL)) AND ((UNLIKELY(rt0.c0)))) FROM rt0 WHERE (('}l' COLLATE NOCASE IN ())); -- 0ms;
SELECT ALL ((MAX(rt0.c4)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c0 IN ()))), ((rt0.c0)AND(rt0.c1)) COLLATE NOCASE, CASE (rt0.c0 IN ())  WHEN 0.9612664030885794 THEN MAX(rt0.c2) ELSE ((rt0.c3)||(rt0.c4)) END FROM rt0; -- 0ms;
SELECT (((((rt0.c2, rt0.c4, rt0.c4)) BETWEEN (('阓qiY!w6', rt0.c0, rt0.c2)) AND ((rt0.c3, rt0.c4, rt0.c1)))) IS TRUE), MIN(((rt0.c1)GLOB(rt0.c4))), ((TOTAL_CHANGES()) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c3 END) AND (TOTAL(rt0.c4))) FROM rt0 WHERE ((((((NULL)) BETWEEN (('-1613151352')) AND ((x'6f7a')))) NOTNULL)); -- 0ms;
SELECT (((rt0.c4)) NOT BETWEEN ((CAST('-519645701' AS NUMERIC))) AND ((rt0.c1 COLLATE NOCASE))), json_array_length(((rt0.c3)>(rt0.c3))), (((((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c3))))%(0.21934008529514004)) FROM rt0 WHERE (((((555438378))==((1105320013))) IN (CAST('/	g3\n0' AS TEXT), (('-480669707')|(0.971482321190396))))) ORDER BY json_patch((((rt0.c0))<=((rt0.c4))), ((((rt0.c4)AND(rt0.c1)))OR(0xffffffffe3598ff5)))  NULLS LAST, (rt0.c3 COLLATE NOCASE IN (CAST(rt0.c2 AS REAL))) DESC  NULLS FIRST, LOWER(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END) DESC, CAST(rt0.c2 COLLATE BINARY AS NUMERIC)  NULLS FIRST LIMIT 583151399 OFFSET -1267863114; -- 0ms;
SELECT DISTINCT COALESCE(json_type(rt0.c2), COUNT(*)) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c3 AS TEXT) COLLATE RTRIM, ((((((((rt0.c2)OR(((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))))AND(UPPER(DISTINCT rt0.c0))))AND(json_patch(rt0.c2, rt0.c0))))OR(rt0.c4)), ((CASE WHEN rt0.c2 THEN -4.80669707E8 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END)>(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 WHERE (CAST(x'' COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT ((((rt0.c4) NOT NULL)) ISNULL) FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((rt0.c4) IS TRUE)) NOTNULL) FROM rt0 GROUP BY rt0.c4 HAVING rt0.c4; -- 0ms;
SELECT ALL (- (((((rt0.c2)OR(rt0.c2)))AND('-831675410')))) FROM rt0 WHERE (((CASE x'819d'  WHEN 0.7031316815787435 THEN NULL ELSE 0.8605128397318862 END) BETWEEN (CASE WHEN x'' THEN -251349950 WHEN NULL THEN 44621329 WHEN 'M-_!c轶	W!' THEN 0.206148745291585 END) AND ((((x'', x'62e3', 't8', 0.8337393927798801, 0.9608493410227271))==((-1.280082196E9, x'd367', 2044558879, '', x'')))))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT rt0.c4) COLLATE NOCASE, ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c0)))AND(((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))))OR(((rt0.c4)&(rt0.c2)))), (((COUNT(*)))=((UNLIKELY(rt0.c2)))) FROM rt0 ORDER BY (rt0.c1 IN ())  NULLS LAST, (- (((0.9612664030885794)<=(rt0.c2))))  NULLS LAST; -- 0ms;
SELECT ALL (~ ((NULL IN ()))) FROM rt0 WHERE ((((((('0.13630630056611714')AND(x'')))AND(x'')))&(('#e' IN ('-2059136665', 555438378))))); -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c2 THEN rt0.c3 WHEN x'90fc' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END IN ()), 0.12938262104722986, ((((rt0.c3)*(rt0.c4))) NOT NULL) FROM rt0 WHERE (CASE WHEN ((0.21851237205626883) NOT BETWEEN (-1.021772263E9) AND (1.62315251E8)) THEN ((('-1021772263')) NOT BETWEEN (('-782235817')) AND ((0.3253486743855222))) WHEN ((0Xffffffffe431be17)/(0.04794932561129028)) THEN (- (x'')) WHEN ((0X2a8de11) ISNULL) THEN ((('/	G3\n0'))=(('-1112378173'))) END); -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CAST(rt0.c1 AS TEXT), (- (NULL))) FROM rt0; -- 0ms;
SELECT ALL LIKELY(DISTINCT (~ (rt0.c3))), ((~ (rt0.c2)) IN ()), (rt0.c4 COLLATE BINARY IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (CASE WHEN rt0.c3 THEN rt0.c3 ELSE x'' END)) FROM rt0 WHERE (((((((NULL) IS TRUE))OR(CAST(0X3032b073 AS NUMERIC))))OR(SQLITE_VERSION()))); -- 0ms;
SELECT DISTINCT ((((NULL)AND('1660017828')))AND(STRFTIME(rt0.c3, rt0.c0, rt0.c4))) FROM rt0 WHERE ((((((-1.261198502E9) NOT BETWEEN ('?86z<n') AND ('+*}ex')), NULL COLLATE RTRIM, x'44a8'))<(((-694304282 IN ()), CAST('-668811907' AS NUMERIC), LAST_INSERT_ROWID())))) LIMIT 478296479 OFFSET 125043899; -- 0ms;
SELECT (~ (((rt0.c3)<=(x'')))) FROM rt0; -- 0ms;
SELECT ALL CAST((rt0.c1 IN ()) AS REAL) FROM rt0 WHERE (((((((x'')OR('rᴰ')))AND('')))!=('-530295340' COLLATE RTRIM))); -- 0ms;
SELECT (((((rt0.c0)/(rt0.c0))))<((rt0.c4))) FROM rt0 GROUP BY (((rt0.c2) IS TRUE) IN (CAST(NULL AS INTEGER), rt0.c2)), CAST(rt0.c4 AS REAL), CASE WHEN 0.36907404510693687 THEN NULL ELSE rt0.c2 END COLLATE RTRIM HAVING COUNT(*) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY (((rt0.c0))==((((rt0.c4)IS NOT(rt0.c0)))))  NULLS LAST, ((((((rt0.c4) NOT NULL))AND(rt0.c4)))AND((+ (rt0.c2)))) DESC GROUPS BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), DENSE_RANK() OVER (), TOTAL((- (rt0.c0))) FILTER(WHERE (((((- (rt0.c4)))OR((rt0.c2 IN ()))))AND(0xffffffff841f63a3))) OVER () FROM rt0 WHERE (((((x'4b6c')>(''))) NOT BETWEEN ((NULL IN ('P <Np'))) AND (NULL))); -- 0ms;
SELECT COUNT(((rt0.c2)GLOB(rt0.c1))) OVER (), ((CAST(rt0.c3 AS INTEGER)) ISNULL), ROW_NUMBER() OVER () FROM rt0 ORDER BY ((((((rt0.c0)OR(rt0.c4)))AND(rt0.c0))) IS FALSE) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((HEX(rt0.c2)) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c2) BETWEEN ('#e') AND (rt0.c4))), CAST(GROUP_CONCAT(rt0.c3) AS BLOB), (((CAST(rt0.c2 AS INTEGER), (((rt0.c4, rt0.c1, rt0.c0))<=(('Dr(', rt0.c0, rt0.c4))), ((rt0.c3) NOTNULL)))<((NULL, (((rt0.c0)) BETWEEN ((rt0.c1)) AND ((NULL))), ((rt0.c1)GLOB(rt0.c0))))) FROM rt0 WHERE ((NOT ((((('')AND(0xffffffffd579cfa8)))OR(0.14140418152701106))))) GROUP BY rt0.c1 LIMIT 1244601630; -- 0ms;
SELECT DISTINCT CAST(((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c0)))AND(rt0.c2)))AND(rt0.c2)) AS NUMERIC), CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END THEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c1)) ELSE ((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c3)) END, (((rt0.c0 IN ())) BETWEEN ((rt0.c1 IN ())) AND (rt0.c2 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c4) IS TRUE)  WHEN rt0.c0 THEN TRIM(rt0.c1) WHEN ((rt0.c4)>>(rt0.c2)) THEN CASE WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c0 THEN '' END WHEN ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((rt0.c3)<<(rt0.c0)) WHEN (((rt0.c2)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN rt0.c3 COLLATE BINARY WHEN ((x'5644') IS FALSE) THEN ((rt0.c1)!=(rt0.c4)) END FROM rt0 GROUP BY CAST(HEX(DISTINCT rt0.c0) AS NUMERIC), ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c4 THEN NULL END)IS(LOWER(rt0.c0))), (json_array_length(rt0.c0, rt0.c1) IN (((rt0.c2)<(rt0.c1)))) HAVING ((rt0.c2 COLLATE RTRIM)LIKE(GROUP_CONCAT(NULL)));SELECT DISTINCT (((rt0.c3))<((((rt0.c3)<(rt0.c4))))), RANK() OVER (), LIKELIHOOD((((rt0.c3))<((rt0.c2))), 0.2640904881302003) FROM rt0 GROUP BY ((((rt0.c1) BETWEEN (rt0.c0) AND (x'fdfc3091')))+((rt0.c2 IN ()))) HAVING (((((rt0.c3))>((rt0.c2)))) IS FALSE) ORDER BY CAST(((((((((((((0.14028858973614455)OR(rt0.c0)))AND(NULL)))OR(rt0.c2)))OR(rt0.c0)))OR(0Xffffffff95013855)))AND(rt0.c3)) AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ())) IS FALSE), rt0.c3, ((((rt0.c1)LIKE(rt0.c3))) ISNULL) FROM rt0 WHERE ((((~ (x'')))IS NOT(((NULL) BETWEEN ('') AND (-334372231))))); -- 0ms;
SELECT DISTINCT ((ABS(DISTINCT 0X6c23370b))==(((rt0.c1) IS FALSE))), (((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c1)))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END) AND ((((rt0.c1, rt0.c0, rt0.c0))<=((rt0.c0, rt0.c3, rt0.c2))))), ((((rt0.c2) NOT NULL))|((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(((((rt0.c1)OR(rt0.c1)))OR(rt0.c1))), rt0.c0, ((rt0.c2) ISNULL) FROM rt0 WHERE ((((0.0554290873080745, NULL, '')) BETWEEN (((('-2059136665') NOT NULL), CAST('' AS NUMERIC), ((((NULL)OR('24')))OR(NULL)))) AND ((((0.6517319178483802) NOT BETWEEN ('') AND (x'')), CASE WHEN x'' THEN 0.6117478996414001 END, ((NULL)IS('HUjI#AY')))))); -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (((rt0.c3)>(rt0.c4))) AND (rt0.c3 COLLATE BINARY)), ((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0))) NOT BETWEEN (((((((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c2)))OR(rt0.c1))) AND ((((rt0.c1)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3))))), '' FROM rt0; -- 0ms;
SELECT ALL ((MIN(rt0.c3)) BETWEEN (rt0.c4 COLLATE NOCASE) AND (((((rt0.c0)AND(rt0.c1)))OR(rt0.c2)))), CASE WHEN CAST(rt0.c3 AS BLOB) THEN CASE WHEN rt0.c2 THEN rt0.c3 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END END, SUM(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)) COLLATE RTRIM) OVER (), '-1021772263', COUNT((x'' IN ())) OVER ( ORDER BY ((((rt0.c3)OR(rt0.c2))) IS FALSE) DESC) FROM rt0 WHERE (((((x'')*(x'')))IS(((0.5558391047931525)GLOB(x''))))) LIMIT 1244601630 OFFSET -365912608; -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN 'vK' THEN rt0.c2 ELSE rt0.c4 END COLLATE RTRIM FROM rt0 LIMIT 828009928; -- 0ms;
SELECT DISTINCT (((((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((0.8552393174987442))))<>((rt0.c1 IN ()))) FROM rt0 WHERE (((((('1105021461'))>((NULL))))>=((('-1026660903')|(-1426664358))))); -- 0ms;
SELECT DISTINCT (((((+ (rt0.c3)))AND(CAST(rt0.c4 AS REAL))))OR(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN ((rt0.c2)%(rt0.c2)) THEN TRIM(rt0.c0) WHEN ((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)) THEN ((rt0.c1)GLOB(rt0.c2)) WHEN ((rt0.c0) IS TRUE) THEN x'' ELSE ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c4 END)) AND ((((rt0.c3)<(rt0.c4))))) FROM rt0 WHERE ((((CAST(x'f156d1fe' AS TEXT)))!=((NULLIF(DISTINCT NULL, NULL))))); -- 0ms;
SELECT rt0.c3 FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c4)OR('0.7813151408568837')))AND(rt0.c4)))AND(rt0.c2)))OR(x''))) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c0 THEN (rt0.c1 IN (rt0.c4, rt0.c1)) END, ((x'') IS FALSE), json_patch(rt0.c3 COLLATE BINARY, CAST(rt0.c2 AS INTEGER)) FROM rt0 WHERE (CASE WHEN (((0.556211327750685))>=((x''))) THEN CASE 0.18503871461404497  WHEN x'f6ae' THEN x'd240a6d1' WHEN -2076039499 THEN -1.795082155E9 WHEN '' THEN NULL END ELSE (1526297951 IN ()) END); -- 1ms;
SELECT DISTINCT ((((rt0.c1)||(rt0.c0)))==(((((rt0.c4)OR(rt0.c3)))OR(NULL)))), (MAX(rt0.c1) IN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)), x'', COUNT(GROUP_CONCAT(((rt0.c2)<>(rt0.c3)))), (((CASE WHEN rt0.c1 THEN rt0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 END, ((rt0.c4) NOTNULL), ((((((((x'5bb7')AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c3))))>((MIN(rt0.c2), rt0.c4 COLLATE BINARY, ((rt0.c2) ISNULL)))) FROM rt0;SELECT ALL rt0.c4, rt0.c3, ((((((((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c0)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))AND(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END)))OR(CAST(rt0.c1 AS TEXT))))OR(((rt0.c2)*(rt0.c3)))))AND(CAST(rt0.c1 AS NUMERIC))))OR(x'16cd')) FROM rt0 WHERE (1774727848) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c2 END) NOT NULL); -- 0ms;
SELECT ((rt0.c0) BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c4 END) AND (((rt0.c1) NOTNULL))) FROM rt0; -- 0ms;
SELECT (+ (rt0.c3)) FROM rt0 WHERE (x'3301'); -- 0ms;
SELECT CASE WHEN rt0.c0 COLLATE BINARY THEN ((x'') NOT NULL) ELSE ((rt0.c0)&(rt0.c2)) END, (((rt0.c3 IN (rt0.c4)))<<((- ('')))), ((x'')>>(rt0.c3)) COLLATE BINARY FROM rt0 WHERE (((CASE '-1021772263'  WHEN 0x1c57fb9e THEN 9223372036854775807 WHEN 0.5381590107054337 THEN '1045869651' WHEN 0.5220267819685069 THEN x'06e1' ELSE x'' END) NOT BETWEEN ((+ (x''))) AND ((~ (NULL))))) ORDER BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))<=((((rt0.c3))<=((rt0.c1))))), ((CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c4 END)GLOB(rt0.c1)); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE RTRIM) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)<=(rt0.c3)) AS BLOB) FROM rt0 GROUP BY ((rt0.c4) NOT NULL) COLLATE RTRIM HAVING ((json_array_length(rt0.c4))<>((~ (rt0.c4)))); -- 0ms;
SELECT DISTINCT ((UNLIKELY(rt0.c4))%(COUNT(rt0.c2))), ((rt0.c3) ISNULL), rt0.c4 FROM rt0 ORDER BY (((~ (rt0.c4))) BETWEEN (rt0.c0) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c0 END)) ASC, ((((((((rt0.c4 COLLATE NOCASE)AND(CASE WHEN x'' THEN '943797499' ELSE rt0.c0 END)))OR((NOT (rt0.c0)))))AND((((rt0.c3)) BETWEEN ((rt0.c1)) AND ((0x6efcaeed))))))OR(((((rt0.c0)OR(rt0.c2)))AND(rt0.c1)))) DESC; -- 0ms;
SELECT ALL ((((rt0.c1)OR(((rt0.c0)=(rt0.c0)))))AND(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 END)), (((((rt0.c4) IS FALSE)))=((((rt0.c4)GLOB(rt0.c0))))), ((rt0.c0) IS FALSE) FROM rt0 WHERE (((('1138740143'))=(((NOT (-1285374618)))))); -- 1ms;
SELECT DISTINCT LAG(((((((((((((((rt0.c0)%(rt0.c4)))OR(rt0.c2)))AND(NULL)))AND(rt0.c3 COLLATE BINARY)))OR(((rt0.c4)<>(rt0.c3)))))AND((+ (rt0.c1)))))AND(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c0)))), ((+ (rt0.c1)) IN (((rt0.c2) IS FALSE))), '0.7031316815787435') OVER (), ((((0.687425826643152) NOT BETWEEN (rt0.c3) AND (rt0.c3)))OR(((rt0.c3)/(rt0.c4)))), ((((rt0.c3)-(rt0.c4)))-((((rt0.c2, rt0.c3, rt0.c4)) BETWEEN ((rt0.c3, rt0.c0, rt0.c2)) AND (('<dw', rt0.c1, '-1734499222'))))) FROM rt0 LIMIT -381430051 OFFSET -1026660903; -- 0ms;
SELECT DISTINCT LEAD(json_array_length((+ (x'')), ('6y' IN ())), NULL, ((rt0.c2 COLLATE NOCASE)OR(rt0.c4 COLLATE BINARY))) OVER () FROM rt0;SELECT DISTINCT LAST_VALUE(((((rt0.c4)OR(rt0.c0 COLLATE NOCASE)))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1))))) OVER (), rt0.c3, CASE WHEN ((((rt0.c4)AND(rt0.c0)))AND(rt0.c0)) THEN rt0.c1 END FROM rt0 ORDER BY ((x'')-(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) ASC  NULLS FIRST, (CASE WHEN rt0.c2 THEN rt0.c4 END IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2) NOT NULL) THEN ((rt0.c2)IS NOT(rt0.c3)) ELSE CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c3 END END FROM rt0 WHERE ((((((NULL, '', 0.6173144304357595)) NOT BETWEEN ((0.4525470109735936, 'FbnZ*', '')) AND (('P <Np', 0.01684200675548886, '-576786474')))) NOT BETWEEN ((('') NOT BETWEEN (0.7592961823434609) AND ('#e'))) AND (NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TOTAL(CAST('' AS REAL)) OVER (), GROUP_CONCAT(CASE rt0.c0  WHEN rt0.c0 THEN -367058685 END), rt0.c1 FROM rt0; -- 0ms;
SELECT CASE WHEN TOTAL(rt0.c0) THEN LIKE(rt0.c2, rt0.c2, '&') END, (((rt0.c4)) NOT BETWEEN ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (NULL)))) AND ((((rt0.c1) IS FALSE)))), (((((((((((((rt0.c1 IN ()))AND(NULLIF(rt0.c2, rt0.c1))))OR(((rt0.c1) ISNULL))))AND(LOWER(rt0.c2))))AND(((rt0.c1)<<(rt0.c4)))))OR(((rt0.c2)<>(rt0.c2)))))AND(((rt0.c1) ISNULL))), (((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN '' THEN rt0.c4 ELSE rt0.c1 END, LIKELY(rt0.c4), (- (rt0.c0))))>((((((rt0.c3)AND(rt0.c2)))OR(rt0.c4)), ((rt0.c2)=(rt0.c4)), GROUP_CONCAT(NULL)))), ((NULL COLLATE NOCASE)<=(TRIM(DISTINCT rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c0))>=((rt0.c3)))) ISNULL) FROM rt0; -- 0ms;
SELECT '-480669707', CASE WHEN rt0.c2 COLLATE NOCASE THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END END, LIKELIHOOD(CASE WHEN rt0.c4 THEN rt0.c4 END, 0.5724508018169872) FROM rt0 WHERE (((CAST(x'' AS TEXT))+((+ (x''))))); -- 0ms;
SELECT rt0.c3 FROM rt0 WHERE (CAST((((0.04794932561129028)) BETWEEN (('')) AND ((NULL))) AS NUMERIC)); -- 0ms;
SELECT ALL (((((((((rt0.c0 IN (rt0.c4, rt0.c1)))OR((~ (rt0.c3)))))AND((('H-7') IS TRUE))))OR('')))OR(rt0.c3)) FROM rt0 LIMIT 1526620323 OFFSET 105276051; -- 0ms;
SELECT ((IFNULL(DISTINCT -2144084937, rt0.c0)) NOT BETWEEN ((rt0.c1 IN ())) AND (rt0.c2 COLLATE NOCASE)), ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c2))) NOT BETWEEN (rt0.c3) AND (((((rt0.c0)OR(rt0.c4)))OR(rt0.c0)))), (((((((('')AND(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c1 END)))AND(((rt0.c3) ISNULL))))OR(x'')))OR((((rt0.c1))>((rt0.c3))))) FROM rt0 WHERE (((0.6517319178483802 COLLATE NOCASE) NOT BETWEEN (x'ceac') AND (((((NULL)AND('ml')))AND(NULL))))); -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c0)OR(rt0.c4)))OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c4))  WHEN COUNT(rt0.c2) THEN (rt0.c2 IN ()) WHEN rt0.c4 COLLATE NOCASE THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c1 ELSE ((rt0.c2)>=(rt0.c0)) END, (rt0.c3 COLLATE NOCASE IN ()), CASE WHEN ((rt0.c4)/(x'2b32')) THEN (- (rt0.c2)) ELSE CAST(rt0.c1 AS REAL) END FROM rt0 WHERE (('-752503656' IN ()) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (rt0.c4 COLLATE RTRIM IN ()), rt0.c3, (('429048501') ISNULL), CAST(rt0.c1 COLLATE RTRIM AS TEXT), (((((rt0.c1)OR(rt0.c2)))AND(NULL)) IN (rt0.c0)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((NULL)AND(rt0.c0)))OR(rt0.c1)) THEN ((rt0.c1)>=(rt0.c4)) END, ((IFNULL(DISTINCT rt0.c0, rt0.c1)) IS TRUE), ((rt0.c3)AND(rt0.c2)) COLLATE RTRIM FROM rt0 WHERE (((((TOTAL_CHANGES())AND((((('2034336286')OR('')))OR('')))))AND(x'' COLLATE NOCASE))); -- 0ms;
SELECT (+ (rt0.c1 COLLATE BINARY)), (AVG(rt0.c3) IN ()), (((((rt0.c1) ISNULL), SUM(rt0.c0), CASE rt0.c4  WHEN rt0.c2 THEN 0.959935999725512 ELSE rt0.c2 END, ((rt0.c3)OR(rt0.c3)), (((''))>((rt0.c0)))))!=((CAST(rt0.c0 AS BLOB), COALESCE(rt0.c0, rt0.c0, rt0.c4, rt0.c2), LTRIM(rt0.c1, rt0.c3), ((rt0.c4)>(rt0.c1)), (+ (rt0.c0))))), ((((x'')&(rt0.c4))) NOT NULL), ('0.7031316815787435' IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS NUMERIC))||(rt0.c0 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT LAG(((('')) NOT BETWEEN ((CAST(rt0.c2 AS BLOB))) AND (((- (rt0.c1))))), CASE rt0.c0  WHEN (- (rt0.c2)) THEN x'26f5' WHEN (rt0.c3 IN ()) THEN (((rt0.c2))<=((rt0.c1))) WHEN (rt0.c2 IN (rt0.c1)) THEN (NOT (rt0.c3)) END, CASE WHEN ((rt0.c2)+(rt0.c2)) THEN ((rt0.c2)IS(rt0.c4)) END) OVER () FROM rt0 WHERE ((- (CAST(NULL AS INTEGER)))); -- 0ms;
SELECT CAST(MAX(rt0.c4) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL TRIM(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ROWS  CURRENT ROW EXCLUDE TIES) FROM rt0 GROUP BY (((((rt0.c2) IS FALSE)))=((((rt0.c0)|(rt0.c4))))); -- 1ms;
SELECT CAST(((rt0.c4)!=(rt0.c3)) AS BLOB), (NOT (rt0.c2)), ((CAST(rt0.c4 AS INTEGER))IS(((((rt0.c2)OR(rt0.c2)))OR(rt0.c3)))) FROM rt0 WHERE ((((('+''n#') IS TRUE))GLOB(((((NULL)AND(x'')))OR('0.959935999725512'))))); -- 0ms;
SELECT DISTINCT (~ ((NOT (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL CAST(rt0.c1 AS NUMERIC) COLLATE NOCASE, ((CAST(rt0.c1 AS INTEGER))<>(TRIM(DISTINCT rt0.c4, rt0.c2))), ((rt0.c0 COLLATE BINARY)|('-1613151352')) FROM rt0 WHERE ((((UPPER('1773693271'), ((NULL) BETWEEN (-3.34372231E8) AND (0.6049636350617262)), (NOT ('157526787'))))!=(((('-668811907')<(0.0)), CASE WHEN NULL THEN 0.3351381602100285 WHEN x'' THEN x'' WHEN x'aef8' THEN 0.07459912060187301 ELSE 0.03666925115966779 END, CAST(NULL AS NUMERIC))))); -- 0ms;
SELECT ALL '943797499' COLLATE RTRIM FROM rt0 WHERE (CAST(((1862053613)<<('?V4NMEf')) AS INTEGER)) ORDER BY (((((((('1528551322')OR(rt0.c4)))OR(rt0.c2)))OR(NULL)))OR(CAST(rt0.c3 AS REAL))) ASC; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c1))|(rt0.c3)), TOTAL((- (x''))) OVER (), rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3 IN ()), rt0.c4, ((rt0.c4)>(rt0.c4)), ((rt0.c3)<(rt0.c3)), CAST(rt0.c3 AS INTEGER), ((x'') NOT BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c4))<((CAST(rt0.c4 AS INTEGER), rt0.c1 COLLATE RTRIM, SUM(rt0.c2), CHAR(rt0.c0), '', SUBSTR(rt0.c2, rt0.c1), ((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c1)))OR(rt0.c2))))) FROM rt0 WHERE ((((0.04794932561129028)) BETWEEN ((LIKELY(DISTINCT 0.36907404510693687))) AND (((NULL IN (1178908923, '-1971895229')))))); -- 0ms;
SELECT (((rt0.c3)LIKE(rt0.c2)) IN ()), 0.8145737082515685, (((~ (rt0.c4)))||(((((rt0.c2)AND(rt0.c0)))OR(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((89848532)>((((rt0.c1))>((rt0.c3))))), COUNT(((rt0.c3) ISNULL)) OVER (), CASE WHEN (((-1123404517, rt0.c2, rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c3, rt0.c2, rt0.c3)) AND ((rt0.c4, rt0.c2, rt0.c2, rt0.c4, rt0.c1))) THEN rt0.c2 COLLATE NOCASE END FROM rt0 WHERE (CASE NULL  WHEN '-401230962' COLLATE RTRIM THEN CAST(0.8058181428457752 AS REAL) END); -- 0ms;
SELECT COUNT((+ (rt0.c1))) OVER (), ((rt0.c4 COLLATE BINARY) IS TRUE), SUM(((rt0.c2)-(rt0.c3))) FROM rt0; -- 1ms;
SELECT NULL FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)LIKE(rt0.c4))) NOTNULL) FROM rt0 GROUP BY (CAST(rt0.c1 AS BLOB) IN ()); -- 0ms;
SELECT ALL (CAST(rt0.c2 AS TEXT) IN (LTRIM(rt0.c0, rt0.c4))) FROM rt0 WHERE (((+ ('768835665')) IN ())); -- 0ms;
SELECT DISTINCT (((((rt0.c4 IN ()))AND((~ (rt0.c1)))))OR('-1476057669' COLLATE NOCASE)) FROM rt0 WHERE (NULLIF(((NULL) IS FALSE), MIN(NULL, 0.009305059426012896))); -- 0ms;
SELECT ALL CASE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END  WHEN (rt0.c0 IN (rt0.c3, rt0.c3)) THEN rt0.c0 COLLATE BINARY WHEN ((rt0.c1) NOTNULL) THEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN NULL THEN rt0.c0 ELSE rt0.c0 END WHEN CASE WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c3 END THEN AVG(rt0.c3) ELSE ((rt0.c1)<<(NULL)) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 COLLATE BINARY THEN ((((rt0.c0)OR(rt0.c4)))AND(rt0.c2)) END, (('i9' IN ()) IN (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c1)))AND(rt0.c3)))OR('-754371573')), ((rt0.c4)<=(rt0.c3)))), ((((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c1))) NOT BETWEEN (((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1))) AND ((rt0.c0 IN ()))), CASE rt0.c0 COLLATE RTRIM  WHEN ((rt0.c2)!=(rt0.c4)) THEN ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) WHEN ROUND(rt0.c4, '0.03666925115966779') THEN ((rt0.c4) BETWEEN (rt0.c1) AND (x'')) WHEN CAST(rt0.c1 AS NUMERIC) THEN ((rt0.c0)OR(rt0.c3)) END, IFNULL(DISTINCT CASE rt0.c4  WHEN '' THEN x'' END, CAST(rt0.c2 AS TEXT)) FROM rt0 WHERE (CAST((('YEAw{qR')=('1231952643')) AS INTEGER)) ORDER BY (((((rt0.c2)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2)))) NOTNULL); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4) IS TRUE) THEN ((rt0.c3)*(rt0.c1)) ELSE ((rt0.c2)GLOB(rt0.c1)) END, rt0.c3, ((((rt0.c4) IS FALSE)) BETWEEN (rt0.c0) AND ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))) FROM rt0 WHERE (CASE ((-7.54371573E8)<<(x''))  WHEN CAST('808628339' AS INTEGER) THEN ((-131126722)<=(NULL)) WHEN ((((((((x'')OR(x'')))AND('FZ\r)0')))AND('I뱍^ٗMim')))AND(NULL)) THEN ((x'')*(0.6488227869764488)) WHEN (('KM嗔,') NOTNULL) THEN CASE WHEN x'ece8' THEN x'0f3a' ELSE NULL END ELSE ('(*MqY?~7' IN (x'')) END); -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0 WHERE (((((0xffffffffb41f11da)>('0.8605128397318862')))*(0.822308663602707 COLLATE BINARY))) GROUP BY CASE WHEN CAST(rt0.c1 AS BLOB) THEN (NOT (NULL)) END LIMIT -1467101549 OFFSET -1646935100; -- 0ms;
SELECT ALL SUBSTR((rt0.c2 IN ()), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c1 END) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 1ms;
SELECT DISTINCT (((GROUP_CONCAT(NULL)))>((((rt0.c4)<>(-367058685))))), TOTAL_CHANGES(), CAST(rt0.c1 AS INTEGER) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))GLOB(((rt0.c0) IS FALSE))) FROM rt0 WHERE ((NOT (((((0xffffffffffffffff)AND(591176178)))AND(0.23598041259963787))))); -- 0ms;
SELECT (((NULL))<=(((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4)))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4)) NOT BETWEEN ((((rt0.c4) BETWEEN ('1178908923') AND (rt0.c4)))) AND ((((rt0.c1)!=(rt0.c3))))) FROM rt0 WHERE (((((0.9800127025974088)AND(NULL)))OR('-118606807')) COLLATE RTRIM) ORDER BY (x'b591' IN ()) ASC; -- 0ms;
SELECT (CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN x'32c8' WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END IN ()) FROM rt0; -- 0ms;
SELECT ('bf' IN (rt0.c0)) FROM rt0 ORDER BY (NULL IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((rt0.c0))>((NULL))) FROM rt0 WHERE (((CAST(x'cc9a' AS TEXT))IS NOT(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT 0.8990078977334919, ((((((rt0.c1)AND(rt0.c1)))AND(((((((((rt0.c1)AND('H')))OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c1)))))OR(((rt0.c2)<<(rt0.c3)))), GROUP_CONCAT(CAST(rt0.c1 AS REAL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c3) NOT BETWEEN ('1526297951') AND (rt0.c3))  WHEN AVG(0.0554290873080745) THEN CAST(rt0.c2 AS REAL) ELSE CAST(rt0.c1 AS TEXT) END FROM rt0 GROUP BY ((CAST(rt0.c2 AS INTEGER))LIKE(CAST(rt0.c1 AS NUMERIC))) ORDER BY (-1863543957 IN (ABS(rt0.c1))) ASC; -- 0ms;
SELECT ((((rt0.c4)|(rt0.c2))) ISNULL) FROM rt0 WHERE (LIKE(0.23598041259963787, NULL, '7') COLLATE BINARY); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((((- (NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c0))<=(((rt0.c2) NOT NULL))) FROM rt0; -- 1ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (((((- ('ax'))))>=((((NULL) BETWEEN ('') AND (0.9658922167429154)))))); -- 0ms;
SELECT ((((((((((((rt0.c3)OR(rt0.c0)))AND(rt0.c0)))OR((~ (rt0.c0)))))AND(-7.01095681E8)))AND(((NULL)&('1105320013')))))OR(rt0.c2 COLLATE NOCASE)), LIKELIHOOD(DISTINCT (rt0.c0 IN ()), 0.769103984194806), ((NULL) ISNULL) FROM rt0; -- 0ms;
SELECT ((0.07243613105281699)!=(((rt0.c2)IS NOT(rt0.c3)))), (~ (0.8413359291891288)), (((NOT (rt0.c0)))*(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN x'' WHEN rt0.c0 THEN 0.48428429033079434 ELSE rt0.c4 END)) FROM rt0; -- 0ms;
SELECT DISTINCT '-353682006' FROM rt0 GROUP BY (((((rt0.c3)OR(0.5414438878811214)))OR(rt0.c4)) IN ()) HAVING ((((((((((rt0.c0) IS FALSE))OR(CAST(rt0.c4 AS NUMERIC))))OR(((rt0.c0)AND(rt0.c3)))))OR((rt0.c3 IN ()))))OR(((((rt0.c2)OR(rt0.c1)))OR(rt0.c2)))); -- 0ms;
SELECT DISTINCT rt0.c2, x'', ((((((rt0.c1)AND(rt0.c0)))OR(rt0.c2)))IS('')), CASE WHEN ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)) THEN 0.8205871111588995 WHEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c3 END THEN ((rt0.c4)<(rt0.c0)) WHEN CAST(rt0.c1 AS REAL) THEN MIN(rt0.c4) ELSE ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c1)) END, NULLIF(((rt0.c4) NOT NULL), ((1581063347)/(rt0.c2))) FROM rt0 WHERE ((((((~ (NULL)))AND(((0.6669815696694864) BETWEEN (-1669036453) AND (x'')))))AND(((x'982f')IS NOT(''))))); -- 0ms;
SELECT DISTINCT ((rt0.c2) IS TRUE), load_extension((((rt0.c1, rt0.c3, rt0.c2))>((rt0.c1, '-1865919628', NULL))), ((((((((rt0.c4)OR(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c1))), (((rt0.c4)==(rt0.c3)) IN ()) FROM rt0 WHERE (CASE (('429048501')<<('-2059136665'))  WHEN (('-702227133')>(NULL)) THEN ((NULL)GLOB(NULL)) END); -- 0ms;
SELECT DISTINCT ((((rt0.c1) BETWEEN (9.4305035E7) AND (rt0.c0))) ISNULL), NULL, (~ (COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT ((x'') IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT ((json_extract(rt0.c2, rt0.c1))GLOB(TYPEOF(rt0.c3))), CASE ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2))  WHEN rt0.c0 COLLATE NOCASE THEN NULL ELSE ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)) END, CASE (0.2819099766822889 IN ())  WHEN (+ (rt0.c4)) THEN CASE WHEN rt0.c1 THEN rt0.c3 END END FROM rt0 ORDER BY (((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))GLOB(((rt0.c3)AND('▲9t'))));SELECT CAST((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) AS INTEGER) FROM rt0 WHERE (((((((2.044558879E9)AND(-1.971895229E9)))AND(NULL)))>(0.8406265024516582))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) NOTNULL) THEN ((rt0.c2)>(rt0.c2)) WHEN ((rt0.c1)|(rt0.c3)) THEN rt0.c0 WHEN ((rt0.c1) IS FALSE) THEN CASE 'X+'  WHEN rt0.c0 THEN rt0.c4 END ELSE ((((((((((((x'9423')AND(rt0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c1)) END FROM rt0 WHERE (((((('-1863543957' IN ('	B EgIZꪉc')))AND(((((((((1536425980)AND('-635130932')))OR(x'55d2')))OR(x'')))AND('1050126492')))))OR((+ (-1.123404517E9))))); -- 1ms;
SELECT ALL ((((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0))) ISNULL) FROM rt0 WHERE (((((NULL) ISNULL)) BETWEEN ('0.21934008529514004' COLLATE RTRIM) AND (((NULL)GLOB(0.4218570250227369))))); -- 0ms;
SELECT DISTINCT (('475528094')>=(AVG(rt0.c0))) FROM rt0; -- 0ms;
SELECT (0.32219643297695244 IN ()), CASE WHEN ((rt0.c1) NOT NULL) THEN rt0.c2 COLLATE RTRIM ELSE INSTR(rt0.c3, rt0.c1) END, CAST(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) AS BLOB) FROM rt0 WHERE ((((('1926946237') NOT BETWEEN (NULL) AND (x'')))>(((((NULL)AND('-2144084937')))OR(''))))); -- 0ms;
SELECT ALL ((((((rt0.c3)GLOB(rt0.c2)))AND(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4)))))AND(((((((((rt0.c1)OR(rt0.c2)))AND(0.687425826643152)))OR(rt0.c3)))AND(rt0.c1)))) FROM rt0 WHERE ('1314978018'); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)AND(rt0.c0)))OR(((rt0.c1)LIKE(rt0.c0)))))AND(((rt0.c0) NOTNULL))))OR((rt0.c2 IN (rt0.c2)))))OR(((rt0.c1)|(rt0.c3)))) FROM rt0 WHERE (((((('' IN ()))OR(CAST('1090461961' AS BLOB))))OR('*\ns'))) LIMIT 175796781; -- 1ms;
SELECT CASE (rt0.c2 IN ())  WHEN CASE WHEN rt0.c4 THEN rt0.c2 END THEN rt0.c2 COLLATE BINARY WHEN (((rt0.c3))>=((rt0.c1))) THEN ((rt0.c2) ISNULL) WHEN (((rt0.c0, rt0.c2, rt0.c4))>=((rt0.c1, rt0.c2, rt0.c0))) THEN (rt0.c1 IN (rt0.c4)) ELSE (('-669349702') IS FALSE) END, ((((x'')|(rt0.c1))) BETWEEN (rt0.c2 COLLATE BINARY) AND (load_extension(rt0.c0, rt0.c3))), (((rt0.c2, rt0.c3, rt0.c1)) BETWEEN ((((rt0.c0) NOTNULL), LIKELIHOOD(rt0.c2, 0.19640156962388833), (NOT (rt0.c2)))) AND ((rt0.c1 COLLATE RTRIM, rt0.c1, MIN(rt0.c3)))) FROM rt0 WHERE (IFNULL(NULL, x'') COLLATE RTRIM);SELECT DISTINCT CASE WHEN x'' THEN TRIM(rt0.c1, rt0.c0) ELSE '2063658817' END FROM rt0; -- 0ms;
SELECT '-1' COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ((TRIM(rt0.c1)) NOT NULL) FROM rt0 WHERE ((- (CASE ''  WHEN 1.814247179E9 THEN 0.04328468669107466 ELSE '-960956701' END))); -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt0 WHERE ((~ ((0.24141938272107166 IN ())))) GROUP BY (((((rt0.c2, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((rt0.c3, rt0.c3, rt0.c3))))||('')) HAVING CAST(json_extract(x'', rt0.c0) AS REAL);SELECT ALL HEX(DISTINCT ((rt0.c3)-(rt0.c4))) FROM rt0; -- 0ms;
SELECT CASE ((rt0.c0)%(rt0.c2))  WHEN (~ (rt0.c0)) THEN SUM(x'') WHEN ((rt0.c0)IS NOT(rt0.c0)) THEN ((rt0.c4)=(0.963452860534353)) WHEN (~ (rt0.c4)) THEN SUM(rt0.c3) ELSE CAST(rt0.c0 AS INTEGER) END FROM rt0 WHERE (NULL) LIMIT 1448877631; -- 0ms;
SELECT DISTINCT ((rt0.c3) NOT BETWEEN ((~ (rt0.c3))) AND (-238533113 COLLATE BINARY)), TOTAL((~ (rt0.c0))), (((rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c4)<=(rt0.c0)), MAX(rt0.c2), ((rt0.c2)IS NOT(rt0.c2)))) AND ((((rt0.c1) IS FALSE), (NOT (rt0.c1)), CAST(rt0.c0 AS INTEGER)))) FROM rt0 WHERE (((((x'') ISNULL)) IS TRUE)) GROUP BY (rt0.c2 IN ()) COLLATE NOCASE, CASE CAST(rt0.c2 AS INTEGER)  WHEN TRIM(rt0.c0, rt0.c3) THEN ((rt0.c1) IS FALSE) ELSE CAST(rt0.c3 AS TEXT) END, HEX(NULL); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) NOTNULL), GROUP_CONCAT(CASE WHEN 0.5508697320499911 THEN rt0.c4 ELSE rt0.c2 END) FILTER(WHERE (+ (((rt0.c3)<(rt0.c3))))) OVER (), (((rt0.c0, rt0.c2, rt0.c1)) BETWEEN ((rt0.c3 COLLATE NOCASE, ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)), ((rt0.c2)%(rt0.c4)))) AND ((NULL, 0.8195583151992053, CASE rt0.c3  WHEN rt0.c1 THEN x'' ELSE rt0.c1 END))) FROM rt0 WHERE (((CAST(0.028268445931562858 AS INTEGER))-((~ ('-1863543957'))))); -- 0ms;
SELECT DISTINCT NULL, CAST(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END AS BLOB), CAST((+ ('-1466272781')) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM rt0 WHERE (((CASE x''  WHEN x'3097' THEN NULL ELSE '' END)IS NOT((('')<=(NULL))))); -- 0ms;
SELECT DISTINCT x'', CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c0 END COLLATE NOCASE COLLATE NOCASE, ((json_array_length(rt0.c1, rt0.c3)) NOT BETWEEN (NULL) AND (HEX(rt0.c2))) FROM rt0;SELECT ALL LTRIM(STRFTIME(rt0.c3, rt0.c0, rt0.c1), CASE rt0.c4  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c4 END) FROM rt0 WHERE (((((x''))=((0.8318251544443279))) IN ((('KM嗔,') BETWEEN (NULL) AND ('1'))))); -- 0ms;
SELECT DISTINCT CASE rt0.c0  WHEN (((rt0.c4))>((rt0.c3))) THEN (((rt0.c3)) BETWEEN ((rt0.c1)) AND ((NULL))) END FROM rt0; -- 0ms;
SELECT DISTINCT (((CHANGES()))<>((NULLIF(rt0.c1, rt0.c3)))), CASE rt0.c1  WHEN rt0.c0 COLLATE BINARY THEN (rt0.c4 IN (rt0.c1, rt0.c2)) ELSE ((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)) END, CASE WHEN ((rt0.c0)/(rt0.c0)) THEN rt0.c0 COLLATE NOCASE END, '1750240103', x'' FROM rt0 ORDER BY rt0.c3 ASC; -- 0ms;
SELECT LAST_VALUE((((- (rt0.c1))) IS FALSE)) OVER (), COUNT(*), NULL FROM rt0 WHERE (((+ ('1178908923')) IN (CAST(x'' AS REAL)))); -- 1ms;
SELECT ALL ((((rt0.c2)+(rt0.c2)))GLOB(COUNT(rt0.c4))) FROM rt0 WHERE (((((NULL) NOT NULL)) ISNULL)); -- 0ms;
SELECT DISTINCT (NOT (rt0.c0)) COLLATE NOCASE FROM rt0 LIMIT 1767617965 OFFSET -1745132920; -- 0ms;
SELECT DISTINCT -2089519197 FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c3) ISNULL)  WHEN COUNT(*) THEN ((rt0.c2) NOT BETWEEN (x'') AND (rt0.c3)) ELSE AVG(rt0.c3) END, ((SUM(rt0.c2)) IS FALSE), CAST(CAST(rt0.c3 AS INTEGER) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3) NOT BETWEEN (rt0.c2) AND ('914012884')))OR(rt0.c3)))OR(((rt0.c2)<=(rt0.c4)))))OR((rt0.c1 IN ()))))AND(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0, ((COUNT(rt0.c2)) NOT BETWEEN (((rt0.c0) NOT NULL)) AND (CASE WHEN rt0.c1 THEN rt0.c4 END)), ((((UNLIKELY(rt0.c2))OR(((rt0.c3)OR(rt0.c1)))))AND((((rt0.c4, rt0.c4, x'')) BETWEEN ((rt0.c0, rt0.c1, rt0.c4)) AND ((rt0.c0, rt0.c0, rt0.c1))))) FROM rt0 WHERE (((CASE WHEN NULL THEN x'' ELSE x'2511' END) IS FALSE)); -- 0ms;
SELECT (((rt0.c4) NOT BETWEEN (x'') AND (rt0.c3)) IN (((rt0.c4) IS FALSE), ((rt0.c3)%(rt0.c0)))) FROM rt0 WHERE ((- ((929925126 IN ())))); -- 0ms;
SELECT DISTINCT (((((- (rt0.c2)))AND(((rt0.c2)<<(rt0.c4)))))OR(((((rt0.c0)AND(rt0.c4)))OR(rt0.c3)))) FROM rt0 WHERE (((0x79ac7e68)<(('2034336286' IN ())))); -- 0ms;
SELECT CASE ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4))  WHEN (rt0.c4 IN ()) THEN HEX(rt0.c3) WHEN rt0.c0 COLLATE RTRIM THEN rt0.c4 WHEN CAST(x'' AS INTEGER) THEN 0.08685131578449867 ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END END FROM rt0 WHERE ((CASE WHEN NULL THEN 0.6067457604872374 WHEN '' THEN '993368108' WHEN '-916838990' THEN 1.862053613E9 ELSE NULL END IN ())); -- 0ms;
SELECT SUM(((rt0.c0)<<(rt0.c1))) OVER () FROM rt0 WHERE ((+ (((NULL)>(NULL))))) ORDER BY rt0.c3; -- 0ms;
SELECT ALL AVG(CASE rt0.c1  WHEN rt0.c3 THEN x'' END) OVER () FROM rt0 GROUP BY CASE WHEN ((rt0.c2)>>(rt0.c2)) THEN CAST(rt0.c4 AS REAL) ELSE CASE rt0.c4  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END END; -- 0ms;
SELECT ALL CAST(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) AS TEXT) FROM rt0 WHERE (((CASE WHEN NULL THEN x'050364a3' END) NOT BETWEEN ('0.7592961823434609') AND (((x'862b') NOTNULL)))); -- 0ms;
SELECT DISTINCT (NOT ((0.5882166229243666 IN (rt0.c4)))) FROM rt0 WHERE (x''); -- 0ms;
SELECT DISTINCT (CAST(rt0.c3 AS INTEGER) IN ()) FROM rt0; -- 0ms;
SELECT ALL (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END IN (LIKE(rt0.c2, rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (rt0.c4 IN (rt0.c1, rt0.c1)) THEN (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) ELSE ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3)) END FROM rt0 WHERE (((- (709552680)) IN ())); -- 0ms;
SELECT DISTINCT HEX(((rt0.c3) BETWEEN (x'') AND (rt0.c2))), LIKELIHOOD(COUNT(*), 0.8611807101119747), (((rt0.c2)) NOT BETWEEN ((((rt0.c3)OR(rt0.c1)))) AND (((NOT (rt0.c4))))) FROM rt0 LIMIT 527906646 OFFSET -1469757650; -- 0ms;
SELECT ALL rt0.c3 FROM rt0; -- 0ms;
SELECT ((rt0.c0 COLLATE RTRIM) IS FALSE) FROM rt0; -- 0ms;
SELECT rt0.c3, (((rt0.c1)AND(x'')) IN ()), ((CAST(rt0.c4 AS BLOB)) IS TRUE), (((((rt0.c3, rt0.c3, rt0.c0)) BETWEEN ((rt0.c2, x'', rt0.c0)) AND ((rt0.c0, rt0.c2, rt0.c2))))&((~ (rt0.c0)))), ((((rt0.c4)AND(NULL)))/(NULL)) FROM rt0 WHERE ((('/	G3\n0' COLLATE NOCASE)+(HEX(0.026581474878318523)))) ORDER BY x'' ASC  NULLS FIRST; -- 0ms;
SELECT NTH_VALUE((((rt0.c2 IN ())) ISNULL), ((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c4)))AND(rt0.c3)))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c4)))))AND(((rt0.c1)OR(rt0.c0)))))OR(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c0 END))) OVER (), ((rt0.c2 COLLATE BINARY)IS(NULLIF(rt0.c4, rt0.c4))), '+猅', ((((rt0.c4)<(NULL))) IS TRUE), (((((rt0.c4))=((rt0.c3)))) ISNULL) FROM rt0 WHERE (UNLIKELY(DISTINCT CAST(NULL AS TEXT))) GROUP BY (NOT (((-309312301) NOTNULL))); -- 0ms;
SELECT CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 END COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)<>('SkN*䘼&')))*(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c4)))) FROM rt0 WHERE ((((x'' IN ()))>>(((((((((((((89848532)OR(x'')))OR(-984648131)))OR(NULL)))OR(NULL)))OR('-713437272')))AND(NULL))))) GROUP BY ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))-(((rt0.c2)|(rt0.c2)))), NULL, x'' HAVING 0.4120650030033185; -- 0ms;
SELECT ALL 0.589456983199604 FROM rt0 WHERE (((+ (x'809f')) IN ())) GROUP BY CASE WHEN ((rt0.c3)|(rt0.c0)) THEN '142071964' END; -- 0ms;
SELECT ALL CASE rt0.c2  WHEN rt0.c4 THEN ((rt0.c2)%(rt0.c4)) ELSE HEX(DISTINCT rt0.c1) END FROM rt0 LIMIT 1593219940 OFFSET -144950903; -- 0ms;
SELECT (((rt0.c2 IN ()))<=(((rt0.c2)>=(rt0.c1)))), ((((rt0.c2) NOT NULL))&((rt0.c2 IN ()))), AVG(((rt0.c0)||(rt0.c1))) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT (((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) IN (((rt0.c3)AND(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT -1.734499222E9 FROM rt0 WHERE ((((x'')) BETWEEN (('0.5508697320499911' COLLATE RTRIM)) AND (((('612994372') IS FALSE))))); -- 0ms;
SELECT DISTINCT COUNT('1774727848') OVER () FROM rt0; -- 0ms;
SELECT CAST(((rt0.c1)>(rt0.c1)) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)))<<(((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0 WHERE (CAST(x'' COLLATE NOCASE AS BLOB)); -- 0ms;
SELECT DISTINCT SUM(((((x'16e2')AND(rt0.c3)))OR(rt0.c4))) OVER (), COUNT((~ (rt0.c0))), 'z''WS?㐋f' FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2) IS TRUE), MAX(rtreenode(rt0.c4, '309267527')), rt0.c0 FROM rt0 WHERE ((((x'a7bd', x'', NULL)) BETWEEN (((((NULL)) NOT BETWEEN ((' WZ5.Y\r')) AND (('7%ǒM9'))), (0x471fcfc1 IN ()), (- (x'9d1a')))) AND ((highlight(x'2471', '', NULL, '<['), CASE WHEN NULL THEN '-1267863114' ELSE '266151755' END, '1505024935' COLLATE NOCASE)))); -- 0ms;
SELECT DISTINCT ((MAX(rt0.c4)) NOT NULL) FROM rt0 WHERE (LIKELY(NULL) COLLATE RTRIM COLLATE BINARY) ORDER BY ((((rt0.c4)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c4))) IN ((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))); -- 0ms;
SELECT ((((((rt0.c3)AND(rt0.c3)))AND(rt0.c1))) ISNULL) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT (+ (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c3 END)), COUNT(*), (((rt0.c2)LIKE(rt0.c0)) IN ()) FROM rt0 WHERE ((LIKELY(DISTINCT 1183114257) IN ())); -- 0ms;
SELECT DISTINCT (((((rt0.c2 IN (rt0.c2)))OR(((rt0.c3)<>(rt0.c1)))))OR(0.2644076559499464)) FROM rt0; -- 0ms;
SELECT CAST((rt0.c0 IN ()) AS REAL), CASE WHEN (rt0.c4 IN (rt0.c4)) THEN DATETIME(rt0.c2, rt0.c0, rt0.c2) END, (rt0.c0 IN ()) COLLATE BINARY FROM rt0 WHERE (CAST((('623487802')&(-1971895229)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT '-0.0' FROM rt0 WHERE (((CAST('|㠗u쥏TY' AS INTEGER))IS NOT((('')||(NULL))))); -- 0ms;
SELECT ((((rt0.c2)&(rt0.c1)))<>(SQLITE_VERSION())) FROM rt0; -- 1ms;
SELECT DISTINCT RANK() OVER () FROM rt0 WHERE (((((((((0.5508697320499911 COLLATE RTRIM)OR(((((x'')OR(NULL)))AND('-1456314522')))))AND(((0.3351381602100285) BETWEEN ('429048501') AND (x'')))))AND(x'' COLLATE NOCASE)))AND(((((x'')AND(0.8337393927798801)))OR('pl'))))); -- 0ms;
SELECT ALL SUM(((rt0.c1) IS TRUE)) FILTER(WHERE (rt0.c0 IN ())) OVER (), (((rt0.c2 IN (rt0.c1))) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c3))) AND (((rt0.c4)/(rt0.c2)))), COUNT(((rt0.c0) NOTNULL)) OVER () FROM rt0 ORDER BY ((ABS(DISTINCT rt0.c2)) IS TRUE); -- 0ms;
SELECT ALL (('-1875266349') NOT BETWEEN ((NOT (rt0.c0))) AND ((1.814247179E9 IN ()))) FROM rt0 WHERE (CASE WHEN -1.426664358E9 COLLATE RTRIM THEN (-728431574 IN ()) ELSE ((NULL)<=(x'4b33')) END); -- 0ms;
SELECT (((+ (rt0.c3)))>=(CASE rt0.c0  WHEN 0.36064323915485164 THEN rt0.c0 ELSE rt0.c3 END)) FROM rt0 WHERE (''); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c4 AS BLOB)) OVER ( ORDER BY ((rt0.c3)GLOB(rt0.c3)) COLLATE BINARY ASC  NULLS LAST RANGE ABS(rt0.c1 COLLATE RTRIM) PRECEDING), (((TRIM(0Xffffffff844226b5, rt0.c2)))<=((CAST(rt0.c3 AS REAL)))), ((CAST(rt0.c2 AS BLOB)) IS FALSE), ABS(CAST(rt0.c4 AS INTEGER)), CAST((0.7687798152169262 IN (rt0.c1)) AS TEXT) FROM rt0 WHERE (((((NULL IN ())))!=((CAST('' AS REAL))))); -- 0ms;
SELECT ALL ((rt0.c3 COLLATE BINARY) ISNULL) FROM rt0; -- 0ms;
SELECT ALL json_quote((('1876978899') NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM rt0 WHERE ((((((x'', '1138740143', x''))<((7.68835665E8, '1045869651', '-668811907')))) NOT BETWEEN (CASE WHEN '945856943' THEN NULL END) AND (0.9953647641938341))) LIMIT 282334439 OFFSET -1234471798; -- 0ms;
SELECT DISTINCT UPPER(HEX(rt0.c2)) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT('0.465181375092244'), ((((((((((rt0.c3) ISNULL))OR(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c3 END)))OR(rt0.c3)))AND(SUM(rt0.c2))))AND(((((rt0.c2)AND(rt0.c0)))OR(rt0.c0)))), CASE ((((rt0.c2)OR(rt0.c3)))AND(rt0.c4))  WHEN NULL COLLATE NOCASE THEN -1 END FROM rt0 NOT INDEXED WHERE (CASE WHEN ((((0.2914266547374865)AND(-3.65912608E8)))OR(0xffffffffc95a25b2)) THEN (-2.5134995E8 IN (NULL)) WHEN (~ ('ztQl6n')) THEN ((x'8e87') NOT BETWEEN (x'') AND (0.6026500920233047)) WHEN CASE '▲9t'  WHEN 0.863692036223961 THEN 'c!{}' END THEN ((((-831675410)AND(0.9345046298396185)))AND(NULL)) ELSE CASE WHEN NULL THEN '5?' WHEN NULL THEN 0X36fb2d0e WHEN '' THEN '-1036461540' ELSE x'' END END); -- 0ms;
SELECT ALL (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c2)), CASE rt0.c4  WHEN 275884938 THEN rt0.c4 END, IFNULL(rt0.c0, rt0.c1)))>=((((rt0.c1) NOT NULL), x'' COLLATE NOCASE, (- (rt0.c4))))), (0.15754939561113002 IN (((rt0.c1)<>(rt0.c0)))), ((((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c3))) BETWEEN (SQLITE_SOURCE_ID()) AND (((rt0.c4) IS TRUE))), RANK() OVER (), CAST(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 ELSE '-454400304' END AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT DATETIME(rt0.c0, TOTAL(rt0.c1), (NOT (rt0.c2))), SUM(COALESCE(DISTINCT rt0.c4, rt0.c0, x'', rt0.c3)) OVER (), ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((((((NULL)OR(rt0.c0)))AND(x'')))AND(rt0.c1)))OR(rt0.c1)))) FROM rt0; -- 1ms;
SELECT DISTINCT (rt0.c1 IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((rt0.c2)+(rt0.c2))), CASE ((rt0.c1)OR(rt0.c1))  WHEN NULL THEN rt0.c1 COLLATE BINARY ELSE CAST(rt0.c0 AS TEXT) END, (+ (rt0.c1)), ((rt0.c4 COLLATE RTRIM) NOT BETWEEN (((rt0.c3) NOTNULL)) AND (TRIM(rt0.c2))), (CAST(rt0.c2 AS NUMERIC) IN ((('1862053613')IS('r틢to)')))) FROM rt0 WHERE (((0.5277842171321568)IS NOT('')) COLLATE NOCASE) ORDER BY (NOT (((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4)))) ASC; -- 0ms;
SELECT (+ (x'')) FROM rt0 WHERE ((((- (-9223372036854775808)))IS(((NULL)GLOB('529667807'))))) GROUP BY ((DATE(rt0.c2, x'', rt0.c2))<=(TYPEOF(DISTINCT rt0.c4))); -- 0ms;
SELECT DISTINCT HEX((rt0.c1 IN ())) FROM rt0; -- 0ms;
SELECT (((- (rt0.c0))) IS TRUE), rt0.c0, COUNT((NOT (rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0; -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN ((((rt0.c3)||(rt0.c3)))) AND ((LIKE(rt0.c0, rt0.c4, 'Z')))) FROM rt0 WHERE (((((((NULL) NOT BETWEEN (x'') AND ('')))OR(SQLITE_COMPILEOPTION_USED('0.7031316815787435'))))AND(x'2b9c'))) GROUP BY NULL, (((((((((rt0.c4 IN ()))OR(rt0.c3)))OR(TYPEOF(rt0.c3))))OR(((rt0.c4) IS TRUE))))OR(((rt0.c2)AND(rt0.c2)))), (((rt0.c4)) NOT BETWEEN ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 END)) AND ((LIKELY(rt0.c3)))); -- 0ms;
SELECT ALL ((((((rt0.c4)>=(rt0.c0)))OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(((rt0.c2) IS TRUE))) FROM rt0 NOT INDEXED WHERE ((((CASE WHEN 0.7039538236954681 THEN 0.5831433647214459 END, (+ (x'')), NULLIF(x'', x'')))>=((0x1c82399f COLLATE RTRIM, (~ (NULL)), ((x'') NOTNULL))))); -- 0ms;
SELECT ALL CAST((- (rt0.c0)) AS TEXT) FROM rt0 WHERE ((((((('<dw')<>(x'02d6')))OR(UNLIKELY(DISTINCT x'4ec2'))))OR(((((0.6673448674429234)AND(0.6267468547896001)))OR(0.8682447306441378))))); -- 0ms;
SELECT ALL (((rt0.c4 IN (rt0.c3, rt0.c4)))<=((rt0.c0 IN ()))) FROM rt0 WHERE ((((0.28179109355899745)) BETWEEN ((CAST('' AS BLOB))) AND (((~ ('')))))) ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c2 END)-(0.2531082731761757)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT '1664503202' FROM rt0 WHERE ((((0.09262432926389275, NULL, NULL)) BETWEEN ((((NULL)||(NULL)), '2{' COLLATE NOCASE, (((('808628339')OR(1383862991)))OR('623487802')))) AND ((CAST('5O+[t/G' AS INTEGER), x'' COLLATE BINARY, (+ (0.6440660897776053)))))) ORDER BY (NOT ((x'' IN ()))) ASC; -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((NULL)) AND ((CASE WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END))) FROM rt0; -- 0ms;
SELECT ALL TOTAL(GROUP_CONCAT(CASE WHEN rt0.c0 THEN 'WPy' WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END)), CUME_DIST() OVER ( ORDER BY ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))OR(LIKELIHOOD(rt0.c1, 0.5214744782481203))) DESC  NULLS FIRST RANGE BETWEEN  CURRENT ROW AND CAST(rt0.c2 COLLATE RTRIM AS INTEGER) PRECEDING), (((rt0.c2)) NOT BETWEEN ((SQLITE_COMPILEOPTION_USED(rt0.c3))) AND (((- (rt0.c2))))) FROM rt0 NOT INDEXED;SELECT DISTINCT ((MIN(-1909534086)) NOT NULL) FROM rt0 WHERE (((CASE WHEN 0.6447458544238083 THEN '0.2089455089838168' END) ISNULL)) GROUP BY rt0.c2 HAVING (((rt0.c3 IN ()))=(rt0.c3)); -- 0ms;
SELECT ALL (((((NULL))<=((rt0.c4))))<(-1187770217)) FROM rt0 WHERE ((- ((((x''))>=((x'')))))) ORDER BY (((x'ae2e', rt0.c1 COLLATE RTRIM, ((rt0.c4)AND(rt0.c2))))<=((((rt0.c1)|(rt0.c0)), (((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))), (~ (rt0.c3)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt0.c0 IN (rt0.c1)) IN (rt0.c4)), ROW_NUMBER() OVER (), MIN(CASE WHEN x'' THEN rt0.c3 END, rt0.c4, TOTAL(rt0.c3), (~ (rt0.c0))) FROM rt0 WHERE (CAST('-367058685' COLLATE BINARY AS REAL)) GROUP BY ((rt0.c1)==(((rt0.c4) IS FALSE))), ((TRIM(rt0.c1))IS NOT((((rt0.c3))==((rt0.c0))))), ((((rt0.c0) NOT NULL)) ISNULL); -- 0ms;
SELECT x'' FROM rt0 GROUP BY CAST(NULL AS INTEGER) HAVING rt0.c3; -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(*) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) WHEN (((rt0.c0, NULL, rt0.c4))>=((rt0.c1, rt0.c1, rt0.c3))) THEN ((rt0.c1)<<(rt0.c0)) WHEN (rt0.c1 IN (rt0.c4, rt0.c3)) THEN rt0.c0 END FROM rt0 WHERE (((((NULL) NOT BETWEEN ('') AND ('3\'))) NOTNULL)); -- 0ms;
SELECT COUNT(rt0.c0) OVER () FROM rt0 WHERE ((((+ (x'2891'))) BETWEEN (((('')) NOT BETWEEN ((NULL)) AND (('499208305')))) AND (''))); -- 0ms;
SELECT DISTINCT 0.4537110610874231 FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)))<(json_insert(rt0.c0, 0.13181162052019657, rt0.c1))) FROM rt0 WHERE (CAST(CASE WHEN 0.7813151408568837 THEN '622786823' WHEN NULL THEN x'033a' WHEN 0.9985819174515487 THEN x'' END AS TEXT));SELECT ALL (((((+ (rt0.c4)))AND((((rt0.c0))<((rt0.c4))))))AND(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))), MAX(((rt0.c4)>(rt0.c2))), (((NULL IN (rt0.c0, rt0.c0)))-(LTRIM(rt0.c4))) FROM rt0 WHERE ((+ ('T2c_q璈\r?'))); -- 0ms;
SELECT COUNT(LOWER(x'2ee9')) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2))>=(((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))))), TRIM(DISTINCT ((rt0.c4) IS FALSE), CAST(NULL AS REAL)), ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c2)))>=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c4 END AS TEXT), (((((rt0.c1)>(rt0.c0))))<=(((((rt0.c3)) BETWEEN ((rt0.c0)) AND (('습 ZA')))))) DESC  NULLS LAST, ((((((rt0.c2)AND(rt0.c2)))AND(((rt0.c3)!=(rt0.c1)))))AND(((rt0.c2)-(rt0.c2)))); -- 0ms;
SELECT ALL AVG(LIKELIHOOD(rt0.c2, 0.3892255823061126)) FROM rt0 WHERE ((- (IFNULL(DISTINCT '1583241830', NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))>(((rt0.c0)|(0Xffffffff9173556c)))) FROM rt0 WHERE ('0.03666925115966779'); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c4)) NOT NULL) FROM rt0 UNION SELECT ALL COUNT(*) OVER () FROM rt0 WHERE ((((((NULL, '0.36907404510693687', '0.9800127025974088')) BETWEEN ((0.6679466843010603, NULL, x'')) AND ((-9.60956701E8, NULL, -2.076039499E9))))|(CASE WHEN 'j+ Z㉕e' THEN NULL WHEN 0.8571818836611819 THEN 'start of day' WHEN '' THEN 0.4186451660326831 ELSE '' END))); -- 0ms;
SELECT DISTINCT ((COUNT(*))LIKE(((rt0.c2)&(rt0.c2)))) FROM rt0 WHERE (LIKELY(DISTINCT CASE WHEN x'' THEN 0Xfffffffff03d2308 END)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0) IS FALSE))AND(AVG(rt0.c1))))AND(rt0.c0)))AND((('1486811802') NOT NULL))))OR(NULL)), (((rt0.c0 IN (x'', rt0.c1))) BETWEEN ((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c4)))) AND (rt0.c0)), DENSE_RANK() OVER () FROM rt0 WHERE (UNICODE(CASE 0x4852b7db  WHEN '-1995393310' THEN x'' ELSE '0.14140418152701106' END)); -- 0ms;
SELECT ((LOWER(rt0.c4)) BETWEEN (((rt0.c4) ISNULL)) AND (CAST(rt0.c4 AS INTEGER))), GROUP_CONCAT(((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0))), (((rt0.c0)) NOT BETWEEN (((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))) AND ((rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT (- ((~ ('Zx')))) FROM rt0 WHERE (((CAST(0.6026500920233047 AS REAL)) NOT BETWEEN (CASE x'3ab3'  WHEN NULL THEN x'' END) AND (((x'')OR(0.21096280162041992))))); -- 0ms;
SELECT ((CAST('0.026581474878318523' AS REAL))|((NOT (rt0.c4)))), rt0.c1, LAST_VALUE(NULL) OVER () FROM rt0 WHERE (CAST('t菑HrPC' AS BLOB) COLLATE BINARY); -- 0ms;
SELECT rt0.c3 FROM rt0 WHERE ((~ (((995005971) NOT BETWEEN ('-61993452') AND (x''))))); -- 0ms;
SELECT ALL ((((rt0.c0) NOTNULL)) IS TRUE) FROM rt0 GROUP BY 0.41291133704267236; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE (CASE ((NULL)<=(NULL))  WHEN (0.8483031409361393 IN (-91786491)) THEN LOWER(x'') ELSE x'' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT ((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))) IN ()), (((((rt0.c2 IN (rt0.c0)))AND(rt0.c1)))OR((((rt0.c2, rt0.c3, '-1226396232', rt0.c4, rt0.c0)) NOT BETWEEN ((0.1362310000342778, rt0.c0, rt0.c2, 0.29820346174823686, 'b⧧')) AND ((rt0.c2, rt0.c0, '*9L', rt0.c1, rt0.c3))))), (((((rt0.c4)) NOT BETWEEN ((rt0.c4)) AND ((NULL)))) IS FALSE) FROM rt0 LIMIT 1327583105; -- 0ms;
SELECT ALL ((rt0.c2)+(rt0.c4)) FROM rt0; -- 0ms;
SELECT CASE rt0.c1 COLLATE RTRIM  WHEN ((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c3)) THEN (rt0.c1 IN ()) ELSE ((((rt0.c2)AND(rt0.c2)))OR(rt0.c0)) END, '-1795082155' COLLATE RTRIM, rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT ('淈pvaE+L,' IN ()) FROM rt0 WHERE (CAST((+ ('')) AS TEXT)); -- 0ms;
SELECT ((0Xffffffff95013855)IS(TOTAL(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt0.c3)) THEN ((((rt0.c3)AND(rt0.c4)))AND(0.4218570250227369)) END FROM rt0; -- 0ms;
SELECT ALL MIN(CAST(rt0.c0 AS NUMERIC)), COUNT(NULL) OVER (), ((1.24460163E9)||((~ (rt0.c1)))) FROM rt0 WHERE (((NULL)>(((x'')>=('?,OY,&^o'))))); -- 0ms;
SELECT ((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c3)))LIKE(rt0.c2)), (('' COLLATE BINARY)>((rt0.c2 IN ()))), CAST(rt0.c2 AS BLOB) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((rt0.c4)==(0.16215251278391307))) OVER (), (('' COLLATE RTRIM)-((~ ('Q뒘cDCr2\c')))), (~ (TIME(rt0.c0, rt0.c4, rt0.c4))) FROM rt0 WHERE ((((NOT (864738121))) NOT BETWEEN (CASE x''  WHEN x'' THEN 0X367abad4 WHEN 'x' THEN 0.42313553163124695 WHEN 0.5381590107054337 THEN 0.706504111894513 ELSE x'' END) AND (('-752503656' IN ())))); -- 0ms;
SELECT ALL (((- (x'')))<<((((rt0.c2))<=((rt0.c0))))) FROM rt0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(NULL) AS INTEGER)); -- 0ms;
SELECT (((+ (rt0.c3)))>(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT NULL, ((MAX(rt0.c4)) BETWEEN (((rt0.c0) IS TRUE)) AND (((rt0.c1)%(rt0.c0)))), AVG(279182204) FROM rt0 ORDER BY rt0.c2 DESC LIMIT -782235817; -- 0ms;
SELECT DISTINCT (((rt0.c4)<>('-668811907')) IN ()) FROM rt0 ORDER BY ((((x'')<(x'e8d0b000'))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (NULL) AND (rt0.c1))) AND (((rt0.c1) BETWEEN (rt0.c3) AND (NULL)))); -- 0ms;
SELECT DISTINCT ((LIKELY(DISTINCT rt0.c2)) IS FALSE), CASE WHEN rt0.c1 THEN rt0.c0 WHEN x'33c1' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 END COLLATE RTRIM, (((rt0.c0 IN ()))+((rt0.c2 IN (rt0.c3, rt0.c2)))) FROM rt0 GROUP BY (SUBSTR(rt0.c4, rt0.c3) IN (rt0.c0 COLLATE NOCASE, (NOT (rt0.c1)))) HAVING (json_valid(rt0.c4) IN (CAST(rt0.c2 AS NUMERIC))) ORDER BY ((((((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c3)))AND((((rt0.c1, rt0.c1, rt0.c4)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c3, rt0.c1, rt0.c2))))))OR(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1))))  NULLS FIRST, ((rt0.c3)=(rt0.c3)) COLLATE RTRIM ASC  NULLS LAST; -- 1ms;
SELECT ((((((((rt0.c4)AND(json_object(rt0.c2, ''))))AND(LIKELY(DISTINCT rt0.c2))))OR(CASE WHEN rt0.c3 THEN rt0.c2 END)))OR(CASE WHEN rt0.c0 THEN rt0.c1 END)) FROM rt0 WHERE (ABS(DISTINCT ((NULL)*('%1&K<a6k')))); -- 0ms;
SELECT DISTINCT CAST(NULL AS REAL), ((((SUM(rt0.c3))OR(rt0.c2 COLLATE NOCASE)))OR(rt0.c4 COLLATE BINARY)), (((('-681452311') IS TRUE)) IS FALSE) FROM rt0 GROUP BY '-118606807' COLLATE NOCASE, rt0.c4, (((rt0.c3, '-1267863114', rt0.c4)) NOT BETWEEN ((LIKELIHOOD(rt0.c3, 0.46665370480217117), CAST(rt0.c1 AS INTEGER), ((rt0.c4)==(rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB), ((rt0.c1)%(rt0.c3)), rt0.c2 COLLATE RTRIM))) HAVING CAST(((((rt0.c0)OR(rt0.c0)))AND(x'6aa5')) AS TEXT); -- 0ms;
SELECT AVG(((rt0.c3) NOT NULL)) FROM rt0 WHERE (CAST(CAST('517880336' AS REAL) AS INTEGER)) ORDER BY CAST(x'4651' AS TEXT) COLLATE BINARY COLLATE RTRIM  NULLS LAST; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c3) OVER (), CASE CAST(rt0.c0 AS BLOB)  WHEN COUNT(*) THEN (- (0.6106250882758768)) WHEN 0X33738b42 THEN '0.6173144304357595' WHEN (NOT (rt0.c0)) THEN LOWER(DISTINCT rt0.c2) ELSE CAST(rt0.c1 AS INTEGER) END, COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (NOT ((rt0.c4 IN ()))) FROM rt0 WHERE (CASE (((('-1730784953')AND(0.08002433961906485)))OR('-1280082196'))  WHEN '+cv' THEN (((NULL)) BETWEEN (('1747216089')) AND ((''))) WHEN CAST('' AS INTEGER) THEN DATETIME('1045869651', 0.32219643297695244, '', '0.8205871111588995', 0.4120650030033185) WHEN ('-793590058' IN ()) THEN (- ('|NK')) ELSE 'VEI)eQ' END); -- 0ms;
SELECT ALL (- (CAST(rt0.c3 AS NUMERIC))), DENSE_RANK() OVER ( PARTITION BY (((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c2))))<=((NULL))), ((rt0.c3)=(rt0.c3)) COLLATE NOCASE), (+ (x'fad5')) FROM rt0 WHERE ((+ (LOWER(x'92eb')))) ORDER BY ((((((rt0.c4)OR(rt0.c2)))AND(0.8714361351746948)))<((+ (rt0.c4)))) DESC; -- 0ms;
SELECT (((rt0.c3)) BETWEEN ((((rt0.c3) BETWEEN ('	y') AND (rt0.c2)))) AND ((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c3 END))) FROM rt0 WHERE (CAST(CAST(4.29048501E8 AS INTEGER) AS INTEGER)); -- 0ms;
SELECT DISTINCT (+ (((rt0.c3)>(rt0.c0)))) FROM rt0 ORDER BY (- (rt0.c4)) COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT CAST(((rt0.c3) NOT NULL) AS REAL) FROM rt0; -- 0ms;
SELECT RTRIM((rt0.c2 IN ())), CASE ((rt0.c3) NOT NULL)  WHEN ((rt0.c4)IS(rt0.c0)) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) END, CAST(json(rt0.c2) AS REAL) FROM rt0 GROUP BY 0.8148432421640941 HAVING rt0.c4; -- 0ms;
SELECT DISTINCT 0.17768739018549184 FROM rt0 WHERE (((CAST(x'4d40' AS REAL)) BETWEEN (CASE '-750953406'  WHEN 1.862053613E9 THEN 'kW\r' ELSE NULL END) AND ((('-2039467740')<=(x'3905'))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((rt0.c0)LIKE(rt0.c0)) COLLATE RTRIM COLLATE RTRIM) OVER () FROM rt0 WHERE (-702546100); -- 0ms;
SELECT DISTINCT UPPER(CASE WHEN rt0.c1 THEN rt0.c3 END), COUNT(*) OVER (), ((CAST(rt0.c3 AS INTEGER))IS((((rt0.c2, rt0.c3, rt0.c4)) NOT BETWEEN ((x'', rt0.c3, rt0.c4)) AND (('q*', rt0.c0, rt0.c3))))) FROM rt0 WHERE ((((('7}-E.{HB8')||(x'')))OR(NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c4) IS TRUE) THEN CAST(rt0.c0 AS BLOB) WHEN rt0.c2 COLLATE RTRIM THEN rt0.c4 COLLATE BINARY WHEN CAST(rt0.c2 AS BLOB) THEN ((rt0.c0)<<(0.48428429033079434)) END FROM rt0; -- 0ms;
SELECT ALL (+ (CAST(rt0.c3 AS BLOB))) FROM rt0; -- 0ms;
SELECT (((rt0.c2 IN ())) NOT BETWEEN (((-1863543957) NOT BETWEEN (rt0.c1) AND (rt0.c1))) AND (((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))) FROM rt0 WHERE (((x'0ea3' COLLATE RTRIM) NOTNULL)); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0 WHERE (NULL); -- 0ms;
SELECT (+ (CASE rt0.c0  WHEN rt0.c0 THEN 0.0979580156318468 WHEN rt0.c3 THEN rt0.c4 WHEN x'' THEN rt0.c2 END)) FROM rt0 GROUP BY NULL, ((((rt0.c4)GLOB(x''))) NOT NULL), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c1))) IS TRUE) HAVING rt0.c1; -- 0ms;
SELECT (((rt0.c1, rt0.c4, rt0.c3)) BETWEEN (((rt0.c4 IN ()), ((rt0.c0)IS(rt0.c4)), ((rt0.c3) NOTNULL))) AND ((MIN(rt0.c2), ((rt0.c2)+(rt0.c1)), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))))) FROM rt0 WHERE (((COALESCE(DISTINCT x'', '-147059795'))-(load_extension(0.4670154669580243, x'')))) GROUP BY (((((rt0.c0 IN ()))AND(-277903450)))OR(LIKELY(rt0.c0))) HAVING (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((1.773693271E9, rt0.c1 COLLATE RTRIM, CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c1 END)) AND ((((((rt0.c1)OR(rt0.c2)))AND(rt0.c0)), CAST(rt0.c2 AS BLOB), CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c2 END)));SELECT ALL ((0Xffffffffea309de0) NOT NULL), rt0.c4, (~ ('1862053613')) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE (((((((NULL) NOT BETWEEN ('~M%') AND (-1431060475)))OR(((0.6026500920233047)&(0x3b4e9613)))))AND(MIN(-367058685, ' 霏W8nwJ!5', 0.7130524500954938, 'now}')))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN rt0.c4 THEN rt0.c4 END AS BLOB) FROM rt0; -- 0ms;
SELECT ALL NTILE(NULL COLLATE RTRIM) OVER ( ORDER BY (((rt0.c3)) NOT BETWEEN ((x'ede6')) AND (((rt0.c0 IN ()))))  NULLS LAST ROWS (~ (((-1.337790407E9) IS FALSE))) PRECEDING) FROM rt0;SELECT MIN(COUNT(*), ((rt0.c4)||(rt0.c0))) FROM rt0; -- 0ms;
SELECT (((rt0.c0 IN ())) IS FALSE), ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0))) ISNULL), COUNT(rt0.c0) FILTER(WHERE (((rt0.c3 IN ()))%((NOT (rt0.c1))))) OVER () FROM rt0 WHERE (((CASE x'865b'  WHEN x'' THEN NULL WHEN x'' THEN '995005971' WHEN NULL THEN '-1933852740' WHEN x'' THEN '1302016181' WHEN '' THEN 0.3202835693091429 END) IS TRUE)); -- 0ms;
SELECT ((rt0.c2 COLLATE BINARY)&(CAST(rt0.c1 AS INTEGER))), ((((((((((rt0.c0)AND(rt0.c2)))OR(((rt0.c3) NOT BETWEEN (rt0.c2) AND ('-930503571')))))OR(((((rt0.c2)OR(rt0.c4)))OR(rt0.c2)))))OR(UPPER(DISTINCT rt0.c4))))OR((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), CAST(((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (CAST(rt0.c1 AS BLOB))) FROM rt0 WHERE ((((((NULL)) NOT BETWEEN ((NULL)) AND ((x'')))) NOT NULL)) GROUP BY NULLIF(DISTINCT (- (rt0.c1)), ((rt0.c4) NOTNULL)) HAVING 1032125041; -- 0ms;
SELECT DISTINCT (+ ((rt0.c0 IN (rt0.c2)))) FROM rt0 WHERE (((((((((0.33641587367292647)OR('鈷2c<')))AND(0.7556962264063267)))OR(373682955)))OR(')4!뵽ilF')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c0)))AND(((rt0.c0) ISNULL))) FROM rt0 WHERE (x'b560'); -- 0ms;
SELECT DISTINCT ((((GROUP_CONCAT(rt0.c4))AND((- (rt0.c3)))))AND(rt0.c1)) FROM rt0 WHERE (CAST(x'' AS TEXT)); -- 0ms;
SELECT DISTINCT ((NULL IN ()) IN (((rt0.c3)+(rt0.c0)), (((rt0.c0))==((rt0.c2))))), TRIM(DISTINCT ((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))), (0.7634825544963328 IN (rt0.c4)) FROM rt0 WHERE (CASE WHEN ((NULL)&(NULL)) THEN (('808628339')||(NULL)) WHEN (('-1506714347') ISNULL) THEN ((0.5249799814241861) NOT BETWEEN (NULL) AND ('y1''		N')) WHEN '' COLLATE BINARY THEN ((((((((x'')AND('157526787')))AND('WHT~C+&}')))AND(x'')))AND(NULL)) WHEN ((((((((0.15754939561113002)OR('1660017828')))OR('')))AND(-94027249)))OR(0.4569792626097766)) THEN CAST('1105021461' AS REAL) WHEN ((0.863692036223961) NOT BETWEEN (NULL) AND (1258416699)) THEN ((NULL) NOT BETWEEN (0.1900883899412783) AND (0.8337393927798801)) END); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS REAL) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c1)%(rt0.c2)) COLLATE BINARY FROM rt0; -- 0ms;
SELECT CASE rt0.c3 COLLATE NOCASE  WHEN LIKELIHOOD(0.5820208996918486, 0.10498127399725776) THEN (- (rt0.c3)) END FROM rt0 WHERE ((((((0.9246519509809118)) NOT BETWEEN (('0.8145737082515685')) AND (('-1268378295')))) BETWEEN ((('8Kt礢Z') NOT BETWEEN ('k纸(_ESg.') AND (x''))) AND ((NOT (0.8748117233728434))))); -- 0ms;
SELECT DISTINCT LIKE(AVG(rt0.c1), rt0.c1), SUM(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1))), CAST(CAST(rt0.c3 AS BLOB) AS BLOB) FROM rt0 WHERE ((((((0X317cf9d3)) BETWEEN (('-2078317661')) AND ((x'15cb'))))+(((NULL)/('1097208697'))))); -- 0ms;
SELECT DISTINCT ((NULL) IS FALSE) FROM rt0 GROUP BY CAST(rt0.c1 AS BLOB), CAST(highlight(rt0.c2, rt0.c1, rt0.c3, rt0.c1) AS REAL), (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)) IN ());SELECT DISTINCT CASE WHEN MAX(rt0.c4, rt0.c4) THEN ((rt0.c0)>>(x'')) ELSE ((((((((((((rt0.c1)AND('0.2819099766822889')))OR(rt0.c3)))OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4)) END FROM rt0 WHERE (((((((x'd07d') NOT NULL))AND(((x'')AND('0.2089455089838168')))))OR(TYPEOF(0.6825316952731951)))); -- 0ms;
SELECT DISTINCT (NOT (rt0.c1)), CASE 0.11256570663100529  WHEN CASE WHEN rt0.c3 THEN 0.04019366318237383 ELSE rt0.c2 END THEN ((rt0.c2) NOT BETWEEN (0.4908517059160563) AND (rt0.c4)) WHEN load_extension(rt0.c4) THEN rt0.c3 WHEN ((rt0.c2)|(rt0.c1)) THEN CAST(rt0.c0 AS NUMERIC) ELSE ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)) END, MIN(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c2))) FROM rt0 WHERE (CASE WHEN ((((NULL)OR(0x36b97922)))OR(0.4479681598800245)) THEN (+ (0.3177728108165334)) WHEN ((((0.35181493190067203)OR(NULL)))AND(x'')) THEN (NOT (0.488744684324665)) WHEN CAST(0X2843cb89 AS TEXT) THEN (('94305035') NOT BETWEEN (0Xffffffff85441167) AND (NULL)) ELSE (('932084291') NOTNULL) END) GROUP BY CASE WHEN ((((rt0.c4)AND(NULL)))AND(rt0.c2)) THEN (~ (rt0.c0)) ELSE ((rt0.c3)IS(rt0.c2)) END;SELECT DISTINCT ((((rt0.c3)||(rt0.c4)))!=(0.5734042672293203)), (((((rt0.c2 IN ()))AND(rt0.c4 COLLATE RTRIM)))AND(CAST(rt0.c2 AS BLOB))), CAST(((rt0.c2)LIKE(rt0.c0)) AS INTEGER) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)IS NOT((((rt0.c3, rt0.c2, rt0.c1)) BETWEEN ((rt0.c1, '0.206148745291585', rt0.c2)) AND ((rt0.c2, rt0.c0, rt0.c1))))) FROM rt0 LIMIT 1479791649; -- 0ms;
SELECT ALL ((rt0.c0)IS NOT((+ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT ((rt0.c4)IS NOT(rt0.c4)) COLLATE NOCASE FROM rt0 WHERE (((((((NULL)) BETWEEN (('')) AND (('-480669707')))))!=((0.013343781695980494 COLLATE NOCASE)))); -- 0ms;
SELECT SUM((((rt0.c3, rt0.c1, rt0.c4)) BETWEEN ((rt0.c3, rt0.c4, rt0.c1)) AND ((rt0.c1, 0.12938262104722986, rt0.c3)))) FILTER(WHERE (((((((rt0.c4, rt0.c4, rt0.c0)) BETWEEN ((rt0.c3, rt0.c3, rt0.c4)) AND ((rt0.c1, rt0.c1, rt0.c1))))OR(((rt0.c4)-(rt0.c2)))))AND(x'79d2'))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW) FROM rt0 WHERE (((0.2089455089838168 COLLATE BINARY)%((('_h 㱂') IS FALSE)))) LIMIT -986943679; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0 WHERE ('1105320013'); -- 0ms;
SELECT ALL ((((((rt0.c3)|(rt0.c3)))AND(((rt0.c1) BETWEEN (rt0.c4) AND (rt0.c1)))))AND(CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END)) FROM rt0 WHERE (CAST(((((x'')AND(NULL)))AND(NULL)) AS BLOB)) GROUP BY (CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 END IN ()) HAVING CASE rt0.c2 COLLATE RTRIM  WHEN ((rt0.c2)==(rt0.c0)) THEN ((rt0.c0) IS TRUE) ELSE ((rt0.c4)LIKE(rt0.c4)) END ORDER BY (CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END IN ((rt0.c0 IN ()))) DESC; -- 1ms;
SELECT DISTINCT ((((NULL)OR('')))AND(((rt0.c2) NOT BETWEEN ('[*j/pI븗.') AND (rt0.c4)))), ((COUNT(*))AND((rt0.c3 IN ()))), x'' FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((((rt0.c0) IS FALSE), ((rt0.c0) NOT BETWEEN (rt0.c1) AND (7.68835665E8)), (((0.7294470896649795, rt0.c1, rt0.c1))>((rt0.c4, rt0.c3, rt0.c2))))) AND ((((rt0.c1)<(rt0.c0)), ((rt0.c3)|(rt0.c1)), MAX(rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL LIKELY(DISTINCT ((rt0.c2) NOTNULL)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2, rt0.c1, rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((CAST(rt0.c4 AS TEXT), CAST(rt0.c4 AS INTEGER), ((rt0.c3)+(0xffffffffe0667b4a)), ((((rt0.c0)OR(rt0.c2)))AND(rt0.c3)), NULL)) AND ((CAST(rt0.c2 AS TEXT), (- (rt0.c0)), (rt0.c3 IN ()), GROUP_CONCAT(rt0.c1), CASE rt0.c4  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c1 END))), CASE WHEN ((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c0)) THEN CAST(rt0.c3 AS BLOB) END, (ABS(DISTINCT rt0.c1) IN ()) FROM rt0 WHERE (CASE WHEN CASE '-1561892370'  WHEN NULL THEN 0xffffffffaeca8272 END THEN LTRIM('ᅧo1VVt', x'b80d') ELSE (('-1021772263') NOT NULL) END) GROUP BY (((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)) IN ()); -- 0ms;
SELECT ALL MAX(CAST(rt0.c0 AS INTEGER)), x'', CASE '0.3351381602100285'  WHEN ((((((((rt0.c4)OR(NULL)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4)) THEN ((rt0.c3)&(rt0.c4)) WHEN ((rt0.c1) IS FALSE) THEN ((rt0.c2) IS FALSE) WHEN GLOB(rt0.c0, rt0.c2) THEN rt0.c2 COLLATE RTRIM ELSE CAST(rt0.c2 AS NUMERIC) END FROM rt0; -- 0ms;
SELECT CASE (rt0.c2 IN ())  WHEN CAST(rt0.c1 AS INTEGER) THEN rt0.c0 COLLATE RTRIM END FROM rt0; -- 0ms;
SELECT ((((NOT (rt0.c2))))>((CAST(rt0.c3 AS REAL)))) FROM rt0 WHERE ((((((x'' IN ()))AND(((0.7535313975416811)<=(NULL)))))AND(((0xffffffffe431be17) NOT BETWEEN ('') AND (x''))))) LIMIT 1773693271 OFFSET 1608961432; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c3))%(((x'') IS TRUE))) FROM rt0 WHERE (((TRIM(DISTINCT '', '0!f+m_1LX'))&((('mK')<=(x'8ac3'))))); -- 0ms;
SELECT HEX(((rt0.c1)>>(rt0.c2))), LENGTH(CASE rt0.c3  WHEN 'j+ z㉕e' THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN NULL END), TOTAL(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 END) OVER () FROM rt0 WHERE ((((NULL))>=(('')))); -- 0ms;
SELECT DISTINCT (((rt0.c4, rt0.c2, rt0.c4, rt0.c0, rt0.c4)) BETWEEN ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c0)), rt0.c3 COLLATE RTRIM, ((rt0.c0)LIKE(rt0.c4)), (((rt0.c0, rt0.c1, rt0.c2))<((rt0.c2, rt0.c0, rt0.c3))), CAST(rt0.c3 AS NUMERIC))) AND ((LOWER(rt0.c0), rt0.c0, rt0.c0 COLLATE RTRIM, ((rt0.c3) IS FALSE), UPPER(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((((rt0.c0)OR(rt0.c2)))OR(rt0.c1)) THEN ((rt0.c0)||(rt0.c1)) END, ((((rt0.c3) IS TRUE))<<(rt0.c3 COLLATE RTRIM)), (((rt0.c4, rt0.c4, rt0.c4))>((rt0.c4, rt0.c0, rt0.c1))) COLLATE RTRIM FROM rt0 WHERE ((((CASE WHEN x'' THEN 0.0014601389132565812 END))<=((('t菑hrpc' IN (-1112378173)))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT NULL))<(rt0.c1)) FROM rt0 WHERE (CASE WHEN (x'' IN ()) THEN (('\n%') IS TRUE) ELSE (('P')<=(NULL)) END); -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN (((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))) AND (rt0.c1)) FROM rt0 WHERE (((NOT (0.15899375783780456)) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c4) ISNULL) IN ()) FROM rt0 WHERE (((((TYPEOF(DISTINCT 2093207361))AND(((0xffffffffe431be17) NOT NULL))))AND((x'' IN ())))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((rt0.c1, rt0.c2, rt0.c2)) AND ((NULL, rt0.c2, rt0.c3))) AS BLOB), CAST(((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)) AS INTEGER), (HEX(rt0.c2) IN ()) FROM rt0; -- 0ms;
SELECT SUM((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) OVER () FROM rt0 GROUP BY NULLIF(((rt0.c1) IS TRUE), rt0.c2 COLLATE RTRIM); -- 0ms;
SELECT 0.7402237830329916 FROM rt0; -- 0ms;
SELECT rt0.c0 FROM rt0 WHERE (LIKE('' COLLATE RTRIM, ((x'') BETWEEN (NULL) AND (0X1)))); -- 0ms;
SELECT DISTINCT (((rt0.c1 IN ()))+(((rt0.c1)>>(rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL (rt0.c2 IN (rt0.c0, rt0.c2)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOT NULL) AS NUMERIC) FROM rt0 WHERE (((((((x'')>>(x'')))OR(CAST('0.32219643297695244' AS TEXT))))AND(CASE x''  WHEN NULL THEN 0X4a6e9445 WHEN -954022939 THEN -524735835 WHEN NULL THEN 8.08628339E8 WHEN 'KTQ\nxS|>' THEN NULL WHEN 0.630681761927194 THEN 0.1915557984509071 END))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c3) NOT NULL) COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT (((((rt0.c1)OR(rt0.c0)))OR(rt0.c3)) IN ()) FROM rt0 WHERE (((((0.0554290873080745) BETWEEN (0.2861777779646063) AND (x'')))%((('1917529431') BETWEEN ('绬0i') AND ('#}0pᅧ'))))) GROUP BY (((+ (rt0.c2))) BETWEEN (rt0.c0 COLLATE RTRIM) AND (((rt0.c0) NOTNULL))); -- 0ms;
SELECT DISTINCT '0.18503871461404497' FROM rt0 WHERE (COALESCE(DISTINCT ((((NULL)OR(1)))AND(NULL)), (NOT (x'5aec')), ((0.8091155449946653) NOT BETWEEN (0.3939481223810951) AND (0.8832954786712924)), (('0.822308663602707')>(NULL)), (0.5550674601259488 IN ()), ('-338354458' IN ('6jLhS*ce0')))); -- 0ms;
SELECT DISTINCT (~ ((((rt0.c0, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c0, rt0.c2))))), CAST(rt0.c1 AS BLOB) COLLATE RTRIM, (((rt0.c3)|(NULL)) IN ()) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(SQLITE_COMPILEOPTION_GET(-1.426664358E9) COLLATE BINARY) OVER () FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST, ((+ (rt0.c0)) IN ())  NULLS FIRST, CASE WHEN IFNULL(rt0.c4, rt0.c3) THEN ((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)) ELSE (((rt0.c0))!=((rt0.c1))) END DESC; -- 0ms;
SELECT DISTINCT ((json_insert(rt0.c0, rt0.c2, rt0.c4, rt0.c2, x'')) BETWEEN (SUM(rt0.c3)) AND (CAST(rt0.c1 AS INTEGER))) FROM rt0 WHERE ((((CASE x''  WHEN '2093878469' THEN NULL WHEN x'' THEN NULL WHEN 259700609 THEN NULL ELSE '0.3253486743855222' END, ((((((((((((x'91b3')AND(x'f2e3')))OR('-1123404517')))AND(x'')))AND('-681452311')))OR(0.26554686067838884)))AND(x'')), (('')LIKE(0.02854576450795676))))<(((('-1130136913')<<('Tp')), ABS(x''), ((5.55438378E8) NOT BETWEEN (x'64f1') AND (x'2ae6')))))) ORDER BY (rt0.c4 COLLATE RTRIM IN ()) DESC; -- 0ms;
SELECT DISTINCT x'' FROM rt0 ORDER BY (((+ (rt0.c0)))+(((rt0.c1)>(rt0.c0)))); -- 1ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(((rt0.c0)AND(rt0.c1))) FROM rt0; -- 0ms;
SELECT CAST(PRINTF(rt0.c0, rt0.c4, rt0.c0) AS INTEGER), ((GROUP_CONCAT(rt0.c2)) BETWEEN (TOTAL(rt0.c1)) AND (CAST(rt0.c3 AS TEXT))), ((((((((rt0.c2)OR(rt0.c4)))AND('')))AND(x'')))AND((rt0.c0 IN ()))) FROM rt0; -- 0ms;
SELECT DISTINCT UNLIKELY((NOT (rt0.c2))), ((((rt0.c1, rt0.c4, rt0.c1, rt0.c2, rt0.c4)) BETWEEN ((rt0.c3, rt0.c1, rt0.c0, rt0.c3, rt0.c0)) AND ((0.009744158107813705, NULL, rt0.c0, rt0.c3, rt0.c1))) IN ()), NULL FROM rt0 WHERE (CAST(CAST(0.8280146266968699 AS REAL) AS REAL)); -- 0ms;
SELECT CAST(CASE rt0.c1  WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 END AS NUMERIC) FROM rt0 ORDER BY (((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c3))))<((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) ASC; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c3))) OVER ( GROUPS (('-91786491')&(((rt0.c4)OR(rt0.c1)))) PRECEDING), (rt0.c1 IN ()) COLLATE NOCASE, ((rt0.c0 COLLATE NOCASE)LIKE(COUNT(rt0.c3))) FROM rt0 WHERE ((NOT (((('44621329'))<((0Xfffffffffa8c98ab))))));SELECT DISTINCT rt0.c4 FROM rt0 ORDER BY (((((0.9138837123948205)>(rt0.c2))))!=(((rt0.c2 IN ())))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c1)*(rt0.c4))) FROM rt0 WHERE ((('' COLLATE NOCASE) NOT BETWEEN (0.8391530504881184) AND (((('0.4120650030033185'))<((0.9891610066275496)))))); -- 0ms;
SELECT QUOTE('!㓻ib⼧G'), (~ ((((rt0.c2))>((rt0.c2))))), NTH_VALUE((~ (x'')), CAST(rt0.c2 AS INTEGER)) OVER () FROM rt0 WHERE ((((x'')) NOT BETWEEN (((NOT (NULL)))) AND ((((((((((0.30612252684788455)AND(0.9536949416997502)))OR('')))OR(-530295340)))OR('퇒.'))))));SELECT ALL ABS((rt0.c0 IN ())) FROM rt0 WHERE (CAST(((((NULL)OR(0X11a8daf2)))AND(0X463e1ca0)) AS REAL)); -- 0ms;
SELECT DISTINCT LEAD(((x'') NOT NULL), (((rt0.c2 IN ())) ISNULL), ((((((((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END)OR(x'')))OR(IFNULL(DISTINCT rt0.c0, '-694304282'))))OR(CAST(rt0.c2 AS INTEGER))))AND((rt0.c1 IN ())))) OVER (), (rt0.c3 IN ()), COUNT(*), NULL, COALESCE(rt0.c3, rt0.c1) COLLATE RTRIM FROM rt0 WHERE (CAST('0.687425826643152' AS REAL)); -- 0ms;
SELECT ((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)) COLLATE RTRIM, load_extension(0.43394778247628796), CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE COLLATE BINARY, ((SUM(0xffffffffa3708f06))>=(((((rt0.c0)AND(rt0.c4)))AND(rt0.c3)))), CASE ((x'') ISNULL)  WHEN MAX(rt0.c0) THEN ((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)) END FROM rt0 WHERE (CASE WHEN (('') NOTNULL) THEN x'1b40' COLLATE NOCASE END);SELECT ALL ((((rt0.c1)+(rt0.c3))) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((NULL IN (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL CAST((rt0.c2 IN (rt0.c1)) AS REAL) FROM rt0 WHERE ((((+ ('-480669707'))) IS FALSE)); -- 0ms;
SELECT DISTINCT (rt0.c2 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c2) NOTNULL) IN ()) FROM rt0; -- 0ms;
SELECT ALL NTILE((NOT (((rt0.c4)*(x'e20a'))))) OVER () FROM rt0 WHERE ((((('Z%^붵tX') BETWEEN (x'') AND (NULL))) NOT BETWEEN ((((('1921969764')AND(x'')))AND(0.6517319178483802))) AND (((NULL)GLOB('555438378'))))); -- 0ms;
SELECT DISTINCT 0xffffffffe815b38e FROM rt0 WHERE ('-519645701'); -- 0ms;
SELECT (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c4)))) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) AND (TOTAL(rt0.c1))) FROM rt0; -- 0ms;
SELECT ((rt0.c1 COLLATE RTRIM) NOT BETWEEN ('1921969764') AND (CAST(rt0.c1 AS TEXT))), (+ ((((('')AND('3F')))OR(rt0.c2)))), (((((rt0.c2)||(rt0.c1))))<(((((rt0.c4))<=((rt0.c3)))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((CAST(rt0.c4 AS NUMERIC), CASE WHEN rt0.c0 THEN 0.206148745291585 ELSE rt0.c1 END, '-426268200'))==((((rt0.c3) ISNULL), ((rt0.c2)<<(rt0.c1)), TOTAL(rt0.c3)))) FROM rt0 WHERE ((((NOT (NULL)))GLOB(((NULL) NOT BETWEEN (NULL) AND (0Xffffffffd9df187c))))); -- 0ms;
SELECT (((rt0.c2 IN ()))LIKE(CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 END)) FROM rt0; -- 0ms;
SELECT ALL COUNT(CASE WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c4 END) FROM rt0 GROUP BY (((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c3 END, CAST(rt0.c3 AS REAL), ((((rt0.c3)AND(rt0.c0)))OR(rt0.c1)))) AND ((-3.67058685E8, json_extract(rt0.c4, rt0.c3), CAST(rt0.c2 AS REAL)))) HAVING (((''))<=((rt0.c4))); -- 0ms;
SELECT ((CASE WHEN NULL THEN rt0.c3 END) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2)AND(rt0.c0)))||(((((rt0.c2)OR(rt0.c1)))AND(rt0.c3)))) FROM rt0 WHERE (((x'197a')GLOB(CASE 'K>W\n_'  WHEN '' THEN 0xfffffffff7dc0615 WHEN x'' THEN 0.09548736503102184 WHEN '1041966538' THEN NULL END))); -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT SUM((((rt0.c4)) BETWEEN ((rt0.c2)) AND ((rt0.c4)))) FILTER(WHERE (CASE NULL  WHEN rt0.c0 THEN rt0.c1 END IN ())) OVER ( PARTITION BY ((rt0.c1)||(rt0.c1)) COLLATE RTRIM, '-519645701') FROM rt0 WHERE ((((x'' IN ()))IS NOT((0xffffffffd325b498 IN ())))); -- 0ms;
SELECT ALL CAST(UPPER(DISTINCT rt0.c4) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN rt0.c3 THEN rt0.c2 END THEN LIKELIHOOD(rt0.c0, 0.6224973330450034) WHEN CAST(rt0.c1 AS REAL) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c2)<(rt0.c0)) THEN ((rt0.c1)<(rt0.c0)) WHEN ((rt0.c2)&(rt0.c4)) THEN (((rt0.c0))<((NULL))) WHEN ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c0)) THEN ((rt0.c4)<<(rt0.c2)) ELSE (~ (rt0.c1)) END, CAST(((rt0.c1)==(rt0.c0)) AS NUMERIC), rt0.c0 FROM rt0 WHERE ((('-593989347')>(0.6370177345452965)) COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c0) BETWEEN (x'') AND (NULL))) NOTNULL) FROM rt0 WHERE ((- (CASE WHEN 0X6741692e THEN x'' WHEN 0.8845056783562338 THEN NULL WHEN '' THEN 0.6117478996414001 END))); -- 1ms;
SELECT AVG(((rt0.c0)=(rt0.c3))) OVER (), ((((CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END)OR(((NULL)=(rt0.c4)))))OR(((rt0.c4)LIKE(rt0.c0)))), LIKELY(DISTINCT ((rt0.c3)AND(0.5038643035291847))) FROM rt0; -- 0ms;
SELECT ALL ((((((((TOTAL(rt0.c2))AND(MAX(rt0.c3))))OR((((rt0.c3))==((rt0.c2))))))OR(rt0.c0)))OR(((((((((rt0.c0)AND(rt0.c1)))AND('-166897194')))AND(0.7521283739458221)))OR(NULL)))) FROM rt0; -- 0ms;
SELECT ALL AVG(((rt0.c1)AND(rt0.c4))) OVER () FROM rt0 GROUP BY (((rt0.c1)) BETWEEN ((CAST(rt0.c0 AS BLOB))) AND ((rt0.c0))), ((0.7829266840648106)<(UPPER(rt0.c3))), ((CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)*(CAST(rt0.c2 AS BLOB))); -- 0ms;
SELECT CASE x''  WHEN rt0.c1 THEN SUM(rt0.c0) END FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 WHEN x'12a1' THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 END) OVER () FROM rt0 WHERE (MIN(CAST(1.199919507E9 AS BLOB), CASE 0.4134415273694114  WHEN 0.7467004056485715 THEN '' WHEN 0.8155552465504434 THEN '1002604948' WHEN 0xffffffffd4925c6f THEN 0.6339484423189405 ELSE '0.21934008529514004' END)) ORDER BY ((TYPEOF(rt0.c3))!=(((('-1478648772'))<((rt0.c4))))) DESC; -- 0ms;
SELECT ALL GROUP_CONCAT((((rt0.c3))<=((rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT HEX(((0.34615653468342034) NOT BETWEEN (rt0.c4) AND (rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL CASE (((rt0.c4, rt0.c0, rt0.c3)) BETWEEN ((rt0.c2, rt0.c2, rt0.c4)) AND ((rt0.c4, rt0.c0, rt0.c4)))  WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c4 END THEN ((rt0.c4) IS FALSE) ELSE (~ (rt0.c0)) END FROM rt0 WHERE ((((('1814247179') NOTNULL))|('lT0y\n' COLLATE BINARY))); -- 0ms;
SELECT MAX(((((rt0.c1)OR(rt0.c0)))AND(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c0)))IS(((x'') NOT BETWEEN (rt0.c3) AND (rt0.c0)))), json_quote(0X4bbb32aa), 0.526403252384854 FROM rt0 ORDER BY ((((rt0.c3) NOT NULL))==(((rt0.c0) IS FALSE))) ASC  NULLS FIRST LIMIT 1490024024 OFFSET 1147934405; -- 0ms;
SELECT ((TOTAL(rt0.c3)) NOT BETWEEN (rt0.c3 COLLATE RTRIM) AND (((((rt0.c3)OR(rt0.c3)))AND(rt0.c2)))) FROM rt0 WHERE ((((((((x'dd80')AND(0Xffffffffb7954a10)))AND(0.3385174393852822)), (('-365912608')IS NOT(0Xffffffffd6755584)), ((NULL)%(0.4826157617884804))))=((CAST(x'' AS NUMERIC), (('883467797')%(x'')), (- ('-118606807')))))); -- 0ms;
SELECT ALL (rt0.c2 COLLATE RTRIM IN (((rt0.c1) NOT NULL))), ((1234841470) BETWEEN ('') AND (MIN(rt0.c4))), GROUP_CONCAT(CAST(rt0.c3 AS INTEGER)) FROM rt0; -- 0ms;
SELECT ALL RANK() OVER ( ORDER BY ((((((((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)))AND('1862053613')))OR(rt0.c2)))=((((rt0.c4))<=((rt0.c1))))) ASC  NULLS LAST) FROM rt0 WHERE (x''); -- 0ms;
SELECT ALL (((rt0.c2 IN ())) IS TRUE) FROM rt0 GROUP BY (((rt0.c0)) NOT BETWEEN ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))) AND (((((rt0.c2, rt0.c0, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c2)) AND ((rt0.c2, rt0.c3, rt0.c3)))))) HAVING ((((((((rt0.c4)OR(rt0.c1)))AND(rt0.c1)))OR((+ (rt0.c0)))))AND(((rt0.c2)>=(rt0.c0)))); -- 0ms;
SELECT DISTINCT TOTAL(LENGTH(rt0.c0)) OVER (), ((((((((((rt0.c3)OR(rt0.c2)))AND(rt0.c0)))OR(0.5366818629451294)))AND(rt0.c4))) IS TRUE), (((((rt0.c3))<>((rt0.c0))))>>(((rt0.c1)||(rt0.c1)))) FROM rt0 LIMIT -364454741 OFFSET -2059136665; -- 0ms;
SELECT DISTINCT AVG(0.6488886695432341) FROM rt0 WHERE (((((((NULL)AND(-708888829)))OR(0Xffffffffadf30c91)))/(((((((((x'')OR('')))AND('0.9658922167429154')))OR(624779452)))AND(1.660017828E9))))) ORDER BY rtreenode((NOT ('▲9t')), (rt0.c2 IN ())), CASE rt0.c1  WHEN ((((rt0.c1)AND(rt0.c0)))AND(rt0.c0)) THEN HEX(rt0.c0) END ASC; -- 0ms;
SELECT DISTINCT rt0.c3, x'', -1528374179 FROM rt0 EXCEPT SELECT DISTINCT (+ (((rt0.c4)>(rt0.c3)))), ((rt0.c3) IS FALSE) COLLATE NOCASE, TOTAL(rt0.c1) OVER ( ORDER BY ((((rt0.c0)AND(CASE WHEN rt0.c4 THEN rt0.c1 END)))AND((~ (rt0.c4)))) DESC  NULLS LAST, (+ (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) DESC  NULLS FIRST, ABS(DISTINCT rt0.c3 COLLATE RTRIM)) FROM rt0 WHERE (-1.021772263E9); -- 0ms;
SELECT ALL (+ (((rt0.c1)>=(rt0.c4)))), MIN(rt0.c1) COLLATE BINARY COLLATE RTRIM, ((rt0.c4 COLLATE BINARY) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0) IS FALSE) IN ()), ((CAST(rt0.c2 AS NUMERIC)) ISNULL), ((((AVG(rt0.c1))OR(NULL)))AND(CASE WHEN rt0.c1 THEN rt0.c1 END)), GROUP_CONCAT(((rt0.c1)|(rt0.c3))) FILTER(WHERE CAST(CASE rt0.c3  WHEN rt0.c1 THEN rt0.c3 END AS TEXT)) OVER (), rt0.c3 FROM rt0 ORDER BY rt0.c2 DESC; -- 0ms;
SELECT ALL ((((rt0.c1)>(rt0.c1))) NOT BETWEEN (((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c3))) AND (((((rt0.c4)OR(rt0.c4)))AND(rt0.c3)))) FROM rt0 WHERE (0.44315008821741875); -- 0ms;
SELECT DISTINCT ((((NULL)+(rt0.c0))) NOT NULL), ((((rt0.c0)+(rt0.c4)))<(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c2)))), GROUP_CONCAT(LIKELIHOOD(rt0.c3, 0.7923534301922505) COLLATE RTRIM) OVER ( PARTITION BY (((rt0.c0 IN ()))+(((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))), ((0X140bb8fd)<<(rt0.c2 COLLATE NOCASE)) ORDER BY (((((rt0.c4)OR(rt0.c1)))OR(rt0.c0)) IN ()) DESC  NULLS LAST) FROM rt0 WHERE (((('1045869651')) BETWEEN ((((((x'')AND('p <np')))AND(1519006392)))) AND ((((('(h軨!M3T'))<((0.3770767119772682))))))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4)/(rt0.c4))), ((rt0.c4 IN (rt0.c2)) IN ()), NULL FROM rt0 GROUP BY ((CAST(rt0.c4 AS TEXT)) BETWEEN (-140479486 COLLATE RTRIM) AND (SUBSTR(rt0.c2, rt0.c3))); -- 0ms;
SELECT rt0.c0 FROM rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(NULL) OVER () FROM rt0; -- 0ms;
SELECT ((('-916838990' COLLATE RTRIM))==((rt0.c4 COLLATE BINARY))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c2)<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1)<=(rt0.c1)) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL ((TRIM(rt0.c4)) NOTNULL), UPPER(((rt0.c3)+(rt0.c3))), CASE rt0.c1  WHEN 0.4804129993580962 THEN NULL ELSE rt0.c2 END COLLATE RTRIM, (((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) IN ()), ((((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c4 WHEN 0.7071158948188572 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c1 END)AND(rt0.c4 COLLATE BINARY)))OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) FROM rt0 WHERE ((((((x'')<>(x''))))<(((0.4885030330029938 IN ()))))) LIMIT 57709790; -- 0ms;
SELECT ALL TRIM(DISTINCT 0.8681983627677008) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT NULL)) NOT BETWEEN (rt0.c1) AND (rt0.c0)) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c0)<<(rt0.c3)) COLLATE RTRIM FROM rt0 WHERE ((- (x'5de2' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT LENGTH(CAST(x'' AS INTEGER)) FROM rt0; -- 0ms;
SELECT ALL (((x'') NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()), ((((UNLIKELY(rt0.c1))OR(rt0.c4)))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))), CAST((rt0.c4 IN ()) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER (), CAST('a' AS INTEGER), GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c4) AND ('1076281679')) COLLATE BINARY) OVER (), LAG(CAST((rt0.c3 IN ()) AS BLOB), x'1de9', '	b egizꪉc') OVER (), TOTAL(TRIM(rt0.c1, rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN ()) FROM rt0; -- 0ms;
SELECT (~ (NULL)), ((CAST(rt0.c0 AS TEXT)) BETWEEN (((rt0.c0) ISNULL)) AND (((rt0.c4)<=(1669403821)))), UNLIKELY((- (rt0.c3))) FROM rt0 WHERE ((~ (CASE '-935977792'  WHEN NULL THEN NULL WHEN '230790949' THEN x'2cac' WHEN NULL THEN x'' ELSE 0.6137707063594765 END))); -- 0ms;
SELECT ((((rt0.c3)=(rt0.c2)))>>(((rt0.c0) IS FALSE))) FROM rt0 WHERE (ABS(((NULL)%(0.12039746957890685)))) LIMIT 1587559437 OFFSET 1586718665; -- 0ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))IS(rt0.c0)) FROM rt0 WHERE (CASE WHEN (NOT (0.41220297724649957)) THEN (-1.021772263E9 IN (NULL, 0.2914266547374865)) END); -- 0ms;
SELECT DISTINCT (NOT (ABS(rt0.c3))) FROM rt0 WHERE ((('-246838255') NOT BETWEEN (((-1658074366) IS TRUE)) AND (((0Xffffffff8b6635cf)||(x'7ad8'))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2, rt0.c3, rt0.c0))<((rt0.c3, rt0.c4, rt0.c1))) IN ()) FROM rt0 WHERE (((((x'')) NOT BETWEEN ((0xffffffffb5717eec)) AND ((NULL))) IN ())); -- 0ms;
SELECT (CAST(rt0.c2 AS REAL) IN ((~ (rt0.c1)))) FROM rt0 ORDER BY ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c2)))/(rt0.c4 COLLATE BINARY)); -- 1ms;
SELECT DISTINCT ((UPPER(DISTINCT rt0.c4)) NOT NULL) FROM rt0; -- 0ms;
SELECT ((TRIM(DISTINCT rt0.c4, rt0.c4))&(((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c2)))) FROM rt0 GROUP BY (- (((rt0.c1) NOTNULL))) HAVING ((CAST(NULL AS INTEGER))>=((+ (rt0.c0)))) LIMIT 139605652; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)+(((((rt0.c2)OR(1.199919507E9)))AND(rt0.c2)))), ((rt0.c3) BETWEEN (SUM(rt0.c4)) AND ((((rt0.c0))<((rt0.c1))))), ((rt0.c4 COLLATE NOCASE) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c3)>>(1815463766)) IN ()) FROM rt0; -- 0ms;
SELECT ((MAX(rt0.c0))&(CASE WHEN rt0.c2 THEN NULL WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 END)), ((((9.4305035E7) BETWEEN (rt0.c2) AND (0.1559852205519524)))LIKE(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c4)))), ((((((rt0.c4)IS NOT(rt0.c0)))AND(((rt0.c1)LIKE(rt0.c1)))))OR(rt0.c4)) FROM rt0 WHERE (((((179979565)IS NOT(NULL))) BETWEEN ((((('0.4218570250227369')AND(0.8341395615443474)))AND(NULL))) AND (((0X14ce1bf3)<('319455163'))))); -- 0ms;
SELECT COUNT(0.22489265416080972) FROM rt0 WHERE ((~ (((((x'')AND(x'')))AND(''))))); -- 0ms;
SELECT CASE WHEN ((rt0.c0)!=(rt0.c3)) THEN ((rt0.c4)GLOB(rt0.c4)) WHEN (- (0.6854286434273303)) THEN (+ (rt0.c1)) WHEN ((rt0.c0)IS NOT(rt0.c3)) THEN rt0.c3 ELSE (((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c3 END  WHEN MAX(786621699) THEN rt0.c4 COLLATE BINARY END FROM rt0 WHERE (x''); -- 0ms;
SELECT TOTAL(CAST(rt0.c0 AS NUMERIC)), ((((((rt0.c4)*(rt0.c0)))AND(((((((((rt0.c0)OR(rt0.c0)))OR(x'b6de')))OR(rt0.c3)))OR(rt0.c1)))))AND(CASE WHEN x'' THEN rt0.c0 ELSE rt0.c2 END)), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)IS(((0.4821086310363599) BETWEEN (rt0.c0) AND (NULL)))) FROM rt0 WHERE (x''); -- 0ms;
SELECT ALL (- (rt0.c4 COLLATE NOCASE)), CASE WHEN rt0.c2 COLLATE RTRIM THEN load_extension(rt0.c2, rt0.c1) ELSE (rt0.c3 IN ()) END, ((CASE rt0.c1  WHEN NULL THEN rt0.c4 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END)-((((rt0.c3))>((rt0.c3))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((NULL, rt0.c2, rt0.c4)) NOT BETWEEN ((MAX('J?', rt0.c1), ((((rt0.c4)OR(rt0.c0)))AND(rt0.c2)), CAST(rt0.c0 AS BLOB))) AND (((~ (rt0.c3)), (((rt0.c3))!=((rt0.c0))), (((rt0.c1))==((rt0.c4)))))) FROM rt0 WHERE (((('pe')AND(x'')) IN ())) GROUP BY MIN(TYPEOF(rt0.c2), rt0.c2, rt0.c2 COLLATE NOCASE, ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0))) HAVING CASE AVG(rt0.c1)  WHEN RTRIM(rt0.c1) THEN ABS(DISTINCT rt0.c3) ELSE ((rt0.c3)GLOB(rt0.c3)) END ORDER BY (~ (((rt0.c1)*(rt0.c3)))) DESC; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c4))<=((rt0.c3))))AND(CAST(rt0.c3 AS NUMERIC))))OR(LIKELIHOOD(rt0.c2, 0.26582561424382456))))OR(((rt0.c1)>(rt0.c0)))))OR((((('623487802')AND(rt0.c4)))OR(rt0.c3)))), NULL, ((NULL) NOT BETWEEN (((x'')+(rt0.c2))) AND (NULLIF(rt0.c0, rt0.c1))) FROM rt0 WHERE (CASE WHEN x'' THEN (('U]')*('Pk{')) ELSE (('1917529431') BETWEEN (NULL) AND (NULL)) END); -- 0ms;
SELECT ((((rt0.c4) NOT NULL))LIKE(((((rt0.c2)AND(rt0.c0)))AND(rt0.c4)))) FROM rt0 WHERE (((CASE NULL  WHEN '' THEN '1138740143' ELSE x'' END) IS FALSE)) LIMIT -1601812491; -- 0ms;
SELECT COUNT(CAST(NULL AS REAL)) OVER ( RANGE (((rt0.c4)) NOT BETWEEN ((CAST(rt0.c0 AS TEXT))) AND (((((rt0.c0, rt0.c3, rt0.c2)) BETWEEN ((rt0.c0, x'', rt0.c4)) AND ((rt0.c1, '1871679904', rt0.c2)))))) PRECEDING) FROM rt0;SELECT NTH_VALUE(((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1)) COLLATE NOCASE, (((+ (rt0.c2)))>=(CAST(rt0.c4 AS NUMERIC)))) OVER () FROM rt0 GROUP BY rt0.c3; -- 0ms;
SELECT CASE WHEN 0xffffffff8157310b THEN ((rt0.c4) NOT BETWEEN (x'8d14') AND (rt0.c3)) ELSE ((((rt0.c0)AND(rt0.c1)))OR(rt0.c0)) END FROM rt0 WHERE (((~ (-5.76786474E8)) IN ())) LIMIT 2044558879 OFFSET 1708354139; -- 0ms;
SELECT (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((rt0.c1 COLLATE NOCASE, ((rt0.c1)OR('1364642577')), ((rt0.c3) NOTNULL))) AND (((~ (rt0.c0)), CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END, ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c1))))) FROM rt0 WHERE (CAST(((((((((((((0.8805153814127794)AND('-101784846')))OR(x'0381')))OR(NULL)))AND(x'')))OR(0.4218570250227369)))AND(NULL)) AS REAL)); -- 0ms;
SELECT CASE TYPEOF(rt0.c2)  WHEN (rt0.c0 IN (rt0.c2)) THEN (((rt0.c2))>((rt0.c2))) WHEN (((rt0.c3))<>(('-1280082196'))) THEN (((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) WHEN ((rt0.c4)/(rt0.c4)) THEN (((rt0.c1))!=((rt0.c1))) ELSE rt0.c1 END FROM rt0 LIMIT -2078317661 OFFSET -2076039499; -- 0ms;
SELECT DISTINCT RANK() OVER (), CASE TOTAL(x'')  WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c3 WHEN '' THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 END THEN (((rt0.c2, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c2, x'e07c', rt0.c0)) AND ((rt0.c3, rt0.c2, rt0.c2))) ELSE rt0.c2 COLLATE NOCASE END, ((((((rt0.c0)AND(rt0.c1)))AND(rt0.c0))) BETWEEN (NULL) AND (rt0.c1 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ALL COUNT(*) FROM rt0; -- 0ms;
SELECT ((((4.4621329E7)==(rt0.c2)))IS(((rt0.c0)<>(rt0.c4)))) FROM rt0 WHERE ((((CASE '-2034529699'  WHEN NULL THEN x'' ELSE 1934527149 END, CASE x''  WHEN NULL THEN 1 ELSE 'UX' END, NULL))>=(((('')OR('-1426664358')), ((NULL)<=(0.5773389220955144)), 0.5984019002516386 COLLATE BINARY)))); -- 0ms;
SELECT ALL (~ (((rt0.c1)/(rt0.c4)))) FROM rt0 WHERE (((('1244601630' IN ()))||(NULL))); -- 0ms;
SELECT DISTINCT AVG(((((rt0.c2)OR('Ag')))OR(rt0.c2))) OVER (), rt0.c0, (((rt0.c1, rt0.c2, rt0.c4)) NOT BETWEEN (((NOT (rt0.c1)), rt0.c4 COLLATE BINARY, CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c3 WHEN x'fd60' THEN rt0.c4 ELSE rt0.c4 END)) AND (((rt0.c4 IN (rt0.c0, rt0.c3)), (NOT (rt0.c2)), ((rt0.c3)*(rt0.c3))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((((((((((- (NULL)))OR((('-1932230626') BETWEEN (NULL) AND ('Dr(')))))OR(LOWER('-519645701'))))OR((((NULL, 'B', NULL)) BETWEEN ((0.5195583182062863, NULL, '-960956701')) AND (('fz\r)0', NULL, '1814247179'))))))OR(CASE WHEN '0.0' THEN 0.25524812809922237 ELSE 0.28690571268207576 END))) ORDER BY (((CAST(x'3021' AS REAL), NULL, (((rt0.c0))>((NULL)))))<=((((((((((rt0.c4)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c2)))AND(rt0.c2)), LIKELY(rt0.c2), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) ASC  NULLS FIRST, ((CAST(rt0.c1 AS TEXT))>=(rt0.c0 COLLATE NOCASE)) ASC, ((0X184f3c60)GLOB(rt0.c3 COLLATE NOCASE))  NULLS FIRST; -- 0ms;
SELECT ((-1.956235825E9)<(((rt0.c0)<(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c4)))&(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c2)))) FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (0.41976864356169874) AND ((~ (0.5683993737441028))))); -- 0ms;
SELECT ((rt0.c1 COLLATE NOCASE) NOTNULL) FROM rt0 WHERE ((- (CASE x''  WHEN 'AⵗcC2&n' THEN NULL ELSE '0.8552393174987442' END))); -- 0ms;
SELECT ALL TOTAL(((((rt0.c2)AND(x'e636')))AND(rt0.c4))) FILTER(WHERE ((((((((((((CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c4 THEN x'b0a81ed2' ELSE rt0.c0 END)OR(rt0.c1 COLLATE BINARY)))AND(((rt0.c1)&(rt0.c4)))))OR(CAST(rt0.c2 AS REAL))))AND(((rt0.c4)>(rt0.c0)))))AND(((rt0.c2)<('89848532')))))AND(CAST(rt0.c0 AS REAL)))) OVER () FROM rt0 ORDER BY CAST(((rt0.c4)<<(rt0.c2)) AS TEXT) DESC; -- 0ms;
SELECT ALL COUNT(CASE rt0.c4  WHEN rt0.c3 THEN rt0.c0 ELSE NULL END) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0; -- 0ms;
SELECT rt0.c4, GROUP_CONCAT(rt0.c0 COLLATE BINARY) COLLATE BINARY, GROUP_CONCAT(((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c4))) OVER () FROM rt0 WHERE ((- ('-875002167'))) ORDER BY CASE CAST(rt0.c0 AS REAL)  WHEN ((rt0.c3)-(rt0.c0)) THEN (((rt0.c2))>((rt0.c1))) WHEN TRIM(DISTINCT rt0.c2, rt0.c1) THEN (((-1.261198502E9)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c4))) WHEN rt0.c1 THEN LIKELIHOOD(DISTINCT rt0.c1, 0.5062401945462138) ELSE ((rt0.c4)||(rt0.c0)) END DESC; -- 0ms;
SELECT ((((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2))) BETWEEN (((((rt0.c2)OR(rt0.c4)))AND(rt0.c4))) AND (((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c3)))OR(rt0.c3)))AND(rt0.c3)))) FROM rt0 WHERE (CAST('94305035' AS BLOB) COLLATE NOCASE); -- 0ms;
SELECT ALL (- (rt0.c3)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((MIN(rt0.c2))+(((rt0.c4)GLOB(rt0.c0)))) FROM rt0 WHERE (((CAST(NULL AS BLOB))&((('i>3rS') NOT BETWEEN (0.6026500920233047) AND (0.6314344720968983))))); -- 0ms;
SELECT DISTINCT (~ (0.21737288337013316)) FROM rt0 ORDER BY NULL; -- 0ms;
SELECT DISTINCT CAST((~ (rt0.c1)) AS INTEGER), ((('-530295340', rt0.c2, rt0.c2)) BETWEEN ((rt0.c4 COLLATE NOCASE, (rt0.c1 IN ()), CAST(rt0.c4 AS BLOB))) AND ((((rt0.c0)GLOB(rt0.c2)), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)), ((x'0df4')<<(rt0.c4))))), (~ (((((rt0.c4)AND(rt0.c1)))AND(rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c3))=((rt0.c0))))!=(((((((((rt0.c3)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c4)))OR(NULL)))), ((rt0.c2) BETWEEN (rt0.c1) AND (NULL)) COLLATE BINARY, (((rt0.c4)) NOT BETWEEN ((rt0.c4 COLLATE NOCASE)) AND ((CAST(rt0.c3 AS REAL)))) FROM rt0; -- 0ms;
SELECT (CAST(rt0.c1 AS INTEGER) IN ()) FROM rt0 WHERE (((((x'') NOT BETWEEN (x'') AND ('1199919507')))/(('&sc{1J}U' IN ())))) ORDER BY ('-7161857775433190406-狻[' IN (rt0.c2 COLLATE NOCASE)); -- 0ms;
SELECT ALL GROUP_CONCAT((rt0.c1 IN ())) OVER ( ORDER BY (((((rt0.c3, rt0.c0, rt0.c0)) NOT BETWEEN ((NULL, rt0.c2, rt0.c0)) AND ((rt0.c0, x'', rt0.c0)))) NOTNULL) ASC, UNICODE(((rt0.c3)OR(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c3 COLLATE BINARY AS BLOB) FROM rt0 WHERE ((~ (CASE 0.7039538236954681  WHEN '0.2819099766822889' THEN x'' ELSE '0.971482321190396' END))); -- 0ms;
SELECT DISTINCT (+ ((rt0.c2 IN ()))), (- (NULL COLLATE BINARY)), SUM(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4))), ((rt0.c0) NOT NULL) COLLATE RTRIM, CASE ((rt0.c1) NOTNULL)  WHEN ((rt0.c4)<(rt0.c4)) THEN ((rt0.c3) ISNULL) WHEN ((rt0.c2) IS TRUE) THEN ((rt0.c4) NOT NULL) WHEN rt0.c1 COLLATE RTRIM THEN (~ (NULL)) END FROM rt0 WHERE (NULLIF(DISTINCT 0x2a8de11 COLLATE BINARY, ((('x/4VcTD4t', x'', NULL)) BETWEEN ((x'', '{U.e?BMQ', x'')) AND ((NULL, -2076039499, -1.879061796E9))))) LIMIT -1419775744 OFFSET 680904989; -- 1ms;
SELECT (((rt0.c4, '1528551322', rt0.c3)) NOT BETWEEN ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c3 END, COUNT(*), (('-1285374618')%(rt0.c1)))) AND ((((rt0.c3)||(rt0.c2)), rt0.c1, ((((rt0.c2)AND(rt0.c0)))OR(rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)), 0.37887965946445235) FROM rt0; -- 0ms;
SELECT DISTINCT LEAD(((rt0.c2) NOT BETWEEN ((- (rt0.c2))) AND (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))), rt0.c2, (((+ (rt0.c4)))*((((((((('-576786474')OR(rt0.c1)))OR(rt0.c3)))AND(rt0.c1)))OR(x''))))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)+(rt0.c1))) IS TRUE) FROM rt0 WHERE (((((CAST(x'' AS TEXT))AND(CAST(x'' AS BLOB))))AND((x'' IN ())))); -- 0ms;
SELECT DISTINCT MIN(rt0.c1 COLLATE NOCASE), ((rt0.c4) NOT NULL), ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c2 END) BETWEEN ((~ (0.6818436427589303))) AND ((((rt0.c1))=((rt0.c3))))) FROM rt0 WHERE ((- ((((('')OR(x'')))OR(NULL))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)!=(rt0.c4)))LIKE(CAST(rt0.c3 AS INTEGER))) FROM rt0; -- 0ms;
SELECT DISTINCT JULIANDAY(CAST(rt0.c0 AS BLOB), rt0.c0, ((rt0.c3)IS NOT(rt0.c0)), CHANGES(), ((((rt0.c3)AND(rt0.c1)))AND(0xffffffffc2055927))), GROUP_CONCAT(((rt0.c4)GLOB(rt0.c3))) COLLATE NOCASE, ((((rt0.c1)<=(rt0.c1)))LIKE(rt0.c2 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT 'o}ꑪ?24쫜V' FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)OR(rt0.c0)))AND('#e')))OR(SUM(rt0.c3))))AND(((((rt0.c1)OR(rt0.c4)))OR(rt0.c0)))) FROM rt0 WHERE ((((((((((('')AND(x'')))OR(0.6049636350617262)))OR('''')))AND('-1929991967')))/(((NULL)<<(-1.956235825E9))))); -- 0ms;
SELECT DISTINCT CAST(MAX(rt0.c1) AS TEXT) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c0) NOT BETWEEN (x'98e8') AND (rt0.c3)))==(rt0.c3)) FROM rt0 WHERE (CASE TRIM(DISTINCT NULL)  WHEN ((((((((NULL)AND(NULL)))AND(-3.81430051E8)))AND(x'')))AND('-1481152026')) THEN ((x'cb0f')<<(x'')) WHEN (0.8413359291891288 IN (0.9600657365283906)) THEN (((x'6106'))<((x''))) WHEN CASE WHEN NULL THEN '' WHEN x'420d92aa' THEN x'' WHEN '2i8+jU>>+' THEN '0.0029869354397011882' ELSE 0X527ebee6 END THEN (- ('-681452311')) ELSE (((NULL))==((x''))) END); -- 0ms;
SELECT DISTINCT (('105276051' COLLATE RTRIM)-(1.090461961E9)) FROM rt0; -- 0ms;
SELECT LAG(DATE(((rt0.c4)<<(rt0.c0)), ((rt0.c2)%(rt0.c3)), rt0.c2), CASE rt0.c0  WHEN ((rt0.c4)!=(rt0.c4)) THEN ((rt0.c1) IS FALSE) ELSE ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c1)))OR(rt0.c1)) END, (((rt0.c4)) BETWEEN ((CASE 0.17813471125778524  WHEN '' THEN rt0.c4 ELSE 0.6392993469789172 END)) AND ((CASE WHEN rt0.c4 THEN rt0.c3 END)))) OVER () FROM rt0; -- 0ms;
SELECT (((CASE NULL  WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END, ((((((((((((rt0.c0)AND(rt0.c2)))OR(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)), NULL))==((CAST(1925911712 AS REAL), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c4)), (rt0.c1 IN (rt0.c2))))) FROM rt0; -- 1ms;
SELECT CAST(NULL AS TEXT) FROM rt0 WHERE ((((NOT (x'fa4a'))) NOT BETWEEN (LIKELY(x'')) AND ((((('-1066854315')OR(x'6d5b')))AND(NULL))))) ORDER BY 555231123 ASC;SELECT DISTINCT (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c3))) COLLATE NOCASE FROM rt0 WHERE ((((+ ('}l'))) NOT NULL)) LIMIT -365912608 OFFSET 760044986; -- 0ms;
SELECT ALL GROUP_CONCAT(AVG(AVG(0.06869974991107819))) FROM rt0 WHERE (0.6481303825692842);SELECT ALL ((rt0.c0)<(rt0.c1)) COLLATE RTRIM, ((((rt0.c0) NOT NULL))>((+ (rt0.c4)))), ((((rt0.c3)!=(rt0.c1))) NOT BETWEEN (NULL) AND (CAST(rt0.c0 AS BLOB))) FROM rt0 LIMIT -987779933 OFFSET -754371573; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c4 END)<<(COUNT(*))) FROM rt0 WHERE (((((NULL) NOT BETWEEN ('0.028268445931562858') AND (''))) IS TRUE)) ORDER BY (- (((rt0.c1)<(0.25887155145387253)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(x'') FROM rt0; -- 0ms;
SELECT DISTINCT (ABS(DISTINCT rt0.c0) IN ()) FROM rt0 WHERE (IFNULL(DISTINCT ((NULL) BETWEEN ('') AND ('f')), (('0.5277842171321568') NOT BETWEEN (0X636a0f5c) AND ('')))) GROUP BY CAST(LTRIM(rt0.c2) AS INTEGER); -- 0ms;
SELECT DISTINCT (((((NULL)) BETWEEN ((rt0.c4)) AND ((x'a908'))))>>(json_valid(rt0.c3))), (((rt0.c3) NOT NULL) IN ()), (((((rt0.c2) IS TRUE)))>=((rt0.c1))), (NOT (rt0.c4)), ((((((((TOTAL(rt0.c4))AND(CASE WHEN rt0.c4 THEN rt0.c1 ELSE rt0.c1 END)))AND(((((x'')OR(x'')))OR(rt0.c4)))))OR('1570470487')))AND(NULL)) FROM rt0 WHERE (((CASE '-326190801'  WHEN -86949146 THEN '' END)<((+ (0.556211327750685))))); -- 0ms;
SELECT ALL CAST(((rt0.c3) NOTNULL) AS NUMERIC), (((((('-1098916437')>(rt0.c1)))AND((NOT (rt0.c1)))))OR(rt0.c2)), (((((+ (rt0.c3)))OR(((((rt0.c3)AND(x'ce7d')))OR(rt0.c3)))))OR(((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0 WHERE (GLOB((+ (NULL)), (0.5555685497653251 IN (0Xffffffff970d845b, 'PZ')))); -- 0ms;
SELECT DISTINCT (~ ((rt0.c2 IN (rt0.c3)))) FROM rt0 WHERE (CASE CAST(x'd651700f' AS INTEGER)  WHEN ((NULL) IS FALSE) THEN x'66b2' COLLATE RTRIM WHEN (NOT (x'')) THEN ((NULL) BETWEEN (-5.19645701E8) AND (-995932423)) WHEN CASE NULL  WHEN '-480669707' THEN NULL END THEN (((0.543684130106709))<=((NULL))) WHEN CASE ''  WHEN NULL THEN 0.6820499833172349 END THEN ('' IN ()) WHEN ((x'c827b1f9')-('X%-.e')) THEN ((((NULL)OR(NULL)))OR('W㨢')) ELSE x'' END); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ('ml', rt0.c0)))|(((x'6ab8')<>(rt0.c4)))) FROM rt0 WHERE ((((('Zo-퓾RP^') BETWEEN (x'') AND (0.7416274083490574)))<=(((-694304282) IS TRUE)))) ORDER BY ((((rt0.c4) NOTNULL))<<(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3)))); -- 0ms;
SELECT ALL rt0.c1, ((((rt0.c2)<=(rt0.c3))) NOTNULL), ((((rt0.c4)|(rt0.c2))) NOTNULL) FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c4)AND(x'')))AND(0.9608493410227271 COLLATE NOCASE)) FROM rt0 WHERE (((((((4.78296479E8)OR(x'2e7e6d5d')))AND(x''))) NOT BETWEEN ((((0.014115060496800669, x'', ',do>3'))>=((0.2767894327074256, NULL, '-1943516423')))) AND (CASE WHEN NULL THEN '228075011' WHEN '-1543179983' THEN NULL WHEN x'' THEN x'' END))); -- 0ms;
SELECT ALL (NOT (rt0.c3)) FROM rt0 WHERE ((((((0.49866460648860644 IN ()))OR('')))AND((('')IS(0.008025079878177466))))) GROUP BY CAST(SQLITE_COMPILEOPTION_GET(rt0.c2) AS BLOB); -- 0ms;
SELECT ALL 0.6067457604872374 COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL ((((((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)OR(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))AND(UPPER(rt0.c1))))AND('')))AND(NULL)) FROM rt0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((rt0.c0)<>(NULL))) FROM rt0; -- 0ms;
SELECT ALL CASE LIKELY(rt0.c1)  WHEN CAST(rt0.c1 AS INTEGER) THEN (rt0.c3 IN (rt0.c4)) END FROM rt0; -- 0ms;
