-- Time: 2024/06/07 06:35:11
-- Database: database28
-- Database version: 3.40.0
-- seed value: 4294869528
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 1ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 BLOB , c1 REAL , c2 BLOB DEFAULT x'' , c3 TEXT , c4 BLOB ); -- 0ms;
INSERT OR REPLACE INTO t0(c4) VALUES ('517078945'); -- 0ms;
UPDATE OR IGNORE t0 SET (c2, c3)=(x'8ebb', x''); -- 0ms;
PRAGMA temp.wal_autocheckpoint; -- 0ms;
ANALYZE; -- 1ms;
INSERT OR IGNORE INTO t0(c1, c4, c3) VALUES ('517078945', NULL, 5.17078945E8), (0X1ed1ffa1, 'd0', '517078945'), ('06&N', x'', 0.12908806615823187); -- 0ms;
INSERT OR ABORT INTO t0(c4, c0) VALUES (x'56fd', 0.12908806615823187); -- 1ms;
COMMIT; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 't0', ' noskipscan'); -- 0ms;
REINDEX; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR ROLLBACK INTO t0(c4, c3, c0, c1) VALUES ('', NULL, x'b64c', NULL); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c4) VALUES (NULL, NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 6533823471081600385; -- 0ms;
INSERT OR FAIL INTO t0(c4, c1, c3, c2) VALUES (x'', '5U', 0x5eda2642, 1.591354946E9); -- 0ms;
INSERT OR FAIL INTO t0(c4, c0, c3, c2, c1) VALUES (NULL, x'', '?!8N8', 0x5aaccdd44aedb581, ''); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t0(c0, c3, c1, c2, c4) VALUES (NULL, NULL, 1591354946, x'0ca0', ''); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c3) VALUES (NULL), ('6533823471081600385'), (0.4053106042512429); -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
INSERT OR IGNORE INTO t0(c4, c0, c1, c2) VALUES ('gﴦ&w?\)x''', NULL, 'b3\r#KO', NULL); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
CREATE TEMP TABLE t0 (c0 INTEGER , c1 INT , c2 REAL ); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 1ms;
VACUUM; -- 0ms;
INSERT OR IGNORE INTO t0(c2) VALUES (''); -- 1ms;
INSERT OR IGNORE INTO t0(c1) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c4, c1, c3, c0, c2) VALUES (NULL, x'', 0.41396701460643825, NULL, 0.4768305989286834); -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
INSERT OR FAIL INTO t0(c0) VALUES (x''), (0.12908806615823187), (438112375), (0x3e3160f5), (0.8298332956092058); -- 0ms;
UPDATE OR IGNORE t1 SET c2='1591354946', c0=NULL; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
UPDATE OR IGNORE t0 SET c1='-606763445' WHERE ((t0.c0) BETWEEN (COALESCE(DISTINCT t0.c2, t0.c1, t0.c1, t0.c0)) AND (((t0.c2) NOT NULL))); -- 0ms;
UPDATE OR FAIL t1 SET c0=x'' WHERE (((+ (t1.c2)))>>(((t1.c3) BETWEEN (t1.c3) AND (t1.c1)))); -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA wal_autocheckpoint; -- 0ms;
INSERT OR REPLACE INTO t0(c1, c2) VALUES ('', 0.6257871957720366), (0x7e016007, 0.3702020124184652), (x'', x''); -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
END; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (2.114019335E9, x'0e6e', '0.41396701460643825', 'Ae', NULL), (0xffffffffd2dedb87, NULL, '', x'', '%he8'), (517078945, 0.569118022936054, NULL, NULL, '1043423477'); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c2, c0, c1) VALUES ('0.41396701460643825', x'', x''); -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR ROLLBACK INTO t1(c3, c4, c2, c0) VALUES (0.12908806615823187, NULL, x'f32b', '6l'), (0.6642760092209723, 0.6045007670342842, 0xffffffffd1423d78, x''), ('517078945', 1043423477, '1027683270', '1064632734'); -- 0ms;
CREATE UNIQUE INDEX i5 ON t0(((CASE WHEN c0 THEN c1 ELSE c2 END)AND(((((c1)AND(c0)))OR(c0)))) DESC,x'' DESC,(((~ (c2))) BETWEEN (0X1a1d1077) AND ((- (c2))))); -- 1ms;
CREATE INDEX IF NOT EXISTS i24 ON t0(((c1 COLLATE NOCASE) NOT NULL),((((- (c1)), ((c0) IS TRUE), ((c0) NOT BETWEEN (c0) AND (c0))))<>((((c2) IS FALSE), ((((c2)AND(c0)))AND(c0)), ((((((((c0)AND(NULL)))OR(c2)))AND(c1)))AND(c1))))) COLLATE RTRIM,CAST(((c0) NOTNULL) AS NUMERIC)) WHERE ((((CAST(c2 AS REAL))OR(c2)))AND(((((((((c0)OR(c1)))OR(c1)))AND(c0)))OR('0.4768305989286834')))); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2, c1)=('', 0.2626808959423276) WHERE ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)&(rt0.c2)); -- 0ms;
PRAGMA main.secure_delete = true; -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1='' WHERE ((((((rt0.c2) IS FALSE))AND(rt0.c2 COLLATE BINARY)))AND(((rt0.c0) IS FALSE))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1(c3) VALUES (x''); -- 1ms;
CREATE INDEX IF NOT EXISTS i13 ON t1(CASE CAST(c1 AS BLOB)  WHEN ((c2) NOT BETWEEN (c1) AND (6533823471081600385)) THEN 0.8743786399160205 WHEN (c4 IN (c4)) THEN ((('[]')) BETWEEN ((c2)) AND ((c3))) WHEN CAST(c3 AS NUMERIC) THEN CASE c4  WHEN c0 THEN c2 WHEN c1 THEN c1 WHEN c1 THEN c4 END ELSE c0 END COLLATE BINARY ASC,CASE (+ (c0))  WHEN CASE WHEN c2 THEN c0 ELSE 0.10693444084124826 END THEN ((((((((c0)OR(c0)))AND(c3)))OR(c4)))AND(c3)) ELSE ((c4)>=(c3)) END COLLATE BINARY,CASE ((((c0)OR(c0)))AND(c1))  WHEN (c4 IN ()) THEN CAST(c3 AS BLOB) ELSE ((c4) NOT BETWEEN (c2) AND (c1)) END COLLATE RTRIM,((((c2) NOT BETWEEN (c1) AND (c1)))IS NOT(TYPEOF(c3))) COLLATE NOCASE DESC,(~ (c2)) DESC); -- 0ms;
INSERT OR IGNORE INTO t0(c1, c2) VALUES (NULL, '?{YGv)'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c1, c0) VALUES ('862715407', '?M'); -- 0ms;
INSERT OR ROLLBACK INTO t1(c1) VALUES (''); -- 1ms;
VACUUM; -- 1ms;
INSERT OR ABORT INTO t0(c2) VALUES (NULL); -- 0ms;
INSERT OR IGNORE INTO t1(c4, c1, c0, c2) VALUES (0.3191140339540246, '%he8', NULL, '0.569118022936054'), (x'', 0.5187624869360002, 'jV', '먨\7꼣Pv'), (0.535600527429759, 2070676972, '1651660886', '-784188040'); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
ANALYZE i13; -- 0ms;
ANALYZE; -- 1ms;
PRAGMA main.recursive_triggers = true; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.03122972411943503, x'', NULL); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((((t0.c0, t1.c3, t0.c2, t0.c2, t1.c2)) NOT BETWEEN ((0X1a1d1077, t1.c2, 0.49021153980733145, t1.c1, t1.c0)) AND ((0.3191140339540246, t1.c3, t1.c3, t1.c2, t0.c2))))-(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c0 END)) FROM t1 GROUP BY (+ (load_extension(t1.c2, 'rS'))), CASE WHEN CAST(t1.c2 AS NUMERIC) THEN ((t0.c1)IS NOT(0.9124772574368115)) ELSE ((t1.c0) ISNULL) END, ((t1.c3)GLOB(t1.c2)) COLLATE BINARY HAVING UNLIKELY((((t0.c2)) BETWEEN ((t0.c0)) AND ((t1.c4))));SELECT DISTINCT ((((((t1.c2)AND(t1.c0)))OR(t1.c4)))+(CAST(t1.c3 AS NUMERIC))) FROM t0 LIMIT -606763445 OFFSET 1148344060;SELECT (~ ((- (t0.c0)))) FROM t0 WHERE ((((NULL) NOT NULL) IN ())); -- 0ms;
SELECT ALL (~ (((t0.c0)==(t1.c2)))) FROM t0 WHERE ((((('?UAGeuub') NOT BETWEEN (x'') AND (NULL)))GLOB(CASE WHEN 0.569118022936054 THEN 0.9160823790878839 WHEN 0.6257871957720366 THEN NULL WHEN NULL THEN NULL END))) ORDER BY CAST(CASE WHEN t1.c3 THEN t1.c0 WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN t0.c1 ELSE t1.c4 END AS BLOB) ASC  NULLS FIRST;SELECT t1.c4 FROM t0 WHERE (CASE (~ (NULL))  WHEN (('먨\7꼣Pv')IS NOT(x'')) THEN (NOT (NULL)) ELSE ((x'b1d0') BETWEEN (NULL) AND ('LT')) END);SELECT DISTINCT ((t0.c1 COLLATE NOCASE)AND('?m')) FROM t0 WHERE ((('' COLLATE RTRIM)<=((('')%(x''))))); -- 0ms;
SELECT DISTINCT (((((t1.c3)) BETWEEN ((t1.c4)) AND ((t1.c1))))!=('275341434')) FROM t0, t1; -- 0ms;
SELECT ALL (((t0.c2, t0.c2, t0.c0)) BETWEEN (((t1.c3 IN ()), ((t1.c1) NOTNULL), NULL)) AND ((t1.c4, (t0.c0 IN ()), t1.c4))) FROM t0 GROUP BY x'b0ef' HAVING (('''㰯') ISNULL);SELECT ALL (~ (((t1.c0) BETWEEN (t1.c0) AND (t1.c0)))) FROM t1, t0 WHERE (((CAST('806924067' AS NUMERIC))/(((8.62715407E8)%(x''))))); -- 1ms;
SELECT DISTINCT (((((t1.c0, t0.c2, 'kcX{w'))==((t0.c0, t1.c4, t1.c0))))IS NOT((t1.c4 IN ()))) FROM t1, t0; -- 0ms;
SELECT ALL '0.6045007670342842' FROM t1 GROUP BY CASE WHEN ((t0.c1)AND(t1.c2)) THEN (~ (t1.c0)) ELSE ((((t1.c4)AND(t1.c2)))OR(t0.c0)) END HAVING (((t1.c1) NOT NULL) IN ((t1.c0 IN ())));SELECT DISTINCT CAST(t0.c1 COLLATE NOCASE AS NUMERIC) FROM t1, t0 WHERE ((((((((((x'')AND(0xffffffffbc7c0c50)))AND(x'')))AND('虋vhy')))OR(x'')) IN ())); -- 0ms;
SELECT ALL CASE ((t1.c4)LIKE(t0.c0))  WHEN t1.c1 THEN 0.32765826891232075 COLLATE NOCASE ELSE (t0.c0 IN (t0.c2)) END FROM t0, t1; -- 0ms;
SELECT LOWER(((x'') BETWEEN (t0.c1) AND (t1.c1))) FROM t0, t1; -- 0ms;
SELECT DISTINCT CAST(((t1.c0)<=(t1.c3)) AS REAL) FROM t1, t0 WHERE ((((((''))<=(('-757146745')))) BETWEEN ((('') ISNULL)) AND (CAST('-35516088' AS INTEGER)))); -- 0ms;
SELECT (((((+ (t1.c3)))AND(CASE NULL  WHEN t0.c0 THEN t0.c2 WHEN t1.c3 THEN t0.c1 WHEN t1.c3 THEN t1.c2 ELSE t0.c1 END)))OR(((((t1.c1)AND(t0.c2)))OR(t1.c3)))) FROM t0 WHERE (((((x'') NOT NULL))>(((NULL) NOT BETWEEN (0.6642760092209723) AND (x'')))));SELECT (((t0.c1)-(t1.c0)) IN ()) FROM t0 WHERE ((('20539267' IN ()) IN ())); -- 0ms;
SELECT DISTINCT CAST(CAST(t1.c0 AS TEXT) AS BLOB), (((((t1.c0)||(t1.c0))))>=((CAST(t1.c4 AS NUMERIC)))), (((CASE WHEN t1.c3 THEN t1.c2 WHEN t1.c4 THEN t0.c1 WHEN 0.5767254123100813 THEN t0.c1 WHEN t0.c2 THEN NULL WHEN t1.c4 THEN t1.c1 ELSE t1.c2 END))>(((~ (t0.c1))))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS REAL)) NOT BETWEEN ((NULL IN ())) AND (((t1.c2)LIKE(t1.c0)))) FROM t1 WHERE (((0X336bfe0f IN ()) IN ()));SELECT ((CASE t0.c1  WHEN t0.c1 THEN t1.c1 ELSE t1.c3 END) BETWEEN (SUM(t0.c1)) AND (((t1.c4) NOT BETWEEN (t1.c2) AND (t1.c4)))) FROM t1;SELECT DISTINCT CASE WHEN COUNT(*) THEN ((t1.c1)*(t0.c1)) END, ((((t0.c2) BETWEEN (0.4733447324792447) AND (t1.c1))) IS FALSE), ((((t0.c2)<>(t0.c1))) NOT NULL) FROM t0 ORDER BY CAST((NOT (t1.c2)) AS INTEGER) ASC  NULLS LAST;SELECT ALL CAST(CASE t1.c1  WHEN t0.c0 THEN t1.c4 ELSE t0.c0 END AS NUMERIC) FROM t1 WHERE ((((x'')) NOT BETWEEN ((ROUND(0.462478004529871, x''))) AND (((('0.8743786399160205')IS('rS'))))));SELECT DISTINCT CASE WHEN ((t0.c0)OR('!}?#Q')) THEN ((t0.c2)|(t1.c1)) ELSE CASE WHEN t1.c2 THEN t1.c4 END END FROM t0;SELECT ALL TRIM(((NULL) NOT BETWEEN (NULL) AND (t0.c0))), (CASE t0.c0  WHEN t1.c2 THEN t1.c0 ELSE t1.c2 END IN ()), (+ (((t1.c0)+(NULL)))), ((((t1.c3)<<(t1.c3))) NOT BETWEEN (LIKELIHOOD(t0.c1, 0.9591909921622331)) AND (t0.c0 COLLATE RTRIM)), '1982135001' COLLATE NOCASE FROM t0 WHERE (((('!}?#q' IN ())) BETWEEN (0.8298332956092058) AND (x'' COLLATE NOCASE)));SELECT DISTINCT (+ ((~ (t1.c2)))) FROM t0;SELECT DISTINCT (((((0.32765826891232075, t1.c1, t1.c3)) BETWEEN ((t1.c0, t0.c0, x'')) AND ((t0.c2, t1.c0, t1.c2)))) BETWEEN (((((((((0.04537936806075127)OR(t1.c4)))OR(t1.c2)))AND(NULL)))OR(t1.c1))) AND (((t1.c2) ISNULL))) FROM t1, t0 LIMIT 1116879420 OFFSET -142815457; -- 0ms;
SELECT DISTINCT t0.c1 FROM t1;SELECT (((((t0.c1)/(t1.c0)), '%igc', (((t1.c4)) NOT BETWEEN ((t1.c3)) AND ((t0.c0)))))>=(((0.535600527429759 IN ()), ((t1.c4) IS FALSE), ((t0.c2) NOT NULL)))) FROM t1, t0 WHERE (CAST(CASE WHEN 2.0539267E7 THEN NULL WHEN '-1456381237' THEN 1.982135001E9 WHEN 0xffffffff9ef98da1 THEN x'' END AS INTEGER)) ORDER BY (t1.c2 COLLATE NOCASE IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT ((CAST(t1.c0 AS BLOB))>(COUNT(*))) FROM t0, t1; -- 0ms;
SELECT ALL (NOT (((t0.c1)>(t1.c3)))) FROM t0;SELECT DISTINCT ((GROUP_CONCAT(t1.c3))/(((t1.c1)-(t0.c2)))) FROM t1;SELECT DISTINCT LAST_VALUE(((((t0.c1)>(t1.c0)))>(((((t0.c0)OR(t1.c4)))AND(t1.c2))))) OVER () FROM t0, t1 WHERE (CASE (((0.8417017523622389))<=(('6IA')))  WHEN ((x'') IS FALSE) THEN (('') NOT BETWEEN (0X1ed1ffa1) AND ('68410155')) WHEN ((NULL) NOT BETWEEN (x'be93') AND (x'a588')) THEN ((0.40560452472928) BETWEEN (NULL) AND ('')) WHEN ((((((((0.9948952062454974)AND(0x1c075ab3)))AND(x'')))OR(0x7e016007)))AND(NULL)) THEN '2000397686' ELSE '-757146745' END); -- 0ms;
SELECT ((((((((((((CASE WHEN t1.c3 THEN t0.c1 WHEN t1.c1 THEN t1.c2 WHEN x'' THEN t1.c4 END)AND(CAST(' M' AS TEXT))))AND(CAST(t1.c4 AS TEXT))))OR(((t1.c0)IS NOT(NULL)))))AND(TOTAL(t0.c1))))OR(json(t0.c0))))AND(t1.c1)), (NOT (CASE WHEN t1.c1 THEN t1.c0 END)), t1.c1 FROM t1 WHERE (((((0.012422752425941597)<>(x'')))>(((NULL) NOT BETWEEN (NULL) AND (0.41396701460643825))))) ORDER BY (- (HEX(DISTINCT t0.c1))) DESC  NULLS LAST LIMIT -606763445;SELECT DISTINCT GROUP_CONCAT(t1.c1) OVER () FROM t1, t0; -- 0ms;
SELECT CASE WHEN t0.c1 COLLATE RTRIM THEN ((t1.c1)LIKE(t1.c2)) ELSE ((t1.c3)-(t1.c2)) END FROM t1, t0 WHERE ('虋vhy'); -- 0ms;
SELECT DISTINCT ((COUNT(*))>(((t0.c2) NOT BETWEEN (t1.c3) AND (t0.c0)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((t0.c1) IS TRUE)) NOTNULL) FROM t1, t0 WHERE ((((0.9053461448911245 IN ()))==(LIKELY(NULL)))); -- 0ms;
SELECT DISTINCT ((((((((json_array_length(t1.c1))OR(((t1.c2) IS TRUE))))OR(((t1.c4)*(t0.c0)))))OR(((t1.c0)<<(t0.c1)))))OR(((t1.c0) BETWEEN ('1651660886') AND (t0.c1)))), '0.4053106042512429', '244265257' FROM t0 WHERE ((NOT (TYPEOF(x''))));SELECT ALL ((CAST(t1.c0 AS BLOB))>=(((t0.c2) NOTNULL))) FROM t1;SELECT x'', t1.c4, ((((t1.c0)!=(-344315161)))<<((t1.c2 IN (t1.c0)))) FROM t0 WHERE (((CAST('e(e|k' AS NUMERIC)) NOT BETWEEN ((- ('페Eexꕶ️*'))) AND ((('0.3702020124184652') BETWEEN (NULL) AND (0xffffffffa4be631a)))));SELECT ALL ((((t1.c0)OR(t1.c2)))OR(t0.c2)) COLLATE NOCASE, ((SUM(t0.c1)) NOTNULL), LIKELY((t0.c1 IN ())) FROM t0;SELECT ALL LEAD(t1.c3, ((CAST(t1.c2 AS INTEGER)) BETWEEN (((t1.c1) NOT BETWEEN (t1.c4) AND (t1.c2))) AND (((t1.c1)|(t1.c2)))), (((((((t1.c0, t1.c2, -434438629))>=((t1.c2, t1.c2, 0.8191195890134898))))AND(CAST(t1.c0 AS TEXT))))AND('vZV'))) OVER ( GROUPS BETWEEN ((LIKELY(t0.c2))IS NOT((NOT (t1.c4)))) FOLLOWING AND CAST(((t1.c1) NOT BETWEEN (t1.c2) AND (t0.c2)) AS REAL) FOLLOWING), ((((t1.c3)<=(x'')))>>(t1.c2 COLLATE RTRIM)), GROUP_CONCAT(t0.c2) FROM t1 GROUP BY (+ ((((t0.c1, t0.c0, t1.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c0)) AND ((t1.c0, t1.c4, t1.c3))))), t1.c0, ((COALESCE(t0.c1, t1.c4)) NOT BETWEEN (CAST('-1627812447' AS BLOB)) AND (((t0.c2)*(t0.c1)))), (((t0.c1 IN ())) NOTNULL), LIKELY(CAST(t0.c0 AS INTEGER));SELECT DISTINCT ((t0.c1 COLLATE NOCASE) IS TRUE) FROM t0, t1; -- 0ms;
SELECT (((0Xffffffff9bc16b31))>=((t1.c1 COLLATE NOCASE))), (((t0.c2) BETWEEN (t1.c3) AND (NULL)) IN ()), (((+ (t1.c1)))>=(((((((((t1.c2)OR(t1.c3)))AND(t1.c0)))AND(NULL)))AND(t1.c3)))) FROM t1 WHERE ((((((-9.16718298E8 IN ()))AND(NULL)))AND(CASE WHEN 1591354946 THEN '863114658' END))); -- 0ms;
SELECT DISTINCT ((0Xffffffff8c3f61ae) NOT NULL) FROM t1, t0 WHERE (STRFTIME('988859221' COLLATE BINARY, ((x'') NOTNULL), ((0.021170543381616835)OR(NULL)))); -- 0ms;
SELECT DISTINCT (('' COLLATE RTRIM) IS FALSE) FROM t1 WHERE ((- (x''))); -- 0ms;
SELECT DISTINCT (((('0.3702020124184652')AND(((t1.c4) NOT BETWEEN (t1.c4) AND (t1.c2)))))OR(AVG(t1.c0))) FROM t1, t0; -- 0ms;
SELECT DISTINCT AVG((t1.c4 IN ('1064632734'))) FROM t1 WHERE (CASE WHEN (('pdy]')%('706319459')) THEN (('-30345037')GLOB('0.9948952062454974')) WHEN (((NULL)) NOT BETWEEN ((x'')) AND ((''))) THEN (NULL IN ()) WHEN (((('-54095445')AND('y''Z0nykhn')))AND('1027683270')) THEN ('e(e|k' IN ()) END) GROUP BY (((t0.c1)) NOT BETWEEN ((t1.c1 COLLATE BINARY)) AND ((t1.c1 COLLATE NOCASE))) HAVING ((((t1.c1)<(t1.c3)))>>(TRIM(t1.c0)));SELECT DISTINCT DENSE_RANK() OVER (), LIKELY(((t1.c3) NOT NULL)), ((((((((t0.c2)OR(t0.c0)))AND(t1.c3)))OR((t1.c2 IN (t0.c2)))))AND(CASE t1.c3  WHEN NULL THEN t0.c0 WHEN t0.c1 THEN t1.c0 WHEN t1.c0 THEN t0.c0 ELSE '-344315161' END)) FROM t0, t1 ORDER BY (~ (1.399733295E9)), NULL ASC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t0.c1)OR(t1.c4)))OR(t0.c1))) FROM t1, t0 WHERE ((NOT (CAST(0.7361171452015138 AS INTEGER)))); -- 0ms;
SELECT (SQLITE_COMPILEOPTION_USED(t1.c3) IN ()) FROM t1, t0 WHERE ((((NOT ('1982135001'))) IS TRUE)); -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN ((t1.c0) IS FALSE) THEN 0Xffffffffd1423d78 ELSE t0.c0 COLLATE RTRIM END, ((((t0.c0)>=('1e500')))<<('e(e|k')), 0.5767254123100813, (+ (((t0.c0) NOT NULL))), (~ (((t1.c1) BETWEEN (t1.c3) AND (t1.c2)))) FROM t0, t1; -- 0ms;
SELECT ((x'd393')+(((t0.c2)>(t1.c4)))), PERCENT_RANK() OVER (), ((t1.c2 IN (t1.c3, t1.c4)) IN ()) FROM t0, t1 WHERE (CASE WHEN CASE WHEN NULL THEN x'42de' ELSE NULL END THEN NULL COLLATE RTRIM END) ORDER BY ((t1.c4 COLLATE NOCASE) BETWEEN ((((t1.c2))!=((t1.c0)))) AND (((((((((t0.c0)AND(t1.c1)))AND(t0.c2)))OR(t1.c2)))OR(t0.c0))))  NULLS LAST; -- 0ms;
SELECT ALL SUM('1417801163') OVER (), CASE CASE WHEN NULL THEN t1.c0 ELSE t1.c1 END  WHEN (~ (t0.c1)) THEN t1.c0 WHEN (t1.c1 IN ()) THEN ((t1.c4) IS TRUE) WHEN t1.c0 THEN t1.c3 COLLATE BINARY END, GROUP_CONCAT(CAST(t1.c4 AS INTEGER)) OVER ( RANGE (((~ (t0.c1)))&((t1.c0 IN ('0.021170543381616835', t0.c2)))) PRECEDING EXCLUDE GROUP) FROM t0;SELECT ALL LTRIM(0Xffffffffe006839d) FROM t0 WHERE (CAST(SQLITE_COMPILEOPTION_GET(NULL) AS NUMERIC)); -- 0ms;
SELECT (+ (((t0.c1)=(t1.c0)))), ((t1.c4) NOT BETWEEN (t0.c2) AND (t1.c2)) COLLATE BINARY, ((GROUP_CONCAT(t1.c4)) NOTNULL) FROM t0, t1 WHERE (((((((((((NULL)AND('Fo22a')))OR('1148344060')))OR('-793188517')))AND(x''))) IS TRUE)); -- 0ms;
SELECT ALL HEX(DISTINCT ((t0.c2) IS TRUE)) FROM t0, t1 WHERE (CAST(((0x3f75019e) BETWEEN (x'') AND (0x1396783)) AS BLOB)) ORDER BY (- ((('863114658')GLOB(t1.c4))))  NULLS LAST, (((~ (t0.c1))) NOT BETWEEN ((t1.c4 IN (t1.c0, t1.c4))) AND ((t1.c0 IN ()))) ASC; -- 0ms;
SELECT ALL (t0.c0 IN ((- (t1.c3)))) FROM t1, t0 WHERE ((((1.591354946E9)) BETWEEN ((((0.22176440523382768)<<(1.14834406E9)))) AND ((CASE '-606763445'  WHEN 0.5596786493750576 THEN '잿X' END)))); -- 0ms;
SELECT ALL ((((t1.c4)AND(t1.c3))) NOTNULL) FROM t0;SELECT ALL (((('Yr)') ISNULL))>=(((t0.c0)-('I')))), 0.6642760092209723, COUNT(CAST(t1.c2 AS TEXT)) FROM t1, t0; -- 0ms;
SELECT (((t1.c1, t1.c2, t1.c3)) BETWEEN (((t0.c1 IN ()), ((NULL)<=(t1.c4)), x'')) AND ((t0.c2 COLLATE BINARY, ((t1.c0)!=(t1.c1)), ((t0.c0)%(t1.c3))))) FROM t0 WHERE (CAST(TYPEOF(1416328070) AS INTEGER)) ORDER BY ((0X33bbd10e) NOT NULL)  NULLS LAST;SELECT ALL (- (UNLIKELY(DISTINCT t1.c4))) FROM t0;SELECT ALL HEX(DISTINCT (((t1.c1)) NOT BETWEEN ((t1.c3)) AND ((t1.c1)))) FROM t1 WHERE (CAST(((0x3357b3cd)|(0.7551931147159744)) AS BLOB)); -- 0ms;
SELECT ALL (((((t0.c1 IN ()))AND(t0.c2 COLLATE NOCASE)))OR(((t0.c0)IS(t1.c0)))) FROM t1, t0; -- 0ms;
SELECT ALL ((((NULL))<=((t0.c1))) IN (((t1.c1)>>(t1.c0)))) FROM t0, t1 GROUP BY t1.c0, (((t1.c0)) BETWEEN (('0b')) AND ((t0.c0))) COLLATE NOCASE, (+ (((t0.c1) NOTNULL))), '' COLLATE RTRIM, ((x'') BETWEEN (((t0.c2)>=(t1.c2))) AND ((t0.c0 IN ()))) HAVING ((CAST(t0.c0 AS BLOB)) NOT NULL); -- 1ms;
SELECT DISTINCT ((t1.c1 COLLATE RTRIM) IS FALSE) FROM t1, t0; -- 0ms;
SELECT DISTINCT (((t1.c2)) BETWEEN ((((((((((t1.c2)AND(t1.c4)))OR(t1.c0)))OR(t0.c1)))AND(x'')))) AND ((''))), MIN(CASE WHEN 'e' THEN 1001009961 ELSE t1.c2 END), CAST(((t1.c4)+(t0.c1)) AS BLOB) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((NULL)/(t1.c0 COLLATE NOCASE)) FROM t1, t0; -- 0ms;
SELECT ALL (~ ((((t0.c2, t1.c2, t0.c1)) BETWEEN ((t1.c2, NULL, t1.c4)) AND ((t1.c3, t1.c0, t1.c4))))) FROM t1;SELECT DISTINCT ((((((((((t1.c4) NOT BETWEEN (t0.c1) AND (t1.c1)))OR(((t0.c1)%(t1.c0)))))AND(0.7551931147159744 COLLATE RTRIM)))OR(((t1.c4)<=(t0.c0)))))AND(((((t1.c1)OR(t0.c1)))OR(t0.c1)))) FROM t1;SELECT ((((((t1.c2, t0.c0, t0.c2))<=((t1.c2, t1.c0, t1.c2)))))>=(((('') IS TRUE)))) FROM t0;SELECT DISTINCT ((t0.c2) NOT NULL) COLLATE RTRIM FROM t0, t1 WHERE ('-1456381237'); -- 0ms;
SELECT ((((-3.5516088E7) NOTNULL)) BETWEEN (((t1.c0)<=(t1.c0))) AND (COUNT(''))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((t0.c2) NOT BETWEEN (t1.c2) AND (t0.c1)) COLLATE BINARY FROM t0, t1; -- 0ms;
SELECT DISTINCT (((- (t1.c2))) IS FALSE) FROM t0 WHERE (CAST(x'' AS TEXT));SELECT (~ ((t1.c2 IN ()))), LEAD(((- (t1.c2)) IN ()), (t1.c4 IN ()) COLLATE RTRIM, (((1352301709) ISNULL) IN (((((t1.c3)OR(t1.c2)))OR('-1788844385')), ((t1.c3)%(t1.c1))))) OVER (), t1.c1 FROM t1 WHERE ((((('')AND(0Xfffffffff0e474d9)))AND('YV')) COLLATE NOCASE) UNION SELECT DISTINCT ((CASE t1.c1  WHEN t1.c3 THEN t0.c0 WHEN t0.c1 THEN '-544023930' WHEN 0x2e674009 THEN x'' ELSE t1.c3 END)=(SQLITE_COMPILEOPTION_GET(t1.c1))), GROUP_CONCAT(-7.57146745E8) OVER ( GROUPS NULL PRECEDING), ((t1.c1)=((((t0.c0))<((t0.c2))))) FROM t1;SELECT ALL ((((t1.c3)<=(t1.c4))) NOT BETWEEN ((t1.c2 IN ())) AND (ABS(t1.c0))), ((((~ (t0.c2))))<>((IFNULL(DISTINCT t1.c0, t1.c3)))), (((CASE WHEN t0.c1 THEN t1.c0 WHEN '2醫H.]' THEN t1.c3 WHEN -1517713197 THEN t0.c1 ELSE t0.c2 END))==(((t1.c3 IN ())))) FROM t1, t0 WHERE ((((('984321381')IS(0.6045007670342842))) NOT NULL)) ORDER BY 0.9310196321410001 ASC; -- 0ms;
SELECT DISTINCT ((('-1531026662', t0.c2, t1.c0)) NOT BETWEEN ((CASE WHEN t0.c2 THEN t1.c3 WHEN t0.c0 THEN t0.c1 WHEN t1.c3 THEN t0.c1 END, COUNT(*), SUM(t1.c4))) AND ((((((t1.c3)AND(t0.c0)))AND(t1.c0)), t0.c1, CASE t1.c1  WHEN t1.c3 THEN t0.c1 ELSE t1.c0 END))) FROM t1;SELECT DISTINCT RTRIM(((0.6935255249359004) BETWEEN (t0.c2) AND (t1.c4))) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((t1.c0)OR(t0.c0)))AND(t1.c1))) BETWEEN (CAST(t1.c0 AS NUMERIC)) AND ((- (t1.c4)))), INSTR((t1.c4 IN (t1.c1, t0.c2)), ((t1.c1)<(t0.c1))), ROW_NUMBER() OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((t1.c0) NOT BETWEEN (t1.c2) AND ('')))LIKE(((t1.c2) NOT BETWEEN (t1.c3) AND (t1.c4)))) FROM t0, t1 WHERE (CAST((('FALSE')<>(-4.34438629E8)) AS REAL)); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(t1.c0 AS NUMERIC) THEN (+ (t1.c3)) END FROM t0, t1 WHERE (((((x'') NOT NULL))>(CAST(1 AS BLOB)))) ORDER BY (+ (((t1.c3) NOT BETWEEN (t1.c2) AND (t1.c3))))  NULLS FIRST LIMIT 1684518748 OFFSET 862268259; -- 3ms;
SELECT ALL MAX((((t1.c4)) BETWEEN ((t1.c2)) AND ((t0.c1))), ((t1.c3)OR(t1.c4))) FROM t0 WHERE ((UPPER(x'9178') IN ()));SELECT DISTINCT CAST(1.684518748E9 AS INTEGER) FROM t1 ORDER BY (((NULL))>((CAST(t0.c1 AS TEXT)))) DESC;SELECT DISTINCT ((CAST(t0.c1 AS TEXT))IS NOT(((t1.c1) IS TRUE))), MAX(((t1.c3)<<(t0.c0))), ((AVG('ae'))<(t0.c1 COLLATE RTRIM)), (((NOT (t1.c0)))LIKE(MIN(t0.c0))), ((((t0.c1)OR(t0.c0)))LIKE(((t1.c4) BETWEEN (t1.c0) AND (t0.c2)))) FROM t0, t1 WHERE ((~ (((('-0.0'))<=(('')))))); -- 0ms;
SELECT t1.c4 COLLATE NOCASE FROM t0 ORDER BY ((((UNLIKELY(DISTINCT t1.c2))OR(((t1.c0)<<(t1.c2)))))AND(CASE x''  WHEN t1.c4 THEN t1.c0 END)) ASC  NULLS LAST;SELECT ((((t1.c0) NOT BETWEEN (t1.c3) AND (t1.c4)))&(CASE WHEN t1.c4 THEN t1.c3 WHEN t0.c0 THEN t1.c3 WHEN x'' THEN 0.2617036825658895 END)) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((AVG(t1.c2))<=(CASE t1.c3  WHEN t1.c0 THEN t1.c2 END)), ((((((t1.c1) BETWEEN ('-142815457') AND (t1.c0)))OR(CAST(t0.c2 AS BLOB))))AND(LAST_INSERT_ROWID())), ((((t1.c3) BETWEEN (t0.c0) AND (t1.c1))) BETWEEN (t1.c4 COLLATE NOCASE) AND (((NULL)>>(t1.c2)))) FROM t1;SELECT DISTINCT ((((t1.c1) IS TRUE)) NOT BETWEEN (t1.c2 COLLATE RTRIM) AND (t1.c2)) FROM t0, t1; -- 1ms;
SELECT CAST(((t1.c3) NOT NULL) AS INTEGER) FROM t0, t1; -- 0ms;
SELECT DISTINCT CASE TOTAL(t1.c2)  WHEN CASE WHEN t1.c3 THEN t1.c1 ELSE t1.c1 END THEN MAX(t1.c2) WHEN CASE WHEN t1.c0 THEN t1.c4 WHEN t1.c0 THEN t0.c0 WHEN t1.c2 THEN t1.c4 ELSE t1.c4 END THEN (- ('X-')) WHEN (t0.c2 IN ()) THEN CASE WHEN t1.c0 THEN t0.c1 ELSE t1.c3 END ELSE ((t0.c0) NOT BETWEEN (t1.c1) AND (t0.c2)) END FROM t0;SELECT DISTINCT ((t1.c3)<=(t0.c0)) COLLATE BINARY FROM t0;SELECT (+ (AVG(t1.c2))) FROM t0, t1 WHERE (json_extract(CASE WHEN '-1309028895' THEN 0.20540628244186154 END, LOWER('-434438629')));SELECT DISTINCT ((((((t1.c4)) NOT BETWEEN ((0.7361171452015138)) AND ((0.44684634951487334)))))<=((HEX(t0.c1)))) FROM t0, t1; -- 1ms;
SELECT DISTINCT ((t1.c4 COLLATE RTRIM)&(CAST(t0.c0 AS NUMERIC))) FROM t1, t0 WHERE (NULLIF(((NULL) NOTNULL), ('!&' IN (x'')))); -- 0ms;
SELECT ALL (NOT (((((7.06319459E8)AND(t0.c2)))OR(t1.c3)))), SUM(t1.c2) COLLATE BINARY, x'' FROM t1 WHERE (((((((0.9866126916160038)<=('-397722603')))OR(((NULL) NOT BETWEEN (NULL) AND (NULL)))))OR(((NULL)IS(NULL))))) GROUP BY ((((t0.c0) ISNULL)) NOT BETWEEN (((t0.c0)%(t1.c1))) AND (CASE t1.c4  WHEN x'' THEN t1.c4 WHEN t1.c2 THEN t1.c2 WHEN t1.c3 THEN t1.c2 END)) HAVING ((((t0.c1)+(t1.c1)))/(-708975778));SELECT DISTINCT IFNULL('0.9053461448911245', t1.c1) COLLATE RTRIM, (t1.c2 COLLATE BINARY IN ()), CAST(((t1.c4)>>(t1.c0)) AS TEXT) FROM t0, t1 WHERE (((('SH')) NOT BETWEEN ((((0.3938214063430747) NOT BETWEEN ('kcX{w') AND (x'')))) AND (((('페EEXꕶ️*')GLOB('-1788844385')))))); -- 1ms;
SELECT (((t1.c0))=((load_extension(t0.c1)))), SUM(((0.9029299685936222) IS TRUE)) OVER (), ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t1.c4))) IN (((t1.c0)>(t0.c1)))), (((((t1.c3)/(t1.c0))))=(((t1.c1 IN ())))), (NOT ((((t1.c1)) BETWEEN ((t0.c2)) AND ((t1.c3))))) FROM t1 WHERE (CASE WHEN '' COLLATE RTRIM THEN ((((((((0X5ba3ba28)OR(x'c59a')))AND(x'7a43')))AND(1417801163)))OR(x'8f7f')) WHEN NULL COLLATE NOCASE THEN ((x'f1d4')!=(0.030939938490386454)) WHEN ((0x1a1d1077) BETWEEN (x'bd72') AND ('2032606186')) THEN ((NULL)<=(NULL)) END);SELECT ALL (((((t1.c2, t0.c1, t1.c2))>((t1.c4, t1.c3, t1.c4))))-((((t0.c0))>=((t1.c3))))) FROM t0;SELECT DISTINCT ((((((t1.c2)IS NOT(t0.c2)))AND(x'80c9' COLLATE BINARY)))OR(COALESCE(t0.c0, t1.c1))) FROM t0, t1 WHERE (((((x''))=(('1116879420'))) IN ())); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t1.c3))=((t0.c0)))) FROM t0 WHERE (((NULL COLLATE RTRIM)<(((-2023895418)<(NULL))))) GROUP BY ((((t1.c2) NOT BETWEEN (t0.c1) AND (t1.c2))) NOT BETWEEN (t1.c1 COLLATE RTRIM) AND (((t0.c0)AND(t1.c1))));SELECT ((((((t1.c1)||(t0.c2)))AND(NULL)))OR(((t1.c2)<<(t1.c2)))) FROM t1 WHERE ((((NULL)<>(NULL)) IN ()));SELECT ALL '', ((TOTAL(t1.c4))LIKE(((t1.c4)IS(t1.c2)))), COUNT((('_a9zQ6') NOT BETWEEN (t1.c0) AND ('O2'))) OVER ( GROUPS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM t0, t1 WHERE (((((0.9932291699330624)!=(8.62715407E8))) NOT NULL)) LIMIT -514897409 OFFSET -1616997405; -- 0ms;
SELECT t1.c4 FROM t0;SELECT t1.c3 FROM t0;SELECT ALL (NOT (('-1517713197' IN ()))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (NULL IN ((t1.c3 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0; -- 1ms;
SELECT DISTINCT (- ('잿x')) FROM t0; -- 0ms;
SELECT DISTINCT ((((t1.c0)AND(0X536e3c2f))) NOT BETWEEN (((((t1.c0)AND(t0.c0)))AND(t1.c2))) AND (t1.c2)) FROM t1;SELECT DISTINCT (((t0.c0, t0.c1, t1.c0)) NOT BETWEEN ((((t1.c0) BETWEEN (t1.c3) AND (t0.c1)), ((t0.c2) NOT BETWEEN (0.6704231166692602) AND (t1.c0)), ((t1.c1) NOT BETWEEN (t1.c3) AND (t1.c0)))) AND ((t1.c2, t0.c0 COLLATE RTRIM, (t1.c0 IN ())))) FROM t0, t1 WHERE (CASE WHEN ((NULL)/(x'')) THEN 0.983553952556096 ELSE CAST(x'' AS BLOB) END); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( PARTITION BY (TOTAL_CHANGES() IN (((t0.c2)==(t0.c1)))), t1.c4) FROM t1, t0; -- 0ms;
SELECT ALL COUNT(*) FROM t1, t0; -- 1ms;
SELECT ALL (~ (CASE WHEN NULL THEN t1.c2 ELSE t1.c0 END)), COUNT(*) OVER (), ((((HEX(t1.c1))OR(CAST(t1.c2 AS BLOB))))AND(CASE WHEN t1.c0 THEN t1.c2 END)) FROM t0;SELECT DISTINCT CAST(((t1.c1) NOT BETWEEN (t0.c0) AND (t0.c2)) AS REAL) FROM t1 WHERE (((((x'')>=(0Xffffffff963d5089)))<<((NULL IN ())))) LIMIT 1376040668;SELECT TRIM(LOWER(DISTINCT t1.c4), GROUP_CONCAT(t1.c4)) FROM t1 WHERE ((((-1.616997405E9)) BETWEEN (((x'553c' IN (-4.34438629E8)))) AND ((((0xffffffffa58988d3)=(1.352301709E9)))))) LIMIT 1738752122; -- 0ms;
SELECT ALL CASE WHEN ((t1.c3)>(t1.c2)) THEN t1.c4 END, (((((((((((t1.c0, t1.c2, t0.c0, t1.c1, t1.c1))<>((t1.c3, t1.c1, t1.c4, -1942003282, t1.c3))))AND(((t1.c3)/(t1.c1)))))AND(LENGTH(t0.c2))))OR(((((((((t1.c2)OR(0.7416325717142849)))AND(t1.c3)))OR(NULL)))AND(t0.c2)))))OR(((t1.c3) ISNULL))), NULL COLLATE BINARY, COUNT(COUNT(*)), TRIM(((t1.c3)||(t0.c0)), ((t0.c2)||(t1.c4))) FROM t1 WHERE ((NOT (('1738752122' IN (''))))) ORDER BY NULL  NULLS FIRST, NULL ASC;SELECT DISTINCT CASE CASE WHEN t1.c1 THEN t1.c3 WHEN t1.c1 THEN NULL WHEN t1.c2 THEN t0.c0 WHEN t1.c3 THEN t1.c4 WHEN t1.c4 THEN t1.c3 ELSE t0.c2 END  WHEN ((t0.c1)=(t1.c0)) THEN t0.c2 WHEN CASE t1.c0  WHEN t1.c0 THEN t1.c4 END THEN t1.c1 WHEN ABS(x'') THEN t0.c0 COLLATE RTRIM END FROM t1 WHERE ((((((('1376040668')AND('867946766')))OR('397345631')))|(CASE '1008721775'  WHEN x'' THEN NULL ELSE 1811363649 END)));SELECT ALL (('0.8191195890134898')&(t1.c2)) COLLATE NOCASE FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((t1.c0)GLOB(x''))) NOT NULL) FROM t0, t1 WHERE (((((1.41632807E9, x'', 0.6257871957720366, '1651660886', 1027683270))<=((0.8882860762339446, 0xe8f3129, x'', NULL, x''))) IN (x'23ed' COLLATE BINARY, ('2070676972' IN ('^?'))))); -- 1ms;
SELECT DISTINCT ((((CAST(t0.c2 AS TEXT))OR(((t0.c2)LIKE('')))))OR((t0.c2 IN ()))) FROM t1 WHERE ((((0.41396701460643825, 0xffffffff9f9e93e3, '2108947884', 0.40560452472928, NULL)) NOT BETWEEN ((((((x'')AND(0.5014148121899047)))AND(0.3621967417660916)), ((NULL) NOT NULL), ((x'')>(0.7551931147159744)), (NOT (x'3d66')), ((0.1732861214960537)+('TZV')))) AND (((((x'7093')) BETWEEN ((NULL)) AND ((0.2786627899536084))), UPPER(NULL), 0X24277255 COLLATE BINARY, NULL COLLATE NOCASE, (- ('1738752122'))))));SELECT DISTINCT ((MAX(t1.c4)) NOT NULL) FROM t0 ORDER BY (((t0.c1))>=((CASE t1.c4  WHEN '' THEN t1.c3 ELSE t1.c2 END))) DESC  NULLS LAST;SELECT DISTINCT '뚡G2Kx', t1.c2, CAST(((t1.c2)/(t1.c0)) AS INTEGER) FROM t1 LEFT OUTER JOIN t0 ON (CAST(t0.c1 AS TEXT) IN ()) WHERE (HEX(((x'cf17') IS FALSE))); -- 1ms;
SELECT ALL (((((t1.c1))>=((t0.c2)))) ISNULL) FROM t0, t1 WHERE ((((x'')) NOT BETWEEN ((((-2095723930) NOTNULL))) AND ((CASE NULL  WHEN 0.1413031604653342 THEN x'd265' WHEN -784188040 THEN 0.04537936806075127 WHEN x'' THEN NULL ELSE 0.13933233482333873 END)))); -- 0ms;
SELECT DISTINCT ((((((t1.c3)OR(t0.c0)))OR(t0.c1))) ISNULL) FROM t1, t0 WHERE (((((((x'')OR(NULL)))OR('7')))IS NOT(CASE 0xffffffffedafb7c4  WHEN '-999896346' THEN 0.4833192276161168 WHEN -253463335 THEN NULL WHEN '0.012422752425941597' THEN '438112375' END))); -- 0ms;
SELECT ((+ (t0.c0)) IN (((((((((((((((((t0.c2)AND(t1.c2)))AND(t1.c2)))OR(t0.c2)))AND(t0.c2)))OR(t1.c3)))OR(t1.c4)))AND(t1.c4)))AND(t1.c4)))), CASE WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END COLLATE RTRIM, ((+ (t1.c2)) IN ()) FROM t0, t1 WHERE (((((((((NULL)AND(NULL)))AND('8t*XO>')))AND(((x'')&(1645080121)))))OR(IFNULL(x'78239ff2', 0xffffffffa4be631a)))); -- 0ms;
SELECT DISTINCT CAST(((((t1.c2)AND(t1.c4)))OR('}춁')) AS TEXT) FROM t0, t1; -- 0ms;
SELECT ((TRIM(DISTINCT t0.c0)) ISNULL) FROM t0; -- 0ms;
SELECT ALL (((t1.c4) IS FALSE) IN ()), CAST(((t1.c1) IS FALSE) AS BLOB), ((t1.c1)IS(CAST(t1.c1 AS INTEGER))), GROUP_CONCAT(((((t1.c4)AND(t0.c2)))OR(t1.c3))), ((((t1.c1) NOT BETWEEN (t1.c0) AND ('0.030939938490386454')))>(((t0.c0) IS FALSE))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((CASE t1.c1  WHEN t1.c4 THEN t1.c3 ELSE t1.c0 END) IS TRUE) FROM t1; -- 0ms;
SELECT x'' FROM t1 WHERE (CAST('-45440977' COLLATE NOCASE AS NUMERIC)); -- 1ms;
SELECT DISTINCT x'2f0e' FROM t0, t1; -- 1ms;
SELECT DISTINCT (~ ((~ (t1.c3)))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (((t1.c1, t1.c3, t0.c0)) NOT BETWEEN ((UPPER(DISTINCT t0.c2), COUNT(*), ((t1.c4) NOT BETWEEN ('-514897409') AND (t0.c0)))) AND ((((t1.c0) IS FALSE), ((t0.c1) NOT BETWEEN (t0.c0) AND (t1.c2)), CASE t1.c0  WHEN t0.c2 THEN t0.c1 ELSE t0.c0 END))) FROM t0;SELECT ((((((t0.c0)OR(t1.c4)))AND(t0.c2)))OR(((t0.c1)>>(t1.c3)))), SUM(((t1.c4)GLOB(t1.c0)) COLLATE BINARY), ((CASE WHEN t1.c3 THEN t1.c1 END)>=(CASE WHEN t1.c1 THEN t0.c0 END)) FROM t1, t0; -- 0ms;
SELECT COUNT(*) FROM t1, t0 WHERE (((((0.5014148121899047) NOT NULL)) NOT BETWEEN ((NULL IN (0.6425569950966106))) AND ((('(') NOT NULL)))) ORDER BY (((NOT (t1.c1)))>>((((t0.c0, t1.c1, t1.c2))<((t0.c0, t0.c1, t1.c2))))); -- 0ms;
SELECT t0.c1 FROM t0 WHERE (UPPER((('-1641915755') NOTNULL))); -- 0ms;
SELECT CASE WHEN ((t1.c1) IS FALSE) THEN ((t1.c0) ISNULL) WHEN 0X57b55c4 THEN (t1.c4 IN ()) WHEN CASE t0.c1  WHEN t1.c3 THEN t0.c1 END THEN (t0.c1 IN ()) END, ((CAST(t0.c0 AS BLOB))>(((t1.c2)-(t1.c0)))), ((TOTAL(t0.c1))LIKE((((t1.c0, t1.c0, t1.c0)) BETWEEN ((t0.c0, 0.012422752425941597, t0.c0)) AND ((NULL, t0.c2, t1.c0))))) FROM t1;SELECT DISTINCT CAST(MAX(t0.c2, t1.c1, t1.c0, t1.c3) AS BLOB) FROM t0, t1 NOT INDEXED WHERE ((((('ᴻrH围')GLOB(x'247b')))=(((0.2488959498029818) NOT NULL)))) LIMIT -1438612087 OFFSET 2070676972; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t1.c0 AS INTEGER)) OVER () FROM t1 WHERE (((CAST('0.6704231166692602' AS REAL)) BETWEEN (((x'') BETWEEN ('0.8882860762339446') AND (x'3674'))) AND (QUOTE(NULL)))); -- 0ms;
SELECT DISTINCT CAST((- ('RvV')) AS BLOB) FROM t1, t0; -- 0ms;
SELECT ALL (((((t1.c4)AND(x'')))OR(t0.c2)) IN ()) FROM t0; -- 0ms;
SELECT SUM((('867946766') NOT NULL)) OVER () FROM t0, t1; -- 0ms;
SELECT ALL ((((~ (t1.c2))))!=((((((t1.c4)AND(t0.c1)))AND(t0.c1))))) FROM t0, t1 WHERE ('.KqRs\'); -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID(), ((t1.c1)-(t0.c2)) COLLATE RTRIM, '438112375' FROM t0, t1; -- 0ms;
SELECT ALL HEX(DISTINCT MAX(t1.c0)) FROM t1, t0 LIMIT -303037691 OFFSET -45440977; -- 0ms;
SELECT DISTINCT COUNT(*), ((((((((((((t1.c2)AND(t0.c0)))OR(t0.c0)))OR(t1.c4)))OR(t1.c0)))OR(t1.c2)))OR(t0.c1)) COLLATE RTRIM, CASE ((t1.c3)%(t1.c3))  WHEN (- (t1.c4)) THEN ((t1.c0) NOT NULL) END, GROUP_CONCAT(t0.c0 COLLATE NOCASE COLLATE RTRIM) OVER (), CASE WHEN '' THEN GROUP_CONCAT(t1.c0) END FROM t0 WHERE ((NOT ((x'' IN ('2醫H.]')))));SELECT DISTINCT ((t0.c1)<=(t1.c0)) COLLATE NOCASE FROM t1, t0; -- 0ms;
SELECT DISTINCT (+ (t1.c3)) COLLATE NOCASE FROM t0 LIMIT 590004775;SELECT GROUP_CONCAT('QY녅') OVER () FROM t1, t0 WHERE ((((('446477713')IS(NULL))) ISNULL)) LIMIT 1840141891 OFFSET -927573375; -- 0ms;
SELECT DISTINCT DATE((- (t1.c0)), 1148344060, MIN(t0.c1)) FROM t1, t0; -- 0ms;
SELECT LAST_VALUE(((CASE t0.c0  WHEN 0x42923a3c THEN t1.c0 END) NOT BETWEEN (DATETIME(NULL, t0.c0, 0.22176440523382768)) AND (((t1.c0)>>(t0.c1))))) OVER () FROM t1, t0 WHERE ('154134734'); -- 0ms;
SELECT DISTINCT (NOT (COALESCE(t1.c1, t0.c1, '778518537', t1.c1))) FROM t1 WHERE (CAST(((((0.6045007670342842)AND(NULL)))AND(0.7851016180310851)) AS INTEGER));SELECT DISTINCT (- (((t1.c3)>=(t0.c1)))) FROM t0 WHERE ((((NULL, x'', -4.88411975E8)) BETWEEN (('0.6935255249359004', 0.134035415984469, NULL)) AND ((NULL, 0Xffffffffe2e36cb9, x''))) COLLATE NOCASE) ORDER BY CASE ((t1.c2) NOT BETWEEN (t0.c1) AND (t0.c2))  WHEN (t1.c3 IN ()) THEN ((t1.c2) IS TRUE) END, x'' DESC LIMIT -1762921124 OFFSET -610920880;SELECT ALL CAST(((t1.c4) BETWEEN (t0.c0) AND (t1.c2)) AS NUMERIC) FROM t0;SELECT DISTINCT 0X741c6398 FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((((((((((((((t1.c4)AND(t1.c1)))OR(t0.c2)))AND(NULLIF(t0.c2, t1.c2))))OR(COUNT(*))))OR(((t0.c0)OR(t1.c3)))))AND(((t1.c2) IS TRUE))))AND((t1.c0 IN ()))))AND(((t0.c0)IS NOT('v(~p')))) FROM t1, t0 WHERE ((~ ((((x'0ecf'))==((NULL)))))); -- 0ms;
SELECT ALL COUNT(*) OVER ( ROWS  CURRENT ROW EXCLUDE NO OTHERS) FROM t1, t0; -- 1ms;
SELECT ((((t1.c2))<((t0.c2))) IN (CASE t0.c0  WHEN t1.c0 THEN t1.c2 END)) FROM t0, t1; -- 0ms;
SELECT ALL COALESCE((NOT (t0.c0)), ((t1.c4)IS NOT(t0.c1))) FROM t0, t1; -- 0ms;
SELECT DISTINCT (('-1850135758') BETWEEN (t1.c0 COLLATE BINARY) AND (t0.c1 COLLATE BINARY)) FROM t1 WHERE (((CASE '0.9932291699330624'  WHEN '1651660886' THEN 'cw#Ij' WHEN NULL THEN x'' WHEN 0.0 THEN 0.9124772574368115 END)|(('0.41396701460643825' IN (0.5014148121899047, x'')))));SELECT DISTINCT LAST_VALUE((~ (((t1.c4)GLOB(t1.c4))))) OVER ( ORDER BY CASE WHEN ((t1.c1)+(t1.c0)) THEN CAST(t0.c0 AS INTEGER) ELSE t0.c1 END  NULLS LAST), CASE WHEN 1.370939149E9 THEN t1.c4 END COLLATE RTRIM, CASE ((x'')LIKE(t1.c2))  WHEN COUNT(*) THEN ((t1.c4)|(t0.c0)) ELSE (t1.c4 IN (t1.c2)) END FROM t1;SELECT HEX((('Va')=(t1.c1))) FROM t1 WHERE (((((NULL) NOT BETWEEN (NULL) AND (x'')))<<(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c0 THEN t0.c0 WHEN t1.c4 THEN t0.c0 WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t1.c1 WHEN t1.c1 THEN t1.c0 END)-(((t1.c1)<(t1.c2)))) FROM t1 WHERE ((((x'') IS FALSE) IN ()));SELECT ALL ((t1.c2)<=(t1.c4)) COLLATE BINARY FROM t0, t1 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((NULL, t1.c4, t0.c2)) BETWEEN (((~ (t1.c2)), t1.c1, (x'' IN ()))) AND ((AVG(NULL), ((((t0.c0)AND(t0.c1)))AND(t1.c1)), (((t0.c2, t0.c2, t1.c1)) BETWEEN ((t1.c3, t0.c2, t1.c4)) AND ((t1.c4, NULL, t1.c0)))))) FROM t1 WHERE (CASE (NOT (0.5772740248502907))  WHEN CAST(0.5415770573167201 AS INTEGER) THEN (0X7a867e54 IN ()) END);SELECT ALL t0.c2 FROM t1 ORDER BY (t0.c0 IN (t1.c2, t1.c0)) COLLATE RTRIM  NULLS LAST;SELECT CASE ''  WHEN t1.c0 THEN t1.c0 END COLLATE RTRIM, (((((('') NOT BETWEEN (t0.c0) AND (x'')))AND(t1.c4 COLLATE NOCASE)))OR(((((t1.c1)AND(t1.c1)))OR(t1.c4)))), UPPER(t1.c4) FROM t0 LIMIT -1676933302 OFFSET 1367899929;SELECT DISTINCT ((((t1.c0 IN ())))=(((- (t1.c3))))) FROM t0, t1 WHERE (((((('2065217521'))>=((x'6ad2'))))%((- ('d0'))))); -- 0ms;
SELECT ALL (- (t1.c1 COLLATE RTRIM)) FROM t0, t1 WHERE (((((NULL)*(-5.36444003E8))) BETWEEN (((((NULL)AND(x'0966')))OR('<P.tZ>Lq'))) AND (0.10328480660978667 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((t0.c0, t1.c2, t0.c1)) NOT BETWEEN ((((((t1.c3)OR(t0.c0)))AND(t0.c2)), t0.c0, t1.c2 COLLATE NOCASE)) AND ((TYPEOF(t0.c0), ((((t0.c0)OR(t1.c2)))OR(t0.c1)), ((t0.c2)LIKE(t1.c2))))) FROM t1 WHERE (CAST(((0.20878354539663613) NOT BETWEEN (0.5740755593023236) AND (0X4895b6a1)) AS NUMERIC));SELECT ALL t1.c1 FROM t0 INDEXED BY i13 WHERE (LIKELIHOOD(DISTINCT (((('gﴦ&w?\)x''')OR(NULL)))AND(0.04829486637882585)), 0.7242788219725987)) GROUP BY CASE WHEN ((t1.c0) IS TRUE) THEN t1.c4 COLLATE RTRIM WHEN ((t1.c4)>>(t1.c3)) THEN (~ (t1.c2)) WHEN ((t1.c1)/(t0.c2)) THEN ((((((((t1.c1)AND(t0.c2)))OR(t0.c0)))OR(t1.c4)))OR(t0.c0)) END HAVING CASE WHEN json_remove(t0.c2, t0.c0) THEN ((t1.c1)AND(x'9d297ab0')) END;SELECT '', CASE WHEN t1.c0 THEN t0.c1 ELSE t1.c3 END COLLATE NOCASE, ((((t1.c0)>(t0.c2)))=(((((t0.c0)AND(t1.c4)))OR(t0.c1)))) FROM t0 WHERE ((((~ (x'55ac')))|(LTRIM(x'', x''))));SELECT DISTINCT ((NOT (t1.c1)) IN ()) FROM t0, t1 WHERE (((((-4.88411975E8) IS FALSE)) NOT BETWEEN (CASE WHEN '' THEN NULL WHEN 0.939041052240069 THEN x'' WHEN NULL THEN '3(S)' WHEN 0.93267534436194 THEN '1058848680' WHEN NULL THEN 0.8073869496239113 END) AND ((+ ('-1280062714'))))) ORDER BY ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) COLLATE BINARY; -- 0ms;
SELECT ALL ((CASE t0.c1  WHEN t0.c0 THEN t0.c0 ELSE t1.c0 END) BETWEEN ((((t1.c0))!=((t0.c2)))) AND (((((t0.c0)OR(t1.c4)))OR(t1.c0)))) FROM t0 WHERE (((CASE WHEN NULL THEN '-606763445' ELSE 911302231 END)/(CAST(NULL AS REAL))));SELECT DISTINCT LAG((NOT (((t0.c0)OR(x'')))), (t0.c0 IN ()) COLLATE BINARY, ((((((((((((t0.c1)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c2)))OR(((t0.c2) ISNULL))))AND((- (t0.c2))))) OVER ( ORDER BY NULLIF(DISTINCT NULL, CASE WHEN NULL THEN t0.c1 WHEN t1.c2 THEN t1.c1 WHEN x'' THEN t1.c2 END) ASC  NULLS LAST, QUOTE(LIKELIHOOD(DISTINCT t1.c3, 0.40424692244328153)), CASE 0x77be70cc  WHEN t0.c2 THEN t0.c0 WHEN t1.c4 THEN t0.c1 WHEN t0.c1 THEN t0.c0 ELSE 9.84321381E8 END COLLATE BINARY), (~ (HEX(t1.c4))), t1.c1, ((LIKELIHOOD(t1.c3, 0.7780502698887002)) NOT NULL), 0.8541081343203101 FROM t0 WHERE ((((~ (NULL))) IS TRUE)) ORDER BY (~ (((((((((t0.c2)AND(t0.c0)))OR(t1.c4)))AND(t1.c1)))AND(t1.c2))));SELECT DISTINCT (((t1.c2, t1.c1, t1.c4)) NOT BETWEEN ((UPPER('rN'), ((t1.c2) BETWEEN (t1.c3) AND (t1.c1)), ((t1.c2)>=(t1.c3)))) AND ((CASE WHEN t1.c3 THEN t1.c1 ELSE t1.c1 END, (t1.c2 IN (t0.c0)), ((t0.c1) NOT BETWEEN (t1.c0) AND (t1.c0))))) FROM t1, t0; -- 0ms;
SELECT CAST(t0.c1 COLLATE NOCASE AS TEXT), (((CASE t1.c1  WHEN t1.c0 THEN 0X5225a38d WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t1.c4 ELSE t1.c2 END))<>((((t1.c1)+('zG'))))), (((((t1.c4))<((t1.c4))))|(((t0.c2) NOTNULL))) FROM t1, t0; -- 0ms;
SELECT DISTINCT NTILE(((t1.c1 COLLATE BINARY) ISNULL)) OVER ( ROWS  CURRENT ROW), ((((t1.c3) NOT BETWEEN (t0.c2) AND (t0.c0)))IS NOT(t1.c4 COLLATE BINARY)), CAST(t0.c0 AS TEXT) FROM t1 INDEXED BY i13 WHERE (((((- (0.0692836947353509))))>=((((x'')%('1370939149'))))));SELECT DISTINCT LAG((((t0.c2 IN ())) NOT BETWEEN ((t1.c2 IN ())) AND (CAST(t1.c3 AS TEXT))), ((CASE t1.c4  WHEN t1.c2 THEN t1.c4 WHEN t1.c2 THEN t0.c1 WHEN t1.c3 THEN t0.c1 END) NOT NULL), (COALESCE(t1.c3, t0.c1, t1.c4, t1.c3) IN ())) OVER () FROM t1, t0; -- 0ms;
SELECT ((((((((((((t1.c4)OR(t0.c1)))AND(t0.c0)))AND(((((t1.c0)OR(t1.c2)))AND(t0.c1)))))OR((- (t1.c3)))))OR((+ (x'')))))OR((+ (t0.c2)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((UNLIKELY(t0.c0))>>(((((t1.c0)OR(t1.c0)))AND(t1.c1)))), 0.8913231447997195, (((CASE WHEN '' THEN t0.c1 ELSE NULL END))<(((((('\^\i')AND(t0.c1)))AND(t0.c2))))) FROM t1;SELECT ALL TYPEOF(CASE t1.c3  WHEN t0.c2 THEN t1.c3 WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN t0.c2 END), ((((((((((((((t0.c0)AND(t0.c1)))AND(t1.c4)))AND(t1.c3)))AND(NULL)))AND(t0.c1)))AND(t1.c2)))IS NOT(((t0.c2) BETWEEN (t1.c4) AND (t0.c2)))), (((x'0d3d') NOT BETWEEN (t1.c3) AND (t0.c0)) IN (CASE '457834428'  WHEN t0.c0 THEN t0.c2 END)) FROM t0;SELECT ALL ((CAST(t1.c4 AS REAL))||((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t1.c1))))) FROM t0, t1 WHERE ((+ ((x'' IN ())))); -- 0ms;
SELECT ALL CAST((t1.c1 IN (t1.c0)) AS REAL) FROM t1 WHERE (((CASE WHEN '-35516088' THEN 0.46166698499905023 ELSE x'' END)IS(CASE WHEN 0.6130238255407556 THEN x'73b0' END))) LIMIT 2024082831; -- 0ms;
SELECT ALL t0.c0 FROM t1;SELECT DISTINCT ((((t0.c0) IS FALSE))GLOB(t0.c2)) FROM t1 GROUP BY (((((t1.c2, t0.c2, t0.c0)) BETWEEN ((t0.c2, x'', t1.c4)) AND ((t0.c2, t1.c3, t1.c2)))) BETWEEN ((t1.c0 IN ())) AND (LOWER(t1.c4))), t0.c0, (+ (LOWER(t0.c0))) HAVING ((((t1.c3)|(t1.c0)))||(((t0.c2) NOT BETWEEN (t1.c2) AND (t0.c0))));SELECT DISTINCT t0.c1, (((NOT (t0.c0))) NOT BETWEEN (DATETIME(t1.c0, NULL, t1.c3)) AND ((NOT (t0.c0)))), t1.c2 FROM t0, t1 WHERE (CAST(LAST_INSERT_ROWID() AS REAL)) GROUP BY 0.35911988746571877, ((CASE WHEN t1.c0 THEN t0.c0 END)!=((t0.c0 IN ()))), CAST(CAST(t1.c1 AS INTEGER) AS TEXT); -- 0ms;
SELECT ((NOT (t0.c2)) IN ()), CAST(((t0.c0) NOT NULL) AS INTEGER), (((((((((((t0.c2, t1.c1, t0.c0))<((t1.c1, t1.c4, t1.c0))))AND((t0.c0 IN (t0.c0)))))OR((t1.c0 IN ()))))OR(((t0.c2)+(t1.c3)))))OR(CAST(t1.c1 AS INTEGER))) FROM t1;SELECT DISTINCT ((((CAST(t0.c2 AS BLOB))OR(((((t1.c0)AND(t1.c1)))OR(t1.c0)))))OR(((t0.c2) BETWEEN (t1.c3) AND (t0.c0)))) FROM t0;SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE ((NOT ('' COLLATE BINARY))) ORDER BY CAST((((t1.c0))<>((t1.c3))) AS INTEGER)  NULLS LAST;SELECT ALL UNLIKELY(DISTINCT ((t1.c2)*(t1.c4))), TOTAL(MAX(((((((((t1.c3)AND('1948017560')))OR(t0.c1)))AND(t1.c2)))AND(t0.c1)))), (((LIKELIHOOD(t0.c1, 0.6405260216072672), t0.c2 COLLATE BINARY, (NOT (t1.c1)), 0.21522725810010057, AVG(NULL)))!=((((t1.c1) IS TRUE), (((t1.c0, t0.c2, t1.c3)) NOT BETWEEN ((t1.c4, t0.c2, t1.c2)) AND ((t1.c3, t1.c0, ''))), ((t1.c4) ISNULL), LTRIM('-1531026662', t1.c1), ((t0.c2) NOT NULL)))) FROM t1, t0 WHERE (((((x'') NOT BETWEEN (x'06afe2cf') AND ('UcA}怇'))) NOT BETWEEN (CAST(0.0011273332658117141 AS TEXT)) AND (CASE WHEN x'7d0d' THEN NULL ELSE '3o>3Rw3' END))) ORDER BY ('988859221' IN ()) ASC, ((CAST(t1.c0 AS INTEGER))IS NOT(((t1.c4)LIKE(t1.c1))));SELECT DISTINCT t1.c0, t0.c1, CASE WHEN (((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((t1.c1))) THEN x'' ELSE ((t1.c0)IS NOT(t1.c1)) END FROM t0, t1 GROUP BY CASE (t1.c0 IN ())  WHEN ((t1.c2)OR('<I]')) THEN ((t0.c0) NOT BETWEEN ('1713533630') AND (t1.c1)) END, CASE ((t1.c3) BETWEEN (t0.c0) AND (t1.c2))  WHEN t1.c4 COLLATE RTRIM THEN CASE WHEN t1.c0 THEN t1.c2 WHEN t1.c4 THEN t1.c0 WHEN t1.c4 THEN t1.c3 END END, CASE CASE WHEN t0.c2 THEN t1.c2 END  WHEN ((((t1.c3)AND(t0.c1)))OR(t1.c3)) THEN t0.c0 WHEN t0.c0 THEN t1.c2 WHEN CAST(t1.c1 AS INTEGER) THEN ((t1.c2)<(t1.c4)) END HAVING (~ ((t1.c0 IN ()))); -- 0ms;
SELECT DISTINCT ((((t1.c3)<=(t1.c0))) NOT BETWEEN ((+ (t0.c0))) AND (CASE t1.c4  WHEN t1.c3 THEN t0.c1 ELSE t0.c0 END)) FROM t1 WHERE (CASE WHEN x'dff1' THEN (x'' IN ()) ELSE CASE WHEN x'' THEN 0.05546957932198615 WHEN x'' THEN 397345631 WHEN '綂i' THEN -265762240 END END);SELECT DISTINCT (+ (CASE WHEN t0.c0 THEN NULL ELSE t1.c1 END)) FROM t1;SELECT ALL (((t1.c4, t1.c0, t0.c2)) BETWEEN ((COUNT(t0.c2), 1417801163, (+ (t1.c2)))) AND ((x'efe0', (t0.c2 IN ()), (+ (t1.c0))))), COUNT(t1.c1) OVER (), CASE CAST(t1.c2 AS BLOB)  WHEN t0.c1 THEN highlight(t1.c4, t0.c0, t0.c1, t1.c2) WHEN ((t1.c4)IS NOT(t0.c0)) THEN (t1.c4 IN ()) WHEN x'' THEN CASE t1.c3  WHEN t0.c2 THEN t1.c4 ELSE t0.c2 END END FROM t1, t0; -- 0ms;
SELECT DISTINCT ((t1.c2)+(t1.c4)) COLLATE BINARY FROM t1 WHERE ((- (x'2374'))); -- 0ms;
SELECT LIKE((('-142815457') NOT BETWEEN (t0.c0) AND (t0.c2)), ((t1.c4)IS NOT(t1.c3)), '-') FROM t1, t0; -- 0ms;
SELECT DISTINCT 0.9104012275081618 FROM t1, t0 WHERE (CASE WHEN (- (NULL)) THEN ((x'') IS FALSE) WHEN (((NULL)) BETWEEN ((NULL)) AND (('1465464052'))) THEN (('') IS FALSE) WHEN (((x'', x'', x''))>((0.5351299196659682, '-2023895418', x''))) THEN (- (x'')) ELSE (~ (x'1349036e')) END); -- 0ms;
SELECT DISTINCT NTH_VALUE((((t0.c1) IS FALSE) IN ()), UPPER(((t1.c1) NOT NULL))) OVER () FROM t0, t1 WHERE (CAST(((0.24830628401054)AND('2015982018')) AS INTEGER));SELECT DISTINCT TOTAL((+ (t1.c0))) OVER ( PARTITION BY '% 쳆9ॲ', (((((('862268259') IS TRUE))AND(((t1.c2)<<(t1.c3)))))OR(CASE WHEN t0.c2 THEN t1.c2 WHEN t1.c2 THEN t1.c3 WHEN t1.c3 THEN t1.c0 END)) RANGE (CASE t1.c4  WHEN t0.c0 THEN t0.c1 END IN ()) PRECEDING EXCLUDE GROUP) FROM t0 WHERE ((((0x7624fad9))<((CASE 1840141891  WHEN '09hI' THEN 0.9948952062454974 END))));SELECT DISTINCT (((t1.c0) NOT BETWEEN (t1.c0) AND (t0.c1)) IN (CASE t0.c0  WHEN t0.c2 THEN t1.c0 ELSE t1.c0 END)) FROM t0 WHERE (((x'') ISNULL));SELECT DISTINCT (((- (t1.c0)))>(((t1.c1)>>(t1.c3)))) FROM t1; -- 0ms;
SELECT RANK() OVER () FROM t0, t1 ORDER BY (((t0.c1)/(t1.c2)) IN (CASE WHEN t1.c0 THEN t1.c1 WHEN t0.c2 THEN t0.c1 WHEN t1.c1 THEN t0.c0 WHEN t1.c1 THEN t1.c1 WHEN t0.c1 THEN 'I	Sq}' END)) DESC, ((HEX(DISTINCT t0.c0))*((t0.c0 IN ()))); -- 1ms;
SELECT ((((((((((t0.c1)AND(t0.c0)))OR(0.12817492136990105)))AND(t1.c0)))AND(t1.c4))) IS FALSE) FROM t1 WHERE (HEX(DISTINCT ('wEhqR' IN ())));SELECT DISTINCT AVG(((t1.c1)>=(t1.c2))), (('-606763445')-(MIN(x''))), (((((((((t1.c4 IN (t0.c1)))OR((+ (t1.c1)))))AND('')))OR((~ (t1.c3)))))OR(CAST(t0.c1 AS TEXT))) FROM t0 WHERE (((0.7633632458416707 COLLATE RTRIM) NOT NULL)) LIMIT -723971022;SELECT LTRIM(CASE t0.c1  WHEN t0.c1 THEN t1.c1 ELSE t1.c3 END, (t0.c2 IN ())), (950717825 IN ()), (~ ((((t1.c2))==((t1.c4))))) FROM t0 WHERE ((+ (load_extension('_A9ZQ6'))));SELECT (CAST(t0.c0 AS INTEGER) IN ()) FROM t0 NOT INDEXED, t1 WHERE ((((x'0ca6', NULL, '-1320851232')) BETWEEN ((NULL COLLATE NOCASE, ((((0Xffffffffd7b709bf)OR(x'')))AND(0.9932291699330624)), TRIM(x''))) AND ((((0.384472906837216) IS TRUE), ((1362447457) BETWEEN (0.09840529243903906) AND (NULL)), (((((((('YV')AND(NULL)))OR(NULL)))OR(x'')))AND(0Xffffffff9ef98da1)))))); -- 0ms;
SELECT (((((NOT (NULL)))AND(t1.c4)))AND((t1.c3 IN ()))) FROM t0, t1 WHERE (((CAST(NULL AS NUMERIC))<(('㾃ꏄ' IN ())))); -- 0ms;
SELECT DISTINCT t0.c0, t0.c2, ((((t0.c1) BETWEEN (t1.c1) AND (t1.c2))) NOT BETWEEN (CAST(0.4490245468395734 AS REAL)) AND (t1.c3)) FROM t0, t1 WHERE (('2133442399' IN (CASE WHEN '-999896346' THEN '^T' END))); -- 0ms;
SELECT ALL 0x4bce438d, (~ (t1.c4)) COLLATE BINARY, ((0.6704231166692602) BETWEEN (SUM(t1.c2)) AND (CASE 606564949  WHEN t1.c1 THEN t1.c1 ELSE 0.6701699922815891 END)) FROM t1, t0 WHERE ('-1900451644'); -- 1ms;
SELECT ALL ((CASE 0.3482606280221424  WHEN t1.c4 THEN t1.c3 WHEN x'' THEN t1.c1 WHEN t0.c2 THEN t0.c1 END)>=(COUNT(0.2932575149235016))) FROM t0, t1; -- 0ms;
SELECT ALL ((t1.c1 COLLATE RTRIM)<((((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((t1.c1, t0.c0, t0.c2)) AND ((NULL, t1.c0, t1.c3))))) FROM t1, t0; -- 0ms;
SELECT (t0.c0 COLLATE BINARY IN ()), ((((CASE WHEN t1.c4 THEN t0.c2 ELSE t1.c4 END)OR(CASE WHEN t1.c1 THEN t1.c4 WHEN t1.c1 THEN t1.c3 WHEN t0.c0 THEN t1.c2 END)))AND(CAST(t1.c1 AS BLOB))), SUM((t1.c0 IN ())), COUNT(((t1.c4)-(t1.c1)) COLLATE BINARY) OVER (), ((CASE WHEN t1.c4 THEN t0.c1 WHEN t1.c2 THEN t1.c4 WHEN t0.c1 THEN t1.c0 END) BETWEEN (((t1.c1)!=(t1.c0))) AND (t1.c3)) FROM t0, t1 WHERE (((((((0.49021153980733145)AND(0.7167827928842393)))OR(NULL)))||(((((NULL)AND(NULL)))AND('-495847840'))))) GROUP BY (((((t1.c3))!=((t1.c1)))) NOTNULL); -- 0ms;
SELECT ((MAX(t1.c3))LIKE(((((((((t1.c0)OR(t0.c2)))AND(t0.c0)))AND(t1.c2)))AND(t1.c0)))) FROM t0 WHERE (CAST(((0.5931925156672058) NOT BETWEEN ('-544023930') AND (0X42923a3c)) AS TEXT));SELECT DISTINCT ((((t0.c2)%(t0.c1))) IS TRUE) FROM t0, t1 WHERE ((x'' IN ())); -- 0ms;
SELECT ALL CASE WHEN ((((t0.c2)AND(t0.c2)))OR(t0.c2)) THEN (((t1.c1, t1.c1, t1.c2)) BETWEEN ((t0.c2, t0.c0, t0.c1)) AND ((t1.c4, t1.c3, t1.c3))) WHEN ((((t0.c0)OR(t1.c0)))OR(t1.c3)) THEN ((t1.c2) NOT NULL) WHEN TYPEOF(-1.942003282E9) THEN CAST(t1.c2 AS TEXT) END FROM t0, t1 WHERE (((((((0x336bfe0f)AND(x'')))OR('1502523514')))+(INSTR('', 'zm⥐wG')))); -- 0ms;
SELECT ALL (((t0.c1 IN (t1.c4, t1.c2))) ISNULL) FROM t0 GROUP BY UNLIKELY(DISTINCT ((t0.c0)&(t1.c3))), NULL, ((((t0.c0) ISNULL)) NOT BETWEEN ((~ (t1.c1))) AND ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c2)))));SELECT ALL CAST(((t1.c2) NOT NULL) AS NUMERIC) FROM t0, t1 WHERE (TRIM(0.09516196134765476 COLLATE RTRIM)) LIMIT -54095445 OFFSET -536444003; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c3) NOT BETWEEN (t1.c3) AND (t1.c3)) THEN t0.c0 WHEN AVG(t1.c3) THEN TOTAL(t0.c2) WHEN (((t0.c1)) NOT BETWEEN ((t1.c3)) AND ((t1.c4))) THEN ((t1.c2) BETWEEN (t1.c0) AND (t0.c0)) END, SUM(((t1.c4)==(t0.c0))), FIRST_VALUE(((t1.c2 IN ()) IN (((t1.c2) BETWEEN (t1.c2) AND (t1.c4))))) OVER () FROM t1, t0 WHERE ((((1516277982 IN ())) NOTNULL)); -- 0ms;
SELECT DISTINCT ((INSTR(t1.c0, t0.c2)) NOT NULL) FROM t1, t0 WHERE ((((((0.5856497907634042))<((x'')))) NOT BETWEEN ((((0.18519746866015097, '37F''G!Ms', 0.5332927252012345)) NOT BETWEEN (('0.5856497907634042', '', x'd02a')) AND ((-1.42815457E8, 0.21522725810010057, 0.02104974220976774)))) AND (((NULL)IS NOT(NULL))))); -- 0ms;
SELECT (~ (x'' COLLATE BINARY)), ((t1.c3) BETWEEN (((t1.c1) IS TRUE)) AND (MAX(t1.c1, t0.c0))), ((t1.c2 COLLATE BINARY) IS TRUE) FROM t0, t1; -- 1ms;
SELECT DISTINCT ((SUM(t1.c3)) BETWEEN (0.4768305989286834) AND (0.41342566842256623)) FROM t1, t0 ORDER BY ((((t1.c3)LIKE(t1.c2))) BETWEEN ((+ (t0.c2))) AND (CAST(t1.c3 AS INTEGER))) DESC, (~ (LOWER(DISTINCT t1.c3)))  NULLS LAST; -- 0ms;
SELECT ALL ((t0.c0) BETWEEN (CASE WHEN t1.c0 THEN t0.c0 WHEN '+%&w|]HWV' THEN t1.c4 WHEN t1.c4 THEN t1.c2 END) AND ((((t1.c3)) BETWEEN ((t0.c2)) AND ((t0.c1))))), TOTAL(t1.c1) OVER (), CAST(((t1.c3) NOT NULL) AS BLOB) FROM t1, t0; -- 0ms;
SELECT ALL '984321381' FROM t0, t1 WHERE ('?m' COLLATE RTRIM); -- 0ms;
SELECT ALL ((AVG(t1.c4)) BETWEEN (((((((((t1.c4)AND(t1.c0)))OR(t0.c2)))OR(t1.c0)))OR(t1.c0))) AND (t1.c0 COLLATE NOCASE)) FROM t1, t0 WHERE (((HEX(x'')) NOTNULL)); -- 0ms;
SELECT ALL (('(F') BETWEEN ((('-426260375') NOT BETWEEN (0.6383359089676719) AND (t0.c1))) AND (t0.c1)) FROM t0, t1; -- 0ms;
SELECT DISTINCT SUM(((t0.c0) ISNULL)) FILTER(WHERE t1.c2) OVER () FROM t1, t0; -- 4ms;
SELECT LAST_VALUE(((t1.c3)<(t1.c1)) COLLATE RTRIM) OVER () FROM t1; -- 0ms;
SELECT (((t1.c4)<<(t1.c0)) IN ((t1.c3 IN ()))) FROM t0 WHERE ((('') NOT BETWEEN (0.8987819778035065) AND ('X9XgcxX1*')) COLLATE RTRIM);SELECT DISTINCT CAST(t1.c4 AS NUMERIC), (('-303037691')|(IFNULL(DISTINCT t1.c4, t0.c0))), COUNT(*) OVER () FROM t1, t0; -- 1ms;
SELECT ALL t1.c0 COLLATE BINARY FROM t0, t1 WHERE (CAST(0.6191825016500815 AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((t1.c2)) NOT BETWEEN ((-380186730)) AND ((((((t0.c0)OR('-s\nH')))AND(t0.c1))))) FROM t1 WHERE (PRINTF('\n_o') COLLATE RTRIM);SELECT ALL (((((('') BETWEEN (t1.c1) AND (t0.c0)))AND((t1.c0 IN ()))))AND((t1.c2 IN ()))), ((('%fr逗♂D' IN ()))>>(LOWER(t1.c3))), CASE (((t1.c4)) BETWEEN ((t0.c1)) AND ((t1.c1)))  WHEN (t1.c0 IN ()) THEN (t0.c0 IN ()) END FROM t0;SELECT DISTINCT ((t0.c0) NOT BETWEEN (t1.c0) AND (t1.c3)) COLLATE NOCASE, (((((t1.c3 IN (t1.c1)))AND(((t0.c2) BETWEEN (t0.c2) AND (t1.c3)))))AND(t0.c1 COLLATE RTRIM)), (((CAST(t1.c2 AS TEXT), MAX(t0.c0), ((t1.c3)<<(t1.c4))))<((((t1.c4)*(t0.c2)), MAX(t0.c1), (t1.c0 IN ())))) FROM t0 WHERE (CAST((NOT (NULL)) AS REAL)) LIMIT 2064902158 OFFSET 68410155;SELECT DISTINCT TOTAL(((t1.c3) IS FALSE)) OVER (), SQLITE_COMPILEOPTION_GET((t0.c2 IN ())), COUNT(((t1.c3)<(t1.c2))) FROM t0, t1 GROUP BY ((((((((((t0.c2)AND(t1.c1)))AND(t1.c2)))AND(t1.c0)))OR(t1.c4))) IS FALSE); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST(t1.c4 COLLATE RTRIM AS REAL)) OVER (), CASE WHEN (((t1.c4, t1.c0, t1.c3))<((t1.c3, NULL, x''))) THEN ((((t1.c0)OR(t1.c1)))AND(t1.c3)) ELSE ((t1.c4)AND(t1.c4)) END, CASE UNICODE(t0.c2)  WHEN CAST(t1.c2 AS INTEGER) THEN (t1.c2 IN ()) END FROM t1 ORDER BY TYPEOF((- (t0.c2))) DESC, CASE WHEN (NOT (t1.c2)) THEN t1.c1 COLLATE RTRIM WHEN ((t0.c0)AND(t0.c0)) THEN ((t1.c2) BETWEEN (t1.c2) AND (t0.c1)) WHEN t1.c4 COLLATE NOCASE THEN ((t0.c1)<<(t1.c1)) END DESC  NULLS FIRST;SELECT DISTINCT ((((t1.c2)IS(t0.c2)))+((((t1.c4)) BETWEEN ((t1.c1)) AND ((t0.c0))))) FROM t0 WHERE (((((NULL)>=(0.830887550374998)))|(NULL COLLATE RTRIM)));SELECT ((t1.c3)<=(t1.c1)) COLLATE RTRIM FROM t1; -- 0ms;
SELECT CASE WHEN SQLITE_SOURCE_ID() THEN ((t1.c3)*(x'')) ELSE CAST(t1.c1 AS NUMERIC) END, ((CASE t0.c2  WHEN t1.c4 THEN t1.c3 WHEN t1.c3 THEN t1.c1 WHEN t1.c2 THEN t1.c2 ELSE t1.c1 END)&(NULL)), (~ (((((t1.c3)OR(t1.c2)))OR(t1.c3)))) FROM t0;SELECT ALL ((t1.c1 COLLATE BINARY) ISNULL) FROM t0 WHERE ((((((((((('\r>蘼') BETWEEN ('1217771169') AND (0xffffffffe84b3c15)))AND(CASE WHEN x'7dac' THEN NULL WHEN '-708975778' THEN NULL WHEN 1e500 THEN 0.13021452058730287 ELSE 'J!+Sh' END)))AND('or寮6' COLLATE RTRIM)))AND(IFNULL(DISTINCT 0.26201838500016317, 1.14834406E9))))OR(CASE '-1487212139'  WHEN '0.012422752425941597' THEN NULL END)));SELECT ALL COALESCE(NULLIF(t1.c2, t1.c4), ((t1.c1)>=(t1.c2))) FROM t0, t1 INDEXED BY i13 WHERE (((((('')) NOT BETWEEN ((0.43526477949418074)) AND ((NULL))))-(((((0.8417017523622389)OR(0Xffffffff9f3fe1f7)))OR(0.7416325717142849))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((-1195508358))<>((t0.c0)))) FROM t1;SELECT ((CASE t1.c4  WHEN t1.c4 THEN t1.c2 WHEN t1.c4 THEN t1.c3 WHEN t1.c1 THEN t1.c1 ELSE t0.c2 END)>>(GROUP_CONCAT(t0.c0))) FROM t0, t1 LIMIT -2069839619 OFFSET 397345631; -- 0ms;
SELECT DISTINCT (((((x'082c')!=(t0.c0))))<=((0X6e5ba72e))) FROM t1, t0; -- 0ms;
SELECT AVG((t1.c1 IN ())) OVER () FROM t1, t0 WHERE (UNICODE(CAST(x'4297' AS REAL))); -- 1ms;
SELECT ((((((t1.c1) IS TRUE))AND(CAST(t1.c2 AS TEXT))))AND((((''))=((t0.c1))))), CAST(CASE t1.c3  WHEN t0.c1 THEN t1.c4 END AS TEXT), (+ (CAST(t1.c0 AS TEXT))) FROM t0 ORDER BY ((t0.c1)LIKE(((t1.c2) NOT BETWEEN (t1.c0) AND (t0.c1)))) ASC  NULLS LAST;SELECT DISTINCT STRFTIME(TYPEOF(DISTINCT ''), ((t1.c2)>(t1.c0)), TYPEOF(t0.c1)) FROM t1, t0 WHERE (((((0.9582923805804529)==(x'')))IS(((('-2095723930', x'', 0.9550893500252531))<((0.7116208288931835, '6533823471081600385', '-1309028895')))))); -- 0ms;
SELECT ((t1.c1)<>(((((((((t0.c2)AND(t1.c2)))OR(t1.c3)))AND(t1.c3)))OR(-0.0)))) FROM t0, t1; -- 0ms;
SELECT CASE ((x'3174')LIKE(t0.c1))  WHEN (~ (t1.c4)) THEN ((((((((t1.c0)OR(t1.c2)))OR(t0.c0)))OR(t1.c4)))AND(t1.c1)) WHEN TRIM(DISTINCT t0.c1, t1.c2) THEN LOWER(DISTINCT t1.c0) WHEN ((t0.c0)<=(t0.c1)) THEN 0.3191140339540246 ELSE ABS(t0.c1) END FROM t0, t1; -- 0ms;
SELECT CASE WHEN (((t0.c1)) NOT BETWEEN ((t1.c1)) AND ((t0.c2))) THEN ((((t1.c2)OR(t0.c1)))AND(t1.c3)) END FROM t1, t0 WHERE (((((0X79112336)OR(NULL)))AND(NULL)) COLLATE RTRIM) GROUP BY (- ((NOT (t1.c4)))) HAVING '' COLLATE BINARY; -- 0ms;
SELECT ALL (CHANGES() IN (CASE WHEN t0.c0 THEN t1.c1 WHEN t1.c0 THEN t1.c4 WHEN t0.c1 THEN t1.c0 ELSE t1.c4 END)) FROM t1, t0; -- 0ms;
SELECT DISTINCT (+ (t1.c2 COLLATE NOCASE)), (- (t1.c3 COLLATE RTRIM)), t1.c2 FROM t1, t0 GROUP BY CASE WHEN ((t1.c3)|(t1.c4)) THEN CAST(t1.c0 AS NUMERIC) ELSE t1.c2 END ORDER BY (((((((((t1.c4)OR(t1.c2)))AND(x'1167')))AND(t1.c2)))AND(t1.c0)) IN ((((t0.c1)) NOT BETWEEN ((t1.c1)) AND ((t1.c3))))) ASC, ((((t0.c2)AND(t1.c1))) ISNULL) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c2)) BETWEEN ((CASE t1.c1  WHEN 0.8195236256557952 THEN t1.c0 WHEN t1.c2 THEN t1.c1 WHEN t0.c0 THEN t0.c2 ELSE t1.c0 END)) AND ((t1.c3 COLLATE NOCASE))) FROM t0;SELECT DISTINCT CAST(((((t0.c2)OR(t1.c4)))OR(t1.c4)) AS BLOB) FROM t0 WHERE ((+ (MAX('', NULL)))) GROUP BY ((((t1.c0)AND(t1.c3)))OR(t1.c4)) COLLATE RTRIM;SELECT DISTINCT CAST(t1.c2 AS BLOB) FROM t1, t0 WHERE ((NOT (CAST(-2136995201 AS REAL)))); -- 0ms;
SELECT (((((t0.c2, t1.c4, t0.c0)) BETWEEN ((0.4200788768404211, t1.c2, -16643404)) AND (('c>	|', t1.c2, t0.c2)))) IS FALSE) FROM t1 WHERE (CASE TRIM(DISTINCT '0.09840529243903906', NULL)  WHEN (('-606763445')GLOB('6ia')) THEN (('1024284695')|(x'')) END);SELECT DISTINCT ((((t0.c1) NOT NULL))&(CASE t1.c4  WHEN t1.c1 THEN 0.8298332956092058 END)), ((CASE WHEN x'85c3' THEN t0.c1 END)OR(CASE t0.c0  WHEN t1.c1 THEN t0.c2 END)), MIN(((NULL)&(t0.c2))), ((((((t1.c2) BETWEEN (t1.c0) AND ('-2145422599')))AND(((t1.c3) NOTNULL))))AND((t0.c1 IN ()))), PERCENT_RANK() OVER () FROM t1, t0; -- 0ms;
SELECT (((CAST(t0.c2 AS INTEGER)))=(((t0.c2 IN ())))) FROM t1 WHERE (((('GK') NOT NULL) IN ())) LIMIT -212968140;SELECT DISTINCT CASE ((t1.c2) NOT BETWEEN (t0.c1) AND (t1.c4))  WHEN t0.c2 COLLATE RTRIM THEN 'O2' WHEN (((t1.c1))<=((t1.c1))) THEN CASE t1.c0  WHEN t1.c0 THEN 0.735737263417271 WHEN x'' THEN t1.c1 WHEN t1.c3 THEN 0.5989501241076653 WHEN t0.c2 THEN t1.c3 WHEN t0.c1 THEN t1.c4 END WHEN (((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t1.c4))) THEN ((((t0.c2)AND(t1.c4)))AND(t0.c2)) ELSE (((t0.c1, t1.c2, t0.c1)) BETWEEN (('806924067', t1.c3, t0.c0)) AND ((t1.c2, t1.c4, t1.c4))) END, CAST(((t1.c4)<=(t1.c3)) AS REAL), ((((t0.c1 IN (t1.c4, t0.c1))))<>((t0.c1 COLLATE BINARY))) FROM t1;SELECT DISTINCT (((((t1.c4)%(t1.c4)), CAST(NULL AS INTEGER), (((t1.c1)) BETWEEN ((t1.c2)) AND ((t1.c1)))))<(((~ (t0.c2)), t1.c1, (('') IS FALSE)))) FROM t0 WHERE ((+ ((('1323354598') NOT NULL))));SELECT ALL 0.21807632256901932 FROM t0; -- 0ms;
SELECT ALL ((0.013323179696931087) NOTNULL), ((t1.c3) IS FALSE) COLLATE NOCASE, ((((t0.c0) ISNULL)) NOTNULL) FROM t1, t0 GROUP BY NULL, t0.c2, (((~ (t1.c4)))GLOB('154134734')) HAVING (+ ((((t0.c1))<=((t1.c2))))); -- 1ms;
SELECT ALL HEX(LOWER(DISTINCT t1.c4)), (NOT ('863114658')), 0.5447343192360651, ((((t1.c4 COLLATE NOCASE)AND(((t1.c3) NOT BETWEEN (t1.c4) AND (t0.c2)))))AND((((t1.c3, t1.c4, t1.c1, t1.c3, t1.c4))<((t1.c4, t0.c1, t1.c1, t1.c2, t1.c3))))), t0.c1 FROM t0, t1 GROUP BY ((t0.c2) ISNULL) COLLATE NOCASE, ((CAST(NULL AS INTEGER)) IS TRUE), t1.c2; -- 0ms;
SELECT ALL CASE CAST('' AS TEXT)  WHEN (t1.c2 IN ()) THEN (t1.c4 IN ()) END FROM t1, t0 ORDER BY ((CAST(t1.c3 AS TEXT)) IS FALSE) ASC  NULLS LAST; -- 1ms;
SELECT DISTINCT ((t1.c3)GLOB(((t0.c2)&(t1.c2)))) FROM t1, t0; -- 0ms;
SELECT ALL (+ (x'8976')), ((((t1.c2) NOT NULL)) IS TRUE), ((CAST(t0.c0 AS NUMERIC))-((((t0.c2, t0.c0, t0.c0)) NOT BETWEEN ((t1.c3, t1.c2, '')) AND ((t0.c0, t0.c1, t1.c0))))) FROM t1, t0 GROUP BY ((((t1.c4)AND(t1.c0)))OR(((t1.c2) NOT BETWEEN (0.5499140910555523) AND (t1.c0)))); -- 0ms;
SELECT DISTINCT ((((((((CASE t1.c1  WHEN t0.c0 THEN t1.c2 WHEN t0.c1 THEN t1.c3 WHEN t0.c2 THEN t0.c0 ELSE t1.c3 END)AND(0.929198883705384)))AND((~ (t0.c2)))))OR(((('u?㢸E')) NOT BETWEEN ((t1.c1)) AND ((t1.c2))))))OR(((t1.c0)*(t1.c4)))) FROM t1, t0 WHERE ((((~ ('o'))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((UNLIKELY(t1.c2)) NOT BETWEEN (((x'8148') NOT BETWEEN (t1.c0) AND (0.134035415984469))) AND (t0.c0)) FROM t1;SELECT DISTINCT CASE WHEN t0.c2 THEN t0.c2 WHEN t0.c1 THEN '' WHEN t1.c0 THEN t0.c1 ELSE t1.c1 END COLLATE BINARY, (((t0.c0, t1.c1, t0.c2)) NOT BETWEEN ((((((((((((((t1.c1)OR(t1.c2)))OR(t0.c2)))AND(t1.c4)))OR(t1.c4)))AND('SOLs')))AND(t1.c2)), ((t1.c0)=(t1.c1)), (((t0.c0, t0.c1, t1.c0))>((t0.c2, t1.c3, t1.c3))))) AND ((((0.6746264523668597)+(t1.c4)), ((((((((t1.c1)OR(t0.c1)))OR(t1.c2)))AND(t1.c2)))AND(t1.c2)), x''))), (((t1.c4, t0.c0, t1.c1)) BETWEEN (((((t1.c2, t0.c2, t1.c0)) BETWEEN ((t1.c3, t0.c1, t1.c1)) AND ((t1.c3, t1.c3, t1.c2))), (t1.c3 IN ()), t1.c3)) AND ((NULL, ((t1.c2) NOT BETWEEN (t1.c4) AND (t1.c3)), (NOT (0.06182950158735778))))) FROM t1, t0; -- 0ms;
SELECT DISTINCT COUNT(*), CAST(t0.c1 AS REAL) COLLATE RTRIM, CAST(TYPEOF(t0.c0) AS REAL) FROM t0 WHERE (CAST(CAST('I>' AS TEXT) AS INTEGER)); -- 0ms;
SELECT '-1627812447', CASE (+ (t0.c0))  WHEN t0.c1 THEN t1.c1 ELSE t1.c2 COLLATE RTRIM END, ((((t1.c2) ISNULL)) ISNULL) FROM t0 WHERE ((NULL IN (0.2617036825658895 COLLATE BINARY, ((1862125503) ISNULL))));SELECT DISTINCT 0.93267534436194, ((TOTAL(t0.c2))-(x'3e12')), INSTR(CAST(t1.c3 AS NUMERIC), ((t1.c2)<=(t1.c4))) FROM t1, t0 WHERE (CASE ('I_' IN ())  WHEN LIKELIHOOD(0.4567856597355876, 0.5313962903971483) THEN ((NULL)<(' }z	2')) WHEN ('547910387' IN ()) THEN ((-1815191992) NOT BETWEEN (x'9088') AND ('426220457')) WHEN ((((x'')AND(0.2617036825658895)))OR(x'')) THEN CASE WHEN NULL THEN '' ELSE x'' END ELSE ((((1.53745668E9)AND(x'')))AND(1.94801756E9)) END) ORDER BY CASE WHEN '' THEN CASE t1.c1  WHEN t1.c4 THEN t1.c3 END WHEN ABS(DISTINCT t0.c2) THEN ((t0.c2) BETWEEN (t1.c0) AND (t0.c1)) WHEN ((((((((t1.c3)AND(t0.c1)))AND(t0.c0)))OR(t1.c3)))OR(t0.c1)) THEN ((((t1.c1)OR(t1.c3)))OR(t1.c2)) ELSE ((t1.c3) NOT BETWEEN ('446477713') AND (t1.c4)) END  NULLS FIRST, ((t1.c3)AND((((t0.c0))>((t0.c2)))))  NULLS FIRST, CAST(CAST(t0.c0 AS BLOB) AS TEXT); -- 0ms;
SELECT DISTINCT CASE ((t0.c2) BETWEEN (t0.c2) AND (t0.c1))  WHEN x'7afc' THEN GROUP_CONCAT(t1.c1) WHEN STRFTIME(t1.c1, t1.c4, t1.c1) THEN CAST('' AS TEXT) WHEN CASE t1.c4  WHEN t0.c1 THEN t0.c1 END THEN CAST(t0.c0 AS INTEGER) WHEN ((((((((t0.c1)OR(t1.c1)))AND(t1.c4)))OR(t1.c1)))OR(t0.c0)) THEN (t1.c1 IN ()) WHEN t1.c0 COLLATE BINARY THEN CASE WHEN t1.c1 THEN t0.c0 END ELSE ((t1.c2) NOTNULL) END FROM t0, t1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), ((((((((((t1.c3)OR(t0.c0)))AND(NULL)))AND(t1.c2)))OR(t0.c1))) NOT BETWEEN (CAST(t1.c2 AS INTEGER)) AND (CAST(t0.c2 AS REAL))), UNLIKELY(DISTINCT ((t1.c2) NOT BETWEEN (t0.c1) AND (t1.c3))) FROM t0 WHERE ((((x'' COLLATE RTRIM))>((CAST(NULL AS BLOB)))));SELECT ALL ((t0.c2 COLLATE RTRIM)=(COALESCE(t0.c0, t0.c1))) FROM t1, t0; -- 1ms;
SELECT DISTINCT ((((t1.c0 COLLATE BINARY)OR((t0.c1 IN (t1.c1)))))AND(t0.c1)) FROM t1, t0 GROUP BY ((t1.c3)&(t1.c3)) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c0) NOTNULL)) OVER () FROM t0 WHERE (((NULL IN ()) IN (((x'')/(NULL))))); -- 0ms;
SELECT ALL ((((t1.c0) NOT BETWEEN (t0.c1) AND (t1.c4))) NOT BETWEEN (((t1.c2)+(t1.c1))) AND ((- (t1.c3)))) FROM t1, t0 WHERE (4.70244019E8) GROUP BY ((((t0.c1) IS TRUE)) NOT BETWEEN ((t1.c3 IN ())) AND (LENGTH(t0.c1))) HAVING ((COALESCE(DISTINCT t1.c4, t1.c4)) BETWEEN (((t1.c1) BETWEEN (t1.c4) AND (t1.c1))) AND ((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))))); -- 1ms;
SELECT DISTINCT NULL FROM t1 WHERE (((-4.5440977E7 COLLATE NOCASE)IS(((0.7192156196112826) NOT BETWEEN (0.5808791501564574) AND (1502659099))))); -- 0ms;
SELECT ALL CASE ((t0.c0)<(1.043423477E9))  WHEN t1.c2 THEN ((t0.c1) BETWEEN (t1.c1) AND (t1.c3)) ELSE ((t0.c2)OR(t0.c0)) END FROM t1 WHERE (NULL);SELECT ALL CASE WHEN ((t1.c0) BETWEEN (t1.c1) AND (t0.c0)) THEN (t0.c1 IN ()) END FROM t0, t1; -- 0ms;
SELECT DISTINCT (~ (CAST(t1.c2 AS INTEGER))) FROM t0 WHERE ((((x'')) BETWEEN ((((((x'c5c4')OR('970748566')))OR(0.9058196451250742)))) AND ((((((0.14758971321630887)AND('MUFszM|T䲛')))AND('3(S)'))))));SELECT ALL (((t1.c4)) NOT BETWEEN ((CAST(t0.c2 AS INTEGER))) AND ((((t1.c0)OR(t1.c3))))) FROM t0, t1 INDEXED BY i13; -- 1ms;
SELECT DISTINCT (t1.c0 COLLATE RTRIM IN (t1.c4 COLLATE RTRIM, ((t1.c0) IS TRUE))) FROM t1, t0 WHERE (NULL) ORDER BY (NOT ((((t0.c1))<((t1.c1)))))  NULLS LAST; -- 0ms;
SELECT CASE WHEN json_remove(t1.c4, t0.c0, t1.c4, t1.c2) THEN json_extract(t1.c2, t1.c2) ELSE (('-652093102') NOT NULL) END FROM t1, t0; -- 0ms;
SELECT DISTINCT MIN(t1.c1 COLLATE NOCASE, '862268259'), COUNT(*), (((((((t0.c0)AND(t0.c0)))OR(t1.c4)), (((t1.c3, '0b', t1.c0, t0.c0, t1.c1)) NOT BETWEEN ((t1.c1, t0.c2, t1.c3, t0.c0, t1.c2)) AND ((t0.c2, t1.c3, t0.c2, t1.c4, t1.c4))), json(t1.c3)))==((t0.c1 COLLATE RTRIM, ((t1.c3) BETWEEN (t1.c1) AND (t0.c2)), (1352301709 IN (t0.c1))))), CAST(((t1.c1)IS(t1.c3)) AS NUMERIC), (NOT (IFNULL(DISTINCT t1.c1, x''))) FROM t0;SELECT DISTINCT ((t1.c3)GLOB(((0x44edb772)*(x'0094')))) FROM t0 WHERE (SQLITE_SOURCE_ID()) ORDER BY CASE WHEN (- (NULL)) THEN ((t1.c3) NOT BETWEEN (t1.c3) AND (t1.c3)) END  NULLS LAST;SELECT DISTINCT CAST(t1.c2 AS BLOB) COLLATE NOCASE FROM t1; -- 1ms;
SELECT DISTINCT COUNT(((x'9365') BETWEEN (x'') AND (t1.c0)) COLLATE BINARY) OVER (), ((((t0.c1) NOTNULL))%((NOT (t0.c1)))), (((AVG(x'2d2f'), x'', (- (t1.c2))))=(((((t1.c4, t0.c2, t1.c2))<=((t1.c0, t1.c1, t1.c1))), (+ (t1.c3)), NULL))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((((((((((((t1.c2)AND(NULL)))OR(-1804655868)))AND(t0.c1)))OR(t0.c1)))OR(t0.c0 COLLATE RTRIM)))OR(t0.c1 COLLATE BINARY)), -1136440532, ((((((((CASE t1.c1  WHEN t1.c0 THEN t1.c4 ELSE t1.c0 END)AND(LIKELY(t1.c1))))AND((t1.c0 IN (t0.c0)))))OR(CASE WHEN t1.c3 THEN 0X6bdeeff4 END)))OR(((-5.4095445E7)IS(NULL)))) FROM t0, t1 WHERE ((((- (NULL))) NOTNULL)) UNION SELECT DISTINCT (((t0.c2, t1.c4, t1.c1)) NOT BETWEEN ((((((((((t1.c2)AND(t1.c3)))OR(t1.c1)))AND(t1.c0)))OR(t1.c2)), ((t0.c1)||(t0.c0)), 0.013371393519057917)) AND (('-2138276921', CASE WHEN t1.c1 THEN t0.c1 WHEN t0.c1 THEN t1.c4 WHEN t1.c2 THEN t1.c0 END, ((t0.c1) NOT BETWEEN ('497067836') AND (t1.c3))))), SUM('2000397686') OVER (), GROUP_CONCAT(t0.c0) FILTER(WHERE json_extract((((t1.c2, t1.c4, t1.c2)) NOT BETWEEN ((t1.c3, t1.c1, t1.c2)) AND ((t0.c2, t0.c2, t1.c0))), t0.c1, UNICODE(t1.c2), ((((t0.c1)OR(t1.c2)))OR(t0.c2)), ((t0.c0)IS(t1.c3)), (- (t1.c1)))) OVER ( ORDER BY ((CASE t1.c3  WHEN NULL THEN t0.c2 END)IS((- (x''))))  NULLS LAST) FROM t1 LIMIT 1651660886;SELECT DISTINCT CAST(((((((((t0.c2)AND(t0.c0)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) AS REAL) FROM t1, t0; -- 1ms;
SELECT ALL (((((((((((t1.c4)OR(t1.c4)))OR(t1.c2)))AND(t0.c0)))AND(t1.c1))))!=((DATETIME(t1.c1, t0.c2, t0.c2, t0.c1, t0.c0)))) FROM t0, t1; -- 0ms;
SELECT ((CASE t1.c2  WHEN t1.c2 THEN t1.c0 ELSE t1.c1 END)==(COUNT(t0.c1))) FROM t0 WHERE (((((((((((0.012422752425941597) BETWEEN (0.5994207448768366) AND (4.70244019E8)))OR(ABS('QIDUo*a'))))OR(((132312744) IS FALSE))))OR(x'5051' COLLATE RTRIM)))OR(((1.376040668E9) NOT BETWEEN ('+7-.') AND (0.5417210888019839)))));SELECT TOTAL(((((t1.c3)OR(t1.c1)))AND(t1.c2))) FROM t0, t1 ORDER BY ',}힓 b'  NULLS LAST; -- 0ms;
SELECT ((((t1.c1) NOT NULL))>((t0.c1 IN (t0.c0)))), CASE WHEN CASE t0.c1  WHEN t1.c0 THEN t1.c1 END THEN (((NULL)) BETWEEN ((t0.c2)) AND ((t0.c2))) END, (t0.c2 COLLATE NOCASE IN ()) FROM t0 WHERE ((((NULL IN ('-610920880'))) BETWEEN (('aF1ws\[]' IN (x'8fc1'))) AND (CAST(1064632734 AS REAL))));SELECT ALL json_patch(TYPEOF(t1.c1), ((t1.c0) ISNULL)) FROM t1 WHERE (CAST(CASE WHEN x'5d28' THEN 0.11683351587224344 END AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((MIN(t1.c2))OR(CASE WHEN t1.c2 THEN t1.c2 END)) FROM t1, t0 WHERE (CASE WHEN CASE WHEN x'' THEN NULL END THEN (((x'5478')) BETWEEN ((0.1413031604653342)) AND (('-999896346'))) WHEN (0.28414008342030517 IN (0Xffffffffdf50dbd9)) THEN ((((((((0.41342566842256623)OR(0x22bcf8e6)))OR(-5.14897409E8)))AND('-2057014487')))OR(0.1425465072963864)) WHEN '൶' COLLATE BINARY THEN LOWER(0.29153157887632775) ELSE (- ('\r')) END); -- 0ms;
SELECT GROUP_CONCAT(((t0.c0)<<(t0.c1))) OVER () FROM t0 UNION SELECT (((t1.c0)) BETWEEN (((t1.c3 IN ()))) AND ((t1.c0))) FROM t0;SELECT ((((t0.c1, t0.c1, t1.c4))>=((t1.c2, t0.c0, t0.c2))) IN ()) FROM t0, t1 WHERE ((NOT (((NULL) NOT BETWEEN ('-1623203337') AND ('950717825'))))); -- 0ms;
SELECT DISTINCT ((0.8111369468085221) BETWEEN (((t0.c2) IS FALSE)) AND (COUNT(*))), ((((t0.c0) BETWEEN (NULL) AND (91968964)))<<('3')), (+ ((t0.c2 IN ()))) FROM t1, t0 WHERE ((((('-1531026662' IN (x'')), CAST('e(e|k' AS TEXT), CAST(606177686 AS BLOB)))<((((x'')-('')), CAST('795660802' AS NUMERIC), (x'' IN (2.070676972E9)))))); -- 0ms;
SELECT ((t1.c0)GLOB(((t1.c3)-(t0.c1)))) FROM t0;SELECT ALL ((t0.c0) NOT BETWEEN (t1.c1) AND (NULL COLLATE NOCASE)) FROM t1, t0 ORDER BY t1.c4; -- 0ms;
SELECT DISTINCT ((~ (t0.c0)) IN ()), CASE CAST(t1.c0 AS BLOB)  WHEN 0.15429273161115997 THEN '0.3621967417660916' WHEN NULL THEN t0.c2 WHEN CASE t1.c1  WHEN t1.c1 THEN t0.c2 END THEN CASE t0.c0  WHEN t0.c0 THEN NULL END ELSE NULL END, CASE WHEN t0.c0 THEN CASE WHEN t1.c1 THEN t1.c1 WHEN t0.c0 THEN t1.c4 WHEN t1.c0 THEN t0.c2 WHEN t1.c4 THEN t1.c3 WHEN -479261087 THEN t1.c3 WHEN t1.c3 THEN t0.c1 WHEN t0.c0 THEN t0.c2 ELSE x'0529' END WHEN 0xffffffffbcad6814 THEN ((0.2928246564973921) NOT BETWEEN (t1.c0) AND (t1.c3)) WHEN CAST(t0.c2 AS NUMERIC) THEN COUNT(t1.c1) WHEN ((t0.c0) BETWEEN (t0.c1) AND (t0.c2)) THEN 0X337215a2 WHEN '1514366520' THEN (((t1.c4)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) ELSE ((((t1.c1)AND(t1.c2)))AND(t1.c3)) END FROM t0, t1; -- 0ms;
SELECT CAST((- (t1.c3)) AS TEXT), ((TOTAL_CHANGES()) NOTNULL), ((((((((t0.c2)OR(t1.c1)))AND(t0.c1)))OR(t1.c2)))OR(t1.c4)) COLLATE RTRIM FROM t0;SELECT ALL TOTAL(CAST(t1.c2 AS INTEGER)) FROM t0, t1 WHERE (((x'13ed' COLLATE RTRIM)=((('-344315161')+(x''))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0; -- 0ms;
SELECT DISTINCT SUM(((t1.c1)||(t0.c0)) COLLATE NOCASE) FROM t1, t0 WHERE (SQLITE_VERSION()) ORDER BY PRINTF(ABS(DISTINCT t0.c0), ((t1.c2)GLOB(t1.c3)), t0.c2 COLLATE NOCASE)  NULLS LAST, CAST(((t1.c3) IS FALSE) AS REAL) DESC  NULLS FIRST, CASE (((t1.c3)) NOT BETWEEN ((x'')) AND ((t1.c3)))  WHEN ((t1.c3)|(t1.c1)) THEN ((t0.c1) BETWEEN (t0.c2) AND (t1.c1)) END ASC  NULLS LAST; -- 1ms;
SELECT CAST(((t1.c0) NOT BETWEEN (t0.c1) AND (t0.c1)) AS BLOB), TOTAL(-2.09572393E9) COLLATE RTRIM, CASE ((t0.c0) IS TRUE)  WHEN ((((((((t0.c0)OR(t1.c0)))AND(t1.c1)))OR(t0.c1)))OR(t1.c1)) THEN ((t1.c0) IS TRUE) ELSE COALESCE(DISTINCT t1.c4, t1.c2) END FROM t0;SELECT TOTAL(t1.c0) OVER () FROM t1, t0 WHERE (((0.5486719483261759)%(x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((t1.c1)<(t1.c1)))LIKE(CASE t1.c3  WHEN t1.c0 THEN t1.c4 ELSE t0.c0 END)) FROM t0, t1 WHERE ((((('-434438629')LIKE(0.7309061172471212)))%('	<*%4-u띜X' COLLATE RTRIM))); -- 0ms;
SELECT ALL ((t1.c3)GLOB((0.7228169448787463 IN ()))), (('-1126184443')LIKE(CAST(t0.c0 AS TEXT))), CASE WHEN TOTAL(t0.c0) THEN ((((t1.c4)AND(t1.c0)))AND(t1.c1)) END FROM t0, t1; -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c2 THEN t0.c1 ELSE t1.c2 END) BETWEEN (((t1.c3) NOTNULL)) AND (MIN(t1.c2))) FROM t0;SELECT SUM(((t0.c0) IS FALSE)) FROM t0 WHERE (CASE 1.008721775E9  WHEN '-927573375' THEN x'' WHEN x'3ea9' THEN x'ad0e' WHEN '1762458207' THEN '0.44684634951487334' ELSE x'' END COLLATE NOCASE); -- 0ms;
SELECT CAST((t1.c3 IN ()) AS TEXT) FROM t1 WHERE (CASE WHEN '-1788844385' COLLATE RTRIM THEN ((x'') NOTNULL) END); -- 0ms;
SELECT t0.c0, ((((((t0.c0)AND(t0.c0)))AND(t1.c2)))>=(((t1.c4) IS FALSE))), CAST((((t1.c4, t1.c1, t1.c2))>=((t1.c2, t1.c2, t0.c2))) AS BLOB), (((t0.c2)) BETWEEN ((t0.c0)) AND ((((t1.c4)IS NOT(t1.c0))))), MAX(((t1.c4)LIKE(t0.c0))) FROM t0;SELECT ALL ((((UNLIKELY(DISTINCT t0.c1))AND(((t1.c2) BETWEEN (t0.c2) AND (NULL)))))AND(HEX(t0.c2))) FROM t1, t0 WHERE (((0.27310911929658443 IN (x'68cc')) IN ())) ORDER BY ((CAST(t1.c0 AS INTEGER)) NOTNULL), CAST(((t1.c1)GLOB(t0.c1)) AS REAL); -- 0ms;
SELECT MIN(((t0.c0) NOTNULL)) FROM t0, t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT TYPEOF(DISTINCT t0.c0)) FROM t1, t0 WHERE (((((((((0.7249981217127675)OR(x'')))OR(NULL)))AND(0.7571792316596124 COLLATE NOCASE)))AND(CHAR(NULL, 0x651ed80, NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN 0.8239387231004823 COLLATE RTRIM THEN t0.c2 ELSE CAST(t1.c0 AS TEXT) END FROM t0, t1 WHERE (((((((((((((0xfffffffff7b38444)AND(0.21987086240962073)))AND(0.8761170233934721)))OR('1045264739' COLLATE NOCASE)))AND(NULL COLLATE BINARY)))AND((((0.3214836451532297))<((x''))))))OR((('5- rQ')+(NULL))))) LIMIT -1246502881 OFFSET 1982135001; -- 0ms;
SELECT DISTINCT ((t1.c4 COLLATE BINARY) IS FALSE) FROM t0, t1 GROUP BY ((((((t1.c4)|(t1.c2)))AND((- (t1.c0)))))OR(((t1.c2)>(t1.c1)))), t1.c4, ((((t1.c4)GLOB(t1.c3)))==((t1.c0 IN ()))), t1.c4, ((CAST(t1.c2 AS BLOB)) BETWEEN (((t1.c4) NOT BETWEEN (t1.c2) AND (t1.c2))) AND (NULL)); -- 0ms;
SELECT DISTINCT ((((t0.c2) IS TRUE))OR(((t0.c0)<=(t0.c0)))) FROM t1, t0 WHERE (CAST(CASE WHEN 0.30121460041830195 THEN ' jX02' END AS INTEGER)) GROUP BY CASE ((t1.c2) ISNULL)  WHEN (NOT (t1.c2)) THEN (t1.c4 IN (t1.c0, t1.c2)) ELSE ((t1.c0)OR(t1.c3)) END, CAST(CASE t1.c2  WHEN x'4a2d' THEN t1.c1 ELSE t1.c0 END AS NUMERIC), (((t0.c2)) NOT BETWEEN (((- (x'')))) AND ((((t1.c4)LIKE(t1.c2))))) HAVING ((CASE t1.c3  WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN t0.c2 WHEN t1.c1 THEN t1.c0 ELSE t0.c0 END)>(t0.c2)); -- 0ms;
SELECT DISTINCT NTH_VALUE((- (x'a92a')), t0.c0) OVER () FROM t1, t0 ORDER BY (- (CAST(t1.c1 AS REAL))), (((((t1.c3))>((t0.c1))))<((t0.c1 IN (t1.c1)))) DESC;SELECT DISTINCT t1.c4 FROM t1 WHERE (2.44265257E8); -- 0ms;
SELECT DISTINCT IFNULL(((((t1.c2)OR(t0.c2)))OR(t1.c0)), (+ (t1.c0))), CASE WHEN (t1.c3 IN ()) THEN t1.c4 COLLATE RTRIM ELSE ((t0.c0)>>(t1.c2)) END, (((~ (t0.c1)))>>(((t1.c0)||(t0.c2)))) FROM t0, t1; -- 0ms;
SELECT ALL t0.c2 COLLATE RTRIM, CASE WHEN ((t1.c4)AND(t1.c1)) THEN 1.417801163E9 END, t1.c3 FROM t1;SELECT ALL TRIM(DISTINCT NULLIF(t1.c3, t1.c4)) FROM t0, t1; -- 0ms;
SELECT DISTINCT '\rCM' FROM t1; -- 0ms;
SELECT t1.c3 FROM t0 WHERE ((NOT (((NULL) NOT BETWEEN (x'') AND (x'')))));SELECT t1.c1, RTRIM((t1.c3 IN (t0.c0, t1.c1))), (((((t1.c2, t1.c1, x'')) NOT BETWEEN ((t1.c2, t1.c3, t1.c0)) AND ((t1.c2, t1.c0, t1.c0)))) IS FALSE) FROM t0 NOT INDEXED, t1 GROUP BY LIKELIHOOD(CASE t1.c3  WHEN t1.c1 THEN t1.c1 WHEN t1.c4 THEN t1.c2 WHEN t0.c0 THEN t0.c2 WHEN t1.c3 THEN t0.c2 WHEN t0.c2 THEN t1.c4 ELSE t1.c1 END, 0.8134800569327983), ((((((((((t1.c3)AND(0.09974355799097068)))OR(0.5068722915097393)))OR(t1.c0)))AND(t0.c2))) NOT BETWEEN (((t0.c1) ISNULL)) AND (UNLIKELY(t0.c2))), t0.c1 LIMIT -1502996348 OFFSET 1023425407; -- 1ms;
SELECT ALL ((RTRIM(t1.c1)) NOTNULL), ((t0.c0) NOTNULL) COLLATE NOCASE, t0.c1 FROM t1 WHERE (LOWER(((x'3675') ISNULL))) UNION SELECT 0.6405272324658231, (~ (((t1.c2) NOT BETWEEN (t1.c4) AND (t0.c1)))), COUNT(CASE NULL  WHEN t1.c3 THEN t1.c3 ELSE t1.c2 END) FROM t0 WHERE ((NOT ((+ (0.8541081343203101))))) LIMIT 1370939149;SELECT DISTINCT ((((t1.c2) NOTNULL))*(((t1.c1)!=(t1.c1)))), t1.c3, CASE 0Xffffffffb4cc724a  WHEN t1.c1 THEN t0.c1 WHEN t1.c0 THEN t1.c4 WHEN t1.c4 THEN t0.c1 ELSE t1.c2 END COLLATE NOCASE FROM t0;SELECT DISTINCT ((t1.c4 IN ()) IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0 WHERE (x'2341'); -- 0ms;
SELECT DISTINCT (((t0.c0) BETWEEN (t1.c3) AND (t0.c0)) IN ()) FROM t0, t1 GROUP BY LOWER(DISTINCT (t1.c3 IN (t1.c3, t0.c2))) HAVING ((t1.c3 COLLATE BINARY)AND((((t0.c2))>=((t1.c0))))); -- 0ms;
SELECT DISTINCT t1.c3 FROM t0 WHERE ((((('쌏q')OR(''))) BETWEEN (CASE WHEN NULL THEN x'' ELSE '1758736714' END) AND (((NULL) NOT BETWEEN ('474061421') AND (NULL)))));SELECT '0.2626808959423276', ((((((((((((t1.c1)OR(t1.c4)))OR(t1.c2)))OR(867946766)))AND(t1.c2)))AND(((t1.c2)==(t1.c2)))))AND(json_remove(t1.c1, t1.c4))), (((((t1.c3 IN ()))AND((((t1.c2))<=((t0.c2))))))AND(((t0.c0)IS NOT(t0.c1)))) FROM t1 INDEXED BY i13 WHERE (CAST(((((0.9068736580591981)OR(x'f815')))OR(0x24277255)) AS TEXT)) GROUP BY ((t1.c0)<<(t1.c1)) COLLATE BINARY COLLATE RTRIM HAVING '1795619739'; -- 0ms;
SELECT LIKE(((t0.c0)|(t1.c0)), SUM(t1.c4), '+'), (((t1.c3, t0.c2, t1.c4)) BETWEEN ((CASE t1.c2  WHEN t1.c0 THEN t1.c3 WHEN t1.c0 THEN t1.c1 WHEN t0.c0 THEN t1.c3 ELSE t0.c2 END, CASE WHEN 0.6236109959839522 THEN t1.c4 END, (~ (t1.c4)))) AND (((((t1.c3)) BETWEEN ((t1.c2)) AND ((t1.c4))), TRIM(t1.c2, t0.c0), t1.c1))), ((((((((t0.c2 COLLATE BINARY)AND((('-151429148') ISNULL))))AND(COUNT(*))))AND('-952685861')))OR(((t1.c3) IS TRUE))), (((((t0.c0, t1.c1, t1.c1))<>((t1.c4, t1.c1, t1.c2))))OR((+ (t1.c1)))), t1.c0 FROM t1, t0; -- 0ms;
SELECT DISTINCT '' COLLATE RTRIM, COUNT(*) OVER (), ((t1.c2)>>(t1.c4)) COLLATE BINARY FROM t1, t0 WHERE (((((((((((0.38847239716559534)*(1.840141891E9)))OR(x'')))OR((NOT ('0bck❱hg')))))AND(NULL COLLATE BINARY)))AND(0.4887314827571878 COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((t1.c0 COLLATE BINARY)>>(t1.c2 COLLATE NOCASE)) FROM t0, t1 LIMIT -1788844385; -- 0ms;
SELECT DISTINCT ((((t1.c2)) NOT BETWEEN ((t0.c1)) AND ((t1.c1))) IN ()) FROM t1 ORDER BY 862715407  NULLS FIRST;SELECT ALL ((t1.c3)&((((t0.c1, t0.c0, '534650860'))<((t0.c1, t0.c0, t1.c4))))), NULL, ((((((t0.c2))<=((t1.c0))), CAST(t0.c1 AS NUMERIC), -3.5516088E7))<=((((t0.c1)IS(t1.c3)), MIN(t1.c1), 'e5skv3ᷛZ'))) FROM t1;SELECT DISTINCT (AVG(t1.c0) IN (t1.c2 COLLATE RTRIM, ((t0.c0) BETWEEN (t1.c4) AND (t1.c0)))) FROM t0;SELECT DISTINCT CASE 0Xffffffffedcb5e13  WHEN t1.c3 THEN t0.c1 END COLLATE NOCASE FROM t1 WHERE (CAST(TRIM(2114719383) AS TEXT));SELECT ALL LAG('P', CAST(((t1.c2)/(t1.c3)) AS REAL), CASE SQLITE_COMPILEOPTION_GET(t1.c1)  WHEN t1.c0 THEN ((t1.c4)<(t1.c3)) WHEN ((t1.c3)<(t1.c1)) THEN CASE WHEN t1.c4 THEN 0.9000900133893013 END WHEN (((t1.c3, t1.c2, t1.c1, t1.c1, t1.c1)) BETWEEN ((t1.c4, t1.c1, t1.c3, t1.c0, t1.c3)) AND ((t1.c1, t1.c1, t1.c3, t1.c2, t1.c0))) THEN ((t1.c4)AND(t1.c1)) ELSE (((t1.c3, t1.c3, t1.c3)) BETWEEN ((t1.c4, t1.c0, t1.c2)) AND ((t1.c0, '1064632734', t1.c4))) END) OVER (), (NOT (((t1.c3)/(t1.c4)))), '1645080121' FROM t1 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT '0.7416325717142849' FROM t1; -- 0ms;
SELECT ALL ((((((t0.c0) NOT BETWEEN (t1.c4) AND (t1.c0)))AND(CASE t1.c1  WHEN t0.c2 THEN t1.c1 END)))OR(CASE '-1e500'  WHEN NULL THEN t1.c3 ELSE t1.c0 END)) FROM t0, t1 GROUP BY ((((t0.c0 COLLATE NOCASE)OR(((NULL) BETWEEN (t0.c1) AND (t0.c2)))))AND((((t0.c2, t0.c1, t0.c2)) BETWEEN ((t1.c4, t0.c0, NULL)) AND ((t1.c2, t0.c2, t1.c3))))); -- 1ms;
SELECT ALL (((t1.c4)) BETWEEN ((GROUP_CONCAT(t1.c4))) AND ((((t1.c2) NOT BETWEEN (t1.c4) AND (t0.c1))))), ((((t0.c2) NOT BETWEEN (t1.c1) AND (t1.c4))) BETWEEN (COUNT(t0.c2)) AND (CAST(t1.c3 AS TEXT))), (+ (t1.c0)) COLLATE RTRIM FROM t0, t1; -- 0ms;
SELECT ALL ((((json_remove(t1.c1, x'7a81'))OR(('-514897409' IN ()))))OR(CASE WHEN t1.c2 THEN x'' ELSE t1.c3 END)) FROM t1, t0 ORDER BY ((((t0.c0)==(t0.c1)))LIKE(((t1.c0)IS(t1.c0)))) DESC  NULLS LAST LIMIT 1480802571 OFFSET -1735204070;SELECT DISTINCT t0.c0 FROM t0, t1 WHERE ((((x'7aad' IN (0.2617036825658895))) NOT BETWEEN (((x'')%(x''))) AND ((+ ('yH'))))); -- 0ms;
SELECT DISTINCT CASE TOTAL(t0.c0)  WHEN (t0.c1 IN (t0.c1)) THEN t1.c2 COLLATE RTRIM END FROM t1;SELECT t1.c2 FROM t1 INDEXED BY i13, t0; -- 0ms;
SELECT ALL UPPER(DISTINCT (((t1.c4)) BETWEEN ((t1.c1)) AND ((t0.c1)))), ((((x'')*(t0.c2)))LIKE(json_array(t0.c1, t1.c4, t0.c2, t0.c1))), MIN(CASE WHEN t1.c4 THEN t0.c1 ELSE t0.c1 END), FIRST_VALUE(LOWER(((t1.c4)OR(t0.c0)))) OVER (), DENSE_RANK() OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT SUM(CASE t0.c2  WHEN t0.c0 THEN t1.c2 ELSE t1.c2 END) FROM t1, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (((t0.c2))==((t0.c2))) THEN TOTAL(t0.c1) ELSE ((((((((t0.c1)AND(t1.c3)))AND(t1.c1)))OR(t0.c2)))AND(t1.c0)) END, (((~ (t1.c2))) NOT NULL), t0.c0 FROM t1 WHERE (0xffffffffed01e353);SELECT ((NULL) IS TRUE) FROM t1; -- 0ms;
SELECT DISTINCT t1.c4, ((((((((t0.c0)OR(CASE WHEN x'' THEN t1.c1 END)))AND((+ (t1.c3)))))OR(((t1.c1) NOT BETWEEN (t1.c0) AND (t1.c1)))))AND((((t1.c4))>=((t1.c2))))), ((((NULL COLLATE RTRIM)AND((t1.c1 IN (t1.c4)))))OR(CAST(-916718298 AS REAL))) FROM t1, t0; -- 0ms;
SELECT DISTINCT ((t1.c3 COLLATE RTRIM)|(CAST(t1.c3 AS TEXT))) FROM t1 WHERE (((UNLIKELY(DISTINCT 1.591354946E9)) NOT BETWEEN (CASE WHEN NULL THEN 348912551 WHEN '0.021170543381616835' THEN '706319459' WHEN 0.35911988746571877 THEN '!&' END) AND (NULL COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((((((t1.c1) IS TRUE))AND(((t1.c2)OR(t0.c1)))))AND((x'bd1f8399' IN ()))) FROM t0, t1; -- 0ms;
SELECT DISTINCT COUNT(((x'') BETWEEN (t0.c2) AND (NULL))), TOTAL(((((((((t0.c0)AND(t1.c3)))OR(t1.c3)))AND(t0.c1)))OR(t1.c4)) COLLATE BINARY), LAST_VALUE(((((t1.c0)) BETWEEN ((t1.c3)) AND ((t1.c4))) IN ())) OVER () FROM t1;SELECT TOTAL((t1.c4 IN ())) FILTER(WHERE CAST(UPPER(DISTINCT t0.c2) AS NUMERIC)) OVER (), CASE WHEN (NOT (t0.c0)) THEN ((t0.c0) BETWEEN (t0.c2) AND (0.9526295004019919)) END, ((((((((((((t0.c2)AND(t1.c3)))AND(t1.c0)))OR(t0.c0)))AND(t1.c0)))AND(t1.c1)))OR(t1.c0)) COLLATE NOCASE FROM t0, t1 WHERE ((((((((-1616997405)AND(0.7429758177291993)))AND(NULL))))<>((((0.3363951718955326) BETWEEN (0X4895b6a1) AND (0Xffffffffdbd5864b)))))); -- 0ms;
SELECT ALL TYPEOF(DISTINCT MAX(t1.c1)) FROM t0, t1 WHERE ((((((-0.0 IN ()))AND((NULL IN (0x2a922e1f)))))AND(((x'')*('863114658'))))) INTERSECT SELECT ALL ((UNICODE(t1.c1))IS(((((t0.c1)OR(t0.c2)))OR(0.04550596246553362)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT (((AVG(t0.c0), CAST(t1.c3 AS INTEGER), t0.c1))>((t0.c2, CASE t1.c2  WHEN t1.c0 THEN t1.c3 ELSE t1.c1 END, UNLIKELY(NULL)))) FROM t1, t0 WHERE (CASE (- (NULL))  WHEN (((0.4703141672604847)) BETWEEN (('-544023930')) AND (('Se+zBdZᇦ앆'))) THEN CASE WHEN 0.9752027554031063 THEN x'' WHEN '2032606186' THEN -1599037741 WHEN '쩆' THEN '-1697462670' ELSE -5.4095445E7 END END); -- 0ms;
SELECT 0.7014623395036477 FROM t1, t0 WHERE (CAST(NULL AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT t0.c1 FROM t1, t0 WHERE (((((NULL) IS FALSE))IS NOT((0.7043775781070986 IN ())))); -- 0ms;
SELECT ALL (MAX(t1.c0) IN ()) FROM t1 LIMIT -2040667024 OFFSET -1531026662; -- 0ms;
SELECT DISTINCT CAST(t0.c2 AS REAL) COLLATE BINARY, ((((t1.c0)IS(t1.c2))) IS TRUE), ((NULL)+((t1.c2 IN ()))) FROM t1 WHERE (CHAR((-1324088553 IN ()))) GROUP BY (((((t1.c0, t1.c4, t1.c0, t0.c2, t0.c2))>=((t1.c1, t1.c3, t1.c0, t0.c2, t1.c2))))IS NOT('|]')), CAST(CASE WHEN t0.c1 THEN t0.c0 ELSE t1.c2 END AS REAL), (((x''))<>((t0.c0))) COLLATE BINARY;SELECT ALL ((CASE t0.c1  WHEN t1.c2 THEN t0.c1 ELSE t1.c3 END) BETWEEN (GROUP_CONCAT(NULL)) AND (((((t1.c1)OR(t0.c0)))AND(t0.c0)))), (((((t0.c2)-(t1.c3))))!=((((((t1.c0)OR(t0.c1)))AND(t1.c0))))), (~ ((((t0.c2))>=((t1.c0))))) FROM t1 GROUP BY (((((((((((t1.c4)AND(t1.c4)))AND(t0.c1)))OR(t0.c2)))OR(t0.c0))))>=(((~ (t1.c3))))) ORDER BY ((((t1.c4)OR(((x'')OR(t1.c1)))))AND(CASE t1.c2  WHEN x'' THEN t0.c0 WHEN t1.c3 THEN t0.c2 WHEN t1.c3 THEN t1.c1 END)) DESC  NULLS FIRST;SELECT ALL (('904643451') NOT NULL), t0.c1, CASE CASE t0.c0  WHEN t0.c2 THEN t1.c4 ELSE t0.c0 END  WHEN ((t0.c2)IS(t1.c3)) THEN CASE t0.c1  WHEN t1.c3 THEN t0.c0 WHEN t1.c3 THEN t1.c3 WHEN t1.c2 THEN t1.c0 ELSE t1.c4 END WHEN AVG(t1.c4) THEN TIME(t1.c0, t1.c3, t1.c3, t1.c1, t1.c1) WHEN ((t0.c0) NOT NULL) THEN ((t1.c4) BETWEEN (t1.c2) AND (1972352149)) ELSE (t0.c2 IN (t1.c3)) END FROM t0, t1 NOT INDEXED; -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(t0.c2 COLLATE NOCASE) FROM t1 GROUP BY (+ ((t0.c2 IN ()))), ((((((((t0.c0)AND(t1.c2)))OR(x'bd13')))AND((((((((('!}?#Q')AND(t1.c0)))OR(t0.c1)))OR(t1.c3)))OR('-464975704')))))AND(((t1.c2)<(t1.c3)))), (CASE t0.c1  WHEN t0.c2 THEN t1.c3 END IN ((+ (t1.c4)), CAST(6.8410155E7 AS BLOB)));SELECT DISTINCT ((((((t0.c2)AND(t0.c2)))OR(t0.c2)))/((t1.c1 IN ()))) FROM t0 WHERE (CASE WHEN (('!	NF2t')=(NULL)) THEN (x'' IN ()) END) ORDER BY x'0ddc' COLLATE BINARY DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (~ (CAST(t0.c1 AS BLOB))) FROM t1, t0; -- 0ms;
SELECT (((((t0.c0, t1.c0, t1.c2))==((t0.c2, t1.c3, t0.c0))))IS(CASE WHEN t0.c0 THEN t0.c2 END)) FROM t1, t0 ORDER BY 0.9486822072587063  NULLS FIRST; -- 0ms;
SELECT ALL t0.c2 FROM t0 WHERE (LOWER(DISTINCT CAST(NULL AS TEXT))); -- 0ms;
SELECT DISTINCT CAST(((t1.c4) NOT NULL) AS TEXT) FROM t1 WHERE ((-1.641915755E9 COLLATE BINARY IN (CAST(0X711feb38 AS TEXT)))); -- 0ms;
SELECT DISTINCT t1.c2, (((t0.c1)>(t1.c0)) IN ()), CAST(((t1.c2) IS TRUE) AS BLOB) FROM t1 WHERE ('-1616997405'); -- 0ms;
SELECT ((CASE t1.c4  WHEN t0.c1 THEN t0.c1 END)IS NOT((((t0.c1))<>((t0.c1))))) FROM t1;SELECT COALESCE(DISTINCT (('869220937') NOT BETWEEN (t0.c2) AND (-675977507)), 0.7265044978063928) FROM t1 INTERSECT SELECT (((t0.c1)) NOT BETWEEN ((t0.c1 COLLATE BINARY)) AND ((((((t0.c2)AND(t1.c1)))OR(t1.c4))))) FROM t1 WHERE ((((((((((((((((('+')OR(0xffffffff97154711)))OR(NULL)))AND(x'')))AND(0.20878354539663613)))OR(x'')))OR(x'')))AND(0x79a4faf1)))OR(NULL)) COLLATE RTRIM);SELECT ((t1.c4)>>(((((0xffffffffe16287b3)AND(0.2786627899536084)))OR(NULL)))), CAST(t0.c2 AS NUMERIC) COLLATE BINARY, GLOB(GROUP_CONCAT(t0.c2), CASE WHEN t1.c0 THEN t1.c4 WHEN t1.c0 THEN t1.c2 WHEN t1.c2 THEN t0.c1 WHEN t1.c4 THEN t0.c0 WHEN t1.c0 THEN t0.c2 ELSE t1.c4 END) FROM t1, t0 WHERE ((((0.9067849367486721) IS FALSE) IN ())) GROUP BY (((((x''))>=((t1.c3))))IS(IFNULL(DISTINCT '', 0.6679283241105567))) HAVING ((GROUP_CONCAT(0.026953576433442206))!=((~ (t0.c0)))); -- 0ms;
SELECT DISTINCT x'' FROM t1, t0 WHERE (x'45ab'); -- 1ms;
SELECT ALL x'' FROM t0, t1; -- 0ms;
SELECT ALL COUNT(*), PERCENT_RANK() OVER ( ORDER BY '1588435867'), LAG((((((t1.c4)) NOT BETWEEN ((t1.c4)) AND (('KwO*b*I'))))%(CAST(t1.c0 AS NUMERIC))), (((NOT (t0.c0))) ISNULL), (((0X79271bea IN ()))>>(CASE WHEN t1.c0 THEN t0.c1 WHEN t1.c1 THEN t0.c2 WHEN t1.c2 THEN t0.c0 ELSE t0.c1 END))) OVER ( ORDER BY (((((((('3w')OR(t0.c1 COLLATE RTRIM)))AND((+ (t1.c3)))))OR((t1.c1 IN ()))))AND(CAST(x'ab3c' AS REAL)))) FROM t1, t0; -- 0ms;
SELECT ALL ((((((t1.c1)OR(t0.c2)))AND(t1.c2)))IS NOT((('-1757117926')/(t1.c1)))) FROM t0 WHERE (0.1732861214960537);SELECT (((((t1.c0))<=((t1.c1))))*((t0.c0 IN (t0.c1, t0.c1)))), MIN(0.07013238778202979), CAST(((t1.c3) BETWEEN (t0.c0) AND ('1Ḭeu41Nd')) AS TEXT) FROM t0, t1 WHERE (LIKELIHOOD(((NULL) NOT BETWEEN (x'') AND (NULL)), 0.8018474547091657)); -- 0ms;
SELECT ALL (0.6425569950966106 IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT t1.c4 FROM t1, t0; -- 0ms;
SELECT GLOB(((t1.c1) IS TRUE), ((t0.c0)<=(t0.c0))) FROM t1, t0; -- 0ms;
SELECT DISTINCT (((((t1.c3, t0.c1, t1.c3, t0.c0, t0.c0)) BETWEEN ((t1.c1, t1.c2, t1.c3, t1.c4, t0.c1)) AND ((t0.c0, t1.c2, t0.c1, t1.c4, t1.c2)))) BETWEEN (t0.c2 COLLATE RTRIM) AND ((+ (t1.c3)))), COUNT(((t1.c3) NOT BETWEEN (t1.c3) AND (t1.c0))), TYPEOF(DISTINCT '-54095445') FROM t0, t1 WHERE (x''); -- 0ms;
SELECT DISTINCT AVG((t1.c0 IN ())) OVER () FROM t1, t0 GROUP BY (((t1.c0)) NOT BETWEEN ((t1.c1)) AND ((((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c2))))) HAVING (((- (t1.c4)))*((NOT (0.23120570421069664)))); -- 0ms;
SELECT DISTINCT (t0.c1 COLLATE NOCASE IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT LAG(((t1.c1 COLLATE NOCASE) BETWEEN (((t1.c0) IS FALSE)) AND ((((t1.c3))==(('397345631'))))), ((((((t1.c1)AND(t1.c0)))AND(t1.c0)))&((((t1.c1))<((t1.c1))))), t1.c2) OVER () FROM t1 WHERE (((((0.9484202892018881) BETWEEN (0.353755700602317) AND (x'')))AND('1043423477' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (((t1.c1)-(t1.c4)) IN (CAST(t0.c2 AS INTEGER), t1.c0 COLLATE NOCASE)) FROM t0 WHERE (LOWER(((0.8326587338912278) BETWEEN ('3616860') AND (0Xffffffffa93162cb))));SELECT DISTINCT (((((((((NOT (t1.c0)))OR(t0.c0 COLLATE NOCASE)))AND((~ (t0.c1)))))AND(t1.c1 COLLATE BINARY)))AND(((((t1.c3)AND(x'')))AND(t0.c2)))) FROM t0;SELECT DISTINCT ((((((t0.c2)OR(t1.c1)))AND(t1.c2))) NOT BETWEEN (t1.c0 COLLATE BINARY) AND ((NOT (t1.c1)))) FROM t0, t1 WHERE (x'b3b7') ORDER BY (((t1.c2)) NOT BETWEEN (((+ (t1.c3)))) AND ((NULL COLLATE NOCASE)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT -1659687362 FROM t0, t1; -- 0ms;
SELECT ALL ((t1.c4) IS FALSE) FROM t1 LIMIT 950717825 OFFSET -1771337962; -- 1ms;
SELECT ALL MIN((((t1.c4, t1.c4, t1.c0))<>((t0.c0, t0.c2, t1.c0))), ((t0.c0)|(t1.c0)), (+ (t0.c2)), ((t1.c4)<(t1.c4))) FROM t0 WHERE ((((- (x'85f3')))OR(CASE 0.30042675996515  WHEN 2.108947884E9 THEN NULL WHEN 0x1069607a THEN NULL WHEN -7.57146745E8 THEN x'' WHEN 0.8997236021536981 THEN x'a4db' WHEN 0X15ab12c8 THEN 0X3bfbd545 WHEN '91968964' THEN x'' WHEN 'vaz\' THEN x'da7f' END)));SELECT ((t1.c4) IS TRUE) FROM t0;SELECT DISTINCT -1.531026662E9 FROM t0, t1 WHERE (((((('0.9053461448911245')AND(']x&	it\Uc')))AND(0.6237920616092878)) IN (((0.7892500197276461) BETWEEN (NULL) AND (NULL))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t1 WHERE ((((((((((((0.30096174553477384)OR('988859221')))OR(9.84321381E8)))AND(x'57cd')))AND(0.4463115333392116))))=((((NULL)==('-481463201')))))); -- 0ms;
SELECT DISTINCT (- (((t1.c2) IS TRUE))), (((((t1.c1))=((t1.c1))))*((((t0.c1))<((t0.c0))))), TRIM(DISTINCT QUOTE(t1.c2), json_extract(t0.c0, t1.c1, t1.c0, t0.c2, t1.c2, t0.c2)) FROM t0, t1; -- 0ms;
SELECT DISTINCT COUNT(((t0.c1) NOT BETWEEN (t0.c0) AND (t1.c4))) OVER ( ORDER BY CASE t1.c3  WHEN t1.c1 THEN t1.c1 END COLLATE BINARY DESC  NULLS LAST) FROM t1, t0; -- 1ms;
SELECT DISTINCT AVG(LOWER(t1.c1)) FROM t1 WHERE ((((((('') NOT NULL))AND(x'')))AND((('') NOTNULL)))) GROUP BY (NOT (((t1.c3)<(t0.c1)))), (((((t0.c2))<((t0.c1))))+(t1.c2)), CAST((t0.c0 IN (t0.c0)) AS TEXT) HAVING TIME(MAX(t1.c0), t0.c2, ((((t0.c0)AND(t1.c1)))AND(t1.c2)));SELECT (NULL IN ()) FROM t0, t1 WHERE (0.8795276272983474); -- 0ms;
SELECT DISTINCT ((CASE t1.c4  WHEN t1.c2 THEN '-1222552429' WHEN t0.c2 THEN t0.c0 WHEN t1.c2 THEN t1.c4 ELSE t1.c3 END) ISNULL), '590004775', (- (CASE t1.c3  WHEN t0.c1 THEN t1.c2 ELSE t1.c1 END)), (((+ (t0.c2)))*('-213178228')), (((t1.c0 IN ()))>(((((t0.c2)OR(t0.c0)))AND(t1.c4)))) FROM t1 WHERE ((+ (((x'') BETWEEN (0.9430911620849515) AND (NULL)))));SELECT DISTINCT CAST(((t0.c1) NOT BETWEEN (t1.c1) AND (t0.c2)) AS INTEGER) FROM t0, t1; -- 0ms;
SELECT CASE WHEN ((t1.c0)<=(t0.c2)) THEN '' END, CAST(t1.c1 AS INTEGER), SUM(((t1.c2) BETWEEN (t1.c0) AND ('EI#110a&'))), t1.c4, (t1.c0 IN ()) COLLATE BINARY FROM t1, t0 WHERE ((+ (0xffffffffc037d3ee)) COLLATE BINARY); -- 1ms;
SELECT (((t1.c2)) NOT BETWEEN (((NOT (t1.c1)))) AND ((((t1.c0) BETWEEN (t1.c3) AND (t1.c3))))) FROM t1 WHERE ((NOT (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL (((((t1.c1)-(t0.c0))))>=((t1.c1 COLLATE BINARY))) FROM t0;SELECT ((((t1.c4) NOT BETWEEN (t0.c2) AND (t1.c2))) NOT BETWEEN (((t0.c2) NOT BETWEEN (t1.c4) AND ('1417801163'))) AND (CASE t1.c1  WHEN t1.c0 THEN t0.c2 ELSE t0.c0 END)) FROM t1;SELECT DISTINCT ((t0.c0)OR(t1.c1 COLLATE RTRIM)), SUM(((t1.c0)/(t0.c0))) OVER ( RANGE  CURRENT ROW), TOTAL(((t1.c1) BETWEEN ('&B8\뼲DNm') AND (t1.c3))) FROM t1 WHERE ((~ (CAST(x'df78' AS REAL)))) LIMIT -45440977 OFFSET 1513424254;SELECT ((((t1.c1) BETWEEN (t0.c2) AND (t0.c1))) NOT BETWEEN (CASE t0.c0  WHEN t1.c3 THEN t1.c3 END) AND (COUNT(*))), GROUP_CONCAT(SQLITE_COMPILEOPTION_GET(t0.c0)), GROUP_CONCAT((t0.c1 IN ())) OVER () FROM t1 WHERE (((((CASE WHEN x'3377' THEN NULL WHEN 0.10626946320515573 THEN '' WHEN NULL THEN NULL END)OR(x'' COLLATE NOCASE)))OR(GLOB('^?', NULL))));SELECT DISTINCT AVG(((t0.c0) NOTNULL)), ((CAST(t0.c1 AS REAL)) NOT BETWEEN (MAX(t1.c1)) AND (t0.c0)), '1862125503' FROM t0, t1 WHERE ((('-1822055809')LIKE((((('')OR(-1226632412)))AND('-434438629'))))); -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t1.c4)) AND ((t1.c3)))) NOT BETWEEN (CAST(t0.c2 AS INTEGER)) AND (((t0.c0)/(t0.c1)))), LAG(CAST(((t1.c3) BETWEEN (t1.c4) AND (t1.c0)) AS REAL), (CAST(t1.c4 AS TEXT) IN ()), ((((t0.c0) ISNULL)) BETWEEN (json_object(t1.c0, t0.c1)) AND ((((t0.c2)) NOT BETWEEN ((t1.c2)) AND ((t1.c0)))))) OVER (), AVG(((t1.c4) BETWEEN (t0.c1) AND (t0.c1))) FROM t0, t1 WHERE ((((0.24792151835132759 IN ())) BETWEEN (776830350 COLLATE RTRIM) AND (((x'a6a4ce1a')LIKE(NULL))))) LIMIT 1756010303;SELECT DISTINCT t0.c2 FROM t1, t0 WHERE ((('-1681822927' COLLATE NOCASE) BETWEEN ((('') BETWEEN ('590004775') AND (','))) AND (((NULL) NOT BETWEEN (x'26f0') AND (867946766))))); -- 1ms;
SELECT DISTINCT (((((t0.c0)AND(t1.c1)))AND(t0.c2)) IN ()) FROM t1, t0 WHERE ((- (((x'ec5a') NOTNULL)))); -- 0ms;
SELECT COUNT(*) FROM t1 GROUP BY (((((t0.c0)AND('397345631')))OR(t0.c0)) IN ()), CAST(t1.c3 AS INTEGER) COLLATE BINARY, t1.c1 HAVING CASE ((t1.c0)!=(t1.c3))  WHEN ((((((((t0.c2)AND(t1.c2)))OR(t1.c4)))OR(t0.c0)))OR(t1.c3)) THEN CASE t1.c1  WHEN 0.3621967417660916 THEN t0.c2 END END;SELECT (('')>((NOT (t1.c3)))) FROM t0, t1 WHERE ((((NULL IN ()))&(TYPEOF(DISTINCT 0.8794835939619525)))); -- 0ms;
SELECT CASE t1.c4 COLLATE NOCASE  WHEN ((((t0.c0)OR('')))OR(t1.c3)) THEN ((NULL) NOT NULL) ELSE ((((((((t1.c2)OR(t1.c1)))AND('')))OR(t1.c1)))OR(t1.c1)) END FROM t0 WHERE (CAST(json_insert(0.0023331187720855295, x'', '-333215331') AS BLOB)) GROUP BY CASE WHEN (- (t1.c3)) THEN 0Xffffffff974189dd ELSE ((t1.c1) BETWEEN (t0.c0) AND (t0.c0)) END HAVING ((((+ (t1.c4)), ((t1.c2) NOT NULL), ((t1.c2) ISNULL)))>=((((t1.c4)>(t0.c2)), ((t0.c2) BETWEEN (t0.c0) AND (t1.c4)), MIN(t0.c0, t1.c3)))) ORDER BY ((LIKELY(DISTINCT t1.c2))<=((t1.c3 IN (t1.c4)))), CAST(((t0.c1)||(t1.c4)) AS REAL);SELECT TOTAL_CHANGES(), (((((t0.c2)>=(t1.c1))))<((((t0.c2) BETWEEN (t1.c3) AND (t1.c2))))), ((t1.c3 COLLATE NOCASE) IS FALSE) FROM t0, t1 ORDER BY NULL, ((((t1.c3 IN ())))<>((((t0.c0)<>(t1.c3))))), json_insert(1.811363649E9, ((t1.c0) BETWEEN (-596442991) AND (t1.c4)), t1.c2 COLLATE BINARY, NULLIF(6533823471081600385, NULL), '' COLLATE BINARY) DESC  NULLS FIRST;SELECT ALL ((MAX(t0.c0)) NOT BETWEEN (((((t1.c4)OR(NULL)))OR(t1.c0))) AND (UPPER(DISTINCT t1.c1))) FROM t0;SELECT ALL 5.78115316E8, ((CASE WHEN t0.c0 THEN t0.c2 END)>(((0.5596786493750576)>(t1.c1)))), ((t0.c0) IS TRUE) FROM t0;SELECT (((((x'') BETWEEN (t1.c1) AND (t1.c0))))!=((NULLIF(DISTINCT -1.132721072E9, '(#㏆iFT莝+')))) FROM t0, t1 WHERE (((CAST(-1848477191 AS BLOB))&(JULIANDAY(136289206, 0.31598329533799097, 0.37686449240327813)))); -- 1ms;
SELECT DISTINCT LAG((((t1.c4))>=((t1.c4))) COLLATE NOCASE COLLATE NOCASE, ((t1.c3 COLLATE RTRIM) NOTNULL), ((CASE 0x79271bea  WHEN t0.c0 THEN t0.c0 WHEN t1.c3 THEN t0.c2 WHEN t0.c1 THEN t1.c3 END)|(t1.c4))) OVER (), AVG(((t1.c0)AND(t0.c0))), t1.c4, t1.c2, (('-1672887133')>((NOT (t0.c1)))) FROM t0, t1 ORDER BY x'' DESC  NULLS FIRST, LIKE(CAST(t0.c1 AS NUMERIC), CAST(t1.c2 AS NUMERIC)) ASC  NULLS LAST LIMIT 1001009961 OFFSET -1901385238; -- 0ms;
SELECT ALL CASE (- (t1.c3))  WHEN t0.c2 THEN (((t0.c1))=((1480319951))) END, ((t0.c0) BETWEEN (t1.c3) AND (t1.c4)) COLLATE RTRIM, GROUP_CONCAT((- (t1.c2))) FROM t0;SELECT ALL CAST(CASE WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c4 WHEN t1.c3 THEN t1.c0 ELSE t0.c2 END AS BLOB) FROM t1, t0 GROUP BY ((((t1.c3) NOT BETWEEN (0xffffffffd5bde35e) AND (t1.c0)))IS NOT('463142406')), ((0.6425569950966106)<<(((t1.c0) IS FALSE))), NULL HAVING ((((((((t1.c3)OR(t0.c1)))OR(t1.c0)))OR(t0.c0)))AND(t0.c1)) COLLATE RTRIM; -- 0ms;
SELECT ALL (((t1.c4, t1.c3, t1.c4)) BETWEEN (((NOT (t1.c1)), MAX(t1.c3), (((t1.c2)) NOT BETWEEN ((t1.c1)) AND ((t0.c0))))) AND ((((((t1.c2)AND(t0.c2)))AND(t1.c0)), (NOT (t1.c0)), ((t1.c1) BETWEEN (t1.c2) AND (NULL))))) FROM t1 GROUP BY CAST(t1.c0 COLLATE NOCASE AS NUMERIC) HAVING t1.c1;SELECT DISTINCT 107039274 FROM t1, t0 WHERE (((((('_{t{06.'))=((NULL))))AND('-1567810245'))); -- 0ms;
SELECT DISTINCT SUM(json_valid(t1.c1)) FROM t1, t0; -- 0ms;
SELECT DISTINCT (- ((+ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN t1.c0 THEN t1.c0 ELSE t1.c1 END)AND((t1.c1 IN ()))))OR(t1.c0)))OR(((t1.c4)||(t1.c4)))))OR(((t1.c2) BETWEEN (t1.c2) AND (t0.c0)))) FROM t1 WHERE ((((((((((('1937221463')OR(NULL)))OR(x'')))AND(NULL)))OR('')))||(-1.7976931348623157E308 COLLATE BINARY)));SELECT ((t0.c2 COLLATE NOCASE)||(((t1.c1)<<('68410155')))) FROM t1, t0 WHERE (((+ (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((CASE WHEN t0.c2 THEN t0.c2 ELSE t1.c2 END)AND(t0.c1)))OR(((t1.c0)IS NOT(t1.c3)))) FROM t1, t0 LIMIT -1567810245 OFFSET -1041564844; -- 0ms;
SELECT DISTINCT SUM(t1.c1) OVER () FROM t0, t1; -- 1ms;
SELECT ((x'f102') IS FALSE) FROM t1; -- 0ms;
SELECT DISTINCT CASE ((((t0.c0)AND(t0.c0)))AND(t1.c4))  WHEN ((t1.c3)<=(t1.c0)) THEN t0.c2 COLLATE RTRIM END, (+ (NULL)), t1.c0 FROM t1 WHERE ((('-35516088') NOTNULL) COLLATE RTRIM);SELECT DISTINCT -1820574995, ((t0.c2) NOT BETWEEN (CAST(t0.c1 AS NUMERIC)) AND ((((t1.c2)) NOT BETWEEN ((t1.c0)) AND ((t1.c3))))), ((CASE WHEN t1.c3 THEN t1.c4 END)<=((NOT (t1.c4)))) FROM t1 LIMIT 466665400;SELECT DISTINCT (('0.5740755593023236')||(t0.c2)) COLLATE RTRIM FROM t1 WHERE ((((('0.9029299685936222')>=(x''))) NOT BETWEEN (CASE '-1762921124'  WHEN 0x4f6fc8e7 THEN x'12df' ELSE 0.0011273332658117141 END) AND (NULL)));SELECT ALL (((t1.c0, t1.c1, t0.c2)) NOT BETWEEN ((CASE NULL  WHEN t1.c4 THEN t1.c0 END, (t0.c1 IN (t1.c3, t0.c2)), ((t0.c1) NOT BETWEEN (t1.c0) AND (t0.c0)))) AND ((TYPEOF(DISTINCT t1.c1), t1.c0 COLLATE RTRIM, (t1.c1 IN (t0.c0, t0.c0))))), ((TRIM(t1.c2, t1.c0)) IS FALSE), (- (MIN(t1.c0))) FROM t1, t0; -- 1ms;
SELECT DISTINCT FIRST_VALUE((- (LOWER(DISTINCT t0.c2)))) OVER () FROM t1, t0 WHERE (((((NULL) NOT BETWEEN ('1836980059') AND (''))) IS FALSE)); -- 0ms;
SELECT DISTINCT x'', ((SQLITE_COMPILEOPTION_GET(t1.c4)) BETWEEN (((t1.c3)GLOB(t1.c3))) AND (CASE WHEN t0.c0 THEN t1.c0 ELSE t0.c1 END)), CAST(((((((((t1.c1)OR(t0.c2)))AND(t0.c2)))OR(t0.c2)))AND(t1.c3)) AS NUMERIC) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((t0.c1 IN ()) IN ()) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((0.10524368930514916)/(NULL)))) AND ((((((x'')AND(NULL)))AND(0.9454296029143084)))))); -- 0ms;
SELECT DISTINCT ((((((((((t1.c3)OR(t1.c2)))AND(t0.c2)))AND(t0.c1)))OR(t1.c1)))OR(((NULL) ISNULL))) FROM t0 WHERE (((-1.616997405E9) NOT BETWEEN (417670523) AND (x'')) COLLATE NOCASE);SELECT DISTINCT TRIM(DISTINCT '589324537' COLLATE RTRIM, ((((((((t1.c3)OR(t0.c2)))OR(t1.c1)))AND(t1.c2)))OR(t1.c1))), ((CASE WHEN t1.c4 THEN t1.c0 ELSE t0.c1 END)<(((((((((t1.c2)AND(x'')))AND(t1.c1)))AND(t1.c2)))AND(t1.c3)))), ((((((t0.c0)>(t0.c1)))OR(((((((((t0.c0)AND(t0.c0)))OR(t0.c2)))AND(t1.c2)))AND(t1.c1)))))AND(((t0.c2)<(t0.c0)))) FROM t0, t1 WHERE ((((x'9319' COLLATE NOCASE))>=((((('5a', '-307251260', '%M')) NOT BETWEEN ((x'a217', 0Xffffffffc00a42d9, 0.9936916286010526)) AND (('-1567810245', -606763445, '2075410686'))))))) GROUP BY (((((NULL))>=((1012211384))))-(((t1.c1)|(t0.c1)))) HAVING ((~ (t1.c3)) IN ()); -- 1ms;
SELECT ALL TOTAL(MAX(x'')) FROM t0 WHERE (CAST(((NULL) NOTNULL) AS REAL));SELECT DISTINCT COUNT(((t1.c0) NOT BETWEEN (t1.c1) AND (t0.c2))) FROM t0 WHERE (((((0.23785511036600127)>(NULL))) NOT NULL));SELECT (~ (SUM(t1.c1))) FROM t1; -- 0ms;
SELECT DISTINCT LIKELY(DISTINCT ((t1.c2)/(t1.c3))) FROM t1, t0; -- 0ms;
SELECT ALL ((((((((CAST(t0.c0 AS REAL))AND(t1.c0 COLLATE NOCASE)))OR(((t0.c1)*(t0.c1)))))AND(((((t1.c4)OR(0.6257871957720366)))OR(t1.c2)))))AND(MAX(t1.c2))) FROM t0 WHERE ((NOT ('2081244081')));SELECT ALL (((((+ (0.7769960928623106)))AND(CAST(t1.c4 AS NUMERIC))))OR(((((t1.c3)OR(t0.c1)))OR('0.6257871957720366')))) FROM t1, t0 LIMIT -804895202 OFFSET 1148344060; -- 0ms;
SELECT ((((((((((0.5582356053531052)*(t0.c1)))OR(((t1.c0) NOT BETWEEN (x'') AND (t1.c3)))))AND(t0.c1 COLLATE BINARY)))OR(((((t0.c0)OR(t1.c1)))OR(t1.c1)))))AND(((t1.c1)LIKE(t0.c2)))) FROM t0 ORDER BY (('pI') BETWEEN (((t1.c4) NOT BETWEEN (t0.c0) AND (t1.c3))) AND ((t1.c3 IN ()))) DESC  NULLS FIRST LIMIT -1591023614;SELECT ALL ((t0.c1 COLLATE NOCASE)AND(NULL)) FROM t1 WHERE (ABS((('2091640341')>=(0Xffffffffdb961650)))) GROUP BY (NOT ((((t1.c2, t1.c2, t1.c2, t0.c1, t1.c4)) BETWEEN ((t0.c2, t1.c3, t1.c3, t1.c1, t0.c2)) AND ((t1.c3, t0.c2, t0.c2, '', t0.c1))))) HAVING ((((t0.c2) NOT BETWEEN (t1.c3) AND (t0.c2))) NOTNULL);SELECT DISTINCT CAST(((t1.c0)IS NOT(t0.c0)) AS BLOB), t1.c4, DENSE_RANK() OVER ( ORDER BY (t1.c0 IN (t1.c3, t1.c0)) COLLATE BINARY ASC  NULLS FIRST) FROM t1, t0; -- 1ms;
SELECT AVG((t1.c1 IN ())) FILTER(WHERE CASE WHEN CAST(x'45e5' AS TEXT) THEN ((x'') BETWEEN (t1.c2) AND (x'8efd')) ELSE t1.c0 END) OVER () FROM t0 WHERE (0.990007291861815);SELECT DISTINCT ((CASE t1.c1  WHEN t1.c4 THEN t0.c0 WHEN t1.c2 THEN t1.c2 WHEN t1.c3 THEN t0.c1 END) NOTNULL) FROM t0 WHERE (((('i-' IN ()))!=((~ (0Xffffffffc95bfd26)))));SELECT DISTINCT NTILE(t1.c1 COLLATE NOCASE) OVER ( ORDER BY (((t1.c1, t0.c0, t1.c1)) BETWEEN (((~ (x'5775')), 0.3395336523024124, (t1.c4 IN ()))) AND ((CAST(t1.c4 AS NUMERIC), ((t1.c2)>=(t1.c1)), (t0.c1 IN (t1.c1))))) DESC  NULLS FIRST GROUPS ((((t1.c3)=(t0.c0))) ISNULL) PRECEDING) FROM t0, t1 WHERE (TRIM((NULL IN (NULL)))) ORDER BY ((((t1.c0) IS TRUE))&(CASE WHEN t1.c3 THEN t1.c4 ELSE t1.c4 END)); -- 0ms;
SELECT MAX(t0.c1) COLLATE NOCASE FROM t1;SELECT DISTINCT COUNT((t1.c1 IN ())) FROM t1, t0; -- 0ms;
SELECT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT ALL CASE t1.c2  WHEN ((t1.c1)!=(t1.c4)) THEN t0.c2 COLLATE RTRIM END FROM t1, t0; -- 0ms;
SELECT ((CASE t1.c1  WHEN t1.c4 THEN t0.c1 WHEN t1.c1 THEN t0.c0 WHEN t0.c2 THEN t1.c0 END)>(((t0.c2) NOTNULL))) FROM t1 WHERE (CASE WHEN 0.1310847422354784 THEN x'' END COLLATE BINARY);SELECT (t1.c0 IN (t1.c1)) COLLATE RTRIM COLLATE NOCASE, x'', ((((t0.c2) NOTNULL))<=(LIKELIHOOD(DISTINCT t0.c2, 0.2534580038554155))) FROM t1;SELECT (+ (((t0.c1) IS TRUE))) FROM t1 WHERE ((((((('')AND('-1623203337')))OR('-1096064423')))/(0.5269112409751597 COLLATE RTRIM))) LIMIT -1132721072 OFFSET 1996244574;SELECT DISTINCT '1372185904' COLLATE RTRIM FROM t0 NOT INDEXED, t1; -- 0ms;
SELECT (((t1.c4 IN ())) NOT BETWEEN (t1.c1) AND (((t1.c4)GLOB(t0.c0)))) FROM t1 WHERE (((((-5.4095445E7) NOT BETWEEN ('9\nd?') AND (0x56f69f46)))LIKE((('d')LIKE(8.63114658E8)))));SELECT '' FROM t1, t0; -- 0ms;
SELECT GROUP_CONCAT((((t1.c0, t1.c4, t0.c0))<((t0.c0, t1.c2, t0.c0)))) OVER () FROM t0, t1 WHERE ((('1148344060' IN ()) IN ())); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0; -- 0ms;
SELECT DISTINCT NULL FROM t1 WHERE ((((((('1417801163')OR(x'')))AND(0xffffffffd1423d78))) BETWEEN ((~ (0.9860870359925767))) AND ((('綂i')&('^}'))))) GROUP BY ((- (t1.c1)) IN (0.4768305989286834, (('-143062128') NOT NULL))) HAVING CAST(t1.c1 AS BLOB) ORDER BY t1.c2  NULLS LAST, (t0.c2 COLLATE BINARY IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t0, t1 WHERE ('0.12908806615823187' COLLATE BINARY); -- 0ms;
SELECT ALL (((((t0.c0, t1.c1, t0.c0))>=((t1.c1, x'', t1.c1))))=(CAST(t1.c0 AS NUMERIC))), (((t1.c0 IN ()))<(((t1.c0) BETWEEN (t1.c1) AND (0.22581786458703257)))), '' FROM t0 WHERE ((('480047118')AND(NULL)) COLLATE RTRIM);SELECT (('6IA')>=((((t1.c1)) NOT BETWEEN ((t0.c1)) AND ((t1.c3))))), TYPEOF(DISTINCT t1.c1) COLLATE NOCASE, x'5fea' FROM t0 WHERE (((+ (NULL)) IN (HEX(NULL))));SELECT ALL t0.c2 FROM t1 WHERE (NULL);SELECT DISTINCT (((t1.c3, t0.c2, t0.c0)) BETWEEN ((t1.c4, t1.c0, t0.c1)) AND ((t0.c2, t1.c2, t1.c1))) COLLATE RTRIM FROM t0, t1 INDEXED BY i13 WHERE (((0.8502849186171968 COLLATE BINARY)-(CASE WHEN 0.07467810487156423 THEN x'56f0' ELSE 0.5555519357673321 END))); -- 1ms;
SELECT ALL CASE WHEN (t1.c4 IN ()) THEN NULL END, UNLIKELY(((t0.c1) NOT BETWEEN (NULL) AND (t0.c2))), ((CAST(t1.c4 AS REAL))%(((t0.c0)&(t0.c2)))) FROM t1 WHERE (PRINTF(('1352301709' IN ())));SELECT NTILE(((t1.c4) NOT BETWEEN ((t1.c0 IN ())) AND (((t1.c0) NOT BETWEEN (t1.c4) AND (t1.c1))))) OVER (), ((SUBSTR(t0.c2, t1.c3))==((NOT (t1.c2)))), RANK() OVER () FROM t1;SELECT TOTAL(((t1.c1) NOT BETWEEN (t1.c4) AND (t0.c2))), ((t1.c4 COLLATE BINARY) BETWEEN (((t0.c0)LIKE(t0.c0))) AND (MIN(t1.c4))), (((t1.c4, t0.c0, t1.c2)) BETWEEN ((CASE t1.c4  WHEN t1.c1 THEN t0.c1 WHEN t1.c0 THEN 'FALSE' WHEN t0.c0 THEN t0.c2 ELSE t0.c0 END, ((((t0.c0)OR(t1.c3)))OR(t1.c2)), (t1.c2 IN (t1.c1)))) AND (((t0.c2 IN ()), ((t0.c2) BETWEEN (t0.c2) AND (t1.c0)), NULL))) FROM t0, t1 ORDER BY json_array_length(((t0.c2) NOTNULL)) ASC; -- 0ms;
SELECT DISTINCT (((+ (t1.c4)))<=(((t1.c0)==(t1.c3)))) FROM t1, t0; -- 0ms;
SELECT ALL COUNT(((t1.c0) NOT BETWEEN (t0.c1) AND (t0.c0))) FILTER(WHERE ((((t0.c1)<(t0.c1)))IS NOT(CAST(t1.c2 AS INTEGER)))) OVER () FROM t0 LIMIT 806924067;SELECT (CAST(t1.c3 AS INTEGER) IN (((t1.c2)+(t1.c0)))) FROM t0;SELECT ((0x6593ba8b)<(((t0.c1) ISNULL))) FROM t1, t0 EXCEPT SELECT DISTINCT (((((t1.c3) NOTNULL)))>((t1.c1 COLLATE RTRIM))) FROM t0 WHERE (CASE WHEN 0X62359ee8 THEN (((('-307251260')OR(NULL)))OR(x'ffac')) END);SELECT ALL (+ ((+ (t0.c1)))) FROM t1, t0; -- 0ms;
SELECT DISTINCT NTH_VALUE((NULL IN (CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c2 THEN t1.c4 WHEN t0.c2 THEN t1.c3 ELSE t0.c2 END, ((((((((t1.c1)AND(t1.c2)))OR(t0.c0)))OR(t0.c2)))AND(t1.c1)))), (((t1.c4 IN (t1.c4))) IS TRUE)) OVER (), GLOB(((t1.c0) BETWEEN (t1.c3) AND (NULL)), CAST(t1.c1 AS NUMERIC)), ((COUNT(t0.c2))<<(x'')) FROM t1, t0 NOT INDEXED WHERE (CAST('' AS TEXT));SELECT (0.6232299364529241 IN ()) FROM t1 WHERE (((((0.07730847447631828)IS NOT(0.6240727639804186))) NOT NULL)); -- 0ms;
SELECT DISTINCT CAST(COUNT(*) AS INTEGER) FROM t1; -- 0ms;
SELECT (((t1.c4, t0.c0, t1.c0)) NOT BETWEEN ((t1.c3 COLLATE BINARY, CAST(t0.c1 AS BLOB), MIN(t1.c2))) AND ((((t1.c2)AND(0.26519518185321955)), ((t0.c0)+(t1.c4)), CASE WHEN x'' THEN t1.c2 WHEN t0.c0 THEN t1.c4 WHEN t1.c0 THEN t1.c4 ELSE t1.c1 END))) FROM t1, t0 NOT INDEXED; -- 0ms;
SELECT (((- (t1.c2)))>>((((t1.c1))<((t0.c2))))) FROM t1, t0 WHERE ((((NULL IN (-675210415)))GLOB((('') BETWEEN (x'') AND (0X7fffffffffffffff))))); -- 0ms;
SELECT ALL 0.14308050209670864 COLLATE NOCASE, t1.c3, t1.c0 COLLATE NOCASE FROM t0, t1 WHERE ((((('l ') IS FALSE)) NOTNULL)); -- 0ms;
SELECT ALL CAST(((((t0.c2)OR(t1.c4)))AND(t0.c1)) AS TEXT) FROM t1;SELECT ALL (x'6491' IN ()) FROM t0; -- 0ms;
SELECT TOTAL(((x'f9fc') BETWEEN (t1.c3) AND (x''))) OVER ( RANGE BETWEEN UNLIKELY(((t1.c0) NOT BETWEEN (t1.c2) AND (t0.c1))) PRECEDING AND (((((t1.c1)AND(t1.c0)))AND(t0.c0)) IN ()) FOLLOWING) FROM t1, t0 WHERE (((((1.982135001E9) IS TRUE))*(('7抎' IN ())))) LIMIT -469828435;SELECT (((((t0.c2))!=((t0.c2)))) ISNULL), ROW_NUMBER() OVER (), (+ (CAST(t1.c1 AS BLOB))) FROM t0 INNER JOIN t1 ON ((HEX(DISTINCT t1.c3)) ISNULL); -- 0ms;
SELECT TOTAL(((t0.c0)<=(t1.c0)) COLLATE NOCASE) FROM t0;SELECT COUNT(*) FROM t1 WHERE (CASE WHEN (((NULL)) BETWEEN ((x'a7f5')) AND ((NULL))) THEN (('246562294')/('1064632734')) END); -- 0ms;
SELECT ALL IFNULL(DISTINCT (t1.c1 IN ()), ((t1.c4) IS FALSE)) FROM t0, t1 WHERE ((('-1528007379') ISNULL)); -- 0ms;
SELECT ALL CASE t1.c2  WHEN (t1.c4 IN ()) THEN (~ (t0.c0)) ELSE CAST(t0.c1 AS REAL) END FROM t0, t1; -- 0ms;
SELECT DISTINCT DATE((((t1.c1, t1.c0, t0.c2))!=((t0.c1, t1.c1, t1.c2))), ((((((((t0.c2)AND(t1.c3)))AND(t0.c0)))AND(t1.c1)))OR('tv8Qn')), (t0.c0 IN ())), NULL COLLATE BINARY, t0.c2 FROM t0, t1; -- 1ms;
SELECT DISTINCT ('1148344060' IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN (((t1.c4))=((NULL))) THEN LIKELY(t1.c1) END, (+ (((t1.c4) ISNULL))), ((((NULL)AND(((t1.c0) BETWEEN (t0.c2) AND (t0.c0)))))OR((('VP') BETWEEN (t1.c1) AND (t1.c4)))) FROM t1, t0; -- 0ms;
SELECT (((TOTAL(t1.c1), ((t1.c2)GLOB(t0.c1)), ((t1.c3)|(t1.c1)), (t1.c2 IN ()), ((t1.c4)|(NULL))))==((((t0.c1) BETWEEN (t0.c1) AND (t1.c4)), CAST(t0.c2 AS INTEGER), CAST(t1.c0 AS REAL), ((t0.c2)LIKE(t1.c4)), ((t1.c1) NOT BETWEEN (t1.c0) AND (0.9909942715150684))))) FROM t1, t0 INDEXED BY i13;