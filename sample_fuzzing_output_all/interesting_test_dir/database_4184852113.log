-- Time: 2024/06/07 21:51:54
-- Database: database13
-- Database version: 3.40.0
-- seed value: 4184852113
PRAGMA cache_size = 50000; -- 7ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED); -- 1ms;
CREATE TEMP TABLE IF NOT EXISTS t1 (c0 INTEGER , c1 BLOB , c2 REAL ); -- 0ms;
UPDATE OR REPLACE t1 SET (c0)=(NULL); -- 0ms;
UPDATE vt0 SET c0=NULL; -- 0ms;
UPDATE OR ROLLBACK vt0 SET c0='-0.0'; -- 0ms;
REINDEX BINARY; -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
PRAGMA main.automatic_index; -- 1ms;
INSERT INTO vt0(vt0, rank) VALUES('automerge', 13); -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t1 SET c0=x'' WHERE 0X7100317c; -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=('1895838076'); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
INSERT INTO vt0(vt0) VALUES('rebuild'); -- 0ms;
PRAGMA reverse_unordered_selects; -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0); -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
INSERT OR IGNORE INTO t1(c2, c1) VALUES (NULL, NULL); -- 0ms;
REINDEX; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0)=(1101155987) WHERE (((vt1.c0) IS TRUE) IN (CASE vt1.c0  WHEN vt1.c0 THEN vt1.c0 END)); -- 0ms;
UPDATE OR REPLACE t1 SET (c1, c2)=(NULL, 0.6372519829859341) WHERE CASE WHEN '4K练 쑼wRrㅼ' THEN '\nT' COLLATE RTRIM END; -- 1ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, c5, c6); -- 1ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA automatic_index = true; -- 0ms;
PRAGMA optimize; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 15); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '23187'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '33561'); -- 0ms;
INSERT INTO vt0(vt0, rank) VALUES('usermerge', 4); -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c2=0xbdcc47c WHERE (((((t1.c2)) BETWEEN ((t1.c1)) AND (('\nt'))))>>((+ (t1.c0)))); -- 0ms;
ANALYZE main; -- 1ms;
INSERT OR ABORT INTO vt1(c0) VALUES (199017596); -- 0ms;
UPDATE OR IGNORE vt0 SET (c0)=(''); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=(NULL) WHERE ((((rt0.c6) IS FALSE)) NOTNULL); -- 0ms;
UPDATE OR IGNORE vt1 SET c0='1 ]>4I' WHERE ((((((vt1.c0)OR(x'4aef')))AND(vt1.c0))) IS TRUE); -- 0ms;
REINDEX BINARY; -- 0ms;
REINDEX NOCASE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE vt0 SET (c0, c0)=(0.6063604947505999, 0.8850962554997895); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('automerge', 5); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 10); -- 0ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
PRAGMA ignore_check_constraints = true; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -586031883);\n; -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '31356'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '11246'); -- 0ms;
INSERT INTO vt0(vt0) VALUES('integrity-check'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t1(c0, c1) VALUES ('1895838076', 0x38e11cf2); -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO vt0 VALUES (NULL); -- 1ms;
COMMIT; -- 0ms;
UPDATE rt0 SET c0=x''; -- 0ms;
INSERT OR IGNORE INTO t1(c0, c1, c2) VALUES (NULL, 'E5C/_⵴A', '88TKt?>5'), (x'', x'', 0.8207533813034074), (0xffffffffc1723ee8, NULL, -5.86031883E8), (NULL, '0.8850962554997895', NULL), ('', NULL, x''); -- 0ms;
DROP TABLE IF EXISTS vt0; -- 0ms;
SELECT rtreecheck('rt0'); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (NULL), (NULL); -- 0ms;
UPDATE OR ABORT rt0 SET c4='954277106'; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 4); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1792474663); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 1ms;
INSERT INTO vt1(vt1, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 12); -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
END TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 3ms;
PRAGMA threads; -- 0ms;
ANALYZE; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
CREATE VIEW v0(c0) AS SELECT DISTINCT ((rt0.c2 IN (rt0.c5)) IN ()) FROM rt0 WHERE (((((-1049477400) BETWEEN (NULL) AND ('0.6063604947505999')))|(((x'6a243160') NOT BETWEEN (0.9585519503472537) AND (0.7476530496040208))))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE rt0 SET c0='g5'; -- 0ms;
REINDEX NOCASE; -- 1ms;
PRAGMA main.optimize; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=0.3478758908532653 WHERE CASE WHEN ((rt0.c0)+(0.7476530496040208)) THEN (NOT ('s8dv练gby')) END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.default_cache_size = 787710555; -- 0ms;
PRAGMA integrity_check; -- 0ms;
UPDATE OR ROLLBACK t1 SET (c1)=(NULL); -- 0ms;
UPDATE OR FAIL vt1 SET c0=0.8207533813034074; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR ABORT vt1 SET c0=0.8850962554997895, c0=''; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('crisismerge', 1585413286); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '65405'); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('usermerge', 6); -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', -627678056);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('integrity-check'); -- 0ms;
INSERT OR REPLACE INTO vt1(c0) VALUES ('1764959529'); -- 0ms;
ROLLBACK TRANSACTION; -- 4ms;
PRAGMA journal_mode = MEMORY; -- 0ms;
CREATE INDEX IF NOT EXISTS i16 ON t1(x'',(((((- (c0)))OR(c1 COLLATE BINARY)))AND(((c0) NOT BETWEEN (NULL) AND (c1)))) DESC,CASE (((c2))<((c2)))  WHEN ((c0)-(c1)) THEN UNICODE(c2) END DESC); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.cache_spill; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA soft_heap_limit = 0; -- 0ms;
UPDATE OR IGNORE t0 SET (c1)=('now') WHERE (((t0.c0 IN ())) NOT BETWEEN (((t0.c2) BETWEEN (t0.c2) AND (t0.c1))) AND (((t0.c0)>(t0.c1)))); -- 1ms;
INSERT INTO vt1(vt1) VALUES('optimize'); -- 0ms;
REINDEX i16; -- 0ms;
REINDEX; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES ('v'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('merge', 787710555);\n; -- 0ms;
INSERT INTO vt1(vt1) VALUES('rebuild'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE t0 SET c1='g5', c1=-1769577652 WHERE LTRIM((NOT (t0.c0)), t0.c1); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT rt0.c4 FROM vt1 WHERE (((((((x'')>=(x'')))OR((('')AND(4992372.0)))))AND(((((((((NULL)OR('V')))AND(0.8850962554997895)))AND(NULL)))AND(0.07638014620246403)))));SELECT ALL CAST(((rt0.c0)>>(t0.c0)) AS REAL), (- (rt0.c3 COLLATE RTRIM)), 0.6063604947505999 FROM v0, rt0, t0; -- 0ms;
SELECT ALL (QUOTE(v0.c0) IN (((rt0.c5)-(rt0.c0)))) FROM vt1, rt0, t0;SELECT DISTINCT ((((rt0.c3)AND(vt1.c0)))OR(t0.c1)) COLLATE BINARY FROM v0, vt1, rt0 WHERE (CAST(((NULL)=('')) AS BLOB));SELECT ALL (vt1.c0 COLLATE RTRIM IN (rt0.c2)) FROM t0 WHERE (NULL) ORDER BY ((((((vt1.c0) NOTNULL))AND(((((((((rt0.c3)AND(rt0.c6)))OR(t0.c2)))OR(v0.c0)))OR(rt0.c2)))))AND(((rt0.c2)/(t0.c2)))) DESC;SELECT (~ (LTRIM(t0.c0))), LIKELY(CASE WHEN x'' THEN rt0.c5 ELSE NULL END), (('0.6372519829859341') NOT BETWEEN ((+ (vt1.c0))) AND (((t0.c2) ISNULL))) FROM vt1, t0, v0, rt0 LIMIT 1115327643 OFFSET 2035185499; -- 0ms;
SELECT DISTINCT (((~ (rt0.c1))) IS FALSE) FROM vt1 WHERE (((((((((CAST(x'd6eebbc1' AS BLOB))AND((('')||(NULL)))))AND((((1.101155987E9))!=(('-0.0'))))))OR(CASE WHEN 'n}' THEN -1.261011261E9 ELSE '-627678056' END)))OR(CAST(0x41a24e93 AS REAL))));SELECT DISTINCT TOTAL(((rt0.c1)IS NOT(v0.c0))) OVER ( PARTITION BY ((rt0.c6) ISNULL), ((CASE v0.c0  WHEN t0.c2 THEN rt0.c6 ELSE rt0.c1 END) IS TRUE)) FROM v0, t0, vt1 WHERE (CASE (('1585616541')||(x''))  WHEN (NOT ('eXOK{?)hP')) THEN UNLIKELY(NULL) WHEN (+ (0xbdcc47c)) THEN 1.115327643E9 WHEN (((('')AND(NULL)))AND(0.8850962554997895)) THEN ((x'793341a7') NOT NULL) END) GROUP BY CASE (rt0.c4 IN ())  WHEN ((t0.c1) NOT BETWEEN (t0.c1) AND (v0.c0)) THEN ((((v0.c0)OR(t0.c1)))AND(rt0.c4)) ELSE CAST(rt0.c2 AS REAL) END ORDER BY ((rt0.c1) NOTNULL) COLLATE BINARY ASC;SELECT DISTINCT ((vt1.c0)<=(((t0.c2) NOTNULL))) FROM t0 WHERE (x'ef42ad15') GROUP BY ((NULL) IS TRUE) COLLATE RTRIM HAVING (((rt0.c1)) BETWEEN (((~ (rt0.c3)))) AND ((((rt0.c0)IS(rt0.c5))))) ORDER BY ((json_patch(0.9596413316330128, NULL))<=(t0.c1)) DESC  NULLS FIRST;SELECT DISTINCT (+ (TRIM(rt0.c6))), x'b373', CAST(0.9585519503472537 COLLATE BINARY AS BLOB) FROM v0 WHERE (NULL);SELECT DISTINCT ((((rt0.c3)||(rt0.c5))) NOT BETWEEN (CASE WHEN v0.c0 THEN rt0.c2 WHEN rt0.c3 THEN t0.c1 WHEN rt0.c5 THEN v0.c0 WHEN t0.c2 THEN t0.c0 WHEN rt0.c0 THEN rt0.c3 ELSE t0.c2 END) AND (t0.c2 COLLATE BINARY)) FROM vt1, rt0;SELECT ALL GLOB(CASE WHEN rt0.c2 THEN rt0.c3 END, (('')/(rt0.c4))) FROM v0, vt1, rt0, t0 WHERE (CAST(0.6063604947505999 AS INTEGER)); -- 0ms;
SELECT DATE(t0.c1 COLLATE NOCASE, CASE WHEN 0.28894786258833893 THEN t0.c0 END, CAST(t0.c0 AS TEXT)), ((((rt0.c0 IN ())))=((((((rt0.c1)AND('+貛')))OR(vt1.c0))))), TOTAL(((((rt0.c3)OR('-389531373338760722--7105625203839343982-894T803T1747--2649161650797883000T1622TM')))OR(rt0.c3))) FROM vt1, v0;SELECT ((((rt0.c2)AND('-1e500')))OR(rt0.c0)) COLLATE RTRIM, (((x'') NOT BETWEEN (vt1.c0) AND (t0.c0)) IN ()), NTH_VALUE(CASE CASE WHEN vt1.c0 THEN 0.19571562082697014 END  WHEN CAST(vt1.c0 AS INTEGER) THEN (NOT (vt1.c0)) END, vt1.c0) OVER () FROM v0, vt1;SELECT ALL CASE WHEN v0.c0 COLLATE BINARY THEN (rt0.c4 IN (t0.c1)) WHEN SUM(rt0.c2) THEN ((rt0.c4)LIKE('tSe7wBq\n')) WHEN LIKELIHOOD(rt0.c3, 0.08763023220371957) THEN CAST(t0.c1 AS INTEGER) ELSE (('⵴ㅧtx鯹l6')<(rt0.c5)) END FROM v0;SELECT ALL vt1.c0, ((SUM(rt0.c5))<=((t0.c0 IN ()))), '1880286038' FROM t0, v0 INDEXED BY i16, rt0 WHERE ((((('-1769577652', 0.4075258110466651, 936908720)) BETWEEN (('931506280', '573319990', 0.6410120815316062)) AND ((x'f03d', '', 0x651d373c))) IN ()));SELECT DISTINCT rt0.c3, 1.880286038E9, ((CASE rt0.c6  WHEN rt0.c6 THEN rt0.c0 ELSE vt1.c0 END)IS(((t0.c0)IS NOT(rt0.c3)))) FROM rt0 WHERE ((((((NULL)IS NOT(0.8617046999179095)), (((x'')) NOT BETWEEN (('-1092911697')) AND ((x''))), CAST(x'' AS TEXT)))<=((json_object(NULL, x'4546'), SQLITE_COMPILEOPTION_USED('f2'), ((((x'')AND('')))AND(NULL))))));SELECT ALL TOTAL(CASE t0.c2  WHEN rt0.c1 THEN vt1.c0 END), ((((CASE rt0.c2  WHEN vt1.c0 THEN t0.c0 ELSE vt1.c0 END)AND(rt0.c6 COLLATE BINARY)))OR(((rt0.c3) NOT BETWEEN (t0.c2) AND (t0.c1)))), ((LIKELIHOOD(rt0.c0, 0.10333915382428571)) IS FALSE) FROM vt1, v0, rt0, t0 ORDER BY (((rt0.c4, ((vt1.c0) IS FALSE), ((rt0.c5)=(rt0.c1))))==((((t0.c2) ISNULL), vt1.c0, (~ (vt1.c0))))) DESC; -- 0ms;
SELECT (((((rt0.c3)AND(rt0.c3)))AND(x'')) IN ()) FROM vt1, t0, v0, rt0 LIMIT 199017596 OFFSET -1261011261; -- 4ms;
SELECT DISTINCT ((rt0.c2 IN ()) IN ()), ((CASE WHEN NULL THEN rt0.c6 WHEN t0.c2 THEN 'V(Pvb6O&' WHEN rt0.c5 THEN vt1.c0 ELSE rt0.c5 END) BETWEEN (CAST(t0.c0 AS REAL)) AND (((((t0.c1)OR(t0.c1)))AND(rt0.c1)))), ((CAST(rt0.c2 AS BLOB)) NOT NULL) FROM v0, t0, vt1;SELECT DISTINCT rt0.c1 FROM v0, rt0, t0 WHERE (LIKELY(TRIM(DISTINCT NULL))); -- 0ms;
SELECT ALL LIKELY(rt0.c4), rt0.c1, ((((rt0.c3)AND(0.077452005685684)))OR(rt0.c0)) COLLATE NOCASE FROM v0, rt0 WHERE (ABS(DISTINCT ((((-842813205)AND('-842813205')))AND('')))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( ORDER BY 0.13922104243752997, LIKELIHOOD(((vt1.c0) IS FALSE), 0.7144637117874014) ASC  NULLS FIRST) FROM t0, rt0, v0, vt1 LIMIT 230036826 OFFSET -1595903076; -- 0ms;
SELECT ALL LEAD(CASE (((rt0.c4))<=((v0.c0)))  WHEN ((((v0.c0)AND(rt0.c3)))AND(rt0.c2)) THEN ((('2072978968', 0.49690675420121855, vt1.c0))<=((rt0.c6, rt0.c0, v0.c0))) END, x'', ((UNLIKELY(DISTINCT rt0.c6)) BETWEEN ((((rt0.c1, rt0.c4, rt0.c1))==((rt0.c0, rt0.c5, rt0.c6)))) AND (CHAR(rt0.c2)))) OVER (), ((t0.c2 IN ()) IN ()), (((((rt0.c5)==(rt0.c0)), (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0))), ((rt0.c1)>>(rt0.c1))))<=((SUM(t0.c1), CASE rt0.c6  WHEN rt0.c2 THEN rt0.c3 END, NULL))) FROM v0, rt0, vt1;SELECT ALL (((t0.c0) BETWEEN (vt1.c0) AND (rt0.c1)) IN ()) FROM rt0, vt1, t0 LIMIT 1 OFFSET -1049477400; -- 0ms;
SELECT DISTINCT CASE NULLIF(DISTINCT x'953d', rt0.c5)  WHEN TOTAL(t0.c2) THEN TOTAL(rt0.c3) ELSE (t0.c0 IN (t0.c0, rt0.c3)) END FROM v0, t0 WHERE (((((((x'')AND(NULL)))OR('1101155987'))) IS FALSE));SELECT SUM(((vt1.c0) BETWEEN (t0.c2) AND (rt0.c6))) OVER () FROM t0, rt0 WHERE (((((0.11694350173778545)<=(x''))) NOTNULL)) LIMIT 4992372;SELECT ALL ((((((rt0.c2) IS TRUE))AND((- (rt0.c4)))))AND((+ (rt0.c0)))) FROM v0, t0;SELECT ((((TRIM(DISTINCT v0.c0))OR(t0.c2)))AND(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c4)))) FROM vt1 WHERE (((((NULL)>(0.9059647219264436))) NOT BETWEEN ((+ (2052823714))) AND (CASE 164801769  WHEN 0.8898381324665543 THEN x'' WHEN x'' THEN NULL WHEN 'y68' THEN x'' WHEN 0xdb6155a THEN '-361030067' WHEN NULL THEN -2.40373401E8 ELSE 0.7669829146263595 END)));SELECT DISTINCT MIN(((rt0.c0)||(t0.c0))) FROM vt1, t0;SELECT ALL ((((t0.c0) NOT NULL))|((((t0.c2))!=((t0.c0))))) FROM rt0;SELECT DISTINCT CAST(((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c2)) AS TEXT), (((rt0.c0, rt0.c3, v0.c0, rt0.c4, rt0.c4)) BETWEEN ((MIN(rt0.c6), (- (rt0.c5)), ((((0.8503987591264165)AND(t0.c0)))OR(vt1.c0)), ((((((((((((t0.c1)OR(rt0.c6)))OR(rt0.c2)))AND(rt0.c5)))AND(rt0.c2)))AND(t0.c1)))AND(rt0.c3)), COUNT(*))) AND ((((((rt0.c0)OR(rt0.c2)))AND(rt0.c4)), t0.c1 COLLATE RTRIM, TRIM(DISTINCT rt0.c6), ((((rt0.c3)OR(t0.c1)))AND(v0.c0)), rt0.c2 COLLATE RTRIM))), ((rt0.c1 COLLATE RTRIM)LIKE(((((rt0.c1)AND(rt0.c4)))OR(t0.c0)))) FROM v0, rt0, t0;SELECT DISTINCT COUNT(*) OVER () FROM rt0, vt1, v0 GROUP BY CAST(GLOB(rt0.c2, rt0.c4) AS TEXT); -- 0ms;
SELECT ALL ((CAST(rt0.c6 AS TEXT))%(rt0.c3 COLLATE NOCASE)), TOTAL((((rt0.c4, rt0.c2, rt0.c1))=((v0.c0, rt0.c3, t0.c1)))) OVER ( GROUPS  CURRENT ROW), CAST(rt0.c6 COLLATE NOCASE AS TEXT) FROM rt0, v0, t0, vt1 WHERE (((((2054518685)AND(NULL)))AND('2033760119')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((NULL)>=('-299095501')))LIKE((NOT (v0.c0)))), ((((((t0.c1)OR(rt0.c2)))AND(0.8070046810610602)))|(CAST(rt0.c6 AS REAL))), ((((rt0.c3)AND(rt0.c0))) NOTNULL) FROM rt0, vt1, t0, v0 WHERE ('tse7wbq\n'); -- 0ms;
SELECT DISTINCT (((v0.c0 IN ())) ISNULL), rt0.c5 COLLATE BINARY, TOTAL_CHANGES() FROM rt0 ORDER BY (((((+ (t0.c1)))OR(((rt0.c3) ISNULL))))AND(((rt0.c3)>>(rt0.c1))))  NULLS LAST, (((NULL)) NOT BETWEEN ((((((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c5)))AND(vt1.c0)))) AND (((t0.c2 IN ()))))  NULLS FIRST;SELECT DISTINCT ((t0.c1 COLLATE BINARY)=((vt1.c0 IN (rt0.c4)))) FROM v0 WHERE (CAST(('-1991991573' IN ()) AS TEXT));SELECT DISTINCT ((((t0.c2) IS FALSE))==(((rt0.c1)/('x!>3')))), vt1.c0, (((((rt0.c5))!=((rt0.c3)))) BETWEEN ((rt0.c2 IN ())) AND (TOTAL_CHANGES())) FROM rt0, vt1, t0 GROUP BY UPPER(t0.c1) COLLATE RTRIM; -- 1ms;
SELECT DISTINCT NULL FROM v0, rt0, vt1, t0 WHERE ((((('') ISNULL)) ISNULL)); -- 0ms;
SELECT DISTINCT (((((rt0.c2))<((rt0.c6))))=(CAST(x'' AS REAL))) FROM v0;SELECT DISTINCT DENSE_RANK() OVER ( ORDER BY ((CASE WHEN v0.c0 THEN t0.c2 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c4 THEN t0.c1 END)IS((rt0.c3 IN (rt0.c3)))) ASC  NULLS FIRST RANGE BETWEEN 0.42095070614673646 FOLLOWING AND ((CAST(rt0.c2 AS REAL))<<((((rt0.c0, rt0.c4, t0.c2)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c5)) AND ((rt0.c6, t0.c1, t0.c0))))) PRECEDING EXCLUDE TIES), CAST(((-586031883)<<(0.5362078082539399)) AS NUMERIC), x'' FROM v0, rt0, vt1 WHERE ((((- (''))) NOTNULL)) LIMIT 1696413500;SELECT ALL (((rt0.c3)<<(t0.c0)) IN ()) FROM t0, rt0, vt1 GROUP BY NULLIF(NULL, rt0.c3); -- 0ms;
SELECT DISTINCT (json_array_length(rt0.c1, rt0.c3) IN ()) FROM v0 WHERE (x'') LIMIT -27453815 OFFSET 14393010; -- 0ms;
SELECT ALL UNLIKELY(rt0.c4) FROM rt0, v0, vt1 WHERE (((((('2072978968', x'0336', 0x7c73ab46))<=((0.3511344688329907, 'WN&TOjSYI', 0.7473831531896121)))) NOT BETWEEN (CAST(NULL AS TEXT)) AND (x''))) GROUP BY ((t0.c1) BETWEEN (rt0.c3) AND (rt0.c1)) COLLATE RTRIM HAVING 0.29474429719932616;SELECT DISTINCT GROUP_CONCAT(((t0.c2) BETWEEN (rt0.c0) AND (rt0.c1))) FILTER(WHERE ((NOT (t0.c0)) IN ())) OVER (), ROW_NUMBER() OVER ( PARTITION BY HEX((rt0.c1 IN (rt0.c0))), CAST(((('q~亓', vt1.c0, rt0.c5, t0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c2, t0.c1, NULL, vt1.c0)) AND ((rt0.c0, rt0.c0, rt0.c0, NULL, rt0.c4))) AS BLOB)), (((((+ (rt0.c4)))AND(((rt0.c0)*(rt0.c4)))))AND(CAST(rt0.c5 AS TEXT))) FROM t0, vt1, v0, rt0; -- 0ms;
SELECT COUNT(((rt0.c0) BETWEEN (t0.c1) AND (vt1.c0))) OVER ( ORDER BY CAST((+ (rt0.c2)) AS TEXT) ASC  NULLS LAST) FROM v0 WHERE (((HEX(DISTINCT x''))>=(((('-452781557', '', '-[')) BETWEEN (('L''Ql%', x'', 'PWI幪')) AND ((x'', x'f6c2', NULL))))));SELECT DISTINCT PERCENT_RANK() OVER ( PARTITION BY ((rt0.c2 IN ()) IN ((vt1.c0 IN ()))), (((((((rt0.c3)) BETWEEN ((v0.c0)) AND ((t0.c1))))OR(TRIM(vt1.c0))))AND(rt0.c5))) FROM rt0, vt1, t0;SELECT DISTINCT (((rt0.c5, rt0.c5, rt0.c6)) BETWEEN (((((rt0.c4)) NOT BETWEEN ((rt0.c0)) AND ((t0.c2))), TYPEOF('241555408'), AVG(rt0.c2))) AND ((((t0.c2)>=(t0.c2)), SUM(rt0.c1), (rt0.c2 IN ())))) FROM rt0 INDEXED BY i16, v0, vt1;SELECT ALL t0.c1 FROM vt1 GROUP BY CASE WHEN t0.c1 THEN rt0.c6 WHEN rt0.c1 THEN rt0.c5 WHEN 0Xfffffffff8f4f8a0 THEN rt0.c2 ELSE v0.c0 END COLLATE NOCASE;SELECT LAST_VALUE(((((((rt0.c4)OR(rt0.c6)))AND(rt0.c1))) NOT NULL)) OVER ( ORDER BY ((((t0.c1))>=((t0.c1))) IN ())  NULLS LAST, (NOT (((rt0.c3)>(t0.c1)))) ASC, QUOTE(t0.c0 COLLATE BINARY) ASC  NULLS FIRST) FROM vt1, rt0;SELECT DISTINCT DENSE_RANK() OVER () FROM vt1, v0, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)<=(rt0.c3)))<(x'')), ((t0.c2 COLLATE BINARY) NOT BETWEEN ((~ (vt1.c0))) AND (MIN(vt1.c0))), (((rt0.c6)) NOT BETWEEN ((NULL)) AND ((rt0.c6))) COLLATE RTRIM FROM rt0 WHERE (((((x'6ab6') NOTNULL)) IS TRUE)) GROUP BY ((((v0.c0) NOT BETWEEN (rt0.c6) AND (-9.52279446E8)))>=(((t0.c0) NOTNULL))), CAST(t0.c2 AS NUMERIC) COLLATE BINARY, (((rt0.c0 IN (rt0.c2, x'')))%((t0.c2 IN ()))) HAVING (~ ((((rt0.c2, 4992372, rt0.c4))>((rt0.c2, v0.c0, t0.c1)))));SELECT DISTINCT 0.8898381324665543 FROM v0, rt0 WHERE (((((((((((NULL)AND('-299095501')))OR(x'')))OR(NULL)))OR(0.11957474969250237))) NOT NULL)); -- 1ms;
SELECT ALL (NOT ((((rt0.c5))>((rt0.c1))))), 0X7100317c, ROW_NUMBER() OVER (), x'' COLLATE RTRIM, (((t0.c2) NOT NULL) IN ()) FROM rt0, vt1 WHERE (CAST(((0.9430178209258219) IS FALSE) AS TEXT)) ORDER BY ((((CAST(rt0.c2 AS TEXT))AND(((t0.c0) NOTNULL))))AND(CASE v0.c0  WHEN t0.c1 THEN t0.c2 ELSE rt0.c2 END));SELECT ALL ((((rt0.c6) NOT BETWEEN (t0.c2) AND (rt0.c6))) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((rt0.c4) BETWEEN (vt1.c0) AND (t0.c1)))), t0.c0, ((((t0.c2)OR(json_array_length(rt0.c3, v0.c0))))AND(vt1.c0)) FROM vt1, t0, rt0 NOT INDEXED GROUP BY rt0.c0;SELECT ALL ((TRIM(vt1.c0, rt0.c4)) NOT BETWEEN ((0.6523744660048786 IN (rt0.c6, rt0.c1))) AND (LOWER(rt0.c3))) FROM t0, vt1;SELECT DISTINCT ((((((rt0.c6)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))))<=((LIKELIHOOD(t0.c0, 0.698931332660183)))), t0.c0, CASE WHEN CASE WHEN t0.c2 THEN t0.c2 END THEN ((v0.c0) NOT BETWEEN (v0.c0) AND (rt0.c6)) END FROM t0;SELECT ALL ((rt0.c0 IN (NULL)) IN (((t0.c0) BETWEEN (rt0.c1) AND (t0.c1)))) FROM vt1, v0, t0;SELECT DISTINCT (((+ (vt1.c0)))|(vt1.c0)) FROM vt1, rt0, v0 WHERE (HEX(DISTINCT (('-1080133899')*(NULL)))) GROUP BY CASE WHEN t0.c0 THEN rt0.c1 END COLLATE RTRIM;SELECT ALL LAG(((((v0.c0) BETWEEN (t0.c2) AND (rt0.c2)))OR((t0.c1 IN ()))), ((DATETIME(rt0.c3, t0.c2, t0.c0)) NOTNULL), json_valid(((rt0.c5)OR(rt0.c6)))) OVER (), ((((rt0.c4)%(v0.c0)))OR(((((rt0.c4)AND(NULL)))OR(rt0.c2)))), ((rt0.c5) IS TRUE) COLLATE BINARY FROM v0, t0, rt0; -- 0ms;
SELECT ((((((rt0.c1)AND(t0.c0)))OR(rt0.c1))) NOTNULL) FROM rt0;SELECT DISTINCT TOTAL(((((NULL)AND(rt0.c3)))AND(v0.c0))) FROM rt0, vt1, v0 WHERE (((CASE WHEN NULL THEN NULL ELSE 0xffffffffc0ec051b END) BETWEEN ((('-952279446') IS FALSE)) AND ((1.101155987E9 IN ())))); -- 0ms;
SELECT ALL ((rt0.c6)<<(t0.c2)) COLLATE RTRIM, TOTAL(x'') OVER (), (((((rt0.c5 IN ()))OR((((t0.c2))<((v0.c0))))))OR((~ (vt1.c0)))) FROM rt0 WHERE (((NULL) NOT NULL));SELECT ALL NULLIF(t0.c2 COLLATE RTRIM, ((rt0.c4) NOT BETWEEN (t0.c0) AND (rt0.c4))) FROM t0, vt1 ORDER BY ((((vt1.c0)||(t0.c1))) BETWEEN (HEX(DISTINCT t0.c0)) AND (CAST(vt1.c0 AS BLOB))) DESC;SELECT ALL ((AVG(rt0.c3)) NOT NULL) FROM t0, v0 WHERE (((0.28894786258833893 IN ()) IN ()));SELECT DISTINCT ((t0.c2 COLLATE BINARY)GLOB(rt0.c3)) FROM vt1, rt0, v0, t0 WHERE (((((0.6483587923443277)<<('㜼E'))) NOT BETWEEN ('0.9059647219264436') AND (((NULL) NOT BETWEEN (2072978968) AND (NULL))))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c4 THEN rt0.c3 END) FILTER(WHERE ((((t0.c0)%(rt0.c4)))<(CAST(rt0.c4 AS INTEGER)))) OVER (), MIN((v0.c0 IN ())), ((((t0.c2)AND((t0.c0 IN (t0.c2)))))AND((~ (NULL)))) FROM vt1, t0, v0, rt0; -- 0ms;
SELECT LAST_VALUE((((((rt0.c0) BETWEEN (rt0.c4) AND (t0.c2))))<(((NOT (rt0.c0)))))) OVER () FROM v0, rt0, t0, vt1 WHERE ((((x'f10c')) NOT BETWEEN ((((0.24419475941479518) ISNULL))) AND ((NULL)))); -- 0ms;
SELECT DISTINCT (rt0.c6 IN ()) COLLATE RTRIM FROM t0, rt0, v0 ORDER BY ((((rt0.c2 IN ())))>((ABS(0Xffffffff8c605d99)))) DESC  NULLS FIRST, NULL; -- 0ms;
SELECT ALL (((AVG(t0.c2)))=((((((rt0.c0)AND(rt0.c1)))OR(v0.c0))))) FROM vt1, rt0, v0, t0 WHERE (((0.5677671124825808) NOTNULL) COLLATE NOCASE); -- 0ms;
SELECT ALL ((rt0.c1)GLOB(rt0.c0)) COLLATE BINARY FROM t0, rt0, v0 WHERE (((((NULL)AND(((((NULL)AND('')))OR(0.3511344688329907)))))OR(0.45090842084042115))); -- 0ms;
SELECT ALL ABS(DISTINCT t0.c2) FROM t0 ORDER BY ((rt0.c5 COLLATE NOCASE)=(CAST('787710555' AS REAL))) DESC  NULLS FIRST LIMIT 1764959529;SELECT DISTINCT LIKELIHOOD(DISTINCT json_valid(t0.c0), 0.28747398283446113) FROM v0, rt0, vt1 WHERE (((((((0.446247030500207)>>(-1939841639)))OR(CASE WHEN NULL THEN x'' WHEN NULL THEN '' WHEN '*\' THEN 0.5085145749662401 END)))AND((x'' IN ()))));SELECT ALL ((((((rt0.c6)|(rt0.c4)))AND(LOWER(DISTINCT rt0.c6))))OR(t0.c0)), v0.c0, ((0.5677671124825808) NOT BETWEEN ((t0.c2 IN ())) AND ((((vt1.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c2))))) FROM v0 INDEXED BY i16, t0, rt0 WHERE (((((('1696413500')) BETWEEN ((NULL)) AND ((NULL)))) IS TRUE)) LIMIT 1680658722;SELECT DISTINCT COUNT(*) OVER ( ORDER BY -9.52279446E8, (rt0.c5 IN ()) COLLATE RTRIM COLLATE NOCASE DESC  NULLS FIRST, CASE WHEN ((rt0.c3)>>(rt0.c6)) THEN rt0.c1 ELSE ((((rt0.c1)OR(rt0.c0)))OR(rt0.c6)) END ASC  NULLS FIRST) FROM t0, rt0, vt1, v0 WHERE (COALESCE(((NULL)<<('0.9585519503472537')), x'' COLLATE NOCASE, (('-240373401') NOT BETWEEN (0.3327080610061445) AND ('鞝K逛')), '' COLLATE RTRIM)) LIMIT -319617845; -- 0ms;
SELECT ALL LAST_VALUE((((NOT (rt0.c3))) NOTNULL)) OVER ( ORDER BY (~ (INSTR(rt0.c4, t0.c0))), ((((rt0.c2) NOT BETWEEN (rt0.c6) AND (vt1.c0)))<(((t0.c1)<(rt0.c5)))) DESC  NULLS LAST) FROM vt1, t0, rt0 WHERE (((HEX(0.48273401683126915))OR(LIKELIHOOD(0Xffffffffda43e8bb, 0.1824636509744355)))) GROUP BY ((rt0.c2 COLLATE BINARY)<<(((t0.c1) BETWEEN (t0.c0) AND (v0.c0)))) HAVING ((((rt0.c2)AND('')))AND(rt0.c0)) COLLATE BINARY;SELECT ((((t0.c0)AND(CASE t0.c1  WHEN rt0.c5 THEN '' END)))OR(CAST(t0.c2 AS BLOB))), (+ (NULL)), IFNULL(AVG(t0.c1), ((rt0.c4)>=(vt1.c0))) FROM v0;SELECT DISTINCT ((vt1.c0) IS TRUE) FROM vt1, t0, rt0 GROUP BY CAST(((t0.c1) NOT BETWEEN (rt0.c6) AND ('-1939841639')) AS TEXT); -- 0ms;
SELECT DISTINCT ((x'')|((~ (rt0.c1)))) FROM v0 WHERE (((((NULL) NOT BETWEEN (x'') AND (x''))) NOTNULL));SELECT DISTINCT ROW_NUMBER() OVER (), ((DATE(rt0.c0, rt0.c4, v0.c0))GLOB(((t0.c0) IS FALSE))), NTILE(rt0.c2) OVER () FROM t0, v0, rt0; -- 0ms;
SELECT DISTINCT ((CASE vt1.c0  WHEN t0.c1 THEN rt0.c6 ELSE rt0.c6 END) ISNULL), FIRST_VALUE((NOT (((((rt0.c6)AND(0.19430463940140563)))AND(0.4175008325649051))))) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND  CURRENT ROW), HEX(NULL) FROM rt0, v0, t0, vt1 GROUP BY rt0.c5 COLLATE RTRIM HAVING ((((rt0.c2) IS FALSE))+((vt1.c0 IN (rt0.c1, vt1.c0)))); -- 0ms;
SELECT ALL CAST(((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c5)) AS INTEGER) FROM vt1, v0 ORDER BY CAST((+ (t0.c2)) AS BLOB) LIMIT 1590469823;SELECT DISTINCT SUM((((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c3)))) FILTER(WHERE ((((rt0.c0) IS TRUE))!=(RTRIM(rt0.c5)))) OVER () FROM v0, t0, vt1;SELECT ALL ((((((((((rt0.c1)AND(v0.c0)))OR(t0.c0)))OR(rt0.c3)))AND(t0.c1)))=(CASE NULL  WHEN vt1.c0 THEN v0.c0 END)), (vt1.c0 IN ()), ((LIKE(rt0.c6, rt0.c5)) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND ((+ (v0.c0)))) FROM t0 WHERE (NULLIF(DISTINCT (+ (NULL)), COALESCE(DISTINCT 9.3690872E8, x'')));SELECT DISTINCT (((((rt0.c6) NOT BETWEEN (14393010) AND (rt0.c2))))<=((CASE WHEN t0.c1 THEN NULL END))), RTRIM(x'f0c3'), SUM(((t0.c1) BETWEEN (rt0.c6) AND (rt0.c1))) OVER () FROM t0;SELECT ALL CAST(((rt0.c4) IS TRUE) AS TEXT) FROM vt1 LEFT OUTER JOIN v0 ON (((rt0.c1)) NOT BETWEEN ((((rt0.c4)>(x'')))) AND ((((-574316157)-(NULL)))));SELECT DISTINCT ((TYPEOF(DISTINCT rt0.c0)) IS FALSE) FROM t0, v0 FULL OUTER JOIN vt1 ON x'' WHERE ((((+ (2072978968)))IS((((NULL))>(('1934034357'))))));SELECT DISTINCT rt0.c6, CAST(rt0.c2 AS NUMERIC), ((((((rt0.c4)|(t0.c0)))AND(CASE WHEN t0.c2 THEN rt0.c1 ELSE NULL END)))AND(rt0.c4)) FROM v0, t0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(load_extension(rt0.c6)) FROM v0;SELECT ALL AVG((NOT (v0.c0))) FROM v0, t0, rt0, vt1 WHERE (((CAST(NULL AS NUMERIC))/((('')LIKE(0.9918329147878229))))) GROUP BY CAST(STRFTIME(rt0.c5, rt0.c2, rt0.c0) AS INTEGER) HAVING ((MIN(rt0.c6))<=((~ (v0.c0)))); -- 0ms;
SELECT DISTINCT (~ (TYPEOF(rt0.c3))) FROM t0, v0, vt1 WHERE ((((((x'')) BETWEEN (('0.446247030500207')) AND ((0.33619042018106926)))) NOT BETWEEN ((x'8613' IN ())) AND (x''))) GROUP BY ((((((-2094541939)OR(rt0.c2)))OR(rt0.c5))) NOT BETWEEN ((+ (vt1.c0))) AND (((rt0.c5)&(rt0.c0)))), (NOT (CASE t0.c2  WHEN vt1.c0 THEN rt0.c4 ELSE rt0.c6 END)), ((rt0.c4 IN ()) IN (SQLITE_VERSION())) HAVING ((((((((((((vt1.c0)AND(vt1.c0)))AND(vt1.c0)))OR(rt0.c5 COLLATE NOCASE)))OR(TOTAL(t0.c1))))AND((~ (rt0.c1)))))AND(((rt0.c4)AND(v0.c0))));SELECT 'ᚉ8', ((((rt0.c1)AND(((rt0.c0) NOT BETWEEN (rt0.c4) AND (0.8085764199011549)))))OR(((rt0.c2) BETWEEN (rt0.c6) AND (NULL)))), ((CASE t0.c2  WHEN t0.c2 THEN rt0.c5 ELSE v0.c0 END)=(rt0.c5 COLLATE BINARY)) FROM vt1;SELECT DISTINCT ((rt0.c1 COLLATE RTRIM) BETWEEN ((~ (rt0.c6))) AND (t0.c0)) FROM rt0, vt1;SELECT ALL (((((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), ((rt0.c2)>>(rt0.c4)), ((x'')&(v0.c0))))==((((rt0.c6)|(vt1.c0)), CAST(rt0.c2 AS BLOB), (rt0.c0 IN ())))) FROM vt1, v0 LIMIT -1621478010 OFFSET 1934034357;SELECT (((rt0.c1)*(rt0.c3)) IN ()) FROM rt0, vt1, v0; -- 0ms;
SELECT 9.3150628E8 FROM v0, vt1, t0, rt0 GROUP BY ((((rt0.c0)>(rt0.c6))) BETWEEN (((vt1.c0) NOT NULL)) AND (((NULL) NOT NULL))) HAVING (((((((((((t0.c0)OR(t0.c1)))OR(rt0.c3)))OR(t0.c1)))OR(t0.c1))))>=((COUNT(vt1.c0)))) LIMIT -1261011261 OFFSET -1018013739; -- 0ms;
SELECT ALL ((((vt1.c0) IS FALSE))OR(((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)))) FROM rt0 WHERE ('');SELECT ALL 0.6761702022569714 FROM vt1 WHERE ((((+ (757095010)))-((+ (x''))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c6) AND (t0.c2))) NOTNULL) FROM v0, t0, vt1 INDEXED BY i16, rt0 GROUP BY (((((((v0.c0, rt0.c1, rt0.c6))<=((t0.c1, t0.c1, v0.c0))))OR(t0.c2)))OR((~ (t0.c1)))), CAST((+ (rt0.c1)) AS INTEGER), (((t0.c1, rt0.c1, rt0.c0, rt0.c6, rt0.c5)) NOT BETWEEN ((ABS(vt1.c0), GLOB(rt0.c5, 0.6594146471955966), NULL, (((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c0))), (rt0.c6 IN ()))) AND ((json_type(rt0.c0), UNLIKELY(DISTINCT t0.c1), ((((rt0.c5)OR(v0.c0)))OR(rt0.c6)), '-1067993355', CAST(rt0.c6 AS BLOB))));SELECT ((((rt0.c4)<<(rt0.c6)))!=(((((((((rt0.c2)OR(rt0.c6)))AND(t0.c0)))AND(v0.c0)))OR(rt0.c0)))) FROM t0 FULL OUTER JOIN v0 ON x'6d30' CROSS JOIN rt0 ON (((rt0.c0)<(rt0.c3)) IN ()) INNER JOIN vt1 ON LIKE((NOT (v0.c0)), v0.c0 COLLATE NOCASE) WHERE (((NULL)|((('-319617845') NOT BETWEEN ('0.11957474969250237') AND (x''))))); -- 0ms;
SELECT (('5ࠋs')!=(CAST(rt0.c6 AS REAL))), (- ((((v0.c0, rt0.c5, t0.c1, rt0.c6, rt0.c1)) BETWEEN ((NULL, rt0.c0, rt0.c5, rt0.c4, x'')) AND ((rt0.c6, rt0.c2, '', rt0.c6, rt0.c1))))), ((((((((rt0.c4)AND(t0.c0)))OR(((((rt0.c4)AND(rt0.c3)))OR(t0.c2)))))AND(((rt0.c2) IS TRUE))))OR((rt0.c0 IN ()))) FROM t0, v0 WHERE (((('-1196046342')) BETWEEN (((((('-309051352')OR('')))AND(NULL)))) AND ((((-1462829715)!=(NULL)))))) ORDER BY CASE WHEN rt0.c1 THEN ((t0.c1) NOT BETWEEN (vt1.c0) AND (vt1.c0)) WHEN ((rt0.c6)OR(rt0.c5)) THEN (((((((('0.8207533813034074')OR(rt0.c5)))OR(rt0.c4)))OR(t0.c0)))OR(rt0.c2)) WHEN ((rt0.c2)<=(vt1.c0)) THEN CAST(x'' AS TEXT) WHEN CAST(0xffffffff8a24bab9 AS NUMERIC) THEN v0.c0 WHEN CAST(vt1.c0 AS NUMERIC) THEN load_extension(0.38386642823011297) END DESC, CAST((((vt1.c0))<=((t0.c1))) AS NUMERIC)  NULLS LAST, CASE ((rt0.c0)-(t0.c0))  WHEN ((t0.c2) ISNULL) THEN ((((rt0.c6)OR(rt0.c1)))AND(rt0.c6)) WHEN ((t0.c1)|(rt0.c3)) THEN (((v0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c6))) WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c5) NOT BETWEEN (vt1.c0) AND (rt0.c5)) ELSE (((rt0.c6)) BETWEEN ((vt1.c0)) AND ((rt0.c5))) END DESC  NULLS FIRST;SELECT ((((rt0.c5 COLLATE RTRIM)OR(x'')))OR(CAST(rt0.c2 AS TEXT))), ((((((((((-1.13129061E9)AND(rt0.c4)))OR(NULL)))OR(rt0.c0)))AND(rt0.c1))) ISNULL), highlight(vt1.c0 COLLATE BINARY, (NOT (t0.c1)), DATETIME(rt0.c3, rt0.c2, t0.c1, rt0.c6, rt0.c2), ((((rt0.c5)OR(vt1.c0)))OR(x''))) FROM t0, rt0 WHERE ((- (((0xffffffffddc4a183)LIKE(0.5651396654045383))))) LIMIT -1175743467;SELECT ALL (((rt0.c0, rt0.c0, rt0.c4)) BETWEEN ((v0.c0, rt0.c1, rt0.c4)) AND ((t0.c0, v0.c0, t0.c1))) COLLATE BINARY FROM rt0, t0, vt1, v0; -- 0ms;
SELECT AVG(((((((((rt0.c1)AND(v0.c0)))AND(vt1.c0)))AND(rt0.c1)))OR(vt1.c0))) FROM v0;SELECT ((rt0.c0 COLLATE RTRIM)*(x'')) FROM vt1, t0, rt0, v0 WHERE ((+ ((((0.45090842084042115, x'1fd02d4e', x'2479'))!=((0.7476530496040208, 1.439301E7, 0.6410120815316062)))))) GROUP BY ((rt0.c6 COLLATE RTRIM) NOTNULL), ((((rt0.c1)<<(rt0.c3))) NOT BETWEEN (((v0.c0) BETWEEN (rt0.c2) AND (rt0.c4))) AND ((t0.c1 IN ()))), ((((rt0.c1) ISNULL))IS(((v0.c0)|(rt0.c1)))) HAVING ((1585616541) NOT NULL); -- 0ms;
SELECT ALL (NOT (((v0.c0)>>(rt0.c4)))) FROM rt0, vt1, v0, t0 LIMIT 1735788864; -- 0ms;
SELECT DISTINCT ((((rt0.c5 IN ()), CAST(v0.c0 AS REAL), ((rt0.c6) NOT NULL)))>((v0.c0, AVG(t0.c0), ((rt0.c0)AND(v0.c0))))), ((rt0.c3)OR('-931337951')) COLLATE NOCASE, AVG((+ (t0.c2))), LIKELIHOOD(DISTINCT t0.c1 COLLATE BINARY, 0.4110117443583867), (rt0.c3 IN ()) COLLATE NOCASE FROM rt0, vt1, v0, t0 WHERE (COALESCE(DISTINCT ((x'')!=(NULL)), (('-474874908')<<(NULL)), (((NULL, '931506280', NULL)) BETWEEN ((NULL, 0.9596413316330128, NULL)) AND ((0X5a1ef59d, 'q~亓', x''))), CASE x''  WHEN NULL THEN '1904188409' ELSE x'' END)); -- 1ms;
SELECT ((COUNT(*))IS NOT(((((((((NULL)AND(vt1.c0)))AND(rt0.c5)))OR(t0.c0)))AND(t0.c0)))) FROM v0 GROUP BY (((rt0.c3)IS NOT('')) IN ());SELECT DISTINCT 958613102 FROM t0 WHERE (((((0.2588097731021204)IS('164801769')))>(((('356491048', x'703d', 0.4752321837779714)) BETWEEN ((NULL, NULL, -1101560023)) AND ((NULL, 0.46475167820521857, 0.2687263901467153)))))) ORDER BY (((((rt0.c6)/(t0.c0))))==((NULL)))  NULLS LAST;SELECT ALL CASE WHEN CAST(rt0.c6 AS BLOB) THEN ((rt0.c6) BETWEEN (rt0.c4) AND (rt0.c2)) ELSE (NOT (t0.c0)) END FROM t0, vt1, v0;SELECT DISTINCT CASE (~ (t0.c2))  WHEN t0.c0 THEN ((rt0.c4)IS(rt0.c5)) ELSE (rt0.c3 IN ()) END FROM vt1 WHERE (CAST(CASE WHEN x'' THEN x'' END AS REAL));SELECT DISTINCT CAST(rt0.c4 AS BLOB) COLLATE RTRIM FROM t0 ORDER BY ((-834691830)GLOB(rt0.c5)) COLLATE RTRIM DESC;SELECT (((((rt0.c2)IS(t0.c0)), rt0.c4 COLLATE NOCASE, rt0.c1))<((rt0.c6, (((t0.c1, 600754511, v0.c0))<((x'', NULL, rt0.c5))), MIN('0.42095070614673646')))), GROUP_CONCAT(CASE WHEN v0.c0 THEN t0.c0 ELSE rt0.c0 END), ((((((((((rt0.c5)AND(rt0.c6)))OR(rt0.c5)))OR(rt0.c1)))OR(rt0.c4)))>(((t0.c2)+(v0.c0)))) FROM vt1, t0, rt0 WHERE (((CASE WHEN 222561174 THEN NULL END)||(0Xffffffffb8bcb714)));SELECT ALL ((CAST(t0.c2 AS INTEGER))/(MIN(rt0.c4, rt0.c4))) FROM rt0, vt1 NOT INDEXED WHERE (CASE x''  WHEN ((NULL)<>(0.24679825159669744)) THEN CASE ''  WHEN NULL THEN x'2fc8' ELSE 0.5191646356164313 END ELSE ('!y)O7囂kO}' IN (x'')) END);SELECT (NOT ((((rt0.c0, rt0.c4, rt0.c3))>=((t0.c0, rt0.c3, rt0.c2))))) FROM vt1, rt0, v0, t0 WHERE ((CASE WHEN x'' THEN x'' ELSE 9.82910987E8 END IN (((NULL)>>(0.17027673903811458))))); -- 0ms;
SELECT DISTINCT rt0.c6 FROM rt0, t0 WHERE ((0Xffffffff89449eeb IN (x'bc0c')) COLLATE RTRIM); -- 0ms;
SELECT (NOT (vt1.c0 COLLATE BINARY)) FROM v0, t0 UNION ALL SELECT (x'a26d' IN ()) FROM v0, rt0 WHERE (CAST(UPPER(DISTINCT x'ffd2') AS REAL));SELECT ALL rt0.c0 FROM rt0, vt1, t0 INTERSECT SELECT CASE ((t0.c2)==(vt1.c0))  WHEN CASE rt0.c3  WHEN v0.c0 THEN t0.c1 END THEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c5 END WHEN t0.c0 THEN 0.04467264413250627 WHEN MAX(rt0.c0) THEN x'' ELSE ((t0.c0) ISNULL) END FROM v0, rt0, t0, vt1 WHERE (((CASE WHEN x'7124' THEN 0X4c85c94f END)=((((('')AND('-2028858523')))AND('-1376686137'))))); -- 1ms;
SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c4)))AND(rt0.c2)))OR(vt1.c0)))OR(rt0.c4)))>>((~ (v0.c0)))), rt0.c3, (((v0.c0, rt0.c1, 499769268, rt0.c0, rt0.c1)) BETWEEN ((NULL, COUNT(*), CASE vt1.c0  WHEN v0.c0 THEN rt0.c0 ELSE v0.c0 END, (~ (v0.c0)), (- (t0.c1)))) AND ((TOTAL_CHANGES(), ((rt0.c0) BETWEEN (rt0.c3) AND ('')), v0.c0, ((v0.c0)OR(v0.c0)), ((rt0.c4) NOT NULL)))), CAST(CAST(rt0.c6 AS BLOB) AS NUMERIC), (((rt0.c3)>=(rt0.c5)) IN (CASE WHEN rt0.c1 THEN rt0.c5 WHEN t0.c1 THEN t0.c2 WHEN 0.4559728294846598 THEN 0.11509379474725767 ELSE rt0.c5 END)) FROM t0, v0, rt0 WHERE (((('1100489069')) NOT BETWEEN ((((x'')=(NULL)))) AND ((((-215303571)>>(-627678056))))));SELECT ALL (rt0.c3 IN ()) COLLATE RTRIM, ((((((((((t0.c0)OR(rt0.c3)))AND(t0.c2)))AND(rt0.c6)))OR(t0.c1)))|(CASE rt0.c4  WHEN rt0.c4 THEN 1100489069 END)), (TYPEOF(vt1.c0) IN ()) FROM rt0, vt1, v0;SELECT DISTINCT TYPEOF(((rt0.c6)>=(rt0.c2))) FROM rt0, t0, v0, vt1 ORDER BY rt0.c6 DESC  NULLS LAST LIMIT 875917815 OFFSET 573319990; -- 0ms;
SELECT DISTINCT ((((((x'6aa718be') NOT BETWEEN (rt0.c3) AND (NULL)))OR(rt0.c5)))OR((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))), MAX((t0.c0 IN ())), 0xffffffffad925f62 FROM rt0, v0, vt1 WHERE (((((((((((x'06ed')AND(x'')))OR(NULL)))AND(NULL)))AND('ꥳ8쑼܆SNG6V'))) BETWEEN (((0.597945362224011)<<(x'49d9'))) AND (((NULL)/('600754511'))))); -- 1ms;
SELECT DISTINCT ((((AVG(vt1.c0))OR(COUNT(rt0.c4))))OR(COALESCE(rt0.c0, rt0.c2))) FROM rt0;SELECT NULL FROM vt1, rt0, t0, v0; -- 0ms;
SELECT x'', CASE WHEN (~ (rt0.c4)) THEN NULL ELSE CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN v0.c0 WHEN rt0.c5 THEN rt0.c6 END END, (rt0.c6 IN ()) FROM v0;SELECT DISTINCT CAST(CAST(t0.c2 AS REAL) AS TEXT) FROM v0, vt1, rt0, t0 ORDER BY HEX(DISTINCT rt0.c5) DESC; -- 0ms;
SELECT DISTINCT CASE WHEN ((v0.c0) NOT BETWEEN (t0.c1) AND (rt0.c5)) THEN AVG(vt1.c0) ELSE CAST(rt0.c0 AS INTEGER) END, ((((((((((((CASE vt1.c0  WHEN t0.c2 THEN rt0.c3 ELSE rt0.c2 END)OR((((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND(((rt0.c2)&(rt0.c4)))))OR(CAST(rt0.c6 AS BLOB))))OR((+ (NULL)))))AND(t0.c0 COLLATE NOCASE)))OR((rt0.c5 IN (t0.c0)))), '982910987' FROM t0 WHERE ((((('-1080133899' IN ())))<(((((x''))!=((x'')))))));SELECT ALL (((+ (t0.c1)))<(((rt0.c5) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0, v0, vt1 WHERE (((((-1192121685)-('-1376686137')))/(CAST(x'' AS NUMERIC))));SELECT (((((((((((((((rt0.c3)) BETWEEN ((rt0.c6)) AND ((rt0.c5))))OR(((v0.c0)<=(vt1.c0)))))OR(rt0.c3)))AND(((rt0.c0) NOTNULL))))AND('-1101560023')))AND(vt1.c0 COLLATE BINARY)))OR(x'e6a8')), TRIM(DISTINCT x'', ((rt0.c4) NOTNULL)), ((((rt0.c5) NOTNULL))<((((rt0.c0, v0.c0, t0.c2))>=((t0.c1, v0.c0, rt0.c4))))) FROM vt1 WHERE ('ᚉ8');SELECT ((rt0.c1 COLLATE NOCASE)<(((vt1.c0)/(v0.c0)))) FROM vt1, rt0 WHERE (((((((((((0.06115090321556327)OR(NULL)))OR(NULL)))OR(x'')))AND(0.8117165824070935)))||(((0.19297131595359973) ISNULL))));SELECT DISTINCT COALESCE(DISTINCT ((rt0.c4)<(vt1.c0)), (((rt0.c1)) BETWEEN ((vt1.c0)) AND ((rt0.c1))), (+ (t0.c2)), rt0.c0 COLLATE RTRIM) FROM vt1;SELECT DISTINCT (((t0.c1) BETWEEN (rt0.c4) AND (vt1.c0)) IN ()) FROM v0, rt0, vt1 WHERE ((((x'067f') BETWEEN (x'') AND ('{s-\n%中jR<')) IN ())); -- 1ms;
SELECT ALL CAST(CAST(t0.c2 AS REAL) AS REAL), ((((((t0.c1)||(rt0.c0)))OR('')))AND((((rt0.c6)) BETWEEN ((rt0.c0)) AND ((rt0.c6))))), SUM(rt0.c6) FROM vt1 WHERE (RTRIM(UNLIKELY(NULL)));SELECT CAST(CAST(t0.c1 AS BLOB) AS INTEGER) FROM rt0, v0, vt1;SELECT DISTINCT SUBSTR(((rt0.c0)!=(v0.c0)), (- (rt0.c2))), ((((t0.c1)<<(vt1.c0)))%('1615107997')), ((((rt0.c4) NOTNULL))LIKE(CAST(NULL AS BLOB))) FROM t0, rt0, vt1, v0 WHERE (0.0774115025615294); -- 0ms;
SELECT ALL ((((rt0.c5)<>(v0.c0))) BETWEEN (GROUP_CONCAT(rt0.c0)) AND ((((rt0.c3, v0.c0, rt0.c3)) NOT BETWEEN ((t0.c2, rt0.c6, rt0.c6)) AND ((rt0.c0, rt0.c6, rt0.c0))))), (rt0.c0 IN ()) COLLATE RTRIM, ((x'5886')||(rt0.c2 COLLATE RTRIM)) FROM v0, vt1 WHERE (((CAST(0.04276362272416245 AS BLOB)) BETWEEN ('%*ZR엦\r^') AND (CAST('V+' AS NUMERIC))));SELECT DISTINCT (((rt0.c3) NOT BETWEEN (v0.c0) AND (rt0.c3)) IN ()), (NULL IN ((vt1.c0 IN (rt0.c0)))), '-319617845' COLLATE BINARY FROM rt0, t0, vt1; -- 0ms;
SELECT ALL (json_extract(t0.c1, t0.c0, v0.c0, t0.c0) IN (x'', (NOT (rt0.c4)), v0.c0 COLLATE RTRIM)), ((((((((((rt0.c0)AND(NULL)))AND(t0.c1)))OR(rt0.c6)))AND(rt0.c2)))IS(((((rt0.c2)OR(rt0.c2)))OR(rt0.c4)))), ((rt0.c4) NOT BETWEEN ('322655163') AND (CAST(rt0.c0 AS REAL))), LEAD((((((((((rt0.c5)AND(v0.c0)))AND(rt0.c5)))OR(rt0.c4)))OR(v0.c0)) IN ()), COALESCE(CASE rt0.c6  WHEN rt0.c5 THEN rt0.c2 END, (~ (rt0.c6))), NULL) OVER (), SUM(CASE WHEN rt0.c6 THEN v0.c0 WHEN t0.c0 THEN t0.c1 WHEN rt0.c3 THEN t0.c1 ELSE rt0.c5 END) FROM rt0, v0 WHERE (x'');SELECT DISTINCT TRIM(DISTINCT (rt0.c1 IN ()), CAST(rt0.c5 AS TEXT)), (((((rt0.c1))>((rt0.c2))))GLOB(STRFTIME(rt0.c6, rt0.c6, rt0.c3, rt0.c1, t0.c0, vt1.c0, v0.c0))), CASE WHEN CAST(rt0.c6 AS BLOB) THEN CAST(vt1.c0 AS BLOB) WHEN CAST(rt0.c3 AS INTEGER) THEN ((('-1261011261'))<=((NULL))) WHEN (~ (rt0.c1)) THEN ((0X2e224784) BETWEEN (t0.c2) AND (t0.c0)) END FROM vt1, rt0, v0, t0 GROUP BY t0.c0; -- 0ms;
SELECT DISTINCT ((('-1274704514')) NOT BETWEEN ((((rt0.c4) IS FALSE))) AND ((MAX(v0.c0)))) FROM t0, v0, vt1 CROSS JOIN rt0 ON ((t0.c0)&(CASE WHEN rt0.c2 THEN rt0.c5 WHEN t0.c2 THEN '241555408' WHEN rt0.c2 THEN x'' WHEN t0.c2 THEN rt0.c6 WHEN t0.c2 THEN t0.c0 ELSE NULL END)); -- 0ms;
SELECT ALL NULL FROM vt1, t0, v0 WHERE (((x'')>>((((NULL)) BETWEEN ((0.5856895625926775)) AND ((NULL)))))) LIMIT -1643723452; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS REAL) THEN (NOT (t0.c1)) END FROM t0;SELECT ALL COUNT(*) OVER () FROM vt1 RIGHT OUTER JOIN v0 ON (((((t0.c2, rt0.c5, rt0.c2))<>((rt0.c4, t0.c0, v0.c0)))) ISNULL) CROSS JOIN rt0 ON ((t0.c2)-(rt0.c5)) COLLATE RTRIM WHERE (((('qU]<' COLLATE RTRIM))>=(((('*6r,0w%w') NOT BETWEEN (0.05767484462086636) AND ('xcZj/騙'))))));SELECT DISTINCT MAX(CASE rt0.c3  WHEN t0.c1 THEN v0.c0 ELSE rt0.c6 END COLLATE RTRIM) FROM rt0, t0, v0 ORDER BY TYPEOF(vt1.c0) DESC, 0.30605303308042864 DESC, CASE (((vt1.c0)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c2)))  WHEN ((vt1.c0) BETWEEN (rt0.c4) AND (rt0.c2)) THEN (rt0.c5 IN ()) ELSE TRIM(rt0.c2) END DESC;SELECT DISTINCT ((((((((((((v0.c0)OR(t0.c1)))AND(rt0.c3)))AND(((rt0.c5)OR(rt0.c1)))))AND(((rt0.c6)/(v0.c0)))))OR(rt0.c4)))AND(((rt0.c3) NOT BETWEEN (vt1.c0) AND (t0.c0)))), ((((rt0.c3) BETWEEN (t0.c1) AND (t0.c0)))!=((rt0.c6 IN ()))), AVG(MIN(t0.c1, t0.c2)) OVER ( RANGE  UNBOUNDED PRECEDING) FROM v0, t0 WHERE (CASE NULL COLLATE NOCASE  WHEN ((18701404) NOT BETWEEN (NULL) AND (NULL)) THEN (0.5797218500787268 IN ()) END);SELECT DISTINCT TOTAL(((rt0.c6) BETWEEN (rt0.c5) AND (rt0.c1))) FROM vt1, rt0, v0; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c6 AS BLOB))) FROM t0, v0 WHERE ((((SQLITE_COMPILEOPTION_GET(x'')))>((NULL COLLATE BINARY))));SELECT DISTINCT ((vt1.c0 IN ()) IN ()) FROM t0, v0, vt1, rt0 WHERE ((((0.38687694837257225)) BETWEEN (((('䊒Es(')*(NULL)))) AND (((0.38687694837257225 IN (x'', -1.261011261E9)))))); -- 1ms;
SELECT t0.c2 FROM rt0, t0, v0 WHERE ((- (CASE x'f90c'  WHEN 182270342 THEN '-1187500200' END))); -- 0ms;
SELECT DISTINCT ((((t0.c2) BETWEEN (0.8070046810610602) AND (rt0.c4)))*(t0.c0)) FROM t0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((((rt0.c5)!=(rt0.c6)))IS NOT(((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c4)))), ((((rt0.c0) ISNULL)) NOT NULL), x'' FROM t0, v0;SELECT DISTINCT (((NOT (rt0.c1)))%(rt0.c1)), (((CASE WHEN x'' THEN t0.c1 WHEN rt0.c6 THEN t0.c1 WHEN rt0.c4 THEN '931506280' ELSE rt0.c5 END))>(((+ (NULL))))), ((NULL)|(((t0.c0)!=(rt0.c4)))) FROM t0;SELECT t0.c0, (NOT (rt0.c6)) COLLATE BINARY, CAST(((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt0.c5)) AS INTEGER) FROM v0, t0 WHERE (((CAST(0xffffffff88508317 AS BLOB))GLOB(CASE 0.3314794927276027  WHEN 0.014093336957978764 THEN '' WHEN '-118163296' THEN NULL WHEN 0.042407540879933814 THEN x'' END))) GROUP BY (((CAST(rt0.c0 AS NUMERIC), ((((((((t0.c0)OR(v0.c0)))OR(rt0.c6)))OR(rt0.c6)))OR(t0.c0)), rt0.c0 COLLATE RTRIM))<>((((rt0.c0) IS TRUE), CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c2 THEN 1100489069 WHEN rt0.c4 THEN vt1.c0 ELSE rt0.c3 END, (0.6063604947505999 IN (rt0.c6)))));SELECT COUNT(CASE WHEN vt1.c0 THEN rt0.c3 END) OVER ( GROUPS  UNBOUNDED PRECEDING), ((TOTAL(rt0.c6)) BETWEEN (ROUND(rt0.c2, t0.c0)) AND (CAST(rt0.c2 AS REAL))), GROUP_CONCAT(3.22655163E8) OVER () FROM vt1, rt0 WHERE ((((('-2098808458' COLLATE NOCASE)AND((('') NOT NULL))))AND(0.5017890481404251))) ORDER BY ((((((rt0.c6) BETWEEN (rt0.c1) AND (rt0.c4)))AND(TRIM(DISTINCT NULL))))OR(t0.c2 COLLATE RTRIM));SELECT DISTINCT COUNT(*) OVER ( GROUPS  CURRENT ROW) FROM rt0 LIMIT -1187701962 OFFSET -1179831382; -- 0ms;
SELECT ALL NTH_VALUE(((((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c1)))>(((rt0.c4)<=(rt0.c0)))), (~ (((rt0.c4)<>(v0.c0))))) OVER (), (LIKELIHOOD(DISTINCT rt0.c5, 0.2697457657896748) IN ()), SUBSTR(CAST(rt0.c1 AS TEXT), ((((rt0.c3)AND(t0.c1)))OR('2144350405'))) FROM v0, vt1, rt0;SELECT ALL (((NOT (rt0.c3))) NOT BETWEEN (TRIM(t0.c1, rt0.c1)) AND (((vt1.c0) IS FALSE))) FROM v0, vt1, t0 WHERE (CASE x''  WHEN ((('\nT', NULL, '-134171865')) BETWEEN (('S', 0.7110660644087476, '-1262978452')) AND (('1895838076', NULL, 0x7e817150))) THEN CAST(NULL AS INTEGER) END) ORDER BY ((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM ASC LIMIT 976510789 OFFSET 1818734865;SELECT AVG(CASE WHEN t0.c1 THEN rt0.c6 END), 'n	', ((CAST(t0.c0 AS REAL)) NOT NULL) FROM v0, rt0 WHERE (CAST(CAST('0.7110660644087476' AS INTEGER) AS REAL));SELECT ALL ((x'') IS TRUE) FROM v0 WHERE (((((((((((NULL) NOT BETWEEN ('_') AND (0.9671483395034419)))AND(((NULL) NOT BETWEEN (x'30d8') AND ('454259188')))))OR(((x'') NOT NULL))))OR('1613561531')))OR((- ('tG{*'))))); -- 0ms;
SELECT ALL CAST(CASE WHEN t0.c2 THEN 1701527043 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN rt0.c6 WHEN rt0.c1 THEN rt0.c5 WHEN t0.c0 THEN rt0.c0 END AS NUMERIC) FROM rt0, v0;SELECT ALL rt0.c0, rt0.c2, CAST(t0.c0 AS REAL) COLLATE RTRIM FROM t0, vt1, v0, rt0 WHERE (((ABS(DISTINCT NULL)) BETWEEN ((('1590469823') BETWEEN (x'') AND (NULL))) AND (CASE NULL  WHEN '-1773963027' THEN 0X34730f66 WHEN -299095501 THEN NULL WHEN '<+' THEN '1819558387' WHEN -1069702809 THEN x'' WHEN 0X23cec94f THEN '-1192121685' END))) LIMIT 1241909847; -- 0ms;
SELECT t0.c0 FROM t0, rt0, vt1, v0 WHERE (((((json_insert(NULL, '14393010', 0.8353374935892278, 0.2125418394805767, x''))AND(((x'') NOT BETWEEN (0.597945362224011) AND (0.117512886862012)))))AND(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (SUM(v0.c0) IN ()), LAG((((v0.c0) NOT NULL) IN (NULL)), ((((((rt0.c2)OR(t0.c2)))AND('-2012509947'))) IS TRUE), (+ ((((v0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c0)))))) OVER (), (((rt0.c2)>=(rt0.c4)) IN ()) FROM v0 NOT INDEXED, vt1, rt0, t0 WHERE (((json_remove(0.814167268803151, NULL)) NOT NULL)) LIMIT 710137081 OFFSET 209284514; -- 1ms;
SELECT ALL CAST(((t0.c2) IS FALSE) AS REAL), ((x'') NOT NULL), COUNT(NULL) FROM t0, v0 WHERE (((CAST('-376214627' AS NUMERIC)) NOTNULL)); -- 0ms;
SELECT DISTINCT (+ ((((vt1.c0))==((v0.c0))))) FROM t0, vt1;SELECT ALL ((((((((rt0.c5)OR(vt1.c0)))AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c0)) COLLATE RTRIM FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN t0.c1 THEN t0.c2 END) NOT BETWEEN ((+ (rt0.c3))) AND ((t0.c1 IN (rt0.c2)))), PRINTF(rt0.c4, rt0.c2, rt0.c5) COLLATE NOCASE, (- (GLOB(t0.c1, t0.c2))) FROM t0 WHERE (((0.7751275544155793)IS(x'')) COLLATE RTRIM) LIMIT 1125060158 OFFSET 1100489069;SELECT DISTINCT ((TRIM(t0.c0))>=(CAST(rt0.c1 AS TEXT))), ((((t0.c2) NOTNULL))|((rt0.c0 IN ()))), ((((rt0.c2) IS TRUE)) NOT BETWEEN (MAX(v0.c0)) AND (((((((((rt0.c6)OR(v0.c0)))AND(t0.c2)))AND(NULL)))AND(v0.c0)))) FROM rt0, t0, vt1, v0 WHERE (((NOT (0.4175008325649051)) IN ())) GROUP BY ((CASE v0.c0  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c2 END)OR(((((((((0.6063604947505999)OR(rt0.c6)))AND(0.40224343240173444)))AND(t0.c2)))AND(v0.c0)))) HAVING (vt1.c0 IN (rt0.c1)); -- 0ms;
SELECT DISTINCT CASE (((rt0.c4, '32ㅧL0', NULL))<=((rt0.c1, rt0.c3, rt0.c4)))  WHEN rt0.c5 THEN t0.c2 END FROM rt0 INDEXED BY i16, vt1, v0;SELECT DISTINCT rt0.c6 FROM rt0 INDEXED BY i16 WHERE (CASE (-1187500200 IN (-1.1875002E9, 0.9433108243768648))  WHEN '-1579585880' COLLATE NOCASE THEN (((''))<=(('875917815'))) ELSE CAST(x'' AS TEXT) END) ORDER BY rt0.c3  NULLS FIRST;SELECT DISTINCT ((((((t0.c2))!=((v0.c0)))))>=((rt0.c0))), CAST(((vt1.c0)!=(t0.c2)) AS BLOB), LIKE(-1457090673 COLLATE RTRIM, ((t0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c2))) FROM v0, vt1;SELECT DISTINCT UPPER(((v0.c0) NOT NULL)) FROM v0, t0 WHERE (UPPER(((((x'4a51')AND(x'')))OR(0.3248778733289851)))); -- 0ms;
SELECT ALL (+ ((~ (rt0.c2)))), ((((((((((t0.c1)AND(rt0.c0)))AND(0.8850962554997895)))OR(t0.c0)))AND(-1839920843))) ISNULL), ((rt0.c5)AND(rt0.c1)) COLLATE RTRIM FROM t0, rt0, vt1 WHERE (0Xffffffffb3829a9c); -- 0ms;
SELECT DISTINCT ((NULL)OR(((t0.c0) BETWEEN (rt0.c1) AND (t0.c2)))) FROM v0, t0;SELECT ((CASE WHEN rt0.c0 THEN 0.446247030500207 WHEN rt0.c1 THEN vt1.c0 WHEN t0.c2 THEN rt0.c6 ELSE vt1.c0 END)<(rt0.c4 COLLATE BINARY)) FROM vt1, rt0, v0, t0 WHERE ('-642436484'); -- 0ms;
SELECT DISTINCT 0.8523387598007558, ((SUM(vt1.c0))&((vt1.c0 IN ()))), (((rt0.c4)>=(rt0.c1)) IN (CASE rt0.c5  WHEN t0.c1 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c2 WHEN '-361030067' THEN 0.6196362879114653 ELSE rt0.c4 END)) FROM v0, t0, rt0 GROUP BY CAST(CASE WHEN rt0.c0 THEN '' ELSE t0.c1 END AS REAL) HAVING (((t0.c1) NOT BETWEEN (x'f548') AND (rt0.c4)) IN (NULLIF(t0.c0, v0.c0), ((rt0.c4)&(rt0.c1))));SELECT DISTINCT CASE (NOT (v0.c0))  WHEN CAST(rt0.c2 AS BLOB) THEN CASE x''  WHEN 0.21380720681228982 THEN t0.c2 ELSE NULL END ELSE ((t0.c2)<(rt0.c3)) END FROM t0, v0 WHERE (((CASE WHEN '1169787684' THEN NULL END) NOT BETWEEN (x'') AND ((((0.9833568720071426)) NOT BETWEEN (('sㅧt<鯹l6')) AND ((NULL))))));SELECT DISTINCT (((((((((~ (vt1.c0)))AND(TOTAL(rt0.c2))))OR(((vt1.c0) BETWEEN (t0.c0) AND (rt0.c2)))))AND(CASE rt0.c6  WHEN rt0.c0 THEN rt0.c6 END)))OR(((rt0.c4) NOT BETWEEN (t0.c1) AND (t0.c1)))), ((((rt0.c5) ISNULL)) ISNULL), ((((t0.c2) BETWEEN (0.04276362272416245) AND (rt0.c5)))>(t0.c2)), CAST(CASE t0.c2  WHEN rt0.c0 THEN t0.c2 WHEN rt0.c5 THEN vt1.c0 WHEN t0.c1 THEN t0.c1 END AS TEXT), IFNULL(t0.c1, rt0.c6) COLLATE NOCASE FROM vt1, rt0 WHERE (CAST(NULL AS TEXT) COLLATE BINARY COLLATE BINARY);SELECT DISTINCT TRIM(((((vt1.c0)AND(rt0.c2)))AND(t0.c1))) FROM vt1, rt0, v0, t0 LIMIT -319617845 OFFSET 452674194; -- 1ms;
SELECT CAST(CASE t0.c2  WHEN rt0.c0 THEN vt1.c0 ELSE rt0.c5 END AS NUMERIC) FROM vt1;SELECT DISTINCT rt0.c6 FROM rt0 INDEXED BY i16, v0, t0;SELECT ALL (((((('-2144408835')AND(v0.c0)))OR(rt0.c6)))-(((0.2095913027195455)-(rt0.c5)))), CAST(((rt0.c6)AND(-1056637855)) AS NUMERIC), ((rt0.c5)IS NOT(rt0.c0)) COLLATE NOCASE COLLATE NOCASE FROM v0, vt1;SELECT ALL TRIM(CAST(rt0.c4 AS BLOB), ((rt0.c3) NOT NULL)) FROM vt1, rt0, v0 WHERE (((((UPPER(DISTINCT '0.8085764199011549'))AND(((('835285125', x'70ab', -1983509576))<((1882110589, x'', '>-7uR'))))))AND(CAST(NULL AS NUMERIC)))) ORDER BY (((~ (t0.c2)))IS(('1283836239' IN ()))) ASC;SELECT ALL GROUP_CONCAT(rt0.c5) OVER (), ((NOT (vt1.c0)) IN ()), (((t0.c0 COLLATE BINARY, (rt0.c1 IN ()), ((x'')IS NOT(t0.c1))))<((((rt0.c2) IS TRUE), 0.5684844875962557, rt0.c5))) FROM vt1, rt0, t0 GROUP BY ((CASE WHEN rt0.c0 THEN t0.c0 WHEN rt0.c6 THEN rt0.c3 WHEN '-700791253' THEN t0.c0 ELSE '0.13922104243752997' END) IS TRUE); -- 0ms;
SELECT DISTINCT (((rt0.c0 IN ())) NOT BETWEEN (CAST(rt0.c3 AS BLOB)) AND (rt0.c4 COLLATE BINARY)) FROM rt0, vt1, v0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT LIKE(t0.c2, t0.c1), 0.7583132523047664), (NOT ((((rt0.c3, v0.c0, x'')) BETWEEN (('9O', rt0.c3, rt0.c2)) AND ((v0.c0, rt0.c2, rt0.c6))))), TOTAL((- (vt1.c0))) OVER (), (((rt0.c6 IN ())) ISNULL), ((rt0.c6)IS(rt0.c1)) COLLATE RTRIM COLLATE NOCASE FROM t0, rt0, v0, vt1 ORDER BY rt0.c5; -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS BLOB) FROM v0 WHERE (((('p' IN ())) NOT NULL));SELECT DISTINCT TOTAL((vt1.c0 IN (rt0.c3))), ((((((v0.c0)>=(rt0.c5)))OR(TOTAL(vt1.c0))))OR(((0.02655996438025854) NOT BETWEEN (t0.c1) AND (rt0.c3)))), ((vt1.c0)IS(rt0.c6)), FIRST_VALUE(CASE WHEN ((((((((NULL)AND(NULL)))OR(t0.c1)))AND(t0.c2)))AND(t0.c1)) THEN (((t0.c2, t0.c2, t0.c0)) BETWEEN ((t0.c2, t0.c2, t0.c0)) AND ((x'', t0.c0, t0.c1))) WHEN CASE ''  WHEN t0.c1 THEN t0.c0 END THEN ((t0.c2)>=(t0.c1)) WHEN t0.c2 COLLATE NOCASE THEN CAST(t0.c1 AS BLOB) END) OVER (), DATETIME(rt0.c3, ((t0.c2) IS TRUE), CAST(rt0.c1 AS INTEGER), CASE rt0.c0  WHEN rt0.c2 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c5 THEN t0.c2 ELSE rt0.c5 END, x''), ((rt0.c3 COLLATE NOCASE) BETWEEN (((((0.9433108243768648)OR(rt0.c0)))OR(rt0.c5))) AND (((((((((rt0.c0)AND(rt0.c6)))OR('FM')))OR(t0.c2)))AND(rt0.c1)))), (((CASE rt0.c4  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c6 END))=((rt0.c6 COLLATE BINARY))) FROM t0;SELECT ALL (((rt0.c6, rt0.c2, t0.c2)) BETWEEN ((0.9433108243768648, rt0.c5, rt0.c2)) AND ((rt0.c3, vt1.c0, rt0.c5))) COLLATE NOCASE, x'9a69', json_patch(((x'eaf7') NOT NULL), ((vt1.c0)+(t0.c2))) FROM t0;SELECT '9O' FROM v0, vt1 WHERE (((((0.11694350173778545) BETWEEN (0.7360054434981411) AND ('Ws/t}m~/\'))) NOT BETWEEN (((((((((((((0.117512886862012)AND(-1.080133899E9)))OR(0.4693672179072481)))AND(x'')))AND(-1.067993355E9)))OR(2.41555408E8)))AND('878515528'))) AND ((((0.6388049438960953)) NOT BETWEEN ((-4.74874908E8)) AND ((204630207)))))); -- 0ms;
SELECT SUM(((vt1.c0)IS NOT(rt0.c6))) OVER () FROM vt1, t0, v0, rt0 WHERE (CAST(('蚩BI9๎Km\ ' IN ()) AS BLOB)); -- 0ms;
SELECT DISTINCT (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 END IN ()) FROM vt1, rt0; -- 0ms;
SELECT ALL TOTAL(((rt0.c1) NOT BETWEEN (v0.c0) AND (vt1.c0))) FROM t0, rt0 WHERE ('-2007989481');SELECT rt0.c5 FROM vt1 INDEXED BY i16, v0, rt0, t0;SELECT ALL ((((((rt0.c6)IS(NULL)))OR(((t0.c2) BETWEEN (rt0.c4) AND (rt0.c5)))))AND(rt0.c0)), (- (((NULL)OR('')))), rt0.c1 FROM v0, t0;SELECT MAX(((rt0.c1) NOT BETWEEN (t0.c0) AND (v0.c0))), rt0.c5, ((AVG(rt0.c2))<=(UPPER(vt1.c0))) FROM vt1, v0, rt0, t0 WHERE (CAST(((773998468) BETWEEN ('**W') AND (-1441230821)) AS REAL)); -- 0ms;
SELECT ALL (NOT (CASE t0.c0  WHEN rt0.c4 THEN t0.c2 WHEN rt0.c3 THEN rt0.c6 WHEN 0.7067270354393598 THEN rt0.c0 ELSE t0.c2 END)) FROM vt1, rt0 WHERE (LIKELIHOOD(UPPER(DISTINCT NULL), 0.14578060824109007));SELECT ALL ((((rt0.c4)-(rt0.c4))) IS TRUE) FROM vt1, t0;SELECT ALL (('0.7360054434981411')LIKE(CAST(t0.c2 AS INTEGER))), CAST(((rt0.c6)<<(v0.c0)) AS NUMERIC), NULL FROM vt1, t0, rt0, v0 GROUP BY (+ (LIKE(rt0.c3, rt0.c1, '0'))) HAVING ((COUNT(rt0.c4))>>((('164413256')>=(t0.c0)))) LIMIT 1101155987; -- 0ms;
SELECT ALL ((rt0.c3 COLLATE BINARY)<<((- (rt0.c1)))) FROM t0, vt1, v0 ORDER BY ((((rt0.c4)<<(x''))) IS TRUE) DESC  NULLS FIRST;SELECT CASE ((vt1.c0)AND(t0.c0))  WHEN MAX(rt0.c4) THEN ((t0.c1)<(rt0.c3)) WHEN NULL THEN ((rt0.c5)LIKE(rt0.c3)) WHEN ABS(v0.c0) THEN CAST(t0.c2 AS BLOB) ELSE MAX(rt0.c5) END, (SUM(rt0.c3) IN ()), (((MIN(rt0.c3)))>=((((NULL) IS TRUE)))) FROM v0, vt1, t0 WHERE ((((CAST(0.8026970243826801 AS INTEGER), -1.939841639E9 COLLATE NOCASE, (('蚩BI9๎KM\ ')||('V+'))))<=((0.7006074039494612, ((x'')-(NULL)), ((((x'')AND(1.680658722E9)))AND(0.17027673903811458))))));SELECT DISTINCT (((((((((((((((rt0.c3))<((t0.c1))))AND(((rt0.c4) BETWEEN (t0.c1) AND (rt0.c5)))))OR(COUNT(*))))OR(rt0.c3)))OR(rt0.c6)))AND(((v0.c0)OR(t0.c2)))))OR(CAST(t0.c0 AS INTEGER))), LTRIM(((v0.c0) IS TRUE)), ((rt0.c5)AND(rtreenode(v0.c0, '886997964'))) FROM v0, vt1 WHERE (((CAST('-1042645284' AS INTEGER))AND((NOT (NULL)))));SELECT DISTINCT COUNT(((v0.c0) NOT NULL)) FROM rt0 LIMIT 723389989 OFFSET -1633275604;SELECT DISTINCT TOTAL(TRIM(rt0.c3)) OVER () FROM v0, vt1, t0, rt0 WHERE (CASE ((0.5651396654045383)LIKE(0xffffffffb638dc5c))  WHEN '1' THEN CAST('' AS NUMERIC) END) LIMIT -938099613 OFFSET 99381486; -- 0ms;
SELECT DISTINCT ((CASE v0.c0  WHEN x'6ab5' THEN v0.c0 END) NOT BETWEEN (((rt0.c6) NOT BETWEEN (rt0.c2) AND (rt0.c5))) AND (0.8167447131434 COLLATE BINARY)), CASE WHEN (((rt0.c6, rt0.c6, rt0.c6)) NOT BETWEEN ((0xffffffffb8b5c7fa, vt1.c0, t0.c1)) AND ((rt0.c6, rt0.c3, t0.c2))) THEN (rt0.c5 IN ()) ELSE ((vt1.c0)OR(t0.c2)) END, 0xffffffffe3b1fbe4 FROM t0 WHERE ((- (CASE NULL  WHEN 0.5153448423517698 THEN '-216430949' ELSE 0.7384672345238416 END))) INTERSECT SELECT AVG((rt0.c1 IN ())), SUM(((t0.c1) BETWEEN ('^lH') AND (t0.c1))), '&~XvO\+cu' FROM v0 LIMIT 1895838076;SELECT DISTINCT rt0.c6 FROM rt0; -- 0ms;
SELECT DISTINCT (((((' %zAW(S)')) NOT BETWEEN ((t0.c1)) AND ((rt0.c6))))|(((rt0.c0)-(vt1.c0)))) FROM t0 WHERE (((((((0.24194381057269243)OR(NULL)))OR('e')))|((((('mCA䱷T')OR('d\nॼT')))OR(1.764959529E9))))) ORDER BY ((x'fec7') NOT NULL), (((('z')OR(CAST(rt0.c4 AS REAL))))AND((x'' IN ())))  NULLS LAST, 'P'  NULLS LAST;SELECT x'' FROM vt1, rt0 WHERE ((((((0.12406143242926826)) NOT BETWEEN (('1467071224')) AND ((NULL)))) NOT BETWEEN (CASE '2054518243'  WHEN NULL THEN 0.2588097731021204 ELSE NULL END) AND (((NULL)*(x''))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c3)) NOT BETWEEN ((t0.c1)) AND ((v0.c0))), ((x'')%(v0.c0)), (+ (rt0.c1))))>=((((rt0.c3) IS TRUE), (rt0.c4 IN ()), CASE WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c6 WHEN t0.c2 THEN rt0.c1 END))) FROM vt1, rt0;SELECT ALL ((CAST(t0.c0 AS INTEGER)) BETWEEN ((((rt0.c5, t0.c1, rt0.c2))<=((vt1.c0, t0.c0, rt0.c0)))) AND (SUM(0.7657362642247322))) FROM rt0, v0, t0, vt1; -- 0ms;
SELECT DISTINCT (((rt0.c3, t0.c1, rt0.c5, rt0.c3, rt0.c4)) NOT BETWEEN (((v0.c0 IN ()), (~ (rt0.c6)), ((x'') NOT NULL), ((((((((t0.c2)AND(rt0.c0)))AND(rt0.c0)))OR('-1988457785')))AND(rt0.c2)), ((rt0.c5) NOT BETWEEN (t0.c0) AND (rt0.c2)))) AND ((((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c1)), GROUP_CONCAT(rt0.c5), CASE rt0.c4  WHEN t0.c1 THEN rt0.c1 END, CAST(t0.c2 AS REAL), CAST(vt1.c0 AS BLOB)))) FROM v0, vt1 WHERE (((json_valid(0.5592738110151229)) NOT NULL));SELECT ((t0.c0)GLOB(vt1.c0)) FROM rt0 INNER JOIN vt1 ON ((rt0.c1) IS FALSE) RIGHT OUTER JOIN v0 ON t0.c1 LEFT OUTER JOIN t0 ON TRIM((+ (rt0.c4)), ((((rt0.c6)AND(NULL)))OR(rt0.c5))) WHERE (CAST(((NULL)|(NULL)) AS TEXT)) ORDER BY ((((((((((((rt0.c1)AND(vt1.c0)))AND(rt0.c4)))AND(vt1.c0)))AND(vt1.c0)))AND(rt0.c0 COLLATE BINARY)))OR(((t0.c1)*(rt0.c4)))) DESC;SELECT (rt0.c2 COLLATE RTRIM IN ()) FROM v0, t0, vt1; -- 1ms;
SELECT DISTINCT ((t0.c0 COLLATE RTRIM)-(((rt0.c5)=(rt0.c4)))), (((t0.c2)LIKE(t0.c2)) IN ()), ((v0.c0) NOTNULL) FROM vt1, v0, rt0, t0; -- 0ms;
SELECT ALL GROUP_CONCAT(((t0.c2) NOTNULL)) OVER () FROM v0, vt1, rt0 WHERE ((((x'62a4')) NOT BETWEEN ((0Xffffffff8101f417)) AND (('-1836718819'))) COLLATE RTRIM);SELECT ALL ((~ (rt0.c3)) IN ()) FROM vt1, v0, t0, rt0; -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(rt0.c5) THEN RTRIM(rt0.c1) ELSE CAST(rt0.c5 AS NUMERIC) END FROM v0, t0, vt1, rt0; -- 0ms;
SELECT ((((v0.c0)<<(rt0.c2))) BETWEEN (t0.c0 COLLATE RTRIM) AND ('579572491')) FROM v0, rt0 WHERE (((CAST(x'f51a' AS NUMERIC)) NOT BETWEEN (x'' COLLATE NOCASE) AND ((- (0.9555703304193877))))) LIMIT 1895838076 OFFSET -1462829715;SELECT ALL ((((rt0.c6)/(NULL)))>>(((vt1.c0)/(rt0.c6)))) FROM t0;SELECT DISTINCT (((rt0.c2 IN ())) NOT NULL), ((CAST(0.5590176849842667 AS REAL))-((+ (t0.c0)))), ((((((rt0.c5) ISNULL))AND(CAST('1693700372' AS REAL))))AND(rt0.c5 COLLATE BINARY)) FROM t0, v0;SELECT ALL ((- (rt0.c2)) IN ((rt0.c1 IN ()), ((rt0.c2)LIKE(rt0.c2)))) FROM v0, rt0, t0, vt1 WHERE ((((NULL, 0.6066880519317697, NULL)) BETWEEN ((SQLITE_SOURCE_ID(), (+ (NULL)), CASE WHEN NULL THEN '' END)) AND ((CASE NULL  WHEN 0xffffffffb4d67ec3 THEN x'' END, CAST(x'' AS BLOB), ((NULL) NOT BETWEEN (x'') AND (x'')))))) ORDER BY (CAST(rt0.c0 AS REAL) IN ())  NULLS FIRST, (- (((t0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c5))))  NULLS FIRST; -- 0ms;
SELECT ALL (('+貛') BETWEEN (CAST(t0.c0 AS BLOB)) AND (((t0.c1) IS FALSE))) FROM t0, v0, vt1; -- 0ms;
SELECT DISTINCT CAST(NULL AS TEXT) FROM v0, vt1, rt0, t0; -- 0ms;
SELECT ALL ((CAST(t0.c2 AS NUMERIC)) NOT BETWEEN (rt0.c4 COLLATE BINARY) AND (((t0.c0) IS FALSE))) FROM v0, vt1, rt0 WHERE ((- (((-8.42813205E8) BETWEEN ('230036826') AND ('()')))));SELECT DISTINCT ((((vt1.c0)-(t0.c1))) ISNULL), '-627678056', rt0.c4, (((rt0.c4)AND(v0.c0)) IN (((((vt1.c0)OR(t0.c2)))OR(rt0.c0)))), (COUNT(*) IN ()) FROM t0 NOT INDEXED;SELECT DISTINCT (((~ (rt0.c3))) NOT BETWEEN (t0.c0) AND (LIKELY(DISTINCT t0.c2))) FROM v0, vt1, rt0;SELECT ALL 0.060671854959030824 FROM t0, rt0 ORDER BY ((((NULL)&(t0.c2)))|('3r>lVךּ')); -- 0ms;
SELECT ALL (((rt0.c4 IN ()))=((NOT (rt0.c1)))) FROM v0 ORDER BY 0.776604117165103, (((rt0.c6)) NOT BETWEEN ((((rt0.c3) NOT BETWEEN (rt0.c0) AND (vt1.c0)))) AND ((((t0.c1)!=(t0.c2))))) ASC  NULLS LAST;SELECT ALL CASE 'Dퟐ'  WHEN (('2035185499') ISNULL) THEN GROUP_CONCAT(0.46100775463763133) ELSE CASE WHEN rt0.c1 THEN vt1.c0 END END FROM t0, rt0, v0 WHERE ((x'' IN ()) COLLATE BINARY) GROUP BY 0.7322655695447844, CASE WHEN (NOT (vt1.c0)) THEN ((rt0.c3) NOT BETWEEN (t0.c1) AND (v0.c0)) ELSE ((rt0.c3)>(v0.c0)) END, ((CAST(t0.c2 AS REAL)) BETWEEN ((- (t0.c1))) AND ('Uwj'));SELECT DISTINCT COUNT(*), SUBSTR((v0.c0 IN ()), rt0.c6 COLLATE NOCASE), ABS((((v0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c2)))) FROM t0, v0 INDEXED BY i16, rt0, vt1 WHERE ((((NULL IN ())) IS FALSE)) ORDER BY (((rt0.c1 IN (rt0.c0, t0.c0)))&(v0.c0 COLLATE NOCASE)) ASC;SELECT DISTINCT ((((((((UNLIKELY(DISTINCT t0.c2))OR(((t0.c1) BETWEEN (rt0.c5) AND (t0.c2)))))OR(x'')))OR(((rt0.c1) NOT BETWEEN (x'') AND (1.735788864E9)))))AND(NULL)) FROM v0, vt1, rt0 WHERE (CASE WHEN CASE WHEN 'ZH' THEN NULL END THEN CAST(x'' AS INTEGER) ELSE CAST('(*UO4' AS INTEGER) END);SELECT DISTINCT RANK() OVER () FROM v0, vt1 WHERE ((~ ((((x'2ce8', -1436680700, 1655242792))<=(('-1441230821', NULL, x'')))))) UNION ALL SELECT DISTINCT (((rt0.c6, rt0.c2, rt0.c1)) NOT BETWEEN ((CASE WHEN t0.c2 THEN t0.c2 ELSE v0.c0 END, (0xffffffffa52fe650 IN ('*')), ((t0.c1) NOT NULL))) AND (((((vt1.c0, t0.c1, t0.c1, rt0.c3, v0.c0))>((rt0.c4, NULL, t0.c1, rt0.c3, rt0.c3))), (((vt1.c0, rt0.c4, rt0.c5)) NOT BETWEEN ((rt0.c6, vt1.c0, rt0.c1)) AND ((rt0.c5, t0.c2, t0.c1))), ((vt1.c0) IS FALSE)))) FROM t0;SELECT GLOB(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c5)), CASE vt1.c0  WHEN rt0.c0 THEN v0.c0 END) FROM rt0, v0 ORDER BY ((((v0.c0)%(t0.c2)))LIKE(1.680658722E9)) DESC, ((((((t0.c0)OR(v0.c0)))AND(rt0.c0))) IS FALSE) ASC, (((((rt0.c1 IN ()))OR(IFNULL(rt0.c0, rt0.c1))))OR(COALESCE(DISTINCT rt0.c4, rt0.c2)));SELECT DISTINCT (((rt0.c3) NOT NULL) IN ((((rt0.c2))<((t0.c2))))) FROM rt0, v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c6 WHEN rt0.c1 THEN rt0.c4 END COLLATE NOCASE FROM t0, v0, rt0 WHERE (9.58613102E8) LIMIT -1769577652 OFFSET -1823062168; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM vt1; -- 0ms;
SELECT TOTAL(NULL), (('1585616541')-(((x'') NOT BETWEEN (vt1.c0) AND (rt0.c0)))), (- (rt0.c0)) FROM rt0, t0, vt1 WHERE (((0.1611099952151095)=((- (-1.939841639E9))))); -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c1 AS TEXT)  WHEN x'' THEN QUOTE(t0.c1) END FROM t0, v0 WHERE ((((((NULL))<=((0.10518692883162284)))) NOT BETWEEN ('1735788864') AND ((((NULL, ']r,4O鍵j俵', '-633083717'))>((NULL, '2007351523', NULL))))));SELECT x'a201' FROM rt0, v0, vt1; -- 0ms;
SELECT CAST(((rt0.c6) BETWEEN (rt0.c0) AND (rt0.c1)) AS NUMERIC) FROM vt1, v0, rt0, t0; -- 0ms;
SELECT DISTINCT '돳^g5]lh' FROM v0, rt0 INDEXED BY i16, vt1 WHERE (CASE WHEN x'bd26' THEN x'' WHEN NULL THEN x'' WHEN x'' THEN x'' END COLLATE RTRIM) ORDER BY ((rt0.c4) IS TRUE) COLLATE BINARY LIMIT -1178004452 OFFSET -693053765;SELECT DISTINCT ((((0xffffffffe3b1fbe4) IS TRUE))=(rt0.c1)) FROM t0 NOT INDEXED, vt1 WHERE (((266175 COLLATE BINARY) NOT BETWEEN ((((NULL))<=(('-1')))) AND ((~ (0.2520084670605762)))));SELECT DISTINCT GROUP_CONCAT(((rt0.c6) IS TRUE)) FROM v0, vt1, rt0 ORDER BY ((((rt0.c4) BETWEEN (rt0.c1) AND (rt0.c6))) BETWEEN ((rt0.c2 IN ())) AND (((t0.c0) BETWEEN (rt0.c6) AND (rt0.c0))))  NULLS LAST, UPPER(DISTINCT (rt0.c5 IN ())), (((t0.c1)GLOB(rt0.c5)) IN (CAST(rt0.c4 AS REAL)))  NULLS FIRST;SELECT ALL ((rt0.c1)IS NOT(((rt0.c0) NOT BETWEEN (t0.c0) AND ('-1512678691')))), MIN(((rt0.c5) NOT BETWEEN (0.7384672345238416) AND (rt0.c0)) COLLATE RTRIM), ((CAST(v0.c0 AS REAL))GLOB(AVG(rt0.c6))) FROM rt0, v0, t0 WHERE (CASE WHEN QUOTE(1754524794) THEN LOWER(NULL) WHEN ((x'') IS FALSE) THEN ((((-1018013739)OR(-1.058274021E9)))OR(NULL)) WHEN ((((((((0.9266785543476939)OR(NULL)))OR(939937511)))OR(NULL)))OR(x'2822')) THEN ((0X6044979d) BETWEEN (0.266278203910464) AND (0X5a90b8ff)) ELSE (('-452781557')+(x'')) END) ORDER BY (CASE rt0.c3  WHEN v0.c0 THEN vt1.c0 END IN ()); -- 0ms;
SELECT ((CASE rt0.c5  WHEN t0.c2 THEN rt0.c5 WHEN vt1.c0 THEN x'' WHEN rt0.c5 THEN v0.c0 END) ISNULL) FROM v0, vt1, rt0, t0 WHERE (((('-27453815' IN (0.4038540460464456, '1283836239', 0.8223302339590843)))<(((0.39950045344600427) NOTNULL)))); -- 0ms;
SELECT (((vt1.c0, rt0.c2, rt0.c3)) BETWEEN (((~ (rt0.c4)), (~ (t0.c0)), (- (rt0.c6)))) AND ((((NULL)-(t0.c0)), NULLIF(DISTINCT rt0.c1, rt0.c1), vt1.c0))), CAST('{䀨[(Llc' AS REAL) COLLATE NOCASE COLLATE BINARY, ((((((rt0.c4)LIKE(rt0.c2)))OR(((rt0.c0)LIKE(x'')))))AND(0xffffffffeba57be9)) FROM rt0, t0;SELECT DISTINCT ((0Xffffffffe01a782c) BETWEEN (((rt0.c3) IS FALSE)) AND (rt0.c1)) FROM vt1;SELECT ALL 0X11d5c5c, (NOT (LIKELIHOOD(DISTINCT rt0.c1, 0.2117104000250175))), ((((((((((rt0.c5)AND(t0.c2)))AND(rt0.c3)))OR(rt0.c5)))OR(rt0.c6))) ISNULL) FROM vt1, v0, rt0 ORDER BY ((rt0.c0)IS NOT(vt1.c0)) COLLATE BINARY  NULLS LAST;SELECT ALL LEAD((((rt0.c0 IN ())) BETWEEN (rt0.c2) AND (x'eda5')), QUOTE(((NULL) NOT BETWEEN (rt0.c3) AND (t0.c0))), ((CAST(rt0.c5 AS NUMERIC)) NOTNULL)) OVER ( PARTITION BY x'd5a3', ((LIKE(t0.c1, t0.c0, '\')) NOTNULL) GROUPS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW), GROUP_CONCAT(((rt0.c6) BETWEEN (v0.c0) AND (rt0.c2))), rt0.c0 FROM rt0, vt1, t0, v0; -- 0ms;
SELECT DISTINCT ((((t0.c2)|(vt1.c0))) NOT NULL) FROM v0, vt1;SELECT DISTINCT ((((rt0.c0)<(t0.c0)))>(SQLITE_VERSION())), (((rt0.c2)) NOT BETWEEN ((COUNT(*))) AND ((SUM(t0.c0)))), rt0.c6, CAST(((rt0.c2) NOT BETWEEN (t0.c1) AND (rt0.c2)) AS INTEGER), NULL FROM t0, rt0, v0, vt1 WHERE (CAST(LIKELIHOOD(DISTINCT '-799560621', 0.03675443506960352) AS REAL)); -- 0ms;
SELECT ((((vt1.c0)IS(rt0.c4))) NOT NULL), (vt1.c0 IN ()) COLLATE RTRIM, (((+ (rt0.c0)))GLOB((t0.c2 IN ()))) FROM vt1 NOT INDEXED, rt0 WHERE (((((~ (1.585616541E9))))<((x'' COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT ((((((((rt0.c0 COLLATE RTRIM)OR(((rt0.c3) ISNULL))))AND(((rt0.c5)<>(rt0.c4)))))AND(((t0.c1)==(t0.c0)))))OR((+ (t0.c1)))) FROM rt0, vt1;SELECT DISTINCT AVG(CAST(rt0.c2 AS NUMERIC)) FROM vt1, t0, rt0 WHERE (((((('1567042943')) NOT BETWEEN (('-574316157')) AND ((0.31788304241668075))))<=(NULL))); -- 0ms;
SELECT (((rt0.c5)) BETWEEN (((rt0.c3 IN ()))) AND ((((rt0.c5) NOT BETWEEN (rt0.c0) AND (t0.c0))))) FROM rt0;SELECT CAST(v0.c0 AS REAL) COLLATE BINARY FROM t0, rt0, v0, vt1; -- 0ms;
SELECT ((CAST(rt0.c2 AS TEXT)) NOT BETWEEN (CASE WHEN rt0.c6 THEN rt0.c5 END) AND (((rt0.c3) NOT NULL))), SUM(((t0.c1)IS(rt0.c0))) OVER (), ((((CAST(rt0.c2 AS INTEGER))AND(((rt0.c4)GLOB(rt0.c5)))))AND(COUNT(*))) FROM rt0, v0 WHERE (NULL);SELECT DISTINCT -547995475 FROM t0, v0, rt0; -- 0ms;
SELECT DISTINCT (NOT (CAST(rt0.c3 AS INTEGER))) FROM vt1, v0, t0 WHERE (((((((0.2610234172809629)OR(NULL)))OR(x'')))>>(TRIM(x'da4d'))));SELECT (NULLIF('dퟐ', t0.c0) IN ()) FROM v0, rt0, vt1, t0 WHERE ((((('')AND(0X1dc9dfb4)))OR('')) COLLATE BINARY) GROUP BY ((((rt0.c3) NOT BETWEEN (t0.c2) AND (rt0.c1))) BETWEEN (0.8951877200021158) AND (t0.c2)) HAVING ((MIN(t0.c2))AND(CAST(v0.c0 AS REAL))); -- 0ms;
SELECT ALL CASE WHEN ((((((((((((rt0.c1)OR(NULL)))AND(v0.c0)))AND(rt0.c6)))OR(rt0.c5)))AND(rt0.c0)))OR(v0.c0)) THEN AVG(t0.c0) ELSE ((v0.c0) BETWEEN (rt0.c3) AND (t0.c0)) END, (- (rt0.c4)), CASE WHEN COUNT(rt0.c4) THEN CAST(t0.c2 AS REAL) END FROM rt0 WHERE (CASE WHEN (('-597167977')OR(0Xffffffff9fc77613)) THEN (('-1694699918')<(0X2e224784)) WHEN (('216162714')/('0.7751275544155793')) THEN CAST('306808263' AS BLOB) WHEN (NULL IN ('711218882')) THEN ((NULL)-(NULL)) ELSE ((x'5372')<<(x'')) END);SELECT ALL AVG(((rt0.c0) ISNULL)) OVER (), RANK() OVER (), (NOT (rt0.c4)) COLLATE BINARY FROM v0;SELECT DISTINCT CASE WHEN ((rt0.c4) ISNULL) THEN MAX(vt1.c0) ELSE NULL END FROM t0, vt1, v0, rt0 WHERE ((NOT (((x'') NOT BETWEEN ('') AND (0.7006074039494612))))); -- 0ms;
SELECT ALL ((MAX(0.3230678501719534)) NOTNULL) FROM rt0, t0 WHERE (((json_type('0.2687263901467153'))/((((NULL, NULL, 0X20bd1f7e, 1.652922905E9, x'')) BETWEEN ((x'bd42', x'', 'tg{*', 0.010688991419250726, '943566583')) AND ((0.4502916016943552, 1649548529, x'', NULL, x'')))))) LIMIT 757095010; -- 0ms;
SELECT ALL SUM(((((t0.c0)AND(rt0.c2)))AND(rt0.c6)) COLLATE NOCASE), '', CAST((t0.c1 IN (t0.c1)) AS REAL) FROM rt0, vt1, t0; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((LIKELIHOOD(vt1.c0, 0.5995080329051906))) AND (((rt0.c0 IN (rt0.c4, x''))))), ((t0.c1) IS FALSE), PRINTF((((rt0.c6))<=((t0.c0))), ((rt0.c3)&(rt0.c0)), (x'd80c' IN (rt0.c6))) FROM t0, vt1, rt0, v0 WHERE (((((CASE WHEN x'' THEN 0.3511344688329907 WHEN NULL THEN 0.2786434145081682 WHEN NULL THEN x'' END)OR(((((NULL)AND(0.1684037623005049)))OR(NULL)))))OR((('-780627651') IS FALSE)))) ORDER BY (- (((rt0.c6) NOT BETWEEN (rt0.c4) AND (rt0.c3)))) ASC, (((- (rt0.c0)))>=(((rt0.c6)<=(rt0.c4)))) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT (vt1.c0 IN (t0.c0)) COLLATE RTRIM FROM vt1 RIGHT OUTER JOIN t0 ON (CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c6 WHEN t0.c2 THEN rt0.c2 ELSE v0.c0 END IN ()) FULL OUTER JOIN rt0 ON ((0.7953710718572641)LIKE(((t0.c0)-(rt0.c4)))) INNER JOIN v0 ON ((((((((CAST(v0.c0 AS BLOB))OR(CAST(rt0.c4 AS INTEGER))))AND(rt0.c1 COLLATE BINARY)))AND((rt0.c5 IN ()))))OR(((rt0.c1) NOT BETWEEN (rt0.c2) AND (vt1.c0)))); -- 3ms;
SELECT (((((((('0.9585519503472537')AND(((t0.c0) BETWEEN (rt0.c6) AND (rt0.c1)))))OR(0X52bbb3ca)))OR(rt0.c1)))OR(IFNULL(vt1.c0, x''))), COUNT(*), ((((rt0.c3) BETWEEN (t0.c1) AND (rt0.c5)))&(((((v0.c0)OR(rt0.c6)))OR(t0.c0)))) FROM vt1, t0;SELECT ((GROUP_CONCAT(t0.c2)) BETWEEN (((NULL)==(t0.c2))) AND (t0.c2)) FROM vt1, rt0 ORDER BY ((((x'fc9e')<=(NULL))) ISNULL) ASC;SELECT ALL (~ (NULL)) COLLATE RTRIM FROM v0, t0, vt1 WHERE ((('') BETWEEN (((0.5959529222280039)LIKE(0.057752354177753706))) AND (((('1590469823', 0X717f9bf9, '-1195591916')) BETWEEN ((-1927692379, NULL, NULL)) AND ((0.1534800537107307, x'', NULL)))))); -- 0ms;
SELECT ALL ((((LIKELY(DISTINCT vt1.c0))AND(CASE t0.c1  WHEN rt0.c5 THEN rt0.c2 ELSE t0.c0 END)))OR(COALESCE(rt0.c5, v0.c0))) FROM v0, t0, rt0 WHERE (CASE WHEN ((x'') NOT BETWEEN (0.683883126389854) AND (0.2259161196954652)) THEN (x'' IN ()) ELSE LIKELIHOOD(NULL, 0.1572417182958259) END);SELECT DISTINCT ((((rt0.c4 IN ())))<>((CHAR(rt0.c2, rt0.c2, t0.c0)))), (('' COLLATE RTRIM) BETWEEN (((rt0.c2)|(rt0.c4))) AND (CASE WHEN rt0.c5 THEN t0.c2 ELSE vt1.c0 END)), ((rt0.c5) ISNULL) COLLATE RTRIM FROM v0, rt0, vt1;SELECT DISTINCT ((v0.c0 COLLATE RTRIM) ISNULL), t0.c0, MIN(((rt0.c3)||(t0.c2))) FROM v0, rt0;SELECT DISTINCT '\nT', ((((rt0.c3) BETWEEN (0.5756969015948381) AND (t0.c0))) BETWEEN (NULL) AND (v0.c0 COLLATE NOCASE)), CAST(CAST(rt0.c4 AS REAL) AS REAL) FROM v0 INTERSECT SELECT ((rt0.c6) NOT BETWEEN (NULL) AND (rt0.c3)) COLLATE RTRIM, (NULL IN ()), (+ (x'')) FROM vt1;SELECT DISTINCT CASE WHEN NULL THEN 0.22359602730610817 ELSE ((vt1.c0) IS TRUE) END FROM t0 LIMIT -1504716479;SELECT DISTINCT ((((((rt0.c0)OR(rt0.c3)))OR(rt0.c1))) NOT BETWEEN (((rt0.c3)<=(rt0.c4))) AND (((rt0.c1) IS FALSE))) FROM v0, vt1, t0, rt0 LIMIT -1769577652 OFFSET -657828982; -- 1ms;
SELECT ((CASE rt0.c3  WHEN rt0.c4 THEN v0.c0 ELSE rt0.c2 END) IS FALSE) FROM t0 WHERE (LENGTH((+ (x'6aa0'))));SELECT ALL CASE WHEN CAST(t0.c0 AS INTEGER) THEN ((rt0.c6)<>(rt0.c0)) WHEN ((('TE', rt0.c3, v0.c0)) BETWEEN ((rt0.c5, rt0.c3, t0.c2)) AND ((rt0.c4, rt0.c4, t0.c1))) THEN ((rt0.c6) NOT NULL) WHEN TOTAL(rt0.c1) THEN rt0.c2 COLLATE BINARY WHEN ((rt0.c1)<=(t0.c1)) THEN ((t0.c1) BETWEEN (rt0.c5) AND (vt1.c0)) WHEN COUNT(rt0.c0) THEN CAST(v0.c0 AS NUMERIC) END, TOTAL(x'7445' COLLATE RTRIM) COLLATE BINARY, (((((rt0.c5, t0.c2, rt0.c3)) NOT BETWEEN ((v0.c0, rt0.c6, rt0.c3)) AND ((rt0.c5, rt0.c6, t0.c1)))) NOTNULL) FROM rt0;SELECT DISTINCT NULL FROM rt0, t0, vt1 WHERE (CAST(CASE 0.995157480363186  WHEN 0.17572104623065277 THEN 0.29832891948789986 ELSE x'' END AS BLOB)); -- 0ms;
SELECT DISTINCT ((((rt0.c0)<<(rt0.c0))) NOT BETWEEN (t0.c2 COLLATE RTRIM) AND (AVG(t0.c0))) FROM v0, vt1;SELECT ALL CAST(CAST(t0.c2 AS TEXT) AS REAL) FROM v0, t0, rt0, vt1 WHERE ((+ (((2.035185499E9)IS(NULL))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)==((rt0.c2 IN ()))), SUM(((t0.c0) ISNULL)), t0.c2 FROM vt1, t0 WHERE (((CAST('747487387' AS TEXT)) NOT BETWEEN (((x'') NOT NULL)) AND (((0.5232762161230805) NOTNULL))));SELECT ALL ((CAST(rt0.c1 AS REAL)) BETWEEN (NULL) AND (SUM(t0.c0))), (((((rt0.c5)) NOT BETWEEN ((t0.c0)) AND ((t0.c1))))*((((rt0.c4))>=((t0.c1))))), ((((t0.c1)<<(rt0.c2))) NOTNULL) FROM vt1, rt0 WHERE ((CASE '铑v'  WHEN NULL THEN 0xfffffffff1ac3167 ELSE x'' END IN (UNLIKELY(DISTINCT 0.6629131968103867))));SELECT PERCENT_RANK() OVER () FROM v0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((load_extension(rt0.c1, rt0.c3))==(rt0.c4)), ((((vt1.c0)!=(rt0.c6)))-((((x'')) NOT BETWEEN ((v0.c0)) AND ((vt1.c0))))), ((CAST(rt0.c4 AS INTEGER)) BETWEEN (((vt1.c0)IS NOT(rt0.c2))) AND (((rt0.c3) IS TRUE))), (((((((((NOT (rt0.c2)))AND(rt0.c5)))OR((v0.c0 IN (rt0.c1, rt0.c2)))))OR(v0.c0)))AND('')), ((0.4559728294846598)/(rt0.c0 COLLATE NOCASE)) FROM rt0 CROSS JOIN v0 ON ((0X7dc87f18)<=(((rt0.c2)IS NOT(vt1.c0))));SELECT DISTINCT rt0.c1 FROM t0, v0, vt1, rt0 WHERE (((((((((((0.446247030500207)>=(NULL)))OR('*+k2ꚏF' COLLATE RTRIM)))AND(TYPEOF(DISTINCT x''))))AND(((((x'be74')AND(x'')))OR('S0,')))))OR(QUOTE('I鼨.ﺨ睛')))) GROUP BY (t0.c1 IN ()); -- 0ms;
SELECT ((((t0.c1) NOT NULL)) NOT BETWEEN ((NOT (vt1.c0))) AND ((t0.c0 IN ()))), ((((rt0.c5 IN (NULL)), CAST(rt0.c4 AS INTEGER), ((t0.c1) ISNULL)))!=((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), json_insert(t0.c0, rt0.c0, rt0.c3)))), ((CAST(rt0.c3 AS TEXT)) NOT BETWEEN ((((rt0.c5)) BETWEEN (('j8rLN''')) AND ((t0.c1)))) AND (x'')) FROM t0, vt1, rt0; -- 0ms;
SELECT ALL (- (v0.c0)) COLLATE NOCASE FROM rt0;SELECT ALL (((rt0.c6)) BETWEEN ((TRIM(DISTINCT t0.c1))) AND ((NULL))) FROM v0, vt1 WHERE (((NULL COLLATE RTRIM) BETWEEN (CAST(0.9585519503472537 AS REAL)) AND (((0xffffffffe3783500)IS(NULL))))) GROUP BY (((rt0.c3)IS(rt0.c2)) IN ()) ORDER BY ((((- (rt0.c6))))<((LOWER(rt0.c2))))  NULLS LAST;SELECT DISTINCT (((((((rt0.c5)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))))AND(rt0.c2)))OR(LOWER(DISTINCT vt1.c0))) FROM rt0;SELECT DISTINCT ((1227654699)GLOB(((x'7de8') IS FALSE))) FROM vt1, v0, t0 WHERE (((('DCR ')) BETWEEN ((SQLITE_COMPILEOPTION_USED(NULL))) AND ((0.5765551355664325 COLLATE BINARY)))) GROUP BY ((CAST(rt0.c2 AS TEXT))>=((NOT (rt0.c1)))) ORDER BY ((t0.c2)LIKE(rt0.c2)) COLLATE NOCASE  NULLS FIRST LIMIT -9103342;SELECT t0.c2 FROM rt0, v0, vt1, t0 GROUP BY ((((rt0.c0) NOT BETWEEN (t0.c2) AND ('982910987')))IS NOT(((((rt0.c5)OR(0.12209388938181454)))AND(rt0.c4)))), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE NOCASE, CASE WHEN ((rt0.c4)&(t0.c1)) THEN rt0.c5 ELSE ((rt0.c5)%(rt0.c4)) END HAVING ((CAST(rt0.c4 AS BLOB))&(SUM(vt1.c0))) ORDER BY (~ (((rt0.c1)LIKE(t0.c0)))); -- 0ms;
SELECT (((t0.c2 IN ())) BETWEEN (CAST(rt0.c4 AS INTEGER)) AND (0.15043689285093098)) FROM vt1 WHERE (0.5856895625926775);SELECT (NOT (CASE x'456b'  WHEN rt0.c2 THEN t0.c0 ELSE vt1.c0 END)) FROM v0, vt1;SELECT DISTINCT NTILE(((CAST(rt0.c4 AS NUMERIC)) BETWEEN (((t0.c2)AND(rt0.c5))) AND (0.49690675420121855))) OVER (), rt0.c0, (((((((rt0.c1))!=((t0.c2))))OR((((t0.c0)) BETWEEN ((vt1.c0)) AND ((rt0.c5))))))OR(((rt0.c3) BETWEEN (t0.c0) AND (rt0.c2)))) FROM rt0, v0, t0 WHERE (CAST(GLOB(x'', NULL) AS NUMERIC));SELECT DISTINCT CUME_DIST() OVER ( ORDER BY (((rt0.c0 IN (vt1.c0)))|((((t0.c0, t0.c0, rt0.c4)) BETWEEN ((']SF\z', rt0.c0, rt0.c6)) AND ((rt0.c4, t0.c1, t0.c1))))) ASC  NULLS LAST RANGE  CURRENT ROW) FROM v0, vt1, t0;SELECT DISTINCT ((0x794e775b)AND(((rt0.c6) NOT BETWEEN (rt0.c2) AND ('965320879')))), CASE WHEN (0.11509379474725767 IN (t0.c2, t0.c0)) THEN CAST(rt0.c3 AS TEXT) WHEN ((rt0.c6)AND(rt0.c3)) THEN ((v0.c0)==(v0.c0)) WHEN '[C' THEN CAST(t0.c0 AS NUMERIC) ELSE '1891345929' END, CASE WHEN (((rt0.c5)) NOT BETWEEN ((vt1.c0)) AND ((v0.c0))) THEN (rt0.c0 IN (t0.c2, t0.c2)) ELSE ((rt0.c4)LIKE(rt0.c0)) END FROM rt0, v0 LIMIT 1735788864 OFFSET 2077221405;SELECT CASE CAST(rt0.c5 AS TEXT)  WHEN ((t0.c2) NOT BETWEEN (v0.c0) AND (t0.c2)) THEN json_array(t0.c2, rt0.c1) END FROM v0, t0, rt0, vt1; -- 0ms;
SELECT DISTINCT JULIANDAY(CASE WHEN rt0.c1 THEN vt1.c0 END, COUNT(rt0.c0), TRIM(DISTINCT v0.c0), (((rt0.c6, rt0.c6, NULL)) NOT BETWEEN ((t0.c1, rt0.c1, t0.c0)) AND ((rt0.c2, rt0.c3, t0.c1))), (0.23410751309017896 IN ())) FROM t0 WHERE (((((x'') NOT NULL))/(((-1.080133899E9)>(0.6219386603147155)))));SELECT DISTINCT NTILE(-710606880) OVER () FROM v0, rt0, vt1, t0 GROUP BY NULL; -- 1ms;
SELECT DISTINCT ((((t0.c1)*(rt0.c2))) NOTNULL) FROM t0 WHERE (((((((9.3690872E8)OR(x'')))AND(NULL))) NOTNULL));SELECT DISTINCT (((('')<<(-1.382916254E9)))LIKE(((((1631525652)AND(rt0.c2)))AND(rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c3 COLLATE BINARY IN ()), SQLITE_VERSION(), (NOT (CASE WHEN rt0.c2 THEN x'' WHEN 0Xd440396 THEN rt0.c0 WHEN rt0.c2 THEN vt1.c0 ELSE v0.c0 END)) FROM t0 FULL OUTER JOIN vt1 ON CAST(((rt0.c0) BETWEEN (NULL) AND (v0.c0)) AS NUMERIC) INNER JOIN rt0 ON rt0.c0 FULL OUTER JOIN v0 ON '';SELECT DISTINCT LIKELIHOOD(DISTINCT CASE WHEN rt0.c6 THEN '-1131290610' END, 0.9165734642388174), ((((((((rt0.c0)AND(rt0.c6)))AND(rt0.c0)))OR(COUNT(*))))OR(CAST(NULL AS NUMERIC))), (((rt0.c3)<=(t0.c0)) IN ()) FROM vt1, rt0, t0; -- 0ms;
SELECT (((((((('')AND(rt0.c2)))AND(rt0.c3)))AND((NOT (rt0.c3)))))AND(((rt0.c4)+(NULL)))) FROM vt1, t0, v0;SELECT DISTINCT ((((t0.c2)>(t0.c0)))GLOB(((((t0.c2)AND(t0.c1)))OR(x'db37')))) FROM vt1, v0 WHERE (CASE (('-182861663')OR(x''))  WHEN '-{9*' THEN ((0X37d817b0) NOTNULL) WHEN ((0.7360054434981411)+(NULL)) THEN (x'' IN ()) WHEN ((((0xffffffffd5fb0d3e)AND(NULL)))OR(x'')) THEN ((0.7880323995423371) IS FALSE) ELSE (('1q')>=(0.6158555741183932)) END);SELECT DISTINCT ((((((v0.c0)OR(rt0.c5)))AND(NULL))) NOT NULL) FROM v0, vt1 WHERE (((SQLITE_SOURCE_ID())/((((0Xffffffff8647cd38))<=((0.8117165824070935))))));SELECT AVG((rt0.c1 IN ())) OVER () FROM rt0, v0 WHERE ((((((('}j\rJ') BETWEEN ('1454345146') AND (NULL)))AND(CAST(NULL AS NUMERIC))))OR(((((0.5017890481404251)OR(NULL)))AND(0.22391286801988142))))); -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (t0.c0 IN (rt0.c1))) FROM vt1, t0, rt0, v0 WHERE (((((((x'c6f4')AND(NULL)))AND(0.7795856181477578))) NOT BETWEEN (((0.8721877791741143)OR('-1274704514'))) AND ((('_ ')&(x''))))); -- 0ms;
SELECT (UNLIKELY(rt0.c3) IN ()) FROM t0, rt0 NOT INDEXED, v0, vt1; -- 0ms;
SELECT DISTINCT (((((rt0.c5) NOT NULL)))>=((((v0.c0)<>(t0.c0))))) FROM v0, rt0, t0 WHERE (json_array(((NULL)&(NULL)), (('-1281763299') IS FALSE), CAST('▅ꍾ' AS BLOB), ((((0Xffffffff9f5a3586)AND(-3.19617845E8)))AND(x''))));SELECT GROUP_CONCAT(CASE '-529774416'  WHEN t0.c2 THEN rt0.c2 ELSE t0.c0 END COLLATE RTRIM) FILTER(WHERE ((((rt0.c5) IS TRUE))-(((((((((rt0.c4)OR(v0.c0)))AND(rt0.c3)))AND(t0.c2)))OR(rt0.c1))))) OVER ( GROUPS BETWEEN CASE WHEN PRINTF(rt0.c3) THEN TRIM(DISTINCT t0.c0) END FOLLOWING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM v0 INNER JOIN rt0 ON (SQLITE_VERSION() IN ()) FULL OUTER JOIN vt1 ON NULL LIMIT -361030067;SELECT DISTINCT ((t0.c2) BETWEEN (v0.c0) AND (v0.c0)) COLLATE RTRIM FROM t0, v0, rt0, vt1 ORDER BY (+ (rt0.c0)) DESC  NULLS FIRST LIMIT -1326606274 OFFSET 1149165513; -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0, v0, rt0 WHERE ((NOT (CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT (((v0.c0)) NOT BETWEEN (((~ (t0.c0)))) AND ((((rt0.c5) NOTNULL)))) FROM rt0, v0, vt1 WHERE (UNLIKELY(CASE NULL  WHEN '^I3I' THEN '0.6372519829859341' ELSE x'a88f780e' END)) ORDER BY ((((t0.c0) BETWEEN ('1222652864') AND (t0.c1))) IS FALSE) DESC  NULLS LAST;SELECT DISTINCT MAX(((rt0.c1)*(v0.c0))) FROM v0, rt0 LEFT OUTER JOIN vt1 ON ((((NOT (rt0.c2)), (((rt0.c6, rt0.c4, v0.c0)) NOT BETWEEN ((t0.c2, t0.c2, rt0.c6)) AND ((rt0.c2, rt0.c2, t0.c0))), ((rt0.c4)<<(NULL))))!=((x'', rt0.c0 COLLATE RTRIM, CAST('931506280' AS BLOB)))) INNER JOIN t0 ON TRIM(DISTINCT ((rt0.c0) NOTNULL), (((t0.c1, t0.c1, rt0.c4))>((rt0.c4, t0.c0, rt0.c4)))) WHERE ((- (CASE 0.4295174720014405  WHEN '0v9' THEN x'' END)));SELECT ALL AVG(CASE v0.c0  WHEN rt0.c5 THEN t0.c0 WHEN v0.c0 THEN v0.c0 WHEN vt1.c0 THEN rt0.c4 ELSE t0.c2 END) FROM v0, vt1, t0 WHERE (((((NULL) NOT BETWEEN ('DCR ') AND ('-627678056')))==(((0.7453002211622576)<=(0Xffffffffa52ca743)))));SELECT (- (((t0.c2) NOTNULL))) FROM rt0, vt1, v0, t0 WHERE (CASE WHEN ((((((((((((x'')AND(0.550451267099606)))AND('S0,')))OR('\r\n%iw')))OR(x'f5e1')))AND(x'')))AND(0.4798976504599637)) THEN (((0X652dbe3a))!=((x''))) ELSE ((0.5231643724691138)AND(0.657277450069837)) END); -- 1ms;
SELECT DISTINCT (((((rt0.c0)) BETWEEN ((t0.c2)) AND ((t0.c0)))) NOT BETWEEN (((rt0.c1) BETWEEN (rt0.c3) AND (t0.c2))) AND (CAST(rt0.c5 AS INTEGER))), (~ (((t0.c1)&(rt0.c2)))), (MIN(v0.c0) IN ()) FROM rt0 WHERE ((((((((1.439301E7)AND(x'a9c8')))AND(NULL)), ((0.8883774964614778)OR(0.24074948952101793)), (-1410863753 IN ())))!=(('I', x'', '\r^7' COLLATE RTRIM)))) LIMIT 1959623277;SELECT ALL (- (0.9850916069192325)) COLLATE BINARY FROM vt1, v0, t0, rt0 WHERE (CASE CASE x'e81b'  WHEN NULL THEN -2.7453815E7 END  WHEN ('C&{G' IN ()) THEN (('')+(1e500)) ELSE ((0.9833568720071426) NOT NULL) END); -- 0ms;
SELECT DISTINCT ((((t0.c2)<=(rt0.c5))) NOTNULL), CASE WHEN (~ (vt1.c0)) THEN x'' END, (((NOT (t0.c2))) NOT BETWEEN (((rt0.c4)IS(t0.c1))) AND (((rt0.c6) BETWEEN (rt0.c1) AND (rt0.c5)))), v0.c0, ((LIKE(rt0.c3, rt0.c5)) IS FALSE) FROM rt0, v0, t0;SELECT ALL ((((rt0.c1 COLLATE RTRIM)OR((t0.c1 IN (rt0.c6)))))AND(CASE WHEN rt0.c2 THEN rt0.c6 ELSE -1.376686137E9 END)), ((('/e'))<((rt0.c6))), ((LIKELY(DISTINCT v0.c0))==(((rt0.c4) NOT BETWEEN (v0.c0) AND (rt0.c6)))) FROM v0;SELECT DISTINCT CAST(((t0.c2)<<(t0.c1)) AS REAL), (((((rt0.c5, rt0.c0, rt0.c1, rt0.c6, vt1.c0))>((rt0.c1, t0.c0, vt1.c0, 2038376201, rt0.c6)))) BETWEEN ((rt0.c1 IN (rt0.c4))) AND (CAST(rt0.c0 AS INTEGER))), CAST(vt1.c0 AS INTEGER) COLLATE NOCASE FROM vt1, rt0, v0, t0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT((- (rt0.c1))) OVER () FROM t0, vt1, rt0, v0 WHERE (((((NULL)IS(x'65e52c8f')))IS NOT(((((((((x'f08d02f5')AND('0.8026970243826801')))AND('i')))OR(x'')))OR(x'04f2'))))); -- 0ms;
SELECT ALL NTILE(rt0.c2) OVER () FROM vt1, t0, rt0, v0 WHERE (((-325907460)&(CAST('787710555' AS TEXT)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c4 IN ())) FROM rt0, t0 WHERE ((((x'8070', 0.8458967317120747, NULL)) BETWEEN (((((((((('-1376686137')OR('\ngF')))OR('570771722')))AND(x'583c')))AND(x'')), '0(<_.2?' COLLATE BINARY, 1613570668)) AND ((0Xffffffff8a24bab9, CASE NULL  WHEN x'1178c5e4' THEN -672332440 ELSE -1.274704514E9 END, (('\')LIKE(x'')))))); -- 0ms;
SELECT CAST(((t0.c1)AND(rt0.c3)) AS REAL), t0.c0, PERCENT_RANK() OVER ( ORDER BY TRIM(((((rt0.c2)AND(t0.c2)))OR(rt0.c0)), ((rt0.c2) NOT NULL)) DESC  NULLS FIRST) FROM v0, t0, rt0 GROUP BY ((rt0.c5 IN ()) IN ()), vt1.c0, t0.c0 HAVING ((UNLIKELY(DISTINCT t0.c2))LIKE(CASE rt0.c4  WHEN rt0.c1 THEN vt1.c0 END));SELECT ALL CAST(-1867105983 AS INTEGER), ((((rt0.c3) NOT BETWEEN (t0.c2) AND (t0.c0))) NOT BETWEEN ((0.6544528739888696 IN ())) AND (GROUP_CONCAT(t0.c2))), COUNT(*) COLLATE NOCASE, LIKELY('now'), (NOT (((rt0.c5) NOTNULL))) FROM v0 WHERE (((((x'') IS TRUE))/(((NULL) NOT BETWEEN (' [l?.r3茗H') AND (x'')))));SELECT DISTINCT ((rt0.c0) NOT BETWEEN (((((rt0.c3)AND(x'')))AND(t0.c0))) AND (MIN(vt1.c0))) FROM t0, rt0 WHERE (CASE UNLIKELY(DISTINCT '!,yBas(')  WHEN ((-1621478010)|(0X6832883e)) THEN 'S|' COLLATE RTRIM WHEN LOWER(NULL) THEN 452674194 COLLATE RTRIM WHEN (((0x27497677)) NOT BETWEEN ((NULL)) AND ((x''))) THEN CASE 0.9414782089934858  WHEN 0xffffffffbedb7daf THEN 'x#j,W>t' END END);SELECT DISTINCT CUME_DIST() OVER (), CASE WHEN rt0.c5 COLLATE RTRIM THEN ((NULL)-(rt0.c3)) END, CAST(rt0.c1 COLLATE BINARY AS BLOB) FROM t0, vt1, v0, rt0 WHERE (((((NULL)) NOT BETWEEN ((0Xdf17d33)) AND ((x'6f97'))) IN ())) ORDER BY (- ((((v0.c0, 0.8006935872403954, rt0.c4))<((rt0.c1, rt0.c0, vt1.c0)))))  NULLS FIRST; -- 0ms;
SELECT ALL (((+ (t0.c0))) BETWEEN ((+ (rt0.c2))) AND (((((t0.c0)OR(t0.c2)))OR(vt1.c0)))), CAST(rt0.c0 AS INTEGER) COLLATE RTRIM COLLATE RTRIM, (((rt0.c5 IN ())) NOT NULL) FROM vt1 GROUP BY ((((((((((((((0.027806524825634726)-(v0.c0)))OR((~ (rt0.c4)))))OR((('4992372') BETWEEN (t0.c2) AND (rt0.c4)))))OR(((t0.c2) NOT BETWEEN (vt1.c0) AND (t0.c2)))))AND(CASE WHEN rt0.c5 THEN t0.c0 END)))OR(((rt0.c6)&(t0.c0)))))AND(rt0.c4 COLLATE BINARY)), CAST((('-1')>=(rt0.c5)) AS REAL), ((((((vt1.c0)&(t0.c0)))AND((((t0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c5))))))AND(t0.c0));SELECT DISTINCT ((((x'')OR(GROUP_CONCAT(rt0.c2))))OR((t0.c0 IN (rt0.c4)))) FROM v0 WHERE ((((('1305058719') NOT BETWEEN (-129149797) AND (1.615107997E9)))=(((NULL)==('-1082336685')))));SELECT (rt0.c4 IN ()) FROM vt1, v0, t0; -- 0ms;
SELECT COUNT((- (vt1.c0))) OVER ( ORDER BY CASE WHEN CASE rt0.c1  WHEN 0.49690675420121855 THEN t0.c2 END THEN CAST(rt0.c4 AS TEXT) WHEN ((rt0.c4)<<(rt0.c1)) THEN (NOT (t0.c0)) WHEN QUOTE(x'') THEN (rt0.c3 IN ()) ELSE ((rt0.c5) NOT BETWEEN (t0.c2) AND (rt0.c5)) END), ((((rt0.c4) ISNULL))>(LIKE(rt0.c0, v0.c0, '2'))), ('' IN (rt0.c6)) COLLATE RTRIM FROM t0, v0 WHERE ((((-6.27678056E8)) BETWEEN ((TRIM(0.5867144800279107, 0.8053394332526462))) AND (((-1.991991573E9 IN ()))))) GROUP BY (((v0.c0 IN (rt0.c3)))%(PRINTF(rt0.c2, t0.c0, rt0.c1))) HAVING SQLITE_COMPILEOPTION_USED(CAST(rt0.c2 AS NUMERIC));SELECT DISTINCT ((CASE rt0.c1  WHEN t0.c0 THEN t0.c1 END)|(LIKE(t0.c0, rt0.c1, 'l'))) FROM t0, rt0, vt1; -- 0ms;
SELECT ALL (((+ (rt0.c5))) BETWEEN (MAX(rt0.c5)) AND (json_valid(rt0.c2))) FROM v0, vt1, rt0 WHERE ((NOT (CASE WHEN x'c9ce05e0' THEN NULL ELSE 0.7751275544155793 END))); -- 0ms;
SELECT ALL x'' FROM v0, t0, vt1; -- 0ms;
SELECT DISTINCT ((((UNLIKELY(t0.c0))AND((t0.c2 IN ()))))OR(((t0.c1)IS(t0.c1)))) FROM rt0, t0, vt1 WHERE ((((((1.615107997E9))!=((x'')))) NOT NULL)) GROUP BY CASE WHEN v0.c0 THEN rt0.c3 END COLLATE BINARY, t0.c0 COLLATE NOCASE, rt0.c6, LIKELIHOOD(((((t0.c2)OR(rt0.c4)))AND(vt1.c0)), 0.28037944400440074), rt0.c1;SELECT DISTINCT MIN(LIKELIHOOD(v0.c0, 0.5818179886994143)), NULL, (((rt0.c6)>(v0.c0)) IN (AVG('Ux'))) FROM v0, vt1 WHERE ((((('TRUE')|(NULL)))=((('') NOT NULL)))) ORDER BY CASE (rt0.c0 IN ())  WHEN vt1.c0 THEN ((((rt0.c1)AND(rt0.c3)))OR(rt0.c0)) WHEN CAST('*?' AS TEXT) THEN t0.c1 COLLATE BINARY WHEN v0.c0 THEN CAST(rt0.c2 AS REAL) END  NULLS LAST, rt0.c5 DESC, CAST((t0.c0 IN ()) AS TEXT) ASC;SELECT DISTINCT ((((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))|(t0.c2)) FROM rt0;SELECT ALL ((CASE WHEN t0.c0 THEN rt0.c3 ELSE rt0.c1 END)<(((rt0.c0) IS TRUE))) FROM rt0, v0, vt1, t0; -- 0ms;
SELECT DISTINCT rt0.c6, (- (x'')), GROUP_CONCAT(((rt0.c2) BETWEEN (rt0.c1) AND (v0.c0))) FROM t0, rt0, vt1 WHERE ((((- (NULL))) BETWEEN (((('0V9')) NOT BETWEEN ((0Xffffffffe3b1fbe4)) AND ((0.5619489764177847)))) AND (((-1.018013739E9) BETWEEN (x'18da') AND (0.18795943327971032)))));SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) NOTNULL) FROM v0, t0 WHERE (CASE 1.99017596E8  WHEN NULL THEN x'' END COLLATE NOCASE);SELECT DISTINCT (((((t0.c0, rt0.c2, rt0.c3))!=((rt0.c3, rt0.c6, t0.c0))))&((((x''))>=((rt0.c6))))) FROM t0, v0 WHERE (((CASE WHEN -1445823065 THEN '-474874908' ELSE 0.370209917722817 END) NOTNULL));SELECT SUM((((rt0.c0))>=((rt0.c5)))) FROM vt1, rt0, v0, t0 WHERE (TYPEOF(DISTINCT CASE WHEN x'' THEN NULL END)); -- 0ms;
SELECT TIME((((rt0.c5))!=((t0.c2))), (t0.c0 IN ()), ((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c0))), (NOT ((((vt1.c0))<>((rt0.c0))))), (((- (rt0.c0)))||(CAST(rt0.c2 AS INTEGER))) FROM rt0, vt1, v0, t0; -- 0ms;
SELECT DISTINCT ((((v0.c0)AND(rt0.c0))) BETWEEN (rt0.c1) AND (LIKE(rt0.c2, rt0.c3, '1'))) FROM rt0, vt1, t0, v0; -- 0ms;
SELECT x'' FROM rt0, v0, vt1 ORDER BY ((((rt0.c5) NOT BETWEEN (rt0.c6) AND (rt0.c5)))>=(CASE t0.c2  WHEN t0.c2 THEN rt0.c5 WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN 2087955270 ELSE v0.c0 END));SELECT ALL ((((rt0.c4 IN (t0.c2)), (rt0.c4 IN ()), TOTAL(rt0.c4), ('nOJ' IN ()), (rt0.c1 IN (rt0.c6))))<>(((((rt0.c0)) NOT BETWEEN ((t0.c2)) AND ((rt0.c3))), ((rt0.c5) IS FALSE), ((rt0.c4)&(t0.c1)), ((t0.c1)&(t0.c2)), CASE WHEN t0.c1 THEN 0.7295944103394558 WHEN rt0.c6 THEN t0.c2 WHEN v0.c0 THEN rt0.c5 END))), rt0.c6, LAST_VALUE(((((- (vt1.c0))))<((((vt1.c0) BETWEEN (vt1.c0) AND ('-586031883')))))) OVER () FROM vt1 WHERE (0.9652635931793687);SELECT ALL (+ (CASE rt0.c0  WHEN x'' THEN rt0.c5 WHEN t0.c1 THEN rt0.c6 WHEN rt0.c6 THEN t0.c2 END)) FROM rt0;SELECT DISTINCT (- (((rt0.c1) ISNULL))) FROM t0, v0, vt1, rt0 WHERE (((UNLIKELY(DISTINCT 'NAAm_([v'))<<(NULL))) ORDER BY ((rt0.c5) IS TRUE), ((rt0.c5) NOT BETWEEN (0X3add9b4f) AND ((~ (rt0.c1)))) ASC; -- 0ms;
SELECT ALL rt0.c2 FROM vt1, rt0, v0 WHERE ((('9\厊盵*~\rꮵi')<(((((((((x'e0eb')AND('-503070292')))AND('lOCB>')))AND(1e500)))OR(0X53255799))))); -- 0ms;
SELECT LOWER(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c4 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c6 THEN vt1.c0 END) FROM rt0, vt1, t0 WHERE (((((-1621478010)) NOT BETWEEN ((x'')) AND ((0.43157670007380866))) IN ())); -- 0ms;
SELECT DISTINCT ABS(DISTINCT rt0.c5 COLLATE RTRIM) FROM v0, rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (rt0.c2)) COLLATE BINARY FROM vt1, rt0; -- 1ms;
SELECT ALL '' FROM vt1; -- 0ms;
SELECT DISTINCT CASE 0Xfffffffff40b7abf  WHEN ((rt0.c3) IS TRUE) THEN COALESCE(rt0.c2, t0.c2) END FROM t0, vt1, rt0, v0 WHERE (((((NULL)>>(NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c5) ISNULL)) IS FALSE) FROM v0, rt0, vt1 LIMIT -1674648453 OFFSET 499769268; -- 0ms;
SELECT ((((((((CASE rt0.c3  WHEN vt1.c0 THEN t0.c2 ELSE vt1.c0 END)AND(((rt0.c4)>>(t0.c2)))))OR((~ (t0.c2)))))OR(((rt0.c5)IS NOT(t0.c0)))))AND(CASE WHEN v0.c0 THEN '-1196046342' ELSE rt0.c6 END)) FROM v0;SELECT ALL (CASE WHEN rt0.c1 THEN rt0.c3 ELSE v0.c0 END IN ()) FROM v0, rt0, t0, vt1; -- 0ms;
SELECT ALL LAG(((((vt1.c0) BETWEEN (x'1a7f1d46') AND (rt0.c1)))<=(rt0.c0 COLLATE NOCASE)), CASE ((-1.7976931348623157E308)-(v0.c0))  WHEN LENGTH(v0.c0) THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c6)) ELSE ((0.04467264413250627) NOT BETWEEN (t0.c1) AND (rt0.c0)) END, (((NOT (vt1.c0))) NOTNULL)) OVER () FROM rt0, vt1, t0, v0; -- 1ms;
SELECT ALL (((t0.c2)) NOT BETWEEN ((((((rt0.c0)OR(vt1.c0)))AND(t0.c1)))) AND ((CASE rt0.c3  WHEN t0.c0 THEN v0.c0 END))) FROM v0, rt0;SELECT DISTINCT AVG(x'') COLLATE NOCASE FROM rt0, v0, t0, vt1 WHERE ((((1511978397)) BETWEEN (('792699158' COLLATE NOCASE)) AND (((~ (0.8558954451354858)))))); -- 0ms;
SELECT ALL CAST((((rt0.c3)) NOT BETWEEN ((vt1.c0)) AND ((t0.c1))) AS REAL) FROM t0, vt1 LIMIT 438314195;SELECT ALL ((t0.c1)*(CAST(rt0.c3 AS REAL))), CASE WHEN t0.c1 THEN COUNT(*) WHEN (~ (rt0.c2)) THEN (NOT (v0.c0)) WHEN rt0.c3 THEN ((t0.c0) BETWEEN (rt0.c1) AND (rt0.c2)) END, ((((t0.c0)==(rt0.c4))) NOT BETWEEN (((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (((rt0.c0)>(t0.c1)))) FROM vt1, rt0 WHERE ((+ ((((0.7950188838680744)) NOT BETWEEN (('2074218813')) AND ((NULL)))))) ORDER BY '' DESC, x''  NULLS FIRST;SELECT x'', NTH_VALUE('-2094541939', (json_array_length(x'f60a', rt0.c3) IN (CAST(rt0.c5 AS INTEGER), TYPEOF(rt0.c4)))) OVER (), (((t0.c2 IN ())) IS FALSE) FROM vt1, rt0 WHERE ((+ (UNICODE(0.11462133651298578)))) GROUP BY (((+ (rt0.c2)))<>(((((t0.c1)OR('-240373401')))AND(t0.c1)))), CAST(1.880286038E9 AS BLOB), ((rt0.c4 COLLATE RTRIM)AND(CASE 0.8207533813034074  WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c1 WHEN v0.c0 THEN rt0.c6 WHEN rt0.c1 THEN t0.c2 WHEN rt0.c5 THEN rt0.c1 WHEN 0.5104751151702682 THEN rt0.c3 WHEN rt0.c3 THEN v0.c0 END));SELECT DISTINCT COUNT(((t0.c1) IS TRUE)) FROM rt0;SELECT ((((((((((((CASE rt0.c4  WHEN t0.c2 THEN rt0.c5 ELSE t0.c0 END)AND(COALESCE(DISTINCT t0.c0, rt0.c6, -1101560023, rt0.c5))))OR((rt0.c0 IN (rt0.c2, rt0.c5)))))AND(((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))))AND('g' COLLATE RTRIM)))AND(rt0.c1)))OR(NULLIF(rt0.c5, rt0.c1))) FROM vt1, t0, rt0; -- 0ms;
SELECT DISTINCT AVG(CASE rt0.c4  WHEN rt0.c5 THEN t0.c2 END) OVER () FROM t0, rt0, vt1, v0 WHERE ((NULL IN ()) COLLATE BINARY) LIMIT 1027181873 OFFSET 1735788864; -- 0ms;
SELECT '-725409580' FROM t0; -- 0ms;
SELECT DISTINCT ((AVG(t0.c1)) NOT BETWEEN (CAST(rt0.c1 AS TEXT)) AND (CASE t0.c2  WHEN rt0.c3 THEN t0.c0 WHEN x'' THEN t0.c0 WHEN v0.c0 THEN rt0.c2 ELSE rt0.c4 END)), ((CAST(rt0.c4 AS TEXT))AND(((rt0.c0)IS NOT(v0.c0)))), ((((-1769577652)>>(NULL))) IS FALSE) FROM t0;SELECT (('438350521')AND(((((((((rt0.c4)OR(t0.c0)))AND(rt0.c0)))AND(v0.c0)))AND(rt0.c2)))) FROM v0, t0, vt1 WHERE (NULL);SELECT DISTINCT GROUP_CONCAT(((rt0.c3) IS FALSE)) FILTER(WHERE load_extension(((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c4)), (~ (rt0.c1)))) OVER () FROM vt1 WHERE ((NOT (NULL)) COLLATE RTRIM) LIMIT 1988144958 OFFSET -1647634946;SELECT ((TOTAL(t0.c2))!=(((rt0.c1) NOT NULL))) FROM v0 WHERE (((((((((((NULL)OR(x'a53e')))AND('-668597143')))AND('')))AND(x''))) ISNULL));SELECT DISTINCT RANK() OVER () FROM rt0 WHERE (((((x'8243') NOTNULL)) IS TRUE)); -- 1ms;
SELECT COUNT(((((t0.c2)OR(t0.c1)))OR(0.5684844875962557))) FROM v0, vt1;SELECT DISTINCT (((((((((((((((t0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c2))))OR(GROUP_CONCAT(rt0.c2))))AND(((rt0.c1) BETWEEN (vt1.c0) AND (v0.c0)))))AND((~ (x'')))))OR(GROUP_CONCAT(v0.c0))))OR(NULLIF(t0.c1, rt0.c0))))OR('q?xPDC')) FROM rt0, v0, vt1;SELECT DISTINCT NULL FROM rt0, vt1, t0 WHERE ((((NOT (x'')))>=(NULL COLLATE NOCASE))) ORDER BY (((rt0.c3)OR(t0.c1)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT vt1.c0, 0.7549448700699963 COLLATE BINARY, ('82380550' IN ()), ((((((((((((CAST(rt0.c3 AS NUMERIC))AND(json_object(rt0.c1, rt0.c1, t0.c2, rt0.c1, t0.c0, rt0.c5))))AND(rt0.c5)))OR(LIKELY(0.0300759563593872))))AND((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))))))OR(CASE rt0.c3  WHEN rt0.c0 THEN t0.c0 END)))AND(((t0.c2) NOT NULL))), (((+ (t0.c2)))LIKE(((t0.c1)=(v0.c0)))) FROM vt1, t0, v0, rt0 WHERE ((((((((((((('Dퟐ')AND(NULL)))OR('J6b&cWo')))AND(-1.192121685E9)))AND(NULL)))AND(0.8119797968651903)))AND('KD')) COLLATE BINARY); -- 0ms;
SELECT ALL AVG(((((x'db83')OR(rt0.c3)))OR(vt1.c0))), (((t0.c2 IN (rt0.c4)))<(rt0.c2 COLLATE BINARY)), SUM(((t0.c0) NOT BETWEEN (rt0.c3) AND (t0.c2))) OVER () FROM v0, vt1, t0, rt0 WHERE (((x'613f' COLLATE NOCASE)>(x'1786'))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0 WHERE (((('18701404' IN ('㜼Rॻ', '1710815641'))) BETWEEN ((- (NULL))) AND (UPPER(NULL))));SELECT ((t0.c0 COLLATE NOCASE) NOT BETWEEN ('-887124998') AND (((((rt0.c1)OR(rt0.c2)))OR(t0.c1)))) FROM rt0, t0, v0; -- 0ms;
SELECT DISTINCT (((((((rt0.c2, t0.c2, t0.c1)) BETWEEN (('1622444240', rt0.c3, rt0.c5)) AND (('1MXpx', v0.c0, rt0.c5))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c1)))))AND(((((((((rt0.c5)OR(t0.c2)))OR(v0.c0)))AND(rt0.c3)))AND(NULL)))) FROM v0 LIMIT 1414457670;SELECT DISTINCT ((((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0))) IS FALSE) FROM v0 WHERE (('199017596' COLLATE NOCASE IN (CAST(x'' AS INTEGER))));SELECT DISTINCT CAST(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c5)) AS BLOB), ((COUNT(t0.c1)) NOTNULL), (((t0.c0)+(rt0.c2)) IN (((t0.c2) NOT BETWEEN (rt0.c4) AND (t0.c1)), v0.c0)) FROM vt1, rt0 LIMIT -479668749 OFFSET -978223502;SELECT DISTINCT ((((((v0.c0)OR(t0.c2)))OR(t0.c1))) NOT BETWEEN (x'') AND (v0.c0)) FROM vt1, rt0 RIGHT OUTER JOIN t0 ON (((t0.c0) IS FALSE) IN (CAST(rt0.c1 AS TEXT))) WHERE (((((((((((((((x'eec4') NOTNULL))OR(CASE '-1182884409'  WHEN NULL THEN 0.6630267196842999 ELSE x'' END)))OR(((-1.1875002E9)>(0.23438470908956555)))))OR(x'')))AND(((x'')AND(x'')))))AND((NOT (NULL)))))OR(((x'')<>('')))));SELECT DISTINCT ((((rt0.c6)-(rt0.c3))) IS FALSE) FROM v0, t0, vt1, rt0 WHERE (((NULL) BETWEEN (NULL) AND (x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL CAST((~ (rt0.c3)) AS TEXT) FROM vt1 WHERE (UNLIKELY((((NULL))>(('-578564422')))));SELECT ALL (((rt0.c4)) NOT BETWEEN ((MIN(t0.c1))) AND ((((rt0.c3) BETWEEN (rt0.c3) AND (t0.c2))))) FROM vt1, v0 WHERE (((((x'' IN ())))<=(((('-1588455198')<<(NULL))))));SELECT ALL ((((((rt0.c1)OR(rt0.c0)))OR(rt0.c5))) BETWEEN (CAST(rt0.c2 AS REAL)) AND (TRIM(DISTINCT vt1.c0, rt0.c0))), SQLITE_SOURCE_ID(), rt0.c5 FROM v0, rt0;SELECT DISTINCT COUNT(*) FROM t0, v0 WHERE ((- ((0xffffffffb223d87a IN (x''))))); -- 1ms;
SELECT (- (vt1.c0 COLLATE RTRIM)) FROM rt0, t0, vt1 WHERE ((NOT (highlight(NULL, x'', NULL, x'')))) GROUP BY (CAST(v0.c0 AS NUMERIC) IN (((rt0.c6) NOTNULL), TRIM(DISTINCT t0.c2))) HAVING (((v0.c0 IN ())) IS FALSE);SELECT ALL ((((((((vt1.c0)AND(rt0.c5)))AND(t0.c0)))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (NULL)))))OR((rt0.c2 IN (v0.c0)))) FROM v0;SELECT DISTINCT ((CAST(rt0.c4 AS TEXT)) NOT NULL), rt0.c6, GROUP_CONCAT(((t0.c1)|(rt0.c0))) FROM t0 WHERE (CAST('\rOzRc㩮!t^' AS REAL) COLLATE RTRIM);SELECT AVG(((v0.c0)GLOB(rt0.c2))) FROM v0, t0, vt1 WHERE ((- (CAST(0x1fbe0cb2 AS TEXT))));SELECT ((t0.c1) NOTNULL) FROM vt1, rt0, v0, t0; -- 0ms;
SELECT ALL ((IFNULL(rt0.c5, rt0.c5)) BETWEEN (((v0.c0)+(rt0.c0))) AND (((rt0.c6)>(rt0.c4)))) FROM t0 WHERE ((((-4.52781557E8 IN ()))>=(((((((((x'')AND('-717664723')))OR(x'')))AND(x'')))OR('>0r\ne-X^Z')))));SELECT ALL SUM(((rt0.c1) NOT BETWEEN (rt0.c6) AND (rt0.c4))) OVER () FROM t0;SELECT ALL v0.c0 FROM v0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c3 COLLATE RTRIM))<((LOWER(rt0.c1)))), MAX((((rt0.c1, x'', v0.c0)) BETWEEN ((rt0.c5, t0.c0, rt0.c1)) AND ((rt0.c6, rt0.c5, rt0.c5)))), (((rt0.c3)) BETWEEN (((NOT (NULL)))) AND ((((0X3aa442cc)LIKE(rt0.c6))))) FROM v0, rt0;SELECT AVG(TRIM(DISTINCT x'80fe', rt0.c5)) FROM vt1, t0, rt0; -- 0ms;
SELECT ALL CAST(((rt0.c6) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC), COUNT(*) OVER (), rt0.c4 FROM vt1, v0, rt0; -- 0ms;
SELECT ALL rt0.c1, (((x'' IN ())) NOT BETWEEN (CAST(rt0.c5 AS BLOB)) AND (rt0.c0 COLLATE RTRIM)), (CASE WHEN rt0.c4 THEN t0.c1 ELSE rt0.c2 END IN ()) FROM vt1, rt0, v0 WHERE (CASE ((0.795240815351986) NOT BETWEEN (0X4c9d47ca) AND (NULL))  WHEN ((0.1277612588130892) BETWEEN (NULL) AND (NULL)) THEN CAST(NULL AS REAL) WHEN ((0.1542169531133436)&('>D')) THEN CAST(x'' AS REAL) WHEN CAST('q貛' AS REAL) THEN ((0.4115020082921006) BETWEEN (x'') AND ('834543595')) END); -- 1ms;
SELECT rt0.c3 FROM v0, t0, vt1, rt0 LIMIT 1209866047 OFFSET 600754511; -- 0ms;
SELECT DISTINCT TOTAL('-1477994090') OVER () FROM rt0, vt1, t0 LIMIT -1939841639; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT(rt0.c6) IN ()) FROM rt0, vt1, v0 WHERE (((((((x''))!=(('-816093288'))), ((('V+', '5Oj(%{Ur\r', '-1441230821')) BETWEEN ((0.7706164326232221, 0.24419475941479518, 0.9009637386130679)) AND ((0.02868752265303831, '￿', '[]'))), ('1283836239' IN ())))>((((('-1187500200')) BETWEEN ((x'')) AND ((''))), (('-240373401') IS TRUE), SQLITE_SOURCE_ID())))); -- 0ms;
SELECT DISTINCT (((0.48220580775091293)) NOT BETWEEN ((((vt1.c0)==(t0.c2)))) AND ((CASE WHEN v0.c0 THEN rt0.c3 END))), (((rt0.c6 COLLATE NOCASE))<>((((((rt0.c0)AND(rt0.c4)))AND(rt0.c1))))), AVG(((t0.c1)!=(NULL))) FROM vt1, v0 NOT INDEXED, rt0, t0 WHERE (0.18030252525384072) GROUP BY rt0.c1 HAVING ((CAST(rt0.c1 AS BLOB)) BETWEEN (COUNT(*)) AND (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c0 END)); -- 1ms;
SELECT CAST(CASE v0.c0  WHEN t0.c2 THEN rt0.c1 WHEN t0.c0 THEN vt1.c0 WHEN rt0.c6 THEN vt1.c0 END AS BLOB) FROM t0, v0, rt0 WHERE ((((((('-319617845')AND(0.446247030500207)))AND('/S')))>=(2.052823714E9 COLLATE BINARY)));SELECT ALL ((((((((((rt0.c4) ISNULL))AND(UPPER(DISTINCT v0.c0))))AND(CASE WHEN rt0.c0 THEN rt0.c5 ELSE v0.c0 END)))OR((rt0.c3 IN ()))))OR(((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c1)))) FROM t0, vt1;SELECT DISTINCT rt0.c4 FROM vt1 WHERE (((((((((((((((0.6344934165479925)OR(0.02655996438025854)))OR(0.446247030500207)))OR(x'')))AND(x'f741')))OR(NULL)))AND(0.8146477515456007)))==(((NULL) NOT BETWEEN (x'f8fc') AND ('x#j,w>t')))));SELECT rt0.c4 FROM vt1, t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(rt0.c0), (((rt0.c1)) NOT BETWEEN ((((((rt0.c5)OR(v0.c0)))OR(v0.c0)))) AND ((COUNT(rt0.c4)))), NTILE(((UNLIKELY(0.7110660644087476)) IS FALSE)) OVER () FROM rt0, t0, v0, vt1;SELECT DISTINCT (CAST(v0.c0 AS REAL) IN ()) FROM rt0, v0; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT 0.7022996045289822, 0.5333306288022639) COLLATE RTRIM FROM v0; -- 1ms;
SELECT -1.175743467E9 FROM v0, t0, rt0, vt1; -- 0ms;
SELECT ALL TRIM(DISTINCT '躍#', t0.c1) FROM vt1 WHERE (NULL);SELECT ALL SUM((~ (t0.c0))), CASE rt0.c6 COLLATE RTRIM  WHEN rt0.c5 COLLATE RTRIM THEN CAST(t0.c2 AS REAL) WHEN ((rt0.c6) IS TRUE) THEN CASE WHEN rt0.c3 THEN t0.c0 WHEN rt0.c5 THEN t0.c2 WHEN NULL THEN rt0.c1 END WHEN CAST(t0.c1 AS REAL) THEN ((rt0.c1) ISNULL) END, t0.c1 FROM t0, v0, vt1 INTERSECT SELECT DISTINCT ((CASE WHEN rt0.c5 THEN rt0.c6 END) IS FALSE), (((((rt0.c6, -1906889424, vt1.c0, t0.c2, rt0.c1)) BETWEEN ((rt0.c6, t0.c2, rt0.c0, rt0.c2, v0.c0)) AND ((t0.c1, rt0.c1, rt0.c6, vt1.c0, rt0.c0))))<<(((rt0.c4)-(rt0.c1)))), CUME_DIST() OVER ( ORDER BY ((((((rt0.c2)AND(rt0.c4)))AND(rt0.c1)))<<(((((((((rt0.c6)OR('2092336828')))AND(rt0.c4)))AND(t0.c1)))OR(t0.c0)))) DESC ROWS BETWEEN  CURRENT ROW AND (((rt0.c0)) BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c2 END)) AND (((~ (vt1.c0))))) FOLLOWING) FROM rt0 LIMIT -1757940692 OFFSET 852428338;SELECT ALL ((((rt0.c1) BETWEEN (rt0.c6) AND (v0.c0)))OR(((((rt0.c4)OR(vt1.c0)))OR(rt0.c1)))) FROM rt0;SELECT ((((-1.595903076E9)AND(NULL)))OR((((rt0.c1, t0.c2, t0.c0)) NOT BETWEEN ((rt0.c0, v0.c0, t0.c1)) AND ((rt0.c0, rt0.c4, vt1.c0))))), (((t0.c0, rt0.c0, rt0.c5)) BETWEEN ((CAST(t0.c2 AS TEXT), (rt0.c1 IN (rt0.c5)), ((((t0.c2)AND(rt0.c0)))AND(t0.c2)))) AND (((rt0.c5 IN ()), rt0.c3, rt0.c4 COLLATE NOCASE))), IFNULL(DISTINCT (((vt1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c6))), CASE WHEN v0.c0 THEN rt0.c6 END) FROM v0;SELECT DISTINCT AVG((vt1.c0 IN ())) FROM vt1, v0 GROUP BY NULLIF('-1819321040', rt0.c0);SELECT CAST(((t0.c0) IS FALSE) AS TEXT) FROM rt0, t0 INDEXED BY i16; -- 0ms;
SELECT DISTINCT ((v0.c0 COLLATE NOCASE) NOT BETWEEN (0x62859a19) AND ((((rt0.c0))>=((t0.c0))))) FROM rt0, v0, vt1, t0 WHERE (((CASE WHEN -1612025436 THEN 'CH3H*OBsv' WHEN 0.8393108811978752 THEN '' WHEN '0.9433108243768648' THEN NULL END) BETWEEN (((0.9596413316330128) IS TRUE)) AND (((x'')GLOB(0.4742965849817089))))); -- 0ms;
SELECT CASE rt0.c0 COLLATE RTRIM  WHEN COUNT(*) THEN v0.c0 ELSE ((rt0.c4) NOT BETWEEN (rt0.c3) AND (v0.c0)) END, ((((rt0.c3)AND(t0.c1))) NOT BETWEEN (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0))) AND (CAST(rt0.c1 AS BLOB))), (x'' IN (LOWER(DISTINCT t0.c2), COALESCE(rt0.c6, t0.c2, 0xfffffffff3c60785, rt0.c6))), NULL, ((((rt0.c3) BETWEEN (t0.c1) AND (vt1.c0))) IS TRUE) FROM v0, rt0, vt1 WHERE ((('1' COLLATE BINARY)AND(json(NULL)))) ORDER BY ((((((rt0.c5) BETWEEN (rt0.c5) AND (rt0.c5)))AND(highlight(t0.c2, v0.c0, rt0.c1, rt0.c0))))OR('182270342')) DESC  NULLS FIRST, (NULL IN (CAST(rt0.c2 AS INTEGER)))  NULLS LAST;SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c5 ELSE t0.c0 END) BETWEEN (CASE WHEN rt0.c4 THEN rt0.c0 END) AND (((t0.c0)<<(rt0.c0)))), ((CASE WHEN v0.c0 THEN rt0.c5 END) BETWEEN (CASE WHEN rt0.c3 THEN rt0.c5 WHEN t0.c0 THEN t0.c0 WHEN t0.c2 THEN rt0.c2 END) AND (CASE vt1.c0  WHEN rt0.c3 THEN vt1.c0 END)), CASE NULLIF(t0.c0, 356491048)  WHEN ((0X3b17d1b6) IS FALSE) THEN ((rt0.c2) IS TRUE) ELSE ((((vt1.c0)AND(rt0.c4)))AND(t0.c1)) END, (((((rt0.c6))==(('-754149040'))))+(t0.c1 COLLATE RTRIM)), ((((vt1.c0) BETWEEN (rt0.c3) AND (vt1.c0))) NOTNULL), CAST(((((t0.c2)AND(rt0.c5)))OR(rt0.c3)) AS NUMERIC), x'' FROM t0, rt0, vt1, v0 WHERE ((((0x65f6cf2f)) NOT BETWEEN (((-633083717 IN ('931506280')))) AND ((CASE 0xffffffff96182c3a  WHEN 0.6761702022569714 THEN '' WHEN 0.8167447131434 THEN NULL WHEN -240373401 THEN 0.6281022814048736 END)))); -- 1ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt0.c6 THEN rt0.c2 END AS BLOB) FROM v0, t0, vt1;SELECT DISTINCT rt0.c5, MAX((((t0.c2, rt0.c3, rt0.c2, rt0.c5, t0.c2)) BETWEEN ((rt0.c5, vt1.c0, rt0.c5, rt0.c1, rt0.c0)) AND ((t0.c2, rt0.c3, t0.c0, rt0.c4, t0.c1)))), (((((t0.c0) BETWEEN (rt0.c0) AND (''))))>((((rt0.c0)||(rt0.c1))))) FROM v0, rt0, vt1 WHERE (DATE('-405078084', (((x'', NULL, NULL))>=((NULL, 0.03223032590196184, NULL))), (('0.597945362224011') IS FALSE)));SELECT ALL (~ (((t0.c0)*(rt0.c3)))), (((rt0.c2 IN (rt0.c2, -1145436757)))<=('1101155987')), (((t0.c2 IN ())) NOT NULL) FROM v0 NOT INDEXED;SELECT DISTINCT load_extension((rt0.c4 IN ()), CASE t0.c1  WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c5 WHEN t0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c5 END) FROM vt1, v0, t0, rt0 WHERE ((((0.8265489134744655)) NOT BETWEEN ((-4.52781557E8 COLLATE NOCASE)) AND ((((0.6788869309649107)<(NULL)))))); -- 0ms;
SELECT ALL ((((t0.c2) IS FALSE)) BETWEEN ((((vt1.c0))<=((vt1.c0)))) AND (rt0.c2 COLLATE NOCASE)) FROM rt0, vt1 WHERE ((- (((NULL) IS TRUE))));SELECT ((((t0.c2) BETWEEN (rt0.c2) AND (vt1.c0))) BETWEEN (COUNT(*)) AND ((rt0.c4 IN ()))), COUNT(rt0.c6) OVER (), FIRST_VALUE((~ (CAST(t0.c2 AS TEXT)))) OVER () FROM v0, t0, rt0;SELECT TOTAL(((rt0.c2) NOT BETWEEN (0x4d789960) AND (rt0.c2))) OVER () FROM vt1, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((~ (rt0.c0))) FROM vt1 WHERE ('2072978968' COLLATE NOCASE);SELECT DISTINCT CASE WHEN 0x1a35f08a THEN v0.c0 COLLATE BINARY ELSE ((rt0.c4) NOT BETWEEN (rt0.c3) AND ('-952279446')) END FROM vt1, v0, rt0, t0 WHERE (((('958613102' COLLATE NOCASE))<=(((~ ('!')))))); -- 0ms;
SELECT DISTINCT SUBSTR(t0.c2, LOWER(rt0.c4)), (((((rt0.c6))<((rt0.c1))))/((rt0.c1 IN ()))), TOTAL((((1.615107997E9)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) OVER () FROM rt0;SELECT DISTINCT '804183006' FROM vt1, rt0, t0, v0 WHERE ((((0.3964685853648746) NOT NULL) IN (((0.446247030500207)IS NOT(NULL))))); -- 0ms;
SELECT DISTINCT SUM(((vt1.c0)OR(rt0.c2))) OVER (), (~ (t0.c1)) COLLATE BINARY, SUM(((v0.c0)%(v0.c0))) FROM rt0, v0 NOT INDEXED, t0 WHERE (CASE WHEN NULL THEN 0xffffffffc0726bbe ELSE (('') ISNULL) END);SELECT DISTINCT COUNT(*) OVER (), ((((((((((((rt0.c0)OR(v0.c0)))AND(rt0.c6)))AND(((vt1.c0)||(t0.c1)))))OR(((rt0.c6)*(rt0.c6)))))OR(((((((((rt0.c5)AND(t0.c0)))AND(rt0.c3)))AND(t0.c2)))OR(v0.c0)))))AND(((((((((t0.c0)AND(v0.c0)))AND(rt0.c0)))AND(rt0.c5)))OR(rt0.c3)))), ((0.597945362224011) BETWEEN (((rt0.c4)/(rt0.c5))) AND (rt0.c6 COLLATE RTRIM)) FROM rt0, t0;SELECT DISTINCT (((rt0.c2))>(((((vt1.c0)) NOT BETWEEN ((rt0.c4)) AND ((x'')))))) FROM rt0, v0;SELECT DISTINCT '1' FROM rt0, vt1; -- 0ms;
SELECT v0.c0 FROM t0, v0, vt1; -- 0ms;
SELECT DISTINCT (- ((t0.c2 IN (rt0.c3)))), ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE vt1.c0 END)<<((rt0.c2 IN (NULL)))), COUNT((NOT (rt0.c6))) FROM t0, vt1, v0 WHERE (((8.75917815E8 COLLATE NOCASE) NOTNULL));SELECT DISTINCT rtreenode(CAST(rt0.c0 AS REAL), ((rt0.c5)==(rt0.c2))), ((((v0.c0)IS NOT(v0.c0)))<<(((vt1.c0)%(t0.c0)))), ((8.238055E7) NOTNULL) FROM t0, v0 ORDER BY TOTAL_CHANGES()  NULLS LAST;SELECT ALL ((rt0.c2 COLLATE NOCASE) IS TRUE) FROM v0 WHERE ((((((356491048)>=(983510554)), (('-1991991573') NOT BETWEEN (0xffffffffe71136dd) AND (0Xffffffffce3f9d0a)), ((0.37310690159744364) IS TRUE)))==((CASE WHEN 0xffffffffff851873 THEN 0.9560417050943196 ELSE NULL END, ((((((((x'')AND(0.2145874476643489)))AND(x'')))AND(0.2689073103217765)))OR('1283836239')), CASE '#貃8'  WHEN '-1376686137' THEN NULL END)))) GROUP BY vt1.c0;SELECT ALL LIKELY((NOT (v0.c0))) FROM v0 ORDER BY LIKELIHOOD(((rt0.c1)>=(t0.c1)), 0.20588065342754047) ASC  NULLS FIRST;SELECT vt1.c0, (((t0.c2)-(rt0.c3)) IN ()), MIN(CAST(t0.c0 AS NUMERIC)) FROM vt1;SELECT ((rt0.c4) NOT NULL) FROM t0 INDEXED BY i16, vt1, rt0, v0; -- 0ms;
SELECT ALL ((((rt0.c0)AND(SUM(rt0.c6))))AND(CASE WHEN v0.c0 THEN rt0.c6 END)) FROM v0, vt1;SELECT ALL ((((((rt0.c3)AND(rt0.c2)))AND(t0.c0))) NOTNULL) FROM t0, v0 WHERE (CASE WHEN '0.4752321837779714' COLLATE BINARY THEN x'' COLLATE RTRIM WHEN (+ ('773998468')) THEN (((x'', 0.8080497335838766, x''))>((0.49690675420121855, 0x734705b5, 'ZH'))) WHEN (('-1912054237') NOT NULL) THEN ((NULL)|(0.006548822952166633)) END);SELECT ALL ((((rt0.c6) NOT BETWEEN (vt1.c0) AND (rt0.c2)))GLOB((((rt0.c4)) BETWEEN ((t0.c2)) AND ((rt0.c5))))), SUM(UNLIKELY(x'bf6d')), rt0.c6 FROM vt1, rt0 WHERE (NULL) ORDER BY ((((((t0.c1)AND(v0.c0)))AND(rt0.c6))) NOTNULL) DESC;SELECT DISTINCT CAST(MAX(t0.c1) AS TEXT) FROM t0, vt1, rt0, v0 WHERE (((((0.4623969086545422)>(NULL))) NOT BETWEEN ((((NULL)) NOT BETWEEN ((0.6988204182030692)) AND ((NULL)))) AND (((((((((NULL)OR('-474874908')))OR(0.6603520608239077)))OR(0.38386642823011297)))AND('-1939841639'))))); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c2 AS BLOB) AS REAL) FROM v0, t0, vt1, rt0; -- 1ms;
SELECT DISTINCT SUM(CASE WHEN t0.c2 THEN v0.c0 END) OVER () FROM rt0, t0, v0, vt1 WHERE (((CASE WHEN x'' THEN '0.042407540879933814' ELSE x'' END) NOT NULL)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c5 AS NUMERIC))&(((rt0.c6) ISNULL))), ((rt0.c1 COLLATE RTRIM)>((t0.c1 IN (0x38e11cf2)))), CAST(((((rt0.c6)OR(t0.c2)))AND(t0.c0)) AS REAL) FROM t0, v0, vt1 GROUP BY (((((rt0.c5)IS('#ROKgQT'))))<=((vt1.c0)));SELECT DISTINCT rt0.c2, CAST((t0.c2 IN ()) AS NUMERIC), ((((((((CASE WHEN rt0.c1 THEN rt0.c5 END)AND((~ (rt0.c3)))))OR(CASE vt1.c0  WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c5 THEN rt0.c3 WHEN rt0.c4 THEN v0.c0 ELSE t0.c1 END)))OR(0X57a4ab1b)))AND((rt0.c5 IN ()))) FROM v0 WHERE ((((x'032a')) BETWEEN (((((NULL))!=((356491048))))) AND ((((((x'')OR('1283836239')))AND('1g耓T?'))))));SELECT DISTINCT ((t0.c1 COLLATE BINARY) NOT BETWEEN (((rt0.c3)>=(t0.c0))) AND (rt0.c2 COLLATE BINARY)), CASE ((rt0.c1)||(rt0.c1))  WHEN NULL THEN (((t0.c1, rt0.c0, rt0.c6))>=((t0.c0, rt0.c0, rt0.c0))) WHEN AVG(t0.c2) THEN ((((((((rt0.c2)AND(0.22178383475586516)))OR(rt0.c2)))AND(vt1.c0)))OR(1223386151)) WHEN t0.c2 COLLATE BINARY THEN '\n	ㅧ⮕' END, ABS(DISTINCT NULL) FROM vt1, t0, rt0, v0 WHERE (UNICODE((((0.14463359030592438, 0.19430463940140563, NULL))!=((0.7764333056784881, NULL, '575648406'))))); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM t0, vt1 WHERE ((((NULL)) NOT BETWEEN (('-1279427410' COLLATE BINARY)) AND ((TRIM('-1058274021', '{{2B5#~%'))))) ORDER BY CASE WHEN (t0.c0 IN ()) THEN (((rt0.c1, t0.c2, t0.c1))<((rt0.c3, t0.c1, '#dqT'))) WHEN rt0.c0 COLLATE NOCASE THEN IFNULL(DISTINCT rt0.c3, rt0.c3) WHEN (rt0.c5 IN ()) THEN (NOT (rt0.c5)) END ASC  NULLS FIRST LIMIT -712489703 OFFSET 711218882;SELECT CAST(CAST(v0.c0 AS INTEGER) AS NUMERIC) FROM t0, v0, rt0; -- 0ms;
SELECT (((((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c5)), ((((((((rt0.c5)OR(t0.c0)))AND(t0.c2)))AND(t0.c1)))OR(rt0.c4)), UPPER(rt0.c1)))>=((('' IN (rt0.c5)), ((rt0.c6) BETWEEN (rt0.c1) AND (rt0.c3)), ((rt0.c3)<(rt0.c4))))) FROM v0 WHERE (CAST(((x'')-(x'74fa')) AS TEXT)) ORDER BY (- ((- (t0.c0)))) DESC  NULLS LAST;SELECT DISTINCT (((t0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c2))) COLLATE RTRIM FROM vt1;SELECT rt0.c1 FROM v0 WHERE (((0.20832967975750794 COLLATE BINARY)+('' COLLATE BINARY)));SELECT DISTINCT ABS(((((t0.c1)OR(rt0.c4)))OR(v0.c0))) FROM rt0, v0, t0; -- 0ms;
SELECT DISTINCT ((((((rt0.c0)GLOB(rt0.c6)))OR(CASE rt0.c6  WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END)))AND(((((((((v0.c0)OR(t0.c0)))OR(rt0.c2)))OR(rt0.c6)))OR(rt0.c4)))) FROM rt0, vt1, v0 LIMIT 18701404 OFFSET -2016087725;SELECT 1037731775 FROM rt0, v0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ())) ISNULL) FROM vt1, rt0, t0, v0; -- 0ms;
SELECT t0.c2, (CASE rt0.c6  WHEN rt0.c2 THEN rt0.c3 ELSE 0.3514904841511025 END IN ()), (((rt0.c1)) NOT BETWEEN ((rt0.c5 COLLATE BINARY)) AND ((((v0.c0) NOTNULL)))) FROM rt0 GROUP BY LIKELIHOOD(DISTINCT ((rt0.c4) ISNULL), 0.3407903105352035), (((((t0.c1, rt0.c2, t0.c1))<=((rt0.c6, rt0.c1, v0.c0))))%((((v0.c0))=((t0.c1))))), ((rt0.c2)<>((- (rt0.c6)))) ORDER BY (CASE WHEN rt0.c6 THEN rt0.c6 WHEN v0.c0 THEN t0.c1 WHEN vt1.c0 THEN vt1.c0 END IN (rt0.c2 COLLATE NOCASE, rt0.c4 COLLATE BINARY));SELECT ALL rt0.c3 FROM t0, v0, rt0 WHERE (((((((((CASE '1560864886'  WHEN '1615107997' THEN -1845330838 END)AND(((NULL)*(0.2358113134941452)))))OR(((NULL)&('0.6196362879114653')))))AND(CASE WHEN '1432822590' THEN '-1621478010' ELSE '' END)))AND(LIKELIHOOD(0.45454144681318664, 0.17963230766420168)))); -- 0ms;
SELECT DISTINCT CASE t0.c0 COLLATE RTRIM  WHEN NULL THEN ((NULL) NOT BETWEEN (t0.c0) AND (v0.c0)) ELSE CASE t0.c2  WHEN vt1.c0 THEN v0.c0 ELSE rt0.c6 END END FROM vt1, t0 RIGHT OUTER JOIN v0 ON NULL WHERE (((((0.5664247639855329)IS(x''))) ISNULL));SELECT CAST(CAST(rt0.c3 AS BLOB) AS BLOB), ((AVG(t0.c0)) NOT BETWEEN (((rt0.c4)|(rt0.c2))) AND (CAST(rt0.c3 AS NUMERIC))), CASE ((t0.c0)+(rt0.c4))  WHEN ((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)) THEN rt0.c2 COLLATE NOCASE ELSE ((rt0.c1) IS FALSE) END FROM v0 INDEXED BY i16, t0 WHERE (CASE WHEN (x'' IN (0.7785930833780018, -1067993355)) THEN CASE WHEN NULL THEN '' END WHEN ((NULL) BETWEEN (-1338021453) AND (-891874646)) THEN ((0.04999531018059167) BETWEEN (0.20364676595496833) AND (0X1e152fae)) WHEN CAST('' AS BLOB) THEN (x'' IN (x'0aa3', '559076321')) ELSE CASE WHEN 0xffffffffad4e9b32 THEN NULL WHEN 0.3327080610061445 THEN x'' WHEN 0.7518610234788464 THEN 1393497397 END END);SELECT (((rt0.c4))<(((rt0.c1 IN ())))) FROM t0, vt1, v0, rt0; -- 0ms;
SELECT LENGTH((((rt0.c6))=((rt0.c2)))) FROM rt0, t0; -- 0ms;
SELECT json_array_length((~ (vt1.c0))), ((vt1.c0) IS FALSE), (NOT (((rt0.c4)|(vt1.c0)))) FROM v0, vt1 ORDER BY ((rt0.c2 COLLATE NOCASE) BETWEEN (((((rt0.c0)OR(v0.c0)))AND(rt0.c1))) AND ((0X114333e5 IN ()))), ((((TYPEOF(DISTINCT rt0.c5))AND(((rt0.c0) NOTNULL))))AND(((v0.c0)==(t0.c2)))) ASC  NULLS LAST;SELECT DISTINCT ((((((rt0.c5)&(rt0.c2)))AND((((0.45379755749906103))<>((t0.c2))))))OR(TRIM(DISTINCT rt0.c4, vt1.c0))) FROM rt0, t0;SELECT x'' COLLATE RTRIM FROM vt1, v0, t0, rt0; -- 0ms;
SELECT ALL (((rt0.c4)) BETWEEN ((CASE WHEN rt0.c1 THEN rt0.c5 END)) AND ((((t0.c2)>=(rt0.c3))))) FROM t0 INDEXED BY i16, rt0; -- 1ms;
SELECT UPPER(DISTINCT 8.75917815E8) FROM t0, rt0 LIMIT 1104629714 OFFSET 1782312912; -- 0ms;
SELECT DISTINCT '<6oSA3' FROM t0, v0, rt0 WHERE ((('') NOT BETWEEN (x'') AND (NULL)) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c5)) AS INTEGER) FROM rt0, t0, vt1, v0 WHERE (((((((((((((TRIM(0.9466330428454621))AND(((x'') NOT BETWEEN ('0.38386642823011297') AND (0.11917766556840492)))))OR('' COLLATE BINARY)))OR(CAST(33703297 AS INTEGER))))OR(((((((((0.6035953101775694)AND('1E+|o( f')))AND(NULL)))OR(NULL)))AND('XI3}')))))AND((- (NULL)))))AND(((((x'd977')OR(-319617845)))AND(''))))); -- 0ms;
SELECT ALL COUNT(*) FROM v0; -- 0ms;
SELECT LIKELIHOOD(UPPER(rt0.c5), 0.7586291497285486), ((t0.c1) IS TRUE) COLLATE BINARY, AVG(vt1.c0), ((((rt0.c2) NOT BETWEEN (t0.c2) AND (rt0.c0)))-(rt0.c0)), LEAD(CASE ((t0.c2) BETWEEN (t0.c2) AND (NULL))  WHEN ((t0.c0)|(t0.c1)) THEN (+ (t0.c1)) ELSE 'uwj' END, LIKELY((~ (t0.c2))), LOWER(4.52674194E8)) OVER () FROM t0 WHERE ((((((0.2825201321704438, x'', 0.6005862271429925))<=((x'', '0.5153448423517698', 0X5b4a9e69)))) BETWEEN (highlight('1652922905', '%j', x'', x'')) AND ((('-1974655466') NOT BETWEEN (0xfffffffff5ca604c) AND ('S!⡁!	')))));SELECT DISTINCT CASE GROUP_CONCAT(t0.c0)  WHEN x'0eab' COLLATE BINARY THEN COUNT(x'') ELSE ((v0.c0) NOT BETWEEN (vt1.c0) AND (t0.c2)) END FROM rt0 WHERE ((NOT (164801769)));SELECT ALL ((((json(rt0.c2))OR(((t0.c2)GLOB(t0.c1)))))AND(rt0.c4)) FROM t0, rt0 WHERE ((- ((('5z')LIKE(x''))))); -- 0ms;
SELECT DISTINCT SUM((((rt0.c5))<=((NULL)))) OVER ( GROUPS  CURRENT ROW EXCLUDE CURRENT ROW), CAST(((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)) AS TEXT), ((CASE rt0.c3  WHEN vt1.c0 THEN 0.04673097402101245 WHEN t0.c2 THEN v0.c0 WHEN 'ႰI8' THEN rt0.c4 ELSE rt0.c5 END) BETWEEN (rt0.c3 COLLATE NOCASE) AND (COUNT(*))) FROM t0, rt0;SELECT (t0.c1 IN ((((rt0.c0))!=((rt0.c1))))) FROM vt1 NOT INDEXED, v0, t0, rt0 WHERE ((((((0xffffffffb8b5c7fa)) NOT BETWEEN (('')) AND ((x'f8b6'))))IS NOT((('PᖾvO.X아洆') NOT NULL)))); -- 0ms;
SELECT DISTINCT rt0.c4 FROM v0, t0, rt0 WHERE (((((CASE 0.445226224717688  WHEN 0.2371139179319347 THEN x'' ELSE '-1018013739' END)OR(CAST(0.5017890481404251 AS TEXT))))OR('OY8䴧h5' COLLATE NOCASE))) ORDER BY ((((CAST(t0.c2 AS NUMERIC))AND(CASE WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN '&胵IW' THEN t0.c2 ELSE vt1.c0 END)))OR((((rt0.c3, t0.c2, rt0.c6))<((rt0.c0, rt0.c5, rt0.c1))))) DESC;SELECT ALL CAST(CASE WHEN v0.c0 THEN t0.c1 WHEN rt0.c6 THEN rt0.c3 WHEN -1086278567 THEN rt0.c1 END AS NUMERIC) FROM vt1;SELECT DISTINCT CASE ((rt0.c0)>=(rt0.c1))  WHEN '473902058' THEN UPPER(rt0.c3) WHEN HEX(DISTINCT -1182094281) THEN ((rt0.c0) NOT NULL) WHEN UNLIKELY(t0.c0) THEN (+ (vt1.c0)) ELSE ((rt0.c2)>>(t0.c0)) END, ((((rt0.c2)IS(rt0.c2))) BETWEEN (((rt0.c0) NOT BETWEEN (t0.c2) AND (rt0.c4))) AND ((((vt1.c0, rt0.c5, t0.c2))<=((v0.c0, rt0.c6, '-1656301511'))))), (((('g5')<(rt0.c2))) NOT BETWEEN (((((936908720)OR(t0.c2)))OR(rt0.c1))) AND (CAST(rt0.c0 AS REAL))) FROM rt0, v0, t0 WHERE ((NOT (((((((((-2.15303571E8)AND(0.4706326696943153)))OR(NULL)))AND(NULL)))OR(x'9b72')))));SELECT DISTINCT (((rt0.c6 IN ()))>=(TOTAL(rt0.c0))) FROM t0, v0, vt1, rt0; -- 0ms;
SELECT DISTINCT (((vt1.c0 IN ()))!=(CAST(x'' AS BLOB))) FROM rt0, t0, v0, vt1 GROUP BY '-118163296', (+ (CAST(vt1.c0 AS INTEGER))), ((((((((CASE WHEN v0.c0 THEN 0.4654182148109537 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN t0.c0 END)OR(1585616541 COLLATE BINARY)))OR(vt1.c0 COLLATE BINARY)))OR(((t0.c1) IS TRUE))))OR(CAST('' AS TEXT))); -- 0ms;
SELECT ALL (~ (2089893836)) COLLATE NOCASE FROM rt0, v0, t0, vt1 ORDER BY CASE (rt0.c0 IN (t0.c0))  WHEN (v0.c0 IN (rt0.c5, rt0.c6)) THEN TRIM(rt0.c0, rt0.c2) ELSE CAST(rt0.c3 AS TEXT) END, CAST((t0.c2 IN ()) AS TEXT); -- 0ms;
SELECT ((NULL)/('i')) FROM t0, rt0 GROUP BY ((((((((json_array_length(v0.c0))OR(((t0.c1) NOT NULL))))OR(((rt0.c0)IS NOT(rt0.c6)))))OR(CASE rt0.c4  WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END)))OR(((((NULL)OR(vt1.c0)))OR(rt0.c6))));SELECT DISTINCT ((((+ (rt0.c4)), ((rt0.c1) NOT BETWEEN (x'') AND (vt1.c0)), NULL))>((CASE WHEN rt0.c2 THEN NULL END, ((t0.c2)&(rt0.c6)), ((rt0.c4) NOT BETWEEN (rt0.c5) AND (t0.c0))))) FROM t0, v0, rt0, vt1; -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c4)OR(vt1.c0)))AND(t0.c2))) FROM v0, rt0, t0, vt1 WHERE (((((NULL)-(NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT '954277106' FROM rt0, t0, v0, vt1 UNION ALL SELECT (- ((((rt0.c2, t0.c0, vt1.c0)) NOT BETWEEN ((rt0.c0, rt0.c6, t0.c1)) AND ((rt0.c2, rt0.c3, rt0.c1))))) FROM t0, v0, vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) IS TRUE)) IS TRUE) FROM v0 NOT INDEXED, rt0; -- 0ms;
SELECT ((((rt0.c3)|(t0.c0))) NOT NULL), ((TOTAL(t0.c1))-((('1590469823')|(vt1.c0)))), (((~ (rt0.c4))) NOT BETWEEN (((0.678116868766656)IS NOT(rt0.c2))) AND (((rt0.c4)>=('45824821')))) FROM t0 WHERE ((((('-2093229700') BETWEEN (NULL) AND ('0.40224343240173444')))OR(CASE 936908720  WHEN 0.7960992344795993 THEN NULL END))) LIMIT 1951608837;SELECT DISTINCT ((LOWER(DISTINCT t0.c1)) ISNULL) FROM t0, v0, vt1, rt0 WHERE (CASE WHEN ((0.41633268511575905) IS TRUE) THEN '711218882' WHEN LOWER(x'') THEN (('')IS(0.06498652327333809)) WHEN ((0X26e77951)<(x'')) THEN (~ (0.22794849631550018)) ELSE ((x'')IS(NULL)) END); -- 0ms;
SELECT ALL LAG(((x'5fe1')<(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))), ABS(v0.c0) COLLATE BINARY, vt1.c0) OVER ( ORDER BY ((((((((rt0.c0)AND(rt0.c6)))OR(NULL)))OR(((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))))OR(CASE '-1939841639'  WHEN v0.c0 THEN rt0.c2 ELSE t0.c1 END)) DESC  NULLS FIRST, ((('\ngF' IN (rt0.c5)))/(t0.c0))) FROM v0, vt1 GROUP BY (((rt0.c5 IN (t0.c1)))<=((((rt0.c0, rt0.c0, rt0.c5, t0.c0, rt0.c3)) NOT BETWEEN ((rt0.c0, rt0.c2, 'TRUE', v0.c0, rt0.c0)) AND ((t0.c1, rt0.c5, rt0.c1, rt0.c3, v0.c0))))), ((rt0.c3 COLLATE BINARY)%((NOT (rt0.c3)))), (+ (((rt0.c6)+(rt0.c4)))) HAVING ((CAST(rt0.c3 AS TEXT))<<(COUNT(rt0.c3)));SELECT ((((+ (v0.c0))))<((((rt0.c4) NOTNULL)))), rt0.c1, CAST(UNICODE(rt0.c6) AS INTEGER) FROM t0, v0, rt0 WHERE (((((0.48273401683126915) NOT NULL))LIKE(((x'') BETWEEN ('0.02655996438025854') AND (0.8504414291090392))))); -- 0ms;
SELECT DISTINCT HEX(DISTINCT (NOT (rt0.c3))) FROM v0, vt1, rt0, t0 WHERE (CAST(('t' IN ()) AS INTEGER)); -- 0ms;
