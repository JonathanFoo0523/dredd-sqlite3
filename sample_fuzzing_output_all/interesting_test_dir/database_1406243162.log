-- Time: 2024/06/07 07:28:43
-- Database: database62
-- Database version: 3.40.0
-- seed value: 1406243162
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, c3, c4); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES ('7''*Jq'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c1, c0) VALUES (NULL, 'W\nQTwnORK', '7''*Jq'); -- 0ms;
PRAGMA cache_spill = 3073268061381307734; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1, c2) VALUES (x'', '680930815', '4w(N''~W'), (0.8802253684468114, NULL, '680930815'), ('680930815', 0X28962dff, 0.44923005689868256), (x'', 'Wo', x''), ('958607640', '0.8802253684468114', 6.80930815E8); -- 1ms;
INSERT OR REPLACE INTO rt0(c3, c1, c0) VALUES ('680930815', '䥝{', ''); -- 2ms;
INSERT OR IGNORE INTO rt0(c0, c2, c3, c1) VALUES (0.7064719862796772, '-1317935846', '680930815', 0.3994152036666354); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c3, c1) VALUES (x'', '', 0.5353079366853487, '+QEQhT!''f'); -- 1ms;
ANALYZE rt0; -- 1ms;
ANALYZE; -- 1ms;
REINDEX RTRIM; -- 0ms;
REINDEX; -- 0ms;
PRAGMA integrity_check; -- 0ms;
END; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
ANALYZE; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
INSERT OR IGNORE INTO rt0(c3, c2) VALUES (0.038688174564581845, 0.4005168257391367), ('/F2翟DG', '-1317935846'), (0.3266828816933932, 0xe0c7423); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c2, c1, c0) VALUES (235697187, ((x'987e') IS TRUE), NULL), (x'', x'', 0.4629347444785008), ('-716355235', x'cdf1', '-716355235'), (NULL, '', '-716355235'), (NULL, 0.44923005689868256, NULL); -- 0ms;
INSERT OR ABORT INTO rt0(c0, c2) VALUES ('', 0.7064719862796772), (0.10542046678690564, ''), (0.8587848685691832, 0x7cd3145a); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c4, c0, c2, c1) VALUES (0X5272843c, '', '6', x'492c7744'), ('', '-716355235', NULL, 0Xffffffff9aedff09), (6.80930815E8, '7k %', '680930815', x'0c19'), (NULL, x'', NULL, x''), ('495568732', 1255699088, '-1253081121', 0.04183886352588584); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c0) VALUES (0.3994152036666354, NULL, NULL); -- 1ms;
PRAGMA main.mmap_size = 326930759608889544; -- 0ms;
VACUUM temp; -- 0ms;
ANALYZE sqlite_master; -- 1ms;
ANALYZE temp; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
ANALYZE; -- 5ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', '{ᔿh4dm', x'ea77', '', '372556155'); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES ('1383236668', 0x40784d4f); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
DELETE FROM rt0 WHERE ((LIKELIHOOD(DISTINCT rt0.c3, 0.9611740618506012)) BETWEEN (((rt0.c3)%(rt0.c1))) AND (((rt0.c0)&(rt0.c1)))); -- 0ms;
END TRANSACTION; -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c4) VALUES (''), ('372556155'), (0.6836148120642214); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts5(c0 UNINDEXED, c1, c2); -- 1ms;
INSERT OR ROLLBACK INTO vt0(c2, c0) VALUES (0.41458303477481917, '495568732'); -- 0ms;
REINDEX; -- 0ms;
PRAGMA cache_spill; -- 0ms;
PRAGMA incremental_vacuum(1612526801); -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c3, c4, c2) VALUES ('-701329236', '-327412417', 0.04918950133511024, 0xffffffff9d7d12d2); -- 1ms;
INSERT OR IGNORE INTO vt0(c2, c0) VALUES (NULL, NULL), (x'', 0.4897602012562252), (0.47375789365426446, 0.2172954635842903); -- 0ms;
PRAGMA recursive_triggers; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c3) VALUES ('0.038688174564581845', NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c3, c4, c0) VALUES ('1383236668', 0.4809323922908111, NULL), ('', NULL, x'117e'), (x'e793', 0.49848887984956025, x''), (NULL, NULL, '0.0'), ('-1652747566', x'', x'6b05'), (x'', '', x'73d2662a'), (x'', NULL, x''); -- 0ms;
DROP TABLE IF EXISTS rt0; -- 0ms;
INSERT OR ABORT INTO vt0(c1, c0) VALUES ('0.8802253684468114', '979527063'), (NULL, x''), (0.1487548509159864, '{ᔿh4dm'); -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
INSERT OR FAIL INTO vt0(c0) VALUES ('-743699341'); -- 0ms;
ANALYZE; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT CASE (vt0.c1 IN (vt0.c2, vt0.c0))  WHEN vt0.c1 COLLATE RTRIM THEN ((vt0.c2)&(vt0.c1)) WHEN ((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) THEN CAST(vt0.c2 AS REAL) WHEN COUNT(*) THEN (- (vt0.c0)) END, TOTAL(SQLITE_VERSION()) OVER (), ((((((((CAST(vt0.c1 AS TEXT))OR(((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))))OR(vt0.c0)))AND((vt0.c0 IN ()))))OR(SUBSTR(vt0.c1, vt0.c2))) FROM vt0 WHERE (CASE WHEN (((('')OR(NULL)))AND(NULL)) THEN ((NULL)IS(x'')) END); -- 0ms;
SELECT ALL AVG(vt0.c1) OVER (), rtreenode(CASE WHEN NULL THEN vt0.c0 ELSE vt0.c0 END, (((vt0.c2, vt0.c2, vt0.c1))<=((vt0.c1, vt0.c1, vt0.c1)))), (((((((((vt0.c1)AND(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))AND(vt0.c0)) IN ()) FROM vt0 WHERE (((0.3616297000188998) BETWEEN ('9C\r)j') AND ('958607640')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((NULL) IS TRUE), x'1bbc', (NOT (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)) FROM vt0 WHERE (((((NULL) NOT BETWEEN ('477843288') AND (0.18874045170738585)))|((NULL IN (''))))); -- 0ms;
SELECT SUM(((((((((vt0.c0)OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)))OR(vt0.c2))), ((vt0.c0) BETWEEN (vt0.c1) AND (x'ca07')) COLLATE NOCASE, CAST(vt0.c2 AS INTEGER) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((0.6290183608227482)|((vt0.c0 IN ()))) FROM vt0 WHERE (((((x'')||(0xffffffffda9361ba)))&(((x'')IS(')L隈f}+3'))))); -- 1ms;
SELECT DISTINCT ((x'' COLLATE RTRIM) IS TRUE), NTILE(CASE ((((((((vt0.c0)AND('-1253081121')))OR(vt0.c0)))AND(vt0.c2)))AND(vt0.c1))  WHEN ((vt0.c1)<(vt0.c2)) THEN ((vt0.c0) NOT NULL) WHEN vt0.c1 COLLATE BINARY THEN CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 END WHEN ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c2)) THEN ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) END) OVER (), CAST((+ (vt0.c2)) AS BLOB) FROM vt0 WHERE ((((((1814299802)) NOT BETWEEN ((x'')) AND ((x'a3e0'))))>((x'' IN ()))));SELECT TRIM(DISTINCT ((vt0.c0) ISNULL), ((vt0.c2)/(vt0.c2))) FROM vt0 WHERE (TRIM(DISTINCT (('1255699088') IS FALSE))); -- 0ms;
SELECT CAST(((vt0.c1) ISNULL) AS REAL) FROM vt0; -- 0ms;
SELECT DISTINCT x'f9fb' FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (vt0.c1 COLLATE BINARY)) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)||(vt0.c2)))||(SUM(vt0.c1))) FROM vt0 WHERE ((((NOT (NULL)))+((((('䥝{')AND(x'')))AND(-1.253081121E9))))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c0)<=(0Xffffffffd51350f0))  WHEN (- (vt0.c1)) THEN ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c0)) END, ('u .Q<RiGr' IN ()), (~ (((NULL)|(vt0.c1)))), ((CAST(vt0.c1 AS INTEGER)) BETWEEN (vt0.c2) AND (json_valid(vt0.c2))), (vt0.c0 IN (NULL)) COLLATE NOCASE FROM vt0 GROUP BY vt0.c1 HAVING ((AVG(vt0.c0)) NOTNULL) LIMIT 1954203690; -- 0ms;
SELECT DISTINCT (+ ((((vt0.c0))<>((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ((vt0.c2) NOT BETWEEN ((((vt0.c0))>(('372556155')))) AND (((vt0.c2)+(vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c2)>(((vt0.c2) IS TRUE))) FROM vt0 LIMIT 1601028557 OFFSET 495568732; -- 0ms;
SELECT '^n' FROM vt0 WHERE (CASE WHEN (('9C\r)j')|(0Xffffffffaa7c7769)) THEN ((((6.610549439908242E-4)OR('1612526801')))OR('-1652747566')) WHEN (('䥝{') NOT BETWEEN ('944308750') AND (4.77843288E8)) THEN ((((((((528016633)OR(NULL)))OR('lb隈A')))AND(0.54881871522693)))OR('')) WHEN CAST(x'' AS TEXT) THEN ((0.9551839620633005)||(x'5954')) ELSE TYPEOF(NULL) END) LIMIT 1259426568 OFFSET 1086802983; -- 0ms;
SELECT DISTINCT CASE WHEN ((-524379045)&(vt0.c2)) THEN (((vt0.c0)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c2))) END FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c1)AND(vt0.c1)) AS REAL) FROM vt0 WHERE (((LIKELIHOOD(x'', 0.30244508744394627))+(0.6628399695601844))); -- 0ms;
SELECT DISTINCT ((((vt0.c0 COLLATE BINARY)OR(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)))AND(((vt0.c0) ISNULL))) FROM vt0 WHERE (MIN(CAST(x'' AS INTEGER), UNLIKELY(DISTINCT NULL), (('1612526801') BETWEEN ('-1317935846') AND (0.48057554459611085)), ((((0.04918950133511024)OR(x'7b855cf9')))AND(NULL)))); -- 0ms;
SELECT DISTINCT (((+ (vt0.c2)))GLOB(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)))) FROM vt0; -- 1ms;
SELECT DISTINCT NULL FROM vt0 WHERE ((((('') BETWEEN ('') AND ('_チ341MF~K')))<((x'fce9' IN (x''))))); -- 0ms;
SELECT vt0.c1 FROM vt0 WHERE (CASE (NULL IN ())  WHEN ((NULL)<=('fJ')) THEN CAST(NULL AS REAL) ELSE 1.255699088E9 COLLATE BINARY END) GROUP BY ((((vt0.c1) NOT BETWEEN (NULL) AND (vt0.c2)))>(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)))); -- 0ms;
SELECT (((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) IN ()) FROM vt0 WHERE (((NOT (NULL)) IN ())); -- 0ms;
SELECT DISTINCT ((((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END)OR(CAST(vt0.c1 AS NUMERIC))))AND((('-1869709033')GLOB(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS TEXT))*(((vt0.c1) NOTNULL))) FROM vt0; -- 0ms;
SELECT ((vt0.c0 COLLATE RTRIM) NOT BETWEEN ((((vt0.c1))<>((0xfffffffff89b92b7)))) AND (((vt0.c1) ISNULL))), ((SUM(vt0.c1))<=(TRIM(vt0.c1))), COUNT(NULL) OVER () FROM vt0 NOT INDEXED; -- 0ms;
SELECT ALL UPPER(DISTINCT vt0.c2) COLLATE BINARY FROM vt0 ORDER BY vt0.c1  NULLS FIRST; -- 0ms;
SELECT vt0.c0 FROM vt0 WHERE (CAST((- ('-627875398')) AS REAL)); -- 0ms;
SELECT DISTINCT UNLIKELY(TOTAL(vt0.c2)) FROM vt0 LIMIT 958607640; -- 0ms;
SELECT DISTINCT (vt0.c0 IN (CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ALL LIKELIHOOD((~ (vt0.c2)), 0.37709069456293776) FROM vt0 LIMIT -856931272 OFFSET 1016503300; -- 0ms;
SELECT ((CASE vt0.c1  WHEN x'' THEN NULL ELSE -1002148019 END) ISNULL), '-1869709033', vt0.c0 FROM vt0 WHERE ((('6.610549439908242E-4' COLLATE NOCASE)||(1.383236668E9 COLLATE NOCASE))); -- 0ms;
SELECT ALL (((vt0.c0)/(vt0.c0)) IN ()) FROM vt0 LIMIT 126027562; -- 0ms;
SELECT DISTINCT (~ (((((((((((((vt0.c0)OR(vt0.c0)))OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))OR(vt0.c0)))) FROM vt0 WHERE ((CASE WHEN x'' THEN 0.8203707105356591 ELSE 0.22046359562387163 END IN (('-1797416553' IN (0Xffffffffceed2a59))))); -- 0ms;
SELECT ALL CASE WHEN vt0.c0 THEN vt0.c1 END COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT ((0x46b3db3f)<>(CAST(vt0.c0 AS TEXT))) FROM vt0 WHERE (((((NULL)|(NULL)))%(((((((((-150355973)AND(NULL)))OR('1814299802')))AND(NULL)))OR(235697187))))); -- 0ms;
SELECT DISTINCT ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (NULL)))/(((vt0.c1)>>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (SUM(vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL ((HEX('926656038'))|(((vt0.c1) BETWEEN (vt0.c2) AND ('1081625935')))) FROM vt0 WHERE ((('495568732' COLLATE BINARY)*(CAST('-1695678711' AS BLOB)))) LIMIT 543191620; -- 0ms;
SELECT ((((NULL) IS TRUE))<(((vt0.c2)AND(vt0.c1)))) FROM vt0 WHERE ((((('4?')<<('1601028557')))>>((- (x''))))); -- 0ms;
SELECT (((vt0.c1)) BETWEEN ((TOTAL(vt0.c2))) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(SUM(CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 END)) FROM vt0;SELECT ((((NOT (vt0.c0)), ((vt0.c1)<(vt0.c1)), (0.05460405003088009 IN (vt0.c0)), ((vt0.c2)%(vt0.c0)), CASE WHEN vt0.c1 THEN vt0.c2 ELSE x'' END))<=(((NOT (vt0.c0)), ((vt0.c1)OR(vt0.c1)), TOTAL(vt0.c0), NULL, ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1))))) FROM vt0 WHERE (((((((x'934f')<>(NULL)))OR(CASE NULL  WHEN NULL THEN NULL WHEN 0.29569212360876496 THEN NULL WHEN 0X44aced9c THEN 'oLQ oMF僰5' ELSE 'nH/F9^oa''' END)))OR(((1490667056)-(0.8234096107730116))))); -- 1ms;
SELECT ALL ((((NULL) NOT BETWEEN (vt0.c1) AND (vt0.c2)))IS NOT(((1259426568)GLOB(vt0.c0)))) FROM vt0 WHERE (CAST(0Xffffffff9d761186 AS INTEGER) COLLATE RTRIM) LIMIT -991926950; -- 0ms;
SELECT (((vt0.c2, CAST(vt0.c0 AS REAL), 1654322561, ((vt0.c0)|(vt0.c0)), (((vt0.c0))<((vt0.c0)))))>((CAST(vt0.c1 AS REAL), LIKELIHOOD(DISTINCT vt0.c0, 0.018399006277921348), CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 END, CASE WHEN vt0.c1 THEN vt0.c1 END, ((vt0.c2) ISNULL)))) FROM vt0 GROUP BY (((''))>((CASE WHEN vt0.c0 THEN vt0.c0 END))) LIMIT 543191620 OFFSET 1799517760; -- 0ms;
SELECT DISTINCT MAX((~ (vt0.c0))), 0.013921489573143875, CAST(((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c1)) AS TEXT), ((((vt0.c0) BETWEEN (vt0.c2) AND ('懶z?y*?')))==(((-1.695678711E9) NOT NULL))), vt0.c0 FROM vt0 ORDER BY (- (((vt0.c1) NOTNULL))); -- 0ms;
SELECT ALL TOTAL(((vt0.c1)*(vt0.c2))), ((((vt0.c1)OR((~ (vt0.c0)))))OR(((vt0.c1)|(vt0.c2)))), (NOT (NULLIF(DISTINCT vt0.c0, vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL GROUP_CONCAT(x'') OVER (), (((+ (vt0.c1))) NOT BETWEEN (SUM(vt0.c2)) AND ((vt0.c0 IN (vt0.c0, vt0.c0)))), PERCENT_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (NOT ((((vt0.c1, vt0.c1, vt0.c1, vt0.c2, vt0.c2))==((vt0.c0, vt0.c1, vt0.c1, vt0.c0, vt0.c1))))) FROM vt0 WHERE ((ROUND(0Xfffffffff89b92b7, NULL) IN ())); -- 0ms;
SELECT ((vt0.c2) BETWEEN (vt0.c2) AND (NULL)) COLLATE BINARY COLLATE NOCASE FROM vt0 WHERE (((CAST(0.640396139553277 AS BLOB))-((((NULL))<((NULL)))))); -- 0ms;
SELECT (NULL IN ((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c0) BETWEEN (1255699088) AND (vt0.c0)) AS REAL) FROM vt0 WHERE ((((((((((('1412194049')IS(0xffffffff9d7d12d2)))OR(((0.20962208721137476) IS TRUE))))AND((- ('')))))OR(LIKELY(DISTINCT -1024991789))))OR(((NULL)/(x'123dbc3b'))))); -- 1ms;
SELECT DISTINCT ((((vt0.c1 COLLATE RTRIM)OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))))AND(((vt0.c2) NOTNULL))), vt0.c1, CASE ((vt0.c2)*(0X629af581))  WHEN (- (vt0.c2)) THEN ' Wn&j' WHEN ((vt0.c1)-(vt0.c0)) THEN ((vt0.c2)IS(vt0.c0)) WHEN COALESCE(NULL, vt0.c1) THEN (((vt0.c0))>((vt0.c0))) ELSE CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c2 END END FROM vt0 ORDER BY x''  NULLS LAST, ((((((((((((vt0.c0)AND(vt0.c1)))AND(vt0.c0)))AND(vt0.c0)))AND(vt0.c2)))OR(((x'')>>(vt0.c0)))))OR(((vt0.c1) NOTNULL)))  NULLS LAST; -- 0ms;
SELECT ALL ((((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c2)))AND(vt0.c2))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((AVG(vt0.c1)) IS FALSE), ((((((vt0.c1)AND(vt0.c2)))OR(vt0.c1)))&(COUNT(vt0.c0))), NULLIF(json_array_length(vt0.c2, vt0.c0), (~ (vt0.c0))), ((CASE WHEN vt0.c0 THEN '-1140356531' WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)<(((((((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c1)))), (((+ (vt0.c2)))|(vt0.c0)) FROM vt0 WHERE ((((('1612526801')/(0.10542046678690564)))*(((((x'')OR(NULL)))AND(0.5089617144644062))))); -- 0ms;
SELECT (((vt0.c2 IN (vt0.c0)))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))) FROM vt0 WHERE (((rtreenode(x'', x'')) NOT NULL)); -- 0ms;
SELECT ALL (((vt0.c1, vt0.c0, '1275177940', vt0.c1, vt0.c0)) NOT BETWEEN ((((vt0.c2)>=(vt0.c2)), x'1672', ((vt0.c1) NOT NULL), CAST(vt0.c2 AS INTEGER), SUM(vt0.c1))) AND ((((vt0.c2)OR(vt0.c1)), (~ (vt0.c1)), GLOB(vt0.c0, vt0.c0), vt0.c2, DATE(vt0.c2, vt0.c1, vt0.c1, vt0.c2, vt0.c0)))) FROM vt0 ORDER BY vt0.c2, '1814299802' ASC; -- 0ms;
SELECT DISTINCT (('-1253081121')>=(vt0.c0)) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (((vt0.c1)+(vt0.c0))) AND (x'')), ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 END) BETWEEN (CASE vt0.c2  WHEN vt0.c1 THEN x'' WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END) AND (UPPER(vt0.c0))), 0.019122907155428193 FROM vt0 WHERE (x'') GROUP BY ((((((vt0.c1)<(vt0.c0)))AND((NOT (vt0.c2)))))OR(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END)), CAST(((vt0.c1)LIKE(vt0.c0)) AS INTEGER), (((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1))))>((vt0.c2))) LIMIT 847050647 OFFSET 866990755; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 LIMIT 1776695917; -- 0ms;
SELECT ALL 0.20962208721137476 FROM vt0 WHERE (((((0.6586909728843034)+('6'))) NOT NULL)); -- 0ms;
SELECT STRFTIME(((NULL) ISNULL), (((0.7306452992739499)) BETWEEN ((vt0.c0)) AND ((vt0.c1))), ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1))), ((vt0.c0 COLLATE RTRIM) BETWEEN ((~ (vt0.c1))) AND (CAST(vt0.c1 AS REAL))), vt0.c2 FROM vt0 WHERE (((((((((NULL COLLATE BINARY)AND(((0x1773a595) ISNULL))))AND(((573018011)-(x'')))))OR((('979527063')>=('>L')))))OR(((0.49848887984956025)>(0xffffffffec7c153f))))); -- 0ms;
SELECT ALL (((vt0.c1, vt0.c2, vt0.c0, vt0.c0, vt0.c0)) NOT BETWEEN (('1311237826', GROUP_CONCAT(vt0.c1), NULL, vt0.c1 COLLATE RTRIM, COUNT(vt0.c1))) AND ((TRIM(vt0.c1), ((vt0.c1)+(vt0.c2)), TIME(vt0.c1, vt0.c2, vt0.c2), vt0.c1 COLLATE BINARY, ((vt0.c2) NOT NULL)))), vt0.c2, (((- (vt0.c2)))<=(TYPEOF(vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL (- (((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c0)))) FROM vt0; -- 0ms;
SELECT ALL CASE CAST(vt0.c0 AS TEXT)  WHEN ((vt0.c0)<<(0.27487827758397265)) THEN 0.687676773777515 ELSE CAST(0.3105961972940955 AS INTEGER) END FROM vt0; -- 0ms;
SELECT NTH_VALUE(((((((((CASE WHEN vt0.c2 THEN vt0.c2 END)OR(((vt0.c1)<=(NULL)))))OR(CASE vt0.c1  WHEN NULL THEN vt0.c1 END)))AND(vt0.c2 COLLATE BINARY)))AND((((vt0.c0, vt0.c1, vt0.c0))<((vt0.c2, vt0.c0, vt0.c2))))), NULLIF(vt0.c0 COLLATE NOCASE, GLOB(vt0.c0, vt0.c2))) OVER () FROM vt0 WHERE (TRIM(((NULL) ISNULL))) ORDER BY CASE WHEN CAST(vt0.c2 AS TEXT) THEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END ELSE vt0.c0 END  NULLS LAST, ((vt0.c2 COLLATE BINARY) NOTNULL) DESC  NULLS LAST, CASE vt0.c2  WHEN ((vt0.c1)<>(x'')) THEN vt0.c2 END DESC;SELECT DISTINCT CAST(x'' AS NUMERIC) COLLATE RTRIM FROM vt0 WHERE (UNLIKELY(CAST(0.44696627471106454 AS BLOB))); -- 0ms;
SELECT DISTINCT (((((((((((vt0.c0, vt0.c1, x'f025')) NOT BETWEEN ((0.7064719862796772, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c2))))OR(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END)))OR(',y ')))AND((+ (vt0.c1)))))OR((vt0.c2 IN (vt0.c1)))) FROM vt0 WHERE ((((('7k %') BETWEEN (1.95420369E9) AND ('0.11820000979065548')))<(CASE WHEN NULL THEN '-1393799091' END))) LIMIT 134804860; -- 0ms;
SELECT ALL CAST(((vt0.c1)%(vt0.c0)) AS BLOB), ((CAST(vt0.c1 AS BLOB)) BETWEEN (((vt0.c1)IS NOT(vt0.c0))) AND (((vt0.c1)*(NULL)))), '''譗峘v.o!K洊' FROM vt0 WHERE (CASE WHEN 0x7007ea52 THEN 'Ry\n /6ܪEW' END COLLATE BINARY); -- 1ms;
SELECT DISTINCT ((vt0.c2)|(((vt0.c1)/(vt0.c2)))) FROM vt0 LIMIT 991703143 OFFSET -456176854; -- 0ms;
SELECT ALL LAG(0.04918950133511024, ((vt0.c1 IN ()) IN ()), NULLIF((vt0.c0 IN ()), json_array_length(vt0.c0))) OVER ( ORDER BY (((vt0.c2)) NOT BETWEEN ((((vt0.c2)%(vt0.c2)))) AND ((vt0.c0))) DESC  NULLS FIRST) FROM vt0 WHERE (((((('-1653206650')GLOB('鱛YX'))))!=((((x'bcd9')>>(x'21c1')))))); -- 0ms;
SELECT UPPER((('')<<(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT (- ((((vt0.c2, vt0.c0, vt0.c2))<((vt0.c1, vt0.c0, vt0.c1))))), (((vt0.c1)) NOT BETWEEN (((vt0.c0 IN (vt0.c0)))) AND ((('909078519' IN ())))), ((((MIN(vt0.c0))OR(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(NULL)))OR(vt0.c2)))))OR((((vt0.c1)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c2))))) FROM vt0 WHERE (CASE WHEN SQLITE_COMPILEOPTION_GET(0.6648465422974316) THEN CAST(1.081625935E9 AS BLOB) END) ORDER BY vt0.c1; -- 0ms;
SELECT DISTINCT CAST(MAX(vt0.c2) AS INTEGER), DENSE_RANK() OVER (), (((((vt0.c2))=((vt0.c0))))GLOB(vt0.c0)) FROM vt0 WHERE (CASE (('')<>('#R\_Pw*'))  WHEN ((((((((NULL)OR(x'c28b')))AND('1451322634')))OR(x'')))AND(0X6b427640)) THEN ((x'') NOT BETWEEN (0.04918950133511024) AND (x'')) ELSE (((x''))==((x'16b9'))) END); -- 0ms;
SELECT ALL vt0.c0, (((((- (vt0.c2)))OR(((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))))OR(vt0.c2)), ((((((vt0.c1) ISNULL))AND(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))))OR((- (vt0.c0)))) FROM vt0 WHERE (PRINTF(0.762859797788842 COLLATE RTRIM)); -- 0ms;
SELECT ((CHAR(vt0.c1)) BETWEEN (vt0.c0 COLLATE RTRIM) AND (CAST('' AS TEXT))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0 LIMIT 586562518; -- 0ms;
SELECT DISTINCT (+ (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 END)) FROM vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN 0.8498082401859747 THEN (('1265696557') IS TRUE) ELSE load_extension('-2081430009') END) ORDER BY (((NOT (vt0.c0)))*(CASE vt0.c1  WHEN vt0.c0 THEN vt0.c2 END)) DESC, ((CAST(vt0.c1 AS INTEGER))IS(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c2 END)) DESC  NULLS FIRST;SELECT DISTINCT vt0.c2 FROM vt0 WHERE (((((-1.002148019E9) NOT BETWEEN (x'') AND (x'')))<>(((0.6035638239536614)IS NOT(NULL))))); -- 0ms;
SELECT ALL 0.3650372757041125 FROM vt0 WHERE ((((x'4746')) BETWEEN (((('') IS FALSE))) AND ((((x'')*(NULL)))))); -- 0ms;
SELECT ALL ((((((vt0.c0))>=((vt0.c2))), vt0.c1, ((vt0.c1)LIKE(vt0.c1))))>=((((vt0.c0) NOT NULL), ((1451322634)%(NULL)), (((vt0.c2, '*,C8q', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c0, x'0ef8')))))) FROM vt0 WHERE (CAST('1954203690' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT FIRST_VALUE((NOT (0X3c969c04))) OVER (), (~ (json_array(vt0.c1, x''))), SUM(CAST(vt0.c2 AS NUMERIC)) OVER () FROM vt0 WHERE (((((1654322561) IS FALSE)) IS FALSE));SELECT DISTINCT MIN(vt0.c0) FROM vt0; -- 0ms;
SELECT ALL ((CAST(vt0.c2 AS NUMERIC))+(vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2, vt0.c0, vt0.c1)) BETWEEN ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0)), ((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)), ((0.9551839620633005)>>(vt0.c0)))) AND ((vt0.c0, CAST(vt0.c1 AS NUMERIC), LIKELIHOOD(vt0.c2, 0.4123204648676342)))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2, CASE WHEN (((vt0.c1))<=((vt0.c2))) THEN ((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2)) WHEN CAST(vt0.c2 AS INTEGER) THEN (((vt0.c1))!=((vt0.c2))) WHEN ((vt0.c1) IS FALSE) THEN ((vt0.c2)AND(vt0.c2)) ELSE CASE vt0.c1  WHEN 0.3943311470651766 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END END, '0.4005168257391367' COLLATE RTRIM FROM vt0 WHERE ((((((('372556155')AND('')))AND('ok'))) NOT BETWEEN (((0.40830648841402883)%(')L隈F}+3'))) AND ((- (x''))))) LIMIT -1434683543 OFFSET -1480831352; -- 0ms;
SELECT DISTINCT TOTAL(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c0))) OVER ( ROWS  CURRENT ROW), (((((vt0.c1))==((vt0.c1))))IS(((1.451322634E9)/(vt0.c2)))), ((((TOTAL(0.1920016169230766))OR(((vt0.c0)IS(vt0.c2)))))OR(LAST_INSERT_ROWID())) FROM vt0 WHERE (((493129475) ISNULL)); -- 1ms;
SELECT (+ (TRIM(vt0.c0, vt0.c1))) FROM vt0 WHERE (((SQLITE_COMPILEOPTION_GET(NULL))<(((x'')%(NULL))))); -- 0ms;
SELECT ALL (((vt0.c2)) BETWEEN (((vt0.c2 IN ()))) AND ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2))))) FROM vt0; -- 0ms;
SELECT ALL ((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c2)) COLLATE NOCASE FROM vt0 WHERE ((((('944308750')) NOT BETWEEN ((0.48057554459611085)) AND ((-276670674))) IN ((((NULL)) NOT BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD((vt0.c2 IN ()), 0.4912837685639587), (((('')&(vt0.c0)))GLOB(JULIANDAY(vt0.c1, vt0.c0, vt0.c2))), (((((- (vt0.c2)))AND(vt0.c2)))OR(((vt0.c1)&(vt0.c1)))) FROM vt0 GROUP BY (CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN '-1888603457' ELSE vt0.c1 END IN ()), json_insert((- (vt0.c0)), 0.13754281963315584, (vt0.c2 IN ())), ((((vt0.c2) NOT BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((((vt0.c2)AND(vt0.c1)))AND(vt0.c1))) AND (((vt0.c2) BETWEEN ('1879566930') AND (x'3985')))) HAVING (((((vt0.c0)OR(vt0.c1)))OR(vt0.c0)) IN ((((vt0.c1))>=((vt0.c0))), ((vt0.c1)>>(vt0.c2))));SELECT DISTINCT ((((((((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))AND((~ (vt0.c0)))))AND(CASE WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)))OR(vt0.c0)))OR(MAX(vt0.c0))), (((CAST(vt0.c0 AS TEXT)))<=((((vt0.c2)*(vt0.c0))))), ((vt0.c1 COLLATE RTRIM) BETWEEN (((0.3755016403844811)AND(vt0.c0))) AND ('1155369138')) FROM vt0 WHERE (((CAST(0.4844604248661688 AS REAL))/(((((0.35498868684569207)AND('1879566930')))AND(0xffffffffa325782b))))) GROUP BY (((((vt0.c1))<=((vt0.c0)))) NOT NULL); -- 0ms;
SELECT DISTINCT x'8aaf33c4' FROM vt0 WHERE (CAST((NOT ('DKZh,DX7')) AS TEXT)); -- 0ms;
SELECT DISTINCT HEX(DISTINCT ((vt0.c2)%(vt0.c1))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN (vt0.c1 IN (vt0.c0, vt0.c0)) THEN COUNT(*) ELSE ((vt0.c0)>=(-655547780)) END FROM vt0 GROUP BY vt0.c0, ((((vt0.c1)IS NOT(vt0.c0))) BETWEEN (((vt0.c0)>>(vt0.c2))) AND (((vt0.c1)IS NOT(vt0.c1)))), '0.8234096107730116', ((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c2)))OR(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR((vt0.c0 IN (x'')))), ((((CAST(vt0.c0 AS TEXT))AND((((vt0.c0))<((vt0.c1))))))AND('샆샆')) HAVING (((vt0.c0) IS TRUE) IN ()); -- 0ms;
SELECT DISTINCT SUM(vt0.c1) OVER (), (((~ (vt0.c2))) NOTNULL), CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (0.17176844451776518)) AS BLOB) FROM vt0 WHERE (CAST(x'' COLLATE BINARY AS NUMERIC)); -- 1ms;
SELECT DISTINCT ((((((((vt0.c1)AND(NULL)))OR(vt0.c0)))AND((vt0.c2 IN ()))))AND(((vt0.c0)LIKE(vt0.c0)))) FROM vt0 WHERE (GLOB((((('477843288')OR(0.33821720454701387)))AND(0xffffffff8ecd2e7d)), ((0.4449046413832993)<(x'')))); -- 0ms;
SELECT ALL TOTAL(vt0.c1) COLLATE NOCASE COLLATE RTRIM FROM vt0 WHERE (('958607640' IN ())) GROUP BY ((0.17176844451776518) IS FALSE); -- 0ms;
SELECT DISTINCT ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))*(TRIM(DISTINCT vt0.c1, vt0.c1))), ((((((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c0)))AND(vt0.c2)))OR(((vt0.c1) IS TRUE))), '', CAST(vt0.c2 COLLATE RTRIM AS INTEGER), CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 END AS BLOB), ((vt0.c0)OR(vt0.c1)) COLLATE BINARY, CAST(GROUP_CONCAT(0.3616297000188998) AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(TRIM(DISTINCT vt0.c2, vt0.c2) AS BLOB) FROM vt0 WHERE (((1.451322634E9 IN ('-2081430009', x'')) IN ())); -- 0ms;
SELECT CAST((vt0.c2 IN ()) AS INTEGER) FROM vt0 WHERE (0.3994152036666354 COLLATE BINARY) LIMIT -631271572; -- 0ms;
SELECT DISTINCT ((0.790575854125417) NOT BETWEEN (((vt0.c2)-(vt0.c0))) AND (vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c2)&(vt0.c1)) AS INTEGER), json_patch(vt0.c2, vt0.c2) COLLATE BINARY, (((((vt0.c0))>((vt0.c2))))>(((vt0.c0)IS(vt0.c0)))) FROM vt0; -- 0ms;
SELECT GROUP_CONCAT(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 END), ((CAST(vt0.c0 AS NUMERIC)) BETWEEN (((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1))) AND ((- (x'7c5a')))), ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c2 END) NOT BETWEEN (vt0.c0) AND (((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c0)))), (TYPEOF(vt0.c0) IN (SUM(vt0.c2), vt0.c2)), ((CAST(vt0.c1 AS REAL)) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((((('944308750')OR(vt0.c1)))OR(vt0.c1))) NOT BETWEEN (json_valid(vt0.c0)) AND (((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) FROM vt0 WHERE ((+ (NULL COLLATE RTRIM))) GROUP BY 0.16086688828852602 HAVING ((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2)) COLLATE BINARY; -- 1ms;
SELECT DISTINCT ((vt0.c0)&(vt0.c2)) COLLATE BINARY FROM vt0 WHERE (CAST(((1.071700799E9) NOT NULL) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((((((((((vt0.c2)AND(vt0.c0)))OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))AND((vt0.c2 IN ()))))OR(vt0.c1 COLLATE NOCASE)) FROM vt0 ORDER BY (NOT (CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 END)), (((vt0.c0)) NOT BETWEEN (((((1.966904968E9))<=((vt0.c2))))) AND ((CASE WHEN NULL THEN vt0.c2 END))), (((((vt0.c0)) BETWEEN ((0.14155398866958546)) AND (('')))) BETWEEN ((((vt0.c2, vt0.c0, vt0.c2)) NOT BETWEEN ((vt0.c0, 0.954830080651062, 'I[>_]較i')) AND (('2084679521', '&r', vt0.c1)))) AND (vt0.c2 COLLATE RTRIM)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c2)OR(vt0.c1)) THEN vt0.c2 COLLATE RTRIM END FROM vt0 ORDER BY (((vt0.c2 IN ()))>(vt0.c0 COLLATE RTRIM)) ASC  NULLS FIRST, x'' ASC, (((- (vt0.c2)))|(((('')) BETWEEN ((vt0.c0)) AND ((vt0.c1))))); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt0 LIMIT 126027562 OFFSET -666062654; -- 0ms;
SELECT ALL (NOT (CASE WHEN vt0.c2 THEN vt0.c1 END)) FROM vt0 ORDER BY CAST(((vt0.c0)>(vt0.c0)) AS TEXT)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((vt0.c2, vt0.c0, vt0.c0)) NOT BETWEEN ((((vt0.c1)IS(vt0.c1)), ((vt0.c1) IS FALSE), ((vt0.c1) BETWEEN (vt0.c0) AND (NULL)))) AND ((((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c0)))OR(vt0.c1)))OR('1688077891')), TOTAL(vt0.c2), CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 END))) FROM vt0; -- 0ms;
SELECT DISTINCT (('')/(CASE WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 END)) FROM vt0; -- 0ms;
SELECT DISTINCT (((('-1791727228')AND(vt0.c2)))AND(vt0.c0)) COLLATE BINARY FROM vt0 NOT INDEXED WHERE ((((586562518) BETWEEN (0.6600201094389793) AND (0.3266828816933932)) IN (((NULL)||(0Xffffffffbfee4d87))))); -- 0ms;
SELECT DISTINCT '-1652747566' FROM vt0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT FIRST_VALUE((((vt0.c1)) BETWEEN ((NULLIF(vt0.c1, vt0.c0))) AND ((LOWER(DISTINCT vt0.c1))))) OVER ( ORDER BY ((((((x'ef101f5b5091') IS TRUE))OR(TRIM(vt0.c2))))AND((vt0.c1 IN ())))  NULLS FIRST, ((((((vt0.c2)<<(vt0.c0)))AND((((NULL, vt0.c1, vt0.c2, vt0.c2, vt0.c1))<>((vt0.c1, vt0.c1, vt0.c2, vt0.c0, vt0.c1))))))OR(LIKELY(vt0.c1))) DESC), ((((vt0.c1) IS TRUE)) IS FALSE), NULL FROM vt0 WHERE (((load_extension('/F2翟DG', -782958885))<<(MIN(x'', 0X20f83a63)))) ORDER BY vt0.c2;SELECT CASE WHEN (((vt0.c0, vt0.c0, 0.640396139553277))<>((vt0.c1, vt0.c0, vt0.c2))) THEN (((('5z')OR(vt0.c0)))OR(vt0.c2)) ELSE ((vt0.c0)&(vt0.c2)) END FROM vt0 EXCEPT SELECT vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT x'', CASE WHEN INSTR(vt0.c0, vt0.c1) THEN (vt0.c0 IN (vt0.c2)) END, ((vt0.c2 COLLATE RTRIM) NOT BETWEEN (TOTAL(vt0.c2)) AND (((vt0.c2)<<(vt0.c2)))), ((((vt0.c2))>=((vt0.c1))) IN ('Q꽤')), ((vt0.c0) BETWEEN (((vt0.c2) NOT NULL)) AND (((vt0.c0)<>(vt0.c0)))) FROM vt0 WHERE (CAST(((((x'')OR('1917052720')))AND('')) AS REAL)); -- 0ms;
SELECT COUNT(vt0.c2 COLLATE BINARY COLLATE BINARY) FILTER(WHERE ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c0))) NOT BETWEEN ((((vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((vt0.c2, vt0.c2, vt0.c1)) AND (('*}	%/VP', vt0.c0, vt0.c1)))) AND ((vt0.c2 IN ())))) OVER () FROM vt0 WHERE ((('847050647' COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN 0.4623382541912576 THEN vt0.c1 END FROM vt0; -- 0ms;
SELECT ALL ((CHAR(vt0.c1)) NOT NULL) FROM vt0; -- 0ms;
SELECT ALL vt0.c1 FROM vt0 WHERE (((0.08092551491464861) IS FALSE)) GROUP BY NULL, ((((vt0.c2)OR(LOWER(vt0.c1))))AND(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END)), ((((+ (vt0.c1))))!=((vt0.c0 COLLATE BINARY))), (((((vt0.c1))=((vt0.c0))))>((('')AND(vt0.c1)))), (+ (vt0.c1)) COLLATE BINARY HAVING SUM(''); -- 0ms;
SELECT DISTINCT TRIM(TYPEOF('K_%oPvph'), ((vt0.c1)IS NOT(vt0.c1))) FROM vt0 WHERE (CASE WHEN '0js⺸' COLLATE BINARY THEN CAST(x'be7f' AS NUMERIC) ELSE 0.08906717570286893 COLLATE RTRIM END); -- 0ms;
SELECT CASE (('') BETWEEN (vt0.c2) AND (vt0.c1))  WHEN (~ (vt0.c2)) THEN LIKELY(vt0.c0) END FROM vt0; -- 0ms;
SELECT DISTINCT (((x'')-(x'')) IN ('')), vt0.c2, CAST(vt0.c2 AS REAL) FROM vt0 WHERE ((((3.72556155E8)) NOT BETWEEN (((NOT (0x3c969c04)))) AND ((((NULL) ISNULL))))); -- 0ms;
SELECT (~ (vt0.c0)), (((((vt0.c1)>(vt0.c0))))>=((CASE WHEN vt0.c1 THEN vt0.c2 END))), (('0.33821720454701387' COLLATE RTRIM) NOT BETWEEN (((((-1166708254)OR(vt0.c2)))AND(vt0.c0))) AND (NULL)) FROM vt0 WHERE (NULLIF(DISTINCT ((0.03412387038991305) NOT BETWEEN ('pUvJ놓Hy%H') AND (x'26d44a11')), (((('969052030')OR('-2066809312')))AND(-991926950)))); -- 0ms;
SELECT DISTINCT (((vt0.c2)) BETWEEN ((vt0.c2)) AND ((((vt0.c0) IS TRUE)))) FROM vt0; -- 0ms;
SELECT ALL TOTAL(MIN(((vt0.c2) IS TRUE))) FROM vt0;SELECT DISTINCT (vt0.c1 IN ()) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((((((((CAST(vt0.c1 AS TEXT))AND(((vt0.c1)<=(vt0.c2)))))OR(NULL)))OR(vt0.c0)))OR((((vt0.c0, vt0.c0, vt0.c0, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c2, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c0, vt0.c0, vt0.c2, vt0.c2))))) FROM vt0 WHERE (ABS(DISTINCT (((x'b19d', 0.9826623262869644, 0.7295903710848783))<(('-1941216461', '_チ341mf~k', NULL))))) LIMIT -385915243 OFFSET -1239645115; -- 0ms;
SELECT DISTINCT MAX((- (vt0.c1))) FROM vt0; -- 1ms;
SELECT DISTINCT ((((((((((vt0.c0)OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c1)))|(((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))OR(vt0.c2)))) FROM vt0 WHERE (((((NULL)OR((((((((('#qA9N3FBB')OR('0.640396139553277')))OR(x'9d07')))AND('-1308672223')))OR('1084569788')))))AND(NULL))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER () FROM vt0 LIMIT 1126739812; -- 0ms;
SELECT (((((0xffffffffccf49083))>((vt0.c1))))>(MAX(vt0.c2))) FROM vt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c2)))AND(((((vt0.c0)AND(vt0.c1)))OR(vt0.c1)))))OR(((vt0.c1) ISNULL)))) OVER () FROM vt0 WHERE ((- (((('M鄫/\n', 0X718d27e1, x'', NULL, 0.28795285768526024))>((0.3410245048750833, 0.29840325553617897, '1964378824', ',y ', 0.7778375841135732)))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1 FROM vt0 WHERE ((('573018011' IN (NULL, '>')) IN (CAST('1311237826' AS BLOB), ((((((((((((2110173061)OR(0.7114707747774893)))OR('')))OR('')))OR('')))AND(NULL)))AND('0.48057554459611085'))))) ORDER BY CAST(NULL AS BLOB)  NULLS LAST, (((vt0.c0 IN (vt0.c0))) NOTNULL) DESC  NULLS LAST, ((STRFTIME(vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN (((vt0.c0) ISNULL)) AND (vt0.c1)); -- 0ms;
SELECT ((((((((((vt0.c0)+(vt0.c0)))OR(((vt0.c1)<<(vt0.c1)))))AND(vt0.c0)))OR(MAX(vt0.c1))))AND(((((vt0.c0)AND(vt0.c2)))AND(vt0.c2)))) FROM vt0 WHERE (CAST(((2.09420809E9) BETWEEN (-1196162010) AND ('-1480831352')) AS NUMERIC)); -- 0ms;
SELECT (((((vt0.c1))<=((NULL))))-((((vt0.c2))>((vt0.c2))))) FROM vt0 WHERE ((('\u')<<(x'')) COLLATE BINARY) ORDER BY (- (((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)))) DESC, (((((vt0.c0)IS(vt0.c1))))<((((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c2)))))  NULLS LAST, (vt0.c1 IN ()); -- 0ms;
SELECT DISTINCT SUM((NOT (vt0.c2))) COLLATE BINARY FROM vt0 LIMIT -1465116858; -- 0ms;
SELECT ALL CUME_DIST() OVER (), ((((vt0.c1)!=(vt0.c1))) BETWEEN (CASE WHEN vt0.c0 THEN vt0.c1 END) AND (((((vt0.c1)OR(vt0.c0)))OR(x'')))), CASE WHEN (- (vt0.c1)) THEN ((vt0.c0) NOT BETWEEN (vt0.c0) AND (vt0.c0)) WHEN (((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c1))) THEN vt0.c2 COLLATE RTRIM WHEN ((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)) THEN vt0.c1 ELSE ((vt0.c2) ISNULL) END FROM vt0 WHERE (CASE WHEN (((((((('zciK10ﻛ')OR(NULL)))OR(1917052720)))AND(NULL)))AND('372556155')) THEN (0x33ad3aa3 IN (x'')) WHEN 0.275113916527307 THEN ('' IN ('', 'rq{)q~')) WHEN (- ('-703501421')) THEN (('')LIKE(431099645)) ELSE CASE 0.15818821371099479  WHEN 'bT' THEN x'' ELSE x'' END END); -- 0ms;
SELECT DISTINCT CASE WHEN (((vt0.c0, '-1164296748', 0.26143333350131004))=((vt0.c1, vt0.c2, vt0.c2))) THEN AVG(0.9051318538566038) ELSE x'80fd' END, MAX(LIKELY(vt0.c1)), ((vt0.c0)!=(TRIM(vt0.c1, vt0.c2))) FROM vt0 WHERE ((- ((NULL IN ())))); -- 0ms;
SELECT json_object(((vt0.c1)=(vt0.c1)), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1))), CASE CAST(vt0.c2 AS NUMERIC)  WHEN 'XPu뭄' THEN vt0.c0 END, ((MIN(vt0.c0)) IS TRUE) FROM vt0 WHERE (CASE WHEN (~ (NULL)) THEN (~ (NULL)) END);SELECT (((((((vt0.c0))<((vt0.c2))))AND((vt0.c2 IN ()))))OR(TYPEOF(vt0.c1))) FROM vt0 ORDER BY ((((((vt0.c0)AND(vt0.c0)))AND(vt0.c2))) NOT BETWEEN (((vt0.c0)==(vt0.c2))) AND (vt0.c1 COLLATE BINARY)); -- 0ms;
SELECT ALL AVG((((vt0.c1))<((vt0.c0)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2 IN ()))<(((vt0.c0)*(0.3527364578445884)))) FROM vt0 WHERE (CASE (('M/')>=(0.9330077358414975))  WHEN (~ (x'')) THEN '-2062592353' COLLATE BINARY END); -- 0ms;
SELECT DISTINCT CAST(vt0.c0 AS BLOB) FROM vt0 LIMIT -1715342214 OFFSET -962528320; -- 0ms;
SELECT GROUP_CONCAT((vt0.c2 IN ())) OVER () FROM vt0 WHERE (CASE WHEN (NULL IN ()) THEN '-471711039' COLLATE RTRIM ELSE (('7!qoFq9days(')>=(x'')) END) LIMIT 1770456611 OFFSET 126027562; -- 0ms;
SELECT DISTINCT LEAD((((TRIM(vt0.c2)))=((((((((((((((vt0.c1)OR(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))AND(vt0.c1)))OR(x'')))AND(vt0.c0))))), '', CAST(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2)) AS NUMERIC)) OVER ( ORDER BY ((((vt0.c0)GLOB(vt0.c0))) BETWEEN (CAST(vt0.c2 AS TEXT)) AND (CAST(vt0.c0 AS INTEGER)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((NULL IN (vt0.c0))) NOTNULL) FROM vt0 WHERE ('0.40830648841402883') GROUP BY (((vt0.c0, vt0.c2, vt0.c0)) NOT BETWEEN ((CAST(vt0.c1 AS INTEGER), vt0.c0, CASE WHEN vt0.c1 THEN vt0.c1 END)) AND ((CAST(vt0.c1 AS INTEGER), CAST(vt0.c0 AS BLOB), (((('1688077891')OR(vt0.c1)))OR(0.4830818722073903))))) HAVING CASE CAST(vt0.c0 AS BLOB)  WHEN SUM(vt0.c0) THEN (+ (vt0.c1)) WHEN ((vt0.c2)||(vt0.c1)) THEN (~ (vt0.c0)) WHEN ((vt0.c2) NOTNULL) THEN ((vt0.c1) IS FALSE) END; -- 0ms;
SELECT DISTINCT vt0.c0 COLLATE NOCASE, ((((vt0.c0 COLLATE RTRIM)AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))))OR((vt0.c2 IN ()))), vt0.c2 FROM vt0 ORDER BY ((((((((((NULL)AND(vt0.c2)))AND(vt0.c2)))OR(vt0.c1)))AND(vt0.c0)))IS NOT(((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(vt0.c2 AS REAL) FROM vt0 WHERE (CASE WHEN CASE ''  WHEN '1126739812' THEN 'k_%opvph' END THEN CAST(0.007224461681747396 AS INTEGER) END) UNION ALL SELECT DISTINCT CAST(CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT CASE ((((x'5ce99f01')OR(vt0.c2)))OR(vt0.c1))  WHEN vt0.c1 COLLATE RTRIM THEN ((x'51cf')>(vt0.c1)) END FROM vt0 WHERE (((UPPER(0.18640376919044022)) ISNULL)); -- 0ms;
SELECT TRIM(((vt0.c1) NOT BETWEEN (x'') AND (vt0.c2))) FROM vt0 WHERE (((CAST('2084679521' AS TEXT)) ISNULL)); -- 0ms;
SELECT (((vt0.c1, vt0.c1, vt0.c2)) NOT BETWEEN ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE NULL END, ((((((((vt0.c2)OR(vt0.c2)))AND(vt0.c1)))OR(vt0.c2)))OR(0.05460405003088009)), CAST(vt0.c1 AS TEXT))) AND ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '\r寖' ELSE vt0.c2 END, CASE '-1877070152'  WHEN vt0.c0 THEN vt0.c0 WHEN 0.501718730281759 THEN vt0.c2 WHEN vt0.c1 THEN 0.21866465389746048 ELSE vt0.c0 END, ((vt0.c1)|(0.870406995210827))))), CAST((- (vt0.c2)) AS INTEGER), ((x'' COLLATE RTRIM)IS NOT((+ (vt0.c2)))) FROM vt0 WHERE (0X22f63bd6) GROUP BY CAST(json_type(vt0.c1) AS REAL), ((CAST(vt0.c0 AS REAL)) NOTNULL), (('' COLLATE RTRIM)<=((~ (vt0.c0)))); -- 1ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT ALL COUNT(((vt0.c0) NOTNULL)) FROM vt0 WHERE ((('-1e500')<(NULL)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT (~ ((vt0.c2 IN (vt0.c2, vt0.c2)))) FROM vt0 WHERE (CAST((((x'', '-996952764', x'fa28')) NOT BETWEEN (('457548858', x'', x'')) AND ((x'', '1383236668', x''))) AS NUMERIC)) ORDER BY ((((((((LAST_INSERT_ROWID())AND(((vt0.c1)%(vt0.c2)))))AND(((vt0.c0)>>(vt0.c1)))))OR((vt0.c2 IN (vt0.c1)))))OR(((vt0.c2) NOTNULL))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(((0.7947360265578104) NOT BETWEEN (vt0.c0) AND (vt0.c1))) OVER () FROM vt0 WHERE ((((0.26639439801571674 COLLATE BINARY, LIKELY(DISTINCT 0.4158991630607639), (((9.5860764E8, NULL, 0x7cd3145a))>((x'5de9', '-1695678711', 'ugA1>')))))<=((x'084f464c' COLLATE NOCASE, '', LOWER(DISTINCT 0.6290183608227482))))); -- 0ms;
SELECT DISTINCT (NOT (LIKELY(vt0.c1))) FROM vt0 WHERE (0x1a0bb723); -- 0ms;
SELECT DISTINCT (+ (((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c1)))AND('1147692160')))OR(vt0.c1)))), RANK() OVER (), LIKE(NULL COLLATE BINARY, vt0.c0 COLLATE BINARY, '*') FROM vt0 WHERE ((('-716355235' COLLATE BINARY)-((x'' IN ())))) ORDER BY (((((((((((((((vt0.c0, vt0.c2, vt0.c0))!=((vt0.c2, vt0.c2, vt0.c1))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))OR((~ (vt0.c0)))))OR(((((((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))AND(-1.65320665E9)))AND(vt0.c1)))))AND(((vt0.c0) IS FALSE))))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))OR(((vt0.c0)IS NOT(vt0.c2)))); -- 0ms;
SELECT GROUP_CONCAT((('866990755') NOTNULL) COLLATE BINARY) OVER () FROM vt0 WHERE (((((((0.9342362707479813)AND('')))AND(0.35871416845265536))) IS FALSE)); -- 0ms;
SELECT ALL 0.11126024961351211 FROM vt0 WHERE (((CAST(0.3755016403844811 AS NUMERIC))<=(CASE WHEN '*w4+Ei' THEN '1490667056' END))); -- 1ms;
SELECT ((((vt0.c1)OR(vt0.c0)))|(645260226)) FROM vt0; -- 0ms;
SELECT DISTINCT (NOT (254680800)) COLLATE BINARY, SUM((((vt0.c2)) BETWEEN ((0X3a626597)) AND ((vt0.c0)))), ((((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))&(LENGTH(vt0.c0))) FROM vt0 ORDER BY (((vt0.c1)<(vt0.c2)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((((vt0.c0)AND(vt0.c2)))OR(vt0.c2)) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT ((COALESCE(vt0.c2, vt0.c2, vt0.c0, vt0.c0))IS(((vt0.c1) ISNULL))) FROM vt0 WHERE (((((((((((((0xffffffffec7c153f)OR(1.155369138E9)))AND(0.2464500153267376)))AND('TdD')))AND(-1860880078)))AND(CASE WHEN 2094208090 THEN x'' WHEN 0.18874045170738585 THEN 0Xffffffff8c4b6333 WHEN NULL THEN '2126738194' END)))AND(((0.06869283098924617)IS NOT(x''))))); -- 0ms;
SELECT DISTINCT -6.66062654E8 FROM vt0; -- 0ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN ((vt0.c0 IN ())) AND ((vt0.c1 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT COUNT(vt0.c0) OVER () FROM vt0 WHERE ((- (CASE '0.9051318538566038'  WHEN '1954203690' THEN NULL WHEN NULL THEN 1213257665 WHEN '495568732' THEN x'' ELSE '909078519' END))) LIMIT 412333747; -- 0ms;
SELECT (- (AVG(vt0.c2))), ((((AVG(vt0.c2))AND(((vt0.c2) IS FALSE))))OR(((vt0.c1)OR(vt0.c2)))), (((vt0.c0, vt0.c0, vt0.c1, vt0.c1, '7!qofq9days(')) NOT BETWEEN ((((vt0.c0)AND(vt0.c2)), ((vt0.c2)!=(vt0.c2)), MIN(vt0.c0), vt0.c2, CASE WHEN vt0.c2 THEN vt0.c2 END)) AND ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)), ((vt0.c2)IS NOT(vt0.c1)), ((vt0.c1)-(vt0.c2)), CAST(vt0.c1 AS TEXT), LIKELY(DISTINCT vt0.c2)))) FROM vt0 WHERE ((((((0x2808d0ff)) BETWEEN ((0Xffffffffd8655b08)) AND ((-637842003)))) NOT BETWEEN (NULL) AND (NULLIF(NULL, NULL)))); -- 0ms;
SELECT ALL ((vt0.c2) IS TRUE) COLLATE RTRIM FROM vt0 WHERE (0x1d648f03) ORDER BY ((LIKE(vt0.c1, vt0.c0)) NOT BETWEEN (((vt0.c2) IS FALSE)) AND (TRIM(NULL))) DESC  NULLS FIRST; -- 1ms;
SELECT ALL ((((((vt0.c2) BETWEEN (vt0.c2) AND (vt0.c1)))OR(CAST(vt0.c2 AS TEXT))))OR(vt0.c1)) FROM vt0 WHERE (TIME(x'', x'a7c3' COLLATE RTRIM, ((NULL)|(x'')))); -- 0ms;
SELECT ALL 1639660864 FROM vt0 WHERE (((((((NULL) BETWEEN (0X74180caa) AND (0xffffffffa40af61f)))AND(((((x'7b8f')OR('')))AND(-276670674)))))AND(((((0.25618449289166967)OR(1244316597)))AND('-1653206650'))))) LIMIT -1515501176 OFFSET -556621153; -- 0ms;
SELECT DISTINCT ((((((('')AND(vt0.c0)))OR(vt0.c1))))=((((vt0.c2)/(vt0.c2))))) FROM vt0 WHERE (((((('yId&F2n' IN ()))AND((('')OR('*pj*')))))AND(CASE WHEN 0.26076828764512916 THEN NULL ELSE '\G8s' END))); -- 0ms;
SELECT DISTINCT ((x'')*(vt0.c1)) COLLATE RTRIM, ((((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c1)))+(((((vt0.c0)OR(vt0.c0)))AND(vt0.c2)))), (((vt0.c2)+(vt0.c2)) IN ()) FROM vt0; -- 1ms;
SELECT DISTINCT ((vt0.c2) NOTNULL) FROM vt0 LIMIT 771671249; -- 0ms;
SELECT DISTINCT vt0.c1, (~ ((vt0.c0 IN (vt0.c1)))), x'' FROM vt0; -- 0ms;
SELECT DISTINCT AVG((((1916944148))<=((vt0.c1)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT (((vt0.c1)) NOT BETWEEN ((CAST(vt0.c0 AS TEXT))) AND ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c2))))) FROM vt0 ORDER BY (((vt0.c2))>=((vt0.c2))) COLLATE RTRIM ASC; -- 0ms;
SELECT DISTINCT ((TOTAL(NULL)) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (- (CAST(vt0.c2 AS BLOB))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2)GLOB(x'')) IN (CASE vt0.c1  WHEN -456907111 THEN vt0.c0 WHEN vt0.c1 THEN -9223372036854775808 WHEN vt0.c1 THEN NULL ELSE vt0.c2 END)) FROM vt0 WHERE (x''); -- 0ms;
SELECT ALL (vt0.c1 COLLATE BINARY IN ()) FROM vt0; -- 0ms;
SELECT COUNT(*) OVER ( ROWS (('4w(n''~w')<>(0.378302988592806)) PRECEDING) FROM vt0 WHERE ((~ ((0x4ad87290 IN (NULL))))); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE NOCASE) NOT BETWEEN (((vt0.c0)>=('1149391530'))) AND ((('235697187') NOT BETWEEN (vt0.c1) AND (vt0.c2)))) FROM vt0 WHERE (((((NULL) BETWEEN (0.5697443325340311) AND (NULL)))/((((NULL)) NOT BETWEEN (('-556523139')) AND ((NULL)))))); -- 0ms;
SELECT ALL (((vt0.c2) NOT NULL) IN ()) FROM vt0 WHERE (((((('64_A44I'))<((0.7437455936299384))))OR(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((0.7064719862796772)&(x'')) FROM vt0 WHERE ((('2068238997') NOT BETWEEN (0.07926418203722474) AND ('-46831369')) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (((((vt0.c1, vt0.c1, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0)))) NOT BETWEEN (vt0.c2) AND (((vt0.c0)==(vt0.c2)))) FROM vt0 GROUP BY UPPER(DISTINCT CASE 825923110  WHEN vt0.c2 THEN vt0.c2 END); -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0 IN (vt0.c2)))!=((vt0.c2 IN ()))), (- (((vt0.c0)<=(vt0.c1)))), (((vt0.c1)*(vt0.c0)) IN ()) FROM vt0 WHERE (((((((((LIKE(0.3408899530322407, '', '懶'))OR(((x'') ISNULL))))OR(rtreenode(NULL, '0.3105961972940955'))))AND((((('')AND('1231310594')))OR(NULL)))))OR(((0.33821720454701387)=(NULL))))) UNION ALL SELECT ALL (~ (vt0.c0 COLLATE RTRIM)), (('1799517760') NOT BETWEEN (vt0.c2) AND (vt0.c0)) COLLATE RTRIM, LENGTH(((vt0.c1)IS(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS NUMERIC)) NOT BETWEEN (((vt0.c1)*(vt0.c0))) AND (((((((((vt0.c2)AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c1)))AND(vt0.c1)))) FROM vt0 WHERE (CAST((NULL IN ('735392305', '|?WB')) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST('866990755' AS INTEGER)) NOTNULL), ((vt0.c1 COLLATE NOCASE)=(((vt0.c1)!=(vt0.c2)))), HEX((((vt0.c1, vt0.c1, vt0.c2))>=((vt0.c0, vt0.c1, vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c2) BETWEEN (0.04183886352588584) AND (x'')) IN ()) FROM vt0; -- 0ms;
SELECT ((CAST(vt0.c1 AS NUMERIC)) ISNULL), ((+ (vt0.c0)) IN ()), x'3fee1d18' FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))) COLLATE RTRIM FROM vt0 WHERE (((((1.776695917E9)/('-1945798347')))>(CAST(-56757204 AS BLOB)))); -- 0ms;
SELECT DISTINCT (((vt0.c1) NOTNULL) IN ()) FROM vt0; -- 0ms;
SELECT MAX((((vt0.c1, vt0.c1, vt0.c1))=((vt0.c2, vt0.c2, vt0.c0)))) FROM vt0 GROUP BY CASE vt0.c0 COLLATE BINARY  WHEN 753164965 THEN vt0.c2 END, CAST(vt0.c2 COLLATE RTRIM AS INTEGER), ((((((vt0.c0)AND(vt0.c1)))AND(vt0.c2))) NOT BETWEEN (((vt0.c0) NOT BETWEEN (vt0.c2) AND (NULL))) AND (((vt0.c0)<=(vt0.c0)))); -- 0ms;
SELECT (vt0.c2 IN (vt0.c2, vt0.c2)) COLLATE NOCASE, ((AVG(vt0.c1))<<(COUNT(x''))), ((((((((((((((((vt0.c1)OR(vt0.c2)))AND(vt0.c2)))OR(x'df2a')))AND(vt0.c0)))OR(CASE 0X3a626597  WHEN vt0.c1 THEN vt0.c1 END)))AND(((((vt0.c0)AND(0.5304300663492081)))OR(vt0.c2)))))OR(CAST(vt0.c0 AS TEXT))))AND(TYPEOF(DISTINCT vt0.c0))) FROM vt0 ORDER BY (CAST(x'' AS NUMERIC) IN ()); -- 0ms;
SELECT ALL (((((((vt0.c1))>=((NULL))))AND(((((x'')OR(vt0.c0)))OR(vt0.c2)))))AND((((vt0.c2)) NOT BETWEEN (('0.275113916527307')) AND ((vt0.c1))))) FROM vt0 WHERE (CAST(x'' AS INTEGER)); -- 0ms;
SELECT ALL vt0.c2 FROM vt0; -- 0ms;
SELECT ALL NULL FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c0)||(NULL)))<<(vt0.c0)) FROM vt0; -- 0ms;
SELECT (TRIM(DISTINCT vt0.c0) IN ()) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 ORDER BY ((((vt0.c2 IN (0.13000445912266345))))<((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END))) DESC, (((((vt0.c2, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c2)) AND ((vt0.c0, -1434683543, vt0.c2)))) IS TRUE) ASC; -- 0ms;
SELECT ((TOTAL(vt0.c0))IS NOT(UNLIKELY(vt0.c1))) FROM vt0 WHERE (((((((NULL) IS FALSE))AND(CAST(x'12ed43c6' AS INTEGER))))AND((('4?') BETWEEN (0.020585907328400488) AND (x''))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN vt0.c1 THEN vt0.c0 END) NOTNULL) FROM vt0 WHERE ((((NULL IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT (NOT ('' COLLATE BINARY)), NULL, MAX(((vt0.c0) IS FALSE)) FROM vt0; -- 1ms;
SELECT DISTINCT CASE WHEN (~ (vt0.c1)) THEN (NOT (vt0.c1)) WHEN (((vt0.c0)) BETWEEN ((vt0.c2)) AND ((0.06869283098924617))) THEN CASE WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END WHEN x'' THEN vt0.c1 ELSE ((vt0.c2) IS FALSE) END, (((((vt0.c2)AND(vt0.c1)))AND(vt0.c0)) IN ()), (((CASE WHEN 'W2O)' THEN vt0.c0 ELSE '1900712986' END))==((((vt0.c0)%(vt0.c1))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((0.5455447637625429)&(vt0.c1))) BETWEEN (NULL) AND (GROUP_CONCAT(vt0.c1))), ((((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c0)))AND(vt0.c2)))OR(vt0.c2))) NOTNULL), (((vt0.c2, vt0.c2, vt0.c2)) BETWEEN (((vt0.c0 IN (vt0.c1, vt0.c1)), CAST(vt0.c0 AS NUMERIC), ((vt0.c2)|(vt0.c2)))) AND ((((vt0.c1)<=(vt0.c0)), (~ (vt0.c2)), vt0.c1 COLLATE NOCASE))) FROM vt0 WHERE (((((NULL)<('1799517760'))) IS TRUE)); -- 0ms;
SELECT DISTINCT AVG(((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c2))) OVER () FROM vt0 ORDER BY (((vt0.c0)) BETWEEN ((vt0.c2 COLLATE RTRIM)) AND ((CAST(vt0.c1 AS INTEGER)))), vt0.c0 DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((vt0.c1)LIKE(vt0.c0)) AS NUMERIC), CUME_DIST() OVER (), vt0.c1 COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM FROM vt0 WHERE (((+ (NULL)) IN ())); -- 0ms;
SELECT CASE WHEN ((vt0.c0)>=(vt0.c0)) THEN (vt0.c0 IN (vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT TOTAL((vt0.c2 IN ())) OVER () FROM vt0 NOT INDEXED WHERE (x'b319'); -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE NOCASE) ISNULL) FROM vt0 WHERE (((x'') NOT BETWEEN ('-1306926642') AND (NULL)) COLLATE RTRIM) ORDER BY ((((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2)))OR(x'')) DESC  NULLS FIRST, CASE WHEN STRFTIME(0.6894455616176188, vt0.c2, vt0.c0) THEN ((vt0.c0) IS FALSE) ELSE LIKE(vt0.c2, vt0.c0, '4') END, (- (vt0.c0 COLLATE RTRIM))  NULLS LAST; -- 0ms;
SELECT ((CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN '' WHEN vt0.c0 THEN vt0.c0 ELSE 0xffffffffd5768362 END)LIKE(0.5503812119992817)), CASE WHEN vt0.c1 THEN ((vt0.c0) IS TRUE) ELSE ((vt0.c1)AND(vt0.c2)) END, vt0.c2 FROM vt0 WHERE ((((0.26076828764512916)) NOT BETWEEN (((('1083447343') IS TRUE))) AND ((json_array(x'', ''))))); -- 0ms;
SELECT DISTINCT CASE WHEN (vt0.c0 IN ()) THEN CASE WHEN vt0.c2 THEN 0.02393664746594293 END END, json_extract(((((vt0.c2)AND(vt0.c0)))AND(vt0.c1)), (vt0.c2 IN ())), ((vt0.c1 IN ()) IN ()) FROM vt0 WHERE (((((CAST(x'' AS INTEGER))OR(CAST(NULL AS TEXT))))AND(((0xffffffff8e82d3e3)IS(''))))); -- 1ms;
SELECT DISTINCT ((((vt0.c2))>((vt0.c0))) IN ()) FROM vt0 WHERE (CAST(((0.5784516835233366) NOT NULL) AS REAL)); -- 0ms;
SELECT DISTINCT (((((((((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))AND(((vt0.c2)+(vt0.c2)))))AND(0X56816d0a)))OR(vt0.c0)))AND(((vt0.c2)%(vt0.c0)))) FROM vt0 GROUP BY vt0.c1 COLLATE RTRIM, vt0.c1, NULL; -- 0ms;
SELECT DISTINCT (+ ((((vt0.c1))<>((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL CASE WHEN ((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c1)) THEN json_quote(vt0.c2) ELSE CASE WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END END FROM vt0 WHERE (CASE WHEN (NULL IN (0xffffffffa7bc4e88)) THEN TYPEOF(DISTINCT NULL) WHEN NULL COLLATE RTRIM THEN CASE x''  WHEN x'c8d0' THEN '1604759345' END WHEN CASE WHEN 0.6915800003110102 THEN x'4651' WHEN '' THEN '1G3Bu' WHEN NULL THEN 0.08513887089286098 END THEN ((0.46569483671167267)>('30326716')) END) LIMIT 1941606637; -- 0ms;
SELECT DISTINCT ((((((vt0.c1)OR(x'')))OR(vt0.c2)))=(vt0.c2 COLLATE BINARY)), (CAST(x'' AS NUMERIC) IN (vt0.c2 COLLATE BINARY, ((vt0.c2) NOT BETWEEN (-1.393799091E9) AND (vt0.c0)))), ((vt0.c0)/(((vt0.c0) ISNULL))) FROM vt0 ORDER BY CASE ((vt0.c0) IS TRUE)  WHEN ((0.8589105749514429)LIKE(vt0.c0)) THEN vt0.c1 COLLATE NOCASE ELSE ((vt0.c1)|(vt0.c1)) END; -- 0ms;
SELECT DISTINCT TRIM(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1))) FROM vt0 WHERE (((NULL COLLATE RTRIM) NOT BETWEEN (CASE NULL  WHEN x'' THEN 'Qd^d헰转' WHEN NULL THEN 0.4782724690671194 WHEN x'c0a2' THEN 0.28795285768526024 END) AND (((0.5941491211488201)<(0.026245954606130883))))); -- 0ms;
SELECT COUNT(*) FROM vt0 WHERE (((((((NULL) NOT BETWEEN ('I[>_]較i') AND ('-FOR~s')))OR((('1412194049')<>('-1675282817')))))AND(('0js⺸' IN (0.8234096107730116))))) ORDER BY ((ABS(vt0.c0))+((((vt0.c0, vt0.c2, vt0.c1))<((vt0.c1, vt0.c0, vt0.c2)))))  NULLS FIRST, CASE ((vt0.c0)>>(vt0.c2))  WHEN ((vt0.c2)AND(vt0.c2)) THEN NULL COLLATE BINARY ELSE (- (vt0.c2)) END DESC; -- 0ms;
SELECT (+ (COUNT(*))) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c1, ((((x'')>(vt0.c0))) NOTNULL), LAG(((((CASE WHEN vt0.c0 THEN vt0.c1 END)OR((vt0.c1 IN ()))))OR((NOT (vt0.c1)))), ((CASE WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)<(vt0.c1 COLLATE RTRIM)), x'') OVER () FROM vt0; -- 1ms;
SELECT NULL FROM vt0 WHERE ((CAST('0.17176844451776518' AS INTEGER) IN (STRFTIME('J*r&[q3', NULL, x'6f25')))) LIMIT 613528136; -- 0ms;
SELECT DISTINCT (((((((((- (vt0.c1)))AND((((vt0.c2, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c0)) AND ((vt0.c0, vt0.c1, vt0.c1))))))AND((((vt0.c2))<((NULL))))))OR(vt0.c2 COLLATE NOCASE)))OR(((vt0.c1)>('_e 5h5''xb')))) FROM vt0 WHERE (((0Xffffffff8ffb729a)<('134804860')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((vt0.c1)IS NOT(vt0.c2)) IN ()) FROM vt0 WHERE (NULL); -- 0ms;
SELECT ALL CAST((vt0.c2 IN ()) AS TEXT) FROM vt0 ORDER BY ((((((((-1653206650)AND(vt0.c0)))AND(vt0.c2)))AND(NULL)))OR(vt0.c0)) COLLATE RTRIM ASC, (((x'360b' IN (vt0.c1))) NOT NULL)  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(((vt0.c0)<>(0.08398019034906645))) OVER ( PARTITION BY ((vt0.c2 IN (vt0.c0)) IN ()), (((((~ (vt0.c1)))AND(json_object(vt0.c0, 0.8498082401859747, vt0.c2, vt0.c2))))OR(x'cb2b'))), COALESCE(((vt0.c0) ISNULL), CAST(vt0.c2 AS BLOB), (((vt0.c0))<=((vt0.c2))), (((vt0.c0, vt0.c0, vt0.c0))>((vt0.c1, vt0.c1, vt0.c2))), (((vt0.c2))>((vt0.c2))), (- (x''))), IFNULL(((vt0.c1) IS FALSE), vt0.c0 COLLATE RTRIM), SUM((((vt0.c2))>((vt0.c0)))), CAST((NOT (vt0.c2)) AS INTEGER) FROM vt0 WHERE ((CASE x''  WHEN -1505250925 THEN x'' ELSE NULL END IN ('1915532288' COLLATE BINARY, HEX(0.07763524667015498)))) GROUP BY vt0.c0 LIMIT 1248617364 OFFSET -782958885; -- 0ms;
SELECT DISTINCT ((((((((vt0.c1)OR(vt0.c1)))AND('1l')))AND(vt0.c2)))AND(vt0.c1)) COLLATE BINARY FROM vt0; -- 0ms;
SELECT CASE ((((vt0.c0)AND(vt0.c1)))OR(vt0.c2))  WHEN (+ (vt0.c2)) THEN 0.06869283098924617 END FROM vt0 WHERE (CAST(((('-5075048', 0.3571946833533043, -1775848159))>((0.6068882203984299, x'', 0.08324272647918884))) AS TEXT)); -- 0ms;
SELECT DISTINCT LAST_VALUE((- (CASE vt0.c1  WHEN vt0.c2 THEN x'' END))) OVER () FROM vt0; -- 0ms;
SELECT ((NULLIF(vt0.c0, vt0.c1)) NOT BETWEEN ((((0xffffffffdf3aea0f))!=((vt0.c1)))) AND (CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0; -- 0ms;
SELECT ALL ((CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END) NOT NULL) FROM vt0 WHERE (((((((((((0.7064719862796772) NOT BETWEEN ('^Z') AND (x'')))AND(CASE WHEN '958607640' THEN x'' END)))OR(((NULL)|(NULL)))))AND(((((NULL)AND(0.4005168257391367)))AND('1917052720')))))AND(((NULL)<>(0.4338147134780569))))); -- 0ms;
SELECT ALL GROUP_CONCAT(((vt0.c0) ISNULL)) OVER ( GROUPS BETWEEN  CURRENT ROW AND ((((vt0.c2)>=(x'f485'))) IS TRUE) FOLLOWING EXCLUDE NO OTHERS) FROM vt0;SELECT ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c2 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END) ISNULL), '', ((((vt0.c2) IS FALSE)) NOT BETWEEN (MAX(vt0.c1)) AND (CAST('' AS NUMERIC))) FROM vt0 WHERE (((- (x'')) IN ())); -- 0ms;
SELECT (((((vt0.c2))<>((0.12188026305790889))))GLOB(TOTAL(vt0.c0))) FROM vt0 GROUP BY CASE WHEN CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c2 END THEN (('-1580811641') IS FALSE) END HAVING (TOTAL(vt0.c2) IN ()); -- 0ms;
SELECT ALL 0.3039145646967687 COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT (+ (((vt0.c0) NOT NULL))), (((vt0.c0))>=((vt0.c2))) COLLATE RTRIM, RANK() OVER () FROM vt0; -- 0ms;
SELECT ALL ((- (vt0.c2)) IN (CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)) FROM vt0 WHERE ((NOT (((0.05695002213351619)%(8.47050647E8))))); -- 0ms;
SELECT DISTINCT LAG(0.27384427149301294 COLLATE BINARY, ((vt0.c0)<<(((((vt0.c1)AND(vt0.c0)))AND(vt0.c1)))), ((CAST(vt0.c1 AS INTEGER)) ISNULL)) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c1)<(vt0.c2)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c1 END)>=(AVG(vt0.c1))) FROM vt0 WHERE ((NOT ((((('// ')OR(x'6df1')))AND(x''))))) INTERSECT SELECT ALL COUNT(((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c1))) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT x''), (((vt0.c1)) NOT BETWEEN ((((((((((vt0.c2)OR(vt0.c2)))OR(vt0.c1)))OR(1314582853)))AND(vt0.c2)))) AND (((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2)))))), ((LIKELIHOOD(vt0.c0, 0.39577971250271626)) IS FALSE) FROM vt0; -- 0ms;
SELECT (((vt0.c1)) BETWEEN ((vt0.c2 COLLATE NOCASE)) AND ((((vt0.c0) IS TRUE)))) FROM vt0 WHERE (((NULL) NOT BETWEEN (((0.6617368751325201)||('<U96ꯔ'))) AND (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT vt0.c2, ((((CAST(vt0.c1 AS BLOB))AND(((vt0.c1)IS NOT(vt0.c1)))))OR(((vt0.c0)>>(vt0.c1)))), CAST(CAST(vt0.c0 AS REAL) AS TEXT) FROM vt0; -- 0ms;
SELECT ALL ((JULIANDAY(vt0.c0, vt0.c2, vt0.c0, vt0.c1, vt0.c2))<=('	穧&T')) FROM vt0; -- 0ms;
SELECT DISTINCT vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c1 THEN '0.4623382541912576' WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c0 END IN (((((vt0.c2)AND(vt0.c1)))AND(vt0.c1)))) FROM vt0; -- 0ms;
SELECT COUNT(CASE vt0.c1  WHEN vt0.c0 THEN x'' ELSE vt0.c1 END), COUNT(((((vt0.c2)OR(NULL)))AND(vt0.c2))), ((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 END) NOT BETWEEN (((vt0.c1) NOT BETWEEN (vt0.c1) AND (''))) AND ((((vt0.c0)) BETWEEN (('')) AND ((vt0.c2))))) FROM vt0; -- 0ms;
SELECT ALL ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END) BETWEEN (((vt0.c1) IS FALSE)) AND (CAST(vt0.c0 AS TEXT))) FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c1) NOTNULL) AS TEXT) FROM vt0 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((vt0.c2 IN ())))<=((((vt0.c1) NOT NULL)))) FROM vt0 WHERE (((CASE WHEN 0.9051318538566038 THEN 0.8592361129228807 WHEN '' THEN '-1105476108' WHEN NULL THEN 'H0' ELSE x'ba56e20c' END) BETWEEN (CASE WHEN -1791727228 THEN x'ab04' WHEN '(c᩷NM\' THEN '' WHEN 'H_szf' THEN '979527063' ELSE x'c5b1' END) AND (CHAR(0.5160659038013045, '-2081430009', '쇍w[4WOᣯ7F')))); -- 0ms;
SELECT DISTINCT CASE ((vt0.c1) BETWEEN (vt0.c2) AND (-1980062837))  WHEN (((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c1))) THEN ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)) END FROM vt0; -- 0ms;
SELECT ALL CASE WHEN vt0.c1 THEN ((((((((vt0.c2)OR(vt0.c0)))OR(vt0.c1)))AND(vt0.c2)))OR(vt0.c0)) ELSE (((vt0.c0, vt0.c1, vt0.c2))>=((vt0.c1, vt0.c0, vt0.c2))) END, (+ (vt0.c1)), ((CAST(vt0.c1 AS INTEGER)) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((vt0.c1)) BETWEEN (((- (vt0.c2)))) AND ((CASE vt0.c0  WHEN NULL THEN vt0.c0 END))), ((vt0.c0) NOT BETWEEN (((vt0.c0)GLOB(vt0.c2))) AND (CASE vt0.c1  WHEN vt0.c1 THEN vt0.c0 END)), (((vt0.c1)) BETWEEN (((((('')OR(vt0.c0)))OR(vt0.c0)))) AND ((vt0.c0))) FROM vt0; -- 0ms;
SELECT CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c2 END AS TEXT), CASE ((vt0.c2) ISNULL)  WHEN ((vt0.c1) NOTNULL) THEN HEX(DISTINCT 0x0) WHEN CAST(vt0.c2 AS INTEGER) THEN (vt0.c1 IN ()) WHEN (vt0.c1 IN ()) THEN (vt0.c2 IN ()) END, MAX(((vt0.c0) ISNULL)) COLLATE NOCASE FROM vt0 WHERE ((NOT ((x'' IN ())))) GROUP BY vt0.c2; -- 0ms;
SELECT DISTINCT LOWER((('2H')>(''))) FROM vt0; -- 0ms;
SELECT SUM(((((vt0.c0)OR(vt0.c1)))OR(vt0.c1))) OVER () FROM vt0 WHERE ((((NULL)) NOT BETWEEN ((((((NULL)AND(x'')))AND('(c᩷nm\')))) AND ((CAST(0.4501247688921637 AS BLOB))))); -- 0ms;
SELECT DISTINCT (((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END))<((CASE 0.2573549692265573  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END))) FROM vt0 WHERE (json_insert((('-747363590') ISNULL), ((NULL) BETWEEN (0.8571683920891522) AND (NULL)), CAST(']*' AS REAL))) ORDER BY (((((('966402277')AND(vt0.c2)))AND(vt0.c2))) BETWEEN (((vt0.c0) ISNULL)) AND (CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c1 END)) DESC  NULLS LAST; -- 0ms;
SELECT ALL vt0.c1, COUNT(0x5fd95df9) OVER ( ORDER BY ((vt0.c1)<(vt0.c1)) COLLATE BINARY DESC, ((vt0.c1)<>(vt0.c0)) ASC, ((((vt0.c1)OR('1412194049')))>(((vt0.c1) BETWEEN (vt0.c0) AND (vt0.c2))))), DENSE_RANK() OVER () FROM vt0 GROUP BY (((((vt0.c2, vt0.c2, vt0.c2)) BETWEEN ((vt0.c0, vt0.c2, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c2))))<<(CAST(vt0.c0 AS TEXT))) HAVING (((((((((((vt0.c2)) BETWEEN ((vt0.c1)) AND ((vt0.c2))))OR(((vt0.c2)IS NOT(vt0.c1)))))AND((+ (vt0.c1)))))OR(CAST(vt0.c0 AS NUMERIC))))OR(((vt0.c2)>=(vt0.c1)))); -- 0ms;
SELECT ((((vt0.c0)<=(vt0.c1)))&(((vt0.c1) IS TRUE))) FROM vt0 WHERE (CAST(((x'8fa3') BETWEEN (0X3c969c04) AND (4.93129475E8)) AS BLOB)); -- 0ms;
SELECT ALL TOTAL((((vt0.c2)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0)))) FROM vt0 LIMIT 937521811; -- 0ms;
SELECT DISTINCT ((((((((GROUP_CONCAT(vt0.c1))AND((+ (vt0.c1)))))AND(TYPEOF(vt0.c1))))OR((+ (0.2731494842886476)))))AND((NOT (vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT (vt0.c2 IN ())) FROM vt0 WHERE (CASE WHEN ((((0.6138418746483995)OR('0.15818821371099479')))OR(654205891)) THEN ((((0.6817751843258153)OR(0.7571035435046988)))AND('#C&')) ELSE ((-851880209) IS TRUE) END); -- 0ms;
SELECT AVG((('0.3755016403844811')/(vt0.c1)) COLLATE BINARY) FROM vt0 ORDER BY CASE LOWER(DISTINCT '-1434683543')  WHEN x'' THEN CAST(vt0.c1 AS NUMERIC) END DESC  NULLS LAST; -- 0ms;
SELECT ((((vt0.c1) IS FALSE))*(json_object(vt0.c1, vt0.c2))), (+ (((vt0.c0)>(vt0.c0)))), CAST(((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)) AS NUMERIC) FROM vt0 WHERE ((((((NULL)) BETWEEN (('仵DgE泼^^''2')) AND ((NULL))))||(CASE WHEN 553138787 THEN NULL WHEN 0.41458303477481917 THEN '' WHEN NULL THEN 1580076992 ELSE 0.10006664573410473 END))); -- 0ms;
SELECT ((('-666062654')) BETWEEN ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)) AND (((~ (vt0.c2))))) FROM vt0 WHERE (((((x'') BETWEEN (NULL) AND (NULL))) NOTNULL)); -- 0ms;
SELECT COUNT((((vt0.c2, vt0.c0, vt0.c2)) BETWEEN ((vt0.c1, 0.459556652476375, vt0.c0)) AND ((vt0.c1, vt0.c1, vt0.c1)))) FILTER(WHERE ((((vt0.c2) ISNULL))IS NOT(CAST(vt0.c1 AS INTEGER)))) OVER () FROM vt0 WHERE ((LIKELIHOOD(NULL, 0.6376154315461738) IN ())); -- 0ms;
SELECT DISTINCT NULL, CASE WHEN '235697187' COLLATE NOCASE THEN NULLIF(vt0.c2, vt0.c0) ELSE CAST(vt0.c2 AS INTEGER) END, ((vt0.c2) IS FALSE) COLLATE BINARY FROM vt0 LIMIT -1245978523; -- 0ms;
SELECT (((((vt0.c0, vt0.c1, vt0.c2))<((vt0.c2, vt0.c0, vt0.c0))))<=(((vt0.c2)<=(vt0.c1)))) FROM vt0 NOT INDEXED WHERE ((((((('0.275113916527307') IS TRUE))AND(((0.02336082518500171) BETWEEN ('*n1254 -4070819290843926699 1980-ᐣ㤑I D') AND (x'')))))AND((- (x'f28c'))))); -- 0ms;
SELECT ALL ((((vt0.c1)IS NOT(vt0.c0)))<<(JULIANDAY(vt0.c1, vt0.c0, vt0.c1))), ((((((x'')OR(vt0.c2)))AND(vt0.c1))) NOT NULL), (((vt0.c2, vt0.c1, vt0.c2)) BETWEEN ((((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)), ((-1834677190)*(vt0.c0)), CAST(vt0.c1 AS REAL))) AND ((((vt0.c2)<=(vt0.c2)), AVG(vt0.c0), ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(x'83ac'))AND((vt0.c0 IN (vt0.c0, vt0.c2)))) FROM vt0 WHERE (json_insert((~ ('-280988036')), x'' COLLATE RTRIM, ((((x'')OR(NULL)))OR(x''))));SELECT DISTINCT (((vt0.c2)) BETWEEN ((COUNT(vt0.c2))) AND ((vt0.c2))) FROM vt0 WHERE ((+ ((~ ('1126739812'))))); -- 0ms;
SELECT ((CAST(vt0.c1 AS BLOB)) NOT BETWEEN (CAST(vt0.c2 AS NUMERIC)) AND (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN 0x7007ea52 END)) FROM vt0 GROUP BY CAST(CASE WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END AS NUMERIC); -- 0ms;
SELECT DISTINCT CAST((vt0.c0 IN ()) AS TEXT) FROM vt0 WHERE ((((NOT (x''))) IS TRUE)); -- 0ms;
SELECT ALL (((vt0.c1)) NOT BETWEEN ((json_array_length(vt0.c2))) AND ((CAST(vt0.c0 AS NUMERIC)))) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c1) IS TRUE)) ISNULL) FROM vt0; -- 0ms;
SELECT (((vt0.c2 IN ())) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2) IS FALSE))>>((+ (vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS REAL) FROM vt0 WHERE ((((((('bT')) BETWEEN (('+G1a㩭eYS')) AND ((0.2160891630631896))), (+ (0.33661872648425206)), (NULL IN ())))>((((0X15a8a1ad) IS TRUE), ((((NULL)AND(0.6660819551599921)))AND(NULL)), ((((0xffffffff990070e1)OR('a蓍較Vea3Qt')))AND(-1685743323)))))); -- 1ms;
SELECT vt0.c0, (((vt0.c2 IN ()))%(NULL)), (((vt0.c0, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c0 COLLATE RTRIM, ((vt0.c0) IS FALSE), ((vt0.c2)LIKE(vt0.c2)))) AND ((((vt0.c1) NOT NULL), (vt0.c2 IN ()), COUNT('Apଯ''drDWA')))) FROM vt0 WHERE (((((((((NULL)AND(NULL)))OR(NULL)))AND(0.38364939594365255)))AND('Ry\n /6ܪEW')) COLLATE RTRIM) LIMIT -70027157; -- 0ms;
SELECT DISTINCT (vt0.c2 IN ()) FROM vt0 ORDER BY vt0.c1 DESC  NULLS FIRST; -- 0ms;
SELECT ((((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c1)))<>(((vt0.c0) IS TRUE))) FROM vt0 WHERE (((TYPEOF(DISTINCT NULL)) NOTNULL)) GROUP BY ((((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))>=(NULL)); -- 0ms;
SELECT ((((vt0.c1) IS FALSE))||(((vt0.c0)IS NOT(vt0.c1)))) FROM vt0; -- 0ms;
SELECT (((((vt0.c0))>((vt0.c2))))>>((vt0.c2 IN ()))) FROM vt0; -- 0ms;
SELECT NULL, (((~ (NULL))) NOT BETWEEN (('' IN ())) AND (vt0.c1)), vt0.c0 FROM vt0 ORDER BY CAST(((vt0.c0)OR(vt0.c0)) AS NUMERIC) ASC, '' ASC; -- 0ms;
SELECT DISTINCT (((vt0.c1)) NOT BETWEEN ((TRIM(DISTINCT vt0.c2))) AND ((CASE vt0.c1  WHEN vt0.c2 THEN '-1178879262' ELSE vt0.c2 END))) FROM vt0 GROUP BY (((((vt0.c0, vt0.c0, vt0.c1))<=((vt0.c0, 0.5822547886883191, vt0.c2))))<(((vt0.c0)>=(vt0.c1)))) HAVING CAST(load_extension(vt0.c2, NULL) AS INTEGER);SELECT ALL ((NULLIF(vt0.c0, -701329236))LIKE(CAST(vt0.c2 AS TEXT))) FROM vt0 WHERE (((((((((((((COALESCE(x'', '-990242122'))OR(CAST(0.8498082401859747 AS REAL))))AND(((((0.21866465389746048)AND(0.780146580859996)))OR(-1087855414)))))OR(json_valid('1587755464'))))AND(((0.8193841451869357) BETWEEN ('') AND (NULL)))))AND(((NULL) NOTNULL))))OR((+ ('-2122442342'))))) GROUP BY (((vt0.c2)LIKE(vt0.c2)) IN ()) HAVING ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 END)<>('0.29569212360876496')) ORDER BY CAST((((vt0.c1))<((940188085))) AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (SQLITE_COMPILEOPTION_GET(vt0.c2))) FROM vt0 ORDER BY (((vt0.c1)) BETWEEN (((NOT (vt0.c2)))) AND ((CASE vt0.c0  WHEN vt0.c0 THEN 0.2697493757420767 ELSE vt0.c1 END))) DESC  NULLS LAST, ((CASE vt0.c2  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 END) NOT NULL); -- 0ms;
SELECT DISTINCT CASE 5.28016633E8  WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c1 END COLLATE RTRIM COLLATE BINARY, ((CASE WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END) IS TRUE), (+ (vt0.c1)) COLLATE BINARY FROM vt0 WHERE ((((('1275177940')OR('-1271884235')))|((NULL IN (x'1e3a', NULL, 'ᔊ,kv}*ꆼ'))))); -- 0ms;
SELECT ALL ((GROUP_CONCAT(vt0.c0))IS NOT(((vt0.c2) IS TRUE))) FROM vt0 WHERE ((~ (((x'e79f')>>(NULL))))); -- 0ms;
SELECT DISTINCT '-823317927' FROM vt0 WHERE (CAST(((((((((x'')OR(x'')))AND(0.841005272147545)))OR(0.03867380284534527)))AND(x'')) AS INTEGER)); -- 0ms;
SELECT ALL COALESCE(LOWER(DISTINCT vt0.c0), vt0.c1, CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c1 WHEN NULL THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c2 END, COALESCE(NULL, x'', vt0.c0, vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1) NOT BETWEEN (vt0.c1) AND (vt0.c2)) AS BLOB) FROM vt0 WHERE (CHANGES()); -- 0ms;
SELECT (((((vt0.c0)OR(vt0.c0)))OR(vt0.c2)) IN (((vt0.c1)<>(vt0.c0)))) FROM vt0; -- 0ms;
SELECT (((vt0.c2 IN (632765236, vt0.c0))) NOT BETWEEN (((vt0.c1) NOT NULL)) AND ((vt0.c1 IN ()))) FROM vt0 WHERE (((NULL COLLATE RTRIM) BETWEEN (CAST('rd\rB~bW' AS BLOB)) AND (SQLITE_VERSION()))); -- 0ms;
SELECT DISTINCT UPPER(DISTINCT COUNT(*)) FROM vt0 WHERE (CAST(NULLIF(0.08906717570286893, 175577788) AS TEXT)); -- 0ms;
SELECT (((x'')) BETWEEN (((((vt0.c1)) BETWEEN ((vt0.c1)) AND ((x''))))) AND (((vt0.c1 IN ())))), ((((((((0.6849687011492587 COLLATE NOCASE)AND(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c0)))))AND(CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c2 END)))OR(((vt0.c2)IS NOT(vt0.c1)))))OR((NOT (vt0.c0)))), (((vt0.c0)IS(vt0.c0)) IN ()), ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 ELSE x'3059' END)GLOB(((vt0.c1) NOT NULL))), COUNT(*) OVER () FROM vt0 WHERE (NULL) ORDER BY (((((vt0.c1, '*H\rg(a', vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c1)) AND ((vt0.c2, vt0.c1, x'')))) NOT NULL)  NULLS FIRST; -- 3ms;
SELECT ALL ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<(-76237516 COLLATE NOCASE)) FROM vt0; -- 0ms;
SELECT ALL CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 END COLLATE NOCASE, CASE CAST(vt0.c0 AS REAL)  WHEN CAST(vt0.c0 AS NUMERIC) THEN ((vt0.c0) NOTNULL) ELSE (+ (x'fd51')) END, CAST(CASE vt0.c1  WHEN vt0.c2 THEN vt0.c0 ELSE vt0.c1 END AS INTEGER) FROM vt0 LIMIT 1345936879 OFFSET 1776695917; -- 0ms;
SELECT DISTINCT (~ (((vt0.c1) IS TRUE))), vt0.c0, TOTAL(1913969227) OVER () FROM vt0 NOT INDEXED WHERE ((((('-661390261')GLOB('E|)TGRg'))) NOT NULL)); -- 0ms;
SELECT TOTAL((((vt0.c0))>=((vt0.c1)))), ((((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c0))) NOT BETWEEN (((vt0.c2)||(vt0.c0))) AND (((vt0.c2)LIKE(vt0.c2)))), CASE WHEN (((vt0.c0))>=((vt0.c0))) THEN (((vt0.c1)) BETWEEN ((vt0.c1)) AND ((vt0.c0))) ELSE ((vt0.c0) NOT NULL) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((((vt0.c2)<<(vt0.c1)))OR(((vt0.c1)>=(vt0.c2)))))AND(vt0.c2 COLLATE NOCASE)) FROM vt0 WHERE (LIKELY(TRIM(0.11484609956617253, 0.4582449752550565))); -- 1ms;
SELECT ALL (((TRIM(NULL)))=((((vt0.c1)||(vt0.c1))))) FROM vt0 WHERE ((((((0.8769735822152684)) BETWEEN ((x'')) AND ((x'8200'))))>>((('') NOTNULL)))); -- 0ms;
SELECT DISTINCT (((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)), CAST(vt0.c2 AS REAL), CASE vt0.c1  WHEN vt0.c1 THEN vt0.c1 END))<((COUNT(vt0.c2), vt0.c2 COLLATE NOCASE, (((vt0.c1))==((vt0.c2)))))) FROM vt0 GROUP BY ((vt0.c0)GLOB(vt0.c1)) COLLATE RTRIM HAVING CASE WHEN CAST(vt0.c1 AS INTEGER) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c2 END ELSE ((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)) END; -- 0ms;
SELECT (~ (vt0.c1)) COLLATE NOCASE FROM vt0 WHERE (((((x'') NOT BETWEEN ('>') AND (NULL)))*(CAST(0.7030594314804138 AS REAL)))); -- 0ms;
SELECT DISTINCT vt0.c2 FROM vt0 WHERE (CASE WHEN '2a' THEN x'0248' ELSE x'' END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (vt0.c1 IN (NULL)) COLLATE NOCASE COLLATE BINARY FROM vt0 WHERE ((NOT (CAST(x'f0f34420' AS TEXT)))); -- 0ms;
SELECT (((vt0.c2) NOTNULL) IN (x'' COLLATE BINARY)), (((vt0.c2)IS NOT(vt0.c2)) IN (CAST(vt0.c0 AS REAL))), ((vt0.c0)!=(((vt0.c1)==(vt0.c0)))), MIN(((vt0.c0) ISNULL)), (- (((((vt0.c0)AND(vt0.c2)))AND(vt0.c0)))) FROM vt0 WHERE (UNICODE(((((5.4319162E8)OR(0.3410245048750833)))OR(x'c9f6')))) GROUP BY CASE (((vt0.c0, 0.6520637306113518, vt0.c1)) NOT BETWEEN ((vt0.c0, vt0.c0, vt0.c0)) AND ((vt0.c0, vt0.c2, '')))  WHEN ((x'')=(vt0.c1)) THEN json(vt0.c1) END, ((((((vt0.c1) NOT BETWEEN (vt0.c1) AND (0X5272843c)))AND(((vt0.c2)*(vt0.c1)))))OR(((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))), (~ (TYPEOF(vt0.c1))); -- 0ms;
SELECT DISTINCT CAST(vt0.c1 AS NUMERIC), (((vt0.c0)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c0))) COLLATE BINARY, (((((vt0.c0, vt0.c0, vt0.c0))=((vt0.c0, vt0.c2, vt0.c2))))AND(MIN(vt0.c1))), (~ (((vt0.c1) NOTNULL))), CUME_DIST() OVER () FROM vt0 GROUP BY CASE ((vt0.c2) BETWEEN (vt0.c1) AND (0x552237f2))  WHEN vt0.c0 THEN (((vt0.c1))<((0xffffffffea5c8d0b))) WHEN CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END THEN CASE x''  WHEN vt0.c2 THEN vt0.c1 END WHEN vt0.c0 THEN 0xffffffffef82572e ELSE ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) END HAVING ((((vt0.c1) BETWEEN (-1.941216461E9) AND (vt0.c2)))-(((vt0.c2)>>(vt0.c0)))); -- 1ms;
SELECT ((((LTRIM(vt0.c1, vt0.c0))OR((((vt0.c0, vt0.c2, vt0.c1))<=((vt0.c0, vt0.c1, vt0.c1))))))AND(((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c2)))) FROM vt0; -- 0ms;
SELECT DISTINCT ((~ (vt0.c2)) IN ()) FROM vt0; -- 0ms;
SELECT ALL vt0.c1, ((vt0.c1) IS TRUE), CASE vt0.c2  WHEN SUM(vt0.c0) THEN TRIM(vt0.c2, vt0.c0) END FROM vt0 WHERE ((- (((1e500) BETWEEN (NULL) AND (0Xffffffffb2d51ba7))))); -- 0ms;
SELECT DISTINCT ((vt0.c0) IS TRUE) FROM vt0 LIMIT -39511794 OFFSET -1415652088; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM vt0; -- 0ms;
SELECT ALL x'' FROM vt0; -- 0ms;
SELECT DISTINCT (GROUP_CONCAT('_౳E4ay') IN ()) FROM vt0 WHERE (((((1255699088) IS FALSE)) NOT BETWEEN (CASE WHEN NULL THEN x'' END) AND ((('') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((((vt0.c2) NOT NULL))AND(vt0.c0 COLLATE NOCASE)))OR(UPPER(DISTINCT vt0.c0))), (((vt0.c0 IN ())) NOT NULL), (((('-1375760334') NOT NULL))|(vt0.c0 COLLATE RTRIM)) FROM vt0 WHERE (((x'') BETWEEN (x'') AND (NULL)) COLLATE NOCASE); -- 0ms;
SELECT UNLIKELY(vt0.c0) FROM vt0 GROUP BY ((vt0.c1)OR(NULL)) COLLATE NOCASE, ((0.14155398866958546)GLOB(((vt0.c1)GLOB(vt0.c2)))), CAST(CASE WHEN vt0.c2 THEN vt0.c1 ELSE NULL END AS TEXT) HAVING ((COUNT(*))OR(vt0.c0)); -- 0ms;
SELECT DISTINCT (((vt0.c2))=((vt0.c0))) COLLATE NOCASE FROM vt0 WHERE (CASE '-2011422238'  WHEN 0.15829528537868587 THEN '' ELSE 0.8313616552502721 END COLLATE RTRIM) ORDER BY TRIM(((vt0.c2) BETWEEN (x'') AND (0X747ac82a))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)LIKE(vt0.c2)) THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN NULL WHEN '*w&UV1h援c' THEN 'w&' END WHEN HEX(vt0.c2) THEN vt0.c0 WHEN CASE vt0.c2  WHEN vt0.c1 THEN vt0.c1 END THEN CAST(vt0.c0 AS REAL) END FROM vt0; -- 0ms;
SELECT (('') NOT BETWEEN (CAST(1.086802983E9 AS BLOB)) AND (CASE WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE vt0.c0 END)), CAST(JULIANDAY(vt0.c1, vt0.c1, vt0.c2, vt0.c0, 0.8487366617192029) AS TEXT), CASE x'2861'  WHEN vt0.c0 THEN ((vt0.c2)AND(vt0.c0)) ELSE vt0.c0 COLLATE BINARY END, (~ (((((((((vt0.c2)AND(vt0.c2)))AND(vt0.c1)))OR(NULL)))AND(vt0.c1)))), DENSE_RANK() OVER ( ORDER BY CASE WHEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 ELSE vt0.c0 END THEN ((vt0.c1) BETWEEN (0.07335088509311005) AND (vt0.c0)) WHEN ((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c1)) THEN ((((((((vt0.c0)OR(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))AND(vt0.c1)) WHEN ((((vt0.c1)AND(vt0.c0)))OR(vt0.c1)) THEN vt0.c0 COLLATE BINARY ELSE ((vt0.c2)OR(vt0.c2)) END  NULLS LAST, ((((((vt0.c2)<(vt0.c2)))OR(vt0.c1 COLLATE RTRIM)))OR(((vt0.c1) NOT BETWEEN (vt0.c2) AND (vt0.c0)))) DESC) FROM vt0 LIMIT -152483338 OFFSET -1555906820; -- 0ms;
SELECT DISTINCT ((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))>>('1071700799')), (((vt0.c0)) NOT BETWEEN ((CASE vt0.c2  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 ELSE vt0.c0 END)) AND ((((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c2))))), ((((IFNULL('-1393799091', vt0.c1))AND(((((vt0.c1)AND(vt0.c0)))OR(vt0.c0)))))AND((~ (vt0.c1)))), vt0.c2, RANK() OVER () FROM vt0; -- 0ms;
SELECT ((vt0.c2)LIKE(vt0.c2)) COLLATE BINARY FROM vt0 WHERE (((CASE '1337260438'  WHEN '0.4005168257391367' THEN NULL END)=(NULL))); -- 0ms;
SELECT ALL ((((((vt0.c1) ISNULL))OR(CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END)))OR((('')|(0.2708300996857229)))) FROM vt0 LIMIT -1337027291 OFFSET -1; -- 0ms;
SELECT ALL ((LIKELY(DISTINCT vt0.c2)) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT QUOTE(CASE WHEN vt0.c1 THEN '1G3Bu' ELSE vt0.c2 END) FROM vt0; -- 0ms;
SELECT ALL COUNT(*) FROM vt0 GROUP BY vt0.c1; -- 0ms;
SELECT DISTINCT LEAD((((vt0.c2)) BETWEEN ((((vt0.c1) IS FALSE))) AND ((CASE WHEN vt0.c2 THEN vt0.c1 END))), 0.573456221965787, (('944308750')!=((+ (vt0.c2))))) OVER ( GROUPS  UNBOUNDED PRECEDING), ((CAST(vt0.c2 AS NUMERIC))<=(NULL)), ROW_NUMBER() OVER () FROM vt0; -- 0ms;
SELECT CAST(((vt0.c2) BETWEEN (vt0.c1) AND (vt0.c1)) AS BLOB) FROM vt0 WHERE (((CASE 0Xffffffffffffffff  WHEN 'Rcu1' THEN NULL ELSE '-1653206650' END)IS NOT(LOWER('-751798804')))) GROUP BY CAST((vt0.c1 IN ()) AS INTEGER), NULLIF(((vt0.c1)LIKE(vt0.c0)), ((vt0.c2)>(vt0.c1))), (((((vt0.c0)AND(vt0.c0)))OR(vt0.c1)) IN ()); -- 0ms;
SELECT vt0.c2 FROM vt0; -- 0ms;
SELECT ALL load_extension(SUM(vt0.c0)) FROM vt0 WHERE (((x'bd53') NOT BETWEEN (((('991703143')) BETWEEN (('913109513')) AND ((NULL)))) AND (0.9330077358414975))) ORDER BY ((((((vt0.c0)OR(vt0.c0)))OR(vt0.c2))) BETWEEN (((vt0.c0) NOTNULL)) AND (CAST(vt0.c0 AS REAL))) DESC  NULLS LAST;SELECT DISTINCT CAST((+ (vt0.c2)) AS BLOB) FROM vt0; -- 1ms;
SELECT ((vt0.c2)>=(((vt0.c1)||(vt0.c0)))) FROM vt0 WHERE (IFNULL(NULL, x'') COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((CASE vt0.c0  WHEN vt0.c2 THEN vt0.c1 ELSE '1541066950' END))<(((((vt0.c1, vt0.c0, vt0.c0)) NOT BETWEEN ((vt0.c0, vt0.c2, vt0.c2)) AND ((vt0.c1, vt0.c2, vt0.c1)))))) FROM vt0 WHERE (0.8459333075292608); -- 0ms;
SELECT ALL TRIM(0.7941670350950123, ((vt0.c0) NOT NULL)) FROM vt0; -- 0ms;
SELECT ALL ((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))>(((vt0.c0)>=(vt0.c1)))) FROM vt0; -- 0ms;
SELECT ((((vt0.c0)AND(vt0.c1))) NOT BETWEEN (COUNT(*)) AND (COUNT(vt0.c0))) FROM vt0 WHERE (((LTRIM('	穧&T', 0X783072a))/(((((x'')AND(x'')))OR(x''))))); -- 0ms;
SELECT DISTINCT CASE ((((((((vt0.c0)OR(vt0.c1)))OR('_౳E4AY')))OR(vt0.c2)))OR(vt0.c2))  WHEN vt0.c1 COLLATE RTRIM THEN (((vt0.c2))<>((vt0.c1))) WHEN TOTAL(vt0.c1) THEN CAST(vt0.c0 AS TEXT) WHEN (+ (vt0.c0)) THEN (~ (vt0.c0)) WHEN vt0.c1 THEN CASE vt0.c1  WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c2 WHEN 0.38138765508130656 THEN vt0.c0 END WHEN CAST(vt0.c0 AS REAL) THEN ((vt0.c1)-(vt0.c0)) END FROM vt0 WHERE (x'a37c'); -- 0ms;
SELECT DISTINCT (((+ (vt0.c0))) BETWEEN (CASE WHEN vt0.c2 THEN vt0.c1 END) AND ((vt0.c1 IN (vt0.c1)))) FROM vt0 WHERE (IFNULL(0.9641066700953742, 0.4935610129763913) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(((vt0.c2) ISNULL) AS REAL) FROM vt0 WHERE ((((HEX(DISTINCT NULL)))<>(((NOT ('D*wl')))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1)<(vt0.c0)))<=(CASE WHEN vt0.c2 THEN vt0.c2 END)) FROM vt0; -- 0ms;
SELECT ALL CAST(138797068 AS BLOB), (((vt0.c2)/(vt0.c1)) IN ()), ((vt0.c0 COLLATE RTRIM)GLOB(((vt0.c2) IS FALSE))) FROM vt0 WHERE ((- (CAST('TRUE' AS REAL)))); -- 0ms;
SELECT ALL COUNT(((((((((vt0.c1)OR(vt0.c1)))AND(vt0.c1)))AND(vt0.c1)))OR(vt0.c0))) FROM vt0 WHERE ('1016503300'); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c0)/(vt0.c1)) THEN (((vt0.c0))<=((vt0.c2))) ELSE (NULL IN ()) END FROM vt0 WHERE ((((((NULL)>(x''))))<=((((-7.20154384E8)IS NOT(0.47215452032464844)))))) LIMIT 1490667056; -- 0ms;
SELECT DISTINCT ((((vt0.c0)==('573018011')))IS(HEX(DISTINCT vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((((LIKELIHOOD(vt0.c2, 0.525464399570257))OR(((vt0.c0)>>(vt0.c0)))))AND(CAST(vt0.c2 AS REAL))) FROM vt0 WHERE (NULLIF(CAST('1878305831' AS NUMERIC), ((NULL) NOT NULL))); -- 0ms;
SELECT '/', (('1451322634')GLOB(((vt0.c2)+('-1664520913')))), CAST(json_array(x'1122', vt0.c0) AS NUMERIC), (((vt0.c0 IN ())) NOT NULL), CAST(CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 END AS TEXT) FROM vt0 WHERE ((((((0.8076557297045323))<((0.7064719862796772)))) NOT NULL));SELECT DISTINCT ((0x6846dce0 COLLATE BINARY)&(CAST(vt0.c1 AS BLOB))) FROM vt0 WHERE ((((NULL, x'', 1.27517794E9)) BETWEEN ((((x'') NOT NULL), ((((0.9521946998996663)AND('1140931201')))AND(NULL)), IFNULL(DISTINCT x'', x'02a270f9'))) AND ((((((0.6231175260503936)AND(NULL)))AND(NULL)), ((1688077891) BETWEEN (0.5093516978803331) AND (NULL)), IFNULL('-15058351', x'2d00'))))); -- 0ms;
SELECT (((('n.kK+Wf*）')AND((+ (vt0.c2)))))AND((~ (vt0.c2)))) FROM vt0 NOT INDEXED WHERE (((0Xffffffff9fa41c38 COLLATE RTRIM) IS FALSE)) ORDER BY ((('' IN ())) IS FALSE) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (AVG(vt0.c1) IN ((vt0.c0 IN (vt0.c0)))) FROM vt0 WHERE (((('-1221516615')) NOT BETWEEN ((CAST(0X2a1970db AS BLOB))) AND (('610635484')))); -- 1ms;
SELECT ALL (LOWER(vt0.c0) IN ()), vt0.c1, vt0.c0 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((((vt0.c1)OR(vt0.c1)))OR(vt0.c1)) AS NUMERIC) FROM vt0; -- 0ms;
SELECT DISTINCT json_type((+ (vt0.c0))) FROM vt0; -- 0ms;
SELECT ALL (~ (CAST(vt0.c0 AS NUMERIC))) FROM vt0; -- 0ms;
SELECT ALL (((((vt0.c1 IN (vt0.c0)))OR(CAST(vt0.c1 AS REAL))))AND(((vt0.c0) BETWEEN (vt0.c1) AND (vt0.c1)))) FROM vt0 LIMIT 866990755 OFFSET -1056972719; -- 0ms;
SELECT ALL ((CAST(vt0.c0 AS INTEGER))>>(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c2)))) FROM vt0 WHERE ((((((((x'')) NOT BETWEEN ((NULL)) AND ((x'e845'))))OR(CASE 0Xffffffff81a45b80  WHEN NULL THEN x'28edd25d' END)))AND(CASE x'54df'  WHEN 0Xffffffffcb927f13 THEN '971062163' WHEN x'7816' THEN 0.29325585260170817 WHEN NULL THEN 0.34897356168572125 END))) GROUP BY (- (((((((((vt0.c1)AND(vt0.c0)))AND(vt0.c2)))AND(vt0.c1)))OR(vt0.c0)))) HAVING ((((((vt0.c1)||(vt0.c2)))OR(((vt0.c0)+(vt0.c2)))))AND((~ (vt0.c2)))); -- 0ms;
SELECT (('')>>(((vt0.c2)+(vt0.c0)))), vt0.c0, (((((('|y')AND(vt0.c1)))AND(vt0.c1))) IS FALSE) FROM vt0; -- 0ms;
SELECT ALL ((CAST('1265696557' AS TEXT))|(vt0.c2)), (((vt0.c0) ISNULL) IN ()), TRIM(vt0.c1, 0xfffffffffefe484d) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), x'', AVG((vt0.c2 IN ())) OVER () FROM vt0 LIMIT 1792224432; -- 0ms;
SELECT DISTINCT 'TRUE' FROM vt0; -- 0ms;
SELECT DISTINCT ((CAST(vt0.c0 AS BLOB))||((((vt0.c1))>=((vt0.c0))))) FROM vt0; -- 0ms;
SELECT ALL SUM(((vt0.c0) NOT BETWEEN (0.7060319709225407) AND (NULL))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL, ((CASE WHEN vt0.c1 THEN vt0.c0 END) NOT BETWEEN (((((((((vt0.c2)OR(vt0.c0)))AND(vt0.c1)))AND(vt0.c2)))AND(vt0.c1))) AND ('G*')), ((((((((((((NULL)AND(((vt0.c2) NOT BETWEEN (vt0.c1) AND (0.42294019929384485)))))AND(MIN(vt0.c2))))AND(((vt0.c2)>>(vt0.c1)))))OR(COUNT(vt0.c2))))AND(vt0.c0)))OR(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c1 END)), vt0.c1, (((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) IN ()), vt0.c0, (((((('-743699341')OR(vt0.c0)))AND(vt0.c0))) BETWEEN (((vt0.c2) NOTNULL)) AND ((((vt0.c0)) BETWEEN ((vt0.c2)) AND ((vt0.c0))))) FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2, vt0.c0, vt0.c1, NULL, vt0.c0, vt0.c1, vt0.c0)) BETWEEN ((vt0.c1, vt0.c0, vt0.c2, '393454997', vt0.c2, vt0.c2, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c1, vt0.c1, vt0.c1, vt0.c0, vt0.c0)))) IS TRUE) FROM vt0; -- 0ms;
SELECT (((vt0.c2 IN ())) BETWEEN ((vt0.c2 IN ())) AND (CASE vt0.c0  WHEN vt0.c0 THEN 1.91705272E9 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c2 THEN x'0e96' ELSE vt0.c1 END)) FROM vt0; -- 0ms;
SELECT DISTINCT '-631271572', x'', CAST(MIN(vt0.c1) AS BLOB) FROM vt0; -- 0ms;
SELECT ALL MAX(((('30183008')) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))), (~ (vt0.c2))), NTILE(TYPEOF((vt0.c1 IN (vt0.c0)))) OVER (), ((((0.37383440262548906) IS TRUE)) BETWEEN (((vt0.c2) IS TRUE)) AND ('847050647')) FROM vt0 WHERE (((('JGc)-')|(0X447b1e03)) IN ())) GROUP BY (- (NULLIF(DISTINCT x'', vt0.c2))); -- 0ms;
SELECT DISTINCT LAST_VALUE((((vt0.c1 IN ()))<(CAST(vt0.c0 AS BLOB)))) OVER () FROM vt0; -- 0ms;
SELECT DISTINCT (+ (HEX(DISTINCT vt0.c0))) FROM vt0 WHERE (((('z}je䈤8n')) BETWEEN ((((x'') BETWEEN (x'a354') AND (0.9196126287997836)))) AND ((CAST('528016633' AS TEXT))))) LIMIT 493129475; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0 WHERE (CAST(((((0.9772881392121211)OR('[m')))AND('-1202417992')) AS REAL)); -- 0ms;
SELECT DISTINCT AVG((vt0.c2 IN ())) FROM vt0 WHERE (((((0Xffffffffe7b19baf IN ())))<=((LIKELIHOOD('-312983158', 0.4082721064048087))))); -- 0ms;
SELECT CAST(((vt0.c1) IS TRUE) AS TEXT) FROM vt0; -- 1ms;
SELECT ALL CASE WHEN vt0.c0 COLLATE BINARY THEN vt0.c0 COLLATE RTRIM WHEN MIN(vt0.c1) THEN ((((vt0.c1)OR(vt0.c2)))OR(vt0.c2)) WHEN ((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c2)) THEN ((((vt0.c1)AND(vt0.c2)))OR(vt0.c2)) END FROM vt0 ORDER BY x''; -- 0ms;
SELECT DISTINCT ((((CAST(vt0.c0 AS TEXT))AND((~ (vt0.c0)))))OR((- (vt0.c2)))), vt0.c1, (((vt0.c0) ISNULL) IN ()) FROM vt0; -- 0ms;
SELECT 0.848334737818802 FROM vt0 WHERE (CASE ((((((((((((0x7243e730)AND('-608075419')))AND(0X58d9c630)))OR(2.09420809E9)))AND(x'')))AND(x'7d0c')))OR(x''))  WHEN ((NULL)-('twtyH/')) THEN (((x'', x'3523', 'LjC-Vw')) BETWEEN (('0.44696627471106454', 0.8203707105356591, 0x4c01abd4)) AND (('1132767892', x'', 0.2532014928670113))) WHEN -1140356531 THEN (('c') BETWEEN (x'') AND ('rA#u9ᔿ')) WHEN CAST(-1.166708254E9 AS INTEGER) THEN ((NULL)<(NULL)) ELSE (+ (x'')) END) GROUP BY ((x'') NOT NULL) HAVING ((COUNT(*)) ISNULL); -- 2ms;
SELECT DISTINCT ((((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)))|(CASE WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN x'b135' END)) FROM vt0 WHERE (IFNULL(DISTINCT ('-1010054671' IN ()), ((x'') NOTNULL))) ORDER BY CAST(vt0.c0 AS INTEGER) COLLATE NOCASE  NULLS FIRST; -- 1ms;
SELECT DISTINCT CAST(((vt0.c1)IS NOT(vt0.c2)) AS BLOB), (((((('0.3943311470651766')AND(x'')))OR(vt0.c2))) NOT BETWEEN (RTRIM(vt0.c0)) AND (json_array_length(x''))), COUNT(((vt0.c0)-(vt0.c0))) FROM vt0 WHERE ((((x'')) NOT BETWEEN (((((NULL)) NOT BETWEEN (('06!Y좄 koK')) AND (('J+gO'))))) AND ((LIKELY(DISTINCT 0.9737172249456643))))) LIMIT 1138527052 OFFSET -2074845992;SELECT DISTINCT ((((vt0.c2)AND(vt0.c1)))OR(vt0.c1)) COLLATE NOCASE FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c2)AND((vt0.c1 IN ()))))AND(((vt0.c0)%(vt0.c0)))) FROM vt0 WHERE ((NOT ((0x3a626597 IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN vt0.c0 THEN (vt0.c2 IN (vt0.c1, vt0.c2)) WHEN vt0.c2 COLLATE BINARY THEN '挗zs~>tK2' WHEN ((vt0.c2) ISNULL) THEN (vt0.c0 IN ()) END FROM vt0; -- 0ms;
SELECT ALL ((MIN(vt0.c0))>(NULLIF(0.07852728107123308, vt0.c1))), CAST((vt0.c2 IN ()) AS TEXT), DENSE_RANK() OVER () FROM vt0; -- 0ms;
SELECT (((vt0.c1, vt0.c1, vt0.c0, vt0.c2, vt0.c1)) NOT BETWEEN (((NOT (vt0.c2)), vt0.c1, (((vt0.c1, vt0.c0, vt0.c1))<((vt0.c2, 0x3849020e, vt0.c0))), SUBSTR(vt0.c2, vt0.c0), vt0.c2 COLLATE NOCASE)) AND ((((((vt0.c1)OR(0x39138b57)))OR(vt0.c1)), (vt0.c0 IN ()), ((((vt0.c0)OR(vt0.c0)))AND(vt0.c0)), x'7576', (x'e795' IN ())))) FROM vt0 ORDER BY TRIM(DISTINCT (NOT (vt0.c1)), LIKELIHOOD(DISTINCT NULL, 0.9421139089857922)) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 ORDER BY CASE WHEN vt0.c2 THEN vt0.c2 END  NULLS LAST LIMIT 359094851; -- 0ms;
SELECT ((LOWER(DISTINCT vt0.c2))>=(((vt0.c1)>=(vt0.c1)))) FROM vt0 LIMIT -782958885 OFFSET -1733647212; -- 0ms;
SELECT ALL COUNT(vt0.c2), (+ (((vt0.c2) NOT BETWEEN (vt0.c2) AND (vt0.c1)))), ((((TRIM(0.22046359562387163, vt0.c0))AND(CASE vt0.c2  WHEN '1236831106' THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c0 END)))AND(UPPER(''))) FROM vt0 WHERE (((((CASE WHEN x'' THEN 0.4629347444785008 WHEN 0.5911174208950231 THEN 0x4c01abd4 WHEN '-743699341' THEN 0.4904352788230144 ELSE 0.3761794837002722 END)OR(CAST('-1695678711' AS INTEGER))))AND(CASE ''  WHEN x'f550' THEN 0.3068308166830872 END))) GROUP BY CAST(((vt0.c2) ISNULL) AS INTEGER); -- 0ms;
SELECT ((((vt0.c0)*(vt0.c1)))>((vt0.c0 IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c2 IN ()) IN (((0xffffffffd13b19d7)>=(vt0.c0)))) FROM vt0 WHERE (TRIM(0.20245246368063807)); -- 0ms;
SELECT ALL (((vt0.c0 IN ()))!=(vt0.c1 COLLATE BINARY)), NULL, x'' FROM vt0 ORDER BY CASE WHEN ((1531654918) ISNULL) THEN ((vt0.c0) NOTNULL) WHEN CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN -2.081430009E9 THEN vt0.c0 WHEN 0.49848887984956025 THEN vt0.c2 END THEN CASE vt0.c2  WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c0 END WHEN vt0.c2 THEN CAST(0Xffffffff8590549c AS TEXT) ELSE CAST(vt0.c0 AS BLOB) END DESC  NULLS FIRST; -- 0ms;
SELECT ((CASE WHEN vt0.c1 THEN vt0.c0 END) ISNULL) FROM vt0; -- 0ms;
SELECT DISTINCT (((CAST(vt0.c1 AS NUMERIC)))==((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c2 END))) FROM vt0 GROUP BY (((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c1)))) NOT BETWEEN (((((vt0.c0)OR(vt0.c1)))AND(vt0.c2))) AND (((vt0.c2)+(vt0.c2)))); -- 0ms;
SELECT DISTINCT MIN(((vt0.c1) IS FALSE)) FROM vt0 ORDER BY (('1743335196') IS FALSE) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((vt0.c2)) BETWEEN ((vt0.c2)) AND ((vt0.c0)))) IS FALSE), TRIM(DISTINCT ((((vt0.c2)AND('1J')))OR(vt0.c1)), CAST(vt0.c2 AS INTEGER)), (TYPEOF(DISTINCT vt0.c0) IN ()) FROM vt0 WHERE (((NULL COLLATE NOCASE) NOT BETWEEN (((NULL)+(NULL))) AND ((('') NOT BETWEEN ('586562518') AND (0.3664581567821872))))) LIMIT 926587518; -- 0ms;
SELECT ALL ((((vt0.c1) NOTNULL))IS((((vt0.c0, vt0.c0, vt0.c1)) BETWEEN ((vt0.c1, vt0.c1, vt0.c0)) AND ((vt0.c2, vt0.c2, vt0.c2))))) FROM vt0 WHERE (((json_remove(NULL, 0.8600524487062903, '93021495', NULL)) BETWEEN (((0.7823431901994411)+(374048503))) AND ((((NULL))<=((NULL)))))); -- 0ms;
SELECT DISTINCT ((HEX(DISTINCT vt0.c1))*((vt0.c0 IN (vt0.c0, vt0.c2)))) FROM vt0; -- 0ms;
SELECT ALL 294199476 FROM vt0 LIMIT 1345829525; -- 0ms;
SELECT ALL vt0.c1 FROM vt0 WHERE (((((x'186f') NOT NULL))IS NOT(LIKE(0X1195c2fd, '', 'I')))); -- 0ms;
SELECT ALL (((vt0.c1)AND(vt0.c1)) IN ()) FROM vt0 WHERE (((((NULL) BETWEEN (-1074901625) AND (0.13166665909308195))) IS TRUE)); -- 0ms;
SELECT DISTINCT (~ (((vt0.c1)==(vt0.c2)))) FROM vt0; -- 0ms;
SELECT json_object(IFNULL(vt0.c2, vt0.c1), MIN(vt0.c0), CASE WHEN vt0.c0 THEN vt0.c0 END, vt0.c2) FROM vt0 ORDER BY CASE WHEN ((vt0.c2) NOT NULL) THEN UPPER(DISTINCT vt0.c1) END DESC;SELECT DISTINCT vt0.c2 FROM vt0; -- 0ms;
SELECT DISTINCT AVG('0.4005168257391367') FROM vt0 WHERE (((CASE WHEN x'' THEN 0.31629740824533625 ELSE '-1044317939' END) IS FALSE)); -- 0ms;
SELECT ((CAST(vt0.c2 AS REAL))IS(((((x'd715')AND(vt0.c1)))OR(vt0.c2)))), (((vt0.c1)) BETWEEN ((((vt0.c1)IS(vt0.c0)))) AND ((CASE WHEN vt0.c1 THEN vt0.c2 ELSE vt0.c0 END))), CASE (((vt0.c2))>=((0Xffffffffccc40320)))  WHEN load_extension(vt0.c2) THEN (vt0.c2 IN ()) WHEN (vt0.c0 IN ()) THEN ((vt0.c1)AND(vt0.c0)) WHEN (- (vt0.c2)) THEN ((vt0.c0) BETWEEN (vt0.c2) AND (vt0.c1)) ELSE CAST(vt0.c1 AS BLOB) END FROM vt0;SELECT ALL (((((vt0.c0)<(vt0.c0))))>(((+ (NULL))))), MIN(']}'), ((vt0.c2 IN ()) IN ()) FROM vt0 WHERE (TRIM(0.9278643771080607 COLLATE RTRIM)); -- 1ms;
SELECT DISTINCT CAST(TOTAL(vt0.c0) AS NUMERIC), (((~ (vt0.c1))) NOT BETWEEN (((vt0.c1)IS(vt0.c0))) AND (((vt0.c2) IS TRUE))), MIN(((vt0.c1) IS FALSE)), (((+ ('477843288')))-(((vt0.c1)-(vt0.c1)))), (+ (UNLIKELY(DISTINCT vt0.c1))) FROM vt0 WHERE (((((((((CAST(NULL AS NUMERIC))OR(((NULL)>>(0x2e258c55)))))OR(((x'83c7')IS NOT('	穧&T')))))OR(x'')))OR(((NULL)>=(x'01a3'))))); -- 0ms;
SELECT ALL AVG(((((vt0.c0)OR(vt0.c1)))AND(vt0.c1))) OVER ( PARTITION BY (((CASE vt0.c2  WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END))>=((CAST(vt0.c2 AS TEXT)))), LIKELY(DISTINCT LOWER(DISTINCT vt0.c1))) FROM vt0 WHERE ((0.5793293805705074 IN ()) COLLATE NOCASE COLLATE BINARY); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c1 AS TEXT) THEN TOTAL(vt0.c0) ELSE ((((vt0.c1)OR(vt0.c0)))AND(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT (((((vt0.c2)) NOT BETWEEN ((vt0.c1)) AND ((vt0.c1))))<(CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT (NOT (vt0.c1 COLLATE BINARY)) FROM vt0 WHERE (((((1776695917)<<(0.16208999957533532)))<=((- (x'd1c3'))))) LIMIT -904753360; -- 0ms;
SELECT DISTINCT ((((+ (vt0.c1))))>(((vt0.c1 IN (vt0.c1))))) FROM vt0 WHERE (((((680930815, x'', x'a210')) NOT BETWEEN ((0.6867523533864143, '-1877070152', x'')) AND ((NULL, 1754486950, x'89a2'))) IN (('' IN ())))); -- 0ms;
SELECT COUNT(((vt0.c1) ISNULL)) FROM vt0; -- 0ms;
SELECT ALL LEAD(((((vt0.c0)IS(vt0.c0))) BETWEEN (((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1))) AND ((((((((('-800855083')AND(vt0.c2)))OR(vt0.c2)))OR(vt0.c0)))AND(vt0.c0)))), vt0.c0, (+ (0xffffffff908e8117))) OVER ( GROUPS '-1665308219' PRECEDING EXCLUDE CURRENT ROW) FROM vt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM vt0 WHERE ((+ (TYPEOF(DISTINCT 1.086802983E9)))) ORDER BY ((((vt0.c0)+(vt0.c1)))&(vt0.c0 COLLATE NOCASE))  NULLS FIRST, CAST(((vt0.c1) NOTNULL) AS INTEGER) ASC  NULLS FIRST, CASE ((vt0.c0)||(NULL))  WHEN vt0.c0 COLLATE NOCASE THEN ((((vt0.c1)OR(vt0.c0)))OR(vt0.c2)) END; -- 0ms;
SELECT DISTINCT COUNT((vt0.c0 IN ())) FROM vt0 WHERE (json_extract(NULL, ((0.5367889134959294) BETWEEN (NULL) AND ('TB⟹''NA')))); -- 0ms;
SELECT ALL vt0.c1, (((vt0.c1)) BETWEEN ((((((vt0.c2)OR(vt0.c1)))AND(vt0.c1)))) AND ((NULL))), ((((NULL)<<(vt0.c0)))*(((vt0.c0) IS TRUE))) FROM vt0 ORDER BY ((HEX(vt0.c2))<=(((vt0.c1)OR(vt0.c2))))  NULLS FIRST, vt0.c0 ASC  NULLS FIRST LIMIT 879687715; -- 0ms;
SELECT ((((CAST(vt0.c2 AS TEXT))OR(((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c1)))))OR(CASE WHEN vt0.c1 THEN x'' ELSE vt0.c2 END)) FROM vt0 WHERE (((((CASE WHEN x'4cd8' THEN NULL ELSE 0.8309135481072261 END)OR(CASE '-1024988463'  WHEN 'l^<' THEN 'NL>CJ{F>c' WHEN '' THEN '' WHEN x'e1d8' THEN 0.9107415269852893 ELSE x'03ac' END)))AND(-574848291 COLLATE NOCASE))) LIMIT 718694934; -- 0ms;
SELECT DISTINCT (((((vt0.c2 IN ()))OR(TRIM(DISTINCT x'dd26', vt0.c1))))AND(((vt0.c0) NOT NULL))), SUM(COUNT(CAST(vt0.c0 AS REAL))), (+ (CASE WHEN vt0.c0 THEN vt0.c2 END)) FROM vt0;SELECT DISTINCT (((vt0.c1, vt0.c2, vt0.c0)) NOT BETWEEN ((vt0.c1, vt0.c0, vt0.c1)) AND ((vt0.c0, vt0.c1, vt0.c0))) COLLATE NOCASE FROM vt0 WHERE (((('')AND(x'')) IN ())); -- 0ms;
SELECT ((vt0.c1)>(NULL)), x'4e60', ((((TOTAL(NULL))OR(((vt0.c1)<=(x'')))))AND(((vt0.c2) NOT BETWEEN (vt0.c0) AND (vt0.c0)))) FROM vt0 WHERE ((((x'', x'66fc', x'5c68')) BETWEEN ((NULL, 0.5886716653959179, x'f3d0')) AND (('''wud	/7{', 'xN', NULL))) COLLATE NOCASE); -- 0ms;
SELECT MAX(vt0.c2 COLLATE BINARY, (NOT (vt0.c2))), INSTR(((vt0.c1) NOTNULL), '_G칱#j\}(*'), ((LOWER(vt0.c1)) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT 1.255699088E9 FROM vt0 WHERE ((((((((((((((((('-565615518')OR(x'be24')))OR(0.13333725571242327)))OR(0.32977421176502)))AND(0.8726725671360247)))AND(load_extension(0.006219252006591014))))OR((NULL IN ()))))OR((0X58d9c630 IN ()))))OR(json_insert('926656038', NULL, 0.5993791264071999)))) LIMIT 1383236668 OFFSET 504158589;SELECT DISTINCT ((vt0.c1)*(vt0.c1)) COLLATE RTRIM FROM vt0; -- 0ms;
SELECT CAST(vt0.c0 COLLATE RTRIM AS REAL) FROM vt0; -- 1ms;
SELECT TOTAL((~ (''))) COLLATE BINARY FROM vt0 WHERE ((~ (('1776695917' IN ())))) ORDER BY (~ (((((((((0.1243693956567905)AND(vt0.c1)))AND(vt0.c2)))OR(vt0.c1)))OR(vt0.c0)))) ASC, ((vt0.c1) NOTNULL) DESC; -- 0ms;
SELECT ALL (((~ (vt0.c2))) IS FALSE) FROM vt0; -- 0ms;
SELECT DISTINCT ((vt0.c2 COLLATE RTRIM) ISNULL), ((CAST(vt0.c0 AS REAL)) NOT NULL), (((vt0.c1 IN ())) NOTNULL) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN 0.5795780177694244 THEN vt0.c2 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c1 ELSE vt0.c0 END COLLATE RTRIM FROM vt0; -- 0ms;
SELECT ALL (- (((vt0.c1) IS FALSE))) FROM vt0 WHERE ((((NULL)|(NULL)) IN ((NOT (x''))))); -- 0ms;
SELECT DISTINCT ((((vt0.c1) IS TRUE))>(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))), ((((vt0.c0) ISNULL)) IS FALSE), vt0.c1 FROM vt0 WHERE (json_valid(x'93f25595' COLLATE BINARY)); -- 0ms;
SELECT MAX(((((vt0.c2)AND(vt0.c2)))OR(-0.0))) FROM vt0 WHERE ((0.26076828764512916 COLLATE BINARY IN ((-8.56931272E8 IN ())))); -- 0ms;
SELECT DISTINCT (~ (x'a01b')) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c2) BETWEEN ('Q7') AND (vt0.c2)) IN ()) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((UPPER(vt0.c0))<>(((vt0.c0) NOT BETWEEN (vt0.c2) AND (vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT '][' FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c1)AND(load_extension(vt0.c2, vt0.c1))))OR(((vt0.c1)GLOB(vt0.c0)))) FROM vt0 WHERE (((LOWER(x'1cda')) NOT BETWEEN (CASE WHEN 0.9864357286898252 THEN NULL END) AND (CASE WHEN '510173007' THEN x'' WHEN 0.07313830148471212 THEN NULL WHEN '68160689' THEN '-1652747566' WHEN NULL THEN -1652450332 WHEN NULL THEN 'zciK10ﻛ' WHEN x'' THEN NULL WHEN 0.9892754306285939 THEN 'now' ELSE 0X212cb883 END))); -- 1ms;
SELECT DISTINCT ((TYPEOF(DISTINCT vt0.c1))LIKE((((vt0.c0)) BETWEEN ((vt0.c1)) AND ((vt0.c0))))), 0.4291769350255872, (((((vt0.c1, vt0.c2, vt0.c1)) BETWEEN ((vt0.c1, vt0.c0, vt0.c0)) AND ((vt0.c2, vt0.c1, vt0.c1))))>(((((vt0.c0)OR(vt0.c0)))OR(vt0.c1)))) FROM vt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE RTRIM)/(CASE vt0.c2  WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN NULL WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c0 END)) FROM vt0 WHERE (((CASE WHEN 'c6>%rb' THEN 0.8860642991633473 WHEN -150355973 THEN '393454997' WHEN x'7389' THEN x'b462' END) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE vt0.c1  WHEN CAST(vt0.c0 AS INTEGER) THEN LIKELY(DISTINCT vt0.c2) ELSE vt0.c2 COLLATE BINARY END FROM vt0 WHERE (((((x'') IS TRUE)) NOT NULL)); -- 0ms;
SELECT CASE 3.93454997E8  WHEN (((vt0.c2))>((vt0.c0))) THEN LIKELIHOOD(vt0.c0, 0.20756632818892518) END, (NOT (((vt0.c0)-(vt0.c2)))), TOTAL(vt0.c1 COLLATE NOCASE) FROM vt0 WHERE ((~ (CAST(NULL AS REAL)))); -- 1ms;
SELECT ALL ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c2 WHEN vt0.c2 THEN vt0.c2 WHEN vt0.c1 THEN vt0.c0 WHEN vt0.c1 THEN vt0.c1 WHEN vt0.c2 THEN NULL ELSE vt0.c2 END) NOT BETWEEN (AVG(vt0.c0)) AND ((vt0.c1 IN ()))) FROM vt0 ORDER BY '1081625935' ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE (vt0.c0 IN ())  WHEN ((vt0.c0) NOT NULL) THEN ((vt0.c0)>=(vt0.c0)) END FROM vt0; -- 0ms;
SELECT DISTINCT ((((((((CAST(vt0.c1 AS REAL))OR(((((vt0.c2)OR(vt0.c1)))OR(vt0.c2)))))OR(((vt0.c2)LIKE(vt0.c0)))))AND(((vt0.c1) BETWEEN (vt0.c1) AND (vt0.c1)))))OR((+ (vt0.c1)))) FROM vt0; -- 1ms;
SELECT DISTINCT MAX(COUNT(vt0.c1)) FROM vt0 WHERE (CASE NULL COLLATE NOCASE  WHEN ((x'') BETWEEN (0.6150734183849597) AND (0.23770025121967298)) THEN ((('2W', NULL, 0.9380492882053932)) BETWEEN (('', NULL, NULL)) AND (('-1653206650', NULL, NULL))) END);SELECT (((x'', vt0.c1, vt0.c2)) NOT BETWEEN ((((vt0.c1) IS TRUE), (((vt0.c2, vt0.c2, vt0.c2)) NOT BETWEEN ((vt0.c1, x'81bd', vt0.c2)) AND ((vt0.c0, vt0.c0, vt0.c1))), (((vt0.c1))>((vt0.c2))))) AND ((NULL, MIN(vt0.c1), SUM(vt0.c2)))) FROM vt0 GROUP BY ((((((vt0.c2)AND(vt0.c2)))AND(vt0.c0))) BETWEEN (vt0.c0) AND (((((((((vt0.c2)AND(vt0.c1)))OR(vt0.c2)))AND(vt0.c0)))OR(vt0.c1)))), (vt0.c2 COLLATE NOCASE IN ()), NULL HAVING vt0.c0; -- 0ms;
SELECT ALL (~ (vt0.c2 COLLATE RTRIM)) FROM vt0 WHERE ((((((((NULL)OR(NULL)))OR(0.8455157249996247))))<((CASE 0X3a626597  WHEN '1383236668' THEN NULL WHEN NULL THEN 'ug]w' WHEN 0x3c117ce9 THEN NULL END)))) GROUP BY CASE ((((vt0.c1)OR(vt0.c2)))OR(vt0.c2))  WHEN ((((((((vt0.c2)AND(vt0.c1)))OR(0X39233118)))AND(vt0.c1)))AND(vt0.c0)) THEN ((vt0.c1) NOT BETWEEN (vt0.c0) AND (vt0.c0)) END, (vt0.c0 IN ()), CAST(((vt0.c0)>=(vt0.c0)) AS TEXT); -- 0ms;
SELECT ALL (((((vt0.c1, vt0.c1, vt0.c2)) BETWEEN ((vt0.c1, vt0.c1, vt0.c1)) AND ((vt0.c1, vt0.c2, vt0.c0))))OR(((vt0.c0)IS(vt0.c0)))), (x'' IN ()), COUNT(*) FROM vt0; -- 0ms;
SELECT ALL vt0.c1 FROM vt0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN vt0.c2 THEN vt0.c2 END AS INTEGER), (((vt0.c0 IN (vt0.c1))) BETWEEN (((((vt0.c0)AND(vt0.c2)))OR(vt0.c2))) AND (CASE WHEN '-1480831352' THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN x'' THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 END)), (((~ (vt0.c0))) ISNULL) FROM vt0 WHERE (((((NULL COLLATE NOCASE)AND((((('')OR(NULL)))OR(x'9d5f')))))AND(((x'') BETWEEN ('') AND (NULL))))); -- 0ms;
SELECT ALL ((vt0.c2 COLLATE BINARY)IS(((vt0.c1) IS FALSE))) FROM vt0 WHERE (((x'' COLLATE RTRIM)/(((NULL)LIKE(x''))))) LIMIT -872572936 OFFSET 1; -- 0ms;
SELECT DISTINCT (~ (vt0.c2)), ((CAST(vt0.c1 AS REAL))=((('1997357715')<<(vt0.c2)))), vt0.c1 FROM vt0 WHERE (((('-145202669' IN ())) BETWEEN ('\N^' COLLATE BINARY) AND ((x'' IN ())))); -- 0ms;
SELECT ((vt0.c0 COLLATE NOCASE) NOTNULL) FROM vt0; -- 0ms;
SELECT x'37f9' FROM vt0 GROUP BY CHANGES(); -- 1ms;
SELECT DISTINCT json_patch(((((vt0.c2)AND(vt0.c2)))OR(vt0.c0)), CAST(vt0.c2 AS BLOB)) FROM vt0; -- 0ms;
SELECT ALL (((vt0.c0 IN ()))>(((NULL)/(vt0.c1)))) FROM vt0; -- 0ms;
SELECT DISTINCT CAST(AVG(x'1fc7') AS BLOB) FROM vt0; -- 0ms;
SELECT DISTINCT CAST((((vt0.c0)) BETWEEN ((vt0.c0)) AND ((vt0.c0))) AS NUMERIC), 0.9797608659316518, CAST(vt0.c2 AS INTEGER) FROM vt0 WHERE (((((x'08ed')IS(NULL)))>((((((((('543191620')AND('즑鰄')))OR(x'751a')))AND(x'21f9')))AND('-*똶걃5'))))); -- 0ms;
SELECT ALL ((((CAST(vt0.c2 AS INTEGER))AND(((vt0.c1) ISNULL))))AND(vt0.c2)) FROM vt0; -- 0ms;
SELECT DISTINCT CASE (((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c0)))  WHEN ((vt0.c1)||(vt0.c1)) THEN COUNT(vt0.c1) END FROM vt0; -- 0ms;
SELECT DISTINCT (+ (x'')) FROM vt0; -- 0ms;
SELECT DISTINCT ((((vt0.c0) ISNULL)) BETWEEN (CASE vt0.c0  WHEN vt0.c0 THEN vt0.c0 END) AND ((((vt0.c1, vt0.c2, vt0.c1))<((x'79ff', vt0.c2, vt0.c0))))) FROM vt0 WHERE (COALESCE((+ ('')), ((765623984) IS TRUE))) ORDER BY LIKE(vt0.c1, CASE WHEN vt0.c0 THEN vt0.c0 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c1 ELSE vt0.c2 END, '0')  NULLS LAST; -- 0ms;
SELECT (+ (CASE WHEN vt0.c1 THEN vt0.c0 END)) FROM vt0; -- 0ms;
SELECT NULL FROM vt0 NOT INDEXED WHERE ((((((-1.797416553E9))<=((NULL)))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((((((NULL)AND(vt0.c0)))AND(vt0.c2))) IS TRUE) FROM vt0; -- 1ms;
SELECT DISTINCT ((((vt0.c1)IS NOT(vt0.c2)))!=(('1186192191' IN ()))) FROM vt0; -- 0ms;
SELECT DISTINCT (((x'' IN ()))GLOB(((vt0.c2) NOTNULL))) FROM vt0 ORDER BY (LIKELY(vt0.c1) IN ()); -- 0ms;
SELECT GROUP_CONCAT(((vt0.c2)&(vt0.c0))) OVER () FROM vt0 WHERE (TRIM(COALESCE('680930815', NULL, 0.37392806633754627, '-991926950'), ((('x,'))<(('-1317935846'))))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST(vt0.c2 AS BLOB) THEN (~ (vt0.c1)) ELSE ((((vt0.c1)AND(vt0.c2)))AND(vt0.c1)) END, COUNT(*) OVER ( ROWS vt0.c2 PRECEDING), (((vt0.c1)) NOT BETWEEN ((vt0.c0)) AND ((vt0.c0))) COLLATE BINARY COLLATE BINARY FROM vt0;SELECT AVG(TRIM(vt0.c0)) OVER () FROM vt0 WHERE (((((x'')AND('>'))) NOT BETWEEN (CASE ''  WHEN x'' THEN x'' WHEN x'b8e2' THEN '' WHEN '407169446' THEN NULL ELSE NULL END) AND (CASE NULL  WHEN '\r,S' THEN 0xffffffff993ffa1a ELSE NULL END))); -- 0ms;
SELECT DISTINCT CASE WHEN ((vt0.c1)>>(vt0.c1)) THEN CASE WHEN '^[\r/gHK' THEN vt0.c2 WHEN vt0.c0 THEN vt0.c0 WHEN 9.91703143E8 THEN vt0.c0 END ELSE (vt0.c0 IN (vt0.c1, vt0.c0, vt0.c2)) END, ((((vt0.c1) BETWEEN (vt0.c2) AND (vt0.c0)))=(((((vt0.c1)OR(vt0.c1)))OR(4.77843288E8)))), LIKELIHOOD(DISTINCT ((((((((((((vt0.c0)AND(vt0.c0)))OR(vt0.c2)))AND(x'')))OR(vt0.c1)))OR(vt0.c2)))AND(x'')), 0.23006229082606466) FROM vt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((NULL))>((vt0.c2))) THEN CASE WHEN vt0.c2 THEN vt0.c2 ELSE NULL END ELSE vt0.c1 END, (('-1822332147')=(0.37100229685110686)), CAST(((((vt0.c2)OR(vt0.c1)))OR(vt0.c0)) AS INTEGER) FROM vt0 WHERE (((0.9342362707479813) ISNULL)); -- 0ms;
SELECT DISTINCT ((vt0.c1 COLLATE RTRIM) BETWEEN (((vt0.c0) NOTNULL)) AND (AVG(0.26639439801571674))) FROM vt0 WHERE (((((((x'')OR(0X327cf797)))OR('-380602318'))) IS TRUE)) GROUP BY vt0.c1; -- 0ms;
SELECT DISTINCT ((((0.19641245203137325) BETWEEN (vt0.c1) AND (vt0.c0)))+(((((vt0.c0)OR(vt0.c1)))OR('')))) FROM vt0 WHERE ((((0.3681190969213042 IN ()))%(((0.15483412353431492)/(x''))))); -- 1ms;
SELECT DISTINCT ((((vt0.c1) ISNULL)) BETWEEN (vt0.c2) AND (CAST(vt0.c2 AS BLOB))), COUNT(*) OVER (), (NOT (SQLITE_COMPILEOPTION_GET(vt0.c1))) FROM vt0; -- 0ms;
SELECT DISTINCT ((('br', HEX(-1044317939), ((vt0.c0)*(vt0.c1))))>=((MAX(NULL), CASE vt0.c2  WHEN vt0.c1 THEN vt0.c0 END, CAST(vt0.c2 AS INTEGER)))) FROM vt0 LIMIT -593348900; -- 0ms;
SELECT DISTINCT COUNT('-1915577788') FROM vt0; -- 0ms;
SELECT ALL CAST(((vt0.c1) NOTNULL) AS TEXT), (((vt0.c2))<=((((((vt0.c0)AND(vt0.c1)))OR(vt0.c2))))), ((CASE WHEN vt0.c0 THEN vt0.c2 ELSE vt0.c0 END)IS NOT(((vt0.c0) IS TRUE))) FROM vt0 GROUP BY ((vt0.c1 COLLATE NOCASE)+(MIN(x'', vt0.c1))) LIMIT 1155369138 OFFSET 1412194049; -- 0ms;
SELECT CAST(MAX(vt0.c1) AS REAL), COUNT(*) OVER (), SUBSTR((NOT (vt0.c2)), (('')%(x'e07e'))), (vt0.c1 COLLATE RTRIM IN (((((NULL)AND(vt0.c0)))AND(vt0.c0)), CAST(vt0.c1 AS REAL))), LOWER(DISTINCT LIKE(NULL, vt0.c0)), ABS(((vt0.c2)>(vt0.c0))), (+ (((vt0.c2) ISNULL))) FROM vt0 WHERE ((((((('qJkip')AND(NULL)))AND(NULL)))>>((- (NULL))))) ORDER BY ((((vt0.c0)%(vt0.c1)))|((+ (vt0.c2))))  NULLS LAST, ((((vt0.c2)*(vt0.c1)))OR((~ (vt0.c1)))) DESC; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM vt0; -- 0ms;
SELECT DISTINCT CAST(((vt0.c1)LIKE(vt0.c2)) AS INTEGER) FROM vt0; -- 0ms;
SELECT DISTINCT SUM(((vt0.c2)%(vt0.c0))) COLLATE NOCASE FROM vt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((vt0.c2) IS FALSE)) ISNULL) FROM vt0; -- 0ms;
SELECT ALL ((((vt0.c2, vt0.c0, vt0.c0)) BETWEEN ((vt0.c1, vt0.c1, '1696631023')) AND ((vt0.c0, vt0.c1, vt0.c2))) IN ()) FROM vt0; -- 0ms;
SELECT ALL CAST(x'2e90' AS REAL) FROM vt0 WHERE ((((+ (0.0943930325074771)))<<(''))); -- 0ms;
SELECT ALL ((((((x'')-(1654322561)))AND((((vt0.c2))=((vt0.c0))))))AND(NULL)) FROM vt0; -- 0ms;
SELECT DISTINCT ((NULL)>>(MAX(0.5326903282985387))) FROM vt0 WHERE (NULL) ORDER BY ((((((((vt0.c0)OR(vt0.c0)))AND(vt0.c1)))OR(0.7415903527136363)))AND(((vt0.c0)OR(vt0.c0)))) DESC, (('r-a\n')<=((+ (vt0.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT json_valid((vt0.c2 IN (vt0.c0))) FROM vt0 WHERE (((x'') NOT BETWEEN (((NULL) BETWEEN (x'3d55') AND (x''))) AND (-149784344 COLLATE BINARY))); -- 0ms;
SELECT ALL (~ (((vt0.c0) ISNULL))) FROM vt0; -- 0ms;
SELECT ALL vt0.c2, (((vt0.c2) ISNULL) IN (CASE WHEN vt0.c1 THEN 0.5791528600401832 WHEN vt0.c0 THEN vt0.c1 WHEN vt0.c2 THEN vt0.c2 ELSE 'FI+tE' END)), (((~ (vt0.c1)))AND(UPPER(vt0.c2))) FROM vt0 WHERE ((+ ((NULL IN (x'', ''))))) ORDER BY ((((((((LOWER(vt0.c1))OR(((vt0.c2) BETWEEN (vt0.c0) AND (vt0.c2)))))AND(vt0.c2)))OR(vt0.c1)))OR(((vt0.c0) NOT NULL))) ASC; -- 0ms;
SELECT DISTINCT ((((0.7805940535700473) NOT BETWEEN (vt0.c0) AND (vt0.c0)))+(((((vt0.c1)AND(vt0.c1)))OR(vt0.c0)))), (((vt0.c0 IN (vt0.c0, vt0.c2))) NOTNULL), COUNT(*) OVER (), LIKELIHOOD(((((((((vt0.c1)AND(vt0.c1)))AND(vt0.c0)))AND(NULL)))AND(vt0.c2)), 0.9266650001191509), (+ ((((vt0.c2)) NOT BETWEEN ((0.14288859451311242)) AND ((vt0.c0))))) FROM vt0 WHERE ((((CAST(x'6f5e' AS TEXT), ((('6Wfbd7'))>((0xffffffffd63290ac))), CAST(x'' AS TEXT)))<=(((('0.26639439801571674') BETWEEN ('1081625935') AND (x'')), ((x'34e3')LIKE('D*F_>Ey뿻佘')), ((('1784251618'))>=(('nh/f9^oa'''))))))); -- 0ms;
SELECT COUNT(*), ((vt0.c0)&(vt0.c1 COLLATE BINARY)), AVG((vt0.c1 IN ())) OVER ( RANGE  UNBOUNDED PRECEDING) FROM vt0 LIMIT 1688852867; -- 0ms;
SELECT ((vt0.c2) BETWEEN (vt0.c2) AND (x'adcb')) COLLATE RTRIM, CASE ((vt0.c2) BETWEEN (0.31759583028908256) AND (vt0.c2))  WHEN ((((vt0.c1)AND(vt0.c1)))OR(x'be2f')) THEN CASE vt0.c1  WHEN vt0.c1 THEN vt0.c2 END WHEN json_patch(vt0.c1, vt0.c2) THEN (~ (vt0.c1)) WHEN (+ (vt0.c2)) THEN vt0.c1 ELSE ((vt0.c0)<>(vt0.c0)) END, ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))||((NOT (vt0.c2)))) FROM vt0 ORDER BY vt0.c0; -- 1ms;
SELECT DISTINCT ((CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END)-((vt0.c1 IN ()))) FROM vt0 WHERE ((((x'')) NOT BETWEEN ((x'' COLLATE RTRIM)) AND (('')))); -- 0ms;
SELECT DISTINCT LAG((((vt0.c2) NOT NULL) IN (UPPER(DISTINCT vt0.c1))), (((x''))<=((CAST(vt0.c2 AS TEXT)))), (((NOT (',Q')))<((vt0.c2 IN ())))) OVER (), (~ (((vt0.c1)+(vt0.c0)))), LAST_VALUE(((((vt0.c1 IN (vt0.c0)), CASE vt0.c0  WHEN vt0.c2 THEN vt0.c0 WHEN vt0.c2 THEN vt0.c1 WHEN vt0.c1 THEN vt0.c0 ELSE vt0.c1 END, CAST(vt0.c1 AS INTEGER)))>(((- (vt0.c0)), ((((vt0.c0)OR(NULL)))AND(vt0.c0)), CAST(vt0.c2 AS BLOB))))) OVER ( GROUPS ((vt0.c0 COLLATE NOCASE)LIKE(CAST(x'' AS REAL))) PRECEDING) FROM vt0 GROUP BY (((vt0.c2)) NOT BETWEEN ((vt0.c1 COLLATE BINARY)) AND ((((vt0.c1)<=(vt0.c0))))), (((CAST(vt0.c2 AS NUMERIC)))>=((CAST(vt0.c2 AS NUMERIC)))), vt0.c2 HAVING (((vt0.c1, vt0.c1, vt0.c1)) NOT BETWEEN ((vt0.c2, vt0.c1, vt0.c0)) AND ((vt0.c0, vt0.c2, -1.140356531E9))) COLLATE RTRIM; -- 0ms;
SELECT -1.50355973E8, (('') NOT BETWEEN (((vt0.c2)IS(vt0.c1))) AND (vt0.c2)), vt0.c0 FROM vt0 ORDER BY vt0.c1  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((vt0.c2)) NOT BETWEEN ((vt0.c2)) AND ((vt0.c2))))>=((((vt0.c1)) BETWEEN ((vt0.c0)) AND ((vt0.c2))))) FROM vt0; -- 0ms;
SELECT DISTINCT NULL FROM vt0; -- 0ms;
SELECT 0.8587848685691832 FROM vt0 LIMIT 1334907226; -- 0ms;
SELECT DISTINCT '', ((((vt0.c0) NOT BETWEEN (vt0.c1) AND (vt0.c1)))<=(((0.617973990805541) BETWEEN (NULL) AND (NULL)))), CASE (vt0.c0 IN ())  WHEN CASE vt0.c0  WHEN vt0.c1 THEN vt0.c0 END THEN CASE WHEN vt0.c1 THEN 0.946582780467934 END END FROM vt0; -- 0ms;
