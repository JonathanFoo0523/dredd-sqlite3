-- Time: 2024/06/06 02:57:05
-- Database: database13
-- Database version: 3.40.0
-- seed value: 1587034313
PRAGMA cache_size = 50000; -- 4ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-8'; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 INTEGER ); -- 3ms;
CREATE TEMP TABLE t1 (c0 REAL ); -- 0ms;
UPDATE t1 SET (c0)=(-397996233) WHERE ((x'')>>((((t1.c0))>((t1.c0))))); -- 0ms;
DROP TABLE IF EXISTS t1; -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
COMMIT; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (0.18437857586061168), (NULL), (NULL), (x''), ('m'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES ('>j'); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (-1973522433); -- 0ms;
CREATE UNIQUE INDEX i55 ON t1(((c0 COLLATE NOCASE) NOT NULL) COLLATE NOCASE ASC); -- 0ms;
CREATE INDEX i37 ON t1(CASE WHEN (c0 IN (c0, c0, c0)) THEN c0 COLLATE RTRIM ELSE c0 COLLATE BINARY END); -- 1ms;
UPDATE OR IGNORE t1 SET (c0, c0, c0)=(-3.97996233E8, '\n', 'C{') WHERE (NOT (TRIM(DISTINCT t1.c0, t1.c0))); -- 0ms;
REINDEX; -- 0ms;
UPDATE OR FAIL t1 SET (c0)=(NULL); -- 1ms;
PRAGMA main.auto_vacuum = NONE; -- 1ms;
UPDATE OR IGNORE t1 SET (c0, c0)=(0.4483996331624167, NULL) WHERE CASE ((t1.c0)||(t1.c0))  WHEN (t1.c0 IN ()) THEN CASE '\n'  WHEN '1655031879' THEN t1.c0 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN t1.c0 END WHEN ((t1.c0) IS FALSE) THEN '' WHEN (x'' IN ()) THEN ((((t1.c0)AND(t1.c0)))OR(t1.c0)) END; -- 0ms;
PRAGMA wal_checkpoint(TRUNCATE); -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0.4825093475179494); -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR IGNORE t1 SET (c0)=(1) WHERE ((((((t1.c0)AND(t1.c0)))AND(((t1.c0)>(t1.c0)))))AND(((t1.c0)>(t1.c0)))); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(0.3088039030841693) WHERE (((((t1.c0)OR(t1.c0)))AND(t1.c0)) IN ()); -- 0ms;
INSERT OR FAIL INTO t1 VALUES (x''); -- 0ms;
ALTER TABLE t1 ADD COLUMN c30 INT; -- 0ms;
INSERT OR IGNORE INTO t1(c30) VALUES ('5303735'); -- 0ms;
END; -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (0x3843d6a); -- 1ms;
REINDEX i37; -- 1ms;
INSERT OR ABORT INTO t1(c0) VALUES (NULL), (''), ('1309654657'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE INDEX i68 ON t1((+ (((x'')IS NOT(c30)))),CASE WHEN ((c0) ISNULL) THEN -1973522433 ELSE CASE WHEN c0 THEN c0 END END COLLATE BINARY) WHERE CASE WHEN ROUND(x'', x'') THEN LIKELY(DISTINCT c0) END; -- 0ms;
UPDATE OR IGNORE t1 SET c30=NULL, c30=NULL; -- 0ms;
PRAGMA cache_size; -- 0ms;
PRAGMA stats; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x''), ('-1973522433'), (x''); -- 0ms;
INSERT OR REPLACE INTO t0(c30, c0) VALUES (-1.973522433E9, '-573737252'); -- 0ms;
END; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((x'') NOT BETWEEN (NULL) AND ('')) IN ()); -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET c30='-397996233'; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL), (-1973522433), (1965421823); -- 0ms;
INSERT OR IGNORE INTO t0(c30) VALUES (135601223), (1.965421823E9), (x''), (NULL), (x'93fa'); -- 0ms;
CREATE VIRTUAL TABLE vt0 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('1655031879'); -- 0ms;
INSERT OR ROLLBACK INTO vt0(c0) VALUES (0Xffffffffdcd0792e); -- 0ms;
DELETE FROM sqlite_stat1 WHERE ((x'0ab1') NOT BETWEEN ('>j') AND ('-573737252')) COLLATE BINARY; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c96; -- 1ms;
INSERT OR ROLLBACK INTO t0(c30) VALUES (-1); -- 0ms;
UPDATE OR IGNORE t0 SET c30=NULL WHERE '-590317266'; -- 0ms;
UPDATE OR IGNORE t0 SET c96=0.34375641920500766 WHERE CAST(((((((((t0.c96)OR(t0.c96)))OR(t0.c96)))OR('-397996233')))AND(t0.c96)) AS INTEGER); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA busy_timeout = 10000; -- 0ms;
END; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c45; -- 2ms;
PRAGMA main.shrink_memory; -- 0ms;
CREATE INDEX i61 ON t0(c45 ASC,CAST((c30 IN ()) AS NUMERIC) COLLATE BINARY ASC) WHERE (((((c30))==((c45)))) NOT NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE t0 SET c30=-640737362; -- 1ms;
VACUUM; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c45=x'' WHERE ((t0.c45)OR(((t0.c45)OR(t0.c30)))); -- 0ms;
INSERT OR ROLLBACK INTO t0(c45) VALUES (x''); -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2) VALUES (-1520278381, x''); -- 1ms;
UPDATE OR IGNORE t0 SET c45=0.4825093475179494 WHERE UNLIKELY(CAST(t0.c30 AS TEXT)); -- 0ms;
INSERT OR IGNORE INTO t0(c30) VALUES (NULL); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i87 ON t0(CAST(CAST(c45 AS TEXT) AS BLOB) COLLATE RTRIM,(((c45 IN (c45)))||(((NULL) BETWEEN (c45) AND (c45)))) DESC) WHERE COALESCE(DISTINCT json(c30), (~ (c30))); -- 0ms;
INSERT OR FAIL INTO rt0(c0, c2, c1) VALUES (NULL, 0X1f0bdf62, 0Xffffffffe018661c); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
REINDEX i87; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=0Xffffffffa79a83ee, c0=x'' WHERE ((((0Xffffffffa79a83ee, rt0.c2, rt0.c1))<((rt0.c2, rt0.c1, rt0.c2))) IN ()); -- 0ms;
PRAGMA main.integrity_check; -- 1ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL WHERE ((((NOT (rt0.c0)), rt0.c1, ((('1309654657', rt0.c2, rt0.c0)) BETWEEN ((rt0.c2, NULL, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c0)))))>((((rt0.c2) NOTNULL), ((rt0.c0)<<(rt0.c1)), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c1))))); -- 0ms;
PRAGMA main.optimize; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c2) VALUES (NULL, '1309654657'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0) AS SELECT LEAD(t1.c30, (+ ((- (t1.c45)))), CAST(((((((((t1.c45)AND(t1.c30)))OR(t1.c30)))AND(t1.c30)))AND(t1.c45)) AS TEXT)) OVER () FROM t1 WHERE ('520871778'); -- 0ms;
COMMIT; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (NULL), ('*o!+N7?뼹늃'), (NULL); -- 1ms;
INSERT OR IGNORE INTO rt0(c2, c1) VALUES (0Xffffffffd9cf1fae, 0.7118528590844526), (0.18437857586061168, '(bZ'), (NULL, 0.18996428951773014); -- 0ms;
INSERT OR IGNORE INTO t1(c30) VALUES (-881254569); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(x'') WHERE ((rt0.c1 IN ()) IN ()); -- 0ms;
INSERT OR IGNORE INTO t1(c45) VALUES ('520871778'); -- 0ms;
END; -- 0ms;
UPDATE OR REPLACE t1 SET (c30)=(0.703683474032183); -- 0ms;
ALTER TABLE t1 ADD COLUMN c23 TEXT; -- 1ms;
PRAGMA main.defer_foreign_keys; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1, c0) VALUES (0.18996428951773014, ''); -- 0ms;
INSERT OR REPLACE INTO rt0(c0) VALUES (''); -- 1ms;
INSERT OR ROLLBACK INTO t1(c30, c23) VALUES (x'', '206670125'); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.7118528590844526, 0.638668864870449); -- 0ms;
VACUUM main; -- 1ms;
UPDATE t1 SET c30='0.0', c45=0.8678133484987907 WHERE t1.c23; -- 1ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c1) VALUES (0.8678133484987907), (x'150c'), (0.7669690614595972); -- 0ms;
INSERT OR FAIL INTO t1(c45) VALUES (0.7339600289405409), (NULL), (x''); -- 0ms;
UPDATE t1 SET (c45)=(NULL); -- 0ms;
UPDATE OR ABORT rt0 SET c1=0x3843d6a; -- 1ms;
UPDATE OR ABORT rt0 SET (c1)=(0xffffffffe9d26f04) WHERE (NULL IN ()); -- 0ms;
ALTER TABLE t1 RENAME COLUMN c23 TO c42; -- 1ms;
INSERT OR IGNORE INTO t1(c30, c42) VALUES ('-890709323', x''), ('0.7339600289405409', x'6c40'), ((((CAST(5.20871778E8 AS BLOB), (+ (0x6ad6c352)), ((NULL) ISNULL)))!=((x'', (NOT ('Y%~>h鰾,)')), (('i')+(''))))), 520871778); -- 0ms;
UPDATE OR IGNORE rt0 SET c1=NULL; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((('418578789')) NOT BETWEEN ((CASE WHEN t1.c45 THEN 'C ' ELSE t1.c45 END)) AND ((COUNT(v0.c0)))), (rt0.c1 IN (rt0.c2)) COLLATE BINARY, x'aad271d5' FROM rt0;SELECT rt0.c0, AVG((('206670125')<(t1.c42))) OVER (), AVG(((t1.c42)/(v0.c0))) FROM t1 ORDER BY (((- (v0.c0))) NOT BETWEEN (LIKELIHOOD(DISTINCT t1.c42, 0.13578066650412235)) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END))  NULLS FIRST;SELECT ALL ((((((rt0.c1) NOT BETWEEN (t1.c30) AND (rt0.c1)))OR(((((t1.c45)AND(rt0.c1)))OR(rt0.c1)))))AND(((rt0.c1)<<(rt0.c0)))) FROM rt0 WHERE (((x'')>=(((NULL) NOT NULL)))) LIMIT 563745166;SELECT DISTINCT COUNT(*), ((((((rt0.c0) BETWEEN (rt0.c2) AND (t1.c45)))OR((((rt0.c1, rt0.c2, v0.c0, rt0.c0, rt0.c2))>((rt0.c2, t1.c42, rt0.c1, t1.c42, t1.c42))))))OR((((rt0.c2))!=((NULL))))), NULL FROM v0, rt0, t1 WHERE (((NULL) ISNULL)); -- 0ms;
SELECT DISTINCT (((((t1.c45))<>((NULL))))-((((t1.c45))<((t1.c42))))) FROM rt0, v0 WHERE ((((NULL))=((((x'') IS FALSE)))));SELECT DISTINCT ((t1.c42)%(t1.c30)) COLLATE NOCASE FROM rt0, t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(rt0.c0) COLLATE RTRIM COLLATE NOCASE FROM v0 WHERE ((((- ('58998122')))<=(((x'') NOTNULL))));SELECT ALL SUM('') FROM t1, v0 ORDER BY (((((t1.c45))<>((x''))))>=(((rt0.c0) ISNULL))), (t1.c30 IN (((x'') IS TRUE))) DESC  NULLS FIRST;SELECT DISTINCT ((CASE WHEN t1.c42 THEN rt0.c0 ELSE t1.c30 END)||(CAST(0x2327ceef AS TEXT))) FROM rt0, v0, t1 WHERE ((((('1e500')<=(0.22020136714033067)))>>(((((0.7867800817684342)AND('760723092')))OR(NULL))))); -- 0ms;
SELECT ALL MAX(CASE WHEN v0.c0 THEN t1.c42 END) FROM rt0, v0, t1 WHERE ((((('')-(1735353330))) IS FALSE)); -- 0ms;
SELECT DISTINCT t1.c30 FROM v0, t1 WHERE (0.2367102064788279) ORDER BY CASE WHEN ((rt0.c1)==(rt0.c0)) THEN t1.c30 COLLATE RTRIM ELSE ((((rt0.c2)AND(v0.c0)))AND('m')) END ASC;SELECT DISTINCT ((((((((0.10195204599571517)AND((((t1.c45))>=(('MU뻗+cJ'))))))AND(CASE WHEN v0.c0 THEN t1.c30 ELSE t1.c42 END)))AND(((t1.c42) NOTNULL))))AND(((rt0.c2)AND(v0.c0)))) FROM v0, rt0;SELECT DISTINCT GROUP_CONCAT((rt0.c2 IN (rt0.c2, t1.c42)) COLLATE BINARY), AVG((('#2Vx|') BETWEEN (t1.c42) AND (rt0.c1))) OVER (), (((rt0.c1 IN ())) BETWEEN ((((v0.c0, t1.c45, rt0.c2)) BETWEEN ((-1254805229, rt0.c2, rt0.c1)) AND ((rt0.c2, x'', t1.c45)))) AND (rt0.c1 COLLATE NOCASE)) FROM rt0, v0, t1; -- 8ms;
SELECT ((CASE x''  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((t1.c30)OR(rt0.c1)))) FROM t1, v0 LIMIT -890709323 OFFSET -1520758796;SELECT CASE WHEN v0.c0 THEN TOTAL(v0.c0) END FROM rt0, v0, t1 WHERE ((((x'ebaf', CASE NULL  WHEN 0.05607627081566158 THEN NULL ELSE NULL END, '-457378529' COLLATE RTRIM))>((((((0.9176326975919709)AND('yjd璂i')))OR('zk1B Ὓ~')), x'596c' COLLATE BINARY, ((827205705) BETWEEN ('%aL}') AND (x'f441e5ca')))))); -- 1ms;
SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM t1, rt0, v0 WHERE (CAST((0Xffffffffccd9a8f5 IN ()) AS REAL)); -- 0ms;
SELECT ((((((((rt0.c0)OR(v0.c0)))OR(rt0.c0)))OR((((t1.c45, rt0.c2, v0.c0))=((t1.c42, v0.c0, v0.c0))))))OR((~ (rt0.c0)))), rt0.c1, (('%al}' IN ()) IN ()) FROM t1, v0 WHERE (CASE WHEN ((('')) BETWEEN (('mI(I')) AND ((0.4483996331624167))) THEN (~ (0.827542008635189)) WHEN (((x'0a05'))<=(('O(kk/!'))) THEN (((((((('686947163')OR(0.26668093684510097)))AND('-790999390')))AND('-92655174')))AND(x'')) WHEN ((((x'8a1c')AND(7.7284051E8)))AND(0.5649530546012437)) THEN 0X219a118e END);SELECT DISTINCT CASE WHEN t1.c30 COLLATE RTRIM THEN CASE v0.c0  WHEN t1.c30 THEN t1.c30 ELSE rt0.c2 END END FROM t1 WHERE (TRIM(CASE ''  WHEN x'' THEN NULL WHEN NULL THEN -1.520278381E9 WHEN '-535271908' THEN NULL ELSE NULL END)) GROUP BY (((((((((t1.c30)OR(rt0.c2)))AND(v0.c0)))OR(rt0.c1)))OR(t1.c30)) IN ()), (((rt0.c2)) NOT BETWEEN ((((x'') BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((((t1.c42, 0.49483174146167497, rt0.c2))<=((t1.c45, x'6cf4', v0.c0)))))), NULLIF(t1.c45 COLLATE NOCASE, -7.9099939E8), (((rt0.c2, t1.c42, t1.c30)) NOT BETWEEN ((((rt0.c2)&(t1.c45)), CASE WHEN v0.c0 THEN t1.c45 WHEN t1.c30 THEN '%dt' WHEN v0.c0 THEN t1.c30 WHEN rt0.c0 THEN NULL WHEN rt0.c2 THEN t1.c30 END, v0.c0)) AND ((((((t1.c42)OR(rt0.c1)))OR(v0.c0)), ((t1.c42) NOT NULL), t1.c30 COLLATE RTRIM))), CAST((t1.c42 IN ()) AS REAL) HAVING (((rt0.c1)) NOT BETWEEN ((CAST(t1.c42 AS TEXT))) AND ((CAST(t1.c30 AS INTEGER))));SELECT DISTINCT ((CASE WHEN x'fa91' THEN t1.c45 WHEN t1.c45 THEN v0.c0 WHEN rt0.c2 THEN t1.c42 ELSE rt0.c2 END) NOT NULL) FROM v0, t1, rt0; -- 0ms;
SELECT (CASE WHEN rt0.c2 THEN t1.c42 ELSE rt0.c2 END IN ()) FROM v0, t1 WHERE ((- (((1.7976931348623157E308) IS FALSE)))) GROUP BY ((x'ef6a')<<(((t1.c45)>=(rt0.c1)))), (- (CASE t1.c42  WHEN rt0.c0 THEN t1.c45 WHEN rt0.c1 THEN x'f5b1' WHEN t1.c45 THEN t1.c45 ELSE t1.c45 END)), ((((CAST(rt0.c2 AS BLOB))OR((+ (rt0.c1)))))OR(((t1.c45)>=(rt0.c2)))), ((CASE rt0.c2  WHEN t1.c30 THEN rt0.c1 WHEN t1.c42 THEN v0.c0 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) IS TRUE), TOTAL_CHANGES() HAVING v0.c0;SELECT DISTINCT rt0.c2 FROM v0;SELECT ALL (((((((((t1.c45)AND(t1.c30)))OR(t1.c30)))OR(rt0.c1)))AND(rt0.c0)) IN ()), t1.c45, (- (t1.c42)), ((((t1.c30)==(t1.c42)))LIKE(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)))AND(t1.c45)))OR(t1.c42)))), t1.c45 FROM rt0, t1, v0 WHERE (((CASE WHEN '46521789' THEN 0.5650276005252587 ELSE '1150647534' END)IS NOT((((NULL, 0.231388896849972, 0.4837441722841592)) NOT BETWEEN (('-1483045906', '&ⓟ>FvpOὛ', NULL)) AND (('1IᆎY]U	#', x'99e1ce78', 0.7463006317872237)))))); -- 0ms;
SELECT DISTINCT TYPEOF(CAST(v0.c0 AS REAL)), CASE CASE t1.c42  WHEN rt0.c0 THEN rt0.c2 END  WHEN '-535271908' THEN 0.304183293776633 END, CAST(CAST(t1.c30 AS INTEGER) AS BLOB) FROM v0, t1, rt0 WHERE ((+ ('L￿t([K#'))) ORDER BY ((((rt0.c0)<=(t1.c45))) NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((((t1.c42)AND(rt0.c0)))AND(t1.c30)))), CASE x''  WHEN CAST(rt0.c0 AS REAL) THEN (t1.c42 IN ()) ELSE (((rt0.c2, rt0.c0, rt0.c0)) BETWEEN ((rt0.c2, t1.c42, 0.5657047924924141)) AND ((v0.c0, rt0.c2, rt0.c0))) END DESC; -- 0ms;
SELECT DISTINCT ((((((((((v0.c0)OR(t1.c30)))OR(rt0.c2)))OR(t1.c45)))OR(t1.c45))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND ((rt0.c1 IN ()))) FROM v0, rt0 WHERE (((LIKELY('-590317266')) BETWEEN ((('-771640701')>(NULL))) AND ((((NULL))>((x'b50c'))))));SELECT DISTINCT rtreenode(CASE rt0.c0  WHEN rt0.c0 THEN t1.c30 WHEN rt0.c2 THEN t1.c42 WHEN rt0.c0 THEN v0.c0 END, rt0.c2 COLLATE BINARY), (t1.c42 IN ()) COLLATE NOCASE, (json_array_length(rt0.c0) IN ()) FROM rt0, v0 WHERE ((((+ (0.6075712494747335)))%(CAST(0.231388896849972 AS NUMERIC))));SELECT ((QUOTE(rt0.c1))%(((((t1.c42)OR(v0.c0)))OR(t1.c30)))) FROM rt0, v0 NOT INDEXED WHERE ('.o||5&\rL') LIMIT 2123571223;SELECT DISTINCT (MIN(rt0.c2) IN ()) FROM rt0 WHERE (((NULL) ISNULL) COLLATE RTRIM COLLATE NOCASE); -- 0ms;
SELECT ALL TOTAL((('46521789')|(v0.c0))) FROM t1 WHERE (((NULL) NOT NULL) COLLATE NOCASE);SELECT DISTINCT t1.c42 FROM v0, rt0, t1 WHERE ('1879344926'); -- 0ms;
SELECT ALL t1.c30 FROM t1 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (((x'') NOT NULL)) AND (x'856afbc1' COLLATE RTRIM))) LIMIT 1866574537 OFFSET -1729503459; -- 0ms;
SELECT DISTINCT ((t1.c42 COLLATE RTRIM)+((t1.c45 IN ()))) FROM rt0, v0 WHERE (((CASE WHEN 0.6738959903104363 THEN NULL WHEN 0Xffffffffe84313d1 THEN 'p[1]' WHEN '-790999390' THEN -790999390 END)IS NOT('1179103540')));SELECT DISTINCT (t1.c30 IN ()), ((((((((CAST(rt0.c1 AS NUMERIC))AND((t1.c30 IN ()))))AND(t1.c42 COLLATE RTRIM)))AND(((v0.c0)AND(t1.c45)))))AND((((rt0.c2))<((t1.c45))))), NTILE(((((t1.c45) BETWEEN (rt0.c0) AND (v0.c0)))>>((rt0.c2 IN ())))) OVER () FROM rt0, v0, t1;SELECT DISTINCT ((t1.c45)*(CASE WHEN rt0.c2 THEN t1.c30 ELSE rt0.c0 END)), ((CAST(t1.c30 AS REAL)) BETWEEN (CAST(t1.c42 AS INTEGER)) AND (((rt0.c1) NOT BETWEEN (t1.c30) AND (t1.c30)))), GROUP_CONCAT(UNLIKELY(t1.c30) COLLATE NOCASE) OVER (), x'', RANK() OVER () FROM t1;SELECT ALL (NOT (rt0.c1)) COLLATE RTRIM FROM t1 WHERE (((((((((((NULL)OR(0xffffffffe4bcf51f)))OR(0.3650859924080999)))OR(0.2271344114132111)))AND('')))-((x'' IN ()))));SELECT ((MIN(t1.c30)) ISNULL) FROM rt0 WHERE (x'0e05cc8c') LIMIT -1578301590 UNION SELECT ALL ((MIN(rt0.c0)) IS FALSE) FROM t1, rt0;SELECT DISTINCT json_insert(((rt0.c2) BETWEEN (v0.c0) AND (rt0.c0)), CASE t1.c30  WHEN '' THEN v0.c0 WHEN '|v|Vb' THEN rt0.c2 WHEN t1.c45 THEN '-114989908' END, (~ (rt0.c1))) FROM v0;SELECT DISTINCT (((t1.c45, rt0.c1, rt0.c2)) BETWEEN ((CHAR(t1.c30), 6.86947163E8, (v0.c0 IN ()))) AND ((rtreenode(t1.c30, t1.c42), (+ (rt0.c0)), (+ (v0.c0))))) FROM v0 WHERE (((COALESCE(DISTINCT NULL, '0.9176326975919709', '裙)y]VY*', NULL)) NOTNULL));SELECT DISTINCT 524963727, ((((((((NULL)OR(CASE WHEN t1.c42 THEN rt0.c1 END)))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))))OR(t1.c30 COLLATE BINARY)))AND(((rt0.c0)<>(t1.c45)))), SUM(CAST(rt0.c1 AS TEXT)) FROM t1, v0, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT v0.c0 FROM t1, rt0, v0 WHERE ((((NULL)) BETWEEN ((x'')) AND ((0X11685d9c))) COLLATE NOCASE); -- 0ms;
SELECT ALL ((((rt0.c1) ISNULL)) BETWEEN (((rt0.c2)>=(rt0.c1))) AND (((t1.c45)>>(rt0.c2)))) FROM rt0 GROUP BY (CAST(t1.c42 AS TEXT) IN ());SELECT ((((rt0.c1)&(t1.c42)))|(((((((((t1.c45)AND(v0.c0)))AND(t1.c42)))OR(t1.c30)))OR(t1.c45)))) FROM rt0, t1, v0 WHERE (ABS((('-1856427531')GLOB('-1610406689')))); -- 0ms;
SELECT NULLIF('n*', t1.c30 COLLATE RTRIM) FROM rt0, t1, v0 ORDER BY (((t1.c42)) NOT BETWEEN (((NOT (rt0.c0)))) AND ((CAST(rt0.c1 AS NUMERIC)))) DESC; -- 4ms;
SELECT DISTINCT CASE WHEN ((rt0.c1) IS FALSE) THEN HEX(t1.c30) ELSE ((rt0.c0) BETWEEN (t1.c30) AND (t1.c30)) END FROM rt0, t1 WHERE (((NULL) BETWEEN (CASE 'mN*'  WHEN '<Z' THEN 741968089 WHEN '' THEN x'ecec' WHEN 0xffffffffcb791f57 THEN '243819233' WHEN x'' THEN x'' WHEN 0xffffffffb41d0bda THEN '0.2271344114132111' END) AND ((0.6536278981941067 IN ())))); -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER (), NTILE(rt0.c0) OVER ( ORDER BY ((rt0.c2)IS NOT(rt0.c0)) COLLATE RTRIM DESC, CASE WHEN ((t1.c30) NOTNULL) THEN t1.c45 COLLATE RTRIM WHEN (~ (t1.c42)) THEN (~ (rt0.c0)) WHEN v0.c0 COLLATE NOCASE THEN CAST(t1.c45 AS TEXT) END DESC  NULLS FIRST), (((t1.c45 IN ()))>(-1610406689)) FROM rt0 LIMIT 378213640;SELECT DISTINCT ((((0.7770104180675007)AND(((t1.c30)>(rt0.c2)))))OR(CAST(rt0.c1 AS INTEGER))), LAG(((((v0.c0 COLLATE BINARY)OR(((((v0.c0)OR('-372084988')))AND(v0.c0)))))OR((~ (v0.c0)))), (((NOT (v0.c0)))<=(((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))), CASE v0.c0 COLLATE NOCASE  WHEN v0.c0 COLLATE NOCASE THEN CASE WHEN v0.c0 THEN '1511360498' ELSE v0.c0 END WHEN (((v0.c0))<((v0.c0))) THEN CASE WHEN v0.c0 THEN v0.c0 END WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((v0.c0)IS(v0.c0)) WHEN json_quote(v0.c0) THEN (+ (v0.c0)) WHEN ((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)) THEN ((((v0.c0)AND(v0.c0)))AND(v0.c0)) END) OVER (), rt0.c1 FROM v0 WHERE (((CASE WHEN -1610406689 THEN '589811439' WHEN NULL THEN 1165559576 WHEN -1.856427531E9 THEN NULL ELSE 'wj' END) IS FALSE));SELECT ((((CAST(t1.c42 AS INTEGER))AND(rt0.c2)))OR((t1.c45 IN ()))), NULL, (+ (((t1.c42) ISNULL))) FROM v0 LIMIT -1520278381 OFFSET 327216841;SELECT DISTINCT CASE ((rt0.c0)OR(rt0.c2))  WHEN CAST(t1.c30 AS BLOB) THEN ((((rt0.c2)AND(rt0.c2)))OR(rt0.c2)) WHEN (rt0.c0 IN ()) THEN COUNT(*) WHEN ((t1.c45) NOTNULL) THEN (((rt0.c2, t1.c42, rt0.c1)) BETWEEN ((t1.c45, v0.c0, v0.c0)) AND ((rt0.c1, rt0.c2, t1.c42))) ELSE ((t1.c30) BETWEEN (rt0.c0) AND (t1.c45)) END FROM t1;SELECT ALL ((NOT (rt0.c1)) IN (TRIM(t1.c30, rt0.c1))) FROM t1 WHERE ((((0.9429817135310998)) BETWEEN ((x'11be' COLLATE RTRIM)) AND ((x'1b32cdcb' COLLATE RTRIM))));SELECT DISTINCT ((rt0.c1 COLLATE RTRIM)LIKE(t1.c30 COLLATE BINARY)) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2, ((CASE WHEN v0.c0 THEN rt0.c1 END) ISNULL), TOTAL(((rt0.c2) NOTNULL)) OVER () FROM rt0, v0 WHERE (highlight(x'' COLLATE NOCASE, CAST(NULL AS NUMERIC), ((0x27ddbed7) ISNULL), CAST('' AS TEXT)));SELECT DISTINCT (((rt0.c2)<<(t1.c45)) IN ()), CASE ((rt0.c1)>>(t1.c42))  WHEN CASE WHEN rt0.c0 THEN t1.c45 WHEN rt0.c0 THEN t1.c42 WHEN t1.c30 THEN t1.c45 WHEN t1.c42 THEN rt0.c1 WHEN rt0.c1 THEN t1.c45 END THEN TYPEOF(DISTINCT rt0.c2) ELSE 0.05607627081566158 END, NULL FROM t1, rt0, v0; -- 0ms;
SELECT ALL ((TRIM(v0.c0)) BETWEEN (((rt0.c0) NOT NULL)) AND ('<Z')) FROM v0 WHERE (((((1649185100) NOTNULL)) IS TRUE)) LIMIT 545485191 OFFSET -486774163;SELECT DISTINCT CAST((t1.c30 IN ()) AS INTEGER) FROM rt0, t1, v0 WHERE ((~ ((x'4a7c' IN ())))); -- 1ms;
SELECT CAST(t1.c42 AS TEXT) FROM rt0 LEFT OUTER JOIN t1 ON (((((t1.c30)) NOT BETWEEN ((rt0.c2)) AND ((v0.c0))))!=((((v0.c0)) BETWEEN ((rt0.c0)) AND ((t1.c30))))) LEFT OUTER JOIN v0 ON (((((rt0.c1)OR(0.5650276005252587)))AND(rt0.c2)) IN (((rt0.c2)IS(v0.c0)), (((rt0.c1))>=((''))))) LIMIT -162369851;SELECT DISTINCT ((((((((((((1127986327)OR(SUM(rt0.c2))))OR(((rt0.c0) NOTNULL))))AND(((((v0.c0)OR(rt0.c2)))AND(rt0.c0)))))OR(((t1.c30)>>(rt0.c0)))))AND(CAST(rt0.c2 AS TEXT))))AND(CAST(v0.c0 AS INTEGER))) FROM t1, rt0 WHERE ((((NULL)) NOT BETWEEN (('-162369851' COLLATE BINARY)) AND ((((0.6412810119919261) NOT BETWEEN (0.304183293776633) AND (NULL))))));SELECT DISTINCT (~ (CAST(rt0.c1 AS INTEGER))), (((((rt0.c0))>((rt0.c2))))IS NOT((t1.c45 IN (t1.c45)))), (((((v0.c0))>=((NULL))))<>(((0Xffffffffdc4954a7)AND(rt0.c2)))) FROM rt0;SELECT DISTINCT (((((t1.c30)OR(t1.c30)))AND(t1.c42)) IN (CASE WHEN t1.c45 THEN t1.c30 WHEN v0.c0 THEN v0.c0 WHEN rt0.c1 THEN t1.c45 END)) FROM rt0, v0;SELECT GROUP_CONCAT(IFNULL(DISTINCT rt0.c1, x'')) OVER (), SUM(CASE WHEN rt0.c1 THEN t1.c30 END), t1.c42 FROM v0, rt0, t1 WHERE ((((HEX(NULL), CAST('991108955' AS NUMERIC), (((('avMUn')OR(x'')))AND('190688937'))))>=(('', '1141425442', (('') NOT BETWEEN (NULL) AND (NULL)))))); -- 1ms;
SELECT TOTAL((((0.6150461379903654)) NOT BETWEEN ((t1.c42)) AND ((v0.c0)))) FROM rt0 WHERE ((+ (CASE ''  WHEN 'NlqF' THEN -1.62369851E8 WHEN NULL THEN '1IᆎY]U	#' WHEN ']6' THEN 0.2271344114132111 END)));SELECT (((' M7菮}䳈n.R', v0.c0, rt0.c0)) BETWEEN (((~ (rt0.c0)), AVG(v0.c0), rt0.c0 COLLATE NOCASE)) AND ((CASE '! '  WHEN rt0.c1 THEN rt0.c0 END, ((1.655031879E9)IS NOT(t1.c45)), CAST(t1.c30 AS BLOB)))) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT t1.c45, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))IS(v0.c0)), ((0X3843d6a) NOT BETWEEN (((rt0.c2)IS NOT(t1.c45))) AND (COUNT(rt0.c1))) FROM v0 WHERE (((((0.07078651920409651) IS FALSE))>((('<!G苛')<<('')))));SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c2 THEN t1.c30 WHEN rt0.c1 THEN t1.c42 WHEN v0.c0 THEN v0.c0 END) OVER () FROM rt0, v0 WHERE (-2020445448);SELECT COUNT(((v0.c0)<(rt0.c2)) COLLATE BINARY), (NOT (((t1.c30) ISNULL))), RANK() OVER ( ROWS  CURRENT ROW) FROM t1, rt0, v0 WHERE ((((('-391228433')<=('')))IS NOT((NULL IN ())))) ORDER BY (((v0.c0)||(rt0.c2)) IN (t1.c42 COLLATE RTRIM)) DESC; -- 0ms;
SELECT DISTINCT CAST(((t1.c30)>=('-1371072811')) AS TEXT) FROM rt0 NOT INDEXED, t1, v0 INDEXED BY i68;SELECT DISTINCT t1.c30, ((x'') BETWEEN (((((t1.c42)OR(rt0.c0)))AND(t1.c30))) AND (((rt0.c0)>('TRUE')))), (((~ (rt0.c0))) NOT BETWEEN (((rt0.c0)+(v0.c0))) AND (((t1.c45) NOT BETWEEN (v0.c0) AND (t1.c45)))) FROM t1, v0, rt0; -- 0ms;
SELECT ALL ((SQLITE_VERSION()) NOT BETWEEN (((((t1.c42)OR(t1.c42)))AND(t1.c45))) AND (CAST(x'066c' AS INTEGER))) FROM v0;SELECT DISTINCT (((((rt0.c0))<>((rt0.c2))))>>((((rt0.c2))<=((t1.c42))))) FROM t1;SELECT DISTINCT (('613819953' COLLATE RTRIM) NOT NULL) FROM v0, t1 WHERE (((NULL IN (0.2916739293253713, x'')) IN ())); -- 0ms;
SELECT DISTINCT ((((((((((t1.c30)<=(rt0.c0)))OR(CASE t1.c45  WHEN rt0.c1 THEN rt0.c1 ELSE v0.c0 END)))OR(json_extract(rt0.c2, rt0.c1))))OR(GROUP_CONCAT(''))))OR((((rt0.c1)) BETWEEN ((t1.c45)) AND ((t1.c45))))) FROM rt0, t1, v0 WHERE (UPPER(DISTINCT NULL) COLLATE RTRIM) ORDER BY ((CASE WHEN x'' THEN 793945126 WHEN rt0.c1 THEN t1.c45 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)<>((- (t1.c45)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c1 THEN rt0.c0 WHEN t1.c30 THEN rt0.c2 WHEN rt0.c1 THEN t1.c30 ELSE NULL END)<=((v0.c0 IN (rt0.c0)))) FROM t1, rt0 WHERE (HEX(0.0193366434911193 COLLATE NOCASE));SELECT DISTINCT (t1.c42 IN ()) COLLATE BINARY FROM rt0 GROUP BY (CASE WHEN v0.c0 THEN rt0.c0 WHEN x'c945' THEN t1.c42 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN v0.c0 WHEN -1.254805229E9 THEN rt0.c2 END IN (((((v0.c0)OR(rt0.c2)))AND(rt0.c0)), (((rt0.c2, v0.c0, v0.c0, v0.c0, rt0.c0)) NOT BETWEEN (('\n', t1.c45, v0.c0, rt0.c0, rt0.c1)) AND ((rt0.c0, rt0.c0, 0xffffffffa8448b5f, t1.c30, v0.c0)))));SELECT ALL t1.c45 FROM t1, v0 WHERE (((NULL)<<(('760723092' IN (0xffffffffdcd0792e, 0xffffffff9f27ee6d))))) LIMIT -442087154 OFFSET 1165559576; -- 0ms;
SELECT ((((((((rt0.c1)OR(rt0.c1)))AND(t1.c45)))OR(rt0.c1)))AND(rt0.c0)) COLLATE RTRIM, ((((t1.c30) BETWEEN (rt0.c0) AND (rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND ((('') NOT BETWEEN (rt0.c0) AND (rt0.c1)))), ((((rt0.c0)&(rt0.c2))) BETWEEN (SUM(rt0.c2)) AND (rt0.c1)) FROM t1, rt0, v0 WHERE (((~ (0x3b131f5b)) IN ())) LIMIT 1649057508 OFFSET 210143293; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER ( RANGE BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING) FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((((t1.c45) BETWEEN (rt0.c1) AND (rt0.c2))) BETWEEN (CASE t1.c42  WHEN rt0.c0 THEN t1.c30 END) AND (((rt0.c2)+(rt0.c2)))), TOTAL(t1.c30) OVER (), ((((((t1.c30, rt0.c2, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, v0.c0)) AND ((v0.c0, v0.c0, t1.c42)))))>=((GROUP_CONCAT(t1.c30)))) FROM rt0 WHERE ((((NULL)) BETWEEN (((('裙)y]VY*') IS TRUE))) AND ((((NULL)<<(x'0218')))))) ORDER BY (((v0.c0, rt0.c0, rt0.c0)) NOT BETWEEN ((QUOTE(t1.c42), t1.c42 COLLATE NOCASE, (NOT (rt0.c2)))) AND ((CASE rt0.c2  WHEN rt0.c2 THEN 0.27837260406831466 WHEN rt0.c2 THEN v0.c0 WHEN t1.c45 THEN rt0.c0 ELSE t1.c42 END, rt0.c0, UPPER(rt0.c0)))) LIMIT 487314097;SELECT LIKELIHOOD(DISTINCT NULL, 0.7146265008669062) FROM t1; -- 0ms;
SELECT DISTINCT '474675526' FROM v0; -- 0ms;
SELECT DISTINCT CAST((- (t1.c30)) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((((((((((((t1.c42)>(t1.c42)))AND(t1.c30)))OR(((t1.c45) BETWEEN (t1.c30) AND (NULL)))))AND(((t1.c45) NOT BETWEEN (t1.c42) AND (133801467)))))AND(((t1.c30)+(t1.c30)))))OR(CASE WHEN t1.c42 THEN t1.c42 END)))AND(CASE t1.c30  WHEN t1.c30 THEN t1.c30 ELSE t1.c30 END))) OVER (), ((((~ (NULL)), ((rt0.c0)+(rt0.c0)), (((NULL)) BETWEEN ((rt0.c1)) AND (('A'))), ((t1.c30)IS NOT(rt0.c1)), (NOT (t1.c42))))=((x'2e202b0e', ((t1.c45) NOTNULL), CAST(rt0.c2 AS NUMERIC), ((rt0.c2) BETWEEN (t1.c45) AND (rt0.c0)), ((NULL) NOT BETWEEN (rt0.c2) AND (t1.c42))))), GROUP_CONCAT(((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c42))) OVER () FROM t1 WHERE (1141425442);SELECT ((((UNLIKELY(t1.c45))AND(NULL)))OR(((rt0.c0)>(rt0.c2)))) FROM rt0, v0;SELECT DISTINCT ((CAST(rt0.c1 AS NUMERIC))IS NOT(CASE t1.c45  WHEN t1.c42 THEN rt0.c2 END)) FROM v0, rt0, t1 WHERE ((- (((x'') BETWEEN (NULL) AND ('0F] '))))); -- 0ms;
SELECT '1438278008' FROM t1, rt0, v0 LIMIT 135601223; -- 0ms;
SELECT DISTINCT (~ ((((x'039967e2'))=((rt0.c0))))) FROM v0 WHERE ((+ (CASE WHEN x'78af' THEN '-1068534098' END)));SELECT DISTINCT MIN(LIKELIHOOD(t1.c42, 0.7569940285171874)) FROM t1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ORDER BY LIKE(((NULL) BETWEEN (rt0.c0) AND (t1.c45)), t1.c42, '-') ASC) FROM v0, t1 CROSS JOIN rt0 ON CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN v0.c0 THEN t1.c42 WHEN t1.c45 THEN v0.c0 END COLLATE NOCASE WHERE (CASE ((0.8197406118996924) BETWEEN ('-1') AND (x''))  WHEN ((NULL)<=(0.28051617810694995)) THEN '-1867710819' COLLATE BINARY ELSE (NOT (0.24206633980075654)) END) ORDER BY ((((((((((0.38063588206344523) BETWEEN (t1.c42) AND (t1.c45)))AND(((rt0.c0) NOTNULL))))OR((~ (rt0.c2)))))OR(CASE t1.c45  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c1 END)))OR((((rt0.c1, rt0.c2, v0.c0)) BETWEEN ((t1.c30, t1.c30, t1.c30)) AND ((t1.c42, t1.c30, t1.c45))))); -- 0ms;
SELECT DISTINCT ((HEX(v0.c0))>(0.20562182765180026)), TOTAL(CAST(t1.c30 AS NUMERIC)) OVER (), rt0.c1 FROM rt0, v0;SELECT DISTINCT ((AVG(rt0.c2))>(rt0.c0 COLLATE NOCASE)) FROM t1, rt0 NOT INDEXED WHERE (((((x'')<(NULL))) NOT BETWEEN ((0.36775389205021325 IN ())) AND (((x'')*(x''))))) GROUP BY CASE WHEN json_patch('-1186097393', t1.c30) THEN 0Xffffffff94ed55aa END; -- 0ms;
SELECT ALL ((((v0.c0) NOTNULL)) BETWEEN (((t1.c42)>>(''))) AND (CASE 0.09635493678193918  WHEN t1.c42 THEN t1.c42 ELSE rt0.c0 END)), (((t1.c42)) BETWEEN ((((rt0.c2)-(rt0.c1)))) AND (((t1.c42 IN ('T7'))))), COUNT((((t1.c45, rt0.c2, rt0.c0)) BETWEEN ((t1.c45, rt0.c0, rt0.c2)) AND ((t1.c30, rt0.c2, 0.20528692480359967)))) OVER () FROM rt0, v0, t1 WHERE ((((-1.068534098E9)<>(NULL)) IN ())); -- 1ms;
SELECT DISTINCT ((((-938897393)OR((t1.c30 IN ()))))OR(((rt0.c0) NOTNULL))), t1.c42, (((~ (rt0.c0))) BETWEEN (COUNT(*)) AND (rt0.c0)), CAST(rt0.c1 COLLATE RTRIM AS TEXT), COUNT(*) OVER () FROM rt0, t1 NATURAL JOIN v0 WHERE ((((- (0.06107070392977454))) ISNULL)); -- 0ms;
SELECT CASE LIKELY(v0.c0)  WHEN ((rt0.c0)>=(rt0.c2)) THEN t1.c42 COLLATE BINARY END FROM rt0;SELECT DISTINCT ((((COUNT(*))AND(CASE WHEN 0.2271344114132111 THEN v0.c0 END)))AND(MIN(t1.c45))), t1.c45, GROUP_CONCAT(((rt0.c0) IS TRUE)) COLLATE RTRIM, ((((rt0.c2 IN ())))==((CASE WHEN rt0.c2 THEN '.o||5&\rl' ELSE rt0.c2 END))), x'' FROM t1, v0, rt0 WHERE ((((((NULL)) BETWEEN (('3077003')) AND ((NULL)))) BETWEEN (CAST(x'149c' AS INTEGER)) AND (ABS(0X74ce8763)))); -- 0ms;
SELECT t1.c42, SUM((((rt0.c0, rt0.c2, t1.c30))<((t1.c30, rt0.c0, rt0.c2)))), '' FROM t1 GROUP BY (('243819233') NOT NULL) LIMIT 210143293;SELECT ALL ((((((((CAST(t1.c30 AS INTEGER))AND((t1.c30 IN (rt0.c1, NULL)))))AND((((rt0.c2)) BETWEEN ((t1.c30)) AND ((t1.c42))))))AND((((v0.c0))>((rt0.c2))))))OR(CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)) FROM t1 WHERE (LIKELIHOOD(DISTINCT (- ('ंf3gt')), 0.5212553306454484));SELECT DISTINCT t1.c42, (((v0.c0, rt0.c2, t1.c42, t1.c42, rt0.c0)) BETWEEN ((((v0.c0) BETWEEN (v0.c0) AND (v0.c0)), (((rt0.c2, rt0.c0, t1.c42))<>((t1.c45, t1.c30, rt0.c0))), CASE WHEN t1.c45 THEN '-1979334855' END, ABS(DISTINCT rt0.c1), CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c45 END)) AND ((((NULL)>(rt0.c2)), (~ (0.36775389205021325)), t1.c42, ((('74488616'))>((t1.c45))), (rt0.c1 IN ())))), (((- (t1.c42)))==(t1.c30)) FROM rt0 ORDER BY json_patch((rt0.c2 IN ()), ((rt0.c0)LIKE(t1.c42)));SELECT 't7', PERCENT_RANK() OVER (), LIKELIHOOD(DISTINCT CASE WHEN t1.c30 THEN t1.c30 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 END, 0.20562614137476898) FROM t1, rt0, v0; -- 5ms;
SELECT DISTINCT ((((CAST(t1.c45 AS INTEGER))OR(((v0.c0) BETWEEN (t1.c42) AND (rt0.c0)))))OR(((t1.c30)||(rt0.c2)))) FROM t1 WHERE (((((0.32375682161354336)AND(NULL))) NOT BETWEEN ('*J*\?Y4!') AND (CAST('F∽Q' AS BLOB)))) GROUP BY ((((t1.c42)<=(rt0.c2))) NOT NULL) HAVING CASE v0.c0  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c2 THEN t1.c45 WHEN 0x64ddfbcb THEN rt0.c2 WHEN '-1709954598' THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END COLLATE BINARY;SELECT CAST((((v0.c0)) BETWEEN ((rt0.c2)) AND ((NULL))) AS REAL), PERCENT_RANK() OVER (), ((((t1.c45)*(rt0.c0))) IS TRUE) FROM t1 ORDER BY LTRIM((rt0.c2 IN (x'')), ((t1.c45)LIKE(t1.c30))) DESC;SELECT CAST((rt0.c1 IN ()) AS INTEGER), ((rt0.c0) ISNULL) COLLATE RTRIM, TRIM(DISTINCT (((t1.c30)) BETWEEN ((rt0.c0)) AND ((rt0.c2))), ((((((((x'')OR(rt0.c2)))OR(t1.c45)))AND(t1.c45)))OR(t1.c30))) FROM v0, t1, rt0 WHERE (((((((((CASE WHEN '' THEN '0.304183293776633' END)OR(CASE WHEN 'e~n%+#箠,' THEN x'' ELSE '-1973522433' END)))OR(0X6211436c)))AND(0.016130599813187874)))OR(CASE 'qAr'' Y	'  WHEN x'' THEN NULL WHEN '[9' THEN NULL WHEN 0.4483996331624167 THEN 0.2271344114132111 END))); -- 1ms;
SELECT DISTINCT (NOT (((rt0.c2)&(v0.c0)))) FROM v0, t1 WHERE (((((x'')%(NULL)))&((('ir')==(NULL)))));SELECT ALL CASE ((((((((NULL)AND(rt0.c2)))OR(rt0.c1)))AND(v0.c0)))AND(t1.c42))  WHEN CAST(v0.c0 AS REAL) THEN ((rt0.c0)>>(v0.c0)) ELSE GROUP_CONCAT(rt0.c1) END, GROUP_CONCAT(0.8813253707199956), ((0.9156014092393079)/(((t1.c30) IS TRUE))) FROM rt0, t1;SELECT RANK() OVER () FROM v0, t1, rt0 GROUP BY (+ (v0.c0)) COLLATE NOCASE, CASE WHEN ((rt0.c0)GLOB(v0.c0)) THEN (- (rt0.c1)) END, 0.3073403622578301 HAVING GROUP_CONCAT(t1.c30); -- 7ms;
SELECT DISTINCT (((((t1.c42)*('\,_Fa['))))>=((MAX(t1.c30)))) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( ORDER BY COALESCE(TRIM(t1.c45, t1.c42), CAST(t1.c45 AS TEXT)) ASC, t1.c30 ASC) FROM v0, rt0, t1 WHERE (CASE CAST(0.36697088937405287 AS BLOB)  WHEN (((('-242409518')AND(0.27093294774051546)))AND(NULL)) THEN ((x'') NOT BETWEEN ('*\b᭍0') AND ('0.2916739293253713')) END); -- 1ms;
SELECT ((((rt0.c0)OR(t1.c30)))OR(t1.c42)) COLLATE RTRIM, ((rt0.c2)+(rt0.c1)) COLLATE NOCASE, CASE CASE v0.c0  WHEN t1.c42 THEN t1.c42 WHEN t1.c30 THEN rt0.c0 WHEN rt0.c2 THEN t1.c30 ELSE NULL END  WHEN v0.c0 THEN CAST(rt0.c1 AS TEXT) ELSE ((rt0.c0) BETWEEN (t1.c42) AND (v0.c0)) END FROM v0 WHERE (CASE WHEN ((x'')LIKE(-220951433)) THEN CASE 0.20528692480359967  WHEN NULL THEN NULL ELSE NULL END END);SELECT ((v0.c0) BETWEEN ('741968089') AND ((NOT (t1.c30)))) FROM rt0, v0 WHERE (NULL);SELECT DISTINCT ((MIN(t1.c42)) ISNULL) FROM t1, v0, rt0 WHERE (((((((((((x'')OR(-1596184420)))OR(-479427346)))AND('Xp')))AND('0.4483996331624167'))) ISNULL)); -- 0ms;
SELECT COUNT(NULL COLLATE RTRIM) OVER () FROM t1, v0 ORDER BY (((rt0.c1)) NOT BETWEEN ((LIKELIHOOD(t1.c45, 0.7189530530911193))) AND ((((v0.c0) ISNULL))));SELECT 0xffffffff98adc5aa FROM t1; -- 0ms;
SELECT ALL (((t1.c45 IN ()))<=(((t1.c30) BETWEEN (rt0.c2) AND (t1.c30)))), CAST(((t1.c42)-(t1.c42)) AS REAL), t1.c42 FROM t1, rt0, v0 WHERE (((- (NULL)) IN ())); -- 0ms;
SELECT t1.c42 FROM rt0, t1 WHERE (((((x'7f5c')+('mn*')))|((- (NULL))))); -- 0ms;
SELECT ALL COUNT(x'' COLLATE RTRIM), SUM(((v0.c0)||(rt0.c1))) OVER (), CASE WHEN json_patch(t1.c42, t1.c45) THEN rt0.c1 COLLATE RTRIM WHEN (rt0.c1 IN ()) THEN MIN(rt0.c2) WHEN ((rt0.c2) NOT BETWEEN (t1.c42) AND (t1.c42)) THEN TOTAL(rt0.c1) ELSE 0.16515167697866495 END, ((rt0.c2) NOTNULL) COLLATE NOCASE, TOTAL_CHANGES(), ((((t1.c45))<((t1.c42))) IN ()), ((((t1.c30) BETWEEN (v0.c0) AND (t1.c30))) IS TRUE) FROM rt0, t1, v0; -- 2ms;
SELECT ALL ((UNLIKELY(DISTINCT t1.c42)) NOT BETWEEN ((('')>(t1.c30))) AND (((rt0.c1)<<(rt0.c1)))), ((rt0.c0 COLLATE BINARY) IS TRUE), RANK() OVER () FROM t1 WHERE (((((((((0.23848859356304708)OR(CAST('46521789' AS NUMERIC))))AND(((NULL) BETWEEN (x'') AND ('OK')))))OR(((x'')GLOB(-906486727)))))OR(5.24963727E8 COLLATE NOCASE)));SELECT DISTINCT COALESCE(MIN(rt0.c2), (+ (rt0.c0))) FROM t1, rt0, v0 WHERE ((('')/(((x'') IS FALSE)))) GROUP BY UNLIKELY(((((((((((((rt0.c1)OR(t1.c45)))OR(t1.c45)))AND(rt0.c1)))AND(rt0.c2)))AND(NULL)))OR(rt0.c0))), ((((((t1.c45, v0.c0, t1.c42))<((rt0.c2, rt0.c2, v0.c0))), (NOT (rt0.c0)), (v0.c0 IN ())))!=((CASE WHEN t1.c30 THEN rt0.c1 WHEN t1.c42 THEN rt0.c0 WHEN t1.c45 THEN v0.c0 ELSE v0.c0 END, ((((((((((((rt0.c0)OR(t1.c30)))OR(t1.c45)))AND(t1.c42)))OR(t1.c30)))AND(NULL)))OR(rt0.c0)), (((v0.c0))=((rt0.c0)))))), (((t1.c42 IN ())) BETWEEN ((rt0.c1 IN (t1.c42))) AND (t1.c30 COLLATE BINARY)) HAVING (((x'')) NOT BETWEEN ((GROUP_CONCAT(v0.c0))) AND (((- (rt0.c0))))); -- 0ms;
SELECT ((((t1.c30)AND(t1.c30)))%(((t1.c45)==(rt0.c1)))), CASE ((((((((rt0.c2)OR(rt0.c2)))OR(rt0.c1)))OR(v0.c0)))OR(v0.c0))  WHEN v0.c0 THEN QUOTE(v0.c0) END, ((((((t1.c30)>=(v0.c0)))AND(((((t1.c42)AND(v0.c0)))AND(t1.c45)))))AND(CASE WHEN t1.c45 THEN v0.c0 ELSE v0.c0 END)) FROM rt0;SELECT DISTINCT ((rt0.c1) BETWEEN ((NOT (rt0.c2))) AND (rt0.c1)) FROM t1, rt0 WHERE ((~ (CAST(NULL AS NUMERIC)))) LIMIT 1511360498; -- 0ms;
SELECT ALL COUNT(*) FROM t1, v0, rt0 GROUP BY CASE ((t1.c45) ISNULL)  WHEN (((t1.c30, t1.c45, x''))==((rt0.c0, t1.c42, rt0.c1))) THEN (~ (rt0.c0)) WHEN (((t1.c42))<((t1.c30))) THEN ((rt0.c1) NOT NULL) WHEN (((('')AND(rt0.c2)))OR(t1.c45)) THEN ((v0.c0)>(rt0.c2)) ELSE ((rt0.c1)<=(rt0.c1)) END, ((rt0.c1)AND(rt0.c0)) COLLATE BINARY, CASE t1.c45 COLLATE NOCASE  WHEN CAST(t1.c42 AS INTEGER) THEN ('-213303397' IN ()) END HAVING NULL; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS INTEGER), RANK() OVER (), (- (((t1.c30)%(t1.c42)))) FROM rt0 INDEXED BY i68, t1, v0 WHERE (CHANGES()) LIMIT -1273164838;SELECT DISTINCT t1.c45, (((((rt0.c1 IN (v0.c0)))AND(CASE NULL  WHEN t1.c45 THEN t1.c42 WHEN rt0.c1 THEN rt0.c2 WHEN t1.c30 THEN t1.c45 ELSE NULL END)))AND(((v0.c0)==(x'a75a')))), CAST(((rt0.c1) IS TRUE) AS NUMERIC), (((t1.c45 IN (t1.c42, t1.c30))) BETWEEN (((rt0.c0)=(rt0.c2))) AND ((NOT (rt0.c0)))), COUNT(*) FROM rt0, t1 WHERE (((CASE WHEN 1346753131 THEN x'' ELSE NULL END) NOTNULL));SELECT DISTINCT ((CASE WHEN rt0.c2 THEN t1.c45 WHEN t1.c45 THEN t1.c42 WHEN rt0.c0 THEN rt0.c0 WHEN -658635540 THEN v0.c0 WHEN '589811439' THEN t1.c45 END)LIKE(((rt0.c1) BETWEEN (t1.c42) AND (t1.c45)))), CASE (~ (rt0.c2))  WHEN ((rt0.c1)<=(t1.c42)) THEN ((rt0.c0) NOT BETWEEN (v0.c0) AND (rt0.c2)) WHEN ((rt0.c2)IS NOT(t1.c30)) THEN (rt0.c0 IN ()) WHEN 0Xffffffffb4de5b84 THEN (v0.c0 IN ()) END, ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN v0.c0 THEN t1.c45 WHEN rt0.c1 THEN t1.c45 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t1.c30 END)>>((((rt0.c2))>((t1.c42))))) FROM v0 WHERE ((((('1535785324')OR(0.16515167697866495)))AND(NULL)) COLLATE BINARY);SELECT DISTINCT NTILE(((rt0.c1 COLLATE NOCASE)/(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END))) OVER () FROM v0, rt0;SELECT DISTINCT IFNULL(DISTINCT (+ ('-92655174')), -1.273164838E9) FROM v0, t1 NOT INDEXED, rt0 WHERE (CASE WHEN LIKELY(DISTINCT 0.21277031949101977) THEN (x'71088f27' IN ()) WHEN 'iX蜞t''nu' THEN CAST(0Xffffffffb94d970f AS REAL) WHEN ((((((((-1371072811)OR(0.1148391148155895)))AND('i_?]')))OR('O]')))AND('3좻jFhC')) THEN NULL COLLATE BINARY END) GROUP BY (((~ (rt0.c1)))==(rt0.c0 COLLATE BINARY)), ((((((rt0.c0)AND(t1.c42)))OR(rt0.c0))) ISNULL), ((((CAST(0.8466283384951994 AS NUMERIC))AND(rt0.c1)))AND(((NULL) NOT BETWEEN (t1.c30) AND (v0.c0)))); -- 1ms;
SELECT ALL (((((t1.c45)) BETWEEN ((rt0.c0)) AND ((t1.c45)))) BETWEEN (CASE rt0.c0  WHEN t1.c30 THEN t1.c42 WHEN x'' THEN v0.c0 WHEN t1.c45 THEN t1.c42 END) AND (((rt0.c0)||(t1.c30)))), ((((t1.c45) BETWEEN (0x1f4a4f8f) AND (rt0.c1)))>>(((t1.c30) ISNULL))), (((t1.c45)) BETWEEN (((t1.c42 IN ()))) AND (((- (rt0.c0))))) FROM t1 WHERE ((((x'')) BETWEEN (((NOT ('9R')))) AND (('524963727' COLLATE RTRIM)))) GROUP BY ((CASE WHEN v0.c0 THEN 'dz' ELSE v0.c0 END)+(((0.11460416136775631) IS FALSE))), json_array_length((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((t1.c45))), ((rt0.c2) IS TRUE)), rt0.c1;SELECT DISTINCT (((((NOT (t1.c42)))OR(NULL COLLATE NOCASE)))OR(((((((((t1.c45)OR(rt0.c1)))OR(-881254569)))AND(rt0.c2)))AND(rt0.c0)))) FROM v0, t1 WHERE (((((((NULL)+(x'cdeb')))AND((NULL IN (NULL, '*fIej ')))))AND((((NULL, x'3749', 0x6c5d4fcc)) BETWEEN (('-372084988', '! ', 0.45984958761334993)) AND (('-1471902881', 0.8198179727370856, x'bbca')))))) GROUP BY CAST((t1.c45 IN ()) AS BLOB), ((x'' COLLATE NOCASE)>(((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)))), (((+ (rt0.c2))) IS FALSE), ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (((t1.c30) NOT BETWEEN (t1.c42) AND (NULL))) AND (json_valid('BaAFZ籉hx'))), (((rt0.c1)) BETWEEN ((((rt0.c0)|(rt0.c2)))) AND ((v0.c0))) HAVING ((COUNT(t1.c45))<(((t1.c45) NOT BETWEEN (t1.c30) AND (t1.c45)))) ORDER BY (((rt0.c0)<<(rt0.c2)) IN ()) ASC  NULLS LAST;SELECT ALL ((((rt0.c1)OR(t1.c30)))OR(t1.c30)) COLLATE BINARY, COUNT(*), COUNT(*) OVER () FROM t1, rt0, v0 WHERE ((((((NULL))>=(('-1906011742'))))/(CAST(NULL AS INTEGER)))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c1) NOTNULL)) FROM rt0 WHERE ((((x'', 0X7b2690e1, 0.1981894061226327, 'w', -292973981)) NOT BETWEEN (((0.4094164713218281 IN ('RR*h&4co', NULL)), x'0f4d' COLLATE NOCASE, UNLIKELY(DISTINCT -890709323), MIN(NULL, NULL), (('8~') NOTNULL))) AND ((((1.959692131E9) NOTNULL), 0.22088947386332003 COLLATE RTRIM, (((0.16118746793521377)) NOT BETWEEN (('2064658675')) AND (('-1424751003'))), CAST(0.6075712494747335 AS TEXT), -1559497924 COLLATE NOCASE)))); -- 0ms;
SELECT (((((- (v0.c0)))AND(rtreenode(rt0.c1, v0.c0))))OR(v0.c0 COLLATE RTRIM)) FROM rt0, t1 WHERE (CASE WHEN (NOT (NULL)) THEN '-771640701' END) LIMIT -858150667 OFFSET -138342085;SELECT DISTINCT (- (((((((((t1.c45)OR(t1.c45)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c0)))), (((t1.c45)) BETWEEN ((((t1.c42)>>(v0.c0)))) AND (((((v0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))))), PERCENT_RANK() OVER () FROM t1, v0 WHERE (0.556921451487432) LIMIT -2115594159 OFFSET -1384807355;SELECT DISTINCT COALESCE(((rt0.c2)||(t1.c42)), ((t1.c30) NOTNULL), rt0.c2, x'') FROM v0, t1, rt0 WHERE (((((0.4837441722841592) BETWEEN (x'') AND (x'f3f7'))) IS FALSE)); -- 0ms;
SELECT DISTINCT (+ (v0.c0)) FROM t1, v0, rt0 WHERE (((((UNLIKELY(-1351353062))OR(((x'') BETWEEN (x'') AND ('TRUE')))))OR((- (''))))); -- 0ms;
SELECT ALL LAG(json_array((NOT (rt0.c0)), (t1.c42 IN ()), rt0.c2 COLLATE NOCASE, t1.c30), ((rt0.c2) NOT NULL) COLLATE NOCASE, CASE WHEN (+ (t1.c45)) THEN json_type(rt0.c1) END) OVER ( ORDER BY ((((v0.c0)&(v0.c0))) BETWEEN (((((((((rt0.c2)AND(rt0.c1)))AND(t1.c42)))AND(rt0.c2)))AND(x''))) AND (CAST(v0.c0 AS REAL))) ASC, ((((((((((((((t1.c30)OR(t1.c30)))OR(t1.c45)))AND(t1.c45)))OR(t1.c30)))OR(t1.c42)))AND(v0.c0)))>(t1.c45))) FROM rt0, t1, v0; -- 12ms;
SELECT DISTINCT (((('%[') NOT NULL))IS(HEX(t1.c45))), (((CAST(t1.c45 AS TEXT)))==((((v0.c0) NOT NULL)))), '-1497916015', GROUP_CONCAT(((v0.c0)GLOB(t1.c42))) OVER (), CAST(((t1.c30)%(rt0.c1)) AS REAL) FROM v0, t1, rt0; -- 4ms;
SELECT DISTINCT ((((v0.c0)<=(v0.c0))) IS FALSE) FROM rt0, t1 WHERE (((((NULL)/('H鰾CvyA'))) NOTNULL));SELECT TOTAL((NOT (rt0.c1))), ((((t1.c42) BETWEEN (rt0.c2) AND (v0.c0)))GLOB((~ (rt0.c0)))), CAST(((t1.c30) NOT NULL) AS TEXT) FROM rt0, v0, t1 WHERE ((((x'') NOTNULL) IN (CASE WHEN 'o-f6,q' THEN '' WHEN x'5805' THEN x'5f0d' WHEN 0Xffffffffcad497e6 THEN 'YC\n' WHEN 140859863 THEN 0.2322720864089335 WHEN '0.1981894061226327' THEN '378213640' WHEN x'' THEN 0.4837441722841592 WHEN NULL THEN NULL END))); -- 0ms;
SELECT rt0.c2 FROM v0, t1 GROUP BY ((((((((((t1.c30)AND(t1.c42)))OR(t1.c42)))AND(t1.c30)))OR(v0.c0)))GLOB(CAST(t1.c45 AS REAL)));SELECT ALL (CASE t1.c45  WHEN t1.c45 THEN v0.c0 ELSE rt0.c1 END IN ()), ((((t1.c45)*(0.8912357675045602))) NOTNULL), ((((t1.c42)<=(t1.c30))) BETWEEN (((((t1.c30)AND(t1.c30)))AND(rt0.c0))) AND (((t1.c42) ISNULL))) FROM rt0, v0 WHERE (((((0X40dcc838 COLLATE NOCASE)AND(CAST('827205705' AS NUMERIC))))AND(((NULL) NOT BETWEEN (0.8285572513984364) AND (-1.57830159E9)))));SELECT DISTINCT rt0.c1 FROM rt0, t1 INDEXED BY i61 WHERE ((((COALESCE(0.25892229148727286, NULL)))=((((0.16372667441300193) NOT NULL)))));SELECT DISTINCT SQLITE_COMPILEOPTION_USED((+ (t1.c30))), rt0.c2, (+ (((t1.c45) NOT BETWEEN (rt0.c1) AND (v0.c0)))), AVG(x''), ((((rt0.c1)>=(rt0.c1)))/('1170475228')) FROM t1, rt0 WHERE (CASE WHEN CASE WHEN 0.5563554911593019 THEN NULL ELSE '46521789' END THEN (((((((('?3﯋,l.漄3')OR(x'')))OR(0.8198179727370856)))AND(0.9486973109376174)))AND('-1716597804')) ELSE COALESCE('327216841', 0.8813253707199956) END) ORDER BY (v0.c0 COLLATE NOCASE IN ()), ((STRFTIME(rt0.c1, '1179103540', t1.c45, t1.c45, t1.c42)) ISNULL) ASC  NULLS LAST;SELECT ALL ((((t1.c42 COLLATE RTRIM)AND(CASE rt0.c0  WHEN t1.c30 THEN rt0.c1 WHEN '0.1148391148155895' THEN t1.c45 WHEN rt0.c2 THEN v0.c0 END)))AND(((t1.c30) BETWEEN (rt0.c2) AND (t1.c42)))), ((rt0.c0) BETWEEN (CAST(rt0.c2 AS TEXT)) AND (CAST(t1.c45 AS NUMERIC))), MIN('SN'), CASE ((rt0.c1)LIKE('?#aUi_'))  WHEN (('')%(t1.c42)) THEN (rt0.c2 IN ()) END, CAST(((v0.c0)&(rt0.c1)) AS NUMERIC) FROM t1, rt0, v0 WHERE (((((NULL)) BETWEEN (('VteXGOjL')) AND ((x''))) IN (((((1615555135)OR(-381893890)))OR(NULL))))) ORDER BY (((rt0.c1 IN ()))LIKE(CAST(x'' AS INTEGER))); -- 0ms;
SELECT DISTINCT 1608543705, (((x'')) BETWEEN ((rt0.c1 COLLATE RTRIM)) AND ((((t1.c30)IS(rt0.c0))))), t1.c42 FROM rt0, v0 WHERE ((((~ (NULL))) IS TRUE));SELECT DISTINCT LAG((+ ((('') BETWEEN (t1.c42) AND (0.3829343232759336)))), ((((t1.c42)IS NOT(v0.c0)))%(COALESCE(DISTINCT -1.520758796E9, t1.c45))), x'0c8e' COLLATE BINARY) OVER () FROM v0, t1; -- 1ms;
SELECT DISTINCT (((((t1.c42 IN ()))OR(t1.c42 COLLATE NOCASE)))AND((((rt0.c0, t1.c30, rt0.c0))<((rt0.c2, t1.c45, t1.c42))))) FROM v0;SELECT DISTINCT CAST((((v0.c0)) BETWEEN ((t1.c45)) AND ((t1.c45))) AS INTEGER) FROM v0, rt0 WHERE ((((((('623046772')IS NOT(NULL)))AND(CASE 0Xffffffffddcd76dc  WHEN x'' THEN NULL WHEN 'c{' THEN '524963727' WHEN x'' THEN '-1041953336' ELSE 1179103540 END)))AND(IFNULL(0x43e48932, x'494c')))) ORDER BY ((t1.c45) IS TRUE) ASC;SELECT DISTINCT json_array(((rt0.c2) NOT BETWEEN (t1.c45) AND (rt0.c1)), ((v0.c0) BETWEEN (t1.c45) AND (t1.c45))) FROM rt0 WHERE (((CASE WHEN '327216841' THEN NULL END)IS(COALESCE(DISTINCT x'', '613819953')))) GROUP BY rt0.c1, ((CAST(rt0.c2 AS NUMERIC)) IS TRUE), ((((x'd501') BETWEEN (t1.c30) AND (t1.c42))) BETWEEN ((+ (rt0.c2))) AND (CAST(rt0.c2 AS INTEGER)));SELECT ((((((rt0.c0)AND(t1.c30)))OR(t1.c30))) ISNULL) FROM v0 WHERE (((CASE WHEN x'' THEN NULL WHEN 0xffffffffac65a3ea THEN -8.81254569E8 WHEN -5.73737252E8 THEN x'' ELSE 0.08932363288463419 END) IS TRUE));SELECT (((((((v0.c0)) BETWEEN ((t1.c45)) AND (('613819953'))))AND(COUNT(v0.c0))))OR(((t1.c42) NOTNULL))), COUNT((rt0.c0 IN ())), TOTAL(((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0))) OVER (), MIN(((rt0.c2)GLOB('0.5649530546012437'))) COLLATE RTRIM, UNLIKELY(((t1.c42)>(rt0.c1))) FROM rt0;SELECT (((((t1.c42)AND(t1.c45))))>=((t1.c30 COLLATE BINARY))) FROM rt0, v0 WHERE ((NOT (((((0.7653130854944361)AND('-1194633665')))OR('')))));SELECT ALL ((((v0.c0) BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (((rt0.c1) ISNULL))) FROM v0, t1;SELECT DISTINCT CAST((((NULL))<((rt0.c2))) AS REAL) FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT CASE WHEN ((NULL) NOT BETWEEN (t1.c45) AND (t1.c45)) THEN (((rt0.c2, rt0.c1, x'')) NOT BETWEEN ((rt0.c0, NULL, rt0.c1)) AND ((rt0.c2, t1.c42, t1.c30))) WHEN ((t1.c42) NOT BETWEEN (t1.c30) AND (v0.c0)) THEN ((v0.c0) ISNULL) WHEN CAST(rt0.c1 AS NUMERIC) THEN x'' ELSE ((((((((x'269e')AND(t1.c45)))OR(rt0.c2)))OR(rt0.c0)))OR('1852035113')) END, AVG(0.6831418783927137) OVER (), PRINTF(rt0.c1) FROM t1 WHERE ((((((x'309d')AND(x'')))OR('L0|nS ')) IN ()));SELECT DISTINCT ((((rt0.c2)OR(v0.c0)))OR(t1.c42)) COLLATE BINARY, CASE WHEN (rt0.c0 IN ()) THEN ((0xffffffffa35d9994)<(t1.c42)) WHEN (rt0.c2 IN ()) THEN ((t1.c45)GLOB(t1.c45)) WHEN ((rt0.c0) IS TRUE) THEN '-398257199' ELSE ((rt0.c0)<(rt0.c2)) END, (((((NULL IN ()))AND(((0.5650276005252587) ISNULL))))AND(((((((((t1.c30)OR(rt0.c1)))AND(rt0.c0)))OR(0.33235783558280807)))OR(rt0.c1)))) FROM v0 LIMIT -572147809 OFFSET 284231386;SELECT DISTINCT ((v0.c0 COLLATE BINARY) BETWEEN (((rt0.c2)IS(rt0.c0))) AND ('hM67')), CAST(((t1.c30) IS FALSE) AS REAL), ((CASE t1.c45  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END)<(CASE rt0.c2  WHEN v0.c0 THEN t1.c30 END)) FROM v0, rt0, t1 GROUP BY (+ (t1.c42)) COLLATE BINARY; -- 5ms;
SELECT COUNT(*) FILTER(WHERE ABS(rt0.c0)) OVER ( ORDER BY ((t1.c30) BETWEEN (x'') AND (rt0.c1)) ASC), LTRIM(((((((((rt0.c1)AND(t1.c45)))AND(rt0.c0)))OR(NULL)))AND(rt0.c0))), SUM(CAST(rt0.c0 AS INTEGER)) OVER ( ORDER BY CAST(((rt0.c0) ISNULL) AS TEXT) ASC) FROM t1;SELECT DISTINCT CAST(((rt0.c0) NOTNULL) AS NUMERIC) FROM t1, v0 WHERE (LOWER('-1856295645'));SELECT DISTINCT SUM(CAST(t1.c45 AS INTEGER) COLLATE BINARY) OVER (), ((t1.c45 COLLATE NOCASE) NOTNULL), 0.9882616597460624 FROM t1, rt0, v0; -- 3ms;
SELECT GROUP_CONCAT(((((t1.c30)AND(rt0.c1)))OR(rt0.c2))) OVER ( ORDER BY CASE (((rt0.c1, t1.c42, 0.3985764646091514))==((t1.c45, rt0.c1, rt0.c0)))  WHEN (((v0.c0))>((v0.c0))) THEN t1.c30 WHEN (+ (0.16749322920467757)) THEN ABS(t1.c30) WHEN t1.c45 THEN CHAR(t1.c30) ELSE CASE t1.c42  WHEN rt0.c0 THEN rt0.c2 END END  NULLS LAST), ((t1.c45)>(MIN(t1.c45, rt0.c1))), (((~ (t1.c42))) NOT NULL) FROM v0, t1, rt0 WHERE (CAST(CASE WHEN x'' THEN 0.18996428951773014 ELSE 0.1119978020470831 END AS TEXT)) GROUP BY (((t1.c42, rt0.c0, t1.c30)) NOT BETWEEN ((CASE WHEN rt0.c2 THEN v0.c0 END, ((v0.c0)>=(t1.c45)), t1.c42 COLLATE NOCASE)) AND ((((t1.c45)<>(v0.c0)), ((1.7976931348623157E308)AND(t1.c42)), (~ (rt0.c0))))); -- 5ms;
SELECT NTH_VALUE(((((UNLIKELY(DISTINCT v0.c0))OR((((v0.c0, v0.c0, v0.c0))<>((v0.c0, v0.c0, v0.c0))))))OR(((v0.c0)GLOB(NULL)))), v0.c0) OVER ( ORDER BY ((NOT (t1.c30)) IN ()), (+ (((v0.c0) IS TRUE))) ASC  NULLS FIRST), ((TYPEOF(t1.c30)) ISNULL), HEX(ABS(t1.c45)) FROM v0 WHERE (((CAST('' AS REAL))||(CASE 1541619504  WHEN x'9de3' THEN 0.5912865515923562 ELSE x'' END)));SELECT DISTINCT '-1273164838' FROM v0 WHERE (((((NULL)%('0.5649530546012437')))<<((('CIVWcJ7') ISNULL)))) LIMIT -391228433 OFFSET 520871778; -- 0ms;
SELECT DISTINCT (+ (((((x'')OR(rt0.c0)))AND(0.5649530546012437)))) FROM t1 WHERE ((((((x'', x'', 1.35601223E8)) BETWEEN ((-5.73737252E8, '-', 7.60723092E8)) AND (('-1856427531', NULL, x'')))) ISNULL));SELECT DISTINCT x'' FROM t1; -- 0ms;
SELECT DISTINCT ((MIN(t1.c42, 0.49919314756785904))||(0.05258534277003679)) FROM rt0;SELECT UPPER(DISTINCT json_extract(v0.c0, rt0.c0)) FROM v0, rt0 LIMIT 1370243530 OFFSET 1179103540; -- 0ms;
SELECT MAX(((t1.c30) BETWEEN (t1.c42) AND (t1.c42)) COLLATE NOCASE), (((rt0.c2, t1.c45, v0.c0)) NOT BETWEEN ((((rt0.c0)<=(t1.c45)), (NOT ('-457378529')), ((((t1.c30)AND(rt0.c0)))AND(rt0.c1)))) AND ((CASE t1.c30  WHEN v0.c0 THEN t1.c45 END, IFNULL(DISTINCT t1.c30, v0.c0), ((t1.c42) NOT BETWEEN (t1.c42) AND (rt0.c2))))), 'Omg]O鰷' FROM v0, t1, rt0 GROUP BY (- (NULLIF(t1.c42, t1.c42))); -- 5ms;
SELECT t1.c42 FROM rt0, v0 WHERE ((~ (COALESCE(x'7f39', NULL, x'', NULL)))) LIMIT -1796385366;SELECT (((((rt0.c1) IS TRUE), MIN(t1.c45), (NOT (rt0.c0))))<>((((rt0.c2)<(v0.c0)), x'', (t1.c30 IN ())))) FROM rt0, t1;SELECT ALL CASE WHEN ((rt0.c2) BETWEEN (v0.c0) AND (rt0.c1)) THEN ((((((((t1.c45)OR(rt0.c0)))OR(rt0.c2)))OR(t1.c45)))AND(t1.c42)) WHEN ((t1.c42)>>(NULL)) THEN ((((t1.c42)AND(v0.c0)))AND(t1.c30)) WHEN ((rt0.c1)==(t1.c45)) THEN (((t1.c30)) BETWEEN ((v0.c0)) AND ((rt0.c2))) END FROM rt0, t1 WHERE (((x'') NOT NULL)) GROUP BY ((rt0.c0) ISNULL) COLLATE RTRIM HAVING ((((((((((rt0.c1)AND(rt0.c2)))OR(t1.c45)))OR(t1.c42)))OR(rt0.c0)))OR((~ (rt0.c0))));SELECT DISTINCT (('-1729503459') NOTNULL) FROM v0, t1, rt0 WHERE (CASE WHEN ((x'94f8') IS TRUE) THEN (- (x'')) END); -- 0ms;
SELECT ALL (((0.35051992061886283)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))) COLLATE RTRIM FROM v0 WHERE (CAST('rQq' COLLATE RTRIM AS NUMERIC));SELECT DISTINCT LEAD((((rt0.c2 IN ('1227584810')))IS((rt0.c0 IN (rt0.c2)))), json_insert(COALESCE(rt0.c1, rt0.c2), CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN NULL END, (rt0.c0 IN (rt0.c2))), x'') OVER () FROM rt0 ORDER BY '-2134835464' ASC  NULLS FIRST;SELECT DISTINCT v0.c0 COLLATE BINARY FROM t1, v0; -- 0ms;
SELECT DISTINCT (((rt0.c0, t1.c45 COLLATE NOCASE, x'f8c1'))>((t1.c30 COLLATE NOCASE, CAST(NULL AS BLOB), ((((x'78bb')OR(v0.c0)))OR(rt0.c1))))), '', CAST(((rt0.c1)|(v0.c0)) AS REAL) FROM rt0, t1, v0 WHERE (0.39732153318928964); -- 1ms;
SELECT DISTINCT ((CASE WHEN NULL THEN rt0.c1 ELSE v0.c0 END)>=(t1.c30)), (t1.c42 COLLATE NOCASE IN (((((v0.c0)AND(rt0.c1)))AND(rt0.c1)))), (- ((NOT (0.09635493678193918)))) FROM rt0;SELECT DISTINCT ((((t1.c42)-(NULL))) NOT BETWEEN (LOWER(DISTINCT rt0.c0)) AND (((v0.c0) IS FALSE))) FROM v0 WHERE (((((((((((NULL)OR('TRUE')))OR(0x676f63f2)))AND(NULL)))AND(5.24963727E8)))OR(('-486774163' IN ()))));SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC))<(CAST(rt0.c1 AS NUMERIC))) FROM t1, rt0 WHERE (CASE '-1170078984' COLLATE NOCASE  WHEN (- (0.7411960307675504)) THEN CAST('0.8198179727370856' AS NUMERIC) ELSE CASE NULL  WHEN '-903360885' THEN x'' WHEN 'vZ_pm^yTp' THEN '-1229298492' WHEN 1919765732 THEN '' ELSE NULL END END); -- 0ms;
SELECT ((t1.c42) IS TRUE), ((((t1.c30, v0.c0, t1.c45))<=((t1.c30, t1.c42, 0xffffffffe34bf43e))) IN ()), (((t1.c42))=(((t1.c45 IN ())))), SUM(((rt0.c0) NOT NULL)), ((((((((CASE WHEN rt0.c2 THEN t1.c45 END)AND(json_array(rt0.c0, -1831801646))))AND(TRIM(v0.c0, rt0.c0))))AND(COUNT(*))))OR(t1.c45 COLLATE NOCASE)) FROM rt0, t1 WHERE ((((((- (940479332)))OR(((NULL)==(0.8198179727370856)))))AND(-205184627)));SELECT DISTINCT GROUP_CONCAT((- (rt0.c2)) COLLATE RTRIM) OVER ( RANGE BETWEEN  CURRENT ROW AND rtreenode((- (t1.c45)), ((rt0.c0) NOTNULL)) FOLLOWING EXCLUDE GROUP) FROM t1 ORDER BY (CASE WHEN v0.c0 THEN t1.c45 END IN ()) DESC;SELECT SUM((NOT (t1.c30))) OVER () FROM t1, rt0, v0 WHERE ((((((('')OR(0.0016378381079450444)))OR(NULL)))IS(((0X20837187) NOT BETWEEN (0.8588190659567907) AND (0.0))))); -- 2ms;
SELECT DISTINCT CASE CAST(v0.c0 AS TEXT)  WHEN HEX(v0.c0) THEN ((rt0.c0)<>(t1.c42)) ELSE t1.c42 COLLATE RTRIM END FROM v0 WHERE ((((('-1485406055') IS FALSE))|(CASE WHEN x'' THEN NULL END)));SELECT ALL AVG(CASE WHEN rt0.c0 THEN rt0.c2 END), LEAD((NOT (((NULL) BETWEEN (rt0.c2) AND (rt0.c0)))), (((rt0.c1)) BETWEEN ((TOTAL_CHANGES())) AND ((((rt0.c0)<>(rt0.c1))))), (rt0.c0 IN ((NOT (rt0.c0))))) OVER (), (((NULL)) BETWEEN ((CAST(t1.c42 AS INTEGER))) AND ((((v0.c0) NOT BETWEEN ('') AND (rt0.c0))))) FROM rt0 WHERE (LIKELY(((((x'')OR('-362555869')))OR('r5'))));SELECT ALL CASE ((rt0.c2) NOTNULL)  WHEN (NOT (t1.c30)) THEN GROUP_CONCAT(v0.c0) ELSE ((t1.c30) NOT BETWEEN (rt0.c2) AND (0Xffffffffe2fc6a6d)) END FROM v0, t1, rt0; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS TEXT)) IS TRUE) FROM t1, rt0 WHERE (CASE WHEN NULL COLLATE RTRIM THEN (((x''))>=((0.0))) END) LIMIT 926096753; -- 1ms;
SELECT ALL (- (((rt0.c2) NOT BETWEEN ('-900213483') AND (t1.c30)))) FROM t1 WHERE ((((('')>(x'ffb26dff'))) NOT BETWEEN (x'') AND (((1) IS TRUE))));SELECT DISTINCT CASE (~ (t1.c42))  WHEN MAX(t1.c45) THEN CASE t1.c45  WHEN t1.c42 THEN t1.c45 END END FROM rt0, v0, t1 WHERE (((CASE '(b'  WHEN x'' THEN '' END)IS NOT(((((0.31392156676008254)OR(2034818277)))OR('2009317846'))))); -- 1ms;
SELECT FIRST_VALUE(((ABS(rt0.c2)) NOT BETWEEN (t1.c30) AND (rt0.c2 COLLATE NOCASE))) OVER () FROM rt0, t1; -- 0ms;
SELECT FIRST_VALUE(((((rt0.c0)IS(973413331))) NOT BETWEEN (CASE WHEN v0.c0 THEN t1.c42 WHEN NULL THEN rt0.c0 WHEN v0.c0 THEN rt0.c2 END) AND (CAST(v0.c0 AS NUMERIC)))) OVER () FROM t1, v0, rt0 LIMIT 45639088 OFFSET 1832155766; -- 4ms;
SELECT ALL (((((rt0.c0 IN ()))AND(((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)))))OR(HEX(DISTINCT t1.c45))) FROM rt0, t1; -- 0ms;
SELECT ALL CASE WHEN 0.17315238181738146 THEN (- (v0.c0)) ELSE (rt0.c2 IN ()) END FROM t1, v0; -- 1ms;
SELECT DISTINCT (((0.9994005617163669, (t1.c30 IN (rt0.c1)), rt0.c0 COLLATE BINARY))!=((((x'') NOT BETWEEN (v0.c0) AND (rt0.c2)), x'', ((t1.c30)<=(rt0.c0))))) FROM t1 WHERE ((((x'' IN ())) IS FALSE));SELECT DISTINCT FIRST_VALUE(((json_insert(t1.c30, rt0.c1, rt0.c1))OR(((((((((t1.c30)OR(rt0.c2)))AND(rt0.c1)))AND(0x47f34d56)))AND(NULL))))) OVER () FROM rt0, v0 INNER JOIN t1 ON (((t1.c42, '1432998726', v0.c0)) BETWEEN (((((t1.c45)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))), CAST(t1.c45 AS REAL), CASE t1.c30  WHEN t1.c42 THEN rt0.c1 ELSE t1.c30 END)) AND (((((rt0.c0, t1.c30, 3.7821364E8)) BETWEEN ((t1.c45, NULL, t1.c42)) AND ((t1.c45, rt0.c2, rt0.c2))), ((rt0.c2) BETWEEN (t1.c45) AND (rt0.c2)), ((x'')-(t1.c30))))) WHERE ((((+ (x'e675c391')))AND(x'' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((x'') NOT BETWEEN (((('1468492820')) BETWEEN ((NULL)) AND ((rt0.c2)))) AND (((t1.c42) BETWEEN (t1.c45) AND (rt0.c1)))) FROM rt0, t1; -- 0ms;
SELECT (+ ('-905774856')) FROM t1, v0, rt0; -- 0ms;
SELECT ((('')) BETWEEN (((((((((('C4wG4NT')AND(rt0.c0)))OR(rt0.c2)))AND(t1.c45)))OR(rt0.c2)))) AND ((((rt0.c2)%(v0.c0))))) FROM rt0, v0, t1; -- 1ms;
SELECT (((((rt0.c2)>(''))))<=(((+ (rt0.c2))))), rt0.c1, GROUP_CONCAT(CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 ELSE v0.c0 END) OVER () FROM v0, rt0, t1; -- 3ms;
SELECT (NOT (rt0.c2)) FROM v0, rt0 WHERE (CAST(NULL AS TEXT)); -- 1ms;
SELECT ALL (((((v0.c0)%(t1.c30))))>=((((rt0.c1)>=(rt0.c1))))) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT MIN(((rt0.c1) BETWEEN ('0.20562182765180026') AND (NULL)) COLLATE NOCASE) FROM rt0, t1, v0 WHERE (LIKELY(((('-215042468'))>=(('3X%'))))); -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN 0.14101194785716076 THEN t1.c42 END)AND(rt0.c1)))AND((((rt0.c0, rt0.c2, t1.c45)) BETWEEN ((t1.c30, rt0.c1, rt0.c1)) AND ((rt0.c0, t1.c45, '1541245433'))))))AND((t1.c30 IN ()))))AND(NULL)), t1.c45, ((COUNT(*))>(CAST(589811439 AS NUMERIC))), t1.c42, CASE (((t1.c42))>=((rt0.c2)))  WHEN ((((v0.c0)AND(t1.c30)))AND(t1.c45)) THEN (t1.c42 IN ()) END FROM v0 WHERE (((CAST(x'' AS NUMERIC)) BETWEEN (((x'')GLOB(4.74675526E8))) AND ((('67/Qu') NOT NULL))));SELECT LTRIM(rt0.c0), CAST(v0.c0 COLLATE BINARY AS REAL), (~ (CAST(rt0.c2 AS TEXT))) FROM v0;SELECT DISTINCT TYPEOF((((t1.c45)) BETWEEN ((v0.c0)) AND (('')))) FROM t1 GROUP BY CASE IFNULL(t1.c45, rt0.c2)  WHEN CAST(t1.c45 AS NUMERIC) THEN rt0.c1 COLLATE NOCASE ELSE CASE t1.c30  WHEN rt0.c2 THEN v0.c0 WHEN rt0.c1 THEN t1.c30 WHEN t1.c42 THEN 0.9679578781160316 END END LIMIT 1778068790 OFFSET 955364440;SELECT ALL LEAD(((x'50cb') NOT BETWEEN (v0.c0 COLLATE RTRIM) AND (((v0.c0)>(v0.c0)))), (((((((((v0.c0)AND(NULL)))OR(v0.c0)))OR(v0.c0)))AND(v0.c0)) IN (CAST(v0.c0 AS REAL))), (((v0.c0))<=((v0.c0 COLLATE BINARY)))) OVER (), CASE ((-1856427531)>(rt0.c1))  WHEN (rt0.c0 IN ()) THEN ((t1.c30)>=(rt0.c0)) END, CAST(t1.c45 AS BLOB) FROM v0 WHERE (CASE WHEN 7.41968089E8 THEN '5805820' WHEN '1456737203' THEN x'' WHEN '' THEN '1413158600' WHEN 'gp]lJ>[ A' THEN 'Mj\r{R9|*' WHEN x'' THEN 0.304183293776633 ELSE x'' END COLLATE BINARY);SELECT ((rt0.c1)/(CASE WHEN t1.c30 THEN rt0.c1 WHEN v0.c0 THEN rt0.c0 WHEN t1.c42 THEN rt0.c2 WHEN t1.c45 THEN t1.c30 WHEN 0 THEN '-372084988' WHEN t1.c42 THEN t1.c42 WHEN v0.c0 THEN t1.c45 ELSE t1.c45 END)) FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT ((((t1.c30) NOT BETWEEN (NULL) AND (v0.c0))) NOT BETWEEN (0xffffffff80eac050) AND ('20607743')) FROM t1, rt0;SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) IS FALSE), CAST(((rt0.c1)-(t1.c30)) AS INTEGER), COUNT(*) FROM t1, v0, rt0 WHERE (((0x62a5c847) BETWEEN (0.5551933696845183) AND (NULL)) COLLATE NOCASE); -- 1ms;
SELECT ALL ((('1303028940' IN (rt0.c1, t1.c30))) NOTNULL) FROM t1;SELECT ((rt0.c1) BETWEEN (x'' COLLATE NOCASE) AND ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((t1.c30))))) FROM v0, rt0 WHERE (SQLITE_SOURCE_ID());SELECT (('-561911613')%((+ (rt0.c0)))), CASE WHEN ((v0.c0)=(rt0.c1)) THEN ((rt0.c2)|(t1.c42)) ELSE ((v0.c0) IS FALSE) END, (((CAST(t1.c45 AS REAL)))>((x''))) FROM rt0, t1 LIMIT -891025843;SELECT DISTINCT CASE ((t1.c30) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN ((((rt0.c1)OR(rt0.c0)))AND(rt0.c0)) THEN ((rt0.c2)<(rt0.c0)) ELSE COALESCE(t1.c42, rt0.c2) END, (+ (CASE rt0.c0  WHEN 0.20406348904267724 THEN rt0.c0 END)), JULIANDAY(v0.c0 COLLATE NOCASE, GROUP_CONCAT(v0.c0), ((rt0.c2)IS(v0.c0)), ((rt0.c1)<>(rt0.c2)), ((t1.c45) IS FALSE)) FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT NULL))<(((v0.c0) ISNULL))) FROM v0 WHERE ((((0xffffffff9836f6de) NOT NULL) IN ((NOT (x'ee4c')))));SELECT DISTINCT TOTAL(SQLITE_VERSION()) OVER (), ((((((((((v0.c0)<(t1.c45)))AND(((t1.c30) IS FALSE))))OR(((t1.c30)|('')))))AND(ABS(0.9673672217766152))))AND(MAX(t1.c30))), (((t1.c30 IN ())) NOT BETWEEN ((t1.c42 IN ())) AND (TRIM(2.10143293E8, rt0.c0))) FROM v0, t1, rt0 LIMIT 452156417 OFFSET -80371496; -- 0ms;
SELECT ALL t1.c30 FROM v0 WHERE (CAST((0.3041661065267176 IN ()) AS TEXT));SELECT ((((((((NULL)OR(CAST(t1.c42 AS REAL))))OR(((t1.c30)*(t1.c30)))))OR(((t1.c30) NOT BETWEEN (t1.c42) AND (rt0.c2)))))AND(((rt0.c0)!=(rt0.c2)))), v0.c0, CAST(((((((((t1.c45)OR(rt0.c1)))AND(v0.c0)))AND(rt0.c1)))AND(t1.c30)) AS BLOB) FROM v0, rt0 WHERE ((- (UPPER('1')))) GROUP BY ((((rt0.c0) ISNULL)) IS TRUE), (((((rt0.c2))=((NULL)))) NOT BETWEEN (((((rt0.c1)OR(1.989322562E9)))AND(t1.c42))) AND (x'')), NULL HAVING CAST(t1.c45 AS BLOB) COLLATE BINARY;SELECT DISTINCT RANK() OVER (), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c1))) COLLATE RTRIM, ((LOWER(0X6732f9f9)) NOT BETWEEN (rt0.c2 COLLATE RTRIM) AND ((~ (rt0.c0)))) FROM t1, rt0 ORDER BY ((((((((x'')AND(t1.c42)))AND(((t1.c30) NOT BETWEEN ('-858150667') AND (NULL)))))OR(CASE t1.c30  WHEN t1.c45 THEN t1.c30 END)))AND(x'')) ASC; -- 0ms;
SELECT GROUP_CONCAT(v0.c0) COLLATE RTRIM FROM rt0, t1, v0 WHERE (((((HEX(DISTINCT NULL))OR(0.6075712494747335)))AND('' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t1 NATURAL JOIN rt0; -- 1ms;
SELECT SQLITE_COMPILEOPTION_USED(0.09479779783371933) FROM t1, rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((SUM(rt0.c0))&((NOT (5.8998122E7)))) FROM t1, v0, rt0 LIMIT -905774856 OFFSET 885505017; -- 0ms;
SELECT (- (v0.c0)), CHAR(CASE WHEN t1.c30 THEN NULL ELSE v0.c0 END), COUNT(((((v0.c0)AND(rt0.c1)))OR(rt0.c1))) OVER () FROM rt0 LEFT OUTER JOIN t1 ON ((t1.c42)+(t1.c45)) COLLATE RTRIM ORDER BY (((~ (0.8361843213640985)))>(((((v0.c0)OR(NULL)))OR(0.024672455614101474)))) ASC;SELECT ((((t1.c30 COLLATE NOCASE)OR(CAST(t1.c42 AS NUMERIC))))AND(t1.c45)), (((((((v0.c0)) BETWEEN ((NULL)) AND ((t1.c45))))OR(((t1.c30) IS TRUE))))OR(TOTAL(rt0.c1))), ((((((((((((NULL)OR(t1.c42)))AND(1.832551131E9)))AND(0.2682665528818138)))OR(t1.c30)))OR(((((t1.c42)AND(NULL)))AND(rt0.c1)))))OR(((t1.c42)OR(t1.c30)))) FROM rt0 WHERE ((+ (((x'') BETWEEN (0x7004871e) AND (x'')))));SELECT (~ ((((rt0.c2)) BETWEEN ((x'')) AND ((x''))))), (((((((rt0.c1)) NOT BETWEEN ((x'')) AND ((v0.c0))))OR((- (t1.c30)))))AND((((t1.c45))>((t1.c30))))), ((((NULL) IS TRUE)) BETWEEN ('w{o넴X&璂aF') AND (CAST(t1.c42 AS REAL))) FROM t1 WHERE (((CASE WHEN x'cff9' THEN 0x6d10ebb0 WHEN '' THEN 0.905689434940251 WHEN NULL THEN 0X30438eb5 ELSE 0.06686779751759409 END) BETWEEN ((x'' IN ('n*'))) AND (-513145143 COLLATE RTRIM))) GROUP BY rt0.c1;SELECT ALL (LOWER(DISTINCT rt0.c0) IN ()) FROM v0 WHERE (((CAST(1.73535333E9 AS INTEGER)) ISNULL)); -- 0ms;
SELECT DISTINCT t1.c45 FROM v0 WHERE (COALESCE((('-535271908') IS FALSE), ((0Xffffffff9f27ee6d) NOT BETWEEN ('383218580') AND (0.1981894061226327))));SELECT DISTINCT ((('')) NOT BETWEEN ((((t1.c30)-(t1.c45)))) AND ((v0.c0 COLLATE BINARY))) FROM rt0, v0, t1 WHERE (((('-1729503459', NULL, 0.8164285783310427)) NOT BETWEEN ((x'2a04' COLLATE NOCASE, ((0.12478989692817233)<(-7.71640701E8)), 0Xffffffff90acfe9d)) AND ((LOWER(x''), (((NULL))<>(('BU+{Z-L1'))), CASE WHEN NULL THEN x'6b92' ELSE '1300396728' END)))); -- 0ms;
SELECT DISTINCT ((((((((((((CAST(rt0.c2 AS REAL))AND((~ (rt0.c1)))))OR(((rt0.c0) BETWEEN (rt0.c2) AND (x'')))))OR(((rt0.c2)<=(rt0.c2)))))OR(TRIM(DISTINCT t1.c45))))OR(SQLITE_VERSION())))OR((((rt0.c2)) BETWEEN ((NULL)) AND ((v0.c0))))) FROM v0;SELECT ALL CASE ((t1.c45) IS TRUE)  WHEN ((v0.c0) BETWEEN (t1.c42) AND (rt0.c1)) THEN (((t1.c42))>=((rt0.c1))) END, NULL, (- (CASE t1.c42  WHEN v0.c0 THEN t1.c45 WHEN rt0.c2 THEN 'XE' WHEN '0.7411960307675504' THEN rt0.c2 END)) FROM t1, rt0 WHERE ((NOT (((NULL)<<('%P')))));SELECT DISTINCT ((x'') NOT NULL), LIKELIHOOD(DISTINCT (NOT (t1.c45)), 0.6892653480620459), CAST(((((((((rt0.c0)AND(NULL)))OR(rt0.c1)))AND(t1.c30)))OR(rt0.c0)) AS NUMERIC) FROM v0, rt0;SELECT DISTINCT t1.c42 FROM v0, rt0;SELECT LIKELY(DISTINCT CAST(rt0.c1 AS REAL)), (NOT (((((v0.c0)AND(t1.c45)))OR(t1.c45)))), ((CASE rt0.c0  WHEN t1.c45 THEN x'' WHEN t1.c30 THEN t1.c45 WHEN v0.c0 THEN t1.c30 ELSE rt0.c2 END) NOT BETWEEN (t1.c30) AND (((((t1.c45)AND(rt0.c2)))AND(t1.c42)))) FROM rt0, t1 LIMIT -1371072811 OFFSET -535271908;SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS TEXT) THEN (+ (rt0.c2)) WHEN ((((t1.c30)OR(v0.c0)))AND(rt0.c0)) THEN (((rt0.c2)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) WHEN ((t1.c30)>=(t1.c42)) THEN CASE NULL  WHEN 'weekday0' THEN rt0.c1 END END FROM v0, rt0, t1 WHERE (((('-1520758796')) BETWEEN ((CAST(NULL AS BLOB))) AND ((CASE WHEN -1520758796 THEN x'' ELSE 0.330063470828417 END)))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((t1.c30) IS FALSE)) BETWEEN ((NOT (t1.c45))) AND (((t1.c45) IS TRUE)))) OVER (), COUNT(((v0.c0) ISNULL)) OVER ( ORDER BY ((NULL COLLATE BINARY)+(CAST(0X464f81ae AS INTEGER)))  NULLS LAST), ((((((((((((v0.c0)OR(t1.c42)))AND(rt0.c2)))AND('xp')))OR(t1.c42)))OR(CAST(rt0.c2 AS INTEGER))))OR(((t1.c45) IS TRUE))) FROM t1 GROUP BY ((((((((x'')AND(v0.c0)))OR(rt0.c2)))AND(NULLIF(DISTINCT t1.c45, t1.c42))))OR(((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(v0.c0)))AND(rt0.c2)))AND(t1.c30)))AND(t1.c30)))) HAVING (- ((v0.c0 IN ())));SELECT DISTINCT v0.c0 FROM t1, rt0 WHERE ((((NULL)) BETWEEN ((((x'') IS FALSE))) AND ((((('-1796385366'))<((0X2a4a75e6)))))));SELECT DISTINCT (((t1.c30, rt0.c0, v0.c0)) BETWEEN (((rt0.c2 IN ()), t1.c45 COLLATE BINARY, CAST(rt0.c0 AS REAL))) AND ((x'92b4b371', CAST(v0.c0 AS INTEGER), ((rt0.c1) NOT BETWEEN (t1.c30) AND (t1.c45))))), ((((t1.c30)+(rt0.c1)))IS((NOT (t1.c42)))), GROUP_CONCAT(((((((((t1.c30)OR(rt0.c2)))OR(rt0.c2)))OR(t1.c45)))OR(v0.c0))) FROM v0;SELECT ((MAX(rt0.c0, t1.c30))AND(((rt0.c1) IS TRUE))), CASE WHEN CAST(rt0.c0 AS INTEGER) THEN TYPEOF(rt0.c1) WHEN ((((t1.c45)AND(rt0.c1)))AND(rt0.c2)) THEN ((((((((v0.c0)AND(v0.c0)))OR(rt0.c0)))OR(rt0.c1)))AND(t1.c45)) WHEN (NOT (v0.c0)) THEN CAST(t1.c45 AS BLOB) ELSE MIN(rt0.c1) END, ((((((t1.c42)OR(t1.c30)))OR(rt0.c1))) IS TRUE) FROM t1, v0, rt0 WHERE ((((((((((('-1973522433')OR(0.6863720375206557)))AND(' 9ẩ\rrd')))OR(0.4825093475179494)))OR(''))) NOTNULL)); -- 1ms;
SELECT (((t1.c42)) BETWEEN (((((NULL)) BETWEEN ((rt0.c0)) AND ((t1.c45))))) AND ((((((0x75a6be11)OR(t1.c30)))OR(x'432b'))))) FROM rt0 WHERE ((((('' COLLATE RTRIM)OR(0Xfffffffff9b69f9a COLLATE RTRIM)))OR(CAST(0.011708380387236761 AS REAL)))) ORDER BY '-457378529' COLLATE NOCASE  NULLS FIRST, ((NULL) BETWEEN (((t1.c30) NOT BETWEEN (rt0.c2) AND (t1.c45))) AND ((t1.c42 IN (NULL)))) DESC  NULLS FIRST;SELECT DISTINCT ((UPPER(rt0.c1)) BETWEEN (rt0.c0) AND (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c42)))), ((rt0.c0) IS FALSE) COLLATE BINARY, CAST(CASE WHEN t1.c42 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 END AS INTEGER) FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT (NOT ((((v0.c0, t1.c30, t1.c42, rt0.c0, t1.c45))=((t1.c45, rt0.c0, rt0.c2, rt0.c0, rt0.c2))))) FROM rt0, t1 WHERE ((('-162369851')LIKE(0.5897405653090657)));SELECT (CASE t1.c30  WHEN rt0.c2 THEN rt0.c1 END IN (load_extension(t1.c45), rt0.c2)) FROM rt0 WHERE (((((((NULL)>(0.004769885114586314)))AND(IFNULL('474675526', x'2772'))))OR((+ (x'')))));SELECT DISTINCT (NOT (rt0.c0)) FROM v0 WHERE (((((NULL, x'', x''))>(('Tt', NULL, ''))) IN (((x'') NOT BETWEEN (NULL) AND (NULL)))));SELECT '-535271908' FROM v0, rt0 EXCEPT SELECT ALL CAST(((v0.c0) NOT NULL) AS TEXT) FROM v0, rt0, t1; -- 1ms;
SELECT DISTINCT CASE (((rt0.c1, v0.c0, t1.c42)) BETWEEN ((t1.c30, t1.c45, NULL)) AND ((t1.c45, t1.c42, rt0.c1)))  WHEN x'' THEN CAST(v0.c0 AS BLOB) END, ((((CAST(rt0.c2 AS BLOB))OR(TYPEOF(0.048396805975162493))))OR(SUM(rt0.c2))), TOTAL(LIKELIHOOD(DISTINCT '', 0.9971828533703903)) OVER () FROM t1, rt0;SELECT DISTINCT (((t1.c45)) BETWEEN ((0.7867800817684342)) AND ((((NULL) NOT BETWEEN (v0.c0) AND (rt0.c0))))) FROM v0, rt0, t1 WHERE (((((1.792459602E9) BETWEEN (NULL) AND ('-92655174'))) BETWEEN (((((0.021196883564410962)AND('712662662')))AND(x''))) AND (CAST(-1.371072811E9 AS BLOB)))); -- 0ms;
SELECT t1.c30, ABS((((NULL)) BETWEEN ((t1.c45)) AND ((x'')))), SQLITE_SOURCE_ID() COLLATE NOCASE FROM v0 WHERE ((+ ((('?') BETWEEN (0.06551567544442582) AND (-1.979334855E9)))));SELECT DISTINCT ((rt0.c2) BETWEEN (((t1.c45) ISNULL)) AND (((t1.c45)GLOB(t1.c42)))), COUNT(TRIM(rt0.c2, '0.38063588206344523')) COLLATE NOCASE, t1.c42 FROM rt0 WHERE (CASE WHEN x'' COLLATE NOCASE THEN ((NULL) ISNULL) WHEN (NOT (x'')) THEN ((NULL) NOT BETWEEN (-2020445448) AND (x'')) WHEN ((1e500)<=('AiꣵYg')) THEN LOWER('Jkyb') END);SELECT ALL (((t1.c45 IN ())) NOT BETWEEN (t1.c30 COLLATE NOCASE) AND (CAST(t1.c42 AS TEXT))) FROM v0;SELECT DISTINCT TRIM(AVG(rt0.c0)) FROM v0, rt0; -- 0ms;
SELECT DISTINCT LAG(((((t1.c45)IS NOT(t1.c42)))LIKE(NULLIF(t1.c30, t1.c45))), ((((((((((t1.c42) BETWEEN (t1.c45) AND ('1m')))AND(t1.c42)))OR(((t1.c45) IS TRUE))))AND(CASE t1.c45  WHEN t1.c30 THEN t1.c45 WHEN v0.c0 THEN t1.c30 WHEN t1.c30 THEN t1.c42 END)))OR(((t1.c30) NOT BETWEEN (v0.c0) AND (t1.c30)))), ((((CASE WHEN t1.c30 THEN t1.c42 END)OR(CASE WHEN v0.c0 THEN t1.c30 ELSE t1.c42 END)))AND(CASE t1.c30  WHEN t1.c30 THEN t1.c45 END))) OVER () FROM t1, v0 LIMIT -442087154; -- 0ms;
SELECT TOTAL(v0.c0 COLLATE RTRIM) COLLATE BINARY FROM v0 WHERE (((((x'7c62' IN ()), CASE 0.9166667680822034  WHEN '&H' THEN x'' WHEN NULL THEN 0X28f1fb5b WHEN 'V''쯹' THEN 0.9812129876478066 END, (((((((('')OR(NULL)))OR('OG')))AND(0.17874239651558965)))OR(0.23433301864450684))))>=(((NOT (NULL)), ((0.09728665466440867) ISNULL), ((0X1f4a4f8f) NOT BETWEEN ('F∽Q') AND (NULL)))))); -- 0ms;
SELECT DISTINCT (((v0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) COLLATE BINARY FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT CASE (t1.c45 IN ())  WHEN rtreenode(rt0.c1, t1.c42) THEN SUM(t1.c30) WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c1)) BETWEEN ((t1.c45)) AND ((t1.c42))) WHEN ((rt0.c2)|(NULL)) THEN CASE WHEN t1.c42 THEN x'' ELSE rt0.c1 END END FROM t1 GROUP BY ((CASE WHEN rt0.c2 THEN t1.c30 END) NOT BETWEEN (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1))) AND ((t1.c45 IN ()))), ((((t1.c45)AND(((t1.c45)LIKE(rt0.c1)))))AND(((rt0.c1)==(rt0.c1)))), CAST((NOT (t1.c42)) AS INTEGER);SELECT ALL (((rt0.c0, rt0.c2, 215496983, rt0.c1, t1.c30, rt0.c1, rt0.c0)) NOT BETWEEN ((t1.c30, rt0.c0, NULL, rt0.c0, t1.c45, v0.c0, t1.c45)) AND ((t1.c42, t1.c30, rt0.c1, rt0.c2, t1.c45, t1.c30, 0.38516887702172276))) COLLATE RTRIM FROM rt0, t1, v0; -- 0ms;
SELECT load_extension(((((rt0.c0)AND(rt0.c2)))AND(rt0.c2))) FROM rt0, v0;SELECT DISTINCT SUM(((t1.c42) NOT BETWEEN (rt0.c1) AND (t1.c45))) FROM rt0, t1 WHERE ((((DATETIME('1551548328', 0Xffffffffd4cde484, 0.6214103970801423, x'', '', NULL, NULL)))<(('1165559576')))) ORDER BY (CASE t1.c42  WHEN t1.c30 THEN rt0.c0 END IN ((rt0.c1 IN ()), rt0.c0 COLLATE BINARY)) ASC; -- 0ms;
SELECT DISTINCT LIKELIHOOD((((t1.c30)) NOT BETWEEN ((rt0.c1)) AND ((t1.c45))), 0.5842819620502108) FROM v0, rt0 WHERE (((((NULL)=(0X62c42be7))) IS FALSE)) LIMIT -1565647056 OFFSET -861953329;SELECT DISTINCT SUM(rt0.c1) OVER () FROM v0, t1;SELECT x'12df' FROM t1, rt0, v0 WHERE (((CAST(x'' AS TEXT)) NOT BETWEEN ((NULL IN ())) AND ((('-398257199') NOT BETWEEN ('416748122') AND ('R'))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, t1 WHERE ((- (x''))); -- 0ms;
SELECT DISTINCT json_array_length(rt0.c2 COLLATE RTRIM, ((((t1.c45)AND(v0.c0)))OR(t1.c42))), ((NULLIF(t1.c42, v0.c0)) NOT BETWEEN (COUNT(t1.c42)) AND (0.7663810228654976)), (((json_object(rt0.c2, rt0.c2)))>=(((((x'')) BETWEEN ((t1.c30)) AND ((t1.c30)))))) FROM v0;SELECT ABS(DISTINCT ((v0.c0) BETWEEN (v0.c0) AND (rt0.c2))), (NOT (((rt0.c1) NOT BETWEEN (t1.c30) AND (0Xffffffffc86810b7)))), ((MIN(t1.c45))AND(((((t1.c42)AND(rt0.c2)))OR(t1.c30)))), (((('')OR(((((t1.c45)OR(0.8905832157412306)))OR(rt0.c2)))))AND(((((NULL)AND(t1.c42)))AND(rt0.c2)))), CAST(AVG(rt0.c1) AS NUMERIC) FROM rt0, t1 WHERE (NULL) GROUP BY (((((t1.c30))=((t1.c30)))) NOT BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN '-1483045906' ELSE t1.c42 END) AND (t1.c42 COLLATE BINARY)), LIKE(t1.c45, ((t1.c30) BETWEEN (v0.c0) AND (rt0.c0))), (('3077003') NOTNULL) HAVING (CAST(rt0.c1 AS NUMERIC) IN ());SELECT DISTINCT NTILE((((((rt0.c1)OR(rt0.c2)))OR(v0.c0)) IN ())) OVER () FROM t1 INNER JOIN rt0 ON CASE WHEN CAST(rt0.c0 AS REAL) THEN CAST(t1.c42 AS INTEGER) WHEN (rt0.c1 IN ()) THEN (((rt0.c0))=((v0.c0))) WHEN ((t1.c30) NOT BETWEEN (t1.c30) AND (rt0.c2)) THEN ((((t1.c42)AND(rt0.c1)))OR(t1.c45)) END CROSS JOIN v0 ON ((CASE rt0.c2  WHEN v0.c0 THEN rt0.c1 END)IS NOT(rt0.c2));SELECT DISTINCT GROUP_CONCAT(rt0.c0) OVER () FROM rt0 WHERE (((0.3866188475500575 COLLATE NOCASE)|(((0.21277031949101977) ISNULL)))); -- 0ms;
SELECT DISTINCT LEAD(((((CAST(NULL AS REAL))OR(v0.c0)))OR(((-1.973522433E9)AND(v0.c0)))), COALESCE(DISTINCT (v0.c0 IN ()), ABS(v0.c0), v0.c0, CAST(v0.c0 AS INTEGER)), (((PRINTF(v0.c0, v0.c0, v0.c0, NULL, v0.c0, v0.c0, v0.c0), ((((((((v0.c0)OR(v0.c0)))AND(v0.c0)))OR(v0.c0)))OR(v0.c0)), ((v0.c0) ISNULL)))>(((((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) BETWEEN ((v0.c0, v0.c0, v0.c0, v0.c0, v0.c0)) AND ((v0.c0, v0.c0, v0.c0, v0.c0, NULL))), v0.c0 COLLATE RTRIM, ((v0.c0) BETWEEN (v0.c0) AND (v0.c0)))))) OVER () FROM v0; -- 1ms;
SELECT ALL ((SUM('1861679453')) NOT BETWEEN (rt0.c1) AND (((NULL) NOTNULL))) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((((((CASE WHEN rt0.c0 THEN v0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN '' THEN x'' ELSE t1.c45 END)OR((x'9288' IN ()))))OR(UPPER(rt0.c1))))OR(ABS(t1.c30))))OR(COUNT(rt0.c1))), CAST(((t1.c45) NOT BETWEEN (t1.c42) AND (t1.c30)) AS BLOB), ((((rt0.c0) NOTNULL))|(TRIM(v0.c0))) FROM v0, t1 WHERE (CASE WHEN CAST('1165559576' AS REAL) THEN ((x'')*('-599173977')) END);SELECT (((((t1.c42)LIKE(rt0.c2))))<((GROUP_CONCAT(t1.c30)))) FROM v0, t1, rt0 WHERE (CAST((+ ('')) AS BLOB)) GROUP BY ((((rt0.c2) NOT BETWEEN (t1.c42) AND (t1.c30)))==(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOT BETWEEN (rt0.c2) AND (t1.c42)) AS REAL) FROM rt0, t1 WHERE (((((0.5821170952411472)+(NULL)))<((('-1e500')>=(NULL))))) LIMIT 1627007685 OFFSET -398257199; -- 0ms;
SELECT DISTINCT ((CAST(t1.c42 AS BLOB)) BETWEEN (SUBSTR(t1.c42, rt0.c0)) AND (((t1.c42)+(rt0.c1)))) FROM rt0, t1 WHERE ((((('*R')/('*o!+n7?뼹늃'))) NOT NULL)); -- 0ms;
SELECT ALL ((t1.c45) NOT NULL), ((((t1.c45, v0.c0, rt0.c0)) BETWEEN ((t1.c42, rt0.c1, rt0.c1)) AND ((x'f70e', t1.c45, t1.c30))) IN ((v0.c0 IN ()), (~ (t1.c30)))), (((~ (t1.c45)))IS NOT(((rt0.c2)&(t1.c30)))) FROM v0, rt0, t1 WHERE (((((((((((((((((0.16612994884470023)AND(NULL)))OR(NULL)))OR((+ (-9.2655174E7)))))AND((+ (x'de18')))))OR((('-430644050')<<('6Xc')))))AND((~ ('1392991288')))))AND((((-1818761945)) BETWEEN ((0.32917736337527914)) AND (('0.09635493678193918'))))))OR(((0.03621431529683872)OR(0x6f323955))))); -- 0ms;
SELECT DISTINCT ((rt0.c1 COLLATE NOCASE) NOT BETWEEN ((((rt0.c2))!=(('1165559576')))) AND (CAST(rt0.c1 AS REAL))) FROM t1 WHERE (INSTR(((((((((x'103a')AND('{37lYm')))OR(NULL)))AND(0xfffffffff10814ac)))AND('-372084988')), LIKELY(x'')));SELECT DISTINCT CAST(v0.c0 COLLATE BINARY AS INTEGER), ((t1.c42)&(t1.c45)) COLLATE NOCASE COLLATE NOCASE, TOTAL(((t1.c42) BETWEEN (t1.c45) AND (t1.c45))) OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE TIES) FROM v0, rt0;SELECT ALL ((('-1830213493') ISNULL) IN ()), COUNT((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c30)))), (((v0.c0)) BETWEEN ((rt0.c0 COLLATE BINARY)) AND ((t1.c30))) FROM v0, t1, rt0; -- 1ms;
SELECT ALL DENSE_RANK() OVER ( ORDER BY (+ (v0.c0 COLLATE RTRIM)) DESC  NULLS FIRST, rt0.c0 ASC, (((rt0.c2)OR(v0.c0)) IN ()) DESC) FROM t1 WHERE ('\rS}B,\F');SELECT DISTINCT IFNULL((t1.c45 IN ()), (((t1.c42))>=((t1.c42)))) FROM rt0;SELECT DISTINCT ((TOTAL(rt0.c2)) NOT BETWEEN ((((rt0.c2)) BETWEEN ((0.47665116102101723)) AND ((t1.c45)))) AND (MAX(rt0.c0))), (t1.c45 COLLATE RTRIM IN ()), ((((rt0.c2)==(0.9135585367427993)))<<(((v0.c0) ISNULL))) FROM rt0;SELECT DISTINCT ((rt0.c1)|(t1.c42)) COLLATE RTRIM, (CAST(t1.c42 AS BLOB) IN ((- (v0.c0)), (+ (0.05607627081566158)))), (((t1.c30)) NOT BETWEEN ((CASE WHEN rt0.c0 THEN rt0.c1 WHEN 0.8099593667984196 THEN t1.c30 WHEN rt0.c0 THEN v0.c0 ELSE v0.c0 END)) AND ((CAST(rt0.c2 AS INTEGER)))) FROM v0, t1, rt0 WHERE (((((0.3557597881506094) NOTNULL)) BETWEEN ((~ ('-590317266'))) AND ((((('<V ')OR('%9')))AND(-1.729503459E9))))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM v0, t1 WHERE (((('0.38063588206344523')) NOT BETWEEN (((254899122 IN ()))) AND ((((x'7cf1')AND(334534722)))))); -- 0ms;
SELECT DISTINCT TRIM(LIKELIHOOD(DISTINCT t1.c45, 0.7451518651892617), ((((t1.c42)OR(rt0.c1)))AND(rt0.c0))) FROM rt0 WHERE (((('1542256199')) BETWEEN ((((((((((-1.371072811E9)OR(x'')))AND(NULL)))OR('?l3')))OR('')))) AND ((((1750561922)LIKE(x''))))));SELECT ALL JULIANDAY(COUNT(*), x'', CASE t1.c30  WHEN rt0.c1 THEN rt0.c2 ELSE t1.c30 END), JULIANDAY(((v0.c0) IS TRUE), v0.c0, ((t1.c30)<=(rt0.c0))), (CAST(t1.c45 AS REAL) IN ()) FROM t1 WHERE (ROUND((((-858150667, x'fc67', '2116268922')) NOT BETWEEN (('-590317266', '1846263690', NULL)) AND (('-1642199917', x'', 'E'))), CAST('1077116277' AS NUMERIC)));SELECT COUNT(CAST(t1.c30 AS REAL)) OVER (), '裙)y]VY*', NTH_VALUE(((((((x'')AND(-1795149604)))OR(v0.c0)))GLOB(CAST(v0.c0 AS REAL))), SQLITE_COMPILEOPTION_USED(((v0.c0)AND(v0.c0)))) OVER ( ORDER BY CAST((+ (t1.c42)) AS INTEGER) ASC, ((((((rt0.c0)OR(t1.c42)))OR(rt0.c2))) IS TRUE) DESC  NULLS LAST GROUPS BETWEEN CAST(t1.c30 AS BLOB) PRECEDING AND 0.7669690614595972 FOLLOWING EXCLUDE NO OTHERS) FROM v0;SELECT DISTINCT t1.c42, rt0.c2, ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((x'') NOT BETWEEN (t1.c45) AND (t1.c42))) AND (((((0X1e03ff4)OR(0Xfffffffff2d3bb20)))OR(rt0.c2)))) FROM v0, rt0, t1 WHERE ((+ (CAST('WH\n&.I)\n5' AS REAL)))); -- 0ms;
SELECT DISTINCT ((((NULL) IS TRUE)) IS FALSE), 0.6805566083347875, COUNT(NULL) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0; -- 0ms;
SELECT ALL LAG(UPPER((NOT (t1.c42))), ((rt0.c2 COLLATE BINARY) BETWEEN (((rt0.c0)<>(rt0.c2))) AND (((t1.c42) NOTNULL))), ((CASE WHEN t1.c45 THEN rt0.c0 ELSE t1.c30 END) IS TRUE)) OVER () FROM t1, rt0 WHERE (HEX(DISTINCT CAST(0.038222487299449215 AS BLOB))); -- 1ms;
SELECT (((rt0.c0 IN ())) NOTNULL) FROM v0, rt0 INDEXED BY i61, t1 WHERE ((((NULL IN (-1.62369851E8, -2.020445448E9))) IS TRUE));SELECT DISTINCT CASE WHEN (t1.c42 IN ()) THEN ((v0.c0)IS NOT(rt0.c0)) END FROM rt0 GROUP BY (CAST(rt0.c0 AS INTEGER) IN ()), (NOT (rt0.c0)), CAST(t1.c45 AS BLOB) HAVING (-2125901799 IN ((((rt0.c2))<((v0.c0))), ((t1.c42) IS TRUE)));SELECT DISTINCT ((((((rt0.c1))==((rt0.c2)))))<=((CASE WHEN t1.c45 THEN t1.c30 ELSE rt0.c2 END))) FROM t1, v0 WHERE ((((x'')<('-1483045906')) IN ()));SELECT DISTINCT NTILE(((rt0.c2 COLLATE NOCASE) BETWEEN (IFNULL(rt0.c1, v0.c0)) AND ('1989322562'))) OVER (), ((rt0.c0 COLLATE BINARY)||(((rt0.c0) BETWEEN (t1.c42) AND (t1.c30)))), CASE WHEN AVG(rt0.c0) THEN CASE t1.c30  WHEN NULL THEN rt0.c0 END ELSE CAST(rt0.c0 AS BLOB) END FROM rt0, v0;SELECT DENSE_RANK() OVER (), (((rt0.c0)) BETWEEN ((((((rt0.c1)OR(t1.c42)))OR(rt0.c2)))) AND ((((t1.c30)<<(t1.c30))))), UNLIKELY(CAST(rt0.c1 AS NUMERIC)) FROM t1, rt0, v0; -- 9ms;
SELECT ALL (((((((((((((((v0.c0)AND(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))AND(t1.c45)))AND(rt0.c1))))==((CASE rt0.c2  WHEN t1.c45 THEN rt0.c2 ELSE v0.c0 END))) FROM rt0 WHERE (((0.11460416136775631 IN ()) IN ())) LIMIT 2104961901 OFFSET -590317266;SELECT ((t1.c42)&(CAST(t1.c30 AS INTEGER))), ((((((rt0.c0)*(t1.c45)))AND(UPPER(DISTINCT t1.c30))))OR(((0xffffffffe9d26f04)<=(rt0.c0)))), '0.4094164713218281' COLLATE RTRIM FROM rt0 INDEXED BY i68;SELECT DISTINCT ((v0.c0)%(rt0.c0)) COLLATE BINARY FROM v0, t1, rt0 WHERE (CAST(((NULL) NOTNULL) AS INTEGER)) LIMIT 870168791 OFFSET 508079035; -- 0ms;
SELECT ALL ((CAST(v0.c0 AS TEXT))LIKE(t1.c30 COLLATE RTRIM)) FROM rt0;SELECT DISTINCT CAST(CASE WHEN t1.c42 THEN rt0.c0 ELSE v0.c0 END AS REAL) FROM rt0, t1;SELECT t1.c42 FROM v0;SELECT DISTINCT (- ((NOT (rt0.c2)))), (rt0.c1 COLLATE NOCASE IN ()), ((((t1.c30) BETWEEN (rt0.c1) AND (rt0.c0))) NOTNULL) FROM rt0, v0, t1 ORDER BY ((((474675526)>=(rt0.c1)))+(rt0.c1)) DESC  NULLS FIRST, CAST((('') NOT BETWEEN (t1.c42) AND (rt0.c0)) AS BLOB); -- 3ms;
SELECT DISTINCT ((((rt0.c2)AND(t1.c42))) NOTNULL) FROM rt0, v0, t1 WHERE ((((- (NULL)))-((NOT (NULL))))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((rt0.c1)OR(t1.c42)), 0.5455557275007724) FROM t1 WHERE ((CASE 0X1c4af946  WHEN '-890709323' THEN NULL WHEN NULL THEN NULL WHEN NULL THEN 210143293 WHEN 'k첌' THEN x'' WHEN 0.2000340606610851 THEN x'' END IN ()));SELECT ALL ((- (t1.c42)) IN ()) FROM t1, rt0, v0; -- 0ms;
SELECT ((((((((rt0.c2)AND(t1.c42)))AND(t1.c45)))AND('0.7867800817684342')))AND(NULL)) COLLATE BINARY, ((x'3f26')-(((t1.c42)GLOB(t1.c42)))), CASE ((t1.c42) NOT NULL)  WHEN (t1.c42 IN ()) THEN rt0.c2 END FROM t1, v0, rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c2)AND(t1.c42)))OR(rt0.c1))))<>(((((rt0.c0))>=((rt0.c2)))))) FROM v0;SELECT DISTINCT (((CAST(rt0.c1 AS TEXT)))!=(((t1.c30 IN ())))), ((NULLIF(rt0.c0, t1.c45))/((~ (rt0.c0)))), AVG(MIN((+ (rt0.c2)))) FROM rt0, t1 WHERE ((((((((((('') IS FALSE))OR(0X17375310)))OR(LIKELY(DISTINCT -705008280))))AND(CASE NULL  WHEN 0.2568626198128503 THEN x'' WHEN x'' THEN '2120497529' WHEN NULL THEN x'a036' ELSE 0.507688348235625 END)))AND(CASE WHEN NULL THEN '35657205' END))) GROUP BY (((rt0.c0 IN ()))AND(t1.c42 COLLATE BINARY)), t1.c45, CAST(t1.c30 COLLATE BINARY AS INTEGER) HAVING AVG(((t1.c30)>(v0.c0)));SELECT DISTINCT CASE WHEN x'bf8be9a5' THEN CASE rt0.c1  WHEN rt0.c0 THEN v0.c0 WHEN t1.c42 THEN t1.c42 WHEN v0.c0 THEN t1.c42 ELSE t1.c42 END ELSE 0x6465a88b END, rt0.c1, COUNT(((((rt0.c2)OR(t1.c45)))AND(rt0.c0))) OVER () FROM rt0;SELECT ALL (((t1.c30 IN ()))GLOB((- (rt0.c2)))) FROM t1, v0, rt0 WHERE ((((((NULL IN ()))AND((x'' IN (x'', 'M\r')))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT MIN(json_array_length(rt0.c1, '1641910387')) FROM rt0, t1, v0;SELECT COUNT(*) FROM t1, rt0; -- 0ms;
SELECT DISTINCT (((t1.c30, t1.c30, rt0.c0)) NOT BETWEEN (((- ('0.8678133484987907')), t1.c30, x'5df1')) AND ((CAST(t1.c30 AS TEXT), ((t1.c42)LIKE(v0.c0)), (- (rt0.c2))))) FROM rt0, v0 WHERE ((((('96118633')LIKE(NULL)))LIKE(CAST('' AS INTEGER))));SELECT DISTINCT ((0.8581495843924045)<=(((t1.c30)GLOB(v0.c0)))) FROM rt0, v0, t1; -- 0ms;
SELECT ((((v0.c0)>(t1.c42))) IS TRUE) FROM t1, rt0 WHERE (CAST(((0.37167181205639255) BETWEEN ('3077003') AND ('0.7867800817684342')) AS NUMERIC)) LIMIT -1656426721;SELECT DISTINCT (CASE ''  WHEN v0.c0 THEN rt0.c2 ELSE t1.c42 END IN ()), t1.c42, CASE ((((rt0.c1)OR(t1.c45)))OR(rt0.c0))  WHEN t1.c45 COLLATE RTRIM THEN t1.c45 COLLATE RTRIM WHEN CASE t1.c42  WHEN rt0.c1 THEN t1.c30 END THEN IFNULL(DISTINCT t1.c30, rt0.c1) WHEN CAST(x'' AS BLOB) THEN (((t1.c30)) NOT BETWEEN ((rt0.c1)) AND ((t1.c30))) WHEN rt0.c0 COLLATE BINARY THEN ((t1.c30)>>(v0.c0)) WHEN (((t1.c42))!=((rt0.c0))) THEN (rt0.c2 IN ()) ELSE 'dťu캰 oR|' END FROM t1, v0;SELECT x'' FROM v0 INDEXED BY i87;SELECT DISTINCT (((((t1.c30)+(rt0.c1))))<((AVG(t1.c45)))) FROM rt0;SELECT DISTINCT ((CASE t1.c30  WHEN rt0.c2 THEN x'' ELSE t1.c45 END) BETWEEN (CAST(rt0.c1 AS REAL)) AND (json_array_length(rt0.c0, t1.c30))), CAST(rt0.c0 AS REAL) COLLATE NOCASE, rt0.c2 FROM t1 WHERE (((((x'') ISNULL)) NOT BETWEEN ((~ (0.18798999703117802))) AND (-1.709954598E9 COLLATE BINARY)));SELECT ((((((t1.c42)OR(t1.c42)))OR(t1.c42))) IS FALSE) FROM rt0, v0 WHERE ((((((((('' COLLATE BINARY)AND((((NULL)) BETWEEN ((NULL)) AND (('-372368832'))))))AND(CASE 0Xffffffff90acfe9d  WHEN 0.9886851847928292 THEN 0.7743161160856119 END)))OR(CAST(NULL AS NUMERIC))))AND(((NULL)&(''))))) GROUP BY t1.c30 HAVING (+ ((t1.c45 IN (rt0.c2))));SELECT DISTINCT ((t1.c30)<=(((t1.c30)GLOB(rt0.c1)))) FROM t1, rt0, v0; -- 0ms;
SELECT ALL (MAX(t1.c42) IN (rt0.c0 COLLATE NOCASE)), (((~ (rt0.c2)))>(rt0.c0)), ((CAST(rt0.c0 AS INTEGER))<=(((t1.c45) NOT BETWEEN (t1.c30) AND (v0.c0)))) FROM v0, t1 WHERE (((((x'360f')<=(3.408217149348802E-4))) IS TRUE)) ORDER BY CASE WHEN t1.c45 THEN CASE WHEN t1.c45 THEN t1.c42 END ELSE CAST(v0.c0 AS BLOB) END ASC  NULLS FIRST;SELECT ((0.5061701429509778) NOT BETWEEN ((((NULL)) BETWEEN ((rt0.c1)) AND ((v0.c0)))) AND (((rt0.c2)%(0.8472465656955404)))) FROM v0 WHERE (CASE WHEN x'' COLLATE BINARY THEN ((0Xffffffffdc4954a7) NOT BETWEEN (0X395d8b31) AND (x'')) WHEN (('-1471902881') NOT BETWEEN ('') AND (NULL)) THEN CAST(0.35675592263328404 AS REAL) WHEN ((NULL) IS FALSE) THEN ((0.10793369554078591) NOT NULL) ELSE (((x'3d2f93e4', '', x'')) BETWEEN ((-454502404, x'', 0X3843d6a)) AND ((x'', '-486774163', '-1618253977'))) END) LIMIT -428273740 OFFSET 1018972064;SELECT ALL ((COUNT(*)) BETWEEN (CASE t1.c45  WHEN rt0.c2 THEN t1.c30 ELSE rt0.c1 END) AND (rt0.c2)) FROM rt0 GROUP BY ((CASE WHEN rt0.c1 THEN rt0.c0 END)%(((0xffffffff98e9df1d) IS TRUE)));SELECT (((v0.c0)AND(rt0.c1)) IN ()) FROM t1, rt0; -- 0ms;
SELECT CASE WHEN MIN(rt0.c1) THEN t1.c45 COLLATE NOCASE WHEN (t1.c42 IN ()) THEN ((rt0.c2)*(rt0.c2)) WHEN CAST(t1.c45 AS REAL) THEN ((rt0.c2)==(rt0.c1)) END, (((((t1.c42)) BETWEEN ((t1.c42)) AND ((t1.c45))))*(((t1.c30) BETWEEN ('\n酌&[r-*E<') AND (rt0.c1)))), ((((t1.c45)AND((((t1.c45))<>((rt0.c1))))))OR(((x'') NOT BETWEEN (t1.c45) AND (rt0.c0)))) FROM rt0, t1; -- 1ms;
SELECT DISTINCT ((((((((CAST(0x4514997b AS TEXT))OR(v0.c0)))OR(((((v0.c0)AND(NULL)))AND(t1.c30)))))OR(0.25674733742126143)))AND(((((rt0.c0)OR(t1.c30)))OR(rt0.c1)))) FROM rt0, v0, t1 WHERE (((((x'1e3c')!=(NULL))) BETWEEN (NULL COLLATE BINARY) AND (x''))); -- 0ms;
SELECT ALL ((((CAST(t1.c30 AS NUMERIC))OR((('[夕\rRm]g넴e') BETWEEN (t1.c30) AND (rt0.c2)))))OR(((rt0.c0)!=(t1.c45)))), (((t1.c30)) BETWEEN ((((rt0.c0)+(rt0.c2)))) AND (((- (t1.c42))))), CASE ((rt0.c2)<>(v0.c0))  WHEN (v0.c0 IN (t1.c30, v0.c0)) THEN t1.c45 WHEN t1.c30 COLLATE BINARY THEN ((1511360498)OR(t1.c45)) WHEN CAST('SD' AS TEXT) THEN ((((((((v0.c0)OR(rt0.c0)))AND(-1568709898)))OR(rt0.c0)))OR(v0.c0)) END FROM t1 WHERE (CAST((((x'', NULL, 1644699856)) NOT BETWEEN (('0.7653130854944361', 'TRUE', 'yc?m9')) AND (('~vgI', '', NULL))) AS INTEGER)) LIMIT 418578789 OFFSET 1729075261;SELECT DISTINCT SUM((t1.c42 IN (NULL))) COLLATE RTRIM, (NOT (((((t1.c45)OR(v0.c0)))OR(t1.c42)))), (((((rt0.c0, t1.c42, t1.c30))!=((0.22020136714033067, NULL, t1.c30))))>(rt0.c0)) FROM t1, v0, rt0 INDEXED BY i87 WHERE (1.832551131E9);SELECT DISTINCT IFNULL(0.9892416479073883, rtreenode(rt0.c0, rt0.c0)), CASE WHEN ((rt0.c1)GLOB(t1.c42)) THEN ((t1.c45)GLOB(rt0.c1)) ELSE ((t1.c45) NOT BETWEEN (t1.c42) AND (t1.c45)) END, (((+ (rt0.c1)))<<(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))), '-852760142', (((v0.c0)) BETWEEN ((x'')) AND ((rt0.c2 COLLATE NOCASE))) FROM rt0, v0, t1; -- 0ms;
SELECT (((CASE WHEN rt0.c0 THEN rt0.c1 ELSE t1.c42 END, (((t1.c42))<((NULL))), ((t1.c42)<(v0.c0))))<=(((- (v0.c0)), DATE(t1.c30, v0.c0, t1.c45), (~ (rt0.c2))))) FROM v0, t1 WHERE (TRIM(LIKELY(0.24951555325241837)));SELECT DISTINCT rt0.c0, MAX(0.6649510825975319), GROUP_CONCAT(NULL COLLATE BINARY), rt0.c0, (((t1.c42 IN ()))||(json_array(t1.c42, rt0.c0))) FROM rt0, t1 WHERE (((((((0.5000785450503993) NOT NULL))AND((((NULL)) BETWEEN (('%/2.8v-{^')) AND (('[9'))))))OR((NOT (x''))))) LIMIT -1249729064 OFFSET -256152765; -- 0ms;
SELECT DISTINCT t1.c30 FROM t1 WHERE (CASE CAST('545485191' AS REAL)  WHEN CASE WHEN NULL THEN 0.3043351861850654 ELSE 'e[' END THEN ('-1948969425' IN ()) ELSE (x'' IN ('#')) END) GROUP BY ((((t1.c30) BETWEEN (t1.c45) AND (rt0.c0)))IS(t1.c30 COLLATE RTRIM)) ORDER BY CAST(rt0.c2 COLLATE NOCASE AS BLOB), CASE x''  WHEN (((t1.c30, rt0.c0, rt0.c0)) NOT BETWEEN ((t1.c45, rt0.c2, v0.c0)) AND ((t1.c42, v0.c0, v0.c0))) THEN CASE WHEN rt0.c1 THEN v0.c0 ELSE rt0.c2 END WHEN '-1380845405' THEN ((('1438278008')) NOT BETWEEN ((rt0.c0)) AND ((t1.c30))) WHEN ((t1.c30)&(rt0.c1)) THEN (- ('361964700')) END  NULLS FIRST;SELECT CAST(CASE t1.c42  WHEN rt0.c2 THEN v0.c0 END AS TEXT) FROM t1 WHERE (CAST(((NULL) ISNULL) AS TEXT));SELECT DISTINCT x'' FROM rt0, v0; -- 0ms;
SELECT DISTINCT (LIKELIHOOD(rt0.c2, 0.4462646122875986) IN ()) FROM t1, rt0 WHERE (LTRIM(NULL) COLLATE BINARY) LIMIT 1010584534 OFFSET -1624773011; -- 7ms;
SELECT CAST((((x''))<((t1.c45))) AS NUMERIC), SUM(CAST(0.8731015586070833 AS BLOB)) OVER (), (((rt0.c2, rt0.c1, rt0.c1)) BETWEEN (((rt0.c2 IN ()), ((((v0.c0)AND(t1.c45)))OR(t1.c45)), ((t1.c30) NOT BETWEEN (t1.c42) AND (rt0.c0)))) AND ((((v0.c0)>(t1.c45)), ((((((((t1.c30)AND(rt0.c1)))OR(t1.c42)))OR(t1.c42)))AND(t1.c42)), ((t1.c42)%(t1.c42))))) FROM v0, t1, rt0 WHERE (CASE WHEN 0.4226082557125689 COLLATE RTRIM THEN ((0.6600376371539644) NOT BETWEEN (0.8948238330360653) AND (NULL)) ELSE ((((x'')AND(NULL)))OR(NULL)) END); -- 10ms;
SELECT ALL CAST(CAST(rt0.c0 AS BLOB) AS REAL), (((((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c1)))AND(v0.c0)))AND(rt0.c1)), ((t1.c42) ISNULL), (rt0.c0 IN ())))<((((rt0.c0)%(rt0.c0)), CASE WHEN t1.c30 THEN t1.c45 ELSE v0.c0 END, ((t1.c42)-(rt0.c0))))), highlight(CAST(t1.c42 AS INTEGER), 0.4894909334609251, rt0.c0 COLLATE BINARY, t1.c45 COLLATE NOCASE) FROM v0, t1;SELECT RANK() OVER () FROM v0 WHERE ((- ('190688937')) COLLATE RTRIM); -- 1ms;
SELECT ALL ((NULL)+(((t1.c30) ISNULL))) FROM t1, v0 WHERE (CASE (((0.24196165817952808, '0.6831418783927137', 0.16118746793521377))<((NULL, 0.7634303275375584, '-1164219111')))  WHEN (('1299803612') BETWEEN ('1511360498') AND ('')) THEN (('JjkT') BETWEEN ('327216841') AND ('\K')) WHEN CASE 0.8131541432632644  WHEN NULL THEN NULL END THEN 0.6839490459989103 COLLATE NOCASE WHEN 0.9994005617163669 COLLATE NOCASE THEN (~ (NULL)) ELSE CASE 0.2411293920760782  WHEN x'' THEN x'4a85' WHEN '-397996233' THEN x'' WHEN 0.42017820702725117 THEN x'' WHEN '' THEN 0.9135782928700166 WHEN 0.427302700534834 THEN x'' WHEN NULL THEN NULL WHEN NULL THEN 0.5251597549133674 END END); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT (NOT (rt0.c1))) FROM v0 LIMIT -166458809 OFFSET 442342513;SELECT DISTINCT ((((((((((rt0.c2)IS(t1.c45)))OR(CAST(rt0.c1 AS REAL))))AND(CAST(t1.c45 AS REAL))))AND(CAST(rt0.c1 AS REAL))))OR(((t1.c45) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM t1, rt0; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, v0 WHERE (((x'2d3c') IS FALSE) COLLATE RTRIM) ORDER BY (((rt0.c0)LIKE(-1.520758796E9)) IN ()) DESC  NULLS FIRST; -- 0ms;
SELECT CAST(((v0.c0) IS FALSE) AS REAL) FROM t1;SELECT ALL ((CASE rt0.c0  WHEN rt0.c2 THEN v0.c0 END)!=('ḘMux8]dE⹸')), ((((rt0.c2) ISNULL))%(((rt0.c1) BETWEEN (t1.c45) AND (1347891420)))), CAST((t1.c45 IN (rt0.c1)) AS BLOB) FROM t1 WHERE ((((0.5403873841940122, NULL, NULL)) BETWEEN ((CASE WHEN 's2)d' THEN '1832551131' ELSE x'ba57' END, CAST('1138097483' AS REAL), CASE WHEN 0.39250927999103624 THEN '-1358518190' END)) AND (((((x'')) BETWEEN (('589811439')) AND ((7.4488616E7))), CAST(x'' AS REAL), ((x'') ISNULL)))));SELECT DISTINCT CASE ((t1.c42) BETWEEN (rt0.c2) AND (rt0.c1))  WHEN ((x'afe55263') BETWEEN (t1.c42) AND (rt0.c2)) THEN ((t1.c45)<=(t1.c42)) END FROM rt0, t1, v0 WHERE (('' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL ((((((((((v0.c0)OR(t1.c45)))AND(v0.c0)))AND(t1.c45)))OR(rt0.c0))) NOT NULL), t1.c30, AVG((v0.c0 IN ())) OVER ( ORDER BY 'yY^Js3') FROM v0, t1;SELECT DISTINCT LAST_VALUE((((t1.c30)*(t1.c45)) IN ())) OVER ( GROUPS ((rt0.c0 COLLATE NOCASE)||(CAST(v0.c0 AS REAL))) PRECEDING) FROM t1;SELECT ALL t1.c30, SUM(rt0.c1), TOTAL(((((((((t1.c45)OR(v0.c0)))AND(t1.c42)))OR(t1.c45)))AND(v0.c0))) OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND CASE ((v0.c0)&(rt0.c2))  WHEN v0.c0 THEN rt0.c0 END FOLLOWING EXCLUDE NO OTHERS) FROM t1 WHERE (((NULL) NOT BETWEEN (NULL) AND ('-510734610')) COLLATE RTRIM);SELECT DISTINCT (((((rt0.c0) NOT BETWEEN (t1.c30) AND (rt0.c1))))>((rt0.c0))), CUME_DIST() OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), ((rt0.c0)+(CASE rt0.c1  WHEN t1.c45 THEN rt0.c2 ELSE v0.c0 END)), '709940292', SQLITE_VERSION() FROM v0 WHERE ((((NULL)) NOT BETWEEN ((((((NULL)OR('-907258550')))OR(0.7867800817684342)))) AND ((((((0.1746374745804864)AND('')))AND(NULL))))));SELECT DISTINCT (NOT ((- (t1.c30)))) FROM v0;SELECT DISTINCT (((v0.c0)) BETWEEN (((rt0.c2 IN ()))) AND (((rt0.c2 IN ())))), ((((t1.c42)-(t1.c30))) NOT BETWEEN ((('u')&(x''))) AND (TOTAL(t1.c45))), ((t1.c45) NOT NULL) FROM t1 WHERE ((~ (((0X469d2bc9)OR('-1979334855')))));SELECT CASE WHEN COUNT(*) THEN ((t1.c45)==(rt0.c2)) END, AVG((((v0.c0, rt0.c2, v0.c0)) BETWEEN ((t1.c30, rt0.c1, t1.c30)) AND ((t1.c45, rt0.c0, NULL)))), ((((rt0.c1)) NOT BETWEEN ((v0.c0)) AND ((t1.c45))) IN ()) FROM t1;SELECT DISTINCT (CAST(t1.c30 AS NUMERIC) IN ()), (((((rt0.c0, v0.c0, t1.c30)) NOT BETWEEN ((t1.c42, t1.c42, rt0.c0)) AND ((t1.c45, t1.c30, rt0.c2)))) BETWEEN (((v0.c0)-(v0.c0))) AND (COUNT(x''))), ((((rt0.c1)!=(t1.c30)))>>(t1.c42)) FROM rt0 WHERE (CASE (+ (''))  WHEN -1.520278381E9 THEN ((x'')AND(x'e2ae')) WHEN CASE WHEN 0.25199480708049626 THEN '' WHEN 0.999393496106703 THEN x'' WHEN '&ao\r' THEN NULL ELSE '246852225' END THEN 0.7559596249138896 COLLATE BINARY WHEN UNICODE('[9') THEN '0.36775389205021325' COLLATE NOCASE WHEN CASE WHEN '1879344926' THEN x'' WHEN '1728478496' THEN NULL WHEN '-535271908' THEN '-76271399' WHEN 0.0193366434911193 THEN x'' WHEN NULL THEN '-1428311453' END THEN (((NULL, '', NULL))<=((0.5502112354262523, NULL, NULL))) WHEN LIKELIHOOD('-1393036358', 0.34643844645040145) THEN (((((((('3k''*w7')OR('-1336145610')))AND(0xffffffffe8470f37)))OR('㖣YE*R,')))AND(NULL)) END);SELECT ((('1052481638'))>=((CAST(rt0.c0 AS INTEGER)))), ((t1.c30) IS FALSE) COLLATE BINARY, v0.c0, COUNT(((((((((t1.c42)OR(rt0.c0)))AND(v0.c0)))AND(-1.371072811E9)))OR(rt0.c1))) OVER (), AVG((+ (rt0.c1))) FROM v0, t1 GROUP BY rt0.c0;SELECT (t1.c45 IN ()) COLLATE BINARY, MAX(t1.c45), CAST((((rt0.c1))==((t1.c30))) AS TEXT) FROM t1, rt0; -- 0ms;
SELECT DISTINCT -1477010018 FROM rt0, v0 GROUP BY (((((+ (t1.c30)))AND(json_array(t1.c42, v0.c0))))OR(((((rt0.c2)OR(v0.c0)))AND(rt0.c0)))) HAVING MIN((- (rt0.c1)));SELECT DISTINCT ROW_NUMBER() OVER () FROM t1, v0 ORDER BY ((((((rt0.c2)OR(t1.c45)))OR(v0.c0))) NOT BETWEEN (((('/x䊣Lq'))!=((t1.c30)))) AND ((rt0.c1 IN ())))  NULLS FIRST;SELECT DISTINCT CAST(((t1.c30)*(v0.c0)) AS TEXT), ((((((((((((((((((rt0.c1)OR(t1.c30)))AND(rt0.c2)))OR(v0.c0)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))OR(t1.c30)))OR(rt0.c0)))+(t1.c42 COLLATE RTRIM)), CAST(0x7e74fd54 AS TEXT) FROM rt0;SELECT DISTINCT ((((0.8980737416468697)OR(LOWER(rt0.c1))))OR(TOTAL(rt0.c1))) FROM v0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)OR(t1.c45)))&(((rt0.c1) NOTNULL))) FROM t1, rt0; -- 0ms;
SELECT ALL ((MAX(rt0.c2)) IS TRUE) FROM t1, rt0, v0; -- 1ms;
SELECT ALL 202745811, TRIM(DISTINCT ((rt0.c2)>=(t1.c42)), '862133508'), (((((rt0.c1))>(('-1254805229')))) BETWEEN (highlight(t1.c30, '487314097', t1.c30, rt0.c1)) AND (((rt0.c2) NOT NULL))) FROM rt0 ORDER BY ((((v0.c0)IS NOT(rt0.c2))) BETWEEN (((t1.c42) IS TRUE)) AND (((v0.c0)IS NOT(t1.c30))));SELECT ALL ((t1.c45 COLLATE RTRIM) NOT BETWEEN (AVG(t1.c45)) AND (TYPEOF(t1.c42))) FROM t1, v0 GROUP BY CASE (+ (rt0.c2))  WHEN rt0.c2 COLLATE RTRIM THEN ((t1.c42)GLOB(rt0.c2)) WHEN x'' THEN ((v0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) WHEN (- (rt0.c0)) THEN ((NULL)<(t1.c42)) END;SELECT DISTINCT CAST(GROUP_CONCAT(t1.c42) AS INTEGER), COUNT(*) OVER ( GROUPS  CURRENT ROW), CASE WHEN 0.6412810119919261 THEN 8.27205705E8 ELSE (~ (t1.c45)) END FROM t1, rt0, v0 WHERE ((IFNULL(0.5473252219307579, x'e2c5') IN (((NULL) IS TRUE)))); -- 0ms;
SELECT DISTINCT (((t1.c42)) NOT BETWEEN (((t1.c42 IN ()))) AND ((ABS(t1.c45)))) FROM t1, rt0 NATURAL JOIN v0 WHERE ((((((0Xfffffffffa7a31ba)AND(NULL)))OR('-879249433')) IN ())); -- 0ms;
SELECT ALL ((AVG(rt0.c0))IS((NOT (t1.c30)))), (((~ (v0.c0))) ISNULL), COUNT(((((t1.c45)OR(t1.c42)))AND(NULL))) OVER () FROM t1, v0, rt0 GROUP BY '?', ((((((t1.c45)OR(t1.c45)))AND(t1.c42)))IS(((rt0.c1)&(NULL)))), CAST(((v0.c0) BETWEEN (v0.c0) AND (t1.c42)) AS BLOB) HAVING ((((((t1.c45)AND(t1.c45)))AND(x'')))OR(CAST(t1.c42 AS TEXT))); -- 6ms;
SELECT DISTINCT (+ (CAST(t1.c45 AS NUMERIC))), CAST(((t1.c30)<<(rt0.c1)) AS BLOB), 0x52101b56 FROM rt0;SELECT DISTINCT ((((t1.c45)OR((- (t1.c42)))))OR(AVG(t1.c30))) FROM t1, v0 WHERE (HEX(DISTINCT (378213640 IN ()))); -- 1ms;
SELECT ALL ((((((t1.c30, rt0.c2, t1.c45))<=((rt0.c1, t1.c42, t1.c42))), (- (rt0.c2)), ((t1.c30)==(rt0.c0)), (((t1.c42)) NOT BETWEEN ((t1.c42)) AND ((rt0.c1))), ((rt0.c1) NOT NULL)))=((((rt0.c0)AND(t1.c45)), v0.c0 COLLATE NOCASE, 0.38921304182227723, ((t1.c42) BETWEEN (NULL) AND (rt0.c1)), ((t1.c45)<<(v0.c0))))), (((v0.c0, rt0.c0, NULL, v0.c0, rt0.c0)) BETWEEN ((((v0.c0)>(NULL)), rt0.c1 COLLATE RTRIM, UNLIKELY(t1.c45), TOTAL(t1.c42), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (t1.c30)))) AND ((0.024407784554367096, rt0.c0 COLLATE BINARY, ((t1.c42) IS TRUE), (((t1.c45, rt0.c1, t1.c30))=((rt0.c1, rt0.c0, rt0.c1))), CASE rt0.c1  WHEN rt0.c2 THEN t1.c30 WHEN rt0.c0 THEN t1.c45 WHEN v0.c0 THEN t1.c45 END))), SUM(7.60723092E8) FROM t1, rt0 WHERE ((((x'')-(x'')) IN (((x'') NOTNULL), (('deu뼡4I')>>('1611306172')), ((NULL) NOT BETWEEN (x'') AND (5303735)))));SELECT t1.c42, '', ((((t1.c30) BETWEEN (rt0.c2) AND (t1.c45)))+(CASE WHEN t1.c30 THEN '' ELSE t1.c42 END)) FROM rt0, v0;SELECT ALL ((x'')OR(((t1.c45) IS FALSE))), (t1.c45 IN ((v0.c0 IN ()))), ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))|(((v0.c0) IS FALSE))) FROM rt0;SELECT NULL, ((CAST(rt0.c2 AS INTEGER))>=(((t1.c42)<(rt0.c0)))), '91061379', CASE WHEN ((v0.c0) IS TRUE) THEN (((NULL)) NOT BETWEEN ((t1.c45)) AND ((t1.c30))) END, CAST(rt0.c0 COLLATE BINARY AS TEXT) FROM rt0, v0;SELECT ALL UPPER(((rt0.c0) NOT NULL)) FROM v0, t1, rt0; -- 1ms;
SELECT DISTINCT v0.c0 FROM v0 WHERE (((x'')|('292052380')) COLLATE RTRIM); -- 0ms;
SELECT (+ ((((rt0.c2))<=((0.14830865574284524))))) FROM t1, v0 WHERE (((((x'') BETWEEN (x'7a72') AND (0.6943150642871401))) NOTNULL));SELECT DISTINCT (((t1.c42)) BETWEEN ((CAST(rt0.c0 AS INTEGER))) AND (((t1.c30 IN (t1.c45))))) FROM rt0 NOT INDEXED, t1; -- 0ms;
SELECT DISTINCT ((((((((((v0.c0)%(t1.c45)))AND(CAST(rt0.c2 AS TEXT))))AND(rt0.c2)))AND(((t1.c42) BETWEEN (t1.c30) AND (rt0.c0)))))OR(((rt0.c2)-(v0.c0)))) FROM rt0, t1 WHERE (((((((((CASE WHEN '668843735' THEN x'6429' ELSE '' END)AND(((NULL) NOT BETWEEN ('-590317266') AND (0.23449440988207604)))))AND((+ ('昜u')))))AND(CAST(NULL AS REAL))))OR(((0.6412810119919261)IS(0Xffffffffac711b20)))));SELECT ((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t1.c42))) IN ()) FROM t1, v0, rt0 LIMIT 745434698 OFFSET 891276028; -- 0ms;
SELECT ((((t1.c30 COLLATE NOCASE)AND(((t1.c45)LIKE(v0.c0)))))AND((+ (rt0.c0)))) FROM v0, t1;SELECT ALL ((((rt0.c1 COLLATE RTRIM)AND(CAST(t1.c45 AS REAL))))AND(((((rt0.c2)AND(t1.c45)))AND(rt0.c0)))) FROM v0 WHERE ((((NOT (x''))) IS FALSE));SELECT ALL (((((v0.c0, rt0.c1, 0.23870605471011963, rt0.c2, ''))<=((v0.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c2)))) IS FALSE), ((((v0.c0, t1.c42, t1.c30, t1.c45, rt0.c1)) BETWEEN ((rt0.c0, t1.c30, v0.c0, 1907171524, rt0.c1)) AND ((v0.c0, rt0.c1, 'uG~D*', t1.c42, rt0.c1))) IN ()), TOTAL((NOT (t1.c45))) FROM rt0 NOT INDEXED, v0, t1; -- 0ms;
SELECT ALL (((((rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((rt0.c2, t1.c30, rt0.c2)) AND ((rt0.c0, t1.c30, rt0.c1))))LIKE(GROUP_CONCAT(rt0.c2))), t1.c42, DENSE_RANK() OVER () FROM t1, v0 WHERE ((('xFU}8<' COLLATE NOCASE) NOT NULL));SELECT DISTINCT t1.c45 FROM v0, t1; -- 0ms;
SELECT DISTINCT (((((('-457378529') NOT BETWEEN (t1.c30) AND (rt0.c1)))OR(AVG(rt0.c2))))OR(MAX(t1.c45))), GROUP_CONCAT(CASE t1.c42  WHEN x'' THEN rt0.c0 END COLLATE NOCASE), CASE ('-1973522433' IN (t1.c30))  WHEN LIKELIHOOD(t1.c45, 0.6317981318134698) THEN ((rt0.c0)GLOB(t1.c42)) END FROM t1, v0, rt0 WHERE (ROUND(CAST(-1.770511811E9 AS REAL), (('')/('358948963')))) GROUP BY (((rt0.c2)) BETWEEN (((- (t1.c42)))) AND ((t1.c30))), x'', ((((((((rt0.c1)AND(rt0.c2)))AND(rt0.c1)))AND(CASE WHEN t1.c42 THEN rt0.c1 END)))AND(((rt0.c2) NOT BETWEEN (t1.c45) AND (t1.c45)))) HAVING (((((t1.c30)AND(rt0.c0)))AND(v0.c0)) IN ((((t1.c42)) NOT BETWEEN ((t1.c45)) AND ((rt0.c1))))); -- 9ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL SUM(CASE WHEN t1.c42 THEN t1.c42 END) FILTER(WHERE TRIM(((t1.c45)%(rt0.c2)))) OVER () FROM rt0, t1, v0; -- 4ms;
SELECT DISTINCT (((((t1.c45))>=((x'')))) BETWEEN (rt0.c0) AND (ABS('-1979334855'))) FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT (((NULL))<=(((t1.c42 IN (rt0.c1))))) FROM t1 WHERE (((((x'') IS TRUE))LIKE(((0.7897408166736962)<(-92655174)))));SELECT DISTINCT CAST(((v0.c0)%(t1.c45)) AS INTEGER), ((((((rt0.c2) ISNULL))AND((~ (rt0.c1)))))OR(CASE NULL  WHEN t1.c45 THEN t1.c42 END)), ((v0.c0) NOT BETWEEN ((~ (t1.c42))) AND (UNLIKELY(v0.c0))) FROM t1, v0, rt0 WHERE (((((x'') NOT BETWEEN ('') AND (x'2d7ac80be6b9'))) NOTNULL)); -- 0ms;
SELECT DISTINCT (~ (t1.c30)) FROM v0, rt0;SELECT ALL CASE NULL  WHEN CASE WHEN rt0.c1 THEN t1.c45 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN v0.c0 END THEN t1.c42 COLLATE BINARY WHEN CAST(rt0.c2 AS NUMERIC) THEN '-1867710819' COLLATE BINARY WHEN CASE WHEN v0.c0 THEN t1.c42 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN t1.c45 WHEN v0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END THEN ((t1.c45) IS TRUE) WHEN ((rt0.c2)%(rt0.c0)) THEN ((rt0.c1) IS FALSE) WHEN IFNULL(t1.c42, t1.c42) THEN CASE WHEN t1.c45 THEN t1.c45 ELSE rt0.c1 END END FROM rt0 WHERE ((((((1777697251)) NOT BETWEEN (('-1796385366')) AND ((''))))LIKE(((NULL) IS TRUE)))) LIMIT 863397698 OFFSET -1771811234;SELECT DISTINCT TOTAL(((((((((rt0.c1)OR('')))OR(t1.c30)))AND(v0.c0)))AND(t1.c30))) FILTER(WHERE CAST(CASE WHEN t1.c30 THEN t1.c45 ELSE t1.c45 END AS BLOB)) OVER () FROM rt0 ORDER BY ((((((((((v0.c0)AND(t1.c42)))AND(rt0.c2)))AND(v0.c0)))OR(0.9809567026047857)))/((((v0.c0))<((rt0.c0)))))  NULLS LAST;SELECT DISTINCT CAST((NOT (t1.c30)) AS TEXT) FROM t1; -- 0ms;
SELECT CAST(COALESCE(DISTINCT rt0.c0, t1.c45) AS BLOB) FROM v0, rt0;SELECT ALL CASE WHEN ((t1.c45)IS(t1.c30)) THEN ((rt0.c1) BETWEEN (t1.c30) AND (x'')) END FROM v0, t1, rt0; -- 0ms;
SELECT (((NOT (t1.c30)))%(t1.c45)) FROM t1; -- 0ms;
SELECT ((((((t1.c45)<>(rt0.c0)))AND(rt0.c0)))AND((NOT (v0.c0)))) FROM v0, rt0;SELECT DISTINCT ((NULLIF(DISTINCT rt0.c1, rt0.c0))LIKE(CAST(v0.c0 AS BLOB))) FROM t1, rt0 WHERE (LTRIM(NULL, (- ('y\u-7E7W'))));SELECT ALL (+ (((((t1.c30)OR(rt0.c2)))OR(x'')))) FROM v0 WHERE ((((((('')AND('-1225438270')))AND('#k.E3'))) BETWEEN (0.23361700710918643) AND ((- (NULL))))) ORDER BY t1.c30 DESC  NULLS LAST;SELECT ALL (((x''))<>((rt0.c0))) COLLATE NOCASE FROM t1, v0 WHERE ((('' COLLATE RTRIM)=(((-3.91228433E8)==(x'1b8f9cda')))));SELECT COUNT(*), CASE DATETIME(v0.c0, t1.c30, t1.c42)  WHEN ((t1.c42) BETWEEN (NULL) AND (t1.c45)) THEN ((t1.c42)*(v0.c0)) ELSE (((v0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c42))) END, (~ (CAST(rt0.c2 AS NUMERIC))) FROM t1;SELECT DISTINCT v0.c0, (+ (t1.c30)) COLLATE BINARY, (((t1.c45, 0Xffffffffa2aa0cbe, t1.c30)) NOT BETWEEN ((t1.c45, (((t1.c30)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))), (((rt0.c1))=((rt0.c2))))) AND (((((rt0.c0))<((rt0.c2))), CAST(t1.c45 AS NUMERIC), t1.c30 COLLATE RTRIM))) FROM t1, rt0 WHERE (TRIM(((x'') NOT BETWEEN (0.7653130854944361) AND (0.06727553702007016)), '876618793' COLLATE NOCASE));SELECT (NOT (CAST(rt0.c0 AS BLOB))) FROM rt0 WHERE (((((NULL) BETWEEN (-1.856427531E9) AND ('')))GLOB(('-1520758796' IN (NULL))))); -- 0ms;
SELECT DISTINCT (LOWER('2ty\rk^') IN ((rt0.c1 IN ()))) FROM rt0, t1 WHERE ((((((((x''))<=((233407065))))AND(((-781122245)%(NULL)))))OR(((NULL)+('C(?A'))))) LIMIT -1078985034 OFFSET -1867710819; -- 0ms;
SELECT t1.c45 FROM v0;SELECT LIKELIHOOD(DISTINCT ((rt0.c0)+(rt0.c1)), 0.12724516807706876), AVG((rt0.c2 IN (v0.c0))) COLLATE NOCASE, (((rt0.c1 IN ()))!=((NOT (rt0.c1)))) FROM v0, rt0, t1 ORDER BY ((((t1.c45)OR((('1792459602') ISNULL))))AND(t1.c42 COLLATE RTRIM)) ASC, CASE WHEN (((rt0.c2, t1.c42, rt0.c0))=((v0.c0, v0.c0, t1.c42))) THEN ((t1.c42)LIKE(t1.c42)) WHEN (('TRUE') IS TRUE) THEN ((t1.c42)IS NOT(v0.c0)) WHEN ((rt0.c1)-(rt0.c2)) THEN x'' END ASC; -- 1ms;
SELECT DISTINCT x'2452' FROM rt0, t1 WHERE ((- (((4792428)<=(x''))))) ORDER BY (((t1.c45 COLLATE RTRIM, LOWER(x'1a4c'), rt0.c2 COLLATE RTRIM))==(((rt0.c2 IN (t1.c45)), ((t1.c45)+(1.7976931348623157E308)), t1.c45))) ASC, ((LIKELIHOOD(rt0.c0, 0.15610547309177203))OR(CASE WHEN rt0.c1 THEN t1.c30 ELSE t1.c45 END)) ASC; -- 1ms;
SELECT t1.c45 FROM v0, t1, rt0 WHERE (((CAST('0.05607627081566158' AS TEXT))&((0.030682635815913906 IN ())))); -- 0ms;
SELECT NTILE((NOT (''))) OVER ( GROUPS  CURRENT ROW EXCLUDE GROUP) FROM v0, t1, rt0 WHERE ((((0.638668864870449, 0.4154578249641605, x'a522')) NOT BETWEEN (((- (x'')), ((0.3094726014352437) BETWEEN ('') AND (0.8813253707199956)), CAST(NULL AS REAL))) AND ((((NULL)=(x'')), 0.5350845251095241 COLLATE NOCASE, x'')))); -- 0ms;
SELECT ALL RANK() OVER () FROM v0, t1, rt0 WHERE (CASE (0Xffffffffca02f8f8 IN ())  WHEN (('-849849489') IS FALSE) THEN ((0x7e932017) BETWEEN (x'3abf') AND (NULL)) END) GROUP BY ((rt0.c2 IN ()) IN ()) HAVING COALESCE((t1.c45 IN (t1.c42, rt0.c1)), SUM(v0.c0)); -- 0ms;
SELECT ((+ (rt0.c1)) IN (CAST(t1.c30 AS BLOB), ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)), MAX(rt0.c1))) FROM t1, rt0 ORDER BY rt0.c1 ASC  NULLS FIRST, (((((v0.c0, t1.c45, t1.c42)) NOT BETWEEN ((0.7487722436852082, v0.c0, t1.c45)) AND ((t1.c45, t1.c45, t1.c45)))) IS TRUE)  NULLS LAST;SELECT DISTINCT 0x71989d4b FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT (((rt0.c0)GLOB(rt0.c1)) IN ()) FROM t1, v0 WHERE (((load_extension('-1540553924', 0.7484978002510482))&(((((x'')AND(x'')))AND(x'')))));SELECT DISTINCT ((COUNT(*))>=(((t1.c30) NOT BETWEEN (v0.c0) AND (NULL)))) FROM t1 INDEXED BY i61;SELECT (((((((((+ (t1.c30)))OR(rt0.c0 COLLATE NOCASE)))OR(AVG(x''))))AND(t1.c42)))OR(t1.c42 COLLATE RTRIM)) FROM t1, v0, rt0 WHERE ((NOT ('1h{W%'))); -- 0ms;
SELECT CAST(((rt0.c2) NOT BETWEEN (t1.c42) AND (rt0.c1)) AS BLOB) FROM v0, t1 WHERE (((((0.33654531274641397)LIKE(x'')))OR(UPPER(0.24579333499829958))));SELECT DISTINCT (((t1.c30)<=(t1.c30)) IN ()) FROM t1, rt0, v0 WHERE ((- ((x'' IN (NULL))))); -- 0ms;
SELECT ALL CUME_DIST() OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t1, rt0, v0; -- 4ms;
SELECT CAST((('-1087123908') BETWEEN (t1.c42) AND (v0.c0)) AS BLOB) FROM t1;SELECT DISTINCT (NOT (((v0.c0)LIKE(t1.c42)))) FROM t1, v0, rt0; -- 0ms;
SELECT ALL (((v0.c0)) BETWEEN ((((t1.c45) IS TRUE))) AND ((((((((((rt0.c2)AND(t1.c45)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))))) FROM t1, v0, rt0; -- 0ms;
SELECT ALL rt0.c1, TOTAL_CHANGES(), ((((NULL) NOTNULL))|(UNLIKELY(DISTINCT t1.c42))) FROM v0, rt0, t1 WHERE (((CAST(0.2959545973848352 AS NUMERIC))IS(((0.17578154783450328) BETWEEN (0.28051617810694995) AND ('-506088276'))))) LIMIT -1238765193; -- 0ms;
SELECT (((+ (v0.c0)))IS NOT(((t1.c42) IS TRUE))) FROM v0 WHERE ((- ((- ('BU+{Z-L1'))))) LIMIT 1543140352;SELECT ALL TRIM(DISTINCT IFNULL(x'ed1e', rt0.c1), '-599173977') FROM v0 WHERE ((((0.15812790582481062)&(0x633df927)) IN ())) ORDER BY ((((((((t1.c45)AND('')))OR(t1.c42)))AND(rt0.c2)))AND(t1.c30)) COLLATE RTRIM COLLATE NOCASE DESC;SELECT DISTINCT t1.c30 FROM rt0 WHERE (CASE WHEN CASE WHEN NULL THEN 0.33443758130257706 ELSE NULL END THEN (((0.7653130854944361, NULL, x'c8c0'))<(('0.5657047924924141', 0.8433251407727445, '3077003'))) WHEN x'07f0412b' COLLATE RTRIM THEN TRIM(0.6078074228152273) WHEN ((x'44ac') NOTNULL) THEN CAST(NULL AS REAL) END);SELECT ALL COUNT(*) OVER ( ORDER BY CASE WHEN t1.c30 THEN (rt0.c2 IN ()) WHEN ((t1.c42)>>(rt0.c2)) THEN '1234396418' WHEN ((t1.c30)<(t1.c42)) THEN (+ (v0.c0)) ELSE '' END ASC  NULLS LAST, ((((((((LOWER(t1.c45))AND(((v0.c0) BETWEEN (t1.c45) AND (t1.c45)))))OR((((rt0.c1))=((rt0.c2))))))AND((((rt0.c1, t1.c30, rt0.c1))<>(('1308910844', t1.c42, rt0.c0))))))AND(((rt0.c1)>>('}ꗻ\n]')))) DESC  NULLS FIRST) FROM rt0 WHERE (CASE CASE 7.41968089E8  WHEN x'' THEN '-679429728' END  WHEN (NOT ('0.638668864870449')) THEN ('	M' IN (NULL, NULL)) WHEN (((((((((((('')AND('-114989908')))OR('civwcj7')))AND(x'')))OR('2N')))OR(x'')))AND(0.24725357646657364)) THEN (('210143293') NOTNULL) WHEN x'' COLLATE RTRIM THEN ((('-397996233')) BETWEEN ((NULL)) AND (('-148878136'))) END) GROUP BY v0.c0 HAVING ((CASE t1.c42  WHEN rt0.c0 THEN t1.c30 WHEN t1.c45 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)+(CASE t1.c42  WHEN rt0.c2 THEN t1.c30 WHEN rt0.c1 THEN t1.c42 WHEN v0.c0 THEN t1.c30 END)) LIMIT -1562637809 OFFSET -1599060400;SELECT t1.c42 FROM rt0, t1 WHERE (((((((x'a30d')OR(0.05607627081566158)))AND(1858728070)))>((+ (''))))) GROUP BY '0.9176326975919709'; -- 0ms;
SELECT DISTINCT t1.c42, ((((t1.c42)==(v0.c0))) NOT NULL), json_insert(CAST(0.23848859356304708 AS REAL), (~ (rt0.c1)), (+ (t1.c42))) FROM rt0, v0 WHERE ((((('-535271908')AND(NULL)))AND(0.5463154234246411)) COLLATE RTRIM);SELECT DISTINCT CAST((~ (t1.c45)) AS INTEGER) FROM v0, rt0 LIMIT 718999285 OFFSET 613819953;SELECT DISTINCT (+ (CAST(t1.c42 AS BLOB))) FROM rt0, v0, t1 WHERE (0.32375682161354336); -- 0ms;
SELECT (((((rt0.c2, rt0.c0, t1.c42)) NOT BETWEEN ((rt0.c1, rt0.c1, '')) AND ((t1.c30, rt0.c1, rt0.c1)))) BETWEEN (((rt0.c2)<>(-1374401904))) AND (t1.c42 COLLATE RTRIM)) FROM rt0;SELECT DISTINCT ((-1.856427531E9) NOT NULL) COLLATE RTRIM, ((((((t1.c45)) NOT BETWEEN ((t1.c30)) AND ((rt0.c0)))))<>(((((rt0.c2))<=((v0.c0)))))), (((((((((t1.c45)AND(t1.c30)))AND(rt0.c1)))AND(t1.c42)))AND(rt0.c1)) IN ()) FROM v0, rt0;SELECT DISTINCT AVG(((((t1.c30)AND(t1.c42)))OR(v0.c0))) FROM t1, v0, rt0 WHERE (((('#ft+PEoh') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((CAST(t1.c30 AS BLOB)) NOT BETWEEN (((v0.c0)>=(t1.c42))) AND (CASE WHEN NULL THEN t1.c30 END)) FROM t1, rt0, v0 ORDER BY (((x'')>=(t1.c30)) IN ()) ASC  NULLS LAST, (((rt0.c2)%(t1.c45)) IN ())  NULLS LAST, ((CAST(t1.c45 AS NUMERIC)) IS FALSE) DESC; -- 4ms;
SELECT COUNT(*) OVER () FROM v0 INDEXED BY i87, t1, rt0;SELECT ((((((((((rt0.c0) NOT BETWEEN (v0.c0) AND (NULL)))AND((rt0.c0 IN ()))))OR(((t1.c42)>=(v0.c0)))))AND(COUNT(rt0.c2))))AND(((((rt0.c1)AND(t1.c45)))AND(x'2614')))) FROM v0, t1 WHERE (((0xffffffffb2f526a5)IS NOT(x'')) COLLATE RTRIM);SELECT DISTINCT CASE WHEN (((v0.c0, v0.c0, v0.c0))==((v0.c0, t1.c45, t1.c45))) THEN (~ (t1.c45)) END FROM t1, v0 GROUP BY CAST(((t1.c30)>>(rt0.c2)) AS INTEGER), LIKELIHOOD(((((t1.c42)OR(rt0.c1)))OR(rt0.c0)), 0.3002707861821916), (((t1.c45) ISNULL) IN ());SELECT '#^' FROM t1, rt0; -- 0ms;
SELECT DISTINCT NTILE(CAST(CASE WHEN t1.c42 THEN rt0.c2 ELSE t1.c30 END AS REAL)) OVER () FROM rt0, t1 UNION SELECT (((rt0.c1)) NOT BETWEEN ((418578789 COLLATE BINARY)) AND ((((rt0.c0)>=(rt0.c1))))) FROM rt0, t1 WHERE ((~ ((x'' IN ()))));SELECT DISTINCT (((('-881254569')) NOT BETWEEN ((t1.c30)) AND ((v0.c0))) IN (((t1.c45)/(t1.c30)))) FROM t1, rt0 WHERE (((x'') NOTNULL) COLLATE BINARY);SELECT ((SUM(t1.c30))OR((+ (NULL)))) FROM t1, v0, rt0; -- 1ms;
SELECT ALL GROUP_CONCAT(-1686956390), rt0.c0, ((((t1.c45)OR(rt0.c2)))AND('1422889001')) COLLATE RTRIM FROM rt0, v0 WHERE (CASE CAST(0xffffffffa3ba69c6 AS TEXT)  WHEN (+ (0.7463006317872237)) THEN ((0X624a9ee4) NOTNULL) END);SELECT DISTINCT CASE WHEN ((rt0.c1) BETWEEN (t1.c45) AND (rt0.c2)) THEN NULL END FROM v0 INDEXED BY i68, rt0, t1;SELECT PERCENT_RANK() OVER ( GROUPS BETWEEN  CURRENT ROW AND  UNBOUNDED FOLLOWING EXCLUDE GROUP) FROM v0, t1, rt0 WHERE ((((NULL)) NOT BETWEEN ((((((x'')OR(NULL)))AND(x'c136')))) AND ((((((x'9549')AND('1750791869')))OR(0.2367102064788279)))))); -- 0ms;
SELECT DISTINCT ((AVG(rt0.c0))||((((rt0.c0))>=((rt0.c1))))), GROUP_CONCAT((((t1.c45))>=((rt0.c2))) COLLATE BINARY), ((v0.c0)==((((v0.c0, t1.c42, rt0.c0, rt0.c0, v0.c0)) NOT BETWEEN ((rt0.c1, t1.c45, rt0.c0, t1.c42, v0.c0)) AND ((rt0.c1, rt0.c1, t1.c30, rt0.c2, v0.c0))))) FROM t1;SELECT DISTINCT 'R', rt0.c2, COUNT(*), (~ (((0.6109794649918793)&(rt0.c0)))), (((t1.c30)IS(rt0.c1)) IN ()) FROM rt0, v0; -- 0ms;
SELECT DISTINCT t1.c42, COUNT(((((t1.c45)AND(rt0.c2)))AND(t1.c42))) OVER (), (((~ (0.0732199444185595)))<=(rt0.c2)) FROM v0 WHERE ((((~ (210143293))) NOT NULL));SELECT t1.c30 COLLATE BINARY FROM rt0 WHERE ((((('')-(x'')))|(NULL))) GROUP BY ((CAST(rt0.c2 AS REAL)) NOT BETWEEN (((t1.c42) NOT BETWEEN (t1.c30) AND (v0.c0))) AND (CASE WHEN rt0.c2 THEN t1.c30 END)) ORDER BY '-905774856'  NULLS FIRST;SELECT DISTINCT (((((~ (rt0.c0)))AND((~ (x'3899')))))AND(((t1.c45) IS TRUE))) FROM rt0, t1; -- 0ms;
SELECT DISTINCT AVG(((t1.c42) NOT BETWEEN (x'4133') AND (rt0.c2))) OVER (), CAST(((('827205705'))>=((rt0.c2))) AS BLOB), (((((rt0.c1)<(rt0.c2)), (('-1729503459') BETWEEN (t1.c30) AND (rt0.c1)), (((rt0.c1))!=((rt0.c1)))))>(((rt0.c0 IN (t1.c42)), COALESCE(DISTINCT rt0.c1, t1.c42), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c0)))))) FROM rt0, v0;SELECT DISTINCT ((CASE WHEN rt0.c2 THEN v0.c0 END)>(NULLIF('', v0.c0))) FROM v0, t1 WHERE ((('-1729503459' COLLATE BINARY) ISNULL));SELECT DISTINCT LAST_VALUE(v0.c0) OVER () FROM v0 WHERE (((((NULL)<<(x'')))GLOB(CASE ''  WHEN '133801467' THEN 0Xffffffff915929f5 ELSE NULL END))) GROUP BY ((((0.27109491278125486)AND('276398109')))OR(rt0.c0)) COLLATE NOCASE HAVING ((((COUNT(*))OR(((t1.c30) IS TRUE))))OR((rt0.c2 IN (t1.c45))));SELECT DISTINCT CAST(t1.c30 AS BLOB) COLLATE RTRIM FROM v0;SELECT DISTINCT x'54d2' FROM v0, t1 WHERE ((- (((((x'6bef')AND(NULL)))OR('0.0'))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t1.c45 THEN t1.c30 ELSE rt0.c2 END AS REAL) FROM t1 ORDER BY CASE CASE WHEN rt0.c2 THEN v0.c0 END  WHEN rt0.c0 COLLATE NOCASE THEN ((v0.c0)IS(rt0.c0)) WHEN (('0.7118528590844526')LIKE(rt0.c0)) THEN ((((rt0.c1)OR(t1.c45)))OR(rt0.c2)) WHEN ((t1.c42)&(v0.c0)) THEN (NOT (v0.c0)) ELSE 0Xffffffffd6ce6615 END ASC  NULLS LAST;SELECT ALL ((((((t1.c45)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1)))))<((SUM(rt0.c1)))) FROM t1, rt0; -- 0ms;
SELECT ALL NULL FROM v0, t1; -- 0ms;
SELECT t1.c30 FROM rt0, v0 ORDER BY t1.c45 DESC;SELECT DISTINCT ((((v0.c0)*(0.5912865515923562)))LIKE(COUNT(rt0.c0))) FROM rt0, v0; -- 1ms;
SELECT DISTINCT ((((v0.c0)+(rt0.c1))) ISNULL), ((((t1.c30)%(t1.c30)))IS NOT((- (v0.c0)))), (t1.c45 COLLATE NOCASE IN (CASE rt0.c0  WHEN rt0.c1 THEN t1.c42 END)) FROM v0, t1, rt0 WHERE (UNLIKELY(DISTINCT (x'23a5' IN ()))) LIMIT -1471902881 OFFSET 1127986327; -- 1ms;
SELECT DISTINCT ((((rt0.c1) NOTNULL)) NOT BETWEEN (CASE WHEN 0.23848859356304708 THEN v0.c0 ELSE '*xqV' END) AND (CAST(t1.c45 AS INTEGER))) FROM rt0, t1;SELECT DISTINCT ((((rt0.c2)GLOB(t1.c30))) NOT BETWEEN ((rt0.c0 IN ())) AND (GROUP_CONCAT(t1.c42))) FROM t1, v0 WHERE (((x'') ISNULL)) GROUP BY ((v0.c0 IN ()) IN ((1.750561922E9 IN ()), CAST(rt0.c0 AS NUMERIC)));SELECT ALL load_extension((('2003430247')IS NOT(t1.c30))), CASE WHEN (+ (rt0.c2)) THEN CASE t1.c30  WHEN rt0.c0 THEN t1.c45 ELSE t1.c45 END ELSE ((((rt0.c2)OR(t1.c30)))OR(rt0.c1)) END, CASE WHEN ((rt0.c1)+(rt0.c1)) THEN rt0.c0 COLLATE NOCASE END FROM v0, rt0, t1;SELECT (((((t1.c45)) BETWEEN ((x'')) AND ((rt0.c0)))) BETWEEN ('w_fc|?') AND (t1.c30)) FROM rt0, t1, v0 WHERE ((- (CASE WHEN 0.05516525696543828 THEN '1965421823' ELSE 0.36775389205021325 END))); -- 0ms;
SELECT DISTINCT ((t1.c30) NOT BETWEEN (x'') AND (rt0.c0)) COLLATE RTRIM FROM t1, rt0, v0 WHERE (CAST((('') ISNULL) AS NUMERIC)) LIMIT -275653005 OFFSET -465204847; -- 0ms;
SELECT CAST(ABS(NULL) AS BLOB), (((((t1.c45)) BETWEEN ((rt0.c2)) AND ((t1.c45))))=(((t1.c45)OR(rt0.c2)))), (- (((rt0.c1)GLOB(rt0.c1)))) FROM t1, v0 WHERE (((((NULL) NOT BETWEEN ('') AND ('-890709323'))) NOT BETWEEN (('' IN ())) AND (((0.5991825646756469)==(0.13069700947619778))))) LIMIT -660486089;SELECT ALL json_valid(LOWER(DISTINCT rt0.c2)) FROM v0 WHERE (CAST(CASE WHEN x'' THEN '0.23848859356304708' END AS INTEGER));SELECT DISTINCT NTH_VALUE(v0.c0, NULL) OVER ( ORDER BY (CAST(rt0.c0 AS NUMERIC) IN ())), (+ (t1.c30)), LAG(((((x'')) NOT BETWEEN ((t1.c42)) AND ((t1.c45))) IN ()), rt0.c1, json_insert(t1.c45 COLLATE RTRIM, (((rt0.c0, t1.c30, x''))<(('1735353330', '0.16372667441300193', rt0.c2))), NULL)) OVER () FROM rt0, v0, t1;SELECT DISTINCT ((((t1.c30)>(v0.c0)))<<('Lo ')) FROM t1, v0; -- 0ms;
SELECT ALL ((((t1.c45)-(t1.c30)))OR(((v0.c0)*(t1.c45)))), (((x'0c45')&(rt0.c1)) IN ()), ((((rt0.c2)+(t1.c45)))>>(SUM(v0.c0))) FROM rt0, t1, v0; -- 1ms;
SELECT DISTINCT (- (t1.c45)) FROM rt0 WHERE (((x'c1a2c787')IS(NULL)) COLLATE NOCASE);SELECT DISTINCT (+ (((rt0.c1) NOTNULL))) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT (((((rt0.c2) NOT BETWEEN (t1.c45) AND (rt0.c0))))>(((((rt0.c0))>((rt0.c1)))))) FROM t1, v0;SELECT DISTINCT json_remove(CASE WHEN rt0.c0 THEN t1.c30 ELSE rt0.c1 END, ((rt0.c1)OR(t1.c45))) FROM t1, rt0, v0 WHERE (((((CASE NULL  WHEN x'' THEN NULL WHEN NULL THEN x'356b' WHEN 0.2895013952503871 THEN '-1400768550' END)OR(((((0.9770952730598237)OR(x'0cd817a8')))OR(0.7770104180675007)))))AND((((-18158956)) NOT BETWEEN ((x'4648')) AND ((0.6229069946629482)))))); -- 0ms;
SELECT json((rt0.c0 IN ())) FROM v0 WHERE ((((((('')OR(0.11818302672082359)))AND(0.48337383691581326)))>(LTRIM(0.07067150019758939)))); -- 0ms;
SELECT DISTINCT CAST(((t1.c30) BETWEEN (rt0.c0) AND (t1.c42)) AS INTEGER), ((t1.c45) NOT NULL) COLLATE RTRIM, TOTAL(((t1.c30) BETWEEN (rt0.c1) AND (rt0.c0))) OVER ( RANGE  UNBOUNDED PRECEDING) FROM t1, v0 GROUP BY ((((SQLITE_COMPILEOPTION_GET(t1.c30))OR(((-267536629) NOTNULL))))OR(JULIANDAY(rt0.c1, t1.c30, '<Z'))) HAVING COUNT(*);SELECT ALL t1.c42 FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT t1.c45 FROM v0, rt0 WHERE ((((x'')=('772840510')) IN ()));SELECT ALL CAST((- (t1.c30)) AS NUMERIC), ((((rt0.c1)>(rt0.c1)))OR(TYPEOF(t1.c30))), (rt0.c1 IN ()) COLLATE BINARY FROM rt0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 COLLATE RTRIM THEN NULL COLLATE NOCASE ELSE (+ (t1.c42)) END FROM rt0, v0 ORDER BY (NOT (rt0.c1 COLLATE RTRIM))  NULLS LAST;SELECT ALL ((t1.c45)=((rt0.c0 IN (rt0.c0)))), (((NULL)LIKE(rt0.c1)) IN ()), json_remove(((rt0.c2)AND(rt0.c1)), v0.c0) FROM t1 NATURAL JOIN rt0 WHERE ((((NULL)=(0.37377319160262545)) IN (((((0.9882616597460624)OR(x'')))AND(x'')), CASE WHEN '' THEN 'q^^M&8WOt' END))) GROUP BY (- ((~ (t1.c45))));SELECT DISTINCT DENSE_RANK() OVER () FROM rt0, t1, v0 WHERE (((INSTR(0.030103650517050884, NULL)) ISNULL)); -- 2ms;
SELECT LIKE((+ (378694877)), ((((0.5982396253157167)AND(t1.c42)))OR(t1.c45)), '') FROM v0, rt0;SELECT ((((((rt0.c1) BETWEEN (t1.c45) AND (rt0.c0)))OR(((rt0.c0) ISNULL))))OR((rt0.c2 IN ()))) FROM rt0;SELECT DISTINCT MAX(((rt0.c2)>=(rt0.c1))) FROM v0;SELECT DISTINCT CAST(CASE WHEN rt0.c1 THEN t1.c42 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN '206670125' ELSE t1.c30 END AS INTEGER) FROM v0, t1 WHERE (((((((NULL)LIKE(NULL)))AND(((((((((0X23517dec)OR('0.9486973109376174')))OR(x'')))OR(0.8512388306398827)))AND(1750561922)))))OR('zcb,|*')));SELECT DISTINCT 0.8663446058021548 FROM v0; -- 0ms;
SELECT ALL CAST(((t1.c45) IS TRUE) AS REAL), (t1.c42 IN ()) COLLATE NOCASE, ((((t1.c30)+(rt0.c1)))>(CASE rt0.c2  WHEN v0.c0 THEN t1.c45 WHEN rt0.c1 THEN t1.c45 WHEN t1.c45 THEN rt0.c1 END)) FROM t1, v0, rt0; -- 0ms;
SELECT ALL (((0X55ba6178)) BETWEEN ((TRIM(DISTINCT t1.c45))) AND ((CASE t1.c30  WHEN rt0.c1 THEN t1.c45 ELSE rt0.c2 END))) FROM t1, v0 NATURAL JOIN rt0; -- 0ms;
SELECT ALL CASE (rt0.c2 IN ())  WHEN ((rt0.c2) BETWEEN (t1.c42) AND (t1.c45)) THEN CASE WHEN -951265818 THEN rt0.c1 END WHEN CHANGES() THEN LOWER(DISTINCT rt0.c2) WHEN CAST(t1.c42 AS INTEGER) THEN ((((((((t1.c45)AND(rt0.c1)))AND(rt0.c0)))OR(t1.c42)))AND(x'')) END, (TOTAL_CHANGES() IN ()), TOTAL(((t1.c42)>(0xffffffffb2f8aaac))) FROM rt0, v0, t1 WHERE ((((- (x'')))IS NOT((('') BETWEEN (0.35046271971704623) AND ('-1696833302'))))); -- 1ms;
SELECT GROUP_CONCAT(((t1.c42)IS(rt0.c0))) OVER ( ORDER BY CAST(t1.c30 COLLATE NOCASE AS BLOB) DESC  NULLS LAST) FROM v0, rt0, t1 WHERE ((((0xfffffffff7204cc8, '-881254569', x'')) NOT BETWEEN ((((x'')|(x'')), (((((((('-H%2|')AND('135601223')))AND(0.5657047924924141)))OR(0.22150955496504754)))OR(NULL)), CASE '-590317266'  WHEN 0.25374571530263357 THEN 0.9581826348379202 ELSE NULL END)) AND ((CASE WHEN x'' THEN NULL END, ((0xffffffff8632fdd6)<>(0.09301238709282222)), CAST(x'' AS BLOB))))); -- 6ms;
SELECT DATETIME(((((((((rt0.c1)AND(rt0.c1)))AND(v0.c0)))OR(NULL)))OR(rt0.c0)), load_extension(rt0.c0, t1.c45), rt0.c1 COLLATE NOCASE, CASE WHEN t1.c30 THEN t1.c30 END, ((rt0.c1)*(t1.c42))) FROM t1, v0, rt0 GROUP BY CAST(COALESCE(DISTINCT rt0.c0, t1.c42) AS TEXT);SELECT DISTINCT CAST((rt0.c2 IN ()) AS BLOB) FROM rt0, t1, v0; -- 0ms;
SELECT DISTINCT ((UPPER(t1.c42)) ISNULL), TRIM(DISTINCT NULL COLLATE BINARY), (NOT (CASE WHEN t1.c42 THEN rt0.c2 WHEN -3.72084988E8 THEN v0.c0 WHEN rt0.c0 THEN t1.c30 END)) FROM v0;SELECT (('-1766504704')|(((((rt0.c1)AND(t1.c30)))AND(rt0.c1)))), t1.c42, CAST(v0.c0 AS TEXT) COLLATE BINARY FROM rt0, v0, t1; -- 0ms;
SELECT ALL GROUP_CONCAT(NULL) OVER ( ORDER BY t1.c30, ((t1.c42 COLLATE RTRIM) NOTNULL)), '-1908506088' COLLATE NOCASE, ((((v0.c0) BETWEEN (t1.c30) AND (rt0.c1)))>(CASE WHEN rt0.c2 THEN t1.c42 ELSE t1.c45 END)), MAX((- (rt0.c0)), ((((((((NULL)OR(NULL)))AND(rt0.c2)))OR(t1.c42)))OR(rt0.c2)), rt0.c2, COUNT(*), t1.c45 COLLATE NOCASE, (t1.c42 IN (0.6198602466362546, rt0.c2))), ((((((((CAST(t1.c45 AS BLOB))OR(SUBSTR(v0.c0, t1.c42))))AND(rt0.c1)))OR(((t1.c42) NOTNULL))))AND(t1.c42)) FROM v0, t1, rt0 WHERE (CASE rtreenode(0.24059795067110257, 0.28756252297654894)  WHEN ((0.11951485518501315) NOT BETWEEN ('-1186097393') AND (0.9994005617163669)) THEN ((((0.6357770080481211)AND('-397996233')))AND('')) WHEN ((((0.9408390315999333)OR(0.09635493678193918)))AND(0.5766359089172246)) THEN (((x'')) NOT BETWEEN ((0.45984958761334993)) AND ((0.7353938450841241))) WHEN (('1750561922')>(NULL)) THEN CASE x''  WHEN 545485191 THEN x'' END ELSE (((('8盜')OR(x'')))AND('-1371072811')) END); -- 1ms;
SELECT ((rt0.c1 COLLATE BINARY) NOTNULL) FROM t1, rt0 WHERE ((((0.5470458890419324))=(('-782784722'))) COLLATE RTRIM); -- 0ms;
SELECT ALL ((CASE WHEN t1.c45 THEN rt0.c1 END)LIKE(CAST(rt0.c1 AS INTEGER))) FROM v0, rt0;SELECT DISTINCT CAST(t1.c30 AS NUMERIC) FROM v0, rt0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c0) NOTNULL) THEN v0.c0 COLLATE NOCASE END, (((t1.c45)LIKE(t1.c45)) IN ()), CAST((0.08073593840372228 IN ()) AS INTEGER) FROM t1, v0 WHERE ((((('0.05607627081566158') IS FALSE)) IS TRUE));SELECT DISTINCT (((((((t1.c30, v0.c0, v0.c0))>=((rt0.c0, t1.c30, t1.c45))))AND(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c1)))))AND(t1.c42 COLLATE NOCASE)) FROM t1, rt0, v0; -- 0ms;
SELECT DISTINCT ((((x'') BETWEEN ('277944515') AND (NULL))) IS FALSE) FROM v0, t1, rt0 WHERE (((((NOT ('>q')), ((-1e500) BETWEEN ('') AND (x'')), (0.6635690636746261 IN ())))>((((NULL) ISNULL), (x'' IN ()), ((0.3791725883482715) IS TRUE))))); -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c42))) BETWEEN (((((((((v0.c0)AND(t1.c42)))OR(t1.c42)))OR(NULL)))OR(rt0.c1))) AND (((v0.c0) BETWEEN (rt0.c2) AND (v0.c0)))), ((t1.c42) ISNULL), COUNT(*) FROM v0, t1;SELECT PERCENT_RANK() OVER (), DENSE_RANK() OVER (), x'' FROM v0, rt0, t1 GROUP BY CASE WHEN (((t1.c45, rt0.c0, t1.c45)) NOT BETWEEN ((t1.c42, t1.c42, t1.c30)) AND ((rt0.c1, t1.c42, t1.c42))) THEN 0.7316747745733319 END HAVING ((((((((v0.c0)OR(v0.c0)))OR(v0.c0)))OR(((((((((0.4238178091171154)AND(v0.c0)))OR(t1.c30)))OR(rt0.c0)))AND(v0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN t1.c30 WHEN t1.c30 THEN rt0.c2 WHEN '-1796385366' THEN t1.c42 ELSE rt0.c2 END)); -- 5ms;
SELECT DISTINCT CAST(t1.c30 AS REAL) COLLATE BINARY FROM t1 WHERE ((('3PI{C*') NOT NULL)) GROUP BY (((((t1.c45)OR(t1.c42)))OR(v0.c0)) IN ()), (((t1.c30, 0x426ee448, t1.c45)) NOT BETWEEN (((((rt0.c1))>((rt0.c2))), (rt0.c1 IN ()), ((t1.c30)IS(t1.c45)))) AND (((((rt0.c0))>((t1.c30))), ((t1.c42) NOT BETWEEN (NULL) AND (rt0.c0)), rt0.c1 COLLATE NOCASE))), ((CASE WHEN rt0.c2 THEN rt0.c1 END)GLOB(((t1.c45)>>(v0.c0))));SELECT DISTINCT CAST(CAST(rt0.c1 AS INTEGER) AS BLOB) FROM v0;SELECT ALL ((t1.c45) NOT BETWEEN (rt0.c1 COLLATE RTRIM) AND (((rt0.c2) ISNULL))) FROM rt0, v0 WHERE ((('sY可m0{P扨4') ISNULL));SELECT DISTINCT ((+ (rt0.c0)) IN ()) FROM t1, rt0 NATURAL JOIN v0 WHERE (((((x'6a28') NOT BETWEEN (x'') AND (NULL)))<(((x'6633') NOT BETWEEN (0.22020136714033067) AND (827205705))))); -- 1ms;
SELECT ((((((rt0.c2)OR(rt0.c1)))AND(((0x32018abc) NOT NULL))))OR(((t1.c30)AND(t1.c30)))), (((v0.c0)<=(rt0.c0)) IN ()), ((CASE WHEN rt0.c1 THEN '-397996233' ELSE rt0.c2 END) BETWEEN ((~ (rt0.c2))) AND (LIKELY(rt0.c2))) FROM v0 WHERE (((NULL IN ()) IN ((('807722643')IS NOT(0xffffffffe84313d1)))));SELECT DISTINCT CUME_DIST() OVER (), CUME_DIST() OVER (), rt0.c2, (((((rt0.c0, t1.c30, t1.c45))<=((rt0.c2, x'', 0.8222361541920004)))) NOTNULL), t1.c45 FROM v0, t1;