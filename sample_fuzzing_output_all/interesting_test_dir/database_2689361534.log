-- Time: 2024/06/06 00:49:06
-- Database: database34
-- Database version: 3.40.0
-- seed value: 2689361534
PRAGMA cache_size = 50000; -- 0ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 INT  CHECK ( ((((c0) NOTNULL))-((~ (c0)))))); -- 0ms;
CREATE VIRTUAL TABLE rt1 USING rtree(c0, c1, c2); -- 1ms;
PRAGMA integrity_check; -- 0ms;
COMMIT; -- 0ms;
END TRANSACTION; -- 0ms;
ALTER TABLE t0 ADD COLUMN c34 INT; -- 0ms;
UPDATE OR REPLACE rt1 SET c1=NULL WHERE ((((~ (rt1.c1))))<>((((((rt1.c1)OR(rt1.c1)))AND(rt1.c2))))); -- 0ms;
PRAGMA shrink_memory; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
CREATE INDEX i14 ON t0((((((c0, x'', c0))<=((c34, c34, c34))))IS NOT((c0 IN (c34)))) COLLATE BINARY,((NULL)>(c34)) COLLATE NOCASE DESC); -- 0ms;
PRAGMA checkpoint_fullfsync; -- 0ms;
UPDATE OR FAIL rt1 SET c0=NULL; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(0.32026821344245515); -- 0ms;
UPDATE OR ROLLBACK rt1 SET c2=x'', c0=x'cf1a', c0=NULL; -- 0ms;
UPDATE OR IGNORE rt1 SET c1='872740736', c0=0X29cb8de9 WHERE ((((rt1.c0 COLLATE RTRIM)OR(CASE rt1.c0  WHEN rt1.c0 THEN rt1.c2 ELSE rt1.c2 END)))OR(((rt1.c0) NOTNULL))); -- 0ms;
ANALYZE rt1; -- 0ms;
ALTER TABLE t0 ADD COLUMN c60 INTEGER; -- 0ms;
UPDATE OR IGNORE t0 SET (c60, c34, c60)=(-444214593, x'', '872740736') WHERE ((t0.c34)*(t0.c60)) COLLATE RTRIM; -- 0ms;
PRAGMA secure_delete = false; -- 0ms;
END; -- 0ms;
PRAGMA reverse_unordered_selects = false; -- 0ms;
UPDATE t0 SET (c0)=(0.008922720037502496); -- 0ms;
PRAGMA main.auto_vacuum; -- 0ms;
UPDATE OR IGNORE rt1 SET c0=0.4108876017030515; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
PRAGMA temp.secure_delete = false; -- 0ms;
PRAGMA temp.cache_size = 0; -- 0ms;
PRAGMA main.auto_vacuum = FULL; -- 0ms;
PRAGMA main.cache_spill; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0(c60) VALUES (NULL); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE rt1; -- 0ms;
DROP TABLE rt1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
UPDATE OR REPLACE t0 SET (c0)=(0.7480662276413441) WHERE CAST(t0.c34 AS BLOB) COLLATE RTRIM; -- 0ms;
PRAGMA ignore_check_constraints; -- 0ms;
ANALYZE; -- 0ms;
PRAGMA cell_size_check; -- 0ms;
CREATE UNIQUE INDEX i31 ON t0(((((c34)<=(c60)))<=(((c0)<('')))),CAST('[S' AS REAL) COLLATE NOCASE,((NOT (c34)) IN ())) WHERE (c0 IN (c0, c60)) COLLATE BINARY COLLATE RTRIM; -- 1ms;
CREATE INDEX IF NOT EXISTS i13 ON t0(QUOTE((c60 IN (c0, c34))) COLLATE RTRIM,((((CAST(c34 AS TEXT))AND(((c60) BETWEEN (c60) AND (c34)))))OR(((c0)IS NOT(c34)))) COLLATE RTRIM,INSTR(GLOB(c60, c34), CAST(c60 AS NUMERIC)) ASC); -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK t0 SET (c60, c0)=(0.17750224087828115, NULL); -- 0ms;
UPDATE OR IGNORE t0 SET (c34)=(NULL) WHERE CASE WHEN (NOT (t0.c60)) THEN ((t0.c60) NOTNULL) END; -- 0ms;
ANALYZE temp; -- 0ms;
PRAGMA temp.default_cache_size = 549991524; -- 0ms;
ANALYZE t0; -- 0ms;
DELETE FROM t0 WHERE ((((((t0.c60)&(t0.c60)))OR(t0.c0 COLLATE RTRIM)))AND((t0.c0 IN ()))); -- 1ms;
END; -- 0ms;
PRAGMA automatic_index; -- 0ms;
CREATE UNIQUE INDEX i58 ON t0(((c0 COLLATE NOCASE) BETWEEN ((c60 IN (7.01205993E8))) AND ((c34 IN ()))) COLLATE RTRIM DESC,NULL COLLATE RTRIM,((c60 COLLATE BINARY) NOT BETWEEN (((((c0)AND('⶟]rMtL40S')))AND(c0))) AND (((c0) NOT NULL))) COLLATE RTRIM DESC); -- 0ms;
UPDATE OR IGNORE t0 SET c34='X(!+-57#c'; -- 0ms;
UPDATE OR ABORT t0 SET c34='-576712488' WHERE (~ ((~ (x'')))); -- 0ms;
PRAGMA wal_checkpoint(PASSIVE); -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (-444214593), (x'9bee'), (NULL); -- 0ms;
PRAGMA busy_timeout; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'null', ' sz=191454589 unordered noskipscan'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE t0 SET c0=0.3767894458805874, c60=''; -- 0ms;
PRAGMA temp.journal_size_limit; -- 0ms;
PRAGMA temp.integrity_check; -- 0ms;
INSERT OR FAIL INTO t0(c0, c60) VALUES ('%C', NULL); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT json_quote(json_array_length(t0.c34, t0.c60)) FROM t0 LIMIT -112539372 OFFSET -1849572802;SELECT (((t0.c0 IN (NULL)))>>(t0.c34 COLLATE RTRIM)) FROM t0 WHERE ((((+ (x''))) BETWEEN (CAST('x(!+-57#c' AS INTEGER)) AND ((~ ('+J'))))); -- 0ms;
SELECT (((((t0.c34)OR(t0.c34)))OR(x'88a4')) IN ()), CAST(CASE t0.c34  WHEN t0.c0 THEN t0.c60 ELSE t0.c60 END AS INTEGER), (((((t0.c34)>=(t0.c60))))>((SUM(t0.c0)))), ((((((((((t0.c0) ISNULL))AND(((x'') NOTNULL))))AND(((t0.c34) IS FALSE))))OR(COUNT(t0.c60))))OR(('c%L0+' IN ()))), ((t0.c34) NOT BETWEEN (((((t0.c60)AND(t0.c34)))AND(t0.c34))) AND (((((t0.c60)AND(t0.c34)))OR(t0.c0)))) FROM t0; -- 1ms;
SELECT DISTINCT (((((t0.c34)) BETWEEN ((t0.c0)) AND ((t0.c0))))<>(((t0.c60)<<(t0.c60)))), ((t0.c0)+(t0.c34)) COLLATE BINARY, (+ ((t0.c60 IN (t0.c34)))), TOTAL(((((((((t0.c34)AND(t0.c34)))AND(t0.c60)))OR(t0.c34)))AND(t0.c34))) OVER ( ORDER BY (((t0.c34 IN ()))&(t0.c34 COLLATE BINARY)) ASC), GROUP_CONCAT((- (t0.c0))) OVER () FROM t0 GROUP BY ((CASE WHEN t0.c60 THEN t0.c34 END) IS FALSE), ((LOWER(t0.c0))/(CAST(t0.c0 AS TEXT))), ((((((((((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c0)))OR(((t0.c0) ISNULL))))AND(CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END)))AND((((t0.c0, t0.c0, t0.c34))<>((t0.c34, t0.c60, t0.c34))))))AND(((t0.c0) BETWEEN (t0.c0) AND (t0.c34)))) HAVING ((((t0.c34) NOT BETWEEN (t0.c60) AND (t0.c34)))*(CASE WHEN t0.c60 THEN '-667634421' END)) LIMIT -132010441 OFFSET 1562125534; -- 0ms;
SELECT DISTINCT UPPER(t0.c60 COLLATE RTRIM) FROM t0 ORDER BY ((((((((((t0.c60)/(t0.c34)))OR((((t0.c0))>((t0.c0))))))AND(((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c60)))))AND((NOT (t0.c60)))))OR((((t0.c0)) NOT BETWEEN ((x'')) AND ((t0.c0))))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL (AVG(t0.c60) IN ()) FROM t0 WHERE (0.32026821344245515); -- 0ms;
SELECT DISTINCT ((((((((((t0.c34)AND(t0.c0)))OR(t0.c0)))OR(t0.c34)))AND(t0.c0))) ISNULL), TOTAL((((t0.c60))<=((t0.c0)))) OVER ( PARTITION BY t0.c34, (~ (((((((((t0.c60)OR(t0.c60)))OR(t0.c0)))AND(t0.c60)))AND(t0.c0))))), ((t0.c34) NOT NULL) FROM t0 WHERE (((NULL COLLATE RTRIM) BETWEEN ((+ (0Xfffffffffcaf9813))) AND (CAST(x'' AS BLOB)))); -- 0ms;
SELECT '' FROM t0 NOT INDEXED WHERE (NULL); -- 0ms;
SELECT DISTINCT t0.c60 FROM t0; -- 0ms;
SELECT DISTINCT t0.c60 FROM t0 WHERE (CASE ((-556594788)*(''))  WHEN CASE '-132010441'  WHEN x'76d8' THEN x'' ELSE '714429684' END THEN ((((-5.76712488E8)OR(NULL)))AND(NULL)) ELSE ((((0.4373538379139579)OR(x'')))AND('191454589')) END); -- 0ms;
SELECT CAST(t0.c34 COLLATE NOCASE AS TEXT) FROM t0 WHERE (CAST('191454589' AS REAL) COLLATE NOCASE); -- 0ms;
SELECT ((CAST(t0.c34 AS REAL)) NOT BETWEEN (t0.c34) AND (((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c60)))), (((t0.c60)) NOT BETWEEN ((((t0.c34) NOT NULL))) AND ((t0.c0))), (- (CASE WHEN t0.c60 THEN t0.c34 END)), SUM((((t0.c0))>((t0.c60)))) OVER (), ((((t0.c60)|(t0.c60)))-(x'd1c2')) FROM t0; -- 0ms;
SELECT COUNT(*), (CASE t0.c60  WHEN t0.c60 THEN t0.c34 END IN ()), GROUP_CONCAT((t0.c60 IN ())) FROM t0; -- 0ms;
SELECT ALL SUM(CAST(t0.c0 AS BLOB)) OVER () FROM t0 LIMIT 1097753374 OFFSET -1832170662; -- 0ms;
SELECT ALL ((t0.c0) IS TRUE), CASE WHEN ((t0.c0)IS(NULL)) THEN '0.32026821344245515' WHEN (('1097753374') IS FALSE) THEN ((((t0.c0)OR(t0.c34)))OR('-150272267')) WHEN (+ (t0.c0)) THEN ((t0.c34) NOTNULL) END, t0.c34 FROM t0 WHERE (((CAST(NULL AS NUMERIC)) BETWEEN (((x'be28') NOTNULL)) AND (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c34)-(t0.c60)))AND(((((t0.c0)OR(t0.c34)))OR(t0.c60)))))OR(((t0.c0) NOT BETWEEN (t0.c34) AND (t0.c34)))))OR(ABS(t0.c60))))OR((t0.c60 IN ()))) FROM t0 INDEXED BY i13 WHERE (json_insert(CAST(x'eb1b' AS REAL), json_type(0.13009170256780045), (('-96330453')<<(NULL)))) GROUP BY json_patch(((t0.c0) NOTNULL), CAST(t0.c60 AS BLOB)) HAVING ((t0.c60)|(CASE WHEN t0.c34 THEN t0.c0 ELSE t0.c60 END));SELECT DISTINCT ((((((((((t0.c0)OR(t0.c34)))OR(t0.c34)))AND(t0.c34)))AND(t0.c34)))%((t0.c34 IN (t0.c60, t0.c34)))) FROM t0; -- 0ms;
SELECT DISTINCT x'', NTILE(t0.c34 COLLATE BINARY) OVER ( ORDER BY CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0) IS TRUE) THEN ((t0.c0)IS NOT(t0.c60)) WHEN ((t0.c60) IS TRUE) THEN CHANGES() WHEN LIKELY(t0.c34) THEN t0.c60 ELSE t0.c0 COLLATE RTRIM END  NULLS LAST), COUNT(((t0.c34)!=(t0.c60))) OVER () FROM t0 WHERE (CASE 5.49991524E8  WHEN '' THEN '-522673336' WHEN x'' THEN NULL WHEN '902611064' THEN '-522673336' END COLLATE NOCASE); -- 0ms;
SELECT 0.008922720037502496, ((t0.c0) NOT NULL) COLLATE NOCASE, CAST(t0.c0 COLLATE BINARY AS BLOB) FROM t0 ORDER BY ((t0.c60 COLLATE BINARY)<(CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c0 THEN t0.c0 WHEN t0.c34 THEN t0.c60 END)), ((((t0.c0)AND((t0.c0 IN ()))))AND(((t0.c0)<=(t0.c34))))  NULLS FIRST;SELECT ((t0.c0 COLLATE BINARY)||(((t0.c60) IS FALSE))) FROM t0 WHERE (CAST('' AS REAL)) LIMIT 48465451; -- 0ms;
SELECT SUM(MIN(t0.c0, t0.c0)) FILTER(WHERE (CAST(t0.c60 AS NUMERIC) IN (((t0.c0) NOTNULL)))) OVER () FROM t0 WHERE ((((('')OR(0.6441559940472621))) NOT BETWEEN (1.91454589E8) AND (((('117957372')) NOT BETWEEN (('0.13009170256780045')) AND ((x'1a9b')))))) LIMIT -121387001 OFFSET 1562125534; -- 1ms;
SELECT DISTINCT (((t0.c34)GLOB(t0.c0)) IN ()) FROM t0 WHERE ((((~ (x'')))IS((('vnY') NOT BETWEEN (x'') AND ('nDv쵶V r靍'))))); -- 0ms;
SELECT DISTINCT (CASE WHEN t0.c34 THEN t0.c0 ELSE t0.c60 END IN ()) FROM t0; -- 0ms;
SELECT DISTINCT SUM('P[') FROM t0 WHERE (0.4373538379139579) GROUP BY (CASE t0.c60  WHEN t0.c34 THEN t0.c34 END IN ()), t0.c0, (- ((((t0.c60))<=((t0.c60))))) HAVING (((((t0.c60)OR('701205993')))AND(t0.c0)) IN ()); -- 0ms;
SELECT ALL SUM(((t0.c60)<=(t0.c34))) OVER () FROM t0; -- 0ms;
SELECT ALL (((+ (t0.c34))) NOTNULL) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c34, t0.c60, t0.c60)) BETWEEN ((t0.c0, 0.4373538379139579, t0.c60)) AND ((t0.c0, t0.c0, NULL)))) IS FALSE) FROM t0; -- 0ms;
SELECT CASE t0.c0 COLLATE BINARY  WHEN CAST(t0.c34 AS BLOB) THEN ((t0.c60) BETWEEN (x'7ee1') AND (t0.c0)) END FROM t0 WHERE ('1887795604'); -- 0ms;
SELECT NULL FROM t0 WHERE ((+ (CASE WHEN 0.13009170256780045 THEN '1141853372' END))); -- 0ms;
SELECT DISTINCT 'KaX[*a?', (((t0.c34, t0.c34, t0.c34)) BETWEEN ((((t0.c60)<=(t0.c34)), t0.c0, ((((t0.c0)OR(x'')))OR(t0.c0)))) AND ((((t0.c0)<>(t0.c34)), ((t0.c0) IS FALSE), t0.c0 COLLATE NOCASE))), ((((((((((((0.9878703133554516)AND(t0.c34)))OR(t0.c0)))OR(((t0.c34) IS FALSE))))OR(((t0.c0)AND(t0.c34)))))AND((t0.c60 IN ()))))AND(t0.c60 COLLATE NOCASE)), COUNT(((t0.c60)<=(t0.c60))), NTILE(((0.6011660905225266)|((- (t0.c60))))) OVER () FROM t0 WHERE (NULLIF((((0.900683528698322, x'', '頓D0D+A'))>=((NULL, NULL, x''))), 0.4230997134461316));SELECT DISTINCT t0.c60 FROM t0; -- 0ms;
SELECT (- (0.006226675336732157)) COLLATE BINARY FROM t0 WHERE (CASE CASE WHEN NULL THEN '918875676' ELSE x'6b6c' END  WHEN (~ ('*q4跩羕K.%')) THEN (((NULL))>(('1681710382'))) ELSE LIKE('kax[*a?', '-522673336') END); -- 1ms;
SELECT DISTINCT (t0.c34 IN (t0.c0)) COLLATE RTRIM, ((((t0.c60) IS FALSE)) NOTNULL), MIN((- (t0.c60))) FROM t0 WHERE ((- ((('Of Hg)') BETWEEN (0.17750224087828115) AND (x''))))); -- 0ms;
SELECT ALL CASE CAST(t0.c34 AS BLOB)  WHEN (- (t0.c0)) THEN CAST(t0.c34 AS INTEGER) ELSE TOTAL(t0.c0) END FROM t0 WHERE ((((NULL))>=((CAST(0.7291947458380174 AS REAL))))); -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT (+ (((t0.c0) NOTNULL))) FROM t0; -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((t0.c60))<((t0.c60))), ((t0.c60) BETWEEN (t0.c34) AND (t0.c0)), (~ (t0.c0)), (+ (t0.c60)), ((t0.c0)!=(t0.c0))))<=((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c60)), (((('0.4230997134461316')OR(t0.c0)))AND(t0.c0)), ((t0.c60)-(t0.c0)), t0.c34, load_extension(0.14924771778707824, t0.c0))))) OVER ( ORDER BY (CASE WHEN t0.c60 THEN t0.c0 END IN (NULL, '0.32026821344245515')) DESC RANGE  CURRENT ROW) FROM t0 WHERE ((((66328556, NULL, '')) NOT BETWEEN (((NOT ('428888879')), CASE -640517753  WHEN x'' THEN 0.38006453574477017 ELSE NULL END, ((0.5870001046750919)*(x'cd24')))) AND ((((0.1532478077232896)/(0.23585535210177355)), CASE x''  WHEN '' THEN 0.7074902622933172 END, ((x'')&(0.014499298730561883)))))); -- 0ms;
SELECT ((((t0.c60)&(t0.c34)))>(MIN(t0.c60))), (((t0.c60, t0.c60, t0.c0)) BETWEEN ((((t0.c0) BETWEEN (t0.c60) AND (t0.c0)), CASE WHEN t0.c34 THEN t0.c34 WHEN t0.c34 THEN t0.c34 WHEN '-2053633625' THEN t0.c60 ELSE t0.c60 END, ((t0.c34) NOT BETWEEN (t0.c34) AND (t0.c0)))) AND ((x'', (~ (t0.c0)), ((t0.c0) IS FALSE)))), json_array_length(t0.c34 COLLATE BINARY) FROM t0 INDEXED BY i58 LIMIT -1931838232;SELECT -1.832170662E9 COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT NULL, (+ ((t0.c60 IN ()))), json_remove(t0.c34, t0.c34 COLLATE RTRIM, (t0.c0 IN ()), CAST(t0.c0 AS INTEGER)) FROM t0 GROUP BY (((UNLIKELY(DISTINCT t0.c60), json_object(0.3767894458805874, t0.c34), (((t0.c0))==((t0.c34)))))<((((((t0.c34)AND(t0.c34)))OR(t0.c0)), (((t0.c34)) NOT BETWEEN ((t0.c34)) AND ((t0.c34))), ((t0.c0) BETWEEN (0.9940317790697987) AND (t0.c34))))) HAVING ((NOT (t0.c60)) IN ()); -- 0ms;
SELECT DISTINCT (((MAX(t0.c34)))>=(((t0.c34 IN (x'f858'))))) FROM t0; -- 0ms;
SELECT ALL ((LOWER(DISTINCT t0.c34))AND(((((((((t0.c34)AND(t0.c0)))AND(t0.c34)))OR(t0.c60)))AND(t0.c60)))), (CAST(t0.c34 AS INTEGER) IN ()), ((((((t0.c0)AND(t0.c0)))OR(t0.c0)))>=(GROUP_CONCAT(NULL))) FROM t0; -- 1ms;
SELECT DISTINCT ((((t0.c60)LIKE(t0.c0)))>>(ABS(t0.c0))) FROM t0 INTERSECT SELECT DISTINCT NTH_VALUE((NOT (t0.c60)) COLLATE RTRIM, t0.c34) OVER ( ROWS BETWEEN  CURRENT ROW AND t0.c34 FOLLOWING) FROM t0;SELECT QUOTE(t0.c34 COLLATE BINARY) FROM t0; -- 0ms;
SELECT t0.c0 FROM t0 WHERE (((0.48003601864590506 COLLATE NOCASE)>(('[s' IN ())))) ORDER BY ((('bIk⑛[', ((((t0.c60)AND(t0.c34)))OR(t0.c34)), CASE t0.c34  WHEN t0.c0 THEN '' END, 0.17750224087828115, CAST(t0.c0 AS REAL)))<=((((((t0.c34)OR(t0.c60)))OR(t0.c0)), t0.c60 COLLATE BINARY, LIKELIHOOD(DISTINCT t0.c0, 0.9325440402975679), CAST(t0.c34 AS REAL), SQLITE_COMPILEOPTION_USED(t0.c0))))  NULLS LAST LIMIT -878146807 OFFSET 316524866; -- 0ms;
SELECT DISTINCT ((((t0.c0)>=(NULL))) BETWEEN (t0.c34 COLLATE BINARY) AND ((t0.c0 IN ()))) FROM t0 LIMIT 549991524 OFFSET 811585809; -- 0ms;
SELECT ALL 0.47076772755150054 FROM t0 WHERE ((((('')+('v')))OR(((2073938958) NOT BETWEEN ('972959838') AND ('-2063966514'))))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN t0.c0 THEN t0.c34 ELSE t0.c60 END AS TEXT) FROM t0 WHERE (((((((NULL)OR(0.28385352760531224)))AND(0.4373538379139579)))IS((- ('132873423'))))); -- 0ms;
SELECT DISTINCT ((AVG(t0.c0)) NOTNULL) FROM t0 WHERE ((((0.6404953937153844)=(0X40a40bdd)) IN (CAST(0.3389756025493341 AS REAL), LIKELIHOOD(x'', 0.030112488216415767)))); -- 0ms;
SELECT DISTINCT ((CAST(NULL AS INTEGER)) BETWEEN (CASE WHEN x'aec1d464' THEN t0.c60 ELSE t0.c60 END) AND ((t0.c0 IN (t0.c34, -1878015119)))) FROM t0 ORDER BY (~ (t0.c0 COLLATE RTRIM)) DESC  NULLS LAST, t0.c34 DESC  NULLS LAST LIMIT -1884276673; -- 0ms;
SELECT ALL (((('-461109651')LIKE('-530511612')))||(CAST(t0.c34 AS BLOB))) FROM t0; -- 0ms;
SELECT DISTINCT LAST_VALUE((((((t0.c0))<(('1000803301')))) BETWEEN (LOWER(DISTINCT t0.c34)) AND (((t0.c60) NOTNULL)))) OVER () FROM t0 WHERE (((((((((((NULL) ISNULL))AND(((x'')GLOB(0.0858582417506506)))))AND(CASE WHEN NULL THEN '1887795604' END)))AND((~ (x'')))))AND((- (x''))))); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT NULL)) IS FALSE) FROM t0 WHERE (((x'477f')>=('-461109651')) COLLATE RTRIM); -- 0ms;
SELECT ALL (((((t0.c60)) NOT BETWEEN ((t0.c0)) AND ((t0.c60)))) IS FALSE), ((((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c0))) BETWEEN ((((t0.c0, t0.c0, t0.c60)) BETWEEN ((t0.c34, 0.3803362470604543, t0.c60)) AND ((t0.c0, t0.c34, t0.c0)))) AND (CASE t0.c0  WHEN t0.c0 THEN t0.c0 ELSE t0.c60 END)), (((t0.c60))<((t0.c60))) COLLATE BINARY FROM t0 ORDER BY CAST('nㇿb#2' AS TEXT); -- 0ms;
SELECT ALL (((((t0.c34)AND(t0.c34)))AND(t0.c60)) IN (((t0.c34) NOTNULL))), ((((t0.c60) NOTNULL))*(((t0.c34)!=(t0.c0)))), (((+ (t0.c34))) ISNULL) FROM t0 WHERE (CASE WHEN ((NULL) NOT BETWEEN (x'') AND (0.08419920619293675)) THEN (('')*(x'')) END) GROUP BY 0Xffffffffa36610fa, LOWER((t0.c0 IN (t0.c0))), t0.c34, (NOT (0X416e631e)), CHAR(((t0.c60)=(t0.c0)), CASE NULL  WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c34 WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c34 THEN t0.c0 WHEN t0.c34 THEN 0.37730238171399666 WHEN t0.c60 THEN t0.c34 ELSE t0.c34 END, '-1553592070') HAVING (t0.c0 IN ()) COLLATE NOCASE ORDER BY (~ (LIKELY(t0.c0))) DESC, (((CAST(t0.c60 AS TEXT)))<>((((t0.c0) BETWEEN (t0.c0) AND (t0.c60))))), ((t0.c0)AND(t0.c60 COLLATE BINARY)) DESC; -- 0ms;
SELECT ALL IFNULL(DISTINCT NULL, ((t0.c60)/(t0.c34))) FROM t0 WHERE ((0X4bdf241b IN ()) COLLATE BINARY); -- 0ms;
SELECT ((('	F-\n', t0.c0, t0.c34)) BETWEEN ((t0.c0 COLLATE BINARY, CAST(t0.c60 AS INTEGER), (t0.c60 IN (t0.c60)))) AND ((COALESCE(DISTINCT t0.c0, t0.c0, t0.c34, t0.c34), (((t0.c0))>((t0.c0))), CAST(t0.c60 AS NUMERIC)))) FROM t0 WHERE (((('X(!+-57#c' IN ())) BETWEEN (CAST('(' AS REAL)) AND (((((NULL)OR(0X40a40bdd)))AND(-980013665))))); -- 0ms;
SELECT ALL ((t0.c60) NOT BETWEEN ((t0.c60 IN ())) AND (((x'c0ba')IS(t0.c0)))) FROM t0 LIMIT -31941346 OFFSET 1715755081; -- 0ms;
SELECT ALL CASE WHEN (~ (t0.c60)) THEN ((((((((t0.c34)AND(t0.c34)))OR(t0.c34)))OR(t0.c34)))AND(t0.c60)) WHEN TOTAL(t0.c0) THEN CAST('\n' AS BLOB) WHEN ((t0.c60)GLOB(t0.c0)) THEN t0.c34 COLLATE NOCASE END FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c34) BETWEEN ((t0.c60 IN ())) AND (t0.c0 COLLATE RTRIM)) FROM t0 GROUP BY ((t0.c34) NOTNULL); -- 0ms;
SELECT ALL ((GROUP_CONCAT(t0.c0)) BETWEEN (CAST(t0.c34 AS INTEGER)) AND (((t0.c0)GLOB(t0.c0)))), DENSE_RANK() OVER ( ROWS BETWEEN CASE ((t0.c34)>=(t0.c0))  WHEN (t0.c34 IN ()) THEN (- (t0.c0)) WHEN ((t0.c60) IS FALSE) THEN ((t0.c60)-(t0.c60)) WHEN (+ (t0.c60)) THEN (((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c34))) ELSE t0.c60 END FOLLOWING AND  UNBOUNDED FOLLOWING), ((((- (t0.c60))))=((CASE WHEN t0.c0 THEN t0.c34 ELSE t0.c0 END))) FROM t0 ORDER BY COALESCE(DISTINCT ((t0.c34) NOTNULL), (t0.c60 IN ()), t0.c0 COLLATE RTRIM, (((t0.c34)) NOT BETWEEN ((t0.c60)) AND ((t0.c60))), ((t0.c0)>=(t0.c60)), ((-133790163)>=(t0.c34)), x'', (NOT (t0.c0))) LIMIT -507277477; -- 0ms;
SELECT ALL (LIKELIHOOD(DISTINCT t0.c34, 0.015240039135358319) IN (UPPER(0.5659889764340652), (((t0.c60, t0.c0, t0.c0)) BETWEEN ((t0.c34, t0.c60, '-382459414')) AND ((t0.c0, t0.c60, t0.c34))))) FROM t0 WHERE ((+ ((((NULL)) NOT BETWEEN ((x'')) AND ((0.5659889764340652)))))); -- 0ms;
SELECT ALL SUM((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c34)))) OVER () FROM t0 WHERE (((((((((((((0.6180640483153931)OR(0.5866075852274366)))AND(0.10768720909410312)))AND(NULL)))OR(x'')))AND(('' IN ()))))OR(SQLITE_COMPILEOPTION_GET(NULL)))); -- 1ms;
SELECT ((CAST(t0.c34 AS INTEGER))<=(((((((((t0.c60)AND(t0.c0)))AND(t0.c34)))OR(t0.c0)))OR(t0.c60)))) FROM t0 ORDER BY ((((t0.c60) NOT NULL)) IS FALSE)  NULLS FIRST, ((((CASE t0.c34  WHEN t0.c34 THEN t0.c0 END)AND((t0.c60 IN (t0.c0, t0.c34)))))AND((- (t0.c60)))) DESC, t0.c0 DESC  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN '⶟+' THEN ((t0.c0)>(t0.c0)) ELSE t0.c0 COLLATE BINARY END, t0.c34, NTH_VALUE((t0.c34 COLLATE NOCASE IN (((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c0)))), ((((((t0.c34)OR(t0.c60)))AND(t0.c34)))OR(((((t0.c60)OR(t0.c34)))OR(t0.c34))))) OVER (), COUNT(*) OVER ( ROWS  UNBOUNDED PRECEDING), CAST(((((NULL)OR(t0.c34)))AND(t0.c0)) AS INTEGER) FROM t0 WHERE ('鼴Fn(	''nf') GROUP BY '2073938958'; -- 0ms;
SELECT ((((((t0.c34))!=((0X2a9554f4))), MIN(t0.c34), ((t0.c34) NOT NULL)))>=(((NOT (t0.c0)), (t0.c60 IN (t0.c34, t0.c0)), ((((x'0b07')AND(t0.c60)))AND(t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT IFNULL((t0.c0 IN ()), CAST(t0.c34 AS INTEGER)), (((t0.c60)<<(t0.c60)) IN ()), 8.72740736E8 COLLATE RTRIM FROM t0; -- 0ms;
SELECT (((t0.c60, NULL, t0.c60)) NOT BETWEEN ((((t0.c60)/(t0.c60)), t0.c34 COLLATE BINARY, (((t0.c0))>=((t0.c0))))) AND ((CAST(t0.c60 AS TEXT), CAST(t0.c34 AS REAL), t0.c60 COLLATE NOCASE))) FROM t0 GROUP BY ((((t0.c34) IS TRUE)) NOT BETWEEN (((t0.c34)-(t0.c0))) AND (COALESCE(t0.c60, x'', t0.c0, t0.c0))); -- 0ms;
SELECT DISTINCT ((CASE t0.c34  WHEN t0.c34 THEN t0.c34 END)&(((t0.c0) IS TRUE))) FROM t0 ORDER BY COALESCE(((NULL)<<(t0.c0)), ((t0.c34)IS NOT(t0.c60))) ASC; -- 0ms;
SELECT DISTINCT LTRIM(CAST(t0.c34 AS REAL), ((t0.c0) IS TRUE)) FROM t0 WHERE (((((- (0.28385352760531224))))<=((((x'') BETWEEN (NULL) AND (NULL)))))) ORDER BY ((NULL) NOTNULL), (((t0.c34 IN ('', t0.c60))) NOTNULL) DESC, (((t0.c0)) NOT BETWEEN ((ROUND(t0.c0, t0.c60))) AND ((t0.c60)))  NULLS LAST; -- 0ms;
SELECT LOWER(((t0.c60)&(t0.c34))) FROM t0 WHERE ((+ ((~ (''))))); -- 0ms;
SELECT CASE WHEN CAST(t0.c0 AS REAL) THEN (('811585809') ISNULL) ELSE CASE NULL  WHEN t0.c34 THEN t0.c34 WHEN t0.c34 THEN t0.c60 WHEN t0.c60 THEN t0.c60 END END FROM t0 WHERE (CAST('-665209543' AS REAL)); -- 0ms;
SELECT ALL ((((t0.c60 COLLATE NOCASE)OR(CAST(t0.c34 AS NUMERIC))))AND((NULL IN ()))), ((x'd853') NOT NULL) COLLATE BINARY, COUNT(CAST(t0.c34 AS NUMERIC)) OVER () FROM t0 GROUP BY (CAST(t0.c60 AS REAL) IN ()) HAVING ((('糏u'))<=((((t0.c0)>(t0.c0))))); -- 0ms;
SELECT ALL MIN(t0.c0) COLLATE BINARY COLLATE NOCASE FROM t0 NOT INDEXED LIMIT 1939447137 OFFSET -2076801265; -- 0ms;
SELECT ALL ((t0.c0 COLLATE BINARY)%((0.9878703133554516 IN ()))), UPPER(DISTINCT CASE WHEN t0.c34 THEN t0.c0 END), (NOT (t0.c60)) FROM t0 LIMIT -31941346; -- 0ms;
SELECT ALL ((((((t0.c34)OR(t0.c60)))OR(t0.c0)))==((t0.c0 IN ()))) FROM t0 ORDER BY ((((8.11585809E8)OR((((t0.c34)) BETWEEN ((t0.c34)) AND ((t0.c0))))))AND(t0.c60 COLLATE NOCASE)); -- 0ms;
SELECT ((((t0.c0)AND(t0.c60)))AND(t0.c60)) COLLATE RTRIM, CAST(t0.c34 AS BLOB) COLLATE BINARY, (t0.c0 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT ((TOTAL(t0.c0)) BETWEEN (TOTAL(t0.c60)) AND ((((t0.c0)) NOT BETWEEN ((t0.c34)) AND ((t0.c0))))), (NOT (CASE t0.c60  WHEN t0.c34 THEN t0.c0 WHEN t0.c60 THEN t0.c0 WHEN t0.c34 THEN t0.c34 END)), CAST(((((t0.c60)AND(0.9630514358505367)))OR(t0.c0)) AS BLOB) FROM t0 WHERE (json_object(LIKELY(x'b295'), CAST('' AS BLOB)));SELECT DISTINCT ((((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c34)))AND(t0.c34 COLLATE RTRIM)), ((QUOTE(t0.c0)) ISNULL), t0.c34, CAST((t0.c60 IN ()) AS INTEGER), TOTAL((((t0.c60)) BETWEEN ((x'')) AND ((t0.c60)))) FROM t0 WHERE (((x'') IS TRUE) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((CASE t0.c34  WHEN t0.c60 THEN t0.c60 WHEN t0.c34 THEN t0.c0 WHEN t0.c34 THEN t0.c34 WHEN t0.c60 THEN t0.c34 WHEN t0.c0 THEN t0.c34 ELSE 'R05x6?*s0' END)<<(((t0.c60)OR(t0.c60)))) FROM t0 WHERE (((((NULL)LIKE('')))!=(((NULL) NOT BETWEEN (x'07adb4e2') AND (NULL))))); -- 0ms;
SELECT ((((t0.c34) NOT BETWEEN (t0.c60) AND (t0.c60)))<(CASE WHEN t0.c60 THEN t0.c60 WHEN x'' THEN t0.c34 WHEN t0.c0 THEN t0.c60 END)) FROM t0; -- 0ms;
SELECT (((((~ (t0.c60)))AND(((NULL) IS FALSE))))AND(CASE WHEN t0.c34 THEN t0.c34 END)) FROM t0 WHERE ('\n'); -- 0ms;
SELECT ALL NULL FROM t0 WHERE (CAST(((NULL)&(NULL)) AS BLOB)); -- 0ms;
SELECT CASE WHEN t0.c0 THEN (0.32500664262216405 IN (t0.c0)) END FROM t0; -- 0ms;
SELECT ALL AVG(((0.5184233447854889) ISNULL)) OVER (), CAST(((0x7610d7cf)IS(x'7dcc')) AS TEXT), CAST(((t0.c0) NOTNULL) AS REAL) FROM t0; -- 0ms;
SELECT ALL LIKELY(((((((((t0.c60)AND(t0.c0)))OR(t0.c34)))OR('')))OR(t0.c60))) FROM t0 WHERE (0.8900859110662757) ORDER BY t0.c60; -- 0ms;
SELECT DISTINCT (NOT (((t0.c34)>>(t0.c60)))), MIN(((t0.c34)GLOB(t0.c60))) COLLATE RTRIM, x'5027' FROM t0; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c60 THEN t0.c60 END)LIKE(((NULL) IS FALSE))) FROM t0 WHERE ((NULL COLLATE NOCASE IN ())); -- 1ms;
SELECT ((((0.9974213427412919)<=(t0.c34)))GLOB(((t0.c0) BETWEEN (0xffffffffcba88b09) AND (t0.c0)))) FROM t0 WHERE ((((x'1e2e' IN ()))LIKE(((NULL) NOT BETWEEN (0.4373538379139579) AND (''))))); -- 0ms;
SELECT CASE WHEN ((((t0.c34)AND(t0.c34)))AND(t0.c34)) THEN QUOTE(t0.c34) ELSE ((t0.c60)<>(t0.c34)) END FROM t0 WHERE ((('1415552502')<(NULL)) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((t0.c34 COLLATE BINARY))<=((t0.c60 COLLATE NOCASE))) FROM t0 GROUP BY CAST(((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c0)) AS INTEGER); -- 0ms;
SELECT DISTINCT (+ (t0.c60 COLLATE NOCASE)) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (- (SUM(t0.c34))) FROM t0 WHERE (((CAST('頓D0D+A' AS REAL))|((((NULL)) NOT BETWEEN ((0Xffffffffb74b6885)) AND ((NULL)))))); -- 0ms;
SELECT ALL CAST((t0.c0 IN (t0.c0)) AS REAL), NTILE(LTRIM((- (t0.c0)))) OVER (), TOTAL(((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c60))) FROM t0 WHERE (1754642997) EXCEPT SELECT ALL (((((((((NOT (t0.c34)))AND(CAST(t0.c60 AS TEXT))))OR(t0.c0 COLLATE RTRIM)))OR(t0.c34 COLLATE RTRIM)))OR((+ (t0.c0)))), ((((((t0.c60)OR(t0.c0)))OR(t0.c60))) IS FALSE), ((MAX(t0.c0)) ISNULL) FROM t0 WHERE (('-1849572802' IN ()) COLLATE BINARY);SELECT '918875676' FROM t0; -- 0ms;
SELECT DISTINCT SUM(((0.9641061818395693)OR(t0.c60))) FROM t0 WHERE (((((('e'))<=((''))))OR(((x'')*(0.14924771778707824))))); -- 0ms;
SELECT DISTINCT (((t0.c0) NOT BETWEEN (t0.c34) AND (t0.c34)) IN ()) FROM t0; -- 0ms;
SELECT ALL '117957372' COLLATE BINARY, (((t0.c0)) NOT BETWEEN ((('132873423' IN ()))) AND ((AVG(t0.c34)))), CAST((t0.c60 IN ()) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c60))) BETWEEN (((t0.c0)AND(t0.c0))) AND ((t0.c60 IN ()))) FROM t0; -- 0ms;
SELECT ALL CAST((- (t0.c0)) AS BLOB) FROM t0 WHERE (((((NULL)LIKE(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((t0.c34 COLLATE RTRIM) NOT BETWEEN ((('e3')<<(t0.c34))) AND ((((t0.c34)) NOT BETWEEN ((t0.c34)) AND ((t0.c34))))) FROM t0; -- 0ms;
SELECT DISTINCT (((- (t0.c34)))<((~ (t0.c60)))), ((((NULLIF(DISTINCT t0.c60, t0.c0))OR(AVG(t0.c0))))OR(((t0.c34) NOT BETWEEN (t0.c60) AND (t0.c34)))), (((t0.c60, t0.c0, t0.c0)) NOT BETWEEN ((COALESCE(DISTINCT t0.c34, t0.c34), ((t0.c0)<<(t0.c60)), CASE WHEN t0.c0 THEN t0.c0 END)) AND ((0.8412962644223239, t0.c60 COLLATE NOCASE, ((t0.c0)+(t0.c60))))) FROM t0; -- 1ms;
SELECT (t0.c0 COLLATE RTRIM IN (0xffffffffa2c86330)), ((CAST(t0.c34 AS TEXT)) IS FALSE), (((t0.c34))<((((t0.c34) NOT BETWEEN (t0.c34) AND (0.5184233447854889))))) FROM t0 WHERE (CASE CHAR(x'', 'Pl^U賑\r', '៬')  WHEN CAST('1939447137' AS NUMERIC) THEN LTRIM(NULL, x'') END); -- 0ms;
SELECT ((((((((((((((t0.c0)AND(t0.c34)))OR(t0.c60)))AND(t0.c0)))OR(t0.c60)))OR(t0.c60)))AND(t0.c0)))%(t0.c60 COLLATE RTRIM)), (((t0.c0 COLLATE NOCASE))=((((t0.c60) NOTNULL)))), (NOT (CASE t0.c34  WHEN t0.c0 THEN t0.c0 END)) FROM t0; -- 0ms;
SELECT ((CASE t0.c0  WHEN t0.c34 THEN t0.c60 ELSE t0.c34 END)<=(((t0.c34)OR(t0.c34)))), UNLIKELY(((t0.c60) BETWEEN (t0.c34) AND (t0.c60))), ((x'') NOT NULL) FROM t0 WHERE (CASE WHEN SQLITE_SOURCE_ID() THEN CAST(-1620609190 AS NUMERIC) WHEN ((0.916937680819996)*(NULL)) THEN ((NULL) NOT BETWEEN (x'7c29') AND (1.536330961E9)) WHEN (~ (x'')) THEN ((('r?6XreD~9', 1892222450, NULL))<=((NULL, NULL, NULL))) END); -- 0ms;
SELECT ALL json_array_length(((t0.c60) BETWEEN (t0.c0) AND (t0.c0)), json_type(t0.c60)), (((t0.c0, t0.c0, NULL)) NOT BETWEEN ((t0.c0, (((0.2625389215242877)) NOT BETWEEN ((t0.c60)) AND ((t0.c34))), load_extension(t0.c60))) AND ((((t0.c0)==(t0.c0)), CASE t0.c60  WHEN 0X3ddfae83 THEN t0.c0 END, (~ (t0.c0))))), ((0.956530181179688)IS(x'8bbf')) FROM t0;SELECT (NOT (t0.c60 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)=(t0.c34)))AND(CASE t0.c0  WHEN t0.c34 THEN t0.c34 END)), (((t0.c60)) NOT BETWEEN (((t0.c0 IN ()))) AND ((t0.c0))), (((NULL)) BETWEEN ((NULL COLLATE NOCASE)) AND (((NOT (t0.c0))))) FROM t0 LIMIT 1887795604; -- 0ms;
SELECT GROUP_CONCAT(t0.c60) FROM t0 ORDER BY MAX(((t0.c34)-(t0.c60)), (((t0.c0, t0.c60, t0.c60))!=((0x5a1660b, t0.c0, t0.c34))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((t0.c60 IN (t0.c34, x'')))<(COUNT(*))) FROM t0 WHERE ((((((('')IS(0.6864470813699822)))AND(CASE 0.6182785744623207  WHEN '-316854248' THEN '-112539372' END)))OR((((0.3717010896955836, 'v', NULL))<((NULL, 0.32026821344245515, x'')))))); -- 0ms;
SELECT DISTINCT (~ (((t0.c34) NOT BETWEEN (t0.c60) AND (t0.c0)))) FROM t0; -- 0ms;
SELECT x'', ((((t0.c34)AND(t0.c60)))OR(t0.c0)) COLLATE NOCASE, (+ ('822885048')) FROM t0 LIMIT 1069950526; -- 0ms;
SELECT DISTINCT AVG(((t0.c0) NOT NULL)) OVER (), COUNT(*) OVER (), ((t0.c0 COLLATE BINARY)+(t0.c34)) FROM t0 WHERE ((- (((x'4535')<=(''))))); -- 0ms;
SELECT ((((((((t0.c60)OR(((t0.c34) NOT NULL))))OR(CAST(t0.c0 AS BLOB))))AND(TYPEOF(t0.c34))))AND(MIN(t0.c60))) FROM t0 WHERE (((((((NULL) IS TRUE))OR(CAST(x'' AS INTEGER))))OR(((('', x'1f51', 0x6895ba35)) BETWEEN (('', 0.47294049868626153, -5.76712488E8)) AND ((x'', x'781f', '')))))); -- 0ms;
SELECT ALL (((+ (-505218810))) NOTNULL) FROM t0; -- 0ms;
SELECT (((((t0.c34 IN (t0.c60)))AND((('kax[*a?')>=(t0.c60)))))OR(t0.c0)) FROM t0 WHERE (((('*q4跩羕K.%') NOTNULL) IN ())); -- 0ms;
SELECT (((t0.c0)) BETWEEN ((CASE WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c60 WHEN -3.82459414E8 THEN t0.c0 WHEN t0.c0 THEN t0.c60 WHEN t0.c0 THEN t0.c60 ELSE NULL END)) AND ((MAX(t0.c60)))) FROM t0 GROUP BY 0.4360220882569269 LIMIT 1536330961; -- 0ms;
SELECT ALL ((((0.553488100606936) NOT BETWEEN (t0.c60) AND (t0.c60)))/(TYPEOF(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0, t0.c34, t0.c60)) BETWEEN ((t0.c34, t0.c0, t0.c34)) AND ((t0.c60, t0.c60, t0.c60))) IN ()), RANK() OVER ( RANGE BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE GROUP), NULL COLLATE NOCASE FROM t0 ORDER BY (- (((((((((t0.c34)OR('1751021579')))AND(t0.c60)))OR(t0.c60)))AND(t0.c60))))  NULLS FIRST, (((- (t0.c34)))>=((+ (t0.c34))))  NULLS FIRST; -- 0ms;
SELECT CASE (((NULL, t0.c60, t0.c34)) NOT BETWEEN ((t0.c0, t0.c34, t0.c0)) AND ((t0.c60, 0.3808997986206918, t0.c60)))  WHEN 0.09865358737814289 THEN ((t0.c60) NOTNULL) WHEN ((0xffffffffe2d76fa5)+(t0.c0)) THEN ((t0.c34)GLOB(t0.c0)) WHEN CASE t0.c34  WHEN t0.c60 THEN t0.c0 WHEN t0.c34 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c34 END THEN ((t0.c60)OR(t0.c60)) ELSE ((t0.c34)%(t0.c60)) END FROM t0; -- 0ms;
SELECT DISTINCT t0.c60 FROM t0 WHERE (SQLITE_COMPILEOPTION_GET((0.3803362470604543 IN ()))); -- 0ms;
SELECT t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT SUM(((t0.c60)<(t0.c0))) OVER () FROM t0 WHERE (((((((((NULL COLLATE NOCASE)OR(LOWER(DISTINCT 'x(!+-57#c'))))OR(((('0.47294049868626153', 0.6011660905225266, 0.555252250120271))=((NULL, NULL, 685019209))))))OR((0.049337118792078916 IN ('')))))AND((((NULL)) NOT BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(SUM(((((t0.c34)OR(t0.c34)))OR(t0.c0)))) FROM t0;SELECT ((((((t0.c60))<=((t0.c60))), (t0.c34 IN (t0.c60)), ((t0.c34)>(t0.c34))))<(((((t0.c60, t0.c34, t0.c34)) BETWEEN ((t0.c34, t0.c60, t0.c0)) AND ((t0.c0, t0.c34, t0.c34))), NULLIF(DISTINCT t0.c60, t0.c34), UNLIKELY(DISTINCT t0.c0)))), LEAD(((((((t0.c0) BETWEEN (t0.c0) AND (t0.c0)))OR(((t0.c60) BETWEEN (t0.c0) AND (t0.c60)))))AND(((x'') NOT NULL))), 0x29cb8de9, CASE ((t0.c0)OR(t0.c60))  WHEN (t0.c60 IN ()) THEN t0.c0 COLLATE BINARY WHEN ((t0.c0) BETWEEN (t0.c0) AND (NULL)) THEN TOTAL_CHANGES() WHEN t0.c60 THEN ((t0.c0)>(t0.c0)) ELSE ((t0.c60) NOT NULL) END) OVER (), CAST((('-622375522') BETWEEN (t0.c0) AND (t0.c34)) AS REAL) FROM t0 WHERE ((+ (0xffffffffe33ad053 COLLATE RTRIM))) LIMIT -247955249; -- 1ms;
SELECT LEAD((((t0.c0)GLOB(t0.c0)) IN ()), CASE WHEN CASE WHEN x'' THEN -1106854471 ELSE t0.c0 END THEN t0.c0 COLLATE RTRIM END, t0.c60) OVER ( ORDER BY json_remove(UPPER(DISTINCT t0.c60), CHAR(t0.c60)) ASC  NULLS LAST), LENGTH(t0.c60), CASE ((t0.c60)>>(t0.c34))  WHEN 0.8287008475215755 THEN t0.c0 END FROM t0;SELECT ALL 0.5009459227910998 FROM t0; -- 0ms;
SELECT DISTINCT ((((CAST(t0.c0 AS NUMERIC))AND(TOTAL(0.4005432563120759))))AND(CAST(t0.c34 AS TEXT))) FROM t0; -- 0ms;
SELECT ALL CAST((NULL IN (t0.c60, x'')) AS REAL) FROM t0 ORDER BY CAST(((t0.c0)>(0.5826935994936097)) AS BLOB) ASC, (~ ((~ (t0.c60)))); -- 0ms;
SELECT ALL CASE t0.c0 COLLATE RTRIM  WHEN AVG(0X4bdf241b) THEN (+ (t0.c0)) END FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0) BETWEEN (t0.c60) AND (t0.c60)))==((+ (t0.c34)))), ((((t0.c60)&(t0.c0)))AND(t0.c0)), (((t0.c60))<(((~ ('-121387001'))))) FROM t0; -- 0ms;
SELECT ALL (~ ((((t0.c0, t0.c0, '813749674')) BETWEEN ((t0.c0, t0.c0, t0.c0)) AND (('', t0.c60, t0.c60))))) FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT (NOT (t0.c34 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*), CAST(((t0.c60)AND(t0.c60)) AS REAL), t0.c60, (((t0.c0 IN (t0.c34)))&(t0.c34 COLLATE RTRIM)), (((t0.c0)) NOT BETWEEN (('1000803301')) AND ((((((t0.c34)OR(t0.c0)))AND(t0.c34))))) FROM t0 WHERE (0.4548835409531635); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((- (t0.c34))) OVER () FROM t0 WHERE (((+ (NULL)) IN ())) GROUP BY LIKELIHOOD(DISTINCT TIME(t0.c34, t0.c60, x'', '	(', t0.c60), 0.6454855310338327) HAVING ((t0.c0)<(t0.c60)) COLLATE NOCASE COLLATE RTRIM LIMIT -319727450 OFFSET -944124256; -- 0ms;
SELECT HEX(t0.c0), CAST((((t0.c0)) BETWEEN ((t0.c0)) AND ((t0.c34))) AS BLOB), CASE SUM(t0.c60)  WHEN ('+Q?0' IN (t0.c60)) THEN COUNT(t0.c34) ELSE TOTAL(t0.c34) END FROM t0 WHERE ((- ((+ (x''))))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0 WHERE (((CASE WHEN NULL THEN '0.6182785744623207' END) NOTNULL)) ORDER BY CASE WHEN ((((t0.c0)OR(t0.c34)))AND(t0.c60)) THEN ((t0.c0) ISNULL) WHEN t0.c60 THEN (t0.c0 IN ()) WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c34))) THEN ((t0.c60)|(t0.c0)) END ASC  NULLS LAST; -- 0ms;
SELECT SUM(((((t0.c34)AND(t0.c0)))AND(t0.c34))) OVER () FROM t0 WHERE ((~ (x''))); -- 1ms;
SELECT DISTINCT ((((- (t0.c34))))!=((t0.c60))), (t0.c34 COLLATE NOCASE IN ()), (+ (t0.c0)) COLLATE RTRIM FROM t0 WHERE ((NOT ((((x'')) BETWEEN ((x'')) AND (('844688742')))))); -- 0ms;
SELECT DISTINCT ((json_object(t0.c0, t0.c0))!=(((t0.c0)-('%c')))) FROM t0 WHERE (x''); -- 0ms;
SELECT ALL HEX(t0.c60) COLLATE BINARY FROM t0 WHERE (((((((x'')AND(x'39b4')))OR('eHwa!|'))) BETWEEN ('+\n') AND (((-507409511)>>(0X28a247ca))))); -- 0ms;
SELECT ALL CAST(((t0.c0)<<(t0.c0)) AS INTEGER) FROM t0 WHERE ('E-9k''[_ ') ORDER BY ((t0.c0 COLLATE NOCASE) NOT NULL) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (+ (((t0.c0) BETWEEN (t0.c34) AND (t0.c34)))) FROM t0 WHERE ((+ ((('-530511612') NOT NULL)))); -- 0ms;
SELECT ALL ((0.1192187748766832)>>((- (t0.c0)))) FROM t0 WHERE (CAST('' COLLATE NOCASE AS NUMERIC)); -- 0ms;
SELECT DISTINCT MIN(IFNULL('lg', t0.c60), (x'' IN ()), (NOT (t0.c0)), (+ (t0.c34))) FROM t0 WHERE ((((((((((0.5073655191037009 IN ()))OR(CAST('' AS TEXT))))OR((('CS')||('Ba䶞H')))))AND(x'')))AND(json_remove('n', 0.7319611054003441)))); -- 0ms;
SELECT CAST(((t0.c34)-(0.21469154068509722)) AS TEXT) FROM t0 WHERE (CASE WHEN (x'' IN (x'')) THEN CAST(NULL AS INTEGER) WHEN '1751021579' COLLATE BINARY THEN 0.5081356929668956 COLLATE BINARY WHEN ('-615928180' IN ('2#')) THEN ((x'') ISNULL) ELSE (((('')OR(NULL)))OR('-522673336')) END); -- 0ms;
SELECT DISTINCT SUM((t0.c0 IN ())) OVER () FROM t0 WHERE ((LIKELIHOOD(x'', 0.47905312324043037) IN ())); -- 0ms;
SELECT DISTINCT (((- (t0.c60))) IS FALSE) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((((CAST(t0.c34 AS TEXT))OR(CAST(t0.c60 AS REAL))))OR(CAST(t0.c34 AS TEXT))))OR(((t0.c60)*(t0.c60)))))OR(CAST(t0.c60 AS REAL))))OR(((((t0.c60)AND(t0.c60)))OR(t0.c60)))))AND(((((t0.c60)OR(t0.c60)))AND(t0.c34)))) FROM t0 WHERE (0.2367383335289418 COLLATE NOCASE); -- 0ms;
SELECT DISTINCT t0.c0, (((t0.c60)) BETWEEN (((NOT (t0.c34)))) AND ((0.4681288942155618 COLLATE BINARY))), ((t0.c60)||(CAST(t0.c0 AS INTEGER))) FROM t0 WHERE (((((NULL)!=(0.22473312710473115))) IS TRUE)); -- 0ms;
SELECT ((NULL)!=((t0.c0 IN ()))) FROM t0 WHERE ((NOT ((((('g糏P뛩!#ro')OR('wn,t_DZ,')))OR(0.5997412658192035))))) ORDER BY (+ (((0.2245899243206153) BETWEEN (t0.c60) AND (x''))))  NULLS LAST; -- 0ms;
SELECT (((t0.c34)%(t0.c0)) IN ()) FROM t0 WHERE (json(CAST(NULL AS INTEGER))); -- 0ms;
SELECT ALL ((t0.c0 COLLATE NOCASE)||(((0x3d03ec62)-(t0.c0)))), (((SUM(t0.c0)))=(((t0.c34 IN ())))), CASE ((t0.c60) ISNULL)  WHEN LIKELIHOOD(DISTINCT '0.3803362470604543', 0.829774826729226) THEN (t0.c0 IN ()) WHEN ((t0.c34) BETWEEN (t0.c60) AND (t0.c34)) THEN ((((t0.c34)AND('')))AND(t0.c60)) WHEN CAST(t0.c60 AS REAL) THEN ((t0.c0) IS FALSE) WHEN CASE WHEN t0.c0 THEN t0.c0 END THEN NULL WHEN ((t0.c34) BETWEEN (t0.c60) AND (NULL)) THEN ((((t0.c34)AND(t0.c34)))AND(t0.c34)) ELSE CAST(t0.c0 AS BLOB) END FROM t0 WHERE ((- (NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE WHEN (~ (t0.c34)) THEN ((t0.c0)&(t0.c34)) ELSE ((t0.c0)/(t0.c60)) END, CASE WHEN (((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c34))) THEN ((t0.c0) BETWEEN (t0.c34) AND (t0.c60)) ELSE CASE t0.c34  WHEN t0.c34 THEN t0.c0 ELSE NULL END END, (((t0.c34, 0X4774c587, t0.c60)) NOT BETWEEN (((~ (t0.c0)), t0.c34 COLLATE BINARY, ((t0.c60)+(t0.c34)))) AND ((t0.c60, t0.c0 COLLATE NOCASE, ((0xffffffffcf22b15a) NOT BETWEEN (t0.c0) AND (t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 FROM t0 WHERE (((((x'' COLLATE BINARY)AND(((0.8287008475215755) BETWEEN (NULL) AND (NULL)))))OR(CASE WHEN 0.7074902622933172 THEN 0.17750224087828115 WHEN 0x75b9d6e5 THEN '' WHEN NULL THEN '94463499' ELSE 0Xffffffffbe06bdb9 END))); -- 0ms;
SELECT DISTINCT (- (CASE WHEN t0.c34 THEN t0.c60 WHEN t0.c34 THEN t0.c34 WHEN t0.c60 THEN t0.c0 END)) FROM t0 GROUP BY (~ (t0.c0)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT ((((((((((t0.c34)AND(t0.c60)))OR(t0.c60)))AND(t0.c0)))AND(t0.c0)))IS NOT(MAX(t0.c34))) FROM t0 WHERE (((((('>y' IN ()))OR(((x'')<(x'')))))OR(CASE WHEN 8.22885048E8 THEN NULL END))); -- 0ms;
SELECT DISTINCT (((((((((((t0.c34)OR(t0.c60)))AND(t0.c0)))OR(t0.c0)))OR(t0.c34))))=((((t0.c34)IS NOT(t0.c0))))), t0.c34, t0.c0 FROM t0 WHERE (CAST(NULL COLLATE RTRIM AS TEXT)) ORDER BY CAST(t0.c0 COLLATE BINARY AS REAL); -- 0ms;
SELECT DISTINCT t0.c34, ((CASE WHEN t0.c0 THEN t0.c34 WHEN t0.c34 THEN NULL WHEN t0.c60 THEN t0.c34 END) ISNULL), CASE t0.c34  WHEN t0.c60 THEN 7.01205993E8 END COLLATE RTRIM FROM t0 WHERE (((('')) NOT BETWEEN ((((0.2943076694388599)*(NULL)))) AND ((STRFTIME(x'', NULL, 0xd282a2e))))); -- 0ms;
SELECT (((((((((((((t0.c34 IN ()))OR(CAST(t0.c0 AS INTEGER))))OR(CAST(t0.c34 AS BLOB))))OR(UPPER(DISTINCT t0.c0))))OR((+ (t0.c60)))))AND(INSTR(t0.c34, x''))))AND(SUM(t0.c34))) FROM t0; -- 0ms;
SELECT DISTINCT CASE (- (t0.c60))  WHEN t0.c60 COLLATE BINARY THEN (((t0.c34)) BETWEEN (('-993235121')) AND ((t0.c34))) END FROM t0; -- 0ms;
SELECT ((((t0.c60)OR(t0.c34))) NOT NULL), MAX(((t0.c34) IS FALSE)), NTH_VALUE(CASE WHEN CAST(x'' AS NUMERIC) THEN ((t0.c34)==(t0.c60)) ELSE ((t0.c60) NOTNULL) END, x'8b00') OVER () FROM t0 GROUP BY ((LIKELY(t0.c0))==(CASE 'Wqc*졞U'  WHEN t0.c0 THEN t0.c0 ELSE t0.c34 END));SELECT (((t0.c60) IS FALSE) IN ()) FROM t0 ORDER BY TIME(t0.c60, (t0.c0 IN ()), (((t0.c60))>((t0.c60)))) ASC, ((((((((((((((((t0.c60)AND(t0.c34)))AND(t0.c34)))OR(((t0.c34) BETWEEN (t0.c60) AND (t0.c60)))))AND(((t0.c34) NOT BETWEEN (t0.c0) AND (t0.c60)))))AND((((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c60))))))OR(((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c34)))))AND(x'')))AND(t0.c0 COLLATE BINARY)) DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((t0.c34 COLLATE BINARY) NOT BETWEEN (((((((((t0.c0)OR(t0.c60)))OR(t0.c34)))OR('#J')))AND(t0.c60))) AND (CASE t0.c60  WHEN t0.c0 THEN t0.c34 ELSE t0.c60 END)), CASE WHEN (t0.c0 IN ()) THEN (t0.c34 IN ()) WHEN (~ (t0.c0)) THEN t0.c34 WHEN ((((t0.c0)OR(t0.c34)))AND(t0.c60)) THEN (((t0.c0, t0.c0, NULL, t0.c34, t0.c60)) BETWEEN ((t0.c0, t0.c60, NULL, NULL, t0.c0)) AND ((t0.c34, t0.c0, t0.c0, t0.c60, t0.c60))) ELSE ((t0.c60)>>(t0.c34)) END, x'' FROM t0; -- 0ms;
SELECT ALL SUM(((t0.c0)>(t0.c34))) FROM t0 GROUP BY CAST((('1000803301')<>(t0.c0)) AS BLOB) HAVING ((t0.c0)GLOB(t0.c60)) COLLATE NOCASE; -- 0ms;
SELECT ALL (((t0.c60) NOTNULL) IN ()) FROM t0 WHERE (IFNULL(DISTINCT x'', COALESCE('P8', 0.49392158059309854, '', 0.3852359633061144, NULL, x''))); -- 0ms;
SELECT DISTINCT (((~ (t0.c0))) ISNULL) FROM t0 WHERE (((((0.30604947508531644)&(NULL))) NOTNULL)); -- 0ms;
SELECT (((t0.c34 IN (t0.c0))) BETWEEN (((((((((t0.c60)AND(t0.c34)))AND(t0.c0)))OR(t0.c0)))AND(t0.c0))) AND (((t0.c60) NOTNULL))) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((((((((t0.c0)AND(t0.c60)))AND(t0.c60)))AND(t0.c34)))OR(t0.c0)) AS TEXT) FROM t0 WHERE (CAST(((((((((0.2625389215242877)AND(x'')))AND(0.37730238171399666)))OR('(Z')))AND(-2069191239)) AS NUMERIC)); -- 0ms;
SELECT ALL SUM(CASE WHEN t0.c60 THEN t0.c34 ELSE t0.c60 END) FROM t0; -- 0ms;
SELECT ALL 'x*' FROM t0; -- 0ms;
SELECT DISTINCT LEAD(t0.c0, (((- (t0.c0))) NOT BETWEEN ((x'8fdc' IN ())) AND (((((t0.c60)OR('〘')))OR(t0.c0)))), (((x'') NOT BETWEEN (t0.c0) AND (t0.c0)) IN ())) OVER (), (((t0.c34)) NOT BETWEEN (((t0.c0 IN ()))) AND ((((t0.c34)*(t0.c60))))), CAST(CASE t0.c34  WHEN t0.c34 THEN t0.c60 WHEN t0.c34 THEN NULL WHEN NULL THEN t0.c34 ELSE t0.c34 END AS TEXT) FROM t0 WHERE (NULLIF((x'' IN ()), '1141853372' COLLATE NOCASE)); -- 0ms;
SELECT DISTINCT CAST(((t0.c0) IS TRUE) AS BLOB) FROM t0 WHERE ((CAST(x'' AS REAL) IN ())) ORDER BY (~ (SQLITE_VERSION()))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c34)) BETWEEN (TOTAL(t0.c34)) AND (((((t0.c60)OR(t0.c34)))AND(t0.c0)))), CASE t0.c60  WHEN t0.c0 THEN t0.c0 WHEN t0.c60 THEN x'' WHEN t0.c34 THEN x'' END COLLATE BINARY, NULLIF(DISTINCT TOTAL(t0.c0), COUNT(t0.c60)) FROM t0 WHERE (((((((x'') NOT NULL))AND(((x'') NOT BETWEEN (0.651175820431075) AND (NULL)))))AND(CASE x'5b43'  WHEN 0.1966656123967112 THEN x'' WHEN NULL THEN 0.7606774553323736 WHEN 'R.ऄ^)G' THEN NULL END))) ORDER BY ((t0.c60 COLLATE RTRIM)IS(((t0.c60) ISNULL))) DESC  NULLS FIRST LIMIT -1944975396 OFFSET 80906391; -- 0ms;
SELECT CASE 0.2086121378926673  WHEN CASE WHEN t0.c34 THEN t0.c0 END THEN ((t0.c0) BETWEEN (t0.c60) AND (t0.c60)) END FROM t0; -- 0ms;
SELECT DISTINCT (- (t0.c60 COLLATE BINARY)) FROM t0 GROUP BY NULL; -- 0ms;
SELECT DISTINCT (+ (0.6686920173766228)), COUNT(*) OVER ( ROWS ((((t0.c60)>(t0.c60))) NOT BETWEEN (((t0.c34) IS TRUE)) AND (((t0.c0) BETWEEN (t0.c34) AND (t0.c60)))) PRECEDING EXCLUDE GROUP), ((-1.849572802E9)OR(((((0.7385236358198133)OR(t0.c60)))OR(t0.c0)))) FROM t0;SELECT ALL (((((t0.c0) BETWEEN (t0.c60) AND (t0.c60)), t0.c0 COLLATE BINARY, t0.c34))>=((((((((((t0.c0)AND(t0.c34)))OR(0.9878602496771688)))AND('2025548455')))AND(t0.c60)), ((t0.c60)>=(t0.c34)), ((x'b107') IS FALSE)))), DENSE_RANK() OVER (), PERCENT_RANK() OVER () FROM t0 WHERE ((((0xffffffff9be606c9 IN ()))<>((~ ('-622375522'))))); -- 0ms;
SELECT ALL SUM(x'') OVER () FROM t0 WHERE ((((((+ (NULL)))OR((('U䉇/xC')*(x'eefd')))))OR((+ (x''))))); -- 0ms;
SELECT ((t0.c0 COLLATE RTRIM)IS(((x'') IS FALSE))), ((((((((t0.c0)OR(t0.c60)))OR(t0.c34)))OR(t0.c0)))AND(t0.c0)) COLLATE RTRIM, CAST(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c34)) AS REAL) FROM t0 WHERE (json_extract((- (NULL)), (((NULL)) NOT BETWEEN ((NULL)) AND ((131524563))))); -- 0ms;
SELECT DISTINCT ((NOT (t0.c0)) IN ()) FROM t0 LIMIT -152791219; -- 0ms;
SELECT CASE SUM(x'ae55')  WHEN t0.c60 THEN ((('-640517753')) NOT BETWEEN ((t0.c60)) AND ((t0.c0))) ELSE (+ (t0.c34)) END FROM t0 WHERE (((json_quote(-4.61109651E8))<((('({') NOT BETWEEN (-616604494) AND (NULL))))); -- 1ms;
SELECT (NOT (t0.c0 COLLATE BINARY)) FROM t0 WHERE ((CASE WHEN x'' THEN 0.23585535210177355 ELSE '턑]Q' END IN ())) GROUP BY (+ (t0.c34)) COLLATE BINARY HAVING ((((t0.c60)OR((- (t0.c0)))))AND((t0.c0 IN ()))); -- 0ms;
SELECT DISTINCT ((((t0.c60)/(t0.c0))) NOT BETWEEN (((t0.c60)GLOB(t0.c34))) AND (((t0.c0)<<(t0.c60)))) FROM t0 WHERE (((((((((((-1929060159) IS TRUE))AND(-522673336 COLLATE BINARY)))AND(CAST('685019209' AS TEXT))))OR((NOT (0x3404f780)))))OR((((x'', NULL, x'', -1.106854471E9, x''))>(('bEC', -1731812669, NULL, NULL, NULL)))))) GROUP BY ((((t0.c34)AND((t0.c60 IN (t0.c60, t0.c34)))))AND(CAST(t0.c0 AS REAL))), t0.c0, (((-1764249104) NOT BETWEEN (t0.c34) AND (t0.c34)) IN ()) HAVING (((TOTAL(t0.c34)))>=((((t0.c60)IS(t0.c0))))) ORDER BY '' COLLATE BINARY ASC  NULLS LAST; -- 0ms;
SELECT AVG(((t0.c0) NOT NULL)) OVER () FROM t0 WHERE (((JULIANDAY(x'03c39287', x'', '47123673')) NOT BETWEEN (NULL) AND (CAST(x'cc25' AS REAL)))); -- 0ms;
SELECT ((t0.c60 COLLATE NOCASE)<>(((((t0.c60)OR(t0.c34)))AND(x'')))), (((t0.c0, t0.c0, t0.c60, t0.c0, t0.c60)) NOT BETWEEN ((t0.c0, ABS(t0.c0), ((t0.c60) IS TRUE), ((((t0.c0)AND('-1350784888')))AND(t0.c34)), t0.c60 COLLATE RTRIM)) AND ((((t0.c0)AND(t0.c34)), (((t0.c60))>=((t0.c60))), t0.c34, t0.c60, (t0.c0 IN ())))), CASE WHEN TRIM(DISTINCT t0.c34) THEN t0.c34 COLLATE RTRIM END FROM t0 GROUP BY t0.c60, CASE WHEN ((t0.c34)|(t0.c60)) THEN ((t0.c60)IS NOT(t0.c0)) ELSE CAST('-1341575150' AS NUMERIC) END, ((((((((MAX(t0.c34, '902611064'))OR(((t0.c34) IS TRUE))))OR(((t0.c0) BETWEEN (0.20159797569803306) AND (t0.c60)))))OR((+ (t0.c0)))))OR(((((((((t0.c0)AND(t0.c0)))OR('265245463')))OR(t0.c34)))AND(t0.c0)))); -- 0ms;
SELECT DISTINCT CAST(((((t0.c0)OR(t0.c60)))AND(t0.c0)) AS INTEGER) FROM t0 WHERE (CAST(NULL AS BLOB)); -- 0ms;
SELECT LENGTH(UPPER(t0.c34)) FROM t0; -- 0ms;
SELECT DISTINCT ((CASE '-793087413'  WHEN NULL THEN t0.c0 ELSE t0.c60 END) BETWEEN ((- (t0.c60))) AND (t0.c60)) FROM t0; -- 0ms;
SELECT DISTINCT (~ (((t0.c34)|(-2059872971)))), (LIKE(t0.c34, t0.c0) IN ()), t0.c60 FROM t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT 0Xfffffffffd009d47 FROM t0 WHERE (((x'') IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT ((((t0.c34)<(t0.c34))) BETWEEN (t0.c60) AND (COUNT(x'964a8e2f'))) FROM t0 WHERE (((((0.2886840838571274)||(x''))) ISNULL)) ORDER BY (LOWER(DISTINCT ']S') IN ())  NULLS FIRST; -- 0ms;
SELECT COALESCE(t0.c0, CASE WHEN t0.c34 THEN t0.c0 END) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c34 IN ())) NOT BETWEEN (CASE t0.c60  WHEN t0.c60 THEN t0.c0 WHEN t0.c34 THEN t0.c60 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c60 THEN t0.c60 END) AND (((t0.c60) IS FALSE))) FROM t0 WHERE ((((0.14470569549783563 IN (0.09865358737814289, x'98ee'))) IS TRUE)); -- 0ms;
SELECT STRFTIME(CASE WHEN t0.c34 THEN t0.c34 WHEN t0.c34 THEN t0.c60 WHEN t0.c34 THEN t0.c0 END, '-2076801265', t0.c34) FROM t0 WHERE (CAST(x'' AS TEXT)) LIMIT -2076801265; -- 0ms;
SELECT DISTINCT AVG(CAST(t0.c0 AS TEXT)), SUM((NOT (t0.c0))) OVER ( ORDER BY ((((((((((t0.c60) NOTNULL))AND((((t0.c60, t0.c34, t0.c0)) BETWEEN ((t0.c34, t0.c34, t0.c34)) AND ((t0.c34, t0.c0, t0.c0))))))OR(',P')))OR(HEX(t0.c60))))AND(t0.c34))  NULLS LAST RANGE  CURRENT ROW), GROUP_CONCAT('972959838') OVER () FROM t0 WHERE (((NULL IN ('')) IN ())) LIMIT 1415552502; -- 0ms;
SELECT ALL CASE WHEN (((''))<=((t0.c34))) THEN (x'68b5' IN ('-112539372', NULL)) WHEN t0.c0 THEN 1530814539 WHEN CASE t0.c0  WHEN '0.23585535210177355' THEN t0.c60 END THEN NULL COLLATE RTRIM END, (((MAX(t0.c34)))=((json_object(t0.c60, t0.c34, t0.c0, x'')))), (((('5OND')OR(t0.c0 COLLATE RTRIM)))OR(CASE WHEN t0.c60 THEN t0.c34 ELSE t0.c60 END)) FROM t0 WHERE ((+ (DATE(x'05a4', '993707068', '1054801847'))));SELECT (- ((((t0.c60, t0.c34, t0.c60))!=((t0.c60, t0.c34, t0.c60))))) FROM t0 WHERE ((((('-507409511')<>(x''))) NOT NULL)); -- 0ms;
SELECT DISTINCT ((t0.c34)>>(NULL)) FROM t0 LIMIT 1980815311 OFFSET -1325039723; -- 0ms;
SELECT CASE WHEN (((t0.c0))!=((t0.c60))) THEN x'10e2' ELSE ((t0.c0) BETWEEN (t0.c0) AND (t0.c60)) END FROM t0 INDEXED BY i58 GROUP BY ((0xffffffffb409ae07)IS NOT(t0.c34 COLLATE BINARY)); -- 0ms;
SELECT ((LIKELIHOOD(DISTINCT t0.c60, 0.4574922119643312))LIKE('')), NULL, (t0.c60 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT (~ ((((x'', NULL, t0.c0))==((t0.c60, t0.c0, t0.c0))))), ((t0.c0 COLLATE NOCASE) NOT BETWEEN ((- (t0.c0))) AND (((x'')/(t0.c34)))), ((('c%l0+' COLLATE NOCASE))<((((t0.c60)||(t0.c0))))), COUNT(NULL), COUNT(*) FROM t0; -- 0ms;
SELECT ALL ((((t0.c60)>>(t0.c60))) NOT NULL), TRIM(DISTINCT (NOT (t0.c0)), (((t0.c60, t0.c0, t0.c34))!=((t0.c34, t0.c0, t0.c60)))), (((((t0.c34))>=((x''))))||(CAST(t0.c0 AS BLOB))) FROM t0 WHERE ((- (0.28514139996828514))) GROUP BY CASE WHEN t0.c0 THEN t0.c60 WHEN '2073938958' THEN t0.c34 WHEN t0.c60 THEN t0.c0 END COLLATE BINARY LIMIT 1790432302 OFFSET -1944975396; -- 0ms;
SELECT ((CASE t0.c0  WHEN t0.c34 THEN t0.c34 WHEN t0.c34 THEN t0.c60 WHEN t0.c34 THEN t0.c60 END) NOT BETWEEN (x'') AND (NULL)) FROM t0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT DISTINCT ('-839141655' IN ()) FROM t0 WHERE ((NOT (((NULL) NOT BETWEEN (-2.063966514E9) AND (''))))) LIMIT -508064370 OFFSET -132010441 INTERSECT SELECT DISTINCT CAST((t0.c34 IN ()) AS INTEGER) FROM t0 ORDER BY (((+ (t0.c0))) BETWEEN ((t0.c0 IN ())) AND (((t0.c60)<(t0.c34))));SELECT DISTINCT ((((t0.c34)&(t0.c0))) NOT NULL) FROM t0; -- 0ms;
SELECT ALL (((t0.c34)) NOT BETWEEN ((((0.049337118792078916)&(t0.c60)))) AND ((((((t0.c34)OR(t0.c0)))AND(t0.c34))))), (('0.32500664262216405') ISNULL), AVG(t0.c34) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(0.47760936479516825) FROM t0 WHERE (((((NULL)IS NOT(x'')))>(((1.097753374E9)&(x'19ef'))))); -- 0ms;
SELECT DISTINCT '-9223372036854775808' FROM t0 WHERE ((- (x'' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((((CAST(t0.c60 AS BLOB))AND(t0.c34)))AND(((t0.c34)<=(t0.c60)))))OR((((t0.c60, t0.c0, t0.c34, t0.c34, t0.c0)) NOT BETWEEN ((t0.c0, t0.c34, t0.c34, t0.c34, t0.c34)) AND ((t0.c34, t0.c0, t0.c34, t0.c60, t0.c34))))))OR(CASE WHEN t0.c34 THEN 'S㦋)' ELSE t0.c60 END)) FROM t0; -- 0ms;
SELECT ALL ((((((((t0.c60)AND(t0.c60)))OR(NULL)))OR(((t0.c34)+('48465451')))))AND(CAST(t0.c60 AS TEXT))) FROM t0; -- 0ms;
SELECT DISTINCT ((TOTAL(-1.944975396E9))<(NULL COLLATE BINARY)) FROM t0; -- 0ms;
SELECT DISTINCT t0.c34, ((((x'6065')|(t0.c34))) ISNULL), GROUP_CONCAT((- (t0.c0))), COALESCE(CAST(t0.c60 AS NUMERIC), CAST(t0.c34 AS INTEGER), t0.c34, t0.c60), COUNT((t0.c60 IN ())) FROM t0; -- 0ms;
SELECT ALL t0.c34, CASE (((t0.c60, t0.c60, t0.c0)) BETWEEN ((0, t0.c60, t0.c0)) AND ((t0.c0, t0.c0, t0.c60)))  WHEN ((t0.c0)<=(t0.c34)) THEN (- (t0.c0)) ELSE (NOT (t0.c60)) END, CAST(((t0.c60)=(t0.c0)) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT UPPER(((t0.c34)/(t0.c34))) FROM t0 GROUP BY ((((((t0.c34) IS FALSE))OR(((t0.c0) NOTNULL))))OR('')), (((t0.c34 IN ())) NOT BETWEEN ((((t0.c0, t0.c34, t0.c0)) NOT BETWEEN ((t0.c60, t0.c34, t0.c34)) AND ((t0.c34, t0.c60, 1000803301)))) AND ((t0.c0 IN ()))), TRIM(((((t0.c34)OR(t0.c34)))OR(t0.c34))); -- 1ms;
SELECT x'' FROM t0 WHERE ((+ (NULL)) COLLATE BINARY COLLATE BINARY); -- 0ms;
SELECT ALL (((((t0.c34)) NOT BETWEEN ((t0.c0)) AND ((t0.c34)))) NOT NULL) FROM t0; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c0)) BETWEEN (t0.c60) AND (t0.c60 COLLATE RTRIM)), t0.c0, ((((((((((t0.c34)|(t0.c34)))OR((((t0.c0, t0.c0, t0.c34))<((t0.c0, t0.c60, t0.c60))))))AND(((((t0.c60)AND(t0.c0)))AND(t0.c0)))))OR(CAST(t0.c60 AS NUMERIC))))AND((NOT (t0.c60)))), ((t0.c34)OR((((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c34))))), COUNT((((t0.c34))<=((t0.c34)))) OVER () FROM t0 WHERE (((IFNULL('f/)]q+0R', x'e56b')) IS FALSE)); -- 0ms;
SELECT DISTINCT ((t0.c60) BETWEEN (CAST(t0.c34 AS INTEGER)) AND (((t0.c34) NOT BETWEEN (t0.c60) AND (t0.c0)))) FROM t0 ORDER BY (NOT (CAST(t0.c60 AS REAL))); -- 0ms;
SELECT DISTINCT ((((((t0.c60)==(t0.c0)))AND(((((t0.c34)OR(t0.c60)))AND(t0.c34)))))AND(((t0.c60) BETWEEN (t0.c34) AND (t0.c60)))), (((t0.c34)) BETWEEN ((((((t0.c60)OR(0.5736051685961492)))AND(t0.c0)))) AND ((((((((((((((t0.c0)AND(t0.c0)))OR(t0.c34)))AND(t0.c34)))AND(t0.c34)))AND(t0.c60)))OR(t0.c60))))), COALESCE(DISTINCT (((t0.c0))>=((t0.c60))), t0.c60) FROM t0; -- 0ms;
SELECT (CASE WHEN t0.c0 THEN NULL ELSE t0.c60 END IN ()) FROM t0 WHERE (((DATETIME(x'', x'', NULL)) IS FALSE)); -- 0ms;
SELECT DISTINCT (+ (CASE t0.c34  WHEN t0.c0 THEN t0.c34 END)) FROM t0 WHERE (CHAR(CAST(NULL AS BLOB))); -- 0ms;
SELECT ALL CASE (((t0.c0, t0.c60, t0.c34, t0.c60, t0.c0))>((t0.c60, t0.c0, t0.c0, t0.c34, t0.c0)))  WHEN (((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((t0.c60))) THEN NULL WHEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c60)) THEN (~ (t0.c0)) WHEN t0.c0 THEN ((t0.c0) NOT BETWEEN (t0.c60) AND (NULL)) END FROM t0 GROUP BY CASE WHEN t0.c34 THEN t0.c60 ELSE t0.c60 END COLLATE NOCASE, (((t0.c0)) NOT BETWEEN ((CASE WHEN t0.c34 THEN t0.c60 ELSE t0.c0 END)) AND ((t0.c60))), 0.09428002132126323; -- 0ms;
SELECT ALL CAST((NOT (t0.c0)) AS INTEGER), FIRST_VALUE(((CASE t0.c0  WHEN t0.c34 THEN t0.c34 WHEN x'' THEN t0.c34 WHEN t0.c34 THEN t0.c0 ELSE t0.c34 END)AND(((((((((t0.c34)OR(0.6215425361622462)))AND(t0.c0)))AND(t0.c34)))OR(0X6be45830))))) OVER (), CASE WHEN ('-1106854471' IN (t0.c60, t0.c34)) THEN (NULL IN ()) WHEN ((t0.c34)|('216295133')) THEN (t0.c34 IN ()) WHEN TOTAL(t0.c34) THEN DATE(NULL, t0.c60, 0.015009107260229193) WHEN NULL THEN CAST(t0.c0 AS NUMERIC) WHEN t0.c60 COLLATE RTRIM THEN (NOT (t0.c0)) END FROM t0 WHERE (''); -- 0ms;
SELECT DISTINCT ((((((((t0.c60)OR(t0.c34)))AND(t0.c34)))AND(CASE t0.c0  WHEN t0.c34 THEN t0.c34 END)))OR(SQLITE_SOURCE_ID())), COUNT(*), (+ ((((t0.c60)) BETWEEN ((t0.c60)) AND ((t0.c34))))) FROM t0 UNION ALL SELECT t0.c60, ((((((t0.c0) NOT NULL))OR(CASE t0.c34  WHEN t0.c0 THEN t0.c34 ELSE t0.c60 END)))OR(CAST(t0.c60 AS BLOB))), (0.7628198907850045 IN ()) FROM t0 WHERE ((- (NULL COLLATE BINARY))); -- 0ms;
SELECT COUNT((((t0.c60))>((t0.c34)))) FROM t0 WHERE (((x'')OR(-1.832170662E9)) COLLATE BINARY) GROUP BY ((((((((t0.c0)AND(t0.c60)))OR(t0.c34)))OR(t0.c34)))AND(t0.c34)) COLLATE NOCASE HAVING ((t0.c60) NOT BETWEEN (((t0.c60) IS FALSE)) AND ((('1614995003') NOTNULL))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t0.c34))OR(AVG(t0.c34))), 8.72740736E8, (('1330843467' COLLATE NOCASE) ISNULL), IFNULL(DISTINCT t0.c0, t0.c34 COLLATE RTRIM), LIKELIHOOD(DISTINCT (t0.c34 IN ()), 0.79043551860137) FROM t0 WHERE (((('-9223372036854775808' IN ()))||(0.7268292583969392 COLLATE NOCASE))) ORDER BY (- (t0.c0)) COLLATE NOCASE ASC  NULLS FIRST LIMIT 746210540 OFFSET -1248730573; -- 0ms;
SELECT DISTINCT (- (t0.c0 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT NTH_VALUE(ABS(DISTINCT ((t0.c0)LIKE(t0.c0))), CASE WHEN t0.c34 COLLATE BINARY THEN (((t0.c60, t0.c34, t0.c34))<=((t0.c60, t0.c0, t0.c60))) END) OVER ( ORDER BY ((((CAST(t0.c34 AS BLOB))OR((t0.c60 IN ()))))OR(t0.c34)) DESC  NULLS FIRST ROWS BETWEEN ((CAST(t0.c0 AS NUMERIC))*(((t0.c60) IS TRUE))) PRECEDING AND CASE ((NULL)<<(t0.c60))  WHEN ((t0.c34)OR(-1884276673)) THEN json_array_length(t0.c34, t0.c34) END PRECEDING EXCLUDE GROUP) FROM t0;SELECT ALL ((LIKELY(t0.c0)) BETWEEN ((((t0.c0))<((t0.c60)))) AND (((('PAfﱖB', t0.c34, t0.c0))<((t0.c34, t0.c34, t0.c34))))) FROM t0 WHERE ((- (ABS(DISTINCT NULL)))); -- 0ms;
SELECT ALL ((((t0.c34)|(t0.c34)))/(CASE WHEN t0.c60 THEN t0.c60 END)) FROM t0 NOT INDEXED WHERE (NULLIF((- ('')), NULL COLLATE NOCASE)) GROUP BY CAST(t0.c60 AS BLOB) HAVING ((t0.c60)GLOB(t0.c60)) COLLATE RTRIM; -- 0ms;
SELECT ALL COUNT(*) FROM t0; -- 0ms;
SELECT ((((t0.c0))<>((t0.c60))) IN ()), CUME_DIST() OVER (), (NOT ((NOT (t0.c34)))), COUNT(t0.c0) OVER (), ((0.7251381378716605) ISNULL) FROM t0 WHERE ((((((-9223372036854775808) IS FALSE)))!=((CASE NULL  WHEN 0.6936568164842355 THEN '' ELSE x'f857' END)))) ORDER BY (NOT ((t0.c34 IN ()))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT NULL FROM t0 LIMIT -2038118352; -- 0ms;
SELECT ((((((t0.c34)AND(t0.c0)))AND(t0.c34))) NOTNULL), (t0.c0 IN (t0.c0)) COLLATE BINARY, CAST(NULL AS REAL) FROM t0 WHERE (((((((((((((NULL)OR('-1884276673')))OR(0.6097665099345604)))AND(CAST(-1.931838232E9 AS INTEGER))))OR(x'' COLLATE NOCASE)))AND(NULL)))AND(((0.554322476025496)>(''))))); -- 0ms;
SELECT ALL (((t0.c60)) BETWEEN ((((t0.c0)/(t0.c60)))) AND ((MIN(t0.c34)))), ((t0.c60)==(CASE t0.c34  WHEN t0.c60 THEN t0.c60 END)), ((CAST(x'de16' AS REAL))>((t0.c34 IN ()))) FROM t0; -- 0ms;
SELECT ALL (((((t0.c0)AND(t0.c60)))AND(x'26e8')) IN ()), TOTAL(((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c0))), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c34 END COLLATE NOCASE FROM t0; -- 0ms;
SELECT DISTINCT (- (t0.c34 COLLATE RTRIM)) FROM t0 WHERE ((+ (x'' COLLATE NOCASE))); -- 0ms;
SELECT (((((((t0.c0)OR(t0.c34)))OR(t0.c0))))>=((CAST(t0.c60 AS INTEGER)))), CAST(CAST(t0.c60 AS BLOB) AS TEXT), t0.c34 FROM t0 WHERE (NULL) ORDER BY CAST(CAST(t0.c0 AS BLOB) AS NUMERIC) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((t0.c34 IN ()))=(IFNULL(DISTINCT t0.c60, t0.c60))), (((t0.c60)) NOT BETWEEN ((GROUP_CONCAT(t0.c60))) AND (((- (t0.c34))))), GROUP_CONCAT(((t0.c34)<(t0.c34))) FROM t0; -- 0ms;
SELECT ALL (((t0.c34) BETWEEN (t0.c0) AND (t0.c0)) IN ()) FROM t0 WHERE (((((x'02a3') IS FALSE))LIKE((((0Xffffffffae9e7ae8))<=((0.8412962644223239)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((t0.c34)AND(t0.c0)))AND(t0.c0))) OVER ( GROUPS x'' PRECEDING EXCLUDE TIES), ((((t0.c34) NOT BETWEEN (t0.c34) AND (t0.c60)))+(t0.c60)), t0.c0 FROM t0;SELECT DISTINCT ((((((((((t0.c0) BETWEEN (t0.c60) AND (t0.c0)))OR((t0.c34 IN ()))))AND(((t0.c60)OR(t0.c34)))))OR(((t0.c34)<(t0.c60)))))AND(((((((((t0.c34)OR(t0.c34)))OR(t0.c0)))OR(t0.c34)))OR(t0.c34)))) FROM t0 WHERE (((((((((((((0Xffffffffc4183328 COLLATE RTRIM)AND('249134883')))OR(((0.5670947580051965)<>(NULL)))))OR('-474008228' COLLATE RTRIM)))OR(((((x'c4b3')OR(0.8747459656920797)))OR('0.13009170256780045')))))AND(LOWER('U䉇/xC'))))AND((((('0.9940317790697987')AND(0Xffffffffe4745d8f)))AND(x''))))); -- 0ms;
SELECT DISTINCT t0.c60 FROM t0 GROUP BY ((((t0.c0) NOT BETWEEN (t0.c34) AND (t0.c60)))=(((t0.c60) NOTNULL))) HAVING ('30873555' IN ()) COLLATE NOCASE; -- 0ms;
SELECT DISTINCT CASE ((t0.c34)<(t0.c0))  WHEN ((t0.c60)<<(t0.c34)) THEN ABS(t0.c60) WHEN (NOT (']0쥂vl^/\r')) THEN ((t0.c34) NOT BETWEEN (0.02581463504933279) AND (t0.c0)) WHEN ((((t0.c60)OR(x'')))AND(t0.c0)) THEN ((t0.c34) IS TRUE) END FROM t0 WHERE (((x'')GLOB(x'')) COLLATE NOCASE); -- 0ms;
SELECT (((t0.c60)) BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((t0.c34))) FROM t0 WHERE (LOWER(CHANGES())); -- 0ms;
SELECT DISTINCT ((((((((x'')OR(((t0.c34)/(NULL)))))OR(COUNT(t0.c34))))AND((((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c34))))))AND(t0.c0 COLLATE RTRIM)) FROM t0 INDEXED BY i31 GROUP BY (((((t0.c60, t0.c0, t0.c60)) NOT BETWEEN ((t0.c0, t0.c60, t0.c60)) AND ((t0.c60, t0.c60, t0.c0)))) IS FALSE) HAVING (- (t0.c60 COLLATE BINARY)) ORDER BY ((((t0.c60) NOT NULL)) ISNULL) DESC  NULLS LAST, ((((t0.c60) IS FALSE))|(((t0.c34)+(t0.c0))))  NULLS FIRST, ((((CASE WHEN t0.c0 THEN t0.c0 END)OR(((t0.c60)-(t0.c0)))))OR(((t0.c60)IS(t0.c0))));SELECT ALL 550946910 FROM t0 WHERE (((((((((((NULL)IS(NULL)))AND(((0.32500664262216405) NOT BETWEEN (x'') AND (NULL)))))AND(LIKELIHOOD(NULL, 0.18747608189933662))))AND(CASE WHEN x'' THEN 0.8417686335285065 ELSE x'' END)))AND(0xffffffffb1057f95 COLLATE NOCASE))); -- 0ms;
SELECT ALL MIN(((t0.c0) IS FALSE)) FROM t0; -- 0ms;
SELECT (((t0.c0 IN ('1681710382')))>=((t0.c0 IN ()))) FROM t0 WHERE (((((('E'))<((x'c2b9'))))>((~ (0Xffffffffdb49ae8c))))); -- 0ms;
SELECT ((LOWER(t0.c34))GLOB(((x'') IS TRUE))) FROM t0 LIMIT -266087827 OFFSET -2029999210; -- 0ms;
SELECT DISTINCT ((((t0.c0) IS FALSE)) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c34) AND (t0.c60))) AND (t0.c0)) FROM t0 WHERE (((NOT (x'c929')) IN (('220736046' IN (-8.19809958E8))))); -- 0ms;
SELECT ALL CAST(((t0.c60)/(0.6011660905225266)) AS REAL) FROM t0; -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE (CAST(('' IN ()) AS INTEGER)); -- 0ms;
SELECT (((t0.c60)) BETWEEN (((+ (t0.c60)))) AND ((((t0.c34)<<(t0.c34))))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c34 COLLATE RTRIM COLLATE BINARY COLLATE RTRIM, ((((t0.c0)IS NOT(t0.c0)))AND((t0.c34 IN ()))), FIRST_VALUE(((((~ (t0.c34))))<(((((t0.c60)) NOT BETWEEN ((NULL)) AND ((t0.c60))))))) OVER () FROM t0 LIMIT -622789309; -- 1ms;
SELECT DISTINCT ((((((((((t0.c34)OR(t0.c0)))AND(t0.c0)))OR(t0.c0)))AND(t0.c60)))IS(UNLIKELY(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( ROWS  CURRENT ROW), ((((t0.c0)-(t0.c34)))*(((t0.c60) NOT NULL))), (((t0.c34 IN ())) NOT BETWEEN (((t0.c60)&(t0.c0))) AND (t0.c60 COLLATE NOCASE)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c34) ISNULL))AND(x'' COLLATE NOCASE)))OR((t0.c60 IN ()))))AND(CASE -1298492604  WHEN t0.c0 THEN 0.16500457863717244 END)))AND(((t0.c60) BETWEEN (t0.c0) AND (t0.c0)))), t0.c34, ((((t0.c34) NOT BETWEEN (t0.c60) AND (t0.c0))) NOT BETWEEN (((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c34))) AND (CASE NULL  WHEN t0.c34 THEN t0.c34 END)) FROM t0 WHERE (TYPEOF((NULL IN ()))) LIMIT 1128841725; -- 0ms;
SELECT DISTINCT (+ (AVG(t0.c60))) FROM t0 WHERE (QUOTE(((0xd3b60aa)<>('685019209')))); -- 0ms;
SELECT ALL COUNT((((t0.c60)) BETWEEN ((t0.c34)) AND ((t0.c34)))) OVER () FROM t0 LIMIT 1198835079 OFFSET -1705889650; -- 0ms;
SELECT DISTINCT ((CASE WHEN t0.c34 THEN NULL END) BETWEEN (t0.c34 COLLATE NOCASE) AND (COUNT(*))) FROM t0 WHERE ((((((((((('30292423') IS FALSE))AND(NULL)))AND(CAST(0Xffffffff82c05fff AS BLOB))))AND(CASE x'60a6'  WHEN NULL THEN NULL WHEN x'1f82' THEN NULL WHEN 0.1280594182530862 THEN '1536330961' ELSE '{j)8''[K6o' END)))OR('H&Q*	'))) GROUP BY (((~ (0.19278008278780168))) BETWEEN (((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c34))) AND (((t0.c0)IS(t0.c0)))) HAVING ((t0.c60 COLLATE RTRIM) BETWEEN (COUNT(t0.c0)) AND (((t0.c0) NOT BETWEEN (t0.c34) AND (t0.c34)))); -- 0ms;
SELECT DISTINCT (((((t0.c0)) NOT BETWEEN ((t0.c60)) AND ((t0.c60)))) BETWEEN (COUNT(t0.c34)) AND (t0.c60)) FROM t0 ORDER BY (((((t0.c34)>>(t0.c0))))<=(((((2.46424667E8))>((t0.c0)))))) DESC  NULLS LAST, (((((t0.c60)IS NOT(t0.c60)), COALESCE(t0.c60, t0.c60), ((t0.c34) BETWEEN (t0.c34) AND (t0.c60))))<>(((t0.c0 IN ()), CAST(t0.c60 AS NUMERIC), (((t0.c0)) BETWEEN ((t0.c60)) AND ((t0.c34)))))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((((((t0.c60)OR(t0.c0)))OR(t0.c60)))OR(t0.c34)))AND(t0.c60)))IS(((t0.c60)IS(t0.c60)))) FROM t0; -- 0ms;
SELECT ALL LIKELY(DISTINCT t0.c0 COLLATE RTRIM) FROM t0; -- 0ms;
SELECT DISTINCT CAST(SUM(t0.c60) AS REAL), TOTAL(((t0.c60)>=(t0.c60))) OVER (), ((((t0.c34) NOT BETWEEN (t0.c0) AND (t0.c60)))GLOB(((t0.c34) NOT NULL))) FROM t0 GROUP BY NULL, CAST(((t0.c60) BETWEEN (t0.c60) AND (t0.c34)) AS TEXT), (((((t0.c60) NOTNULL), (((t0.c34))>((t0.c34))), CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END))<=(((~ (t0.c0)), (((t0.c34)) NOT BETWEEN (('({')) AND ((t0.c60))), TRIM(t0.c0, NULL)))) HAVING (t0.c0 IN ()) ORDER BY (- ((('Ba䶞H') NOTNULL)))  NULLS LAST; -- 0ms;
SELECT DISTINCT TIME(t0.c34 COLLATE BINARY, ((t0.c0) IS TRUE), LIKELY(NULL), CASE WHEN t0.c34 THEN t0.c34 END, SUM(t0.c34), (((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c0))), (t0.c34 IN ())), SUM(((NULL) BETWEEN (t0.c60) AND (t0.c60))) OVER (), CAST(CASE WHEN t0.c60 THEN t0.c34 WHEN t0.c60 THEN t0.c0 WHEN t0.c60 THEN t0.c34 WHEN t0.c60 THEN t0.c0 WHEN t0.c60 THEN t0.c60 END AS BLOB) FROM t0; -- 0ms;
SELECT ((json_patch(t0.c34, t0.c60)) NOT BETWEEN ((((t0.c0)) NOT BETWEEN ((0.7304917768809817)) AND ((t0.c0)))) AND ((((t0.c0))!=((t0.c34))))) FROM t0 WHERE (((('0.0', x'6019', '1415210702')) NOT BETWEEN ((NULL COLLATE BINARY, CAST(-6.40517753E8 AS BLOB), TRIM(DISTINCT NULL))) AND (((((('nD*/,M>?')AND(NULL)))OR('')), (x'cd9d' IN ()), ((NULL)>>(x'')))))) GROUP BY CASE t0.c60  WHEN ((t0.c34) BETWEEN (t0.c34) AND (t0.c0)) THEN ((((t0.c0)AND(t0.c34)))AND(t0.c0)) END;SELECT ((json_remove(0.6045925101414644, t0.c60))*(MIN(t0.c0))) FROM t0;SELECT ALL (1.097753374E9 IN ()) FROM t0 WHERE (((((NULL)/(NULL)))OR(x'' COLLATE RTRIM))); -- 0ms;
SELECT CAST(LIKELIHOOD(t0.c0, 0.08435014993027712) AS NUMERIC) FROM t0; -- 0ms;
SELECT DISTINCT AVG((t0.c0 IN ())) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c60)!=(t0.c60)) COLLATE RTRIM FROM t0 WHERE (CASE WHEN (+ (0.8790396190349872)) THEN (- (0.9114777966264751)) WHEN ('-970995106' IN ()) THEN (NOT (NULL)) WHEN ((('	F-\n', x'', '')) NOT BETWEEN (('IfFUq', x'', 0.6805738847285409)) AND ((2060241408, 0.4536222336075244, x'0d7a'))) THEN ((NULL) BETWEEN ('-55601133') AND (NULL)) ELSE ((x'')>>(0.8656933240847866)) END); -- 1ms;
SELECT DISTINCT ((((~ (t0.c34))))>=((x''))) FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c34)/(t0.c0))) NOT BETWEEN (((t0.c0)>>(t0.c0))) AND ((- (t0.c34)))) FROM t0 WHERE (((((((0.7628198907850045)OR('1750809373')))OR('/K')))LIKE(((NULL) NOTNULL)))); -- 0ms;
SELECT ALL ((t0.c34)&(t0.c60)) COLLATE NOCASE FROM t0 WHERE ((((NULL) IS TRUE) IN ())); -- 0ms;
SELECT DISTINCT (((((((((NOT (t0.c60)))OR(((((t0.c0)OR(t0.c60)))OR(t0.c0)))))AND(x'')))AND(t0.c60)))AND((((t0.c34))<>((t0.c34))))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (CAST(t0.c0 AS REAL))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (TRIM(t0.c34, t0.c0))) FROM t0; -- 0ms;
SELECT ALL '-1818037106' FROM t0 WHERE ((((NOT (NULL))) NOT BETWEEN (((NULL) NOT NULL)) AND ('-1832170662'))); -- 0ms;
SELECT (((t0.c60)+(t0.c60)) IN ()) FROM t0 WHERE (((UPPER(-2.063966514E9)) BETWEEN (((x'3459929c') BETWEEN (x'7a1c50e5') AND ('-1000125832'))) AND ((x'1bb0' IN (NULL, NULL))))); -- 0ms;
SELECT DISTINCT CASE (NOT (t0.c60))  WHEN ((((t0.c34)AND(t0.c34)))OR(t0.c34)) THEN -1e500 ELSE (t0.c60 IN ()) END FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c0)IS(t0.c60)))/(((t0.c0) IS FALSE))) FROM t0 WHERE (((((NULL)||(0.1532478077232896)))<(NULL COLLATE RTRIM))); -- 0ms;
SELECT '0.7319611054003441' FROM t0; -- 0ms;
SELECT ((((((t0.c0)>(t0.c0)))AND((t0.c60 IN ()))))OR(((t0.c34) BETWEEN (t0.c0) AND (t0.c60)))) FROM t0 WHERE (DATE((NULL IN (-1145636312)), CAST(1638314035 AS INTEGER), ((-4.89197659E8) NOT NULL), CASE WHEN '714429684' THEN '-556594788' WHEN '\y}PRU' THEN x'6760' WHEN 'ྦྷb' THEN x'' WHEN NULL THEN 0.5537469638214175 WHEN 0.9863822261720718 THEN '2084672413' END, IFNULL(NULL, -268023359), (((('685019209')AND(x'')))AND(NULL)), (NULL IN (-622375522)))); -- 0ms;
SELECT DISTINCT ((((((((((((((0x2ab188d5)IS NOT(t0.c60)))AND(NULLIF(t0.c0, t0.c60))))AND(MAX(t0.c0))))AND(CASE WHEN t0.c0 THEN t0.c34 END)))OR(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c34)))))AND(0.11857168220580971)))AND(((((((((NULL)AND(t0.c0)))AND(t0.c60)))AND(t0.c34)))OR(t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (~ (((t0.c60) BETWEEN (t0.c34) AND (t0.c0)))) FROM t0 WHERE (CASE WHEN CAST(0.8961106317413559 AS TEXT) THEN TRIM(DISTINCT 0.7813239666265385) WHEN LOWER(x'e4b0') THEN CASE 410203214  WHEN 0.7818948495613957 THEN NULL END WHEN (((x'', 'XV>', 1.536330961E9))<=((0.49351195417158034, x'b37b', 0.24582731457794582))) THEN NULL COLLATE NOCASE END); -- 0ms;
SELECT ALL CASE '-1931838232'  WHEN t0.c60 THEN t0.c0 END COLLATE NOCASE FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT MAX(((t0.c34)|(t0.c34))), CASE (t0.c0 IN ())  WHEN ((((((((t0.c60)OR(t0.c0)))OR(1.975113445E9)))AND(t0.c0)))AND(t0.c60)) THEN CAST(t0.c0 AS REAL) WHEN (t0.c0 IN (t0.c60)) THEN ((t0.c0) BETWEEN (t0.c60) AND (t0.c60)) WHEN ((t0.c0) ISNULL) THEN 0.411171398432708 WHEN CASE WHEN t0.c0 THEN t0.c34 ELSE t0.c60 END THEN CASE t0.c0  WHEN t0.c34 THEN t0.c34 WHEN t0.c0 THEN t0.c60 WHEN t0.c34 THEN t0.c60 ELSE t0.c0 END WHEN MIN(t0.c0) THEN CAST(t0.c0 AS INTEGER) ELSE ((t0.c34) BETWEEN (1.89222245E9) AND (t0.c60)) END, (((t0.c0 IN (NULL)))-(((t0.c60)LIKE(t0.c0)))) FROM t0 WHERE ((((0.9487914584877382)) NOT BETWEEN (('')) AND (((('') BETWEEN ('1975113445') AND (x'fc2e')))))); -- 0ms;
SELECT (((t0.c0 IN ()))>(1.415552502E9)), ((((t0.c34)|(t0.c0))) IS FALSE), CAST(((NULL)<=(t0.c60)) AS TEXT), t0.c60, (((0.5557601839984373 COLLATE RTRIM))!=((((t0.c60)AND(t0.c0))))), CAST(COALESCE(t0.c34, t0.c34) AS BLOB), COUNT(*) FROM t0 WHERE (((1953646744 IN ()) IN ())); -- 0ms;
SELECT ALL (NOT (CAST(t0.c60 AS REAL))) FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL ((((t0.c60)>=(t0.c0)))>>(AVG(t0.c60))) FROM t0 WHERE (CAST(CAST('dtx蝹bpB2' AS REAL) AS INTEGER)) GROUP BY x'' HAVING t0.c0; -- 0ms;
SELECT DISTINCT ((((t0.c60) NOTNULL))>=(COUNT(*))) FROM t0 WHERE (((((((((CAST(NULL AS NUMERIC))AND((-1841798079 IN ()))))AND(CHANGES())))AND((x'' IN (x'1157db9e')))))AND(CASE WHEN NULL THEN '-2076801265' WHEN '-1884276673' THEN 0.516179297246674 WHEN '' THEN '-791105008' ELSE ']go\r' END))) ORDER BY (((~ (t0.c0))) NOT BETWEEN (t0.c34 COLLATE RTRIM) AND ((- (t0.c0)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(LAST_INSERT_ROWID()) FROM t0 WHERE (''); -- 0ms;
SELECT COUNT(t0.c34) FROM t0 ORDER BY (('-1620609190') NOT BETWEEN (-3.16854248E8) AND (-5.5601133E7)); -- 0ms;
SELECT x'', t0.c34, ((t0.c0) ISNULL) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c60)OR(t0.c34)) COLLATE NOCASE FROM t0 WHERE (((((MIN(5.49991524E8, ''))AND((NOT (0.7192064326675334)))))OR(LAST_INSERT_ROWID()))); -- 0ms;
SELECT DISTINCT ((((('701205993', t0.c60, t0.c34))<=((t0.c60, t0.c60, t0.c60)))) IS FALSE) FROM t0; -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t0; -- 1ms;
SELECT DISTINCT (NOT (IFNULL(t0.c0, t0.c0))) FROM t0 WHERE ((TRIM(DISTINCT '-444214593') IN ())) GROUP BY json(((((t0.c0)OR(x'')))OR(t0.c60))); -- 0ms;
SELECT DISTINCT ((t0.c60)!=(t0.c34)) COLLATE BINARY FROM t0 WHERE (NULLIF(((1017591928)IS(0.9345936912524154)), LIKE('Fy?㼠]', x''))); -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((0.11282780907772028) NOT BETWEEN (COUNT(t0.c60)) AND ((((t0.c60)) BETWEEN ((t0.c34)) AND ((t0.c34))))) FROM t0 WHERE ((~ (NULL COLLATE BINARY))) GROUP BY (~ (CASE WHEN t0.c0 THEN t0.c60 WHEN t0.c60 THEN t0.c34 WHEN t0.c34 THEN t0.c34 END)); -- 0ms;
SELECT DISTINCT (((t0.c34, t0.c60, t0.c60)) NOT BETWEEN ((((((t0.c34)OR(t0.c34)))OR(t0.c0)), MAX(''), ((t0.c0)%(t0.c60)))) AND (((((t0.c34)) NOT BETWEEN ((t0.c0)) AND ((t0.c60))), CAST(t0.c34 AS INTEGER), ((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c60))))) FROM t0 NOT INDEXED ORDER BY CAST(((((t0.c34)AND('v9')))OR(t0.c34)) AS INTEGER)  NULLS LAST, json_remove((((t0.c34, t0.c0, t0.c0)) BETWEEN ((t0.c0, t0.c34, t0.c60)) AND ((t0.c34, t0.c0, t0.c0))), CASE WHEN t0.c60 THEN 'mTNXK' WHEN t0.c0 THEN 0.4108876017030515 WHEN t0.c0 THEN t0.c0 END)  NULLS LAST; -- 0ms;
SELECT DISTINCT TOTAL(CAST(t0.c34 AS REAL)) OVER ( ROWS BETWEEN  CURRENT ROW AND  CURRENT ROW EXCLUDE TIES) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c60)==(t0.c34)) IN ()), '', ((((((t0.c34)<('1e500')))OR(LAST_INSERT_ROWID())))OR(CAST(t0.c0 AS NUMERIC))) FROM t0 WHERE (((((('550946910' IN (0.0031537917194042198, '1939447137')))OR((~ (0.14470569549783563)))))AND(json_insert(-6.22375522E8, '-31941346', NULL))));SELECT ALL MAX(((t0.c34) BETWEEN (t0.c0) AND (t0.c0))) FROM t0; -- 0ms;
SELECT NULL FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c0)LIKE(t0.c60)) COLLATE NOCASE, CASE ((t0.c0)>(t0.c34))  WHEN GROUP_CONCAT(t0.c0) THEN (- (t0.c34)) ELSE ((t0.c34)>(t0.c0)) END, (((((t0.c60)OR(t0.c34)))OR(t0.c60)) IN (((t0.c0)GLOB(t0.c60)))) FROM t0 WHERE (((CASE WHEN x'' THEN NULL END) BETWEEN (CASE NULL  WHEN NULL THEN 0.654649051869822 ELSE 0.07014830554209284 END) AND (((-1321310210)IS NOT('㠿B_'))))); -- 0ms;
SELECT DISTINCT ((CASE WHEN 'To' THEN t0.c34 ELSE t0.c60 END)|(((t0.c60)<=(t0.c60)))) FROM t0; -- 0ms;
SELECT CASE WHEN ((t0.c0)<<(t0.c34)) THEN ((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c0)) END FROM t0; -- 1ms;
SELECT x'' FROM t0; -- 0ms;
SELECT DISTINCT (+ (t0.c0)) FROM t0 WHERE (LOWER((-2129083509 IN ()))); -- 0ms;
SELECT DISTINCT ((((((t0.c34) IS TRUE))OR(CASE t0.c60  WHEN t0.c60 THEN t0.c0 END)))OR(((((((((0.6441559940472621)AND(t0.c0)))OR(t0.c34)))OR(x'')))AND(t0.c0)))) FROM t0; -- 0ms;
SELECT ALL TOTAL(t0.c60) OVER (), ((t0.c60)||(t0.c0)) COLLATE NOCASE, t0.c34 COLLATE RTRIM FROM t0 WHERE (CAST((+ (0x1bd62d95)) AS REAL)); -- 0ms;
SELECT ALL MIN(((t0.c34) BETWEEN (t0.c60) AND (t0.c60))) FROM t0; -- 0ms;
SELECT ALL t0.c34 FROM t0 WHERE (TYPEOF(DISTINCT NULL) COLLATE RTRIM); -- 0ms;
SELECT CAST(t0.c0 COLLATE NOCASE AS INTEGER), SUM(((t0.c0)/(t0.c60))), (((t0.c60) IS TRUE) IN ()) FROM t0 WHERE (CASE WHEN CAST('-410173616' AS TEXT) THEN '550946910' WHEN NULLIF(0.45466203734594424, 8.13749674E8) THEN ((0.28304830824406035) NOT BETWEEN (-5.07277477E8) AND (0.024984005424300237)) WHEN ((x'')OR(NULL)) THEN (('w3')IS NOT('')) END); -- 0ms;
SELECT CAST(CAST(t0.c0 AS INTEGER) AS NUMERIC) FROM t0 WHERE (((((x'')GLOB(-1710806541))) NOT NULL)); -- 0ms;
SELECT ((('1245966411' IN (NULL)))<=((- (t0.c60)))) FROM t0; -- 0ms;
SELECT ALL (- (0.4005432563120759)) COLLATE RTRIM FROM t0 WHERE (x'782a' COLLATE BINARY); -- 0ms;
SELECT CASE WHEN ((t0.c60)OR(t0.c34)) THEN CAST(t0.c60 AS BLOB) END FROM t0 WHERE (CASE WHEN 1.754642997E9 THEN NULL END) ORDER BY (((x'' IN (t0.c34)))<((x'' IN (t0.c60))))  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(t0.c60 AS NUMERIC))LIKE(COUNT(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT t0.c60 COLLATE RTRIM COLLATE NOCASE, ((t0.c60)<(t0.c34)) COLLATE BINARY, CAST(((((((((t0.c0)OR(t0.c0)))AND(t0.c60)))OR(t0.c34)))AND(NULL)) AS NUMERIC) FROM t0 WHERE ((('844688742' IN (0x75b9d6e5)) IN ())); -- 0ms;
SELECT LTRIM(t0.c60 COLLATE BINARY, ((t0.c34)<=(t0.c60))) FROM t0 LIMIT 1286709247 UNION ALL SELECT DISTINCT (((((t0.c60)OR(t0.c60)))AND(t0.c34)) IN ()) FROM t0 WHERE (((((0x6086ebb1)<<(-5.30511612E8))) NOT BETWEEN (0.3138018775379212) AND ((((x'', x'f147', '-55601133')) BETWEEN (('0.651175820431075', 'fQG^JmR1f', x'')) AND (('f_', NULL, 0.32500664262216405))))));SELECT (((CAST(t0.c60 AS BLOB)))<>((t0.c0))) FROM t0; -- 0ms;
SELECT ALL t0.c60, CASE ((0X1990532f) BETWEEN (t0.c34) AND (t0.c34))  WHEN t0.c0 COLLATE RTRIM THEN (((t0.c0))>((t0.c0))) ELSE LOWER(t0.c60) END, ((CASE WHEN t0.c34 THEN '1000803301' WHEN t0.c34 THEN t0.c34 WHEN t0.c60 THEN t0.c0 ELSE t0.c34 END)>>((NOT (t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( RANGE  UNBOUNDED PRECEDING) FROM t0 WHERE (((x'')<('w&]N')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT (~ (t0.c60))) FROM t0; -- 0ms;
SELECT ALL (((NULL) NOT BETWEEN (t0.c60) AND (t0.c34)) IN ()), ((((0Xffffffffa3f09d93)AND(((t0.c60) BETWEEN (NULL) AND (t0.c60)))))AND((+ (t0.c34)))), (((t0.c34) BETWEEN (t0.c60) AND (t0.c0)) IN ()) FROM t0 WHERE (((CASE WHEN '糏u' THEN x'' ELSE NULL END) BETWEEN ((-1278058706 IN ())) AND ((- ('?'))))) LIMIT 813749674 OFFSET -31941346; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT CAST(t0.c60 AS NUMERIC), (NOT (t0.c34))) FROM t0 LIMIT -913219833; -- 0ms;
SELECT ALL ((t0.c0)<<(((t0.c60) BETWEEN (t0.c34) AND (t0.c0)))), COUNT(CAST(t0.c34 AS BLOB)), ((((t0.c0)!=(t0.c34)))IS NOT(((t0.c0)>=(0Xffffffffb8644724)))) FROM t0 WHERE (((IFNULL(DISTINCT NULL, '246424667'))%((('xHN')<=('714429684'))))) ORDER BY ((((t0.c60)OR(t0.c60)))AND(t0.c60)) COLLATE RTRIM ASC  NULLS LAST; -- 0ms;
SELECT ((GROUP_CONCAT(t0.c34)) ISNULL) FROM t0; -- 0ms;
SELECT ALL ((t0.c60)/(0.5184233447854889)) FROM t0 WHERE (NULL) ORDER BY (~ (NULL)) DESC; -- 0ms;
SELECT DISTINCT (((t0.c0 IN ())) NOT BETWEEN ((t0.c0 IN (t0.c34, t0.c60))) AND (((((((((t0.c0)AND(t0.c60)))AND(t0.c0)))AND(t0.c60)))OR(x'4c3d')))), ((((t0.c34)<(t0.c34)))&((+ (t0.c60)))), 1555158291 FROM t0 WHERE (((((((x''))>=((x'3385')))))>=(((+ ('')))))); -- 0ms;
SELECT DISTINCT MAX(t0.c60) FROM t0 ORDER BY ((((t0.c0)>(t0.c34))) IS FALSE) DESC; -- 0ms;
SELECT DISTINCT t0.c60, COALESCE(GROUP_CONCAT(t0.c34), ((((t0.c60)OR(t0.c0)))OR(t0.c34)), ((t0.c60) NOTNULL), ((NULL) NOT NULL)), CAST(json_type(t0.c60) AS INTEGER) FROM t0 WHERE (CASE (((0.4838681573447331))<=((x'')))  WHEN 0.570553045967261 THEN ((0.22473312710473115) NOT BETWEEN (NULL) AND (NULL)) ELSE 0.17246133955537368 COLLATE BINARY END) ORDER BY ((((~ (t0.c34)), t0.c0, CAST(t0.c60 AS NUMERIC)))>((json_quote(t0.c60), t0.c34, ((t0.c34)>(t0.c60))))) DESC  NULLS LAST LIMIT -1557687141;SELECT DISTINCT COUNT(*) OVER ( ORDER BY (~ (CASE WHEN x'' THEN t0.c0 WHEN NULL THEN t0.c0 WHEN '2108566193' THEN t0.c34 END))  NULLS LAST) FROM t0 LIMIT 117957372; -- 0ms;
SELECT HEX((((t0.c34))=((t0.c60)))), (((t0.c34)) BETWEEN (((((t0.c0, t0.c60, t0.c60)) BETWEEN ((t0.c34, t0.c34, t0.c60)) AND ((t0.c60, t0.c34, t0.c60))))) AND ((LIKELY(DISTINCT t0.c0)))), ((((((((((((1467096256)AND(t0.c0)))OR(t0.c60)))OR(((t0.c0)LIKE(t0.c34)))))OR(t0.c60)))AND(t0.c0 COLLATE RTRIM)))OR(NULL)) FROM t0; -- 0ms;
SELECT ALL ABS(CASE WHEN '-85084387' THEN t0.c60 END), ((t0.c0)<>(((t0.c0)OR(t0.c34)))), 0xffffffffef43d6d0, (+ (t0.c60)), CASE NULLIF(t0.c34, t0.c60)  WHEN '' THEN (((t0.c34)) BETWEEN ((t0.c34)) AND ((t0.c60))) ELSE ((t0.c0)+(t0.c0)) END FROM t0 WHERE ((((((((((- ('-2076801265')))AND(CASE WHEN '-763209205' THEN 0.047817036459930184 WHEN '-112539372' THEN NULL WHEN x'' THEN '-1626693431' END)))OR(CASE 0.20336973429880778  WHEN -1.33790163E8 THEN '220736046' END)))AND(((NULL)IS NOT(0xffffffffa96348ac)))))OR('685019209'))); -- 0ms;
SELECT MIN((~ (t0.c60))) FROM t0; -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT ((t0.c0) BETWEEN (t0.c34) AND (0.46095850382225)), LTRIM(t0.c0)) FROM t0 WHERE ((((((('972959838'))>=(('-576712488')))))==(((((('AE鉄_FuBp菣')AND('0.37730238171399666')))AND(0.17989984340485998)))))) ORDER BY ((((CAST(t0.c0 AS NUMERIC))OR(COALESCE(DISTINCT t0.c0, t0.c34))))OR(((NULL) NOT NULL))); -- 0ms;
SELECT ALL (((~ (t0.c0)))>=((~ (t0.c0)))) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c34)OR(t0.c0)))AND(t0.c34)) IN ()), (-1.325039723E9 IN ()), MIN(0.8993891341158197) FROM t0 WHERE (CAST(((x'')-(0.5920907243710186)) AS INTEGER)); -- 0ms;
SELECT ALL CAST(((((t0.c34)OR(t0.c60)))OR(t0.c0)) AS INTEGER) FROM t0 LIMIT -1844754678 OFFSET 1576707806; -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT COALESCE(NULL, t0.c60)) FROM t0 WHERE (CASE ((NULL) NOT BETWEEN (x'') AND (0.8097453180320322))  WHEN (((0X7b9dcc0e))>(('}d8㭘_2_'))) THEN ((NULL) IS TRUE) ELSE NULL COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT json_array_length(t0.c34, ((t0.c60) BETWEEN (t0.c0) AND (t0.c34))), CAST((((t0.c34)) BETWEEN ((t0.c60)) AND (('FALSE'))) AS TEXT), (CAST(t0.c0 AS TEXT) IN ()), GROUP_CONCAT((+ (x'5f13fe7a'))) OVER (), (((t0.c34)) BETWEEN ((('1024437605' IN ()))) AND ((CAST(t0.c60 AS REAL)))) FROM t0 GROUP BY ((t0.c0) ISNULL);SELECT DISTINCT CAST(LOWER(t0.c0) AS REAL) FROM t0 LIMIT -1849572802 OFFSET -944819023; -- 0ms;
SELECT DISTINCT CAST(((((t0.c34)AND(t0.c34)))AND(t0.c60)) AS BLOB) FROM t0 WHERE ((((((x'')IS NOT('u['))))!=((('' IN ()))))); -- 0ms;
SELECT DISTINCT COUNT(*), ((TRIM(DISTINCT t0.c0)) BETWEEN (((((t0.c34)AND(t0.c34)))AND(t0.c60))) AND (SUM(t0.c34))), ((((t0.c0) IS TRUE)) IS TRUE) FROM t0; -- 0ms;
SELECT DISTINCT CAST(((t0.c0) ISNULL) AS TEXT) FROM t0 WHERE ((((((((0.44706689231965757)) BETWEEN ((0.2633070751047196)) AND ((''))))OR(((x'')=('-1135909253')))))OR(CAST(NULL AS TEXT)))); -- 0ms;
SELECT DISTINCT LIKELIHOOD(TYPEOF(DISTINCT t0.c34), 0.8187088995493177), (~ ((~ (t0.c34)))), (- (((t0.c60)AND(t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c34)) BETWEEN ((((t0.c0) IS TRUE))) AND ((t0.c0))) FROM t0 WHERE ('Tm') LIMIT -382459414; -- 0ms;
SELECT ALL ((((((((((t0.c60)OR(t0.c0)))OR(t0.c0)))OR(t0.c60)))OR(t0.c34))) NOT NULL) FROM t0 WHERE ((((0.6864470813699822 IN ())) BETWEEN (UPPER(x'')) AND ((('-1944975396')>=(NULL))))); -- 0ms;
SELECT ALL ((((t0.c0) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL), COALESCE(GROUP_CONCAT(t0.c34), t0.c60), json_array_length('', ((((t0.c0)AND(t0.c34)))OR(t0.c34))) FROM t0 WHERE ((- (((((((((x'a09d93b7')OR(0xffffffffa36610fa)))AND('1751021579')))AND('516273952')))OR(NULL)))));SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE (((((x'')%('pd')))OR(((((((((NULL)OR(NULL)))AND(NULL)))OR('1109044829')))OR(NULL))))) GROUP BY ((CAST(t0.c60 AS REAL)) NOTNULL) HAVING ((((0.1594905413418083) NOT NULL)) BETWEEN (((x'')>=(t0.c0))) AND (COUNT('813749674'))); -- 0ms;
SELECT ALL CAST(((t0.c60)!=(t0.c0)) AS BLOB) FROM t0 WHERE (CASE WHEN (1.097753374E9 IN ()) THEN CASE WHEN NULL THEN 0.9222251934500403 ELSE NULL END WHEN (((0.6381103822317183))>=((x''))) THEN ((0x74000fb1) ISNULL) WHEN (((x''))>((x''))) THEN CASE WHEN 1.415552502E9 THEN '-1340591617' WHEN -823232175 THEN '-622375522' WHEN '1096734098' THEN NULL ELSE 0X23020b7 END END); -- 1ms;
SELECT ALL ((((0.09400207517059223) NOT NULL))>=((((t0.c34)) NOT BETWEEN ((t0.c0)) AND ((t0.c60))))) FROM t0 WHERE (-1.7976931348623157E308); -- 0ms;
SELECT CAST((((t0.c60)) NOT BETWEEN ((t0.c0)) AND ((t0.c34))) AS REAL) FROM t0 WHERE (((COALESCE(NULL, NULL)) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE t0.c34  WHEN t0.c34 THEN t0.c34 WHEN t0.c0 THEN t0.c34 WHEN t0.c60 THEN t0.c0 END COLLATE NOCASE FROM t0 WHERE (x''); -- 0ms;
SELECT ALL (+ (COUNT(t0.c0))) FROM t0 WHERE (UPPER(x'dad9') COLLATE NOCASE) GROUP BY CASE WHEN '-866134036' THEN (t0.c0 IN (t0.c0)) END HAVING CASE WHEN t0.c34 COLLATE RTRIM THEN CAST(t0.c60 AS TEXT) WHEN TOTAL(t0.c34) THEN (~ (t0.c0)) WHEN ((t0.c34)IS(t0.c0)) THEN TRIM(DISTINCT t0.c60, t0.c0) ELSE ((t0.c60)-(-461109651)) END; -- 0ms;
SELECT DISTINCT CAST(json_type(t0.c60) AS REAL) FROM t0;SELECT ALL ((((t0.c34 IN ())))=((((((((((((((((((t0.c34)OR(t0.c34)))AND(t0.c0)))OR(t0.c0)))AND(t0.c34)))AND(t0.c60)))AND(t0.c0)))OR(t0.c0)))OR(t0.c34))))) FROM t0 WHERE (((((((((428888879)OR(NULL)))AND(x'')))AND(NULL)))AND('')) COLLATE NOCASE); -- 0ms;
SELECT CASE CAST(t0.c0 AS NUMERIC)  WHEN NULL THEN ((t0.c60) ISNULL) END FROM t0 WHERE (((CASE WHEN 0.7566322869983707 THEN NULL WHEN NULL THEN 0Xffffffffffffffff WHEN '-1752797337' THEN 0.49244902342410113 ELSE NULL END) NOT NULL)); -- 0ms;
SELECT MIN(((t0.c0) BETWEEN (t0.c34) AND ('1287718107'))) FROM t0; -- 0ms;
SELECT DISTINCT (CASE 0.8569116216983709  WHEN t0.c60 THEN t0.c60 ELSE t0.c0 END IN (CASE t0.c34  WHEN t0.c34 THEN t0.c34 ELSE t0.c60 END, LOWER(t0.c60))) FROM t0 ORDER BY ((((x'5bf1')OR(CASE WHEN t0.c60 THEN t0.c34 END)))AND(((t0.c34)&(''))))  NULLS LAST, (NOT (((((((((((((t0.c60)AND(x'')))OR(t0.c60)))OR(t0.c60)))AND(t0.c0)))OR(t0.c34)))OR(t0.c0))))  NULLS FIRST, CAST(t0.c0 AS BLOB) DESC; -- 0ms;
SELECT DISTINCT NULL FROM t0; -- 0ms;
SELECT DISTINCT (((t0.c0, t0.c0, t0.c0)) NOT BETWEEN ((((((t0.c0)OR(t0.c34)))OR(t0.c0)), (t0.c60 IN ()), ((((((((((((t0.c0)OR(t0.c60)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))AND(t0.c0)))AND(t0.c0)))) AND ((((t0.c0) BETWEEN (t0.c0) AND (t0.c60)), ABS(t0.c34), ((t0.c0)=(t0.c60))))), NTILE(((x'2fab')+((((t0.c34))<=((t0.c34)))))) OVER (), ((NULL)<((NULL IN (t0.c0, t0.c60)))), SUM(((t0.c60) NOT BETWEEN (t0.c60) AND (t0.c34))) OVER (), CASE WHEN -1511543731 THEN t0.c0 WHEN NULL THEN t0.c60 WHEN t0.c60 THEN -1.832170662E9 WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c34 THEN t0.c60 WHEN t0.c34 THEN t0.c34 END COLLATE NOCASE FROM t0 INDEXED BY i58 WHERE (load_extension(CAST('-1944975396' AS NUMERIC)));SELECT DISTINCT '-2063966514' FROM t0 WHERE (((((NULL) IS FALSE)) BETWEEN ((((0.6271066207207868)) BETWEEN ((NULL)) AND (('-152791219')))) AND ((('117957372') BETWEEN (x'c2c09db3') AND (NULL))))) GROUP BY (+ (CAST(t0.c0 AS NUMERIC))); -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN (((- (t0.c34)))) AND ((0.47247877317042175))), ((((t0.c0)-(t0.c34))) IS FALSE), CAST(load_extension(t0.c60) AS TEXT) FROM t0 WHERE (((((((551165477)AND('0.5073655191037009')))AND('Liimf''zD')))==((((((((((((('-168357234')OR(0.5820147597474096)))OR(0.9974213427412919)))AND(0xffffffffee5e85b7)))OR(0.9575328428634373)))AND('1698667419')))AND(0.6767897447923749))))); -- 0ms;
SELECT DISTINCT (((GROUP_CONCAT(t0.c34)))!=((0.4230997134461316))) FROM t0 WHERE (json_array_length(((NULL)AND(x'')))) ORDER BY (((t0.c0)) NOT BETWEEN ((ABS(t0.c60))) AND ((t0.c34 COLLATE NOCASE)))  NULLS FIRST; -- 0ms;
SELECT UNICODE(CHANGES()) FROM t0 WHERE ((((('-316854248')<=(NULL)))GLOB((('Hq ')GLOB(NULL))))); -- 0ms;
SELECT ALL ((((t0.c0 IN ())))<=(((NOT (t0.c34))))), ((((t0.c60)IS NOT(t0.c34))) IS FALSE), (~ (t0.c34 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT DISTINCT (((IFNULL(DISTINCT t0.c34, t0.c34), ((t0.c0) ISNULL), (~ (t0.c60)), ((t0.c34)-(t0.c0)), (('-1125860934') IS TRUE)))<=((((((t0.c34)AND(t0.c34)))AND(t0.c34)), ((t0.c34) NOTNULL), 0.16613975016207205, CASE t0.c0  WHEN t0.c60 THEN t0.c60 ELSE t0.c60 END, t0.c0))) FROM t0 WHERE (CASE WHEN ((x'')>>(-9.80013665E8)) THEN (((NULL)) BETWEEN ((x'')) AND ((0.26222236210395033))) ELSE ((((0.10293196393758008)AND(x'')))OR('')) END) GROUP BY ((((((t0.c34)AND(t0.c34)))OR(t0.c60))) NOT NULL), (((((((((((t0.c60)OR(NULL)))OR(t0.c0)))OR(t0.c34)))AND(t0.c34)), CAST('1221997189' AS REAL), (((t0.c60, t0.c34, t0.c34)) BETWEEN ((t0.c60, t0.c0, t0.c34)) AND ((t0.c34, 'A#ij2V#E%', t0.c60)))))>=(((((t0.c60))<((t0.c60))), CASE t0.c60  WHEN t0.c0 THEN t0.c0 END, ((t0.c60) ISNULL)))), (((t0.c60, t0.c34, t0.c0))!=((t0.c0, NULL, t0.c0))) COLLATE RTRIM, ((t0.c34)|(t0.c34)) COLLATE BINARY, x'0b3a' HAVING NULL; -- 1ms;
SELECT DISTINCT (((((NOT (t0.c0)))OR(t0.c34 COLLATE RTRIM)))OR(((t0.c34)-(t0.c34)))), CAST(((t0.c60)|(t0.c34)) AS INTEGER), LAST_VALUE((t0.c0 IN (t0.c60)) COLLATE RTRIM) OVER ( GROUPS CASE WHEN ((t0.c34) NOTNULL) THEN ((t0.c34) IS FALSE) WHEN ((((t0.c0)AND(t0.c60)))OR(t0.c60)) THEN (NOT (t0.c34)) WHEN (t0.c34 IN ()) THEN (+ (t0.c60)) END PRECEDING) FROM t0;SELECT DISTINCT t0.c34 FROM t0 WHERE (CAST(0.9399195492809325 AS REAL)) GROUP BY (((t0.c34)/('1980815311')) IN (((t0.c0) IS TRUE), t0.c0)), '2FI?f', ((((t0.c0)*(t0.c60))) ISNULL); -- 0ms;
SELECT ALL 0.7112223923411284, (((((t0.c60 IN (t0.c34)))OR((NOT (t0.c60)))))OR(x'')), (~ ((((t0.c60)) BETWEEN ((0xffffffffba7f7740)) AND ((t0.c60))))), t0.c60, CASE WHEN (((t0.c34)) BETWEEN ((t0.c34)) AND ((t0.c0))) THEN ((t0.c0) BETWEEN (t0.c0) AND (t0.c0)) END FROM t0 WHERE (((CASE NULL  WHEN '-782896676' THEN 0X1ccd2d33 WHEN '1141853372' THEN x'' WHEN 'Pr' THEN x'' ELSE 2106620847 END) NOTNULL)); -- 0ms;
SELECT ((((t0.c60, t0.c0, t0.c34)) BETWEEN ((t0.c60, t0.c34, t0.c0)) AND ((t0.c34, t0.c60, t0.c60))) IN (t0.c60 COLLATE RTRIM, MIN(t0.c34))) FROM t0 WHERE ((((('')/(NULL)))AND((0X73999d61 IN ())))); -- 0ms;
SELECT DISTINCT (((((t0.c60)AND(t0.c34))))==((CASE WHEN t0.c60 THEN t0.c34 WHEN t0.c0 THEN t0.c60 WHEN t0.c34 THEN t0.c0 WHEN t0.c34 THEN t0.c34 WHEN t0.c60 THEN t0.c60 END))) FROM t0 WHERE (CASE WHEN ('2005048049' IN (x'')) THEN (- (-96330453)) WHEN (((0.1614155838312501, x'', x''))>=((x'', ',S|7G+0', -1884276673))) THEN x'5608' WHEN CAST(NULL AS NUMERIC) THEN ((((((((((((0.6446436939430567)AND(-6.67634421E8)))OR(x'')))OR(0.583328047466876)))OR(NULL)))OR('-123920505')))OR(0.7946060270554454)) ELSE (((''))>((x'a0bd'))) END); -- 0ms;
SELECT DISTINCT x'' FROM t0 WHERE ((((~ (-1878015119))) BETWEEN ((((NULL))>((NULL)))) AND (((0.5184233447854889)<(x''))))) ORDER BY (((t0.c34, t0.c60, t0.c0, t0.c60, t0.c60)) BETWEEN ((((((((((t0.c60)AND(t0.c34)))AND(t0.c0)))OR(t0.c34)))OR(t0.c0)), ((t0.c34)+(t0.c0)), t0.c34, (((t0.c0, t0.c34, t0.c0)) NOT BETWEEN ((t0.c0, t0.c60, t0.c34)) AND ((t0.c34, t0.c34, t0.c0))), x'')) AND ((CAST(t0.c0 AS INTEGER), ((t0.c60) BETWEEN (t0.c0) AND ('1839741807')), CAST(t0.c34 AS TEXT), (t0.c60 IN (t0.c34)), ((((t0.c34)AND(t0.c60)))OR(t0.c34))))), (((((t0.c60))<>((t0.c60)))) NOTNULL), CAST(((((t0.c0)AND(t0.c0)))OR(t0.c0)) AS TEXT); -- 0ms;
SELECT DISTINCT (((- (t0.c34))) NOTNULL) FROM t0; -- 0ms;
SELECT ALL CAST((((NULL)) BETWEEN ((t0.c34)) AND ((t0.c60))) AS REAL) FROM t0 WHERE ('R'); -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((((t0.c34) BETWEEN (t0.c60) AND (t0.c60)))) AND ((COUNT(*)))) FROM t0 NOT INDEXED WHERE ((((((NULL)) BETWEEN (('714429684')) AND ((x'2a37'))))&(x'7239' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT NULL, (t0.c60 COLLATE NOCASE IN ()), ((((t0.c0)IS NOT(t0.c60))) ISNULL) FROM t0 ORDER BY (+ ((- (t0.c60))))  NULLS LAST; -- 0ms;
SELECT DISTINCT UNICODE(t0.c60) FROM t0 WHERE (((CASE NULL  WHEN 0Xffffffff8033dc24 THEN -507277477 END)%(((('-1184297798')) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT ALL (9.18875676E8 IN ()) FROM t0; -- 0ms;
SELECT DISTINCT LAG('', ((CASE t0.c60  WHEN t0.c0 THEN t0.c34 END) ISNULL), ABS(DISTINCT ((t0.c34) IS FALSE))) OVER ( ORDER BY ((((t0.c34)OR(t0.c60)))AND(t0.c0)) COLLATE BINARY GROUPS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t0 WHERE (((CASE WHEN 0.31828360977977455 THEN x'6ea8' WHEN 0.7836432618506947 THEN x'' WHEN x'' THEN '\rmBh\r?' ELSE '-1944975396' END) BETWEEN (((x'')IS NOT('1779430017'))) AND ((('')>=('316524866'))))); -- 0ms;
SELECT DISTINCT t0.c34 FROM t0; -- 0ms;
SELECT DISTINCT COALESCE(NULL, CASE t0.c0  WHEN t0.c0 THEN t0.c60 ELSE t0.c60 END), COUNT(t0.c0), CASE (((t0.c0, t0.c0, t0.c0))!=((t0.c0, t0.c60, t0.c0)))  WHEN (+ (t0.c60)) THEN (('O5') ISNULL) END, (((((((t0.c60))>((t0.c0))))OR(((t0.c0) NOTNULL))))OR((t0.c0 IN ()))), ((((t0.c60 COLLATE BINARY)AND(((t0.c34) IS TRUE))))AND(CAST(t0.c60 AS INTEGER))) FROM t0 ORDER BY 0X69822b05 DESC, (((((t0.c34))>=((t0.c60)))) BETWEEN (t0.c60 COLLATE RTRIM) AND (((t0.c60) IS TRUE)))  NULLS LAST;SELECT DISTINCT (+ (((t0.c60) NOTNULL))) FROM t0 NOT INDEXED; -- 0ms;
SELECT ALL 0.38006453574477017 FROM t0 WHERE ((((('811585809') NOT BETWEEN (117957372) AND (0Xffffffffdae74d9e)))=((('*O?{j{*j') IS TRUE)))); -- 0ms;
SELECT ALL (((((- (t0.c34)))OR(0Xffffffffe484066d)))AND(((((t0.c34)OR(t0.c0)))OR(t0.c60)))) FROM t0 WHERE (('' IN (NULL)) COLLATE NOCASE) GROUP BY t0.c0, t0.c0, (((t0.c34) NOT BETWEEN (t0.c34) AND (t0.c0)) IN ((((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c60))))) LIMIT 2082136600; -- 1ms;
SELECT (~ (((((((((((((t0.c34)OR(t0.c34)))AND(t0.c34)))OR(t0.c34)))AND(t0.c34)))AND(t0.c0)))OR(972959838)))) FROM t0; -- 0ms;
SELECT ALL COUNT((t0.c34 IN ())) FROM t0; -- 0ms;
SELECT DISTINCT t0.c0 COLLATE NOCASE FROM t0 GROUP BY ((t0.c60 IN ()) IN (((t0.c34)IS NOT(t0.c34)))); -- 0ms;
SELECT DISTINCT x'', ((CASE WHEN t0.c60 THEN t0.c60 WHEN t0.c60 THEN t0.c0 WHEN t0.c0 THEN t0.c0 END)<=((t0.c60 IN (t0.c34)))), COUNT(*) OVER () FROM t0; -- 0ms;
SELECT t0.c60 FROM t0 WHERE (CASE WHEN 6.6328556E7 THEN x'' END COLLATE RTRIM); -- 0ms;
SELECT ALL x'0787' FROM t0 WHERE ((((x'0cea', x'', 'jW6燁&')) NOT BETWEEN (((('0.4108876017030515')+(NULL)), COALESCE(-5.30511612E8, '1272914971'), PRINTF('H('))) AND ((CAST(0.554322476025496 AS NUMERIC), (((0.006186430164285883))!=((0X6a44f972))), ((NULL)/(x'')))))); -- 0ms;
SELECT ALL ((COUNT(t0.c60))IS NOT(COUNT(*))) FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN load_extension(t0.c60, '1198835079') THEN ((']5')|(t0.c0)) WHEN ((t0.c60)-(t0.c0)) THEN ((((t0.c60)AND(t0.c0)))OR(t0.c60)) WHEN CAST(t0.c60 AS TEXT) THEN ((t0.c34)IS(t0.c0)) ELSE t0.c60 COLLATE BINARY END FROM t0;SELECT TOTAL(((((((((t0.c60)OR(t0.c0)))AND(t0.c60)))AND(t0.c60)))AND(t0.c60))) OVER () FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c0))) NOT BETWEEN (CAST(t0.c34 AS NUMERIC)) AND (x'')), CASE ((((((((((((t0.c60)OR(t0.c60)))OR(t0.c0)))OR(t0.c60)))OR(t0.c0)))OR(t0.c60)))AND(t0.c34))  WHEN CASE t0.c0  WHEN t0.c0 THEN t0.c60 WHEN t0.c34 THEN 0.6176131200986614 WHEN t0.c60 THEN t0.c34 ELSE t0.c34 END THEN t0.c0 END, CAST(t0.c0 AS TEXT) COLLATE NOCASE, ((((((((t0.c0)OR(t0.c34)))OR(t0.c60)))AND(((t0.c0) IS TRUE))))AND(((t0.c34) BETWEEN (x'') AND (t0.c34)))), ((t0.c34) NOT BETWEEN (t0.c0 COLLATE BINARY) AND (t0.c34)) FROM t0 WHERE (((((((((((((898919141)AND(NULL)))OR(x'')))AND(NULL)))AND(x'')))AND((0.022025684479506258 IN (0.5349773220872335)))))OR(((NULL)IS NOT('-1405760561'))))) GROUP BY (+ ((t0.c60 IN ()))) LIMIT 1768042543; -- 1ms;
SELECT ALL (((t0.c34 IN ()))OR(((t0.c60)+(t0.c0)))), LOWER(t0.c34 COLLATE NOCASE), MAX((((t0.c60)) BETWEEN ((t0.c34)) AND ((t0.c34)))) FROM t0 ORDER BY (- (HEX(t0.c0))) DESC  NULLS LAST; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((((t0.c0)>(t0.c60)))) AND ((((((t0.c34)AND('	F-\n')))AND(t0.c34))))), t0.c34, CAST(NULL AS NUMERIC), CASE WHEN TRIM(DISTINCT t0.c0) THEN 8.22885048E8 ELSE ((t0.c0) IS TRUE) END, (NOT (((0.1794719310952536) IS FALSE))) FROM t0 WHERE (CASE NULL COLLATE RTRIM  WHEN ((NULL)+('0.554322476025496')) THEN (('Fy?㼠]')&('94463499')) ELSE (~ (NULL)) END); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE ((- ((~ (x''))))); -- 0ms;
SELECT DISTINCT (((((((t0.c34))!=((t0.c60))))AND(GROUP_CONCAT(t0.c0))))AND((((t0.c60))<>((NULL))))), (CASE WHEN x'd9ed' THEN t0.c0 ELSE t0.c60 END IN (((x'')<<(t0.c0)))), (((((t0.c0, t0.c60, t0.c0)) NOT BETWEEN ((t0.c34, '-31941346', t0.c34)) AND ((t0.c0, t0.c60, t0.c60)))) NOT BETWEEN (NULL COLLATE BINARY) AND (((t0.c0) IS FALSE))) FROM t0; -- 0ms;
SELECT DISTINCT json_type(t0.c60) COLLATE NOCASE FROM t0;SELECT ((t0.c34 COLLATE RTRIM)>>(t0.c34)) FROM t0 GROUP BY ((((~ (t0.c60)), CAST(t0.c60 AS TEXT), (t0.c34 IN ())))>=((t0.c0 COLLATE RTRIM, CASE WHEN t0.c0 THEN t0.c60 ELSE t0.c34 END, ((((t0.c0)AND(t0.c34)))AND(t0.c60))))) HAVING MIN(((((((((t0.c0)OR(t0.c60)))AND(t0.c34)))OR(t0.c34)))OR(t0.c0))); -- 0ms;
SELECT DISTINCT ((((t0.c34)>(t0.c34)))OR(((t0.c0) ISNULL))) FROM t0 WHERE (((x'') NOT BETWEEN (((x'c9da')>>(-317107594))) AND (CASE WHEN 0X6eed20c0 THEN x'' WHEN 'Liimf''zD' THEN x'9ea1' WHEN '714429684' THEN x'1a60' ELSE '-1534023532' END))); -- 0ms;
SELECT ((CASE WHEN t0.c60 THEN t0.c0 END) BETWEEN (((((t0.c34)AND(t0.c34)))AND(t0.c0))) AND (x'250d')) FROM t0 WHERE (CAST(json_extract('714429684', '48465451') AS BLOB)) LIMIT 696117844 OFFSET 1230352432;SELECT (((t0.c0)) BETWEEN ((((((t0.c0)AND(t0.c60)))AND(t0.c34)))) AND ((t0.c60))) FROM t0 WHERE (0.6726132326975353 COLLATE RTRIM); -- 0ms;
SELECT (((NOT (t0.c34))) IS FALSE) FROM t0; -- 0ms;
SELECT ALL (((t0.c0 IN (t0.c0))) BETWEEN (CAST(t0.c34 AS BLOB)) AND ((0X50279a19 IN ()))) FROM t0 WHERE ((CASE '&aXL'  WHEN '?v 71n潏' THEN x'2824' ELSE NULL END IN ())); -- 0ms;
SELECT ALL CASE ((((t0.c34)AND(t0.c60)))AND(t0.c34))  WHEN (((t0.c34))>=((t0.c34))) THEN (t0.c34 IN ()) WHEN t0.c60 THEN SQLITE_COMPILEOPTION_GET(t0.c60) WHEN ((t0.c60)<('B*m15ta*')) THEN (t0.c60 IN ()) END FROM t0 WHERE (((CASE x''  WHEN '' THEN 0.6864470813699822 ELSE -489197659 END) ISNULL)) ORDER BY DATE(((NULL) NOT BETWEEN (t0.c0) AND (0.05390436376038521)), ((t0.c34)-(t0.c60)), ((t0.c34) BETWEEN (t0.c60) AND (t0.c34)))  NULLS LAST, (((((t0.c0))==((t0.c60))))*(LIKE(t0.c34, t0.c34))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT (NOT (((t0.c60) NOT BETWEEN (t0.c0) AND (t0.c34)))) FROM t0 ORDER BY ((((NULL) NOT BETWEEN (t0.c34) AND (t0.c0)))IS NOT((t0.c60 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT LOWER(DISTINCT AVG(t0.c0)) FROM t0 WHERE ((((+ ('0.17750224087828115')))IS NOT(((((x'1173')OR(-5.76712488E8)))AND(NULL))))); -- 0ms;
SELECT CAST((t0.c0 IN ()) AS NUMERIC) FROM t0 WHERE (NULL COLLATE NOCASE); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER (), NULL, ((((t0.c0)>(t0.c34)))+(LTRIM(t0.c0))) FROM t0; -- 0ms;
SELECT ALL (+ ((((t0.c60)) NOT BETWEEN ((t0.c60)) AND ((t0.c0))))) FROM t0 WHERE (CASE ((x'')||(NULL))  WHEN (NOT (-1449627337)) THEN (('-1643234452')%(x'')) WHEN ((0.900683528698322) ISNULL) THEN ((0.46121712129104664) IS TRUE) WHEN ((0.07678561356391722) ISNULL) THEN x'' COLLATE RTRIM END) LIMIT -534643920 OFFSET 643101956; -- 0ms;
SELECT CASE WHEN ((t0.c60)LIKE(t0.c60)) THEN t0.c60 COLLATE RTRIM ELSE 'CS' END FROM t0 WHERE (0Xffffffffd834b50b); -- 0ms;
SELECT ALL (((0.3502183224459623)) NOT BETWEEN (((t0.c60 IN ()))) AND ((((t0.c60)+(t0.c60))))) FROM t0 GROUP BY 0.7628198907850045, (((t0.c34)) BETWEEN ((((t0.c60) NOTNULL))) AND ((t0.c34 COLLATE NOCASE))), CAST(((((t0.c60)AND(']kQPo K')))AND(t0.c0)) AS NUMERIC) HAVING UPPER(t0.c34) COLLATE BINARY; -- 0ms;
SELECT (- ((- (5.3238489013618384E-5)))) FROM t0 ORDER BY CAST(json_extract(t0.c34, t0.c34) AS NUMERIC) DESC, ((((t0.c0)IS(t0.c0))) IS TRUE)  NULLS LAST;SELECT CUME_DIST() OVER () FROM t0 WHERE (CASE ((x'') BETWEEN ('') AND (x''))  WHEN ((x'')<(0xffffffffb10646fa)) THEN ((((0xffffffff98239ff3)AND(0.7268292583969392)))AND(NULL)) ELSE ((('', '1904774938', 0.3464850021999567)) NOT BETWEEN ((1185212111, 0.8287008475215755, x'705c')) AND ((x'', -2.053633625E9, NULL))) END); -- 0ms;
SELECT ALL (((~ (t0.c0)))-(x'7ccb')) FROM t0 WHERE (''); -- 0ms;
SELECT ALL ((t0.c34 COLLATE NOCASE)==(CASE t0.c60  WHEN t0.c34 THEN NULL END)) FROM t0 WHERE ((((NOT (0.6215425361622462)))LIKE(x''))) ORDER BY t0.c34; -- 0ms;
SELECT DISTINCT (((((((((t0.c0 IN ()))AND(COUNT(*))))AND(t0.c0)))AND((t0.c0 IN (t0.c0)))))AND(CAST(t0.c34 AS TEXT))) FROM t0 WHERE ((('&G糏N,6U䝷' COLLATE BINARY) IS FALSE)); -- 0ms;
SELECT TOTAL(t0.c60) FROM t0 WHERE (CASE WHEN (-5.0521881E8 IN ()) THEN ((NULL)OR(0.9302879152907684)) WHEN (0xc02adb9 IN (x'')) THEN CASE ''  WHEN x'' THEN -133790163 ELSE 0x1b580e16 END WHEN ((x'')OR(NULL)) THEN 'lJ(U)' COLLATE RTRIM ELSE ((x'a92d35d8') ISNULL) END); -- 0ms;
SELECT DISTINCT t0.c0, (((((((((t0.c34 IN ()))AND(t0.c0)))OR(((t0.c60) NOT BETWEEN (t0.c34) AND (t0.c60)))))OR(((((t0.c0)OR(t0.c60)))OR(t0.c34)))))AND((((t0.c0)) BETWEEN ((t0.c60)) AND ((t0.c60))))), SUM(((((t0.c0)AND(t0.c34)))AND(t0.c0))) FROM t0; -- 0ms;
SELECT ALL (((json_array(t0.c0, t0.c60)))<((((((t0.c34)AND(0Xffffffffe0610904)))OR(t0.c0))))), AVG(((((t0.c60)OR(t0.c0)))OR(t0.c34))) OVER (), COUNT(t0.c34 COLLATE BINARY COLLATE NOCASE) OVER () FROM t0 WHERE (((CAST(NULL AS BLOB)) NOT BETWEEN (((1114580755) NOT NULL)) AND ((('-4798422') NOT BETWEEN ('48465451') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((LIKELIHOOD(DISTINCT t0.c0, 0.19023215147606232)) BETWEEN ((t0.c0 IN ())) AND (((t0.c60) NOTNULL))) FROM t0 WHERE (LIKELIHOOD(CAST('0.9974213427412919' AS INTEGER), 0.0014605742657848308)); -- 0ms;
SELECT DISTINCT t0.c34, CAST(json_extract(NULL, t0.c34) AS NUMERIC), ((LIKELIHOOD(t0.c60, 0.6154405634688356)) ISNULL) FROM t0 GROUP BY (+ (CASE t0.c34  WHEN t0.c0 THEN t0.c34 ELSE t0.c34 END)) HAVING ((('', t0.c60, t0.c60)) NOT BETWEEN (((t0.c0 IN ()), t0.c34 COLLATE NOCASE, CASE t0.c60  WHEN t0.c60 THEN t0.c34 ELSE t0.c34 END)) AND ((CAST(t0.c60 AS INTEGER), ((NULL)/(t0.c0)), (((t0.c34)) NOT BETWEEN ((t0.c0)) AND ((t0.c60)))))) ORDER BY (((((t0.c60)) NOT BETWEEN ((t0.c60)) AND (('	IJGaat')))) BETWEEN (t0.c34) AND (((((t0.c60)OR(t0.c0)))OR(t0.c0)))) ASC; -- 0ms;
SELECT ALL NULL FROM t0 WHERE ((((((NULL) IS FALSE)))>((ABS(DISTINCT 0Xffffffff92cb4b5a))))) ORDER BY t0.c34  NULLS LAST, CAST(((t0.c34) NOT BETWEEN (t0.c34) AND (t0.c60)) AS TEXT) DESC, ((((t0.c34)*(t0.c0))) NOT BETWEEN ((t0.c34 IN ())) AND (CAST(t0.c34 AS REAL))) DESC; -- 0ms;
SELECT DISTINCT ((((((((((t0.c60)OR(t0.c0)))AND(t0.c0)))AND(t0.c60)))AND(t0.c0)))<=(t0.c34)) FROM t0 WHERE (((((- (x'afcf'))))>=(((((NULL))<=(('-1e500'))))))) LIMIT 484029647; -- 0ms;
SELECT (((((t0.c60, x'cb29', t0.c0))<=((t0.c0, t0.c0, t0.c60)))) NOT BETWEEN (SUM('')) AND (((t0.c0) NOT BETWEEN (t0.c34) AND (t0.c34)))), (x'' IN (((t0.c0) NOTNULL), ((t0.c0)>=(t0.c0)))), (- (load_extension(t0.c60, -1040822948))) FROM t0 WHERE (json_array_length(((0xfffffffffa421d2b) ISNULL))) GROUP BY CAST((((0.3803362470604543)) BETWEEN ((t0.c0)) AND ((t0.c34))) AS NUMERIC) HAVING ((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c34)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT SUM((~ (t0.c0))) OVER (), HEX(DISTINCT t0.c60), TOTAL(((t0.c60) NOT NULL)) OVER () FROM t0 WHERE (CASE CASE WHEN x'' THEN 0.42391745743623965 WHEN x'' THEN NULL WHEN 'Dh' THEN 0.09134165951190576 ELSE NULL END  WHEN 0.35236330257442483 COLLATE BINARY THEN json_extract('2''', '1023667298') ELSE x'' END); -- 0ms;
SELECT DISTINCT ((((((((((t0.c60)<>(t0.c60)))AND(t0.c60 COLLATE NOCASE)))OR(((t0.c0)IS(t0.c34)))))OR(((t0.c34)*(t0.c34)))))OR((((t0.c0)) BETWEEN ((t0.c0)) AND (('-1531183739'))))), t0.c60, ((NOT (t0.c60)) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT t0.c34 FROM t0; -- 0ms;
SELECT CASE 'k&'  WHEN TRIM('-839141655', t0.c34) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c34) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN 0.9763984875935359 WHEN ((t0.c0)*(t0.c34)) THEN ((t0.c60) ISNULL) END FROM t0 WHERE (CAST((- (NULL)) AS INTEGER)); -- 0ms;
SELECT ALL CAST((t0.c34 IN ()) AS INTEGER), GROUP_CONCAT(((t0.c60) ISNULL)), CAST(CASE WHEN t0.c34 THEN t0.c34 ELSE t0.c60 END AS REAL) FROM t0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER ( RANGE  CURRENT ROW) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (t0.c0 COLLATE BINARY)) FROM t0 WHERE ((+ (((((x'')AND(8.72740736E8)))AND(x''))))); -- 0ms;
SELECT ALL ((HEX(t0.c0))*(SUM(t0.c34))) FROM t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT HEX('k#Bைd ') FROM t0 ORDER BY (((((((((((t0.c34)) NOT BETWEEN ((t0.c0)) AND ((t0.c60))))AND(CAST(t0.c34 AS BLOB))))AND(((t0.c60) BETWEEN (t0.c0) AND (t0.c60)))))OR(CAST(t0.c60 AS REAL))))OR(((t0.c60) BETWEEN (t0.c34) AND (t0.c0)))), (~ (t0.c0)) COLLATE RTRIM ASC, ((((t0.c34) BETWEEN (t0.c0) AND (t0.c0))) NOTNULL) ASC  NULLS FIRST LIMIT 1030098821; -- 0ms;
SELECT CASE (t0.c0 IN (t0.c34))  WHEN MIN(t0.c60) THEN CAST(t0.c0 AS BLOB) ELSE SUM(t0.c60) END FROM t0; -- 0ms;
SELECT ALL RANK() OVER ( RANGE ((((((((t0.c60)AND(t0.c60)))OR(t0.c34)))AND(t0.c34)))OR(NULL)) COLLATE BINARY PRECEDING) FROM t0;SELECT ALL (((t0.c0)) NOT BETWEEN ((((t0.c60) NOT BETWEEN (x'58b1') AND (t0.c34)))) AND ((((((t0.c0)AND(t0.c0)))AND(t0.c0))))) FROM t0; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT ((((t0.c34)AND(t0.c60)))OR(t0.c0))) FROM t0 INDEXED BY i58 WHERE ((((NULL) IS FALSE) IN ())); -- 1ms;
SELECT ((((- (t0.c34))))<=((((t0.c34)=(t0.c0))))) FROM t0 GROUP BY COALESCE(CASE x''  WHEN t0.c60 THEN t0.c0 END, CAST(t0.c0 AS INTEGER)), ((((+ (t0.c34))))>((((t0.c34) IS TRUE)))), CASE WHEN ((t0.c34)=(t0.c0)) THEN ((x'')%(t0.c0)) END; -- 0ms;
SELECT DISTINCT CAST(t0.c60 AS NUMERIC), (((((t0.c0)) BETWEEN ((t0.c60)) AND ((t0.c0))))GLOB(CAST(t0.c0 AS BLOB))), ((TRIM(NULL))<=((- (t0.c0)))) FROM t0; -- 0ms;
SELECT ((((((0.3767894458805874)OR(t0.c34)))AND(t0.c34))) ISNULL) FROM t0 WHERE ((((('Ẓ춸') IS FALSE)) ISNULL)); -- 0ms;
SELECT ALL 0.3206819416915484 FROM t0 WHERE ((((((('-2053633625') BETWEEN (NULL) AND (NULL)))AND(LIKELIHOOD(DISTINCT 0.4464317160628706, 0.638128734785209))))AND(CAST(x'' AS REAL)))); -- 0ms;
SELECT ALL LIKELY(DISTINCT 0.553488100606936 COLLATE BINARY) FROM t0 ORDER BY CASE WHEN ((t0.c0)+(t0.c34)) THEN t0.c60 COLLATE BINARY WHEN t0.c60 THEN (~ (t0.c0)) WHEN ((t0.c60) IS TRUE) THEN (+ (t0.c34)) END ASC; -- 0ms;
SELECT DISTINCT (((- (0.0561592438110724))) NOT BETWEEN (((t0.c34) BETWEEN (t0.c60) AND (t0.c60))) AND ((((('1751021579')OR(t0.c60)))AND(t0.c34)))) FROM t0; -- 0ms;
SELECT ALL ((NOT (t0.c60)) IN ((t0.c60 IN (t0.c60, t0.c60)), PRINTF(t0.c60))), LAG(((CASE WHEN t0.c60 THEN t0.c34 END)||(t0.c60)), 0.4187707236260658, ((((t0.c60) ISNULL)) NOT BETWEEN (((t0.c0)LIKE(t0.c60))) AND (((t0.c34) BETWEEN (t0.c34) AND (t0.c60))))) OVER (), (NOT (LOWER(t0.c34))), ((((((t0.c60)|(t0.c0)))AND(t0.c34 COLLATE BINARY)))AND((0.06474473073822828 IN ()))), COUNT(CAST(t0.c34 AS BLOB)) OVER () FROM t0 WHERE ((((x'')) NOT BETWEEN ((json_object(x'', 'Tm', NULL, 0.44963796321185867))) AND ((CAST(0.23746906125737977 AS INTEGER)))));SELECT ALL CASE ((t0.c34) NOT BETWEEN (t0.c0) AND (t0.c34))  WHEN (((t0.c34))<((t0.c0))) THEN t0.c34 COLLATE RTRIM END FROM t0 WHERE (CASE WHEN CAST(NULL AS INTEGER) THEN ((0.5794924079410294) NOT BETWEEN (NULL) AND ('')) ELSE CAST(NULL AS REAL) END) LIMIT 1830813204; -- 0ms;
SELECT TOTAL((t0.c60 IN (t0.c60))) OVER (), CASE 'Dd'  WHEN CAST(t0.c34 AS BLOB) THEN ((((t0.c60)AND(t0.c60)))AND(t0.c34)) END, t0.c0 FROM t0; -- 0ms;
SELECT DISTINCT CASE WHEN t0.c34 THEN t0.c0 WHEN -2056374159 THEN t0.c60 WHEN 'zP' THEN t0.c0 ELSE t0.c60 END COLLATE BINARY FROM t0 GROUP BY (((NOT (t0.c34))) NOT BETWEEN (((t0.c0)LIKE(t0.c34))) AND (CAST(t0.c60 AS NUMERIC))), LIKE(t0.c34 COLLATE BINARY, TYPEOF(t0.c0), ' '), (~ (t0.c34)) COLLATE BINARY; -- 0ms;
SELECT DISTINCT t0.c34, ((((t0.c0)>(t0.c60)))<(SUM(t0.c0))), NTILE(SQLITE_VERSION()) OVER () FROM t0 WHERE ((((('-319727450')/(0.2651184312140399)))-((((0.04902735471325581)) NOT BETWEEN (('-1903109721')) AND (('鼴Fn(	''nf')))))) LIMIT 246424667 OFFSET -9223372036854775808; -- 0ms;
SELECT DISTINCT t0.c34 FROM t0; -- 0ms;
SELECT AVG(CAST(t0.c0 AS NUMERIC)) FROM t0; -- 0ms;
SELECT DISTINCT (~ (((t0.c60)>(t0.c0)))) FROM t0 WHERE (x''); -- 0ms;
SELECT DISTINCT TOTAL(TOTAL((((t0.c60)) NOT BETWEEN ((t0.c34)) AND ((t0.c0))))) FROM t0 WHERE (((NULL) NOT NULL));SELECT CASE WHEN CASE WHEN t0.c34 THEN t0.c0 WHEN t0.c0 THEN '' WHEN t0.c34 THEN t0.c60 END THEN ((((((((t0.c34)AND(x'e14f')))AND(t0.c34)))AND(t0.c60)))AND(t0.c60)) END FROM t0; -- 0ms;
SELECT CASE WHEN JULIANDAY(t0.c60, t0.c60, t0.c34, t0.c0, t0.c0) THEN COUNT(*) END FROM t0 WHERE ('\y}PRU'); -- 0ms;
SELECT ALL ((((x'1977')AND((t0.c60 IN ()))))OR((- (t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT ((((((t0.c34)OR(t0.c34)))OR(t0.c34))) BETWEEN ((t0.c34 IN (t0.c60))) AND (CAST(t0.c34 AS NUMERIC))), LIKELIHOOD(((0.44870770133649884)+(t0.c34)), 0.5635523231593781), ((((t0.c60)<>(t0.c0)))&(t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((((x'')LIKE(t0.c34))) NOT BETWEEN (t0.c34 COLLATE RTRIM) AND (t0.c0)) FROM t0; -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)LIKE(t0.c60)))OR((('48465451') ISNULL))))OR((((t0.c60, t0.c0, t0.c34, t0.c60, t0.c0)) NOT BETWEEN (('-556594788', t0.c0, t0.c0, t0.c60, t0.c34)) AND ((t0.c34, t0.c60, t0.c0, t0.c0, t0.c34))))))AND((('0.32500664262216405')-(t0.c60)))))OR(CASE t0.c34  WHEN t0.c60 THEN t0.c60 WHEN t0.c0 THEN t0.c0 WHEN t0.c60 THEN t0.c34 END)) FROM t0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)); -- 0ms;
SELECT DISTINCT TOTAL(((((t0.c34)AND(t0.c0)))AND(t0.c34))) OVER () FROM t0 INDEXED BY i31;SELECT CASE t0.c0 COLLATE BINARY  WHEN ((t0.c60)||(t0.c34)) THEN CAST(t0.c34 AS REAL) ELSE t0.c0 END FROM t0 WHERE (CASE (('117957372')=(NULL))  WHEN CAST(x'' AS INTEGER) THEN (NOT (0.1251311936549726)) ELSE ((-1.32010441E8) NOT NULL) END); -- 0ms;
SELECT DISTINCT ((t0.c0)IS((t0.c0 IN ()))) FROM t0 WHERE ((((x'') NOT NULL) IN (CASE WHEN -1544480418 THEN NULL WHEN '-150272267' THEN x'6276' WHEN '0.015009107260229193' THEN NULL ELSE x'' END))); -- 0ms;
SELECT DISTINCT CAST((t0.c60 IN ()) AS INTEGER) FROM t0; -- 0ms;
SELECT DISTINCT (t0.c34 IN (t0.c60)) COLLATE BINARY, (((NOT (t0.c60))) BETWEEN ((NOT (t0.c60))) AND (CASE WHEN '' THEN t0.c34 END)), ((((t0.c34)) NOT BETWEEN ((t0.c34)) AND ((0.8840371644153099))) IN (TOTAL(t0.c0))) FROM t0; -- 0ms;
SELECT DISTINCT x'1f8e' FROM t0 WHERE (NULL); -- 0ms;
SELECT ALL ((t0.c34 COLLATE NOCASE)LIKE(t0.c0 COLLATE RTRIM)) FROM t0 ORDER BY UPPER(DISTINCT CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c60 END) DESC; -- 0ms;
SELECT DISTINCT ((((t0.c60) IS TRUE)) NOT BETWEEN (CAST(t0.c34 AS BLOB)) AND (MAX(t0.c60))) FROM t0; -- 0ms;
SELECT (CAST(t0.c34 AS TEXT) IN ()), GROUP_CONCAT(((t0.c60)<(t0.c60))), ((((((t0.c0)AND(x'')))AND('502001823'))) NOT BETWEEN (((t0.c0)LIKE(t0.c0))) AND (t0.c0 COLLATE RTRIM)) FROM t0; -- 0ms;
SELECT ALL ((SUM(t0.c0)) BETWEEN ((t0.c34 IN (t0.c34))) AND (((t0.c0)<(t0.c60)))) FROM t0; -- 0ms;
SELECT DISTINCT NULLIF(((t0.c0)IS NOT(t0.c60)), (((t0.c60, t0.c34, t0.c60))>((t0.c60, t0.c34, t0.c0)))) FROM t0 WHERE (((x'' COLLATE BINARY) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(t0.c60 AS NUMERIC) COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT ((((t0.c34)+(t0.c60)))&(((((t0.c34)OR(t0.c34)))OR(t0.c0)))), (~ (((t0.c0) NOT BETWEEN (NULL) AND ('-529467485')))), (- ((t0.c60 IN (t0.c34)))), (((((((t0.c60))>((t0.c60))))AND((t0.c60 IN (t0.c34)))))AND('1694966873')), ((((-1878015119 IN ()), (((t0.c60))!=((t0.c34))), CASE WHEN t0.c34 THEN t0.c60 END))=((((((NULL)AND(t0.c0)))OR(t0.c0)), ('-878146807' IN ()), (((t0.c0, t0.c34, NULL)) NOT BETWEEN ((t0.c60, t0.c60, t0.c60)) AND ((t0.c60, t0.c34, t0.c34)))))) FROM t0; -- 1ms;
SELECT NULL FROM t0 WHERE ((((x'8a29') NOTNULL) IN ())); -- 0ms;
SELECT DISTINCT ((SQLITE_COMPILEOPTION_GET(t0.c0))OR(0.08607192032805866)) FROM t0 WHERE (((1084492765)+(0.5403210512229422)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT 366662546 FROM t0; -- 0ms;
SELECT ((t0.c34) BETWEEN (t0.c60) AND (t0.c0)) COLLATE NOCASE FROM t0 GROUP BY (x'' IN ()), ((t0.c60)-(CAST(t0.c60 AS TEXT))), ((t0.c34) IS TRUE) LIMIT -1; -- 0ms;
SELECT COUNT('젇.7'), CAST((((t0.c60))<=((t0.c0))) AS NUMERIC), '^E' FROM t0; -- 0ms;
SELECT DISTINCT '1Mt\' FROM t0; -- 0ms;
SELECT DISTINCT t0.c0, ((NULL)%(((((t0.c34)OR(0.9717647508028869)))AND(t0.c34)))), GROUP_CONCAT((((t0.c34, t0.c34, t0.c34))<=((t0.c60, t0.c60, t0.c60)))) OVER () FROM t0 LIMIT -1508000961 OFFSET -671176277; -- 0ms;
SELECT DISTINCT ((((t0.c60) IS FALSE)) NOT BETWEEN ((t0.c0 IN ())) AND (CAST(t0.c60 AS NUMERIC))) FROM t0; -- 0ms;
SELECT DISTINCT ((t0.c34 IN ()) IN (((((t0.c34)OR('')))OR(t0.c0)), IFNULL(t0.c34, t0.c60))) FROM t0 ORDER BY CASE WHEN ((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c34)) THEN (((0xffffffffe0d8a348)) NOT BETWEEN ((t0.c34)) AND ((t0.c34))) END  NULLS LAST LIMIT -718164687; -- 0ms;
SELECT (t0.c0 IN ()) COLLATE NOCASE FROM t0; -- 0ms;
SELECT ALL (~ (CAST(t0.c34 AS TEXT))) FROM t0 WHERE ((NOT ((NOT (1.536330961E9))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c34)GLOB(t0.c60)))OR('-371518428')))OR(((t0.c0) NOTNULL))))OR(((t0.c0)>(t0.c60)))))OR(LOWER(DISTINCT t0.c0))) FROM t0 WHERE (CASE WHEN (('1084492765') BETWEEN (x'd0cb') AND (x'')) THEN CASE NULL  WHEN NULL THEN NULL WHEN NULL THEN x'54bb' WHEN '2108517860' THEN x'' ELSE -1.849572802E9 END ELSE ((x'51b8')*(NULL)) END) ORDER BY ((CASE t0.c0  WHEN t0.c60 THEN t0.c34 END)LIKE(((651796377)IS NOT(t0.c0)))), t0.c34; -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (NULL) AND (t0.c34))) IS TRUE) FROM t0 ORDER BY (+ ((((NULL))>((t0.c60)))))  NULLS LAST; -- 0ms;
SELECT DISTINCT (((+ (t0.c34))) NOT BETWEEN (((t0.c34)|(t0.c34))) AND (CAST(t0.c60 AS TEXT))) FROM t0 WHERE ((((NULL IN ()))IS(ABS(DISTINCT 0.3389756025493341)))); -- 0ms;
SELECT NULL FROM t0 WHERE (((('-1553592070')) BETWEEN (((NOT ('-1052134249')))) AND ((((x'') NOT BETWEEN (0.4373538379139579) AND (NULL)))))); -- 0ms;
SELECT CASE TOTAL(t0.c60)  WHEN x'' THEN ((t0.c34)&(t0.c0)) WHEN (- (t0.c34)) THEN CAST(t0.c60 AS REAL) WHEN ((t0.c60)IS(t0.c60)) THEN (- (t0.c34)) ELSE (((t0.c60))>((t0.c34))) END FROM t0; -- 0ms;
SELECT ALL (UPPER(t0.c0) IN ()) FROM t0; -- 0ms;
SELECT ALL TOTAL(CASE WHEN 'ZhKt]r,d' THEN t0.c34 END), CASE ((t0.c34)>>(t0.c60))  WHEN ((t0.c0) NOT BETWEEN (t0.c60) AND (t0.c34)) THEN UPPER(t0.c0) ELSE COUNT(t0.c0) END, ((CASE t0.c0  WHEN NULL THEN t0.c34 WHEN t0.c34 THEN t0.c60 WHEN t0.c60 THEN t0.c60 WHEN t0.c0 THEN NULL WHEN t0.c34 THEN t0.c0 ELSE t0.c60 END) NOT BETWEEN (UNLIKELY(t0.c0)) AND (((((NULL)AND(t0.c60)))OR(1887795604)))), (((t0.c34)) NOT BETWEEN ((((((((((t0.c34)OR(t0.c34)))OR(t0.c34)))OR(t0.c60)))OR(t0.c0)))) AND ((PRINTF(t0.c0)))), ((t0.c60)<>(t0.c34)) COLLATE BINARY FROM t0 UNION ALL SELECT ((((((((0.5620727375098508)AND(((((t0.c0)OR(t0.c0)))AND(t0.c60)))))OR(CASE t0.c0  WHEN t0.c0 THEN t0.c60 WHEN t0.c34 THEN t0.c60 WHEN t0.c34 THEN x'' ELSE t0.c60 END)))AND((NOT (t0.c60)))))AND(((((t0.c34)AND(t0.c34)))AND(t0.c0)))), COUNT(*), ((((t0.c34) IS FALSE))OR(CASE WHEN t0.c60 THEN 0.9056214609848355 ELSE t0.c34 END)), CASE t0.c0  WHEN (t0.c0 IN (t0.c34, t0.c34)) THEN SUM(t0.c0) END, (- (((t0.c0)GLOB(t0.c0)))) FROM t0 LIMIT 872740736; -- 0ms;
SELECT DISTINCT ((t0.c34) NOT NULL) FROM t0; -- 0ms;
