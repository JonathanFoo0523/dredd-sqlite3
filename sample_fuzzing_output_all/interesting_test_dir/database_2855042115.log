-- Time: 2024/06/07 09:22:15
-- Database: database15
-- Database version: 3.40.0
-- seed value: 2855042115
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE TABLE t0 (c0 INTEGER ); -- 0ms;
CREATE INDEX IF NOT EXISTS i63 ON t0(((((((((CAST(c0 AS NUMERIC))AND(ABS(DISTINCT c0))))OR((- (c0)))))AND(((c0) BETWEEN (c0) AND (c0)))))OR((c0 IN ()))) DESC) WHERE UPPER(((((c0)OR(c0)))OR(c0))); -- 1ms;
PRAGMA main.automatic_index = false; -- 0ms;
PRAGMA main.journal_mode; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET c0=0.6827173951678638; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.008363021241764579); -- 1ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.4675074548590522); -- 0ms;
PRAGMA integrity_check; -- 0ms;
END; -- 4ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.6827173951678638), (x''), (0.033091674581678276), (0.09870865065183632), (0.37104253331362713), (NULL), (x''), (0.4890404618090153), (x'1a07'); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE DELETE ON t0 BEGIN UPDATE OR ROLLBACK t0 SET (c0)=(x'');END; -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'5c11', c0=-1579306608, c0=x'' WHERE ((((((t0.c0) BETWEEN (NULL) AND (t0.c0)))OR((- (t0.c0)))))AND(((t0.c0)<=(t0.c0)))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=x'df2f' WHERE CAST((- (t0.c0)) AS INTEGER); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (NULL); -- 0ms;
ALTER TABLE t0 ADD COLUMN c47 BLOB; -- 1ms;
PRAGMA threads = 4373015328188044961; -- 0ms;
INSERT OR REPLACE INTO t0(c47, c0) VALUES (x'', NULL); -- 1ms;
UPDATE t0 SET c47=x'', c0=NULL WHERE (~ (LOWER(DISTINCT t0.c47))); -- 0ms;
UPDATE OR IGNORE t0 SET c47='-1745073006' WHERE CASE ((t0.c47)>=(t0.c47))  WHEN ((t0.c47)LIKE(t0.c47)) THEN (((t0.c47))>=((t0.c47))) ELSE (t0.c47 IN (NULL)) END; -- 0ms;
UPDATE OR IGNORE t0 SET c47=x'8cff' WHERE NULLIF(DISTINCT (~ (t0.c47)), ((t0.c0)IS(t0.c0))); -- 0ms;
INSERT OR IGNORE INTO t0(c0, c47) VALUES (NULL, x''); -- 0ms;
UPDATE t0 SET c47=-1.745073006E9; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2, c3, c4, +c5 INT , +c6 TEXT ); -- 1ms;
DROP TABLE IF EXISTS t0; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=(x'188d2ef4', 0.9852925391825373) WHERE ((((rt0.c6) NOTNULL)) BETWEEN (rt0.c2 COLLATE BINARY) AND ((((rt0.c1))>((rt0.c1))))); -- 0ms;
UPDATE OR IGNORE rt0 SET c4=x'' WHERE (NOT (TRIM(DISTINCT rt0.c4, rt0.c0))); -- 0ms;
UPDATE OR FAIL rt0 SET (c3, c3)=(x'', NULL) WHERE (((((rt0.c0))!=((rt0.c6)))) IS FALSE); -- 0ms;
INSERT OR IGNORE INTO rt0(c0) VALUES (NULL); -- 1ms;
ANALYZE; -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=x'7263', c0=NULL; -- 3ms;
INSERT OR ROLLBACK INTO rt0(c5, c0) VALUES (x'', x''), ('4J', '%-'), (661761535, 0.8124619281715022); -- 0ms;
INSERT OR ABORT INTO rt0(c6, c5) VALUES (NULL, '-1069500540'); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL; -- 1ms;
UPDATE OR IGNORE rt0 SET c4=NULL WHERE (('847549987')-((+ (rt0.c1)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c5) VALUES (1041462916), (x''), ('0.6827173951678638'); -- 2ms;
ROLLBACK TRANSACTION; -- 1ms;
UPDATE OR ROLLBACK rt0 SET (c2)=('0.4675074548590522'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c3)=(''); -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c5) VALUES (x'', ((CAST('j[y2e|-뷚' AS INTEGER))=(0.7093220002565425))); -- 0ms;
PRAGMA temp.legacy_file_format; -- 1ms;
COMMIT; -- 1ms;
UPDATE OR REPLACE rt0 SET c2='-1579306608' WHERE rt0.c5; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c4)=(x''); -- 0ms;
COMMIT TRANSACTION; -- 2ms;
INSERT OR IGNORE INTO rt0(c6) VALUES (NULL), (x''), (1); -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ANALYZE; -- 4ms;
INSERT OR IGNORE INTO rt0(c1, c3, c0, c6, c5, c2, c4) VALUES (NULL, x'4b3c', '|q', 0.4052514099595347, NULL, 55835953, 0.4675074548590522); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=('Infinity'); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c0=''; -- 1ms;
UPDATE OR IGNORE rt0 SET (c5, c0)=(x'', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=('-1069500540'); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c3) VALUES (x'052b'), ('0.37104253331362713'), ('-488391206'); -- 0ms;
UPDATE OR IGNORE rt0 SET c3=-1.579306608E9 WHERE ((((((((((rt0.c0)GLOB(rt0.c5)))OR(((rt0.c1) BETWEEN (rt0.c6) AND (rt0.c2)))))AND(rt0.c3)))OR((~ (rt0.c1)))))AND(CAST(rt0.c2 AS BLOB))); -- 1ms;
DELETE FROM rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR REPLACE INTO rt0(c2, c6) VALUES (NULL, 847549987); -- 1ms;
END; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c3, c1, c6) VALUES ('847549987', 'if', '0.4052514099595347', 0.16882751659730666, '-345156551'), (x'54bd', x'8bf2', '-1404863263', 0X1c812708, 0.21147507013164468), (0.4060750494369584, 'R\nH,Hc', '', '}O', x''); -- 0ms;
REINDEX RTRIM; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(918581753) WHERE CASE WHEN ((((rt0.c6)AND(rt0.c3)))AND(rt0.c3)) THEN (rt0.c6 IN (rt0.c4)) ELSE ((rt0.c3)&(rt0.c1)) END; -- 0ms;
PRAGMA temp.optimize; -- 0ms;
UPDATE OR FAIL rt0 SET (c3)=(-1745073006) WHERE (((rt0.c0, rt0.c6, rt0.c5)) BETWEEN ((((rt0.c5)/(rt0.c0)), (rt0.c2 IN ()), rt0.c6)) AND (((+ (rt0.c5)), ((rt0.c2) NOTNULL), (NOT (rt0.c4))))); -- 1ms;
BEGIN  TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c1) VALUES (x'88ec', NULL); -- 0ms;
ANALYZE; -- 1ms;
PRAGMA temp.short_column_names; -- 0ms;
UPDATE OR IGNORE rt0 SET c4=NULL WHERE rt0.c3; -- 1ms;
PRAGMA temp.integrity_check; -- 0ms;
UPDATE rt0 SET (c6)=(x''); -- 0ms;
REINDEX; -- 0ms;
ANALYZE temp; -- 0ms;
ANALYZE; -- 1ms;
UPDATE OR ABORT rt0 SET c2=x'18cf'; -- 0ms;
UPDATE rt0 SET c0='''v', c1=NULL WHERE CAST(CAST(rt0.c2 AS REAL) AS TEXT); -- 0ms;
UPDATE OR FAIL rt0 SET (c1)=('-1091050718') WHERE ((((json_array_length(rt0.c1))OR(CASE WHEN rt0.c3 THEN rt0.c5 ELSE rt0.c4 END)))AND(rt0.c2 COLLATE BINARY)); -- 0ms;
INSERT OR IGNORE INTO rt0(c1, c2, c6, c5, c4) VALUES ('0.16882751659730666', x'', NULL, 0.6827173951678638, 0.9948872638178318); -- 2ms;
ANALYZE; -- 0ms;
REINDEX  rt0; -- 0ms;
UPDATE OR IGNORE rt0 SET c6=NULL, c0=0X3e137684; -- 1ms;
COMMIT; -- 0ms;
INSERT OR ABORT INTO rt0(c3, c2, c1) VALUES (NULL, NULL, 0.11994502365773796), (x'2044', '\nuwE', ''), (NULL, '', 0.8124619281715022); -- 0ms;
INSERT OR FAIL INTO rt0(c4, c5, c6, c3) VALUES ('-1745073006', 'h', NULL, '661761535'); -- 1ms;
INSERT OR IGNORE INTO rt0(c6, c2) VALUES (0.09217771669160202, 0.9136807566600998); -- 1ms;
INSERT OR IGNORE INTO rt0(c0, c5, c2, c3, c1) VALUES (0.8747497103414258, NULL, ' ', 0.9948872638178318, '*୯z尒\'), (NULL, 0.9346350459697059, '847549987', ')1pt', -36130076), (x'', 0.21752219513856574, NULL, 'R\t', '}\r\nR	Si'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL CASE ((('⼡r--'))<>((rt0.c4)))  WHEN (((rt0.c1))==((rt0.c1))) THEN (rt0.c5 IN (rt0.c3)) WHEN COUNT(*) THEN ((rt0.c5) NOTNULL) WHEN CASE rt0.c1  WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c2 WHEN x'abc4' THEN rt0.c6 ELSE rt0.c6 END THEN (NOT (rt0.c5)) WHEN ((rt0.c0)<>(NULL)) THEN ((rt0.c5) NOTNULL) WHEN (NULL IN (rt0.c0, rt0.c4)) THEN CASE ''  WHEN rt0.c2 THEN rt0.c4 END ELSE 0.041428628279433055 END FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c6) NOTNULL) COLLATE RTRIM, (((((rt0.c3)<=(rt0.c3))))<((CASE rt0.c5  WHEN rt0.c2 THEN rt0.c3 END))), CASE WHEN ((rt0.c1) NOT NULL) THEN NULL ELSE ((rt0.c0) IS FALSE) END FROM rt0; -- 0ms;
SELECT ALL UNLIKELY(((((rt0.c2)OR(rt0.c5)))OR(rt0.c6))) FROM rt0 WHERE (((~ (NULL)) IN (json_object(NULL, '-488391206'), CASE WHEN NULL THEN 847549987 END)));SELECT DISTINCT (json_extract(rt0.c3, rt0.c6, rt0.c3, rt0.c4) IN ()), NULL, (~ (rt0.c3 COLLATE RTRIM)), ((rt0.c6 COLLATE NOCASE) NOT BETWEEN (QUOTE(rt0.c4)) AND (rt0.c4 COLLATE BINARY)), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c6))) ISNULL) FROM rt0 ORDER BY ((0x8fdda20)||((rt0.c1 IN ()))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL MAX(((rt0.c3)-(rt0.c1)) COLLATE BINARY) FROM rt0 WHERE ((CAST('-103019336' AS TEXT) IN ())); -- 0ms;
SELECT (((NULL, rt0.c1, rt0.c2)) NOT BETWEEN ((((((((((((((rt0.c2)AND(rt0.c4)))AND('1484842299')))OR(rt0.c5)))AND(0.21147507013164468)))AND(rt0.c2)))OR(rt0.c0)), rt0.c4 COLLATE BINARY, TOTAL(rt0.c1))) AND (((rt0.c4 IN ()), ((x'e10f')OR(rt0.c2)), TOTAL(rt0.c3)))) FROM rt0 WHERE ((- ((893321006 IN ())))); -- 1ms;
SELECT ((((((rt0.c5)!=(rt0.c4)))AND(LIKELY(x''))))AND(CAST(rt0.c0 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ())) NOTNULL), ((rt0.c5)<=(rt0.c0)) COLLATE BINARY, (- ((((NULL, rt0.c1, rt0.c5)) NOT BETWEEN ((rt0.c0, rt0.c3, rt0.c4)) AND ((rt0.c3, rt0.c6, rt0.c5))))) FROM rt0; -- 0ms;
SELECT ALL ((((((((((rt0.c6)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c6)))OR(rt0.c6))) NOT NULL), ((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE RTRIM, (~ (rt0.c5 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c5 IN (rt0.c3))) ISNULL), CASE (rt0.c1 IN (rt0.c0, x'cd07'))  WHEN COUNT(rt0.c6) THEN ((rt0.c3)<>(rt0.c3)) ELSE ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c4)) END, (+ (CASE WHEN rt0.c6 THEN rt0.c6 END)) FROM rt0 WHERE (((((((''))>=((x''))), (~ ('(\raf')), NULL))<>((IFNULL(DISTINCT 0.8246102511427551, '0.4060750494369584'), (x'' IN ()), ((('5crdj95&\'))>((''))))))) GROUP BY ABS(DISTINCT ((rt0.c4)+(rt0.c3))) HAVING '0.9852925391825373'; -- 1ms;
SELECT DISTINCT ((((rt0.c5)IS(rt0.c6))) BETWEEN (rt0.c5 COLLATE NOCASE) AND (CAST(rt0.c3 AS NUMERIC))), RANK() OVER (), ((CASE 1.041462916E9  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c3 THEN NULL ELSE rt0.c0 END)+(TOTAL(rt0.c6))) FROM rt0 LIMIT -1; -- 0ms;
SELECT ((CASE WHEN rt0.c3 THEN rt0.c3 END) BETWEEN (CAST(rt0.c5 AS TEXT)) AND (0.008363021241764579)) FROM rt0 WHERE (((CAST(0.007551697228777798 AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT ALL (~ (CAST(rt0.c6 AS BLOB))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c5)GLOB(rt0.c2))) ISNULL) FROM rt0 EXCEPT SELECT DISTINCT (((rt0.c6)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND (((- (rt0.c4))))) FROM rt0; -- 0ms;
SELECT ALL (NOT (NULL)), (((rt0.c1 IN ())) NOT BETWEEN ((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0)))) AND (0.17296317900427838)), (- (((x'') NOT NULL))) FROM rt0 WHERE (CAST((('-213392986')>('-103019336')) AS BLOB)); -- 0ms;
SELECT ((((AVG(rt0.c0))OR(rt0.c3 COLLATE RTRIM)))OR(CASE rt0.c3  WHEN rt0.c2 THEN rt0.c5 END)) FROM rt0 WHERE (((CAST('-36130076' AS BLOB))OR((('918581753')+(NULL))))); -- 0ms;
SELECT CAST(MIN(rt0.c2) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4)-(rt0.c2))) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT (rt0.c3 COLLATE BINARY IN ()) FROM rt0 WHERE ('') GROUP BY (((rt0.c1 IN ())) ISNULL); -- 0ms;
SELECT LIKELIHOOD(DISTINCT CAST(rt0.c0 AS NUMERIC), 0.9684407842400814) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN ((rt0.c0 IN ())) AND ('^Y*' COLLATE BINARY)) FROM rt0 WHERE (((((-1324090556) IS TRUE)) NOT BETWEEN (x'' COLLATE BINARY) AND (((NULL) IS FALSE)))); -- 0ms;
SELECT DISTINCT rt0.c5 FROM rt0; -- 0ms;
SELECT ')' FROM rt0 WHERE (CASE ((x'') NOT NULL)  WHEN CASE WHEN 0.7910853720252506 THEN x'' WHEN '55835953' THEN x'' WHEN -3.45156551E8 THEN x'' END THEN ((((((((1.7976931348623157E308)AND('Yo')))AND('')))OR(x'4664')))AND(x'0531')) ELSE CAST(NULL AS TEXT) END); -- 0ms;
SELECT DISTINCT (((~ (rt0.c1)))<<((rt0.c6 IN ()))) FROM rt0 WHERE ((((0.28437471625088806)*('-1069500540')) IN ())); -- 0ms;
SELECT (((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) BETWEEN ((rt0.c1 IN ())) AND (((rt0.c4) IS FALSE))), CAST(rt0.c2 COLLATE NOCASE AS REAL), json_array(TOTAL(rt0.c4), (('637000764') IS TRUE), '>Nl昊린歹ms', TRIM(DISTINCT rt0.c5, rt0.c3)) FROM rt0 LIMIT -605396979; -- 0ms;
SELECT ALL CASE WHEN rt0.c5 COLLATE BINARY THEN ((rt0.c6)>(rt0.c5)) ELSE CASE rt0.c0  WHEN rt0.c0 THEN rt0.c6 END END FROM rt0 WHERE (LIKELY(DISTINCT (((('304637450')AND(NULL)))AND(NULL)))); -- 0ms;
SELECT DISTINCT LAG(LIKELY(DISTINCT CAST(rt0.c1 AS BLOB)), ((((rt0.c0)IS(rt0.c5))) NOTNULL), rt0.c1) OVER (), TRIM(CAST(-3.82355024E8 AS INTEGER), '-1359042348' COLLATE RTRIM), ((((rt0.c2)AND(rt0.c4))) IS FALSE) FROM rt0; -- 0ms;
SELECT (((~ (rt0.c3))) ISNULL), CAST((rt0.c0 IN ('-B/o6k,m喴')) AS REAL), ((CAST(rt0.c3 AS BLOB)) ISNULL) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE (((((((('331318192')AND(x'')))AND('-382355024'))))<((('-866190496' IN ()))))) ORDER BY ((LIKELY(rt0.c6)) BETWEEN ((((rt0.c2)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4)))) AND (((rt0.c6)||(rt0.c2)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT rt0.c2, (NOT (TOTAL(rt0.c6))), (((CAST(rt0.c0 AS INTEGER), AVG(rt0.c0), '#{S3YB'))>((rt0.c0, ((rt0.c3)IS NOT(rt0.c3)), CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c2 END))) FROM rt0 WHERE ((('331318192') BETWEEN (0.3412710955865339) AND (0.6905583208241864)) COLLATE BINARY); -- 0ms;
SELECT DISTINCT SUM(((((rt0.c3)OR(rt0.c2)))OR(rt0.c3))) OVER () FROM rt0 WHERE ((((((('{1G')&('156583259')))OR((((NULL, 0.8747497103414258, x'2a53')) BETWEEN ((x'', x'677a', x'')) AND ((x'7d45', '', x'10a5'))))))AND(CASE WHEN '0.9852925391825373' THEN '0.9346350459697059' END))); -- 0ms;
SELECT (((NOT (rt0.c1))) NOT BETWEEN ((rt0.c3 IN ())) AND (CAST(rt0.c6 AS BLOB))), ((((((((rt0.c0)OR(((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR(((rt0.c0)+(rt0.c0)))))AND(UNLIKELY(DISTINCT rt0.c6))))OR(0xffffffffdbea600d)), (NOT (((rt0.c1) ISNULL))) FROM rt0 WHERE ((((('-382355024') IS TRUE)) ISNULL)); -- 0ms;
SELECT ALL ((rt0.c5)=(rt0.c0 COLLATE RTRIM)) FROM rt0 ORDER BY 0.1794955075579563  NULLS LAST; -- 0ms;
SELECT ((rt0.c0)IS NOT(rt0.c2)) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT ALL (((- (rt0.c2)))-((rt0.c1 IN ()))) FROM rt0; -- 0ms;
SELECT ((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c2)) COLLATE BINARY FROM rt0 WHERE ((((NULL IN ())) BETWEEN (((0.487334995915222)>>(0x38238e50))) AND ((((NULL)) BETWEEN ((0.36187925029158385)) AND ((-1.839727979E9)))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c6 AS TEXT))*('-1411659919' COLLATE BINARY)), ((((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0)))))>=((rt0.c0))), (((((((((((((~ (NULL)))OR(((rt0.c4)%(rt0.c4)))))AND(((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c5)))))OR(rt0.c4 COLLATE RTRIM)))OR(x'' COLLATE NOCASE)))OR(((rt0.c1) IS TRUE))))AND((+ (rt0.c6)))), CAST('-136981845' AS NUMERIC) COLLATE RTRIM, 0.024936585593030913 FROM rt0 WHERE ((+ ((((('''38uN')AND(0.008363021241764579)))AND(0xffffffffec713252))))); -- 0ms;
SELECT 0.4052514099595347 FROM rt0; -- 0ms;
SELECT ('R!t' IN ()) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c5 IN ()))>>(rt0.c3 COLLATE BINARY)) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c5)<<(rt0.c3)))*(CAST(rt0.c4 AS NUMERIC))) FROM rt0 WHERE ((('822682341') BETWEEN (x'c312') AND ('331318192')) COLLATE BINARY); -- 0ms;
SELECT ALL (+ (((rt0.c3)IS(rt0.c3)))) FROM rt0 WHERE (((NULL COLLATE BINARY)IS NOT(((NULL) NOTNULL)))); -- 0ms;
SELECT GROUP_CONCAT(((rt0.c6) NOT BETWEEN (rt0.c1) AND (rt0.c3)) COLLATE RTRIM) FROM rt0; -- 0ms;
SELECT DISTINCT (((x'', 'TK', rt0.c1, rt0.c6, rt0.c3)) NOT BETWEEN (((- (rt0.c2)), CASE rt0.c0  WHEN rt0.c4 THEN rt0.c6 ELSE rt0.c2 END, COUNT(*), (rt0.c6 IN ()), rt0.c6)) AND ((((((((((rt0.c2)AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c3)))AND(rt0.c5)), (- (rt0.c5)), IFNULL(DISTINCT rt0.c1, x''), ((rt0.c5) BETWEEN ('lOS6Ia?') AND (rt0.c4)), (+ (rt0.c3))))), (+ (TRIM(rt0.c0))), (MAX(rt0.c2) IN ()) FROM rt0 WHERE (DATETIME(0.6967796212056871, CASE ''  WHEN 0.4883911789904867 THEN '' ELSE 0.5435068357122269 END, CHANGES())); -- 1ms;
SELECT DISTINCT ((((rt0.c1)%(rt0.c6)))>>((- (rt0.c5)))) FROM rt0 WHERE ((NOT ((((x'5276'))<((0.3608081751422014)))))); -- 0ms;
SELECT ((CASE WHEN -1.46011851E9 THEN rt0.c4 END) BETWEEN (((rt0.c6)%(rt0.c5))) AND ((rt0.c3 IN ()))) FROM rt0 WHERE (x''); -- 0ms;
SELECT (((rt0.c0)) NOT BETWEEN ((CAST(rt0.c2 AS REAL))) AND ((((x'') NOT BETWEEN (rt0.c6) AND (rt0.c6))))) FROM rt0 GROUP BY (((rt0.c5)) NOT BETWEEN ((IFNULL(rt0.c5, rt0.c2))) AND ((rt0.c4 COLLATE BINARY))) HAVING ((((IFNULL(rt0.c4, rt0.c4))AND(((rt0.c5)<>(rt0.c6)))))AND(((rt0.c4)&(rt0.c4)))); -- 0ms;
SELECT DISTINCT ((((NULL)*(rt0.c5)))>=('')) FROM rt0 WHERE ((~ (1041462916))); -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS NUMERIC)) BETWEEN (rt0.c1 COLLATE NOCASE) AND (CAST(rt0.c5 AS BLOB))) FROM rt0 WHERE (json_array_length((('1020281693')GLOB(x'')))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE (x'') LIMIT -1366075798 OFFSET -1745073006; -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE (CAST((NOT ('-103019336')) AS BLOB)); -- 0ms;
SELECT DISTINCT ((('-1460118510', MAX(rt0.c1), (- (rt0.c3))))<((((rt0.c0) BETWEEN (rt0.c5) AND (rt0.c2)), rt0.c6, 0.9421899737845343))), ((AVG(rt0.c6)) IS FALSE), ((((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c5))) NOT BETWEEN (rt0.c4) AND (CAST(rt0.c2 AS REAL))) FROM rt0 GROUP BY CAST(rt0.c4 AS NUMERIC) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT (((((((rt0.c6)AND(rt0.c3)))AND(rt0.c4))))>=((((rt0.c5)>=(rt0.c4))))), (~ (DATE(rt0.c2, rt0.c2, rt0.c1))), GROUP_CONCAT(CASE rt0.c5  WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c6 ELSE x'' END) FROM rt0 WHERE ((+ ((NOT ('lp'))))); -- 0ms;
SELECT ALL CASE WHEN ABS(DISTINCT rt0.c0) THEN ((rt0.c1) NOT BETWEEN (rt0.c6) AND (rt0.c5)) WHEN 0.41996506201119443 THEN rt0.c6 COLLATE BINARY WHEN (((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c5))) THEN ((rt0.c3) NOTNULL) ELSE CAST(rt0.c1 AS BLOB) END FROM rt0; -- 0ms;
SELECT COUNT(((rt0.c1)||(rt0.c6))) FROM rt0; -- 0ms;
SELECT (((rt0.c3, rt0.c6, rt0.c5)) BETWEEN ((CASE WHEN rt0.c5 THEN rt0.c0 ELSE rt0.c5 END, CAST(rt0.c3 AS TEXT), (rt0.c0 IN ()))) AND ((rtreenode(rt0.c6, rt0.c0), (+ (rt0.c6)), CASE WHEN rt0.c3 THEN rt0.c4 END))) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3)) COLLATE BINARY) OVER () FROM rt0 WHERE (((CAST(NULL AS NUMERIC))IS NOT('撱F#r,d鳈' COLLATE NOCASE))); -- 0ms;
SELECT ALL ((rt0.c0) IS TRUE) COLLATE NOCASE FROM rt0 ORDER BY '0.21147507013164468'; -- 0ms;
SELECT DISTINCT ((((CASE WHEN 0x710f3700 THEN x'' END)AND(((rt0.c0)OR(rt0.c4)))))AND(CASE WHEN rt0.c6 THEN rt0.c0 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 END)), 1601579128, CAST((+ (rt0.c3)) AS TEXT), CAST(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END AS INTEGER), ((((rt0.c6))>=((rt0.c0))) IN ()) FROM rt0 WHERE (x'4214') LIMIT -934765368 OFFSET -1469836995; -- 0ms;
SELECT ALL (TOTAL(rt0.c2) IN (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c6)*(rt0.c2))) FROM rt0 WHERE ((((0.5636921045800309)/('893321006')) IN ((+ (NULL))))); -- 0ms;
SELECT ((((CAST(rt0.c3 AS TEXT))OR(((rt0.c3) IS FALSE))))OR(CASE WHEN rt0.c3 THEN 0.41996506201119443 ELSE rt0.c3 END)) FROM rt0 WHERE ('2039974156' COLLATE NOCASE); -- 0ms;
SELECT CASE WHEN rt0.c4 COLLATE NOCASE THEN CAST(rt0.c0 AS INTEGER) ELSE ((((rt0.c5)OR(rt0.c6)))OR(rt0.c4)) END FROM rt0 WHERE (((('2039974156')) NOT BETWEEN ((x'')) AND ((0.9281032149234448))) COLLATE NOCASE); -- 0ms;
SELECT CUME_DIST() OVER (), (+ ((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))))), ((NULLIF(rt0.c4, rt0.c3)) NOT BETWEEN (rt0.c5 COLLATE RTRIM) AND (rt0.c2)) FROM rt0 WHERE (((((((0.8012352537564242) NOT NULL))OR(UPPER(0Xffffffffd6632af4))))AND((x'' IN ())))); -- 0ms;
SELECT DISTINCT (MAX(rt0.c6) IN ()) FROM rt0; -- 1ms;
SELECT DISTINCT ((CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL COUNT(*) OVER (), TOTAL(CASE WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c4 END) OVER (), (((+ (rt0.c0))) IS FALSE) FROM rt0 ORDER BY CAST(rt0.c6 COLLATE NOCASE AS NUMERIC)  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((highlight(rt0.c0, 0.6377363164329325, rt0.c5, rt0.c1), CAST(rt0.c3 AS REAL), ((rt0.c5)/(rt0.c3))))>=(('tX\\<&HN', ((((((((rt0.c6)OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c3)))AND(rt0.c1)), MAX(rt0.c5)))), TOTAL(rt0.c5 COLLATE BINARY COLLATE BINARY), STRFTIME(rt0.c0, rt0.c0, rt0.c0) COLLATE RTRIM FROM rt0 WHERE (CAST((('0.5435068357122269')+('INFINITY')) AS NUMERIC));SELECT ALL ((((CAST(rt0.c1 AS BLOB))AND(rt0.c0)))AND(-294671976)) FROM rt0; -- 0ms;
SELECT DISTINCT NULL, (rt0.c4 IN ()) COLLATE NOCASE, ((rt0.c0)||(TRIM(rt0.c2))) FROM rt0 LIMIT -1839727979 OFFSET -213392986; -- 0ms;
SELECT DISTINCT (((rt0.c4))==((((rt0.c2)IS(rt0.c0))))) FROM rt0 WHERE ((('0.17296317900427838')IS('yp')) COLLATE RTRIM) GROUP BY ((x'')||((~ (rt0.c3)))), (((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c3))))>=((((rt0.c6)LIKE(rt0.c1))))), ((((rt0.c1)<=(rt0.c4))) NOT BETWEEN (UPPER(rt0.c1)) AND (x'')), (((rt0.c0, rt0.c4, rt0.c3)) NOT BETWEEN (((NOT (rt0.c6)), (+ (rt0.c0)), ABS(DISTINCT rt0.c6))) AND ((rt0.c0 COLLATE RTRIM, CAST(rt0.c3 AS NUMERIC), rt0.c1 COLLATE BINARY))), ((((rt0.c0)LIKE(rt0.c1)))IS((rt0.c6 IN (rt0.c1)))); -- 0ms;
SELECT ((((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c2))) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL (((((NOT (rt0.c1)))OR(rt0.c0)))AND(CAST(NULL AS INTEGER))) FROM rt0 WHERE ((((-328125870 IN ('-213392986'))) NOT BETWEEN (((x'')=(NULL))) AND ((('')OR(NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)LIKE(((rt0.c6) BETWEEN (rt0.c6) AND (rt0.c6)))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c6 FROM rt0 WHERE ((((((('[''')AND(0.818185501853607)))AND(0.28040076254658575))) IS TRUE)); -- 0ms;
SELECT LEAD((rt0.c6 IN ()) COLLATE NOCASE, (((CAST(rt0.c0 AS NUMERIC)))>((((((rt0.c6)AND(rt0.c6)))OR(rt0.c6))))), (((rt0.c5)*(rt0.c4)) IN ())) OVER () FROM rt0 WHERE ((((TRIM(NULL)))<>(((('')+(x'')))))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) NOTNULL) FROM rt0 WHERE (load_extension('.觵	늜' COLLATE RTRIM, HEX('2039974156')));SELECT DISTINCT (((((rt0.c1)AND(rt0.c3)))AND(rt0.c1)) IN ()) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED((((((((((((((((('.觵	늜')AND(NULL)))AND(x'')))OR(x'45b1')))AND(0.6834387537880634)))OR(0.487334995915222)))AND('i>_M5r')))AND(0.43814271770350777)))AND(x'8645')))); -- 0ms;
SELECT DISTINCT x'', LIKELIHOOD((((rt0.c0)) BETWEEN ((rt0.c5)) AND (('1315113839'))), 0.024408895481298765), ((((((rt0.c0)AND(NULL)))OR(rt0.c5))) BETWEEN ((((rt0.c2, rt0.c1, rt0.c5)) NOT BETWEEN ((rt0.c3, rt0.c2, rt0.c4)) AND ((rt0.c5, rt0.c6, rt0.c3)))) AND (CAST(rt0.c6 AS BLOB))) FROM rt0 UNION ALL SELECT DISTINCT COUNT(*), (((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c5)) IN (((rt0.c6) IS TRUE), (((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1))))), COUNT((rt0.c4 IN ())) OVER () FROM rt0; -- 0ms;
SELECT CASE WHEN (rt0.c3 IN ()) THEN ((rt0.c6)LIKE(rt0.c4)) END FROM rt0 ORDER BY CAST(((((rt0.c3)OR(x'')))AND(rt0.c0)) AS NUMERIC) ASC, ((rt0.c3 COLLATE RTRIM)==((('1645770401')<(rt0.c6))))  NULLS FIRST, (- ((((rt0.c5)) BETWEEN ((rt0.c6)) AND ((rt0.c5)))))  NULLS LAST; -- 0ms;
SELECT rt0.c5 COLLATE BINARY FROM rt0 WHERE (CAST(0.26724500535148865 AS INTEGER) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((rt0.c3)) BETWEEN ((COUNT(rt0.c1))) AND ((CAST(rt0.c3 AS NUMERIC)))) FROM rt0 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT DISTINCT rt0.c5 FROM rt0 WHERE (json_extract(x'', ((NULL)*('')), CAST(NULL AS INTEGER), CAST('*U' AS BLOB))) LIMIT -914898693;SELECT ((NULL) NOT BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c0 END) AND (((rt0.c6)<<(0.37457713011335325)))), (((- (rt0.c5)))>(LAST_INSERT_ROWID())), ((x'')LIKE((((NULL)) BETWEEN ((rt0.c3)) AND ((x''))))) FROM rt0 WHERE (CASE WHEN 0.6384905615608196 COLLATE NOCASE THEN HEX(x'') ELSE ((2.039974156E9)IS NOT(x'')) END); -- 0ms;
SELECT DISTINCT ((((((rt0.c4)AND(rt0.c5)))OR(rt0.c3)))>=(((rt0.c6) NOT BETWEEN (rt0.c3) AND (rt0.c1)))) FROM rt0 ORDER BY ((CAST(rt0.c1 AS NUMERIC)) NOTNULL); -- 0ms;
SELECT DISTINCT ((((((((((0.6031200536564734) BETWEEN (rt0.c4) AND ('0.6834387537880634')))OR(((rt0.c6)<(rt0.c4)))))OR(LIKELY(DISTINCT rt0.c1))))AND(((rt0.c0)>(rt0.c6)))))OR(((rt0.c2)GLOB(0Xfffffffff07cd674)))) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (+ (rt0.c4)) THEN CAST(0.05095993274387911 AS INTEGER) WHEN ((((rt0.c3)AND(rt0.c6)))OR(rt0.c4)) THEN CASE WHEN rt0.c5 THEN rt0.c5 END WHEN ((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c4)) THEN ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c1)) ELSE ((rt0.c5)>(rt0.c2)) END FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c2 IN ()) COLLATE NOCASE FROM rt0 WHERE ((((0.8220394256446584 IN ())) NOT BETWEEN (((((((((((((NULL)OR(NULL)))OR(x'')))OR(0.9346350459697059)))AND(1893321236)))AND('0.28040076254658575')))AND(x''))) AND ((('-103019336') BETWEEN ('0.7910853720252506') AND ('-1324090556'))))); -- 1ms;
SELECT DISTINCT rt0.c2 FROM rt0 WHERE (json_array(x'' COLLATE NOCASE, (- ('-425780273')), ('803579940' IN ()), '-1121482251'));SELECT DISTINCT ((NULL) IS TRUE) FROM rt0 WHERE (CASE TYPEOF('1249101427')  WHEN x'' THEN (('-2024302043')<(0.02191026983423172)) END) GROUP BY ((((CAST(rt0.c3 AS INTEGER))AND(((rt0.c0) NOT BETWEEN ('158518418') AND (rt0.c2)))))AND(((rt0.c5)|(rt0.c6)))), NULL, '-1829526021'; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (((((((('-605396979'))<=((564620499))))AND(NULLIF(DISTINCT -2.60254092E8, x'94b2283b'))))OR((((NULL)) NOT BETWEEN ((NULL)) AND ((NULL)))))); -- 0ms;
SELECT rt0.c0, CASE ((rt0.c4) NOT NULL)  WHEN ((((((((rt0.c5)OR(rt0.c2)))AND(rt0.c6)))AND(rt0.c5)))AND(rt0.c0)) THEN (((rt0.c4))<=((x''))) END, ((((rt0.c1)-(rt0.c4)))<(((rt0.c0)>(rt0.c5)))) FROM rt0 WHERE (((CASE '%y'  WHEN '썐[8o[짿h''W' THEN '' ELSE 0.0783943570664829 END) NOT BETWEEN ((~ (NULL))) AND ((~ (NULL))))) ORDER BY ((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c5)))!=((NOT ('')))) ASC; -- 0ms;
SELECT LOWER(((rt0.c4) ISNULL)), (((rt0.c2 IN ('4J', rt0.c5)))%(((rt0.c5)LIKE(rt0.c1)))), (+ (((((rt0.c0)AND(rt0.c4)))OR(rt0.c1)))) FROM rt0; -- 1ms;
SELECT DISTINCT (((rt0.c0))!=(((- (rt0.c4))))) FROM rt0 WHERE ((((NULL COLLATE RTRIM, ((0X3d14f4e1) NOT BETWEEN ('') AND ('1364495305')), (((('yo')OR('1622867953')))AND('BJ')), ((((((((((((-294671976)AND(NULL)))AND(4.78226184E8)))AND('-1069500540')))OR(0.2631308580900483)))AND(NULL)))AND(NULL)), NULL))>=(((((NULL, 0.5747715436934098, '1020281693')) BETWEEN ((NULL, '478226184', '2066185499')) AND (('-1490306810', '1502876619', 1896822528))), ((((x'8fce')OR('b|{6')))OR('\kZ')), ((x'') IS TRUE), (x'' IN ()), ((0.9979251154336277) NOT BETWEEN ('-291239110') AND (0X353fd31)))))); -- 0ms;
SELECT DISTINCT CASE '0.7093220002565425'  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c5 END COLLATE BINARY FROM rt0 WHERE (((((('-382355024') NOT BETWEEN (0.7327847724192244) AND (''))))<>((((('-36130076')) BETWEEN (('907480280')) AND ((0.39043668829540445))))))); -- 0ms;
SELECT DISTINCT ((CASE rt0.c3  WHEN '1017655619' THEN rt0.c1 ELSE rt0.c2 END) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT 478226184 FROM rt0; -- 0ms;
SELECT CUME_DIST() OVER ( ROWS BETWEEN ((((rt0.c6) NOTNULL)) NOT BETWEEN (((rt0.c6)-(rt0.c1))) AND (((rt0.c4)>(rt0.c4)))) PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE NO OTHERS) FROM rt0; -- 0ms;
SELECT DISTINCT (+ ((rt0.c3 IN (rt0.c0)))), rt0.c5, CAST(((rt0.c3)>=(rt0.c2)) AS TEXT) FROM rt0; -- 0ms;
SELECT ALL LAG(x'', (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c6)) IN ()), (NOT (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c5))))) OVER () FROM rt0 WHERE ((((((('352247085') IS FALSE))OR((('2066185499')>(0.37349088366305194)))))AND(((x'') NOT NULL)))) LIMIT 1407598401; -- 0ms;
SELECT DISTINCT NULL, CAST(rt0.c5 AS BLOB) COLLATE BINARY, DENSE_RANK() OVER () FROM rt0 WHERE (UPPER(((NULL)/(x'612b')))); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_USED(rt0.c1 COLLATE BINARY) FROM rt0 WHERE (0.7037576120713557); -- 0ms;
SELECT DISTINCT x'1002' FROM rt0 WHERE (HEX(((x'') NOT BETWEEN ('W3⌰%6f怖F') AND (8.22682341E8)))); -- 0ms;
SELECT CAST((((rt0.c5)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c0))) AS REAL) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1 IN ()))&(AVG(rt0.c1))), LIKELIHOOD(rt0.c0, 0.5851447277866786) COLLATE RTRIM, GROUP_CONCAT(((((NULL)OR(rt0.c6)))OR(rt0.c3))) FROM rt0 WHERE (CASE WHEN CAST(NULL AS REAL) THEN CASE WHEN 'yp' THEN NULL END ELSE ((0.8040132885754777) IS TRUE) END); -- 0ms;
SELECT (((((rt0.c1))<((rt0.c0))))>=(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0 WHERE (((((x'ffda')/(0x4f622343)))=('2066185499' COLLATE RTRIM))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0 WHERE (((((0.8220394256446584)+(0.535052838287411)))=(NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((((rt0.c2)&(rt0.c0)))AND(((rt0.c2)<(rt0.c3)))))AND(TOTAL_CHANGES())) FROM rt0 WHERE (((((((((((x'') BETWEEN (0.32295521396043314) AND (0.4952476436565424)))OR(((NULL) ISNULL))))AND(((NULL)GLOB('{}')))))OR(CASE WHEN NULL THEN -1404863263 ELSE x'' END)))OR((x'' IN ())))); -- 0ms;
SELECT ALL -8.66190496E8 FROM rt0; -- 0ms;
SELECT (rt0.c0 IN ()) FROM rt0 WHERE ((((((NULL, 0.21989037165124026, 'b', '*!%', ''))<=((x'', '-1814774955', 0.18689593012008754, -3.45156551E8, NULL))))LIKE(((0.7579987159187227)<(x'0a24'))))); -- 0ms;
SELECT GROUP_CONCAT((rt0.c3 IN (rt0.c3, rt0.c2))) OVER ( ORDER BY ((rt0.c6) NOT BETWEEN (((((rt0.c1)AND(rt0.c4)))OR(rt0.c2))) AND ((((rt0.c4)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c6))))), CAST(((rt0.c6)IS NOT(rt0.c6)) AS NUMERIC) DESC  NULLS FIRST) FROM rt0; -- 0ms;
SELECT ALL (('-213392986')-((((rt0.c0))>(('[M'))))) FROM rt0; -- 0ms;
SELECT ((630150494)OR(((((rt0.c5)AND(0.30002415904288804)))AND(rt0.c4)))) FROM rt0 GROUP BY 531575010;SELECT CAST(MIN(rt0.c2) AS NUMERIC) FROM rt0 WHERE (CAST((('UM⫴#jm,Jp')IS('-1497651249')) AS TEXT)); -- 0ms;
SELECT ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 END)GLOB(((((rt0.c3)AND(rt0.c5)))OR(NULL)))), ((((rt0.c4)AND(rt0.c6)))OR(rt0.c4)) COLLATE NOCASE, ((((NULL)OR('#{S3YB')))|(((rt0.c2) NOT NULL))) FROM rt0 LIMIT 1249101427; -- 0ms;
SELECT DISTINCT json_insert(((((((((rt0.c5)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c6)))AND(rt0.c3)), ((rt0.c5) ISNULL), MIN(rt0.c6)) FROM rt0 WHERE ((~ (CASE WHEN 0.6185388301242393 THEN NULL WHEN x'' THEN NULL WHEN 'Cc\n0⹣N' THEN x'' END))); -- 1ms;
SELECT ALL CASE ((rt0.c4)*(rt0.c5))  WHEN (- (rt0.c1)) THEN ((rt0.c2) BETWEEN (rt0.c6) AND (rt0.c6)) END FROM rt0; -- 0ms;
SELECT CAST(CAST(rt0.c0 AS TEXT) AS TEXT) FROM rt0; -- 0ms;
SELECT ((((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c4)))))<>(((rt0.c5 IN ())))) FROM rt0 WHERE ((((((((((~ ('907480280')))AND(CAST(x'0d82' AS NUMERIC))))AND((('>糡7モybCus') NOT NULL))))AND('249831399' COLLATE NOCASE)))OR(0.23825883456778785 COLLATE BINARY))) ORDER BY CAST(((rt0.c3) IS TRUE) AS NUMERIC) ASC; -- 0ms;
SELECT ALL CAST(((rt0.c0)<=(rt0.c2)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c4))) IN ()), ((((((((rt0.c2)OR(CAST(rt0.c1 AS INTEGER))))OR((rt0.c6 IN (rt0.c6)))))AND((~ (rt0.c5)))))AND(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c4 WHEN 0X43e6f580 THEN rt0.c6 ELSE rt0.c5 END)), (UPPER(DISTINCT rt0.c2) IN (CAST(rt0.c5 AS INTEGER))) FROM rt0; -- 0ms;
SELECT ALL 3.31318192E8 FROM rt0; -- 0ms;
SELECT DISTINCT (((((NULL)AND(rt0.c6)))AND(rt0.c5)) IN ()) FROM rt0 WHERE (LOWER(DISTINCT ((x'') BETWEEN (-251718545) AND ('-1829526021')))); -- 0ms;
SELECT DISTINCT (~ (rt0.c5)), (((NOT (rt0.c2))) IS TRUE), (((rt0.c0))==((-1829526021))) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT (LIKELIHOOD(rt0.c3, 0.5015305783156538) IN ()), ((((rt0.c4, rt0.c3, rt0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c6)) AND ((rt0.c4, rt0.c0, rt0.c5))) IN ()), ((CAST(rt0.c0 AS TEXT))<(PRINTF(rt0.c2))), ((CASE WHEN rt0.c5 THEN rt0.c1 ELSE rt0.c6 END) NOTNULL), LIKE(NULL, ((rt0.c3)>>(rt0.c4)), '-') FROM rt0 WHERE (CAST(CASE 0.22815679543437117  WHEN NULL THEN 0Xffffffffd716bc3a ELSE 1107567408 END AS REAL)); -- 0ms;
SELECT LIKELY(DISTINCT CAST(x'' AS BLOB)) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT '-2024302043', ((COUNT(*)) BETWEEN (GROUP_CONCAT(rt0.c0)) AND (CASE rt0.c3  WHEN '-1366075798' THEN rt0.c5 WHEN rt0.c6 THEN '531575010' WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c1 THEN rt0.c1 WHEN -1460118510 THEN rt0.c5 END)), CAST((((rt0.c3))==((rt0.c2))) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT '-1757153443' FROM rt0; -- 0ms;
SELECT CAST((- (rt0.c0)) AS REAL) FROM rt0; -- 0ms;
SELECT ALL ((INSTR(rt0.c4, rt0.c1)) ISNULL) FROM rt0 GROUP BY CAST(((rt0.c4)<<(rt0.c6)) AS TEXT) HAVING ((((((rt0.c6)AND(rt0.c0)))OR(rt0.c3))) NOT NULL); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL ((((((((MAX(rt0.c2))OR(NULL)))OR(TOTAL(rt0.c3))))AND(NULLIF(rt0.c3, rt0.c1))))AND((((rt0.c4))<=(('-686375878'))))) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c4)))<<(NULL COLLATE RTRIM)), ((rt0.c5)>>(rt0.c6)) COLLATE NOCASE COLLATE NOCASE, ((CAST(rt0.c2 AS INTEGER))*(((0.06020231911388241)!=(rt0.c1)))) FROM rt0 WHERE (((((((529024992)AND(0xffffffff96250c95)))OR(x'2820'))) ISNULL)); -- 0ms;
SELECT DISTINCT COUNT(CAST(rt0.c0 AS TEXT)) FROM rt0 GROUP BY ((((CAST(rt0.c5 AS NUMERIC))AND(NULL)))OR(CAST(rt0.c6 AS INTEGER))) HAVING ((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c6)) COLLATE RTRIM; -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), COUNT(*), x'' FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) NOT NULL)) GROUP BY '-260254092'; -- 0ms;
SELECT DISTINCT LEAD(((0.29144044239669165)<>(((rt0.c4)%(rt0.c2)))), ((((((((rt0.c1)OR(CAST(rt0.c0 AS BLOB))))OR(CAST(rt0.c6 AS BLOB))))OR(((((rt0.c2)AND(rt0.c1)))OR(rt0.c3)))))AND(CASE rt0.c6  WHEN rt0.c6 THEN rt0.c2 ELSE rt0.c2 END)), (((((rt0.c6, rt0.c2, rt0.c4))>((rt0.c2, rt0.c5, rt0.c0)))) NOT BETWEEN ((((x''))>((rt0.c0)))) AND (((rt0.c1)GLOB(rt0.c2))))) OVER (), ((MIN(rt0.c3)) NOT NULL), rt0.c1 FROM rt0 WHERE (((((-1745073006) BETWEEN ('6%') AND ('203193110')))OR(NULL COLLATE NOCASE))) ORDER BY NULL DESC  NULLS LAST; -- 1ms;
SELECT ALL CAST((rt0.c6 IN ()) AS INTEGER) FROM rt0; -- 0ms;
SELECT 1241310474, (- (rt0.c3 COLLATE BINARY)), (((((rt0.c6)) BETWEEN ((rt0.c6)) AND ((x'e816'))))AND(((rt0.c1) NOT NULL))) FROM rt0 WHERE (CASE WHEN STRFTIME(-967857817, '-213392986', 0.7159398726589317) THEN ('' IN ()) ELSE (915234730 IN ()) END); -- 0ms;
SELECT ALL TOTAL_CHANGES() FROM rt0; -- 0ms;
SELECT SUM(rt0.c0) OVER ( RANGE (((((rt0.c2)||(rt0.c4))))<((((rt0.c6)AND(rt0.c3))))) PRECEDING EXCLUDE NO OTHERS) FROM rt0 WHERE (CASE WHEN ((x'05f70730')AND(NULL)) THEN ((0.9188139061399064) IS FALSE) ELSE CASE '*5M紛b'  WHEN '5(''R' THEN 0.00977287936245963 WHEN x'' THEN '1972097832' WHEN ',9rk' THEN '' WHEN x'' THEN NULL WHEN 0.8071837695786347 THEN 1.107567408E9 END END);SELECT DISTINCT CASE ((rt0.c4) NOT BETWEEN (rt0.c6) AND (rt0.c0))  WHEN (((rt0.c6, rt0.c4, rt0.c1))!=((rt0.c0, rt0.c3, rt0.c6))) THEN rt0.c3 ELSE ((rt0.c4) NOT NULL) END FROM rt0 WHERE ((((NULL, 1.017655619E9, 1364605848, NULL, '-577069579'))<=(('1515575351', x'', '?', -1874817541, NULL))) COLLATE BINARY) GROUP BY (rt0.c0 IN ()); -- 0ms;
SELECT DISTINCT (((+ (rt0.c5)))IS(2.066185499E9)) FROM rt0 GROUP BY NULL, rt0.c6, rt0.c6 LIMIT 1039392439 OFFSET -366547587; -- 0ms;
SELECT CASE (- (rt0.c3))  WHEN SUM(rt0.c0) THEN ((((((((rt0.c6)OR(0.3729359665955817)))AND(0.2980163203191526)))OR(rt0.c6)))OR(rt0.c4)) END FROM rt0; -- 0ms;
SELECT x'e0df', ((((rt0.c4) NOT NULL))%((rt0.c5 IN ()))), ((((- (rt0.c4))))>((((((rt0.c0)OR(rt0.c3)))OR(rt0.c4))))) FROM rt0; -- 0ms;
SELECT DISTINCT (NOT (((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)))) FROM rt0 LIMIT 1020281693; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c1))<=((rt0.c5))) THEN ((((rt0.c6)OR(rt0.c4)))AND(rt0.c6)) END, (((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) IN ()), COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT('o.7h') OVER (), '9U>ZseW9', TOTAL(CASE WHEN rt0.c6 THEN rt0.c0 END) FROM rt0; -- 0ms;
SELECT DISTINCT 0.014796006098239167 FROM rt0; -- 0ms;
SELECT DISTINCT NTILE((((((rt0.c3 IN (rt0.c0)))AND(((rt0.c3)>(rt0.c2)))))AND(json_array(rt0.c3, rt0.c3)))) OVER () FROM rt0;SELECT COUNT(LOWER(rt0.c3)), ((((rt0.c6) NOT BETWEEN (0Xffffffff82ddb7f8) AND (rt0.c6)))==(0.12150385251823725)), LEAD(((rt0.c6) ISNULL) COLLATE BINARY, (((rt0.c4)>(rt0.c6)) IN ()), ((IFNULL(DISTINCT rt0.c3, rt0.c4)) BETWEEN (((((rt0.c0)OR(0.4952476436565424)))AND(rt0.c6))) AND (CAST(rt0.c3 AS BLOB)))) OVER ( ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c2 END) NOT NULL) GROUPS ((((rt0.c6)>=(rt0.c3))) NOT NULL) PRECEDING EXCLUDE CURRENT ROW) FROM rt0 GROUP BY CASE rt0.c3  WHEN rt0.c6 THEN ((rt0.c0) IS FALSE) WHEN ((((0X384826a1)AND(rt0.c2)))AND(rt0.c2)) THEN ((rt0.c1)>>(rt0.c5)) WHEN CAST(rt0.c3 AS TEXT) THEN '' END, (0.8978455394064279 IN (CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c1 END, (- (-267676199)))), ((((((((CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c0 END)OR(((rt0.c6) BETWEEN (rt0.c3) AND (rt0.c3)))))OR(rt0.c3)))OR((NULL IN ()))))AND(rt0.c0 COLLATE RTRIM)) HAVING ((((((((((x'')IS(rt0.c1)))AND((~ (rt0.c1)))))OR(((rt0.c0)+(rt0.c6)))))AND(0Xfffffffff7d5d2ab)))OR(((rt0.c6) ISNULL))) LIMIT -996403576 OFFSET 701242369; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c3))) IS FALSE) FROM rt0 WHERE ((((x'c9e3' IN ())) BETWEEN (((0.12147811698917999)<=(0.43314143755478407))) AND (-1.814774955E9))); -- 0ms;
SELECT ALL x'', ((rt0.c0) NOTNULL) COLLATE NOCASE, MAX(((-851836106)=(rt0.c4))) FROM rt0 GROUP BY ((((rt0.c1) BETWEEN (rt0.c6) AND (rt0.c4)))=((((rt0.c3))<=((rt0.c4))))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS TEXT)) IS TRUE) FROM rt0; -- 1ms;
SELECT DISTINCT AVG(rt0.c6) OVER () FROM rt0 WHERE ((((((x'7779', 1167717684, x''))>((0.28741289873719933, '\#', 0X202e5b11)))) ISNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c1)<(rt0.c2)))LIKE(UPPER(rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT ((NULL)*(rt0.c5 COLLATE NOCASE)) FROM rt0 WHERE (RTRIM(CAST(NULL AS NUMERIC))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)GLOB(rt0.c6))))==((((rt0.c2)<=(rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2, FIRST_VALUE(((((((((((rt0.c4)OR(rt0.c6)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c0))) NOT BETWEEN (rt0.c3 COLLATE BINARY) AND (x''))) OVER (), '', CAST(GROUP_CONCAT(rt0.c6) AS BLOB), COALESCE(((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)), ((rt0.c3)<=(rt0.c3)), ((rt0.c2) IS FALSE), ((((rt0.c4)OR(rt0.c4)))OR(rt0.c0))) FROM rt0; -- 0ms;
SELECT FIRST_VALUE((- (rt0.c1)) COLLATE BINARY) OVER () FROM rt0; -- 0ms;
SELECT ALL AVG(rt0.c5) OVER ( GROUPS BETWEEN (((LOWER(DISTINCT rt0.c5)))<=((rt0.c1 COLLATE NOCASE))) PRECEDING AND ((((rt0.c5) IS FALSE)) NOT BETWEEN (rt0.c5 COLLATE NOCASE) AND (CASE rt0.c5  WHEN '⼡R--' THEN rt0.c4 WHEN rt0.c5 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c1 END)) FOLLOWING EXCLUDE TIES), CASE WHEN CASE WHEN 0X4a73c673 THEN rt0.c3 END THEN (NOT (rt0.c6)) END, TOTAL_CHANGES(), (NOT ((((rt0.c5)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))), ((CAST(rt0.c0 AS TEXT))<(rt0.c6 COLLATE BINARY)) FROM rt0 WHERE ((((NULL)) NOT BETWEEN ((CASE WHEN NULL THEN 'r4P\r%' END)) AND (((~ (NULL)))))); -- 0ms;
SELECT ALL COUNT(*), rt0.c0, rt0.c2, LAST_VALUE(((((((rt0.c5)AND(rt0.c3)))AND(rt0.c0))) NOT NULL)) OVER (), ((((rt0.c3) NOT NULL)) BETWEEN (rt0.c6) AND ((rt0.c6 IN (rt0.c4)))) FROM rt0 ORDER BY (((NULL) BETWEEN (rt0.c5) AND (rt0.c0)) IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (COUNT(0.5656621797530971) IN ()) FROM rt0 WHERE ((((x'')) BETWEEN ((CASE WHEN 'd.[' THEN 839339052 WHEN '?]3KVRD' THEN 0.3329890636369147 WHEN -213392986 THEN '' END)) AND ((NULL COLLATE BINARY)))); -- 0ms;
SELECT DISTINCT CASE WHEN '\nuwE' COLLATE BINARY THEN (rt0.c2 IN ()) END FROM rt0 WHERE (CASE (('1757984832')+('1364495305'))  WHEN '' THEN COALESCE(NULL, 72602922) ELSE (((x'', x'', 0x58bfc350))>((x'7af4', 0.32295521396043314, x'933685b14a65'))) END); -- 0ms;
SELECT ALL MIN(((((((((((((rt0.c1)OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c6)))AND(rt0.c3)))OR(rt0.c2))), (((rt0.c3, rt0.c2, rt0.c0)) BETWEEN ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c0 END, ((rt0.c5)+(NULL)), 0.6430751111849394)) AND ((((((((((rt0.c1)OR(rt0.c0)))AND(rt0.c3)))AND(rt0.c3)))AND(rt0.c3)), ((((((((rt0.c3)AND(rt0.c0)))OR('-235590617')))AND(rt0.c6)))AND(rt0.c5)), ((0.33007697049279305) IS FALSE)))), ((SUM(rt0.c6)) NOT BETWEEN ((NOT (rt0.c0))) AND ((((rt0.c6))>=((rt0.c4))))) FROM rt0; -- 1ms;
SELECT DISTINCT ((((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c4)))OR((('-314051972')GLOB(rt0.c0)))))AND(((0.30002415904288804) ISNULL))), CASE ((rt0.c2) NOTNULL)  WHEN ((rt0.c4)|(NULL)) THEN ((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c0)) WHEN json_quote(rt0.c5) THEN (rt0.c6 IN (rt0.c3, rt0.c2, rt0.c6)) WHEN CASE WHEN rt0.c6 THEN rt0.c1 ELSE '7I' END THEN (((rt0.c5)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c2))) ELSE (((rt0.c3)) BETWEEN ((rt0.c0)) AND ((rt0.c0))) END, ((((MAX(rt0.c2))OR(CAST(rt0.c3 AS BLOB))))AND(COUNT(rt0.c6))) FROM rt0; -- 0ms;
SELECT x'f94399b5' FROM rt0 WHERE ('CJ'); -- 0ms;
SELECT ALL CASE WHEN TYPEOF(rt0.c3) THEN SQLITE_SOURCE_ID() ELSE '-345156551' END FROM rt0 WHERE (((((('0.4883911789904867')||(0.6384905615608196)), ((x'ff88') BETWEEN (0.17296317900427838) AND (0.7798111446321339)), CASE WHEN x'8c3c' THEN 'ITuLk(j' END, ((NULL) NOT BETWEEN ('-873978467') AND (NULL)), ''))>((((0x15b036bf)IS NOT(0.8224062891662245)), (0.9588770095787336 IN ()), ((((0.0783512990833628)AND(x'6809')))OR(-57450266)), 0.9537727337446358, (((NULL, 0Xffffffffe2d8658e, NULL)) BETWEEN ((0.702001193597779, '1459314018', 0.41365965916933334)) AND ((NULL, 'Q', -1924359402))))))) ORDER BY (((((rt0.c6)) BETWEEN ((rt0.c4)) AND ((rt0.c5)))) NOTNULL) DESC; -- 0ms;
SELECT ALL ((((rt0.c1) NOTNULL))|(LOWER(NULL))), MAX((rt0.c2 IN ())) COLLATE RTRIM, LTRIM(x'') FROM rt0 GROUP BY ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (0.1794955075579563))) BETWEEN (((x'')LIKE(0.5404345091540813))) AND (CAST(rt0.c3 AS TEXT))); -- 0ms;
SELECT DISTINCT ((AVG(rt0.c2))>(CAST(rt0.c1 AS BLOB))), ROW_NUMBER() OVER (), ((HEX(DISTINCT rt0.c4))&(LOWER(rt0.c6))) FROM rt0; -- 0ms;
SELECT DISTINCT LAG(INSTR(((rt0.c1)/(rt0.c1)), CASE rt0.c3  WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c6 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END), ((UPPER(rt0.c0))|(((rt0.c3) ISNULL))), '529024992') OVER (), ((GROUP_CONCAT(rt0.c1))<=(rt0.c5 COLLATE RTRIM)), (((('966695664') ISNULL)) BETWEEN (SUM(rt0.c6)) AND (rt0.c4 COLLATE RTRIM)) FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c2)OR(rt0.c5)))OR(rt0.c0)) COLLATE RTRIM, ((((rt0.c2)OR(rt0.c5)))AND(0.4006794471150299)) COLLATE NOCASE, (((((NOT (rt0.c2)))AND(x'')))OR(((rt0.c3) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3, (((NOT (rt0.c5)))*((- (rt0.c5)))), CAST(((rt0.c6)<<(rt0.c5)) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE rt0.c6  WHEN rt0.c0 THEN rt0.c5 END) IS FALSE) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c6) NOT NULL))AND(COUNT(rt0.c0))))AND((rt0.c5 IN ()))) FROM rt0 WHERE (((((((NULL)%('2031148267')))OR((NOT (NULL)))))AND(('-1569557598' IN (0.559114227717004))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE (((NULL COLLATE BINARY)<(x''))) ORDER BY CASE (((rt0.c4, rt0.c4, rt0.c4))<=((rt0.c2, rt0.c5, rt0.c1)))  WHEN rt0.c2 COLLATE RTRIM THEN ((((rt0.c1)OR(rt0.c6)))OR(rt0.c2)) WHEN ((rt0.c1)-(rt0.c3)) THEN ((rt0.c2)<=(rt0.c3)) WHEN rt0.c4 THEN (NOT (rt0.c3)) END  NULLS LAST; -- 0ms;
SELECT (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c6)) IN ()) FROM rt0; -- 1ms;
SELECT ALL CAST((((rt0.c3, NULL, rt0.c3)) BETWEEN ((rt0.c2, rt0.c1, rt0.c0)) AND ((rt0.c6, rt0.c5, rt0.c2))) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c6)), ((((((rt0.c1)IS(rt0.c1)))AND(CAST(rt0.c0 AS TEXT))))OR(((rt0.c4)AND(0.012128248010353948)))), CAST((+ (rt0.c5)) AS INTEGER) FROM rt0 WHERE (json_array_length(1020281693, CASE WHEN -1136310744 THEN -1.411659919E9 ELSE NULL END));SELECT DISTINCT QUOTE(CAST(rt0.c2 AS NUMERIC)), MAX(((rt0.c0) IS FALSE) COLLATE NOCASE), ((GROUP_CONCAT(rt0.c5)) IS FALSE) FROM rt0 LIMIT 884359445; -- 0ms;
SELECT DISTINCT ((rt0.c4) BETWEEN (1.7976931348623157E308) AND (rt0.c2)) COLLATE RTRIM FROM rt0 WHERE (CASE ((8.93321006E8) BETWEEN (471887939) AND (0.9136807566600998))  WHEN CASE x'dd53'  WHEN NULL THEN '1331831619' END THEN (NULL IN ()) END); -- 0ms;
SELECT DISTINCT ((0.3490876850267135)IS NOT((rt0.c3 IN ()))) FROM rt0 ORDER BY ((((CAST(rt0.c4 AS TEXT))OR((((rt0.c2)) BETWEEN ((0.7709097360057594)) AND ((rt0.c2))))))OR(rt0.c0)) DESC  NULLS FIRST, ((NULL) NOT BETWEEN ((+ (rt0.c0))) AND (((((((((rt0.c1)AND(rt0.c6)))AND(rt0.c1)))AND(rt0.c2)))AND(rt0.c1))))  NULLS FIRST; -- 0ms;
SELECT GROUP_CONCAT(LIKELIHOOD(DISTINCT rt0.c1, 0.5446631126118912)) OVER ( ROWS  CURRENT ROW) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c0)AND(rt0.c4)))AND(rt0.c4))) NOTNULL) FROM rt0 WHERE (CASE '941854288'  WHEN 0X5880e53b THEN x'' WHEN '鷵8' THEN 525773672 WHEN '' THEN x'' END COLLATE BINARY) LIMIT 803579940; -- 0ms;
SELECT ALL (NOT (SUM(rt0.c4))), (((rt0.c4) IS TRUE) IN ()), rt0.c6 FROM rt0 WHERE (CASE WHEN (((0.42130354329847897, x'', x'')) BETWEEN (('[]2J', x'', x'')) AND ((0.5617897972383429, 0.5593515326140208, x'd7b8'))) THEN CASE WHEN -73448605 THEN 'wC' WHEN 0.18484973965260898 THEN '637000764' WHEN '' THEN 'M' ELSE x'' END END); -- 0ms;
SELECT ALL (((((((((rt0.c1 IN ()))OR(((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c2)))))AND((((rt0.c1, rt0.c1, rt0.c4, rt0.c0, rt0.c0))>((rt0.c4, rt0.c4, rt0.c4, rt0.c1, rt0.c0))))))OR((~ (rt0.c3)))))OR(((rt0.c2)IS NOT(rt0.c4)))) FROM rt0 ORDER BY (((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c3)) IN ()); -- 0ms;
SELECT DISTINCT (((((rt0.c1))<>((rt0.c4)))) BETWEEN (((rt0.c1)OR(rt0.c3))) AND (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))) FROM rt0 WHERE (((CAST('' AS INTEGER))IS NOT(((NULL) NOT BETWEEN (x'') AND (x''))))) ORDER BY TIME(rt0.c3, ((rt0.c2) ISNULL), (rt0.c6 IN (NULL))); -- 0ms;
SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c6)) AND ((NULL))))OR(rt0.c6)) FROM rt0 ORDER BY (NOT ((((rt0.c1, rt0.c3, rt0.c3)) NOT BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((NULL, x'b906', NULL))))) DESC  NULLS FIRST; -- 0ms;
SELECT (((NOT (rt0.c6))) NOT BETWEEN (TOTAL(rt0.c1)) AND (((rt0.c5) NOT NULL))) FROM rt0 WHERE ((((('158518418')>(0.7851486115241338))) IS TRUE)) GROUP BY (((rt0.c2 IN (rt0.c0))) NOTNULL) HAVING ((((GROUP_CONCAT(rt0.c0))AND(((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c3)))))AND((rt0.c6 IN ()))); -- 0ms;
SELECT ALL SUM((NOT (rt0.c3))) FILTER(WHERE CASE (rt0.c4 IN (x''))  WHEN rt0.c6 THEN CAST(rt0.c2 AS INTEGER) ELSE DATETIME(rt0.c3, rt0.c5, rt0.c2, rt0.c3, rt0.c0) END) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((((((((((rt0.c2)OR(rt0.c6)))OR(rt0.c5)))AND('1024783585')))OR(rt0.c0)), '-136981845', rt0.c0))!=((((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)), GROUP_CONCAT(rt0.c1), MAX('1532578733')))) FROM rt0 WHERE ((0.9069760220600359 IN ()) COLLATE NOCASE); -- 0ms;
SELECT ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c5))) IS TRUE) FROM rt0 ORDER BY rt0.c2 ASC  NULLS FIRST LIMIT -339768603; -- 0ms;
SELECT (((~ (rt0.c3)))>>(((((rt0.c5)OR(rt0.c1)))AND(rt0.c6)))) FROM rt0 WHERE (LOWER(((NULL) IS TRUE))) GROUP BY CAST(((rt0.c3)/(rt0.c0)) AS TEXT) HAVING NULL; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (rt0.c0)) THEN CAST(rt0.c3 AS NUMERIC) ELSE (((rt0.c2))<=((rt0.c6))) END FROM rt0; -- 0ms;
SELECT DISTINCT ((+ (rt0.c6)) IN ()) FROM rt0 LIMIT 1848920684; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE ((((('907480280')) BETWEEN ((x'')) AND (('-0.0'))) IN ())) ORDER BY CASE rt0.c1 COLLATE RTRIM  WHEN rt0.c4 THEN CAST(rt0.c3 AS BLOB) END; -- 0ms;
SELECT (COALESCE(DISTINCT rt0.c5, rt0.c4, rt0.c1, rt0.c4) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), CUME_DIST() OVER (), (((rt0.c2)) BETWEEN ((TOTAL(rt0.c0))) AND ((((((rt0.c6)AND(rt0.c2)))AND(rt0.c1))))) FROM rt0 WHERE (((((((((NULL)AND(NULL)))OR(NULL)))OR((((NULL))<=(('-1368488079'))))))OR(((((NULL)AND(x'2d52d795')))OR(x''))))); -- 0ms;
SELECT DISTINCT INSTR(((rt0.c1)=(rt0.c3)), (0.0056173822227166825 IN ())) FROM rt0; -- 0ms;
SELECT (- (rt0.c2 COLLATE NOCASE)) FROM rt0 WHERE (((x'b5f0') NOTNULL) COLLATE BINARY); -- 0ms;
SELECT SUM((('-366547587') NOT NULL) COLLATE BINARY), '\n#x', (- ('')) FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c5 AS TEXT))GLOB(((rt0.c5) IS TRUE))) FROM rt0 WHERE ((((0.05095993274387911)>(x'f5eb')) IN ())) GROUP BY CAST(rt0.c0 AS REAL) COLLATE RTRIM, (((rt0.c5))<((rt0.c0))) COLLATE NOCASE, (+ (((rt0.c4) IS TRUE))) HAVING -1813542272; -- 0ms;
SELECT rt0.c2, ((x'') NOTNULL), (COUNT(*) IN ()) FROM rt0 WHERE (((0.5747715436934098)AND(((0.02191026983423172)IS NOT(NULL))))) ORDER BY rt0.c5  NULLS FIRST, (((rt0.c6 IN (rt0.c5)))GLOB((rt0.c0 IN ())))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((rt0.c6)AND(rt0.c2)))AND(rt0.c0)))AND(rt0.c5 COLLATE NOCASE)))AND((((rt0.c6, 0.02191026983423172, rt0.c0))<=((rt0.c2, rt0.c0, rt0.c5))))) FROM rt0 WHERE (CASE '1143242546'  WHEN x'7bc2' THEN 1555195760 WHEN NULL THEN 0.017813174064517323 WHEN x'e574' THEN 0xffffffffb3a8e898 ELSE x'' END COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE rt0.c4  WHEN rt0.c3 THEN x'797d' WHEN rt0.c5 THEN 0xffffffffc47c8bd5 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c5 THEN rt0.c6 END COLLATE RTRIM FROM rt0 WHERE (CAST((((('-888288786')AND(x'7d74')))AND(x'')) AS NUMERIC)); -- 0ms;
SELECT '-2002684044', (((rt0.c1))>((rt0.c4))) COLLATE RTRIM COLLATE BINARY, ((((((rt0.c5)|(rt0.c1)))OR(((rt0.c0) IS TRUE))))OR(((1.039392439E9)<<(rt0.c2)))) FROM rt0 WHERE (((NULL)%('UM⫴#jm,Jp' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT TOTAL(((((rt0.c3)OR(rt0.c1)))OR(0.9525498707010799))) OVER () FROM rt0 ORDER BY (((((rt0.c6)) NOT BETWEEN ((rt0.c6)) AND ((rt0.c6))))-((((x'', rt0.c1, rt0.c0, rt0.c2, rt0.c2))>((0.44029535744464887, rt0.c5, rt0.c0, rt0.c1, rt0.c0)))))  NULLS FIRST, CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN x'aed6' END COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT (((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)), AVG(rt0.c1), (('-1579306608')LIKE(rt0.c1))))>=((((rt0.c2)>(NULL)), ((rt0.c4)GLOB(rt0.c0)), rt0.c0 COLLATE RTRIM))), ((SUBSTR(rt0.c3, rt0.c3))||(TRIM(DISTINCT rt0.c3, '-382355024'))), ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c5))) IS TRUE) FROM rt0 WHERE (CAST((('-1281216866')<<(x'')) AS TEXT)); -- 0ms;
SELECT ALL (((((x'f0ce')AND(rt0.c2)))AND(rt0.c6)) IN ()) FROM rt0 WHERE (((((((NULL)AND(0.5007175155117506)))OR(((('-353348172'))<=((NULL))))))OR((('-488391206')AND(NULL))))) LIMIT -940414189; -- 0ms;
SELECT rt0.c4, NTH_VALUE(0.1483179629187359, ((json_extract(rt0.c5, rt0.c2, '0.43314143755478407', rt0.c0))LIKE(rt0.c4))) OVER (), (+ (MAX(rt0.c1))), COUNT(rt0.c6), CAST(((rt0.c1) IS FALSE) AS INTEGER) FROM rt0;SELECT DISTINCT ((((((rt0.c2))>=(('1407598401')))))>(('1515575351'))) FROM rt0 GROUP BY CAST(rt0.c6 COLLATE NOCASE AS TEXT); -- 0ms;
SELECT ALL CAST(CASE WHEN 829897791 THEN rt0.c4 END AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT (((x'') NOT BETWEEN (rt0.c4) AND (rt0.c2)) IN ()) FROM rt0 ORDER BY ((CASE WHEN rt0.c6 THEN rt0.c6 WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c4 ELSE NULL END)<(((rt0.c6)IS(rt0.c4)))) ASC; -- 0ms;
SELECT DISTINCT (((rt0.c4)) BETWEEN (((((rt0.c3))==((rt0.c4))))) AND ((rt0.c1))) FROM rt0; -- 0ms;
SELECT ALL x'', (((rt0.c2 IN (rt0.c5)))||(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))), CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END COLLATE RTRIM FROM rt0 WHERE ((+ (json_object(x'ee350607', x'e5ae')))) GROUP BY ((load_extension(rt0.c4)) NOT BETWEEN ((rt0.c6 IN ())) AND ('989033050')) HAVING ((((((((x'')OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c3)))AND(rt0.c6));SELECT DISTINCT ((((((((((((((((rt0.c1)AND(rt0.c5)))AND(rt0.c2)))OR(rt0.c5)))AND(rt0.c4)))OR(((((rt0.c5)OR(rt0.c5)))AND(rt0.c1)))))AND((rt0.c6 IN (rt0.c2)))))OR(rt0.c4 COLLATE BINARY)))AND(COUNT(*))) FROM rt0; -- 0ms;
SELECT DISTINCT (((NULL, rt0.c3, rt0.c6)) BETWEEN ((CAST(rt0.c3 AS NUMERIC), '', ((rt0.c4)/('-1839727979')))) AND ((((-1296220096) IS TRUE), 0x58bfc350, (~ (rt0.c5))))) FROM rt0 WHERE (TOTAL_CHANGES()); -- 0ms;
SELECT ALL ((((CAST(rt0.c5 AS INTEGER))OR(CASE WHEN rt0.c5 THEN rt0.c2 END)))OR(CAST(rt0.c2 AS INTEGER))) FROM rt0 WHERE ((((NULL) NOT BETWEEN (365229930) AND (0.00977287936245963)) IN (((NULL) BETWEEN (0Xe3d297d) AND ('0.8224062891662245')), (+ (0.22308058340666037))))); -- 0ms;
SELECT (CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c5 THEN x'' END IN ()) FROM rt0 WHERE (((CASE WHEN 'eJ' THEN '' ELSE 0.9458485454658079 END)&('1785717433' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT (-1.829526021E9 IN ()) FROM rt0 WHERE (((((((((((((((x'')&(0.7529933885372776)))OR((NOT ('1852654002')))))AND(CAST('' AS INTEGER))))AND((('-2090113012') NOT BETWEEN (NULL) AND (NULL)))))OR(((-302593793) BETWEEN (x'911d3953') AND (x'a54c')))))AND((('1344136844')OR(x'dfc1cb21')))))AND(x'497e'))); -- 0ms;
SELECT DISTINCT CASE WHEN CAST('-1497651249' AS NUMERIC) THEN rt0.c6 ELSE CAST(rt0.c6 AS BLOB) END, CASE (rt0.c4 IN ())  WHEN MAX(rt0.c0) THEN '' END, (((rt0.c2, rt0.c1, rt0.c6))>((rt0.c6, rt0.c2, rt0.c2))) COLLATE BINARY COLLATE RTRIM FROM rt0 INTERSECT SELECT ((((rt0.c5 COLLATE RTRIM)OR(rt0.c0 COLLATE NOCASE)))AND(((rt0.c6)+(rt0.c3)))), AVG((rt0.c6 IN ())), ((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c6))) BETWEEN (((rt0.c2)<>(rt0.c0))) AND ('-278969713')) FROM rt0 WHERE ((((((((((0x125367e2 IN ()))OR(((NULL) BETWEEN (x'') AND (NULL)))))AND((NULL IN ()))))OR(CASE WHEN '-353348172' THEN -1497651249 WHEN 0.8457085133290251 THEN 1502876619 WHEN NULL THEN -191907136 WHEN 0X1e9846c1 THEN 0.3564864539757431 WHEN '\nkWfG録Y' THEN '⼡r--' END)))AND((('-240152860')!=(x''))))); -- 0ms;
SELECT DISTINCT (~ (((rt0.c0) NOTNULL))), CAST(158518418 AS BLOB), GROUP_CONCAT('') FROM rt0 WHERE ((((('') IS TRUE))>=((x'' IN ())))); -- 0ms;
SELECT ALL ((((rt0.c5) IS FALSE))>((rt0.c6 IN (rt0.c5)))) FROM rt0 WHERE ((((((0.1681965391454081))!=((0.2517006487979464))))<=((((NULL)) NOT BETWEEN (('')) AND ((0.13343316489695234)))))); -- 0ms;
SELECT ALL CAST(LIKELY(DISTINCT 0.5748263248512628) AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) ISNULL)) BETWEEN ((((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c6)))) AND ((((rt0.c3))==((rt0.c5))))), TOTAL((+ (rt0.c0))) FILTER(WHERE CAST(CASE WHEN rt0.c4 THEN NULL WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c3 END AS REAL)) OVER (), LOWER(DISTINCT ((rt0.c1) NOTNULL)) FROM rt0 GROUP BY rt0.c4 HAVING rt0.c5; -- 1ms;
SELECT ALL ((COALESCE(DISTINCT rt0.c4, rt0.c5)) IS TRUE) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN COUNT(*) THEN (+ (rt0.c1)) ELSE ((rt0.c1)||(rt0.c4)) END FROM rt0 WHERE (((+ (x'c68a')) IN ())); -- 1ms;
SELECT DISTINCT (((rt0.c3 IN ())) NOT BETWEEN (((rt0.c3) BETWEEN (rt0.c6) AND (rt0.c5))) AND ((- (rt0.c1)))) FROM rt0 GROUP BY (rt0.c6 COLLATE RTRIM IN ()); -- 0ms;
SELECT DISTINCT (- ((rt0.c2 IN ()))) FROM rt0; -- 0ms;
SELECT CAST(AVG(NULL) AS BLOB), COUNT(*) OVER (), rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT 0.7561872957991965 FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2))<((rt0.c5))))||((((x'')) NOT BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FROM rt0 GROUP BY (((rt0.c2)) NOT BETWEEN (((rt0.c5 IN (rt0.c1)))) AND ((((rt0.c2) NOT BETWEEN (rt0.c5) AND (rt0.c2))))), (((rt0.c2)>=(rt0.c5)) IN ()), (((((rt0.c0)||(rt0.c0)), (rt0.c0 IN ()), (rt0.c0 IN ())))>(((rt0.c6 IN ()), ((((rt0.c4)OR(rt0.c5)))AND(rt0.c5)), CASE rt0.c2  WHEN rt0.c4 THEN rt0.c0 END))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c3)*(rt0.c6)) THEN CASE rt0.c2  WHEN rt0.c6 THEN rt0.c0 WHEN 0.013147026180868382 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c5 END ELSE ((rt0.c6)OR(rt0.c0)) END FROM rt0; -- 0ms;
SELECT ((rt0.c0 COLLATE BINARY)>=(CAST(rt0.c0 AS BLOB))) FROM rt0 WHERE (CASE WHEN 0.30904890864703527 THEN CASE WHEN x'' THEN '垸lgvhp/&A' ELSE x'' END ELSE CAST('' AS BLOB) END); -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c6)))OR(GROUP_CONCAT(rt0.c3))), MAX(CAST(rt0.c5 AS BLOB)), rt0.c1 FROM rt0; -- 1ms;
SELECT DISTINCT ((((x'') NOT BETWEEN (x'') AND (rt0.c6))) BETWEEN (((rt0.c6) NOT NULL)) AND (((rt0.c0) IS TRUE))), (((CAST(rt0.c4 AS INTEGER), ((rt0.c3) IS FALSE), AVG(rt0.c1)))<=(((- (rt0.c1)), LIKELY(DISTINCT rt0.c6), (((rt0.c6)) BETWEEN ((rt0.c0)) AND (('156583259')))))), rt0.c0 FROM rt0 ORDER BY (((((NOT (rt0.c4)))OR((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c5))))))AND(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)))) ASC; -- 0ms;
SELECT DISTINCT rt0.c4, (~ (CASE '1885487518'  WHEN rt0.c3 THEN rt0.c1 END)), 0.9717706739773835 FROM rt0 LIMIT 1984622661; -- 0ms;
SELECT rt0.c6 FROM rt0 WHERE ((+ ('-294671976')) COLLATE BINARY) GROUP BY CASE WHEN CAST(rt0.c3 AS BLOB) THEN '304512212' COLLATE RTRIM END; -- 0ms;
SELECT SUM(MAX((rt0.c6 IN ()))) FROM rt0 WHERE ((((- (NULL))) IS TRUE));SELECT DISTINCT (((rt0.c5)AND(rt0.c2)) IN ()) FROM rt0; -- 0ms;
SELECT ALL (- (rt0.c5)) COLLATE NOCASE FROM rt0 WHERE (((((0.732501593889374) BETWEEN (x'015d') AND (0.702001193597779)))>>(json_insert(NULL, 0.5046471370540099, NULL)))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS INTEGER))*(CAST(rt0.c1 AS BLOB))) FROM rt0; -- 1ms;
SELECT DISTINCT (((rt0.c6 IN ()))IS NOT(rt0.c3)) FROM rt0 ORDER BY RTRIM(0.9318487822727076 COLLATE BINARY) DESC, x'' DESC; -- 0ms;
SELECT DISTINCT (((- (rt0.c6)))>=(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))) FROM rt0; -- 0ms;
SELECT ((((-1.829526021E9)OR(((rt0.c1)<(rt0.c6)))))AND(CASE rt0.c4  WHEN x'cda6' THEN rt0.c0 ELSE rt0.c6 END)), rt0.c5, ((((COUNT(rt0.c0))OR(((x'c717') BETWEEN (x'') AND (rt0.c3)))))AND(0.2053578869475755 COLLATE BINARY)), (((TOTAL(rt0.c4)))>=((MAX(rt0.c0)))), COALESCE(DISTINCT MIN(rt0.c2), CAST(rt0.c1 AS TEXT)) FROM rt0 WHERE ((((((x'838c280d')<(x''))))>((CAST(661761535 AS INTEGER))))); -- 0ms;
SELECT ALL ((1582080924) BETWEEN (rt0.c2) AND (MIN(rt0.c2))) FROM rt0 WHERE (((CASE x''  WHEN '	-*N%*' THEN x'' ELSE x'ed39' END) BETWEEN ((('249831399')IS NOT('-136981845'))) AND (('-79139884' IN (x'a02c', 0.895440808687002))))) GROUP BY (- (((rt0.c4)>(rt0.c5)))) HAVING CAST((((rt0.c3)) BETWEEN ((rt0.c2)) AND ((rt0.c0))) AS INTEGER) ORDER BY (((rt0.c5) BETWEEN (x'd915') AND (rt0.c2)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT FIRST_VALUE(x'') OVER (), (((((((rt0.c4)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))AND(SUM(rt0.c1))))OR(((rt0.c5) NOTNULL))), x'' FROM rt0 WHERE (((((NULL)OR((NOT ('529024992')))))OR(((NULL)LIKE(0.8135507604519879))))); -- 1ms;
SELECT COUNT(((((rt0.c0)OR(rt0.c3)))AND(rt0.c2))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW), (~ (AVG(rt0.c4))), ((x'8fc0') BETWEEN ((rt0.c3 IN ())) AND ((((rt0.c0, 'b%aX+4?Ae', rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c0, rt0.c3)) AND ((rt0.c3, rt0.c5, rt0.c6))))), ((MIN(rt0.c5)) NOT BETWEEN ((((rt0.c5))>((rt0.c6)))) AND ('' COLLATE NOCASE)), ((rt0.c4) BETWEEN ((((rt0.c6, rt0.c0, rt0.c1)) BETWEEN ((rt0.c3, rt0.c5, rt0.c2)) AND ((rt0.c3, rt0.c0, rt0.c2)))) AND (((rt0.c0)/(rt0.c4)))) FROM rt0; -- 0ms;
SELECT (('1846551562')*(TYPEOF(rt0.c4))), NTILE(((((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (((rt0.c2)=(0.9210151851679423))) AND (CHAR(rt0.c1, rt0.c6, rt0.c4)))) OVER (), COALESCE((((rt0.c4))>=((rt0.c3))), (rt0.c6 IN (rt0.c2)), ((rt0.c2) ISNULL), UNLIKELY(rt0.c1)) FROM rt0 WHERE ((- (SQLITE_VERSION()))) GROUP BY ((('', LENGTH(rt0.c0), ((rt0.c4)>=(rt0.c0))))<(((rt0.c2 IN ()), (rt0.c3 IN (rt0.c0)), (rt0.c5 IN ())))), GLOB(((rt0.c5) ISNULL), ((((rt0.c0)AND(rt0.c5)))OR(rt0.c2))), 0x3beaadb3 HAVING ((rt0.c6) BETWEEN (x'') AND (rt0.c3));SELECT DISTINCT rt0.c0 COLLATE RTRIM, (rt0.c2 IN (0.8710055646624595)) COLLATE RTRIM, (((((rt0.c6)||(x'14f9'))))<((((rt0.c2)<=(rt0.c4))))) FROM rt0 WHERE ((- (x'2bdd' COLLATE RTRIM))); -- 0ms;
SELECT ALL CASE rt0.c4  WHEN rt0.c6 THEN rt0.c5 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 END COLLATE BINARY FROM rt0 GROUP BY NULL HAVING CAST(MIN(rt0.c1) AS REAL); -- 1ms;
SELECT ALL rt0.c2 FROM rt0 WHERE ((+ (((((x'')AND('p')))OR(-667639322))))); -- 0ms;
SELECT DISTINCT '6᪑' COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN LIKELIHOOD(rt0.c5, 0.9112942942657493) THEN (((rt0.c4, rt0.c0, rt0.c6))>=((rt0.c6, 0Xfffffffff0ff146f, rt0.c2))) ELSE (+ (rt0.c2)) END FROM rt0 WHERE (((('R+\n')) BETWEEN (((((('N!~+HYPSH')OR(x'8944')))AND('2066185499')))) AND ((((-4.25780273E8) NOT BETWEEN (NULL) AND (0.7037576120713557)))))); -- 0ms;
SELECT DISTINCT rt0.c0, ((TYPEOF(rt0.c5))||(ABS(DISTINCT rt0.c3))), ((((((((rt0.c1)OR(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c5)))))OR(rt0.c4 COLLATE NOCASE)))AND((~ (rt0.c3)))))AND(CHAR(rt0.c1))), (((((rt0.c5)OR(rt0.c1)))AND(rt0.c1)) IN ((((rt0.c5)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))), CAST(rt0.c4 AS REAL) COLLATE BINARY FROM rt0 LIMIT -1497651249 OFFSET -1033110225; -- 0ms;
SELECT DISTINCT QUOTE((+ (rt0.c5))) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(x'') FROM rt0 WHERE ((- (((((((((NULL)AND(0.28855315849716323)))OR(0X66a390f2)))OR('')))OR(NULL))))); -- 0ms;
SELECT DISTINCT (((- (rt0.c2))) NOT BETWEEN ((((rt0.c5)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c3)))) AND (CASE rt0.c4  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END)) FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c1)) AND ((rt0.c1)))) ISNULL), ((MAX(rt0.c2))|(CAST(rt0.c0 AS BLOB))), (((rt0.c6) IS TRUE) IN ()) FROM rt0 GROUP BY LIKELIHOOD(rt0.c5, 0.095638711582824), UPPER(rt0.c6), ((((rt0.c2)IS NOT(rt0.c1))) IS FALSE); -- 0ms;
SELECT ALL HEX(((rt0.c1)GLOB(rt0.c2))), ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END) AND ((((rt0.c6, rt0.c6, rt0.c5)) NOT BETWEEN ((-695777570, rt0.c4, rt0.c5)) AND ((5.29024992E8, rt0.c3, rt0.c6))))), ((((rt0.c2) BETWEEN (rt0.c5) AND (rt0.c3))) NOT NULL) FROM rt0 WHERE (((0.8513965833938539)%(0X5a55d837)) COLLATE BINARY); -- 0ms;
SELECT ALL (CASE rt0.c0  WHEN NULL THEN rt0.c5 ELSE rt0.c3 END IN ()), TYPEOF(DISTINCT CASE rt0.c6  WHEN rt0.c0 THEN rt0.c0 END), 0.766679020797765 FROM rt0; -- 0ms;
SELECT ALL ((TOTAL(rt0.c6))==(rt0.c3 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c5) ISNULL))AND(rt0.c3 COLLATE NOCASE)))OR((((rt0.c2))<((rt0.c5))))), ((((((((rt0.c2 COLLATE BINARY)AND((((rt0.c6)) BETWEEN (('INFINITY')) AND ((rt0.c2))))))OR(((rt0.c6)LIKE(rt0.c5)))))AND(((((rt0.c3)OR(rt0.c3)))OR(rt0.c3)))))OR(((rt0.c2) NOTNULL))), (((((((((+ (rt0.c0)))AND((~ (rt0.c1)))))OR(((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c3)))))AND(CASE rt0.c5  WHEN rt0.c0 THEN rt0.c5 ELSE rt0.c4 END)))AND(((((rt0.c3)AND(rt0.c5)))AND(rt0.c0)))) FROM rt0 WHERE (((((x'')) BETWEEN ((-1.121482251E9)) AND ((x''))) IN ())); -- 1ms;
SELECT ((((rt0.c1) IS FALSE))AND(((rt0.c3)LIKE(rt0.c4)))) FROM rt0; -- 0ms;
SELECT CAST(rt0.c0 AS BLOB) COLLATE BINARY FROM rt0; -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN ((1.896822528E9)) AND (((0xffffffff97fc4c92 IN (rt0.c6))))) FROM rt0 LIMIT 2131038185 OFFSET -934765368; -- 0ms;
SELECT DISTINCT (((((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c1))))<((((rt0.c6)AND('y\r'))))) FROM rt0 WHERE (((((x'fa05') NOT NULL)) NOT BETWEEN (('529024992' IN ())) AND (((0.49890497766615227) BETWEEN (NULL) AND (653933387))))) GROUP BY ((((rt0.c5) NOT NULL))<=(((rt0.c4)<>(rt0.c5)))) LIMIT 393497981; -- 0ms;
SELECT CAST((((rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((-3.45156551E8, rt0.c2, x'fa29')) AND ((rt0.c1, rt0.c2, rt0.c2))) AS INTEGER), (((rt0.c1 IN ())) IS FALSE), (rt0.c4 IN (rt0.c6, rt0.c1)) COLLATE BINARY, TOTAL((('')>=(rt0.c0))) OVER (), MIN(((rt0.c2)IS NOT(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c4)))%(((((rt0.c4)OR(rt0.c4)))OR(rt0.c1)))) FROM rt0 WHERE (TRIM((x'' IN (NULL)))); -- 0ms;
SELECT ALL (((rt0.c3)) BETWEEN ((((((rt0.c6)OR(rt0.c3)))OR(rt0.c2)))) AND (((NOT (rt0.c4))))), COUNT(*), CASE WHEN ((((rt0.c0)OR(rt0.c4)))OR(rt0.c2)) THEN rt0.c6 END FROM rt0; -- 0ms;
SELECT ((rt0.c2)-(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)))) FROM rt0 WHERE ((+ (COALESCE('	-*N%*', 0Xffffffffcea82f21, NULL, 0.36413318648545534)))); -- 0ms;
SELECT DISTINCT rt0.c2, ((((rt0.c0))>=((rt0.c2))) IN ((- (rt0.c1)))), rt0.c3 FROM rt0 WHERE ((x'' IN ()) COLLATE RTRIM); -- 0ms;
SELECT ((((rt0.c3) BETWEEN (rt0.c5) AND (rt0.c6))) BETWEEN (((rt0.c3)<<(rt0.c5))) AND (rt0.c4)) FROM rt0 WHERE (((UNLIKELY(x''))GLOB(((x'') NOTNULL)))); -- 0ms;
SELECT DISTINCT '-1805048247', ((((rt0.c1) NOTNULL))=(CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END)), ((((rt0.c3) NOT BETWEEN (rt0.c5) AND (rt0.c1)))-((+ (x'')))) FROM rt0 LIMIT -910701606 OFFSET -1926884332; -- 0ms;
SELECT DISTINCT x'', ((((rt0.c2)|(2.49831399E8))) NOTNULL), rt0.c3, (((x'')) BETWEEN ((((rt0.c6)*(rt0.c2)))) AND ((((rt0.c0)*(rt0.c2))))), (- (GROUP_CONCAT(rt0.c6))) FROM rt0; -- 0ms;
SELECT ALL ((~ (rt0.c5)) IN ()) FROM rt0 WHERE (((((x'', '-366547587', NULL)) BETWEEN ((x'1b77', NULL, '-1335806903')) AND ((0.06020231911388241, 0X76136cfb, ''))) IN ((((9.1523473E8))<=(('ITuLk(j')))))); -- 1ms;
SELECT (- (rt0.c3)) FROM rt0 WHERE (CAST(LIKE(0.0064585407092191405, x'', '0') AS BLOB)); -- 0ms;
SELECT DISTINCT ((AVG(rt0.c3)) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c5 COLLATE RTRIM) IS FALSE) FROM rt0 WHERE (LOWER(DISTINCT (((NULL)) BETWEEN ((NULL)) AND ((0.3592572089704218))))); -- 0ms;
SELECT DISTINCT ((((0xffffffffa69d8de8) IS TRUE))==(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c6 END)), rt0.c2, (NOT (rt0.c4)) COLLATE NOCASE FROM rt0 WHERE ((((('' IN ('1e500', NULL))))<>((((0.6788293604105357) NOT BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT DISTINCT '1249101427' FROM rt0 WHERE ((((('-1814774955') IS TRUE)) NOT BETWEEN (CAST(0.04820769367851363 AS REAL)) AND ((((2095427713, NULL, -1.404863263E9)) NOT BETWEEN (('', x'', NULL)) AND ((0Xffffffffad33a8c8, 2.039974156E9, NULL)))))) GROUP BY rt0.c0 HAVING ((rt0.c1) IS TRUE); -- 0ms;
SELECT rt0.c4, CASE WHEN ((rt0.c1) IS TRUE) THEN ((rt0.c2) IS TRUE) WHEN ((NULL)OR(rt0.c6)) THEN rt0.c6 WHEN CAST(rt0.c4 AS REAL) THEN rt0.c1 COLLATE BINARY END, LOWER(((rt0.c4) IS TRUE)) FROM rt0; -- 0ms;
SELECT (((rt0.c2) IS FALSE) IN ()) FROM rt0 WHERE ((((NOT (NULL))) ISNULL)); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE (0.2958209628757176) GROUP BY ((LIKELY(rt0.c3)) NOTNULL) LIMIT -698144012; -- 0ms;
SELECT ALL (((((((((((rt0.c6, rt0.c2, rt0.c5))>((rt0.c3, rt0.c4, rt0.c4))))OR((rt0.c5 IN ()))))AND(SUM(rt0.c3))))OR((((rt0.c2))>((rt0.c4))))))AND(rt0.c5 COLLATE BINARY)), (~ ((rt0.c6 IN ()))), (((((((rt0.c2, rt0.c0, rt0.c1))=((rt0.c2, rt0.c5, rt0.c0))))OR((+ (rt0.c6)))))AND(CAST(rt0.c3 AS INTEGER))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c4) AND (rt0.c1))) BETWEEN (((rt0.c4)-(rt0.c6))) AND (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c6)))), NULL, (+ (((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c1)))), AVG(CASE rt0.c1  WHEN 'FALSE' THEN rt0.c5 END) OVER (), 0.4791934280743054 FROM rt0 LIMIT 689443733 UNION SELECT ((rt0.c3) NOT NULL), ((((rt0.c0) BETWEEN (0.24266114977925657) AND (rt0.c1))) NOTNULL), rt0.c5, CASE WHEN CASE NULL  WHEN rt0.c0 THEN rt0.c1 END THEN SUM(rt0.c0) END, (((NOT (rt0.c6)))|(((rt0.c5) NOT BETWEEN (rt0.c1) AND (rt0.c3)))) FROM rt0;SELECT (NOT ((((rt0.c3, rt0.c3, rt0.c5))<((rt0.c3, rt0.c4, rt0.c0))))), ((RTRIM(rt0.c1)) NOT NULL), CAST(rt0.c3 AS TEXT) COLLATE BINARY FROM rt0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) AS INTEGER), (((rt0.c3 IN (rt0.c2, rt0.c6)))AND((~ (rt0.c5)))), (~ (rt0.c4)) COLLATE BINARY FROM rt0 WHERE ((+ (TYPEOF(DISTINCT NULL)))) LIMIT -204816734; -- 0ms;
SELECT x'' FROM rt0 GROUP BY ((((LIKELY(rt0.c2))OR(json_type(rt0.c3))))OR(((NULL) IS TRUE))) HAVING CAST(CAST(rt0.c0 AS TEXT) AS NUMERIC); -- 0ms;
SELECT DISTINCT (~ (rt0.c0 COLLATE RTRIM)), ((((((((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c3 THEN x'6c13' ELSE rt0.c1 END)OR(((NULL) BETWEEN (rt0.c1) AND (rt0.c3)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c6 ELSE rt0.c5 END)))OR(CASE WHEN rt0.c1 THEN rt0.c5 END)))OR(CAST(rt0.c6 AS TEXT))), (((SQLITE_COMPILEOPTION_USED(rt0.c2)))!=((rt0.c3))) FROM rt0; -- 0ms;
SELECT ALL (~ (((((rt0.c6)AND(rt0.c0)))AND(rt0.c1)))) FROM rt0 WHERE (CASE (x'' IN ('383097273'))  WHEN (+ ('q\u1L')) THEN ((x'') NOTNULL) ELSE ((0x7ef84e50) BETWEEN (NULL) AND ('')) END) ORDER BY -498252024 DESC;SELECT DISTINCT MIN(((((rt0.c4)OR(rt0.c0)))OR(rt0.c1))) FROM rt0 ORDER BY ((((rt0.c2 COLLATE RTRIM)AND((~ (rt0.c0)))))OR(CAST(NULL AS BLOB))) DESC; -- 0ms;
SELECT (((+ (NULL))) IS FALSE) FROM rt0 WHERE (((('-1050671696')) BETWEEN ((NULL)) AND ((CAST(0.6800448041987666 AS INTEGER))))); -- 0ms;
SELECT ALL (~ (((rt0.c2) IS TRUE))) FROM rt0; -- 0ms;
SELECT rt0.c2 FROM rt0 WHERE (CASE ((x'7b91f66f') IS TRUE)  WHEN 0.856433283563346 COLLATE RTRIM THEN (((x'', NULL, NULL)) BETWEEN ((0.7143028215213912, 1.241310474E9, 1601942400)) AND ((0.41996506201119443, NULL, x''))) ELSE CASE 0.487334995915222  WHEN 0.17573156253940447 THEN '8쇲<Z?䷌%' END END); -- 0ms;
SELECT ALL ((rt0.c1)/(((rt0.c3) NOT NULL))) FROM rt0 WHERE ((~ (x'')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((((rt0.c5)OR(rt0.c2)))OR(rt0.c6)) COLLATE NOCASE FROM rt0 WHERE (((LIKE(x'', 738485596))IS((+ (0.3750389235274686))))) GROUP BY rt0.c4 HAVING CAST(CAST(rt0.c3 AS NUMERIC) AS BLOB); -- 0ms;
SELECT DISTINCT (((((~ (rt0.c0)))OR(((rt0.c3)=(rt0.c4)))))AND(CAST(rt0.c0 AS TEXT))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((+ (rt0.c1)) AS INTEGER), (LIKELIHOOD(rt0.c6, 0.5313302647330183) IN (AVG(0.22127212905883953))), CAST(((rt0.c3)*(rt0.c3)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL CAST((rt0.c5 IN ()) AS NUMERIC), (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND (('0.6031200536564734')))) BETWEEN (rt0.c4) AND (((rt0.c5)IS(rt0.c1)))), (((((- (rt0.c0)))AND('')))AND((~ (rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1, rt0.c5, rt0.c4)) NOT BETWEEN ((CAST(rt0.c5 AS BLOB), CAST(rt0.c4 AS REAL), (((rt0.c0))<=((0X180f07d7))))) AND ((0.8552955741744279, ((((rt0.c5)AND(rt0.c0)))OR(rt0.c1)), rt0.c1 COLLATE RTRIM))) FROM rt0 WHERE (CAST(UPPER(DISTINCT '915234730') AS INTEGER)); -- 0ms;
SELECT DISTINCT CASE json_array(rt0.c3, rt0.c6)  WHEN x'' THEN ((rt0.c3)-(rt0.c4)) END, (('')IS NOT(0.5889520411411641)), CAST(LIKELY(DISTINCT rt0.c2) AS REAL) FROM rt0 ORDER BY DATE(((rt0.c2)<<(rt0.c1)), ((rt0.c5)%(rt0.c4)), (- (rt0.c4))), rt0.c4;SELECT DISTINCT rt0.c5 FROM rt0 WHERE (((('336435852')) NOT BETWEEN ((CASE x''  WHEN 0.7112392995691826 THEN x'' WHEN '' THEN '' WHEN 0.9465265477747378 THEN x'' ELSE x'3ec3' END)) AND (((((0x745c54a1)) BETWEEN ((NULL)) AND (('1139209600'))))))); -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) NOT NULL) FROM rt0 WHERE (CASE WHEN ((((x'1432')OR(0X621876a1)))AND(NULL)) THEN ((((NULL)AND('6->&0az')))AND('-251718545')) WHEN QUOTE(-1.829526021E9) THEN ((x'')>>(NULL)) WHEN (((('1017655619')OR(0Xfffffffff7d5d2ab)))OR(NULL)) THEN ((('.l', '-1065282513', 0x1cc6c33f, '', ''))<>((0x362342aa, x'', 0.6713288858827926, NULL, ''))) ELSE (('-1411659919')=(0.45585238752021273)) END); -- 1ms;
SELECT DISTINCT CASE WHEN ((rt0.c5)>>(rt0.c4)) THEN rt0.c4 ELSE ((rt0.c2) ISNULL) END FROM rt0 WHERE (((((x'')>(0xffffffffcddf847f)))||(CASE WHEN 0.8492067115243038 THEN '-1218116851' ELSE '-832151992' END))); -- 0ms;
SELECT DISTINCT rt0.c6, MAX(((rt0.c6) BETWEEN (rt0.c0) AND (rt0.c4))), ((NULL) NOT NULL) FROM rt0 GROUP BY NULL HAVING (((rt0.c5, rt0.c6, rt0.c0)) NOT BETWEEN ((CAST('1486729582' AS TEXT), LIKELY(DISTINCT rt0.c2), ((rt0.c2) NOTNULL))) AND (((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((0.6516590290916983))), (NOT (rt0.c3)), MIN(rt0.c0)))); -- 0ms;
SELECT DISTINCT 1515575351, TOTAL(CAST(rt0.c5 AS NUMERIC)), ((((rt0.c0)!=(rt0.c1)))*(((rt0.c0)<(rt0.c4)))) FROM rt0 WHERE (((((NULL) NOT NULL)) ISNULL)); -- 0ms;
SELECT CASE WHEN 1326852431 THEN ((rt0.c2)OR(rt0.c0)) END FROM rt0 WHERE (((IFNULL(DISTINCT NULL, '+''㥉E<cZTQ')) BETWEEN (CAST(0.520915157262474 AS INTEGER)) AND (-582695970))); -- 0ms;
SELECT ALL ((((((rt0.c0) ISNULL))AND(CAST(rt0.c0 AS BLOB))))AND(NULLIF(rt0.c2, rt0.c3))), CASE ((rt0.c5)OR(rt0.c3))  WHEN IFNULL(DISTINCT rt0.c5, rt0.c3) THEN SUBSTR(rt0.c0, x'2e89') ELSE ((rt0.c4) NOTNULL) END, (((- (0.6523152594044972)))IS NOT(ABS(rt0.c6))) FROM rt0 WHERE (((((NULL) NOT BETWEEN (x'') AND (NULL))) IS FALSE)); -- 0ms;
SELECT SUM(((rt0.c3)>=(rt0.c1))) OVER (), SUM(((rt0.c5)IS(rt0.c3))), CAST(((rt0.c1) BETWEEN (rt0.c5) AND (rt0.c4)) AS BLOB) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c2, (~ (rt0.c4 COLLATE BINARY)), AVG((((rt0.c2, rt0.c6, rt0.c6))>((rt0.c0, rt0.c2, rt0.c2)))), GROUP_CONCAT(((rt0.c6) BETWEEN (rt0.c6) AND (rt0.c0))), (((rt0.c4 IN ()))IS NOT(CAST(rt0.c2 AS NUMERIC))) FROM rt0 WHERE ((((((NULL))<=(('-B/o6k,m喴'))))IS(((NULL) NOT NULL)))) ORDER BY (((rt0.c1))<((rt0.c0))); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT 0.7031821578814078, rt0.c1) COLLATE BINARY FROM rt0 WHERE (CASE 0.26775535761106195 COLLATE BINARY  WHEN CASE 0.3164401410978167  WHEN -213392986 THEN 0.9465051338102556 ELSE NULL END THEN (-1336285671 IN ('', 0.6551852514561841)) WHEN (NOT ('}LQ 歹cFW')) THEN CAST(x'0563' AS NUMERIC) WHEN NULL COLLATE RTRIM THEN ('iAfa' IN ('-361554378')) END); -- 0ms;
SELECT 0.7315287135337005 FROM rt0 WHERE ((((((('-686375878', 1061280763, 0Xee41fe7))>((NULL, -9.14898693E8, x'')))))>=(((((0.42529713481881615, '#*', x''))==(('(PkwRᶜ', '', '913259123'))))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE((((rt0.c2, rt0.c1, rt0.c2)) BETWEEN ((((((((((rt0.c6)OR(rt0.c0)))AND('-1745073006')))OR(rt0.c2)))AND(rt0.c5)), CAST(rt0.c3 AS REAL), HEX(DISTINCT rt0.c6))) AND ((json_insert(rt0.c2, rt0.c3, rt0.c0), ((((((((((((((((rt0.c4)OR(rt0.c5)))OR(rt0.c0)))AND(NULL)))AND(rt0.c3)))OR(rt0.c6)))AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c6)), CAST(rt0.c0 AS NUMERIC))))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0 WHERE ((((0.9629060203651256, x'', NULL)) BETWEEN ((NULL COLLATE NOCASE, ((('1622867953', x'', x''))<((NULL, '', -1469836995))), CASE 0.14337658762786742  WHEN '' THEN 0.4856073459703909 END)) AND (('K\^uJHd' COLLATE RTRIM, (('汫l') IS TRUE), ((((0.353491428273247)AND(NULL)))OR('2036904271')))))); -- 0ms;
SELECT DISTINCT (CASE WHEN rt0.c5 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c3 ELSE rt0.c2 END IN ()), ((CASE WHEN rt0.c0 THEN 0.8637779173299641 ELSE rt0.c5 END) NOTNULL), rt0.c0 FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c4))!=((rt0.c2))))>>(((((rt0.c3)OR('-345156551')))AND(rt0.c5)))) FROM rt0 WHERE ((((((((0.702001193597779, x'', 0.10712078903795763)) NOT BETWEEN ((0.8043928167777076, x'bec1', NULL)) AND ((0.41018366924186145, 0.30338929001365167, NULL))))AND(CASE NULL  WHEN '-827838687' THEN 0.48888105515280633 ELSE NULL END)))AND(((NULL) IS TRUE)))) GROUP BY ((((rt0.c1) NOT NULL))<<(((((rt0.c1)OR(rt0.c5)))OR(x'')))) HAVING ((rt0.c5 COLLATE RTRIM) NOT BETWEEN ((NOT ('tx\\<&hn'))) AND (((rt0.c3)|(rt0.c6)))) ORDER BY ((((rt0.c3) IS TRUE))IS NOT(rt0.c4 COLLATE NOCASE)) DESC, CASE (NOT (rt0.c3))  WHEN json_object('''v', rt0.c6, rt0.c5, rt0.c2) THEN ((rt0.c5)<(rt0.c6)) END ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT MIN((rt0.c1 IN (rt0.c2)) COLLATE RTRIM) FROM rt0 WHERE ((((- (0.21415866222937086))) BETWEEN ('') AND (((0.05641722602962285)>>(0.719564937747991))))); -- 0ms;
SELECT (((rt0.c0)) BETWEEN (((- (rt0.c6)))) AND ((((rt0.c4)==(rt0.c0))))), -1464003768, 'i6Hu' FROM rt0; -- 0ms;
SELECT ALL ((((((((CAST(rt0.c6 AS NUMERIC))AND(CAST(rt0.c6 AS INTEGER))))OR(((rt0.c2)||(rt0.c0)))))OR((- (rt0.c4)))))OR(((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT NULLIF(0x3ad7939f, (rt0.c3 IN (rt0.c2, rt0.c3))) FROM rt0; -- 0ms;
SELECT rt0.c5 FROM rt0 WHERE (((((((((((((((0.6402921771509504)!=(-698144012)))OR(-473199340 COLLATE NOCASE)))OR(('1363841210' IN (21756166, x'')))))OR(CASE '2085622544'  WHEN NULL THEN NULL END)))AND((('^/Av⌰౫Ib') BETWEEN (NULL) AND (x'ac26973c')))))AND(((((0x573d1ce1)AND(0xffffffffcb88dc51)))OR(NULL)))))AND((NULL IN ())))); -- 0ms;
SELECT DISTINCT ((((rt0.c2)<<(rt0.c4))) IS FALSE) FROM rt0 WHERE (COALESCE((('150854176')>=(0.4890404618090153)), CAST('-1469836995' AS NUMERIC))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR(MIN(rt0.c2))))AND(((rt0.c4)<=(rt0.c1)))) FROM rt0 WHERE ((~ ((x'' IN ('\Smx'))))); -- 0ms;
SELECT ALL rt0.c2, 0Xffffffff875dec4c, (((rt0.c1)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c6)))) AND ((rt0.c2 COLLATE RTRIM))) FROM rt0 WHERE (((NULL COLLATE BINARY) NOT BETWEEN (('' IN ())) AND (CAST('UjM歹zRn' AS REAL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c1)-(rt0.c2))) NOT BETWEEN ((((rt0.c3)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) AND ((rt0.c6 IN ()))) FROM rt0; -- 1ms;
SELECT rt0.c3 FROM rt0; -- 0ms;
SELECT ALL '0.2631308580900483' FROM rt0 ORDER BY json_insert(PRINTF(rt0.c5), (rt0.c3 IN ()), ((rt0.c2) NOT NULL))  NULLS FIRST;SELECT ALL SUM(((((((((((((rt0.c3)AND(rt0.c0)))AND(rt0.c6)))OR(NULL)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c6))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c5) NOT BETWEEN (rt0.c3) AND (rt0.c4)) THEN ((rt0.c4) ISNULL) END FROM rt0 ORDER BY ((CASE rt0.c4  WHEN rt0.c4 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c3 WHEN rt0.c6 THEN rt0.c1 ELSE rt0.c4 END) ISNULL); -- 0ms;
SELECT DISTINCT CAST((rt0.c5 IN (rt0.c5, rt0.c5)) AS TEXT), LOWER(DISTINCT LOWER(rt0.c0)), (rt0.c4 IN ()) COLLATE BINARY FROM rt0 ORDER BY ((UNICODE(rt0.c6)) NOT BETWEEN (CAST(rt0.c4 AS BLOB)) AND ((((rt0.c6)) NOT BETWEEN ((NULL)) AND ((rt0.c2))))) ASC; -- 0ms;
SELECT ALL NULL FROM rt0 WHERE ((NOT (((NULL) IS FALSE)))); -- 0ms;
SELECT (NOT ((((rt0.c1, rt0.c6, rt0.c6, x'6baad2fd', rt0.c5))==((rt0.c0, rt0.c5, rt0.c0, rt0.c0, rt0.c5))))) FROM rt0 WHERE ((LIKE('{G-df_#搜*', 'O\rr', ',') IN ())) INTERSECT SELECT DISTINCT NULL FROM rt0 WHERE (CASE WHEN (('V೘')<=(0.26143178017264357)) THEN x'' WHEN ((0.9436916195599363)<<(NULL)) THEN ((x'') BETWEEN ('-1775956843') AND (NULL)) WHEN CASE WHEN NULL THEN 0xffffffff96250c95 ELSE NULL END THEN CASE WHEN NULL THEN '611250613' WHEN NULL THEN 0xfffffffff6ca8e64 WHEN NULL THEN 'R홴*拟' ELSE NULL END END); -- 0ms;
SELECT DISTINCT COALESCE(DISTINCT MAX(rt0.c6), (('H#')LIKE(rt0.c3)), CASE WHEN rt0.c4 THEN '?*Uh*<}lV' WHEN rt0.c0 THEN rt0.c6 WHEN rt0.c5 THEN rt0.c5 ELSE rt0.c2 END, UPPER(rt0.c0)) FROM rt0 WHERE ((((((('b') NOT BETWEEN (NULL) AND (-5.77069579E8)))OR(json_extract(915234730, 1.56583259E8, x'', '1601579128', 0.6258233268201059, x''))))OR(((0.30430735970425915)-('0.5656621797530971'))))); -- 0ms;
SELECT ((('0.9979251154336277' IN (rt0.c0))) BETWEEN (CAST(rt0.c6 AS REAL)) AND (rt0.c1 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT ALL CUME_DIST() OVER () FROM rt0 WHERE ((((x'', '*!%', 'i_')) NOT BETWEEN ((-1757153443, (~ ('-866190496')), CASE WHEN x'' THEN '1645770401' ELSE 0.6834387537880634 END)) AND (((0.9768288799192049 IN ()), LIKELIHOOD(DISTINCT 1.488962384E9, 0.5142395356883749), 2048602052)))); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c6) IS FALSE)), (((rt0.c2, NULL, rt0.c4)) NOT BETWEEN ((rt0.c2 COLLATE BINARY, '', (~ (rt0.c6)))) AND ((MIN(rt0.c6), MIN(rt0.c3), CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END))), COALESCE(DISTINCT ((rt0.c2) IS TRUE), ((rt0.c4) NOT BETWEEN (NULL) AND (''))), ((0.6670603267730489)<<(CASE rt0.c4  WHEN '-1036481258' THEN '[''' WHEN rt0.c1 THEN rt0.c1 WHEN x'2d02' THEN rt0.c5 END)), (NOT (CAST(rt0.c4 AS INTEGER))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c6 COLLATE BINARY AS BLOB), ((((TIME(rt0.c6, rt0.c2, rt0.c4, rt0.c6, rt0.c0))AND(rt0.c6)))OR(NULL)), ((HEX(DISTINCT rt0.c1))<=(rt0.c3)) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1) NOTNULL) IN ()), (((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))AND(rt0.c4)))AND(rt0.c0)) IN ()), (((((rt0.c0)OR(0X61c86102)))OR(rt0.c4)) IN ()) FROM rt0; -- 0ms;
SELECT ALL TOTAL((+ (0.7579987159187227))) OVER (), (CASE WHEN rt0.c2 THEN rt0.c6 END IN (((rt0.c5)-(rt0.c1)), CASE WHEN rt0.c1 THEN rt0.c0 END)), CAST((~ (rt0.c4)) AS REAL) FROM rt0 WHERE (((((((((((('0.7579987159187227')AND(x'c6cc')))OR('')))AND(NULL)))OR(0.007010583981994389)), CAST(-1.404863263E9 AS TEXT), CAST(x'3a9192d4' AS REAL)))>((x'', (+ (']T^ny8')), ('iP''<&-3822342134766954587:6982793954748090746:-9215034619434028913T㜀-' IN ()))))) ORDER BY 'F)' DESC, ((((((((((((((((rt0.c1)AND(((((x'b63986f5')AND(rt0.c4)))OR('0.033091674581678276')))))AND(((rt0.c3) ISNULL))))OR(((rt0.c6)<=(rt0.c0)))))AND(CAST(rt0.c3 AS NUMERIC))))AND((NOT (rt0.c3)))))OR((NOT (rt0.c5)))))AND((rt0.c6 IN ()))))OR(((rt0.c3) NOTNULL))), ((((((((((rt0.c6) BETWEEN (rt0.c4) AND (rt0.c5)))AND(((rt0.c1) NOT NULL))))AND(CASE WHEN rt0.c6 THEN rt0.c1 ELSE rt0.c4 END)))AND(((rt0.c0) IS FALSE))))OR(IFNULL(rt0.c2, rt0.c5)))  NULLS LAST; -- 0ms;
SELECT ((((rt0.c0 COLLATE BINARY)AND((~ (rt0.c5)))))OR(CASE 1601579128  WHEN rt0.c5 THEN rt0.c2 ELSE rt0.c1 END)) FROM rt0 WHERE ((((x'6a37')IS(2059647354)) IN ('1515575351' COLLATE BINARY, '' COLLATE NOCASE))) GROUP BY '1470469378'; -- 0ms;
SELECT ALL ((((((((rt0.c3)AND(rt0.c4)))AND(rt0.c4)))OR(CASE WHEN rt0.c3 THEN rt0.c1 END)))OR(((rt0.c1)==(rt0.c2)))), ((((((rt0.c3)OR(rt0.c3)))AND(rt0.c0)))IS(((rt0.c3) NOTNULL))), rt0.c5 FROM rt0 WHERE (json_quote(CAST('py' AS NUMERIC))) LIMIT 963465072 OFFSET -1841294567; -- 0ms;
SELECT DISTINCT (NOT (((((rt0.c1)OR('573052111')))OR(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c1) NOT NULL)) OVER ( ORDER BY (rt0.c4 IN ()) DESC) FROM rt0 LIMIT 956191198; -- 0ms;
SELECT DISTINCT ((rt0.c0)||('PA')) FROM rt0 WHERE ((('熹g' COLLATE BINARY)<<(PRINTF('-1')))); -- 0ms;
SELECT DISTINCT (~ ((rt0.c4 IN (rt0.c6)))) FROM rt0; -- 1ms;
SELECT DISTINCT ((NULL COLLATE RTRIM)||(((rt0.c4) BETWEEN (rt0.c5) AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(0.7896997859821406) OVER () FROM rt0 WHERE (((LIKE('-1807371307', NULL)) NOT BETWEEN ((('352247085')OR(0.23600534017815544))) AND ((('2102224037') BETWEEN (0x2771adff) AND ('-738718062'))))); -- 0ms;
SELECT DISTINCT (((((rt0.c3)AND(rt0.c2)))AND(NULL)) IN ()), rt0.c5, (TOTAL(rt0.c4) IN (TYPEOF(rt0.c3))) FROM rt0 WHERE (((('1364605848', '0.0', 0.9852925391825373, 0.6910804961369142, '-2024302043', '', x'')) NOT BETWEEN (((((-1569491537))==((0.4816194263608182))), '358926759' COLLATE NOCASE, (0.41365965916933334 IN ()), ((0.33007697049279305) BETWEEN (-277096909) AND (x'')), ((0.2631308580900483)/(NULL)), '' COLLATE BINARY, (- (NULL)))) AND (((NOT (0.9537727337446358)), -1375841035 COLLATE BINARY, ((NULL)>=(0.5670407934467376)), CASE WHEN -1992428934 THEN '-702737326' ELSE '-9223372036854775808' END, CAST('i6hu' AS INTEGER), (((x'ea80')) BETWEEN ((1962192830)) AND (('-1121482251'))), (((('!^01')OR(NULL)))AND(0X33725153)))))); -- 0ms;
SELECT DISTINCT ((rt0.c5 COLLATE RTRIM)>(rt0.c4)) FROM rt0 LIMIT -1091050718 OFFSET -1420801456; -- 0ms;
SELECT ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0)))/(rt0.c6)) FROM rt0; -- 0ms;
SELECT ALL (+ (((rt0.c2) NOT NULL))), COUNT(MIN(0.2532048386654887 COLLATE BINARY)), rt0.c5 FROM rt0 WHERE ((- ((('i>_m5r') NOT NULL))));SELECT DISTINCT CAST(LTRIM(rt0.c1) AS REAL) FROM rt0 ORDER BY json_array_length(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c5 END); -- 0ms;
SELECT ALL CASE WHEN ((x'') NOT BETWEEN (rt0.c4) AND (0.5271569888282907)) THEN ((rt0.c5)GLOB(rt0.c6)) ELSE '0.8224062891662245' END FROM rt0; -- 0ms;
SELECT DISTINCT ((((0.7162020383347131) ISNULL))<=(rt0.c0)) FROM rt0 WHERE ((((('-136981845') ISNULL))AND(SQLITE_COMPILEOPTION_USED(x'')))) LIMIT -1525845861 OFFSET 1778169293; -- 0ms;
SELECT DISTINCT FIRST_VALUE(rt0.c5) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE BINARY) NOT NULL) FROM rt0 WHERE (((((NULL) ISNULL)) BETWEEN (((x'de85') NOT NULL)) AND ((('W')AND('-423547231'))))); -- 0ms;
SELECT COUNT(CASE 0.38542467299518124  WHEN rt0.c2 THEN rt0.c5 END) FROM rt0 WHERE ((((('') NOT NULL)) IS TRUE)); -- 0ms;
SELECT (((CASE WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c3 END))<>(((rt0.c0 IN ())))) FROM rt0; -- 0ms;
SELECT ((rt0.c1)>(((NULL)AND(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((0.07104241458195093, rt0.c2, rt0.c0, '0.26724500535148865', rt0.c3)) BETWEEN ((rt0.c1, rt0.c6, rt0.c3, rt0.c1, rt0.c5)) AND ((rt0.c1, rt0.c0, rt0.c4, rt0.c0, rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM rt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN (('0.8224062891662245') BETWEEN (x'') AND (0.8747497103414258)) ELSE LOWER(DISTINCT x'') END); -- 0ms;
SELECT DISTINCT (CAST(rt0.c2 AS NUMERIC) IN ()) FROM rt0 WHERE (((TYPEOF(DISTINCT '1041462916')) IS FALSE)); -- 1ms;
SELECT ALL CAST(((rt0.c1)LIKE(rt0.c1)) AS NUMERIC) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3 COLLATE BINARY) NOT BETWEEN (GROUP_CONCAT(rt0.c1)) AND ((~ (0.3329890636369147)))), ((rt0.c3 COLLATE BINARY) NOT BETWEEN (((rt0.c2) NOT NULL)) AND ((- (rt0.c3)))), ((((((rt0.c0)OR(rt0.c6)))OR(rt0.c0))) ISNULL) FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (((rt0.c3)) NOT BETWEEN ((rt0.c4)) AND ((rt0.c2))) THEN GROUP_CONCAT(rt0.c4) ELSE (((rt0.c6, rt0.c3, rt0.c6))<=((rt0.c5, rt0.c5, rt0.c0))) END FROM rt0 WHERE ((((('1238786070')>(NULL)))>((((622428080)) NOT BETWEEN ((x'')) AND ((x'')))))); -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c4  WHEN rt0.c0 THEN NULL ELSE rt0.c1 END AS INTEGER) FROM rt0 WHERE (((0.034394070502576035)||('O/')) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c6)) THEN (rt0.c5 IN ()) WHEN MIN(rt0.c1) THEN rt0.c5 COLLATE BINARY WHEN (+ (rt0.c3)) THEN NULL ELSE (rt0.c0 IN ()) END FROM rt0 GROUP BY (rt0.c6 IN ()) COLLATE NOCASE, ((rt0.c3 COLLATE BINARY) BETWEEN ('') AND (rt0.c5 COLLATE NOCASE)), rt0.c6 HAVING ((0.4748421262074518) BETWEEN (NULLIF(DISTINCT rt0.c5, NULL)) AND (IFNULL(rt0.c0, rt0.c0))); -- 0ms;
SELECT DISTINCT ((- (rt0.c4)) IN ()), (((rt0.c6)IS NOT(rt0.c5)) IN ()), ((rt0.c5)IS NOT(1381133133)) FROM rt0; -- 0ms;
SELECT rt0.c2 FROM rt0 WHERE (UPPER(DISTINCT '-1441543681' COLLATE NOCASE)); -- 0ms;
SELECT ALL FIRST_VALUE(CAST((((rt0.c0, rt0.c3, rt0.c5)) NOT BETWEEN ((rt0.c6, x'b8f9', NULL)) AND ((rt0.c0, rt0.c6, rt0.c6))) AS BLOB)) OVER () FROM rt0 WHERE (((((((x'f8d3')AND('-827838687')))OR(0.4052514099595347)))AND(CASE WHEN 0.26724500535148865 THEN 0.7425050686807698 END))); -- 1ms;
SELECT ALL MIN((((rt0.c0))>=((rt0.c5)))) FROM rt0; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL CASE ((rt0.c4) IS FALSE)  WHEN CAST(rt0.c5 AS NUMERIC) THEN AVG('918581753') ELSE (- (rt0.c1)) END, AVG((~ (rt0.c5))) OVER (), (((CASE WHEN rt0.c3 THEN rt0.c6 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c4 END, CAST(rt0.c5 AS REAL), rt0.c0 COLLATE RTRIM))<>((CAST(rt0.c5 AS NUMERIC), rt0.c3 COLLATE BINARY, ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (rt0.c6)) COLLATE NOCASE, ((rt0.c2 COLLATE BINARY)%((((rt0.c2)) BETWEEN ((rt0.c4)) AND ((rt0.c6))))), (((~ (rt0.c0)))||(((rt0.c1)GLOB(rt0.c0)))) FROM rt0 WHERE (((((((NULL)OR('1364605848')))OR('淩4骷}dJ'))) BETWEEN (((x'') NOT NULL)) AND (COALESCE(0.6338959678523061, 0.7620261604303832)))); -- 0ms;
SELECT DISTINCT (('111126884')IS NOT(((rt0.c6)<=(x'')))) FROM rt0 WHERE ((((x'')GLOB(x'77111be7')) IN ())) GROUP BY ((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c2)))GLOB(((rt0.c1)OR(rt0.c3)))); -- 0ms;
SELECT DISTINCT (((rt0.c1) NOT NULL) IN ('-866190496')) FROM rt0 WHERE ('l~DK?'); -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c2 AS REAL)) OVER (), DENSE_RANK() OVER (), ((((((0.5285897842663909) NOTNULL))OR(rt0.c3)))OR((rt0.c6 IN (rt0.c6, rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT NULL, ((CASE WHEN rt0.c2 THEN rt0.c6 END) IS TRUE), NULL FROM rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c1 IN ()) COLLATE NOCASE) OVER (), (((((rt0.c3)OR(rt0.c4)))OR(rt0.c4)) IN ()), (((NOT (rt0.c2))) NOT BETWEEN (CAST(rt0.c3 AS INTEGER)) AND (rt0.c4)), CAST('0.3329890636369147' AS BLOB) COLLATE RTRIM, LAST_VALUE(((((rt0.c1) IS FALSE))<<(((rt0.c6) IS FALSE)))) OVER () FROM rt0; -- 1ms;
SELECT DISTINCT (CASE WHEN rt0.c6 THEN rt0.c2 ELSE x'' END IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c6) IS TRUE) COLLATE RTRIM FROM rt0 WHERE ((('0.702001193597779') IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT ((x'' COLLATE NOCASE)%(rt0.c2 COLLATE NOCASE)) FROM rt0 WHERE ((((('1017655619' IN (-639316289, 0.02191026983423172)), (NOT (0.48949409432072954)), ((NULL)>=(-1366075798))))<=((SQLITE_VERSION(), ((x'27a27d62')%(0x5f762878)), NULLIF('941854288', x'c4c8'))))); -- 0ms;
SELECT DISTINCT '-577069579' FROM rt0; -- 0ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c6 WHEN rt0.c6 THEN rt0.c2 ELSE '0.4675074548590522' END)|(COALESCE(rt0.c3, rt0.c2, rt0.c3, rt0.c4))) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c6) BETWEEN (rt0.c4) AND (rt0.c2))) NOT BETWEEN (rt0.c2 COLLATE NOCASE) AND (rt0.c0)) FROM rt0 WHERE (((0.8805991627761424) IS FALSE) COLLATE NOCASE COLLATE RTRIM); -- 0ms;
SELECT ALL (((((NOT (rt0.c5)))OR('[ꝴPKe')))OR(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE rt0.c1  WHEN rt0.c6 THEN rt0.c5 ELSE rt0.c0 END THEN ((rt0.c0)OR(NULL)) END FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), CASE (- (rt0.c2))  WHEN CAST(x'55b4' AS BLOB) THEN ((rt0.c4)&(rt0.c0)) WHEN rt0.c6 THEN (+ (rt0.c2)) WHEN ((1601579128)*(rt0.c4)) THEN highlight(rt0.c2, NULL, rt0.c2, rt0.c4) END, (NOT (rt0.c0)) COLLATE NOCASE FROM rt0;SELECT TOTAL(COUNT((((rt0.c4)) BETWEEN ((rt0.c1)) AND ((rt0.c6))))) FROM rt0 ORDER BY TRIM((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0)))) ASC;SELECT ALL COALESCE(DISTINCT ((rt0.c3)GLOB(rt0.c6)), ((rt0.c6)-(rt0.c0))) FROM rt0; -- 0ms;
SELECT DISTINCT json_patch(UPPER(rt0.c6), (rt0.c0 IN ())), (((rt0.c3)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c6)))) AND ((rt0.c3))), LAST_VALUE(((((((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c5)))AND(NULLIF(rt0.c4, rt0.c1))))OR(((rt0.c4)<(rt0.c6))))) OVER (), GROUP_CONCAT(rt0.c4), ((CAST(rt0.c4 AS NUMERIC)) BETWEEN (CAST(rt0.c2 AS REAL)) AND (((((rt0.c5)AND(rt0.c6)))AND(rt0.c2)))) FROM rt0;SELECT (((rt0.c2 IN (rt0.c4, rt0.c3))) IS TRUE) FROM rt0 LIMIT -729381641; -- 2ms;
SELECT DISTINCT ((((((((((((CAST(rt0.c2 AS INTEGER))OR(((rt0.c6)|(rt0.c5)))))AND(((rt0.c1)*(rt0.c3)))))OR(((rt0.c0) IS TRUE))))AND(((((((((rt0.c4)AND(rt0.c5)))AND(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)))))OR(((((((((0Xffffffffcaff3076)OR(rt0.c5)))OR(rt0.c3)))OR(x'b669')))AND(0Xffffffffd4323a79)))))OR(COUNT(*))) FROM rt0 WHERE (((((0.5418416028164206) BETWEEN (0xffffffff8ae66c34) AND ('-1382218530'))) NOT BETWEEN (json_insert(0.7228038999760805, x'', x'')) AND (((-920707161) NOTNULL))));SELECT DISTINCT ((((((((rt0.c4)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c3)))OR(rt0.c4)) COLLATE NOCASE FROM rt0 GROUP BY (((rt0.c3, (((rt0.c6)) BETWEEN ((rt0.c5)) AND ((rt0.c0))), NULLIF(rt0.c3, -1.745073006E9)))!=((((rt0.c6)*(rt0.c1)), ((rt0.c4) NOTNULL), SQLITE_COMPILEOPTION_GET(rt0.c0)))) HAVING CAST(TYPEOF(rt0.c0) AS INTEGER); -- 0ms;
SELECT ALL rt0.c5 FROM rt0 WHERE (((CASE WHEN NULL THEN 0x49d66016 WHEN 0.7084008301792003 THEN 0.951898717803323 WHEN NULL THEN 0.35514357521807394 ELSE 0.7623738321665705 END) NOT NULL)) LIMIT 827364993 OFFSET 1179366705; -- 0ms;
SELECT DISTINCT LEAD(((((rt0.c3)OR(rt0.c3)))<>(((((x'')OR(rt0.c6)))OR(rt0.c4)))), CASE (NOT (rt0.c6))  WHEN (NOT (rt0.c1)) THEN ((rt0.c0)<(rt0.c1)) END, CASE WHEN CASE rt0.c0  WHEN rt0.c5 THEN NULL ELSE 1249101427 END THEN rt0.c1 WHEN ((rt0.c3)<<(rt0.c6)) THEN ((rt0.c3)>>(rt0.c1)) WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1) IS FALSE) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c5)) THEN ((rt0.c4) ISNULL) WHEN rt0.c4 COLLATE BINARY THEN CASE WHEN rt0.c2 THEN rt0.c3 END END) OVER () FROM rt0 WHERE ((((((x'') BETWEEN (0x60bafff1) AND (-108944225))))>(((NULL IN ()))))); -- 0ms;
SELECT DISTINCT (((rt0.c0)<>(rt0.c4)) IN (rt0.c4)) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)))AND(((rt0.c5) BETWEEN (rt0.c2) AND (rt0.c1)))))OR(((rt0.c3)<(rt0.c0)))))OR(((rt0.c0)IS(rt0.c2)))))AND(((rt0.c0) ISNULL))) FROM rt0; -- 0ms;
SELECT ALL (+ (CASE WHEN rt0.c1 THEN rt0.c6 END)), (rt0.c4 IN ()), rt0.c2 FROM rt0 WHERE (CASE WHEN (('-914898693')|('tyL4')) THEN ((NULL) IS TRUE) ELSE 'TZ\n' END); -- 0ms;
SELECT DISTINCT NULL FROM rt0 ORDER BY CASE WHEN rt0.c2 COLLATE BINARY THEN ((rt0.c6)<(rt0.c0)) ELSE ((rt0.c6)OR(rt0.c3)) END DESC LIMIT -1392114864 OFFSET 1653647519; -- 1ms;
SELECT ((MIN(rt0.c0))<>((rt0.c5 IN (rt0.c3)))), rt0.c3, GROUP_CONCAT(COUNT(*)) FROM rt0;SELECT ALL TOTAL((~ (rt0.c4))) FROM rt0; -- 0ms;
SELECT ALL json_object(((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c0)), ((rt0.c3) NOT NULL)) FROM rt0 WHERE ((((NULL)) BETWEEN ((((NULL) NOT BETWEEN ('') AND (1.919837361E9)))) AND ((('426495340' IN ()))))); -- 0ms;
SELECT (NOT (((((rt0.c2)OR(rt0.c5)))OR(rt0.c2)))) FROM rt0 WHERE (LIKELIHOOD(CAST(NULL AS REAL), 0.8709232825140101)); -- 0ms;
SELECT DISTINCT (((- (rt0.c5))) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c3 END) AND (CAST(rt0.c3 AS INTEGER))) FROM rt0 WHERE (0Xffffffffebc00b85) LIMIT -220889730 OFFSET 860680362; -- 0ms;
SELECT (((NULL, rt0.c2 COLLATE BINARY, rt0.c6))<((((rt0.c6)IS(rt0.c4)), LIKELIHOOD(rt0.c0, 0.3077240694166431), ((((((((((((((((rt0.c0)OR(rt0.c5)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c5)))AND(rt0.c4))))) FROM rt0 WHERE ((((('-827838687')==(0.008363021241764579)))<((- ('0u6okg'))))); -- 1ms;
SELECT CAST(((((rt0.c0)AND(NULL)))OR(rt0.c4)) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c0 THEN rt0.c6 END)OR(((rt0.c6)>(rt0.c6)))))AND(rt0.c3)), TOTAL(CAST(rt0.c5 AS BLOB)) OVER (), ((((CASE rt0.c5  WHEN rt0.c5 THEN rt0.c4 END)OR(NULLIF(DISTINCT rt0.c3, rt0.c2))))AND((- (rt0.c6)))) FROM rt0 WHERE (HEX(CASE '331318192'  WHEN '2066185499' THEN NULL WHEN '915234730' THEN x'5543' WHEN '660653905' THEN 0.5656621797530971 ELSE NULL END)); -- 0ms;
SELECT DISTINCT (NOT (SUM(x''))), GROUP_CONCAT((NOT (rt0.c5))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE TIES), SUM('94+e]bGF') OVER () FROM rt0; -- 0ms;
SELECT ALL RTRIM((rt0.c6 IN ())) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c6)>>(rt0.c1)))AND((rt0.c3 IN ()))))AND(((rt0.c5) ISNULL))) FROM rt0 LIMIT 222549419; -- 0ms;
SELECT DISTINCT rt0.c6 FROM rt0 WHERE ((((x'4344' IN (NULL)))GLOB(((-2053524866) NOT NULL)))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (((((0.37249448288125686) NOT BETWEEN ('-1534262283') AND (NULL)))%('191796165'))); -- 0ms;
SELECT DISTINCT COUNT((((rt0.c5)) BETWEEN ((rt0.c2)) AND ((rt0.c2)))) OVER () FROM rt0 WHERE (((('%3')) BETWEEN ((CASE WHEN NULL THEN x'' ELSE x'' END)) AND (((((''))<((x''))))))); -- 0ms;
SELECT DISTINCT 0.5670708708298513, rtreenode(0.2394649321446537, rt0.c5), (~ ((rt0.c5 IN (rt0.c0)))) FROM rt0 WHERE ((((((('-262672710') BETWEEN ('0.23825883456778785') AND (NULL)))AND(((1385615873)|('1893321236')))))OR('478226184'))) LIMIT -1069500540; -- 0ms;
SELECT DISTINCT CAST(((rt0.c6)LIKE(rt0.c3)) AS TEXT) FROM rt0 WHERE (CASE WHEN NULL THEN ((x'')IS NOT(0.0914309039806338)) WHEN (+ (x'98ac')) THEN (('>튫') NOT BETWEEN (0.35414129402494066) AND ('-805533753')) WHEN (-1795772132 IN ()) THEN ((-615676347) NOT BETWEEN (NULL) AND (0.23553985890184947)) WHEN ((NULL) BETWEEN (NULL) AND (0.5353555877434772)) THEN '1314144858' COLLATE BINARY WHEN ((NULL)LIKE(0.23825883456778785)) THEN 1.488962384E9 END); -- 1ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c6 AS REAL), COUNT(QUOTE(rt0.c6)) OVER ( ROWS  CURRENT ROW EXCLUDE TIES), ((0.10679313423729564)>>((((rt0.c0, rt0.c2, '1645770401', rt0.c4, rt0.c2))<=((rt0.c4, rt0.c0, rt0.c3, rt0.c5, rt0.c4))))) FROM rt0 WHERE (CAST(((NULL) NOT NULL) AS TEXT)) ORDER BY ((((((rt0.c3)/(rt0.c5)))OR((+ (rt0.c2)))))OR(((((rt0.c5)OR('-93762982')))OR(rt0.c5)))), (rt0.c0 IN ()) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT ((((rt0.c3) BETWEEN (rt0.c0) AND (rt0.c1))) ISNULL) FROM rt0 WHERE (CAST(TRIM(0xffffffff9ccbc05e, '637000764') AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((((((('-0.0')AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c5)))AND(rt0.c3)) IN ()), ((0.42729984046728275 COLLATE BINARY)-(116219079)), ((((((rt0.c2)==(rt0.c4)))OR(rt0.c3)))AND(((rt0.c0)GLOB(rt0.c4)))) FROM rt0 WHERE (TYPEOF(((((0Xffffffffaf22d28a)OR(0xffffffffcea82f21)))OR(NULL)))); -- 0ms;
SELECT ALL LAST_VALUE((((rt0.c6 IN ()))*(CAST(rt0.c0 AS INTEGER)))) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((+ (rt0.c4)) AS INTEGER), AVG((rt0.c0 IN (rt0.c6, rt0.c3))) OVER (), SUM(((rt0.c2)*(rt0.c6))) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE GROUP) FROM rt0 WHERE (((CAST(NULL AS NUMERIC)) NOT BETWEEN ('331318192' COLLATE RTRIM) AND ((('-827838687') BETWEEN (x'') AND (0.9652718257724219))))); -- 0ms;
SELECT (((rt0.c1 IN (rt0.c5, rt0.c1)))!=(rt0.c6)) FROM rt0 WHERE ((- ('1407598401' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c6)) NOT BETWEEN ((rt0.c5)) AND ((rt0.c3)))) FROM rt0 WHERE ((((('0.4052514099595347')||(0.18634160554873147))) BETWEEN (MAX('6%', x'd7da8d75', 0x6c06c61a, 0.5405978410235094)) AND ((('1349253592') IS TRUE)))) ORDER BY ((0.89286146446554) BETWEEN (((rt0.c6)<(rt0.c4))) AND (((rt0.c6)IS(rt0.c4)))) DESC, (((rt0.c5, rt0.c4, rt0.c4)) BETWEEN ((COALESCE(rt0.c6, rt0.c5), rt0.c5 COLLATE RTRIM, rt0.c2 COLLATE RTRIM)) AND (((- (rt0.c3)), (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), (rt0.c1 IN ()))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE (((((x'0e1e')>=(x'')))OR(((((x'66a4')OR(NULL)))AND(0.42268377921744615))))); -- 0ms;
SELECT DISTINCT (((rt0.c3)|(rt0.c4)) IN ()) FROM rt0 WHERE (NULL COLLATE RTRIM COLLATE NOCASE); -- 1ms;
SELECT DISTINCT ((rt0.c6) BETWEEN (rt0.c6) AND (rt0.c5)) COLLATE BINARY, NTH_VALUE(rt0.c0 COLLATE NOCASE, ((x'')>=(((((((((rt0.c6)OR(NULL)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c4))))) OVER ( ROWS  UNBOUNDED PRECEDING), ((((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)AND(((((((((rt0.c3)OR(rt0.c3)))OR(rt0.c1)))OR(rt0.c5)))OR(rt0.c5)))))AND('j[y2e|-뷚')) FROM rt0 LIMIT 1024783585; -- 0ms;
SELECT ALL (((rt0.c5) BETWEEN (rt0.c2) AND (x'')) IN ()), x'', (~ (rt0.c1)) FROM rt0 WHERE (CAST(IFNULL(DISTINCT 0.3652440663142802, 'i.') AS REAL)); -- 0ms;
SELECT ALL (((((- (879682352)))OR((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c3))))))AND(COUNT(*))) FROM rt0 WHERE (((((0.2950283836493339) BETWEEN ('') AND (x'')))+(LOWER('')))) ORDER BY 0.07383676180071697 LIMIT -294671976; -- 0ms;
SELECT DISTINCT ((CASE rt0.c1  WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 END) IS FALSE) FROM rt0 GROUP BY LTRIM((((rt0.c0)) BETWEEN ((rt0.c5)) AND ((rt0.c3))), CASE WHEN rt0.c1 THEN rt0.c2 END) HAVING rt0.c5; -- 0ms;
SELECT DISTINCT (rt0.c3 IN ()) COLLATE RTRIM, rt0.c6 COLLATE BINARY, CAST((((rt0.c5, x'', rt0.c6, '', rt0.c2))<>((rt0.c5, rt0.c0, rt0.c2, rt0.c2, rt0.c2))) AS NUMERIC) FROM rt0 WHERE (CAST(NULL COLLATE BINARY AS TEXT)); -- 1ms;
SELECT ALL SUM(((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT ((+ (rt0.c0)) IN ()) FROM rt0; -- 0ms;
SELECT LENGTH(((NULL)==(rt0.c2))) FROM rt0 WHERE (((((x'')>(NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT CHANGES() FROM rt0; -- 0ms;
SELECT (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) NOT NULL) FROM rt0 WHERE (CAST(((0x76dc31ee)<<(x'784bbf73')) AS TEXT)); -- 0ms;
SELECT DISTINCT ((((rt0.c5)OR(rt0.c5)))AND(rt0.c4)) COLLATE NOCASE FROM rt0 WHERE (((((NULL)AND(0.37771460958585956)))OR(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c5)) COLLATE NOCASE FROM rt0; -- 1ms;
SELECT DISTINCT CASE ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1))  WHEN x'a0a7' THEN CASE WHEN rt0.c5 THEN NULL WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c6 ELSE rt0.c6 END WHEN (rt0.c1 IN ()) THEN (+ (rt0.c5)) WHEN ((rt0.c2) NOTNULL) THEN rt0.c4 END, COUNT(MIN((((rt0.c6))<((rt0.c4))))), (NOT ((- (-982768900)))), COUNT(*), rt0.c2 FROM rt0;SELECT (+ ('')) FROM rt0 LIMIT 1958103583 OFFSET -176096130; -- 0ms;
SELECT DISTINCT ((((rt0.c0)*(rt0.c4)))-(((rt0.c2)-(-1874817541)))), (+ (rt0.c1)) COLLATE RTRIM COLLATE NOCASE, CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN COUNT(rt0.c3) ELSE ((rt0.c0) BETWEEN (rt0.c6) AND (x'')) END, (((rt0.c0)-(rt0.c6)) IN ()), (PRINTF(rt0.c2, rt0.c2, rt0.c6) IN (CAST(rt0.c4 AS BLOB))) FROM rt0; -- 0ms;
SELECT (((rt0.c3)) BETWEEN ((((rt0.c4) NOTNULL))) AND (((rt0.c0 IN ())))) FROM rt0 WHERE ((((((((((NOT (x'a3c2')))AND(((0.6289231770726689) NOT BETWEEN (750230772) AND (NULL)))))OR(CASE NULL  WHEN 'u&' THEN -914898693 END)))OR(((x'') NOT BETWEEN (NULL) AND ('1195492519')))))OR((~ ('\nr'))))); -- 0ms;
SELECT ROW_NUMBER() OVER ( ORDER BY 0.9571111533689235  NULLS LAST) FROM rt0 GROUP BY (((rt0.c3, ((rt0.c3) NOT BETWEEN (rt0.c6) AND (rt0.c6)), ((rt0.c4) NOT BETWEEN (x'') AND (rt0.c0))))<=((UPPER(rt0.c3), rt0.c2, rt0.c3 COLLATE NOCASE))) HAVING STRFTIME(rt0.c6 COLLATE NOCASE, -1.757153443E9, (((rt0.c1))<>((rt0.c1)))); -- 1ms;
SELECT DISTINCT CASE (- (rt0.c6))  WHEN NULL COLLATE NOCASE THEN (+ (rt0.c6)) WHEN ((rt0.c4)-(rt0.c4)) THEN ((rt0.c2)IS NOT(rt0.c2)) WHEN (rt0.c6 IN (rt0.c1)) THEN ((rt0.c4)IS(rt0.c2)) ELSE (- (rt0.c6)) END, GROUP_CONCAT((rt0.c6 IN ())), CASE ((x'7ac8') NOT NULL)  WHEN rt0.c2 THEN CAST(rt0.c4 AS BLOB) WHEN (rt0.c1 IN (rt0.c2, rt0.c3)) THEN ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) WHEN GROUP_CONCAT(rt0.c1) THEN rt0.c6 COLLATE BINARY END FROM rt0 WHERE (CASE WHEN HEX(DISTINCT NULL) THEN CASE NULL  WHEN x'4ccb3f79' THEN '-294671976' ELSE x'' END WHEN ((((((((x'5ed1')OR(0.7159398726589317)))OR('158741218')))AND(1.50854176E8)))AND(NULL)) THEN CASE NULL  WHEN 0X3b8303d5 THEN NULL ELSE 0.15744412468082059 END WHEN CAST('79762853' AS REAL) THEN ((NULL) BETWEEN ('w') AND (0.3842598569889242)) END); -- 0ms;
SELECT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((rt0.c2)>=(x'260d'))  WHEN CASE rt0.c6  WHEN rt0.c6 THEN rt0.c1 END THEN rt0.c1 WHEN ((('m'))=((rt0.c6))) THEN ((((rt0.c3)AND(rt0.c6)))OR('\kZ')) WHEN rt0.c5 COLLATE NOCASE THEN ((rt0.c4)+(rt0.c2)) ELSE SUM(rt0.c6) END FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN MIN(rt0.c4) END FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(NULL) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (rt0.c2))) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL ((SUM(NULL)) NOTNULL), (NOT ((((rt0.c6)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))), SQLITE_COMPILEOPTION_USED((NOT (rt0.c5))) FROM rt0 GROUP BY ((((((rt0.c3)AND(rt0.c1)))OR(rt0.c2)))>((rt0.c1 IN ()))); -- 0ms;
SELECT DISTINCT ((((((rt0.c5) BETWEEN (rt0.c1) AND (rt0.c0)))AND(((((rt0.c4)AND(rt0.c6)))OR(rt0.c0)))))OR(rt0.c4 COLLATE RTRIM)), MAX(MIN(rt0.c0 COLLATE NOCASE)), ((x'8232')+(rt0.c2)) FROM rt0 WHERE (((NULL) NOT NULL) COLLATE BINARY);SELECT (((TRIM(rt0.c4, rt0.c1)))<((rt0.c1 COLLATE NOCASE))) FROM rt0; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE (CAST(x'' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT LIKELY(rt0.c0), ((TRIM(rt0.c3)) NOT BETWEEN (JULIANDAY(rt0.c4, rt0.c2, rt0.c2, rt0.c6, rt0.c2)) AND (rt0.c5)), ((((rt0.c3)OR(rt0.c0)))OR(rt0.c4)) COLLATE RTRIM FROM rt0; -- 1ms;
SELECT DISTINCT (((((((rt0.c6, rt0.c6, rt0.c1))=((rt0.c4, rt0.c3, rt0.c2))))AND(-469050250 COLLATE NOCASE)))OR(((rt0.c1)IS(rt0.c2)))) FROM rt0 WHERE (((((((x'') NOT BETWEEN ('e෶Dn~>H?') AND (NULL)))AND((('-1814774955') BETWEEN (NULL) AND ('*nG')))))OR((('918581753') NOT BETWEEN (x'd301') AND (0.8239048715815845))))); -- 0ms;
SELECT ALL ((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) IN ()) FROM rt0; -- 0ms;
SELECT GROUP_CONCAT(CASE WHEN rt0.c0 THEN rt0.c5 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c6 THEN rt0.c4 ELSE rt0.c2 END) OVER () FROM rt0; -- 0ms;
SELECT ALL (CAST(rt0.c1 AS TEXT) IN ()), (+ (MAX(rt0.c5))), (SQLITE_SOURCE_ID() IN ()) FROM rt0 WHERE ((~ (NULL COLLATE NOCASE))); -- 0ms;
SELECT ((+ (rt0.c1)) IN ('')) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN (rt0.c3)))OR(rt0.c6)) FROM rt0 WHERE (UNLIKELY(CAST(x'' AS NUMERIC))); -- 0ms;
SELECT DISTINCT TRIM(rt0.c3 COLLATE NOCASE, HEX(rt0.c5)) FROM rt0 ORDER BY ((((NULL)OR(((rt0.c2)<(0.3150234091788675)))))OR((rt0.c4 IN ()))); -- 0ms;
SELECT DISTINCT AVG((rt0.c1 IN ())) OVER ( ORDER BY CAST((((rt0.c6))<((rt0.c2))) AS BLOB)  NULLS LAST) FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c1 AS BLOB))<<((((rt0.c1))!=((rt0.c6))))), GROUP_CONCAT(rt0.c2), ((rt0.c2 COLLATE NOCASE)*(((((rt0.c0)AND(rt0.c6)))AND(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT (~ (CAST(rt0.c3 AS NUMERIC))), x'' COLLATE BINARY, (NOT (((rt0.c6) NOT BETWEEN (rt0.c5) AND (rt0.c6)))) FROM rt0 WHERE (x''); -- 0ms;
SELECT ALL rt0.c1, CAST(((rt0.c6) BETWEEN (rt0.c2) AND (rt0.c5)) AS REAL), rt0.c1 FROM rt0 LIMIT 352247085 OFFSET 158518418; -- 0ms;
SELECT AVG((((rt0.c4, rt0.c3, rt0.c6))>=((NULL, rt0.c4, rt0.c6)))) FILTER(WHERE NULL) OVER () FROM rt0 WHERE (((CAST(0xffffffffac437ce1 AS NUMERIC))/(CAST(0x691853c8 AS NUMERIC)))) ORDER BY (((rt0.c1)&(rt0.c0)) IN (((rt0.c0) NOT NULL))) DESC; -- 0ms;
SELECT ALL FIRST_VALUE((((rt0.c1) NOTNULL) IN ())) OVER () FROM rt0 LIMIT -1305944234 OFFSET 1413905458; -- 0ms;
SELECT ALL CASE WHEN (~ (rt0.c6)) THEN UNLIKELY(rt0.c0) END, (((((rt0.c5) NOTNULL)))>=(((~ (rt0.c5))))), ((((NULL)AND(rt0.c0)))OR(((((rt0.c0)OR(rt0.c3)))OR(rt0.c3)))) FROM rt0 WHERE (CAST(TYPEOF(DISTINCT 0.8193414314571912) AS INTEGER)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS TEXT))<<(((rt0.c5)IS NOT(x'')))) FROM rt0 WHERE (((((DATETIME(0.43887177862099813, x'9024', NULL, NULL, 0.6967796212056871))OR(CAST('1572949759' AS BLOB))))AND(CASE WHEN '-1971306909' THEN 0.91612979259404 ELSE '1039392439' END))); -- 0ms;
SELECT DISTINCT CASE WHEN (+ (rt0.c4)) THEN rt0.c2 END, ((CASE rt0.c2  WHEN rt0.c3 THEN '' WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c1 END) NOT BETWEEN (x'' COLLATE BINARY) AND (TYPEOF(DISTINCT rt0.c3))), ((('4P', 'uJ', rt0.c1, rt0.c0, rt0.c3)) NOT BETWEEN ((CASE WHEN rt0.c5 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c2 END, ((rt0.c3)=(rt0.c0)), ((rt0.c1) NOT NULL), (((rt0.c6))=((rt0.c6))), COUNT(rt0.c5))) AND ((COUNT(rt0.c6), UNLIKELY(DISTINCT rt0.c6), ((rt0.c0) BETWEEN (rt0.c6) AND (rt0.c5)), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)), (0.16825643651301003 IN ())))) FROM rt0 UNION ALL SELECT (- (COUNT(rt0.c0))), ((COUNT(*)) BETWEEN ((rt0.c1 IN ())) AND (CAST(rt0.c4 AS TEXT))), ((((rt0.c6)/(rt0.c0))) NOT BETWEEN (COUNT(*)) AND (((((rt0.c3)OR(rt0.c5)))OR(rt0.c1)))) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN (((rt0.c6 IN (rt0.c4)))) AND (((~ (rt0.c3))))) FROM rt0 WHERE (CASE WHEN (~ (0x4f622343)) THEN ((0.6246277472386107) BETWEEN (x'') AND (NULL)) WHEN ((NULL)-(0.22615015898869462)) THEN (('b&') NOT NULL) WHEN (NULL IN ()) THEN ((NULL) NOT BETWEEN (NULL) AND (NULL)) END); -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(0.033091674581678276), '3k', rt0.c6 FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c6)AND(rt0.c5)))AND(x''))) ISNULL), ((rt0.c5) NOT BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM, (~ (((rt0.c4)>>(rt0.c3)))) FROM rt0 GROUP BY ((rt0.c5)>=(((rt0.c1)<=(rt0.c5)))); -- 0ms;
SELECT ALL (((rt0.c6)) NOT BETWEEN ((((rt0.c0)IS(rt0.c6)))) AND ((CAST(rt0.c5 AS REAL)))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (MAX(rt0.c4, rt0.c0))) FROM rt0 GROUP BY ((rt0.c5)*(rt0.c4)) COLLATE NOCASE HAVING ((((((((((NULL) ISNULL))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3)))))OR(((rt0.c0) ISNULL))))OR(rt0.c0)))AND(((rt0.c5)LIKE(rt0.c4)))); -- 0ms;
SELECT (~ (rt0.c0)) FROM rt0 LIMIT 605860410 OFFSET 1331831619; -- 0ms;
SELECT rt0.c6 FROM rt0 WHERE (CASE -3.45156551E8 COLLATE BINARY  WHEN (x'45b8' IN ()) THEN (x'f7f174e4' IN ()) END); -- 0ms;
SELECT DISTINCT (((rt0.c6)) BETWEEN (((((0.641819331539985))>((rt0.c2))))) AND ((MAX(rt0.c0)))), ((((rt0.c5)AND(((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))))AND((NOT (rt0.c4)))), ((NOT (rt0.c5)) IN ()) FROM rt0 WHERE ((~ (x'6732')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT rt0.c5 COLLATE NOCASE FROM rt0 WHERE (((((0.43632379214052486) NOT BETWEEN (-1.46011851E9) AND (NULL))) IS FALSE)) ORDER BY CHANGES() DESC  NULLS FIRST; -- 0ms;
SELECT ALL ((rt0.c3)<=(rt0.c2)) COLLATE BINARY FROM rt0 ORDER BY rt0.c3 DESC, ((rt0.c6)-(CAST(rt0.c2 AS BLOB))) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN rt0.c4 END) IS FALSE) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL rt0.c4 FROM rt0 WHERE (UPPER(DISTINCT ((x'') BETWEEN ('0.2980163203191526') AND (NULL)))) ORDER BY (((rt0.c0)>=(rt0.c1)) IN ()) ASC  NULLS LAST, ((((CAST(rt0.c0 AS REAL))AND((+ (rt0.c0)))))AND((rt0.c6 IN ()))) ASC;SELECT DISTINCT ((NULL) NOT BETWEEN ((('0.041428628279433055')>=(NULL))) AND (MAX(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(COUNT(rt0.c4) AS INTEGER) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ((SUM(rt0.c2)) IS FALSE), ((CAST(rt0.c5 AS REAL)) NOT BETWEEN (((rt0.c1)GLOB(rt0.c6))) AND (CASE WHEN rt0.c5 THEN rt0.c0 END)), GROUP_CONCAT(((rt0.c4)-(rt0.c2))) FROM rt0 WHERE ((((((((((0X955455b IN (0.2275075621037309, 0.00977287936245963)))AND(((NULL) BETWEEN ('') AND (0.7416084207526464)))))AND(((x'cf56')|(NULL)))))AND(0.9150003021339654 COLLATE NOCASE)))OR('0.9588770095787336' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT MAX(TRIM(rt0.c0, rt0.c6)) FROM rt0; -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c2, rt0.c2, rt0.c0, rt0.c3, rt0.c0)) NOT BETWEEN ((rt0.c6, rt0.c5, rt0.c4, rt0.c5, NULL)) AND ((rt0.c4, rt0.c4, rt0.c6, rt0.c2, rt0.c0)))) FROM rt0 WHERE ((TRIM(0X60bafff1) IN ())); -- 0ms;
SELECT DISTINCT 0.17296317900427838 FROM rt0 WHERE (ROUND((((x'5229'))<=(('1315113839'))), x'' COLLATE RTRIM)); -- 0ms;
SELECT CAST(((-1301865461) NOT BETWEEN (rt0.c2) AND (rt0.c4)) AS NUMERIC), CAST(CAST(rt0.c4 AS TEXT) AS BLOB), (((NOT (x'')))OR(CAST(rt0.c0 AS NUMERIC))) FROM rt0 WHERE (((((((((NULL)OR(0.9421899737845343)))OR(x'75d2')))OR(NULL COLLATE BINARY)))OR((NOT (0.032388189525957456))))); -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS NUMERIC)) NOT NULL) FROM rt0 WHERE (((LIKELIHOOD(NULL, 0.40753660426198923))/(((0.6964926724423406) NOT NULL)))) GROUP BY (- (CASE WHEN rt0.c2 THEN rt0.c6 ELSE rt0.c3 END)) HAVING ((((((rt0.c1)AND(rt0.c2)))OR(rt0.c4)))<=(rt0.c1)) ORDER BY (+ (CAST(rt0.c6 AS BLOB)))  NULLS FIRST; -- 0ms;
SELECT ALL (NOT (CASE rt0.c6  WHEN rt0.c0 THEN rt0.c6 ELSE rt0.c2 END)), ((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c6 ELSE rt0.c4 END) IS TRUE), (MIN(rt0.c2) IN ()) FROM rt0 WHERE (((((NULL COLLATE BINARY)AND(x'9f59')))AND((((('-136981845')AND(0X6fe269af)))OR(0.556923951239582))))); -- 0ms;
SELECT ALL (((rt0.c2, rt0.c6, rt0.c4)) NOT BETWEEN (((rt0.c3 IN (rt0.c1, rt0.c3)), (+ (rt0.c2)), ((rt0.c2)/(rt0.c5)))) AND ((((rt0.c4) NOTNULL), (((rt0.c0, rt0.c3, rt0.c2))<>((rt0.c0, rt0.c3, rt0.c4))), ((rt0.c3)OR(rt0.c0))))) FROM rt0 WHERE ((((((-1.366075798E9))>=((NULL))))IS NOT(NULL))); -- 0ms;
SELECT DISTINCT CAST((((rt0.c4))>=((rt0.c6))) AS TEXT) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*), ((((((rt0.c6)AND(rt0.c4)))AND(x''))) NOT BETWEEN ((((rt0.c4, rt0.c3, rt0.c2)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c5)) AND ((rt0.c1, rt0.c2, rt0.c2)))) AND (CASE WHEN rt0.c6 THEN rt0.c0 ELSE rt0.c3 END)), rt0.c0 FROM rt0 WHERE ((+ (((0Xffffffffc549af7c)-(0.3412710955865339))))) LIMIT 630150494; -- 0ms;
SELECT ((CASE rt0.c3  WHEN rt0.c1 THEN rt0.c6 END)-(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(rt0.c2) OVER () FROM rt0 ORDER BY (((NOT (rt0.c1)))<>((((rt0.c1))>((rt0.c4))))) ASC; -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c2, rt0.c1, rt0.c6))==((x'fc07', rt0.c5, rt0.c3)))) FROM rt0 WHERE ((((- (NULL)))%(CASE WHEN 946232140 THEN NULL WHEN 'paa[7v簗㞉' THEN '1846892128' WHEN '99z[-R*1' THEN NULL WHEN 0.2925597591706912 THEN '' WHEN x'' THEN 0.03214042011665874 ELSE 0.0591922751418954 END))); -- 0ms;
SELECT ALL ((((rt0.c2)<=(rt0.c2)))OR(x'')) FROM rt0; -- 1ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE RTRIM AS BLOB) FROM rt0; -- 0ms;
