-- Time: 2024/06/07 15:47:45
-- Database: database6
-- Database version: 3.40.0
-- seed value: 98417206
PRAGMA cache_size = 50000; -- 3ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16be'; -- 0ms;
CREATE TABLE t0 (c0 BLOB ); -- 1ms;
UPDATE OR IGNORE t0 SET c0='-716443700'; -- 0ms;
VACUUM main; -- 0ms;
INSERT OR REPLACE INTO t0 VALUES (''); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i18 ON t0(((((((c0)AND(c0)))AND(c0))) IS TRUE) DESC) WHERE CASE WHEN CASE c0  WHEN 0.2592125239682753 THEN c0 WHEN c0 THEN c0 WHEN c0 THEN c0 ELSE x'' END THEN c0 END; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (NULL); -- 0ms;
ANALYZE temp; -- 0ms;
CREATE INDEX IF NOT EXISTS i27 ON t0(((((c0)AND(((c0) ISNULL))))OR(CASE -7.164437E8  WHEN c0 THEN c0 ELSE c0 END)) COLLATE BINARY); -- 1ms;
INSERT OR ABORT INTO t0 VALUES ('N''7gw'); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x'4a1e'), (x''), (0.9439301807370596), ('my{7&4|Nl'), ('-142689969'); -- 0ms;
END; -- 1ms;
END; -- 1ms;
UPDATE t0 SET (c0)=(65918241); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES ('1996779705'); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE TABLE IF NOT EXISTS t1 (c0 INT , UNIQUE (c0)); -- 1ms;
PRAGMA main.integrity_check; -- 0ms;
UPDATE OR REPLACE t1 SET c0=0.7852754618355169; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=(-0.0); -- 1ms;
INSERT OR ABORT INTO t0 VALUES ('j\'), (''), ('65918241'); -- 0ms;
UPDATE OR ABORT t1 SET (c0, c0, c0)=(x'', -1.42689969E8, 0.0021997981778908438); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ROLLBACK INTO t1 VALUES (x''); -- 0ms;
INSERT OR REPLACE INTO t1(c0) VALUES (0.2977193635794232); -- 0ms;
ANALYZE; -- 0ms;
REINDEX; -- 1ms;
UPDATE t1 SET c0=NULL WHERE CAST(t1.c0 AS TEXT); -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (-1.42689969E8); -- 0ms;
UPDATE OR IGNORE t1 SET c0='Ya.Z%놵S[%' WHERE '-142689969'; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
CREATE TEMP VIEW  IF NOT EXISTS v0(c0) AS SELECT DISTINCT x'' FROM t0, t1 WHERE ((((('ya.z%놵s[%') IS FALSE)) NOT BETWEEN (COALESCE(NULL, x'da89', 0.05608851000643933, x'')) AND (((('1996779705'))<(('-2039063566')))))); -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (x'574b'); -- 1ms;
CREATE INDEX i31 ON t0(((((TYPEOF('j\'))OR((((c0, c0, c0)) NOT BETWEEN ((c0, c0, c0)) AND (('䍞DnS', c0, c0))))))AND((c0 IN ()))) ASC); -- 0ms;
UPDATE OR FAIL t0 SET c0=x'8ea8' WHERE (CASE t0.c0  WHEN 0.5568797753960375 THEN t0.c0 WHEN t0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END IN ()); -- 0ms;
PRAGMA cache_size = 0; -- 0ms;
REINDEX  t1; -- 0ms;
REINDEX; -- 1ms;
INSERT OR ABORT INTO t1 VALUES (x''); -- 0ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (x'839e'), (NULL), (NULL); -- 6ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t1 VALUES (''); -- 0ms;
INSERT OR FAIL INTO t0 VALUES ('2014527697'), (NULL), (0.0); -- 0ms;
PRAGMA main.incremental_vacuum; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (0xffffffffb0e0435e); -- 0ms;
END TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO t0(c0) VALUES (NULL); -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 7ms;
DROP VIEW v0; -- 0ms;
PRAGMA incremental_vacuum(-1327479970); -- 0ms;
CREATE TRIGGER IF NOT EXISTS tr2 BEFORE UPDATE ON t0 FOR EACH ROW  BEGIN SELECT RAISE(IGNORE);END; -- 2ms;
COMMIT TRANSACTION; -- 0ms;
PRAGMA legacy_file_format = true; -- 0ms;
END TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 1ms;
UPDATE OR IGNORE t0 SET (c0)=(x'298c'); -- 0ms;
PRAGMA incremental_vacuum(-9223372036854775808); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES ('o0hIe]YPb', ''); -- 7ms;
BEGIN IMMEDIATE TRANSACTION; -- 1ms;
END TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('t0', 'i18', '1881537514 -829113350 noskipscan'); -- 0ms;
ANALYZE; -- 4ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT (((0X3a4506a1, t0.c0, rt0.c2)) NOT BETWEEN ((CAST(rt0.c0 AS REAL), rt0.c1, (- (rt0.c1)))) AND ((CAST(rt0.c2 AS TEXT), GROUP_CONCAT(rt0.c2), t1.c0))) FROM rt0, t0, t1 LIMIT -751033336 OFFSET -228855690; -- 0ms;
SELECT DISTINCT CASE WHEN (~ (t0.c0)) THEN ((((rt0.c0)AND(6.5918241E7)))AND(NULL)) END FROM rt0, t0 ORDER BY (~ ((((0.407371172083423, t0.c0, t1.c0)) NOT BETWEEN ((rt0.c2, rt0.c1, rt0.c1)) AND ((rt0.c1, t1.c0, t0.c0)))));SELECT '戹p9tC' FROM t1, t0, rt0 NOT INDEXED; -- 0ms;
SELECT GROUP_CONCAT(((t0.c0)>(t0.c0))) FROM t1, t0, rt0 GROUP BY CASE rt0.c0  WHEN ((t1.c0) BETWEEN (t1.c0) AND (t0.c0)) THEN (+ (NULL)) END; -- 0ms;
SELECT DISTINCT (((((rt0.c2)GLOB(rt0.c1)), (((rt0.c2))<=((NULL))), ABS(DISTINCT rt0.c1)))>=((((t1.c0)*(rt0.c1)), ((rt0.c0)<=(rt0.c1)), (rt0.c1 IN ())))) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT ((0xffffffff99ce87a0)IS NOT((~ (0Xffffffffca2ee0c9)))), ((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c0)))>=((('-U63s,yZ') NOTNULL))), (LIKELIHOOD(DISTINCT t1.c0, 0.10524693787757589) IN ()) FROM t0, t1 WHERE (CASE WHEN (('65918241')<<('g1y')) THEN ('759219031' IN (-1859231175, '-668118463')) ELSE SQLITE_COMPILEOPTION_USED(0.2443895291777386) END) ORDER BY ((LOWER(DISTINCT t0.c0))LIKE(0.05608851000643933));SELECT DISTINCT CASE WHEN ((t1.c0)%(t1.c0)) THEN ((t1.c0) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN COUNT(*) THEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c2)) WHEN (NOT ('')) THEN ('-2039063566' IN (t0.c0)) END, (((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))*((~ (rt0.c2)))), CASE (- (rt0.c2))  WHEN ((((rt0.c0)OR(0.8308458124027306)))AND(t0.c0)) THEN ((rt0.c2)>>(t0.c0)) ELSE (rt0.c0 IN ()) END, ((rt0.c0 COLLATE BINARY) NOT BETWEEN (((rt0.c0) NOT BETWEEN (t0.c0) AND ('Ya.Z%놵S[%'))) AND (CASE WHEN t0.c0 THEN t0.c0 END)), ABS(t0.c0) FROM t1, rt0 WHERE (0X6e422312);SELECT ALL rt0.c2, ((((t1.c0)) BETWEEN ((t1.c0)) AND ((t1.c0))) IN ()), ((t1.c0) NOT NULL) COLLATE BINARY FROM rt0, t0, t1 WHERE (CAST((((x'', NULL, x''))=(('-1236588104', x'', x'787c'))) AS NUMERIC)); -- 0ms;
SELECT DISTINCT UNLIKELY(CAST(rt0.c0 AS INTEGER)) FROM rt0, t0 WHERE (((((' w')<<(NULL))) NOT BETWEEN (PRINTF('j\', '-2039063566', '')) AND ('-1327479970'))); -- 0ms;
SELECT DISTINCT TRIM(((t0.c0) IS FALSE)) FROM t0 GROUP BY ((((t0.c0) IS TRUE)) NOT BETWEEN ((((rt0.c0))<((x'')))) AND (LOWER(rt0.c1))), ((((t0.c0) IS FALSE)) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND ((('1599521983')*(t1.c0)))), x'0423' COLLATE RTRIM;SELECT ALL highlight(CASE WHEN t1.c0 THEN '0.2443895291777386' ELSE t1.c0 END, ((rt0.c0)>>(t0.c0)), TRIM(DISTINCT rt0.c2, rt0.c2), '469765501'), x'', SUM((((rt0.c1, rt0.c0, rt0.c0))=((rt0.c2, rt0.c0, t1.c0)))) FROM rt0, t0;SELECT DISTINCT CASE WHEN ((rt0.c1)==(rt0.c1)) THEN ((NULL) IS FALSE) ELSE CASE WHEN rt0.c0 THEN 0.24930050537182014 ELSE rt0.c2 END END FROM rt0 WHERE ((((((0.20080066276614195)OR(x'')))OR(NULL)) IN ())); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1) NOTNULL) THEN UNLIKELY(rt0.c2) ELSE (((('')OR(rt0.c2)))OR(rt0.c2)) END FROM t0 WHERE (x'5579');SELECT DISTINCT rt0.c0 FROM rt0, t1, t0 WHERE ((0.24930050537182014 IN ()) COLLATE BINARY) ORDER BY rt0.c1 ASC  NULLS LAST; -- 0ms;
SELECT ((t1.c0 COLLATE RTRIM)||(NULL)) FROM t1; -- 1ms;
SELECT ALL (((t1.c0)||(469765501)) IN ()) FROM t0 WHERE ((((- (NULL)))-(((0.909197302733185) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(t1.c0)) NOTNULL) FROM t0, rt0 GROUP BY NULL HAVING '-449823807';SELECT ALL (((- (rt0.c0)))GLOB(((rt0.c0)AND(rt0.c1)))) FROM t0;SELECT rt0.c0 FROM t0, rt0 LIMIT -759433013; -- 0ms;
SELECT DISTINCT UNLIKELY(x'4d31') FROM t1 ORDER BY CASE t0.c0  WHEN x'' THEN 0.13629989663500708 END DESC;SELECT DISTINCT rt0.c2 FROM t0, t1, rt0 WHERE (((1318620880)IS NOT(NULL)) COLLATE NOCASE) ORDER BY ((((t1.c0)>>(rt0.c1)))>>(((rt0.c0)<(rt0.c1))))  NULLS LAST; -- 1ms;
SELECT ALL CAST(NULL AS BLOB) FROM t1, t0, rt0 WHERE (CASE CASE '-484254107'  WHEN x'' THEN x'' END  WHEN ((x'') BETWEEN (0.07687760562976842) AND ('1210825944')) THEN (+ (NULL)) ELSE CAST(NULL AS TEXT) END); -- 0ms;
SELECT DISTINCT CASE (((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))  WHEN ((rt0.c0)<<(t0.c0)) THEN COALESCE(rt0.c1, NULL) WHEN ((rt0.c1)*('')) THEN CASE WHEN rt0.c2 THEN rt0.c0 WHEN 'o0hie]ypb' THEN t1.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t1.c0 THEN rt0.c2 END WHEN t1.c0 THEN CAST(t1.c0 AS BLOB) END FROM rt0, t1, t0 WHERE ((((+ ('-1714518112'))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) ISNULL), (NOT (TRIM(x''))), '0.9439301807370596' FROM t1, rt0, t0 WHERE ('䫔nXF	E?7L') GROUP BY ((t0.c0) NOT NULL) COLLATE RTRIM; -- 0ms;
SELECT ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END)OR(((t0.c0) IS TRUE))), CASE WHEN t1.c0 THEN rt0.c0 END COLLATE BINARY, CUME_DIST() OVER ( ROWS  CURRENT ROW EXCLUDE TIES), (((((rt0.c2)) BETWEEN (('-419924132')) AND ((t1.c0)))) NOT NULL), GROUP_CONCAT(CASE t0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c0 END) OVER ( RANGE LIKELY(json(rt0.c1)) PRECEDING EXCLUDE TIES) FROM rt0;SELECT DISTINCT ((((t1.c0)!=(rt0.c2)))GLOB(((NULL) BETWEEN (t0.c0) AND (t1.c0)))) FROM t1;SELECT DISTINCT (+ ((rt0.c2 IN ()))), x'', CAST(CAST(rt0.c2 AS INTEGER) AS BLOB) FROM t0, rt0, t1 GROUP BY NULL HAVING rt0.c0; -- 0ms;
SELECT ALL TOTAL((+ (t1.c0))) OVER () FROM t0, t1, rt0 WHERE ((~ (('' IN ())))); -- 0ms;
SELECT DISTINCT t1.c0 FROM rt0, t0, t1 WHERE (CAST((x'' IN ('')) AS INTEGER)) LIMIT -1939115505 OFFSET 469765501; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t0, t1 WHERE (-759433013); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c1 THEN t0.c0 END COLLATE NOCASE FROM t1, t0 WHERE (((0.03691296983090053 COLLATE NOCASE) NOT NULL)) GROUP BY ((CAST(rt0.c0 AS INTEGER))|(CAST(t1.c0 AS TEXT))), ((rt0.c2)/(t1.c0)) COLLATE BINARY, ((((t1.c0, t1.c0, rt0.c0)) BETWEEN ((rt0.c2, rt0.c2, rt0.c0)) AND (('', rt0.c2, t1.c0))) IN ());SELECT ALL COUNT(*) FROM rt0 WHERE (CAST(CASE WHEN '}D]r' THEN x'' WHEN 0.0701877109791369 THEN -142689969 WHEN '' THEN NULL ELSE NULL END AS TEXT)); -- 0ms;
SELECT ALL (((AVG(rt0.c2)))<((CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END))), ((NOT (x'')) IN ()), '<', RTRIM(((0X2d40c357) NOT BETWEEN (rt0.c2) AND (rt0.c0))), ((('1603858210'))>(((((t0.c0, -889797959, rt0.c2))<>((t1.c0, 0X770470b9, t0.c0)))))) FROM t1 WHERE (((CASE 0.0021997981778908438  WHEN x'' THEN NULL ELSE 0.6323182680384685 END) IS FALSE));SELECT DISTINCT CASE WHEN ((((((((t0.c0)AND(t1.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)) THEN highlight(rt0.c2, rt0.c0, t1.c0, t0.c0) END FROM t0 WHERE (0.9891592888899182) LIMIT 1143967098 OFFSET -1685462732;SELECT COUNT(*) OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT CAST((((t0.c0)) NOT BETWEEN ((NULL)) AND ((t1.c0))) AS BLOB), CASE ((((t1.c0)AND(rt0.c1)))AND(rt0.c1))  WHEN ((((((((rt0.c2)AND(rt0.c1)))AND(t1.c0)))AND(rt0.c1)))OR(x'')) THEN rt0.c2 ELSE (NOT (t1.c0)) END, COUNT(json_patch(x'6ac9', t0.c0)) OVER (), ((((t1.c0) NOT NULL))GLOB(((t1.c0)+(rt0.c2)))), CASE WHEN MAX(rt0.c2) THEN (((rt0.c0, t1.c0, rt0.c2, t1.c0, 0.9135858644115064)) NOT BETWEEN ((t0.c0, rt0.c1, rt0.c1, NULL, t0.c0)) AND ((t1.c0, rt0.c2, rt0.c1, t1.c0, t0.c0))) WHEN ((t1.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) THEN (((rt0.c1)) BETWEEN ((t0.c0)) AND ((t1.c0))) WHEN GROUP_CONCAT(t0.c0) THEN (((rt0.c1, t1.c0, '0.9135858644115064'))>=((rt0.c0, t0.c0, t0.c0))) WHEN (x'' IN ()) THEN ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(t0.c0)))OR(rt0.c0)) WHEN CAST('䫔nXF	E?7L' AS INTEGER) THEN MIN(rt0.c0) END FROM rt0, t1;SELECT DISTINCT ((NULL)<(CAST(t0.c0 AS TEXT))), UPPER(DISTINCT (NOT (t1.c0))), ((((rt0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c0))) IN (CAST(t1.c0 AS NUMERIC))) FROM t1, t0 INDEXED BY i18, rt0 WHERE ('118455052') GROUP BY 0.17862444826330703 COLLATE RTRIM HAVING (LOWER(t0.c0) IN ());SELECT DISTINCT LOWER(((rt0.c0)IS(rt0.c2))) FROM t1;SELECT DISTINCT (((rt0.c1, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c1) NOTNULL), IFNULL(rt0.c2, rt0.c2), ((rt0.c0) IS FALSE))) AND ((rt0.c2 COLLATE NOCASE, ((t1.c0) NOT BETWEEN (rt0.c2) AND (t0.c0)), ((((t1.c0)OR(t1.c0)))OR(rt0.c0))))), GROUP_CONCAT(NULL) OVER (), rt0.c0 FROM rt0;SELECT DISTINCT (((0.407371172083423))==(((rt0.c1 IN ())))), ((CASE '썮戹'  WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END)OR(((rt0.c2) IS FALSE))), ((((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((0.10244593556953407)))))==((0x6fffeee9))) FROM rt0, t0, t1 WHERE (GLOB('575752916', NULL) COLLATE BINARY COLLATE NOCASE) GROUP BY 0.5122682425811014 HAVING ((rt0.c0 COLLATE RTRIM) NOT NULL); -- 0ms;
SELECT ALL COUNT(*) OVER (), TOTAL(CAST(t1.c0 AS BLOB)) OVER (), (- (SUM(t1.c0))) FROM t1, rt0 WHERE (CASE ((NULL) ISNULL)  WHEN (+ (NULL)) THEN ((('k*', x'', '-484254107')) NOT BETWEEN ((-2077380171, 0.8779997057762706, NULL)) AND (('9pSL8BE', NULL, NULL))) WHEN (- (x'f716')) THEN '-751033336' WHEN CAST(x'6bfd' AS NUMERIC) THEN NULL ELSE (0.5542396852207345 IN ()) END); -- 1ms;
SELECT DISTINCT (+ ('')) COLLATE BINARY FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT (((((t0.c0 IN ()))AND(GROUP_CONCAT(0.9439301807370596))))AND(((rt0.c0)%(rt0.c1)))) FROM t0; -- 0ms;
SELECT ALL (+ (((t1.c0) IS FALSE))), (((t0.c0 IN ()))*(((x'7b69')!=(rt0.c0)))), (((rt0.c0 COLLATE RTRIM))<>((MAX(t0.c0)))) FROM t0, rt0 WHERE ((((((((((('65918241') IS FALSE))AND(CAST(-1858945608 AS NUMERIC))))OR(CAST(NULL AS NUMERIC))))AND((((0Xffffffff9132bdb8))!=(('-716443700'))))))OR((('759219031') NOT NULL))));SELECT ALL ((CAST(t1.c0 AS INTEGER))IS(((rt0.c2)-(t0.c0)))) FROM t1, t0;SELECT DISTINCT json_array_length('1210825944', JULIANDAY(t1.c0, rt0.c0, '승L')) FROM t0, t1, rt0; -- 0ms;
SELECT TOTAL((((t0.c0))<((rt0.c1)))) FROM rt0 WHERE (CAST(((('0.2977193635794232', x'cb63', 'QTb?P髤*X'))>((x'', '-158134155', NULL))) AS REAL));SELECT DISTINCT COUNT(((rt0.c2) NOT BETWEEN (t0.c0) AND (t1.c0))) OVER () FROM rt0, t1, t0 WHERE (CAST(NULL AS NUMERIC) COLLATE BINARY) LIMIT -91642822; -- 0ms;
SELECT DISTINCT FIRST_VALUE((((((rt0.c2, rt0.c1, rt0.c0))=((rt0.c0, rt0.c1, 0.48806457812365167))))>(((rt0.c0)=(rt0.c1))))) OVER ( ORDER BY ((QUOTE(rt0.c0))<=((((rt0.c2))==((rt0.c0))))) ASC  NULLS FIRST), ((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0))) IN ('-1482698332')), ((((rt0.c0)OR(t0.c0))) ISNULL) FROM rt0 NOT INDEXED;SELECT DISTINCT (- (((NULL) BETWEEN (t0.c0) AND (rt0.c2)))) FROM t0, rt0 INDEXED BY i27, t1 WHERE (CAST(((NULL) BETWEEN (x'748c') AND (0X45478ab5)) AS TEXT));SELECT DISTINCT rt0.c1 FROM t1, rt0 WHERE ((((('-716443700')LIKE(NULL)))|((((x''))=(('Q	.p8j')))))); -- 0ms;
SELECT ALL LIKELIHOOD(DISTINCT CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 END, 0.034883211050420804), (((DATETIME(NULL, rt0.c2, 0.13629989663500708), ((t1.c0)>=(0X2836d3cd)), rt0.c2))<=((CAST(rt0.c1 AS INTEGER), TOTAL(0.715726262690673), ((rt0.c0)/(t0.c0))))), (('429643771')>((NOT (rt0.c0)))) FROM t0, t1;SELECT ALL ((((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 END)OR(CASE rt0.c1  WHEN t1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN x'4093' THEN 0xffffffffba52d478 END)))AND(rt0.c1)), ((TRIM('1536082798'))|((- (0.20080066276614195)))), rt0.c1 FROM t0, t1;SELECT ((rt0.c2)&(t1.c0)) COLLATE NOCASE FROM rt0 LEFT OUTER JOIN t1 ON (NOT (CASE WHEN t0.c0 THEN t0.c0 ELSE t0.c0 END));SELECT DISTINCT (~ (t0.c0)) FROM t0, t1, rt0 WHERE ((+ (((0.026136867116994145)OR('445640683'))))) GROUP BY LIKELIHOOD(rt0.c1, 0.267329590689405) COLLATE NOCASE HAVING ((((((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))AND(rt0.c1 COLLATE NOCASE)))AND(((rt0.c2)>=(rt0.c1)))); -- 0ms;
SELECT ((-1.858945608E9)%(CASE WHEN rt0.c2 THEN rt0.c0 END)) FROM t1, t0;SELECT CAST(((((((((rt0.c1)AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c1)) AS INTEGER) FROM t1, rt0, t0; -- 0ms;
SELECT TOTAL(x'') OVER () FROM rt0; -- 1ms;
SELECT DISTINCT ((('w>')) NOT BETWEEN ((((rt0.c0)=(rt0.c0)))) AND ((rt0.c0))) FROM t1 ORDER BY UNICODE(((rt0.c0) BETWEEN (-1.685462732E9) AND (rt0.c0))) DESC  NULLS LAST, x'', rt0.c0 DESC;SELECT DISTINCT t1.c0 FROM t1, rt0; -- 0ms;
SELECT ((HEX(rt0.c2)) NOTNULL) FROM t1, t0;SELECT '' FROM t0, rt0 WHERE (CAST(((NULL) NOT BETWEEN (0.03691296983090053) AND (x'')) AS BLOB)) LIMIT -759433013; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS INTEGER))!=((((t1.c0)) BETWEEN ((2.014527697E9)) AND ((rt0.c1))))) FROM rt0, t1 WHERE ((((('1985793930') NOT BETWEEN (NULL) AND (1.210825944E9)))GLOB((NOT (NULL))))) GROUP BY (995719544 IN (((t1.c0) BETWEEN (t0.c0) AND (rt0.c1)))) HAVING (((x''))==(((((t1.c0)) BETWEEN (('-1168976776')) AND ((rt0.c1))))));SELECT ALL LEAD(((CAST(1599521983 AS NUMERIC)) ISNULL), ((NOT (t1.c0)) IN ()), (((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), ((rt0.c0)IS(t1.c0)), (((rt0.c2))==((rt0.c0)))))<>(((((rt0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c2))), ((rt0.c1) IS FALSE), (((t1.c0))<=((rt0.c1))))))) OVER () FROM t1, rt0, t0; -- 1ms;
SELECT LAG(LIKELY(DISTINCT DATE(t0.c0, t0.c0, x'', t1.c0, t1.c0)), ((COALESCE(DISTINCT t1.c0, t1.c0, t1.c0, t1.c0, t1.c0, t1.c0)) NOT BETWEEN ((((t1.c0)) BETWEEN ((t0.c0)) AND ((t0.c0)))) AND (CAST(t1.c0 AS INTEGER))), (+ ((+ (t0.c0))))) OVER () FROM t0, t1; -- 4ms;
SELECT DISTINCT (((((rt0.c0))<>((t1.c0)))) NOT BETWEEN (rt0.c0) AND (t0.c0)), (((CASE WHEN rt0.c0 THEN rt0.c2 END))<(((t0.c0 IN (0.9726535706269026))))), x'' FROM t1, rt0, t0; -- 0ms;
SELECT ALL AVG(CASE WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c2 ELSE t0.c0 END COLLATE NOCASE) OVER () FROM rt0 WHERE (((((NULL)||(x''))) IS FALSE)) EXCEPT SELECT DISTINCT ((rt0.c2)%(rt0.c0)) FROM rt0, t0 WHERE ((SUBSTR(x'1ff0', '7Kzd%') IN ()));SELECT ALL LAG(CAST(((rt0.c1)<>(rt0.c0)) AS INTEGER), ((((((rt0.c1)OR(rt0.c2)))OR(rt0.c1)))GLOB((((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))))), ((rt0.c1 COLLATE NOCASE) IS FALSE)) OVER (), '', (((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))IS(((rt0.c0)>(0.5588467225417314)))) FROM rt0 WHERE ((ABS(DISTINCT '1536082798') IN ()));SELECT DISTINCT CAST((~ (rt0.c0)) AS BLOB) FROM rt0, t1, t0 WHERE ((((NULL, 0xffffffffa79fd1a4, '!岰')) NOT BETWEEN ((CASE WHEN -1.939115505E9 THEN x'd6f0' END, CAST('995719544' AS INTEGER), (((0.026136867116994145, NULL, NULL)) NOT BETWEEN ((NULL, x'', 0Xffffffffb7abf1fe)) AND ((-1.858945608E9, NULL, NULL))))) AND ((((NULL) NOTNULL), ((0.5317057279152847) ISNULL), ((x'c011')==(x'de72')))))); -- 0ms;
SELECT ((((t1.c0)||(t1.c0))) NOT BETWEEN (CASE WHEN t0.c0 THEN t0.c0 END) AND ((t0.c0 IN (rt0.c0)))) FROM t0, t1 GROUP BY ('429643771' COLLATE BINARY IN ()), CASE WHEN x'6099' THEN ((0.20472640219796057)>>(t0.c0)) WHEN x'' THEN CAST(rt0.c0 AS INTEGER) WHEN (((rt0.c0, rt0.c2, rt0.c2))<((NULL, rt0.c0, t1.c0))) THEN (+ (rt0.c0)) END, ((rt0.c0 COLLATE RTRIM)||((((-580539998)) NOT BETWEEN ((t1.c0)) AND ((t0.c0)))));SELECT rt0.c0 FROM t0, t1 WHERE ((((('-1689178377')<>(x''))) IS FALSE));SELECT DISTINCT 1.18455052E8 FROM t1; -- 0ms;
SELECT (((NULL IN (t1.c0))) BETWEEN (MAX(t1.c0)) AND (0.8846484333980859)) FROM t1, t0, rt0 INDEXED BY i31 WHERE (((('1162316469' IN ())) BETWEEN (CASE WHEN '0.0021997981778908438' THEN '' END) AND (TRIM(x''))));SELECT ((((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0))) NOT BETWEEN ((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((0.05608851000643933)))) AND (STRFTIME(rt0.c0, rt0.c0, 1849828114))), CUME_DIST() OVER (), SUM(((rt0.c2)IS(rt0.c1))) FILTER(WHERE ((((rt0.c0)<(t1.c0))) NOT NULL)) OVER () FROM rt0, t1 WHERE ((((('2<Jmbj') NOT BETWEEN (NULL) AND (0.07611102496193478))) IS TRUE)); -- 0ms;
SELECT (- (((rt0.c2)LIKE(rt0.c1)))), TOTAL(t1.c0) OVER ( PARTITION BY ((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2)) COLLATE NOCASE, (- (((rt0.c1) IS TRUE)))), ABS(CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 ELSE '1948965746' END) FROM t0, rt0 WHERE (((SQLITE_VERSION()) NOT NULL));SELECT DISTINCT ((t1.c0 COLLATE RTRIM)*(((((((((rt0.c0)AND(NULL)))AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))) FROM t1, t0, rt0 GROUP BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)<=(CAST(rt0.c2 AS TEXT))); -- 1ms;
SELECT ALL rt0.c0 FROM t1 WHERE ((NOT (CAST(0.17389365543430146 AS INTEGER)))) ORDER BY t1.c0 ASC  NULLS LAST LIMIT -1450258369 OFFSET 995719544;SELECT ALL ((((rt0.c1) NOTNULL)) IS TRUE), ((((rt0.c0)LIKE(t1.c0))) NOT BETWEEN (((rt0.c0) IS FALSE)) AND (TRIM(DISTINCT rt0.c2))), CASE ((t1.c0) ISNULL)  WHEN ((t0.c0) NOT BETWEEN (t0.c0) AND (t1.c0)) THEN ((((((((((((0.3126266979225628)AND(rt0.c2)))OR(t1.c0)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)))AND(t0.c0)) END FROM rt0 WHERE (((((((NULL)) BETWEEN ((0x164122a7)) AND (('')))))<>((((x'') NOTNULL)))));SELECT DISTINCT SUBSTR(CASE WHEN rt0.c2 THEN t0.c0 END, ((t1.c0)&(t1.c0))) FROM rt0, t1, t0 ORDER BY ((((CAST(0Xffffffffd82d5241 AS REAL))AND((NOT (t0.c0)))))AND(((((rt0.c0)OR(rt0.c0)))AND(rt0.c1)))) DESC, CAST(((rt0.c1) NOTNULL) AS TEXT) ASC, (((t0.c0 COLLATE RTRIM))>=((((rt0.c0) IS FALSE)))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c1)AND(t1.c0)))OR(t0.c0)))AND(rt0.c2)))OR(x'')))*(CAST(rt0.c1 AS TEXT))) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT AVG(TRIM(DISTINCT rt0.c1, t0.c0)) FROM t1 WHERE (((((((((((((0.505877637228142)OR(((x'') ISNULL))))AND(CASE -6.68118463E8  WHEN 0.6268731448830487 THEN x'' END)))AND(((NULL) IS TRUE))))OR(((x'')/('0.05608851000643933')))))AND((0.21295764309757714 IN ()))))OR(x'' COLLATE RTRIM)));SELECT DISTINCT CAST(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 END AS BLOB) FROM t1 WHERE ((('674681805') IS TRUE)) ORDER BY CAST(((rt0.c2)!=(rt0.c2)) AS TEXT) DESC LIMIT -1256985576;SELECT DISTINCT SUM(((((rt0.c0)OR(t0.c0)))AND(rt0.c0))) OVER () FROM t0 WHERE (CAST(('' IN (NULL)) AS INTEGER));SELECT NULL FROM rt0, t0; -- 0ms;
SELECT DISTINCT COUNT((t0.c0 IN ())) OVER (), rt0.c0, '1832543403', (COALESCE(rt0.c2, rt0.c1) IN (load_extension(t0.c0, rt0.c1), (((('1e500')AND(rt0.c2)))AND(t1.c0)))), ((t0.c0 COLLATE RTRIM)GLOB((- (rt0.c0)))) FROM rt0 WHERE (((((826907044 COLLATE BINARY)AND(((NULL)&('j)Hb{w\rJ')))))OR(CAST(NULL AS REAL)))) UNION ALL SELECT ALL ((((rt0.c0)<<(rt0.c2)))*(((rt0.c2) BETWEEN (t1.c0) AND (t1.c0)))), CASE WHEN ((rt0.c1) NOT NULL) THEN (rt0.c1 IN ()) ELSE rt0.c1 COLLATE RTRIM END, (0X78b5fc68 IN ()) COLLATE RTRIM COLLATE NOCASE, SUM((((rt0.c0))==((t0.c0)))) OVER (), load_extension(((rt0.c2) ISNULL)) FROM t0, rt0, t1 WHERE (((NULL) IS TRUE) COLLATE NOCASE);SELECT ALL ((((t0.c0)AND(t0.c0)))OR(t1.c0)) COLLATE RTRIM FROM t0, rt0 INDEXED BY i27 INTERSECT SELECT ALL (- (MIN(t1.c0))) FROM rt0, t0 GROUP BY ((CASE WHEN t0.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 ELSE rt0.c2 END)<=(((t1.c0) ISNULL))), CAST('&OKg믺' AS INTEGER), CASE WHEN (((rt0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))) THEN 0xffffffff86765bf2 END LIMIT 21957897 OFFSET -1236588104;SELECT DISTINCT CAST(rt0.c2 AS TEXT) FROM rt0 WHERE ((- ((('1061955350') ISNULL)))); -- 0ms;
SELECT DISTINCT ((((((((((t1.c0)-(rt0.c0)))AND((+ (x'')))))OR(((rt0.c0) NOTNULL))))OR((rt0.c0 IN ()))))OR(json_remove(rt0.c0, x''))), (((CASE WHEN rt0.c1 THEN rt0.c2 END, MAX(rt0.c2), ((t0.c0)IS NOT(t1.c0))))<>((((rt0.c1)/(t1.c0)), ((t0.c0)>=(t0.c0)), (rt0.c0 IN (rt0.c1))))), ((((~ (rt0.c2))))==((CASE WHEN t1.c0 THEN rt0.c1 WHEN -1.450258369E9 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 END))) FROM rt0, t0, t1 WHERE (LIKELY(DISTINCT ((NULL) BETWEEN (NULL) AND (x'a2f9')))); -- 1ms;
SELECT ALL ((((CAST(rt0.c1 AS INTEGER))AND(((rt0.c1)/(rt0.c0)))))AND(((t0.c0) NOT BETWEEN (t1.c0) AND (t0.c0)))) FROM t1 GROUP BY x'bf77' ORDER BY (((SQLITE_COMPILEOPTION_GET(rt0.c2)))<=((CASE WHEN rt0.c0 THEN t0.c0 WHEN '1881537514' THEN rt0.c0 WHEN rt0.c0 THEN t1.c0 ELSE rt0.c1 END)));SELECT DISTINCT ((((((rt0.c1) IS FALSE))AND((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c2))))))OR(MAX(t0.c0))) FROM t1, rt0 WHERE ((NULL COLLATE RTRIM IN ()));SELECT DISTINCT (+ ((rt0.c1 IN ()))) FROM t1, t0, rt0 ORDER BY ((t0.c0)|(rt0.c1)) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT ((UNLIKELY(DISTINCT rt0.c2))+(((rt0.c1)LIKE(rt0.c1)))) FROM rt0, t1 GROUP BY (((x'' IN ()))LIKE(((rt0.c2)=(t1.c0)))) HAVING '	%J裑0簌'; -- 0ms;
SELECT ((COALESCE(DISTINCT rt0.c1, t1.c0)) NOT BETWEEN (((((((((((((t1.c0)OR(rt0.c0)))AND(0.877305597330239)))OR(rt0.c2)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) AND (((t0.c0)&(rt0.c0)))) FROM t0, rt0, t1 LIMIT -185579717; -- 0ms;
SELECT ALL (((t0.c0))<>((CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 ELSE rt0.c1 END))), ((((((rt0.c0)<<(rt0.c1)))AND(((t0.c0)||(rt0.c0)))))OR(LOWER(rt0.c1))), COUNT(*) OVER () FROM t1 CROSS JOIN t0 ON QUOTE(t1.c0) COLLATE BINARY COLLATE BINARY INNER JOIN rt0 ON ((((t0.c0) NOTNULL)) IS FALSE) WHERE ((((+ (x'ef2d')))==(((NULL)%(x''))))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c0 AS BLOB))+(MIN(rt0.c0))) FROM rt0, t1 WHERE (((((('', NULL, 0.07611102496193478)) NOT BETWEEN ((x'', NULL, 0X16e45e06)) AND ((0.5949696959983204, '-484254107', '{6\r*Y')))) BETWEEN (0.8292059968907316) AND (x''))); -- 0ms;
SELECT DISTINCT ((MAX(t1.c0))AND((~ (t1.c0)))), ((((((((rt0.c1 COLLATE NOCASE)OR(rt0.c0)))AND((~ (t0.c0)))))OR(((NULL) IS TRUE))))AND(CAST(t0.c0 AS INTEGER))), CAST(((t0.c0) IS TRUE) AS TEXT) FROM rt0, t1;SELECT DISTINCT -772630840, ((((((((((rt0.c1)>>(rt0.c2)))AND(((rt0.c2) IS TRUE))))AND((- (rt0.c2)))))AND(t1.c0 COLLATE NOCASE)))OR(((((t1.c0)AND(t0.c0)))OR('-1333300702')))), CASE WHEN ((rt0.c1) IS FALSE) THEN CASE rt0.c0  WHEN rt0.c2 THEN t1.c0 END ELSE (((rt0.c0, rt0.c1, rt0.c2)) NOT BETWEEN ((rt0.c2, rt0.c1, x'')) AND ((NULL, rt0.c1, rt0.c2))) END FROM rt0, t0, t1 WHERE (((((((x'')/(NULL)))AND((('7 ') IS FALSE))))AND(x'83d1' COLLATE NOCASE))); -- 0ms;
SELECT ALL TRIM(DISTINCT x'') FROM t0, rt0, t1; -- 0ms;
SELECT (((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((x'')))) IS FALSE), NULL, ((MIN(rt0.c0))*(rt0.c0)) FROM rt0, t1 WHERE (CAST(x'' AS BLOB)) LIMIT 1157545346; -- 1ms;
SELECT ALL ((((((rt0.c2)OR(rt0.c0)))AND((~ (t0.c0)))))OR(MIN(rt0.c1))) FROM t1, rt0 RIGHT OUTER JOIN t0 ON ((rt0.c0) BETWEEN (((rt0.c1)*(t1.c0))) AND (MIN(t0.c0, t0.c0))) WHERE ((((('1312590033')AND(x'80b4')))AND(x'')) COLLATE NOCASE) UNION SELECT LIKELY(((((rt0.c0)AND(rt0.c2)))OR(rt0.c0))) FROM rt0, t0, t1; -- 1ms;
SELECT IFNULL(((rt0.c2)%(NULL)), rt0.c0 COLLATE NOCASE), (rt0.c0 IN (rt0.c0, t0.c0, t0.c0)) COLLATE BINARY, COUNT(HEX(t0.c0)), ((CASE t0.c0  WHEN x'e781' THEN rt0.c1 WHEN rt0.c1 THEN t1.c0 WHEN t1.c0 THEN '33467838' ELSE rt0.c0 END)>(UPPER(NULL))), CASE WHEN t0.c0 THEN HEX(DISTINCT 'o0hIe]YPb') ELSE (((rt0.c1))>((t1.c0))) END FROM t0, rt0, t1 ORDER BY (((((((((rt0.c0)OR(t1.c0)))AND(t0.c0)))OR(rt0.c0)))OR(rt0.c1)) IN (CAST(rt0.c2 AS REAL))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((((((rt0.c2)OR(rt0.c0)))OR(t1.c0)))AND(t1.c0)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c1))) BETWEEN (((rt0.c0) NOT BETWEEN (-560046928) AND (t0.c0))) AND (((rt0.c2)*(t1.c0)))) FROM rt0, t0, t1 WHERE (((x'3da3' COLLATE RTRIM) BETWEEN ((- (''))) AND (((x'')&('-565654942'))))); -- 0ms;
SELECT ALL ((((((t0.c0)AND(rt0.c1)))AND(rt0.c2)))OR((((rt0.c1))<((rt0.c2))))) FROM t0, rt0 WHERE (0.6873892175945626); -- 0ms;
SELECT (rt0.c1 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT ALL (t0.c0 COLLATE BINARY IN ()) FROM t0, t1; -- 0ms;
SELECT DISTINCT ((0Xffffffff9132bdb8) NOT NULL) FROM t0; -- 1ms;
SELECT DISTINCT ((~ (rt0.c1)) IN ()), MAX(CASE WHEN t1.c0 THEN rt0.c2 END COLLATE RTRIM), CAST(rt0.c2 AS INTEGER) FROM t1, t0 WHERE (LTRIM((((x'10d4', NULL, x'3a84', x'3b24', '')) NOT BETWEEN (('674681805', NULL, x'', 0.8932603547974726, x'7ebec057')) AND ((x'9e352a31', 0.1389880466152016, NULL, 0.026136867116994145, 1.832543403E9))))) LIMIT 1177560936 OFFSET -704590515;SELECT COUNT(((((rt0.c1)OR(t1.c0)))OR(rt0.c1)) COLLATE BINARY), rt0.c0, CAST(MIN(x'') AS INTEGER) FROM t1, rt0, t0 LIMIT 65918241 OFFSET 2143156732; -- 0ms;
SELECT DISTINCT CASE WHEN (('2114741159') NOT BETWEEN (rt0.c0) AND (rt0.c2)) THEN LIKE(0X16e45e06, rt0.c1) ELSE (- (rt0.c0)) END FROM t1, rt0; -- 0ms;
SELECT DISTINCT HEX(rt0.c0), NTH_VALUE((((rt0.c2 IN ()))>((rt0.c1 IN ()))), '''M/䶶f	oN' COLLATE BINARY) OVER (), ((((rt0.c0) BETWEEN (t0.c0) AND (rt0.c1))) NOTNULL) FROM t0, rt0, t1 WHERE ((((NULL) IS FALSE) IN ())); -- 0ms;
SELECT DISTINCT MAX((((rt0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c0)))) FROM t0, t1, rt0 WHERE ((((2.025192552E9) NOTNULL) IN ())) LIMIT -2039063566; -- 0ms;
SELECT ALL IFNULL(DISTINCT MIN(t1.c0), ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))), rt0.c0, UPPER(DISTINCT rt0.c1 COLLATE NOCASE) FROM t1, t0 WHERE ((- (((x'') NOT NULL))));SELECT DISTINCT NULLIF(DISTINCT rt0.c2 COLLATE BINARY, 0.3470257722131852), (((rt0.c1)) BETWEEN ((((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c2)))) AND ((((t1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1))))), UNLIKELY((rt0.c1 IN (rt0.c1))) FROM t1, t0, rt0; -- 0ms;
SELECT LAST_VALUE(CAST(((rt0.c0)IS NOT(rt0.c1)) AS REAL)) OVER () FROM rt0, t1 ORDER BY (((((rt0.c1, rt0.c1, rt0.c1))<((t0.c0, rt0.c0, t1.c0)))) IS TRUE) ASC  NULLS LAST, t0.c0;SELECT ALL ((t0.c0 IN ()) IN ()) FROM t0 WHERE (((((CASE WHEN 0.6873892175945626 THEN x'' END)AND(CASE '1210825944'  WHEN '' THEN 0.5565824173951062 ELSE x'' END)))AND(json_object(x'', x'', 0x7382005e, 0.5485694655609032)))) GROUP BY (((((rt0.c2)LIKE(rt0.c0))))>((t0.c0))), ((((t0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2)))IS NOT((~ (t0.c0)))), ((CAST(rt0.c0 AS TEXT))<=(((rt0.c1) ISNULL))), x'31fe', (+ ((('-U63s,yZ') NOT BETWEEN (t0.c0) AND (rt0.c1))));SELECT ALL ((t1.c0 COLLATE NOCASE)>(rt0.c2)), COUNT(*), (+ ((NOT ('!퀐')))) FROM t0, t1 NATURAL JOIN rt0 WHERE (((((CASE WHEN 0.4594701314746271 THEN NULL END)OR(CAST(NULL AS BLOB))))OR(((x'') IS FALSE)))) GROUP BY x'', TYPEOF(DISTINCT ''), ((((t1.c0) IS FALSE)) IS FALSE); -- 1ms;
SELECT CASE CAST(rt0.c1 AS REAL)  WHEN CAST(rt0.c2 AS TEXT) THEN (((t1.c0))<>((rt0.c1))) WHEN t0.c0 COLLATE NOCASE THEN rt0.c1 WHEN (rt0.c0 IN ()) THEN CAST(rt0.c2 AS TEXT) END, CASE ((rt0.c1) NOT NULL)  WHEN (+ (rt0.c2)) THEN ((rt0.c1) IS FALSE) WHEN rt0.c2 THEN ((rt0.c0) IS FALSE) WHEN ((((x'')AND(rt0.c1)))AND(rt0.c1)) THEN rt0.c1 COLLATE NOCASE ELSE ((t1.c0) IS TRUE) END, CAST(CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END AS INTEGER) FROM t1, rt0, t0; -- 0ms;
SELECT ALL CASE CASE WHEN x'5189' THEN t0.c0 ELSE rt0.c2 END  WHEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)) THEN ((rt0.c1)>=(rt0.c1)) ELSE ((t1.c0)+(rt0.c2)) END FROM t0, t1 WHERE (((('418525366', (('-1168976776') BETWEEN (x'') AND ('-1922972709')), ((((0.7658414687488178)OR('j(GyX\r')))AND(1312590033))))<=((x'' COLLATE BINARY, (((0.6703079212105786, 0.1393156686442144, x'69c0'))>=(('&yY', x'', '1680639747'))), CAST(-654838702 AS NUMERIC)))));SELECT TOTAL('''?') FROM rt0 GROUP BY (((rt0.c0, t1.c0, rt0.c2)) NOT BETWEEN ((t1.c0, rt0.c0, rt0.c1)) AND ((rt0.c2, rt0.c1, t1.c0))) COLLATE BINARY HAVING GROUP_CONCAT(COUNT(*));SELECT ALL '-562132908', SQLITE_COMPILEOPTION_USED(CASE WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END), ABS(TRIM(DISTINCT rt0.c0)) FROM t1, t0, rt0 WHERE ((('!岰')==(NULL)) COLLATE NOCASE) LIMIT -1944270712; -- 1ms;
SELECT DISTINCT COUNT(*) OVER (), NULLIF(DISTINCT ((((rt0.c2)AND(rt0.c2)))AND(t1.c0)), (NOT (rt0.c0))), COUNT(*) FROM t0, rt0, t1 WHERE (((- ('-1689178377')) IN (((('J(GYX\r')) NOT BETWEEN ((x'ea89')) AND ((x''))), CAST(0.24429954167466728 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((json_extract(rt0.c1, NULL)))<>((((t0.c0)IS(rt0.c1))))) FROM t0, rt0 WHERE (((((NULL) ISNULL))%((('0.2592125239682753')OR('-759433013'))))); -- 0ms;
SELECT DISTINCT ((MIN(t1.c0)) NOT BETWEEN (rt0.c0 COLLATE NOCASE) AND (x'')) FROM t0, rt0, t1 WHERE ((+ (('-191233005' IN ())))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (t1.c0)) THEN ((x'3caa')>>(t1.c0)) END, rt0.c1, ((((t0.c0) ISNULL)) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 END) AND (((t1.c0)|(rt0.c1)))) FROM t0, rt0 NOT INDEXED WHERE (((((((x'') BETWEEN (754685906) AND (-175675956)))OR((('759219031')<>(NULL)))))AND(((NULL) IS FALSE))));SELECT DISTINCT ((CASE t0.c0  WHEN t1.c0 THEN rt0.c1 END)<<('-1475488377')), ((SUBSTR(t0.c0, '0.48806457812365167')) BETWEEN ((('')>(0.17628839843275546))) AND (CASE t1.c0  WHEN rt0.c2 THEN t1.c0 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c1 END)), (((rt0.c0) ISNULL) IN ()) FROM t0;SELECT ALL ((((NULL)OR(NULL)))OR(CAST(rt0.c0 AS BLOB))) FROM rt0 WHERE ((((((x'88b3')LIKE(0.4446269705530498))))>=((((NULL)>>(0.5056439198821967)))))); -- 0ms;
SELECT DISTINCT 0x10e96b0e, (rt0.c2 IN ()), (- (((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t1, rt0, t0 WHERE ((~ ((('0.23492591263196005')>(x''))))); -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS BLOB)) BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((t1.c0) IS TRUE))) FROM t1, rt0, t0 WHERE (((ABS(DISTINCT x'7dae'))<>(((('-889797959'))>((NULL)))))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((CASE WHEN t0.c0 THEN rt0.c2 END)<<(rt0.c2)), NULL) OVER (), GROUP_CONCAT(((t1.c0)<<(rt0.c0))), (((CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN 0Xfffffffff59185fe THEN t1.c0 WHEN t0.c0 THEN t0.c0 END, (- (rt0.c2)), (t1.c0 IN (t0.c0, rt0.c1, t0.c0))))<=(((((rt0.c2))==((rt0.c0))), CAST(rt0.c1 AS REAL), MIN(rt0.c1)))) FROM rt0, t0;SELECT DISTINCT (('') NOT BETWEEN (((((t0.c0)AND(NULL)))AND(rt0.c1))) AND ((rt0.c0 IN ()))), ((x'') ISNULL), CHANGES() FROM rt0, t0; -- 0ms;
SELECT ((((rt0.c1) NOTNULL)) NOT BETWEEN (TRIM(t1.c0, rt0.c1)) AND ((- (rt0.c0)))) FROM rt0 WHERE (((NULL COLLATE NOCASE)LIKE(CASE WHEN 0.7723990429982234 THEN 759219031 ELSE 0x3a057c7c END)));SELECT CAST(((t1.c0)<=(t1.c0)) AS TEXT), ((((t0.c0)IS(rt0.c1)))%(((rt0.c0)||(t1.c0)))), COUNT(*) OVER ( GROUPS  UNBOUNDED PRECEDING) FROM t0;SELECT DISTINCT ((((rt0.c1)OR(COALESCE(DISTINCT rt0.c0, rt0.c0, t0.c0, t1.c0))))OR(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))), -1.168976776E9, CASE WHEN GROUP_CONCAT(rt0.c1) THEN HEX(t1.c0) END FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT ((((((((rt0.c1)AND(rt0.c0)))AND(json_array(t1.c0, rt0.c2))))OR(NULL)))OR(CAST(rt0.c2 AS BLOB))) FROM t0, t1 GROUP BY ((x'669b')>(t0.c0));SELECT PERCENT_RANK() OVER () FROM rt0, t1, t0 WHERE (LIKELIHOOD(CASE x''  WHEN NULL THEN 0.17389365543430146 WHEN '9Z8dL*9' THEN 0.33956654439629175 WHEN 0.5424083109196656 THEN NULL END, 0.839690464106721)); -- 0ms;
SELECT (((t1.c0) BETWEEN (rt0.c1) AND (rt0.c0)) IN ()), (('-1685462732')<(MAX(t0.c0))), (((rt0.c2)) NOT BETWEEN ((0.0701877109791369 COLLATE RTRIM)) AND ((rt0.c1 COLLATE RTRIM))) FROM t0, rt0, t1; -- 0ms;
SELECT t0.c0 FROM rt0, t1, t0 WHERE (((((NULL)OR(x'e0db'))) NOT BETWEEN (((0.561421355835177)+('756083829'))) AND (CAST(0.6365747445682531 AS TEXT)))); -- 1ms;
SELECT (- (((rt0.c1)>=(t1.c0)))) FROM t0, t1 WHERE (CAST((NULL IN (0.6873892175945626)) AS REAL));SELECT (((((rt0.c1)AND(t1.c0)))OR(rt0.c1)) IN ()) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT AVG((rt0.c1 IN ())) OVER () FROM t0, t1; -- 0ms;
SELECT (- (CAST(rt0.c0 AS NUMERIC))), (((NULL) BETWEEN (rt0.c1) AND (t1.c0)) IN (((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c2)))), FIRST_VALUE(((((rt0.c1)>>(rt0.c2)))%(NULL))) OVER () FROM rt0, t1; -- 0ms;
SELECT DISTINCT CASE WHEN '-1168976776' THEN rt0.c2 END COLLATE NOCASE FROM t1;SELECT DISTINCT ((- (NULL)) IN (((rt0.c2) IS FALSE))) FROM t1, t0 LIMIT -1514152991 OFFSET -660503556;SELECT DISTINCT 1.849828114E9 FROM t1, rt0 WHERE (CAST((NOT ('>0}')) AS TEXT)); -- 0ms;
SELECT DISTINCT LEAD((((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((rt0.c0, rt0.c2, rt0.c1)) AND ((rt0.c0, rt0.c0, rt0.c0))))IS NOT(rt0.c1)), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((rt0.c1)&(rt0.c1)))), CAST(((rt0.c0)==(rt0.c2)) AS NUMERIC)) OVER () FROM rt0 ORDER BY ((((((rt0.c2)<<(rt0.c1)))AND(CAST(0.37856247190667447 AS NUMERIC))))OR(t1.c0)) ASC  NULLS LAST, t0.c0  NULLS LAST, (((~ (rt0.c2))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((- (t0.c0)))) DESC  NULLS FIRST;SELECT ALL ((IFNULL(rt0.c2, rt0.c0)) ISNULL) FROM t0, t1 WHERE ((~ (('1023214574' IN ()))));SELECT DISTINCT ((((0.4594701314746271)+(rt0.c1))) NOT BETWEEN (((x'8478') BETWEEN (rt0.c1) AND (t1.c0))) AND (CHANGES())), (((rt0.c0, rt0.c2, rt0.c1, rt0.c2, rt0.c1)) BETWEEN ((((rt0.c2)AND(t1.c0)), ((t1.c0)|(t0.c0)), ((rt0.c1)LIKE(t0.c0)), ((((rt0.c2)OR(rt0.c2)))AND(rt0.c1)), (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t1.c0))))) AND ((((rt0.c1) IS TRUE), ((t1.c0)>(t1.c0)), ((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c2)))AND(t1.c0)))OR(t1.c0)), HEX(t1.c0), ((((((((t1.c0)AND(t0.c0)))AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c2))))), (((('6*') NOT BETWEEN (-1.475488377E9) AND (rt0.c1))) BETWEEN (json_patch(rt0.c0, t0.c0)) AND (((rt0.c0) IS FALSE))), t0.c0, (((((((((((((- (rt0.c1)))OR((rt0.c1 IN (rt0.c1)))))OR(LIKELIHOOD(DISTINCT NULL, 0.430843713898325))))AND(TRIM(t0.c0))))AND(GROUP_CONCAT(NULL))))OR(LIKELY(t1.c0))))OR(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE 0.20097667960121668 END)) FROM t1, rt0 GROUP BY ((rt0.c2) NOTNULL) COLLATE BINARY, ((LTRIM(rt0.c0, t1.c0)) NOT BETWEEN ('-704590515') AND (((t1.c0)OR(rt0.c1)))), ((CAST(t1.c0 AS REAL)) BETWEEN (rt0.c1) AND (CASE rt0.c2  WHEN rt0.c1 THEN rt0.c1 END)) HAVING (+ ((t0.c0 IN (rt0.c1))));SELECT (((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2)))) NOT BETWEEN (((((t1.c0)OR(NULL)))AND(rt0.c2))) AND (t0.c0)) FROM t1, rt0, t0 ORDER BY ((CAST(t1.c0 AS TEXT))OR(rt0.c1)); -- 1ms;
SELECT DISTINCT COUNT(CASE t0.c0  WHEN t1.c0 THEN t1.c0 ELSE rt0.c2 END) COLLATE RTRIM, t1.c0, t0.c0 FROM t1, t0 GROUP BY (- ((~ (rt0.c2)))), ((((((((((('C[To')AND(rt0.c0)))OR(rt0.c0)))OR(0x4f284ea2)))OR(rt0.c2))))<>(((NULL IN ())))), rt0.c1 HAVING CASE WHEN (+ (t1.c0)) THEN ((t0.c0) NOT BETWEEN (x'') AND (rt0.c0)) WHEN ((rt0.c0) IS TRUE) THEN CASE WHEN t1.c0 THEN rt0.c1 END WHEN COUNT(t1.c0) THEN ((t0.c0)<(rt0.c2)) ELSE UPPER(t1.c0) END;SELECT ALL t1.c0 FROM t1, rt0, t0 ORDER BY (((+ (rt0.c2))) BETWEEN ((- (rt0.c0))) AND (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))); -- 0ms;
SELECT ALL SUM(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 END) FILTER(WHERE ((0.17389365543430146)LIKE(0.5318393169705851))) OVER () FROM rt0, t1 WHERE ((0.22723853925032522 COLLATE RTRIM IN (((0.05480151589391058) ISNULL)))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, t0, t1 GROUP BY CASE CAST(rt0.c2 AS NUMERIC)  WHEN CASE WHEN rt0.c2 THEN rt0.c1 WHEN t0.c0 THEN rt0.c0 WHEN rt0.c1 THEN '226139082' ELSE NULL END THEN CAST(rt0.c0 AS REAL) END, (((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c0))), ((((((((t0.c0)OR(rt0.c2)))AND(t1.c0)))AND(-590041498)))AND((((rt0.c0)) BETWEEN ((t0.c0)) AND ((t1.c0))))) HAVING ('1948965746' IN ()); -- 1ms;
SELECT TOTAL(MAX((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c1, rt0.c0, t1.c0))))) FROM t1;SELECT DISTINCT CAST(rt0.c1 AS REAL) COLLATE RTRIM FROM rt0 WHERE ((((((NOT (0.6480359051896104)))OR((('-1689178377')<<(NULL)))))AND((((('0.17389365543430146')AND('-1922972709')))AND(NULL))))); -- 0ms;
SELECT (((((t1.c0 IN ()))OR(DATE(t1.c0, rt0.c2, rt0.c1, t1.c0, t0.c0))))OR(CASE rt0.c0  WHEN t1.c0 THEN rt0.c0 ELSE t0.c0 END)) FROM t0 INDEXED BY i31 LIMIT 2010310517 OFFSET 375214619;SELECT ALL 'JRvN*ii' FROM t0, t1 ORDER BY (NOT (rt0.c1)) COLLATE BINARY DESC, (((+ (rt0.c0)))&(((rt0.c2) NOT BETWEEN (rt0.c0) AND (x'e62c'))));SELECT DISTINCT ((((((((((rt0.c0) NOT NULL))AND(CASE WHEN rt0.c1 THEN t0.c0 ELSE t0.c0 END)))AND(((rt0.c2) ISNULL))))OR(((rt0.c0)>(rt0.c0)))))AND(((rt0.c1)%(rt0.c0)))) FROM t0, t1 NOT INDEXED, rt0 WHERE (x'') ORDER BY rt0.c2, ((((CASE rt0.c1  WHEN 0.1310007862765532 THEN t1.c0 WHEN rt0.c2 THEN NULL WHEN t0.c0 THEN t1.c0 END)AND(((((t1.c0)OR(t1.c0)))OR(rt0.c2)))))AND(((rt0.c0) BETWEEN (rt0.c0) AND (t1.c0)))) ASC  NULLS LAST, CAST(t0.c0 AS INTEGER) COLLATE RTRIM DESC, (+ ((((rt0.c1)) BETWEEN ((t1.c0)) AND ((t1.c0))))) DESC; -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0, t1 WHERE (((9223372036854775807)==(NULL)) COLLATE RTRIM) ORDER BY (~ (((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0))))  NULLS FIRST, (+ ((- (rt0.c2))))  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((IFNULL(t1.c0, rt0.c0))%(((rt0.c2)+(t1.c0)))) FROM t0 WHERE (CASE WHEN (((NULL))<((NULL))) THEN (NOT (NULL)) END);SELECT CAST(CAST(rt0.c1 AS INTEGER) AS INTEGER) FROM t0;SELECT DISTINCT HEX(DISTINCT rt0.c0) COLLATE BINARY, ((((rt0.c1) BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN (t0.c0) AND (CAST(t0.c0 AS NUMERIC))), SUM(HEX(DISTINCT rt0.c2)) OVER () FROM t1, t0, rt0 WHERE (CAST(NULL AS REAL)); -- 0ms;
SELECT DISTINCT ((('1263026829')) BETWEEN ((t0.c0)) AND ((t1.c0))) COLLATE BINARY FROM rt0 WHERE (((((((((((0.13478003063589128) NOT BETWEEN (0.5568797753960375) AND (NULL)))AND((NULL IN ()))))AND(CAST(373367463 AS NUMERIC))))OR(NULL)))OR(((x'')>>(x'')))));SELECT DISTINCT (((CAST(rt0.c1 AS NUMERIC), CASE t0.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN '9pSL8BE' THEN rt0.c0 ELSE rt0.c0 END, (((rt0.c0, rt0.c1, rt0.c1)) BETWEEN ((rt0.c2, rt0.c1, t0.c0)) AND ((t1.c0, t1.c0, t1.c0)))))=(((- (t0.c0)), ((rt0.c1)LIKE(t0.c0)), CAST(rt0.c1 AS INTEGER)))), (CAST(t1.c0 AS REAL) IN ()), ((rt0.c2)>(rt0.c1)) COLLATE BINARY, (+ (NULL)), (((t1.c0, t0.c0, rt0.c2)) BETWEEN ((((('1996779705'))>=((t1.c0))), ((((((((rt0.c2)OR(t0.c0)))OR(NULL)))OR(t0.c0)))AND(rt0.c0)), SUM(rt0.c2))) AND ((CASE rt0.c1  WHEN t0.c0 THEN t0.c0 END, rt0.c0, MIN(rt0.c0)))) FROM t0 ORDER BY (~ (rt0.c1)), ((LOWER(DISTINCT t0.c0))<<((((t1.c0))<((rt0.c1)))))  NULLS FIRST;SELECT DISTINCT SUM(((rt0.c1) NOT NULL)) OVER (), ABS(DISTINCT (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0)))), '2025192552' FROM t0, rt0, t1; -- 1ms;
SELECT ALL t1.c0, LENGTH(((t1.c0)>=(rt0.c2))), (NOT (t0.c0)) COLLATE RTRIM, IFNULL((t1.c0 IN ()), CAST(t1.c0 AS INTEGER)), ((((rt0.c0)||(rt0.c1)))>(CASE WHEN NULL THEN rt0.c1 WHEN t1.c0 THEN t0.c0 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c0 END)) FROM t1 CROSS JOIN t0 ON ((CAST(rt0.c2 AS BLOB)) BETWEEN (CAST(rt0.c2 AS BLOB)) AND (((rt0.c1)>=(t1.c0)))) FULL OUTER JOIN rt0 ON t0.c0;SELECT DISTINCT CAST(CAST(rt0.c2 AS BLOB) AS REAL) FROM t1, rt0; -- 0ms;
SELECT ALL TOTAL(CAST(t0.c0 AS TEXT) COLLATE BINARY) OVER (), (((t1.c0 IN ()))IS((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN ((rt0.c0, t1.c0, t1.c0)) AND ((t1.c0, rt0.c1, t0.c0))))), '-206354283' FROM t1, t0, rt0 LIMIT 2143156732 OFFSET -1327479970; -- 0ms;
SELECT DISTINCT ((((NULL)OR(((rt0.c1)>(rt0.c0)))))OR(load_extension(rt0.c0))) FROM t1;SELECT (x'' IN ()) COLLATE BINARY FROM t0; -- 0ms;
SELECT DISTINCT CAST(LOWER(rt0.c2) AS NUMERIC) FROM rt0, t0, t1 WHERE (load_extension((((((((((((('\Ckv(')OR(x'')))OR('')))OR(0.33956654439629175)))AND(NULL)))OR(0.06369170431663762)))OR(NULL)))) GROUP BY ((t0.c0 COLLATE BINARY) NOTNULL) HAVING (t1.c0 IN ());SELECT DISTINCT t1.c0 FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT LOWER(DISTINCT (t1.c0 IN ())), CAST(GROUP_CONCAT(rt0.c1) AS NUMERIC), NULL FROM rt0 WHERE ((('\m' COLLATE BINARY) NOT BETWEEN (('qvL{]ﳊ' IN ())) AND (((NULL)-('-449823807'))))); -- 1ms;
SELECT SUM((rt0.c1 IN ()) COLLATE RTRIM) FILTER(WHERE CAST(t1.c0 COLLATE RTRIM AS INTEGER)) OVER ( ORDER BY (((rt0.c2)>(rt0.c0)) IN ())) FROM t1 WHERE (((((NULL)=('')))<>(('Fz20e0kG]' IN ())))) LIMIT 1577189914; -- 0ms;
SELECT ((((rt0.c1)*(t1.c0)))==(((t0.c0)/(t0.c0)))) FROM rt0, t1, t0 WHERE (CASE WHEN 0x369ba13c THEN '-1663119208' WHEN ((((((((NULL)OR('+vquI&ᗱ')))AND('-751033336')))AND('PX+')))AND(0.13629989663500708)) THEN CASE WHEN '' THEN NULL ELSE x'f511' END WHEN (((0.4594701314746271, x'', 'W>'))<=(('1879043817', x'', x''))) THEN ((-1.939115505E9)IS(0.042016664646229995)) ELSE ((-1579041022) IS FALSE) END) GROUP BY CAST(rt0.c2 AS NUMERIC), (((rt0.c1)||(t0.c0)) IN ()), CAST((~ (0.8164702573418819)) AS BLOB); -- 0ms;
SELECT DISTINCT (+ ((~ (t0.c0)))) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT HEX(DISTINCT (NOT (rt0.c2))), ((((rt0.c2)AND(rt0.c2)))OR(((rt0.c2) NOT BETWEEN (x'') AND (t1.c0)))), (((t0.c0)) NOT BETWEEN ((((rt0.c1)>=(rt0.c1)))) AND ((CAST(rt0.c1 AS BLOB)))), NTH_VALUE(0.36846702312579604, CASE (rt0.c0 IN ())  WHEN CASE rt0.c0  WHEN t0.c0 THEN rt0.c1 ELSE rt0.c2 END THEN ((NULL)LIKE(rt0.c1)) END) OVER (), ((CAST(t1.c0 AS BLOB))%(0.33895350307954564)) FROM rt0, t1, t0 WHERE ((+ (CAST(x'' AS INTEGER)))) LIMIT -1859231175 OFFSET 1603858210; -- 0ms;
SELECT DISTINCT ((0.7005500735970995)%(((rt0.c0) NOT BETWEEN (t1.c0) AND (rt0.c2)))), (+ (GROUP_CONCAT(rt0.c2))), ((((t0.c0) NOT NULL)) NOT BETWEEN (((rt0.c2)IS NOT(rt0.c0))) AND ((((t1.c0))<(('-207779699'))))) FROM rt0 GROUP BY ((((rt0.c1) BETWEEN (t0.c0) AND (t0.c0)))>(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN x'3c36' END)) HAVING ((CAST(t0.c0 AS BLOB))==(rt0.c1 COLLATE NOCASE));SELECT ALL (((rt0.c2) NOT BETWEEN (t1.c0) AND (rt0.c2)) IN ()) FROM rt0 WHERE ((((x'')) NOT BETWEEN (((-82104889 IN ()))) AND ((CASE WHEN x'52e9' THEN x'' ELSE '' END)))); -- 0ms;
SELECT DISTINCT HEX(((rt0.c2)+(rt0.c0))) FROM rt0; -- 0ms;
SELECT CASE WHEN ((rt0.c1) ISNULL) THEN rt0.c0 COLLATE RTRIM END, rt0.c2, (((t0.c0 IN ())) IS TRUE) FROM t0, t1 GROUP BY ((LIKELIHOOD(t0.c0, 0.9945178376979714)) NOT NULL) HAVING MIN(TYPEOF(t1.c0) COLLATE NOCASE);SELECT ALL INSTR((+ (t0.c0)), ((t1.c0)&(t0.c0))) FROM rt0, t0 INDEXED BY i27 WHERE (CASE WHEN 0.1389880466152016 THEN ('-834552077' IN (NULL, '674681805')) ELSE ((0.586664696014664)/(NULL)) END);SELECT COUNT(*) FROM t1, t0; -- 0ms;
SELECT DISTINCT CAST((('''4/9') BETWEEN (rt0.c2) AND (rt0.c0)) AS TEXT) FROM rt0, t1 WHERE (CAST(0.8635220984634207 AS INTEGER)); -- 0ms;
SELECT ALL (NOT ((- (t0.c0)))), ((((t0.c0) NOT NULL))IS(CAST(t1.c0 AS REAL))), ((+ (t1.c0)) IN ()) FROM rt0, t1 WHERE (((((((((LENGTH(''))AND(IFNULL(DISTINCT 'nnvO\', 0.6574219920676112))))OR(CAST(0X444a4228 AS TEXT))))OR(((x'')IS(NULL)))))OR(CASE x'c28c'  WHEN 'V,' THEN x'' ELSE 0X4a9915a6 END))) GROUP BY x'dd86', MAX(t1.c0 COLLATE NOCASE, rt0.c2), CAST(((rt0.c1) NOT NULL) AS REAL) HAVING ((t1.c0) NOT BETWEEN ('-1001163379') AND (t1.c0)) COLLATE BINARY;SELECT DISTINCT CAST(t1.c0 AS BLOB) COLLATE RTRIM, ((((rt0.c1) NOTNULL))GLOB(CAST(rt0.c0 AS TEXT))), ((MIN(rt0.c1)) BETWEEN ((- (rt0.c2))) AND (((((((((rt0.c1)AND(t1.c0)))AND(t1.c0)))OR(t0.c0)))OR(rt0.c2)))) FROM t1, t0;SELECT DISTINCT COUNT(((rt0.c1)GLOB(rt0.c0))) OVER ( ORDER BY ((((((((UNLIKELY(t0.c0))AND((((t0.c0, t1.c0, t0.c0))<=((rt0.c1, rt0.c1, t1.c0))))))AND(((t0.c0)IS(rt0.c2)))))AND(((rt0.c2)IS(rt0.c0)))))AND(t1.c0))  NULLS FIRST) FROM t1, t0;SELECT DISTINCT ((t1.c0) IS FALSE) COLLATE RTRIM FROM t1, t0 LIMIT 1742114136 OFFSET -1979904214; -- 0ms;
SELECT ((((rt0.c1)OR(rt0.c2))) NOTNULL), (NOT (CAST(rt0.c0 AS REAL))), PERCENT_RANK() OVER () FROM rt0 WHERE (CASE WHEN (0x46754349 IN ()) THEN ((NULL)+(0Xffffffffc8851fa8)) END); -- 0ms;
SELECT ALL MAX((~ (rt0.c1))) FROM rt0 WHERE ((((((('+Pu')AND(NULL)))OR(x'04c5'))) NOT BETWEEN (0.07934720179445043) AND (((('-435591197'))<=((x'')))))); -- 0ms;
SELECT DISTINCT 'M' FROM t1, rt0 LIMIT -449823807 OFFSET -1333300702; -- 0ms;
SELECT ALL ((((t1.c0)==(rt0.c2))) IS FALSE) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS NUMERIC), CASE WHEN rt0.c2 THEN MIN(rt0.c0) ELSE (NOT (rt0.c2)) END, ((NOT (rt0.c1)) IN ()) FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((UNLIKELY(rt0.c1)) NOT BETWEEN (((rt0.c0)IS(rt0.c2))) AND ((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0))))) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) ISNULL)) IS TRUE) FROM t0, t1;SELECT MIN(((rt0.c2)IS(rt0.c1))), CASE WHEN (rt0.c1 IN (rt0.c2, '0.5122682425811014')) THEN (rt0.c0 IN (t0.c0)) WHEN ((t1.c0)%(rt0.c1)) THEN ((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)) WHEN (((rt0.c2))!=((t0.c0))) THEN rt0.c0 COLLATE BINARY WHEN ((0.6284632874176735) NOTNULL) THEN (((rt0.c1))>=((rt0.c2))) WHEN (+ (t0.c0)) THEN COUNT(*) END, CASE WHEN ((rt0.c0)LIKE(rt0.c2)) THEN ((rt0.c0) IS FALSE) ELSE ((rt0.c2)IS NOT(rt0.c0)) END FROM t0, rt0 WHERE ((((((((NULL)) NOT BETWEEN ((NULL)) AND ((1985793930))))AND(((((0.3760542384386957)OR('7 ')))OR('1948965746')))))OR((x'' IN ()))));SELECT DISTINCT ((MAX(t0.c0))=(((((rt0.c1)AND(rt0.c1)))OR(t1.c0)))) FROM t1, rt0;SELECT CHAR(MIN(t0.c0)) FROM t1;SELECT DISTINCT rt0.c2 FROM t1;SELECT (NOT (CASE WHEN t0.c0 THEN t1.c0 END)) FROM rt0, t1;SELECT DISTINCT CAST(CAST(rt0.c1 AS BLOB) AS NUMERIC) FROM rt0 WHERE (LOWER(ABS(NULL))) GROUP BY t1.c0, CAST(COALESCE(rt0.c0, rt0.c2, rt0.c1, rt0.c1) AS TEXT), ((((rt0.c2)IS NOT(rt0.c0))) NOT NULL) HAVING ((((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c0)))*(rt0.c2));SELECT DISTINCT -1916948814 FROM rt0, t1 WHERE (CAST(((x'0b5161e7')&(0.16030932220808247)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c0)))==(((((rt0.c2)OR(rt0.c2)))OR(t1.c0)))) FROM t0, rt0, t1 WHERE (LIKELIHOOD(CASE 0.4228013518553607  WHEN '-1256985576' THEN '1162316469' ELSE NULL END, 0.27324951405593845)); -- 0ms;
SELECT ((t0.c0 COLLATE NOCASE) IS FALSE), rt0.c0, (LOWER(DISTINCT -1.685462732E9) IN ()), (((+ (rt0.c0)))>(((rt0.c1) IS TRUE))), 0.774600389926766 FROM t1, t0, rt0 ORDER BY ((CAST(rt0.c0 AS REAL))AND(x'')) DESC, ((x'') IS FALSE) DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT MIN(CAST(t1.c0 AS NUMERIC)) FROM rt0 WHERE (((CHANGES()) NOT BETWEEN (CAST(1.31862088E9 AS INTEGER)) AND (((0X1cceab73)<(x''))))) ORDER BY (((((t1.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1)))) IS TRUE) LIMIT -107588271 OFFSET 1745130168;SELECT DISTINCT 0.16030932220808247 COLLATE BINARY FROM rt0, t1, t0 INDEXED BY i27; -- 0ms;
SELECT ALL '' FROM t0 WHERE (NULL) ORDER BY ((rt0.c1 COLLATE BINARY)<>((- (rt0.c2)))) DESC;SELECT AVG((NOT (rt0.c0))) OVER () FROM t1, t0;SELECT DISTINCT CAST(t1.c0 COLLATE RTRIM AS REAL) FROM t1 WHERE ((((CASE WHEN '-1324812167' THEN '-91642822' WHEN '-1859231175' THEN x'' WHEN 0.5317057279152847 THEN 0.673671298515565 END, ((0.18309892681547202) IS TRUE), ((x'') BETWEEN (0.370011164910961) AND (x'840d'))))>((load_extension(x''), ((x'ab82') NOT BETWEEN (NULL) AND (NULL)), CASE x''  WHEN '324215138' THEN '(3靁K' ELSE 0X3f4c2716 END))));SELECT DISTINCT TRIM(((t0.c0)>(t0.c0))), ((((((((((t0.c0) NOT NULL))AND((((rt0.c2))>((rt0.c0))))))OR((~ (rt0.c1)))))AND(((rt0.c2)GLOB(rt0.c1)))))AND(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0)))), ((CAST(t0.c0 AS NUMERIC)) NOT BETWEEN (((((t1.c0)AND(rt0.c0)))AND(rt0.c0))) AND (((((((((rt0.c2)AND(rt0.c1)))OR(t1.c0)))OR(rt0.c0)))AND(rt0.c0)))) FROM rt0;SELECT DISTINCT CAST(x'' AS BLOB) FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(*), (((((t1.c0 IN ()))OR(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)))))OR(((rt0.c0) ISNULL))), PERCENT_RANK() OVER () FROM t0, t1 WHERE ((((~ (NULL)))>>((('n iqG') IS TRUE))));SELECT ((t0.c0 IN ()) IN (((((t1.c0)AND(rt0.c2)))AND(t0.c0)), (rt0.c2 IN ()))) FROM rt0, t0, t1 WHERE (((CAST(NULL AS INTEGER))OR(IFNULL('-1236588104', NULL)))); -- 0ms;
SELECT ((((t0.c0) NOT BETWEEN ('䤷A') AND (rt0.c0)))/((rt0.c0 IN ()))) FROM t1, t0;SELECT DISTINCT CASE WHEN NULL THEN t0.c0 END COLLATE RTRIM, t1.c0, (((t1.c0)*(rt0.c2)) IN ()) FROM t1, t0, rt0 WHERE (((0.16116770930994406) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((x'')<>(t0.c0))) BETWEEN (HEX(t1.c0)) AND (((t1.c0)>=(NULL)))) FROM t1, rt0 WHERE (((LOWER(NULL))IS NOT((((x''))>(('t&4?婊烷g'))))));SELECT DISTINCT PRINTF(x'') FROM t0, t1 INNER JOIN rt0 ON t1.c0; -- 0ms;
SELECT DISTINCT (+ (json_extract(t0.c0, t1.c0))) FROM rt0, t0;SELECT ALL ((LIKELY(DISTINCT t1.c0)) NOT BETWEEN (COUNT(rt0.c0)) AND (CASE WHEN rt0.c2 THEN rt0.c1 ELSE t1.c0 END)) FROM t0 GROUP BY (((+ (t0.c0))) BETWEEN (NULL COLLATE BINARY) AND ((NOT (rt0.c1)))) HAVING (((t0.c0)) BETWEEN (((x'' IN ()))) AND ((((t1.c0) NOT NULL))));SELECT (((((rt0.c2) BETWEEN (-1482698332) AND (rt0.c0))))>((((((t1.c0)OR(0.26414834463913317)))OR(rt0.c0))))) FROM t0 WHERE (((json_valid(NULL)) NOTNULL));SELECT DISTINCT (((t1.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c2)))) AND (((rt0.c1 IN ())))) FROM t1, rt0 WHERE (CAST((x'' IN ('my{7&4|nl')) AS INTEGER)) ORDER BY (- (((t1.c0)<(rt0.c2)))) DESC; -- 0ms;
SELECT CAST(((rt0.c1) NOT NULL) AS INTEGER) FROM t1, t0 WHERE (((CASE x'7438'  WHEN -200134739 THEN '-998796960' WHEN -2.077380171E9 THEN x'' WHEN '' THEN x'' ELSE 'Fz20e0kG]' END) IS FALSE));SELECT DISTINCT GROUP_CONCAT(((((rt0.c1)AND(t0.c0)))AND(t0.c0))) FROM t1;SELECT CAST(((t0.c0)-(t0.c0)) AS INTEGER), '鯊|TG', NTH_VALUE(-1327479970, t1.c0) OVER () FROM t1;SELECT DISTINCT GROUP_CONCAT((((rt0.c1, rt0.c1, rt0.c2))>=((rt0.c1, x'', rt0.c2)))), ((((-1.482698332E9)OR(CASE WHEN t1.c0 THEN rt0.c1 END)))AND(CAST(t1.c0 AS TEXT))), ((CAST(t1.c0 AS TEXT))<((rt0.c1 IN (rt0.c1)))) FROM rt0, t0 WHERE (CHAR((+ ('㣫')))) GROUP BY (CASE t1.c0  WHEN t1.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c2 WHEN t0.c0 THEN t1.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END IN (CASE t1.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c1 END)) ORDER BY CASE ((rt0.c1)>(rt0.c0))  WHEN ((rt0.c0)+(t0.c0)) THEN rt0.c2 COLLATE BINARY END  NULLS FIRST, (((rt0.c1)) NOT BETWEEN ((CAST(t1.c0 AS REAL))) AND ((((rt0.c2)LIKE(rt0.c1)))))  NULLS LAST;SELECT DISTINCT SUM(((rt0.c1) BETWEEN (t0.c0) AND (x'9256'))) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES) FROM rt0, t0; -- 0ms;
SELECT CASE WHEN '-70241958' COLLATE NOCASE THEN ((rt0.c2)<(rt0.c1)) END, AVG(((t0.c0)LIKE(t0.c0))) OVER (), rt0.c2 FROM t1, rt0, t0 WHERE (((('kq㛀7' IN ())) NOT BETWEEN (((NULL) NOT BETWEEN (NULL) AND (0.5745883341429119))) AND ((('cH') BETWEEN (0x2af64e0e) AND (0.47830085296661584))))); -- 0ms;
SELECT DISTINCT (((t0.c0) BETWEEN (NULL) AND (rt0.c0)) IN ()) FROM rt0 WHERE (((((((NULL)AND('}I隿(oR')))AND('2025192552')))<=(((('1', x'', x'5c03946a'))<=(('-349581296', '-512110301', '0.774600389926766')))))) GROUP BY (((rt0.c1 IN (t0.c0)))==(((((((((rt0.c2)OR(t0.c0)))AND(rt0.c1)))OR(x'')))OR(rt0.c1))));SELECT DENSE_RANK() OVER () FROM t0, t1, rt0; -- 0ms;
SELECT ALL UPPER(NULLIF(DISTINCT rt0.c0, rt0.c0)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT LAG((((((t1.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) ISNULL), ((((json(t1.c0))OR(NULL)))OR(json(rt0.c2))), rt0.c1) OVER () FROM rt0, t0, t1 GROUP BY ((CASE WHEN rt0.c2 THEN t1.c0 ELSE t0.c0 END) NOT BETWEEN (CASE WHEN t1.c0 THEN t1.c0 END) AND (CASE WHEN rt0.c1 THEN t0.c0 WHEN rt0.c2 THEN t1.c0 WHEN t0.c0 THEN rt0.c2 WHEN t0.c0 THEN t1.c0 WHEN t1.c0 THEN 2114741159 ELSE NULL END)) HAVING ((NULL) NOT BETWEEN (COUNT(t0.c0)) AND (rt0.c0 COLLATE NOCASE)); -- 1ms;
SELECT DISTINCT TRIM(rt0.c1 COLLATE RTRIM), (((~ (x'528c'))) NOT NULL), (((rt0.c0, rt0.c0, rt0.c1)) NOT BETWEEN ((((((((((0.37914933519053673)AND(t1.c0)))AND(t0.c0)))OR(t1.c0)))AND(t0.c0)), CASE WHEN rt0.c1 THEN t0.c0 END, rt0.c2)) AND ((((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c0)), (- (rt0.c2)), ((((t1.c0)AND(rt0.c2)))AND(t0.c0))))) FROM t0, t1, rt0 WHERE ('+r''6*RJM'); -- 0ms;
SELECT DISTINCT (((CASE WHEN NULL THEN rt0.c2 ELSE t0.c0 END))>=((TYPEOF(DISTINCT rt0.c1)))) FROM t0, rt0 WHERE (LOWER((('418525366') NOT BETWEEN ('2014527697') AND (-349581296)))); -- 0ms;
SELECT CASE ((rt0.c1) ISNULL)  WHEN (rt0.c2 IN (rt0.c1)) THEN LIKE(rt0.c0, t1.c0, '6') END, COUNT(*) OVER (), SUM(QUOTE(t1.c0)) OVER ( ORDER BY 0Xfffffffffda116af ASC) FROM t0, rt0;SELECT AVG(rt0.c2) FILTER(WHERE (('-772630840') ISNULL)) OVER () FROM t1 WHERE (((((((((CAST('-1112203639' AS INTEGER))OR(CASE WHEN '-1475488377' THEN 0.821031184133198 ELSE '818572891' END)))OR(CAST('-1549704897' AS NUMERIC))))AND((((x'e7ec'))<=(('l'))))))OR(((0.15802893420488995) NOT BETWEEN (0Xffffffff8c1cc888) AND (NULL)))));SELECT ALL ((CASE rt0.c2  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN '0.37914933519053673' THEN rt0.c0 ELSE t0.c0 END)+((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM rt0, t0, t1 WHERE ((((((0.13228981593403344)) BETWEEN ((NULL)) AND ((NULL))))<>((((NULL))<=((1.157545346E9)))))); -- 0ms;
SELECT ((t1.c0)-(x'd40c')) COLLATE BINARY FROM t1 WHERE (((((CAST('1680639747' AS REAL))AND(((('~IsYFj]', 2003350905, 0Xffffffffc4c91165)) NOT BETWEEN (('', NULL, NULL)) AND ((NULL, x'', ''))))))AND(LIKELY(-4.24240412E8)))); -- 0ms;
SELECT ALL CASE WHEN '-889797959' COLLATE NOCASE THEN GROUP_CONCAT(rt0.c0) WHEN ((t0.c0) IS TRUE) THEN ((((((((rt0.c0)AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))OR(rt0.c0)) WHEN CAST(rt0.c0 AS REAL) THEN MAX(rt0.c2) WHEN ((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)) THEN (t1.c0 IN ()) WHEN t0.c0 THEN t1.c0 END, ((((rt0.c2) BETWEEN (t1.c0) AND (t0.c0))) ISNULL), ((((t1.c0) IS TRUE)) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND (((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))) FROM t0, t1;SELECT DISTINCT (((rt0.c0 COLLATE NOCASE))>((((rt0.c2)IS NOT(t1.c0))))) FROM t1, rt0; -- 0ms;
SELECT ALL CUME_DIST() OVER ( ORDER BY ((((((((t0.c0)AND(((rt0.c2)/(rt0.c0)))))AND(((t0.c0)||(rt0.c1)))))AND(((t0.c0) IS FALSE))))AND(rt0.c0))  NULLS LAST) FROM t1 WHERE (((((CASE WHEN '승L' THEN '-909841245' ELSE 0.1210990829902947 END)AND(((NULL) BETWEEN (x'e036') AND (0.7533194208578434)))))OR(CASE '1011284751'  WHEN '' THEN '-885500585' END)));SELECT ALL TRIM(NULLIF(rt0.c0, '>'), CASE WHEN rt0.c1 THEN t1.c0 END) FROM rt0, t0, t1; -- 0ms;
SELECT DISTINCT x'' FROM rt0 WHERE ((((NULL)/(0.7659329254418136)) IN ((('')LIKE(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)OR(rt0.c0)))AND(t1.c0)))AND('-1667474857')))OR(x'f79a'))) BETWEEN (MIN(rt0.c0)) AND (((t1.c0)|(rt0.c1)))) FROM t0;SELECT DISTINCT CASE WHEN ((rt0.c1)<>(rt0.c0)) THEN COUNT(*) ELSE (t0.c0 IN ()) END FROM t0, t1 WHERE ((((NULL)) NOT BETWEEN ((CAST(x'' AS REAL))) AND (((((NULL, -7.7263084E8, 0Xfffffffff6931075))<=((x'', NULL, 0X3b597978)))))));SELECT ALL (+ ((((rt0.c2))<=((rt0.c0))))) FROM t1, rt0; -- 0ms;
SELECT ALL ((((((rt0.c1)AND(t0.c0)))AND(rt0.c1)))>=((x'' IN ()))) FROM t0, rt0, t1 WHERE (((('153805241')) BETWEEN (((0.7571254908390637 IN ()))) AND ((CAST(x'' AS BLOB))))); -- 0ms;
SELECT CAST(CAST(rt0.c2 AS REAL) AS REAL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((AVG(''))<(((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))) FROM t0 WHERE (((CASE WHEN '-1075089425' THEN 'Rꐄ' END)||((- (x'1aa9')))));SELECT DISTINCT ((((GROUP_CONCAT(rt0.c2))AND(CASE t1.c0  WHEN rt0.c2 THEN rt0.c2 WHEN t1.c0 THEN t1.c0 WHEN t1.c0 THEN rt0.c0 END)))OR(((rt0.c2)>(rt0.c2)))), ((((((t1.c0)AND(t1.c0)))AND(CASE WHEN t0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN rt0.c1 THEN rt0.c1 ELSE t1.c0 END)))AND(((t1.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)))), (((((rt0.c0, t1.c0, rt0.c1)) NOT BETWEEN ((t0.c0, rt0.c0, t0.c0)) AND ((rt0.c2, t0.c0, t1.c0)))) NOT BETWEEN (rt0.c1 COLLATE BINARY) AND ((t1.c0 IN ()))) FROM t1 LIMIT 1832543403;SELECT DISTINCT (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t1.c0))))||((NOT (0.37856247190667447)))) FROM t0;SELECT DISTINCT (((t1.c0) BETWEEN (t0.c0) AND (t1.c0)) IN ()) FROM t1, t0 WHERE ((((((((0.48513819317049756)OR(0.7529948944195651)))OR('759219031'))))>(((('')<=(1.177560936E9)))))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1, rt0 WHERE (((((((NULL) BETWEEN (1.948965746E9) AND ('469765501')))AND(((('-759433013', 0.2986183360997936, '-772630840')) NOT BETWEEN ((0Xffffffffba52d478, 'M쉘', x'')) AND ((x'', '〪{?#', 'ኜG'))))))OR(((0xffffffffec2964cb) NOT BETWEEN ('') AND (1.177560936E9))))) LIMIT 498899600; -- 1ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c0)))LIKE(((rt0.c0)GLOB(rt0.c1)))) FROM rt0 GROUP BY (- (TRIM(DISTINCT rt0.c0))) HAVING (+ (AVG(rt0.c1))); -- 0ms;
SELECT (((rt0.c1))>(((~ (rt0.c1))))) FROM rt0, t1 WHERE (((((NULL IN (x'')), ((NULL) ISNULL), ((1147327065)>=(NULL))))>((((NULL)<<(-1.75675956E8)), '*r>TN.11\n' COLLATE BINARY, ((('')) BETWEEN ((x'')) AND ((x''))))))); -- 0ms;
SELECT DISTINCT (NOT ('-1540691871' COLLATE NOCASE)) FROM t0 FULL OUTER JOIN t1 ON rt0.c0;SELECT DISTINCT TOTAL(((((((((rt0.c2)OR(']n<9좈r!PH')))AND(rt0.c2)))AND(t1.c0)))OR(rt0.c0))) OVER () FROM t0, rt0, t1; -- 0ms;
SELECT ALL (((((rt0.c2) BETWEEN (t1.c0) AND (rt0.c1)), ((rt0.c0) IS TRUE), ((((((((t1.c0)AND(0.7924878979895579)))AND('')))AND(0.17389365543430146)))AND(rt0.c2))))<>((((t1.c0)IS(t0.c0)), CASE t0.c0  WHEN rt0.c2 THEN 0X5b33ad1 END, rt0.c2 COLLATE NOCASE))) FROM t1 WHERE (((((x'8bff')&(x''))) NOT BETWEEN ((('483565206') NOT BETWEEN (NULL) AND (NULL))) AND (((x'')AND(x'')))));SELECT CASE rt0.c1 COLLATE RTRIM  WHEN COUNT(*) THEN ((t1.c0)==(rt0.c0)) ELSE ((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)) END FROM t0, t1, rt0 WHERE (CASE ((NULL)<=('kq㛀7'))  WHEN CASE WHEN x'' THEN NULL WHEN x'' THEN '1584932277' WHEN NULL THEN x'' WHEN x'' THEN 0.18309892681547202 WHEN '708924793' THEN '0.26414834463913317' ELSE -6.54838702E8 END THEN CAST('-1922972709' AS INTEGER) WHEN ((0.6137344718730768)+(NULL)) THEN ((NULL)*(x'')) WHEN 0.9382330838547203 COLLATE BINARY THEN (~ (0.9535803341604535)) END); -- 0ms;
SELECT DISTINCT CAST((t1.c0 IN ()) AS TEXT) FROM t0; -- 0ms;
SELECT DISTINCT (NOT (((t0.c0)%(t0.c0)))) FROM rt0 GROUP BY (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t1.c0)))) BETWEEN (t0.c0 COLLATE BINARY) AND (((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c0)))) HAVING (json_insert(rt0.c1, t0.c0, rt0.c0) IN ());SELECT DISTINCT CASE (~ (t1.c0))  WHEN CASE WHEN rt0.c1 THEN x'972c' WHEN rt0.c0 THEN rt0.c1 WHEN t1.c0 THEN rt0.c0 ELSE rt0.c0 END THEN (- (0.6790405494272672)) ELSE ((rt0.c2) NOTNULL) END FROM t1, t0, rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c2))*(((t0.c0) ISNULL))) FROM rt0, t1, t0 WHERE (((('T5*J,\6s' COLLATE RTRIM, (0xffffffffe322de65 IN ('')), ((0x642c8703) ISNULL)))<=((CAST(NULL AS BLOB), ((NULL)AND(NULL)), ((((0.49392219059686415)OR(NULL)))AND('')))))); -- 0ms;
SELECT DISTINCT CASE ((rt0.c1)*(rt0.c2))  WHEN (rt0.c1 IN ()) THEN COUNT(*) ELSE (rt0.c0 IN ()) END FROM t0, rt0 WHERE (CASE CASE ''  WHEN 0.8932603547974726 THEN 0.7658315387089476 WHEN x'' THEN NULL WHEN 0.41329969757172413 THEN '-2039063566' END  WHEN ((x'') NOTNULL) THEN (((((((('2114741159')AND('821536813')))OR(-1797808395)))AND('')))OR(0Xffffffffde48ca62)) ELSE ((NULL)-(x'')) END); -- 0ms;
SELECT ALL rt0.c1 FROM rt0 WHERE (((((((((((0X10e96b0e)<>(x'')))AND((('-395307302')GLOB(0.020291479983905347)))))OR(0.3905297804070289 COLLATE BINARY)))AND(CASE 0.407371172083423  WHEN '' THEN 0.7190850779767869 WHEN 0xffffffff979505b9 THEN NULL WHEN '-1259116336' THEN x'b5e7' END)))OR((('1985793930')*(x''))))); -- 0ms;
SELECT DISTINCT SUM((((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0)))), ((CAST(rt0.c1 AS TEXT))%(((rt0.c0)IS(rt0.c2)))), (NOT (TYPEOF(rt0.c1))) FROM t1, rt0 WHERE ((- (x''))); -- 0ms;
SELECT DISTINCT 0.7075989826488441 FROM rt0, t1 WHERE ((LOWER(DISTINCT '143266125') IN ())); -- 0ms;
SELECT DISTINCT TRIM(DISTINCT 0.4181817398382778, rt0.c0), LIKELY(((rt0.c2)==(rt0.c1))), (((NOT (rt0.c0)))<(0.16030932220808247)) FROM t1;SELECT ALL LIKELY(DISTINCT (- (t1.c0))), ('995719544' IN ()), ((MAX(rt0.c1)) NOT BETWEEN (((t0.c0)>=(rt0.c0))) AND (MIN(rt0.c0))) FROM rt0, t0;SELECT DISTINCT CAST(t1.c0 COLLATE NOCASE AS TEXT), COUNT(*) OVER ( GROUPS ((1.157545346E9) NOT BETWEEN (((rt0.c2)IS NOT(t1.c0))) AND (rt0.c2)) PRECEDING), TOTAL(CAST(rt0.c2 AS REAL)) FROM t1, rt0 LEFT OUTER JOIN t0 ON ((((rt0.c0)&(rt0.c2))) NOT NULL);SELECT ((((rt0.c1 IN (rt0.c1)), SUM(rt0.c1), t1.c0, rt0.c0 COLLATE NOCASE, CAST(t1.c0 AS REAL)))=((((rt0.c2)GLOB(t1.c0)), ((rt0.c1) BETWEEN (rt0.c1) AND (NULL)), ((rt0.c0) BETWEEN (rt0.c1) AND (t1.c0)), (((rt0.c1, t1.c0, x''))>((rt0.c2, rt0.c0, 0.6693928171094682))), ((((NULL)OR(rt0.c2)))AND(rt0.c1))))), (((~ (t1.c0)))<>((((rt0.c0))>=((rt0.c2))))), CAST(CAST(t1.c0 AS BLOB) AS NUMERIC) FROM rt0 WHERE ((- (LIKELY('-889797959')))) ORDER BY x'', CASE CASE rt0.c2  WHEN t0.c0 THEN t1.c0 END  WHEN (- (rt0.c2)) THEN ((((((((t1.c0)AND(rt0.c2)))OR(x'19ae98c6')))AND(t1.c0)))OR(x'0008')) WHEN (rt0.c0 IN ()) THEN t1.c0 WHEN ((t1.c0)IS NOT(t1.c0)) THEN CASE rt0.c2  WHEN x'f01b' THEN t0.c0 END END DESC;SELECT DISTINCT COUNT(*) OVER () FROM t0, t1; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c2  WHEN t1.c0 THEN rt0.c2 ELSE rt0.c1 END)AND((t1.c0 IN ()))))OR(((((rt0.c0)OR(t0.c0)))OR(t1.c0)))) FROM t1, t0 WHERE ((((0.4680374870706582)) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((0.982304241920639))));SELECT ((((t1.c0)<(rt0.c2)))/(rt0.c1)) FROM rt0, t0, t1 WHERE (NULL); -- 0ms;
SELECT ALL LAG(((((rt0.c2)-(rt0.c0))) BETWEEN (CAST(rt0.c1 AS INTEGER)) AND (((t1.c0) NOT NULL))), rt0.c1, ((((CAST(t1.c0 AS INTEGER))OR(((rt0.c0) BETWEEN (t1.c0) AND (rt0.c1)))))AND(((((rt0.c1)AND(rt0.c2)))OR(rt0.c0))))) OVER () FROM t1, rt0 WHERE (COALESCE(-1911806277 COLLATE BINARY, (NULL IN ('-1373438307')))) INTERSECT SELECT COUNT(((((((((t1.c0)AND(x'')))AND(t0.c0)))AND(t1.c0)))AND(rt0.c0))) FROM t1;SELECT DISTINCT ((CASE WHEN t0.c0 THEN t1.c0 ELSE rt0.c1 END)||(t1.c0)) FROM t0, t1;SELECT ALL AVG(CAST(t1.c0 AS TEXT)) OVER () FROM rt0, t1, t0; -- 0ms;
SELECT ALL '' COLLATE RTRIM FROM t0, t1 WHERE ((((((((((((('w欎CN')AND('S\')))AND(0.5508571994207461)))OR(CASE WHEN 0X378410a1 THEN '*럵4?' END)))AND((('-1066064633') IS TRUE))))AND((('674681805') NOT BETWEEN (0x68aa3608) AND (x'')))))OR((((NULL)) BETWEEN (('x9')) AND ((x'')))))); -- 0ms;
SELECT ALL SQLITE_COMPILEOPTION_GET(((rt0.c1)>>(rt0.c0))), (((((((((NOT (t1.c0)))OR(((((t1.c0)AND(t0.c0)))AND(rt0.c1)))))OR((rt0.c2 IN ()))))AND(NULL)))AND(NULL)), MAX(((((((((rt0.c0)OR(rt0.c0)))OR(t1.c0)))OR(rt0.c2)))AND(t1.c0))) FROM t0;SELECT DISTINCT IFNULL(((rt0.c0) IS FALSE), ((((((((rt0.c1)OR(t1.c0)))AND(t1.c0)))AND(t0.c0)))OR(t1.c0))), (0.18915033069139775 IN ()), rt0.c0, ((((rt0.c0)&(t0.c0)))<=(((((((((rt0.c0)OR(t1.c0)))AND(rt0.c1)))AND(x'')))AND(rt0.c1)))), t0.c0 FROM t0 WHERE (((((((NULL)AND('/91oS\n')))OR(-174836507)))IS NOT((NOT ('d[[L\n')))));SELECT DISTINCT (((t1.c0 IN ())) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT '1328041634', ((((((rt0.c2)AND('-704507274')))AND(rt0.c0))) NOTNULL), (UPPER(DISTINCT t1.c0) IN ((((NULL, NULL, rt0.c2))!=((rt0.c2, x'313aa3ef', rt0.c0))))) FROM t0, rt0 WHERE ((((NULL)<=(0.7723990429982234)) IN ())) GROUP BY 0.426173157744725 HAVING IFNULL(DISTINCT (NOT (rt0.c2)), CAST('-712073997' AS BLOB)) ORDER BY LIKELIHOOD(-1357656598, 0.2033916967414472)  NULLS LAST;SELECT DISTINCT (((t0.c0 IN ()))IS NOT(((x'') NOTNULL))), GROUP_CONCAT(CASE rt0.c0  WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN t0.c0 WHEN t1.c0 THEN rt0.c2 END) FILTER(WHERE CAST(LIKELIHOOD(t1.c0, 0.24871442984397196) AS TEXT)) OVER ( RANGE  UNBOUNDED PRECEDING), rt0.c1 COLLATE BINARY FROM t1, t0 WHERE ((((((x'' IN ()))OR(('00' IN ()))))AND(x'9375' COLLATE NOCASE)));SELECT ALL json_insert(x'', ((t1.c0)GLOB(t1.c0)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (0x37d37a4))) FROM t1 WHERE (CAST(((1490230031) BETWEEN (NULL) AND (-1547131451)) AS NUMERIC));SELECT DISTINCT ((((rt0.c1 COLLATE BINARY)AND((((rt0.c1))!=((rt0.c2))))))OR(CAST(rt0.c2 AS REAL))) FROM t1;SELECT DISTINCT (((((t0.c0)) BETWEEN ((rt0.c2)) AND ((0.7474907636078367))))IS(((t0.c0) NOTNULL))), (((rt0.c1 IN (rt0.c2)))/((((rt0.c2, t1.c0, rt0.c1)) BETWEEN ((rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c0, rt0.c2, rt0.c0))))), 0.6139782642063727 FROM t0, rt0 WHERE (((UNLIKELY(DISTINCT '>'))&(CAST(NULL AS TEXT)))) ORDER BY ((rt0.c2)-(json_array('>', 0.4036086837783982, x'd72f1c06', rt0.c2))) LIMIT 1770518561 OFFSET -902897463;SELECT DISTINCT CASE ((rt0.c0)-(rt0.c0))  WHEN x'f628' THEN CAST('' AS INTEGER) END FROM rt0, t1 WHERE (UNLIKELY(DISTINCT ((x'2bda')!=(x'')))) ORDER BY rt0.c2; -- 1ms;
SELECT DISTINCT ((CAST(t0.c0 AS INTEGER)) NOTNULL) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT ((((((((rt0.c0)AND(t0.c0)))OR(rt0.c0)))OR(rt0.c0)))OR(t0.c0)) COLLATE BINARY FROM t0, rt0, t1; -- 0ms;
SELECT ALL ((('W'))<>((((t0.c0)>=(t0.c0))))), ((((- (rt0.c0))))!=((TOTAL(t1.c0)))), ((CASE WHEN 'eq' THEN t0.c0 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c0 THEN x'' ELSE t1.c0 END) IS FALSE) FROM t1, rt0 WHERE (((CAST(0.09806012765403027 AS REAL))GLOB('0.0701877109791369' COLLATE RTRIM)));SELECT DISTINCT (NOT (CASE rt0.c1  WHEN t1.c0 THEN rt0.c2 END)), json_insert(rt0.c1, rt0.c1, rt0.c0) COLLATE NOCASE COLLATE RTRIM, ((((t1.c0) NOT BETWEEN (t0.c0) AND (t1.c0))) ISNULL) FROM rt0 WHERE (((CAST(0x784316b4 AS REAL))/((NOT (x'0bd9')))));SELECT DISTINCT COUNT(*) COLLATE BINARY, ((0.4034460416339585)<=(CAST(rt0.c1 AS TEXT))), rt0.c0 FROM rt0, t0 WHERE (((((CASE WHEN NULL THEN NULL ELSE -957766198 END)AND(((NULL) ISNULL))))AND((('826907044')<<('1347076347'))))); -- 0ms;
SELECT DISTINCT TYPEOF(CAST(x'' AS BLOB)) FROM rt0, t0; -- 0ms;
SELECT GROUP_CONCAT(((rt0.c2) ISNULL)) OVER () FROM t1, rt0 WHERE (CAST((((NULL, x'', ''))<=((NULL, 0.8846484333980859, NULL))) AS NUMERIC)); -- 1ms;
SELECT DISTINCT ((AVG(t1.c0))+(NULL)), CAST(CASE WHEN t0.c0 THEN rt0.c0 END AS INTEGER), GROUP_CONCAT(((rt0.c1)||(rt0.c1))), CAST(((0.4319162368870839)<<(rt0.c2)) AS INTEGER), CASE WHEN CASE WHEN rt0.c1 THEN x'51e1d6f8' END THEN (('1906888593') NOT BETWEEN (t1.c0) AND (rt0.c2)) WHEN '' THEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((x''))) WHEN TOTAL_CHANGES() THEN ((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)) ELSE CAST(t0.c0 AS NUMERIC) END FROM t0, t1, rt0 WHERE (((((('r', '1996128095', 0.5122682425811014)) NOT BETWEEN ((x'', '1599521983', 0.4228013518553607)) AND ((0.1210990829902947, NULL, '-0.0')))) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((NULL)AND(((((((((rt0.c1)OR(t0.c0)))OR(rt0.c2)))AND(rt0.c0)))OR(t1.c0)))))OR(((t1.c0)>=(rt0.c1)))) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((((t1.c0)*(t1.c0)))!=(CAST(t1.c0 AS REAL)))) OVER () FROM t1 WHERE (TYPEOF(DISTINCT x'') COLLATE BINARY); -- 0ms;
SELECT ALL ((t0.c0 COLLATE RTRIM)|((- (t0.c0)))) FROM rt0 WHERE (TRIM(((NULL)%(-1850054872))));SELECT DISTINCT SUM(CASE rt0.c1  WHEN rt0.c2 THEN t0.c0 END) OVER () FROM t1;SELECT CAST(((t1.c0)>>(t0.c0)) AS BLOB), (('{JI*]f*') BETWEEN (t1.c0) AND (CASE x''  WHEN NULL THEN t0.c0 END)), (NOT (CAST(rt0.c2 AS REAL))) FROM rt0 WHERE ((- (NULL)));SELECT ALL ((((((t1.c0)AND(t0.c0)))OR(x''))) IS TRUE), (((rt0.c1 IN ()))*(CASE t0.c0  WHEN rt0.c2 THEN t1.c0 ELSE rt0.c1 END)), (((- (t1.c0))) BETWEEN ((t1.c0 IN ())) AND (NULL COLLATE RTRIM)), ((t0.c0 COLLATE BINARY) NOT BETWEEN (x'') AND ((((t1.c0))>((rt0.c2))))), ((((rt0.c2 IN ())))<(((NOT (t0.c0))))) FROM rt0, t0, t1 WHERE (DATE(NULL, (('-704590515') ISNULL), ((x'')GLOB(0.8443032549612929)))); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0)<<(rt0.c1)) AS TEXT) FROM t1 WHERE (((CASE 'H%P'  WHEN -659161983 THEN 0.3963610740059098 ELSE NULL END) NOTNULL));SELECT LIKELY(((rt0.c2) BETWEEN (t1.c0) AND (rt0.c2))) FROM t1, t0, rt0; -- 0ms;
SELECT ALL AVG(((((t0.c0)OR(t1.c0)))OR(rt0.c1))) OVER () FROM t0 WHERE (TOTAL_CHANGES());SELECT DISTINCT (+ (((0.7653293715302888)&(rt0.c1)))) FROM t0, t1 WHERE ('1e500') GROUP BY NULL;SELECT (((((rt0.c2))>((t0.c0))))OR(x'')), rt0.c2, ((((((((((rt0.c2)AND(t1.c0)))AND(rt0.c2)))OR(rt0.c0)))AND(rt0.c1))) ISNULL) FROM rt0, t1 WHERE ((~ (NULL COLLATE RTRIM)));SELECT AVG(0.158987467186129), ((((((((((((t1.c0)OR(t0.c0)))OR(t0.c0)))AND(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c2 END)))AND(((rt0.c2)>>(rt0.c1)))))AND((((rt0.c0))<=((t1.c0))))))OR(rt0.c1 COLLATE RTRIM)), (((t0.c0 IN ())) BETWEEN (((((((((((((t0.c0)OR(rt0.c0)))AND(rt0.c0)))OR(t0.c0)))OR(rt0.c1)))AND(rt0.c2)))AND(t1.c0))) AND (CASE rt0.c0  WHEN t0.c0 THEN rt0.c2 ELSE rt0.c1 END)) FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)!=('-185579717')))IS NOT(((((((((-1.944270712E9)AND(t0.c0)))OR(t0.c0)))AND(t0.c0)))OR(t1.c0)))) FROM t0, t1 WHERE ('592610084' COLLATE RTRIM COLLATE RTRIM COLLATE BINARY);SELECT ALL '0.37856247190667447', (((x'3703', rt0.c1, t1.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((((rt0.c0)IS NOT(rt0.c0)), ((((((((rt0.c2)AND(t1.c0)))AND(rt0.c0)))OR(t0.c0)))OR(t1.c0)), (t0.c0 IN ()), '{tvl폍#', (((t1.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))))) AND ((((rt0.c0) NOTNULL), (+ (t1.c0)), CASE WHEN rt0.c1 THEN NULL ELSE rt0.c0 END, ((rt0.c2) NOT BETWEEN (t1.c0) AND (t1.c0)), ((rt0.c2) BETWEEN (rt0.c2) AND (x''))))), ((SUM(t0.c0)) IS TRUE) FROM t1, t0, rt0 WHERE ((CASE NULL  WHEN '\T' THEN NULL END IN ())); -- 0ms;
SELECT DISTINCT SUM(((rt0.c0) IS TRUE)) OVER (), (((~ (t0.c0)))==((rt0.c2 IN ()))), SQLITE_VERSION() FROM t1, t0;SELECT DISTINCT FIRST_VALUE(NULL) OVER () FROM t1 WHERE (((((((445640683)<<('sq')))AND('*B8hQ1	Z')))AND((((NULL))>=((-449823807)))))); -- 0ms;
SELECT (((((NULL IN ()))OR((+ (rt0.c1)))))AND(CAST(t0.c0 AS TEXT))) FROM t1, t0, rt0 GROUP BY ((((((rt0.c2)AND(t0.c0)))AND(rt0.c2)))||(((rt0.c0) NOTNULL))) HAVING (((t0.c0 IN ()))==(CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END)); -- 0ms;
SELECT ALL CAST(CHAR(t1.c0) AS REAL) FROM t0 WHERE (ABS(DISTINCT '') COLLATE BINARY);SELECT DISTINCT (~ (rt0.c0)) COLLATE RTRIM FROM rt0 WHERE ((((NOT (NULL)))|(x'a899' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (t1.c0) AND (rt0.c1)) COLLATE NOCASE, ((CASE WHEN rt0.c0 THEN rt0.c2 END)==(((rt0.c0) IS TRUE))), NTILE(x'73bc') OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS) FROM rt0 WHERE ((((+ ('?A&')))=(CAST(NULL AS INTEGER))));SELECT DISTINCT (+ ((x'2a19' IN ()))) FROM rt0 WHERE ((((']YjH' IN ())) BETWEEN (NULL COLLATE BINARY) AND (CASE 0.6580755346457927  WHEN x'' THEN NULL ELSE x'' END))) LIMIT -346347263; -- 0ms;
SELECT CASE WHEN TOTAL(t1.c0) THEN ((rt0.c1) IS TRUE) END, ((LTRIM(t0.c0, t0.c0))LIKE((('~Ks\') NOT BETWEEN (t0.c0) AND ('&pD/18')))), ((CASE WHEN rt0.c1 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) NOT BETWEEN (((rt0.c2)AND(t0.c0))) AND ((NOT (t0.c0)))), ((((((((SUM(t0.c0))AND(NULL)))OR(LIKELIHOOD(DISTINCT 0.8881898677583571, 0.9408791427653257))))AND((NOT (rt0.c2)))))AND(((rt0.c2)IS(rt0.c1)))), (((- (rt0.c0))) BETWEEN ((rt0.c0 IN ())) AND (CASE rt0.c0  WHEN t0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c2 WHEN NULL THEN t1.c0 END)) FROM rt0 WHERE (CASE ((('+vquI&ᗱ'))>(('x9035z')))  WHEN NULL COLLATE RTRIM THEN (+ (0.4446269705530498)) WHEN ((0x856ad25) NOT BETWEEN (NULL) AND (NULL)) THEN 1756147819 WHEN (+ (NULL)) THEN DATE('420841694', 1999096643, '	b', NULL, -5.90041498E8, x'', 0.28937624182182786) ELSE ((NULL) IS TRUE) END);SELECT DISTINCT ((CAST(t0.c0 AS BLOB)) NOT BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0))) AND (t1.c0)) FROM rt0, t0, t1 WHERE (CAST((NOT (NULL)) AS INTEGER)) LIMIT -185579717 OFFSET 756083829; -- 1ms;
SELECT ALL LEAD(CASE CASE WHEN t0.c0 THEN t0.c0 END  WHEN ((t0.c0)&(t0.c0)) THEN (- (t0.c0)) ELSE ((t0.c0)OR(t0.c0)) END, ((t0.c0)||(t0.c0)) COLLATE NOCASE, INSTR(((t0.c0)==(t0.c0)), t0.c0 COLLATE RTRIM)) OVER (), UNLIKELY(t1.c0 COLLATE BINARY), COUNT(CAST(t0.c0 AS INTEGER)) FROM t0;SELECT DISTINCT CASE WHEN ((rt0.c0) NOT NULL) THEN ((((t1.c0)AND(rt0.c2)))AND(t0.c0)) END FROM rt0, t0, t1 WHERE ((((NULL, 0.4228013518553607, x'e51f')) NOT BETWEEN ((429643771 COLLATE BINARY, (('퀿?[dR+')>(NULL)), CASE NULL  WHEN x'99e8' THEN '-1651645498' ELSE 0.13228981593403344 END)) AND (((('1155182764') ISNULL), CASE 0.0803554635176531  WHEN NULL THEN NULL WHEN 829333154 THEN -1562251048 WHEN '-704590515' THEN x'' ELSE '6S' END, ((((x'6e58')AND(-57660087)))AND(0.3064223603384524)))))); -- 1ms;
SELECT ALL LAG(CAST(0x3edd521 AS NUMERIC), ((((((((((t0.c0)>('384065030')))AND((t1.c0 IN (rt0.c1)))))OR(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c0)))))AND(x'44e0')))AND(((rt0.c2)IS NOT(rt0.c1)))), CAST(x'' AS NUMERIC)) OVER () FROM t1 INDEXED BY i27, t0, rt0 WHERE (((((CASE NULL  WHEN '1202641426' THEN 0x313b77c0 END)AND((((x'')) NOT BETWEEN ((x'')) AND ((0.4883431111086043))))))AND(NULL))) ORDER BY NULL, ((((NOT (rt0.c0))))<((CASE WHEN rt0.c0 THEN '-1546251520' WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN t0.c0 END))) ASC  NULLS FIRST;SELECT (t0.c0 IN ()) COLLATE RTRIM FROM t0, rt0 WHERE (((NULL) NOT NULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c2) NOT BETWEEN (rt0.c2) AND (NULL)))|(CASE WHEN rt0.c2 THEN t1.c0 WHEN t1.c0 THEN rt0.c1 WHEN x'' THEN rt0.c2 END)) FROM rt0, t0, t1 ORDER BY (NOT (CASE rt0.c1  WHEN rt0.c1 THEN t1.c0 ELSE t0.c0 END)); -- 0ms;
SELECT DISTINCT CASE WHEN 0.9721795914138432 THEN ((rt0.c1) BETWEEN (NULL) AND (t1.c0)) WHEN rt0.c0 COLLATE NOCASE THEN t1.c0 COLLATE BINARY WHEN CASE WHEN rt0.c1 THEN rt0.c0 END THEN CASE t1.c0  WHEN '' THEN t0.c0 END ELSE ((rt0.c1)OR(rt0.c1)) END FROM t0 CROSS JOIN t1 ON ((((x'') IS TRUE)) NOT BETWEEN (((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0))) AND (((((rt0.c1)AND(t0.c0)))OR(rt0.c2)))) WHERE (SQLITE_VERSION());SELECT '1023214574' FROM t0, t1, rt0 WHERE (x'5629'); -- 0ms;
SELECT DISTINCT (((rt0.c2)-(t1.c0)) IN ()) FROM t1 WHERE (CAST(CASE WHEN 1881537514 THEN x'' ELSE '' END AS INTEGER)); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c0)LIKE(rt0.c1))) OVER (), ((rt0.c2) IS TRUE) COLLATE BINARY, AVG(((rt0.c2) NOT NULL)) OVER () FROM t0 INDEXED BY i18 WHERE (((((((((((x'75300f1f')OR('-1975244378')))AND(0.36846702312579604)))OR(x'')))OR(0Xffffffff807ec270))) BETWEEN (((NULL)>=(0.5679203167594329))) AND (CAST(0xffffffff9132bdb8 AS INTEGER))));SELECT LAG('6K䙤1䜻', (CAST(t1.c0 AS INTEGER) IN (CAST(t1.c0 AS TEXT))), CASE WHEN (((((((('\r,T䶶DHZ 6')OR(rt0.c0)))OR(rt0.c0)))OR(rt0.c2)))OR(rt0.c0)) THEN CASE WHEN t1.c0 THEN '-406219261' WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END ELSE CASE WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END END) OVER () FROM rt0, t1; -- 0ms;
SELECT ALL ((((NULL)AND(((((rt0.c2)OR(t1.c0)))AND(t0.c0)))))AND(SQLITE_COMPILEOPTION_USED(rt0.c1))), GROUP_CONCAT(CAST(rt0.c2 AS BLOB)) OVER (), NULLIF(DISTINCT (x'' IN ()), ((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1))) FROM t0 GROUP BY ((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE NOCASE;SELECT ALL ((rt0.c1)=(rt0.c2)) COLLATE RTRIM FROM rt0, t1; -- 0ms;
SELECT (((t0.c0)) NOT BETWEEN ((((((rt0.c2)OR(rt0.c1)))OR(t0.c0)))) AND ((((rt0.c2)AND('MK'))))) FROM rt0, t1, t0; -- 1ms;
SELECT ALL (+ (0.6905524840577951)), CASE WHEN ((t1.c0) NOT BETWEEN (rt0.c1) AND (0Xfffffffff77eb94f)) THEN rt0.c1 COLLATE BINARY END, '-321882721' FROM t1 WHERE ((((('☿' IN ())))==(('61543003'))));SELECT DISTINCT UPPER((t1.c0 IN ())) FROM t1, t0, rt0 WHERE ((((0Xffffffff8c6b720f, 0.13136844903685707, x'4e6c', 0.1926071067558458, 0.9031393790786526)) BETWEEN ((-1.32747997E9, x'', NULL, NULL, '118455052')) AND (('-1465737212', x'', 0x5a439afa, -8.89797959E8, 0Xfffffffff1fcd2ce))) COLLATE RTRIM) ORDER BY (t0.c0 COLLATE BINARY IN ()) ASC; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0)>(t0.c0)) COLLATE RTRIM) OVER () FROM rt0 GROUP BY ((((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))+((((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((t1.c0, rt0.c0, t0.c0)) AND ((rt0.c1, t1.c0, rt0.c0))))) LIMIT -97442565 OFFSET -802613548;SELECT TOTAL(CAST(t1.c0 AS INTEGER)) OVER () FROM t1 ORDER BY CAST((rt0.c1 IN ()) AS NUMERIC); -- 1ms;
SELECT DISTINCT ((CAST(t0.c0 AS INTEGER)) IS TRUE), CASE WHEN ((rt0.c2)||(t1.c0)) THEN rt0.c2 COLLATE RTRIM ELSE ((t0.c0) IS TRUE) END, SQLITE_VERSION() FROM rt0, t1, t0 WHERE ((((((((x'cd53')OR(x'')))OR(x''))))>=((((('-965581361')) NOT BETWEEN ((0Xffffffff8c7c7ece)) AND ((''))))))); -- 0ms;
SELECT DISTINCT ((((t0.c0 IN ())))>=((t0.c0 COLLATE RTRIM))), (((((rt0.c1) NOTNULL)))>(((t1.c0 IN (rt0.c2))))), ((((rt0.c1) IS TRUE)) IS TRUE) FROM t0 ORDER BY rt0.c0  NULLS LAST, (rt0.c1 IN (NULL));SELECT DISTINCT ((((((((LENGTH(t1.c0))AND(((t1.c0)OR(t0.c0)))))OR(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 ELSE t1.c0 END)))OR(rt0.c1)))AND(MIN(t0.c0))), ((COUNT(*))>(CASE WHEN 0.5375497532711347 THEN rt0.c2 ELSE t0.c0 END)), CAST(((((t1.c0)OR(t1.c0)))AND(rt0.c2)) AS BLOB), (~ ((- (rt0.c1)))), CUME_DIST() OVER () FROM t1, t0 WHERE (CASE WHEN NULL THEN x'' ELSE ((((NULL)AND(NULL)))OR(NULL)) END);SELECT DISTINCT x'bab9', CAST(CASE NULL  WHEN rt0.c1 THEN t1.c0 ELSE t1.c0 END AS NUMERIC), ((MIN(rt0.c1)) BETWEEN (((((((((rt0.c0)OR(t1.c0)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c1))) AND ((((((((('-911707265')AND(t0.c0)))OR('1849828114')))OR(rt0.c0)))AND(rt0.c0)))) FROM t1, rt0 WHERE ((((((('WVqၵe\n2U_')|(x'')))OR(((0Xee5d156)<(NULL)))))AND(((((((((x'')AND(NULL)))OR(NULL)))OR('')))OR(NULL)))));SELECT CASE rt0.c1 COLLATE RTRIM  WHEN ((t0.c0) ISNULL) THEN t1.c0 ELSE CAST(rt0.c2 AS REAL) END FROM t0, t1;SELECT DISTINCT GROUP_CONCAT(CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END) OVER () FROM rt0, t0, t1 WHERE (((((CASE x'b4ac5858'  WHEN '-562132908' THEN 0.23521824096922517 ELSE NULL END)OR(((x'')+(0.7544725032738436)))))OR(0.16286569260982997 COLLATE BINARY))); -- 0ms;
SELECT ALL ((CAST(rt0.c2 AS TEXT)) IS FALSE) FROM t0 FULL OUTER JOIN rt0 ON ((rt0.c0)<=(CASE WHEN 1186484744 THEN rt0.c0 END)) RIGHT OUTER JOIN t1 ON (- (((rt0.c1)|(t0.c0)))); -- 0ms;
SELECT ALL LENGTH(CAST(rt0.c0 AS INTEGER)) FROM t0, rt0; -- 0ms;
SELECT AVG(((rt0.c0)LIKE(rt0.c2))) OVER () FROM t1, rt0; -- 0ms;
SELECT DISTINCT ((((t1.c0)AND(((((t0.c0)AND(t0.c0)))OR(rt0.c1)))))OR(((((rt0.c2)AND(rt0.c2)))OR(t0.c0)))) FROM t1 WHERE ((((('0.03691296983090053')+(NULL)))&(NULL)));SELECT DISTINCT ((-1073520153) BETWEEN (CAST(t1.c0 AS BLOB)) AND (t1.c0)), t0.c0, (((NOT (rt0.c0))) NOTNULL) FROM t1, t0 WHERE (((((806166033 IN ())))!=((CAST(0.03498433148405611 AS INTEGER)))));SELECT DISTINCT ((LOWER(rt0.c0)) IS FALSE), (((rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((DATE(t1.c0, rt0.c0, rt0.c2), CAST(rt0.c0 AS TEXT), IFNULL(t1.c0, rt0.c1))) AND ((TRIM(DISTINCT t0.c0), (('1680639747') NOT BETWEEN (t0.c0) AND (t0.c0)), x''))), CASE WHEN AVG(rt0.c0) THEN CAST(t0.c0 AS TEXT) END FROM t1 LIMIT 0 OFFSET 446409942;SELECT ((((NULL COLLATE RTRIM)OR(TRIM(rt0.c0, rt0.c2))))AND(((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))), (((rt0.c1)) BETWEEN ((rt0.c1)) AND (('0A'))) COLLATE RTRIM, PERCENT_RANK() OVER () FROM rt0 WHERE (((((NOT (NULL)), ((NULL)-(0.3943460661889525)), 0.561421355835177))>((((NULL)|('zOlc|mMy')), ((0xffffffffdcd4ae66)*(NULL)), ((x'a999')>(x'fc12'))))));SELECT ALL (~ (((t1.c0)AND('')))) FROM rt0, t1 WHERE (CAST(LOWER(x'') AS REAL)); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS INTEGER) AS TEXT) FROM rt0, t1 WHERE ((x'49e2' COLLATE NOCASE IN (((NULL) BETWEEN ('-1714518112') AND (x'')), '{m1Ijk'))); -- 1ms;
SELECT DISTINCT DATETIME(TOTAL(rt0.c1), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)), t0.c0, CAST(rt0.c2 AS REAL), (((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0)))), SUM(((t1.c0)IS NOT(rt0.c2))), ((((t0.c0))>=((t0.c0))) IN ()) FROM rt0;SELECT DISTINCT SUM(-2092747249) FROM rt0 WHERE (CAST(CAST(x'00b7' AS REAL) AS INTEGER)); -- 1ms;
SELECT ALL ((((t0.c0) IS FALSE)) BETWEEN (((t1.c0) NOT NULL)) AND (CASE WHEN t0.c0 THEN rt0.c2 ELSE t1.c0 END)) FROM rt0, t1 WHERE (((((((-63245010))>=((0.9886716425675541)))))>=((x'' COLLATE NOCASE)))) EXCEPT SELECT DISTINCT (((+ (rt0.c0)))-((+ (rt0.c0)))) FROM rt0, t0, t1;SELECT DISTINCT ((GROUP_CONCAT(t0.c0))IS NOT(CAST('-716443700' AS INTEGER))), (((((rt0.c0, rt0.c0, t1.c0))=((rt0.c0, rt0.c0, rt0.c2))))>=(COUNT(x''))), CAST(((((rt0.c0)AND(t1.c0)))AND(t1.c0)) AS TEXT) FROM t0;SELECT DISTINCT CAST(((t1.c0) NOT BETWEEN (t0.c0) AND (t0.c0)) AS REAL), t0.c0 COLLATE NOCASE, ((((IFNULL(rt0.c1, rt0.c0))OR(((((rt0.c1)OR(rt0.c1)))AND(t1.c0)))))AND(HEX(DISTINCT t1.c0))) FROM t0, t1;SELECT ALL (+ (rt0.c1)) COLLATE NOCASE FROM rt0, t1; -- 0ms;
SELECT DISTINCT ((((('')OR(x'7ef1')))OR(t1.c0)) IN ()), CASE rtreenode(rt0.c0, t1.c0)  WHEN CAST(t1.c0 AS BLOB) THEN ((((((((((((rt0.c2)OR(t1.c0)))OR(NULL)))AND(rt0.c1)))OR(rt0.c1)))AND(t1.c0)))AND(t1.c0)) END, rt0.c2 FROM t0, t1, rt0 WHERE (((((CASE NULL  WHEN '' THEN '' ELSE x'8fb9' END)OR(0.8697853473590417)))OR(CAST(0X77bb7364 AS INTEGER)))); -- 0ms;
SELECT ALL (NOT (rt0.c0)), '-759433013', ((((rt0.c1) IS TRUE)) BETWEEN (TRIM(rt0.c2, t0.c0)) AND (((((rt0.c0)AND(rt0.c1)))AND(t1.c0)))) FROM t1 FULL OUTER JOIN t0 ON t1.c0 LEFT OUTER JOIN rt0 ON (- ((+ (rt0.c0)))) GROUP BY CASE WHEN NULL THEN 0.3751297021668656 ELSE (rt0.c0 IN ()) END, ((((((t1.c0)*(rt0.c2)))AND((rt0.c0 IN ()))))AND('-1296942660')), 0.6782323602722584 HAVING COUNT(*);SELECT DISTINCT COUNT(((rt0.c1)IS NOT(rt0.c2))) OVER ( PARTITION BY ((rt0.c0)<=(rt0.c1)), ((((t0.c0)>>(t0.c0))) NOT BETWEEN ('1143967098') AND (CASE t0.c0  WHEN rt0.c1 THEN rt0.c0 ELSE t0.c0 END))) FROM t0 WHERE (LOWER(DISTINCT ((0.2688252076506741)>=('?HozxmT]t')))) ORDER BY CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS NUMERIC);SELECT ALL ((((NULL)%(t1.c0)))*(((rt0.c1) IS TRUE))) FROM t1, t0;SELECT ALL (((t1.c0 IN ()))IS NOT(((rt0.c1)|(rt0.c0)))) FROM rt0, t0, t1 WHERE (((('6X+')) BETWEEN ((((0x3a057c7c) ISNULL))) AND ((((('0'))==(('1285634312'))))))); -- 0ms;
SELECT DISTINCT rt0.c0, ((((rt0.c1)+(rt0.c1))) NOTNULL), GROUP_CONCAT(((t0.c0) NOT BETWEEN (rt0.c0) AND (t0.c0))) OVER () FROM rt0, t1;SELECT ALL (((((t1.c0 IN ()))AND(((t0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND(CASE t0.c0  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c2 THEN t0.c0 WHEN t1.c0 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 END)) FROM t0, rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0, t0, t1 WHERE ((~ (CASE WHEN x'' THEN NULL ELSE 0Xffffffffb513ec18 END))); -- 0ms;
SELECT ALL (((CAST(t0.c0 AS NUMERIC)))<((CASE t1.c0  WHEN NULL THEN x'02cf' WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 ELSE '-1535263542' END))), x'', '-2110513155' FROM t1 WHERE (((((NULL) IS TRUE))!=((NOT (x'')))));SELECT (NOT ((rt0.c1 IN ()))) FROM t1; -- 0ms;
SELECT ALL (((t0.c0)) BETWEEN ((CAST(t1.c0 AS BLOB))) AND ((rt0.c2 COLLATE RTRIM))), 0.1691583540710314, CASE (NOT (t0.c0))  WHEN 'at%	C' THEN ('' IN ()) WHEN NULL THEN (((NULL))<=((rt0.c0))) WHEN ((t1.c0)=(rt0.c0)) THEN (NOT (rt0.c2)) END, x'', UPPER(rt0.c1) COLLATE NOCASE FROM t1, rt0 WHERE ('1483453897') ORDER BY t0.c0 ASC  NULLS LAST, NULL DESC  NULLS LAST;SELECT ALL ((((t1.c0) BETWEEN (t1.c0) AND (rt0.c2)))GLOB(NULL)) FROM t1, rt0; -- 0ms;
SELECT CASE IFNULL(rt0.c0, rt0.c0)  WHEN rt0.c2 THEN (~ (t0.c0)) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c0 AS REAL)) ISNULL), rt0.c2 COLLATE BINARY, (((rt0.c2) IS FALSE) IN ()) FROM t1;SELECT ALL ((((NULL)<<(rt0.c2)))<=((+ (t0.c0)))) FROM t0 NOT INDEXED, rt0; -- 0ms;
SELECT DISTINCT t1.c0 FROM t1, t0 WHERE (((('{}')) NOT BETWEEN ((CAST('X&lk7' AS TEXT))) AND ((CAST('#爢J\nsfNnP' AS REAL))))); -- 0ms;
SELECT (((NOT (rt0.c2)))LIKE(((rt0.c2)+(rt0.c2)))) FROM t1;SELECT DISTINCT LAG(((((NULL COLLATE NOCASE)OR((((rt0.c1)) BETWEEN ((t1.c0)) AND ((t0.c0))))))AND(t0.c0 COLLATE BINARY)), NULL, ((t0.c0 COLLATE NOCASE)/(x'9fc7'))) OVER () FROM rt0, t1, t0 GROUP BY (((t0.c0) NOT BETWEEN (rt0.c2) AND (t1.c0)) IN ()) HAVING MIN((t0.c0 IN (t1.c0)) COLLATE RTRIM) LIMIT -322704031; -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0, t1, rt0; -- 0ms;
SELECT ((rt0.c1 COLLATE BINARY)>(CASE WHEN rt0.c1 THEN rt0.c1 END)), LAST_VALUE(MIN(rt0.c2, t0.c0, rt0.c0, 0xffffffffd8a183fc) COLLATE RTRIM) OVER (), SQLITE_VERSION(), CASE LOWER(rt0.c0)  WHEN COUNT(*) THEN ((rt0.c2)>>(rt0.c0)) END, MAX((~ (t0.c0))) FROM t1, rt0, t0 WHERE (((((NULL) NOTNULL))||((('1167377019')+('jfsq]60'))))); -- 0ms;
SELECT DISTINCT ((706938500)==(']YjH')) FROM t0, rt0, t1; -- 1ms;
SELECT ALL rt0.c1, RANK() OVER (), ((((t0.c0)GLOB(rt0.c2))) IS FALSE) FROM t0 GROUP BY LTRIM(CAST(t1.c0 AS BLOB), rt0.c2 COLLATE BINARY);SELECT DISTINCT '-175012354' FROM t0; -- 0ms;
SELECT COUNT(*) OVER () FROM rt0 ORDER BY ((rt0.c2 IN (rt0.c0, rt0.c2)) IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NULL IN ()), (((rt0.c1, rt0.c1, t0.c0)) NOT BETWEEN (((((t1.c0, rt0.c0, t0.c0))!=((t1.c0, t1.c0, t1.c0))), ((((rt0.c1)OR(rt0.c2)))OR(t0.c0)), ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))) AND ((0.14755537794550833, ((rt0.c1)<=(rt0.c0)), CASE WHEN t0.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t1.c0 THEN rt0.c0 ELSE t0.c0 END))), CUME_DIST() OVER ( GROUPS  UNBOUNDED PRECEDING), ((SUBSTR(rt0.c2, t1.c0))<(CASE WHEN t1.c0 THEN t0.c0 END)), SUM(((((t0.c0)AND(t1.c0)))OR(rt0.c2))) OVER (), ((x'')>=(((((((((rt0.c0)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))OR(rt0.c2)))), json_object(CASE t1.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c2 END, (rt0.c1 IN ())) FROM t1, rt0;SELECT DISTINCT 0x6eaa5d22 FROM t0, t1 ORDER BY (((rt0.c0) ISNULL) IN ()); -- 0ms;
SELECT ((((t1.c0)OR(rt0.c1)))AND(rt0.c0)) COLLATE NOCASE, (+ (((rt0.c1)+(t1.c0)))), (LIKELY(t0.c0) IN (((rt0.c1) NOT NULL))) FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT ((t1.c0 COLLATE BINARY) IS FALSE) FROM t0, rt0, t1 WHERE (((CASE ''  WHEN '1312590033' THEN '8OP' ELSE '>䶶' END)&(CASE x'c387'  WHEN NULL THEN -7.04590515E8 END))) ORDER BY TYPEOF(DISTINCT ((rt0.c0)>>(rt0.c2)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT COUNT(((t1.c0) BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0;SELECT CASE SUM(t0.c0)  WHEN TOTAL(rt0.c2) THEN rt0.c0 COLLATE NOCASE ELSE CAST(t0.c0 AS INTEGER) END FROM t1, rt0, t0 ORDER BY ((t1.c0)>(rt0.c0)) COLLATE BINARY DESC, CASE IFNULL(rt0.c1, t0.c0)  WHEN t0.c0 COLLATE BINARY THEN CAST(NULL AS TEXT) ELSE CASE t1.c0  WHEN rt0.c2 THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN rt0.c1 END END ASC; -- 0ms;
SELECT DISTINCT ((((t1.c0) NOTNULL)) IS TRUE) FROM t0, t1, rt0 WHERE ('-1514152991'); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS INTEGER) AS TEXT) FROM t1, rt0 GROUP BY ((((((rt0.c2)AND(rt0.c2)))OR(t1.c0)))GLOB(ABS(DISTINCT t0.c0))) ORDER BY ((TOTAL_CHANGES())GLOB(CAST(t1.c0 AS INTEGER))) DESC  NULLS FIRST;SELECT DISTINCT ((((((((((((TOTAL(t0.c0))OR((NOT (rt0.c0)))))AND(CASE WHEN t1.c0 THEN rt0.c0 END)))OR(1948965746)))AND((((rt0.c0)) BETWEEN ((0xffffffffe832b05f)) AND ((rt0.c1))))))OR((t0.c0 IN ()))))OR((t0.c0 IN ()))) FROM t0, t1, rt0 GROUP BY ((((t1.c0 COLLATE NOCASE)OR(t0.c0)))OR(x'')), (+ ((rt0.c1 IN (t1.c0)))), (((rt0.c0)) BETWEEN (((rt0.c1 IN ()))) AND ((((t1.c0)GLOB(rt0.c2))))) HAVING (((rt0.c0 IN ()))LIKE(((t1.c0)>(t0.c0)))); -- 1ms;
SELECT (((((('hU\#Ks')OR(rt0.c2)))AND(rt0.c1))) NOTNULL) FROM t1, rt0, t0 WHERE (((NULL IN ()) IN ())); -- 0ms;
SELECT CASE WHEN (((NULL)) BETWEEN ((t0.c0)) AND ((rt0.c2))) THEN ((t0.c0)+(rt0.c2)) WHEN (((rt0.c1))<((rt0.c0))) THEN ((((t1.c0)OR(rt0.c1)))AND(rt0.c0)) WHEN (+ (rt0.c1)) THEN CAST(NULL AS INTEGER) END, (((NULL IN ())) NOT BETWEEN (COUNT(t1.c0)) AND ('')), LAG(((((((((rt0.c1 COLLATE BINARY)OR((('2030492777') IS TRUE))))AND((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((''))))))AND(rt0.c2 COLLATE RTRIM)))OR((((rt0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c1))))), (((- (rt0.c0))) IS TRUE), (((- (t1.c0)))==(((t1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))) OVER () FROM t0, t1, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)<=(rt0.c1))) IS FALSE) FROM t1;SELECT DISTINCT ((rt0.c2 COLLATE RTRIM)||(((t0.c0)||(t0.c0)))) FROM t1;SELECT DISTINCT 0.8844271922902923 FROM t1, rt0 WHERE (x''); -- 1ms;
SELECT DISTINCT ((UNLIKELY(rt0.c2))-(rt0.c2)), CAST(((rt0.c0) IS TRUE) AS INTEGER), TOTAL(((rt0.c2)-(rt0.c1))) FROM t0, rt0, t1 WHERE (((('-286266066', '~!J9(>', '')) BETWEEN ((((NULL) NOT BETWEEN (0.5553625052155318) AND ('&yY')), (~ (NULL)), TRIM(DISTINCT NULL))) AND (((((('-1657428262')AND(NULL)))AND(NULL)), (+ (x'a908')), 'e(qE')))) GROUP BY (((rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((-1341495617, '%b臁i_C', rt0.c2)) AND ((t0.c0, rt0.c1, rt0.c0))) COLLATE BINARY COLLATE BINARY, (((t0.c0) NOT BETWEEN (rt0.c0) AND (t1.c0)) IN ()), ((((((((((((t1.c0)AND(t1.c0)))AND(rt0.c2)))OR(rt0.c1)))AND(0.9888526683866928)))AND('v')))AND((~ (t0.c0)))); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 AS REAL) FROM rt0, t0, t1 WHERE ((((('-775455039') BETWEEN (NULL) AND (0.3152488153837415))) NOT BETWEEN ('-1395489221') AND (((1609534251) NOT BETWEEN (0x4e3c88d1) AND (0.5206837947883726))))); -- 0ms;
SELECT DISTINCT ((((t0.c0) NOT BETWEEN (t1.c0) AND (rt0.c2))) IS FALSE) FROM rt0, t1, t0 WHERE (1.849828114E9); -- 0ms;
SELECT DISTINCT ((rt0.c1)<<((~ (t0.c0)))) FROM rt0 WHERE (((((0.7282652927188751)/(x'b62c'))) NOTNULL));SELECT DISTINCT ((((((((((rt0.c2) IS TRUE))AND((t1.c0 IN (rt0.c2)))))OR(((t1.c0) ISNULL))))OR(((rt0.c1)OR(rt0.c0)))))AND(CASE WHEN rt0.c1 THEN t0.c0 WHEN NULL THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)) FROM t0, t1, rt0; -- 0ms;
SELECT '-1350321701' FROM rt0, t1, t0 WHERE (CASE ((NULL)OR(0.7852754618355169))  WHEN ((x'a46c') IS TRUE) THEN CAST(NULL AS REAL) ELSE (('')<=('a3')) END) ORDER BY ((((rt0.c2)%(rt0.c0))) IS FALSE) DESC  NULLS FIRST, (((('-469787186')+(rt0.c0))) ISNULL)  NULLS LAST; -- 1ms;
SELECT DISTINCT MAX(((t1.c0) BETWEEN (rt0.c2) AND (t1.c0))) FROM rt0 WHERE ('0.8846484333980859');SELECT DISTINCT (((t1.c0, rt0.c1, rt0.c0)) BETWEEN ((((t1.c0) NOT NULL), ((((((((((((t0.c0)OR(t1.c0)))OR(rt0.c2)))AND(t0.c0)))OR(NULL)))AND(rt0.c1)))OR(rt0.c1)), (- (t0.c0)))) AND (((((NULL))<>((rt0.c2))), HEX(rt0.c0), rt0.c0))), CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1)) THEN x'' ELSE 0X7025fbea END, CASE ((((rt0.c1)OR(rt0.c2)))AND('-62858228'))  WHEN rt0.c1 THEN ((rt0.c1)<>(x'')) END, CAST(((t1.c0) BETWEEN (t1.c0) AND (rt0.c1)) AS NUMERIC), CASE CAST(x'bbc449ff' AS TEXT)  WHEN ((t1.c0)LIKE(rt0.c1)) THEN '1134303260' WHEN ((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)) THEN rt0.c1 WHEN CASE rt0.c0  WHEN t1.c0 THEN t1.c0 WHEN rt0.c1 THEN x'd12b' WHEN rt0.c0 THEN rt0.c2 END THEN (+ (rt0.c2)) WHEN (~ (rt0.c2)) THEN MAX(rt0.c0, rt0.c2) WHEN rt0.c2 COLLATE RTRIM THEN ((t1.c0) ISNULL) WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t1.c0))) THEN t1.c0 COLLATE RTRIM WHEN rt0.c1 COLLATE NOCASE THEN (~ (rt0.c0)) ELSE CASE rt0.c1  WHEN rt0.c1 THEN t0.c0 WHEN t0.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN -1222077581 THEN rt0.c1 END END FROM t0;SELECT DISTINCT NTILE(CASE CAST(rt0.c1 AS BLOB)  WHEN '-449823807' THEN 0.3259107197202674 END) OVER ( ROWS BETWEEN CAST(((rt0.c1)IS('-345667084')) AS REAL) PRECEDING AND ((rt0.c2)&(t1.c0)) COLLATE RTRIM FOLLOWING), ((json_array_length(NULL, rt0.c1)) IS TRUE), (((t1.c0 IN ())) ISNULL) FROM rt0 WHERE (CASE WHEN ((NULL)LIKE('1555652932')) THEN (-924454085 IN ()) ELSE CAST(0xffffffffba52d478 AS TEXT) END);SELECT ((CAST(rt0.c2 AS NUMERIC))>=(SUM(rt0.c0))), COUNT(*) OVER (), (CASE WHEN t1.c0 THEN rt0.c2 END IN ()) FROM t1 WHERE (((((0.703146234559893 IN (x''))))<((((x'')IS(NULL))))));SELECT DISTINCT ((rt0.c1)AND('803240972')) FROM t0 WHERE (((('2061264881') NOT BETWEEN (0.8450316035433005) AND ('-1236588104')) IN (json_array_length(x'55bc', NULL))));SELECT (~ ((- (rt0.c0)))) FROM t1, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN (((x'')) BETWEEN ((rt0.c0)) AND ((t0.c0))) THEN ((rt0.c0) BETWEEN (t1.c0) AND (rt0.c0)) END FROM t0, rt0, t1; -- 0ms;
SELECT ALL ((((((rt0.c1)OR(t1.c0)))AND(rt0.c0))) NOTNULL) FROM rt0, t0 GROUP BY CASE WHEN CAST(rt0.c2 AS INTEGER) THEN CASE WHEN t1.c0 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c2 THEN 0.6323182680384685 END WHEN CAST(t1.c0 AS INTEGER) THEN ((0.7387312014433175)|(rt0.c1)) WHEN (((rt0.c0))>((''))) THEN LOWER(DISTINCT t1.c0) WHEN TRIM(DISTINCT rt0.c0, x'') THEN t0.c0 WHEN ((t1.c0) BETWEEN (rt0.c1) AND (t0.c0)) THEN rt0.c2 END HAVING ((CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END)-(t1.c0 COLLATE RTRIM));SELECT CASE COUNT(*)  WHEN (rt0.c0 IN ()) THEN CASE WHEN t0.c0 THEN rt0.c2 END END, ((((rt0.c1))<=((rt0.c1))) IN ()), SUM(load_extension(rt0.c1, 0xffffffffab5bfbdc)) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t0, rt0 WHERE ((+ (NULL)));SELECT DISTINCT CHAR(((t1.c0)%(t1.c0))) FROM t0 WHERE (((((0.5745883341429119) NOTNULL)) IS TRUE));SELECT (~ (CAST(rt0.c0 AS REAL))), rt0.c0, NTILE(CASE WHEN (+ (rt0.c2)) THEN ((rt0.c1)=(rt0.c1)) WHEN CAST(rt0.c2 AS REAL) THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) WHEN ((rt0.c1)<>(rt0.c0)) THEN ((rt0.c2)>=(rt0.c2)) ELSE ((rt0.c0)<>(rt0.c2)) END) OVER (), rt0.c0, ((t0.c0) ISNULL) FROM rt0 WHERE (((((LOWER(DISTINCT x''))AND(((x'') NOT BETWEEN (NULL) AND ('7+')))))AND((('-1689178377')||(0x16e45e06)))));SELECT ALL (NOT (((t0.c0)IS NOT(t0.c0)))), ((((rt0.c2 IN ()), NULL, (((t1.c0))=((rt0.c0)))))<=(((rt0.c2 IN ()), ((t1.c0)AND(rt0.c0)), ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0))))), ((STRFTIME(t1.c0, rt0.c0, rt0.c0, rt0.c1, rt0.c0))!=(AVG(rt0.c0))) FROM t0, rt0, t1 WHERE ((((NOT (NULL))) IS TRUE)); -- 0ms;
SELECT ALL COUNT('715487199') FROM rt0, t1; -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN (((rt0.c2 IN ()))) AND (((- (t0.c0))))) FROM t1, rt0;SELECT ALL ((((((((((rt0.c1) NOTNULL))AND(((t1.c0)LIKE(rt0.c2)))))OR(((rt0.c1)<<(rt0.c2)))))OR(t0.c0)))AND(rt0.c2)) FROM rt0, t1, t0 ORDER BY rt0.c1 ASC  NULLS FIRST, (((t0.c0)) NOT BETWEEN (((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((t1.c0))))) AND (((((t1.c0, rt0.c2, rt0.c1))<((t0.c0, t1.c0, t0.c0)))))); -- 1ms;
SELECT ((-277921375)%((((rt0.c2, rt0.c0, rt0.c1, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c2, t0.c0, t1.c0, t1.c0, t0.c0)) AND ((x'c6d1', t0.c0, rt0.c0, rt0.c0, rt0.c0))))), (~ (CAST(t0.c0 AS TEXT))), ((rt0.c1) NOTNULL) FROM rt0 LIMIT -228855690 OFFSET -883737239;SELECT ALL ((((rt0.c0) ISNULL)) BETWEEN (CAST('\r_' AS BLOB)) AND (rt0.c1)), CAST(MIN(rt0.c0) AS REAL), ((rt0.c0)GLOB(((((rt0.c2)AND(rt0.c2)))OR(t0.c0)))) FROM t0, t1 LIMIT 1984028668;SELECT ALL CASE WHEN ((rt0.c2)<=(t0.c0)) THEN 0.8672368063905184 WHEN ((t1.c0)*(rt0.c0)) THEN ((rt0.c1) ISNULL) WHEN (+ (t0.c0)) THEN (rt0.c1 IN (t0.c0, -590041498)) WHEN (((t1.c0, t0.c0, rt0.c2)) BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((rt0.c1, rt0.c2, rt0.c0))) THEN ((rt0.c0) ISNULL) WHEN (t0.c0 IN (rt0.c1)) THEN ((rt0.c0) NOT NULL) ELSE rt0.c2 COLLATE BINARY END FROM t1, t0 WHERE ((- ((x'' IN ()))));SELECT DISTINCT ((((rt0.c0))==((t1.c0))) IN ()), SUM(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0))) OVER (), NULLIF(DISTINCT (~ (t1.c0)), MAX(rt0.c2)) FROM t1 GROUP BY '973438076', ((((rt0.c0) NOT BETWEEN (t0.c0) AND (-419924132)))<<(((((rt0.c0)OR(t1.c0)))OR(t0.c0)))), json_array_length((((rt0.c1))<=((t0.c0))), NULL);SELECT DISTINCT ((((((((((rt0.c1)OR(t1.c0)))OR(x'')))AND(t1.c0)))AND('1267088459'))) ISNULL) FROM t0;SELECT x'5fe4' FROM t1, t0, rt0; -- 1ms;
SELECT DISTINCT CAST(CAST(rt0.c1 AS REAL) AS REAL), ((((((((((t0.c0)>>(t0.c0)))OR(CASE t0.c0  WHEN t1.c0 THEN t0.c0 ELSE rt0.c1 END)))OR(('-2077380171' IN ()))))AND(STRFTIME(t0.c0, t1.c0, NULL))))AND(((t1.c0) ISNULL))), ((CAST(rt0.c1 AS INTEGER)) NOT BETWEEN (((t1.c0)<=(rt0.c1))) AND (t1.c0)) FROM rt0, t0;SELECT DISTINCT ((((NOT (t0.c0))))>((x''))) FROM t0 LIMIT 1879043817 OFFSET -660503556; -- 0ms;
SELECT DISTINCT AVG((rt0.c1 IN ())), ((t1.c0 IN (rt0.c2)) IN ()), RANK() OVER () FROM rt0 WHERE ((((((((x'0fc3'))=((x''))))AND((((('H!(')OR('2143156732')))OR(NULL)))))AND((x'' IN ('0.1210990829902947'))))); -- 0ms;
SELECT DISTINCT NULL, t1.c0, 2126275549 FROM t0, rt0, t1 LIMIT 940531721 OFFSET 553693142; -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN t0.c0 THEN rt0.c1 END)>(CAST(t0.c0 AS BLOB))) FROM t1, rt0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT (((((rt0.c2, t1.c0, t1.c0))>((rt0.c0, rt0.c1, rt0.c2))))<((NULL IN ()))) FROM t0 LIMIT 727167130;SELECT DISTINCT (- (LIKELY(rt0.c1))) FROM rt0, t0, t1 LIMIT 610958251 OFFSET -1601235564; -- 0ms;
SELECT DISTINCT (+ (SUM(rt0.c0))), TOTAL(((t1.c0)*(rt0.c1))) OVER (), (NOT (rt0.c2)) FROM rt0, t1, t0; -- 0ms;
SELECT ALL ((((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c1)))IS(CASE rt0.c0  WHEN rt0.c1 THEN t0.c0 ELSE rt0.c0 END)) FROM rt0 WHERE ((CASE WHEN x'' THEN x'' END IN ())) ORDER BY (((NULL)>(t0.c0)) IN ()), ((((((((((((UPPER(DISTINCT 0.23354845121086176))AND(((t1.c0) NOT BETWEEN (rt0.c2) AND (-2020496735)))))OR(((rt0.c0)%(rt0.c1)))))OR(rt0.c0 COLLATE NOCASE)))OR(CAST(rt0.c1 AS NUMERIC))))OR(((t1.c0)%(rt0.c1)))))AND((((rt0.c1, 0.4777772482910726, rt0.c0)) BETWEEN ((t0.c0, t1.c0, rt0.c1)) AND ((rt0.c0, t0.c0, t0.c0))))), ((x'') BETWEEN ((~ (rt0.c0))) AND (CAST(rt0.c2 AS REAL)))  NULLS LAST LIMIT -1209867573 OFFSET 2101646406;SELECT ((((((((((((t0.c0)AND(NULL)))OR(0x5d3826d)))AND(t1.c0)))OR(t0.c0)))OR(COUNT(*))))AND((t0.c0 IN ()))) FROM t1, t0, rt0 WHERE ((- (((0.32606538460788903)OR(-1319911329))))) GROUP BY '-205290520' HAVING ((((t0.c0) IS TRUE)) NOTNULL) LIMIT -429647830; -- 0ms;
SELECT DISTINCT NULL, ',El靀rBZ0)', t0.c0 FROM t1, t0 LIMIT -1387878577; -- 0ms;
SELECT DISTINCT t0.c0 FROM rt0 WHERE ((('-1213468162' IN (NULL, x'')) IN ()));SELECT DISTINCT ROUND((NULL IN (rt0.c1, rt0.c2)), '雠fVq''') FROM rt0, t0 WHERE (((x'') BETWEEN ('1879043817') AND (x'')) COLLATE BINARY) GROUP BY (+ ((((rt0.c2, rt0.c2, t1.c0)) BETWEEN ((t0.c0, t0.c0, rt0.c2)) AND ((t0.c0, rt0.c2, rt0.c2))))) HAVING rt0.c1;SELECT DISTINCT AVG((NOT (rt0.c1))), (((rt0.c2 IN ()))LIKE(UNLIKELY(t0.c0))), (((rt0.c1)) NOT BETWEEN ((((t0.c0)>>(rt0.c0)))) AND ((CAST(rt0.c2 AS INTEGER)))) FROM t0, t1, rt0; -- 0ms;
SELECT ((((rt0.c2 IN ()), '-1484839279', CASE NULL  WHEN rt0.c1 THEN t1.c0 WHEN t0.c0 THEN t0.c0 WHEN t1.c0 THEN rt0.c0 ELSE t0.c0 END))<=((CAST(t0.c0 AS INTEGER), (+ (t0.c0)), SUM(rt0.c0)))), -4.24240412E8, ((rt0.c1) IS FALSE) COLLATE NOCASE FROM rt0, t1, t0 ORDER BY (((((((((~ (rt0.c2)))AND(MIN(rt0.c2, t1.c0))))OR(CASE rt0.c2  WHEN rt0.c1 THEN t1.c0 ELSE t0.c0 END)))OR(((t0.c0) BETWEEN (rt0.c2) AND (t0.c0)))))OR(0.8635220984634207)) ASC LIMIT -449823807 OFFSET -812481061; -- 0ms;
SELECT (((+ (rt0.c2)))OR(((t1.c0) ISNULL))) FROM t0, rt0 ORDER BY ((((+ (rt0.c1)), ((((((((t1.c0)OR(rt0.c1)))AND(rt0.c0)))OR(NULL)))OR(rt0.c2)), CASE rt0.c1  WHEN rt0.c0 THEN t1.c0 END))==(((((t0.c0, t1.c0, NULL))<>((rt0.c2, t0.c0, t0.c0))), ((rt0.c0)GLOB(t0.c0)), (rt0.c1 IN ())))), ((((CAST(rt0.c0 AS BLOB))AND(CHANGES())))AND(((t0.c0)<<('0.0701877109791369')))) ASC;SELECT ALL CASE WHEN ((rt0.c2)<=(t1.c0)) THEN CASE WHEN t1.c0 THEN rt0.c2 END WHEN (NOT (t0.c0)) THEN rt0.c0 COLLATE BINARY WHEN (((rt0.c1))<=((rt0.c0))) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t1.c0)) ELSE CASE t1.c0  WHEN rt0.c1 THEN t0.c0 WHEN t1.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END END FROM t1, t0, rt0; -- 0ms;
SELECT ALL ((((rt0.c2)>=(rt0.c2))) BETWEEN (CAST(t1.c0 AS TEXT)) AND (NULLIF(DISTINCT rt0.c1, t0.c0))), CAST(rt0.c1 AS INTEGER) COLLATE NOCASE, TOTAL((rt0.c0 IN ())) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES) FROM rt0, t0 WHERE ((((((5.75752916E8, '1756298698', x'')) NOT BETWEEN ((0.525583198761965, '', '')) AND ((-1450258369, 6.74681805E8, NULL))))LIKE(((0.10244593556953407)|(0.4091788563623948))))) ORDER BY ((rt0.c1 COLLATE NOCASE)!=(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)))) LIMIT 65918241;SELECT ALL TOTAL(((t0.c0)<=(x'1d88'))) OVER () FROM t0; -- 1ms;
SELECT ALL ((((((((((t1.c0)IS NOT(rt0.c0)))OR(((t1.c0)>(t0.c0)))))OR(((rt0.c2)||(t1.c0)))))OR('1e500')))AND((('1632202058') NOT BETWEEN (t1.c0) AND (t0.c0)))) FROM t0, rt0, t1; -- 1ms;
SELECT ALL ((MIN('.'))GLOB(NULLIF(rt0.c1, rt0.c0))) FROM rt0, t1, t0 WHERE (CAST((~ (NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (((LAST_INSERT_ROWID()))<((NULL))) FROM rt0, t1, t0 WHERE ((((2074327127, x'', '\rJT쒿?G~')) BETWEEN ((CAST('-1333300702' AS TEXT), (('1864740310')>>(x'')), CASE 0xffffffff88b90bc8  WHEN NULL THEN x'' ELSE '0.15802893420488995' END)) AND ((((((((((515323598)AND(-142689969)))OR('IN')))OR(NULL)))OR('-1503349133')), (~ (NULL)), (((NULL, -2120659802, '0(*) '))>=(('PcmqUi*', '', NULL))))))); -- 0ms;
SELECT DISTINCT '' FROM rt0, t1, t0; -- 0ms;
SELECT DISTINCT ((t1.c0) NOT NULL) FROM t1, t0 WHERE ((('')AND(x'' COLLATE NOCASE))); -- 0ms;
SELECT (('-126654656')>=(t1.c0 COLLATE NOCASE)) FROM t0, rt0, t1 WHERE (((TRIM('^X', x''))+((x'' IN ('283732750'))))); -- 0ms;
SELECT '', t1.c0, CAST((((2083707877, '826907044', rt0.c1)) BETWEEN ((t1.c0, rt0.c1, t1.c0)) AND ((t1.c0, t0.c0, t1.c0))) AS TEXT) FROM t1 WHERE (((((1210635317)LIKE('-1213468162'))) BETWEEN (CAST('>+' AS BLOB)) AND ((((0.3986932892275491)) NOT BETWEEN ((NULL)) AND ((x''))))));SELECT ((CAST(0.9198717177784734 AS BLOB))-(((rt0.c0)!=(t1.c0)))) FROM t0 WHERE ((+ (NULL)) COLLATE BINARY);SELECT rt0.c0 FROM t0, rt0, t1; -- 0ms;
SELECT (((- (rt0.c2))) NOT NULL), (((((rt0.c0))<((t0.c0))))<>(((t0.c0)=(rt0.c1)))), ((((t1.c0)-(rt0.c1)))>>('2000539932')) FROM t1, t0 GROUP BY t0.c0;SELECT DISTINCT CAST(((rt0.c1) IS TRUE) AS INTEGER), ((COUNT(rt0.c0))IS NOT(CASE WHEN NULL THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN t1.c0 END)), (+ (rt0.c2)), (+ (((t0.c0)GLOB(rt0.c2)))), COUNT(*) FROM t0;SELECT DISTINCT '-B', COUNT((rt0.c0 IN ())) OVER (), ((t1.c0)+(t1.c0)) COLLATE BINARY FROM t0, rt0, t1 WHERE ((((((((NULL))<(('g'))))OR('0.5424083109196656' COLLATE BINARY)))AND(('z' IN ())))); -- 0ms;
SELECT AVG(((rt0.c2)!=(rt0.c0))), (((CASE WHEN NULL THEN t0.c0 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN rt0.c1 ELSE t1.c0 END))<((t1.c0 COLLATE RTRIM))), MIN(((x'')|(rt0.c2))) FROM rt0, t1 WHERE (((CAST(x'' AS NUMERIC)) IS TRUE));SELECT DISTINCT ((rt0.c1)IS(rt0.c2)) COLLATE BINARY FROM t0, t1, rt0; -- 0ms;
SELECT DISTINCT (((x'789f')) BETWEEN ((rt0.c0)) AND ((((t1.c0)AND(t0.c0))))), (('1849828114') BETWEEN (CAST(rt0.c0 AS REAL)) AND (x'')), ((t1.c0 COLLATE RTRIM) NOTNULL) FROM rt0, t0, t1; -- 0ms;
SELECT ((rt0.c2) IS TRUE) FROM t1, t0 WHERE (((((x'')<(NULL))) BETWEEN ((('V_Eڡ')>>(0.11949294028922286))) AND ((((0.5644507511194135))=((0.5639062117663388))))));SELECT DISTINCT ABS(CAST(rt0.c1 AS INTEGER)) FROM rt0, t0; -- 0ms;
SELECT ALL AVG((t0.c0 IN ())) OVER () FROM rt0 WHERE ((NOT (((0.26414834463913317) NOT BETWEEN ('1394070743') AND (x''))))); -- 0ms;
SELECT (NOT (((-1246677762)IS(rt0.c1)))), RANK() OVER (), (((rt0.c2 IN ())) NOT NULL) FROM rt0, t1 WHERE ((((0.18955925936213092, x'', NULL)) BETWEEN ((0x48641059, (('2121559595')%(NULL)), -162193417)) AND ((CASE '*|e_'  WHEN 0.6326558616722449 THEN x'be96' WHEN 'pQ' THEN '-361641963' WHEN x'' THEN '_P|D+1<' ELSE x'5933116a' END, '759219031' COLLATE NOCASE, SQLITE_SOURCE_ID())))) GROUP BY CASE t1.c0  WHEN CAST(rt0.c0 AS INTEGER) THEN '0.4594701314746271' END, (((((t0.c0, rt0.c1, t0.c0))>((t0.c0, t0.c0, t0.c0))))>>(((t0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c0)))), ((((((t0.c0)OR(0x3f4c2716)))AND(rt0.c2))) BETWEEN (CASE WHEN rt0.c1 THEN rt0.c0 END) AND (-185579717)) HAVING 'bᔓ0^';SELECT DISTINCT COUNT((((rt0.c2))>=((rt0.c2)))) OVER () FROM t1;SELECT ALL CAST(CASE t0.c0  WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c2 THEN t1.c0 END AS NUMERIC) FROM t0;SELECT DISTINCT MAX(0X3fc8a7a0, rt0.c0, TOTAL(rt0.c2), CASE rt0.c2  WHEN rt0.c1 THEN x'' END) FROM t1;SELECT DISTINCT ((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c0)))IS NOT(((t0.c0) NOT NULL))) FROM t0, t1, rt0; -- 0ms;
SELECT json_patch(((((((((rt0.c2)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(rt0.c2)), json_extract(t1.c0, rt0.c1)) FROM rt0, t1, t0 LIMIT -1333300702;SELECT ALL (((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c0)))) IS FALSE) FROM t1 GROUP BY (((t1.c0) BETWEEN (rt0.c0) AND (t0.c0)) IN (t1.c0)), ((CAST(rt0.c1 AS TEXT))<<(((((rt0.c2)AND(t1.c0)))AND(rt0.c1)))), (((t0.c0, rt0.c0, rt0.c2))<=((x'', t0.c0, t1.c0))) COLLATE RTRIM;SELECT DISTINCT COUNT(t0.c0) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE CURRENT ROW) FROM rt0, t0 LIMIT -560046928; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM t0, rt0 LIMIT -424240412 OFFSET -9223372036854775808; -- 0ms;
SELECT DISTINCT CAST((rt0.c1 IN (0.18924392368763077)) AS TEXT) FROM rt0 WHERE ((((((0.8990490529683522) BETWEEN ('-2116233472') AND ('G,v0x*▭'))))>=(((+ ('')))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(LIKELY(((((t0.c0)OR(t0.c0)))AND(t1.c0)))) OVER () FROM t0, t1 WHERE (((((CASE WHEN NULL THEN 'n''<l~DW.b' END)OR('58552247')))OR((('33467838')!=('䫔nxf	e?7l'))))); -- 0ms;
SELECT t1.c0 FROM rt0, t1, t0; -- 0ms;
SELECT ((((t1.c0)/(t1.c0))) IS TRUE), ((COUNT(0.8650215914650032))<=(0.17814931661600075)), ((rt0.c0)>>(((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2)))) FROM rt0, t1, t0; -- 0ms;
SELECT 1.60385821E9 FROM rt0, t0, t1 WHERE (((((NULL) IS FALSE)) NOTNULL)) ORDER BY CAST(((rt0.c2)*(rt0.c1)) AS INTEGER) ASC; -- 0ms;
SELECT DISTINCT COUNT((~ (rt0.c2))) OVER () FROM t1 WHERE ('n6*i辺') GROUP BY (((rt0.c1)) NOT BETWEEN (('973438076')) AND ((((t1.c0) IS FALSE)))) HAVING ((((((t0.c0)AND(0.7571254908390637)))AND(rt0.c0))) NOT BETWEEN (((rt0.c0)||(rt0.c2))) AND (t0.c0)) LIMIT 895351300 OFFSET 2025192552;SELECT ALL CAST(rt0.c2 AS NUMERIC) COLLATE NOCASE FROM t0, t1 WHERE (SQLITE_COMPILEOPTION_GET((('-1744514530') IS TRUE)));SELECT DISTINCT (((t0.c0 COLLATE RTRIM, ((rt0.c1) NOT NULL), ((rt0.c1)*(rt0.c2))))>=((CAST(rt0.c2 AS INTEGER), ((t0.c0)|(t0.c0)), ((rt0.c1)+(rt0.c1))))) FROM t1, rt0;SELECT DISTINCT LAG((((((rt0.c1) ISNULL)))>=((CAST(rt0.c0 AS NUMERIC)))), (((((rt0.c0)) BETWEEN ((t1.c0)) AND ((rt0.c2)))) ISNULL), ((0.3760542384386957)GLOB(((0.49125168015588994)AND(rt0.c2))))) OVER ( ROWS ((UPPER(DISTINCT t0.c0)) NOT NULL) PRECEDING), RTRIM(((x'')IS(NULL))), CASE WHEN rt0.c1 COLLATE NOCASE THEN (((rt0.c0))>=((t1.c0))) END FROM t1, rt0 WHERE ('1733433208') ORDER BY (('-159164249' COLLATE BINARY)IS NOT(NULL)) ASC, ((0.8098374392191326 COLLATE RTRIM)GLOB(CASE t1.c0  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN t1.c0 WHEN rt0.c0 THEN rt0.c0 END))  NULLS LAST LIMIT 790854762; -- 0ms;
SELECT DISTINCT (((rt0.c0, rt0.c2, rt0.c2)) BETWEEN ((LOWER(t0.c0), ((t1.c0) BETWEEN (t1.c0) AND (rt0.c2)), CASE rt0.c1  WHEN t0.c0 THEN t0.c0 END)) AND ((t0.c0, ((rt0.c0) IS FALSE), t0.c0))) FROM t1, rt0, t0 WHERE ((((CAST(0.05608851000643933 AS INTEGER)))>=((LOWER(DISTINCT x'04abfa2f'))))) GROUP BY ((((((((((((CAST(rt0.c2 AS INTEGER))OR((- (rt0.c1)))))OR(t1.c0)))OR(NULLIF(rt0.c0, t0.c0))))AND(TYPEOF(DISTINCT t0.c0))))OR((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))))AND((rt0.c1 IN ()))) ORDER BY t1.c0  NULLS FIRST;SELECT DISTINCT 'R\撫B혯	Ix' FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0, t0.c0, rt0.c1))>((rt0.c2, t0.c0, rt0.c2))) COLLATE NOCASE, 0.8752436521985245, UPPER(CASE NULL  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END) FROM rt0, t0, t1; -- 0ms;
SELECT ALL t1.c0 FROM t0 WHERE (((LIKELIHOOD(-1655671836, 0.8256799619235291)) ISNULL));SELECT (~ ((~ (t1.c0)))) FROM t0, rt0, t1; -- 0ms;
SELECT DISTINCT CASE t0.c0  WHEN CASE rt0.c1  WHEN rt0.c2 THEN t1.c0 WHEN rt0.c0 THEN t1.c0 WHEN rt0.c0 THEN rt0.c1 ELSE t0.c0 END THEN CAST(rt0.c2 AS NUMERIC) ELSE json_object(rt0.c0, rt0.c2) END FROM t0, rt0 WHERE (((((((((((((x'8c14')AND('0.47830085296661584')))AND(x'')))OR(((0.4258613914014002)<<(-1.32747997E9)))))AND(CAST(0.5056439198821967 AS BLOB))))OR((((NULL)) BETWEEN (('vk')) AND ((x'323dbbd7'))))))AND(highlight(0.379783846306876, -1694070133, '^', x''))));SELECT DISTINCT CAST(rt0.c1 AS BLOB) COLLATE BINARY FROM t0 WHERE (LIKELIHOOD(DISTINCT x'', 0.5638477511845312));SELECT (- (rt0.c2)) FROM t0;SELECT CAST(((t0.c0) ISNULL) AS NUMERIC) FROM t1, t0, rt0 WHERE (((x'8921') NOT NULL) COLLATE BINARY); -- 1ms;
SELECT DISTINCT rt0.c2 FROM t0 WHERE ((('1832543403')AND(INSTR(NULL, x'dad2'))));SELECT ALL ((t1.c0 COLLATE NOCASE)>=(((t0.c0)OR(t1.c0)))) FROM rt0, t1 WHERE (CASE CAST(0xe3ac514 AS BLOB)  WHEN (('-1256985576') ISNULL) THEN 1193530650 COLLATE NOCASE END) GROUP BY ((((rt0.c1) BETWEEN (rt0.c1) AND (t1.c0))) NOT NULL) LIMIT -1685462732;SELECT DISTINCT ((((((0.48852152680699756)AND(t1.c0)))AND(rt0.c2)))<(((rt0.c1)LIKE(x'c13a')))) FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c1) IS TRUE)), (((- (1911532674))) IS TRUE), MAX((((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((t1.c0)))) FROM t0, t1, rt0 WHERE ((((('')LIKE(0X71d49299))) BETWEEN (('RQ#EmM! c' IN ())) AND ((('1023214574')=('0.1210990829902947'))))); -- 0ms;
SELECT DISTINCT (((((rt0.c1)-('-660503556'))))>=((((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1))))) FROM rt0, t1 NOT INDEXED WHERE (CHANGES());SELECT ALL ((((((((rt0.c2)AND(t0.c0)))OR(t0.c0)))OR((((NULL)) NOT BETWEEN ((rt0.c1)) AND ((t0.c0))))))OR(COUNT(rt0.c2))) FROM t1, rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c0)) BETWEEN ((rt0.c1)) AND ((((t1.c0)>(t1.c0))))) FROM rt0 CROSS JOIN t1 ON ((LOWER(rt0.c1)) ISNULL);SELECT DISTINCT rt0.c1 FROM t1, t0 WHERE (((x'' COLLATE RTRIM)<>(CASE WHEN 'KU' THEN '-1345804918' ELSE 'kS' END))) ORDER BY (('0.715726262690673')+(((rt0.c1) NOT BETWEEN (x'') AND ('1210825944')))), ((((((t0.c0) IS TRUE))OR(((1315268723)|(rt0.c0)))))AND('#ഉ')) DESC;SELECT DISTINCT ((((rt0.c0)GLOB('1891927597')))+(t0.c0 COLLATE NOCASE)) FROM t1, rt0, t0 WHERE (CAST(((('<')) NOT BETWEEN ((0Xffffffffa72ccdbe)) AND ((NULL))) AS REAL)) GROUP BY (((x'')) NOT BETWEEN ((((t1.c0)*(rt0.c0)))) AND ((((rt0.c0) BETWEEN (rt0.c2) AND ('1470226793'))))) HAVING (+ (rt0.c2)); -- 0ms;
SELECT ALL COUNT(0.004224365060215396) OVER () FROM rt0, t1, t0 WHERE (CAST(CASE WHEN NULL THEN '' END AS TEXT)); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, t0 WHERE ('2126699873') ORDER BY (~ (t1.c0 COLLATE NOCASE)) ASC  NULLS LAST;SELECT AVG((('-70634946') BETWEEN (rt0.c2) AND (rt0.c1))) OVER ( GROUPS BETWEEN t1.c0 PRECEDING AND  CURRENT ROW EXCLUDE GROUP), GLOB((((0Xffffffff8b346ecf)) BETWEEN ((rt0.c1)) AND ((t1.c0))), ((rt0.c1)>=(rt0.c2))), COUNT(((t0.c0) NOT NULL)) FROM t0, rt0 WHERE (-2.039063566E9);SELECT DISTINCT CASE rt0.c0  WHEN t1.c0 THEN t0.c0 WHEN t1.c0 THEN t1.c0 WHEN rt0.c2 THEN -173846734 ELSE t0.c0 END COLLATE RTRIM FROM t0 WHERE ((((((((('0.7659329254418136')OR(0.12902737138188147)))OR(x'77ec')))AND(CASE WHEN '-0.0' THEN '*%Q6Ue' END)))OR(CASE ''  WHEN x'' THEN '0.4594701314746271' WHEN x'' THEN 1177560936 WHEN '-62460196' THEN ' /䭇4뫎' END)));SELECT DISTINCT (((t0.c0))<=((rt0.c0))) COLLATE NOCASE FROM rt0, t1;SELECT DISTINCT (((((rt0.c0 IN ()))OR((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))))OR(((NULL) NOTNULL))) FROM rt0, t0 RIGHT OUTER JOIN t1 ON CAST(((0.4086219361954727) IS TRUE) AS REAL); -- 0ms;
SELECT DISTINCT rt0.c1 FROM t0, rt0 WHERE (((((((((x'81a5')AND(x'')))AND(x'')))AND('堀')))AND(0.5745883341429119)) COLLATE RTRIM) GROUP BY (('o6-M7#&')+(t1.c0 COLLATE RTRIM));