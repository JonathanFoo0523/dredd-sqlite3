-- Time: 2024/06/06 01:07:24
-- Database: database13
-- Database version: 3.40.0
-- seed value: 2878653813
PRAGMA cache_size = 50000; -- 8ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE t0 (c0 REAL ); -- 0ms;
ROLLBACK TRANSACTION; -- 3ms;
INSERT OR FAIL INTO t0(c0) VALUES ('b''V-VpYn'); -- 0ms;
REINDEX RTRIM; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT (((t0.c0 IN ())) IS TRUE) FROM t0; -- 0ms;
ANALYZE v0; -- 0ms;
DELETE FROM t0 WHERE ((((((((((t0.c0)AND(t0.c0)))AND(t0.c0)))OR(t0.c0)))OR(t0.c0)))==(CASE t0.c0  WHEN t0.c0 THEN t0.c0 END)); -- 0ms;
ALTER TABLE t0 ADD COLUMN c60 INT CHECK ( (((~ (t0.c0))) BETWEEN (((((((((t0.c0)AND(t0.c0)))OR(t0.c0)))OR('1405917889')))OR(t0.c0))) AND (CASE WHEN t0.c0 THEN t0.c0 END))); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
ALTER TABLE t1 ADD COLUMN c64 BLOB; -- 0ms;
INSERT OR REPLACE INTO t1 VALUES (1405917889, 0.39792820950889674), (NULL, NULL), (-1547061490, NULL); -- 0ms;
UPDATE OR IGNORE t1 SET (c0)=(NULL) WHERE '1405917889'; -- 0ms;
REINDEX; -- 1ms;
INSERT OR REPLACE INTO t1 VALUES (x'', NULL), (NULL, '0.39792820950889674'), (x'', -1.54706149E9); -- 1ms;
PRAGMA automatic_index = true; -- 0ms;
PRAGMA main.reverse_unordered_selects; -- 0ms;
REINDEX; -- 0ms;
UPDATE OR IGNORE t1 SET c64=0.2570778450335368; -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
INSERT OR IGNORE INTO t1(c64) VALUES (x'4c21'), (x''), (1405917889); -- 0ms;
UPDATE OR IGNORE t1 SET c0=x'6bb9' WHERE ((((t1.c0)>=(t1.c64)))==(LIKE(t1.c64, t1.c0))); -- 0ms;
ANALYZE; -- 1ms;
REINDEX; -- 0ms;
ANALYZE main; -- 0ms;
INSERT OR IGNORE INTO t1(c0) VALUES (('-1547061490' IN ()) COLLATE NOCASE); -- 0ms;
UPDATE t1 SET c0='', c64=NULL WHERE ((((highlight(t1.c64, t1.c0, 0.39792820950889674, t1.c64))OR(json_valid(0.17584554619111104))))OR(((t1.c0) ISNULL))); -- 0ms;
UPDATE OR IGNORE t1 SET c0=0X53cc9ac1, c64=0.6101315620595978, c0='-1547061490'; -- 0ms;
CREATE INDEX IF NOT EXISTS i68 ON t1(((c0) BETWEEN (c0) AND (c64)) COLLATE BINARY,((((((c0)AND(c0)))AND(c64)))OR((((c0, x'', c0)) NOT BETWEEN ((c0, '-1869443327', c64)) AND ((c64, c0, c0))))) DESC) WHERE ((((((((((((((((c0)OR(c0)))AND(c64)))OR(c64 COLLATE BINARY)))OR(ABS(c0))))OR(json_extract(c64, c64, c0, c0))))OR(CASE c64  WHEN c64 THEN c64 ELSE c64 END)))OR(c0)))AND(c64)); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
PRAGMA main.threads = 1997327087582815543; -- 0ms;
ALTER TABLE t1 ADD COLUMN c91 TEXT; -- 0ms;
PRAGMA busy_timeout; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
CREATE INDEX IF NOT EXISTS i15 ON t1(((c0 COLLATE BINARY)==((((c0))>=((c91))))),c64,(NULL IN (((c64) BETWEEN (c64) AND (c0)), (((c0))<>((c0)))))); -- 1ms;
UPDATE t1 SET (c91)=(0Xffffffff91b9c33f); -- 0ms;
DROP VIEW v0; -- 0ms;
END TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
COMMIT; -- 0ms;
ALTER TABLE t1 RENAME COLUMN c64 TO c48; -- 1ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
COMMIT; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE t0 SET c91=x''; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES (0.0); -- 1ms;
ROLLBACK TRANSACTION; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.recursive_triggers; -- 0ms;
ANALYZE; -- 1ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA auto_vacuum; -- 0ms;
ANALYZE i68; -- 0ms;
COMMIT; -- 0ms;
INSERT OR FAIL INTO t0(c0, c48, c91) VALUES (')X', 0.6388008018954286, NULL); -- 1ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
REINDEX i15; -- 0ms;
ANALYZE i15; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
UPDATE t1 SET (c91, c48)=(0.6241356900615472, ''); -- 1ms;
UPDATE OR REPLACE t1 SET (c91)=(NULL); -- 0ms;
INSERT OR IGNORE INTO t1 VALUES ('-1214950374', 0X53cc9ac1, 1.405917889E9), ('', ((((x'')) NOT BETWEEN ((-1547061490)) AND ((x'4971'))) IN ()), '409806282'), (0.8605953781793757, NULL, -113268936); -- 0ms;
INSERT OR ABORT INTO t1(c91) VALUES ('9zEDL{oEE'), ('^6'), (x'49b9'); -- 0ms;
END; -- 0ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE INDEX i54 ON t1(((CAST(c48 AS NUMERIC)) NOT BETWEEN (((c0) NOT BETWEEN (c0) AND (c91))) AND (c48 COLLATE RTRIM)) COLLATE BINARY ASC,CASE WHEN ((c91)*(c0)) THEN ((c0)<(c48)) END DESC,((((c0) BETWEEN (c0) AND (c91)))||(c91 COLLATE BINARY)) COLLATE RTRIM ASC) WHERE ((((c91) NOT NULL)) IS FALSE); -- 0ms;
REINDEX; -- 0ms;
INSERT OR REPLACE INTO t1(c0, c91, c48) VALUES ('X', '', NULL); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR ABORT INTO t1(c91) VALUES ('w49'), (''), (0xffffffff90928f01), ('-1850096833'), ('1405917889'); -- 0ms;
INSERT OR IGNORE INTO t1(c91) VALUES ('-113268936'); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR IGNORE t1 SET c91=NULL, c48=0.39792820950889674, c0=x'' WHERE (((((t1.c0) ISNULL), ((t1.c48) ISNULL), ((t1.c91)<>(x''))))>((t1.c48, (- (t1.c0)), LIKELY(DISTINCT t1.c91)))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE t1 SET c0=0.1274987104247174; -- 1ms;
ALTER TABLE t1 RENAME COLUMN c0 TO c11; -- 1ms;
END TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT LIKELY(TRIM(t1.c11)), '0.6101315620595978', (((t1.c11, t1.c11, t1.c91)) BETWEEN ((CASE t1.c48  WHEN t1.c11 THEN t1.c11 ELSE t1.c48 END, UNLIKELY(t1.c48), (- (t1.c11)))) AND ((CAST(t1.c48 AS INTEGER), MIN(''), ((t1.c91)=(t1.c11))))) FROM t1 WHERE (CAST((((('*6(t')AND(NULL)))OR(511681872)) AS BLOB)); -- 0ms;
SELECT DISTINCT (((NOT (t1.c91)))-(t1.c91)) FROM t1 WHERE ('') ORDER BY (t1.c91 IN (t1.c11)) COLLATE BINARY, ((CASE WHEN t1.c11 THEN t1.c91 END) IS TRUE) DESC LIMIT -1869443327 OFFSET 409806282; -- 0ms;
SELECT (+ (CASE WHEN t1.c91 THEN t1.c48 ELSE t1.c11 END)) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c48)<=(t1.c11))) NOT BETWEEN (AVG(t1.c48)) AND ((- (t1.c48)))), TYPEOF(DISTINCT 'n'), (~ ('CLT}HU\rg[^]')) FROM t1; -- 0ms;
SELECT ALL CAST(CASE t1.c11  WHEN t1.c91 THEN t1.c11 END AS TEXT), (((t1.c91 IN (t1.c48)))IS NOT(((((((((((((t1.c11)OR(x'9f0a')))AND(t1.c11)))OR(NULL)))OR(t1.c48)))AND(t1.c48)))OR(t1.c11)))), ((((((t1.c91)AND(NULL)))AND(t1.c48))) BETWEEN (0.01352980568958484) AND (SUM(t1.c91))), NULL, SUM((((t1.c91, t1.c48, t1.c91, t1.c11, t1.c91))!=((t1.c48, t1.c48, t1.c48, t1.c11, t1.c11)))) OVER ( ORDER BY (t1.c48 IN ())  NULLS LAST, (('') NOT BETWEEN (((((((((t1.c11)AND(t1.c48)))OR(t1.c48)))AND(t1.c11)))AND(t1.c48))) AND ((((t1.c91))<=((t1.c91)))))  NULLS FIRST, ((((('', t1.c11, t1.c48)) BETWEEN ((t1.c11, t1.c11, t1.c48)) AND ((t1.c11, t1.c48, t1.c11)))) NOTNULL)  NULLS LAST) FROM t1 WHERE ((((CASE NULL  WHEN 1764474791 THEN '1495803082' END))>=(((((-602745638, '1449813885', NULL)) BETWEEN (('-1214950374', NULL, 0.6101315620595978)) AND ((0.8488200286531871, 0X39dd6f3d, -1.214950374E9))))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((((t1.c48)OR(t1.c11)))AND(t1.c48)) THEN (~ (t1.c91)) END, TYPEOF(((t1.c48) BETWEEN (t1.c48) AND (t1.c11))), (((t1.c91)) BETWEEN ((x'')) AND ((((t1.c91) IS FALSE)))) FROM t1 WHERE (CASE WHEN (0X59f0c410 IN (-1.214950374E9)) THEN ((0xffffffff8950bd37) IS TRUE) END); -- 0ms;
SELECT COUNT(0.9347812675531589), (((0.4652538314257846))<>((((t1.c48)&(t1.c48))))), 0Xffffffff8c128770 FROM t1 WHERE ((('-1850096833') NOTNULL) COLLATE BINARY) GROUP BY (((t1.c48)>(t1.c11)) IN ()) HAVING (((((NOT (t1.c48)))AND(LIKELY(t1.c11))))OR(((((((((t1.c91)OR(t1.c11)))AND(t1.c11)))OR(t1.c48)))OR(t1.c91)))); -- 0ms;
SELECT DISTINCT ((((t1.c91)OR(t1.c11)))OR(t1.c91)) COLLATE NOCASE FROM t1 WHERE (LIKELY(DISTINCT COALESCE(0.6344041871067407, x'38b2', 0.6344041871067407, '-2091451144'))); -- 0ms;
SELECT ((-1944942736)IS(((((t1.c11)AND(t1.c91)))OR('695240061')))), (((t1.c11)) BETWEEN (((+ (t1.c48)))) AND (((((t1.c11)) NOT BETWEEN ((t1.c11)) AND ((t1.c48)))))), (SQLITE_COMPILEOPTION_USED(t1.c48) IN (((x'') NOT NULL), CASE t1.c91  WHEN t1.c11 THEN t1.c11 ELSE t1.c11 END)) FROM t1 LIMIT -699481481 OFFSET -1869443327; -- 0ms;
SELECT DISTINCT MIN(((t1.c48) BETWEEN (t1.c48) AND (x''))) FROM t1 GROUP BY CAST((NOT (t1.c91)) AS INTEGER), ((((((x'')*(t1.c48)))AND(0.42331172624294167)))OR(NULL COLLATE NOCASE)), '0.42331172624294167'; -- 1ms;
SELECT DISTINCT CASE WHEN (t1.c91 IN (t1.c11)) THEN '' WHEN (t1.c11 IN ()) THEN UNLIKELY(t1.c48) WHEN (((t1.c91))<((t1.c48))) THEN t1.c91 COLLATE RTRIM WHEN CASE t1.c48  WHEN t1.c48 THEN t1.c11 WHEN t1.c48 THEN 'CLT}HU\rg[^]' WHEN t1.c11 THEN t1.c11 END THEN ((t1.c48)IS(x'')) WHEN ((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c91)) THEN ((t1.c11) BETWEEN (t1.c48) AND (t1.c91)) END FROM t1 WHERE (((((('1658327065')) NOT BETWEEN ((366694073)) AND ((0xffffffffebdf7595))))=((+ (x''))))); -- 0ms;
SELECT DISTINCT (((t1.c11 COLLATE NOCASE, MIN(t1.c91), ((x'') IS FALSE)))<=((((((((((((((t1.c48)AND(t1.c91)))OR(t1.c11)))OR(t1.c11)))AND(t1.c11)))AND(t1.c48)))AND(t1.c91)), 0.8605953781793757, ((((t1.c91)OR(t1.c48)))AND(t1.c91))))) FROM t1 WHERE ((((0.349437634463289) BETWEEN (0.7859082655376733) AND (NULL)) IN (INSTR('', '695240061')))); -- 0ms;
SELECT DISTINCT ((((t1.c91)%(t1.c91)))<=(CAST(t1.c11 AS INTEGER))), (((t1.c91)IS NOT(t1.c91)) IN ()), CAST(t1.c11 AS INTEGER) COLLATE BINARY, FIRST_VALUE(CAST(((((((((t1.c48)AND(t1.c48)))AND(t1.c91)))OR(t1.c91)))AND(0.8488200286531871)) AS BLOB)) OVER (), (x'' IN ()) FROM t1 WHERE ((((+ (-1791233357))) NOT NULL)); -- 0ms;
SELECT (+ (((t1.c48)<(t1.c11)))), '', (((x'9c32730d'))>=((t1.c91))) COLLATE BINARY, (t1.c91 IN ()) COLLATE RTRIM, COUNT(((t1.c91) BETWEEN (t1.c11) AND (t1.c48))) FROM t1 WHERE (((((NULL) NOT BETWEEN ('0.17584554619111104') AND ('1e500'))) BETWEEN (CAST(0Xffffffff953bf2b3 AS REAL)) AND (CAST(0.22999152667092926 AS INTEGER)))) LIMIT -337676907; -- 0ms;
SELECT DISTINCT (- (t1.c11 COLLATE RTRIM)), ((((((t1.c91)OR(t1.c11)))OR(t1.c48))) NOT NULL), ((((((t1.c91)AND(t1.c48)))AND(t1.c48))) BETWEEN (CASE t1.c48  WHEN t1.c91 THEN t1.c91 ELSE t1.c91 END) AND (((t1.c91) NOTNULL))) FROM t1 INDEXED BY i68 WHERE ((6.95240061E8 COLLATE NOCASE IN ())) GROUP BY x'';SELECT DISTINCT x'' FROM t1 WHERE (((('251102363', 0.1921182285752674, x'')) BETWEEN ((x'ef59', '-1797666670', '-2372033')) AND ((0.13179278668193906, NULL, x''))) COLLATE NOCASE) LIMIT -1491680560; -- 1ms;
SELECT DISTINCT ((((t1.c91) BETWEEN (t1.c91) AND (t1.c48)))LIKE(((t1.c11)AND(t1.c11)))) FROM t1 WHERE (((('-1869443327')) NOT BETWEEN ((((NULL) NOT BETWEEN (NULL) AND (0Xfffffffff81388db)))) AND ((((('clt}hu\rg[^]'))==((0.11307698046045389))))))); -- 0ms;
SELECT DISTINCT ((NULL)AND(AVG(x''))) FROM t1 WHERE (TYPEOF(((((((((((((0xffffffffffdbce3f)OR('*noW')))OR('0.8488200286531871')))AND('-1797666670')))OR('{}')))OR(0x44f37405)))OR(0xffffffff8356fcf8)))); -- 0ms;
SELECT DISTINCT t1.c48 FROM t1 WHERE (((('\r-uEH]u'))=((LIKELIHOOD(DISTINCT '\r-uEH]u', 0.7025329683814031))))) GROUP BY (((t1.c48, t1.c48, t1.c48)) NOT BETWEEN (((((t1.c91)) BETWEEN ((0.42331172624294167)) AND ((t1.c11))), ((t1.c11) NOT NULL), ((t1.c11)LIKE(NULL)))) AND ((json_quote(t1.c91), (((t1.c91)) NOT BETWEEN ((t1.c48)) AND ((NULL))), CASE t1.c91  WHEN NULL THEN t1.c91 END))) HAVING COUNT(*);SELECT DISTINCT (~ ((t1.c11 IN ()))), ((MIN(t1.c11)) IS FALSE), ((t1.c11)OR((~ (t1.c48)))) FROM t1 WHERE (-6.02745638E8); -- 0ms;
SELECT DISTINCT 0.8260954104874602, (((((t1.c11)AND(t1.c11)))AND(t1.c91)) IN ()), CAST(((t1.c11) NOTNULL) AS TEXT) FROM t1 ORDER BY ((((t1.c91) ISNULL))>(((((t1.c48)AND(0x32899f9c)))OR(t1.c11)))) DESC; -- 0ms;
SELECT DISTINCT (- (t1.c91)) COLLATE BINARY, CAST(SUM(t1.c11) AS INTEGER), CASE WHEN '4M' THEN CAST(t1.c11 AS REAL) WHEN t1.c11 COLLATE NOCASE THEN ((((((((t1.c48)OR(t1.c11)))OR(t1.c48)))AND(NULL)))AND(0.1274987104247174)) WHEN COUNT(t1.c11) THEN t1.c48 ELSE ((t1.c48) NOTNULL) END FROM t1 WHERE (((CASE WHEN 0.09043639605123044 THEN 0.6101315620595978 END) BETWEEN ((NOT (NULL))) AND (1833938027 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT CASE CASE WHEN t1.c11 THEN t1.c48 WHEN t1.c91 THEN t1.c11 WHEN t1.c48 THEN 0.8488200286531871 ELSE t1.c48 END  WHEN CASE WHEN t1.c48 THEN t1.c11 ELSE t1.c11 END THEN ((((((((t1.c48)AND(t1.c48)))AND(t1.c91)))AND(t1.c48)))AND(t1.c48)) END FROM t1 EXCEPT SELECT DISTINCT LAG(CASE WHEN t1.c48 THEN t1.c11 END COLLATE NOCASE, (NOT (((t1.c11) ISNULL))), CAST(0.7765916565931217 AS TEXT) COLLATE BINARY) OVER ( RANGE BETWEEN  UNBOUNDED PRECEDING AND (((((t1.c91)>=(t1.c91))))=((t1.c91))) FOLLOWING) FROM t1 WHERE ((((x'')) BETWEEN ((CAST(x'' AS REAL))) AND (((x'' IN (NULL))))));SELECT ALL CASE WHEN (- (t1.c91)) THEN t1.c91 ELSE ((NULL)GLOB(t1.c48)) END FROM t1; -- 0ms;
SELECT ((t1.c11)GLOB(((t1.c48) NOT BETWEEN (t1.c11) AND (t1.c11)))) FROM t1 INDEXED BY i15; -- 0ms;
SELECT DISTINCT (- (t1.c11 COLLATE RTRIM)) FROM t1 WHERE (CAST('Cs-0/ZtMd' AS REAL)); -- 0ms;
SELECT AVG(SUM(((t1.c48)OR(t1.c48)))) FROM t1;SELECT DISTINCT GROUP_CONCAT(((((0.5533740051132441)AND(t1.c48)))AND(t1.c48))), CAST(CHAR(t1.c48) AS NUMERIC), ((CAST(t1.c11 AS NUMERIC))-(((t1.c91) ISNULL))) FROM t1 WHERE (((((('쉷[j&jT')>>(x'918b46d9'))))<=((LIKELIHOOD(DISTINCT 1.449813885E9, 0.4168709008844761))))) LIMIT -1797666670 OFFSET 589469886; -- 0ms;
SELECT t1.c11, (NULL IN (((t1.c48)OR(t1.c91)))), (((t1.c48 IN ())) ISNULL), (((t1.c91 IN ()))*((((t1.c48, t1.c48, t1.c91)) BETWEEN ((t1.c11, t1.c91, t1.c91)) AND ((t1.c91, -736471663, t1.c48))))), (((t1.c91, t1.c91, t1.c91)) BETWEEN (((NOT (t1.c91)), ((((t1.c48)AND(t1.c48)))AND(t1.c91)), ((t1.c48)||('')))) AND ((((((t1.c48)AND(t1.c48)))AND(t1.c48)), t1.c48 COLLATE RTRIM, (t1.c11 IN ())))) FROM t1 WHERE ((((NULL IN ())) NOT NULL)); -- 1ms;
SELECT t1.c91 FROM t1 WHERE ((0X1f904d56 IN ())); -- 0ms;
SELECT DISTINCT ((json_array_length(t1.c48))<(CASE WHEN t1.c48 THEN t1.c48 END)), ((json_type(t1.c11))%(((((t1.c11)OR(t1.c11)))AND(t1.c11)))), (+ (((t1.c11)IS(t1.c91)))) FROM t1 WHERE (CASE WHEN ((((0Xffffffff991d6bc8)OR(-120551675)))AND('-1791233357')) THEN HEX('-1869443327') WHEN CAST(0.7765916565931217 AS INTEGER) THEN UPPER(-1491680560) WHEN ((x'7e5f') ISNULL) THEN ('-1851698515' IN (NULL, NULL)) WHEN ((NULL) NOT BETWEEN (NULL) AND (x'e600')) THEN CAST(0.8738057164918743 AS REAL) WHEN (('970813245')=(NULL)) THEN ((((((((((((0.44573626529069843)OR(0.22999152667092926)))AND(NULL)))OR('Gs')))AND(NULL)))AND('0.7859082655376733')))AND('-2372033')) ELSE (((x''))<((NULL))) END); -- 0ms;
SELECT DISTINCT ((NULL COLLATE RTRIM) ISNULL), ((t1.c48)*(t1.c91)) COLLATE RTRIM, MAX(((t1.c11)<=(t1.c91))), t1.c91, ((0.6241356900615472) NOT BETWEEN (t1.c48) AND (t1.c11)) COLLATE BINARY FROM t1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 WHERE (UPPER(((x'50059a43') ISNULL))); -- 0ms;
SELECT DISTINCT ((t1.c91) BETWEEN (t1.c91) AND (t1.c11)) COLLATE NOCASE, (((((('&_')OR(t1.c11)))AND('')))LIKE(CASE t1.c91  WHEN t1.c91 THEN t1.c11 END)), (((t1.c91))>=((t1.c48))) COLLATE NOCASE FROM t1; -- 0ms;
SELECT DISTINCT t1.c91 FROM t1 WHERE (((((TYPEOF('[TJY'))AND((((NULL)) NOT BETWEEN (('-271245931')) AND ((x''))))))AND(0.349437634463289))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c11 THEN t1.c11 WHEN t1.c91 THEN t1.c91 WHEN t1.c91 THEN t1.c11 ELSE t1.c91 END) NOT NULL) FROM t1; -- 0ms;
SELECT ((NULL) NOT BETWEEN (NULLIF(DISTINCT '-120551675', t1.c11)) AND (0.922078345660914)) FROM t1 WHERE (((NULL) NOTNULL)); -- 0ms;
SELECT DISTINCT (((((t1.c48)) BETWEEN ((t1.c48)) AND ((t1.c48))))+(((t1.c11)-(t1.c48)))), (+ (COUNT(*))), 0.38192453670413873 FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c11)IS(t1.c11)))-(((t1.c91) BETWEEN (t1.c48) AND (t1.c48)))) FROM t1; -- 0ms;
SELECT (((t1.c48) NOT NULL) IN ()) FROM t1 WHERE ((('SF\')+(CAST(x'' AS INTEGER)))); -- 0ms;
SELECT DISTINCT (- (LIKELIHOOD(t1.c11, 0.1568655654619603))) FROM t1 WHERE ((((NULL, '', x'1075', 0x447eaae1, '592955110')) NOT BETWEEN ((((NULL) BETWEEN ('-337676907') AND (0.9582787990005092)), (('}F') BETWEEN (x'9e05') AND (NULL)), (('-1072807725') NOTNULL), (('970813245')*(x'')), ((NULL) NOT BETWEEN (0.42014722889198597) AND ('i6')))) AND (((('tCv7hhS*5')>=(NULL)), CASE '1641960331'  WHEN x'' THEN x'' END, NULL COLLATE BINARY, '*W' COLLATE NOCASE, ((NULL)>(NULL)))))) LIMIT 407401237 OFFSET 317415081; -- 1ms;
SELECT ALL ((NOT (t1.c48)) IN ()), (((((t1.c11)AND(t1.c91)))OR(t1.c91)) IN ()), (((((t1.c11, t1.c11, t1.c11))!=((t1.c11, t1.c91, t1.c48)))) BETWEEN (((((t1.c48)OR(t1.c48)))OR(t1.c48))) AND (((t1.c91)<(t1.c11)))) FROM t1; -- 0ms;
SELECT (((((((((~ (t1.c91)))AND(((((((((t1.c91)OR(0.04168475908627778)))OR('-170159429')))OR(t1.c11)))AND(t1.c91)))))AND(MIN(t1.c91))))OR((('')LIKE(t1.c48)))))AND(t1.c48)) FROM t1; -- 0ms;
SELECT '*yqm', (((NOT (t1.c11))) ISNULL), LAG(((((((NULL) NOT NULL))AND(t1.c91 COLLATE BINARY)))AND((((t1.c11)) NOT BETWEEN ((t1.c91)) AND ((t1.c48))))), ((((t1.c11)+(t1.c48)))%(((t1.c11)AND(t1.c91)))), ABS(((t1.c11)IS(t1.c11)))) OVER ( ORDER BY ((CAST(t1.c91 AS TEXT))>=(CASE t1.c11  WHEN 0X1d5d2c4f THEN t1.c48 WHEN t1.c11 THEN t1.c91 WHEN t1.c91 THEN t1.c48 END))) FROM t1; -- 0ms;
SELECT CASE (t1.c48 IN ())  WHEN (t1.c48 IN ()) THEN '9THmwqUh+' END FROM t1 WHERE ((- (-1716333340))) ORDER BY ((t1.c48)>>(t1.c48)) COLLATE RTRIM COLLATE NOCASE DESC  NULLS LAST; -- 1ms;
SELECT (- (t1.c11 COLLATE RTRIM)) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (('-337676907')||(t1.c91)) THEN (- (t1.c91)) ELSE (((t1.c91)) BETWEEN ((t1.c48)) AND ((t1.c91))) END FROM t1 WHERE (((((0.47962880539134645)>('1e500')))&((('1149151969') IS TRUE)))); -- 0ms;
SELECT DISTINCT (+ (((t1.c48)-(t1.c91)))) FROM t1 WHERE ((((x'18d8')=('WU|붦吳/')) IN ((0.3433586042704143 IN ())))); -- 0ms;
SELECT DISTINCT TRIM(((t1.c11)IS(t1.c91)), ((t1.c91)IS NOT(t1.c91))), LAST_VALUE(((((((t1.c48)+(t1.c11)))OR(CAST(t1.c91 AS BLOB))))OR((t1.c48 IN (t1.c11))))) OVER (), (TYPEOF(t1.c91) IN ()), t1.c11, (((t1.c48))<((t1.c91))) FROM t1 WHERE (CASE WHEN '\rG_[5펣擬' THEN NULL WHEN 0.10703087057134297 THEN 0.08993339037332548 WHEN '-1996868011' THEN NULL ELSE 0.6028809476017404 END COLLATE NOCASE); -- 1ms;
SELECT DISTINCT t1.c91 COLLATE BINARY FROM t1 WHERE (CAST((('Gs') NOT NULL) AS TEXT)); -- 0ms;
SELECT rtreenode(((t1.c91) NOTNULL), ((t1.c11) BETWEEN (t1.c48) AND (t1.c91))) FROM t1 WHERE (((((0.6617313331696172)OR('1321608153')))<=(((-1224114884) NOT BETWEEN (x'edd2') AND ('''n좒Wb형s'))))); -- 0ms;
SELECT COUNT(*) OVER (), (SUM(t1.c11) IN ()), ((((t1.c48) IS FALSE))LIKE(((t1.c48) BETWEEN (t1.c11) AND (t1.c48)))) FROM t1 WHERE (NULL); -- 0ms;
SELECT ALL CAST(((t1.c11)GLOB(x'4c59')) AS TEXT), ((((t1.c48) ISNULL))<>(CASE t1.c48  WHEN t1.c11 THEN t1.c11 WHEN t1.c48 THEN t1.c48 WHEN x'243e' THEN t1.c11 ELSE NULL END)), x'', 'e^}z x~', LIKE(t1.c11 COLLATE BINARY, t1.c91 COLLATE RTRIM, 'O') FROM t1 WHERE ((((0.12498397602196132)) BETWEEN (((('')=(0.01352980568958484)))) AND (((('')<>(0.5642522366241459)))))) LIMIT -1850096833; -- 0ms;
SELECT DISTINCT ((((t1.c11) BETWEEN (t1.c91) AND (t1.c11))) BETWEEN (CAST(t1.c11 AS BLOB)) AND (((((((((t1.c11)AND(t1.c48)))AND(t1.c48)))AND(t1.c48)))OR(t1.c48)))) FROM t1 WHERE (CASE ((NULL) NOTNULL)  WHEN ((NULL) NOT NULL) THEN (('1114915143') NOT BETWEEN ('2002810813') AND (x'')) END); -- 0ms;
SELECT DISTINCT ((((((((((((((t1.c91)&(t1.c91)))AND(t1.c91 COLLATE NOCASE)))AND((t1.c48 IN ()))))AND((~ (t1.c11)))))OR(((((((((x'')AND(t1.c11)))AND(t1.c48)))AND(t1.c91)))AND(t1.c48)))))AND((t1.c48 IN (t1.c11, t1.c48)))))OR(((t1.c48)<>(t1.c11)))), NTH_VALUE(CAST(((t1.c11)LIKE(t1.c11)) AS NUMERIC), ((CASE WHEN t1.c91 THEN t1.c91 END) NOT NULL)) OVER (), ROW_NUMBER() OVER () FROM t1; -- 0ms;
SELECT DISTINCT t1.c91 FROM t1 WHERE (((((((((0.8207535303292182)AND('0.22999152667092926')))OR('1156805637')))OR(((((x'6cc6')OR(NULL)))AND(x'd5df')))))AND(UNLIKELY(DISTINCT '-602745638')))); -- 1ms;
SELECT DISTINCT ((((+ (t1.c91))))>((((t1.c11)>>(t1.c48))))), CASE t1.c48  WHEN t1.c91 THEN t1.c11 ELSE t1.c48 END COLLATE BINARY, CASE WHEN t1.c48 THEN t1.c48 WHEN t1.c91 THEN t1.c48 WHEN 0.4267322561209471 THEN t1.c91 ELSE x'' END COLLATE RTRIM FROM t1; -- 0ms;
SELECT ALL CASE ((t1.c48) NOTNULL)  WHEN ((t1.c91) IS FALSE) THEN ((t1.c11) NOT BETWEEN (t1.c48) AND (t1.c91)) WHEN t1.c48 THEN ((-2.091451144E9)<<(t1.c48)) WHEN ((((t1.c48)AND(t1.c11)))AND(t1.c11)) THEN ((x'')>>(t1.c91)) END FROM t1 WHERE ((CAST('-824891293' AS BLOB) IN ())); -- 0ms;
SELECT (((((t1.c11)) BETWEEN ((t1.c91)) AND ((t1.c48)))) NOTNULL) FROM t1; -- 0ms;
SELECT ((t1.c91) NOTNULL), CUME_DIST() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND '-1791233357' FOLLOWING), (((((t1.c11)*(0.4550140420141173))))=((CASE t1.c48  WHEN t1.c48 THEN t1.c11 WHEN t1.c11 THEN t1.c11 WHEN t1.c48 THEN t1.c11 END))) FROM t1 LIMIT -1649419412; -- 0ms;
SELECT DISTINCT (((0x6d4fac6b)) BETWEEN ((((t1.c48)%(t1.c48)))) AND ((t1.c11 COLLATE RTRIM))) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c48 IN ())))>=(((~ (t1.c11))))) FROM t1; -- 0ms;
SELECT CAST((((t1.c91)) NOT BETWEEN ((t1.c91)) AND ((t1.c48))) AS TEXT), ((((((t1.c11)OR(t1.c11)))OR(t1.c91))) NOTNULL), ((CASE WHEN t1.c11 THEN t1.c48 ELSE NULL END) NOT BETWEEN (CAST(t1.c91 AS NUMERIC)) AND (((((t1.c91)OR(t1.c11)))AND(t1.c11)))) FROM t1 WHERE (HEX(((x'')==(NULL)))) ORDER BY (((t1.c11))<>((x'b931'))) COLLATE RTRIM DESC; -- 0ms;
SELECT ALL UPPER(DISTINCT t1.c11) FROM t1 WHERE (((CASE WHEN x'5b94' THEN NULL END)!=(UNLIKELY(DISTINCT -1051780231)))); -- 0ms;
SELECT ((((t1.c91)&(t1.c48)))*(((t1.c91) ISNULL))) FROM t1 WHERE (0.3433586042704143) LIMIT 1239978283 OFFSET -170159429; -- 0ms;
SELECT DISTINCT t1.c11 FROM t1 ORDER BY (('')|((~ ('')))) DESC  NULLS FIRST; -- 0ms;
SELECT TOTAL(((t1.c48)=(t1.c91))) FROM t1 LIMIT -1691886335 OFFSET 1054579208; -- 0ms;
SELECT ALL LAST_VALUE(((((((t1.c11) NOT BETWEEN ('-219150272') AND (t1.c48)))OR(t1.c91 COLLATE RTRIM)))AND(((t1.c48) NOTNULL)))) OVER ( ORDER BY ((((t1.c11)|(0.6670327150250258))) IS TRUE)  NULLS LAST, CASE ((t1.c48) IS TRUE)  WHEN t1.c11 COLLATE BINARY THEN (- (t1.c11)) ELSE (((t1.c11)) BETWEEN ((t1.c48)) AND ((t1.c91))) END) FROM t1 WHERE (((NULL COLLATE NOCASE)+((('-844793213')-('s'))))); -- 0ms;
SELECT DISTINCT t1.c91 FROM t1; -- 0ms;
SELECT AVG(((t1.c91)||(t1.c48))) OVER (), (((UPPER(t1.c11)))<>((((t1.c48) ISNULL)))), (NOT (CAST(t1.c11 AS NUMERIC))), (('-1450294353')<>((('23822151')/(t1.c11)))), CAST(CASE t1.c48  WHEN t1.c91 THEN t1.c91 ELSE t1.c91 END AS TEXT) FROM t1; -- 0ms;
SELECT DISTINCT x'' FROM t1 WHERE (((('Gs', NULL, x'')) NOT BETWEEN ((((NULL)%(x'')), UPPER(x''), (0.35776378510118034 IN (-411290113)))) AND ((((0.4147961287910573)%('979135924')), NULL, CAST(x'' AS TEXT))))); -- 0ms;
SELECT ALL LIKELY(TOTAL(t1.c48)) FROM t1; -- 0ms;
SELECT DISTINCT DENSE_RANK() OVER () FROM t1 WHERE (CAST(HEX(DISTINCT -736471663) AS REAL)) ORDER BY CASE CAST(0.35776378510118034 AS NUMERIC)  WHEN CAST('G*IO^FGG' AS REAL) THEN ((t1.c11)>>(t1.c11)) END ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT COUNT(*) FILTER(WHERE ((CASE WHEN t1.c11 THEN t1.c11 END) NOT NULL)) OVER (), TRIM((((t1.c91, t1.c91, t1.c11)) BETWEEN ((t1.c48, t1.c91, 0.6149189410651386)) AND ((t1.c11, t1.c11, t1.c48))), t1.c11 COLLATE RTRIM), ((UNLIKELY(DISTINCT t1.c11)) IS FALSE), (((((((t1.c11)AND(t1.c11)))OR(0.6101315620595978))))<=((((((((((((((t1.c11)OR(0.8653815255950101)))AND(NULL)))OR(t1.c11)))OR(t1.c91)))AND(t1.c11)))OR(t1.c11))))), TOTAL(((t1.c91)OR(469030554))) OVER () FROM t1 WHERE ((CASE WHEN NULL THEN 0xffffffffaf3699d5 END IN ())); -- 0ms;
SELECT GROUP_CONCAT(MAX(x'')), ((CAST(t1.c48 AS BLOB))AND((((t1.c48, t1.c91, t1.c91)) NOT BETWEEN ((t1.c11, t1.c48, t1.c91)) AND ((t1.c48, t1.c11, t1.c91))))), CASE (NOT (t1.c11))  WHEN ((t1.c11)IS(t1.c11)) THEN ((0x46de7be2)AND(t1.c48)) WHEN ((t1.c91)GLOB(t1.c48)) THEN ((t1.c91)-(t1.c48)) WHEN ((t1.c91) BETWEEN (t1.c48) AND (t1.c11)) THEN COALESCE(t1.c11, t1.c11, 5.29550678E8, t1.c91) END, (((t1.c11)=(t1.c48)) IN (LTRIM(t1.c91, t1.c11), ((t1.c48) IS TRUE))), TOTAL((t1.c91 IN ())) FROM t1 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((((-1.32937509E8) ISNULL)))));SELECT ALL '2%mc' FROM t1 WHERE ((((('HY') ISNULL))>>(0.6617313331696172 COLLATE RTRIM))) LIMIT 1749839379; -- 0ms;
SELECT DISTINCT (((((((t1.c11)AND(t1.c11)))OR(t1.c11))))<=((CAST(t1.c11 AS BLOB)))), ((x'36bb')|((t1.c48 IN (t1.c48, t1.c91)))), CASE WHEN t1.c91 COLLATE BINARY THEN t1.c48 COLLATE BINARY END FROM t1 WHERE (((x'c337' COLLATE RTRIM)==((((('1054579208')OR(NULL)))AND(NULL))))) ORDER BY ('' IN ()) DESC, (((- (t1.c91)))<<((~ (t1.c91))))  NULLS LAST LIMIT 1234585709; -- 0ms;
SELECT DISTINCT (t1.c91 COLLATE RTRIM IN ()) FROM t1 GROUP BY ((LIKELY(DISTINCT t1.c48)) NOT BETWEEN (((t1.c91) ISNULL)) AND ((t1.c91 IN ()))); -- 0ms;
SELECT DISTINCT ((TRIM(t1.c11)) NOT BETWEEN ((t1.c91 IN (t1.c11, t1.c48))) AND (((t1.c91)IS(t1.c91)))), ROW_NUMBER() OVER (), t1.c11, CAST((t1.c11 IN ()) AS INTEGER), ((t1.c48) NOT BETWEEN (((t1.c11) BETWEEN (t1.c11) AND (t1.c48))) AND (t1.c91)) FROM t1; -- 0ms;
SELECT ALL t1.c48 FROM t1 WHERE ((((0.8015582909793876 COLLATE BINARY))<=((((x'')>>(NULL)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((((NULL)AND(t1.c11)))AND(t1.c48))) OVER (), ((CASE t1.c91  WHEN t1.c91 THEN 245583452 ELSE t1.c91 END) IS TRUE), (((('g{15}N/빡')LIKE(NULL)))>>((t1.c91 IN (t1.c11)))) FROM t1 WHERE ((0.04168475908627778 COLLATE BINARY IN ())); -- 0ms;
SELECT ALL '', (+ (((((t1.c11)AND(t1.c11)))OR(t1.c91)))), LIKELY(DISTINCT x'e973') FROM t1 WHERE ((((298028974, NULL, NULL)) NOT BETWEEN ((MAX(x'', 'sZ', x'', 0.38444389197463347), ((x'8c0d')|(x'')), ((0.23238022719409968)>=(0.4505077360985671)))) AND ((LIKELY(DISTINCT 0.09243596148773914), (((0X4d32072b, -411290113, x'')) NOT BETWEEN ((NULL, '991870561', '1495824179')) AND ((NULL, 287756644, 0.10808203087178392))), CASE WHEN -1355376171 THEN x'' WHEN NULL THEN NULL WHEN -722853796 THEN -2372033.0 END)))) LIMIT 1508951056; -- 0ms;
SELECT DISTINCT t1.c11 FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c11)LIKE(NULL)) IN ()) FROM t1 LIMIT 1531465758; -- 0ms;
SELECT DISTINCT ((0.7224308912363068) NOT BETWEEN (t1.c11) AND (((t1.c48) BETWEEN (t1.c91) AND (t1.c48)))), ((CAST(t1.c48 AS TEXT))IS NOT(CAST(t1.c91 AS TEXT))), ABS(COUNT(NULL)) FROM t1 WHERE (NULL) LIMIT -31704933; -- 0ms;
SELECT ((((t1.c91) BETWEEN (t1.c11) AND (t1.c11))) NOT NULL) FROM t1; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT t1.c91, t1.c48) COLLATE BINARY FROM t1 WHERE (CHAR(('245583452' IN ()))) ORDER BY t1.c91  NULLS LAST, (NOT ((((t1.c91)) NOT BETWEEN ((t1.c91)) AND ((t1.c48))))), ((((CAST(t1.c11 AS INTEGER))OR((('') IS TRUE))))OR(t1.c91 COLLATE RTRIM))  NULLS FIRST LIMIT 711372598 OFFSET -771034062; -- 0ms;
SELECT ALL CASE WHEN t1.c48 THEN ((t1.c91) BETWEEN (t1.c48) AND (t1.c11)) ELSE t1.c11 END FROM t1 WHERE (CASE ((x'6c7a')GLOB(0.6344041871067407))  WHEN ('746555894' IN ()) THEN ((0.019197700490575564) ISNULL) ELSE '' COLLATE NOCASE END); -- 0ms;
SELECT ALL ABS(DISTINCT (+ (t1.c11))), ((((((((((t1.c48)OR(t1.c91)))OR(t1.c48)))OR(t1.c11)))OR(t1.c48)))<<(t1.c91)), ((t1.c48 COLLATE BINARY) BETWEEN (t1.c48 COLLATE BINARY) AND (NULL)) FROM t1 WHERE (CASE WHEN 0X53cc9ac1 THEN NULLIF(1.156805637E9, 'yhG	VAO&') ELSE STRFTIME(NULL, -70206834, NULL) END) ORDER BY CAST(((t1.c91) NOT BETWEEN (t1.c48) AND (t1.c48)) AS NUMERIC)  NULLS FIRST, t1.c91  NULLS LAST, ((((t1.c91) ISNULL)) BETWEEN (((t1.c11) BETWEEN (t1.c11) AND (t1.c48))) AND (((t1.c48) ISNULL))); -- 0ms;
SELECT ALL (((t1.c48)) BETWEEN ((t1.c11)) AND ((t1.c91))) COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT CASE t1.c11  WHEN '' THEN 0.2385441398128888 ELSE SUBSTR(t1.c11, t1.c48) END FROM t1 WHERE ((((((~ ('1833938027')))OR((0.29097354518082796 IN ()))))AND(((NULL)&(x''))))); -- 0ms;
SELECT ((((((t1.c11)OR(t1.c91)))AND(t1.c48))) NOT BETWEEN (((t1.c11) NOT BETWEEN (t1.c91) AND (0.7262681847019745))) AND (((t1.c11) IS FALSE))) FROM t1 INDEXED BY i15 WHERE (((x'') BETWEEN (NULL) AND (NULL)) COLLATE NOCASE) GROUP BY x'', '1641960331', ((((t1.c11) NOT BETWEEN (1882352995) AND (t1.c48))) NOT NULL) ORDER BY (~ ((~ (t1.c48))))  NULLS LAST, ((CAST(t1.c91 AS INTEGER))-((((t1.c48, t1.c48, t1.c91)) NOT BETWEEN ((t1.c11, ')f\n/', t1.c91)) AND ((t1.c48, t1.c91, x''))))) DESC, ((((t1.c11 COLLATE BINARY)OR(CAST(t1.c48 AS REAL))))AND(CAST(t1.c11 AS BLOB))) DESC, ((t1.c11 COLLATE NOCASE) NOT BETWEEN (((t1.c48)*(t1.c11))) AND (t1.c11 COLLATE RTRIM)) ASC  NULLS LAST; -- 0ms;
SELECT RANK() OVER () FROM t1 WHERE (((((((((((0X4c51b56)OR(NULL)))OR(0.4300209806532015)))AND(0X3a498e0e)))AND(NULL))) NOT BETWEEN (CAST('sf\' AS REAL)) AND ('0.12498397602196132'))); -- 0ms;
SELECT ALL ((((((t1.c48)AND(t1.c48)))AND(t1.c91))) IS FALSE) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c11))!=((t1.c48)))) BETWEEN ((- (t1.c11))) AND (CASE WHEN t1.c48 THEN t1.c48 END)) FROM t1 WHERE (((((NULL)&('-1716333340'))) ISNULL)); -- 0ms;
SELECT DISTINCT (+ (((((((((t1.c48)AND(t1.c91)))OR(t1.c11)))OR(t1.c11)))OR(t1.c91)))), (- (((t1.c11)!=(t1.c91)))), GROUP_CONCAT((~ (t1.c48))) FROM t1 GROUP BY 0xffffffff91466259; -- 0ms;
SELECT DISTINCT ((t1.c48)OR(CASE t1.c11  WHEN t1.c11 THEN t1.c48 END)) FROM t1; -- 0ms;
SELECT DISTINCT ((((((((((((t1.c48)OR(t1.c11)))OR(t1.c91)))OR((((t1.c91, t1.c48, t1.c11, t1.c48, t1.c48))<=((t1.c91, t1.c91, t1.c91, t1.c91, t1.c11))))))OR(NULLIF(t1.c91, t1.c91))))OR(((t1.c91)IS NOT(t1.c11)))))OR('492645455')), PRINTF(0x17022f86, (t1.c11 IN (t1.c91)), NULL), CASE WHEN -1.79766667E9 COLLATE NOCASE THEN CAST(t1.c48 AS NUMERIC) ELSE (NOT (t1.c48)) END FROM t1 WHERE ((((('-337676907')+('298028974')))*(0.08778246471208773))); -- 0ms;
SELECT DISTINCT ((((t1.c91)AND(0.9912205086582746)))AND(t1.c91)) COLLATE BINARY, t1.c48, MIN(CASE WHEN t1.c48 THEN t1.c91 ELSE t1.c91 END) FROM t1 NOT INDEXED WHERE (((((0.9137218013028195) NOT BETWEEN ('1724612854') AND (0.6089906329952532)))!=(((0.4139689071161571)IS(1641960331))))); -- 0ms;
SELECT DISTINCT ((((t1.c11)&(t1.c91))) NOT BETWEEN ((t1.c91 IN ())) AND (CASE WHEN t1.c11 THEN t1.c48 END)), (t1.c48 COLLATE RTRIM IN ()), (((((t1.c48) BETWEEN (t1.c48) AND (t1.c11)), '1531465758', ((t1.c48)<<(t1.c11))))=((t1.c91, ((t1.c48)==(t1.c48)), (NULL IN ())))) FROM t1; -- 0ms;
SELECT TOTAL(((t1.c91)<(t1.c11))) OVER (), (t1.c91 IN (t1.c91)) COLLATE NOCASE, LAG(((((t1.c11) IS TRUE))GLOB(((NULL)==(t1.c91)))), ((((t1.c11) IS FALSE)) NOT BETWEEN ((((t1.c48))=((t1.c48)))) AND (t1.c91)), ((((((((((t1.c91)<<(t1.c91)))OR(CAST(t1.c91 AS REAL))))AND(((t1.c91) BETWEEN (t1.c11) AND (t1.c11)))))AND(CASE WHEN t1.c91 THEN t1.c48 END)))AND(((x'')&(t1.c11))))) OVER (), MIN(((t1.c48)>(t1.c91))), CAST((t1.c48 IN ()) AS INTEGER) FROM t1 WHERE ((((('YFqL')>>(x'')))+(((0.01352980568958484)*(NULL))))) LIMIT -1841143608 OFFSET 336973921; -- 0ms;
SELECT DISTINCT ((t1.c48) ISNULL), (((- (t1.c48))) NOT BETWEEN (((t1.c48) BETWEEN (t1.c11) AND (t1.c48))) AND (t1.c91 COLLATE BINARY)), (((NULL, x'', t1.c91)) BETWEEN ((t1.c91, t1.c48, t1.c48)) AND ((t1.c11, x'', t1.c91))) COLLATE BINARY FROM t1 WHERE (GLOB(x'e683', (('d') BETWEEN ('1882352995') AND (NULL)))) LIMIT 866982284; -- 0ms;
SELECT AVG(AVG(UNLIKELY(DISTINCT t1.c48))), 0.5046810583922771, (((((((t1.c11)) BETWEEN ((t1.c91)) AND ((t1.c91))))OR((NOT (t1.c91)))))AND(CAST(t1.c11 AS INTEGER))) FROM t1 WHERE ((((8.47880092E8)) BETWEEN (((('9\#?L8') BETWEEN ('0.349437634463289') AND ('')))) AND (((((0x44f37405))<((NULL))))))) ORDER BY (((t1.c48) BETWEEN ('-765439092') AND (t1.c91)) IN ());SELECT ALL (((NULL)) BETWEEN (((- (t1.c11)))) AND (((x'' IN ())))) FROM t1 WHERE (((((x'') NOTNULL))<(((x'')|(x'2c3b'))))) GROUP BY CAST((~ (t1.c48)) AS REAL), ((((t1.c91)-(t1.c11)))IS(((t1.c11)|(t1.c11)))), ((t1.c91)||(t1.c91)) COLLATE BINARY HAVING CAST(t1.c91 COLLATE RTRIM AS INTEGER); -- 0ms;
SELECT DISTINCT CAST(0.11647098659524235 AS NUMERIC) FROM t1 WHERE ((('')>=(0xfffffffff0a18f72)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT t1.c91 COLLATE BINARY FROM t1 WHERE ((((('a	0L') IS TRUE))IS NOT(((0.44514396234225206) IS FALSE)))); -- 0ms;
SELECT ALL t1.c48, CASE ((t1.c11)GLOB(t1.c11))  WHEN CASE WHEN t1.c11 THEN t1.c11 ELSE NULL END THEN CASE t1.c48  WHEN t1.c11 THEN t1.c48 END WHEN t1.c11 THEN ((t1.c48) NOTNULL) WHEN UNLIKELY(t1.c48) THEN COALESCE(DISTINCT t1.c11, t1.c91) ELSE ((t1.c11)*(t1.c91)) END, ((0xffffffff8c95868f) NOT BETWEEN (((t1.c11) BETWEEN (t1.c91) AND (t1.c91))) AND (CAST(t1.c48 AS TEXT))) FROM t1 WHERE (((((((((('' IN ()))AND(CASE WHEN NULL THEN '0.019197700490575564' WHEN x'6a4b2ae4' THEN '1749839379' WHEN NULL THEN NULL END)))OR(CASE WHEN '7''X⪆qGkE' THEN '1114915143' END)))OR((~ (x'c463')))))AND(((x'')/('1234585709'))))); -- 0ms;
SELECT ALL AVG(CAST(t1.c11 AS REAL)) FROM t1 WHERE ((('' COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((t1.c91)) BETWEEN ((t1.c11)) AND ((t1.c48)))) IS FALSE), (CAST(t1.c48 AS NUMERIC) IN (((t1.c91)/(x'08f4')))), ((CASE t1.c48  WHEN t1.c11 THEN t1.c48 WHEN t1.c48 THEN t1.c48 WHEN t1.c11 THEN t1.c11 END)/(t1.c91 COLLATE RTRIM)) FROM t1 WHERE (((CASE WHEN 0.07318007638623092 THEN x'' END)GLOB((((x'e1ae'))!=((x'')))))); -- 0ms;
SELECT ALL AVG(t1.c11 COLLATE BINARY) OVER ( ORDER BY ((((((t1.c11)OR(t1.c48)))OR(t1.c11)))-((t1.c48 IN ())))  NULLS FIRST, (('366694073')<=(((t1.c91)IS(t1.c91)))), ((t1.c11)GLOB(t1.c11)) COLLATE BINARY) FROM t1 ORDER BY ((((t1.c91) BETWEEN (t1.c91) AND (t1.c91))) IS FALSE) ASC; -- 1ms;
SELECT DISTINCT (~ ((((t1.c91)) BETWEEN ((t1.c48)) AND ((t1.c48))))) FROM t1; -- 0ms;
SELECT DISTINCT CAST(t1.c48 COLLATE RTRIM AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT (~ (((t1.c11)&(t1.c48)))) FROM t1; -- 0ms;
SELECT DISTINCT NTILE((((t1.c11)) NOT BETWEEN ((((((t1.c48)AND(t1.c11)))OR(t1.c48)))) AND ((CAST(t1.c48 AS NUMERIC))))) OVER ( ORDER BY ((((((t1.c91) BETWEEN (t1.c91) AND (t1.c91)))AND(((t1.c91) IS FALSE))))OR(((((t1.c48)AND(t1.c91)))OR(t1.c48)))) ASC  NULLS FIRST), CAST((((t1.c11))=((t1.c11))) AS BLOB), SUM((t1.c91 IN ())) FROM t1 WHERE (CAST(((x'') IS FALSE) AS NUMERIC));SELECT ALL (((((((t1.c48)OR(1.149151969E9)))AND(t1.c48)), ((t1.c91)*('-699481481')), (t1.c91 IN ())))<=((x'', ((((((((t1.c11)OR(t1.c91)))AND(t1.c91)))AND(t1.c11)))AND(t1.c91)), ((t1.c11)>>(t1.c48))))) FROM t1; -- 0ms;
SELECT ALL json_valid(''), (('-699481481') IS TRUE), FIRST_VALUE(x'' COLLATE NOCASE) OVER () FROM t1 WHERE ((+ (CASE WHEN NULL THEN x'971b' END))); -- 0ms;
SELECT x'' FROM t1 WHERE (TYPEOF(DISTINCT ((((((((NULL)OR(0.19799407091859178)))OR('1911020944')))AND(0.7542156519106981)))AND(1.882352995E9)))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c91 AS REAL))<=(t1.c11)), (((NOT (t1.c91))) BETWEEN (((t1.c11) BETWEEN (t1.c48) AND (0.7586783912442835))) AND (t1.c48)), ((t1.c48) IS FALSE) FROM t1 WHERE (HEX(DISTINCT (NOT (-1355376171)))); -- 0ms;
SELECT ALL ((NULL)<>((~ (t1.c11)))) FROM t1 ORDER BY ((CASE WHEN t1.c11 THEN t1.c48 ELSE x'54ad' END) BETWEEN ((t1.c91 IN (t1.c91))) AND (CASE t1.c91  WHEN t1.c48 THEN t1.c11 WHEN t1.c91 THEN t1.c11 WHEN t1.c11 THEN t1.c91 END)) DESC  NULLS LAST; -- 0ms;
SELECT ALL ((CAST(t1.c91 AS INTEGER)) ISNULL) FROM t1; -- 0ms;
SELECT ((t1.c11)<=(((t1.c48)+(t1.c11)))), (((((t1.c91, t1.c48, NULL, t1.c11, t1.c11))>((t1.c48, t1.c11, NULL, t1.c91, t1.c91))))||(((t1.c11)%(t1.c11)))), ((+ (x'')) IN ()) FROM t1 LIMIT 1359151795 OFFSET 1396666186; -- 0ms;
SELECT DISTINCT '-31704933' FROM t1 WHERE ((((x'' IN ())) NOT BETWEEN (UNLIKELY('I/~te5')) AND ('-219150272' COLLATE BINARY))) GROUP BY ((((((t1.c11)) BETWEEN ((t1.c48)) AND ((0.13641774653953753)))))<>(((NOT (x''))))); -- 0ms;
SELECT ALL CASE (((t1.c91))>=((t1.c11)))  WHEN t1.c48 THEN (((t1.c91))<((t1.c91))) ELSE ((t1.c48)=(t1.c91)) END FROM t1 NOT INDEXED ORDER BY (- (CASE t1.c11  WHEN t1.c91 THEN t1.c11 END)) ASC, CAST((((NULL)) BETWEEN ((t1.c11)) AND ((t1.c48))) AS REAL) ASC, (NOT ((((t1.c11))<>((t1.c11))))) ASC  NULLS FIRST LIMIT 1183272265 OFFSET 162763336; -- 0ms;
SELECT ALL ((((((((COUNT(x'e3b1'))OR(((t1.c48)>(t1.c11)))))OR(t1.c91)))OR(CASE NULL  WHEN t1.c91 THEN t1.c48 END)))AND(COUNT(t1.c48))), CASE TOTAL('?{')  WHEN ((((t1.c91)OR(t1.c11)))AND(t1.c91)) THEN (- (t1.c48)) ELSE ((t1.c91)||(t1.c91)) END, ((((t1.c11)>(t1.c91)))||((NOT (t1.c48)))) FROM t1 WHERE (((TRIM(407401237, NULL))<<(NULL))); -- 0ms;
SELECT DISTINCT (((t1.c48)) NOT BETWEEN ((CASE WHEN t1.c11 THEN t1.c91 WHEN '-1944942736' THEN t1.c11 WHEN t1.c91 THEN t1.c11 ELSE 0.8924680942917798 END)) AND ((((NULL)||(t1.c11))))) FROM t1 WHERE (((((CASE 0Xffffffffbbd53291  WHEN 4.92645455E8 THEN 0.0 END)OR(CASE WHEN x'' THEN NULL WHEN NULL THEN '-1699319452' WHEN '-340044649' THEN NULL END)))AND((- ('R'))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t1.c11)<=(t1.c48))) OVER () FROM t1 WHERE ((((0.29978077200194275, '-1509161333', 'l*dLx压혒', 0xffffffff8950bd37, '1995036229')) BETWEEN ((((((x'f5b7')AND(x'')))AND(0.3433586042704143)), ((0.2740354223500583) NOT NULL), json_array(x'b28a', x'0cd0'), (('1321608153')||(0.9439003860399029)), ((0.0937537564518891)*(x'')))) AND ((CASE WHEN NULL THEN NULL END, ((NULL)>>(x'')), ((('2051918540')) NOT BETWEEN ((NULL)) AND ((0.29445003933696234))), (((('_')OR('')))AND(979135924)), CASE WHEN 'PNhvB*<GG' THEN x'' WHEN x'' THEN ')ⷃSpq Q' WHEN '1234585709' THEN '-1224114884' END)))); -- 0ms;
SELECT DISTINCT (((((t1.c91) ISNULL)))!=((((t1.c91)LIKE(t1.c48))))) FROM t1; -- 0ms;
SELECT ALL TOTAL((((t1.c48)) NOT BETWEEN ((t1.c11)) AND ((t1.c48)))) OVER () FROM t1 WHERE (((((('-2091451144', NULL, 1724612854, NULL, '2077772442')) NOT BETWEEN (('w49', 0X731a108f, x'031f', 0.042444961860489405, NULL)) AND (('0.8653815255950101', 'lO', 0Xffffffffef1c5ac6, x'2b5d', 1321608153))))+(((((0.17814291697960216)AND(x'')))OR(''))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t1.c48 COLLATE BINARY COLLATE RTRIM) FILTER(WHERE CAST(t1.c48 COLLATE RTRIM AS TEXT)) OVER () FROM t1; -- 0ms;
SELECT DISTINCT AVG(CAST(t1.c48 AS INTEGER)) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS) FROM t1 LIMIT -1051092007; -- 0ms;
SELECT DISTINCT (('0.6028809476017404') NOT BETWEEN ((((t1.c91)) BETWEEN ((t1.c11)) AND ((t1.c91)))) AND (((t1.c91) BETWEEN (t1.c11) AND (t1.c48)))), LOWER(DISTINCT ((t1.c48) BETWEEN (t1.c48) AND (t1.c11))), ((((COUNT(*))AND((((t1.c91)) NOT BETWEEN ((t1.c91)) AND ((t1.c48))))))OR((t1.c11 IN ()))) FROM t1 WHERE ((- (TRIM(x'')))); -- 0ms;
SELECT DISTINCT COUNT((((t1.c91, t1.c11, t1.c91))>=((t1.c91, t1.c11, t1.c11)))) OVER () FROM t1 WHERE ((~ (CASE WHEN NULL THEN 'hy' WHEN 'f2e!\rp' THEN -6.02745638E8 WHEN x'' THEN 5.29550678E8 END))); -- 1ms;
SELECT DISTINCT (((((t1.c91))>=((t1.c91)))) NOTNULL) FROM t1; -- 0ms;
SELECT DISTINCT ((t1.c48 COLLATE NOCASE) NOT BETWEEN (INSTR(0.4147961287910573, t1.c91)) AND ((- (t1.c48)))), t1.c48, TOTAL((t1.c91 IN ())) OVER (), ((((t1.c91)||(t1.c48)))>=(((x'')*(t1.c11)))), ((t1.c48) ISNULL) COLLATE BINARY FROM t1 WHERE (((((-2.71245931E8 COLLATE NOCASE)AND('407401237' COLLATE BINARY)))OR(CASE WHEN 0.6627021005751241 THEN NULL WHEN 'e^}z x~' THEN x'' WHEN 0.7965269785862081 THEN x'' END))); -- 0ms;
SELECT DISTINCT ((CAST(t1.c91 AS TEXT)) NOT BETWEEN ('') AND (COUNT(*))) FROM t1 WHERE (((((-1.834822749E9) IS TRUE)) IS TRUE)); -- 0ms;
SELECT DISTINCT COUNT(*), AVG(((t1.c91) BETWEEN (t1.c48) AND (t1.c91))) OVER (), ((((t1.c48)LIKE(NULL)))LIKE((('2112650704')IS(t1.c91)))) FROM t1 WHERE ((~ (((x'b24a') IS TRUE)))); -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c91) BETWEEN (t1.c48) AND (t1.c11)) THEN -9186671 ELSE CASE t1.c11  WHEN t1.c91 THEN t1.c11 ELSE t1.c48 END END FROM t1 WHERE (TRIM((+ (-1097427571)))); -- 0ms;
SELECT DISTINCT CAST(CASE WHEN '2%MC' THEN t1.c91 ELSE t1.c48 END AS TEXT), t1.c11, (((t1.c48)) NOT BETWEEN ((t1.c48)) AND ((t1.c91))) COLLATE RTRIM FROM t1 WHERE (x'') GROUP BY ((CAST(t1.c91 AS BLOB))OR((t1.c48 IN (t1.c48)))); -- 0ms;
SELECT DISTINCT (((t1.c48))>((''))) COLLATE BINARY FROM t1; -- 0ms;
SELECT ((t1.c11)|((- (t1.c11)))), (NOT (CASE WHEN t1.c11 THEN t1.c91 ELSE 0Xffffffffe9984688 END)), CASE WHEN (',>e8{md' IN (t1.c11)) THEN (+ (t1.c11)) END FROM t1 LIMIT 729618638; -- 0ms;
SELECT DISTINCT (((((t1.c11)OR(t1.c48)))AND('y')) IN ()) FROM t1 WHERE (((0.5095787142828263) IS TRUE) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT DATE(UPPER(t1.c48), (((t1.c11, '', t1.c91))<=((x'', t1.c11, t1.c11))), ((t1.c11) BETWEEN (t1.c91) AND (t1.c91)), '', GROUP_CONCAT(t1.c11)) FROM t1; -- 0ms;
SELECT ALL RTRIM((t1.c48 IN ())) FROM t1 WHERE (((CAST(x'' AS TEXT))IS NOT('b''v-vpyn'))); -- 0ms;
SELECT DISTINCT (((+ (t1.c91)))-(CASE t1.c48  WHEN t1.c91 THEN t1.c48 ELSE t1.c48 END)) FROM t1 ORDER BY t1.c11 ASC  NULLS LAST, ((((t1.c48) NOT BETWEEN (t1.c11) AND (t1.c48))) NOTNULL), ((t1.c91) BETWEEN (t1.c91) AND (t1.c91)) COLLATE NOCASE COLLATE RTRIM DESC  NULLS FIRST; -- 0ms;
SELECT (+ ((NOT (t1.c91)))) FROM t1 WHERE (((CASE x'b0a0'  WHEN 0.6670327150250258 THEN x'' END) BETWEEN (('245583452' IN ())) AND ((('0.7262681847019745')GLOB('1023780608'))))) ORDER BY (((0.6828330601605371 IN ())) IS TRUE); -- 0ms;
SELECT ALL (CAST(t1.c48 AS NUMERIC) IN ()), CAST((((t1.c91))>=((t1.c91))) AS TEXT), ((((((((((t1.c11)+(t1.c91)))AND(((t1.c11)LIKE(t1.c11)))))OR(CAST(t1.c48 AS TEXT))))OR((+ (t1.c48)))))OR((t1.c48 IN ()))) FROM t1 WHERE ((CASE '~*Ba'  WHEN NULL THEN -7.22853796E8 WHEN 0.04001566381733346 THEN 3.66694073E8 WHEN x'' THEN x'' ELSE x'' END IN ())); -- 0ms;
SELECT ALL (TRIM(DISTINCT t1.c91) IN (TOTAL(t1.c91), ABS(DISTINCT t1.c91))) FROM t1; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(t1.c48 AS INTEGER)) FROM t1; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), t1.c91, TOTAL(CASE t1.c48  WHEN t1.c91 THEN t1.c48 ELSE t1.c48 END) OVER ( ROWS (((t1.c11)||(t1.c91)) IN ()) PRECEDING EXCLUDE CURRENT ROW) FROM t1 WHERE (COALESCE(DISTINCT NULLIF(x'', x''), NULL, ((0.05719721174961867)-(x'16bfedb9')), NULL)); -- 0ms;
SELECT ALL COUNT(*), CUME_DIST() OVER (), COUNT(*) OVER () FROM t1; -- 1ms;
SELECT COUNT(*) FROM t1; -- 0ms;
SELECT DISTINCT ((((COUNT(*))OR((~ (t1.c91)))))AND(HEX(t1.c91))) FROM t1 WHERE ('-132937509' COLLATE RTRIM COLLATE NOCASE) ORDER BY x'' DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT x'' FROM t1; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID(), ((((t1.c48)&(t1.c11))) NOT BETWEEN (CASE WHEN t1.c11 THEN t1.c48 ELSE t1.c91 END) AND ((((t1.c48)) BETWEEN ((t1.c91)) AND ((t1.c91))))), (((t1.c11)) NOT BETWEEN ((t1.c91)) AND ((CASE WHEN t1.c91 THEN x'' ELSE t1.c11 END))) FROM t1; -- 0ms;
SELECT ((AVG(0x60d4f48d))!=(t1.c48)) FROM t1; -- 0ms;
SELECT CAST(t1.c91 AS INTEGER) COLLATE BINARY FROM t1 WHERE (((((CAST(NULL AS BLOB))AND(((0X684c6e13) BETWEEN (NULL) AND (x'')))))AND((NOT (x'3963'))))); -- 0ms;
SELECT ((((t1.c91) NOT NULL))%(GROUP_CONCAT(t1.c48))), (~ ((NOT (t1.c11)))), NULL FROM t1; -- 0ms;
SELECT DISTINCT (NOT (((t1.c48)*(t1.c11)))) FROM t1 LIMIT 1531465758 OFFSET 1326297463; -- 1ms;
SELECT DISTINCT 0xffffffffbb4591db FROM t1 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((NULLIF(t1.c48, t1.c11))OR(((t1.c48) IS TRUE))))AND(CASE WHEN t1.c91 THEN t1.c11 ELSE t1.c48 END)) FROM t1 UNION SELECT DISTINCT (TOTAL(t1.c91) IN (TOTAL(t1.c91), ((t1.c11) NOT BETWEEN (t1.c48) AND (t1.c91)))) FROM t1; -- 0ms;
SELECT DISTINCT (LIKELIHOOD(t1.c91, 0.13813038001108524) IN ()) FROM t1 WHERE ((((((NULL, NULL, NULL))<=(('', x'', 0.48952497710474374))))%(((((x'')AND(x'')))OR(NULL))))); -- 0ms;
SELECT CASE NULL  WHEN t1.c11 THEN ((((t1.c91)AND(t1.c91)))OR(t1.c48)) WHEN CASE t1.c91  WHEN 23822151 THEN t1.c91 END THEN (((t1.c11, NULL, t1.c48)) NOT BETWEEN ((x'6b9a70af', t1.c11, t1.c11)) AND ((t1.c11, t1.c91, x'a6da'))) WHEN t1.c48 THEN NULL ELSE 'i~' END FROM t1 WHERE (CAST(((5.9295511E8)>(x'c0a9')) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((t1.c91 IN ()))>=((- (t1.c48)))) FROM t1; -- 0ms;
SELECT ALL ((((((t1.c91)OR(t1.c91)))OR(t1.c11)))||((t1.c48 IN (t1.c91)))), COUNT(*) OVER (), CUME_DIST() OVER (), LIKELY(((t1.c11) NOT BETWEEN (t1.c91) AND (t1.c91))), t1.c91, CASE t1.c11  WHEN ((t1.c11) NOT NULL) THEN (NOT (t1.c91)) ELSE ((t1.c48)<<(t1.c91)) END, SUBSTR(t1.c91 COLLATE BINARY, ('0.7542156519106981' IN ())) FROM t1; -- 0ms;
SELECT DISTINCT CAST(COUNT(t1.c91) AS INTEGER), (((t1.c48, t1.c48, t1.c48, t1.c48, t1.c91)) NOT BETWEEN ((CASE WHEN t1.c91 THEN t1.c48 WHEN t1.c11 THEN t1.c11 WHEN t1.c91 THEN t1.c11 ELSE t1.c11 END, ((NULL)LIKE(t1.c11)), (t1.c91 IN ()), (~ (t1.c91)), 0xffffffffc2f542f9)) AND ((t1.c11, ((t1.c11) ISNULL), ((t1.c48) ISNULL), ((t1.c91)&(t1.c11)), t1.c48))), (((- (t1.c11))) NOT BETWEEN (((t1.c11)<=(t1.c91))) AND ((t1.c91 IN ()))) FROM t1; -- 0ms;
SELECT ALL t1.c48, (((((t1.c11)AND(t1.c48)))AND(t1.c11)) IN ()), ((((((((t1.c48 COLLATE RTRIM)OR(((t1.c91)GLOB(t1.c91)))))AND((NOT (t1.c91)))))OR(((((-831173189)AND(x'')))AND(t1.c11)))))AND(((t1.c11)+(t1.c48)))) FROM t1 WHERE (CAST((((''))=(('-699481481'))) AS TEXT)); -- 0ms;
SELECT ALL (((((t1.c48))<=((t1.c11))))/(t1.c48 COLLATE NOCASE)) FROM t1 WHERE ((((NULL, NULL, 0.15739719938440977)) BETWEEN (((('k')/('q36nF \E3')), NULL, (((NULL)) NOT BETWEEN ((x'')) AND ((-0.0))))) AND ((CASE ''  WHEN '1114915143' THEN 0.49462978076662656 ELSE NULL END, 0.7960511800204886 COLLATE BINARY, CASE WHEN '1495824179' THEN 0.16485339601474447 WHEN x'' THEN '-1149328271' WHEN 'g{15}N/빡' THEN -1.841143608E9 WHEN 0.6627021005751241 THEN NULL WHEN NULL THEN '' ELSE NULL END)))); -- 0ms;
SELECT (- (((t1.c91)/(t1.c11)))) FROM t1 WHERE ((('')>=(NULL)) COLLATE RTRIM); -- 1ms;
SELECT COALESCE(CAST(t1.c11 AS NUMERIC), COUNT(*)) FROM t1; -- 0ms;
SELECT (+ (LIKELIHOOD(DISTINCT t1.c11, 0.7907957840715029))) FROM t1 WHERE ((('')<>(x'')) COLLATE NOCASE); -- 0ms;
SELECT GROUP_CONCAT(0.19423170656431832) OVER ( ORDER BY COALESCE(DISTINCT CASE t1.c48  WHEN t1.c48 THEN t1.c48 ELSE t1.c91 END, ((t1.c48)LIKE(t1.c91))) DESC  NULLS FIRST), NTH_VALUE((((t1.c91) BETWEEN (t1.c11) AND (0.6920812504824584)) IN ()), ((((CASE t1.c11  WHEN t1.c48 THEN t1.c11 END)OR(t1.c48)))OR(((((((((t1.c11)AND(t1.c11)))AND(t1.c11)))OR(t1.c91)))OR(t1.c11))))) OVER (), CAST(('(9\#diMJ' IN (t1.c91, t1.c48)) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c11 AS NUMERIC)) NOT BETWEEN ((+ (t1.c48))) AND (CASE t1.c11  WHEN t1.c91 THEN t1.c48 WHEN t1.c91 THEN t1.c48 WHEN t1.c48 THEN t1.c11 ELSE t1.c91 END)) FROM t1; -- 0ms;
SELECT (~ ((((0.7435572777826968, t1.c48, t1.c91, NULL, t1.c91))=((t1.c91, t1.c91, t1.c91, t1.c11, t1.c91))))), (~ (((t1.c48) NOT BETWEEN (t1.c48) AND (t1.c91)))), ((((t1.c48) BETWEEN (t1.c48) AND (t1.c91))) ISNULL) FROM t1; -- 0ms;
SELECT ALL COALESCE((NOT (t1.c91)), ((t1.c91) IS TRUE)) FROM t1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t1.c48 THEN t1.c91 ELSE t1.c11 END), ((t1.c11)&(LOWER(DISTINCT t1.c48))), NTILE(TRIM((t1.c48 IN (t1.c91)))) OVER ( PARTITION BY (~ (CASE t1.c11  WHEN t1.c91 THEN t1.c91 END)), ((NOT (t1.c11)) IN ()) ROWS BETWEEN  CURRENT ROW AND ((t1.c48) BETWEEN (((t1.c48) IS TRUE)) AND ('퓚 L<5N5')) PRECEDING), (((t1.c48 IN (t1.c91)))||(((t1.c11)<=(t1.c11)))), t1.c11 FROM t1 WHERE (((x'') NOT BETWEEN ((('1959718150')&(0.40698923770891604))) AND (((x'd7d1')%(NULL)))));SELECT DISTINCT '711372598' FROM t1 WHERE ((('') NOT BETWEEN (x'' COLLATE BINARY) AND ('' COLLATE BINARY))) LIMIT 808267288; -- 0ms;
SELECT DISTINCT ((t1.c48) BETWEEN ((~ (t1.c48))) AND (CAST(t1.c48 AS REAL))) FROM t1 WHERE (x''); -- 0ms;
SELECT DISTINCT (((+ (t1.c91)))<<(x'')) FROM t1 WHERE (CASE WHEN CASE 511681872  WHEN NULL THEN NULL END THEN ((x'') NOT BETWEEN (-8.44793213E8) AND (x'')) END); -- 1ms;
SELECT DISTINCT (((('-335526622')OR(AVG(t1.c11))))AND(((t1.c11) BETWEEN (t1.c48) AND (t1.c48)))), SUM((((t1.c48)) BETWEEN ((t1.c91)) AND ((t1.c91)))), NULL FROM t1 WHERE ('2058760439'); -- 0ms;
SELECT -1e500, SQLITE_COMPILEOPTION_USED(TYPEOF(DISTINCT t1.c11)), ((('g')||(NULL)) IN ()) FROM t1 LIMIT -135872883 OFFSET 1239978283; -- 0ms;
SELECT CAST(CASE WHEN t1.c48 THEN t1.c11 END AS INTEGER), (((t1.c91, t1.c48, t1.c91)) BETWEEN ((((((t1.c91)OR(t1.c11)))OR(t1.c91)), (~ (t1.c91)), ((((t1.c91)OR(t1.c48)))OR(t1.c48)))) AND (((~ (t1.c48)), ((0.5523793863161749)/('0.6089906329952532')), DATETIME(t1.c48, t1.c11, t1.c48, '497261729', t1.c48)))), ((t1.c11) NOT BETWEEN (t1.c11) AND (x'')) COLLATE NOCASE FROM t1 WHERE (CAST((((NULL)) BETWEEN ((x'')) AND ((x'a454'))) AS NUMERIC)); -- 0ms;
SELECT RANK() OVER () FROM t1 WHERE (((CAST(0.9181475823704079 AS INTEGER)) NOT NULL)); -- 0ms;
SELECT ALL CASE WHEN ((t1.c11) NOTNULL) THEN ((t1.c48)*(t1.c91)) ELSE (+ (t1.c91)) END FROM t1 WHERE ((+ ((((x'', 0.05352535660913027, x'')) NOT BETWEEN ((0.8738057164918743, x'', NULL)) AND ((NULL, 2.87756644E8, NULL)))))); -- 0ms;
SELECT ALL (t1.c48 COLLATE NOCASE IN ()) FROM t1 LIMIT -765439092 OFFSET 1545749870; -- 1ms;
SELECT MAX(((t1.c91) BETWEEN (t1.c91) AND (t1.c91)), t1.c48) FROM t1; -- 0ms;
SELECT DISTINCT ((((((((((((((t1.c11)OR(t1.c91)))OR(t1.c11)))OR(t1.c48)))AND(t1.c11)))OR(t1.c11)))AND(t1.c11))) NOT BETWEEN (((t1.c11)*('-1e500'))) AND (CAST(t1.c48 AS TEXT))) FROM t1; -- 0ms;
SELECT ((NULLIF(DISTINCT '0.7435572777826968', t1.c11))|(t1.c11)) FROM t1 WHERE (x'') ORDER BY t1.c91, CASE WHEN (+ (x'')) THEN ((t1.c48)IS(t1.c11)) WHEN ((t1.c11)LIKE(t1.c91)) THEN NULL COLLATE BINARY WHEN ((t1.c11)IS(t1.c11)) THEN CASE WHEN t1.c48 THEN t1.c48 END ELSE (t1.c91 IN ()) END  NULLS LAST; -- 0ms;
SELECT '1110651994' FROM t1 WHERE ((((~ ('1395179586'))) NOT NULL)) GROUP BY x'6fbd' HAVING ((((t1.c91)<(t1.c91)))IS NOT(load_extension(t1.c48)));SELECT ALL ((DATE(t1.c91, t1.c91, t1.c91)) NOT BETWEEN ((+ (x'cffadc31'))) AND ((t1.c48 IN ()))), json_patch(t1.c91, TOTAL(t1.c91)), ((((t1.c91)&(t1.c11)))>>(((t1.c11)LIKE(t1.c91)))) FROM t1; -- 0ms;
SELECT ALL AVG(((((((((t1.c11)AND(t1.c11)))OR(t1.c91)))AND(t1.c11)))OR(t1.c48)) COLLATE BINARY) OVER (), CASE WHEN t1.c11 COLLATE BINARY THEN ((((t1.c11)OR(t1.c48)))AND(t1.c11)) END, ((((t1.c91)>=(t1.c48))) IS TRUE), t1.c11, COUNT(*) FROM t1 WHERE (((((((((('638597227' IN ()))OR((- (x'')))))OR(CASE 0.9974077875372581  WHEN x'7553' THEN 'KLIGp8Yf' END)))OR((('0.6388008018954286')|('')))))AND(((NULL) BETWEEN (x'') AND (0xfffffffff0a18f72))))); -- 0ms;
SELECT CASE t1.c48  WHEN t1.c48 THEN t1.c11 WHEN t1.c48 THEN t1.c91 WHEN t1.c91 THEN t1.c11 END COLLATE NOCASE FROM t1 WHERE ((~ ((((388301932, x'f335', x'2766'))<>((x'', NULL, x'466535a7')))))); -- 0ms;
SELECT DISTINCT (+ (((t1.c48) NOT NULL))) FROM t1 ORDER BY (((t1.c11)) NOT BETWEEN ((CAST(t1.c48 AS INTEGER))) AND ((t1.c11 COLLATE RTRIM)))  NULLS LAST LIMIT -1797666670 OFFSET 1694615715; -- 0ms;
SELECT ALL CASE WHEN ((t1.c48) NOTNULL) THEN (((((((('{}')OR(1)))OR(x'35a0')))OR(t1.c48)))OR(t1.c11)) END FROM t1 WHERE (CAST('1186520534' AS REAL) COLLATE BINARY); -- 3ms;
SELECT DISTINCT (((t1.c91 IN ()))>>(0.42475776089650596)) FROM t1; -- 0ms;
SELECT CASE t1.c91  WHEN t1.c48 THEN t1.c48 WHEN 0.04168475908627778 THEN t1.c91 WHEN t1.c91 THEN t1.c11 WHEN t1.c48 THEN t1.c91 WHEN t1.c11 THEN t1.c48 END COLLATE NOCASE, ((t1.c11)AND(t1.c91)) COLLATE NOCASE, AVG(((t1.c11)GLOB(t1.c48))) OVER () FROM t1 WHERE ((('>xF)')+(0xffffffffaaf5bfa3)) COLLATE RTRIM); -- 1ms;
SELECT TOTAL((((t1.c48)) BETWEEN ((t1.c91)) AND ((t1.c11)))) FILTER(WHERE t1.c11) OVER ( GROUPS  CURRENT ROW EXCLUDE TIES) FROM t1 LIMIT -1851698515 OFFSET -2076513156; -- 0ms;
SELECT DISTINCT ((((t1.c48)>=(t1.c48))) NOT BETWEEN (CASE WHEN t1.c11 THEN t1.c91 WHEN t1.c91 THEN t1.c48 WHEN t1.c11 THEN t1.c11 END) AND (((((t1.c11)AND(t1.c48)))AND(t1.c48)))) FROM t1; -- 0ms;
SELECT ALL ((CASE t1.c91  WHEN t1.c48 THEN t1.c11 ELSE t1.c48 END) BETWEEN (UPPER(t1.c11)) AND (t1.c11 COLLATE NOCASE)), MIN(CASE t1.c11  WHEN t1.c11 THEN t1.c48 END), ((((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c11))) ISNULL) FROM t1 WHERE (CAST(CASE '1882352995'  WHEN '866982284' THEN x'' ELSE '386019206' END AS REAL)); -- 0ms;
SELECT DISTINCT CAST(CAST(t1.c11 AS INTEGER) AS INTEGER) FROM t1 GROUP BY CASE x'7744'  WHEN t1.c48 THEN t1.c91 WHEN t1.c91 THEN t1.c48 WHEN t1.c11 THEN t1.c48 ELSE t1.c91 END COLLATE RTRIM, (((t1.c48)) BETWEEN (('')) AND ((CASE t1.c11  WHEN x'' THEN t1.c91 WHEN t1.c48 THEN t1.c48 WHEN t1.c91 THEN 'hDS_⾆' ELSE t1.c48 END))), CAST(0.1274987104247174 AS REAL), ((((t1.c91 COLLATE NOCASE)OR((t1.c91 IN ()))))OR(CASE WHEN t1.c11 THEN t1.c11 ELSE t1.c11 END)), '0.9912205086582746' HAVING t1.c91 COLLATE NOCASE LIMIT -12253828; -- 0ms;
SELECT DISTINCT CASE WHEN x'' THEN ((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c48)) WHEN (+ (t1.c11)) THEN CASE WHEN t1.c11 THEN '-2121641832' ELSE t1.c11 END WHEN ((((((((t1.c91)OR(t1.c11)))OR(t1.c11)))AND(x'')))OR(x'a325')) THEN (NOT (t1.c48)) END FROM t1; -- 2ms;
SELECT DISTINCT json_valid(((t1.c11) NOTNULL)) FROM t1 GROUP BY CAST(t1.c91 AS INTEGER) COLLATE BINARY; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN t1.c91 THEN t1.c91 END) FILTER(WHERE (((((((((('-1850096833')<>(t1.c48)))AND(((t1.c91)!=(t1.c11)))))AND((((t1.c48, t1.c91, t1.c91)) NOT BETWEEN ((t1.c48, t1.c11, t1.c48)) AND ((t1.c48, t1.c91, NULL))))))AND(NULLIF(t1.c11, t1.c48))))AND(CAST(t1.c11 AS BLOB)))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT CAST(NULL AS TEXT) FROM t1 WHERE ((('80026454') BETWEEN (NULL) AND (x'')) COLLATE NOCASE) LIMIT -300723149 OFFSET 977688935; -- 0ms;
SELECT ALL (((~ (t1.c48))) IS TRUE) FROM t1 WHERE (((((0.04847695563436205 IN ()), ((x'7b069391')>(x'')), (('-113268936') IS FALSE)))<(((+ (x'')), CASE ''  WHEN -56094634 THEN x'' WHEN x'' THEN 0.897322366007936 WHEN 0.34418121785425937 THEN -1.54706149E9 END, ((-2.71245931E8)<<(NULL)))))); -- 0ms;
SELECT DISTINCT (((t1.c91)) NOT BETWEEN ((((t1.c91)AND(t1.c11)))) AND (((+ (t1.c48))))) FROM t1 NOT INDEXED WHERE (((((0.7435572777826968)<(NULL))) ISNULL)) GROUP BY (CASE t1.c91  WHEN t1.c48 THEN t1.c11 END IN ()), TIME((~ (t1.c11)), NULL, ((t1.c48)<(t1.c11))), x'6cee'; -- 0ms;
SELECT DISTINCT '' FROM t1; -- 1ms;
SELECT ALL ((t1.c48 COLLATE NOCASE)<<(TOTAL(t1.c91))), GROUP_CONCAT(COUNT(*)), ((LTRIM(t1.c11, x''))<=(((t1.c11) IS TRUE))) FROM t1 WHERE (((((('979135924'))==((NULL))))GLOB(-1.79766667E9 COLLATE RTRIM)));SELECT ALL ROW_NUMBER() OVER () FROM t1; -- 0ms;
SELECT DISTINCT t1.c91 FROM t1 WHERE (json_object('492645455' COLLATE RTRIM, (~ ('XG')))); -- 0ms;
SELECT DISTINCT ((((x'')AND(t1.c48)))OR(t1.c11)) COLLATE BINARY FROM t1 NOT INDEXED WHERE ((((NULL IN ('}鎘')))>=('1891187127'))) ORDER BY ((CAST(t1.c91 AS REAL))|((t1.c91 IN ()))) ASC; -- 0ms;
SELECT (((((((((((t1.c48, t1.c48, t1.c48)) BETWEEN ((t1.c48, t1.c91, t1.c91)) AND ((t1.c91, t1.c91, x'6976'))))OR(t1.c91)))AND(t1.c48 COLLATE BINARY)))OR((~ (t1.c91)))))OR(((t1.c11)IS(t1.c91)))) FROM t1 WHERE (((CASE NULL  WHEN 0.3533478349961483 THEN 0x2ce8f8d9 ELSE 'A䉜!	Bn^㙕' END)AND(('' IN ())))); -- 1ms;
SELECT ALL ((LIKELY(t1.c48))<(CASE t1.c91  WHEN t1.c48 THEN t1.c48 WHEN t1.c11 THEN t1.c91 WHEN t1.c11 THEN t1.c48 END)), CAST(((t1.c48)=(t1.c91)) AS NUMERIC), json_insert(CAST(NULL AS NUMERIC), ((t1.c91) ISNULL), CASE WHEN t1.c11 THEN t1.c91 WHEN t1.c11 THEN t1.c11 WHEN t1.c48 THEN x'' ELSE t1.c48 END, t1.c48 COLLATE NOCASE, (NOT (t1.c91))) FROM t1 WHERE (CAST((-300723149 IN ()) AS TEXT)) GROUP BY ((((((((t1.c11)OR(t1.c48)))OR(t1.c48)))OR(CAST(t1.c48 AS TEXT))))OR(((t1.c11) NOTNULL))) HAVING t1.c11 ORDER BY (((t1.c48) NOT NULL) IN ()), (+ (CASE WHEN t1.c11 THEN t1.c91 END)) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((t1.c11, t1.c11, t1.c91))!=((t1.c11, t1.c11, t1.c91)))) BETWEEN (GROUP_CONCAT(t1.c91)) AND ((- (t1.c91)))), CAST(t1.c91 COLLATE BINARY AS NUMERIC), TRIM(DISTINCT NULL) FROM t1; -- 0ms;
SELECT ALL MAX(AVG(((((t1.c48)AND(t1.c91)))OR(t1.c48)))) FROM t1;SELECT DISTINCT CAST((((t1.c91))!=((t1.c11))) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(CAST(t1.c91 AS INTEGER)), GROUP_CONCAT((((t1.c91)) NOT BETWEEN ((t1.c48)) AND ((t1.c48)))) OVER (), (((t1.c48, t1.c91, t1.c48, t1.c91, t1.c91)) NOT BETWEEN ((((((((((((((t1.c11)AND(t1.c91)))OR('-1094112634')))OR(t1.c91)))AND('')))AND(t1.c48)))AND(t1.c11)), (('0.13641774653953753') BETWEEN (t1.c91) AND (t1.c91)), t1.c91 COLLATE BINARY, ((t1.c11)+(t1.c11)), (~ (t1.c91)))) AND ((CASE 'd'  WHEN t1.c91 THEN t1.c48 END, (((t1.c11))>((t1.c91))), (t1.c48 IN ()), t1.c91 COLLATE RTRIM, ((t1.c91) ISNULL)))) FROM t1 WHERE (CASE WHEN (('-771034062')GLOB('0.8207535303292182')) THEN ('0.7224308912363068' IN (x'1692', '1186630578')) END); -- 0ms;
SELECT DISTINCT t1.c91, (AVG(0.8045446780344122) IN (t1.c91 COLLATE BINARY, TOTAL(t1.c48))), json_quote(t1.c91) COLLATE BINARY FROM t1; -- 0ms;
SELECT ((~ (t1.c48)) IN ()) FROM t1 WHERE (((CAST('592955110' AS BLOB)) ISNULL)); -- 0ms;
SELECT DISTINCT -1.726125112E9 FROM t1 ORDER BY ((((((((((4.09806282E8)>>(t1.c91)))OR((t1.c11 IN ()))))OR(((((t1.c11)AND(t1.c11)))OR(t1.c91)))))OR(ROUND(t1.c91, t1.c48))))AND(LIKELY(DISTINCT t1.c11))) DESC; -- 0ms;
SELECT ALL (((((t1.c11)/(t1.c91))))=(((((t1.c91, t1.c11, t1.c48, t1.c11, t1.c11)) BETWEEN ((t1.c11, t1.c11, t1.c48, t1.c91, t1.c91)) AND ((t1.c11, t1.c11, t1.c91, t1.c48, t1.c11)))))), (~ ((- (t1.c11)))), ((((t1.c11)AND(t1.c91))) BETWEEN (CAST('-1944942736' AS BLOB)) AND ((t1.c91 IN ()))) FROM t1 WHERE ((((((((((((((((('U[')OR('985383147')))OR(0.41379490466681756)))AND(CAST('+i<gN' AS INTEGER))))OR((((0.08993339037332548, NULL, 'i6')) BETWEEN (('-2372033', 1.495824179E9, NULL)) AND (('7R<?.xdH', x'e49b', x''))))))OR(((0.44185781939157176)LIKE(0.9189339623964492)))))AND(NULL)))AND((('n') IS TRUE))))OR(((1670001285)>=(x'53bb'))))) LIMIT 386019206; -- 0ms;
SELECT ALL MIN(((t1.c48) NOT BETWEEN (t1.c48) AND (t1.c11))) FROM t1 WHERE (CASE WHEN json_object('!8匨LrHu', 0.08877474112779571) THEN ((x'c417') BETWEEN (x'5a2f') AND (NULL)) ELSE 0.358962662343562 COLLATE BINARY END) LIMIT -321439706; -- 0ms;
SELECT ALL ((CASE t1.c48  WHEN t1.c11 THEN t1.c91 WHEN t1.c48 THEN t1.c11 WHEN t1.c48 THEN t1.c91 WHEN t1.c91 THEN t1.c11 WHEN t1.c11 THEN t1.c11 ELSE t1.c11 END) NOT BETWEEN (((t1.c91) NOT BETWEEN (t1.c48) AND (t1.c11))) AND (((((((((t1.c11)AND(t1.c11)))AND(t1.c11)))AND(t1.c91)))OR(0Xfffffffff8267f8b)))), (((((+ (t1.c91)))AND(((((t1.c48)OR(t1.c91)))OR(t1.c48)))))OR(NULL)), ((((t1.c91)-(t1.c48))) NOT NULL) FROM t1 WHERE (((('_vC슚mMO(' IN (-2.57847438E8))) BETWEEN ((0.7629524360616002 IN ())) AND ((('-1649419412') BETWEEN (5.9295511E8) AND (NULL))))); -- 0ms;
SELECT DISTINCT ((t1.c91) IS FALSE) COLLATE NOCASE FROM t1 LIMIT -450709647; -- 0ms;
SELECT DISTINCT ((t1.c91 COLLATE NOCASE) NOT NULL), ((((((t1.c91)||(t1.c91)))OR(CAST(t1.c48 AS TEXT))))AND(((t1.c91)+(0.3145555012326037)))), GROUP_CONCAT(CASE WHEN t1.c48 THEN t1.c11 WHEN t1.c11 THEN t1.c48 WHEN t1.c91 THEN t1.c48 ELSE t1.c91 END) FROM t1 WHERE (CASE WHEN NULL THEN '0.7224308912363068' END COLLATE RTRIM) GROUP BY CASE WHEN ((((((((t1.c48)AND(t1.c48)))OR(t1.c11)))AND(t1.c91)))OR(t1.c11)) THEN CAST(t1.c48 AS REAL) WHEN t1.c11 COLLATE NOCASE THEN ((t1.c48) NOTNULL) WHEN (((t1.c48, t1.c11, t1.c11))==((t1.c91, t1.c11, t1.c48))) THEN ((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c48)) END HAVING CASE WHEN 'Q' THEN t1.c11 WHEN t1.c48 THEN t1.c11 WHEN t1.c11 THEN t1.c48 ELSE t1.c11 END COLLATE RTRIM; -- 1ms;
SELECT DISTINCT ((((t1.c91)<=(t1.c91)))AND(x'')), (((((((((- (t1.c48)))AND(((0.7862272095554141)<=(t1.c11)))))AND(TOTAL(t1.c91))))AND((~ (t1.c91)))))OR(NULLIF(DISTINCT t1.c11, t1.c48))), ((t1.c48 COLLATE RTRIM)<=(CASE t1.c11  WHEN t1.c91 THEN t1.c11 ELSE t1.c11 END)) FROM t1 GROUP BY CAST((- (t1.c11)) AS TEXT); -- 0ms;
SELECT DISTINCT ((((t1.c11)>=(t1.c91)))<=(((t1.c91) NOTNULL))), t1.c11, (((+ (t1.c48))) NOT BETWEEN (x'') AND ((t1.c11 IN ()))) FROM t1 WHERE (((((CASE 0.5090599483365575  WHEN -219150272 THEN 0.8132272007618975 ELSE '\nEỆGi27CA' END)AND('0.6101315620595978')))OR(LIKELIHOOD('(?K', 0.48148973013839513)))) GROUP BY t1.c11, CAST(((t1.c11)==(t1.c11)) AS NUMERIC), (((t1.c91)) NOT BETWEEN ((t1.c11 COLLATE BINARY)) AND ((CASE t1.c11  WHEN t1.c11 THEN t1.c48 ELSE t1.c48 END))) HAVING (CAST(t1.c91 AS REAL) IN ()); -- 0ms;
SELECT ALL CASE WHEN (((t1.c11))>=((t1.c11))) THEN ((t1.c91) IS FALSE) END, NULL, ((((t1.c48)OR(('-1834822749' IN (t1.c91)))))OR((~ (t1.c48)))) FROM t1; -- 0ms;
SELECT DISTINCT json_array_length(((((t1.c11)AND(t1.c91)))OR(x'253c')), CAST(t1.c11 AS INTEGER)) FROM t1 WHERE ((+ (((x'3e4c')LIKE(NULL))))); -- 0ms;
SELECT ALL UPPER(CASE WHEN t1.c48 THEN t1.c11 END) FROM t1 GROUP BY (((((((((((t1.c91)AND(t1.c11)))AND(x'')))AND(t1.c91)))OR(t1.c48)), 0.16328834861033614, (+ (-1.936357745E9))))>(((((0.4652538314257846, t1.c11, t1.c11))<=((NULL, t1.c48, t1.c91))), 'Bv帘,?''', CAST(t1.c11 AS REAL)))); -- 0ms;
SELECT ALL (~ (((t1.c11)-(t1.c91)))), ((t1.c11)=(0.16485339601474447)) COLLATE RTRIM, MIN(((t1.c11) NOT BETWEEN (t1.c11) AND (t1.c91)), CASE WHEN t1.c48 THEN t1.c11 END, ((t1.c91) BETWEEN (t1.c48) AND (t1.c11)), ((t1.c48) NOT BETWEEN (t1.c48) AND (t1.c48)), (- (t1.c91)), ABS(DISTINCT t1.c48)) FROM t1; -- 0ms;
SELECT ALL CASE WHEN ((t1.c11) BETWEEN ('1895993128') AND (t1.c11)) THEN ((t1.c11)>(t1.c48)) ELSE ((((((((t1.c11)AND(t1.c11)))OR(x'ca57')))AND(t1.c11)))OR(t1.c48)) END FROM t1; -- 0ms;
SELECT 0X0 FROM t1 WHERE (CASE CAST(0xfffffffff75cd615 AS NUMERIC)  WHEN -1.79766667E9 THEN x'370f' COLLATE RTRIM ELSE '1882352995' COLLATE NOCASE END); -- 0ms;
SELECT DISTINCT SUM(((t1.c48)>>(t1.c91))) OVER () FROM t1; -- 0ms;
SELECT ALL ((((t1.c48)>(t1.c48))) BETWEEN (((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c48))) AND ((~ (t1.c11)))), (+ (CASE t1.c48  WHEN t1.c11 THEN t1.c48 ELSE t1.c11 END)), ((t1.c48)>=(t1.c11)) COLLATE BINARY FROM t1 WHERE (((((0.9582787990005092) NOT BETWEEN ('-1207381194') AND ('1405917889'))) NOT BETWEEN ((1.641960331E9 IN (x'e90b', x''))) AND (CAST(0.5802351082040034 AS REAL)))); -- 0ms;
SELECT PERCENT_RANK() OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((t1.c11) NOTNULL) COLLATE NOCASE, (((((t1.c11, t1.c48, t1.c48))>=((t1.c48, t1.c48, 0.5095787142828263))))>((- (t1.c91)))), GROUP_CONCAT(LIKELIHOOD(DISTINCT t1.c11, 0.011889896720124082)) FROM t1; -- 0ms;
SELECT DISTINCT (+ (t1.c48)) FROM t1; -- 0ms;
SELECT DISTINCT RANK() OVER () FROM t1 LIMIT 1239978283 OFFSET -2130424414; -- 0ms;
SELECT DISTINCT (((((t1.c11)<(t1.c91))))<((UPPER(t1.c48)))) FROM t1 WHERE ((((((((x''))>((x'2c81'))))OR(HEX(DISTINCT 0.42784649706495836))))OR(LIKE('-2002218366', '1206459947', 'K')))); -- 0ms;
SELECT FIRST_VALUE(x'') OVER () FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c91)>(t1.c48)))+(((((t1.c48)OR(t1.c48)))OR(t1.c48)))), (((t1.c48 IN ())) NOTNULL), CAST(((t1.c48)-(t1.c48)) AS NUMERIC) FROM t1 WHERE ((((CAST(x'' AS INTEGER), NULL COLLATE BINARY, ((('-1035505351'))<=((0.5893228751914171)))))>((((2003019932) ISNULL), (((x'')) BETWEEN ((0.22999152667092926)) AND ((0x1a1e2256))), CASE WHEN NULL THEN 1706681836 END)))) ORDER BY -1601456429;SELECT (((t1.c48) IS TRUE) IN (t1.c91)) FROM t1 WHERE (((CASE '1508951056'  WHEN '' THEN 0.08036324203428535 WHEN '1495803082' THEN '252999250' WHEN '2031963003' THEN -703728282 END)AND(((x'')==(0.6101315620595978))))) LIMIT 1093102139 OFFSET -2030674116; -- 0ms;
SELECT DISTINCT t1.c91 FROM t1 ORDER BY (((t1.c11)) NOT BETWEEN (((t1.c48 IN ()))) AND ((((t1.c91)LIKE(t1.c11)))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(t1.c11)  WHEN t1.c91 THEN t1.c91 COLLATE NOCASE END FROM t1 WHERE ((((('' COLLATE BINARY)OR(((('979135924')) BETWEEN ((0.07693387495849602)) AND ((-2.091451144E9))))))OR(CAST('-9223372036854775808' AS NUMERIC)))); -- 0ms;
SELECT ALL CAST((t1.c91 IN (-2372033.0, t1.c91)) AS TEXT), AVG(((((t1.c48)OR(t1.c91)))AND(0.14428695559951343))), LOWER(DISTINCT CASE WHEN NULL THEN t1.c11 WHEN t1.c48 THEN t1.c91 WHEN t1.c11 THEN t1.c91 ELSE t1.c11 END) FROM t1; -- 0ms;
SELECT DISTINCT 0.44540853366520117 FROM t1; -- 1ms;
SELECT DISTINCT (('0.15739719938440977')<=((t1.c11 IN ()))) FROM t1 GROUP BY (((((t1.c48)&(t1.c91))))<=((((t1.c11)GLOB(t1.c91))))), (NOT (t1.c91)), (NOT (json_insert(t1.c11, '970813245', t1.c11, '᣼I', t1.c91))), ((LAST_INSERT_ROWID()) BETWEEN (CAST(t1.c48 AS BLOB)) AND (((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c48)))), CAST((((t1.c11, t1.c11, t1.c91)) BETWEEN ((t1.c48, t1.c11, t1.c11)) AND ((t1.c91, t1.c91, t1.c91))) AS INTEGER);SELECT ALL ((((((((TOTAL(t1.c91))AND(((t1.c11) NOT BETWEEN (t1.c91) AND (t1.c91)))))AND(((t1.c91)-(t1.c91)))))OR(((t1.c48) BETWEEN (t1.c11) AND (t1.c91)))))OR((((-3.00723149E8, '', t1.c91))<>((t1.c11, t1.c11, t1.c48))))) FROM t1 WHERE ((((0.6062832567129732 IN ())) NOT BETWEEN ('~*BA') AND ((('TRUE') BETWEEN (0.6028809476017404) AND (''))))) GROUP BY ((HEX(DISTINCT x'')) NOTNULL) HAVING COALESCE(DISTINCT ((t1.c48) ISNULL), x''); -- 0ms;
SELECT DISTINCT ((((t1.c11)<=(t1.c11)))*(SUM('-1772195534'))), ((((t1.c11) NOTNULL)) NOTNULL), ((((t1.c91) ISNULL)) BETWEEN (-1.726125112E9) AND (((t1.c11) NOT BETWEEN (t1.c11) AND (t1.c91)))), t1.c91, t1.c48 FROM t1 WHERE (((((0.8585624879202991)==(0xffffffff94236ffe))) BETWEEN (NULL COLLATE RTRIM) AND (((x'')+(''))))); -- 0ms;
SELECT DISTINCT CAST(((t1.c48) ISNULL) AS BLOB) FROM t1 WHERE (LIKELIHOOD(DISTINCT ((0.004828457908127581)GLOB(x'cde9')), 0.5512527877493365)) GROUP BY (+ (ABS(DISTINCT t1.c11))); -- 0ms;
SELECT ((CAST(t1.c91 AS REAL))IS NOT((~ (t1.c91)))) FROM t1 ORDER BY (((CAST(t1.c11 AS NUMERIC)))<=((CASE x''  WHEN t1.c91 THEN t1.c48 END)))  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((t1.c91) NOT BETWEEN (((t1.c11) NOT BETWEEN (x'') AND (x''))) AND (((t1.c48)<=(x'')))), COALESCE(t1.c11, t1.c48) COLLATE BINARY COLLATE RTRIM, ((t1.c91 COLLATE NOCASE)*(x'')), ((CAST(t1.c48 AS TEXT)) BETWEEN (((t1.c11) BETWEEN (2.002810813E9) AND (t1.c48))) AND (((t1.c11) NOT BETWEEN (t1.c11) AND (t1.c11)))), '靭9' FROM t1 WHERE (x''); -- 0ms;
SELECT ALL ((x'dc5c' COLLATE BINARY)-(CAST(x'' AS BLOB))), TOTAL(((t1.c11)LIKE(t1.c91))) OVER (), CUME_DIST() OVER () FROM t1; -- 0ms;
SELECT AVG(((t1.c48) NOTNULL)) OVER () FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c48)) IN ()) FROM t1 WHERE (((((((((((x'')*(NULL)))OR(CAST(0.4166767065687681 AS INTEGER))))OR(NULL)))OR(CAST(0.982223674189455 AS BLOB))))AND((('9tB8') BETWEEN (0.4770963727841362) AND (x''))))) LIMIT -1776787233 OFFSET 1902947087; -- 0ms;
SELECT ALL CAST((((t1.c48)) BETWEEN ((t1.c11)) AND ((t1.c91))) AS NUMERIC), (((TOTAL(t1.c91), ((t1.c48) IS FALSE), (('᣼I')IS NOT(t1.c91))))<=(((((t1.c11, t1.c48, t1.c11))>((t1.c11, -2142917074, t1.c91))), '0.15739719938440977', t1.c91))), HEX(DISTINCT (t1.c48 IN ())) FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c11 IN ())) NOTNULL) FROM t1 WHERE (CASE NULLIF('-189587483', -1.214950374E9)  WHEN x'' THEN ((0.37886838444492377)>=(0.4240830845043043)) ELSE HEX(x'') END) ORDER BY CAST((t1.c91 IN ()) AS INTEGER) ASC  NULLS LAST, 0xffffffffafd5d06e ASC  NULLS LAST; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t1; -- 0ms;
SELECT ALL ((MIN(t1.c11))-(NULL)) FROM t1; -- 0ms;
SELECT DISTINCT CAST((- (t1.c48)) AS INTEGER) FROM t1; -- 0ms;
SELECT ALL -1300850657 FROM t1 WHERE ((+ ('0.9137218013028195'))) ORDER BY ((TYPEOF(DISTINCT t1.c48))>=(CASE WHEN t1.c11 THEN t1.c11 ELSE t1.c91 END)); -- 0ms;
SELECT DISTINCT t1.c11 FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c91)) BETWEEN (((((t1.c91))>((t1.c91))))) AND ((NULL))) FROM t1 INDEXED BY i68 ORDER BY ((CASE WHEN t1.c11 THEN NULL END) NOT NULL)  NULLS LAST;SELECT DISTINCT CASE (((t1.c91))>=((t1.c48)))  WHEN t1.c48 COLLATE NOCASE THEN CASE WHEN t1.c11 THEN t1.c91 ELSE t1.c48 END ELSE ((t1.c11)GLOB(t1.c91)) END FROM t1; -- 0ms;
SELECT ALL TOTAL(((t1.c11) NOT BETWEEN (t1.c91) AND (0.6715500093152615))) FROM t1; -- 1ms;
SELECT DISTINCT CASE t1.c91 COLLATE NOCASE  WHEN (((t1.c11)) NOT BETWEEN ((t1.c11)) AND ((t1.c48))) THEN ((t1.c48) BETWEEN (t1.c91) AND (t1.c91)) WHEN COUNT(*) THEN COALESCE(DISTINCT t1.c11, t1.c11) WHEN x'' THEN MAX(t1.c11) ELSE GROUP_CONCAT(t1.c48) END FROM t1 GROUP BY (- ((- (t1.c48)))); -- 0ms;
SELECT ALL ((MAX(t1.c11))IS((- (NULL)))) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c91)/(t1.c11))) BETWEEN (((t1.c11) NOTNULL)) AND (CAST(t1.c91 AS REAL))) FROM t1; -- 0ms;
SELECT t1.c11, COUNT(*) OVER ( RANGE  UNBOUNDED PRECEDING), ((NULL) ISNULL) FROM t1; -- 0ms;
SELECT DISTINCT ((('DH].	QHg')) NOT BETWEEN ((MIN(t1.c91))) AND (('s'))) FROM t1 WHERE (((('sZ', x'', '979135924')) BETWEEN (((1.114915143E9 IN (0.2740354223500583)), (('&')<=(0.47105258252356286)), CAST(NULL AS INTEGER))) AND ((((NULL)<=(x'12a6')), x'bf1e' COLLATE BINARY, (0.6627021005751241 IN ()))))); -- 0ms;
SELECT (('-1894620895')*(((t1.c11)+(x'0b4e')))) FROM t1; -- 0ms;
SELECT ALL TOTAL(t1.c48) FROM t1; -- 0ms;
SELECT DISTINCT MAX(t1.c48) FROM t1 WHERE ((~ ((('穿W쐐''F*6B6') NOTNULL)))) ORDER BY (((((t1.c11))==((t1.c91))))%(CAST(t1.c91 AS REAL)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT t1.c48 COLLATE BINARY FROM t1 WHERE ((NOT (((0Xffffffff90928f01) ISNULL)))); -- 0ms;
SELECT ALL ((COALESCE(t1.c11, t1.c91))<=(((t1.c91)IS NOT(t1.c91)))), ((t1.c11) NOT BETWEEN ((t1.c11 IN ('fWDghQ1?9', t1.c11))) AND (SUM(t1.c48))), ABS(DISTINCT ((t1.c91) BETWEEN (NULL) AND (t1.c48))) FROM t1 LIMIT 269544255 OFFSET -257847438; -- 0ms;
SELECT DISTINCT ((TOTAL(t1.c48))LIKE(LIKE(t1.c11, t1.c91))), 'months\Z', LIKELIHOOD(LIKELIHOOD(t1.c11, 0.8493923743417521), 0.9094992506982774) FROM t1 WHERE (CHANGES()); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( PARTITION BY ((t1.c11 COLLATE BINARY) NOT BETWEEN (((t1.c11) IS TRUE)) AND ((((t1.c91)) NOT BETWEEN ((t1.c11)) AND ((t1.c91))))), (((~ (t1.c91)))<=(((t1.c11) BETWEEN (t1.c48) AND (t1.c91)))), (((((- ('\rKa뭠j')))AND(((t1.c11) ISNULL))))AND(CAST(t1.c91 AS BLOB))), ((((((((((t1.c91)OR(t1.c48)))AND(t1.c11)))OR(t1.c48)))OR(t1.c48))) NOT NULL)) FROM t1 ORDER BY CAST(CAST(t1.c11 AS TEXT) AS BLOB) DESC; -- 1ms;
SELECT DISTINCT MAX(((((t1.c48)OR(NULL)))AND(t1.c91))) FROM t1 WHERE (((CASE WHEN '-991581251' THEN 'sz' ELSE '}*' END)|((~ ('1239978283'))))); -- 0ms;
SELECT ALL ((((t1.c48)AND(t1.c48)))OR(t1.c48)) COLLATE BINARY FROM t1 WHERE (x''); -- 0ms;
SELECT DISTINCT ((((t1.c91, t1.c48, t1.c91, t1.c91, t1.c91)) NOT BETWEEN ((t1.c11, t1.c91, t1.c48, x'', t1.c11)) AND ((t1.c91, t1.c91, t1.c11, t1.c11, t1.c91))) IN ()), COUNT(*), CASE ((t1.c11)>=(t1.c91))  WHEN ((t1.c11)||(t1.c11)) THEN CASE WHEN t1.c48 THEN t1.c91 ELSE t1.c48 END ELSE ((t1.c48)<>(t1.c91)) END, AVG(((t1.c11) NOT BETWEEN (t1.c48) AND (t1.c11))), MAX(((t1.c48) NOT BETWEEN (t1.c91) AND (t1.c48))) FROM t1 WHERE ((('-456131558' COLLATE BINARY)IS(LOWER(DISTINCT '')))) LIMIT 991870561 OFFSET 23822151; -- 0ms;
SELECT DISTINCT (((((t1.c91))=((t1.c11))))>>(t1.c91)) FROM t1 WHERE (LIKELY('-1649419412')); -- 0ms;
SELECT DISTINCT (((~ (t1.c11)))OR(CHANGES())), COUNT((((t1.c11)) BETWEEN ((t1.c11)) AND ((t1.c11))) COLLATE RTRIM), 0Xffffffff868a81bb, CAST(CASE t1.c48  WHEN t1.c48 THEN t1.c91 WHEN t1.c91 THEN t1.c11 WHEN t1.c91 THEN t1.c48 ELSE t1.c11 END AS INTEGER), MIN(((t1.c91)=(t1.c48))), (('') NOT NULL), (TOTAL(t1.c48) IN ()) FROM t1 WHERE (CASE WHEN TRIM(-1944942736) THEN 'G8' COLLATE RTRIM END); -- 1ms;
SELECT DISTINCT ((CASE t1.c48  WHEN t1.c48 THEN t1.c48 END)IS((t1.c91 IN ()))) FROM t1 WHERE ((((((('1605657821')>(x'c7d2b75e')))AND(((((NULL)OR(NULL)))OR('')))))AND(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT (((t1.c91, 0x50a91bd9, t1.c11)) BETWEEN ((((t1.c48) IS TRUE), CAST(t1.c91 AS REAL), AVG(t1.c11))) AND (((t1.c48 IN ()), (+ (t1.c11)), TRIM(DISTINCT t1.c11, '-120551675')))) FROM t1 WHERE (0.6697477561011439); -- 0ms;
SELECT DISTINCT (((((t1.c48 IN ()))OR((t1.c11 IN ()))))AND((t1.c11 IN (t1.c48)))), ((((t1.c48) ISNULL)) NOT NULL), ((((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c11))) BETWEEN (MIN(t1.c91)) AND (((t1.c91)<<(t1.c11)))) FROM t1 WHERE (json_insert((NOT (0x2b1af8c0)), NULL, LIKELY(DISTINCT x''), json_insert(0.3732239750031938, 0X4e61984d, x'3bdf'), 'D彘' COLLATE NOCASE));SELECT DISTINCT ((t1.c48) ISNULL), (((((t1.c11)) NOT BETWEEN ((t1.c11)) AND ((t1.c48)))) NOT BETWEEN ((((('1114915143')AND(t1.c11)))OR(x'a800'))) AND ((((t1.c11))<=((t1.c48))))), (((- (t1.c91)))!=(ABS(t1.c91))) FROM t1; -- 1ms;
SELECT ((t1.c11)%((((t1.c91, t1.c11, t1.c48, '-337676907', t1.c11))<>((t1.c48, t1.c91, t1.c91, t1.c48, t1.c48))))) FROM t1; -- 0ms;
SELECT DISTINCT '1495803082' FROM t1; -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER ( ORDER BY CASE (+ (t1.c91))  WHEN ((NULL)/(x'130b')) THEN t1.c91 END, x''), t1.c11, json_remove(GROUP_CONCAT(t1.c48), t1.c91, (t1.c91 IN ()), CAST(t1.c91 AS BLOB)) FROM t1 WHERE ((((((- (0.020586065509809792)))OR(((0.533352639550858)>=('-337676907')))))OR(CASE WHEN x'' THEN 0.2898453810919611 END)));SELECT ALL PERCENT_RANK() OVER ( ORDER BY CASE WHEN ((t1.c91) IS TRUE) THEN ((t1.c48) NOTNULL) ELSE STRFTIME(t1.c91, t1.c91, t1.c48) END), (((NOT (t1.c91))) NOT NULL), ((json_patch(t1.c11, t1.c48))-(((t1.c11) BETWEEN (t1.c91) AND (t1.c48)))) FROM t1 WHERE (((LTRIM(NULL)) ISNULL)) ORDER BY ('-921319019' IN ()); -- 1ms;
SELECT DISTINCT COUNT(*), (NOT ((~ (0.4434875813323399)))), ((((((t1.c48)AND(-1.791233357E9)))AND(t1.c11)))+(t1.c48)) FROM t1 WHERE ((+ (CAST(NULL AS REAL)))); -- 0ms;
SELECT (NOT (('{c''' IN ('|R', t1.c11)))), ((t1.c48 IN ()) IN ()), (+ (MAX(t1.c48))) FROM t1 GROUP BY (((t1.c91 IN ())) NOT BETWEEN ((NOT (t1.c48))) AND (CASE WHEN '103309057' THEN NULL WHEN t1.c11 THEN t1.c91 WHEN t1.c11 THEN t1.c11 END)), (((t1.c48) BETWEEN (t1.c48) AND (t1.c91)) IN ()), '1785983564'; -- 0ms;
SELECT DISTINCT (((((~ (t1.c91)))AND(json(t1.c48))))AND(CASE t1.c11  WHEN t1.c91 THEN t1.c91 ELSE t1.c48 END)) FROM t1; -- 0ms;
SELECT DISTINCT t1.c11, t1.c91, ((t1.c11)==(t1.c11)) COLLATE RTRIM FROM t1 WHERE (TRIM(0.6030576116295576) COLLATE RTRIM) LIMIT 1281732128 OFFSET -980932215; -- 0ms;
SELECT ALL ((x'cd1b')OR(ABS('-1505094780'))), ((((((((((t1.c91)AND(t1.c11)))AND(t1.c91)))OR(t1.c91)))AND(t1.c11))) IS FALSE), ROW_NUMBER() OVER ( ORDER BY ((t1.c91) BETWEEN (t1.c11) AND (t1.c11)) COLLATE BINARY) FROM t1; -- 0ms;
SELECT CASE MAX(t1.c91)  WHEN ((t1.c91)<(t1.c48)) THEN ((t1.c48)>(t1.c91)) END FROM t1 WHERE ((((x'39f3754e')*(x'')) IN ())); -- 0ms;
SELECT AVG(NULL) FROM t1 WHERE ((((((0.45378439467214204)<=(x'391e'))))!=((((-49671715) ISNULL))))); -- 0ms;
SELECT DISTINCT (t1.c91 COLLATE RTRIM IN ()) FROM t1 WHERE (((('185302037')AND(0.10648513817540262)) IN ())); -- 0ms;
SELECT ((((((((t1.c11 COLLATE RTRIM)AND(TRIM(t1.c91, t1.c91))))AND(((t1.c11)>=(t1.c48)))))OR(GROUP_CONCAT(t1.c48))))OR(((t1.c11)IS NOT(t1.c48)))) FROM t1; -- 0ms;
SELECT DISTINCT (((CASE '711372598'  WHEN t1.c91 THEN t1.c11 END))>=(((t1.c91 IN ())))) FROM t1 WHERE ((~ (((((0.7073689861161349)AND(NULL)))OR(x''))))); -- 0ms;
SELECT DISTINCT CAST(0X10f55de7 AS NUMERIC), NULLIF('695240061', ((0.43555942995391006) BETWEEN (NULL) AND (t1.c91))), (+ (((t1.c91) IS FALSE))) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c91)||(t1.c48))) ISNULL), (('\nT迳A ') IS FALSE), TOTAL(((t1.c11) BETWEEN (t1.c11) AND (t1.c48))) OVER () FROM t1; -- 1ms;
SELECT (x'' IN (LENGTH(t1.c48))) FROM t1 WHERE (0.8700733099717074); -- 0ms;
SELECT ALL ((t1.c48)IS NOT(((((((((t1.c48)OR(t1.c11)))AND(t1.c48)))AND(t1.c91)))OR(t1.c91)))) FROM t1 WHERE (((x'')-(0.09243596148773914 COLLATE RTRIM))); -- 0ms;
SELECT CAST(t1.c48 AS NUMERIC) FROM t1 GROUP BY t1.c91 HAVING (((((((((((((+ (t1.c91)))OR(CASE WHEN t1.c11 THEN t1.c91 END)))OR(t1.c11)))OR(((t1.c11) NOT NULL))))OR(TOTAL(t1.c48))))AND(((t1.c11) BETWEEN (t1.c11) AND (t1.c11)))))OR(((t1.c11) BETWEEN (t1.c48) AND (t1.c11)))); -- 0ms;
SELECT SUM(((t1.c11)<<(t1.c48))) OVER (), CASE WHEN (t1.c11 IN ()) THEN MIN(t1.c48) ELSE '0.8015582909793876' END, NULL, COUNT(*) COLLATE RTRIM, ((t1.c48) ISNULL) FROM t1 WHERE ((NOT (((((2.51102363E8)OR('')))AND(''))))) GROUP BY ((((t1.c11)LIKE(t1.c48))) NOT BETWEEN (t1.c91 COLLATE NOCASE) AND (CAST('' AS REAL))) HAVING ((((((((((t1.c48)OR(t1.c91)))AND(t1.c11)))AND(NULL)))AND(NULL)))IS NOT(((((t1.c91)AND(t1.c48)))OR(t1.c91)))); -- 0ms;
SELECT DISTINCT ((t1.c11 IN ()) IN ()) FROM t1 WHERE ((NOT (((0.2740354223500583) NOT BETWEEN ('-1118710675') AND (NULL))))); -- 1ms;
SELECT DISTINCT ((CASE ''  WHEN t1.c91 THEN t1.c48 WHEN t1.c91 THEN t1.c48 WHEN t1.c11 THEN t1.c11 END)-(CASE WHEN t1.c11 THEN t1.c91 ELSE t1.c48 END)) FROM t1; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t1 ORDER BY JULIANDAY((t1.c91 IN ()), x'', ((t1.c48) IS FALSE)); -- 0ms;
SELECT DISTINCT (((t1.c91) NOTNULL) IN (TYPEOF(DISTINCT t1.c91))) FROM t1 WHERE ((((CASE WHEN x'' THEN 139506032 WHEN NULL THEN 0.1262597329552031 WHEN '711372598' THEN 'j|8_' END, CAST(x'' AS REAL), CAST(0.941436813853186 AS TEXT)))>((CASE ''  WHEN NULL THEN 0.002643610186085832 ELSE NULL END, ((x'')<(x'c2ef')), (- (NULL)))))); -- 0ms;
SELECT ALL GROUP_CONCAT(t1.c91), LAG(((((((t1.c91) BETWEEN (t1.c91) AND (t1.c48)))OR(CAST(t1.c11 AS INTEGER))))AND((NOT (t1.c48)))), ((json_quote(t1.c11)) ISNULL), ((((t1.c48) BETWEEN (t1.c91) AND (0xfffffffff8c76865)))>(NULL))) OVER (), CAST(COUNT(t1.c48) AS REAL) FROM t1; -- 0ms;
SELECT DISTINCT NTH_VALUE((((((((((((((t1.c91)AND(t1.c48)))AND(t1.c91)))OR(t1.c91)))AND(t1.c48)))AND(t1.c91)))AND(t1.c48)) IN ((- (t1.c91)))), (((t1.c48)) NOT BETWEEN ((((t1.c11) BETWEEN (NULL) AND (t1.c91)))) AND (((NOT (t1.c11)))))) OVER () FROM t1 WHERE (CASE '-1851698515'  WHEN (+ ('jc]')) THEN (NULL IN (x'')) ELSE (- (NULL)) END) LIMIT 547792804; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t1 WHERE ((~ ((('0.44514396234225206')AND('467064251'))))); -- 0ms;
SELECT DISTINCT CAST((((t1.c11, t1.c11, t1.c91)) NOT BETWEEN ((t1.c11, t1.c11, t1.c48)) AND ((t1.c48, t1.c11, t1.c91))) AS NUMERIC) FROM t1 LIMIT 0; -- 0ms;
SELECT DISTINCT ((t1.c91 IN ()) IN ()), CASE ((t1.c11)-(t1.c11))  WHEN '-1869443327' THEN t1.c91 END, LEAD(((CAST(t1.c11 AS INTEGER))LIKE(t1.c11)), (((t1.c11)) BETWEEN (((((t1.c91)) NOT BETWEEN ((t1.c48)) AND ((t1.c48))))) AND ((0.1553151080290035))), ((((t1.c11)AND(t1.c11)))AND(t1.c48)) COLLATE NOCASE) OVER () FROM t1 WHERE (((0.44514396234225206) BETWEEN (-4.11290113E8) AND ((('0.35776378510118034')+(NULL))))) GROUP BY (((t1.c48)) BETWEEN ((((t1.c11)*(t1.c91)))) AND ((((t1.c91) BETWEEN (t1.c91) AND (t1.c11))))), t1.c48, (((t1.c48 IN ())) BETWEEN (RTRIM(t1.c48)) AND (CASE WHEN t1.c48 THEN t1.c91 WHEN t1.c48 THEN t1.c91 WHEN t1.c48 THEN t1.c91 WHEN t1.c11 THEN t1.c11 WHEN t1.c91 THEN t1.c91 ELSE t1.c11 END)) HAVING (((t1.c48)) NOT BETWEEN ((t1.c48)) AND ((t1.c48))) COLLATE RTRIM LIMIT -867147568 OFFSET -1491680560; -- 1ms;
SELECT DISTINCT COUNT(*) OVER ( RANGE  CURRENT ROW EXCLUDE NO OTHERS), CAST(ABS(DISTINCT t1.c48) AS INTEGER), (((x'', t1.c91, (t1.c11 IN ())))<=(((NOT (t1.c11)), 0.790948201479212, ((t1.c91)==(t1.c48))))) FROM t1; -- 0ms;
SELECT ALL IFNULL(MIN(t1.c91), GROUP_CONCAT(t1.c11)) FROM t1 WHERE (((((x'b4a5') NOTNULL))>=('j|8_'))); -- 0ms;
SELECT DISTINCT t1.c11 FROM t1 WHERE ((((((((((x'')OR(x'')))AND(x'd856')))OR('ᦌ,')))OR('d')) IN ())); -- 0ms;
SELECT DISTINCT ((((t1.c48)) NOT BETWEEN ((t1.c11)) AND ((t1.c48))) IN ()) FROM t1 WHERE ((0Xa830c7f IN ()) COLLATE BINARY); -- 0ms;
SELECT DISTINCT ((t1.c48) NOT NULL) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c48))!=((t1.c91))))%(((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c91)))), COUNT((((x'f3f6'))>=((t1.c91)))), CAST(t1.c48 AS REAL) FROM t1 WHERE (CAST('' AS INTEGER)); -- 1ms;
SELECT PERCENT_RANK() OVER (), RANK() OVER (), AVG(((t1.c11)||(t1.c91))) OVER () FROM t1; -- 0ms;
SELECT DISTINCT CASE CAST(0.09896803264223675 AS REAL)  WHEN ((((((((((((t1.c48)AND(t1.c48)))OR(t1.c48)))AND(t1.c91)))OR(t1.c11)))OR(t1.c48)))AND(t1.c48)) THEN HEX(0.9147709141205652) END FROM t1 WHERE ((NOT (CASE WHEN '490892306' THEN NULL END))); -- 0ms;
SELECT (CASE WHEN t1.c91 THEN t1.c11 WHEN t1.c48 THEN t1.c48 WHEN t1.c91 THEN t1.c48 ELSE t1.c91 END IN ()) FROM t1 WHERE ((((0.6324567684475154)>=('-2083926621')) IN ())) ORDER BY CAST(t1.c11 AS TEXT) DESC; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM t1 LIMIT -56434510; -- 0ms;
SELECT t1.c48, ((((t1.c48)) NOT BETWEEN ((t1.c48)) AND (('t1.'))) IN ()), CASE WHEN t1.c11 THEN ((t1.c11)<<(t1.c91)) ELSE t1.c48 COLLATE RTRIM END FROM t1 WHERE (ABS((((0.042444961860489405))>(('\n0'))))); -- 0ms;
SELECT ((CAST(t1.c11 AS NUMERIC))OR(((t1.c11) NOT BETWEEN (t1.c48) AND (t1.c11)))) FROM t1 ORDER BY ((((((((((t1.c48)!=(t1.c48)))OR(UNLIKELY(t1.c91))))AND((NOT (x'')))))OR(LIKE(t1.c11, t1.c91, '8'))))OR((NOT (t1.c11))))  NULLS FIRST; -- 0ms;
SELECT ((((((((AVG(t1.c91))AND(LTRIM(t1.c11, t1.c48))))AND(((((t1.c11)OR(t1.c48)))AND(t1.c91)))))OR('-1368246671')))OR(NULL)) FROM t1; -- 0ms;
SELECT t1.c91 FROM t1; -- 0ms;
SELECT (((t1.c91, t1.c11, 'kX')) NOT BETWEEN ((((t1.c11) NOT BETWEEN (t1.c11) AND (t1.c91)), (((t1.c48))>=((t1.c91))), (NOT (t1.c91)))) AND ((t1.c91 COLLATE BINARY, ((t1.c11) ISNULL), (((t1.c11)) BETWEEN (('\r)')) AND ((t1.c48)))))) FROM t1; -- 0ms;
SELECT ((((t1.c91)&(t1.c91)))<<((t1.c91 IN ()))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c91, MAX((0.7958793685085096 IN (t1.c91))) COLLATE BINARY, 0.2502302770890944 FROM t1 WHERE (((((0.3875171507504962)>>(1.234585709E9)))%('-1851698515'))); -- 0ms;
SELECT ALL (((((t1.c11, t1.c91, t1.c48)) BETWEEN ((t1.c11, t1.c48, t1.c48)) AND ((t1.c48, t1.c48, t1.c11))))IS NOT(LIKELIHOOD(t1.c48, 0.31377551282776905))), '1724612854', ((t1.c48)>=(((t1.c11) BETWEEN (t1.c48) AND (x'')))) FROM t1 WHERE ((((((((x'', NULL, 277883327)) BETWEEN (('\ro8*Em/ꠌj', 0.7638204738707405, x'7446')) AND ((0xffffffffa3f455ea, x'', 0x1ed13630))))AND(((NULL)>=(NULL)))))OR(((NULL) BETWEEN ('') AND ('-1189954138'))))); -- 0ms;
SELECT ALL (((t1.c48, CAST(t1.c48 AS INTEGER), MIN(t1.c91)))<((x'', t1.c91, NULL))), t1.c91, FIRST_VALUE((((((x'') NOT BETWEEN (t1.c11) AND (t1.c11)), CAST(t1.c11 AS BLOB), t1.c48))>=((UNLIKELY(DISTINCT t1.c48), ((t1.c11)||(t1.c91)), ((t1.c11) ISNULL))))) OVER () FROM t1 WHERE (((((((NULL)OR(NULL)))OR('_')))|('-1293227819'))); -- 10ms;
SELECT ((((t1.c11)AND(t1.c11)))LIKE(SUM(t1.c48))), '', t1.c91, CASE x'd39f'  WHEN ((t1.c91) NOT NULL) THEN (((t1.c91, t1.c48, t1.c91))=((t1.c11, t1.c91, t1.c48))) ELSE t1.c11 END, COUNT(((t1.c11) NOT NULL)) OVER () FROM t1 WHERE (0.6344041871067407 COLLATE NOCASE) LIMIT 298028974 OFFSET 1508951056; -- 0ms;
SELECT DISTINCT NULL FROM t1; -- 0ms;
SELECT DISTINCT (NOT (((t1.c48) NOT BETWEEN (t1.c11) AND (t1.c11)))), (((CAST(t1.c91 AS BLOB)))>=(('谯dﶚRSxe)'))), t1.c91, (((((t1.c48, t1.c91, t1.c11)) BETWEEN ((t1.c11, t1.c11, t1.c91)) AND ((t1.c48, t1.c11, t1.c48)))) IS FALSE), CASE t1.c91  WHEN CAST('0.1921182285752674' AS NUMERIC) THEN ((t1.c91)&(t1.c11)) WHEN ((((t1.c91)OR(t1.c48)))OR(t1.c11)) THEN CAST(t1.c48 AS NUMERIC) WHEN t1.c91 THEN ((((((((t1.c91)OR(t1.c11)))AND(t1.c48)))OR(t1.c91)))AND(t1.c11)) ELSE (t1.c48 IN ()) END FROM t1 WHERE (((((((x'')AND('298028974')))AND(NULL))) NOTNULL)) ORDER BY ((t1.c91 IN ()) IN ()) DESC  NULLS LAST, x'', (+ (UPPER(DISTINCT t1.c11))); -- 0ms;
SELECT DISTINCT ((t1.c48)&(t1.c11)) COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT t1.c48 FROM t1 WHERE (((((((((NULL)OR(0.8557601037218133)))OR(-1027662476)))AND(NULL)))AND('-219150272')) COLLATE NOCASE); -- 0ms;
SELECT ALL ((0.1707147625274713)<(CAST(t1.c48 AS BLOB))) FROM t1 WHERE (HEX('' COLLATE NOCASE)); -- 1ms;
SELECT ALL 0.8653815255950101, SUM(((((t1.c91)OR(t1.c91)))AND(t1.c48))) OVER (), MAX(((t1.c11)<(t1.c11))) FROM t1; -- 0ms;
SELECT t1.c11 COLLATE RTRIM, CASE WHEN t1.c48 THEN ((t1.c11)||(t1.c48)) END, ((((t1.c48, t1.c11, t1.c48)) NOT BETWEEN ((t1.c91, t1.c48, t1.c91)) AND ((t1.c11, t1.c48, t1.c11))) IN ()) FROM t1; -- 0ms;
SELECT ((((SUM(t1.c91))OR(CASE '-1669316543'  WHEN t1.c91 THEN t1.c48 END)))AND(CAST(t1.c11 AS TEXT))) FROM t1 WHERE ((NOT (((-1530246794)*(-1.54706149E9))))); -- 0ms;
SELECT DISTINCT 0x1 FROM t1 WHERE (CAST((((((((((((('0.8924680942917798')AND(0.6437849956567051)))AND('-1649419412')))OR('厌kD')))AND(0.030393824762053878)))AND('')))AND(NULL)) AS REAL)) LIMIT 1114915143 OFFSET 2122967505; -- 0ms;
SELECT ALL AVG(t1.c48) OVER (), COUNT(*) OVER (), '1821986911' FROM t1; -- 0ms;
SELECT DISTINCT ((((((t1.c11)AND(t1.c48)))AND(t1.c11)))!=(((t1.c91) BETWEEN (t1.c11) AND (t1.c48)))) FROM t1 WHERE (((x'')>>((('977899022')>(-410457783))))); -- 0ms;
SELECT ALL CASE ((t1.c48)AND(''))  WHEN (('0.042444961860489405')>=(t1.c11)) THEN ((t1.c91) NOT NULL) ELSE 'HDEwL' END FROM t1; -- 0ms;
SELECT x'' FROM t1 INDEXED BY i68 WHERE (CAST((((((((((((('TRUE')AND(5.9295511E8)))OR(x'9db4')))AND(x'')))AND(x'')))OR('-1850096833')))AND('0.724408587533236')) AS INTEGER)) INTERSECT SELECT ALL ((((t1.c11)<>(t1.c11)))+(((((t1.c91)OR(t1.c91)))AND(t1.c11)))) FROM t1 WHERE (CASE ((NULL)>=('OL'))  WHEN 'xr' THEN ((('H^'))<((1239978283))) ELSE CAST('1791209103' AS TEXT) END);SELECT DISTINCT (((((((((((t1.c48)AND(t1.c91)))AND(t1.c48)))OR(t1.c11)))OR(t1.c91)), CAST(t1.c91 AS BLOB), -1.094112634E9))>((((t1.c11)OR(t1.c11)), ((t1.c48)>(t1.c11)), ((t1.c11) NOT BETWEEN (t1.c91) AND (t1.c11))))) FROM t1; -- 0ms;
SELECT DISTINCT CASE WHEN (+ (t1.c11)) THEN ((t1.c91) IS TRUE) END FROM t1 WHERE (CASE WHEN CASE WHEN '' THEN NULL WHEN x'285a80b6' THEN NULL WHEN '-1754808862' THEN 0.7960511800204886 WHEN x'3ff9' THEN NULL WHEN 1359651648 THEN 2.45583452E8 ELSE '1495803082' END THEN ((x'')LIKE(NULL)) ELSE LIKELY(0.714669551560185) END); -- 0ms;
SELECT 0.8832024758380178, ((t1.c48)<('(NF')), (((((t1.c11)) BETWEEN ((t1.c48)) AND ((t1.c48))))GLOB(((t1.c11)<<(t1.c91)))) FROM t1; -- 0ms;
SELECT ALL TOTAL(((t1.c91)>(t1.c48))) FROM t1 ORDER BY ((((((((((((((t1.c91)AND(t1.c11)))AND(t1.c11)))AND(t1.c48)))OR(t1.c91)))OR(0Xffffffffb7097d3c)))OR(t1.c11))) NOT NULL), (((((NOT (t1.c48)))AND(((t1.c11)>=(t1.c91)))))AND((+ (t1.c48)))), CASE ((((t1.c91)OR(t1.c11)))AND(t1.c48))  WHEN (((t1.c11)) BETWEEN ((t1.c91)) AND ((t1.c91))) THEN ((t1.c91)=(t1.c11)) ELSE CASE t1.c91  WHEN t1.c48 THEN t1.c91 ELSE t1.c48 END END; -- 0ms;
SELECT ALL SUM('970813245') OVER ( RANGE  CURRENT ROW) FROM t1 GROUP BY t1.c11; -- 0ms;
SELECT (((t1.c11)) NOT BETWEEN ((((t1.c48) BETWEEN (t1.c91) AND (t1.c48)))) AND ((((t1.c91) IS FALSE)))), t1.c48, (('')IS((- (t1.c91)))) FROM t1 WHERE (CAST('' AS INTEGER)); -- 0ms;
SELECT ALL LAG(t1.c11, ((((((((((t1.c48)<=(t1.c48)))OR((- (t1.c91)))))AND(((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c11)))))AND(((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c11)))))OR(x'')), '[/m*┘G') OVER () FROM t1; -- 0ms;
SELECT ALL ((t1.c48)%(((t1.c48) IS TRUE))), (CASE t1.c48  WHEN t1.c48 THEN t1.c91 ELSE 0.9622779551318345 END IN ((~ (t1.c91)))), (~ (((((t1.c11)OR(t1.c48)))AND(t1.c11)))), CAST(t1.c48 COLLATE BINARY AS BLOB), GROUP_CONCAT(((t1.c11)&(t1.c48))) FROM t1 WHERE (MIN(((0.41672846558156695) NOT NULL), ((NULL) IS FALSE), ((((0.015889826864344925)OR(0.8738057164918743)))AND('G㬙W~hKb')), ((x'4310') NOT BETWEEN ('-1942340793') AND (0Xffffffffa98e43af)))) GROUP BY ((((((t1.c91) NOT NULL))OR((((t1.c11, t1.c48, t1.c11)) BETWEEN ((t1.c48, t1.c11, t1.c91)) AND ((t1.c11, t1.c48, NULL))))))AND((+ (t1.c91)))) HAVING (((t1.c11 IN ())) NOT NULL) ORDER BY ((((((((CAST(t1.c91 AS INTEGER))AND(((t1.c11) BETWEEN (t1.c48) AND (t1.c48)))))OR(CAST(t1.c48 AS REAL))))OR(t1.c11 COLLATE RTRIM)))OR(CASE WHEN t1.c11 THEN t1.c48 WHEN t1.c91 THEN t1.c91 WHEN t1.c91 THEN t1.c11 END))  NULLS FIRST; -- 0ms;
SELECT ALL ((((CASE ''  WHEN t1.c11 THEN t1.c91 END)AND(((((((((t1.c11)OR(t1.c11)))AND(t1.c11)))OR(t1.c11)))AND(t1.c11)))))AND(ROUND(t1.c48, t1.c11))), CAST(AVG(t1.c11) AS REAL), t1.c11 FROM t1; -- 0ms;
SELECT ((((TOTAL(t1.c48))AND(((t1.c48) NOTNULL))))AND((t1.c11 IN (t1.c91)))) FROM t1 WHERE (CAST('' AS BLOB) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((CASE WHEN x'' THEN t1.c11 ELSE t1.c48 END) NOT BETWEEN ((((0xfffffffffe155d2c))>((t1.c11)))) AND (((t1.c11)*(t1.c91)))) FROM t1; -- 0ms;
SELECT DISTINCT (NOT ((- (t1.c91)))), CAST(((t1.c91)&(t1.c91)) AS INTEGER), (((((t1.c91 IN ()))AND((~ (t1.c91)))))OR(MIN(t1.c11, t1.c48, t1.c91, t1.c11, x'', '-1847447303'))) FROM t1 LIMIT 1828952215 OFFSET -1578468449; -- 0ms;
SELECT ALL '-1226500567' FROM t1; -- 0ms;
SELECT DISTINCT (NOT (t1.c48)) COLLATE RTRIM FROM t1 GROUP BY TYPEOF((- (t1.c11))); -- 1ms;
SELECT DISTINCT (~ (((t1.c11)OR(t1.c91)))), t1.c11, ABS(COUNT(*)) FROM t1 WHERE (((((1016601799) NOT BETWEEN ('Qi><8Pdꌼl') AND (0Xffffffff99b2d4e4))) IS TRUE)); -- 0ms;
SELECT (~ (NULLIF(DISTINCT t1.c91, t1.c48))) FROM t1; -- 0ms;
SELECT DISTINCT ((json_extract(0.574356064876034, t1.c91))!=((t1.c91 IN ()))), (((((1.764474791E9)OR(t1.c91)))OR(t1.c48)) IN ()), ((HEX(t1.c11))+(((t1.c11)IS(t1.c48)))) FROM t1 WHERE ((((- (0.19985149005619018))) NOT NULL)) ORDER BY t1.c11;SELECT DISTINCT ((t1.c11)<(((t1.c48)||(t1.c91)))) FROM t1 WHERE (((NULL COLLATE BINARY)<(CASE x'b7e8'  WHEN x'' THEN '' WHEN 0.4215717862489512 THEN 0.4300209806532015 WHEN NULL THEN 'yRK덾缕G]]' ELSE NULL END))); -- 0ms;
SELECT DISTINCT PRINTF(CAST(t1.c91 AS TEXT), ((((t1.c11)OR(t1.c91)))AND(t1.c11)), ((t1.c48) NOT BETWEEN (NULL) AND (t1.c91))), ((CAST(t1.c91 AS INTEGER)) IS TRUE), (((t1.c91, t1.c91, t1.c48)) BETWEEN ((((t1.c91)>>('')), ((t1.c91) NOT BETWEEN (t1.c48) AND (t1.c11)), MAX(t1.c91))) AND (((((t1.c48)) NOT BETWEEN ((NULL)) AND ((t1.c91))), (t1.c48 IN (t1.c48)), ((t1.c48)<<(t1.c11))))) FROM t1 LIMIT -921205039 OFFSET -259777907; -- 0ms;
SELECT DISTINCT (t1.c48 IN ()), ((x'59208cc7' COLLATE RTRIM)OR(CAST(t1.c11 AS NUMERIC))), COUNT(SUM(((t1.c48)&(t1.c91)))), (((t1.c11)) NOT BETWEEN ((SUM('-1189954138'))) AND ((((t1.c91)IS(t1.c11))))), ((((t1.c48, t1.c91, t1.c48))==((t1.c91, t1.c48, t1.c48))) IN ()) FROM t1 GROUP BY (((((t1.c48)-(t1.c48))))>((GLOB(t1.c11, t1.c11)))), ((((((t1.c91)OR(t1.c11)))OR(((t1.c91) NOT NULL))))AND(((x'') NOT BETWEEN (t1.c11) AND (t1.c48)))), (((((t1.c11, t1.c48, NULL))<>((t1.c48, t1.c91, t1.c91)))) NOTNULL);SELECT ALL CASE WHEN (+ (t1.c48)) THEN ((((t1.c48)AND(t1.c11)))OR(t1.c91)) END, (NOT (((((((((t1.c11)AND(t1.c91)))AND(x'')))OR(t1.c48)))OR(t1.c11)))), GROUP_CONCAT(((t1.c11)+(t1.c48))) OVER () FROM t1 WHERE ('') ORDER BY ((((t1.c11) NOTNULL)) NOT BETWEEN (((0.3538115709602412)OR(t1.c91))) AND (((t1.c91)-(t1.c11)))); -- 1ms;
SELECT DISTINCT CAST((+ (t1.c91)) AS REAL) FROM t1 WHERE ((- (((0.20637536465943596)IS NOT(x''))))) ORDER BY ((((t1.c48)OR(t1.c91 COLLATE RTRIM)))AND(((t1.c48)GLOB(t1.c48)))) ASC, (NOT (((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c91)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT SUM(t1.c11)) FROM t1 NOT INDEXED WHERE ((((NULL) NOT BETWEEN (-1042293957) AND (0.349437634463289)) IN ((('0.38444389197463347')<=(7.46555894E8))))); -- 0ms;
SELECT ALL ((CAST(t1.c48 AS NUMERIC))<(GROUP_CONCAT(t1.c91))) FROM t1; -- 0ms;
SELECT ((0.4815346793896893)<(((((t1.c48)AND(t1.c91)))AND(t1.c91)))) FROM t1 ORDER BY ((((t1.c11)GLOB(t1.c91)))>>((x'' IN ())))  NULLS FIRST, x'55da' ASC; -- 0ms;
SELECT DISTINCT CASE WHEN ((t1.c91) NOT BETWEEN (t1.c48) AND (t1.c91)) THEN ((t1.c91) BETWEEN (t1.c48) AND (t1.c48)) END FROM t1; -- 0ms;
SELECT TYPEOF(DISTINCT TOTAL(t1.c48)) FROM t1 WHERE (CASE ((589469886) NOTNULL)  WHEN (('191584036') NOT NULL) THEN ((0.43635855685996394)LIKE(0.5641896925495603)) WHEN ((x'22137e69')>('')) THEN json_insert(x'', 0.019197700490575564, 0.6789267768229765) WHEN ((x'84bf')LIKE('977899022')) THEN (('2112877424') NOT BETWEEN (NULL) AND (0X5b519321)) WHEN ((('Gm'))<=((NULL))) THEN (NULL IN (0.8754826734443577, 0.6223300728459858)) WHEN CASE WHEN NULL THEN -1.79766667E9 WHEN NULL THEN 0xfffffffff4882d89 WHEN 0.8109220688024034 THEN NULL ELSE 0.8151015345145957 END THEN ((NULL)||(x'')) ELSE CASE ''  WHEN '-1869443327' THEN NULL WHEN x'' THEN NULL WHEN '' THEN 0.8642845514647994 END END) ORDER BY ((((((t1.c48))==((x'c6b9')))))>=((CASE WHEN t1.c11 THEN t1.c48 END))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((TOTAL(t1.c91))|(((t1.c48) IS FALSE))), (t1.c91 COLLATE NOCASE IN ()), CAST(((t1.c48) NOT NULL) AS REAL) FROM t1 GROUP BY ABS(DISTINCT CAST(t1.c11 AS INTEGER)), t1.c11, ((((((t1.c48) NOT NULL))OR((t1.c48 IN (t1.c48)))))AND(CASE t1.c48  WHEN NULL THEN t1.c11 WHEN t1.c48 THEN '0.44514396234225206' WHEN t1.c91 THEN t1.c48 END)); -- 0ms;
SELECT DISTINCT COUNT((t1.c91 IN ())), ((((COUNT(*))OR(((((((((t1.c48)AND(t1.c91)))OR(t1.c11)))OR(NULL)))OR(t1.c91)))))OR(t1.c11 COLLATE BINARY)), (((((+ (t1.c48)))OR((+ (t1.c48)))))AND(t1.c11)) FROM t1; -- 0ms;
SELECT ((((t1.c48) BETWEEN (t1.c11) AND (t1.c48)))<=((- (t1.c11)))) FROM t1 WHERE (((((('0.6388008018954286')) BETWEEN ((-1491680560)) AND (('278759547'))))%(((0.46892886936302625) NOT NULL)))) GROUP BY (t1.c48 IN ()) HAVING AVG(TOTAL(((t1.c91)<<(NULL))));SELECT ALL CASE WHEN CASE ''  WHEN t1.c91 THEN t1.c91 WHEN t1.c91 THEN t1.c91 WHEN t1.c11 THEN t1.c91 END THEN LIKELIHOOD(DISTINCT t1.c91, 0.2304643657171761) END FROM t1 WHERE ((((((0X12fb785b) NOT BETWEEN (x'') AND (NULL))))<(((('zo)W97r?') BETWEEN ('979135924') AND (NULL)))))) GROUP BY t1.c91; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t1.c48 THEN t1.c48 ELSE t1.c91 END  WHEN t1.c48 THEN (((t1.c48, t1.c48, t1.c91)) BETWEEN ((t1.c11, t1.c11, t1.c91)) AND ((t1.c48, t1.c48, t1.c91))) END FROM t1 WHERE (CAST(CAST(0.5824128563134711 AS NUMERIC) AS BLOB)); -- 0ms;
SELECT DISTINCT (t1.c11 COLLATE RTRIM IN ()) FROM t1 WHERE (((((-1547061490)*(x''))) NOT BETWEEN (((x'') IS FALSE)) AND ((+ ('1168793510'))))) ORDER BY ((CASE WHEN t1.c48 THEN t1.c11 END)IS((((t1.c11, t1.c48, t1.c48))>=((t1.c11, t1.c91, t1.c48))))) ASC; -- 0ms;
SELECT DISTINCT ((((t1.c11) NOT BETWEEN (t1.c48) AND (t1.c11))) IS FALSE), ((MAX(t1.c48))|(t1.c11 COLLATE RTRIM)), (((t1.c11)) NOT BETWEEN (((t1.c91 IN ()))) AND ((((t1.c11)>>(t1.c11))))) FROM t1 WHERE (ABS(DISTINCT (NOT (x'')))); -- 0ms;
SELECT ALL (((((+ (t1.c91)))AND(((t1.c48) NOT BETWEEN (t1.c48) AND (t1.c48)))))OR((((t1.c11))>=((t1.c48))))) FROM t1 INDEXED BY i68 WHERE ((- ((((NULL, 'zs', x'9a89'))>=(('-1892959396', NULL, x'')))))) LIMIT 1752638404 OFFSET 1830358314;SELECT DISTINCT ((((CAST(t1.c11 AS TEXT))OR(LIKELIHOOD(DISTINCT t1.c91, 0.13300888102460218))))OR((NOT (t1.c48)))) FROM t1 WHERE (((((NULL) NOT BETWEEN (1.405917889E9) AND (0.39792820950889674))) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((((((((((((t1.c91)) NOT BETWEEN ((t1.c91)) AND ((t1.c11))))AND((((t1.c48)) NOT BETWEEN ((NULL)) AND ((t1.c48))))))OR(((((t1.c48)AND(t1.c48)))AND(t1.c48)))))OR(((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c48)))))OR(((t1.c48) IS TRUE))))AND(UPPER(t1.c48))))AND(AVG(t1.c91))) FROM t1; -- 0ms;
SELECT RANK() OVER (), t1.c48, COUNT(((t1.c91) NOTNULL)) OVER ( RANGE  CURRENT ROW) FROM t1 WHERE ((+ (((((NULL)AND(x'')))AND(x'51d0'))))); -- 0ms;
SELECT ALL (((~ (t1.c11)))LIKE(t1.c11)), (NOT ((t1.c91 IN ()))), (((t1.c48)) NOT BETWEEN ((COALESCE(t1.c48, t1.c11))) AND ((((t1.c48)OR(t1.c11))))) FROM t1 WHERE (((((0.8623466171695132))=((x''))) IN (((NULL)OR(NULL))))) ORDER BY ((((((((((((CAST(t1.c48 AS BLOB))OR(((t1.c48) IS TRUE))))AND(json_valid(t1.c91))))OR(((((((((t1.c91)AND(t1.c11)))OR(t1.c48)))AND(t1.c91)))AND(t1.c91)))))AND(((t1.c48) NOT NULL))))OR(((t1.c48)<=(t1.c48)))))OR((((t1.c11))>=((t1.c11))))) DESC; -- 0ms;
SELECT DISTINCT CASE CASE WHEN t1.c11 THEN t1.c91 WHEN t1.c91 THEN t1.c91 WHEN t1.c91 THEN t1.c11 END  WHEN COUNT(t1.c91) THEN t1.c91 COLLATE RTRIM WHEN CAST(t1.c48 AS REAL) THEN t1.c91 WHEN load_extension(t1.c48, t1.c91) THEN ((t1.c48) NOT BETWEEN (NULL) AND (t1.c11)) WHEN t1.c91 THEN (((t1.c91, t1.c11, t1.c91)) NOT BETWEEN ((t1.c91, t1.c91, t1.c11)) AND ((-1.79766667E9, t1.c91, t1.c11))) WHEN t1.c48 THEN ((t1.c48)<(t1.c48)) ELSE t1.c48 COLLATE BINARY END FROM t1 WHERE (((x'd085') BETWEEN (((NULL)AND(''))) AND ((NOT (x'6cc8'))))) GROUP BY TRIM(DISTINCT t1.c91 COLLATE BINARY, NULL) HAVING CASE WHEN ((t1.c11)%(t1.c11)) THEN ((t1.c11) BETWEEN (t1.c91) AND (t1.c91)) END; -- 0ms;
SELECT DISTINCT (CASE t1.c11  WHEN t1.c11 THEN 'f惈#z|Y,D' ELSE t1.c11 END IN (((((((((t1.c48)OR(t1.c11)))OR(0.15870416761626382)))AND(NULL)))AND(t1.c11)))) FROM t1 WHERE (((- ('-1726125112')) IN ())); -- 0ms;
SELECT CAST((((t1.c11))>=((t1.c48))) AS TEXT) FROM t1 WHERE (((((((((((NULL) NOTNULL))AND(((NULL)*(x'')))))OR('-31704933' COLLATE NOCASE)))OR((('1405917889') NOT BETWEEN (0.11647098659524235) AND (NULL)))))AND(CAST(x'76de' AS BLOB)))) GROUP BY (((((((t1.c48)OR(t1.c91)))OR(t1.c48)), ((t1.c11) BETWEEN (t1.c11) AND (t1.c91)), ((((((((t1.c48)AND(t1.c48)))OR(t1.c48)))AND(t1.c91)))OR(t1.c48)), (t1.c91 IN (t1.c11, t1.c48)), ABS(t1.c91)))<(((+ (t1.c91)), (((((((('-1243234578')OR(t1.c11)))OR(t1.c91)))AND(t1.c48)))OR(t1.c48)), ((t1.c91) IS FALSE), t1.c48, 'sZ' COLLATE RTRIM))) HAVING ((SUM(t1.c48)) BETWEEN (t1.c91 COLLATE RTRIM) AND (SQLITE_COMPILEOPTION_USED(t1.c11))); -- 0ms;
SELECT DISTINCT t1.c48 FROM t1; -- 0ms;
SELECT DISTINCT CAST(t1.c11 AS BLOB), (~ (t1.c91)), t1.c91 FROM t1 WHERE (((((NULL)*(0.9137218013028195))) NOT NULL)); -- 0ms;
SELECT ALL (+ ((((-1.44910827E8, t1.c48, t1.c48))<=((t1.c11, t1.c48, t1.c91))))), ((CAST(t1.c11 AS NUMERIC)) NOT BETWEEN ((((t1.c48, t1.c91, t1.c91))<((t1.c11, t1.c11, t1.c11)))) AND (((t1.c91) BETWEEN (23822151) AND (t1.c11)))), COUNT((t1.c48 IN ())) FROM t1 WHERE (CAST(((('')) NOT BETWEEN (('')) AND ((x''))) AS INTEGER)) ORDER BY t1.c91 ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((CAST(t1.c91 AS TEXT))OR(t1.c11)))AND(t1.c11 COLLATE NOCASE)) FROM t1 GROUP BY (t1.c91 IN ((('0.349437634463289') IS TRUE))), ((CAST(t1.c91 AS NUMERIC)) NOT BETWEEN (CAST(t1.c11 AS BLOB)) AND (ROUND(t1.c91, t1.c91))), (((t1.c91)) BETWEEN ((t1.c91 COLLATE RTRIM)) AND ((CASE WHEN t1.c48 THEN t1.c11 END))) HAVING ((SUM(t1.c11))<(CASE WHEN t1.c48 THEN t1.c11 WHEN t1.c91 THEN t1.c91 WHEN t1.c11 THEN t1.c91 ELSE t1.c91 END)); -- 0ms;
SELECT DISTINCT ((TRIM(t1.c11))OR((((t1.c11, 758271870, t1.c91)) NOT BETWEEN ((t1.c91, t1.c11, t1.c11)) AND ((t1.c48, 1.833938027E9, t1.c91))))), LEAD(NULL, CAST(((t1.c11)IS NOT(t1.c91)) AS BLOB), (0.4084163444050586 IN ())) OVER (), CAST(t1.c11 COLLATE BINARY AS NUMERIC) FROM t1 WHERE ((((((+ (x'')))OR('3Q' COLLATE BINARY)))OR(((NULL)-(0.4394600934034062))))); -- 0ms;
SELECT ALL (((t1.c48 IN ())) ISNULL) FROM t1 LIMIT 1495824179 OFFSET -2021270805; -- 0ms;
SELECT DISTINCT CASE WHEN NULL THEN t1.c48 COLLATE BINARY ELSE (((t1.c11, t1.c91, t1.c11))!=((t1.c11, t1.c11, t1.c91))) END FROM t1; -- 0ms;
SELECT DISTINCT NULL COLLATE NOCASE FROM t1 GROUP BY CAST(((t1.c91)<=(t1.c91)) AS NUMERIC), (SUBSTR('q', t1.c91) IN ()), CASE (~ (t1.c11))  WHEN ((t1.c48) ISNULL) THEN t1.c11 END; -- 0ms;
SELECT DISTINCT (((t1.c48) ISNULL) IN ()), CAST(CASE t1.c91  WHEN 0X3303104e THEN t1.c48 END AS INTEGER), x'acf7' FROM t1 WHERE ((((NULL, x'9e80', 511681872)) NOT BETWEEN ((CAST(x'33b4' AS INTEGER), ((0xffffffff94d9c892) ISNULL), 0.02722048255154652)) AND (((298028974 IN ()), (- (NULL)), ABS(x''))))); -- 0ms;
SELECT ALL ((((((((((((t1.c11)AND(t1.c11)))OR(t1.c48)))OR(((t1.c11) ISNULL))))AND(((((t1.c48)OR(t1.c91)))OR(t1.c91)))))OR(((t1.c11) NOT NULL))))OR((~ (x'')))), SUM((((t1.c48, t1.c11, t1.c11))>(('-246533238', t1.c48, t1.c91)))) OVER (), CASE WHEN NULL THEN ((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c11)) ELSE ((t1.c48)|(x'')) END FROM t1 WHERE (((NULL)AND((NOT (NULL))))) GROUP BY (((t1.c48) NOT NULL) IN (((t1.c48)|(x'd57b')))) HAVING CAST((~ (t1.c91)) AS INTEGER); -- 0ms;
SELECT DISTINCT (((((t1.c48)) NOT BETWEEN ((0.978155471298978)) AND ((0.49969548229341654))))GLOB(TOTAL(t1.c91))), CAST('386019206' COLLATE RTRIM AS TEXT), (t1.c11 COLLATE BINARY IN (((((t1.c91)OR(NULL)))AND(t1.c11)))) FROM t1; -- 0ms;
SELECT DISTINCT t1.c11, (((((t1.c11)*(t1.c11))))<=((TYPEOF(t1.c11)))), AVG((- (t1.c91))) FROM t1; -- 0ms;
SELECT DISTINCT ((CAST(t1.c48 AS TEXT))IS NOT(t1.c91 COLLATE NOCASE)), RTRIM(LIKELY(t1.c91)), t1.c48 FROM t1; -- 0ms;
SELECT ((t1.c11) NOTNULL) FROM t1; -- 0ms;
SELECT DISTINCT SUM((+ (t1.c48))) OVER () FROM t1 WHERE (((((x'5036')OR(x'')))AND(x'fb9b')) COLLATE NOCASE); -- 0ms;
SELECT (((t1.c48) BETWEEN (t1.c91) AND (t1.c91)) IN ()), ((((((t1.c91)OR(t1.c48)))OR(t1.c91))) NOT BETWEEN (((t1.c91)GLOB(t1.c91))) AND (((t1.c91)%(t1.c91)))), ((CAST(0.16485339601474447 AS REAL))<=((t1.c91 IN (t1.c11)))) FROM t1 ORDER BY CASE WHEN 'nF' THEN CAST(t1.c48 AS BLOB) WHEN CAST(t1.c11 AS NUMERIC) THEN t1.c11 WHEN t1.c91 THEN CAST(t1.c91 AS TEXT) END; -- 1ms;
SELECT DISTINCT '{}' FROM t1 WHERE (((((0.1966830162971962) BETWEEN (0.5297468140685608) AND (NULL))) BETWEEN (((0.7094696825909377) NOT BETWEEN (x'') AND (x'd05e'))) AND ('B(w텤P职'))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ROWS  UNBOUNDED PRECEDING) FROM t1 INDEXED BY i15 GROUP BY UPPER(((((((((t1.c48)AND(t1.c48)))OR(t1.c91)))AND(t1.c48)))OR(t1.c91))); -- 0ms;
SELECT DISTINCT ((CASE WHEN t1.c11 THEN t1.c11 WHEN t1.c48 THEN t1.c91 WHEN x'' THEN t1.c91 ELSE t1.c91 END) IS FALSE) FROM t1 WHERE ((+ (CASE WHEN NULL THEN 0.38444389197463347 WHEN 4.1480417173556106E-5 THEN NULL WHEN x'3958' THEN 0.9912205086582746 END))) ORDER BY (((((((t1.c48))<((t1.c91))))OR(((t1.c11)IS(t1.c48)))))OR(((t1.c91)>=(t1.c11)))); -- 0ms;
SELECT DISTINCT ((((+ (t1.c11))))=((((t1.c11) NOT NULL)))), json_extract(LOWER(DISTINCT t1.c11), (~ (t1.c91)), (((NULL))>=((t1.c11))), ((t1.c11)!=(t1.c91))), ((t1.c91) BETWEEN (t1.c48) AND (t1.c48)) COLLATE RTRIM FROM t1 WHERE (CASE 0.7818683361362304 COLLATE NOCASE  WHEN ((((((((0.38709566784769767)AND(x'')))AND(NULL)))OR('1305544137')))AND(NULL)) THEN 0.07644792797689803 ELSE NULL COLLATE RTRIM END) GROUP BY ((((((((NULL)AND(((t1.c11)LIKE(t1.c91)))))OR((t1.c11 IN (t1.c11)))))AND(CAST(1425978585 AS NUMERIC))))OR(t1.c11)); -- 0ms;
SELECT DISTINCT CAST(((t1.c48)*(t1.c91)) AS REAL), MIN(((((((((t1.c48)AND(t1.c48)))AND(t1.c91)))OR(t1.c91)))OR(t1.c11))), ((t1.c48 IN ()) IN ()), COUNT(*) COLLATE RTRIM, ((((((t1.c91)>=(t1.c91)))AND(((t1.c48) NOTNULL))))OR(((((t1.c48)OR(t1.c11)))OR(t1.c48)))) FROM t1 WHERE (((CASE x''  WHEN '-753502170' THEN 0x1415d061 ELSE NULL END) BETWEEN (TRIM(8.47880092E8, 0.6732718865855145)) AND (LAST_INSERT_ROWID()))) LIMIT 710315146; -- 0ms;
SELECT ALL ((t1.c91)==(((t1.c48)<(t1.c48)))) FROM t1; -- 0ms;
SELECT DISTINCT (~ ('%s')), SUBSTR(IFNULL(DISTINCT t1.c91, t1.c48), t1.c91), (((t1.c48, t1.c11, t1.c11)) NOT BETWEEN (((t1.c91 IN ()), TRIM(t1.c48), ((t1.c91) NOT BETWEEN (t1.c11) AND (t1.c11)))) AND ((CAST(0.37196433043289323 AS TEXT), ((t1.c11) BETWEEN (t1.c11) AND (t1.c48)), ((((t1.c48)OR(t1.c48)))AND(t1.c48))))) FROM t1 ORDER BY 0.42014722889198597 LIMIT -430142184; -- 0ms;
SELECT ((CAST(t1.c48 AS TEXT))||(CAST(t1.c48 AS BLOB))) FROM t1 WHERE ((((((('') BETWEEN ('PQ*l') AND ('1295124267')))OR((+ (x'd302')))))AND(CASE NULL  WHEN x'b425' THEN 0.10043018848519847 END))) GROUP BY ROUND(((x'') BETWEEN (t1.c91) AND (t1.c11)), ((t1.c48)IS NOT(0.05719721174961867))); -- 0ms;
SELECT ALL ((((t1.c48)IS NOT(t1.c11)))||(((t1.c91)>=(t1.c91)))) FROM t1 WHERE (((CAST(NULL AS NUMERIC)) NOT NULL)); -- 0ms;
SELECT DISTINCT '䃓[8⭣' FROM t1; -- 0ms;
SELECT json_quote((('529550678') NOT NULL)) FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c91)>>(t1.c11))) IS TRUE) FROM t1; -- 0ms;
SELECT ALL LEAD(UPPER(DISTINCT (~ (t1.c11))), (~ (((t1.c48)==(t1.c11)))), 'i1-500000D') OVER (), LAST_VALUE((t1.c11 IN ())) OVER (), t1.c48 FROM t1 WHERE ((- (CAST('a	0L' AS INTEGER)))); -- 0ms;
SELECT ALL AVG((~ (t1.c91))) OVER (), NULLIF(DISTINCT MIN(t1.c91), CAST(t1.c11 AS BLOB)), CAST(((t1.c48)!=(t1.c11)) AS BLOB) FROM t1; -- 0ms;
SELECT DISTINCT SUM(t1.c11) FROM t1 WHERE ('-2090560273') LIMIT 2002810813; -- 0ms;
SELECT t1.c91, CASE WHEN CAST(t1.c48 AS REAL) THEN t1.c11 COLLATE RTRIM END, CASE (t1.c91 IN ())  WHEN (t1.c91 IN ()) THEN ((t1.c11)AND(t1.c48)) END FROM t1; -- 0ms;
SELECT DISTINCT SUM((~ (t1.c48))) OVER () FROM t1 WHERE (((CASE WHEN 0.6958236365802279 THEN 'p?' END) NOT NULL)) ORDER BY ((((((((((((((t1.c48)AND(t1.c11)))OR(t1.c11)))OR(t1.c91)))OR(t1.c48)))AND(t1.c48)))AND(t1.c11))) NOT BETWEEN (((t1.c48) NOT BETWEEN (t1.c91) AND (t1.c91))) AND (((t1.c48)<=(NULL)))) ASC  NULLS FIRST, ((((((t1.c11)AND(t1.c48)))OR(t1.c48))) NOTNULL) DESC  NULLS LAST; -- 1ms;
SELECT (TRIM(t1.c91) IN ()), NULLIF(CASE t1.c11  WHEN t1.c11 THEN t1.c48 WHEN t1.c11 THEN NULL WHEN t1.c48 THEN t1.c91 END, CASE WHEN t1.c91 THEN t1.c48 WHEN t1.c91 THEN t1.c48 WHEN t1.c48 THEN t1.c48 END), (+ (((t1.c11)!=(t1.c48)))) FROM t1 WHERE (CAST(CAST(0.15903816951269456 AS TEXT) AS NUMERIC)); -- 0ms;
SELECT ALL ((((((t1.c48)OR(t1.c91)))AND(t1.c91)))|(((((((((t1.c91)OR(t1.c11)))OR(t1.c11)))AND(t1.c11)))OR(t1.c91)))) FROM t1 WHERE ((((NULL IN ())) IS FALSE)); -- 0ms;
SELECT DISTINCT SUM(CASE t1.c48  WHEN t1.c11 THEN t1.c48 WHEN 'rO\n,GGX' THEN t1.c91 WHEN t1.c48 THEN '104415504' END) OVER ( PARTITION BY (((0.32839199329261215)=(t1.c11)) IN ()), x'') FROM t1 WHERE ((((-1.70159429E8, '^6d?I', x'')) BETWEEN ((CAST(NULL AS TEXT), 0.38192453670413873, (((x''))>=(('-1040873140'))))) AND (((('878792183')<(0Xffffffff886100b4)), CASE WHEN '䧭4SIVF\r\' THEN NULL END, ((((((((1.149151969E9)AND(x'')))AND('<y*QN篢Sk')))OR(x'577d')))AND(0.2610430621058508)))))); -- 0ms;
SELECT DISTINCT (MAX(t1.c91) IN (CAST(0.5074580754806335 AS BLOB))), ((CAST('1495824179' AS REAL)) IS TRUE), (((t1.c11 IN ())) IS FALSE) FROM t1 WHERE ((((('-1051780231')|(NULL))) ISNULL)); -- 1ms;
SELECT ALL t1.c91 COLLATE NOCASE FROM t1 WHERE (CASE ((x'5376')AND(NULL))  WHEN CAST(NULL AS BLOB) THEN 'e辮' COLLATE NOCASE END) ORDER BY (- ((((t1.c91))=((t1.c91))))); -- 0ms;
SELECT ALL ((t1.c11)>(t1.c11)) COLLATE BINARY, CASE WHEN ((t1.c91) IS TRUE) THEN (t1.c91 IN (0x50b8eb95, t1.c91)) ELSE (NOT (t1.c48)) END, RANK() OVER (), TOTAL((('1156805637') BETWEEN (t1.c48) AND (t1.c48)) COLLATE NOCASE), ((t1.c11 COLLATE BINARY) IS FALSE) FROM t1; -- 0ms;
SELECT ((t1.c11)>=(((t1.c48)>>(t1.c11)))) FROM t1; -- 0ms;
SELECT '-362986492', CAST(NULL AS REAL), ((((((((((t1.c48)<(t1.c11)))OR(((t1.c48) NOT BETWEEN (t1.c91) AND (t1.c91)))))OR(((t1.c91)>=(t1.c48)))))AND(((((t1.c91)AND(t1.c48)))OR(t1.c48)))))OR(((((t1.c48)OR(t1.c11)))AND(t1.c11)))) FROM t1; -- 0ms;
SELECT DISTINCT (((t1.c11)-(t1.c48)) IN ()), (((NULL))==(((NOT (t1.c11))))), COALESCE(DISTINCT CAST(x'af31' AS INTEGER), ((((t1.c48)AND(t1.c11)))AND(t1.c48))) FROM t1 WHERE (((x'') NOT BETWEEN (0X32fcf12c) AND (x'67c2')) COLLATE BINARY); -- 0ms;
SELECT (~ (t1.c48)) FROM t1; -- 0ms;
SELECT DISTINCT (- (CAST(t1.c11 AS NUMERIC))) FROM t1 WHERE ((('sg') IS TRUE) COLLATE RTRIM); -- 0ms;
SELECT ALL TOTAL(TIME(t1.c91, t1.c48, t1.c91)), (NOT ((+ (t1.c91)))), GROUP_CONCAT((~ (t1.c48))) OVER ( ORDER BY CAST((('B,')>>('%MwB~a')) AS TEXT)) FROM t1 WHERE (((((((((((x'')OR(0.9261884812476542)))OR(x'b34e')))OR(((x'')>('1107747973')))))AND(('-31704933' IN ()))))AND('-1851698515' COLLATE BINARY))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('4F1Cy'), (((- (t1.c11))) IS FALSE), ((t1.c91) NOT BETWEEN (t1.c91) AND (0.6312341848622507)) COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT ((((t1.c11)|(t1.c48)))/(((t1.c91)GLOB(t1.c48)))) FROM t1 WHERE (((((-7.36471663E8) IS TRUE)) NOT BETWEEN (NULL) AND ((((((((('R^')AND(NULL)))OR(x'')))OR(0.5440102398656014)))AND(x'077eaf7a'))))); -- 0ms;
SELECT CASE WHEN UNICODE(t1.c11) THEN (t1.c48 IN (t1.c48)) WHEN (0.8110423596954992 IN ()) THEN ((((((((t1.c91)OR(t1.c48)))AND(t1.c48)))AND(t1.c91)))AND(t1.c11)) WHEN ((((t1.c11)AND(t1.c91)))AND(t1.c11)) THEN ((t1.c91) NOT NULL) ELSE ((t1.c91) NOT BETWEEN (t1.c91) AND (t1.c48)) END FROM t1 WHERE (COALESCE(0.3128039451712803, '-824891293')); -- 0ms;
SELECT ALL ((t1.c91) BETWEEN (t1.c11) AND (t1.c11)) COLLATE NOCASE FROM t1 WHERE ((0.8754612905490884 COLLATE BINARY IN ((((((((('*6(t')OR('s*AUj')))AND(4.69030554E8)))OR(NULL)))OR(0.6299120458756523))))); -- 0ms;
SELECT DISTINCT x'', AVG(CASE WHEN t1.c91 THEN t1.c11 WHEN t1.c11 THEN t1.c48 WHEN t1.c91 THEN t1.c91 ELSE t1.c11 END), ((0Xffffffff8356fcf8)!=(((t1.c91)GLOB(t1.c91)))) FROM t1; -- 0ms;
SELECT DISTINCT (COUNT(t1.c11) IN ()) FROM t1; -- 1ms;
SELECT ALL CASE ((t1.c48)IS NOT(t1.c48))  WHEN ((t1.c48) BETWEEN (t1.c48) AND (t1.c91)) THEN x'6315' WHEN (t1.c11 IN (t1.c48)) THEN AVG(t1.c91) WHEN IFNULL(t1.c91, t1.c11) THEN MAX(t1.c48) ELSE SQLITE_VERSION() END FROM t1; -- 0ms;
SELECT ((((t1.c48) NOT NULL)) NOT BETWEEN ((((0.8984807395677353, t1.c11, '0.8738057164918743')) BETWEEN ((t1.c91, t1.c11, t1.c11)) AND ((t1.c11, t1.c48, t1.c11)))) AND (((t1.c48)IS NOT(t1.c11)))), PRINTF(((t1.c48)<<(t1.c91))), '613957772' FROM t1 LIMIT -2005340315; -- 0ms;
SELECT DISTINCT LAG(TYPEOF(DISTINCT (- (t1.c91))), CAST(((t1.c91) BETWEEN (t1.c48) AND (t1.c48)) AS NUMERIC), (((((((('511681872')OR(t1.c91 COLLATE NOCASE)))OR(CAST('' AS NUMERIC))))AND(((t1.c91)*(t1.c11)))))OR(((t1.c48)=(t1.c11))))) OVER () FROM t1 WHERE (((((LOWER(DISTINCT x''))OR('-1808918472' COLLATE RTRIM)))OR((('1321608153')||(x''))))); -- 0ms;
SELECT DISTINCT CAST(((t1.c91)IS('J!')) AS REAL) FROM t1 WHERE (((((((((UNLIKELY(x''))AND((+ (x'7e16')))))OR(((x'')LIKE('')))))OR('Ko')))OR(CAST(NULL AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (CASE WHEN t1.c91 THEN t1.c48 END IN (SQLITE_VERSION())), ((((((((((t1.c48)+(t1.c48)))AND((((t1.c11))>=((t1.c11))))))AND((+ (t1.c91)))))AND((t1.c11 IN ()))))AND(JULIANDAY(t1.c11, t1.c11, t1.c11))), ((RTRIM(t1.c48))<>(((t1.c91)==(t1.c48)))) FROM t1; -- 0ms;
SELECT DISTINCT ((((((((t1.c48)AND(t1.c48)))OR(NULL)))OR(((t1.c11) ISNULL))))AND(t1.c48 COLLATE NOCASE)), CASE GROUP_CONCAT(0.8115426155973847)  WHEN 0.05301024532533272 THEN CASE t1.c11  WHEN t1.c11 THEN t1.c91 ELSE t1.c91 END END, CAST('' AS NUMERIC) FROM t1; -- 0ms;
SELECT ALL CASE ((t1.c48) IS TRUE)  WHEN (((t1.c91)) NOT BETWEEN ((t1.c48)) AND ((t1.c48))) THEN CASE WHEN t1.c48 THEN t1.c11 END ELSE COUNT(*) END FROM t1 WHERE (((((((((('1031871686' IN (NULL)))OR(((0X3151365) IS FALSE))))AND(((0.08778246471208773) NOTNULL))))AND(((-659114872) ISNULL))))OR(((NULL)IS NOT(0.06215414304229705))))) LIMIT 75745228 OFFSET 1882352995; -- 0ms;
SELECT ((((((((((((t1.c48)OR(t1.c48)))AND(t1.c91)))AND(t1.c48)))OR(t1.c48)))OR(((t1.c91)<(t1.c11)))))OR((((t1.c91))>=((t1.c91))))), (((((((('\np')OR((t1.c11 IN ()))))OR(x'' COLLATE BINARY)))OR(0Xffffffffc14f1b79)))OR(CAST(t1.c48 AS BLOB))), ((((((((((t1.c91)AND(t1.c48)))AND(t1.c11)))OR(t1.c91)))OR(t1.c48)))LIKE(CASE t1.c91  WHEN t1.c11 THEN '0.2385441398128888' WHEN t1.c91 THEN t1.c48 WHEN t1.c91 THEN t1.c11 END)), ((t1.c11) BETWEEN (t1.c11) AND (t1.c48)) COLLATE BINARY COLLATE BINARY, NTILE((NOT (((t1.c91) ISNULL)))) OVER () FROM t1 WHERE ((0X6d45c77a IN ())) ORDER BY ((((t1.c91)IS NOT(t1.c91))) NOTNULL) ASC LIMIT -556048328; -- 1ms;
SELECT ALL GROUP_CONCAT(((t1.c48) IS FALSE) COLLATE NOCASE) FILTER(WHERE ((((((((((((t1.c48)AND(t1.c48)))AND(t1.c48)))AND(((((((((t1.c11)OR(t1.c91)))AND(t1.c11)))AND(t1.c48)))OR(t1.c91)))))AND(CAST(0.6723829892417265 AS NUMERIC))))OR((NOT (t1.c48)))))OR(((0.2739755487714721)<=(t1.c11))))) OVER () FROM t1 WHERE (((2.98028974E8)<=(NULL)) COLLATE BINARY); -- 0ms;
SELECT ALL CASE WHEN ((((t1.c48)AND(t1.c91)))AND(t1.c11)) THEN LTRIM(t1.c91, t1.c11) END, LIKELY(DISTINCT t1.c48), ((((('XG' IN ()))AND('POK0')))OR(json_array_length(t1.c48))) FROM t1 LIMIT 751034164; -- 0ms;
SELECT COUNT(*) FROM t1 WHERE (((LTRIM(-72643905, '')) BETWEEN (0.2873801649065225 COLLATE RTRIM) AND ('-1726125112' COLLATE RTRIM))) GROUP BY CASE WHEN ((t1.c48)*(t1.c91)) THEN ABS(t1.c48) END ORDER BY (((t1.c91 IN ())) NOT BETWEEN (((((t1.c91)OR(t1.c91)))AND(t1.c91))) AND (((t1.c11) IS TRUE))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t1.c91)||('-1491680560'))) ISNULL), ((CAST(t1.c48 AS TEXT))OR(((t1.c48) NOT BETWEEN (t1.c48) AND (t1.c11)))), (((- (t1.c91)))IS(((((t1.c11)OR(t1.c48)))OR(t1.c48)))) FROM t1 NOT INDEXED WHERE ((~ (((0.6296262191619477) BETWEEN ('J') AND ('473565510'))))); -- 0ms;
SELECT DISTINCT (((+ (t1.c11)))>=(0.10703087057134297)) FROM t1; -- 0ms;
SELECT ALL ((((((((((t1.c11) IS FALSE))AND(IFNULL(DISTINCT t1.c91, t1.c48))))OR((t1.c11 IN ()))))AND(((((((((t1.c11)AND(t1.c11)))OR(t1.c11)))AND(t1.c91)))OR(t1.c91)))))OR(((t1.c91) IS TRUE))) FROM t1; -- 0ms;
SELECT (((t1.c91 IN ()))||(COUNT(NULL))), CAST(((((t1.c48)OR(t1.c48)))AND(t1.c48)) AS TEXT), AVG((('991870561') NOTNULL)) OVER ( ORDER BY (((CASE WHEN t1.c48 THEN t1.c48 END))>((((t1.c48)<(t1.c11)))))  NULLS FIRST) FROM t1 WHERE (0.5095787142828263); -- 0ms;
SELECT ALL CAST(t1.c91 AS BLOB) FROM t1; -- 0ms;
SELECT ALL ((t1.c48) IS TRUE) COLLATE NOCASE FROM t1; -- 0ms;
SELECT CAST(((((t1.c91)OR(t1.c11)))OR(t1.c91)) AS NUMERIC) FROM t1; -- 0ms;
SELECT DISTINCT ((t1.c48 IN ()) IN ()), SUM(ROUND(t1.c91, t1.c91)) OVER (), CAST(CAST(t1.c48 AS NUMERIC) AS TEXT), t1.c91, ((CAST(NULL AS REAL))>=(CAST(t1.c11 AS BLOB))) FROM t1 WHERE ((+ ((NULL IN ())))); -- 0ms;
SELECT DISTINCT ABS(DISTINCT ((t1.c48) NOT NULL)) FROM t1 WHERE (CASE WHEN (x'' IN ()) THEN (('')IS(0X2e0ba13c)) END); -- 0ms;
SELECT DISTINCT ((((t1.c11)||(t1.c11))) BETWEEN (((t1.c48) IS TRUE)) AND (((((((((t1.c91)OR(t1.c91)))OR(t1.c91)))AND(t1.c91)))AND(t1.c11)))) FROM t1 GROUP BY ((x'') NOT BETWEEN ((t1.c11 IN ())) AND (t1.c91)), (- ((t1.c48 IN ()))), (((((t1.c11))<((t1.c91)))) IS TRUE); -- 0ms;
SELECT ALL ((TRIM(DISTINCT t1.c11)) IS FALSE), CAST(SUM(t1.c91) AS NUMERIC), COUNT(*), '_n', t1.c91 FROM t1 WHERE ((((('-1094112634')GLOB(x'043c'))) ISNULL)); -- 0ms;
SELECT DISTINCT (((CASE t1.c91  WHEN t1.c48 THEN '' WHEN t1.c11 THEN t1.c91 WHEN t1.c91 THEN t1.c91 ELSE t1.c11 END, COUNT(t1.c91), ((t1.c11) NOT BETWEEN ('逌nN') AND (t1.c11))))<((t1.c11, t1.c91, CASE t1.c11  WHEN t1.c48 THEN t1.c91 ELSE x'' END))), ((((((((((t1.c91)OR(t1.c48)))AND(t1.c91)))OR(t1.c48)))AND(t1.c11)))>=((t1.c48 IN ()))), ((((((t1.c91))>=(('0码')))))<=(((t1.c48 IN (t1.c11))))) FROM t1; -- 0ms;
SELECT ((CAST(t1.c11 AS REAL))<=(UPPER(NULL))) FROM t1 WHERE (((NULL)<=(x'')) COLLATE RTRIM); -- 0ms;
SELECT ALL t1.c11 FROM t1 WHERE ((+ (CASE NULL  WHEN x'' THEN '(?K' END))) ORDER BY (- (((t1.c91)LIKE(t1.c91))))  NULLS LAST, ((((t1.c48)LIKE(t1.c91)))>=(((t1.c91) BETWEEN (t1.c11) AND (t1.c11))))  NULLS FIRST, (((t1.c91 IN ())) NOT BETWEEN (x'6962') AND (NULL)) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((t1.c11) BETWEEN (t1.c91) AND (t1.c48))) BETWEEN ((((0.22758883365566207))>=((t1.c91)))) AND (CASE WHEN t1.c91 THEN t1.c48 ELSE t1.c11 END)) FROM t1 WHERE ((((((0xffffffffc68b4e0d)OR(NULL)))AND(NULL)) IN ())); -- 1ms;
SELECT CAST((t1.c11 IN (t1.c11, t1.c11)) AS TEXT) FROM t1 WHERE ((NOT (((x'a6fd') BETWEEN ('-761369765') AND (')f\n/'))))); -- 0ms;
SELECT MIN(NULL) FROM t1 WHERE (TYPEOF(((((x'')OR(x'3d19')))OR(0.15967794552108483)))); -- 0ms;
SELECT DISTINCT CASE NULL  WHEN ((((x'')AND(t1.c48)))AND(t1.c11)) THEN CASE WHEN t1.c11 THEN t1.c11 END ELSE LIKELIHOOD(DISTINCT t1.c48, 0.41603704420484044) END FROM t1; -- 0ms;
SELECT DISTINCT t1.c91, (((t1.c48)) NOT BETWEEN (((t1.c91 IN ()))) AND ((json(t1.c11)))), (((GROUP_CONCAT(t1.c48), TOTAL(t1.c48), (- (t1.c11))))==((((t1.c11)<=(NULL)), AVG(t1.c91), ('#]' IN ())))) FROM t1 WHERE ((((x'')) BETWEEN ((((0.1642389524804957)<(x'')))) AND ((('G*IO^FGG' IN ('-1e500')))))); -- 0ms;
SELECT DISTINCT ((('-1492553866')>>(t1.c48)) IN ()) FROM t1 WHERE (LTRIM(NULL, CAST(NULL AS REAL))); -- 3ms;
SELECT DISTINCT (~ (((t1.c48) NOT BETWEEN (t1.c48) AND (t1.c91)))) FROM t1; -- 0ms;
SELECT ((t1.c91) NOT NULL), x'', x'' COLLATE BINARY FROM t1 WHERE (((((0.05348310565989767) NOT NULL))>=((~ ('-1928873896'))))); -- 0ms;
SELECT DISTINCT (((t1.c91, t1.c91, t1.c48)) NOT BETWEEN (((t1.c48 IN (t1.c91)), ((t1.c11) NOT BETWEEN ('-2091451144') AND (t1.c91)), ((t1.c11) NOT BETWEEN (t1.c11) AND (t1.c11)))) AND (((- (0.4332578147489654)), CASE WHEN t1.c91 THEN t1.c11 END, GROUP_CONCAT(t1.c48)))) FROM t1; -- 0ms;
SELECT DISTINCT (- (TYPEOF(DISTINCT t1.c48))) FROM t1 WHERE (((0.7411114179519341) IS FALSE) COLLATE RTRIM); -- 0ms;
SELECT t1.c48 FROM t1 LIMIT -2372033 OFFSET -1154635711; -- 0ms;
SELECT ALL MAX(TOTAL(((t1.c11)+(t1.c91)))), ((CASE WHEN 0.19754718063747956 THEN t1.c91 END)IS NOT(((((t1.c91)OR(t1.c91)))OR(t1.c91)))), CASE ((t1.c11)&(t1.c91))  WHEN ((((((((t1.c11)OR(t1.c48)))AND(t1.c48)))AND(t1.c11)))OR(t1.c11)) THEN ((t1.c91) ISNULL) WHEN COUNT(*) THEN (- (t1.c11)) WHEN (- ('')) THEN 0X42744147 ELSE MAX(t1.c11) END FROM t1;SELECT ((((t1.c91, t1.c11, t1.c91, t1.c11, NULL))>((t1.c48, t1.c48, t1.c11, t1.c91, t1.c11))) IN ()) FROM t1 WHERE ((((((0Xffffffffa7d6b0a6)) BETWEEN ((9.77899022E8)) AND ((x'390395b8'))))-((NOT (x''))))); -- 1ms;
SELECT ALL ((t1.c91)>>(TRIM(DISTINCT t1.c91))) FROM t1 WHERE (x'') LIMIT -446286744; -- 0ms;
SELECT ALL TRIM(DISTINCT CASE WHEN t1.c11 THEN '-271245931' ELSE t1.c48 END), ((((AVG(t1.c11))AND(((t1.c91)<<(t1.c11)))))OR(LTRIM(t1.c11))), (+ (CAST(NULL AS BLOB))) FROM t1 WHERE (NULL); -- 0ms;
SELECT DISTINCT CASE WHEN (('*2X\r') NOT NULL) THEN t1.c11 ELSE CAST(t1.c91 AS REAL) END FROM t1; -- 0ms;
SELECT DISTINCT CAST(((t1.c11) NOT NULL) AS INTEGER) FROM t1 WHERE ((((0.06690923588779618)) NOT BETWEEN ((((((-1.094112634E9)OR(NULL)))AND(0.1895503251051871)))) AND ((((1.833938027E9) BETWEEN ('48259134') AND (x'3216')))))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), TYPEOF(DISTINCT CASE WHEN t1.c91 THEN t1.c48 ELSE t1.c48 END), (((NOT (t1.c11)))%(TOTAL(t1.c48))) FROM t1 WHERE (((((1.156805637E9 IN (''))))>=((((NULL) NOT BETWEEN (1.234585709E9) AND ('-163714058')))))) ORDER BY t1.c91, ((((t1.c11, t1.c48, t1.c11)) NOT BETWEEN ((t1.c91, t1.c91, t1.c91)) AND ((t1.c91, t1.c48, t1.c48))) IN (CAST(0.07318007638623092 AS NUMERIC), CASE WHEN t1.c11 THEN t1.c11 WHEN t1.c11 THEN t1.c11 WHEN t1.c48 THEN t1.c48 END)) ASC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(IFNULL(t1.c91, x'')) OVER ( ORDER BY ((((t1.c91 COLLATE RTRIM)OR((NOT (x'2637')))))OR(t1.c48 COLLATE NOCASE))), ((((t1.c48)LIKE(t1.c48)))>>(TOTAL(t1.c91))), '+k瞽)OtrH<', ((CAST('' AS BLOB)) IS TRUE), (~ (UPPER(DISTINCT t1.c11))) FROM t1 WHERE ((('-1289205212' COLLATE RTRIM)LIKE(x'' COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((((t1.c48, t1.c11, t1.c91)) BETWEEN ((t1.c48, t1.c48, t1.c48)) AND ((t1.c11, t1.c11, t1.c91))))-(CAST(t1.c91 AS BLOB))) FROM t1; -- 0ms;
SELECT ALL UPPER(((((t1.c11)OR(t1.c48)))AND(t1.c48))) FROM t1 GROUP BY (((((t1.c91)>>(t1.c91)), (((t1.c11)) BETWEEN ((t1.c91)) AND ((t1.c91))), (+ (t1.c48))))=((((((t1.c11)AND(t1.c48)))OR(t1.c91)), CAST(t1.c11 AS REAL), ((t1.c48)|(t1.c91))))) LIMIT -411290113; -- 0ms;
SELECT ((t1.c11)OR(t1.c91 COLLATE NOCASE)) FROM t1 WHERE ((((('1882352995') BETWEEN ('') AND (x'94ad'))) IS TRUE)); -- 0ms;
SELECT SUM(0x59287733) OVER (), (NOT (((t1.c48)LIKE(t1.c91)))), (CASE WHEN t1.c48 THEN t1.c11 ELSE t1.c48 END IN ()) FROM t1 WHERE ((CASE WHEN 1704160800 THEN x'2a85' ELSE x'6b3a' END IN ())) GROUP BY CAST(t1.c48 COLLATE BINARY AS NUMERIC) HAVING ((((((t1.c48)AND(t1.c48)))AND(t1.c11))) NOTNULL); -- 0ms;
SELECT DISTINCT (~ (CAST('' AS BLOB))), ((((((((((((((t1.c91) ISNULL))OR(CASE t1.c11  WHEN t1.c48 THEN t1.c91 END)))OR(((((((((t1.c91)AND(t1.c48)))AND(t1.c11)))AND(t1.c91)))OR(t1.c48)))))OR(t1.c91)))OR(CAST(t1.c11 AS REAL))))AND(t1.c11 COLLATE RTRIM)))OR(((t1.c48) NOT BETWEEN (0.8422843390971408) AND (t1.c11)))), t1.c11 FROM t1 WHERE (((((((((((NULL) NOT NULL))OR(CASE x''  WHEN x'3f99' THEN 0.4155241244610637 END)))OR((('\r>')>=(NULL)))))AND(CAST('-804369330' AS BLOB))))AND(NULL COLLATE RTRIM))); -- 0ms;
SELECT t1.c91 COLLATE BINARY COLLATE BINARY COLLATE RTRIM FROM t1; -- 0ms;
SELECT DISTINCT (((- (t1.c48)))GLOB(CASE t1.c11  WHEN t1.c48 THEN t1.c91 ELSE t1.c48 END)), CAST('' AS NUMERIC) COLLATE NOCASE, TRIM(((t1.c11)%(t1.c48))) FROM t1 WHERE (CAST('1615709477' COLLATE RTRIM AS TEXT)); -- 0ms;
SELECT DISTINCT TOTAL(CAST(t1.c11 AS INTEGER)) OVER ( ORDER BY CASE ((((((((t1.c91)OR(t1.c11)))AND(t1.c91)))OR(t1.c91)))OR(t1.c11))  WHEN COALESCE(t1.c48, t1.c91) THEN json_valid(t1.c11) END  NULLS FIRST), CASE t1.c48  WHEN ((t1.c48)OR(t1.c11)) THEN (- (t1.c11)) ELSE ((NULL) NOT BETWEEN (t1.c48) AND (t1.c48)) END, ((((('酯2Ij1')|('469030554')), HEX(t1.c91), COUNT(*)))>(((((x'', t1.c91, t1.c11, t1.c48, t1.c91)) NOT BETWEEN ((t1.c11, x'', t1.c48, t1.c48, t1.c48)) AND ((t1.c11, t1.c48, t1.c48, t1.c48, t1.c91))), ((t1.c91)AND(t1.c91)), ((t1.c11) IS FALSE)))) FROM t1 ORDER BY (((((t1.c11, t1.c91, t1.c48)) BETWEEN ((t1.c11, t1.c48, t1.c11)) AND ((t1.c11, NULL, t1.c48)))) NOT BETWEEN (CAST(t1.c91 AS BLOB)) AND (TYPEOF(DISTINCT t1.c91))) LIMIT -1743599705 OFFSET -844793213; -- 0ms;
SELECT ALL CASE ((t1.c11) BETWEEN (t1.c48) AND (t1.c48))  WHEN ((t1.c48) NOT NULL) THEN t1.c91 COLLATE BINARY ELSE LIKELY(DISTINCT t1.c11) END FROM t1 WHERE ((((('-767433649')==(NULL))) BETWEEN (NULL COLLATE NOCASE) AND ((NOT (x''))))); -- 0ms;
SELECT DISTINCT ((UPPER(DISTINCT t1.c11)) IS FALSE), SUM(((0.7715654516046342) IS FALSE)), ((((t1.c11) NOTNULL))!=(CASE WHEN t1.c48 THEN t1.c48 WHEN t1.c48 THEN t1.c11 WHEN t1.c91 THEN t1.c48 ELSE '-729701181' END)) FROM t1 WHERE ((NOT (((0.5722480797915719) ISNULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t1.c91))<=((t1.c11)))) FROM t1 LIMIT -126729961 OFFSET -481238861; -- 0ms;
SELECT DATE(((t1.c48) BETWEEN (t1.c48) AND (t1.c11)), ((t1.c11) ISNULL), ((((t1.c11)AND(0.917126981634623)))OR(t1.c48))) FROM t1; -- 0ms;
SELECT DISTINCT (((((t1.c48)) NOT BETWEEN ((t1.c48)) AND ((t1.c48)))) IS FALSE), (((0X14fde617))==((((t1.c91) BETWEEN (t1.c48) AND (t1.c11))))), (((- (t1.c11))) ISNULL) FROM t1; -- 1ms;
SELECT ((((t1.c91) ISNULL))&(CASE WHEN t1.c91 THEN t1.c91 ELSE t1.c11 END)), CAST((NOT (t1.c11)) AS NUMERIC), t1.c11 FROM t1 GROUP BY ((((NULL)LIKE(t1.c48)))/((NOT (t1.c48)))); -- 0ms;
SELECT DISTINCT (('1658741520')&(t1.c48)) COLLATE RTRIM FROM t1; -- 0ms;
