-- Time: 2024/06/07 10:31:32
-- Database: database23
-- Database version: 3.40.0
-- seed value: 479547223
PRAGMA cache_size = 50000; -- 11ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
CREATE TEMPORARY TABLE IF NOT EXISTS t0 (c0 REAL ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts4(c0 UNINDEXED); -- 0ms;
INSERT OR FAIL INTO vt1 VALUES ('-1758075593'); -- 0ms;
PRAGMA incremental_vacuum(-548255176); -- 0ms;
CREATE VIRTUAL TABLE vt35 USING fts5(c0 UNINDEXED, detail=column); -- 0ms;
PRAGMA journal_mode; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree_i32(c0, c1, c2); -- 0ms;
UPDATE OR IGNORE vt35 SET (c0)=(NULL) WHERE (((vt35.c0)) BETWEEN ((vt35.c0 COLLATE RTRIM)) AND ((vt35.c0 COLLATE BINARY))); -- 0ms;
UPDATE OR IGNORE t0 SET c0=0.9548416174117914; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt35 SET (c0)=(0.4347443639227462); -- 0ms;
UPDATE OR IGNORE vt35 SET c0=NULL, c0='210656571' WHERE ((((vt35.c0)<(vt35.c0))) BETWEEN (((vt35.c0) IS FALSE)) AND (((vt35.c0) IS FALSE))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 0ms;
UPDATE OR IGNORE vt35 SET (c0)=(NULL) WHERE -1.758075593E9; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (0x5a0cb977); -- 0ms;
REINDEX; -- 0ms;
END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DROP TABLE IF EXISTS vt35; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.4347443639227462 WHERE CAST(((rt0.c2) IS TRUE) AS INTEGER); -- 0ms;
UPDATE OR IGNORE rt0 SET c2=NULL WHERE LIKELY(((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))); -- 0ms;
END; -- 0ms;
INSERT OR IGNORE INTO t0(c0) VALUES ('576169662'), (''), ('xGm{g0䨸'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR REPLACE t0 SET (c0, c0, c0)=(NULL, '-1758075593', x'513d'); -- 0ms;
PRAGMA temp.stats; -- 0ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES ('1510783351', x'', NULL); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (0.35751149747950317); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=('') WHERE rt0.c2; -- 1ms;
UPDATE rt0 SET c1=x'f701' WHERE ((TRIM(rt0.c2, rt0.c2))<=((~ (rt0.c2)))); -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT ROW_NUMBER() OVER () FROM vt1, t0, rt0 WHERE (CASE WHEN 2.10656571E8 COLLATE NOCASE THEN ((x'') IS TRUE) END); -- 1ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0Xffffffffd683aa55), (1.510783351E9), (0.8152846428004091), (NULL), (-1593855672); -- 0ms;
UPDATE OR IGNORE t0 SET (c0)=('1497800817'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('-548255176'), ('0.9548416174117914'), (NULL); -- 1ms;
DELETE FROM sqlite_stat1; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
UPDATE rt0 SET (c2)=(NULL) WHERE (((((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))AND((- (x'4554')))))OR(CAST(rt0.c1 AS REAL))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA locking_mode = EXCLUSIVE; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
PRAGMA temp.threads = -851685870616884470; -- 0ms;
ANALYZE rt0; -- 0ms;
REINDEX; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES ('	nMKQUe'); -- 1ms;
ANALYZE main; -- 0ms;
INSERT OR ABORT INTO t0 VALUES (0.35751149747950317), (NULL), (''); -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0x58f6bb1a); -- 0ms;
PRAGMA main.cache_size; -- 0ms;
UPDATE OR REPLACE vt1 SET (c0)=(-1758075593); -- 1ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE vt1 SET (c0)=('-696014251') WHERE ((vt1.c0) NOT BETWEEN (vt1.c0) AND (vt1.c0)) COLLATE RTRIM; -- 0ms;
UPDATE rt0 SET c2='mOia', c0=NULL; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO vt1 VALUES (-1593855672); -- 1ms;
INSERT OR ROLLBACK INTO t0(c0) VALUES (NULL); -- 0ms;
PRAGMA temp.secure_delete; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0(c0, c2) VALUES (0.8315432373158741, 'dgn,<TKu&'); -- 0ms;
UPDATE OR FAIL rt0 SET c1=x'd4c0'; -- 1ms;
UPDATE OR IGNORE vt1 SET (c0, c0)=('Y唙Vlꚾy둕]', x'fc97'); -- 0ms;
COMMIT; -- 0ms;
UPDATE OR IGNORE vt1 SET c0=NULL; -- 1ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c47; -- 0ms;
INSERT OR ROLLBACK INTO vt1(c0) VALUES (x''); -- 0ms;
PRAGMA main.shrink_memory; -- 0ms;
UPDATE OR FAIL rt0 SET c2=5.76169662E8; -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR FAIL t0 SET c47=NULL; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (-1923890056), (0.874388590720839), ('-1896719877'); -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (1.492564762E9); -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2='XGM{G0䨸', c2=NULL, c0=''; -- 0ms;
PRAGMA cache_size = 8821892403187204802; -- 0ms;
PRAGMA temp.incremental_vacuum; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (NULL); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO t0 VALUES (x''); -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 0ms;
CREATE UNIQUE INDEX IF NOT EXISTS i34 ON t1(((c47 COLLATE RTRIM) NOTNULL) DESC) WHERE (((c47 COLLATE NOCASE, (NOT (c47)), (((c47)) BETWEEN (('')) AND ((c47))), ABS(c47), ((c47) BETWEEN (c47) AND (c47))))>((c47 COLLATE RTRIM, (c47 IN (c47)), ((c47) IS TRUE), ((c47)<<(c47)), ((((c47)AND(1.497800817E9)))AND(c47))))); -- 0ms;
UPDATE t1 SET c47=x'', c47=NULL, c47=NULL; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (0.7798509726263575), (NULL), (x''); -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 0ms;
INSERT OR IGNORE INTO vt1(c0) VALUES (x''), (x''), (0Xffffffff8d53c478); -- 0ms;
DELETE FROM sqlite_stat1 WHERE (((((0.8245483051809042) ISNULL)))>=((((('jg쑸'))!=((0.874388590720839)))))); -- 0ms;
PRAGMA main.journal_size_limit = 0; -- 0ms;
DROP INDEX IF EXISTS "i34"; -- 0ms;
REINDEX  vt1; -- 0ms;
INSERT OR ROLLBACK INTO vt1 VALUES (''); -- 0ms;
COMMIT; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT DISTINCT ((((rt0.c1)AND(rt0.c1))) NOTNULL) FROM rt0, t0, vt1 WHERE (LIKELY(x'')) ORDER BY CASE WHEN (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((rt0.c2))) THEN (~ (rt0.c0)) END  NULLS FIRST; -- 0ms;
SELECT DISTINCT SUM(TOTAL(CASE WHEN rt0.c0 THEN rt0.c1 WHEN t0.c47 THEN x'' WHEN rt0.c2 THEN rt0.c2 END)), (((rt0.c2) BETWEEN (',R-ꅃ꩕dwA6') AND (vt1.c0)) IN ()), (((rt0.c2 IN (rt0.c2, vt1.c0)))/(((rt0.c1)IS(0.8792849224394468)))) FROM rt0;SELECT ALL (((((rt0.c2))!=((rt0.c0)))) NOT BETWEEN (((rt0.c2) ISNULL)) AND (CAST(vt1.c0 AS NUMERIC))) FROM t0, rt0 WHERE ((((((((((((('.')AND(-535907243)))OR('1583747444')))AND(0.8998333495952168)))OR(0.4347443639227462)))AND(CASE x''  WHEN NULL THEN NULL ELSE x'' END)))AND('xGm{g0䨸'))) ORDER BY ((((vt1.c0) NOT BETWEEN (vt1.c0) AND (t0.c47))) BETWEEN (1510783351 COLLATE NOCASE) AND (((rt0.c2) BETWEEN (t0.c47) AND (vt1.c0))))  NULLS FIRST;SELECT ALL '' FROM vt1 GROUP BY NULL; -- 0ms;
SELECT CASE WHEN ((rt0.c1)IS(rt0.c0)) THEN rt0.c0 COLLATE RTRIM END FROM vt1;SELECT ((NULL) ISNULL) FROM vt1 WHERE ((((~ ('576169662')))||(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((rt0.c1) IS TRUE))) AND ((((x'') IS TRUE)))) FROM t0, vt1;SELECT DISTINCT COUNT(*) COLLATE BINARY FROM t0, rt0 WHERE (((load_extension(x'')) NOTNULL)) ORDER BY rt0.c2 ASC  NULLS FIRST LIMIT 1005904663;SELECT DISTINCT 0xa34bfdd FROM rt0, vt1, t0 WHERE (CASE WHEN -548255176 THEN x'' ELSE 1907746785 END COLLATE RTRIM) GROUP BY ((NULL) IS TRUE) ORDER BY ((((rt0.c2)LIKE(rt0.c0)))>((vt1.c0 IN ()))) DESC  NULLS FIRST, rt0.c2 DESC  NULLS FIRST, CAST(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c1)) AS REAL)  NULLS FIRST; -- 0ms;
SELECT CAST(rt0.c1 AS INTEGER) COLLATE BINARY FROM vt1 WHERE (((('~r' IN ()))>(COALESCE(DISTINCT 0.1653152765185537, 0X28d93b38))));SELECT DISTINCT JULIANDAY(((rt0.c1)/(rt0.c2)), CAST(rt0.c2 AS TEXT), vt1.c0 COLLATE NOCASE) FROM rt0, t0, vt1 LIMIT 66990835; -- 0ms;
SELECT DISTINCT (COUNT(*) IN ((((vt1.c0)) NOT BETWEEN ((t0.c47)) AND ((0Xffffffff9804f8bc))))), ((((vt1.c0)==(0.32357981408595915))) ISNULL), ((UNLIKELY(DISTINCT x''))IS(((rt0.c2) NOTNULL))) FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c0)OR(rt0.c0)))OR(vt1.c0)))AND(rt0.c1)))AND(rt0.c1)))OR((~ (rt0.c0)))))AND(rt0.c0)) FROM t0 WHERE (CAST((~ ('*')) AS BLOB));SELECT DISTINCT ((rt0.c1)>(((t0.c47)>>(t0.c47)))) FROM vt1, t0, rt0 WHERE ((((('mOia') NOT BETWEEN (0.4739009942736184) AND ('-388757115'))) BETWEEN (985470467 COLLATE RTRIM) AND (CAST('0.1653152765185537' AS INTEGER)))); -- 0ms;
SELECT ALL ((rt0.c0)*(((t0.c47)%(t0.c47)))) FROM vt1, t0;SELECT DISTINCT (+ (((t0.c47) NOT BETWEEN (rt0.c0) AND (t0.c47)))) FROM rt0, t0, vt1 WHERE (((('-248987873')+('-1758075593')) IN ())); -- 0ms;
SELECT ALL (((vt1.c0 IN ())) NOTNULL) FROM rt0, t0 WHERE (NULL) GROUP BY CAST((rt0.c0 IN ()) AS BLOB), (~ (x'')), ((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0))) ISNULL); -- 0ms;
SELECT DISTINCT (CAST(rt0.c1 AS NUMERIC) IN ()) FROM vt1, t0 WHERE ((CASE WHEN '' THEN -1918666189 ELSE '210656571' END IN ())); -- 0ms;
SELECT DISTINCT ((CAST(t0.c47 AS NUMERIC)) NOT NULL) FROM rt0 WHERE (TRIM((~ (1320379310)), (((NULL)) NOT BETWEEN (('1510783351')) AND ((NULL)))));SELECT ALL GROUP_CONCAT((((t0.c47)) NOT BETWEEN ((vt1.c0)) AND ((t0.c47)))) FROM t0, vt1 FULL OUTER JOIN rt0 ON rt0.c2; -- 1ms;
SELECT DISTINCT ((((t0.c47)*(614146163)))-(LIKELIHOOD(rt0.c2, 0.15549050131548336))) FROM rt0 WHERE (((((CASE WHEN 0Xffffffff942e3418 THEN '0.4739009942736184' END)AND('493138608' COLLATE BINARY)))OR((NULL IN ()))));SELECT DISTINCT ((t0.c47 COLLATE BINARY)*(((vt1.c0) NOT NULL))) FROM rt0, t0 WHERE (0.1259634651457039);SELECT LAST_VALUE(('' IN ())) OVER () FROM vt1, t0, rt0 WHERE (((((0.377410614086766)||(x'')))IS(x'f4ab'))); -- 0ms;
SELECT DISTINCT '' FROM vt1 CROSS JOIN rt0 ON ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (NULL)))GLOB(t0.c47 COLLATE BINARY)) WHERE (rtreenode((- (0.32357981408595915)), CASE WHEN 0.39256682089317674 THEN x'' ELSE '-1758075593' END));SELECT (((+ (rt0.c2)))IS NOT(rt0.c1 COLLATE BINARY)) FROM vt1 LIMIT -361910757 OFFSET -548255176;SELECT DISTINCT (- (vt1.c0)) COLLATE NOCASE FROM t0, vt1, rt0; -- 0ms;
SELECT DISTINCT vt1.c0 FROM vt1 WHERE ((((x'c068e895')) NOT BETWEEN (((((x'', '-2081741271', '')) NOT BETWEEN ((NULL, x'', x'')) AND ((NULL, x'', NULL))))) AND ((((((x'')AND('-1744504644')))OR(0x3bf4e317)))))); -- 0ms;
SELECT DISTINCT (vt1.c0 IN ()) COLLATE RTRIM FROM t0, rt0, vt1; -- 0ms;
SELECT DISTINCT ((x'7ee9') IS TRUE) COLLATE NOCASE COLLATE BINARY, ((((((((((((NULL)AND(NULL)))OR(rt0.c2)))OR(t0.c47)))OR(rt0.c0)))OR(((0.8962818126586662)>=(rt0.c2)))))AND(GROUP_CONCAT(vt1.c0))), CASE CASE vt1.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END  WHEN CAST(rt0.c2 AS BLOB) THEN CASE 0.9646883606920669  WHEN vt1.c0 THEN rt0.c0 END ELSE ((((((((vt1.c0)AND(-2.62037181E8)))OR(rt0.c1)))AND('705451146')))OR(x'')) END FROM vt1, rt0 WHERE ((((((((NULL, '', 0xffffffffbab1ad7e))>((NULL, NULL, '>wZ2?[]Rn'))))AND('-952646421' COLLATE BINARY)))OR(0.7117275719475532)));SELECT ALL (- ((((rt0.c1))<((t0.c47))))), rt0.c1, ((NULL) IS FALSE) FROM rt0, vt1;SELECT ALL 0.874388590720839, COUNT(*) OVER (), vt1.c0, NTILE((vt1.c0 IN ())) OVER (), MIN(RTRIM(vt1.c0)) FROM vt1 LIMIT -1003891835;SELECT CASE '1726781965'  WHEN ((t0.c47) NOT BETWEEN (rt0.c1) AND (vt1.c0)) THEN (- (rt0.c2)) WHEN ((t0.c47) NOT BETWEEN (vt1.c0) AND (rt0.c2)) THEN (rt0.c0 IN ()) WHEN (vt1.c0 IN (rt0.c0)) THEN '-548255176' ELSE rt0.c1 COLLATE NOCASE END, LIKELY(DISTINCT ((t0.c47)>(rt0.c2))), ((((((t0.c47)AND(rt0.c2)))OR(rt0.c0))) NOT NULL) FROM vt1, rt0, t0 WHERE (((-1.593855672E9)||(((0.6371038910575764)*('m>S'))))); -- 0ms;
SELECT ALL (+ (vt1.c0 COLLATE RTRIM)) FROM t0, rt0, vt1 WHERE (((((((('%')AND(0x35f29c97)))OR(0.9195615830887015))))=((((((x'')OR(NULL)))AND(NULL)))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(CASE (+ (vt1.c0))  WHEN t0.c47 THEN json_insert(t0.c47, vt1.c0, '1280795') END) OVER (), CAST(-7.13599719E8 AS TEXT) COLLATE BINARY, COUNT(*) FROM rt0, vt1, t0; -- 0ms;
SELECT ALL (((vt1.c0)>(rt0.c2)) IN ()) FROM rt0, t0, vt1 WHERE (DATE(CASE WHEN NULL THEN 0.92910813837452 END, ((('⸛n#-D+'))>=((x''))), x'' COLLATE NOCASE)) ORDER BY x''  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c2))<(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))) FROM vt1, rt0, t0; -- 0ms;
SELECT ALL CAST((vt1.c0 IN ()) AS NUMERIC) FROM t0, rt0; -- 0ms;
SELECT LEAD((((0X15dd1d00)) BETWEEN ((((rt0.c2) NOT NULL))) AND ((((vt1.c0)>=(rt0.c2))))), ((CAST(rt0.c1 AS NUMERIC)) BETWEEN ((rt0.c2 IN (vt1.c0))) AND (rt0.c0 COLLATE BINARY)), '') OVER (), CAST(CASE WHEN rt0.c2 THEN t0.c47 END AS INTEGER), CASE vt1.c0  WHEN (+ (rt0.c2)) THEN ((rt0.c1) NOT NULL) ELSE ((vt1.c0) IS FALSE) END FROM rt0, vt1, t0 WHERE ((((x'2b1f')) NOT BETWEEN ((CHANGES())) AND (((0.4036783305206425 IN ()))))); -- 0ms;
SELECT ALL (+ (((t0.c47)>(rt0.c1)))) FROM t0, vt1, rt0; -- 0ms;
SELECT ((((rt0.c1)<<(x''))) BETWEEN ((t0.c47 IN (rt0.c0))) AND (((rt0.c0) ISNULL))) FROM t0 WHERE (((x'e183' COLLATE RTRIM)>>((((x'f4bb0276')) NOT BETWEEN ((0.9732408226230878)) AND (('171229149'))))));SELECT DISTINCT (((vt1.c0)) NOT BETWEEN (((((rt0.c1))=((rt0.c1))))) AND ((t0.c47 COLLATE NOCASE))) FROM t0, vt1;SELECT DISTINCT rt0.c1, ((CAST(rt0.c2 AS TEXT)) BETWEEN ((vt1.c0 IN ())) AND (CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 WHEN t0.c47 THEN rt0.c2 WHEN t0.c47 THEN rt0.c2 ELSE vt1.c0 END)), (rt0.c1 IN ()) FROM vt1, t0, rt0 WHERE ((~ ('_7'))); -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt1, t0 WHERE ((((((('1e500') ISNULL))OR(((NULL) NOT BETWEEN ('4842825') AND (NULL)))))OR(((((((((((((((((0.8962818126586662)AND(-262037181)))AND('0.377410614086766')))AND(2.10656571E8)))AND(x'')))OR('985470467')))OR(NULL)))AND(x'')))AND(0.7890395725346558))))); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE RTRIM) BETWEEN (((rt0.c1) NOT BETWEEN (rt0.c0) AND (vt1.c0))) AND (COUNT(*))) FROM t0, rt0, vt1; -- 1ms;
SELECT ALL rt0.c0 FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((load_extension(rt0.c2))OR(rt0.c0)))AND(CASE WHEN vt1.c0 THEN t0.c47 WHEN vt1.c0 THEN t0.c47 WHEN rt0.c2 THEN rt0.c1 ELSE t0.c47 END)) FROM t0, rt0, vt1;SELECT ALL (NOT (((NULL) IS TRUE))) FROM rt0 GROUP BY ((rt0.c1)<<(rt0.c0)) COLLATE BINARY, CAST(((rt0.c1) ISNULL) AS TEXT), LIKELY((rt0.c0 IN ())) HAVING (((vt1.c0, t0.c47, rt0.c1)) BETWEEN ((((t0.c47)-(vt1.c0)), rt0.c2 COLLATE BINARY, (((rt0.c1, rt0.c0, rt0.c0))>((rt0.c2, rt0.c0, t0.c47))))) AND (((((rt0.c0)) NOT BETWEEN ((t0.c47)) AND ((rt0.c0))), COUNT(*), ((rt0.c2)|(vt1.c0))))) LIMIT 705451146;SELECT ALL ((rt0.c0 COLLATE BINARY) BETWEEN (0x28d93b38) AND (rt0.c0 COLLATE RTRIM)) FROM t0 GROUP BY (vt1.c0 IN ()) HAVING ((((rt0.c0)OR(((rt0.c2) BETWEEN (rt0.c0) AND (t0.c47)))))OR((0.4651967625356519 IN (vt1.c0, rt0.c0))));SELECT ALL TOTAL(((((((((((((rt0.c2)OR(366812416)))OR(rt0.c2)))AND(x'8903')))AND(rt0.c2)))AND(vt1.c0)))AND(vt1.c0))) OVER () FROM vt1, t0, rt0 WHERE ((((x'', NULL, NULL, x'', NULL)) BETWEEN ((((((((((NULL)OR('')))AND(NULL)))AND(0.18937277165828326)))AND(-7.36488573E8)), x'', (('')||('-1918666189')), ((x'')LIKE(0.0765714526143011)), (('')IS NOT('525593294')))) AND ((NULL COLLATE BINARY, QUOTE(0.9726756317474327), x'' COLLATE BINARY, ((0.8567795762759259)/(NULL)), CASE 'n\OZX'  WHEN NULL THEN x'' WHEN NULL THEN 0x23846a83 WHEN 0x546d761c THEN x'' ELSE NULL END)))); -- 0ms;
SELECT DISTINCT TOTAL('IDz_''E73L') OVER () FROM t0, rt0 WHERE (-1758075593) GROUP BY (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c2 ELSE t0.c47 END IN (((((((((rt0.c0)AND(vt1.c0)))AND(t0.c47)))AND(vt1.c0)))AND(rt0.c1)))) HAVING MAX(CAST('217032540' AS NUMERIC));SELECT DISTINCT COUNT(*) OVER ( PARTITION BY ((((CASE WHEN t0.c47 THEN rt0.c2 END)OR(t0.c47 COLLATE NOCASE)))AND(CASE WHEN 0.0053024023275575205 THEN NULL END)), (((((rt0.c1)OR(rt0.c2)))AND(t0.c47)) IN ((((vt1.c0))!=((rt0.c1))), (t0.c47 IN ())))) FROM vt1;SELECT ALL ((((vt1.c0)) BETWEEN ((rt0.c2)) AND ((t0.c47))) IN ()) FROM rt0, t0, vt1 WHERE (ABS(CAST(0.9548416174117914 AS REAL))); -- 1ms;
SELECT ALL LEAD(rt0.c0, 0.11068976249992879, ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2))) BETWEEN (json_object(rt0.c1, rt0.c0, rt0.c0, '8A', 0.4651967625356519, '1e500')) AND (((rt0.c2)>>(rt0.c1))))) OVER () FROM rt0 WHERE (NULL) LIMIT -2092145298 OFFSET -156654027; -- 0ms;
SELECT ALL '-1791319855', (((rt0.c0)) BETWEEN ((((rt0.c1)>=(vt1.c0)))) AND ((t0.c47))), AVG((rt0.c1 IN ())) OVER () FROM vt1 WHERE ((ABS('LPl]') IN ())) GROUP BY ((((rt0.c1) ISNULL)) BETWEEN (((NULL)<>(t0.c47))) AND (((rt0.c2)<<(rt0.c2)))), ((vt1.c0 COLLATE RTRIM) NOT BETWEEN (x'2db463a8') AND (CAST(t0.c47 AS TEXT))), ((((CASE 0.8849553641942359  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c47 THEN 207986601 WHEN t0.c47 THEN t0.c47 END)OR((rt0.c0 IN ()))))OR(CASE vt1.c0  WHEN t0.c47 THEN rt0.c2 ELSE NULL END)) HAVING CAST(CAST(rt0.c2 AS INTEGER) AS REAL);SELECT ALL (((((t0.c47)OR(-5.35907243E8)))AND(t0.c47)) IN (NULL, SUM(rt0.c1))) FROM rt0, vt1;SELECT DISTINCT ((CASE WHEN vt1.c0 THEN rt0.c1 ELSE t0.c47 END)-(rt0.c0 COLLATE RTRIM)), ((CAST(rt0.c2 AS INTEGER)) BETWEEN ((rt0.c2 IN ())) AND ((rt0.c0 IN (vt1.c0)))), ((((((((((0.4293419776527202)OR(rt0.c0)))AND(rt0.c2)))AND(0.15714525941154756)))OR(rt0.c1))) ISNULL) FROM t0, rt0, vt1 WHERE ((((((('-2025505510') NOT BETWEEN (NULL) AND ('-696014251')))OR((('-262037181')IS(x'')))))OR((- (x''))))); -- 0ms;
SELECT DISTINCT CAST(MAX(vt1.c0) AS BLOB) FROM vt1 WHERE ((NOT (489739523 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (((vt1.c0))<>(((- (rt0.c1))))), COUNT(*) COLLATE NOCASE COLLATE NOCASE, vt1.c0 FROM vt1 WHERE (((LIKELY(DISTINCT 0Xfffffffff9dd76c3)) NOT BETWEEN (((NULL) ISNULL)) AND (CAST(0.9995592945881119 AS NUMERIC))));SELECT ALL ((CAST(vt1.c0 AS INTEGER)) NOT NULL) FROM t0, rt0;SELECT ALL (~ (UNLIKELY(DISTINCT t0.c47))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(((rt0.c2)>(t0.c47)) AS TEXT) FROM vt1, t0, rt0; -- 0ms;
SELECT DISTINCT AVG(((rt0.c0)IS NOT(rt0.c1))) FROM rt0, vt1, t0 GROUP BY (((rt0.c0)) NOT BETWEEN (((t0.c47 IN (rt0.c0)))) AND ((((rt0.c2)&(rt0.c0))))), CASE WHEN ((t0.c47)|(rt0.c1)) THEN CAST(rt0.c1 AS TEXT) END, CAST(((rt0.c0)|(rt0.c0)) AS INTEGER) HAVING rt0.c0; -- 1ms;
SELECT DISTINCT CAST(CAST(vt1.c0 AS REAL) AS REAL) FROM t0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*) OVER () FROM t0 WHERE ((('螘3' COLLATE NOCASE)>=((- (0.8849553641942359))))); -- 0ms;
SELECT CAST(CASE vt1.c0  WHEN vt1.c0 THEN rt0.c2 END AS INTEGER) FROM t0, rt0, vt1 GROUP BY CASE ((t0.c47)IS NOT(vt1.c0))  WHEN rt0.c0 COLLATE NOCASE THEN (rt0.c0 IN ()) WHEN ((t0.c47) IS TRUE) THEN (- (rt0.c1)) WHEN (NOT (rt0.c1)) THEN CASE vt1.c0  WHEN rt0.c2 THEN rt0.c2 ELSE t0.c47 END WHEN ((rt0.c0) ISNULL) THEN ((rt0.c0)|(t0.c47)) WHEN ((rt0.c0) BETWEEN (rt0.c2) AND (vt1.c0)) THEN ((vt1.c0) ISNULL) ELSE CASE vt1.c0  WHEN rt0.c1 THEN t0.c47 END END HAVING (((((((((- (0Xffffffffc3d4aee6)))OR(((rt0.c0)>(vt1.c0)))))OR(((((t0.c47)OR(t0.c47)))OR(rt0.c2)))))OR('')))OR((('-713599719')<<(t0.c47)))) ORDER BY ((CASE rt0.c0  WHEN rt0.c1 THEN t0.c47 ELSE rt0.c2 END)-(((rt0.c1)-(rt0.c1)))) DESC; -- 0ms;
SELECT ALL NULL, (((((vt1.c0, rt0.c2, 0.8792849224394468))==((rt0.c0, rt0.c0, rt0.c0))))GLOB((+ (rt0.c2)))), ((((rt0.c0) ISNULL))==(((rt0.c1) NOT NULL))) FROM rt0, t0 WHERE ((((- (NULL))) NOT NULL));SELECT TOTAL(((((t0.c47)OR(t0.c47)))OR(0Xffffffffb736fb88))), ((((((t0.c47) NOT BETWEEN (vt1.c0) AND (rt0.c2)))AND(COUNT(*))))OR(CASE vt1.c0  WHEN rt0.c2 THEN t0.c47 WHEN 0.954489471743223 THEN t0.c47 WHEN rt0.c0 THEN rt0.c2 END)), TRIM(((rt0.c0) IS TRUE)) FROM vt1, t0;SELECT DISTINCT (((((vt1.c0)|(t0.c47)), (((rt0.c0))<>((t0.c47))), ((rt0.c1) IS FALSE)))<((rt0.c0, CASE WHEN vt1.c0 THEN rt0.c2 END, ((vt1.c0)>>(rt0.c1))))), (((vt1.c0 IN ())) NOT BETWEEN (((vt1.c0) NOTNULL)) AND ((rt0.c1 IN ()))), (((vt1.c0 IN ()))IS((+ (rt0.c2)))), TIME(x'', CAST(rt0.c1 AS INTEGER), (((('	佔7<	2')OR(rt0.c1)))OR(rt0.c1)), ((((rt0.c0)OR(t0.c47)))AND(rt0.c1)), CAST(t0.c47 AS TEXT), (rt0.c2 IN ()), CASE WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c47 THEN rt0.c0 END), rt0.c1 FROM t0, vt1;SELECT (NOT (0x112e1b5)), rt0.c0 COLLATE BINARY, TYPEOF(MIN(vt1.c0)) FROM vt1, rt0, t0 WHERE ((CASE WHEN 0.9548416174117914 THEN -1744504644 ELSE 0.4293419776527202 END IN ())) LIMIT -1154784824 OFFSET -2082404739; -- 0ms;
SELECT DISTINCT COUNT(*) FROM vt1 ORDER BY (NULL IN ()) DESC; -- 0ms;
SELECT DISTINCT ((CAST(vt1.c0 AS INTEGER)) NOT NULL) FROM rt0, vt1 ORDER BY t0.c47  NULLS LAST, ((((rt0.c1)%(rt0.c2)))>=(((((rt0.c1)AND(rt0.c1)))AND(t0.c47))));SELECT COUNT((~ (vt1.c0))) OVER ( PARTITION BY CAST(((rt0.c1)<<(rt0.c0)) AS BLOB), CASE WHEN ((rt0.c0)&(vt1.c0)) THEN ((t0.c47) BETWEEN (0.33589328405208396) AND (vt1.c0)) ELSE CAST(rt0.c0 AS TEXT) END) FROM t0, rt0;SELECT DISTINCT CAST(NULL AS TEXT), (((((vt1.c0 IN ()))AND(SUM(rt0.c2))))AND(((vt1.c0)-(rt0.c0)))), DENSE_RANK() OVER (), (((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((COUNT(rt0.c2), ((rt0.c0)LIKE(rt0.c2)), COUNT(rt0.c2))) AND ((((t0.c47) IS TRUE), rt0.c1 COLLATE BINARY, rt0.c1))), SUM((rt0.c2 IN ())) FROM rt0, t0, vt1; -- 0ms;
SELECT DISTINCT (((t0.c47)=(vt1.c0)) IN ()) FROM rt0 WHERE ((((('螘3' IN (0.35674327062031774))))==((CASE WHEN x'' THEN 0Xfffffffff808729c END)))); -- 0ms;
SELECT DISTINCT (+ (rt0.c0)) COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT CASE WHEN MIN(rt0.c0) THEN (t0.c47 IN (rt0.c2)) END FROM vt1, rt0 WHERE (CAST('' AS BLOB)) ORDER BY CASE ((t0.c47)OR(rt0.c0))  WHEN ((rt0.c1)<<(rt0.c0)) THEN ((vt1.c0) BETWEEN (vt1.c0) AND (vt1.c0)) WHEN CASE WHEN rt0.c2 THEN rt0.c1 END THEN ((rt0.c1) NOT NULL) WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (0xffffffffc737c4eb)) THEN ((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)) END ASC LIMIT 1221092065 OFFSET -1141722358;SELECT ALL COUNT(*) FROM rt0, t0, vt1 WHERE (CAST(((x'')LIKE('-713599719')) AS INTEGER)); -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT CAST(CASE WHEN '1241421544' THEN rt0.c1 ELSE rt0.c0 END AS NUMERIC) FROM vt1;SELECT (((- (rt0.c1))) NOTNULL) FROM rt0 LIMIT -9223372036854775808; -- 0ms;
SELECT ALL ((TOTAL(0.3434953697208881)) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((~ (rt0.c0)) COLLATE RTRIM), CAST(rt0.c1 COLLATE RTRIM AS REAL), (rt0.c2 COLLATE NOCASE IN ()) FROM vt1, t0, rt0 WHERE (UPPER(DISTINCT CASE 0Xffffffffeeda4f07  WHEN x'' THEN x'' WHEN -1152546050 THEN x'' WHEN NULL THEN 'E' WHEN NULL THEN '207986601' WHEN '' THEN x'' END)); -- 0ms;
SELECT ALL ((CAST(t0.c47 AS INTEGER)) BETWEEN (rt0.c2) AND (((rt0.c1)+(rt0.c0)))) FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT NULL), MAX(CAST(rt0.c2 AS BLOB)) COLLATE BINARY, (((AVG(vt1.c0)))==(((((rt0.c0)) BETWEEN ((vt1.c0)) AND ((vt1.c0)))))) FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((rt0.c1)LIKE(SQLITE_COMPILEOPTION_GET(t0.c47))) FROM vt1, rt0, t0; -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))) FROM t0 WHERE (((((NULL)-(x'')))OR((x'' IN ()))));SELECT '', ((rt0.c2)<>((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c0))))), ((((0.8998333495952168)/(vt1.c0))) IS FALSE), ((NULL) BETWEEN (vt1.c0) AND (rt0.c1)) COLLATE NOCASE, ((COUNT(t0.c47))%((((t0.c47)) NOT BETWEEN ((rt0.c0)) AND ((t0.c47))))) FROM rt0, t0, vt1 WHERE ((((NULL))=(((NOT (NULL)))))) LIMIT -1515772497 OFFSET -75259962; -- 0ms;
SELECT DISTINCT SUM((+ (rt0.c2))) FROM rt0, vt1, t0 WHERE (TRIM(DISTINCT x'8492', 0Xc659fa9) COLLATE NOCASE); -- 0ms;
SELECT ALL (((- (vt1.c0))) NOTNULL) FROM rt0 GROUP BY (((((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2))))=((((rt0.c1) BETWEEN ('1083684297') AND (vt1.c0))))) HAVING ((((((((((rt0.c2)AND(vt1.c0)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1))) NOT BETWEEN (rt0.c2) AND ((((vt1.c0, vt1.c0, vt1.c0))>=((rt0.c2, t0.c47, t0.c47)))));SELECT DISTINCT ((TRIM(rt0.c2, t0.c47))!=(((rt0.c1)<(rt0.c0)))) FROM t0, vt1 WHERE (((0X1d64b2b0) BETWEEN (((NULL) ISNULL)) AND ((NOT (0.06255462079511509)))));SELECT '-736488573' FROM rt0 WHERE ((((0.3434953697208881) ISNULL) IN ())); -- 0ms;
SELECT DISTINCT x'062a' FROM t0, vt1, rt0 LIMIT 795694213; -- 0ms;
SELECT (((x'', ABS(DISTINCT t0.c47), (x'' IN (rt0.c1, t0.c47))))<=((((-5.35907243E8)AND(rt0.c0)), ((rt0.c0) NOTNULL), (vt1.c0 IN ())))) FROM vt1, t0, rt0 WHERE (((CASE '-361910757'  WHEN x'' THEN '~l' WHEN NULL THEN x'' WHEN x'' THEN 0.8360253536086376 ELSE NULL END) BETWEEN (((NULL) IS FALSE)) AND ((('/鿀B/[u2') NOTNULL)))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM vt1, rt0, t0; -- 0ms;
SELECT ALL (rt0.c0 COLLATE NOCASE IN (CAST(x'57bb' AS BLOB), ((t0.c47)&(rt0.c0)))) FROM t0, rt0, vt1 WHERE ((((-400059361)) NOT BETWEEN (((((0.8092118355300164)) NOT BETWEEN ((NULL)) AND (('1306721258'))))) AND (((('-50069480') NOT BETWEEN (-1003261330) AND (-2007529436)))))); -- 0ms;
SELECT TRIM(DISTINCT ((rt0.c0) BETWEEN (vt1.c0) AND (vt1.c0))), ((t0.c47 IN (t0.c47)) IN ()), MIN(((((rt0.c1)OR(rt0.c1)))AND(rt0.c2))) FROM t0, rt0;SELECT DISTINCT (((~ (rt0.c2)))AND(((((vt1.c0)OR(t0.c47)))OR(vt1.c0)))) FROM t0, vt1, rt0 WHERE (((((((((0.2784092199927698 COLLATE BINARY)OR((NOT (0.7117275719475532)))))AND((- (0.1259634651457039)))))AND(((0.919844484121004)%(x'b914')))))AND(((0Xfffffffff1fc990b)>>(0.7905393900467783))))); -- 0ms;
SELECT ALL rt0.c1 FROM rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c2, CAST((((vt1.c0, vt1.c0, rt0.c1)) BETWEEN ((rt0.c1, rt0.c1, rt0.c0)) AND ((vt1.c0, rt0.c0, t0.c47))) AS TEXT), 0.6223496001196461 FROM vt1 LIMIT 905092247;SELECT DISTINCT ((CAST(rt0.c0 AS NUMERIC))-(((((t0.c47)OR('<ZTBd]')))OR(rt0.c2)))), (((rt0.c0)-(t0.c47)) IN ()), rt0.c1 FROM rt0, vt1, t0 WHERE ((('-102926653')||(((-501941548) NOT BETWEEN ('711263863') AND (NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((vt1.c0) NOT BETWEEN (x'') AND (vt1.c0)))AND(MAX(rt0.c2))))OR((rt0.c1 IN ()))))OR((- (rt0.c1)))))OR(((vt1.c0)IS NOT(rt0.c0)))), ((x'')+(t0.c47)) COLLATE BINARY, ((((((((((((rt0.c0)OR(rt0.c1)))AND(rt0.c1)))AND((NOT (rt0.c0)))))AND(((vt1.c0) NOTNULL))))OR(CASE WHEN vt1.c0 THEN rt0.c2 ELSE vt1.c0 END)))AND(((((((((((((vt1.c0)OR(rt0.c2)))AND(t0.c47)))OR(x'')))OR(rt0.c1)))OR(rt0.c1)))AND('-674545542')))) FROM rt0 WHERE (LIKELY(-2081741271 COLLATE NOCASE)) ORDER BY t0.c47 ASC;SELECT DISTINCT ((NULL)%(CAST(vt1.c0 AS TEXT))), NTILE((~ (vt1.c0)) COLLATE RTRIM) OVER (), TOTAL((rt0.c0 IN ())) OVER ( ORDER BY (((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((t0.c47))))IS NOT((((('>Au')AND(t0.c47)))OR(t0.c47)))) ASC  NULLS FIRST), LEAD(TRIM(DISTINCT ((vt1.c0)>(vt1.c0)), t0.c47), (('') NOT BETWEEN ((NULL IN ())) AND (((vt1.c0)IS NOT(NULL)))), NULL) OVER ( ORDER BY ((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0)) COLLATE BINARY DESC, ((t0.c47) NOT BETWEEN (vt1.c0) AND (t0.c47)) COLLATE NOCASE, ((rt0.c1 COLLATE NOCASE) NOTNULL) ASC), (~ ((((('-880298750')OR(vt1.c0)))AND(t0.c47)))) FROM vt1, t0, rt0; -- 1ms;
SELECT DISTINCT ((t0.c47) ISNULL) FROM vt1 WHERE (CASE WHEN ((NULL) IS FALSE) THEN NULLIF(DISTINCT '-583546570', x'') WHEN CAST(x'' AS BLOB) THEN ((0.3726964919567979)IS NOT(x'')) WHEN (+ ('-878479882')) THEN ((0.1485575116778386)IS NOT(x'')) END) LIMIT 98729820;SELECT DISTINCT CAST((']፺딁%Ⴌ7' IN (t0.c47)) AS REAL) FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((rt0.c2)*(vt1.c0)) COLLATE NOCASE FROM rt0, t0 LIMIT -287682809 OFFSET -129883919;SELECT ALL ((rt0.c2 COLLATE RTRIM)>>(((x'f81c') IS TRUE))), (((((((rt0.c0)) BETWEEN ((t0.c47)) AND ((vt1.c0))))OR(AVG(rt0.c0))))OR(NULL)), (rt0.c1 COLLATE BINARY IN ()) FROM t0, rt0 WHERE (CAST(((NULL)/('0.874388590720839')) AS TEXT)) GROUP BY (~ (rt0.c0)), 0.3150118995089455, ((((vt1.c0)OR(rt0.c0 COLLATE BINARY)))AND(((vt1.c0) NOTNULL)));SELECT TRIM(DISTINCT ((vt1.c0)||(rt0.c0))) FROM t0, rt0 GROUP BY x'', ((((((((((rt0.c0)OR(rt0.c0)))OR(t0.c47)))AND(rt0.c2)))AND(vt1.c0)))<=(CASE WHEN t0.c47 THEN rt0.c2 WHEN rt0.c0 THEN t0.c47 WHEN rt0.c2 THEN vt1.c0 ELSE t0.c47 END)), LTRIM(rt0.c1, vt1.c0) COLLATE RTRIM HAVING CAST(((((((((vt1.c0)AND(rt0.c0)))AND(rt0.c0)))OR(t0.c47)))OR(vt1.c0)) AS TEXT);SELECT ((t0.c47) BETWEEN (((((rt0.c0)AND(vt1.c0)))OR(t0.c47))) AND (((x'9c27104e')LIKE(rt0.c0)))) FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (rt0.c0) AND (t0.c47)))+(rt0.c1)), LOWER(NULL), CASE WHEN (t0.c47 IN (vt1.c0, t0.c47)) THEN ((t0.c47)+(rt0.c2)) WHEN CASE WHEN t0.c47 THEN rt0.c0 END THEN (((t0.c47))!=((rt0.c0))) WHEN CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 END THEN COUNT(*) ELSE ((t0.c47) BETWEEN (t0.c47) AND (vt1.c0)) END FROM t0 WHERE (NULLIF(CAST(0x35f29c97 AS BLOB), CAST('0.9726756317474327' AS INTEGER))) LIMIT -1020997468 OFFSET -1487576132;SELECT ALL (NOT (TOTAL(vt1.c0))) FROM t0 LIMIT -1154784824 OFFSET 190924348;SELECT DISTINCT CASE WHEN CASE WHEN 0.8384979812849135 THEN rt0.c0 ELSE rt0.c0 END THEN SUBSTR(rt0.c1, rt0.c0) END, SQLITE_SOURCE_ID(), ((((((((CASE t0.c47  WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c0 END)AND('-141200690')))AND(((rt0.c0) NOT BETWEEN (x'') AND (rt0.c2)))))OR(CAST(rt0.c1 AS REAL))))AND(CAST(rt0.c0 AS TEXT))) FROM vt1, t0 WHERE ((((('>wZ2?H]-n') NOT BETWEEN ('\rK') AND (''))) NOT BETWEEN (0.5341738716583961 COLLATE RTRIM) AND ((NULL IN ())))) ORDER BY ((((t0.c47))=((t0.c47))) IN (((rt0.c0) IS FALSE))) ASC  NULLS FIRST, (((((((x'bb40'))>((rt0.c2))))AND(CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 END)))OR(((0xffffffffbab1ad7e) BETWEEN ('l>u/g^X') AND (rt0.c2)))) DESC  NULLS FIRST;SELECT DISTINCT ((((rt0.c1)%(rt0.c2))) ISNULL) FROM vt1, t0, rt0 LIMIT -2081741271 OFFSET 1583747444; -- 0ms;
SELECT ALL '' COLLATE NOCASE COLLATE BINARY, ((((NULLIF(rt0.c2, rt0.c2))AND(CAST(t0.c47 AS INTEGER))))OR((+ (t0.c47)))), COALESCE(DISTINCT MIN(x'8dab'), CASE WHEN rt0.c0 THEN vt1.c0 END, (+ (rt0.c2)), ((((t0.c47)AND(rt0.c0)))AND(t0.c47))) FROM t0, rt0, vt1 ORDER BY CASE t0.c47  WHEN rt0.c1 THEN t0.c47 ELSE rt0.c2 END COLLATE RTRIM LIMIT 576169662 OFFSET -315748519; -- 0ms;
SELECT ALL ((((((((0.5328741954136472)OR(t0.c47)))AND(vt1.c0)))AND(CAST(vt1.c0 AS TEXT))))OR(CAST(rt0.c1 AS REAL))) FROM t0, rt0, vt1 WHERE (CASE WHEN json_patch(x'', -235103989) THEN (((x''))>=((''))) END);SELECT DISTINCT ((((((rt0.c2)AND(rt0.c2)))OR(0.9486231785372602))) NOT BETWEEN (0Xffffffffde907449) AND (((vt1.c0)&(t0.c47)))) FROM t0, vt1, rt0 WHERE ((((('Y\0늰')LIKE('-303755092'))) IS FALSE)); -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(rt0.c0)))>>(((rt0.c0)>=(rt0.c1)))) FROM rt0, vt1 LIMIT -1512470255; -- 0ms;
SELECT (((('Kq')*(t0.c47))) BETWEEN (t0.c47) AND (((rt0.c2)*(t0.c47)))) FROM t0 GROUP BY ((CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END)GLOB(((t0.c47) NOT BETWEEN (rt0.c0) AND (rt0.c0))));SELECT (((t0.c47, 0.13435795056328426, vt1.c0)) NOT BETWEEN ((json_quote(vt1.c0), vt1.c0, rt0.c2 COLLATE NOCASE)) AND ((-400059361, rt0.c1, ((rt0.c0)*(rt0.c0))))), SUM('985470467'), ((((rt0.c0)<(rt0.c2)))GLOB(NULL)) FROM vt1;SELECT ALL ((rt0.c0)||(rt0.c1)) COLLATE RTRIM, NULLIF(((0.6703506487443537)+(rt0.c0)), '1939391460'), ABS(DISTINCT x'8096c17a') FROM vt1 WHERE (((NOT (x'')) IN (CASE WHEN '457695892' THEN 0.3677401220966525 ELSE 0X23846a83 END, ((0x5f4ae143) NOT NULL))));SELECT ALL (((((t0.c47 IN ()))OR(((vt1.c0)>=(rt0.c1)))))AND((vt1.c0 IN (rt0.c1, vt1.c0)))) FROM rt0, t0, vt1 WHERE ((((COALESCE(DISTINCT 0Xffffffffc4f6e123, 1493620661), CASE x''  WHEN 6.6990835E7 THEN '387288703' WHEN 'gTuS\r\nQO归' THEN '鲧' WHEN x'' THEN x'914b7cfa' ELSE '1306721258' END, RTRIM('-405351112')))>((('U' IN (0.34769311813667414)), ((NULL)&(0.18673520136094723)), ((('-1449738966', NULL, x''))<(('槲^~l_y', 'LG.8o*', 0xffffffff83eb2629))))))); -- 0ms;
SELECT ALL COUNT(CASE WHEN t0.c47 THEN t0.c47 END) OVER () FROM vt1, t0; -- 0ms;
SELECT ALL ((((rt0.c2)) NOT BETWEEN ((t0.c47)) AND ((t0.c47))) IN (((rt0.c0) NOT NULL), LIKELY(x''))) FROM rt0, t0 WHERE (LIKELIHOOD((('-1657139620')LIKE(0.7855734066694745)), 0.8706535594769853)); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c0))) IS FALSE) FROM rt0 WHERE (COALESCE(CAST('1280795' AS NUMERIC), (((7.05451146E8))>((NULL))))); -- 0ms;
SELECT DISTINCT (((t0.c47)) BETWEEN (((vt1.c0 IN ()))) AND (((rt0.c2 IN (rt0.c2))))) FROM rt0, t0, vt1 LIMIT 2080294564 OFFSET -1995602144; -- 1ms;
SELECT DISTINCT x'' FROM rt0, vt1 WHERE (((((((NULL)*('943284745')))OR((((0.08507297253097013, NULL, 0.9465955905151058)) NOT BETWEEN ((-1608963813, '>O.q', 0.29418487533834303)) AND (('(7be\n1', '', NULL))))))AND(((NULL) IS TRUE)))); -- 0ms;
SELECT ALL CAST((+ (-2.02550551E9)) AS REAL), ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c47)) COLLATE RTRIM, (~ (CASE rt0.c1  WHEN vt1.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END)) FROM rt0, vt1, t0 WHERE (((((('902122837' IN (x'', x'', NULL)))AND(x'ecdf')))OR(LIKELY(DISTINCT '')))) ORDER BY ((((rt0.c2)GLOB(vt1.c0)))%((NOT (x'')))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT 'u6\r0U薢U_''' FROM vt1; -- 0ms;
SELECT ((SUM(rt0.c0))AND(-6.96014251E8)) FROM rt0, vt1; -- 0ms;
SELECT (~ ((((rt0.c0, rt0.c1, rt0.c2)) BETWEEN (('171229149', 'yUcSPﮈ''*#', rt0.c2)) AND ((rt0.c0, vt1.c0, t0.c47))))) FROM vt1, rt0 WHERE (((NULL COLLATE BINARY) NOT NULL));SELECT ALL (((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((rt0.c0)))) NOT NULL) FROM t0 WHERE (((('1893947570' IN ())) IS FALSE));SELECT DISTINCT (((t0.c47) IS TRUE) IN ()) FROM t0, rt0 WHERE (((-1547355674) BETWEEN (CAST('493138608' AS TEXT)) AND (((((((((NULL)OR('-1744504644')))AND('-1003261330')))AND(x'')))OR(0.24432319861105845))))); -- 1ms;
SELECT DISTINCT CASE (rt0.c1 IN (rt0.c1))  WHEN 0X74219b24 THEN ((t0.c47)<<(rt0.c2)) END, CAST(((t0.c47) IS TRUE) AS BLOB), 'p^+)Q5m	' FROM t0, vt1, rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE BINARY AS REAL), (((vt1.c0) NOTNULL) IN (((t0.c47) NOT BETWEEN (rt0.c1) AND (NULL)))), ((((vt1.c0)<<(rt0.c0))) IS FALSE) FROM rt0 ORDER BY 'xGm{g0䨸';SELECT ((+ (vt1.c0)) IN (SQLITE_SOURCE_ID())) FROM t0, rt0, vt1 WHERE (CAST(NULL COLLATE BINARY AS INTEGER)) GROUP BY json_insert(((t0.c47)>>(rt0.c2)), LAST_INSERT_ROWID(), COALESCE(DISTINCT t0.c47, rt0.c1, t0.c47, rt0.c2)), ((((((('-1744504644', rt0.c0, t0.c47)) NOT BETWEEN ((vt1.c0, 0.9439591330183255, NULL)) AND ((t0.c47, rt0.c0, vt1.c0))))OR(CAST(t0.c47 AS BLOB))))AND(TRIM(t0.c47))), rt0.c0 LIMIT -125817544 OFFSET 861663077; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS NUMERIC) FROM vt1 WHERE (((((NULL)LIKE(-1.744504644E9))) IS FALSE)) LIMIT -772317632 OFFSET -1497345956; -- 0ms;
SELECT -1311516631 FROM t0, vt1, rt0 WHERE ((+ (CAST(2.10656571E8 AS INTEGER)))); -- 0ms;
SELECT ((rt0.c1)IS NOT(CAST(rt0.c2 AS REAL))), ((((t0.c47)!=(rt0.c1))) BETWEEN (CAST(rt0.c1 AS TEXT)) AND ((rt0.c0 IN ()))), CAST(((vt1.c0) IS FALSE) AS TEXT) FROM t0, vt1, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)+(t0.c47)))*('dX%O')) FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT rt0.c2, GROUP_CONCAT(TRIM(rt0.c0) COLLATE NOCASE), CAST(((0.008554597673191111) NOT BETWEEN (t0.c47) AND (rt0.c0)) AS TEXT) FROM t0;SELECT ((((TOTAL(rt0.c1))AND(((t0.c47)|(rt0.c1)))))AND(TRIM(DISTINCT vt1.c0, rt0.c0))) FROM t0, vt1, rt0 WHERE (LIKELIHOOD(DISTINCT (0.682494948334875 IN ()), 0.7418093355531422)); -- 1ms;
SELECT ((((CASE vt1.c0  WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END)AND(((rt0.c0) IS FALSE))))AND(CAST(rt0.c1 AS TEXT))), (~ (((rt0.c2) NOTNULL))), ((rt0.c0 COLLATE NOCASE) NOTNULL) FROM vt1;SELECT ALL ((rt0.c2)/(x'')) FROM rt0, t0, vt1; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((t0.c47)||(0.9809768028604082))) FROM rt0, t0, vt1 WHERE (x'') ORDER BY ((((rt0.c0)%(rt0.c1))) ISNULL)  NULLS LAST; -- 0ms;
SELECT ((CAST(rt0.c1 AS INTEGER))=(LIKELY(0.06255462079511509))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN (x'')) AS BLOB), ((((rt0.c2) ISNULL)) NOTNULL), LAST_VALUE(NULL) OVER () FROM t0, rt0, vt1 LIMIT 493138608; -- 0ms;
SELECT ALL ((((rt0.c0) ISNULL))GLOB((rt0.c2 IN (rt0.c0)))) FROM t0, vt1 WHERE (((((('Dp'))<((NULL)))) NOT NULL)) GROUP BY ((((rt0.c2)IS(vt1.c0)))-((- (rt0.c1)))) HAVING json_type(((rt0.c0) ISNULL));SELECT DISTINCT ((((t0.c47)>(vt1.c0)))||(CAST(t0.c47 AS INTEGER))) FROM rt0 WHERE (TRIM(DISTINCT 0.5134965436319288) COLLATE NOCASE);SELECT DISTINCT '', ((((((((((vt1.c0)OR(t0.c47)))AND(525110814)))OR(t0.c47)))AND(t0.c47)))>>(CASE rt0.c2  WHEN rt0.c1 THEN rt0.c0 END)), RANK() OVER () FROM t0 WHERE (((((((((((x'')>('LPl]')))AND((((NULL))>((-130896302))))))OR(((((0.9712668289936639)AND(x'')))OR(0.7855648727464585)))))OR(('' IN (NULL)))))OR((('') NOT BETWEEN (2038074504) AND ('18014645'))))) ORDER BY (((vt1.c0)+(rt0.c2)) IN ())  NULLS FIRST LIMIT 151057665;SELECT ALL rt0.c1 FROM rt0, vt1, t0 WHERE (((((0.666733261287755, x'a719', 0.968522595119324))>((NULL, x'', ''))) IN ())); -- 0ms;
SELECT ((MIN(t0.c47)) NOTNULL) FROM t0, vt1; -- 0ms;
SELECT ALL (- (vt1.c0)) COLLATE NOCASE, (+ (CAST(210656571 AS NUMERIC))), CASE WHEN (NULL IN ()) THEN ((t0.c47) NOT BETWEEN (t0.c47) AND (vt1.c0)) END, TOTAL(CASE rt0.c0  WHEN t0.c47 THEN rt0.c2 WHEN t0.c47 THEN x'8479' WHEN t0.c47 THEN vt1.c0 ELSE rt0.c1 END) OVER (), MAX(((vt1.c0)&(rt0.c0))) FROM rt0, vt1 NOT INDEXED, t0 WHERE (x'') GROUP BY CASE vt1.c0  WHEN (((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) THEN ((vt1.c0) NOT BETWEEN (t0.c47) AND (t0.c47)) WHEN ((rt0.c0)>>(t0.c47)) THEN rt0.c0 WHEN (rt0.c1 IN (rt0.c1)) THEN (~ (vt1.c0)) END HAVING CAST(((rt0.c2)<<(rt0.c1)) AS REAL); -- 0ms;
SELECT ((((rt0.c0)IS('l>u/g^X')))+((((t0.c47)) BETWEEN ((1280795.0)) AND ((rt0.c1))))) FROM rt0;SELECT (((rt0.c0 IN ()))>(((rt0.c2)>(rt0.c0)))) FROM vt1 WHERE (((((((((LIKELY(NULL))AND((((x'd4b1c321')) NOT BETWEEN (('614146163')) AND (('1939391460'))))))OR(CAST('1005904663' AS TEXT))))AND((- (0.12214828734294436)))))AND((('-1020997468')-(''))))) LIMIT -2081741271;SELECT ((((((((((rt0.c0)IS(rt0.c0)))OR(rt0.c0)))OR(((vt1.c0)!=(rt0.c0)))))AND('-560958391')))AND(((t0.c47) NOT BETWEEN (t0.c47) AND (vt1.c0)))) FROM t0, rt0;SELECT ALL (((~ (t0.c47))) NOTNULL), CASE WHEN rt0.c2 THEN (rt0.c2 IN (rt0.c1)) END, x'1ba6' FROM t0, vt1 WHERE (CAST(((((-1.593855672E9)AND(NULL)))OR(0.8567795762759259)) AS NUMERIC));SELECT ((CASE rt0.c1  WHEN t0.c47 THEN vt1.c0 WHEN vt1.c0 THEN rt0.c2 WHEN rt0.c0 THEN NULL END)&('1005904663')) FROM t0, rt0, vt1 GROUP BY (((((((((+ (vt1.c0)))AND((+ (rt0.c0)))))OR(UNLIKELY(x''))))AND(0.5328741954136472)))AND(NULLIF(DISTINCT rt0.c0, rt0.c0))), ((((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))))=((rt0.c0 COLLATE RTRIM))), (~ (rt0.c1)); -- 1ms;
SELECT ALL (vt1.c0 COLLATE BINARY IN ()), CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS TEXT), ((NULL) NOT BETWEEN (((vt1.c0)%(rt0.c0))) AND (((((rt0.c0)OR(rt0.c0)))AND(t0.c47)))), ((((((0.4293419776527202)OR(t0.c47)))OR(t0.c47)))IS NOT(CAST(t0.c47 AS NUMERIC))), ((((7.11263863E8)AND(rt0.c2)))AND('-583546570')) COLLATE RTRIM FROM t0 WHERE (((((x'')OR(x'9ca9'))) BETWEEN (CAST(0.029362641982174642 AS INTEGER)) AND ((x'' IN ()))));SELECT DISTINCT (UNLIKELY(DISTINCT rt0.c2) IN ()) FROM t0, vt1; -- 0ms;
SELECT DISTINCT (((x'' IN ())) BETWEEN (x'') AND (rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (((((((NULL)AND(x'645a')))OR(-808608378)))>=((('0.8998333495952168') NOT NULL)))); -- 0ms;
SELECT DISTINCT '-400059361', (((((rt0.c1, rt0.c2, rt0.c0)) BETWEEN ((t0.c47, t0.c47, vt1.c0)) AND ((t0.c47, vt1.c0, rt0.c2))))LIKE(((vt1.c0)AND(vt1.c0)))), ((((((((rt0.c2 COLLATE RTRIM)OR(((((rt0.c2)AND(NULL)))AND(t0.c47)))))AND((+ (rt0.c1)))))AND(MIN(rt0.c2))))AND((((rt0.c2))==((rt0.c1))))) FROM t0, vt1, rt0 WHERE (x''); -- 0ms;
SELECT ALL CAST(rt0.c2 AS INTEGER) FROM rt0, t0 LIMIT 366812416; -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE)=(rt0.c2)) FROM t0, vt1;SELECT DISTINCT (('%') NOT NULL) FROM t0, rt0, vt1 WHERE ((((x'' IN ())) ISNULL)); -- 0ms;
SELECT ALL (((vt1.c0)<<(rt0.c0)) IN ((NOT (rt0.c0)))) FROM rt0;SELECT ALL CAST(vt1.c0 AS NUMERIC) FROM vt1 WHERE ((((((((((((0.29418487533834303))<=((0.8278523963684185))))OR(((NULL)<(x'0b5b')))))AND(CAST('-156654027' AS NUMERIC))))OR((('358364519')OR('472531567')))))OR(LIKE(NULL, '1221092065')))); -- 0ms;
SELECT ALL (((((t0.c47)) NOT BETWEEN ((rt0.c2)) AND ((vt1.c0)))) BETWEEN ((t0.c47 IN ())) AND (((t0.c47)<(rt0.c2)))), x'' COLLATE BINARY COLLATE RTRIM, ROW_NUMBER() OVER (), (CAST(rt0.c1 AS REAL) IN ()), (NOT (CASE WHEN rt0.c0 THEN rt0.c0 END)) FROM t0, vt1;SELECT DISTINCT rt0.c0, (((((rt0.c1)) NOT BETWEEN ((t0.c47)) AND ((vt1.c0)))) IS TRUE), '0.9465955905151058' FROM vt1;SELECT ((((((((((((rt0.c2)AND(rt0.c2)))AND(t0.c47)))AND(rt0.c2)))AND(rt0.c2)))AND(t0.c47)))AND(t0.c47)) COLLATE BINARY, x'', ((((t0.c47) NOT BETWEEN (1.907746785E9) AND (t0.c47)))AND((rt0.c2 IN ()))) FROM rt0, t0, vt1; -- 0ms;
SELECT DISTINCT COUNT(*), MAX(((rt0.c1)GLOB(t0.c47))), ((((vt1.c0)IS NOT(rt0.c2)))IS NOT(CASE WHEN vt1.c0 THEN t0.c47 END)) FROM rt0, t0, vt1 GROUP BY ((0.30895864973313114) NOT NULL), ((((t0.c47) NOT BETWEEN (rt0.c0) AND (vt1.c0))) NOT BETWEEN (((rt0.c1)OR(vt1.c0))) AND (((vt1.c0) IS TRUE))), (-1.487576132E9 IN (NULL)), rt0.c1, ((((((((((((TRIM(rt0.c1, t0.c47))OR(CAST(vt1.c0 AS TEXT))))OR(t0.c47)))AND((((t0.c47, rt0.c2, rt0.c1, t0.c47, rt0.c0)) BETWEEN ((rt0.c2, t0.c47, 0Xfffffffff79572ce, rt0.c1, rt0.c1)) AND ((rt0.c0, t0.c47, rt0.c0, -3.88757115E8, rt0.c0))))))AND(((vt1.c0)<(t0.c47)))))OR(CASE WHEN vt1.c0 THEN rt0.c2 ELSE t0.c47 END)))AND(NULL)); -- 1ms;
SELECT TOTAL(CAST(NULL AS INTEGER)) OVER () FROM t0, vt1; -- 0ms;
SELECT DISTINCT AVG(((rt0.c1) BETWEEN (t0.c47) AND (rt0.c2))) OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT LAG(x'8f77', ' nX-W', ((((vt1.c0) NOTNULL)) ISNULL)) OVER () FROM vt1, rt0 NOT INDEXED, t0 LIMIT -1095211286; -- 0ms;
SELECT HEX(DISTINCT (+ (rt0.c0))), CASE ((rt0.c2)||(NULL))  WHEN -1.744504644E9 THEN ((((rt0.c2)AND(rt0.c2)))AND('s諒v(tT\n')) ELSE SUM(rt0.c1) END, ((rt0.c2) BETWEEN (t0.c47 COLLATE NOCASE) AND (((((((((rt0.c2)OR(rt0.c1)))AND(t0.c47)))OR(t0.c47)))OR(t0.c47)))) FROM t0, vt1 ORDER BY ((LTRIM(rt0.c0)) IS TRUE);SELECT ALL DENSE_RANK() OVER () FROM vt1, rt0, t0 WHERE (CAST(CAST(NULL AS BLOB) AS REAL)); -- 0ms;
SELECT DISTINCT AVG((rt0.c0 IN ())) FROM rt0, vt1 WHERE ((~ (CAST(0.05323829300927829 AS INTEGER)))); -- 0ms;
SELECT ALL CAST((((vt1.c0))>((rt0.c0))) AS REAL) FROM t0, vt1 CROSS JOIN rt0 ON x'' ORDER BY ((((1337768689)+(vt1.c0))) ISNULL), (((vt1.c0))!=((rt0.c0))) COLLATE NOCASE DESC; -- 0ms;
SELECT DISTINCT COUNT(*), TOTAL(((rt0.c1)>>(vt1.c0))) OVER (), AVG(CASE t0.c47  WHEN rt0.c2 THEN rt0.c1 END) FROM vt1, t0, rt0; -- 0ms;
SELECT (NOT (TOTAL(rt0.c1))), (((t0.c47)%(rt0.c2)) IN ()), COUNT(((rt0.c0)<<(vt1.c0))) OVER () FROM rt0 WHERE (((((0.06613810281690757 COLLATE RTRIM)OR(((-315748519)LIKE('_7')))))OR(0.8716961086081846)));SELECT DISTINCT TRIM(DISTINCT ((vt1.c0) NOT BETWEEN (t0.c47) AND (rt0.c0)), 0.06671373636887268), CASE ''  WHEN ((rt0.c1) IS TRUE) THEN vt1.c0 ELSE x'' END, (vt1.c0 IN ()) FROM vt1 LEFT OUTER JOIN t0 ON (((NOT (rt0.c1))) NOT BETWEEN (rt0.c2) AND ((((('19')OR(rt0.c2)))OR(rt0.c0))));SELECT ALL (((((((t0.c47, rt0.c0, rt0.c2)) BETWEEN ((t0.c47, t0.c47, rt0.c0)) AND ((rt0.c0, vt1.c0, NULL))))AND(AVG(rt0.c1))))OR(((rt0.c0)GLOB(vt1.c0)))) FROM rt0, vt1;SELECT ALL '-1003891835' FROM vt1 WHERE (((((NULL) BETWEEN (x'') AND (0X2d6ea97a))) BETWEEN ('-713599719') AND (((((((((NULL)OR(x'')))AND(0xffffffffd04a5340)))AND('\rn')))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE RTRIM) NOT BETWEEN (((((vt1.c0)AND(vt1.c0)))OR(rt0.c2))) AND (SUM(rt0.c1))) FROM rt0, vt1 WHERE ((((0xffffffffbab1ad7e)) BETWEEN (((((x'', x'', x'')) NOT BETWEEN ((0.958778905572187, NULL, '0.8384979812849135')) AND ((0.5100789404814882, 0.7790759130611471, x''))))) AND ((((x'') BETWEEN ('') AND (x'')))))) ORDER BY ((((t0.c47) BETWEEN (rt0.c0) AND (0.8087658774778282)))IS NOT(json_patch('>gQO0Y', -2.082404739E9))) DESC;SELECT ALL (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((t0.c47)))) ISNULL) FROM t0 WHERE ((+ (CAST(x'' AS BLOB))));SELECT ALL rt0.c2, DATETIME((+ (vt1.c0)), (((rt0.c2))!=((rt0.c0))), NULL), CASE COUNT(*)  WHEN TRIM(rt0.c0, rt0.c1) THEN (((rt0.c1, t0.c47, rt0.c0)) NOT BETWEEN ((rt0.c0, rt0.c1, t0.c47)) AND ((x'd1bc', '1492564762', t0.c47))) END FROM vt1;SELECT ((((rt0.c1)&(rt0.c1))) NOTNULL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((+ (rt0.c2))) ISNULL), ((rt0.c2)=(rt0.c1)) COLLATE BINARY, ((NULL) IS TRUE) FROM rt0 WHERE ((- ((('-583546570')<(x''))))); -- 0ms;
SELECT DISTINCT ((HEX(rt0.c0)) NOT BETWEEN ((((t0.c47))>((vt1.c0)))) AND ((('1108478552')!=(rt0.c2)))) FROM t0, rt0, vt1 WHERE (((((NULL)=('-502283306')))<<((('-1758075593') ISNULL)))); -- 0ms;
SELECT DISTINCT ((COUNT(t0.c47)) NOT BETWEEN (((((rt0.c1)OR(t0.c47)))OR(vt1.c0))) AND ((rt0.c1 IN (t0.c47, t0.c47)))) FROM rt0 WHERE ((((0x6373b4e3))<((0.34932307644504157 COLLATE NOCASE))));SELECT DISTINCT (((rt0.c0)=(t0.c47)) IN ((t0.c47 IN ()), ((rt0.c1) NOT NULL))) FROM vt1 WHERE (((((((((CAST(NULL AS NUMERIC))OR((NULL IN ()))))OR(0.3707301700135046)))AND(CASE WHEN x'2e41aef8' THEN NULL WHEN 0.19352010844297718 THEN -2025505510 WHEN NULL THEN NULL ELSE NULL END)))OR(((2021346966)=(NULL)))));SELECT ALL (NOT (((rt0.c0) IS FALSE))), TOTAL((rt0.c1 IN ())) OVER (), NULL FROM rt0 WHERE ((((NULL)||('')) IN ())) GROUP BY ((((((rt0.c1)IS NOT(rt0.c1)))AND(DATE(rt0.c2, rt0.c0, vt1.c0))))OR(CAST(rt0.c1 AS TEXT))) HAVING TRIM(DISTINCT (t0.c47 IN (rt0.c1)));SELECT DISTINCT vt1.c0 FROM vt1, rt0, t0 WHERE ((NOT (CASE WHEN x'' THEN '' WHEN x'9a0c' THEN NULL WHEN 0.3662881753934287 THEN 2.1703254E8 END))); -- 0ms;
SELECT ALL SUM(rt0.c0) FROM vt1;SELECT CAST(rt0.c0 AS REAL), ((('-693703750', vt1.c0, rt0.c1)) BETWEEN (((t0.c47 IN ()), (rt0.c0 IN (rt0.c1, rt0.c0, vt1.c0)), (~ (rt0.c2)))) AND ((t0.c47, rt0.c2, ((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))))), ((((((((rt0.c2 COLLATE NOCASE)AND(((((vt1.c0)AND(0.6223496001196461)))OR(rt0.c0)))))AND(((t0.c47)&(rt0.c2)))))OR(((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)))))AND(json_patch(vt1.c0, vt1.c0))) FROM vt1, rt0 WHERE ((((((NULL)&('457695892'))))<=((CAST(NULL AS INTEGER)))));SELECT DISTINCT vt1.c0, (((rt0.c1 IN ())) NOT BETWEEN (NULL) AND (rt0.c0)), CASE ((vt1.c0)||(vt1.c0))  WHEN CASE WHEN rt0.c1 THEN vt1.c0 ELSE rt0.c2 END THEN rt0.c2 COLLATE BINARY END FROM vt1, t0, rt0 WHERE (CASE (-1.923890056E9 IN ())  WHEN ((0x7452bc5c)<=(NULL)) THEN NULL COLLATE BINARY END) GROUP BY (((rt0.c2 IN ()))&(rt0.c1 COLLATE RTRIM)), (~ (CAST('' AS BLOB))), ((((rt0.c2)OR(vt1.c0))) NOT NULL) HAVING CASE (+ (rt0.c0))  WHEN (NOT (rt0.c1)) THEN ((((vt1.c0)AND(t0.c47)))AND(rt0.c0)) END; -- 0ms;
SELECT ALL ((COUNT(t0.c47))||(CAST(rt0.c1 AS NUMERIC))) FROM rt0 ORDER BY TRIM((rt0.c2 IN (vt1.c0))) DESC;SELECT DISTINCT (NOT (((x'') NOT NULL))), LAG((((vt1.c0)) NOT BETWEEN ((CAST(t0.c47 AS INTEGER))) AND ((((rt0.c2)IS NOT('-1048958552'))))), ((CAST(x'' AS REAL))<=(((rt0.c2)|(rt0.c1)))), -7.13599719E8) OVER (), ((((((((((((-2.87682809E8)AND((NOT (t0.c47)))))AND(((rt0.c2)<=(rt0.c0)))))OR(CASE WHEN rt0.c2 THEN NULL END)))OR(CASE t0.c47  WHEN t0.c47 THEN vt1.c0 END)))AND((rt0.c1 IN ()))))OR(CASE WHEN vt1.c0 THEN t0.c47 END)) FROM vt1, rt0, t0 WHERE (((- ('W')) IN ((~ (0.5585021869469737))))); -- 0ms;
SELECT DISTINCT ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) COLLATE NOCASE FROM vt1, t0 WHERE ((((('-2027022758') NOT BETWEEN (x'') AND ('1849597598'))) BETWEEN (((NULL) NOT BETWEEN (0.646912273161374) AND (-1806182954))) AND (((NULL) NOT BETWEEN (0.29741253304981774) AND ('2oQ籦.㬸CUb')))));SELECT ALL IFNULL(0.20351194678440288 COLLATE BINARY, ((((rt0.c1)OR(rt0.c2)))AND(rt0.c1))), COUNT(*), ((((CASE vt1.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END)OR((rt0.c1 IN ()))))OR(DATE(vt1.c0, vt1.c0, t0.c47, t0.c47, rt0.c0))) FROM vt1 CROSS JOIN t0 ON rt0.c2 WHERE ((~ ((('')-('{->m'))))) GROUP BY rt0.c1;SELECT ALL COUNT(TOTAL_CHANGES()) OVER () FROM vt1, t0 WHERE (((CAST(0.5477197504764846 AS TEXT))&((x'' IN ())))); -- 0ms;
SELECT ALL (- (x'')), CAST(GROUP_CONCAT(rt0.c2) AS NUMERIC), TOTAL(((((vt1.c0)OR(t0.c47)))AND(rt0.c1))) FROM vt1 NOT INDEXED, rt0 WHERE (CAST((('') NOT BETWEEN ('439209420') AND (x'')) AS REAL));SELECT DISTINCT FIRST_VALUE((((vt1.c0 IN (vt1.c0, vt1.c0)))&(((((vt1.c0)AND(vt1.c0)))AND(vt1.c0))))) OVER () FROM vt1 WHERE (CASE CASE WHEN x'' THEN x'' WHEN x'' THEN NULL WHEN 'z*Q' THEN NULL END  WHEN (('頙EZgM') NOT BETWEEN (NULL) AND ('')) THEN (- ('0lYPZ?')) END) ORDER BY ((((((((((((rt0.c1)OR(((((vt1.c0)AND(rt0.c1)))OR(t0.c47)))))AND((rt0.c0 IN (rt0.c2)))))OR(((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))))OR(((((rt0.c2)AND(rt0.c0)))OR(rt0.c1)))))OR(((t0.c47) BETWEEN (rt0.c2) AND (t0.c47)))))AND(((t0.c47) IS FALSE)))  NULLS FIRST;SELECT DISTINCT ((rt0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c0))) AND ((rt0.c2 IN ()))), LOWER(((t0.c47) BETWEEN (rt0.c0) AND (vt1.c0))), ((vt1.c0) ISNULL) FROM rt0 NOT INDEXED, t0, vt1 LIMIT -713599719 OFFSET -171583143; -- 0ms;
SELECT DISTINCT ((vt1.c0)%(rt0.c0)) COLLATE BINARY FROM t0, vt1;SELECT ((rt0.c2) NOT BETWEEN (t0.c47 COLLATE RTRIM) AND (((t0.c47) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), (((rt0.c0))<((rt0.c2))) COLLATE NOCASE, '98729820' FROM vt1, t0;SELECT DISTINCT CAST(((t0.c47) ISNULL) AS BLOB), GROUP_CONCAT(CASE WHEN vt1.c0 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 END) FILTER(WHERE ((((rt0.c2 IN ())))<((((rt0.c2) IS TRUE))))) OVER (), CAST((+ (t0.c47)) AS TEXT) FROM t0, rt0;SELECT ALL PERCENT_RANK() OVER (), (((+ (rt0.c1)))>=(t0.c47 COLLATE RTRIM)), TOTAL(CAST(rt0.c0 AS NUMERIC)) OVER () FROM vt1 LIMIT -669868096 OFFSET -535907243;SELECT rt0.c1, (('OD)t') NOTNULL), (((t0.c47 IN ()))*(((t0.c47)OR(t0.c47)))) FROM t0 WHERE ((((NULL)) NOT BETWEEN ((((NULL)LIKE(NULL)))) AND ((((((0.1465552704002523)AND(x'2916')))AND(x''))))));SELECT UNICODE(CAST(t0.c47 AS NUMERIC)) FROM rt0 ORDER BY LAST_INSERT_ROWID();SELECT TOTAL((rt0.c1 IN ())) FROM rt0; -- 0ms;
SELECT DISTINCT (((NOT (t0.c47)))>=((((rt0.c1))!=(('/鿀B/[u2'))))) FROM vt1 INNER JOIN rt0 ON HEX(((('-1431730280', rt0.c2, vt1.c0)) NOT BETWEEN ((t0.c47, t0.c47, t0.c47)) AND ((vt1.c0, vt1.c0, t0.c47)))) FULL OUTER JOIN t0 ON ((HEX(DISTINCT rt0.c2)) NOTNULL) WHERE (CHAR(NULL COLLATE NOCASE, CAST(0xffffffffb7662a43 AS BLOB), NULL));SELECT DISTINCT (((x''))<>((((vt1.c0)AND(vt1.c0))))) FROM t0 GROUP BY CASE (- ('02'))  WHEN CAST(t0.c47 AS REAL) THEN ((rt0.c1)|(rt0.c2)) ELSE (- (t0.c47)) END HAVING CAST(((rt0.c2)==(rt0.c1)) AS BLOB);SELECT DISTINCT ((((rt0.c2)||(vt1.c0))) NOT BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND ((- (rt0.c0)))), COUNT(*) OVER (), (((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)) IN ()) FROM rt0, t0;SELECT ALL ((((t0.c47)-(vt1.c0))) NOTNULL) FROM rt0, vt1, t0 WHERE (((0.29741253304981774)IS('')) COLLATE NOCASE); -- 0ms;
SELECT ALL rt0.c0 FROM rt0, t0, vt1; -- 0ms;
SELECT ALL NULL FROM t0, vt1, rt0 WHERE (IFNULL(DISTINCT (((x''))=((0.954489471743223))), '7>hePG' COLLATE RTRIM)); -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (vt1.c0) AND (rt0.c1)))>(CASE rt0.c2  WHEN rt0.c1 THEN t0.c47 ELSE rt0.c2 END)) FROM vt1, t0;SELECT ((((((rt0.c1) BETWEEN (rt0.c1) AND (vt1.c0)))OR(((vt1.c0)<<(vt1.c0)))))OR(((((rt0.c0)AND(t0.c47)))OR(rt0.c0)))) FROM rt0 RIGHT OUTER JOIN vt1 ON (- (((rt0.c1)==(vt1.c0)))) RIGHT OUTER JOIN t0 ON ((vt1.c0)OR(rt0.c0)) COLLATE RTRIM WHERE (CASE NULL  WHEN CASE NULL  WHEN x'' THEN '-674545542' WHEN -2.02550551E9 THEN '-880298750' WHEN NULL THEN x'0830' END THEN NULL WHEN ((x'') NOTNULL) THEN NULL COLLATE NOCASE WHEN x'' THEN NULL ELSE -679413842 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT CAST(CAST(rt0.c0 AS NUMERIC) AS REAL) FROM vt1 GROUP BY ((((rt0.c2)LIKE(t0.c47))) NOT BETWEEN (((((rt0.c1)OR(vt1.c0)))OR(rt0.c2))) AND (TYPEOF(rt0.c1)));SELECT DISTINCT x'' FROM vt1, rt0, t0; -- 0ms;
SELECT LAST_VALUE(json_quote(vt1.c0 COLLATE NOCASE)) OVER (), ((((rt0.c0) NOTNULL))IS NOT(GROUP_CONCAT(t0.c47))), CASE WHEN CAST(rt0.c1 AS NUMERIC) THEN ((((vt1.c0)OR(rt0.c0)))OR(rt0.c1)) ELSE vt1.c0 COLLATE NOCASE END FROM vt1 WHERE (((((((((((NULL)&('-1896719877')))OR(((((0.8792849224394468)AND('u!')))AND(NULL)))))OR(('\rk' IN (NULL)))))OR(((('-2025505510', NULL, NULL)) NOT BETWEEN ((0.9033021995616054, x'', x'')) AND (('0.8152846428004091', NULL, 0.8570870882990511))))))OR(((-2081741271)==(x'')))));SELECT ALL (NOT (rt0.c1)) COLLATE NOCASE FROM t0, vt1, rt0; -- 1ms;
SELECT DISTINCT (rt0.c2 IN ()) COLLATE NOCASE FROM vt1 FULL OUTER JOIN t0 ON CASE WHEN (NOT (rt0.c2)) THEN ((rt0.c0)*(t0.c47)) ELSE ((vt1.c0) NOTNULL) END LIMIT 2092884466 OFFSET -95520958;SELECT rt0.c1 FROM vt1 WHERE (CASE ((('-1003891835')) NOT BETWEEN ((NULL)) AND (('扁Y')))  WHEN ((((0.8461197698337983)AND(0.943786028582606)))OR(1.7976931348623157E308)) THEN (('/%''''cqO^')+(2129264703)) WHEN (~ (x'')) THEN ((0.03459976246261354) BETWEEN (x'') AND ('2117075144')) WHEN (((-2.35103989E8))<>(('1025333696'))) THEN HEX(0x6e6c9e02) END);SELECT DISTINCT ((rt0.c1)=(CAST(rt0.c0 AS BLOB))), CUME_DIST() OVER (), ((((1372337036)%(rt0.c1))) NOT NULL) FROM vt1, rt0, t0; -- 1ms;
SELECT DISTINCT (NOT ((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((vt1.c0))))) FROM t0;SELECT DISTINCT ((GROUP_CONCAT(x'')) BETWEEN (rt0.c1 COLLATE BINARY) AND (CAST(rt0.c0 AS REAL))), CASE WHEN vt1.c0 THEN t0.c47 ELSE rt0.c0 END COLLATE RTRIM, LAG((((~ (t0.c47))) IS FALSE), CAST(ABS(rt0.c0) AS NUMERIC), (NOT (vt1.c0))) OVER () FROM rt0, t0, vt1 ORDER BY '' DESC; -- 0ms;
SELECT DISTINCT ((('619894576')) NOT BETWEEN ((CAST(rt0.c0 AS REAL))) AND (((vt1.c0 IN ())))) FROM vt1, rt0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(AVG(((rt0.c2)IS NOT('202720443')))) FROM rt0 WHERE ((CAST('-459764744' AS BLOB) IN ())) LIMIT 1889040083;SELECT CASE rt0.c1  WHEN COUNT(*) THEN (('&vR') NOT NULL) ELSE UNLIKELY(vt1.c0) END FROM t0 WHERE ((NULL COLLATE NOCASE IN ())) LIMIT 647324647 OFFSET 493138608;SELECT ((((((rt0.c1) IS FALSE))OR(((((((((((((rt0.c2)AND(rt0.c0)))AND(t0.c47)))OR(vt1.c0)))AND(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))))AND(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0;SELECT DISTINCT ((vt1.c0 COLLATE BINARY)>((- (rt0.c1)))), (((((t0.c47)AND(rt0.c2)), CASE WHEN t0.c47 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 ELSE t0.c47 END, rt0.c0 COLLATE NOCASE))!=((MIN(rt0.c0), rt0.c1, t0.c47 COLLATE NOCASE))), CASE rt0.c0 COLLATE BINARY  WHEN ((x'') NOTNULL) THEN ((rt0.c2)<(rt0.c1)) WHEN CASE WHEN NULL THEN t0.c47 WHEN NULL THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 END THEN CAST(t0.c47 AS INTEGER) WHEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c47)) THEN ((t0.c47) IS FALSE) ELSE ((t0.c47)<<(rt0.c1)) END FROM t0, vt1, rt0 WHERE (((('dX%O', '-1009471770', x'3d59'))<((0.9913373898463528, '-315748519', x''))) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT (((t0.c47)) BETWEEN ((vt1.c0)) AND ((t0.c47))) FROM rt0, t0 WHERE (((((0.0542330621635837)%(0.20351194678440288))) NOT BETWEEN (CASE 0.5937535562821084  WHEN 0.5146540623883595 THEN ',r-ꅃ꩕dwa6' WHEN 'p^+)Q5m	' THEN '-1983320706' WHEN '711263863' THEN 'V뱊㸞5''j' WHEN 'i3Js\r\rJ''' THEN 0.7117275719475532 WHEN x'a9f9' THEN NULL END) AND (UPPER(x'82f3'))));SELECT (CASE WHEN t0.c47 THEN rt0.c1 END IN (TOTAL('P☩>x'))) FROM vt1, rt0, t0; -- 1ms;
SELECT DISTINCT ROW_NUMBER() OVER (), CASE WHEN NULL THEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)) END, (TRIM(rt0.c0, rt0.c1) IN ()), (+ (((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))AND(t0.c47)))OR(t0.c47)))), ((NULL) BETWEEN (SQLITE_VERSION()) AND ((((rt0.c1))>((rt0.c0))))) FROM rt0, t0; -- 0ms;
SELECT ((((((((rt0.c0)OR(((((rt0.c2)AND(t0.c47)))OR(rt0.c2)))))OR(ROUND(vt1.c0, t0.c47))))OR((- (t0.c47)))))OR(x'')) FROM rt0 WHERE (x'd85c');SELECT ALL ((((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c1)))>(CAST(t0.c47 AS REAL))) FROM rt0, t0;SELECT DISTINCT CAST(rt0.c2 AS REAL) FROM vt1 WHERE ((+ (MAX(0.24432319861105845, NULL))));SELECT ALL ((((vt1.c0)==(rt0.c1)))AND((+ (t0.c47)))), CAST(NULL AS TEXT), t0.c47 FROM rt0, t0 GROUP BY CASE WHEN (((t0.c47))<>((rt0.c0))) THEN CAST(rt0.c2 AS NUMERIC) WHEN (+ (rt0.c2)) THEN ((rt0.c2) BETWEEN (rt0.c0) AND ('MOf^ZDEo')) WHEN ((rt0.c0)OR(x'261e')) THEN ((vt1.c0)GLOB(rt0.c0)) ELSE ((rt0.c2)<=(vt1.c0)) END, CASE CAST(rt0.c1 AS BLOB)  WHEN CASE rt0.c2  WHEN t0.c47 THEN vt1.c0 ELSE vt1.c0 END THEN CASE t0.c47  WHEN rt0.c2 THEN vt1.c0 END ELSE CASE WHEN rt0.c0 THEN t0.c47 WHEN t0.c47 THEN t0.c47 WHEN vt1.c0 THEN t0.c47 ELSE vt1.c0 END END, ((vt1.c0 IN (vt1.c0)) IN ()), rt0.c1, (~ (CAST(rt0.c0 AS BLOB)));SELECT DISTINCT ((((rt0.c1)AND(t0.c47)))<>(TRIM(DISTINCT rt0.c0))) FROM t0, vt1, rt0; -- 0ms;
SELECT ALL ABS(((vt1.c0)IS(rt0.c1))) FROM vt1;SELECT ALL (NULL IN ()) FROM t0 WHERE (LOWER((((NULL)) BETWEEN ((NULL)) AND (('+r'))))); -- 0ms;
SELECT DISTINCT CAST(x'' AS NUMERIC) FROM t0, rt0, vt1; -- 0ms;
SELECT ALL (((vt1.c0)) BETWEEN (((((x'', NULL, vt1.c0)) NOT BETWEEN ((rt0.c2, t0.c47, rt0.c0)) AND ((rt0.c1, t0.c47, rt0.c1))))) AND ((CAST(rt0.c2 AS NUMERIC)))) FROM vt1, t0, rt0 WHERE (((((CASE WHEN '' THEN 0Xffffffffa25ce03d WHEN '-932911665' THEN 0Xffffffffc2f5324e WHEN '' THEN '1039946632' END)AND(((((x'')AND(-85725227)))OR(0.6868649968560143)))))OR((NOT (1068229981))))) ORDER BY CAST((rt0.c0 IN ()) AS INTEGER) ASC, x'776e'; -- 1ms;
SELECT DISTINCT TOTAL((- (t0.c47))) OVER (), (- ((rt0.c0 IN ()))), json_extract(QUOTE(vt1.c0), CAST(rt0.c2 AS TEXT)) FROM t0 WHERE (((x'7d592e14')AND((~ (NULL)))));SELECT ALL (((rt0.c0))<=((json_array(t0.c47, t0.c47)))), CASE ((t0.c47) BETWEEN (t0.c47) AND (vt1.c0))  WHEN rt0.c0 COLLATE RTRIM THEN json_extract(rt0.c2, rt0.c1, t0.c47, rt0.c2) WHEN CASE WHEN rt0.c2 THEN rt0.c2 END THEN rt0.c2 COLLATE BINARY WHEN (+ (vt1.c0)) THEN ((t0.c47)<>(rt0.c1)) END, ((HEX(rt0.c1)) NOTNULL) FROM rt0, t0;SELECT (COUNT(vt1.c0) IN (MAX(rt0.c2), (rt0.c1 IN ()))), CAST(vt1.c0 COLLATE NOCASE AS NUMERIC), rt0.c1, CUME_DIST() OVER (), FIRST_VALUE((((+ (vt1.c0)))||(CASE WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 WHEN vt1.c0 THEN vt1.c0 ELSE vt1.c0 END))) OVER () FROM vt1;SELECT DISTINCT rt0.c2 FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((((vt1.c0)OR(rt0.c1 COLLATE RTRIM)))AND(LIKELY(rt0.c0))), rt0.c2, rt0.c1 COLLATE BINARY COLLATE RTRIM FROM rt0;SELECT ALL (((NOT (rt0.c0))) BETWEEN (((rt0.c1)IS(-1816070385))) AND (((t0.c47) NOTNULL))) FROM t0;SELECT (((rt0.c0) BETWEEN (NULL) AND (rt0.c0)) IN ()) FROM vt1, rt0 WHERE (((((NOT (-2.082404739E9))))<=((CAST(1.497800817E9 AS BLOB))))) GROUP BY TIME(LOWER(DISTINCT vt1.c0), ((((rt0.c1)OR(rt0.c1)))AND('()')), rt0.c2); -- 0ms;
SELECT ((((((t0.c47) IS TRUE))OR(t0.c47)))OR(CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END)), CAST(x'' AS TEXT), (((((((((((rt0.c2)OR(t0.c47)))AND(rt0.c0)))OR(rt0.c0)))AND(rt0.c0)), CASE WHEN t0.c47 THEN NULL ELSE rt0.c1 END, ((rt0.c0) NOT BETWEEN (t0.c47) AND (rt0.c2))))==((((x'9076')AND(t0.c47)), ((rt0.c1) NOT NULL), (((vt1.c0))<((rt0.c0)))))), GROUP_CONCAT(COUNT(GROUP_CONCAT(vt1.c0))), CASE (~ (rt0.c2))  WHEN (((((((('-501941548')AND(rt0.c2)))OR(t0.c47)))OR(vt1.c0)))OR(rt0.c0)) THEN (t0.c47 IN (rt0.c2, rt0.c0)) ELSE x'' COLLATE NOCASE END FROM t0, vt1, rt0;SELECT (+ (rt0.c2)) FROM rt0, vt1 GROUP BY ((((((t0.c47) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND(((((t0.c47)OR(rt0.c2)))OR(rt0.c1)))))AND(((rt0.c0)GLOB(t0.c47))));SELECT DISTINCT (((((((((rt0.c1)OR(rt0.c2)))AND(t0.c47)))AND(t0.c47)))OR(vt1.c0)) IN ()) FROM vt1, t0 WHERE (((((NULL) BETWEEN ('220144388') AND ('1995847050')))AND(((0.7547100347639674)==(''))))) ORDER BY (+ (CAST(t0.c47 AS REAL))), (QUOTE(vt1.c0) IN (((t0.c47) IS FALSE), SQLITE_COMPILEOPTION_GET(rt0.c2)));SELECT ALL IFNULL(DISTINCT '-711922475', (((t0.c47))<=((vt1.c0)))), ((((vt1.c0)GLOB(t0.c47)))<<(((rt0.c1) IS TRUE))), (((((rt0.c2, rt0.c2, vt1.c0))<((rt0.c2, rt0.c1, rt0.c0))))IS(((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c1)))) FROM t0, vt1, rt0 LIMIT -775551364 OFFSET -97810417; -- 0ms;
SELECT ALL AVG(((rt0.c0)OR(rt0.c1))) FROM t0 LIMIT 1463825979;SELECT ALL LAG(((((t0.c47)>=(rt0.c2)))<<(CASE rt0.c1  WHEN rt0.c1 THEN t0.c47 END)), (((vt1.c0)) BETWEEN (((NOT (rt0.c1)))) AND ((NULL))), LIKELIHOOD(((vt1.c0)+(t0.c47)), 0.6152735313690708)) OVER () FROM vt1, rt0, t0 WHERE (((CASE x''  WHEN NULL THEN '-878479882' ELSE NULL END)%(((((((((x'613a')AND(x'')))OR(171229149)))AND(-102926653)))OR(x''))))); -- 0ms;
SELECT DISTINCT rt0.c2, ((rt0.c2 IN ()) IN ()), ((rt0.c2)GLOB(COUNT(*))) FROM rt0, vt1, t0 WHERE (CAST((('?oe[x䨸掼u')AND(x'')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT (TOTAL(vt1.c0) IN ()), TOTAL(NULL) OVER (), (((((rt0.c0) IS TRUE)))>=((((0.4528617475213301)|(t0.c47))))) FROM t0, vt1;SELECT ALL CAST(CASE rt0.c2  WHEN rt0.c0 THEN rt0.c0 END AS REAL), (NOT (((((rt0.c1)AND(t0.c47)))OR(rt0.c0)))), (((rt0.c0)AND(rt0.c1)) IN ()) FROM vt1, rt0, t0 WHERE (0X3efbf5d3); -- 0ms;
SELECT DISTINCT NULL, ((((0.8132297480756693) NOT BETWEEN (rt0.c2) AND (t0.c47)))LIKE((~ (t0.c47)))), ((CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c1 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)*((- ('')))) FROM t0;SELECT ALL SUM(((rt0.c1) IS FALSE)) OVER () FROM t0;SELECT DISTINCT (((rt0.c2)) BETWEEN ((0.08544144395831021)) AND (((~ (vt1.c0))))) FROM rt0, t0, vt1 WHERE (CAST((('k%')||('-1210927381')) AS INTEGER)) GROUP BY t0.c47, ((((((((rt0.c2)OR(rt0.c2)))AND(vt1.c0)))OR(((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c2)))))OR((NOT (NULL)))), (((rt0.c1)) NOT BETWEEN ((CASE rt0.c0  WHEN t0.c47 THEN rt0.c1 END)) AND ((NULL COLLATE NOCASE))); -- 0ms;
SELECT ALL ((((rt0.c1)GLOB(vt1.c0))) NOT BETWEEN (CAST(rt0.c2 AS NUMERIC)) AND (CASE rt0.c0  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c2 END)), CASE ((((((((rt0.c2)OR(rt0.c2)))OR(NULL)))OR(t0.c47)))AND(NULL))  WHEN CAST(t0.c47 AS NUMERIC) THEN (((rt0.c0)) NOT BETWEEN ((NULL)) AND ((rt0.c0))) ELSE NULL END, ((vt1.c0) ISNULL) FROM rt0;SELECT ALL '1416459804' FROM rt0, t0 GROUP BY NULL HAVING (rt0.c1 COLLATE BINARY IN ()); -- 0ms;
SELECT DISTINCT CAST(t0.c47 AS REAL) FROM vt1 FULL OUTER JOIN rt0 ON (((((rt0.c0)IS NOT(rt0.c2))))<=((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c0))))) WHERE ((((((((((('-752440564')AND(x'')))AND(0.9465955905151058)))OR('4842825')))OR(0.23969526520484252)))<(((0.18753987529553218) NOT BETWEEN (1221092065) AND (0.0765714526143011)))));SELECT DISTINCT CAST('-1439871148' AS INTEGER), 'ATVX' COLLATE NOCASE, GROUP_CONCAT(((vt1.c0) IS FALSE)) FROM rt0 WHERE (CAST(((NULL) NOT BETWEEN (NULL) AND (NULL)) AS TEXT)) ORDER BY (~ (rt0.c1)) COLLATE NOCASE LIMIT -1060752355 OFFSET 1036129612;SELECT ALL CASE WHEN (rt0.c2 IN (0.9381956470891417)) THEN (((rt0.c0))>((t0.c47))) ELSE ((t0.c47) BETWEEN (rt0.c0) AND (vt1.c0)) END FROM rt0 WHERE ((CASE 0.18054708578743162  WHEN '-2087181822' THEN '-303755092' END IN (((1280795.0) IS FALSE)))) ORDER BY vt1.c0;SELECT DISTINCT ((((rt0.c1) NOTNULL))||(((rt0.c2) BETWEEN (vt1.c0) AND ('332258542')))) FROM vt1, t0, rt0 LIMIT 711263863; -- 0ms;
SELECT ALL rt0.c2 FROM rt0, t0 WHERE (((('1726781965')) NOT BETWEEN ((NULL)) AND (('-262037181'))) COLLATE BINARY); -- 0ms;
SELECT ALL ((((rt0.c1) NOT NULL)) IS FALSE), rt0.c1, ((x'' COLLATE NOCASE) NOTNULL) FROM vt1, t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(CAST(vt1.c0 AS BLOB)) FROM vt1, t0 WHERE ((COALESCE(0.13420186951627355, 'CI', NULL, 0Xffffffffb736fb88) IN ())); -- 0ms;
SELECT ((CASE WHEN t0.c47 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c0 END)&(((rt0.c0) NOT NULL))) FROM t0, vt1, rt0; -- 0ms;
SELECT AVG(CAST(rt0.c0 AS INTEGER) COLLATE RTRIM) FROM rt0, t0 WHERE (((((0.896066029503211) IS FALSE))>(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT CAST(json_insert(rt0.c2, vt1.c0, NULL, rt0.c0, rt0.c1) AS TEXT) FROM t0, vt1 WHERE (((CASE '-1078876988'  WHEN 1434745197 THEN -1896719877 END) BETWEEN (((((((((NULL)OR(-1.336641E8)))AND(x'')))AND(0.6223496001196461)))AND(x''))) AND ((('1049012674') NOT NULL)))) GROUP BY ((((((rt0.c0)AND(rt0.c1)))OR(0.36626866637278566)))<=(CAST(t0.c47 AS NUMERIC)));SELECT ALL (((rt0.c0)) BETWEEN (((((t0.c47)) NOT BETWEEN ((rt0.c0)) AND ((0.34768404925250884))))) AND ((CAST(rt0.c0 AS TEXT)))), CASE ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2))  WHEN ((((t0.c47)AND(rt0.c2)))OR(rt0.c0)) THEN ((rt0.c1)AND(t0.c47)) ELSE CASE WHEN t0.c47 THEN rt0.c1 END END, rt0.c1 FROM vt1, rt0, t0 WHERE (IFNULL(NULLIF(NULL, 0.8717785904309316), ((NULL)IS NOT(NULL)))) LIMIT -1162004143 OFFSET 1120218445; -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0, vt1, t0 WHERE (LIKELIHOOD(790493596, 0.20283724542967885)) ORDER BY (((((rt0.c2) IS TRUE)))<=((((vt1.c0) NOT BETWEEN (rt0.c2) AND (rt0.c2))))); -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (vt1.c0) AND (vt1.c0)))&(((x'05d1') NOT NULL))) FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT CASE (vt1.c0 IN (t0.c47, rt0.c0))  WHEN vt1.c0 COLLATE NOCASE THEN ((((t0.c47)OR('{}')))AND(rt0.c0)) END FROM t0, vt1;SELECT SUBSTR(CASE WHEN vt1.c0 THEN t0.c47 END, 'l4?}悚''') FROM t0, rt0 CROSS JOIN vt1 ON (((((rt0.c2))!=((rt0.c2))))<(((rt0.c2) NOT NULL))); -- 0ms;
SELECT TOTAL(((rt0.c1) NOT BETWEEN (rt0.c2) AND (x'0978fe21'))) OVER () FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT x'', (((((((((((((((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c1))))OR((((rt0.c2)) BETWEEN ((t0.c47)) AND ((rt0.c0))))))AND(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN 1.8014645E7 THEN vt1.c0 END)))OR(((vt1.c0) IS TRUE))))OR((~ (rt0.c2)))))AND(((rt0.c2)*(rt0.c0)))))AND((+ (vt1.c0)))), (((rt0.c0 IN (rt0.c1)))/(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))) FROM t0, rt0, vt1; -- 0ms;
SELECT ((COUNT(t0.c47))+(CASE WHEN rt0.c2 THEN '' END)), rt0.c2 COLLATE BINARY, (NOT (((((((((rt0.c0)OR(0.15133909268657364)))AND(rt0.c1)))OR(rt0.c2)))AND(t0.c47)))) FROM t0 WHERE (((((((NULL)OR(NULL)))OR(0X58f6bb1a))) IS TRUE));SELECT DISTINCT GROUP_CONCAT(TRIM(rt0.c0)) FROM vt1, t0, rt0 ORDER BY (((((vt1.c0)>(vt1.c0))))<=((((((vt1.c0)OR(rt0.c1)))AND(0x3354ad4d)))))  NULLS FIRST, '705451146'  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((((((rt0.c0)OR(t0.c47)))AND(rt0.c0)))OR(vt1.c0)))OR(rt0.c1)) IN (((((rt0.c0)OR(rt0.c0)))AND(rt0.c2)))) FROM t0;SELECT DISTINCT ((((rt0.c2)GLOB(vt1.c0)))GLOB(((rt0.c2)>=(rt0.c2)))) FROM vt1, t0 LIMIT 1009751199 OFFSET 1162018504;SELECT DISTINCT CAST(((t0.c47)>>(rt0.c2)) AS REAL) FROM vt1, rt0, t0 WHERE ((((x'')) NOT BETWEEN ((CAST(x'' AS INTEGER))) AND ((((x'')<(NULL)))))); -- 0ms;
SELECT DISTINCT LIKE(CAST(rt0.c2 AS INTEGER), SQLITE_COMPILEOPTION_USED(vt1.c0), 'k'), ((((rt0.c1)AND(x'')))OR(((0.7187982039104005)|(rt0.c2)))), ((((NOT (rt0.c1))))<=((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0))))) FROM rt0, t0, vt1 WHERE (CAST(CASE WHEN '' THEN x'' WHEN x'' THEN 'Ŵ?' WHEN '' THEN -9223372036854775808 END AS REAL)); -- 1ms;
SELECT ALL DATETIME(CASE WHEN rt0.c0 THEN rt0.c2 END, ((rt0.c2) NOTNULL), ((t0.c47) NOTNULL), ((rt0.c0)-(vt1.c0)), ((rt0.c0)GLOB(rt0.c0))) FROM rt0, vt1, t0; -- 0ms;
SELECT SUM(CASE vt1.c0  WHEN rt0.c1 THEN vt1.c0 END) OVER () FROM rt0, vt1 ORDER BY ((rt0.c2)<>(t0.c47)) COLLATE BINARY DESC, CAST(rt0.c1 AS TEXT);SELECT ALL CASE WHEN rt0.c2 THEN t0.c47 END COLLATE BINARY, ((((vt1.c0)-(t0.c47)))<=(((((rt0.c1)AND(rt0.c1)))AND(rt0.c0)))), ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END)|((rt0.c0 IN ()))) FROM rt0 WHERE (((NULL) BETWEEN (x'') AND (NULL)) COLLATE BINARY);SELECT ALL ((rt0.c2)IS NOT(CAST(rt0.c2 AS REAL))) FROM vt1, rt0 WHERE (((((x'') NOT NULL))>>(CAST(NULL AS TEXT)))) GROUP BY ((((((rt0.c2)AND(vt1.c0)))OR(rt0.c2)))%((~ (NULL)))), CASE vt1.c0  WHEN rt0.c1 THEN rt0.c2 END COLLATE BINARY, CAST((((rt0.c2))=((rt0.c1))) AS INTEGER); -- 0ms;
SELECT ALL ((((((((((t0.c47) NOT NULL))AND(t0.c47)))OR(CASE rt0.c0  WHEN rt0.c2 THEN t0.c47 END)))AND(rt0.c0)))OR(SUM(rt0.c1))) FROM vt1, rt0 WHERE (x'');SELECT DISTINCT CASE WHEN ((rt0.c0) NOT BETWEEN (rt0.c0) AND (t0.c47)) THEN CASE WHEN vt1.c0 THEN rt0.c0 END ELSE ((rt0.c0)==(t0.c47)) END, ((('0.7855734066694745' IN ()))>(MIN(rt0.c0))), ((MIN(rt0.c0, rt0.c1)) NOT BETWEEN (CAST(rt0.c2 AS BLOB)) AND (CASE rt0.c1  WHEN rt0.c0 THEN rt0.c0 END)) FROM t0 WHERE ((+ (((((x'af43')OR(x'a426')))AND('1306721258')))));SELECT (((((t0.c47 IN ()))OR(x'')))AND((((t0.c47))<=((0.36764815863927547))))) FROM rt0, t0, vt1 WHERE (((('NW' IN ('Aꩈ')))|((+ (NULL))))); -- 0ms;
SELECT DISTINCT CASE WHEN SUM(t0.c47) THEN ((((rt0.c2)OR(vt1.c0)))OR(rt0.c1)) END, LAST_VALUE(CAST(((rt0.c0) NOT BETWEEN (vt1.c0) AND (rt0.c0)) AS BLOB)) OVER ( GROUPS (((t0.c47)) NOT BETWEEN ((((rt0.c0)<=(rt0.c2)))) AND ((vt1.c0))) PRECEDING), LEAD(CASE (((rt0.c1)) BETWEEN ((rt0.c0)) AND ((vt1.c0)))  WHEN CASE WHEN rt0.c2 THEN t0.c47 WHEN rt0.c2 THEN t0.c47 WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END THEN rt0.c0 COLLATE NOCASE ELSE ((0.6392628365632701) BETWEEN (rt0.c2) AND (vt1.c0)) END, TYPEOF(((vt1.c0)*(t0.c47))), CAST(((rt0.c2) ISNULL) AS BLOB)) OVER () FROM vt1, rt0, t0 WHERE (((((NULL)|(0.29362743335578645)))LIKE(COALESCE(-7.36488573E8, ''))));SELECT ((COUNT(rt0.c2)) NOT BETWEEN (CASE WHEN rt0.c0 THEN rt0.c0 END) AND (COALESCE('', rt0.c0))), SUM((+ (''))) OVER (), CASE rt0.c0 COLLATE BINARY  WHEN 0.5500677110969852 COLLATE RTRIM THEN CASE WHEN rt0.c2 THEN rt0.c1 END END FROM t0, vt1 WHERE (((((((('\n+', 'sF', ''))<((x'', 0.38013407563419566, 0xa34bfdd))))OR((('1714173086')|('{}')))))AND((((NULL, '-1154784824', '-102926653')) BETWEEN (('idz_''e73l', '-400059361', NULL)) AND (('*㔨bx(', NULL, '-629522359'))))));SELECT (+ (((((((((((((rt0.c0)AND(rt0.c0)))AND(vt1.c0)))OR(vt1.c0)))AND(rt0.c2)))AND(vt1.c0)))OR(rt0.c0)))), CAST(((((NULL)AND(rt0.c0)))AND(vt1.c0)) AS INTEGER), (NOT ((vt1.c0 IN ()))) FROM t0;SELECT ALL ((((0.6696805666033896) BETWEEN (rt0.c0) AND (rt0.c2)))OR(((((rt0.c0)OR(vt1.c0)))OR(t0.c47)))), LIKELIHOOD(DISTINCT COUNT(*), 0.060059481718499286), MAX(CASE t0.c47  WHEN rt0.c2 THEN t0.c47 WHEN rt0.c0 THEN t0.c47 WHEN rt0.c1 THEN t0.c47 END), AVG(((vt1.c0)<<(rt0.c1))) OVER (), SUM((rt0.c2 IN ())) FROM t0, vt1 WHERE ((- (((0.22957519459266695) IS FALSE))));SELECT DISTINCT (((((vt1.c0)AND(rt0.c2)))OR(rt0.c2)) IN ()) FROM t0 WHERE (((((((((((((((((CASE WHEN NULL THEN x'' END)OR((((0.21773884782744124))<>(('-880298750'))))))AND(CASE x''  WHEN x'527b' THEN 342399677 END)))AND(((('985470467'))=((0.5284577148041845))))))AND(CAST(NULL AS NUMERIC))))OR(CASE WHEN '1439423502' THEN 9.872982E7 WHEN '676051406' THEN '' WHEN 1416459804 THEN '1183575754' END)))AND(('Ij()' IN ()))))OR(0Xffffffff88578824 COLLATE RTRIM)))AND((((NULL, NULL, 0.12856085505486614)) NOT BETWEEN (('999008646', 'LPl]', '0.666733261287755')) AND (('-1582095245', NULL, NULL)))))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(t0.c47 AS BLOB)) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((vt1.c0) IS FALSE))|(MAX(t0.c47))) FROM t0, vt1, rt0 WHERE (((((0.9905081313529953)&('1102909769'))) NOT BETWEEN (((0.0044140740053458805)&(NULL))) AND ((- ('3ON1219--6906463334253373268 961 299-1882:o'))))); -- 4ms;
SELECT AVG(((rt0.c0) BETWEEN (t0.c47) AND (rt0.c2))), ((0.19559907452722447)LIKE(rt0.c1)), ((((((((((vt1.c0) BETWEEN (t0.c47) AND (rt0.c0)))OR(DATETIME(vt1.c0, rt0.c2, t0.c47))))AND((('') BETWEEN (vt1.c0) AND ('1745533001')))))AND(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c47)))))AND(618011112)) FROM vt1, t0 LIMIT 9223372036854775807 OFFSET 1829156097;SELECT DISTINCT TOTAL(ABS(t0.c47)) OVER ( ORDER BY 0.153636769954141  NULLS FIRST) FROM rt0, vt1 WHERE (UPPER(DISTINCT x''));SELECT COALESCE(DISTINCT AVG(rt0.c0), DATE(rt0.c1, rt0.c0, x'', '1089797287', rt0.c2)) FROM t0;SELECT DISTINCT ((t0.c47)OR(((t0.c47)||(t0.c47)))), (((rt0.c1, t0.c47, 0.5367766682536708)) BETWEEN (((rt0.c2 IN ()), ((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2)), AVG(vt1.c0))) AND ((((t0.c47) NOT NULL), (rt0.c1 IN ()), MIN(rt0.c0)))), CAST(((-1905727378)IS(rt0.c2)) AS REAL) FROM t0;SELECT (((vt1.c0) NOTNULL) IN ()) FROM vt1, rt0; -- 1ms;
SELECT DISTINCT (+ (((vt1.c0)IS NOT(t0.c47)))) FROM rt0, vt1, t0; -- 0ms;
SELECT (((((rt0.c2 IN (t0.c47)))OR((+ (rt0.c2)))))OR(t0.c47)) FROM vt1 WHERE ((- ((0.8998333495952168 IN ()))));SELECT DISTINCT vt1.c0 FROM rt0, vt1 LIMIT 1360166573 OFFSET -1243862713; -- 0ms;
SELECT ALL CASE ((t0.c47) NOTNULL)  WHEN UNLIKELY(DISTINCT rt0.c0) THEN (~ (vt1.c0)) END, CASE WHEN vt1.c0 THEN vt1.c0 WHEN t0.c47 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN x'' WHEN vt1.c0 THEN rt0.c2 ELSE x'' END COLLATE NOCASE, (+ (rt0.c1)) COLLATE NOCASE FROM rt0, vt1, t0; -- 0ms;
SELECT DISTINCT ((((((((x'')OR(rt0.c1)))AND(CAST(vt1.c0 AS BLOB))))AND(SUM(rt0.c0))))OR(x'')) FROM t0, vt1, rt0; -- 0ms;
SELECT ALL MIN(((rt0.c2) NOT BETWEEN (rt0.c1) AND (vt1.c0))) FROM t0, rt0, vt1; -- 1ms;
SELECT DISTINCT rt0.c0 FROM vt1, rt0 NOT INDEXED LIMIT 4842825; -- 0ms;
SELECT DISTINCT rtreenode(rt0.c0, CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END) FROM vt1 WHERE (((((0.682494948334875) BETWEEN (0.6922774773474091) AND (x'')))IS NOT(CASE WHEN '|mS>+' THEN '0.5100789404814882' ELSE 0Xffffffffeb5b021e END)));SELECT DISTINCT rt0.c1, CAST(vt1.c0 AS TEXT), (((~ (rt0.c0)))*(SUM(t0.c47))) FROM rt0 WHERE ((x'' IN ()) COLLATE NOCASE) ORDER BY ABS(DISTINCT NULLIF(rt0.c2, t0.c47))  NULLS FIRST, ((((vt1.c0)OR(((((rt0.c2)AND(rt0.c2)))AND(rt0.c2)))))OR(t0.c47))  NULLS FIRST;SELECT DISTINCT ((0.9195615830887015) BETWEEN ((rt0.c0 IN ())) AND (json_patch(vt1.c0, vt1.c0))), UNLIKELY(((rt0.c2) BETWEEN (vt1.c0) AND (rt0.c2))), ((CAST(vt1.c0 AS INTEGER)) NOTNULL) FROM rt0, t0, vt1 WHERE (((((((1.8014645E7)OR(NULL)))AND('-977325941'))) NOT BETWEEN ((('')>>(x''))) AND ((0.9142293401995213 IN ())))) ORDER BY ((((t0.c47)IS NOT(x'e224')))+(CAST(rt0.c1 AS TEXT))) DESC  NULLS FIRST;SELECT ALL QUOTE(x'') COLLATE RTRIM FROM vt1; -- 1ms;
SELECT t0.c47 FROM t0, vt1, rt0 WHERE ((' %g5.' IN ())); -- 0ms;
SELECT ALL 0.7855734066694745 FROM rt0, vt1 WHERE (((((x'')<<(x'7723'))) ISNULL)); -- 0ms;
SELECT TOTAL(((rt0.c2) NOT BETWEEN (rt0.c1) AND (t0.c47))) OVER (), LOWER(DISTINCT rt0.c1 COLLATE RTRIM), t0.c47 FROM t0, rt0, vt1 WHERE (((')V裷429pv' COLLATE RTRIM) BETWEEN (((x'') NOT BETWEEN (x'c81b88d0') AND (x''))) AND (CASE WHEN '0.19352010844297718' THEN x'' WHEN '-696014251' THEN 0.013621585467738173 WHEN 0.9576187760785765 THEN '0.8315432373158741' WHEN NULL THEN NULL WHEN -2135848466 THEN '771134899' END))); -- 0ms;
SELECT DISTINCT (((0.34769311813667414, '-2116542063', vt1.c0))<>((t0.c47, rt0.c0, 0.627538733451345))) COLLATE RTRIM, (+ ((rt0.c1 IN ()))), ((x'549c') NOTNULL) FROM rt0, t0;SELECT LEAD(NULL, ((((((((((rt0.c0) NOTNULL))OR(((vt1.c0) IS TRUE))))AND((rt0.c0 IN ()))))AND((rt0.c2 IN ()))))AND(CAST(rt0.c1 AS NUMERIC))), rt0.c0 COLLATE RTRIM) OVER () FROM vt1, t0, rt0; -- 0ms;
SELECT ALL ((((((((((vt1.c0)OR(t0.c47)))OR(vt1.c0)))OR(rt0.c1)))OR(t0.c47))) ISNULL), rt0.c1, rt0.c1 FROM t0, rt0, vt1 WHERE ((((x''))<=((((x'aaba')<=(50793499)))))); -- 0ms;
SELECT ALL (((+ (' 픃'))) NOT BETWEEN (SUM(vt1.c0)) AND (((rt0.c0) NOT BETWEEN (rt0.c2) AND (vt1.c0)))) FROM rt0;SELECT ABS(rt0.c0), CAST(((rt0.c0)==(vt1.c0)) AS REAL), ((COUNT(*))>(((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)))) FROM rt0 WHERE (((((x'fb36')<=(x'')))>((((('-952646421')AND(x'')))OR(x'509a')))));SELECT MAX(rt0.c1), (((rt0.c2 IN ())) IS TRUE), rt0.c1, (+ (t0.c47 COLLATE NOCASE)), ((TOTAL_CHANGES())==('0E')) FROM t0, vt1, rt0; -- 1ms;
SELECT ALL ((vt1.c0 COLLATE BINARY) IS TRUE) FROM vt1; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, vt1, t0 WHERE ((((((((-298808414)AND(x'b838')))OR('(鐟}a^Wx('))))>=(((('tq') BETWEEN (NULL) AND (x'')))))); -- 0ms;
SELECT DISTINCT (+ (rt0.c2 COLLATE NOCASE)) FROM t0 WHERE ((((0.03986305992496031)) BETWEEN ((((x'fe26') NOT BETWEEN (x'') AND (NULL)))) AND (((((x'1dbc', '~E', '0.9195615830887015'))<>((x'b94ae25a', -927186626, '')))))));SELECT DISTINCT RANK() OVER (), CAST(((rt0.c0)LIKE(rt0.c2)) AS BLOB), ((CAST(-3.61910757E8 AS INTEGER))GLOB(((t0.c47)||(t0.c47)))) FROM rt0 WHERE (CAST(CASE 0.7981188803532724  WHEN '' THEN 'EMm' WHEN NULL THEN x'' WHEN '' THEN x'7a80' END AS TEXT)) GROUP BY CASE WHEN CAST(rt0.c0 AS NUMERIC) THEN CASE rt0.c2  WHEN t0.c47 THEN vt1.c0 END ELSE ((vt1.c0)*(vt1.c0)) END HAVING rt0.c1;SELECT DISTINCT (((-1.487576132E9 IN (vt1.c0))) NOTNULL), (- (((((((((vt1.c0)OR(rt0.c1)))OR(vt1.c0)))AND(NULL)))AND('x(OndR')))), ((0xb7d4c08)IS NOT(NULL)) FROM t0 GROUP BY CASE ((rt0.c1)>>(rt0.c1))  WHEN (- (rt0.c2)) THEN CASE WHEN vt1.c0 THEN rt0.c2 END END LIMIT -1744504644 OFFSET -53573317;SELECT DISTINCT ((((((t0.c47) IS TRUE))AND(CAST(rt0.c2 AS INTEGER))))OR((rt0.c1 IN ()))), 1.90924348E8 COLLATE NOCASE, CAST(CASE WHEN t0.c47 THEN rt0.c2 END AS REAL) FROM t0, rt0 NOT INDEXED WHERE ((((NULL IN ()))*(((x'9297') ISNULL)))) GROUP BY ((NULL)+((((rt0.c1, NULL, rt0.c0))!=((rt0.c2, vt1.c0, rt0.c1))))), load_extension(((rt0.c2) BETWEEN (rt0.c1) AND ('J[\r]')), ((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c47))), (('1041460046') BETWEEN (LIKELIHOOD(DISTINCT vt1.c0, 0.14506697837451543)) AND (CAST(vt1.c0 AS TEXT))) HAVING COUNT(rt0.c2) COLLATE BINARY COLLATE RTRIM LIMIT -2081741271 OFFSET -1105308357;SELECT FIRST_VALUE((((((- (vt1.c0)))AND(NULLIF(t0.c47, t0.c47))))AND(((vt1.c0) IS FALSE)))) OVER (), (((t0.c47)) BETWEEN ((rt0.c1)) AND ((AVG(rt0.c1)))), ((UNLIKELY(DISTINCT vt1.c0))<=((((rt0.c1, rt0.c2, rt0.c0))<((rt0.c1, t0.c47, rt0.c2))))) FROM t0, vt1 GROUP BY MIN(((((rt0.c0)AND(rt0.c2)))OR(vt1.c0)), (~ (vt1.c0))) ORDER BY ((CASE WHEN rt0.c0 THEN rt0.c0 END)/((((rt0.c1))>=((vt1.c0)))))  NULLS LAST;SELECT (((- (rt0.c0)))<=(CAST(rt0.c2 AS INTEGER))), ((rt0.c1 COLLATE NOCASE) NOTNULL), 0.6424963739914757 FROM vt1 WHERE (CASE WHEN ((('274601532')) BETWEEN (('JI0w')) AND (('IꩭAbQv'))) THEN (NOT (x'69d5')) WHEN ((0.31068829790727037)>=(x'')) THEN (((0Xffffffff8ecb37d1)) BETWEEN (('-1038733449')) AND ((''))) WHEN ((0.6360293973683558)LIKE('')) THEN ((642302095)>('-878558325')) WHEN (('rpj')IS('484452035')) THEN (+ (NULL)) WHEN CAST('痶Z' AS BLOB) THEN (+ (x'')) END);SELECT ALL rt0.c1 FROM rt0, vt1 WHERE (((((((((SQLITE_COMPILEOPTION_USED('-215233153'))AND(((0.5346995824072794) NOT BETWEEN ('4842825') AND (x'53acfaa8')))))AND(0.40197400130906136 COLLATE NOCASE)))OR((((-201937346))==(('tX|X+TJ'))))))AND(((0.5831108617453927) IS FALSE)))); -- 1ms;
SELECT ALL (((CASE WHEN t0.c47 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN vt1.c0 THEN rt0.c1 ELSE rt0.c1 END, ((((rt0.c2)AND(t0.c47)))OR(rt0.c0)), vt1.c0))>((CASE rt0.c0  WHEN rt0.c1 THEN t0.c47 END, json_object(t0.c47, rt0.c1), rt0.c0))) FROM rt0, t0, vt1 WHERE (-403731195); -- 0ms;
SELECT ALL x'' FROM vt1, t0, rt0 WHERE ((~ ((+ (x'2083'))))) LIMIT 614146163; -- 0ms;
SELECT DISTINCT json_array(CASE WHEN rt0.c2 THEN rt0.c2 END, ((rt0.c0) ISNULL)) FROM rt0, vt1 WHERE (((x'' COLLATE RTRIM) IS FALSE)); -- 0ms;
SELECT ALL ((vt1.c0)>(rt0.c0)) COLLATE NOCASE FROM rt0 LIMIT 1291867744 OFFSET 2115251739;SELECT ALL ((LOWER(vt1.c0)) IS FALSE) FROM rt0 GROUP BY (((vt1.c0)LIKE(rt0.c1)) IN ()) HAVING CAST(vt1.c0 COLLATE RTRIM AS NUMERIC);SELECT CASE GROUP_CONCAT(rt0.c2)  WHEN CASE WHEN t0.c47 THEN vt1.c0 ELSE NULL END THEN CAST(rt0.c0 AS TEXT) WHEN ((rt0.c1) NOTNULL) THEN (t0.c47 IN ()) WHEN (((x'')) NOT BETWEEN ((t0.c47)) AND ((rt0.c1))) THEN ((vt1.c0)<=(rt0.c1)) ELSE 0.240020840573975 END FROM t0, rt0, vt1 WHERE ((((NULL)) BETWEEN ((NULL)) AND ((0.5664886912155289))) COLLATE NOCASE); -- 0ms;
SELECT ((rt0.c2 IN (t0.c47, rt0.c0)) IN ()), GROUP_CONCAT((rt0.c0 IN ())) OVER (), MIN(((rt0.c2) BETWEEN (vt1.c0) AND (t0.c47))) FROM rt0, vt1 GROUP BY (~ (rt0.c0)), ((((((((CAST(vt1.c0 AS INTEGER))AND(NULL)))OR(CAST(rt0.c2 AS NUMERIC))))AND(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)))AND(t0.c47 COLLATE NOCASE)), ((((t0.c47) ISNULL)) NOTNULL) HAVING ((((rt0.c1)OR(((vt1.c0)%(rt0.c0)))))AND(((vt1.c0)<(rt0.c2))));SELECT '' FROM rt0 WHERE (IFNULL(((0.12862062066757762)>(1.726781965E9)), (('-1029266962')<=(NULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((rt0.c2, rt0.c2, rt0.c2, vt1.c0, t0.c47)) BETWEEN ((rt0.c0, NULL, vt1.c0, rt0.c1, rt0.c0)) AND ((rt0.c1, rt0.c0, t0.c47, rt0.c2, vt1.c0)))) OVER ( ORDER BY x'' DESC), CASE ((rt0.c2)+(rt0.c1))  WHEN CAST(rt0.c1 AS REAL) THEN CAST(rt0.c2 AS BLOB) WHEN rt0.c2 THEN ((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)) WHEN DATE(rt0.c0, vt1.c0, rt0.c0, rt0.c0, vt1.c0) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c0)) ELSE 0.40926495280420294 COLLATE NOCASE END, (((t0.c47 IN ()))GLOB(TOTAL(t0.c47))) FROM rt0, t0 NOT INDEXED, vt1; -- 0ms;
SELECT ALL MIN(TRIM(rt0.c0)) FROM t0, rt0, vt1 WHERE ((- ((~ (0Xffffffffd7484b05))))); -- 0ms;
SELECT DENSE_RANK() OVER () FROM vt1, rt0 WHERE (((((((((((-1.221133432E9) ISNULL))OR((((NULL)) NOT BETWEEN ((x'')) AND ((NULL))))))AND(((((x'43ca')AND(NULL)))AND('-990453469')))))OR(CAST('FALSE' AS NUMERIC))))OR(CASE 'Ysa'  WHEN -669868096 THEN '?' WHEN NULL THEN 1.598742851E9 WHEN -1.593855672E9 THEN x'' END))); -- 1ms;
SELECT ALL ((((rt0.c2 IN ())))>=(((t0.c47 IN (rt0.c1))))) FROM t0 WHERE ((~ (CAST('' AS REAL))));SELECT DISTINCT (t0.c47 IN ()) COLLATE RTRIM FROM vt1 GROUP BY ((((vt1.c0)AND(t0.c47)))==(((((rt0.c0)AND(vt1.c0)))OR(rt0.c0)))) HAVING ((((vt1.c0) NOT BETWEEN (rt0.c0) AND ('1654776972')))IS NOT(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c1))));SELECT MIN(((rt0.c1)<<(rt0.c1))), (((vt1.c0, rt0.c2, rt0.c2)) BETWEEN ((x'1805899b', (((rt0.c1)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))), ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c1)))) AND ((CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, NULL, CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END))), (((t0.c47) IS TRUE) IN ()) FROM rt0 ORDER BY CAST(((rt0.c0) IS FALSE) AS TEXT) ASC;SELECT DISTINCT CAST(((rt0.c2) ISNULL) AS NUMERIC) FROM t0 WHERE ((((- ('S|*(')))<=(UPPER(x''))));SELECT DISTINCT ((((((t0.c47)AND(vt1.c0)))OR(vt1.c0))) NOTNULL) FROM vt1, rt0, t0 WHERE ((((~ (5.76169662E8))) IS FALSE)); -- 0ms;
SELECT FIRST_VALUE(((vt1.c0) BETWEEN (LIKELY(0x1fd74d54)) AND (CAST(t0.c47 AS NUMERIC)))) OVER () FROM vt1, t0 LIMIT -570452081; -- 1ms;
SELECT DISTINCT ((rt0.c0) NOT BETWEEN ((+ (vt1.c0))) AND (UNLIKELY(rt0.c0))) FROM t0, rt0, vt1 WHERE (((((NULL)) BETWEEN (('D')) AND ((x'e1cd'))) IN ())) LIMIT 113516405 OFFSET -1020997468; -- 0ms;
SELECT COUNT(((rt0.c0) ISNULL)) OVER () FROM vt1;SELECT ALL 'XH^-R' FROM t0, vt1, rt0; -- 0ms;
SELECT DISTINCT x'', CAST(AVG(rt0.c2) AS BLOB), COUNT(((rt0.c1)!=('171229149'))) FROM rt0, t0 WHERE (CASE WHEN (- (0.03512621872071198)) THEN TRIM(0.8639552369785806, -3.15748519E8) ELSE ((((NULL)AND(NULL)))AND('1')) END); -- 0ms;
SELECT LIKELIHOOD(STRFTIME(vt1.c0, vt1.c0, NULL), 0.6832226219489645) FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CASE WHEN rt0.c2 THEN vt1.c0 ELSE rt0.c2 END), ((((rt0.c1 COLLATE RTRIM)AND((((rt0.c2, NULL, rt0.c2))<=((-1487576132, '', t0.c47))))))AND(((rt0.c0)||(rt0.c0)))), (~ (t0.c47)) FROM rt0, vt1, t0 WHERE (NULLIF(CAST(NULL AS NUMERIC), ((x'67c3') ISNULL))); -- 0ms;
SELECT DISTINCT AVG(COUNT(*)) FROM vt1, rt0;SELECT ALL ((((TOTAL(rt0.c1))OR(t0.c47)))AND(ABS(DISTINCT rt0.c0))) FROM vt1, t0, rt0; -- 0ms;
SELECT DISTINCT (- (((t0.c47)%(rt0.c0)))) FROM rt0 WHERE (CAST(((('P☩>x')) NOT BETWEEN ((0.5793272152872363)) AND ((0x1ddd06dd))) AS BLOB));SELECT ALL ((((TYPEOF(DISTINCT rt0.c2))AND(HEX(0x6858daf4))))OR(NULLIF(t0.c47, rt0.c1))) FROM rt0 RIGHT OUTER JOIN vt1 ON 0.8811985621007341;SELECT DISTINCT UPPER(DISTINCT (t0.c47 IN ())), (vt1.c0 IN ()) COLLATE BINARY, CAST(((vt1.c0) IS TRUE) AS BLOB) FROM rt0, t0 WHERE (((((((-632975537)OR(NULL)))AND(NULL)))>>((((NULL)) BETWEEN ((NULL)) AND (('/2'))))));SELECT DISTINCT (((~ (rt0.c1)))&(t0.c47)), ((CAST(vt1.c0 AS INTEGER)) BETWEEN (json_patch(vt1.c0, rt0.c1)) AND ((~ (rt0.c1)))), UNLIKELY(((((vt1.c0)AND(rt0.c1)))OR(vt1.c0))) FROM t0, vt1 NOT INDEXED WHERE ((((((('685325112', 0.8574053387590771, 0.34769311813667414)) BETWEEN (('ZY', x'55d503d7', x'70b8')) AND ((0.4312996721178034, NULL, 0.5397572222418859)))))>((CAST(x'9183' AS REAL)))));SELECT (NOT (((((0.2308187732826419)AND(t0.c47)))OR(rt0.c0)))) FROM vt1;SELECT ALL (((((+ (rt0.c0)))OR((((t0.c47)) BETWEEN ((rt0.c0)) AND ((t0.c47))))))AND((rt0.c0 IN ()))), COUNT(*), (((t0.c47, '2013080551', rt0.c0)) BETWEEN ((rt0.c1, vt1.c0, t0.c47)) AND ((rt0.c0, 1.306721258E9, t0.c47))) COLLATE RTRIM FROM rt0 WHERE ((((('1182479366')>('-501941548')))%(((0.9809974528589668)IS('-2112667364')))));SELECT DISTINCT (((((((('e	ER뗉''zo')AND(('-287682809' IN ()))))OR(((-3.03755092E8) ISNULL))))OR((rt0.c2 IN (vt1.c0)))))AND((t0.c47 IN (rt0.c0)))) FROM rt0 WHERE (0xffffffffd64136cc) ORDER BY (((((vt1.c0))<((rt0.c2))))<<(((t0.c47) NOT BETWEEN ('Vz') AND (rt0.c1))))  NULLS LAST, ((((t0.c47)==(t0.c47)))>>(((((rt0.c0)OR(t0.c47)))AND(rt0.c1)))) DESC  NULLS LAST;SELECT DISTINCT TRIM(json(rt0.c1)) FROM rt0, t0, vt1 WHERE (((CAST('%QLE-' AS REAL)) NOT BETWEEN ((NULL IN (x'', x'8cff'))) AND (x'' COLLATE RTRIM))); -- 0ms;
SELECT COUNT(((vt1.c0)>>(rt0.c2))) FROM rt0, vt1, t0 WHERE (CASE NULL  WHEN ((('1204366109'))==((NULL))) THEN ((NULL) BETWEEN (x'') AND (-1.487576132E9)) ELSE ((0.9809768028604082)IS(x'')) END); -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN vt1.c0 THEN rt0.c0 END THEN ((rt0.c1) NOT BETWEEN (vt1.c0) AND (rt0.c0)) ELSE (NOT (rt0.c1)) END, ((((NULL)AND(('985470467' IN ()))))OR(CASE rt0.c0  WHEN vt1.c0 THEN rt0.c1 END)), ((((t0.c47) IS TRUE))+(COUNT(vt1.c0))) FROM vt1 LIMIT -501941548;SELECT DISTINCT ((((rt0.c0) NOT NULL))&(vt1.c0 COLLATE BINARY)), (+ (((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0)))), (((~ (vt1.c0))) BETWEEN (rt0.c1 COLLATE BINARY) AND (vt1.c0)) FROM t0 WHERE (((((-1.512470255E9)IS(1.416459804E9))) NOT BETWEEN ('614146163' COLLATE RTRIM) AND (((x'')<>(0.4293419776527202)))));SELECT ((((rtreenode(vt1.c0, t0.c47))OR(vt1.c0 COLLATE BINARY)))OR((((rt0.c0)) NOT BETWEEN ((rt0.c1)) AND (('-315748519'))))) FROM rt0, vt1 WHERE (((((((0.08187949496642477)OR(NULL)))AND('-1162760834'))) NOT BETWEEN (x'4f1e') AND ((((('An')OR(0.7686167158036055)))OR('-1896719877')))));SELECT FIRST_VALUE((TRIM(DISTINCT rt0.c1) IN (CAST(rt0.c0 AS TEXT), rt0.c1 COLLATE BINARY))) OVER (), (((((~ (rt0.c2)))OR(TOTAL(vt1.c0))))OR(((((t0.c47)AND(rt0.c2)))AND(vt1.c0)))), rt0.c1 FROM rt0;SELECT DISTINCT (~ (('k?' IN ()))) FROM t0, vt1 WHERE ((~ (((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT SUM((vt1.c0 IN ())) FROM rt0, vt1, t0; -- 0ms;
SELECT ((rt0.c2)IS(t0.c47)) COLLATE RTRIM COLLATE RTRIM FROM vt1 ORDER BY rt0.c1 ASC;SELECT DISTINCT (((t0.c47 IN ())) NOT BETWEEN (rt0.c2) AND ((((rt0.c2))<((x'a019'))))), (((rt0.c2)) NOT BETWEEN ((CAST(rt0.c1 AS BLOB))) AND ((CAST(vt1.c0 AS REAL)))), NULL FROM t0;SELECT DISTINCT x'' FROM vt1; -- 1ms;
SELECT (+ (((t0.c47)>=('0.919844484121004')))), t0.c47, LAST_VALUE((((rt0.c2 IN ()))<=(HEX(vt1.c0)))) OVER () FROM rt0, t0, vt1 GROUP BY ((0.3243429201914344) IS FALSE); -- 0ms;
SELECT DISTINCT CASE CAST(NULL AS NUMERIC)  WHEN (NOT (t0.c47)) THEN CASE WHEN t0.c47 THEN NULL END END, COUNT(((rt0.c1) NOTNULL)) OVER (), CASE WHEN CAST(t0.c47 AS INTEGER) THEN t0.c47 COLLATE BINARY ELSE LAST_INSERT_ROWID() END, ((((((((((((vt1.c0)AND(0Xffffffffcfe12aab)))OR(rt0.c0)))OR(rt0.c1)))AND(t0.c47)))OR(CAST(t0.c47 AS NUMERIC))))OR(NULL)), (- ((~ (rt0.c1)))) FROM vt1, t0 WHERE (NULL) LIMIT 1799234704;SELECT DISTINCT ((rt0.c2)IS(((((((((((((t0.c47)AND(rt0.c0)))AND(t0.c47)))AND(0.0819016143100274)))OR(rt0.c2)))AND(rt0.c2)))OR(t0.c47)))) FROM vt1;SELECT DISTINCT ((((+ (vt1.c0)), ((vt1.c0)=(rt0.c1)), ((((((((vt1.c0)OR(vt1.c0)))OR(vt1.c0)))OR(rt0.c1)))AND(rt0.c0))))>=(((((t0.c47))!=((rt0.c0))), ((rt0.c1)-(t0.c47)), (((('-126834797')OR(rt0.c2)))AND(rt0.c2))))) FROM t0;SELECT MIN(CASE rt0.c2  WHEN rt0.c0 THEN t0.c47 WHEN rt0.c2 THEN vt1.c0 WHEN rt0.c0 THEN vt1.c0 ELSE vt1.c0 END), ((vt1.c0 COLLATE BINARY)!=(COUNT(t0.c47))), '1492564762', (((rt0.c2 IN ())) ISNULL), (~ (((rt0.c0)=(t0.c47)))) FROM vt1;SELECT ALL MIN((((t0.c47))>=((vt1.c0)))) FROM vt1 WHERE ((- ('dx%o' COLLATE RTRIM)));SELECT DISTINCT NTILE(((rt0.c0)%(highlight(rt0.c2, rt0.c0, vt1.c0, vt1.c0)))) OVER ( ORDER BY ((CASE WHEN rt0.c2 THEN t0.c47 END) NOT BETWEEN (rt0.c0 COLLATE BINARY) AND (((t0.c47)<>(rt0.c2))))  NULLS FIRST, ((((((rt0.c1)AND(t0.c47)))AND(rt0.c0))) IS FALSE)) FROM vt1, t0, rt0 WHERE ((NOT (((0.3163771834629756) NOT BETWEEN (0.029694561457689894) AND (NULL))))); -- 0ms;
SELECT DISTINCT (((((((t0.c47)OR(rt0.c2)))OR(rt0.c1)), HEX(rt0.c2), ((vt1.c0)>>(t0.c47))))>((TRIM(DISTINCT vt1.c0, rt0.c0), ((t0.c47)AND(rt0.c0)), MIN(rt0.c2)))) FROM t0 WHERE (json_array_length(('0.3150118995089455' IN ('-551809533'))));SELECT DISTINCT CASE rt0.c2  WHEN ((t0.c47)!=(rt0.c0)) THEN CASE vt1.c0  WHEN x'' THEN rt0.c2 ELSE rt0.c0 END END FROM rt0, t0 WHERE (CASE WHEN ((1383887642) BETWEEN (NULL) AND (0Xffffffff833b2135)) THEN CASE WHEN NULL THEN 'RfD[xQ' ELSE '1221092065' END WHEN GLOB(0.7730004360900331, '%DT+Z') THEN ((6.85325112E8) NOT NULL) WHEN (('')<=(0Xffffffffe214fad4)) THEN (('%<') NOT BETWEEN (-593952108) AND (x'')) ELSE 'P☩>X' COLLATE NOCASE END);SELECT DISTINCT (((CASE WHEN t0.c47 THEN rt0.c1 END))!=(((('2115251739')GLOB(t0.c47))))) FROM rt0, t0 LEFT OUTER JOIN vt1 ON (((((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c0))))OR(((rt0.c2)*(rt0.c1)))))OR(vt1.c0 COLLATE BINARY)) GROUP BY ((rt0.c2 COLLATE NOCASE) BETWEEN (TRIM(NULL, vt1.c0)) AND (CASE WHEN rt0.c0 THEN t0.c47 ELSE rt0.c2 END)); -- 5ms;
SELECT DISTINCT SUM((vt1.c0 IN ())) OVER ( ROWS  UNBOUNDED PRECEDING EXCLUDE NO OTHERS), CASE CASE WHEN NULL THEN rt0.c1 ELSE 0.5082682203695116 END  WHEN MAX(rt0.c1) THEN (NOT (rt0.c2)) ELSE NULL END, CASE WHEN ((((((((vt1.c0)AND(vt1.c0)))OR(vt1.c0)))AND(t0.c47)))AND(vt1.c0)) THEN SQLITE_COMPILEOPTION_USED(t0.c47) ELSE CASE WHEN rt0.c0 THEN rt0.c0 WHEN '711263863' THEN rt0.c1 WHEN rt0.c2 THEN 0.9704821597185035 WHEN vt1.c0 THEN rt0.c0 WHEN 0Xfffffffffd6f1100 THEN rt0.c1 END END FROM t0;SELECT ALL ((((((((0xe012ed3)AND('-1221133432')))AND(((((t0.c47)OR('-437338855')))AND(rt0.c1)))))OR(((rt0.c1)-(t0.c47)))))OR(CAST(NULL AS INTEGER))), ((CAST(vt1.c0 AS REAL)) NOT NULL), LOWER(((-535907243) NOT BETWEEN (rt0.c1) AND (t0.c47))), ROW_NUMBER() OVER (), ((CAST(rt0.c2 AS TEXT))GLOB(((rt0.c0)GLOB(rt0.c2)))) FROM vt1 GROUP BY (NOT (((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c0)))) HAVING ((CASE rt0.c0  WHEN 0.5852088668786531 THEN t0.c47 WHEN vt1.c0 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 END) NOT BETWEEN (PRINTF(vt1.c0, rt0.c0, vt1.c0)) AND (CASE t0.c47  WHEN vt1.c0 THEN rt0.c0 ELSE t0.c47 END));SELECT DISTINCT CAST(rt0.c1 AS REAL), ((rt0.c1) NOT BETWEEN (SUM(t0.c47)) AND (((vt1.c0)<=(t0.c47)))), t0.c47 FROM t0, vt1 WHERE (((('kE␃wD&(')) BETWEEN ((((x'')%(NULL)))) AND (('Ij(w'))));SELECT DISTINCT CASE WHEN CASE WHEN rt0.c2 THEN rt0.c2 WHEN vt1.c0 THEN vt1.c0 WHEN rt0.c2 THEN rt0.c0 ELSE 0xffffffff8f9c23b4 END THEN ((((((((rt0.c1)OR(rt0.c1)))AND(t0.c47)))OR(t0.c47)))OR(t0.c47)) ELSE rt0.c2 COLLATE NOCASE END FROM vt1 LIMIT 157341185 OFFSET 299906006;SELECT ((rt0.c2)||(t0.c47)) COLLATE RTRIM, IFNULL((((rt0.c0)) BETWEEN ((rt0.c0)) AND ((rt0.c1))), (- (vt1.c0))), ((((rt0.c1)OR(vt1.c0)))||((rt0.c2 IN ()))) FROM t0, rt0, vt1 LIMIT -1918666189 OFFSET 784946327; -- 0ms;
SELECT ALL ((((((rt0.c0)AND(rt0.c0)))OR(vt1.c0)))IS NOT((t0.c47 IN ()))) FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT ((LOWER(vt1.c0))<>(t0.c47 COLLATE RTRIM)), json_quote((rt0.c0 IN (rt0.c2))), NULL FROM rt0, vt1 WHERE ((((('-141200690') ISNULL))!=(((((((((0xffffffffa4752b37)OR(0.3772343875345443)))AND(x'')))AND('')))OR('')))));SELECT ALL CASE (- (rt0.c2))  WHEN (((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c1))) THEN (vt1.c0 IN (vt1.c0)) END FROM t0 WHERE (((((+ (x''))))<=((((0.963155393888279) BETWEEN (0.38682606274357734) AND ('1497800817'))))));SELECT (((((vt1.c0, vt1.c0, vt1.c0)) BETWEEN ((rt0.c1, vt1.c0, rt0.c1)) AND ((rt0.c0, t0.c47, t0.c47))))>>(((')<')IS NOT(rt0.c1)))) FROM rt0 WHERE (((CASE WHEN -674545542 THEN 0.7336513815057472 ELSE x'' END)<=((('-75259962') NOT NULL))));SELECT ALL ((json_remove(rt0.c2, -3.61910757E8)) NOT BETWEEN (((vt1.c0)GLOB(vt1.c0))) AND (((((((((rt0.c1)OR(t0.c47)))AND(vt1.c0)))OR(rt0.c2)))OR(rt0.c2)))) FROM vt1, rt0 WHERE ((- (((0Xffffffffd98ec7f6)==(NULL)))));SELECT (((rt0.c1 COLLATE NOCASE))>((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END))) FROM t0, rt0 WHERE ((- (CASE '-1802832436'  WHEN '' THEN x'' WHEN 'kfnꡂR4' THEN NULL WHEN 0.13435795056328426 THEN NULL ELSE '171229149' END))); -- 0ms;
SELECT DISTINCT 0.49027643000373966 FROM rt0, t0, vt1 WHERE ((((1451154333, NULL, 0.9252694483562811)) BETWEEN ((((((((((((((-1.00326133E9)AND(NULL)))AND(NULL)))AND(NULL)))AND('⃱릳x휽곳F')))OR(NULL)))OR(1051719157)), LIKELIHOOD(DISTINCT '1293325751', 0.581571662607329), -367373319 COLLATE RTRIM)) AND ((((x'') NOTNULL), ((0.1525664982636472) BETWEEN (NULL) AND (NULL)), ((('0.05323829300927829'))<=((x''))))))); -- 0ms;
SELECT DISTINCT CASE WHEN (- (rt0.c2)) THEN (((vt1.c0, vt1.c0, 4.57695892E8, rt0.c2, rt0.c2)) BETWEEN ((vt1.c0, rt0.c2, rt0.c1, rt0.c1, rt0.c0)) AND ((rt0.c0, '', NULL, vt1.c0, rt0.c1))) WHEN t0.c47 THEN '	8]柔஻' WHEN 0x7a7f8c3 THEN COUNT(rt0.c2) END FROM t0, rt0 WHERE (IFNULL(DISTINCT (NOT ('<ztbd]')), ((((((((NULL)AND(NULL)))OR(NULL)))OR('')))AND(NULL)))) GROUP BY (~ (('' IN ()))), (((t0.c47 IN ())) IS FALSE), (+ (((((vt1.c0)OR(rt0.c2)))OR(rt0.c2))));SELECT DISTINCT (- (((NULL)||(rt0.c2)))), rt0.c1 COLLATE RTRIM, ((((rt0.c2)+(rt0.c1))) NOT BETWEEN (((rt0.c1) NOTNULL)) AND (json_remove(rt0.c1, rt0.c1))) FROM t0;SELECT ALL SUM(NULL) FROM vt1, t0 WHERE (CASE WHEN '' THEN ']፺딁%Ⴌ7' ELSE x'c764' END COLLATE RTRIM) GROUP BY (rt0.c2 IN ()) COLLATE RTRIM, (((CASE rt0.c0  WHEN rt0.c0 THEN vt1.c0 END))<=(((((vt1.c0))<=((vt1.c0)))))), vt1.c0 HAVING ((((vt1.c0)<<(vt1.c0))) NOT BETWEEN ((((rt0.c2)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2)))) AND (rt0.c2));SELECT ALL TOTAL(CAST(rt0.c2 AS REAL) COLLATE NOCASE) FILTER(WHERE ((((((vt1.c0))=((vt1.c0))), CAST(t0.c47 AS REAL), rt0.c2))!=((CAST(vt1.c0 AS NUMERIC), ((rt0.c0) BETWEEN (rt0.c1) AND (t0.c47)), ((((vt1.c0)AND(vt1.c0)))OR(rt0.c1)))))) OVER (), ((((vt1.c0) IS FALSE)) NOTNULL), NTH_VALUE((- (((vt1.c0)<(rt0.c2)))), CASE WHEN ((rt0.c0) NOT BETWEEN (t0.c47) AND (rt0.c1)) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c2)) WHEN (+ (rt0.c1)) THEN ((rt0.c1) IS FALSE) WHEN CAST(rt0.c2 AS INTEGER) THEN (+ (rt0.c0)) WHEN ((rt0.c1) NOT NULL) THEN ((vt1.c0) IS FALSE) WHEN TRIM(rt0.c2, rt0.c1) THEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 END ELSE ((rt0.c0) NOT BETWEEN (x'') AND (vt1.c0)) END) OVER () FROM rt0, vt1, t0 WHERE ((- ((('1487311567') NOT BETWEEN (NULL) AND ('-1758075593')))));SELECT ALL CASE ((x'') IS TRUE)  WHEN ((t0.c47) BETWEEN (vt1.c0) AND (rt0.c1)) THEN ((rt0.c2)LIKE(rt0.c0)) ELSE ((t0.c47) NOT NULL) END FROM t0, rt0;SELECT DISTINCT ((((rt0.c1)OR(t0.c47))) NOT NULL) FROM vt1, rt0, t0 WHERE (((CASE WHEN 0.4367055647463177 THEN 'dx%o' ELSE '1583747444' END) IS TRUE)) ORDER BY (((((t0.c47))<=((rt0.c1)))) IS FALSE) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT NULL FROM rt0, vt1; -- 0ms;
SELECT DISTINCT ((((((vt1.c0) NOT BETWEEN (rt0.c1) AND (rt0.c1)))AND((((rt0.c1, t0.c47, rt0.c1, vt1.c0, rt0.c1)) NOT BETWEEN ((t0.c47, vt1.c0, rt0.c1, rt0.c2, rt0.c1)) AND ((rt0.c2, rt0.c0, rt0.c2, rt0.c0, rt0.c0))))))OR(MAX(t0.c47))) FROM t0, vt1 WHERE (((0xffffffffd8129fc0 IN ()) IN ()));SELECT (((- (vt1.c0)))|((((NULL)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))) FROM t0, rt0, vt1 WHERE ((('-1239827002')>>(((0.04271312477069844)<<('1596541024'))))); -- 0ms;
SELECT ALL RANK() OVER ( PARTITION BY ((((LOWER(rt0.c0))OR((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((vt1.c0))))))OR((NOT (rt0.c2)))), CASE WHEN x'' THEN t0.c47 ELSE vt1.c0 END COLLATE BINARY), CASE WHEN rt0.c0 THEN vt1.c0 END COLLATE BINARY, ((CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE vt1.c0 END) NOT BETWEEN (TOTAL_CHANGES()) AND (GROUP_CONCAT(vt1.c0))) FROM vt1, rt0 GROUP BY ((((ROUND(vt1.c0, rt0.c2))OR((rt0.c0 IN ()))))OR(((vt1.c0) BETWEEN (0X5c60eb07) AND (rt0.c2))));SELECT DISTINCT CAST(((((((((rt0.c1)AND(vt1.c0)))OR(vt1.c0)))OR(rt0.c2)))OR(rt0.c1)) AS TEXT) FROM t0, vt1 WHERE ((((+ (0.92910813837452)))IS NOT(('' IN ()))));SELECT ((((((((((rt0.c2) NOTNULL))AND(CAST(vt1.c0 AS INTEGER))))OR(CAST(vt1.c0 AS NUMERIC))))OR(rt0.c1 COLLATE RTRIM)))AND(((rt0.c2) IS FALSE))), ((((x'5ea0')-(rt0.c1))) ISNULL), ((CAST(rt0.c2 AS BLOB)) IS FALSE) FROM vt1 WHERE (((((((((((((0.8086635674826651)AND('_/FNkd')))AND(x'')))AND('-37598350')))AND('')))OR(CASE 0Xffffffffbab1ad7e  WHEN NULL THEN 'I䨸' ELSE 0.1025906899582032 END)))OR(CAST('b{xznJq]J' AS REAL))));SELECT DISTINCT CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END COLLATE BINARY FROM rt0, vt1 WHERE ((((- (x'8c4f'))) BETWEEN (CAST(NULL AS BLOB)) AND (((('1083684297'))>((0.6823980543261616)))))); -- 0ms;
SELECT (((+ (rt0.c2))) NOT NULL), CASE ((rt0.c2)>=('1221092065'))  WHEN '5膜䚒' THEN ((rt0.c2)!=(rt0.c0)) ELSE HEX(rt0.c0) END, ((((((vt1.c0)AND(rt0.c2)))OR(rt0.c0))) BETWEEN (((((((((rt0.c2)OR(rt0.c1)))OR(t0.c47)))OR(t0.c47)))OR(rt0.c2))) AND (((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c47)))) FROM vt1, rt0, t0 WHERE ((NOT (((NULL) NOT BETWEEN (NULL) AND (0.5482489908470144))))) GROUP BY ((IFNULL('%8CA.j', rt0.c2)) BETWEEN (((((rt0.c0)AND(rt0.c2)))AND(rt0.c0))) AND (CAST(rt0.c1 AS REAL))); -- 0ms;
SELECT ALL SUM(((rt0.c2)<<(rt0.c1))), NULL, CASE WHEN 0.3074348571473523 THEN (rt0.c1 IN (t0.c47)) WHEN LTRIM(vt1.c0) THEN ((vt1.c0)IS NOT(rt0.c1)) WHEN UNLIKELY(0.9726756317474327) THEN ((vt1.c0) IS FALSE) END FROM vt1, t0;SELECT DISTINCT ((CAST(rt0.c1 AS REAL)) NOT BETWEEN ((- (t0.c47))) AND (vt1.c0 COLLATE NOCASE)) FROM rt0, t0;SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC)) NOT BETWEEN (CASE vt1.c0  WHEN rt0.c2 THEN NULL END) AND (((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c0)))) FROM t0, vt1, rt0 GROUP BY CASE WHEN (rt0.c2 IN ()) THEN ((t0.c47) NOT BETWEEN (vt1.c0) AND (rt0.c2)) END; -- 1ms;
SELECT DISTINCT CAST((t0.c47 IN ()) AS BLOB) FROM rt0, t0, vt1 WHERE (MAX(NULL, ((('', x'', '207986601')) BETWEEN ((0Xffffffffed2e0f59, NULL, 0.5729076799577775)) AND ((0.8310356619433157, 'UX瘷0K', NULL))))) ORDER BY 0xffffffffb951cfdf; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c2 THEN t0.c47 WHEN rt0.c1 THEN t0.c47 WHEN vt1.c0 THEN t0.c47 ELSE rt0.c0 END)<>(CAST(vt1.c0 AS NUMERIC))) FROM rt0 WHERE (((((TRIM('0.7905393900467783'))OR((('-1802416750') IS TRUE))))OR(('<P2bt?I+' IN ()))));SELECT DISTINCT json(vt1.c0) COLLATE BINARY FROM rt0, t0 WHERE ((((NULL)%(NULL)) IN ()));SELECT DISTINCT vt1.c0, (CAST(rt0.c2 AS INTEGER) IN ()), CASE WHEN rt0.c2 THEN COUNT(*) ELSE ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)) END FROM rt0, vt1, t0; -- 0ms;
SELECT ALL TOTAL(CASE rt0.c2  WHEN vt1.c0 THEN rt0.c0 ELSE rt0.c1 END) FROM t0, rt0 WHERE ((((0.28026544185834157))<((((((NULL)OR(x'b8f4')))AND('[0e<T'))))));SELECT DISTINCT ((((rt0.c0 IN ())))==((TRIM(rt0.c1)))) FROM t0, vt1, rt0 WHERE ((((x'')) NOT BETWEEN (((('7')GLOB(NULL)))) AND ((('JHG荂' IN (-3.15748519E8)))))); -- 0ms;
SELECT ((((((t0.c47) BETWEEN (vt1.c0) AND (0.7769492470674945)))AND((((rt0.c1, rt0.c2, vt1.c0))=((rt0.c0, 0.8152846428004091, rt0.c1))))))OR(CASE rt0.c1  WHEN vt1.c0 THEN '1926053772' ELSE ' 펅y1N' END)) FROM rt0, t0 INNER JOIN vt1 ON (((rt0.c0, rt0.c0, x''))!=((rt0.c0, t0.c47, rt0.c2))) COLLATE BINARY WHERE (((((((((((x'')>=(NULL)))OR((~ (NULL)))))OR(CASE WHEN '' THEN NULL WHEN '' THEN 0.33396371700991834 WHEN ']፺딁%Ⴌ7' THEN x'' END)))OR('')))AND(((x'')<(NULL))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER ( ROWS ((((rt0.c1) ISNULL)) NOTNULL) PRECEDING EXCLUDE NO OTHERS) FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((vt1.c0) NOT BETWEEN ((((rt0.c1, '0.954489471743223', rt0.c1, rt0.c0, rt0.c1)) BETWEEN ((vt1.c0, rt0.c0, rt0.c0, rt0.c2, t0.c47)) AND ((rt0.c0, t0.c47, t0.c47, t0.c47, rt0.c0)))) AND (CAST(rt0.c1 AS REAL))), ((((rt0.c2)||(t0.c47)))OR(vt1.c0)), ((((TOTAL(vt1.c0))AND(CAST(t0.c47 AS TEXT))))OR(vt1.c0 COLLATE RTRIM)) FROM t0;SELECT DISTINCT 0.7295138350669342 FROM rt0, vt1; -- 0ms;
SELECT ALL ((((vt1.c0) NOT BETWEEN (rt0.c2) AND (t0.c47)))OR((vt1.c0 IN ()))) FROM rt0 WHERE (((((- (x'')), ((((NULL)OR(0Xffffffffaaa1ee2b)))OR('517837027')), ((0x546d761c) BETWEEN ('{᲻') AND (NULL))))==((((((x'ffe3')AND(NULL)))OR(x'')), (~ ('௚DL<')), (((0.8900381815436733, 0Xffffffffb736fb88, x''))!=((1510783351, NULL, x'')))))));SELECT DISTINCT NULL FROM rt0, vt1, t0 WHERE ((((~ (x''))) NOT BETWEEN (((((NULL)AND('-1036450458')))OR(NULL))) AND (0xffffffff834c656e COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c0) IN ()) FROM t0; -- 0ms;
SELECT DISTINCT LAST_INSERT_ROWID() FROM t0, rt0; -- 0ms;
SELECT DISTINCT t0.c47 COLLATE NOCASE, MIN(((((((((vt1.c0)OR(t0.c47)))OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c2)), (~ (rt0.c1))), (+ (0.8260403533195004)) FROM rt0, vt1 WHERE ((((('*嶏')<(0.9726756317474327)))>=((((NULL)) BETWEEN (('1570177270')) AND (('66990835')))))) GROUP BY (((vt1.c0)>=(rt0.c2)) IN ((((rt0.c2)) BETWEEN ((vt1.c0)) AND ((t0.c47)))));SELECT DISTINCT ((((((vt1.c0)<=(rt0.c1)))AND(((rt0.c2)!=(rt0.c1)))))AND((((vt1.c0)) NOT BETWEEN ((2035470035)) AND ((rt0.c2))))), CASE rt0.c1  WHEN vt1.c0 THEN 0.6371038910575764 ELSE rt0.c0 END COLLATE RTRIM, (((rt0.c1)*(rt0.c1)) IN (((rt0.c0) IS FALSE))) FROM t0, rt0, vt1 WHERE (CASE WHEN ((((((((NULL)AND(NULL)))OR(0.08995132935852113)))OR(NULL)))OR('%늰q#B.W')) THEN (- (0.2596308011781516)) END); -- 0ms;
SELECT ALL (NOT (TRIM(rt0.c0))) FROM vt1;SELECT ALL '\rTj瑉wꚾ8', 'H', (((rt0.c1) BETWEEN (0.958778905572187) AND (vt1.c0)) IN ()) FROM rt0, t0 WHERE ((+ (((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT ((NOT ('-1901431126')) IN ()) FROM vt1, rt0; -- 0ms;
SELECT ALL ((SUM(vt1.c0))|(((rt0.c1)==('290886829')))) FROM vt1, rt0 WHERE (((((CASE WHEN '5E' THEN 0.7736794888586203 ELSE 0.8312406172216482 END)OR(LIKELIHOOD(NULL, 0.5969212727613586))))AND((('0.1653152765185537') ISNULL)))); -- 0ms;
SELECT ALL ((vt1.c0) BETWEEN (vt1.c0 COLLATE BINARY) AND ((t0.c47 IN (rt0.c2)))) FROM rt0, t0, vt1 WHERE (CAST(((x'cf84')=('-952646421')) AS REAL)); -- 0ms;
SELECT DISTINCT ((vt1.c0 COLLATE BINARY)<<(t0.c47)) FROM rt0, t0, vt1; -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c47)AND('-432132944')))AND(vt1.c0)) THEN rt0.c2 WHEN COALESCE(DISTINCT rt0.c0, vt1.c0) THEN json_object(vt1.c0, rt0.c0, vt1.c0, vt1.c0) WHEN SUM(t0.c47) THEN (vt1.c0 IN ()) END FROM rt0 WHERE (((CASE x''  WHEN 0.8387773996528898 THEN NULL WHEN '0.7790759130611471' THEN '-197074105' WHEN -1490069389 THEN NULL ELSE '' END)>>(((x'')>('39798005')))));SELECT ALL CAST(((t0.c47)+(rt0.c0)) AS BLOB) FROM t0, vt1 WHERE (CAST(((-2.48987873E8)+(171229149)) AS TEXT));SELECT DISTINCT (((((((((- (rt0.c1)))OR(NULLIF(rt0.c0, x'0906'))))AND(NULL)))OR((((rt0.c1))<((rt0.c0))))))OR(x'' COLLATE RTRIM)) FROM rt0, vt1 LIMIT -1896719877; -- 0ms;
SELECT DISTINCT (((((rt0.c0) NOTNULL)))==(((NOT (vt1.c0))))) FROM vt1, t0;SELECT DISTINCT (((rt0.c1 IN (rt0.c0, rt0.c0)))GLOB((((rt0.c1)) NOT BETWEEN ((rt0.c0)) AND (('98729820'))))) FROM t0 WHERE (CAST((- ('883848629')) AS BLOB));SELECT ALL (- (((rt0.c2)GLOB(rt0.c2)))), (((vt1.c0)%(t0.c47)) IN (1.241421544E9)), ((x'1932') BETWEEN (((((rt0.c0)OR(rt0.c1)))OR(vt1.c0))) AND (((((((((((((rt0.c0)AND(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)))OR(rt0.c2)))) FROM vt1 WHERE (((0.8505585400948534)/(((x'')&(x'')))));SELECT DISTINCT ((((rt0.c2) NOTNULL)) IS TRUE) FROM rt0, t0, vt1; -- 0ms;
SELECT ALL (((('0.3677401220966525') NOT BETWEEN (t0.c47) AND (rt0.c1)))&(CASE WHEN rt0.c0 THEN t0.c47 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c47 THEN rt0.c0 ELSE vt1.c0 END)) FROM t0, rt0, vt1 LIMIT 356579153; -- 0ms;
SELECT ALL NULL FROM t0, vt1, rt0 WHERE ((- (((-3.88757115E8) BETWEEN ('985470467') AND (0.07518585545082368))))); -- 0ms;
SELECT CASE rt0.c1  WHEN vt1.c0 THEN rt0.c1 ELSE t0.c47 END COLLATE NOCASE FROM t0, rt0 WHERE (((CAST('1726781965' AS INTEGER))&(LIKELY(DISTINCT NULL))));SELECT TRIM(DISTINCT (rt0.c2 IN ())) FROM t0; -- 0ms;
SELECT ALL ((NULL) BETWEEN (rt0.c0) AND (((rt0.c1) IS FALSE))) FROM rt0, t0 WHERE (CASE WHEN ((0.9726756317474327) NOT BETWEEN (NULL) AND (NULL)) THEN (((((((((((('992518519')AND(4.57695892E8)))OR('0.9033021995616054')))AND(x'c24b')))OR('D[2')))OR('1999282092')))OR(0.8803230742327454)) ELSE ((0.8177381060574415)>(NULL)) END); -- 0ms;
SELECT ALL 0.968522595119324 FROM t0 WHERE ((((0.7230764963925337)) NOT BETWEEN ((('' IN ()))) AND ((((x'')>=('L')))))); -- 0ms;
SELECT ALL ((((CAST(rt0.c0 AS NUMERIC))AND(((rt0.c1) NOT BETWEEN (t0.c47) AND (vt1.c0)))))OR(((vt1.c0)AND(rt0.c1)))), t0.c47 COLLATE BINARY, COUNT(((((rt0.c0)AND(t0.c47)))AND(0.20340346016519206))) OVER () FROM t0, rt0, vt1 WHERE (CAST((('-248987873')GLOB(NULL)) AS NUMERIC)); -- 0ms;
SELECT DISTINCT CASE (rt0.c0 IN ())  WHEN 0.27932668398705474 THEN ((rt0.c0)IS NOT(rt0.c0)) ELSE ((vt1.c0)<>(vt1.c0)) END FROM rt0 WHERE ((('b%SAAI')AND(CASE NULL  WHEN x'' THEN NULL END)));SELECT DISTINCT (((t0.c47)) BETWEEN ((((rt0.c1)>(rt0.c1)))) AND ((MAX(vt1.c0)))) FROM t0, vt1;SELECT (('1510783351' COLLATE BINARY)IS NOT(TOTAL(rt0.c0))) FROM rt0, t0 WHERE ((+ (CAST(0.0765714526143011 AS BLOB)))); -- 0ms;
SELECT ALL CAST(CAST(t0.c47 AS NUMERIC) AS BLOB) FROM rt0, vt1 WHERE (CAST(((('-1431730280')) BETWEEN ((NULL)) AND ((''))) AS NUMERIC));SELECT ALL ('752438819' IN ()), '1808628258', CASE WHEN ((rt0.c1)&(vt1.c0)) THEN COALESCE(DISTINCT rt0.c1, rt0.c0) END, SUM((rt0.c2 IN ())) OVER (), (+ (AVG(t0.c47))) FROM vt1, t0;SELECT ALL (COUNT(1183831868) IN (((rt0.c2)IS NOT(vt1.c0)))) FROM t0, vt1;SELECT ALL '/j' FROM vt1 WHERE ((NOT (((0.5644635514445007) NOTNULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT('') OVER () FROM rt0 WHERE ((0X3488ba17 IN ()) COLLATE NOCASE) ORDER BY (+ (CASE WHEN t0.c47 THEN rt0.c2 END)) ASC;SELECT DISTINCT CAST(0.44506089633834045 AS TEXT) FROM t0 WHERE (((('', 0.09902989114005989, 0.046963118600150566)) NOT BETWEEN ((((NULL) ISNULL), ((-315748519)>(944305024)), (('Uml}0^') NOTNULL))) AND ((LIKELIHOOD(DISTINCT 0.7527722688630923, 0.7085278731058043), CASE ''  WHEN 0.13842781813993843 THEN 0.9548416174117914 WHEN x'' THEN NULL WHEN x'' THEN NULL END, highlight(NULL, 1.492564762E9, 0x7c05eb51, 0.646912273161374))))); -- 0ms;
SELECT DISTINCT ((INSTR(rt0.c1, NULL)) BETWEEN (((t0.c47) IS TRUE)) AND (((t0.c47) NOT NULL))) FROM t0, rt0, vt1 GROUP BY (+ (((rt0.c0) NOT NULL))) HAVING (((0.5932192364491522, vt1.c0, t0.c47)) NOT BETWEEN ((((rt0.c1)*(vt1.c0)), ((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c0)))OR(vt1.c0)), vt1.c0)) AND ((((t0.c47)AND(t0.c47)), ((rt0.c1)AND(rt0.c1)), ((rt0.c1)+(vt1.c0))))) ORDER BY t0.c47 DESC  NULLS LAST, (~ (((rt0.c0)<=(rt0.c2)))), ((((-1365292408) BETWEEN (rt0.c2) AND (rt0.c0))) NOT NULL) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((x'' COLLATE BINARY)>>((t0.c47 IN (vt1.c0)))) FROM rt0, vt1 WHERE (((('')) NOT BETWEEN (((NOT (NULL)))) AND ((CASE WHEN x'' THEN NULL WHEN NULL THEN '-400059361' WHEN x'' THEN '-1003261330' WHEN NULL THEN '1e500' WHEN 0xc8e5d3b THEN '	佔7<	2' ELSE '210656571' END))));SELECT ((((rt0.c2 IN (rt0.c1))))>((((vt1.c0)=(rt0.c2))))), CAST(rt0.c1 COLLATE RTRIM AS INTEGER), ((rt0.c1)AND(rt0.c1)) COLLATE BINARY FROM vt1, t0, rt0 WHERE (('190924348' COLLATE BINARY IN ())); -- 0ms;
SELECT rt0.c1 FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM vt1, t0 WHERE (x'2089');SELECT ALL rt0.c2 FROM t0, rt0, vt1 WHERE ((((((NULL))<((0.4647425907119306)))) NOT BETWEEN (((((NULL)AND('tq')))OR(NULL))) AND (x'b37e' COLLATE RTRIM))); -- 0ms;
SELECT UNLIKELY(DISTINCT CAST(t0.c47 AS TEXT)), ((COUNT(*))+((((vt1.c0)) NOT BETWEEN ((vt1.c0)) AND ((rt0.c2))))), MIN(((rt0.c2)!=(rt0.c1))) FROM rt0, t0, vt1; -- 0ms;
SELECT AVG(rt0.c1 COLLATE BINARY COLLATE RTRIM) FROM vt1 WHERE (TRIM(0X6b827232, ('P痶jD共' IN ()))) ORDER BY rt0.c1 ASC;SELECT ((((((vt1.c0) BETWEEN (t0.c47) AND (NULL)))OR(t0.c47)))OR(rt0.c0)) FROM vt1, rt0;SELECT COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL (((((rt0.c1))<=((rt0.c0))))%((((rt0.c0))>=((vt1.c0))))) FROM vt1, t0, rt0 WHERE ((((-75259962 COLLATE RTRIM, 0.24480783787433702, (NULL IN ())))==((((6.6990835E7) ISNULL), ((NULL)<<(x'')), ((((0.7841384601742362)AND(NULL)))OR('1357300083')))))) LIMIT 1256311305 OFFSET -211119473; -- 0ms;
SELECT DISTINCT NTILE(rt0.c1) OVER () FROM rt0, t0, vt1 WHERE ((UPPER(DISTINCT NULL) IN ())); -- 0ms;
SELECT DISTINCT (((((rt0.c2)OR(rt0.c1)))AND(rt0.c0)) IN ()) FROM t0 LIMIT -402715610 OFFSET 66990835; -- 0ms;
SELECT LAG((((rt0.c1)) BETWEEN ((NULL)) AND ((RTRIM(rt0.c1)))), CAST(x'1dc5' AS BLOB) COLLATE BINARY, ((rt0.c2) NOT NULL) COLLATE NOCASE) OVER () FROM rt0, t0 LEFT OUTER JOIN vt1 ON CAST(rt0.c1 AS NUMERIC) COLLATE BINARY GROUP BY ((ABS(rt0.c2))!=(((rt0.c2) IS TRUE))), CASE WHEN ((t0.c47) BETWEEN (rt0.c0) AND (t0.c47)) THEN (t0.c47 IN (vt1.c0, -1.02926653E8)) WHEN CASE rt0.c2  WHEN vt1.c0 THEN rt0.c1 WHEN vt1.c0 THEN t0.c47 WHEN 0.3429077403864914 THEN t0.c47 END THEN SQLITE_COMPILEOPTION_USED(vt1.c0) WHEN (t0.c47 IN (rt0.c0, vt1.c0)) THEN ((rt0.c0) IS TRUE) WHEN (t0.c47 IN (rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN ((vt1.c0) IS TRUE) THEN ((t0.c47) BETWEEN (rt0.c1) AND (rt0.c2)) ELSE rt0.c0 END, TYPEOF(((rt0.c0)-(t0.c47))) LIMIT 1562249173; -- 1ms;
SELECT ALL AVG(CAST(t0.c47 AS INTEGER)) OVER () FROM vt1, rt0, t0; -- 0ms;
SELECT DISTINCT CAST(CAST(t0.c47 AS TEXT) AS BLOB), ((((TOTAL(rt0.c1))AND(x'f319')))OR(HEX(rt0.c2))), rt0.c0 FROM t0, rt0, vt1 NOT INDEXED; -- 0ms;
SELECT DISTINCT COUNT(TOTAL(((rt0.c2) NOT NULL))) FROM vt1, rt0 WHERE (CAST(((NULL)OR(x'')) AS NUMERIC)) ORDER BY ((((((((((rt0.c2)OR(vt1.c0)))OR(vt1.c0)))OR(t0.c47)))OR(vt1.c0)))>=(vt1.c0 COLLATE BINARY)) DESC;SELECT ALL (((vt1.c0)IS NOT(t0.c47)) IN ()), CASE WHEN x'' THEN CASE vt1.c0  WHEN rt0.c0 THEN 0xffffffff9e634498 END WHEN ((vt1.c0) IS FALSE) THEN ((rt0.c1)<(x'')) WHEN ((rt0.c2)<<(rt0.c0)) THEN (- (rt0.c2)) END, ((CAST(vt1.c0 AS INTEGER)) IS FALSE) FROM rt0, t0, vt1; -- 0ms;
SELECT ALL CASE WHEN (- (rt0.c0)) THEN LIKELY(t0.c47) WHEN CAST(t0.c47 AS INTEGER) THEN CAST(rt0.c0 AS TEXT) WHEN CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c47 END THEN NULL END FROM rt0, t0; -- 0ms;
SELECT (((((('')AND(rt0.c1)))AND(NULL)))=((+ (t0.c47)))) FROM rt0, t0; -- 0ms;
SELECT ALL (((- (rt0.c0)))AND(SUM(rt0.c0))), (((rt0.c2 IN ()))IS(((rt0.c2)IS NOT(vt1.c0)))), AVG((((rt0.c1))!=((rt0.c2)))) OVER () FROM vt1, rt0, t0 WHERE ((((((0.34932307644504157)) BETWEEN (('|pvk\W')) AND (('999443675'))))OR(CAST(0.5262621192330492 AS INTEGER)))); -- 0ms;
SELECT DISTINCT TRIM(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END) FROM t0, vt1, rt0; -- 0ms;
SELECT ALL x'' FROM rt0 WHERE (CASE ((((((((NULL)OR('-1363616831')))OR(x'')))OR(x'73fa')))AND('-303755092'))  WHEN (- ('-1791319855')) THEN (((((((('')OR(x'2384')))OR(0.6094803028195962)))AND(x'')))AND(0.968522595119324)) WHEN ((((((((NULL)AND(0.09135725972589326)))OR(1738737507)))OR(x'')))AND(x'')) THEN CAST(x'' AS REAL) WHEN CASE 0Xfffffffffe944c72  WHEN '-1512470255' THEN 0.3590945767103185 END THEN ((x'db07')>('nvkG,')) ELSE (0.8623682392655779 IN ()) END) ORDER BY (vt1.c0 IN ()) DESC  NULLS FIRST LIMIT 1829156097; -- 0ms;
SELECT (((rt0.c1 IN ())) NOT BETWEEN (((rt0.c1) NOT NULL)) AND (MIN(vt1.c0, t0.c47, vt1.c0, t0.c47))) FROM t0, rt0, vt1 WHERE (((CASE WHEN x'' THEN NULL WHEN 0Xffffffffcba375f6 THEN 0.41948572906805015 WHEN '-1808911336' THEN 0.5520474988346116 END) NOTNULL)); -- 0ms;
SELECT NTILE((CAST(rt0.c2 AS REAL) IN ())) OVER ( RANGE ((rt0.c2 COLLATE BINARY)AND(((((rt0.c0)OR(vt1.c0)))OR(2.10656571E8)))) PRECEDING EXCLUDE GROUP), (((rt0.c0 IN ()))-(((vt1.c0)&(t0.c47)))), x'', t0.c47, AVG((((vt1.c0)) BETWEEN ((t0.c47)) AND ((rt0.c2))) COLLATE RTRIM) FROM rt0 GROUP BY ((((rt0.c0) NOT BETWEEN (x'') AND (vt1.c0)))+(((rt0.c0)-(NULL)))) HAVING ((('|V')) NOT BETWEEN ((((rt0.c2) IS TRUE))) AND ((CAST(rt0.c0 AS REAL))));SELECT DISTINCT 1.907746785E9 FROM t0, vt1; -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS BLOB)) BETWEEN (((rt0.c0) BETWEEN (vt1.c0) AND (t0.c47))) AND (((rt0.c0)>=(rt0.c0)))), ABS(((rt0.c0) BETWEEN (rt0.c0) AND (vt1.c0))), ((TOTAL(0Xffffffff9240b6a7)) NOT BETWEEN (t0.c47 COLLATE RTRIM) AND (CAST(rt0.c2 AS NUMERIC))) FROM rt0, vt1 WHERE ((~ ((('14376325')<('')))));SELECT DISTINCT (TOTAL(rt0.c2) IN ()) FROM rt0; -- 0ms;
SELECT ALL COALESCE(vt1.c0, rt0.c1) COLLATE NOCASE FROM rt0, vt1, t0 WHERE (CASE NULL  WHEN x'3b39' THEN x'' END COLLATE NOCASE) LIMIT 586702845; -- 0ms;
SELECT ALL (((((- (vt1.c0)))OR(vt1.c0 COLLATE RTRIM)))AND(((t0.c47)/(rt0.c0)))), (((((rt0.c1)) NOT BETWEEN ((t0.c47)) AND ((rt0.c0)))) NOT BETWEEN (((((((((rt0.c0)AND(vt1.c0)))OR(rt0.c1)))OR(rt0.c2)))AND(vt1.c0))) AND (CASE WHEN 0x4033701 THEN rt0.c2 END)), (((('Y')AND(((rt0.c0)AND(vt1.c0)))))OR(vt1.c0 COLLATE NOCASE)) FROM vt1 WHERE (((0.646912273161374 COLLATE RTRIM) BETWEEN (((-1357514398) NOT NULL)) AND (0.6223496001196461 COLLATE RTRIM)));SELECT DISTINCT (NOT (((rt0.c1) NOTNULL))) FROM vt1, rt0 WHERE (CAST(((0.1313469754402652)|(NULL)) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((t0.c47, rt0.c1, vt1.c0)) NOT BETWEEN ((((t0.c47)AND(t0.c47)), t0.c47, CAST(rt0.c1 AS NUMERIC))) AND ((x'85dc', (+ (rt0.c1)), ((0.4892628914838084)<<(t0.c47))))) FROM rt0, vt1, t0 WHERE (((CAST(1985082460 AS INTEGER))>(CAST(NULL AS BLOB)))); -- 0ms;
SELECT DISTINCT COUNT(*) OVER (), (((rt0.c1, vt1.c0, t0.c47)) BETWEEN ((CASE WHEN vt1.c0 THEN t0.c47 END, (rt0.c2 IN ()), CASE t0.c47  WHEN rt0.c2 THEN x'' ELSE rt0.c2 END)) AND ((0.9031550982939291, ((((vt1.c0)AND(rt0.c2)))AND(rt0.c2)), rt0.c2 COLLATE BINARY))), SUM(((rt0.c1)>(rt0.c1))) FILTER(WHERE CASE WHEN ((((rt0.c2)AND(vt1.c0)))AND(rt0.c2)) THEN CAST(t0.c47 AS REAL) ELSE (rt0.c2 IN ()) END) OVER () FROM t0, vt1, rt0 WHERE (CASE ((0.8428760311217097) BETWEEN (x'') AND ('-1854974347'))  WHEN NULL THEN ((((((((x'3caf')AND('8A')))OR('XW!䟃KW\n')))OR(x'')))OR(')MtFD')) END) GROUP BY (((rt0.c1, vt1.c0, rt0.c1, 0Xffffffffe827941f, 0.8360253536086376)) BETWEEN ((((rt0.c2) NOT NULL), (rt0.c2 IN ()), (((vt1.c0))<((rt0.c0))), ((rt0.c0) IS TRUE), rt0.c0)) AND (((((rt0.c0)) NOT BETWEEN ((t0.c47)) AND ((rt0.c2))), CAST(rt0.c1 AS INTEGER), ((t0.c47)LIKE(rt0.c1)), rt0.c1, rt0.c1))) LIMIT 2102474291 OFFSET 1; -- 0ms;
SELECT ALL (+ (((t0.c47) NOT BETWEEN (rt0.c2) AND (t0.c47)))), DENSE_RANK() OVER (), ((((rt0.c2) NOTNULL))>(((t0.c47)|(t0.c47)))) FROM vt1, rt0;SELECT DISTINCT TOTAL(((vt1.c0)/(t0.c47))) OVER () FROM rt0, vt1, t0 WHERE ((((('-1923890056')AND(NULL)))AND('H9')) COLLATE RTRIM); -- 0ms;
SELECT vt1.c0, SUM(((vt1.c0)>>(rt0.c2))) OVER ( ORDER BY CAST((((rt0.c2))!=((t0.c47))) AS INTEGER)), (((t0.c47 IN ()))<(CAST(rt0.c1 AS INTEGER))) FROM t0, rt0, vt1 WHERE ((((((('294031522')OR(x'')))OR(NULL)))IS(((((NULL)OR(-531649674)))AND('0.8570870882990511'))))); -- 1ms;
SELECT ALL rt0.c0 FROM t0, rt0, vt1; -- 0ms;
SELECT DISTINCT SUM(CAST(rt0.c0 AS NUMERIC)) OVER () FROM vt1;