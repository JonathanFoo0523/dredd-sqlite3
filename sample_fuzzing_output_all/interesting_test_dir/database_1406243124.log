-- Time: 2024/06/07 07:28:43
-- Database: database24
-- Database version: 3.40.0
-- seed value: 1406243124
PRAGMA cache_size = 50000; -- 13ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA encoding = 'UTF-16le'; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2); -- 1ms;
UPDATE OR ABORT rt0 SET (c0, c0, c0)=(0.532377312182888, 'f<', 0.7670273894510803); -- 0ms;
UPDATE OR IGNORE rt0 SET (c2, c0)=(NULL, '&y') WHERE (((NOT (rt0.c0))) BETWEEN (CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c1 END) AND (((((rt0.c2)OR(rt0.c0)))OR(rt0.c2)))); -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c1) VALUES ('f<', ''), ('', 822075905), (x'', 0.2547638569021178); -- 1ms;
INSERT OR IGNORE INTO rt0(c1) VALUES ('-1664370647'); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE rt0 SET c2=0X43e98644 WHERE x''; -- 1ms;
INSERT OR ABORT INTO rt0(c1, c0, c2) VALUES (NULL, x'2adf', 'SpM,L'); -- 3ms;
REINDEX; -- 0ms;
PRAGMA legacy_file_format = false; -- 1ms;
UPDATE rt0 SET (c1)=('xL') WHERE CASE rt0.c1 COLLATE NOCASE  WHEN CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 END THEN (((rt0.c1, rt0.c2, rt0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c1)) AND ((rt0.c2, rt0.c2, rt0.c2))) WHEN ((rt0.c0) ISNULL) THEN ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)) WHEN ((rt0.c1)>>(rt0.c1)) THEN (~ (rt0.c2)) END; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c0) VALUES (0.9637867506798788, 1139377732); -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1, c1)=('', 8.22075905E8) WHERE CASE TYPEOF(rt0.c0)  WHEN CAST(rt0.c0 AS NUMERIC) THEN x'' END; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE OR ABORT rt0 SET c1=x''; -- 1ms;
UPDATE OR IGNORE rt0 SET c1=1.139377732E9; -- 1ms;
UPDATE OR IGNORE rt0 SET (c1, c0)=('', '822075905') WHERE ((((((rt0.c0)IS NOT(rt0.c1)))OR(rt0.c1)))OR(rt0.c2)); -- 0ms;
ROLLBACK TRANSACTION; -- 5ms;
UPDATE OR IGNORE rt0 SET c0=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET c1='-308698291' WHERE rt0.c1; -- 0ms;
COMMIT; -- 0ms;
DELETE FROM rt0 WHERE (((~ (rt0.c0)))!=((+ (x'2ec5')))); -- 1ms;
UPDATE OR ABORT rt0 SET c1=NULL, c0=x'', c2=0.18050260937940799; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x'839f') WHERE ((((rt0.c1 IN ())))<>((COALESCE(DISTINCT rt0.c0, rt0.c2)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c2)=(0Xffffffffc326c36d); -- 0ms;
UPDATE OR ROLLBACK rt0 SET c1=''; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
COMMIT; -- 0ms;
ANALYZE; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET c2=0.07806972250756727 WHERE (+ ('-1020869779')); -- 0ms;
UPDATE OR FAIL rt0 SET (c1, c0)=(0.3442507543118606, x'0034') WHERE (((((((((rt0.c0)OR(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(NULL)) IN (SQLITE_VERSION(), NULLIF(NULL, rt0.c2))); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR REPLACE INTO rt0(c0, c1, c2) VALUES (0.18050260937940799, '', 0xffffffffa28e3c0c); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (x'', 0x30ffe201, '('), (0.654369096293031, 1139377732, 'f<'), ('-1803112331', '-1e500', 0.654369096293031); -- 2ms;
ANALYZE; -- 0ms;
UPDATE OR IGNORE rt0 SET c0='M9Fx'; -- 0ms;
UPDATE OR IGNORE rt0 SET c1=x'9c6b', c0=x'b963'; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c1)=(NULL) WHERE ((0.024125273389952295)<(CASE WHEN NULL THEN 0.3982166815145398 END)); -- 0ms;
UPDATE rt0 SET (c0)=('-1664370647'); -- 1ms;
UPDATE OR IGNORE rt0 SET c0='cH(' WHERE (((((rt0.c0, rt0.c2, rt0.c1))>=((rt0.c1, rt0.c2, rt0.c2))))IS(CAST(rt0.c2 AS REAL))); -- 0ms;
ANALYZE temp; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ANALYZE temp; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1 WHERE x''; -- 0ms;
UPDATE rt0 SET c2='-1384159946' WHERE ((((rt0.c2)LIKE(rt0.c0)))=('')); -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c1)=(x'', NULL) WHERE (((-1.020869779E9))!=((((rt0.c0)=(rt0.c0))))); -- 4ms;
UPDATE OR IGNORE rt0 SET c0=0.6333825750509077 WHERE ((((CAST(rt0.c0 AS BLOB))OR(((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c0)))))OR(((NULL)&(rt0.c0)))); -- 0ms;
UPDATE OR IGNORE rt0 SET c0=x''; -- 0ms;
COMMIT; -- 0ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
ANALYZE; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
END; -- 0ms;
REINDEX; -- 1ms;
UPDATE OR IGNORE rt0 SET c2=x'' WHERE ((CAST(rt0.c0 AS NUMERIC)) BETWEEN ((rt0.c2 IN ())) AND (CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 WHEN NULL THEN rt0.c2 END)); -- 0ms;
COMMIT; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c2)=('1025000187'); -- 0ms;
UPDATE OR IGNORE rt0 SET (c1)=(x''); -- 0ms;
CREATE TEMP TABLE IF NOT EXISTS t0 (c0 REAL , c1 INTEGER , c2 INTEGER ); -- 0ms;
END; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT ALL NTILE(((((rt0.c1)%(rt0.c1)))AND(((rt0.c0)IS(rt0.c1))))) OVER ( ROWS  CURRENT ROW) FROM rt0 WHERE (((CASE '1139377732'  WHEN 0.7557427312950545 THEN NULL WHEN 0.3958308863852289 THEN x'15f4' WHEN -1426436122 THEN '' END)||(LIKELIHOOD(DISTINCT '{}', 0.8329771135092507)))); -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) BETWEEN ((- (t0.c0))) AND (t0.c0)) FROM t0, rt0 WHERE ((((((-1921945776)<<(x'9b8d')), LIKELIHOOD(NULL, 0.41367494506129043), (('')>=(NULL))))>(('' COLLATE RTRIM, HEX('{{cb&u4J'), (('-1803112331') IS FALSE))))); -- 3ms;
SELECT DISTINCT CASE WHEN '1038274800' THEN ((t0.c1)&(t0.c1)) WHEN ((((rt0.c2)OR(t0.c1)))OR(t0.c0)) THEN ((t0.c1) NOTNULL) WHEN ((rt0.c1)||(t0.c2)) THEN CAST(rt0.c1 AS BLOB) END, ((((((((rt0.c2)AND('^\')))OR(t0.c0)))OR(-1921945776)))AND(NULL)) COLLATE NOCASE, CASE WHEN CASE rt0.c0  WHEN t0.c2 THEN rt0.c0 END THEN (t0.c1 IN (t0.c1)) WHEN ('-1816583848' IN ()) THEN CAST(rt0.c1 AS REAL) WHEN (((t0.c1))<=((t0.c2))) THEN ((t0.c1) IS TRUE) WHEN (((t0.c2))>((t0.c1))) THEN ((((((((t0.c2)AND(rt0.c1)))AND(t0.c1)))AND(t0.c2)))OR(rt0.c0)) WHEN MAX(rt0.c2) THEN CASE WHEN t0.c2 THEN rt0.c2 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c0 THEN t0.c0 ELSE rt0.c2 END ELSE LOWER(DISTINCT t0.c0) END FROM rt0;SELECT ALL CAST(LIKELIHOOD(DISTINCT rt0.c1, 0.6045383014711452) AS REAL) FROM t0, rt0 WHERE (((CASE WHEN '}K' THEN x'' WHEN NULL THEN '-781023457' WHEN NULL THEN -3.08698291E8 ELSE NULL END)OR(((0.9706642584344203) BETWEEN (0.330204234251139) AND (x''))))); -- 1ms;
SELECT LAST_VALUE(((CASE t0.c2  WHEN t0.c2 THEN t0.c0 END)%(rt0.c0 COLLATE NOCASE))) OVER (), GROUP_CONCAT((NOT (t0.c0))) OVER ( PARTITION BY CASE WHEN ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)) THEN CAST(t0.c2 AS REAL) WHEN (NULL IN (t0.c2)) THEN rt0.c0 WHEN NULL COLLATE RTRIM THEN json_remove(rt0.c2, rt0.c2) END, TRIM(DISTINCT (rt0.c1 IN (t0.c2)), rt0.c0 COLLATE BINARY) ORDER BY ((('-1738095756')) NOT BETWEEN ((t0.c0 COLLATE NOCASE)) AND ((((rt0.c1) NOT BETWEEN (rt0.c1) AND (0.2547638569021178))))) DESC  NULLS LAST), rt0.c2 FROM t0, rt0 NOT INDEXED WHERE (x''); -- 0ms;
SELECT ALL ((((rt0.c1) BETWEEN (x'') AND (rt0.c2)))/(((rt0.c0)>(rt0.c0)))), SUM((~ (t0.c1))) OVER (), (NOT (((((((((t0.c2)OR(rt0.c0)))OR(t0.c0)))AND(rt0.c1)))OR(t0.c2)))) FROM t0, rt0; -- 0ms;
SELECT (('798339472' COLLATE RTRIM) NOT BETWEEN (((rt0.c2) ISNULL)) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c2)))) FROM rt0, t0 GROUP BY ((CAST(t0.c1 AS INTEGER))IS(((((rt0.c2)AND(t0.c1)))OR(t0.c2)))) LIMIT -1890713708 OFFSET -820338391; -- 0ms;
SELECT ALL ((CAST(t0.c2 AS NUMERIC))IS NOT(AVG(rt0.c1))), TIME((NOT (rt0.c1)), LIKELY(rt0.c2), CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 WHEN t0.c0 THEN rt0.c1 ELSE rt0.c1 END), ((((CAST(t0.c1 AS REAL))OR(CAST(t0.c0 AS TEXT))))OR(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c1)))), ((((t0.c1)OR(((x'')+(t0.c0)))))OR(LTRIM(t0.c0, rt0.c0))), COUNT(*) FROM rt0;SELECT DISTINCT ((((rt0.c2)>=(t0.c2)))|((((rt0.c0))=((t0.c2))))), t0.c2, (((rt0.c1)>('0.3982166815145398')) IN ()) FROM rt0, t0 WHERE (NULL) EXCEPT SELECT DISTINCT DATETIME((t0.c0 IN ()), CAST(t0.c2 AS NUMERIC), ((NULL) IS TRUE)), ((((COUNT(*))AND(t0.c0 COLLATE NOCASE)))OR(CAST(rt0.c0 AS REAL))), ((rt0.c2 COLLATE NOCASE)<((+ (t0.c2)))) FROM t0;SELECT ALL ((((t0.c2 COLLATE BINARY)AND(t0.c2)))OR((rt0.c1 IN (t0.c2, t0.c1)))), ((COUNT(rt0.c2)) IS FALSE), CAST(GROUP_CONCAT(t0.c2) AS INTEGER) FROM t0 WHERE ((CASE WHEN -1.664370647E9 THEN 0.31963572965943343 END IN ())) LIMIT -1063727036;SELECT DISTINCT t0.c1 FROM rt0 WHERE ((((('1025000187') NOT BETWEEN (1652282573) AND (NULL)))<<(946765969)));SELECT DISTINCT NULL, CAST(((rt0.c1)>=(t0.c0)) AS TEXT), SUBSTR(CASE '{}'  WHEN t0.c2 THEN t0.c2 ELSE rt0.c1 END, (~ (t0.c1))) FROM t0 WHERE (CAST(((NULL)>(0.6267569172383595)) AS REAL)) LIMIT -1664370647;SELECT ((NULL) ISNULL), ((AVG(t0.c0)) NOT BETWEEN (json(t0.c2)) AND ('')), ((CAST(NULL AS BLOB)) NOTNULL) FROM t0, rt0 WHERE ((((((NULL)) NOT BETWEEN ((x'')) AND ((x'')))) NOT NULL)) ORDER BY ((((t0.c2) NOT NULL))-(((rt0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)))); -- 0ms;
SELECT DISTINCT (((((t0.c0))>=((rt0.c0)))) NOTNULL) FROM t0 WHERE (CAST(CAST(NULL AS REAL) AS INTEGER)) ORDER BY ((((((rt0.c0)-(t0.c0)))OR(CAST(0Xffffffff93b92158 AS INTEGER))))OR(((rt0.c0)-(rt0.c0))))  NULLS FIRST, CASE (('')!=(t0.c0))  WHEN NULLIF(DISTINCT rt0.c1, t0.c2) THEN ((t0.c0) NOT BETWEEN (t0.c2) AND (t0.c1)) END ASC  NULLS FIRST;SELECT DISTINCT (+ (((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))), CASE WHEN 'a潐' THEN t0.c2 ELSE t0.c0 END COLLATE RTRIM, CASE ((rt0.c1)GLOB('-1275722325'))  WHEN ((t0.c2)GLOB(t0.c2)) THEN ((((((((rt0.c2)OR(rt0.c2)))AND(t0.c1)))AND(t0.c0)))OR('')) END FROM rt0, t0; -- 0ms;
SELECT UPPER(t0.c1) FROM rt0 GROUP BY '550059665' LIMIT -1011503058 OFFSET 114286955;SELECT DISTINCT MIN(((t0.c2)=(rt0.c0))) FROM t0 WHERE (CASE 1989695077  WHEN NULL THEN NULL WHEN 0.31963572965943343 THEN NULL WHEN '0.9637867506798788' THEN x'' END COLLATE RTRIM);SELECT (GROUP_CONCAT(t0.c0) IN (JULIANDAY(t0.c0, t0.c1, t0.c2))) FROM rt0, t0 WHERE ((+ (((0.2547638569021178)>=('-1890713708'))))); -- 0ms;
SELECT DISTINCT (((((((((t0.c1)OR(t0.c1)))OR(t0.c0)))AND(rt0.c1)))AND('xL')) IN ()), AVG(((t0.c1)==(t0.c0))), (((rt0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((rt0.c0, t0.c2, rt0.c0)) AND ((t0.c2, t0.c0, t0.c2))) COLLATE BINARY FROM rt0 LIMIT -68914305 OFFSET -586449208;SELECT PERCENT_RANK() OVER () FROM t0; -- 0ms;
SELECT ALL IFNULL(DISTINCT CAST(t0.c0 AS REAL), (((('1128563913')OR(t0.c2)))OR(x''))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CASE MAX(t0.c0)  WHEN CHANGES() THEN '' ELSE ((t0.c1)GLOB(-7.81023457E8)) END, '550059665', COUNT(*) OVER () FROM rt0 WHERE (1.0382748E9) ORDER BY ((rt0.c1) ISNULL) COLLATE BINARY DESC  NULLS FIRST;SELECT DISTINCT ((((((t0.c1)/(0.32776231612689466)))OR(rt0.c1 COLLATE NOCASE)))AND(((t0.c1)=(t0.c2)))) FROM t0, rt0 WHERE (((x'')-(0.4656809040685985 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((t0.c0) NOTNULL) COLLATE BINARY FROM rt0;SELECT DISTINCT CASE WHEN CASE t0.c0  WHEN t0.c2 THEN t0.c1 END THEN ((rt0.c2) BETWEEN (t0.c0) AND (rt0.c0)) WHEN rt0.c1 COLLATE RTRIM THEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c0)) WHEN CAST(NULL AS NUMERIC) THEN t0.c1 COLLATE BINARY END FROM t0, rt0 WHERE (json_extract(((x'2cc18f67')%('104871984')), ((-1020869779) BETWEEN ('-1372907600') AND (1128563913)), (('F<') BETWEEN ('') AND (NULL)), CASE WHEN 0.18060678214615278 THEN 0Xffffffff93b92158 END));SELECT ALL (CAST(-1.803112331E9 AS REAL) IN ()), ((NOT (rt0.c2)) IN ()), ((((rt0.c1)IS(rt0.c1))) NOT NULL) FROM t0, rt0; -- 0ms;
SELECT PERCENT_RANK() OVER (), TOTAL(((t0.c0)/(rt0.c0))) OVER (), ((((t0.c0 COLLATE RTRIM)OR(t0.c2 COLLATE NOCASE)))OR(((((rt0.c2)AND(t0.c1)))OR(NULL)))) FROM rt0, t0 WHERE (CAST('' COLLATE RTRIM AS INTEGER)); -- 1ms;
SELECT TRIM(DISTINCT (t0.c1 IN ())) FROM rt0, t0 WHERE (((((CASE WHEN 0.027174012801994274 THEN '-820338391' ELSE NULL END)AND(((0x19d75f3a)LIKE(0Xffffffffdabc404e)))))OR(NULL COLLATE NOCASE))) GROUP BY NULL; -- 0ms;
SELECT ALL ((t0.c2 COLLATE RTRIM)IS NOT(0.9842945247667262)) FROM t0 WHERE (CASE WHEN UNICODE(NULL) THEN ((0Xffffffffa45e3ace) BETWEEN (0.7746147994676129) AND ('822075905')) ELSE ((-1418461019) ISNULL) END); -- 0ms;
SELECT ALL ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2))) NOT NULL) FROM rt0, t0 WHERE ((((('cH(') ISNULL))*((((((((('}K')OR('Ndz(')))OR(x'')))OR(NULL)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((((CAST(t0.c1 AS NUMERIC))OR(((t0.c0) IS TRUE))))OR('-1664370647')) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((t0.c2 IN ()))IS(CAST(rt0.c0 AS NUMERIC))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(x'' COLLATE RTRIM), (((((t0.c0)>=('''Xusڧ''d'))))>=((0.6590771665118335))), ((((t0.c2)AND(t0.c0)))!=(((t0.c0) NOT BETWEEN (rt0.c1) AND (NULL)))) FROM rt0 WHERE (((('1895378469' IN (1.895378469E9))) NOT NULL));SELECT DISTINCT t0.c2 COLLATE NOCASE FROM rt0 LIMIT -870459171 OFFSET -1011503058;SELECT DISTINCT CASE rt0.c2  WHEN rt0.c0 THEN t0.c1 WHEN 0.9478253002220545 THEN t0.c0 WHEN t0.c0 THEN rt0.c2 WHEN rt0.c0 THEN t0.c0 WHEN t0.c2 THEN t0.c2 ELSE x'' END COLLATE RTRIM, ((t0.c1) NOT NULL) COLLATE RTRIM, (((rt0.c2))<=((rt0.c1))) COLLATE NOCASE, CAST(SQLITE_VERSION() AS BLOB), ((((t0.c1) NOTNULL))&((rt0.c0 IN ()))) FROM rt0 WHERE (TOTAL_CHANGES());SELECT ((((t0.c0)||(t0.c0))) NOT BETWEEN (0.6583670111831985) AND (((((x'')AND(rt0.c2)))OR(0x5007300f)))) FROM rt0 WHERE (((((((x'12f6')AND(NULL)))OR(NULL)))>(((x'2e16') IS FALSE))));SELECT ((rt0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)) COLLATE BINARY FROM t0 GROUP BY SQLITE_VERSION(), t0.c2, (((((rt0.c2, rt0.c2, t0.c2))<=((t0.c0, t0.c1, NULL))))IS(t0.c2)), t0.c2, (x'bd66' IN ());SELECT ALL SUM(((t0.c1) NOT NULL)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c0 END THEN IFNULL(DISTINCT t0.c1, NULL) ELSE t0.c2 END FROM t0, rt0 WHERE (x''); -- 0ms;
SELECT ALL RANK() OVER ( PARTITION BY (((((t0.c1)&(t0.c0)), TRIM(t0.c1), ((t0.c0)GLOB(rt0.c1))))>=(((rt0.c1 IN ()), '-1921945776', ((t0.c0) BETWEEN (rt0.c0) AND (rt0.c0))))), ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) COLLATE BINARY) FROM t0, rt0 WHERE ((((((0.7823414206957724)) BETWEEN (('1038274800')) AND (('Eg䷍'))))GLOB(CAST(NULL AS INTEGER)))); -- 0ms;
SELECT DISTINCT ((rt0.c1)<=(((t0.c2) NOTNULL))) FROM t0;SELECT DISTINCT (((((t0.c0)/(rt0.c1)), ((t0.c0) BETWEEN (t0.c2) AND (x'')), rt0.c1 COLLATE BINARY))>((((t0.c0) ISNULL), (((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))), rt0.c0))) FROM rt0, t0 GROUP BY (~ ((((t0.c0)) NOT BETWEEN ((t0.c0)) AND ((rt0.c0))))); -- 0ms;
SELECT ALL CASE ((rt0.c2) NOT BETWEEN (t0.c2) AND (rt0.c2))  WHEN t0.c2 THEN (('282431186') IS TRUE) WHEN SUM(rt0.c1) THEN AVG(rt0.c1) WHEN TRIM(DISTINCT rt0.c1, NULL) THEN AVG(rt0.c0) WHEN ((rt0.c1)*(rt0.c1)) THEN ((t0.c1)*(rt0.c2)) WHEN (((rt0.c0, '', t0.c0)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((t0.c2, t0.c1, t0.c2))) THEN SUM(rt0.c2) ELSE ((t0.c0)&(rt0.c1)) END FROM rt0, t0 WHERE (((((((((0.7208099293338188)AND(-1020869779)))OR(NULL)))OR(NULL)))AND(CASE 'W4^,'  WHEN '' THEN x'' WHEN NULL THEN 'e~*yZ]j' WHEN NULL THEN x'' END))); -- 1ms;
SELECT DISTINCT (NOT (((t0.c0)OR(t0.c1)))), UPPER(rt0.c2 COLLATE RTRIM), CAST(TOTAL(rt0.c2) AS BLOB) FROM rt0, t0 WHERE ((((- (NULL)))<=(((NULL) ISNULL)))); -- 0ms;
SELECT DISTINCT (((((rt0.c0, rt0.c0, t0.c2)) BETWEEN (('', rt0.c2, t0.c0)) AND ((rt0.c0, t0.c1, rt0.c2))))>((((rt0.c2, t0.c0, rt0.c0, rt0.c0, rt0.c2)) NOT BETWEEN ((rt0.c0, t0.c0, t0.c2, rt0.c0, rt0.c2)) AND ((rt0.c1, rt0.c2, NULL, t0.c1, t0.c0))))) FROM t0 WHERE (CAST(((NULL)=(0.5703234733203691)) AS REAL));SELECT DISTINCT ((CAST(rt0.c1 AS BLOB)) BETWEEN ((((x'', rt0.c0, t0.c1))<((t0.c1, rt0.c0, t0.c0)))) AND (((t0.c1)>=(rt0.c0)))), ((TRIM(rt0.c1, t0.c2))>=((t0.c0 IN ()))), ((((t0.c1)IS(t0.c2)))<=('1895378469')), CHANGES(), SUM(((rt0.c2)-(rt0.c2))) FROM t0 GROUP BY ((CAST(t0.c2 AS INTEGER)) IS TRUE) HAVING ((((COUNT(*))OR((((t0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c0))))))OR(TRIM(DISTINCT t0.c2, t0.c2))) LIMIT -1384159946 OFFSET -1054725914;SELECT ALL ((rt0.c0 IN ()) IN ()), (((((t0.c2))>=((rt0.c2))))>>((((rt0.c2))>((rt0.c1))))), rt0.c1, ((t0.c1)!=(json_patch(rt0.c1, t0.c2))), x'f430' FROM rt0, t0 WHERE (ABS(DISTINCT 0.9842945247667262 COLLATE BINARY)); -- 0ms;
SELECT (~ (TRIM(rt0.c1, rt0.c2))) FROM t0, rt0 WHERE ((((0Xffffffff8f4dff94) NOTNULL) IN ())); -- 0ms;
SELECT rt0.c1, (((t0.c1) IS FALSE) IN ((((rt0.c1))<=((rt0.c0))))), SUM(((t0.c0) NOT NULL)) OVER (), CAST((rt0.c0 IN (rt0.c1, rt0.c2)) AS BLOB), ((((t0.c2) ISNULL))|(t0.c2)) FROM rt0 LIMIT -308698291 OFFSET -1871253320;SELECT DISTINCT AVG('-1942973033') FROM rt0; -- 0ms;
SELECT ((CAST(x'15326c79' AS NUMERIC)) NOT NULL) FROM t0 WHERE (((((0.34848625091962593) NOT NULL))IS(0.4736043738724419 COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT rt0.c1 COLLATE RTRIM FROM t0, rt0 WHERE ((('' IN ()) IN ())); -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS BLOB) FROM rt0 WHERE ((((~ (x'')))>>((('!D') NOT BETWEEN (0.7640729314408351) AND (0.924426212204755))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c0)AND(t0.c2)))AND(NULL)))AND(rt0.c2)))AND(rt0.c1))) ISNULL) FROM rt0, t0 WHERE (((((NULL) ISNULL))&(((x'bef0')-(x''))))) ORDER BY (((t0.c2)) BETWEEN ((rt0.c0)) AND ((t0.c0))) COLLATE RTRIM; -- 1ms;
SELECT (((((t0.c0))<=((t0.c0)))) NOT BETWEEN ((~ (rt0.c1))) AND (((t0.c0)>>(t0.c1)))), ((((rt0.c0)GLOB(rt0.c0)))>(((rt0.c2) IS FALSE))), LIKELY((((rt0.c1))<=((t0.c1)))) FROM rt0 LIMIT 104430255 OFFSET -9223372036854775808;SELECT DISTINCT (((((NOT (rt0.c2)))OR(rt0.c2)))OR(((rt0.c0) BETWEEN (-625196978) AND (rt0.c2)))), CASE (((t0.c0))<=((x'')))  WHEN highlight(t0.c2, t0.c0, t0.c2, t0.c0) THEN ((t0.c2) BETWEEN ('0.532377312182888') AND (rt0.c1)) END, ((((((t0.c1)OR(rt0.c1)))AND(rt0.c2))) ISNULL) FROM rt0, t0 WHERE (((((x'563e')+(0.12934890235847873))) BETWEEN (((x'') NOT NULL)) AND (((0.9150619384735147) ISNULL)))) ORDER BY CASE ((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))  WHEN CAST('2094820325' AS REAL) THEN ((x'96ec') NOT BETWEEN (rt0.c1) AND (t0.c0)) ELSE ((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c2)))OR(t0.c2)))OR(t0.c1)) END ASC; -- 0ms;
SELECT ALL ((((rt0.c0)>(rt0.c0))) NOT NULL) FROM t0, rt0 GROUP BY LOWER(DISTINCT ((rt0.c0)<<(t0.c2))) HAVING TRIM(t0.c2, (- (rt0.c2))) ORDER BY TRIM(((rt0.c1) NOT BETWEEN (t0.c2) AND ('')), (- (t0.c2))), ((((TRIM(t0.c0, rt0.c1))OR(0.06996432813158249)))AND((rt0.c1 IN (rt0.c0, rt0.c2)))) DESC  NULLS FIRST; -- 0ms;
SELECT DISTINCT (NOT ((((rt0.c0))!=((rt0.c1))))) FROM rt0, t0; -- 1ms;
SELECT ALL CAST(((((((((((((t0.c2)AND(t0.c1)))OR(t0.c1)))OR(t0.c1)))OR(t0.c1)))AND(t0.c0)))OR(t0.c0)) AS TEXT) FROM t0 ORDER BY '1959507320'  NULLS FIRST, (((((0.4204171189751902 IN ()))OR(CAST(rt0.c0 AS INTEGER))))AND((- (t0.c1)))) ASC  NULLS LAST, ((((t0.c0)<(t0.c0)))<<(0.7827335984735471)) ASC  NULLS LAST;SELECT ((((rt0.c0)>(t0.c1)))>(((t0.c0) BETWEEN (t0.c0) AND (rt0.c0)))) FROM t0 WHERE ((+ (((NULL)=(0x10d58ed2))))) ORDER BY x'' ASC LIMIT -69865493 OFFSET 870137684;SELECT DISTINCT json_insert(CASE t0.c1  WHEN t0.c1 THEN rt0.c0 END, ((t0.c2)>(0.9991664207799531)), (('')>>(t0.c2))) FROM rt0 WHERE (CAST((((0X42cd202e, -69865493, 1206593490)) NOT BETWEEN (('dn?5\MH%', x'', '-1738095756')) AND ((0x2fc8612, 0.20353693575975706, '\nx'))) AS NUMERIC));SELECT ALL (((((t0.c2, t0.c1, t0.c0)) NOT BETWEEN ((rt0.c0, rt0.c2, t0.c2)) AND ((NULL, rt0.c1, t0.c0))))/(((rt0.c1)-(t0.c2)))) FROM t0 GROUP BY rt0.c0, IFNULL(((((((((rt0.c0)AND(NULL)))AND(rt0.c2)))OR(t0.c2)))OR(rt0.c1)), (- (rt0.c2))), ((CASE rt0.c1  WHEN t0.c1 THEN t0.c2 WHEN rt0.c1 THEN '{{cb&u4J' WHEN t0.c0 THEN rt0.c1 END)<(CAST(t0.c0 AS INTEGER)));SELECT DISTINCT NTH_VALUE((- (CAST(t0.c2 AS TEXT))), (((((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))OR((((t0.c1))<>(('1206593490'))))))OR(CAST(t0.c0 AS NUMERIC)))) OVER () FROM t0; -- 0ms;
SELECT ALL ((((((((rt0.c1)OR(t0.c1)))AND(rt0.c0)))AND(rt0.c1 COLLATE RTRIM)))AND(((((x'')AND(rt0.c2)))OR(t0.c2)))) FROM t0;SELECT DISTINCT TOTAL(t0.c1) FROM t0 WHERE ((~ (((((((((0.3208550317711324)AND(0x29a00d64)))OR(NULL)))OR(0.8299981970280459)))OR(x''))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(CAST((rt0.c1 IN (t0.c0)) AS INTEGER)) OVER () FROM t0 NOT INDEXED, rt0 WHERE ((((((((((((((((0.058764036267078934)) NOT BETWEEN ((NULL)) AND (('K-'))))OR(((-887630120)+(NULL)))))AND('')))AND(((NULL) BETWEEN (NULL) AND (x'26f7')))))AND((((0.058764036267078934, '(', '-1816583848'))>((NULL, '', '-1738095756'))))))OR(((x'') ISNULL))))OR(IFNULL(DISTINCT -625196978, 0.2844974994412798)))); -- 0ms;
SELECT DISTINCT ((((NULL IN ())))<((((t0.c2) BETWEEN (t0.c0) AND (t0.c2))))) FROM rt0 LIMIT -1570196980;SELECT DISTINCT ((((t0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (CAST(t0.c1 AS NUMERIC))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((NULL COLLATE NOCASE))<((0.24616054254944741))) FROM t0; -- 1ms;
SELECT DISTINCT AVG(((t0.c1) IS FALSE)), ((((rt0.c0 COLLATE NOCASE)OR(((rt0.c0)<>(rt0.c2)))))AND(((NULL)>>(rt0.c1)))), (NOT (NULL)) FROM rt0, t0 WHERE ('') LIMIT 98984287; -- 0ms;
SELECT DISTINCT (((((rt0.c0)>>(rt0.c1))))>=((t0.c1 COLLATE BINARY))), ((((((t0.c1)OR(t0.c0)))AND(rt0.c0)))>>(((rt0.c1)>(rt0.c2)))), ((((rt0.c0)/(t0.c0))) NOTNULL) FROM t0;SELECT DISTINCT (~ ((t0.c2 IN ()))) FROM t0 WHERE (0.7640729314408351); -- 0ms;
SELECT ALL (((x'', ((rt0.c2) BETWEEN ('80023715') AND (t0.c1)), t0.c0))>((COUNT(t0.c1), x'', (((rt0.c2)) BETWEEN ((t0.c0)) AND ((t0.c2)))))), 0.6033874393782093, QUOTE(((rt0.c1)*(t0.c1))) FROM t0;SELECT DISTINCT (((((NULL)) BETWEEN ((0xffffffff9076f0b8)) AND ((rt0.c2)))) IS TRUE) FROM rt0 WHERE (CASE ((0.9150619384735147) BETWEEN (0.20353693575975706) AND ('^\'))  WHEN CASE 'm9fx'  WHEN 0.777661672643513 THEN NULL END THEN CAST(x'' AS NUMERIC) END); -- 0ms;
SELECT DISTINCT rt0.c0 FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) IS FALSE), (COUNT(*) IN ()), ((((t0.c0)>(t0.c0)))+(((rt0.c0) IS FALSE))) FROM rt0, t0; -- 0ms;
SELECT ALL (((t0.c2)>=(rt0.c0)) IN (CASE x''  WHEN x'e8b0' THEN rt0.c1 END, rt0.c2)) FROM rt0, t0 ORDER BY ((t0.c1) IS FALSE), ((((t0.c1)>>(rt0.c2)))<=(CAST(t0.c2 AS INTEGER))) ASC, NULL  NULLS FIRST LIMIT 1120739374; -- 0ms;
SELECT GROUP_CONCAT(rt0.c2) COLLATE NOCASE COLLATE BINARY FROM t0, rt0 WHERE (((CAST('\&|2j|}U' AS TEXT)) IS TRUE)); -- 0ms;
SELECT DISTINCT (((((~ (rt0.c2)))AND('1%')))OR((NOT (rt0.c2)))) FROM t0;SELECT DISTINCT ((((((t0.c0)OR(rt0.c2)))AND(rt0.c0))) NOTNULL), t0.c1, CASE AVG(t0.c1)  WHEN IFNULL(rt0.c1, rt0.c2) THEN t0.c2 COLLATE RTRIM END FROM rt0, t0; -- 0ms;
SELECT DISTINCT 0.1172070233929342 FROM t0, rt0 ORDER BY (((((t0.c1))>=((t0.c2)))) BETWEEN (((rt0.c1)|(t0.c2))) AND (((rt0.c1)<(t0.c1))))  NULLS FIRST, json_object((((t0.c1))<((rt0.c2))), rt0.c0); -- 0ms;
SELECT ALL (- ((~ (t0.c0)))), COUNT(CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 ELSE rt0.c2 END) FILTER(WHERE CAST(0.1120373604105167 AS REAL)) OVER (), ((((t0.c0) BETWEEN (t0.c2) AND (t0.c2))) NOT BETWEEN (CAST(t0.c1 AS INTEGER)) AND (rt0.c2)) FROM t0, rt0 WHERE (((CAST('' AS REAL)) IS FALSE)); -- 1ms;
SELECT ALL CASE CASE WHEN rt0.c2 THEN '&y' END  WHEN ((rt0.c2)>>(rt0.c2)) THEN ((t0.c2) IS TRUE) WHEN CASE WHEN t0.c0 THEN rt0.c2 END THEN (rt0.c0 IN ()) WHEN (((rt0.c2, t0.c0, t0.c0)) NOT BETWEEN ((rt0.c0, t0.c1, t0.c1)) AND ((t0.c0, '-1788089848', t0.c2))) THEN t0.c1 ELSE t0.c2 COLLATE BINARY END, ((((((((((rt0.c2)AND('-1017476286')))AND(rt0.c2)))AND(t0.c2)))AND(rt0.c1)))<(((t0.c0) NOTNULL))), (~ ((((rt0.c1))=((t0.c1))))) FROM rt0, t0 WHERE ((((+ (NULL))) BETWEEN ((NOT ('-1942973033'))) AND ((((0.9784470492112711)) NOT BETWEEN ((0.02272488861313593)) AND (('')))))); -- 0ms;
SELECT DISTINCT IFNULL(DISTINCT (~ (rt0.c2)), ((((t0.c0)AND(rt0.c1)))OR(rt0.c2))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT AVG((((rt0.c2))>((rt0.c0))) COLLATE BINARY) OVER (), (((((t0.c0)%(x'9012'))))<((t0.c1 COLLATE RTRIM))), COUNT(((0.35059070192720754)||(x''))) FROM rt0, t0 WHERE ((NOT (((0.631984982731328) NOT NULL)))); -- 0ms;
SELECT ((((0.4656809040685985)AND(((((((((rt0.c2)AND(t0.c1)))OR(t0.c2)))AND(t0.c1)))OR(t0.c0)))))OR(CASE WHEN t0.c0 THEN t0.c0 END)) FROM rt0, t0; -- 1ms;
SELECT DISTINCT (NOT (t0.c1)) COLLATE BINARY FROM t0; -- 0ms;
SELECT ((rt0.c0 COLLATE NOCASE) NOTNULL), t0.c2, CAST((((t0.c0))<((NULL))) AS INTEGER) FROM rt0, t0 WHERE (((((x'') IS TRUE))+(0.330204234251139 COLLATE RTRIM))); -- 0ms;
SELECT DISTINCT (NOT (((((rt0.c0)OR(x'')))OR(t0.c0)))), 0.00918415228693703, ((((t0.c1) BETWEEN (rt0.c0) AND (t0.c0)))/((((rt0.c0))>((t0.c1))))), NTILE('0.1172070233929342') OVER ( PARTITION BY ((((t0.c2) NOT NULL)) NOT NULL), CAST(((((t0.c0)OR(t0.c1)))OR(rt0.c2)) AS TEXT)), ((690839406) IS TRUE) FROM rt0, t0 WHERE ((((+ ('698355044'))) NOT BETWEEN ((('') BETWEEN (x'555b529a') AND (0X4e79e5f7))) AND ((((NULL, 0.9195533191792856, '-1816583848'))<=(('', NULL, NULL)))))); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c0 THEN t0.c2 ELSE rt0.c2 END) NOT BETWEEN (MAX(t0.c1)) AND ((((t0.c1))>=((t0.c0))))), CAST(COUNT(*) AS TEXT), (+ ((((t0.c1)) BETWEEN ((rt0.c2)) AND ((t0.c0))))) FROM t0 WHERE ((((-1565752049)) NOT BETWEEN ((((0.23510239942266342)IS NOT(x'')))) AND (((- ('-1426436122'))))));SELECT (- (CAST(t0.c2 AS TEXT))), rt0.c2, SUM(CAST(rt0.c0 AS REAL)) FROM rt0 WHERE (((CASE WHEN 0.7126261956695708 THEN NULL WHEN '' THEN 'Df' WHEN '-415418838' THEN NULL END)+(((0xffffffff846196de) NOT NULL))));SELECT DISTINCT ((((rt0.c2)GLOB(rt0.c2))) NOT NULL) FROM t0, rt0 ORDER BY ((((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c0))) NOT BETWEEN (((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) AND (QUOTE(rt0.c2))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((t0.c2 COLLATE BINARY)>>(((t0.c2)OR(t0.c2)))) FROM t0, rt0 WHERE ((+ (0xffffffffccf1eabf))); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS BLOB)) ISNULL) FROM rt0 WHERE (TRIM(DISTINCT 0.7926587852367306, 0xffffffffe3e5c4d2) COLLATE RTRIM) GROUP BY CAST(((t0.c2) IS FALSE) AS TEXT), (((('-1e500')IS NOT(rt0.c0))) BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c0) AND (t0.c1))) AND (((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c1)))), ((TIME(t0.c2, rt0.c2, rt0.c2, NULL, t0.c1)) NOT NULL);SELECT DISTINCT FIRST_VALUE((((rt0.c2)) NOT BETWEEN ((NULL)) AND ((t0.c0)))) OVER () FROM t0, rt0 WHERE (((((('0'))>=(('-471481134')))) NOT BETWEEN ((('-471481134')&(-1275722325))) AND (CAST(-1.063727036E9 AS INTEGER)))) GROUP BY t0.c0 HAVING (((t0.c0)*('')) IN ()); -- 0ms;
SELECT DISTINCT CAST((NOT (rt0.c2)) AS TEXT) FROM t0 WHERE (((((x'')>(x''))) NOTNULL));SELECT ALL rt0.c1 FROM t0 WHERE ((+ (CASE 'aJ+*¥j'  WHEN x'' THEN NULL ELSE 'Fvwjr' END)));SELECT DISTINCT (((rt0.c1)IS NOT(rt0.c0)) IN ()), AVG(CAST(rt0.c0 AS INTEGER)), (~ ((('282431186')LIKE(x'')))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (((((t0.c2)) BETWEEN ((t0.c2)) AND ((rt0.c0))))>(t0.c1 COLLATE BINARY)) FROM t0, rt0 WHERE (json_array_length(x'088c', -283981963) COLLATE NOCASE);SELECT ALL (((CAST(t0.c2 AS NUMERIC)))<=((CAST(t0.c0 AS REAL)))), (((((t0.c2)) NOT BETWEEN ((x'7e60')) AND ((t0.c2)))) BETWEEN (((rt0.c2)|(t0.c0))) AND (((t0.c2)>=(t0.c1)))), t0.c2, (('1765013780')<(((rt0.c1)AND(rt0.c1)))), t0.c1 FROM t0, rt0 WHERE (CASE ((0.5229814413556739)OR(0))  WHEN CASE NULL  WHEN '' THEN x'70e5' END THEN (+ (x'')) END); -- 0ms;
SELECT ALL ((((((t0.c0)OR(t0.c2)))AND(t0.c1))) IS TRUE) FROM t0, rt0; -- 0ms;
SELECT 433545018, IFNULL(((t0.c2) NOT NULL), COUNT(rt0.c1)), ((((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c2)))>(((((t0.c0)OR(t0.c1)))OR(rt0.c1)))) FROM rt0 WHERE (((((((0.6850231307539946)|(NULL)))AND('-Infinity~Y')))AND(CAST('' AS INTEGER)))) LIMIT 2086946906 OFFSET -517375441;SELECT ALL ((rt0.c0)>(t0.c1)) COLLATE BINARY FROM t0, rt0 WHERE (((TRIM(DISTINCT '虄t\n{\r?', '\rW')) IS FALSE)); -- 0ms;
SELECT DISTINCT rt0.c1, ((((UNICODE(t0.c0))AND(((rt0.c0)>=(t0.c2)))))OR((((t0.c0))>=((rt0.c0))))), ((COUNT(rt0.c1))AND('-12868208')) FROM t0, rt0; -- 0ms;
SELECT ALL ((MIN(rt0.c1)) NOTNULL) FROM rt0; -- 0ms;
SELECT ALL x'' FROM rt0 WHERE (0xffffffffabda4ce0) ORDER BY (((((rt0.c0, t0.c0, t0.c2))==((t0.c1, rt0.c1, 0.02272488861313593)))) NOTNULL) ASC  NULLS LAST LIMIT -415418838;SELECT (~ (((t0.c2) BETWEEN (t0.c1) AND (t0.c2)))), SQLITE_COMPILEOPTION_GET((((rt0.c2, x'', t0.c1)) BETWEEN ((rt0.c0, t0.c0, t0.c1)) AND ((rt0.c2, rt0.c0, t0.c0)))), (((((t0.c0 IN ()))OR((((x'', NULL, t0.c1)) NOT BETWEEN (('451530470', 0Xfffffffff94f654b, rt0.c0)) AND ((t0.c2, t0.c1, t0.c2))))))OR(((('-517375441'))==((x''))))) FROM t0, rt0 WHERE ((NOT (((NULL) BETWEEN ('l!Goq]1') AND (0Xffffffffcb24eb7f))))); -- 0ms;
SELECT DISTINCT ((((((t0.c0)AND(rt0.c0)))AND(t0.c0))) ISNULL), ((COUNT(*))%(MAX(rt0.c2))), (((t0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c0) AND (-1.063727036E9)))) AND ((COUNT(t0.c1)))) FROM t0 WHERE (((((((x'')<=('-837439380')))AND((('-1738095756')>=(0.06996432813158249)))))AND(((NULL)>('-1113165407')))));SELECT DISTINCT (NOT (((rt0.c1) IS FALSE))) FROM t0 WHERE ((NOT ((('-1112099432')||(''))))) GROUP BY ((rt0.c2) BETWEEN (t0.c0) AND (t0.c1)) COLLATE NOCASE, ((t0.c1) NOT NULL), ((json_type(t0.c0)) ISNULL) HAVING (ROUND(rt0.c0, rt0.c2) IN ());SELECT rt0.c0 FROM t0 WHERE ((((0.8404209380621639))>=(((((0.558491471538741, '-1565752049', 0Xffffffff89cd7b7c)) NOT BETWEEN ((9.8984287E7, x'', 'K-')) AND ((0x27263557, 0.2919691753074831, NULL)))))));SELECT DISTINCT LAG(json_array_length(t0.c1 COLLATE BINARY, json_array_length(NULL, rt0.c2)), (((rt0.c2, t0.c2, rt0.c1)) NOT BETWEEN ((((t0.c1)<=(t0.c2)), CASE t0.c2  WHEN rt0.c0 THEN rt0.c2 WHEN t0.c0 THEN 0.4674022674392073 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c2 END, TRIM(rt0.c2, rt0.c2))) AND ((((rt0.c1) NOTNULL), ((((((((t0.c2)OR(t0.c1)))OR(t0.c2)))OR(t0.c0)))AND(rt0.c1)), ((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c2))))), (((- (rt0.c1)))>(((('-1321513299', rt0.c0, t0.c1))!=((t0.c1, rt0.c1, rt0.c2)))))) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN ()) AS NUMERIC) FROM t0 ORDER BY (((t0.c1) NOT BETWEEN (t0.c2) AND ('-799093593')) IN ())  NULLS LAST; -- 0ms;
SELECT ALL COUNT(*) FROM rt0, t0; -- 0ms;
SELECT DISTINCT LAG(((((- (t0.c1))))<>((((rt0.c2)!=(NULL))))), ((((((t0.c0) ISNULL))OR((((rt0.c2, rt0.c0, t0.c1))>((t0.c2, t0.c0, NULL))))))OR((((t0.c1)) BETWEEN ((t0.c2)) AND ((rt0.c2))))), (t0.c2 IN (((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)), (('\rw') IS TRUE)))) OVER () FROM rt0, t0 LIMIT 922772431 OFFSET -1321513299; -- 0ms;
SELECT DISTINCT '' FROM rt0 WHERE (((((x'')IS NOT(x'39be'))) IS FALSE)); -- 0ms;
SELECT DISTINCT (('B*qQ[*M') BETWEEN (((rt0.c1) NOT BETWEEN (t0.c2) AND (rt0.c1))) AND ((rt0.c0 IN ()))) FROM rt0 GROUP BY ((((((((((rt0.c0) NOTNULL))OR(((0.26270901419250237)GLOB(t0.c1)))))AND(((((t0.c0)OR(t0.c2)))AND(t0.c2)))))OR(UPPER(t0.c2))))AND(rt0.c0 COLLATE NOCASE)), ((t0.c0 COLLATE NOCASE)<=(((t0.c0)LIKE(rt0.c0)))), '' LIMIT 114286955 OFFSET -320710465;SELECT DISTINCT LIKE((+ (t0.c1)), (~ (rt0.c2))), (((t0.c2, t0.c2, t0.c1)) BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((t0.c0, t0.c1, t0.c2))) COLLATE BINARY, CAST(t0.c0 AS TEXT) FROM t0 ORDER BY CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c0 END COLLATE RTRIM DESC  NULLS LAST LIMIT -486275580;SELECT DISTINCT (NOT (((rt0.c0) NOT BETWEEN (t0.c0) AND (rt0.c1)))), ((((((((t0.c2)OR(0.40747226147258886)))AND(t0.c0)))OR((('') NOT BETWEEN (t0.c1) AND (0.6272130660964471)))))OR(NULL)), TIME(((t0.c0)GLOB(t0.c2)), (- (rt0.c2)), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)), CAST(t0.c2 AS TEXT), ((((((((((((rt0.c1)AND(t0.c2)))AND(t0.c1)))AND(t0.c1)))AND(t0.c1)))OR(rt0.c1)))AND(t0.c0))), (~ ((- (t0.c0)))), ((TYPEOF(DISTINCT t0.c1)) NOT BETWEEN (((t0.c1) IS FALSE)) AND ((((rt0.c1, t0.c2, rt0.c2)) NOT BETWEEN ((t0.c2, rt0.c1, rt0.c1)) AND ((rt0.c2, t0.c2, rt0.c2))))) FROM rt0, t0; -- 0ms;
SELECT ALL json_array_length((rt0.c0 IN ()), ((rt0.c2)%(t0.c0))), CAST(((((((((t0.c2)OR(t0.c1)))AND(0.617509134613224)))AND(t0.c0)))AND(rt0.c0)) AS NUMERIC), CASE json_remove(rt0.c1, NULL)  WHEN (((t0.c0))!=((t0.c0))) THEN (rt0.c0 IN (x'', rt0.c2)) WHEN t0.c1 THEN '-2032974028' WHEN TRIM('', rt0.c2) THEN t0.c2 COLLATE NOCASE END FROM t0 ORDER BY (~ ((t0.c0 IN ())));SELECT ALL (((CAST(rt0.c2 AS NUMERIC)))==((CAST(rt0.c2 AS TEXT)))) FROM rt0, t0 WHERE (TRIM((('[r') NOTNULL))); -- 0ms;
SELECT ALL AVG(CASE t0.c1  WHEN t0.c2 THEN rt0.c0 ELSE t0.c0 END) FROM t0, rt0 GROUP BY (((t0.c1)) NOT BETWEEN ((((rt0.c0)==(t0.c1)))) AND ((t0.c0 COLLATE BINARY))), (rt0.c0 IN (rt0.c0 COLLATE BINARY, ((t0.c1)LIKE(rt0.c1)))), (((NOT (rt0.c1)))<=(CAST(rt0.c2 AS TEXT))) HAVING (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c1)) IN (((rt0.c0)>>(t0.c0)))); -- 0ms;
SELECT DISTINCT '-1054725914' FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((SUM(rt0.c2)) ISNULL) FROM t0, rt0 WHERE ((((('1e500')IS('aj+*¥j')))|(('' IN ())))); -- 0ms;
SELECT TOTAL(((t0.c1) IS FALSE)) OVER ( ORDER BY (+ (NULLIF(0.6063618794415012, rt0.c2))) ASC) FROM t0, rt0 WHERE (((((0.3499338941571406) NOT NULL))IS(CAST('-105325149' AS NUMERIC)))); -- 0ms;
SELECT ((NULL)-(((t0.c2) NOT BETWEEN (t0.c1) AND (rt0.c2)))) FROM t0, rt0 WHERE ((('Xrh*2' COLLATE RTRIM)<=(((NULL) BETWEEN (-2084517182) AND (NULL))))); -- 0ms;
SELECT DISTINCT (((((rt0.c2))=((0.48724267725113846))))%(STRFTIME(t0.c0, t0.c0, t0.c0))) FROM rt0, t0 ORDER BY INSTR(rt0.c0, t0.c1) COLLATE BINARY COLLATE BINARY, ('-2015559539' IN ()) COLLATE BINARY DESC; -- 0ms;
SELECT DISTINCT CAST((rt0.c2 IN (t0.c0)) AS INTEGER) FROM rt0 WHERE (CAST(NULL COLLATE RTRIM AS TEXT));SELECT ALL TOTAL(LIKELIHOOD(DISTINCT t0.c2, 0.644307989531925)) FROM rt0, t0 WHERE (NULL); -- 0ms;
SELECT DISTINCT AVG(COUNT(*)), ((0.9706642584344203)==(((t0.c0)|(rt0.c1)))), rt0.c2 FROM rt0 WHERE (((((0.6799098514939954)<<('-625196978')))+((('2064866202') NOT BETWEEN (0.27229492493715357) AND (NULL)))));SELECT ((((((((rt0.c1 COLLATE BINARY)OR(((rt0.c2) BETWEEN (rt0.c1) AND (t0.c1)))))AND(((((t0.c2)AND(t0.c2)))OR(t0.c1)))))OR(SUM(t0.c2))))OR((+ (rt0.c1)))) FROM t0, rt0; -- 0ms;
SELECT ALL (+ (CAST(t0.c1 AS NUMERIC))) FROM rt0 WHERE (((CAST(x'' AS TEXT)) IS TRUE));SELECT DISTINCT (- (t0.c1 COLLATE NOCASE)) FROM t0, rt0 LIMIT 1850954010 OFFSET -1153763477; -- 1ms;
SELECT (((t0.c2)OR(x'')) IN (rt0.c1 COLLATE BINARY)), (NOT (CASE WHEN NULL THEN rt0.c2 END)), ((CASE WHEN rt0.c0 THEN t0.c1 END) IS TRUE) FROM rt0 LIMIT 1128807260 OFFSET -1949680135;SELECT DISTINCT ((t0.c1 COLLATE RTRIM) BETWEEN ((t0.c2 IN ())) AND (t0.c0)) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c1 END) BETWEEN ((0x11ffb94d IN ())) AND (((t0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))), GROUP_CONCAT(NULL) OVER (), ((NULLIF(t0.c1, rt0.c0)) NOT NULL) FROM t0, rt0; -- 1ms;
SELECT DISTINCT CASE CAST(rt0.c2 AS INTEGER)  WHEN ((t0.c0)IS NOT(t0.c2)) THEN INSTR(rt0.c2, t0.c1) ELSE ((rt0.c2)-(t0.c1)) END FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((1.541361101E9, t0.c0, rt0.c2))>((t0.c0, rt0.c0, t0.c2))))<<(NULLIF(rt0.c0, rt0.c0))), t0.c1, COUNT(x'') FROM rt0, t0 WHERE ((((0.32776231612689466)) NOT BETWEEN ((((x'')==('虄t\n{\r?')))) AND (('')))) ORDER BY (((rt0.c2) IS FALSE) IN ()) DESC; -- 0ms;
SELECT ALL (~ (CAST(t0.c2 AS BLOB))) FROM rt0;SELECT DISTINCT ((CASE WHEN rt0.c0 THEN t0.c0 ELSE t0.c0 END) BETWEEN ((rt0.c0 IN ())) AND (x'')) FROM t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(((t0.c2) NOT NULL)) FROM rt0, t0 ORDER BY (((rt0.c0 COLLATE RTRIM, ((((((((t0.c0)OR(t0.c2)))OR(rt0.c1)))OR(t0.c2)))AND(t0.c0)), ((t0.c0)IS(t0.c1))))<=((((t0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c1)), ((((rt0.c0)OR(t0.c1)))OR(rt0.c0)), (~ (t0.c2))))) DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c2)>>(rt0.c2))) NOT NULL) FROM t0, rt0 LIMIT -1937684495 OFFSET 647454463; -- 0ms;
SELECT DISTINCT TOTAL('g5') FROM t0; -- 0ms;
SELECT ALL ROW_NUMBER() OVER (), (((((t0.c0)) BETWEEN ((t0.c2)) AND ((t0.c1))))>(CAST(rt0.c0 AS REAL))), (CASE WHEN t0.c2 THEN '-1813028622' ELSE t0.c0 END IN ()) FROM rt0, t0; -- 0ms;
SELECT 0.3797548500301141 COLLATE RTRIM FROM t0; -- 0ms;
SELECT DISTINCT TRIM(AVG(rt0.c2)) FROM t0 WHERE ((((NULL) NOTNULL) IN ())) GROUP BY ((CASE WHEN rt0.c0 THEN t0.c1 ELSE t0.c1 END)GLOB(ABS(rt0.c2)));SELECT 'r?Tt' FROM t0 WHERE (CASE WHEN ((NULL) BETWEEN (x'') AND (0.43213845577054266)) THEN (+ (855993428)) END) GROUP BY NULL ORDER BY CAST(((rt0.c2)*(x'')) AS BLOB), ABS(((rt0.c0) IS FALSE)) DESC;SELECT DISTINCT (+ (((t0.c1)!=(t0.c2)))) FROM t0; -- 0ms;
SELECT LEAD((~ (((rt0.c1)<(rt0.c2)))), (((rt0.c2 IN ())) NOT BETWEEN (((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c1)))OR(rt0.c1)))AND(rt0.c0))) AND ((((0Xfffffffff290a388, rt0.c0, rt0.c0))>=((rt0.c2, rt0.c2, rt0.c1))))), rt0.c0) OVER () FROM rt0 WHERE (((x'' COLLATE RTRIM) IS TRUE)); -- 0ms;
SELECT ALL ((rt0.c2)<=(((t0.c0)<=(rt0.c0)))) FROM rt0 WHERE (((('0.9478253002220545')AND(x'205d')) IN ('-1426436122')));SELECT ALL ((((x'7c65')OR(((((t0.c2)OR(rt0.c2)))OR(rt0.c2)))))AND(((rt0.c2) BETWEEN (t0.c0) AND (rt0.c2)))) FROM rt0 FULL OUTER JOIN t0 ON t0.c1 COLLATE RTRIM WHERE (320163076); -- 0ms;
SELECT DISTINCT ((json_quote(rt0.c2)) NOT BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 END) AND ((('-586950725') BETWEEN (rt0.c2) AND (t0.c2)))), ((((t0.c1)AND(t0.c0))) NOTNULL), ((CAST(t0.c2 AS BLOB))>(((rt0.c0)*(rt0.c1)))) FROM rt0, t0 WHERE (x'') ORDER BY (((((((((((((((((~ (t0.c2)))OR(('_' IN (t0.c0)))))OR(CAST(rt0.c0 AS BLOB))))AND(rt0.c0 COLLATE RTRIM)))OR((NOT (t0.c0)))))AND(((rt0.c1)>>(rt0.c0)))))AND(((((((((rt0.c0)OR(t0.c1)))OR(rt0.c1)))AND(t0.c1)))OR(t0.c0)))))OR(((((451530470)AND(451126656)))AND(rt0.c0)))))OR((((t0.c2))!=((rt0.c2)))))  NULLS LAST; -- 1ms;
SELECT ALL ((((x'')AND(t0.c2)))OR(t0.c1)) COLLATE RTRIM FROM rt0 WHERE ('') GROUP BY ((t0.c1 IN ()) IN ()), -1813028622, (((((NOT (rt0.c0)))OR(((t0.c0) NOT NULL))))AND(((t0.c0)>(-246103362))));SELECT JULIANDAY(((rt0.c0) NOT BETWEEN (t0.c2) AND (t0.c2)), ((t0.c2)||(0.9965512612576317)), ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1))) FROM t0;SELECT ALL (((((((((rt0.c2)AND(t0.c2)))OR(t0.c2)))OR('b')))OR(rt0.c0)) IN ()), CAST((- (rt0.c1)) AS REAL), (((((rt0.c0)) BETWEEN ((rt0.c1)) AND ((t0.c1))))=(((t0.c0)<(t0.c0)))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) NOT BETWEEN ((x'')) AND ((((((((((rt0.c0)OR(rt0.c0)))OR(t0.c1)))AND(t0.c1)))AND(x'6ad6'))))) FROM t0;SELECT DISTINCT ((((rt0.c2)<<(rt0.c2))) IS FALSE) FROM rt0 GROUP BY ((rt0.c2) IS TRUE) HAVING (((('7墿') NOT NULL))LIKE((t0.c2 IN (t0.c0, '\r&7')))) ORDER BY ((((t0.c1) NOT BETWEEN (rt0.c1) AND (t0.c2)))AND(((t0.c0) NOTNULL))), GLOB(((rt0.c2)-(t0.c2)), t0.c2) ASC, (((((t0.c2))=((t0.c0))))!=(rt0.c0 COLLATE BINARY));SELECT 0.9577296020236293, ((((rt0.c1)%(rt0.c2)))GLOB(((t0.c0)<=(x'e026')))), (((t0.c2, rt0.c2, rt0.c2)) NOT BETWEEN ((ABS(DISTINCT rt0.c1), NULL, CAST(rt0.c0 AS NUMERIC))) AND ((CAST(t0.c0 AS INTEGER), CAST(rt0.c2 AS TEXT), ((t0.c1) NOT NULL)))) FROM rt0, t0; -- 0ms;
SELECT ALL ((((t0.c2)AND(CAST(t0.c0 AS REAL))))OR(CAST(rt0.c2 AS REAL))) FROM rt0 WHERE (CASE x'' COLLATE NOCASE  WHEN ((('虄T\n{\r?')) BETWEEN ((' 혆')) AND ((NULL))) THEN '' COLLATE RTRIM ELSE NULL COLLATE BINARY END) LIMIT 1959507320;SELECT DISTINCT ((LIKELIHOOD(DISTINCT 0.5903974665740791, 0.04769585505523111))/(CASE WHEN t0.c1 THEN rt0.c2 END)), (((NOT (rt0.c0))) IS FALSE), ((CASE WHEN rt0.c1 THEN t0.c2 ELSE '-91958017' END) NOT BETWEEN (((t0.c0)-('-1816583848'))) AND (UNLIKELY(rt0.c2))) FROM rt0 LIMIT 822075905 OFFSET -1113165407;SELECT DISTINCT CAST(rt0.c0 COLLATE BINARY AS NUMERIC) FROM t0;SELECT ALL t0.c2 FROM rt0, t0 WHERE (CASE WHEN (x'' IN (x'cb70', NULL)) THEN ('-1792115147' IN ()) ELSE (((('1153799632')OR('')))OR(-3.08698291E8)) END) ORDER BY (((t0.c2)*(t0.c2)) IN (((rt0.c2) IS TRUE))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((t0.c0 COLLATE NOCASE) ISNULL), (((((rt0.c0, NULL, rt0.c1)) NOT BETWEEN ((t0.c0, t0.c2, rt0.c1)) AND ((rt0.c0, rt0.c1, t0.c0))))/(((rt0.c1) NOT BETWEEN (t0.c1) AND (0.1535422093771206)))), (((((rt0.c0 IN (rt0.c1, t0.c1)))OR(((t0.c2)IS NOT(rt0.c2)))))AND(((((rt0.c1)OR(t0.c0)))AND(0x40d831d2)))) FROM rt0;SELECT ALL ((((((((COUNT(*))OR(CASE WHEN rt0.c1 THEN t0.c1 END)))OR((('3y')<(rt0.c2)))))AND(((t0.c2)IS(0.27688743406393057)))))AND(JULIANDAY(t0.c0, t0.c1, t0.c0))) FROM t0, rt0 WHERE (json_array_length(((('-1121471005'))>(('-471481134'))))); -- 0ms;
SELECT ALL t0.c1 FROM t0; -- 0ms;
SELECT ((rt0.c2)+(t0.c2)) COLLATE NOCASE, ((CAST(t0.c2 AS TEXT))>(ABS(rt0.c2))), (((('wg')>=(rt0.c1)))>>((t0.c2 IN (rt0.c2)))) FROM t0;SELECT ALL ((((((rt0.c0)AND(rt0.c2)))AND(t0.c2)))<(CASE WHEN '\nx' THEN t0.c2 END)) FROM rt0 WHERE (((('p''8A*埓94F' IN (28712979))) NOT NULL));SELECT ((((rt0.c1)AND(CASE rt0.c0  WHEN 'K' THEN '' END)))AND(((t0.c0) BETWEEN (rt0.c1) AND (t0.c0)))) FROM t0, rt0 WHERE ((((('1570047655') ISNULL)) NOT BETWEEN ((((((((('If>6\r')AND('g')))AND(0.40747226147258886)))OR(NULL)))AND(x'42a8'))) AND ((x'' IN (0.006545663613549135))))); -- 0ms;
SELECT ALL rt0.c1 FROM t0, rt0 NOT INDEXED WHERE (CAST((('80023715') NOT BETWEEN ('_') AND ('1025000187')) AS NUMERIC)); -- 0ms;
SELECT ALL CAST((t0.c2 IN ()) AS TEXT) FROM t0 WHERE ((((x'e15e')) NOT BETWEEN (((('-1075107694') NOTNULL))) AND ((NULL COLLATE BINARY)))) GROUP BY TYPEOF(DISTINCT rt0.c2) COLLATE BINARY, (((t0.c1)) NOT BETWEEN (('spm,l')) AND (((rt0.c0 IN ())))), ((highlight(t0.c2, rt0.c1, t0.c0, t0.c0))IS((((rt0.c0, rt0.c0, rt0.c1, t0.c0, rt0.c1)) NOT BETWEEN ((t0.c1, t0.c2, rt0.c1, 0.7264736364991958, t0.c2)) AND ((rt0.c2, rt0.c0, t0.c1, rt0.c2, t0.c0)))));SELECT (~ (CASE WHEN t0.c0 THEN t0.c0 ELSE rt0.c0 END)), UPPER((NOT (t0.c2))), CASE ']*5qd%'  WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c1)|(0.9784470492112711)) END FROM t0;SELECT rt0.c2 FROM rt0 WHERE (((CASE WHEN 0.5635209961357618 THEN '-1903366315' ELSE x'c636' END) NOT BETWEEN (((NULL) BETWEEN (NULL) AND (NULL))) AND (((2114538344)AND('1038274800'))))); -- 1ms;
SELECT '0.06996432813158249' FROM rt0, t0 WHERE (CAST(('-1313314640' IN ('V>U릮CFT.,')) AS TEXT)); -- 0ms;
SELECT SUM(rt0.c0) OVER (), ((CAST(rt0.c2 AS TEXT))IS NOT(COUNT(*))), ((((((((((((rt0.c0 COLLATE RTRIM)OR(t0.c2)))AND(CASE WHEN rt0.c1 THEN rt0.c2 END)))AND((((rt0.c0)) BETWEEN ((t0.c1)) AND ((t0.c2))))))AND(((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)))))AND((('')IS NOT(rt0.c0)))))AND(CASE t0.c2  WHEN '' THEN rt0.c1 ELSE t0.c1 END)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2, x'0a48', PERCENT_RANK() OVER (), HEX((((rt0.c2, t0.c2, rt0.c0))==((t0.c0, t0.c0, t0.c0)))), CASE ((rt0.c2) BETWEEN (NULL) AND (rt0.c1))  WHEN t0.c1 THEN LOWER(DISTINCT rt0.c2) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0, t0; -- 0ms;
SELECT DISTINCT MAX(((t0.c1)>(t0.c2))) FROM rt0, t0 WHERE ((((('-320437939') NOT BETWEEN ('635575336') AND (NULL))) NOT BETWEEN (CAST(0.13786977379781595 AS INTEGER)) AND ((((((((('6_?{crs')OR(NULL)))AND(NULL)))OR(0.5648153000213222)))OR(x''))))); -- 0ms;
SELECT ALL TOTAL(((t0.c0)AND(rt0.c0))) FROM t0, rt0; -- 1ms;
SELECT ALL (750212990 IN ()) FROM t0, rt0; -- 0ms;
SELECT ((((0.802200428880088) BETWEEN (t0.c2) AND (rt0.c0))) IS TRUE), rt0.c1, CAST(((t0.c1) NOT NULL) AS NUMERIC) FROM rt0 WHERE ((((NOT (-1.788089848E9))) ISNULL));SELECT DISTINCT ((((rt0.c1)>=(rt0.c2))) IS TRUE) FROM rt0 WHERE (((0.012712438633409984) BETWEEN (5.0103826E7) AND (x'')) COLLATE NOCASE); -- 0ms;
SELECT ALL NTH_VALUE(((LIKELIHOOD(DISTINCT t0.c2, 0.1497454501757829))=((((rt0.c1, rt0.c1, rt0.c2))>((rt0.c2, rt0.c1, rt0.c2))))), ((((t0.c0, rt0.c2, rt0.c0)) BETWEEN ((rt0.c0, t0.c0, t0.c1)) AND ((t0.c2, rt0.c2, rt0.c0))) IN ())) OVER () FROM t0, rt0; -- 0ms;
SELECT ALL ((((rt0.c0)OR(t0.c0)))-((~ (x'')))) FROM rt0, t0 WHERE (CASE ((NULL)<('2086946906'))  WHEN ((NULL)IS('')) THEN ((0.29661869526553153) ISNULL) ELSE CAST(-8.3743938E8 AS NUMERIC) END); -- 0ms;
SELECT DISTINCT '()' FROM rt0, t0 WHERE ('-1372907600'); -- 0ms;
SELECT DISTINCT ((CASE t0.c0  WHEN rt0.c2 THEN t0.c2 ELSE t0.c0 END)>((((t0.c2)) NOT BETWEEN ((t0.c0)) AND ((t0.c0))))) FROM t0, rt0 WHERE (((((NULL) NOT NULL))*(CAST('6US鹎Ku' AS NUMERIC)))); -- 1ms;
SELECT DISTINCT (((t0.c2) IS FALSE) IN ()) FROM rt0 LIMIT 653759514 OFFSET 282431186; -- 0ms;
SELECT DISTINCT (((t0.c2))>=((t0.c2))) COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT DISTINCT NTILE(((rt0.c0)&(rt0.c2)) COLLATE NOCASE) OVER () FROM t0, rt0 LIMIT 1897642428; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, rt0 WHERE (CAST(((((0.9980982011225947)OR('lrM,m')))OR('⅚j5O\-.')) AS TEXT)); -- 0ms;
SELECT MIN((((t0.c2, t0.c1, t0.c1)) BETWEEN ((t0.c2, t0.c2, rt0.c2)) AND ((t0.c2, rt0.c1, rt0.c0))) COLLATE RTRIM) FROM rt0, t0 LIMIT 732223090 OFFSET -1976058789; -- 0ms;
SELECT SUM(0.3200053353980742) OVER (), (NOT ((t0.c1 IN ()))), ((CAST(rt0.c1 AS REAL))<<(MIN(t0.c0))) FROM t0, rt0 WHERE (json_array((((('1959507320')OR('')))AND(NULL)), ((NULL)-('-455034164')), ((((((((0.5758646254819244)OR(x'')))OR(0.6469471015316138)))AND('K')))AND(x'')), ((-1352832796) BETWEEN (NULL) AND ('GgUj')))); -- 0ms;
SELECT ALL (rt0.c1 IN ()), 0.6811504375813596 COLLATE RTRIM, ((rt0.c2)<(rt0.c0)) COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT SUM(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c0))) OVER () FROM t0 WHERE (HEX(((NULL)||(0.058635487354910976)))) GROUP BY CASE WHEN ((t0.c2)>=(t0.c1)) THEN ((t0.c0)-(t0.c1)) END;SELECT DISTINCT CAST(rt0.c2 AS BLOB) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)!=(t0.c2))) NOTNULL), NTILE(((((LIKELIHOOD('', 0.16120982387270255))OR(((((t0.c2)OR(t0.c2)))AND(rt0.c2)))))OR(CAST(t0.c2 AS NUMERIC)))) OVER (), ((((592220343 COLLATE RTRIM)OR(((t0.c2) NOT NULL))))AND(((((rt0.c1)AND(t0.c1)))OR(t0.c0)))) FROM t0, rt0 WHERE (CAST(CASE WHEN x'' THEN -133970546 WHEN 0.2821780940419588 THEN 0.9598215170213316 WHEN x'6317' THEN 0.8404209380621639 WHEN 0.45260964719452557 THEN '-820338391' WHEN NULL THEN NULL ELSE 0.871164744547178 END AS BLOB)); -- 3ms;
SELECT (((CASE WHEN t0.c1 THEN rt0.c0 ELSE t0.c1 END, (NOT (rt0.c2)), CASE WHEN rt0.c1 THEN t0.c1 WHEN t0.c0 THEN rt0.c0 WHEN t0.c2 THEN t0.c0 ELSE rt0.c2 END))<=((t0.c2 COLLATE NOCASE, ((((((((NULL)OR(t0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), ((rt0.c0) BETWEEN (t0.c1) AND (t0.c1))))) FROM rt0, t0; -- 0ms;
SELECT CASE (((t0.c1))<>((rt0.c2)))  WHEN CAST(t0.c0 AS REAL) THEN ((rt0.c1) IS FALSE) WHEN COUNT(*) THEN ((rt0.c2)IS(t0.c2)) WHEN ((((rt0.c2)OR(t0.c0)))OR(rt0.c2)) THEN ((t0.c1) IS FALSE) END, CAST(((x'') IS TRUE) AS TEXT), ROW_NUMBER() OVER () FROM t0, rt0 WHERE (UPPER(DISTINCT CAST(NULL AS TEXT))); -- 1ms;
SELECT DISTINCT MAX(((t0.c2)LIKE(x''))) FROM t0, rt0 WHERE (CAST((+ (0.5274429021732281)) AS INTEGER)) ORDER BY (((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) IN ())  NULLS LAST; -- 0ms;
SELECT ALL CAST(HEX(DISTINCT x'') AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER (), (~ (0.7640729314408351)), ((rt0.c1) NOT NULL) COLLATE BINARY FROM rt0, t0 WHERE ('-1890713708'); -- 0ms;
SELECT DISTINCT CAST((- (rt0.c1)) AS NUMERIC) FROM t0, rt0 WHERE (((((('')) NOT BETWEEN ((0.9416243311626028)) AND (('QX')))) NOT BETWEEN ('867565162' COLLATE NOCASE) AND ((('FALSE')*(x'0f52'))))); -- 0ms;
SELECT DISTINCT '-0.0' FROM rt0; -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0, t0 WHERE (((((CASE WHEN '0.6583670111831985' THEN x'' WHEN '104430255' THEN '0.7208099293338188' WHEN 0.24170779162619416 THEN 0.01753588516188498 END)AND(CAST(0x131896a9 AS BLOB))))OR(('-2091536543' IN ())))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN ()))<(LIKELY(DISTINCT rt0.c2))) FROM rt0; -- 0ms;
SELECT ALL (CAST(t0.c1 AS TEXT) IN ()) FROM t0, rt0; -- 0ms;
SELECT ALL FIRST_VALUE(((((t0.c1) NOT NULL)) NOTNULL)) OVER ( GROUPS BETWEEN (((((((((((t0.c1)AND(t0.c2)))AND(0.18409869179017424)))OR(t0.c1)))OR(t0.c1))))<=(((t0.c1 IN ())))) FOLLOWING AND NULL FOLLOWING) FROM t0, rt0 WHERE (((+ (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((((- (rt0.c2)))AND((NOT (rt0.c0)))))AND(((((((((t0.c0)OR(rt0.c2)))OR(t0.c0)))AND(rt0.c2)))OR(rt0.c0)))), (((+ (rt0.c0)))!=(IFNULL(rt0.c2, rt0.c0))), ((0x2554fed7 IN ()) IN ((~ (t0.c2)))) FROM rt0 INNER JOIN t0 ON TIME(json_quote(t0.c2), ((t0.c0)!=(rt0.c0)), rt0.c2 COLLATE NOCASE) WHERE (((('-1112099432' IN ())) NOT NULL)); -- 0ms;
SELECT DISTINCT LIKELIHOOD(((rt0.c1)+(t0.c2)), 0.7439087603699498), NULL, (((t0.c2)) NOT BETWEEN ((rt0.c2 COLLATE BINARY)) AND ((((t0.c1) NOTNULL)))) FROM rt0;SELECT rt0.c1 FROM rt0, t0 WHERE (((((('225607452') ISNULL), ((((-2.084517182E9)OR(x'')))OR(-8.70459171E8)), CASE NULL  WHEN '0.7557427312950545' THEN 0.3439614733562314 END))>=((NULLIF('-1011503058', 7.98339472E8), (('9*bPLdeK') NOT BETWEEN (0.2107449012366157) AND (x'')), (('-1784885929') IS FALSE))))); -- 0ms;
SELECT DISTINCT NTILE((((t0.c2 IN (t0.c1))) IS FALSE)) OVER ( RANGE ((t0.c0)>=(t0.c0)) COLLATE RTRIM PRECEDING EXCLUDE CURRENT ROW) FROM t0 WHERE ((~ (TRIM(NULL, ''))));SELECT DISTINCT t0.c2 FROM rt0 NOT INDEXED WHERE ((((0x11d84805)) NOT BETWEEN ((((0.6033874393782093)|(NULL)))) AND (('991187401' COLLATE NOCASE))));SELECT DISTINCT IFNULL(DISTINCT CASE rt0.c2  WHEN t0.c1 THEN rt0.c2 ELSE rt0.c2 END, CASE WHEN t0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN NULL THEN rt0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END) FROM rt0 WHERE (((CAST(0X67243436 AS TEXT)) NOTNULL)) LIMIT -1718140618 OFFSET 1342648335;SELECT t0.c1 FROM rt0, t0 WHERE ((((- ('1571732486')))>(((('-1937684495', 'N+', '1917636478'))=((1619102567, '0.558491471538741', x'')))))); -- 0ms;
SELECT ALL ((((t0.c2))<=((t0.c1))) IN ()) FROM t0, rt0 ORDER BY ((t0.c2 COLLATE RTRIM)>(((((((((((((t0.c2)OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c1)))AND(t0.c1)))OR(rt0.c0)))) DESC LIMIT 572231652 OFFSET 1571228096; -- 0ms;
SELECT ALL CASE WHEN rtreenode('', t0.c0) THEN COUNT(x'b615') WHEN CAST(rt0.c1 AS NUMERIC) THEN 0.8880138309884841 WHEN x'' THEN CAST('-2094540249' AS REAL) END, CASE WHEN t0.c0 COLLATE BINARY THEN (((rt0.c2))<=((rt0.c2))) ELSE (((t0.c1))>((rt0.c1))) END, SUM(CAST(rt0.c1 AS INTEGER) COLLATE NOCASE) OVER () FROM t0;SELECT DISTINCT ((((((t0.c2)OR(t0.c2)))OR(t0.c2))) NOT BETWEEN ((t0.c2 IN ())) AND ((- (rt0.c0)))), HEX(((rt0.c2) IS TRUE)), (~ (((t0.c1)==(t0.c0)))) FROM t0 WHERE (x'') GROUP BY (- ((NOT (t0.c0))));SELECT DISTINCT (((rt0.c0 IN ()))IS NOT(CASE WHEN t0.c1 THEN x'5fcde44c' END)), ((((t0.c2) NOT BETWEEN (t0.c0) AND (rt0.c1))) ISNULL), ((CAST(t0.c2 AS BLOB)) NOT BETWEEN (t0.c0 COLLATE NOCASE) AND (TIME(rt0.c2, t0.c2, -451199370))) FROM t0, rt0; -- 0ms;
SELECT ALL CASE WHEN rt0.c1 COLLATE RTRIM THEN CASE rt0.c1  WHEN t0.c0 THEN t0.c0 END WHEN ((323394617) NOT BETWEEN (rt0.c0) AND (t0.c1)) THEN CHANGES() WHEN ((((((((((((rt0.c1)OR(t0.c1)))OR(t0.c0)))OR(t0.c1)))OR(t0.c0)))OR(x'6ece2258')))OR(t0.c1)) THEN TOTAL(t0.c0) END, json_array_length(CAST(rt0.c2 AS NUMERIC), ((t0.c0)>(rt0.c2))), ((CAST(t0.c2 AS BLOB))>=(rt0.c1)) FROM rt0 WHERE ('603137608' COLLATE RTRIM);SELECT DISTINCT CASE WHEN ((t0.c1)OR(t0.c1)) THEN 0.13786977379781595 END, x'', ((((((((((rt0.c0)GLOB(t0.c2)))AND(CASE WHEN t0.c1 THEN x'' WHEN rt0.c2 THEN NULL WHEN t0.c0 THEN t0.c0 END)))OR((((rt0.c1))=((rt0.c1))))))AND('-112237237')))OR(t0.c0)) FROM t0, rt0 WHERE (CAST(((0.3912923547616374)LIKE(NULL)) AS NUMERIC)); -- 0ms;
SELECT TOTAL((((t0.c1)) BETWEEN ((t0.c0)) AND ((rt0.c0)))) OVER (), TOTAL(CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c1 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c1 END), ((((rt0.c1) IS FALSE)) ISNULL) FROM rt0 WHERE (CAST((-1.113165407E9 IN ()) AS TEXT));SELECT ALL ((((t0.c1) IS FALSE)) NOTNULL) FROM rt0, t0 WHERE (((('0.7640729314408351', ((0.3958308863852289) IS FALSE), ((8.55993428E8) BETWEEN (x'') AND ('-1942973033'))))<((TYPEOF(0.404414230049018), (+ (x'c097')), (('R}EuE\r7''')+(0.5565412919126468)))))); -- 0ms;
SELECT DISTINCT CHANGES() FROM rt0, t0 ORDER BY (((((((((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c0)))OR(rt0.c0)))AND(t0.c2)))OR(rt0.c1)))OR(t0.c0))))<>(((((rt0.c0))<=(('')))))) DESC, IFNULL(DISTINCT ((((rt0.c0)OR(rt0.c1)))AND(t0.c2)), (('m_')<<(0.5216247785640716))) DESC  NULLS LAST, (((rt0.c1)) NOT BETWEEN (((t0.c2 IN ()))) AND ((rt0.c1))); -- 0ms;
SELECT DISTINCT ((rt0.c2) BETWEEN (ABS(DISTINCT t0.c0)) AND (CAST(t0.c1 AS NUMERIC))) FROM t0, rt0 GROUP BY ((((rt0.c0) IS TRUE))<>(CAST(-1111396349 AS BLOB))) HAVING CASE WHEN ((rt0.c2)>(t0.c2)) THEN (t0.c1 IN ()) ELSE CAST(t0.c2 AS TEXT) END; -- 0ms;
SELECT AVG((('()') ISNULL)) FROM t0, rt0 ORDER BY rt0.c2  NULLS FIRST; -- 1ms;
SELECT ((((t0.c2)AND(((rt0.c1)<(rt0.c2)))))AND(rt0.c0)) FROM rt0, t0 WHERE (CHAR((x'99b4' IN ()))) ORDER BY CAST(CASE t0.c2  WHEN t0.c2 THEN rt0.c0 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 ELSE rt0.c2 END AS NUMERIC)  NULLS LAST, x'1739'  NULLS FIRST, (rt0.c0 IN ()) ASC, x''; -- 0ms;
SELECT DISTINCT t0.c2 FROM rt0, t0 WHERE ((((CASE WHEN '1895378469' THEN '85710700' END, ((((NULL)OR(x'')))OR(0xffffffffed99a34d)), x'dc70'))>((((0Xffffffffad9a0503) IS TRUE), (((((((('1107266127')OR('uIo2[QUZ')))AND(x'6adc')))OR(114953610)))AND(x'90d8')), 0X57b77ae2 COLLATE NOCASE)))) ORDER BY (t0.c2 IN ()) DESC LIMIT -1718619334; -- 0ms;
SELECT DISTINCT (((((((((NULL)OR(rt0.c2)))OR(t0.c1)))AND(x'')))AND(t0.c0)) IN ()) FROM t0 GROUP BY ((((rt0.c1)||(rt0.c0)))>(((rt0.c2) NOT BETWEEN (rt0.c2) AND (t0.c1)))), (((rt0.c1)) NOT BETWEEN ((t0.c1)) AND ((''))), (((rt0.c1 IN ()))||(((rt0.c2) NOTNULL)));SELECT ALL 0.7368154106484307 COLLATE RTRIM, ((rt0.c0)<=(((rt0.c1)&(rt0.c2)))), ((((((((rt0.c1)OR(CAST(t0.c0 AS NUMERIC))))OR(-781023457)))OR(((rt0.c1)OR(t0.c2)))))AND((+ (rt0.c2)))) FROM t0, rt0 LIMIT -837439380; -- 0ms;
SELECT ALL t0.c1, (((('930672136') NOT NULL))<((x'' IN (NULL)))), AVG((- (t0.c2))) FROM t0, rt0 WHERE ((NOT (LOWER('%qo~u')))); -- 0ms;
SELECT DISTINCT COUNT(*) FROM t0, rt0 WHERE ((((('/䭬') NOT BETWEEN ('550059665') AND (NULL))) NOTNULL)); -- 0ms;
SELECT DISTINCT rt0.c2 FROM t0 WHERE (load_extension((x'' IN ()), (x'0474' IN ())));SELECT DISTINCT ((t0.c1) BETWEEN (t0.c2) AND (rt0.c2)) COLLATE NOCASE FROM rt0, t0; -- 0ms;
SELECT DISTINCT t0.c0, CASE WHEN NULL THEN ((rt0.c1)<>(rt0.c2)) END, ((((+ (rt0.c1))))==(((((rt0.c2))!=((NULL)))))) FROM t0 WHERE (CAST(('1316611575' IN ()) AS TEXT)) GROUP BY (((((((t0.c0)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))))OR((NOT (rt0.c2)))))AND(((rt0.c2)OR(t0.c0)))) HAVING CAST(CASE t0.c0  WHEN t0.c2 THEN t0.c0 END AS INTEGER);SELECT DISTINCT -6.8914305E7, (((rt0.c2)) NOT BETWEEN (((- (t0.c0)))) AND ((CASE t0.c0  WHEN t0.c0 THEN t0.c2 WHEN NULL THEN rt0.c2 WHEN t0.c2 THEN rt0.c0 END))), ((AVG(t0.c1)) ISNULL) FROM t0, rt0 ORDER BY TRIM(DISTINCT (((t0.c0, t0.c2, rt0.c2))<=((rt0.c0, rt0.c0, t0.c2))), CASE WHEN rt0.c1 THEN rt0.c2 ELSE t0.c0 END) ASC, ((((((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2)))))>=((CAST(t0.c0 AS NUMERIC)))) DESC, CAST((((rt0.c1)) BETWEEN ((rt0.c0)) AND ((t0.c2))) AS BLOB) ASC  NULLS LAST; -- 0ms;
SELECT CAST(t0.c0 AS NUMERIC) COLLATE RTRIM FROM t0, rt0 WHERE ((((~ (x''))) IS TRUE)); -- 1ms;
SELECT DISTINCT CASE rt0.c0  WHEN ((t0.c1) ISNULL) THEN ((((t0.c1)OR(rt0.c0)))AND(t0.c1)) ELSE ((NULL) NOT BETWEEN (t0.c1) AND (t0.c0)) END, 'ox', ((CAST(t0.c0 AS REAL)) NOT NULL) FROM t0;SELECT DISTINCT ((((t0.c0) IS FALSE)) BETWEEN (((t0.c0)-(rt0.c2))) AND (MIN(rt0.c2))) FROM rt0, t0 WHERE ((((((0Xffffffffae3eb1f1)<=('-1176243537'))))>=((UNLIKELY(DISTINCT 8.22075905E8))))); -- 0ms;
SELECT ALL '袤뾧獺C' FROM t0 INNER JOIN rt0 ON (((PRINTF(t0.c0)))<(((~ (rt0.c1))))); -- 0ms;
SELECT ALL ((((t0.c0)<(rt0.c1))) BETWEEN (((rt0.c1) NOT NULL)) AND ((((t0.c1))<=((t0.c1))))), SUM((t0.c1 IN (t0.c2, t0.c2))), TOTAL(rt0.c1) FROM t0 WHERE (CASE (('px') IS FALSE)  WHEN (('-810704633')&(x'')) THEN ((('MU', 0.0, 0.9846978235658908, 0xffffffffe9db5280, 0.0851805375714555))<(('', NULL, 0.298862862420306, 0.6272130660964471, NULL))) END) ORDER BY UPPER(DISTINCT ((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0))), (((((~ (t0.c2)))AND(((t0.c0) IS TRUE))))OR(CASE WHEN rt0.c0 THEN rt0.c0 ELSE t0.c1 END)), ((((t0.c2)AND(((((((((rt0.c0)OR(t0.c2)))AND(NULL)))AND(t0.c0)))AND(0.809971974854003)))))OR(((((((((t0.c1)AND(t0.c2)))AND(t0.c0)))AND(x'')))AND(rt0.c1)))) DESC  NULLS LAST LIMIT 1895378469 OFFSET -1418461019;SELECT ALL (((rt0.c2 IN ())) NOT NULL) FROM t0, rt0 WHERE (CASE WHEN ((0X39b970d9) BETWEEN (x'') AND ('1895378469')) THEN (('N	D') NOT BETWEEN (x'') AND (NULL)) ELSE 114286955 END) ORDER BY (CASE rt0.c1  WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END IN ())  NULLS FIRST; -- 0ms;
SELECT DISTINCT (((((rt0.c1 IN ()))OR(((t0.c1) ISNULL))))AND(((((((((t0.c1)OR(rt0.c0)))OR(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c2 AS BLOB) THEN (((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0))) ELSE rt0.c1 COLLATE NOCASE END FROM rt0;SELECT ALL CAST(t0.c0 AS BLOB) COLLATE NOCASE FROM rt0 WHERE ((((('0.7208099293338188') NOT BETWEEN ('698355044') AND ('E^'))) BETWEEN ((('XQ쨗')|('-1113165407'))) AND ((((0.8202447282105165))>((x'9874'))))));SELECT ALL CASE WHEN ((((rt0.c1)AND(t0.c2)))OR(t0.c2)) THEN (((t0.c1)) NOT BETWEEN ((t0.c0)) AND ((t0.c2))) WHEN ((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c1)) THEN ((t0.c2) IS TRUE) WHEN ((t0.c1) BETWEEN (rt0.c2) AND (rt0.c0)) THEN SUM(t0.c0) END FROM t0, rt0; -- 0ms;
SELECT DISTINCT AVG((((rt0.c0))<((rt0.c2)))), CAST((- (t0.c1)) AS INTEGER), (((~ (rt0.c2))) BETWEEN (((rt0.c1)GLOB(t0.c0))) AND (((rt0.c0)AND(t0.c0)))) FROM t0, rt0; -- 1ms;
SELECT DISTINCT (((x'')|(rt0.c0)) IN ()) FROM rt0, t0 WHERE (((((('.蘒')) BETWEEN (('n''')) AND (('B*qQ[*M')))) ISNULL)); -- 0ms;
SELECT ALL (NOT ((t0.c1 IN (t0.c2)))), CAST((~ (rt0.c2)) AS NUMERIC), ((((((rt0.c1)OR(rt0.c0)))OR(0.09763464370979269))) NOTNULL) FROM t0, rt0 WHERE (((((((0.5475053749037739)AND(x'')))AND('794119229')))/(CASE 0.29260443708442385  WHEN 'j}w**L' THEN '-1626592362' END))); -- 0ms;
SELECT ALL (~ ((t0.c2 IN (t0.c1)))) FROM rt0, t0 WHERE ((((((x'5e69')OR('')))AND(',<lD-Infinitymga')) IN ())); -- 0ms;
SELECT MAX('t쇟輡M\rꇊ') FROM rt0; -- 0ms;
SELECT ALL x'49f4' FROM t0, rt0 WHERE ((- ((('m1wD{G')GLOB(NULL))))); -- 0ms;
SELECT ALL ((((t0.c0) NOT NULL))>(rt0.c2 COLLATE RTRIM)), CUME_DIST() OVER ( ROWS BETWEEN  UNBOUNDED PRECEDING AND  UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW), t0.c2 FROM rt0;SELECT ALL CAST(((rt0.c2) NOT BETWEEN (0) AND (t0.c0)) AS TEXT) FROM rt0, t0 ORDER BY ((((- (rt0.c2)), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c1)), 0.1120373604105167))=((((t0.c1) NOT NULL), (('')AND(t0.c1)), CAST(rt0.c2 AS BLOB))))  NULLS LAST, ((rt0.c0 IN ()) IN ()); -- 0ms;
SELECT ALL (((CASE rt0.c2  WHEN 0.6633040011350728 THEN rt0.c1 WHEN '-1567736820' THEN t0.c0 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END))<(((('-1344236591')>(t0.c2))))), (((((NULL))!=((rt0.c0))))LIKE(CAST(t0.c0 AS REAL))), ((((((rt0.c2)IS NOT(rt0.c2)))AND(((((rt0.c0)OR(t0.c0)))OR(t0.c1)))))OR(((((((((((((rt0.c2)AND(t0.c1)))OR(t0.c0)))OR(x'')))OR(t0.c2)))AND(t0.c2)))AND(t0.c2)))) FROM t0, rt0 WHERE ((((((((('-283184379' COLLATE BINARY)OR(IFNULL(DISTINCT 0.40747226147258886, x'4e69'))))AND(NULLIF(DISTINCT 0.3929791145609204, x'7cca'))))AND((-127561558 IN (NULL)))))OR(((1333524993)==(0.9052099877435826))))); -- 0ms;
SELECT DISTINCT AVG(((t0.c2) ISNULL)), rt0.c2, ((((((((load_extension(t0.c1, rt0.c2))OR(((rt0.c2)-(rt0.c2)))))OR(((t0.c0) NOTNULL))))AND((- (rt0.c2)))))AND(CASE x''  WHEN rt0.c0 THEN rt0.c1 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c2 THEN '1241560574' WHEN rt0.c1 THEN rt0.c2 END)) FROM t0, rt0;SELECT ALL (((rt0.c1 IN (rt0.c2)))!=((((t0.c2))<>((t0.c1))))), PERCENT_RANK() OVER ( PARTITION BY CASE ((t0.c1) BETWEEN (t0.c0) AND (rt0.c2))  WHEN ((NULL)<<(rt0.c0)) THEN NULL END, NULL), CAST(((rt0.c1) IS FALSE) AS BLOB) FROM rt0;SELECT ALL rt0.c2 FROM t0, rt0 WHERE ((((~ (x'5d1daf72'))) BETWEEN (((((((((x'f0dd')AND(NULL)))OR(0.8569645708749403)))OR('')))AND(1.316611575E9))) AND (CASE x''  WHEN 0.7640729314408351 THEN x'' ELSE '' END))); -- 0ms;
SELECT MAX((((t0.c0))>((t0.c1)))) FROM rt0;SELECT ALL (((rt0.c2)) NOT BETWEEN (((~ (t0.c0)))) AND ((t0.c2))) FROM rt0 WHERE (((((x'')OR(x''))) NOT BETWEEN (CAST(0xffffffffe3f95c03 AS REAL)) AND (IFNULL(x'', x''))));SELECT NULLIF(DISTINCT TOTAL(t0.c0), COUNT(*)), ((LOWER(t0.c2))LIKE(json_remove(x'9225', t0.c2, t0.c0, t0.c2))), ((rt0.c1) NOT BETWEEN (((t0.c1)-(t0.c1))) AND ((t0.c2 IN ()))) FROM rt0, t0 WHERE (CAST((((NULL))!=((x''))) AS TEXT));SELECT ALL (+ (CAST(t0.c0 AS NUMERIC))) FROM rt0 LIMIT -1904144025 OFFSET 529772940;SELECT ALL ((CASE WHEN t0.c0 THEN x'' ELSE t0.c2 END) NOT BETWEEN (COUNT(*)) AND (((t0.c1)<=(rt0.c0)))) FROM rt0 WHERE (CASE WHEN CASE WHEN NULL THEN x'' ELSE NULL END THEN CAST(x'' AS REAL) ELSE (- ('J}W**L')) END) LIMIT 2049303223;SELECT DISTINCT '彮s' FROM rt0; -- 0ms;
SELECT ALL rt0.c1, 0.15233521245378157, (t0.c1 IN ()) COLLATE NOCASE FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((CAST(t0.c1 AS BLOB)) NOT BETWEEN (((rt0.c2)<=(t0.c1))) AND ((((t0.c1)) BETWEEN ((t0.c1)) AND (('AZ'))))) FROM t0 WHERE (x'3961f299');SELECT ALL INSTR(CASE WHEN rt0.c2 THEN t0.c0 ELSE rt0.c1 END, ((rt0.c1) NOT BETWEEN (rt0.c2) AND ('-112237237'))) FROM t0, rt0 WHERE ((((NOT ('-94812578'))) NOT BETWEEN (((((((((x'')OR(NULL)))OR(x'c211')))AND(x'')))AND('0.02272488861313593'))) AND ((((x'', '-1099970868', x'5435'))>((822075905, 0.8366417760995015, x'')))))); -- 0ms;
SELECT DISTINCT ((t0.c1 COLLATE RTRIM) NOT BETWEEN (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c2))) AND ('1895378469')), ((NULL)>>(DATE(rt0.c0, x'', '0.9637867506798788', t0.c1, t0.c1, t0.c2, rt0.c1))), ((((rt0.c1)<(t0.c2))) BETWEEN (((t0.c0)>=(rt0.c1))) AND (((t0.c1)<<(rt0.c1)))), (((((rt0.c0 IN ()))AND(t0.c2)))OR(MIN(x'4e3b99b2'))), json_insert(CASE WHEN rt0.c0 THEN t0.c1 END, rt0.c2, ((t0.c2)|(rt0.c1))) FROM rt0;SELECT DISTINCT GROUP_CONCAT((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((t0.c1)))) FROM rt0, t0 WHERE (CAST(LENGTH(x'31fc') AS BLOB)); -- 0ms;
SELECT ALL (((t0.c0)) NOT BETWEEN ((((((((((rt0.c0)AND(t0.c0)))OR(rt0.c1)))OR(rt0.c0)))OR(rt0.c0)))) AND (('-2031265108'))) FROM rt0;SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c0) AS BLOB) FROM t0, rt0 WHERE (CAST((((0.18434522277178134))<=((x''))) AS TEXT)); -- 0ms;
SELECT DISTINCT (((rt0.c2)) NOT BETWEEN ((MAX(t0.c1))) AND (('B/'))) FROM rt0 WHERE (TRIM(((0.9090119294173749)|(x'')), ((x'678e')LIKE(x'ecfb')))) LIMIT 946765969;SELECT ((((((t0.c2) BETWEEN (t0.c2) AND (rt0.c0)))AND(GROUP_CONCAT(rt0.c2))))AND(((t0.c0) NOTNULL))), (((t0.c2)>>(t0.c1)) IN ()), ((t0.c2)!=(((t0.c1) NOTNULL))) FROM rt0, t0 WHERE ('c/'); -- 0ms;
SELECT ALL AVG(((t0.c1)GLOB('-1275722325'))) FROM t0, rt0; -- 0ms;
SELECT CAST(((rt0.c0)-(t0.c1)) AS INTEGER) FROM rt0 NOT INDEXED WHERE (((-142799357 IN ()) IN ())) GROUP BY ((((CAST(rt0.c1 AS REAL))OR((((t0.c1))<>((rt0.c0))))))OR(((t0.c2)LIKE(t0.c1)))) HAVING (((((rt0.c1)AND(t0.c0)))OR(rt0.c1)) IN (((((((((x'')OR(rt0.c1)))OR(t0.c1)))AND(t0.c1)))AND(rt0.c2)))) LIMIT -1011503058 OFFSET 1871365913;SELECT DISTINCT (((('114286955')=(rt0.c1))) NOT BETWEEN (CASE WHEN t0.c2 THEN rt0.c2 ELSE rt0.c0 END) AND (x'732c')) FROM t0 ORDER BY ((0.4870435832005998) BETWEEN ((NOT (t0.c2))) AND ((((rt0.c0))>((t0.c1))))) ASC  NULLS LAST;SELECT DISTINCT ((((PRINTF(t0.c1))AND(((t0.c0)>(rt0.c0)))))AND(((((((((0.27070910943169935)OR(t0.c1)))AND(rt0.c2)))AND(t0.c2)))OR(rt0.c0)))), ((rt0.c2)GLOB(x'2bf7')) COLLATE BINARY, TOTAL(((rt0.c1) NOT BETWEEN (t0.c0) AND (0.7913037866180863))) OVER () FROM t0, rt0 WHERE ((((((((((+ (0.802200428880088)))AND(((((0.9850745352892978)OR(0.0079789977556185)))OR(NULL)))))OR(UPPER(0.617509134613224))))OR((('~&r瀧')*(-1.56773682E9)))))OR(JULIANDAY(NULL, '0.924426212204755', -1270250300, x'e93b', x'946a')))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)IS(rt0.c0))) BETWEEN ((((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c0)))) AND (CASE WHEN rt0.c2 THEN t0.c2 ELSE t0.c2 END)) FROM t0;SELECT ALL ((t0.c0)<=(t0.c1)) FROM rt0 WHERE (((x'') ISNULL) COLLATE RTRIM) ORDER BY ((NULLIF(t0.c2, 0.006545663613549135)) NOT BETWEEN (CASE WHEN t0.c2 THEN '' END) AND (NULL)) ASC LIMIT 1285961277 OFFSET -1814976159;SELECT (- ('')) COLLATE NOCASE, ((((rt0.c2)%(NULL)))|(((t0.c1)+(t0.c0)))), (((NULL)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE t0.c2 END)) AND (((((t0.c2))!=((rt0.c1)))))) FROM t0, rt0 WHERE ((('-2015559539')-(NULL)) COLLATE NOCASE); -- 0ms;
SELECT ALL (+ (((rt0.c0)<=(rt0.c1)))) FROM rt0 WHERE ((((((0x71720d59, x'', x'192b')) BETWEEN ((0X4c510a3, '', 0.8196365981531271)) AND ((NULL, 0.047949385011051615, NULL)))) BETWEEN (((0.8866358822014808)LIKE(''))) AND (((0.35749126572493906) NOT BETWEEN ('-1426436122') AND (0.6767994528093018))))); -- 0ms;
SELECT DISTINCT MAX(0.4204171189751902) FROM t0 WHERE ((- (TRIM('-979506925')))); -- 0ms;
SELECT ((CAST(t0.c1 AS BLOB))|(rt0.c0)), ((CAST(rt0.c1 AS NUMERIC)) ISNULL), CASE WHEN (- (t0.c1)) THEN ((rt0.c1)AND(t0.c1)) ELSE CAST(t0.c2 AS REAL) END FROM t0, rt0 WHERE (((TRIM('H]#UG#'))>>((((x'')) BETWEEN ((0X16cff722)) AND ((0.8325311744347924)))))); -- 0ms;
SELECT ALL NULL FROM t0 WHERE ((((((8.55993428E8, NULL, x'859c'))<((x'3da9', x'', x'')))) ISNULL)); -- 0ms;
SELECT ALL CASE json_valid(t0.c1)  WHEN '' THEN ((((rt0.c1)OR(rt0.c2)))OR(t0.c1)) ELSE CASE WHEN rt0.c2 THEN t0.c1 ELSE '1706878770' END END, '⟪b4*(7]?K', ((((((t0.c0, t0.c1, t0.c0, t0.c0, rt0.c0)) BETWEEN ((t0.c2, t0.c1, t0.c1, t0.c1, rt0.c2)) AND ((rt0.c0, t0.c0, t0.c2, rt0.c0, '1124385671')))))<=((((((((((((((rt0.c2)AND(rt0.c2)))OR(t0.c0)))OR(t0.c2)))AND(rt0.c1)))OR(rt0.c0)))AND(rt0.c0))))) FROM t0, rt0; -- 0ms;
SELECT (((t0.c1))>((CAST(rt0.c0 AS REAL)))) FROM t0;SELECT ALL t0.c2 FROM t0 WHERE (((((0x6403830)OR('1128807260')))AND(NULL)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE GROUP_CONCAT(t0.c1)  WHEN '' THEN ((t0.c2)==(rt0.c2)) END FROM t0, rt0 WHERE (CAST((+ ('\rq62Su1XO')) AS NUMERIC)) LIMIT 915630339; -- 0ms;
SELECT DISTINCT ((((CASE WHEN rt0.c0 THEN rt0.c0 WHEN t0.c2 THEN rt0.c2 WHEN t0.c1 THEN rt0.c1 ELSE t0.c2 END)OR((t0.c0 IN (t0.c0)))))OR(COUNT(t0.c0))), '-330173340', AVG((~ (rt0.c2))) FROM t0;SELECT ALL CAST('' AS INTEGER) FROM t0; -- 0ms;
SELECT load_extension(CASE WHEN t0.c0 THEN rt0.c1 ELSE t0.c1 END) FROM t0 NATURAL JOIN rt0 WHERE (0.7640729314408351); -- 0ms;
SELECT DISTINCT ((rt0.c1) ISNULL) FROM rt0, t0 WHERE ((((NULL IN (x'4d2b')))*((((NULL, 0.1547067899229675, x'8e83'))<(('', '', 6.98355044E8)))))) GROUP BY (rt0.c2 IN ()) COLLATE NOCASE HAVING (((((t0.c0)) BETWEEN ((t0.c2)) AND ((rt0.c1)))) NOT BETWEEN (((rt0.c0)&(t0.c0))) AND (rt0.c0)); -- 0ms;
SELECT DISTINCT ((CASE rt0.c2  WHEN t0.c2 THEN t0.c2 END)|(GROUP_CONCAT(t0.c0))) FROM t0;SELECT ALL (((GROUP_CONCAT(t0.c2)))<((rt0.c1 COLLATE NOCASE))) FROM t0 WHERE (((TRIM(DISTINCT x''))LIKE(CASE WHEN x'4ec3' THEN '' WHEN '' THEN '^G' WHEN 0x97c1115 THEN '2020101110' END)));SELECT ALL ((((((t0.c2) ISNULL))AND(((t0.c2)*(rt0.c2)))))OR(((rt0.c0)%(rt0.c0)))) FROM rt0;SELECT ALL CAST(x'6b45' AS REAL) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) OVER ( PARTITION BY x'', ((CAST(rt0.c0 AS TEXT))LIKE(CAST(t0.c0 AS BLOB)))), CASE rt0.c0  WHEN x'' THEN rt0.c2 END COLLATE NOCASE, ((AVG(rt0.c1))LIKE((((t0.c0)) NOT BETWEEN ((t0.c1)) AND ((rt0.c1))))), ((((t0.c2)*(t0.c1))) NOT BETWEEN (((t0.c1) NOT NULL)) AND ((t0.c0 IN ()))), (~ (CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c2 END)) FROM rt0;SELECT json_array_length(rt0.c1, rt0.c0) COLLATE NOCASE FROM rt0, t0 WHERE (TRIM(DISTINCT (NOT ('0.3982166815145398')))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0, rt0; -- 0ms;
SELECT (0.7472039042895066 IN ()) FROM t0, rt0 WHERE (CAST(((x'') BETWEEN (NULL) AND ('K-')) AS INTEGER)) ORDER BY ((CASE WHEN t0.c0 THEN t0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 END) NOT BETWEEN (((x'') BETWEEN (t0.c2) AND (t0.c2))) AND (x'a6dc97b4')) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((((t0.c2))<=((rt0.c1))))OR(CAST(rt0.c2 AS TEXT))))AND(rtreenode(rt0.c2, rt0.c0))), SUM(((rt0.c2)<=(t0.c0))) OVER ( ORDER BY (- ((+ (t0.c2)))), (((((rt0.c0))<=((t0.c2))))&(t0.c1)) RANGE ((((t0.c0)<<(rt0.c2)))IS NOT(((t0.c0) NOT NULL))) PRECEDING), CASE ''  WHEN CASE WHEN t0.c0 THEN rt0.c2 END THEN 1.120739374E9 ELSE CAST(t0.c1 AS TEXT) END, CAST(ROUND(rt0.c2, t0.c2) AS NUMERIC), ((CAST(rt0.c0 AS TEXT))|((~ (rt0.c2)))) FROM rt0 WHERE ((((('-517375441') ISNULL)) NOT BETWEEN (((((((((2138802361)AND('104430255')))OR(NULL)))OR(0.00966624515015857)))OR(''))) AND ((x'' IN ())))) GROUP BY ((((rt0.c1) NOTNULL)) IS TRUE) HAVING (((t0.c0)) BETWEEN ((CAST(x'' AS TEXT))) AND ((CASE rt0.c1  WHEN t0.c1 THEN rt0.c1 END)));SELECT DISTINCT rt0.c0 FROM rt0, t0; -- 0ms;
SELECT DISTINCT TYPEOF(DISTINCT (t0.c0 IN ())) FROM t0; -- 0ms;
SELECT ALL ((t0.c1)GLOB(((t0.c0) ISNULL))) FROM rt0, t0 WHERE (((NULL)/(CAST(0.45260964719452557 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT (((CAST(t0.c0 AS TEXT)))<=((((t0.c2) NOTNULL)))) FROM rt0;SELECT DISTINCT CASE WHEN t0.c0 THEN ROUND(rt0.c0, t0.c2) END, (NOT (-2.084517182E9)), ((json_patch(t0.c2, t0.c2)) IS FALSE) FROM t0;SELECT ALL ((((((rt0.c0) NOTNULL))OR((- (rt0.c2)))))AND((((t0.c1))=((t0.c1))))) FROM rt0;SELECT DISTINCT CAST(((rt0.c1)%(t0.c0)) AS REAL) FROM rt0;SELECT ALL rt0.c1 FROM t0 WHERE ((((1541361101) NOTNULL) IN ()));SELECT DISTINCT (- (MAX(rt0.c1))) FROM t0;SELECT ALL ((CAST(rt0.c0 AS TEXT))<<(((rt0.c0) IS TRUE))) FROM t0 ORDER BY (('-1063727036') NOT BETWEEN (t0.c1 COLLATE NOCASE) AND ((t0.c2 IN (rt0.c0, rt0.c2))))  NULLS FIRST;SELECT COALESCE(DISTINCT (+ (t0.c0)), QUOTE(t0.c0)) FROM t0, rt0 WHERE (CASE WHEN NULL COLLATE BINARY THEN UNLIKELY(DISTINCT NULL) WHEN (NOT (x'')) THEN '2145284021' WHEN (x'' IN ()) THEN (((NULL))>=((0x386e8091))) ELSE 6.90839406E8 COLLATE NOCASE END); -- 0ms;
SELECT ALL ((CASE WHEN rt0.c1 THEN rt0.c0 END)/(MIN(rt0.c1))) FROM rt0, t0 WHERE (((CASE WHEN '-1275722325' THEN '-308698291' WHEN '1212656054' THEN x'' WHEN 0.00918415228693703 THEN NULL ELSE 'L|]' END)||(0.13303647654690687))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0, t0 GROUP BY t0.c0 COLLATE BINARY, CAST(((rt0.c2)>=(rt0.c1)) AS REAL), t0.c2 HAVING CAST(((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)))OR(rt0.c0)))OR(t0.c0)) AS TEXT) LIMIT 1193497863 OFFSET -1017476286; -- 0ms;
SELECT COALESCE(DISTINCT ((t0.c2) BETWEEN (rt0.c0) AND (x'')), ((((t0.c1)AND(rt0.c0)))AND(t0.c2)), IFNULL(t0.c0, NULL), t0.c1) FROM t0, rt0 WHERE (json_extract(0.0870790525891395, 0.0164994067711417) COLLATE NOCASE);SELECT DISTINCT x'66b4' FROM t0 WHERE (((('-864537746')/(x'')) IN (0.7491196094027304))); -- 0ms;
SELECT DISTINCT ((rt0.c0) NOTNULL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE NOCASE) IS FALSE), (json_array_length(rt0.c2) IN ()), GROUP_CONCAT(((t0.c1) NOT NULL)) FROM rt0 WHERE ((((CAST('Ev' AS TEXT)))<=((((0.6594765723045901) ISNULL)))));SELECT ((((t0.c2)<<(rt0.c0)))<(((rt0.c2)<>(rt0.c1)))), ((((rt0.c2 IN (rt0.c2)), (~ (rt0.c0)), ((((1106715023)OR(rt0.c0)))AND(rt0.c2))))<=((TYPEOF(t0.c1), 0.2229159328948469, '248061612'))), x'9269' FROM t0 WHERE ((((('LD%') IS TRUE)) NOTNULL)) ORDER BY ((((((((((t0.c2)>(t0.c2)))OR((~ (t0.c2)))))OR(CASE WHEN t0.c2 THEN rt0.c1 ELSE rt0.c2 END)))AND(((t0.c1)||(rt0.c1)))))AND((((t0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c2))))) LIMIT 2076209366 OFFSET -1598893775;SELECT DISTINCT NULL FROM rt0 WHERE (json_type(UPPER(DISTINCT x'072f'))) GROUP BY ((SUBSTR(rt0.c2, rt0.c2))<=(rt0.c2)) HAVING ((rt0.c2 COLLATE RTRIM)<((rt0.c0 IN ())));SELECT DISTINCT (((rt0.c1 IN (t0.c2))) NOT BETWEEN (((rt0.c0)GLOB(t0.c0))) AND ((((t0.c1)) NOT BETWEEN ((t0.c2)) AND ((t0.c2))))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT AVG(CASE WHEN t0.c2 THEN t0.c2 ELSE t0.c1 END COLLATE NOCASE), SUM(((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1))), -2.084517182E9 FROM rt0;SELECT DISTINCT COUNT(*) FROM rt0; -- 1ms;
SELECT SUM(CASE WHEN rt0.c2 THEN rt0.c2 END COLLATE RTRIM) OVER (), ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 END)-((NOT (rt0.c1)))), ((((((((((((t0.c2)OR(t0.c0)))OR(t0.c1)))AND(t0.c2)))OR(rt0.c0)))OR(t0.c1)))AND(rt0.c2)) COLLATE RTRIM FROM rt0, t0 WHERE (((((((x'')OR(1569816744)))AND(NULL))) IS TRUE)); -- 0ms;
SELECT ALL CAST(0.5229814413556739 AS REAL) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (((((t0.c0 IN (t0.c2)))AND(((rt0.c2)OR('-1949680135')))))AND(t0.c1)), AVG((t0.c1 IN ()) COLLATE NOCASE), TOTAL((((t0.c1, rt0.c1, rt0.c1))>((1062925342, t0.c1, rt0.c2)))) OVER () FROM t0 WHERE (TIME(((-1133624657)-(NULL)), (x'6234' IN ()), (('612103987')>('')))) LIMIT -1492808007;SELECT (((NOT (rt0.c1))) IS TRUE), CASE WHEN ((t0.c1) BETWEEN (t0.c0) AND (rt0.c1)) THEN t0.c2 ELSE CAST(rt0.c2 AS BLOB) END, GROUP_CONCAT((t0.c0 IN ()) COLLATE RTRIM) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (NOT (((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c2)))) FROM t0 WHERE (((CASE 'MP]0z3Kꖐa'  WHEN 0.02181427828691518 THEN 0.516836314367996 END) NOT BETWEEN ((('-1788089848')AND(0.03789623821154231))) AND (CASE x''  WHEN x'7759' THEN 0.867861316437261 ELSE x'364d' END)));SELECT ALL ((json_extract(t0.c1, t0.c2))<>(CASE rt0.c2  WHEN t0.c1 THEN t0.c1 ELSE t0.c2 END)) FROM t0, rt0 WHERE (((TOTAL_CHANGES())GLOB(CAST(0.465123507353181 AS INTEGER)))) ORDER BY CAST(t0.c1 AS TEXT)  NULLS LAST, (NOT (t0.c1)) COLLATE BINARY  NULLS LAST; -- 0ms;
SELECT DISTINCT t0.c2, (~ ((((t0.c1)) NOT BETWEEN ((rt0.c2)) AND ((t0.c2))))), (((((t0.c1)) NOT BETWEEN ((t0.c1)) AND ((rt0.c2)))) BETWEEN (((rt0.c2)IS(rt0.c0))) AND (((rt0.c1) NOT BETWEEN (t0.c1) AND (rt0.c2)))) FROM t0;SELECT DISTINCT CASE ((rt0.c2)!=(t0.c2))  WHEN ((rt0.c1)+(rt0.c2)) THEN LOWER(t0.c2) END FROM rt0, t0 GROUP BY (~ (CASE WHEN t0.c2 THEN rt0.c1 ELSE t0.c2 END)) HAVING (((0.45952767752266244)) NOT BETWEEN ((x'')) AND ((CAST(t0.c0 AS INTEGER)))); -- 0ms;
SELECT DISTINCT rt0.c2 COLLATE RTRIM COLLATE BINARY, (((((t0.c1)OR(t0.c0)))AND(0.06729567944246062)) IN ()), ((((((((((t0.c0) NOT BETWEEN (x'') AND (t0.c2)))OR(rt0.c2 COLLATE NOCASE)))AND(NULL)))OR(0.07419127524810765)))AND(((rt0.c1)>(rt0.c2)))) FROM rt0, t0 WHERE (COALESCE(NULL COLLATE RTRIM, ((((((((-2.032974028E9)OR(NULL)))AND(0.27353171290023637)))OR('174570506')))OR(0X630f1bd5)))); -- 0ms;
SELECT DISTINCT CAST(((t0.c0)<<(t0.c2)) AS BLOB) FROM rt0, t0 WHERE (((0.6503748910684958)/(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CAST(SUM(x'') AS INTEGER) FROM t0; -- 0ms;
SELECT COUNT(*), CASE rt0.c0 COLLATE BINARY  WHEN ((t0.c0) IS FALSE) THEN (((rt0.c2))<((rt0.c2))) WHEN CAST(t0.c1 AS REAL) THEN ((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) WHEN ((t0.c1) BETWEEN (t0.c2) AND (t0.c2)) THEN ((t0.c1)IS NOT(t0.c0)) END, NULL FROM rt0, t0 WHERE (CAST((+ (NULL)) AS BLOB)); -- 0ms;
SELECT ALL ((CAST(t0.c0 AS BLOB)) ISNULL) FROM t0 GROUP BY ((((((rt0.c1)AND(t0.c2)))AND(rt0.c1))) NOT BETWEEN (((rt0.c0)>=(x''))) AND ((t0.c2 IN (rt0.c1)))), ABS(((rt0.c1) NOT NULL)), (((t0.c1 IN ())) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c1))) AND ((((t0.c2)) BETWEEN ((t0.c0)) AND ((t0.c1)))));SELECT (t0.c2 IN ((~ (t0.c1)))), ((((rt0.c0)>>(rt0.c0))) NOTNULL), 1424170220 FROM t0 WHERE ((- (((798339472)OR(NULL)))));SELECT (((t0.c1)) NOT BETWEEN (((((NULL)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))))) AND ((CASE WHEN rt0.c1 THEN 0.9790154248787669 WHEN t0.c0 THEN rt0.c2 WHEN t0.c1 THEN rt0.c0 ELSE t0.c1 END))) FROM t0, rt0 WHERE (((((CAST(0.7181986831900611 AS TEXT))AND(((NULL) BETWEEN ('<5D') AND (NULL)))))AND((((('')AND(1.12880726E9)))AND(0.6469471015316138))))); -- 0ms;
SELECT ALL MIN(((('.蘒'))<((rt0.c2)))), (('-790433842') BETWEEN (0.21156946983675673) AND ((((-1692316220))<((t0.c1))))), ((t0.c2) BETWEEN ((((t0.c1))>((rt0.c2)))) AND ((- (t0.c0)))) FROM t0, rt0 WHERE (HEX(DISTINCT UNLIKELY(DISTINCT 0.058764036267078934))) ORDER BY (CAST(t0.c2 AS REAL) IN (rt0.c0 COLLATE NOCASE, (~ (rt0.c1)))) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((rt0.c0 IN ())) OVER ( ROWS  CURRENT ROW) FROM t0; -- 0ms;
SELECT DISTINCT LIKELY(((((((((rt0.c1)OR(rt0.c2)))OR(rt0.c0)))OR(rt0.c2)))AND(t0.c0))), 798339472, ((CASE t0.c1  WHEN '690839406' THEN rt0.c0 ELSE t0.c0 END) BETWEEN ((t0.c0 IN ())) AND (((t0.c2)GLOB(t0.c1)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (t0.c0 COLLATE NOCASE IN (MIN(rt0.c0), AVG(rt0.c0))) FROM rt0, t0 WHERE (CASE (('g') IS TRUE)  WHEN (-2084517182 IN ()) THEN ((x'8fff51e1')*(0.617509134613224)) WHEN ((0x632e1d99)>('-1817258883')) THEN NULLIF(NULL, NULL) WHEN ((0.2759630329792726) BETWEEN (9.8984287E7) AND (NULL)) THEN (~ ('N')) ELSE ('-1054725914' IN (0.5441135807990332)) END); -- 0ms;
SELECT COUNT(TOTAL_CHANGES()) OVER (), INSTR(json_array_length('610038913', t0.c0), MIN(t0.c1)), UNLIKELY(DISTINCT t0.c1) FROM rt0, t0; -- 0ms;
SELECT ALL rt0.c1, (NOT ((- (rt0.c1)))), (((t0.c0)) BETWEEN ((((t0.c0) NOTNULL))) AND ((((rt0.c1) NOTNULL)))) FROM t0, rt0 WHERE (((((((((((((-1.788089848E9)OR(x'8643a87d')))AND(NULL)))OR((~ (0.2088631083596718)))))OR(CAST(x'' AS INTEGER))))OR(((NULL)&(0.5380745085139607)))))OR(TIME(x'', NULL, 'jTX2⥝')))); -- 0ms;
SELECT DISTINCT CAST(t0.c0 AS REAL) COLLATE RTRIM FROM t0, rt0 WHERE (((((((0X471dfcc6)OR(x'')))OR(NULL))) NOT BETWEEN (CAST(0.006030359477628866 AS NUMERIC)) AND (CAST(0.20268209208174992 AS BLOB)))); -- 0ms;
SELECT ALL '-980597306', ROW_NUMBER() OVER ( ORDER BY CASE rt0.c0 COLLATE NOCASE  WHEN (~ (rt0.c0)) THEN ((rt0.c1)|(t0.c0)) ELSE LIKELIHOOD(rt0.c1, 0.2458835992163514) END), LIKELY(((rt0.c2) NOT BETWEEN (t0.c2) AND (t0.c0))) FROM rt0 WHERE (NULL);SELECT ((x'' COLLATE RTRIM) NOT NULL) FROM t0, rt0 WHERE ((('H䳠9MxX-,T' COLLATE BINARY)>(CASE '땸)F쓍h?J'  WHEN -1470955900 THEN 0.8563730029218208 ELSE NULL END))) GROUP BY ((t0.c2)-(rt0.c1)) COLLATE NOCASE, (((((rt0.c0)) BETWEEN ((rt0.c2)) AND ((rt0.c2))))GLOB(((t0.c1)=(t0.c1)))), json_array_length((- (t0.c2)), ((t0.c2) IS FALSE)) ORDER BY (((((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0)))) NOT BETWEEN ((((t0.c2)) BETWEEN (('650197158')) AND ((rt0.c2)))) AND (((rt0.c0) IS FALSE)))  NULLS LAST, ((((0Xffffffffb93456c8)>=(rt0.c0)))AND(UNLIKELY(DISTINCT rt0.c2))) DESC; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((0.7574026040321341 IN ())) OVER () FROM rt0 WHERE (CAST('	zGw[,-H풁' COLLATE RTRIM AS NUMERIC)); -- 0ms;
SELECT ((CAST(rt0.c1 AS REAL))|((- (t0.c1)))) FROM rt0, t0; -- 0ms;
SELECT t0.c1 FROM t0, rt0 WHERE (((x'' COLLATE NOCASE) NOT BETWEEN (((0.07806972250756727)OR(x'224f6b24'))) AND (((1.895378469E9)<<('-1426436122'))))); -- 0ms;
SELECT ALL (+ (((t0.c0)%(rt0.c2)))) FROM rt0, t0 WHERE (CAST(((x'cf2d')<=('1277648003')) AS NUMERIC)); -- 0ms;
SELECT DISTINCT json(((rt0.c1) NOT BETWEEN (t0.c0) AND (rt0.c0))), CASE WHEN ((t0.c0)==(rt0.c2)) THEN t0.c0 ELSE (NOT (t0.c2)) END, DENSE_RANK() OVER () FROM t0, rt0 NOT INDEXED WHERE ((((((0.5758646254819244)) NOT BETWEEN (('-1921945776')) AND ((''))))*(((NULL)<(NULL))))); -- 5ms;
SELECT COUNT(((rt0.c1)||(t0.c1))) FILTER(WHERE t0.c2) OVER ( ORDER BY CAST(NULL AS TEXT)  NULLS FIRST), (((x'' IN (rt0.c1)))IS NOT((x'' IN ()))), (((GROUP_CONCAT(t0.c1)))!=((0.13786977379781595))), rt0.c2, CAST(rt0.c0 COLLATE RTRIM AS NUMERIC) FROM rt0, t0; -- 0ms;
SELECT ALL CAST(rt0.c2 COLLATE NOCASE AS TEXT) FROM t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(CASE WHEN t0.c0 THEN t0.c2 ELSE rt0.c0 END) FROM t0, rt0 WHERE ((((((('')AND(0.9637867506798788)))AND(0.6272130660964471)))&(CASE 0.09844729092121407  WHEN '433545018' THEN NULL END))); -- 0ms;
SELECT DISTINCT (((rt0.c2)) BETWEEN ((((((rt0.c2)OR(t0.c2)))OR(t0.c2)))) AND ((NULLIF(DISTINCT t0.c1, rt0.c0)))), CASE '읏[uh?'  WHEN (rt0.c2 IN ()) THEN ((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) END, SUM((((t0.c1)) NOT BETWEEN (('}K')) AND ((t0.c2))) COLLATE BINARY) FROM rt0, t0 WHERE ((((282431186, 1541361101, NULL)) BETWEEN ((CAST('m' AS NUMERIC), NULL, ((((((((x'')AND(x'54d6')))OR(0.9784470492112711)))OR('WP')))OR(x'')))) AND ((((x'')>=(x'')), '', (NOT (NULL)))))); -- 0ms;
SELECT ((COUNT(rt0.c0))-(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c0)))) FROM t0 NOT INDEXED, rt0 WHERE (NULL); -- 0ms;
SELECT ((TOTAL_CHANGES())IS NOT(451530470)) FROM t0 WHERE ((('uQ') NOT BETWEEN (NULL) AND ('-1113165407')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (~ (((rt0.c1) IS TRUE))), CASE WHEN rt0.c2 THEN MAX(t0.c2) ELSE RTRIM(rt0.c0) END, ((t0.c1)%(TOTAL(rt0.c0))) FROM rt0, t0; -- 0ms;
SELECT ((((rt0.c2) BETWEEN (NULL) AND (rt0.c2))) BETWEEN (CAST(t0.c0 AS INTEGER)) AND (((t0.c0)LIKE(t0.c1)))), CASE ((rt0.c0)OR(rt0.c2))  WHEN CASE t0.c2  WHEN t0.c2 THEN t0.c0 ELSE rt0.c0 END THEN ((t0.c1)<>(rt0.c0)) ELSE COUNT(rt0.c1) END, (((rt0.c1, rt0.c0, t0.c2)) NOT BETWEEN ((((t0.c2)=(t0.c2)), CASE WHEN rt0.c0 THEN '-1937684495' ELSE rt0.c0 END, CASE t0.c2  WHEN rt0.c2 THEN rt0.c2 END)) AND ((UPPER(t0.c1), ((rt0.c1)*(t0.c1)), CASE rt0.c0  WHEN rt0.c0 THEN t0.c0 END))) FROM t0 GROUP BY ((rt0.c2 COLLATE BINARY)||(((rt0.c1)AND(t0.c0)))), 1.342648335E9, (((+ (t0.c0)))=(((t0.c2) NOT NULL)));SELECT ALL (((+ (t0.c1))) NOT BETWEEN ((NOT (rt0.c1))) AND ((t0.c1 IN (t0.c2, t0.c0)))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ABS(CAST(t0.c1 AS TEXT)), ((((((t0.c1)>>(t0.c1)))OR((rt0.c1 IN ()))))AND(t0.c1 COLLATE NOCASE)), MIN(((t0.c0)&(rt0.c0))) FROM rt0 WHERE ((((((('-2084517182')) BETWEEN (('q\r!')) AND ((x'')))))>=(((x'' IN ())))));SELECT ((rtreenode(rt0.c1, 0.7396330192031367))+(SQLITE_COMPILEOPTION_USED(t0.c0))) FROM rt0, t0; -- 0ms;
SELECT CASE WHEN (rt0.c0 IN ()) THEN ((t0.c0) NOT BETWEEN (rt0.c1) AND (t0.c2)) END, (((rt0.c1)) NOT BETWEEN ((CAST(0xffffffffacf9cbd6 AS NUMERIC))) AND ((rt0.c2 COLLATE RTRIM))), CASE WHEN ((t0.c1) ISNULL) THEN (t0.c1 IN (t0.c1)) WHEN CAST(rt0.c2 AS REAL) THEN (((rt0.c2))>((rt0.c0))) WHEN TRIM(t0.c0) THEN ((t0.c2)GLOB(355802887)) END FROM rt0, t0 LIMIT 28988953; -- 0ms;
SELECT CASE LIKELY(DISTINCT rt0.c0)  WHEN ((t0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c1)) THEN ((rt0.c0)-(t0.c1)) ELSE (((t0.c0)) BETWEEN ((rt0.c2)) AND ((t0.c0))) END FROM t0, rt0 WHERE (LTRIM((('yz')-('1895378469')), x'' COLLATE RTRIM)); -- 1ms;
SELECT ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c1))) ISNULL) FROM t0 WHERE (((('-1113165407')%(0.6749140461426589)) IN ())) LIMIT 1323369960;SELECT DISTINCT TOTAL(((((t0.c1)OR(t0.c1)))AND(rt0.c0))) OVER () FROM rt0, t0 ORDER BY (+ ((+ (rt0.c1)))) DESC; -- 0ms;
SELECT ALL rt0.c2, CASE ((rt0.c2)IS(rt0.c2))  WHEN ((0.7399164416714478)|(t0.c0)) THEN TYPEOF(DISTINCT rt0.c1) END, ((((((x'')+(rt0.c2)))OR(((((((((t0.c1)AND(t0.c1)))AND(t0.c1)))OR(t0.c0)))OR(x'')))))OR(CASE WHEN t0.c0 THEN rt0.c0 ELSE t0.c0 END)) FROM rt0, t0 ORDER BY ((((t0.c2 IN (rt0.c2, t0.c0))))==((((((rt0.c2)AND(rt0.c1)))OR(rt0.c0))))), '-0.0'; -- 0ms;
SELECT DISTINCT (((((((t0.c2))>((t0.c0))))AND((- (t0.c0)))))OR((rt0.c2 IN (t0.c2)))) FROM rt0, t0 WHERE (UPPER(DISTINCT x'')); -- 0ms;
SELECT DISTINCT ((((((((((((t0.c0)OR(t0.c2)))OR(t0.c2)))AND((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c1))))))OR(((((x'')AND(t0.c0)))AND(t0.c1)))))AND(AVG(t0.c2))))AND(((rt0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)))), ((((((((((((((t0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(t0.c1)))AND(rt0.c2)))AND(0X6b22b927)))=(((t0.c1)<>(rt0.c1)))), ((((((((((((((rt0.c0) BETWEEN (rt0.c0) AND (t0.c2)))AND(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR(((t0.c0) IS FALSE))))AND(COUNT(*))))OR(((t0.c0)LIKE(t0.c0)))))AND(((((rt0.c0)OR(t0.c1)))AND(t0.c1)))))AND(((((rt0.c0)AND(t0.c1)))AND('-471481134')))) FROM t0, rt0 WHERE (((CASE WHEN NULL THEN 0.02272488861313593 END)>>((('m ') NOT BETWEEN (-2007980861) AND (NULL))))) ORDER BY ((TRIM(DISTINCT t0.c2)) ISNULL) ASC  NULLS FIRST, ((((((rt0.c2)OR(rt0.c2)))OR((x'e511' IN (t0.c1, rt0.c1)))))AND(((rt0.c1)IS NOT(rt0.c1)))); -- 1ms;
SELECT ALL NTILE((((((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c2)))) ISNULL)) OVER () FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(((((t0.c1)OR(rt0.c2)))AND(rt0.c1)) AS REAL) FROM t0, rt0 WHERE (CASE UNLIKELY(0.7329277640957396)  WHEN LOWER(DISTINCT x'') THEN ('-607851449' IN ('z%e')) ELSE ((NULL)<<(0xffffffffc12228e6)) END) GROUP BY CASE ((((t0.c2)OR(t0.c2)))AND(rt0.c0))  WHEN CAST(rt0.c1 AS TEXT) THEN ((t0.c1)LIKE(rt0.c2)) WHEN CAST(t0.c0 AS INTEGER) THEN (~ (rt0.c0)) WHEN x'' THEN ((rt0.c1) NOT BETWEEN (rt0.c2) AND (t0.c1)) ELSE ((t0.c1)<<(rt0.c1)) END HAVING t0.c2; -- 1ms;
SELECT DISTINCT CASE ((t0.c1)<(rt0.c1))  WHEN ((((rt0.c0)AND(t0.c2)))OR(t0.c2)) THEN ((t0.c1) IS FALSE) WHEN CAST(rt0.c1 AS REAL) THEN (t0.c1 IN ()) WHEN (('') NOT BETWEEN (t0.c0) AND ('Y9uyec')) THEN rt0.c1 COLLATE NOCASE WHEN ((((rt0.c2)AND(t0.c2)))OR(rt0.c2)) THEN NULLIF(DISTINCT t0.c0, t0.c1) WHEN 0.8147289932822269 COLLATE NOCASE THEN (('Aum')<>(rt0.c2)) END FROM rt0 WHERE ((CASE 0.3161762244664784  WHEN 0.6851767510464654 THEN 0.871164744547178 END IN ())) GROUP BY CAST(CAST(t0.c1 AS INTEGER) AS INTEGER), ((rt0.c2 COLLATE BINARY)LIKE(((t0.c0)/(t0.c1)))), (NOT (((t0.c0)-(t0.c1)))) LIMIT -320710465;SELECT DISTINCT TOTAL((('')AND(0.015708986235840383))) FILTER(WHERE (NOT (((((rt0.c1)AND(rt0.c1)))AND(0.36597960150540976))))) OVER () FROM t0, rt0 GROUP BY (((('-449892909')+(t0.c1)))>=((t0.c1 IN ()))); -- 0ms;
SELECT ((CAST(t0.c0 AS NUMERIC)) IS TRUE), (((+ (t0.c1)))AND((((('-225401976')AND(t0.c1)))AND(t0.c1)))), (((((rt0.c1, t0.c1, t0.c2)) BETWEEN (('80023715', rt0.c0, rt0.c2)) AND ((rt0.c1, 'Eྫ)8(*n%&', x'')))) NOT NULL) FROM t0, rt0 WHERE ((((x'')) BETWEEN ((x'ede4')) AND ((CASE WHEN NULL THEN 'J/' END)))); -- 0ms;
SELECT ((((((t0.c1)AND(t0.c0)))OR(t0.c2)))GLOB(((t0.c1) NOT BETWEEN (t0.c1) AND (-369934666)))), ((((t0.c2)AND(t0.c2)))OR(t0.c2)) COLLATE NOCASE, CAST(UNLIKELY(DISTINCT t0.c2) AS BLOB) FROM rt0, t0 ORDER BY (((((t0.c0) NOT BETWEEN (t0.c0) AND (t0.c1))))=(((NOT (rt0.c0))))) DESC, (('eK5ze\rC')OR(((rt0.c0)LIKE(rt0.c1))))  NULLS FIRST, (((rt0.c0) NOT BETWEEN (0Xffffffffb28d939c) AND (t0.c0)) IN ()) DESC  NULLS LAST; -- 0ms;
SELECT rt0.c2 FROM rt0 WHERE (COALESCE(((NULL) ISNULL), HEX(DISTINCT '497270833'))) ORDER BY ((rt0.c0 COLLATE NOCASE)+((((t0.c0, rt0.c2, t0.c2))!=((rt0.c0, t0.c0, t0.c1))))) DESC  NULLS FIRST;SELECT ((((('656815447' IN (t0.c1)))AND(((((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c1)))AND(rt0.c0)))AND(t0.c0)))OR(t0.c1)))AND(t0.c1)))))OR('1546341252')) FROM t0;SELECT ALL ((CASE t0.c1  WHEN t0.c1 THEN t0.c2 WHEN t0.c0 THEN t0.c2 WHEN t0.c2 THEN t0.c0 ELSE rt0.c1 END) IS FALSE), SQLITE_COMPILEOPTION_GET((- (t0.c2))), (((rt0.c0 IN ()))*(MAX(rt0.c1))), ((((((t0.c2) IS FALSE))AND(((t0.c0)<(rt0.c0)))))OR(CASE t0.c0  WHEN t0.c2 THEN t0.c0 WHEN t0.c2 THEN rt0.c0 WHEN t0.c2 THEN 1.342648335E9 ELSE rt0.c2 END)), TOTAL(CAST(rt0.c2 AS INTEGER)) OVER ( PARTITION BY (('') NOT BETWEEN (CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 ELSE t0.c2 END) AND ((t0.c1 IN ()))), ((TRIM(NULL, t0.c0)) BETWEEN (((t0.c1) BETWEEN (69473971) AND (t0.c2))) AND (rt0.c2))) FROM t0;SELECT DISTINCT RANK() OVER (), COUNT(((rt0.c2) BETWEEN (t0.c2) AND (rt0.c0))) OVER (), NULL FROM t0, rt0 WHERE ((((NULL, NULL, '筼k4I)?ἥU')) BETWEEN ((0.9117215830818094, (0Xffffffffa268b20c IN ()), (('114286955') IS TRUE))) AND ((NULLIF(0.981903263468586, NULL), ((NULL) BETWEEN (0.05294746843115927) AND (0.03707160634481432)), ((NULL) NOTNULL))))); -- 0ms;
SELECT ((('448757156', t0.c1, rt0.c2)) NOT BETWEEN ((((rt0.c1) BETWEEN (rt0.c0) AND (t0.c2)), AVG(x''), GROUP_CONCAT(0.4117484619123002))) AND (('896449546', (t0.c1 IN ()), ((t0.c1)<>(rt0.c2))))) FROM t0;SELECT DISTINCT CASE WHEN (x'' IN ()) THEN (rt0.c2 IN (NULL, rt0.c0)) WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c0)) THEN CASE rt0.c2  WHEN rt0.c0 THEN t0.c0 ELSE rt0.c0 END WHEN CASE t0.c0  WHEN t0.c0 THEN rt0.c2 END THEN (- (t0.c2)) ELSE t0.c1 END, ((t0.c0 COLLATE BINARY) NOT BETWEEN (CASE WHEN t0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c0 WHEN rt0.c1 THEN t0.c2 ELSE t0.c1 END) AND (rt0.c0 COLLATE BINARY)), ((((+ (t0.c2))))>((CAST(t0.c2 AS NUMERIC)))) FROM rt0, t0; -- 0ms;
SELECT ALL ((((t0.c1)<=(t0.c0))) NOTNULL) FROM rt0, t0 WHERE (CAST(HEX(DISTINCT '0.2821780940419588') AS TEXT)); -- 0ms;
SELECT DISTINCT CAST(((rt0.c0) NOTNULL) AS INTEGER) FROM t0, rt0; -- 0ms;
SELECT DISTINCT rt0.c2 FROM rt0, t0 WHERE (((CAST(8.70137684E8 AS NUMERIC)) BETWEEN ((- (-1.565752049E9))) AND (((x'') NOT NULL)))); -- 0ms;
SELECT DISTINCT (((rt0.c0)-(x'')) IN (CAST(rt0.c0 AS TEXT), t0.c2 COLLATE RTRIM)) FROM rt0, t0 WHERE ((((('9䋻F륍cE_') NOT BETWEEN (0.6939189834471923) AND (NULL)))||((x'' IN ())))); -- 1ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt0.c0) NOT NULL), 0.7301534630652404), (((((((rt0.c1)AND(NULL)))AND(NULL))))<>(((~ (rt0.c1))))), ((('m''n%2'))=((((t0.c0) NOTNULL)))) FROM t0 WHERE (((NOT ('e~*yZ]j')) IN ()));SELECT ALL (- (((((x'c2e5')OR(1188188072)))OR(rt0.c2)))), TYPEOF(DISTINCT CASE rt0.c0  WHEN t0.c2 THEN t0.c0 END), ROW_NUMBER() OVER () FROM t0 WHERE ((((('941344001') NOTNULL)) IS TRUE));SELECT DISTINCT CAST(((rt0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)) AS TEXT) FROM rt0, t0; -- 0ms;
SELECT DISTINCT (- (rt0.c1)) COLLATE RTRIM FROM rt0 ORDER BY ((((((((((t0.c1)AND(t0.c0)))AND(t0.c0)))AND(rt0.c1)))AND(rt0.c2))) NOTNULL);SELECT RANK() OVER () FROM rt0 ORDER BY ((((((t0.c2)OR(rt0.c1)))AND(rt0.c2)))==((((rt0.c0, t0.c2, rt0.c0))<>(('-1813028622', t0.c1, rt0.c1)))))  NULLS LAST;SELECT rt0.c0 FROM t0, rt0; -- 0ms;
SELECT CAST(CASE WHEN rt0.c0 THEN rt0.c1 END AS REAL), ((((rt0.c2)-(t0.c2))) BETWEEN (((t0.c0) NOT NULL)) AND (CASE t0.c1  WHEN rt0.c0 THEN rt0.c0 WHEN t0.c1 THEN t0.c2 WHEN x'b21d' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c0 WHEN t0.c2 THEN t0.c1 END)), ((((t0.c2) IS TRUE))GLOB(((rt0.c1)>(rt0.c0)))) FROM t0, rt0 WHERE (((((NULL)|(-1.153763477E9)))OR((((x'', '&』573:650:613T77T6811789200574965323-1682-745 wC?dyf', '0.617509134613224')) NOT BETWEEN ((0.8978272308823194, NULL, '໹Tq}G/<~j')) AND ((NULL, 'XQ쨗', '-1881330920')))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c1)))AND('')))AND(rt0.c2))) BETWEEN (((t0.c0) NOTNULL)) AND (((t0.c1)>=(t0.c0)))) FROM t0 WHERE (((0.8290434035789758)%(8.70137684E8)));SELECT CAST(SUM(rt0.c2) AS INTEGER), (+ (SUM(x''))), ((((t0.c0) IS FALSE)) NOT BETWEEN (CASE WHEN t0.c1 THEN rt0.c1 ELSE rt0.c0 END) AND ((x'' IN ()))) FROM rt0 WHERE (((CASE WHEN x'' THEN 0.4141289107649069 ELSE 'O㰌' END) NOT BETWEEN (HEX(NULL)) AND (CASE 'H5[\'  WHEN NULL THEN NULL WHEN x'' THEN 0.25362598939933123 WHEN 0xffffffff9b5e3866 THEN 1.04430255E8 ELSE x'9523' END)));SELECT ALL CASE COUNT(rt0.c1)  WHEN CAST(t0.c2 AS REAL) THEN ((rt0.c2) NOT BETWEEN (rt0.c2) AND ('0.1535422093771206')) END FROM rt0, t0 WHERE (((CAST(NULL AS INTEGER)) ISNULL)) LIMIT -1437095385 OFFSET 114286955; -- 1ms;
SELECT DISTINCT (((((rt0.c1)) BETWEEN ((rt0.c1)) AND ((rt0.c2)))) IS TRUE), ((((t0.c1) BETWEEN (rt0.c1) AND (t0.c2))) NOT BETWEEN (MAX(0.9095036179129824)) AND ((NOT (rt0.c0)))), (((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c1))) COLLATE BINARY FROM rt0, t0 ORDER BY x''; -- 0ms;
SELECT DISTINCT COUNT(rt0.c2), COUNT(*), GROUP_CONCAT(((rt0.c1) ISNULL)) OVER () FROM rt0 WHERE ('g*') GROUP BY x'', ((439608695)*(TRIM(DISTINCT rt0.c2, rt0.c2))), '覴q~('; -- 0ms;
SELECT DISTINCT t0.c2 COLLATE BINARY FROM rt0, t0; -- 0ms;
SELECT ALL CASE ((rt0.c2)OR(rt0.c2))  WHEN ((t0.c2)||(t0.c0)) THEN t0.c1 COLLATE BINARY END FROM t0 WHERE (((('', -1020869779, '-1054725914')) BETWEEN ((0x29a00d64, ((((x'')OR(NULL)))AND(451530470)), ((((8.0023715E7)OR(NULL)))OR(-1.063727036E9)))) AND ((((((((((x'')OR(0.40544087709650234)))AND('')))OR(0.7588084543922425)))AND(NULL)), (('-820338391')GLOB(x'')), (('彮s') NOT NULL)))));SELECT DISTINCT (((((((rt0.c2)) NOT BETWEEN ((-1813028622)) AND ((t0.c1))))OR(((rt0.c2) NOTNULL))))OR(((((rt0.c0)AND(NULL)))OR(t0.c0)))), COUNT(*), ((CAST(t0.c0 AS BLOB)) ISNULL) FROM rt0 WHERE (CAST((('1570047655') IS FALSE) AS REAL));SELECT ((CAST(t0.c1 AS BLOB))>(rt0.c1 COLLATE RTRIM)) FROM rt0 WHERE ((((NOT ('0.7827335984735471')))<=((114286955 IN ()))));SELECT ALL t0.c0 COLLATE RTRIM, 0xffffffffc35a8b42, (NOT ((((t0.c2)) BETWEEN ((t0.c0)) AND ((rt0.c0))))) FROM rt0, t0 WHERE (((((((x'')LIKE(NULL)))AND(CASE WHEN 1.0382748E9 THEN NULL END)))AND(CAST(x'' AS NUMERIC)))); -- 0ms;
SELECT AVG((- (rt0.c1))) FROM rt0, t0 WHERE (((((-1537328434)>=('1700887057')))>=((- (0.08038522004626136))))); -- 0ms;
SELECT DISTINCT (+ (((((t0.c0)AND(rt0.c1)))AND(rt0.c2)))) FROM rt0;SELECT (((((t0.c1))<((rt0.c1)))) BETWEEN ((((t0.c0)) BETWEEN ((t0.c0)) AND ((rt0.c1)))) AND ((t0.c1 IN ()))) FROM rt0 WHERE (((((0x70f92e25)/(0.00743999535304618))) BETWEEN (((x'')OR(NULL))) AND (((0X43483b5c) BETWEEN (0.8686787871663001) AND (NULL))))) GROUP BY rt0.c0, rt0.c0, t0.c1;SELECT ALL TOTAL((~ (rt0.c0))), ROW_NUMBER() OVER (), (((x'4202' IN (t0.c0, 0.802200428880088)))<<(((rt0.c1) IS TRUE))) FROM rt0 WHERE (CAST(((0.7840111282847082) NOTNULL) AS TEXT));SELECT ABS(((rt0.c1)*(rt0.c1))) FROM rt0, t0 WHERE (CAST('2007104230' AS REAL) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT ((t0.c2)IS(GROUP_CONCAT(rt0.c0))), (~ (((rt0.c2) BETWEEN (t0.c1) AND (t0.c0)))), CUME_DIST() OVER (), ((HEX(t0.c0)) BETWEEN ((((t0.c2, rt0.c1, rt0.c0))==((NULL, t0.c1, rt0.c1)))) AND (((rt0.c2)/(t0.c2)))), t0.c1 FROM t0 WHERE ((((((+ (x'')))AND(((0X95d1fcf) IS TRUE))))AND((('j돮8k')OR(0.30887380144985666))))) UNION ALL SELECT DISTINCT ((((t0.c2)AND(rt0.c0)))AND(rt0.c0)) COLLATE RTRIM, ((MIN(t0.c2)) NOT BETWEEN (t0.c2) AND (t0.c0 COLLATE NOCASE)), GROUP_CONCAT(((((((((t0.c0)AND(t0.c0)))OR(t0.c1)))OR(t0.c1)))AND(t0.c2))) OVER ( ORDER BY (NOT (((((t0.c0)OR(t0.c2)))OR(t0.c0)))) ASC  NULLS LAST, json_valid(UNLIKELY(t0.c0)) ASC  NULLS FIRST, ((t0.c1) IS FALSE) COLLATE NOCASE ASC GROUPS BETWEEN  CURRENT ROW AND ((((((t0.c0) NOT BETWEEN (t0.c1) AND (t0.c0)))OR((t0.c0 IN (rt0.c1)))))AND(0.9375775216095059)) PRECEDING), x'', GROUP_CONCAT(((((t0.c0)AND(rt0.c2)))AND(t0.c0))) OVER ( ORDER BY rt0.c0 DESC  NULLS FIRST) FROM t0 WHERE ((((((x'1255')) NOT BETWEEN ((NULL)) AND ((527550799)))) NOT BETWEEN ('3y') AND ((((x''))>((NULL))))));SELECT ALL ((((((t0.c0, rt0.c1, t0.c2)) BETWEEN ((rt0.c1, rt0.c1, rt0.c2)) AND ((t0.c2, rt0.c0, rt0.c1))), ((((t0.c0)AND(t0.c0)))OR(rt0.c0)), NULL))>((((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)), (t0.c1 IN (t0.c1)), (~ (t0.c2))))) FROM t0 GROUP BY CAST(rt0.c1 AS TEXT) HAVING ((LIKELIHOOD(t0.c0, 0.41492547361663934)) IS TRUE) LIMIT -1884149947 OFFSET 323354005;SELECT DISTINCT (NULL IN ()), (t0.c0 IN ()), SQLITE_SOURCE_ID() FROM rt0; -- 0ms;
SELECT ALL ((((((t0.c0) NOT NULL))OR(((t0.c1) IS FALSE))))OR(((rt0.c0)GLOB(t0.c1)))) FROM rt0, t0 WHERE (((((('''T?wAROwO' IN (0.6063618794415012)))AND((('	{b6zsp') BETWEEN (x'') AND (0xffffffff8bca3df9)))))OR(CASE -2000372695  WHEN 0.10958775071184368 THEN x'38f5' END))); -- 0ms;
SELECT ALL COUNT(*) FROM t0, rt0; -- 0ms;
SELECT ALL ((((rt0.c1)LIKE(rt0.c1)))*(((t0.c2)LIKE(t0.c0)))) FROM rt0 WHERE (load_extension((NOT ('')), (((',<lD-I_finitymga')) NOT BETWEEN ((x'')) AND ((x'')))));SELECT (- (LTRIM(rt0.c0))) FROM rt0, t0 WHERE (CAST(('\nXd.' IN ()) AS BLOB)); -- 0ms;
SELECT ALL (((rt0.c2)) BETWEEN (((~ (t0.c2)))) AND ((NULL))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (+ ('P''8A*埓94F')), GROUP_CONCAT(((rt0.c2)GLOB(t0.c0))) OVER (), LTRIM((t0.c0 IN (t0.c0)), ((t0.c1)%(t0.c2))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2)IS NOT(t0.c0)) COLLATE NOCASE FROM t0 FULL OUTER JOIN rt0 ON (((rt0.c2)) BETWEEN ((NULL)) AND (('-570119774'))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM t0, rt0 LIMIT 899650061; -- 0ms;
SELECT DISTINCT (+ (((rt0.c2) BETWEEN (t0.c0) AND (t0.c2)))) FROM rt0 WHERE (CASE ((NULL)IS NOT(NULL))  WHEN LOWER('-105325149') THEN 0xffffffff939c1704 ELSE '1812392876' END) ORDER BY LIKELIHOOD(DISTINCT ((t0.c2)||(t0.c2)), 0.4227183404322098) ASC  NULLS LAST LIMIT -1053492846 OFFSET -1051558187;SELECT ALL ((((rt0.c2 IN (t0.c2)), ((rt0.c0) BETWEEN (t0.c1) AND (t0.c0)), ((t0.c1) NOT NULL), rt0.c1 COLLATE NOCASE, (+ (rt0.c1))))=((t0.c0 COLLATE BINARY, '1025000187', NULL, ((t0.c1)<<(rt0.c0)), (- (rt0.c2))))) FROM rt0, t0 WHERE ((UNLIKELY(0.024089301770905625) IN ())); -- 0ms;
SELECT DISTINCT PERCENT_RANK() OVER () FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((t0.c1) NOT BETWEEN (t0.c1) AND (t0.c0))) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END AS BLOB), ((load_extension(rt0.c2, '1602897400'))<(CASE WHEN '' THEN rt0.c1 WHEN rt0.c1 THEN rt0.c1 WHEN t0.c0 THEN rt0.c2 WHEN t0.c2 THEN t0.c1 WHEN rt0.c1 THEN t0.c2 ELSE NULL END)), 0.5986535047806438 FROM t0, rt0; -- 0ms;
SELECT ((((t0.c1)AND(t0.c1)))OR(x'')) COLLATE RTRIM FROM t0, rt0; -- 0ms;
SELECT DISTINCT COUNT(t0.c0 COLLATE BINARY COLLATE BINARY) FROM t0, rt0 WHERE (CAST(((0X3d1842fb) NOTNULL) AS BLOB)); -- 1ms;
SELECT ALL (((+ (rt0.c1)))|('-625196978')) FROM t0 GROUP BY ((NULLIF(DISTINCT t0.c1, t0.c1))/(((t0.c1)||(t0.c2)))), (~ (((t0.c2)|(t0.c0)))), ((0.12934890235847873) NOTNULL) ORDER BY ((CASE WHEN t0.c0 THEN rt0.c0 END) ISNULL)  NULLS FIRST;SELECT ALL ((((t0.c1)*(t0.c1)))>=('|]' COLLATE RTRIM)) FROM t0, rt0; -- 0ms;
SELECT DISTINCT TOTAL(CASE WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c1 THEN t0.c1 END) FROM rt0 ORDER BY ((((((((((rt0.c2)AND(t0.c1)))AND(x'')))OR(t0.c1)))AND(t0.c0)))>=((((rt0.c0)) BETWEEN ((t0.c1)) AND (('')))))  NULLS LAST LIMIT 690839406;SELECT DISTINCT CASE COUNT(rt0.c2)  WHEN (t0.c1 IN ()) THEN t0.c1 ELSE HEX(DISTINCT t0.c0) END FROM t0, rt0 WHERE ((('' IN ()) IN (MAX(NULL, '-1e500', -2015559539, 'Z㰌6', -1.788089848E9, x'2763')))); -- 0ms;
SELECT DISTINCT TYPEOF(t0.c1 COLLATE RTRIM), ((CAST(rt0.c2 AS TEXT))<>(((t0.c0) BETWEEN (rt0.c1) AND (rt0.c1)))), (~ ((- ('繲5EK9rNv')))) FROM rt0, t0 GROUP BY (((t0.c1)) BETWEEN (((- (' 혆')))) AND (((t0.c1 IN ())))); -- 0ms;
SELECT ALL (((- (NULL))) NOTNULL) FROM rt0, t0 GROUP BY (((NULL IN (t0.c0))) NOT NULL); -- 1ms;
SELECT DISTINCT NULL FROM t0 WHERE (((CASE WHEN '0.27688743406393057' THEN -1.949680135E9 END)OR(((NULL) NOT BETWEEN (0x3852f090) AND (NULL))))) GROUP BY ((((CAST(rt0.c1 AS NUMERIC))OR(CAST(t0.c1 AS INTEGER))))OR(rt0.c2)) HAVING ((t0.c1 COLLATE BINARY) BETWEEN (((rt0.c2) IS FALSE)) AND ((0x292d5f6e IN ())));SELECT DISTINCT 0.9302765615193443, (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((t0.c2))) COLLATE BINARY, (((((((((NOT (t0.c2)))OR(rt0.c0)))OR(CASE WHEN t0.c2 THEN t0.c0 WHEN rt0.c2 THEN t0.c0 WHEN t0.c0 THEN t0.c2 END)))AND(((x'')>(t0.c2)))))AND(CAST(t0.c0 AS TEXT))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE NOCASE AS NUMERIC) FROM t0 WHERE (LIKELY(DISTINCT ((x'')-(x''))));SELECT DISTINCT SQLITE_COMPILEOPTION_USED((+ (rt0.c2))) FROM t0 GROUP BY CASE CASE WHEN t0.c0 THEN t0.c1 WHEN rt0.c1 THEN t0.c1 WHEN rt0.c1 THEN rt0.c2 END  WHEN x'' THEN CASE WHEN rt0.c0 THEN t0.c0 END ELSE ((t0.c0) NOT NULL) END HAVING (((t0.c1)) NOT BETWEEN ((rt0.c0)) AND ((t0.c0))) COLLATE RTRIM;SELECT ALL MIN((- (t0.c2))) FROM rt0 WHERE (((LOWER(0.08230646932099595)) NOTNULL)) LIMIT -1020869779 OFFSET 1703473825;SELECT ALL LIKELIHOOD(DISTINCT (((t0.c2)) NOT BETWEEN ((rt0.c2)) AND ((t0.c1))), 0.26744684326259704), (((rt0.c1)) NOT BETWEEN (((NOT (t0.c1)))) AND ((((0.8884937267907762) IS TRUE)))), CASE WHEN CASE WHEN t0.c2 THEN t0.c1 END THEN x'' WHEN ((t0.c2)-(t0.c0)) THEN ((t0.c0) ISNULL) WHEN ((rt0.c0) BETWEEN (t0.c1) AND (rt0.c0)) THEN LIKELY(DISTINCT t0.c2) END FROM rt0 GROUP BY (((rt0.c2)) BETWEEN ((((t0.c0)<<(t0.c2)))) AND ((((((((((rt0.c1)OR(rt0.c1)))OR(t0.c2)))AND(t0.c0)))OR(t0.c1))))) HAVING ((((t0.c2) NOT NULL))&(CAST(rt0.c2 AS NUMERIC)));SELECT DISTINCT (- (CASE t0.c2  WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN rt0.c0 WHEN t0.c1 THEN rt0.c1 ELSE t0.c1 END)) FROM t0 WHERE (NULLIF(x'8df3' COLLATE NOCASE, (('VD')GLOB(0.4799406059397824)))) ORDER BY ((((((t0.c0, rt0.c2, t0.c0))!=((rt0.c0, rt0.c2, rt0.c0)))))!=((rt0.c1)));SELECT ALL ((t0.c2) NOT BETWEEN (0xffffffffbdb6b598) AND (rt0.c2)) COLLATE BINARY, DENSE_RANK() OVER (), CASE WHEN ((rt0.c2)AND(rt0.c1)) THEN rt0.c1 ELSE MIN(rt0.c0) END FROM rt0, t0 WHERE ((((('&y')IS(0Xffffffff86d34734)))||(((-1.112099432E9) BETWEEN (x'77e0') AND ('m'))))); -- 0ms;
SELECT ((+ (rt0.c2)) IN (CASE WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN t0.c1 WHEN NULL THEN t0.c1 END)) FROM rt0, t0; -- 0ms;
SELECT ALL ((MAX(t0.c1))IS NOT(CASE t0.c2  WHEN t0.c1 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0, t0 WHERE (((CAST(x'' AS TEXT)) NOT NULL)) GROUP BY 0.9195533191792856 HAVING ((((((t0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c0)))AND(x'')))AND(((((((((rt0.c0)AND(t0.c2)))AND(rt0.c2)))AND(rt0.c1)))OR(t0.c1)))); -- 0ms;
SELECT TOTAL((- (t0.c2))) OVER () FROM rt0, t0 WHERE (TYPEOF(DISTINCT ((0.8098915137351544) BETWEEN ('1790389118') AND (NULL)))); -- 0ms;
SELECT DISTINCT TOTAL((((rt0.c1, rt0.c0, rt0.c0)) NOT BETWEEN ((t0.c2, rt0.c0, t0.c0)) AND ((x'', rt0.c1, t0.c0)))) FROM rt0, t0 WHERE ((((NULL)!=(x'')) IN (((NULL) IS FALSE), CASE x''  WHEN x'' THEN 0.3768892301199741 ELSE x'' END))); -- 0ms;
SELECT 1543995698, COUNT(t0.c1) OVER (), CAST(NULL AS REAL) FROM t0 WHERE (((('{}')) NOT BETWEEN ((((('')) BETWEEN ((NULL)) AND (('1539159587'))))) AND (((x'' IN ()))))); -- 0ms;
SELECT DISTINCT LAST_VALUE(NULL COLLATE NOCASE) OVER (), ((t0.c2 COLLATE NOCASE)*(CASE rt0.c1  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c1 END)), rt0.c2 COLLATE BINARY FROM t0 WHERE ((((((((((('468674730')OR('')))AND(NULL)))AND('-837439380')))AND(-1.113165407E9))) NOT BETWEEN (((0.6033874393782093)|('ld%'))) AND (']w')));SELECT DISTINCT 1128807260 FROM t0 GROUP BY ((TRIM(t0.c1, '550059665'))>=((rt0.c0 IN ()))) LIMIT 2017359890 OFFSET -685508901; -- 0ms;
SELECT ALL ((((((rt0.c2)OR(x'869d')))OR(rt0.c1))) BETWEEN (((t0.c0)%(rt0.c0))) AND (((rt0.c0) NOT BETWEEN (t0.c0) AND (0.9316441089228823)))) FROM t0 WHERE (CASE WHEN ('-1411756832' IN (NULL)) THEN UNLIKELY(DISTINCT NULL) WHEN (- ('')) THEN CAST(0.7028647547485652 AS INTEGER) WHEN (('-442157233') BETWEEN ('[r') AND (NULL)) THEN ((('50103826', 0.7926587852367306, x'')) BETWEEN (('-168845071', 0xffffffffed99a34d, '676532097')) AND (('-2032974028', x'', 333534312))) ELSE x'' END);SELECT DISTINCT (((((t0.c2) NOT NULL)))>=((((rt0.c2)+(t0.c1))))), ((0xffffffffae2b17b0)<(((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))), TRIM(DISTINCT ((rt0.c2)<=(rt0.c0))) FROM rt0 WHERE (((CAST(NULL AS BLOB)) NOT BETWEEN (((((NULL)AND(0x1a133eef)))AND(''))) AND (((x'') IS TRUE)))) LIMIT -586449208 OFFSET -319291235;SELECT ALL ((((TYPEOF(DISTINCT t0.c1))OR(LOWER(t0.c1))))OR((+ (t0.c1)))) FROM t0, rt0 WHERE ((((((x'4070'))<((-2132804270)))) NOT NULL)); -- 0ms;
SELECT t0.c0 FROM t0 NOT INDEXED WHERE ((((x'' COLLATE NOCASE))!=((CASE 0.18267941950887656  WHEN '1765013780' THEN 1136345337 END)))); -- 0ms;
SELECT ALL (+ (0.5787396010901376)), SUM('0.24616054254944741') OVER (), ((x'')>=(((t0.c2)OR(rt0.c2)))) FROM rt0 WHERE (((((((x'1715') ISNULL))AND(CASE 0xffffffff83ac6827  WHEN NULL THEN 0.06854726740266692 ELSE 'EvᎾuP' END)))OR((-1.017476286E9 IN ('-239563261', 0.026773043817590603)))));SELECT ((((((rt0.c2)IS(NULL)))AND(((((rt0.c1)OR(t0.c2)))OR(rt0.c0)))))OR(((rt0.c0)|(t0.c0)))), FIRST_VALUE(t0.c2) OVER (), GROUP_CONCAT(GROUP_CONCAT(CAST(rt0.c1 AS TEXT))), ((CASE WHEN t0.c1 THEN t0.c1 WHEN t0.c0 THEN t0.c1 WHEN rt0.c2 THEN t0.c1 END)IS NOT(((rt0.c0)<=('1-500000a')))), (((rt0.c0) NOT BETWEEN (rt0.c1) AND (t0.c1)) IN ()) FROM t0 ORDER BY CASE CASE WHEN rt0.c1 THEN rt0.c2 ELSE rt0.c0 END  WHEN ((((((((rt0.c0)AND(NULL)))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c2)) THEN ((t0.c2)>=(t0.c0)) WHEN ((((t0.c1)AND(t0.c1)))AND(rt0.c0)) THEN rt0.c0 WHEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((rt0.c2))) THEN ((((rt0.c2)OR(t0.c2)))OR(t0.c2)) END DESC;SELECT (~ (CAST(rt0.c2 AS REAL))) FROM t0, rt0 GROUP BY ((t0.c2)OR(((t0.c2) NOT BETWEEN (t0.c0) AND (t0.c2)))) HAVING (((((rt0.c0) IS FALSE)))>((((rt0.c0) NOT BETWEEN (t0.c1) AND (t0.c2))))); -- 0ms;
SELECT DISTINCT ((((((((((t0.c2)AND(t0.c2)))OR(rt0.c0)))AND(x'bf27')))OR(rt0.c2))) NOT BETWEEN (((t0.c1)<(rt0.c2))) AND (((t0.c1) ISNULL))) FROM rt0, t0 WHERE ((((((''))>=((0.9784470492112711))))OR((((1743285929))=((-1020869779)))))); -- 0ms;
SELECT DISTINCT CAST(rt0.c0 COLLATE BINARY AS REAL) FROM rt0 ORDER BY ((t0.c1 COLLATE BINARY) NOTNULL)  NULLS LAST;SELECT DISTINCT SUM(CAST(t0.c1 AS NUMERIC)) OVER () FROM rt0 WHERE (CAST(IFNULL(DISTINCT 0.3772345338227502, 0x3a9655b1) AS REAL));SELECT ALL SUM(CASE WHEN NULL THEN NULL ELSE 0.3958308863852289 END) FROM rt0 GROUP BY CASE rt0.c1  WHEN rt0.c0 THEN t0.c0 WHEN t0.c1 THEN 'a潐' WHEN rt0.c2 THEN t0.c2 WHEN t0.c1 THEN rt0.c1 WHEN t0.c0 THEN t0.c0 END COLLATE BINARY;SELECT ALL (rt0.c1 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT ALL ((((t0.c1)OR(NULL)))OR(t0.c1)) COLLATE RTRIM FROM t0 WHERE (CASE (('')IS(-677021685))  WHEN (('') NOT BETWEEN (x'') AND ('0.18050260937940799')) THEN (1563723077 IN ('1128563913')) WHEN (NULL IN (NULL)) THEN (('') NOTNULL) WHEN COALESCE('', '1438798074', '', NULL) THEN UPPER(x'') ELSE '-1328579087' END); -- 0ms;
SELECT DISTINCT ((((rt0.c2)<=(rt0.c1))) IS FALSE) FROM rt0, t0; -- 0ms;
SELECT DISTINCT ((((((((0.9024045072097941)OR((NOT (t0.c2)))))AND((+ (0.30173001303285807)))))OR(CAST(t0.c1 AS TEXT))))OR(((rt0.c1)-(t0.c1)))) FROM t0;SELECT ALL COUNT(*) FROM rt0 WHERE (((0.24129932291130562)<('-765622091')) COLLATE NOCASE) LIMIT 2086946906; -- 0ms;
SELECT LIKE(GROUP_CONCAT(t0.c2), ((t0.c1) BETWEEN (t0.c0) AND (rt0.c0))) FROM t0, rt0 WHERE (((('1973190048') BETWEEN (1.76501378E9) AND ('50103826')) IN ())); -- 0ms;
SELECT DISTINCT (((~ (t0.c1))) BETWEEN (rt0.c0 COLLATE BINARY) AND ((((rt0.c0))>((rt0.c2))))) FROM rt0 GROUP BY '2068867448' HAVING MIN((t0.c1 IN ())) ORDER BY (((((t0.c0 IN ()))OR(((t0.c2)GLOB(t0.c2)))))AND(((((((((t0.c2)OR(rt0.c2)))OR(x'71ca')))OR(t0.c0)))OR(t0.c0)))) DESC  NULLS FIRST;SELECT DISTINCT (+ (t0.c0 COLLATE BINARY)) FROM rt0, t0; -- 0ms;
SELECT ALL CASE WHEN UNLIKELY(DISTINCT t0.c2) THEN CAST(t0.c1 AS INTEGER) ELSE CASE WHEN t0.c0 THEN rt0.c2 END END FROM t0, rt0 GROUP BY ((((rt0.c2)%(rt0.c1)))|(NULL)), ((CASE t0.c0  WHEN rt0.c0 THEN t0.c0 ELSE rt0.c1 END)<>(CAST(t0.c2 AS INTEGER))), UNLIKELY(((t0.c2) NOT BETWEEN (rt0.c2) AND (t0.c2))), ((t0.c0 COLLATE RTRIM)/(((rt0.c0) NOT BETWEEN (t0.c0) AND (t0.c2)))), (json(t0.c1) IN ((+ (rt0.c0)))); -- 0ms;
SELECT DISTINCT (((t0.c0 IN (rt0.c1, rt0.c1)))>(CAST(rt0.c0 AS REAL))) FROM rt0 WHERE (CAST(CASE WHEN 'XQ	' THEN '' WHEN 0.865665362664009 THEN -2.032974028E9 WHEN x'' THEN x'' WHEN 1120739374 THEN '2110056137' WHEN 0.3815397078150682 THEN 'W1䆽' END AS BLOB));SELECT DISTINCT CASE rt0.c2 COLLATE RTRIM  WHEN CASE WHEN t0.c2 THEN rt0.c1 ELSE rt0.c1 END THEN ((((rt0.c2)OR(t0.c1)))AND(rt0.c0)) WHEN ((t0.c0)||(t0.c1)) THEN ((((rt0.c2)AND(t0.c2)))AND(t0.c1)) WHEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c2 ELSE rt0.c0 END THEN load_extension(t0.c0) WHEN rt0.c1 THEN ((x'161f5f4b7d75') BETWEEN (t0.c1) AND (t0.c1)) WHEN t0.c1 COLLATE NOCASE THEN ('c\rx\r' IN ()) WHEN ((t0.c1)<<(0.3228732627047092)) THEN (- (t0.c1)) WHEN CASE t0.c1  WHEN rt0.c1 THEN t0.c2 WHEN rt0.c1 THEN rt0.c0 WHEN x'' THEN '446336008' ELSE t0.c1 END THEN CAST(rt0.c2 AS INTEGER) ELSE t0.c0 COLLATE NOCASE END FROM rt0 WHERE (LIKELY(DISTINCT ((0.013211918375561571)-(NULL))));SELECT DISTINCT CAST((('g?')<=(t0.c2)) AS REAL) FROM t0, rt0; -- 0ms;
SELECT DISTINCT '2033748001' FROM rt0, t0 WHERE (((CASE WHEN x'' THEN x'' ELSE '⅚J5O\-.' END) NOTNULL)); -- 0ms;
SELECT DISTINCT CASE WHEN ((((t0.c0)OR(rt0.c1)))OR(t0.c0)) THEN (~ (rt0.c1)) WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c0)) THEN ((t0.c2) NOT NULL) WHEN CAST(t0.c1 AS NUMERIC) THEN ((t0.c1) IS FALSE) WHEN ((t0.c1)/('')) THEN (- (rt0.c1)) WHEN CAST(rt0.c0 AS NUMERIC) THEN (+ (t0.c2)) END FROM t0 LIMIT 1894922276;SELECT DISTINCT ((((t0.c1) BETWEEN (t0.c2) AND (rt0.c0)))-(CAST(t0.c2 AS TEXT))) FROM t0 WHERE (CAST((~ (0.3072791665071426)) AS NUMERIC));SELECT LAG(rt0.c0, ((((rt0.c1) NOTNULL))>(json_array(NULL, t0.c2))), (((((rt0.c1)OR(rt0.c0)), 6.98355044E8, TYPEOF(t0.c1)))<((((rt0.c2) ISNULL), (t0.c2 IN (rt0.c0)), t0.c2 COLLATE BINARY)))) OVER () FROM t0, rt0 ORDER BY CASE x'2448'  WHEN ((((t0.c1)AND(rt0.c1)))OR(t0.c0)) THEN ((rt0.c2) NOTNULL) END DESC; -- 0ms;
SELECT DISTINCT ((((rt0.c1) NOT BETWEEN (t0.c1) AND (t0.c1)))=(GROUP_CONCAT(rt0.c1))) FROM rt0, t0 WHERE (CASE WHEN ((0x386e8091)AND(NULL)) THEN ((x'0dbc')>>(0.6101358683893824)) WHEN ((0.3587445675193859)LIKE('')) THEN ((NULL)>=(0.9637867506798788)) WHEN (('x')*('0.23510239942266342')) THEN ((0Xfffffffffc005f7c)IS(x'703e')) END) GROUP BY ((((NULL)<=('-781023457'))) NOT BETWEEN (rt0.c0 COLLATE RTRIM) AND (((t0.c0) NOT BETWEEN (t0.c0) AND (rt0.c0)))) HAVING json_object(t0.c0, TYPEOF(DISTINCT t0.c0)); -- 0ms;
SELECT HEX(DISTINCT ((t0.c0)<>(t0.c0))) FROM rt0, t0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(CASE WHEN ((t0.c0) BETWEEN (t0.c2) AND (t0.c0)) THEN HEX(t0.c1) END) OVER ( ORDER BY t0.c0 DESC  NULLS LAST), ((-1.020869779E9)LIKE(AVG(t0.c1))), (+ (((rt0.c2)%(rt0.c1)))) FROM t0 WHERE (((CASE '-166268689'  WHEN '0.3499338941571406' THEN '-1014762519' ELSE 1940635028 END)!=((- (x'')))));SELECT DISTINCT ((t0.c0) NOT NULL) FROM rt0;SELECT DISTINCT (+ (t0.c0)) FROM rt0, t0 WHERE (((((x'')||(x''))) IS FALSE)); -- 0ms;
SELECT DISTINCT (((((~ (t0.c1)))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN t0.c2 THEN rt0.c2 WHEN rt0.c0 THEN '-327180816' END)))OR(TOTAL(t0.c0))) FROM t0 WHERE (((((0.9769278728610014) BETWEEN (-943002658) AND (x''))) NOT BETWEEN (x'') AND (CAST(NULL AS TEXT))));SELECT ALL CASE CAST('1541361101' AS NUMERIC)  WHEN 0.6579284806429424 THEN ((t0.c1) IS FALSE) END FROM rt0 WHERE (CAST(((NULL) BETWEEN (x'') AND (NULL)) AS INTEGER));SELECT TOTAL(SUM(((rt0.c2)GLOB(t0.c0)))), 'w', CASE WHEN ((t0.c1)-('8d!<z0')) THEN CASE rt0.c2  WHEN rt0.c2 THEN t0.c2 WHEN rt0.c1 THEN rt0.c2 WHEN t0.c1 THEN t0.c1 ELSE NULL END END FROM t0;SELECT DISTINCT ((((t0.c1)IS(t0.c0)))>(CAST(t0.c1 AS INTEGER))) FROM t0, rt0; -- 0ms;
SELECT DISTINCT (+ (rt0.c1)) COLLATE BINARY, ((rt0.c0)>(rt0.c1)) COLLATE BINARY, (((NOT (t0.c0)))<=(((rt0.c0)%(t0.c2)))) FROM t0, rt0 WHERE (((((((-2.07397917E9)AND(0.1623432044599743)))AND(0.27772288304986525))) ISNULL)); -- 0ms;
SELECT (((t0.c2 IN ())) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1, ((MIN(rt0.c2)) IS TRUE), NTILE(LIKELIHOOD(DISTINCT ((('')) BETWEEN ((rt0.c1)) AND ((t0.c1))), 0.37345926334696633)) OVER () FROM rt0, t0;SELECT ALL ((((((((rt0.c0)OR(rt0.c2)))OR(t0.c1)))OR(x'7d26')))OR(rt0.c1)) COLLATE BINARY FROM t0, rt0; -- 0ms;
SELECT ALL (CAST(t0.c0 AS BLOB) IN ()) FROM rt0, t0 WHERE ((((('1120739374')AND(0X28d510bf)))AND(x'ebca1c9b')) COLLATE RTRIM); -- 0ms;
SELECT ALL ((SUM(0.2612597182866653)) NOT BETWEEN (((rt0.c1) BETWEEN (t0.c0) AND (t0.c2))) AND (TOTAL(rt0.c2))) FROM rt0, t0 WHERE (((((x'')) BETWEEN ((0Xffffffffc0df092c)) AND ((-586449208))) IN ())) ORDER BY t0.c2; -- 0ms;
SELECT DISTINCT GROUP_CONCAT((((t0.c2))>((t0.c1)))) FROM t0, rt0 LIMIT 273423483 OFFSET -1540426728; -- 0ms;
SELECT ALL CAST(((t0.c1) NOT BETWEEN (rt0.c0) AND (t0.c2)) AS BLOB) FROM rt0;SELECT DISTINCT (rt0.c0 IN (rt0.c0)) COLLATE NOCASE FROM t0 WHERE (COALESCE(((433545018)|('301971789')), CASE 0X76985665  WHEN 0.9637867506798788 THEN 'H-\QY^o' END)) GROUP BY TYPEOF(DISTINCT (~ (rt0.c2)));SELECT DISTINCT ((((rt0.c0)!=(rt0.c0))) NOT BETWEEN (x'') AND (NULL)) FROM t0, rt0 WHERE ((- (((((-1.418461019E9)OR(NULL)))OR(''))))); -- 0ms;
SELECT DISTINCT 'LY', CASE ((rt0.c0) BETWEEN (t0.c2) AND (t0.c2))  WHEN SUM(t0.c0) THEN IFNULL(rt0.c2, rt0.c1) ELSE '-586299116' COLLATE BINARY END, ((CASE t0.c0  WHEN rt0.c1 THEN NULL WHEN rt0.c1 THEN rt0.c0 WHEN t0.c1 THEN rt0.c0 END) IS FALSE) FROM rt0, t0 WHERE (CAST(CASE WHEN '-486275580' THEN x'' ELSE 0.9991664207799531 END AS TEXT)); -- 0ms;
SELECT DISTINCT LAST_VALUE((((rt0.c0 IN (rt0.c0)))>>(((t0.c0)<=(t0.c2))))) OVER () FROM rt0, t0 WHERE (((CAST(-1372907600 AS NUMERIC))<=(NULL))) EXCEPT SELECT DISTINCT ((DATETIME(rt0.c2, t0.c2, rt0.c2, rt0.c1, t0.c0)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c0 THEN t0.c2 WHEN t0.c2 THEN rt0.c2 ELSE t0.c2 END) AND ((((rt0.c2, rt0.c0, rt0.c1))>=((t0.c2, t0.c1, rt0.c0))))) FROM rt0, t0; -- 0ms;
SELECT ALL t0.c0 FROM rt0 WHERE ((NOT (COALESCE(DISTINCT '⅚j5O\-D', NULL, x'', '2025432477')))) ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END)*(CAST(t0.c1 AS TEXT)));SELECT DISTINCT (LIKELIHOOD(rt0.c0, 0.8403395303204471) IN (NULL)) FROM t0;SELECT json_remove(((t0.c1)>=(rt0.c2)), ((rt0.c2) NOT BETWEEN (t0.c0) AND (rt0.c2))) FROM rt0, t0 WHERE ((- (((x'd3ed')AND(''))))); -- 0ms;
SELECT DISTINCT FIRST_VALUE(((rt0.c0)LIKE(t0.c2)) COLLATE RTRIM) OVER () FROM t0 NATURAL JOIN rt0 WHERE ((+ ((('0.6811504375813596') NOT BETWEEN (NULL) AND (0.3308627530444732))))) ORDER BY (((t0.c0, t0.c0, NULL)) BETWEEN ((CAST(t0.c0 AS NUMERIC), (-4.8627558E8 IN ()), (rt0.c0 IN ()))) AND ((((rt0.c2) NOT BETWEEN (t0.c1) AND (rt0.c0)), ((((rt0.c1)AND(rt0.c0)))AND(rt0.c1)), NULL))) DESC  NULLS FIRST LIMIT 2064866202 OFFSET -1113165407; -- 0ms;
SELECT DISTINCT ((t0.c2) IS FALSE) FROM t0, rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1) BETWEEN (t0.c0) AND (rt0.c1)) COLLATE BINARY, COUNT(QUOTE(t0.c0)) OVER (), (NOT (0.027403048709995548)), AVG(rt0.c2) OVER ( ORDER BY (~ (rt0.c0 COLLATE NOCASE)) ASC  NULLS FIRST), x'91f8' FROM rt0, t0; -- 0ms;
SELECT CAST((rt0.c0 IN ()) AS BLOB) FROM t0, rt0; -- 0ms;
SELECT ALL CASE WHEN ((((((((rt0.c2)AND(t0.c2)))AND(0.8647301221782303)))OR(t0.c2)))OR(t0.c2)) THEN LOWER(DISTINCT rt0.c0) WHEN ((rt0.c1)IS NOT(rt0.c1)) THEN (rt0.c0 IN ()) WHEN CASE WHEN t0.c1 THEN t0.c2 WHEN t0.c1 THEN t0.c0 WHEN rt0.c2 THEN t0.c1 ELSE t0.c1 END THEN (t0.c1 IN ()) ELSE ((t0.c2)<>(t0.c0)) END FROM t0 ORDER BY rt0.c1  NULLS FIRST;