-- Time: 2024/06/07 06:39:11
-- Database: database32
-- Database version: 3.40.0
-- seed value: 2732958432
PRAGMA cache_size = 50000; -- 2ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE VIRTUAL TABLE rt0 USING rtree(c0, c1, c2, +c3 INTEGER , +c4 BLOB ); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ANALYZE; -- 0ms;
UPDATE rt0 SET c3=''; -- 0ms;
PRAGMA temp.ignore_check_constraints = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX  rt0; -- 0ms;
PRAGMA temp.soft_heap_limit; -- 1ms;
PRAGMA temp.cache_spill; -- 0ms;
INSERT OR ROLLBACK INTO rt0(c0, c3, c4) VALUES ('', '()', NULL); -- 0ms;
REINDEX  rt0; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('') WHERE ((((rt0.c4) IS TRUE))LIKE(((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c3)))); -- 0ms;
UPDATE OR FAIL rt0 SET c1=0X1b73874c; -- 0ms;
UPDATE OR IGNORE rt0 SET (c3)=(0.6760813631198425) WHERE json_array(rt0.c0, ((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c4)))AND(rt0.c1)))OR(rt0.c3))); -- 0ms;
END; -- 0ms;
PRAGMA foreign_keys; -- 0ms;
END TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
DELETE FROM sqlite_stat1 WHERE (('1828428446') BETWEEN (NULL) AND (0.9178753769603805)) COLLATE NOCASE; -- 0ms;
ANALYZE; -- 0ms;
INSERT OR ABORT INTO rt0(c2, c3, c1) VALUES (x'', '0.9178753769603805', 0.9178753769603805); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0, c1, c4) VALUES ('24045770', '|', -52415988, 'c'); -- 0ms;
INSERT OR IGNORE INTO sqlite_stat1 VALUES('rt0', 'rt0', '460556108 1244792992 sz=-1159835447'); -- 1ms;
UPDATE rt0 SET (c4)=(NULL) WHERE CASE ((rt0.c1)IS NOT(rt0.c4))  WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c0) NOT BETWEEN (NULL) AND (rt0.c2)) WHEN (((rt0.c3))=((rt0.c0))) THEN CAST(rt0.c3 AS BLOB) WHEN ((rt0.c1)>=(rt0.c2)) THEN x'' WHEN CAST(rt0.c4 AS BLOB) THEN ((rt0.c1) NOTNULL) WHEN ((rt0.c1)==(rt0.c0)) THEN HEX(rt0.c0) END; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0, c2)=('r34s왋', 0.6760813631198425); -- 0ms;
VACUUM main; -- 1ms;
INSERT OR ROLLBACK INTO rt0(c3, c0) VALUES ('V''G', NULL); -- 1ms;
UPDATE OR IGNORE rt0 SET (c0)=('535455070'); -- 0ms;
INSERT OR IGNORE INTO rt0(c4, c2, c0, c1) VALUES ('-932923008', '20113803', x'', NULL), ('24045770', 0.35942199466349845, 0.6760813631198425, 0Xffffffffb1f684a4), (1e500, 0Xffffffffffffffff, '', '敞r(\n.dZ-'); -- 0ms;
INSERT OR ROLLBACK INTO rt0 VALUES ('?_', -52415988, '', '', ''); -- 0ms;
INSERT OR FAIL INTO rt0(c1, c0) VALUES (-1.159835447E9, '0.6760813631198425'); -- 0ms;
INSERT OR REPLACE INTO rt0(c1, c0, c3) VALUES (572976232, '', 0X3ac34cf3), (NULL, 0x66a0c64b, -1807439895), (0.9847864772307251, 0.9178753769603805, x''); -- 0ms;
INSERT OR REPLACE INTO rt0(c2, c4) VALUES (0X4d619c84, ''), (x'', NULL), ('X[IG4}	ℿj', '0.6760813631198425'); -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (0X5e613829, x'', x'6130', '460556108', '0.9847864772307251'), (NULL, -1982191492, 'Uq0Vlh', x'9b81', ''), (0.35942199466349845, 1721812555, 0.31407841253503, '0.9178753769603805', 0x16ee8ca); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
REINDEX; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
END; -- 0ms;
UPDATE OR IGNORE rt0 SET c0=NULL, c3=NULL WHERE rt0.c3; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c0) VALUES (NULL, '-392956328'); -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
END TRANSACTION; -- 0ms;
UPDATE OR ROLLBACK rt0 SET (c3)=(x''); -- 0ms;
PRAGMA cache_size; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA temp.shrink_memory; -- 0ms;
INSERT OR FAIL INTO rt0(c3, c0) VALUES (0X2226ec68, (((x'1c48', 0.9847864772307251, 1244792992)) NOT BETWEEN (((((('1316806943')OR(0.5301543716050592)))OR('-52415988')), ((x'3ccd') NOT BETWEEN (0.26944317982280364) AND (x'')), ((NULL) NOTNULL))) AND ((LIKELIHOOD(x'', 0.8965202086033338), (0.9847864772307251 IN (0Xfffffffffce0320c, x'')), ((('1098697406'))>=((x''))))))); -- 0ms;
INSERT OR IGNORE INTO rt0(c2) VALUES (0.26944317982280364); -- 1ms;
REINDEX  rt0; -- 0ms;
SELECT rtreecheck('rt0'); -- 1ms;
UPDATE OR IGNORE rt0 SET (c2, c4)=('1583429673', '0.5301543716050592'); -- 0ms;
UPDATE rt0 SET (c4)=(0.5062090840673159) WHERE ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c4)IS NOT(0.9178753769603805))) AND (((x'')>=(rt0.c2)))); -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA legacy_file_format; -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1) VALUES ('1024321359', 37489564, 572976232); -- 0ms;
COMMIT TRANSACTION; -- 0ms;
DELETE FROM sqlite_stat1; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
UPDATE rt0 SET c1=NULL; -- 0ms;
UPDATE OR IGNORE rt0 SET (c0)=('L ]cyS'); -- 0ms;
ANALYZE; -- 0ms;
UPDATE OR REPLACE rt0 SET c3='c|' WHERE (~ (x'')); -- 1ms;
PRAGMA cache_size = 0; -- 0ms;
CREATE TEMP VIEW v0(c0) AS SELECT CASE ((x'bbfc')IS NOT(rt0.c4))  WHEN (((x'e3af'))<=((rt0.c2))) THEN rt0.c4 COLLATE BINARY WHEN CAST(rt0.c2 AS NUMERIC) THEN (rt0.c3 IN (rt0.c4)) WHEN (~ ('460556108')) THEN ((((rt0.c0)OR(rt0.c4)))AND(rt0.c0)) END FROM rt0 GROUP BY ((((((((UPPER(rt0.c4))AND(SQLITE_COMPILEOPTION_GET(rt0.c1))))AND(CAST(0.4503121770714541 AS NUMERIC))))OR((- (rt0.c3)))))AND(((rt0.c4)+(rt0.c3)))), ((((rt0.c4) NOTNULL))<=(json_object(rt0.c4, rt0.c0))), ((((rt0.c4 IN ('1461243775')), CAST(rt0.c0 AS TEXT), rt0.c2))==((x'', (((rt0.c0, rt0.c0, rt0.c1))!=((NULL, rt0.c2, ''))), ((rt0.c3) BETWEEN (rt0.c0) AND ('1098697406'))))), (((('1244792992')IS(rt0.c1))) BETWEEN (((NULL) NOT BETWEEN (rt0.c4) AND (rt0.c2))) AND (CAST(rt0.c1 AS NUMERIC))), CAST(CASE WHEN '-1982191492' THEN 0.3149648469684432 END AS BLOB); -- 0ms;
PRAGMA journal_size_limit; -- 0ms;
PRAGMA wal_checkpoint(FULL); -- 0ms;
PRAGMA temp.automatic_index; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
PRAGMA main.legacy_file_format; -- 0ms;
ANALYZE rt0; -- 0ms;
COMMIT TRANSACTION; -- 1ms;
UPDATE OR IGNORE rt0 SET (c4, c2)=(0X6cfb9a9e, '0.3149648469684432') WHERE (((((rt0.c1, rt0.c3, rt0.c0))<>((rt0.c2, rt0.c4, rt0.c4))))IS(((((rt0.c0)OR(rt0.c3)))OR(rt0.c0)))); -- 0ms;
PRAGMA default_cache_size = 1578083658; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT OR IGNORE INTO rt0 VALUES (NULL, NULL, NULL, x'd251', 0.848005692186882); -- 0ms;
INSERT OR IGNORE INTO rt0(c2, c4, c1) VALUES (NULL, 0.3454720794577829, 0.3683132140264652); -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA automatic_index; -- 0ms;
CREATE VIRTUAL TABLE vt10 USING fts5(c0); -- 1ms;
PRAGMA reverse_unordered_selects = true; -- 0ms;
PRAGMA temp.application_id; -- 0ms;
INSERT INTO vt10(vt10) VALUES('automerge=12'); -- 0ms;
INSERT INTO vt10(vt10) VALUES('optimize'); -- 0ms;
UPDATE rt0 SET c0=x'', c2='460556108', c0=0.6760813631198425 WHERE (+ (((rt0.c2) IS FALSE))); -- 0ms;
UPDATE rt0 SET (c0, c2, c3)=(NULL, NULL, 'm,5]'); -- 0ms;
PRAGMA journal_mode; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
REINDEX  rt0; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN IMMEDIATE TRANSACTION; -- 0ms;
PRAGMA journal_mode; -- 0ms;
REINDEX  rt0; -- 0ms;
COMMIT TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 1ms;
DROP VIEW v0; -- 0ms;
SELECT rt0.c1 FROM rt0 ORDER BY SQLITE_COMPILEOPTION_USED(((rt0.c0)>(rt0.c2))) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT (((rt0.c4))>((CAST(rt0.c1 AS TEXT)))) FROM rt0 WHERE (((((CASE WHEN x'a1f0' THEN x'' WHEN -1602828710 THEN NULL WHEN '' THEN x'26ef' END)AND((('2030830563')-(1654312125)))))AND((('-1982191492')LIKE(x''))))); -- 0ms;
SELECT DISTINCT ((((((rt0.c0)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))))>((rt0.c2))) FROM rt0 WHERE ((((((('<yc')AND(0x1fea655e)))OR(0.5598271487059021))) NOTNULL)); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER ( PARTITION BY CASE WHEN ((((((((rt0.c1)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c1)))OR(rt0.c2)) THEN ((rt0.c1)GLOB(rt0.c4)) END, ((((HEX(0.16285976434809668))OR(((rt0.c4) IS TRUE))))AND('箴*-'))), rt0.c4, ((((rt0.c0) NOT NULL))GLOB(((rt0.c0) NOT BETWEEN (rt0.c4) AND (rt0.c4)))), CAST(rt0.c3 AS REAL), ((rt0.c4)-(TOTAL(rt0.c2))) FROM rt0 WHERE (LIKE(((x'069e') BETWEEN (1298242692) AND ('')), (('at') NOT BETWEEN ('(Ml') AND (x'')))); -- 0ms;
SELECT CASE rt0.c2 COLLATE NOCASE  WHEN ((rt0.c0) BETWEEN (0x4d4314d) AND (rt0.c0)) THEN ((2.974988440100912E-4) BETWEEN (rt0.c2) AND (rt0.c1)) ELSE ((rt0.c0) NOT NULL) END FROM rt0 LIMIT -1601973146; -- 0ms;
SELECT DISTINCT '-Aw''KpZ\r' FROM rt0; -- 0ms;
SELECT ALL AVG(COUNT(*)), (NOT (COUNT(rt0.c1))), CAST(((rt0.c3) IS TRUE) AS REAL) FROM rt0 WHERE (CAST('985877747' AS TEXT) COLLATE BINARY);SELECT DISTINCT ((COUNT(rt0.c3))<<((rt0.c0 IN ()))) FROM rt0 WHERE (CASE ((((((((0X790c03e3)AND(x'')))AND(x'')))OR('0.848005692186882')))OR('1557687979'))  WHEN '1316806943' COLLATE NOCASE THEN ('' IN ()) END) LIMIT -595421533 OFFSET 1399912197; -- 0ms;
SELECT DISTINCT NULLIF(CAST(rt0.c4 AS REAL), LIKE(rt0.c0, rt0.c3)), NULL, (((rt0.c3) NOTNULL) IN ()), ((((NULL)+(rt0.c3)))-((((rt0.c2))<=((rt0.c1))))), SUM(((rt0.c1) BETWEEN (x'62a6') AND (rt0.c3))) OVER () FROM rt0 WHERE (((((0.8661152052697745)<>(NULL))) BETWEEN ((((0.31407841253503, -3.92956328E8, NULL)) BETWEEN (('x[ig4}	ℿj', ',JMa', NULL)) AND ((NULL, NULL, x'')))) AND ((((3.7489564E7)) NOT BETWEEN ((NULL)) AND (('1578083658')))))) LIMIT -1138548417; -- 0ms;
SELECT DISTINCT ((rt0.c4 COLLATE NOCASE)|(GROUP_CONCAT(rt0.c4))) FROM rt0 WHERE (((0.5129808018106282 IN ()) IN ())) LIMIT 1816352030; -- 1ms;
SELECT DISTINCT (+ (((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))), CAST(SUM(rt0.c0) AS REAL), (((rt0.c3)) BETWEEN ((rt0.c2 COLLATE NOCASE)) AND ((rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT ABS(CASE rt0.c1  WHEN rt0.c4 THEN rt0.c2 WHEN -392956328 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c1 END), CAST(CASE rt0.c4  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c2 END AS REAL), COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT AVG(CAST(rt0.c3 AS INTEGER)) FROM rt0 ORDER BY SQLITE_COMPILEOPTION_GET(rt0.c2) DESC; -- 0ms;
SELECT ALL CHANGES() FROM rt0 WHERE (((((COALESCE(NULL, 0.3583424938251193, x'', 1742497734))AND((('1828428446')||(x'')))))AND((NOT (x'aa1c'))))) GROUP BY (NOT (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c3)))), ((((+ (rt0.c3))))==(((rt0.c2 IN ())))), ((rt0.c0 COLLATE RTRIM)>=(rt0.c2 COLLATE NOCASE)) HAVING (MIN(rt0.c0) IN ()); -- 1ms;
SELECT DISTINCT (((0.2841015629839416)LIKE(rt0.c3)) IN (((rt0.c4)+(rt0.c1)))) FROM rt0 WHERE (LIKELIHOOD(DISTINCT '' COLLATE RTRIM, 0.6080533553385387)) ORDER BY ((((rt0.c1) NOT NULL))<<(UPPER(rt0.c4))) LIMIT 1053785929 OFFSET 817720501; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c0))IS(CAST(rt0.c3 AS TEXT))) FROM rt0; -- 0ms;
SELECT SUM((rt0.c2 IN ())) FROM rt0 WHERE ((((+ (x'df40'))) NOT NULL)); -- 0ms;
SELECT DISTINCT COUNT((((rt0.c2))<((rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT load_extension(rt0.c1, rt0.c2) COLLATE BINARY COLLATE BINARY, TOTAL_CHANGES(), SQLITE_VERSION() FROM rt0 WHERE (UNLIKELY(NULL COLLATE RTRIM)) GROUP BY (('') NOT NULL) HAVING LIKE(((rt0.c1)-(rt0.c2)), ((rt0.c3)!=(rt0.c1)), '8'); -- 0ms;
SELECT DISTINCT (~ (((NULL)IS(rt0.c3)))), (x'' IN ()), (((rt0.c0 COLLATE NOCASE))<((((rt0.c3)&(rt0.c4))))) FROM rt0 WHERE (((((((((((x'')AND(NULL)))AND('lYEjzN')))AND(0.3583424938251193)))AND(0X3ce5f3c9))) IS TRUE)); -- 0ms;
SELECT NTH_VALUE(((x'a61a') NOT NULL), rt0.c2) OVER () FROM rt0 WHERE (((CAST('' AS TEXT)) IS FALSE)); -- 0ms;
SELECT LAST_VALUE(TIME((rt0.c1 IN ()), rt0.c4 COLLATE BINARY, (rt0.c2 IN ()))) OVER () FROM rt0 WHERE ((- (MAX(x'6e32', x'')))); -- 1ms;
SELECT ALL ((((rt0.c0)OR(rt0.c2))) BETWEEN (((rt0.c2)+(rt0.c0))) AND ((NOT (rt0.c3)))) FROM rt0 LIMIT -1313001259 OFFSET -52415988; -- 0ms;
SELECT DISTINCT ((TRIM(DISTINCT rt0.c3, rt0.c1))*((((rt0.c4))<=((rt0.c1))))) FROM rt0 WHERE ((+ (('' IN ())))); -- 0ms;
SELECT ALL (+ (NULL)), CAST(LIKELIHOOD(DISTINCT rt0.c3, 0.19310082383690164) AS INTEGER), ((((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c1)))<(rt0.c2 COLLATE NOCASE)) FROM rt0 ORDER BY (((((rt0.c4)-(rt0.c0))))=(((((rt0.c1))<=((rt0.c3))))))  NULLS LAST; -- 0ms;
SELECT (((((rt0.c0) BETWEEN (-70817865) AND (rt0.c0))))>((((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))), ((rt0.c3 COLLATE NOCASE) ISNULL), ((MAX(rt0.c0)) BETWEEN (SUBSTR(rt0.c0, rt0.c4)) AND (CASE rt0.c1  WHEN -1.982191492E9 THEN rt0.c3 ELSE rt0.c2 END)), ((((rt0.c1)OR(CAST('Uq0Vlh' AS BLOB))))AND(CASE WHEN rt0.c1 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c1 END)), ((CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END)&((+ (rt0.c0)))) FROM rt0; -- 1ms;
SELECT DISTINCT ((((('')OR(rt0.c4)))AND(NULL)) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0; -- 0ms;
SELECT LENGTH((rt0.c3 IN (rt0.c2))), (((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c4))) COLLATE RTRIM, (NOT (CASE WHEN rt0.c4 THEN rt0.c3 ELSE '' END)), ((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2)) COLLATE BINARY, ((((rt0.c1)<(rt0.c4))) NOT BETWEEN (0.18655085930904847) AND (NULLIF(rt0.c3, rt0.c4))) FROM rt0; -- 0ms;
SELECT ALL rt0.c4, MAX(((rt0.c2)/('572976232'))), (((((rt0.c1) IS TRUE)))!=((((0.3003202501202362) IS FALSE)))) FROM rt0 WHERE ((((((-471545141)>=(NULL))))<>((CASE 'sQX''p'  WHEN x'' THEN 0.9416129249556291 END)))); -- 1ms;
SELECT DISTINCT ((((rt0.c2)<=(rt0.c4)))LIKE(((rt0.c4) IS FALSE))) FROM rt0 NOT INDEXED WHERE (CAST((~ ('0.3003202501202362')) AS INTEGER)); -- 0ms;
SELECT DISTINCT (((((rt0.c0) IS TRUE), (((rt0.c0))>((rt0.c0))), rt0.c3))<(((- (rt0.c2)), (((rt0.c4, rt0.c1, rt0.c3))>((rt0.c2, rt0.c1, ''))), ((rt0.c1)<(rt0.c1))))) FROM rt0 WHERE (MAX((('vXi&U씤q')+(0.3003202501202362)), ('' IN ()))); -- 0ms;
SELECT ALL ((((rt0.c4) ISNULL)) NOT NULL), ABS(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c4) AND (x''))), (NOT (rt0.c4)) FROM rt0 WHERE ((NOT (0.559449042426217 COLLATE NOCASE))); -- 0ms;
SELECT (((rt0.c3)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c1))) COLLATE NOCASE FROM rt0 WHERE (((load_extension('1298242692'))>('-797771617')));SELECT DISTINCT rt0.c2 COLLATE NOCASE FROM rt0 WHERE (TYPEOF(((('()'))>(('1399912197'))))); -- 0ms;
SELECT DISTINCT (((- (rt0.c1)))<(CAST(rt0.c4 AS BLOB))) FROM rt0 WHERE (COALESCE(DISTINCT x'', CAST(NULL AS TEXT))); -- 0ms;
SELECT ALL ((((rt0.c4)GLOB(rt0.c3)))>((rt0.c4 IN ()))) FROM rt0 WHERE (((((((((((NULL)AND('')))AND(0.6260284840413454)))AND(x'')))AND(x''))) NOT BETWEEN ((((1654312125, 0.3325473105585167, '-234769899'))>=(('-5604428', '-531134511', 0.9178753769603805)))) AND ((NOT (0.6194984299809175))))) LIMIT 1966274237; -- 0ms;
SELECT ALL rt0.c1, AVG(((rt0.c4)|(rt0.c3))) COLLATE RTRIM, LAST_INSERT_ROWID() FROM rt0 WHERE ((((x'61e6' IN ()))<((('B')>(NULL))))) LIMIT 1021703113; -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c0) AS BLOB), ((((rt0.c3) NOT BETWEEN (0.1827808814919505) AND (rt0.c4))) BETWEEN (((x'') BETWEEN (rt0.c4) AND (rt0.c3))) AND (x'')), AVG(CAST(rt0.c3 AS BLOB)) FROM rt0 GROUP BY (((((rt0.c1)|(rt0.c2))))>((((((rt0.c0)AND(x'')))OR(0.8639811734440028))))); -- 0ms;
SELECT (~ ((+ (NULL)))), (- (SUM(rt0.c4))), rt0.c2 FROM rt0 WHERE ((('' COLLATE BINARY)AND(CAST(x'' AS NUMERIC)))) GROUP BY (LIKELY(x'') IN (((rt0.c0) IS TRUE), ((((rt0.c4)OR(rt0.c3)))AND(rt0.c2)))), (((rt0.c2 COLLATE NOCASE))>(((rt0.c1 IN (rt0.c2))))), CAST(((((rt0.c2)AND(rt0.c0)))AND(rt0.c3)) AS BLOB) HAVING (CAST(rt0.c4 AS TEXT) IN ()) ORDER BY LIKELY(CAST(0.9133470079534951 AS REAL)) ASC; -- 0ms;
SELECT ALL CAST(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)) AS TEXT) FROM rt0 WHERE (((((((-70976664)AND('0.3583424938251193')))OR(0.6413232233974536)))!=((('1042085706')IS NOT('狝'))))) GROUP BY ((((rt0.c2) ISNULL))|(CASE WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)) HAVING CASE (~ (rt0.c4))  WHEN (rt0.c3 IN ()) THEN rt0.c4 COLLATE NOCASE ELSE ((((((((((((rt0.c3)AND(rt0.c0)))OR(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))AND('-779214636')))OR(rt0.c2)) END; -- 1ms;
SELECT ALL ((rt0.c1)<<(rt0.c1)) COLLATE RTRIM FROM rt0 WHERE (((((((((1730319453)AND(x'' COLLATE NOCASE)))AND((NULL IN ()))))OR((('?e<212-9221533069500435892-962:-6954547054387979927T-7880716081507383072 7909581509028559020T1373 K\')%(1966274237)))))AND(((x'0062')IS NOT(0.8259661828944187))))); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((rt0.c3 COLLATE BINARY)) AND ((((rt0.c4)-(''))))) FROM rt0 NOT INDEXED WHERE (((((0.8661152052697745)&(x'')))<<(x'' COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c1)))LIKE(((rt0.c0)LIKE(rt0.c0)))) FROM rt0 WHERE (((('101615448')<<(x'')) IN ())); -- 0ms;
SELECT DISTINCT (((((rt0.c1))>((rt0.c0)))) IS TRUE), FIRST_VALUE((~ (CASE WHEN rt0.c0 THEN rt0.c0 END))) OVER (), ((NULL) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL HEX(((((((((rt0.c2)AND(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)))AND(rt0.c4))) FROM rt0 ORDER BY rt0.c0 DESC  NULLS LAST, ((rt0.c1) IS TRUE) COLLATE NOCASE ASC; -- 0ms;
SELECT DISTINCT ((x'')<=(rt0.c1)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c4 IN ()) IN (((((0x3e1cf74a)OR(rt0.c1)))OR(rt0.c1)))) FROM rt0 WHERE (((('')) BETWEEN (((NOT ('')))) AND ((((1.721812555E9) NOTNULL))))); -- 0ms;
SELECT DISTINCT TOTAL(((rt0.c4)LIKE(rt0.c2))) OVER ( ROWS  CURRENT ROW EXCLUDE GROUP) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) FROM rt0 WHERE (((CAST('' AS INTEGER))/(((x'') IS TRUE)))); -- 0ms;
SELECT (0X5370f705 IN (((rt0.c3)GLOB(rt0.c0)))), CAST(((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))OR(rt0.c0)) AS REAL), ((((rt0.c3)/(rt0.c0))) NOTNULL) FROM rt0 WHERE ((((NULL)!=(-1313001259)) IN ())); -- 0ms;
SELECT ((((((rt0.c2)/(rt0.c2)))OR(rt0.c4)))AND(AVG('764376048'))) FROM rt0; -- 0ms;
SELECT ((rt0.c4)|(rt0.c0)) COLLATE RTRIM FROM rt0 WHERE ((('-1248724719')GLOB(x'')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c2 AS NUMERIC))LIKE('')), SUM(((rt0.c3)*(rt0.c1))), CASE LTRIM(rt0.c4)  WHEN (((rt0.c2))>((rt0.c3))) THEN (rt0.c1 IN ()) END, ((rt0.c0)%(rt0.c2)) COLLATE RTRIM, ((CAST(rt0.c4 AS NUMERIC)) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c4 IN (rt0.c3))) ISNULL) FROM rt0; -- 1ms;
SELECT (+ ((+ (rt0.c0)))), (~ (((rt0.c2)<=(rt0.c1)))), (((rt0.c2)) NOT BETWEEN ((((rt0.c1) IS TRUE))) AND (((+ (rt0.c2))))) FROM rt0; -- 0ms;
SELECT SUM(((rt0.c4)<>(rt0.c0))), (((((rt0.c0))>((rt0.c4)))) NOTNULL), ((((rt0.c1 COLLATE NOCASE)AND((rt0.c0 IN ()))))OR(((rt0.c4) ISNULL))) FROM rt0; -- 0ms;
SELECT (+ (rt0.c3)) FROM rt0; -- 0ms;
SELECT ALL LAG(CAST((rt0.c3 IN ()) AS TEXT), (((((rt0.c0, 0.3526205515840597, rt0.c4)) BETWEEN ((rt0.c3, rt0.c2, '80077296')) AND ((rt0.c3, rt0.c3, rt0.c0)))) BETWEEN ((+ (rt0.c1))) AND (((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))), ((rt0.c2 COLLATE RTRIM) NOT NULL)) OVER ( ORDER BY rt0.c1 DESC  NULLS LAST) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 GROUP BY (rt0.c3 COLLATE BINARY IN (rt0.c3 COLLATE RTRIM)) HAVING QUOTE(((rt0.c4) NOTNULL)); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(rt0.c0) AS NUMERIC), IFNULL(DISTINCT (~ (rt0.c1)), CAST(rt0.c1 AS NUMERIC)), PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE (1298242692); -- 0ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN ((rt0.c4)) AND ((rt0.c3))) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c2 AS TEXT), ((rt0.c1)||(((rt0.c4) IS FALSE))), rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(((rt0.c0) IS TRUE)) FROM rt0 WHERE ((('')<>(1.024321359E9)) COLLATE RTRIM); -- 0ms;
SELECT CAST(CASE WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c1 END AS INTEGER), ((0.5166573449720174)IS((~ (rt0.c0)))), SUM(CAST(rt0.c3 AS INTEGER)) OVER (), (- (rt0.c4 COLLATE BINARY)), COUNT(((rt0.c3)IS(rt0.c0))) FROM rt0 WHERE (((((('') ISNULL), (x'' IN ()), CAST(NULL AS INTEGER)))<((((((((((x'')OR(NULL)))AND(-70976664)))OR('Dt')))OR(x'7b5b')), ((((((((x'c486')OR(x'5c8f2712')))OR(x'584f')))AND('T_0C1')))OR(x'')), ((x'5929') ISNULL))))); -- 0ms;
SELECT ALL 0.5694246954047679, (((rt0.c1)) NOT BETWEEN (((((rt0.c0))!=((rt0.c2))))) AND ((IFNULL(rt0.c4, rt0.c2)))), FIRST_VALUE((((((rt0.c3, NULL, rt0.c3, rt0.c4, rt0.c4)) NOT BETWEEN ((rt0.c3, rt0.c3, rt0.c3, rt0.c0, rt0.c0)) AND ((rt0.c0, rt0.c0, rt0.c1, rt0.c0, rt0.c2)))) IS FALSE)) OVER () FROM rt0 WHERE (LIKELIHOOD(DISTINCT CAST(0.2841015629839416 AS NUMERIC), 0.11463452016034403)) ORDER BY (((rt0.c0)) NOT BETWEEN ((((0.3325473105585167) ISNULL))) AND ((((rt0.c4) BETWEEN (rt0.c4) AND (rt0.c1)))))  NULLS FIRST, ((((CAST(rt0.c3 AS TEXT))OR(((0x36147677)<(rt0.c2)))))AND((NULL IN ()))) LIMIT -1886466473 OFFSET -152482751;SELECT CAST(CASE rt0.c2  WHEN rt0.c0 THEN '-5604428' ELSE rt0.c4 END AS NUMERIC) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)))AND(SUM(rt0.c0))))OR(((((rt0.c2)OR(rt0.c3)))AND(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL ((0.19604964389096768) NOT BETWEEN (rt0.c2) AND ('-234769899')) COLLATE BINARY FROM rt0 WHERE (((CAST(2017811875 AS INTEGER))>=(CAST(x'' AS TEXT)))); -- 0ms;
SELECT ROW_NUMBER() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((AVG(rt0.c3))<(MIN(rt0.c4))) FROM rt0 LIMIT -1900806544; -- 1ms;
SELECT DISTINCT (((rt0.c3 IN ()))>=((- (rt0.c3)))) FROM rt0 WHERE (((CAST(0.04501417859742529 AS INTEGER)) NOTNULL)); -- 0ms;
SELECT DISTINCT ((((rt0.c2)AND((((rt0.c2)) NOT BETWEEN ((rt0.c1)) AND ((rt0.c0))))))AND(TRIM(rt0.c2))), ((rt0.c3 COLLATE RTRIM)&((+ (rt0.c2)))), rt0.c0, NULL, PERCENT_RANK() OVER ( RANGE  CURRENT ROW) FROM rt0 WHERE ((NOT (((('%4J?'))!=(('')))))); -- 0ms;
SELECT TRIM(DISTINCT ((rt0.c1) IS TRUE), TOTAL(rt0.c3)) FROM rt0 ORDER BY CASE WHEN (rt0.c4 IN ()) THEN rt0.c3 COLLATE BINARY ELSE rt0.c3 END  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((rt0.c0))>=((rt0.c1))) IN ()) FROM rt0; -- 0ms;
SELECT ALL ((rt0.c3)|(CASE WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c0 THEN NULL ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT MIN(rt0.c1) FROM rt0 WHERE ((((x'' IN (0.40118128855451973))) BETWEEN ((NULL IN ('-59890658', 0.3325473105585167))) AND (CASE x''  WHEN 0Xffffffff89da287c THEN '0.5301543716050592' ELSE NULL END))); -- 0ms;
SELECT AVG((~ (rt0.c3))) COLLATE BINARY, (NOT (((((rt0.c0)AND(rt0.c1)))AND(rt0.c4)))), TOTAL((- (rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2 COLLATE NOCASE) NOT BETWEEN (((rt0.c0)||(rt0.c0))) AND (CASE WHEN rt0.c4 THEN rt0.c1 END)) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c1)) NOT BETWEEN ((IFNULL(rt0.c3, rt0.c3))) AND ((CAST(rt0.c1 AS NUMERIC)))), (((rt0.c3 IN (rt0.c1, rt0.c4))) BETWEEN (((rt0.c3)-(rt0.c4))) AND (((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))OR('')))), rt0.c3 FROM rt0 WHERE (NULL) GROUP BY (((((x'' IN (rt0.c2, rt0.c0)))AND(rt0.c0)))OR(rt0.c4 COLLATE BINARY)); -- 0ms;
SELECT COUNT(CAST(rt0.c0 AS REAL)), ((((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c4)))>(rt0.c3 COLLATE BINARY)), ((((rt0.c3)<<(rt0.c2))) NOTNULL) FROM rt0 WHERE ((NOT ((('X蝘CB') ISNULL)))); -- 0ms;
SELECT ALL (((((rt0.c4))<((rt0.c0)))) IS FALSE), (((CAST('V''G' AS BLOB), (((rt0.c4))<((rt0.c0))), CASE rt0.c2  WHEN rt0.c0 THEN '817720501' ELSE rt0.c1 END))==((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c4 END, rt0.c2 COLLATE BINARY, MAX(rt0.c4)))), ((rt0.c0 COLLATE BINARY) ISNULL) FROM rt0; -- 0ms;
SELECT ALL ((SUM(rt0.c2))<<(COUNT(rt0.c3))), CUME_DIST() OVER (), SUM(((rt0.c1) NOT NULL)) FROM rt0 GROUP BY CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c3 END COLLATE BINARY, (((((rt0.c4))<=((rt0.c3)))) BETWEEN (((rt0.c3)>(rt0.c2))) AND (((rt0.c1) NOT BETWEEN (rt0.c4) AND (rt0.c4)))), (((~ (rt0.c2)))IS(LIKELIHOOD(DISTINCT rt0.c2, 0.3639318532390853))) HAVING CASE WHEN '-70817865' THEN ((rt0.c2)LIKE(rt0.c0)) ELSE rt0.c2 END; -- 0ms;
SELECT DISTINCT CAST(rt0.c4 AS INTEGER) FROM rt0 WHERE ((~ (((((x'')OR(NULL)))AND(NULL))))); -- 1ms;
SELECT DISTINCT CAST(((rt0.c4) NOTNULL) AS INTEGER) FROM rt0 WHERE (PRINTF(CAST(x'eec1' AS NUMERIC))); -- 0ms;
SELECT ((rt0.c2)>(rt0.c0)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT '', (NOT (CASE WHEN rt0.c4 THEN rt0.c1 WHEN NULL THEN rt0.c0 WHEN rt0.c3 THEN rt0.c4 WHEN '-1452564867' THEN rt0.c4 WHEN '1021703113' THEN rt0.c4 END)), (((CASE rt0.c0  WHEN '%' THEN '1036913372' END))<>((GROUP_CONCAT(rt0.c1)))), (~ ((((rt0.c0))>=((rt0.c1))))), ((((~ ('81015117'))))!=((((rt0.c1) NOTNULL)))) FROM rt0 WHERE (x''); -- 0ms;
SELECT DENSE_RANK() OVER () FROM rt0; -- 0ms;
SELECT ALL x'9b14' FROM rt0 ORDER BY rt0.c2 DESC  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((rt0.c0)|((((rt0.c2, rt0.c2, rt0.c4))=((rt0.c0, rt0.c1, rt0.c4))))), (((((~ (rt0.c3)))AND(rt0.c0)))AND(SUM(rt0.c4))), rt0.c1 FROM rt0 WHERE ((((('-902163994') BETWEEN (0X305f7f77) AND (NULL)))/(CAST(x'' AS TEXT)))); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER () FROM rt0 WHERE ((CASE WHEN 0.2088972135808833 THEN NULL END IN ((+ (698644975))))); -- 0ms;
SELECT ((rt0.c2)!=(((rt0.c4)>(rt0.c0)))) FROM rt0; -- 0ms;
SELECT ((CAST(rt0.c4 AS BLOB))>(((rt0.c4) IS FALSE))) FROM rt0 ORDER BY ((rt0.c1 COLLATE BINARY)OR((rt0.c3 IN ()))) DESC  NULLS LAST, ((((rt0.c0)<>(rt0.c1))) IS FALSE); -- 0ms;
SELECT ((x'')/(AVG(rt0.c4))) FROM rt0; -- 1ms;
SELECT DISTINCT ((((rt0.c3)+(rt0.c3)))<<(((rt0.c2)<<(rt0.c1)))) FROM rt0; -- 0ms;
SELECT CAST(rt0.c0 COLLATE RTRIM AS BLOB) FROM rt0 WHERE (((LAST_INSERT_ROWID())<=(CAST(0.030869570991693074 AS TEXT)))); -- 0ms;
SELECT CASE WHEN ((rt0.c2) IS FALSE) THEN (rt0.c4 IN ()) END, ((((rt0.c2)*(rt0.c4)))-(rt0.c1)), ((((x'1d9b') NOTNULL)) NOT BETWEEN (IFNULL(DISTINCT rt0.c1, rt0.c0)) AND (((rt0.c3)-(rt0.c4)))), CAST(rt0.c2 AS TEXT), TOTAL(((rt0.c4)+(NULL))) FROM rt0; -- 0ms;
SELECT ((((((((((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4)))OR(((rt0.c0)OR(rt0.c3)))))OR((((rt0.c1, rt0.c2, rt0.c0))==((rt0.c0, rt0.c3, rt0.c0))))))AND((((rt0.c3))<=((rt0.c3))))))AND(TOTAL(rt0.c3))), TOTAL(0.31407841253503) OVER (), ((((((rt0.c1)IS NOT(rt0.c3)))OR(CASE WHEN x'00f4' THEN rt0.c2 ELSE rt0.c2 END)))OR(x'')), (((rt0.c0)>>(rt0.c4)) IN (TYPEOF(DISTINCT rt0.c3))), ROUND(CAST(rt0.c4 AS NUMERIC), CAST(rt0.c4 AS NUMERIC)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 COLLATE NOCASE THEN ((rt0.c3)/(rt0.c3)) WHEN (rt0.c3 IN ()) THEN rt0.c2 WHEN 0.5689191064019768 THEN CASE WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END END FROM rt0; -- 0ms;
SELECT ALL CASE WHEN (rt0.c2 IN (rt0.c4, rt0.c2)) THEN (rt0.c2 IN ()) WHEN MIN('sDfELL僉_') THEN ((((rt0.c2)OR(rt0.c2)))AND(rt0.c0)) WHEN (((NULL)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) THEN MAX(rt0.c0) END FROM rt0 WHERE (CASE WHEN ((NULL) BETWEEN ('1557687979') AND (x'')) THEN 0.4467920336561829 COLLATE BINARY ELSE (('0z')<(NULL)) END); -- 0ms;
SELECT ALL MIN(json_array_length(rt0.c3)) FROM rt0 WHERE (CAST((('-70976664') NOTNULL) AS TEXT)) ORDER BY (((rt0.c4, rt0.c4, rt0.c3)) NOT BETWEEN ((HEX(DISTINCT rt0.c1), (((rt0.c1)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c0))), ((rt0.c3)>(rt0.c2)))) AND ((0.44323910787063137, rt0.c1, SUBSTR(rt0.c0, rt0.c4)))), ((rt0.c4 COLLATE NOCASE) IS TRUE) LIMIT 102471498 OFFSET -1809481718;SELECT ALL 0.011135890114242875, ((((((rt0.c2) ISNULL))OR(((rt0.c2) IS TRUE))))AND(((rt0.c3)|(rt0.c1)))), x'', ROW_NUMBER() OVER (), CAST(rt0.c4 COLLATE NOCASE AS NUMERIC) FROM rt0 WHERE (((((('844642918')) BETWEEN ((NULL)) AND (('-471545141'))))<=((((',uCZu')) NOT BETWEEN ((NULL)) AND ((x'8abe')))))) GROUP BY ((((((rt0.c4)AND(rt0.c0)))AND(rt0.c3)))/(ABS(DISTINCT rt0.c1))) HAVING ((MAX(rt0.c0))%(((rt0.c0) NOT NULL))); -- 1ms;
SELECT DISTINCT ((((rt0.c1) NOTNULL)) NOT BETWEEN (((rt0.c0) ISNULL)) AND (((((rt0.c0)OR(rt0.c2)))OR(rt0.c3)))) FROM rt0 LIMIT 1142150340; -- 0ms;
SELECT ALL (~ (rt0.c4)), ((NOT (rt0.c1)) IN ()), GROUP_CONCAT(((((rt0.c4)AND(rt0.c0)))OR(rt0.c4))) OVER (), CUME_DIST() OVER (), (((((((rt0.c1)OR(rt0.c0)))AND(rt0.c2)), ((((rt0.c3)AND(rt0.c4)))OR(rt0.c1)), ((rt0.c0) ISNULL)))==(((+ (rt0.c3)), ((rt0.c0)GLOB(rt0.c2)), ((rt0.c3)LIKE(rt0.c4))))) FROM rt0 WHERE (((((CASE WHEN '1147328197' THEN 0Xcc002c4 WHEN 0Xffffffff8eb3fe70 THEN '}b㧞n︧' WHEN NULL THEN x'' ELSE '' END)OR(UNLIKELY(0.24752425584814897))))OR(CASE WHEN 0.48710685866955683 THEN 'X/E' ELSE 0.5506657175134496 END))) GROUP BY '' ORDER BY CASE WHEN x'' THEN ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)) ELSE rt0.c4 END, ((((rt0.c1) NOT NULL))LIKE((rt0.c2 IN (rt0.c3, rt0.c2)))); -- 1ms;
SELECT LOWER(DISTINCT (NOT (rt0.c0))) FROM rt0 WHERE (0.7817712716734856) LIMIT -1159835447 OFFSET -1776984279; -- 0ms;
SELECT ALL COUNT(*) OVER (), (((CAST(rt0.c2 AS INTEGER)))<>(((rt0.c1 IN ())))), LAST_VALUE(rt0.c1) OVER () FROM rt0 WHERE (((('0.6760813631198425')) NOT BETWEEN (((x'b0a0' IN ()))) AND ((((NULL)||(-3.92956328E8)))))); -- 0ms;
SELECT ALL (NOT (CAST(rt0.c4 AS BLOB))) FROM rt0 WHERE (((((0.42620988001723903) BETWEEN (0.9146283590699457) AND ('Sbo'))) BETWEEN (('-1682876545' IN ())) AND ((((''))<((NULL)))))); -- 0ms;
SELECT DISTINCT (~ (rt0.c0)), CAST((- (rt0.c4)) AS TEXT), ((((rt0.c3) ISNULL))OR(GROUP_CONCAT(rt0.c4))), (+ (((rt0.c0) NOTNULL))), ((HEX(rt0.c4)) NOT BETWEEN (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 END) AND (x'')) FROM rt0; -- 0ms;
SELECT ((((((((rt0.c2)AND(rt0.c0)))OR(x'')))AND((((rt0.c2, 0.11022341429088789, rt0.c2, rt0.c2, rt0.c4))<((rt0.c1, rt0.c4, rt0.c1, rt0.c4, rt0.c0))))))AND(((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c3)))), (- ((~ (rt0.c0)))), ((((rt0.c0)IS NOT(rt0.c3))) NOTNULL), (- (((x'')+(rt0.c1)))), ((((x'')OR((~ (rt0.c4)))))AND(((NULL) IS TRUE))) FROM rt0; -- 0ms;
SELECT ALL AVG(CASE WHEN NULL THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END), rt0.c1 COLLATE BINARY, MAX((+ (rt0.c2)) COLLATE NOCASE), 0.2740363404519368, rt0.c2 FROM rt0 WHERE (((('蛺myQh' IN (0X6b812d73))) ISNULL)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c1 AS REAL))/((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c1))))) FROM rt0 GROUP BY ((IFNULL('0.3526205515840597', rt0.c3))<=(CASE WHEN rt0.c4 THEN rt0.c3 END)), ((((rt0.c2)*(rt0.c0)))!=(rt0.c3 COLLATE BINARY)), ((CAST(rt0.c1 AS BLOB)) NOT NULL) HAVING CAST(((rt0.c3) ISNULL) AS REAL); -- 0ms;
SELECT ((CHAR(rt0.c2, rt0.c3, rt0.c0))<<(CASE WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c2 END)) FROM rt0; -- 0ms;
SELECT DISTINCT LAST_VALUE(rt0.c1) OVER () FROM rt0 WHERE (' *') ORDER BY ((((QUOTE(rt0.c2))OR(rt0.c4 COLLATE BINARY)))AND('')) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT TOTAL(CASE rt0.c3  WHEN rt0.c0 THEN x'' END) FILTER(WHERE (((rt0.c2, ((rt0.c0) IS TRUE), (((('-315176858')OR('?~濭')))OR(rt0.c4))))<((LIKELIHOOD(DISTINCT rt0.c3, 0.4428454731347927), ((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c3)), rt0.c0 COLLATE NOCASE)))) OVER () FROM rt0 NOT INDEXED; -- 0ms;
SELECT ALL (((((((rt0.c2)OR(rt0.c3)))OR(rt0.c0))))=((((rt0.c4) NOT BETWEEN (rt0.c2) AND ('.'))))), (((((rt0.c3)AND(rt0.c2)))AND(rt0.c2)) IN ()), COUNT(*) FROM rt0 GROUP BY (((''))<=((CAST('uq0vlh' AS NUMERIC)))) HAVING CASE ((rt0.c3)>>(rt0.c2))  WHEN ((rt0.c3)|(rt0.c1)) THEN (- (rt0.c1)) WHEN (((1071875834))>=((rt0.c0))) THEN CAST(rt0.c4 AS REAL) WHEN ((((((((rt0.c4)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c0)))AND(rt0.c3)) THEN '(Ml' WHEN PRINTF(rt0.c3) THEN rt0.c0 COLLATE BINARY WHEN CAST(rt0.c2 AS TEXT) THEN ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c2)) ELSE rt0.c0 END LIMIT -834618919 OFFSET -264697510; -- 0ms;
SELECT json_array(rt0.c4, rt0.c1 COLLATE RTRIM) FROM rt0 WHERE (LOWER(DISTINCT CASE 0.3303749407041049  WHEN '' THEN NULL ELSE 0.9465315348793204 END)) GROUP BY CAST(CASE rt0.c2  WHEN x'' THEN rt0.c3 ELSE rt0.c0 END AS TEXT) ORDER BY ((INSTR(rt0.c1, rt0.c0))%(rt0.c0 COLLATE NOCASE)) DESC LIMIT 1463122111; -- 0ms;
SELECT AVG((((rt0.c4, rt0.c0, rt0.c1, rt0.c2, 1.024321359E9)) NOT BETWEEN ((rt0.c3, rt0.c0, rt0.c1, rt0.c0, rt0.c0)) AND ((rt0.c1, rt0.c4, rt0.c1, rt0.c2, rt0.c2)))), CAST(((rt0.c2) NOTNULL) AS INTEGER), (+ (rt0.c0)) FROM rt0 ORDER BY ((NULL)LIKE((~ (rt0.c0))))  NULLS FIRST; -- 0ms;
SELECT ALL ((((-315176858) NOT NULL))<(rt0.c0 COLLATE NOCASE)) FROM rt0; -- 1ms;
SELECT ALL DENSE_RANK() OVER () FROM rt0 WHERE ((('')%(x'03a8')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(NULL))>>(1024321359)), ((0.9397891633155298) NOT NULL), ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c1)))GLOB(TRIM(DISTINCT rt0.c1, rt0.c2))) FROM rt0 WHERE (CASE WHEN NULL THEN '' END COLLATE RTRIM) GROUP BY ((((((((rt0.c3 COLLATE NOCASE)OR((+ ('n1')))))OR(((rt0.c2) NOT NULL))))AND(((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c2)))))OR((+ (rt0.c0)))) HAVING x'de6f'; -- 0ms;
SELECT (((rt0.c1, rt0.c4, rt0.c0)) BETWEEN (((((rt0.c2))=((rt0.c2))), CASE rt0.c4  WHEN rt0.c4 THEN rt0.c4 WHEN x'774d' THEN rt0.c4 WHEN rt0.c4 THEN rt0.c3 END, ((rt0.c4) NOT BETWEEN (rt0.c2) AND (rt0.c0)))) AND (((NOT (rt0.c4)), ((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)), ((rt0.c1)==(rt0.c2))))) FROM rt0; -- 0ms;
SELECT DISTINCT x'', MIN((~ (x'0df6'))), COUNT(*) FROM rt0; -- 0ms;
SELECT DISTINCT ((COALESCE(rt0.c1, rt0.c1, rt0.c3, rt0.c4)) BETWEEN ((NOT (rt0.c2))) AND (UPPER(rt0.c1))), CAST('z^' AS REAL), ((((- (rt0.c3))))<=((rt0.c4))) FROM rt0; -- 1ms;
SELECT AVG(SUM((((-1e500)) BETWEEN ((rt0.c0)) AND ((rt0.c2))))) FROM rt0;SELECT DISTINCT LIKELIHOOD(DISTINCT ((rt0.c0)>=(rt0.c2)), 0.3584081458535514) FROM rt0 WHERE ((('')LIKE(1.02471498E8)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c4) ISNULL) COLLATE NOCASE) OVER () FROM rt0 WHERE ((((((((('2136405645')OR(x'')))OR(NULL)))AND('-1164975689' COLLATE BINARY)))AND((('(⡼}}p鹽') NOT BETWEEN (8.1015117E7) AND (x''))))); -- 1ms;
SELECT DISTINCT COUNT(*), rt0.c3, (((((rt0.c3)) BETWEEN ((rt0.c4)) AND ((rt0.c1)))) ISNULL) FROM rt0; -- 0ms;
SELECT ALL rt0.c0, LEAD(((LAST_INSERT_ROWID())|(rt0.c2 COLLATE NOCASE)), (((((rt0.c4))=((rt0.c4)))) NOTNULL), ((((rt0.c0) ISNULL))<>(CAST(rt0.c3 AS INTEGER)))) OVER (), x'' FROM rt0 WHERE ((((x'')) NOT BETWEEN ((((0.5179689784521232)LIKE(NULL)))) AND ((CAST('1147328197' AS BLOB))))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)GLOB(rt0.c0)))*(MIN(rt0.c0))), ((GROUP_CONCAT(rt0.c0)) ISNULL), COUNT((((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c3)))) FROM rt0 WHERE (((x'' COLLATE RTRIM)==(CAST(0.40118128855451973 AS REAL)))); -- 0ms;
SELECT DISTINCT (((rt0.c1)) NOT BETWEEN (((~ (rt0.c2)))) AND ((((rt0.c2) NOT BETWEEN ('<QY') AND (rt0.c0))))), ((((((rt0.c4)AND(rt0.c1)))AND(rt0.c4)))||(((rt0.c4) IS TRUE))), CASE (rt0.c1 IN ())  WHEN CASE WHEN rt0.c3 THEN rt0.c4 ELSE rt0.c2 END THEN (((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))) ELSE ((NULL)AND(rt0.c3)) END FROM rt0; -- 0ms;
SELECT DISTINCT (((((NOT (rt0.c2)))AND(CASE WHEN rt0.c3 THEN rt0.c3 END)))OR(((rt0.c0)&(rt0.c2)))) FROM rt0 WHERE (CAST(((x'') NOT BETWEEN (x'') AND (x'7411d435')) AS INTEGER)) GROUP BY ((((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c4))) BETWEEN (((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c2))) AND ((rt0.c1 IN ()))), CASE ((((rt0.c1)OR(rt0.c3)))AND(NULL))  WHEN CAST(rt0.c4 AS REAL) THEN (NOT (rt0.c0)) ELSE rt0.c4 COLLATE NOCASE END, (CASE rt0.c3  WHEN 1199700151 THEN rt0.c3 ELSE rt0.c1 END IN ()) HAVING CAST(-2017067995 AS BLOB) ORDER BY (((rt0.c4 IN (x'', rt0.c0)))IS(LIKE(rt0.c0, rt0.c1)))  NULLS FIRST; -- 0ms;
SELECT ALL CAST(((((((((rt0.c2)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c3)) AS NUMERIC) FROM rt0 WHERE (((CASE x'948b'  WHEN '1721812555' THEN x'' ELSE x'c8c0' END)>>(UNICODE(',a')))); -- 0ms;
SELECT ALL (((SUM(rt0.c1), COUNT(rt0.c0), rt0.c2 COLLATE RTRIM, rt0.c4 COLLATE NOCASE, CAST(rt0.c1 AS INTEGER)))<((NULLIF(rt0.c1, rt0.c2), ((rt0.c0)IS(rt0.c3)), (~ (rt0.c0)), rt0.c4 COLLATE NOCASE, (NOT (rt0.c2))))), ((((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c2)))<=(((rt0.c3) IS FALSE))), NULL FROM rt0 WHERE (((CAST('1803627891' AS REAL))+(((((NULL)OR(0.05082025310293525)))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)<<(rt0.c1)))OR(CASE WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c4 END)))OR(rt0.c3)))OR('悲>*B/c')))AND(((rt0.c3) ISNULL))) FROM rt0 WHERE (UNLIKELY(DISTINCT (~ (x'0dd218e8')))); -- 1ms;
SELECT DISTINCT AVG((0.03973215796738083 IN (rt0.c4, rt0.c1))) OVER ( ROWS ((((rt0.c1) ISNULL)) NOT BETWEEN (((rt0.c0)IS NOT(rt0.c3))) AND (CAST(rt0.c3 AS REAL))) PRECEDING EXCLUDE CURRENT ROW), CAST(((((((((rt0.c4)AND(rt0.c0)))AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)) AS REAL), ((('xN'))<((((((((((rt0.c3)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c0)))OR(rt0.c2))))) FROM rt0;SELECT DISTINCT rt0.c1, NULL, (- ((((rt0.c2))>((rt0.c1))))) FROM rt0 LIMIT 115733961 OFFSET 20113803; -- 0ms;
SELECT DISTINCT RANK() OVER (), (((rt0.c4)) BETWEEN ((((rt0.c4)GLOB(rt0.c0)))) AND ((((rt0.c0)>(rt0.c2))))), ((((rt0.c2 IN ()), CASE rt0.c3  WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END, (((rt0.c4))==((rt0.c2)))))==((CAST(rt0.c2 AS INTEGER), (1244792992 IN ()), ((rt0.c3)<<(rt0.c4))))) FROM rt0 WHERE ((((((NULL))>=((0.04501417859742529))))AND((0.7279261089719653 IN ())))); -- 0ms;
SELECT DISTINCT SUM(CASE x''  WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c0 END) OVER (), CASE 1966274237  WHEN MIN(rt0.c4) THEN ((((rt0.c4)OR(rt0.c1)))AND(rt0.c3)) WHEN CASE WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END THEN rt0.c1 WHEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c0 END THEN CAST(rt0.c0 AS TEXT) ELSE rt0.c2 COLLATE NOCASE END, ((((((((rt0.c3)AND(rt0.c0)))OR(0.9450750104340244)))AND(rt0.c0)))AND(rt0.c3)) COLLATE BINARY FROM rt0 ORDER BY (((rt0.c1 COLLATE NOCASE))=((((NULL)<=(rt0.c3))))) ASC; -- 0ms;
SELECT CUME_DIST() OVER (), NULLIF(DISTINCT ((rt0.c3) IS FALSE), (+ (rt0.c4))), ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c3 ELSE rt0.c2 END) BETWEEN (((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c4))) AND (((rt0.c0) NOT NULL))) FROM rt0 WHERE (((((NULL) IS FALSE))IS(((1.828428446E9) NOT BETWEEN (x'') AND (1.298242692E9))))); -- 1ms;
SELECT ALL (((((NULL, rt0.c4, rt0.c3))>((rt0.c1, rt0.c3, rt0.c4))))LIKE(MIN(rt0.c4))) FROM rt0 WHERE (LIKELIHOOD((- (x'')), 0.9335013727248784)) LIMIT 1803627891; -- 0ms;
SELECT DISTINCT COUNT(*), (((rt0.c4)) NOT BETWEEN ((NULLIF(DISTINCT rt0.c3, rt0.c0))) AND ((((rt0.c3)=(rt0.c0))))), rt0.c4, AVG(((((rt0.c1)AND(rt0.c0)))OR(rt0.c3))), (((((rt0.c2, x'', rt0.c3))<((rt0.c1, rt0.c3, -932923008))))!=((+ (rt0.c3)))) FROM rt0 WHERE (((((json_insert('1036913372', 0.21068434402070557, NULL))OR(CASE WHEN 0.45003707240852764 THEN x'' END)))AND(((((0.8795398495909115)AND('1199700151')))OR('-932923008'))))) GROUP BY json_valid(((((((((((((x'')AND(rt0.c3)))AND(rt0.c0)))AND(x'')))AND(rt0.c0)))AND(rt0.c0)))AND(rt0.c0))), CASE CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c3 END  WHEN rt0.c2 THEN ((rt0.c2)<(rt0.c2)) WHEN ((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c4)) THEN CASE rt0.c3  WHEN rt0.c4 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c2 END WHEN CAST(rt0.c4 AS BLOB) THEN CAST(rt0.c3 AS REAL) END, rt0.c0;SELECT DISTINCT COUNT(*) FROM rt0; -- 0ms;
SELECT ((((((((0.22137530492886326)AND(rt0.c1)))AND(rt0.c0)))AND(((rt0.c3) NOTNULL))))OR((- (rt0.c1)))) FROM rt0; -- 1ms;
SELECT ((((((((((rt0.c0)AND(rt0.c0)))OR(rt0.c3)))OR(rt0.c4)))AND(rt0.c3)))||(rt0.c1 COLLATE NOCASE)) FROM rt0 WHERE (((((((NULL) NOT BETWEEN (x'') AND (x'')))AND(NULL)))OR(CASE NULL  WHEN x'3a91' THEN '' WHEN -3.15176858E8 THEN NULL WHEN NULL THEN -1915185507 ELSE x'' END))); -- 0ms;
SELECT (((+ (rt0.c4)))IS((~ (rt0.c3)))), CASE WHEN GROUP_CONCAT(rt0.c0) THEN (('i	r(T-g\R)_') NOT NULL) WHEN ((x'')>(rt0.c1)) THEN CAST(rt0.c2 AS INTEGER) WHEN ((rt0.c1)IS NOT(rt0.c4)) THEN (+ (rt0.c4)) ELSE (rt0.c0 IN ()) END, CASE WHEN ((rt0.c0) NOT NULL) THEN (~ (rt0.c1)) ELSE (((rt0.c0, rt0.c1, rt0.c4))<>(('阾on.]', rt0.c1, rt0.c2))) END FROM rt0; -- 0ms;
SELECT DISTINCT x'', (- (AVG(rt0.c0))), NTILE((- (((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c3))))) OVER (), CAST((('0.3683132140264652')GLOB(rt0.c2)) AS TEXT), ((NULL)GLOB(CAST(rt0.c4 AS REAL))) FROM rt0 WHERE (x'');SELECT DISTINCT MAX(x''), ((((rt0.c2)-(0.07120877156399585))) NOTNULL), rt0.c2, ((CAST(rt0.c3 AS REAL)) NOT NULL), ((((((x'')OR(x'')))OR(rt0.c3))) IS TRUE) FROM rt0 WHERE ((((((0.5129808018106282 IN ('i')))AND((('')IS(NULL)))))OR((- (-1610544627))))); -- 2ms;
SELECT CASE (0.011135890114242875 IN (rt0.c3))  WHEN TOTAL(rt0.c4) THEN 0.6525527510219555 END FROM rt0; -- 0ms;
SELECT MIN((rt0.c3 IN (rt0.c4, rt0.c2))) FROM rt0 ORDER BY (((- (rt0.c1))) BETWEEN (((rt0.c3) BETWEEN (rt0.c1) AND (x''))) AND (HEX(0xffffffffe3e784fd)))  NULLS LAST, CAST(rt0.c3 AS REAL), (((rt0.c2)) BETWEEN (((rt0.c3 IN (rt0.c2, rt0.c2)))) AND ((rt0.c2 COLLATE RTRIM))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))+(rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (('-1915185507' COLLATE RTRIM IN (((1.81635203E9) ISNULL)))); -- 2ms;
SELECT DISTINCT TRIM(rt0.c2 COLLATE RTRIM, ((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4))), json_extract(((rt0.c4) IS TRUE), (- (rt0.c0))), SUM((+ (rt0.c0))) OVER ( GROUPS ((CAST(rt0.c1 AS TEXT))-(IFNULL(rt0.c4, rt0.c4))) PRECEDING) FROM rt0;SELECT ((COUNT(*))IS NOT((rt0.c4 IN ()))) FROM rt0 WHERE (CASE 0.69479336618512  WHEN ((0.12844931353688005)=('gm')) THEN ((NULL) NOT NULL) ELSE ((x'') IS FALSE) END); -- 1ms;
SELECT DISTINCT (((((rt0.c4, '㧞3', rt0.c2))=((rt0.c1, rt0.c3, rt0.c3)))) IS TRUE) FROM rt0 WHERE ((((0.4762310353381548)) BETWEEN ((((-1734950991)<<(NULL)))) AND ((((-1.9693963E8) BETWEEN (x'') AND ('364212048')))))); -- 0ms;
SELECT ((((rt0.c3)&(rt0.c1)))<((((rt0.c0)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c3))))), rt0.c1, TOTAL(0.5179689784521232) FROM rt0 WHERE ((NOT (CAST(1.098697406E9 AS TEXT)))) LIMIT 1021703113 OFFSET -264697510; -- 0ms;
SELECT (((rt0.c4, rt0.c4, rt0.c0)) NOT BETWEEN ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)), rt0.c4, CAST(rt0.c1 AS REAL))) AND ((((rt0.c3)/(rt0.c4)), CAST(rt0.c2 AS TEXT), (NOT (rt0.c1))))), (+ (((((rt0.c1)AND(rt0.c1)))AND(rt0.c3)))), NULL FROM rt0 WHERE (CASE ((((((((NULL)OR(x'')))AND(x'e6ba')))OR(0.4978366755898984)))AND(x'578f'))  WHEN ((0.3583424938251193)AND(-8.34618919E8)) THEN (x'' IN ('54397521')) END); -- 0ms;
SELECT (NOT (((rt0.c2) IS FALSE))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(LOWER(rt0.c2) AS INTEGER) FROM rt0 WHERE (((((NULL)IS(0.00110296412703903)))IS NOT(CAST(0.8287338240028275 AS NUMERIC)))) ORDER BY (((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c4))) COLLATE RTRIM ASC  NULLS FIRST, ((((rt0.c4)<<(rt0.c2))) BETWEEN (((rt0.c0)|(rt0.c2))) AND (((rt0.c2) NOT BETWEEN (rt0.c2) AND (rt0.c4)))) ASC  NULLS LAST; -- 0ms;
SELECT ALL (((((rt0.c0 IN ()))AND(((rt0.c0)||(rt0.c0)))))OR(TOTAL_CHANGES())) FROM rt0 WHERE ((NULL COLLATE NOCASE IN ())); -- 0ms;
SELECT (((((((0.916776748649769))<>((rt0.c2))))AND(((rt0.c4)|(rt0.c0)))))OR(1.071875834E9)) FROM rt0 GROUP BY (((x'')-(rt0.c2)) IN ((rt0.c0 IN ()), rt0.c2)); -- 0ms;
SELECT DISTINCT (NOT ((- (rt0.c0)))), COUNT(((rt0.c2)IS NOT(rt0.c4))) OVER (), (((rt0.c0, rt0.c4, rt0.c1)) BETWEEN ((CAST(rt0.c4 AS TEXT), (('')>>(rt0.c3)), ((rt0.c3)+(rt0.c4)))) AND ((((rt0.c2)<<(rt0.c4)), (rt0.c1 IN ()), ((rt0.c4) ISNULL)))), ((((rt0.c1) NOT NULL)) IS FALSE), (((~ (rt0.c3))) ISNULL) FROM rt0 ORDER BY CAST(NULL COLLATE RTRIM AS INTEGER) DESC, ((((((((((rt0.c1)/(rt0.c4)))OR(json_quote(rt0.c0))))AND((rt0.c4 IN ()))))AND((+ (rt0.c0)))))OR(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c1)))AND(rt0.c2)))); -- 1ms;
SELECT (rt0.c2 IN ()), ((((rt0.c0)AND(rt0.c3 COLLATE NOCASE)))OR(rt0.c4 COLLATE NOCASE)), NULL FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c1)IS(rt0.c3)) IN (0.8708891601415015)) FROM rt0; -- 0ms;
SELECT ALL ((((rt0.c3) IS TRUE)) IS TRUE) FROM rt0 ORDER BY rt0.c1; -- 0ms;
SELECT ((TYPEOF(DISTINCT rt0.c1)) IS FALSE), ((((- (rt0.c4))))<=((((rt0.c0)/(rt0.c2))))), (((rt0.c4)) NOT BETWEEN ((((x'') BETWEEN (rt0.c4) AND (rt0.c2)))) AND ((rt0.c0 COLLATE NOCASE))), (((((rt0.c2) IS FALSE), CAST(rt0.c2 AS REAL), (rt0.c4 IN ())))>((json_object(rt0.c3, rt0.c3), CAST(rt0.c1 AS NUMERIC), ((rt0.c1)/(x''))))), ((((((rt0.c2)+(rt0.c4)))AND(((rt0.c4)IS NOT(rt0.c3)))))OR(AVG('*,T'))) FROM rt0 WHERE (((HEX(0.40431478060623205))LIKE(COALESCE(x'7ba7', NULL))));SELECT ALL (+ (rt0.c4 COLLATE RTRIM)), (((((~ (rt0.c3)))OR(((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))))AND(rt0.c4)), ((((CAST(rt0.c2 AS BLOB))OR(((((((((((((((((rt0.c0)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))AND(x'')))))OR((rt0.c3 IN (rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL ((((((((CAST(rt0.c1 AS NUMERIC))OR((~ (rt0.c0)))))OR(CAST(rt0.c0 AS REAL))))OR((+ (rt0.c3)))))AND(rt0.c3)) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1 IN (rt0.c1)) IN ((- (rt0.c0)))) FROM rt0; -- 0ms;
SELECT ALL CAST((((0.38844827660396153, rt0.c0, rt0.c1)) NOT BETWEEN ((rt0.c1, rt0.c2, rt0.c1)) AND ((0.11022341429088789, rt0.c3, rt0.c1))) AS BLOB) FROM rt0; -- 0ms;
SELECT ALL ((CAST(rt0.c1 AS BLOB)) BETWEEN (CASE WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c2 END) AND (CAST(rt0.c2 AS NUMERIC))) FROM rt0 WHERE (NULL); -- 0ms;
SELECT ALL NULL, ((rt0.c2)/(INSTR(rt0.c1, rt0.c4))), GROUP_CONCAT((+ (rt0.c3))) OVER () FROM rt0 WHERE ((((('giJ12!')OR(((NULL)|(0X5a8b4eac)))))AND((((x''))>((x'')))))) LIMIT -1902211839 OFFSET -1809481718; -- 0ms;
SELECT RANK() OVER (), ((((+ (rt0.c2))))<((CAST(rt0.c2 AS TEXT)))), (+ (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c0)))) FROM rt0; -- 0ms;
SELECT CAST(CASE rt0.c1  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 ELSE rt0.c4 END AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c3 FROM rt0 WHERE (LIKELY(DISTINCT ((((x'')AND(NULL)))OR('')))); -- 0ms;
SELECT ALL ((((rt0.c0)IS(rt0.c4))) NOTNULL) FROM rt0 WHERE (((CASE x''  WHEN NULL THEN 0.9773275329469635 ELSE x'9a93' END)|(((x'') BETWEEN (x'') AND (NULL))))); -- 0ms;
SELECT ALL ((((rt0.c0) NOTNULL))GLOB(CAST(0xffffffffa083d466 AS NUMERIC))) FROM rt0 WHERE (('-806841270' COLLATE BINARY IN ())); -- 0ms;
SELECT ALL x'93fe6fc4' FROM rt0 WHERE ((((('r34s왋') ISNULL)) NOTNULL)) GROUP BY ((CAST(rt0.c0 AS REAL))||(((rt0.c4) NOTNULL))); -- 1ms;
SELECT DISTINCT AVG(JULIANDAY(rt0.c3, rt0.c1, rt0.c4)) OVER () FROM rt0; -- 0ms;
SELECT ((((rt0.c2) NOT BETWEEN (rt0.c4) AND (NULL))) BETWEEN (((rt0.c4)OR(rt0.c2))) AND (CASE WHEN rt0.c1 THEN rt0.c2 ELSE 0x4044a020 END)) FROM rt0; -- 4ms;
SELECT COUNT(*) OVER () FROM rt0 WHERE ((((+ (NULL))) NOT BETWEEN ((((-1313001259, NULL, '-0.0')) NOT BETWEEN ((x'', 1543830143, NULL)) AND ((-204425194, 0.08473552934825201, '㹔5')))) AND (CASE NULL  WHEN NULL THEN 0.10454132265284688 ELSE '' END))) LIMIT -1452564867 OFFSET -1724168241; -- 0ms;
SELECT ALL ((CAST(rt0.c0 AS TEXT))AND(((((((((((((rt0.c3)AND(rt0.c3)))OR(rt0.c3)))AND(rt0.c0)))AND(rt0.c1)))OR(NULL)))AND(rt0.c4)))) FROM rt0 WHERE (CAST(RTRIM(x'') AS BLOB)); -- 0ms;
SELECT DISTINCT (UNICODE(rt0.c3) IN ()) FROM rt0 WHERE ((((('') NOT BETWEEN (NULL) AND ('F⯬d-13x')))||(((x'd62691e36b97')<=(x''))))); -- 0ms;
SELECT ALL 0.14467549757783216 FROM rt0 GROUP BY ((((((((((((((((((((rt0.c3)OR(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)))OR(rt0.c2)))OR(((((((((rt0.c3)OR(rt0.c4)))AND('20113803')))AND(rt0.c3)))AND(rt0.c0)))))AND(((-834618919)LIKE(rt0.c4)))))AND((((rt0.c0, rt0.c2, rt0.c3))>((rt0.c4, rt0.c4, NULL))))))AND(LIKELIHOOD(rt0.c2, 0.6081917565224776))))AND(0.7791100907176742)))OR((rt0.c0 IN ()))) HAVING (NOT (((((((((((((rt0.c2)OR(rt0.c4)))AND(rt0.c4)))OR(rt0.c3)))OR(rt0.c2)))OR(rt0.c0)))OR(0X305f7f77)))) LIMIT 1947073337 OFFSET 84283927; -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c0)) NOT BETWEEN ((((('')AND(rt0.c2)))OR(rt0.c4))) AND (((0.6698344073940113)-(rt0.c1)))) FROM rt0 WHERE (CAST(((NULL) ISNULL) AS REAL)); -- 0ms;
SELECT DISTINCT (NOT (((((rt0.c1)OR(rt0.c0)))AND(rt0.c4)))) FROM rt0; -- 0ms;
SELECT rt0.c3 FROM rt0 LIMIT 2128037060 OFFSET -25433129; -- 0ms;
SELECT '-0.0' FROM rt0 NOT INDEXED WHERE ((~ (CASE WHEN x'' THEN 0.08552421331871085 WHEN 0.6346418251129413 THEN '460556108' WHEN '' THEN 0.7791100907176742 END))); -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE (CASE WHEN '1721812555' THEN 0X60e8758 END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((COUNT(rt0.c2))||(((rt0.c4)LIKE(rt0.c0)))), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c3 END COLLATE BINARY, ((((((((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c3)))AND(((rt0.c2) NOT BETWEEN (rt0.c4) AND (rt0.c4)))))OR(((rt0.c3) ISNULL))))AND(((rt0.c3) IS FALSE))))AND(((((((((rt0.c1)AND(rt0.c1)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c2)))) FROM rt0 ORDER BY CAST((((('F')AND(rt0.c2)))OR(rt0.c2)) AS REAL)  NULLS FIRST; -- 0ms;
SELECT ALL COUNT(((((rt0.c4)AND(rt0.c3)))OR(rt0.c0))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((NULL, 0.7338381268675738, rt0.c2)) BETWEEN ((CAST(rt0.c1 AS INTEGER), 'l.', CAST(rt0.c4 AS TEXT))) AND (((('f貎{') NOT BETWEEN (rt0.c1) AND (rt0.c4)), ((((rt0.c0)AND(rt0.c0)))AND(rt0.c2)), CAST(rt0.c3 AS INTEGER)))) FROM rt0 WHERE (CAST(0xffffffff9896bfb1 COLLATE BINARY AS TEXT)); -- 0ms;
SELECT ((CASE rt0.c0  WHEN rt0.c4 THEN '%Rpv(9' END) BETWEEN ((~ (rt0.c3))) AND (NULLIF(DISTINCT rt0.c0, rt0.c1))), rt0.c0, ((- (1.730319453E9)) IN ()) FROM rt0 WHERE ((((0.3557520098265775 IN ('-1967134619')))||((x'a600' IN ())))); -- 0ms;
SELECT DISTINCT CASE WHEN (((rt0.c0)) BETWEEN ((rt0.c3)) AND ((rt0.c1))) THEN CAST(rt0.c4 AS NUMERIC) WHEN rt0.c1 COLLATE BINARY THEN INSTR(rt0.c2, rt0.c4) WHEN 'QHMR' THEN NULL COLLATE NOCASE WHEN ((rt0.c3) IS FALSE) THEN rt0.c0 WHEN NULL THEN (~ ('0.10454132265284688')) ELSE ((rt0.c1)==(0.4467920336561829)) END FROM rt0 WHERE (ABS((NULL IN (x'4456', NULL)))); -- 0ms;
SELECT DISTINCT ((((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c4)))*(CASE rt0.c4  WHEN rt0.c2 THEN rt0.c0 ELSE 'Dt' END)) FROM rt0 LIMIT 750778073 OFFSET 746946562; -- 0ms;
SELECT ALL x'c32a' FROM rt0 WHERE (((((((((((((((((0x2226ec68)AND(x'')))AND(x'')))AND(8.44642918E8)))AND('1298242692')))AND(NULL)))OR('')))AND(((9.85877747E8)>(9.07310711E8)))))AND(((0X534ebed3)<=('136849198'))))) ORDER BY CASE WHEN rt0.c2 COLLATE RTRIM THEN (~ (rt0.c2)) ELSE ((rt0.c0)%(rt0.c4)) END, rt0.c2, ((ROUND(rt0.c1, rt0.c4))*(((((((((rt0.c1)OR(rt0.c4)))AND(x'73f5')))OR(rt0.c4)))AND(rt0.c3))))  NULLS FIRST, ((CASE rt0.c0  WHEN 0.011135890114242875 THEN rt0.c4 ELSE rt0.c3 END)<(((rt0.c2) BETWEEN (rt0.c2) AND (rt0.c2)))) DESC  NULLS LAST; -- 0ms;
SELECT ALL COALESCE((((rt0.c4))>=((rt0.c2))), COUNT(rt0.c0), rt0.c2, (~ (NULL))), CASE WHEN ((rt0.c1) NOT BETWEEN (rt0.c1) AND (rt0.c1)) THEN (rt0.c1 IN ()) WHEN '-1250415440' THEN ((rt0.c2)*(rt0.c3)) WHEN NULL COLLATE RTRIM THEN json_insert(rt0.c3, x'', rt0.c4, rt0.c2, rt0.c3) ELSE ((rt0.c0)>(rt0.c3)) END, ((TYPEOF(DISTINCT rt0.c0)) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(NULL AS REAL) THEN CASE rt0.c4  WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c2 END ELSE (rt0.c4 IN (x'')) END FROM rt0 GROUP BY ((((rt0.c3) NOT BETWEEN (0.052400864824303284) AND (rt0.c4))) IS TRUE), TRIM(DISTINCT rt0.c2 COLLATE NOCASE), ((((((((((rt0.c2)OR(rt0.c3)))AND(rt0.c2)))OR(rt0.c0)))OR(rt0.c4))) ISNULL) LIMIT -1138548417 OFFSET 270792438; -- 0ms;
SELECT DISTINCT (((rt0.c2 IN (rt0.c3, rt0.c3))) NOT BETWEEN (COUNT(*)) AND ('+u+?*')), FIRST_VALUE((+ (UNICODE(rt0.c0)))) OVER (), x'a0bf' FROM rt0 ORDER BY UNLIKELY(DISTINCT rt0.c3) COLLATE BINARY ASC; -- 0ms;
SELECT ALL (((((((((rt0.c2 IN ()))OR(rt0.c1)))AND(((rt0.c0)+(0.5106720318864401)))))AND(rt0.c2 COLLATE NOCASE)))AND(((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c0)))) FROM rt0 WHERE ((- ('!+'))) GROUP BY CAST((rt0.c2 IN (rt0.c4, 6109527)) AS NUMERIC); -- 0ms;
SELECT ALL (+ (('1199700151' IN ()))) FROM rt0 ORDER BY ((((- (rt0.c3)), x'c939', rt0.c1))>=(((- (rt0.c4)), CAST(rt0.c1 AS INTEGER), CAST(rt0.c2 AS NUMERIC)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(CAST(rt0.c1 AS TEXT)) OVER () FROM rt0 WHERE (CASE WHEN (NULL IN ()) THEN (('-1988073404')>(NULL)) END) LIMIT -91325102 OFFSET 2030830563; -- 1ms;
SELECT FIRST_VALUE(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c4)) COLLATE RTRIM) OVER (), (((rt0.c2))>=((CASE '79819736'  WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END))), (rt0.c4 COLLATE NOCASE IN ()) FROM rt0 WHERE (CASE 0x7ae8d79a  WHEN ((x'')OR(x'353a')) THEN (NOT (x'8bd4')) WHEN NULL COLLATE NOCASE THEN (~ (0.5209748162823069)) WHEN LAST_INSERT_ROWID() THEN CAST(-234769899 AS TEXT) END); -- 0ms;
SELECT DISTINCT ((((rt0.c0) IS TRUE)) NOT BETWEEN ((- (rt0.c0))) AND (rt0.c1)) FROM rt0 WHERE (((((('xN')) BETWEEN ((-1656381477)) AND ((x'6548')))) BETWEEN (((0xffffffffb1f684a4)>>(x'0bf0'))) AND (',W'))); -- 0ms;
SELECT DISTINCT ((rt0.c3)IS NOT(0.7331879161630155)) COLLATE NOCASE FROM rt0 WHERE (GLOB(CAST(0Xffffffffc490cdd5 AS BLOB), (NOT (0X6c43551e)))) LIMIT -315176858 OFFSET -834618919; -- 0ms;
SELECT DISTINCT ((((rt0.c2)OR(rt0.c0)))AND(rt0.c4)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT FIRST_VALUE(((0.9682228703306296)|(rt0.c0))) OVER () FROM rt0 WHERE (CASE WHEN ((0xffffffff8db260b2)>>(0.9847864772307251)) THEN (0.916776748649769 IN ()) WHEN (NOT (NULL)) THEN (((('-2102431310')AND(0.2900992186748578)))AND(0.5514599214413229)) WHEN ((x'')|('YQct')) THEN CASE WHEN x'' THEN '-170128228' END END); -- 0ms;
SELECT CAST(((((((((rt0.c2)AND(rt0.c3)))OR(rt0.c2)))OR(rt0.c1)))AND(rt0.c0)) AS INTEGER) FROM rt0 WHERE ((~ ((((873699216)) NOT BETWEEN ((-1.424958241E9)) AND ((NULL)))))) GROUP BY (+ (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c0)))), (~ ((rt0.c3 IN ()))), (((+ (rt0.c1))) NOT BETWEEN (0.06785761878797325) AND ((0xffffffff87c5fc25 IN (rt0.c0)))); -- 0ms;
SELECT DISTINCT ((((rt0.c0)OR((((rt0.c4, rt0.c0, rt0.c4))>=((rt0.c2, rt0.c0, rt0.c2))))))OR(((rt0.c0) IS FALSE))), rt0.c4, ((rt0.c2) NOT BETWEEN (rt0.c2) AND ('')) COLLATE RTRIM FROM rt0; -- 1ms;
SELECT DISTINCT IFNULL((x'' IN ()), (- (rt0.c4))), ((((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c0)))%(((rt0.c1)|(rt0.c4)))), ((MIN(rt0.c2))!=((- (rt0.c2)))) FROM rt0 ORDER BY (('') IS FALSE) DESC; -- 0ms;
SELECT DISTINCT (~ (((rt0.c2)>>(rt0.c0)))) FROM rt0 ORDER BY (- (CAST(rt0.c4 AS INTEGER))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL CAST((((rt0.c1, rt0.c3, rt0.c4)) BETWEEN ((rt0.c2, rt0.c2, rt0.c4)) AND ((rt0.c1, rt0.c1, NULL))) AS BLOB), (((+ (rt0.c2)))-(0xffffffff9fda8b1f)), 0.7201953145439771 FROM rt0 WHERE (((((((((((x'18e7')AND(x'')))AND(NULL)))OR(x'')))AND(x'')))LIKE((NULL IN ())))); -- 0ms;
SELECT DISTINCT NTH_VALUE(((((rt0.c4) IS TRUE))AND(CASE WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c1 END)), (((NOT (rt0.c4))) NOT NULL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((((+ (rt0.c2)))OR(SUM(rt0.c2))))AND((((rt0.c4, rt0.c4, rt0.c2))>((rt0.c1, rt0.c0, rt0.c0))))) FROM rt0 WHERE (CASE (- (''))  WHEN '' COLLATE NOCASE THEN ((0.027202259323522382)|(NULL)) WHEN ((0Xffffffff8e1515fb) ISNULL) THEN CAST(NULL AS NUMERIC) WHEN ((-1.982191492E9)-(0.4623262512092844)) THEN (~ (NULL)) ELSE (x'' IN (0.7505632410364943)) END); -- 0ms;
SELECT DISTINCT FIRST_VALUE(CAST(((rt0.c3)>=(rt0.c2)) AS NUMERIC)) OVER (), ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c4 THEN x'' ELSE rt0.c2 END)AND(((rt0.c2)LIKE(rt0.c2)))))AND(((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c3)))), (- (rt0.c1 COLLATE RTRIM)) FROM rt0; -- 0ms;
SELECT DISTINCT 'x[ig4}	ℿj' FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((NOT (0.4044294206121639)) COLLATE RTRIM); -- 0ms;
SELECT DISTINCT x'' FROM rt0; -- 0ms;
SELECT DISTINCT (((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))))<=((((rt0.c1) NOT NULL)))) FROM rt0 GROUP BY (((((rt0.c3 IN ()))OR(((rt0.c1) ISNULL))))OR(rt0.c0 COLLATE BINARY)) HAVING ((1.036913372E9) ISNULL) ORDER BY ((((rt0.c2)>>(rt0.c0))) NOT NULL) ASC; -- 0ms;
SELECT ((((rt0.c2)||(rt0.c2)))/(CASE WHEN rt0.c0 THEN rt0.c2 WHEN rt0.c2 THEN '-o)ePZ᷐* ' WHEN rt0.c0 THEN x'' ELSE rt0.c3 END)), ((NULL) BETWEEN (rt0.c0) AND ('-945842343')) COLLATE NOCASE, ((rt0.c3)==(rt0.c1)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT (rt0.c1 IN (((rt0.c4)>(rt0.c1)), rt0.c3)) FROM rt0 WHERE (NULL); -- 1ms;
SELECT DISTINCT NULL FROM rt0 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT ((((((((((((rt0.c0)OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c4)))AND(rt0.c1)))OR(TYPEOF(rt0.c2))))OR(((rt0.c0) ISNULL))) FROM rt0 WHERE (2017811875); -- 0ms;
SELECT rt0.c2, 0X12b770fa, NULLIF(CASE WHEN rt0.c0 THEN rt0.c3 ELSE '1944688190' END, GROUP_CONCAT(rt0.c3)) FROM rt0 WHERE (CAST(NULLIF(DISTINCT NULL, '1600468623') AS NUMERIC)); -- 0ms;
SELECT ALL (((rt0.c0 IN ()))<(rt0.c0 COLLATE RTRIM)) FROM rt0 LIMIT -1581553042 OFFSET -1601973146; -- 0ms;
SELECT DISTINCT NULL FROM rt0 GROUP BY ((0.8969906475010067)+(rt0.c4)) HAVING ((((CAST(rt0.c2 AS REAL))OR(TOTAL(rt0.c1))))AND(CASE WHEN rt0.c2 THEN rt0.c3 END)) ORDER BY ((CASE WHEN rt0.c1 THEN rt0.c4 ELSE rt0.c0 END) ISNULL)  NULLS FIRST, ((((rt0.c1))<=((rt0.c3))) IN ())  NULLS FIRST; -- 0ms;
SELECT ALL '*l', (((((((rt0.c4)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c4))))OR(MAX(rt0.c4))))AND(x'72bc')), (((rt0.c4 IN ()))<(((rt0.c4)IS NOT(rt0.c0)))) FROM rt0 WHERE (((((CAST('-70976664' AS TEXT))AND(((('-595421533')) NOT BETWEEN ((x'')) AND ((0.3557520098265775))))))AND(CASE x''  WHEN '0.4978366755898984' THEN '-1712659910' WHEN '1362705791' THEN '0.19604964389096768' WHEN x'' THEN 'ࢠ|T(\' END))); -- 0ms;
SELECT DISTINCT (((((((x'')) NOT BETWEEN ((rt0.c4)) AND ((rt0.c4))))OR(((((((((rt0.c1)OR(rt0.c3)))OR(rt0.c4)))OR(rt0.c2)))OR(rt0.c4)))))OR(((rt0.c0)+(rt0.c3)))), (~ (0.6429634808574014)), ((TRIM(DISTINCT rt0.c1)) NOT BETWEEN (((((rt0.c3)OR(rt0.c1)))OR(rt0.c3))) AND (rt0.c4)) FROM rt0; -- 0ms;
SELECT ((((x'') NOTNULL))IS NOT((rt0.c2 IN ()))), CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC), ((rt0.c0)%(CASE WHEN rt0.c2 THEN rt0.c2 END)) FROM rt0 WHERE ((((0.32801206615443357, NULL, x'52bc9574', 1463122111, NULL)) NOT BETWEEN (((((x'')) BETWEEN ((0xffffffff8eb3fe70)) AND ((0.832354250555033))), UNLIKELY(x''), ((NULL)==(NULL)), ((x'') NOT BETWEEN (x'') AND (0x9ed2610)), CAST('1654312125' AS REAL))) AND ((CASE WHEN 'W%' THEN 0.6074185182035211 WHEN '0.9178753769603805' THEN NULL WHEN 0.14026573378906615 THEN NULL END, ((((NULL)OR(x'd79f')))AND(732551418)), (((('817720501')AND('0.40431478060623205')))AND(']~')), (('136558808')OR('599343551')), (~ ('1779825332')))))); -- 1ms;
SELECT ((((((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c3)))AND(0.8258765203524359 COLLATE NOCASE)))AND(((rt0.c0)!=(rt0.c1)))) FROM rt0 WHERE (((((((((CAST('-152482751' AS NUMERIC))AND((NOT ('1463122111')))))OR(CAST('-1424958241' AS BLOB))))OR((NOT ('-1313001259')))))AND(((NULL) NOT NULL)))); -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c2 THEN rt0.c2 COLLATE RTRIM END FROM rt0; -- 0ms;
SELECT (CASE WHEN rt0.c3 THEN rt0.c1 END IN (rt0.c3, CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END)) FROM rt0 WHERE ((((('' COLLATE BINARY)OR(CAST(609797837 AS TEXT))))OR((('-1138548417') NOT NULL)))); -- 0ms;
SELECT DISTINCT ABS(((rt0.c3)AND(rt0.c1))), LOWER((- (rt0.c0))), DENSE_RANK() OVER ( RANGE  UNBOUNDED PRECEDING) FROM rt0 WHERE ((- ((+ (0.7050932285676725))))); -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c1)!=(rt0.c0)) THEN CAST(rt0.c2 AS REAL) ELSE ((rt0.c0)IS(rt0.c4)) END, (((((((((((rt0.c2))<>((rt0.c1))))AND(0.2007189110206049)))AND(((((((((rt0.c2)OR(rt0.c2)))AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)))))OR(CASE WHEN rt0.c0 THEN 1951112319 END)))OR(CAST(rt0.c4 AS REAL))), ((rt0.c2) IS TRUE) FROM rt0 GROUP BY (LOWER(DISTINCT rt0.c4) IN ()), (rt0.c2 COLLATE BINARY IN ()), CASE WHEN ((rt0.c1)%(rt0.c0)) THEN rt0.c2 WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c1)) THEN (rt0.c1 IN ()) WHEN CAST(rt0.c2 AS TEXT) THEN 'Sm' END; -- 1ms;
SELECT ALL (~ ((rt0.c3 IN ()))), ((((((((((((NULL)AND(rt0.c4)))AND(rt0.c0 COLLATE RTRIM)))AND(((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))))OR(((rt0.c0)>('檦m')))))OR(((rt0.c3)IS NOT(rt0.c1)))))OR('ku')), (((rt0.c2, rt0.c2, rt0.c3)) NOT BETWEEN ((((((rt0.c1)OR(rt0.c4)))OR(rt0.c3)), MAX(rt0.c2), ((rt0.c3)LIKE(rt0.c1)))) AND ((rt0.c0 COLLATE NOCASE, CAST(rt0.c1 AS TEXT), ((rt0.c0) NOT BETWEEN (rt0.c0) AND (rt0.c3))))) FROM rt0 WHERE (((((NULL)%('')))<(CAST(NULL AS REAL)))); -- 0ms;
SELECT DISTINCT 0.280804628010618 FROM rt0 WHERE (((((0.09019741812655258)||(x'b08c'))) BETWEEN (((NULL)<=(NULL))) AND (TYPEOF(0X5359c524)))); -- 0ms;
SELECT DISTINCT (((rt0.c4 IN (rt0.c2)))*((rt0.c1 IN ()))) FROM rt0 WHERE ((((-8.34618919E8) IS TRUE) IN (((NULL) NOTNULL)))); -- 0ms;
SELECT DISTINCT (('yOEE')*(rt0.c3)) FROM rt0; -- 1ms;
SELECT ALL SUM(((rt0.c0)OR(rt0.c0))) FROM rt0; -- 0ms;
SELECT ALL (((rt0.c0)) NOT BETWEEN ((CASE rt0.c3  WHEN rt0.c4 THEN rt0.c1 END)) AND ((((rt0.c2) IS TRUE)))), (((rt0.c3, rt0.c4, rt0.c3)) BETWEEN ((CASE WHEN rt0.c4 THEN rt0.c4 END, 0.6139267666585942, ((((((((rt0.c2)AND(rt0.c2)))OR(0.03087646191723603)))OR(x'')))OR(rt0.c3)))) AND (((rt0.c4 IN ()), ((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)), (((rt0.c0))!=((rt0.c3)))))), NULL, SQLITE_COMPILEOPTION_USED(((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c0))), COUNT(*) OVER ( PARTITION BY ((CASE WHEN rt0.c4 THEN rt0.c4 END)>=(((rt0.c4) BETWEEN (rt0.c3) AND (rt0.c1)))), CAST(CAST(rt0.c0 AS REAL) AS TEXT)) FROM rt0; -- 1ms;
SELECT ALL ((CASE rt0.c2  WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c3 END)||(((rt0.c3)%(rt0.c3)))), COUNT(((rt0.c0)<<(rt0.c1))) OVER ( ROWS BETWEEN rt0.c3 FOLLOWING AND '-207725825' COLLATE BINARY PRECEDING EXCLUDE GROUP), CASE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c0 END  WHEN CASE WHEN rt0.c3 THEN rt0.c3 ELSE rt0.c4 END THEN ((rt0.c1)+(rt0.c4)) ELSE '积eb' END FROM rt0 WHERE (((((x'') IS TRUE)) NOT BETWEEN (((((0.69479336618512)AND('0.5179689784521232')))OR(1058747191))) AND ('994115111')));SELECT DISTINCT CASE WHEN NULL THEN 'x)' ELSE ((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c1)) END, ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c1)))<=((rt0.c2 IN ()))), (((~ (rt0.c1))) NOT BETWEEN (CAST(rt0.c1 AS BLOB)) AND (((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)))) FROM rt0 WHERE (LIKELIHOOD((NOT ('101615448')), 0.9724109723360838)); -- 0ms;
SELECT DISTINCT (((CASE WHEN '1399912197' THEN rt0.c3 END))<(('k慱'))), CASE CASE rt0.c3  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END  WHEN (rt0.c4 IN ()) THEN rt0.c2 COLLATE BINARY ELSE rt0.c1 COLLATE RTRIM END, CASE WHEN '0.6698344073940113' THEN '54397521' ELSE NULL END FROM rt0 WHERE ((NOT ('')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CAST(rt0.c1 COLLATE NOCASE AS TEXT), ((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c0))) IN (((rt0.c4) NOT NULL), COUNT(rt0.c3))), ((rt0.c1 COLLATE NOCASE)|(((((((((rt0.c0)AND(rt0.c2)))AND(rt0.c4)))AND(rt0.c4)))AND(rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT NULL FROM rt0 WHERE ((((CASE NULL  WHEN '' THEN 460556108 END))<>((CASE WHEN '1036913372' THEN ')\n{KTA䳳N' END)))) GROUP BY ((TRIM(DISTINCT rt0.c2, rt0.c2)) BETWEEN (CASE rt0.c1  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c0 END) AND ((rt0.c1 IN (rt0.c4)))); -- 0ms;
SELECT DISTINCT UNLIKELY(NULL), TOTAL(((rt0.c2) BETWEEN (rt0.c2) AND (0.6194984299809175))) OVER (), (((rt0.c0) BETWEEN (rt0.c2) AND (rt0.c2)) IN ()) FROM rt0 WHERE (CAST((((((((('')OR('J&%')))OR(x'')))AND('811564919')))AND('')) AS REAL)); -- 0ms;
SELECT ALL CAST(((((rt0.c1)AND(rt0.c3)))OR(rt0.c4)) AS INTEGER) FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c4 IN ()))OR(((rt0.c0) ISNULL))) FROM rt0 WHERE (NULL) GROUP BY ((CASE ''  WHEN rt0.c0 THEN rt0.c0 ELSE rt0.c4 END)+((((rt0.c2, rt0.c2, rt0.c4))<=((rt0.c4, rt0.c3, rt0.c1))))) HAVING CASE '61729676'  WHEN (rt0.c1 IN (rt0.c1, rt0.c1)) THEN (((rt0.c2, rt0.c4, rt0.c0))<>((rt0.c0, rt0.c3, rt0.c2))) END; -- 0ms;
SELECT DISTINCT ((0.22710859682450435) BETWEEN (rt0.c2 COLLATE RTRIM) AND (x'0be2' COLLATE NOCASE)), (((((rt0.c4, rt0.c1, rt0.c3))=((rt0.c4, rt0.c1, rt0.c2))))<=(NULL)), COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL LAST_VALUE(((((((((rt0.c1)AND('213910212')))AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c3)) COLLATE NOCASE) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT COALESCE((((rt0.c0))>((rt0.c2))), (rt0.c3 IN (rt0.c0))) FROM rt0; -- 5ms;
SELECT ((((rt0.c0)>>(rt0.c2)))+(SUM(rt0.c2))), ((((((rt0.c3) ISNULL))OR(CAST(rt0.c1 AS INTEGER))))OR(CAST(rt0.c4 AS NUMERIC))), ((rt0.c2)<=(rt0.c0)) COLLATE NOCASE FROM rt0 LIMIT 1285508007; -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ROWS BETWEEN NULL FOLLOWING AND ((CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 WHEN 'Mᄙ/	' THEN rt0.c4 END) IS TRUE) PRECEDING EXCLUDE GROUP) FROM rt0;SELECT DISTINCT (((('535455070')OR((rt0.c3 IN ()))))OR(CASE rt0.c3  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c4 END)) FROM rt0; -- 1ms;
SELECT DISTINCT (NOT ((rt0.c4 IN ()))), (((rt0.c4 IN ()))<>((((rt0.c4)) BETWEEN ((rt0.c4)) AND ((rt0.c0))))), 0.7689636816741756, (((NOT (rt0.c2))) BETWEEN (((rt0.c1) ISNULL)) AND (((rt0.c0) IS TRUE))), CAST((((rt0.c2))<((rt0.c0))) AS NUMERIC) FROM rt0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((0.8849323754860063) NOTNULL), ((((rt0.c1)>(NULL))) IS FALSE), (('z') ISNULL) FROM rt0 ORDER BY ((((('ﭐTLAW')!=(x''))))<((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))))) DESC  NULLS FIRST; -- 0ms;
SELECT ((x'' COLLATE BINARY)GLOB(((rt0.c3)|(rt0.c1)))), (((((~ (rt0.c2)))OR(highlight(rt0.c3, rt0.c2, rt0.c0, rt0.c4))))OR((((rt0.c2, rt0.c2, rt0.c4))!=((rt0.c3, rt0.c1, rt0.c0))))), (CAST(rt0.c1 AS REAL) IN ()) FROM rt0 WHERE (((CAST(NULL AS INTEGER)) NOTNULL)) LIMIT -1776984279 OFFSET -882345813; -- 0ms;
SELECT DISTINCT ((((rt0.c4)AND(rt0.c4)))AND(rt0.c0)) COLLATE BINARY, SUM(((rt0.c0)!=(rt0.c3))) COLLATE BINARY, ((rt0.c2)OR(COALESCE(rt0.c3, rt0.c0))) FROM rt0; -- 0ms;
SELECT (((NOT (rt0.c3))) NOTNULL), (((rt0.c1)AND(rt0.c4)) IN ()), MAX(((rt0.c2)<<(rt0.c0))) FROM rt0 WHERE ('6N'); -- 0ms;
SELECT ALL LAG(x'', x'e761', rt0.c4) OVER () FROM rt0; -- 0ms;
SELECT NULL FROM rt0 GROUP BY ((((((rt0.c1)OR(rt0.c0)))AND(rt0.c4))) NOT BETWEEN ((~ (rt0.c0))) AND (((rt0.c2)<(rt0.c2)))); -- 0ms;
SELECT ALL (((rt0.c3 IN ())) NOTNULL), '3-h/8t{]}1k', ROW_NUMBER() OVER () FROM rt0 WHERE (CAST(((0x36147677) IS TRUE) AS TEXT)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c0 AS TEXT))AND((('cW7u')!=(rt0.c1)))), (NOT (CASE rt0.c0  WHEN rt0.c4 THEN rt0.c2 WHEN '~\n隣x+' THEN NULL WHEN rt0.c1 THEN rt0.c0 ELSE rt0.c2 END)), (((((((0.9980221136524197)OR(rt0.c2)))AND(rt0.c1))))!=((NULL))) FROM rt0 WHERE ((PRINTF(0.5506657175134496) IN (((('Mk')) NOT BETWEEN (('1721812555')) AND ((0xffffffffea2548e8)))))); -- 0ms;
SELECT MAX(CASE rt0.c4  WHEN '-234769899' THEN rt0.c3 WHEN NULL THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c4 END) FROM rt0 WHERE ('1578083658'); -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 GROUP BY ((((LIKE(rt0.c1, rt0.c2, '0'))OR(((((((((rt0.c3)AND(rt0.c2)))AND(rt0.c1)))AND(rt0.c1)))OR(rt0.c2)))))OR(((rt0.c4) NOT NULL))) HAVING (+ (CAST(rt0.c1 AS NUMERIC))); -- 0ms;
SELECT DISTINCT (((rt0.c2) NOT NULL) IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT MAX(rt0.c3, CASE rt0.c2  WHEN rt0.c4 THEN rt0.c3 END) FROM rt0 WHERE (CASE WHEN '' THEN (+ (0.5784069602294153)) WHEN NULLIF(DISTINCT 'rr	D?q', '286902317') THEN (('-70817865')||(1071875834)) WHEN (((',uCZu'))>=((x''))) THEN ((NULL) NOT BETWEEN (NULL) AND (0.9734840089842224)) END) GROUP BY (((rt0.c1 IN ()))<<(rt0.c1 COLLATE BINARY)); -- 0ms;
SELECT DISTINCT '0.22137530492886326', ((((rt0.c3) IS FALSE)) NOT BETWEEN ((((x'')) BETWEEN ((rt0.c4)) AND ((rt0.c2)))) AND (GROUP_CONCAT(rt0.c2))), rt0.c3 FROM rt0; -- 0ms;
SELECT ((((0xffffffff9c6aa6d7)>(rt0.c0))) BETWEEN (TRIM(rt0.c0, rt0.c4)) AND ((NULL IN ()))) FROM rt0; -- 0ms;
SELECT ((rt0.c3 COLLATE NOCASE) NOTNULL), CASE WHEN NULL THEN ((((rt0.c1)OR(rt0.c1)))OR(rt0.c2)) ELSE (rt0.c4 IN (rt0.c0)) END, NULL FROM rt0; -- 0ms;
SELECT ALL CAST(rt0.c1 COLLATE BINARY AS TEXT), GROUP_CONCAT(((((rt0.c3)OR(rt0.c2)))OR(rt0.c2))) OVER (), COUNT(CASE rt0.c3  WHEN 0.1626724524582157 THEN '-337324382' END) FROM rt0; -- 0ms;
SELECT DISTINCT UNLIKELY(rt0.c3 COLLATE NOCASE), ((((rt0.c1)%(rt0.c0)))|(((rt0.c3)GLOB(rt0.c1)))), ((((((((((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)))AND(rt0.c4)))OR(rt0.c1)))AND(((rt0.c4) NOT NULL))))OR((~ (rt0.c2)))) FROM rt0 WHERE (NULLIF(x'', x'') COLLATE NOCASE); -- 0ms;
SELECT (((- (NULL)))LIKE((+ (rt0.c4)))) FROM rt0 WHERE ((((('1519079084')<=(NULL))) BETWEEN (((('쟙b'))<>((-6602557)))) AND (0X66a0c64b COLLATE NOCASE))); -- 0ms;
SELECT ALL (((((rt0.c0))<=((rt0.c2)))) BETWEEN (HEX(DISTINCT rt0.c2)) AND (((((rt0.c2)OR(rt0.c2)))AND(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT MAX((((('+u+?*')AND(rt0.c4)))OR(rt0.c4))) FROM rt0 WHERE ((((((((((((((0.3475531439306059 IN (NULL)))OR(((((NULL)AND(1828428446)))AND(0x6a9506a1)))))OR(((x'')IS('811564919')))))OR(TIME(0.4898432477340543, NULL, '-1505174091'))))OR(CASE x''  WHEN 0.028035094561687623 THEN 'w1m~%' END)))OR(('}?hH?' IN (NULL)))))AND(COALESCE(x'6c415bfd', NULL)))); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c2) ISNULL)) OVER ( ORDER BY ((((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c3)))/(HEX(rt0.c1))) DESC  NULLS FIRST), (CASE WHEN rt0.c4 THEN rt0.c3 END IN ()), LEAD((- (x'')), x'', ((((CASE rt0.c0  WHEN rt0.c4 THEN rt0.c1 END)OR((- (rt0.c3)))))AND('AB'))) OVER ( ORDER BY ((rt0.c3 COLLATE BINARY) NOT NULL)) FROM rt0 WHERE ((NULL IN (NULL, NULL)) COLLATE NOCASE COLLATE RTRIM) GROUP BY (((rt0.c3 IN ()))==(rt0.c3 COLLATE NOCASE)) HAVING rt0.c4; -- 0ms;
SELECT (x'80f0e96e' COLLATE BINARY IN ()) FROM rt0 WHERE (((((NULL)|(x'')))-(CASE WHEN -7.0976664E7 THEN 1740123924 ELSE '0.0' END))); -- 0ms;
SELECT ALL NTILE(((0.7633213860474724)-((rt0.c0 IN ())))) OVER ( RANGE  UNBOUNDED PRECEDING EXCLUDE TIES), ((CAST(rt0.c3 AS NUMERIC)) NOTNULL), ((rt0.c4 COLLATE BINARY) NOT BETWEEN ((rt0.c4 IN (rt0.c2))) AND (((rt0.c1)=(rt0.c0)))) FROM rt0 WHERE ((((((0.8948052126084776) NOTNULL)))<=((NULL COLLATE RTRIM)))); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN rt0.c2 THEN GLOB(rt0.c2, rt0.c1) WHEN (~ ('')) THEN AVG(rt0.c0) WHEN ((rt0.c1)*(rt0.c3)) THEN ((rt0.c2) BETWEEN (x'3d12') AND (rt0.c1)) END FROM rt0 WHERE ((((((NULL) ISNULL), (0X277e9415 IN ()), (((934838805)) BETWEEN (('vXi&U씤q')) AND (('c\')))))=((((0xffffffffe3e4cacb)-('f貎Y')), ((((0.8208048484562928)AND(x'')))AND('ix&혿㯄蕱!Gd')), PRINTF('+g'))))) GROUP BY SQLITE_VERSION() HAVING rt0.c2 COLLATE BINARY; -- 0ms;
SELECT DISTINCT ABS(DISTINCT CAST(rt0.c0 AS BLOB)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN ((rt0.c2)<<(rt0.c1)) THEN NULLIF(rt0.c1, x'19862c1e') END FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c4)))) FROM rt0 WHERE ((+ (((((((((0xfffffffff201b215)AND('')))OR(-70976664)))AND(0x1b73874c)))OR('bz[|yM<^'))))) ORDER BY ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c3)) COLLATE RTRIM  NULLS FIRST; -- 0ms;
SELECT rt0.c3 COLLATE BINARY FROM rt0; -- 0ms;
SELECT (((((((((((rt0.c4)AND(rt0.c2)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c2)), ((((rt0.c3)AND(rt0.c3)))AND(rt0.c0)), '-802097138'))<((((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c1)), ((rt0.c3) IS FALSE), LOWER(rt0.c1)))) FROM rt0 WHERE ((((('0.38844827660396153') BETWEEN (x'') AND (NULL)))AND(NULL))); -- 0ms;
SELECT ALL CASE WHEN ((rt0.c3) NOT NULL) THEN GLOB(rt0.c3, rt0.c2) WHEN ((rt0.c0) NOT BETWEEN (rt0.c2) AND (rt0.c3)) THEN CASE rt0.c1  WHEN rt0.c2 THEN rt0.c1 WHEN rt0.c4 THEN rt0.c2 WHEN '' THEN 1816352030 END WHEN 0.023835170803244154 THEN GROUP_CONCAT(rt0.c0) END, CASE WHEN 0.4306112139507208 THEN TOTAL(rt0.c0) ELSE rt0.c2 END, CASE TOTAL(rt0.c2)  WHEN PRINTF(rt0.c4) THEN rt0.c1 COLLATE BINARY WHEN CASE x'87c5'  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c2 END THEN CASE rt0.c0  WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END WHEN ((((rt0.c1)AND(rt0.c0)))OR(rt0.c3)) THEN CAST(rt0.c0 AS INTEGER) END FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c0 COLLATE NOCASE IN ()) FROM rt0 WHERE ((((('-910418910')<('u3'))) ISNULL)); -- 0ms;
SELECT DISTINCT CASE CAST(rt0.c0 AS NUMERIC)  WHEN (NOT (rt0.c3)) THEN x'' WHEN ((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c4)))OR(rt0.c2)))AND(rt0.c3)) THEN ((rt0.c4)<(rt0.c4)) WHEN ((rt0.c1)||(rt0.c4)) THEN (NOT (rt0.c4)) ELSE ((rt0.c4) ISNULL) END FROM rt0 WHERE (CAST(CASE WHEN '1730319453' THEN '1021703113' ELSE '-264697510' END AS INTEGER)); -- 0ms;
SELECT ALL (((((~ (rt0.c1)))OR(((rt0.c3)<(rt0.c0)))))AND(((rt0.c0)-(rt0.c0)))) FROM rt0 WHERE ((((((0x7532f6bd))<=((NULL))))AND(((0.989865796024083) ISNULL)))); -- 0ms;
SELECT CASE WHEN rt0.c0 COLLATE NOCASE THEN ((rt0.c2)&(rt0.c3)) ELSE ((((rt0.c2)AND(rt0.c2)))OR(NULL)) END FROM rt0; -- 0ms;
SELECT ALL (((rt0.c3 IN ())) NOT BETWEEN ((((('-801239471')OR(rt0.c0)))OR(rt0.c1))) AND (((rt0.c1) NOT NULL))) FROM rt0 WHERE ((~ (0.05380465507624921))); -- 0ms;
SELECT ALL ((((rt0.c2)IS NOT(rt0.c1)))=(rt0.c1)) FROM rt0; -- 0ms;
SELECT DISTINCT CASE COUNT(*)  WHEN SUM(rt0.c4) THEN ((rt0.c4)LIKE(rt0.c3)) WHEN rt0.c0 THEN 0.48003197346635373 COLLATE NOCASE WHEN CASE rt0.c0  WHEN rt0.c3 THEN rt0.c1 ELSE rt0.c3 END THEN rt0.c3 WHEN rt0.c3 COLLATE BINARY THEN (- (rt0.c0)) WHEN ((rt0.c3) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN rt0.c4 END, '852280614', rt0.c0 FROM rt0 WHERE ((((((((((('-1601973146')AND(x'')))AND(0.6748829915799175)))OR(x'')))AND(0.2130719211728347)))>=(NULL))); -- 0ms;
SELECT ')\n{KTA䳳N' FROM rt0 WHERE (((CASE x''  WHEN '1\r]pl[' THEN '-234769899' ELSE NULL END) ISNULL)); -- 0ms;
SELECT DISTINCT UNLIKELY(DISTINCT ((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c4))), CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 END COLLATE NOCASE, CASE WHEN ((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)) THEN (- (0X790c03e3)) WHEN (rt0.c0 IN (x'7367', rt0.c2)) THEN ((rt0.c2)*(rt0.c1)) WHEN ((rt0.c4)LIKE(rt0.c2)) THEN (((rt0.c4, rt0.c0, rt0.c2))>((rt0.c2, rt0.c3, rt0.c1))) ELSE CAST(rt0.c2 AS REAL) END FROM rt0 GROUP BY COALESCE(DISTINCT INSTR(rt0.c4, rt0.c2), CASE WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c1 END) HAVING CAST(0.26480071443032527 AS NUMERIC) ORDER BY ((((rt0.c1) NOTNULL))LIKE(COALESCE(rt0.c0, x'')))  NULLS FIRST; -- 0ms;
SELECT ALL ((((rt0.c3)*(rt0.c1)))>=(rt0.c0)), (((rt0.c1 IN (rt0.c3, rt0.c2)))OR((((rt0.c2)) BETWEEN ((rt0.c0)) AND ((rt0.c3))))), (((NULL IN ()))>=(((rt0.c1)+(rt0.c3)))) FROM rt0 WHERE (((CASE x'f8d8'  WHEN NULL THEN '' END) NOT BETWEEN (((0.5878304475766043)>>('1781017898'))) AND ((x'' IN ())))); -- 0ms;
SELECT DISTINCT (COUNT(*) IN ()) FROM rt0 WHERE (CASE WHEN CAST(x'' AS INTEGER) THEN ((((((((NULL)OR(-1309244252)))OR('N\r*d')))OR('1771392672')))OR(NULL)) WHEN CASE WHEN NULL THEN NULL WHEN 0X4a3208a0 THEN 'V''G' WHEN NULL THEN 0x1b73874c ELSE NULL END THEN ((((x'')OR('1113620279')))OR('1298242692')) WHEN CAST(0Xffffffffe2b8dc7b AS NUMERIC) THEN ((x'') BETWEEN (NULL) AND (NULL)) ELSE ((x'')-(1.519079084E9)) END); -- 0ms;
SELECT DISTINCT (rt0.c3 IN (CAST(rt0.c2 AS INTEGER))), CASE WHEN ABS(DISTINCT rt0.c3) THEN ((('H>')) BETWEEN (('0.06785761878797325')) AND ((rt0.c0))) ELSE SQLITE_COMPILEOPTION_USED(rt0.c0) END, ((rt0.c1)>=(CASE WHEN rt0.c0 THEN rt0.c1 WHEN 0.08938931700423969 THEN rt0.c1 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c1 WHEN x'8290' THEN rt0.c4 END)) FROM rt0; -- 0ms;
SELECT '-695690587' FROM rt0 LIMIT -96305790 OFFSET 1966274237; -- 0ms;
SELECT ALL UPPER(DISTINCT (((rt0.c0)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))), (((rt0.c3 IN (rt0.c3, rt0.c0))) NOTNULL), ((((rt0.c0 IN ())))=((((((rt0.c4)OR(rt0.c0)))OR(x'3862'))))) FROM rt0; -- 0ms;
SELECT ALL ((((((rt0.c3)LIKE(rt0.c2)))AND(CASE rt0.c3  WHEN rt0.c4 THEN rt0.c0 END)))OR(MIN(rt0.c2))), ((((rt0.c4)|(rt0.c0)))OR(0.8367588736071652)), (rt0.c2 COLLATE NOCASE IN ((('')<=(rt0.c0)))), (~ (((rt0.c2) NOTNULL))), CAST(rt0.c2 AS TEXT) FROM rt0 ORDER BY (((CASE WHEN rt0.c0 THEN x'' END, (rt0.c0 IN ()), ((((rt0.c4)AND(rt0.c3)))AND(rt0.c1))))>=((((rt0.c4)%(rt0.c4)), (rt0.c4 IN ()), (rt0.c0 IN ())))), (((rt0.c0 IN ()))=(((rt0.c4) IS FALSE))) DESC; -- 1ms;
SELECT DISTINCT (((rt0.c1 IN (x'a374', rt0.c0)))*((((rt0.c3)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c3))))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c3 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c1 END COLLATE RTRIM, '\n(&r(e', rt0.c1 FROM rt0 WHERE (CAST(CAST(',' AS INTEGER) AS REAL)) GROUP BY ((((CASE rt0.c2  WHEN rt0.c4 THEN rt0.c4 ELSE '-1035876058' END)AND(((rt0.c4)%(rt0.c0)))))AND(CAST(rt0.c3 AS BLOB))), NULL, CAST(((rt0.c3)>=(rt0.c4)) AS TEXT); -- 0ms;
SELECT DISTINCT ((CASE rt0.c4  WHEN '' THEN rt0.c2 END) IS TRUE) FROM rt0 ORDER BY (((rt0.c3))<>((((rt0.c1) ISNULL)))) ASC  NULLS LAST; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY) BETWEEN (COUNT(*)) AND (((((x'')OR(rt0.c0)))AND(rt0.c0)))), ((COUNT(rt0.c0)) NOT BETWEEN ((((rt0.c4, 0.07120877156399585, rt0.c4, rt0.c1, rt0.c1)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c2, rt0.c0, rt0.c2)) AND ((rt0.c4, rt0.c1, rt0.c4, rt0.c2, rt0.c2)))) AND (rt0.c2)), (((((rt0.c2)OR(rt0.c4)))OR(rt0.c2)) IN ()), FIRST_VALUE(CAST((~ (rt0.c3)) AS BLOB)) OVER (), load_extension(((rt0.c0)<=(rt0.c4)), (+ (rt0.c2))) FROM rt0 GROUP BY ((((NULL)AND((rt0.c2 IN (rt0.c1)))))AND((rt0.c2 IN ()))), (+ (rt0.c3 COLLATE BINARY)), ((((rt0.c1))!=((rt0.c1))) IN ());SELECT DISTINCT rt0.c0 FROM rt0; -- 0ms;
SELECT ((rt0.c1) NOTNULL) COLLATE RTRIM FROM rt0; -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c2) BETWEEN (rt0.c2) AND (838718385)))) AND ((rt0.c4))), GROUP_CONCAT(((((rt0.c2)AND(rt0.c0)))OR(rt0.c4))) FILTER(WHERE ((rt0.c4 COLLATE RTRIM)/(((rt0.c2) NOTNULL)))) OVER (), (~ (((rt0.c4)<=(rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL (NOT (MAX(rt0.c4))) FROM rt0; -- 0ms;
SELECT DISTINCT (+ (((((rt0.c3)AND(rt0.c1)))AND(rt0.c3)))) FROM rt0 WHERE (UNLIKELY((~ ('-1248724719')))); -- 0ms;
SELECT 'Ue KK' FROM rt0; -- 0ms;
SELECT ALL (+ (TOTAL(rt0.c1))), (((''))>((((rt0.c1)/(rt0.c3))))), (((((rt0.c2, rt0.c1, rt0.c1)) BETWEEN ((rt0.c0, rt0.c1, rt0.c0)) AND ((rt0.c3, rt0.c4, rt0.c4)))) IS TRUE) FROM rt0 WHERE ((((x'3d86')) NOT BETWEEN ((TRIM(0.911123875502118))) AND (((((0.7505632410364943)) NOT BETWEEN (('1021703113')) AND ((88140279))))))); -- 0ms;
SELECT DISTINCT (TOTAL(rt0.c2) IN ()) FROM rt0 WHERE (LIKELIHOOD(DISTINCT ('y9Np' IN ()), 0.5119878949004846)); -- 0ms;
SELECT (+ ((rt0.c3 IN ()))) FROM rt0; -- 0ms;
SELECT ALL load_extension((((rt0.c2, rt0.c3, 0.7742058668440989))>=((rt0.c3, rt0.c2, rt0.c0))), ((rt0.c1)IS(rt0.c2))), (((((((((rt0.c1)AND(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))AND(rt0.c4)) IN (rt0.c0, ((rt0.c4)-(rt0.c3)))), TRIM(DISTINCT ((rt0.c3) NOT BETWEEN (rt0.c0) AND (rt0.c1))) FROM rt0 WHERE (((((((((CASE '817720501'  WHEN NULL THEN 9.94115111E8 WHEN '뮡X' THEN x'b3c5' WHEN 0.47451565915253735 THEN x'' END)AND((- (0.4421991686831015)))))AND(CAST(x'2c058679' AS BLOB))))OR(((x'') IS TRUE))))AND(x'' COLLATE RTRIM))) ORDER BY NULLIF(DISTINCT rt0.c1, CASE rt0.c3  WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN '-936920843' THEN rt0.c1 ELSE rt0.c0 END) ASC  NULLS FIRST; -- 0ms;
SELECT ((DATETIME(rt0.c0, rt0.c1, rt0.c3)) ISNULL) FROM rt0 WHERE (((CASE WHEN NULL THEN 0.9416129249556291 WHEN NULL THEN 0.9858985912034839 WHEN x'0496' THEN NULL END) NOT BETWEEN ((('1283261070') IS FALSE)) AND (((0X2687f211) BETWEEN ('1316806943') AND (0.8312265477978055))))); -- 0ms;
SELECT DISTINCT rt0.c0 FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT ((GROUP_CONCAT(rt0.c3))+(((((((((((((rt0.c4)OR(rt0.c0)))OR(rt0.c0)))OR('Rf')))AND(rt0.c1)))AND(rt0.c4)))AND(rt0.c1)))), SUM(((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c3))) OVER (), ((((TOTAL(rt0.c3))AND((((rt0.c1))<=((rt0.c2))))))OR(0.21573409746743843)), CASE WHEN rt0.c0 THEN rt0.c3 ELSE rt0.c1 END COLLATE NOCASE, (json_extract(rt0.c0, rt0.c1) IN ()) FROM rt0 WHERE (102471498); -- 0ms;
SELECT ALL (~ (((rt0.c0)<<(rt0.c0)))) FROM rt0 WHERE (CAST(((0xfffffffff5edb383)&(0.9849233622033227)) AS BLOB)); -- 0ms;
SELECT ALL LOWER((- (rt0.c3))) FROM rt0 WHERE ((((827201752 IN ()))OR((NOT ('I'))))); -- 0ms;
SELECT ALL ((((rt0.c1)GLOB(rt0.c0)))<((- (rt0.c0)))) FROM rt0 GROUP BY '1654312125' ORDER BY (rt0.c1 IN ((rt0.c1 IN ()), ((rt0.c0) NOT BETWEEN (rt0.c3) AND (rt0.c0)))), CAST(((rt0.c4) IS FALSE) AS TEXT); -- 1ms;
SELECT DISTINCT (((rt0.c0, rt0.c2, '-0.0')) NOT BETWEEN ((rt0.c2 COLLATE BINARY, ((rt0.c3)AND(rt0.c2)), (+ ('')))) AND ((MIN(rt0.c3), CAST(rt0.c1 AS BLOB), (- (rt0.c3))))), rt0.c0, (((((rt0.c2)OR(rt0.c4)))AND(rt0.c0)) IN ((~ (rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c0 ELSE rt0.c1 END) IS FALSE) FROM rt0 WHERE (NULL) GROUP BY (SQLITE_COMPILEOPTION_GET(rt0.c0) IN (((((((((-1602990139)AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c4)))OR(rt0.c3)))) HAVING ((CAST(rt0.c1 AS NUMERIC)) NOT BETWEEN (((rt0.c1) IS TRUE)) AND (((((rt0.c1)OR(rt0.c3)))AND(rt0.c1)))); -- 0ms;
SELECT DISTINCT SUM(((0.09122557836294365) ISNULL)) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT (((((((rt0.c3)AND(rt0.c1)))OR(rt0.c4))))>=((((rt0.c4)IS NOT(rt0.c1))))) FROM rt0 WHERE (COALESCE(CAST(0X347f69aa AS NUMERIC), LIKELIHOOD(NULL, 0.27313097382364127))) ORDER BY HEX(CAST(rt0.c0 AS REAL))  NULLS FIRST, ((((~ (rt0.c3)), CASE NULL  WHEN rt0.c3 THEN rt0.c1 END, ((((rt0.c4)OR(rt0.c0)))AND(rt0.c3))))==((CAST(rt0.c2 AS NUMERIC), '', ((rt0.c0)<=('sm%')))))  NULLS FIRST; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c3)+(rt0.c0)))AND(CAST(rt0.c3 AS TEXT))))AND(((rt0.c2) IS FALSE))))AND(rt0.c4 COLLATE BINARY)))AND(((rt0.c3)-(rt0.c1)))) FROM rt0; -- 0ms;
SELECT ALL ((((((((((((((rt0.c4)OR(rt0.c4)))OR(rt0.c0)))OR(0.8259661828944187)))OR(rt0.c4)))OR(rt0.c4)))OR(rt0.c1)))<<((((rt0.c1)) BETWEEN ((rt0.c2)) AND ((rt0.c0))))) FROM rt0 WHERE (CAST(NULL COLLATE RTRIM AS INTEGER)); -- 0ms;
SELECT DISTINCT (~ (ABS(rt0.c2))), (((TRIM(DISTINCT NULL, rt0.c1), ((rt0.c2)+(rt0.c2)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c0 END))<((NULLIF(DISTINCT rt0.c0, rt0.c0), ((rt0.c2)>(rt0.c0)), (rt0.c3 IN ())))), (((rt0.c4 IN ())) BETWEEN (((((rt0.c0)AND(rt0.c4)))OR(rt0.c3))) AND ((~ (rt0.c3)))) FROM rt0 GROUP BY ((((rt0.c0)GLOB(rt0.c0))) NOT BETWEEN (((rt0.c0)AND(rt0.c4))) AND (((-1533010672)IS(rt0.c4)))); -- 0ms;
SELECT DISTINCT json(((((x'')OR(rt0.c0)))OR(rt0.c1))), ((((rt0.c4)OR(rt0.c0))) NOT NULL), (x'' IN (((rt0.c2)>=(rt0.c2)), rt0.c1 COLLATE RTRIM)), (((rt0.c1) NOT BETWEEN (rt0.c2) AND (rt0.c0)) IN ()), (((rt0.c4, rt0.c3, rt0.c2, rt0.c1, rt0.c3)) BETWEEN ((((rt0.c1)/(rt0.c2)), ((((rt0.c4)AND(rt0.c4)))OR(rt0.c1)), ((x'')!=(rt0.c3)), CASE rt0.c2  WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c2 END, ((rt0.c1)=(rt0.c2)))) AND (((NOT (rt0.c1)), (rt0.c2 IN ()), ((((((((rt0.c2)OR(rt0.c0)))OR(rt0.c4)))AND(rt0.c0)))AND(rt0.c3)), TOTAL(rt0.c1), ((rt0.c1) NOT BETWEEN (rt0.c3) AND (rt0.c4))))) FROM rt0; -- 1ms;
SELECT LAST_INSERT_ROWID() COLLATE NOCASE FROM rt0; -- 0ms;
SELECT DISTINCT ((((((((((rt0.c0) IS FALSE))OR(rt0.c2 COLLATE NOCASE)))OR(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c0 END)))AND(TYPEOF(DISTINCT rt0.c3))))OR(((rt0.c0) IS TRUE))), ((((- (rt0.c1))))<=(((- (rt0.c2))))), rt0.c1 FROM rt0; -- 3ms;
SELECT DISTINCT CASE ((rt0.c2)!=(rt0.c1))  WHEN ((rt0.c1) IS TRUE) THEN 1.742497734E9 WHEN ((rt0.c4) IS FALSE) THEN '-1601973146' WHEN (+ (rt0.c0)) THEN rt0.c3 COLLATE NOCASE ELSE CASE WHEN rt0.c0 THEN rt0.c2 ELSE rt0.c4 END END, ((((((((rt0.c0)AND(rt0.c4)))AND(rt0.c0)))AND((((0.1286352721942915))>=((x'1c92'))))))OR(((rt0.c4)GLOB(rt0.c2)))), (((((rt0.c0)) BETWEEN ((x'067d')) AND ((rt0.c2))))<((((rt0.c0, rt0.c3, x'175c'))>=((rt0.c3, rt0.c4, rt0.c4))))) FROM rt0 WHERE (((('\nl(' IN (0.1762003317602333, x'')))&((x'' IN ('1730319453', NULL))))); -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0 WHERE ((CASE 'ﹰG!5Gozx'  WHEN x'e75f' THEN 'sdfell僉_' END IN ())) ORDER BY ((((~ ('-1838386973'))))>=((rt0.c3))) ASC; -- 0ms;
SELECT DISTINCT (rt0.c0 IN (CAST(rt0.c3 AS TEXT))) FROM rt0 WHERE (CAST(((1.316806943E9)IS NOT(0.0015900414031134735)) AS BLOB)); -- 0ms;
SELECT ALL CASE WHEN (~ (rt0.c0)) THEN (((rt0.c0, rt0.c4, rt0.c1))<((rt0.c1, rt0.c0, rt0.c1))) END FROM rt0; -- 1ms;
SELECT DISTINCT TYPEOF(DISTINCT (~ (rt0.c4))) FROM rt0 WHERE ((0.1990257718757833 IN ()) COLLATE RTRIM) EXCEPT SELECT DISTINCT SUM(((rt0.c4)&(rt0.c0))) OVER () FROM rt0 WHERE (((((x'f499')) BETWEEN ((NULL)) AND ((1.399912197E9))) IN ())); -- 0ms;
SELECT ALL RANK() OVER () FROM rt0 ORDER BY (NULL IN ()) ASC  NULLS LAST; -- 0ms;
SELECT IFNULL(DISTINCT ((rt0.c4)-('206401517')), ((rt0.c0) BETWEEN (rt0.c1) AND (rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c1)>((rt0.c0 IN ()))) FROM rt0 WHERE (0.5660607400161518); -- 0ms;
SELECT CASE WHEN 2.13910212E8 THEN (((rt0.c4))<=((rt0.c2))) ELSE 9.07310711E8 END, rt0.c0, ((GLOB(rt0.c2, rt0.c1)) NOT NULL) FROM rt0 ORDER BY CASE WHEN ((((((((rt0.c2)OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)))AND(rt0.c1)) THEN CAST(rt0.c3 AS NUMERIC) WHEN ((((((((rt0.c0)OR(rt0.c1)))OR(rt0.c0)))AND(rt0.c4)))OR(rt0.c4)) THEN (('X㧞rS}')>>(rt0.c1)) WHEN ((rt0.c0)-(rt0.c3)) THEN CASE WHEN rt0.c2 THEN rt0.c0 ELSE rt0.c2 END END DESC; -- 1ms;
SELECT ALL (((((rt0.c3)>=(rt0.c3)), (('')%(rt0.c0)), (NOT (rt0.c2))))<=(('0.3454720794577829' COLLATE BINARY, CASE WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c0 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c3 ELSE rt0.c4 END, ((rt0.c1)AND(rt0.c4))))) FROM rt0 LIMIT -264697510 OFFSET 719427075; -- 0ms;
SELECT IFNULL(DISTINCT ((((rt0.c2)AND(rt0.c1)))AND(rt0.c0)), ((rt0.c2)||('3)'))) FROM rt0 LIMIT -1373541636 OFFSET 1486733278; -- 0ms;
SELECT (((('1690957316')OR(rt0.c0))) NOT NULL) FROM rt0; -- 0ms;
SELECT ALL (- (((rt0.c3)||(rt0.c4)))) FROM rt0; -- 0ms;
SELECT ALL (((((~ (rt0.c0)))OR(CAST(rt0.c0 AS INTEGER))))OR((- (rt0.c4)))) FROM rt0 WHERE (((x'c0cf' COLLATE BINARY)GLOB((NOT (x''))))); -- 0ms;
SELECT (- (AVG(rt0.c1))) FROM rt0; -- 0ms;
SELECT (- (((rt0.c3)IS NOT(rt0.c3)))), ((~ (rt0.c1)) IN ()), '0.8287338240028275', CASE WHEN (rt0.c0 IN ()) THEN 0.6175154914973195 WHEN ((rt0.c4) NOT BETWEEN (rt0.c4) AND (rt0.c2)) THEN ((NULL)<=(rt0.c2)) WHEN ((rt0.c4) NOT BETWEEN (rt0.c3) AND (rt0.c0)) THEN TYPEOF(rt0.c1) END, (~ (((rt0.c1)*(rt0.c4)))) FROM rt0 LIMIT 2127924226; -- 0ms;
SELECT '0.40431478060623205' FROM rt0 WHERE ((((('9223372036854775807', '1372811221', 0.05710145867760874)) BETWEEN ((x'71e9', -1691628783, NULL)) AND ((NULL, 0.24867350310441194, '\n0A3￿V>㧗ឲ'))) IN (CASE NULL  WHEN 0Xffffffffab10dcdf THEN x'4fb6' WHEN NULL THEN 0.04501417859742529 WHEN -359703917 THEN '102471498' WHEN '-1338669610' THEN x'bdd7' WHEN NULL THEN '811564919' ELSE 0.3013909539918712 END))); -- 0ms;
SELECT ((NULL) IS TRUE) FROM rt0 WHERE ((((NULL) BETWEEN ('') AND (0.5268120580250537)) IN ())) LIMIT 115733961 OFFSET -234769899; -- 0ms;
SELECT DISTINCT ((rt0.c0 COLLATE BINARY)IS(SUM(rt0.c2))), TYPEOF(COUNT(rt0.c4)), ((((((rt0.c2))<=((x'30b85612')))))<((((rt0.c0) NOT BETWEEN (x'9fc8') AND (rt0.c4))))) FROM rt0 LIMIT -498770869 OFFSET -2139833092; -- 0ms;
SELECT ALL SUM((((rt0.c4)) BETWEEN ((rt0.c0)) AND ((rt0.c1)))) OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c0)>(rt0.c1))) BETWEEN (MIN(rt0.c0)) AND (((((((((rt0.c2)AND(rt0.c1)))OR(rt0.c2)))AND(rt0.c0)))AND(rt0.c3)))), ((SUM(rt0.c1))<(TYPEOF(DISTINCT rt0.c0))), CAST(AVG(rt0.c3) AS BLOB), (~ ('' COLLATE RTRIM)), rt0.c3 FROM rt0; -- 0ms;
SELECT CAST(x'6c1f' AS REAL), COUNT(CASE WHEN rt0.c0 THEN rt0.c3 WHEN '+⡃18	(K' THEN rt0.c1 WHEN rt0.c2 THEN rt0.c3 ELSE rt0.c0 END), COUNT(rt0.c1) FROM rt0 ORDER BY CHANGES()  NULLS FIRST; -- 0ms;
SELECT ALL (((x'6521', ((x'') BETWEEN (rt0.c2) AND (rt0.c4)), ((rt0.c1)>=(rt0.c2))))==((((rt0.c2)IS NOT(rt0.c0)), rt0.c4, CAST(rt0.c4 AS TEXT)))) FROM rt0 WHERE (CAST(((NULL)AND(NULL)) AS BLOB)); -- 0ms;
SELECT CAST(((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c1)))AND(rt0.c1)))AND(rt0.c2)) AS TEXT), ((x'')/(((NULL)<(rt0.c2)))), ((rt0.c0 COLLATE RTRIM)<(rt0.c3 COLLATE NOCASE)) FROM rt0 WHERE (((UNLIKELY(NULL)) BETWEEN ((((NULL, '-1138548417', ''))>((0Xfffffffff2fd1139, NULL, '%j')))) AND ((((('怏t')OR(0.6597059568401652)))AND(' ?i'))))); -- 0ms;
SELECT DISTINCT CASE CAST(NULL AS NUMERIC)  WHEN rt0.c2 COLLATE RTRIM THEN ((rt0.c1) IS FALSE) ELSE ((((rt0.c1)OR(rt0.c4)))AND(rt0.c2)) END FROM rt0 GROUP BY (((((0X2226ec68 IN ()))OR(0.7331879161630155)))AND(((rt0.c4)>=(rt0.c0)))); -- 1ms;
SELECT ALL ((CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 END)GLOB(MAX(rt0.c2))), ((rt0.c0 COLLATE NOCASE)||(rt0.c2)), COUNT(*) FROM rt0 WHERE (STRFTIME(CASE x''  WHEN NULL THEN '' WHEN ',jma' THEN NULL WHEN 0x498ccd5b THEN NULL ELSE x'' END, CASE WHEN NULL THEN NULL WHEN x'' THEN '-1982191492' WHEN NULL THEN 0.19149335960091685 WHEN '-902163994' THEN '-5' WHEN 'TRUE' THEN -1886466473 ELSE '-59890658' END, (((x''))<>((x''))), (('O㟭/Z') NOT NULL), (('~L隣9+')>>('')))); -- 3ms;
SELECT DISTINCT (((NOT (rt0.c0))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT MIN(GROUP_CONCAT(rt0.c1), (('w''NApzY')&(2126854914))) FROM rt0 LIMIT -1159835447 OFFSET -256333098; -- 0ms;
SELECT DISTINCT ((MAX(rt0.c4))IS NOT((rt0.c4 IN ()))) FROM rt0 WHERE ((((CAST('1816352030' AS NUMERIC)))==((((NULL) NOTNULL))))); -- 0ms;
SELECT DISTINCT SUM(((rt0.c4) NOTNULL)) OVER ( ORDER BY (0.18577501312095424 IN (((rt0.c4) NOT BETWEEN (rt0.c1) AND (rt0.c0)))) DESC) FROM rt0; -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c0)||(rt0.c0))) FROM rt0 WHERE (SQLITE_COMPILEOPTION_USED('K2')) GROUP BY CASE UNLIKELY(rt0.c0)  WHEN LENGTH(rt0.c1) THEN ((x'')*(rt0.c0)) ELSE rt0.c4 COLLATE NOCASE END HAVING ((COUNT(*))<(rt0.c3)); -- 0ms;
SELECT ALL rt0.c3 FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c4))) OVER () FROM rt0 WHERE ('-447047053') ORDER BY rt0.c4 DESC; -- 0ms;
SELECT DISTINCT ((0.9194430316125153)AND((NOT (rt0.c3)))) FROM rt0 WHERE ((+ ((x'' IN (NULL))))); -- 0ms;
SELECT ALL rt0.c3 COLLATE NOCASE FROM rt0 WHERE (CAST((((((((('W<')OR(x'')))OR(x'322b')))OR('1399912197')))AND(0.2841015629839416)) AS TEXT)); -- 0ms;
SELECT ALL SUM(((rt0.c1)>>(rt0.c1))) OVER () FROM rt0 WHERE ((NOT ((((1289401352))!=((NULL)))))) LIMIT 1803627891; -- 1ms;
SELECT ALL ((CAST(x'' AS INTEGER)) NOT BETWEEN (rt0.c2) AND ((rt0.c3 IN ()))) FROM rt0 WHERE (rtreenode(((0.35129607922511574)>=(x'')), ((0.8795398495909115)*(x'')))); -- 0ms;
SELECT TOTAL(CASE WHEN rt0.c3 THEN rt0.c1 END) OVER ( ORDER BY CASE ((((rt0.c4)AND(rt0.c0)))OR(rt0.c2))  WHEN CAST(rt0.c2 AS INTEGER) THEN CAST(rt0.c0 AS REAL) ELSE CASE WHEN rt0.c3 THEN rt0.c2 ELSE rt0.c1 END END  NULLS FIRST ROWS  CURRENT ROW) FROM rt0; -- 0ms;
SELECT ALL GROUP_CONCAT(CAST(rt0.c2 AS TEXT)) OVER () FROM rt0 WHERE (((((0.7860704174000613 COLLATE RTRIM)OR((NOT (1.94468819E9)))))AND((NOT (0.6413232233974536))))); -- 0ms;
SELECT DISTINCT CASE json_type(rt0.c1)  WHEN ((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c4)) THEN rt0.c0 COLLATE NOCASE END FROM rt0; -- 0ms;
SELECT ((((rt0.c3) NOT BETWEEN (rt0.c1) AND (1827988490)))||(((NULL)IS(rt0.c1)))), ((CASE rt0.c0  WHEN rt0.c3 THEN rt0.c2 END) NOT BETWEEN (((rt0.c1) NOTNULL)) AND ((((rt0.c1, rt0.c4, rt0.c1, rt0.c1, rt0.c0)) NOT BETWEEN ((rt0.c4, rt0.c0, rt0.c3, rt0.c0, rt0.c4)) AND ((rt0.c4, rt0.c4, rt0.c0, NULL, rt0.c0))))), 0.3583424938251193 FROM rt0 WHERE (((CASE 0.3088522730999931  WHEN NULL THEN NULL WHEN 'z1*y9' THEN NULL WHEN '' THEN '0.4623262512092844' END) NOT BETWEEN (((-1864442848)*(NULL))) AND (CAST('1947788674' AS REAL)))); -- 1ms;
SELECT DISTINCT GROUP_CONCAT(((((((((rt0.c2)AND(rt0.c2)))AND(rt0.c3)))AND(rt0.c2)))OR(rt0.c4))), AVG((('1071875834') NOT BETWEEN (rt0.c3) AND (rt0.c4))), ((((NOT (rt0.c3))))=((rt0.c1 COLLATE NOCASE))) FROM rt0 LIMIT -203089088 OFFSET 1328657229; -- 0ms;
SELECT ALL ((((rt0.c1)==(rt0.c3)))AND((- (rt0.c0)))) FROM rt0 WHERE ((('e-t' COLLATE NOCASE) BETWEEN (('-1773437761' IN ())) AND (((0.5681798997101442)<<(0.40118128855451973))))); -- 0ms;
SELECT DISTINCT NULLIF((((rt0.c2))>=((rt0.c4))), ((rt0.c4) NOTNULL)) FROM rt0 LIMIT -1049409648; -- 0ms;
SELECT ALL (((((((((rt0.c3)OR(rt0.c1)))AND(rt0.c4)))OR(rt0.c0)))OR(rt0.c3)) IN (((rt0.c1) IS TRUE))) FROM rt0 NOT INDEXED ORDER BY ((CASE WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c0 THEN rt0.c1 WHEN rt0.c3 THEN rt0.c4 END)OR(rt0.c2))  NULLS FIRST, ((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)) COLLATE NOCASE  NULLS FIRST; -- 0ms;
SELECT AVG(rt0.c1) FROM rt0; -- 0ms;
SELECT MAX((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c4))) NOTNULL) FROM rt0 WHERE (json_remove(((NULL)/('-1886466473')), '-264697510' COLLATE BINARY, (x'e029' IN ()), (~ (0.8795398495909115)), ((0.9429212247823557) NOTNULL), CASE WHEN 2.136405645E9 THEN 0x3abce522 ELSE '' END)); -- 0ms;
SELECT DISTINCT (+ (COUNT(rt0.c2))), ((((((((((rt0.c3)-(rt0.c0)))OR(rt0.c3 COLLATE NOCASE)))AND(CAST(rt0.c2 AS REAL))))AND(((rt0.c2) NOT NULL))))AND(((rt0.c4)&(rt0.c0)))), ((((rt0.c3) NOTNULL))>=((((rt0.c0)) NOT BETWEEN (('-1398665834')) AND ((rt0.c4))))) FROM rt0 LIMIT 817720501 OFFSET 914589450; -- 0ms;
SELECT ALL (+ (CAST(-1288747577 AS INTEGER))) FROM rt0 WHERE ((((('2.974988440100912E-4')>=(0.9353900583041439)))/(NULL COLLATE NOCASE))); -- 0ms;
SELECT DISTINCT ((((((rt0.c2))==((rt0.c3))), x'9539', (rt0.c0 IN (rt0.c0, rt0.c2))))<((rt0.c4, COUNT(*), CAST(rt0.c1 AS REAL)))) FROM rt0 WHERE (((((NULL)*(0.2731515329705688)))GLOB((x'740d' IN ())))); -- 0ms;
SELECT DISTINCT (((rt0.c0)) BETWEEN ((((rt0.c1)>(rt0.c4)))) AND (((- (rt0.c0))))) FROM rt0; -- 1ms;
SELECT ALL (((rt0.c3)OR(rt0.c3)) IN ()), x'', x'' COLLATE RTRIM FROM rt0 WHERE ((((586127679)) BETWEEN (((('2026732658') NOT BETWEEN (1.519079084E9) AND (',yva_KPU ')))) AND (('pnX(vb潐' COLLATE NOCASE)))); -- 0ms;
SELECT CASE x''  WHEN 0.6763009486429109 THEN NULL END, (- (MAX(rt0.c3))), CUME_DIST() OVER () FROM rt0 WHERE ((-1117816038 IN (0.5629802310585865 COLLATE NOCASE))); -- 0ms;
SELECT ((rt0.c3) IS TRUE) FROM rt0; -- 0ms;
SELECT ALL (CAST(rt0.c1 AS INTEGER) IN ()) FROM rt0 WHERE ('[\n敞]'); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c4 AS REAL)) BETWEEN ((rt0.c1 IN ())) AND (0X6cd991a1)), CASE ((0.27819279755011883) BETWEEN (rt0.c4) AND (rt0.c1))  WHEN CAST(rt0.c0 AS REAL) THEN (((rt0.c0)) NOT BETWEEN (('1071875834')) AND ((rt0.c0))) WHEN LIKELIHOOD(DISTINCT rt0.c1, 0.3157963022911243) THEN NULL WHEN ((rt0.c2) BETWEEN (rt0.c1) AND (rt0.c1)) THEN (((x'')) NOT BETWEEN ((rt0.c2)) AND ((rt0.c1))) ELSE ((0.6705660981128644) NOT BETWEEN (rt0.c2) AND (rt0.c0)) END, rt0.c1 FROM rt0 WHERE (((((x'939c')/(x''))) IS TRUE)) GROUP BY CAST(((((rt0.c4)OR(rt0.c3)))OR(rt0.c2)) AS NUMERIC) HAVING ((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c3)))||(((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c3)))); -- 0ms;
SELECT DISTINCT (x'' IN (((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c3)))) FROM rt0 WHERE (IFNULL(DISTINCT -70976664, NULL)); -- 0ms;
SELECT ALL json(highlight('</o3', rt0.c0, rt0.c4, rt0.c0)), rtreenode(CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN 3.7489564E7 WHEN rt0.c1 THEN rt0.c1 END, (~ (rt0.c0))), ((((((((LAST_INSERT_ROWID())AND(CASE WHEN rt0.c1 THEN rt0.c2 ELSE 1925164712 END)))OR(rt0.c2 COLLATE BINARY)))OR(json_extract('', rt0.c4, rt0.c2, rt0.c0))))AND(((rt0.c3)*(rt0.c3)))), CASE WHEN rt0.c0 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c2 THEN rt0.c2 END COLLATE BINARY, ROW_NUMBER() OVER () FROM rt0;SELECT DISTINCT NTH_VALUE(CASE CAST(rt0.c2 AS BLOB)  WHEN 0X628fc899 COLLATE RTRIM THEN (rt0.c2 IN ()) WHEN ((rt0.c4)>=('%5	/')) THEN CASE rt0.c0  WHEN rt0.c2 THEN rt0.c0 END WHEN rt0.c0 THEN ((rt0.c4)/(rt0.c1)) ELSE x'4b03' COLLATE RTRIM END, rt0.c3) OVER (), (NOT (json(rt0.c0))), ((COUNT(rt0.c1)) IS TRUE) FROM rt0;SELECT ALL rt0.c2 FROM rt0; -- 0ms;
SELECT DISTINCT (rt0.c1 COLLATE NOCASE IN ()) FROM rt0; -- 0ms;
SELECT DISTINCT MAX((- (rt0.c1)), (((rt0.c4, '', rt0.c3)) NOT BETWEEN ((rt0.c2, -1958657176, rt0.c4)) AND ((rt0.c0, 0.9847864772307251, rt0.c1))), ((x'') BETWEEN (rt0.c0) AND (rt0.c3)), ((rt0.c0)&(rt0.c1))), json_object(-1.917689678E9, ((rt0.c1)+(rt0.c2))), ((((rt0.c0)GLOB(rt0.c2))) IS FALSE) FROM rt0 WHERE (((('')IS(0.8649124460083991)) IN ())) LIMIT 580966231; -- 0ms;
SELECT LTRIM(((rt0.c1) BETWEEN (rt0.c1) AND (rt0.c1)), CAST(rt0.c4 AS REAL)), (((rt0.c3 IN (rt0.c4))) BETWEEN (((((rt0.c1)AND(0.8577930280419437)))AND(rt0.c4))) AND (((((rt0.c3)OR(rt0.c1)))OR('-2138404250')))), (((rt0.c3)) BETWEEN ((rt0.c1)) AND (('1578083658'))) COLLATE RTRIM FROM rt0 WHERE ((x'' COLLATE BINARY IN ())) LIMIT -531134511; -- 0ms;
SELECT DISTINCT ((rt0.c2 IN ()) IN ()), CAST(CAST(rt0.c0 AS TEXT) AS BLOB), ((json_array_length(rt0.c3))|(AVG(rt0.c2))) FROM rt0 WHERE (((CAST(x'' AS NUMERIC))>(UNICODE(0.24854236785866302)))); -- 1ms;
SELECT '', GROUP_CONCAT((((rt0.c4))!=((rt0.c4))) COLLATE BINARY) OVER (), json_array_length((NOT (rt0.c0))) FROM rt0 ORDER BY (((((NULL)) BETWEEN ((rt0.c2)) AND ((rt0.c1)))) NOT BETWEEN (rt0.c4) AND (((rt0.c2)AND(rt0.c2)))) ASC, CAST(((rt0.c1)OR(rt0.c1)) AS NUMERIC), ((((rt0.c2)>>(rt0.c2)))*(((rt0.c3) IS TRUE)))  NULLS LAST; -- 0ms;
SELECT ALL (TIME(rt0.c3, rt0.c2, rt0.c4, rt0.c3, rt0.c0) IN ((((rt0.c1, rt0.c1, rt0.c1))>((rt0.c1, rt0.c2, rt0.c4))))), LAST_VALUE(((CAST(rt0.c3 AS BLOB))/(CASE rt0.c0  WHEN rt0.c3 THEN rt0.c4 END))) OVER (), ((CAST(rt0.c0 AS INTEGER)) NOT BETWEEN (((rt0.c3)-(rt0.c4))) AND (rt0.c0)) FROM rt0 WHERE (LIKELY(((('', NULL, ')u', x'70e2ab51', x'')) BETWEEN (('', '2', 7.64376048E8, x'fcca2235', '-1248724719')) AND (('', '844642918', -1.809481718E9, '0.14467549757783216', 0.6194984299809175))))); -- 0ms;
SELECT CASE CASE WHEN rt0.c0 THEN rt0.c4 END  WHEN CAST(rt0.c1 AS REAL) THEN CASE rt0.c3  WHEN rt0.c3 THEN rt0.c2 END END FROM rt0 LIMIT -779214636 OFFSET 282709487; -- 0ms;
SELECT DISTINCT ((((rt0.c3) NOT BETWEEN (rt0.c2) AND (rt0.c1))) NOT BETWEEN (((rt0.c0)<=(rt0.c3))) AND (COUNT(rt0.c4))) FROM rt0 WHERE ((('L*+(o') IS TRUE) COLLATE NOCASE); -- 1ms;
SELECT DISTINCT (- (((rt0.c4)/(rt0.c2)))) FROM rt0 WHERE ('1024321359'); -- 0ms;
SELECT DISTINCT AVG(GROUP_CONCAT(COUNT(*))) FROM rt0 WHERE (((((((NULL)-('1071875834')))OR((NOT ('1147328197')))))AND(CASE NULL  WHEN NULL THEN '\n*# wN8R[' END)));SELECT DISTINCT (rt0.c3 IN (rt0.c3)) COLLATE NOCASE FROM rt0; -- 0ms;
SELECT ((((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))>=(((('1397670707', '', rt0.c3, rt0.c3, rt0.c4))<((rt0.c2, '24045770', 0.09996980731710503, rt0.c1, rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT '-1055161373', ((rt0.c3) NOT BETWEEN (rt0.c4) AND (rt0.c1)) COLLATE BINARY COLLATE RTRIM, CAST(COUNT(*) AS REAL) FROM rt0 WHERE ((((0.8389636839239493)) NOT BETWEEN ((((x'')+(0xffffffff938ee09f)))) AND ((((('%j'))>((NULL))))))); -- 0ms;
SELECT DISTINCT (rt0.c0 COLLATE RTRIM IN ()), CAST((((rt0.c1)) NOT BETWEEN ((NULL)) AND ((rt0.c1))) AS NUMERIC), (((1036913372)LIKE(rt0.c2)) IN (((rt0.c2)%(rt0.c2)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN CAST(rt0.c4 AS INTEGER) THEN ((rt0.c2)AND(rt0.c1)) ELSE ((((rt0.c1)AND(rt0.c1)))OR(rt0.c0)) END FROM rt0 WHERE (TRIM(DISTINCT CAST(x'706e' AS REAL))); -- 1ms;
SELECT DISTINCT (((rt0.c1)) BETWEEN (((~ (rt0.c4)))) AND ((((((((((rt0.c3)OR(rt0.c2)))AND(NULL)))OR(rt0.c2)))AND(rt0.c1))))), (((x'')OR(rt0.c2)) IN (((rt0.c2)GLOB(rt0.c3)))), ((((rt0.c2) BETWEEN (rt0.c4) AND (rt0.c2)))!=((~ (rt0.c1)))) FROM rt0 WHERE (((((NULL) BETWEEN (NULL) AND (NULL))) IS TRUE)); -- 0ms;
SELECT DISTINCT ((CAST(rt0.c3 AS BLOB))GLOB(SUM(rt0.c0))) FROM rt0 WHERE (((~ (x'')) IN ())); -- 0ms;
SELECT DISTINCT ((1.316806943E9)*(CAST(rt0.c3 AS REAL))), NTILE(((rt0.c1) BETWEEN (NULL) AND (rt0.c4)) COLLATE NOCASE COLLATE BINARY) OVER (), GROUP_CONCAT(rt0.c0) OVER () FROM rt0 WHERE (((-1507520860)LIKE('763171247')) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT CASE rt0.c1  WHEN CAST(rt0.c2 AS NUMERIC) THEN ((rt0.c1) BETWEEN (rt0.c2) AND (rt0.c3)) END, ((rt0.c4) IS FALSE) COLLATE NOCASE, NULLIF((((rt0.c3)) BETWEEN (('2110014562')) AND ((rt0.c1))), (((rt0.c3))<=((rt0.c3)))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c2)>>('2022098407')), ((TYPEOF(rt0.c3)) NOT BETWEEN (rt0.c1) AND (((rt0.c3) NOTNULL))), ((((CASE rt0.c3  WHEN rt0.c0 THEN rt0.c4 ELSE rt0.c1 END)OR(((rt0.c4)IS NOT(rt0.c3)))))OR(CAST(rt0.c0 AS REAL))) FROM rt0; -- 0ms;
SELECT rt0.c2 FROM rt0 WHERE ((~ (x'' COLLATE BINARY))); -- 0ms;
SELECT ALL (((('-2017067995')OR(rt0.c3))) ISNULL), NTILE((~ (SUBSTR(rt0.c2, rt0.c1)))) OVER (), ((((((rt0.c0)AND(rt0.c4)))OR(rt0.c0))) NOT BETWEEN ((~ (rt0.c1))) AND (((rt0.c0)OR(rt0.c3)))) FROM rt0 LIMIT 817720501;SELECT DISTINCT ((((((((((((((rt0.c4)>(rt0.c4)))OR(rt0.c1 COLLATE RTRIM)))OR(CASE WHEN rt0.c0 THEN rt0.c2 END)))OR('1147328197')))OR(((NULL)|(rt0.c3)))))OR(((rt0.c0)AND(rt0.c0)))))OR(highlight(rt0.c2, 0Xffffffffae7c20dd, rt0.c1, rt0.c3))), CASE CAST(rt0.c1 AS REAL)  WHEN 'jdVa' THEN HEX(rt0.c2) WHEN SQLITE_SOURCE_ID() THEN rt0.c2 WHEN ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c3)) THEN ((1985646391) BETWEEN (rt0.c2) AND (rt0.c3)) END, ((CAST(rt0.c3 AS REAL))/(x'2c12')) FROM rt0;SELECT ALL (('tqG') NOT BETWEEN (rt0.c2) AND ('WZ')) COLLATE BINARY FROM rt0 WHERE (('102471498' COLLATE BINARY IN (CASE WHEN 0.5118052696699675 THEN 75440555 WHEN 549793839 THEN NULL WHEN 0.9961906897047126 THEN x'cb42' ELSE x'6231' END))); -- 0ms;
SELECT DISTINCT (((rt0.c2 IN ()))>>(((rt0.c4) NOT BETWEEN (rt0.c0) AND (rt0.c3)))), CASE CASE WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c0 END  WHEN TRIM(DISTINCT rt0.c1) THEN UNLIKELY(rt0.c0) END, ((((rt0.c2) IS FALSE))==((rt0.c0 IN ()))) FROM rt0 WHERE (NULL) ORDER BY CASE WHEN CAST(rt0.c2 AS TEXT) THEN (- (rt0.c3)) ELSE CASE WHEN NULL THEN rt0.c2 END END; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0 LIMIT 576268406 OFFSET 246309821; -- 1ms;
SELECT DISTINCT ((((rt0.c2)AND(0.44371864325722865)))AND(x'')) COLLATE BINARY FROM rt0 WHERE (IFNULL(DISTINCT (+ (NULL)), CASE WHEN '2030830563' THEN '+}J' WHEN x'' THEN 0.9871465002025241 WHEN 0.3454720794577829 THEN 0.2583236706258337 WHEN 0.7432613157202868 THEN NULL WHEN '1042085706' THEN x'05e6' ELSE NULL END)); -- 0ms;
SELECT DISTINCT CAST(MIN(rt0.c1) AS BLOB) FROM rt0 WHERE ((NOT (NULL))); -- 0ms;
SELECT ALL ((rt0.c1 COLLATE BINARY)%((((rt0.c1)) NOT BETWEEN ((rt0.c3)) AND ((rt0.c1))))) FROM rt0; -- 0ms;
SELECT DISTINCT ((COUNT(*))==(rt0.c4)), CASE WHEN (- (rt0.c0)) THEN ((rt0.c0)=(rt0.c3)) ELSE CASE rt0.c0  WHEN rt0.c1 THEN rt0.c2 END END, ((((rt0.c4)<=(rt0.c4)))==(CASE rt0.c3  WHEN rt0.c0 THEN rt0.c3 END)) FROM rt0 LIMIT 1654312125; -- 0ms;
SELECT DISTINCT LIKELIHOOD(DISTINCT CAST(rt0.c3 AS REAL), 0.4977823897804826), CASE ((rt0.c1)|(rt0.c4))  WHEN (((((((('-w56ﮟ4')OR(rt0.c2)))OR(rt0.c3)))OR(rt0.c0)))OR(rt0.c1)) THEN ((rt0.c2) NOT BETWEEN (rt0.c3) AND (rt0.c1)) ELSE CASE rt0.c1  WHEN rt0.c0 THEN x'1e50' ELSE rt0.c4 END END, RANK() OVER () FROM rt0 WHERE (((LTRIM(',6', NULL))!=(((NULL) NOT BETWEEN (NULL) AND ('690808757'))))) GROUP BY ((((CASE rt0.c1  WHEN rt0.c0 THEN 0X903da6d ELSE NULL END)OR(((rt0.c0) NOT BETWEEN (rt0.c1) AND (rt0.c4)))))OR((rt0.c4 IN ()))), UNLIKELY((rt0.c3 IN ())), ((rt0.c3) ISNULL) COLLATE BINARY ORDER BY (((((+ (rt0.c2)))AND(((rt0.c1) IS TRUE))))OR((((rt0.c1))==((rt0.c2))))) ASC, (((rt0.c0 IN ()))&(((rt0.c2)<(rt0.c1)))) ASC  NULLS FIRST, (CAST(rt0.c0 AS NUMERIC) IN ()) ASC  NULLS LAST; -- 1ms;
SELECT SUM(CAST(rt0.c4 AS INTEGER)) FROM rt0; -- 0ms;
SELECT CASE WHEN CAST(rt0.c3 AS BLOB) THEN 0.3956875822692011 ELSE CAST(rt0.c0 AS INTEGER) END FROM rt0 WHERE (CAST(0.40737246349133116 COLLATE RTRIM AS NUMERIC)) LIMIT 115733961; -- 0ms;
SELECT NTILE(CAST((((rt0.c3))<((rt0.c2))) AS BLOB)) OVER () FROM rt0 ORDER BY ((((CAST(0.6260284840413454 AS TEXT))AND((rt0.c3 IN (rt0.c2, rt0.c0)))))AND(CAST(rt0.c0 AS INTEGER)))  NULLS LAST;SELECT ALL CAST(TOTAL(rt0.c3) AS NUMERIC), COUNT(rt0.c4 COLLATE BINARY) OVER ( ORDER BY (NOT ((rt0.c0 IN (rt0.c4)))) ASC  NULLS FIRST), ((rt0.c2) IS TRUE) FROM rt0; -- 0ms;
SELECT ALL rt0.c2 FROM rt0 WHERE (('1492705514' COLLATE RTRIM IN ())) ORDER BY CAST(CASE rt0.c1  WHEN rt0.c2 THEN rt0.c3 END AS BLOB)  NULLS LAST; -- 0ms;
SELECT DISTINCT (((((rt0.c3, rt0.c3, rt0.c1, rt0.c1, rt0.c4))>=((0x4e7ce11f, rt0.c0, rt0.c2, rt0.c4, rt0.c4)))) NOT NULL) FROM rt0; -- 1ms;
SELECT (((rt0.c0, rt0.c1, rt0.c4)) BETWEEN ((rt0.c2, rt0.c4, rt0.c3)) AND ((rt0.c3, rt0.c1, rt0.c4))) COLLATE RTRIM, (~ (rt0.c1 COLLATE RTRIM)), (((((((((rt0.c0)AND(rt0.c3)))OR(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)) IN ((- (rt0.c3)))), ((((((rt0.c3)>=(rt0.c4)))AND(CASE WHEN rt0.c2 THEN rt0.c2 WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c0 THEN rt0.c1 ELSE rt0.c3 END)))OR(((rt0.c1) NOTNULL))), ((CASE rt0.c4  WHEN rt0.c3 THEN rt0.c4 ELSE NULL END) IS FALSE) FROM rt0; -- 0ms;
SELECT ALL rt0.c0 COLLATE RTRIM, ((((((((rt0.c1)OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c3)))AND(rt0.c1)) COLLATE BINARY, ((((rt0.c3)LIKE(rt0.c1))) BETWEEN (((rt0.c3)GLOB(rt0.c4))) AND (rt0.c0 COLLATE NOCASE)) FROM rt0 WHERE (((((('rd')) NOT BETWEEN (('20113803')) AND ((NULL))))<<(((((NULL)AND('0.35942199466349845')))OR(NULL))))) ORDER BY ((json_extract(rt0.c2, rt0.c1))||(((rt0.c3) NOTNULL))) DESC  NULLS LAST; -- 0ms;
SELECT ABS(DISTINCT CAST(rt0.c4 AS BLOB)) FROM rt0 WHERE (CHAR((+ (NULL)))); -- 0ms;
SELECT DISTINCT COUNT(rt0.c3) OVER () FROM rt0; -- 0ms;
SELECT (((+ (rt0.c2))) BETWEEN ((rt0.c0 IN ())) AND (json_valid(rt0.c4))), (- ((((rt0.c3)) BETWEEN ((rt0.c3)) AND ((rt0.c2))))), NULL FROM rt0 WHERE (CASE -178424018  WHEN ((0Xffffffff9896bfb1)<=('X')) THEN (((('v諶a')AND(1.578083658E9)))AND(x'')) ELSE ']tu	얋tJ-ᔛ' END); -- 7ms;
SELECT DISTINCT ((rt0.c3)=(rt0.c1)) COLLATE BINARY FROM rt0 WHERE ((((('Nc')==(x'8a51')))GLOB((- (''))))); -- 0ms;
SELECT ALL COUNT(*) FROM rt0 WHERE (NULL); -- 0ms;
SELECT DISTINCT (+ (((rt0.c4)IS(rt0.c2)))), UPPER(((((((((rt0.c0)OR(0.12822763252901181)))AND(rt0.c0)))OR(rt0.c4)))AND(rt0.c1))), ((CASE rt0.c4  WHEN rt0.c0 THEN rt0.c4 END) NOTNULL) FROM rt0; -- 0ms;
SELECT DISTINCT NTILE('-471366403') OVER () FROM rt0 WHERE (((('102471498') NOT BETWEEN (0.6701992241819567) AND (NULL)) IN ())); -- 0ms;
SELECT DISTINCT (((rt0.c2)<(rt0.c2)) IN ()) FROM rt0 WHERE (((0.14119445332565006) IS FALSE)); -- 0ms;
SELECT ALL (((~ (rt0.c1)))>>((('1803627891') ISNULL))), ((rt0.c0) NOT BETWEEN (CASE WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c4 THEN rt0.c0 WHEN rt0.c2 THEN rt0.c1 ELSE rt0.c4 END) AND (CAST(rt0.c2 AS INTEGER))), rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c2 END COLLATE BINARY, (- (rt0.c0)), rt0.c1 COLLATE RTRIM FROM rt0 WHERE ((('H,7q潐1')%(0.8238017688908336)) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT ((((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0))) NOT NULL) FROM rt0 WHERE ((~ ((((NULL))>((NULL)))))); -- 0ms;
SELECT ALL COUNT(*) OVER () FROM rt0; -- 0ms;
SELECT ALL ((rt0.c2) BETWEEN (rt0.c0) AND (rt0.c0)) COLLATE RTRIM FROM rt0 WHERE (CASE '(\rxX'  WHEN NULL THEN NULL END COLLATE NOCASE); -- 0ms;
SELECT DISTINCT GROUP_CONCAT(((rt0.c3)+(rt0.c2))) OVER () FROM rt0; -- 0ms;
SELECT ALL NTILE(((((rt0.c1)OR(CASE rt0.c2  WHEN rt0.c2 THEN rt0.c2 END)))AND(((rt0.c4)<=(rt0.c0))))) OVER () FROM rt0 WHERE ((x'' IN ('401663544')) COLLATE RTRIM COLLATE BINARY); -- 0ms;
SELECT ALL CAST(((((rt0.c2)AND(0xffffffffe3e784fd)))OR('0.4762310353381548')) AS TEXT), ((((rt0.c1)LIKE(898937344)))>=(rt0.c4 COLLATE NOCASE)), ((((rt0.c0)IS NOT(rt0.c1)))<(((rt0.c1) NOT BETWEEN (rt0.c0) AND (rt0.c2)))) FROM rt0 GROUP BY rt0.c0, (((rt0.c4)<(rt0.c2)) IN ()), CASE ((rt0.c4)<<(rt0.c3))  WHEN rt0.c3 THEN CAST(rt0.c1 AS INTEGER) WHEN ((rt0.c4)*(rt0.c2)) THEN ((rt0.c0) NOT NULL) WHEN ((rt0.c3)<>(rt0.c1)) THEN (rt0.c0 IN ()) ELSE ((rt0.c4)IS(rt0.c1)) END ORDER BY LIKELY(((((((((rt0.c2)AND(rt0.c2)))OR(rt0.c4)))AND(rt0.c1)))AND(rt0.c3))) ASC, IFNULL(DISTINCT CASE WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c2 THEN rt0.c0 WHEN rt0.c1 THEN rt0.c0 WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END, ((rt0.c4) NOT NULL))  NULLS FIRST, CASE WHEN ((((rt0.c2)OR(rt0.c1)))AND(rt0.c4)) THEN (('-926172263') IS TRUE) WHEN (((0X6b3cec1, rt0.c3, rt0.c2)) BETWEEN ((rt0.c1, rt0.c0, rt0.c1)) AND ((rt0.c4, rt0.c4, rt0.c0))) THEN (+ (rt0.c3)) WHEN ((rt0.c0) IS FALSE) THEN ((((rt0.c3)OR(rt0.c1)))OR(rt0.c1)) END DESC; -- 0ms;
SELECT ALL ((((rt0.c3)OR('-531134511')))AND(rt0.c3)) COLLATE NOCASE FROM rt0 GROUP BY CAST((NOT ('Z''')) AS INTEGER), ((((LENGTH(rt0.c3))AND(rt0.c1 COLLATE BINARY)))AND(rt0.c2)), CASE WHEN ((((((((rt0.c2)OR(rt0.c0)))AND(rt0.c0)))AND(rt0.c0)))OR(rt0.c3)) THEN (((rt0.c1)) BETWEEN ((rt0.c1)) AND ((NULL))) ELSE 0.9459277389361023 END HAVING HEX((x'' IN ())) ORDER BY ((((rt0.c1) IS FALSE))GLOB(CASE WHEN rt0.c4 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c4 END)) DESC  NULLS LAST; -- 1ms;
SELECT DISTINCT LAST_VALUE((rt0.c0 COLLATE BINARY IN ())) OVER () FROM rt0 ORDER BY ((NULLIF(rt0.c0, rt0.c0)) BETWEEN (CAST(rt0.c1 AS NUMERIC)) AND (CAST(rt0.c0 AS INTEGER))) ASC; -- 0ms;
SELECT DISTINCT ((((CASE rt0.c1  WHEN rt0.c1 THEN 0.21016168691121884 WHEN rt0.c3 THEN rt0.c2 WHEN rt0.c1 THEN rt0.c2 END)AND((NOT (rt0.c0)))))AND(NULL COLLATE BINARY)), ((((((((((rt0.c1) BETWEEN (rt0.c3) AND (rt0.c0)))AND(((rt0.c0)>(rt0.c2)))))OR((~ (rt0.c3)))))AND((((rt0.c2)) NOT BETWEEN ((rt0.c0)) AND ((rt0.c1))))))AND((- (rt0.c0)))), x'' FROM rt0 WHERE (((((CAST(x'8087' AS NUMERIC))OR((~ (x'e035d079')))))OR(('-485988954' IN ())))); -- 0ms;
SELECT DISTINCT COUNT(((rt0.c4) BETWEEN (rt0.c2) AND (rt0.c3))) FROM rt0; -- 0ms;
SELECT 0.5106720318864401 FROM rt0; -- 0ms;
SELECT TRIM(rt0.c1 COLLATE BINARY) FROM rt0; -- 0ms;
SELECT (((((0.599885737990311))=((rt0.c0))))>(((rt0.c0) IS FALSE))) FROM rt0 WHERE (CASE CASE WHEN -1645333835 THEN NULL ELSE '1613308167' END  WHEN LIKELY('') THEN (((-2131450168, NULL, 0.6476366025046462)) NOT BETWEEN ((x'', NULL, 0.7018966674353138)) AND (('!+', 0.7676033396299676, ''))) WHEN (1.244792992E9 IN ()) THEN ((((x'')AND(NULL)))AND(x'd764')) WHEN ((NULL)-('')) THEN (+ (0.10144483536997695)) ELSE (~ (0.8784276263482907)) END) LIMIT -2090341460; -- 0ms;
SELECT DISTINCT ((0.42620988001723903)IS NOT(CAST(rt0.c4 AS REAL))), COUNT(((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c3))), ((TOTAL(rt0.c2)) NOTNULL) FROM rt0 WHERE ((((x'' COLLATE NOCASE))>=((CASE NULL  WHEN '2136405645' THEN -1813319538 ELSE '920775440' END)))); -- 4ms;
SELECT ALL COUNT(*) FROM rt0; -- 0ms;
SELECT (((NOT (rt0.c1))) NOT NULL) FROM rt0; -- 0ms;
SELECT DISTINCT ((((((rt0.c1)>(rt0.c2)))OR((((rt0.c0, rt0.c4, rt0.c2)) BETWEEN ((rt0.c4, rt0.c0, rt0.c0)) AND ((rt0.c4, rt0.c1, rt0.c2))))))AND(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c1)))) FROM rt0 LIMIT 236151398 OFFSET -1515664548; -- 0ms;
SELECT (((((((((rt0.c1)AND(rt0.c3)))AND(rt0.c0)))AND(rt0.c4)))AND(709155959)) IN ()) FROM rt0 WHERE ((NOT (x'269d')) COLLATE BINARY); -- 0ms;
SELECT DISTINCT CUME_DIST() OVER (), COUNT((+ (rt0.c4))), (NOT (((rt0.c2)+(rt0.c3)))) FROM rt0 WHERE (((CAST('%rpv(9' AS NUMERIC))<<(SQLITE_COMPILEOPTION_USED(x'44e8ccc9')))) ORDER BY (((rt0.c2) IS FALSE) IN ())  NULLS LAST, (0.7544141939343604 IN ()) ASC  NULLS FIRST; -- 0ms;
SELECT (NOT ((rt0.c2 IN ()))), (ABS(DISTINCT rt0.c1) IN ()), (((((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c1))))AND(NULL)))AND(IFNULL(rt0.c3, '0.4762310353381548'))) FROM rt0 GROUP BY CAST(((((rt0.c2)OR(rt0.c3)))OR(rt0.c3)) AS NUMERIC) HAVING 0Xffffffff8db260b2; -- 1ms;
SELECT ALL CAST(CASE rt0.c1  WHEN rt0.c1 THEN NULL WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c1 THEN NULL ELSE rt0.c0 END AS REAL) FROM rt0; -- 0ms;
SELECT (((rt0.c0) BETWEEN (rt0.c4) AND (rt0.c0)) IN ()) FROM rt0 WHERE ((+ (NULL COLLATE RTRIM))); -- 0ms;
SELECT ALL CAST(((rt0.c2) NOTNULL) AS INTEGER), (('}%ay积N' COLLATE NOCASE)=(rt0.c4 COLLATE BINARY)), rt0.c1 FROM rt0 WHERE (CAST(CAST('N5b	嗴(' AS BLOB) AS NUMERIC)) GROUP BY ((rt0.c2 COLLATE RTRIM) NOT BETWEEN (HEX(rt0.c0)) AND ((((rt0.c1))>=((rt0.c2))))); -- 0ms;
SELECT ALL CASE (((rt0.c2)) BETWEEN ((rt0.c2)) AND ((rt0.c3)))  WHEN CAST(rt0.c0 AS REAL) THEN 0.2802275467109554 WHEN ((rt0.c2)-(rt0.c0)) THEN CAST(rt0.c2 AS BLOB) WHEN (((rt0.c2)) NOT BETWEEN ((rt0.c2)) AND ((rt0.c2))) THEN AVG(rt0.c4) ELSE (((rt0.c4, rt0.c2, rt0.c2))!=((rt0.c4, rt0.c2, NULL))) END, ((json_array_length(rt0.c3, 'Kpग़%\'))<=(rt0.c2 COLLATE BINARY)), ((((rt0.c4 COLLATE RTRIM)OR('')))AND(rt0.c4 COLLATE NOCASE)) FROM rt0 UNION ALL SELECT DISTINCT CASE WHEN (NOT (rt0.c3)) THEN (NOT (rt0.c1)) ELSE (((NULL)) BETWEEN ((rt0.c4)) AND ((rt0.c0))) END, ((NULLIF(rt0.c2, rt0.c1))<<(rt0.c1 COLLATE NOCASE)), -1429142821 FROM rt0;SELECT DISTINCT rt0.c0 FROM rt0 ORDER BY CASE rt0.c4  WHEN rt0.c0 THEN '' WHEN rt0.c4 THEN rt0.c3 WHEN rt0.c4 THEN rt0.c0 ELSE rt0.c4 END COLLATE NOCASE DESC, ((rt0.c0 COLLATE NOCASE) NOT BETWEEN (rt0.c1) AND (x'28c6'))  NULLS FIRST; -- 1ms;
SELECT DISTINCT ((((((rt0.c0)AND(rt0.c3)))AND(0.16285976434809668))) BETWEEN (SQLITE_COMPILEOPTION_GET(rt0.c4)) AND (rt0.c0 COLLATE BINARY)) FROM rt0 WHERE (TYPEOF(DISTINCT (0.8790712611149222 IN ()))); -- 0ms;
SELECT DISTINCT CAST(TOTAL(rt0.c1) AS NUMERIC) FROM rt0 WHERE (((((((NULL)OR('鹽)')))AND(0.40379334727541116))) IS TRUE)); -- 0ms;
SELECT DISTINCT CAST(UNICODE(rt0.c3) AS INTEGER) FROM rt0 WHERE (((CAST('698644975' AS TEXT)) NOT BETWEEN (TRIM(DISTINCT 'if.췤', '-797771617')) AND ((((NULL, -1.809481718E9, '', 1.966274237E9, 0.7666205950379834))<((0.033588940633140774, '', '', x'17af', '-175337344')))))); -- 0ms;
SELECT DISTINCT ((MIN(rt0.c1))IS(rt0.c2)) FROM rt0; -- 0ms;
SELECT DISTINCT SUM(((x'78e6')GLOB(rt0.c4))) FROM rt0 GROUP BY CASE WHEN ((rt0.c4) IS FALSE) THEN (('2017811875')AND(rt0.c0)) END; -- 0ms;
SELECT DISTINCT SUM((- (rt0.c4))) OVER () FROM rt0 WHERE (rtreenode(json_array('-1553479407', -1.917689678E9), ((x'') IS FALSE))); -- 1ms;
SELECT ALL COUNT('1701537029') FROM rt0 ORDER BY CAST(rt0.c1 AS INTEGER) COLLATE RTRIM  NULLS FIRST, ((((((((((rt0.c2)AND(rt0.c4)))OR(rt0.c2)))OR(rt0.c1)))OR(rt0.c4))) BETWEEN (rt0.c2) AND (rt0.c0)), ((x'221c' COLLATE BINARY) BETWEEN ((((rt0.c3))=((rt0.c2)))) AND ((rt0.c1 IN ()))) DESC; -- 0ms;
SELECT DISTINCT (((MIN(rt0.c4, rt0.c0), ((rt0.c2) NOT BETWEEN (rt0.c0) AND (rt0.c4)), (+ (rt0.c1))))==((rt0.c2, ((rt0.c1)IS(rt0.c2)), ((rt0.c0) IS FALSE)))) FROM rt0; -- 0ms;
SELECT ALL 0.21068434402070557, ((rt0.c2)*(rt0.c4)), (~ ((((rt0.c1)) BETWEEN ((rt0.c3)) AND ((rt0.c0))))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c4 FROM rt0; -- 0ms;
SELECT DISTINCT CAST(MAX(rt0.c0) AS INTEGER), PRINTF(((((((((((((x'')OR(rt0.c0)))OR(rt0.c4)))OR(rt0.c1)))AND(rt0.c0)))OR(rt0.c1)))AND(rt0.c4))), ((json_type(rt0.c4))/(((((rt0.c3)OR(rt0.c2)))OR(rt0.c3)))) FROM rt0 WHERE ((('*>W_' COLLATE BINARY) BETWEEN (((('-1159835447')) NOT BETWEEN ((NULL)) AND ((0.9397891633155298)))) AND ((0Xffffffff9f5a8218 IN ())))); -- 0ms;
SELECT ALL ROW_NUMBER() OVER ( ORDER BY (((rt0.c2)) BETWEEN ((NULL)) AND ((CAST(rt0.c2 AS REAL))))  NULLS LAST) FROM rt0 WHERE ((- (((0.052400864824303284)&(NULL))))) GROUP BY TRIM(rt0.c4 COLLATE NOCASE) HAVING ((~ (rt0.c1)) IN (rt0.c0 COLLATE RTRIM)) ORDER BY (((- (rt0.c0))) NOT BETWEEN (((']~')!=(rt0.c4))) AND (((rt0.c0) BETWEEN (rt0.c0) AND (rt0.c1))))  NULLS FIRST; -- 0ms;
SELECT MAX(((rt0.c3) BETWEEN (rt0.c3) AND (rt0.c2))) FROM rt0; -- 0ms;
SELECT DISTINCT COUNT(*) FROM rt0 WHERE ((((- (-1.9693963E8))) IS TRUE)); -- 0ms;
SELECT DISTINCT (NOT (TRIM(rt0.c4))) FROM rt0 WHERE (((('-59890658')%(x'22e2')) IN ())); -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT ((CASE WHEN rt0.c4 THEN rt0.c4 ELSE rt0.c2 END)-(((0.5769599660860237)<>(rt0.c0)))), rt0.c2, ((rt0.c4 COLLATE BINARY)LIKE(rt0.c1 COLLATE NOCASE)) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c0 IN ()) IN (((rt0.c1)OR(rt0.c3)))), (~ ((((rt0.c2))<=((rt0.c1))))), ((rt0.c3)IS(rt0.c1)) COLLATE NOCASE FROM rt0 WHERE ((((-1649213958))=((NULL))) COLLATE NOCASE); -- 0ms;
SELECT DISTINCT (((((rt0.c2)) BETWEEN ((x'')) AND ((rt0.c1))))>=(CAST(rt0.c2 AS NUMERIC))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST((rt0.c0 IN ()) AS INTEGER) FROM rt0 WHERE (((((TIME(NULL, x'3112', 'H8{qs\hD}', NULL, '0.8795398495909115'))OR(CAST(x'' AS TEXT))))AND(((0.07385050866850285) IS TRUE)))); -- 1ms;
SELECT DISTINCT ((CASE rt0.c4  WHEN rt0.c1 THEN rt0.c1 ELSE rt0.c0 END)||(((rt0.c2) IS FALSE))), ((((((((((rt0.c1)<>(rt0.c0)))AND((((rt0.c0))>((rt0.c2))))))AND(rt0.c3)))AND(((rt0.c1)>=(rt0.c2)))))AND(CASE rt0.c0  WHEN rt0.c2 THEN rt0.c2 ELSE rt0.c4 END)), (- (((rt0.c2) NOT BETWEEN (rt0.c1) AND (rt0.c1)))), LAG(rt0.c0, rt0.c2, (((~ (rt0.c2)))GLOB((('-1886466473')AND(rt0.c2))))) OVER (), (NOT (LIKELIHOOD(rt0.c2, 0.6314029151956987))) FROM rt0; -- 0ms;
SELECT DISTINCT CAST(rt0.c1 AS BLOB) FROM rt0 WHERE (((0.7817712716734856 COLLATE BINARY)=((0.21924816479613674 IN (x''))))) GROUP BY ((NULL) IS TRUE), ((((x'')||(rt0.c3)))>=((- (rt0.c2)))), ((rt0.c3)||(rt0.c2)) COLLATE BINARY HAVING ((((rt0.c0) IS TRUE))%(((NULL) NOT BETWEEN (rt0.c0) AND (rt0.c2)))); -- 0ms;
SELECT ((GROUP_CONCAT(rt0.c2)) IS TRUE), (((rt0.c3, rt0.c2, rt0.c2, rt0.c1, rt0.c0)) BETWEEN ((((rt0.c3)<(rt0.c3)), CAST(x'' AS REAL), rt0.c1 COLLATE RTRIM, ((((rt0.c0)AND(rt0.c3)))AND(NULL)), CASE rt0.c1  WHEN rt0.c2 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c3 WHEN rt0.c2 THEN rt0.c2 END)) AND ((0xd06c84b, ((rt0.c2)&(rt0.c2)), '!\nB', CASE WHEN rt0.c3 THEN rt0.c4 END, (((('-981513858')AND(rt0.c1)))AND(rt0.c1))))), COUNT(((rt0.c2) BETWEEN (rt0.c3) AND (rt0.c3))) FROM rt0; -- 0ms;
SELECT DISTINCT rt0.c1 FROM rt0; -- 0ms;
SELECT DISTINCT MAX((- (x''))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE ((((((((rt0.c4)AND(rt0.c0)))OR(NULL)))OR(rt0.c2)))OR(rt0.c4))  WHEN NULL THEN rt0.c2 COLLATE BINARY END FROM rt0 WHERE ((+ ((NULL IN ())))); -- 1ms;
SELECT ((((rt0.c4 IN ()), (NOT (rt0.c1)), ((rt0.c1)<>(rt0.c1))))<>((rt0.c4, ((rt0.c1) IS FALSE), (rt0.c4 IN ())))), '积eb', '80077296' FROM rt0 GROUP BY ((rt0.c2)>=(((rt0.c1) NOT BETWEEN (NULL) AND (rt0.c0)))) HAVING UNLIKELY(DISTINCT CAST(rt0.c4 AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((NULL) BETWEEN ((((rt0.c2, rt0.c2, rt0.c0)) BETWEEN ((rt0.c3, rt0.c1, rt0.c1)) AND ((rt0.c4, rt0.c4, rt0.c4)))) AND (((rt0.c0) BETWEEN (rt0.c3) AND (rt0.c4)))) FROM rt0; -- 0ms;
SELECT DISTINCT CASE WHEN '' THEN CAST(rt0.c4 AS TEXT) WHEN ((rt0.c3) ISNULL) THEN CAST(rt0.c2 AS BLOB) WHEN ((rt0.c4)+(rt0.c0)) THEN ((rt0.c1)<(rt0.c3)) ELSE SUM(rt0.c0) END, CASE rt0.c0  WHEN ((rt0.c0) IS FALSE) THEN ((rt0.c4)IS(rt0.c3)) ELSE (rt0.c0 IN (rt0.c0)) END, (((rt0.c0, rt0.c0, rt0.c1)) BETWEEN ((INSTR(rt0.c3, '1614103208'), ((rt0.c1) BETWEEN (rt0.c0) AND (rt0.c4)), COUNT(rt0.c0))) AND ((rt0.c2 COLLATE NOCASE, highlight(rt0.c1, rt0.c1, rt0.c0, rt0.c1), ((rt0.c2)%(rt0.c4))))) FROM rt0; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM rt0; -- 0ms;
SELECT DISTINCT ((((rt0.c1)>(rt0.c3))) NOT BETWEEN ((((('')AND(rt0.c3)))OR(rt0.c1))) AND (((rt0.c4) BETWEEN (rt0.c0) AND (rt0.c4)))) FROM rt0 WHERE ((((('709717871') IS FALSE))>=((((((((('-791585092')OR('-653547632')))OR(0.16566158810477016)))AND('9&潐3')))AND(NULL))))); -- 0ms;
SELECT DISTINCT ((x'600c')*(rt0.c2 COLLATE RTRIM)) FROM rt0 WHERE (CASE (((NULL, -1.164975689E9, 2.0113803E7))!=((x'', 0.4762310353381548, NULL)))  WHEN ((((0Xffffffffe05787d1)OR(NULL)))AND(x'')) THEN ((('1461243775')) BETWEEN ((0.5689191064019768)) AND ((1496674323))) WHEN (~ (0.8036688955520096)) THEN (((NULL)) NOT BETWEEN ((x'6fbc')) AND ((x''))) WHEN ('-902163994' IN ()) THEN (('')/(NULL)) END) ORDER BY CASE WHEN CASE rt0.c3  WHEN rt0.c2 THEN rt0.c4 ELSE rt0.c1 END THEN TRIM(rt0.c4, rt0.c4) ELSE ((((rt0.c3)AND(rt0.c2)))AND(rt0.c0)) END ASC; -- 0ms;
SELECT DISTINCT ((CASE WHEN rt0.c3 THEN rt0.c0 END) BETWEEN (rt0.c3 COLLATE BINARY) AND (GROUP_CONCAT(rt0.c1))) FROM rt0; -- 0ms;
SELECT DISTINCT ((rt0.c3) BETWEEN (rt0.c2) AND (rt0.c2)) COLLATE BINARY, '' COLLATE NOCASE, (((CAST(rt0.c2 AS REAL)))>=((((rt0.c3) BETWEEN (rt0.c1) AND (rt0.c3))))), (((rt0.c1, rt0.c1, rt0.c2)) BETWEEN ((NULL, SQLITE_COMPILEOPTION_GET(rt0.c2), CAST(rt0.c2 AS REAL))) AND ((rt0.c2, SUM(rt0.c0), MAX(rt0.c0, rt0.c3)))), ((rt0.c1)<=(rt0.c3)) COLLATE RTRIM FROM rt0 LIMIT 1583429673; -- 0ms;
SELECT ALL rt0.c1, (NOT ((rt0.c1 IN ()))), ((((((NULL) NOT BETWEEN (x'') AND (rt0.c0)))AND((NOT (rt0.c3)))))AND(TRIM(rt0.c3))) FROM rt0 WHERE (((((((((((NULL)OR(0.13088870982822254)))AND(0.37145463051965677)))AND(0.9960354085055427)))OR('1461243775'))) BETWEEN ((x'' IN ())) AND (((x'') ISNULL)))) GROUP BY ((((rt0.c1)<<(rt0.c3)))|((NOT (rt0.c2)))) ORDER BY (+ (((rt0.c3) IS FALSE)))  NULLS LAST LIMIT -162960000; -- 0ms;
SELECT ((rt0.c3) NOT BETWEEN (rt0.c4 COLLATE RTRIM) AND (CASE rt0.c1  WHEN rt0.c1 THEN rt0.c2 WHEN rt0.c3 THEN rt0.c4 WHEN rt0.c3 THEN rt0.c1 WHEN rt0.c1 THEN rt0.c4 WHEN rt0.c2 THEN rt0.c0 END)) FROM rt0 WHERE ((((NULL)LIKE(0.8314999775083443)) IN ())) GROUP BY load_extension(((rt0.c0)AND(rt0.c1))), ((NULL)IS((rt0.c3 IN ()))), ((((rt0.c4)LIKE(rt0.c4)))|(rt0.c0)) HAVING CAST((- (rt0.c4)) AS INTEGER) ORDER BY (((rt0.c3)) BETWEEN (((NOT (rt0.c0)))) AND ((CASE rt0.c0  WHEN rt0.c1 THEN rt0.c4 ELSE x'' END))); -- 0ms;
