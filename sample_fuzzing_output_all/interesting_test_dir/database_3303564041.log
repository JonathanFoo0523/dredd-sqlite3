-- Time: 2024/06/07 01:30:49
-- Database: database41
-- Database version: 3.40.0
-- seed value: 3303564041
PRAGMA cache_size = 50000; -- 1ms;
PRAGMA temp_store=MEMORY; -- 0ms;
PRAGMA synchronous=off; -- 0ms;
PRAGMA case_sensitive_like=ON; -- 0ms;
CREATE TABLE IF NOT EXISTS t0 (c0 BLOB , c1 INTEGER , c2 BLOB ); -- 0ms;
CREATE VIRTUAL TABLE vt1 USING fts5(c0); -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt1(vt1, rank) VALUES('pgsz', '50251'); -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.automatic_index = false; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
ALTER TABLE t0 RENAME TO t1; -- 1ms;
DROP TABLE IF EXISTS vt1; -- 1ms;
INSERT OR ABORT INTO t1 VALUES (NULL, 32110539, ''); -- 1ms;
ANALYZE sqlite_master; -- 0ms;
CREATE VIEW  IF NOT EXISTS v0(c0, c1, c2) AS SELECT ALL CASE WHEN ((((t1.c1)OR(t1.c0)))OR(t1.c2)) THEN ((t1.c1) BETWEEN (t1.c0) AND (t1.c2)) WHEN ((t1.c2)IS(t1.c2)) THEN ((t1.c0) BETWEEN (t1.c2) AND (t1.c1)) WHEN CAST(t1.c1 AS REAL) THEN ((t1.c2)>(0.3455797615910561)) END, t1.c2, ((TOTAL(t1.c0))||(((t1.c0)>(t1.c0)))) FROM t1; -- 1ms;
COMMIT; -- 2ms;
PRAGMA busy_timeout; -- 0ms;
PRAGMA auto_vacuum = INCREMENTAL; -- 0ms;
ALTER TABLE t1 RENAME TO t0; -- 5ms;
VACUUM temp; -- 2ms;
REINDEX; -- 0ms;
COMMIT; -- 0ms;
REINDEX; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
PRAGMA main.wal_autocheckpoint; -- 0ms;
PRAGMA cache_spill = true; -- 0ms;
PRAGMA main.threads; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
DELETE FROM t0; -- 1ms;
COMMIT TRANSACTION; -- 0ms;
INSERT OR FAIL INTO t0(c2, c1) VALUES ('-2081077200', 'months'); -- 5ms;
PRAGMA temp.recursive_triggers = false; -- 0ms;
BEGIN DEFERRED TRANSACTION; -- 0ms;
UPDATE OR IGNORE t0 SET (c1, c0)=(NULL, '32110539') WHERE CASE WHEN (- (-1943102162)) THEN t0.c1 COLLATE NOCASE ELSE (t0.c1 IN (t0.c2, t0.c2)) END; -- 0ms;
UPDATE OR FAIL t0 SET c0=0.4212085490025935 WHERE (CAST(t0.c0 AS NUMERIC) IN ((t0.c1 IN ()), ((t0.c0) BETWEEN (t0.c1) AND ('>Dr	mrQ㫴n')))); -- 0ms;
PRAGMA incremental_vacuum; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
CREATE UNIQUE INDEX i15 ON t0(CAST(CASE WHEN c1 THEN c2 END AS NUMERIC) COLLATE RTRIM,((CASE WHEN c0 THEN c2 ELSE c0 END)>((('1202535156') NOTNULL))) COLLATE NOCASE,IFNULL(c0 COLLATE BINARY, c2 COLLATE RTRIM) ASC); -- 3ms;
ROLLBACK TRANSACTION; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 1ms;
PRAGMA cell_size_check; -- 0ms;
REINDEX; -- 3ms;
VACUUM main; -- 0ms;
VACUUM main; -- 0ms;
VACUUM temp; -- 0ms;
REINDEX; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
PRAGMA cell_size_check = false; -- 0ms;
PRAGMA defer_foreign_keys; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
REINDEX; -- 1ms;
ROLLBACK TRANSACTION; -- 2ms;
PRAGMA threads = -1019781288334903201; -- 0ms;
BEGIN  TRANSACTION; -- 0ms;
CREATE VIRTUAL TABLE vt84 USING fts5(c0); -- 1ms;
CREATE UNIQUE INDEX IF NOT EXISTS i5 ON t0(((CAST(c0 AS REAL))IS NOT(((((c2)OR(c0)))AND(c0)))) ASC,LIKELIHOOD(DISTINCT c0, 0.3300678100899569) COLLATE NOCASE COLLATE RTRIM COLLATE RTRIM,c0) WHERE x''; -- 1ms;
INSERT INTO vt84(vt84, rank) VALUES('rank', 'bm25(10.0, 5.0)'); -- 0ms;
PRAGMA main.journal_mode; -- 1ms;
COMMIT TRANSACTION; -- 2ms;
REINDEX; -- 0ms;
UPDATE OR FAIL vt84 SET c0=-1943102162; -- 0ms;
INSERT INTO vt84(vt84, rank) VALUES('usermerge', 11); -- 3ms;
INSERT INTO vt84(vt84, rank) VALUES('pgsz', '18169'); -- 0ms;
PRAGMA main.foreign_keys; -- 0ms;
ANALYZE sqlite_master; -- 0ms;
BEGIN EXCLUSIVE TRANSACTION; -- 0ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt84(vt84) VALUES('rebuild'); -- 3ms;
ANALYZE t0; -- 0ms;
ALTER TABLE t0 ADD COLUMN c86 TEXT; -- 3ms;
PRAGMA stats; -- 0ms;
ALTER TABLE t0 RENAME COLUMN c0 TO c88; -- 1ms;
UPDATE t0 SET (c86, c2)=(0.6705315205532828, NULL) WHERE ((CAST(t0.c86 AS INTEGER)) BETWEEN (CHANGES()) AND ('-1157534267')); -- 0ms;
CREATE UNIQUE INDEX i60 ON t0((((c1 IN ())) BETWEEN (((((c88)AND(c2)))AND('F#9'))) AND (CASE c2  WHEN c1 THEN c2 ELSE c1 END)),((0.39211147776719 COLLATE NOCASE) BETWEEN (((c88)<<(c86))) AND (((c2)+(c88)))),(((c2)) BETWEEN ((c1 COLLATE BINARY)) AND (((((c86, c2, c2))=((c2, c1, c1)))))),(((((c1 IN ()))OR(CAST('-2081077200' AS INTEGER))))OR(c1 COLLATE NOCASE)) COLLATE BINARY DESC); -- 1ms;
INSERT INTO vt84(vt84) VALUES('optimize'); -- 0ms;
CREATE INDEX IF NOT EXISTS i14 ON t0((((c88) IS FALSE) IN ()),'-2081077200',c86,'' COLLATE RTRIM DESC); -- 0ms;
CREATE INDEX IF NOT EXISTS i85 ON t0((~ ((x'' IN ()))) COLLATE RTRIM,HEX(TRIM(DISTINCT c88, c1)),(((c2) NOT NULL) IN ()) COLLATE BINARY DESC,(c86 IN ()) COLLATE BINARY) WHERE ((((c1) BETWEEN (c1) AND (c88))) NOT NULL); -- 0ms;
INSERT INTO vt84(vt84, rank) VALUES('merge', 1099104760);\n; -- 0ms;
INSERT INTO vt84(vt84) VALUES('integrity-check'); -- 0ms;
COMMIT; -- 0ms;
INSERT INTO vt84(vt84, rank) VALUES('usermerge', 12); -- 6ms;
ROLLBACK TRANSACTION; -- 0ms;
INSERT INTO vt84(vt84) VALUES('merge=1105280318,15');\n; -- 0ms;
INSERT INTO vt84(vt84) VALUES('integrity-check'); -- 0ms;
END; -- 1ms;
ROLLBACK TRANSACTION; -- 0ms;
SELECT MIN(TOTAL(vt84.c0), ((v0.c2) NOTNULL), ((t0.c86)IS NOT(t0.c86)), ((vt84.c0) ISNULL)), (((t0.c88)) BETWEEN ((CAST(v0.c2 AS BLOB))) AND ((((((t0.c88)OR(t0.c2)))OR(t0.c1))))), CAST(((v0.c1)<>(v0.c1)) AS NUMERIC), COUNT(*), ROUND(0.9549129544661729, ((NULL) IS FALSE)) FROM v0, vt84;SELECT LAG(((CAST('-1943102162' AS REAL))&(((v0.c0) ISNULL))), CAST(((x'')IS NOT(v0.c2)) AS BLOB), '-731658493') OVER () FROM v0, t0, vt84 LIMIT -208003077; -- 0ms;
SELECT DISTINCT TRIM(((t0.c88)-(v0.c2)), v0.c2) FROM v0, t0, vt84 WHERE (NULL); -- 0ms;
SELECT CAST(x'' AS REAL) FROM t0 WHERE ((((x'' IN (1.09910476E9, 0Xffffffff8172cfda)))IS((x'' IN ())))); -- 0ms;
SELECT ALL (NOT (CAST(t0.c1 AS NUMERIC))), t0.c2, CASE WHEN t0.c88 THEN t0.c1 ELSE t0.c86 END COLLATE RTRIM FROM vt84, v0 WHERE (CAST(((0.7136392245648806)GLOB('')) AS BLOB));SELECT DISTINCT (((v0.c0, v0.c0, v0.c1)) NOT BETWEEN ((NULL, CASE WHEN t0.c1 THEN t0.c86 WHEN t0.c86 THEN t0.c88 WHEN t0.c88 THEN vt84.c0 WHEN t0.c88 THEN t0.c88 WHEN vt84.c0 THEN x'b1dc' ELSE t0.c88 END, vt84.c0)) AND (((('>Dr	mrQ㫴n')<(v0.c2)), ((t0.c2)<<(v0.c1)), (t0.c86 IN ())))) FROM v0, t0 WHERE ((((((0x4a3673c2)) BETWEEN ((x'')) AND ((NULL))))<((NOT (0.39211147776719))))) GROUP BY ((x'') BETWEEN (ABS(v0.c2)) AND ((((NULL, v0.c1, t0.c1, v0.c0, v0.c0))<((v0.c1, t0.c2, t0.c1, vt84.c0, t0.c2))))) HAVING CAST((t0.c88 IN ()) AS REAL);SELECT t0.c86 FROM v0 LIMIT -2081804785;SELECT DISTINCT t0.c1, TYPEOF(v0.c2 COLLATE RTRIM), MIN(((v0.c0)/(v0.c2))) FROM t0;SELECT COUNT(*) FILTER(WHERE (((v0.c2)) BETWEEN ((t0.c1 COLLATE RTRIM)) AND ((((v0.c2) NOT BETWEEN (v0.c0) AND (t0.c2)))))) OVER () FROM v0, t0 WHERE (''); -- 0ms;
SELECT (((t0.c88 IN (t0.c1, v0.c2)))IS(((t0.c2)|(v0.c2)))) FROM v0, vt84, t0; -- 0ms;
SELECT DISTINCT (((((-2.130479566E9)) BETWEEN ((v0.c1)) AND ((0Xffffffff81037632))))<((+ (v0.c1)))) FROM vt84, t0 WHERE (UPPER(DISTINCT ((x'') IS TRUE)));SELECT DISTINCT (t0.c2 COLLATE BINARY IN ()) FROM t0, vt84, v0; -- 1ms;
SELECT DISTINCT (((NOT (t0.c1))) BETWEEN (((v0.c0) NOT BETWEEN (t0.c2) AND (t0.c1))) AND (t0.c1 COLLATE RTRIM)) FROM t0, v0 ORDER BY ((((t0.c1 COLLATE NOCASE)OR(CAST(v0.c2 AS REAL))))OR(TRIM(DISTINCT t0.c1, v0.c2))) ASC  NULLS LAST; -- 0ms;
SELECT ((((((((((t0.c88)IS(t0.c86)))AND(CASE WHEN v0.c2 THEN v0.c1 END)))AND(x'')))OR((((-1157534267))<((vt84.c0))))))OR(TRIM(t0.c1))) FROM vt84 NOT INDEXED, t0;SELECT DISTINCT ((MIN(t0.c2)) NOT BETWEEN (COUNT(*)) AND (t0.c88)), LTRIM(((t0.c86) BETWEEN (v0.c0) AND (vt84.c0)), (t0.c1 IN ())), CASE (t0.c2 IN (x'', t0.c2))  WHEN t0.c2 THEN (~ (t0.c2)) END FROM v0 WHERE (((CASE WHEN x'' THEN x'' END)<=(((32110539) BETWEEN ('-598011170') AND (NULL))))) GROUP BY (((t0.c1 IN ())) BETWEEN ((((t0.c88)) BETWEEN ((t0.c86)) AND ((v0.c0)))) AND (v0.c0 COLLATE RTRIM)) HAVING ((((((((((vt84.c0) IS TRUE))AND(((t0.c1)<=(-2130479566)))))OR(v0.c1 COLLATE NOCASE)))AND((t0.c1 IN ()))))AND(MIN('1580189285', v0.c0)));SELECT (CASE WHEN t0.c86 THEN t0.c88 WHEN t0.c86 THEN v0.c1 WHEN v0.c0 THEN v0.c2 WHEN t0.c1 THEN t0.c2 WHEN v0.c1 THEN v0.c1 ELSE v0.c2 END IN ()) FROM v0, t0, vt84 NOT INDEXED; -- 0ms;
SELECT DISTINCT (((((vt84.c0)) NOT BETWEEN ((t0.c1)) AND ((v0.c2))))<<(LTRIM(t0.c86, v0.c2))) FROM v0, t0, vt84 WHERE (((((x'')AND(0.6990410440734829)))AND(x'2875')) COLLATE RTRIM); -- 1ms;
SELECT DISTINCT t0.c88, ((t0.c88 COLLATE BINARY) BETWEEN (json_insert(vt84.c0, t0.c88, t0.c86)) AND (json_array(v0.c2, NULL))), ((v0.c1) BETWEEN (t0.c88) AND (v0.c0)) COLLATE NOCASE, (((((((((v0.c0)OR(vt84.c0)))OR(t0.c2)))AND(vt84.c0)))AND(t0.c88)) IN (json(x''), CAST(t0.c86 AS REAL))), ((((((((t0.c88)AND(t0.c86 COLLATE BINARY)))OR(CAST(t0.c2 AS INTEGER))))AND(CAST(t0.c1 AS REAL))))OR('')) FROM t0 WHERE (((((NULLIF('0.7136392245648806', '1432434880'))OR((-267336532 IN (0.5131283416202719)))))OR(((NULL) BETWEEN (x'') AND ('')))));SELECT DISTINCT (((NOT (v0.c1))) NOT BETWEEN (((t0.c2) NOTNULL)) AND (CASE WHEN t0.c86 THEN v0.c2 WHEN v0.c0 THEN t0.c2 WHEN v0.c2 THEN t0.c88 ELSE t0.c88 END)), SUM((NOT (v0.c2))), TYPEOF(DISTINCT CAST(t0.c2 AS NUMERIC)) FROM v0, vt84, t0 WHERE (((((x'fa07') IS FALSE))>=(INSTR('0.3455797615910561', 0.8861586770903631)))); -- 0ms;
SELECT ((CAST(t0.c2 AS TEXT))-((t0.c88 IN ()))) FROM v0 WHERE ((((CASE 1245082562  WHEN NULL THEN 0xffffffff81037632 END, ('TRUE' IN ()), (- (NULL)), ((('474916046'))<=((x''))), x''))<=((((0.5600729827265433)<>('1202535156')), (('-2130479566')>=(x'')), CASE 0.6550788772584017  WHEN x'' THEN -598011170 ELSE 1.202535156E9 END, ((-657175788)OR('[&')), ((0.8913942071215084) BETWEEN (x'') AND ('?v>Rl珡.o3')))))) GROUP BY CASE (t0.c86 IN ())  WHEN t0.c2 COLLATE BINARY THEN LOWER(DISTINCT v0.c0) ELSE t0.c88 END HAVING CAST(((vt84.c0)>>(v0.c2)) AS INTEGER);SELECT DISTINCT (v0.c2 COLLATE RTRIM IN (NULL)) FROM v0 WHERE ((NOT (ABS(DISTINCT 0.299466418792678)))) LIMIT 91576061 OFFSET 91576061; -- 0ms;
SELECT DISTINCT (((CASE t0.c88  WHEN t0.c1 THEN t0.c86 ELSE v0.c0 END))>(((('91576061') ISNULL)))) FROM vt84, t0, v0 WHERE ((((('0.299466418792678')%(NULL))) NOT BETWEEN ((('-2145977859')AND(NULL))) AND (CASE NULL  WHEN NULL THEN x'' END))); -- 0ms;
SELECT DISTINCT ((((0.9681790569589954)AND(((t0.c86)||(v0.c0)))))OR(((vt84.c0)<=(v0.c1)))) FROM vt84 WHERE (((((ABS(DISTINCT '?܍%]'))OR(((((x'')AND(NULL)))OR(x'13d2')))))OR((((0.7159822365611132, x'', x'', '-2105965941', NULL))!=((x'', '91576061', NULL, 0.46293663777966776, NULL))))));SELECT ALL NULL, v0.c1, GROUP_CONCAT(x'') FROM v0, vt84; -- 0ms;
SELECT LIKE(((v0.c0)IS NOT(v0.c2)), CASE WHEN t0.c86 THEN v0.c1 WHEN t0.c86 THEN t0.c1 WHEN t0.c88 THEN t0.c2 ELSE v0.c0 END) FROM vt84, t0, v0 WHERE (CAST(CAST(NULL AS INTEGER) AS BLOB)); -- 0ms;
SELECT DISTINCT x'a3b9' FROM t0, v0, vt84 WHERE (CAST(((x'')AND('')) AS REAL)); -- 1ms;
SELECT ALL TOTAL(((t0.c86)OR(v0.c0)) COLLATE NOCASE) OVER ( ORDER BY ((CASE WHEN t0.c88 THEN v0.c0 WHEN t0.c88 THEN v0.c1 WHEN vt84.c0 THEN v0.c0 ELSE 1261328902 END) BETWEEN ((((t0.c1))>=((t0.c86)))) AND (((v0.c1) NOTNULL)))  NULLS FIRST) FROM t0, vt84;SELECT DISTINCT (((+ (NULL)))>=(SQLITE_SOURCE_ID())) FROM t0, v0 WHERE (((((((x'08e8')AND(NULL)))OR(x'd121')))GLOB(((NULL)LIKE('F#9'))))) GROUP BY ((((((((((t0.c86)AND(t0.c2)))OR(v0.c2)))OR(t0.c2)))OR(v0.c1))) NOT NULL), (((t0.c2) NOTNULL) IN ()), ((((t0.c1)>(vt84.c0)))<<(CASE WHEN v0.c2 THEN t0.c2 END)) ORDER BY ((SQLITE_COMPILEOPTION_GET(t0.c2)) BETWEEN ((((v0.c1, t0.c2, '-1211521508'))=((t0.c86, t0.c88, v0.c0)))) AND ((t0.c86 IN (t0.c88)))) DESC  NULLS FIRST, ((((((vt84.c0) NOTNULL))AND(CASE v0.c2  WHEN t0.c2 THEN v0.c0 WHEN v0.c0 THEN t0.c1 WHEN t0.c2 THEN t0.c2 END)))AND(((vt84.c0) NOT BETWEEN (v0.c2) AND (t0.c2)))) ASC, (((((v0.c0) NOT BETWEEN (t0.c1) AND (t0.c86))))<=((v0.c2))) DESC  NULLS LAST;SELECT ((CAST(v0.c0 AS INTEGER)) IS TRUE), ((((vt84.c0)%(t0.c88)))<<((((t0.c86)) NOT BETWEEN ((t0.c88)) AND ((v0.c1))))), ((((((((((t0.c86)+(vt84.c0)))OR(vt84.c0)))AND(((((0x7f922141)AND(v0.c1)))OR(t0.c1)))))AND(v0.c2)))AND(((t0.c1) NOT NULL))) FROM t0, v0 WHERE (((((((NULL)OR(0X1c4ea4ce)))AND('-2081077200'))) BETWEEN (('-1730637781' IN ())) AND ('u{' COLLATE NOCASE)));SELECT DISTINCT CAST(CASE t0.c1  WHEN t0.c88 THEN v0.c2 END AS BLOB) FROM vt84 INDEXED BY i15, v0;SELECT DISTINCT ((MAX(v0.c0)) NOT BETWEEN (((((t0.c2)AND(t0.c88)))AND(v0.c2))) AND (((t0.c86)|(t0.c1)))) FROM v0, vt84 WHERE ((((NULL IN (0.47961759114819447, x'')))=((('')<>(0.18984290455242037))))) GROUP BY x'' HAVING t0.c2;SELECT v0.c1 FROM vt84, t0, v0 WHERE (CASE WHEN (((('*G咠#')OR(x'')))AND('%H')) THEN 0.7655321859506297 COLLATE BINARY END); -- 0ms;
SELECT ((((t0.c2) NOT BETWEEN ('0.5131283416202719') AND (t0.c88)))/((((vt84.c0)) BETWEEN ((v0.c0)) AND ((t0.c2))))), TOTAL(CAST('1686424910' AS INTEGER)) FILTER(WHERE (((CAST(t0.c88 AS BLOB)))<((((((v0.c2)OR(vt84.c0)))AND(t0.c2)))))) OVER (), (vt84.c0 IN ()) FROM v0 WHERE (CAST(((-1.730637781E9)|(0.9681790569589954)) AS TEXT));SELECT ((((t0.c88)||(v0.c2))) NOT BETWEEN (NULL) AND ((((vt84.c0)) BETWEEN ((v0.c1)) AND ((v0.c1))))) FROM v0 WHERE (((('-412306795')) NOT BETWEEN ((NULL)) AND (('-2145977859')))) LIMIT 2069224810 OFFSET 1954288987;SELECT DISTINCT t0.c88 FROM vt84, v0 LIMIT -753176487;SELECT ALL CAST((- (t0.c86)) AS INTEGER), TOTAL(((NULL) NOT BETWEEN (t0.c86) AND (0.49755407973038535))), CAST(LTRIM(t0.c2, t0.c88) AS BLOB) FROM t0, vt84; -- 0ms;
SELECT DISTINCT (NOT (((v0.c1)|(v0.c1)))), CASE WHEN ((t0.c1)-(t0.c88)) THEN t0.c1 COLLATE RTRIM ELSE CAST(t0.c86 AS BLOB) END, COUNT(*) FROM vt84 WHERE ((((('1897840062')%(NULL))) BETWEEN (((-6.57175788E8)GLOB(''))) AND (0xffffffffc5e7ae49 COLLATE BINARY)));SELECT ALL ((((t0.c88)) NOT BETWEEN ((t0.c2)) AND ((t0.c1))) IN (ABS(DISTINCT t0.c1))) FROM t0, vt84; -- 0ms;
SELECT CUME_DIST() OVER () FROM vt84, t0, v0 INDEXED BY i60;SELECT DISTINCT json_insert(SUM(v0.c1), (v0.c1 IN (x'ee43', vt84.c0)), (t0.c88 IN (t0.c88))), (~ (((v0.c0) BETWEEN (v0.c2) AND (v0.c2)))), SUM(v0.c1) FROM v0 NOT INDEXED;SELECT ALL (((v0.c0)OR(t0.c86)) IN (SUM(t0.c88), ((v0.c0) IS FALSE))), ((((v0.c0) NOTNULL))OR(((v0.c1) BETWEEN (t0.c88) AND (vt84.c0)))), TOTAL((((t0.c2)) NOT BETWEEN ((t0.c2)) AND ((v0.c2)))) FROM vt84, t0, v0; -- 0ms;
SELECT DISTINCT UNLIKELY(t0.c2) FROM v0, vt84, t0 WHERE (CASE CASE WHEN 'P1#Gl}' THEN x'' END  WHEN ('' IN ()) THEN ((NULL) NOT BETWEEN (x'') AND ('7?r娆3u')) WHEN '-1324800186' COLLATE BINARY THEN (~ (NULL)) WHEN (('tx')OR(x'208f')) THEN (',*' IN ()) ELSE (((('-1027076224')OR('\n9')))AND(0.9476583706762496)) END); -- 1ms;
SELECT DISTINCT 0.3059656716421587, ((t0.c86 COLLATE NOCASE) IS TRUE), ((x'4069')OR(((((((((v0.c0)OR(t0.c86)))AND(t0.c2)))AND(v0.c0)))AND(v0.c0)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (((t0.c2)) NOT BETWEEN ((t0.c1 COLLATE NOCASE)) AND ((((t0.c1) NOT BETWEEN (t0.c88) AND (vt84.c0))))) FROM vt84 CROSS JOIN v0 ON ((CASE WHEN v0.c1 THEN vt84.c0 ELSE v0.c1 END) BETWEEN (TIME(v0.c2, v0.c1, v0.c2)) AND ((t0.c1 IN ()))) ORDER BY UPPER(((((v0.c2)OR(t0.c1)))OR(v0.c2))) ASC;SELECT GROUP_CONCAT((NOT (v0.c2))), TOTAL(((((v0.c2)OR(v0.c2)))OR(t0.c2))), 1001221356 FROM v0;SELECT DISTINCT ((((t0.c88)|(x'8fc3'))) BETWEEN (((v0.c0) NOT BETWEEN (t0.c88) AND (vt84.c0))) AND ((+ (v0.c0)))) FROM vt84, t0 LIMIT -1400500951 OFFSET 1667544583;SELECT NULL, CASE (((t0.c2))!=((v0.c1)))  WHEN COUNT(*) THEN ((t0.c88) BETWEEN (NULL) AND (v0.c1)) ELSE (((t0.c2)) BETWEEN ((v0.c2)) AND ((v0.c2))) END, '{DZ' FROM v0, vt84;SELECT DISTINCT CUME_DIST() OVER (), (t0.c86 IN ()) COLLATE RTRIM, ((t0.c1) IS TRUE) COLLATE NOCASE FROM t0, v0, vt84; -- 0ms;
SELECT DISTINCT v0.c1 FROM vt84 FULL OUTER JOIN t0 ON ((((RTRIM(v0.c1))AND((((t0.c86, v0.c2, t0.c88)) BETWEEN ((t0.c88, v0.c2, 0.7136392245648806)) AND ((t0.c2, v0.c2, t0.c1))))))OR(((((t0.c2)OR(vt84.c0)))OR(t0.c2)))) WHERE ((((('1954288987') NOT BETWEEN (NULL) AND (x'')))<>((NOT (' m')))));SELECT DISTINCT GROUP_CONCAT('1432434880') FROM t0, vt84, v0 WHERE ((((((((((('')AND(x'')))AND('1587983445')))OR(x'')))OR(NULL)))*(''))); -- 1ms;
SELECT DISTINCT ((json_array_length(t0.c86))GLOB(((v0.c1) ISNULL))) FROM t0, vt84;SELECT DISTINCT (((t0.c1)) BETWEEN ((t0.c86)) AND (((vt84.c0 IN ())))), (+ (TOTAL_CHANGES())), (NOT (t0.c88)) COLLATE RTRIM, GROUP_CONCAT(((v0.c1)|(x'a826d6ec'))), GLOB(IFNULL(DISTINCT vt84.c0, 0.36777975882237923), (((t0.c2)) NOT BETWEEN ((t0.c2)) AND (('\n\n1iV_q1P')))) FROM v0 GROUP BY (((t0.c86, v0.c2, v0.c1)) BETWEEN (((((v0.c2)) NOT BETWEEN ((v0.c1)) AND ((t0.c2))), ((((v0.c2)AND(v0.c1)))OR(v0.c0)), ABS(v0.c1))) AND ((((t0.c2) NOT BETWEEN (vt84.c0) AND (v0.c0)), CAST(v0.c2 AS TEXT), HEX(t0.c1))));SELECT ALL GROUP_CONCAT(CAST(t0.c88 AS NUMERIC)) OVER () FROM vt84;SELECT DISTINCT CASE ((t0.c86) IS TRUE)  WHEN ((vt84.c0)>>(t0.c88)) THEN ((t0.c1)&(t0.c86)) ELSE '\n\n1iV_q1P' END FROM v0 WHERE (UPPER((((x'')) NOT BETWEEN ((NULL)) AND (('')))));SELECT DISTINCT json_array(GROUP_CONCAT(v0.c2), ((NULL) IS TRUE)) FROM vt84, t0 WHERE ((('0.47961759114819447' COLLATE NOCASE) NOTNULL));SELECT DISTINCT COALESCE(DISTINCT ((t0.c2) NOT NULL), CAST(v0.c2 AS INTEGER)), CAST(((t0.c88)IS(t0.c86)) AS REAL), ((((((vt84.c0)OR(v0.c0)))AND(t0.c2)))%(((vt84.c0)=(v0.c2)))) FROM vt84;SELECT (((((0.2054220323181516))<=((t0.c86)))) NOTNULL), '21152966', ((-2.67336532E8)|('[b')) FROM t0, vt84, v0 WHERE (CASE ((NULL)OR('1847483791'))  WHEN (('#e')IS NOT(x'')) THEN CAST(204531107 AS INTEGER) END); -- 1ms;
SELECT DISTINCT (((t0.c88) IS TRUE) IN ()), CAST(v0.c0 AS BLOB) COLLATE RTRIM, ((t0.c86)IS NOT(((t0.c2) BETWEEN (t0.c88) AND (vt84.c0)))) FROM v0, vt84 WHERE (('pYR' IN ())) ORDER BY (~ (LOWER(DISTINCT x'1be3'))) ASC;SELECT DISTINCT t0.c86 FROM v0, vt84 WHERE ((CASE NULL  WHEN x'' THEN -2.123182118E9 END IN ()));SELECT DISTINCT ROW_NUMBER() OVER (), '', t0.c1, MAX(TOTAL(vt84.c0)), COUNT((NOT (vt84.c0))) FROM t0, vt84, v0;SELECT STRFTIME(t0.c88, 0.2054220323181516, ((vt84.c0)/(v0.c1)), CASE WHEN vt84.c0 THEN v0.c0 WHEN t0.c86 THEN t0.c86 WHEN t0.c1 THEN t0.c1 ELSE v0.c0 END, SUM(v0.c1)), CASE WHEN LENGTH(v0.c0) THEN CASE t0.c88  WHEN v0.c0 THEN v0.c0 ELSE t0.c88 END WHEN (((t0.c86))==((v0.c0))) THEN v0.c0 WHEN -246659239 THEN CAST(t0.c86 AS BLOB) END, (~ (CAST(v0.c0 AS TEXT))) FROM t0, v0, vt84 ORDER BY ((((((0.2198316203075139, v0.c1, v0.c0))<=((t0.c1, v0.c2, vt84.c0)))))<>((CASE vt84.c0  WHEN v0.c1 THEN t0.c1 WHEN t0.c86 THEN t0.c86 WHEN t0.c86 THEN vt84.c0 END)))  NULLS LAST; -- 0ms;
SELECT DISTINCT CAST(CAST(vt84.c0 AS BLOB) AS BLOB) FROM vt84, t0, v0; -- 0ms;
SELECT ((CAST(t0.c88 AS NUMERIC))GLOB(UNLIKELY(DISTINCT t0.c86))) FROM t0, v0, vt84; -- 1ms;
SELECT (+ (t0.c1 COLLATE RTRIM)), (((t0.c88)) BETWEEN (((NOT (t0.c2)))) AND ((0xffffffff81037632))), (~ ('' COLLATE NOCASE)) FROM v0, t0, vt84 WHERE ((((0.32377961641095565 IN ()))&(((0.38849908428787816) NOTNULL)))); -- 0ms;
SELECT ((CAST(NULL AS INTEGER)) NOT BETWEEN (t0.c1 COLLATE RTRIM) AND (((((t0.c88)AND(t0.c86)))AND(t0.c2)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT (+ (CASE WHEN vt84.c0 THEN t0.c1 ELSE v0.c2 END)) FROM t0, v0, vt84 WHERE (NULL); -- 0ms;
SELECT COUNT(GROUP_CONCAT(((((v0.c2)AND(v0.c0)))OR(v0.c2)))), SUM(((((t0.c86)AND(t0.c86)))OR(t0.c88))) COLLATE BINARY, NULL FROM v0, t0 WHERE (CASE WHEN (((((((('-0.0')AND(NULL)))OR(NULL)))OR(NULL)))OR('')) THEN (x'' IN ()) ELSE ((NULL)<>(x'19a9')) END);SELECT ALL json_valid(v0.c0 COLLATE NOCASE) FROM v0 WHERE (-708911024); -- 0ms;
SELECT AVG((t0.c86 IN (v0.c1))) COLLATE NOCASE, 0.1672183994615456, (((((t0.c88)AND(t0.c1)))AND(NULL)) IN ()) FROM vt84, v0 WHERE ((((((x'aca8e519')IS NOT('+R.wP8!'))))!=((CAST(-1.730637781E9 AS BLOB)))));SELECT DISTINCT FIRST_VALUE((((t0.c2) ISNULL) IN ())) OVER () FROM v0, vt84, t0 WHERE ((((0.39338387793263796)) BETWEEN ((x'')) AND ((NULL))) COLLATE NOCASE) ORDER BY ((((t0.c88) IS TRUE)) NOT BETWEEN (PRINTF(v0.c0)) AND (v0.c1)) DESC; -- 0ms;
SELECT (((v0.c0)) NOT BETWEEN ((((v0.c0) NOT NULL))) AND (((((x'589c')) NOT BETWEEN ((t0.c88)) AND ((v0.c1)))))), ((0.9413996172165467) NOT NULL), (((+ (t0.c86)))>(CASE t0.c2  WHEN v0.c2 THEN t0.c2 WHEN t0.c1 THEN v0.c0 WHEN t0.c86 THEN t0.c2 END)) FROM v0;SELECT DISTINCT COUNT(*) FILTER(WHERE (- ((((v0.c2, v0.c0, t0.c1)) NOT BETWEEN ((x'', v0.c2, v0.c1)) AND ((v0.c2, v0.c0, t0.c86)))))) OVER () FROM vt84, t0, v0 LIMIT -1681867011; -- 0ms;
SELECT NULL, (NOT (((v0.c1) NOTNULL))), -1.211521508E9 FROM vt84 WHERE (0.959497093693861) GROUP BY ((((((((((v0.c1)AND(v0.c1)))AND(v0.c0)))AND(t0.c88)))OR(v0.c1)))<(((t0.c1) ISNULL))) HAVING x'';SELECT ALL ((((t0.c2)&(v0.c1))) BETWEEN (((t0.c86)AND(v0.c0))) AND (((t0.c86)AND(v0.c1)))) FROM vt84;SELECT ALL ((t0.c88)OR(TOTAL(t0.c2))) FROM vt84, v0, t0 WHERE (((('') IS TRUE) IN ())); -- 0ms;
SELECT ALL AVG((('_P')/(0x1c4ea4ce))) OVER () FROM t0 LIMIT 1667544583; -- 0ms;
SELECT ((((((((((v0.c1) NOTNULL))OR(v0.c0 COLLATE RTRIM)))AND(CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c88 END)))AND((~ (v0.c2)))))AND(UPPER(t0.c88))), (((- (t0.c86)))!=(((((t0.c1)AND(v0.c1)))AND(vt84.c0)))), SUM(CASE v0.c2  WHEN v0.c1 THEN NULL ELSE t0.c2 END) OVER () FROM vt84;SELECT ALL UNLIKELY(((((v0.c0)AND(NULL)))OR(v0.c1))), ((((t0.c1) NOT NULL))-(CASE WHEN t0.c2 THEN v0.c1 ELSE t0.c88 END)), t0.c88 FROM vt84;SELECT DISTINCT CUME_DIST() OVER (), v0.c0, MIN(((v0.c0) BETWEEN (t0.c2) AND (t0.c88)), (((vt84.c0)) BETWEEN ((v0.c1)) AND ((t0.c2)))) FROM t0, v0 WHERE ((((('u{') BETWEEN (0.1425959610143177) AND (NULL))) NOT BETWEEN ((~ (NULL))) AND (((NULL) IS FALSE))));SELECT CASE WHEN ((vt84.c0) NOT BETWEEN (vt84.c0) AND (t0.c1)) THEN json_extract(NULL, v0.c1, v0.c2, t0.c88) WHEN ((t0.c2)+(v0.c1)) THEN json_patch(t0.c1, 0.3947226937928201) WHEN CAST(t0.c88 AS NUMERIC) THEN ((((t0.c88)AND(vt84.c0)))AND(t0.c88)) END FROM v0;SELECT ((t0.c86 COLLATE BINARY)LIKE(t0.c1 COLLATE RTRIM)) FROM v0;SELECT '-1681867011', CASE NULL  WHEN ((v0.c1)&(t0.c88)) THEN (('8') NOT BETWEEN (t0.c1) AND (v0.c2)) ELSE v0.c1 COLLATE NOCASE END, CASE t0.c1  WHEN t0.c86 THEN t0.c88 END COLLATE BINARY FROM v0, vt84, t0 ORDER BY ((CAST(t0.c2 AS BLOB))*((v0.c1 IN ()))); -- 0ms;
SELECT DISTINCT CAST(GROUP_CONCAT(vt84.c0) AS INTEGER) FROM t0, vt84; -- 0ms;
SELECT DISTINCT TRIM(DISTINCT ((t0.c1)||(v0.c1)), (((vt84.c0)) NOT BETWEEN ((t0.c2)) AND ((v0.c1)))) FROM t0, v0;SELECT ALL CASE WHEN t0.c88 THEN v0.c2 ELSE t0.c2 END COLLATE NOCASE, '-1138550067', v0.c2 FROM v0, t0 INDEXED BY i5 WHERE ((((('1587983445')&(-733850704))) ISNULL));SELECT DISTINCT highlight(CASE t0.c86  WHEN v0.c2 THEN t0.c88 END, TRIM(v0.c0), (t0.c88 IN ()), (t0.c88 IN (443616978, '405784015'))) FROM vt84;SELECT DISTINCT COUNT(CAST(vt84.c0 AS REAL)) FROM t0;SELECT ALL NTH_VALUE(CAST(vt84.c0 AS BLOB), (((((t0.c86))>((''))))*(((t0.c86)<<(t0.c1))))) OVER ( ORDER BY (((t0.c2) NOTNULL) IN ())) FROM v0, t0, vt84 ORDER BY ((v0.c1)IS(t0.c88)) COLLATE BINARY; -- 1ms;
SELECT ALL (((- (t0.c1)))>>(vt84.c0)), ((((AVG(t0.c2))AND(((vt84.c0)LIKE(v0.c1)))))AND((t0.c2 IN (t0.c2, t0.c2)))), x'' FROM v0 WHERE (NULLIF(CAST('months' AS NUMERIC), CASE WHEN NULL THEN NULL END));SELECT DISTINCT ((((x'')||(t0.c86))) ISNULL) FROM vt84 WHERE (((((COALESCE(DISTINCT 1523369718, 0.644846948820814))AND(((('-1730637781')) NOT BETWEEN ((x'')) AND ((x'752b'))))))AND(((NULL) NOT BETWEEN ('153542143') AND (x'')))));SELECT DISTINCT ((((v0.c0) IS TRUE)) NOT BETWEEN ((((v0.c2, t0.c1, v0.c0, v0.c0, t0.c88)) BETWEEN ((t0.c86, t0.c1, v0.c1, v0.c1, t0.c88)) AND ((t0.c1, v0.c0, v0.c0, t0.c1, v0.c1)))) AND (CAST(t0.c86 AS NUMERIC))), ABS(DISTINCT CAST(v0.c1 AS INTEGER)), '-499147567' FROM t0 WHERE (((((TYPEOF('VZ'))AND((+ (NULL)))))OR(NULL COLLATE RTRIM)));SELECT DISTINCT ((t0.c2)<<(v0.c0)) COLLATE BINARY, COUNT(((vt84.c0) NOT BETWEEN (v0.c1) AND (t0.c86))) OVER (), CASE WHEN ((vt84.c0)&(t0.c1)) THEN ((vt84.c0)<<(v0.c1)) ELSE json_array_length(t0.c2, t0.c86) END FROM vt84 GROUP BY ((((t0.c2)IS NOT(vt84.c0)))>>(CASE t0.c2  WHEN vt84.c0 THEN t0.c2 ELSE v0.c2 END)), (((t0.c86)) BETWEEN ((CAST(t0.c88 AS NUMERIC))) AND ((CAST(0.896110859871311 AS NUMERIC)))), ((NULL)AND(x'')) HAVING (((('0.49755407973038535')OR(t0.c88)))AND(MAX(t0.c1))) ORDER BY TYPEOF(x'01b4') ASC LIMIT -1141551088 OFFSET -753176487;SELECT DISTINCT '508345879', v0.c0, 267743827 COLLATE BINARY FROM vt84, t0, v0; -- 1ms;
SELECT DISTINCT t0.c86, (~ (((vt84.c0)>(t0.c88)))), v0.c2 FROM v0;SELECT ALL SUM(((t0.c86) IS FALSE)) OVER () FROM t0, v0; -- 0ms;
SELECT DISTINCT TOTAL(((t0.c88)<>(t0.c2))) OVER () FROM v0 INDEXED BY i5, t0, vt84 WHERE (CASE (('-733850704')>>(x'76d9d5c4'))  WHEN ('1769668544' IN ()) THEN NULL COLLATE RTRIM ELSE ((NULL)||(5.75080205E8)) END);SELECT DISTINCT GROUP_CONCAT(0.23134767086846963) FROM vt84, v0 WHERE ((((0.1425959610143177) ISNULL) IN ())) ORDER BY x'' DESC  NULLS LAST, CASE WHEN ((v0.c1) IS TRUE) THEN (t0.c86 IN ()) WHEN ((v0.c0) BETWEEN (t0.c88) AND (t0.c86)) THEN 0x6bff187c WHEN v0.c0 THEN (+ (t0.c88)) ELSE (~ (0.7755142434849417)) END  NULLS LAST;SELECT ((((CASE v0.c0  WHEN t0.c2 THEN 0.009887041923259288 ELSE t0.c1 END)AND(t0.c1)))OR(COUNT(*))) FROM t0, v0, vt84; -- 0ms;
SELECT DISTINCT CAST(x'' AS BLOB) FROM v0, t0 WHERE (((NULL COLLATE RTRIM)!=(CASE WHEN 0.06862385002455096 THEN -730068531 WHEN '-753176487' THEN 0X782d8f3f WHEN -1157534267 THEN x'' END))); -- 1ms;
SELECT ALL json_patch(CASE WHEN t0.c1 THEN t0.c2 END, ((((v0.c1)OR(vt84.c0)))OR(t0.c1))) FROM v0, t0, vt84; -- 0ms;
SELECT ((v0.c1 IN (t0.c86)) IN ()) FROM t0 WHERE (TYPEOF(((('575080205', '', NULL))=(('-773378443', 0.39706165905381463, 'G<'))))) GROUP BY (((((t0.c86) ISNULL)))<>((0.13779310426904046))), v0.c2, ((HEX(DISTINCT v0.c0))>=((t0.c88 IN (t0.c88)))) HAVING CAST(v0.c1 COLLATE BINARY AS NUMERIC);SELECT COUNT(*) OVER () FROM t0, v0, vt84 WHERE (((((0.9681790569589954) ISNULL))<<((('') NOT BETWEEN (0.6927701397563584) AND ('1432434880'))))); -- 0ms;
SELECT DISTINCT CAST(v0.c0 AS TEXT), ((x'ba15') ISNULL), t0.c88 FROM t0 WHERE (UPPER(DISTINCT CASE WHEN 0.5747377340212273 THEN NULL END)) GROUP BY ((((vt84.c0)AND(t0.c88))) NOT BETWEEN ((v0.c2 IN ())) AND (((t0.c2) BETWEEN (t0.c1) AND (t0.c88)))) HAVING ((CASE WHEN x'' THEN NULL WHEN t0.c86 THEN t0.c86 WHEN t0.c1 THEN v0.c2 END) NOT BETWEEN (CASE t0.c2  WHEN '' THEN vt84.c0 END) AND (t0.c86 COLLATE NOCASE)) ORDER BY ((CAST(v0.c1 AS INTEGER)) ISNULL), (((t0.c88)) BETWEEN ((((t0.c2) BETWEEN (t0.c86) AND (t0.c86)))) AND (((~ (t0.c1))))) DESC  NULLS FIRST;SELECT DISTINCT (- ((((t0.c2))>=((v0.c1))))) FROM t0, vt84;SELECT DISTINCT x'', ((CAST(vt84.c0 AS BLOB))IS(((t0.c88)>>(t0.c86)))), (v0.c1 COLLATE NOCASE IN (x'')) FROM v0, vt84 ORDER BY ABS(DISTINCT CASE WHEN v0.c1 THEN t0.c88 WHEN t0.c1 THEN vt84.c0 WHEN v0.c2 THEN t0.c2 END)  NULLS FIRST;SELECT DISTINCT (((0x3486e734)IS NOT(t0.c2)) IN ()) FROM vt84, v0 WHERE (CAST(0.8733024443325742 COLLATE RTRIM AS INTEGER)) ORDER BY (NOT (NULL COLLATE RTRIM)) ASC; -- 0ms;
SELECT (((NOT (t0.c86)))<(t0.c86)), AVG((((t0.c88)) NOT BETWEEN ((t0.c86)) AND ((t0.c2)))), ((((((((t0.c1)OR(t0.c88)))OR(t0.c88)))AND(t0.c88)))OR(v0.c2)) COLLATE RTRIM FROM vt84, t0, v0 WHERE (((CAST(0.5664325400963153 AS TEXT)) BETWEEN ((((0.3455797615910561, NULL, NULL))<=((0.3777884253059606, 'W}c 0*d1', -773378443)))) AND ((('(bbd[2')LIKE(1.847483791E9))))); -- 0ms;
SELECT DISTINCT ROW_NUMBER() OVER () FROM t0, v0; -- 0ms;
SELECT ((v0.c1)<<(vt84.c0)) COLLATE RTRIM FROM t0 WHERE (((((((0.5487222175602019)GLOB(0.06547994642294719)))OR(((((-2.67336532E8)AND('-56952560')))AND(NULL)))))OR('-316352852')));SELECT DISTINCT (NOT (((t0.c86) BETWEEN (vt84.c0) AND (vt84.c0)))), CASE (v0.c1 IN ())  WHEN CAST(v0.c1 AS INTEGER) THEN vt84.c0 COLLATE BINARY ELSE ((v0.c0) NOTNULL) END, ((v0.c2)IS(v0.c2)) COLLATE NOCASE FROM vt84, v0, t0 WHERE (((((CASE WHEN 0.1411654567099916 THEN '' END)OR((- (0.06709854781177949)))))AND(((0.9375544865928391) BETWEEN (NULL) AND ('1099104760'))))); -- 1ms;
SELECT DISTINCT ((v0.c2) IS FALSE) COLLATE RTRIM FROM vt84, v0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT MAX(((v0.c0)>>(NULL))), json_array_length((((v0.c1))<=((t0.c86)))), CASE WHEN (t0.c1 IN ()) THEN CAST(vt84.c0 AS INTEGER) END, ((CAST(t0.c1 AS REAL)) NOTNULL), ((((((t0.c86) NOT BETWEEN (t0.c1) AND (t0.c88)))AND(((((t0.c1)OR(t0.c2)))AND(v0.c2)))))OR((('146OF') BETWEEN (t0.c88) AND (x'')))) FROM t0, v0, vt84; -- 0ms;
SELECT ALL LAG((((t0.c86)) NOT BETWEEN (((((t0.c88))==((t0.c1))))) AND ((((((t0.c88)OR(vt84.c0)))AND(x'6e82'))))), (((t0.c2) NOT BETWEEN (t0.c1) AND (t0.c1)) IN ()), t0.c1) OVER () FROM vt84 CROSS JOIN t0 ON ((((t0.c1) NOT BETWEEN (vt84.c0) AND (v0.c1)))=(CASE v0.c1  WHEN vt84.c0 THEN x'deab' END)) WHERE ((NOT ((('') BETWEEN ('1371894753') AND (NULL)))));SELECT ALL ((((vt84.c0, t0.c1, t0.c88))>=((NULL, vt84.c0, t0.c88))) IN ()) FROM v0 WHERE ((((('㕞Fh흲zt3') IS FALSE)) IS FALSE)); -- 0ms;
SELECT ALL (((t0.c86 IN ()))OR(t0.c88 COLLATE RTRIM)), t0.c2, ((CASE WHEN x'bb97b1e1' THEN t0.c88 END) IS FALSE) FROM t0 WHERE (((1096970385 COLLATE BINARY)IS NOT(x''))); -- 0ms;
SELECT ALL ((- (NULL)) IN (TRIM(t0.c88))) FROM t0 WHERE ((CASE WHEN NULL THEN '601588798' ELSE '' END IN ())); -- 0ms;
SELECT DISTINCT ((((((v0.c0)<(t0.c86)))AND(t0.c88 COLLATE NOCASE)))AND(t0.c1 COLLATE BINARY)) FROM t0 WHERE (((((x'')/(x'd13e')))-(((x'') NOT NULL))));SELECT ALL ((NULL) BETWEEN ((('힑qD%뻽#ut')==(t0.c2))) AND (MIN(v0.c0))), (((((((((((((v0.c1)OR(v0.c0)))AND(t0.c86)))AND(v0.c2)))AND(vt84.c0)))AND(v0.c1)))OR(t0.c1)) IN (((t0.c1) NOT BETWEEN (v0.c0) AND (v0.c2)))), CASE TRIM(DISTINCT t0.c88, vt84.c0)  WHEN ((v0.c0)/(v0.c0)) THEN 0.644846948820814 END FROM vt84, v0, t0; -- 0ms;
SELECT ((((v0.c0)GLOB(t0.c1)))IS(vt84.c0 COLLATE RTRIM)) FROM vt84, t0, v0; -- 0ms;
SELECT DISTINCT '' FROM t0, vt84 WHERE (ABS((NOT (x'')))); -- 0ms;
SELECT DISTINCT ((1013351123)-(CAST(t0.c86 AS NUMERIC))) FROM v0, vt84 WHERE (((((('ṽF!9 gR' IN ()))AND(((x'7337') NOTNULL))))OR(CASE WHEN -1.850788514E9 THEN NULL WHEN 0x6e2a1714 THEN NULL WHEN NULL THEN x'' END))) GROUP BY (((vt84.c0 IN (x''))) BETWEEN (((t0.c1) IS TRUE)) AND ((('uY')/(vt84.c0)))) HAVING CAST((t0.c86 IN (t0.c88, v0.c1)) AS TEXT);SELECT DISTINCT ((t0.c86) BETWEEN ((((v0.c2, NULL, t0.c86)) BETWEEN ((t0.c1, t0.c86, v0.c2)) AND ((t0.c86, t0.c88, t0.c86)))) AND (t0.c2 COLLATE BINARY)) FROM v0;SELECT v0.c1 COLLATE RTRIM FROM vt84 WHERE (((CASE WHEN x'' THEN '-1019698920' WHEN NULL THEN 0.7937647151229488 WHEN '-1862121823' THEN 0.9215099957304933 END)==(0Xffffffffe45ebdcb COLLATE BINARY))) LIMIT -730068531 OFFSET -1507602980;SELECT ALL ((((vt84.c0)%(v0.c0))) IS TRUE) FROM vt84, v0; -- 0ms;
SELECT DISTINCT ((t0.c88) NOTNULL) COLLATE RTRIM FROM vt84;SELECT ALL t0.c1 FROM v0, vt84, t0; -- 0ms;
SELECT ALL CAST(UNLIKELY(DISTINCT v0.c0) AS NUMERIC), (((v0.c1, t0.c2, v0.c0)) NOT BETWEEN ((((t0.c2)IS(v0.c2)), (v0.c2 IN ()), ((v0.c0)IS NOT(t0.c2)))) AND ((((v0.c0)|(t0.c1)), (t0.c86 IN (NULL)), ((t0.c88)<<(vt84.c0))))), CASE (((-2029168857))=((t0.c88)))  WHEN (NULL IN ()) THEN vt84.c0 COLLATE NOCASE ELSE CASE t0.c86  WHEN v0.c1 THEN v0.c2 END END FROM v0 ORDER BY 'Eo' COLLATE BINARY DESC;SELECT ALL (TRIM(DISTINCT v0.c1) IN ()), CASE WHEN CASE WHEN t0.c2 THEN v0.c2 WHEN t0.c2 THEN 0.06709854781177949 WHEN t0.c1 THEN t0.c1 END THEN ((v0.c2)AND(t0.c1)) ELSE CASE t0.c2  WHEN t0.c2 THEN t0.c1 WHEN vt84.c0 THEN vt84.c0 WHEN t0.c1 THEN t0.c88 WHEN t0.c1 THEN t0.c88 WHEN t0.c1 THEN v0.c1 END END, CASE CASE WHEN t0.c86 THEN vt84.c0 WHEN 'Cj' THEN v0.c1 WHEN t0.c1 THEN t0.c1 ELSE v0.c2 END  WHEN ((t0.c86)||(vt84.c0)) THEN NULL ELSE t0.c88 END FROM t0;SELECT DISTINCT CAST(((((vt84.c0)OR(t0.c1)))OR(t0.c86)) AS INTEGER) FROM v0, vt84;SELECT ALL t0.c88 FROM v0 WHERE (((((x'') NOT BETWEEN (0.2367148638243466) AND (x'')))/((('1088396559') NOT NULL)))) ORDER BY vt84.c0 ASC, (((((t0.c2 IN ()))OR(((t0.c88) BETWEEN (t0.c88) AND (t0.c1)))))OR((NOT (v0.c1)))) ASC, (((x'a9ce')) BETWEEN ((((t0.c88)IS NOT(-2139121730)))) AND ((((v0.c1)>=(vt84.c0))))) LIMIT 2017514259 OFFSET 658957915;SELECT SUM(((((((((t0.c88)AND(t0.c1)))AND(t0.c88)))AND(t0.c2)))OR(t0.c86))), (((((t0.c1))<((t0.c86)))) IS FALSE), ((((((NULL) IS FALSE))OR(((t0.c1) IS TRUE))))OR(((NULL) IS FALSE))) FROM vt84, t0 WHERE (((CASE 0.3455797615910561  WHEN NULL THEN '-1027076224' END)GLOB(x'' COLLATE NOCASE))) GROUP BY LIKELY(DISTINCT v0.c0 COLLATE BINARY), UNLIKELY(DISTINCT NULLIF(t0.c88, v0.c2)), CASE ((t0.c88) IS TRUE)  WHEN (((t0.c88)) BETWEEN ((v0.c1)) AND ((t0.c88))) THEN ((((t0.c2)AND(t0.c2)))OR(vt84.c0)) WHEN v0.c2 THEN (~ (t0.c88)) WHEN COALESCE(-2.029168857E9, vt84.c0) THEN ((((v0.c0)OR(t0.c2)))AND(vt84.c0)) END;SELECT DISTINCT (((((((v0.c2, v0.c1, t0.c1))!=((t0.c2, v0.c1, t0.c86))))OR(v0.c1 COLLATE BINARY)))OR(COALESCE(DISTINCT v0.c0, v0.c0))), vt84.c0, ((((t0.c86)<(vt84.c0))) IS TRUE) FROM v0;SELECT DISTINCT ((((((((CAST(t0.c88 AS BLOB))OR(TOTAL(t0.c1))))AND((- (vt84.c0)))))OR(x'' COLLATE BINARY)))OR(((v0.c0)*(t0.c2)))) FROM t0, vt84 NATURAL JOIN v0; -- 0ms;
SELECT ALL COUNT(*), (((t0.c86, v0.c0, vt84.c0, NULL, v0.c2)) BETWEEN (((+ (vt84.c0)), ((((x'e884')AND(t0.c2)))OR(t0.c1)), TRIM(DISTINCT 0.05244238892006314), CAST(t0.c88 AS BLOB), ((t0.c88) NOT NULL))) AND ((((vt84.c0) NOTNULL), CASE WHEN '힑qD%뻽#ut' THEN v0.c0 ELSE t0.c86 END, (((vt84.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2))), ((((v0.c1)AND(t0.c1)))OR(v0.c0)), (vt84.c0 IN ())))), (((t0.c88)%(v0.c0)) IN (((vt84.c0) BETWEEN (t0.c2) AND (t0.c86)), ((t0.c1)>>(vt84.c0)))) FROM v0, vt84, t0 LIMIT 0; -- 0ms;
SELECT DISTINCT SQLITE_COMPILEOPTION_GET(INSTR(v0.c0, NULL)) FROM t0, v0; -- 0ms;
SELECT ALL (NOT (((t0.c1)%(t0.c88)))), RANK() OVER (), ((((t0.c2) NOT BETWEEN (v0.c0) AND ('-402573697'))) NOT BETWEEN (v0.c2) AND (((vt84.c0)GLOB(v0.c1)))) FROM t0;SELECT 0Xffffffffdf7f1e4f FROM v0, vt84, t0 WHERE ((((('AR.w88!') NOT BETWEEN (0.525082330228673) AND (1167159240))) IS FALSE)) ORDER BY ((((((x'')OR(t0.c88)))AND(v0.c2))) ISNULL) ASC, (((NULL) BETWEEN (t0.c88) AND (vt84.c0)) IN ((t0.c1 IN ()))) DESC  NULLS LAST, ((((vt84.c0)>=('-56952560')))-(TRIM(v0.c1)))  NULLS FIRST; -- 0ms;
SELECT DISTINCT json_object(NULL, ((vt84.c0) NOT NULL), ((v0.c0)GLOB(v0.c0)), ((x'')<=(t0.c2))) FROM t0, vt84, v0; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(t0.c88), CAST(((t0.c2)||(t0.c2)) AS REAL), NULL COLLATE BINARY COLLATE BINARY FROM vt84;SELECT ALL 'W鄎bC{D(<' FROM t0, v0; -- 0ms;
SELECT DISTINCT ((COUNT(t0.c1)) IS TRUE) FROM v0, vt84;SELECT (((((v0.c2, t0.c86, t0.c2))!=((v0.c2, v0.c2, v0.c1)))) BETWEEN (((t0.c1)LIKE(v0.c0))) AND (CASE WHEN t0.c86 THEN t0.c88 END)) FROM v0 WHERE (((((((((CAST(0Xffffffffe3eee6a8 AS REAL))OR('-1141551088' COLLATE BINARY)))AND((((NULL, NULL, x'')) NOT BETWEEN ((0.2357565710774463, '*', NULL)) AND ((NULL, '-91297134', x''))))))AND((((('Bu.e')OR(x'')))AND(0x6a88d06f)))))AND(CASE 0.3196229839381699  WHEN 0.8073447955459055 THEN NULL END)));SELECT DISTINCT v0.c1 FROM vt84, t0;SELECT DISTINCT 0.7962868363227058, (t0.c1 IN ()) COLLATE BINARY, t0.c86 FROM v0 FULL OUTER JOIN t0 ON t0.c86 FULL OUTER JOIN vt84 ON CASE CAST(t0.c86 AS BLOB)  WHEN '0.9476583706762496' THEN ((v0.c0)IS(t0.c2)) END; -- 0ms;
SELECT DISTINCT v0.c1, GROUP_CONCAT((NOT (t0.c2))), ((CASE WHEN t0.c1 THEN t0.c86 WHEN NULL THEN '#PihC{' WHEN t0.c1 THEN v0.c2 END) BETWEEN ((x'0792' IN (v0.c2))) AND (ABS(vt84.c0))) FROM t0, vt84, v0 WHERE (CASE WHEN ((0.8326297586353552) IS FALSE) THEN '1099104760' COLLATE BINARY WHEN (1.81188006E9 IN ()) THEN (('qFẉꐍ&A')<('-432878097')) WHEN ((-1e500)<<(NULL)) THEN (('-246659239') NOT BETWEEN (NULL) AND (x'')) ELSE 267743827 END) GROUP BY CAST(((t0.c88)<=(v0.c1)) AS INTEGER); -- 1ms;
SELECT ALL v0.c0, LAST_VALUE(json_quote(vt84.c0)) OVER (), (((LAST_INSERT_ROWID()))<>((x'adef'))), ((v0.c0 COLLATE BINARY)|(((t0.c86)IS NOT(v0.c0)))), (- (x'')) FROM vt84 ORDER BY ((t0.c2)OR(CAST(v0.c0 AS TEXT)))  NULLS LAST, x'';SELECT ALL (((v0.c2, t0.c1, vt84.c0)) NOT BETWEEN ((((t0.c88) ISNULL), COALESCE(t0.c86, vt84.c0), TOTAL(v0.c1))) AND ((CAST(v0.c0 AS REAL), 0.4358894345594343, 0.03383684037275614))) FROM vt84, t0 GROUP BY ((((((((((((x'')OR(((((t0.c2)OR(v0.c0)))OR(t0.c2)))))AND((((t0.c2))<=((vt84.c0))))))OR(CAST(t0.c2 AS INTEGER))))OR(((((t0.c1)OR(v0.c0)))AND(0.09782131532081684)))))AND(((((v0.c2)AND(v0.c2)))OR(x'')))))OR(((NULL)+(v0.c0)))) HAVING DATE(t0.c88, vt84.c0, t0.c2) COLLATE RTRIM;SELECT ((((t0.c1)GLOB(t0.c86)))IS(MIN(t0.c1))), ((COUNT(*)) NOT BETWEEN (((v0.c2) IS FALSE)) AND (COUNT(*))), ((((vt84.c0)<=(t0.c1)))==((('-2081804785') IS TRUE))), CAST(CAST(t0.c2 AS REAL) AS BLOB), vt84.c0 FROM t0 GROUP BY ((((v0.c2) BETWEEN (-0.0) AND (v0.c2)))||(CASE v0.c1  WHEN t0.c88 THEN t0.c2 WHEN t0.c88 THEN v0.c1 WHEN t0.c2 THEN '-402573697' END)) HAVING (- (CAST(NULL AS REAL)));SELECT DISTINCT ((((vt84.c0)OR(0.825049185465839)))AND(x'')) COLLATE BINARY FROM v0, t0, vt84 WHERE ((- ((('\n\n1iV_q1P')||(NULL))))) ORDER BY ((((v0.c2)==(v0.c0)))>=(((v0.c0)OR(t0.c2))))  NULLS LAST; -- 0ms;
SELECT DISTINCT x'' FROM t0, v0; -- 1ms;
SELECT ALL ((((((((((((((t0.c1)!=(v0.c1)))AND((+ (t0.c86)))))OR((-223257418 IN (t0.c88)))))AND(((t0.c88) IS FALSE))))OR(((((v0.c1)AND(t0.c1)))OR(t0.c2)))))OR(t0.c1)))OR(((((t0.c86)OR(t0.c86)))OR(t0.c86)))) FROM t0, v0, vt84 WHERE ((((('OGtYy!4') NOT BETWEEN ('#R') AND (NULL))) IS FALSE)); -- 0ms;
SELECT DISTINCT CASE (vt84.c0 IN ())  WHEN ((t0.c2) NOT BETWEEN (t0.c1) AND (v0.c1)) THEN (~ (v0.c1)) ELSE (~ (vt84.c0)) END FROM vt84 WHERE (((((((x'') ISNULL))OR((('957263517')IS NOT(0.3427116546269219)))))AND(((x'') IS TRUE)))) GROUP BY (('1580189285') NOT BETWEEN (t0.c88) AND (NULL)) COLLATE BINARY HAVING ((NULLIF(DISTINCT v0.c0, t0.c1)) NOT NULL);SELECT ((t0.c86)OR(t0.c88)) COLLATE RTRIM FROM t0 WHERE ((NOT ((('') IS TRUE)))); -- 0ms;
SELECT MAX(ABS(v0.c0)), (((+ ('0.8913942071215084'))) NOT BETWEEN (((t0.c2) ISNULL)) AND (CAST(v0.c0 AS NUMERIC))), (v0.c2 COLLATE NOCASE IN ()) FROM vt84, v0 WHERE (CAST('' COLLATE RTRIM AS TEXT));SELECT ALL (~ ('')) FROM vt84, v0, t0 WHERE ((((CAST(x'' AS TEXT), CAST('' AS NUMERIC), 'pYR' COLLATE BINARY))<((0.30821633389773884, x'', (('') IS TRUE))))); -- 1ms;
SELECT ((((0.14907802824958793)IS(v0.c1))) BETWEEN (v0.c2) AND (v0.c1)) FROM v0, t0; -- 3ms;
SELECT (json_valid(t0.c1) IN ()) FROM v0, vt84; -- 0ms;
SELECT DISTINCT -1053026106 FROM v0, vt84; -- 0ms;
SELECT DISTINCT vt84.c0 FROM vt84 WHERE (CASE (- (NULL))  WHEN (x'' IN ('3k')) THEN ((0X51fdf43e) NOTNULL) END); -- 0ms;
SELECT ALL UPPER(-2105965941), ((GROUP_CONCAT(v0.c2))-(((t0.c2)IS(t0.c1)))), (+ (MIN(t0.c88))) FROM vt84, t0, v0; -- 0ms;
SELECT x'', vt84.c0, ((CASE v0.c2  WHEN t0.c86 THEN t0.c86 ELSE t0.c86 END)%(json_quote(vt84.c0))) FROM vt84, t0, v0 WHERE (((CASE WHEN x'' THEN NULL END)IS(CASE 0.8916749243938802  WHEN x'bf31' THEN 1861764496 END))); -- 0ms;
SELECT ALL CASE CASE WHEN '740069646' THEN t0.c86 ELSE v0.c1 END  WHEN ((((v0.c1)AND(NULL)))OR(v0.c0)) THEN 'f⪒Z*xKs稐' COLLATE BINARY WHEN ((((vt84.c0)AND(v0.c0)))OR(v0.c0)) THEN ((t0.c2) NOT NULL) WHEN v0.c0 THEN ((t0.c2)<(v0.c1)) END FROM vt84;SELECT ALL ((((((((((t0.c1)OR(v0.c0)))AND(v0.c1)))OR(t0.c86)))AND(v0.c0)))=(((t0.c86) BETWEEN (t0.c2) AND (t0.c1)))) FROM t0, vt84, v0 WHERE (((((((((((NULL) NOT NULL))OR(('-617948825' IN ()))))OR(((x'')/(NULL)))))OR(CASE '-994474320'  WHEN '}c' THEN NULL WHEN x'' THEN -6.57175788E8 WHEN x'' THEN x'' ELSE 'B' END)))AND(CAST('1513001489' AS NUMERIC)))); -- 0ms;
SELECT ((((((v0.c1) NOT BETWEEN (t0.c86) AND (t0.c88)))OR(((v0.c1) NOT NULL))))OR(t0.c1 COLLATE RTRIM)) FROM vt84, v0;SELECT ((((v0.c1)<(vt84.c0))) NOT NULL), ((vt84.c0) BETWEEN (t0.c2) AND (vt84.c0)) COLLATE BINARY, ((((t0.c86)LIKE(t0.c1))) NOT BETWEEN (v0.c0 COLLATE NOCASE) AND (v0.c0)) FROM vt84, t0 WHERE (((- (0Xffffffffd0f88eb2)) IN ())) ORDER BY TRIM(DISTINCT x'') LIMIT -119508195;SELECT ALL v0.c1 FROM vt84, v0, t0 LIMIT -841619809; -- 0ms;
SELECT DISTINCT NULL FROM v0, vt84; -- 0ms;
SELECT DISTINCT GROUP_CONCAT(MAX(((t0.c86)LIKE(v0.c0)))) FROM t0, v0, vt84 WHERE (((((x'') NOT BETWEEN (NULL) AND (NULL)))-((('1013351123')IS('-432878097'))))) GROUP BY CAST(v0.c1 AS REAL), CAST(vt84.c0 COLLATE BINARY AS REAL), ((((((v0.c0) BETWEEN (t0.c86) AND (t0.c88)))AND((((t0.c1))>((t0.c88))))))OR(((0.758813351876814)OR(v0.c2)))) HAVING ((((((v0.c1)AND(v0.c1)))OR(v0.c1))) IS TRUE);SELECT DISTINCT ((((((t0.c86) NOTNULL))AND(CAST('204531107' AS TEXT))))OR(GROUP_CONCAT(t0.c1))), (((((((v0.c2))==((t0.c86))))AND(((((t0.c2)OR(t0.c88)))AND('1848252180')))))AND(((t0.c1) BETWEEN (t0.c2) AND (t0.c1)))), ((((t0.c1)) NOT BETWEEN ((t0.c88)) AND ((t0.c1))) IN ()), ((((v0.c0)|(vt84.c0))) BETWEEN (HEX(NULL)) AND (vt84.c0 COLLATE BINARY)), ((((((((((((((vt84.c0)OR(t0.c2)))AND(vt84.c0)))OR(t0.c1)))AND(t0.c88)))AND(t0.c1)))AND(t0.c86))) NOTNULL) FROM v0 INDEXED BY i85 WHERE (((NULL)>('857123973')));SELECT DISTINCT t0.c88 FROM v0, t0, vt84; -- 0ms;
SELECT ((CASE t0.c2  WHEN t0.c2 THEN t0.c2 WHEN v0.c1 THEN vt84.c0 WHEN t0.c88 THEN v0.c0 ELSE v0.c1 END) BETWEEN ((((t0.c1)) BETWEEN ((t0.c1)) AND ((v0.c1)))) AND (AVG(t0.c86))) FROM t0, v0, vt84 WHERE (CAST(CASE WHEN NULL THEN NULL ELSE 1871919168 END AS INTEGER)); -- 0ms;
SELECT ALL (((((t0.c86, t0.c2, t0.c1, t0.c88, vt84.c0))==((t0.c2, t0.c2, t0.c1, v0.c0, '-412306795'))))AND(t0.c1)) FROM t0, vt84, v0; -- 1ms;
SELECT ALL ((((vt84.c0) NOT NULL)) BETWEEN (COUNT(*)) AND (COUNT(*))) FROM t0 WHERE (((CAST('-1064097645' AS INTEGER))>=(((420431677)==('}c')))));SELECT DISTINCT CAST(((t0.c2)>(t0.c2)) AS REAL) FROM vt84, v0, t0 WHERE (x''); -- 0ms;
SELECT DISTINCT HEX(DISTINCT CASE WHEN v0.c0 THEN t0.c86 END) FROM t0 WHERE (CAST((+ (1858816007)) AS NUMERIC));SELECT ALL ((TOTAL(t0.c88)) NOT BETWEEN (CAST(t0.c2 AS REAL)) AND (GROUP_CONCAT(v0.c0))), 0.14123437233449887, ((((t0.c2)+(v0.c2)))<(CASE t0.c86  WHEN v0.c2 THEN t0.c88 ELSE t0.c86 END)) FROM v0, vt84, t0 WHERE (((((0.9413996172165467 COLLATE BINARY)AND(((((1768931286)AND(NULL)))AND(0.9600116063709745)))))AND(((-2.029168857E9)IS(NULL))))); -- 0ms;
SELECT ALL ((((v0.c1) BETWEEN (t0.c86) AND (v0.c2)))AND(COALESCE(t0.c86, v0.c2, t0.c88, v0.c2))) FROM v0, vt84;SELECT DISTINCT x'', ((((t0.c2)<(t0.c86)))>>(((v0.c0)>>(t0.c1)))), ((0.9570055702473977) IS FALSE) FROM t0, vt84;SELECT ALL t0.c86, t0.c88, SUM(((t0.c88)LIKE('-2139121730'))) OVER () FROM v0, t0, vt84 WHERE (((IFNULL('-555253359', 0.034629529390059144))/((('-2081804785') BETWEEN (x'') AND (0.5487222175602019))))); -- 0ms;
SELECT ALL '' FROM v0, vt84 WHERE (CAST((('0.896110859871311') NOT BETWEEN (NULL) AND (0X47ad3af4)) AS INTEGER)); -- 0ms;
SELECT ((((v0.c0 IN (v0.c0))))!=((load_extension(v0.c2)))) FROM vt84, v0; -- 0ms;
SELECT DISTINCT CAST(CASE v0.c1  WHEN t0.c86 THEN t0.c88 END AS REAL) FROM v0, vt84, t0 WHERE (CAST('1414182087' AS TEXT) COLLATE BINARY) ORDER BY ((t0.c88)|(t0.c86)) COLLATE NOCASE DESC; -- 0ms;
SELECT ALL (((((t0.c88)GLOB(t0.c88))))<=((((x'')>=(x''))))) FROM t0, vt84, v0 GROUP BY ((v0.c0) NOTNULL) HAVING (((t0.c88, v0.c1, t0.c2)) NOT BETWEEN ((v0.c2, (~ (v0.c2)), x'')) AND ((CAST(t0.c2 AS INTEGER), ((((vt84.c0)AND(vt84.c0)))OR(t0.c1)), CAST(v0.c1 AS REAL)))); -- 0ms;
SELECT ALL ((v0.c0 COLLATE BINARY) BETWEEN (COUNT(*)) AND (0.4212085490025935)) FROM t0, vt84 WHERE (MAX(TRIM('-1681867011', '-1943102162'), (x'' IN ()))) GROUP BY CAST(t0.c86 AS INTEGER);SELECT DISTINCT CAST(((t0.c88)*(v0.c0)) AS TEXT) FROM v0 ORDER BY ((((v0.c2) IS TRUE))-(((t0.c2) ISNULL))) DESC LIMIT 529261067 OFFSET -1730637781;SELECT ALL ((NULL) NOT BETWEEN ((+ (t0.c86))) AND (vt84.c0)) FROM v0, vt84, t0; -- 0ms;
SELECT DISTINCT AVG(MAX(t0.c1, t0.c86)), CASE WHEN ((((vt84.c0)OR(vt84.c0)))AND(t0.c86)) THEN ((t0.c88) NOT BETWEEN (t0.c86) AND (t0.c86)) WHEN ((t0.c2) BETWEEN (t0.c1) AND (-1730637781)) THEN t0.c1 COLLATE NOCASE WHEN UPPER(v0.c2) THEN GLOB(t0.c86, vt84.c0) ELSE CAST(v0.c0 AS NUMERIC) END, ((((((t0.c86)OR(v0.c1)))AND(t0.c2)))AND(CAST(v0.c0 AS INTEGER))) FROM vt84, t0 WHERE (CAST(((276545925) ISNULL) AS BLOB)) ORDER BY IFNULL((((t0.c88)) NOT BETWEEN ((t0.c1)) AND ((vt84.c0))), ((t0.c1) NOTNULL)) ASC, (((t0.c1)) NOT BETWEEN ((t0.c88)) AND ((t0.c2))) COLLATE NOCASE  NULLS FIRST LIMIT -724236880 OFFSET 1897840062;SELECT DISTINCT (('1001221356') NOT BETWEEN ((((v0.c2, 0.049150615498169015, t0.c88, v0.c2, t0.c1)) NOT BETWEEN ((t0.c1, t0.c1, t0.c86, t0.c1, t0.c1)) AND ((v0.c0, v0.c1, vt84.c0, v0.c0, t0.c88)))) AND ((+ (t0.c2)))) FROM vt84, v0 WHERE ((highlight(x'', 1.261328902E9, x'', x'') IN ()));SELECT ALL (((t0.c1 IN ())) NOTNULL) FROM t0, vt84 GROUP BY ((vt84.c0) BETWEEN (t0.c86) AND (v0.c0)) COLLATE RTRIM;SELECT DISTINCT IFNULL(DISTINCT (((t0.c1, t0.c88, t0.c88))<=((t0.c2, t0.c1, vt84.c0))), t0.c1 COLLATE NOCASE), RANK() OVER (), SUM(json_type(t0.c2)) FROM vt84 WHERE (CAST('#r' AS BLOB) COLLATE NOCASE);SELECT ALL (((v0.c2 IN (t0.c2, v0.c1)))>(CAST(t0.c88 AS NUMERIC))), ((TYPEOF(DISTINCT v0.c0))<<(0.5900056294010699)), ((t0.c88)OR(((v0.c2)+(t0.c1)))) FROM t0 WHERE (((((((((x'')AND('0.9413996172165467')))AND(x'b65614f1')))AND(CASE NULL  WHEN NULL THEN 0.5822622941321766 ELSE '1533845251' END)))AND(((('1245082562', x'', '')) BETWEEN ((NULL, x'e27f', x'')) AND ((0x4b2e5a06, NULL, 'd\'))))));SELECT ALL ((SUM(t0.c88)) NOT NULL), (((t0.c88)-('0.896110859871311')) IN ()), (~ (254900572)) FROM v0, t0, vt84 WHERE (((((((((((x'73cc')AND(x'')))AND(1.84825218E9)))OR(x'c59ac345')))OR(0Xffffffffe3eee6a8)))-((((0.8096658978688824)) BETWEEN (('-733850704')) AND (('-974672311')))))); -- 0ms;
SELECT GROUP_CONCAT(((t0.c86)<(vt84.c0))) FROM v0, t0 GROUP BY (((NULL IN ()))LIKE(((((t0.c88)AND(t0.c1)))OR(v0.c2)))) HAVING SUM(((v0.c1)<<(t0.c88))) ORDER BY ((v0.c2) NOT BETWEEN (((t0.c1) IS FALSE)) AND (0.6578160286378405));SELECT ALL ((highlight(t0.c2, -1121037155, t0.c1, v0.c0))<=((- (0.6456538200612906)))) FROM t0, vt84 WHERE (((('wH' IN (NULL)))IS NOT(CAST(-388848834 AS TEXT))));SELECT LAST_VALUE(LOWER(NULLIF(DISTINCT v0.c2, t0.c86))) OVER (), CAST(((('-783616892')) NOT BETWEEN ((vt84.c0)) AND ((v0.c1))) AS NUMERIC), (+ (COALESCE(DISTINCT v0.c1, t0.c2, v0.c0, v0.c2))) FROM v0, t0 WHERE (CAST(((((0Xfffffffff010c4ac)OR(NULL)))AND('1798122579')) AS NUMERIC));SELECT v0.c2 FROM vt84, v0, t0 WHERE (CAST(((((0x28996b1b)OR(0.5603869796789307)))AND(NULL)) AS INTEGER)) LIMIT 127749338 OFFSET -180669296; -- 0ms;
SELECT DISTINCT (((0.6729432229325919 IN ()))-((((t0.c88)) NOT BETWEEN ((v0.c2)) AND ((vt84.c0))))) FROM vt84, v0 LIMIT -1571019231;SELECT DISTINCT (('7xRn&#X')+(((t0.c1)<(v0.c2)))), ((((((((COUNT(NULL))OR(((v0.c2)LIKE(t0.c88)))))OR(CASE WHEN v0.c2 THEN x'' END)))AND((v0.c0 IN (t0.c2)))))OR(TOTAL(v0.c2))), v0.c2 FROM t0, v0 LIMIT -1324800186 OFFSET 211136963; -- 0ms;
SELECT ALL MAX(CAST(t0.c2 AS REAL)) FROM t0, v0 NATURAL JOIN vt84; -- 0ms;
SELECT x'4994' FROM v0, t0 WHERE (((CASE '1769668544'  WHEN x'8d51' THEN x'' WHEN -463553077 THEN 'n炑' WHEN 0.7412904890680276 THEN '' END) NOT BETWEEN (UNLIKELY(DISTINCT '1772445816')) AND (((x'e98d') IS TRUE)))); -- 0ms;
SELECT DISTINCT ((((SUBSTR(vt84.c0, v0.c2))AND((- (t0.c86)))))AND(CAST(vt84.c0 AS REAL))) FROM vt84, t0 WHERE (CAST(((('^,7,-}', x'', 'B'))<((x'', x'', 0x5ce16107))) AS TEXT));SELECT (~ (CASE x''  WHEN t0.c2 THEN t0.c1 WHEN '1375597630' THEN t0.c1 WHEN t0.c1 THEN v0.c2 END)), CASE WHEN ((v0.c0) BETWEEN (v0.c2) AND (v0.c0)) THEN json_array_length(v0.c0, v0.c1) ELSE ((((t0.c2)OR(t0.c86)))AND(0.9681790569589954)) END, (NOT (CAST(t0.c1 AS REAL))) FROM vt84, t0;SELECT DISTINCT CUME_DIST() OVER () FROM v0 WHERE ((- (((NULL) NOT BETWEEN ('-729636932') AND ('-1189356905'))))) GROUP BY ((UPPER(DISTINCT v0.c0)) NOT BETWEEN (((((((((t0.c1)OR(t0.c86)))OR(v0.c0)))OR(v0.c0)))AND(t0.c1))) AND (((v0.c0) NOT NULL))) LIMIT 9223372036854775807;SELECT (~ (t0.c1 COLLATE BINARY)) FROM v0, vt84 ORDER BY NULLIF((~ (t0.c88)), CAST(t0.c2 AS BLOB))  NULLS LAST;SELECT CASE CASE WHEN v0.c0 THEN vt84.c0 END  WHEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 WHEN t0.c2 THEN t0.c86 WHEN t0.c88 THEN v0.c1 END THEN ((x'')>(v0.c2)) WHEN ((v0.c1) NOT BETWEEN (t0.c88) AND ('-1375175660')) THEN ((t0.c88)%(vt84.c0)) WHEN ((v0.c1) ISNULL) THEN CAST(vt84.c0 AS REAL) END, (t0.c1 COLLATE NOCASE IN ()), v0.c1 FROM v0 WHERE (CAST(CAST('0.06709854781177949' AS BLOB) AS TEXT));SELECT v0.c0 FROM vt84, v0, t0; -- 0ms;
SELECT MIN(TOTAL(x'7968')) FROM v0 LIMIT 623044980 OFFSET 445397774;SELECT ALL ((CHAR(NULL, t0.c2, v0.c2, 168566403, t0.c2))<=(TRIM(t0.c2, v0.c1))) FROM vt84, t0, v0; -- 0ms;
SELECT DISTINCT ((((json_type(v0.c1))OR(NULL)))AND(((v0.c1) BETWEEN (x'740a') AND (t0.c2)))) FROM vt84, t0 WHERE (((((NULL)IS NOT(x'6b6a'))) IS FALSE));SELECT DISTINCT t0.c88 FROM v0 WHERE ('-56952560');SELECT DISTINCT ((((v0.c0)*(t0.c86)))%(COALESCE(v0.c2, v0.c2))) FROM v0, t0, vt84; -- 0ms;
SELECT DISTINCT ((x'') BETWEEN (CASE v0.c2  WHEN t0.c86 THEN t0.c1 WHEN v0.c2 THEN t0.c88 WHEN v0.c0 THEN vt84.c0 END) AND ((((t0.c88))!=((t0.c88))))) FROM vt84;SELECT DISTINCT (((((((((vt84.c0)AND(v0.c1)))AND(t0.c1)))AND(v0.c2)))AND(vt84.c0)) IN ()), DENSE_RANK() OVER (), ((((((v0.c0)==(t0.c2)))OR(((t0.c88) NOTNULL))))AND(t0.c86)) FROM t0, v0, vt84 WHERE (CAST((~ ('')) AS BLOB)); -- 0ms;
SELECT DISTINCT (v0.c0 IN ()) FROM v0 WHERE (CAST((((('|6')OR('-2081804785')))AND('F4p励')) AS REAL)); -- 0ms;
SELECT ALL ((((((v0.c0, NULL, t0.c86, t0.c88, v0.c1))>=((t0.c86, v0.c2, t0.c86, t0.c86, t0.c88)))))>(((((v0.c0)) BETWEEN ((t0.c86)) AND ((t0.c86)))))) FROM vt84, v0 WHERE (COALESCE(CASE '216501246'  WHEN 0.4850294702662292 THEN x'' END, CAST(0.5359452394124887 AS NUMERIC)));SELECT ALL ((((((t0.c88)AND(0xffffffffd0df6a4f)))OR(vt84.c0))) NOT BETWEEN (((t0.c88)IS(v0.c0))) AND ((t0.c2 IN (t0.c86)))) FROM vt84, v0, t0 WHERE ((((NULL IN ())) IS FALSE)) LIMIT -1159485190 OFFSET -1027076224; -- 0ms;
SELECT DISTINCT ((v0.c2 COLLATE RTRIM)||(MIN('-1400500951'))) FROM v0, t0 WHERE (((((((((CASE 1818467259  WHEN -1541391709 THEN '>DR	MRQ㫴N' WHEN '2140283201' THEN 0x697affc0 WHEN NULL THEN 0.7159170325911979 ELSE -7.30068531E8 END)OR(x'1fd3' COLLATE NOCASE)))OR(NULL)))AND(((0.8731186736749087) IS TRUE))))OR((NOT (0.7853274752673024))))); -- 0ms;
SELECT ALL ((((((((((((((x'')OR(v0.c0)))AND(vt84.c0)))OR(v0.c2)))OR(CASE WHEN -1.01969892E9 THEN v0.c0 ELSE v0.c1 END)))AND(CASE WHEN v0.c2 THEN v0.c1 END)))AND(vt84.c0 COLLATE BINARY)))AND(((v0.c0) ISNULL))) FROM vt84, t0 WHERE (((((((NULL))>((0.692228435670929)))))>=((((0.6453658310613127)<=(''))))));SELECT DISTINCT t0.c88 FROM v0, vt84;SELECT ALL COUNT(((((((((v0.c2)AND(t0.c1)))OR(t0.c2)))AND(v0.c1)))AND(t0.c1))) OVER ( ORDER BY (((t0.c2 IN ()))*((v0.c2 IN ()))) ASC  NULLS LAST), (- ((((t0.c86))<=((v0.c0))))), (((((v0.c1)OR(t0.c86))))>=((((vt84.c0) NOTNULL)))) FROM vt84 WHERE (UNLIKELY((((0.3059656716421587)) NOT BETWEEN ((0.2357565710774463)) AND ((0.13779310426904046)))));SELECT DISTINCT t0.c88 FROM t0, v0; -- 1ms;
SELECT GROUP_CONCAT(MIN(t0.c1 COLLATE NOCASE)) FROM v0 INDEXED BY i60, vt84 WHERE (((((x''))>(('p1#gl}'))) IN ())) ORDER BY (v0.c2 IN ())  NULLS LAST;SELECT ((((v0.c1) BETWEEN (v0.c2) AND (v0.c0)))IS NOT(((t0.c88)<>(t0.c2)))) FROM vt84, t0, v0 WHERE (CAST(CAST('' AS BLOB) AS REAL)); -- 0ms;
SELECT ALL CAST((t0.c86 IN ()) AS TEXT) FROM t0, v0 UNION ALL SELECT DISTINCT CHAR(v0.c0) FROM v0, t0 NOT INDEXED WHERE (((('Z{' IN ())) NOT BETWEEN (CASE x''  WHEN 1946845772 THEN NULL WHEN 'Q,' THEN x'd648' WHEN ' G&aU	' THEN x'' ELSE 'jlmPpL*Ș7' END) AND (((((((((x'')AND(x'')))AND(NULL)))AND(0Xffffffffe15d851c)))OR('-988097138'))))); -- 0ms;
SELECT DISTINCT ((((x'')&(vt84.c0)))+(CAST(t0.c88 AS REAL))), CASE ((((t0.c2)AND(t0.c86)))AND(t0.c2))  WHEN ((0X1394ea55)>(vt84.c0)) THEN t0.c1 COLLATE RTRIM END, COUNT(*) FROM v0, t0;SELECT CAST(((v0.c2)<(t0.c1)) AS TEXT) FROM vt84 WHERE (((('1808020021')) NOT BETWEEN ((((NULL)/(NULL)))) AND ((((x'') IS FALSE))))) GROUP BY CASE ((t0.c2) IS TRUE)  WHEN ((((t0.c1)OR(t0.c2)))OR(2010691449)) THEN (((x'', v0.c2, vt84.c0))==((vt84.c0, t0.c86, t0.c2))) END, (NOT (LENGTH(v0.c2))), (((v0.c0)) NOT BETWEEN ((t0.c88 COLLATE BINARY)) AND ((TOTAL_CHANGES())));SELECT ALL CASE WHEN '' THEN TOTAL('years') END FROM v0, vt84, t0 WHERE (((881256244)+((+ (x''))))); -- 0ms;
SELECT DISTINCT LAG((+ (CASE t0.c1  WHEN t0.c88 THEN 0.6014778295256178 WHEN '1587983445' THEN t0.c86 WHEN v0.c1 THEN t0.c1 WHEN t0.c86 THEN v0.c1 WHEN '' THEN v0.c2 END)), CAST(NULL AS REAL), (- (((((v0.c0)OR(v0.c1)))AND(v0.c2))))) OVER () FROM t0, v0 WHERE (CASE WHEN CASE WHEN NULL THEN NULL END THEN (((x''))<>((0.5990719416060557))) ELSE ((NULL) ISNULL) END); -- 0ms;
SELECT DISTINCT ((CASE v0.c0  WHEN v0.c2 THEN t0.c1 ELSE v0.c2 END)>(1076124728)), t0.c88, UNLIKELY((((v0.c0, t0.c88, t0.c2))=((t0.c1, t0.c86, v0.c2)))), ((((t0.c1)AND(v0.c0)))AND(t0.c88)) COLLATE RTRIM, (((((t0.c88)) BETWEEN ((v0.c2)) AND ((v0.c2)))) NOT BETWEEN (t0.c1 COLLATE NOCASE) AND (t0.c1 COLLATE BINARY)) FROM v0 WHERE ((((1967996817)+(0.8096658978688824)) IN ()));SELECT ALL NTH_VALUE(t0.c88, ((((((((((((882223549)AND(t0.c88)))AND(t0.c86)))OR(CASE WHEN t0.c86 THEN t0.c2 WHEN t0.c2 THEN 0.19594430222441983 WHEN t0.c1 THEN t0.c1 WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c88 END)))AND(CAST(t0.c86 AS INTEGER))))AND(((t0.c86)+(t0.c1)))))AND((((t0.c86))<((t0.c88)))))) OVER () FROM t0 WHERE (((('-33727414', '-1349263118', '-392820142')) BETWEEN (((NULL IN ()), CASE WHEN '1989726913' THEN 0.2647879718672499 END, (((NULL))<((x''))))) AND ((CAST(x'' AS TEXT), (- (0X7f07e236)), CAST(x'' AS REAL))))) GROUP BY CASE WHEN t0.c86 THEN CASE WHEN x'' THEN t0.c1 ELSE t0.c88 END END, UNLIKELY(DISTINCT v0.c0) COLLATE NOCASE, COALESCE(vt84.c0, t0.c1, v0.c1, vt84.c0, v0.c0, vt84.c0) COLLATE NOCASE;SELECT DISTINCT CAST(((t0.c1) BETWEEN (t0.c1) AND (t0.c88)) AS TEXT) FROM v0, vt84, t0 ORDER BY (((NOT (v0.c0))) NOT NULL)  NULLS LAST, (((((v0.c1))<>((t0.c86))))IS NOT(((((((((0.2357565710774463)OR(t0.c86)))AND(v0.c1)))OR(vt84.c0)))AND(v0.c1)))) ASC; -- 0ms;
SELECT DISTINCT NULL FROM v0 NATURAL JOIN t0; -- 0ms;
SELECT ((((v0.c1)OR(v0.c0)))<=(((t0.c2)%(v0.c1)))) FROM vt84, v0, t0; -- 0ms;
SELECT ALL ((CAST(vt84.c0 AS BLOB))*(1.81188006E9)) FROM vt84, t0; -- 0ms;
SELECT DISTINCT ((t0.c1) NOTNULL) COLLATE BINARY, CAST(CASE WHEN t0.c1 THEN v0.c2 END AS BLOB), (((t0.c2)) NOT BETWEEN ((t0.c1)) AND ((v0.c2))) COLLATE NOCASE FROM v0;SELECT ALL (- ((+ (t0.c88)))) FROM vt84, v0, t0 WHERE (COALESCE(LOWER(''), (~ (0.08827615835973579)))); -- 0ms;
SELECT DISTINCT ((SUM(t0.c86))<=(CAST(vt84.c0 AS NUMERIC))) FROM t0, v0, vt84; -- 0ms;
SELECT GROUP_CONCAT((- (t0.c1))) FROM v0, vt84;SELECT NTILE((~ (((((((((t0.c86)AND(x'')))OR(v0.c0)))OR(v0.c0)))OR(t0.c1))))) OVER ( GROUPS ((CASE WHEN v0.c0 THEN t0.c1 WHEN v0.c0 THEN v0.c2 WHEN t0.c2 THEN t0.c1 END)AND(CAST(v0.c1 AS REAL))) PRECEDING EXCLUDE NO OTHERS), ((t0.c1) NOT NULL), TRIM(COUNT(*)) FROM t0, vt84, v0;SELECT ((CASE vt84.c0  WHEN t0.c2 THEN v0.c2 ELSE t0.c2 END) BETWEEN (0x3bc1d027) AND (((vt84.c0)%(v0.c2)))) FROM v0;SELECT DISTINCT CASE json(t0.c88)  WHEN ((t0.c2)GLOB('-1053026106')) THEN ((t0.c2)||(t0.c88)) END FROM v0, vt84, t0 WHERE (((((474916046)||(x''))) IS FALSE)); -- 0ms;
SELECT ALL ((((((((x'')AND(SQLITE_SOURCE_ID())))AND(((t0.c86)GLOB(v0.c0)))))AND(v0.c0)))AND((t0.c2 IN (t0.c2)))) FROM vt84, v0 LIMIT -1034063820;SELECT DISTINCT t0.c88 FROM t0, v0; -- 0ms;
SELECT ALL t0.c2, (((t0.c86 IN (t0.c88)))<(x'd955')), ((((('', t0.c86, v0.c0, v0.c2, v0.c2))<((v0.c1, v0.c2, v0.c1, t0.c2, t0.c2))))<>(MAX(t0.c88))), ((((v0.c2)|('Q')))IS(((((t0.c86)AND(t0.c86)))OR(v0.c2)))), CASE WHEN LOWER(DISTINCT t0.c86) THEN ((v0.c0) ISNULL) END FROM t0 ORDER BY 0.15193372863632237 DESC  NULLS LAST LIMIT -753176487 OFFSET -347119765;SELECT ABS(DISTINCT IFNULL(v0.c1, t0.c2)) FROM t0, vt84;SELECT DISTINCT (((ABS(DISTINCT v0.c1)))<>(((vt84.c0 IN ())))) FROM vt84, v0, t0 ORDER BY DATETIME(((vt84.c0)IS(v0.c2)), ((t0.c88) IS TRUE), t0.c1 COLLATE NOCASE, ((v0.c2)||(t0.c2)), ((t0.c2) NOTNULL)) ASC  NULLS FIRST; -- 1ms;
SELECT DISTINCT x'', CAST(json_insert(v0.c2, t0.c2, t0.c86, t0.c88, t0.c86) AS BLOB), (((((t0.c88) NOT BETWEEN (t0.c2) AND (v0.c2))))<=(((((t0.c88)) BETWEEN ((v0.c2)) AND ((v0.c2)))))) FROM v0;SELECT '' FROM vt84, t0, v0 NOT INDEXED; -- 0ms;
SELECT CASE ((vt84.c0) NOT BETWEEN (t0.c86) AND (t0.c1))  WHEN ((t0.c2)GLOB(t0.c86)) THEN (t0.c88 IN (0.5931667832639866)) ELSE ((vt84.c0)*(t0.c1)) END, CAST(((t0.c2)/(t0.c1)) AS TEXT), PRINTF(t0.c88) FROM vt84;SELECT ALL CHANGES() FROM vt84, t0, v0; -- 4ms;
SELECT DISTINCT (- ((((t0.c1)) BETWEEN ((t0.c86)) AND ((t0.c86))))) FROM v0, t0, vt84 WHERE (((((((((((x'')||(x'')))OR(NULL)))OR((((0.8245660838122542)) NOT BETWEEN ((0.7446496173449898)) AND (('XLH+4'))))))AND((((('')AND(x'00c3')))OR('e8IFsQ_붾')))))OR((NOT ('H!kKq|_'))))); -- 1ms;
SELECT ALL (+ ((v0.c0 IN ()))) FROM vt84 WHERE (((CASE 0.06050177753223174  WHEN '1686424910' THEN x'' WHEN 0.7373902414331194 THEN '-1787884700' WHEN 0x273fe9d2 THEN NULL END)IS NOT(((0.21520225294579742) IS FALSE)))) GROUP BY CAST((t0.c86 IN ()) AS NUMERIC), vt84.c0, ((t0.c1 IN ()) IN ((vt84.c0 IN ()))) HAVING ((t0.c2 IN ()) IN ()); -- 0ms;
SELECT ALL ((SUM(t0.c1))<<((- (t0.c1)))), ((v0.c0) IS FALSE) COLLATE BINARY, MIN(SUM(((t0.c2) IS TRUE))) FROM vt84 WHERE (((-2123182118 COLLATE NOCASE) BETWEEN (LIKELY(DISTINCT '1606484160')) AND ((+ (x'')))));SELECT DISTINCT x'', ((((t0.c86)||(vt84.c0))) NOTNULL), AVG(((((t0.c2)OR(t0.c88)))AND(t0.c86))) OVER () FROM v0, vt84, t0 NOT INDEXED WHERE (((x'1dc2') BETWEEN (((-2042778612)<=('-759133177'))) AND ((((NULL))<(('-60693373')))))); -- 0ms;
SELECT DISTINCT json(((v0.c1)<>(v0.c2))) FROM t0 LIMIT 1531548178 OFFSET 1088396559;SELECT DISTINCT (CAST(v0.c1 AS TEXT) IN ()) FROM t0; -- 0ms;
SELECT ALL t0.c86 COLLATE BINARY FROM t0; -- 1ms;
SELECT rtreenode(((v0.c0)IS NOT(vt84.c0)), (+ (v0.c0))) FROM vt84 WHERE (CASE ((NULL) IS TRUE)  WHEN ((NULL)=(-4.12306795E8)) THEN (('c')AND(0.909915859956439)) WHEN (((NULL)) BETWEEN (('\n宗')) AND ((0.997873671171266))) THEN CAST(x'' AS BLOB) WHEN 'W}c 0*d1' COLLATE NOCASE THEN load_extension(0.191806579066218) END);SELECT DISTINCT CAST('-' AS INTEGER) FROM vt84, v0; -- 0ms;
SELECT RANK() OVER ( GROUPS  UNBOUNDED PRECEDING) FROM v0, t0, vt84; -- 0ms;
SELECT DISTINCT ((((t0.c88)GLOB(t0.c86))) NOT BETWEEN (((vt84.c0) IS TRUE)) AND (((vt84.c0) BETWEEN (t0.c88) AND (t0.c1)))) FROM v0 WHERE ((- (NULL COLLATE NOCASE)));SELECT DISTINCT LIKE(v0.c2, v0.c2, 'r') COLLATE BINARY, '-658459986', ((((CAST(v0.c0 AS TEXT))AND(t0.c1 COLLATE BINARY)))OR(x'')) FROM vt84 WHERE (((('575080205')) BETWEEN (('1107464303')) AND (((('-657175788')||(0xffffffffe632cdef)))))) LIMIT -1564564325 OFFSET 405784015;SELECT DISTINCT (((((v0.c0, t0.c2, t0.c86)) BETWEEN ((v0.c0, t0.c88, v0.c1)) AND ((v0.c1, t0.c1, t0.c1))))==(((v0.c0) BETWEEN (t0.c2) AND (NULL)))) FROM v0, t0; -- 0ms;
SELECT ALL CAST('' AS TEXT), ((((vt84.c0)<<(vt84.c0)))LIKE(((v0.c2) IS TRUE))), ((((v0.c1)IS(t0.c1)))%(((v0.c2)<(v0.c0)))) FROM vt84 WHERE ((('0.06709854781177949' COLLATE BINARY) IS FALSE)) GROUP BY ((CASE WHEN v0.c1 THEN t0.c88 WHEN t0.c88 THEN t0.c86 WHEN v0.c0 THEN v0.c0 WHEN 'L佻' THEN vt84.c0 WHEN t0.c1 THEN v0.c2 ELSE t0.c86 END) NOT BETWEEN (t0.c86) AND (((t0.c88)<<(t0.c2)))) HAVING MIN((NOT (vt84.c0)));SELECT DISTINCT CAST(COUNT(t0.c1) AS REAL) FROM v0, vt84 WHERE ((((((('-499147567') NOT BETWEEN ('O ') AND (-1.50760298E9)))OR((~ ('')))))OR(CAST(0.08575198153849628 AS NUMERIC))));SELECT DISTINCT CAST(((t0.c1) IS FALSE) AS REAL), ((t0.c2 COLLATE BINARY)+(((vt84.c0) IS FALSE))), (((v0.c1) BETWEEN (t0.c1) AND (x'')) IN (((v0.c0)/(t0.c1)))) FROM vt84, t0, v0 WHERE (((((x'8051') ISNULL)) NOT BETWEEN (CASE WHEN x'674073ff' THEN 0.4999152764469429 END) AND (((0.5717185430638247)=(x''))))) LIMIT 1105280318 OFFSET 1954288987; -- 0ms;
SELECT DISTINCT t0.c2 FROM vt84 WHERE ((CASE WHEN '-1760997172' THEN 0.2198316203075139 ELSE '-1336992131' END IN ()));SELECT ALL CUME_DIST() OVER () FROM vt84 WHERE ((((-7.33850704E8) NOT BETWEEN ('*G咠#') AND ('0.14123437233449887')) IN ())) GROUP BY ((t0.c88)IS NOT(((t0.c2)<=('443616978')))), ((t0.c1)-(x'')), (((CAST(t0.c2 AS BLOB)))>(((+ (v0.c1))))), CAST(t0.c2 AS NUMERIC), (+ (583479564)) HAVING v0.c2;SELECT DISTINCT (((1787351151)) BETWEEN ((((((0.15193372863632237)AND(v0.c2)))OR(vt84.c0)))) AND ((0.831576754977123))) FROM v0;SELECT ALL ((((((((t0.c2)AND(((v0.c1)GLOB(v0.c2)))))OR('')))OR(((t0.c88) NOT BETWEEN (v0.c0) AND (vt84.c0)))))OR(((((((((t0.c86)OR(v0.c2)))OR(1377750270)))AND(t0.c1)))AND(t0.c88)))), (((t0.c1 IN ()))IS NOT(CASE t0.c1  WHEN t0.c1 THEN vt84.c0 WHEN t0.c2 THEN vt84.c0 WHEN v0.c0 THEN vt84.c0 WHEN v0.c0 THEN v0.c0 WHEN t0.c86 THEN t0.c1 ELSE t0.c1 END)), ((((((((t0.c2)AND(v0.c2)))OR(vt84.c0)))OR(t0.c86 COLLATE BINARY)))OR(((t0.c86) NOT BETWEEN (0.12034636848738245) AND (t0.c1)))) FROM t0 GROUP BY ((CASE t0.c2  WHEN 0X3c04afaf THEN vt84.c0 ELSE t0.c86 END)=((NOT (t0.c86))));SELECT ALL ((((((t0.c86))<((vt84.c0)))))>((GROUP_CONCAT(v0.c1)))), ((0xffffffff8f7f64aa COLLATE NOCASE) BETWEEN (((t0.c86)<=(t0.c2))) AND (0.7371475074181476 COLLATE NOCASE)), (((vt84.c0)) NOT BETWEEN (((+ (v0.c0)))) AND ((AVG(t0.c1)))) FROM t0;SELECT ALL CASE ((vt84.c0) BETWEEN (t0.c88) AND (v0.c2))  WHEN (+ (t0.c86)) THEN (NOT (v0.c1)) ELSE CASE t0.c86  WHEN t0.c2 THEN v0.c0 ELSE v0.c2 END END FROM vt84 WHERE (CASE WHEN '' THEN ((((x'b054')AND('IbqT鴮')))OR(NULL)) END) GROUP BY (((t0.c86 IN ())) ISNULL);SELECT ALL TOTAL(json_array_length(vt84.c0, t0.c86)), CASE WHEN (t0.c1 IN ()) THEN ((t0.c1) NOT BETWEEN (v0.c1) AND (v0.c2)) END, ((CASE v0.c1  WHEN t0.c1 THEN v0.c1 END) BETWEEN (v0.c1) AND (((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c2)))) FROM t0;SELECT ((CASE WHEN t0.c88 THEN v0.c0 END) BETWEEN (0.8074212769188046) AND (PRINTF(vt84.c0))) FROM t0, vt84, v0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((((((t0.c2) NOT BETWEEN (v0.c2) AND (v0.c0)))AND(((vt84.c0) IS FALSE))))AND((+ (vt84.c0)))) FROM t0, v0 GROUP BY ((((v0.c1) ISNULL))+((('-2130479566') BETWEEN (t0.c88) AND (vt84.c0))));SELECT DISTINCT t0.c88 FROM v0, vt84 WHERE (CAST('' AS TEXT));SELECT DISTINCT v0.c1 FROM t0, v0 WHERE (((((CAST(x'7978' AS NUMERIC))AND(((((0.3540430024371748)OR(NULL)))AND('712416749')))))AND((((x'')) BETWEEN ((0.8731186736749087)) AND ((NULL)))))); -- 0ms;
SELECT ALL (((((t0.c1, t0.c86, v0.c2)) NOT BETWEEN ((t0.c86, v0.c2, t0.c1)) AND ((t0.c88, '', t0.c88))))LIKE(t0.c86)), ((((t0.c86) IS TRUE)) IS FALSE), CASE ((v0.c0) BETWEEN (t0.c86) AND (t0.c86))  WHEN ((v0.c1) BETWEEN (t0.c88) AND (t0.c2)) THEN ((vt84.c0) IS TRUE) ELSE ((t0.c86) IS TRUE) END FROM v0, t0, vt84; -- 0ms;
SELECT DISTINCT (((((vt84.c0 IN ()))OR(((-2.105965941E9)>(v0.c2)))))AND((- (t0.c1)))), TOTAL((NOT (t0.c88))) OVER ( ORDER BY CAST(v0.c0 AS NUMERIC) COLLATE RTRIM ASC  NULLS LAST), (((t0.c86)) NOT BETWEEN (((- (t0.c88)))) AND (((v0.c2 IN ())))), v0.c0, ((CASE WHEN v0.c2 THEN v0.c2 END)/((- (v0.c0)))) FROM v0, vt84, t0 WHERE (((((5.75080205E8)&('[')))GLOB(((0.9368028520928401)==('?d^l)fK'))))); -- 0ms;
SELECT DISTINCT ((CAST(v0.c1 AS BLOB))GLOB(((vt84.c0) NOT NULL))) FROM t0, vt84;SELECT ALL FIRST_VALUE((((STRFTIME(vt84.c0, vt84.c0, vt84.c0)))>=((x'')))) OVER () FROM vt84; -- 0ms;
SELECT ALL (((v0.c0 IN ())) IS FALSE), ((CAST(t0.c1 AS BLOB))>>('')), CASE WHEN t0.c86 COLLATE RTRIM THEN x'' WHEN ((t0.c1) IS TRUE) THEN ((((t0.c2)AND(t0.c2)))OR(v0.c2)) WHEN ((0.9570055702473977)<<(t0.c1)) THEN ((t0.c88) IS TRUE) END FROM v0;SELECT ALL ((CASE WHEN vt84.c0 THEN t0.c86 END) IS FALSE) FROM t0 WHERE (((((-888252459)&(-2.67336532E8))) NOT BETWEEN (UPPER(-1402191163)) AND ('-946517380' COLLATE NOCASE)));SELECT t0.c88, v0.c1, NULLIF((((('-1308460190')OR(t0.c1)))AND(v0.c2)), vt84.c0) FROM vt84, v0, t0 WHERE (((((x'') ISNULL)) BETWEEN (((x'ddec')>('摢,'))) AND ((((x'', 0.13811988252965646, NULL)) NOT BETWEEN ((NULL, '1092893658', x'')) AND ((0.19845302692903322, 0.5621145512378835, NULL)))))); -- 0ms;
SELECT DISTINCT TOTAL(-169087120), json_patch(((((vt84.c0)AND(t0.c2)))OR(vt84.c0)), LIKE('', v0.c2, '#')), LIKE('-1019698920', t0.c88, 'ṽ') COLLATE NOCASE FROM vt84, v0, t0 NOT INDEXED WHERE ((NOT (('-1157534267' IN ())))) LIMIT 153542143; -- 0ms;
SELECT ((- (x'c2ba')) IN ()) FROM t0, v0, vt84 WHERE (((NULL)+((+ (NULL))))); -- 0ms;
SELECT ((0.8488969030056943) NOT BETWEEN (((((NULL)AND(v0.c2)))AND(v0.c2))) AND (((t0.c1)<=(t0.c88)))) FROM v0, t0, vt84 WHERE (CAST(CASE -7.08911024E8  WHEN '1670544536' THEN -334980900 WHEN NULL THEN '682530246' WHEN 'w]d~{䖘sE' THEN 0.6892791709449807 END AS NUMERIC)); -- 0ms;
SELECT DISTINCT TOTAL(((v0.c1) NOT BETWEEN (v0.c0) AND (t0.c88))) FILTER(WHERE (((((t0.c1)==(t0.c2)), CAST(vt84.c0 AS NUMERIC), ((t0.c2) NOT BETWEEN (vt84.c0) AND (t0.c1))))<>(((t0.c88 IN (t0.c86)), v0.c1, (+ (t0.c88)))))) OVER () FROM t0, v0, vt84 ORDER BY json_insert(((t0.c2)>>(t0.c86)), (((t0.c86)) NOT BETWEEN ((t0.c1)) AND ((vt84.c0))), NULL)  NULLS LAST, (((((v0.c1, v0.c2, t0.c86))>=((t0.c2, v0.c0, t0.c86)))) ISNULL)  NULLS FIRST LIMIT 1375597630 OFFSET 357480334; -- 1ms;
SELECT DISTINCT CASE ((v0.c0)==('Gl%䬔K'))  WHEN CAST(v0.c2 AS TEXT) THEN x'' ELSE ((v0.c0) IS FALSE) END FROM v0; -- 0ms;
SELECT DISTINCT (((t0.c88 IN ()))+(((v0.c2)IS(v0.c2)))) FROM v0; -- 0ms;
SELECT ALL 'fI' FROM t0; -- 0ms;
SELECT DISTINCT ((((0.3947226937928201)|(vt84.c0)))<>(CASE '474916046'  WHEN t0.c2 THEN v0.c1 ELSE t0.c88 END)) FROM v0, vt84;SELECT ALL ((((t0.c88) BETWEEN (t0.c1) AND (t0.c2))) BETWEEN (CAST(v0.c2 AS TEXT)) AND (((((((((v0.c2)AND(vt84.c0)))OR(t0.c1)))AND(t0.c86)))AND(t0.c86)))) FROM t0, v0;SELECT CASE (((v0.c2)) BETWEEN ((t0.c2)) AND ((v0.c2)))  WHEN ((v0.c0) ISNULL) THEN CAST(t0.c86 AS TEXT) END FROM vt84, t0 WHERE (CASE WHEN ('2069224810' IN (1.769668544E9)) THEN CASE 'Ki왥z2'  WHEN 0xffffffff81037632 THEN NULL WHEN x'' THEN x'' WHEN x'' THEN NULL WHEN NULL THEN '-1850788514' WHEN 0x3486e734 THEN '-702627542' END WHEN load_extension('-1261485433') THEN ((('22781329'))<>(('uf'))) WHEN ('Jn8' IN ()) THEN (('')<('UC\n')) ELSE ((((((((NULL)AND(NULL)))OR(x'c711')))OR(x'')))AND(-1.7976931348623157E308)) END) ORDER BY CASE v0.c0  WHEN ((t0.c2) BETWEEN (t0.c88) AND (v0.c2)) THEN 0.3015981133470954 COLLATE RTRIM END, CASE WHEN (((v0.c2))<>((v0.c1))) THEN ((((v0.c1)AND(t0.c2)))AND(v0.c2)) ELSE ((t0.c1)==(t0.c86)) END  NULLS FIRST;SELECT (((((t0.c2)>>(v0.c2))))<=((x''))) FROM vt84, v0;SELECT DISTINCT (((vt84.c0)<=(v0.c0)) IN ()) FROM v0, vt84, t0 WHERE ((((-598011170, 0.39338387793263796, 0.8870642949496286)) BETWEEN ((((((x'')AND(-1.7976931348623157E308)))OR('0')), (('쵎Hls')<<(x'')), ((((NULL)OR(x'')))AND(NULL)))) AND ((0.5900056294010699 COLLATE NOCASE, ((NULL) BETWEEN (0x1e9f7cb) AND (NULL)), -1205080466 COLLATE BINARY)))); -- 0ms;
SELECT ALL CASE WHEN CAST(vt84.c0 AS TEXT) THEN ((v0.c0)&(t0.c88)) ELSE COUNT(v0.c0) END FROM vt84 WHERE (CAST(0x3fb376f2 AS TEXT) COLLATE RTRIM) GROUP BY NULLIF(((((((((t0.c1)OR(v0.c1)))AND(t0.c2)))OR(v0.c0)))OR(t0.c86)), ((t0.c1) IS FALSE));SELECT (((t0.c88 IN (t0.c1, 75570288, v0.c2)))|('213717411')), (((((v0.c1 IN ()))OR(CAST(vt84.c0 AS NUMERIC))))OR((((v0.c0)) NOT BETWEEN ((-9.74672311E8)) AND ((t0.c86))))), ((CASE WHEN vt84.c0 THEN t0.c88 END) NOT NULL) FROM vt84 WHERE (((('|,')) BETWEEN ((CAST(x'' AS NUMERIC))) AND ((((9.1576061E7) NOT BETWEEN (NULL) AND (x'c7c4f452')))))) ORDER BY (~ (CAST(v0.c0 AS INTEGER))), (((((((t0.c1, v0.c0, vt84.c0)) BETWEEN ((t0.c86, t0.c2, vt84.c0)) AND ((v0.c1, v0.c0, vt84.c0))))AND(CAST(t0.c88 AS BLOB))))AND((('[DD- ''{s6W}') NOTNULL)))  NULLS LAST;SELECT ALL '+]G', ((CAST(v0.c1 AS REAL))-(UPPER(DISTINCT vt84.c0))), (((((v0.c1) BETWEEN (v0.c0) AND (t0.c1)), DATETIME(NULL, t0.c88, 0.7807545276538402, t0.c88, v0.c0, v0.c1, v0.c1), TOTAL(NULL)))==((CASE t0.c2  WHEN t0.c1 THEN NULL END, CAST('1655658053' AS REAL), ((t0.c2) IS TRUE)))) FROM t0, v0, vt84 WHERE (((((~ (x''))))!=((((x'')IS(x'')))))); -- 0ms;
SELECT DISTINCT ((CAST(v0.c2 AS BLOB)) NOT NULL) FROM t0, vt84 WHERE ('204531107');SELECT ALL CASE t0.c88  WHEN v0.c0 THEN t0.c1 WHEN vt84.c0 THEN v0.c0 WHEN v0.c0 THEN v0.c0 ELSE v0.c0 END COLLATE RTRIM FROM vt84;SELECT ALL (((- (vt84.c0))) NOT BETWEEN (((v0.c0) NOT BETWEEN (0.7188265676000747) AND (vt84.c0))) AND (t0.c1 COLLATE BINARY)) FROM v0, vt84 NATURAL JOIN t0 WHERE (CAST((687935442 IN ()) AS INTEGER)); -- 0ms;
SELECT DISTINCT CAST(json_insert(t0.c2, t0.c1, v0.c0) AS BLOB) FROM v0, vt84, t0; -- 0ms;
SELECT DISTINCT IFNULL((v0.c0 IN ()), (NOT (t0.c1))) FROM vt84;SELECT DISTINCT CAST(CAST(v0.c2 AS REAL) AS TEXT) FROM vt84, v0 WHERE ((('-1850788514')<<(((('1535516297'))>(('\rLJ')))))); -- 1ms;
SELECT ((((t0.c2) BETWEEN (t0.c86) AND (v0.c2))) NOTNULL) FROM t0;SELECT GLOB(COUNT(t0.c86), ((t0.c1)<(t0.c86))), ((((MAX(v0.c1))OR(CASE WHEN t0.c2 THEN t0.c1 WHEN t0.c1 THEN t0.c86 WHEN 1375597630 THEN t0.c1 END)))AND(v0.c1)), LOWER(CAST(v0.c2 AS BLOB)), v0.c1, TOTAL((NOT (t0.c86))) OVER () FROM vt84 WHERE (x'');SELECT DISTINCT (((('278041782')) NOT BETWEEN ((v0.c2)) AND ((v0.c2))) IN (NULL, (t0.c2 IN (v0.c0)))), CASE ((((v0.c0)OR(t0.c88)))AND(t0.c88))  WHEN (((t0.c1, '1769668544', v0.c1, v0.c2, t0.c1))<=((t0.c1, v0.c2, v0.c0, v0.c2, x''))) THEN ((((((((v0.c1)AND('-1019698920')))OR(v0.c1)))OR('211283459')))OR('TRUE')) ELSE ((((0.632933666766266)AND(v0.c0)))OR(t0.c86)) END, TRIM(DISTINCT v0.c2) COLLATE BINARY COLLATE NOCASE FROM v0;SELECT DISTINCT (((t0.c1, t0.c1, 0.966902656537395)) BETWEEN ((((t0.c2)IS NOT(v0.c0)), ((v0.c0) IS FALSE), ((vt84.c0) NOT NULL))) AND (('-1400500951', json_type(-2123182118), json_type(t0.c2)))), UNLIKELY(DISTINCT ((t0.c86)/(t0.c88))), CAST((+ (t0.c88)) AS REAL), (((((v0.c1, vt84.c0, v0.c1))=(('-912830779', v0.c2, t0.c86)))) NOTNULL), (((CAST(t0.c86 AS TEXT)))<=((((v0.c0) IS TRUE)))) FROM vt84 WHERE (UPPER(DISTINCT ((0.5323987282010376) BETWEEN (x'2a1a') AND (NULL))));SELECT DISTINCT ((((v0.c2)AND(v0.c1)))OR(t0.c2)) COLLATE BINARY FROM v0, t0; -- 0ms;
SELECT DISTINCT t0.c1, COUNT(*) OVER (), ((TRIM(t0.c1, t0.c2))||(CAST(vt84.c0 AS BLOB))) FROM t0, vt84; -- 1ms;
SELECT ALL (((v0.c1)<(t0.c86)) IN ()) FROM v0, t0; -- 0ms;
SELECT DISTINCT NULLIF(DISTINCT ((t0.c88) BETWEEN ('-310659051') AND (t0.c88)), x'') FROM v0, t0, vt84 WHERE ((((((('薊{|hM', 'm>i?U?', 0.5534782283987186)) BETWEEN ((0.03537320701699187, NULL, '1096970385')) AND ((0.27561964245436965, 0.7826076199953608, x'000f')))))==(((((NULL))<((0.08362390966333699))))))); -- 0ms;
SELECT ALL (((NULL))!=((LIKE(vt84.c0, t0.c1)))) FROM v0, t0, vt84 ORDER BY ((((vt84.c0)>>(v0.c0)))<(x''))  NULLS LAST; -- 0ms;
SELECT DISTINCT CASE MIN(vt84.c0, v0.c2)  WHEN CASE v0.c2  WHEN NULL THEN t0.c86 END THEN x'a9af' ELSE ((t0.c2)LIKE(v0.c1)) END, ((((((x'')AND(t0.c88)))AND(t0.c2))) NOT BETWEEN (v0.c2 COLLATE BINARY) AND (((t0.c86) NOT NULL))), ((((((t0.c1)AND(t0.c88)))AND(t0.c1)))>=(((t0.c86)<(t0.c2)))), CUME_DIST() OVER (), CASE CAST(v0.c0 AS INTEGER)  WHEN (+ (v0.c0)) THEN (t0.c88 IN ()) ELSE CASE WHEN t0.c2 THEN t0.c2 END END FROM vt84, v0 NOT INDEXED LIMIT -1339049444 OFFSET -2123182118;SELECT DISTINCT DENSE_RANK() OVER ( GROUPS CASE SQLITE_SOURCE_ID()  WHEN ((((vt84.c0)OR(t0.c1)))OR(vt84.c0)) THEN ((vt84.c0)>=(t0.c1)) ELSE ((NULL) BETWEEN (t0.c1) AND (-745501151)) END PRECEDING EXCLUDE NO OTHERS), -8.65603401E8, CASE '-10118315' COLLATE RTRIM  WHEN t0.c2 THEN (~ (t0.c2)) WHEN (((t0.c1))==((x'5ac0'))) THEN (v0.c1 IN ()) WHEN 'Y}Y' THEN (t0.c86 IN ()) ELSE (+ (v0.c2)) END FROM vt84 GROUP BY ((t0.c86 COLLATE RTRIM) BETWEEN ((t0.c1 IN ())) AND ((vt84.c0 IN ()))) HAVING DATETIME(COUNT(*), ((vt84.c0) IS FALSE), ((v0.c2) BETWEEN (t0.c88) AND (t0.c88))) LIMIT 21152966 OFFSET -1825110398;SELECT DISTINCT LAG(((((UNLIKELY(DISTINCT t0.c88))OR(UPPER(v0.c1))))OR(CASE WHEN t0.c1 THEN t0.c2 WHEN v0.c1 THEN t0.c2 WHEN t0.c1 THEN 0.9092221948073549 ELSE v0.c0 END)), (((((t0.c86) BETWEEN (t0.c86) AND (v0.c1)), vt84.c0, NULL))<>((NULL COLLATE BINARY, (- (t0.c2)), (((-1924427569))<=((t0.c1)))))), ((((vt84.c0) NOT BETWEEN (NULL) AND (''))) IS FALSE)) OVER () FROM vt84, t0, v0 GROUP BY CAST(((t0.c1) IS TRUE) AS REAL); -- 0ms;
SELECT DISTINCT (((((((((('p໋j5붾')OR(v0.c1)))OR(t0.c1)))OR(t0.c2)))AND(t0.c86)))%(MAX(t0.c2))) FROM v0, vt84, t0 WHERE (x'2ec9') LIMIT 9678985 OFFSET 1507927354; -- 0ms;
SELECT CASE WHEN ((v0.c1) NOTNULL) THEN 0Xffffffffd40ba2a0 END FROM t0 WHERE (((('-1336992131' IN (NULL, x'')))<(0x1c964115 COLLATE BINARY)));SELECT (((((v0.c2)OR('-1576281015')))OR(t0.c88)) IN ()), vt84.c0, (NOT (NULL)) FROM vt84, v0, t0 WHERE ((((NOT (-2.08003077E8))) NOT BETWEEN (json_type(NULL)) AND ((+ ('2140283201'))))); -- 0ms;
SELECT ALL TOTAL(json_object(v0.c0, t0.c88)) FROM v0, vt84, t0 WHERE (CAST(('?v>rl珡.o3' IN ()) AS INTEGER)) GROUP BY NULL HAVING TOTAL_CHANGES() LIMIT 2140283201; -- 0ms;
SELECT ALL AVG(CASE ''  WHEN t0.c1 THEN NULL ELSE t0.c2 END) FROM v0, vt84, t0; -- 0ms;
SELECT DISTINCT x'', ((((((((((v0.c2)AND(t0.c1)))AND(t0.c1)))OR(v0.c0)))OR(v0.c0)))=(((v0.c2) ISNULL))), AVG(t0.c1) OVER () FROM t0, v0 WHERE (INSTR(CAST(0.8326297586353552 AS NUMERIC), (((0.7855636659245315)) BETWEEN (('!u{}G')) AND ((0.0881480810220967))))) ORDER BY ((t0.c88) NOT BETWEEN (CASE v0.c1  WHEN t0.c2 THEN -1625915441 WHEN vt84.c0 THEN t0.c2 WHEN v0.c1 THEN NULL ELSE vt84.c0 END) AND (((v0.c1) IS FALSE))), ((v0.c2)>=(t0.c2)) COLLATE RTRIM DESC;SELECT DISTINCT (((((t0.c2, v0.c1, t0.c88))>((v0.c0, t0.c88, t0.c2))))IS NOT((('-2145977859') NOT BETWEEN (t0.c1) AND (t0.c1)))) FROM t0 WHERE ((CAST('-432878097' AS NUMERIC) IN ()));SELECT ((((v0.c0) NOT BETWEEN (t0.c88) AND (t0.c88)))|(((t0.c1) IS FALSE))) FROM vt84, v0 WHERE (HEX(NULL));SELECT DISTINCT COUNT(*) FROM vt84, v0 INDEXED BY i5;SELECT ALL ((v0.c0)<<(v0.c2 COLLATE BINARY)) FROM v0, t0, vt84; -- 0ms;
SELECT ALL NTILE(t0.c88) OVER () FROM t0, v0;SELECT DISTINCT (((COUNT(t0.c1)))<=((((t0.c88) ISNULL)))), ((v0.c0) BETWEEN ((~ (vt84.c0))) AND (((vt84.c0)OR(0.3996822322993502)))), ((v0.c0) IS FALSE) COLLATE NOCASE FROM vt84 ORDER BY (CASE WHEN v0.c2 THEN t0.c86 WHEN v0.c1 THEN NULL WHEN v0.c2 THEN v0.c1 END IN ())  NULLS LAST, CAST(((((t0.c1)AND(NULL)))AND('')) AS BLOB);SELECT DISTINCT (((('O*!d')+(t0.c86))) IS TRUE) FROM v0, t0; -- 0ms;
SELECT DISTINCT ((((((v0.c1)OR(v0.c0)))OR(t0.c1))) NOTNULL), ((CAST(vt84.c0 AS INTEGER))&('-1912023877')), CAST(((t0.c86) NOT BETWEEN (t0.c2) AND (t0.c1)) AS INTEGER) FROM v0, t0 WHERE ('1083413159');SELECT CAST((- (v0.c0)) AS INTEGER), json_object(t0.c1, ((vt84.c0) BETWEEN (t0.c88) AND (v0.c2)), ((t0.c88) NOT BETWEEN (t0.c88) AND ('')), vt84.c0, (((((((('-707900692')OR('-1862121823')))AND(t0.c86)))AND(v0.c2)))OR(v0.c1)), AVG(t0.c2)), CASE WHEN (+ ('Q,')) THEN v0.c2 COLLATE NOCASE WHEN v0.c0 COLLATE RTRIM THEN ((((vt84.c0)OR(v0.c2)))OR(t0.c1)) WHEN ((vt84.c0) NOT NULL) THEN x'a1bb' ELSE (((v0.c1)) NOT BETWEEN ((t0.c1)) AND ((t0.c2))) END FROM t0;SELECT DISTINCT ((AVG(0.3849971710447345))<=((((('')AND(v0.c2)))AND(t0.c88)))) FROM t0, vt84 WHERE ((NOT ((('Kuc	|!') BETWEEN ('') AND (NULL)))));SELECT DISTINCT (CASE t0.c2  WHEN vt84.c0 THEN t0.c2 WHEN t0.c86 THEN t0.c88 WHEN t0.c88 THEN NULL END IN ((((vt84.c0)) BETWEEN ((vt84.c0)) AND ((t0.c88))))), ((((t0.c88)GLOB(v0.c0))) IS TRUE), ((((t0.c88) ISNULL)) ISNULL) FROM vt84, t0;SELECT (((t0.c1)) BETWEEN ((MAX(t0.c1, ')'))) AND ((((((((((vt84.c0)OR('Jq|BO7')))OR(t0.c88)))AND(vt84.c0)))OR(t0.c2))))) FROM v0, t0 LIMIT 1855969663 OFFSET 1107404600;SELECT DISTINCT ((((((x'') IS FALSE))OR(SUM(v0.c1))))AND(CAST(v0.c1 AS NUMERIC))) FROM vt84, v0 WHERE ((CAST(NULL AS TEXT) IN (UNICODE(0.3455797615910561)))) LIMIT -1336992131; -- 6ms;
SELECT ((CASE WHEN vt84.c0 THEN NULL WHEN v0.c1 THEN v0.c0 WHEN v0.c1 THEN t0.c2 ELSE t0.c1 END) NOT NULL) FROM t0, vt84 WHERE ((~ ((((-671212278, 0.7373902414331194, NULL))<((NULL, NULL, x'')))))) ORDER BY (('1558031236') NOT BETWEEN ((NOT (vt84.c0))) AND (CASE WHEN -1009556602 THEN v0.c2 END)) ASC  NULLS LAST;SELECT DISTINCT ((((v0.c0)>(vt84.c0)))/(((t0.c2) NOT BETWEEN (v0.c2) AND (vt84.c0)))) FROM vt84, v0;SELECT DISTINCT ((((CAST(t0.c86 AS REAL))AND(((t0.c2)IS NOT(t0.c86)))))AND(((v0.c0) NOT NULL))), FIRST_VALUE(NULLIF((((v0.c2))<=((v0.c1))), CAST(v0.c1 AS TEXT))) OVER (), (- (IFNULL(t0.c2, v0.c1))) FROM v0, vt84 LIMIT 1787351151;SELECT ALL v0.c1 FROM t0, vt84, v0 WHERE ((((CAST(0.3488711782471319 AS NUMERIC), ((NULL)<<('_\')), TYPEOF(0x3f3f721)))>=((((1.16715924E9) NOT BETWEEN ('-1447434539') AND ('iw')), ((x'3662')&('+4H')), CASE 0.7333190945443656  WHEN 0.1134170052832143 THEN 9.57263517E8 END)))); -- 0ms;
SELECT GROUP_CONCAT(((vt84.c0)<=(t0.c88))) FROM t0 INDEXED BY i15, vt84 WHERE (((((0.7741017326192222)OR(x'')))OR(x'')) COLLATE BINARY); -- 0ms;
SELECT ((((SUM(v0.c0))AND(NULL)))OR(CASE t0.c1  WHEN t0.c2 THEN vt84.c0 ELSE t0.c2 END)) FROM t0, vt84;SELECT DISTINCT t0.c2 FROM v0, vt84, t0 WHERE (((((NULL) BETWEEN ('-200948404') AND (-5.45317297E8))) NOT NULL)); -- 0ms;
SELECT ((((NOT (vt84.c0))))>((((t0.c2)<<(v0.c0))))) FROM vt84, t0;SELECT ALL 0.02751304726895032, ((((v0.c0)IS NOT(v0.c1)))>((- (t0.c1)))), TOTAL(t0.c1) OVER () FROM v0, t0, vt84; -- 0ms;
SELECT DISTINCT (((vt84.c0) NOT NULL) IN ((~ (v0.c2)))) FROM t0, vt84, v0 WHERE (((((((x'')=('')))AND(((0.46836953443241736)|(NULL)))))AND(((2.016251711E9) NOT NULL)))); -- 0ms;
SELECT DISTINCT CASE ((((t0.c88)AND(v0.c1)))AND(v0.c2))  WHEN UPPER(DISTINCT v0.c1) THEN (vt84.c0 IN (v0.c0, 'uHeB6')) ELSE UPPER(t0.c2) END FROM v0, t0;SELECT ALL ((((v0.c2)|(t0.c86))) BETWEEN ((t0.c2 IN ())) AND (ABS(t0.c1))) FROM t0, vt84;SELECT (~ (0.2357565710774463)) FROM vt84, v0; -- 0ms;
SELECT ALL LAG(((vt84.c0) BETWEEN (vt84.c0) AND (vt84.c0)) COLLATE NOCASE, 0.7277629769257341, (((vt84.c0)) NOT BETWEEN ((LAST_INSERT_ROWID())) AND ((CAST(vt84.c0 AS INTEGER))))) OVER ( ORDER BY (((((((('-1811580336')OR(t0.c88)))OR(vt84.c0)))AND((((v0.c2, t0.c2, t0.c1))>((v0.c1, v0.c2, v0.c2))))))OR(((t0.c88) IS FALSE))) DESC  NULLS LAST ROWS v0.c0 PRECEDING), ((((v0.c2)||(t0.c88))) BETWEEN (((((((((vt84.c0)AND(t0.c86)))AND(vt84.c0)))OR(v0.c2)))AND(x''))) AND (CASE t0.c88  WHEN 0.5433914970505374 THEN v0.c2 WHEN t0.c86 THEN t0.c1 WHEN v0.c2 THEN t0.c2 WHEN vt84.c0 THEN v0.c0 WHEN t0.c2 THEN v0.c2 END)), CAST((((t0.c1))<>((v0.c1))) AS NUMERIC) FROM vt84 WHERE (CAST(CASE '0.7755142434849417'  WHEN NULL THEN NULL END AS INTEGER)) LIMIT 1088396559;SELECT DISTINCT highlight(((v0.c2) BETWEEN (t0.c88) AND (t0.c2)), v0.c2, t0.c88, t0.c2), CUME_DIST() OVER ( ORDER BY ((((((v0.c0) IS TRUE))AND(NULL)))AND(((v0.c1)IS(t0.c1))))  NULLS FIRST), ((CAST(t0.c86 AS TEXT))<<(((v0.c0)-(v0.c2)))) FROM v0;SELECT DISTINCT NULL FROM vt84 WHERE (CASE ('' IN ('', 0X29e9be00, '\r69tx'))  WHEN NULL THEN ('eo' IN ()) ELSE 1.202535156E9 COLLATE RTRIM END); -- 0ms;
SELECT DISTINCT ((CASE v0.c2  WHEN t0.c88 THEN vt84.c0 ELSE t0.c86 END)=((((v0.c1))<>((NULL))))) FROM v0;SELECT ALL SQLITE_COMPILEOPTION_USED(t0.c1) FROM t0; -- 0ms;
SELECT ALL v0.c0 FROM t0, vt84 WHERE (CAST(((x'') NOT NULL) AS TEXT)) LIMIT 685488774;SELECT DISTINCT CASE t0.c88 COLLATE NOCASE  WHEN COUNT(*) THEN UNICODE(v0.c2) END, ((SUM(t0.c1)) BETWEEN (CASE WHEN v0.c1 THEN vt84.c0 ELSE v0.c0 END) AND (CAST(v0.c2 AS BLOB))), (((t0.c86 IN ()))IS NOT(v0.c1 COLLATE NOCASE)) FROM t0, vt84;SELECT (((t0.c88, v0.c1, t0.c2)) BETWEEN ((GROUP_CONCAT(v0.c2), (((t0.c86))==((v0.c2))), CAST(v0.c2 AS TEXT))) AND ((((t0.c88)<(v0.c2)), ((v0.c1)*(v0.c2)), ((vt84.c0)IS NOT(v0.c2))))), (((t0.c1)) BETWEEN ((ABS(v0.c2))) AND ((((v0.c1) BETWEEN (t0.c2) AND (t0.c1))))), ((t0.c2) NOT NULL) FROM vt84, v0;SELECT DISTINCT (((t0.c1)|(v0.c1)) IN ()), CAST(t0.c1 COLLATE NOCASE AS REAL), t0.c88 FROM t0, vt84, v0 WHERE ((- (SQLITE_COMPILEOPTION_GET(0x7b55dd6a)))); -- 1ms;
SELECT ALL LIKE(LIKELY(DISTINCT t0.c88), 0.1425959610143177, '/'), ((t0.c2 COLLATE NOCASE) NOTNULL), GROUP_CONCAT(((t0.c86)<>(v0.c0))) OVER ( ORDER BY ((((((t0.c1)OR(t0.c86)))AND(t0.c2)))<=(560680454)) ASC  NULLS LAST) FROM vt84, t0, v0 WHERE (json_type(((x'')<(NULL)))); -- 0ms;
SELECT CASE WHEN GROUP_CONCAT(v0.c0) THEN ((((t0.c86)AND(v0.c0)))OR(v0.c0)) ELSE ((t0.c1)-(t0.c88)) END FROM t0, v0, vt84 WHERE (CAST(CASE WHEN '' THEN NULL END AS NUMERIC)); -- 0ms;
SELECT DISTINCT (x'4d49' IN ()) FROM v0; -- 0ms;
SELECT (~ (CAST(t0.c1 AS NUMERIC))), t0.c88, (((t0.c2 COLLATE RTRIM, CAST(t0.c88 AS BLOB), TRIM(v0.c2, t0.c86), CASE v0.c2  WHEN t0.c86 THEN t0.c88 ELSE t0.c1 END, (t0.c1 IN ())))<>((SQLITE_COMPILEOPTION_GET(v0.c2), ((((t0.c2)AND(v0.c1)))AND(t0.c88)), CAST(t0.c1 AS BLOB), UNLIKELY(x'59a97e8f'), 'VZ' COLLATE BINARY))) FROM vt84, v0 NOT INDEXED WHERE (CASE WHEN ((((((((x'08fb')OR(0.5066998845210917)))AND(0.14488412258651073)))OR('-1027076224')))OR(x'6b0a')) THEN ((((NULL)OR('508345879')))OR('-1366964596')) WHEN ((((0.2755239805558317)OR('185041108')))OR(0.7019977928806244)) THEN (((((((((((('Zp')AND(0.6791934513760164)))OR(x'')))OR(NULL)))AND('0.38849908428787816')))AND('0.5990719416060557')))AND('5稃')) WHEN 0.21777863234622907 COLLATE BINARY THEN ((((((((((((0.758813351876814)OR('')))AND(x'ddd3')))AND(x'c70e')))AND(x'')))AND(x'')))OR(0.7446535647176988)) ELSE (((x'', '5(', '1276419062')) BETWEEN (('-2139121730', '1136481610', 0.7763484544325215)) AND (('2069224810', x'', x'fa1d'))) END) GROUP BY ((((v0.c1, v0.c2, 0X7e657b9b)) BETWEEN ((t0.c1, NULL, t0.c1)) AND ((v0.c1, t0.c1, t0.c1))) IN ());SELECT 'u)7V' FROM v0, vt84 WHERE (CASE WHEN CASE NULL  WHEN x'' THEN '443616978' WHEN x'' THEN NULL WHEN x'' THEN x'' ELSE x'b67bdae6' END THEN x'8f05ce48' COLLATE BINARY ELSE (('V') NOTNULL) END); -- 0ms;
SELECT DISTINCT ((((t0.c2) BETWEEN (v0.c2) AND (t0.c1)))IS NOT(((t0.c86) IS FALSE))) FROM v0, vt84, t0 WHERE ((~ (CAST(0x41627091 AS INTEGER)))) ORDER BY (((v0.c1)) NOT BETWEEN ((((((((((v0.c0)OR(t0.c86)))AND(t0.c86)))OR(v0.c2)))AND(vt84.c0)))) AND ((((((t0.c2)AND(t0.c86)))AND(v0.c1))))) ASC; -- 0ms;
SELECT ALL CAST(((vt84.c0)=(vt84.c0)) AS TEXT) FROM t0 WHERE (x'');SELECT ALL (((t0.c88)) BETWEEN ((((t0.c1)=(v0.c2)))) AND ((((t0.c1)!=(vt84.c0))))) FROM t0 WHERE (((((((NULL) NOTNULL))OR(']F')))AND((0x1a710ed2 IN ()))));SELECT DISTINCT (((((t0.c1))<((t0.c1))))|((((v0.c0, t0.c2, v0.c2)) NOT BETWEEN ((t0.c2, t0.c1, t0.c2)) AND ((v0.c1, v0.c2, t0.c88))))), 0.5779200094999811, ((CASE WHEN t0.c86 THEN v0.c1 WHEN t0.c1 THEN t0.c86 WHEN t0.c2 THEN t0.c86 END)&(((v0.c0)||(t0.c2)))) FROM vt84;SELECT DISTINCT CASE (((t0.c2))==((v0.c2)))  WHEN ((v0.c2)<=(vt84.c0)) THEN ((t0.c1) IS TRUE) END, (~ (((t0.c2)<<(t0.c1)))), TOTAL((((((((('4ll8R\EA')AND(v0.c2)))AND(t0.c1)))OR(v0.c1)))OR(t0.c88))) OVER (), ((((((((((t0.c2)OR(1095695042)))AND(v0.c2)))AND(vt84.c0)))AND('-291071125')))-(CASE WHEN t0.c86 THEN NULL ELSE t0.c2 END)), ((AVG(v0.c0)) IS TRUE) FROM t0 GROUP BY ((((((((((vt84.c0)&(t0.c1)))AND((((v0.c2))<=((t0.c86))))))AND(((t0.c86)>(t0.c86)))))OR(CAST(t0.c1 AS INTEGER))))OR(ROUND(t0.c1, t0.c1)));SELECT DISTINCT (((t0.c88)) NOT BETWEEN ((((((((((v0.c2)AND(v0.c2)))AND(v0.c2)))AND(t0.c2)))OR(t0.c1)))) AND (((('F*EaE+tP') NOT NULL)))), NULL, LIKELY(0.299466418792678) FROM vt84 WHERE (load_extension(CASE x''  WHEN NULL THEN x'' END));SELECT DISTINCT CAST(v0.c2 AS INTEGER) FROM t0;SELECT IFNULL((t0.c88 IN ()), CASE v0.c2  WHEN t0.c88 THEN t0.c86 END) FROM vt84, v0, t0 WHERE (CAST(CAST(1578337916 AS INTEGER) AS NUMERIC)); -- 0ms;
SELECT DISTINCT ((load_extension(t0.c86, t0.c86)) BETWEEN (SQLITE_SOURCE_ID()) AND ((((v0.c1)) NOT BETWEEN ((t0.c88)) AND ((t0.c86))))) FROM vt84;SELECT DISTINCT (((v0.c1))>((((((v0.c0)AND(v0.c0)))OR(v0.c0))))) FROM t0, v0, vt84 WHERE (((((('1225235497', '0.6990410440734829', 0.7832926352289921, NULL, x'f7ba')) NOT BETWEEN (('2069224810', NULL, '744690849', 0.24078751249954067, x'')) AND ((0.611546377934282, 0.09921320905589703, '-246659239', '1031346906', '1930341756')))) NOT BETWEEN ((((x''))=((x'195e')))) AND (((('0.4212085490025935')) BETWEEN ((NULL)) AND ((x'')))))); -- 0ms;
SELECT ((((v0.c0) NOT BETWEEN (v0.c0) AND (v0.c0)))>((- (t0.c86)))), (((vt84.c0)) NOT BETWEEN (((+ (v0.c1)))) AND ((NULL))), JULIANDAY(NULLIF(t0.c88, v0.c1), ((v0.c2) ISNULL), ((t0.c86) BETWEEN (v0.c1) AND (v0.c0)), (((t0.c2)) NOT BETWEEN ((t0.c86)) AND ((0.6174261673752154))), v0.c0 COLLATE NOCASE, MAX(t0.c88), CAST(v0.c0 AS INTEGER)) FROM t0, v0, vt84 WHERE (LIKELY(DISTINCT (((0.33975078273389414))<=((0Xffffffff91af355e))))); -- 0ms;
SELECT (((t0.c88)) BETWEEN ((v0.c1)) AND ((v0.c1))) COLLATE NOCASE FROM t0, vt84, v0 INDEXED BY i60;SELECT DISTINCT ((CASE WHEN t0.c1 THEN v0.c2 ELSE vt84.c0 END)GLOB(((t0.c86) IS FALSE))) FROM t0, vt84, v0 WHERE ((NOT ('%G')) COLLATE BINARY) ORDER BY ('_Q' IN (((((t0.c86)OR(v0.c0)))AND(t0.c88))))  NULLS LAST; -- 0ms;
SELECT ALL CASE WHEN CAST(v0.c1 AS TEXT) THEN (((t0.c1, v0.c1, t0.c88, v0.c0, t0.c86)) NOT BETWEEN ((t0.c86, v0.c2, v0.c2, v0.c0, v0.c1)) AND ((t0.c1, v0.c1, t0.c2, vt84.c0, t0.c88))) WHEN ((t0.c88) NOT BETWEEN (t0.c2) AND (t0.c88)) THEN (+ (t0.c88)) WHEN ((v0.c0)GLOB(t0.c1)) THEN vt84.c0 ELSE (vt84.c0 IN ()) END FROM vt84 WHERE ((CAST(x'' AS REAL) IN ())) GROUP BY ((((CAST(v0.c1 AS INTEGER))OR(NULL)))AND(((((t0.c88)AND(v0.c0)))OR(v0.c1))));SELECT DISTINCT CAST(((((v0.c2)OR(t0.c2)))OR(vt84.c0)) AS TEXT), ((COUNT(*)) IS FALSE), '1096970385' FROM vt84 WHERE (CAST(CASE WHEN x'be53' THEN 0.3959862283334037 ELSE '2061723200' END AS BLOB)) LIMIT 267743827;SELECT DISTINCT CAST(v0.c2 AS INTEGER) COLLATE RTRIM FROM v0, vt84 WHERE (CASE (0.3059656716421587 IN (x''))  WHEN ((0.8096658978688824)AND(NULL)) THEN CAST(0.4151107862070198 AS INTEGER) ELSE CASE x'cc33'  WHEN '-1413376787' THEN 'IYKjA' ELSE x'' END END) ORDER BY ((((t0.c86)=(v0.c0)))*((('-495445234') ISNULL))) ASC;SELECT DISTINCT GROUP_CONCAT(((x'') NOT BETWEEN ('-1342062175') AND (t0.c1))) OVER () FROM v0 FULL OUTER JOIN vt84 ON HEX(vt84.c0) WHERE (((CAST('-1033415511' AS INTEGER)) BETWEEN (((x'5eff') NOT BETWEEN (NULL) AND (0x2247070d))) AND (CAST('84279397' AS BLOB))));SELECT ALL ((((t0.c86)AND(v0.c1))) NOT BETWEEN (((((v0.c2)AND(t0.c2)))AND(t0.c1))) AND ((((v0.c0))>=((v0.c2))))), CASE WHEN t0.c88 COLLATE NOCASE THEN MAX(t0.c86) ELSE NULL END, ((((((t0.c1) NOTNULL))OR(v0.c2 COLLATE RTRIM)))AND(((t0.c86) BETWEEN (t0.c2) AND (v0.c0)))), (((((t0.c2 IN (t0.c86)))AND(CASE vt84.c0  WHEN v0.c1 THEN t0.c86 WHEN v0.c0 THEN vt84.c0 WHEN v0.c0 THEN t0.c86 ELSE v0.c1 END)))OR((((0X697affc0)) NOT BETWEEN ((t0.c2)) AND ((t0.c86))))), t0.c1, t0.c86, '0.0' FROM v0 WHERE ((((((''))==((x'')))) IS TRUE));SELECT ALL 0.7250304843830169, ((((t0.c2)OR(t0.c88))) ISNULL), (((((v0.c1)+(v0.c0))))<>((v0.c0 COLLATE BINARY))) FROM v0, t0 WHERE (((NOT (x'')) IN (NULL COLLATE BINARY, ((x'') BETWEEN ('V]SDO*j') AND (x'322c'))))); -- 0ms;
SELECT DISTINCT ((t0.c86 COLLATE BINARY)%(v0.c2 COLLATE NOCASE)), ((((((v0.c1) IS TRUE))AND((~ (v0.c2)))))AND(v0.c0 COLLATE NOCASE)), NULL FROM v0, t0 ORDER BY (- (v0.c0)); -- 0ms;
SELECT ALL NULLIF(((vt84.c0) NOT NULL), ((t0.c86) IS TRUE)) FROM v0, t0;SELECT DISTINCT COUNT(((((((((v0.c1)AND(v0.c1)))OR(t0.c1)))OR(v0.c1)))AND(t0.c2))) OVER () FROM v0 WHERE ((NOT (CAST(NULL AS TEXT))));SELECT DISTINCT CASE CASE t0.c88  WHEN t0.c1 THEN t0.c86 END  WHEN (~ (0.5038910064909958)) THEN ((t0.c88) NOT BETWEEN (v0.c1) AND (t0.c86)) WHEN CAST(0x1a710ed2 AS TEXT) THEN CAST(vt84.c0 AS BLOB) WHEN (- (v0.c2)) THEN (((t0.c2)) BETWEEN ((t0.c1)) AND ((t0.c2))) ELSE x'' END FROM t0, v0, vt84; -- 0ms;
SELECT ((((0.14424024976984262)IS(v0.c2)))*(CASE WHEN t0.c2 THEN t0.c2 END)), SUBSTR((((vt84.c0))<>((t0.c1))), (((v0.c0, v0.c1, v0.c1))>((v0.c1, t0.c1, vt84.c0)))), ((((((((((t0.c88)AND(t0.c88)))AND(t0.c1)))AND(v0.c0)))OR(v0.c0)))LIKE(((((v0.c1)OR(t0.c2)))AND(v0.c1)))), (((v0.c0)) NOT BETWEEN ((CASE v0.c0  WHEN v0.c2 THEN v0.c0 ELSE v0.c0 END)) AND ((((t0.c2) IS TRUE)))), SUM(x'c4f6' COLLATE RTRIM) OVER () FROM v0, vt84, t0 GROUP BY ((((vt84.c0)AND(CAST(v0.c0 AS INTEGER))))AND(CASE WHEN t0.c88 THEN t0.c86 WHEN '170340699' THEN vt84.c0 WHEN t0.c88 THEN '' ELSE t0.c2 END)) HAVING ((CASE t0.c86  WHEN vt84.c0 THEN NULL WHEN v0.c2 THEN v0.c1 WHEN NULL THEN v0.c1 ELSE x'' END)IS NOT(9.1576061E7)); -- 1ms;
SELECT v0.c1, LAST_VALUE(((NULL) BETWEEN (t0.c1 COLLATE BINARY) AND (((t0.c1) IS FALSE)))) OVER ( ORDER BY ((((t0.c2) BETWEEN (v0.c0) AND (vt84.c0)))GLOB(CAST(0.1201666258378038 AS BLOB))) DESC), FIRST_VALUE((((((v0.c1))==((v0.c0))))|(((v0.c0)|(t0.c86))))) OVER () FROM v0 INDEXED BY i60, t0, vt84;SELECT ALL (- (SUM(t0.c1))) FROM t0; -- 0ms;
SELECT DISTINCT COUNT(CAST(t0.c1 AS TEXT)), GROUP_CONCAT(((t0.c2)/(t0.c1))) OVER (), ABS(DISTINCT ((((v0.c0)AND(NULL)))OR(v0.c1))) FROM t0 GROUP BY CAST((('') NOT NULL) AS BLOB) HAVING ((ABS(DISTINCT x'5edf')) BETWEEN ((((v0.c0))=((t0.c86)))) AND (CASE WHEN v0.c0 THEN v0.c0 END));SELECT MAX(IFNULL(DISTINCT t0.c1, v0.c1)) FROM vt84;SELECT DISTINCT ((((t0.c2 COLLATE NOCASE)AND(0.4957098287584366)))AND(((v0.c2)<<(v0.c0)))) FROM v0, t0, vt84; -- 0ms;
SELECT DISTINCT CASE WHEN MIN(t0.c86) THEN LOWER(x'0a71116f') ELSE ((t0.c86)==(v0.c0)) END, SUM(((v0.c2) NOT BETWEEN (x'ecc7fcbb') AND (v0.c0))), NTH_VALUE((LIKELIHOOD(t0.c86, 0.9003410589911666) IN (((v0.c2) NOT BETWEEN (v0.c1) AND (v0.c2)), CASE WHEN t0.c1 THEN v0.c0 WHEN t0.c88 THEN v0.c1 WHEN v0.c1 THEN t0.c1 END)), ((((((((((((v0.c1 COLLATE NOCASE)AND(((t0.c2) IS TRUE))))OR(CASE vt84.c0  WHEN t0.c2 THEN 0.2311854581202042 ELSE t0.c1 END)))OR((((t0.c88))!=((t0.c1))))))OR(((t0.c86) NOT NULL))))AND(CAST(t0.c86 AS NUMERIC))))AND(t0.c2))) OVER () FROM t0, vt84, v0 WHERE ((CASE WHEN 0.3059656716421587 THEN NULL END IN ((x'dbe5' IN ()))));SELECT (((t0.c88)) NOT BETWEEN ((CASE WHEN t0.c1 THEN t0.c88 WHEN t0.c1 THEN vt84.c0 WHEN v0.c2 THEN t0.c2 ELSE v0.c1 END)) AND ((TOTAL(t0.c88)))), v0.c0, CAST(((t0.c88) NOT BETWEEN (t0.c86) AND (t0.c86)) AS NUMERIC) FROM vt84, t0, v0 WHERE ((((((('9223372036854775807')AND(0xffffffff9b94fd85)))OR(0.035443528709098726))) BETWEEN (UNLIKELY('0.7412904890680276')) AND ((((((((('泬7-dC4')AND(0xffffffffe7451013)))AND('')))AND(NULL)))OR(1088396559))))); -- 0ms;
SELECT DISTINCT ((t0.c2)OR(DATETIME(v0.c1, v0.c1, t0.c2))) FROM vt84, v0 WHERE (LENGTH(((((NULL)OR(2067530829)))OR('kR')))) LIMIT -1324800186 OFFSET -1432456048;SELECT DISTINCT COALESCE(DISTINCT COUNT(t0.c1), t0.c2) FROM t0, vt84, v0 WHERE (CASE WHEN (('327437062') BETWEEN ('cC') AND ('x}ykY57\g')) THEN ((((NULL)AND('5^')))AND(0.2647879718672499)) END); -- 0ms;
SELECT ALL ((-6.57175788E8) IS TRUE) FROM vt84, t0 RIGHT OUTER JOIN v0 ON (~ (load_extension(vt84.c0))) WHERE ((('-2130479566')IS(((((0.42138867409242153)AND(x'')))AND(NULL))))) LIMIT -753176487 OFFSET -1053026106; -- 0ms;
SELECT DISTINCT (((v0.c1)IS NOT(t0.c86)) IN ()), t0.c86, (((t0.c88)) NOT BETWEEN ((AVG(t0.c2))) AND ((MIN(t0.c88)))) FROM vt84, t0 WHERE (((CASE ''  WHEN '㋏,' THEN '#ouz⁂dkmz' END) NOT NULL)); -- 0ms;
SELECT DISTINCT (((NULL)) NOT BETWEEN (((- (v0.c1)))) AND ((((-6.57175788E8)<(t0.c86))))) FROM v0, t0 WHERE (((CAST(0x0 AS REAL))>=((('-2024519738') NOTNULL)))); -- 0ms;
SELECT ALL COUNT(CAST(v0.c1 AS INTEGER)) FROM t0, v0, vt84 GROUP BY (((((t0.c1 IN (vt84.c0)))OR(((v0.c0)>>(t0.c2)))))OR(HEX(DISTINCT 0.9359546371988878))), LIKELY(DISTINCT (((t0.c86, t0.c86, NULL)) NOT BETWEEN ((vt84.c0, v0.c0, t0.c86)) AND ((v0.c1, t0.c1, '209974908')))), (((v0.c2)<=(t0.c88)) IN ()); -- 0ms;
SELECT NTH_VALUE(t0.c1, (((t0.c88, t0.c1, v0.c2, x'', t0.c2)) NOT BETWEEN ((((vt84.c0) NOT NULL), (((t0.c1, t0.c2, v0.c1))>((t0.c1, t0.c1, 0.07965940733635046))), LOWER(DISTINCT t0.c86), ((vt84.c0) NOT NULL), t0.c1)) AND (('+ꗐi''~i', (v0.c1 IN ()), ((v0.c1) BETWEEN (v0.c1) AND (vt84.c0)), t0.c86, NULL)))) OVER (), SQLITE_VERSION(), ((LENGTH(t0.c88))>>((v0.c0 IN (t0.c86, t0.c86)))) FROM t0, vt84, v0 INDEXED BY i60 WHERE ((~ ((0x3fb69219 IN (0.9452699523251453)))));SELECT ALL (((('-2081804785')%(t0.c1))) ISNULL) FROM v0, vt84 ORDER BY (((((((((t0.c86)AND(v0.c2)))OR(t0.c86)))AND(vt84.c0)))OR(v0.c0)) IN (((((v0.c0)AND(t0.c2)))AND(v0.c0)), t0.c2 COLLATE BINARY)) DESC  NULLS LAST;SELECT ALL ((MIN(v0.c1, t0.c88))%(CASE t0.c88  WHEN vt84.c0 THEN t0.c2 WHEN v0.c2 THEN v0.c2 WHEN t0.c86 THEN NULL ELSE t0.c86 END)) FROM vt84 WHERE (((((~ (NULL)), ((0.03383684037275614)+('')), CASE 'cdDr'  WHEN 0.6679366014499938 THEN 0.16853676095847436 ELSE 0x51eab901 END))>((((1409131568)>=(x'')), (((('-1211521508')OR(NULL)))OR(NULL)), ((NULL) NOT BETWEEN (NULL) AND ('%J'))))));SELECT DISTINCT ((((((t0.c1)<<(t0.c1)))OR(0.8664578570608183)))OR(CASE t0.c2  WHEN t0.c1 THEN t0.c2 WHEN v0.c1 THEN v0.c1 WHEN 0.05244238892006314 THEN v0.c0 ELSE x'0550' END)) FROM v0, t0, vt84; -- 0ms;
SELECT ALL x'' FROM v0, t0 WHERE ((('644025773' COLLATE RTRIM) NOT BETWEEN ((+ (x''))) AND (('-1651929413' IN ())))); -- 0ms;
SELECT ((CAST(v0.c2 AS REAL)) BETWEEN (t0.c88) AND (((0xffffffffc338a118)AND(t0.c88)))) FROM vt84, v0 WHERE ((((('kR3ṏ^}m')IS NOT(NULL))) IS TRUE));SELECT (((- (vt84.c0))) NOTNULL) FROM t0, vt84, v0 WHERE ((NOT (IFNULL('-463553077', 0.22636186753282528)))); -- 0ms;
SELECT (+ (((t0.c86)&(t0.c1)))) FROM vt84;SELECT DISTINCT ((t0.c2)<<(0.47624060368063315)) COLLATE BINARY FROM t0, vt84 WHERE (NULL); -- 0ms;
SELECT ALL ((CASE WHEN t0.c1 THEN vt84.c0 ELSE t0.c1 END) NOT BETWEEN ((t0.c2 IN ())) AND (((((t0.c86)OR(v0.c0)))AND(v0.c2)))) FROM vt84 WHERE (((((x'')-(NULL)))IS(x'')));SELECT DISTINCT (~ (((t0.c2)*(vt84.c0)))), ((t0.c1)OR(vt84.c0)) COLLATE RTRIM COLLATE RTRIM, CASE WHEN vt84.c0 THEN CASE WHEN t0.c1 THEN v0.c1 WHEN t0.c2 THEN t0.c2 WHEN t0.c2 THEN v0.c0 END END FROM t0, vt84 WHERE ((((x'')LIKE(x'')) IN ())) GROUP BY (((v0.c2)) NOT BETWEEN ((((v0.c0)||(t0.c88)))) AND ((v0.c1))) HAVING (+ (t0.c2));SELECT DISTINCT ((CASE vt84.c0  WHEN t0.c2 THEN v0.c2 END) NOT BETWEEN (((v0.c1) ISNULL)) AND (CAST(t0.c86 AS NUMERIC))) FROM v0, vt84, t0 WHERE (NULL); -- 1ms;
SELECT DISTINCT (((t0.c86 IN (v0.c2, t0.c88))) IS FALSE) FROM v0 WHERE (x'0557');SELECT DISTINCT ((t0.c86)>=(t0.c86)) COLLATE RTRIM FROM t0, vt84, v0; -- 0ms;
SELECT ALL CAST('-639337923' AS INTEGER) FROM t0, vt84 WHERE ((((NULL COLLATE BINARY, (((0.3803913366790842))<=((x''))), (NOT (NULL))))!=((((((0.9295576884449359)OR(x'')))OR(x'')), 'S堓' COLLATE BINARY, 0.27263341135302244)))); -- 0ms;
SELECT ALL ((((((t0.c86)<<(v0.c0)))OR(CAST(v0.c2 AS TEXT))))AND((+ (t0.c88)))) FROM t0, v0, vt84 WHERE (((((CASE WHEN x'' THEN x'9f29' END)AND((((-2.23257418E8)) NOT BETWEEN ((0Xffffffff9322a8d5)) AND ((NULL))))))OR(((0.7794971520400128)OR(-412306795))))); -- 0ms;
SELECT DISTINCT ((v0.c0 IN ()) IN ()), ((((v0.c1)<=(t0.c88))) NOT BETWEEN (UNLIKELY(t0.c86)) AND (t0.c88)), ((CASE vt84.c0  WHEN v0.c2 THEN v0.c1 END) NOT BETWEEN (((vt84.c0)/(t0.c1))) AND ((+ (t0.c86)))) FROM v0, vt84, t0 ORDER BY CASE WHEN v0.c1 THEN v0.c2 ELSE t0.c1 END COLLATE BINARY  NULLS FIRST; -- 0ms;
SELECT (((v0.c0)) NOT BETWEEN ((COALESCE(vt84.c0, vt84.c0, v0.c1, t0.c86))) AND (((- (t0.c1))))) FROM vt84, v0 NOT INDEXED, t0; -- 1ms;
SELECT ALL ((((CAST(t0.c86 AS REAL))AND(NULL)))OR((~ (v0.c1)))) FROM t0, v0; -- 0ms;
SELECT MIN(CASE WHEN t0.c88 THEN t0.c2 END COLLATE RTRIM) FROM t0, vt84 WHERE ((((((NULL)OR(NULL)))OR('1905042318')) IN ())); -- 0ms;
SELECT ALL (((v0.c2) IS FALSE) IN (t0.c88)) FROM t0, v0 WHERE ((((NULL IN ())) NOT BETWEEN (((((NULL)AND(0.3795909389016774)))AND('2069224810'))) AND ((- (NULL))))) ORDER BY PRINTF(t0.c2) COLLATE NOCASE  NULLS FIRST, CAST(-0.0 AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT ALL PERCENT_RANK() OVER () FROM vt84, t0 WHERE (CASE 'Eo' COLLATE NOCASE  WHEN ((0.682788700375848)|(-4.12306795E8)) THEN ((NULL) IS FALSE) ELSE NULL END); -- 0ms;
SELECT ((CAST(vt84.c0 AS REAL))||(((vt84.c0) NOT BETWEEN (t0.c88) AND (v0.c0)))), (((t0.c2 IN (v0.c0))) IS FALSE), v0.c1 FROM vt84, v0;SELECT ALL CASE v0.c1 COLLATE BINARY  WHEN ((t0.c1) NOTNULL) THEN ((t0.c1)>>(-4.32878097E8)) WHEN ((vt84.c0) BETWEEN (v0.c1) AND (t0.c2)) THEN CAST(t0.c86 AS TEXT) WHEN v0.c2 COLLATE RTRIM THEN ((t0.c86) NOT NULL) END, ((LIKELY(v0.c2)) BETWEEN (v0.c0 COLLATE BINARY) AND (t0.c86)), vt84.c0 FROM vt84, v0, t0 GROUP BY ((NULL)||((NOT (t0.c1)))), t0.c1 COLLATE BINARY, (((NULL, CASE vt84.c0  WHEN v0.c1 THEN t0.c2 END, vt84.c0))=((v0.c1 COLLATE BINARY, (t0.c88 IN ('1264247357')), ((v0.c2)LIKE(t0.c2))))); -- 0ms;
SELECT ALL (((v0.c2 IN (t0.c1))) NOT BETWEEN (((v0.c1) NOT NULL)) AND (((((((((v0.c1)OR(t0.c2)))AND(v0.c2)))AND(x'')))OR(v0.c1)))), (((((((((- (t0.c2)))OR(COUNT(t0.c88))))OR(CASE vt84.c0  WHEN v0.c2 THEN t0.c2 WHEN t0.c88 THEN t0.c88 WHEN 0.12339070731571289 THEN t0.c1 END)))OR(LENGTH(v0.c1))))OR(t0.c88)), x'', t0.c88, 'v2A15' FROM t0, vt84 WHERE ((NOT ((('1667544583')AND(0.73474767526004)))));SELECT DISTINCT ((json_extract(v0.c2, v0.c0)) BETWEEN (((vt84.c0) IS FALSE)) AND (ABS(DISTINCT v0.c1))), 0.030635946157543503, ((json_valid(t0.c1)) IS FALSE) FROM vt84 NATURAL JOIN t0;SELECT DISTINCT (((((NOT (v0.c0)))AND(COUNT(v0.c1))))AND(((v0.c2)IS NOT(v0.c0)))) FROM vt84, t0, v0 ORDER BY ((((((((((t0.c88)OR(t0.c1)))AND(vt84.c0)))AND('W鄎bC{D(<')))OR(v0.c0))) BETWEEN (((t0.c88) BETWEEN (t0.c88) AND (t0.c1))) AND (v0.c1 COLLATE RTRIM)), ((((vt84.c0))<((t0.c2))) IN (x'c0f4', ((((t0.c2)OR(v0.c2)))AND(t0.c88)))) DESC  NULLS FIRST; -- 0ms;
SELECT ALL FIRST_VALUE(QUOTE(((((vt84.c0)AND(NULL)))OR(v0.c1)))) OVER (), v0.c1, NULL FROM t0, vt84, v0 WHERE ((('' IN ()) IN ())); -- 0ms;
SELECT DISTINCT 'F''' COLLATE RTRIM FROM t0, vt84, v0 WHERE (x''); -- 0ms;
SELECT DISTINCT CASE ((t0.c86)<>(t0.c86))  WHEN CAST(0.601888427362203 AS BLOB) THEN ((t0.c86)-(t0.c88)) ELSE (+ (1.371894753E9)) END FROM vt84;SELECT v0.c1 FROM vt84 WHERE (('>1' IN ()));SELECT DISTINCT HEX(DISTINCT v0.c2), ((x'b95c')LIKE((+ (t0.c88)))), (- (((t0.c86) ISNULL))) FROM vt84;SELECT (((1.43243488E9)) BETWEEN ((CAST(v0.c2 AS TEXT))) AND (((~ (t0.c1))))), NTILE(CAST((v0.c2 IN (v0.c0)) AS TEXT)) OVER (), x'aa68', SUM(ABS(v0.c0)), GROUP_CONCAT((vt84.c0 IN ()) COLLATE NOCASE) FROM v0;SELECT DISTINCT ((((t0.c2) IS TRUE)) BETWEEN (((t0.c2)IS NOT(t0.c88))) AND (('Ca' IN ()))), ((t0.c1) IS FALSE), t0.c2 FROM v0, vt84, t0 WHERE ((CASE WHEN 0.766645924278018 THEN 0.7755142434849417 ELSE 'iRR]j^븗㜨' END IN ())) GROUP BY t0.c1 HAVING ((((((v0.c2)AND(v0.c1)))OR(v0.c2)))!=(UNLIKELY(DISTINCT t0.c88))); -- 0ms;
SELECT DISTINCT LAST_VALUE(((((((v0.c2)|(t0.c86)))AND(((((v0.c0)AND(t0.c88)))AND(t0.c88)))))AND(((t0.c1) BETWEEN (t0.c1) AND (v0.c0))))) OVER () FROM vt84, t0, v0 WHERE ((((((0.1482281477696641 IN ()))AND((((((((('716660066')AND('')))AND('0.3196229839381699')))OR(x'')))AND('X苓YUaz2a')))))AND((NULL IN ())))); -- 0ms;
SELECT CAST(((t0.c2)>=(v0.c1)) AS TEXT) FROM t0, v0, vt84 WHERE (((((0.30821633389773884)) NOT BETWEEN (('-657175788')) AND (('4^s뻽kO5n'))) IN ())); -- 0ms;
SELECT CAST(COUNT(t0.c88) AS BLOB) FROM t0; -- 0ms;
SELECT DISTINCT (((((t0.c88, -1.01969892E9, v0.c0)) BETWEEN ((v0.c2, t0.c88, t0.c86)) AND ((t0.c2, t0.c2, v0.c1)))) NOT BETWEEN (((t0.c88)*(t0.c1))) AND (v0.c0)), CAST((((t0.c1, t0.c2, t0.c86))<((t0.c1, vt84.c0, t0.c2))) AS NUMERIC), ((((((((((((t0.c88)AND(t0.c88)))AND(v0.c2)))OR(v0.c1)))AND(vt84.c0)))OR(CAST(v0.c2 AS TEXT))))AND(((v0.c2)<=(v0.c2)))) FROM vt84, v0 WHERE (((CAST(0.7795051672501392 AS TEXT))AND((('H稲䴚')GLOB('-2029168857')))));SELECT ALL (((v0.c2))=((vt84.c0))) COLLATE NOCASE FROM vt84 WHERE (CASE ((NULL)-(0.5280930130613026))  WHEN (0.2094538973884572 IN ()) THEN ((NULL) NOT NULL) ELSE (-9.1297134E7 IN (NULL)) END) ORDER BY t0.c88 DESC, (((t0.c1))!=((t0.c2))) ASC  NULLS LAST LIMIT 827844586 OFFSET 2140283201;SELECT DISTINCT CASE (v0.c2 IN (v0.c2))  WHEN CAST(v0.c2 AS REAL) THEN CAST(t0.c86 AS NUMERIC) WHEN '-2144814389' THEN ((t0.c86)-(t0.c2)) WHEN CASE t0.c88  WHEN v0.c2 THEN v0.c1 ELSE t0.c1 END THEN CAST(t0.c1 AS NUMERIC) END FROM t0 WHERE (CASE -7.33850704E8  WHEN CASE x''  WHEN 'P1 Yu' THEN '+4H' ELSE NULL END THEN json(x'77a9') WHEN ((x'') IS FALSE) THEN ((NULL)%(NULL)) WHEN (('1179970835')AND('-934612318')) THEN ((NULL)IS NOT('L*foqV')) WHEN -1.693788271E9 THEN (((('-94639311')OR(NULL)))OR(x'')) WHEN (((NULL))>=((NULL))) THEN (((NULL)) BETWEEN ((x'')) AND ((NULL))) ELSE '-1458268736' COLLATE NOCASE END);SELECT ALL SUM((t0.c88 IN ())) FROM t0, vt84 WHERE ((((NULL IN ()))>((((x'6a19')) NOT BETWEEN ((NULL)) AND (('282626672')))))); -- 0ms;
SELECT DISTINCT (+ (((((v0.c0)OR(t0.c1)))AND(v0.c2)))) FROM vt84, v0;SELECT DISTINCT (((v0.c2)*(x'')) IN (CAST(vt84.c0 AS NUMERIC), CAST(v0.c0 AS NUMERIC))) FROM v0, vt84 WHERE (((((((((NULL COLLATE BINARY)AND((- (NULL)))))AND(NULL COLLATE NOCASE)))OR('76441559')))OR(PRINTF(x'9746', '-2145977859', '233011353')))); -- 0ms;
SELECT ALL (v0.c0 IN ()) FROM vt84, t0 WHERE ((((('')OR(NULL)))OR(0X1efb8871)) COLLATE RTRIM); -- 0ms;
SELECT (((+ (t0.c1)))>(((v0.c1) NOT BETWEEN (t0.c2) AND (t0.c2)))) FROM t0 WHERE ((((0.2647879718672499 IN ()))OR(0.16563308765554496))) ORDER BY ((highlight(t0.c86, t0.c2, vt84.c0, v0.c1))||(((t0.c88) NOTNULL)))  NULLS FIRST;SELECT json_array_length((v0.c0 IN (vt84.c0, NULL)), ((t0.c2)||(v0.c0))), ((((((t0.c88)AND(t0.c1)))AND(v0.c0)))-(CASE t0.c88  WHEN '1202535156' THEN t0.c2 WHEN vt84.c0 THEN t0.c2 WHEN t0.c88 THEN t0.c86 ELSE t0.c2 END)), NTH_VALUE(0.6736677400581182, ((((x'')OR(t0.c1 COLLATE RTRIM)))OR(((t0.c2) ISNULL)))) OVER (), (((((~ (t0.c86)))AND(((t0.c2) NOT NULL))))AND(x'')), CASE WHEN '1587983445' THEN v0.c1 WHEN '-1793403022' THEN AVG(t0.c1) WHEN 0.4463711411222807 THEN json_array_length(vt84.c0) ELSE ((v0.c0)+(t0.c88)) END FROM vt84, t0, v0; -- 0ms;
SELECT DISTINCT json_patch(((v0.c1) IS TRUE), NULL), 0X63103849, ((((v0.c1)/(t0.c88)))-((t0.c2 IN ()))) FROM vt84;SELECT DISTINCT (NOT (t0.c88)), t0.c86, (- (TRIM(DISTINCT t0.c1, v0.c2))) FROM t0, vt84, v0 ORDER BY ((((t0.c2)<=(t0.c88)))LIKE(((t0.c1) NOT BETWEEN (vt84.c0) AND (t0.c86)))) ASC, ((CAST(t0.c1 AS BLOB)) IS FALSE); -- 0ms;
SELECT ALL LAG(CASE WHEN NULL THEN LIKELIHOOD(DISTINCT vt84.c0, 0.39912326620196936) ELSE (((vt84.c0, vt84.c0, vt84.c0)) BETWEEN ((vt84.c0, vt84.c0, vt84.c0)) AND ((vt84.c0, vt84.c0, vt84.c0))) END, LOWER(((vt84.c0)<(vt84.c0))), (vt84.c0 IN ())) OVER () FROM vt84 WHERE (x'ec66f40c'); -- 0ms;
SELECT DISTINCT '740069646', ((TYPEOF(t0.c1))=(((t0.c2)>(v0.c2)))), ((t0.c88) BETWEEN (v0.c2) AND (v0.c0)) COLLATE NOCASE FROM vt84, v0, t0; -- 0ms;
SELECT DISTINCT (('')GLOB(v0.c1)) COLLATE BINARY FROM v0 WHERE ((- ('-470882648' COLLATE NOCASE))) GROUP BY ((((((((((t0.c88) BETWEEN (x'44163dd9') AND (t0.c88)))OR((v0.c0 IN ()))))AND(t0.c2 COLLATE BINARY)))AND(((t0.c86)!=(x'f8c3')))))OR(COALESCE(DISTINCT t0.c2, t0.c1, t0.c86, v0.c0))), ((((t0.c2) BETWEEN (vt84.c0) AND (v0.c2)))IS(t0.c2 COLLATE BINARY)), CAST(t0.c1 COLLATE RTRIM AS TEXT);SELECT SUM(((v0.c0) NOT NULL)) OVER () FROM v0, t0; -- 0ms;
SELECT DISTINCT UPPER(DISTINCT (((t0.c88))>((v0.c2)))) FROM vt84, t0, v0; -- 0ms;
SELECT DISTINCT MAX(((t0.c86)>=(v0.c1))) FROM v0, t0; -- 0ms;
SELECT DISTINCT json_array(NULL, v0.c1) COLLATE NOCASE, (((t0.c88)) BETWEEN ((((v0.c0)IS NOT(v0.c2)))) AND ((LOWER(DISTINCT t0.c86)))), ((((((((v0.c2)OR(v0.c2)))AND(t0.c86)))OR(t0.c86 COLLATE BINARY)))AND(HEX(1.769668544E9))) FROM t0;SELECT ALL t0.c86 FROM t0; -- 0ms;
SELECT ((CAST(NULL AS BLOB))LIKE(COUNT(t0.c86))) FROM v0 NOT INDEXED, t0 WHERE (CASE COALESCE(DISTINCT x'', 0Xfffffffff39a1ffb, '-1507602980', x'', 0.7373902414331194, '+[')  WHEN (x'd212' IN ()) THEN ((((((((0.7484423223830035)AND(NULL)))OR('2102197793')))AND(0.26439889224216295)))OR('-938097871')) END); -- 0ms;
SELECT ((0Xffffffffd31b7059)>>('')) FROM v0; -- 1ms;
SELECT MAX((t0.c2 IN ())) FROM t0 WHERE ((CASE NULL  WHEN 0.9224252017510065 THEN '-J' END IN (((((x'fb65')OR('0.5931667832639866')))AND(x'')), ((0Xffffffffdd666be5) BETWEEN (0.01912433110758427) AND (0.9549129544661729))))) ORDER BY (((NOT (t0.c2)))>(CASE vt84.c0  WHEN v0.c0 THEN v0.c1 ELSE v0.c2 END))  NULLS FIRST, ((((CASE WHEN t0.c88 THEN v0.c0 WHEN t0.c88 THEN 2.06922481E9 WHEN t0.c2 THEN vt84.c0 ELSE t0.c88 END)AND((NOT ('1897840062')))))AND(CASE WHEN v0.c0 THEN v0.c2 WHEN t0.c1 THEN v0.c2 WHEN t0.c86 THEN 0.39706165905381463 END)) ASC  NULLS FIRST;SELECT DISTINCT MAX(STRFTIME(t0.c2, vt84.c0, t0.c2)) FROM v0, t0, vt84 WHERE (((((CAST('{' AS TEXT))AND(CAST(0.3652576970921273 AS TEXT))))AND(((NULL) NOT BETWEEN (-2123182118) AND (NULL))))); -- 0ms;
SELECT ALL (((t0.c1, 0xffffffff98d8902b, t0.c86, t0.c88, v0.c2)) NOT BETWEEN ((((t0.c88)LIKE(t0.c2)), ((v0.c0)AND(t0.c88)), ((t0.c86) NOT BETWEEN (v0.c2) AND (t0.c88)), 1.68642491E9, v0.c0)) AND (((+ (t0.c2)), NULL, ((t0.c1) IS FALSE), NULL, ((((t0.c86)OR(v0.c1)))AND(t0.c1))))) FROM v0, t0, vt84 WHERE (CAST((x'' IN (NULL)) AS INTEGER)); -- 0ms;
SELECT (((t0.c1)) BETWEEN ((CASE WHEN t0.c2 THEN t0.c88 WHEN vt84.c0 THEN t0.c1 WHEN '1013351123' THEN t0.c88 ELSE v0.c0 END)) AND ((((v0.c2)|(t0.c86))))) FROM t0 WHERE ((('' IN ()) IN ()));SELECT ((((((t0.c2)AND(t0.c2)))OR(t0.c88))) BETWEEN (((x'')<=(t0.c88))) AND (x'')), NULL, TRIM(t0.c88) COLLATE BINARY FROM v0 ORDER BY CASE WHEN v0.c0 THEN ((((((((t0.c1)AND(t0.c86)))AND(t0.c1)))OR(v0.c1)))OR(t0.c2)) END DESC;SELECT ALL (((((v0.c0)) NOT BETWEEN ((v0.c1)) AND ((v0.c2)))) ISNULL) FROM vt84, t0;SELECT DISTINCT (((t0.c88 IN ()))<(v0.c2 COLLATE NOCASE)) FROM t0 WHERE ((ABS(DISTINCT x'') IN ()));SELECT DISTINCT AVG(json_object(vt84.c0, t0.c88)) FROM t0, vt84, v0 WHERE (CASE WHEN ((0Xfffffffffeaf0a8c)+(x'')) THEN CAST(x'1a10' AS TEXT) ELSE ((NULL)>(0.2012165379999633)) END) LIMIT -1863277822 OFFSET -2139121730; -- 0ms;
SELECT ALL (((v0.c2)|(vt84.c0)) IN ()) FROM vt84; -- 0ms;
SELECT ALL (+ (v0.c1)) COLLATE BINARY FROM vt84 WHERE ((('<ZLw')<=(CAST('614219950' AS TEXT)))) GROUP BY (((t0.c86 IN (v0.c2)))LIKE((((v0.c2)) BETWEEN ((v0.c1)) AND ((t0.c86))))), ((t0.c86)IS NOT(((((((((v0.c0)OR(v0.c0)))OR(t0.c86)))OR(-2039007872)))OR(t0.c88)))), ((((t0.c1) BETWEEN (v0.c1) AND (v0.c1)))OR((NOT (t0.c1)))) HAVING t0.c88;SELECT DISTINCT (((((- (v0.c1)))OR(((x'') BETWEEN (vt84.c0) AND (t0.c1)))))OR(((((v0.c1)OR(t0.c88)))AND(v0.c0)))) FROM v0 WHERE ((((x'51df')) BETWEEN (((((('*,')AND(x'')))AND(x'')))) AND ((x'42658e22'))));SELECT ALL (((vt84.c0)) BETWEEN ((((NULL) IS FALSE))) AND ((((v0.c0)IS NOT(t0.c86))))) FROM v0, vt84, t0 WHERE ((((+ (x''))) BETWEEN (((0Xffffffffda6fa0ca)<=(x'd9019cf4'))) AND (CAST('' AS INTEGER)))) ORDER BY ((0.3329517566179254 COLLATE NOCASE)<>(((((t0.c86)AND(v0.c0)))OR(t0.c86)))) DESC  NULLS LAST; -- 0ms;
SELECT DISTINCT json_quote(x'') FROM v0, t0 WHERE ((('-1324800186' COLLATE RTRIM) BETWEEN ('-463553077' COLLATE BINARY) AND (((0.8866281363386289)%(x''))))); -- 0ms;
SELECT ALL ((v0.c2) ISNULL) COLLATE BINARY FROM vt84 WHERE (((CAST(0.6588946112343341 AS BLOB))/((~ (0.692834483902856)))));SELECT ((((v0.c1) BETWEEN (t0.c86) AND (x''))) BETWEEN (GROUP_CONCAT(t0.c1)) AND (((NULL)==('O?\nX-Je,')))), ((((vt84.c0))==((t0.c2))) IN (((t0.c86)IS NOT(t0.c86)))), t0.c86, NTH_VALUE(((0.011986503620385891) BETWEEN ((((v0.c1))>=((t0.c1)))) AND ((~ (v0.c1)))), ((x'528a')<(v0.c2 COLLATE BINARY))) OVER (), t0.c2 FROM t0, v0 GROUP BY LIKELIHOOD(DISTINCT v0.c2, 0.48778831736097783) COLLATE BINARY HAVING (((MIN(v0.c1)))<>(('(')));SELECT ALL LEAD((((((vt84.c0, v0.c1, v0.c0)) BETWEEN ((0.6673524578885603, v0.c0, v0.c1)) AND ((v0.c2, vt84.c0, v0.c0)))) NOT NULL), ((CHAR(v0.c2)) BETWEEN (((v0.c1) IS FALSE)) AND (((((NULL)AND(v0.c2)))AND(vt84.c0)))), CAST(x'' AS INTEGER)) OVER (), TOTAL(CASE WHEN v0.c0 THEN t0.c1 ELSE t0.c86 END), ((COUNT(v0.c2))*((((t0.c86)) NOT BETWEEN ((v0.c1)) AND ((t0.c86))))) FROM vt84, v0;SELECT DISTINCT AVG(((vt84.c0) ISNULL)) OVER () FROM v0 GROUP BY (+ (CASE WHEN t0.c1 THEN vt84.c0 WHEN v0.c0 THEN '' WHEN vt84.c0 THEN t0.c86 END)) HAVING CAST(NULLIF(DISTINCT v0.c2, t0.c88) AS NUMERIC);SELECT ((((((((((t0.c1)OR(v0.c2)))AND(t0.c88)))OR(t0.c88)))OR(t0.c1))) NOT NULL) FROM v0;SELECT ALL (((v0.c1)) BETWEEN ((((v0.c2)&(t0.c88)))) AND ((CAST(v0.c1 AS INTEGER)))) FROM vt84, t0;SELECT ALL LIKELY((t0.c1 IN ())) FROM t0, vt84, v0 WHERE ((TOTAL_CHANGES() IN ())) LIMIT 1113435559 OFFSET -425325023; -- 0ms;
SELECT DISTINCT ('0.9600116063709745' IN ()), CAST(v0.c2 COLLATE BINARY AS INTEGER), (((((t0.c88) NOT NULL)))<((CASE WHEN v0.c1 THEN v0.c1 END))), NULL, AVG(((v0.c1)>>(1355047609))) OVER () FROM v0 GROUP BY (((- (vt84.c0)))-((~ (t0.c86)))), (((((v0.c0)-(vt84.c0))))!=((((v0.c2)AND(t0.c88))))), ((t0.c2) IS TRUE) HAVING ((((t0.c86)|(v0.c1)))||((v0.c0 IN ())));SELECT DISTINCT '1432434880' FROM vt84, t0 WHERE (CAST(((x'') NOT NULL) AS REAL)) ORDER BY ((((((v0.c0) ISNULL))AND(((t0.c1) IS FALSE))))OR(((t0.c2) BETWEEN (t0.c2) AND (t0.c86)))) ASC  NULLS LAST;SELECT DISTINCT (((((t0.c1) NOT BETWEEN (v0.c1) AND (t0.c1))))==((((v0.c0) BETWEEN (t0.c2) AND (v0.c2))))), ((((vt84.c0) IS FALSE))||(((((((((vt84.c0)AND(NULL)))AND(t0.c88)))OR(t0.c88)))AND('Jh/ꐘ|z')))), CASE CASE v0.c2  WHEN t0.c2 THEN v0.c2 ELSE vt84.c0 END  WHEN ((((v0.c2)OR('390704981')))AND(v0.c0)) THEN CASE v0.c1  WHEN v0.c0 THEN v0.c0 ELSE v0.c1 END ELSE (((v0.c0))>=((t0.c86))) END FROM v0 WHERE (((((x'67148c2c' COLLATE BINARY)AND(CAST('-1540412619' AS TEXT))))OR((('-2130479566') BETWEEN ('f <[5GC&') AND (-2.105965941E9)))));SELECT DISTINCT (((CAST(vt84.c0 AS TEXT)))<=((((v0.c1)<>('204531107'))))), ((((t0.c86) BETWEEN (v0.c2) AND (v0.c0))) NOT NULL), v0.c2 FROM v0, t0 WHERE (((((((x'e84c') NOT BETWEEN ('1954288987') AND (NULL)))OR(STRFTIME(x'daed', 'Fh', 0.1672183994615456))))AND(CASE x'37f5'  WHEN x'cfe7' THEN x'' ELSE NULL END)));SELECT DISTINCT ((CAST(NULL AS REAL))-(CASE WHEN v0.c2 THEN t0.c1 END)), ((((((t0.c86) BETWEEN (vt84.c0) AND (v0.c1)))AND(((((0.4675959179086725)AND('wj')))OR(v0.c1)))))OR(COUNT(t0.c86))), ((NULLIF(DISTINCT vt84.c0, v0.c0)) IS FALSE) FROM t0 ORDER BY x''  NULLS FIRST;SELECT DISTINCT COUNT(*) FROM vt84, v0 ORDER BY (~ ((NULL IN (v0.c2))))  NULLS LAST, (((((t0.c86)IS(t0.c88))))<((((v0.c1)||(t0.c86))))) DESC, ((((v0.c1)AND(1.84825218E9)))*((- (v0.c0))));SELECT DISTINCT (~ (((t0.c2)OR(v0.c2)))) FROM v0 WHERE (HEX(DISTINCT ((NULL) ISNULL))) LIMIT -1173306629 OFFSET 1178945387;SELECT (((t0.c2) NOT BETWEEN (t0.c86) AND (vt84.c0)) IN ((((v0.c1))>((t0.c1))))) FROM t0, vt84, v0 WHERE (((TYPEOF(DISTINCT NULL))<(NULL COLLATE NOCASE))); -- 0ms;
SELECT (((v0.c2)) BETWEEN ((LAST_INSERT_ROWID())) AND ((((v0.c0) NOT BETWEEN (v0.c0) AND (t0.c86))))) FROM vt84 GROUP BY t0.c2;SELECT DISTINCT ((v0.c1 COLLATE BINARY)|((vt84.c0 IN ()))) FROM t0;SELECT ((CASE WHEN vt84.c0 THEN t0.c1 END)||(t0.c1 COLLATE RTRIM)) FROM vt84, v0, t0 NOT INDEXED; -- 0ms;
SELECT DISTINCT ((x'75484a84')||(((((((((v0.c1)OR(t0.c88)))OR(1981747116)))OR(t0.c88)))OR(vt84.c0)))) FROM v0, vt84 WHERE ((x'' COLLATE NOCASE IN ()));SELECT DISTINCT (+ ((((x'', v0.c1, v0.c1)) BETWEEN ((v0.c2, t0.c2, v0.c0)) AND ((t0.c88, t0.c1, t0.c88))))), x'cb4a', (NOT (((t0.c2)GLOB(t0.c88)))), (~ (((((((((v0.c1)OR(t0.c2)))OR(v0.c1)))OR(t0.c1)))OR(v0.c2)))), (NOT (vt84.c0)) FROM t0, v0 WHERE ((+ (CAST('*{nn' AS TEXT))));SELECT DISTINCT (CASE WHEN t0.c86 THEN v0.c2 END IN (((t0.c1)>(vt84.c0)), ((v0.c1)GLOB(t0.c2)))) FROM t0, vt84;SELECT DISTINCT (((+ (v0.c0)))<=(((((((((vt84.c0)AND(0.15193372863632237)))OR(x'')))AND(v0.c0)))OR(t0.c1)))) FROM v0, t0 WHERE (0xffffffffab42106e);SELECT ALL (((t0.c1, -1.336992131E9, v0.c0)) NOT BETWEEN ((ABS(v0.c2), v0.c1 COLLATE BINARY, CAST(v0.c2 AS INTEGER))) AND ((SUM(0Xffffffff970f032e), (NOT (t0.c1)), 1861764496))), (SUBSTR(t0.c1, vt84.c0) IN ()), v0.c2, (((vt84.c0)) BETWEEN (((((NULL)) BETWEEN ((x'')) AND ((v0.c1))))) AND (((((t0.c2)) BETWEEN ((v0.c2)) AND ((t0.c1)))))), NULL FROM vt84, v0 NOT INDEXED, t0; -- 0ms;
SELECT ALL ((t0.c2 COLLATE RTRIM) BETWEEN (((v0.c0) IS FALSE)) AND ((((v0.c1, t0.c2, vt84.c0))=((NULL, t0.c2, v0.c2))))), vt84.c0, ((((((t0.c86)OR(x'')))OR(t0.c2))) NOTNULL), CAST(t0.c1 AS TEXT), t0.c1 FROM v0 WHERE ((((NOT (NULL)))||((- (0.44847929858397995)))));SELECT DISTINCT (((v0.c2)) NOT BETWEEN ((t0.c88)) AND ((COUNT(*)))) FROM v0, t0; -- 0ms;
SELECT DISTINCT CASE WHEN (v0.c0 IN (v0.c0)) THEN (((v0.c1)) NOT BETWEEN ((t0.c86)) AND ((t0.c1))) END FROM vt84;SELECT DISTINCT ((((((v0.c0)>=(v0.c0)))OR((v0.c1 IN ()))))OR(((t0.c2) BETWEEN (v0.c0) AND (vt84.c0)))) FROM vt84, t0;SELECT SUM((((v0.c0)) BETWEEN ((t0.c86)) AND ((t0.c2)))) OVER (), (t0.c1 IN (t0.c86)) COLLATE NOCASE COLLATE NOCASE, COUNT(*) OVER () FROM vt84, t0, v0 WHERE (CAST((+ (NULL)) AS INTEGER)) ORDER BY CAST(x'' AS NUMERIC) ASC  NULLS FIRST; -- 0ms;
SELECT DISTINCT AVG(t0.c1 COLLATE BINARY COLLATE RTRIM) OVER () FROM v0, t0 WHERE (((LIKELIHOOD('I5\n', 0.1921731309767316)) IS TRUE)); -- 0ms;
